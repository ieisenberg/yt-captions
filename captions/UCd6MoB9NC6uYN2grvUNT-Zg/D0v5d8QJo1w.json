[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "um my name is hon J Raman uh I'm from Renta Center and uh speaking along with",
    "start": "880",
    "end": "9040"
  },
  {
    "text": "me is uh arur suan from Flex 7 uh for those of uh uh who you're new uh Renta",
    "start": "9040",
    "end": "16160"
  },
  {
    "text": "Center is a rent own uh uh we're in the rent own business we have about 3,000",
    "start": "16160",
    "end": "21600"
  },
  {
    "text": "stores throughout the country uh dealing with Furniture appliances and uh",
    "start": "21600",
    "end": "28560"
  },
  {
    "text": "computers and suan he's the CEO of flux 7 uh based out of Austin Texas and their",
    "start": "28560",
    "end": "35360"
  },
  {
    "text": "uh uh Amazon partner and before I get started I do",
    "start": "35360",
    "end": "40719"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "want to give a shout out to a large uh Team of both uh uh rental center and",
    "start": "40719",
    "end": "45760"
  },
  {
    "text": "flux 7 without whom this would not have been possible and countless hours uh and",
    "start": "45760",
    "end": "50840"
  },
  {
    "text": "days and nights uh they work to make this happen uh before I go into details on",
    "start": "50840",
    "end": "58320"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "the overall design and architecture we wanted to give you an outline on the",
    "start": "58320",
    "end": "63879"
  },
  {
    "text": "devops uh Evolution at rental center and how that uh came about into the",
    "start": "63879",
    "end": "70360"
  },
  {
    "text": "e-commerce business case and how that evolved into some of the outcomes uh that we uh wanted to achieve and uh",
    "start": "70360",
    "end": "78479"
  },
  {
    "text": "after we'll go into more of the uh design and architecture of the actual sap hybrid",
    "start": "78479",
    "end": "84720"
  },
  {
    "text": "implementation so when we started devops in at Renta Center it was in",
    "start": "84720",
    "end": "91720"
  },
  {
    "start": "85000",
    "end": "85000"
  },
  {
    "text": "2015 there are different schools of thought on how to enable devops at any",
    "start": "91720",
    "end": "97640"
  },
  {
    "text": "company uh there's one school of thought which says you have to have a a have the",
    "start": "97640",
    "end": "104520"
  },
  {
    "text": "devops philosophies built in across it uh on day one there's another school of",
    "start": "104520",
    "end": "109799"
  },
  {
    "text": "thought which says hey you build a core devops center of excellence and then use that to uh get the devop philosophy",
    "start": "109799",
    "end": "117039"
  },
  {
    "text": "across the organization uh we did the latter uh there is no right or wrong answer I think it uh varies with",
    "start": "117039",
    "end": "124200"
  },
  {
    "text": "different organization uh the maturity model uh in agile practices in our case",
    "start": "124200",
    "end": "130679"
  },
  {
    "text": "we started the devops uh Coe early in 2015 that evolved into a uh the first",
    "start": "130679",
    "end": "139879"
  },
  {
    "text": "project uh at AWS uh called our uh van project which",
    "start": "139879",
    "end": "145480"
  },
  {
    "text": "is uh acceptance part of our Acceptance Now business unit and and then somewhere",
    "start": "145480",
    "end": "151519"
  },
  {
    "text": "in middle of 2015 we also launched our first as a service implementation uh",
    "start": "151519",
    "end": "158040"
  },
  {
    "text": "inside the company which we offered uh our elk stack as a service so and then",
    "start": "158040",
    "end": "164120"
  },
  {
    "text": "uh because of the maturity we gained there uh late 2015 early 2016 we had a",
    "start": "164120",
    "end": "171239"
  },
  {
    "text": "very aggressive Target to build our complete e-commerce solution including",
    "start": "171239",
    "end": "176959"
  },
  {
    "text": "all the backend integration in a very short span of 6 months so the that",
    "start": "176959",
    "end": "183200"
  },
  {
    "text": "that's where we'll go into some of the Lessons Learned on how we built upon some of the successes earlier on and uh",
    "start": "183200",
    "end": "191200"
  },
  {
    "text": "later this year we're also going through some of the Oracle RDS uh migration from",
    "start": "191200",
    "end": "196640"
  },
  {
    "text": "an on- premise to uh uh RDS instance in the cloud and as we look forward to 2017",
    "start": "196640",
    "end": "204440"
  },
  {
    "text": "our go goal is to go further evolve into serverless computing",
    "start": "204440",
    "end": "210239"
  },
  {
    "text": "so as uh just a brief overview on the first project we built at AWS was for",
    "start": "210239",
    "end": "216000"
  },
  {
    "text": "our Acceptance Now business Unit A B2B portal which will enable our partners uh",
    "start": "216000",
    "end": "221480"
  },
  {
    "text": "and there was a lot of pii and PCI uh data involved so we had to build an",
    "start": "221480",
    "end": "226879"
  },
  {
    "text": "architecture which will support all of the uh uh industry controls and audits",
    "start": "226879",
    "end": "234120"
  },
  {
    "text": "that go with uh any kind of uh data that we uh carry so we had to build security",
    "start": "234120",
    "end": "241439"
  },
  {
    "text": "as a core focus in everything we build and we started off with basic uh using",
    "start": "241439",
    "end": "247840"
  },
  {
    "text": "least privilege access and things like encryption at rest and encryption at",
    "start": "247840",
    "end": "253319"
  },
  {
    "text": "motion and of course availability is also one of the very key components uh",
    "start": "253319",
    "end": "258600"
  },
  {
    "text": "including uh multi- region capability and autoscaling and there's for the first",
    "start": "258600",
    "end": "264240"
  },
  {
    "text": "time uh early uh last year when we finished the infrastru structure code so",
    "start": "264240",
    "end": "270759"
  },
  {
    "text": "this is the first time we actually use cloud formation templates to help build uh uh the complete infrastructure for",
    "start": "270759",
    "end": "277120"
  },
  {
    "text": "the one pan project and we also started using anible playbooks for our post- deployment",
    "start": "277120",
    "end": "284440"
  },
  {
    "start": "284000",
    "end": "284000"
  },
  {
    "text": "automation that then resulted in the next uh need for the business as we're",
    "start": "284440",
    "end": "291199"
  },
  {
    "text": "going through a digital transformation the business wanted a complete 360Â° view",
    "start": "291199",
    "end": "296919"
  },
  {
    "text": "of the customer and also be able to enable able some self-service capabilities and ability for customers",
    "start": "296919",
    "end": "304199"
  },
  {
    "text": "to rent online for the very first time so in order to achieve some of these",
    "start": "304199",
    "end": "309440"
  },
  {
    "text": "business goals we selected sap hybris as a platform of choice and for those who",
    "start": "309440",
    "end": "315240"
  },
  {
    "text": "are not very familiar with sap hybrid it is a state full application so we had to",
    "start": "315240",
    "end": "321360"
  },
  {
    "text": "take a state full application and make it stateless so a lot of the uh",
    "start": "321360",
    "end": "326840"
  },
  {
    "text": "explanations with arter will go into are how do you take some of those uh",
    "start": "326840",
    "end": "331880"
  },
  {
    "text": "applications where there is a state full cluster but we had to work around some of that challenges to be able to take",
    "start": "331880",
    "end": "338479"
  },
  {
    "text": "the full power of AWS and the autoscaling features because once you have a state full application you can't",
    "start": "338479",
    "end": "344160"
  },
  {
    "text": "really autoscale right so we had to engineer some of the new uh methods to",
    "start": "344160",
    "end": "349479"
  },
  {
    "text": "be able to achieve that autoscaling some of the goals we wanted",
    "start": "349479",
    "end": "355840"
  },
  {
    "text": "to achieve uh for this deployment there's some business goals and also we added some it goals",
    "start": "355840",
    "end": "363600"
  },
  {
    "text": "to accelerate the uh transformation we're doing at R Center so from a basic",
    "start": "363600",
    "end": "369880"
  },
  {
    "text": "business goal the site we had to build was to support 2 million users right uh",
    "start": "369880",
    "end": "375960"
  },
  {
    "text": "that's our current activity but it also had to scale to support Black Friday and",
    "start": "375960",
    "end": "382759"
  },
  {
    "text": "uh if if not for a successful black Friday I wouldn't be here today so last week we had a very success Black Friday",
    "start": "382759",
    "end": "390560"
  },
  {
    "text": "because we were able to uh scale to that need and uh another important or obvious",
    "start": "390560",
    "end": "397680"
  },
  {
    "text": "factor for any e-commerce solution is PCI compliance and all the security requirements that go with it uh ha is",
    "start": "397680",
    "end": "405880"
  },
  {
    "text": "another one of those availability High availability including cross region capability are core components of the",
    "start": "405880",
    "end": "414120"
  },
  {
    "text": "architecture these are some of the Core Business uh goals then we added two other components",
    "start": "414120",
    "end": "420759"
  },
  {
    "text": "to make part of the it transformation is uh we used an Agile development practice",
    "start": "420759",
    "end": "427160"
  },
  {
    "text": "for Rapid execution and also we enabled code deployment at the Hybrid Slayer without downtime so uh we able to do um",
    "start": "427160",
    "end": "435680"
  },
  {
    "text": "deployments during the day uh and be able to deliver value to the business faster uh and in a more agile",
    "start": "435680",
    "end": "443440"
  },
  {
    "text": "way so given the overview I'll just hand it over to arur Solan who can go into",
    "start": "443440",
    "end": "449520"
  },
  {
    "text": "into some of the more details and then I'll come back and explain some of the outcomes and uh uh the",
    "start": "449520",
    "end": "457440"
  },
  {
    "text": "conclusion thanks everyone can you all hear me at the back",
    "start": "459240",
    "end": "465319"
  },
  {
    "text": "okay great I just can't tell if the microphone is working until I hear my own voice and I'm not hearing my own",
    "start": "465319",
    "end": "471080"
  },
  {
    "text": "voice here for some reason okay so as Heth mentioned earlier uh my name is",
    "start": "471080",
    "end": "476440"
  },
  {
    "text": "arur suan I'm the CEO and one of the co-founders of aany company by the name of flexx 7 uh we are headquartered in",
    "start": "476440",
    "end": "482919"
  },
  {
    "text": "Austin Texas and the focus of the company is to help com uh organizations",
    "start": "482919",
    "end": "488599"
  },
  {
    "text": "uh the likes of Renta Center make that Journey successfully into the world of devops our typical approach is to uh we",
    "start": "488599",
    "end": "497960"
  },
  {
    "text": "follow the switch Theory so the idea is to help the company create a center of excellence and create some right spots",
    "start": "497960",
    "end": "505520"
  },
  {
    "text": "and from there let the uh success stories by themselves kind of work as",
    "start": "505520",
    "end": "511800"
  },
  {
    "text": "the ignition criteria that will allow other projects and other teams to jump on board so uh the first bright spot if",
    "start": "511800",
    "end": "519320"
  },
  {
    "text": "you will was the van project that um hyon talked about which was the virtual acceptance now and this was one of the",
    "start": "519320",
    "end": "526560"
  },
  {
    "text": "key second projects uh the e-commerce platform itself the approach uh just from a",
    "start": "526560",
    "end": "533839"
  },
  {
    "start": "531000",
    "end": "531000"
  },
  {
    "text": "project management standpoint that we followed was a three-phase approach which is what we typically follow first",
    "start": "533839",
    "end": "540480"
  },
  {
    "text": "start with an architecture assessment uh the goals are to understand the business requirements understand the current",
    "start": "540480",
    "end": "546959"
  },
  {
    "text": "technical State Design the state and then uh create a Sprint plan I do want",
    "start": "546959",
    "end": "554160"
  },
  {
    "text": "to speak a little bit about the Sprint plan because this is a devops project we are not doing development we are not",
    "start": "554160",
    "end": "560560"
  },
  {
    "text": "actually changing the code uh for sap hybris uh however as honth pointed out",
    "start": "560560",
    "end": "566920"
  },
  {
    "text": "there's the infrastructure as coded in addition to that we have uh as a part",
    "start": "566920",
    "end": "573560"
  },
  {
    "text": "of this project and as you will see later security rules being embedded in there as code we have the server",
    "start": "573560",
    "end": "581160"
  },
  {
    "text": "configuration through anable and through Docker files also as code so when all facets of your uh technology delivery",
    "start": "581160",
    "end": "588640"
  },
  {
    "text": "are X as code there's no reason to not follow all the best practices that have",
    "start": "588640",
    "end": "594519"
  },
  {
    "text": "worked so well for the software industry for such a long time so we use the Agile development methodologies for developing",
    "start": "594519",
    "end": "601519"
  },
  {
    "text": "infrastructure uh security policies and uh the server configuration so that's",
    "start": "601519",
    "end": "606760"
  },
  {
    "text": "why when we get to the implementation phase the actual work happens as two we",
    "start": "606760",
    "end": "612279"
  },
  {
    "text": "Sprints another thing worth mentioning specific to this project on that methodology was that the development",
    "start": "612279",
    "end": "618959"
  },
  {
    "text": "development team uh which is was at Renta Center was also working under an",
    "start": "618959",
    "end": "624680"
  },
  {
    "text": "agile methodology with two week Sprints and what we were able to do was basically align the two sprints so that",
    "start": "624680",
    "end": "630880"
  },
  {
    "text": "the devops team was producing the underlying substrate while the development teams were producing the containers if you will that will run on",
    "start": "630880",
    "end": "637800"
  },
  {
    "text": "top of the substrate uh and I'll speak a little more to the details of the architecture uh here in a second and lastly the idea",
    "start": "637800",
    "end": "645480"
  },
  {
    "text": "is to build the center of excellence so there is a knowledge transfer back to the ven center team so that they",
    "start": "645480",
    "end": "651760"
  },
  {
    "text": "can take it from there and the team has been fantastic actually in fact a lot of",
    "start": "651760",
    "end": "656920"
  },
  {
    "text": "the work we're doing here uh stuff that I'll be talking about I can barely take credit for a small fraction of it it's",
    "start": "656920",
    "end": "663000"
  },
  {
    "text": "mostly the work of the rental center team in collaboration with some Engineers from flux",
    "start": "663000",
    "end": "669120"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "7 so from a getting a little technical here uh the big picture uh there are",
    "start": "669120",
    "end": "677000"
  },
  {
    "text": "some key components uh that form this architecture as honth pointed out High",
    "start": "677000",
    "end": "683079"
  },
  {
    "text": "avability uh was a key thing uh low management overhead being able to put",
    "start": "683079",
    "end": "688120"
  },
  {
    "text": "something together very quick quickly all of that kind of points to One Direction which is we wanted to take",
    "start": "688120",
    "end": "693279"
  },
  {
    "text": "advantage of managed Services wherever we can rather than Reinventing the wheel take what's out there take advantage of",
    "start": "693279",
    "end": "700160"
  },
  {
    "text": "it because it lowers The Upfront cost it lowers the ongoing cost so you will actually see that we very heavily used",
    "start": "700160",
    "end": "707000"
  },
  {
    "text": "some of the AWS Services uh to make our job easier upfront and ongoing uh",
    "start": "707000",
    "end": "713120"
  },
  {
    "text": "there's the list is actually significantly longer than this but some of the key ones here include the",
    "start": "713120",
    "end": "718600"
  },
  {
    "text": "contemporary Lambda we were using Cloud front as a CDN uh we were using the AWS",
    "start": "718600",
    "end": "723800"
  },
  {
    "text": "vaav the ECS uh component which is what makes the stock interesting to this",
    "start": "723800",
    "end": "728880"
  },
  {
    "text": "audience because there was a very heavy focus on containers uh we have ECR S3",
    "start": "728880",
    "end": "734600"
  },
  {
    "text": "and then we decided to use uh Amazon a DB so a lot of things going on you're",
    "start": "734600",
    "end": "740000"
  },
  {
    "text": "talking about an sap hybis application which is a was written with a very traditional mindset and bringing in a",
    "start": "740000",
    "end": "746680"
  },
  {
    "text": "lot of these really contemporary Technologies and blend the two to build an architecture that is high",
    "start": "746680",
    "end": "751720"
  },
  {
    "text": "availability Autos scalable and has all of the things you would expect from a good architecture in the year",
    "start": "751720",
    "end": "758760"
  },
  {
    "text": "2016 so this is the diagram of our uh technical architecture I'll start",
    "start": "758839",
    "end": "765160"
  },
  {
    "text": "describing it more from the top left so for the DNS uh we were using Route",
    "start": "765160",
    "end": "771360"
  },
  {
    "text": "53 uh when the users had the DNS resolved they would actually hit a cloud front",
    "start": "771360",
    "end": "777399"
  },
  {
    "text": "distribution uh the the idea was and as uh an architecture that needs to be PCI",
    "start": "777399",
    "end": "784079"
  },
  {
    "text": "audit ready we have the AWS vaap in place that I'll Deep dive into with how",
    "start": "784079",
    "end": "789279"
  },
  {
    "text": "we actually use that in conjunction with Lambda to build the ovas 10 checks uh",
    "start": "789279",
    "end": "795160"
  },
  {
    "text": "that were happening on the Fly uh some static assets being served out of S3 which has been a very traditional use",
    "start": "795160",
    "end": "801600"
  },
  {
    "text": "for Amazon so I won't dive too much into that uh getting into the more meaty and",
    "start": "801600",
    "end": "806720"
  },
  {
    "text": "interesting stuff so everything is inside a virtual private Cloud pretty much a given these",
    "start": "806720",
    "end": "812600"
  },
  {
    "text": "days uh we had a pair of public subnets and a pair of private subnets uh there",
    "start": "812600",
    "end": "818639"
  },
  {
    "text": "not drawn as a pair but uh the note at the top kind of specifies that each one of these subnets that you see here",
    "start": "818639",
    "end": "824800"
  },
  {
    "text": "really are two subnets just assume in the third dimension to cover the multi-az uh aspect of things and also",
    "start": "824800",
    "end": "831759"
  },
  {
    "text": "means the fact that weable to draw it like this every single component that you see up there is multi-az if an",
    "start": "831759",
    "end": "837800"
  },
  {
    "text": "entire data center fails we will still not require human intervention everything will continue to",
    "start": "837800",
    "end": "844440"
  },
  {
    "text": "work so in uh again following some best practices uh from a security standpoint",
    "start": "844440",
    "end": "850519"
  },
  {
    "text": "in the public subnet uh there are no unmanaged Services it's just the load",
    "start": "850519",
    "end": "857120"
  },
  {
    "text": "balancer and the Amazon net gateways in the private subnet that's where the more",
    "start": "857120",
    "end": "862800"
  },
  {
    "text": "Medi stuff is you'll actually see uh four components one there are two ECS",
    "start": "862800",
    "end": "869519"
  },
  {
    "text": "clusters label storefront and admin and we'll get into the details but just to",
    "start": "869519",
    "end": "874560"
  },
  {
    "text": "give you an idea sap hybris has you can say two views one is the user view when",
    "start": "874560",
    "end": "880720"
  },
  {
    "text": "you are a consumer you hit an e-commerce website if it's running on sap hybrid that's what you see but then there's the",
    "start": "880720",
    "end": "887160"
  },
  {
    "text": "admin view where people will log in add new products set up any configuration",
    "start": "887160",
    "end": "892279"
  },
  {
    "text": "generate any analytics so that's the admin piece and that's why you see two clusters the user land and the kind of",
    "start": "892279",
    "end": "899639"
  },
  {
    "text": "the admin land cluster uh the elb from the admin land was in the private subnet only",
    "start": "899639",
    "end": "906199"
  },
  {
    "text": "accessible from on premise which is to ensure that uh nobody from the outside",
    "start": "906199",
    "end": "911320"
  },
  {
    "text": "can get to the admin interface now uh behind that backing all",
    "start": "911320",
    "end": "916399"
  },
  {
    "text": "of this uh containerized environment up is an AWS uh Aurora DB uh again just keep",
    "start": "916399",
    "end": "924639"
  },
  {
    "text": "relating everything back to our business goals here uh security agility scalability high performance and Aurora",
    "start": "924639",
    "end": "931920"
  },
  {
    "text": "has all of that to offer and that was why it was a choice for us and I'll",
    "start": "931920",
    "end": "937480"
  },
  {
    "text": "speak a little bit more to that decision and uh how we went about it in a second as well in addition to that uh I think",
    "start": "937480",
    "end": "945199"
  },
  {
    "text": "one of my favorites there's several other services in Ed but one of my favorites is all the way at the bottom",
    "start": "945199",
    "end": "950920"
  },
  {
    "text": "the CT manager so we went to the extent of using managed services and Amazon services that we did not even have an",
    "start": "950920",
    "end": "957000"
  },
  {
    "text": "outside SSL rendor uh even the SSL Sears were being gen generated by AWS",
    "start": "957000",
    "end": "962120"
  },
  {
    "text": "certificate manager uh some of the other services uh and their roles at the top we have PCI",
    "start": "962120",
    "end": "969199"
  },
  {
    "text": "tr1 compliance so there is Need for some for some strong encryption particularly",
    "start": "969199",
    "end": "975199"
  },
  {
    "text": "around credentials and role separation so we ensured that uh with you can say",
    "start": "975199",
    "end": "981360"
  },
  {
    "text": "two levels of encryption one is with our credentials the credentials were being saved in an S3 bucket with server side",
    "start": "981360",
    "end": "988639"
  },
  {
    "text": "encrypt Enon enabled but on top of that we were using KMS to encrypt the stuff",
    "start": "988639",
    "end": "993759"
  },
  {
    "text": "that was even put in S3 so even if somebody has access to the bucket they needed access to the S3 bucket as well",
    "start": "993759",
    "end": "1000319"
  },
  {
    "text": "as have the IM permissions to decrypt the files using the Key Management Service from AWS and the only entity",
    "start": "1000319",
    "end": "1008880"
  },
  {
    "text": "that has that access are the containers that are running the production servers uh just some other Amazon",
    "start": "1008880",
    "end": "1015519"
  },
  {
    "text": "Services best practices include the use of cloud trade cloud formation so that's the",
    "start": "1015519",
    "end": "1020959"
  },
  {
    "text": "infrastructure as code piece uh using Cloud watch for monitoring simple email",
    "start": "1020959",
    "end": "1026199"
  },
  {
    "text": "service was configured for email with sap hybris uh we were taking advantage",
    "start": "1026199",
    "end": "1031600"
  },
  {
    "text": "of Court commit uh for particularly saving our uh",
    "start": "1031600",
    "end": "1037438"
  },
  {
    "text": "infrastructure layer uh in AWS code commit itself and lastly just worth",
    "start": "1037439",
    "end": "1043959"
  },
  {
    "text": "mentioning that there is that on premise connectivity needed it's a hybrid architecture and what we had was uh",
    "start": "1043959",
    "end": "1049720"
  },
  {
    "text": "Direct Connect uh connections back from onas so just getting into a little more",
    "start": "1049720",
    "end": "1057400"
  },
  {
    "text": "detail remember we had those two uh quickly going back these two ECS clusters in our VPC well that's what",
    "start": "1057400",
    "end": "1065559"
  },
  {
    "start": "1065000",
    "end": "1065000"
  },
  {
    "text": "they look like internally uh both of them running a few uh Docker Services ECS Services the one",
    "start": "1065559",
    "end": "1072880"
  },
  {
    "text": "at the top you see Apachi we have SCP hybris and a solar service a couple of",
    "start": "1072880",
    "end": "1078240"
  },
  {
    "text": "solar services Say Master Slave in the admin we just had sap highest running remember that admin is",
    "start": "1078240",
    "end": "1084760"
  },
  {
    "text": "just primarily for uh you can say content management being able to log in and manage what the end user is going to",
    "start": "1084760",
    "end": "1091720"
  },
  {
    "text": "see on the interface so which is why we separated that",
    "start": "1091720",
    "end": "1096480"
  },
  {
    "start": "1098000",
    "end": "1098000"
  },
  {
    "text": "out the cicd layer uh is building up from it's",
    "start": "1098320",
    "end": "1105640"
  },
  {
    "text": "remember that vendor Center uh the situation is we actually kind of building up we are on an evolution",
    "start": "1105640",
    "end": "1111600"
  },
  {
    "text": "Journey the idea is not to go 0 to 60 overnight but uh work with what we have",
    "start": "1111600",
    "end": "1117159"
  },
  {
    "text": "and reuse what we have while introducing new Concepts as we go so what you see",
    "start": "1117159",
    "end": "1122480"
  },
  {
    "text": "here is the code uh delivery pipeline so from code deployment standpoint we have",
    "start": "1122480",
    "end": "1128159"
  },
  {
    "text": "the developers uh with code and Docker file being delivered into the",
    "start": "1128159",
    "end": "1135039"
  },
  {
    "text": "SCM and then there is Jenkins that will actually take care of building uh the container so it's worth",
    "start": "1135039",
    "end": "1143760"
  },
  {
    "text": "noting this dotted line in the middle what is actually denoting is that to the left what you see is the on",
    "start": "1143760",
    "end": "1150000"
  },
  {
    "text": "premise pieces and to the right is what you see stuff that was in AWS so what we",
    "start": "1150000",
    "end": "1155120"
  },
  {
    "text": "have on premise is our sem and the build environment that's the Jenkins that's in charge of building the",
    "start": "1155120",
    "end": "1161600"
  },
  {
    "text": "container uh the AWS side has another Jenkins which is the deployment Jenkins",
    "start": "1161600",
    "end": "1169080"
  },
  {
    "text": "uh in addition to that that's where the container registry lives under ECR and",
    "start": "1169080",
    "end": "1174360"
  },
  {
    "text": "we have the ECS Services uh uh the ECS component that is in charge of deploying",
    "start": "1174360",
    "end": "1181240"
  },
  {
    "text": "our containers to the ECS nodes I do want to highlight a little bit on why why two Jenkins and maybe I will uh",
    "start": "1181240",
    "end": "1189760"
  },
  {
    "text": "speak first at a broader level than just this particular use case and at flux 7 being a consulting company we work with",
    "start": "1189760",
    "end": "1197240"
  },
  {
    "text": "different use cases it's actually come up more than once in the past where a customer wants to have the ability to",
    "start": "1197240",
    "end": "1204760"
  },
  {
    "text": "use what they have in terms of Jenkins there's a process there is a on- premise Jenkins that is being managed by the",
    "start": "1204760",
    "end": "1210799"
  },
  {
    "text": "release management team it has been set up and vetted and the idea is to leave",
    "start": "1210799",
    "end": "1217480"
  },
  {
    "text": "the code and all of that process that exists today intact for two reasons one because the team does not want to manage",
    "start": "1217480",
    "end": "1224480"
  },
  {
    "text": "two Jenkins one for one in Amazon Jenkins and one or on- premise Jenkins",
    "start": "1224480",
    "end": "1230360"
  },
  {
    "text": "so keeping the build and some of the build test functionality in the same Jenkins as everything else is desirable",
    "start": "1230360",
    "end": "1236640"
  },
  {
    "text": "has benefits as it it makes the journey easy at the same time uh the jobs in",
    "start": "1236640",
    "end": "1243039"
  },
  {
    "text": "Jenkins that are related to deploying on top of our production cluster uh those are very Amazon",
    "start": "1243039",
    "end": "1250159"
  },
  {
    "text": "specific that has nothing to do with the Legacy Jenkins because the Legacy Jenkins has been all about code not",
    "start": "1250159",
    "end": "1255480"
  },
  {
    "text": "about deploying infrastructure and not about updating services say ECS services using cloud formation in this case uh",
    "start": "1255480",
    "end": "1262679"
  },
  {
    "text": "the other factor is that the Amazon with I am roles makes it",
    "start": "1262679",
    "end": "1269280"
  },
  {
    "text": "really easy to deliver the correct credentials the correct IM am credentials needed for that deploy",
    "start": "1269280",
    "end": "1275039"
  },
  {
    "text": "Jenkins job to run so what that all boils down to is we",
    "start": "1275039",
    "end": "1280559"
  },
  {
    "text": "actually split the Jenkins the deploy Jenkins uses IM roles uses all the Amazon goodies if you will and it",
    "start": "1280559",
    "end": "1288080"
  },
  {
    "text": "actually stays in AWS communicating as the gateway to the actual Amazon services",
    "start": "1288080",
    "end": "1295120"
  },
  {
    "text": "that are responsible for deploying into production uh the onrus Jenkins stays",
    "start": "1295120",
    "end": "1301279"
  },
  {
    "text": "there for reasons that that is how it's being done right now and is a fine process we don't want to uh open",
    "start": "1301279",
    "end": "1307919"
  },
  {
    "text": "anything that doesn't need to be opened so from that perspective there's the two Jenkins here the build and the deploy so",
    "start": "1307919",
    "end": "1313799"
  },
  {
    "text": "you can think of it as a security measure a balance between what's there",
    "start": "1313799",
    "end": "1319200"
  },
  {
    "text": "what's the most secure way of doing it and what's what leads to a clean architecture from a separation",
    "start": "1319200",
    "end": "1325400"
  },
  {
    "text": "standpoint uh the overall U so the deploy Jenkins it's",
    "start": "1325400",
    "end": "1331720"
  },
  {
    "text": "just to get into a little more detail what it's really doing is under the hood uh we have cloud formation templates",
    "start": "1331720",
    "end": "1337760"
  },
  {
    "text": "describing the ECS services so when a new container is to be deployed the uh",
    "start": "1337760",
    "end": "1343840"
  },
  {
    "text": "cloud formation stack used to create that service is updated",
    "start": "1343840",
    "end": "1349440"
  },
  {
    "text": "uh which has the ID of the new container image that triggers the ECS service",
    "start": "1349440",
    "end": "1354559"
  },
  {
    "text": "update which is done so Jenkins triggers cloud formation which triggers the ECS update and what ECS does is it actually",
    "start": "1354559",
    "end": "1362919"
  },
  {
    "text": "informs the node that a new uh container image is available for a given Service",
    "start": "1362919",
    "end": "1368240"
  },
  {
    "text": "uh ECS at that point uh and ECS has this feature built in uh we had it configured",
    "start": "1368240",
    "end": "1374520"
  },
  {
    "text": "such that basically it starts replacing the old containers with the new image so spin up a new container with a new image",
    "start": "1374520",
    "end": "1380919"
  },
  {
    "text": "take out the old one then just keep repeating that process one container at a time and that's where the final",
    "start": "1380919",
    "end": "1386480"
  },
  {
    "text": "deployment is complete so it's zero downtime deployment in the sense that we are basically replacing containers one",
    "start": "1386480",
    "end": "1393080"
  },
  {
    "text": "at a time in a rolling fashion I said earlier that code is just",
    "start": "1393080",
    "end": "1400159"
  },
  {
    "start": "1396000",
    "end": "1396000"
  },
  {
    "text": "one of the components that you want to streamline the delivery off there are other components clearly and any",
    "start": "1400159",
    "end": "1406159"
  },
  {
    "text": "technology stack typically we view them as four pillars the four being code being at the center of everything but",
    "start": "1406159",
    "end": "1413400"
  },
  {
    "text": "then you also have server configuration you have infrastructure you have security policies so in this case code",
    "start": "1413400",
    "end": "1419559"
  },
  {
    "text": "and the server configuration is what was being delivered through that pipeline I showed you earlier but in addition to",
    "start": "1419559",
    "end": "1425559"
  },
  {
    "text": "that there's a separate pipeline for delivery of uh infrastructure and some",
    "start": "1425559",
    "end": "1431480"
  },
  {
    "text": "of the security uh practices that actually come baked into that so they",
    "start": "1431480",
    "end": "1436919"
  },
  {
    "text": "all embodied inside cloud formation templates infrastructure is code so we",
    "start": "1436919",
    "end": "1442159"
  },
  {
    "text": "are back to just the pipeline looking very much like it looks for any software project so we have our devops teams",
    "start": "1442159",
    "end": "1449679"
  },
  {
    "text": "that'll push into the source control that would trigger a Jenkins job the Jenkins job will then run and update",
    "start": "1449679",
    "end": "1455679"
  },
  {
    "text": "cloud formation stack based on whatever update came into the version control system and that would update the Amazon",
    "start": "1455679",
    "end": "1461520"
  },
  {
    "text": "Services intended to be updated uh so you're getting built-in",
    "start": "1461520",
    "end": "1466960"
  },
  {
    "text": "change management at this point because any change to the infrastructure of the security uh components is coming getting",
    "start": "1466960",
    "end": "1473880"
  },
  {
    "text": "logged into the SC as it's being changed and there is no way to make manual changes the only way to update existing",
    "start": "1473880",
    "end": "1480159"
  },
  {
    "text": "infrastructure is through this process uh very looks looks very nice when your PCI auditor walks in by the",
    "start": "1480159",
    "end": "1486480"
  },
  {
    "text": "way because you have a process and you have a process that cannot be circumvented easily and a process that's",
    "start": "1486480",
    "end": "1492600"
  },
  {
    "text": "very easy to audit so now let's get into the even",
    "start": "1492600",
    "end": "1498559"
  },
  {
    "start": "1495000",
    "end": "1495000"
  },
  {
    "text": "more interesting and in-depth components of the architecture so diving straight in let's start with the Aurora DB",
    "start": "1498559",
    "end": "1506200"
  },
  {
    "text": "component so the goals uh with performance and",
    "start": "1506200",
    "end": "1511840"
  },
  {
    "text": "scalability and high availability we have we were looking for a solution a database solution databases usually",
    "start": "1511840",
    "end": "1518240"
  },
  {
    "text": "unfortunately are the graveyard of your devops and all that cool stuff that we",
    "start": "1518240",
    "end": "1524399"
  },
  {
    "text": "talk about when we are talking about stateless components and we were basically looking for something that could actually balance the two while a",
    "start": "1524399",
    "end": "1531440"
  },
  {
    "text": "traditional deployment of sa hybris people would be looking at Oracle as the Enterprise grid uh database we took a",
    "start": "1531440",
    "end": "1538279"
  },
  {
    "text": "slightly different approach uh sap hbus does come in with built-in support for MySQL while MySQL may not be able to",
    "start": "1538279",
    "end": "1546600"
  },
  {
    "text": "foot the bill for a product uh a website at this scale uh we figured that we'll take",
    "start": "1546600",
    "end": "1553279"
  },
  {
    "text": "Amazon Aurora for a spin which was a brand new service and was uh MySQL",
    "start": "1553279",
    "end": "1560080"
  },
  {
    "text": "compatible and to our pleasant surprise uh that process was incredibly easy easy",
    "start": "1560080",
    "end": "1566399"
  },
  {
    "text": "to the point that it was seamless what all we had to do was spin up in our cloud formation template and RDS cluster",
    "start": "1566399",
    "end": "1574720"
  },
  {
    "text": "and point our sap hybris configuration file to the connection string provided by Aurora and that's it done no quote",
    "start": "1574720",
    "end": "1582559"
  },
  {
    "text": "changes necessary no discussion uh on whether or not this quer is going to work whe or something is going to work",
    "start": "1582559",
    "end": "1589520"
  },
  {
    "text": "it to as promised if you will it is compatible or fully compatible with my",
    "start": "1589520",
    "end": "1595880"
  },
  {
    "text": "SQL and that was the experience a very traditional application that is known to support MySQL just came up and lit up",
    "start": "1595880",
    "end": "1602559"
  },
  {
    "text": "with no issues straight on top of her so got us all the benefit with practically no effort obviously a no-brainer",
    "start": "1602559",
    "end": "1609559"
  },
  {
    "text": "decision we' have never looked back from there the second component uh so when",
    "start": "1609559",
    "end": "1617880"
  },
  {
    "start": "1612000",
    "end": "1612000"
  },
  {
    "text": "you're dealing with PCI tier one uh a web application firewall becomes a very",
    "start": "1617880",
    "end": "1623320"
  },
  {
    "text": "important part of the strategy for oasp checks things uh like uh the the common",
    "start": "1623320",
    "end": "1629520"
  },
  {
    "text": "attack signature patterns that you want to detect and infect block so we decided then when it comes",
    "start": "1629520",
    "end": "1636919"
  },
  {
    "text": "to vaap there's different vendors and different choices available in this case we decided to keep it simple and I put",
    "start": "1636919",
    "end": "1644600"
  },
  {
    "text": "that in quotes because it's really simple once everything is up and running and as I'll describe that uh so rather",
    "start": "1644600",
    "end": "1650240"
  },
  {
    "text": "than going with a third party wendor bringing yet another licensing structure procurement cycle go with the AWS vaav",
    "start": "1650240",
    "end": "1657720"
  },
  {
    "text": "uh the way AWS vavs Works uh for those uh who have not used the product or",
    "start": "1657720",
    "end": "1662960"
  },
  {
    "text": "looking into the product uh the idea is that it's a very flexible it's kind of a filtering function or a rule engine you",
    "start": "1662960",
    "end": "1670279"
  },
  {
    "text": "can say you have to write your rules but once you have written your rules you have a product that is setting in line",
    "start": "1670279",
    "end": "1678240"
  },
  {
    "text": "blocking requests for you is autoscaling is high availability and is pretty inexpensive compared to the other ra",
    "start": "1678240",
    "end": "1684840"
  },
  {
    "text": "solutions that are available so the challenge is how do I actually write the rules and how do I get the rules in the",
    "start": "1684840",
    "end": "1690799"
  },
  {
    "text": "right place for that U AWS makes a set of uh fun functions available so it's a",
    "start": "1690799",
    "end": "1698559"
  },
  {
    "text": "multi-tier kind of a setup the way it works is and it's actually not just static rules but you can actually create",
    "start": "1698559",
    "end": "1705279"
  },
  {
    "text": "Dynamic rules which is what we ended up doing over here so it's not like you log in there and I set up a bunch of rules",
    "start": "1705279",
    "end": "1711120"
  },
  {
    "text": "it's actually even more interesting than that we actually wrote code that will create the rules on the fly as they were",
    "start": "1711120",
    "end": "1717880"
  },
  {
    "text": "needed so what that means is I'll give you a concrete example uh a single IP",
    "start": "1717880",
    "end": "1724679"
  },
  {
    "text": "address has generated 500 requests in the last 10 seconds very likely that",
    "start": "1724679",
    "end": "1729919"
  },
  {
    "text": "something is going on there because that's not a human being attack uh human being access pattern so when the 500",
    "start": "1729919",
    "end": "1736279"
  },
  {
    "text": "accesses come in uh the top red icon you see up there that's AWS cloudfront",
    "start": "1736279",
    "end": "1743000"
  },
  {
    "text": "cloudfront is actually going to generate a log file with all the accesses that are coming in so it generates a log file",
    "start": "1743000",
    "end": "1749440"
  },
  {
    "text": "the log file it actually dumps it into awss 3 nothing special there it's just a",
    "start": "1749440",
    "end": "1754960"
  },
  {
    "text": "built-in feature you just have to enable the logs when the log file",
    "start": "1754960",
    "end": "1760600"
  },
  {
    "text": "appears uh at that point it can be configured to trigger a Lambda function",
    "start": "1760600",
    "end": "1766480"
  },
  {
    "text": "which is exactly how we had it set up so when the log file appeared a Lambda function started running the Lambda",
    "start": "1766480",
    "end": "1772640"
  },
  {
    "text": "function an analyzes the file and based on that create Dynamic rules so going",
    "start": "1772640",
    "end": "1778039"
  },
  {
    "text": "back to my example uh a malicious uh user is trying",
    "start": "1778039",
    "end": "1783600"
  },
  {
    "text": "to hit our website 500 times in a short period of time and try to flood with",
    "start": "1783600",
    "end": "1788640"
  },
  {
    "text": "traffic the log gets developed the Lambda function goes in and looks for",
    "start": "1788640",
    "end": "1793679"
  },
  {
    "text": "those IP addresses that have appeared 500 times in the last 10 seconds and if it finds any it generates a new rule at",
    "start": "1793679",
    "end": "1801000"
  },
  {
    "text": "the ra no traffic allowed from this IP address for the next 24",
    "start": "1801000",
    "end": "1806320"
  },
  {
    "text": "hours uh similarly other examples there's a couple of dozen of rules that",
    "start": "1806320",
    "end": "1811360"
  },
  {
    "text": "we implemented this way but just to give you one other example U for example if",
    "start": "1811360",
    "end": "1816600"
  },
  {
    "text": "uh a user is hitting unsupported or inaccessible URLs so they're getting a",
    "start": "1816600",
    "end": "1822440"
  },
  {
    "text": "lot of 40 fours a single IP address is just generating generating a lot of traffic that is coming back with web 44",
    "start": "1822440",
    "end": "1829200"
  },
  {
    "text": "errors what does that mean what that means is that the user is trying to basically find uh some kind of a URL",
    "start": "1829200",
    "end": "1837120"
  },
  {
    "text": "that's hidden from the world that they maybe find the slash admin if they know that this is sap hybis they're going to",
    "start": "1837120",
    "end": "1842360"
  },
  {
    "text": "look for the slash admin for instance and it's going to lead to a 404 error and if we actually detect that pattern",
    "start": "1842360",
    "end": "1848519"
  },
  {
    "text": "all of that does get captured in the logs log file gets generated Lambda function looks for it sees the attack",
    "start": "1848519",
    "end": "1854919"
  },
  {
    "text": "signature blocks that IP address and keeps it blocked for for uh specified period of time and uh in addition to",
    "start": "1854919",
    "end": "1862600"
  },
  {
    "text": "that there is a database of Rogue IPS the Lambda function also downloads that and keeps our vaap rules up to date so",
    "start": "1862600",
    "end": "1869240"
  },
  {
    "text": "it's a vaap it's a so a few things to note about that it's a very flexible",
    "start": "1869240",
    "end": "1874480"
  },
  {
    "text": "system you can write any rule create any rule that you want to create on the Fly",
    "start": "1874480",
    "end": "1879559"
  },
  {
    "text": "literally write it in terms of code say python node.js whatever your favorite supported Language by Lambda",
    "start": "1879559",
    "end": "1886080"
  },
  {
    "text": "is so it's a very fle fible infrastructure it kind of stays there it's low cost and once put in place it",
    "start": "1886080",
    "end": "1892279"
  },
  {
    "text": "really requires no human intervention and it goes back to my point earlier which is security rules are being",
    "start": "1892279",
    "end": "1898960"
  },
  {
    "text": "specified as code because security rules have now turned into just these Lambda functions that will that can be",
    "start": "1898960",
    "end": "1904799"
  },
  {
    "text": "delivered to a cicd pipeline and operate just like code no difference uh from any of the best",
    "start": "1904799",
    "end": "1911279"
  },
  {
    "text": "practices that we know work for software thingss may do something else",
    "start": "1911279",
    "end": "1918440"
  },
  {
    "start": "1915000",
    "end": "1915000"
  },
  {
    "text": "that's very interesting which is this is an e-commerce platform uh so and any",
    "start": "1918440",
    "end": "1923840"
  },
  {
    "text": "retailer anyone who is doing any kind of e-commerce very typical for these uh websites to have a need for Autos",
    "start": "1923840",
    "end": "1931600"
  },
  {
    "text": "scaling because the traffic patterns are seasonal during very different times of the day and one of the things that we",
    "start": "1931600",
    "end": "1938720"
  },
  {
    "text": "were looking for was the ability to Autos scale uh Amazon has had support for",
    "start": "1938720",
    "end": "1944960"
  },
  {
    "text": "autoscaling for a very long time in fact they kind of find the term if you will about 10 years ago with ec2",
    "start": "1944960",
    "end": "1952399"
  },
  {
    "text": "autoscaling however uh when we are talking about container Auto scaling it's a whole different Beast it's not",
    "start": "1952399",
    "end": "1958320"
  },
  {
    "text": "the same as just scaling the number of ec2 instances that you're running and in",
    "start": "1958320",
    "end": "1963679"
  },
  {
    "text": "fact there's two layers of it the bottom layer that's your number of ec2",
    "start": "1963679",
    "end": "1968760"
  },
  {
    "text": "instances on which your container cluster is running and the top layer that's how many containers I have",
    "start": "1968760",
    "end": "1974080"
  },
  {
    "text": "running in a given service so why if I just scale the number of containers what's going to",
    "start": "1974080",
    "end": "1980080"
  },
  {
    "text": "happen I'm going to run out of the underlying ec2 instances and it's going",
    "start": "1980080",
    "end": "1985720"
  },
  {
    "text": "to render my auto scaling at the top layer irrelevant similarly if I have if I",
    "start": "1985720",
    "end": "1991519"
  },
  {
    "text": "don't do anything about my container layer and I just have the underlying layer uh scaling up and scaling down it",
    "start": "1991519",
    "end": "1998600"
  },
  {
    "text": "doesn't really do anything useful CU my users are never going to hit the actual VMS they are actually dealing only with",
    "start": "1998600",
    "end": "2004639"
  },
  {
    "text": "the container layer what makes this problem even more interesting is that uh these two layers",
    "start": "2004639",
    "end": "2011679"
  },
  {
    "text": "if we are to plan to autoscale them they can't just be incoherently autoscaling uh in independently what you",
    "start": "2011679",
    "end": "2018440"
  },
  {
    "text": "don't want is the top layer deciding to say I'm going to add more containers to my service and the bottom layer deciding",
    "start": "2018440",
    "end": "2023880"
  },
  {
    "text": "huh I see some fre2 instances let's actually start shrinking the size of the",
    "start": "2023880",
    "end": "2029240"
  },
  {
    "text": "cluster uh similarly vice versa the bottom layer adding and the top layer removing so they actually have to work",
    "start": "2029240",
    "end": "2035159"
  },
  {
    "text": "in conjunction with each other so it's a while the the essence of autoscaling is the same as ec2 Auto scaling the actual",
    "start": "2035159",
    "end": "2042760"
  },
  {
    "text": "challenge is very very different because it's two levels of autoscaling that need to happen and the two levels have to",
    "start": "2042760",
    "end": "2049919"
  },
  {
    "text": "also be coordinated with each other so what we built was a solution again",
    "start": "2049919",
    "end": "2057520"
  },
  {
    "text": "using AWS Lambda which is around uh basically the same principles on how ec2",
    "start": "2057520",
    "end": "2064040"
  },
  {
    "text": "autoscaling works so the stats for the individual containers that are running",
    "start": "2064040",
    "end": "2069839"
  },
  {
    "text": "on top of ECS are available in Cloud watch in Cloud watch metrics and you can",
    "start": "2069839",
    "end": "2075878"
  },
  {
    "text": "read cloudwatch through an API so we had a Lambda function that would read these",
    "start": "2075879",
    "end": "2080960"
  },
  {
    "text": "stats about individual containers and some use some simple rules to decide",
    "start": "2080960",
    "end": "2087040"
  },
  {
    "text": "what the top layer scaling is going to look like that is how many containers do I need for say Apache or how many",
    "start": "2087040",
    "end": "2092358"
  },
  {
    "text": "containers do I need for sap hybrid and it can scale up if the current",
    "start": "2092359",
    "end": "2097720"
  },
  {
    "text": "containers are running too hot or scale down if the current containers are running too cold so while it's an",
    "start": "2097720",
    "end": "2105160"
  },
  {
    "text": "interesting challenge in itself to solve very similar to the ec2 autoscaling nothing groundbreaking",
    "start": "2105160",
    "end": "2111320"
  },
  {
    "text": "there uh the second piece was how do we actually scale the underlying instances so the traditional way of autoscaling",
    "start": "2111320",
    "end": "2118720"
  },
  {
    "text": "instances on ec2 have always been let's look at the CPU if the CPU average is over 80% let's scale up otherwise scale",
    "start": "2118720",
    "end": "2125079"
  },
  {
    "text": "down or if it's below 60% we scale SC down that is not going to work here cuz",
    "start": "2125079",
    "end": "2130119"
  },
  {
    "text": "the top layer has to be taken into account when you are autoscaling uh the number of",
    "start": "2130119",
    "end": "2136800"
  },
  {
    "text": "instances so for that we actually had to device U an interesting algorithm and my",
    "start": "2136800",
    "end": "2142800"
  },
  {
    "start": "2137000",
    "end": "2137000"
  },
  {
    "text": "box is not showing very well here but this pseudo code that you see in the",
    "start": "2142800",
    "end": "2148400"
  },
  {
    "text": "middle uh is uh the idea is that that's basically the Lambda function that runs",
    "start": "2148400",
    "end": "2154920"
  },
  {
    "text": "so what happens is from the far left we have uh the ec2",
    "start": "2154920",
    "end": "2161760"
  },
  {
    "text": "cloudwatch events triggering every five minutes this Lambda",
    "start": "2161760",
    "end": "2167160"
  },
  {
    "text": "function uh the what this code is trying to do is basically query ECS using the",
    "start": "2167160",
    "end": "2175000"
  },
  {
    "text": "API looking at how many containers are needed for each one of our",
    "start": "2175000",
    "end": "2180960"
  },
  {
    "text": "services the idea is that we will find the maximum number of containers needed",
    "start": "2180960",
    "end": "2187240"
  },
  {
    "text": "for a given service but if that service decides to Autos scale it is going to need at least one additional instance of",
    "start": "2187240",
    "end": "2194520"
  },
  {
    "text": "ec2 underlying so what we need to do is we need to say if I have four Services",
    "start": "2194520",
    "end": "2199800"
  },
  {
    "text": "running and let's say the four Services have two four three and two containers",
    "start": "2199800",
    "end": "2205319"
  },
  {
    "text": "running each then the maximum number of containers I'm running concurrently is four because that's the service that",
    "start": "2205319",
    "end": "2210920"
  },
  {
    "text": "actually has for uh containers running so what we do is we actually keep five instances running one more than the",
    "start": "2210920",
    "end": "2217720"
  },
  {
    "text": "maximum number needed what that does is it allows the top layer the number of container scaling it allows it to scale",
    "start": "2217720",
    "end": "2224520"
  },
  {
    "text": "whenever it needs one additional container so it has that extra Headroom that is available to it however when it",
    "start": "2224520",
    "end": "2231599"
  },
  {
    "text": "does scale up that means the extra head room fills up this Lambda function is going to run next time and it's going to",
    "start": "2231599",
    "end": "2237079"
  },
  {
    "text": "realize oh I only have five instances running and there is a service using five containers there's no Headroom left",
    "start": "2237079",
    "end": "2244720"
  },
  {
    "text": "time to expand my number of ECS nodes that exist in the cluster so the idea is",
    "start": "2244720",
    "end": "2249880"
  },
  {
    "text": "to keep well I'm using one just to simplify the example the idea is to keep one additional ECS node available than",
    "start": "2249880",
    "end": "2257119"
  },
  {
    "text": "the maximum number of containers being used by any service in reality what you're looking at is that one is being",
    "start": "2257119",
    "end": "2264680"
  },
  {
    "text": "replaced here in the Corde with extra capacity so we we can tune that number to however much extra Headroom we want",
    "start": "2264680",
    "end": "2271119"
  },
  {
    "text": "to have depending on the spike that we are expecting at that time uh just a little more detail if",
    "start": "2271119",
    "end": "2278760"
  },
  {
    "text": "you're interested in more detail along this line we have actually open sourced the code for this for the Lambda",
    "start": "2278760",
    "end": "2284280"
  },
  {
    "text": "functions for scaling and uh there was a Blog posted on the AWS website a couple",
    "start": "2284280",
    "end": "2289440"
  },
  {
    "text": "of weeks ago about this algorithm and how we actually achieved uh this Autos",
    "start": "2289440",
    "end": "2294599"
  },
  {
    "text": "scaling and the last piece I just want to talk about is that uh kind of a hon pointed out SCP",
    "start": "2294599",
    "end": "2303800"
  },
  {
    "text": "is not an application it's not a application that was written in the year 2016 with containers and serverless uh",
    "start": "2303800",
    "end": "2310359"
  },
  {
    "text": "stateless and all of that in mind it's uh a more traditional application in",
    "start": "2310359",
    "end": "2316400"
  },
  {
    "text": "fact to be fair it will be fair to say that the application is in fact stateful",
    "start": "2316400",
    "end": "2321440"
  },
  {
    "text": "in many of the ways in how it actually does things so how did we actually implement it a inside containers which",
    "start": "2321440",
    "end": "2327560"
  },
  {
    "text": "are known to not play very nicely with that and B how do we actually Implement",
    "start": "2327560",
    "end": "2332880"
  },
  {
    "text": "Autos scaling on top of something like this and keep in mind there were no code changes made to the hybis engine so it's",
    "start": "2332880",
    "end": "2339160"
  },
  {
    "text": "all done outside with the help of rapper scripts and how we actually man manage state so I'll talk about perhaps the",
    "start": "2339160",
    "end": "2345079"
  },
  {
    "text": "most interesting of our challenges uh that came up so one of the questions is",
    "start": "2345079",
    "end": "2351599"
  },
  {
    "text": "hybis and when I say it's stateful it's really built with a pet mentality anyone",
    "start": "2351599",
    "end": "2357839"
  },
  {
    "text": "here not familiar with the pet versus cattle analogy assuming this is reinvent so I don't have to explain that great so",
    "start": "2357839",
    "end": "2364920"
  },
  {
    "text": "it was written really with the pet mentality where every note has a fixed IP address I'm node I need to know about",
    "start": "2364920",
    "end": "2370760"
  },
  {
    "text": "all the other nodes I just have a list of IP addresses of all the other nodes that's option one the other option is I",
    "start": "2370760",
    "end": "2377119"
  },
  {
    "text": "have a node and there's other nodes running and I can do a multicast to discover all the other nodes unfortunately in our world n neither of",
    "start": "2377119",
    "end": "2384400"
  },
  {
    "text": "those two options are available uh multicast is not available because AWS VPC networking does not support it and",
    "start": "2384400",
    "end": "2390839"
  },
  {
    "text": "uh the list of ips is not available cuz who the hell knows what the list of ips is it's changing because of Auto scaling",
    "start": "2390839",
    "end": "2397079"
  },
  {
    "text": "and that stuff that's going on so uh what we had to do was kind of",
    "start": "2397079",
    "end": "2402760"
  },
  {
    "text": "go in deeper and look at some unconventional ways of doing this uh node Discovery and we actually found a",
    "start": "2402760",
    "end": "2410040"
  },
  {
    "text": "relatively Simple Solution which was that hybris did actually have a another mode of uh that it could in fact uh what",
    "start": "2410040",
    "end": "2419040"
  },
  {
    "text": "we could do was we could actually load the list of IP addresses of the other nodes we can just we can just load it on",
    "start": "2419040",
    "end": "2425560"
  },
  {
    "text": "the Fly and they could be put in a database and can actually be loaded from there so good that's a pretty pretty big",
    "start": "2425560",
    "end": "2432880"
  },
  {
    "text": "achievement in that we have now we can actually if we know the IP addresses of all our nodes even if they are changing",
    "start": "2432880",
    "end": "2438560"
  },
  {
    "text": "if we can update our database with the updating IP addresses the cluster will kind of figure itself out however uh",
    "start": "2438560",
    "end": "2446200"
  },
  {
    "text": "this ran into an ECS limitation which is how does the individual hybis node know",
    "start": "2446200",
    "end": "2451760"
  },
  {
    "text": "what's its IP address is because if you say R and what is my IP if if you will",
    "start": "2451760",
    "end": "2457720"
  },
  {
    "text": "inside one of the ECS containers the only thing you will get is here's the IP",
    "start": "2457720",
    "end": "2463079"
  },
  {
    "text": "address of your container by definition a container is not allowed to know the IP address of its host and that's what",
    "start": "2463079",
    "end": "2469400"
  },
  {
    "text": "we are going to need for these containers to communicate so basically started out",
    "start": "2469400",
    "end": "2476680"
  },
  {
    "start": "2472000",
    "end": "2472000"
  },
  {
    "text": "with just putting a an interum solution uh we basically wrote a startup script with every container and one of the",
    "start": "2476680",
    "end": "2483680"
  },
  {
    "text": "things that it actually did was when the container started uh the script uh found out through some",
    "start": "2483680",
    "end": "2491440"
  },
  {
    "text": "querying of the metadata on the ec2 instance which luckily is available inside the container to find out the IP",
    "start": "2491440",
    "end": "2498359"
  },
  {
    "text": "address of its host and then make that available to the hbus application as part of a config file by just doing a",
    "start": "2498359",
    "end": "2504640"
  },
  {
    "text": "fine replace if you will on the config file simple simple engineering solution got us through but a big shout out for a",
    "start": "2504640",
    "end": "2511359"
  },
  {
    "text": "feature request to the ECS team here uh if they had uh if ECS supported a",
    "start": "2511359",
    "end": "2517280"
  },
  {
    "text": "network overlay where we could put all our containers in kind of a an overlay network of Docker containers uh we could",
    "start": "2517280",
    "end": "2524760"
  },
  {
    "text": "in fact just use the docker container IP itself for the containers to talk to each other we had to jump through this",
    "start": "2524760",
    "end": "2529960"
  },
  {
    "text": "hoop mainly because we were using the ec2 provided Network so a series of challenges both",
    "start": "2529960",
    "end": "2538040"
  },
  {
    "text": "technology wise and I only talked about the top few but uh the good news is that",
    "start": "2538040",
    "end": "2543760"
  },
  {
    "text": "we got it through the project got done got done in time and the system has been in production",
    "start": "2543760",
    "end": "2549880"
  },
  {
    "text": "for a while so I'll give it back to Hon to talk about some of the outcomes and what they've seen from the business",
    "start": "2549880",
    "end": "2556720"
  },
  {
    "text": "side thank you a sure",
    "start": "2556720",
    "end": "2561760"
  },
  {
    "start": "2560000",
    "end": "2560000"
  },
  {
    "text": "so lot of technical details lot of challenges that the teams had to overcome uh but truly uh uh great shout",
    "start": "2561760",
    "end": "2571000"
  },
  {
    "text": "out to lot of engineering work that has uh Gone on to make this work so the",
    "start": "2571000",
    "end": "2577240"
  },
  {
    "text": "business outcome we got as a part of this uh implementation was we are now able to get a 360Â° view of our customer",
    "start": "2577240",
    "end": "2583800"
  },
  {
    "text": "base uh that's a huge base whether you go to a store or you go online uh we want to be able to identify you and",
    "start": "2583800",
    "end": "2589920"
  },
  {
    "text": "that's the first step to get a unified view of our customers again PCI tier one",
    "start": "2589920",
    "end": "2595240"
  },
  {
    "text": "that is uh part of any e-commerce site so we are ready for uh PCI audit when we",
    "start": "2595240",
    "end": "2600480"
  },
  {
    "text": "undergo that availability um again uh ha with multi-az uh the architecture diag",
    "start": "2600480",
    "end": "2607160"
  },
  {
    "text": "agrams you saw was uh in did incorporate uh even though you saw just one",
    "start": "2607160",
    "end": "2612240"
  },
  {
    "text": "availability Zone everything is uh multi-az and uh as usual when whenever",
    "start": "2612240",
    "end": "2618440"
  },
  {
    "text": "as a part of our transformation devop transformation I mentioned earlier there's business outcomes and there's it",
    "start": "2618440",
    "end": "2624040"
  },
  {
    "text": "outcomes in terms of innovation right and that's what we want to do to help not only achieve the goals but the goals",
    "start": "2624040",
    "end": "2630920"
  },
  {
    "text": "are part of achieving business outcomes right to improve the agility so uh",
    "start": "2630920",
    "end": "2636559"
  },
  {
    "text": "infrastructure code agile and flexible infrastructure and automated delivery of",
    "start": "2636559",
    "end": "2642680"
  },
  {
    "text": "uh infrastructure so going back to the most important points for any uh e-commerce",
    "start": "2642680",
    "end": "2650040"
  },
  {
    "start": "2644000",
    "end": "2644000"
  },
  {
    "text": "website is PCI compliance and being able to achieve that so we did incorporate a",
    "start": "2650040",
    "end": "2656440"
  },
  {
    "text": "lot of best practices including how uh AWS has a uh PCI uh uh total walkth",
    "start": "2656440",
    "end": "2664680"
  },
  {
    "text": "through on how to implement with the checklist and a best practices guide so we did go through some of that to be",
    "start": "2664680",
    "end": "2670400"
  },
  {
    "text": "able to help build our environment and some of the key elements we used uh help",
    "start": "2670400",
    "end": "2676280"
  },
  {
    "text": "us achieve that are the separation of accounts for prod and non-prod uh",
    "start": "2676280",
    "end": "2682680"
  },
  {
    "text": "there's also uh I am roles we used and the key encryption which author",
    "start": "2682680",
    "end": "2688319"
  },
  {
    "text": "mentioned which helps us uh encrypt all the uh database and other uh passwords",
    "start": "2688319",
    "end": "2695359"
  },
  {
    "text": "that we need to uh enable for the application multi multi VPC goes with",
    "start": "2695359",
    "end": "2701000"
  },
  {
    "text": "the multiple accounts um uh VPC for your Dev test is different from your production VPC so from a security",
    "start": "2701000",
    "end": "2707559"
  },
  {
    "text": "boundary and fencing all that's baked in right so uh the most other important",
    "start": "2707559",
    "end": "2714119"
  },
  {
    "text": "thing is again at went into some of the detailed challenges uh it's very easy to put a oneliner there uh using VA but a",
    "start": "2714119",
    "end": "2722040"
  },
  {
    "text": "lot of the things we were one of the early users of va uh Amazon vaap and we had to build a lot of these uh rules",
    "start": "2722040",
    "end": "2728760"
  },
  {
    "text": "Lambda functions to be able to help us achieve uh uh these goals and as usual",
    "start": "2728760",
    "end": "2734599"
  },
  {
    "text": "we did uh use anible and Docker for a lot of the uh uh post- Automation and",
    "start": "2734599",
    "end": "2740440"
  },
  {
    "text": "Docker also gives us that immutable infrastructure right so from a security",
    "start": "2740440",
    "end": "2745599"
  },
  {
    "text": "from a PCI compliance there's not any way to get inside a Docker image so that from a hacker perspective that that",
    "start": "2745599",
    "end": "2752559"
  },
  {
    "text": "gives us that immutable uh uh requirement that we can satisfy",
    "start": "2752559",
    "end": "2758920"
  },
  {
    "start": "2758000",
    "end": "2758000"
  },
  {
    "text": "so gave you a high level overview and I just wanted to summarize on various",
    "start": "2759200",
    "end": "2765280"
  },
  {
    "text": "pieces that we how we evolved in our journey uh using devop philosophies at",
    "start": "2765280",
    "end": "2770839"
  },
  {
    "text": "rent Center we started off when we did the van project Acceptance Now business unit is we started off using ec2",
    "start": "2770839",
    "end": "2778280"
  },
  {
    "text": "containers that's our first project right then we went through Docker and the next evolution in 2017 is using",
    "start": "2778280",
    "end": "2785520"
  },
  {
    "text": "serverless so that that is the uh trans transformative nature of how we do",
    "start": "2785520",
    "end": "2791440"
  },
  {
    "text": "things right from a devops journey we took the same uh steps we first launched",
    "start": "2791440",
    "end": "2798000"
  },
  {
    "text": "infrastructure as code we did uh anything X as a service so we are actually service providers to other",
    "start": "2798000",
    "end": "2804880"
  },
  {
    "text": "parts of the it organization when we giving logging as a service using our El stack we're providing that as a service",
    "start": "2804880",
    "end": "2811480"
  },
  {
    "text": "and that's the first step into transforming uh how it gets delivered",
    "start": "2811480",
    "end": "2817480"
  },
  {
    "text": "there's also cicd which is a core component of uh enabling rapid execution",
    "start": "2817480",
    "end": "2823920"
  },
  {
    "text": "and achieving business goals with incremental features and all the Agile development practices that go with it",
    "start": "2823920",
    "end": "2831079"
  },
  {
    "text": "and this digital transformation we've enabled at R Center has achieved us the",
    "start": "2831079",
    "end": "2836400"
  },
  {
    "text": "business to achieve its goals to meet competition faster right so if we put our customer hat on and it's all about",
    "start": "2836400",
    "end": "2844040"
  },
  {
    "text": "the customer and that the faster we help business achieve those goals the better",
    "start": "2844040",
    "end": "2851119"
  },
  {
    "text": "we are in satisfying our customer that's all I have thank you",
    "start": "2851119",
    "end": "2856319"
  },
  {
    "text": "very much any questions we can feel free to ask",
    "start": "2856319",
    "end": "2862078"
  }
]