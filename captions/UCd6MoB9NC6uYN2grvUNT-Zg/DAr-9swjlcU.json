[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "and uh welcome to the webinar my name is John Handler Solutions architect with the cloud search team this morning we're",
    "start": "2080",
    "end": "8639"
  },
  {
    "text": "going to be talking about relevance and ranking your results and getting the most out of your search results with",
    "start": "8639",
    "end": "15719"
  },
  {
    "text": "Amazon Cloud search just a couple of uh housekeeping points quickly um with if you have",
    "start": "15719",
    "end": "23160"
  },
  {
    "start": "18000",
    "end": "18000"
  },
  {
    "text": "questions submit them in your go to meeting console we'll come back to those questions and answer them at the end of",
    "start": "23160",
    "end": "30320"
  },
  {
    "text": "webinar uh the recording of This webinar and slides will be posted and links will be emailed to all of the people who",
    "start": "30320",
    "end": "39680"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "attended so let's think about a typical search case um somebody comes to a",
    "start": "40760",
    "end": "47079"
  },
  {
    "text": "website and they're going to interact with a search engine and that person will have some kind of information need",
    "start": "47079",
    "end": "55000"
  },
  {
    "text": "the example I'm giving is somebody a customer wants to come and buy some shoes",
    "start": "55000",
    "end": "60480"
  },
  {
    "text": "they would interact with the search box and type the terms that they're thinking",
    "start": "60480",
    "end": "66080"
  },
  {
    "text": "of approximating what they want to find in this case type shoes and this example",
    "start": "66080",
    "end": "71720"
  },
  {
    "text": "pulled from amazon.com we would receive a number of different search results we have uh",
    "start": "71720",
    "end": "79720"
  },
  {
    "text": "Sketchers we receive a a child's shoe we might also get uh women's",
    "start": "79720",
    "end": "87119"
  },
  {
    "text": "shoes and we even would get uh shoe rack and really when we look at it if",
    "start": "87119",
    "end": "94360"
  },
  {
    "text": "somebody comes to a site and they want to buy a product the most important",
    "start": "94360",
    "end": "99439"
  },
  {
    "text": "thing is to bring them the product that they have in mind or bring them something that um would induce them to",
    "start": "99439",
    "end": "106119"
  },
  {
    "text": "buy so how we order our search results and what the user sees actually controls",
    "start": "106119",
    "end": "113159"
  },
  {
    "text": "how well our site performs and how well we meet that user's need in",
    "start": "113159",
    "end": "118840"
  },
  {
    "text": "searching today we're going to go over a lot of the pieces of the puzzle that go",
    "start": "118840",
    "end": "124240"
  },
  {
    "text": "from the the data that we're starting with and how do we get the good results out of that data we're going to look a",
    "start": "124240",
    "end": "132040"
  },
  {
    "text": "just a very little bit at Amazon Cloud search for those in the audience who are not familiar with it and we'll talk",
    "start": "132040",
    "end": "138800"
  },
  {
    "text": "through the processing of search queries so that you can understand clearly when",
    "start": "138800",
    "end": "144480"
  },
  {
    "text": "the user types Search terms or Narrows with fating",
    "start": "144480",
    "end": "150360"
  },
  {
    "text": "what happens to the query in the background how are the documents pulled and how are they presented ordered to",
    "start": "150360",
    "end": "156640"
  },
  {
    "text": "the user in the search results we'll look at how they're matched we'll do faceted drill down we'll talk about text",
    "start": "156640",
    "end": "164519"
  },
  {
    "text": "relevance and sorting results with good text relevance and we have a lot of",
    "start": "164519",
    "end": "170159"
  },
  {
    "text": "examples and we'll we'll go through it in in good detail so you know what is the What is",
    "start": "170159",
    "end": "179319"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "the deal about search results well as we went through in the initial",
    "start": "179319",
    "end": "185280"
  },
  {
    "text": "example the more you satisfy the user search needs the more they're going to",
    "start": "185280",
    "end": "190519"
  },
  {
    "text": "interact with your product the more they'll buy your products and the more you'll retain those users so generating",
    "start": "190519",
    "end": "197840"
  },
  {
    "text": "good search results that meet people's needs will actually benefit both sales",
    "start": "197840",
    "end": "202920"
  },
  {
    "text": "and retention of those users I had an experience this weekend where I went to",
    "start": "202920",
    "end": "208920"
  },
  {
    "text": "buy some socks for my kids and I typed a number of terms into the search box and",
    "start": "208920",
    "end": "215879"
  },
  {
    "text": "I was actually unable to find the socks that I was looking for after about 20",
    "start": "215879",
    "end": "221200"
  },
  {
    "text": "minutes of messing around with it I said you know what this is not the site for",
    "start": "221200",
    "end": "226720"
  },
  {
    "text": "me I left that site went to a different store and found my socks that I was",
    "start": "226720",
    "end": "232560"
  },
  {
    "text": "looking for and made my purchase there so it's critical that when people come",
    "start": "232560",
    "end": "238439"
  },
  {
    "text": "with searches that we bring the results that they're expecting because that helps them buy our products more than",
    "start": "238439",
    "end": "244720"
  },
  {
    "text": "that search is becoming more Central to the whole user experience if we look at",
    "start": "244720",
    "end": "250040"
  },
  {
    "text": "the web we go to the search more often to find answers to the questions that we",
    "start": "250040",
    "end": "257000"
  },
  {
    "text": "have we interact with the search box frequently and our experience of",
    "start": "257000",
    "end": "262680"
  },
  {
    "text": "websites is more and more related to how we search and how well we search on the",
    "start": "262680",
    "end": "268280"
  },
  {
    "text": "desktop the same thing is happening search boxes are becoming more prevalent in desktop applications and especially",
    "start": "268280",
    "end": "274479"
  },
  {
    "text": "in the mobile space search is even beginning to be a method of getting to the functionality of the application",
    "start": "274479",
    "end": "281880"
  },
  {
    "text": "that we're interacting with so search really is Central to the whole user experience of your application so",
    "start": "281880",
    "end": "289759"
  },
  {
    "text": "bringing good search results means good uh user experience retention and",
    "start": "289759",
    "end": "295120"
  },
  {
    "text": "sales we're going to dive into a little bit of an overview of Amazon Cloud search now and again just for people who",
    "start": "295120",
    "end": "302080"
  },
  {
    "text": "are not uh familiar with Cloud search in the audience when you sign up for cloud",
    "start": "302080",
    "end": "307400"
  },
  {
    "text": "search and when you get started you create what's what we call a search domain a search domain is the hardware",
    "start": "307400",
    "end": "314080"
  },
  {
    "text": "and software that comprises a search engine in the cloud for you to interact",
    "start": "314080",
    "end": "320319"
  },
  {
    "text": "with it has several services that are deployed for you first of them of course",
    "start": "320319",
    "end": "326000"
  },
  {
    "text": "is a search service this is a restful service that allows you to that you",
    "start": "326000",
    "end": "331400"
  },
  {
    "text": "contact uh via HTTP get and in the URL you would specify your search",
    "start": "331400",
    "end": "338199"
  },
  {
    "text": "parameters you can access it as I said directly through API and we also have console interaction that allows you to",
    "start": "338199",
    "end": "344759"
  },
  {
    "text": "perform test searches right out of the box we have access control based on IP",
    "start": "344759",
    "end": "350360"
  },
  {
    "text": "uh white and black listing along with the search service",
    "start": "350360",
    "end": "355520"
  },
  {
    "text": "you will have a document service this also is a restful service again provid provided to you via an HTTP endpoint you",
    "start": "355520",
    "end": "362800"
  },
  {
    "text": "would post documents to your document service endpoint and you can add update",
    "start": "362800",
    "end": "368919"
  },
  {
    "text": "or delete documents that are currently in your search index the doc the document service is available direct to",
    "start": "368919",
    "end": "375720"
  },
  {
    "text": "API and we have a suite of command line tools that also provide access to the",
    "start": "375720",
    "end": "381160"
  },
  {
    "text": "document service as well as console interaction that allows you to upload documents to your search",
    "start": "381160",
    "end": "387199"
  },
  {
    "text": "domain Access Control here uh as well is provided by IP white and black listing",
    "start": "387199",
    "end": "394080"
  },
  {
    "text": "along with these two services in your domain oh these uh services are accessed",
    "start": "394080",
    "end": "400440"
  },
  {
    "text": "DNS uh through stable DNS entries and we perform load balancing um and all of the",
    "start": "400440",
    "end": "406800"
  },
  {
    "text": "work in the background to scale your domain to handle the documents and searches that you're sending to it along",
    "start": "406800",
    "end": "414400"
  },
  {
    "text": "with those two Services there's a configuration service that allows you among other things to create delete",
    "start": "414400",
    "end": "419960"
  },
  {
    "text": "domains as well as tell Cloud search how the fields in your documents should be indexed and the the options that are",
    "start": "419960",
    "end": "427560"
  },
  {
    "text": "applied to them the config service is available again direct to API and we",
    "start": "427560",
    "end": "433080"
  },
  {
    "text": "have command line tools and console interaction that enable uh enable you to",
    "start": "433080",
    "end": "438120"
  },
  {
    "text": "get to the config service here the access control is provided through your",
    "start": "438120",
    "end": "443599"
  },
  {
    "text": "AWS login okay that's an overview uh of",
    "start": "443599",
    "end": "450240"
  },
  {
    "text": "cloud search a little bit of overview on the search problem so we're going to move into a little bit more depth about",
    "start": "450240",
    "end": "456960"
  },
  {
    "text": "how queries our process to help us get an overview of where we can interact with the search process to bring better",
    "start": "456960",
    "end": "465199"
  },
  {
    "start": "463000",
    "end": "463000"
  },
  {
    "text": "results so when a user enters a query and this query could be uh Simple Text",
    "start": "465199",
    "end": "472720"
  },
  {
    "text": "could have metadata uh along with it that query goes to what we call an",
    "start": "472720",
    "end": "478360"
  },
  {
    "text": "inverted index the inverted index Maps terms to",
    "start": "478360",
    "end": "484360"
  },
  {
    "text": "documents that contain those terms just like a regular index when the query is processed",
    "start": "484360",
    "end": "490759"
  },
  {
    "text": "initially we generate the set of all matches for that query based on the terms in the query whether they're",
    "start": "490759",
    "end": "496879"
  },
  {
    "text": "metadata or text and we send that match logically through a filtering step where",
    "start": "496879",
    "end": "503960"
  },
  {
    "text": "we can apply matches in metadata to filter down the total set of matches into a smaller set for eventually",
    "start": "503960",
    "end": "512200"
  },
  {
    "text": "bringing through our ranking ranking is a separate computation it's performed on every document and we generate a score",
    "start": "512200",
    "end": "519599"
  },
  {
    "text": "for all of those documents um that are in the match set",
    "start": "519599",
    "end": "525000"
  },
  {
    "text": "after we compute the ranking we then can sort and there are a number of different ways that we can sort we could sort by",
    "start": "525000",
    "end": "531640"
  },
  {
    "text": "score or other ways so these are sort of the four areas that we're going to look at in terms of how we can improve our",
    "start": "531640",
    "end": "539079"
  },
  {
    "text": "search results so just thinking about matching",
    "start": "539079",
    "end": "546040"
  },
  {
    "text": "a little bit um when we look at the match from text to text there are a",
    "start": "546040",
    "end": "552920"
  },
  {
    "text": "number of steps that we perform on that text to bring it to a more canonical form so that things like case and uh and",
    "start": "552920",
    "end": "562760"
  },
  {
    "text": "punctuation and other things don't distract us from the correct results we take if we take a like the",
    "start": "562760",
    "end": "569959"
  },
  {
    "text": "quick brown fox has jumped we would first of all tokenize it so we split out",
    "start": "569959",
    "end": "575600"
  },
  {
    "text": "words based on either white space or punctuation separation we would then downcase",
    "start": "575600",
    "end": "583120"
  },
  {
    "text": "everything and we would apply a stemming algorithm so in this case we would take",
    "start": "583120",
    "end": "589800"
  },
  {
    "text": "foxes and we would stem it to fox jumped and stem it to jump we would apply",
    "start": "589800",
    "end": "596600"
  },
  {
    "text": "synonyms synonyms are applied at index time these are words that we add to text in",
    "start": "596600",
    "end": "603680"
  },
  {
    "text": "order to make additional matches in this case we would take if we had synonyms for brown that were ochre tan and mud we",
    "start": "603680",
    "end": "611880"
  },
  {
    "text": "would add those at indexing time to that",
    "start": "611880",
    "end": "616560"
  },
  {
    "text": "text okay this is all applied to text type fields in Cloud",
    "start": "617560",
    "end": "623800"
  },
  {
    "text": "search in addition we have literal Fields these are Atomic values text for these fields must be matched directly",
    "start": "623800",
    "end": "631600"
  },
  {
    "text": "examples of these are IDs user IDs isbns and facet",
    "start": "631600",
    "end": "637440"
  },
  {
    "text": "values within filtering uh we generally look at literal matching and numeric",
    "start": "637440",
    "end": "642600"
  },
  {
    "text": "ranges again filters are applied to reduce the match set we we mentioned ranking is a score",
    "start": "642600",
    "end": "648680"
  },
  {
    "text": "computation for each document and again sorting can be based either on the rank computation alphabetic or numeric",
    "start": "648680",
    "end": "656880"
  },
  {
    "text": "sorting we're going to move into now number of examples of search result",
    "start": "656880",
    "end": "663680"
  },
  {
    "start": "663000",
    "end": "663000"
  },
  {
    "text": "tuning and when we do that we want to think about what is it that we mean when",
    "start": "663680",
    "end": "669160"
  },
  {
    "text": "we say uh a search result is relevant going back to our original",
    "start": "669160",
    "end": "674760"
  },
  {
    "text": "example a user comes to our system with a particular need that they're trying to",
    "start": "674760",
    "end": "680680"
  },
  {
    "text": "fulfill in the in the first example we saw the user was trying to buy some",
    "start": "680680",
    "end": "686839"
  },
  {
    "text": "shoes potentially they had a particular in mind and the documents that we",
    "start": "686839",
    "end": "693200"
  },
  {
    "text": "returned for their search would be more or less relevant as they matched the need for",
    "start": "693200",
    "end": "700399"
  },
  {
    "text": "the user in buying those shoes so there are a number of Statistics that we can calculate um but",
    "start": "700399",
    "end": "709600"
  },
  {
    "text": "the overall point is that whether something is relevant is actually a",
    "start": "709600",
    "end": "715040"
  },
  {
    "text": "human judgment there's no statistic that we can calculate that absolutely States",
    "start": "715040",
    "end": "720360"
  },
  {
    "text": "whether something is relevant if I just type shoes I have a particular need and whether my need is met depends most",
    "start": "720360",
    "end": "727560"
  },
  {
    "text": "depends more on that need than on an absolute Criterion that we can",
    "start": "727560",
    "end": "733839"
  },
  {
    "text": "apply even for all of these statistics they are based on human judgment so if",
    "start": "733839",
    "end": "739040"
  },
  {
    "text": "we look at the two most common statistics are precision and recall Precision measures how well how many of",
    "start": "739040",
    "end": "746399"
  },
  {
    "text": "the results we retrieved were relevant to the users's query recall measures of",
    "start": "746399",
    "end": "752279"
  },
  {
    "text": "all of the documents that were Rel relevant to the user's query how many of them did we",
    "start": "752279",
    "end": "758320"
  },
  {
    "text": "return uh we have additional measures mean reciprocal rank which measures how well",
    "start": "758320",
    "end": "764360"
  },
  {
    "text": "we ranked the results and the discounted cumulative gain which measures which",
    "start": "764360",
    "end": "771040"
  },
  {
    "text": "scores our results based on how well we brought relevant stuff up in the results again the larger Point here is that",
    "start": "771040",
    "end": "779839"
  },
  {
    "text": "human judgment is required to determine whether something is relevant or not um",
    "start": "779839",
    "end": "785760"
  },
  {
    "text": "so as we look at search results and as you look at your search results it's important that you trust yourself and",
    "start": "785760",
    "end": "792760"
  },
  {
    "text": "know that you have to make those judgments about whether your results are good or",
    "start": "792760",
    "end": "799240"
  },
  {
    "start": "798000",
    "end": "798000"
  },
  {
    "text": "not as we move into examples uh we're going to work with a data set which is a",
    "start": "800800",
    "end": "806480"
  },
  {
    "text": "small set of movies um based on an IMDb",
    "start": "806480",
    "end": "811800"
  },
  {
    "text": "uh data set this data set is available in the console um you can create domains",
    "start": "811800",
    "end": "818000"
  },
  {
    "text": "with this data and there's a configuration supplied for you so as we",
    "start": "818000",
    "end": "823440"
  },
  {
    "text": "work through the examples uh you'll be able to create your own domains and and work on these examples",
    "start": "823440",
    "end": "829880"
  },
  {
    "text": "yourself within this data set we have a number of different fields we have so",
    "start": "829880",
    "end": "835720"
  },
  {
    "text": "these are all these are all films we have the title of the film all of the",
    "start": "835720",
    "end": "840920"
  },
  {
    "text": "actors in the film the directors of the film a genre which can be a single or",
    "start": "840920",
    "end": "846240"
  },
  {
    "text": "multiple genre for the film and the year the film was released this is our source data if we look at it in Source format",
    "start": "846240",
    "end": "854920"
  },
  {
    "text": "uh I'm showing you here a small example of what we call SDF or search data",
    "start": "854920",
    "end": "860320"
  },
  {
    "text": "format search data format is a little bit of syntax that we apply to our source data can be in either Json or XML",
    "start": "860320",
    "end": "869160"
  },
  {
    "text": "and this is an example of a single document you would batch multiples of this these documents to send them to the",
    "start": "869160",
    "end": "875480"
  },
  {
    "text": "document service within uh each document we have",
    "start": "875480",
    "end": "881399"
  },
  {
    "text": "a type here the type can be add or delete if we add an existing document",
    "start": "881399",
    "end": "888440"
  },
  {
    "text": "then that would update the values in that document um with new values that we",
    "start": "888440",
    "end": "894639"
  },
  {
    "text": "send along with the type we have an ID which is a globally unique identifier",
    "start": "894639",
    "end": "900880"
  },
  {
    "text": "for this document and a version Cloud search will serve the highest version",
    "start": "900880",
    "end": "906519"
  },
  {
    "text": "number of any document of the document um in an eventually consistent manner we",
    "start": "906519",
    "end": "913320"
  },
  {
    "text": "have a language English is currently the only supported language for cloud search and then we have a set of",
    "start": "913320",
    "end": "919800"
  },
  {
    "text": "fields within our Fields as we can see we have title director year genre and actor and then our data itself is the",
    "start": "919800",
    "end": "928040"
  },
  {
    "text": "values for those those fields this is an example of Star Trek insurrection as you",
    "start": "928040",
    "end": "933279"
  },
  {
    "text": "can see values can either be single or multiple genre and actra actor are both",
    "start": "933279",
    "end": "938839"
  },
  {
    "text": "multiple value uh Fields so this is how the data looks when you send it to Cloud",
    "start": "938839",
    "end": "947160"
  },
  {
    "start": "945000",
    "end": "945000"
  },
  {
    "text": "search okay we're going to go through a quick example on matching now matching",
    "start": "947160",
    "end": "953120"
  },
  {
    "text": "is really the basis for all of the search results that we're going to see",
    "start": "953120",
    "end": "959120"
  },
  {
    "text": "and it's it's very important that we get the correct document into the match",
    "start": "959120",
    "end": "964680"
  },
  {
    "text": "because if we don't actually match the document then we won't be able to rank or sort it or bring it to the",
    "start": "964680",
    "end": "971839"
  },
  {
    "text": "top we talked about text Fields text Fields allow you to do full text",
    "start": "971839",
    "end": "977199"
  },
  {
    "text": "matching so a query like rolling would match the ter the the document a document that contained Rolling Stones",
    "start": "977199",
    "end": "984360"
  },
  {
    "text": "or Star would match a document that contains Star Trek um and we also have",
    "start": "984360",
    "end": "990839"
  },
  {
    "text": "literal Fields where you must match the entire field exactly so for Star Trek in",
    "start": "990839",
    "end": "996360"
  },
  {
    "text": "Insurrection star would not match that field finally we can do numeric range",
    "start": "996360",
    "end": "1003079"
  },
  {
    "text": "matching so if we have years we can match exactly the year 1978 or we can match 1970 through",
    "start": "1003079",
    "end": "1011800"
  },
  {
    "text": "1980 so a funny little fact about Johnny Depp that maybe people don't know is that when Johnny Depp travels he",
    "start": "1012839",
    "end": "1019440"
  },
  {
    "text": "actually uses a number of pseudonyms uh in hotels so that the paparazzi don't",
    "start": "1019440",
    "end": "1024600"
  },
  {
    "text": "find him one of those and some of those pseudonyms have become uh famous and he's he's actually known by some of them",
    "start": "1024600",
    "end": "1030798"
  },
  {
    "text": "one of them is actually Oprah noodle Mantra um so if we imagine a user is",
    "start": "1030799",
    "end": "1036839"
  },
  {
    "text": "coming to our Movie Database and they want to find movies by Johnny Depp but they actually have only heard this name",
    "start": "1036839",
    "end": "1043600"
  },
  {
    "text": "Oprah noodle Mantra who is that they don't know if we search for Oprah noodle mantra",
    "start": "1043600",
    "end": "1049400"
  },
  {
    "text": "and I'm I'm showing here the URL so that we can get an idea of how that happens",
    "start": "1049400",
    "end": "1055080"
  },
  {
    "text": "uh within our URL we send HTTP and then we use our search endpoint which Cloud",
    "start": "1055080",
    "end": "1061120"
  },
  {
    "text": "search gives us and then the the path is specified as the API version in this",
    "start": "1061120",
    "end": "1067679"
  },
  {
    "text": "case 201121 as well as the search um path and",
    "start": "1067679",
    "end": "1074000"
  },
  {
    "text": "then our search parameters in this case we use Q equals opra noodle mantra",
    "start": "1074000",
    "end": "1079960"
  },
  {
    "text": "um that is Q equals matches against all text fields in the domain we also would be able to specify",
    "start": "1079960",
    "end": "1087320"
  },
  {
    "text": "other search parameters using standard URL syntax with Amper sand and add other",
    "start": "1087320",
    "end": "1092720"
  },
  {
    "text": "parameters well if we search for oer nuodle mantra not surprisingly we get no results so how can we solve this why do",
    "start": "1092720",
    "end": "1099880"
  },
  {
    "text": "we get no results because Oprah and noodle Mantra Oprah may be in our source",
    "start": "1099880",
    "end": "1105080"
  },
  {
    "text": "data but noodle Mantra almost certainly is not so what we can do is Define",
    "start": "1105080",
    "end": "1110640"
  },
  {
    "text": "synonyms mapping the term depth to Oprah and noodle Mantra we can do this in our",
    "start": "1110640",
    "end": "1117799"
  },
  {
    "text": "console again or direct to API I've got a screenshot of the console here where I've defined noodle Mantra and Oprah as",
    "start": "1117799",
    "end": "1125120"
  },
  {
    "text": "synonyms for debt when we reindex our documents both of those terms will be",
    "start": "1125120",
    "end": "1131159"
  },
  {
    "text": "added everywhere the term depth appears now if we search for Oprah",
    "start": "1131159",
    "end": "1136760"
  },
  {
    "text": "noodle Mantra we can see retrieve 38 results including i' I've given a quick",
    "start": "1136760",
    "end": "1143760"
  },
  {
    "text": "screenshot here of four of the the top four results um on the left we have the",
    "start": "1143760",
    "end": "1149159"
  },
  {
    "text": "title of the movie and on the right we have actors and genres so here we can see all of these are Johnny Depp",
    "start": "1149159",
    "end": "1158080"
  },
  {
    "start": "1157000",
    "end": "1157000"
  },
  {
    "text": "movies there are some other places that we can intervene to bring more matches",
    "start": "1158799",
    "end": "1164840"
  },
  {
    "text": "um for our users so opr noodle mon ra maybe a somewhat silly example but in",
    "start": "1164840",
    "end": "1171919"
  },
  {
    "text": "fact there are a number of examples that make a lot more sense in my search this past weekend I was searching for kids",
    "start": "1171919",
    "end": "1179159"
  },
  {
    "text": "socks and there are a number of synonyms for kids that make sense in a a Department Store contact like youth or",
    "start": "1179159",
    "end": "1186520"
  },
  {
    "text": "child or children Etc so adding those terms will help people find the",
    "start": "1186520",
    "end": "1193880"
  },
  {
    "text": "documents that are um that are in the right place brands are another typical",
    "start": "1193880",
    "end": "1199440"
  },
  {
    "text": "place where you might want to think about adding synonyms um this would allow you to make sure that all of the",
    "start": "1199440",
    "end": "1206200"
  },
  {
    "text": "the clothing or shoes that belong to a brand all come together under the same",
    "start": "1206200",
    "end": "1212320"
  },
  {
    "text": "terms we mentioned stemming stemming is another way that we ensure that the user",
    "start": "1212320",
    "end": "1219919"
  },
  {
    "text": "terms can match correctly to our documents so in this case I've shown clothing so both clothing and clothes",
    "start": "1219919",
    "end": "1227760"
  },
  {
    "text": "will be stemmed in user queries and in the index to the single could be stemm to the single stem cloth in in this case",
    "start": "1227760",
    "end": "1235400"
  },
  {
    "text": "anybody searching for clothing would find everything with either clothing or clothes and anybody searching for",
    "start": "1235400",
    "end": "1240919"
  },
  {
    "text": "clothes would find everything for either clothing or clothes you can set your stems in your Cloud search console as",
    "start": "1240919",
    "end": "1248159"
  },
  {
    "text": "well as through API finally we have stop wordss stop wordss are a way of actually removing",
    "start": "1248159",
    "end": "1254080"
  },
  {
    "text": "confusing matches when we have common low value terms like uh a an or the",
    "start": "1254080",
    "end": "1260919"
  },
  {
    "text": "these terms will not actually allow us to match documents that matter for the",
    "start": "1260919",
    "end": "1266159"
  },
  {
    "text": "user so stop wordss allow us to remove those terms from the index and from the user query leaving us with um a simpler",
    "start": "1266159",
    "end": "1274159"
  },
  {
    "text": "query that's more likely to match the correct",
    "start": "1274159",
    "end": "1278399"
  },
  {
    "start": "1276000",
    "end": "1276000"
  },
  {
    "text": "document so we're going to move from matching now into the filtering realm",
    "start": "1279240",
    "end": "1285200"
  },
  {
    "text": "and we're going to step through an example of faceted drill down search facets are generally provided on",
    "start": "1285200",
    "end": "1292360"
  },
  {
    "text": "the screen and what they report is account for how many documents have a",
    "start": "1292360",
    "end": "1298080"
  },
  {
    "text": "particular attribute how many documents that were matched have a particular attribute so if I was searching for a",
    "start": "1298080",
    "end": "1306840"
  },
  {
    "text": "movie and I know it's a Will Smith movie and I don't remember the title so I",
    "start": "1306840",
    "end": "1312120"
  },
  {
    "text": "could try to search for Will Smith if I do that",
    "start": "1312120",
    "end": "1318760"
  },
  {
    "text": "I'd find 34 results and bad boys Ali Pursuit of Happiness I Am Legend my Handcock does",
    "start": "1318760",
    "end": "1326919"
  },
  {
    "text": "not actually appear in the top results anywhere along with my search results I",
    "start": "1326919",
    "end": "1332679"
  },
  {
    "text": "might also provide some facets so facets can be retrieved along with search",
    "start": "1332679",
    "end": "1338720"
  },
  {
    "text": "results out of cloud search and then displayed to the user in a format somewhat as I'm showing here we have",
    "start": "1338720",
    "end": "1344760"
  },
  {
    "text": "facets for Action films comedy films drama sci-fi Etc we might also show",
    "start": "1344760",
    "end": "1350960"
  },
  {
    "text": "facets for year um so we might list out all of the years that matching films",
    "start": "1350960",
    "end": "1357200"
  },
  {
    "text": "have and these are sorted Again by the count of matches so as a user if I type",
    "start": "1357200",
    "end": "1363880"
  },
  {
    "text": "Will Smith I may think to myself well I know that that was a sci-fi film and I",
    "start": "1363880",
    "end": "1369440"
  },
  {
    "text": "think it was fairly recent so I might click on SciFi I might click on",
    "start": "1369440",
    "end": "1374679"
  },
  {
    "text": "2008 if we look at what the query comes out from from that those clicks it would",
    "start": "1374679",
    "end": "1381200"
  },
  {
    "text": "look something like this here we're using a BQ query and a BQ query is allows us to mix",
    "start": "1381200",
    "end": "1387640"
  },
  {
    "text": "Boolean combinations of different expressions in this case we're using the terms Will Smith we've added the genre",
    "start": "1387640",
    "end": "1394880"
  },
  {
    "text": "sci-fi and we've added the year 2008 if we run this this query we find one",
    "start": "1394880",
    "end": "1402400"
  },
  {
    "text": "result and it is Hancock so the round trip there looks",
    "start": "1402400",
    "end": "1407720"
  },
  {
    "text": "like in our search our initial search we pull facets for year and genre and then",
    "start": "1407720",
    "end": "1414080"
  },
  {
    "text": "we present those to the user when the user clicks on them we create queries",
    "start": "1414080",
    "end": "1419200"
  },
  {
    "text": "which provide values for those fields that we want to narrow our search",
    "start": "1419200",
    "end": "1426440"
  },
  {
    "start": "1426000",
    "end": "1426000"
  },
  {
    "text": "results there's a lot of different areas where filtering allows us to narrow",
    "start": "1426440",
    "end": "1432279"
  },
  {
    "text": "search results and provide users with more relevant items as we saw in this example we used years but we can also",
    "start": "1432279",
    "end": "1438720"
  },
  {
    "text": "use year ranges here we're we're specifying a year value that is 1994",
    "start": "1438720",
    "end": "1444200"
  },
  {
    "text": "1995 or the range 20205 or the range 2009 and",
    "start": "1444200",
    "end": "1450520"
  },
  {
    "text": "greater another typical place to filter is with prices often we'll want to allow",
    "start": "1450520",
    "end": "1455600"
  },
  {
    "text": "our users to filter down to items that are within $10 to $20 say instock status",
    "start": "1455600",
    "end": "1461760"
  },
  {
    "text": "is another great uh filter that we can allow that we can provide so that users can only see search results for items",
    "start": "1461760",
    "end": "1468039"
  },
  {
    "text": "that are in stock obviously they're going to be more likely to want to buy those we can also use filter filters to",
    "start": "1468039",
    "end": "1475399"
  },
  {
    "text": "segregate data sets if our website has both DVD and book contents on it we can",
    "start": "1475399",
    "end": "1482600"
  },
  {
    "text": "allow our users to restrict their searches either to books or DVDs based on a type field that we provide for each",
    "start": "1482600",
    "end": "1489320"
  },
  {
    "text": "of our documents and a final example would be Access Control based on a",
    "start": "1489320",
    "end": "1494520"
  },
  {
    "text": "user's um ID so for some use cases you would want users to have access to",
    "start": "1494520",
    "end": "1501200"
  },
  {
    "text": "certain documents and not have access to other documents typically we would create groups and put those group IDs",
    "start": "1501200",
    "end": "1509240"
  },
  {
    "text": "onto the documents themselves as user queries come in we would pass their groups along with the query to filter",
    "start": "1509240",
    "end": "1516240"
  },
  {
    "text": "out groups that they don't belong",
    "start": "1516240",
    "end": "1520320"
  },
  {
    "start": "1521000",
    "end": "1521000"
  },
  {
    "text": "to okay we're going to move from filtering into ranking now and we're",
    "start": "1522279",
    "end": "1527640"
  },
  {
    "text": "going to talk about the text relevance function that cloud search provides out of the box text",
    "start": "1527640",
    "end": "1534600"
  },
  {
    "text": "relevance is a measure from the users's query where they've provided text terms",
    "start": "1534600",
    "end": "1540600"
  },
  {
    "text": "to text that we have in our documents and typically this is fre text so uh if",
    "start": "1540600",
    "end": "1545919"
  },
  {
    "text": "we have descriptions or titles we want to know how relevant is that each",
    "start": "1545919",
    "end": "1553080"
  },
  {
    "text": "document based on what is the user's query terms now there are a couple of different",
    "start": "1553080",
    "end": "1559080"
  },
  {
    "text": "uh measures that we provide the first one is called tfidf users people on the phone who are familiar with search will",
    "start": "1559080",
    "end": "1566000"
  },
  {
    "text": "be very familiar with this one what this measures is how unique is each of the",
    "start": "1566000",
    "end": "1572960"
  },
  {
    "text": "query terms with respect to the Corpus is is the user typing a term which is",
    "start": "1572960",
    "end": "1578840"
  },
  {
    "text": "very unique or is it very common and it also measures how often does that term",
    "start": "1578840",
    "end": "1587240"
  },
  {
    "text": "match in the document so we look at uh we get a higher score",
    "start": "1587240",
    "end": "1593799"
  },
  {
    "text": "when user query terms are very unique across the Corpus and there are many matches within a particular",
    "start": "1593799",
    "end": "1600399"
  },
  {
    "text": "document the second component of the text relevance function is a proximity component and what we're looking at",
    "start": "1600399",
    "end": "1606840"
  },
  {
    "text": "there is how many of the users terms matched and how close together were",
    "start": "1606840",
    "end": "1611880"
  },
  {
    "text": "those matches so if more terms appear in a particular document or and those terms",
    "start": "1611880",
    "end": "1618559"
  },
  {
    "text": "are closer together and they're in order we would score the",
    "start": "1618559",
    "end": "1624000"
  },
  {
    "text": "most okay we're going to move into an example of text relevance now so if I'm",
    "start": "1625399",
    "end": "1630760"
  },
  {
    "text": "thinking about Harry Potter and the Deathly Hallows I might come to my search box and I might type",
    "start": "1630760",
    "end": "1635840"
  },
  {
    "text": "Harry if I do that I get a number of responses 179 results including prisoner",
    "start": "1635840",
    "end": "1643120"
  },
  {
    "text": "of aaban which is nice but then we have a number of other another of other movies which are um a little bit",
    "start": "1643120",
    "end": "1649559"
  },
  {
    "text": "confusing draget top secret Guys and Dolls and these are coming up because of matches in the actor",
    "start": "1649559",
    "end": "1656120"
  },
  {
    "text": "field so we can look at creating what we call",
    "start": "1656120",
    "end": "1662240"
  },
  {
    "text": "a rank expression and this allows us to mix both the text relevance as well as other",
    "start": "1662240",
    "end": "1670360"
  },
  {
    "text": "fields that we have in our document in an algebraic way to provide a score for that document it allows us to augment",
    "start": "1670360",
    "end": "1677320"
  },
  {
    "text": "the text relevance really with uh more information so one one kind of rank",
    "start": "1677320",
    "end": "1685039"
  },
  {
    "text": "expression that's useful is a recency based uh rank expression what we try to do here is we try to say well if we have",
    "start": "1685039",
    "end": "1692039"
  },
  {
    "text": "a year what we'd like to know is what are the more recent um what are more more recent documents that matched in",
    "start": "1692039",
    "end": "1699320"
  },
  {
    "text": "this case because we're looking for Deathly Hallows that's a more recent movie we'd like to see that one move up in the ranking I've shown a a small",
    "start": "1699320",
    "end": "1706399"
  },
  {
    "text": "piece of the console here just to give you a feel for how you define a rank expression in Cloud",
    "start": "1706399",
    "end": "1712000"
  },
  {
    "text": "search you give it a name in this case I've called it recency and then you type",
    "start": "1712000",
    "end": "1717080"
  },
  {
    "text": "an expression here I've done I've used the text relevance and then I've added my recency component and if we look at",
    "start": "1717080",
    "end": "1724360"
  },
  {
    "text": "that we have the age with respect to the newest document in the set in the system",
    "start": "1724360",
    "end": "1729679"
  },
  {
    "text": "so 2012 minus year this will increase as the documents that match it get older we",
    "start": "1729679",
    "end": "1737159"
  },
  {
    "text": "then take the inverse of that and multiply by 100 so this would give us",
    "start": "1737159",
    "end": "1742600"
  },
  {
    "text": "the highest score for the most recent documents we add that into the text relevance and that will boost documents",
    "start": "1742600",
    "end": "1749120"
  },
  {
    "text": "that match higher up in the rankings when we apply that we see Harry",
    "start": "1749120",
    "end": "1756039"
  },
  {
    "text": "Potter and the Deathly Hallows does indeed come to the top and we have a",
    "start": "1756039",
    "end": "1762200"
  },
  {
    "text": "couple of other Harry Potters jump up which is good and we also have more recent documents popping",
    "start": "1762200",
    "end": "1769279"
  },
  {
    "text": "um in the ranking what I'd also like to point out here is we can see the effect of adding in the recency the text",
    "start": "1769279",
    "end": "1777279"
  },
  {
    "text": "relevance scores for these do documents are now a little bit more mixed so we're not sorting strictly based on text",
    "start": "1777279",
    "end": "1783039"
  },
  {
    "text": "relevance we have added in this recency component Cloud search we've recently",
    "start": "1783039",
    "end": "1789279"
  },
  {
    "text": "released a feature that allows you to Define rank Expressions right along with your query if we think back to the query",
    "start": "1789279",
    "end": "1796559"
  },
  {
    "text": "URL we can add add a URL parameter where we specify a",
    "start": "1796559",
    "end": "1803640"
  },
  {
    "text": "rank expression here with the rank Dash name uh URL parameter equals and then we",
    "start": "1803640",
    "end": "1810399"
  },
  {
    "text": "just put our rank expression right into the query itself once we've done that we can add a",
    "start": "1810399",
    "end": "1816679"
  },
  {
    "text": "rank equals parameter to the query to rank by that parameter so we can do this",
    "start": "1816679",
    "end": "1822960"
  },
  {
    "text": "through the console and that gets applied to the domain or we can actually Define this ver this same rank function",
    "start": "1822960",
    "end": "1829039"
  },
  {
    "text": "in the URL as we send the query itself now that has a number of other",
    "start": "1829039",
    "end": "1834960"
  },
  {
    "text": "uses among them are AB testing this allows us to very easily create",
    "start": "1834960",
    "end": "1841320"
  },
  {
    "text": "different rank functions uh allow different users exposure to those functions and compare",
    "start": "1841320",
    "end": "1847720"
  },
  {
    "text": "their behavior when they get those results we can also use uh query time",
    "start": "1847720",
    "end": "1853880"
  },
  {
    "text": "rank Expressions to do user customized searches as I'm looking at a particular particular user I may know that this",
    "start": "1853880",
    "end": "1860440"
  },
  {
    "text": "user prefers a particular brand so I might actually pass in that brand or",
    "start": "1860440",
    "end": "1866399"
  },
  {
    "text": "pass in an additional value for that brand that allows those those results to get boosted",
    "start": "1866399",
    "end": "1872039"
  },
  {
    "text": "higher and finally we can use this to do geob based searching and sorting we can embed the users's",
    "start": "1872039",
    "end": "1879720"
  },
  {
    "text": "latitude and longitude in the query in inside of the distance function that gets calculated for each document uh",
    "start": "1879720",
    "end": "1887080"
  },
  {
    "text": "that's returned and sort on that rank function so coming back to our",
    "start": "1887080",
    "end": "1894000"
  },
  {
    "text": "example we're going to look at another feature that we've recently released which is called field weighted relevance",
    "start": "1894000",
    "end": "1900919"
  },
  {
    "start": "1895000",
    "end": "1895000"
  },
  {
    "text": "this allows us to weight the value of different fields differently in the text",
    "start": "1900919",
    "end": "1906000"
  },
  {
    "text": "relevance calculation and we'd use this where we have some fields that are more important for instance in a movie",
    "start": "1906000",
    "end": "1912320"
  },
  {
    "text": "database we know that the title matches are going to be likely more important than matches in a description or in",
    "start": "1912320",
    "end": "1918320"
  },
  {
    "text": "actor and we can also allow data fields that are cleaner or that are generated",
    "start": "1918320",
    "end": "1924880"
  },
  {
    "text": "internally as opposed to user generated to have more weight in the text relevance",
    "start": "1924880",
    "end": "1930480"
  },
  {
    "text": "calculation there's a little bit of a complicated syntax but I'll go through it so without any parameters in it it",
    "start": "1930480",
    "end": "1937440"
  },
  {
    "text": "looks like cs. text relevance and then we specify a weights object which gives",
    "start": "1937440",
    "end": "1942760"
  },
  {
    "text": "us the waiting for each of the fields and we can also specify default weight for fields that are not mentioned in the",
    "start": "1942760",
    "end": "1949279"
  },
  {
    "text": "weights field drilling into the weights themselves we specify a field name and a",
    "start": "1949279",
    "end": "1954840"
  },
  {
    "text": "weight value for that field and for our search we're going to wait the title at",
    "start": "1954840",
    "end": "1961519"
  },
  {
    "text": "four four times and the actor at one quarter this will adjust our overall",
    "start": "1961519",
    "end": "1967399"
  },
  {
    "text": "score so that matches in the title count four times as much actually what is it eight times as much nope 32 I can't do",
    "start": "1967399",
    "end": "1975720"
  },
  {
    "text": "the math off the top of my head but much more than actor we can also within the rank",
    "start": "1975720",
    "end": "1982399"
  },
  {
    "text": "expression similarly mix in other functions so here I put our recency function we can create an overall score",
    "start": "1982399",
    "end": "1991080"
  },
  {
    "text": "rank expression that contains both the text weighted text relevance and the",
    "start": "1991080",
    "end": "1996279"
  },
  {
    "text": "recency component to and allow us to sort by that if we do that we can see",
    "start": "1996279",
    "end": "2002240"
  },
  {
    "text": "that we generate all of the Harry Potter results and again sorted in year",
    "start": "2002240",
    "end": "2011039"
  },
  {
    "start": "2013000",
    "end": "2013000"
  },
  {
    "text": "order so there's a couple of lessons to take out of the uh ranking uh discussion",
    "start": "2013159",
    "end": "2020519"
  },
  {
    "text": "the first is that text relevance only goes so far and where we have documents that have a number of similar terms in",
    "start": "2020519",
    "end": "2027200"
  },
  {
    "text": "them and look fairly similar those documents will score",
    "start": "2027200",
    "end": "2033000"
  },
  {
    "text": "similarly and the the text relevance itself cannot discriminate past a",
    "start": "2033000",
    "end": "2039360"
  },
  {
    "text": "certain point so we need other sources of relevance that we can use to create",
    "start": "2039360",
    "end": "2045799"
  },
  {
    "text": "rank Expressions to augment and Aid our ranking typical examples of these uh",
    "start": "2045799",
    "end": "2052200"
  },
  {
    "text": "other sources of relevance are user Behavior so if we know that for a",
    "start": "2052200",
    "end": "2057720"
  },
  {
    "text": "certain document it gets clicked on a lot or we know that uh people buy this",
    "start": "2057720",
    "end": "2063720"
  },
  {
    "text": "particular product a lot we can add a score to our source documents that allows us to boost that document in the",
    "start": "2063720",
    "end": "2071560"
  },
  {
    "text": "ranking other common sources of relevance are link structure if we know a document gets linked to quite a bit uh",
    "start": "2071560",
    "end": "2078320"
  },
  {
    "text": "we can provide that information in the source documents and and rank based on that document quality is another big",
    "start": "2078320",
    "end": "2084839"
  },
  {
    "text": "area uh where you have users of the system creating content frequently that",
    "start": "2084839",
    "end": "2089960"
  },
  {
    "text": "content is either spammy or may not be of such high quality you can choose to",
    "start": "2089960",
    "end": "2095398"
  },
  {
    "text": "downweight those against field that you created yourself and authoritative",
    "start": "2095399",
    "end": "2101240"
  },
  {
    "text": "sources also in a user context if you know on a forum for instance if somebody",
    "start": "2101240",
    "end": "2106359"
  },
  {
    "text": "is a you know a frequent contributor or gets quoted a lot you can then identify",
    "start": "2106359",
    "end": "2113400"
  },
  {
    "text": "that user as a an authoritative source of information and you can mark their",
    "start": "2113400",
    "end": "2118480"
  },
  {
    "text": "documents or add a score for their documents that uh brings them up in the ranking of course removing spammy",
    "start": "2118480",
    "end": "2124800"
  },
  {
    "text": "content will also in help to improve ranking so we're going to move from ranking now",
    "start": "2124800",
    "end": "2131839"
  },
  {
    "start": "2128000",
    "end": "2128000"
  },
  {
    "text": "into sorting and we're going to come back to our Harry Potter example and if",
    "start": "2131839",
    "end": "2137280"
  },
  {
    "text": "I again if I search for Harry um I can sort not only by the text relevance or",
    "start": "2137280",
    "end": "2144160"
  },
  {
    "text": "rank Expressions I can sort directly by fields on my documents I can choose to sort by year I can choose to sort by",
    "start": "2144160",
    "end": "2150960"
  },
  {
    "text": "alphabetically by text fields and I do this by specifying the query parameter",
    "start": "2150960",
    "end": "2156119"
  },
  {
    "text": "rank equals in in this case I said negative year uh the the default sword",
    "start": "2156119",
    "end": "2161359"
  },
  {
    "text": "order is ascending negating it provides me a descending sort so rank equals negative year will sort all of my search",
    "start": "2161359",
    "end": "2168200"
  },
  {
    "text": "results for Harry descending by year and we can see here again Harry Potter and",
    "start": "2168200",
    "end": "2174040"
  },
  {
    "text": "Deathly Hallows pops up as well as a couple of other 2011",
    "start": "2174040",
    "end": "2180440"
  },
  {
    "start": "2180000",
    "end": "2180000"
  },
  {
    "text": "matches so that's an overview of the way the queries are processed where you can",
    "start": "2181119",
    "end": "2187839"
  },
  {
    "text": "interact with them how you can um how you can affect the ranking when you initially deploy your",
    "start": "2187839",
    "end": "2194720"
  },
  {
    "text": "data into Cloud search you're going to want to do some tuning and the way to",
    "start": "2194720",
    "end": "2200440"
  },
  {
    "text": "approach that is first of all to identify either through logs or through",
    "start": "2200440",
    "end": "2207640"
  },
  {
    "text": "understanding the application in the domain what are going to be the top queries and it's important to generate a",
    "start": "2207640",
    "end": "2213640"
  },
  {
    "text": "list of top queries that you can actually use to tune um you also need to",
    "start": "2213640",
    "end": "2220040"
  },
  {
    "text": "take some if you have logged some random queries out of the long tail to make sure that everything looks good there as",
    "start": "2220040",
    "end": "2226160"
  },
  {
    "text": "well starting with that list of queries then you can also look at um what",
    "start": "2226160",
    "end": "2234079"
  },
  {
    "text": "documents are converting where where are their click-throughs you can look at logs for full user sessions to",
    "start": "2234079",
    "end": "2241280"
  },
  {
    "text": "understand somebody first searched for shoes and then they searched for women's shoes or they added filters um and you",
    "start": "2241280",
    "end": "2249000"
  },
  {
    "text": "can use that behavior to inform how you should tune the results so that the more",
    "start": "2249000",
    "end": "2254680"
  },
  {
    "text": "relevant items come to the top you can of course do AB testing so this allows",
    "start": "2254680",
    "end": "2260520"
  },
  {
    "text": "you to deploy different weightings that that and test them against uh the your",
    "start": "2260520",
    "end": "2265720"
  },
  {
    "text": "user base and find out which ones are performing better in terms of any metrics you that make sense like",
    "start": "2265720",
    "end": "2272599"
  },
  {
    "text": "click-throughs or conversion and finally you do want to look at your logs to understand what are people searching for",
    "start": "2272599",
    "end": "2278920"
  },
  {
    "text": "and uh make sure that you're covering all of those faes I am going to take a small risk and",
    "start": "2278920",
    "end": "2288079"
  },
  {
    "text": "um preview something that we are going to be releasing in short order and if I",
    "start": "2288079",
    "end": "2294000"
  },
  {
    "text": "can get go to meeting to cooperate with me",
    "start": "2294000",
    "end": "2299440"
  },
  {
    "text": "oops so just try",
    "start": "2299440",
    "end": "2304759"
  },
  {
    "text": "squishing what we're looking at here is our Cloud search console on the left of",
    "start": "2306000",
    "end": "2311839"
  },
  {
    "text": "the console I have all of my cloud search",
    "start": "2311839",
    "end": "2319520"
  },
  {
    "text": "domains and in this case I have my uh IMDb domain this one is the one where I",
    "start": "2319520",
    "end": "2326560"
  },
  {
    "text": "had my synonyms defined as we our dashboard it'll it shows us sort of an",
    "start": "2326560",
    "end": "2332119"
  },
  {
    "text": "overview of our search domain I have 5,000 documents six index Fields",
    "start": "2332119",
    "end": "2339440"
  },
  {
    "text": "currently running on one instance with one partition and I'm running on a small instance and here we can see these are",
    "start": "2339440",
    "end": "2345760"
  },
  {
    "text": "the endpoints that cloud search provides me that I would put into my URL um to do",
    "start": "2345760",
    "end": "2351400"
  },
  {
    "text": "my searches we are within within Cloud search as I",
    "start": "2351400",
    "end": "2357280"
  },
  {
    "text": "mentioned we have a uh search interface here I can type a quick query like",
    "start": "2357280",
    "end": "2364480"
  },
  {
    "text": "harant Met Sally and I can see I have my results now these results are not actually ideal",
    "start": "2364480",
    "end": "2372040"
  },
  {
    "text": "I have tide land Chitty Chitty Bang Bang Sunrise a song of two humans and Harry",
    "start": "2372040",
    "end": "2377240"
  },
  {
    "text": "metali at the bottom my intuition here is that Harry metali should be higher up",
    "start": "2377240",
    "end": "2383560"
  },
  {
    "text": "in the rank and what's happening is I have all of these other films have Harry",
    "start": "2383560",
    "end": "2390240"
  },
  {
    "text": "or and Sally in the actor field and that's actually interfering with the Harry and Sally in the title I can come",
    "start": "2390240",
    "end": "2397960"
  },
  {
    "text": "over to my compare rank expressions and this is as I mentioned a feature that we are uh just previewing today but will be",
    "start": "2397960",
    "end": "2404640"
  },
  {
    "text": "releasing soon and I can click over to here what I get here is a comparison",
    "start": "2404640",
    "end": "2410400"
  },
  {
    "text": "between one rank expression and a second rank expression if I type my Search",
    "start": "2410400",
    "end": "2416720"
  },
  {
    "text": "terms Harry and Sally you can see I have identical",
    "start": "2416720",
    "end": "2422040"
  },
  {
    "text": "results because I haven't yet changed anything if I want to do field waiting",
    "start": "2422040",
    "end": "2427920"
  },
  {
    "text": "I can come to my field weights dropdown and it shows me all of the text",
    "start": "2427920",
    "end": "2432960"
  },
  {
    "text": "fields in my domain I can choose",
    "start": "2432960",
    "end": "2438200"
  },
  {
    "text": "title and I can increase my title weight there that Harry Met",
    "start": "2443920",
    "end": "2452400"
  },
  {
    "text": "Valley then pops up to the top here useful tool again allows you to play",
    "start": "2473880",
    "end": "2479480"
  },
  {
    "text": "with the um the results as they come out if we take a little bit more complicated queries query we take our Harry example",
    "start": "2479480",
    "end": "2489240"
  },
  {
    "text": "here we can see uh all of our matches for Harry oh I already have my rank expression in there so I have to I have",
    "start": "2489359",
    "end": "2495640"
  },
  {
    "text": "to reset um here let me just pop over to a separate window nope me pop over to a",
    "start": "2495640",
    "end": "2501800"
  },
  {
    "text": "separate window",
    "start": "2501800",
    "end": "2505119"
  },
  {
    "text": "all right well that's not working for me well we can we can actually take out our",
    "start": "2517440",
    "end": "2524000"
  },
  {
    "text": "we can drop our title back to one and remove this piece okay so now",
    "start": "2524000",
    "end": "2531599"
  },
  {
    "text": "we're back to our default ranking if we again work with our actor",
    "start": "2531599",
    "end": "2538760"
  },
  {
    "text": "and drop our actor down so that Harry does not match in the actor field we can",
    "start": "2538760",
    "end": "2544559"
  },
  {
    "text": "see Harry Potter results start to Bubble Up in the ranking on the right side we see uh some icons that indicate the",
    "start": "2544559",
    "end": "2551559"
  },
  {
    "text": "change in position of these documents with respect to the second rank expression you can use these you can use",
    "start": "2551559",
    "end": "2557480"
  },
  {
    "text": "this panel to deploy this search expression to your domain and continue to use",
    "start": "2557480",
    "end": "2564520"
  },
  {
    "text": "it or use it query time also or query time also so we're just going to talk a",
    "start": "2566040",
    "end": "2571800"
  },
  {
    "start": "2567000",
    "end": "2567000"
  },
  {
    "text": "little bit about debugging search results and the most important thing",
    "start": "2571800",
    "end": "2577440"
  },
  {
    "text": "about debugging search results is to find the document itself seems like an",
    "start": "2577440",
    "end": "2583000"
  },
  {
    "text": "obvious uh point but more often than not either some piece of text is missing off",
    "start": "2583000",
    "end": "2590640"
  },
  {
    "text": "the source document or the source document is not actually in the index so the first thing to do when something is",
    "start": "2590640",
    "end": "2597079"
  },
  {
    "text": "not coming up in the ranking is to check back with the source itself make sure that document exists and then search",
    "start": "2597079",
    "end": "2603520"
  },
  {
    "text": "with more text and more and exact phrases to make sure that you can actually match that document um again",
    "start": "2603520",
    "end": "2611880"
  },
  {
    "text": "checking as well for filter values what's the filter on the search and increasing pagination can also help uh",
    "start": "2611880",
    "end": "2618319"
  },
  {
    "text": "to reveal more results so the first step in debugging a result is identify what",
    "start": "2618319",
    "end": "2623760"
  },
  {
    "text": "is the result that you expect to see and make sure that's it's actually",
    "start": "2623760",
    "end": "2628800"
  },
  {
    "text": "matching then you can use return fields for both text relevance and rank",
    "start": "2628800",
    "end": "2634760"
  },
  {
    "text": "Expressions to display the score that each document is getting this will",
    "start": "2634760",
    "end": "2639880"
  },
  {
    "text": "allow you to compare the actual document score with other scores in the search",
    "start": "2639880",
    "end": "2645440"
  },
  {
    "text": "results and do a little bit of thinking about well what are the terms that are matching why is it scoring the way that",
    "start": "2645440",
    "end": "2651240"
  },
  {
    "text": "it's scoring and that will give you a clue as to what you should tune both for field weights and for rank Expressions",
    "start": "2651240",
    "end": "2658559"
  },
  {
    "text": "to bring that document higher uh in the results and again matching very very",
    "start": "2658559",
    "end": "2664319"
  },
  {
    "text": "critical um look at the text options stop worbs and synonyms favorite sort of",
    "start": "2664319",
    "end": "2670000"
  },
  {
    "text": "example here is thethe which is the name of a band and uh gives search engines",
    "start": "2670000",
    "end": "2676240"
  },
  {
    "text": "quite a bit of problems um here you have to make sure that you have some synonyms or something that's going to bring this",
    "start": "2676240",
    "end": "2682079"
  },
  {
    "text": "this actual band into the search results themselves in order to be able to rank",
    "start": "2682079",
    "end": "2689559"
  },
  {
    "start": "2687000",
    "end": "2687000"
  },
  {
    "text": "them so we a little bit of a recap um we started off you know good results are",
    "start": "2689680",
    "end": "2697040"
  },
  {
    "text": "Central to your user experience and your good results will get results in terms",
    "start": "2697040",
    "end": "2702240"
  },
  {
    "text": "of retention in terms of sales and in terms of good user experience we talked through tuning in",
    "start": "2702240",
    "end": "2709839"
  },
  {
    "text": "the in the Realms of matching filtering ranking and sorting and saw how we could add synonyms how we could provide",
    "start": "2709839",
    "end": "2716400"
  },
  {
    "text": "faceted drill down how we could adjust the rank scores for our documents and how we could do sorting in different",
    "start": "2716400",
    "end": "2722599"
  },
  {
    "text": "ways to bring the results that users expect to see into the top of the search",
    "start": "2722599",
    "end": "2728200"
  },
  {
    "text": "results uh we talked about improving document quality to improve matching how you add filters to narrow results rank",
    "start": "2728200",
    "end": "2735680"
  },
  {
    "text": "Expressions how you tune them and where to how to put emphasis where the users want to have it in the search",
    "start": "2735680",
    "end": "2743119"
  },
  {
    "start": "2740000",
    "end": "2740000"
  },
  {
    "text": "results I want to bring up uh right now Cloud search has available a free trial",
    "start": "2743119",
    "end": "2749280"
  },
  {
    "text": "this is a 30 days free usage for new users of cloud search this allows you to",
    "start": "2749280",
    "end": "2755000"
  },
  {
    "text": "get started right now and again the data set and all of this is available in the in the cloud search console you'll be",
    "start": "2755000",
    "end": "2761440"
  },
  {
    "text": "able to create a domain and try out all of the things that I did today for",
    "start": "2761440",
    "end": "2767119"
  },
  {
    "start": "2765000",
    "end": "2765000"
  },
  {
    "text": "you uh also want to point at some resources we have a the Amazon Cloud search overview page including uh FAQs",
    "start": "2767119",
    "end": "2774520"
  },
  {
    "text": "forums documentation articles a lot of information about how to get started and",
    "start": "2774520",
    "end": "2780000"
  },
  {
    "text": "we including also some demos and tutorials all right I'm going to open it",
    "start": "2780000",
    "end": "2785040"
  },
  {
    "text": "up for Q&A right now and again if you have questions uh please send them in via the uh via the",
    "start": "2785040",
    "end": "2794160"
  },
  {
    "text": "control panel um so looking at questions",
    "start": "2794160",
    "end": "2800480"
  },
  {
    "text": "here um will Access Control eventually get full am",
    "start": "2800480",
    "end": "2806359"
  },
  {
    "text": "integration um into authentication via key would be a better",
    "start": "2806359",
    "end": "2812040"
  },
  {
    "text": "solution so this is a again a very very highly requested feature",
    "start": "2812040",
    "end": "2817720"
  },
  {
    "text": "um we are looking at the security model overall and looking at IM integration um",
    "start": "2817720",
    "end": "2825400"
  },
  {
    "text": "we don't have any announcements on that front but that is a a very important feature and we hear that request quite a",
    "start": "2825400",
    "end": "2833160"
  },
  {
    "text": "bit um I'm in Brazil when will Cloud search",
    "start": "2833160",
    "end": "2838640"
  },
  {
    "text": "be available in the Brazil region uh Cloud search you know as an AWS Service",
    "start": "2838640",
    "end": "2844520"
  },
  {
    "text": "uh we of course are looking to roll out uh to all of the AWS region I'm not able",
    "start": "2844520",
    "end": "2851440"
  },
  {
    "text": "to give a a road map or any exact dates when this will be happening but uh very high priority item for us to be able to",
    "start": "2851440",
    "end": "2858680"
  },
  {
    "text": "serve customers in other AWS",
    "start": "2858680",
    "end": "2862838"
  },
  {
    "text": "regions uh question on language you said English was the only language supported",
    "start": "2864520",
    "end": "2869720"
  },
  {
    "text": "what is this language used for and when will other languages be supported I.E",
    "start": "2869720",
    "end": "2874880"
  },
  {
    "text": "German the languages currently yes English is the only supported language",
    "start": "2874880",
    "end": "2880400"
  },
  {
    "text": "the effect of the language uh Express the language is expressed within the search document so um and it controls",
    "start": "2880400",
    "end": "2889760"
  },
  {
    "text": "the language options that we talked about the stemming stop wordss and",
    "start": "2889760",
    "end": "2895119"
  },
  {
    "text": "synonyms Cloud search supports the full Unicode character set minus some characters which are uh",
    "start": "2895119",
    "end": "2903839"
  },
  {
    "text": "invalid XML and within the full uni Unicode character set tokenizing will",
    "start": "2903839",
    "end": "2910960"
  },
  {
    "text": "work correctly matching will work correctly however the sorry I shouldn't",
    "start": "2910960",
    "end": "2916720"
  },
  {
    "text": "I should say tokenization will work correctly for whitespace uh whitespace languages for languages like German",
    "start": "2916720",
    "end": "2923480"
  },
  {
    "text": "where there's a more complicated uh segmentation question you can pre-t toonize those those pieces of text and",
    "start": "2923480",
    "end": "2931000"
  },
  {
    "text": "provide them to Cloud search already in tokens um we are again as we are looking",
    "start": "2931000",
    "end": "2937359"
  },
  {
    "text": "to uh roll out to other regions we are also very keen on rolling out additional",
    "start": "2937359",
    "end": "2943920"
  },
  {
    "text": "languages to support those natively um for stemming and stop words and",
    "start": "2943920",
    "end": "2950559"
  },
  {
    "text": "synonyms uh question on is there a way to just upload the document automatically or do I have to extract a",
    "start": "2955200",
    "end": "2961760"
  },
  {
    "text": "document and construct a Json then send it to the service uh a little bit of a",
    "start": "2961760",
    "end": "2967359"
  },
  {
    "text": "a combined answer here within the console and within the command line tools we do have the capability for you",
    "start": "2967359",
    "end": "2973960"
  },
  {
    "text": "to upload say a PDF or a word file and um have the text automatically extracted",
    "start": "2973960",
    "end": "2981160"
  },
  {
    "text": "from that and provided as a single field on your document this is somewhat of a",
    "start": "2981160",
    "end": "2986680"
  },
  {
    "text": "developmental feature right now we're not uh 100% supporting it but it will",
    "start": "2986680",
    "end": "2991880"
  },
  {
    "text": "work most of the time apart from that you would",
    "start": "2991880",
    "end": "2997480"
  },
  {
    "text": "generally speaking want to construct an SDF document with your own metadata and",
    "start": "2997480",
    "end": "3003760"
  },
  {
    "text": "your own fields to augment that document to make the matching",
    "start": "3003760",
    "end": "3009240"
  },
  {
    "text": "better okay another question are there default synonyms stems or stop wordss for cloud search",
    "start": "3013040",
    "end": "3019119"
  },
  {
    "text": "domains um there are default um stop",
    "start": "3019119",
    "end": "3024520"
  },
  {
    "text": "words provided there's a default list that comes up in the console in terms of",
    "start": "3024520",
    "end": "3030240"
  },
  {
    "text": "synonyms and um oh and sorry there is a default stemming algorithm that's",
    "start": "3030240",
    "end": "3035640"
  },
  {
    "text": "applied which is a a sort of simple remove plurals kind of stemming",
    "start": "3035640",
    "end": "3041880"
  },
  {
    "text": "algorithm for more complicated stemming uh you would need to provide stems",
    "start": "3041880",
    "end": "3047000"
  },
  {
    "text": "yourself and with synonyms again Cloud search is a a cross verticals so it's a",
    "start": "3047000",
    "end": "3052680"
  },
  {
    "text": "little bit difficult to define a default synonym list that would work across Ross many of these these verticals so there",
    "start": "3052680",
    "end": "3058400"
  },
  {
    "text": "is no default synonym dictionary that would be something you would supply for your",
    "start": "3058400",
    "end": "3065000"
  },
  {
    "text": "application I here have a question on there's a musical band named thethe I think we uh we covered that one you'd",
    "start": "3065839",
    "end": "3072319"
  },
  {
    "text": "have to either work with synonyms or uh find a different way to bring up some",
    "start": "3072319",
    "end": "3077799"
  },
  {
    "text": "other field in that document and uh match it that way",
    "start": "3077799",
    "end": "3083520"
  },
  {
    "text": "will the command line tools be updated to allow complex ranking ranking expressions for example using the",
    "start": "3087000",
    "end": "3093400"
  },
  {
    "text": "turnery operator currently this operator is not supported in the clts uh that's a",
    "start": "3093400",
    "end": "3098920"
  },
  {
    "text": "good request I don't think we've heard that one we do continue to iterate on the command line tools as we bring out",
    "start": "3098920",
    "end": "3105079"
  },
  {
    "text": "new features and um as these features come out we'll be releasing updates to the command line tools where we don't",
    "start": "3105079",
    "end": "3112720"
  },
  {
    "text": "support something like relative field waiting or uh we will'll be rolling support for that into the command line",
    "start": "3112720",
    "end": "3121280"
  },
  {
    "text": "tools is there a plan to update the AWS Java SDK to support searching and to add",
    "start": "3122760",
    "end": "3129160"
  },
  {
    "text": "new documents to the search index if so can you share the timeline so first answer um there",
    "start": "3129160",
    "end": "3137880"
  },
  {
    "text": "the we don't have an SDK for adding documents we do have command line tools support so you can script the command",
    "start": "3137880",
    "end": "3144400"
  },
  {
    "text": "line tools not exactly the same thing um in terms of searching and and for",
    "start": "3144400",
    "end": "3150079"
  },
  {
    "text": "both of these because it's a restful interaction and because really it's just talking to a URL um we haven't provided",
    "start": "3150079",
    "end": "3158440"
  },
  {
    "text": "additional tools to do sort of the management of that communication um there are some",
    "start": "3158440",
    "end": "3164359"
  },
  {
    "text": "libraries out there in the open source Community already I believe there's a Java SDK um that allows you to get to",
    "start": "3164359",
    "end": "3171960"
  },
  {
    "text": "the search uh endpoint is provided by search technology IES and you can Google",
    "start": "3171960",
    "end": "3177880"
  },
  {
    "text": "for that I believe we also have a ruby SDK and a python SDK uh that people are",
    "start": "3177880",
    "end": "3184319"
  },
  {
    "text": "working on again this is all open source I believe we we do have interaction with Botto I don't know whether Botto is a",
    "start": "3184319",
    "end": "3191040"
  },
  {
    "text": "python SDK I'm not sure whether Botto supports searching I do think it supports document",
    "start": "3191040",
    "end": "3197240"
  },
  {
    "text": "upload um all right another question can I go",
    "start": "3197240",
    "end": "3203839"
  },
  {
    "text": "beyond 100 facets need to 500 uh a little bit of a confusion here",
    "start": "3203839",
    "end": "3210640"
  },
  {
    "text": "let me answer two different ways the first way is you can of you can",
    "start": "3210640",
    "end": "3215839"
  },
  {
    "text": "definitely have more than 500 values for a single field 500 sorry different",
    "start": "3215839",
    "end": "3221520"
  },
  {
    "text": "values across the Corpus for a single field so if there were 500 different",
    "start": "3221520",
    "end": "3226760"
  },
  {
    "text": "genres and they were scattered across my documents that would be completely okay",
    "start": "3226760",
    "end": "3232319"
  },
  {
    "text": "within a cloud search document I think this is what you're asking a single field can only have 100 values um we are",
    "start": "3232319",
    "end": "3241680"
  },
  {
    "text": "looking at having that limit raised however not as high as",
    "start": "3241680",
    "end": "3247839"
  },
  {
    "text": "500 one way to approach that is to use goes into um you know facet Fields one",
    "start": "3254160",
    "end": "3260599"
  },
  {
    "text": "fastet Fields two fasted Fields three uh not a great workaround the other thing to do is to think about use case maybe",
    "start": "3260599",
    "end": "3267079"
  },
  {
    "text": "there's a way to partition up those different 500 different facets uh in a way that makes a little bit more sense",
    "start": "3267079",
    "end": "3273640"
  },
  {
    "text": "to make them more hierarchical or do something like",
    "start": "3273640",
    "end": "3277720"
  },
  {
    "text": "that okay question do you support partial word matching will other match",
    "start": "3281160",
    "end": "3286760"
  },
  {
    "text": "another we do support um prefix based Wild Card matching so specifically other",
    "start": "3286760",
    "end": "3295119"
  },
  {
    "text": "will not match an other but uh other will match OT",
    "start": "3295119",
    "end": "3301280"
  },
  {
    "text": "star um so you can you can supply a wild card but it is a prefix a prefix based",
    "start": "3301280",
    "end": "3306920"
  },
  {
    "text": "wild",
    "start": "3306920",
    "end": "3309240"
  },
  {
    "text": "card okay uh does CS support decimal matching um how to sort or show the",
    "start": "3315240",
    "end": "3322960"
  },
  {
    "text": "price field in decimal point as you you've no doubt noticed uh Cloud search",
    "start": "3322960",
    "end": "3328680"
  },
  {
    "text": "supports uint only um typically the way you would handle floating Point numbers",
    "start": "3328680",
    "end": "3333760"
  },
  {
    "text": "and especially for prices is you would multiply uh the prices by",
    "start": "3333760",
    "end": "3340640"
  },
  {
    "text": "100 going into the index and um and in",
    "start": "3340640",
    "end": "3345720"
  },
  {
    "text": "queries and then in the UI you would divide before you displayed divide by 100 before you displayed",
    "start": "3345720",
    "end": "3353440"
  },
  {
    "text": "that value to the user this works for numbers out to a certain level of",
    "start": "3353440",
    "end": "3361079"
  },
  {
    "text": "precision do you have autocomplete um we currently do not have an autocomplete feature you can work",
    "start": "3362440",
    "end": "3370880"
  },
  {
    "text": "with prefix queries as we were talking about to do some basic autoc completion",
    "start": "3370880",
    "end": "3377880"
  },
  {
    "text": "uh you get some interference when stemming comes into play but you can uh",
    "start": "3377880",
    "end": "3383799"
  },
  {
    "text": "use prefix based queries to compl complete searches and provide those as autocomplete results and we're also",
    "start": "3383799",
    "end": "3390359"
  },
  {
    "text": "hearing quite a bit that people are looking for an autocomplete feature so we'll be looking at uh bringing that out",
    "start": "3390359",
    "end": "3395720"
  },
  {
    "text": "sometime in the",
    "start": "3395720",
    "end": "3398280"
  },
  {
    "text": "future ah I'm not able to understand the log feature in tuning where to find the",
    "start": "3401559",
    "end": "3407760"
  },
  {
    "text": "log Cloud search right now does not uh provide a a search side log so when I",
    "start": "3407760",
    "end": "3416119"
  },
  {
    "text": "was speaking about logs um what I was referring to is uh capturing logs of",
    "start": "3416119",
    "end": "3423280"
  },
  {
    "text": "users on the on the web server side and examining those logs um you should have",
    "start": "3423280",
    "end": "3430599"
  },
  {
    "text": "HTTP access logs you should have other logs from your front end where wherever the queries are coming from log those",
    "start": "3430599",
    "end": "3437720"
  },
  {
    "text": "queries on on your end and then look through those logs",
    "start": "3437720",
    "end": "3444119"
  },
  {
    "text": "and another question on that good practice to scan search log do you provide an API or tool again not uh not",
    "start": "3447799",
    "end": "3454160"
  },
  {
    "text": "at the present time although we are looking at providing more visibility into how people are uh how users are",
    "start": "3454160",
    "end": "3460960"
  },
  {
    "text": "using the search domains and uh those are features that we're working on",
    "start": "3460960",
    "end": "3466160"
  },
  {
    "text": "now um is CS still considered in beta Cloud search right now is in what",
    "start": "3466160",
    "end": "3474280"
  },
  {
    "text": "we call a public beta stage this is a little bit different than um what beta",
    "start": "3474280",
    "end": "3480359"
  },
  {
    "text": "is considered in the software Universe public beta does not mean that we are",
    "start": "3480359",
    "end": "3485440"
  },
  {
    "text": "working looking at a prototype public beta really refers to the availability",
    "start": "3485440",
    "end": "3491559"
  },
  {
    "text": "of an SLA in terms of uptime and other guarantees like that so Cloud search",
    "start": "3491559",
    "end": "3497000"
  },
  {
    "text": "right now is is fully released to the public and the designation of public",
    "start": "3497000",
    "end": "3502440"
  },
  {
    "text": "beta really refers more to um the level of SLA and the level of availability",
    "start": "3502440",
    "end": "3509359"
  },
  {
    "text": "that we are",
    "start": "3509359",
    "end": "3511880"
  },
  {
    "text": "guaranteeing so any plans to add integration between Dynamo DB and Cloud",
    "start": "3517400",
    "end": "3523160"
  },
  {
    "text": "search uh these two products would work great hand",
    "start": "3523160",
    "end": "3528359"
  },
  {
    "text": "inand uh with recent data pipeline be able um I wrote a paper which is",
    "start": "3533880",
    "end": "3539000"
  },
  {
    "text": "currently available in the article section of uh the aws.amazon.com",
    "start": "3539000",
    "end": "3544240"
  },
  {
    "text": "website and um that walks through an example of how to integrate between Cloud search and Dynamo DB I think uh I",
    "start": "3544240",
    "end": "3552359"
  },
  {
    "text": "think your instinct is right on I think these two products do work great together and uh you know as we consider",
    "start": "3552359",
    "end": "3558039"
  },
  {
    "text": "that and we we look at our product road map and try and roll out stuff that's going to be great for our users we'll we'll definitely keep that in mind uh I",
    "start": "3558039",
    "end": "3565119"
  },
  {
    "text": "am not familiar enough with data pipeline to say exactly how data pipeline could help with that but I",
    "start": "3565119",
    "end": "3571160"
  },
  {
    "text": "believe you're right I I believe data pipeline would be a good way to um",
    "start": "3571160",
    "end": "3576200"
  },
  {
    "text": "manage the data flow so that it gets to both Cloud search and to Dynamo I think that's about all we have",
    "start": "3576200",
    "end": "3582640"
  },
  {
    "text": "time for right now um want to thank everybody very much for your attendance and your attention uh you have my email",
    "start": "3582640",
    "end": "3590200"
  },
  {
    "text": "up there please feel free to drop me an email and uh be in contact with us and",
    "start": "3590200",
    "end": "3595240"
  },
  {
    "text": "again thanks very much watch everybody",
    "start": "3595240",
    "end": "3599200"
  }
]