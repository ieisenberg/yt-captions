[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "hi everyone thanks for joining us today",
    "start": "30",
    "end": "1890"
  },
  {
    "text": "this is powering AWS batch with Amazon",
    "start": "1890",
    "end": "5009"
  },
  {
    "text": "ec2 spot instances my name is chad",
    "start": "5009",
    "end": "7710"
  },
  {
    "text": "schmutz ER i'm a principal developer",
    "start": "7710",
    "end": "9540"
  },
  {
    "text": "advocate for the amazon ec2 spot team",
    "start": "9540",
    "end": "11790"
  },
  {
    "text": "let's get started so what we're going to",
    "start": "11790",
    "end": "14969"
  },
  {
    "start": "13000",
    "end": "88000"
  },
  {
    "text": "be talking about today is running cost",
    "start": "14969",
    "end": "16830"
  },
  {
    "text": "effective batch processing workloads on",
    "start": "16830",
    "end": "19500"
  },
  {
    "text": "AWS and the way that we'll do that is to",
    "start": "19500",
    "end": "21480"
  },
  {
    "text": "use and I do an ANOVA service called AWS",
    "start": "21480",
    "end": "23699"
  },
  {
    "text": "batch and we'll use easy to spot",
    "start": "23699",
    "end": "25890"
  },
  {
    "text": "instances as the compute background for",
    "start": "25890",
    "end": "28470"
  },
  {
    "text": "that spot instances are spare ec2",
    "start": "28470",
    "end": "31289"
  },
  {
    "text": "capacity available at significant",
    "start": "31289",
    "end": "33270"
  },
  {
    "text": "discounts off of the on-demand price",
    "start": "33270",
    "end": "35010"
  },
  {
    "text": "they really unlock some really neat",
    "start": "35010",
    "end": "37800"
  },
  {
    "text": "capabilities with AWS the first being",
    "start": "37800",
    "end": "39780"
  },
  {
    "text": "low predictable prices the second being",
    "start": "39780",
    "end": "42180"
  },
  {
    "text": "fast results and the third being that",
    "start": "42180",
    "end": "44219"
  },
  {
    "text": "they are extremely easy to use because",
    "start": "44219",
    "end": "45930"
  },
  {
    "text": "of their tight integration with other",
    "start": "45930",
    "end": "47370"
  },
  {
    "text": "AWS services so what we'll use today is",
    "start": "47370",
    "end": "50190"
  },
  {
    "text": "a service called AWS batch AWS batch is",
    "start": "50190",
    "end": "52949"
  },
  {
    "text": "a fully managed batch processing service",
    "start": "52949",
    "end": "55800"
  },
  {
    "text": "where all you have to think about are",
    "start": "55800",
    "end": "57930"
  },
  {
    "text": "your own applications and let us handle",
    "start": "57930",
    "end": "60329"
  },
  {
    "text": "everything else",
    "start": "60329",
    "end": "61289"
  },
  {
    "text": "AWS batch has been fully integrated with",
    "start": "61289",
    "end": "63390"
  },
  {
    "text": "other AWS services as well so you can",
    "start": "63390",
    "end": "65430"
  },
  {
    "text": "run your entire pipeline tied in with",
    "start": "65430",
    "end": "67590"
  },
  {
    "text": "your batch processing service and",
    "start": "67590",
    "end": "69479"
  },
  {
    "text": "workloads and an AWS batch has been cost",
    "start": "69479",
    "end": "72180"
  },
  {
    "text": "optimized to be the most effective way",
    "start": "72180",
    "end": "74850"
  },
  {
    "text": "to run your workloads at scale on top of",
    "start": "74850",
    "end": "77070"
  },
  {
    "text": "AWS and as we'll see it's been tightly",
    "start": "77070",
    "end": "78990"
  },
  {
    "text": "integrated to use Amazon ec2 spot",
    "start": "78990",
    "end": "81360"
  },
  {
    "text": "instances and let's take a look at how",
    "start": "81360",
    "end": "84150"
  },
  {
    "text": "this all works together through a demo",
    "start": "84150",
    "end": "85729"
  },
  {
    "text": "so I'm gonna jump in here and I'm gonna",
    "start": "85729",
    "end": "88470"
  },
  {
    "text": "show you what you need to build your own",
    "start": "88470",
    "end": "90920"
  },
  {
    "text": "cost-effective batch workload on AWS",
    "start": "90920",
    "end": "94020"
  },
  {
    "text": "batch the first thing that we'll need to",
    "start": "94020",
    "end": "95939"
  },
  {
    "text": "do is we'll need to create a job",
    "start": "95939",
    "end": "97680"
  },
  {
    "text": "definition and so I have here an example",
    "start": "97680",
    "end": "99900"
  },
  {
    "text": "a job definition that that tells us",
    "start": "99900",
    "end": "101820"
  },
  {
    "text": "everything we need to know about our",
    "start": "101820",
    "end": "103320"
  },
  {
    "text": "particular job it's going to be a",
    "start": "103320",
    "end": "105030"
  },
  {
    "text": "containerized job is going to use a",
    "start": "105030",
    "end": "107040"
  },
  {
    "text": "docker image the latest version of",
    "start": "107040",
    "end": "108930"
  },
  {
    "text": "Alpine it needs a single virtual CPU it",
    "start": "108930",
    "end": "111869"
  },
  {
    "text": "needs 128 megabytes of memory and the",
    "start": "111869",
    "end": "114420"
  },
  {
    "text": "job itself will simply run the command",
    "start": "114420",
    "end": "116219"
  },
  {
    "text": "env which is to show us what the current",
    "start": "116219",
    "end": "119009"
  },
  {
    "text": "environment is for our workload so I've",
    "start": "119009",
    "end": "121710"
  },
  {
    "text": "already created this job definition and",
    "start": "121710",
    "end": "123990"
  },
  {
    "text": "I've created this with an AWS patch and",
    "start": "123990",
    "end": "126149"
  },
  {
    "text": "we'll take a look at that in a moment",
    "start": "126149",
    "end": "127489"
  },
  {
    "text": "after we create the job definition the",
    "start": "127489",
    "end": "130050"
  },
  {
    "text": "next step will be to create an ec2",
    "start": "130050",
    "end": "132120"
  },
  {
    "text": "Launch template a launch template is",
    "start": "132120",
    "end": "134069"
  },
  {
    "text": "we define things like the image ID that",
    "start": "134069",
    "end": "136349"
  },
  {
    "text": "we'll use or the ami as well as any",
    "start": "136349",
    "end": "138510"
  },
  {
    "text": "tagging for the resources that the",
    "start": "138510",
    "end": "141239"
  },
  {
    "text": "interviewers batch computer environment",
    "start": "141239",
    "end": "142650"
  },
  {
    "text": "spins up for us so you can see I've",
    "start": "142650",
    "end": "144840"
  },
  {
    "text": "defined them in this launch template and",
    "start": "144840",
    "end": "146370"
  },
  {
    "text": "I've created this launch template for us",
    "start": "146370",
    "end": "148170"
  },
  {
    "text": "to use the next thing we'll do is we'll",
    "start": "148170",
    "end": "150780"
  },
  {
    "text": "take a look at what we need to spin up",
    "start": "150780",
    "end": "153450"
  },
  {
    "text": "the computer environment for for our AWS",
    "start": "153450",
    "end": "156930"
  },
  {
    "text": "batch workload in this case we've set up",
    "start": "156930",
    "end": "159480"
  },
  {
    "text": "a managed computer environment the",
    "start": "159480",
    "end": "162569"
  },
  {
    "text": "managed computer environment is going to",
    "start": "162569",
    "end": "164249"
  },
  {
    "text": "be using spot instances for the compute",
    "start": "164249",
    "end": "166469"
  },
  {
    "text": "resources we've told that we we can use",
    "start": "166469",
    "end": "169200"
  },
  {
    "text": "a minimum of 128 virtual CPUs a maximum",
    "start": "169200",
    "end": "172980"
  },
  {
    "text": "of a thousand 24 but our desired",
    "start": "172980",
    "end": "175260"
  },
  {
    "text": "constant is 128 in terms of which",
    "start": "175260",
    "end": "178109"
  },
  {
    "text": "instance types we're going to use we're",
    "start": "178109",
    "end": "180120"
  },
  {
    "text": "going to let batch figure that out for",
    "start": "180120",
    "end": "181829"
  },
  {
    "text": "us and we're going to say please use the",
    "start": "181829",
    "end": "183419"
  },
  {
    "text": "optimal instance types and sizes for our",
    "start": "183419",
    "end": "186359"
  },
  {
    "text": "workload because we're going to tell",
    "start": "186359",
    "end": "187709"
  },
  {
    "text": "batch what we need and batch is going to",
    "start": "187709",
    "end": "189599"
  },
  {
    "text": "figure the rest about a rest of it out",
    "start": "189599",
    "end": "191250"
  },
  {
    "text": "for us in terms of where we can run this",
    "start": "191250",
    "end": "194099"
  },
  {
    "text": "we're going to tell it these are the",
    "start": "194099",
    "end": "195719"
  },
  {
    "text": "subnets within our virtual private cloud",
    "start": "195719",
    "end": "197790"
  },
  {
    "text": "that we can use for our batch computer",
    "start": "197790",
    "end": "199949"
  },
  {
    "text": "environment so in this case I'm defining",
    "start": "199949",
    "end": "201930"
  },
  {
    "text": "6 subnets which map to 6 availability",
    "start": "201930",
    "end": "204209"
  },
  {
    "text": "zones",
    "start": "204209",
    "end": "204919"
  },
  {
    "text": "I've also defined some permissions",
    "start": "204919",
    "end": "207359"
  },
  {
    "text": "around the instance roles and the iam",
    "start": "207359",
    "end": "210209"
  },
  {
    "text": "roles and the service roles for this",
    "start": "210209",
    "end": "212040"
  },
  {
    "text": "particular workload this compute",
    "start": "212040",
    "end": "213689"
  },
  {
    "text": "environment and we're going to reference",
    "start": "213689",
    "end": "215669"
  },
  {
    "text": "the launch template that we just showed",
    "start": "215669",
    "end": "217590"
  },
  {
    "text": "you here in the configuration the next",
    "start": "217590",
    "end": "220259"
  },
  {
    "text": "thing that we would need to do is to",
    "start": "220259",
    "end": "221879"
  },
  {
    "text": "create a job queue and the job queue is",
    "start": "221879",
    "end": "224549"
  },
  {
    "text": "where we are able to submit jobs to tell",
    "start": "224549",
    "end": "227489"
  },
  {
    "text": "batch to pls process these jobs from the",
    "start": "227489",
    "end": "230189"
  },
  {
    "text": "job queue so obviously we're going to",
    "start": "230189",
    "end": "232169"
  },
  {
    "text": "need this environment to be enabled",
    "start": "232169",
    "end": "233759"
  },
  {
    "text": "we're going to define a priority higher",
    "start": "233759",
    "end": "236159"
  },
  {
    "text": "number meaning higher priority and then",
    "start": "236159",
    "end": "238229"
  },
  {
    "text": "we're going to tell the job queue which",
    "start": "238229",
    "end": "240090"
  },
  {
    "text": "compute environment to use for",
    "start": "240090",
    "end": "241769"
  },
  {
    "text": "processing our jobs so let's take a look",
    "start": "241769",
    "end": "244439"
  },
  {
    "start": "244000",
    "end": "429000"
  },
  {
    "text": "within our within our AWS console we can",
    "start": "244439",
    "end": "247500"
  },
  {
    "text": "see that our computer environment has",
    "start": "247500",
    "end": "249299"
  },
  {
    "text": "been spin up for spun up for us so we",
    "start": "249299",
    "end": "251579"
  },
  {
    "text": "have 4 ec2 instances running batch chose",
    "start": "251579",
    "end": "254789"
  },
  {
    "text": "to spin up c48 extra larges and we can",
    "start": "254789",
    "end": "258599"
  },
  {
    "text": "see that these are spot instances so",
    "start": "258599",
    "end": "260729"
  },
  {
    "text": "this again is the most cost-effective",
    "start": "260729",
    "end": "262079"
  },
  {
    "text": "way to do our batch workloads and this",
    "start": "262079",
    "end": "265560"
  },
  {
    "text": "is a fully managed computer",
    "start": "265560",
    "end": "266940"
  },
  {
    "text": "that a dispatches men managing for us in",
    "start": "266940",
    "end": "270240"
  },
  {
    "text": "terms of batch itself let's take a look",
    "start": "270240",
    "end": "272810"
  },
  {
    "text": "we can see that we have our job queue",
    "start": "272810",
    "end": "275550"
  },
  {
    "text": "that we defined we and this job queue is",
    "start": "275550",
    "end": "278100"
  },
  {
    "text": "pointing at our computer environment",
    "start": "278100",
    "end": "279780"
  },
  {
    "text": "which I just showed you which is a for",
    "start": "279780",
    "end": "281940"
  },
  {
    "text": "running spot instances and those spot",
    "start": "281940",
    "end": "284160"
  },
  {
    "text": "instances are providing to us a minimum",
    "start": "284160",
    "end": "286320"
  },
  {
    "text": "of 128 virtual CPUs and a maximum of",
    "start": "286320",
    "end": "290120"
  },
  {
    "text": "1,024 which means that the batch",
    "start": "290120",
    "end": "292380"
  },
  {
    "text": "environment can automatically scale up",
    "start": "292380",
    "end": "294270"
  },
  {
    "text": "and scale down the amount of virtual",
    "start": "294270",
    "end": "295950"
  },
  {
    "text": "CPUs in memory we need based on how many",
    "start": "295950",
    "end": "298440"
  },
  {
    "text": "jobs are in the queue we can see that we",
    "start": "298440",
    "end": "301020"
  },
  {
    "text": "have our job definition which we just",
    "start": "301020",
    "end": "303600"
  },
  {
    "text": "went over which is basically telling the",
    "start": "303600",
    "end": "306750"
  },
  {
    "text": "the environment how to run the job and",
    "start": "306750",
    "end": "308490"
  },
  {
    "text": "what the job needs we can see that we",
    "start": "308490",
    "end": "310560"
  },
  {
    "text": "have the job queue and we have the",
    "start": "310560",
    "end": "312960"
  },
  {
    "text": "computer environment itself so let's go",
    "start": "312960",
    "end": "315360"
  },
  {
    "text": "ahead and submit some jobs to our job",
    "start": "315360",
    "end": "317070"
  },
  {
    "text": "environment to our to our job queues and",
    "start": "317070",
    "end": "320730"
  },
  {
    "text": "let batch execute them so we'll do this",
    "start": "320730",
    "end": "322830"
  },
  {
    "text": "by heading back to the AWS CLI you can",
    "start": "322830",
    "end": "326250"
  },
  {
    "text": "see we have an example demo job here",
    "start": "326250",
    "end": "330060"
  },
  {
    "text": "that we will submit we're gonna give it",
    "start": "330060",
    "end": "331440"
  },
  {
    "text": "a name we're gonna point at the job",
    "start": "331440",
    "end": "333210"
  },
  {
    "text": "queue and we're going to tell it which",
    "start": "333210",
    "end": "335010"
  },
  {
    "text": "job definition to reference so let's go",
    "start": "335010",
    "end": "337470"
  },
  {
    "text": "ahead and copy and paste here a for loop",
    "start": "337470",
    "end": "339540"
  },
  {
    "text": "and this for loop is simply going to",
    "start": "339540",
    "end": "341669"
  },
  {
    "text": "submit 25 jobs into our into our job",
    "start": "341669",
    "end": "346380"
  },
  {
    "text": "queue inside of AWS batch so I've got a",
    "start": "346380",
    "end": "348810"
  },
  {
    "text": "simple bash while loop a for loop here",
    "start": "348810",
    "end": "350970"
  },
  {
    "text": "we're going to submit 25 jobs and AWS",
    "start": "350970",
    "end": "354540"
  },
  {
    "text": "batch will take these jobs process them",
    "start": "354540",
    "end": "356460"
  },
  {
    "text": "and give us the results in in cloud",
    "start": "356460",
    "end": "358500"
  },
  {
    "text": "watch logs so let's head back to the",
    "start": "358500",
    "end": "360750"
  },
  {
    "text": "console and if I do a quick refresh here",
    "start": "360750",
    "end": "363360"
  },
  {
    "text": "we can see that we have jobs submitted",
    "start": "363360",
    "end": "365870"
  },
  {
    "text": "we may have some in the pending state we",
    "start": "365870",
    "end": "368940"
  },
  {
    "text": "may have some in the runnable state and",
    "start": "368940",
    "end": "370530"
  },
  {
    "text": "eventually as these jobs are processed",
    "start": "370530",
    "end": "373620"
  },
  {
    "text": "they will move into the running state",
    "start": "373620",
    "end": "375570"
  },
  {
    "text": "and then finally the succeeded state and",
    "start": "375570",
    "end": "377580"
  },
  {
    "text": "we can see here that we have our jobs",
    "start": "377580",
    "end": "380310"
  },
  {
    "text": "have run through they're sitting in the",
    "start": "380310",
    "end": "382800"
  },
  {
    "text": "succeeded State and if we click on each",
    "start": "382800",
    "end": "384930"
  },
  {
    "text": "individual job ID we can drill in get",
    "start": "384930",
    "end": "387600"
  },
  {
    "text": "the results the output we can see that",
    "start": "387600",
    "end": "389250"
  },
  {
    "text": "they've succeeded and we can take a look",
    "start": "389250",
    "end": "391830"
  },
  {
    "text": "at the logs themselves to understand the",
    "start": "391830",
    "end": "393690"
  },
  {
    "text": "output of the jobs so the logs are",
    "start": "393690",
    "end": "395820"
  },
  {
    "text": "stored again in cloud watch logs if I",
    "start": "395820",
    "end": "398280"
  },
  {
    "text": "take a look at my log stream",
    "start": "398280",
    "end": "400500"
  },
  {
    "text": "can dig into each of these and we can",
    "start": "400500",
    "end": "402210"
  },
  {
    "text": "see that here we have the results of the",
    "start": "402210",
    "end": "404280"
  },
  {
    "text": "command that was executed the env",
    "start": "404280",
    "end": "406500"
  },
  {
    "text": "command which gives us the environment",
    "start": "406500",
    "end": "408990"
  },
  {
    "text": "which our compute environment ran on so",
    "start": "408990",
    "end": "412590"
  },
  {
    "text": "this includes the hostname the",
    "start": "412590",
    "end": "414480"
  },
  {
    "text": "environment variables as well as the",
    "start": "414480",
    "end": "416430"
  },
  {
    "text": "path that we're in okay that's it for",
    "start": "416430",
    "end": "418260"
  },
  {
    "text": "the demo thank you for watching",
    "start": "418260",
    "end": "419940"
  },
  {
    "text": "hopefully now you're ready to start",
    "start": "419940",
    "end": "421500"
  },
  {
    "text": "saving on batch workloads on spot",
    "start": "421500",
    "end": "423210"
  },
  {
    "text": "instances",
    "start": "423210",
    "end": "425720"
  }
]