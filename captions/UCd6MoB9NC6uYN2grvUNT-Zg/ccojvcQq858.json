[
  {
    "text": "hi good morning everybody can everyone hear me okay okay great uh we're going to get started here so as people come in",
    "start": "3000",
    "end": "8960"
  },
  {
    "text": "please try to uh grab a seat uh thank you all for coming to the session today and uh we're going to get started now so",
    "start": "8960",
    "end": "14759"
  },
  {
    "text": "this session is scaling up to your first 10 million users hopefully this is the session that you uh were looking to be",
    "start": "14759",
    "end": "19880"
  },
  {
    "text": "in uh here you are so my name is Chris Ms I'm an AWS Solutions architect based out of our New York City Office I work",
    "start": "19880",
    "end": "26560"
  },
  {
    "text": "with a lot of companies of all different shapes and sizes uh primarily lot of startups both in New York and on the",
    "start": "26560",
    "end": "31679"
  },
  {
    "text": "west coast and kind of everywhere in between and I put this talk together actually a little bit over a year and a",
    "start": "31679",
    "end": "37280"
  },
  {
    "text": "half ago at first and talking to some uh VC meetups and startup meetups and since",
    "start": "37280",
    "end": "42320"
  },
  {
    "text": "then it's actually been a very popular talk and so we're red doing it again here at uh reinvent and ideally here what we're",
    "start": "42320",
    "end": "48760"
  },
  {
    "text": "going to be talking about is some kind of different patterns that you could take for scaling up an application that you might be building from scratch or",
    "start": "48760",
    "end": "55520"
  },
  {
    "text": "maybe one that you're modifying or uh adapting that you've already created and are now looking to run on AWS so we're",
    "start": "55520",
    "end": "61760"
  },
  {
    "text": "going to be talking about some kind of General best practices General patterns it's by no means the the be all end all",
    "start": "61760",
    "end": "67600"
  },
  {
    "text": "way to do things but hopefully it gives you some food for thought and so if you find yourself like many companies or",
    "start": "67600",
    "end": "72960"
  },
  {
    "text": "many you know small startups or teams that are looking to build an application you might ask yourself how do we scale",
    "start": "72960",
    "end": "79080"
  },
  {
    "text": "all right how do we go about scaling and being prepared for scale and being able to uh potentially deal with the",
    "start": "79080",
    "end": "85159"
  },
  {
    "text": "hopefully High success that your your application your site whatever it is that you might be building you're making",
    "start": "85159",
    "end": "90840"
  },
  {
    "text": "could hopefully uh draw so uh the other thing is that many of us are not experts",
    "start": "90840",
    "end": "97040"
  },
  {
    "text": "at this uh for many people in many organizations scale is something that they don't really see at a huge size and",
    "start": "97040",
    "end": "102640"
  },
  {
    "text": "so again you might not be aware of what some of these practices are and you might find yourself just trying to kind of guess at at what you should be doing",
    "start": "102640",
    "end": "108960"
  },
  {
    "text": "and which direction you should be taking for like many people I know the first place that you're going to go is your",
    "start": "108960",
    "end": "114119"
  },
  {
    "text": "your favorite search engine and type in something like uh scaling on AWS pretty",
    "start": "114119",
    "end": "119600"
  },
  {
    "text": "St straight forward hopefully come up with some good results but what you find from this at least in this search engine that I'm using here is that uh there's a",
    "start": "119600",
    "end": "126680"
  },
  {
    "text": "whole lot of things to read so I took this screenshot a couple weeks ago at this point there were over A M A Million",
    "start": "126680",
    "end": "132200"
  },
  {
    "text": "results that came back that dealt with scaling on AWS uh that's that's that's quite a few probably more than we're",
    "start": "132200",
    "end": "137959"
  },
  {
    "text": "looking to read in an afternoon or a couple of afternoons worth of time and one of the other things that you'll notice here is that the first two",
    "start": "137959",
    "end": "144040"
  },
  {
    "text": "results that we get are actually not the best place for us to start so you'll see here that we're referencing Auto scaling",
    "start": "144040",
    "end": "150800"
  },
  {
    "text": "uh which is an AWS service part of ec2 and Autos scaling while it's a fantastic service and has a lot of really really",
    "start": "150800",
    "end": "157440"
  },
  {
    "text": "great capabilities that you should definitely make use of it's kind of a more of a tool in a destination than a",
    "start": "157440",
    "end": "163640"
  },
  {
    "text": "oneclick checkbox or something that you just do and then everything is fine and so there are a lot of things that you",
    "start": "163640",
    "end": "169319"
  },
  {
    "text": "need to have before you can go into Auto scaling that will enable you to make best use of something like Auto scaling",
    "start": "169319",
    "end": "174959"
  },
  {
    "text": "and enable you to be able to scale up to meet whatever the needs or demands might be of your application",
    "start": "174959",
    "end": "180360"
  },
  {
    "text": "or of your uh your website so what do we need first I think it's always good to",
    "start": "180360",
    "end": "185840"
  },
  {
    "text": "start with the basics and kind of build our way up from there so starting kind of at the uh i' like to say the",
    "start": "185840",
    "end": "192120"
  },
  {
    "text": "International Space Station view on down is that here at AWS we have a concept of regions uh if you just saw Andy's",
    "start": "192120",
    "end": "198040"
  },
  {
    "text": "keynote he talked briefly about this we think about it a little bit differently than some of the other uh Cloud providers out there so today we have 11",
    "start": "198040",
    "end": "204959"
  },
  {
    "text": "of these regions we recently launched a region in Frankfurt in Germany a couple weeks back",
    "start": "204959",
    "end": "210360"
  },
  {
    "text": "uh then the rest of these globally distributed uh we have a region for US Government customers we have a region in",
    "start": "210360",
    "end": "216239"
  },
  {
    "text": "China and then uh the rest that you can see here on the map inside of those regions we have a concept of",
    "start": "216239",
    "end": "222080"
  },
  {
    "text": "availability zones you can think of availability zones as independent plots of land where there is one or more",
    "start": "222080",
    "end": "227560"
  },
  {
    "text": "physical data center inside of it the idea is that we build these availability zones 5 to 15 miles apart such that",
    "start": "227560",
    "end": "234360"
  },
  {
    "text": "they're usually on different flood planes different fault lines relying on different Power grids and all have their",
    "start": "234360",
    "end": "240319"
  },
  {
    "text": "own independent tier one ISP connections uh the idea being here that when you build an application inside of AWS you",
    "start": "240319",
    "end": "246760"
  },
  {
    "text": "want to be building and deploying across multiple a this is kind of a fundamental building block of building applications",
    "start": "246760",
    "end": "252400"
  },
  {
    "text": "to scale on AWS so again availability zones a very very core important uh",
    "start": "252400",
    "end": "258000"
  },
  {
    "text": "component of infrastructure here at AWS we also have Edge locations around",
    "start": "258000",
    "end": "263440"
  },
  {
    "text": "the globe for our CDN service and our dnf service cloudfront and Route 53 respectively uh over 50 of these today",
    "start": "263440",
    "end": "269960"
  },
  {
    "text": "around the globe and more of these kind of coming online periodically um we've definitely added quite a few this year",
    "start": "269960",
    "end": "276080"
  },
  {
    "text": "I'm sure you'll see us continue that Trend over the future so uh that's kind of the the",
    "start": "276080",
    "end": "281759"
  },
  {
    "text": "large view looking globally down what exactly is it that represents this infrastructure today you can kind of",
    "start": "281759",
    "end": "287280"
  },
  {
    "text": "think of it as four different categories applications platform Services foundational services and then the",
    "start": "287280",
    "end": "293479"
  },
  {
    "text": "actual Global infrastructure that I just covered um this diagram is unfortunately very out of date after this morning",
    "start": "293479",
    "end": "300479"
  },
  {
    "text": "um again if you saw Andy's keyn note there were a whole lot of things that we had announced uh so uh I guess I'll be",
    "start": "300479",
    "end": "306560"
  },
  {
    "text": "updating the slide again in the near future but what you can see here is how the services are broken down so again",
    "start": "306560",
    "end": "311960"
  },
  {
    "text": "starting at the bottom working our way up we've covered regions and availability zones CDN and points of presence uh building on top of that are",
    "start": "311960",
    "end": "319280"
  },
  {
    "text": "kind of our core foundational Services compute storage uh databases I'm sorry",
    "start": "319280",
    "end": "324360"
  },
  {
    "text": "networking and security and access controls Each of which are actually made up of collections of other services underneath them then on top of that we",
    "start": "324360",
    "end": "331680"
  },
  {
    "text": "have the platform Services these are all the higher level application services and and management offerings that we have including things like databases uh",
    "start": "331680",
    "end": "338919"
  },
  {
    "text": "which today we announced Aurora a new version of a a database component inside of RDS or database engine uh we have no",
    "start": "338919",
    "end": "346280"
  },
  {
    "text": "SQL database Dynamo DB we have caching via elasticache through analytics we have a",
    "start": "346280",
    "end": "351360"
  },
  {
    "text": "whole Suite of tools for app Services again a whole Suite of tools deployment and management obviously a number of",
    "start": "351360",
    "end": "357000"
  },
  {
    "text": "great things released today or announced today including Cod code deploy uh code pipelines and repositories uh and then",
    "start": "357000",
    "end": "363560"
  },
  {
    "text": "mobile services uh which this past summer we added capabilities with something called Cognito which allows",
    "start": "363560",
    "end": "369280"
  },
  {
    "text": "you to do user management and session management and syncing up of data between devices and then on top of that",
    "start": "369280",
    "end": "375319"
  },
  {
    "text": "we have virtual desktops via workspaces and then we have uh zoko which is a document sharing collaboration service",
    "start": "375319",
    "end": "381880"
  },
  {
    "text": "that we also launched this summer so whole bunch of services that you could pick from to build your applications and",
    "start": "381880",
    "end": "387360"
  },
  {
    "text": "build your infrastructure on top of AWS but let's even go a little bit lower down and starting at the very Basics so",
    "start": "387360",
    "end": "394680"
  },
  {
    "text": "starting from day one user one essentially you so if we were starting out from scratch building on ews it",
    "start": "394680",
    "end": "400560"
  },
  {
    "text": "might be very very basic infrastructure like you see here we have uh essentially Route 53 our DNS service uh which now",
    "start": "400560",
    "end": "408360"
  },
  {
    "text": "can host your whole domain do domain registry and serve up your DNS records uh serving our DNS record for our",
    "start": "408360",
    "end": "414440"
  },
  {
    "text": "website and we're pointing that DNS traffic at an elastic IP essentially a static IP address that we can",
    "start": "414440",
    "end": "420199"
  },
  {
    "text": "dynamically attach or reattach to ec2 instances and then we have a single ec2 instance so like many people developing",
    "start": "420199",
    "end": "426960"
  },
  {
    "text": "an application you start out on a single server single instance and in that case that's exactly where we are here today",
    "start": "426960",
    "end": "432879"
  },
  {
    "text": "and our entire application stack web app tier database management whatever it might be that you might have could live",
    "start": "432879",
    "end": "439240"
  },
  {
    "text": "on this one instance and so in terms of scaling this instance there's really always so many directions that we can go",
    "start": "439240",
    "end": "445520"
  },
  {
    "text": "so we could go uh vertical all right get a larger instance size of which today there's over 20 different instance types",
    "start": "445520",
    "end": "451440"
  },
  {
    "text": "inside of AWS with a mix of high CPU High memory High storage throughput High",
    "start": "451440",
    "end": "457120"
  },
  {
    "text": "storage space and uh GPU options and so you can actually go pretty high here and",
    "start": "457120",
    "end": "463599"
  },
  {
    "text": "pretty far in terms of the capabilities of that single server and so you might find yourself going up to the largest",
    "start": "463599",
    "end": "469199"
  },
  {
    "text": "size instance that we have again we have some that have uh you know 32 plus CPU",
    "start": "469199",
    "end": "474360"
  },
  {
    "text": "cores into the hundreds of gigabytes of RAM and uh many terabytes of SS D type",
    "start": "474360",
    "end": "479960"
  },
  {
    "text": "options that are out there but at some point what you are going to run into is if you do go scaling vertically is that",
    "start": "479960",
    "end": "486520"
  },
  {
    "text": "you're going to run into an endpoint where you're either going to have to wait for us to launch another instance which you know we while we do do that",
    "start": "486520",
    "end": "492440"
  },
  {
    "text": "quite regularly it's not something that you yourself would want to be predicting against or you're going to have to come up with a different solution Beyond",
    "start": "492440",
    "end": "498599"
  },
  {
    "text": "scaling vertically so again vertical does take you pretty far but at some point you do hit this end point so if we",
    "start": "498599",
    "end": "505319"
  },
  {
    "text": "go back and think about our infrastructure stack that we have here a very basic application again we could get into a few hundreds maybe several",
    "start": "505319",
    "end": "512360"
  },
  {
    "text": "thousands maybe even tens of thousands although maybe not of users depending on what our application is and the",
    "start": "512360",
    "end": "517880"
  },
  {
    "text": "complexity of it and and what's going on under the hood but there's another number of other",
    "start": "517880",
    "end": "523159"
  },
  {
    "text": "kind of downsides here to this application architecture we have no failover we have no redundancy going",
    "start": "523159",
    "end": "529160"
  },
  {
    "text": "along with no failover we really have too many eggs in one basket right if we have our web tier our app tier database tier all running on the same host we're",
    "start": "529160",
    "end": "536720"
  },
  {
    "text": "potentially dealing with resource conflicts with uh you know things taking memory from other processes and so forth",
    "start": "536720",
    "end": "543360"
  },
  {
    "text": "so it's not really a super efficient thing for us to be doing so what we really should do is think about separating out this tier",
    "start": "543360",
    "end": "549640"
  },
  {
    "text": "this is where we begin to to break out our application into distinct components so separating potentially our our web",
    "start": "549640",
    "end": "555920"
  },
  {
    "text": "and app tier from our database tier might make a lot of sense and when you're thinking about that database tier",
    "start": "555920",
    "end": "561160"
  },
  {
    "text": "you might go and ask yourself maybe we should make use of a database service again unfortunately a a kind of",
    "start": "561160",
    "end": "567640"
  },
  {
    "text": "out ofate slide here today as we did just announced RDS Aurora um but beyond that there actually are a number of",
    "start": "567640",
    "end": "573560"
  },
  {
    "text": "different options that you have here at AWS the first one I want to highlight is that we always want to make people",
    "start": "573560",
    "end": "579680"
  },
  {
    "text": "understand that the idea here is that AWS is meant to be flexible at the end of the day on an ec2 instance running",
    "start": "579680",
    "end": "585680"
  },
  {
    "text": "Windows or Linux or open Solaris or FreeBSD or whatever machine image you want to put on it you can run pretty",
    "start": "585680",
    "end": "590959"
  },
  {
    "text": "much any database that you want to whether it was Oracle MySQL mssql",
    "start": "590959",
    "end": "596519"
  },
  {
    "text": "postgress db2 you name it people are running on ec2 themselves and so self-managing a database is definitely",
    "start": "596519",
    "end": "602959"
  },
  {
    "text": "an option however if you're a small team and maybe you don't have a a deep wealth",
    "start": "602959",
    "end": "608800"
  },
  {
    "text": "of database management experience yourself you might want to look at something that's more of a managed service for you so in AWS we have a",
    "start": "608800",
    "end": "615279"
  },
  {
    "text": "number of different options here we have RDS relational database service which is a manage relational database offering",
    "start": "615279",
    "end": "621320"
  },
  {
    "text": "when we say manage it's important to understand what that window is inside of that management so what RDS helps you",
    "start": "621320",
    "end": "627160"
  },
  {
    "text": "out with is things like built-in nightly back backups point in time recovery patch management of the OS patch",
    "start": "627160",
    "end": "633120"
  },
  {
    "text": "management of the database engine uh providing configuration Management in the form of parameter files that you can",
    "start": "633120",
    "end": "639120"
  },
  {
    "text": "kind of control via the console and API things like read replicas which we just added read replicas for postgress",
    "start": "639120",
    "end": "645600"
  },
  {
    "text": "earlier this week um the ability to do things like cross region replication some of these database engines and then",
    "start": "645600",
    "end": "651560"
  },
  {
    "text": "again today uh Aurora that we just announced which is a very very highs scale MySQL compatible database option",
    "start": "651560",
    "end": "658480"
  },
  {
    "text": "which uh if I was starting from scratch is actually something that I would definitely be interested in looking at next to that we have Dynamo DB which is",
    "start": "658480",
    "end": "664959"
  },
  {
    "text": "a nosql database uh that we launched a couple years back now and Dynamo DB would like to say is a zero",
    "start": "664959",
    "end": "670720"
  },
  {
    "text": "Administration database what that means is that with Dynamo DB the only thing that you need to do when you're configuring it and setting it up is tell",
    "start": "670720",
    "end": "677279"
  },
  {
    "text": "Dynamo DB how many reads and writes per second you want it to be capable of this could be a 100 it could be 10,000 could",
    "start": "677279",
    "end": "683800"
  },
  {
    "text": "be 100 thousand could be hundreds of thousands and behind the scenes Dynamo DB is going to take care of all the",
    "start": "683800",
    "end": "688880"
  },
  {
    "text": "hardware provisioning uh replication of that data potentially partitioning that data",
    "start": "688880",
    "end": "694000"
  },
  {
    "text": "behind the scenes for you without you having to worry about doing anything while delivering a consistent performance to you uh usually in the low",
    "start": "694000",
    "end": "700440"
  },
  {
    "text": "single- digigit milliseconds of response time and again that consistency of that performance is going to remain the same",
    "start": "700440",
    "end": "706360"
  },
  {
    "text": "whether you're doing 100 queries per second 10,000 queries per second or 100,000 queries per second so really",
    "start": "706360",
    "end": "712440"
  },
  {
    "text": "nice option in a non-relational database uh for you to to use and then lastly we",
    "start": "712440",
    "end": "717880"
  },
  {
    "text": "have Amazon red shift data warehouse housing service which we also launched about two years ago now incredibly popular option that we have if you're",
    "start": "717880",
    "end": "724480"
  },
  {
    "text": "looking for a data warehouse uh with red shift again you're not paying for what you typically would with a data",
    "start": "724480",
    "end": "730680"
  },
  {
    "text": "warehouse which is a lot of upfront licensing costs needing to predict what Your Capacity needs might be at the end",
    "start": "730680",
    "end": "736279"
  },
  {
    "text": "of the year or something like that instead with red shift you provision it by individual nodes and you only pay for",
    "start": "736279",
    "end": "741639"
  },
  {
    "text": "the nodes that you're using and any point in time you could double the size of your cluster triple the size of your cluster uh turn it up turn it down so",
    "start": "741639",
    "end": "748639"
  },
  {
    "text": "again very flexible option so again it's my recomend oh sorry uh again it's my recommendation to",
    "start": "748639",
    "end": "754800"
  },
  {
    "text": "go with a managed database I do think it makes a lot of sense but then the next question that you have to ask yourself is how do we choose which database",
    "start": "754800",
    "end": "761320"
  },
  {
    "text": "technology to go with uh and this kind of borders on a religious conversation in many circles when you're thinking",
    "start": "761320",
    "end": "766800"
  },
  {
    "text": "about whether I want to go with traditional SQL based databases or non-relational databases like Dynamo DB",
    "start": "766800",
    "end": "773079"
  },
  {
    "text": "and while many people may not like this I am actually a very strong proponent of recommenda recommending SQL database",
    "start": "773079",
    "end": "780880"
  },
  {
    "text": "and uh again this is something where a lot of people will say well no I can't work with SQL it's not going to work for my app it's not going to work the way I",
    "start": "780880",
    "end": "787000"
  },
  {
    "text": "need it to but the reality of it is is that SQL is actually a really fantastic place for you to start with a new",
    "start": "787000",
    "end": "792519"
  },
  {
    "text": "application uh SQL again very well-worn wellestablished technology uh lots of existing",
    "start": "792519",
    "end": "798279"
  },
  {
    "text": "communities code books training options out there for sql-based databases you really aren't going to",
    "start": "798279",
    "end": "804480"
  },
  {
    "text": "break sql-based databases in your first 10 million users uh this argument gets even stronger with the announcement of Aurora today again massive scale",
    "start": "804480",
    "end": "811399"
  },
  {
    "text": "database that you can run via RDS without having to do much work yourself and then they're really clear patterns",
    "start": "811399",
    "end": "817760"
  },
  {
    "text": "of scalability if you do go with a different database option so if you went with my SQL or Oracle or SQL Server",
    "start": "817760",
    "end": "823279"
  },
  {
    "text": "there are a lot of companies that have brought these databased engines to scale and so you're not going to necessarily have to go and reinvent the wheel on how",
    "start": "823279",
    "end": "829199"
  },
  {
    "text": "this would be done and again up above here in the the third bullet point where I say that you're not going to break SQL",
    "start": "829199",
    "end": "835040"
  },
  {
    "text": "databases there is that little asteris there where I say that unless you're doing something really really weird with your data in terms of how you're",
    "start": "835040",
    "end": "841040"
  },
  {
    "text": "accessing it or you have massive massive amounts with it so the reply to that usually is well I'm going to be really",
    "start": "841040",
    "end": "847160"
  },
  {
    "text": "successful and so I am going to have massive amounts of data and so I should just start with a non-relational",
    "start": "847160",
    "end": "852560"
  },
  {
    "text": "database and I like to quantify what massive means and in the cases that I've seen when I've worked with companies how",
    "start": "852560",
    "end": "858639"
  },
  {
    "text": "I Define massive is data that is going to be in the terabytes very early in your business not it might be in the",
    "start": "858639",
    "end": "865399"
  },
  {
    "text": "terabytes and 3 years 5 years right now this year you're going to have a terabyte of data inside of a database at",
    "start": "865399",
    "end": "871560"
  },
  {
    "text": "that point in time and again depending on the velocity and change of that data it might make sense for a non-relational",
    "start": "871560",
    "end": "876680"
  },
  {
    "text": "database but otherwise starting with SQL is actually a very good path to take again why are some other reasons",
    "start": "876680",
    "end": "883519"
  },
  {
    "text": "that you may want to go with no SQL uh there's a number of different use cases that do just generally fit non relational databases uh you know things",
    "start": "883519",
    "end": "890680"
  },
  {
    "text": "where you have super low latency applications where dyn plays a really good fit because of the speed that it offers behind the scenes uh metad data",
    "start": "890680",
    "end": "897720"
  },
  {
    "text": "metadata driven data sets that you might have so for instance if you were uh collecting pictures and serving pictures",
    "start": "897720",
    "end": "903800"
  },
  {
    "text": "out and you need to store metadata about them a non-relational database sometimes makes more sense than a relational one",
    "start": "903800",
    "end": "909120"
  },
  {
    "text": "because there's very loose Rel relational constructs between that data uh again highly non-relational data uh",
    "start": "909120",
    "end": "915519"
  },
  {
    "text": "what people would refer to as schema data sets and what I always like to say is if you have an application that's",
    "start": "915519",
    "end": "920560"
  },
  {
    "text": "generating data you are defining a schema even if you want to say that there could be values that may not exist",
    "start": "920560",
    "end": "925839"
  },
  {
    "text": "in that data that's just called a null and it's been around for about 40 years now so understanding exactly what it",
    "start": "925839",
    "end": "932000"
  },
  {
    "text": "means when people say scheist and what schemes means to you is a really important part about understanding what databased technology makes the most",
    "start": "932000",
    "end": "938800"
  },
  {
    "text": "sense for you and then again massive amounts of data where you're dealing with a whole lot of inest a whole lot of",
    "start": "938800",
    "end": "944120"
  },
  {
    "text": "data all at once is another good place for a non-relational database so let's go back here to our",
    "start": "944120",
    "end": "950920"
  },
  {
    "text": "our application architecture and say that we are going with a relational database in this case we'll use RDS",
    "start": "950920",
    "end": "957519"
  },
  {
    "text": "maybe making use of Aurora again which was just announced today or my SQL SQL server oracol or",
    "start": "957519",
    "end": "963519"
  },
  {
    "text": "postgress so we'll split that up and we'll allow my SQL to do it for us and then in addressing the high availability",
    "start": "963519",
    "end": "969079"
  },
  {
    "text": "and failover that we need to in this stack uh RDS actually helps us out quite a bit so RDS supports a functionality",
    "start": "969079",
    "end": "975920"
  },
  {
    "text": "called multi-az pretty straightforward following what I was talking about earlier this allows you to with a single",
    "start": "975920",
    "end": "981880"
  },
  {
    "text": "check box set up a highly available database server technically it's two servers behind the scenes but to you it",
    "start": "981880",
    "end": "988120"
  },
  {
    "text": "just looks like one is essentially into your application and with this what you end up getting is a single DNS endpoint",
    "start": "988120",
    "end": "993639"
  },
  {
    "text": "that your application needs to be aware of and behind the scenes we're able to do failover for you uh usually in a",
    "start": "993639",
    "end": "999560"
  },
  {
    "text": "minute to two minutes tops and your application needs to know nothing about that failover occurring what we also see here is that",
    "start": "999560",
    "end": "1006920"
  },
  {
    "text": "I have split up my web tier into two availability zones and put an elastic load balancer in front of",
    "start": "1006920",
    "end": "1014040"
  },
  {
    "text": "it so elastic load balancer AWS elb as many people refer to it is a service",
    "start": "1014040",
    "end": "1020079"
  },
  {
    "text": "that pretty straightforward is a load balancing Service uh what it allows you to do is distribute traffic or requests",
    "start": "1020079",
    "end": "1025839"
  },
  {
    "text": "to number of instances however many you might have one of the great great things about elb is that it scales up for you",
    "start": "1025839",
    "end": "1031959"
  },
  {
    "text": "it heals itself and you really don't have to do much to manage it pretty close to a zero Administration service",
    "start": "1031959",
    "end": "1037240"
  },
  {
    "text": "just like some of the other ones that we have I have customers that are doing a quarter of a million requests through an EB and EB just doesn't break a sweat so",
    "start": "1037240",
    "end": "1045678"
  },
  {
    "text": "very very Dynamic High scalable service for you that removes kind of some of the bottlenecks that traditionally come with",
    "start": "1045679",
    "end": "1051120"
  },
  {
    "text": "running uh typical load balancers I've spent many years working in data center",
    "start": "1051120",
    "end": "1057080"
  },
  {
    "text": "environments racking and stacking and working with physical load balancers and they have a finite usually amount of",
    "start": "1057080",
    "end": "1062320"
  },
  {
    "text": "capability and capacity whether it's things like SSL terminations that they can handle at one time amount of through",
    "start": "1062320",
    "end": "1068039"
  },
  {
    "text": "putter traffic uh these are things that you don't have to worry about with elb it will just scale up with you as you",
    "start": "1068039",
    "end": "1073280"
  },
  {
    "text": "need to so as I was just mentioning you do SSL termination for you provides a number of monitoring capabili ities also",
    "start": "1073280",
    "end": "1079520"
  },
  {
    "text": "supports uh logs that you can get access logs from the elb which in a very high",
    "start": "1079520",
    "end": "1084679"
  },
  {
    "text": "trffic website can actually be very helpful to you because then you don't need to necessarily collect those logs",
    "start": "1084679",
    "end": "1089799"
  },
  {
    "text": "on your web instances so scaling this now horizontally will actually get us pretty",
    "start": "1089799",
    "end": "1096000"
  },
  {
    "text": "far again EB is kind of a massive scale service for you RDS supports a number of capabilities to help you scale",
    "start": "1096000",
    "end": "1102240"
  },
  {
    "text": "horizontally as well as vertically inside of it and so if we look at our architecture now and this is kind of a",
    "start": "1102240",
    "end": "1108039"
  },
  {
    "text": "simplified version of it what we could do here is again just keep adding web servers horizontally across our",
    "start": "1108039",
    "end": "1113400"
  },
  {
    "text": "infrastructure uh this diagram in terms of RDS is highlighting what my SQL we",
    "start": "1113400",
    "end": "1118760"
  },
  {
    "text": "could do with my SQL in RDS which is adding in read replicas uh now with aora this actually would be a lot",
    "start": "1118760",
    "end": "1125200"
  },
  {
    "text": "simpler um and essentially have El direct our traffic out to our instances and things are looking good and this",
    "start": "1125200",
    "end": "1131320"
  },
  {
    "text": "could potentially get us into the tens of thousands if not hundreds of thousands of concurrent",
    "start": "1131320",
    "end": "1137080"
  },
  {
    "text": "users so again this was take us really really far but if we care about the performance of our website and the",
    "start": "1137080",
    "end": "1142360"
  },
  {
    "text": "efficiency of it there's actually a lot of other improvements that we could make in the stack so iterating on top of this",
    "start": "1142360",
    "end": "1147520"
  },
  {
    "text": "and moving forward it makes sense for us to shift some load around so at this point we're serving all of our website",
    "start": "1147520",
    "end": "1153280"
  },
  {
    "text": "all of our assets everything out of that web tier this is actually really really inefficient for a number of reasons uh",
    "start": "1153280",
    "end": "1159600"
  },
  {
    "text": "there's a great website out there webpagetest.org ties in with another uh website that keeps uh statistics about",
    "start": "1159600",
    "end": "1167520"
  },
  {
    "text": "majority of the most popular websites on the world and what it shows usually is",
    "start": "1167520",
    "end": "1173320"
  },
  {
    "text": "the content that's being served out of cdns versus not being served at a CDN and content that is being cached versus",
    "start": "1173320",
    "end": "1180000"
  },
  {
    "text": "not being cached surprisingly enough in the first 100,000 or the most popular 100,000 websites that are out there",
    "start": "1180000",
    "end": "1186360"
  },
  {
    "text": "somewhere between 40 and 60% of content is not either served via a CDN or cached by a browser so if we think about how we",
    "start": "1186360",
    "end": "1193799"
  },
  {
    "text": "currently here have this uh architecture uh mapped out for us here we're also not",
    "start": "1193799",
    "end": "1198960"
  },
  {
    "text": "meeting that best practice of serving that data through another means so what we should do is move our static content",
    "start": "1198960",
    "end": "1204440"
  },
  {
    "text": "off of our web tier into something that's going to serve it a lot more efficiently for us in this case S3 and",
    "start": "1204440",
    "end": "1210159"
  },
  {
    "text": "then we could put cloudfront CDN service in front of that data to help again reduce the load on our web tier and then",
    "start": "1210159",
    "end": "1216000"
  },
  {
    "text": "increase the performance of our website for our end users uh Amazon S3 hopefully one that",
    "start": "1216000",
    "end": "1222240"
  },
  {
    "text": "everyone in the room is familiar with simple storage service one of the earliest services that we launched uh Andy talked a little bit today about the",
    "start": "1222240",
    "end": "1229000"
  },
  {
    "text": "kind of traffic and growth that we've seen in S3 over the years again massive massive scale well over a million",
    "start": "1229000",
    "end": "1235280"
  },
  {
    "text": "requests per second globally uh customers with just a ton of data inside of it and essentially with S3 it's",
    "start": "1235280",
    "end": "1241360"
  },
  {
    "text": "object-based storage for the internet you write and put your objects into it they could be served out directly or you",
    "start": "1241360",
    "end": "1246799"
  },
  {
    "text": "could put a lot of different controls in place for how that data is accessed but it makes a great great place to serve",
    "start": "1246799",
    "end": "1252200"
  },
  {
    "text": "static content for websites whether they be images CSS files JavaScript movie",
    "start": "1252200",
    "end": "1257400"
  },
  {
    "text": "files whatever it might might be uh and you don't really have to do anything to provision S3 you have a",
    "start": "1257400",
    "end": "1263640"
  },
  {
    "text": "bucket which is a name space you write data into it that data gets served out and that's kind of all that you need to",
    "start": "1263640",
    "end": "1268840"
  },
  {
    "text": "do with it so we could take all of our static resources put it in this S3 bucket and not have to worry again about",
    "start": "1268840",
    "end": "1274640"
  },
  {
    "text": "any of the scalability of that S3 bucket ourselves there's a number of other features and ties with S3 it plugs",
    "start": "1274640",
    "end": "1280559"
  },
  {
    "text": "directly in with EMR elastic map ruce you could suck data into it from Red shifts uh you can uh use it as a logging",
    "start": "1280559",
    "end": "1287559"
  },
  {
    "text": "endpoint for a number of services so cloud trail cloudfront S3 elb a number",
    "start": "1287559",
    "end": "1294080"
  },
  {
    "text": "of places that you can use now S3 as a logging in point4 again lots of different capabilities of",
    "start": "1294080",
    "end": "1300600"
  },
  {
    "text": "S3 and then I also talked about what we would really want to do is put cloud front in front of S3 so cloudfront a",
    "start": "1300600",
    "end": "1306840"
  },
  {
    "text": "Content delivery network service uh hosted across all those Pops that I had before on that diagram those 50 plus",
    "start": "1306840",
    "end": "1312799"
  },
  {
    "text": "points of presence that we have globally the idea being here that your content should end up getting cached in cloudfront therefore greatly reducing",
    "start": "1312799",
    "end": "1319919"
  },
  {
    "text": "the time that it takes for your end users to access that content it ties in directly with S3 as a backend so you can",
    "start": "1319919",
    "end": "1325919"
  },
  {
    "text": "do things such as you know secure content delivery and again with cloudfront is the kind of thing that you",
    "start": "1325919",
    "end": "1330960"
  },
  {
    "text": "kind of set it and forget it uh unlike many other CDN providers out there you don't have to worry about commitments",
    "start": "1330960",
    "end": "1336559"
  },
  {
    "text": "with cloudfront you pay just for what you use another thing is that you don't have to worry about a complicated setup",
    "start": "1336559",
    "end": "1342120"
  },
  {
    "text": "process for cloudfront you can go right now today to the web console and within minutes how the cloudfront distribution",
    "start": "1342120",
    "end": "1348720"
  },
  {
    "text": "again making use of all these points of presence that there are and that exist globally uh you can see a couple of",
    "start": "1348720",
    "end": "1354600"
  },
  {
    "text": "interesting graphs here on these slides uh the first one up here on the top is a diagram which unfortunately couldn't put",
    "start": "1354600",
    "end": "1360039"
  },
  {
    "text": "the actual timing in on this talking about the difference between response time and server load for Content that is",
    "start": "1360039",
    "end": "1365840"
  },
  {
    "text": "delivered via no CDN CDN with static content and then CDN with static and",
    "start": "1365840",
    "end": "1371320"
  },
  {
    "text": "dynamic content so cloudfront today has capabilities of doing both static and dynamic content you can do full SSL over",
    "start": "1371320",
    "end": "1378559"
  },
  {
    "text": "Cloud front um you can do very low ttls if you so need them uh but the idea here is that again we're removing this load",
    "start": "1378559",
    "end": "1385159"
  },
  {
    "text": "off of our web tier which will allow us to have to run a much smaller web tier I've seen customers save a significant",
    "start": "1385159",
    "end": "1390960"
  },
  {
    "text": "amount of money by moving to a CDN and removing again many of those requests off of their actual web tier itself down",
    "start": "1390960",
    "end": "1397360"
  },
  {
    "text": "on the bottom here this is an actual traffic graph from a customer of ours uh enabled cloudfront was using it in front",
    "start": "1397360",
    "end": "1404159"
  },
  {
    "text": "of their website and they experienced a very massive traffic event and uh at one point you can see here",
    "start": "1404159",
    "end": "1410919"
  },
  {
    "text": "that cloudfront was serving over uh 70 gbt per second out of it for that one customer and the customer didn't need to",
    "start": "1410919",
    "end": "1417679"
  },
  {
    "text": "do anything to make that happen they just needed to configure Cloud front so really highs scale Service uh to really",
    "start": "1417679",
    "end": "1424120"
  },
  {
    "text": "help the performance of your web applications so we've shifted some of that load now from our our web tier off",
    "start": "1424120",
    "end": "1431159"
  },
  {
    "text": "to S3 and cloudfront now we also care about the the bottom part of this graph here which is moving session State sorry",
    "start": "1431159",
    "end": "1437960"
  },
  {
    "text": "session State information from our web tier in our database potentially to a caching tier so in this case what we're",
    "start": "1437960",
    "end": "1444039"
  },
  {
    "text": "going to do is shift some of that potentially to elasticache or to Dynamo",
    "start": "1444039",
    "end": "1449120"
  },
  {
    "text": "DB so Dynamo DB I already talked about a little bit it's a no SQL database we call it a zero Administration Service uh",
    "start": "1449120",
    "end": "1456279"
  },
  {
    "text": "a lot of different capabilities originally was just the key value store we recently added Json support and increased the uh item size up to 400",
    "start": "1456279",
    "end": "1463919"
  },
  {
    "text": "kilobytes so uh with Json support now similar to some document databases and",
    "start": "1463919",
    "end": "1469159"
  },
  {
    "text": "other Json based databases you can actually have really deep documents inside of uh Dynamo DB and be able to",
    "start": "1469159",
    "end": "1476559"
  },
  {
    "text": "use those inside of your applications again you really don't have to do much with Dynamo DB in terms of provisioning it you just tell out the",
    "start": "1476559",
    "end": "1482279"
  },
  {
    "text": "reads and wrs that you need per second you don't have to worry about the storage aspect and behind the scenes Dynamo DB is replicated across uh",
    "start": "1482279",
    "end": "1488919"
  },
  {
    "text": "multiple facilities uh such that we can basically give you a high level of",
    "start": "1488919",
    "end": "1494279"
  },
  {
    "text": "consistency inside of your database elastic is another service that",
    "start": "1494279",
    "end": "1499320"
  },
  {
    "text": "we have very similar to RDS in that it is a Management Service on top of two",
    "start": "1499320",
    "end": "1505320"
  },
  {
    "text": "common technologies that many people use today one is mcash the other is redus so essentially with elasticache you get a",
    "start": "1505320",
    "end": "1511440"
  },
  {
    "text": "hosted redus or mcash cluster that you can set up uh we're we're removing a lot of the burden of the work that you would",
    "start": "1511440",
    "end": "1517159"
  },
  {
    "text": "need to do there um with mcash you can have large clusters we've actually uh",
    "start": "1517159",
    "end": "1522559"
  },
  {
    "text": "released a number of modules for different languages to do self-discovery of those such that if you lose a note",
    "start": "1522559",
    "end": "1528360"
  },
  {
    "text": "code elasticache actually will replace that for you and then your application can be updated based on this discovery",
    "start": "1528360",
    "end": "1534520"
  },
  {
    "text": "API with rdus we just actually announced a couple weeks ago uh failover mode for",
    "start": "1534520",
    "end": "1539640"
  },
  {
    "text": "redus from primaries to secondaries such that you can promote a secondary on the fly with as little disruption to your",
    "start": "1539640",
    "end": "1545960"
  },
  {
    "text": "application as possible and so it makes a good place to do uh caching of database queries to do caching of",
    "start": "1545960",
    "end": "1553200"
  },
  {
    "text": "information coming in from your customers uh to do state information things like that",
    "start": "1553200",
    "end": "1560039"
  },
  {
    "text": "so we've shifted again some of this load around here and one of the last options that we could do again because",
    "start": "1560039",
    "end": "1565679"
  },
  {
    "text": "cloudfront supports the ability to serve Dynamic content is we can actually put cloudfront in front of our entire",
    "start": "1565679",
    "end": "1571039"
  },
  {
    "text": "infrastructure so not just those static resources but actually directly in front of our elb and make use of the ability",
    "start": "1571039",
    "end": "1577039"
  },
  {
    "text": "to do caching of some of the rest of our web content like our HTML at the edge inside of cloud front so again much",
    "start": "1577039",
    "end": "1583760"
  },
  {
    "text": "further reducing any sort of load that we might have on our actual infrastructure",
    "start": "1583760",
    "end": "1590200"
  },
  {
    "text": "so now that we've shifted some of this load around we've removed state from our web tier we've helped lighten up our database tier we've moved static assets",
    "start": "1590200",
    "end": "1597840"
  },
  {
    "text": "off of our web tier onto S3 and serving them via cloudfront we can kind of go back to the beginning of the talk and",
    "start": "1597840",
    "end": "1603399"
  },
  {
    "text": "talk about a service that we kind of briefly skimmed over uh which is auto scaling so um autoscaling Again part of",
    "start": "1603399",
    "end": "1610720"
  },
  {
    "text": "ec2 allows you to horizontally scale a fleet of servers such that you could have four web servers in the fleet at",
    "start": "1610720",
    "end": "1617399"
  },
  {
    "text": "one point and then then a triggered event can happen and that could be brought up to eight up to 10 up to 20 up",
    "start": "1617399",
    "end": "1622520"
  },
  {
    "text": "to whatever number it might be and then as your load decreases you can shrink back down that tier of those uh those",
    "start": "1622520",
    "end": "1629520"
  },
  {
    "text": "servers whatever they might be a number of different ways that you can have these events triggered they can be based on cloudwatch data they can be based on",
    "start": "1629520",
    "end": "1637000"
  },
  {
    "text": "uh timed events or scheduled events or you can manually call these yourself VI the CLI or the API so number of",
    "start": "1637000",
    "end": "1642919"
  },
  {
    "text": "different ways to do this again this is a horizontal scaling so it's not going from a single host that has four cores",
    "start": "1642919",
    "end": "1648640"
  },
  {
    "text": "to eight cores it's going from one host to two to three to four and then back down to two again if you need",
    "start": "1648640",
    "end": "1653760"
  },
  {
    "text": "to and if you want to think about how this can be really effective here think of this graph here an example of traffic",
    "start": "1653760",
    "end": "1660480"
  },
  {
    "text": "to amazon.com for a given 7-Day period here we see some pretty predictable uh curves kind of Peaks and TRS that we can",
    "start": "1660480",
    "end": "1667720"
  },
  {
    "text": "understand and so if we were doing static capacity planning for this we could draw a line above say maybe 15% of",
    "start": "1667720",
    "end": "1673840"
  },
  {
    "text": "what we predict our Peak to be and say okay this is our available capacity and actually we have a pretty high utilization if we do this this works",
    "start": "1673840",
    "end": "1681159"
  },
  {
    "text": "well for the 7-Day period but if we were to look at a slightly different time frame in this case traffic to amazon.com",
    "start": "1681159",
    "end": "1687159"
  },
  {
    "text": "in the month of November what we see is something a little bit different so we've got these two spikes here the first one could be Black Friday and the",
    "start": "1687159",
    "end": "1694519"
  },
  {
    "text": "next one Cyber Monday two of the biggest shopping days in the United States around our holiday season and if we were",
    "start": "1694519",
    "end": "1700200"
  },
  {
    "text": "to do that same 15% of capacity planning line uh for the month of November what",
    "start": "1700200",
    "end": "1705480"
  },
  {
    "text": "we end up having here is a whole lot of waste andox proximately 70 plus% of our",
    "start": "1705480",
    "end": "1710880"
  },
  {
    "text": "capacity would be wasted and only utilized towards the end of the month and we'd only be utilizing about 24% of",
    "start": "1710880",
    "end": "1716480"
  },
  {
    "text": "it but what autos scaling allows us to do is directly map that capacity to utilization that we need and have a much",
    "start": "1716480",
    "end": "1723880"
  },
  {
    "text": "much higher utilization rate for our resources which means that you're paying a lot less and getting more for your money essentially so again Autos",
    "start": "1723880",
    "end": "1731039"
  },
  {
    "text": "Skilling allows you to do this so if we go back now when we look at our infrastructure this diagram is starting",
    "start": "1731039",
    "end": "1736919"
  },
  {
    "text": "to get a little crazy here but what we can see essentially is the the white dotted lined box around our web tier and",
    "start": "1736919",
    "end": "1742760"
  },
  {
    "text": "while I show it split between the azs you could actually imagine this just being one autoscaling group across all",
    "start": "1742760",
    "end": "1747960"
  },
  {
    "text": "of our azs uh it's one of the capabilities that autoscaling supports for us we've still got our RDS uh",
    "start": "1747960",
    "end": "1753919"
  },
  {
    "text": "database tier here we've got our our primary node and our secondary as part of a multi-az setup we have a number of",
    "start": "1753919",
    "end": "1760120"
  },
  {
    "text": "read replicas and then we've introduced elasticache and Dynamo DB potentially",
    "start": "1760120",
    "end": "1765480"
  },
  {
    "text": "for caching purposes uh as well as then still having our content being served via cloudfront with our Dynamic content",
    "start": "1765480",
    "end": "1772200"
  },
  {
    "text": "coming to our elb and our static content going to our S3",
    "start": "1772200",
    "end": "1777360"
  },
  {
    "text": "bucket but it makes important sense here to think about that you really don't want to be doing all of this by hand",
    "start": "1777720",
    "end": "1783679"
  },
  {
    "text": "right if we go back to this diagram here there's a lot of things going on in this picture and so it doesn't make a lot of",
    "start": "1783679",
    "end": "1788919"
  },
  {
    "text": "sense for you to be going and sculpting this environment like a statue right we want to do this smart",
    "start": "1788919",
    "end": "1795279"
  },
  {
    "text": "ways so you really want to make use of automation you want to make use of automation throughout the entire workflow of when you're working with AWS",
    "start": "1795279",
    "end": "1802440"
  },
  {
    "text": "I think if you are working with Cloud infrastructure and you're doing it by hand you're kind of defeating the whole purpose of apid driven infrastructure",
    "start": "1802440",
    "end": "1809960"
  },
  {
    "text": "and treating your infrastructure as code so tools to manage AWS resources tools",
    "start": "1809960",
    "end": "1815039"
  },
  {
    "text": "to manage your actual instances and hosts and then tools to manage the analysis of say your logs your",
    "start": "1815039",
    "end": "1820480"
  },
  {
    "text": "monitoring whatever it might be uh here we are with another slightly outdated slide as of today um but uh",
    "start": "1820480",
    "end": "1827799"
  },
  {
    "text": "again a number of different services that exist here in AWS to help you deploy and manage your applications so",
    "start": "1827799",
    "end": "1833679"
  },
  {
    "text": "elastic beanock which is very close to a platform as a service you toss your code into it it builds out a multi-az",
    "start": "1833679",
    "end": "1839360"
  },
  {
    "text": "infrastructure for you probably the the best and easiest place to start out with AWS if you're a new customer up above",
    "start": "1839360",
    "end": "1845559"
  },
  {
    "text": "that we have opsworks which is another management tool that integrates with host Bas configuration management today",
    "start": "1845559",
    "end": "1851440"
  },
  {
    "text": "in the ver in uh in the case it's using Chef under the hood allows you to manage a much more complicated stack of",
    "start": "1851440",
    "end": "1857279"
  },
  {
    "text": "resources we have AWS cloud formation which is a template driven service that allows you",
    "start": "1857279",
    "end": "1862519"
  },
  {
    "text": "to represent almost any of the resources that you could have in aw as a a Json",
    "start": "1862519",
    "end": "1867760"
  },
  {
    "text": "based template file such that you could potentially do version and control of that template file you use it to update",
    "start": "1867760",
    "end": "1873080"
  },
  {
    "text": "and manage all of your resources and be able to literally treat your entire infrastructure as code uh the one thing",
    "start": "1873080",
    "end": "1879320"
  },
  {
    "text": "that's missing from this diagram that makes a lot of sense now is uh code deploy which is a service that we just launched today that also allows you to",
    "start": "1879320",
    "end": "1887159"
  },
  {
    "text": "more easily deploy deoy code across infrastructure so if you didn't want to use bean stock uh because maybe you",
    "start": "1887159",
    "end": "1892799"
  },
  {
    "text": "found it too restrictive you didn't want to use opsw works because maybe you're using puppet or anible or salt or",
    "start": "1892799",
    "end": "1898240"
  },
  {
    "text": "something else um and you didn't want to use cloud information because you didn't want to work with this uh templated",
    "start": "1898240",
    "end": "1903919"
  },
  {
    "text": "based system you can now use code deploy to very easily deploy applications across a fleet of ec2 instances um and",
    "start": "1903919",
    "end": "1911760"
  },
  {
    "text": "again definitely would encourage you to take a look at that service it's something that came out of uh Us in turn",
    "start": "1911760",
    "end": "1918080"
  },
  {
    "text": "at Amazon um in the form of Apollo which is something that people inside of Amazon know is just an amazing amazing",
    "start": "1918080",
    "end": "1924600"
  },
  {
    "text": "tool and then lastly you could do it yourself but again ideally here we we don't want to be doing it ourselves",
    "start": "1924600",
    "end": "1930200"
  },
  {
    "text": "right we want to be using a tool to help out with this so uh at some point here going back",
    "start": "1930200",
    "end": "1937240"
  },
  {
    "text": "to that previous diagram where we had Auto scaling RDS elastic cach Dynamo DB S3 cloudfront uh you're going to start",
    "start": "1937240",
    "end": "1943880"
  },
  {
    "text": "to need to run into certain things that might potentially restrict you so some of the things that you'll start to run",
    "start": "1943880",
    "end": "1949600"
  },
  {
    "text": "into is you know making sure that you have really strong metrics and logging in place so that you can look deeply",
    "start": "1949600",
    "end": "1955120"
  },
  {
    "text": "into your application and your infrastructure stack understand where you might be running into bottlenecks or falling short you also and this is the",
    "start": "1955120",
    "end": "1961919"
  },
  {
    "text": "second Bon here is a really important one we talk at AWS a lot about our customer Obsession and we do try to",
    "start": "1961919",
    "end": "1968039"
  },
  {
    "text": "listen to our customers in every single way that we possibly can but I find that many web companies actually don't do the",
    "start": "1968039",
    "end": "1973720"
  },
  {
    "text": "same when working with their customers and sometimes finding out from your end users what they're experiences on your",
    "start": "1973720",
    "end": "1979360"
  },
  {
    "text": "site's lad Time Performance and so forth is really important so there are a number of tools that are out there today",
    "start": "1979360",
    "end": "1984600"
  },
  {
    "text": "that can do um real user management or real user monitoring of your application see what kind of performance your end",
    "start": "1984600",
    "end": "1991120"
  },
  {
    "text": "users are getting this is a very important metric that you should be gathering and then lastly you can work to try to squeeze as much out of these",
    "start": "1991120",
    "end": "1997760"
  },
  {
    "text": "different components as you can throughout your infrastructure based on the data that you're Gathering here",
    "start": "1997760",
    "end": "2004399"
  },
  {
    "text": "essentially there are a number of metrics that I always think are really important uh we have host level metrics aggregate level metrics again of various",
    "start": "2004399",
    "end": "2011600"
  },
  {
    "text": "hosts that we might have log analysis and then again external site performance uh that last one being one that I very",
    "start": "2011600",
    "end": "2018120"
  },
  {
    "text": "surprised that many companies don't pay more attention to um I I find that external site performance is probably",
    "start": "2018120",
    "end": "2023360"
  },
  {
    "text": "the single most important metric that you should be paying attention to versus things like CPU utilization or memory",
    "start": "2023360",
    "end": "2029120"
  },
  {
    "text": "usage or something like that uh the top two graphs here are actually from uh",
    "start": "2029120",
    "end": "2034360"
  },
  {
    "text": "cloudwatch um which is a service that we have here at AWS one on the bottom right is an actually",
    "start": "2034360",
    "end": "2040080"
  },
  {
    "text": "pretty aged screenshot from Cabana which is a log analysis tool and then on the bottom left here this is a screenshot",
    "start": "2040080",
    "end": "2046440"
  },
  {
    "text": "from pingdom which is a great external tool that you can use to kind of manage the performance of your",
    "start": "2046440",
    "end": "2052000"
  },
  {
    "text": "website so there are actually further improvements that we can make now inside that web tier right we've shifted off",
    "start": "2052000",
    "end": "2057960"
  },
  {
    "text": "Static content we've shifted off uh State and session caching let's see what else we could potentially do inside that",
    "start": "2057960",
    "end": "2063599"
  },
  {
    "text": "application and again at this point we really just have a single monolithic application so maybe we can break that",
    "start": "2063599",
    "end": "2068839"
  },
  {
    "text": "up a little further and so this is where I like to talk about service oriented architecture um nowadays there's kind of",
    "start": "2068839",
    "end": "2074878"
  },
  {
    "text": "a buzz in the term of microservices which I feel is really just another revision on top of service oriented",
    "start": "2074879",
    "end": "2080440"
  },
  {
    "text": "architecture and when we're talking about SOA what we're talking about is the concept of moving functionality of",
    "start": "2080440",
    "end": "2085679"
  },
  {
    "text": "your application into independent services and tiers inside of your overall infrastructure and such that",
    "start": "2085679",
    "end": "2092878"
  },
  {
    "text": "each of these individual tiers and components could scale individually and this greater separ ation and",
    "start": "2092879",
    "end": "2098320"
  },
  {
    "text": "Independence of that scalability is what's going to give you better overall performance inside of your infrastructure and if you think about",
    "start": "2098320",
    "end": "2104440"
  },
  {
    "text": "how AWS works today where we have all these independent Services again as of today now almost 50 Services I guess um",
    "start": "2104440",
    "end": "2111960"
  },
  {
    "text": "SOA is something that we kind of live and breathe uh every day here so some examples of this are things that you",
    "start": "2111960",
    "end": "2117760"
  },
  {
    "text": "want to think about when you're building an SOA infrastructure uh loose coupling is kind of really the the key important",
    "start": "2117760",
    "end": "2123000"
  },
  {
    "text": "part that you want to be aware of right your services should be very independent from each other they shouldn't",
    "start": "2123000",
    "end": "2128280"
  },
  {
    "text": "necessarily have to be so tightly tied to each other that the you know one being out of capacity one being",
    "start": "2128280",
    "end": "2134000"
  },
  {
    "text": "constrained should negatively impact the other if you run into that then you're really not doing SLA well uh design",
    "start": "2134000",
    "end": "2139800"
  },
  {
    "text": "everything as a black box right as independently again as possible um this is something that we do very heavily here at Amazon and AWS and all of our",
    "start": "2139800",
    "end": "2147200"
  },
  {
    "text": "services again usually just exposing apis to each other but not being able to talk directly to each other on a a lower",
    "start": "2147200",
    "end": "2153280"
  },
  {
    "text": "level protocol if you will uh and going along with that is decoupling the interaction and again trying to favor services that",
    "start": "2153280",
    "end": "2160000"
  },
  {
    "text": "already have built-in redundancy and scalability for you so making use for something like Dynamo DB as a place to",
    "start": "2160000",
    "end": "2165319"
  },
  {
    "text": "sore to store session State versus maybe rolling something yourself you can see a diagram down here in the example of you",
    "start": "2165319",
    "end": "2171880"
  },
  {
    "text": "know tight coupling versus loose coupling where sometimes it makes sense to put something like a q in place",
    "start": "2171880",
    "end": "2177079"
  },
  {
    "text": "between two tiers instead of having them interact directly with each other which could potentially cause one to overwhelm",
    "start": "2177079",
    "end": "2183160"
  },
  {
    "text": "the other I again with loose coupling in SLA definitely helps you with scaling your",
    "start": "2183160",
    "end": "2188920"
  },
  {
    "text": "infrastructure really well and this is another point where like how I like to say that I favor managed databases I",
    "start": "2188920",
    "end": "2195000"
  },
  {
    "text": "also F favor manage services wherever I can get away with them and if you're a small company and you have a small team",
    "start": "2195000",
    "end": "2201480"
  },
  {
    "text": "you know try to fight the tendency to say well we can just do this all ourselves and maybe it'll be cheaper for",
    "start": "2201480",
    "end": "2206560"
  },
  {
    "text": "you but you're treating your time for this versus this cost and so you know try to avoid Reinventing the wheel again",
    "start": "2206560",
    "end": "2213400"
  },
  {
    "text": "especially as you're a small company you're building out a new infrastructure application when I talk about Reinventing the wheel it's building",
    "start": "2213400",
    "end": "2219160"
  },
  {
    "text": "things like your own email service queuing databases monitoring log analysis stuff like that and actually",
    "start": "2219160",
    "end": "2226040"
  },
  {
    "text": "I've worked with startups where I've seen them build all of these things themselves and so you know try Toops try",
    "start": "2226040",
    "end": "2232599"
  },
  {
    "text": "to avoid doing that as much as possible really ask yourself if your developers are spending time on something that is",
    "start": "2232599",
    "end": "2238839"
  },
  {
    "text": "core to the product that you're building vers a nice to have custom piece of software that they just want to write",
    "start": "2238839",
    "end": "2244319"
  },
  {
    "text": "because they find it interesting so so putting all of this together here is definitely going to get",
    "start": "2244319",
    "end": "2249520"
  },
  {
    "text": "you into the the millions of user range right multi-az again being a foundational component of scalability",
    "start": "2249520",
    "end": "2255119"
  },
  {
    "text": "and high availability inside of AWS uh using something like elastic load balancing between tiers and today inside",
    "start": "2255119",
    "end": "2262200"
  },
  {
    "text": "of a VPC you can actually structure elbs internally between your applications uh making use of",
    "start": "2262200",
    "end": "2267920"
  },
  {
    "text": "autoscaling again when you're ready to make use of autoscaling not right away from day one but kind of growing into it",
    "start": "2267920",
    "end": "2273119"
  },
  {
    "text": "once you've made sure that your application tiers are capable of having instances brought up and brought down",
    "start": "2273119",
    "end": "2278599"
  },
  {
    "text": "without negatively impacting your application uh think about a service oriented architecture right if you have a very monolithic application that is",
    "start": "2278599",
    "end": "2285599"
  },
  {
    "text": "performing all of the actions that your application or your website could perform that usually means you might",
    "start": "2285599",
    "end": "2291200"
  },
  {
    "text": "have too much bottled into that one app and it might make sense to start to split those things out independent tiers think about uh you know serving",
    "start": "2291200",
    "end": "2298440"
  },
  {
    "text": "your content smartly um again if you're not using a CDN today this is really a no-brainer to reducing load on your",
    "start": "2298440",
    "end": "2304400"
  },
  {
    "text": "infrastructure while increasing the performance for your end users um and I've seen cdns pay for themselves in",
    "start": "2304400",
    "end": "2311040"
  },
  {
    "text": "terms of reducing load off of your your end infrastructure as well as increasing",
    "start": "2311040",
    "end": "2317240"
  },
  {
    "text": "the uh you know Viewpoint that customers have about your websites and applications because they're that much",
    "start": "2317240",
    "end": "2322839"
  },
  {
    "text": "more performant uh move caching off of your database um I'm very surprised when I still see people do query caching",
    "start": "2322839",
    "end": "2328520"
  },
  {
    "text": "local on a database this hasn't been a good idea for a very long time it's still not a good idea so make sure you",
    "start": "2328520",
    "end": "2334000"
  },
  {
    "text": "move that off of your database engines and then lastly again moving State off of tiers that auto scale I didn't touch",
    "start": "2334000",
    "end": "2340200"
  },
  {
    "text": "on this too much before but with auto scaling again you can scale up and increase instances and that's great but",
    "start": "2340200",
    "end": "2345880"
  },
  {
    "text": "when you scale down which is something that you definitely want to do right to to match that capacity line to your",
    "start": "2345880",
    "end": "2350960"
  },
  {
    "text": "utilization or to your actual application needs you're actually turning off infrastructure and so if you",
    "start": "2350960",
    "end": "2356560"
  },
  {
    "text": "turn off infrastructure that has important data on it you're probably going to have a bad day so make sure that you try to avoid that wherever",
    "start": "2356560",
    "end": "2362720"
  },
  {
    "text": "possible Again by storing the state in someplace that is not going to have that potential for loss",
    "start": "2362720",
    "end": "2369359"
  },
  {
    "text": "uh so here again another iteration on top of our infrastructure in this case we're just looking at a single",
    "start": "2370280",
    "end": "2376400"
  },
  {
    "text": "availability Zone view because it's too much to fit into this one slide here what we see is uh We've implemented",
    "start": "2376400",
    "end": "2382599"
  },
  {
    "text": "autoscaling in a number of different places uh around our web tier around potentially a worker tier as part of an",
    "start": "2382599",
    "end": "2388160"
  },
  {
    "text": "internal service that we have around some other internal application that we might have we're making use still of uh",
    "start": "2388160",
    "end": "2395520"
  },
  {
    "text": "RDS um with our multi-az Master node our read replicas we're using elasticache",
    "start": "2395520",
    "end": "2402079"
  },
  {
    "text": "and potentially Dynamo DB inside of this infrastructure moving our static content to S3 serving via cloudfront uh again",
    "start": "2402079",
    "end": "2409880"
  },
  {
    "text": "serving the full site through cloudfront as well and then maybe because we send emails from our application we've made",
    "start": "2409880",
    "end": "2415720"
  },
  {
    "text": "use of Amazon SCS which is an email service again building out these independent Services first managing them",
    "start": "2415720",
    "end": "2421800"
  },
  {
    "text": "ourselves on our our web application tier so what are the kind of the next",
    "start": "2421800",
    "end": "2426839"
  },
  {
    "text": "big steps the next big things that you might run into well depending on the database that you go with one of the",
    "start": "2426839",
    "end": "2432839"
  },
  {
    "text": "things that you could end up is kind of a a point where you're actually starting to break relational databases again I",
    "start": "2432839",
    "end": "2439280"
  },
  {
    "text": "think Aurora really kind of changes this this conversation and this Viewpoint um but if you're using another uh",
    "start": "2439280",
    "end": "2446520"
  },
  {
    "text": "relational database engine you might start to run into scaling issues around right contention around you know the",
    "start": "2446520",
    "end": "2452599"
  },
  {
    "text": "amount of read capacity that you have available so there are a number of different ways that you can solve it uh",
    "start": "2452599",
    "end": "2457800"
  },
  {
    "text": "Federation sharding and then looking to move actually some of that functionality to a non-relational database so talking",
    "start": "2457800",
    "end": "2463880"
  },
  {
    "text": "about Federation this is really straight forward this is the idea of moving some functionality from your application from",
    "start": "2463880",
    "end": "2469280"
  },
  {
    "text": "this one database into independent databases so in the example here uh we've got different databases for forums",
    "start": "2469280",
    "end": "2475480"
  },
  {
    "text": "users and for our products maybe this is an e-commerce website where we allow people to post reviews and so you know",
    "start": "2475480",
    "end": "2481920"
  },
  {
    "text": "typically we're not going to be merging that data together for any reason and so it's very easy for us to take that data and break get out into different",
    "start": "2481920",
    "end": "2488000"
  },
  {
    "text": "databases and allow our application to smartly join it for us um again really really straightforward and and kind of",
    "start": "2488000",
    "end": "2494160"
  },
  {
    "text": "an easy scaling option to do but at some point you end up running into the same bottleneck that you brought you into",
    "start": "2494160",
    "end": "2499200"
  },
  {
    "text": "this in the first place so if your Forums on your website are super super hot and super super busy at some point",
    "start": "2499200",
    "end": "2504680"
  },
  {
    "text": "you start to run into again the you're at the biggest box that you have kind of a situation in which case sharding starts",
    "start": "2504680",
    "end": "2511200"
  },
  {
    "text": "to become a viable option uh Shing definitely can be a bit of work depending on how you end up trying to",
    "start": "2511200",
    "end": "2517240"
  },
  {
    "text": "think about charting but a pattern that we see in a lot of places uh Instagram Pinterest uh Tumblr flicker Etsy a",
    "start": "2517240",
    "end": "2524800"
  },
  {
    "text": "number of websites out there have talked about their their heavy use of sharding of their infrastructure using relational",
    "start": "2524800",
    "end": "2530560"
  },
  {
    "text": "databases so these are defined patterns but they're defined patterns that have been very unique to each of those",
    "start": "2530560",
    "end": "2536079"
  },
  {
    "text": "companies in this case we're sh you an example where we have one set of information and this information is",
    "start": "2536079",
    "end": "2541160"
  },
  {
    "text": "broken up to live across these different servers now what this requires is some sort of kind of Master lookup database",
    "start": "2541160",
    "end": "2548079"
  },
  {
    "text": "that's telling us that you know user 2345 lives on Shard a and user 2346",
    "start": "2548079",
    "end": "2553880"
  },
  {
    "text": "lives on Shard B so a little bit more complexity here in our application our architecture but what you could do",
    "start": "2553880",
    "end": "2559280"
  },
  {
    "text": "ideally here is just continue to add shards and scale horizontally via those shards uh pretty pretty far out actually",
    "start": "2559280",
    "end": "2566040"
  },
  {
    "text": "and so again a number of really big websites this day these days follow this sharding methodology and it's been very",
    "start": "2566040",
    "end": "2571200"
  },
  {
    "text": "successful for them all and then lastly here the idea",
    "start": "2571200",
    "end": "2576559"
  },
  {
    "text": "that at some point it may make sense to shift some of this functionality to non-relational database again maybe you're dealing with massive size maybe",
    "start": "2576559",
    "end": "2582920"
  },
  {
    "text": "you're dealing with a very high velocity of change in that data a very high request rate of it potentially and so",
    "start": "2582920",
    "end": "2588240"
  },
  {
    "text": "something uh in the nosql range might make more sense you know some examples here of things like leaderboards or",
    "start": "2588240",
    "end": "2594119"
  },
  {
    "text": "scoring where they're rapidly updated and rapidly viewed um you know rapid ingest of things like clickstream data",
    "start": "2594119",
    "end": "2600599"
  },
  {
    "text": "Maybe we're Gathering records from our users very very quickly from a mobile application right where are we going to store that data um Dynamo DB or other",
    "start": "2600599",
    "end": "2607640"
  },
  {
    "text": "non-relational databases make a lot of sense here uh temporary data needs so for instance cart data so Dynamo DB came",
    "start": "2607640",
    "end": "2613960"
  },
  {
    "text": "out of uh a database at amazon.com called Dynamo which was originally used for cart data among other things so uh",
    "start": "2613960",
    "end": "2621480"
  },
  {
    "text": "something that has some direct lineage there to how it's used inside of amazon.com um the concept of of hot",
    "start": "2621480",
    "end": "2627160"
  },
  {
    "text": "tables or you know really hot data inside your database sometimes you can kind of move a single table space to a",
    "start": "2627160",
    "end": "2632680"
  },
  {
    "text": "non-relational database and then lastly things like metadata lookup tables um which there are actually a number of",
    "start": "2632680",
    "end": "2638240"
  },
  {
    "text": "really great case studies Amazon um Cloud Drive makes use of Dynamo DB for",
    "start": "2638240",
    "end": "2644839"
  },
  {
    "text": "metadata information so a quick review uh multi a your infrastructure",
    "start": "2644839",
    "end": "2652079"
  },
  {
    "text": "again this is a core basic component of building infrastructure on top of AWS and applications U make use of",
    "start": "2652079",
    "end": "2657839"
  },
  {
    "text": "self-scaling and Mana Services wherever you can again it's going to reduce the burden upon you and your organization",
    "start": "2657839",
    "end": "2663920"
  },
  {
    "text": "and it makes sense up to the very far extremes of scaling uh build and redundancy at every level",
    "start": "2663920",
    "end": "2669680"
  },
  {
    "text": "right if you are going to manage something yourself make sure that you're avoiding single points of failure make sure that you're making use of things",
    "start": "2669680",
    "end": "2675280"
  },
  {
    "text": "like like Auto scaling and uh other services that support that again start",
    "start": "2675280",
    "end": "2680359"
  },
  {
    "text": "SQL I really do encourage this for many organizations really spend the time to think about how your data is structured",
    "start": "2680359",
    "end": "2685960"
  },
  {
    "text": "to be real about your data growth and uh trajectory and what might happen there U",
    "start": "2685960",
    "end": "2691079"
  },
  {
    "text": "make use of caching both inside your architecture and infrastructure as well as outside via things like CDN again",
    "start": "2691079",
    "end": "2697319"
  },
  {
    "text": "really can't understate the uh the power of CDN services and then lastly don't do this by hand right use automation tools",
    "start": "2697319",
    "end": "2704000"
  },
  {
    "text": "wherever you can and as much as possible uh make sure that you have good metrics and monitoring in place you",
    "start": "2704000",
    "end": "2710119"
  },
  {
    "text": "really can't do much without good metrics and monitoring uh look at doing SOA inside your infrastructure splitting",
    "start": "2710119",
    "end": "2716240"
  },
  {
    "text": "up those various tiers that you might have use Autos scaling when you're ready for it right don't just start right",
    "start": "2716240",
    "end": "2721880"
  },
  {
    "text": "right away day one you may not understand some of the implications of it and you may not have all the Tooling in place to have it work really well for",
    "start": "2721880",
    "end": "2727640"
  },
  {
    "text": "you again don't reinvent the wheel and then lastly you know move to no SQL if and when it makes sense for your",
    "start": "2727640",
    "end": "2733240"
  },
  {
    "text": "application again if you start with SQL based databases and then putting this together",
    "start": "2733240",
    "end": "2738760"
  },
  {
    "text": "is really what's going to get you to that that 10 million user Mark and above so above this this is kind of my",
    "start": "2738760",
    "end": "2745119"
  },
  {
    "text": "one more thing moment in the slide deck is uh that again getting over this is just going to involve more iterations on",
    "start": "2745119",
    "end": "2751760"
  },
  {
    "text": "top of it companies that I've seen getting over this Mark they're really not going too differently Beyond this except for just continuing iteration on",
    "start": "2751760",
    "end": "2757720"
  },
  {
    "text": "top of it um more fine-tuning of your applications more SOA of features and",
    "start": "2757720",
    "end": "2763000"
  },
  {
    "text": "components inside your application going potentially from multi-az to multi- region do not encourage companies",
    "start": "2763000",
    "end": "2768960"
  },
  {
    "text": "looking at going multi- region in the beginning it's something that you really want to grow into when it absolutely makes sense for you uh this is where you",
    "start": "2768960",
    "end": "2775040"
  },
  {
    "text": "might actually need to start Reinventing the wheel and building custom components um and then again lastly deep deep deep",
    "start": "2775040",
    "end": "2781359"
  },
  {
    "text": "analysis of your applications and your infrastructure really deep profiling of the services that you're building the code that you're writing and so so forth",
    "start": "2781359",
    "end": "2788520"
  },
  {
    "text": "so next steps uh lots of documentation lots of things that you can read obviously lots of awesome talks this",
    "start": "2788520",
    "end": "2793920"
  },
  {
    "text": "week that you can go to um feel free to go down in the Expo Center and hit up some of my counterparts in the solutions",
    "start": "2793920",
    "end": "2799480"
  },
  {
    "text": "architecture team uh down at the booth um and also you know start playing with",
    "start": "2799480",
    "end": "2804760"
  },
  {
    "text": "AWS right we have the free tier which enables many different services for you uh also ask for help the the forums lots",
    "start": "2804760",
    "end": "2811720"
  },
  {
    "text": "of awesome questions lots of awesome conversations happen in the forums every day you make that a part of your uh your",
    "start": "2811720",
    "end": "2817680"
  },
  {
    "text": "life when you're stumbling to figure something out or when you're trying to figure out a solution to a problem uh",
    "start": "2817680",
    "end": "2823000"
  },
  {
    "text": "reach out to your account manager Solutions architect support whatever it might be and uh we're definitely here to",
    "start": "2823000",
    "end": "2828480"
  },
  {
    "text": "help so uh thank you for listening slightly over on time here uh I'll be taking questions out in the hallway",
    "start": "2828480",
    "end": "2834839"
  },
  {
    "text": "actually after the session because then we have to open up for the next one but uh thank you for your time thanks for",
    "start": "2834839",
    "end": "2839960"
  },
  {
    "text": "coming to this session and enjoy the rest of your time here at reinvent",
    "start": "2839960",
    "end": "2845000"
  }
]