[
  {
    "start": "0",
    "end": "344000"
  },
  {
    "text": "good morning everyone got a full room this is great i love",
    "start": "2480",
    "end": "7759"
  },
  {
    "text": "this my name is mylon thompson bucovec i'm a director in amazon web services",
    "start": "7759",
    "end": "13599"
  },
  {
    "text": "i'm here with andrew goldman vp of product engineering for fluid inc and andrew kerr who's a principal",
    "start": "13599",
    "end": "19359"
  },
  {
    "text": "engineer with fluid inc and we're here to talk to you about how to scale your application's work",
    "start": "19359",
    "end": "25439"
  },
  {
    "text": "in the cloud using amazon's simple workflow how many people went to the keynote this",
    "start": "25439",
    "end": "30560"
  },
  {
    "text": "morning it's great it's a fun keynote how many people heard",
    "start": "30560",
    "end": "36559"
  },
  {
    "text": "or saw the video presentation that the nasa folks did",
    "start": "36559",
    "end": "41680"
  },
  {
    "text": "all right how many people have heard about simple workflow before the keynote",
    "start": "41680",
    "end": "48800"
  },
  {
    "text": "all right i love this how many people have tried simple workflow okay so fewer people have tried some",
    "start": "48960",
    "end": "56640"
  },
  {
    "text": "folks have which is great to see what we're going to talk about in this presentation is the type of work that",
    "start": "56640",
    "end": "62320"
  },
  {
    "text": "amazon simple workflow is useful for helping you build applications that scan the cloud the type of applications that our",
    "start": "62320",
    "end": "69439"
  },
  {
    "text": "customers do today we have a customer on stage with us fluid who will talk about their experiences with amazon simple workflow",
    "start": "69439",
    "end": "76320"
  },
  {
    "text": "and we'll help you get started with this new service introduced in february 2012.",
    "start": "76320",
    "end": "84159"
  },
  {
    "text": "let's start first by talking about the work so applications do a lot of different types of work i have a subset of all the",
    "start": "84159",
    "end": "90720"
  },
  {
    "text": "different types of work your application could do obviously it's a very small subset but these are common types of jobs or work",
    "start": "90720",
    "end": "97600"
  },
  {
    "text": "that's done in the cloud today by our customers they range from scheduled processes like taking a",
    "start": "97600",
    "end": "103759"
  },
  {
    "text": "backup at a p a specific point in time to fulfillment of orders through retail",
    "start": "103759",
    "end": "108960"
  },
  {
    "text": "systems to the type of media or data processing that you heard about with the nasa",
    "start": "108960",
    "end": "114399"
  },
  {
    "text": "video this morning in the keynote and you'll hear about later with fluid to infrastructure provisioning uh one",
    "start": "114399",
    "end": "121119"
  },
  {
    "text": "thing that a lot of folks don't know about amazon simple workflow is that amazon the company has been using and",
    "start": "121119",
    "end": "128080"
  },
  {
    "text": "building workflow services for years now and the reason why we've been building it is because when we",
    "start": "128080",
    "end": "133920"
  },
  {
    "text": "build amazon services i'm talking amazon.com services i'm talking kindle i'm talking",
    "start": "133920",
    "end": "138959"
  },
  {
    "text": "amazon web services we need the type of help that simple",
    "start": "138959",
    "end": "144239"
  },
  {
    "text": "workflow gives to any application we need to coordinate work and one example of this is infrastructure provisioning",
    "start": "144239",
    "end": "150879"
  },
  {
    "text": "we have an application internal to amazon that uses amazon's simple workflow to",
    "start": "150879",
    "end": "156640"
  },
  {
    "text": "lay down the os and all the required software onto a new amazon server",
    "start": "156640",
    "end": "161920"
  },
  {
    "text": "before it joins the amazon fleet and that is the entire amazon fleet so every single server that's put out",
    "start": "161920",
    "end": "168720"
  },
  {
    "text": "there for any amazon property is provisioned in a workflow using amazon's simple workflow so when",
    "start": "168720",
    "end": "175680"
  },
  {
    "text": "we talk about work we're really talking about the type of work that you and your applications do as well as the applications that we",
    "start": "175680",
    "end": "182319"
  },
  {
    "text": "build within amazon and what we do and as i said while amazon simple workflow was launched in",
    "start": "182319",
    "end": "188080"
  },
  {
    "text": "february 2012 earlier this year it's really been used for a number of years over five",
    "start": "188080",
    "end": "194319"
  },
  {
    "text": "internal to amazon to do the same sorts of things that we let our customers do today on",
    "start": "194319",
    "end": "199680"
  },
  {
    "text": "aws what's very interesting about what amazon simple workflow does",
    "start": "199680",
    "end": "204799"
  },
  {
    "text": "is it helps you coordinate that work across network boundaries and what's very interesting",
    "start": "204799",
    "end": "210560"
  },
  {
    "text": "about the service is that it allows you to run your application in your on-premise data center or",
    "start": "210560",
    "end": "218879"
  },
  {
    "text": "aws or a combination of the two and we'll talk about both situations",
    "start": "218879",
    "end": "224400"
  },
  {
    "text": "today fluid will talk about how they're using amazon simple workflow to coordinate work",
    "start": "224400",
    "end": "229519"
  },
  {
    "text": "within an aws only environment and when nasa goes and to a deep drill down into their",
    "start": "229519",
    "end": "235840"
  },
  {
    "text": "application at 4 30 later on today they'll talk about how those images are coming down",
    "start": "235840",
    "end": "241519"
  },
  {
    "text": "from the mars curiosity project into the aws data center for processing",
    "start": "241519",
    "end": "247280"
  },
  {
    "text": "and back over to their corporate data centers to be loaded up onto their website and all of that work",
    "start": "247280",
    "end": "254000"
  },
  {
    "text": "is coordinated by amazon simple workflow so the key thing to think about when you think about",
    "start": "254000",
    "end": "260160"
  },
  {
    "text": "amazon's simple workflow is the work is there you guys know what the work is it's in your applications",
    "start": "260160",
    "end": "265440"
  },
  {
    "text": "we're not trying to change the work what we're trying to do with simple workflow is coordinate that work across different",
    "start": "265440",
    "end": "271280"
  },
  {
    "text": "data centers if you need it across multiple machines so you get the scale of concurrency",
    "start": "271280",
    "end": "277040"
  },
  {
    "text": "and allow you to be able to manage long-running processes as well as short",
    "start": "277040",
    "end": "282479"
  },
  {
    "text": "running processes so we have plenty of customers who run workflows that take a minute or less",
    "start": "282479",
    "end": "287840"
  },
  {
    "text": "we have a lot of other customers who have workflows that run for hours and it's hard and it's complex to write",
    "start": "287840",
    "end": "294800"
  },
  {
    "text": "the code that tracks centrally the state of those workflows that are running across multiple",
    "start": "294800",
    "end": "300560"
  },
  {
    "text": "machines across lots of time that's what simple workflow gives you and it also gives you the ability to",
    "start": "300560",
    "end": "307120"
  },
  {
    "text": "control how you want your workflow to be orchestrated by events and those events can be",
    "start": "307120",
    "end": "313759"
  },
  {
    "text": "triggered by software for example your application can say hey i want to start my workflow now or",
    "start": "313759",
    "end": "319360"
  },
  {
    "text": "it can be triggered by people and by people i mean somebody clicking a button on your website",
    "start": "319360",
    "end": "325039"
  },
  {
    "text": "we have a customer right now who puts the entire registration process into a",
    "start": "325039",
    "end": "330560"
  },
  {
    "text": "workflow and that registration process is kicked off by what we call human action",
    "start": "330560",
    "end": "335759"
  },
  {
    "text": "of a user clicking a button create an account",
    "start": "335759",
    "end": "340639"
  },
  {
    "text": "so let's talk about some characteristics about an application that simple workflow might be especially",
    "start": "341759",
    "end": "347280"
  },
  {
    "start": "344000",
    "end": "344000"
  },
  {
    "text": "useful for the key thing that i think",
    "start": "347280",
    "end": "353440"
  },
  {
    "text": "our developers think about is does your application have different paths or branches of",
    "start": "353440",
    "end": "360319"
  },
  {
    "text": "logic and i'll give you an example if you have that scheduled process i said before a backup",
    "start": "360319",
    "end": "366639"
  },
  {
    "text": "if that backup succeeds your application might want to do a set of things it",
    "start": "366639",
    "end": "372160"
  },
  {
    "text": "might want to take the successful snapshot and move it onto another machine if your application fails",
    "start": "372160",
    "end": "378479"
  },
  {
    "text": "what sorry your backup fails what your application might want to do is send an email to your application",
    "start": "378479",
    "end": "384479"
  },
  {
    "text": "operators it might want to retry that particular job two or three times and then give up",
    "start": "384479",
    "end": "389919"
  },
  {
    "text": "it might go through a series of branches and logic that you want to do as a response to the",
    "start": "389919",
    "end": "396400"
  },
  {
    "text": "success or failure of your application and what workflow a simple workflow lets you do is coordinate",
    "start": "396400",
    "end": "402080"
  },
  {
    "text": "all those different branches of logic whether it's reacting to failure conditions quickly or if it's reacting to success",
    "start": "402080",
    "end": "409599"
  },
  {
    "text": "conditions and moving on to a next step in your process i think what is really",
    "start": "409599",
    "end": "415360"
  },
  {
    "text": "interesting about civil workflow is that most of our customers get excited about workflow because it",
    "start": "415360",
    "end": "421039"
  },
  {
    "text": "helps them do concurrent work it helps them take a process that they want to execute",
    "start": "421039",
    "end": "427039"
  },
  {
    "text": "and manage it across many different machines and what they find when they come to the service and they get that concurrency",
    "start": "427039",
    "end": "433759"
  },
  {
    "text": "and they get that improved latency and skill is that simple workflow gives you more than that it lets you track the history",
    "start": "433759",
    "end": "440560"
  },
  {
    "text": "of what work happened so you have the ability to not just track the state of the work that's being",
    "start": "440560",
    "end": "446720"
  },
  {
    "text": "done across multiple machines but you can also audit and find out details about failure and success",
    "start": "446720",
    "end": "452400"
  },
  {
    "text": "conditions as well as this ability to automatically control or orchestrate all those logical",
    "start": "452400",
    "end": "458639"
  },
  {
    "text": "paths that i talked about what that ends up meaning is that many different applications",
    "start": "458639",
    "end": "464960"
  },
  {
    "text": "right now are coordinated or a workflow can be coordinated in a workflow and you",
    "start": "464960",
    "end": "471199"
  },
  {
    "text": "know i list i list a bunch of different types of applications what's interesting is that many of these types of",
    "start": "471199",
    "end": "476240"
  },
  {
    "text": "applications are actually within our in use in amazon the company today being used",
    "start": "476240",
    "end": "482560"
  },
  {
    "text": "by some or being coordinated by simple workflow as well as by our aws customer base",
    "start": "482560",
    "end": "489520"
  },
  {
    "text": "in all of these application types the premise of amazon's simple workflow is basically",
    "start": "490000",
    "end": "496479"
  },
  {
    "text": "the same you have a few central components or or concepts that i wanted to go over",
    "start": "496479",
    "end": "503120"
  },
  {
    "start": "500000",
    "end": "500000"
  },
  {
    "text": "one of them is the fact that we incur we require that when you are developing your application",
    "start": "503120",
    "end": "509440"
  },
  {
    "text": "you decouple the work from the logic or the um the",
    "start": "509440",
    "end": "515518"
  },
  {
    "text": "coordination of that work so as you can see in my example let's just go back to my backup example",
    "start": "515519",
    "end": "521279"
  },
  {
    "text": "i have a workflow worker it's my hamster drive in the car the workflow worker is going to actually",
    "start": "521279",
    "end": "527040"
  },
  {
    "text": "be giving have all the logic around what to do for the backup it's going to have",
    "start": "527040",
    "end": "532320"
  },
  {
    "text": "how the backup should respond to both success conditions as well as failure conditions",
    "start": "532320",
    "end": "537440"
  },
  {
    "text": "and all that orchestration or that sequencing logic is really going to live within that one workflow worker",
    "start": "537440",
    "end": "543680"
  },
  {
    "text": "and what the workflow worker is going to do is say i'm going to go and i need to go start some work it's",
    "start": "543680",
    "end": "549120"
  },
  {
    "text": "going to tell amazon simple workflow amazon's simple workflow is going to create it it keeps a task list for the",
    "start": "549120",
    "end": "554320"
  },
  {
    "text": "work that needs to get done for that application amazon simple workflow is going to",
    "start": "554320",
    "end": "559360"
  },
  {
    "text": "assign the work to my activity worker let's say that the need that the",
    "start": "559360",
    "end": "566320"
  },
  {
    "text": "need for work goes up at that point the application will add some more resources and amazon",
    "start": "566320",
    "end": "573279"
  },
  {
    "text": "simple workflow will assign the additional work to those new resources",
    "start": "573279",
    "end": "578640"
  },
  {
    "text": "and now you're into heavy lifting for this particular work now what the workflow worker can do",
    "start": "578640",
    "end": "584560"
  },
  {
    "text": "at that point is say okay once that work is done let's say the backup has been taken",
    "start": "584560",
    "end": "590240"
  },
  {
    "text": "there can be another type of work and that other type of work can be taking that backup",
    "start": "590240",
    "end": "595519"
  },
  {
    "text": "and saving it on to a remote server it can be logging it can be anything you want the key",
    "start": "595519",
    "end": "600959"
  },
  {
    "text": "thing to note is that it's another type of work that's being coordinated by amazon's simple workflow in that same",
    "start": "600959",
    "end": "607680"
  },
  {
    "text": "task list you can have as many different types of work as you want so after you",
    "start": "607680",
    "end": "614399"
  },
  {
    "text": "get done with your your archival of the successful backup you can take the um",
    "start": "614399",
    "end": "622640"
  },
  {
    "text": "the logging information for all of the backup information that you've done across your fleet for that day and",
    "start": "622640",
    "end": "628399"
  },
  {
    "text": "write a report these are all just types of work that are associated uh that are in your application",
    "start": "628399",
    "end": "634160"
  },
  {
    "text": "coordinated by amazon simple workflow and managed centrally in that task list again the workflow",
    "start": "634160",
    "end": "640320"
  },
  {
    "text": "worker is your part of your application we call it a decider in amazon simple workflow terms and it",
    "start": "640320",
    "end": "645920"
  },
  {
    "text": "is going to have the logic for the sequencing the failure handling and all the different",
    "start": "645920",
    "end": "652000"
  },
  {
    "text": "orchestration that you want your app that you want amazon's simple workflow to do for your application",
    "start": "652000",
    "end": "661680"
  },
  {
    "start": "660000",
    "end": "660000"
  },
  {
    "text": "what's also important about amazon's simple workflow is this idea about going across different networks fluid will talk to",
    "start": "661680",
    "end": "667839"
  },
  {
    "text": "you about how amazon's simple workflow which is an aws service coordinates an aws only",
    "start": "667839",
    "end": "674000"
  },
  {
    "text": "environment but you can also coordinate work wholly within your corporate data center",
    "start": "674000",
    "end": "680079"
  },
  {
    "text": "so this is uh we have a lot of customers who like to try things they they adopt they take one application out",
    "start": "680079",
    "end": "686959"
  },
  {
    "text": "of you know a portfolio of a dozen and they try a new technology within aws",
    "start": "686959",
    "end": "693120"
  },
  {
    "text": "in this case what you could do is you could take something that's currently in your corporate data center and try",
    "start": "693120",
    "end": "698640"
  },
  {
    "text": "orchestrating the work using amazon's simple workflow uh you can do the same thing if you already",
    "start": "698640",
    "end": "704079"
  },
  {
    "text": "have your application running in aws or you can try to do a more complex coordination",
    "start": "704079",
    "end": "709839"
  },
  {
    "text": "across both the corporate data center as well as the aws cloud like nasa jpl did",
    "start": "709839",
    "end": "717120"
  },
  {
    "text": "so the key thing that we think of when we think about amazon's simple workflow",
    "start": "717120",
    "end": "722560"
  },
  {
    "start": "718000",
    "end": "718000"
  },
  {
    "text": "is that we want to build a service that gives you freedom and you know i've touched on",
    "start": "722560",
    "end": "728560"
  },
  {
    "text": "this a little bit the key thing for us is that we want you to be able to have your application service be running in",
    "start": "728560",
    "end": "734959"
  },
  {
    "text": "wherever you want it to run can run in aws it can run it in another cloud it can run it in your",
    "start": "734959",
    "end": "740560"
  },
  {
    "text": "corporate data center as long as it's being orchestrated by aws you can be location independent",
    "start": "740560",
    "end": "747200"
  },
  {
    "text": "we want you to be able to build your workflow aware application in any programming language that you",
    "start": "747200",
    "end": "753920"
  },
  {
    "text": "want now we have a client framework called aws flow framework it's a java client",
    "start": "753920",
    "end": "761120"
  },
  {
    "text": "framework that makes it easier to write that decider that workflow logic in your",
    "start": "761120",
    "end": "766320"
  },
  {
    "text": "application but if you're using pythonjavascript.net you know name your preferred language",
    "start": "766320",
    "end": "773120"
  },
  {
    "text": "you can write directly to the uh simple workflow apis and do essentially the same",
    "start": "773120",
    "end": "778240"
  },
  {
    "text": "thing so can i get a quick show of hands how many people in the room are java right application applications in",
    "start": "778240",
    "end": "784839"
  },
  {
    "text": "java okay how many people write their apps in ruby",
    "start": "784839",
    "end": "791120"
  },
  {
    "text": "okay and python okay.net all right",
    "start": "792000",
    "end": "799360"
  },
  {
    "text": "so we have a crowd here of just about uh any of the major",
    "start": "799360",
    "end": "805440"
  },
  {
    "text": "programming languages and the key thing that we want to say is that you don't have to change what language you write your application in you can use amazon's",
    "start": "805440",
    "end": "812079"
  },
  {
    "text": "simple workflow to coordinate the work in your application uh regardless so the other thing that we",
    "start": "812079",
    "end": "818320"
  },
  {
    "text": "want to make clear is that we're not asking folks just to",
    "start": "818320",
    "end": "823440"
  },
  {
    "text": "model their language model their application in any specific hardened way what we're saying is we",
    "start": "824720",
    "end": "830560"
  },
  {
    "text": "want you to decouple the work from the logic around how the",
    "start": "830560",
    "end": "835680"
  },
  {
    "text": "work gets done but apart from that it's your application so how you write your work",
    "start": "835680",
    "end": "840800"
  },
  {
    "text": "is up to you we're just asking you to decouple between the work and the orchestration",
    "start": "840800",
    "end": "846160"
  },
  {
    "text": "and beyond that the architecture of your app is really owned by you and you can set up whatever",
    "start": "846160",
    "end": "851680"
  },
  {
    "text": "architecture you choose and we'll just coordinate the work that's in that architecture so",
    "start": "851680",
    "end": "858639"
  },
  {
    "text": "i'd like to introduce again andrew and andrew from fluid and they're going to talk a little bit about how they adopt an amazon simple",
    "start": "858639",
    "end": "865680"
  },
  {
    "text": "workflow for their particular application thank you",
    "start": "865680",
    "end": "871360"
  },
  {
    "text": "so fluid has been in business as a digital agency since 1999. over the years we've",
    "start": "871360",
    "end": "877519"
  },
  {
    "start": "872000",
    "end": "872000"
  },
  {
    "text": "developed specialization in creating applications for e-commerce companies that are",
    "start": "877519",
    "end": "883199"
  },
  {
    "text": "especially fun and intuitive to use about five years ago",
    "start": "883199",
    "end": "888480"
  },
  {
    "text": "we realized a recurring need for visual merchandising solutions so we created the fluid retail suite of",
    "start": "888480",
    "end": "895920"
  },
  {
    "text": "software as a service products the one we'll be focusing on today primarily is fluid experience",
    "start": "895920",
    "end": "903760"
  },
  {
    "text": "which is uh interactive online product visualization we also",
    "start": "903760",
    "end": "909920"
  },
  {
    "text": "have the fluid configure product which is an online product configuration platform",
    "start": "909920",
    "end": "915760"
  },
  {
    "text": "fluid's focus throughout its existence and certainly today has been on creating usable e-commerce",
    "start": "915760",
    "end": "922720"
  },
  {
    "text": "solutions we're not in the business nor do we want to be in the business of creating technical infrastructure",
    "start": "922720",
    "end": "929600"
  },
  {
    "text": "when we're working with e-commerce companies we happily partner with firms like demandware and ibm",
    "start": "929600",
    "end": "935920"
  },
  {
    "text": "and we're delighted to be using the aws suite of technologies and specifically",
    "start": "935920",
    "end": "941519"
  },
  {
    "text": "simple workflow",
    "start": "941519",
    "end": "944320"
  },
  {
    "text": "we'll be focusing in our talk today on the administrative tools associated",
    "start": "947199",
    "end": "953279"
  },
  {
    "text": "with fluid experience we'll take a quick look here",
    "start": "953279",
    "end": "958800"
  },
  {
    "text": "at an example of a fluid experience instance this is on the igloo cooler site",
    "start": "959920",
    "end": "967120"
  },
  {
    "text": "and this image of a cooler here is an example of a fluid experience",
    "start": "967120",
    "end": "973120"
  },
  {
    "text": "component you can see you can zoom in on it",
    "start": "973120",
    "end": "978639"
  },
  {
    "text": "pan around um this zoomed in view that we're looking",
    "start": "978639",
    "end": "984000"
  },
  {
    "text": "at is actually a set of tiled images",
    "start": "984000",
    "end": "989920"
  },
  {
    "text": "like this one so",
    "start": "989920",
    "end": "996880"
  },
  {
    "start": "996000",
    "end": "996000"
  },
  {
    "text": "as we contemplate the work of the fluid experience admin tools we have",
    "start": "996880",
    "end": "1003519"
  },
  {
    "text": "many customers each customer has many products many of the products have many images we",
    "start": "1003519",
    "end": "1010800"
  },
  {
    "text": "quickly have a situation where the fluid experience admin tools are processing many many thousands of images",
    "start": "1010800",
    "end": "1017519"
  },
  {
    "text": "taking high resolutions high resolution source imagery and preparing them for consumption on",
    "start": "1017519",
    "end": "1023120"
  },
  {
    "text": "the web as i was just showing you the processing of images in this way is",
    "start": "1023120",
    "end": "1028160"
  },
  {
    "text": "a highly resource intensive operation need a lot of processor power and a lot of memory to make that",
    "start": "1028160",
    "end": "1034640"
  },
  {
    "text": "happen like everything in all of our businesses it's time sensitive nobody wants to wait for their images to",
    "start": "1034640",
    "end": "1041120"
  },
  {
    "text": "be ready",
    "start": "1041120",
    "end": "1043600"
  },
  {
    "start": "1046000",
    "end": "1046000"
  },
  {
    "text": "before we started using simple workflow",
    "start": "1047360",
    "end": "1053039"
  },
  {
    "text": "things were slow it takes a couple of seconds to process an image",
    "start": "1053039",
    "end": "1058480"
  },
  {
    "text": "to generate either a tile or to scale an image appropriately but as you can see with these",
    "start": "1058480",
    "end": "1064480"
  },
  {
    "text": "calculations once you get to the many many thousands of images that we're dealing with we have delays that were quite large",
    "start": "1064480",
    "end": "1073600"
  },
  {
    "text": "can i see a show of hands have any of you become victims of your own success where the scale of your business creates",
    "start": "1073600",
    "end": "1080480"
  },
  {
    "text": "a real challenge for your operations it's a great problem to have it's all",
    "start": "1080480",
    "end": "1085679"
  },
  {
    "text": "the problem we all want to have but it's it's still a challenge we found that the tipping",
    "start": "1085679",
    "end": "1092559"
  },
  {
    "text": "point for us was when our customers had to wait longer than overnight",
    "start": "1092559",
    "end": "1097600"
  },
  {
    "text": "to get their images generated people were generally tolerant of clicking the",
    "start": "1097600",
    "end": "1103440"
  },
  {
    "text": "button and coming back to work the next morning and having things ready but when the the queue of images grew to",
    "start": "1103440",
    "end": "1109600"
  },
  {
    "text": "the point where they were having to wait multiple days something had to give",
    "start": "1109600",
    "end": "1116080"
  },
  {
    "start": "1117000",
    "end": "1117000"
  },
  {
    "text": "thanks andrew okay so if we dial back to february of this year we had pretty much",
    "start": "1120000",
    "end": "1126000"
  },
  {
    "text": "migrated all of our technology into the aws cloud we're using ec2 s3",
    "start": "1126000",
    "end": "1131440"
  },
  {
    "text": "rds all with great success but we still had this problem of how do we process",
    "start": "1131440",
    "end": "1136640"
  },
  {
    "text": "hundreds of thousands of images efficiently we needed a solution for our customers and we needed something that would allow",
    "start": "1136640",
    "end": "1142559"
  },
  {
    "text": "us to process all these images in a concurrent way around february of this year we got one",
    "start": "1142559",
    "end": "1149760"
  },
  {
    "text": "of those nice emails that you get from aws every couple of weeks announcing a brand new technology this one happened to be simple workflow",
    "start": "1149760",
    "end": "1156000"
  },
  {
    "text": "and it came along at a perfect time for us just when we were trying to solve this infrastructure problem we didn't want to",
    "start": "1156000",
    "end": "1161840"
  },
  {
    "text": "have to spend months writing infrastructure how many of you have spent",
    "start": "1161840",
    "end": "1167440"
  },
  {
    "text": "ages trying to write infrastructure for your products that you don't really want to do right so swf came along at a perfect",
    "start": "1167440",
    "end": "1175840"
  },
  {
    "text": "time for us all we needed to do was figure out how to refactor our code into",
    "start": "1175840",
    "end": "1181440"
  },
  {
    "text": "the concept of activity workers and workflow workers remember in mayland slides the weightlifting",
    "start": "1181440",
    "end": "1186799"
  },
  {
    "text": "hamster and the hamster driving a race car in our case that the weightlifting hamster",
    "start": "1186799",
    "end": "1193039"
  },
  {
    "text": "is the activity worker that does the actual image processing the workflow worker is the uh the uh the one that just makes",
    "start": "1193039",
    "end": "1200960"
  },
  {
    "text": "the decisions when it's time to scale an image when it's time to report back to our admin server that the images has",
    "start": "1200960",
    "end": "1207679"
  },
  {
    "text": "been processed we also refactor our infrastructure into two types of servers",
    "start": "1207679",
    "end": "1213679"
  },
  {
    "text": "the admin master server which is our custom customer facing server where customers go to launch batch image processing jobs get",
    "start": "1213679",
    "end": "1221280"
  },
  {
    "text": "progress on how they're doing when they've completed reports of how the job went and so on",
    "start": "1221280",
    "end": "1226720"
  },
  {
    "text": "the new type of server we created was a workflow server the workflow server is the one that actually runs the workflows and the activities",
    "start": "1226720",
    "end": "1234080"
  },
  {
    "text": "using simple workflow simple workflow ties this all together you know figuring out which component",
    "start": "1234080",
    "end": "1240880"
  },
  {
    "text": "needs to do what it does it all for us thank you",
    "start": "1240880",
    "end": "1249840"
  },
  {
    "text": "so now we've laid out the challenge that we face we need to speed things up we need to generate images more quickly",
    "start": "1252480",
    "end": "1258320"
  },
  {
    "text": "and in a more scalable way on the the coming slides we'll take a look at the server and service topology",
    "start": "1258320",
    "end": "1266000"
  },
  {
    "text": "for how we we built up the infrastructure using aws components including simple workflow to do that",
    "start": "1266000",
    "end": "1274240"
  },
  {
    "text": "first on the right side of this diagram you see the admin master",
    "start": "1274799",
    "end": "1280559"
  },
  {
    "start": "1277000",
    "end": "1277000"
  },
  {
    "text": "server this is an ec2 instance an m1.extra large instance",
    "start": "1280559",
    "end": "1286720"
  },
  {
    "text": "our customers interact with the admin master server to basically say that they want to",
    "start": "1286720",
    "end": "1292559"
  },
  {
    "text": "generate their images they're ready to create the runtime imagery by doing that we create workflows in",
    "start": "1292559",
    "end": "1299760"
  },
  {
    "text": "simple workflow which then populates the static image task list which says which images need to be",
    "start": "1299760",
    "end": "1306320"
  },
  {
    "text": "resized and by how much next we have the workflow server this is",
    "start": "1306320",
    "end": "1314000"
  },
  {
    "text": "another ec2 instance this time in m1.large",
    "start": "1314000",
    "end": "1319840"
  },
  {
    "text": "the workflows server includes the workflow worker component",
    "start": "1320320",
    "end": "1325440"
  },
  {
    "text": "that you see there the hamster and the racecar sequencing the tasks figuring out what",
    "start": "1325440",
    "end": "1330799"
  },
  {
    "text": "needs to happen when the workflow server also includes the image processing worker",
    "start": "1330799",
    "end": "1337360"
  },
  {
    "text": "which is the activity worker weight lifting hamster doing the actual tasks the image",
    "start": "1337360",
    "end": "1343760"
  },
  {
    "text": "processing worker retrieves its tasks from simple workflow from the task list",
    "start": "1343760",
    "end": "1349919"
  },
  {
    "text": "and executes them because our infrastructure is built on",
    "start": "1349919",
    "end": "1356720"
  },
  {
    "text": "ec2 and aws we're able to take advantage of the auto scaling capability offered",
    "start": "1356720",
    "end": "1363440"
  },
  {
    "text": "by ec2 we have a cloudwatch cloudwatch is the aws monitoring system",
    "start": "1363440",
    "end": "1370240"
  },
  {
    "text": "we set up a cloudwatch alarm to monitor the size of the task list",
    "start": "1370240",
    "end": "1375600"
  },
  {
    "text": "as the task list grows it creates an alarm which notifies auto scaling that we need",
    "start": "1375600",
    "end": "1382000"
  },
  {
    "text": "more servers to process this growing task list so in this way using",
    "start": "1382000",
    "end": "1387360"
  },
  {
    "text": "totally standard cloud watch and ec2 auto scaling capabilities we're able to build a self-scaling",
    "start": "1387360",
    "end": "1395919"
  },
  {
    "text": "workflow server pool to process the jobs that we need",
    "start": "1395919",
    "end": "1401280"
  },
  {
    "text": "processed thanks andrew so let's take a look at",
    "start": "1401280",
    "end": "1409520"
  },
  {
    "start": "1405000",
    "end": "1405000"
  },
  {
    "text": "some of the code that we use to do our simple workflow implementation",
    "start": "1409520",
    "end": "1414559"
  },
  {
    "text": "looking at this class you can see it's just a regular java interface we are our server code",
    "start": "1414559",
    "end": "1420320"
  },
  {
    "text": "was already in java so it was a logical choice for us to use the aws flow framework",
    "start": "1420320",
    "end": "1425679"
  },
  {
    "text": "and the paradigm of programming in this framework is just normal java you have an interface and",
    "start": "1425679",
    "end": "1431279"
  },
  {
    "text": "you write an implementation of the interface the only difference here is we're using annotations that are specific to the",
    "start": "1431279",
    "end": "1436960"
  },
  {
    "text": "flow framework identifying the interface as an activity",
    "start": "1436960",
    "end": "1443520"
  },
  {
    "text": "specifying certain configuration parameters like timeouts and the last one towards the on the",
    "start": "1443520",
    "end": "1450240"
  },
  {
    "text": "scale method there is the exponential retry annotation which gives you fault tolerance it's also part of the",
    "start": "1450240",
    "end": "1457039"
  },
  {
    "text": "framework if we look at the implementation of uh",
    "start": "1457039",
    "end": "1464240"
  },
  {
    "start": "1460000",
    "end": "1460000"
  },
  {
    "text": "of the activity this again is the the weightlifting hamster in our code we download an image from an",
    "start": "1464240",
    "end": "1470400"
  },
  {
    "text": "s3 bucket we process the image and then we upload it back to s3",
    "start": "1470400",
    "end": "1476720"
  },
  {
    "text": "now this code actually is completely unchanged from before we migrated to simple workflow the only thing we had to",
    "start": "1476720",
    "end": "1482880"
  },
  {
    "text": "do was cut and paste the code and stick it into an activity worker so we were able to to keep all of our",
    "start": "1482880",
    "end": "1488559"
  },
  {
    "text": "image processing logic the same as it was before we moved to simple workflow",
    "start": "1488559",
    "end": "1495200"
  },
  {
    "start": "1495000",
    "end": "1495000"
  },
  {
    "text": "so now that we've got our activities identified and written the next step is identifying what the workflow is",
    "start": "1497760",
    "end": "1504000"
  },
  {
    "text": "this is the this is the decision making class your workflow workers shouldn't be doing",
    "start": "1504000",
    "end": "1511200"
  },
  {
    "text": "any actual work they just make this quick decisions they figure out what needs to be executed what needs to",
    "start": "1511200",
    "end": "1517440"
  },
  {
    "text": "be done next so it shouldn't do things like use data make you make calls to the database",
    "start": "1517440",
    "end": "1524080"
  },
  {
    "text": "access file systems access things on the network and so on so in this case it's just another java",
    "start": "1524080",
    "end": "1529840"
  },
  {
    "text": "interface with a with a flow framework annotation indicating that it's a workflow",
    "start": "1529840",
    "end": "1536400"
  },
  {
    "text": "and the execute annotation indicates that this is the entry point into our workflow",
    "start": "1536400",
    "end": "1543840"
  },
  {
    "start": "1543000",
    "end": "1543000"
  },
  {
    "text": "the implementation of our class is fairly simple we have two types of activity workers in",
    "start": "1545919",
    "end": "1551279"
  },
  {
    "text": "this particular workflow the one is the image processing activity which we we just saw that that does the",
    "start": "1551279",
    "end": "1557840"
  },
  {
    "text": "download from s3 processing of the image and upload back to s3 once that is completed",
    "start": "1557840",
    "end": "1565840"
  },
  {
    "text": "the workflow collects any error information that may have happened and then the final activity is called",
    "start": "1565840",
    "end": "1572159"
  },
  {
    "text": "the workflow completion activity that activity doesn't actually execute in our pool of workflow servers it",
    "start": "1572159",
    "end": "1577840"
  },
  {
    "text": "executes back on the admin master server as a mechanism for notifying the admin master server when a workflow has",
    "start": "1577840",
    "end": "1584159"
  },
  {
    "text": "completed and if it's completed successfully or not",
    "start": "1584159",
    "end": "1589360"
  },
  {
    "start": "1590000",
    "end": "1590000"
  },
  {
    "text": "the final piece of the puzzle is actually launching the workflows in our particular example uh we're doing",
    "start": "1590960",
    "end": "1598159"
  },
  {
    "text": "this from our image processing job that runs on the admin master server and the code looks almost the same as it",
    "start": "1598159",
    "end": "1604400"
  },
  {
    "text": "did before we again moved to simple workflow we're just calling a a method to scale the image",
    "start": "1604400",
    "end": "1610640"
  },
  {
    "text": "now it's important to note here that we could be launching calling this workflow potentially thousands or hundreds of thousands of",
    "start": "1610640",
    "end": "1616720"
  },
  {
    "text": "times but we don't care when or where it gets executed or on which server simple workflow actually takes",
    "start": "1616720",
    "end": "1623600"
  },
  {
    "text": "care of all that behind the scenes integration for us",
    "start": "1623600",
    "end": "1629360"
  },
  {
    "text": "so now that we've taken a look at some of the code behind our particular example",
    "start": "1630640",
    "end": "1637919"
  },
  {
    "text": "we thought we'd share a few of the lessons that we learned during our implementation and some tips that we found instructive",
    "start": "1637919",
    "end": "1645600"
  },
  {
    "text": "uh during our implementation",
    "start": "1645600",
    "end": "1649760"
  },
  {
    "start": "1651000",
    "end": "1651000"
  },
  {
    "text": "thanks andrew so the the first thing that we learned fairly early in the process",
    "start": "1651120",
    "end": "1657279"
  },
  {
    "text": "is that we need to look at what the activity workers are doing and make sure that the servers they're",
    "start": "1657279",
    "end": "1663919"
  },
  {
    "text": "running on have the right resources so that they can perform their tasks effectively",
    "start": "1663919",
    "end": "1670559"
  },
  {
    "text": "early early in the process we ran into some thread starvation issues",
    "start": "1670799",
    "end": "1675840"
  },
  {
    "text": "when we didn't have the servers properly configured and basically the whole thing just grinds to a halt",
    "start": "1675840",
    "end": "1681760"
  },
  {
    "text": "so in our case the the image processing tasks we're performing a lot of cpu and a lot of ram",
    "start": "1681760",
    "end": "1687600"
  },
  {
    "text": "so we set them up on m1.large ec2 instances",
    "start": "1687600",
    "end": "1692720"
  },
  {
    "text": "the next thing is that the activity workers don't one activity worker doesn't take over one server",
    "start": "1692720",
    "end": "1699039"
  },
  {
    "text": "it's much more flexible than that simple workflow lets you configure the number of threads",
    "start": "1699039",
    "end": "1704399"
  },
  {
    "text": "to allocate to the activity workers so they can run multiple in parallel same thing with the workflow workers too",
    "start": "1704399",
    "end": "1711679"
  },
  {
    "text": "so you get to figure out how many threads you need for everything so using the same principle where our",
    "start": "1711679",
    "end": "1718000"
  },
  {
    "text": "image processing activity workers have a lot of work to do that consumes a lot of resources",
    "start": "1718000",
    "end": "1723440"
  },
  {
    "text": "we have a fairly low thread count of five on each workflow server",
    "start": "1723440",
    "end": "1729760"
  },
  {
    "text": "these settings in our circumstances let us maximize the productivity of each and every",
    "start": "1729840",
    "end": "1735520"
  },
  {
    "text": "activity worker so that the images get processed quickly and smoothly of course",
    "start": "1735520",
    "end": "1741440"
  },
  {
    "text": "every activity workers job will vary and the resources they need will be",
    "start": "1741440",
    "end": "1747039"
  },
  {
    "text": "different so you just need to consider the consider that and have the activity workers running on",
    "start": "1747039",
    "end": "1753120"
  },
  {
    "text": "a properly configured server with the right number of",
    "start": "1753120",
    "end": "1757278"
  },
  {
    "text": "in a lot of threads they will you won't be able to fully use the cpu because",
    "start": "1765120",
    "end": "1770480"
  },
  {
    "text": "there's a lot of latency they're waiting for things so you have 20 30 cpu but you can't get any more",
    "start": "1770480",
    "end": "1776640"
  },
  {
    "text": "throughput so after you refactor did you",
    "start": "1776640",
    "end": "1781039"
  },
  {
    "text": "yeah we found that once we reduced the thread count so that they were all executing on full cylinders and using as much cpus we",
    "start": "1783120",
    "end": "1789600"
  },
  {
    "text": "could we were getting cpu numbers closer to 80 percent so",
    "start": "1789600",
    "end": "1794880"
  },
  {
    "text": "yes thanks another important thing here that we saw",
    "start": "1797840",
    "end": "1804960"
  },
  {
    "text": "in the hamster diagram previously is that you can have multiple different types of activities",
    "start": "1804960",
    "end": "1810480"
  },
  {
    "text": "involved in a workflow and for each type of activity you can have different activity workers",
    "start": "1810480",
    "end": "1816799"
  },
  {
    "text": "set up each activity worker can have its own configuration run on its own",
    "start": "1816799",
    "end": "1822240"
  },
  {
    "text": "instance type with its own thread count so you can optimize each activity that participates",
    "start": "1822240",
    "end": "1828399"
  },
  {
    "text": "in a workflow independently for example things what we've been talking about with image processing with",
    "start": "1828399",
    "end": "1833679"
  },
  {
    "text": "a lot of ram and cpu has one type of configuration if we had another activity that was related to",
    "start": "1833679",
    "end": "1839840"
  },
  {
    "text": "this that was transferring files over the network perhaps those servers would need a lot of network bandwidth",
    "start": "1839840",
    "end": "1846320"
  },
  {
    "text": "but not a lot of processing power so you can individually set up your activity",
    "start": "1846320",
    "end": "1851360"
  },
  {
    "text": "workers according to the task they need to perform",
    "start": "1851360",
    "end": "1855679"
  },
  {
    "start": "1857000",
    "end": "1857000"
  },
  {
    "text": "so the next uh tip we wanted to discuss was scaling on demand",
    "start": "1859440",
    "end": "1864960"
  },
  {
    "text": "ec2 auto scaling is your friend when you're using simple workflow it's a very very easy way to start",
    "start": "1864960",
    "end": "1871200"
  },
  {
    "text": "building a fleet of servers that grows on demand in our case as we saw earlier in the",
    "start": "1871200",
    "end": "1876320"
  },
  {
    "text": "topology diagram we use a combination of ec2 auto scaling with a custom cloud watch metric to",
    "start": "1876320",
    "end": "1883039"
  },
  {
    "text": "figure out how much pending work there is in our system and what the backup is so",
    "start": "1883039",
    "end": "1888080"
  },
  {
    "text": "we take a quick look at this code this is a little job that runs every minute on our admin master server it uses the",
    "start": "1888080",
    "end": "1896320"
  },
  {
    "text": "the java sdk uh to the sw the simple workflow api asks",
    "start": "1896320",
    "end": "1902640"
  },
  {
    "text": "for the number of open workflows that are currently in the system and then it puts that number",
    "start": "1902640",
    "end": "1908480"
  },
  {
    "text": "into cloudwatch as a custom metric called open workflows",
    "start": "1908480",
    "end": "1913519"
  },
  {
    "text": "so every minute we're getting a sort of a running tally an approximation of how much work there is in the system",
    "start": "1913519",
    "end": "1921440"
  },
  {
    "text": "so at this point we know the number of open workflows we need to do something with that alarm",
    "start": "1921440",
    "end": "1927440"
  },
  {
    "start": "1923000",
    "end": "1923000"
  },
  {
    "text": "and hook it up with auto scaling so in ec2 auto scaling there's a concept of a policy",
    "start": "1927440",
    "end": "1933039"
  },
  {
    "text": "we have two policies for this for our workflow servers uh one of them is the policy that gets executed when we want",
    "start": "1933039",
    "end": "1938720"
  },
  {
    "text": "to scale up and the other one is when we want to scale down so to hook up cloudwatch with auto",
    "start": "1938720",
    "end": "1944720"
  },
  {
    "text": "scaling policies we create alarms that are monitoring a specific metric in cloudwatch in our in our case",
    "start": "1944720",
    "end": "1951519"
  },
  {
    "text": "it was the number of open workflows and then we scale the we scale up when a certain thing happens so in this case we",
    "start": "1951519",
    "end": "1958080"
  },
  {
    "text": "have an alarm that gets triggered if the number of open workflows has exceeded 500 for two minutes and we scale down",
    "start": "1958080",
    "end": "1967360"
  },
  {
    "text": "when the number of open workflows uh is zero for for about five minutes so we",
    "start": "1967360",
    "end": "1973440"
  },
  {
    "text": "scale up faster than we scale down with the anticipation that if there's a lot of pending work in the system there's going",
    "start": "1973440",
    "end": "1978559"
  },
  {
    "text": "to continue to be some for a while so we want to scale up rapidly so our customers jobs execute as quickly as possible and once",
    "start": "1978559",
    "end": "1986159"
  },
  {
    "text": "with those ec2 instances are running they're on demand instances so we've already paid for them for an",
    "start": "1986159",
    "end": "1991360"
  },
  {
    "text": "hour so we don't need to want to scale down quite as aggressively so that we can make use of them if they're needed",
    "start": "1991360",
    "end": "1998080"
  },
  {
    "text": "the final thing i wanted to talk about was fault tolerance as we saw earlier in the deck our",
    "start": "2003440",
    "end": "2010080"
  },
  {
    "text": "primary motivation for moving to simple workflow was to get all the good stuff",
    "start": "2010080",
    "end": "2015919"
  },
  {
    "text": "to do with concurrency and running distributed applications one of the nice things that we found",
    "start": "2015919",
    "end": "2023919"
  },
  {
    "text": "was that simple workflow also offered built-in fault tolerance how many of you spent a lot of time",
    "start": "2023919",
    "end": "2030640"
  },
  {
    "text": "writing complex code to deal with failures in your code and and having to retry things that fail",
    "start": "2030640",
    "end": "2038799"
  },
  {
    "text": "yeah we we didn't have that logic in our application unfortunately at all so uh",
    "start": "2038799",
    "end": "2046080"
  },
  {
    "text": "our jobs weren't very fault tolerant if if a customer launched a job to scale 10 000 images",
    "start": "2046080",
    "end": "2051760"
  },
  {
    "text": "and the last image failed the scale our job would fail and it wasn't pretty for our customers so now",
    "start": "2051760",
    "end": "2059040"
  },
  {
    "text": "with the simple addition of an x the exponential retry annotation that's part of the flow framework which we add to",
    "start": "2059040",
    "end": "2065440"
  },
  {
    "text": "our our image processing activity we get built-in retries in our case we retry up to five times to",
    "start": "2065440",
    "end": "2072480"
  },
  {
    "text": "process the image backing off exponent with an exponential time and this is great because things do",
    "start": "2072480",
    "end": "2078720"
  },
  {
    "text": "occasionally go wrong during the scaling of an image there could be a network hiccup where you couldn't get the image from s3",
    "start": "2078720",
    "end": "2086398"
  },
  {
    "text": "now with this retry you know we don't see those faults anymore and our customers jobs",
    "start": "2086399",
    "end": "2091520"
  },
  {
    "text": "complete successfully a lot more often",
    "start": "2091520",
    "end": "2095359"
  },
  {
    "text": "thank you",
    "start": "2097440",
    "end": "2102880"
  },
  {
    "start": "2098000",
    "end": "2098000"
  },
  {
    "text": "so we have a similar service that does conversions where we rely on external services and",
    "start": "2102880",
    "end": "2108800"
  },
  {
    "text": "sometimes it failed for no reason and sometimes they fail it's an exception how do you",
    "start": "2108800",
    "end": "2114480"
  },
  {
    "text": "how do you",
    "start": "2114480",
    "end": "2116880"
  },
  {
    "text": "no there is a exception processing built into uh the workflow worker so you can there is a try catch finally construct within the",
    "start": "2120560",
    "end": "2127520"
  },
  {
    "text": "flow framework that works just like a regular try catch finally except it's just it's distributed so you can",
    "start": "2127520",
    "end": "2133920"
  },
  {
    "text": "catch exceptions and you do get a nice stack trace and everything and you can report that back",
    "start": "2133920",
    "end": "2139040"
  },
  {
    "text": "with the retry constrict if it it'll retry it five times and if it keeps failing in our case it was five times",
    "start": "2139040",
    "end": "2145200"
  },
  {
    "text": "if it finally does fail after that number of times you'll get the error report back which you can report back to",
    "start": "2145200",
    "end": "2150480"
  },
  {
    "text": "the user if you want",
    "start": "2150480",
    "end": "2153680"
  },
  {
    "start": "2155000",
    "end": "2155000"
  },
  {
    "text": "so after going through this exercise refactoring our code to use simple workflow",
    "start": "2155920",
    "end": "2162400"
  },
  {
    "text": "we ended up really achieving our goals for the speed we were looking for one of our clients is roots an apparel",
    "start": "2162400",
    "end": "2169119"
  },
  {
    "text": "company in canada a typical job for the root system includes about thirty seven thousand",
    "start": "2169119",
    "end": "2175520"
  },
  {
    "text": "images we saw about a seventy percent performance improvement in the execution of one of those jobs",
    "start": "2175520",
    "end": "2182400"
  },
  {
    "text": "another client of ours is life is good it takes about 10 of the time that it used to",
    "start": "2182400",
    "end": "2188560"
  },
  {
    "text": "take to process their 18 000 images perhaps more important than the speed",
    "start": "2188560",
    "end": "2194800"
  },
  {
    "text": "benefits we've realized is the the scale",
    "start": "2194800",
    "end": "2200079"
  },
  {
    "text": "by spreading the the processing of these images over multiple servers",
    "start": "2200079",
    "end": "2206000"
  },
  {
    "text": "and increasing the number of servers when the load is high we're able to just go faster do more",
    "start": "2206000",
    "end": "2214160"
  },
  {
    "text": "work when the load is higher so those those two main things were the",
    "start": "2214160",
    "end": "2219200"
  },
  {
    "text": "the things we were hoping to accomplish which which worked great um as andrew",
    "start": "2219200",
    "end": "2224880"
  },
  {
    "text": "mentioned fault tolerance was a sort of side benefit of the work that we've done which has",
    "start": "2224880",
    "end": "2230880"
  },
  {
    "text": "improved the the usability of our system dramatically another advantage that we realized was",
    "start": "2230880",
    "end": "2237359"
  },
  {
    "text": "decoupling of our code within the simple workflow framework",
    "start": "2237359",
    "end": "2243599"
  },
  {
    "text": "we have workflow workers you know the hamster in the car figuring out what needs to happen when",
    "start": "2243599",
    "end": "2249520"
  },
  {
    "text": "and then we have the activity workers processing the images separately by dividing these things into very clearly",
    "start": "2249520",
    "end": "2256240"
  },
  {
    "text": "separated components the code in each of them becomes simpler more focused",
    "start": "2256240",
    "end": "2261839"
  },
  {
    "text": "easier to write and easier to maintain",
    "start": "2261839",
    "end": "2271839"
  },
  {
    "text": "well that's a great point that's a great point and uh yeah i mean it's one really kind of the fun thing fun place we're at now",
    "start": "2274000",
    "end": "2281280"
  },
  {
    "text": "with this system it's set up to where it's incredibly easy to tweak the logic in auto scaling",
    "start": "2281280",
    "end": "2288480"
  },
  {
    "text": "to be more aggressive like you suggest to further increase performance and then it becomes a question of you",
    "start": "2288480",
    "end": "2295440"
  },
  {
    "text": "know if you get too aggressive with that you create too many servers you increase your costs",
    "start": "2295440",
    "end": "2301200"
  },
  {
    "text": "perhaps without dramatically increasing the the speed we were just talking this",
    "start": "2301200",
    "end": "2306880"
  },
  {
    "text": "morning about making that logic in there a bit more sophisticated so that we hopefully wouldn't increase",
    "start": "2306880",
    "end": "2313280"
  },
  {
    "text": "our charges too much but we would be able to hopefully increase these numbers by quite a bit it's a great point it's kind of a fun",
    "start": "2313280",
    "end": "2319760"
  },
  {
    "text": "place to be at as a developer now where without really making any significant code changes and without",
    "start": "2319760",
    "end": "2325280"
  },
  {
    "text": "really incur incurring much risk we can start tuning the system in potentially some pretty dramatic ways",
    "start": "2325280",
    "end": "2333760"
  },
  {
    "text": "so now that we've successfully optimized the image processing of fluid experience",
    "start": "2339440",
    "end": "2345200"
  },
  {
    "text": "we're starting to look at some other uses of simple workflow service",
    "start": "2345200",
    "end": "2350400"
  },
  {
    "text": "and two of those are in the fluid configure product that i mentioned earlier we're looking now at the north",
    "start": "2351119",
    "end": "2357839"
  },
  {
    "text": "faces implementation of fluid configure there's a custom denali jacket configurator",
    "start": "2357839",
    "end": "2364720"
  },
  {
    "text": "on the page we're looking at here metrics from social media are an important component of filtering",
    "start": "2364720",
    "end": "2372400"
  },
  {
    "text": "and ranking these recipes these custom designs user generated content",
    "start": "2372400",
    "end": "2378240"
  },
  {
    "text": "the number of user generated designs can grow incredibly quickly and maintaining accurate social media",
    "start": "2378240",
    "end": "2386079"
  },
  {
    "text": "statistics across this vast pool of designs is a daunting task",
    "start": "2386079",
    "end": "2392400"
  },
  {
    "text": "one that's made or will hopefully be made dramatically easier using simple workflow service",
    "start": "2392400",
    "end": "2399280"
  },
  {
    "text": "another area we're looking at optimizing in fluid configure",
    "start": "2399280",
    "end": "2404800"
  },
  {
    "text": "is the generation of the imagery you can see here the the product",
    "start": "2404800",
    "end": "2411760"
  },
  {
    "text": "imagery is composed",
    "start": "2411760",
    "end": "2416960"
  },
  {
    "text": "of component images that we see below you can see as i roll over the swatches how the imagery updates and it's",
    "start": "2416960",
    "end": "2422960"
  },
  {
    "text": "basically using this component image from below the component imagery is built using a",
    "start": "2422960",
    "end": "2428720"
  },
  {
    "text": "3d rendering engine generated from a 3d model and we're looking right now",
    "start": "2428720",
    "end": "2434000"
  },
  {
    "text": "at creating a 3d render farm in ec2 driven by simple workflow service to",
    "start": "2434000",
    "end": "2441200"
  },
  {
    "text": "scale on demand like we've been talking about",
    "start": "2441200",
    "end": "2445200"
  },
  {
    "text": "um",
    "start": "2450839",
    "end": "2453839"
  },
  {
    "text": "well we're using a reality server rendering engine which has an http based",
    "start": "2460319",
    "end": "2465839"
  },
  {
    "text": "interface so we'll set up activity workers running reality server",
    "start": "2465839",
    "end": "2471520"
  },
  {
    "text": "which would be in cooperating with simple workflow to get their tasks and then the rendering would would",
    "start": "2471520",
    "end": "2478240"
  },
  {
    "text": "happen using simple using reality servers apis i mean there's all different ways you",
    "start": "2478240",
    "end": "2484079"
  },
  {
    "text": "could build it but is reality servers it is yeah yep",
    "start": "2484079",
    "end": "2492799"
  },
  {
    "text": "so we've had a lot of fun and seen a lot of success in using simple",
    "start": "2493440",
    "end": "2498960"
  },
  {
    "text": "workflow to speed up our systems make them more scalable more fault tolerant",
    "start": "2498960",
    "end": "2504720"
  },
  {
    "text": "more cleanly architected happy to talk with people in more detail",
    "start": "2504720",
    "end": "2509839"
  },
  {
    "text": "at the conclusion of the talk if anybody has any other questions for us thank you thank you andrew and andrew",
    "start": "2509839",
    "end": "2522319"
  },
  {
    "text": "as andy said in the keynote this morning this conference is really around about the customers it's about you and",
    "start": "2522319",
    "end": "2527839"
  },
  {
    "text": "one of the things that we're trying to do in a lot of these sessions is bring customers like fluid andrew and andrew ford to share their experiences",
    "start": "2527839",
    "end": "2535119"
  },
  {
    "text": "of how they use services like simple workflow if you want to learn more",
    "start": "2535119",
    "end": "2540160"
  },
  {
    "text": "there's a couple of sessions that i'd recommend that you hit one of them is given by rick sears who's the development leader for amazon simple",
    "start": "2540160",
    "end": "2547040"
  },
  {
    "start": "2542000",
    "end": "2542000"
  },
  {
    "text": "workflow and he's going to talk in great detail about how to actually build applications that",
    "start": "2547040",
    "end": "2553200"
  },
  {
    "text": "distribute work in the cloud using simple workflow so he's going to go and take what you've learned here",
    "start": "2553200",
    "end": "2558960"
  },
  {
    "text": "to the next level of really just digging in and saying how do you go build those workflow workers the hamster",
    "start": "2558960",
    "end": "2565680"
  },
  {
    "text": "driving the car how do you go uh make sure what are the tasks to do in this distributed",
    "start": "2565680",
    "end": "2571599"
  },
  {
    "text": "topologies that we can open up with amazon's simple workflow the other session that you might find",
    "start": "2571599",
    "end": "2576880"
  },
  {
    "text": "interesting is when nasa drills down into their overall system and they use many different parts of the aws cloud",
    "start": "2576880",
    "end": "2583359"
  },
  {
    "text": "but they are heavy users of amazon's simple workflow and have been since actually before we were publicly",
    "start": "2583359",
    "end": "2589359"
  },
  {
    "text": "available and they are distributing uh all of their images or channeling all their images from the curiosity rover",
    "start": "2589359",
    "end": "2595920"
  },
  {
    "text": "all the way up to the nasa website running through different data centers on premise as well as aws",
    "start": "2595920",
    "end": "2601599"
  },
  {
    "text": "if you want to drill down into that check out their talk we also will have usually at least one",
    "start": "2601599",
    "end": "2607200"
  },
  {
    "text": "workflow person at the apple aws application services booth",
    "start": "2607200",
    "end": "2612480"
  },
  {
    "text": "so feel free to grab somebody in that area as well if you don't have time there's a lot",
    "start": "2612480",
    "end": "2617520"
  },
  {
    "start": "2616000",
    "end": "2616000"
  },
  {
    "text": "going on i have to say i was looking at all the sessions and i was torn myself picking which one to go to",
    "start": "2617520",
    "end": "2623599"
  },
  {
    "text": "you can explore this on your own and we have a tab in the aws management console we have the service overview",
    "start": "2623599",
    "end": "2629359"
  },
  {
    "text": "the customer forum as all aws customer forums is manned by the product team the",
    "start": "2629359",
    "end": "2636079"
  },
  {
    "text": "development team so the same people that you're meeting here are the people who are looking at your questions in the customer forum so",
    "start": "2636079",
    "end": "2642240"
  },
  {
    "text": "if you go and you want to post a follow-up question we'll be there to answer it for you as a",
    "start": "2642240",
    "end": "2648240"
  },
  {
    "text": "starting point i'd really encourage folks to check out this aws flow framework programming recipes again even if you",
    "start": "2648240",
    "end": "2655440"
  },
  {
    "text": "are not using java now aws flow framework is a java client framework but even if you are not",
    "start": "2655440",
    "end": "2662079"
  },
  {
    "text": "using java the flow framework programming recipes are basically samples",
    "start": "2662079",
    "end": "2669040"
  },
  {
    "text": "that you can use to see how you can take the do while loops and all",
    "start": "2669040",
    "end": "2674319"
  },
  {
    "text": "the control flow you have in your existing application and turn it into a workflow worker we've",
    "start": "2674319",
    "end": "2680400"
  },
  {
    "text": "put together i believe there's 18 code samples in this programming recipes cookbook that",
    "start": "2680400",
    "end": "2685599"
  },
  {
    "text": "we've created they're all java but again if you know a little bit of java you can extrapolate for your other languages",
    "start": "2685599",
    "end": "2691359"
  },
  {
    "text": "and if you are using java and you want to use the aws flow framework it's a very easy way to kick start getting your",
    "start": "2691359",
    "end": "2697520"
  },
  {
    "text": "decider or your your orchestration logic into your current",
    "start": "2697520",
    "end": "2702839"
  },
  {
    "text": "application so i wanted to thank everyone for coming to this session first one of the day i want to thank",
    "start": "2702839",
    "end": "2708400"
  },
  {
    "text": "again andrew kerr and andrew goldman from fluid and we have time at the end of this session",
    "start": "2708400",
    "end": "2714319"
  },
  {
    "text": "if you have questions we had a bunch of questions that occurred during the talk and if you have other questions we will be over here in",
    "start": "2714319",
    "end": "2721440"
  },
  {
    "text": "front of the stage and we'll be here for the next 10 minutes or so so feel free to come up after",
    "start": "2721440",
    "end": "2727040"
  },
  {
    "text": "and grab us and don't forget to fill out an evaluation form we're eager to hear your feedback",
    "start": "2727040",
    "end": "2733839"
  },
  {
    "text": "i believe they are the question was are the presentations going to be made public i believe they are",
    "start": "2736240",
    "end": "2742240"
  },
  {
    "text": "thank you everyone good job this work",
    "start": "2742960",
    "end": "2749920"
  },
  {
    "text": "nicely done yeah let me see if we're off are we offering it hi",
    "start": "2753839",
    "end": "2761838"
  }
]