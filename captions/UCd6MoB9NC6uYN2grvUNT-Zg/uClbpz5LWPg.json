[
  {
    "text": "developers today build modern real-time",
    "start": "0",
    "end": "2320"
  },
  {
    "text": "applications using microservices which",
    "start": "2320",
    "end": "4720"
  },
  {
    "text": "require low latency high throughput and",
    "start": "4720",
    "end": "7200"
  },
  {
    "text": "data persistence amazon memory db for",
    "start": "7200",
    "end": "10160"
  },
  {
    "text": "redis is a redis compatible in-memory",
    "start": "10160",
    "end": "12400"
  },
  {
    "text": "database that delivers ultra-fast",
    "start": "12400",
    "end": "14320"
  },
  {
    "text": "performance and multi-az durability it",
    "start": "14320",
    "end": "17279"
  },
  {
    "text": "stores the entire data set in memory",
    "start": "17279",
    "end": "19439"
  },
  {
    "text": "across one to hundreds of nodes enabling",
    "start": "19439",
    "end": "22080"
  },
  {
    "text": "microsecond read and single digit",
    "start": "22080",
    "end": "23920"
  },
  {
    "text": "millisecond write latencies you can",
    "start": "23920",
    "end": "26000"
  },
  {
    "text": "build applications quickly using redis's",
    "start": "26000",
    "end": "28240"
  },
  {
    "text": "flexible and friendly data structures",
    "start": "28240",
    "end": "30000"
  },
  {
    "text": "and apis by storing data using a",
    "start": "30000",
    "end": "32640"
  },
  {
    "text": "distributed transactional log memorydb",
    "start": "32640",
    "end": "35280"
  },
  {
    "text": "delivers multi-az durability for fast",
    "start": "35280",
    "end": "37760"
  },
  {
    "text": "database recovery and restart so you can",
    "start": "37760",
    "end": "40000"
  },
  {
    "text": "use it as your primary database",
    "start": "40000",
    "end": "42239"
  },
  {
    "text": "get started today",
    "start": "42239",
    "end": "45840"
  }
]