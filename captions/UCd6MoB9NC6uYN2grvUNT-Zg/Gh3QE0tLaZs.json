[
  {
    "text": "good morning good morning thank you for being here it's it's amazing to see so many people",
    "start": "4370",
    "end": "11670"
  },
  {
    "text": "interested in several s technologies my name is Danilo and I'm part of the",
    "start": "11670",
    "end": "16949"
  },
  {
    "text": "Vangelis team and as you can imagine since I'm here Severus is one of the things that are more passionate about",
    "start": "16949",
    "end": "23630"
  },
  {
    "text": "actually also wrote a book on several s technologists and event-driven",
    "start": "23630",
    "end": "28859"
  },
  {
    "text": "architectures that has been translated to Chinese and Korean and I also work with my publishers who have a free ebook",
    "start": "28859",
    "end": "35760"
  },
  {
    "text": "is the last one on agile development for several s platform so the last one is free and it's a mix of content from few",
    "start": "35760",
    "end": "43020"
  },
  {
    "text": "books that can help you have an understanding on how to start with service development how to mix that with",
    "start": "43020",
    "end": "48480"
  },
  {
    "text": "web api's agile development all the starting point that can create a good",
    "start": "48480",
    "end": "54050"
  },
  {
    "text": "development project and we're here because we want to understand how we can",
    "start": "54050",
    "end": "60120"
  },
  {
    "text": "dive deeper into several s development so this is probably the single slide that tells the most its how several s",
    "start": "60120",
    "end": "67590"
  },
  {
    "text": "works so we have a man talking of functions now services also as the",
    "start": "67590",
    "end": "73350"
  },
  {
    "text": "broader as a topic so we have here your function it's your code you can use lots",
    "start": "73350",
    "end": "79710"
  },
  {
    "text": "of different languages nodejs Python Java C sharp we support dotnet core 2.0 and we also",
    "start": "79710",
    "end": "87659"
  },
  {
    "text": "added more recently go and there are no dependencies you just need to know the syntax of the event that you receive",
    "start": "87659",
    "end": "93990"
  },
  {
    "text": "from the event source and then you can do whatever you want in your code you can bring your own libraries it's it's",
    "start": "93990",
    "end": "100619"
  },
  {
    "text": "very easy to start and the idea here is that the function can have access to",
    "start": "100619",
    "end": "106439"
  },
  {
    "text": "other services so they can read or write from a database they can do whatever they want they can reach any internet",
    "start": "106439",
    "end": "112020"
  },
  {
    "text": "reachable API out even outside of AWS and the idea is that you can coordinate",
    "start": "112020",
    "end": "118290"
  },
  {
    "text": "this with multiple event sources so if you use if you build a very simple application you can have just a function",
    "start": "118290",
    "end": "124290"
  },
  {
    "text": "of listening for example for new files uploaded on Amazon s3 our object storage",
    "start": "124290",
    "end": "129479"
  },
  {
    "text": "and then you can process these new files but you can start change multiple events together so maybe this",
    "start": "129479",
    "end": "136110"
  },
  {
    "text": "function is processing files then writing on the database and this triggers another function that will aggregate information on the database it",
    "start": "136110",
    "end": "142650"
  },
  {
    "text": "may be write a report somewhere else so chaining multiple events can create more complex event-driven applications and",
    "start": "142650",
    "end": "149819"
  },
  {
    "text": "there are easier to design and to think than traditional monolithic monolithic",
    "start": "149819",
    "end": "155250"
  },
  {
    "text": "applications we've seen customer built lots of different things with server",
    "start": "155250",
    "end": "160739"
  },
  {
    "text": "less these are the most common use cases so web application definitely we will",
    "start": "160739",
    "end": "166620"
  },
  {
    "text": "dive deeper into that also in the architectural session and it's very easy",
    "start": "166620",
    "end": "172290"
  },
  {
    "text": "to build back hands that can provide api's to a front-end there can be a web front-end or a mobile front-end also",
    "start": "172290",
    "end": "180870"
  },
  {
    "text": "data processing this is something that we will then deeper into the architectural part in the architectural",
    "start": "180870",
    "end": "186300"
  },
  {
    "text": "session it's quite interesting because processing streaming data in almost",
    "start": "186300",
    "end": "191370"
  },
  {
    "text": "real-time it's always been quite an issue now you can plug for example lambda functions together with Kinesis",
    "start": "191370",
    "end": "197519"
  },
  {
    "text": "and do very easy streaming applications chatbots this is an interesting topic",
    "start": "197519",
    "end": "203880"
  },
  {
    "text": "this is not the itraq but lambda function can very easily be used to add some logic to a shot but this can be",
    "start": "203880",
    "end": "211079"
  },
  {
    "text": "used for building alexa alexa skills but he can also be used with multiple",
    "start": "211079",
    "end": "216420"
  },
  {
    "text": "platforms to provide a little bit more intelligence after you understand the meaning of the of the sentence and the",
    "start": "216420",
    "end": "223890"
  },
  {
    "text": "last point is very interesting because these sometimes also the way we've seen customers start adopting serverless and",
    "start": "223890",
    "end": "230370"
  },
  {
    "text": "its IT automation so lots so everybody was and traditional IT infrastructure",
    "start": "230370",
    "end": "236780"
  },
  {
    "text": "with virtual machines or containers you need to run the usual housekeeping",
    "start": "236780",
    "end": "242489"
  },
  {
    "text": "scripts that may be clean the space take the snapshot of the storage disk do the",
    "start": "242489",
    "end": "247560"
  },
  {
    "text": "backup of the database instead of in this script running somewhere that it's difficult to manage maybe now",
    "start": "247560",
    "end": "253440"
  },
  {
    "text": "availability you can have lambda functions doing the housekeeping for you so you can develop the function that for",
    "start": "253440",
    "end": "258570"
  },
  {
    "text": "example takes the snapshot of your storage and tags the snapshot in a specific way it's much more reliable the",
    "start": "258570",
    "end": "265440"
  },
  {
    "text": "living a script somewhere that maybe it's not running and you don't don't understand why one of the",
    "start": "265440",
    "end": "272120"
  },
  {
    "text": "most important things of serverless is that you don't pay for idle and when you use it you have a very fine-grained",
    "start": "272120",
    "end": "277939"
  },
  {
    "text": "pricing model you pay by the invocations and this is usually a very low pricing and by the hundreds of milliseconds of",
    "start": "277939",
    "end": "284389"
  },
  {
    "text": "execution time how this translates to our application it's something that we",
    "start": "284389",
    "end": "290210"
  },
  {
    "text": "should we should see the free tier I think we already mentioned that in the State of the Union but I think it's a",
    "start": "290210",
    "end": "296240"
  },
  {
    "text": "good way a good incentive to start playing with several s technologies every customer this is also after the",
    "start": "296240",
    "end": "303319"
  },
  {
    "text": "first year it's always true they have the first 1 million requests per month and 400,000 gigabyte seconds of compute",
    "start": "303319",
    "end": "310669"
  },
  {
    "text": "time without any cost so one mini request is very clear four hundred thousand gigabyte seconds means",
    "start": "310669",
    "end": "318650"
  },
  {
    "text": "that if you use one gigabyte of memory with your functions you have 400 thousand seconds of execution time",
    "start": "318650",
    "end": "324590"
  },
  {
    "text": "without cost if you use less memory you get more time because it's linear so if you use for example one point 128",
    "start": "324590",
    "end": "331400"
  },
  {
    "text": "megabytes that's the minimum that you can give to a lambda function you get 3.2 million of seconds of execution time",
    "start": "331400",
    "end": "337669"
  },
  {
    "text": "so we've seen startup for example building application with customers in the range of the ten thousands and still",
    "start": "337669",
    "end": "344360"
  },
  {
    "text": "don't have they don't have any cost from lambda of course it depends how you use the platform and this is an example of",
    "start": "344360",
    "end": "351020"
  },
  {
    "text": "how you can be smarter in choosing how much memory you want to give to your",
    "start": "351020",
    "end": "357650"
  },
  {
    "text": "functions so normally when you give your mem more memory you you pay a little bit more it's linear the cost with the",
    "start": "357650",
    "end": "364039"
  },
  {
    "text": "memory but you also give more CPU power to your functions that means that the",
    "start": "364039",
    "end": "369199"
  },
  {
    "text": "functions will run faster so if you have a CPU bound function like the one that I",
    "start": "369199",
    "end": "374360"
  },
  {
    "text": "have in this example it's a function that is just computing the old prime numbers below 1 million and I call this",
    "start": "374360",
    "end": "381349"
  },
  {
    "text": "function one thousand times so it takes lots of time if you have 128 megabytes",
    "start": "381349",
    "end": "388190"
  },
  {
    "text": "it takes almost 12 seconds if you give more memory since this is really CPU bound the time decrease almost linearly",
    "start": "388190",
    "end": "396349"
  },
  {
    "text": "if we see the cost of the different scenarios we see that basically they cost almost all the same and the first and",
    "start": "396349",
    "end": "403939"
  },
  {
    "text": "the last they they are very close in cost but if you give one gigabyte of",
    "start": "403939",
    "end": "409129"
  },
  {
    "text": "memory you you get your result in less than 1.5 seconds so much faster so think",
    "start": "409129",
    "end": "415279"
  },
  {
    "text": "of that that means that runs a few experiments giving more memory because sometimes giving more memory is not",
    "start": "415279",
    "end": "421309"
  },
  {
    "text": "really increasing your cost a lot maybe doing increase like 10 20 % and you get everything running faster so do some",
    "start": "421309",
    "end": "428300"
  },
  {
    "text": "tests there's lots of event sources that are integrated in the SS ecosystem with",
    "start": "428300",
    "end": "433580"
  },
  {
    "text": "lambda so these are the other services that can trigger a lambda functions so there are data stores like of course s3",
    "start": "433580",
    "end": "440689"
  },
  {
    "text": "that I've already mentioned database like dynamo DB there are endpoints that",
    "start": "440689",
    "end": "445879"
  },
  {
    "text": "provide a different interface to the lambda functions such as data gateway it",
    "start": "445879",
    "end": "451009"
  },
  {
    "text": "provides a Web API interface or a WSI UT that gives an interface to IOT devices",
    "start": "451009",
    "end": "458479"
  },
  {
    "text": "that don't don't or can't speak HTTP but maybe they can run using more machine to",
    "start": "458479",
    "end": "465289"
  },
  {
    "text": "machine protocols such as mqtt and they can trigger lambda functions as well and imaginal excited",
    "start": "465289",
    "end": "472969"
  },
  {
    "text": "already mentioned so most of the skills are developed using lambda functions there are also some tools that are used",
    "start": "472969",
    "end": "480259"
  },
  {
    "text": "for automating the development and the management of your application such as path formation that we will dive deeper",
    "start": "480259",
    "end": "486199"
  },
  {
    "text": "or code commit it's managed git repository all cloud worksheets its",
    "start": "486199",
    "end": "492579"
  },
  {
    "text": "management monitoring platform that we have and all of these can trigger lambda",
    "start": "492579",
    "end": "497779"
  },
  {
    "text": "function as well and you can use this to automate for example your deployment or",
    "start": "497779",
    "end": "503019"
  },
  {
    "text": "something that happens when you do a deployment that must be automatically implemented and that's also more event",
    "start": "503019",
    "end": "510469"
  },
  {
    "text": "or message oriented services such as Amazon SNS the notification service that",
    "start": "510469",
    "end": "515930"
  },
  {
    "text": "we have says is the simple email service so you can for example create an",
    "start": "515930",
    "end": "520939"
  },
  {
    "text": "automatic service that receives emails and trigger lambda function functions to process those emails and with events you",
    "start": "520939",
    "end": "528079"
  },
  {
    "text": "can also do cron events that means that you can schedule the triggering of the function and this is very common for",
    "start": "528079",
    "end": "533879"
  },
  {
    "text": "the IT architectures housekeeping scripts that I was mentioning before",
    "start": "533879",
    "end": "539870"
  },
  {
    "text": "when you execute a lambda function there are actually two three ways you can",
    "start": "539870",
    "end": "544980"
  },
  {
    "text": "trigger a lambda function so some services like the API gateway they trigger it synchronously and that means",
    "start": "544980",
    "end": "551910"
  },
  {
    "text": "that we call the lambda function you wait for the return value of the of the",
    "start": "551910",
    "end": "557639"
  },
  {
    "text": "function and then you give back for example in the case of the API gate whether the return to the customer ID",
    "start": "557639",
    "end": "563670"
  },
  {
    "text": "was calling the API you other services like for example s3 when you load the",
    "start": "563670",
    "end": "569430"
  },
  {
    "text": "document like an image you trigger a lambda functions those invocation are asynchronous so history is just saying",
    "start": "569430",
    "end": "574860"
  },
  {
    "text": "to the lambda function start with this event in input and then s3 as no other visibility on what's happening usually",
    "start": "574860",
    "end": "583379"
  },
  {
    "text": "for performance they are less critical because you're not waiting for them to complete and you will see that they are",
    "start": "583379",
    "end": "589740"
  },
  {
    "text": "in case of errors the retrials is different between synchronous and asynchronous platforms and the last one",
    "start": "589740",
    "end": "596250"
  },
  {
    "text": "is slightly different it's actually something that we manage for a stream based services such as kinases or",
    "start": "596250",
    "end": "603680"
  },
  {
    "text": "dynamodb streams where we send a stream of event and order is important because",
    "start": "603680",
    "end": "609180"
  },
  {
    "text": "in a database if you first update something and then you delete it it's different than the opposite so we have a",
    "start": "609180",
    "end": "615870"
  },
  {
    "text": "different way to receive the event in the same order as they are generated because with the synchronous events you",
    "start": "615870",
    "end": "621720"
  },
  {
    "text": "don't have order guarantees so if you upload 1,000 documents then you'd fire",
    "start": "621720",
    "end": "626730"
  },
  {
    "text": "1,000 functions processing these documents but you don't know the exact order in which these functions will be",
    "start": "626730",
    "end": "632670"
  },
  {
    "text": "here they are there is important the permission model of lambda is also very",
    "start": "632670",
    "end": "638459"
  },
  {
    "text": "interesting and can create very interesting scenarios for the security team in your companies there are",
    "start": "638459",
    "end": "645420"
  },
  {
    "text": "actually two policies that you can manage one is the execution policy so who can trigger this lambda function may",
    "start": "645420",
    "end": "653009"
  },
  {
    "text": "be another AWS service like s3 or maybe the API gateway if you have some",
    "start": "653009",
    "end": "658129"
  },
  {
    "text": "credentials and then there's the permission that you give to the function itself what the function can do when",
    "start": "658129",
    "end": "664800"
  },
  {
    "text": "it's executed so the maybe can write to a streak and read from dynamodb on a specific table and so",
    "start": "664800",
    "end": "671630"
  },
  {
    "text": "on the fact that you decouple the service the permissions in the sort of front-end and back-end",
    "start": "671630",
    "end": "677540"
  },
  {
    "text": "can really help you create more secure architectures because for example here",
    "start": "677540",
    "end": "683120"
  },
  {
    "text": "you have probably the internal access to your resources and that's my very much critical and then you can give a limited",
    "start": "683120",
    "end": "689930"
  },
  {
    "text": "access to the invocation of the function so think about that it's it's quite interesting probably the most common",
    "start": "689930",
    "end": "697570"
  },
  {
    "text": "integration of lambda functions is that with the Amazon API gateway that gives our web interface to the lambda",
    "start": "697570",
    "end": "703910"
  },
  {
    "text": "functions and basically it works that you're you create an API endpoint using",
    "start": "703910",
    "end": "710780"
  },
  {
    "text": "HTTP so it's always secure at protocol level previously the API gateway was",
    "start": "710780",
    "end": "717440"
  },
  {
    "text": "always using cloud from distribution so it was a code for this a content delivery network so this was what we now",
    "start": "717440",
    "end": "724820"
  },
  {
    "text": "call edge optimized the API that means that if you call an API in the world you",
    "start": "724820",
    "end": "731240"
  },
  {
    "text": "will reach our closest edge location that's probably much closer than the region and then you would use our own",
    "start": "731240",
    "end": "737120"
  },
  {
    "text": "network to reach the the API gateway this works very well but there are some",
    "start": "737120",
    "end": "743030"
  },
  {
    "text": "scenarios where you want to have regional level so the API is inside the region that we have for example if you",
    "start": "743030",
    "end": "749360"
  },
  {
    "text": "use the API for your own application inside the region if you use CloudFront it would not be very optimal from a",
    "start": "749360",
    "end": "756260"
  },
  {
    "text": "network perspective because you will get out of the region and inside back through one of our edge location so you",
    "start": "756260",
    "end": "762410"
  },
  {
    "text": "can now create edge optimized or regional endpoint with the API gateway and then when API gateway receives an",
    "start": "762410",
    "end": "768800"
  },
  {
    "text": "API call what you can do is what you can do we can map this call to a lambda",
    "start": "768800",
    "end": "775370"
  },
  {
    "text": "function and it's a very common use case but can actually call any other edible services using the API if you want you",
    "start": "775370",
    "end": "781820"
  },
  {
    "text": "can also call any endpoint on Amazon ec2 or reachable over the Internet so you",
    "start": "781820",
    "end": "788720"
  },
  {
    "text": "can use it as a sort of a reverse proxy and this can be a good practice if you",
    "start": "788720",
    "end": "794150"
  },
  {
    "text": "want to start adopting microservices so you start using the API get you in front",
    "start": "794150",
    "end": "799680"
  },
  {
    "text": "of web frontend api that you already have can be now also inside of EPC if",
    "start": "799680",
    "end": "804750"
  },
  {
    "text": "you want or can be anywhere but switchable using the internet or your data connect link and then you can start",
    "start": "804750",
    "end": "813180"
  },
  {
    "text": "peeling the onion and take some API a map those two lambda functions so it can be a good way to start mapping more",
    "start": "813180",
    "end": "819810"
  },
  {
    "text": "functionality outside of your API in this way the API acts as a contract between the consumer and your",
    "start": "819810",
    "end": "826200"
  },
  {
    "text": "implementation and when you have a stub stable contract and inside this anbiya in this contract you can start changing",
    "start": "826200",
    "end": "832020"
  },
  {
    "text": "the architecture from a more traditional one to a 7s one and the packet who is",
    "start": "832020",
    "end": "838589"
  },
  {
    "text": "also writing all the information on the invocation and the time of the invocation on watch monitor matrix and",
    "start": "838589",
    "end": "845459"
  },
  {
    "text": "this is interesting I have customers that use this as an SLI report so if you build an API for someone basically you",
    "start": "845459",
    "end": "851640"
  },
  {
    "text": "have all the information for an SLA reporting cloud watch and you can just do a dump and provide the SLA report to",
    "start": "851640",
    "end": "857339"
  },
  {
    "text": "your customers the api gateways gives fine-grained control on the api for",
    "start": "857339",
    "end": "863870"
  },
  {
    "text": "example it's protecting the access so we already implement automatically DDoS",
    "start": "863870",
    "end": "869940"
  },
  {
    "text": "protection on your api's and you can also find tune throttling and you can create different levels for your",
    "start": "869940",
    "end": "876089"
  },
  {
    "text": "customers using api keys if you want for example to give bronze access silver",
    "start": "876089",
    "end": "881250"
  },
  {
    "text": "access god access and depending on that level of the access of the api you can give more or less throughput in the",
    "start": "881250",
    "end": "887730"
  },
  {
    "text": "throttling maybe you can give free access with a very low throughput to some customers it's actually managing",
    "start": "887730",
    "end": "893940"
  },
  {
    "text": "the authentication and authorization in different ways and the use of this of",
    "start": "893940",
    "end": "902100"
  },
  {
    "text": "this throttling together with the api keys and levels can help you also monetize api's because you can easily",
    "start": "902100",
    "end": "909959"
  },
  {
    "text": "sell added value with more throughput so when we created the api gateway we",
    "start": "909959",
    "end": "915510"
  },
  {
    "text": "thought of the maximum possible flexibility so we use velocity mapping",
    "start": "915510",
    "end": "921300"
  },
  {
    "text": "templates to map the input that you receive from the HTTP request and this",
    "start": "921300",
    "end": "927360"
  },
  {
    "text": "template could change this input to send the the required format to the lambda function velocity templates is a syntax",
    "start": "927360",
    "end": "935260"
  },
  {
    "text": "that comes from the Apache velocity project so it's an open source syntax it's very powerful the problem is that",
    "start": "935260",
    "end": "941620"
  },
  {
    "text": "we discover that all the customers were doing the same template again and again because basically HTTP requests they",
    "start": "941620",
    "end": "947710"
  },
  {
    "text": "have almost always the same syntax and API and the lambda function was expected to understand what kind of parameters",
    "start": "947710",
    "end": "954310"
  },
  {
    "text": "were passed through this HTTP request so we then introduced last year or year",
    "start": "954310",
    "end": "960630"
  },
  {
    "text": "alphago the lambda proxy integration is now the default integration for lambda functions and it's what I would suggest",
    "start": "960630",
    "end": "967600"
  },
  {
    "text": "you to use so instead of creating these templates you can just ever fled is the default if you use the console and this",
    "start": "967600",
    "end": "974470"
  },
  {
    "text": "is the input and how to format that the lambda function should use to create the",
    "start": "974470",
    "end": "980380"
  },
  {
    "text": "back end of a web api so the input format is giving you the HTTP method this is supposed to get her head is",
    "start": "980380",
    "end": "988300"
  },
  {
    "text": "giving you the headers the parameters that are passed through the query string or in the body the full body the API",
    "start": "988300",
    "end": "995980"
  },
  {
    "text": "gateway now supports also binary content so from a performance point of view you have to be careful with large binaries",
    "start": "995980",
    "end": "1002280"
  },
  {
    "text": "through the API gateway but it works and in case it's it receives a binary content like you upload an image to the",
    "start": "1002280",
    "end": "1009000"
  },
  {
    "text": "API gateway we have also to be careful with timeouts and sides but it will just",
    "start": "1009000",
    "end": "1014250"
  },
  {
    "text": "pass the body in this format using best base64 encoding to pass the binary to",
    "start": "1014250",
    "end": "1020580"
  },
  {
    "text": "the lambda function and the lambda function can process this information and send a response back with the syntax",
    "start": "1020580",
    "end": "1027089"
  },
  {
    "text": "that you see below so it must send a JSON payload with a status code this is",
    "start": "1027089",
    "end": "1032520"
  },
  {
    "text": "the HTTP status code 200 K 404 you missed so on you can optionally",
    "start": "1032520",
    "end": "1038850"
  },
  {
    "text": "customize the headers like set your own content type you can pass a body and",
    "start": "1038850",
    "end": "1045000"
  },
  {
    "text": "then if you want you can set the flag this is a binary base64 encoded body so",
    "start": "1045000",
    "end": "1050730"
  },
  {
    "text": "that you can also send a binary back through the truth API gateway we've seen sometimes that using binary encoding",
    "start": "1050730",
    "end": "1056820"
  },
  {
    "text": "instead of JSON for large payloads can give increased performance with the API gateway so if you see that",
    "start": "1056820",
    "end": "1063809"
  },
  {
    "text": "you need to send a large payload in the return of your lambda function to the",
    "start": "1063809",
    "end": "1069570"
  },
  {
    "text": "APA gateway using a binary encoding sometimes can be a can be better we work",
    "start": "1069570",
    "end": "1075240"
  },
  {
    "text": "a lot to improve the developer experience so the first step that we see today now is if you want to create a",
    "start": "1075240",
    "end": "1081269"
  },
  {
    "text": "very simple application use the lambda console we improve it a lot we integrated the cloud 9 editor is a very",
    "start": "1081269",
    "end": "1088700"
  },
  {
    "text": "interactive editor that you can use to the web we added features like managing",
    "start": "1088700",
    "end": "1094169"
  },
  {
    "text": "events seeing the dependencies of your function what resources can use and also",
    "start": "1094169",
    "end": "1100289"
  },
  {
    "text": "we increased we improve their monitoring view of your functions so without further ado let's start see how this",
    "start": "1100289",
    "end": "1106499"
  },
  {
    "text": "works so how many people ready created a lambda function here just did I",
    "start": "1106499",
    "end": "1112200"
  },
  {
    "text": "understand almost so I will do a basic",
    "start": "1112200",
    "end": "1118559"
  },
  {
    "text": "example but the idea is to see the features here so this is the lambda console and I'm going to create a new",
    "start": "1118559",
    "end": "1126240"
  },
  {
    "text": "function",
    "start": "1126240",
    "end": "1128899"
  },
  {
    "text": "you",
    "start": "1136169",
    "end": "1138230"
  },
  {
    "text": "if you don't give these permissions that is the minimum amount that you require",
    "start": "1157290",
    "end": "1162990"
  },
  {
    "text": "you don't get any log and then it's very difficult to debug your function so I now create a a new role for template I",
    "start": "1162990",
    "end": "1170040"
  },
  {
    "text": "call the role in the same way as the function so that I can trace it back and I don't need to attach any policy I just",
    "start": "1170040",
    "end": "1175620"
  },
  {
    "text": "need the basic permissions here so now that we create the function I since I'm",
    "start": "1175620",
    "end": "1181050"
  },
  {
    "text": "very bad with live coding and I think everybody wants to go fast on this I have here some basic code that we can",
    "start": "1181050",
    "end": "1187860"
  },
  {
    "text": "paste and of course the network is not so bad okay it's now loading and this is",
    "start": "1187860",
    "end": "1194970"
  },
  {
    "text": "the new console that we have so first of all let's paste the code here and let's",
    "start": "1194970",
    "end": "1201450"
  },
  {
    "text": "have a look at the new console so here on the top you see the dependency graph that I was mentioning so now you see",
    "start": "1201450",
    "end": "1206640"
  },
  {
    "text": "that this is a function on the left you see the triggers now there's no triggers for this function on the right you see",
    "start": "1206640",
    "end": "1212730"
  },
  {
    "text": "the other services that this function has permissions to do something and you",
    "start": "1212730",
    "end": "1218280"
  },
  {
    "text": "see the only service is the stopwatch lock so this function can write locks if you don't seek out which locks there",
    "start": "1218280",
    "end": "1224130"
  },
  {
    "text": "this this can be a problem so if you give other permission you see the dependency graph here and here if you",
    "start": "1224130",
    "end": "1231150"
  },
  {
    "text": "click on the key you can also see the details of the policies the dimension before so this is the code that I was",
    "start": "1231150",
    "end": "1238740"
  },
  {
    "text": "proposing this is cloud 9 embedded in the in the console and this is a prototype of a function is it's in",
    "start": "1238740",
    "end": "1246000"
  },
  {
    "text": "JavaScript not Jes but it's similar for every language so you can have code outside of your functions and this is",
    "start": "1246000",
    "end": "1254220"
  },
  {
    "text": "code that we use only for initialization so if you have something heavy like downloading a configuration file doing",
    "start": "1254220",
    "end": "1260370"
  },
  {
    "text": "some computation that you recycle doing multiple invocations if you have a database connection that's where you",
    "start": "1260370",
    "end": "1267570"
  },
  {
    "text": "should put all these things and then inside the function that we will invoke we will reuse these multiple times",
    "start": "1267570",
    "end": "1274290"
  },
  {
    "text": "another option is to use lazy loading so what means is that all the resources that you need you you you you introduce",
    "start": "1274290",
    "end": "1281340"
  },
  {
    "text": "a check in your function the first time you see do I have a database connection now I will create it so lazy loading is",
    "start": "1281340",
    "end": "1287880"
  },
  {
    "text": "another approach is very popular and this is the code of the function that is invoked it's",
    "start": "1287880",
    "end": "1293480"
  },
  {
    "text": "basically just login the event checking if the event that it will be a JavaScript object as a name if that's a",
    "start": "1293480",
    "end": "1300440"
  },
  {
    "text": "name I will use this name otherwise I use word and then I say hello plus the name and then I log it and then I return",
    "start": "1300440",
    "end": "1307610"
  },
  {
    "text": "the return value so this is JavaScript so I'm using we use the standard",
    "start": "1307610",
    "end": "1313850"
  },
  {
    "text": "callback syntax of JavaScript so the first parameter is the error null means no error and greetings is the return",
    "start": "1313850",
    "end": "1320659"
  },
  {
    "text": "value here at the bottom we see some",
    "start": "1320659",
    "end": "1325669"
  },
  {
    "text": "more interesting things so you can pass now environmental variables to your function to customize your function so",
    "start": "1325669",
    "end": "1332119"
  },
  {
    "text": "if you have hopefully a different password in the database in production and in in tests you don't need to change",
    "start": "1332119",
    "end": "1338659"
  },
  {
    "text": "the code of your function this is very important because you can ever say the same code that goes to different stages",
    "start": "1338659",
    "end": "1343999"
  },
  {
    "text": "and just the configuration is changed to environmental variables you can tag your function here you have the setting with",
    "start": "1343999",
    "end": "1351049"
  },
  {
    "text": "the memory you seen out from 128 up to 3 gigabyte of memory and with more memory",
    "start": "1351049",
    "end": "1357950"
  },
  {
    "text": "you get also more CPU if you go beyond 1.8 gigabyte you start to see two cores",
    "start": "1357950",
    "end": "1363980"
  },
  {
    "text": "in your functions environment so if we want to use all the power of your function you need to have at least two",
    "start": "1363980",
    "end": "1369529"
  },
  {
    "text": "thread otherwise you will not be able to use more CPU with a single thread and they timeout the maximum time out if",
    "start": "1369529",
    "end": "1376159"
  },
  {
    "text": "five minutes three seconds is more than enough to say hello world but if you have to do something that goes beyond",
    "start": "1376159",
    "end": "1383240"
  },
  {
    "text": "five minutes we will see there are some different ways to approach that that kind of workloads network you can",
    "start": "1383240",
    "end": "1389899"
  },
  {
    "text": "connect your by default the functions are internet exposed but you can put",
    "start": "1389899",
    "end": "1395090"
  },
  {
    "text": "them inside your V PC if you want it's slower because we need to provide is",
    "start": "1395090",
    "end": "1400279"
  },
  {
    "text": "lowers the cold start so the first thing vocation is lower the next invocation number the first invocation we need to",
    "start": "1400279",
    "end": "1405409"
  },
  {
    "text": "provide you network connectivity and so it's something that you should really plan for the DL Q is the addit letter Q",
    "start": "1405409",
    "end": "1415220"
  },
  {
    "text": "so if we have a synchronous invocation of a function you get the error immediately and you can",
    "start": "1415220",
    "end": "1420880"
  },
  {
    "text": "the error if you have an a synchronous invocation of a function like from history you don't know what happens you",
    "start": "1420880",
    "end": "1427300"
  },
  {
    "text": "should just check the logs so we automatically read try a synchronous invocation two times and if for the",
    "start": "1427300",
    "end": "1434470"
  },
  {
    "text": "second time it doesn't work gets an error we can optionally write this into a dead letter Q it's Q or a notification",
    "start": "1434470",
    "end": "1441430"
  },
  {
    "text": "service where you can automatically or manually understand what are the input events that create an error so it's very",
    "start": "1441430",
    "end": "1448090"
  },
  {
    "text": "much used especially in enterprise context here we see also the concurrency",
    "start": "1448090",
    "end": "1453310"
  },
  {
    "text": "Ian already mentioned that in the State of the Union but now you can fine-tune the global concurrency that you have so",
    "start": "1453310",
    "end": "1459700"
  },
  {
    "text": "how many functions you can run in parallel at the same time in a region by default is 1,000 we are happy to",
    "start": "1459700",
    "end": "1466060"
  },
  {
    "text": "increase this limit if you want but now if you want you can reserve some concurrency for a specific function that",
    "start": "1466060",
    "end": "1471610"
  },
  {
    "text": "this function can scale up to 100 and so I removed 100 from my global limit so",
    "start": "1471610",
    "end": "1478660"
  },
  {
    "text": "why you would like to introduce a bottleneck in your architecture because sometimes the resources that are down",
    "start": "1478660",
    "end": "1485950"
  },
  {
    "text": "here from the lambda function can scale as much as you want so if for example if your lambda function is using a data",
    "start": "1485950",
    "end": "1491590"
  },
  {
    "text": "base that can scale beyond 200 connections probably you want to set",
    "start": "1491590",
    "end": "1498580"
  },
  {
    "text": "this bottleneck another example is the V PC so if you deploy lambda functions in the V PC each concurrent execution of a",
    "start": "1498580",
    "end": "1505960"
  },
  {
    "text": "lambda function will use one IP address from the subnet where you put the lambda function so if you run out of IP address",
    "start": "1505960",
    "end": "1512950"
  },
  {
    "text": "this is not good for your networking so you should say how much IP address you have you can allocate very large Sabnis",
    "start": "1512950",
    "end": "1520210"
  },
  {
    "text": "for the lambda function but if you didn't plan or you don't need it you can use this to limit the number the",
    "start": "1520210",
    "end": "1525220"
  },
  {
    "text": "concurrency of your lambda function this is how much concurrent execution you can have so that means that it's not the",
    "start": "1525220",
    "end": "1531520"
  },
  {
    "text": "true boot per second so if the function lasts ten milliseconds you can have a very high throughput with local currency",
    "start": "1531520",
    "end": "1537550"
  },
  {
    "text": "if the function they last three seconds then the concurrence you can limit the",
    "start": "1537550",
    "end": "1543390"
  },
  {
    "text": "throughput of your application more so think of this as concurrent execution so",
    "start": "1543390",
    "end": "1549090"
  },
  {
    "text": "for now I'm not changing this so let's save this and if you want you can also",
    "start": "1549090",
    "end": "1558050"
  },
  {
    "text": "just put this into fullscreen so you have the full editor from the console and then we can start testing our",
    "start": "1558050",
    "end": "1564630"
  },
  {
    "text": "function so I just save it I can test it and let's create a first event we can",
    "start": "1564630",
    "end": "1570030"
  },
  {
    "text": "call it so I need to pass a name here so let's use the Mila and I can call this",
    "start": "1570030",
    "end": "1578130"
  },
  {
    "text": "with name and I can save this new event",
    "start": "1578130",
    "end": "1583230"
  },
  {
    "text": "and this is a new feature so you can now create test events that are stored in the console and then you can use this to",
    "start": "1583230",
    "end": "1589380"
  },
  {
    "text": "a quick testing afterwards so now I create this and now I can test with this",
    "start": "1589380",
    "end": "1596550"
  },
  {
    "text": "event and here I get wonder of the wonder hello Danilo and all the logs",
    "start": "1596550",
    "end": "1603090"
  },
  {
    "text": "over my function are also collected here the other use case is if I don't give a",
    "start": "1603090",
    "end": "1609780"
  },
  {
    "text": "name so I can go here on test configure event and I can create a new test event",
    "start": "1609780",
    "end": "1615720"
  },
  {
    "text": "that is without name and then I give an empty object in input nante just an",
    "start": "1615720",
    "end": "1623190"
  },
  {
    "text": "object and now if I go in test I can test without a name and I can see that I",
    "start": "1623190",
    "end": "1631020"
  },
  {
    "text": "get the default hello world so now if you continue to develop this application you can very quickly it's not of course",
    "start": "1631020",
    "end": "1637260"
  },
  {
    "text": "TDD but it's very quickly you can just click here and test the function as you progress so it's it's I think a",
    "start": "1637260",
    "end": "1643170"
  },
  {
    "text": "convenient way to work for simple projects and the first milestone and this editor that Klugman editor is very",
    "start": "1643170",
    "end": "1649920"
  },
  {
    "text": "powerful and for example supports different syntax I don't see it here but",
    "start": "1649920",
    "end": "1656640"
  },
  {
    "text": "you can emulate Veeam Emacs sublime text editor so you can find something that you're already comfortable to use ok so",
    "start": "1656640",
    "end": "1664530"
  },
  {
    "text": "we have our first function we tested it works let's make something more interesting so next step is let's use the",
    "start": "1664530",
    "end": "1671790"
  },
  {
    "text": "environmental funk volts so let's make our functions a little bit more configurable so I go",
    "start": "1671790",
    "end": "1679010"
  },
  {
    "text": "back here I replace with this content so if you see I'm doing something very",
    "start": "1679010",
    "end": "1684860"
  },
  {
    "text": "similar to before but I create this variable this constant they are called salutation and if in the environmental",
    "start": "1684860",
    "end": "1692420"
  },
  {
    "text": "variable so depending on the programming language you can use the standard way to read your environmental variables if",
    "start": "1692420",
    "end": "1699320"
  },
  {
    "text": "there is a salutation I take this salutation otherwise I default on hello and then I log it and then the rest of",
    "start": "1699320",
    "end": "1708560"
  },
  {
    "text": "the code is the same but I use the salutation to build the degree so if I test immediately with wit name I get",
    "start": "1708560",
    "end": "1715790"
  },
  {
    "text": "hello Danilo but if I go here and add an environmental variable salutation and I",
    "start": "1715790",
    "end": "1723380"
  },
  {
    "text": "can put good morning and since we expect",
    "start": "1723380",
    "end": "1729110"
  },
  {
    "text": "you will use environmental variables also for secrets there's a very easy",
    "start": "1729110",
    "end": "1734480"
  },
  {
    "text": "option to encrypt the value in the console and then they creep the value only inside the function in a lazy way",
    "start": "1734480",
    "end": "1741200"
  },
  {
    "text": "so the first time that you read the password of your database you will decrypt it in memory there's an helper",
    "start": "1741200",
    "end": "1747680"
  },
  {
    "text": "code here I'm not going through that but it's very easy to use from the console so now that we have a salutation I can",
    "start": "1747680",
    "end": "1755450"
  },
  {
    "text": "go back here and test my function again and we get of course good morning Danilo",
    "start": "1755450",
    "end": "1762350"
  },
  {
    "text": "so this is just an example of how you can do this let's look for another function that I already created that",
    "start": "1762350",
    "end": "1769070"
  },
  {
    "text": "it's called grid greeting API readings API and as you can imagine is slightly",
    "start": "1769070",
    "end": "1776060"
  },
  {
    "text": "different from this one so instead of using this name syntax I want to expose",
    "start": "1776060",
    "end": "1781190"
  },
  {
    "text": "this wonderful API using wonderful function using a Web API so if we look",
    "start": "1781190",
    "end": "1788960"
  },
  {
    "text": "at the code this similar to the previous one the only difference is that I'm using the syntax that we saw before so I'm",
    "start": "1788960",
    "end": "1794990"
  },
  {
    "text": "looking for query string parameters let me zoom a little bit so in the event I look for query string parameters if",
    "start": "1794990",
    "end": "1801680"
  },
  {
    "text": "there is a new query string parameters I look for a name and the and then use that name so this is",
    "start": "1801680",
    "end": "1808330"
  },
  {
    "text": "basically what this means is that if you want to use the standard integration of the API gateway you should add this",
    "start": "1808330",
    "end": "1814310"
  },
  {
    "text": "mapping layer in input any output to map from this default syntax that we",
    "start": "1814310",
    "end": "1819320"
  },
  {
    "text": "proposed and again if you want to be compliant with the applicator you must",
    "start": "1819320",
    "end": "1824540"
  },
  {
    "text": "send a response that contains the stubs code I add a custom headers just for fun",
    "start": "1824540",
    "end": "1830570"
  },
  {
    "text": "and the body that is my hello body that I build if you don't send this exact",
    "start": "1830570",
    "end": "1838010"
  },
  {
    "text": "format to the API gateway you will receive a 500 error x' from the api gateway so this is one of the most",
    "start": "1838010",
    "end": "1843650"
  },
  {
    "text": "common errors that you can find when you start playing with this technology so",
    "start": "1843650",
    "end": "1848810"
  },
  {
    "text": "this is already set but it's currently not regret so it what the triggers you can go here where there are most of the",
    "start": "1848810",
    "end": "1855410"
  },
  {
    "text": "triggers you select now I select the API gateway and here you can choose which",
    "start": "1855410",
    "end": "1861590"
  },
  {
    "text": "API the API is a group of multiple resources in this case I use the default",
    "start": "1861590",
    "end": "1866990"
  },
  {
    "text": "but you can create your own API name the API gateway has the concept of stages so",
    "start": "1866990",
    "end": "1872390"
  },
  {
    "text": "you can you create a new version of an API you can have like a test stage a production stage you can avoid so",
    "start": "1872390",
    "end": "1879230"
  },
  {
    "text": "version 1 or version 2 of your api's if you really need that so I'm sending this",
    "start": "1879230",
    "end": "1884480"
  },
  {
    "text": "in the double in the production stage and then there's security the API gateway has more options than this but",
    "start": "1884480",
    "end": "1891440"
  },
  {
    "text": "this is the default security you can use traditional AWS authentication so that means",
    "start": "1891440",
    "end": "1897440"
  },
  {
    "text": "otherwise I am it means that the API gateway API will be protected in some in the same way as any AWS API like s3 or",
    "start": "1897440",
    "end": "1905060"
  },
  {
    "text": "dynamodb with the same syntax and the same signature you can use an access key",
    "start": "1905060",
    "end": "1910220"
  },
  {
    "text": "or in this case I create a completely public and open API because it's just for tests so now that we created this I",
    "start": "1910220",
    "end": "1917810"
  },
  {
    "text": "can save and I already presented with",
    "start": "1917810",
    "end": "1923300"
  },
  {
    "text": "this method I think this is the the usual problem when you do lots of demos",
    "start": "1923300",
    "end": "1928460"
  },
  {
    "text": "and maybe you leave the environment a little bit dirty so let's",
    "start": "1928460",
    "end": "1935919"
  },
  {
    "text": "let's use a new let's call this test I",
    "start": "1936150",
    "end": "1942250"
  },
  {
    "text": "don't think I have a test stage had say already present in this method",
    "start": "1942250",
    "end": "1949240"
  },
  {
    "text": "so probably I I thought I deleted it but it said the demo would be just trivial",
    "start": "1949240",
    "end": "1955270"
  },
  {
    "text": "what you would get here you would get an end point and then you can call this end point using HTTP in any way so just",
    "start": "1955270",
    "end": "1961780"
  },
  {
    "text": "passing by on this demo it's it's very trivial so with this let's go back to",
    "start": "1961780",
    "end": "1968799"
  },
  {
    "text": "the slide and move further in our content so this is a few key",
    "start": "1968799",
    "end": "1973960"
  },
  {
    "text": "combinations that I leave you will get the slides at the end with the feedback email at the end of the event so this is",
    "start": "1973960",
    "end": "1981820"
  },
  {
    "text": "a good way you can like trigger tests very quickly from command line from your keys so okay we can start working with",
    "start": "1981820",
    "end": "1989710"
  },
  {
    "text": "simple functions but maybe you start to have an application with five ten functions that needs to work together",
    "start": "1989710",
    "end": "1995860"
  },
  {
    "text": "how can you handle that probably the console is not the best way so we have a tool it's called CloudFormation that can",
    "start": "1995860",
    "end": "2002220"
  },
  {
    "text": "help you map any complex infrastructure on the US in a template file and then we",
    "start": "2002220",
    "end": "2007770"
  },
  {
    "text": "can use this template to build what we call a stack an implementation of this architecture but confirmation was",
    "start": "2007770",
    "end": "2015059"
  },
  {
    "text": "designed far before server less technology so it's very very boastful serverless that's why you already got the",
    "start": "2015059",
    "end": "2021870"
  },
  {
    "text": "introduction from me and we introduced Sam Sam is the surveillance application",
    "start": "2021870",
    "end": "2027270"
  },
  {
    "text": "model that is an extension of confirmation that can help you design in a template file server less architecture",
    "start": "2027270",
    "end": "2034440"
  },
  {
    "text": "in an easier way it's an open specification apache2 and its supports",
    "start": "2034440",
    "end": "2039990"
  },
  {
    "text": "as an extension any syntax that tell summation has this is an example of a",
    "start": "2039990",
    "end": "2045900"
  },
  {
    "text": "same template so we have like we define a function this is a surveillance",
    "start": "2045900",
    "end": "2052589"
  },
  {
    "text": "function so lambda function we say that this function must be triggered as an",
    "start": "2052589",
    "end": "2058108"
  },
  {
    "text": "API and this is the default for using the the API gateway and then I this is the",
    "start": "2058109",
    "end": "2066580"
  },
  {
    "text": "line the transformer line is that is the line that tells to CloudFormation the disease are not not a normal template",
    "start": "2066580",
    "end": "2072310"
  },
  {
    "text": "but it's a some template so you must apply the extension that comes with some and serverless and if we pass this",
    "start": "2072310",
    "end": "2080080"
  },
  {
    "text": "template file to CloudFormation it will automatically create all these resources that are not described in my same",
    "start": "2080080",
    "end": "2086980"
  },
  {
    "text": "template but i would need to describe if i would directly use CloudFormation so the function the role the policy the the",
    "start": "2086980",
    "end": "2094060"
  },
  {
    "text": "deployment stage of the api the permissions all these things are automatically implied if not defined and",
    "start": "2094060",
    "end": "2100480"
  },
  {
    "text": "this would be that traditional CloudFormation template to do the exactly the same thing you see it's a",
    "start": "2100480",
    "end": "2105760"
  },
  {
    "text": "little bit more verbose that it should be for this use case when you have a template you can use the web console but",
    "start": "2105760",
    "end": "2113980"
  },
  {
    "text": "also the command-line interface this is the AWS CLI to transform this template",
    "start": "2113980",
    "end": "2120520"
  },
  {
    "text": "file into an implementation of this API there are actually two commands packaged and deployed the package common will",
    "start": "2120520",
    "end": "2127450"
  },
  {
    "text": "take this template take all your code that should be during the directory where you run this common zip it and",
    "start": "2127450",
    "end": "2133540"
  },
  {
    "text": "upload it on s3 and it will produce an output an output template that is exactly the same as the input template",
    "start": "2133540",
    "end": "2140350"
  },
  {
    "text": "but the code will be linked to the s3 bucket and then you can pass this output",
    "start": "2140350",
    "end": "2145450"
  },
  {
    "text": "template to deploy and this will create a stack with all the resources that are there so there you can have 20 functions",
    "start": "2145450",
    "end": "2152740"
  },
  {
    "text": "as three buckets that dynamodb database and tables all the configurations it",
    "start": "2152740",
    "end": "2158230"
  },
  {
    "text": "will be implemented for you if you are if you already have the stack implemented this can also do an upgrade",
    "start": "2158230",
    "end": "2165570"
  },
  {
    "text": "so you can for example upgrade your code or upgrade adding a new function and",
    "start": "2165570",
    "end": "2170760"
  },
  {
    "text": "Confirmation will compare the current stack and what it's in in this template and apply the changes to to update to",
    "start": "2170760",
    "end": "2178540"
  },
  {
    "text": "the new version so it's very convenient because if you add these two lines in your continuous deployment and",
    "start": "2178540",
    "end": "2184720"
  },
  {
    "text": "continuous integration pipeline you just have everything set up so every time you want to deploy in production or in",
    "start": "2184720",
    "end": "2190540"
  },
  {
    "text": "another environment you just run these two commands one after the other and you update the environment with the new",
    "start": "2190540",
    "end": "2196180"
  },
  {
    "text": "code and the new infrastructure is required so very convenient still I",
    "start": "2196180",
    "end": "2202029"
  },
  {
    "text": "think if you start to build more complex applications it's not easy to to use",
    "start": "2202029",
    "end": "2208240"
  },
  {
    "text": "this syntax because you can have lots of relationship between between the",
    "start": "2208240",
    "end": "2214150"
  },
  {
    "text": "components of your architecture that's why I created an open-source project so this is a personal project is not an AWS",
    "start": "2214150",
    "end": "2220599"
  },
  {
    "text": "official project it's called surveillance by design and you can have access at this URL and it's a graphical",
    "start": "2220599",
    "end": "2226869"
  },
  {
    "text": "front-end that you can use to design what you want to build and then it will output the some template so that you can",
    "start": "2226869",
    "end": "2233020"
  },
  {
    "text": "then pass it and start with your application it also supports the service framework if you want it has been added",
    "start": "2233020",
    "end": "2239920"
  },
  {
    "text": "since an open-source project by a guy in Dubai in 24 hours when I release it and it completely runs in the browser so if",
    "start": "2239920",
    "end": "2247510"
  },
  {
    "text": "you don't need to have internet connection you can download the javascript file it runs completely in the browser there's no dependency in",
    "start": "2247510",
    "end": "2253569"
  },
  {
    "text": "EndNote and that's not any back-end so let's have a quick look at this so this",
    "start": "2253569",
    "end": "2263319"
  },
  {
    "text": "is the the link here you have the link to the open-source project on github where you can for kit you can download",
    "start": "2263319",
    "end": "2270220"
  },
  {
    "text": "the files run it locally and here you can start adding nodes and I noticed any",
    "start": "2270220",
    "end": "2278170"
  },
  {
    "text": "entity on AWS so let's create an API and I call it my API then I could add a",
    "start": "2278170",
    "end": "2286809"
  },
  {
    "text": "lambda function that will be my backhand that is implementing the backend of my",
    "start": "2286809",
    "end": "2294369"
  },
  {
    "text": "API and then maybe this lambda function can read them right from an s3 bucket",
    "start": "2294369",
    "end": "2302170"
  },
  {
    "text": "this is my bucket and maybe you can also read them right from a DynamoDB table so",
    "start": "2302170",
    "end": "2309760"
  },
  {
    "text": "this is my table and then you can add edges edges will connect the nodes and",
    "start": "2309760",
    "end": "2316539"
  },
  {
    "text": "you will automatically assume what you want to do so this is an integration this is a rhythm right and this is a",
    "start": "2316539",
    "end": "2322779"
  },
  {
    "text": "rhythm right and then you can just put it whenever you want and then if you want to for",
    "start": "2322779",
    "end": "2328569"
  },
  {
    "text": "example you can say okay I want to add another function that is processing every time I upload so on",
    "start": "2328569",
    "end": "2336130"
  },
  {
    "text": "three so this is my bucket processor and another function will be triggered every",
    "start": "2336130",
    "end": "2342070"
  },
  {
    "text": "time you update dynamodb and this is my table processor so you see you starting",
    "start": "2342070",
    "end": "2349570"
  },
  {
    "text": "to sorry not a DynamoDB but a new function so this is my table processor",
    "start": "2349570",
    "end": "2360360"
  },
  {
    "text": "and again I can just link the edge and we do a lot media and understand this is",
    "start": "2360360",
    "end": "2366550"
  },
  {
    "text": "a trigger and this is a stream of data now that I have everything for now I support not Jes and Python are starting",
    "start": "2366550",
    "end": "2372970"
  },
  {
    "text": "code so let's use not Jes you can output Sam or several as framework are still",
    "start": "2372970",
    "end": "2378850"
  },
  {
    "text": "looking for someone to do the terraform part that's a volunteer I'm always recruiting and this is my my prototype",
    "start": "2378850",
    "end": "2388450"
  },
  {
    "text": "up I can just now click on build and",
    "start": "2388450",
    "end": "2395350"
  },
  {
    "text": "this will download a zip file if I open the zip file I have the starting code",
    "start": "2395350",
    "end": "2402160"
  },
  {
    "text": "for my functions and the yum file is the template so if I go here on the command",
    "start": "2402160",
    "end": "2409150"
  },
  {
    "text": "line and let's go in the downloads my prototype up now I already have this the",
    "start": "2409150",
    "end": "2418480"
  },
  {
    "text": "two comments that was showing before so you see the only thing that changes is",
    "start": "2418480",
    "end": "2424000"
  },
  {
    "text": "the name of the template so template is ok I can just now copy these two comments OOP the editor is fighting back",
    "start": "2424000",
    "end": "2435310"
  },
  {
    "text": "I copy I go here in the command line and now I'm building this in Custis",
    "start": "2435310",
    "end": "2441670"
  },
  {
    "text": "infrastructure and now if I go on the AWS console and I go for cloud formation",
    "start": "2441670",
    "end": "2450640"
  },
  {
    "text": "look for cloud formation in the same region I mean Ireland you see Deb days because I used these",
    "start": "2450640",
    "end": "2457390"
  },
  {
    "text": "days not builders days but I'm creating here you can see all the events so we are",
    "start": "2457390",
    "end": "2463099"
  },
  {
    "text": "creating the dynamo DB table the rolls and here you can see the resources that",
    "start": "2463099",
    "end": "2468470"
  },
  {
    "text": "are being created and if we go when the functional are being created on the",
    "start": "2468470",
    "end": "2474020"
  },
  {
    "text": "lambda console you see the empty function that I have no code and you can start firing up your logic so I think",
    "start": "2474020",
    "end": "2479540"
  },
  {
    "text": "it's it's just a way to make it easier to to use a tablet Sam and then if you",
    "start": "2479540",
    "end": "2484760"
  },
  {
    "text": "change the code here in the directory and run these commands again it will update this so it's basically CI CD very",
    "start": "2484760",
    "end": "2492920"
  },
  {
    "text": "easy to set up and that's what we just built so cloud 9 we saw a little bit of",
    "start": "2492920",
    "end": "2502070"
  },
  {
    "text": "this new cloud development environment inside the lambda console but actually",
    "start": "2502070",
    "end": "2509030"
  },
  {
    "text": "we have also a service where you can have a full environment with direct disk access where you can do a step further",
    "start": "2509030",
    "end": "2516619"
  },
  {
    "text": "so you can do what I just did and instead of using your laptop you can have an integrated development",
    "start": "2516619",
    "end": "2522440"
  },
  {
    "text": "environment in the cloud it's optimized for serverless and the editor is the",
    "start": "2522440",
    "end": "2528619"
  },
  {
    "text": "same as the lambda console but when you use it standalone you have more features what features well one thing that we",
    "start": "2528619",
    "end": "2534710"
  },
  {
    "text": "were thinking about is testing lots of time people say ok well my applications application starts to grow testing is",
    "start": "2534710",
    "end": "2541339"
  },
  {
    "text": "not easy there's of course books written on how to test this ability architecture",
    "start": "2541339",
    "end": "2547280"
  },
  {
    "text": "but what we want to help may be the standard system unit test where you want to test events and see how this event",
    "start": "2547280",
    "end": "2554930"
  },
  {
    "text": "work at function level and normally you can do that with the with lambda maybe",
    "start": "2554930",
    "end": "2562250"
  },
  {
    "text": "you won't test locally without having to go to the cloud when the test events",
    "start": "2562250",
    "end": "2568640"
  },
  {
    "text": "that you want to test must be exactly correct you need to use it the exactly the same syntax that we use so the event",
    "start": "2568640",
    "end": "2574430"
  },
  {
    "text": "that s3 would send to your function or dynamodb would send to your function you need to have something that is exactly",
    "start": "2574430",
    "end": "2580460"
  },
  {
    "text": "the same this is the kind of syntax I'm talking about it's not something that you can just by memory write down so to",
    "start": "2580460",
    "end": "2586760"
  },
  {
    "text": "make it easy we introduced some time ago and Paul Maddox that is today was",
    "start": "2586760",
    "end": "2592810"
  },
  {
    "text": "speaking at the container truck is one of the main outer of this tool and it's a tool that you can install locally can",
    "start": "2592810",
    "end": "2599530"
  },
  {
    "text": "Hamlet lambda function and can help you generate events and can also fully emulate the API gateway locally so you",
    "start": "2599530",
    "end": "2607930"
  },
  {
    "text": "can use some local for example to generate an s3 event you say this is the bucket this is the key of the object",
    "start": "2607930",
    "end": "2614170"
  },
  {
    "text": "inside the bucket and will automatically generate the event that you would receive from s3 and then you can use this event as a text file for your unit",
    "start": "2614170",
    "end": "2621849"
  },
  {
    "text": "test for a distributor for a lambda function it's completely open source",
    "start": "2621849",
    "end": "2627760"
  },
  {
    "text": "it supports Java node.js Python and go we add that go two weeks ago and it's",
    "start": "2627760",
    "end": "2634869"
  },
  {
    "text": "open source on github so again if you want to contribute a give your add more",
    "start": "2634869",
    "end": "2640359"
  },
  {
    "text": "features happy to to get that you can install it very easily so it's written",
    "start": "2640359",
    "end": "2645700"
  },
  {
    "text": "in go it's a test JA JavaScript and you install it with NPM so in there's docker",
    "start": "2645700",
    "end": "2652119"
  },
  {
    "text": "so it's an example of a modern application but with MPM install you can install it locally and then you get",
    "start": "2652119",
    "end": "2658210"
  },
  {
    "text": "these commands so basically you can say same local to run local function let's",
    "start": "2658210",
    "end": "2664900"
  },
  {
    "text": "zoom a little bit you can also validate your template you can also validate your",
    "start": "2664900",
    "end": "2672520"
  },
  {
    "text": "template and then you have package and deploy that are just aliases for the same commands that we use before so the",
    "start": "2672520",
    "end": "2680619"
  },
  {
    "text": "most important common is local and with local you get start a PRI invoke and",
    "start": "2680619",
    "end": "2686470"
  },
  {
    "text": "generate event so invoke will help you invoke directly a function locally we",
    "start": "2686470",
    "end": "2692290"
  },
  {
    "text": "use docker to simulate the same environment so you can run Windows on Mac only nooks but doctor will always",
    "start": "2692290",
    "end": "2697900"
  },
  {
    "text": "recreate the same environment that the lambda function is expecting on AWS you",
    "start": "2697900",
    "end": "2703660"
  },
  {
    "text": "can generate events like this three event a dynamodb event so that you can simulate and create unit test and if you",
    "start": "2703660",
    "end": "2709900"
  },
  {
    "text": "run start API it will start a web server that will emulate the API gateway and if the some",
    "start": "2709900",
    "end": "2716260"
  },
  {
    "text": "templates ask the the configuration of it a gateway those configuration will be put into the web server so you can use",
    "start": "2716260",
    "end": "2723099"
  },
  {
    "text": "the API in test the API invoking the lambda function so it's really powerful and",
    "start": "2723099",
    "end": "2728810"
  },
  {
    "text": "it's already integrated if you use cloud 9 so what's the next step before we do a",
    "start": "2728810",
    "end": "2736220"
  },
  {
    "text": "little bit of hands-on with cloud 9 now you can have a integrated environment",
    "start": "2736220",
    "end": "2741890"
  },
  {
    "text": "you're also in your laptop you can build C icd with those comments that I just",
    "start": "2741890",
    "end": "2746930"
  },
  {
    "text": "show you but probably if you start to work as a team on a large project you need to set up a full continuous",
    "start": "2746930",
    "end": "2753140"
  },
  {
    "text": "integration and continuous deployment pipeline so the idea is that your code will probably be in some git repository",
    "start": "2753140",
    "end": "2759200"
  },
  {
    "text": "you can be github it can be our own private managed git repositories with",
    "start": "2759200",
    "end": "2764750"
  },
  {
    "text": "commits you can even have just a tarball on a street that you send from any services so if you use bitbucket you can",
    "start": "2764750",
    "end": "2771320"
  },
  {
    "text": "just upload it honestly when you give a git commit and then you can trigger",
    "start": "2771320",
    "end": "2776900"
  },
  {
    "text": "automatically code build its our build tool if you want you can use Jenkins",
    "start": "2776900",
    "end": "2781970"
  },
  {
    "text": "normally with serverless you need build if you use Java C sharp if you use non",
    "start": "2781970",
    "end": "2787760"
  },
  {
    "text": "interpretive languages or if you have dependencies that you want to add during",
    "start": "2787760",
    "end": "2793430"
  },
  {
    "text": "a build phase you can use code builder or third-party tools to run automatic tests using the generated events that",
    "start": "2793430",
    "end": "2800420"
  },
  {
    "text": "you put you can do with the you can generate with some local so you can run",
    "start": "2800420",
    "end": "2806360"
  },
  {
    "text": "all your automated tests and then you can use cloud formation as we saw with Sam to do the deployment in in an",
    "start": "2806360",
    "end": "2814340"
  },
  {
    "text": "environment it can be production or can be a test environment and here you can continue for example of a test",
    "start": "2814340",
    "end": "2820070"
  },
  {
    "text": "environment then a manual approval and then the rollout in production so it's quite easy to do it you can design",
    "start": "2820070",
    "end": "2826640"
  },
  {
    "text": "everything here graphically using code pipeline is a service that we created",
    "start": "2826640",
    "end": "2832490"
  },
  {
    "text": "starting from an internal service that we use in Amazon it's called white lines and it's very convenient and if you",
    "start": "2832490",
    "end": "2840140"
  },
  {
    "text": "start using it I think the first five pipelines there's no cost so you can really start without any cost and then",
    "start": "2840140",
    "end": "2845180"
  },
  {
    "text": "eventually you can see if you really start using more if you want to setup everything with just one click we also",
    "start": "2845180",
    "end": "2851930"
  },
  {
    "text": "have a code star is a service that has no cost it's not only for service so you",
    "start": "2851930",
    "end": "2857000"
  },
  {
    "text": "can choose to build a SS lambda or use ec2 or a sequence call you choose the language",
    "start": "2857000",
    "end": "2862710"
  },
  {
    "text": "and we will create the environment the or configuration with code pipeline code",
    "start": "2862710",
    "end": "2867810"
  },
  {
    "text": "built to do continuous integration and continuous deployment so it's a good way to if you want to play with these",
    "start": "2867810",
    "end": "2874320"
  },
  {
    "text": "technologies that normally are very important if you start working as a team without any cost and just to everything",
    "start": "2874320",
    "end": "2882720"
  },
  {
    "text": "is configured for you at the beginning last thing before we do the final demo is safe deployments so in the State of",
    "start": "2882720",
    "end": "2892980"
  },
  {
    "text": "the Union you already heard that now we can handle the deployment of lambda function with canary deployments gradual",
    "start": "2892980",
    "end": "2900150"
  },
  {
    "text": "linear rollouts and this is managed by code deploy the good news is this can",
    "start": "2900150",
    "end": "2905610"
  },
  {
    "text": "also be written inside a same template so that the same template when you do",
    "start": "2905610",
    "end": "2910680"
  },
  {
    "text": "the upgrade with those commands can manage the the canary deployment so this is the normal template we saw it before",
    "start": "2910680",
    "end": "2917160"
  },
  {
    "text": "to create a function with the zip file of the of the code in this case and you can add this section here Global's is a",
    "start": "2917160",
    "end": "2925830"
  },
  {
    "text": "new syntax that we just added to Sam that tells all these parameters must be",
    "start": "2925830",
    "end": "2931770"
  },
  {
    "text": "applied in this case to all the functions so you can put it once otherwise you should have to repeat the",
    "start": "2931770",
    "end": "2937830"
  },
  {
    "text": "same syntax for every function so for all the function how to publish alias that means that we will use the new",
    "start": "2937830",
    "end": "2944400"
  },
  {
    "text": "alias to a to version of a function active at the same time the new version and the old version that was already in",
    "start": "2944400",
    "end": "2950730"
  },
  {
    "text": "production and then there are different deployment strategies basically you can",
    "start": "2950730",
    "end": "2956850"
  },
  {
    "text": "have let's stay here canary or linear deployments so canary 10% and minutes",
    "start": "2956850",
    "end": "2963630"
  },
  {
    "text": "means that the new version will be roll out for 10% of the users and for 10",
    "start": "2963630",
    "end": "2969600"
  },
  {
    "text": "minutes then if everything works it will go to all the users otherwise it's rolled back instead of Kennedy you can",
    "start": "2969600",
    "end": "2976500"
  },
  {
    "text": "also use linear linear for example linear 10 minutes so sorry linear 10",
    "start": "2976500",
    "end": "2982380"
  },
  {
    "text": "percent 5 minutes would mean that every 5 minutes we add 10 percent so it's more",
    "start": "2982380",
    "end": "2987390"
  },
  {
    "text": "slower but more gradual until you reach 100 and if during this deployment there are",
    "start": "2987390",
    "end": "2993810"
  },
  {
    "text": "errors we wrote back and you can catch any custom error using hooks and alarms",
    "start": "2993810",
    "end": "2999630"
  },
  {
    "text": "so hooks are lambda function that you can write that can do any monitoring you",
    "start": "2999630",
    "end": "3005900"
  },
  {
    "text": "want so for example if you do ecommerce you can check that you're actually continuing to selling stuff and the",
    "start": "3005900",
    "end": "3011930"
  },
  {
    "text": "sales didn't drop for some strange reason all searches works on your product catalog it's your code you just",
    "start": "3011930",
    "end": "3018800"
  },
  {
    "text": "need to give an acknowledge that everything is working to the to the deployment to cut the deploy because",
    "start": "3018800",
    "end": "3024260"
  },
  {
    "text": "this is hundreds biko to deploy and then you can also set alarms these are cloud watch alarms that can monitor any metric",
    "start": "3024260",
    "end": "3031070"
  },
  {
    "text": "and if one of this metric is giving you some like the latency of the API gateway is increasing beyond ten seconds or the",
    "start": "3031070",
    "end": "3039200"
  },
  {
    "text": "latency on the database is growing because maybe I start to do much more writes on the database because I made a",
    "start": "3039200",
    "end": "3045080"
  },
  {
    "text": "mistake in my code these alarms can fire so if any function or alarm gives an error we will automatically roll back",
    "start": "3045080",
    "end": "3052100"
  },
  {
    "text": "the deployment for you so it's those two comments before and then you can add",
    "start": "3052100",
    "end": "3058490"
  },
  {
    "text": "these to manage canary or linearly deployments for your free infrastructure and you can still monitor graphically",
    "start": "3058490",
    "end": "3065300"
  },
  {
    "text": "what's happening from clouds the block of some code deploy so if you go on the code deployed console you still see the old deployment as you saw before it the",
    "start": "3065300",
    "end": "3071960"
  },
  {
    "text": "State of the Union with the gradual tests so let's see yes yes yes so let's",
    "start": "3071960",
    "end": "3081530"
  },
  {
    "text": "let's see how a little bit of cloud nine and some local on the console so here I",
    "start": "3081530",
    "end": "3088190"
  },
  {
    "text": "already have cloud nine open this is an environment that I have so you see it's",
    "start": "3088190",
    "end": "3094310"
  },
  {
    "text": "like an editor here I can have files and here I have a SS resources so let's go",
    "start": "3094310",
    "end": "3100010"
  },
  {
    "text": "for a moment back on the lambda console and let's take this function that I have",
    "start": "3100010",
    "end": "3106730"
  },
  {
    "text": "here that is called with great fantasy read right from DynamoDB and this is",
    "start": "3106730",
    "end": "3113960"
  },
  {
    "text": "just reading and writing from dynamodb so it's exposed as an API if I didn't",
    "start": "3113960",
    "end": "3119930"
  },
  {
    "text": "make mistakes and it's writing logs it's writing maybe and it's also using x-ray x-ray is",
    "start": "3119930",
    "end": "3127350"
  },
  {
    "text": "our monitoring and tracing framework for distributed application what does mean",
    "start": "3127350",
    "end": "3132420"
  },
  {
    "text": "so let's call this function so I select API gateway I go here we have the URL of",
    "start": "3132420",
    "end": "3138180"
  },
  {
    "text": "the service and I know that if I pass like a needy I can read the other so for",
    "start": "3138180",
    "end": "3145950"
  },
  {
    "text": "example now I passed it D 1 2 3 and I'm reading from the know D be an item with",
    "start": "3145950",
    "end": "3151109"
  },
  {
    "text": "ID 1 2 3 and I get the OL item from dynamo DB and I can reload this function",
    "start": "3151109",
    "end": "3157380"
  },
  {
    "text": "a few times now if I go on the lamda console I can go on the monitoring tab",
    "start": "3157380",
    "end": "3163260"
  },
  {
    "text": "and the monitoring tab will tell you the invocation of the function how much the",
    "start": "3163260",
    "end": "3169920"
  },
  {
    "text": "is the duration of the function if there are any errors throttled dlq errors",
    "start": "3169920",
    "end": "3176310"
  },
  {
    "text": "there's lots of information here now you can also select here an interval and",
    "start": "3176310",
    "end": "3181800"
  },
  {
    "text": "then click to jumps to logs and it will open automatically CloudWatch Logs with this interval selected so you can see",
    "start": "3181800",
    "end": "3187740"
  },
  {
    "text": "only the logs during this interval and here you can also see the traces in",
    "start": "3187740",
    "end": "3192990"
  },
  {
    "text": "x-ray so I enabled X ray tracing so if we go on x-ray we see that we received",
    "start": "3192990",
    "end": "3198720"
  },
  {
    "text": "some events and I can go on service map and this is now computing the map over",
    "start": "3198720",
    "end": "3205050"
  },
  {
    "text": "my distributed architecture for now it's just a lambda function so we see that I have clients that call this is a SS",
    "start": "3205050",
    "end": "3212460"
  },
  {
    "text": "lambda and lambda is calling a lambda function so here you can also see the cold star because here you can see the",
    "start": "3212460",
    "end": "3218820"
  },
  {
    "text": "time that is spent inside the lambda process the service and what's inside this time spent in the function and here",
    "start": "3218820",
    "end": "3226800"
  },
  {
    "text": "you can see all the information on how the distribution of the time works in the traces here you can also see how the",
    "start": "3226800",
    "end": "3234270"
  },
  {
    "text": "time is spent so for example this difference here is the cold star that in",
    "start": "3234270",
    "end": "3240240"
  },
  {
    "text": "this case is not a cold star because the function is warm is like two slightly more than two milliseconds but as you",
    "start": "3240240",
    "end": "3248640"
  },
  {
    "text": "can see there's no dynamodb here then mu DB is not part of the equation why there's no dynamo DB because what i did",
    "start": "3248640",
    "end": "3255270"
  },
  {
    "text": "is that i enabled in the configuration here of the",
    "start": "3255270",
    "end": "3261539"
  },
  {
    "text": "function debugging and error handling",
    "start": "3261539",
    "end": "3266819"
  },
  {
    "text": "iein enabled active tracing so now this function is monitored but this is just a",
    "start": "3266819",
    "end": "3273960"
  },
  {
    "text": "lambda configuration if I want to understand what's happening with the other services that this function is",
    "start": "3273960",
    "end": "3279509"
  },
  {
    "text": "using I need to monitor what the AWS SDK is doing so here if you see at the",
    "start": "3279509",
    "end": "3284940"
  },
  {
    "text": "beginning is where I create the SS SDK so this is JavaScript that is similar in",
    "start": "3284940",
    "end": "3290700"
  },
  {
    "text": "any language if I want to model what's happening here I can just comment this",
    "start": "3290700",
    "end": "3295710"
  },
  {
    "text": "line and use the AWS x-ray SDK and then the SS x-ray SDK is going to capture",
    "start": "3295710",
    "end": "3303539"
  },
  {
    "text": "everything that the SS SDK is doing and it's doing tracing not on every action",
    "start": "3303539",
    "end": "3309059"
  },
  {
    "text": "normally you might have one five percent of the traffic because you only need statistics here and this is very easy",
    "start": "3309059",
    "end": "3318059"
  },
  {
    "text": "but there is a catch so I need to add a new module to my code the AWS x-ray SDK",
    "start": "3318059",
    "end": "3325440"
  },
  {
    "text": "and normally that means that I can work in the console anymore I need to go locally on my laptop install the file",
    "start": "3325440",
    "end": "3330960"
  },
  {
    "text": "and upload it lightly now we have code 9 so let's go so I save it like this I go",
    "start": "3330960",
    "end": "3338519"
  },
  {
    "text": "back on code 9 that was here I can go on",
    "start": "3338519",
    "end": "3344670"
  },
  {
    "text": "AWS resources and I can see all the function that I have here in my file in my region",
    "start": "3344670",
    "end": "3350730"
  },
  {
    "text": "I mean I've learned I can now download this lambda function and import it",
    "start": "3350730",
    "end": "3356160"
  },
  {
    "text": "locally so now it's inside my IDE I can go here and see that ok I already am",
    "start": "3356160",
    "end": "3364140"
  },
  {
    "text": "using the SDK but I don't have this SDK installed so I can go here I have a full",
    "start": "3364140",
    "end": "3369690"
  },
  {
    "text": "prompt I can go inside my function and I",
    "start": "3369690",
    "end": "3374789"
  },
  {
    "text": "can run in this case it's NPM install and the SDK but you can use maven or",
    "start": "3374789",
    "end": "3379859"
  },
  {
    "text": "whatever tool you want and you see now I have here a directory with the node modules that are being installed as",
    "start": "3379859",
    "end": "3387420"
  },
  {
    "text": "usually with nodejs if you start one thing 200 dependencies but it's another",
    "start": "3387420",
    "end": "3392970"
  },
  {
    "text": "problem and now I have the dependency here everything is here I can test the",
    "start": "3392970",
    "end": "3398070"
  },
  {
    "text": "function locally if you want using some local so I can put a breakpoint here and",
    "start": "3398070",
    "end": "3405150"
  },
  {
    "text": "then I can click here and say I want to run locally you can also emulate the API gateway if locally if you want so I can",
    "start": "3405150",
    "end": "3413970"
  },
  {
    "text": "now run I can use the debugger and now I can run and okay there's like some error",
    "start": "3413970",
    "end": "3426210"
  },
  {
    "text": "because probably I missed a package or something but I can now step across the",
    "start": "3426210",
    "end": "3433500"
  },
  {
    "text": "code and see the variables here that are used so everything is like in a normal",
    "start": "3433500",
    "end": "3439860"
  },
  {
    "text": "the bugger so just to make it quick and I don't want to steal time from your",
    "start": "3439860",
    "end": "3445830"
  },
  {
    "text": "lunch let's deploy deploy back the function with all the dependents installed to lambda and it's very fast",
    "start": "3445830",
    "end": "3453060"
  },
  {
    "text": "because I'm inside the region so the network is very fast I can go back here just for avoiding any issue I just I",
    "start": "3453060",
    "end": "3460950"
  },
  {
    "text": "reload the lambda function and now you see this is the same editor and how I",
    "start": "3460950",
    "end": "3466770"
  },
  {
    "text": "have the the node modules also here so I can work with single files",
    "start": "3466770",
    "end": "3471960"
  },
  {
    "text": "I just can't install packages from the console and what I can do now I can go here on the so this is now saved already",
    "start": "3471960",
    "end": "3480360"
  },
  {
    "text": "I can go here on the API as before I can reload my API a few time it's working so",
    "start": "3480360",
    "end": "3488490"
  },
  {
    "text": "I didn't make mistake that broke the API code let's load a little bit more now we",
    "start": "3488490",
    "end": "3496080"
  },
  {
    "text": "can go in x-ray and see if we in the matter of a few second we still should",
    "start": "3496080",
    "end": "3503010"
  },
  {
    "text": "start to see the new stuff coming now I can go in service map I can reload the",
    "start": "3503010",
    "end": "3510810"
  },
  {
    "text": "map is updating and now since we are tracing the SDK we should see any dependency so you see now the lambda is",
    "start": "3510810",
    "end": "3518070"
  },
  {
    "text": "calling the lambda function a lambda function is calling dynamodb I can see also the performance of the nodb how that is affecting my function if I",
    "start": "3518070",
    "end": "3525690"
  },
  {
    "text": "have air or throttles in any of this point this works and of course if you have a much more complex application",
    "start": "3525690",
    "end": "3531930"
  },
  {
    "text": "with different modules this is more interesting this is not only server s it works also with containers with any you",
    "start": "3531930",
    "end": "3538440"
  },
  {
    "text": "can use the x-ray SD could even outside of AWS it just is a tracing mechanism to",
    "start": "3538440",
    "end": "3543840"
  },
  {
    "text": "learn how your application is behaving so what are the takeaways of this first",
    "start": "3543840",
    "end": "3550530"
  },
  {
    "text": "presentation if you want to start quickly with small application just one",
    "start": "3550530",
    "end": "3555690"
  },
  {
    "text": "or two function you can use the lambda console create your test case there is very fast then if you grow maybe five",
    "start": "3555690",
    "end": "3562260"
  },
  {
    "text": "functions start to use as a double SSM to describe your architecture in a template you can use my tool if you want",
    "start": "3562260",
    "end": "3568350"
  },
  {
    "text": "to create the initial template then it's easy to edit you can use some local to",
    "start": "3568350",
    "end": "3573510"
  },
  {
    "text": "generate local events build your system unit test and even test locally if you want if you want to have a fully",
    "start": "3573510",
    "end": "3580650"
  },
  {
    "text": "featured integrated environment you can use cloud 9 cloud 9 is using an ec2",
    "start": "3580650",
    "end": "3586050"
  },
  {
    "text": "instance underneath that is managed by 12 9 so cloud 9 itself has no cost you",
    "start": "3586050",
    "end": "3591930"
  },
  {
    "text": "pay for the ec2 instance that you use and the a cloud 9 is automatically shutting down the instance after 30",
    "start": "3591930",
    "end": "3597720"
  },
  {
    "text": "minutes if you don't use it so you really pay if you do the computation it's the cost of ec2 even if you use it",
    "start": "3597720",
    "end": "3605100"
  },
  {
    "text": "8 hours per day during a working week it's like probably a couple of pounds if",
    "start": "3605100",
    "end": "3610230"
  },
  {
    "text": "not less paramount cloud man itself has no cost if you want you can also connect cloud 9 to any virtual server you have",
    "start": "3610230",
    "end": "3617490"
  },
  {
    "text": "available on the internet or even local yet at home because it just needs a",
    "start": "3617490",
    "end": "3622500"
  },
  {
    "text": "Linux machine to connect using SSH and then if you go beyond build your continuous integration continuous",
    "start": "3622500",
    "end": "3628619"
  },
  {
    "text": "deployment pipeline work as a team deploy in a shared code repository and",
    "start": "3628619",
    "end": "3634109"
  },
  {
    "text": "so on and with this I'm finishing the first session for that I did on the",
    "start": "3634109",
    "end": "3640230"
  },
  {
    "text": "server last truck this was focused on the development the next session after",
    "start": "3640230",
    "end": "3645300"
  },
  {
    "text": "lunch will be for who's more on the architecture so how we can use these technologies to build",
    "start": "3645300",
    "end": "3651710"
  },
  {
    "text": "architectures in different use cases and we as you learning more from our customers so now",
    "start": "3651710",
    "end": "3658700"
  },
  {
    "text": "with us a lunch we have one hour of breaking we start at 1:30 thank you [Applause]",
    "start": "3658700",
    "end": "3667040"
  }
]