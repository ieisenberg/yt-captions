[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "[Music]",
    "start": "640",
    "end": "4170"
  },
  {
    "text": "hi I'm Stephanie shoe from Amazon Web",
    "start": "4170",
    "end": "6790"
  },
  {
    "text": "Services today I'm going to show you how",
    "start": "6790",
    "end": "8769"
  },
  {
    "text": "you can run your time-bound apps with",
    "start": "8769",
    "end": "10570"
  },
  {
    "text": "spot instances in case you're new to",
    "start": "10570",
    "end": "12580"
  },
  {
    "start": "12000",
    "end": "47000"
  },
  {
    "text": "spot let's start with the basics spot",
    "start": "12580",
    "end": "14889"
  },
  {
    "text": "instances are spare ec2 capacity that",
    "start": "14889",
    "end": "17650"
  },
  {
    "text": "are available to use at savings up up to",
    "start": "17650",
    "end": "19570"
  },
  {
    "text": "90% off on-demand prices if we need the",
    "start": "19570",
    "end": "22660"
  },
  {
    "text": "capacity back we'll give you a",
    "start": "22660",
    "end": "24100"
  },
  {
    "text": "two-minute warning",
    "start": "24100",
    "end": "25090"
  },
  {
    "text": "spot instances are a great way to",
    "start": "25090",
    "end": "26890"
  },
  {
    "text": "optimize your costs on AWS cloud or",
    "start": "26890",
    "end": "29170"
  },
  {
    "text": "scale your applications throughput up to",
    "start": "29170",
    "end": "31570"
  },
  {
    "text": "10x for the same budget while",
    "start": "31570",
    "end": "33910"
  },
  {
    "text": "interruptions are rare it can happen but",
    "start": "33910",
    "end": "35890"
  },
  {
    "text": "that doesn't mean you can't run your",
    "start": "35890",
    "end": "37240"
  },
  {
    "text": "time-bound applications on spot in this",
    "start": "37240",
    "end": "39700"
  },
  {
    "text": "video I will share some best practices",
    "start": "39700",
    "end": "41530"
  },
  {
    "text": "to follow on how to architect your",
    "start": "41530",
    "end": "43000"
  },
  {
    "text": "applications to minimize the chances of",
    "start": "43000",
    "end": "45070"
  },
  {
    "text": "this occurring so what's a time down",
    "start": "45070",
    "end": "47260"
  },
  {
    "start": "47000",
    "end": "88000"
  },
  {
    "text": "application let's start by clarifying",
    "start": "47260",
    "end": "49300"
  },
  {
    "text": "what I mean workloads can be broken into",
    "start": "49300",
    "end": "52030"
  },
  {
    "text": "two categories time insensitive and time",
    "start": "52030",
    "end": "54760"
  },
  {
    "text": "sensitive time insensitive workloads",
    "start": "54760",
    "end": "57220"
  },
  {
    "text": "include experiments test eV and one-time",
    "start": "57220",
    "end": "59920"
  },
  {
    "text": "queries",
    "start": "59920",
    "end": "60489"
  },
  {
    "text": "these are workloads that don't have a",
    "start": "60489",
    "end": "62410"
  },
  {
    "text": "defined SLA on the other hand time",
    "start": "62410",
    "end": "65440"
  },
  {
    "text": "sensitive workloads such as Web Services",
    "start": "65440",
    "end": "67390"
  },
  {
    "text": "API is Big Data grid computing and",
    "start": "67390",
    "end": "70390"
  },
  {
    "text": "containers do and it is critical for",
    "start": "70390",
    "end": "72490"
  },
  {
    "text": "application teams to have confidence",
    "start": "72490",
    "end": "74320"
  },
  {
    "text": "that workloads will complete in a",
    "start": "74320",
    "end": "75970"
  },
  {
    "text": "specified time frame and that required",
    "start": "75970",
    "end": "78040"
  },
  {
    "text": "ec2 capacity will remain available spot",
    "start": "78040",
    "end": "81610"
  },
  {
    "text": "instances work great for both types of",
    "start": "81610",
    "end": "83530"
  },
  {
    "text": "workloads but today I'll be focusing on",
    "start": "83530",
    "end": "85810"
  },
  {
    "text": "time-sensitive applications there are",
    "start": "85810",
    "end": "88630"
  },
  {
    "start": "88000",
    "end": "140000"
  },
  {
    "text": "some best practices for time-sensitive",
    "start": "88630",
    "end": "90280"
  },
  {
    "text": "apps to keep in mind that will maximize",
    "start": "90280",
    "end": "92619"
  },
  {
    "text": "your success first you want your",
    "start": "92619",
    "end": "94930"
  },
  {
    "text": "application to be stateless this will",
    "start": "94930",
    "end": "97210"
  },
  {
    "text": "allow you to easily redeploy your",
    "start": "97210",
    "end": "98740"
  },
  {
    "text": "workload to another instance type if you",
    "start": "98740",
    "end": "100840"
  },
  {
    "text": "do happen to be interrupted second your",
    "start": "100840",
    "end": "103840"
  },
  {
    "text": "application must be fault tolerant as I",
    "start": "103840",
    "end": "106510"
  },
  {
    "text": "mentioned earlier AWS can reclaim spot",
    "start": "106510",
    "end": "108909"
  },
  {
    "text": "capacity when needed so it is important",
    "start": "108909",
    "end": "111070"
  },
  {
    "text": "that your application can withstand",
    "start": "111070",
    "end": "112409"
  },
  {
    "text": "interruption without disrupting your end",
    "start": "112409",
    "end": "114939"
  },
  {
    "text": "users third it's best if your",
    "start": "114939",
    "end": "117400"
  },
  {
    "text": "application can support multiple",
    "start": "117400",
    "end": "119020"
  },
  {
    "text": "availability zones and lastly your",
    "start": "119020",
    "end": "121420"
  },
  {
    "text": "application should be loosely coupled so",
    "start": "121420",
    "end": "123610"
  },
  {
    "text": "that you don't run the risk of crashing",
    "start": "123610",
    "end": "125020"
  },
  {
    "text": "the entire application if a single node",
    "start": "125020",
    "end": "127390"
  },
  {
    "text": "dies okay now you know what types of",
    "start": "127390",
    "end": "129849"
  },
  {
    "text": "applications work best on spot",
    "start": "129849",
    "end": "131890"
  },
  {
    "text": "let's switch gears to focus on what the",
    "start": "131890",
    "end": "133990"
  },
  {
    "text": "right number of instance sizes or",
    "start": "133990",
    "end": "135700"
  },
  {
    "text": "families is to use to maximize",
    "start": "135700",
    "end": "137140"
  },
  {
    "text": "availability for your time bound",
    "start": "137140",
    "end": "138910"
  },
  {
    "text": "application the best way to think about",
    "start": "138910",
    "end": "141370"
  },
  {
    "start": "140000",
    "end": "173000"
  },
  {
    "text": "this is in terms of capacity pools to",
    "start": "141370",
    "end": "144310"
  },
  {
    "text": "determine the number of capacity pools",
    "start": "144310",
    "end": "145840"
  },
  {
    "text": "you have available for your application",
    "start": "145840",
    "end": "147600"
  },
  {
    "text": "calculate the number of instant sizes",
    "start": "147600",
    "end": "150130"
  },
  {
    "text": "you can use for your workload times the",
    "start": "150130",
    "end": "152470"
  },
  {
    "text": "number of instance families you can use",
    "start": "152470",
    "end": "154090"
  },
  {
    "text": "times the number of availability zones",
    "start": "154090",
    "end": "156310"
  },
  {
    "text": "and that's your total number of capacity",
    "start": "156310",
    "end": "158500"
  },
  {
    "text": "pools there's no perfect number of",
    "start": "158500",
    "end": "161080"
  },
  {
    "text": "capacity pools but in general we advise",
    "start": "161080",
    "end": "163390"
  },
  {
    "text": "you have between 3 to 21 capacity pools",
    "start": "163390",
    "end": "166030"
  },
  {
    "text": "for your application to minimize the",
    "start": "166030",
    "end": "168310"
  },
  {
    "text": "impact of an interruption occurring if",
    "start": "168310",
    "end": "170110"
  },
  {
    "text": "we need to take back capacity on a",
    "start": "170110",
    "end": "172180"
  },
  {
    "text": "specific instance type if the idea of",
    "start": "172180",
    "end": "174580"
  },
  {
    "start": "173000",
    "end": "232000"
  },
  {
    "text": "managing multiple instance types and",
    "start": "174580",
    "end": "176320"
  },
  {
    "text": "sizes sounds complex take a look at spot",
    "start": "176320",
    "end": "178870"
  },
  {
    "text": "Fleet spot fleet will automate the",
    "start": "178870",
    "end": "181090"
  },
  {
    "text": "management of spot instances based on",
    "start": "181090",
    "end": "183370"
  },
  {
    "text": "your specific requirements and",
    "start": "183370",
    "end": "184660"
  },
  {
    "text": "thresholds and it will detect disrupted",
    "start": "184660",
    "end": "186970"
  },
  {
    "text": "instances and automatically replace them",
    "start": "186970",
    "end": "188950"
  },
  {
    "text": "to ensure that your application gets the",
    "start": "188950",
    "end": "191350"
  },
  {
    "text": "desired amount of compute capacity with",
    "start": "191350",
    "end": "194080"
  },
  {
    "text": "spot FLE you can launch thousands of",
    "start": "194080",
    "end": "196180"
  },
  {
    "text": "spot instances with a single API call",
    "start": "196180",
    "end": "198690"
  },
  {
    "text": "optimized based on price versus",
    "start": "198690",
    "end": "200769"
  },
  {
    "text": "availability and create your own",
    "start": "200769",
    "end": "202540"
  },
  {
    "text": "capacity units based on your application",
    "start": "202540",
    "end": "204600"
  },
  {
    "text": "requirements for time-sensitive apps we",
    "start": "204600",
    "end": "207430"
  },
  {
    "text": "recommend optimizing your fleet based on",
    "start": "207430",
    "end": "209500"
  },
  {
    "text": "availability to diversify across",
    "start": "209500",
    "end": "211510"
  },
  {
    "text": "multiple instance pools and utilize",
    "start": "211510",
    "end": "213970"
  },
  {
    "text": "instances least likely to be disrupted",
    "start": "213970",
    "end": "216070"
  },
  {
    "text": "in this video I've provided you with",
    "start": "216070",
    "end": "218230"
  },
  {
    "text": "best practices for running time bound",
    "start": "218230",
    "end": "220019"
  },
  {
    "text": "applications on spot to learn more about",
    "start": "220019",
    "end": "222850"
  },
  {
    "text": "ec2 spot instances visit aws.amazon.com",
    "start": "222850",
    "end": "227260"
  },
  {
    "text": "forward slash ec2 forward slash spot",
    "start": "227260",
    "end": "230170"
  },
  {
    "text": "thanks for watching",
    "start": "230170",
    "end": "231470"
  },
  {
    "text": "[Music]",
    "start": "231470",
    "end": "234610"
  }
]