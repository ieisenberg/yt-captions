[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "Welcome to another episode of 'Back to Basics'. I am Bhavisha Dawada, a Solutions Architect here at Amazon Web Services.",
    "start": "6275",
    "end": "14837"
  },
  {
    "text": "In this episode, we are going to talk about how you can \nreduce the cost of your Elastic Cloud Compute",
    "start": "14838",
    "end": "22021"
  },
  {
    "text": "(EC2) and Relational Database Service (RDS) instances by \nautomatically scheduling the start and stop of those instances.",
    "start": "22021",
    "end": "31098"
  },
  {
    "text": "Before we dive into the architecture, \nlet's look at some common use cases.",
    "start": "31666",
    "end": "35906"
  },
  {
    "text": "Let's say an organization like yours would like to stop graphic \nintensive resources outside of the working schedule,",
    "start": "36315",
    "end": "43782"
  },
  {
    "text": "or a testing team at your organization would like to stop \nRDS instances outside of there testing schedule.",
    "start": "43783",
    "end": "50724"
  },
  {
    "text": "You can achieve this by using \na variety of AWS services.",
    "start": "51380",
    "end": "55429"
  },
  {
    "text": "Let's look at an end-to-end architecture \nby using Amazon DynamoDB",
    "start": "56020",
    "end": "60617"
  },
  {
    "text": "and AWS Lambda to configure start and \nstop of your EC2 and RDS instances.",
    "start": "60617",
    "end": "66800"
  },
  {
    "start": "67000",
    "end": "123000"
  },
  {
    "text": "You first define a tag key to identify applicable \nAmazon EC2 and Amazon RDS instances.",
    "start": "68478",
    "end": "76354"
  },
  {
    "text": "You then define an Amazon DynamoDB table \nthat contains the schedule information.",
    "start": "77437",
    "end": "83088"
  },
  {
    "text": "For example, define a schedule for \nMonday to Friday 9am to 5pm.",
    "start": "83687",
    "end": "89868"
  },
  {
    "text": "AWS Lambda, which is an event driven serverless compute platform will retrieve the schedule that's defined in an Amazon DynamoDB table",
    "start": "91003",
    "end": "100188"
  },
  {
    "text": "and perform the appropriate action \nof stopping or starting the instances.",
    "start": "100189",
    "end": "104937"
  },
  {
    "text": "You can set up an CloudWatch event to run \nat a customer defined interval.",
    "start": "105382",
    "end": "110173"
  },
  {
    "text": "This event invokes the \nAWS Lambda function.",
    "start": "110173",
    "end": "113858"
  },
  {
    "text": "Optionally, you can set up Simple Notification Service (SNS)\nto receive notification when an action is performed.",
    "start": "113859",
    "end": "122660"
  },
  {
    "start": "123000",
    "end": "178000"
  },
  {
    "text": "Now that you understand how to reduce operational costs using individual AWS services like AWS Lambda and Amazon Dynamo DB,",
    "start": "124168",
    "end": "134491"
  },
  {
    "text": "building your own solution with individual services requires you \nto configure multiple services and manage the deployment.",
    "start": "135083",
    "end": "143461"
  },
  {
    "text": "Often customers ask me is there an easy way \nto deploy an end-to-end solution?",
    "start": "143461",
    "end": "149097"
  },
  {
    "text": "And yes, AWS Solutions is an open source library \nto help you build faster with the AWS platform.",
    "start": "149098",
    "end": "157195"
  },
  {
    "text": "If you use the analogy of building a car, rather than buying the wheel, \nthe door, the engine, you prefer buying a prebuilt car.",
    "start": "157931",
    "end": "166814"
  },
  {
    "text": "Think of solutions just like this prebuilt car \nwith customization capabilities,",
    "start": "167598",
    "end": "172749"
  },
  {
    "text": "where you can use solutions as is \nor with minor customization.",
    "start": "172749",
    "end": "177810"
  },
  {
    "start": "178000",
    "end": "262000"
  },
  {
    "text": "AWS Instance Scheduler is an example of a\nsolution offered in the AWS Solutions library.",
    "start": "178572",
    "end": "184853"
  },
  {
    "text": "AWS Instance Scheduler can help you reduce costs \nof your Amazon EC2 and Amazon RDS instances",
    "start": "185614",
    "end": "193103"
  },
  {
    "text": "by automatically starting and stopping instances \nusing a scheduled configuration.",
    "start": "193103",
    "end": "198757"
  },
  {
    "text": "You can deploy Instant Scheduler using the solutions implementation guide, and the accompanying AWS CloudFormation Template.",
    "start": "198757",
    "end": "207310"
  },
  {
    "text": "The CloudFormation template launches,\n configures, and runs the AWS services",
    "start": "207310",
    "end": "213176"
  },
  {
    "text": "required to deploy the solution using AWS \nbest practices for security and availability.",
    "start": "213176",
    "end": "219649"
  },
  {
    "text": "One thing to note, you are responsible for the cost of AWS \nservices while running AWS Instance Scheduler.",
    "start": "220176",
    "end": "227644"
  },
  {
    "text": "In this episode, you learned how you can reduce the \ncost of Amazon EC2 or Amazon RDS instances",
    "start": "228535",
    "end": "236405"
  },
  {
    "text": "by either building your own solution \nusing AWS services",
    "start": "236405",
    "end": "240593"
  },
  {
    "text": "or using a prebuilt solution called Instant Scheduler \nfrom the AWS Solutions library.",
    "start": "240593",
    "end": "246607"
  },
  {
    "text": "For more information, check out the links below. \nThank you for watching, 'Back to Basics' and see you next time.",
    "start": "247527",
    "end": "254327"
  }
]