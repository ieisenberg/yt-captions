[
  {
    "text": "so we can go ahead and get",
    "start": "320",
    "end": "3639"
  },
  {
    "text": "started hi everyone welcome thank you all for being here my name is James ziny",
    "start": "5879",
    "end": "12440"
  },
  {
    "text": "I am a software development engineer with AWS developer resources I work on Botto the python SDK",
    "start": "12440",
    "end": "19600"
  },
  {
    "text": "for AWS as well as the python container for elastic beant stock which is what",
    "start": "19600",
    "end": "25080"
  },
  {
    "text": "I'm going to talk about today and specifically I'd like to show you the",
    "start": "25080",
    "end": "30119"
  },
  {
    "text": "process of deploying two python applications and we'll see what it looks like to go from running locally on my",
    "start": "30119",
    "end": "36680"
  },
  {
    "text": "development machine to deployed and running on AWS so before we talk about how to",
    "start": "36680",
    "end": "44399"
  },
  {
    "text": "deploy python applications we can first talk about what deployment is and what",
    "start": "44399",
    "end": "49559"
  },
  {
    "text": "are the components involved in a secure robust scalable deployment process so if",
    "start": "49559",
    "end": "56399"
  },
  {
    "text": "we start with the application given I have an application one of the first things we'll need is a machine to run",
    "start": "56399",
    "end": "63239"
  },
  {
    "text": "our application preferably more than one and for each of these machines we're going to need to provision them in a",
    "start": "63239",
    "end": "70200"
  },
  {
    "text": "specific way we might need a web server or any other miscellaneous OS packages",
    "start": "70200",
    "end": "77320"
  },
  {
    "text": "and given that we're specifically focusing on python applications we'll need Python and enough of the Tooling in",
    "start": "77320",
    "end": "84600"
  },
  {
    "text": "place to be able to install any python packages our application might depend on",
    "start": "84600",
    "end": "91119"
  },
  {
    "text": "we also want some way to store data so we'd ideally like some sort of",
    "start": "91119",
    "end": "96520"
  },
  {
    "text": "database and on top of these resources we would like to have some sort of",
    "start": "96520",
    "end": "101880"
  },
  {
    "text": "monitoring in place and even better if it can tell us when we go above and below certain thresholds and have",
    "start": "101880",
    "end": "109040"
  },
  {
    "text": "actions automatically take place so for example if my application is using too much CPU we could create a new instance",
    "start": "109040",
    "end": "117079"
  },
  {
    "text": "provision it with our web server and then go ahead and start sending some traffic to it to help with the",
    "start": "117079",
    "end": "122920"
  },
  {
    "text": "load so we also want to consider things like high availability deploying to multiple availability zones as well as",
    "start": "122920",
    "end": "131039"
  },
  {
    "text": "security groups to authorize our application to talk to other resources and then of course just miscellaneous",
    "start": "131039",
    "end": "136879"
  },
  {
    "text": "configuration like the load balancer and DNS configuration now all of this is for a",
    "start": "136879",
    "end": "143360"
  },
  {
    "text": "single what we'll call environment so you can imagine I might have a production environment I might have a",
    "start": "143360",
    "end": "149920"
  },
  {
    "text": "staging environment and maybe an integration and a development environment so this is a lot of",
    "start": "149920",
    "end": "156400"
  },
  {
    "text": "components a lot of moving Parts a lot of interconnected parts and we might",
    "start": "156400",
    "end": "162000"
  },
  {
    "text": "think that because there's just so much involved in a lot that we have to do that deployment is",
    "start": "162000",
    "end": "168680"
  },
  {
    "text": "hard but I think that with the help of AWS elastic beant stock we can see how",
    "start": "168680",
    "end": "174400"
  },
  {
    "text": "we can deploy our applications in a simple and straightforward process and",
    "start": "174400",
    "end": "180239"
  },
  {
    "text": "take advantage of all of these components that we just saw so with that being said let's jump right into our",
    "start": "180239",
    "end": "186000"
  },
  {
    "text": "first application the first of two this is a um URL short neur call it short",
    "start": "186000",
    "end": "191760"
  },
  {
    "text": "flask it's written using the flask web framework and it's using Amazon Dynamo",
    "start": "191760",
    "end": "196840"
  },
  {
    "text": "DB for the data um if you're not familiar with Amazon Dynamo DB it's a",
    "start": "196840",
    "end": "203360"
  },
  {
    "text": "nosql uh storage you can store Key vals here um and the basic functionality of",
    "start": "203360",
    "end": "209560"
  },
  {
    "text": "this application just to give you an example is you can give it a query parameter here of URL it gives you a",
    "start": "209560",
    "end": "216920"
  },
  {
    "text": "Json response back this is a common format used by a lot of URL shorteners and then if we then request that we get",
    "start": "216920",
    "end": "222959"
  },
  {
    "text": "our redirect there's also things like tracking analytics how many times um a",
    "start": "222959",
    "end": "228159"
  },
  {
    "text": "URL has been looked up that kind of thing so if we start with this idea that",
    "start": "228159",
    "end": "235040"
  },
  {
    "text": "I've checked out the code get clone repo and it's sitting on my machine first thing we want to do before we worry",
    "start": "235040",
    "end": "240840"
  },
  {
    "text": "about deployment is how do we get it running locally so what do we need to do to get our application with a",
    "start": "240840",
    "end": "247439"
  },
  {
    "text": "development server running so we can try it out so before we do that we'll just review some of the Python tools that we",
    "start": "247439",
    "end": "255040"
  },
  {
    "text": "use and most of you guys are probably python people um we'll go pretty quickly through this but the tools I want to go",
    "start": "255040",
    "end": "261720"
  },
  {
    "text": "over here are pip which installs our packages virtual lamp isolates them get",
    "start": "261720",
    "end": "267440"
  },
  {
    "text": "stores revisions of our apps we can also push and pull to remote locations here and then EB which I've um singled out",
    "start": "267440",
    "end": "274479"
  },
  {
    "text": "here is a tool that's um specifically provided by the elastic bean stock team and it's something that we're going to",
    "start": "274479",
    "end": "280240"
  },
  {
    "text": "use to manage our environments so pip installs python",
    "start": "280240",
    "end": "286400"
  },
  {
    "text": "packages basic usage give it a module name you can import it and then print the module object and if we see here one",
    "start": "286400",
    "end": "293919"
  },
  {
    "text": "of the problems is that there's this user local lib python so in any",
    "start": "293919",
    "end": "299000"
  },
  {
    "text": "interpreter if I try to import flask it will be able to find that module so if we have a use",
    "start": "299000",
    "end": "305199"
  },
  {
    "text": "case where perhaps we have two separate applications depending on different versions of flask um we can use Virtual",
    "start": "305199",
    "end": "312520"
  },
  {
    "text": "M to solve that problem so in this case I'll have two isolated environments their own lib directory their own bin",
    "start": "312520",
    "end": "319440"
  },
  {
    "text": "directory their own copy of the Python interpreter and give it a directory name if you want",
    "start": "319440",
    "end": "326039"
  },
  {
    "text": "to create it then there's a script you can source to act acate this virtual environment we look where python is it's",
    "start": "326039",
    "end": "332840"
  },
  {
    "text": "in that directory we've created and pip which is then bundled with the virtual environment that gets",
    "start": "332840",
    "end": "339520"
  },
  {
    "text": "created if we try to install it and then see where it is it's in this VM lib",
    "start": "339520",
    "end": "346319"
  },
  {
    "text": "directory so um pretty straightforward stuff I see head nods that's good so",
    "start": "346319",
    "end": "351960"
  },
  {
    "text": "here's a basic structure of our application there's three things we're going to look at there's the",
    "start": "351960",
    "end": "357600"
  },
  {
    "text": "application.py file there's the requirements. text file and the short",
    "start": "357600",
    "end": "363000"
  },
  {
    "text": "flask package is where all of our code lives for the actual web application there's a scripts directory as well for",
    "start": "363000",
    "end": "368720"
  },
  {
    "text": "some helper things say to create our tables so if we look at the",
    "start": "368720",
    "end": "374919"
  },
  {
    "text": "application.py file one of the key components here is that there's this application object",
    "start": "374919",
    "end": "381639"
  },
  {
    "text": "defined at the module level and this is a pretty standard practice in a lot of web Frameworks and in this case this",
    "start": "381639",
    "end": "388720"
  },
  {
    "text": "represents our whiskey application this is the the whiskey callable so in flask it's at flask flask object and then we have this",
    "start": "388720",
    "end": "396479"
  },
  {
    "text": "Clause at the bottom that says for running uh the script we can go ahead and bring up a Dev",
    "start": "396479",
    "end": "403080"
  },
  {
    "text": "server so the requirements. text file this is just listing our dependencies we only need flask the web framework and",
    "start": "403080",
    "end": "409919"
  },
  {
    "text": "then Botto the python SDK so we can talk to Dynamo DB and this also lists all the",
    "start": "409919",
    "end": "416160"
  },
  {
    "text": "transitive dependencies so in this case flask depends on Ginger 2 and works and it will go ahead and specify all of",
    "start": "416160",
    "end": "423280"
  },
  {
    "text": "those dependencies along with specific versions and you can create this file",
    "start": "423280",
    "end": "428960"
  },
  {
    "text": "with a pip freeze command redirect it to your uh requirements. text file uh so",
    "start": "428960",
    "end": "434879"
  },
  {
    "text": "you don't have to actually write this by hand and just to give an example of a",
    "start": "434879",
    "end": "441599"
  },
  {
    "text": "view um it's uh pretty straightforward nothing nothing too complicated just um if you're not familiar with flask the",
    "start": "441599",
    "end": "447440"
  },
  {
    "text": "basic syntax here is that at the top we're decorating this view function that says if you go to this URL send it a get",
    "start": "447440",
    "end": "454840"
  },
  {
    "text": "we call this view function and whatever it returns is the response and we're just grabbing the URL host parameter um",
    "start": "454840",
    "end": "462240"
  },
  {
    "text": "I haven't shown the shorten URL helper function but you can imagine that it just takes a URL shortens it saves it to",
    "start": "462240",
    "end": "469000"
  },
  {
    "text": "Dynamo DB gives you an ID back and then the last two lines is going to U it's a flask helper function that creates a",
    "start": "469000",
    "end": "476479"
  },
  {
    "text": "Json response from a python dictionary",
    "start": "476479",
    "end": "481240"
  },
  {
    "text": "so okay so that was the basic structure of the application if we switch over to our",
    "start": "486840",
    "end": "494680"
  },
  {
    "text": "terminal here we can see how we're actually going to deploy this so imagine now we've checked out the code it's",
    "start": "494680",
    "end": "501080"
  },
  {
    "text": "sitting here on our laptop we're going to recreate those steps so I've created a virtual environment but here I'm going",
    "start": "501080",
    "end": "506639"
  },
  {
    "text": "to activate it we can double check",
    "start": "506639",
    "end": "511440"
  },
  {
    "text": "oops it's not the default user local lib",
    "start": "511880",
    "end": "517120"
  },
  {
    "text": "Python and to install a requirements you can give it this- R argument and what's",
    "start": "517120",
    "end": "523279"
  },
  {
    "text": "nice about this is anyone who wants to work on the application uses that same requirements. text file and you can",
    "start": "523279",
    "end": "529760"
  },
  {
    "text": "ensure that you all have the same environment whether it's just you whether it's sharing with a cooworker or",
    "start": "529760",
    "end": "534839"
  },
  {
    "text": "even if you're deploying your application you can ensure you have that same environment set up",
    "start": "534839",
    "end": "541440"
  },
  {
    "text": "so now that we have our dependencies installed the next thing we can do is figure out how we want to um spin up our",
    "start": "541640",
    "end": "550200"
  },
  {
    "text": "Dev server and there's two options here uh I want to show both so one option is whether or not we want to talk to Dynamo",
    "start": "550200",
    "end": "557040"
  },
  {
    "text": "DB or use a fake in memory implementation so that we don't have to make any service",
    "start": "557040",
    "end": "563200"
  },
  {
    "text": "calls the way I'm doing it here is just triggered off an environment variable so if I specify this oops",
    "start": "563839",
    "end": "570399"
  },
  {
    "text": "kill This Server first um I have a development server up",
    "start": "570399",
    "end": "575720"
  },
  {
    "text": "and running so then I can oops go ahead and give a local host",
    "start": "575720",
    "end": "584519"
  },
  {
    "text": "here with a URL parameter and then if I do this I get my Json response back and",
    "start": "584519",
    "end": "590880"
  },
  {
    "text": "then I can go and query that and get my redirect so this is running locally",
    "start": "590880",
    "end": "595920"
  },
  {
    "text": "without talking to Dynamo DB another option that we have is to just use Dynamo DB",
    "start": "595920",
    "end": "603000"
  },
  {
    "text": "directly so we can create the table here and we'll let it create and then if we just run it with no",
    "start": "603000",
    "end": "610200"
  },
  {
    "text": "arguments it'll use our production settings here and we can do the same",
    "start": "610480",
    "end": "617640"
  },
  {
    "text": "thing and we'll get a response back so it's there there's trade-offs involved and whether or not you want to use the",
    "start": "619279",
    "end": "625360"
  },
  {
    "text": "real Dynamo DBA during development and have staging credentials or however you want to manage that these are just two",
    "start": "625360",
    "end": "630399"
  },
  {
    "text": "examples here but at this point we have enough of the application in place where we can start looking at deployment so we",
    "start": "630399",
    "end": "637320"
  },
  {
    "text": "have it working locally we can play around with it try it out and now we want to deploy it so what we're going to",
    "start": "637320",
    "end": "643360"
  },
  {
    "text": "do is use that EB CLI tool and we're going to do it in three steps so first",
    "start": "643360",
    "end": "649800"
  },
  {
    "text": "we're going to uh run this EB andit command and it'll ask us a series of questions where we want to deploy our",
    "start": "649800",
    "end": "656000"
  },
  {
    "text": "application the type of application those kinds of things and then at that point it'll have enough to create our",
    "start": "656000",
    "end": "662320"
  },
  {
    "text": "environment for us and it'll put a placeholder app a sample application and once that environment is ready to go we",
    "start": "662320",
    "end": "668360"
  },
  {
    "text": "can take our code here and then push it to that environment so that's that's that three-step process we're going to",
    "start": "668360",
    "end": "675560"
  },
  {
    "text": "follow so if I run ebn nid It'll ask me a series of questions credentials where",
    "start": "675600",
    "end": "681160"
  },
  {
    "text": "I want to deploy it so I can pick what region so if we don't want to deploy to us East say we can deploy to us West too",
    "start": "681160",
    "end": "688959"
  },
  {
    "text": "it will then ask us an application name and it's going to default here to the current working directory and an",
    "start": "688959",
    "end": "695480"
  },
  {
    "text": "environment name and this case I'm going to accept the default value here and then it's going to ask me to",
    "start": "695480",
    "end": "701399"
  },
  {
    "text": "pick a solution stack in this case I'm interested in the 32 and 64bit Amazon Linux writing",
    "start": "701399",
    "end": "708839"
  },
  {
    "text": "Python and the last thing it'll ask is whether or not I want to create an RDS database we're going to say no for",
    "start": "708839",
    "end": "715800"
  },
  {
    "text": "now we're using Dynamo DB we'll look at that example in the second application so I'm going to say",
    "start": "715800",
    "end": "721760"
  },
  {
    "text": "no so at this point uh there's enough information to create our environment",
    "start": "721760",
    "end": "727480"
  },
  {
    "text": "and we can do that by running the EV start command now normally this takes a few minutes to create all the necessary",
    "start": "727480",
    "end": "734440"
  },
  {
    "text": "resources so I've gone ahead and created it in advance but to give you an idea of what you would see if you were to run",
    "start": "734440",
    "end": "740360"
  },
  {
    "text": "this you would see it's creating your application and then there will be a number of resources and it'll print them",
    "start": "740360",
    "end": "746760"
  },
  {
    "text": "out as it creates them so for example the S3 bucket where it's going to store your source code in the various",
    "start": "746760",
    "end": "752199"
  },
  {
    "text": "revisions of your application create your load balancer security groups autoscaling launch",
    "start": "752199",
    "end": "759160"
  },
  {
    "text": "configurations all of the things that it needs to deploy your",
    "start": "759160",
    "end": "765279"
  },
  {
    "text": "application so if we run EB status we'll see that our application is green and at",
    "start": "767120",
    "end": "773320"
  },
  {
    "text": "this point we'll have something like this so This Isn't Our application this is our",
    "start": "773320",
    "end": "778480"
  },
  {
    "text": "sample placeholder application that it's created in this environment says you've successfully created your environment",
    "start": "778480",
    "end": "784680"
  },
  {
    "text": "there's some links here but what we're interested in now is actually taking our code and pushing it to this environment",
    "start": "784680",
    "end": "790240"
  },
  {
    "text": "we just created so normally what you do is you",
    "start": "790240",
    "end": "796399"
  },
  {
    "text": "just get commit or you get add your changes and then get commit them and then there's an alias that was set up",
    "start": "796399",
    "end": "801680"
  },
  {
    "text": "when we ran the EB init command and that's going to be get aw. push and that will take",
    "start": "801680",
    "end": "808880"
  },
  {
    "text": "your code and it will push it to elastic beanock and start the deployment",
    "start": "808880",
    "end": "814240"
  },
  {
    "text": "process so when this happens your environment will be updating your health will be gray and you'll let that go for",
    "start": "814240",
    "end": "823000"
  },
  {
    "text": "a little while and your application will then be deployed um one thing I want to mention that I uh didn't really go over",
    "start": "823000",
    "end": "830320"
  },
  {
    "text": "is how we're dealing with the credentials for Dynamo DB and the way we're doing that is just via environment",
    "start": "830320",
    "end": "836160"
  },
  {
    "text": "variables so when you run ebnit command there's going to",
    "start": "836160",
    "end": "841279"
  },
  {
    "text": "be this option settings file here and I have two values here this is an inii form oh escat is just a a script I wrote",
    "start": "841279",
    "end": "848240"
  },
  {
    "text": "to take out the secret key so you guys don't see secret key but um there's this option settings and it's an inii format",
    "start": "848240",
    "end": "856120"
  },
  {
    "text": "so we have the AWS elastic beanock application environment and we can",
    "start": "856120",
    "end": "861320"
  },
  {
    "text": "specify any key value pairs ha that we want and when our application is deployed these values will be available",
    "start": "861320",
    "end": "868000"
  },
  {
    "text": "via the os. Environ dictionary so if we run EB",
    "start": "868000",
    "end": "874600"
  },
  {
    "text": "status so we see our environment is ready it's green we can then try out that same uh curl",
    "start": "874600",
    "end": "882440"
  },
  {
    "text": "command but also I've set up a an alias beforehand it is a URL shortener so I've",
    "start": "882440",
    "end": "888079"
  },
  {
    "text": "created a a shorter domain",
    "start": "888079",
    "end": "894160"
  },
  {
    "text": "so can do the same kind of thing here we are now using a deployed version of our",
    "start": "894160",
    "end": "900320"
  },
  {
    "text": "application and we'll see our redirect in fact we can see we get redirected",
    "start": "900320",
    "end": "906880"
  },
  {
    "text": "here okay so that is the basic process for",
    "start": "906880",
    "end": "913759"
  },
  {
    "text": "deploying a sample application there wasn't a lot of work and if we think about it you know what what sorry what",
    "start": "914600",
    "end": "921880"
  },
  {
    "text": "have we done and perhaps more importantly what have we not done what has been done for us and it turn turns",
    "start": "921880",
    "end": "929160"
  },
  {
    "text": "out that there's quite a lot so if we start at the ec2 instance level we have something like this when we first deploy",
    "start": "929160",
    "end": "935680"
  },
  {
    "text": "our application and create that initial environment with our sample placeholder app we have something like this and this",
    "start": "935680",
    "end": "941480"
  },
  {
    "text": "is saying that Apache is serving our sample application it's reading from a whiskey. comp file for those of you",
    "start": "941480",
    "end": "947880"
  },
  {
    "text": "familiar with Apache it's in that comp. D directory and then now we run get aw.",
    "start": "947880",
    "end": "954079"
  },
  {
    "text": "push so what happens when we run that first thing is that it's going to take its uh the source code from our laptop",
    "start": "954079",
    "end": "960600"
  },
  {
    "text": "and it's going to make the source available on all of the various web servers we have so we have something",
    "start": "960600",
    "end": "966240"
  },
  {
    "text": "like this next it's going to see if you have a requirements. text file and if it if",
    "start": "966240",
    "end": "972240"
  },
  {
    "text": "you do it will install them into a virtual environment so this is why we review those tools to uh at the",
    "start": "972240",
    "end": "978120"
  },
  {
    "text": "beginning because we see that the same tools we're using to develop locally is the same that we're using to deploy and",
    "start": "978120",
    "end": "984360"
  },
  {
    "text": "that makes it easy to have this mental model of what's actually happening we can Ensure that we have the same",
    "start": "984360",
    "end": "989839"
  },
  {
    "text": "environment in production that we do during um development and also if there's any system dependencies on",
    "start": "989839",
    "end": "996240"
  },
  {
    "text": "python packages we don't have to worry about incompatible versions if the system dependencies have a specific",
    "start": "996240",
    "end": "1001880"
  },
  {
    "text": "python package that they need so we also then generate a Apache",
    "start": "1001880",
    "end": "1007519"
  },
  {
    "text": "configuration file we didn't do this um in the first application we accepted all the default values that was the",
    "start": "1007519",
    "end": "1013519"
  },
  {
    "text": "application.py file those types of things and what happens is that this will happen on all of our web servers so",
    "start": "1013519",
    "end": "1020560"
  },
  {
    "text": "you can think of this as conceptually being staged it's ready for deployment but at this point if a request comes in",
    "start": "1020560",
    "end": "1026240"
  },
  {
    "text": "it's still serving that sample application so after all of the instances have gotten to this point we",
    "start": "1026240",
    "end": "1033120"
  },
  {
    "text": "then flip Apache over to serve our current application so if there's an",
    "start": "1033120",
    "end": "1038360"
  },
  {
    "text": "issue with the requirements. text file a bad package a typo you just don't flip",
    "start": "1038360",
    "end": "1043720"
  },
  {
    "text": "over to the new version you're trying to deploy you'll just continue serving your previous version and then you can fix",
    "start": "1043720",
    "end": "1049120"
  },
  {
    "text": "the issue and redeploy your code if we zoom out a little bit from",
    "start": "1049120",
    "end": "1054799"
  },
  {
    "text": "the instance level we see uh the environment so what we have is a DNS C",
    "start": "1054799",
    "end": "1062120"
  },
  {
    "text": "name pointing to the load balancer which is then redirecting traffic to a number of web servers in this case I've shown",
    "start": "1062120",
    "end": "1067400"
  },
  {
    "text": "four as an example each of those web servers is part of a security group and",
    "start": "1067400",
    "end": "1073000"
  },
  {
    "text": "each of those web servers is also part of an autoscaling Group which spans multiple availability zones in this case",
    "start": "1073000",
    "end": "1079480"
  },
  {
    "text": "I've shown two in US West 2 B two in Us 2 C and this is something that would",
    "start": "1079480",
    "end": "1084520"
  },
  {
    "text": "happen again automatically for you and if you're not familiar with",
    "start": "1084520",
    "end": "1089760"
  },
  {
    "text": "these terms if this is your first time seeing it you know it's a lot of terminology to take in and I want to",
    "start": "1089760",
    "end": "1095120"
  },
  {
    "text": "give something concrete that you can leverage as all of these resources being created for you so as an example to",
    "start": "1095120",
    "end": "1101559"
  },
  {
    "text": "motivate this I wrote a load testing utility and gave it some parameters so",
    "start": "1101559",
    "end": "1107400"
  },
  {
    "text": "it spins up 10 ec2 instances and they each have a list of 15 URLs maintaining",
    "start": "1107400",
    "end": "1113080"
  },
  {
    "text": "10 concurrent connections and we ran that for an hour to see what we would get so here's an example of the",
    "start": "1113080",
    "end": "1120840"
  },
  {
    "text": "performance from the first SC or from the first initial test it's hovering in about 10,000 to",
    "start": "1120840",
    "end": "1127159"
  },
  {
    "text": "12,500 connections by the way this is a cloud watch uh monitor that is",
    "start": "1127159",
    "end": "1132480"
  },
  {
    "text": "automatically again created for you this is something you can access in the console you get this as a result of just",
    "start": "1132480",
    "end": "1137880"
  },
  {
    "text": "deploying your application with elastic beanock and if we look at why we're getting these numbers here's the ec2",
    "start": "1137880",
    "end": "1146080"
  },
  {
    "text": "instance and this is a CPU utilization we can see it's pegged at 100% so we",
    "start": "1146080",
    "end": "1151840"
  },
  {
    "text": "have a CPU bound application what something we can do so there was that option settings",
    "start": "1151840",
    "end": "1158320"
  },
  {
    "text": "file that was that inii file we can specify an auto scaling trigger and",
    "start": "1158320",
    "end": "1163480"
  },
  {
    "text": "we're essentially telling it there's four things here but we're essentially telling it three things we're saying watch for CPU utilization scale up if",
    "start": "1163480",
    "end": "1171120"
  },
  {
    "text": "you go above 90% scale down if you go below 40% and what we would do at this point",
    "start": "1171120",
    "end": "1176880"
  },
  {
    "text": "there's an EB update command if you ever change any of the option settings you can run EB update and that will then",
    "start": "1176880",
    "end": "1183159"
  },
  {
    "text": "have these settings um taken to effect so we do this we rerun the test and then",
    "start": "1183159",
    "end": "1188280"
  },
  {
    "text": "we see something like this so we start initially at the 10,000 12,000 500",
    "start": "1188280",
    "end": "1193320"
  },
  {
    "text": "request range but we're able to scale up here and I've annotated the graph with every time an autoscaling event happen",
    "start": "1193320",
    "end": "1199080"
  },
  {
    "text": "so every time a new instance was added to our application we can see we're able to handle this load um there's a default",
    "start": "1199080",
    "end": "1205640"
  },
  {
    "text": "maximum value of four so that's why you see the initial one plus three um I can actually increase the number of Maximum",
    "start": "1205640",
    "end": "1212760"
  },
  {
    "text": "instances as if I want but in terms of the numbers we see just under a fourfold",
    "start": "1212760",
    "end": "1218840"
  },
  {
    "text": "increase in performance and the numbers here aren't what I hope you all take away from this it's the fact that we saw",
    "start": "1218840",
    "end": "1225720"
  },
  {
    "text": "that we had a CPU bound application we gave it the parameters the percentages we wanted to scale up and down with and",
    "start": "1225720",
    "end": "1231760"
  },
  {
    "text": "it was able to handle that automatically for us so when the load test was finished it took those instances out because we weren't using any CPU",
    "start": "1231760",
    "end": "1238039"
  },
  {
    "text": "utilization and that happened automatically for us if we did want to get better performance there's a number",
    "start": "1238039",
    "end": "1243159"
  },
  {
    "text": "of things we could do we could change the instance type so we could use something that's better uh suited to high CPU workload we're using Amazon",
    "start": "1243159",
    "end": "1250480"
  },
  {
    "text": "Dynamo DB so if you guys are familiar with um the idea of provision throughput if we were getting throttled we weren't",
    "start": "1250480",
    "end": "1256080"
  },
  {
    "text": "in this case but once we hit that limit we can increase read and write capacity and of course we can profile our application and see if there's anything",
    "start": "1256080",
    "end": "1262320"
  },
  {
    "text": "we can do in the source itself so that was the first application",
    "start": "1262320",
    "end": "1269039"
  },
  {
    "text": "we can look at the second application now it's the D Jango example um in terms of what it is it's just a",
    "start": "1269039",
    "end": "1277520"
  },
  {
    "text": "simple uh web application that allows authors to create albums and Associate",
    "start": "1277520",
    "end": "1283440"
  },
  {
    "text": "uh upload images and Associate images with albums in terms of the architecture though",
    "start": "1283440",
    "end": "1289200"
  },
  {
    "text": "the images are stored in Amazon S3 and the metadata is stored in RDS and for",
    "start": "1289200",
    "end": "1295520"
  },
  {
    "text": "those not familiar with RDS RDS is Amazon relational database service it",
    "start": "1295520",
    "end": "1300919"
  },
  {
    "text": "supports various database engines there support for my uh my SQL their support",
    "start": "1300919",
    "end": "1306400"
  },
  {
    "text": "for Oracle and SQL server in this case we're going to be using the MySQL",
    "start": "1306400",
    "end": "1313279"
  },
  {
    "text": "backend to give you a quick example of what that looks like",
    "start": "1313919",
    "end": "1319760"
  },
  {
    "text": "we can move a little bit faster here and go ahead and activate our virtual environment install our",
    "start": "1319760",
    "end": "1325880"
  },
  {
    "text": "requirements and at this point so once you've set up your basic Django application again we're starting with",
    "start": "1325880",
    "end": "1331080"
  },
  {
    "text": "this idea checked out locally on my machine Let's get a development version up and running and then we can figure out how to deploy",
    "start": "1331080",
    "end": "1338759"
  },
  {
    "text": "it you do manage.py run server and if we go to Local Host we get",
    "start": "1340919",
    "end": "1348679"
  },
  {
    "text": "an error right we there were steps that we forgot so that's that's sort of the first difference between this first",
    "start": "1348679",
    "end": "1354440"
  },
  {
    "text": "application and this one there's commands we need to run so typically what you'll",
    "start": "1354440",
    "end": "1360840"
  },
  {
    "text": "do sync DB and then it'll ask you if you want to create an admin",
    "start": "1360840",
    "end": "1368600"
  },
  {
    "text": "user oops and then in this case we're using",
    "start": "1368600",
    "end": "1374799"
  },
  {
    "text": "South for migration so we'll also need to run migrate so we need commands to run and we really",
    "start": "1374799",
    "end": "1381559"
  },
  {
    "text": "want to run this every time we deploy if we add new tables we'll need to sync our database or if we're adding uh we're",
    "start": "1381559",
    "end": "1387480"
  },
  {
    "text": "changing our schema or doing data migrations we'll need to migrate whenever we have new versions of our",
    "start": "1387480",
    "end": "1393200"
  },
  {
    "text": "application so at this point if we run our server we should see something a little better and we also have the admin",
    "start": "1393200",
    "end": "1400440"
  },
  {
    "text": "interface configured so we can log in and create some",
    "start": "1400440",
    "end": "1405679"
  },
  {
    "text": "basic functionality here so I'll create an album and then I'll",
    "start": "1405679",
    "end": "1411080"
  },
  {
    "text": "create an image and Associate it with that so we",
    "start": "1411080",
    "end": "1417159"
  },
  {
    "text": "can pick a",
    "start": "1417159",
    "end": "1420559"
  },
  {
    "text": "castle and so this is the development version so it's storing this in oops",
    "start": "1422880",
    "end": "1428559"
  },
  {
    "text": "storing this information locally",
    "start": "1428559",
    "end": "1435720"
  },
  {
    "text": "okay h oh thank",
    "start": "1437279",
    "end": "1442639"
  },
  {
    "text": "you okay there we go and then we have the The View for the image",
    "start": "1444480",
    "end": "1451760"
  },
  {
    "text": "okays so that was just a quick walk through of what it looks like the sample",
    "start": "1452480",
    "end": "1458320"
  },
  {
    "text": "application um if we walk through the source code here when you run the Jango admin start project command it generates",
    "start": "1458320",
    "end": "1465799"
  },
  {
    "text": "this file for you so this is that whiskey. py file you don't have to write this yourself I've removed the comments",
    "start": "1465799",
    "end": "1471200"
  },
  {
    "text": "to keep it concise but we'll notice again there's this application object at the module level that represents our",
    "start": "1471200",
    "end": "1477240"
  },
  {
    "text": "whiskey app and terms of the settings we're using South for data migrations we're",
    "start": "1477240",
    "end": "1484240"
  },
  {
    "text": "using Django storages to upload our images to S3 and then we have a few other installed apps",
    "start": "1484240",
    "end": "1490880"
  },
  {
    "text": "here another difference between that first app and the second app is that we have static files so we have things like",
    "start": "1490880",
    "end": "1497039"
  },
  {
    "text": "CSS JavaScript additional images and the way we're configuring this here is that",
    "start": "1497039",
    "end": "1502399"
  },
  {
    "text": "at the at the top level of our application there's a static directory and that's where collect static will",
    "start": "1502399",
    "end": "1508159"
  },
  {
    "text": "just put all of the static assets it collects and then we have the static URL set to SL",
    "start": "1508159",
    "end": "1515120"
  },
  {
    "text": "static in terms of the S3 portion of this it's a similar thing we're grabbing",
    "start": "1515120",
    "end": "1521159"
  },
  {
    "text": "the access and SE key from the environment here and then we're using the S3 Bodo storage back end and then we",
    "start": "1521159",
    "end": "1527840"
  },
  {
    "text": "have the bucket name and our media URL so there's a few",
    "start": "1527840",
    "end": "1533640"
  },
  {
    "text": "differences we have to run our commands when we deploy we want to sync DB we want to run migrations we also want to",
    "start": "1533640",
    "end": "1541000"
  },
  {
    "text": "figure out how we can configure static files and then we also might want uh to",
    "start": "1541000",
    "end": "1546960"
  },
  {
    "text": "be able to specify where that application object lives it's not that application.py file it's a file",
    "start": "1546960",
    "end": "1553520"
  },
  {
    "text": "autogenerated for us so we have a few options we could update our application to adhere to the default values but",
    "start": "1553520",
    "end": "1561159"
  },
  {
    "text": "another option we have is to create a configuration file and tell elastic",
    "start": "1561159",
    "end": "1566279"
  },
  {
    "text": "beanock a little bit more about our application so it knows how to deploy it correctly and that's what this",
    "start": "1566279",
    "end": "1571480"
  },
  {
    "text": "application configuration file is so for example I create EB extensions directory",
    "start": "1571480",
    "end": "1578000"
  },
  {
    "text": "and here I have a python. config file this is a yaml formatted file and this",
    "start": "1578000",
    "end": "1584760"
  },
  {
    "text": "is how I would do the first case so how I run commands I have a commands key and",
    "start": "1584760",
    "end": "1590080"
  },
  {
    "text": "then I have the next level keys are the names that it uses to figure out what order to run your commands in and then",
    "start": "1590080",
    "end": "1597200"
  },
  {
    "text": "each command can have one or two arguments here the command in this first",
    "start": "1597200",
    "end": "1602360"
  },
  {
    "text": "example is to sync the database with no input and the second command is this leader only flag so if you can imagine I",
    "start": "1602360",
    "end": "1609960"
  },
  {
    "text": "have a number of web servers and if I'm talking to a shared data uh resource",
    "start": "1609960",
    "end": "1615600"
  },
  {
    "text": "like RDS I don't want every single instance to try to migrate my application so we can pick one leader",
    "start": "1615600",
    "end": "1622480"
  },
  {
    "text": "and anything tagged with this leader only true will run only on that instance so for things like syncdb and migrate we",
    "start": "1622480",
    "end": "1629520"
  },
  {
    "text": "want that but for things like collect static we would want that to happen on every",
    "start": "1629520",
    "end": "1636279"
  },
  {
    "text": "instance in terms of the options this is how we would configure additional configuration values we there's an",
    "start": "1636279",
    "end": "1642559"
  },
  {
    "text": "option settings key and here I can also specify environment variables these would be things better suited to",
    "start": "1642559",
    "end": "1649520"
  },
  {
    "text": "environment variables that might be properties of my application so Jango settings module is just an example if I",
    "start": "1649520",
    "end": "1655480"
  },
  {
    "text": "have scripts that Python scripts where I want to import my um models and I don't",
    "start": "1655480",
    "end": "1660919"
  },
  {
    "text": "want to set the environment variable there I could do something like this but the other two here is the whiskey path",
    "start": "1660919",
    "end": "1668279"
  },
  {
    "text": "which is what that file we looked at previously where the application object lives this is how we can specify where",
    "start": "1668279",
    "end": "1674480"
  },
  {
    "text": "that lives so we don't have to default to application.py and then this last option here is static",
    "start": "1674480",
    "end": "1682440"
  },
  {
    "text": "file mapping so the syntax is that you have SL static as your URL and you have",
    "start": "1682440",
    "end": "1688080"
  },
  {
    "text": "the value being the directory so if I make a request to SL static base. CSS it",
    "start": "1688080",
    "end": "1694679"
  },
  {
    "text": "will look in static base.",
    "start": "1694679",
    "end": "1699240"
  },
  {
    "text": "CSS working with Amazon RDS so now we want to create a database for us when we",
    "start": "1700640",
    "end": "1707240"
  },
  {
    "text": "deploy our application and the way this works with elastic bean stock is that you specify you want RDS",
    "start": "1707240",
    "end": "1714240"
  },
  {
    "text": "created for you so we'll go ahead and create an RDS instance and when that",
    "start": "1714240",
    "end": "1719840"
  },
  {
    "text": "happens it will next authorize your application to talk to",
    "start": "1719840",
    "end": "1725480"
  },
  {
    "text": "RDS and this is done with those security groups that were created when the ec2 instance was",
    "start": "1725480",
    "end": "1731080"
  },
  {
    "text": "created and then we need to get that information about RDS into your application and so it's done again via",
    "start": "1731080",
    "end": "1738640"
  },
  {
    "text": "environment variables and you'll have these environment variables accessible to your application so in this Django",
    "start": "1738640",
    "end": "1745559"
  },
  {
    "text": "example everyone has their own favorite way of dealing with settings this this is one way you can check if that",
    "start": "1745559",
    "end": "1751720"
  },
  {
    "text": "environment variable is in the environment and if it is you would go ahead and configure your database",
    "start": "1751720",
    "end": "1756840"
  },
  {
    "text": "appropriately you could also have a production settings file that just has these um or you could have your local",
    "start": "1756840",
    "end": "1763039"
  },
  {
    "text": "settings override to sqlite database depending on what your preference is",
    "start": "1763039",
    "end": "1769120"
  },
  {
    "text": "and if you want to look at how we actually deploy",
    "start": "1769120",
    "end": "1773799"
  },
  {
    "text": "this we'll do the same process here we'll run eban nit pick uswest 2 it'll look similar",
    "start": "1779960",
    "end": "1788799"
  },
  {
    "text": "until we get to the RDS portion so now it's asking us",
    "start": "1788799",
    "end": "1795360"
  },
  {
    "text": "if we want to create an RDS database and we're just going to say yes and now we have an option if we have",
    "start": "1795360",
    "end": "1802480"
  },
  {
    "text": "previously created a snapshot we can restore from that snapshot so if we have initial fixtures or data we want",
    "start": "1802480",
    "end": "1808440"
  },
  {
    "text": "pre-populated we can do that here I'm going to say no snapshot just create an empty database ask me for the master",
    "start": "1808440",
    "end": "1815480"
  },
  {
    "text": "password and then finally when we terminate our environment we have the option of creating a snapshot of that",
    "start": "1815480",
    "end": "1821159"
  },
  {
    "text": "database so if we want to then later recreate a new environment with that data we can go ahead and do so or we can",
    "start": "1821159",
    "end": "1826799"
  },
  {
    "text": "just say when you terminate the environment go ahead and just terminate the RDS instance and don't worry about creating a snapshot so I'll say no here",
    "start": "1826799",
    "end": "1835559"
  },
  {
    "text": "at this point it's the same process we run EB start once that comes up we commit our changes and push them so as",
    "start": "1835559",
    "end": "1841600"
  },
  {
    "text": "an example of what that looks like you'd run EB start and you would",
    "start": "1841600",
    "end": "1847600"
  },
  {
    "text": "see the same output the only difference is that you'll see that it's going to",
    "start": "1847600",
    "end": "1852960"
  },
  {
    "text": "create an RDS database for you here and this will take a while and once that's",
    "start": "1852960",
    "end": "1859399"
  },
  {
    "text": "created you'll have the same process where you can run EB status and see that your environment is",
    "start": "1859399",
    "end": "1866240"
  },
  {
    "text": "green and after that you run get add get",
    "start": "1866240",
    "end": "1871760"
  },
  {
    "text": "commit and then get aw.",
    "start": "1871760",
    "end": "1876480"
  },
  {
    "text": "push and you'll see that your application is",
    "start": "1877159",
    "end": "1881720"
  },
  {
    "text": "updating and you also have information about your RDS database there and this will be your general workflow so you'll",
    "start": "1885120",
    "end": "1891399"
  },
  {
    "text": "make changes you'll get commit them and then you'll get AWS push",
    "start": "1891399",
    "end": "1896919"
  },
  {
    "text": "them so if we go to our application",
    "start": "1900080",
    "end": "1908840"
  },
  {
    "text": "here so this is now the deployed version there's the the URL at the top there and we can go ahead and do the same thing",
    "start": "1909039",
    "end": "1915200"
  },
  {
    "text": "here but this time we're talking to RDS and we're uploading the images to",
    "start": "1915200",
    "end": "1921240"
  },
  {
    "text": "S3 so we can do the same thing here Castle select the",
    "start": "1923760",
    "end": "1931480"
  },
  {
    "text": "album",
    "start": "1936360",
    "end": "1939360"
  },
  {
    "text": "great and we can see here that we're serving that from from S3",
    "start": "1944000",
    "end": "1949840"
  },
  {
    "text": "okay so one other thing I want to show is that so that's our application running it's deployed we're using RDS S3",
    "start": "1950120",
    "end": "1957399"
  },
  {
    "text": "and here's the console here if you go to there's the elastic",
    "start": "1957399",
    "end": "1962440"
  },
  {
    "text": "beanock service here and what we'll see is our application which we called Jango image 2 and we have our environment if",
    "start": "1962440",
    "end": "1969320"
  },
  {
    "text": "we had multiple environments they' be listed here and",
    "start": "1969320",
    "end": "1977200"
  },
  {
    "text": "there's a few interesting things that will help you when you deploy your application there's the environments tab",
    "start": "1978080",
    "end": "1984279"
  },
  {
    "text": "here that just shows the basic steps that it's doing when it deploys your application so if",
    "start": "1984279",
    "end": "1991159"
  },
  {
    "text": "anything goes wrong you'll see error events here and they'll tell you what what went wrong these were where the",
    "start": "1991159",
    "end": "1998200"
  },
  {
    "text": "graphs are created for you and so you have a number of them that you can look at we can go ahead and you know click",
    "start": "1998200",
    "end": "2004440"
  },
  {
    "text": "them and look at the details if there were any",
    "start": "2004440",
    "end": "2009240"
  },
  {
    "text": "if we want to change our configuration so we change the autoscaling parameters by doing this option settings but we",
    "start": "2009880",
    "end": "2015559"
  },
  {
    "text": "also have the ability to do that here so this is where again I mentioned that maximum count is four if we wanted to",
    "start": "2015559",
    "end": "2022240"
  },
  {
    "text": "change it here we could go ahead and do that and there's a a number of triggers here if we don't want CPU",
    "start": "2022240",
    "end": "2028880"
  },
  {
    "text": "utilization and then finally if you want detailed information so you want the log files you can go to this log tab here",
    "start": "2030960",
    "end": "2038320"
  },
  {
    "text": "and there's a snapshot logs and what this is doing is it'll go",
    "start": "2038320",
    "end": "2044639"
  },
  {
    "text": "to each of your instances and there's a list of log files that it's going to collect and then it'll present them here",
    "start": "2044639",
    "end": "2050398"
  },
  {
    "text": "for you and put them to S3 so that you can then look at them",
    "start": "2050399",
    "end": "2057079"
  },
  {
    "text": "oops so if we look at them the uh basic structure there's a header here that has",
    "start": "2059800",
    "end": "2065839"
  },
  {
    "text": "a log file and there's a number of different log files some of the ones that would be useful when you're trying",
    "start": "2065839",
    "end": "2071200"
  },
  {
    "text": "to debug things is this EB tools. log so you can see the process of deploying it's taking our application and",
    "start": "2071200",
    "end": "2078599"
  },
  {
    "text": "unzipping it to a directory we can see the process of pip installing our",
    "start": "2078599",
    "end": "2083638"
  },
  {
    "text": "packages and then the output of running any commands there's also a",
    "start": "2083639",
    "end": "2089440"
  },
  {
    "text": "oops there's also a CFN",
    "start": "2089639",
    "end": "2094679"
  },
  {
    "text": "log here that has again so this specific example is the output of the collect static um command that we ran so if you",
    "start": "2098599",
    "end": "2104960"
  },
  {
    "text": "need to see the output of your commander running or anything more detailed this would be how you could do",
    "start": "2104960",
    "end": "2111119"
  },
  {
    "text": "that",
    "start": "2111800",
    "end": "2114800"
  },
  {
    "text": "okay so to wrap up that example we launched an environment with",
    "start": "2119760",
    "end": "2126160"
  },
  {
    "text": "Amazon RDS we saw how we could customize this deployment process and specifically",
    "start": "2126160",
    "end": "2131280"
  },
  {
    "text": "we looked at commands we looked at Option settings and those option settings included things like static",
    "start": "2131280",
    "end": "2137720"
  },
  {
    "text": "files the whiskey path there's actually a number of other option settings if you need for your",
    "start": "2137720",
    "end": "2143520"
  },
  {
    "text": "application there's also things that we didn't show such as yum packages so if",
    "start": "2143520",
    "end": "2149760"
  },
  {
    "text": "we need to install say the lib jpeg Dev uh devel package to install pill or",
    "start": "2149760",
    "end": "2155680"
  },
  {
    "text": "something um that's another option there's a section in there to install RPMs we also looked at the console so",
    "start": "2155680",
    "end": "2162839"
  },
  {
    "text": "that was again another useful tool if you want to have a nice web interface to",
    "start": "2162839",
    "end": "2169119"
  },
  {
    "text": "configure your environments so next steps here",
    "start": "2169119",
    "end": "2176240"
  },
  {
    "text": "encourage you all to download EB download Botto try them out um try to",
    "start": "2176240",
    "end": "2181440"
  },
  {
    "text": "deploy your own applications or the short flask or Jango image applications in terms of whiskey report",
    "start": "2181440",
    "end": "2187920"
  },
  {
    "text": "as long as you have your dependencies specified in your requirements. text file and you have an application object",
    "start": "2187920",
    "end": "2194599"
  },
  {
    "text": "at that module level you can use your whiskey framework of choice and finally I want to mention",
    "start": "2194599",
    "end": "2200640"
  },
  {
    "text": "that the EB extensions directory is a cloud formation template so in this case we",
    "start": "2200640",
    "end": "2208839"
  },
  {
    "text": "were using a very small subset here but you have you can leverage the full cloud formation syntax in terms of the RPMs if",
    "start": "2208839",
    "end": "2216160"
  },
  {
    "text": "you have specific files or directories or users any of that kind of thing um you can also specify them there you also",
    "start": "2216160",
    "end": "2222800"
  },
  {
    "text": "don't have to put it in a single config file so we use the python. config you can have a number of different star.",
    "start": "2222800",
    "end": "2228800"
  },
  {
    "text": "config files and what's nice about that is they can be discret pieces of functionality that say integrate with a",
    "start": "2228800",
    "end": "2234200"
  },
  {
    "text": "particular service and then you can just drop that into any of your applications to get that functionality if you want",
    "start": "2234200",
    "end": "2240000"
  },
  {
    "text": "the only difference is this is written in yaml instead of the Json",
    "start": "2240000",
    "end": "2245240"
  },
  {
    "text": "format and that is all I have thanks guys um yeah",
    "start": "2245400",
    "end": "2254680"
  }
]