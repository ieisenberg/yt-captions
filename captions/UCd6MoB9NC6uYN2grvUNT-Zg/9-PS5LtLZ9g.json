[
  {
    "text": "hello welcome everyone so before we get started um I",
    "start": "6240",
    "end": "11280"
  },
  {
    "text": "would encourage anyone who wants to to come up to the front we have a lot of open space can make a little more of a",
    "start": "11280",
    "end": "17199"
  },
  {
    "text": "come together setting no worries if you want to hang out in the",
    "start": "17199",
    "end": "23880"
  },
  {
    "text": "back hey I do it too so again thanks everyone for coming",
    "start": "23880",
    "end": "31000"
  },
  {
    "text": "to my talk I know there's a lot of uh really good and interesting talks going on right now so I appreciate that uh you",
    "start": "31000",
    "end": "38440"
  },
  {
    "text": "find this talk worth coming to I hope that uh it will be educational and maybe a little bit",
    "start": "38440",
    "end": "44960"
  },
  {
    "text": "entertaining so uh quick introduction to myself so I'm Alex I work on the aw ssdk",
    "start": "44960",
    "end": "51160"
  },
  {
    "text": "for Ruby team here at Amazon web services I've been at Amazon for about four years and for a at AWS a little bit",
    "start": "51160",
    "end": "59359"
  },
  {
    "text": "more than a year in my previous Amazon life I worked on our inventory management systems so if",
    "start": "59359",
    "end": "68320"
  },
  {
    "text": "you've ever gone to Amazon and something has been out of stock it might be partially my fault and I",
    "start": "68320",
    "end": "76118"
  },
  {
    "text": "apologize so uh quick uh question I kind of want to gauge things here how many of you have used one of the versions of the",
    "start": "76600",
    "end": "83960"
  },
  {
    "text": "Ruby SDK how many of you have never used the Ruby SDK before cool and we've got stuff for you",
    "start": "83960",
    "end": "91360"
  },
  {
    "text": "too um how many of you have used V2 of the SDK",
    "start": "91360",
    "end": "96600"
  },
  {
    "text": "already and how many of you are using it in production awesome hopefully I can encourage some",
    "start": "96600",
    "end": "104280"
  },
  {
    "text": "of you guys to start to adopt V2 in production I think there's a lot of really exciting stuff",
    "start": "104280",
    "end": "109680"
  },
  {
    "text": "here so let's get right into it so we're covering four topics today",
    "start": "109680",
    "end": "117320"
  },
  {
    "text": "we're going to have a brief overview of the architect Ure of V2 of the",
    "start": "117320",
    "end": "122360"
  },
  {
    "text": "SDK we're going to talk a little bit about how you get started so if you've never used it",
    "start": "122360",
    "end": "128119"
  },
  {
    "text": "before this is definitely the section where you're going to be interested and we're going to show you how you get",
    "start": "128119",
    "end": "133280"
  },
  {
    "text": "started we're going to talk about new features that we have in version two of the SDK and we're going to bring it all",
    "start": "133280",
    "end": "140360"
  },
  {
    "text": "together with a short example using Ruby on Rails so let's start with a brief",
    "start": "140360",
    "end": "147879"
  },
  {
    "text": "overview of the architecture V2 the SDK so we still use the same AWS SDK gem",
    "start": "147879",
    "end": "156319"
  },
  {
    "text": "that you're using now if you use V1 just going to be major version two but it's",
    "start": "156319",
    "end": "161360"
  },
  {
    "text": "really a metag gem that contains two other gems that have the core logic we have AWS SDK",
    "start": "161360",
    "end": "168239"
  },
  {
    "text": "core which is our client level abstractions over the AWS services and",
    "start": "168239",
    "end": "174400"
  },
  {
    "text": "AWS SDK resources which Builds on top of core to give you object oriented",
    "start": "174400",
    "end": "182360"
  },
  {
    "text": "abstractions so we're going to start by talking about AWS SDK",
    "start": "182360",
    "end": "187680"
  },
  {
    "text": "core so here is a rough idea of how we map the different AWS service actions to",
    "start": "187680",
    "end": "196560"
  },
  {
    "text": "client methods in short for every AWS API",
    "start": "196560",
    "end": "201720"
  },
  {
    "text": "method provided we try to map that one to one to a ruby operation I mean for",
    "start": "201720",
    "end": "208959"
  },
  {
    "text": "the most part it's literally you know if the API calls list buckets in all caps",
    "start": "208959",
    "end": "214040"
  },
  {
    "text": "Or List caps bucket and caps we just rubbi at listor",
    "start": "214040",
    "end": "219680"
  },
  {
    "text": "buckets and the parameters work mostly the same way so it's a onetoone",
    "start": "219680",
    "end": "225799"
  },
  {
    "text": "mapping what we like to look at it as is parody plus so you get your onetoone",
    "start": "225799",
    "end": "231480"
  },
  {
    "text": "mapping of the apis but we also provide parameter validation so if something's",
    "start": "231480",
    "end": "237319"
  },
  {
    "text": "missing that's required we'll tell you about it if you do a lot of testing and I know",
    "start": "237319",
    "end": "242799"
  },
  {
    "text": "I've talked to some of you here in the conference today who you know really would appreciate better mocking support",
    "start": "242799",
    "end": "249680"
  },
  {
    "text": "well in V2 we give you fully featured response stubs so that you don't have to write",
    "start": "249680",
    "end": "257040"
  },
  {
    "text": "out a fully valid response you can just write the parts you care about and then we'll give you default values for everything else which includes and",
    "start": "257040",
    "end": "263800"
  },
  {
    "text": "someone was asking about this mocking for errors uh we also have a plug-in",
    "start": "263800",
    "end": "271520"
  },
  {
    "text": "architecture so some features like client side encryption for S3 or just",
    "start": "271520",
    "end": "278039"
  },
  {
    "text": "general stuff like signing we have within a plugin architecture which you",
    "start": "278039",
    "end": "283280"
  },
  {
    "text": "can modify or add to uh either with a poll request if you have a new feature",
    "start": "283280",
    "end": "288479"
  },
  {
    "text": "that could be helpful or locally for your own use of the SDK pagination it's built in so I know",
    "start": "288479",
    "end": "297720"
  },
  {
    "text": "I've talked to a lot of you and if you've been using using V1 you've probably at some point had to write your",
    "start": "297720",
    "end": "303000"
  },
  {
    "text": "own pagination logic we now provide that at the client level and we also have waiters which I'm",
    "start": "303000",
    "end": "309880"
  },
  {
    "text": "excited to show you later on so back to our gem structure what is",
    "start": "309880",
    "end": "315960"
  },
  {
    "text": "AWS SDK resources so resources gives you the",
    "start": "315960",
    "end": "321360"
  },
  {
    "text": "objectoriented abstraction over our clients so for example in an S3 client",
    "start": "321360",
    "end": "326720"
  },
  {
    "text": "you just have your client which has all the different methods that EST provides to you what resources will give you is a",
    "start": "326720",
    "end": "334520"
  },
  {
    "text": "way to represent that as objects so a bucket is an object objects are",
    "start": "334520",
    "end": "340520"
  },
  {
    "text": "objects and so on so this looks pretty similar to what",
    "start": "340520",
    "end": "346440"
  },
  {
    "text": "we showed you before the idea here is it's almost the same you have the",
    "start": "346440",
    "end": "351840"
  },
  {
    "text": "mapping of the HTTP call to a client method which maps to a resource method",
    "start": "351840",
    "end": "359000"
  },
  {
    "text": "that we assign to the appropriate resource object so for example if you're calling",
    "start": "359000",
    "end": "366039"
  },
  {
    "text": "object. put this will map in the bucket name and the key of the object based on",
    "start": "366039",
    "end": "373039"
  },
  {
    "text": "how the object resource was built so how do we get started with the",
    "start": "373039",
    "end": "379440"
  },
  {
    "text": "SDK uh if you have your laptop open and you want to try to install the SDK live here I might race a bit ahead of you but",
    "start": "379440",
    "end": "387599"
  },
  {
    "text": "definitely feel free to give it a shot so it's simple to install uh we are in",
    "start": "387599",
    "end": "393800"
  },
  {
    "text": "ruby gems so as you can see the Three Gems we",
    "start": "393800",
    "end": "399199"
  },
  {
    "text": "talked about here AWS SDK core is stable it is ready to use in production and if",
    "start": "399199",
    "end": "404880"
  },
  {
    "text": "you gem install AWS SDK core you're good to go for resources and the aws-sdk V2",
    "start": "404880",
    "end": "412080"
  },
  {
    "text": "we're still in pre-release so for now if you're gem installing those you have to use the--",
    "start": "412080",
    "end": "418520"
  },
  {
    "text": "preag you can also bundle the SDK in your gem file so we're actually at least a couple",
    "start": "418520",
    "end": "427520"
  },
  {
    "text": "version numbers ahead of this but it's worth noting that in a gem file for a pre-release you have to specify the",
    "start": "427520",
    "end": "433080"
  },
  {
    "text": "version number you want but you can just bundle AWS SDK you get resources you get core or you can",
    "start": "433080",
    "end": "440319"
  },
  {
    "text": "just depend on AWS SDK core and you're good to go so again raise of hands how many V1",
    "start": "440319",
    "end": "448520"
  },
  {
    "text": "users a lot of you so you can use V1 and V2 in the same",
    "start": "448520",
    "end": "456120"
  },
  {
    "text": "project you don't have to migrate all at once if you depend on the AWS SDK V1 gem",
    "start": "456120",
    "end": "463400"
  },
  {
    "text": "you have them in the same project you can migrate one piece at a time and take",
    "start": "463400",
    "end": "470240"
  },
  {
    "text": "smaller steps to get to where you need to be managing",
    "start": "470240",
    "end": "476520"
  },
  {
    "text": "credentials so if there is one thing to take away away from this talk or any of the SDK talks it is to never ever at any",
    "start": "476520",
    "end": "484360"
  },
  {
    "text": "time ever put your credentials in source code please do not do",
    "start": "484360",
    "end": "490520"
  },
  {
    "text": "it it can end very badly we provide for you a lot of more secure ways to use",
    "start": "490520",
    "end": "498960"
  },
  {
    "text": "credentials with our sdks for example we will look within your environment variables if you have",
    "start": "498960",
    "end": "508039"
  },
  {
    "text": "the access key in the secer key in environment variables will load from there we have a shared credential file",
    "start": "508039",
    "end": "514560"
  },
  {
    "text": "which I'll talk more about in a second we also look at ec2 instance profile",
    "start": "514560",
    "end": "520159"
  },
  {
    "text": "credentials or you can plum in your own credentials which I would encourage you to get from some sort of secure Source",
    "start": "520159",
    "end": "527000"
  },
  {
    "text": "vending your credentials not hardcoded or in a config file so shared credential",
    "start": "527000",
    "end": "533480"
  },
  {
    "text": "file by default we're going to look in your home directory under AWS credentials you can specify your own",
    "start": "533480",
    "end": "540920"
  },
  {
    "text": "directory if you're building it yourself it's a inii formatted file if you're a",
    "start": "540920",
    "end": "546600"
  },
  {
    "text": "user of the AWS CLI and I know now many of you are or if you use the other sdks",
    "start": "546600",
    "end": "551880"
  },
  {
    "text": "in your project they all pull from the same shared credential file you only need to write it once and you can use",
    "start": "551880",
    "end": "559160"
  },
  {
    "text": "different profiles either in how you build your credential chain or by setting the AWS",
    "start": "559160",
    "end": "566040"
  },
  {
    "text": "profile environment variable so here is what a credential file looks like you can have multiple Ro",
    "start": "566040",
    "end": "572920"
  },
  {
    "text": "multiple roles so you know we have here you could say development and production with different keys and different secret",
    "start": "572920",
    "end": "579399"
  },
  {
    "text": "access keys and you can switch those with AWS profile so we think this",
    "start": "579399",
    "end": "585560"
  },
  {
    "text": "provides an easy but more secure way to manage your",
    "start": "585560",
    "end": "591519"
  },
  {
    "text": "credentials within V2 we provide a lot of helpful documentation this is",
    "start": "591959",
    "end": "598880"
  },
  {
    "text": "especially important because our API our client apis are",
    "start": "598880",
    "end": "604680"
  },
  {
    "text": "built on top of Json descriptions of the different services our resources are",
    "start": "604680",
    "end": "610959"
  },
  {
    "text": "built on top of Json descriptions so we are still able to provide for you with the tools that",
    "start": "610959",
    "end": "616800"
  },
  {
    "text": "we've written helpful and detailed documentation I want to take you a",
    "start": "616800",
    "end": "622360"
  },
  {
    "text": "second to show you what this looks like so here we have the documentation",
    "start": "622360",
    "end": "628600"
  },
  {
    "text": "page for V of the SDK you see we break it out by service",
    "start": "628600",
    "end": "633839"
  },
  {
    "text": "here so if we look at ec2 and it's",
    "start": "633839",
    "end": "638160"
  },
  {
    "text": "client we have all the different Services broken out so if we look at run",
    "start": "639079",
    "end": "646600"
  },
  {
    "text": "instances this is a pretty meaty service call uh have any of you actually written a run instances call by hand for say",
    "start": "646600",
    "end": "653680"
  },
  {
    "text": "like a devops project you have so we actually provide for you a",
    "start": "653680",
    "end": "659720"
  },
  {
    "text": "formatting example with all the different parameters you can use and we call out which ones are required and",
    "start": "659720",
    "end": "665639"
  },
  {
    "text": "what kind of types we're looking for so this will help you construct a valid call even when the call is more",
    "start": "665639",
    "end": "673720"
  },
  {
    "text": "complex we also break out request parameters with detailed explanations of",
    "start": "673720",
    "end": "678880"
  },
  {
    "text": "what they mean and we document the response",
    "start": "678880",
    "end": "684440"
  },
  {
    "text": "structure so that you can figure out what you're looking for from the response",
    "start": "684440",
    "end": "691240"
  },
  {
    "text": "another thing that will become more clear later we have the wait until method and we've documented how waiters",
    "start": "694560",
    "end": "701680"
  },
  {
    "text": "work here for any service you can look here to see what waiters we support and what",
    "start": "701680",
    "end": "707360"
  },
  {
    "text": "client methods they're built on top of we'll get a little more into that later what you can also see is documentation",
    "start": "707360",
    "end": "715200"
  },
  {
    "text": "of our objectoriented resources so you'll see we have several classes in here and these for the most",
    "start": "715200",
    "end": "722560"
  },
  {
    "text": "part represent resource objects such as the base resource instance snapshot and",
    "start": "722560",
    "end": "731079"
  },
  {
    "text": "more we also provide an interactive console this existed in V1 but it's",
    "start": "736680",
    "end": "741720"
  },
  {
    "text": "worth checking out again in V2 so it ships with the core gem if you",
    "start": "741720",
    "end": "747639"
  },
  {
    "text": "have resources as well it will pull it in for you it's built on top of pry or",
    "start": "747639",
    "end": "752959"
  },
  {
    "text": "if you don't have pry on your machine it will automatically fall back to IRB we also have helpers for client",
    "start": "752959",
    "end": "759760"
  },
  {
    "text": "logging and HTTP wir tracing which is definitely cool to check out so let's",
    "start": "759760",
    "end": "765279"
  },
  {
    "text": "see what this looks like so I have a bass terminal",
    "start": "765279",
    "end": "772079"
  },
  {
    "text": "here aw. RB is the name so it provides for you an interactive console so if I",
    "start": "772240",
    "end": "777880"
  },
  {
    "text": "make a call like let say list",
    "start": "777880",
    "end": "784079"
  },
  {
    "text": "objects it will print the response that you get from the service so you can take",
    "start": "789519",
    "end": "795160"
  },
  {
    "text": "a look at that if you're messing around trying to see what's going to happen in your code we also show you the low-level",
    "start": "795160",
    "end": "802600"
  },
  {
    "text": "client operation that was called how long it took the response you got from the",
    "start": "802600",
    "end": "808120"
  },
  {
    "text": "server you can also use wire tracing with the-",
    "start": "808120",
    "end": "813279"
  },
  {
    "text": "v flag for verose so if we make another call here say head",
    "start": "813279",
    "end": "819680"
  },
  {
    "text": "bucket yep bucket",
    "start": "825440",
    "end": "829000"
  },
  {
    "text": "name so it will show you the request that we made over the wire and the response that we got back from the",
    "start": "830480",
    "end": "836880"
  },
  {
    "text": "server this is really handy anytime something is breaking that you don't think should so you can try to figure",
    "start": "836880",
    "end": "843519"
  },
  {
    "text": "out was there a problem over the wire was there a problem with your code it really helps separate that out so it's a",
    "start": "843519",
    "end": "849680"
  },
  {
    "text": "feature I'd encourage you to",
    "start": "849680",
    "end": "852800"
  },
  {
    "text": "use So speaking of features let's go into some of the features we'd like to highlight about V2 the",
    "start": "857839",
    "end": "863920"
  },
  {
    "text": "SDK so the three features I want to really dive into are resources pagein",
    "start": "863920",
    "end": "869440"
  },
  {
    "text": "and waiters we're going to start by talking about",
    "start": "869440",
    "end": "874480"
  },
  {
    "text": "resources so I know some of you are doing devops here and you've probably",
    "start": "874480",
    "end": "880560"
  },
  {
    "text": "had to manage at some point large fleets of ec2 instances in one case I was dealing with",
    "start": "880560",
    "end": "887199"
  },
  {
    "text": "I had a system that I maintain where we would be spinning up hundreds of ec2",
    "start": "887199",
    "end": "892279"
  },
  {
    "text": "instances per day doing some data processing and spinning them down what I",
    "start": "892279",
    "end": "897360"
  },
  {
    "text": "learned a few weeks into this is we we weren't cleaning up properly and I had a few dozen instances just sitting there",
    "start": "897360",
    "end": "903920"
  },
  {
    "text": "doing nothing so how do we solve that problem well in V1 of the SDK it's",
    "start": "903920",
    "end": "911560"
  },
  {
    "text": "fairly simple with the higher level abstractions we give you you Loop over your instances and you call",
    "start": "911560",
    "end": "917399"
  },
  {
    "text": "terminate in V2 of the SDK we do provide a batch operation for you so you can",
    "start": "917399",
    "end": "922759"
  },
  {
    "text": "simply say ec2 do instances which will give you a collection of your instances",
    "start": "922759",
    "end": "928560"
  },
  {
    "text": "terminate and they all go away so quick quiz question raise your hand if you want to",
    "start": "928560",
    "end": "933959"
  },
  {
    "text": "answer if we have 100 instances and I make this call with V1 or this call with V2 how many calls are each of those",
    "start": "933959",
    "end": "940639"
  },
  {
    "text": "going to",
    "start": "940639",
    "end": "942920"
  },
  {
    "text": "make well in V1 We're looping over the instances and calling",
    "start": "947199",
    "end": "952920"
  },
  {
    "text": "terminate yeah right so two calls one for the",
    "start": "954920",
    "end": "960519"
  },
  {
    "text": "describe one for the terminate and V2 and N plus one for V1 so we're going to make 101 calls versus two so I know some",
    "start": "960519",
    "end": "969399"
  },
  {
    "text": "of you I've talked to have already written batching support within V1 to try to replicate this Behavior now it",
    "start": "969399",
    "end": "975000"
  },
  {
    "text": "comes out of the box you also probably want to not kill",
    "start": "975000",
    "end": "981120"
  },
  {
    "text": "all of your instances maybe you want to be a little bit more discriminate so obviously if you're killing an instance it's probably",
    "start": "981120",
    "end": "987120"
  },
  {
    "text": "running but you may also have issues like like tags that you want to make sure you handle",
    "start": "987120",
    "end": "992920"
  },
  {
    "text": "properly so here's what it looks like on the client level you can call describe instances",
    "start": "992920",
    "end": "999800"
  },
  {
    "text": "with filters filtering for values such as State tags you've put on it or anything else we provide a lot of",
    "start": "999800",
    "end": "1006040"
  },
  {
    "text": "filters for ac2 then we collect them into an array call a batch terminate two API calls",
    "start": "1006040",
    "end": "1013319"
  },
  {
    "text": "fair amount of code written with V2 resources you can PL in",
    "start": "1013319",
    "end": "1019279"
  },
  {
    "text": "any of the filters you can use for describe instances inside the ec2 instances",
    "start": "1019279",
    "end": "1024520"
  },
  {
    "text": "collection Builder and again it's a batch call it saves you some code that you might have",
    "start": "1024520",
    "end": "1029880"
  },
  {
    "text": "had had to write in the past so again resource objects it's a",
    "start": "1029880",
    "end": "1035038"
  },
  {
    "text": "simple object-oriented abstraction over your clients because there's a lot less",
    "start": "1035039",
    "end": "1040480"
  },
  {
    "text": "handwritten code we have a very light abstraction layer for example if a new",
    "start": "1040480",
    "end": "1045918"
  },
  {
    "text": "version of the S3 client comes out and it's adding new parameters to say your get object call you just get",
    "start": "1045919",
    "end": "1052840"
  },
  {
    "text": "those you can add those into your calls and they work we've improved memoization",
    "start": "1052840",
    "end": "1058120"
  },
  {
    "text": "some of our V1 calls are very chatty you could get attributes and it's going to call say described instances where you",
    "start": "1058120",
    "end": "1065360"
  },
  {
    "text": "weren't necessarily expecting that here resources will wait till the last possible moment and will only make",
    "start": "1065360",
    "end": "1073000"
  },
  {
    "text": "system calls when you expect them to we have improved batching support as we showed in our example",
    "start": "1073000",
    "end": "1079960"
  },
  {
    "text": "and resources are integrated with waiters imp pagination so you can develop at the client or the resource",
    "start": "1079960",
    "end": "1085520"
  },
  {
    "text": "level and get these features so let's go for a live",
    "start": "1085520",
    "end": "1092960"
  },
  {
    "text": "demo so here we have the interactive console open and I'm going to create an S3",
    "start": "1093600",
    "end": "1100440"
  },
  {
    "text": "resource",
    "start": "1100440",
    "end": "1103000"
  },
  {
    "text": "object so each resource object comes with a built-in client you can pass in",
    "start": "1105720",
    "end": "1111520"
  },
  {
    "text": "your own if you have a client with special parameters we can create an S3",
    "start": "1111520",
    "end": "1121039"
  },
  {
    "text": "bucket resource object and note that we haven't made a system call yet I could",
    "start": "1121039",
    "end": "1126240"
  },
  {
    "text": "use any bucket name here and it's going to wait until it has to to make a system",
    "start": "1126240",
    "end": "1132720"
  },
  {
    "text": "call if you look at bucket. objects it's a collection type that we've provided",
    "start": "1133880",
    "end": "1139880"
  },
  {
    "text": "that gives you those batching operations on top of S3",
    "start": "1139880",
    "end": "1145280"
  },
  {
    "text": "objects so you can see in the bucket we have a set of videos and",
    "start": "1149039",
    "end": "1155080"
  },
  {
    "text": "pictures real simple bucket like you might have for you know family stuff or you know the crazy things your pets",
    "start": "1155080",
    "end": "1163080"
  },
  {
    "text": "do one nice thing about this is we provide all of the features of Ruby",
    "start": "1163400",
    "end": "1170720"
  },
  {
    "text": "innumerable but we can also as with ec2 instances pass",
    "start": "1171039",
    "end": "1178039"
  },
  {
    "text": "in different filters or other parameters you would make into list objects so here we've",
    "start": "1179080",
    "end": "1187039"
  },
  {
    "text": "split out our videos we can",
    "start": "1187039",
    "end": "1193880"
  },
  {
    "text": "also use the enumerable call reject so let's say that we want to filter",
    "start": "1193880",
    "end": "1200799"
  },
  {
    "text": "out anything that's an mp4",
    "start": "1200799",
    "end": "1205440"
  },
  {
    "text": "file okay that's interesting oh it's pulling out the string here because for videos I made I",
    "start": "1219559",
    "end": "1226919"
  },
  {
    "text": "did the map where I didn't have to okay pardon live demo error here we go",
    "start": "1226919",
    "end": "1233559"
  },
  {
    "text": "so here's everything but the MP4s and of course like any batch operation we can just delete all our videos two calls and",
    "start": "1233559",
    "end": "1241039"
  },
  {
    "text": "they're",
    "start": "1241039",
    "end": "1243240"
  },
  {
    "text": "gone so let's talk a bit about pagination how many of you maintain",
    "start": "1250240",
    "end": "1256159"
  },
  {
    "text": "buckets that have well over a thousand objects in them so most of you have run into pagination",
    "start": "1256159",
    "end": "1262280"
  },
  {
    "text": "in the past what would it look like using the V1 lower level client to try to iterate",
    "start": "1262280",
    "end": "1267960"
  },
  {
    "text": "properly over a bucket that has more than a thousand objects there's a fair amount of logic",
    "start": "1267960",
    "end": "1274360"
  },
  {
    "text": "here and some of you are probably nodding your heads like yes I've done this before so if we using the V2 client with",
    "start": "1274360",
    "end": "1281600"
  },
  {
    "text": "built-in pagination what does it look like much much simpler you can emit",
    "start": "1281600",
    "end": "1288799"
  },
  {
    "text": "object to a block we handle determining the marker we handle determining when there's no more truncation you can just",
    "start": "1288799",
    "end": "1295520"
  },
  {
    "text": "Loop over your objects and do whatever operation you want to do on them such as collecting the keys in this",
    "start": "1295520",
    "end": "1302279"
  },
  {
    "text": "case in V2 resources it's even a little bit simpler you can use that object",
    "start": "1302279",
    "end": "1308679"
  },
  {
    "text": "collection iterate over it do whatever operation you want to do with each object in turn it's all handled behind",
    "start": "1308679",
    "end": "1315520"
  },
  {
    "text": "the scenes for you so all client responses are automatically paginated we decorate them",
    "start": "1315520",
    "end": "1322919"
  },
  {
    "text": "with the pageable response class that gives you helper method such as next page last page or ways to emit each",
    "start": "1322919",
    "end": "1329440"
  },
  {
    "text": "object to a block many of our V1 higher level abstractions were just ways to",
    "start": "1329440",
    "end": "1335520"
  },
  {
    "text": "implement pagination and they can be replaced at the client level",
    "start": "1335520",
    "end": "1341000"
  },
  {
    "text": "now last I'd like to talk about waiters so when you create an ec2",
    "start": "1341400",
    "end": "1348600"
  },
  {
    "text": "instance you get a response back right away 200 we're making your instance",
    "start": "1348600",
    "end": "1353960"
  },
  {
    "text": "often you have to wait until it's available to do your next operation so some of you have probably",
    "start": "1353960",
    "end": "1361520"
  },
  {
    "text": "written something like this or have invented the wheel for your own application to be able to properly wait",
    "start": "1361520",
    "end": "1368480"
  },
  {
    "text": "on an instance to either appear or fail to be running I feel I hear some I see some",
    "start": "1368480",
    "end": "1374559"
  },
  {
    "text": "laughing in the crowd so this seems like yeah many people I've talked to have run the same kind of thing and there's a lot",
    "start": "1374559",
    "end": "1380360"
  },
  {
    "text": "of code that you really feel like you should not be writing so using the V2 client how do we",
    "start": "1380360",
    "end": "1387520"
  },
  {
    "text": "do the same thing oneliner wait until instance",
    "start": "1387520",
    "end": "1393679"
  },
  {
    "text": "running or you can do instance stopped instance instance terminated pass in your instance and it",
    "start": "1393679",
    "end": "1399960"
  },
  {
    "text": "will wait until it's running and return it to you using Amazon S3 waiting for an",
    "start": "1399960",
    "end": "1406520"
  },
  {
    "text": "object to exist um in the past I've been writing asynchronous applications where",
    "start": "1406520",
    "end": "1413200"
  },
  {
    "text": "some process is writing objects S3 another is trying to consume them down the",
    "start": "1413200",
    "end": "1418559"
  },
  {
    "text": "road obviously when you have any kind of asynchronous processes you don't know if",
    "start": "1418559",
    "end": "1423640"
  },
  {
    "text": "the object has been written yet so we have to wait for it to exist using the",
    "start": "1423640",
    "end": "1429880"
  },
  {
    "text": "client it's simple as we've seen before you give it the bucket name you give it",
    "start": "1429880",
    "end": "1435080"
  },
  {
    "text": "the key we have a built-in waiter to do this using V2 resources it's much the",
    "start": "1435080",
    "end": "1442720"
  },
  {
    "text": "same because the bucket and the object provide for you the bucket name in the key it's just plumbed right into that",
    "start": "1442720",
    "end": "1449480"
  },
  {
    "text": "same client call these two lines are equivalent so waiters we're pulling",
    "start": "1449480",
    "end": "1456039"
  },
  {
    "text": "client requests for success and failure States you can configure them if you get",
    "start": "1456039",
    "end": "1461159"
  },
  {
    "text": "throttled a lot and I know I've talked to some of you who do you can decrease your polling frequency or you can also",
    "start": "1461159",
    "end": "1468520"
  },
  {
    "text": "fail fast not wait very long and then fail or wait for a long time until the object",
    "start": "1468520",
    "end": "1474480"
  },
  {
    "text": "appears so let's take a look at a live",
    "start": "1474480",
    "end": "1478799"
  },
  {
    "text": "demo so if you look at the client the waiter names are provided to",
    "start": "1483919",
    "end": "1489320"
  },
  {
    "text": "you within any client with the waiter names method so let's take a look at an object",
    "start": "1489320",
    "end": "1497320"
  },
  {
    "text": "here or we'll call it hello",
    "start": "1497320",
    "end": "1504880"
  },
  {
    "text": "reinvent we'll wait until it exists and",
    "start": "1505679",
    "end": "1511000"
  },
  {
    "text": "then get the body and read it it's not there",
    "start": "1511000",
    "end": "1517039"
  },
  {
    "text": "404 wait for a polling period 404 again let's make it",
    "start": "1517039",
    "end": "1524919"
  },
  {
    "text": "exist",
    "start": "1527320",
    "end": "1530320"
  },
  {
    "text": "next polling period there it",
    "start": "1543360",
    "end": "1549320"
  },
  {
    "text": "is so really simple to do makes a lot of these problems I know you've been having",
    "start": "1549320",
    "end": "1556600"
  },
  {
    "text": "easier",
    "start": "1557240",
    "end": "1560240"
  },
  {
    "text": "so let's take a look at a Ruby on Rails example and bring this all",
    "start": "1564480",
    "end": "1570480"
  },
  {
    "text": "together so we have something called the to-do sample app uh how many of you",
    "start": "1570480",
    "end": "1575520"
  },
  {
    "text": "follow our developer blog so it's definitely something I think you should check out we have this",
    "start": "1575520",
    "end": "1582039"
  },
  {
    "text": "sample application on GitHub and the idea here is this is as simple of a task",
    "start": "1582039",
    "end": "1587440"
  },
  {
    "text": "manager is you can get one pager you can create delete Mark some incomplete mark",
    "start": "1587440",
    "end": "1592480"
  },
  {
    "text": "it incomplete mostly designed to be simple enough that if you know rails you can understand it and focus on the AWS stuff",
    "start": "1592480",
    "end": "1600039"
  },
  {
    "text": "that we're doing instead of focusing on figuring out what the rails app is even doing in the first",
    "start": "1600039",
    "end": "1605320"
  },
  {
    "text": "place so let's take a look at this",
    "start": "1605320",
    "end": "1610679"
  },
  {
    "text": "application so as you can see it's an extremely sophisticated user interface",
    "start": "1613240",
    "end": "1620240"
  },
  {
    "text": "so we can add my first",
    "start": "1620360",
    "end": "1625120"
  },
  {
    "text": "task because there's lots to do with our new manager",
    "start": "1625600",
    "end": "1631759"
  },
  {
    "text": "here maybe too much so hey we're done we've made a task don't really want to",
    "start": "1632080",
    "end": "1638159"
  },
  {
    "text": "do that really really simple task",
    "start": "1638159",
    "end": "1642960"
  },
  {
    "text": "manager so what I like to do is add a feature to it so if the task States",
    "start": "1646720",
    "end": "1653320"
  },
  {
    "text": "change we want to notify any users that want to know about this we want to be",
    "start": "1653320",
    "end": "1658840"
  },
  {
    "text": "able to support multiple delivery methods we want to do this over email we want to do this over SMS and this needs",
    "start": "1658840",
    "end": "1664880"
  },
  {
    "text": "to scale because as a simple task manager it's going to be a huge hit and everyone's going to want to use",
    "start": "1664880",
    "end": "1671278"
  },
  {
    "text": "it so we can use Amazon SNS and integrate with that to do what we need",
    "start": "1671640",
    "end": "1677760"
  },
  {
    "text": "it's supports email it supports SMS for that matter it supports much more than that such as push",
    "start": "1677760",
    "end": "1684399"
  },
  {
    "text": "notifications it handles the scaling for you you make one call and it delivers everything whether you have one",
    "start": "1684399",
    "end": "1690000"
  },
  {
    "text": "subscriber or a million in the resource apis support",
    "start": "1690000",
    "end": "1696720"
  },
  {
    "text": "SNS so we're going to go a little bit quickly through this so you're probably not going to be able to live code along",
    "start": "1696720",
    "end": "1702480"
  },
  {
    "text": "if you're trying that I would definitely encourage you to check this out on video so you can pause stop rewind and Skip",
    "start": "1702480",
    "end": "1709120"
  },
  {
    "text": "ahead as you need but we have everything here you need to implement this feature so make sure you have AWS SDK",
    "start": "1709120",
    "end": "1716640"
  },
  {
    "text": "resources in your gem file we add a form to the index page now",
    "start": "1716640",
    "end": "1723240"
  },
  {
    "text": "there's a lot going on here but the gist is we have two form tags one to populate",
    "start": "1723240",
    "end": "1729440"
  },
  {
    "text": "an SMS subscriber and one to populate an email",
    "start": "1729440",
    "end": "1735000"
  },
  {
    "text": "subscriber Roots we have two Roots one for each post action simple",
    "start": "1737039",
    "end": "1742840"
  },
  {
    "text": "enough we create a controller for our subscriptions so if we need to create an",
    "start": "1742840",
    "end": "1748919"
  },
  {
    "text": "SMS subscription we Plum that to through to our subscription pseudo class if we",
    "start": "1748919",
    "end": "1754720"
  },
  {
    "text": "need to create an email subscription we Plum that through to our email pseudo class and we just specify what endpoint",
    "start": "1754720",
    "end": "1762080"
  },
  {
    "text": "SNS is going to need and redirect back to our page the subscription pseudo model looks",
    "start": "1762080",
    "end": "1768679"
  },
  {
    "text": "like this remember when you create a resource object it is not going to make a surfice call unless it has",
    "start": "1768679",
    "end": "1775799"
  },
  {
    "text": "to so the fact that we're creating a new resource we're not going to be making a bunch of calls over the wire that aren't",
    "start": "1775799",
    "end": "1781799"
  },
  {
    "text": "necessary and we can use that to simplify our code so what you'll see here is we have",
    "start": "1781799",
    "end": "1788799"
  },
  {
    "text": "three calls related to the SDK one to build a topic one to create a new subscription",
    "start": "1788799",
    "end": "1795480"
  },
  {
    "text": "using the data from the form and and one to publish a",
    "start": "1795480",
    "end": "1800960"
  },
  {
    "text": "message in the task controller for each task action we want to add a publishing",
    "start": "1800960",
    "end": "1808919"
  },
  {
    "text": "notification we're not writing all this code we're just writing one line in it",
    "start": "1808919",
    "end": "1814080"
  },
  {
    "text": "so we say we created a new task we Plum through the task name add a title to the message and we can send that",
    "start": "1814080",
    "end": "1821440"
  },
  {
    "text": "along so what did we do every time the task status changes we publish a status",
    "start": "1821440",
    "end": "1828120"
  },
  {
    "text": "message using Amazon SNS which handles the delivery and scaling and using the resource apis we",
    "start": "1828120",
    "end": "1835360"
  },
  {
    "text": "eliminated some code duplication so what does our application look like",
    "start": "1835360",
    "end": "1842240"
  },
  {
    "text": "now so now we have a form to add subscriptions um we can",
    "start": "1843559",
    "end": "1850080"
  },
  {
    "text": "subscribe an email to",
    "start": "1850080",
    "end": "1854518"
  },
  {
    "text": "it and if I go to the email account I made for this we have a subscription",
    "start": "1855880",
    "end": "1861159"
  },
  {
    "text": "confirmation this is all handled for you by",
    "start": "1861159",
    "end": "1865679"
  },
  {
    "text": "SNS so we confirm our subscription",
    "start": "1866679",
    "end": "1871600"
  },
  {
    "text": "and we start doing stuff make a task maybe we don't have so",
    "start": "1872399",
    "end": "1877639"
  },
  {
    "text": "much to do we delete that this is done this isn't done anymore okay maybe it is so we start",
    "start": "1877639",
    "end": "1884919"
  },
  {
    "text": "doing a lot of operations what happen happened to our email account well everything's there you're",
    "start": "1884919",
    "end": "1892840"
  },
  {
    "text": "subscribed you're following along with all the updates to this task manager application and incidentally my phone",
    "start": "1892840",
    "end": "1899320"
  },
  {
    "text": "kept vibrating because when I was testing this I subscribed my phone too so looks like no one else is",
    "start": "1899320",
    "end": "1905399"
  },
  {
    "text": "subscribed no one else's phone is going",
    "start": "1905399",
    "end": "1909080"
  },
  {
    "text": "off so in conclusion you can use V2 of the SDK",
    "start": "1912320",
    "end": "1918799"
  },
  {
    "text": "today gem install AWS SDK D- pre you're on V2 you can start messing around with",
    "start": "1918799",
    "end": "1925360"
  },
  {
    "text": "all the features that we've talked about today and if you use SD AWS SDK core",
    "start": "1925360",
    "end": "1931600"
  },
  {
    "text": "it's stable we're not making backwards incompatible changes you can use it in production and get the benefits such as",
    "start": "1931600",
    "end": "1937639"
  },
  {
    "text": "pagination and waiters starting today you can use V1 and V2 in the same",
    "start": "1937639",
    "end": "1943639"
  },
  {
    "text": "project again you do not have to migrate everything at once you can migrate",
    "start": "1943639",
    "end": "1948679"
  },
  {
    "text": "things peac meal test carefully make sure everything's good to go we support",
    "start": "1948679",
    "end": "1954120"
  },
  {
    "text": "that not yet stable is AWS SDK resources and V major version two of the AWS SDK",
    "start": "1954120",
    "end": "1961639"
  },
  {
    "text": "gem we are converging on a stable version when we have more to say we'll be letting you know we're hoping to get",
    "start": "1961639",
    "end": "1968639"
  },
  {
    "text": "there soon we encourage you to contribute to the SDK we're open source we're on",
    "start": "1968639",
    "end": "1975840"
  },
  {
    "text": "GitHub you can file issues with any bugs you're having you can contribute",
    "start": "1975840",
    "end": "1981320"
  },
  {
    "text": "features you can contribute resource descriptions you can contribute pagination support you can contribute",
    "start": "1981320",
    "end": "1987480"
  },
  {
    "text": "new waiters if there's something we don't have that you need to use and as a bonus multiple sdks",
    "start": "1987480",
    "end": "1994200"
  },
  {
    "text": "including Java and python use the same resource descriptions the same waiters",
    "start": "1994200",
    "end": "2000679"
  },
  {
    "text": "as we do so if you provide your work you can have a wide",
    "start": "2000679",
    "end": "2006760"
  },
  {
    "text": "impact as a bonus an example we have an AWS cloud formation resource definition",
    "start": "2006760",
    "end": "2012799"
  },
  {
    "text": "that came from a customer of the Ruby SDK we worked with them to get things straightened out and you know we're",
    "start": "2012799",
    "end": "2019360"
  },
  {
    "text": "hugely grateful it's a lot of benefit to our customers to have that cloud formation",
    "start": "2019360",
    "end": "2026360"
  },
  {
    "text": "resource we have a developer blog at ruby. AWS blog.com which includes tips tricks in",
    "start": "2027039",
    "end": "2034200"
  },
  {
    "text": "the development history of V2 that end to end rails tutorial we were talking about before and we always",
    "start": "2034200",
    "end": "2041720"
  },
  {
    "text": "welcome your requests I've heard a lot of great feedback here at the conference about things such as explaining error",
    "start": "2041720",
    "end": "2047839"
  },
  {
    "text": "handling you know feedback that we want to take and contribute back to the",
    "start": "2047839",
    "end": "2053440"
  },
  {
    "text": "blog so that's what we have for today I thank everyone for coming and for your",
    "start": "2054159",
    "end": "2059440"
  },
  {
    "text": "attention and uh we have time for questions so if we have any questions uh",
    "start": "2059440",
    "end": "2065960"
  },
  {
    "text": "raise your hand shoot",
    "start": "2065960",
    "end": "2069720"
  },
  {
    "text": "so Trevor you seem like you want to answer that",
    "start": "2074679",
    "end": "2079039"
  },
  {
    "text": "question so the question was are we trying to make it easier to get ARS from",
    "start": "2081839",
    "end": "2088838"
  },
  {
    "text": "resources",
    "start": "2096640",
    "end": "2099640"
  },
  {
    "text": "yeah so to recap as answer it's something we're looking into it's something we want to ask",
    "start": "2123119",
    "end": "2128920"
  },
  {
    "text": "but we're not there yet uh do we have any more questions lamb Ruby Lambda Ruby did we",
    "start": "2128920",
    "end": "2135560"
  },
  {
    "text": "launched out",
    "start": "2135560",
    "end": "2138079"
  },
  {
    "text": "today yeah in fact if we go back to the uh documentation page it's right",
    "start": "2144480",
    "end": "2151800"
  },
  {
    "text": "here I don't know uh that would be a good",
    "start": "2156640",
    "end": "2162960"
  },
  {
    "text": "question to bring forward to the new Services booths here today or if they have a presentation later",
    "start": "2162960",
    "end": "2170839"
  },
  {
    "text": "on yeah and if you want to meet up in the Q&A section afterwards I can take",
    "start": "2170839",
    "end": "2175880"
  },
  {
    "text": "down your info and get back to you with that uh any more",
    "start": "2175880",
    "end": "2181760"
  },
  {
    "text": "questions",
    "start": "2186560",
    "end": "2189560"
  },
  {
    "text": "so let's take a look at what we have for waiters here I mean the general idea is we want to pull on a single change and",
    "start": "2197720",
    "end": "2206000"
  },
  {
    "text": "then return um I don't know if we've added",
    "start": "2206000",
    "end": "2211079"
  },
  {
    "text": "that for I think we have any waiters on SNS do we have for",
    "start": "2211079",
    "end": "2219880"
  },
  {
    "text": "sqs",
    "start": "2222839",
    "end": "2225839"
  },
  {
    "text": "yeah",
    "start": "2236440",
    "end": "2239440"
  },
  {
    "text": "yeah so waiters are designed for polling um so so more or less that's what",
    "start": "2243200",
    "end": "2249119"
  },
  {
    "text": "they're designed for you can definitely we hope that V2 of the SDK makes it easier for you to write your own",
    "start": "2249119",
    "end": "2254839"
  },
  {
    "text": "abstractions like",
    "start": "2254839",
    "end": "2257800"
  },
  {
    "text": "that I think it's a good feature request I think that's something we can take back and talk about and then kind of",
    "start": "2262119",
    "end": "2268000"
  },
  {
    "text": "communicate back through the blog if it's something that we're looking at so I think we have time for one more",
    "start": "2268000",
    "end": "2273240"
  },
  {
    "text": "question if someone would like to yes",
    "start": "2273240",
    "end": "2279440"
  },
  {
    "text": "so that's a great question he's asking are we planning on a version three in a version 4 so one of the motivations",
    "start": "2282079",
    "end": "2288960"
  },
  {
    "text": "behind creating V2 of the SDK was to take out some of the",
    "start": "2288960",
    "end": "2295880"
  },
  {
    "text": "handc uh operational burden and we've tried to make all of our abstractions as",
    "start": "2295880",
    "end": "2301040"
  },
  {
    "text": "simple as possible because we really really want to avoid incrementing major",
    "start": "2301040",
    "end": "2306680"
  },
  {
    "text": "versions if we don't have to so by having the lightest weight layer over",
    "start": "2306680",
    "end": "2312280"
  },
  {
    "text": "the client that we can by having very simple object-oriented abstractions and resources we're putting in a lot of work",
    "start": "2312280",
    "end": "2319400"
  },
  {
    "text": "to try to avoid doing just that and to have V2 be the canonical version of the SDK going",
    "start": "2319400",
    "end": "2326560"
  },
  {
    "text": "forward anyways uh we are going to take this out to the Q&A section outside the",
    "start": "2326560",
    "end": "2333240"
  },
  {
    "text": "hall here I appreciate everyone's time and uh you know I'd like to meet anyone",
    "start": "2333240",
    "end": "2338520"
  },
  {
    "text": "who'd like to talk about how they're using the SDK here at the Q&A section so even if you don't have a question feel free to stop by and uh please remember",
    "start": "2338520",
    "end": "2346440"
  },
  {
    "text": "to give me feedback on how I did on this presentation and I think you can get",
    "start": "2346440",
    "end": "2351480"
  },
  {
    "text": "some cool AWS swag for doing so so thanks everyone for your",
    "start": "2351480",
    "end": "2357000"
  },
  {
    "text": "attention",
    "start": "2359200",
    "end": "2362200"
  }
]