[
  {
    "text": "- Hello everyone.",
    "start": "360",
    "end": "1193"
  },
  {
    "text": "My name is Prashant Agrawal,",
    "start": "1193",
    "end": "2550"
  },
  {
    "text": "and I'm working as an Analytics Specialist",
    "start": "2550",
    "end": "4420"
  },
  {
    "text": "or as an architect in AWS",
    "start": "4420",
    "end": "6540"
  },
  {
    "text": "where I primarily focus on\nAmazon OpenSearch Service.",
    "start": "6540",
    "end": "9690"
  },
  {
    "text": "And today, I will be talking",
    "start": "9690",
    "end": "11009"
  },
  {
    "text": "about managing time-series\ndata with data-streams.",
    "start": "11010",
    "end": "14640"
  },
  {
    "text": "So before getting into the data-stream,",
    "start": "14640",
    "end": "16650"
  },
  {
    "text": "let me explain about\nAmazon OpenSearch Service.",
    "start": "16650",
    "end": "19529"
  },
  {
    "text": "So Amazon OpenSearch\nService is a managed service",
    "start": "19530",
    "end": "22350"
  },
  {
    "text": "that makes it easy to deploy,",
    "start": "22350",
    "end": "24060"
  },
  {
    "text": "operate, and scale OpenSearch",
    "start": "24060",
    "end": "26160"
  },
  {
    "text": "along with legacy Elasticsearch\nclusters in AWS cloud.",
    "start": "26160",
    "end": "29640"
  },
  {
    "text": "So let's take a quick detour",
    "start": "29640",
    "end": "31529"
  },
  {
    "text": "and talk about what is OpenSearch.",
    "start": "31530",
    "end": "33740"
  },
  {
    "text": "So OpenSearch is a community-driven,",
    "start": "33740",
    "end": "35700"
  },
  {
    "text": "open-source search and analytics suite,",
    "start": "35700",
    "end": "38070"
  },
  {
    "text": "which is derived from the\nApache 2.0 licensed version",
    "start": "38070",
    "end": "41160"
  },
  {
    "text": "of Elasticsearch 7.10.2 and Kibana 7.10.2.",
    "start": "41160",
    "end": "45243"
  },
  {
    "text": "One of the common use case with OpenSearch",
    "start": "47040",
    "end": "49650"
  },
  {
    "text": "is to index continue\ngenerating time-series data",
    "start": "49650",
    "end": "52770"
  },
  {
    "text": "such as logs, matrix, and traces.",
    "start": "52770",
    "end": "54849"
  },
  {
    "text": "And previously, automating\nindex rollover meant",
    "start": "54849",
    "end": "58200"
  },
  {
    "text": "that you had to first\ncreate a write index,",
    "start": "58200",
    "end": "60540"
  },
  {
    "text": "configure a rollover alias,",
    "start": "60540",
    "end": "62160"
  },
  {
    "text": "and then verify those\nindexes are being rolled over",
    "start": "62160",
    "end": "64830"
  },
  {
    "text": "as expected or not",
    "start": "64830",
    "end": "66380"
  },
  {
    "text": "which makes the bootstrapping step",
    "start": "66380",
    "end": "68759"
  },
  {
    "text": "to be more cumbersome than it needs to be.",
    "start": "68760",
    "end": "71100"
  },
  {
    "text": "But with the help of data-stream,",
    "start": "71100",
    "end": "73830"
  },
  {
    "text": "it is optimized for time-series dataset",
    "start": "73830",
    "end": "76080"
  },
  {
    "text": "that is primarily append-only nature",
    "start": "76080",
    "end": "78750"
  },
  {
    "text": "and simplify all the initial\nsetup processing for the data.",
    "start": "78750",
    "end": "82950"
  },
  {
    "text": "So let's look like what are the challenges",
    "start": "82950",
    "end": "85380"
  },
  {
    "text": "with the time-series indices?",
    "start": "85380",
    "end": "87240"
  },
  {
    "text": "So this particular diagram talks about",
    "start": "87240",
    "end": "89520"
  },
  {
    "text": "how you just set up the\nindexes for time-series data.",
    "start": "89520",
    "end": "92357"
  },
  {
    "text": "So they start with setting\nup the index template",
    "start": "92358",
    "end": "95310"
  },
  {
    "text": "where they define index mapping and alias",
    "start": "95310",
    "end": "97799"
  },
  {
    "text": "which would be helpful\nfor querying the data.",
    "start": "97800",
    "end": "100500"
  },
  {
    "text": "Next, they have the index\nestate management policy",
    "start": "100500",
    "end": "104070"
  },
  {
    "text": "to set up the index\nrotation and then writing",
    "start": "104070",
    "end": "106620"
  },
  {
    "text": "the rollover policies and the write alias",
    "start": "106620",
    "end": "108750"
  },
  {
    "text": "for defining those indices.",
    "start": "108750",
    "end": "111320"
  },
  {
    "text": "So now let's look at like\nhow data-stream works",
    "start": "111320",
    "end": "114600"
  },
  {
    "text": "at very high level and\nsolve some of these problems",
    "start": "114600",
    "end": "117330"
  },
  {
    "text": "which we discussed being\nthe first class citizen",
    "start": "117330",
    "end": "120480"
  },
  {
    "text": "as to store the time-series data.",
    "start": "120480",
    "end": "123180"
  },
  {
    "text": "So data-stream has one or more",
    "start": "123180",
    "end": "124920"
  },
  {
    "text": "auto generated backing\nindices and prefix by .Ds.",
    "start": "124920",
    "end": "128854"
  },
  {
    "text": "And then data-stream name\nand the generation ID.",
    "start": "128855",
    "end": "132450"
  },
  {
    "text": "So you can see here those names are like",
    "start": "132450",
    "end": "134887"
  },
  {
    "text": ".DS-log-nginx-000001 through 02 and 03.",
    "start": "134887",
    "end": "139887"
  },
  {
    "text": "So then for any write operation,",
    "start": "141766",
    "end": "143850"
  },
  {
    "text": "you send the request to data-stream,",
    "start": "143850",
    "end": "145740"
  },
  {
    "text": "it will send it to the latest index.",
    "start": "145740",
    "end": "147870"
  },
  {
    "text": "Once an index is rolled,\nit'll become read only and",
    "start": "147870",
    "end": "150659"
  },
  {
    "text": "you cannot add any new\ndocument to the rotated index.",
    "start": "150660",
    "end": "154230"
  },
  {
    "text": "So typically in log analytics scenario,",
    "start": "154230",
    "end": "156569"
  },
  {
    "text": "there is rarely a modification.",
    "start": "156570",
    "end": "158321"
  },
  {
    "text": "And if needed you can run update by query",
    "start": "158321",
    "end": "161040"
  },
  {
    "text": "or delete by query",
    "start": "161040",
    "end": "162180"
  },
  {
    "text": "in order to back up those older indices",
    "start": "162180",
    "end": "164849"
  },
  {
    "text": "or deleted data from those indices.",
    "start": "164850",
    "end": "167400"
  },
  {
    "text": "Now talking about the search request.",
    "start": "167400",
    "end": "169890"
  },
  {
    "text": "So while running the\nsearch query data streams",
    "start": "169890",
    "end": "172710"
  },
  {
    "text": "out those requests to all backing indices.",
    "start": "172710",
    "end": "175440"
  },
  {
    "text": "And of course you can filter\nout the data by timestamp",
    "start": "175440",
    "end": "178890"
  },
  {
    "text": "to intelligently search those data sets.",
    "start": "178890",
    "end": "181350"
  },
  {
    "text": "So here, whenever you send any\nsearch request, you send it",
    "start": "181350",
    "end": "184159"
  },
  {
    "text": "to the data-stream name\nand then it'll route all",
    "start": "184159",
    "end": "187620"
  },
  {
    "text": "of your queries to like\n.ds-logs-nginx-000001 2 and 3.",
    "start": "187620",
    "end": "192620"
  },
  {
    "text": "So in a nutshell, data-stream helps you to",
    "start": "194306",
    "end": "197160"
  },
  {
    "text": "intelligently manage the\ntime to reach data where",
    "start": "197160",
    "end": "199710"
  },
  {
    "text": "developer or operation team can perform,",
    "start": "199710",
    "end": "202050"
  },
  {
    "text": "focus on the development\nand growing their business",
    "start": "202050",
    "end": "204810"
  },
  {
    "text": "rather than spending time\non the management tasks",
    "start": "204810",
    "end": "207569"
  },
  {
    "text": "such as managing those indices\nor the different data sets.",
    "start": "207570",
    "end": "211397"
  },
  {
    "text": "So this concludes a quick\noverview of data-stream.",
    "start": "211397",
    "end": "214735"
  },
  {
    "text": "If you would like to know more",
    "start": "214735",
    "end": "216240"
  },
  {
    "text": "about data-stream or looking\nfor a demo, please check",
    "start": "216240",
    "end": "218820"
  },
  {
    "text": "out our getting started\npage over here and the link",
    "start": "218820",
    "end": "221670"
  },
  {
    "text": "of demo as well, which talks\nin depth about the data-stream.",
    "start": "221670",
    "end": "224656"
  },
  {
    "text": "So thank you for listening\nand feel free to reach",
    "start": "224656",
    "end": "227430"
  },
  {
    "text": "out to us if you have\nany further questions.",
    "start": "227430",
    "end": "229739"
  },
  {
    "text": "Thank you.",
    "start": "229740",
    "end": "230573"
  }
]