[
  {
    "text": "- [Balwanth] Hello and\nwelcome to this video.",
    "start": "600",
    "end": "2280"
  },
  {
    "text": "I'm Balwanth Bobilli,\nSpecialist Solutions Architect",
    "start": "2280",
    "end": "4710"
  },
  {
    "text": "at Amazon Web Services.",
    "start": "4710",
    "end": "6570"
  },
  {
    "text": "Are you looking to optimize\nyour Timestream queries,",
    "start": "6570",
    "end": "9060"
  },
  {
    "text": "improve performance, and reduce costs?",
    "start": "9060",
    "end": "11580"
  },
  {
    "text": "Query Insights is here to help.",
    "start": "11580",
    "end": "13413"
  },
  {
    "text": "In this video, we will take a closer look",
    "start": "14280",
    "end": "17100"
  },
  {
    "text": "at this powerful feature\nthat is free to use",
    "start": "17100",
    "end": "19770"
  },
  {
    "text": "and show how to use it to get\nthe most out of your data.",
    "start": "19770",
    "end": "23043"
  },
  {
    "text": "Before we dive into Query\nInsights, let's take a quick look",
    "start": "24570",
    "end": "27150"
  },
  {
    "text": "at how the Timestream\nstorage layout looks like.",
    "start": "27150",
    "end": "30420"
  },
  {
    "text": "This will help you to understand",
    "start": "30420",
    "end": "31590"
  },
  {
    "text": "what Query Insights is providing\nand how it can be used.",
    "start": "31590",
    "end": "35340"
  },
  {
    "text": "So when you enter this\ndata into Timestream,",
    "start": "35340",
    "end": "37350"
  },
  {
    "text": "Timestream automatically\npartitions data using timestamps.",
    "start": "37350",
    "end": "40890"
  },
  {
    "text": "That is, temporal partitioning.",
    "start": "40890",
    "end": "42960"
  },
  {
    "text": "And it also partitions",
    "start": "42960",
    "end": "44219"
  },
  {
    "text": "using partitioning key and dimensions.",
    "start": "44220",
    "end": "47580"
  },
  {
    "text": "That is, spatial partitioning.",
    "start": "47580",
    "end": "49879"
  },
  {
    "text": "This approach is designed\nto distribute right traffic",
    "start": "49879",
    "end": "53280"
  },
  {
    "text": "and also allows for effective\npruning of data for queries.",
    "start": "53280",
    "end": "57333"
  },
  {
    "text": "To further simplify the\npruning concept in Timestream,",
    "start": "59730",
    "end": "62348"
  },
  {
    "text": "let's say this simple Select\nquery is sent to Timestream.",
    "start": "62348",
    "end": "64800"
  },
  {
    "text": "Based on the time filter,\nit'll prune out the partitions",
    "start": "64800",
    "end": "67800"
  },
  {
    "text": "which are not related\nto this Select query.",
    "start": "67800",
    "end": "71160"
  },
  {
    "text": "So in this case, it'll\nscan only two days of data.",
    "start": "71160",
    "end": "74043"
  },
  {
    "text": "On top of it,",
    "start": "75000",
    "end": "75933"
  },
  {
    "text": "let's say if device_id\nis a partitioning key,",
    "start": "77580",
    "end": "80760"
  },
  {
    "text": "and based on the device value you sent,",
    "start": "80760",
    "end": "82770"
  },
  {
    "text": "it'll do the spatial pruning.",
    "start": "82770",
    "end": "85713"
  },
  {
    "text": "Now, the challenge was you\nwould not be able to quantify",
    "start": "87330",
    "end": "90690"
  },
  {
    "text": "how much temporal and spatial\ncoverage was happening.",
    "start": "90690",
    "end": "94200"
  },
  {
    "text": "With Query Insights,\nthe problem is solved.",
    "start": "94200",
    "end": "98549"
  },
  {
    "text": "You'll be able to exactly\nsee how much temporal",
    "start": "98550",
    "end": "101190"
  },
  {
    "text": "and spatial pruning is happening.",
    "start": "101190",
    "end": "103020"
  },
  {
    "text": "And based on that, you\ncan optimize your queries.",
    "start": "103020",
    "end": "105930"
  },
  {
    "text": "Now that you understood",
    "start": "105930",
    "end": "106920"
  },
  {
    "text": "how the Timestream storage layout works,",
    "start": "106920",
    "end": "110460"
  },
  {
    "text": "let's go ahead and do a demo",
    "start": "110460",
    "end": "111900"
  },
  {
    "text": "on what Query Insights exactly provides",
    "start": "111900",
    "end": "114180"
  },
  {
    "text": "and how it can be used.",
    "start": "114180",
    "end": "115473"
  },
  {
    "text": "I'm in the Timestream console\npage in the Query Editor tab.",
    "start": "118020",
    "end": "121049"
  },
  {
    "text": "For this demo, I already\nloaded two tables.",
    "start": "121050",
    "end": "124050"
  },
  {
    "text": "One is Demo and the other\none is DemoAggregation table.",
    "start": "124050",
    "end": "126930"
  },
  {
    "text": "Demo contains a sample\ninfrastructure monitoring data",
    "start": "126930",
    "end": "130080"
  },
  {
    "text": "where we are monitoring the\nmemory and CPU of course",
    "start": "130080",
    "end": "133140"
  },
  {
    "text": "in a region.",
    "start": "133140",
    "end": "134250"
  },
  {
    "text": "DemoAggregation table is\nautomatically populated",
    "start": "134250",
    "end": "136770"
  },
  {
    "text": "using Timestream scheduling query,",
    "start": "136770",
    "end": "138840"
  },
  {
    "text": "where it runs hourly\naggregation from the Demo table",
    "start": "138840",
    "end": "141690"
  },
  {
    "text": "and loads into DemoAggregations table.",
    "start": "141690",
    "end": "143943"
  },
  {
    "text": "Now let's go ahead and run a simple query",
    "start": "144780",
    "end": "147959"
  },
  {
    "text": "and enable Insights.",
    "start": "147960",
    "end": "149343"
  },
  {
    "text": "select * from",
    "start": "150180",
    "end": "152109"
  },
  {
    "text": "Demo database,",
    "start": "155730",
    "end": "157890"
  },
  {
    "text": "and I'm gonna choose DemoAggregations.",
    "start": "157890",
    "end": "160683"
  },
  {
    "text": "To enable Insights, all I have to do",
    "start": "162240",
    "end": "163770"
  },
  {
    "text": "is click the Enable Insights\nbutton and run the query.",
    "start": "163770",
    "end": "167763"
  },
  {
    "text": "You could do the same using API as well.",
    "start": "168840",
    "end": "172470"
  },
  {
    "text": "Refer to Timestream documentation",
    "start": "172470",
    "end": "174030"
  },
  {
    "text": "how to enable Insights using API.",
    "start": "174030",
    "end": "176133"
  },
  {
    "text": "Now that we have enabled\nthe Query Insights,",
    "start": "178290",
    "end": "180390"
  },
  {
    "text": "we have a wealth of information.",
    "start": "180390",
    "end": "182520"
  },
  {
    "text": "That is, query spatial coverage,",
    "start": "182520",
    "end": "184110"
  },
  {
    "text": "query temporal coverage, and metrics.",
    "start": "184110",
    "end": "185880"
  },
  {
    "text": "Now let's understand how\nthis information can be used",
    "start": "185880",
    "end": "188640"
  },
  {
    "text": "to optimize your queries.",
    "start": "188640",
    "end": "191370"
  },
  {
    "text": "Starting from left, we have\nquery spatial coverage,",
    "start": "191370",
    "end": "194129"
  },
  {
    "text": "which has the table ARN",
    "start": "194130",
    "end": "195960"
  },
  {
    "text": "for which the spatial\ncoverage is displayed,",
    "start": "195960",
    "end": "198180"
  },
  {
    "text": "and the spatial coverage\npercentage itself,",
    "start": "198180",
    "end": "200489"
  },
  {
    "text": "and the partition key.",
    "start": "200490",
    "end": "201693"
  },
  {
    "text": "In my case, it is host_id.",
    "start": "202530",
    "end": "204603"
  },
  {
    "text": "And if you do not apply your partition key",
    "start": "205920",
    "end": "209440"
  },
  {
    "text": "as a filter, you'll see\n100% as a spatial coverage.",
    "start": "211290",
    "end": "215340"
  },
  {
    "text": "So that's what you see in here.",
    "start": "215340",
    "end": "216900"
  },
  {
    "text": "Since we did not apply\nany partitioning filter,",
    "start": "216900",
    "end": "219510"
  },
  {
    "text": "it's scanning the entire\n100% spatial coverage.",
    "start": "219510",
    "end": "222689"
  },
  {
    "text": "Now moving on to the temporal coverage.",
    "start": "222690",
    "end": "224227"
  },
  {
    "text": "Here also it shows the table ARN",
    "start": "224227",
    "end": "226260"
  },
  {
    "text": "for which the temporal\ncoverage is being shown",
    "start": "226260",
    "end": "228870"
  },
  {
    "text": "is being displayed.",
    "start": "228870",
    "end": "230670"
  },
  {
    "text": "And for the max query temporal range,",
    "start": "230670",
    "end": "233370"
  },
  {
    "text": "since we did not apply the time filter,",
    "start": "233370",
    "end": "235440"
  },
  {
    "text": "it is showing the entire\ntemporal range for this table.",
    "start": "235440",
    "end": "238890"
  },
  {
    "text": "And the metrics part,",
    "start": "238890",
    "end": "240060"
  },
  {
    "text": "it shows there is one table\ninvolved in this query,",
    "start": "240060",
    "end": "244349"
  },
  {
    "text": "and the output rows and the output bytes.",
    "start": "244350",
    "end": "246810"
  },
  {
    "text": "Now let's go ahead and check out",
    "start": "246810",
    "end": "248040"
  },
  {
    "text": "the performance metrics as well.",
    "start": "248040",
    "end": "249782"
  },
  {
    "text": "So this query took 8.5 seconds to run",
    "start": "251460",
    "end": "255210"
  },
  {
    "text": "and it scanned 1.62 MB of data.",
    "start": "255210",
    "end": "258393"
  },
  {
    "text": "Now let's see how we\ncan optimize the query.",
    "start": "260490",
    "end": "263819"
  },
  {
    "text": "Let's add a filter for spatial pruning",
    "start": "263820",
    "end": "267640"
  },
  {
    "text": "and see how it changes\nthe performance metrics",
    "start": "269480",
    "end": "272370"
  },
  {
    "text": "and Query Insights.",
    "start": "272370",
    "end": "274080"
  },
  {
    "text": "For that, let's say if I\nwant to run only the output",
    "start": "274080",
    "end": "277830"
  },
  {
    "text": "for specific host, I'm\ngonna add that as a filter,",
    "start": "277830",
    "end": "281836"
  },
  {
    "text": "host_id = \"host1\".",
    "start": "281837",
    "end": "284513"
  },
  {
    "text": "So, this is my partition key.",
    "start": "286050",
    "end": "288629"
  },
  {
    "text": "So I'm gonna run this query.",
    "start": "288630",
    "end": "290403"
  },
  {
    "text": "Yep. Now you see the spatial coverage area",
    "start": "293580",
    "end": "297030"
  },
  {
    "text": "is reduced to 0.01%.",
    "start": "297030",
    "end": "299520"
  },
  {
    "text": "Let's go ahead and check\nthe performance metrics.",
    "start": "299520",
    "end": "302610"
  },
  {
    "text": "Before, it was taking 8.5 seconds,",
    "start": "302610",
    "end": "305520"
  },
  {
    "text": "but now, it almost,",
    "start": "305520",
    "end": "307293"
  },
  {
    "text": "reduced to half.",
    "start": "309330",
    "end": "310800"
  },
  {
    "text": "It took only 4.685 seconds.",
    "start": "310800",
    "end": "313470"
  },
  {
    "text": "And the bytes scanned also\nreduced to 828 kilobytes.",
    "start": "313470",
    "end": "317370"
  },
  {
    "text": "That is half of the bytes\nscanned from before query.",
    "start": "317370",
    "end": "321483"
  },
  {
    "text": "Now, let's say if you want\nto run a time filter also,",
    "start": "322380",
    "end": "326070"
  },
  {
    "text": "I want to check the data for host1,",
    "start": "326070",
    "end": "328560"
  },
  {
    "text": "like last two hours only.",
    "start": "328560",
    "end": "330419"
  },
  {
    "text": "Let's see how that improves the query,",
    "start": "330420",
    "end": "332373"
  },
  {
    "text": "where time between,",
    "start": "338052",
    "end": "341349"
  },
  {
    "text": "about two hours, and now.",
    "start": "341349",
    "end": "343432"
  },
  {
    "text": "Let's run this query.",
    "start": "349049",
    "end": "350799"
  },
  {
    "text": "Oops.",
    "start": "354616",
    "end": "355449"
  },
  {
    "text": "Okay.",
    "start": "361990",
    "end": "363539"
  },
  {
    "text": "It further brought down the duration",
    "start": "363540",
    "end": "365730"
  },
  {
    "text": "to just 700 milliseconds,",
    "start": "365730",
    "end": "368220"
  },
  {
    "text": "and the bytes scanned\nreduced almost 40 times",
    "start": "368220",
    "end": "370860"
  },
  {
    "text": "from the original query.",
    "start": "370860",
    "end": "372599"
  },
  {
    "text": "Let's go and check the Query Insights.",
    "start": "372600",
    "end": "375270"
  },
  {
    "text": "As you see, before,",
    "start": "375270",
    "end": "376800"
  },
  {
    "text": "it was showing the\ncomplete temporal range,",
    "start": "376800",
    "end": "379020"
  },
  {
    "text": "now it reduced to two hours.",
    "start": "379020",
    "end": "380520"
  },
  {
    "text": "That is what matches with our requirement.",
    "start": "380520",
    "end": "383910"
  },
  {
    "text": "While adding both time\nand partitioning filters",
    "start": "383910",
    "end": "386850"
  },
  {
    "text": "help the query response\ntime reduce 10 times",
    "start": "386850",
    "end": "390270"
  },
  {
    "text": "and bytes scanned reduce to 40 times,",
    "start": "390270",
    "end": "393210"
  },
  {
    "text": "so it effectively utilizes\nthe compute resources,",
    "start": "393210",
    "end": "397650"
  },
  {
    "text": "which can reduce cost,\nincrease query throughput,",
    "start": "397650",
    "end": "401729"
  },
  {
    "text": "and improve resource utilization.",
    "start": "401730",
    "end": "403380"
  },
  {
    "text": "Now that we understood how\nthe Query Insights work",
    "start": "404790",
    "end": "406890"
  },
  {
    "text": "for single table, let's go ahead and check",
    "start": "406890",
    "end": "409047"
  },
  {
    "text": "how the Query Insights\nwork for multiple tables.",
    "start": "409047",
    "end": "412500"
  },
  {
    "text": "Here I already pasted a query,",
    "start": "412500",
    "end": "414990"
  },
  {
    "text": "which is querying DemoAggregation table",
    "start": "414990",
    "end": "417270"
  },
  {
    "text": "for like last 23 hours,",
    "start": "417270",
    "end": "418979"
  },
  {
    "text": "and the raw_table for like last one hour,",
    "start": "418980",
    "end": "421380"
  },
  {
    "text": "and I'm doing a union all in the end.",
    "start": "421380",
    "end": "423600"
  },
  {
    "text": "I put this complete query in a CT.",
    "start": "423600",
    "end": "426210"
  },
  {
    "text": "Let's go ahead and run the\nInsights for this one as well.",
    "start": "426210",
    "end": "429060"
  },
  {
    "text": "So here we have the\nspatial coverage details.",
    "start": "433170",
    "end": "436260"
  },
  {
    "text": "It shows this most sub-optimal table.",
    "start": "436260",
    "end": "439113"
  },
  {
    "text": "In this case, it's showing\nus DemoAggregation,",
    "start": "440400",
    "end": "442590"
  },
  {
    "text": "and the coverage is 100%.",
    "start": "442590",
    "end": "444990"
  },
  {
    "text": "And same with temporal coverage.",
    "start": "444990",
    "end": "446759"
  },
  {
    "text": "It shows the sub-optimal table",
    "start": "446760",
    "end": "448980"
  },
  {
    "text": "and it's again showing DemoAggregation.",
    "start": "448980",
    "end": "451110"
  },
  {
    "text": "And the max temporal range is 22 hours.",
    "start": "451110",
    "end": "453449"
  },
  {
    "text": "In my case, I would not\nconsider sub-optimal",
    "start": "453450",
    "end": "457200"
  },
  {
    "text": "because that's what I'm querying",
    "start": "457200",
    "end": "460080"
  },
  {
    "text": "from the DemoAggregation table",
    "start": "460080",
    "end": "461430"
  },
  {
    "text": "so it matches my requirement.",
    "start": "461430",
    "end": "463139"
  },
  {
    "text": "But let's say there is a use case",
    "start": "463140",
    "end": "464850"
  },
  {
    "text": "that you're scanning only\nlast one day of data,",
    "start": "464850",
    "end": "468450"
  },
  {
    "text": "but you see temporal range for seven days.",
    "start": "468450",
    "end": "470880"
  },
  {
    "text": "That's when you double-check the query",
    "start": "470880",
    "end": "473550"
  },
  {
    "text": "and to make sure you're\nusing the right filter",
    "start": "473550",
    "end": "476349"
  },
  {
    "text": "to match your temporal range requirement.",
    "start": "477330",
    "end": "479672"
  },
  {
    "text": "In the metrics, now it\nshows table count is two",
    "start": "481350",
    "end": "484050"
  },
  {
    "text": "because there are two tables\ninvolved in the query.",
    "start": "484050",
    "end": "486723"
  },
  {
    "text": "Now let's check the performance metrics.",
    "start": "487920",
    "end": "489920"
  },
  {
    "text": "It took almost one second,",
    "start": "490890",
    "end": "492360"
  },
  {
    "text": "and it scanned 4.20 kilobytes.",
    "start": "492360",
    "end": "495513"
  },
  {
    "text": "Let's reduce the spatial coverage",
    "start": "496680",
    "end": "498810"
  },
  {
    "text": "and see how much it\nbenefits the performance",
    "start": "498810",
    "end": "501400"
  },
  {
    "text": "and also see the difference\nin the spatial coverage.",
    "start": "502980",
    "end": "505580"
  },
  {
    "text": "And add host_id = \"host1\".",
    "start": "506795",
    "end": "510150"
  },
  {
    "text": "And we run the query.",
    "start": "515070",
    "end": "516840"
  },
  {
    "text": "As you see, the spatial\ncoverage is still 100%.",
    "start": "516840",
    "end": "521840"
  },
  {
    "text": "If you closely observe,",
    "start": "521910",
    "end": "523292"
  },
  {
    "text": "it's now showing the table ARN as Demo.",
    "start": "524640",
    "end": "528270"
  },
  {
    "text": "So, any idea why that could happen?",
    "start": "528270",
    "end": "530643"
  },
  {
    "text": "The reason is we did not\nadd the host_id filter",
    "start": "531810",
    "end": "535140"
  },
  {
    "text": "for the Demo table, so\nlet's go ahead and add that",
    "start": "535140",
    "end": "537660"
  },
  {
    "text": "and see spatial coverage improvement.",
    "start": "537660",
    "end": "540043"
  },
  {
    "text": "host2.",
    "start": "544117",
    "end": "544950"
  },
  {
    "text": "And rerun the query.",
    "start": "549315",
    "end": "551010"
  },
  {
    "text": "As you see, the spatial coverage",
    "start": "551010",
    "end": "552570"
  },
  {
    "text": "is now reduced to 0.01 percentage",
    "start": "552570",
    "end": "555660"
  },
  {
    "text": "and the performance rise,",
    "start": "555660",
    "end": "557902"
  },
  {
    "text": "the response time reduced four times",
    "start": "557902",
    "end": "560730"
  },
  {
    "text": "and the bytes scanned reduced 50%.",
    "start": "560730",
    "end": "563183"
  },
  {
    "text": "That's it for this video on\nQuery Insights we have seen",
    "start": "564540",
    "end": "567570"
  },
  {
    "text": "by adding right filters\nand pruning the data.",
    "start": "567570",
    "end": "570090"
  },
  {
    "text": "By using this powerful feature,",
    "start": "570090",
    "end": "573210"
  },
  {
    "text": "we are able to significantly\nimprove performance",
    "start": "573210",
    "end": "575550"
  },
  {
    "text": "and reduce cost.",
    "start": "575550",
    "end": "577230"
  },
  {
    "text": "There is no additional cost\nfor running Query Insights,",
    "start": "577230",
    "end": "579570"
  },
  {
    "text": "so be sure to take advantage of it.",
    "start": "579570",
    "end": "582510"
  },
  {
    "text": "If you have any questions or feedback,",
    "start": "582510",
    "end": "584580"
  },
  {
    "text": "please do not hesitate to reach out to us",
    "start": "584580",
    "end": "586950"
  },
  {
    "text": "on the email displayed here.",
    "start": "586950",
    "end": "588150"
  },
  {
    "text": "Thanks for watching.",
    "start": "588150",
    "end": "589150"
  }
]