[
  {
    "text": "hello everyone my name is Amit Sharma I",
    "start": "89",
    "end": "2250"
  },
  {
    "text": "hate technology for dream 11 which is a",
    "start": "2250",
    "end": "5040"
  },
  {
    "text": "fantasy sports platform startup based",
    "start": "5040",
    "end": "7560"
  },
  {
    "text": "out of Mumbai",
    "start": "7560",
    "end": "8389"
  },
  {
    "text": "you know cricket football Kabaddi",
    "start": "8389",
    "end": "11210"
  },
  {
    "text": "basketball and a most recent sport",
    "start": "11210",
    "end": "13620"
  },
  {
    "text": "hockey and so today I'm going to talk",
    "start": "13620",
    "end": "17130"
  },
  {
    "text": "about how we use Amazon Arora and Amazon",
    "start": "17130",
    "end": "19470"
  },
  {
    "text": "ElastiCache you know it takes tact to",
    "start": "19470",
    "end": "21630"
  },
  {
    "text": "scale our platform to actually as we've",
    "start": "21630",
    "end": "25590"
  },
  {
    "text": "seen a rapid user growth and how you",
    "start": "25590",
    "end": "27539"
  },
  {
    "text": "actually scale our platform to serve the",
    "start": "27539",
    "end": "29340"
  },
  {
    "text": "high rate request rate on our platform",
    "start": "29340",
    "end": "31619"
  },
  {
    "text": "so a little bit about me I'm the CTO of",
    "start": "31619",
    "end": "35550"
  },
  {
    "text": "dream lmn prior to dream 11 I spent",
    "start": "35550",
    "end": "39420"
  },
  {
    "text": "around 10 years working in the valley I",
    "start": "39420",
    "end": "40980"
  },
  {
    "text": "spend around five years working for",
    "start": "40980",
    "end": "42180"
  },
  {
    "text": "Yahoo and then I moved on to Netflix",
    "start": "42180",
    "end": "45379"
  },
  {
    "text": "some words that describe my background",
    "start": "45379",
    "end": "48840"
  },
  {
    "text": "or large-scale distributed systems big",
    "start": "48840",
    "end": "51989"
  },
  {
    "text": "data on the platform site open source",
    "start": "51989",
    "end": "54570"
  },
  {
    "text": "technologies and of course working for a",
    "start": "54570",
    "end": "57480"
  },
  {
    "text": "very long time at Netflix got a lot of",
    "start": "57480",
    "end": "60329"
  },
  {
    "text": "exposure to the area's ecosystem while I",
    "start": "60329",
    "end": "63359"
  },
  {
    "text": "was there I did my masters and covered a",
    "start": "63359",
    "end": "67049"
  },
  {
    "text": "science from University of Massachusetts",
    "start": "67049",
    "end": "68280"
  },
  {
    "text": "back in 2007 and that's when I moved to",
    "start": "68280",
    "end": "71909"
  },
  {
    "text": "California to join Yahoo for those of",
    "start": "71909",
    "end": "76860"
  },
  {
    "text": "you don't who don't know what fantasy",
    "start": "76860",
    "end": "78360"
  },
  {
    "text": "sports is is basically what you do is",
    "start": "78360",
    "end": "80520"
  },
  {
    "text": "you select a match from a live match",
    "start": "80520",
    "end": "83130"
  },
  {
    "text": "from an upcoming live matches and then",
    "start": "83130",
    "end": "84930"
  },
  {
    "text": "you create a team of players from and",
    "start": "84930",
    "end": "88950"
  },
  {
    "text": "then compete in contests with other",
    "start": "88950",
    "end": "91200"
  },
  {
    "text": "users that actually create their own",
    "start": "91200",
    "end": "92909"
  },
  {
    "text": "games and as these players perform on",
    "start": "92909",
    "end": "95850"
  },
  {
    "text": "the real field you get points and based",
    "start": "95850",
    "end": "98640"
  },
  {
    "text": "on that your your team gets world points",
    "start": "98640",
    "end": "101400"
  },
  {
    "text": "and then you start competing with other",
    "start": "101400",
    "end": "103200"
  },
  {
    "text": "players right based on this",
    "start": "103200",
    "end": "106219"
  },
  {
    "text": "this we've got a phenomenal growth story",
    "start": "107110",
    "end": "109910"
  },
  {
    "text": "and this is our growth in the last five",
    "start": "109910",
    "end": "112100"
  },
  {
    "text": "years in back in 2015 we were only one",
    "start": "112100",
    "end": "114230"
  },
  {
    "text": "million user base and we are actually",
    "start": "114230",
    "end": "116060"
  },
  {
    "text": "almost at 50 million user base today and",
    "start": "116060",
    "end": "118190"
  },
  {
    "text": "by the end of next year we projected to",
    "start": "118190",
    "end": "120530"
  },
  {
    "text": "hit 100 million user base what this user",
    "start": "120530",
    "end": "125090"
  },
  {
    "text": "base of 50 million means is there's a",
    "start": "125090",
    "end": "128360"
  },
  {
    "text": "very high engagement on our platform and",
    "start": "128360",
    "end": "130369"
  },
  {
    "text": "this engagement has at its peak during",
    "start": "130369",
    "end": "132380"
  },
  {
    "text": "the biggest sporting event in India",
    "start": "132380",
    "end": "134300"
  },
  {
    "text": "which is called the Indian Premier",
    "start": "134300",
    "end": "135350"
  },
  {
    "text": "League which is a cricket tournament",
    "start": "135350",
    "end": "136820"
  },
  {
    "text": "that happens in april/may every year and",
    "start": "136820",
    "end": "139070"
  },
  {
    "text": "just to give you some context about what",
    "start": "139070",
    "end": "141500"
  },
  {
    "text": "and I feel in India means this is the",
    "start": "141500",
    "end": "145070"
  },
  {
    "text": "viewership of it's like the Super Bowl",
    "start": "145070",
    "end": "146840"
  },
  {
    "text": "of India right so the viewership of",
    "start": "146840",
    "end": "149450"
  },
  {
    "text": "Super Bowl 2018 was 114 million users",
    "start": "149450",
    "end": "152870"
  },
  {
    "text": "and the IPL final which was played back",
    "start": "152870",
    "end": "156020"
  },
  {
    "text": "in May in 2018 the total viewership of",
    "start": "156020",
    "end": "158150"
  },
  {
    "text": "that 174 million people watched that I",
    "start": "158150",
    "end": "161930"
  },
  {
    "text": "feel final every year in april/may what",
    "start": "161930",
    "end": "167270"
  },
  {
    "text": "happens is our traffic patterns actually",
    "start": "167270",
    "end": "168770"
  },
  {
    "text": "increased by a magnitude so back in 2016",
    "start": "168770",
    "end": "171530"
  },
  {
    "text": "when we first started gaining traction",
    "start": "171530",
    "end": "174410"
  },
  {
    "text": "on the platform we hit a peak traffic",
    "start": "174410",
    "end": "177160"
  },
  {
    "text": "requested of 1200 requests per second",
    "start": "177160",
    "end": "179870"
  },
  {
    "text": "and we were very thrilled and but we'd",
    "start": "179870",
    "end": "182720"
  },
  {
    "text": "Wharf that the next year we went 10x and",
    "start": "182720",
    "end": "185840"
  },
  {
    "text": "we started serving 12,000 requests per",
    "start": "185840",
    "end": "187610"
  },
  {
    "text": "second and we again had a three to four",
    "start": "187610",
    "end": "190670"
  },
  {
    "text": "X growth next year and we went to 48,000",
    "start": "190670",
    "end": "194239"
  },
  {
    "text": "requests per second so every year we",
    "start": "194239",
    "end": "196220"
  },
  {
    "text": "deal with this challenge of how do we",
    "start": "196220",
    "end": "197480"
  },
  {
    "text": "scale our platform because as our user",
    "start": "197480",
    "end": "199160"
  },
  {
    "text": "base keeps on increasing and people get",
    "start": "199160",
    "end": "200750"
  },
  {
    "text": "more engaged in their product we need to",
    "start": "200750",
    "end": "202850"
  },
  {
    "text": "build a tech infrastructure that is I'm",
    "start": "202850",
    "end": "204350"
  },
  {
    "text": "able to handle this what these volumes",
    "start": "204350",
    "end": "207160"
  },
  {
    "text": "few more numbers so 90 percent of a user",
    "start": "207160",
    "end": "211670"
  },
  {
    "text": "bases on Android we have 12.5 million",
    "start": "211670",
    "end": "214640"
  },
  {
    "text": "active users 2.4 million or maybe little",
    "start": "214640",
    "end": "217340"
  },
  {
    "text": "more right now daily active users on our",
    "start": "217340",
    "end": "219440"
  },
  {
    "text": "platform our peak concurrency and IPL",
    "start": "219440",
    "end": "223010"
  },
  {
    "text": "last year was around 750 key on Android",
    "start": "223010",
    "end": "225290"
  },
  {
    "text": "alone and across all platforms we were",
    "start": "225290",
    "end": "227510"
  },
  {
    "text": "just under 101 million concurrent users",
    "start": "227510",
    "end": "232720"
  },
  {
    "text": "another very interesting characteristic",
    "start": "232770",
    "end": "236850"
  },
  {
    "text": "of a fantasy sports platform is the",
    "start": "236850",
    "end": "238800"
  },
  {
    "text": "traffic patterns a very spiky in nature",
    "start": "238800",
    "end": "240750"
  },
  {
    "text": "so because you're very closely tied to",
    "start": "240750",
    "end": "242970"
  },
  {
    "text": "what happens in the real world you'll",
    "start": "242970",
    "end": "244680"
  },
  {
    "text": "see the traffic patterns of the server's",
    "start": "244680",
    "end": "246180"
  },
  {
    "text": "are on an average of say maybe 2 or 3",
    "start": "246180",
    "end": "248580"
  },
  {
    "text": "million rpm this is our leaderboard",
    "start": "248580",
    "end": "250710"
  },
  {
    "text": "traffic and then suddenly an interesting",
    "start": "250710",
    "end": "252720"
  },
  {
    "text": "event happens in the game and within a",
    "start": "252720",
    "end": "254190"
  },
  {
    "text": "minute a traffic goes from make 2",
    "start": "254190",
    "end": "255600"
  },
  {
    "text": "million to like 7 or 8 million",
    "start": "255600",
    "end": "257880"
  },
  {
    "text": "rpm so one of the side effects of this",
    "start": "257880",
    "end": "261510"
  },
  {
    "text": "is we always have to provision our",
    "start": "261510",
    "end": "262920"
  },
  {
    "text": "infrastructure for that peak traffic",
    "start": "262920",
    "end": "264530"
  },
  {
    "text": "auto-scaling doesn't work for us if we",
    "start": "264530",
    "end": "266970"
  },
  {
    "text": "cannot be a reactive system by the time",
    "start": "266970",
    "end": "268590"
  },
  {
    "text": "we realize that we need more servers to",
    "start": "268590",
    "end": "271140"
  },
  {
    "text": "actually serve this traffic the surge",
    "start": "271140",
    "end": "273240"
  },
  {
    "text": "actually just passes right so we cannot",
    "start": "273240",
    "end": "275070"
  },
  {
    "text": "do that so we have the provision at the",
    "start": "275070",
    "end": "276270"
  },
  {
    "text": "peak",
    "start": "276270",
    "end": "277110"
  },
  {
    "text": "we're trying to solve this problem by",
    "start": "277110",
    "end": "279000"
  },
  {
    "text": "some innovative solutions maybe offload",
    "start": "279000",
    "end": "281040"
  },
  {
    "text": "the peak traffic to using some lambda or",
    "start": "281040",
    "end": "283710"
  },
  {
    "text": "something and but we're still trying to",
    "start": "283710",
    "end": "285120"
  },
  {
    "text": "figure it out but for now we just",
    "start": "285120",
    "end": "286770"
  },
  {
    "text": "provision our servers of a peak capacity",
    "start": "286770",
    "end": "288720"
  },
  {
    "text": "for every game so this this is the",
    "start": "288720",
    "end": "294930"
  },
  {
    "text": "nature of a platform and we back in 2016",
    "start": "294930",
    "end": "297720"
  },
  {
    "text": "we were a very lean team and we wanted a",
    "start": "297720",
    "end": "300360"
  },
  {
    "text": "very like a quick shortcut to scale is",
    "start": "300360",
    "end": "304320"
  },
  {
    "text": "what I call it so we reduced Amazon",
    "start": "304320",
    "end": "306060"
  },
  {
    "text": "Arora into our system and why Amazon",
    "start": "306060",
    "end": "308730"
  },
  {
    "text": "Aurora so some of the things we use the",
    "start": "308730",
    "end": "312240"
  },
  {
    "text": "time so if you see we are heavy users of",
    "start": "312240",
    "end": "314670"
  },
  {
    "text": "Amazon Aurora we use our various types",
    "start": "314670",
    "end": "317190"
  },
  {
    "text": "we had total around 60 to 70 different",
    "start": "317190",
    "end": "319520"
  },
  {
    "text": "ideas clusters in our platform right now",
    "start": "319520",
    "end": "322190"
  },
  {
    "text": "total instances between the real",
    "start": "322190",
    "end": "324780"
  },
  {
    "text": "replicas and the master and some of the",
    "start": "324780",
    "end": "327990"
  },
  {
    "text": "features of Amazon Aurora that actually",
    "start": "327990",
    "end": "330090"
  },
  {
    "text": "made us pick it I'm going to talk about",
    "start": "330090",
    "end": "332460"
  },
  {
    "text": "next so read replicas so in a typical my",
    "start": "332460",
    "end": "336570"
  },
  {
    "text": "signal environment what happens is as",
    "start": "336570",
    "end": "338280"
  },
  {
    "text": "the load on the master increases the",
    "start": "338280",
    "end": "340980"
  },
  {
    "text": "replicas lag to this leader goes up",
    "start": "340980",
    "end": "344370"
  },
  {
    "text": "right and it can go however from",
    "start": "344370",
    "end": "346020"
  },
  {
    "text": "anywhere from a few seconds to a few",
    "start": "346020",
    "end": "347700"
  },
  {
    "text": "minutes but with Amazon or no the",
    "start": "347700",
    "end": "350130"
  },
  {
    "text": "replicas lag is consistently less than",
    "start": "350130",
    "end": "351960"
  },
  {
    "text": "20 milliseconds now what does that mean",
    "start": "351960",
    "end": "354030"
  },
  {
    "text": "for us what that means is we can",
    "start": "354030",
    "end": "356010"
  },
  {
    "text": "actually provide a very strong",
    "start": "356010",
    "end": "357360"
  },
  {
    "text": "consistency",
    "start": "357360",
    "end": "358760"
  },
  {
    "text": "consistent behavior to our users by",
    "start": "358760",
    "end": "361530"
  },
  {
    "text": "actually sir",
    "start": "361530",
    "end": "362490"
  },
  {
    "text": "redirecting all our right traffic to the",
    "start": "362490",
    "end": "364500"
  },
  {
    "text": "master",
    "start": "364500",
    "end": "365060"
  },
  {
    "text": "and all the lead traffic goes to the",
    "start": "365060",
    "end": "367100"
  },
  {
    "text": "readers so when a user on a platform",
    "start": "367100",
    "end": "370190"
  },
  {
    "text": "joins a particular contest he sends a",
    "start": "370190",
    "end": "372230"
  },
  {
    "text": "request in the request goes to the",
    "start": "372230",
    "end": "374090"
  },
  {
    "text": "writer he joins the contest and",
    "start": "374090",
    "end": "375530"
  },
  {
    "text": "immediately queries back all the details",
    "start": "375530",
    "end": "377180"
  },
  {
    "text": "of the contest that he's just joined now",
    "start": "377180",
    "end": "379160"
  },
  {
    "text": "because of the low replica lag we're",
    "start": "379160",
    "end": "381110"
  },
  {
    "text": "able to actually provide this behavior",
    "start": "381110",
    "end": "382669"
  },
  {
    "text": "using the the readers and as of now",
    "start": "382669",
    "end": "386540"
  },
  {
    "text": "Aurora provides around 15 up to 15 read",
    "start": "386540",
    "end": "389419"
  },
  {
    "text": "replicas so as you read traffic",
    "start": "389419",
    "end": "391280"
  },
  {
    "text": "increases you can keep on adding read",
    "start": "391280",
    "end": "392930"
  },
  {
    "text": "replicas and we just get horizontal",
    "start": "392930",
    "end": "395480"
  },
  {
    "text": "scalability out of the box without doing",
    "start": "395480",
    "end": "398030"
  },
  {
    "text": "anything about it and at that point this",
    "start": "398030",
    "end": "399830"
  },
  {
    "text": "was the most sensible thing for us to do",
    "start": "399830",
    "end": "403070"
  },
  {
    "text": "to serve the traffic patterns that I",
    "start": "403070",
    "end": "404450"
  },
  {
    "text": "actually talked about earlier another",
    "start": "404450",
    "end": "408800"
  },
  {
    "text": "good feature about Aurora the real",
    "start": "408800",
    "end": "410540"
  },
  {
    "text": "endpoint these all these read replicas",
    "start": "410540",
    "end": "412340"
  },
  {
    "text": "are actually behind a single reader",
    "start": "412340",
    "end": "413900"
  },
  {
    "text": "endpoint",
    "start": "413900",
    "end": "414440"
  },
  {
    "text": "so in your it's basically abstracts out",
    "start": "414440",
    "end": "416960"
  },
  {
    "text": "all the details from your application",
    "start": "416960",
    "end": "418130"
  },
  {
    "text": "your application just connects to the",
    "start": "418130",
    "end": "419810"
  },
  {
    "text": "near endpoint and behind the scenes the",
    "start": "419810",
    "end": "421729"
  },
  {
    "text": "load balancing is done by Aurora itself",
    "start": "421729",
    "end": "425500"
  },
  {
    "text": "fast fail overs so any DevOps engineer",
    "start": "427419",
    "end": "431510"
  },
  {
    "text": "would know what a nightmare it is when",
    "start": "431510",
    "end": "433280"
  },
  {
    "text": "you actually your master of MI sequel",
    "start": "433280",
    "end": "437440"
  },
  {
    "text": "instance actually goes down in for us in",
    "start": "437440",
    "end": "446240"
  },
  {
    "text": "the road of what happens is whenever a",
    "start": "446240",
    "end": "447470"
  },
  {
    "text": "master actually has a lot of load or has",
    "start": "447470",
    "end": "449360"
  },
  {
    "text": "an issue what it does is it",
    "start": "449360",
    "end": "450830"
  },
  {
    "text": "automatically fails over and one of the",
    "start": "450830",
    "end": "452539"
  },
  {
    "text": "lead replicas is promoted as a master",
    "start": "452539",
    "end": "454880"
  },
  {
    "text": "and the same thing happens very very",
    "start": "454880",
    "end": "457100"
  },
  {
    "text": "quick so one of the ways we actually use",
    "start": "457100",
    "end": "459590"
  },
  {
    "text": "this is if you want to do a runtime",
    "start": "459590",
    "end": "461090"
  },
  {
    "text": "instance upgrade if your supposed for",
    "start": "461090",
    "end": "463130"
  },
  {
    "text": "certain for us what happens is for",
    "start": "463130",
    "end": "464450"
  },
  {
    "text": "different games the load that we expect",
    "start": "464450",
    "end": "466100"
  },
  {
    "text": "is very different so if you have a match",
    "start": "466100",
    "end": "469550"
  },
  {
    "text": "in which you want to use an hour for 16x",
    "start": "469550",
    "end": "472130"
  },
  {
    "text": "and then suddenly once the match is done",
    "start": "472130",
    "end": "474080"
  },
  {
    "text": "you want to go down to our for 8x we",
    "start": "474080",
    "end": "475940"
  },
  {
    "text": "don't want any downtime when we actually",
    "start": "475940",
    "end": "477560"
  },
  {
    "text": "do these instance modifications so what",
    "start": "477560",
    "end": "480020"
  },
  {
    "text": "we do is we create a read replica of the",
    "start": "480020",
    "end": "482900"
  },
  {
    "text": "size of the size that we actually want",
    "start": "482900",
    "end": "484639"
  },
  {
    "text": "and then we trigger a failover",
    "start": "484639",
    "end": "486320"
  },
  {
    "text": "so that the read replica becomes a",
    "start": "486320",
    "end": "488000"
  },
  {
    "text": "master and the master becomes a leader",
    "start": "488000",
    "end": "489770"
  },
  {
    "text": "Africa and then we get out of the world",
    "start": "489770",
    "end": "491030"
  },
  {
    "text": "master so this will be able to actually",
    "start": "491030",
    "end": "492979"
  },
  {
    "text": "do runtime instance updates because of",
    "start": "492979",
    "end": "495409"
  },
  {
    "text": "the fast failover feature",
    "start": "495409",
    "end": "496639"
  },
  {
    "text": "and majority of the times this the",
    "start": "496639",
    "end": "499069"
  },
  {
    "text": "failovers happen in like less than 60",
    "start": "499069",
    "end": "500689"
  },
  {
    "text": "seconds",
    "start": "500689",
    "end": "501919"
  },
  {
    "text": "it's very rarely that have you seen a",
    "start": "501919",
    "end": "503719"
  },
  {
    "text": "fellow taking more than time more than",
    "start": "503719",
    "end": "505400"
  },
  {
    "text": "that time and because of the short",
    "start": "505400",
    "end": "508159"
  },
  {
    "text": "duration of the failover majority of the",
    "start": "508159",
    "end": "510080"
  },
  {
    "text": "times their applications are not",
    "start": "510080",
    "end": "511280"
  },
  {
    "text": "affected at all so that's that's pretty",
    "start": "511280",
    "end": "513260"
  },
  {
    "text": "cool just like anything else in the",
    "start": "513260",
    "end": "518300"
  },
  {
    "text": "Amazon ecosystem Amazon Aurora plays",
    "start": "518300",
    "end": "520159"
  },
  {
    "text": "very well with the other components so",
    "start": "520159",
    "end": "522110"
  },
  {
    "text": "it has an optimized load to s3 so what",
    "start": "522110",
    "end": "525140"
  },
  {
    "text": "happens is all the data that you're",
    "start": "525140",
    "end": "526430"
  },
  {
    "text": "writing to the Amazon Aurora database",
    "start": "526430",
    "end": "528290"
  },
  {
    "text": "you can very efficiently dump that",
    "start": "528290",
    "end": "530450"
  },
  {
    "text": "entire data on s3 now we use this in a",
    "start": "530450",
    "end": "532850"
  },
  {
    "text": "few different ways so we have a lot of",
    "start": "532850",
    "end": "535430"
  },
  {
    "text": "batch processes some analytical",
    "start": "535430",
    "end": "537260"
  },
  {
    "text": "processes that actually consume the data",
    "start": "537260",
    "end": "538970"
  },
  {
    "text": "that is written in our Aurora database",
    "start": "538970",
    "end": "541160"
  },
  {
    "text": "so we run those applications on top of",
    "start": "541160",
    "end": "543290"
  },
  {
    "text": "s3 so we use it for that our leaderboard",
    "start": "543290",
    "end": "546190"
  },
  {
    "text": "is actually a point calculation system",
    "start": "546190",
    "end": "549350"
  },
  {
    "text": "that reads this data from s3 runs it on",
    "start": "549350",
    "end": "552350"
  },
  {
    "text": "spark does all the scoring and ranking",
    "start": "552350",
    "end": "554390"
  },
  {
    "text": "and calculations and load this data into",
    "start": "554390",
    "end": "556430"
  },
  {
    "text": "Cassandra and then we serve the",
    "start": "556430",
    "end": "558230"
  },
  {
    "text": "leaderboards from Cassandra we also",
    "start": "558230",
    "end": "560930"
  },
  {
    "text": "generate a PDF file for each and every",
    "start": "560930",
    "end": "563600"
  },
  {
    "text": "contest that we host just to create",
    "start": "563600",
    "end": "565550"
  },
  {
    "text": "transparency in the system so all the",
    "start": "565550",
    "end": "567380"
  },
  {
    "text": "teams for all the users are locked right",
    "start": "567380",
    "end": "569540"
  },
  {
    "text": "at the match deadline after which you",
    "start": "569540",
    "end": "571220"
  },
  {
    "text": "cannot change your team so we do this as",
    "start": "571220",
    "end": "573649"
  },
  {
    "text": "well so we read that from s3 as well and",
    "start": "573649",
    "end": "575649"
  },
  {
    "text": "we are actually by dumping all the data",
    "start": "575649",
    "end": "578720"
  },
  {
    "text": "in our transactional databases on to s3",
    "start": "578720",
    "end": "580880"
  },
  {
    "text": "we've kind of created a data link for",
    "start": "580880",
    "end": "583640"
  },
  {
    "text": "all our transactional data and then we",
    "start": "583640",
    "end": "585500"
  },
  {
    "text": "run ETL processes on it and then we load",
    "start": "585500",
    "end": "587690"
  },
  {
    "text": "that data to redshift another cool",
    "start": "587690",
    "end": "593300"
  },
  {
    "text": "feature is the data migration service",
    "start": "593300",
    "end": "595699"
  },
  {
    "text": "what happened what you can do is you",
    "start": "595699",
    "end": "597560"
  },
  {
    "text": "have a source or Orion you have a",
    "start": "597560",
    "end": "598910"
  },
  {
    "text": "destination Aurora you just set the DMS",
    "start": "598910",
    "end": "600709"
  },
  {
    "text": "service and the the data is just",
    "start": "600709",
    "end": "604899"
  },
  {
    "text": "migrated and and the majority of the",
    "start": "604899",
    "end": "607279"
  },
  {
    "text": "times what we seen as our experience is",
    "start": "607279",
    "end": "609079"
  },
  {
    "text": "that this data migration the lag is less",
    "start": "609079",
    "end": "612620"
  },
  {
    "text": "than a few seconds so we use this",
    "start": "612620",
    "end": "614839"
  },
  {
    "text": "feature when we actually carving out",
    "start": "614839",
    "end": "616370"
  },
  {
    "text": "from our monolith to micro services so",
    "start": "616370",
    "end": "618920"
  },
  {
    "text": "the biggest challenge that you have fine",
    "start": "618920",
    "end": "620930"
  },
  {
    "text": "when you're carving on micro services",
    "start": "620930",
    "end": "622430"
  },
  {
    "text": "from your monolith is the tight coupling",
    "start": "622430",
    "end": "624199"
  },
  {
    "text": "of the data so what we did was we",
    "start": "624199",
    "end": "626329"
  },
  {
    "text": "created a DMA service to create a new",
    "start": "626329",
    "end": "628490"
  },
  {
    "text": "your aura and then we carved out",
    "start": "628490",
    "end": "630350"
  },
  {
    "text": "education logic / authentication service",
    "start": "630350",
    "end": "632330"
  },
  {
    "text": "and we moved on to the new servers all",
    "start": "632330",
    "end": "634550"
  },
  {
    "text": "the read traffic to the authentication",
    "start": "634550",
    "end": "635990"
  },
  {
    "text": "service was started serving through that",
    "start": "635990",
    "end": "638200"
  },
  {
    "text": "destination Aurora and all the rights",
    "start": "638200",
    "end": "640430"
  },
  {
    "text": "were still happening to the were still",
    "start": "640430",
    "end": "642770"
  },
  {
    "text": "going to the source Aurora so this",
    "start": "642770",
    "end": "644600"
  },
  {
    "text": "actually helped us a lot doing that",
    "start": "644600",
    "end": "649360"
  },
  {
    "text": "moving on",
    "start": "649900",
    "end": "653050"
  },
  {
    "text": "so that was the rule so there are four",
    "start": "654180",
    "end": "658170"
  },
  {
    "text": "primary use cases for which we use",
    "start": "658170",
    "end": "659730"
  },
  {
    "text": "Amazon ElastiCache is the de facto",
    "start": "659730",
    "end": "662970"
  },
  {
    "text": "standard for us when it comes to any",
    "start": "662970",
    "end": "665399"
  },
  {
    "text": "kind of caching needs so anytime you",
    "start": "665399",
    "end": "667170"
  },
  {
    "text": "want to put any cash between a",
    "start": "667170",
    "end": "668790"
  },
  {
    "text": "persistent layer on our servers we",
    "start": "668790",
    "end": "670740"
  },
  {
    "text": "actually use Amazon ElastiCache session",
    "start": "670740",
    "end": "675360"
  },
  {
    "text": "management so over the years all our web",
    "start": "675360",
    "end": "679350"
  },
  {
    "text": "sessions are actually stored and so we",
    "start": "679350",
    "end": "680790"
  },
  {
    "text": "don't use any database for our sessions",
    "start": "680790",
    "end": "682379"
  },
  {
    "text": "session data what we do is we put all",
    "start": "682379",
    "end": "684689"
  },
  {
    "text": "the session data in in earliness",
    "start": "684689",
    "end": "686249"
  },
  {
    "text": "so this is very important right because",
    "start": "686249",
    "end": "688829"
  },
  {
    "text": "if we at any point of time lose this",
    "start": "688829",
    "end": "690569"
  },
  {
    "text": "information what this results in is all",
    "start": "690569",
    "end": "692850"
  },
  {
    "text": "our users would get logged out and in",
    "start": "692850",
    "end": "694829"
  },
  {
    "text": "the in the last two three years we have",
    "start": "694829",
    "end": "696600"
  },
  {
    "text": "got one big Redis cluster industry put",
    "start": "696600",
    "end": "699209"
  },
  {
    "text": "all this data it has never given us any",
    "start": "699209",
    "end": "700860"
  },
  {
    "text": "issues it's just what fine so it's",
    "start": "700860",
    "end": "702839"
  },
  {
    "text": "fantastic for us we also use Amazon",
    "start": "702839",
    "end": "706410"
  },
  {
    "text": "ElastiCache include different use cases",
    "start": "706410",
    "end": "708300"
  },
  {
    "text": "I want to do a deep dive on this in the",
    "start": "708300",
    "end": "711329"
  },
  {
    "text": "next couple of slides one is Qantas",
    "start": "711329",
    "end": "712769"
  },
  {
    "text": "queues and one is an event sync system",
    "start": "712769",
    "end": "715279"
  },
  {
    "text": "when it comes to Qantas queues just to",
    "start": "715279",
    "end": "717809"
  },
  {
    "text": "give you a count I talked about how we",
    "start": "717809",
    "end": "719069"
  },
  {
    "text": "host contests for users right so users",
    "start": "719069",
    "end": "721230"
  },
  {
    "text": "create their own teams and the join",
    "start": "721230",
    "end": "722490"
  },
  {
    "text": "Qantas so these contests could range",
    "start": "722490",
    "end": "725189"
  },
  {
    "text": "anywhere between say 2 or 2 member",
    "start": "725189",
    "end": "727230"
  },
  {
    "text": "Qantas is the smallest contest that we",
    "start": "727230",
    "end": "729839"
  },
  {
    "text": "have and the largest quantities that",
    "start": "729839",
    "end": "731519"
  },
  {
    "text": "we've hosted is like 1.5 million people",
    "start": "731519",
    "end": "734279"
  },
  {
    "text": "in a single contest so that's like the",
    "start": "734279",
    "end": "736620"
  },
  {
    "text": "range of contests that we have so we and",
    "start": "736620",
    "end": "738839"
  },
  {
    "text": "just before a match straight line we get",
    "start": "738839",
    "end": "741089"
  },
  {
    "text": "a very high rate and of these contests",
    "start": "741089",
    "end": "743790"
  },
  {
    "text": "join requests so for these smaller",
    "start": "743790",
    "end": "745740"
  },
  {
    "text": "contests what happens is for for a",
    "start": "745740",
    "end": "749100"
  },
  {
    "text": "typical like 2 member contest what is to",
    "start": "749100",
    "end": "751079"
  },
  {
    "text": "happen is we used to get like hundreds",
    "start": "751079",
    "end": "752970"
  },
  {
    "text": "of people trying to join that 2 member",
    "start": "752970",
    "end": "754439"
  },
  {
    "text": "contest and then all these requests used",
    "start": "754439",
    "end": "756870"
  },
  {
    "text": "to get serialized and every request used",
    "start": "756870",
    "end": "758970"
  },
  {
    "text": "to lock the row in the database join the",
    "start": "758970",
    "end": "762629"
  },
  {
    "text": "contest and then release the lock and",
    "start": "762629",
    "end": "765179"
  },
  {
    "text": "then the next vicars would come in so",
    "start": "765179",
    "end": "766709"
  },
  {
    "text": "the result of that what used to happen",
    "start": "766709",
    "end": "768059"
  },
  {
    "text": "is of all the hundreds of requests that",
    "start": "768059",
    "end": "769949"
  },
  {
    "text": "we actually got the first two bills were",
    "start": "769949",
    "end": "772199"
  },
  {
    "text": "able to join the contest and for",
    "start": "772199",
    "end": "773699"
  },
  {
    "text": "everyone else we have to visually show",
    "start": "773699",
    "end": "775649"
  },
  {
    "text": "them a message saying contest full",
    "start": "775649",
    "end": "777569"
  },
  {
    "text": "please try again and behind the scenes",
    "start": "777569",
    "end": "779670"
  },
  {
    "text": "every time a two-member contest gets",
    "start": "779670",
    "end": "781410"
  },
  {
    "text": "filled up we regenerate that contest so",
    "start": "781410",
    "end": "783600"
  },
  {
    "text": "that was the model that we were",
    "start": "783600",
    "end": "784799"
  },
  {
    "text": "employing earlier so we wanted to do a",
    "start": "784799",
    "end": "787019"
  },
  {
    "text": "bad",
    "start": "787019",
    "end": "787410"
  },
  {
    "text": "Jobeth actually solving this problem and",
    "start": "787410",
    "end": "789269"
  },
  {
    "text": "then to give a better UX to our users as",
    "start": "789269",
    "end": "791160"
  },
  {
    "text": "well so we actually decided to take out",
    "start": "791160",
    "end": "793529"
  },
  {
    "text": "locking completely from the system so",
    "start": "793529",
    "end": "795750"
  },
  {
    "text": "what we do now is we pre generate at a",
    "start": "795750",
    "end": "798540"
  },
  {
    "text": "lot of different instances of that these",
    "start": "798540",
    "end": "801029"
  },
  {
    "text": "two member contests beforehand and then",
    "start": "801029",
    "end": "803699"
  },
  {
    "text": "we generate tokens for every entry into",
    "start": "803699",
    "end": "806610"
  },
  {
    "text": "that system and we actually put all",
    "start": "806610",
    "end": "808019"
  },
  {
    "text": "those tokens into a Redis sortedset in",
    "start": "808019",
    "end": "810089"
  },
  {
    "text": "elastic cache so for example contest of",
    "start": "810089",
    "end": "813269"
  },
  {
    "text": "kuiper of type c 1 we would probably",
    "start": "813269",
    "end": "815639"
  },
  {
    "text": "generate like hundred of those contests",
    "start": "815639",
    "end": "817350"
  },
  {
    "text": "200 tokens engine in total and put all",
    "start": "817350",
    "end": "820230"
  },
  {
    "text": "those 200 tokens in the ready sorted set",
    "start": "820230",
    "end": "823410"
  },
  {
    "text": "and instead of routing the requests",
    "start": "823410",
    "end": "825240"
  },
  {
    "text": "directly to the database we actually see",
    "start": "825240",
    "end": "828720"
  },
  {
    "text": "it as it and we send all the requests to",
    "start": "828720",
    "end": "830430"
  },
  {
    "text": "Redis every request gets a token goes to",
    "start": "830430",
    "end": "833279"
  },
  {
    "text": "the database and then it becomes an",
    "start": "833279",
    "end": "834629"
  },
  {
    "text": "insert only system for us so on the",
    "start": "834629",
    "end": "837720"
  },
  {
    "text": "front end what we did was we changed the",
    "start": "837720",
    "end": "839490"
  },
  {
    "text": "UX we tweaked the US a little bit and",
    "start": "839490",
    "end": "841410"
  },
  {
    "text": "when the user actually sends the request",
    "start": "841410",
    "end": "843449"
  },
  {
    "text": "to join a contest we actually explains",
    "start": "843449",
    "end": "845459"
  },
  {
    "text": "it explicitly say that if we cannot",
    "start": "845459",
    "end": "847470"
  },
  {
    "text": "actually put into this particular",
    "start": "847470",
    "end": "848550"
  },
  {
    "text": "contest is it okay that we put you in a",
    "start": "848550",
    "end": "850560"
  },
  {
    "text": "contest of a similar kind and if the",
    "start": "850560",
    "end": "852389"
  },
  {
    "text": "user says yes then we just let them go",
    "start": "852389",
    "end": "854370"
  },
  {
    "text": "through the system and do it so so",
    "start": "854370",
    "end": "858449"
  },
  {
    "text": "earlier the entire thing used to be",
    "start": "858449",
    "end": "859800"
  },
  {
    "text": "within the database but now the source",
    "start": "859800",
    "end": "861240"
  },
  {
    "text": "of truth gets divided like so some",
    "start": "861240",
    "end": "863160"
  },
  {
    "text": "information is in the database some of",
    "start": "863160",
    "end": "865079"
  },
  {
    "text": "it is in fairness so we need a",
    "start": "865079",
    "end": "866939"
  },
  {
    "text": "reconciliation system right so what we",
    "start": "866939",
    "end": "868860"
  },
  {
    "text": "do is we wrote a recon cron that",
    "start": "868860",
    "end": "871019"
  },
  {
    "text": "periodically runs and tries to see if",
    "start": "871019",
    "end": "873180"
  },
  {
    "text": "there are any discrepancies between the",
    "start": "873180",
    "end": "875880"
  },
  {
    "text": "actual Qantas joins that are happening",
    "start": "875880",
    "end": "877500"
  },
  {
    "text": "in the system and any tokens that are",
    "start": "877500",
    "end": "879779"
  },
  {
    "text": "actually out of sync between the Redis",
    "start": "879779",
    "end": "883410"
  },
  {
    "text": "as a and the database and if there is",
    "start": "883410",
    "end": "885420"
  },
  {
    "text": "this Quran actually automatically fixes",
    "start": "885420",
    "end": "887880"
  },
  {
    "text": "it's like a self-healing system that",
    "start": "887880",
    "end": "889410"
  },
  {
    "text": "we've created that identifies these",
    "start": "889410",
    "end": "891180"
  },
  {
    "text": "problems and then rectifies it on random",
    "start": "891180",
    "end": "893639"
  },
  {
    "text": "so there is no manual intervention",
    "start": "893639",
    "end": "895550"
  },
  {
    "text": "required",
    "start": "895550",
    "end": "898550"
  },
  {
    "text": "Motors FedEx few minutes talking about",
    "start": "906510",
    "end": "908770"
  },
  {
    "text": "our little bird solution so saya as I",
    "start": "908770",
    "end": "910779"
  },
  {
    "text": "mentioned earlier right so what we do is",
    "start": "910779",
    "end": "912670"
  },
  {
    "text": "as soon as the Qantas a match deadline",
    "start": "912670",
    "end": "915460"
  },
  {
    "text": "hits we actually move all our Qantas",
    "start": "915460",
    "end": "917830"
  },
  {
    "text": "join information onto s3 and then we use",
    "start": "917830",
    "end": "920620"
  },
  {
    "text": "smart to read the data and we load load",
    "start": "920620",
    "end": "922810"
  },
  {
    "text": "the data into Cassandra to serve our",
    "start": "922810",
    "end": "925360"
  },
  {
    "text": "leaderboard so but we do this",
    "start": "925360",
    "end": "928570"
  },
  {
    "text": "calculation once every minute and for",
    "start": "928570",
    "end": "931720"
  },
  {
    "text": "every snapshot that we create every",
    "start": "931720",
    "end": "933430"
  },
  {
    "text": "minute we have a unique event ID that is",
    "start": "933430",
    "end": "935560"
  },
  {
    "text": "attached to that snapshot so when the",
    "start": "935560",
    "end": "937720"
  },
  {
    "text": "users are requesting we want a very",
    "start": "937720",
    "end": "939190"
  },
  {
    "text": "strongly consistent view for all our",
    "start": "939190",
    "end": "941080"
  },
  {
    "text": "users that are actually looking at our",
    "start": "941080",
    "end": "943240"
  },
  {
    "text": "leaderboard so we know one different",
    "start": "943240",
    "end": "945220"
  },
  {
    "text": "users to see different versions of the",
    "start": "945220",
    "end": "946570"
  },
  {
    "text": "leaderboard so they all stick to a",
    "start": "946570",
    "end": "947830"
  },
  {
    "text": "particular event ID so every time we",
    "start": "947830",
    "end": "949720"
  },
  {
    "text": "regenerate these this little boat for a",
    "start": "949720",
    "end": "952209"
  },
  {
    "text": "particular snapshot we ask have we need",
    "start": "952209",
    "end": "954490"
  },
  {
    "text": "a mechanism to actually tell all our",
    "start": "954490",
    "end": "956020"
  },
  {
    "text": "servers that this is the latest event ID",
    "start": "956020",
    "end": "957910"
  },
  {
    "text": "for which they need to go to this go to",
    "start": "957910",
    "end": "960100"
  },
  {
    "text": "Cassandra and get the leaderboard data",
    "start": "960100",
    "end": "962500"
  },
  {
    "text": "so the way we've done this is all our",
    "start": "962500",
    "end": "964300"
  },
  {
    "text": "applications Subs servers actually",
    "start": "964300",
    "end": "967060"
  },
  {
    "text": "subscribe to an Amazon Elastic cache so",
    "start": "967060",
    "end": "969310"
  },
  {
    "text": "ElastiCache provides a publisher's",
    "start": "969310",
    "end": "971350"
  },
  {
    "text": "subscribe feature so all these are what",
    "start": "971350",
    "end": "974350"
  },
  {
    "text": "we do is every time we recalculate this",
    "start": "974350",
    "end": "976180"
  },
  {
    "text": "leaderboard we let Amazon ElastiCache",
    "start": "976180",
    "end": "978970"
  },
  {
    "text": "know this is an event ID it publishes an",
    "start": "978970",
    "end": "981310"
  },
  {
    "text": "event this event actually goes to all",
    "start": "981310",
    "end": "983670"
  },
  {
    "text": "the various servers and they then they",
    "start": "983670",
    "end": "987459"
  },
  {
    "text": "realize that this new snapshot of the",
    "start": "987459",
    "end": "989740"
  },
  {
    "text": "leaderboard is available and every new",
    "start": "989740",
    "end": "991660"
  },
  {
    "text": "request that comes into the system",
    "start": "991660",
    "end": "993550"
  },
  {
    "text": "actually then starts going to Cassandra",
    "start": "993550",
    "end": "995920"
  },
  {
    "text": "and then gets fetches the latest data so",
    "start": "995920",
    "end": "999760"
  },
  {
    "text": "you also have another layer of",
    "start": "999760",
    "end": "1000930"
  },
  {
    "text": "optimization because of the higher rates",
    "start": "1000930",
    "end": "1002580"
  },
  {
    "text": "of traffic that we actually generated",
    "start": "1002580",
    "end": "1004260"
  },
  {
    "text": "right a network i/o also becomes like a",
    "start": "1004260",
    "end": "1007070"
  },
  {
    "text": "latency factor for us so what we do is",
    "start": "1007070",
    "end": "1009839"
  },
  {
    "text": "we have a local Redis instance running",
    "start": "1009839",
    "end": "1011520"
  },
  {
    "text": "on each of these servers as well so at",
    "start": "1011520",
    "end": "1014010"
  },
  {
    "text": "the start of the minute when a new",
    "start": "1014010",
    "end": "1015420"
  },
  {
    "text": "leaderboard snapshot is generated all",
    "start": "1015420",
    "end": "1017190"
  },
  {
    "text": "these ladies instances on the nodes are",
    "start": "1017190",
    "end": "1019200"
  },
  {
    "text": "actually empty but as in when requests",
    "start": "1019200",
    "end": "1021690"
  },
  {
    "text": "start hitting these servers and it",
    "start": "1021690",
    "end": "1023040"
  },
  {
    "text": "actually the server gets data from",
    "start": "1023040",
    "end": "1024900"
  },
  {
    "text": "Cassandra for the same event ID it",
    "start": "1024900",
    "end": "1026699"
  },
  {
    "text": "starts populating that local Redis and",
    "start": "1026699",
    "end": "1028620"
  },
  {
    "text": "that local ready starts getting hot over",
    "start": "1028620",
    "end": "1031500"
  },
  {
    "text": "a period of time as more and more",
    "start": "1031500",
    "end": "1033058"
  },
  {
    "text": "requests get in so during the latter",
    "start": "1033059",
    "end": "1035040"
  },
  {
    "text": "part of the minute we are able to serve",
    "start": "1035040",
    "end": "1037938"
  },
  {
    "text": "the requests right from the local cache",
    "start": "1037939",
    "end": "1040308"
  },
  {
    "text": "itself and we don't even need to go to",
    "start": "1040309",
    "end": "1042019"
  },
  {
    "text": "the cassandra' or any kind of external",
    "start": "1042019",
    "end": "1043428"
  },
  {
    "text": "cache to actually serve that data so we",
    "start": "1043429",
    "end": "1047029"
  },
  {
    "text": "put in a lot of work in actually",
    "start": "1047029",
    "end": "1048679"
  },
  {
    "text": "reactivating the system moving to a",
    "start": "1048679",
    "end": "1050600"
  },
  {
    "text": "completely distributed architecture over",
    "start": "1050600",
    "end": "1052279"
  },
  {
    "text": "the last two two and half years I'm also",
    "start": "1052279",
    "end": "1054559"
  },
  {
    "text": "going to do a chalk talk on this very",
    "start": "1054559",
    "end": "1056330"
  },
  {
    "text": "well talk about our journey as to what",
    "start": "1056330",
    "end": "1057799"
  },
  {
    "text": "were the challenges that we face as we",
    "start": "1057799",
    "end": "1059659"
  },
  {
    "text": "move from a monolith to microservices",
    "start": "1059659",
    "end": "1062659"
  },
  {
    "text": "but as of now if you look at our",
    "start": "1062659",
    "end": "1064639"
  },
  {
    "text": "technical stack or architecture this is",
    "start": "1064639",
    "end": "1068600"
  },
  {
    "text": "what it looks like so we've got a lotta",
    "start": "1068600",
    "end": "1071360"
  },
  {
    "text": "noise so every so some of the services",
    "start": "1071360",
    "end": "1073220"
  },
  {
    "text": "that we created from scratch which were",
    "start": "1073220",
    "end": "1075110"
  },
  {
    "text": "never part of the monolith like the",
    "start": "1075110",
    "end": "1077320"
  },
  {
    "text": "aggregation loyalty etc were actually",
    "start": "1077320",
    "end": "1080750"
  },
  {
    "text": "created standalone and a lot of these",
    "start": "1080750",
    "end": "1082730"
  },
  {
    "text": "services we've carved out over the last",
    "start": "1082730",
    "end": "1084289"
  },
  {
    "text": "two years some things that are very very",
    "start": "1084289",
    "end": "1086389"
  },
  {
    "text": "difficult to carve out is the user",
    "start": "1086389",
    "end": "1087799"
  },
  {
    "text": "service we actually left to the last",
    "start": "1087799",
    "end": "1090009"
  },
  {
    "text": "wallet service in promotions we are",
    "start": "1090009",
    "end": "1092120"
  },
  {
    "text": "actively working on this and our goal is",
    "start": "1092120",
    "end": "1094250"
  },
  {
    "text": "that big by beginning of IPL 2019 we",
    "start": "1094250",
    "end": "1097039"
  },
  {
    "text": "should be able to move to completely",
    "start": "1097039",
    "end": "1098389"
  },
  {
    "text": "distributed architecture in the back end",
    "start": "1098389",
    "end": "1100970"
  },
  {
    "text": "and we choose the right technologies for",
    "start": "1100970",
    "end": "1104480"
  },
  {
    "text": "the different use cases based one it is",
    "start": "1104480",
    "end": "1106039"
  },
  {
    "text": "needed but at the same time we don't",
    "start": "1106039",
    "end": "1107269"
  },
  {
    "text": "want expect get spread too thin but as",
    "start": "1107269",
    "end": "1110059"
  },
  {
    "text": "of now this is our technical stack that",
    "start": "1110059",
    "end": "1112159"
  },
  {
    "text": "we using so we use a combination of",
    "start": "1112159",
    "end": "1114789"
  },
  {
    "text": "Amazon managed services and open-source",
    "start": "1114789",
    "end": "1117919"
  },
  {
    "text": "components to power various parts of our",
    "start": "1117919",
    "end": "1121190"
  },
  {
    "text": "infrastructure and these are just the",
    "start": "1121190",
    "end": "1122870"
  },
  {
    "text": "key components right I mean of course we",
    "start": "1122870",
    "end": "1124490"
  },
  {
    "text": "use a lot of small stuff as well but",
    "start": "1124490",
    "end": "1126440"
  },
  {
    "text": "this is primarily the things that",
    "start": "1126440",
    "end": "1127789"
  },
  {
    "text": "actually power our architecture and and",
    "start": "1127789",
    "end": "1130549"
  },
  {
    "text": "so far has been working pretty well for",
    "start": "1130549",
    "end": "1132500"
  },
  {
    "text": "us",
    "start": "1132500",
    "end": "1134679"
  },
  {
    "text": "that's it big questions no awesome",
    "start": "1136960",
    "end": "1142540"
  },
  {
    "text": "well let's give them eat a hand so for",
    "start": "1142540",
    "end": "1149170"
  },
  {
    "text": "questions on startup central we've been",
    "start": "1149170",
    "end": "1150790"
  },
  {
    "text": "using slide Oh",
    "start": "1150790",
    "end": "1151720"
  },
  {
    "text": "see if you have questions go to slide on",
    "start": "1151720",
    "end": "1153670"
  },
  {
    "text": "your phone",
    "start": "1153670",
    "end": "1155080"
  },
  {
    "text": "use the hashtag start up you can enter",
    "start": "1155080",
    "end": "1157420"
  },
  {
    "text": "your question you can upload other",
    "start": "1157420",
    "end": "1158740"
  },
  {
    "text": "questions and then we let's kind of work",
    "start": "1158740",
    "end": "1160870"
  },
  {
    "text": "our way down the list there so for now",
    "start": "1160870",
    "end": "1163990"
  },
  {
    "text": "we'll start with the top one here how do",
    "start": "1163990",
    "end": "1166480"
  },
  {
    "text": "you scale when you write request start",
    "start": "1166480",
    "end": "1169210"
  },
  {
    "text": "qicang so well right now so the only",
    "start": "1169210",
    "end": "1176380"
  },
  {
    "text": "light request that we have is Qantas",
    "start": "1176380",
    "end": "1178180"
  },
  {
    "text": "joins and so far we haven't reached a",
    "start": "1178180",
    "end": "1180130"
  },
  {
    "text": "place where we actually need so to scale",
    "start": "1180130",
    "end": "1183790"
  },
  {
    "text": "that too much right now so we haven't",
    "start": "1183790",
    "end": "1185170"
  },
  {
    "text": "they hit that issue as of now but a",
    "start": "1185170",
    "end": "1188530"
  },
  {
    "text": "place where we did hit so what was",
    "start": "1188530",
    "end": "1191230"
  },
  {
    "text": "talking about our leaderboard right so",
    "start": "1191230",
    "end": "1192520"
  },
  {
    "text": "the leaderboard data keeps getting",
    "start": "1192520",
    "end": "1193810"
  },
  {
    "text": "bigger and bigger so for the IPL final",
    "start": "1193810",
    "end": "1195730"
  },
  {
    "text": "last year we had total number of around",
    "start": "1195730",
    "end": "1198040"
  },
  {
    "text": "3 million contests total so all of these",
    "start": "1198040",
    "end": "1200680"
  },
  {
    "text": "contests leaderboard is regenerated",
    "start": "1200680",
    "end": "1202210"
  },
  {
    "text": "every one minute and written so we",
    "start": "1202210",
    "end": "1203440"
  },
  {
    "text": "wanted a system that actually is a very",
    "start": "1203440",
    "end": "1204940"
  },
  {
    "text": "high right throughput so for use case",
    "start": "1204940",
    "end": "1207550"
  },
  {
    "text": "like this that's why it should be chose",
    "start": "1207550",
    "end": "1208810"
  },
  {
    "text": "Cassandra which is actually optimized",
    "start": "1208810",
    "end": "1210340"
  },
  {
    "text": "for writes and if you actually do the",
    "start": "1210340",
    "end": "1212830"
  },
  {
    "text": "datum what is right on Cassandra",
    "start": "1212830",
    "end": "1214360"
  },
  {
    "text": "then your reads just becomes like a",
    "start": "1214360",
    "end": "1216220"
  },
  {
    "text": "pointed query and the writes are like",
    "start": "1216220",
    "end": "1217960"
  },
  {
    "text": "very very fast so we moved our white",
    "start": "1217960",
    "end": "1220450"
  },
  {
    "text": "heavy intensive workload to Cassandra to",
    "start": "1220450",
    "end": "1223060"
  },
  {
    "text": "actually scale I guess I can answer that",
    "start": "1223060",
    "end": "1228580"
  },
  {
    "text": "last question the video will be posted",
    "start": "1228580",
    "end": "1231160"
  },
  {
    "text": "online it should take about 24 to 48",
    "start": "1231160",
    "end": "1233740"
  },
  {
    "text": "hours but no don't be live so you can",
    "start": "1233740",
    "end": "1235510"
  },
  {
    "text": "rewatch anything you might have missed",
    "start": "1235510",
    "end": "1238200"
  },
  {
    "text": "here we can jump into this one",
    "start": "1238200",
    "end": "1240420"
  },
  {
    "text": "what's the match the report of Redis and",
    "start": "1240420",
    "end": "1242980"
  },
  {
    "text": "how many instances do you need to",
    "start": "1242980",
    "end": "1245020"
  },
  {
    "text": "support the load",
    "start": "1245020",
    "end": "1247720"
  },
  {
    "text": "so I think we've actually in our use",
    "start": "1247720",
    "end": "1251890"
  },
  {
    "text": "case we've seen somewhere in a few",
    "start": "1251890",
    "end": "1253270"
  },
  {
    "text": "million rpm throughput and our insist I",
    "start": "1253270",
    "end": "1258640"
  },
  {
    "text": "think are inside the largest in Sevilla",
    "start": "1258640",
    "end": "1260920"
  },
  {
    "text": "running was we had Redis cluster with",
    "start": "1260920",
    "end": "1264820"
  },
  {
    "text": "five masters and five rare because he",
    "start": "1264820",
    "end": "1267850"
  },
  {
    "text": "saw 30 node cluster is is what we were",
    "start": "1267850",
    "end": "1270220"
  },
  {
    "text": "using and that one effect and the",
    "start": "1270220",
    "end": "1272290"
  },
  {
    "text": "instance I was a I think if I correct r3",
    "start": "1272290",
    "end": "1274810"
  },
  {
    "text": "it takes large any other questions so",
    "start": "1274810",
    "end": "1284740"
  },
  {
    "text": "the fact that you're using Redis for",
    "start": "1284740",
    "end": "1287640"
  },
  {
    "text": "some critical information how do you",
    "start": "1287640",
    "end": "1290140"
  },
  {
    "text": "deal with that it's that cash gets dyes",
    "start": "1290140",
    "end": "1293140"
  },
  {
    "text": "are so fluid again so you're using the",
    "start": "1293140",
    "end": "1295950"
  },
  {
    "text": "reddest cash for session information and",
    "start": "1295950",
    "end": "1299680"
  },
  {
    "text": "things like that I",
    "start": "1299680",
    "end": "1301120"
  },
  {
    "text": "are you worried of losing that or",
    "start": "1301120",
    "end": "1302590"
  },
  {
    "text": "anything like that yeah I'm always",
    "start": "1302590",
    "end": "1305080"
  },
  {
    "text": "losing that but it hasn't happened so",
    "start": "1305080",
    "end": "1307030"
  },
  {
    "text": "far so it talks so it's a very very",
    "start": "1307030",
    "end": "1308800"
  },
  {
    "text": "reliable system right it's like it very",
    "start": "1308800",
    "end": "1310930"
  },
  {
    "text": "rarely goes down and as I mean deep face",
    "start": "1310930",
    "end": "1313180"
  },
  {
    "text": "very very very rarely have you faced any",
    "start": "1313180",
    "end": "1316600"
  },
  {
    "text": "issues so some of the issues that we",
    "start": "1316600",
    "end": "1317950"
  },
  {
    "text": "face with it is is network throttling or",
    "start": "1317950",
    "end": "1320850"
  },
  {
    "text": "hotkeys is one of the biggest problems",
    "start": "1320850",
    "end": "1322930"
  },
  {
    "text": "that we've actually faced because you",
    "start": "1322930",
    "end": "1324490"
  },
  {
    "text": "cannot have more than five three",
    "start": "1324490",
    "end": "1325960"
  },
  {
    "text": "traffickers at one point of time so the",
    "start": "1325960",
    "end": "1327760"
  },
  {
    "text": "moment your read throughput reaches a",
    "start": "1327760",
    "end": "1329860"
  },
  {
    "text": "point where you max out the resources on",
    "start": "1329860",
    "end": "1331990"
  },
  {
    "text": "your fighting replicas you have no",
    "start": "1331990",
    "end": "1333430"
  },
  {
    "text": "choice but to spin up another Redis",
    "start": "1333430",
    "end": "1336550"
  },
  {
    "text": "cluster and then replicate the entire",
    "start": "1336550",
    "end": "1337960"
  },
  {
    "text": "dater with the new cluster that's the",
    "start": "1337960",
    "end": "1339790"
  },
  {
    "text": "only problem that we've actually hit but",
    "start": "1339790",
    "end": "1341770"
  },
  {
    "text": "reliability wise we've not had any show",
    "start": "1341770",
    "end": "1345780"
  },
  {
    "text": "so what for us the majority of our",
    "start": "1348070",
    "end": "1350900"
  },
  {
    "text": "workloads are not very high in memory",
    "start": "1350900",
    "end": "1352400"
  },
  {
    "text": "intensive so the data that we have is",
    "start": "1352400",
    "end": "1354110"
  },
  {
    "text": "very small footprint of memory but the",
    "start": "1354110",
    "end": "1356420"
  },
  {
    "text": "request rate is very high so we need to",
    "start": "1356420",
    "end": "1359030"
  },
  {
    "text": "the throughput is on the leaders because",
    "start": "1359030",
    "end": "1361640"
  },
  {
    "text": "of that memory is not a problem for us",
    "start": "1361640",
    "end": "1365350"
  },
  {
    "text": "two questions I didn't see how you",
    "start": "1367180",
    "end": "1370100"
  },
  {
    "text": "expose your micro services are using an",
    "start": "1370100",
    "end": "1372800"
  },
  {
    "text": "api gateway like Zul or kong and then my",
    "start": "1372800",
    "end": "1376070"
  },
  {
    "text": "second question is when it comes to",
    "start": "1376070",
    "end": "1377540"
  },
  {
    "text": "fantasy you're doing a lot of point",
    "start": "1377540",
    "end": "1378890"
  },
  {
    "text": "calculations is the point calculations",
    "start": "1378890",
    "end": "1381680"
  },
  {
    "text": "because there are specific to leagues or",
    "start": "1381680",
    "end": "1384170"
  },
  {
    "text": "specific to players is it real time",
    "start": "1384170",
    "end": "1386390"
  },
  {
    "text": "where did you offload that did you use",
    "start": "1386390",
    "end": "1388310"
  },
  {
    "text": "lambdas how did you solve that problem",
    "start": "1388310",
    "end": "1390080"
  },
  {
    "text": "the point calculation here so okay so",
    "start": "1390080",
    "end": "1393620"
  },
  {
    "text": "for the first question we actually build",
    "start": "1393620",
    "end": "1395270"
  },
  {
    "text": "our own edge layer so the first thing",
    "start": "1395270",
    "end": "1398390"
  },
  {
    "text": "that we did was when we actually started",
    "start": "1398390",
    "end": "1400070"
  },
  {
    "text": "carving out our micro services was we",
    "start": "1400070",
    "end": "1402170"
  },
  {
    "text": "realized like we needed to we need a lot",
    "start": "1402170",
    "end": "1405440"
  },
  {
    "text": "more fine-grained control base to how",
    "start": "1405440",
    "end": "1407180"
  },
  {
    "text": "those requests are routed because we had",
    "start": "1407180",
    "end": "1408860"
  },
  {
    "text": "to get the data from different services",
    "start": "1408860",
    "end": "1410240"
  },
  {
    "text": "massage them and also when we launched a",
    "start": "1410240",
    "end": "1412550"
  },
  {
    "text": "new service we started offloading a part",
    "start": "1412550",
    "end": "1414650"
  },
  {
    "text": "of some of the smaller games on our",
    "start": "1414650",
    "end": "1417020"
  },
  {
    "text": "system we actually started off-roading",
    "start": "1417020",
    "end": "1418460"
  },
  {
    "text": "to the new services that we were",
    "start": "1418460",
    "end": "1419720"
  },
  {
    "text": "creating so we created our own edge",
    "start": "1419720",
    "end": "1421730"
  },
  {
    "text": "layer it's called the coordinator it's a",
    "start": "1421730",
    "end": "1423560"
  },
  {
    "text": "very simple stateless system all it does",
    "start": "1423560",
    "end": "1425570"
  },
  {
    "text": "is it has the ability to actually go out",
    "start": "1425570",
    "end": "1427370"
  },
  {
    "text": "to various endpoints and actually give",
    "start": "1427370",
    "end": "1428780"
  },
  {
    "text": "the data back so we did try using API",
    "start": "1428780",
    "end": "1432530"
  },
  {
    "text": "gateway but we but majority of our",
    "start": "1432530",
    "end": "1436610"
  },
  {
    "text": "traffic originates from India so the the",
    "start": "1436610",
    "end": "1439400"
  },
  {
    "text": "way the traffic was routed for that it",
    "start": "1439400",
    "end": "1441170"
  },
  {
    "text": "was actually not able to when we did our",
    "start": "1441170",
    "end": "1442610"
  },
  {
    "text": "load test and API yet it was not able to",
    "start": "1442610",
    "end": "1444380"
  },
  {
    "text": "scale to what we need it right for the",
    "start": "1444380",
    "end": "1448670"
  },
  {
    "text": "point calculation the I don't know we",
    "start": "1448670",
    "end": "1451280"
  },
  {
    "text": "have a spot plus Cassandra base solution",
    "start": "1451280",
    "end": "1453050"
  },
  {
    "text": "right now so what we do is as I said",
    "start": "1453050",
    "end": "1455930"
  },
  {
    "text": "earlier so what we do is we read the",
    "start": "1455930",
    "end": "1458240"
  },
  {
    "text": "data from s3 every minute and we",
    "start": "1458240",
    "end": "1460300"
  },
  {
    "text": "calculate this the points and ranks of",
    "start": "1460300",
    "end": "1463790"
  },
  {
    "text": "all the teams for all the players and",
    "start": "1463790",
    "end": "1465230"
  },
  {
    "text": "then we load that data into Cassandra",
    "start": "1465230",
    "end": "1466880"
  },
  {
    "text": "and then we serve the data out of",
    "start": "1466880",
    "end": "1468350"
  },
  {
    "text": "Cassandra all right I'm going to think",
    "start": "1468350",
    "end": "1472550"
  },
  {
    "text": "we have a slider question asking what",
    "start": "1472550",
    "end": "1475370"
  },
  {
    "text": "are your scaling bottlenecks and",
    "start": "1475370",
    "end": "1477180"
  },
  {
    "text": "and a challenge is based so one of them",
    "start": "1477180",
    "end": "1482010"
  },
  {
    "text": "I just mentioned right hot keys in Redis",
    "start": "1482010",
    "end": "1483720"
  },
  {
    "text": "right so we have a service called a tool",
    "start": "1483720",
    "end": "1487320"
  },
  {
    "text": "service which has the metadata of all",
    "start": "1487320",
    "end": "1488940"
  },
  {
    "text": "the games and the tours and matches and",
    "start": "1488940",
    "end": "1491100"
  },
  {
    "text": "players that it's like a very small data",
    "start": "1491100",
    "end": "1492930"
  },
  {
    "text": "set but it's it's pretty much needed for",
    "start": "1492930",
    "end": "1496500"
  },
  {
    "text": "each and every request that actually",
    "start": "1496500",
    "end": "1498030"
  },
  {
    "text": "hits our system so when we carved out",
    "start": "1498030",
    "end": "1501600"
  },
  {
    "text": "the system we chose the Redis as our",
    "start": "1501600",
    "end": "1503160"
  },
  {
    "text": "data more persistent store for that and",
    "start": "1503160",
    "end": "1505880"
  },
  {
    "text": "very soon what we ended up having doing",
    "start": "1505880",
    "end": "1508290"
  },
  {
    "text": "was to serve our peak traffic in IPL we",
    "start": "1508290",
    "end": "1512100"
  },
  {
    "text": "had four different clusters of Redis",
    "start": "1512100",
    "end": "1515670"
  },
  {
    "text": "actually having the exact same data and",
    "start": "1515670",
    "end": "1517590"
  },
  {
    "text": "using DNS to actually distribute it 25%",
    "start": "1517590",
    "end": "1521460"
  },
  {
    "text": "of the traffic to all of these attitudes",
    "start": "1521460",
    "end": "1523080"
  },
  {
    "text": "so that the services have single",
    "start": "1523080",
    "end": "1524280"
  },
  {
    "text": "endpoint to talk to so hot kiss has been",
    "start": "1524280",
    "end": "1526410"
  },
  {
    "text": "uh one of our challenges and other than",
    "start": "1526410",
    "end": "1531270"
  },
  {
    "text": "that I think it's about you have the",
    "start": "1531270",
    "end": "1535620"
  },
  {
    "text": "only way to serve and large traffic and",
    "start": "1535620",
    "end": "1538710"
  },
  {
    "text": "scale is to move to a distributed system",
    "start": "1538710",
    "end": "1540600"
  },
  {
    "text": "and to do that when your data model is",
    "start": "1540600",
    "end": "1543960"
  },
  {
    "text": "so tightly coupled it becomes very very",
    "start": "1543960",
    "end": "1545880"
  },
  {
    "text": "difficult so you have to very slowly",
    "start": "1545880",
    "end": "1547500"
  },
  {
    "text": "carve out one piece at a time trying to",
    "start": "1547500",
    "end": "1550110"
  },
  {
    "text": "balance it out between if you become too",
    "start": "1550110",
    "end": "1553500"
  },
  {
    "text": "aggressive and then covered a very major",
    "start": "1553500",
    "end": "1555090"
  },
  {
    "text": "piece it collides so that's what we did",
    "start": "1555090",
    "end": "1556860"
  },
  {
    "text": "we pick the most complicated part of a",
    "start": "1556860",
    "end": "1558750"
  },
  {
    "text": "system right at the beginning it was",
    "start": "1558750",
    "end": "1560160"
  },
  {
    "text": "from the contest micro-services what we",
    "start": "1560160",
    "end": "1561990"
  },
  {
    "text": "card but it actually took us like six",
    "start": "1561990",
    "end": "1564360"
  },
  {
    "text": "months to carve out just one single",
    "start": "1564360",
    "end": "1565860"
  },
  {
    "text": "service but once we got that right we",
    "start": "1565860",
    "end": "1568380"
  },
  {
    "text": "were able to carve out the next of the",
    "start": "1568380",
    "end": "1569550"
  },
  {
    "text": "services easily so trying to understand",
    "start": "1569550",
    "end": "1571260"
  },
  {
    "text": "the data modeler figuring out which",
    "start": "1571260",
    "end": "1572880"
  },
  {
    "text": "faces you can carve out that's the only",
    "start": "1572880",
    "end": "1574950"
  },
  {
    "text": "the only way to serve the traffic is to",
    "start": "1574950",
    "end": "1577530"
  },
  {
    "text": "actually have micro services and",
    "start": "1577530",
    "end": "1579090"
  },
  {
    "text": "distributed back-end completely I guess",
    "start": "1579090",
    "end": "1583080"
  },
  {
    "text": "last question on slide oh do you",
    "start": "1583080",
    "end": "1584790"
  },
  {
    "text": "interact with any third-party services",
    "start": "1584790",
    "end": "1586500"
  },
  {
    "text": "such as a billing or a payment partner",
    "start": "1586500",
    "end": "1589200"
  },
  {
    "text": "and if you do how do you handle outages",
    "start": "1589200",
    "end": "1591210"
  },
  {
    "text": "and failures",
    "start": "1591210",
    "end": "1592720"
  },
  {
    "text": "so yeah so we have V vault with a lot of",
    "start": "1592720",
    "end": "1594880"
  },
  {
    "text": "payment gateways back in India and so a",
    "start": "1594880",
    "end": "1599290"
  },
  {
    "text": "lot of it is manual right now but",
    "start": "1599290",
    "end": "1601120"
  },
  {
    "text": "recently we've introduced certain",
    "start": "1601120",
    "end": "1602470"
  },
  {
    "text": "systems with what we do is we track the",
    "start": "1602470",
    "end": "1604990"
  },
  {
    "text": "late of failure so we have multiple",
    "start": "1604990",
    "end": "1606400"
  },
  {
    "text": "payment gateways and in in a priority",
    "start": "1606400",
    "end": "1609160"
  },
  {
    "text": "order right and what we do is we collect",
    "start": "1609160",
    "end": "1610540"
  },
  {
    "text": "statistics as to which payment gateways",
    "start": "1610540",
    "end": "1612760"
  },
  {
    "text": "what's the success and failure rates for",
    "start": "1612760",
    "end": "1614470"
  },
  {
    "text": "these payment gateways and the moment",
    "start": "1614470",
    "end": "1616210"
  },
  {
    "text": "that's the the rates it's not the moment",
    "start": "1616210",
    "end": "1619750"
  },
  {
    "text": "the rate hits a certain threshold we",
    "start": "1619750",
    "end": "1621100"
  },
  {
    "text": "automatically disable certain payment",
    "start": "1621100",
    "end": "1623290"
  },
  {
    "text": "gateways and then enable the other ones",
    "start": "1623290",
    "end": "1624850"
  },
  {
    "text": "and make them higher in priorities it's",
    "start": "1624850",
    "end": "1628600"
  },
  {
    "text": "it's tricky though right because what",
    "start": "1628600",
    "end": "1630640"
  },
  {
    "text": "happens is anyways during the day the",
    "start": "1630640",
    "end": "1633640"
  },
  {
    "text": "the rate in which the payment gateways",
    "start": "1633640",
    "end": "1635320"
  },
  {
    "text": "are serving requests or the payments",
    "start": "1635320",
    "end": "1637060"
  },
  {
    "text": "that are happening are different during",
    "start": "1637060",
    "end": "1638680"
  },
  {
    "text": "the day and night so the system that",
    "start": "1638680",
    "end": "1641050"
  },
  {
    "text": "actually recognizes that it's actually",
    "start": "1641050",
    "end": "1642670"
  },
  {
    "text": "an indeed problem and not a false",
    "start": "1642670",
    "end": "1644110"
  },
  {
    "text": "positive there needs to be some",
    "start": "1644110",
    "end": "1646090"
  },
  {
    "text": "intelligence built into that and so",
    "start": "1646090",
    "end": "1648310"
  },
  {
    "text": "we're still working on it but this is",
    "start": "1648310",
    "end": "1649720"
  },
  {
    "text": "the first step that we've actually taken",
    "start": "1649720",
    "end": "1652380"
  },
  {
    "text": "all right well I guess that looks like",
    "start": "1652380",
    "end": "1654970"
  },
  {
    "text": "it's all the questions asking about me",
    "start": "1654970",
    "end": "1656350"
  },
  {
    "text": "one more hand okay",
    "start": "1656350",
    "end": "1657780"
  },
  {
    "text": "[Applause]",
    "start": "1657780",
    "end": "1662319"
  }
]