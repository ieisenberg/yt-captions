[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "well thank you very much for coming this afternoon I'm very excited to talk to you a little bit about advanced task",
    "start": "30",
    "end": "6960"
  },
  {
    "text": "scheduling on Amazon East yes and also to take some time to talk to you about a new open-source project that we",
    "start": "6960",
    "end": "13049"
  },
  {
    "text": "announced earlier today blocks to get started for those who are not familiar",
    "start": "13049",
    "end": "19230"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "with them is on East yes let me just do a quick overview of what the purpose of",
    "start": "19230",
    "end": "25050"
  },
  {
    "text": "this service stuff is and how we see customers using it when we built ECS our",
    "start": "25050",
    "end": "31890"
  },
  {
    "text": "goal was to provide a highly available high performant cluster manager service for running containers there's no",
    "start": "31890",
    "end": "38640"
  },
  {
    "text": "software to install we provide you with a set of api's and we manage all the",
    "start": "38640",
    "end": "43739"
  },
  {
    "text": "cluster state and container State for you across our infrastructure what we",
    "start": "43739",
    "end": "52590"
  },
  {
    "text": "also then offer is flexible container placement we have built-in schedulers that allow you to do long-running",
    "start": "52590",
    "end": "58170"
  },
  {
    "text": "services or batch type workloads we see customers using a variety of both of those types of scheduling options we",
    "start": "58170",
    "end": "66420"
  },
  {
    "text": "also provide flexibility for you to use our API to build your own schedulers",
    "start": "66420",
    "end": "71600"
  },
  {
    "text": "another benefit of using Amazon ECS is that we have deep integration with other",
    "start": "71600",
    "end": "77420"
  },
  {
    "text": "AWS platform features for example we have integration with auto scaling a lb",
    "start": "77420",
    "end": "83790"
  },
  {
    "text": "lb I am roles for auth EBS storage things of that nature which really gives",
    "start": "83790",
    "end": "90360"
  },
  {
    "text": "you the container a Tier one integration with a deep ecosystem of AWS services",
    "start": "90360",
    "end": "96979"
  },
  {
    "text": "and the last thing is by design we've built Amazon SES to be extensible so it",
    "start": "96979",
    "end": "105210"
  },
  {
    "text": "provides you building blocks so that you can model your applications and your architecture and run these on top of",
    "start": "105210",
    "end": "112590"
  },
  {
    "text": "Amazon UCS perhaps you've seen this architecture diagram before we've had",
    "start": "112590",
    "end": "119219"
  },
  {
    "start": "115000",
    "end": "115000"
  },
  {
    "text": "made this public it gives you a sense of how we've built the service at the core is our cluster manager and we have an e",
    "start": "119219",
    "end": "128580"
  },
  {
    "text": "CS agent which is also open sourced and that runs on the ec2 instances that you",
    "start": "128580",
    "end": "133660"
  },
  {
    "text": "and that's how we are able to interact with your instance to our cluster",
    "start": "133660",
    "end": "138940"
  },
  {
    "text": "manager and run the tasks for you but really what I want to focus on today are",
    "start": "138940",
    "end": "144070"
  },
  {
    "text": "two new significant components to this core platform the first is our new acs",
    "start": "144070",
    "end": "151180"
  },
  {
    "text": "placement engine and then also last week we announced the e CS event stream and I",
    "start": "151180",
    "end": "157330"
  },
  {
    "text": "want to talk through those and give you a little bit deeper dive into why we built them and how you should expect",
    "start": "157330",
    "end": "162850"
  },
  {
    "text": "them to work and then we'll talk about the further extensibility that you get",
    "start": "162850",
    "end": "167860"
  },
  {
    "text": "now to build custom schedulers and really run any type of workload on top",
    "start": "167860",
    "end": "173320"
  },
  {
    "text": "of ECS with blocks so jumping into the task placement engine prior to the the",
    "start": "173320",
    "end": "182500"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "new engine that we're talking about today customers were able to run tasks",
    "start": "182500",
    "end": "188290"
  },
  {
    "text": "or a group of containers based off a set of constraints and those were limited to at that point two CPU memory imports now",
    "start": "188290",
    "end": "196660"
  },
  {
    "text": "what we've done has introduced a whole new set of constraints that you can use when you're making placement decisions and you get these by default as part of",
    "start": "196660",
    "end": "203590"
  },
  {
    "text": "the service we provide you the ability to make constraints based off an ami ID off and a specific availability zone an",
    "start": "203590",
    "end": "212130"
  },
  {
    "text": "instance type and now we also offer several new placement strategies the",
    "start": "212130",
    "end": "217900"
  },
  {
    "text": "first is something that we call distinct instance and we'll talk a little about what that means and perhaps the most",
    "start": "217900",
    "end": "224410"
  },
  {
    "text": "powerful piece here is we're also now releasing the ability for you to use custom attributes so for example you",
    "start": "224410",
    "end": "230440"
  },
  {
    "text": "could say that you want to designate a set of instances within your cluster to",
    "start": "230440",
    "end": "236320"
  },
  {
    "text": "be dev and the rest prod and you can tag the dev instances so that you can now",
    "start": "236320",
    "end": "243640"
  },
  {
    "text": "make placements decisions on these custom attributes and really you can use any sort of string to make these sort of",
    "start": "243640",
    "end": "250870"
  },
  {
    "text": "placement decisions on now so let's just",
    "start": "250870",
    "end": "256030"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "talk a little bit about how we do task placement now with these new features the first you start with in this example",
    "start": "256030",
    "end": "263919"
  },
  {
    "text": "a cluster size of 10 instances the initial thing we do is look at which",
    "start": "263919",
    "end": "269889"
  },
  {
    "text": "of the instances available to you in your cluster satisfy the CPU and memory and port requirements after that was",
    "start": "269889",
    "end": "276759"
  },
  {
    "text": "taken to consideration the new set of constraints perhaps you said only run these tasks on this specific ami ID or",
    "start": "276759",
    "end": "285129"
  },
  {
    "text": "maybe you want to run it on a specific instance type you want to take advantage",
    "start": "285129",
    "end": "291460"
  },
  {
    "text": "of a GPU so you want to use perhaps one of our new GPU based offerings or a g2",
    "start": "291460",
    "end": "297039"
  },
  {
    "text": "for example you can make that as a specify that as a placement constraint now once we do that we have another",
    "start": "297039",
    "end": "304060"
  },
  {
    "text": "level that we'll talk about today that we call placement strategy so that goes",
    "start": "304060",
    "end": "309909"
  },
  {
    "text": "from I want to optimize for cost and utilization so I want to bin pack all these tasks on a single instance or",
    "start": "309909",
    "end": "315940"
  },
  {
    "text": "perhaps you're want to do high availability and spread these across",
    "start": "315940",
    "end": "321610"
  },
  {
    "text": "availability zones you tell us the strategy for the placement that you want us to do and we take that into",
    "start": "321610",
    "end": "327279"
  },
  {
    "text": "consideration next and at the end of the day we get a subset of instances that",
    "start": "327279",
    "end": "332529"
  },
  {
    "text": "meet the criteria that you've asked us for and then we actually place the tasks on that subset of instances so talking a",
    "start": "332529",
    "end": "342550"
  },
  {
    "start": "341000",
    "end": "341000"
  },
  {
    "text": "little bit about the placement strategies and we'll dive into each one of these individually and talk a little bit how you can use these to run your",
    "start": "342550",
    "end": "350349"
  },
  {
    "text": "applications these are the four new",
    "start": "350349",
    "end": "356460"
  },
  {
    "text": "strategies that are available to you bin packing you can run all of your tasks",
    "start": "356460",
    "end": "362169"
  },
  {
    "text": "target in on a specific instance and what we do is look at the constraint that you provide being either CPU or",
    "start": "362169",
    "end": "368229"
  },
  {
    "text": "memory and we'll pack as many of the tasks on a single instance as possible",
    "start": "368229",
    "end": "374729"
  },
  {
    "text": "to really optimize for utilization spread we had this before but it was",
    "start": "374729",
    "end": "381159"
  },
  {
    "text": "very random it was randomly placed across instances within a specific availability zone now",
    "start": "381159",
    "end": "387610"
  },
  {
    "text": "we give you more granular control to target specific zones within a region so",
    "start": "387610",
    "end": "392919"
  },
  {
    "text": "you may be for example running in US East one where we have five availability zones but maybe only want to",
    "start": "392919",
    "end": "399920"
  },
  {
    "text": "spreading it your application or service across three of those you can actually specify which zones that you want to use",
    "start": "399920",
    "end": "406820"
  },
  {
    "text": "for a given application we also now support affinity and anti affinities",
    "start": "406820",
    "end": "412760"
  },
  {
    "text": "so perhaps you have an application that you know is high CPU and another one that's high memory and you really want",
    "start": "412760",
    "end": "418370"
  },
  {
    "text": "to balance the placement of those to optimize how they run you can go ahead",
    "start": "418370",
    "end": "424700"
  },
  {
    "text": "and build your tasks so that and and your plate use placement strategies to",
    "start": "424700",
    "end": "430240"
  },
  {
    "text": "have a tas run together and be collocated on an instance or very commonly also you want to do something",
    "start": "430240",
    "end": "436280"
  },
  {
    "text": "where you say I don't actually want these tasks to run together because maybe it's your fun on your back-end service and you want to separate those",
    "start": "436280",
    "end": "442520"
  },
  {
    "text": "for availability purposes or for scaling maybe they're running on different instance types as well and the glass",
    "start": "442520",
    "end": "449000"
  },
  {
    "text": "does distinct instance where you say I have ten of these tasks and I really want these to run on a different",
    "start": "449000",
    "end": "454700"
  },
  {
    "text": "instance I don't want them to ever run together I think another really powerful",
    "start": "454700",
    "end": "461660"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "thing that we have in this release is something that we're calling strategy chaining so you actually and we'll talk",
    "start": "461660",
    "end": "468260"
  },
  {
    "text": "a little about the query language that we've written that supports this but what you get with strategy training is",
    "start": "468260",
    "end": "474500"
  },
  {
    "text": "the ability to say I want to spread my service across multiple availability zones but within a zone I actually want",
    "start": "474500",
    "end": "481700"
  },
  {
    "text": "to Bhim pack this because I want the availability by being in multiple AZ's but I want to drive up the cost the",
    "start": "481700",
    "end": "487820"
  },
  {
    "text": "utilization and lower the cost by running these on as few instances as possible within availability zone so I",
    "start": "487820",
    "end": "493520"
  },
  {
    "text": "think this is a super powerful feature that we're pretty excited about having for customers so let's jump into a",
    "start": "493520",
    "end": "500210"
  },
  {
    "text": "little bit I'll show a few examples of how the new query language works this",
    "start": "500210",
    "end": "505610"
  },
  {
    "text": "first example is matching on instance type and I have two examples here because I think it's important to",
    "start": "505610",
    "end": "511160"
  },
  {
    "text": "realize you can get as granular as you need to so first you can say that you",
    "start": "511160",
    "end": "519080"
  },
  {
    "text": "want to filter for instances that match anything in the t2 family all right so",
    "start": "519080",
    "end": "524150"
  },
  {
    "text": "that might return T to small T to micro T to medium our new t2 sizes or you can",
    "start": "524150",
    "end": "531320"
  },
  {
    "text": "get as specific as saying I actually only want this to run on t2 smalls we also have the",
    "start": "531320",
    "end": "538250"
  },
  {
    "text": "similar match on availability zone so you can say I want this to run anywhere in u.s. East one or I really only want",
    "start": "538250",
    "end": "545899"
  },
  {
    "text": "this application to run in u.s. East one a here's an example of how you can start",
    "start": "545899",
    "end": "553160"
  },
  {
    "text": "putting these expressions together so I want to run my tasks on any t2 in US",
    "start": "553160",
    "end": "562790"
  },
  {
    "text": "east 1a right or perhaps even more complex I want to run on any t2 small",
    "start": "562790",
    "end": "569180"
  },
  {
    "text": "medium or a Jeep GPU instance g2 instance but avoid placing this or don't",
    "start": "569180",
    "end": "576829"
  },
  {
    "text": "place this and US East one D right so we also take the negative expression there",
    "start": "576829",
    "end": "585250"
  },
  {
    "start": "585000",
    "end": "585000"
  },
  {
    "text": "and here's how you would set and then on filter and eventually run a task on a",
    "start": "585759",
    "end": "592550"
  },
  {
    "text": "custom attribute so here you would associate an attribute with a target ID which would be a container instance arm",
    "start": "592550",
    "end": "599319"
  },
  {
    "text": "and then you would provide us with the key value so in this particular case we",
    "start": "599319",
    "end": "604399"
  },
  {
    "text": "say you know this is stack prod and then you can see if I was running a development workload I could say run",
    "start": "604399",
    "end": "611120"
  },
  {
    "text": "this on anything that's not in my prod stack so let's go through a couple",
    "start": "611120",
    "end": "617959"
  },
  {
    "text": "examples I find this best if we can kind of visualize these together and then we'll do a demo so here is placement of",
    "start": "617959",
    "end": "626480"
  },
  {
    "text": "a specific target instance type so targeting a g2 instance and this is a common use case that we hear customers",
    "start": "626480",
    "end": "631730"
  },
  {
    "text": "ask us about they have a specific application that they want to leverage a GPU so now you can either use a custom",
    "start": "631730",
    "end": "638509"
  },
  {
    "text": "attribute and tag your instances with a tag that specifies them as a GPU",
    "start": "638509",
    "end": "643970"
  },
  {
    "text": "instance or you can do this by instance family and in this case when you run",
    "start": "643970",
    "end": "650569"
  },
  {
    "text": "that task we will go ahead and find the g2 instances that meet the criteria that",
    "start": "650569",
    "end": "657980"
  },
  {
    "text": "are available in your cluster and place the tasks for you here's an example of",
    "start": "657980",
    "end": "663649"
  },
  {
    "text": "the placement by instance type and availability zone so here in this example we're going to",
    "start": "663649",
    "end": "669590"
  },
  {
    "text": "avoid placing tasks in u.s. East 1d and we're only going to place tasks on",
    "start": "669590",
    "end": "674950"
  },
  {
    "text": "instances that are of t too small or T to medium and here is how you would the",
    "start": "674950",
    "end": "686030"
  },
  {
    "text": "command to use run a task with the count of nine and spread these across all",
    "start": "686030",
    "end": "692810"
  },
  {
    "text": "availability zones and you'll see the way we do this is we look for each we",
    "start": "692810",
    "end": "698210"
  },
  {
    "text": "make sure that as we start the task we're doing this evenly across the availability zones in which you've told us that you want your service to run in",
    "start": "698210",
    "end": "706690"
  },
  {
    "text": "here's the example that I mentioned earlier I think super useful for if you have a service that you want to spread",
    "start": "708460",
    "end": "714230"
  },
  {
    "text": "but then actually optimize for cost you would chain your placement strategies",
    "start": "714230",
    "end": "722030"
  },
  {
    "text": "together and ask to spread the tasks across availability zones but also been",
    "start": "722030",
    "end": "727460"
  },
  {
    "text": "packed on in this case we've been packing on memory a couple more examples",
    "start": "727460",
    "end": "736810"
  },
  {
    "text": "here's one that I wanted to share because it it shows that you can also",
    "start": "736810",
    "end": "742310"
  },
  {
    "text": "run multiple you can run these against the same cluster simultaneously so",
    "start": "742310",
    "end": "749230"
  },
  {
    "text": "here's an example where you would start specifying a placement constraint for",
    "start": "749230",
    "end": "755410"
  },
  {
    "text": "what we call a task group for your web server and any tasks that were running",
    "start": "755410",
    "end": "760460"
  },
  {
    "text": "already on instances in that task group we'd go find them so we'd place them on the same server for you and then here's",
    "start": "760460",
    "end": "767870"
  },
  {
    "text": "where we would say on the second example we want the backend piece of this application to not run with with the web",
    "start": "767870",
    "end": "774380"
  },
  {
    "text": "server so place these in the task group out that's not our web server these same",
    "start": "774380",
    "end": "781760"
  },
  {
    "text": "API capabilities are also part of our create service API so you can choose to",
    "start": "781760",
    "end": "787450"
  },
  {
    "text": "also provide placement strategies and constraints as part of the service",
    "start": "787450",
    "end": "792560"
  },
  {
    "text": "definition and then as we place these tap these write and run the service for",
    "start": "792560",
    "end": "799730"
  },
  {
    "start": "794000",
    "end": "794000"
  },
  {
    "text": "you we also continually as you update your service and perhaps skelet we follow the",
    "start": "799730",
    "end": "805670"
  },
  {
    "text": "same and enforce the constraints and placement strategy as your service",
    "start": "805670",
    "end": "810710"
  },
  {
    "text": "scales or as you scale in or scale down the service so in this particular case",
    "start": "810710",
    "end": "816070"
  },
  {
    "text": "we're creating a service that is going to impact on memory and at the same time",
    "start": "816070",
    "end": "823700"
  },
  {
    "text": "run a service that is going to spread across availability zones and so the",
    "start": "823700",
    "end": "830210"
  },
  {
    "text": "what what we really want to demonstrate here is that these are all now part of",
    "start": "830210",
    "end": "835940"
  },
  {
    "text": "the core set of api's that you can use when you call either run task or create service as part of Amazon UCS here's an",
    "start": "835940",
    "end": "846080"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "example where we're using distinct instances so you may say I want to",
    "start": "846080",
    "end": "852500"
  },
  {
    "text": "target this task on GPUs workloads first and just place I had three tasks to",
    "start": "852500",
    "end": "859220"
  },
  {
    "text": "start in this example I only had two GTS that were part of my cluster at the time when I made the original service request",
    "start": "859220",
    "end": "865090"
  },
  {
    "text": "so we placed the two we respected the request to the run on a distinct instance so we never you didn't have a",
    "start": "865090",
    "end": "871730"
  },
  {
    "text": "g2 available to start that third task but when a g2 does perhaps you have an",
    "start": "871730",
    "end": "877160"
  },
  {
    "text": "auto scaling rule that then scales up your cluster based off that that request that pending task as that then becomes",
    "start": "877160",
    "end": "883790"
  },
  {
    "text": "available we'll place the task for you same here as your cluster scales then",
    "start": "883790",
    "end": "889520"
  },
  {
    "text": "we'll go and finish bringing your service to a healthy state all of these",
    "start": "889520",
    "end": "898460"
  },
  {
    "text": "features are also available in the ECS console so if you would like to take",
    "start": "898460",
    "end": "906650"
  },
  {
    "text": "advantage of these different strategies you can do so and there's a couple ways you can do that the first is by using a",
    "start": "906650",
    "end": "913550"
  },
  {
    "text": "placement template and what we've done here is just taking common strategies that we heard from customers are",
    "start": "913550",
    "end": "920060"
  },
  {
    "text": "important to them and we've created them as a template that you can select from a drop-down so you can choose from",
    "start": "920060",
    "end": "925600"
  },
  {
    "text": "availability balance spread you can also BIM pack the example I showed been",
    "start": "925600",
    "end": "930950"
  },
  {
    "text": "packed across the nazy you can target a J'son and just impact your task or won't",
    "start": "930950",
    "end": "938180"
  },
  {
    "text": "ask for host is the distinct instance constraint and strategy or you can",
    "start": "938180",
    "end": "943940"
  },
  {
    "text": "create your own and so we have a custom option also through the UI which you can just select both the placement",
    "start": "943940",
    "end": "952550"
  },
  {
    "start": "946000",
    "end": "946000"
  },
  {
    "text": "strategies and constraints that are important to you and the priority and will satisfy these as you build them in",
    "start": "952550",
    "end": "958730"
  },
  {
    "text": "the console alright my demo the fun part",
    "start": "958730",
    "end": "967000"
  },
  {
    "text": "cool all right so here is a sample there",
    "start": "974990",
    "end": "985970"
  },
  {
    "text": "you so here's the sample run task hall",
    "start": "985970",
    "end": "991240"
  },
  {
    "text": "I'll show you first here is my cluster",
    "start": "991240",
    "end": "996649"
  },
  {
    "text": "so I have no learning instant ask at this point here's a view of the availability zones that these instances",
    "start": "996649",
    "end": "1003910"
  },
  {
    "text": "are end and in this particular example",
    "start": "1003910",
    "end": "1009010"
  },
  {
    "text": "I'm starting with placing six tasks on my g2 instances and you can see if",
    "start": "1009010",
    "end": "1019420"
  },
  {
    "text": "you're familiar with you sits as a standard output of our and indicating",
    "start": "1019420",
    "end": "1025720"
  },
  {
    "text": "that the past were placed successfully and if we come back here and refresh",
    "start": "1025720",
    "end": "1031170"
  },
  {
    "text": "we'll see that we found the available GP g two instances in my cluster and place",
    "start": "1031170",
    "end": "1037660"
  },
  {
    "text": "them on those I don't have six G tuning",
    "start": "1037660",
    "end": "1043900"
  },
  {
    "text": "out we have five so we actually ran a second one on one of the instances the",
    "start": "1043900",
    "end": "1049090"
  },
  {
    "text": "second example",
    "start": "1049090",
    "end": "1052049"
  },
  {
    "text": "is been packing so this example is going to show you starting five tasks and",
    "start": "1058110",
    "end": "1064980"
  },
  {
    "text": "running them on a single instance",
    "start": "1064980",
    "end": "1068390"
  },
  {
    "text": "and there you go but there at the top so we've been packed that application on a single container instance and then one",
    "start": "1075220",
    "end": "1082840"
  },
  {
    "text": "more here we're going to spread across",
    "start": "1082840",
    "end": "1091870"
  },
  {
    "text": "availability zones and then bin pack within his own",
    "start": "1091870",
    "end": "1096720"
  },
  {
    "text": "I'll try and so you can see these starting to come up here so we've picked and that's availability zone C D and",
    "start": "1102430",
    "end": "1110500"
  },
  {
    "text": "then here's the US East one D so we've we've placed these across the three",
    "start": "1110500",
    "end": "1116440"
  },
  {
    "text": "availability zones that I have specified and been packed within a single instance",
    "start": "1116440",
    "end": "1122770"
  },
  {
    "text": "in each zone",
    "start": "1122770",
    "end": "1125040"
  },
  {
    "text": "so mmm this feature this new task placement engine feature will be available in all regions that we have",
    "start": "1132470",
    "end": "1138620"
  },
  {
    "text": "ECS today and it's coming very soon so I wish we're really excited to get that out to you and very interested in the",
    "start": "1138620",
    "end": "1145040"
  },
  {
    "text": "feedback that we get as you start using it we feel very confident this will help give you great extensibility and how you",
    "start": "1145040",
    "end": "1151550"
  },
  {
    "text": "and control over how you run your applications across Amazon ECS so the",
    "start": "1151550",
    "end": "1159050"
  },
  {
    "text": "second feature I want to talk a little bit today is one that we announced last week which is the ECS event stream the",
    "start": "1159050",
    "end": "1165590"
  },
  {
    "text": "reason we built this service was because we realized and talking to customers that they wanted the ability to have",
    "start": "1165590",
    "end": "1171560"
  },
  {
    "text": "real-time notifications of tasks they changed across their cluster excuse me",
    "start": "1171560",
    "end": "1177710"
  },
  {
    "text": "prior you could get this information by pulling our api's and what we found is a",
    "start": "1177710",
    "end": "1183200"
  },
  {
    "text": "lot of customers we're doing that and then trying to materialized views locally so that they could you know run",
    "start": "1183200",
    "end": "1189470"
  },
  {
    "text": "that close to their scheduler or build you know complex UI's and that was just",
    "start": "1189470",
    "end": "1195470"
  },
  {
    "text": "a little bit painful and it was a lot more valuable if we can give them an option to consume events real-time and",
    "start": "1195470",
    "end": "1200960"
  },
  {
    "text": "based off actual changes in state across their cluster so I want to talk a little bit how this works",
    "start": "1200960",
    "end": "1208250"
  },
  {
    "text": "this feature is built on top of cloud watch events another new ADA bus feature",
    "start": "1208250",
    "end": "1213530"
  },
  {
    "text": "that was launched earlier this year and so what we do is as a new instance or",
    "start": "1213530",
    "end": "1218870"
  },
  {
    "text": "test starts up we send an event notification to cloud watch events and",
    "start": "1218870",
    "end": "1226910"
  },
  {
    "text": "this is for all tasks State and container instance date changes they go",
    "start": "1226910",
    "end": "1231920"
  },
  {
    "text": "to cloud watch events and are stored there and acute the same goes for any",
    "start": "1231920",
    "end": "1237530"
  },
  {
    "text": "task stop or termination or instance termination if you terminate an instance and it has tasks running on it we send",
    "start": "1237530",
    "end": "1244430"
  },
  {
    "text": "you real-time notifications of those changes as well and then you can choose how to consume the events from cloud",
    "start": "1244430",
    "end": "1252860"
  },
  {
    "text": "watch so they offer lambda Kinesis sqs and SNS as options for consumption and",
    "start": "1252860",
    "end": "1259750"
  },
  {
    "text": "we support all those as well it's really easy to get started using",
    "start": "1259750",
    "end": "1266030"
  },
  {
    "start": "1263000",
    "end": "1263000"
  },
  {
    "text": "this with your and your infrastructure so here's one example how to use sqs or",
    "start": "1266030",
    "end": "1272690"
  },
  {
    "text": "SNS excuse me first you create your cloud watch rule and you have a lot of granularity as to",
    "start": "1272690",
    "end": "1278360"
  },
  {
    "text": "how detailed how you want to set up that cloud watch event rule you can say I",
    "start": "1278360",
    "end": "1283910"
  },
  {
    "text": "want all events from all my clusters and you may get a lot of notifications of TAS state changes across that cluster",
    "start": "1283910",
    "end": "1290330"
  },
  {
    "text": "depending on the type of workloads you're running or you can get very specific and filtered down to I only interested in stop notifications on a",
    "start": "1290330",
    "end": "1298010"
  },
  {
    "text": "single cluster in this example since we're using SNS you then create your SNS",
    "start": "1298010",
    "end": "1303140"
  },
  {
    "text": "topic and then you put your events to that SNS topic so it's really just three steps to get started",
    "start": "1303140",
    "end": "1308210"
  },
  {
    "text": "super simple and here's an example of how we see some customers already starting to use this here's an example",
    "start": "1308210",
    "end": "1315530"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "where you can listen for event changes across your cluster and update your DNS",
    "start": "1315530",
    "end": "1323390"
  },
  {
    "text": "own route 53 so you do application discovery so a new task starts you can",
    "start": "1323390",
    "end": "1329810"
  },
  {
    "text": "write a lambda function that filters for a task start or task stop change for a specific application and then call makes",
    "start": "1329810",
    "end": "1336140"
  },
  {
    "text": "the call to route 53 to update your DNS zone and so in this particular example we have new records being added then we",
    "start": "1336140",
    "end": "1344600"
  },
  {
    "text": "have a task stopping and we would also handle that and eventually remove that",
    "start": "1344600",
    "end": "1349700"
  },
  {
    "text": "record so that your application can would know that that that service is no",
    "start": "1349700",
    "end": "1355760"
  },
  {
    "text": "longer running okay so now let's talk a",
    "start": "1355760",
    "end": "1365390"
  },
  {
    "text": "little bit about blocks this isn't a project that we're very excited about",
    "start": "1365390",
    "end": "1371060"
  },
  {
    "text": "and looking forward to working with the community on collaborating talking a",
    "start": "1371060",
    "end": "1378830"
  },
  {
    "text": "little bit about why what is blocks so today we're releasing two parts of this",
    "start": "1378830",
    "end": "1384950"
  },
  {
    "start": "1379000",
    "end": "1379000"
  },
  {
    "text": "project we have a cluster state service and we have a daemon scheduler the goal",
    "start": "1384950",
    "end": "1393110"
  },
  {
    "text": "of the cluster state service was to provide a mechanism for customers to consume events from the real-time",
    "start": "1393110",
    "end": "1398759"
  },
  {
    "text": "events from the event stream and store them hopefully in a materialized view that they can then use a simple set of",
    "start": "1398759",
    "end": "1404190"
  },
  {
    "text": "api's that we're providing as part of the project to filter and list container",
    "start": "1404190",
    "end": "1410579"
  },
  {
    "text": "instance and tasks detail the second",
    "start": "1410579",
    "end": "1416309"
  },
  {
    "text": "piece is a daemon scheduler and really we're providing that as a reference scheduler for you to see how you can",
    "start": "1416309",
    "end": "1422339"
  },
  {
    "text": "build on top of the cluster state service and the ECS event stream the",
    "start": "1422339",
    "end": "1429659"
  },
  {
    "text": "reason we built this project to begin with is as we talk to customers they love the fact that we had built ECS and",
    "start": "1429659",
    "end": "1435299"
  },
  {
    "text": "them that they didn't have to worry about the cluster management they like the fact that they can use a simple",
    "start": "1435299",
    "end": "1440519"
  },
  {
    "text": "api's to run services and tasks but",
    "start": "1440519",
    "end": "1445529"
  },
  {
    "text": "perhaps they've already been running containers for a while have made some investment in existing schedulers or",
    "start": "1445529",
    "end": "1451409"
  },
  {
    "text": "they had custom business logic that they wanted to use as part of their their",
    "start": "1451409",
    "end": "1456869"
  },
  {
    "text": "scheduling and and we wanted to give them the control and the ability to do that as well so with blocks our goal is",
    "start": "1456869",
    "end": "1464279"
  },
  {
    "text": "to offer customers the choice to how they run their applications whether they're using the built-in schedulers",
    "start": "1464279",
    "end": "1470369"
  },
  {
    "text": "that we provide with UCS or if they want to run and build their own if they have already invested in schedulers that they",
    "start": "1470369",
    "end": "1475619"
  },
  {
    "text": "have using other frameworks our goal is to make those extensible through blocks",
    "start": "1475619",
    "end": "1480690"
  },
  {
    "text": "as well and really at the end of the day we want to focus on how we can improve",
    "start": "1480690",
    "end": "1485789"
  },
  {
    "text": "the end-to-end experience for developing and running containers on top of Amazon UCS so so you mean so let me talk a",
    "start": "1485789",
    "end": "1499109"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "little about how blocks works behind the scenes once you set it up so events from",
    "start": "1499109",
    "end": "1506159"
  },
  {
    "text": "the ICS cluster manager again as we showed go through the ECS event stream",
    "start": "1506159",
    "end": "1511289"
  },
  {
    "text": "in this particular case with blocks we've configured it to use an sqs queue and when you deploy blocks we set that",
    "start": "1511289",
    "end": "1518519"
  },
  {
    "text": "up for you through a cloud formation template so we set up an sqs queue and",
    "start": "1518519",
    "end": "1523619"
  },
  {
    "text": "connect that to your cluster that you want to pull events from and then we run to containers",
    "start": "1523619",
    "end": "1529549"
  },
  {
    "text": "three container excuse me as part of the blocks framework a the cluster state",
    "start": "1529549",
    "end": "1535519"
  },
  {
    "text": "service and that CD container where we store the state and then today we have one container that's running the Neyman",
    "start": "1535519",
    "end": "1542059"
  },
  {
    "text": "scheduler it's pretty simple to get started mm-hmm and if you're interested",
    "start": "1542059",
    "end": "1548960"
  },
  {
    "start": "1544000",
    "end": "1544000"
  },
  {
    "text": "in and getting set up and testing it we'd would love to get feedback from you",
    "start": "1548960",
    "end": "1554440"
  },
  {
    "text": "to get started you can go to the github page it's online all already and clone",
    "start": "1554440",
    "end": "1562039"
  },
  {
    "text": "the repo inside of there you'll see a cloud formation template that will go",
    "start": "1562039",
    "end": "1567259"
  },
  {
    "text": "through the configuration and setup of the SQ SQ as i mentioned and then you can simply start the container the three",
    "start": "1567259",
    "end": "1574220"
  },
  {
    "text": "containers and that should be it to get started i wanted to show you a little",
    "start": "1574220",
    "end": "1580220"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "bit of what the the api's look like that that we have today in the initial release here with the cluster state",
    "start": "1580220",
    "end": "1587059"
  },
  {
    "text": "service you can get instance and task",
    "start": "1587059",
    "end": "1593509"
  },
  {
    "text": "information and filter based off of clusters and then on the daemon",
    "start": "1593509",
    "end": "1598909"
  },
  {
    "start": "1598000",
    "end": "1598000"
  },
  {
    "text": "scheduler we've introduced in the concepts around creating what we call an environment and then a deployment and",
    "start": "1598909",
    "end": "1606619"
  },
  {
    "text": "really the goal of the daemon schedule if you're not familiar with what the purpose of this of purpose-built",
    "start": "1606619",
    "end": "1612169"
  },
  {
    "text": "scheduler does is it will target a cluster and once you've specified and it",
    "start": "1612169",
    "end": "1618590"
  },
  {
    "text": "will ensure that one task is running on each of the nodes in there we also monitor for new nodes entering into the",
    "start": "1618590",
    "end": "1626299"
  },
  {
    "text": "cluster and we start the the tasks and those as well so if you scale up your cluster we can guarantee that that task",
    "start": "1626299",
    "end": "1632809"
  },
  {
    "text": "will run on any new nodes that join the cluster so let's talk a little bit about",
    "start": "1632809",
    "end": "1640639"
  },
  {
    "text": "that mm-hmm so if you had a cluster of",
    "start": "1640639",
    "end": "1646460"
  },
  {
    "text": "three instances and then you ran blocks and started an incredi environment it",
    "start": "1646460",
    "end": "1651649"
  },
  {
    "text": "started up limit it would start those across the three instances and then as new instances joined we would see the",
    "start": "1651649",
    "end": "1659690"
  },
  {
    "text": "event notifications coming through the event stream and start the tasks on the unknowns as well for you here's what it",
    "start": "1659690",
    "end": "1668630"
  },
  {
    "start": "1667000",
    "end": "1667000"
  },
  {
    "text": "looks like so first creating an environment what we've provided in hub and available",
    "start": "1668630",
    "end": "1675110"
  },
  {
    "text": "today is a demo CLI so you can get an idea of how how we how the service works",
    "start": "1675110",
    "end": "1682840"
  },
  {
    "text": "but as you look at it and look at the swagger spec you can also do calls against the REST API that we provide so",
    "start": "1682840",
    "end": "1691280"
  },
  {
    "text": "first is to create an environment and once you've created the environment as part of the environment environment",
    "start": "1691280",
    "end": "1696350"
  },
  {
    "start": "1695000",
    "end": "1695000"
  },
  {
    "text": "creation you specify the task definition that you want to run on all the all the nodes in your cluster then you create a",
    "start": "1696350",
    "end": "1702290"
  },
  {
    "text": "deployment specifying the environment and here's the view of what it would look like inside the console so you",
    "start": "1702290",
    "end": "1709310"
  },
  {
    "start": "1705000",
    "end": "1705000"
  },
  {
    "text": "would have five nodes in your cluster we would start the five tasks and then as you've scaled up we would place a single",
    "start": "1709310",
    "end": "1717520"
  },
  {
    "start": "1713000",
    "end": "1713000"
  },
  {
    "text": "task as part of that on each new node ok",
    "start": "1717520",
    "end": "1724100"
  },
  {
    "text": "let's demo this as well",
    "start": "1724100",
    "end": "1728350"
  },
  {
    "text": "okay",
    "start": "1738909",
    "end": "1741599"
  },
  {
    "text": "so this I I wanted to just quickly show you the three containers that running and we talked about them earlier so I",
    "start": "1746970",
    "end": "1753600"
  },
  {
    "text": "have these currently running on my laptop one of the features with blocks is you can really run it anywhere",
    "start": "1753600",
    "end": "1758880"
  },
  {
    "text": "it does require connectivity to edit us because you're pulling events from the ECS event stream but you can run this",
    "start": "1758880",
    "end": "1764160"
  },
  {
    "text": "workload on top of an e CS container",
    "start": "1764160",
    "end": "1769350"
  },
  {
    "text": "instance or you can run it on your laptop button which I'm doing today and",
    "start": "1769350",
    "end": "1775010"
  },
  {
    "text": "let's go through the process so here I currently have no environments crated",
    "start": "1775010",
    "end": "1781080"
  },
  {
    "text": "and I will go ahead and create",
    "start": "1781080",
    "end": "1790190"
  },
  {
    "text": "so first I created environment name now I'm providing my and passing in my cluster name I have a task definition my",
    "start": "1800310",
    "end": "1810390"
  },
  {
    "text": "app and now I have gotten a response saying that the environment has been created we also give you a deployment",
    "start": "1810390",
    "end": "1817620"
  },
  {
    "text": "token as a key to starting and you'll need that to actually start the deployment so now we're going to start a",
    "start": "1817620",
    "end": "1825210"
  },
  {
    "text": "deployment",
    "start": "1825210",
    "end": "1827659"
  },
  {
    "text": "by the",
    "start": "1832660",
    "end": "1835320"
  },
  {
    "text": "fireman name passing a token and now you",
    "start": "1839669",
    "end": "1845620"
  },
  {
    "text": "can see that it's go ahead and started that so if we come back to our console",
    "start": "1845620",
    "end": "1851140"
  },
  {
    "text": "you can see we had no tasks running and",
    "start": "1851140",
    "end": "1856320"
  },
  {
    "text": "now we see the task getting placed and if we then wanted to come and scale up",
    "start": "1856500",
    "end": "1865270"
  },
  {
    "text": "our cluster let's go",
    "start": "1865270",
    "end": "1871170"
  },
  {
    "text": "[Music] so now what's happening behind the",
    "start": "1871170",
    "end": "1877450"
  },
  {
    "text": "scenes is where I have an auto scaling group that's going ahead and scouting them of instances in this cluster 210",
    "start": "1877450",
    "end": "1883030"
  },
  {
    "text": "and what we want to eventually see as these start will see the container instances register and tasks being",
    "start": "1883030",
    "end": "1891010"
  },
  {
    "text": "placed on those so while we wait for that we'll come back and check on that",
    "start": "1891010",
    "end": "1899110"
  },
  {
    "text": "in a second let me talk a little bit about our vision with blocks you know",
    "start": "1899110",
    "end": "1906490"
  },
  {
    "start": "1901000",
    "end": "1901000"
  },
  {
    "text": "take probably a minute or two for the instances to actually start up so really what we're hoping to do with blocks is",
    "start": "1906490",
    "end": "1912490"
  },
  {
    "text": "create a direct channel of communication with our customers so that we can learn from you on what type of features you",
    "start": "1912490",
    "end": "1919570"
  },
  {
    "text": "want us to build and our goal is as we",
    "start": "1919570",
    "end": "1924850"
  },
  {
    "text": "learn more from you around how we can make ECS extensible what sort of",
    "start": "1924850",
    "end": "1930130"
  },
  {
    "text": "scheduling things are required to help",
    "start": "1930130",
    "end": "1936460"
  },
  {
    "text": "you run your types of applications our goal is to eventually bring that so those sort of features back into the ECS",
    "start": "1936460",
    "end": "1943470"
  },
  {
    "text": "or product as well so really we would like to ask that you take the time to",
    "start": "1943470",
    "end": "1950940"
  },
  {
    "text": "test blocks give us feedback we have an open road map on or github page as far",
    "start": "1950940",
    "end": "1956080"
  },
  {
    "text": "as where we're going we have a couple proposals out there already about how we intend to work to make the what we've",
    "start": "1956080",
    "end": "1962260"
  },
  {
    "text": "already more highly available run anywhere type style and we're very open",
    "start": "1962260",
    "end": "1967840"
  },
  {
    "text": "to feedback from you on where you'd like to see the direction the project go our",
    "start": "1967840",
    "end": "1973780"
  },
  {
    "text": "focus really is on providing additional extensibility we understand that customers have lots of different",
    "start": "1973780",
    "end": "1979140"
  },
  {
    "text": "business requirements for how they've run their applications and we want to make sure that we're giving them the",
    "start": "1979140",
    "end": "1985020"
  },
  {
    "text": "control and choice on how they run those on top of Amazon UCS how can you get",
    "start": "1985020",
    "end": "1991690"
  },
  {
    "text": "started contributing as I mentioned we have the github page it's all open sourced it's light licensed under Apache",
    "start": "1991690",
    "end": "1998230"
  },
  {
    "text": "2.0 feel free to open an issue or a pull request comment on our proposals for the",
    "start": "1998230",
    "end": "2005730"
  },
  {
    "text": "roadmap we also have a gator channel that we've where you can interact with members of",
    "start": "2005730",
    "end": "2011370"
  },
  {
    "text": "the team and so if you have questions or how to get started or comments on our",
    "start": "2011370",
    "end": "2019010"
  },
  {
    "text": "questions why we've done things a certain way I feel free to ask those then and that will have folks working",
    "start": "2019010",
    "end": "2024240"
  },
  {
    "text": "and available to help there as well all right come back here see how we're doing",
    "start": "2024240",
    "end": "2036920"
  },
  {
    "text": "and there we go so we've got now all ten",
    "start": "2036920",
    "end": "2042600"
  },
  {
    "text": "of our container instances running and blocks daemon scheduler was able to start a task on across each of those",
    "start": "2042600",
    "end": "2051050"
  },
  {
    "text": "so just kind of in summary we're really",
    "start": "2063750",
    "end": "2069628"
  },
  {
    "text": "excited about the new features that we were able to talk to you about today I think as you start to use them you'll",
    "start": "2069629",
    "end": "2075210"
  },
  {
    "text": "see that it really extends the powerful capabilities of Amazon use yes being able to make very detailed placement",
    "start": "2075210",
    "end": "2081599"
  },
  {
    "text": "decisions on and and having direct control of how you're and where your applications run really giving you the",
    "start": "2081599",
    "end": "2087599"
  },
  {
    "text": "opportunity to make business decisions both based on availability and cost and",
    "start": "2087599",
    "end": "2093560"
  },
  {
    "text": "down to the type of instances that your applications are running is really a very powerful capability with the VCS",
    "start": "2093560",
    "end": "2104730"
  },
  {
    "text": "event stream there's lots of different ways and we'll be publishing more documentation and blogs on how you can",
    "start": "2104730",
    "end": "2110190"
  },
  {
    "text": "take advantage of this as we work with more customers we're seeing really interesting use cases people building real-time you eyes on top of the event",
    "start": "2110190",
    "end": "2117720"
  },
  {
    "text": "streams and things like service discovery that we we talked about today and that's available already in all",
    "start": "2117720",
    "end": "2124590"
  },
  {
    "text": "regions for you to consume and then finally as we really focus on how we can",
    "start": "2124590",
    "end": "2129960"
  },
  {
    "text": "further build the extensibility and allow you to bring your own scheduling",
    "start": "2129960",
    "end": "2136470"
  },
  {
    "text": "logic to run on top of MSE Amazon TTS we're really excited to partner with",
    "start": "2136470",
    "end": "2142260"
  },
  {
    "text": "each of you and with the release of blocks I think anyway so I want to thank",
    "start": "2142260",
    "end": "2149730"
  },
  {
    "text": "you very much for coming and we have folks from the team here afterwards so",
    "start": "2149730",
    "end": "2155010"
  },
  {
    "text": "if you have questions you can feel free to come up to the front and well we'll try and answer them for you",
    "start": "2155010",
    "end": "2160020"
  },
  {
    "text": "[Applause]",
    "start": "2160020",
    "end": "2166020"
  }
]