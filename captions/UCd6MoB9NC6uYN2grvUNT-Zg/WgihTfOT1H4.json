[
  {
    "text": "good morning my name is usman Shaquille and I'm the worldwide tech lead for",
    "start": "30",
    "end": "5990"
  },
  {
    "text": "media and entertainment at AWS and along with me here today is Tom nightingale",
    "start": "5990",
    "end": "12030"
  },
  {
    "text": "who is a solution architect with the AWS solution builder team so today we're",
    "start": "12030",
    "end": "18720"
  },
  {
    "text": "we're going to be talking about building server less video workflows so just a",
    "start": "18720",
    "end": "24210"
  },
  {
    "text": "quick show of hands how many of you are here to to talk to to listen about or",
    "start": "24210",
    "end": "31410"
  },
  {
    "text": "hear about serverless all right what about video",
    "start": "31410",
    "end": "37790"
  },
  {
    "text": "cool awesome so I don't know if you guys know but we had our media and entertainment track",
    "start": "37790",
    "end": "45000"
  },
  {
    "text": "yesterday and we had a whole bunch of sessions yesterday talking about different things similar things as well",
    "start": "45000",
    "end": "50730"
  },
  {
    "text": "and we launched AWS elemental media services yesterday as well how many of",
    "start": "50730",
    "end": "58260"
  },
  {
    "text": "you are aware of that cool that's good and we're going to be talking about a",
    "start": "58260",
    "end": "63930"
  },
  {
    "text": "bit about that here as well so kind of you heard about the announcement I don't know if you tried out some of those",
    "start": "63930",
    "end": "70170"
  },
  {
    "text": "services already or not but we're going to kind of try to show you a realistic",
    "start": "70170",
    "end": "75689"
  },
  {
    "text": "example of one of those media services here how do you take it and build the",
    "start": "75689",
    "end": "81000"
  },
  {
    "text": "entire workflow through it so this whole project server last video workflows you",
    "start": "81000",
    "end": "88229"
  },
  {
    "text": "know started a while back so you know a lot of our customers whenever we go out",
    "start": "88229",
    "end": "93930"
  },
  {
    "text": "in the field we'll talk to our customers we'll say hey we have all these different building blocks services how",
    "start": "93930",
    "end": "99240"
  },
  {
    "text": "you can use ec2 compute service our storage service to kind of say store",
    "start": "99240",
    "end": "104430"
  },
  {
    "text": "your content to encode or transport your content or process your content using GC",
    "start": "104430",
    "end": "110220"
  },
  {
    "text": "- you know with your own sort of say bring it bring your own encoder kind of a thing if you will or even use the",
    "start": "110220",
    "end": "120180"
  },
  {
    "text": "elastic transcoder service or elemental cloud etc so but basically being you",
    "start": "120180",
    "end": "126869"
  },
  {
    "text": "know these building blocks that you have to kind of put together in order to build a",
    "start": "126869",
    "end": "132260"
  },
  {
    "text": "complete end-to-end workflow for video streaming and when we talk about video",
    "start": "132260",
    "end": "138799"
  },
  {
    "text": "streaming obviously we are talking about both live as well as the file based",
    "start": "138799",
    "end": "145450"
  },
  {
    "text": "streaming and we'll talk a bit about both here right but what our customers are really looking for was hey can you",
    "start": "145450",
    "end": "152870"
  },
  {
    "text": "give me some example of this whole thing working together well one thing is what",
    "start": "152870",
    "end": "158720"
  },
  {
    "text": "is streaming well I can put my content which is already prepackaged or you know a pre processed in an s3 bucket and I",
    "start": "158720",
    "end": "167269"
  },
  {
    "text": "can put it behind a CDN like a cloud front and I could just simply stream my",
    "start": "167269",
    "end": "172340"
  },
  {
    "text": "content well that's great I can for the live you know I can be running a",
    "start": "172340",
    "end": "178010"
  },
  {
    "text": "streaming server on ec2 you know pick a pick a compute instance and then put it",
    "start": "178010",
    "end": "184970"
  },
  {
    "text": "behind a CDN and basically there you go there's your live stream but if you look",
    "start": "184970",
    "end": "190159"
  },
  {
    "text": "at it realistically there's a whole lot more that goes into it you know things like you have to transport in court",
    "start": "190159",
    "end": "197359"
  },
  {
    "text": "package you have to apply DRM watermarking even do QC on the content",
    "start": "197359",
    "end": "204199"
  },
  {
    "text": "when you receive it so there is a bunch of different tasks that go into this workflow and that's where you know",
    "start": "204199",
    "end": "212090"
  },
  {
    "text": "having something which is simplistic and kind of gives you as an example",
    "start": "212090",
    "end": "217879"
  },
  {
    "text": "starting point that you can start and then you can build or customize kind of treat it as a framework and customize",
    "start": "217879",
    "end": "224780"
  },
  {
    "text": "your workflow could be pretty handy so here's a quick agenda we're gonna start",
    "start": "224780",
    "end": "232310"
  },
  {
    "text": "with a quick introduction a bit of it I already did voice of the customer we're going to talk about the relevant AWS",
    "start": "232310",
    "end": "238489"
  },
  {
    "text": "services and then we're gonna talk about how we work backwards from the wise of the customers what customers were",
    "start": "238489",
    "end": "244579"
  },
  {
    "text": "looking for what we ended up building and when I say building you know it is",
    "start": "244579",
    "end": "250759"
  },
  {
    "text": "actually its solution which is available on the AWS answers page and Tom here",
    "start": "250759",
    "end": "256459"
  },
  {
    "text": "will give a demo of the of the solution we'll talk about the evolution of the solution where we started",
    "start": "256459",
    "end": "263300"
  },
  {
    "text": "with the MVP what is available today the version 2 of the solution and our future",
    "start": "263300",
    "end": "268520"
  },
  {
    "text": "plans with with that with the solution so quickly on the introduction and I'll",
    "start": "268520",
    "end": "274669"
  },
  {
    "text": "kind of breeze through these slides because I would you know given the crowd here I would think that most of you are",
    "start": "274669",
    "end": "279770"
  },
  {
    "text": "already aware of this and you know that's why your air so one of the key trends we are seeing in the media space",
    "start": "279770",
    "end": "285289"
  },
  {
    "text": "is this massive explosion of content and devices you know the everyone is creating video",
    "start": "285289",
    "end": "292430"
  },
  {
    "text": "out there right with the kind of say the newcomers like Amazon and Netflix and",
    "start": "292430",
    "end": "298490"
  },
  {
    "text": "others you know creating their original content there's just so much content out there and people want to be able to",
    "start": "298490",
    "end": "305659"
  },
  {
    "text": "watch content anytime at any device basically on their own schedule nobody",
    "start": "305659",
    "end": "311479"
  },
  {
    "text": "is sitting there watching waiting for a particular you know time of the day to head to sort of go and watch their the",
    "start": "311479",
    "end": "319669"
  },
  {
    "text": "their their favorite content that they want to on the right-hand side on the screen you see this chart which shows",
    "start": "319669",
    "end": "326479"
  },
  {
    "text": "you the amount of dollars in billions spent you know across from 2013 all the",
    "start": "326479",
    "end": "335599"
  },
  {
    "text": "way to 2015 across these different companies and as you see you know the",
    "start": "335599",
    "end": "341120"
  },
  {
    "text": "amount of dollars spend is constantly increasing you know with respect to",
    "start": "341120",
    "end": "346370"
  },
  {
    "text": "these original content from the newcomers that are coming into this space and you know the device is",
    "start": "346370",
    "end": "352940"
  },
  {
    "text": "everywhere we know there is this you know streaming that people want to be able to as I said before you don't be",
    "start": "352940",
    "end": "358940"
  },
  {
    "text": "able to watch their content anytime on any devices and that kind of brings this",
    "start": "358940",
    "end": "364580"
  },
  {
    "text": "whole thing around OTT services that you know more than 49 million homes accessed at least one OTT",
    "start": "364580",
    "end": "371569"
  },
  {
    "text": "service right so it devices like fire TV and you know others out there smart TV",
    "start": "371569",
    "end": "377870"
  },
  {
    "text": "and all of that you see that you know you can watch your content basically at your own schedule but when we talk about",
    "start": "377870",
    "end": "384650"
  },
  {
    "text": "these OTT services as I said before in the very beginning you know it's not just about this streaming that I have my",
    "start": "384650",
    "end": "391849"
  },
  {
    "text": "content sitting down there and I could just simply deliver it right I have to cross say I have to QC it I have to package it",
    "start": "391849",
    "end": "398810"
  },
  {
    "text": "in many cases maybe do you know add insertions DRM basically depending on",
    "start": "398810",
    "end": "404060"
  },
  {
    "text": "what model you have with respect to your business the other term that we are",
    "start": "404060",
    "end": "410479"
  },
  {
    "text": "seeing is you know the companies want to be direct to the consumer or also more",
    "start": "410479",
    "end": "418009"
  },
  {
    "text": "relevant to the consumer right so in the old well old days of broadcast it was",
    "start": "418009",
    "end": "426350"
  },
  {
    "text": "hard to kind of say do personalized advertisement or kind of to the point content for specific audience whereas",
    "start": "426350",
    "end": "434500"
  },
  {
    "text": "streaming on specific devices really allows the content owner to do that",
    "start": "434500",
    "end": "440590"
  },
  {
    "text": "again what you see here these two charts you know the it talks about the pay TV",
    "start": "440590",
    "end": "446210"
  },
  {
    "text": "net changes by provider right so like that between telcos the cable providers",
    "start": "446210",
    "end": "451340"
  },
  {
    "text": "are satellite and streaming TV and as you can see the trend you know the streaming TV is kind of gaining whereas",
    "start": "451340",
    "end": "458030"
  },
  {
    "text": "all the other models are kind of say getting down the same goes from the ad",
    "start": "458030",
    "end": "463460"
  },
  {
    "text": "revenue perspective as well as you see the the red line over there on the chart",
    "start": "463460",
    "end": "468680"
  },
  {
    "text": "that really talks about the streaming via Internet right the ad revenue that",
    "start": "468680",
    "end": "473960"
  },
  {
    "text": "is spent with respect to the different channels and we see all these news all",
    "start": "473960",
    "end": "479360"
  },
  {
    "text": "over the place you know how all these major media and entertainment companies",
    "start": "479360",
    "end": "485720"
  },
  {
    "text": "are going straight to the to the consumer but that said OTT is very",
    "start": "485720",
    "end": "492110"
  },
  {
    "text": "complex this is actually somewhat of a simplified version of a realistic workflow based on the customer",
    "start": "492110",
    "end": "498710"
  },
  {
    "text": "requirements that we got right that basically in the middle you have these",
    "start": "498710",
    "end": "504250"
  },
  {
    "text": "infrastructure services like you have to store your content you have to ingest your content deliver your content via",
    "start": "504250",
    "end": "509960"
  },
  {
    "text": "the network you have to process your content over the compute and you have to store metadata or state with respect to",
    "start": "509960",
    "end": "516469"
  },
  {
    "text": "that workflow in the databases but on top of that there is a whole lot of",
    "start": "516469",
    "end": "521510"
  },
  {
    "text": "complex business logic that goes into play you know that includes all these",
    "start": "521510",
    "end": "526910"
  },
  {
    "text": "different things I'm not going to try to go through it but you know for those of you we've tried to do something similar kind",
    "start": "526910",
    "end": "532519"
  },
  {
    "text": "of get the complexity of this but what we see out of this is an opportunity to",
    "start": "532519",
    "end": "538339"
  },
  {
    "text": "help our customers get rid of this undifferentiated heavy lifting now at the basis of it I mean it is actually a",
    "start": "538339",
    "end": "545059"
  },
  {
    "text": "pretty niche business right so let's say it's specific to video it's specific to",
    "start": "545059",
    "end": "550420"
  },
  {
    "text": "streaming but it's it's generic enough",
    "start": "550420",
    "end": "555769"
  },
  {
    "text": "that we think that it could be very easily managed as you know as sort of",
    "start": "555769",
    "end": "562309"
  },
  {
    "text": "sales services from AWS site and it's not something that our consumers or our",
    "start": "562309",
    "end": "567350"
  },
  {
    "text": "customers should be spending a whole lot of time going out and build rather spend",
    "start": "567350",
    "end": "573049"
  },
  {
    "text": "time in terms of how you can improve the quality of the content when you go to your consumer right how you can make",
    "start": "573049",
    "end": "579980"
  },
  {
    "text": "sure you give them better personalization or recommendations specific to the content so kind of",
    "start": "579980",
    "end": "588170"
  },
  {
    "text": "taking it at a higher level right so taking the complex OTT workflow and kind",
    "start": "588170",
    "end": "593509"
  },
  {
    "text": "of defining it into a higher level basically you have your business plan which is composed of these sort of say",
    "start": "593509",
    "end": "600319"
  },
  {
    "text": "five steps where you're first ingesting or acquiring the content you",
    "start": "600319",
    "end": "605329"
  },
  {
    "text": "know that ingest an acquire acquisition of the content workflow itself has multiple different steps from say",
    "start": "605329",
    "end": "612019"
  },
  {
    "text": "quality colony check to you know metadata extraction and all of you know",
    "start": "612019",
    "end": "618230"
  },
  {
    "text": "a bunch of different things then you are storing or managing the content where basically the content lives somewhere",
    "start": "618230",
    "end": "624939"
  },
  {
    "text": "say in a Content Lake for example and then you have an asset management associated with it the next step is",
    "start": "624939",
    "end": "631669"
  },
  {
    "text": "processing the content where you're taking an input or the the mezzanine",
    "start": "631669",
    "end": "637100"
  },
  {
    "text": "asset you know or whatever format that you received and you're normalizing the",
    "start": "637100",
    "end": "642350"
  },
  {
    "text": "asset you are transcoding and encoding it and a bunch of different tasks there and then you are making it ready for",
    "start": "642350",
    "end": "650989"
  },
  {
    "text": "delivery basically staging it for delivery within your origin store and then you're",
    "start": "650989",
    "end": "656269"
  },
  {
    "text": "delivering it to your consumers but it does not end there right so once the consumers receive it then you want to",
    "start": "656269",
    "end": "662240"
  },
  {
    "text": "analyze is how your consumers are watching that particular piece of content and then",
    "start": "662240",
    "end": "668170"
  },
  {
    "text": "taking that data that logs back from your consumers watching the content back",
    "start": "668170",
    "end": "674300"
  },
  {
    "text": "into the workflow to improve the workflow and also to do personalization for that workflow now a lot of you also",
    "start": "674300",
    "end": "683360"
  },
  {
    "text": "heard about the whole AI and machine learning stuff in there so all of that",
    "start": "683360",
    "end": "688550"
  },
  {
    "text": "becomes very relevant in it because if you have your content close to all these",
    "start": "688550",
    "end": "694249"
  },
  {
    "text": "different services that are available to you from you know the AI or m/l perspective things like Amazon",
    "start": "694249",
    "end": "699369"
  },
  {
    "text": "recognition etc where you can then start extracting additional rich metadata within that content that gives you",
    "start": "699369",
    "end": "705860"
  },
  {
    "text": "additional monetization capabilities within this workflow so the idea being",
    "start": "705860",
    "end": "711350"
  },
  {
    "text": "that you want to store your content once and you want to deliver it anywhere and you want to do anything that you want",
    "start": "711350",
    "end": "717800"
  },
  {
    "text": "with it because in this entire workflow the hardest bit is moving that that",
    "start": "717800",
    "end": "725300"
  },
  {
    "text": "content all right because that's where the speed of light is the problematic",
    "start": "725300",
    "end": "730399"
  },
  {
    "text": "thing right because you know you have the the massive explosion with respect to the size of the content the content",
    "start": "730399",
    "end": "737420"
  },
  {
    "text": "files are growing big and you don't want to be in the business of say moving content back and forth rather you ingest",
    "start": "737420",
    "end": "744230"
  },
  {
    "text": "content at a place which is you know highly flexible scalable cost-effective",
    "start": "744230",
    "end": "749480"
  },
  {
    "text": "and not just that but rather gives you access to a lot of additional value-added services that you want to",
    "start": "749480",
    "end": "755629"
  },
  {
    "text": "add to your content hence the whole analogy err store wants deliver anywhere",
    "start": "755629",
    "end": "761290"
  },
  {
    "text": "so the aw stack for media streaming workflow you know again taking the the",
    "start": "761290",
    "end": "769209"
  },
  {
    "text": "simplified version from ingest to store process and deliver there's a lot of",
    "start": "769209",
    "end": "774350"
  },
  {
    "text": "different services that you will see that are at play in this entire glass-to-glass workflow which is",
    "start": "774350",
    "end": "780079"
  },
  {
    "text": "basically from camera to the device right so as you can see on the source",
    "start": "780079",
    "end": "786860"
  },
  {
    "text": "side there are even things like Amazon snowball that you can use for ingesting large-scale content at you know secure",
    "start": "786860",
    "end": "794870"
  },
  {
    "text": "and at scale you you know look at network capabilities like Direct Connect s3 transfer",
    "start": "794870",
    "end": "800960"
  },
  {
    "text": "acceleration Storage Gateway etc that allow you to really ingest file-based",
    "start": "800960",
    "end": "806600"
  },
  {
    "text": "content at scale AWS elemental also offers you",
    "start": "806600",
    "end": "811660"
  },
  {
    "text": "on-premises appliances that allow you to enable live streaming workflows directly",
    "start": "811660",
    "end": "818210"
  },
  {
    "text": "integrated into the cloud-based services that are offered like elemental media",
    "start": "818210",
    "end": "823850"
  },
  {
    "text": "store or elemental live etc on the storage side you'll see s3 Amazon s3",
    "start": "823850",
    "end": "830870"
  },
  {
    "text": "glacier for your kind of think of it as a Content Lake where your content rests",
    "start": "830870",
    "end": "836210"
  },
  {
    "text": "or resting place of your content you have EBS or EFS which is more like file",
    "start": "836210",
    "end": "841820"
  },
  {
    "text": "based for processing type of workflows we launched AWS elemental media store that we can talk about a bit more but",
    "start": "841820",
    "end": "848390"
  },
  {
    "text": "basically the idea here is for a highly scalable fully managed low latency",
    "start": "848390",
    "end": "855950"
  },
  {
    "text": "origin store for live content that's a double your sentimental media store on",
    "start": "855950",
    "end": "861830"
  },
  {
    "text": "the processing side you'll see ec2 PPC lambda all these things these constructs",
    "start": "861830",
    "end": "868220"
  },
  {
    "text": "if you will that we will talk about and then in order to store your state you have relational databases like RDS as a",
    "start": "868220",
    "end": "875360"
  },
  {
    "text": "service dynamodb etc and then machine learning we also launched three",
    "start": "875360",
    "end": "881060"
  },
  {
    "text": "additional services for media processing AWS elemental media can work that we'll talk about in much more detail here in a",
    "start": "881060",
    "end": "887870"
  },
  {
    "text": "little bit AWS elemental media live for live streaming workflows AWS elemental media",
    "start": "887870",
    "end": "894830"
  },
  {
    "text": "package for packaging of the content and then on the delivery side you know in addition to the CDN Amazon CloudFront",
    "start": "894830",
    "end": "902570"
  },
  {
    "text": "that we have there is AWS valve for security Application Firewall if you",
    "start": "902570",
    "end": "908690"
  },
  {
    "text": "will route 53 lambda at the edge that allows you to do a lot of these things",
    "start": "908690",
    "end": "914300"
  },
  {
    "text": "from security to real-time log collection from the player for example",
    "start": "914300",
    "end": "920360"
  },
  {
    "text": "or from the CDN side and then pushing it back and we also launched AWS elemental media tailor that allows you to do",
    "start": "920360",
    "end": "927440"
  },
  {
    "text": "manifest manipulation on the fly to be able to offer server-side ad",
    "start": "927440",
    "end": "933860"
  },
  {
    "text": "insertions you know for personalized server-side ads so as you can see you know this this entire end-to-end",
    "start": "933860",
    "end": "940220"
  },
  {
    "text": "workflow and we are talking about by the way just the delivery aspect of it right we're not even talking about the content",
    "start": "940220",
    "end": "946520"
  },
  {
    "text": "production aspect there is a whole lot more that is there to offer from AWS side on the content production but on",
    "start": "946520",
    "end": "953210"
  },
  {
    "text": "content delivery side of it there is a whole set of services that we will use as building blocks to build these sort",
    "start": "953210",
    "end": "959600"
  },
  {
    "text": "of a high level up the stack solutions such as the one we're going to talk",
    "start": "959600",
    "end": "964820"
  },
  {
    "text": "about and also on top of that there is the AWS partner solutions we work very closely with the areas partner solutions",
    "start": "964820",
    "end": "971420"
  },
  {
    "text": "whether that is DRM or watermarking or asset management systems etc to integrate these services very nicely you",
    "start": "971420",
    "end": "978860"
  },
  {
    "text": "know with the sort of a common household names that you guys are you know used to working with so the ones that are",
    "start": "978860",
    "end": "989110"
  },
  {
    "text": "launched are specifically these AWS elemental media services just to kind of",
    "start": "989110",
    "end": "994130"
  },
  {
    "text": "you know point the attention there what I'm gonna do here is I'm gonna talk",
    "start": "994130",
    "end": "999170"
  },
  {
    "text": "about very quickly about media convert what AWS elemental media converter does",
    "start": "999170",
    "end": "1004710"
  },
  {
    "text": "because it's very relevant in this workflow that we are going to be talking about so first of all it is available as",
    "start": "1004710",
    "end": "1012820"
  },
  {
    "text": "is service in the AWS console so you can just simply go to the AWS console and",
    "start": "1012820",
    "end": "1018160"
  },
  {
    "text": "you can your launched a media convert job you have access to professional-grade video features and",
    "start": "1018160",
    "end": "1024010"
  },
  {
    "text": "quality so very similar to what you would have access to in a professional-grade encoding appliance now you have it in",
    "start": "1024010",
    "end": "1030428"
  },
  {
    "text": "the cloud there is no software or hardware infrastructure to manage it's fully managed service so it's not like",
    "start": "1030429",
    "end": "1036850"
  },
  {
    "text": "you launch in instance and then you launch a software on top of it you deploy some code it's nothing like that",
    "start": "1036850",
    "end": "1041890"
  },
  {
    "text": "basically you have a video transcoding or encoding job that you can push into",
    "start": "1041890",
    "end": "1048400"
  },
  {
    "text": "media convert it automatically scales in response to variations in the incoming video volumes and as we'll talk about",
    "start": "1048400",
    "end": "1055480"
  },
  {
    "text": "the whole tech kind of say architecture there and then it has the ability to",
    "start": "1055480",
    "end": "1062020"
  },
  {
    "text": "manage capacity and all order in which jobs are processed right so like first in for first-in",
    "start": "1062020",
    "end": "1068240"
  },
  {
    "text": "first-out kind of a model and then it gives you a full fully rich API",
    "start": "1068240",
    "end": "1073550"
  },
  {
    "text": "interface to integrate with lambda server less functions in a complex workflow now this last bullet is exactly",
    "start": "1073550",
    "end": "1080660"
  },
  {
    "text": "what we're going to be showcasing today how you take media convert and then you put it in a pretty complex",
    "start": "1080660",
    "end": "1088130"
  },
  {
    "text": "you know end-to-end workflow so there are a few constructs with respect to",
    "start": "1088130",
    "end": "1094430"
  },
  {
    "text": "using AWS elemental media convert first of all there is a job which is the primary unit of work so you can specify",
    "start": "1094430",
    "end": "1102230"
  },
  {
    "text": "an input and an output so basically there's an input file which could be a mezzanine asset and there is an output",
    "start": "1102230",
    "end": "1108590"
  },
  {
    "text": "file which is a fully package ready to deliver asset or sort of a containerized",
    "start": "1108590",
    "end": "1115250"
  },
  {
    "text": "asset then you have an output preset which is is sort of set configuration",
    "start": "1115250",
    "end": "1121730"
  },
  {
    "text": "settings to create a single output so let's say if you want to create an mp4 output or if you want to create an HL s",
    "start": "1121730",
    "end": "1128570"
  },
  {
    "text": "output etc you specify that output preset you can talk about you can also",
    "start": "1128570",
    "end": "1133700"
  },
  {
    "text": "put the there are B this the specifications with respect to the",
    "start": "1133700",
    "end": "1139880"
  },
  {
    "text": "screen resolution etc within that and then there is a job template which is a",
    "start": "1139880",
    "end": "1146510"
  },
  {
    "text": "collection of commonly used job settings so there's a bunch of commonly used job",
    "start": "1146510",
    "end": "1151760"
  },
  {
    "text": "settings that are pre created canned that are ready for you to use and then",
    "start": "1151760",
    "end": "1156830"
  },
  {
    "text": "there is queues right so basically you will submit a job that will have an input file an input asset associated",
    "start": "1156830",
    "end": "1163310"
  },
  {
    "text": "with it and a preset which is the configuration of what you want to do to that asset and that goes in a queue and",
    "start": "1163310",
    "end": "1169970"
  },
  {
    "text": "then all these jobs are sequentially processed throughout the cube so you",
    "start": "1169970",
    "end": "1178130"
  },
  {
    "text": "know again taking this whole business plane one more time you know as you can see with these new elemental media",
    "start": "1178130",
    "end": "1183980"
  },
  {
    "text": "services they line very nicely to the different sort of save steps within this",
    "start": "1183980",
    "end": "1189920"
  },
  {
    "text": "business process so working backwards so this was a bit of an introduction about",
    "start": "1189920",
    "end": "1195590"
  },
  {
    "text": "AWS services what we be using and now let's talk about working backwards from the voice of the",
    "start": "1195590",
    "end": "1201259"
  },
  {
    "text": "customer so I want to introduce AWS answers how many people around here",
    "start": "1201259",
    "end": "1206330"
  },
  {
    "text": "actually know about AWS answers or have used a solution from AWS answers before",
    "start": "1206330",
    "end": "1211509"
  },
  {
    "text": "yeah good maybe a few so you know as I talked about the AWS services really are",
    "start": "1211509",
    "end": "1218480"
  },
  {
    "text": "sort of say building blocks right as I gave the kind of say that Lego analogy",
    "start": "1218480",
    "end": "1223519"
  },
  {
    "text": "right you can think of AWS answers as a Lego kit for a lack of a better term",
    "start": "1223519",
    "end": "1229789"
  },
  {
    "text": "right basically what it does is it takes these building blocks services that are out there and kind of gives you this",
    "start": "1229789",
    "end": "1236289"
  },
  {
    "text": "nice-looking Lego kit which you can simply deploy and gives you a solution",
    "start": "1236289",
    "end": "1242240"
  },
  {
    "text": "so as an example we have a few media specific solutions that we've done one",
    "start": "1242240",
    "end": "1249350"
  },
  {
    "text": "of them being live streaming solution right so this is specifically what one of the AWS answers solutions delivers so",
    "start": "1249350",
    "end": "1258110"
  },
  {
    "text": "basically it is a cloud formation template and Tom will demo it in a little bit that once you launch it will",
    "start": "1258110",
    "end": "1265249"
  },
  {
    "text": "actually go and launch this entire environment for you inside of your AWS account so what this is doing is",
    "start": "1265249",
    "end": "1272149"
  },
  {
    "text": "specifically taking a you know creating using the cloud formation to create an",
    "start": "1272149",
    "end": "1278450"
  },
  {
    "text": "AWS elemental cloud set up for air OBS element to live as well as AWS elemental",
    "start": "1278450",
    "end": "1285289"
  },
  {
    "text": "Delta and it spits out an end point for that AWS elemental cloud that you can",
    "start": "1285289",
    "end": "1291919"
  },
  {
    "text": "use to start pointing your source video stream into or your live stream into",
    "start": "1291919",
    "end": "1297200"
  },
  {
    "text": "once that stream comes in and it's processed by live and Delta packaged by Delta it actually spits out the",
    "start": "1297200",
    "end": "1304519"
  },
  {
    "text": "underlying output that you have requested through your AWS elemental cloud settings and then there is a whole",
    "start": "1304519",
    "end": "1310999"
  },
  {
    "text": "engine X cache cluster in front of it to kind of give you that H a and scalability in an auto scale group and",
    "start": "1310999",
    "end": "1318889"
  },
  {
    "text": "then through the elastic load balancing it goes out the cloud front into the devices so the idea being that as a",
    "start": "1318889",
    "end": "1325850"
  },
  {
    "text": "customer you are able to go into it answers and be able to launch this sort of safe solution very very quickly and",
    "start": "1325850",
    "end": "1333249"
  },
  {
    "text": "very easily and you know you have a live streaming solution which is fully a che",
    "start": "1333249",
    "end": "1340809"
  },
  {
    "text": "as well as scalable and also gives you all the cloud watch laws etc with",
    "start": "1340809",
    "end": "1346209"
  },
  {
    "text": "respect to it and more importantly flexible that is configurable based on your needs so we kind of if you look at",
    "start": "1346209",
    "end": "1353529"
  },
  {
    "text": "the different AWS elemental services we launch right from this particular architecture to this it simplifies it",
    "start": "1353529",
    "end": "1360639"
  },
  {
    "text": "even further right so in this particular case you had to think about hey I have to launch two different live nodes in",
    "start": "1360639",
    "end": "1367599"
  },
  {
    "text": "order to do an H a or the template was doing that for you whereas now with elemental media live you just simply you",
    "start": "1367599",
    "end": "1375969"
  },
  {
    "text": "know create a channel within life and it is fully H a so the H a is kind of say built into that similarly you know the",
    "start": "1375969",
    "end": "1384399"
  },
  {
    "text": "Delta or the elemental media package will work the same way media tailor is fully managed as well so if you want to",
    "start": "1384399",
    "end": "1390309"
  },
  {
    "text": "do ad insertions etc so this kind of makes the workflow very very easy the",
    "start": "1390309",
    "end": "1397179"
  },
  {
    "text": "second solution we're going to talk about is file based streaming solution are you going to kind of focus on that because that is where the whole",
    "start": "1397179",
    "end": "1403419"
  },
  {
    "text": "complexity around the supply chain comes into play because you're ingesting all these incoming files and then you know",
    "start": "1403419",
    "end": "1410109"
  },
  {
    "text": "you're running the supply chain process and then finally the delivery of it right so basically the way we look at it",
    "start": "1410109",
    "end": "1416739"
  },
  {
    "text": "is a strategic service development right so we I mean you start you can start with the lift and shift which is you can",
    "start": "1416739",
    "end": "1422169"
  },
  {
    "text": "build infrastructure move the platform automate then the second step is optimization of it where you now take",
    "start": "1422169",
    "end": "1429099"
  },
  {
    "text": "this monolithic application you transition these services integrate",
    "start": "1429099",
    "end": "1434109"
  },
  {
    "text": "monitoring to it as well as abstraction of data but finally you know the the end",
    "start": "1434109",
    "end": "1440739"
  },
  {
    "text": "product of this is actual transformation so what I mean you could do a lift and shift very very quickly the actual or",
    "start": "1440739",
    "end": "1447759"
  },
  {
    "text": "the most important thing is the transformation how can we make sure that it is actually using the best practices",
    "start": "1447759",
    "end": "1454059"
  },
  {
    "text": "that we provide our customers as a solution how can we say that this",
    "start": "1454059",
    "end": "1460419"
  },
  {
    "text": "solution is actually you know be Val architect solution for our customers to be able to use in this",
    "start": "1460419",
    "end": "1466800"
  },
  {
    "text": "particular context right but what you will see is that for every single progressive step we get better and",
    "start": "1466800",
    "end": "1472890"
  },
  {
    "text": "better with respect to that solution and as a result the solution that you see is",
    "start": "1472890",
    "end": "1477920"
  },
  {
    "text": "best suitable for your needs so as an example right so the first step you know",
    "start": "1477920",
    "end": "1484770"
  },
  {
    "text": "you look at higher utilization faster provisioning speed how do we do that by appropriately using the the ec2",
    "start": "1484770",
    "end": "1492780"
  },
  {
    "text": "instances for example the right spec and whatever goes in there putting in disaster recovery you know improved",
    "start": "1492780",
    "end": "1499920"
  },
  {
    "text": "uptime etc similarly trading capex for op X more scale you know it's elastic",
    "start": "1499920",
    "end": "1507030"
  },
  {
    "text": "resources all the different benefits that the cloud provides you but there is still limitations right you're still in",
    "start": "1507030",
    "end": "1513840"
  },
  {
    "text": "the business of same managing these compute instances or servers if you will",
    "start": "1513840",
    "end": "1519330"
  },
  {
    "text": "right you still have to look about think about capacity utilization size availability being able to run",
    "start": "1519330",
    "end": "1525480"
  },
  {
    "text": "intermittent intermittent jobs etc so for that you know there is the whole",
    "start": "1525480",
    "end": "1532290"
  },
  {
    "text": "concept of serverless that's where it comes into play because what you're gonna see is in these file based",
    "start": "1532290",
    "end": "1537870"
  },
  {
    "text": "workflows right it's all what is it it's a batch job a complete batch job",
    "start": "1537870",
    "end": "1543870"
  },
  {
    "text": "end-to-end workflow where different tasks could be run as individual batch jobs and that's where lambda or server",
    "start": "1543870",
    "end": "1552060"
  },
  {
    "text": "less is very sort of say appropriate with respect to it why because it's very",
    "start": "1552060",
    "end": "1557910"
  },
  {
    "text": "low touch it's very sort of say hi developer productivity because you can",
    "start": "1557910",
    "end": "1562980"
  },
  {
    "text": "simply write you know few lines of code in order to do a complex function that",
    "start": "1562980",
    "end": "1570090"
  },
  {
    "text": "could be running say an encode a transcode a package etcetera or a job with respect to that video asset right",
    "start": "1570090",
    "end": "1577050"
  },
  {
    "text": "and basically again you're not sort of provisioning any servers or you're not",
    "start": "1577050",
    "end": "1582960"
  },
  {
    "text": "managing any servers you're scaling with the usage you don't have to worry about hey I have an auto scale group",
    "start": "1582960",
    "end": "1589910"
  },
  {
    "text": "I am managing a non-paying you know for ec2 instances etc you're never paying",
    "start": "1589910",
    "end": "1596060"
  },
  {
    "text": "for idle basically and the availability and fault tolerance is built-in because",
    "start": "1596060",
    "end": "1601640"
  },
  {
    "text": "you're looking at a higher level sort of say higher level spec there instead of",
    "start": "1601640",
    "end": "1610370"
  },
  {
    "text": "kind of going deeper down with respect to baseline services so with respect to server less I mean there are multiple",
    "start": "1610370",
    "end": "1617120"
  },
  {
    "text": "different patterns out there that you can use server less and this talk specifically is not about kind of",
    "start": "1617120",
    "end": "1622460"
  },
  {
    "text": "educating you about several as I'm sure you know if you're interested in serving or less you've kind of heard about many of these patterns or tried these",
    "start": "1622460",
    "end": "1628550"
  },
  {
    "text": "patterns before but just a very quick refresher I mean obviously you can coordinate by method call meaning you",
    "start": "1628550",
    "end": "1634490"
  },
  {
    "text": "have a you know a function that needs to be performed on a particular asset you can call a function that's a serverless",
    "start": "1634490",
    "end": "1640730"
  },
  {
    "text": "function goes does its thing and then you're done the other piece is basically you are coordinating by DZ chain method",
    "start": "1640730",
    "end": "1649130"
  },
  {
    "text": "or function chaining method right so basically an asset came in first step I'm gonna run QC the next step after QC",
    "start": "1649130",
    "end": "1656000"
  },
  {
    "text": "I'm gonna process after process I'm going to package after package I'm gonna put it in the origin store and then I'm",
    "start": "1656000",
    "end": "1661640"
  },
  {
    "text": "gonna deliver so each one of these functions could be sort of state lambda or serverless functions that are say",
    "start": "1661640",
    "end": "1667310"
  },
  {
    "text": "daisy chain together then you can coordinate by database basically where after every single process you are",
    "start": "1667310",
    "end": "1674450"
  },
  {
    "text": "pushing the stain into the database and then the next process wakes up it picks",
    "start": "1674450",
    "end": "1679910"
  },
  {
    "text": "it up and then does its thing and so on and so forth or you can coordinate by",
    "start": "1679910",
    "end": "1685010"
  },
  {
    "text": "queues I talked about media convert a little bit in depth but basically the idea being that's where you have the",
    "start": "1685010",
    "end": "1691790"
  },
  {
    "text": "entire queue and that is a fully managed process that works within its own queue",
    "start": "1691790",
    "end": "1697130"
  },
  {
    "text": "but kind of very similar idea there so the way the aw step functions work and",
    "start": "1697130",
    "end": "1704330"
  },
  {
    "text": "again a very high-level kind of idea here you define a JSON right and then",
    "start": "1704330",
    "end": "1709580"
  },
  {
    "text": "you are able to visualize it in console so the idea being that complex workflow",
    "start": "1709580",
    "end": "1715040"
  },
  {
    "text": "that I started with right that whole business process you can actually view it inside the console and then you can",
    "start": "1715040",
    "end": "1721430"
  },
  {
    "text": "drill into each one of these tasks to kind of look at what is the underlying code look like",
    "start": "1721430",
    "end": "1726770"
  },
  {
    "text": "right can I customize it can I change it etc you can further go on and monitor",
    "start": "1726770",
    "end": "1732140"
  },
  {
    "text": "the executions what is the state of each one of these processes where is my",
    "start": "1732140",
    "end": "1737750"
  },
  {
    "text": "process either you know failed if I've built in some error logic in there etc but that's the kind of idea you can go",
    "start": "1737750",
    "end": "1743899"
  },
  {
    "text": "in the console and try out if you haven't yet so video-on-demand workflows",
    "start": "1743899",
    "end": "1751039"
  },
  {
    "text": "on AWS this is specifically the architecture that was built in that AWS",
    "start": "1751039",
    "end": "1758419"
  },
  {
    "text": "solution for for the file based workflow so just to quickly walk through it you have a source video that comes into s3",
    "start": "1758419",
    "end": "1765350"
  },
  {
    "text": "as three opens or turns in a notification that then triggers a",
    "start": "1765350",
    "end": "1771140"
  },
  {
    "text": "workflow which is the ingest step function now that ingest step function is they're gonna have a bunch of things that I'll talk about then once that",
    "start": "1771140",
    "end": "1777710"
  },
  {
    "text": "ingest step function is done it's gonna trigger the process step function so remember the pattern I talked about",
    "start": "1777710",
    "end": "1783679"
  },
  {
    "text": "daisy chaining is of one function calling another function right so that's where the ingest function is calling the",
    "start": "1783679",
    "end": "1789770"
  },
  {
    "text": "process function the process function does its thing and there's a bunch of steps of it in that that then through",
    "start": "1789770",
    "end": "1795740"
  },
  {
    "text": "lambda calls aw elemental media can work that does its thing it actually",
    "start": "1795740",
    "end": "1801020"
  },
  {
    "text": "generates an mp4 as and as well as an HLS output that then publishes or calls",
    "start": "1801020",
    "end": "1806480"
  },
  {
    "text": "the publish step function via a notification from the elemental media can convert and then the publish step",
    "start": "1806480",
    "end": "1813649"
  },
  {
    "text": "function makes these two outputs available in specific s3 locations and",
    "start": "1813649",
    "end": "1820610"
  },
  {
    "text": "then for the HLS you're going out and delivering it through Amazon CloudFront so throughout this process what you're",
    "start": "1820610",
    "end": "1826580"
  },
  {
    "text": "gonna see is it's all done through lambda a bunch of different lambda functions and the state is saved over",
    "start": "1826580",
    "end": "1833149"
  },
  {
    "text": "dynamo DB and the notification sent out via Amazon has an S so the idea being",
    "start": "1833149",
    "end": "1838429"
  },
  {
    "text": "when you go in there and you deploy this template this environment is set up in",
    "start": "1838429",
    "end": "1843440"
  },
  {
    "text": "your AWS account you will have a bucket where you can start putting in files and you can run through this workflow very",
    "start": "1843440",
    "end": "1849500"
  },
  {
    "text": "quickly so kind of quickly again walking through some of these steps functions so",
    "start": "1849500",
    "end": "1854600"
  },
  {
    "text": "the ingest step function what it does is it's when you when it starts basically it starts by a notification that is",
    "start": "1854600",
    "end": "1861980"
  },
  {
    "text": "triggered by the s3 bucket so as three bucket will have notifications enabled anytime of file lands in s3 it will",
    "start": "1861980",
    "end": "1868700"
  },
  {
    "text": "trigger this workflow start validated source run media info to make sure that",
    "start": "1868700",
    "end": "1873920"
  },
  {
    "text": "this is a valid media file and then kind of say compare it with the metadata file",
    "start": "1873920",
    "end": "1880430"
  },
  {
    "text": "then create an entry or port the state in dynamodb Center or notification to the process function the process",
    "start": "1880430",
    "end": "1887450"
  },
  {
    "text": "function comes in it profiles the content or media does the encoding bit",
    "start": "1887450",
    "end": "1892550"
  },
  {
    "text": "then puts the step function or actually stayed into DynamoDB and then ends the",
    "start": "1892550",
    "end": "1899120"
  },
  {
    "text": "function and then you have the publish function again that validates the outputs from the process function write",
    "start": "1899120",
    "end": "1905750"
  },
  {
    "text": "that the outputs that were generated are correct puts the state in DynamoDB and",
    "start": "1905750",
    "end": "1911330"
  },
  {
    "text": "then if you want to archive say the mp4 output or the the original and mezzanine",
    "start": "1911330",
    "end": "1916820"
  },
  {
    "text": "asset then it we can actually push it into glacier and then publish it that is make it available ready for your or TT",
    "start": "1916820",
    "end": "1923990"
  },
  {
    "text": "application for for streaming right so then you can actually publish that content within your Apple app that it's",
    "start": "1923990",
    "end": "1930950"
  },
  {
    "text": "now available for your users to be able to go and view now one of the other key features there is the Amazon Cloud firm",
    "start": "1930950",
    "end": "1936680"
  },
  {
    "text": "so obviously you're gonna need a highly scalable you know CDN in order to",
    "start": "1936680",
    "end": "1945110"
  },
  {
    "text": "deliver that know as I said before you know all of these services work hand-in-hand as different Lego blocks",
    "start": "1945110",
    "end": "1951530"
  },
  {
    "text": "right you can use Amazon CloudFront as a as an option within your streaming",
    "start": "1951530",
    "end": "1957590"
  },
  {
    "text": "workflow so a cloud front today is a major CDN it has over a hundred points",
    "start": "1957590",
    "end": "1963440"
  },
  {
    "text": "of presence 88 cloud for education 11 regional edge caches across 50 cities",
    "start": "1963440",
    "end": "1969710"
  },
  {
    "text": "and 23 different countries you can optimize cache there's a lot of different options there in order to",
    "start": "1969710",
    "end": "1975740"
  },
  {
    "text": "optimize it you can whitelist query strings and cookies for example as well as there is a reserve capacity pricing",
    "start": "1975740",
    "end": "1983090"
  },
  {
    "text": "you know so if you have say a large-scale application that you're deploying or large event that you want to stream using CloudFront and you",
    "start": "1983090",
    "end": "1990100"
  },
  {
    "text": "pricing through that I quickly go through this there are some cool features within CloudFront but I want to",
    "start": "1990100",
    "end": "1996910"
  },
  {
    "text": "make sure that we have enough time for the demo oh but this here specifically talks about cloud for an access logs and",
    "start": "1996910",
    "end": "2003179"
  },
  {
    "text": "how you can use it you know to look at how your users are actually accessing",
    "start": "2003179",
    "end": "2009210"
  },
  {
    "text": "your content or viewing the streams and report back on that so with that I'll pass it over to Tom to talk about how we",
    "start": "2009210",
    "end": "2017070"
  },
  {
    "text": "built a solution demo the solution and then how this solution evolved based on the voice of the customer hi everybody",
    "start": "2017070",
    "end": "2028760"
  },
  {
    "text": "so in this next section you're going to dive into the solution that we built I'm",
    "start": "2028760",
    "end": "2035370"
  },
  {
    "text": "going to look at version 1 which was our",
    "start": "2035370",
    "end": "2039590"
  },
  {
    "text": "look at the customer feedback that we got and then look at version 2 which is",
    "start": "2042890",
    "end": "2048300"
  },
  {
    "text": "the current published version of the solution so for MVP we just wanted to",
    "start": "2048300",
    "end": "2055980"
  },
  {
    "text": "build something simple get it out there for our customers we looked at just",
    "start": "2055980",
    "end": "2061770"
  },
  {
    "text": "building a very simple process where we had a single input with multiple outputs",
    "start": "2061770",
    "end": "2067250"
  },
  {
    "text": "we built seven encoding profiles or presets for elastic transcoder for mp4",
    "start": "2067250",
    "end": "2074340"
  },
  {
    "text": "and HLS and those were based on the Apple tech notes from 2016 which you can",
    "start": "2074340",
    "end": "2081090"
  },
  {
    "text": "see up here and these were their recommendations for HLS streaming it's",
    "start": "2081090",
    "end": "2087179"
  },
  {
    "text": "part of the process we wanted to demonstrate how to make in encoding decisions we wanted to deliver that HLS",
    "start": "2087179",
    "end": "2095368"
  },
  {
    "text": "content through cloud front and then we have SNS for notifications and we wanted",
    "start": "2095369",
    "end": "2102330"
  },
  {
    "text": "to capture all the information coming out of the work flow into dynamo DB so",
    "start": "2102330",
    "end": "2108690"
  },
  {
    "text": "this was the original architecture very similar to the current version that we",
    "start": "2108690",
    "end": "2115380"
  },
  {
    "text": "had we've got our s3 for source and destination we're using step functions",
    "start": "2115380",
    "end": "2120810"
  },
  {
    "text": "as that orchestration layer for our ingest process and our publishing process and then we're in the original",
    "start": "2120810",
    "end": "2128100"
  },
  {
    "text": "version we really using elastic transcoder for that encoding so what",
    "start": "2128100",
    "end": "2134430"
  },
  {
    "text": "I'll do now is I'm going to switch over and actually take a look at that version",
    "start": "2134430",
    "end": "2141530"
  },
  {
    "text": "as you mentioned earlier this is a ws answers this is where all our solutions",
    "start": "2141530",
    "end": "2146730"
  },
  {
    "text": "are published if you look under the media and entertainment section you'll",
    "start": "2146730",
    "end": "2153240"
  },
  {
    "text": "find our three published solutions that we have to date and then here you'll find the video on-demand solution",
    "start": "2153240",
    "end": "2161540"
  },
  {
    "text": "there's a technical brief about the solution and then there is a",
    "start": "2161540",
    "end": "2167150"
  },
  {
    "text": "implementation guide with every solution that we publish and if we go to the deploy section here you'll get",
    "start": "2167150",
    "end": "2173550"
  },
  {
    "text": "step-by-step instructions on how to deploy it and a link to a cloud formation template they'll actually",
    "start": "2173550",
    "end": "2180630"
  },
  {
    "text": "launch that infrastructure in your account within a couple of minutes so I've",
    "start": "2180630",
    "end": "2187230"
  },
  {
    "text": "actually deployed that already into my account and I'm just going to walk",
    "start": "2187230",
    "end": "2193800"
  },
  {
    "text": "through show you how the workflow works",
    "start": "2193800",
    "end": "2198830"
  },
  {
    "text": "so here I have my sauce bucket and I have uploaded a video up into this",
    "start": "2198830",
    "end": "2205530"
  },
  {
    "text": "source bucket does everybody know the big bunny video yeah is everyone sick of watching the",
    "start": "2205530",
    "end": "2211230"
  },
  {
    "text": "big bunny video yeah we won't watch it I promise so here",
    "start": "2211230",
    "end": "2216750"
  },
  {
    "text": "yeah I've uploaded a video if we take a look at the properties on this s3 bucket",
    "start": "2216750",
    "end": "2222420"
  },
  {
    "text": "we have a series of notifications set up here you see that these are set up for",
    "start": "2222420",
    "end": "2227780"
  },
  {
    "text": "different file extensions video file extensions and if we look at that event",
    "start": "2227780",
    "end": "2232920"
  },
  {
    "text": "what we're doing is we are triggering a",
    "start": "2232920",
    "end": "2239460"
  },
  {
    "text": "lambda function on a object crate so every time a file",
    "start": "2239460",
    "end": "2247050"
  },
  {
    "text": "is uploaded to this bucket it's going to trigger this lambda function which is our ingest execute this is just a simple",
    "start": "2247050",
    "end": "2254070"
  },
  {
    "text": "little lambda function what it does is it takes the event data it gets the bucket and the key from that source",
    "start": "2254070",
    "end": "2260280"
  },
  {
    "text": "event it generates a unique identifier we do it that we're going to use to",
    "start": "2260280",
    "end": "2265980"
  },
  {
    "text": "track our assets through the workflow and then it triggers our ingest step",
    "start": "2265980",
    "end": "2272339"
  },
  {
    "text": "functions so we take a look at the ingest process we'll see if we look at",
    "start": "2272339",
    "end": "2280920"
  },
  {
    "text": "the inputs there's our gooood there's our unique identifier we're going to use that as",
    "start": "2280920",
    "end": "2286589"
  },
  {
    "text": "the primary key in our DynamoDB table we have the source file and we have the",
    "start": "2286589",
    "end": "2293040"
  },
  {
    "text": "bucket first step very simply just writes out that information to our",
    "start": "2293040",
    "end": "2298710"
  },
  {
    "text": "dynamo table so we've got our initial entry the next step is we're running",
    "start": "2298710",
    "end": "2303960"
  },
  {
    "text": "meteor info which is an open source software that allow you to extract metadata from your source files and",
    "start": "2303960",
    "end": "2312540"
  },
  {
    "text": "we're taking that information we're writing that out to dynamodb next step",
    "start": "2312540",
    "end": "2318510"
  },
  {
    "text": "is the profiler this was our encoding decision just for the MVP it's very very",
    "start": "2318510",
    "end": "2325920"
  },
  {
    "text": "simple decision process what we did is we took that metadata that we got from",
    "start": "2325920",
    "end": "2331830"
  },
  {
    "text": "the previous step and we're getting the height of the video and then we're using that height to set a encoding profile",
    "start": "2331830",
    "end": "2339359"
  },
  {
    "text": "for our source file so in this case it was a 1080p video so that that variable",
    "start": "2339359",
    "end": "2346050"
  },
  {
    "text": "then tells our to encoding steps to use the 1080 profile in elastic transcoder",
    "start": "2346050",
    "end": "2352040"
  },
  {
    "text": "so for M before we're creating just a single 1080p video for HLS we're",
    "start": "2352040",
    "end": "2357869"
  },
  {
    "text": "creating 1080 write down through those certain presets that we created and then",
    "start": "2357869",
    "end": "2363570"
  },
  {
    "text": "the very last step is just a quick update so we're setting the status in dynamo to say that we've ingested the",
    "start": "2363570",
    "end": "2370680"
  },
  {
    "text": "file and we're sending out an SNS notification to the administrators say file has been",
    "start": "2370680",
    "end": "2376230"
  },
  {
    "text": "successfully ingested so elastic transcoder does its thing we get two",
    "start": "2376230",
    "end": "2384240"
  },
  {
    "text": "outputs from that process and elastic transcoder was configured to send SMS",
    "start": "2384240",
    "end": "2390920"
  },
  {
    "text": "notifications out on a complete completion of the job and similar to our s3 event we have a simple lambda",
    "start": "2390920",
    "end": "2398009"
  },
  {
    "text": "function that's hooked up to that notification and actually triggers the publishing process for the publishing",
    "start": "2398009",
    "end": "2406559"
  },
  {
    "text": "steps in MVP because we're losing elastic transcoder and we wanted our content to be in two separate buckets so",
    "start": "2406559",
    "end": "2413460"
  },
  {
    "text": "NP 4 + 1 + H less than another we actually had to submit two separate jobs to two different pipelines so that for",
    "start": "2413460",
    "end": "2420359"
  },
  {
    "text": "that reason the publishing process actually runs twice because we're getting tuner notifications out the",
    "start": "2420359",
    "end": "2425430"
  },
  {
    "text": "system so the very first step for publishing process gets that output from",
    "start": "2425430",
    "end": "2433170"
  },
  {
    "text": "SNS figures out whether it's the mp4 or the HLS content that's completed and",
    "start": "2433170",
    "end": "2438710"
  },
  {
    "text": "then passes that information down to the next step where we have a publishing",
    "start": "2438710",
    "end": "2444420"
  },
  {
    "text": "choice now this there's no lambda behind this particular step it's purely just",
    "start": "2444420",
    "end": "2450690"
  },
  {
    "text": "state machine logic so in step functions I can set up this choice state where I",
    "start": "2450690",
    "end": "2457589"
  },
  {
    "text": "am looking at this variable preset and if there's string value is mp4 output",
    "start": "2457589",
    "end": "2464099"
  },
  {
    "text": "we're going to go down the mp4 route if its HLS we're going to go down the HLS",
    "start": "2464099",
    "end": "2469230"
  },
  {
    "text": "route so this is a way that we can use step functions to make a choice and then",
    "start": "2469230",
    "end": "2476009"
  },
  {
    "text": "for the for the last piece of the process it was an mp4 file we were taking we're reusing that media media",
    "start": "2476009",
    "end": "2483480"
  },
  {
    "text": "info lambda function generating some metadata about our mp4 file and then",
    "start": "2483480",
    "end": "2488940"
  },
  {
    "text": "creating a metadata file to sit next to that mp4 output for HLS very simply",
    "start": "2488940",
    "end": "2495299"
  },
  {
    "text": "we're just taking the outputs from ATS and generating that cloud front URL for",
    "start": "2495299",
    "end": "2501450"
  },
  {
    "text": "the HLS content once both both lots of content have been",
    "start": "2501450",
    "end": "2507330"
  },
  {
    "text": "processed within setting the status in our dynamo table to complete and sending",
    "start": "2507330",
    "end": "2513030"
  },
  {
    "text": "out an SNS notification with the details of the outputs from the process if I",
    "start": "2513030",
    "end": "2519660"
  },
  {
    "text": "take you to the dynamo table you can",
    "start": "2519660",
    "end": "2525510"
  },
  {
    "text": "then see that we have all of that information that was we got through the",
    "start": "2525510",
    "end": "2531720"
  },
  {
    "text": "process we've stored in dynamo so we have our link to the cloud front distribution we've got our metadata for",
    "start": "2531720",
    "end": "2539400"
  },
  {
    "text": "media files we've got our details on the",
    "start": "2539400",
    "end": "2545130"
  },
  {
    "text": "buckets and details on the outputted files and the time that it took to complete so that was that was MVP that",
    "start": "2545130",
    "end": "2556530"
  },
  {
    "text": "was the first version very very simple sort of workflow but it demonstrates how",
    "start": "2556530",
    "end": "2561840"
  },
  {
    "text": "we could use these services to create this process we published this on AWS",
    "start": "2561840",
    "end": "2569130"
  },
  {
    "text": "answers we've got it out and started talking to our customers about get some to get some feedback there are a lot",
    "start": "2569130",
    "end": "2576840"
  },
  {
    "text": "lots of positives people saw the benefits of using step functions as that",
    "start": "2576840",
    "end": "2582540"
  },
  {
    "text": "orchestration layer across the workflow how you could leverage lambda for those individual steps there's a couple of",
    "start": "2582540",
    "end": "2590160"
  },
  {
    "text": "things that came up from that feedback and that's what I'm going to look at in this next section so for version two the",
    "start": "2590160",
    "end": "2599430"
  },
  {
    "text": "these are the sort of three main areas that we focused on first piece I want to talk about is decoupling the workflow",
    "start": "2599430",
    "end": "2606800"
  },
  {
    "text": "and what I mean by that is this is if we look a little more detail on that media",
    "start": "2606800",
    "end": "2612510"
  },
  {
    "text": "info step one of the cousins that we spoke to loved the solution was exactly",
    "start": "2612510",
    "end": "2618810"
  },
  {
    "text": "the type of thing they were looking for but they already had their own database service that we they were using so the",
    "start": "2618810",
    "end": "2624060"
  },
  {
    "text": "question was how do I take your code and make this fit with my own database",
    "start": "2624060",
    "end": "2629359"
  },
  {
    "text": "and that's when I realized we've kind of made the wrong decision in the early stages you look at this this code here",
    "start": "2629359",
    "end": "2636619"
  },
  {
    "text": "what we're doing is we're creating a signed URL for the object in s3 running",
    "start": "2636619",
    "end": "2643039"
  },
  {
    "text": "media info on it so we're not having to download the file we can just run it directly from from s3 getting that",
    "start": "2643039",
    "end": "2649219"
  },
  {
    "text": "metadata and then calling dynamo and writing out that information to our dynamo table similarly our similarly",
    "start": "2649219",
    "end": "2658579"
  },
  {
    "text": "with the encoding steps we're creating that elastic transcoder job getting the job ID back and then riding out that",
    "start": "2658579",
    "end": "2665209"
  },
  {
    "text": "information to dynamo this is when I realized that both customer wanted to take this solution and build on top of",
    "start": "2665209",
    "end": "2671690"
  },
  {
    "text": "it they'd actually have to rewrite every single one of those lambda functions to use a different dynamo different",
    "start": "2671690",
    "end": "2677630"
  },
  {
    "text": "database service and that wasn't what we were looking for we wanted something with really decoupled we want it to be",
    "start": "2677630",
    "end": "2684079"
  },
  {
    "text": "easily customized so that you can move these steps around you can add stuff",
    "start": "2684079",
    "end": "2689089"
  },
  {
    "text": "take away stuff and that isn't quite what we've got here with this first version so what we did is we took a look",
    "start": "2689089",
    "end": "2698479"
  },
  {
    "text": "at the relook at step functions we the first thing we did is we actually split",
    "start": "2698479",
    "end": "2704660"
  },
  {
    "text": "out that first step function into two so now we have an ingest process and a",
    "start": "2704660",
    "end": "2710049"
  },
  {
    "text": "processing workflow and we've changed the way that the steps are working so",
    "start": "2710049",
    "end": "2716420"
  },
  {
    "text": "here is the updated media info step and rather than writing out to dynamo running media info on our file and then",
    "start": "2716420",
    "end": "2724069"
  },
  {
    "text": "we're taking that output and just adding it to the event data that we got at the start of the process and so each step",
    "start": "2724069",
    "end": "2731259"
  },
  {
    "text": "performs its task and then just adds to that event data and then when it's",
    "start": "2731259",
    "end": "2736940"
  },
  {
    "text": "applicable and when we need to we can call on a separate dynamo function to",
    "start": "2736940",
    "end": "2741979"
  },
  {
    "text": "take that information and write it into our dynamo table again with the processing step functions and this is",
    "start": "2741979",
    "end": "2750499"
  },
  {
    "text": "the updated version using media convert the same thing creating an encoding job getting back the date of the job ID",
    "start": "2750499",
    "end": "2758540"
  },
  {
    "text": "adding it to the event data and then calling our dynamo function to write",
    "start": "2758540",
    "end": "2763850"
  },
  {
    "text": "that information back into our database so now for that customer who wants to use their own database service all they",
    "start": "2763850",
    "end": "2770420"
  },
  {
    "text": "actually have to do is replace that one lambda function to write information out to their own database service and they",
    "start": "2770420",
    "end": "2777680"
  },
  {
    "text": "can use the rest of the workflow as it is and then other nice piece about that",
    "start": "2777680",
    "end": "2782750"
  },
  {
    "text": "is that the dynamo call here is actually the same lambda function that we had in",
    "start": "2782750",
    "end": "2788360"
  },
  {
    "text": "our ingest step functions so now we have reusable code we have a we have a land",
    "start": "2788360",
    "end": "2794510"
  },
  {
    "text": "of function that we can drop into our step functions when and if we need it",
    "start": "2794510",
    "end": "2800110"
  },
  {
    "text": "and we've got a much more decoupled micro-service kind of driven workflow so",
    "start": "2800110",
    "end": "2808850"
  },
  {
    "text": "that that was the first piece second piece was better error handling was one",
    "start": "2808850",
    "end": "2815660"
  },
  {
    "text": "of the some of the feedback we got from customers so if I if we had take a look",
    "start": "2815660",
    "end": "2821480"
  },
  {
    "text": "a closer look at version one set up some very very basic error handling elastic",
    "start": "2821480",
    "end": "2831020"
  },
  {
    "text": "transcoder in the same way it sent SMS notifications for completed jobs it will send out SNS notifications if there are",
    "start": "2831020",
    "end": "2837260"
  },
  {
    "text": "only errors so we're capturing that and it's an essence sending it out to the administrator with step functions you",
    "start": "2837260",
    "end": "2843950"
  },
  {
    "text": "can set up cloud watch alarms that will monitor those step functions and if there are any errors that again can",
    "start": "2843950",
    "end": "2850610"
  },
  {
    "text": "trigger an SNS notification and we're sending out a notice to say that something failed and then on the right",
    "start": "2850610",
    "end": "2857450"
  },
  {
    "text": "there you'll see this is the as an example of the cloud watch alarm so the",
    "start": "2857450",
    "end": "2863480"
  },
  {
    "text": "two things that came out of this were the firstly that error message is not",
    "start": "2863480",
    "end": "2869300"
  },
  {
    "text": "particularly detailed it doesn't tell me what asset our failed doesn't tell me which step is bad and we wanted to show",
    "start": "2869300",
    "end": "2876530"
  },
  {
    "text": "something a little more detail and more importantly we're not capturing this in our Dynamo table so for the workflow",
    "start": "2876530",
    "end": "2885380"
  },
  {
    "text": "we're capturing state so we have a state of ingest and",
    "start": "2885380",
    "end": "2890870"
  },
  {
    "text": "holding completed but we wanted to get that if if and when there are errors we wanted to get that into dynamo as well",
    "start": "2890870",
    "end": "2898180"
  },
  {
    "text": "so version two what we did was we actually added a little error handler to",
    "start": "2898180",
    "end": "2905630"
  },
  {
    "text": "all of the lambda functions that sit underneath step functions and what that",
    "start": "2905630",
    "end": "2911120"
  },
  {
    "text": "would what that module will do is if the lambda step fails for any reason it will take",
    "start": "2911120",
    "end": "2917750"
  },
  {
    "text": "the event data that it the input that it got it'll take the error message and the function name and actually fire that out",
    "start": "2917750",
    "end": "2924590"
  },
  {
    "text": "to our errors SMS notification elastic transcoder the errors coming out of",
    "start": "2924590",
    "end": "2931040"
  },
  {
    "text": "there were fairly detailed so that was left as it as is for the new elemental",
    "start": "2931040",
    "end": "2936560"
  },
  {
    "text": "media converts service you can monitor what's going on there using Amazon Cloud",
    "start": "2936560",
    "end": "2942710"
  },
  {
    "text": "watch events so we set up a rule that would look for those errors and then",
    "start": "2942710",
    "end": "2949280"
  },
  {
    "text": "again far those into SNS and then from there we just have a simple error",
    "start": "2949280",
    "end": "2955190"
  },
  {
    "text": "handler that will land a function that gets those notifications passes through",
    "start": "2955190",
    "end": "2960860"
  },
  {
    "text": "that information figures out the unique identifier the gooood that we had puts",
    "start": "2960860",
    "end": "2966380"
  },
  {
    "text": "that information into our dynamo table so we've captured that error state and then sends out an SMS notification to",
    "start": "2966380",
    "end": "2972890"
  },
  {
    "text": "the end user in the form of an email so that they're getting those details there so I was version two much more detailed",
    "start": "2972890",
    "end": "2980090"
  },
  {
    "text": "error handling the next piece and 5-piece i want to look at is introducing",
    "start": "2980090",
    "end": "2987470"
  },
  {
    "text": "media convert the new service and also looking at some of the encoding options",
    "start": "2987470",
    "end": "2992600"
  },
  {
    "text": "and a little more complexity to the workflow by introducing our source metadata so when you go to the published",
    "start": "2992600",
    "end": "3002290"
  },
  {
    "text": "version now that we have there are two CloudFormation templates there's one that will deploy a video only version of",
    "start": "3002290",
    "end": "3008650"
  },
  {
    "text": "the solution and then one that will deliver a version that does uses metadata to drive the workflow if we",
    "start": "3008650",
    "end": "3016240"
  },
  {
    "text": "look on the right there those are the parameters for the CloudFormation template so we've added in some extra options",
    "start": "3016240",
    "end": "3022849"
  },
  {
    "text": "around the encoding you've now got and options around setting your MP for each",
    "start": "3022849",
    "end": "3027890"
  },
  {
    "text": "lesson - outputs you've got thumbnails you've got the ability to add in water",
    "start": "3027890",
    "end": "3033079"
  },
  {
    "text": "watermarks do the encoding process and we've added a step this is another piece",
    "start": "3033079",
    "end": "3038240"
  },
  {
    "text": "of feedback which was the ability to use Glacia to archive that source content once the workflow is finished the this",
    "start": "3038240",
    "end": "3047780"
  },
  {
    "text": "version is triggered in the same way as the MVP so the source video goes into it's dropped into your s3 bucket and",
    "start": "3047780",
    "end": "3054020"
  },
  {
    "text": "that kicks off the workflow so much more options around encoding there but those",
    "start": "3054020",
    "end": "3061270"
  },
  {
    "text": "choices you are making with the parameters of the CloudFormation template there's a hard-coded to the",
    "start": "3061270",
    "end": "3066530"
  },
  {
    "text": "workflow so every video that you drop into this process it's going to come it's going to end up with the same",
    "start": "3066530",
    "end": "3071839"
  },
  {
    "text": "output we wanted to take it step further and just add in a little more",
    "start": "3071839",
    "end": "3077230"
  },
  {
    "text": "flexibility so there isn't there's a second confirmation template you can",
    "start": "3077230",
    "end": "3082400"
  },
  {
    "text": "launch and that will add in the option to drive the workflow using metadata and",
    "start": "3082400",
    "end": "3089480"
  },
  {
    "text": "we built in support for JSON and for XML and again these are sort of very simple",
    "start": "3089480",
    "end": "3097480"
  },
  {
    "text": "metadata files but if you were talking about large broadcasting workflows you could imagine that it could be a DI",
    "start": "3097480",
    "end": "3103910"
  },
  {
    "text": "compliant XML have a lot more information in it but just to demonstrate how to do that we added in",
    "start": "3103910",
    "end": "3111290"
  },
  {
    "text": "this as an option and as you can see if you look at the XML and the JSON examples they're very much the similar",
    "start": "3111290",
    "end": "3118099"
  },
  {
    "text": "to the cloud formation parameters we had earlier and what that does is we've just",
    "start": "3118099",
    "end": "3123349"
  },
  {
    "text": "added in that extra validate metadata step to our ingest process to ingest",
    "start": "3123349",
    "end": "3128750"
  },
  {
    "text": "that those settings so that we can tell media convert what outputs that we want",
    "start": "3128750",
    "end": "3134920"
  },
  {
    "text": "so still fairly simple but just demonstrates how you can add more",
    "start": "3134920",
    "end": "3141160"
  },
  {
    "text": "flexible encoding options into the workflow",
    "start": "3141160",
    "end": "3145930"
  },
  {
    "text": "the other piece we had was media convert so what was really nice about this new",
    "start": "3146480",
    "end": "3152600"
  },
  {
    "text": "service is that there's no setup required you can make a API call out to",
    "start": "3152600",
    "end": "3159980"
  },
  {
    "text": "the service and you can get back the custom endpoint for your account so there is a API endpoint for each",
    "start": "3159980",
    "end": "3167750"
  },
  {
    "text": "account and one per region so you can actually make a call get that API",
    "start": "3167750",
    "end": "3173150"
  },
  {
    "text": "endpoint and then we can define all of our inputs and outputs as a single JSON object as part of the encoding request",
    "start": "3173150",
    "end": "3180580"
  },
  {
    "text": "so this is example of the code that we're using and as you can see here we were able to add in some user metadata",
    "start": "3180580",
    "end": "3187910"
  },
  {
    "text": "so we can actually add in our unique identifier in there so we can identify",
    "start": "3187910",
    "end": "3193310"
  },
  {
    "text": "the job once it's completed and then we can build out this JSON object and add",
    "start": "3193310",
    "end": "3198650"
  },
  {
    "text": "in HLS content with a specific output bucket - with a specific output location",
    "start": "3198650",
    "end": "3205220"
  },
  {
    "text": "and again mp4 so really really flexible",
    "start": "3205220",
    "end": "3210490"
  },
  {
    "text": "interface so let's take a look at that",
    "start": "3210490",
    "end": "3218110"
  },
  {
    "text": "new version starting with s3",
    "start": "3218110",
    "end": "3228820"
  },
  {
    "text": "here are our source and destination buckets we have the logs bucket as well",
    "start": "3232579",
    "end": "3238069"
  },
  {
    "text": "for cloud front if I go into the source bucket I now have a watermark directory",
    "start": "3238069",
    "end": "3243950"
  },
  {
    "text": "so I can drop watermark files in there if I want to use those I have my big bunny video don't worry we won't watch",
    "start": "3243950",
    "end": "3250309"
  },
  {
    "text": "it and I have an XML file with that with those encoding settings in there if I",
    "start": "3250309",
    "end": "3258380"
  },
  {
    "text": "look at the properties and go back to our our events so again with triggering",
    "start": "3258380",
    "end": "3263780"
  },
  {
    "text": "the same lander function but this time we're looking for anything with a JSON or XML extension and then if we go over",
    "start": "3263780",
    "end": "3271099"
  },
  {
    "text": "and look at our lifecycle policies we've actually added in a lifecycle policy",
    "start": "3271099",
    "end": "3276710"
  },
  {
    "text": "here that will arc anything tagged with this archive tag will get moved over to",
    "start": "3276710",
    "end": "3284359"
  },
  {
    "text": "Glacia and you can specify the number of days to retain it in s3 so back to step",
    "start": "3284359",
    "end": "3292730"
  },
  {
    "text": "functions we now have our three step functions we have the ingest process and",
    "start": "3292730",
    "end": "3299960"
  },
  {
    "text": "we added that validate metadata step if we look at the input now you can see",
    "start": "3299960",
    "end": "3306530"
  },
  {
    "text": "we're getting in this XML file if you look at the output from that step you",
    "start": "3306530",
    "end": "3314390"
  },
  {
    "text": "can see that we've that's passed the XML file and just added in those settings into the event data that's been passed",
    "start": "3314390",
    "end": "3321740"
  },
  {
    "text": "through our workflow we've got our decoupled steps so Dynamo is a separate",
    "start": "3321740",
    "end": "3328000"
  },
  {
    "text": "piece if we go to processing this has",
    "start": "3328000",
    "end": "3335599"
  },
  {
    "text": "now become a much simpler step because it's a single encoding step if we look",
    "start": "3335599",
    "end": "3341210"
  },
  {
    "text": "at the inputs there you can see here's the details that we've got from our XML file and then if we look at the outputs",
    "start": "3341210",
    "end": "3348460"
  },
  {
    "text": "here is the implement here is the job data that we submitted to media convert",
    "start": "3348460",
    "end": "3355539"
  },
  {
    "text": "very very flexible new service if we take a quick look at that media convert",
    "start": "3356210",
    "end": "3364000"
  },
  {
    "text": "under our count you'll see here's my custom API endpoint are specific to this",
    "start": "3364000",
    "end": "3370130"
  },
  {
    "text": "region and then if I look and jobs here is that job that I submitted by the API",
    "start": "3370130",
    "end": "3378220"
  },
  {
    "text": "here are the outputs and we can actually view the JSON that I sent through by",
    "start": "3378220",
    "end": "3385250"
  },
  {
    "text": "lambda again media convert does its job",
    "start": "3385250",
    "end": "3391520"
  },
  {
    "text": "it creates our outputs and then we we have a final step functions that runs",
    "start": "3391520",
    "end": "3398559"
  },
  {
    "text": "sorry wrong region and we have our",
    "start": "3398559",
    "end": "3403760"
  },
  {
    "text": "finalists publishing workflow and again simplified again we get all of those",
    "start": "3403760",
    "end": "3410720"
  },
  {
    "text": "outputs from media convert check that those objects in s3 are the same as the",
    "start": "3410720",
    "end": "3416660"
  },
  {
    "text": "ones that we requested creating our cloud front URLs for our content if we",
    "start": "3416660",
    "end": "3421700"
  },
  {
    "text": "opted for glacier we will tag those source assets with our Kaiser they get",
    "start": "3421700",
    "end": "3427069"
  },
  {
    "text": "moved over to Glacia and there we go so that is a version two and if we look at",
    "start": "3427069",
    "end": "3440390"
  },
  {
    "text": "all of that together so now we have a infrastructure where we can ingest watermark files metadata files and",
    "start": "3440390",
    "end": "3447740"
  },
  {
    "text": "source videos we have our end or error handling and we had cloud front to distribute that content and with that I",
    "start": "3447740",
    "end": "3455990"
  },
  {
    "text": "will hand you back alright so with respect to the future",
    "start": "3455990",
    "end": "3463760"
  },
  {
    "text": "plans quickly we are integrating with partners as I talked about earlier so",
    "start": "3463760",
    "end": "3471650"
  },
  {
    "text": "Venera is one of the partners we are working with with respect to the watermarking and very metrics for drm",
    "start": "3471650",
    "end": "3477770"
  },
  {
    "text": "and also signe and for the ingest of the content so that's currently in the roadmap there is a lot other partners",
    "start": "3477770",
    "end": "3484220"
  },
  {
    "text": "that we are working with you know specifically elemental works nicely out of the box with many of the DRM",
    "start": "3484220",
    "end": "3489650"
  },
  {
    "text": "providers out there so good please check it out the AWS answers page as Tom gave",
    "start": "3489650",
    "end": "3498050"
  },
  {
    "text": "you the nice demo there you know you can simply just go there and launch the template and kind of start playing with",
    "start": "3498050",
    "end": "3504170"
  },
  {
    "text": "it with that thank you very much we have a couple of minutes here so happy to take any last-minute questions that that",
    "start": "3504170",
    "end": "3511040"
  },
  {
    "text": "people might have and will appreciate any feedback that you can enter through the app thank you",
    "start": "3511040",
    "end": "3516580"
  },
  {
    "text": "[Applause]",
    "start": "3516580",
    "end": "3523610"
  }
]