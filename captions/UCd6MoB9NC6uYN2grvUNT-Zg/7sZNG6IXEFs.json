[
  {
    "text": "hello everyone and welcome to today's webinar and this is we works deploy troubleshoot and control",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "kubernetes powered containers and micro services on AWS hosted jointly by AWS",
    "start": "6029",
    "end": "12030"
  },
  {
    "text": "and we works my name is Christopher Hine I'm a partner Solutions Architect with",
    "start": "12030",
    "end": "18300"
  },
  {
    "text": "AWS I'll be your host speaker and moderator for today's webinar so the",
    "start": "18300",
    "end": "24869"
  },
  {
    "text": "first thing that we want to talk about today is some of the industry's shifts that were actually seeing within the",
    "start": "24869",
    "end": "31590"
  },
  {
    "text": "cloud as well as within the container ecosystem as it currently stands the",
    "start": "31590",
    "end": "36750"
  },
  {
    "text": "first there there's three key components that are really crucial to talk about the first one is elasticity so and this",
    "start": "36750",
    "end": "43590"
  },
  {
    "text": "really represents the ability to actually scale up and scale down and really pay for only what you need within",
    "start": "43590",
    "end": "50969"
  },
  {
    "text": "the cloud the next thing that's really important to actually talk about is the agility that you're going to get out of",
    "start": "50969",
    "end": "57149"
  },
  {
    "text": "using the cloud as well as deploying with containers and so this is being able to iterate quickly deploy and fail",
    "start": "57149",
    "end": "65338"
  },
  {
    "text": "fast and kind of taking your your development workloads and pushing that through to test to prod in you know",
    "start": "65339",
    "end": "73260"
  },
  {
    "text": "minutes versus hours and weeks and then",
    "start": "73260",
    "end": "78659"
  },
  {
    "text": "the last piece that's really important that to talk about is high availability",
    "start": "78659",
    "end": "84000"
  },
  {
    "text": "and this means that we're building out infrastructure that's both highly available it also has auto healing",
    "start": "84000",
    "end": "90360"
  },
  {
    "text": "capabilities and on it and management Technica techniques built into how that",
    "start": "90360",
    "end": "96659"
  },
  {
    "text": "whole infrastructure set up as well as your architecture and this doesn't just rely on that it also dives into the",
    "start": "96659",
    "end": "103619"
  },
  {
    "text": "physical infrastructure being able to span more than one location and physical distribution across the world so this is",
    "start": "103619",
    "end": "112470"
  },
  {
    "text": "where we enter in the world of containers and so for those of you that are new to containers container is a",
    "start": "112470",
    "end": "119820"
  },
  {
    "text": "method of packaging up an operating system as well as an application and all the dependencies that you need to work",
    "start": "119820",
    "end": "126960"
  },
  {
    "text": "with work with that application and your being able to take that and deploy into resource isolated processes",
    "start": "126960",
    "end": "133830"
  },
  {
    "text": "then I managed by things like cgroups as well as you can take that application package because it's a declarative",
    "start": "133830",
    "end": "140880"
  },
  {
    "text": "script you can take that and distribute it to anywhere so it's infrastructure",
    "start": "140880",
    "end": "146280"
  },
  {
    "text": "agnostic etc the key benefits that",
    "start": "146280",
    "end": "151680"
  },
  {
    "text": "you're actually going to get out of doing this is being able to provide a consistent and efficient and version",
    "start": "151680",
    "end": "160080"
  },
  {
    "text": "control and deployment of your actual applications and what we're actually seeing with this is that's helping",
    "start": "160080",
    "end": "165480"
  },
  {
    "text": "companies like those of you that are on the line to actually accelerate to the",
    "start": "165480",
    "end": "170670"
  },
  {
    "text": "cloud and its really reducing that friction to transforming your your business to be more digitally focused",
    "start": "170670",
    "end": "176750"
  },
  {
    "text": "and so what does this actually mean for you so you're now able to actually take",
    "start": "176750",
    "end": "181860"
  },
  {
    "text": "that application or that declarative script and you're able to make smaller",
    "start": "181860",
    "end": "187500"
  },
  {
    "text": "more frequent changes to both the infrastructure as well as the applications and you're able to do that",
    "start": "187500",
    "end": "192930"
  },
  {
    "text": "with a higher level of confidence because you're able to run it exactly the same as you would on your laptop as",
    "start": "192930",
    "end": "199260"
  },
  {
    "text": "you do in the cloud so no longer do you have to worry about version control issues or package management issues on",
    "start": "199260",
    "end": "207330"
  },
  {
    "text": "on your infrastructure everything is written out and deployed through in a single in a single declarative script",
    "start": "207330",
    "end": "214739"
  },
  {
    "text": "and that's really streamlining that development and deployment processes now",
    "start": "214739",
    "end": "220050"
  },
  {
    "text": "what does this mean in terms of AWS so in terms of AWS it gives you the ability",
    "start": "220050",
    "end": "225480"
  },
  {
    "text": "to get the full spectrum of AWS services that help you build micro services and",
    "start": "225480",
    "end": "230910"
  },
  {
    "text": "container as applications so these are services like integrating with DynamoDB and RDS for databases sqs for queueing",
    "start": "230910",
    "end": "240680"
  },
  {
    "text": "Kinesis for streaming using cloud formation templates to do management of",
    "start": "240680",
    "end": "246239"
  },
  {
    "text": "your infrastructure as well as things like cloud watch for monitoring and logging and having a consistent space",
    "start": "246239",
    "end": "253350"
  },
  {
    "text": "for all of that stuff as well as elasticsearch for analyzing those logs or even some of the application data",
    "start": "253350",
    "end": "259769"
  },
  {
    "text": "that you have going into it in our services span across compute networking",
    "start": "259769",
    "end": "264960"
  },
  {
    "text": "analytics mobile and also containers to basically just help you all be more more productive as",
    "start": "264960",
    "end": "271259"
  },
  {
    "text": "application developers and operations teams and the big thing that's important",
    "start": "271259",
    "end": "277139"
  },
  {
    "text": "to remember here is we continue to add new capabilities into this at an accelerating pace so just last year",
    "start": "277139",
    "end": "283229"
  },
  {
    "text": "alone we launched 1017 new services and features that were significant moving on",
    "start": "283229",
    "end": "290550"
  },
  {
    "text": "from that we have a global footprint and that means that you're able to deploy your container has applications in to",
    "start": "290550",
    "end": "297300"
  },
  {
    "text": "any of our 43 availability zones and those span across our 16 geographic",
    "start": "297300",
    "end": "302909"
  },
  {
    "text": "regions and we have an additional three regions that expected to come online throughout 2017 and 2018 continuing that",
    "start": "302909",
    "end": "312780"
  },
  {
    "text": "forward you get the benefits of cloud security and so these are things like AWS that has achieved a number of",
    "start": "312780",
    "end": "319770"
  },
  {
    "text": "internationally recognized certifications and accreditation that enable customers to achieve their",
    "start": "319770",
    "end": "324990"
  },
  {
    "text": "specific security and regulatory objectives and so these things are tools like cloud trail or kms which is our key",
    "start": "324990",
    "end": "332969"
  },
  {
    "text": "management service and inspector which really enable the customers to meet all those objectives the last piece is our",
    "start": "332969",
    "end": "341610"
  },
  {
    "text": "partner ecosystem and our partner ecosystem is rapidly growing ecosystem",
    "start": "341610",
    "end": "346620"
  },
  {
    "text": "of customers specifically in the container space we have things from we",
    "start": "346620",
    "end": "352500"
  },
  {
    "text": "have things from networking as well as security and CI C D and then we dive",
    "start": "352500",
    "end": "357629"
  },
  {
    "text": "layer layer lower into orchestration management and kind of the operating",
    "start": "357629",
    "end": "363000"
  },
  {
    "text": "systems under the hood for running these container as applications and so that's where we have companies like weave and",
    "start": "363000",
    "end": "370409"
  },
  {
    "text": "so we works we works as an APM and they build tools and services to help you run",
    "start": "370409",
    "end": "375960"
  },
  {
    "text": "containers on kubernetes on AWS and their tools give you the full view of",
    "start": "375960",
    "end": "381810"
  },
  {
    "text": "the infrastructure at any given moment and so that's things from being able to",
    "start": "381810",
    "end": "386879"
  },
  {
    "text": "dive into the AWS infrastructure such as Amazon DynamoDB or or yes or and and be",
    "start": "386879",
    "end": "395639"
  },
  {
    "text": "able to see and monitor that external traffic as well as the internal traffic between your own",
    "start": "395639",
    "end": "401139"
  },
  {
    "text": "containers and so Stewart here who is on the line from weave Works has a story to",
    "start": "401139",
    "end": "406509"
  },
  {
    "text": "tell and share with you about how they use AWS and kubernetes to make their deployments smooth and easily",
    "start": "406509",
    "end": "412719"
  },
  {
    "text": "reproducible thanks Chris so first I'd",
    "start": "412719",
    "end": "419770"
  },
  {
    "text": "like to tell you a little bit about weave works and our mission weave works is a three year old startup we're at the",
    "start": "419770",
    "end": "425949"
  },
  {
    "text": "series B stage and are funded by Accel Partners and GV we're fundamentally an",
    "start": "425949",
    "end": "431080"
  },
  {
    "text": "open-source company you can find our projects on github at github slash reworks please start some projects we'd",
    "start": "431080",
    "end": "438400"
  },
  {
    "text": "love to see people storing those and helping us share what we're doing and we're best known for our docker",
    "start": "438400",
    "end": "445240"
  },
  {
    "text": "networking project there's some one honestly named weave but and we've also",
    "start": "445240",
    "end": "451689"
  },
  {
    "text": "been running a cloud service for just over two years using docker kubernetes",
    "start": "451689",
    "end": "457750"
  },
  {
    "text": "and prometheus to name a few of the key technologies were using we've learned a lot from running this theory service on",
    "start": "457750",
    "end": "464139"
  },
  {
    "text": "containerized infrastructure we've devised some tools and adapted a methodology that's giving us a mission and we call this get ups this is a label",
    "start": "464139",
    "end": "474159"
  },
  {
    "text": "we gave to our approach to managing container infrastructure and we found that many other people in the community",
    "start": "474159",
    "end": "479500"
  },
  {
    "text": "are adopting a similar approach it Ops is a methodology that combines practices",
    "start": "479500",
    "end": "486039"
  },
  {
    "text": "like continuous integration pipelines concepts like observability and methods of control so developer teams can spend",
    "start": "486039",
    "end": "493389"
  },
  {
    "text": "more time hacking or as they prefer their boss to think creating business value I'll talk",
    "start": "493389",
    "end": "499180"
  },
  {
    "text": "a bit more about guitar shortly but first I'd like to tell you a short and slightly scary story for Halloween this",
    "start": "499180",
    "end": "506800"
  },
  {
    "text": "is a true story about things going horribly wrong and how we recovered from it I mentioned that we're predominantly",
    "start": "506800",
    "end": "514930"
  },
  {
    "text": "an open source company but we also run a service weave cloud is the service and it's a software as a service product",
    "start": "514930",
    "end": "520690"
  },
  {
    "text": "that automates deployments of and offers visualization and monitoring for containerized applications",
    "start": "520690",
    "end": "527350"
  },
  {
    "text": "here's a screen showing some of our deployment workflows and graphs it's a monitoring screen I'm sure you've",
    "start": "527350",
    "end": "533260"
  },
  {
    "text": "probably all seen their times before and here's a visualization of we",
    "start": "533260",
    "end": "538839"
  },
  {
    "text": "plowed in we've cloud which is very inception so aside from a plug what I'm",
    "start": "538839",
    "end": "544930"
  },
  {
    "text": "really trying to show you is it's a real product there's an overview of the architecture it's a system of systems",
    "start": "544930",
    "end": "551230"
  },
  {
    "text": "it's microservices and it's what we call cloud native it uses a variety of",
    "start": "551230",
    "end": "557709"
  },
  {
    "text": "ernst's and services but infrastructure for storage you can see that this monitoring management where storing data",
    "start": "557709",
    "end": "563649"
  },
  {
    "text": "in RDS we're using DynamoDB and with s3 sqs and so on and so on and it's a",
    "start": "563649",
    "end": "571270"
  },
  {
    "text": "complex distributed system so how are we using containers we're using containers",
    "start": "571270",
    "end": "577630"
  },
  {
    "text": "to package those services each of the applications is deployed using automation tooling we wrote and indeed",
    "start": "577630",
    "end": "584350"
  },
  {
    "text": "this part of we've cloud to a container Orchestrator container Orchestrator is kubernetes and key releases is kind of a",
    "start": "584350",
    "end": "592209"
  },
  {
    "text": "policy engine we describe what we want to run and it makes it happen if something fails it starts a new one",
    "start": "592209",
    "end": "598440"
  },
  {
    "text": "because our packages and containers are immutable we can promote them unchanged",
    "start": "598440",
    "end": "603880"
  },
  {
    "text": "from a development or staging environment to a production environment which makes it very easy for us to and predict what kind of runtimes can run in",
    "start": "603880",
    "end": "611649"
  },
  {
    "text": "production we have confidence that whatever we've tested it's the thing that actually runs we don't rebuild each",
    "start": "611649",
    "end": "617500"
  },
  {
    "text": "time so here's a quick summary it's cognitive it runs on kubernetes and it",
    "start": "617500",
    "end": "625209"
  },
  {
    "text": "uses lots of moments and services which is fine it's awesome it worked like",
    "start": "625209",
    "end": "631600"
  },
  {
    "text": "clockwork until the day we deleted the production system accidentally",
    "start": "631600",
    "end": "638490"
  },
  {
    "text": "universally creating the perfect example of why manual processes can go wrong luckily not all of it was deleted but",
    "start": "638490",
    "end": "645070"
  },
  {
    "text": "it's the kind of situation where the on-call team have nightmares about it wellwe've engine is not prone to",
    "start": "645070",
    "end": "651550"
  },
  {
    "text": "panicking and this is not a weave engineer the team have a plan and we're",
    "start": "651550",
    "end": "657459"
  },
  {
    "text": "doing what we can to rebuild the system from scratch they have a process while",
    "start": "657459",
    "end": "662920"
  },
  {
    "text": "one of the team is getting the Khans plan together another of the team has broken the glass one big",
    "start": "662920",
    "end": "668260"
  },
  {
    "text": "metaphorical button so we're restoring the system on my saying hopefully it",
    "start": "668260",
    "end": "674470"
  },
  {
    "text": "won't take too long maybe I won't do this bit in real-time",
    "start": "674470",
    "end": "680070"
  },
  {
    "text": "systems restored so it took 45 minutes 45 minutes doesn't seem too bad house is",
    "start": "683520",
    "end": "692530"
  },
  {
    "text": "possible let's remind ourselves of what's going on under the hood here the system is quite a complex system as I",
    "start": "692530",
    "end": "698440"
  },
  {
    "text": "said we're using Amazon to EC two instances to reinstall a production",
    "start": "698440",
    "end": "705340"
  },
  {
    "text": "environment from scratch we need to install communities and we need to start deploying applications and start data",
    "start": "705340",
    "end": "711400"
  },
  {
    "text": "services as possible to do this in our environment in 45 minutes",
    "start": "711400",
    "end": "717160"
  },
  {
    "text": "because we use declarative infrastructure tools tools that declare",
    "start": "717160",
    "end": "722290"
  },
  {
    "text": "infrastructure as code things like kubernetes docker terraform in the",
    "start": "722290",
    "end": "728980"
  },
  {
    "text": "declarative approach we specify the end state of the infrastructure we want and then some software makes it happen the",
    "start": "728980",
    "end": "735340"
  },
  {
    "text": "state is declared in files the files are stored in git we're using Amazon services and infrastructure so we",
    "start": "735340",
    "end": "741100"
  },
  {
    "text": "already have an underlying resources that were service demand for displaying",
    "start": "741100",
    "end": "746860"
  },
  {
    "text": "or of this infrastructure that we've described in files and because we've automated everything we can run the",
    "start": "746860",
    "end": "752680"
  },
  {
    "text": "whole process without needing manual and thus error-prone intervention we don't have to wait for unions to confirm that",
    "start": "752680",
    "end": "759190"
  },
  {
    "text": "certain bits of pieces are running we call this methodology guitars guitars is",
    "start": "759190",
    "end": "768870"
  },
  {
    "text": "evolution of of DevOps in DevOps we say configures code code must be version",
    "start": "768870",
    "end": "775780"
  },
  {
    "text": "controlled and therefore config must be version control to in 'get ops we take",
    "start": "775780",
    "end": "781840"
  },
  {
    "text": "this a step further and assert that everything should be version controlled configuration code monitoring dashboard",
    "start": "781840",
    "end": "788980"
  },
  {
    "text": "descriptions network policy etc etc and",
    "start": "788980",
    "end": "793990"
  },
  {
    "text": "if we can describe we can use a declarative tool to automate it if we can automate it we can",
    "start": "793990",
    "end": "799050"
  },
  {
    "text": "then perform other options operations on it let's look and see what a standard CI",
    "start": "799050",
    "end": "805290"
  },
  {
    "text": "pipeline will look like if we're going to deploy application from",
    "start": "805290",
    "end": "810600"
  },
  {
    "text": "infrastructure for to some infrastructure going to start with a code repository we're going to run a CI",
    "start": "810600",
    "end": "817709"
  },
  {
    "text": "continuous integration pipeline bill that's going to build the code it's going to run some tests and because",
    "start": "817709",
    "end": "823559"
  },
  {
    "text": "we're smart engineers the testing we're going to go green the artifact is",
    "start": "823559",
    "end": "830480"
  },
  {
    "text": "produced at the end of the build process and stored in a repository somewhere",
    "start": "830480",
    "end": "835910"
  },
  {
    "text": "where our deployment process can take a copy of it and apply it to the infrastructure so far so good",
    "start": "835910",
    "end": "842759"
  },
  {
    "text": "what's different about the guitar pipeline well if you get up to pipeline",
    "start": "842759",
    "end": "854249"
  },
  {
    "text": "starter in a very similar way code repository CI pipeline this time it's an",
    "start": "854249",
    "end": "861329"
  },
  {
    "text": "image repository cuz we're gonna build one image in container and then our",
    "start": "861329",
    "end": "868529"
  },
  {
    "text": "deployment Automator is a slight different process to the previous deployment process the Automator is",
    "start": "868529",
    "end": "876209"
  },
  {
    "text": "going to make a change to the configuration reconfiguration repo has a set of declarative configuration files",
    "start": "876209",
    "end": "883470"
  },
  {
    "text": "and telling us what state the application or the infrastructure is in in this case it's going to tell us that",
    "start": "883470",
    "end": "889350"
  },
  {
    "text": "a kubernetes manifest describing an application needs a new version of the application that's just been built in",
    "start": "889350",
    "end": "895740"
  },
  {
    "text": "the pipeline and then a separate process we call the deployment synchronizer it's",
    "start": "895740",
    "end": "902129"
  },
  {
    "text": "a slightly more simple process when all it does is it runs inside the infrastructure and it looks at the",
    "start": "902129",
    "end": "907199"
  },
  {
    "text": "external configuration repo Caesar for any changes should be applied and applies it to the orchestrating so we've",
    "start": "907199",
    "end": "913649"
  },
  {
    "text": "separated out the change to the infrastructure and stored it in a configuration of wizardry just",
    "start": "913649",
    "end": "922740"
  },
  {
    "text": "indicating where CI continuous integration and continuous delivery are separated and these are the type",
    "start": "922740",
    "end": "928360"
  },
  {
    "text": "change we can use to trigger a deployment so we can change the code we can trigger a manual deployment or we",
    "start": "928360",
    "end": "935529"
  },
  {
    "text": "can change configuration files in the repo directly the deployment synchronizer will sill still apply each",
    "start": "935529",
    "end": "941380"
  },
  {
    "text": "of the changes as they're deployed as they changed in in the repository we can",
    "start": "941380",
    "end": "948490"
  },
  {
    "text": "even send an update heading from CI pipeline to the Automator to say get ready you're going to do need to do",
    "start": "948490",
    "end": "954040"
  },
  {
    "text": "something in the near future so let's",
    "start": "954040",
    "end": "959920"
  },
  {
    "text": "compare those two pipelines in the first we would expect it expose a cluster API",
    "start": "959920",
    "end": "966700"
  },
  {
    "text": "endpoint the CI system is going to need credentials it's going to make a change",
    "start": "966700",
    "end": "973690"
  },
  {
    "text": "to the cluster API and we only have a single repository where the application states is described so what's the source",
    "start": "973690",
    "end": "982690"
  },
  {
    "text": "of truth if you've lost the cluster if you accidentally deleted your cluster you can't go and check the cluster for",
    "start": "982690",
    "end": "990870"
  },
  {
    "text": "the state that it's supposed to be in the CI system itself isn't a good example of where to maintain the state",
    "start": "990870",
    "end": "998890"
  },
  {
    "text": "because it's a transient system and you may have made more changes to the application in the various with potent",
    "start": "998890",
    "end": "1005100"
  },
  {
    "text": "repositories that your code is stored in by them in the Kitab 12 pipeline we've",
    "start": "1005100",
    "end": "1013500"
  },
  {
    "text": "got the option of running the agent inside the cluster itself when the cluster is up at the agent runs it",
    "start": "1013500",
    "end": "1018660"
  },
  {
    "text": "modifies the state of the cluster it can sit inside the cluster and ask for state",
    "start": "1018660",
    "end": "1024000"
  },
  {
    "text": "from the configuration repository lives it's at that side so the credentials for",
    "start": "1024000",
    "end": "1029339"
  },
  {
    "text": "operating on the API of the cluster itself or indeed for the repository in",
    "start": "1029339",
    "end": "1035188"
  },
  {
    "text": "which the conflict is stored never lead to leave the cluster we have a separate",
    "start": "1035189",
    "end": "1042089"
  },
  {
    "text": "configuration repo and this means that our source of truth is entirely independent let me say that again",
    "start": "1042089",
    "end": "1048480"
  },
  {
    "text": "because we're declaring our desired States in external location we've got options on where to run the agent",
    "start": "1048480",
    "end": "1053850"
  },
  {
    "text": "automates it we don't need to expose an API endpoint to a CI system or expose",
    "start": "1053850",
    "end": "1059010"
  },
  {
    "text": "the cross cluster credentials when we separate the application and infrastructure configuration that",
    "start": "1059010",
    "end": "1065940"
  },
  {
    "text": "cleared state is the independent of cluster so if you accidentally delete or pasta you can recover from this without",
    "start": "1065940",
    "end": "1072899"
  },
  {
    "text": "needing to reestablish same state from a location that's no longer existent it's",
    "start": "1072899",
    "end": "1083279"
  },
  {
    "text": "ideal as a source of truth it's independently Orchestrator obviously but it's also resilient you can have",
    "start": "1083279",
    "end": "1088710"
  },
  {
    "text": "multiple copies of the state stored in different locations and it contains the desired state of the hold system the",
    "start": "1088710",
    "end": "1095940"
  },
  {
    "text": "desired say it's interesting because even if it's different to the actual state we can alert on it in our system",
    "start": "1095940",
    "end": "1102000"
  },
  {
    "text": "operating we've cloud we even do that we have a set of configuration alerts that fire in slack that tell us when the",
    "start": "1102000",
    "end": "1108510"
  },
  {
    "text": "cluster is different to the state we expect it to be in what are the other",
    "start": "1108510",
    "end": "1114630"
  },
  {
    "text": "benefits of taking this approach any developer can use github like workflows",
    "start": "1114630",
    "end": "1120750"
  },
  {
    "text": "to do operations tasks there's issues or requests and reviews you can join the",
    "start": "1120750",
    "end": "1128370"
  },
  {
    "text": "team be productive immediately if you're familiar with their standard workflow and developers used to and we can modify",
    "start": "1128370",
    "end": "1135710"
  },
  {
    "text": "sorry we can audit all of the changes to infrastructure all the modifications to infrastructure can be validated and of",
    "start": "1135710",
    "end": "1141480"
  },
  {
    "text": "course they can be automated this is important if you have strict requirements for control of a production",
    "start": "1141480",
    "end": "1147510"
  },
  {
    "text": "environment for example a banking and finance applications you can now restrict their access to cluster to only",
    "start": "1147510",
    "end": "1153510"
  },
  {
    "text": "automated processes you can audit all of the changes and you can validate there's",
    "start": "1153510",
    "end": "1161130"
  },
  {
    "text": "a quick summary so we deleted in Proctor production environment I don't recommend you do",
    "start": "1161130",
    "end": "1166620"
  },
  {
    "text": "this at home we were able to do this because we've used software-defined infrastructure and data services those",
    "start": "1166620",
    "end": "1173880"
  },
  {
    "text": "things are described declared version controlled and automated I'll mean time",
    "start": "1173880",
    "end": "1178889"
  },
  {
    "text": "to recovery alert is low because this even in the case of the complete loss of environment because we automated",
    "start": "1178889",
    "end": "1185070"
  },
  {
    "text": "everything our engineers spend more time developing less time operating infrastructure detox is our",
    "start": "1185070",
    "end": "1192670"
  },
  {
    "text": "but this is an emerging practice it's being adopted in particular by people who are operating containerized",
    "start": "1192670",
    "end": "1198160"
  },
  {
    "text": "infrastructure when we started blogging about get ups on the weave works blog we",
    "start": "1198160",
    "end": "1203679"
  },
  {
    "text": "had a number of people contact us on Twitter for example Atlassian saying we've done this too but they gave it a",
    "start": "1203679",
    "end": "1209920"
  },
  {
    "text": "different label so we know that this is a practice that is well suited to containing that infrastructure and also",
    "start": "1209920",
    "end": "1215770"
  },
  {
    "text": "one that their community is adopting",
    "start": "1215770",
    "end": "1219480"
  },
  {
    "text": "okay I'm done let's look at the questions Chris yeah thanks now we're",
    "start": "1221880",
    "end": "1227950"
  },
  {
    "text": "gonna try to transition into questions or our live Q&A Stewart I think there's one for you so the Automator seems",
    "start": "1227950",
    "end": "1235540"
  },
  {
    "text": "really interesting how does it actually handle destructive changes and",
    "start": "1235540",
    "end": "1243450"
  },
  {
    "text": "destructive changes so we will assume that means removing a piece of infrastructure that in there already and",
    "start": "1243450",
    "end": "1250350"
  },
  {
    "text": "the automate is not going to operate on",
    "start": "1250350",
    "end": "1255910"
  },
  {
    "text": "something if it doesn't exist anymore if we delete something from the repository",
    "start": "1255910",
    "end": "1261750"
  },
  {
    "text": "that's under management by the Automator it's not gonna operate on people anymore so in a sense the Automator doesn't",
    "start": "1261750",
    "end": "1269530"
  },
  {
    "text": "really have anything any knowledge of this a destructive change would typically be a manual change that we'd",
    "start": "1269530",
    "end": "1274929"
  },
  {
    "text": "say make a change make a change to the git repository and then neither the",
    "start": "1274929",
    "end": "1281500"
  },
  {
    "text": "synchronizer Automator will will act on that again in the case of something being removed from the cluster that",
    "start": "1281500",
    "end": "1288070"
  },
  {
    "text": "you're operating on unexpectedly the Automator will restore that to the",
    "start": "1288070",
    "end": "1293290"
  },
  {
    "text": "cluster each time as well rather the synchronizer will destroy restore that's the cluster it's time awesome so it's",
    "start": "1293290",
    "end": "1300340"
  },
  {
    "text": "gonna keep it's gonna keep the actual consistent state and if you if you need to actually delete something you can delete something manually separate from",
    "start": "1300340",
    "end": "1307299"
  },
  {
    "text": "the actual Automator process but yeah cool yes awesome so how does actually get ops",
    "start": "1307299",
    "end": "1315340"
  },
  {
    "text": "fit yeah how does get ops fit into the compliance requirements for things I",
    "start": "1315340",
    "end": "1321309"
  },
  {
    "text": "think you mentioned a little bit but if you could talk a little bit more about that with like banking application",
    "start": "1321309",
    "end": "1326500"
  },
  {
    "text": "so on so forth yes sure so it's it's",
    "start": "1326500",
    "end": "1331630"
  },
  {
    "text": "fairly typical in more strictly managed environments for development teams to",
    "start": "1331630",
    "end": "1337440"
  },
  {
    "text": "not have direct access to production environments and for a specific team in",
    "start": "1337440",
    "end": "1344080"
  },
  {
    "text": "operations to have full control over when deployments happen and sometimes we",
    "start": "1344080",
    "end": "1350130"
  },
  {
    "text": "and we hear concerns about how automation will change this I don't",
    "start": "1350130",
    "end": "1355930"
  },
  {
    "text": "think it does if you're adopting a guitars like methodology because control",
    "start": "1355930",
    "end": "1361150"
  },
  {
    "text": "over the production environment is really configured to be operated from",
    "start": "1361150",
    "end": "1369250"
  },
  {
    "text": "this separate configuration repo that where our infrastructure and application is described and because it's a separate",
    "start": "1369250",
    "end": "1375220"
  },
  {
    "text": "repository or set of repositories we can put a different set of controls around there and that means in the case of an",
    "start": "1375220",
    "end": "1383470"
  },
  {
    "text": "ops team an ops team could restrict access to that repository such that the development team you want to make",
    "start": "1383470",
    "end": "1389260"
  },
  {
    "text": "changes can only submit those changes through pull requests because the",
    "start": "1389260",
    "end": "1394330"
  },
  {
    "text": "pipeline itself doesn't have to be fully automatic it can be configured to queue",
    "start": "1394330",
    "end": "1400330"
  },
  {
    "text": "up deployments and this would be the difference between continuous deployment and continuous delivery where the final",
    "start": "1400330",
    "end": "1407110"
  },
  {
    "text": "say is in continuous delivery that methodology says we'll make changes",
    "start": "1407110",
    "end": "1413860"
  },
  {
    "text": "manually when it suits us to do so but we use automation to affect the change so I think the button push or a single",
    "start": "1413860",
    "end": "1420100"
  },
  {
    "text": "command is issued and automation actually makes all of the changes itself so I think for compliance requirements",
    "start": "1420100",
    "end": "1428080"
  },
  {
    "text": "the the separation of concerns will",
    "start": "1428080",
    "end": "1433320"
  },
  {
    "text": "align almost exactly with standard practices we're just were just suggesting that the git operations",
    "start": "1433320",
    "end": "1441880"
  },
  {
    "text": "methodology is the best way forwards for this awesome",
    "start": "1441880",
    "end": "1448380"
  },
  {
    "text": "ok it looks like we have some more questions so what measures have you implemented since since this happened",
    "start": "1448380",
    "end": "1458309"
  },
  {
    "text": "that measures as in since we broke the deployment yeah since the deployment",
    "start": "1460460",
    "end": "1466920"
  },
  {
    "text": "prep it looks like it's asking about fallback clusters and duplicate clusters",
    "start": "1466920",
    "end": "1472110"
  },
  {
    "text": "and what's what's gonna make the recovery time faster next time and I",
    "start": "1472110",
    "end": "1477380"
  },
  {
    "text": "think less manual changes it's prosecutor best description the the the",
    "start": "1477380",
    "end": "1485820"
  },
  {
    "text": "change here was really an accident and it was a inadvertent change that",
    "start": "1485820",
    "end": "1492120"
  },
  {
    "text": "it's fairly easy for an engineer to make and if they don't really want to I'm trying to go into detail here but the",
    "start": "1492120",
    "end": "1499740"
  },
  {
    "text": "cluster infrastructure itself is more resilient as we've grown and matured as business we've we've added more",
    "start": "1499740",
    "end": "1505530"
  },
  {
    "text": "capability in that department but fundamentally the process hasn't really changed as less fingers more automation",
    "start": "1505530",
    "end": "1512310"
  },
  {
    "text": "as the whiteboards fantastic okay did",
    "start": "1512310",
    "end": "1517740"
  },
  {
    "text": "you guys see or have you experienced any drawbacks with the move to a fully",
    "start": "1517740",
    "end": "1522780"
  },
  {
    "text": "automated process um not so much",
    "start": "1522780",
    "end": "1529800"
  },
  {
    "text": "I think the industry has been moving towards greater automation and overtime",
    "start": "1529800",
    "end": "1537870"
  },
  {
    "text": "and this is really a reflection of that",
    "start": "1537870",
    "end": "1544230"
  },
  {
    "text": "evolution and the the process of",
    "start": "1544230",
    "end": "1550530"
  },
  {
    "text": "adopting automation is is typically slightly painful to start with but the benefits are that we have a more",
    "start": "1550530",
    "end": "1558270"
  },
  {
    "text": "reliable deployment process and that we spend less time worrying about releases releases and how things that um don't",
    "start": "1558270",
    "end": "1566520"
  },
  {
    "text": "take very much time at all in our staging environment it's fully automated if if code gets merged to master then",
    "start": "1566520",
    "end": "1572040"
  },
  {
    "text": "it's deployed and that the results are deployed to that environment and we",
    "start": "1572040",
    "end": "1577530"
  },
  {
    "text": "currently manage and deployments to the production environment and partially for",
    "start": "1577530",
    "end": "1583710"
  },
  {
    "text": "business reasons and partially for organizational reasons we we just want",
    "start": "1583710",
    "end": "1591090"
  },
  {
    "text": "to be organized about when we move features and two features together into production awesome okay how do you actually",
    "start": "1591090",
    "end": "1600210"
  },
  {
    "text": "maintain the versioning between multiple containers and configurations within the",
    "start": "1600210",
    "end": "1605250"
  },
  {
    "text": "same application so this would be deploying the same pod but a different",
    "start": "1605250",
    "end": "1611100"
  },
  {
    "text": "configuration how do you do you run them in parallel is there some sort of blue-green setup so applications we we",
    "start": "1611100",
    "end": "1622530"
  },
  {
    "text": "don't have many examples where we have the same component deployed in different configurations in the case of the",
    "start": "1622530",
    "end": "1632309"
  },
  {
    "text": "environments the configuration is in the",
    "start": "1632309",
    "end": "1637620"
  },
  {
    "text": "same repository but it's in separate directories for each environment so",
    "start": "1637620",
    "end": "1642990"
  },
  {
    "text": "there's a duplicate in effect okay cool",
    "start": "1642990",
    "end": "1649130"
  },
  {
    "text": "let's see I saw Griffin ax and Flint D",
    "start": "1649130",
    "end": "1657120"
  },
  {
    "text": "in your diagram can you give some details about the metrics you value and the alerting regime you put in place and",
    "start": "1657120",
    "end": "1664620"
  },
  {
    "text": "how do you derive operational insights from the metrics you collect okay yeah",
    "start": "1664620",
    "end": "1670409"
  },
  {
    "text": "sure so we have a methodology which one",
    "start": "1670409",
    "end": "1678179"
  },
  {
    "text": "of our engineers referred to as red and which refers to attempts to refer to the",
    "start": "1678179",
    "end": "1686010"
  },
  {
    "text": "the again increasingly emergent properties oath and that the the",
    "start": "1686010",
    "end": "1692159"
  },
  {
    "text": "industries sort of adopting for this kind of infrastructure and we care about request monitoring requests for second",
    "start": "1692159",
    "end": "1698640"
  },
  {
    "text": "we care about error rates and we care about latency and the infrastructure and the application itself can be consuming",
    "start": "1698640",
    "end": "1706100"
  },
  {
    "text": "resources extremely you know lots of",
    "start": "1706100",
    "end": "1712409"
  },
  {
    "text": "resources but if the if the quality of the service has derived from those three",
    "start": "1712409",
    "end": "1717780"
  },
  {
    "text": "metrics hasn't actually decreased then then we consider that the user",
    "start": "1717780",
    "end": "1723780"
  },
  {
    "text": "experience is being maintained we made changes to optimize the infrastructure and but it's really about that focus on",
    "start": "1723780",
    "end": "1730800"
  },
  {
    "text": "the user awesome okay how are you",
    "start": "1730800",
    "end": "1739290"
  },
  {
    "text": "managing logs or restoring deploys is",
    "start": "1739290",
    "end": "1744660"
  },
  {
    "text": "there a faster way for this or do you offload this totally to the users responsibility logs for the",
    "start": "1744660",
    "end": "1755220"
  },
  {
    "text": "infrastructure and we are using a logging service and so the log data for",
    "start": "1755220",
    "end": "1762600"
  },
  {
    "text": "our own containerized applications and infrastructure that's backing we've cloud is being shipped off the machines",
    "start": "1762600",
    "end": "1769590"
  },
  {
    "text": "as fast as possible and I don't know what that means about restoring deploys",
    "start": "1769590",
    "end": "1775320"
  },
  {
    "text": "and we are most of these application",
    "start": "1775320",
    "end": "1781980"
  },
  {
    "text": "services themselves and stateless and they're operating on back-end services",
    "start": "1781980",
    "end": "1787080"
  },
  {
    "text": "so and we can roll back using the the",
    "start": "1787080",
    "end": "1794250"
  },
  {
    "text": "tooling that we built relatively easily it's a button push for example in in most of the services if we needed a",
    "start": "1794250",
    "end": "1800850"
  },
  {
    "text": "single change to roll that back and that's a case of making a change in the git repository describe the manifest",
    "start": "1800850",
    "end": "1807120"
  },
  {
    "text": "which version we want and then the synchronizer does the job of making the change and I'm not sure if",
    "start": "1807120",
    "end": "1816920"
  },
  {
    "text": "the first way to do this and in the case of users who are using functionality in",
    "start": "1816920",
    "end": "1822110"
  },
  {
    "text": "in weave cloud and then their own applications we're not when a data",
    "start": "1822110",
    "end": "1827690"
  },
  {
    "text": "collection service so that's up to the user awesome",
    "start": "1827690",
    "end": "1834220"
  },
  {
    "text": "okay um let's see does Prometheus live within your kubernetes cluster and if so",
    "start": "1834220",
    "end": "1841010"
  },
  {
    "text": "how you guys handle high availability and resilience or redundancy with in",
    "start": "1841010",
    "end": "1846350"
  },
  {
    "text": "terms of monitoring okay um good question so Prometheus itself our",
    "start": "1846350",
    "end": "1853550"
  },
  {
    "text": "Prometheus does living in the cluster but also and we have Prometheus that's",
    "start": "1853550",
    "end": "1859640"
  },
  {
    "text": "configured to send data and to Prometheus acts as an agent has a remote",
    "start": "1859640",
    "end": "1866750"
  },
  {
    "text": "write functionality so rather than storing the data locally in its in its own container on a volume it's it's",
    "start": "1866750",
    "end": "1873770"
  },
  {
    "text": "sending the data over the network to an API then he looks exactly like Prometheus does it in fact a feature of",
    "start": "1873770",
    "end": "1879980"
  },
  {
    "text": "we cloud so and the production environment sends data to production",
    "start": "1879980",
    "end": "1885230"
  },
  {
    "text": "environment staging environment and staging environment since data both environments as well so um we have",
    "start": "1885230",
    "end": "1892100"
  },
  {
    "text": "duplicate copies of that data for our own purposes but also the user data is",
    "start": "1892100",
    "end": "1897770"
  },
  {
    "text": "stored in exactly the same way so the the data that we receive from users in",
    "start": "1897770",
    "end": "1905270"
  },
  {
    "text": "our production environment is collected and from Prometheus agents that configure to use remote write and the",
    "start": "1905270",
    "end": "1913040"
  },
  {
    "text": "data itself is actually stored in some of those hammers and services that you saw so we use DynamoDB we use s3 and to",
    "start": "1913040",
    "end": "1921280"
  },
  {
    "text": "gain redundancy and high availability it's a data service that doesn't work for us let's see sounds like somebody",
    "start": "1921280",
    "end": "1936650"
  },
  {
    "text": "else is using that sort of get flow or get ops type of mechanism and they call it shadow hands that's pretty cool",
    "start": "1936650",
    "end": "1945220"
  },
  {
    "text": "I'm not sure the sensor is that a maybe that's a better name let's see do you",
    "start": "1946180",
    "end": "1954640"
  },
  {
    "text": "have all your micro-services in one kubernetes cluster or multiple single",
    "start": "1954640",
    "end": "1960010"
  },
  {
    "text": "cluster okay so if one cluster group each environment which is simply so that",
    "start": "1960010",
    "end": "1967660"
  },
  {
    "text": "we can destroy mmm the non production environment independently and operate on",
    "start": "1967660",
    "end": "1976840"
  },
  {
    "text": "there an upgrade version to give the infrastructure itself of cuban ets and so on but all of the infrastructure and",
    "start": "1976840",
    "end": "1983410"
  },
  {
    "text": "apps for the production environment run in single previous sorry cuban it is awesome how does the uh have you guys",
    "start": "1983410",
    "end": "1991690"
  },
  {
    "text": "noticed any drawbacks or experience any issues doing it that way besides obviously the one that we already talked",
    "start": "1991690",
    "end": "1998230"
  },
  {
    "text": "about I mean we were run into the yeah I mean I think we've run into the odd",
    "start": "1998230",
    "end": "2004320"
  },
  {
    "text": "kubernetes bug and but the kubernetes first has been pretty reliable it was",
    "start": "2004320",
    "end": "2010230"
  },
  {
    "text": "and it was the subject of some investigation when we when we started two years ago about which direction to",
    "start": "2010230",
    "end": "2016590"
  },
  {
    "text": "take and we're pretty happy that we picked the right result okay so can you",
    "start": "2016590",
    "end": "2024660"
  },
  {
    "text": "talk just a little bit more more in depth into what we've cloud provides as",
    "start": "2024660",
    "end": "2029910"
  },
  {
    "text": "well and what that enables everybody on everybody on the line to actually start",
    "start": "2029910",
    "end": "2035790"
  },
  {
    "text": "playing with and experiencing for their own kubernetes infrastructure of T so we",
    "start": "2035790",
    "end": "2044490"
  },
  {
    "text": "have a number of separate agents and they the three slides I showed at the",
    "start": "2044490",
    "end": "2049590"
  },
  {
    "text": "beginning and show the courgettes of functionality our deployment automation",
    "start": "2049590",
    "end": "2055040"
  },
  {
    "text": "where and we run a weave agent one of",
    "start": "2055040",
    "end": "2060629"
  },
  {
    "text": "the open source projects I referred to is the core of the agent there and it handles deployment so as I said we cloud",
    "start": "2060630",
    "end": "2067560"
  },
  {
    "text": "deploys we've cloud and we've used that tooling for nearly two years",
    "start": "2067560",
    "end": "2075780"
  },
  {
    "text": "to do that so we the code itself is pretty robust and the product ice version of that in its current form is",
    "start": "2075780",
    "end": "2083600"
  },
  {
    "text": "on a 1.1 release I think today or tomorrow I'm it's going to give you a",
    "start": "2083600",
    "end": "2092570"
  },
  {
    "text": "lot of value because you will be able to do deploys that a fire-and-forget",
    "start": "2092570",
    "end": "2098160"
  },
  {
    "text": "you commit the change semester in your application and the pipeline will build",
    "start": "2098160",
    "end": "2103500"
  },
  {
    "text": "the process and you make the change when that version is available in depository in your inner communities and manifest",
    "start": "2103500",
    "end": "2111240"
  },
  {
    "text": "either manually or you like the agent do that and it can do a fully automatic deploy your week and you can do a",
    "start": "2111240",
    "end": "2116970"
  },
  {
    "text": "button-pushing the UI when you you use the user interface we can give you an",
    "start": "2116970",
    "end": "2124460"
  },
  {
    "text": "time series graphs from the monitoring system that match up to the service your point is one of the things that we we",
    "start": "2124460",
    "end": "2132600"
  },
  {
    "text": "learn as we were doing deploys ourselves was that the engineers would sit with a graph on a dashboard open look at the",
    "start": "2132600",
    "end": "2138600"
  },
  {
    "text": "services that are about to deploy look at the dry run output and then deploy the service and then sit and watch the",
    "start": "2138600",
    "end": "2144810"
  },
  {
    "text": "dashboard and make sure nothing went horribly wrong immediately so we built that kind of workflow directly into the",
    "start": "2144810",
    "end": "2150000"
  },
  {
    "text": "product and and and that's that's our mission which won't build more of those types of time-saving you know improved",
    "start": "2150000",
    "end": "2159840"
  },
  {
    "text": "comprehension workflows and on comprehension and the explore",
    "start": "2159840",
    "end": "2165540"
  },
  {
    "text": "functionality is an open source project called weave scope and it's a visualization tool that looks at",
    "start": "2165540",
    "end": "2173060"
  },
  {
    "text": "connectivity data from and the operating system from the daka API from the",
    "start": "2173060",
    "end": "2180030"
  },
  {
    "text": "kubernetes Orchestrator and builds a model of how the application is talking",
    "start": "2180030",
    "end": "2186330"
  },
  {
    "text": "to different components and internally to the application and externally",
    "start": "2186330",
    "end": "2191700"
  },
  {
    "text": "outsides so what you see there is that a graph of edges and nodes that show you",
    "start": "2191700",
    "end": "2198000"
  },
  {
    "text": "the shape of application the idea there is that it should be the diagram that you would draw on the whiteboard if you",
    "start": "2198000",
    "end": "2204420"
  },
  {
    "text": "were trying to debug an incident or if you were trying to educate a co-worker or maybe even your boss about what the",
    "start": "2204420",
    "end": "2209570"
  },
  {
    "text": "for structure what your application would look like it helps you reason about a model you're working I've been",
    "start": "2209570",
    "end": "2216320"
  },
  {
    "text": "one of the application you're working on if it's the same model that you can look at that's it's a model that's in your",
    "start": "2216320",
    "end": "2221450"
  },
  {
    "text": "head and and then you can interact with it you can open a terminal in the in the",
    "start": "2221450",
    "end": "2227630"
  },
  {
    "text": "browser through to a component if you need to go poke a process and find out what state it's in look at a long stream",
    "start": "2227630",
    "end": "2232730"
  },
  {
    "text": "all those kinds of stage 1 troubleshooting I need to establish what's happening yeah and of course",
    "start": "2232730",
    "end": "2239270"
  },
  {
    "text": "monitoring and alerts are fairly standard feature of an Operations tool today and we have also co-opted another",
    "start": "2239270",
    "end": "2248900"
  },
  {
    "text": "methodology called Buddha by Oda that noodle loop which was originally an",
    "start": "2248900",
    "end": "2254180"
  },
  {
    "text": "american air force strategists way of looking at and battlefield situations",
    "start": "2254180",
    "end": "2259820"
  },
  {
    "text": "and it's a Nana Hannah Graham I sort of my and Buddha stands for Oh",
    "start": "2259820",
    "end": "2268790"
  },
  {
    "text": "Oda stands for observe orient decide act the idea it's a loop whereby you",
    "start": "2268790",
    "end": "2274910"
  },
  {
    "text": "establish what's happening you see what's happening you orient yourself to",
    "start": "2274910",
    "end": "2280910"
  },
  {
    "text": "see how things are connected together or the relationship between the circumstances you're in are and then you",
    "start": "2280910",
    "end": "2286640"
  },
  {
    "text": "make a decision and then you act on that decision and you go round and round and that we think Maps very neatly to the",
    "start": "2286640",
    "end": "2292640"
  },
  {
    "text": "iterative process for writing deploying and debugging software and so we're",
    "start": "2292640",
    "end": "2299150"
  },
  {
    "text": "trying to enable that capability in in wave cloud awesome ok and so how does",
    "start": "2299150",
    "end": "2307100"
  },
  {
    "text": "that actually differ from the open source tools and is there ways that you can actually run weave cloud on-premise",
    "start": "2307100",
    "end": "2314090"
  },
  {
    "text": "or even in your own cloud or like account or how does that work and so you",
    "start": "2314090",
    "end": "2323870"
  },
  {
    "text": "dropped out for a little bit of that Chris could you say again yeah so I was asking if you if there's a way that you",
    "start": "2323870",
    "end": "2329360"
  },
  {
    "text": "can actually run weave cloud like on premise or even in someone in your own your own private cloud accounts for",
    "start": "2329360",
    "end": "2336830"
  },
  {
    "text": "example source tools okay so",
    "start": "2336830",
    "end": "2341920"
  },
  {
    "text": "the open-source tools are for the core functionality so we flux we've scoped",
    "start": "2341920",
    "end": "2347860"
  },
  {
    "text": "and Prometheus and its sister project we've cortex which is the the open",
    "start": "2347860",
    "end": "2355210"
  },
  {
    "text": "source as part of the the data collection things you could run on all",
    "start": "2355210",
    "end": "2361360"
  },
  {
    "text": "of those parts independent of us one of the things that we haven't open sourced",
    "start": "2361360",
    "end": "2367090"
  },
  {
    "text": "and so far is the integrated user interface over the top of that we don't",
    "start": "2367090",
    "end": "2374110"
  },
  {
    "text": "have a full standalone offering for on-premise yet that replicates the entire functionality of weave cloud it",
    "start": "2374110",
    "end": "2379420"
  },
  {
    "text": "is on the roadmap and we can put bits of the open-source projects together to",
    "start": "2379420",
    "end": "2385930"
  },
  {
    "text": "give you the basic functionality so you can get visualization you can get monitoring and you can get deployment",
    "start": "2385930",
    "end": "2391530"
  },
  {
    "text": "but as yet as we're still developing the the joined up workflows that sort of",
    "start": "2391530",
    "end": "2396880"
  },
  {
    "text": "traverse all of these different bits of functionality there's not available in a standalone product ok ok let's see looks",
    "start": "2396880",
    "end": "2407590"
  },
  {
    "text": "like we've got a bunch more questions to come and this is great ok how did it a handle how did it change your guys's",
    "start": "2407590",
    "end": "2414690"
  },
  {
    "text": "operations teams structure culturally any any sort of thing that went into",
    "start": "2414690",
    "end": "2420340"
  },
  {
    "text": "that with this new automation process we",
    "start": "2420340",
    "end": "2427150"
  },
  {
    "text": "have less engineers spending time on ops and we typically have one person who is",
    "start": "2427150",
    "end": "2434170"
  },
  {
    "text": "the designated person for doing operations on a given day and that",
    "start": "2434170",
    "end": "2439530"
  },
  {
    "text": "rotates between the engineering team and",
    "start": "2439530",
    "end": "2444960"
  },
  {
    "text": "the team had it didn't really change how we were doing things because the team set out will it be intensive operating",
    "start": "2445020",
    "end": "2452950"
  },
  {
    "text": "with as much automation as possible we have people in the team who've been s",
    "start": "2452950",
    "end": "2459430"
  },
  {
    "text": "hari's a large cloud companies before so",
    "start": "2459430",
    "end": "2465450"
  },
  {
    "text": "they had brought some of the learnings and methodology from from those environments in as well as um you know",
    "start": "2465450",
    "end": "2474640"
  },
  {
    "text": "new ideas that we had to do with how containers were we're fitting into this world okay that's",
    "start": "2474640",
    "end": "2485500"
  },
  {
    "text": "awesome looks like how do you manage the audit with CI CD are you using JIRA or",
    "start": "2485500",
    "end": "2492940"
  },
  {
    "text": "some kind of change management process maybe that's github and like and get tooling so the audit trail for all",
    "start": "2492940",
    "end": "2503590"
  },
  {
    "text": "changes is in git so we're not using JIRA for that and we are using github for all of our",
    "start": "2503590",
    "end": "2510880"
  },
  {
    "text": "operations as well as for our cocoa development so we have a local private repositories and there are issues filed",
    "start": "2510880",
    "end": "2517690"
  },
  {
    "text": "and people want to make changes to our infrastructure they have to submit appear art to do that so the process is",
    "start": "2517690",
    "end": "2525550"
  },
  {
    "text": "as described in the earlier slides it's it's the standard or increasingly common",
    "start": "2525550",
    "end": "2531610"
  },
  {
    "text": "get workflows that we see developers using perfect let's see can you dig more",
    "start": "2531610",
    "end": "2540250"
  },
  {
    "text": "into we've cortex yes okay so um it's",
    "start": "2540250",
    "end": "2549910"
  },
  {
    "text": "open source so you can go poke there there's a channel slack that we've that",
    "start": "2549910",
    "end": "2555340"
  },
  {
    "text": "works and which is our community slack and there's a core texture on there if you want to ask questions and it's a um",
    "start": "2555340",
    "end": "2564330"
  },
  {
    "text": "public API that looks and behaves exactly the same way as Prometheus does it contains components of Prometheus and",
    "start": "2564330",
    "end": "2572140"
  },
  {
    "text": "some custom code that we've written to handle high volume ingest of the",
    "start": "2572140",
    "end": "2578320"
  },
  {
    "text": "payloads from from a Prometheus agent and it has modifications that allow us",
    "start": "2578320",
    "end": "2584590"
  },
  {
    "text": "to be multi tenant data storage and a number of integrations for different data backends if your interest is in",
    "start": "2584590",
    "end": "2593820"
  },
  {
    "text": "operating a Prometheus compatible system for different groups of users then",
    "start": "2593820",
    "end": "2603990"
  },
  {
    "text": "you're welcome to try cortex out and help us develop it though",
    "start": "2603990",
    "end": "2609070"
  },
  {
    "text": "there there is a small community going around it's developing that project",
    "start": "2609070",
    "end": "2614550"
  },
  {
    "text": "awesome so go check out the actual the weave slack Channel and check out the",
    "start": "2614550",
    "end": "2619630"
  },
  {
    "text": "open source project and get more information yeah cool that's an interesting one so",
    "start": "2619630",
    "end": "2627040"
  },
  {
    "text": "how do you guys actually handle credentials securely since everything is managed through get DUI are you keeping",
    "start": "2627040",
    "end": "2633640"
  },
  {
    "text": "your secrets in there or what do you actually do for for like don't recall",
    "start": "2633640",
    "end": "2644290"
  },
  {
    "text": "the exact function service products that we're using for for some services but",
    "start": "2644290",
    "end": "2649600"
  },
  {
    "text": "services and access and secrets from within the cluster um and they're not",
    "start": "2649600",
    "end": "2657760"
  },
  {
    "text": "written in get as far as I know all",
    "start": "2657760",
    "end": "2664780"
  },
  {
    "text": "right it sounds like we probably have time for one more question so just we work we",
    "start": "2664780",
    "end": "2670750"
  },
  {
    "text": "works work on other other hybrid approaches and what kind of what does it",
    "start": "2670750",
    "end": "2678220"
  },
  {
    "text": "actually provide there I'm not sure what",
    "start": "2678220",
    "end": "2684700"
  },
  {
    "text": "that means so does we work actually we were we've met and we've worked actually helped to",
    "start": "2684700",
    "end": "2690700"
  },
  {
    "text": "build out hybrid cloud on Prem solutions",
    "start": "2690700",
    "end": "2696390"
  },
  {
    "text": "yeah I suppose and okay so we've net acts as a virtual network the docker",
    "start": "2696390",
    "end": "2703630"
  },
  {
    "text": "containers so you can configure part of",
    "start": "2703630",
    "end": "2710920"
  },
  {
    "text": "the network to be in the cloud and part of the network to be on premise we have a number of talks out there where people",
    "start": "2710920",
    "end": "2716080"
  },
  {
    "text": "have demonstrated using weaving it across multiple clouds and we know users are using it to build a network between",
    "start": "2716080",
    "end": "2726010"
  },
  {
    "text": "on-premise and cloud environments and",
    "start": "2726010",
    "end": "2730770"
  },
  {
    "text": "yeah it's pretty flexible it's decentralized networking component with",
    "start": "2731310",
    "end": "2736570"
  },
  {
    "text": "a mesh network design so it's pretty resilient",
    "start": "2736570",
    "end": "2742380"
  },
  {
    "text": "and test it okay on that note we're gonna actually wrap up today's webinar Thanks",
    "start": "2742630",
    "end": "2749970"
  }
]