[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "is rich review the architectural patterns that we see with serverless it's going to be a review of many",
    "start": "0",
    "end": "5790"
  },
  {
    "text": "different architectures different things especially seen from the custom perspective so what our customer is",
    "start": "5790",
    "end": "11160"
  },
  {
    "text": "doing in terms of several days I'm Adrienne Hornsby I'm Technical Evangelist in the same team as Daniela I",
    "start": "11160",
    "end": "17640"
  },
  {
    "text": "didn't write a book unfortunately so I cannot show my books but yeah I've",
    "start": "17640",
    "end": "26099"
  },
  {
    "text": "been using Adobe s for about 10 years 10 11 years now almost and I've been with AWS for two years I started as social",
    "start": "26099",
    "end": "32820"
  },
  {
    "text": "architect and moved to transition to Technical Evangelist role a year ago so",
    "start": "32820",
    "end": "38790"
  },
  {
    "text": "I used worked a lot in architecture that was my job for 10 years so that's why I love kind of that topic this is what",
    "start": "38790",
    "end": "46590"
  },
  {
    "text": "we're gonna try to learn and talk about today is really understand some of the",
    "start": "46590",
    "end": "52079"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "key concepts and service I'm gonna really go fast to that because in a",
    "start": "52079",
    "end": "57270"
  },
  {
    "text": "service track usually everyone goes through the same things so I'm gonna try to skip some of the things and really",
    "start": "57270",
    "end": "63899"
  },
  {
    "text": "talk about the relevant concepts that are for architectures especially then",
    "start": "63899",
    "end": "71159"
  },
  {
    "text": "we're going to go through event processing pipelines and architectures operations web application and finally",
    "start": "71159",
    "end": "77670"
  },
  {
    "text": "data processing data processing in fact is pretty much the biggest use case of",
    "start": "77670",
    "end": "83729"
  },
  {
    "text": "serverless right most people start with lambda function with API gateway because",
    "start": "83729",
    "end": "90600"
  },
  {
    "text": "of the framework like server license things like this but in the in terms of customers and how they use server less",
    "start": "90600",
    "end": "98090"
  },
  {
    "text": "data processing is massive so it's very important that we look at it both from a kinases point of view so streaming data",
    "start": "98090",
    "end": "105210"
  },
  {
    "text": "to the cloud and also from Nyota point of view what are the things that you get when you send data to the cloud without",
    "start": "105210",
    "end": "112649"
  },
  {
    "text": "your team all right so let's browse through some of the key concepts if you",
    "start": "112649",
    "end": "118290"
  },
  {
    "text": "don't see behind just raise your hands they grow I'll just push up the stuff I try to make the slides so that they are",
    "start": "118290",
    "end": "124590"
  },
  {
    "text": "not they are ok but you know you never know so there's so much light here so it's hard to get some contrast well make",
    "start": "124590",
    "end": "132989"
  },
  {
    "text": "it interactive as well if you have some questions just raise your hand if it's a hard question I'll just teach it politely for me this D",
    "start": "132989",
    "end": "145010"
  },
  {
    "text": "we've seen the slides all over again but the most important part today and especially for the architectural part is",
    "start": "145010",
    "end": "151290"
  },
  {
    "text": "this one right the fact that when we talk about it serve less applications is",
    "start": "151290",
    "end": "156569"
  },
  {
    "text": "that we have availability and fault tolerance built-in right and that really",
    "start": "156569",
    "end": "162450"
  },
  {
    "text": "is the strong thing of absurdist is that you do not have operational burden this",
    "start": "162450",
    "end": "170069"
  },
  {
    "text": "is what we want to take out of of your hands so that you can focus on having a",
    "start": "170069",
    "end": "175350"
  },
  {
    "text": "good good run for the business we are focusing on your business logic and application do not have to worry manage",
    "start": "175350",
    "end": "181560"
  },
  {
    "text": "infrastructure scale it so that means two things that means that you need to figure out understand what are the",
    "start": "181560",
    "end": "188340"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "services that really go into that spectrum and when we talk about server less these are the service that really",
    "start": "188340",
    "end": "196040"
  },
  {
    "text": "stand out in terms of taking the operational burden out of your hands",
    "start": "196040",
    "end": "202320"
  },
  {
    "text": "right and especially of course we all know lambda because this is pretty much the service that started this little",
    "start": "202320",
    "end": "209040"
  },
  {
    "text": "serverless revolution but Genesis is extremely massive and s3 is a foundation",
    "start": "209040",
    "end": "215280"
  },
  {
    "text": "of it but if there was not be Amazon s3 this pretty much wouldn't be any server less because let me tell you a little",
    "start": "215280",
    "end": "221670"
  },
  {
    "text": "story we launched AWS lambda in AWS lambda was thought simply to add compute",
    "start": "221670",
    "end": "229140"
  },
  {
    "text": "to s3 right nothing else so the idea was that when you put an object into storage",
    "start": "229140",
    "end": "235040"
  },
  {
    "text": "our customers would want to do some processing on it for example uploading an image extracting metadata exif or",
    "start": "235040",
    "end": "242250"
  },
  {
    "text": "have a document and say take the size of a do some conversion this was the only",
    "start": "242250",
    "end": "248069"
  },
  {
    "text": "use case we had in my name is lambda when it was started right and if you know a little bit how AWS works we work",
    "start": "248069",
    "end": "255120"
  },
  {
    "text": "backward from customers and in fact an over warming part of our customers",
    "start": "255120",
    "end": "260340"
  },
  {
    "text": "feedback was well we want to use lunda for everything else but that",
    "start": "260340",
    "end": "267090"
  },
  {
    "text": "even though it's used a lot for Amazon but basically for Amazon s3 but customers I've opened really the use",
    "start": "267090",
    "end": "274740"
  },
  {
    "text": "case of lambda so that's why I was exploding what it is now and it didn't grates with a lot services DynamoDB as",
    "start": "274740",
    "end": "282030"
  },
  {
    "text": "well extremely important and the quick next question is why are those very important and why do they have torrents",
    "start": "282030",
    "end": "289020"
  },
  {
    "text": "and fault tolerance built-in this is the reason when we talk about regional",
    "start": "289020",
    "end": "294900"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "service and the server less services are usually regional service if not all of them this is what we talk we are saying",
    "start": "294900",
    "end": "301320"
  },
  {
    "text": "that each of the regional services are actually sitting on top of three AZ's",
    "start": "301320",
    "end": "307470"
  },
  {
    "text": "and in my next talk I'm going to talk a lot about availability and reliability and why this is important but if you can",
    "start": "307470",
    "end": "315210"
  },
  {
    "text": "imagine in a region this is a region for example Dublin has several AZ's if you",
    "start": "315210",
    "end": "323220"
  },
  {
    "text": "have a problem in AZ which is everybody's own where your data is sitting or your application is is there",
    "start": "323220",
    "end": "329360"
  },
  {
    "text": "then you still have your service running on top of two others right so easy is",
    "start": "329360",
    "end": "334620"
  },
  {
    "text": "for us are the unit of availability right so when we talk about service services especially regional services",
    "start": "334620",
    "end": "340800"
  },
  {
    "text": "this is what we mean and this is why for polymers the availability is so important because if you wouldn't have",
    "start": "340800",
    "end": "347910"
  },
  {
    "text": "that and you would have to manage the high viability you would have a lot of work to do right so this is something",
    "start": "347910",
    "end": "355800"
  },
  {
    "text": "that for me if you think about server less is the most important thing to remember another thing which I want to",
    "start": "355800",
    "end": "363539"
  },
  {
    "start": "361000",
    "end": "361000"
  },
  {
    "text": "talk quickly is because this is something so that a lot of people have",
    "start": "363539",
    "end": "368789"
  },
  {
    "text": "questions even about it is when you talk about a lambda function there's three things to remember the handler the",
    "start": "368789",
    "end": "375030"
  },
  {
    "text": "handler is just the name of the function is how you gonna call it then you have the event object which is",
    "start": "375030",
    "end": "381389"
  },
  {
    "text": "passed as the first parameter of the function the event object is an event that is passed to the function to",
    "start": "381389",
    "end": "387690"
  },
  {
    "text": "execute so say you have an object that you push it to s3 it creates an event",
    "start": "387690",
    "end": "392700"
  },
  {
    "text": "new object and you pass that to lambda function my event will be the name of the object the name of the object the",
    "start": "392700",
    "end": "399270"
  },
  {
    "text": "name of the pocket at the time of creation right and then",
    "start": "399270",
    "end": "404280"
  },
  {
    "text": "the context is the context on where the lambda function is being executed in the",
    "start": "404280",
    "end": "410490"
  },
  {
    "text": "infrastructure all right so that would be the region that would be the all the",
    "start": "410490",
    "end": "419220"
  },
  {
    "text": "information that is the runtime the programming language support all these kind of things that are important for",
    "start": "419220",
    "end": "424890"
  },
  {
    "text": "you to extract to run your lambda function all right and it's also used",
    "start": "424890",
    "end": "431460"
  },
  {
    "text": "for log groups and and requests like this this is very important because we",
    "start": "431460",
    "end": "436530"
  },
  {
    "text": "always talk about events or context and sometimes it's a bit of a",
    "start": "436530",
    "end": "441710"
  },
  {
    "text": "misunderstanding you've seen this slide I think pretty much everyone in this room was in Daniel sessions so I'm not",
    "start": "441710",
    "end": "448560"
  },
  {
    "start": "442000",
    "end": "442000"
  },
  {
    "text": "going to deep dive on there because Danny will explain it very well those",
    "start": "448560",
    "end": "453690"
  },
  {
    "text": "are the main differences right that we have synchronous and asynchronous invocation of lambda functions",
    "start": "453690",
    "end": "458900"
  },
  {
    "text": "synchronous invocation is me I'm calling it an hour waiting for an answer if it's",
    "start": "458900",
    "end": "465450"
  },
  {
    "text": "asynchronous it means I call it and I go eventually I will receive a notification with an ID of the that I can query to",
    "start": "465450",
    "end": "474960"
  },
  {
    "text": "get that result so there's two ways of invocation invoke a ting that this is",
    "start": "474960",
    "end": "481110"
  },
  {
    "text": "very important especially for for kinases and dynamodb and how we gonna",
    "start": "481110",
    "end": "487229"
  },
  {
    "text": "process the string the second part of the presentation today is a lot around this so understanding that when we push",
    "start": "487229",
    "end": "493290"
  },
  {
    "text": "events in a queue and ordered queue is very important couple of Express best",
    "start": "493290",
    "end": "501600"
  },
  {
    "start": "499000",
    "end": "499000"
  },
  {
    "text": "practices as well that are relevant in that context the most important I would",
    "start": "501600",
    "end": "510180"
  },
  {
    "text": "say separate your lambda function from the core logic so all your database",
    "start": "510180",
    "end": "516120"
  },
  {
    "text": "initialization all these you know things do it outside of the lambda function so",
    "start": "516120",
    "end": "521550"
  },
  {
    "text": "that there are initialized and they can be reused like database pools and connection pools especially use",
    "start": "521550",
    "end": "529560"
  },
  {
    "text": "environment variables to modify things and to pass data that is we they bowl between different functions so",
    "start": "529560",
    "end": "536550"
  },
  {
    "text": "say for example you want a query a bucket s3 buckets or lambda functions do",
    "start": "536550",
    "end": "542520"
  },
  {
    "text": "not hardcore the name of the s3 bucket in the code really pass it as the environmental variable at execution time",
    "start": "542520",
    "end": "551450"
  },
  {
    "text": "self dependencies right so we of course have an environment where you can",
    "start": "551450",
    "end": "558030"
  },
  {
    "text": "execute lambda function and test them right so in this environment so when you go into the console you can already",
    "start": "558030",
    "end": "563100"
  },
  {
    "text": "write code and imports a OSC's and use the AWS CLI which are kind of libraries",
    "start": "563100",
    "end": "572190"
  },
  {
    "text": "that are by default in the platform but when you go in production do not use",
    "start": "572190",
    "end": "577560"
  },
  {
    "text": "that bringing your own libraries always bring your own libraries because",
    "start": "577560",
    "end": "584810"
  },
  {
    "text": "otherwise you have a dependency on us right to maintain the versions of libraries you were using so say for",
    "start": "584810",
    "end": "591870"
  },
  {
    "text": "example you are using a library for doing let's say open CV right this is",
    "start": "591870",
    "end": "599640"
  },
  {
    "text": "for doing machine learning so you're using open CV so you do an import open CV and your code is dependent on version",
    "start": "599640",
    "end": "606360"
  },
  {
    "text": "1.7 and there is an API that is only available on 1.7 if you don't ship it",
    "start": "606360",
    "end": "612930"
  },
  {
    "text": "and we see we don't support 1.7 we support 1.5 then it's not gonna work so",
    "start": "612930",
    "end": "618780"
  },
  {
    "text": "always when you push your code bring your own dependencies write all the code",
    "start": "618780",
    "end": "625050"
  },
  {
    "text": "all the libraries that you is using it doesn't mean that you should bring the entire set of classes for example if you",
    "start": "625050",
    "end": "631440"
  },
  {
    "text": "use Java the entire set of classes to your lambda functions you gonna end up with Java function lambda functions with",
    "start": "631440",
    "end": "638370"
  },
  {
    "text": "Java that are over half a gig so only use the things that you you need also",
    "start": "638370",
    "end": "649230"
  },
  {
    "text": "very important is do leverage x-ray x-ray is the phenomenal to understand",
    "start": "649230",
    "end": "656280"
  },
  {
    "text": "what is happening x-ray is used from the SDK from the client and then it",
    "start": "656280",
    "end": "662820"
  },
  {
    "text": "basically attach an ID to all the requests that is happening on the AWS platform",
    "start": "662820",
    "end": "668339"
  },
  {
    "text": "it's an ID that you can use to build graphs on the UI you would have dependents this graph like this which",
    "start": "668339",
    "end": "675180"
  },
  {
    "text": "would tell you the amount of requests have been successful the the amount of",
    "start": "675180",
    "end": "680309"
  },
  {
    "text": "requests have been unsuccessful but especially that will give you a time that it took for the lambda function say",
    "start": "680309",
    "end": "687870"
  },
  {
    "text": "for invoking an s3 bucket for putting things into DynamoDB so it's a very good",
    "start": "687870",
    "end": "693149"
  },
  {
    "start": "689000",
    "end": "689000"
  },
  {
    "text": "way to visualize problems in your pipelines servlets pipelines and it",
    "start": "693149",
    "end": "699480"
  },
  {
    "text": "really in lambda it takes just one tick to enable it but so really do it and",
    "start": "699480",
    "end": "705149"
  },
  {
    "text": "this is the way you would use it in your code is basically wrap wrap the middle",
    "start": "705149",
    "end": "712230"
  },
  {
    "text": "we're sampling routes on the entire sdk right so you wrap you run the x-ray",
    "start": "712230",
    "end": "721579"
  },
  {
    "text": "around the sdk so it's very some very similar to do monkey patching of the",
    "start": "721579",
    "end": "729029"
  },
  {
    "text": "things these are kind of the exam graph you can get and you see this is when you",
    "start": "729029",
    "end": "736459"
  },
  {
    "start": "731000",
    "end": "731000"
  },
  {
    "text": "you would query mastery bucket you would have the 12-time and then the attempt",
    "start": "736459",
    "end": "742829"
  },
  {
    "text": "and then you can see here the difference between here and here the execution is",
    "start": "742829",
    "end": "749519"
  },
  {
    "text": "simply what people call the cold start right so you probably have seen that and",
    "start": "749519",
    "end": "754709"
  },
  {
    "text": "heard about this as well so the cold start is the first in this first",
    "start": "754709",
    "end": "760620"
  },
  {
    "text": "initialization of the lambda function that means that when you call lambda with the first time we need to deploy an",
    "start": "760620",
    "end": "767339"
  },
  {
    "text": "environment where we can execute that lambda function that means and it's a containerized environment with your",
    "start": "767339",
    "end": "774179"
  },
  {
    "text": "programming language that you support the libraries and the code so it takes",
    "start": "774179",
    "end": "779269"
  },
  {
    "text": "different time where they use Python or Java or C sharp or go but it's something",
    "start": "779269",
    "end": "786179"
  },
  {
    "text": "that you need to be aware of usually Python is very fast GSU's very fast as well Java is much",
    "start": "786179",
    "end": "793499"
  },
  {
    "text": "slower because we need to start the GPM sensing lightness but those other things there's a bunch of frameworks that you",
    "start": "793499",
    "end": "799949"
  },
  {
    "start": "797000",
    "end": "797000"
  },
  {
    "text": "can use I'm a huge fan of the server let's promote because this is where I started the thing but I",
    "start": "799949",
    "end": "808160"
  },
  {
    "text": "slowly move as well to Tucson because in fact pretty much everything I do now I",
    "start": "808160",
    "end": "815000"
  },
  {
    "text": "use Sam or CloudFormation because it integrates very well I use",
    "start": "815000",
    "end": "820760"
  },
  {
    "text": "CloudFormation a lot before when we went server less there was it's complicated to write everything in in cloud",
    "start": "820760",
    "end": "827930"
  },
  {
    "text": "formation and if you are interested and you are good at say expressjs for",
    "start": "827930",
    "end": "834200"
  },
  {
    "text": "example there is directly a code on the",
    "start": "834200",
    "end": "840020"
  },
  {
    "text": "AWS lab that you can start using to deploy your lambda functions both in",
    "start": "840020",
    "end": "845350"
  },
  {
    "text": "with expressjs well interesting things a call out those are to Zappa which is",
    "start": "845350",
    "end": "851480"
  },
  {
    "text": "pretty great Sparta is a go-go framework it's pretty good as well a lot of stuff",
    "start": "851480",
    "end": "857750"
  },
  {
    "text": "so let's take a look at the first set of architectures and even processing is",
    "start": "857750",
    "end": "864110"
  },
  {
    "text": "really the kind of the initial ID as I said how we wanted lambda to be to be",
    "start": "864110",
    "end": "871130"
  },
  {
    "text": "used which was get an event from an s3 bucket and and process it so I never and",
    "start": "871130",
    "end": "877550"
  },
  {
    "start": "876000",
    "end": "876000"
  },
  {
    "text": "driven is for me the world runs even driven right when I talk to you and you answer to me is even driven you do not",
    "start": "877550",
    "end": "883640"
  },
  {
    "text": "ask me all day long information we really were waiting for events to happen",
    "start": "883640",
    "end": "889070"
  },
  {
    "text": "so I really like this paradigm especially for for software development so for lambda is really simple there's",
    "start": "889070",
    "end": "896570"
  },
  {
    "text": "an invocation and whether you do it synchronous so I synchronously and then there's an action nothing more complicated than that and the good thing",
    "start": "896570",
    "end": "904370"
  },
  {
    "text": "is we started with s3 but now there's a bunch of services that integrates and are able to pass events to to lambda and",
    "start": "904370",
    "end": "911810"
  },
  {
    "text": "lambda then further is able to query and pass that event pretty much anything",
    "start": "911810",
    "end": "917330"
  },
  {
    "text": "line because you can write your own code there it integrates very nicely with with",
    "start": "917330",
    "end": "924290"
  },
  {
    "text": "those services natively and the first event as I say is really was that s3",
    "start": "924290",
    "end": "930770"
  },
  {
    "text": "bucket event so when you put for example an image",
    "start": "930770",
    "end": "936200"
  },
  {
    "text": "in the s3 bucket and you want to resize it that's a genuine lick good use case",
    "start": "936200",
    "end": "943460"
  },
  {
    "text": "for lambda because if you had to build resize resizing or some naming systems",
    "start": "943460",
    "end": "949820"
  },
  {
    "text": "four or five years ago it usually had the machine sitting needle and then you",
    "start": "949820",
    "end": "956960"
  },
  {
    "text": "would have to to query but the problem is there is an ec2 instance running just waiting to execute few times on the day",
    "start": "956960",
    "end": "964070"
  },
  {
    "text": "there's some nailing and or resizing and now really it's like just happen when",
    "start": "964070",
    "end": "969860"
  },
  {
    "text": "things really move in the s3 bucket so this is really a genuine genuinely good",
    "start": "969860",
    "end": "976250"
  },
  {
    "text": "way of using lambda function to trigger s3 van and in fact you have lots of different events that you can get from",
    "start": "976250",
    "end": "985220"
  },
  {
    "text": "s3 but this is one of the best use case resizing image or you can extract",
    "start": "985220",
    "end": "990650"
  },
  {
    "text": "information metadata I'll make a I'll show you a demo about how you can extract and convert everything with step",
    "start": "990650",
    "end": "997460"
  },
  {
    "text": "functions as well there's a live demo onion the second thing is which happened",
    "start": "997460",
    "end": "1002710"
  },
  {
    "start": "1000000",
    "end": "1000000"
  },
  {
    "text": "very fast and this is for really event-driven but it's already related to",
    "start": "1002710",
    "end": "1008530"
  },
  {
    "text": "Big Data you're probably aware of Amazon s3 right Amazon s3 is the storage that",
    "start": "1008530",
    "end": "1015070"
  },
  {
    "text": "we use and customers use extensively to store both very hot data data that you",
    "start": "1015070",
    "end": "1021490"
  },
  {
    "text": "want to use on daily basis or very cold data archive data so there's a way for you to move the data in different tiers",
    "start": "1021490",
    "end": "1028480"
  },
  {
    "text": "from hot to cold right so s3 has become very the de-facto science standard to store data on the cloud and the big",
    "start": "1028480",
    "end": "1037810"
  },
  {
    "text": "problem was that there is when you store data is that it's there's a lot of dirty",
    "start": "1037810",
    "end": "1043870"
  },
  {
    "text": "data right you need to clean it you need to process it you need to verify that",
    "start": "1043870",
    "end": "1048940"
  },
  {
    "text": "the content that you're for example customers are uploading is valid for example if you have an application and",
    "start": "1048940",
    "end": "1055270"
  },
  {
    "text": "your users uploading videos you don't want people to upload runnable or exit",
    "start": "1055270",
    "end": "1060310"
  },
  {
    "text": "poll code right so you would have way here for example a lambda function to",
    "start": "1060310",
    "end": "1065890"
  },
  {
    "text": "verify that everything which is pushed into s3 bucket is valid is content that is",
    "start": "1065890",
    "end": "1072789"
  },
  {
    "text": "not tampered with that it's not dangerous or you know that all these",
    "start": "1072789",
    "end": "1078549"
  },
  {
    "text": "kind of stuff so this architecture in this model has become very very popular",
    "start": "1078549",
    "end": "1084850"
  },
  {
    "text": "we have where we would have a staging layer and then the production validated",
    "start": "1084850",
    "end": "1092799"
  },
  {
    "text": "layer and in fact you can have many different layers or you can fan out as well it's very expandable paradigm but",
    "start": "1092799",
    "end": "1100779"
  },
  {
    "text": "and did nonetheless very very very useful especially if you go into big data and you want to clean the data I",
    "start": "1100779",
    "end": "1106419"
  },
  {
    "text": "say for example I upload Jason files and then you would have your system querying",
    "start": "1106419",
    "end": "1114549"
  },
  {
    "text": "directly the adjacent file on the s3 bucket there's a lot of of moments where",
    "start": "1114549",
    "end": "1119799"
  },
  {
    "text": "you might have malformed JSON data and that will crush the system's right some very good use cases for each of the JSON",
    "start": "1119799",
    "end": "1127389"
  },
  {
    "text": "objects that is pushed into s3 you have a violation but validation layers that actually make sure your JSON object for",
    "start": "1127389",
    "end": "1133809"
  },
  {
    "text": "example is well-formed today's doesn't crash the rest of the thing or you can do computation combined object",
    "start": "1133809",
    "end": "1139870"
  },
  {
    "text": "change the format so this is very very important pattern used by overwhelming",
    "start": "1139870",
    "end": "1145840"
  },
  {
    "text": "number of customers on AWS if you want a",
    "start": "1145840",
    "end": "1151210"
  },
  {
    "start": "1150000",
    "end": "1150000"
  },
  {
    "text": "little bit more complex use on xi we launched step function so step function",
    "start": "1151210",
    "end": "1157990"
  },
  {
    "text": "is very simple is a way to orchestrate the execution of lambda function one",
    "start": "1157990",
    "end": "1163750"
  },
  {
    "text": "after another in parallel or in series so say that you it's a state machine",
    "start": "1163750",
    "end": "1171279"
  },
  {
    "text": "right say put it simply it's a state machine that you can control with an API you can start and stuff and then all the",
    "start": "1171279",
    "end": "1179110"
  },
  {
    "text": "different execution nodes are lambda functions and you can then tie them together to execute your code so let's",
    "start": "1179110",
    "end": "1186309"
  },
  {
    "text": "show an example and this is a live demo I'll do this is an application that will",
    "start": "1186309",
    "end": "1192100"
  },
  {
    "text": "run on my on my local machine I'm uploading a photo into s3 and then I've",
    "start": "1192100",
    "end": "1197139"
  },
  {
    "text": "along the function that will start a state state machine here step function",
    "start": "1197139",
    "end": "1203450"
  },
  {
    "text": "initialize it and start it and the step function will do three things it will extract information from the from the",
    "start": "1203450",
    "end": "1210919"
  },
  {
    "text": "object so the metadata exif and all this kind of stuff it will start converting and generating some nails and then",
    "start": "1210919",
    "end": "1217519"
  },
  {
    "text": "important thing you will also call recognition and if you don't know what recognition is it's an artificial",
    "start": "1217519",
    "end": "1225080"
  },
  {
    "text": "intelligence service that we launched a year and a half ago or yeah some Salada",
    "start": "1225080",
    "end": "1230960"
  },
  {
    "text": "that allows you to extract information from image scenes objects so you get",
    "start": "1230960",
    "end": "1237740"
  },
  {
    "text": "tags automatic tagging of your images so very very powerful services but let's",
    "start": "1237740",
    "end": "1244070"
  },
  {
    "text": "look at them and so this is our my application my node application runs",
    "start": "1244070",
    "end": "1251029"
  },
  {
    "text": "locally is very simple do not look at the UI it's terrible but it's not you",
    "start": "1251029",
    "end": "1260330"
  },
  {
    "text": "know the way to me and say I'm uploading photo - the upload is gonna happen to s",
    "start": "1260330",
    "end": "1268010"
  },
  {
    "text": "3 s 3 will trigger a lambda function that will trigger the step function so",
    "start": "1268010",
    "end": "1273080"
  },
  {
    "text": "there we go the uploading of the photo is done the lambda function is executed is already returning the step function",
    "start": "1273080",
    "end": "1282070"
  },
  {
    "text": "execution ID and then that's pretty much it and then I have my photos here which",
    "start": "1282070",
    "end": "1288110"
  },
  {
    "text": "I've loaded the tag extracted and it's some nail so it's very powerful way of",
    "start": "1288110",
    "end": "1293500"
  },
  {
    "text": "of creating surveillance architecture in fact that pattern just explained here is",
    "start": "1293500",
    "end": "1299179"
  },
  {
    "text": "and especially the second part here that one is extremely useful for indexing",
    "start": "1299179",
    "end": "1307940"
  },
  {
    "text": "large amount of data that you have in s3 so you could have for example a lambda",
    "start": "1307940",
    "end": "1313220"
  },
  {
    "text": "function here that introspect all the content that you have in s3 bucket and",
    "start": "1313220",
    "end": "1318860"
  },
  {
    "text": "start to invoke the other lambda functions and we have customers that done that you know index the entire set",
    "start": "1318860",
    "end": "1325010"
  },
  {
    "text": "of images they had of videos as well because now recognitions reports video",
    "start": "1325010",
    "end": "1330399"
  },
  {
    "text": "videos so you can extract metadata from videos as well so very nice clean use case and again the good thing",
    "start": "1330399",
    "end": "1337260"
  },
  {
    "text": "is highly available if you have an issue on a ability zone the system would still",
    "start": "1337260",
    "end": "1344160"
  },
  {
    "text": "run if you don't use it you don't pay the only thing you pay is here content",
    "start": "1344160",
    "end": "1349919"
  },
  {
    "text": "sitting into s3 and if you have content into dynamodb let's say you will be",
    "start": "1349919",
    "end": "1356630"
  },
  {
    "text": "dynamodb but now you can actually scale down DynamoDB automatically to zero so",
    "start": "1356630",
    "end": "1361650"
  },
  {
    "text": "that means it's gonna be very very cheap to use those an event driven size just",
    "start": "1361650",
    "end": "1368700"
  },
  {
    "start": "1368000",
    "end": "1368000"
  },
  {
    "text": "more in my opinion it's pretty beautiful the second patterns that we see a lot",
    "start": "1368700",
    "end": "1375299"
  },
  {
    "text": "and Daniel also mentioned those are in operation and I would even go to say",
    "start": "1375299",
    "end": "1382500"
  },
  {
    "text": "that they were made very very popular by Netflix right they have something which is called trust but verify and this fits",
    "start": "1382500",
    "end": "1389850"
  },
  {
    "text": "very well into those those are architectural patterns and in fact what",
    "start": "1389850",
    "end": "1394950"
  },
  {
    "text": "they do is they use a particular thing in lambda which you can invoke lambda",
    "start": "1394950",
    "end": "1401250"
  },
  {
    "text": "like a cron job so that means that you can set up a schedule say my lambda",
    "start": "1401250",
    "end": "1407940"
  },
  {
    "text": "function has to be executed every 15 minute or every 30 minute once a day this kind of stuff so that you can have",
    "start": "1407940",
    "end": "1416040"
  },
  {
    "text": "lambda automatically replace any of the squad job you have and that's pretty cool because you can also in fact define",
    "start": "1416040",
    "end": "1423110"
  },
  {
    "text": "the scheduling the same way you define cron job with the same cron job syntax and those are kind of the different",
    "start": "1423110",
    "end": "1431429"
  },
  {
    "text": "things you can do I'm gonna show a couple of of those pattern here and one",
    "start": "1431429",
    "end": "1440220"
  },
  {
    "start": "1439000",
    "end": "1439000"
  },
  {
    "text": "of the I think when I talk with customers and in the last two years and",
    "start": "1440220",
    "end": "1446250"
  },
  {
    "text": "especially also when I use data via the biggest problem we had is is knowing",
    "start": "1446250",
    "end": "1452580"
  },
  {
    "text": "what belong to whom right so there was we were a lot of people working and then",
    "start": "1452580",
    "end": "1458100"
  },
  {
    "text": "people start an instance and they were not tagged they were not named according to conventions and then two weeks after",
    "start": "1458100",
    "end": "1464070"
  },
  {
    "text": "is like what is that and so taggings are great but the thing",
    "start": "1464070",
    "end": "1469350"
  },
  {
    "text": "is humans on so this it's very important to automate",
    "start": "1469350",
    "end": "1475270"
  },
  {
    "text": "tagging right and a pattern like this is very very useful that's a pattern that",
    "start": "1475270",
    "end": "1480929"
  },
  {
    "text": "use cloud watch event to detect when a resource is being started on the",
    "start": "1480929",
    "end": "1487120"
  },
  {
    "text": "platform right most of the resources that you can start for example if you start an ec2 instance generate an event",
    "start": "1487120",
    "end": "1493419"
  },
  {
    "text": "which is run instant star instance stop instance terminate instance all those",
    "start": "1493419",
    "end": "1499539"
  },
  {
    "text": "are passed as a as an event to the entire platform which can be caught by",
    "start": "1499539",
    "end": "1504880"
  },
  {
    "text": "cloud wash and then pass on to lambda to be executed and this is exactly exactly what happens here is if I'm starting an",
    "start": "1504880",
    "end": "1512679"
  },
  {
    "text": "instance and I forget to tag it I still have mine did my end identity because I",
    "start": "1512679",
    "end": "1519370"
  },
  {
    "text": "started this stuff and I logged in I use an API which had my credential so I have something called the principal ID which",
    "start": "1519370",
    "end": "1527169"
  },
  {
    "text": "represent the idea of of myself and when you have that event being broadcasted to",
    "start": "1527169",
    "end": "1535030"
  },
  {
    "text": "the platform it's passed in this event JSON object like which is it passed the",
    "start": "1535030",
    "end": "1540280"
  },
  {
    "text": "ID principal ID of who started the resource so you can catch it and then add it as a tag to the insert and this",
    "start": "1540280",
    "end": "1548740"
  },
  {
    "text": "is very very good because it means if you forget to start resources and always",
    "start": "1548740",
    "end": "1553870"
  },
  {
    "text": "happen especially in tests or just when you start playing at the beginning then you end up with tons of resources that",
    "start": "1553870",
    "end": "1559929"
  },
  {
    "text": "you don't know what they are and we are always often scared of stopping things",
    "start": "1559929",
    "end": "1566350"
  },
  {
    "text": "we don't know what they are so this saves a lot of trouble another pattern",
    "start": "1566350",
    "end": "1572500"
  },
  {
    "start": "1571000",
    "end": "1571000"
  },
  {
    "text": "which is very similar and this was done by Capital One and there is you can",
    "start": "1572500",
    "end": "1577570"
  },
  {
    "text": "access the entire documentation and the open source state as well is called",
    "start": "1577570",
    "end": "1582640"
  },
  {
    "text": "cloud custodian and they do very similar things on different levels so they catch cloud trails cloud watch events and then",
    "start": "1582640",
    "end": "1592240"
  },
  {
    "text": "they are used the same pattern to enforce rule and compliance so for",
    "start": "1592240",
    "end": "1597640"
  },
  {
    "text": "example if you start an ec2 instance and you don't have the right version of",
    "start": "1597640",
    "end": "1602740"
  },
  {
    "text": "kernel the system will automatically detect send a notification or even you can force it to stop the instance right so",
    "start": "1602740",
    "end": "1609379"
  },
  {
    "text": "you say oh this easy to instance actually doesn't have the last security patch let's stop it automatically this",
    "start": "1609379",
    "end": "1615320"
  },
  {
    "text": "is very good way to prevent things from running in your environment that are not",
    "start": "1615320",
    "end": "1621289"
  },
  {
    "text": "compliant with your policies man and then send notifications about it so this",
    "start": "1621289",
    "end": "1627350"
  },
  {
    "text": "is very interesting thing and this is exactly the pattern is well that Netflix does with trust but verify they allow",
    "start": "1627350",
    "end": "1634519"
  },
  {
    "text": "pretty much any developer to start resources but they have lambda functions",
    "start": "1634519",
    "end": "1640549"
  },
  {
    "text": "that automatically check that everything which is started is according to compliance the right version of library",
    "start": "1640549",
    "end": "1646940"
  },
  {
    "text": "is the right version of security patches the right versions of everything the right security group the right s keys",
    "start": "1646940",
    "end": "1654350"
  },
  {
    "text": "all these kind of things that you don't want to manually check and it's very",
    "start": "1654350",
    "end": "1659659"
  },
  {
    "text": "easy to enforce that account level and even as a group of accounts or in in",
    "start": "1659659",
    "end": "1666580"
  },
  {
    "text": "organization and lastly as I said you can share do your backup and this is a",
    "start": "1666580",
    "end": "1673580"
  },
  {
    "start": "1669000",
    "end": "1669000"
  },
  {
    "text": "very good pattern for example for organizations that require more or more regular backup than for example the",
    "start": "1673580",
    "end": "1681830"
  },
  {
    "text": "default backup so in redshift you have default backups every 15 minute if our Rico and some customers need to have",
    "start": "1681830",
    "end": "1687919"
  },
  {
    "text": "more backups so every three minutes so you would have this kind of things in",
    "start": "1687919",
    "end": "1693769"
  },
  {
    "text": "force through a lambda functions you can use that the same pattern for your databases or dynamodb all this kind of",
    "start": "1693769",
    "end": "1701990"
  },
  {
    "text": "stuff simply the pattern is very very powerful again in AI something that has",
    "start": "1701990",
    "end": "1709879"
  },
  {
    "text": "started to pop up a lot is this pattern and poly if actually I can't do more",
    "start": "1709879",
    "end": "1717259"
  },
  {
    "text": "quickly do you know what is poly I mean do you quickly so that",
    "start": "1717259",
    "end": "1723940"
  },
  {
    "text": "poly is a AI service that converts text to two boys right so for example and",
    "start": "1726750",
    "end": "1732840"
  },
  {
    "text": "I'll do it in Swedish because it's easier for you but did you hear anything",
    "start": "1732840",
    "end": "1744710"
  },
  {
    "text": "let's do it the projector doesn't work",
    "start": "1744710",
    "end": "1750780"
  },
  {
    "text": "so let's did you hear it's good uncle",
    "start": "1750780",
    "end": "1764670"
  },
  {
    "text": "so that's poly right so and it's very simple to use it's new AI service that was launched again a year and something",
    "start": "1764670",
    "end": "1771000"
  },
  {
    "text": "ago year-and-a-half the previous reinvent and it's very powerful because you can send any text and it will return",
    "start": "1771000",
    "end": "1776760"
  },
  {
    "text": "you an mp3 or a stream of the audio and people have started to use it very",
    "start": "1776760",
    "end": "1781950"
  },
  {
    "text": "extensively especially in the a synchronous mode so that every time you push new data into a website for example",
    "start": "1781950",
    "end": "1788910"
  },
  {
    "text": "or in the you create automatically a podcast right Washington Post is",
    "start": "1788910",
    "end": "1794520"
  },
  {
    "text": "starting to do that we this is a lot of different customers duolingo is the app",
    "start": "1794520",
    "end": "1801660"
  },
  {
    "text": "that you can learn languages is using Pali to synthesize all the voices so",
    "start": "1801660",
    "end": "1807090"
  },
  {
    "text": "it's very popular thing to to share though for example a I jog and I just",
    "start": "1807090",
    "end": "1812550"
  },
  {
    "text": "use Pali as a as an example but it could be recognition it could be any other AI",
    "start": "1812550",
    "end": "1818310"
  },
  {
    "text": "model that you have in mind and if you are interested there is the code available on my github account you",
    "start": "1818310",
    "end": "1827280"
  },
  {
    "text": "want to check for all the slides are gonna be available offline do not work",
    "start": "1827280",
    "end": "1833360"
  },
  {
    "text": "most important is to tweet everything that's the most important just Twitter all day long then another pattern is the",
    "start": "1833630",
    "end": "1842850"
  },
  {
    "text": "oops motto motto motto motto and this is also a pattern that has been published in our",
    "start": "1842850",
    "end": "1850490"
  },
  {
    "start": "1849000",
    "end": "1849000"
  },
  {
    "text": "website and this is a general patterns that you can take and optimize for your",
    "start": "1850490",
    "end": "1856080"
  },
  {
    "text": "personal use case and this is how it would can can work but it's one-click",
    "start": "1856080",
    "end": "1862760"
  },
  {
    "text": "deployment and then you can just affect the different resources that you want to",
    "start": "1862760",
    "end": "1868280"
  },
  {
    "text": "monitor the execution and things is but it setups the entire project for you",
    "start": "1868280",
    "end": "1874280"
  },
  {
    "text": "with one click and explains how to modify and tune it for your use cases",
    "start": "1874280",
    "end": "1880990"
  },
  {
    "text": "this is where it is the next pattern",
    "start": "1883390",
    "end": "1888620"
  },
  {
    "text": "which is of course very popular and we've talked about it is web applications right and as I say API",
    "start": "1888620",
    "end": "1896510"
  },
  {
    "start": "1893000",
    "end": "1893000"
  },
  {
    "text": "gateway or as Daniel Lawson showed very well API gateway it's kind of the",
    "start": "1896510",
    "end": "1901780"
  },
  {
    "text": "foundation to being able to do that because by default an API a lambda",
    "start": "1901780",
    "end": "1907700"
  },
  {
    "text": "function doesn't I have an API endpoint right so when you want to query a lambda function from the internet you need to",
    "start": "1907700",
    "end": "1913789"
  },
  {
    "text": "give it an API endpoint therefore you need to use an API gateway and now we have the proxy method which by default",
    "start": "1913789",
    "end": "1920870"
  },
  {
    "text": "will just take any request and forward it to the lambda function which makes it very easy to use lambda functions with",
    "start": "1920870",
    "end": "1928549"
  },
  {
    "text": "API gateway so basically this is how a classic web app would look like and if",
    "start": "1928549",
    "end": "1935390"
  },
  {
    "text": "you remember the one I had on my computer that I did the demo of very similar use cases I have an s3 bucket",
    "start": "1935390",
    "end": "1942320"
  },
  {
    "text": "with platform distribution to serve the content the static content so all the",
    "start": "1942320",
    "end": "1947900"
  },
  {
    "text": "images and videos and then you have the dynamic content coming from the lambda function so people and customers have",
    "start": "1947900",
    "end": "1955490"
  },
  {
    "text": "build entire websites use the pattern yes there the question already",
    "start": "1955490",
    "end": "1961330"
  },
  {
    "text": "yeah in sorry yep",
    "start": "1963830",
    "end": "1972160"
  },
  {
    "text": "in VPC you mean yeah so you can have a V PC endpoint now with your lambda",
    "start": "1972160",
    "end": "1978500"
  },
  {
    "text": "function so your lambda function can be executed in V PC so that's entirely possible to do it like this as well so",
    "start": "1978500",
    "end": "1986530"
  },
  {
    "text": "you will need a V PC endpoint for API gateway so in practice no because",
    "start": "1987490",
    "end": "1993770"
  },
  {
    "text": "currently API gateway doesn't support V PC endpoint all right but here your lambda function can be can be acquired",
    "start": "1993770",
    "end": "2002260"
  },
  {
    "text": "within the V PC and then you would have fan out options there it's not as clean",
    "start": "2002260",
    "end": "2007570"
  },
  {
    "text": "as what you would want to have an API endpoint within the V PC right and the",
    "start": "2007570",
    "end": "2016540"
  },
  {
    "text": "default way of securing access to those API is really Amazon canítö if you don't",
    "start": "2016540",
    "end": "2023500"
  },
  {
    "text": "know what Amazon canítö is mission for today really have a look at it it's extremely useful service it allows you",
    "start": "2023500",
    "end": "2030670"
  },
  {
    "text": "to do pretty much one line of code or two lines of code to do authentication",
    "start": "2030670",
    "end": "2037000"
  },
  {
    "text": "in any of the services right so it's very nicely used there is especially now that we support user pools so you can",
    "start": "2037000",
    "end": "2044680"
  },
  {
    "text": "have all your users stored in our canítö user pools and then manage",
    "start": "2044680",
    "end": "2050550"
  },
  {
    "text": "authentication line is and it works I'll go back to this use case but it works like this you you have your your browser",
    "start": "2050550",
    "end": "2062320"
  },
  {
    "text": "basically all the static content would be protected from cloud phone you can",
    "start": "2062320",
    "end": "2067330"
  },
  {
    "text": "use either geo restriction you can use sine cookies on URLs for the content that the store into s3 is three support",
    "start": "2067330",
    "end": "2075310"
  },
  {
    "text": "very strong encryption both with your own keys or with kms service if you want",
    "start": "2075310",
    "end": "2082179"
  },
  {
    "text": "to encrypt data there and you have two ways of securing your your bucket access",
    "start": "2082179",
    "end": "2088389"
  },
  {
    "text": "through either policy or ACLs and then the API gateway as Daniel o said",
    "start": "2088390",
    "end": "2093970"
  },
  {
    "text": "supports the throttling API is a caching and of course user plan",
    "start": "2093970",
    "end": "2099880"
  },
  {
    "text": "if you want to monetize your API and then all those are using I am Roth so",
    "start": "2099880",
    "end": "2106870"
  },
  {
    "text": "the securities is very well defined across the entire spectrum and again this is how Co Neto works is especially",
    "start": "2106870",
    "end": "2116920"
  },
  {
    "text": "through a customer authorizer here but your client requests a cognitive ID so",
    "start": "2116920",
    "end": "2124630"
  },
  {
    "text": "whether you're you want to use sam'l or open ID connects like Twitter Facebook",
    "start": "2124630",
    "end": "2130950"
  },
  {
    "text": "Google they will give you a token which then you can pass to the API gateway and",
    "start": "2130950",
    "end": "2136900"
  },
  {
    "start": "2136000",
    "end": "2136000"
  },
  {
    "text": "then API gateway will use a custom authorize or to verify that you are really doing the the one making the",
    "start": "2136900",
    "end": "2142780"
  },
  {
    "text": "request so this is a very classic standard way to authorize api's to your",
    "start": "2142780",
    "end": "2148510"
  },
  {
    "text": "API gateway yeah you have to to type",
    "start": "2148510",
    "end": "2155530"
  },
  {
    "text": "whether you pass the token or then through the request with header",
    "start": "2155530",
    "end": "2160750"
  },
  {
    "text": "parameters and stage variables as well query strings something that also I will",
    "start": "2160750",
    "end": "2167740"
  },
  {
    "start": "2164000",
    "end": "2164000"
  },
  {
    "text": "talk more I have a full session on that and dwelling into reliability availability especially for deploying",
    "start": "2167740",
    "end": "2175600"
  },
  {
    "text": "multi-region infrastructures now api gateways supports regional endpoint",
    "start": "2175600",
    "end": "2181540"
  },
  {
    "text": "right so as daniel said initially when we launched api gateway there was a cloud from distribution attached to it",
    "start": "2181540",
    "end": "2188230"
  },
  {
    "text": "by default and there was no way for you to get out of it that means that you were limited by especially using a",
    "start": "2188230",
    "end": "2196780"
  },
  {
    "text": "custom domain name it was not easy to integrate Raftis right 53 to it or it",
    "start": "2196780",
    "end": "2202210"
  },
  {
    "text": "was actually not easy it was impossible so now we we support custom domain name",
    "start": "2202210",
    "end": "2208600"
  },
  {
    "text": "that means that your api general does not have a cloud form distribution in",
    "start": "2208600",
    "end": "2213700"
  },
  {
    "text": "front of it anymore so that means that you can now use route 53 to do CM cname",
    "start": "2213700",
    "end": "2224100"
  },
  {
    "text": "routing right so and there's a lot of different routing policy that will go through the",
    "start": "2224100",
    "end": "2229750"
  },
  {
    "text": "presentation if you're interested but for example latency based routing and there is failovers there are regional",
    "start": "2229750",
    "end": "2236860"
  },
  {
    "text": "and things like so it's very interesting way now using it the whoops the next",
    "start": "2236860",
    "end": "2247250"
  },
  {
    "text": "pattern the X pattern I want to talk about which I think is it's very",
    "start": "2247250",
    "end": "2253550"
  },
  {
    "text": "important is the data processing architecture and here we're going to start with the kinases based apps but",
    "start": "2253550",
    "end": "2260540"
  },
  {
    "text": "first I want to talk a little bit what we mean by processing real time and especially what's the processing",
    "start": "2260540",
    "end": "2266480"
  },
  {
    "text": "pipeline and usually it slices you have ingest you transform the data you want",
    "start": "2266480",
    "end": "2271730"
  },
  {
    "text": "to analyze the data react on it and then persist it so and many of those stages",
    "start": "2271730",
    "end": "2278080"
  },
  {
    "text": "need to have storage right so what the default storage then we use for data",
    "start": "2278080",
    "end": "2284570"
  },
  {
    "text": "processing so basically in the entire",
    "start": "2284570",
    "end": "2291280"
  },
  {
    "start": "2289000",
    "end": "2289000"
  },
  {
    "text": "foundations of all the architectures that you will see around data processing s3 is going to be there because it has a",
    "start": "2291280",
    "end": "2298640"
  },
  {
    "text": "lot of capability in if you remember the staging and the production bucket",
    "start": "2298640",
    "end": "2304190"
  },
  {
    "text": "basically you would have pretty much bucket for every stage here because",
    "start": "2304190",
    "end": "2309410"
  },
  {
    "text": "every stage takes power sex energies they compute and you don't want to waste",
    "start": "2309410",
    "end": "2314990"
  },
  {
    "text": "that right so there you can always go back to the previous stage I always say always store the raw data this is you",
    "start": "2314990",
    "end": "2321740"
  },
  {
    "text": "cannot recreate it and as I said also s3",
    "start": "2321740",
    "end": "2327890"
  },
  {
    "start": "2325000",
    "end": "2325000"
  },
  {
    "text": "supports three tiers three classes the standard the infrequent access and the",
    "start": "2327890",
    "end": "2333790"
  },
  {
    "text": "glacier and this is really for how hot is your data so if your data is really",
    "start": "2333790",
    "end": "2339710"
  },
  {
    "text": "hot that means you're using it a lot you would want it to be in standard standard if you don't use it too often so like a",
    "start": "2339710",
    "end": "2346400"
  },
  {
    "text": "couple of times a month or you would put in infrequent access why because your costs are reduced by",
    "start": "2346400",
    "end": "2354230"
  },
  {
    "text": "half and then if you don't use it you would use it push into s3 and what we",
    "start": "2354230",
    "end": "2360410"
  },
  {
    "text": "realize actually across many many customers is the access pattern of data goes like",
    "start": "2360410",
    "end": "2367300"
  },
  {
    "text": "30 days so very active now then at 30 days it reaches almost 50% 90 days it's",
    "start": "2367300",
    "end": "2374830"
  },
  {
    "text": "almost gone zero it doesn't mean the applies to everybody it means in general having an",
    "start": "2374830",
    "end": "2381040"
  },
  {
    "text": "ID that the data that you store in your organization doesn't have to reside all",
    "start": "2381040",
    "end": "2387280"
  },
  {
    "text": "the time in the most active and hot storage right you can access the data as",
    "start": "2387280",
    "end": "2392890"
  },
  {
    "text": "fast as you want you can access the data here as fast as you can in standard is",
    "start": "2392890",
    "end": "2399160"
  },
  {
    "text": "just that it cost a bit more that's so that we leverage the number of access",
    "start": "2399160",
    "end": "2405070"
  },
  {
    "text": "versus the speed so if you don't have data that is access a lot do not keep it",
    "start": "2405070",
    "end": "2412900"
  },
  {
    "text": "in the standard and those are the different class of of things where you",
    "start": "2412900",
    "end": "2420460"
  },
  {
    "text": "would want to store the data the second thing especially because we're talking",
    "start": "2420460",
    "end": "2426310"
  },
  {
    "text": "about kinases is understanding what kinases is just to get an idea a little",
    "start": "2426310",
    "end": "2432790"
  },
  {
    "text": "bit of the audience how many of you have used kinases right all right so like 20%",
    "start": "2432790",
    "end": "2439210"
  },
  {
    "text": "30% so keen disease is a streaming service as easy as that",
    "start": "2439210",
    "end": "2444520"
  },
  {
    "text": "what is streaming if you look at the motorway this is streaming you send data to the",
    "start": "2444520",
    "end": "2453370"
  },
  {
    "text": "end of the road and the end of the road is the club there's no way back there's",
    "start": "2453370",
    "end": "2459040"
  },
  {
    "text": "only one way and the number of lines is our much you can send the data right so",
    "start": "2459040",
    "end": "2466090"
  },
  {
    "text": "if I have a line each line as maximum bandwidth for example 10 cars per",
    "start": "2466090",
    "end": "2472300"
  },
  {
    "text": "seconds if you try to put 20 car per second it's gonna be a traffic jam right so every time you want to send more data",
    "start": "2472300",
    "end": "2478330"
  },
  {
    "text": "you need to increase your stream right and we call that a shard I'll go through that this is how it looks like so in a",
    "start": "2478330",
    "end": "2486550"
  },
  {
    "text": "motorway if you increase your bandwidth what we call a shard then you will need",
    "start": "2486550",
    "end": "2493900"
  },
  {
    "text": "to create another chart so that you can allow more cars to be delivered and this is the raw",
    "start": "2493900",
    "end": "2500829"
  },
  {
    "text": "version of kinases it's called skin Ezreal that means that as a user you",
    "start": "2500829",
    "end": "2505900"
  },
  {
    "text": "need to manage the shard and the way they are spread across kinases and one",
    "start": "2505900",
    "end": "2513309"
  },
  {
    "text": "thing to remember as well is a shard supports one megabyte right to make an output and this for a simple reason that",
    "start": "2513309",
    "end": "2520239"
  },
  {
    "text": "you want to be able to empty the queue right because if it would be 1:1 and",
    "start": "2520239",
    "end": "2525420"
  },
  {
    "text": "your max you would always never have a queue that would reduce right so this is",
    "start": "2525420",
    "end": "2532950"
  },
  {
    "text": "classic and in terms of vocabulary we use producers those are the the",
    "start": "2532950",
    "end": "2540130"
  },
  {
    "text": "components that are sending data to kinases and then consumers the one that consumes and as I said it's a regional",
    "start": "2540130",
    "end": "2547359"
  },
  {
    "text": "service so it's by default sitting on top of three availability zone right so",
    "start": "2547359",
    "end": "2552519"
  },
  {
    "text": "if you would have problems on the AZ the system service would still be running and delivering your data to your system",
    "start": "2552519",
    "end": "2559930"
  },
  {
    "text": "for example to Amazon s3 or any other stuff and there's a second flavor of",
    "start": "2559930",
    "end": "2566049"
  },
  {
    "text": "kinases which is called firehose and this is the managed kinases in a way that I have my line and the system",
    "start": "2566049",
    "end": "2573880"
  },
  {
    "text": "automatically increases the size of the role without me telling it it just detects the number of cars and say oh",
    "start": "2573880",
    "end": "2579819"
  },
  {
    "start": "2579000",
    "end": "2579000"
  },
  {
    "text": "now there's more cars than I can send I'll just increase the size of the of",
    "start": "2579819",
    "end": "2585130"
  },
  {
    "text": "the road so that's what it does in manage the number of short so it's a very good way if you won't send but",
    "start": "2585130",
    "end": "2591039"
  },
  {
    "text": "forget and this is what I like the only problem is we only support delivery of",
    "start": "2591039",
    "end": "2597309"
  },
  {
    "text": "data to three things like s3 redshift and elasticsearch so gives you a little",
    "start": "2597309",
    "end": "2603759"
  },
  {
    "text": "bit of it's the trade-off like whether your consumers have to do the job or you",
    "start": "2603759",
    "end": "2610059"
  },
  {
    "text": "let the service do it I personally love firehose because I love sending all my data into s3 and then I've even",
    "start": "2610059",
    "end": "2616569"
  },
  {
    "text": "triggered from there makes life a lot easier let's go through a demo and this is the",
    "start": "2616569",
    "end": "2623859"
  },
  {
    "text": "architecture of the demo that will involve every one of you we're gonna we're gonna have",
    "start": "2623859",
    "end": "2631360"
  },
  {
    "text": "you're gonna access webpage with your mobile phone each of the mobile phone will be sending data to kinases and then",
    "start": "2631360",
    "end": "2639100"
  },
  {
    "text": "I have a service called Kennedy's Analytics now I explain what it is after",
    "start": "2639100",
    "end": "2644950"
  },
  {
    "text": "the demo what it does is takes a window time window and that's on some SQL",
    "start": "2644950",
    "end": "2650950"
  },
  {
    "text": "queries on top of it in real time so that I can have some computation in terms of understanding what is in the",
    "start": "2650950",
    "end": "2658270"
  },
  {
    "text": "stream at this moment I am query and then deliver that information further",
    "start": "2658270",
    "end": "2663970"
  },
  {
    "text": "down the stream push it to dynamo and then I will have a dashboard to visualize or bat so please come with me",
    "start": "2663970",
    "end": "2673920"
  },
  {
    "start": "2671000",
    "end": "2671000"
  },
  {
    "text": "and let's break the Wi-Fi I let's pray",
    "start": "2673920",
    "end": "2679930"
  },
  {
    "text": "that the gods gods or demons are with us I do not guarantee anything I do not have SLS on my demos unfortunately but",
    "start": "2679930",
    "end": "2689440"
  },
  {
    "text": "this should be working very nicely so quite a door not me right I haven't",
    "start": "2689440",
    "end": "2701050"
  },
  {
    "text": "put the SDK in the in your apps sorry buddy",
    "start": "2701050",
    "end": "2706650"
  },
  {
    "text": "believe me now little limited amount of",
    "start": "2706650",
    "end": "2711970"
  },
  {
    "text": "time but it's a good idea actually I should definitely do it it's a very good idea so this is what you should see",
    "start": "2711970",
    "end": "2718330"
  },
  {
    "text": "right Idahoan at me and this is basically how these things look like so",
    "start": "2718330",
    "end": "2723820"
  },
  {
    "text": "let's go and this is so we have our",
    "start": "2723820",
    "end": "2730330"
  },
  {
    "text": "currently like about 80 users on the systems using the system the thing so",
    "start": "2730330",
    "end": "2735520"
  },
  {
    "text": "let's see so the data is sent in real time and in fact is going it's sending",
    "start": "2735520",
    "end": "2741070"
  },
  {
    "text": "to us is like unisys there's a analytics running then sent to another King as a",
    "start": "2741070",
    "end": "2746560"
  },
  {
    "text": "stream sent to dynamodb and my dashboard queries that dashboard that dynamodb table right so let's do a test let's",
    "start": "2746560",
    "end": "2753610"
  },
  {
    "text": "everyone goes onto da write with your mobile phone to see how fast it takes so",
    "start": "2753610",
    "end": "2759970"
  },
  {
    "text": "already we see a huge increase up so a couple of seconds I was 5 seconds",
    "start": "2759970",
    "end": "2765430"
  },
  {
    "text": "there's still some rebellious kids on the senator who are you",
    "start": "2765430",
    "end": "2770790"
  },
  {
    "text": "the needle so it's just an example of how fast this dreaming top line is right",
    "start": "2770790",
    "end": "2778360"
  },
  {
    "text": "when we're talking real-time is pretty much near real-time so imagine your business and you want to calculate",
    "start": "2778360",
    "end": "2783940"
  },
  {
    "text": "real-time the effect I've been used that you put out there on Twitter you could see it almost in real time or that you",
    "start": "2783940",
    "end": "2790120"
  },
  {
    "text": "want to do a/b testing how your users are using the platform at the very moment when you start using it it's",
    "start": "2790120",
    "end": "2795940"
  },
  {
    "text": "extremely powerful right and what if I would tell you that it's server less so",
    "start": "2795940",
    "end": "2802030"
  },
  {
    "text": "that if you don't use it nothing is going to be paid for only the data in this three that's it so this is how it",
    "start": "2802030",
    "end": "2813850"
  },
  {
    "text": "looks like you have the slides so you can look at it but just quickly this is what your mobile app is sending it's",
    "start": "2813850",
    "end": "2821290"
  },
  {
    "text": "saying a JSON object which has a bunch of things most important thing is the canítö ID and the canítö ID is unique",
    "start": "2821290",
    "end": "2829390"
  },
  {
    "text": "for every one of you as soon as you downloaded the app there was a JavaScript library that went query",
    "start": "2829390",
    "end": "2836500"
  },
  {
    "text": "it'll get that idea to make you a unique user on the service you didn't have to",
    "start": "2836500",
    "end": "2842140"
  },
  {
    "text": "authenticate realize because canítö support and authenticated scenarios",
    "start": "2842140",
    "end": "2847660"
  },
  {
    "text": "right where I have strict policies and say you are only allowed with that canítö idea to send data to King as a",
    "start": "2847660",
    "end": "2855130"
  },
  {
    "text": "stream and this particular shard so this is the data that has been sensed JSON",
    "start": "2855130",
    "end": "2860380"
  },
  {
    "text": "object and then King this is analytic actually I'll show you and you see it's",
    "start": "2860380",
    "end": "2871240"
  },
  {
    "text": "not because I want to show you quickly",
    "start": "2871240",
    "end": "2878170"
  },
  {
    "text": "something the application okay now the next thing",
    "start": "2878170",
    "end": "2893430"
  },
  {
    "text": "is to know where in which region I am oh yeah maybe I don't show it right now I",
    "start": "2893430",
    "end": "2898619"
  },
  {
    "text": "should have prepared that point let's go because you don't need this I have everything in the slide this is how the",
    "start": "2898619",
    "end": "2905280"
  },
  {
    "text": "kinases analytic things work here's I have an application that takes that JSON object and tries to make a database data",
    "start": "2905280",
    "end": "2912630"
  },
  {
    "text": "representation of it so it's just very similar to a database one there's two",
    "start": "2912630",
    "end": "2918450"
  },
  {
    "text": "concepts are important in Kennedy's analytics especially the SQL queries when you run the comments to access the",
    "start": "2918450",
    "end": "2924720"
  },
  {
    "text": "data that is being sent to an early kin SEC is the stream which is very similar",
    "start": "2924720",
    "end": "2930960"
  },
  {
    "text": "to a table the only difference is like a table running table right that's what we call the stream is because it's never",
    "start": "2930960",
    "end": "2936660"
  },
  {
    "text": "with persisted data right yeah only maximum number of data is one day",
    "start": "2936660",
    "end": "2946760"
  },
  {
    "text": "then you access the the you define the parameters that you want to access to",
    "start": "2946849",
    "end": "2954230"
  },
  {
    "text": "very similar to how you would create a database and then you create a pump a",
    "start": "2954230",
    "end": "2960150"
  },
  {
    "text": "pump is simply take the data put it there exactly what a pump does takes",
    "start": "2960150",
    "end": "2966030"
  },
  {
    "text": "water from one place to another and this does the same it takes data from the table died on the stream and then push",
    "start": "2966030",
    "end": "2973080"
  },
  {
    "text": "it into another distinct table so you can create lots of different cascading",
    "start": "2973080",
    "end": "2978869"
  },
  {
    "text": "pumps each of those pumps doing some data transformation right this how you",
    "start": "2978869",
    "end": "2986520"
  },
  {
    "text": "would insert different distinct record",
    "start": "2986520",
    "end": "2993270"
  },
  {
    "text": "in the industry so you notice here I have a have different access of the data",
    "start": "2993270",
    "end": "3001010"
  },
  {
    "text": "per 30 seconds on my SQL stream and then for each of these trains I calculate per",
    "start": "3001010",
    "end": "3007820"
  },
  {
    "text": "seconds the number of oh s so iOS",
    "start": "3007820",
    "end": "3014450"
  },
  {
    "text": "Android all these kind of different things I count them on this and then also count the number of people that are",
    "start": "3014450",
    "end": "3022040"
  },
  {
    "text": "on this quadrant quadrant is where you where on the on the UI and that's it and what it does is it groups them in",
    "start": "3022040",
    "end": "3031430"
  },
  {
    "text": "two different ways this is the way you can do this in kinases the what we call the windowing either you have a moving",
    "start": "3031430",
    "end": "3037970"
  },
  {
    "text": "window or you have sort of what we call the sliding window here or a tumbling",
    "start": "3037970",
    "end": "3043160"
  },
  {
    "text": "window which always stays the same right so the data goes like like x-ray at the",
    "start": "3043160",
    "end": "3048380"
  },
  {
    "text": "airport when you instead of having the x-ray following industry and the output",
    "start": "3048380",
    "end": "3056030"
  },
  {
    "text": "of the kinases trim happens like this when I've computed everything I pushed that into another stream key noisy",
    "start": "3056030",
    "end": "3061880"
  },
  {
    "text": "stream which delivers the data - oh that lambda function queries on",
    "start": "3061880",
    "end": "3070250"
  },
  {
    "text": "that stream and these one short so this basically that's how lambda king can",
    "start": "3070250",
    "end": "3075829"
  },
  {
    "text": "access the data then Nunda stores is further to dynamodb so it's very simple",
    "start": "3075829",
    "end": "3081349"
  },
  {
    "text": "a simple way to to create very powerful application server this way and",
    "start": "3081349",
    "end": "3087790"
  },
  {
    "start": "3082000",
    "end": "3082000"
  },
  {
    "text": "important thing to remember if you start using lambda with skinny ceases you have one lambda dedicated per kinases shark",
    "start": "3087790",
    "end": "3095240"
  },
  {
    "text": "right so if you have 10 sharks you need to have 10 lambda function processing each of the chars and this is one of the",
    "start": "3095240",
    "end": "3102430"
  },
  {
    "text": "the most important thing to remember and it's the the way the lambda invokes the",
    "start": "3102430",
    "end": "3112250"
  },
  {
    "text": "shark to get the data is every second that's it every second we are getting the data from this charge right so you",
    "start": "3112250",
    "end": "3118460"
  },
  {
    "text": "have you have to tune your lambda function like this a second use case",
    "start": "3118460",
    "end": "3126049"
  },
  {
    "text": "that is very very good especially using firehose that I was so published on my",
    "start": "3126049",
    "end": "3131990"
  },
  {
    "text": "github is a Python project because I'll just like Python but what it does is instead of writing the logs on the file",
    "start": "3131990",
    "end": "3139430"
  },
  {
    "text": "it sends JSON objects of each of the events to happen in my application - fio",
    "start": "3139430",
    "end": "3144980"
  },
  {
    "text": "skinny z stream s3 and then after 9:00 in couple of second of all the data query ball into",
    "start": "3144980",
    "end": "3151010"
  },
  {
    "text": "Athena Athena is a is a really interesting service again it's in the",
    "start": "3151010",
    "end": "3157790"
  },
  {
    "text": "surveys IDs that there is no service to manage and you can create tables or database tables of data sitting on top",
    "start": "3157790",
    "end": "3164900"
  },
  {
    "text": "of s3 right so it's very very powerful way of querying data that is in s3 you don't have to transform it you can query",
    "start": "3164900",
    "end": "3171460"
  },
  {
    "text": "JSON object Park your files and a bunch of other stuff and it works like this",
    "start": "3171460",
    "end": "3178210"
  },
  {
    "start": "3176000",
    "end": "3176000"
  },
  {
    "text": "this is the screenshot because how do I do the growing the magic trick we did my",
    "start": "3178210",
    "end": "3188930"
  },
  {
    "text": "fingers don't work and this is how you would do it to create your this is the",
    "start": "3188930",
    "end": "3195710"
  },
  {
    "text": "data my JSON object IDs in s3 and you see the location here when you get the slide you'll be able to get that and",
    "start": "3195710",
    "end": "3202970"
  },
  {
    "text": "that's pretty much it then you can start querying your data and you see of all the of the events that have happened so",
    "start": "3202970",
    "end": "3209510"
  },
  {
    "text": "it's very good way to start querying your API logs and especially when you think about applications which have",
    "start": "3209510",
    "end": "3216680"
  },
  {
    "text": "hundreds or 150 200 micro services each of them putting to log file is very",
    "start": "3216680",
    "end": "3223400"
  },
  {
    "text": "difficult to do this kind of stuff for this my opinion was very very easy way to do first to remove all the logs and I",
    "start": "3223400",
    "end": "3231980"
  },
  {
    "text": "don't have to deal with files but especially than being able to have",
    "start": "3231980",
    "end": "3237410"
  },
  {
    "text": "aggregation of all my API is near real-time the second use case and we're",
    "start": "3237410",
    "end": "3243110"
  },
  {
    "start": "3242000",
    "end": "3242000"
  },
  {
    "text": "gonna do a couple demos we have five minutes still to go but this is data sensor collection and this is very",
    "start": "3243110",
    "end": "3249740"
  },
  {
    "text": "important use case where I UT is there in fact IOT the AWS IOT service is as",
    "start": "3249740",
    "end": "3255200"
  },
  {
    "text": "well a very scalable system it's resilient by default source original",
    "start": "3255200",
    "end": "3262370"
  },
  {
    "text": "service sits on top of three aces so it's very interesting and easy to use",
    "start": "3262370",
    "end": "3268880"
  },
  {
    "text": "what it does is allows you to connect one to millions of sensors sending data",
    "start": "3268880",
    "end": "3274190"
  },
  {
    "text": "to IOT and IOT service will scale without having without you having to do",
    "start": "3274190",
    "end": "3279560"
  },
  {
    "text": "anything and the two things that are with IOT is rules and actions rules is what do I do with my data that is coming",
    "start": "3279560",
    "end": "3286910"
  },
  {
    "text": "to the platform or what data do I take from from from there and then the action",
    "start": "3286910",
    "end": "3293599"
  },
  {
    "text": "is what do I do with it so for example if I have a JSON object of temperature",
    "start": "3293599",
    "end": "3298609"
  },
  {
    "text": "humidity all this kind of stuff what I want to to take from that is just the temperature for example and then send",
    "start": "3298609",
    "end": "3304910"
  },
  {
    "text": "that temperature somewhere else so this is the action this is very classic patterns of doing that where you would",
    "start": "3304910",
    "end": "3312230"
  },
  {
    "text": "have similar applications what we were using sending two kinases but then integrate with the IOT and IOT",
    "start": "3312230",
    "end": "3318740"
  },
  {
    "text": "integrates very nicely with kinases right so you can from the actions select",
    "start": "3318740",
    "end": "3324559"
  },
  {
    "text": "the kinsey stream to forward the data that is been streamed by RT devices in the cloud gives you a lot of capability",
    "start": "3324559",
    "end": "3330950"
  },
  {
    "text": "at the same ways with we've done one of those is for example to do anomaly",
    "start": "3330950",
    "end": "3336079"
  },
  {
    "start": "3332000",
    "end": "3332000"
  },
  {
    "text": "detection and this is a classic example of using lambda to do machine learning",
    "start": "3336079",
    "end": "3342460"
  },
  {
    "text": "on on data that is coming in real time imagine you would have a sensor that is",
    "start": "3342460",
    "end": "3348230"
  },
  {
    "text": "monitoring for example the vibration of a particular engine if you have change",
    "start": "3348230",
    "end": "3353359"
  },
  {
    "text": "in the vibration pattern this is the kind of things you want to detect and notify people on and this is the pattern",
    "start": "3353359",
    "end": "3359359"
  },
  {
    "text": "that is useful let's make a last demo before closing this is just to show you",
    "start": "3359359",
    "end": "3367579"
  },
  {
    "start": "3363000",
    "end": "3363000"
  },
  {
    "text": "how fast and easy it is to use IOT platform supports mqtt over WebSockets",
    "start": "3367579",
    "end": "3373279"
  },
  {
    "text": "so you can do pretty interesting things if you start to do web web apps and this",
    "start": "3373279",
    "end": "3379339"
  },
  {
    "text": "is what I want to demo there and here everyone is going to go again to the URL you're gonna have a an image and I'm",
    "start": "3379339",
    "end": "3385819"
  },
  {
    "text": "gonna control that image remotely because this is how I believe things should be done so that opens a",
    "start": "3385819",
    "end": "3396259"
  },
  {
    "text": "bi-directional channel between you and me hopefully it will scale it should",
    "start": "3396259",
    "end": "3401630"
  },
  {
    "text": "fail I did the demo with 400 people and it went very well so it depends of",
    "start": "3401630",
    "end": "3406700"
  },
  {
    "text": "course on the network you got it",
    "start": "3406700",
    "end": "3411490"
  },
  {
    "text": "good I'm so impatient I hear this all the",
    "start": "3417350",
    "end": "3424300"
  },
  {
    "text": "time alright good all right",
    "start": "3424300",
    "end": "3429270"
  },
  {
    "text": "so you should see something like that you have the wrong URL I guess that had",
    "start": "3431970",
    "end": "3441180"
  },
  {
    "text": "horn lightbulb bitly does anyone have it",
    "start": "3441180",
    "end": "3450020"
  },
  {
    "text": "demon gods are still with us that's the last one so before the next part I'm",
    "start": "3451580",
    "end": "3457290"
  },
  {
    "text": "pushing a little bit it's good all right",
    "start": "3457290",
    "end": "3463500"
  },
  {
    "text": "so this is what you should see and here you should all see connect it to live out can you give me a thumbs up you have",
    "start": "3463500",
    "end": "3469560"
  },
  {
    "text": "connected good that means we have a bi-directional channel between you and me that means that I can start controlling you like that so let's see",
    "start": "3469560",
    "end": "3478620"
  },
  {
    "text": "if this works so I'm gonna increase the light bulbs right so 5 1 how about now",
    "start": "3478620",
    "end": "3490370"
  },
  {
    "text": "17:44 how fast is it alright good so this is very this again it goes from my",
    "start": "3490370",
    "end": "3498390"
  },
  {
    "text": "laptop to us east iot comes back a new query so it's it's pretty interesting",
    "start": "3498390",
    "end": "3505740"
  },
  {
    "text": "and the the power of it is MQTT right MQTT is a protocol for sending very",
    "start": "3505740",
    "end": "3511650"
  },
  {
    "text": "efficiently over even very bad condition network so this is the kind of things",
    "start": "3511650",
    "end": "3517590"
  },
  {
    "text": "you can do and let me get another thing because it's always good to close the",
    "start": "3517590",
    "end": "3522810"
  },
  {
    "text": "demos with something even more fun but you can query the good thing is maybe you notice in this architecture this one",
    "start": "3522810",
    "end": "3530040"
  },
  {
    "text": "this little baby here is Alex ah that means that Alex I can you can have an Alex a skill that runs along the",
    "start": "3530040",
    "end": "3536940"
  },
  {
    "text": "function and then you can query it luckily unfortunately I don't have my big Alex I here because my girlfriend",
    "start": "3536940",
    "end": "3543870"
  },
  {
    "text": "doesn't allow me to take Alex out of the home but I have an emulator here so",
    "start": "3543870",
    "end": "3551120"
  },
  {
    "text": "Alexa asked light bulb to set the brightness to 20%",
    "start": "3551120",
    "end": "3557510"
  },
  {
    "text": "so it's invoking the skill there's a cold stock right my god deep",
    "start": "3559000",
    "end": "3570569"
  },
  {
    "text": "let's push it even further Alexa asked glad Bob to flash fast there",
    "start": "3574560",
    "end": "3592630"
  },
  {
    "text": "was some problems okay but still all right but this is the kind of things you",
    "start": "3592630",
    "end": "3599140"
  },
  {
    "text": "can do with data and you know pipelines and the interesting thing you keep in mind here there is no servers to manage",
    "start": "3599140",
    "end": "3605710"
  },
  {
    "text": "right so imagine I'm a start-up and I want just to get my idea out there several ice patterns are extremely",
    "start": "3605710",
    "end": "3612910"
  },
  {
    "text": "extreme useful and but bear with me right it doesn't mean you should do everything service it's not a magic",
    "start": "3612910",
    "end": "3620680"
  },
  {
    "text": "hammer that you should use for everything I thought you have questions like should I use lambda for you know",
    "start": "3620680",
    "end": "3626290"
  },
  {
    "text": "pretty much everything is not right there's limitations and when you design architecture is really understand your",
    "start": "3626290",
    "end": "3631300"
  },
  {
    "text": "use case and test especially and see where where the limits are and do not just make the decision of using servlets",
    "start": "3631300",
    "end": "3637630"
  },
  {
    "text": "or lambda or stuff lies because it's fun make it because it's important it's most",
    "start": "3637630",
    "end": "3642910"
  },
  {
    "text": "important there's tons of breeding especially the white papers it's a field that is growing server less and also one",
    "start": "3642910",
    "end": "3650290"
  },
  {
    "text": "thing do not always associate several s and lambda because you know you can have kinases totally server less IOT totally",
    "start": "3650290",
    "end": "3657910"
  },
  {
    "text": "service it's just a combination of being highly available and this is really the most important thing to take away and",
    "start": "3657910",
    "end": "3665040"
  },
  {
    "text": "again there's a full part dedicated on website so thanks very much",
    "start": "3665040",
    "end": "3670870"
  },
  {
    "text": "[Applause]",
    "start": "3670870",
    "end": "3674980"
  }
]