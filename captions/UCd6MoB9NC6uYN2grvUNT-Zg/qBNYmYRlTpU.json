[
  {
    "text": "okay hello together and uh welcome to the session build a serverless startup",
    "start": "2679",
    "end": "9400"
  },
  {
    "text": "in 30 minutes my name is Fabian Han and I'm a Solutions architect at",
    "start": "9400",
    "end": "16320"
  },
  {
    "text": "AWS and in this session we will build a serverless startup surprise surprise and",
    "start": "16320",
    "end": "23000"
  },
  {
    "text": "we will begin with a short introduction so what are we doing to build and why",
    "start": "23000",
    "end": "28320"
  },
  {
    "text": "then we will jump right into to uh the building part and then I will give you",
    "start": "28320",
    "end": "34719"
  },
  {
    "text": "overview about the services we have used to build uh the application and then we",
    "start": "34719",
    "end": "40120"
  },
  {
    "text": "will wrap up the session in a summary to start with um I heard about startup is really",
    "start": "40120",
    "end": "49120"
  },
  {
    "text": "cool so I thought okay I like to have my own startup so be flexible be agile have a lot of fun and also of course to do",
    "start": "49120",
    "end": "56920"
  },
  {
    "text": "something great so I uh sit down and thought a little bit",
    "start": "56920",
    "end": "62320"
  },
  {
    "text": "okay what is the brilliant idea the world needs and I really can make impact in the world and after some ideas I came",
    "start": "62320",
    "end": "70119"
  },
  {
    "text": "to the idea unicorn Max so because everyone in",
    "start": "70119",
    "end": "75400"
  },
  {
    "text": "the world loves unicorns and everyone in the world need a MK and so I combine the",
    "start": "75400",
    "end": "80680"
  },
  {
    "text": "two and I have the great idea which I have a potential Market above 7 billion",
    "start": "80680",
    "end": "86880"
  },
  {
    "text": "people in the world so pretty cool here and because the competition in this",
    "start": "86880",
    "end": "93840"
  },
  {
    "text": "market is pretty high and I some kind um yeah give all of you my amazing idea",
    "start": "93840",
    "end": "101640"
  },
  {
    "text": "right now so I have to be really fast in the market to keep my competitive advantage and so I like to build my uh",
    "start": "101640",
    "end": "110479"
  },
  {
    "text": "startup right away but I don't like to manage any servers or operation systems",
    "start": "110479",
    "end": "116079"
  },
  {
    "text": "or networking because I only one guy and I have that much resources to all do all",
    "start": "116079",
    "end": "122039"
  },
  {
    "text": "of that and also it doesn't really differentiate me and my product from",
    "start": "122039",
    "end": "128479"
  },
  {
    "text": "other competitors so I like to go serverless because I don't have to provision or manage servers as we have",
    "start": "128479",
    "end": "135000"
  },
  {
    "text": "heard in the keynote earlier from Verner and also it scale with usage so",
    "start": "135000",
    "end": "140360"
  },
  {
    "text": "if I start with only 10 to 100 customers and then I had hit the jackpot with my",
    "start": "140360",
    "end": "146400"
  },
  {
    "text": "over potential 7 billion customers in the world the application will scale Vis",
    "start": "146400",
    "end": "151480"
  },
  {
    "text": "it automatically and also I don't pay for idle so I only pay for the execution",
    "start": "151480",
    "end": "158160"
  },
  {
    "text": "when a uh customer interact with my website and so I only pay if I really",
    "start": "158160",
    "end": "163560"
  },
  {
    "text": "make interaction with my customers and also I have availability",
    "start": "163560",
    "end": "168640"
  },
  {
    "text": "and fall tolerance built in so I have a high available platform for my customer",
    "start": "168640",
    "end": "173879"
  },
  {
    "text": "that they don't experience any downtimes or outages I also use graphql as my API um",
    "start": "173879",
    "end": "182040"
  },
  {
    "text": "endpoint so it's allows me to build the API which covers a lot of different data",
    "start": "182040",
    "end": "188440"
  },
  {
    "text": "sources from one single point of access so I can also use existing data or query",
    "start": "188440",
    "end": "195400"
  },
  {
    "text": "databases and so on very easily we will see that in the uh demo more and also I",
    "start": "195400",
    "end": "201680"
  },
  {
    "text": "can describe what it's possible with the objects I Define in this um uh",
    "start": "201680",
    "end": "208159"
  },
  {
    "text": "endpoint and further more it it's Network optimized for the requests and responses so the API will only uh send",
    "start": "208159",
    "end": "216360"
  },
  {
    "text": "the data which is really needed on the client and not the whole stack as we have for example in rest",
    "start": "216360",
    "end": "222200"
  },
  {
    "text": "apis and for the architecture for the front end we will build um static website with rejs which we",
    "start": "222200",
    "end": "230280"
  },
  {
    "text": "will host on uh Amazon S3 and of course I like to reach customers around the",
    "start": "230280",
    "end": "235560"
  },
  {
    "text": "world with a really uh nice customer experience we will use a CDN our Amazon",
    "start": "235560",
    "end": "240720"
  },
  {
    "text": "cloudfront in front of it and then for the user management we have Cognito because I have the great",
    "start": "240720",
    "end": "247360"
  },
  {
    "text": "idea I like to make the Unicorn Mark a little bit more exclusive so to be able to order one you have to be in the",
    "start": "247360",
    "end": "253920"
  },
  {
    "text": "Unicorn Club but everyone can join the Unicorn Club very easily so that I have still the big Market but I have some",
    "start": "253920",
    "end": "262120"
  },
  {
    "text": "exclusivity of it and then in the back end we will use AWS appsync which is the",
    "start": "262120",
    "end": "267320"
  },
  {
    "text": "cql server fully managed at AWS where we will interact with Amazon",
    "start": "267320",
    "end": "272360"
  },
  {
    "text": "Dynamo DB as the database and for inserts also use AWS Lambda to be able",
    "start": "272360",
    "end": "277880"
  },
  {
    "text": "to do more um comput intense workloads if we need so and then I would say let's",
    "start": "277880",
    "end": "284280"
  },
  {
    "text": "Jump Right In and to start with we are using Cloud9",
    "start": "284280",
    "end": "291919"
  },
  {
    "text": "the web IDE from AWS and at the beginning I just uh",
    "start": "291919",
    "end": "298479"
  },
  {
    "text": "install uh node version 10 which I need uh for my",
    "start": "298479",
    "end": "304199"
  },
  {
    "text": "Rector s project and then we um create a new rejs project so my",
    "start": "304199",
    "end": "313080"
  },
  {
    "text": "unicorn website which makes a sample uh react CHS",
    "start": "313080",
    "end": "320800"
  },
  {
    "text": "um okay okay we have to here is missing the N so now we use",
    "start": "320919",
    "end": "327600"
  },
  {
    "text": "note version 10 and then we create the website and in this",
    "start": "327600",
    "end": "334680"
  },
  {
    "text": "time as reactjs started creating the uh template website we are going in the",
    "start": "334680",
    "end": "341080"
  },
  {
    "text": "console and create the S3 bucket where we will then host the website so we",
    "start": "341080",
    "end": "346160"
  },
  {
    "text": "create a new bucket um we call it unicorn Mark um we",
    "start": "346160",
    "end": "353360"
  },
  {
    "text": "will enable automatic encryption because also as we have heard in the keynote you should always enable encrypt deson where",
    "start": "353360",
    "end": "360360"
  },
  {
    "text": "possible uh to secure your data and then we create the",
    "start": "360360",
    "end": "366840"
  },
  {
    "text": "bucket and we will also create our cloud form distribution so the CDN with uh the",
    "start": "368160",
    "end": "374479"
  },
  {
    "text": "166 points of pressence around the world that all the customer nevertheless where they are uh on the globe can easily",
    "start": "374479",
    "end": "381599"
  },
  {
    "text": "access the website so we go uh into Cloud front use a web",
    "start": "381599",
    "end": "386680"
  },
  {
    "text": "distribution and as origin we use our um S3 bucket we have just",
    "start": "386680",
    "end": "393759"
  },
  {
    "text": "created and make a res bucket access it means that only cloudfront can access a",
    "start": "394160",
    "end": "399759"
  },
  {
    "text": "fre bucket so that every request to the website goes through cloudfront if you for example introduce also web",
    "start": "399759",
    "end": "405400"
  },
  {
    "text": "application firewall or so that it always go through that and we use the existing identity I",
    "start": "405400",
    "end": "412360"
  },
  {
    "text": "already created that before and we will update the bucket policy so that the bucket will be updated to allow the",
    "start": "412360",
    "end": "418160"
  },
  {
    "text": "access from the cloud front distribution and then we will redirect https to https",
    "start": "418160",
    "end": "424360"
  },
  {
    "text": "so that the website always have a secure connection the rest we can uh stay at",
    "start": "424360",
    "end": "430879"
  },
  {
    "text": "default and as a default root object we like to have the index",
    "start": "430879",
    "end": "436800"
  },
  {
    "text": "HTML and then we will create a distribution and in the background AWS will then um create the CDN for you that",
    "start": "436800",
    "end": "446000"
  },
  {
    "text": "needs a couple of minutes so in this time we will go further the rejs",
    "start": "446000",
    "end": "452120"
  },
  {
    "text": "standard website has has built so far and then we can um go into it",
    "start": "452120",
    "end": "459440"
  },
  {
    "text": "and start it so with VJs you have also a very nice development server which runs",
    "start": "459440",
    "end": "466199"
  },
  {
    "text": "locally on your we uh on your laptop or device where you can then develop uh the",
    "start": "466199",
    "end": "472080"
  },
  {
    "text": "website pretty easily and with Cloud9 you have also the possibility to preview the website",
    "start": "472080",
    "end": "478319"
  },
  {
    "text": "directly uh um if you go here on the preview we see here the",
    "start": "478319",
    "end": "486440"
  },
  {
    "text": "website and Cloud9 is running on a normal E2 instance so if you have",
    "start": "486440",
    "end": "492520"
  },
  {
    "text": "configured the rooting tables in your VPC accordingly you can also reach it out from the internet and this is now",
    "start": "492520",
    "end": "499599"
  },
  {
    "text": "our standard Rector s website we are starting with and then we close that again that",
    "start": "499599",
    "end": "506440"
  },
  {
    "text": "we have a little bit more space in here and then I prepared um a little uh htmn",
    "start": "506440",
    "end": "514599"
  },
  {
    "text": "template to have a nice looking website to present the product to the customer",
    "start": "514599",
    "end": "520560"
  },
  {
    "text": "which I will um copy into my project so we have some CSS images and so",
    "start": "520560",
    "end": "529200"
  },
  {
    "text": "on so I have to first delete this index HTML because we",
    "start": "529200",
    "end": "536240"
  },
  {
    "text": "will use different one and",
    "start": "536240",
    "end": "541519"
  },
  {
    "text": "then we will go in the source folder so for the PE for those who don't know re S",
    "start": "541519",
    "end": "547680"
  },
  {
    "text": "as well um in the source folder we have all the logic more or less and in the uh public we have all the static content",
    "start": "547680",
    "end": "554360"
  },
  {
    "text": "like um CSS files and then we will copy over the",
    "start": "554360",
    "end": "561399"
  },
  {
    "text": "source files here and then if we go back to the website we will see that we have now the",
    "start": "561399",
    "end": "569000"
  },
  {
    "text": "template so we have a just a single page website with the mark itself",
    "start": "569000",
    "end": "574959"
  },
  {
    "text": "introduction why it's the best Mark in the world and then the different packages you can buy um at the moment",
    "start": "574959",
    "end": "582120"
  },
  {
    "text": "it's just uh the HML template so no functionality here but we will come to",
    "start": "582120",
    "end": "587680"
  },
  {
    "text": "that so and then at the next step as I mentioned we don't have any",
    "start": "587680",
    "end": "593560"
  },
  {
    "text": "functionality yet and so we like to interact with the AWS resources we have seen in the architecture slide and for",
    "start": "593560",
    "end": "599880"
  },
  {
    "text": "this for that we have the AWS amplify Library which is a library provided by",
    "start": "599880",
    "end": "604920"
  },
  {
    "text": "AWS which makes it really easily to integrate with AWS resources and so for",
    "start": "604920",
    "end": "610760"
  },
  {
    "text": "that we have to uh install",
    "start": "610760",
    "end": "615959"
  },
  {
    "text": "um it and for that we will install from npm",
    "start": "616000",
    "end": "623279"
  },
  {
    "text": "amplify and Os amplify has also um a specific package for for",
    "start": "623279",
    "end": "629560"
  },
  {
    "text": "reactjs because reactjs have some cool rappers around and so we can really uh",
    "start": "629560",
    "end": "634839"
  },
  {
    "text": "make use of the reactjs functionality also with amplifier and as I mentioned before I",
    "start": "634839",
    "end": "642480"
  },
  {
    "text": "like to have some exclusive exclusivity of our uh website so I like",
    "start": "642480",
    "end": "648160"
  },
  {
    "text": "to have a user authentification that only members of the Unicorn Club after they register for it can see the website",
    "start": "648160",
    "end": "655519"
  },
  {
    "text": "and for that we use Cognito which is our user management tool and here we will create",
    "start": "655519",
    "end": "664279"
  },
  {
    "text": "first a user pool which is the uh user pool where the members are registered",
    "start": "664279",
    "end": "671160"
  },
  {
    "text": "in and we go here and then we have to define the user pool name which we do uh",
    "start": "671160",
    "end": "681519"
  },
  {
    "text": "unicorn and then here we have some more uh options we can put in the standard",
    "start": "681519",
    "end": "689360"
  },
  {
    "text": "are fine here for the demo purposes I make the password a little bit more easily that I can log in pretty um",
    "start": "689360",
    "end": "698120"
  },
  {
    "text": "quickly and then we also have to um add uh clients which are get a key to be",
    "start": "698120",
    "end": "704920"
  },
  {
    "text": "able to connect to this user pool so it's a additional layer of security that net not everyone can connect to your",
    "start": "704920",
    "end": "712519"
  },
  {
    "text": "Cognito user pools that easily and",
    "start": "712519",
    "end": "717959"
  },
  {
    "text": "then we will we will create the app client here and now we create the user pool so",
    "start": "717959",
    "end": "724760"
  },
  {
    "text": "now we have a user management system which we can interact with with AWS",
    "start": "724760",
    "end": "730600"
  },
  {
    "text": "amplifier but to be able to also interact with AWS resources we need a",
    "start": "730600",
    "end": "736360"
  },
  {
    "text": "so-called identity pool and it's also from Cognito which",
    "start": "736360",
    "end": "742720"
  },
  {
    "text": "allows you that the customer which is registered with you in the pool goes to AWS SDS so secure token service and get",
    "start": "742720",
    "end": "751399"
  },
  {
    "text": "temporary credentials to be able to interact with AWS resources directly for example graphql in our case or S3 or",
    "start": "751399",
    "end": "758199"
  },
  {
    "text": "other resources so that you don't have always to use a proxy in any",
    "start": "758199",
    "end": "763720"
  },
  {
    "text": "way then we have to configure um the user pool so we need the user pool ID",
    "start": "763720",
    "end": "769160"
  },
  {
    "text": "which we uh have here and then the app client ID which we",
    "start": "769160",
    "end": "777360"
  },
  {
    "text": "uh generated here and then we can create this",
    "start": "777360",
    "end": "784760"
  },
  {
    "text": "pool and here we then see after a moment we can now here",
    "start": "784760",
    "end": "792279"
  },
  {
    "text": "Define the IM roles for um unauthorized and authorized people for unauthorized",
    "start": "792279",
    "end": "798000"
  },
  {
    "text": "is for example if you like to have some kind of uh analytics web analytics you can give permission for pinpoint for",
    "start": "798000",
    "end": "805279"
  },
  {
    "text": "unauthorized people so that they also get recognized in the analytics part",
    "start": "805279",
    "end": "811600"
  },
  {
    "text": "without our registered with Cognito and for the registered people for example that they are able to access their data",
    "start": "811600",
    "end": "817240"
  },
  {
    "text": "and dynb or interact with the apis so and then we will just go and",
    "start": "817240",
    "end": "824040"
  },
  {
    "text": "allow that and now we have created The Entity pool for that so now we have our user uh",
    "start": "824040",
    "end": "831920"
  },
  {
    "text": "pool in AWS and our website and now we like to combine them and for that we use",
    "start": "831920",
    "end": "839320"
  },
  {
    "text": "as mentioned before AWS amplify and for this we go in the EPS so",
    "start": "839320",
    "end": "846759"
  },
  {
    "text": "that it's our main uh react CHS class where we Define uh our website at the",
    "start": "846759",
    "end": "853079"
  },
  {
    "text": "moment we see in the render method that we call the shop uh JS which we will see in a second um which uh contains the",
    "start": "853079",
    "end": "860800"
  },
  {
    "text": "HTML code and here we will um import amplifier which we uh installed and",
    "start": "860800",
    "end": "869560"
  },
  {
    "text": "and then config AWS amplify with a configuration file that it knows which",
    "start": "869560",
    "end": "876639"
  },
  {
    "text": "resources to use and for that we need to create the config",
    "start": "876639",
    "end": "883720"
  },
  {
    "text": "file we go in here oh no that's the index so here it's the index file and",
    "start": "883720",
    "end": "892079"
  },
  {
    "text": "for that we configure for Amplified that defined resources so",
    "start": "892079",
    "end": "897720"
  },
  {
    "text": "we have for example which region and then the IDS so we have to uh bring the",
    "start": "897720",
    "end": "903040"
  },
  {
    "text": "IDS in here so for example the app client ID uh we configure here then we need the",
    "start": "903040",
    "end": "910160"
  },
  {
    "text": "user pool ID and configurate here and then the",
    "start": "910160",
    "end": "917680"
  },
  {
    "text": "identity pool ID which we created uh beforehand that I know to which",
    "start": "917680",
    "end": "923519"
  },
  {
    "text": "endpoints it has to connect to",
    "start": "923519",
    "end": "928360"
  },
  {
    "text": "so and after we have configured that we are going",
    "start": "932079",
    "end": "937120"
  },
  {
    "text": "to um interact now with the um authentification method so now we",
    "start": "937120",
    "end": "944560"
  },
  {
    "text": "see we use the package amplify react because we have now mother class which we can use for authentification purposes",
    "start": "944560",
    "end": "952399"
  },
  {
    "text": "and so we say okay this authentification and now I wrap this um",
    "start": "952399",
    "end": "960399"
  },
  {
    "text": "application JavaScript with this class and what this does it do a",
    "start": "960399",
    "end": "965600"
  },
  {
    "text": "full um authentification me so if I now call the website I will prompt to sign",
    "start": "965600",
    "end": "972759"
  },
  {
    "text": "in um UI which is also brought to you by the amplify amplify Library you can",
    "start": "972759",
    "end": "979839"
  },
  {
    "text": "totally customize it but I have all the main functions so login sign up forgot password and all the stuff and so I like",
    "start": "979839",
    "end": "987399"
  },
  {
    "text": "to create now my account to be able to access the",
    "start": "987399",
    "end": "993319"
  },
  {
    "text": "website and uh buy their unicorn",
    "start": "993319",
    "end": "998399"
  },
  {
    "text": "Mark so if I hit create account it now ask for confirmation code because the um",
    "start": "1003360",
    "end": "1010519"
  },
  {
    "text": "the email address will be verified so I get uh in some seconds email on my um",
    "start": "1010519",
    "end": "1015880"
  },
  {
    "text": "email account and this is all done by Cognito automatically so you don't have to",
    "start": "1015880",
    "end": "1021319"
  },
  {
    "text": "configure email server or whatsoever that's all done automatically you can also um enable that also the mobile",
    "start": "1021319",
    "end": "1028720"
  },
  {
    "text": "phone number will be verified so you can customize it there right",
    "start": "1028720",
    "end": "1033959"
  },
  {
    "text": "away and here I got my verification",
    "start": "1033959",
    "end": "1039280"
  },
  {
    "text": "code and after I confirm that my user is activated and if I now",
    "start": "1041280",
    "end": "1049400"
  },
  {
    "text": "log in I will see the website",
    "start": "1049400",
    "end": "1055559"
  },
  {
    "text": "again um and yeah so I have a little CSS trouble in the top so okay now it works",
    "start": "1056480",
    "end": "1064200"
  },
  {
    "text": "um but so now we have the exclusivity exclusivity so you need um to log in to",
    "start": "1064200",
    "end": "1070880"
  },
  {
    "text": "see the page so you're now part of the Unicorn club but uh as next you would like to have some yeah welcome node uh",
    "start": "1070880",
    "end": "1078559"
  },
  {
    "text": "in the the top Corner maybe also a log out possibility so if you like to log out from the website you could do this",
    "start": "1078559",
    "end": "1085120"
  },
  {
    "text": "also with the amplify app they would introduce your own menu bar on top but we will do that um by ourself to see",
    "start": "1085120",
    "end": "1093480"
  },
  {
    "text": "also the lower um a uh Library um functions so for",
    "start": "1093480",
    "end": "1102000"
  },
  {
    "text": "that we will go in the shop JS which has all the HTML code of this uh um page we",
    "start": "1102000",
    "end": "1109600"
  },
  {
    "text": "have seen before and here we will also import amplify but not react stack so",
    "start": "1109600",
    "end": "1116159"
  },
  {
    "text": "amplify itself and here the O method and the O method is more or less the class",
    "start": "1116159",
    "end": "1121960"
  },
  {
    "text": "for Cognito to interact with so I have your function like sign in sign up or also log out which we'll use in a",
    "start": "1121960",
    "end": "1130880"
  },
  {
    "text": "second and then we will configure some functions so in the Constructor it's",
    "start": "1135679",
    "end": "1141760"
  },
  {
    "text": "more or less the State Management in reor s so we will have a user in our state of the uh website and then in the",
    "start": "1141760",
    "end": "1148720"
  },
  {
    "text": "component will Mount as the uh name States if the website uh will be created",
    "start": "1148720",
    "end": "1154799"
  },
  {
    "text": "we will call this function which um calls all current user info so it goes to Cognito and get all the user",
    "start": "1154799",
    "end": "1161559"
  },
  {
    "text": "information that we can display the username for example and uh we also created a logout",
    "start": "1161559",
    "end": "1167559"
  },
  {
    "text": "function which just um calls the our sign out functionality to log out um",
    "start": "1167559",
    "end": "1175039"
  },
  {
    "text": "against Cognito and then we will integrate this also in the HTML",
    "start": "1175039",
    "end": "1183240"
  },
  {
    "text": "that we display the lockout button",
    "start": "1183240",
    "end": "1188360"
  },
  {
    "text": "and let's have a look at this",
    "start": "1189600",
    "end": "1195159"
  },
  {
    "text": "um the logout button and the username and now if we go to the website again",
    "start": "1195159",
    "end": "1202440"
  },
  {
    "text": "and refresh it we will see that we see in the top now uh little welcome node",
    "start": "1202440",
    "end": "1208159"
  },
  {
    "text": "with the username we quered from Cognito and also a log out button where I can",
    "start": "1208159",
    "end": "1213400"
  },
  {
    "text": "hit and I get locked out and then of course I can loog back",
    "start": "1213400",
    "end": "1220600"
  },
  {
    "text": "in So after we have done this I have now",
    "start": "1222360",
    "end": "1227400"
  },
  {
    "text": "authentification user on my web page and now uh I like of course that they can",
    "start": "1227400",
    "end": "1233280"
  },
  {
    "text": "buy my Max because that's my business after all so I now have to create my",
    "start": "1233280",
    "end": "1238440"
  },
  {
    "text": "endpoint so there we will use uh cql it's called um appsync so we go",
    "start": "1238440",
    "end": "1245960"
  },
  {
    "text": "again to the AWS console create appsync",
    "start": "1245960",
    "end": "1251159"
  },
  {
    "text": "and appsync is a fully manag craq server as I mentioned before we will build it",
    "start": "1251159",
    "end": "1256280"
  },
  {
    "text": "from the scratch and and call it unicorn because it's",
    "start": "1256280",
    "end": "1263240"
  },
  {
    "text": "amazing so and in CQ you need to have Define a",
    "start": "1263240",
    "end": "1268919"
  },
  {
    "text": "schema in this case we have a order because we like to order",
    "start": "1268919",
    "end": "1274159"
  },
  {
    "text": "something and uh status return so you also Define what the caller gets back",
    "start": "1274159",
    "end": "1280799"
  },
  {
    "text": "for variables and then you define the elements and the types so for example I",
    "start": "1280799",
    "end": "1288600"
  },
  {
    "text": "D string integer telephone number or others and with the exclamation mark you",
    "start": "1288600",
    "end": "1294400"
  },
  {
    "text": "define if it's mandatory or it's optional and then you have so-called",
    "start": "1294400",
    "end": "1299679"
  },
  {
    "text": "queries which are more or less the get functionality so if you like to receive some information from the API so we have",
    "start": "1299679",
    "end": "1306919"
  },
  {
    "text": "here get orders where I get the whole list of orders for one uh customer um or get one order if I",
    "start": "1306919",
    "end": "1314640"
  },
  {
    "text": "provide the order ID and the mutation is more or less the change of a data set so",
    "start": "1314640",
    "end": "1320000"
  },
  {
    "text": "if I like to insert delete or update it I have mutations in this case I have a create order where I like to have the",
    "start": "1320000",
    "end": "1326799"
  },
  {
    "text": "package string so it's more or less which option of the Mach and also the email address and both are mandatory and",
    "start": "1326799",
    "end": "1333159"
  },
  {
    "text": "as a return I get the status return and then I have to save the",
    "start": "1333159",
    "end": "1338440"
  },
  {
    "text": "schemer and I like to have a security border to the API that not everyone can",
    "start": "1338440",
    "end": "1344039"
  },
  {
    "text": "just call it so I like to use my Cognito identity pool for that so I go in",
    "start": "1344039",
    "end": "1349880"
  },
  {
    "text": "settings and have at the moment four different uh authentification types API",
    "start": "1349880",
    "end": "1355559"
  },
  {
    "text": "key IM am uh Cognito or open ID connect so if I have a open ID connect um",
    "start": "1355559",
    "end": "1362240"
  },
  {
    "text": "compatible uh user management system already in our case we use Cognito so I",
    "start": "1362240",
    "end": "1367880"
  },
  {
    "text": "have to define the region where it is and then what we do on default the",
    "start": "1367880",
    "end": "1374520"
  },
  {
    "text": "default I like if we have a user um authentification authenticated I like um to allow the",
    "start": "1374520",
    "end": "1381159"
  },
  {
    "text": "interaction with the endpoint that it's able to create a order and then I save",
    "start": "1381159",
    "end": "1388600"
  },
  {
    "text": "that and now we need to uh integrate that again um with our website but before",
    "start": "1388600",
    "end": "1397600"
  },
  {
    "text": "that we need uh a data source because now we have a endpoint but it doesn't",
    "start": "1397600",
    "end": "1402880"
  },
  {
    "text": "hit any uh persistent storage so we create a resource so we have also uh",
    "start": "1402880",
    "end": "1408080"
  },
  {
    "text": "nice wiard here so you could also create here your own data type and we will",
    "start": "1408080",
    "end": "1413360"
  },
  {
    "text": "create a database for you we will use here our existing",
    "start": "1413360",
    "end": "1418880"
  },
  {
    "text": "one and Order ID we will as a primary key have the user and as a sort key to",
    "start": "1418880",
    "end": "1425039"
  },
  {
    "text": "order ID and then it also allows you to uh generate automatically some um graph",
    "start": "1425039",
    "end": "1432360"
  },
  {
    "text": "L schema uh based on your type you described but we already have defined it",
    "start": "1432360",
    "end": "1437440"
  },
  {
    "text": "so we won't create any additional and now you see it will create a Dynamo DP",
    "start": "1437440",
    "end": "1443520"
  },
  {
    "text": "table in the background for you with this data type and create a data source",
    "start": "1443520",
    "end": "1449000"
  },
  {
    "text": "so data source in appsync are more or less the endpoints which you can resolve",
    "start": "1449000",
    "end": "1454080"
  },
  {
    "text": "to so it can be a Dynamo DB table can be other data sources can be other um API",
    "start": "1454080",
    "end": "1461880"
  },
  {
    "text": "and you can all integrated on one call for example that's one of the big advantages",
    "start": "1461880",
    "end": "1468600"
  },
  {
    "text": "of cql so and to show you that we",
    "start": "1468600",
    "end": "1474480"
  },
  {
    "text": "will configure the query so I see here now more or less my types and the queries",
    "start": "1474480",
    "end": "1481200"
  },
  {
    "text": "for example here get orders and here the resolver the resolver is more or less what should happen if I hit this field I",
    "start": "1481200",
    "end": "1488799"
  },
  {
    "text": "can also do it on object base so if I have in order for example also uh stat of of the the status of the carrier I",
    "start": "1488799",
    "end": "1497000"
  },
  {
    "text": "could call the API of the carrier only for this specific field so I can really integrate with a lot of different apis",
    "start": "1497000",
    "end": "1503640"
  },
  {
    "text": "and my client have only to do one call to get all the relevant information and here for our uh get",
    "start": "1503640",
    "end": "1511000"
  },
  {
    "text": "orders we will use the order DB and call it with a um query function",
    "start": "1511000",
    "end": "1517720"
  },
  {
    "text": "where we take our user as um the identifier and the user comes from the",
    "start": "1517720",
    "end": "1525159"
  },
  {
    "text": "identity context and this is from Cognito so cognito if you register you get a unique ID for the user and we will",
    "start": "1525159",
    "end": "1532200"
  },
  {
    "text": "use this as a reference for the user because it's fully managed by Cognito and I don't have to create any own",
    "start": "1532200",
    "end": "1538799"
  },
  {
    "text": "custom user identifier and we will return a list of",
    "start": "1538799",
    "end": "1543919"
  },
  {
    "text": "uh objects because we are here um getting orders and then I save save this",
    "start": "1543919",
    "end": "1552159"
  },
  {
    "text": "resolver and then we like also to create the order because if you don't create",
    "start": "1552159",
    "end": "1558640"
  },
  {
    "text": "order we won't have to get some data from the API so for this we will um create a",
    "start": "1558640",
    "end": "1567159"
  },
  {
    "text": "Lambda function as we saw in the",
    "start": "1567159",
    "end": "1572640"
  },
  {
    "text": "architecture so Lambda is the serverless compute service um from",
    "start": "1572640",
    "end": "1578960"
  },
  {
    "text": "AWS and we will use not s here and I",
    "start": "1579360",
    "end": "1587320"
  },
  {
    "text": "prepared a Lambda role so Lambda access dynb so more or less it allows the",
    "start": "1587320",
    "end": "1592559"
  },
  {
    "text": "Lambda function to access the Dynamo DB table we created",
    "start": "1592559",
    "end": "1599039"
  },
  {
    "text": "before and here we do nothing very special we configure the region and call",
    "start": "1602600",
    "end": "1609960"
  },
  {
    "text": "the Dynamo DB uh with the um arguments we get from appsync to create the order",
    "start": "1609960",
    "end": "1619440"
  },
  {
    "text": "we could also do this in absn directly but in the next step of my startup I like to integrate here some fraud",
    "start": "1619440",
    "end": "1625480"
  },
  {
    "text": "detection method so I need a little bit more complex computer operations that's the reason why I use Lambda here as a",
    "start": "1625480",
    "end": "1633720"
  },
  {
    "text": "resolver then we save this Lambda function and then we have again to",
    "start": "1633960",
    "end": "1643320"
  },
  {
    "text": "create to the solver here so we have here the motation of the create order",
    "start": "1643320",
    "end": "1649080"
  },
  {
    "text": "um but before we have to configure the data source so here um also make create",
    "start": "1649080",
    "end": "1657039"
  },
  {
    "text": "order Lambda and then we can have the different sources as mentioned Dynamo Tob elastic search Lambda other",
    "start": "1657039",
    "end": "1663640"
  },
  {
    "text": "relational databases HTTP endpoints um or some very custom um endpoints and we",
    "start": "1663640",
    "end": "1671399"
  },
  {
    "text": "will use a Lambda function here in Frankfurt and the create order one and",
    "start": "1671399",
    "end": "1677880"
  },
  {
    "text": "we will will create a role that EP sync is allowed to invoke this um Lambda",
    "start": "1677880",
    "end": "1686559"
  },
  {
    "text": "function and then",
    "start": "1689000",
    "end": "1693880"
  },
  {
    "text": "second and then we now we can create a resolver with the Lambda function again",
    "start": "1694200",
    "end": "1701200"
  },
  {
    "text": "here we just Define that we like to invoke the data source as we see in the",
    "start": "1701200",
    "end": "1706320"
  },
  {
    "text": "top and the payload we have the arguments which is provided from the caller like the package name and the",
    "start": "1706320",
    "end": "1712360"
  },
  {
    "text": "email as you described in the schemer and then at user we will give the user object so what comes from Cognito where",
    "start": "1712360",
    "end": "1719679"
  },
  {
    "text": "we have for example the user ID and then we will also give order ID which we will",
    "start": "1719679",
    "end": "1726120"
  },
  {
    "text": "create here so you have really also some sophisticated um options you can use",
    "start": "1726120",
    "end": "1732640"
  },
  {
    "text": "directly in this resolver which runs on appsync so you can really do a lot in appsync itself and don't have to call",
    "start": "1732640",
    "end": "1739080"
  },
  {
    "text": "Lambda function all the time and then we save this resolver and",
    "start": "1739080",
    "end": "1744760"
  },
  {
    "text": "now we have created our back end and again we like to integrate it now with our front end and for this we will use",
    "start": "1744760",
    "end": "1752240"
  },
  {
    "text": "amplify again which is also pretty",
    "start": "1752240",
    "end": "1757919"
  },
  {
    "text": "straightforward we will go and import now in addition to",
    "start": "1758200",
    "end": "1765919"
  },
  {
    "text": "the O method the API method from uh amplify with this method we can call",
    "start": "1765919",
    "end": "1772480"
  },
  {
    "text": "either API Gateway for rest apis or appsync for graphql apis and for graphql",
    "start": "1772480",
    "end": "1778799"
  },
  {
    "text": "we need also the graphql operation because that makes standard transformation um of the call that it's",
    "start": "1778799",
    "end": "1784799"
  },
  {
    "text": "cphq compatible we then also import the mutation and this is more or less",
    "start": "1784799",
    "end": "1792080"
  },
  {
    "text": "the structure um I don't see see it here",
    "start": "1792080",
    "end": "1800440"
  },
  {
    "text": "okay to copy",
    "start": "1800440",
    "end": "1804480"
  },
  {
    "text": "it down here um so we have here the create order where we Define that we",
    "start": "1805799",
    "end": "1812080"
  },
  {
    "text": "have a mutation and then how it's called and which variables we will use so it's",
    "start": "1812080",
    "end": "1818159"
  },
  {
    "text": "pretty simple forward we have to create order we will give a package and the email and then we Define here that it's",
    "start": "1818159",
    "end": "1824960"
  },
  {
    "text": "where really the advantage of graphic elcom what we like to get back from the API so here it's the code in the schema",
    "start": "1824960",
    "end": "1831360"
  },
  {
    "text": "we Define that we have a code as um call back mandatory or a message um as you",
    "start": "1831360",
    "end": "1839200"
  },
  {
    "text": "can see in the schema so we have here status return which we have defined here",
    "start": "1839200",
    "end": "1845640"
  },
  {
    "text": "and then we have code and also message so I could go here and say also I like",
    "start": "1845640",
    "end": "1851559"
  },
  {
    "text": "to have the message back um or not so I and at the client I can Define which dat",
    "start": "1851559",
    "end": "1858039"
  },
  {
    "text": "I like to get from the endpoint so I can Define API endpoint with a wit data set",
    "start": "1858039",
    "end": "1863440"
  },
  {
    "text": "as a callback but as a client I can really Define what data I need and so I don't have to shovel all the data around",
    "start": "1863440",
    "end": "1871600"
  },
  {
    "text": "um if if I not need",
    "start": "1871600",
    "end": "1875880"
  },
  {
    "text": "that and then we will go and have the function which calls",
    "start": "1878639",
    "end": "1885840"
  },
  {
    "text": "more or less the cph end point so so we use here the API from amplify the cql",
    "start": "1885840",
    "end": "1892039"
  },
  {
    "text": "method with the cql operation where we use the mutation description we saw and",
    "start": "1892039",
    "end": "1898360"
  },
  {
    "text": "then we will give the package name and the email address um and then accordingly if the",
    "start": "1898360",
    "end": "1906919"
  },
  {
    "text": "status code is not 200 we will give a short alert to the user that it knows something goes wrong or if it's",
    "start": "1906919",
    "end": "1913679"
  },
  {
    "text": "successful we just reload the page that you will see um that it was successful ful and to call this functions we make a",
    "start": "1913679",
    "end": "1923279"
  },
  {
    "text": "little update on the package field of the website so what it simply",
    "start": "1923279",
    "end": "1929200"
  },
  {
    "text": "does uh one [Music] second is that on the buttons you saw um",
    "start": "1929200",
    "end": "1937559"
  },
  {
    "text": "we will have now a onclick event here which um calls the create order",
    "start": "1937559",
    "end": "1944440"
  },
  {
    "text": "function and then hits with amplify the app Sy",
    "start": "1944440",
    "end": "1949720"
  },
  {
    "text": "endpoint and if we go now on the website and we go for example here on the",
    "start": "1949720",
    "end": "1958799"
  },
  {
    "text": "package it should call the endpoint let's have a short look what",
    "start": "1960080",
    "end": "1968360"
  },
  {
    "text": "happened so we got a 404 that it's good so we have a little uh uh live debuging",
    "start": "1968360",
    "end": "1975799"
  },
  {
    "text": "we didn't um tell uh amplify where the endpoint is so we need to define the uh",
    "start": "1975799",
    "end": "1981880"
  },
  {
    "text": "endpoint of um AB syn so we have of course also here a endpoint and in our",
    "start": "1981880",
    "end": "1988600"
  },
  {
    "text": "configuration file we have here the URL so which URL amplify needs to call to do",
    "start": "1988600",
    "end": "1996360"
  },
  {
    "text": "that so and if we now hit the",
    "start": "1996360",
    "end": "2002360"
  },
  {
    "text": "button we had refresh and if we go now here in our Dynamo DB",
    "start": "2002760",
    "end": "2010600"
  },
  {
    "text": "table where we have our order DB we will see that we have item with the user the",
    "start": "2011200",
    "end": "2017519"
  },
  {
    "text": "email the package and the order ID so we had have now a functional interaction",
    "start": "2017519",
    "end": "2023080"
  },
  {
    "text": "with our backend from our front end and of course the user might like to",
    "start": "2023080",
    "end": "2030279"
  },
  {
    "text": "see what you have ordered previously so a short overview of the orders um so we will also",
    "start": "2030279",
    "end": "2039679"
  },
  {
    "text": "make",
    "start": "2039919",
    "end": "2042360"
  },
  {
    "text": "this and for this we go",
    "start": "2047040",
    "end": "2051398"
  },
  {
    "text": "here so in the top we will now import the query uh is the same as the mutation",
    "start": "2055079",
    "end": "2062679"
  },
  {
    "text": "only that we describe that we like to have a query and we will now on the",
    "start": "2062679",
    "end": "2067839"
  },
  {
    "text": "component willmon function we will invoke the graph L end point with the",
    "start": "2067839",
    "end": "2073878"
  },
  {
    "text": "query functionality to get this information um and then display",
    "start": "2073879",
    "end": "2079440"
  },
  {
    "text": "it and for this I prepared also some little",
    "start": "2079440",
    "end": "2084839"
  },
  {
    "text": "HTML that we will display the orders in here so what we do here is",
    "start": "2084839",
    "end": "2092800"
  },
  {
    "text": "more or less if we get some orders from the endpoint we will display a table um",
    "start": "2092800",
    "end": "2098880"
  },
  {
    "text": "with the orders and if you go now on the website we have here our tables where we",
    "start": "2098880",
    "end": "2106640"
  },
  {
    "text": "get information and for example if I order a second one I see it direct clean",
    "start": "2106640",
    "end": "2112839"
  },
  {
    "text": "here so I can really make very Dynamic web pages can also um create web Hooks",
    "start": "2112839",
    "end": "2118480"
  },
  {
    "text": "and all uh this functionality and to show more or less quickly how",
    "start": "2118480",
    "end": "2127040"
  },
  {
    "text": "some uh query is built if we go here we can log in with our user pool",
    "start": "2127040",
    "end": "2135079"
  },
  {
    "text": "for that we need um user the client API so this is part of the",
    "start": "2135079",
    "end": "2143000"
  },
  {
    "text": "appsync service to test your um API without a",
    "start": "2143000",
    "end": "2149920"
  },
  {
    "text": "front end or something like that so I can go here and say okay like",
    "start": "2149920",
    "end": "2155280"
  },
  {
    "text": "make a query with get get",
    "start": "2155280",
    "end": "2159800"
  },
  {
    "text": "orders and then I say okay I like to call get orders and I like to get user",
    "start": "2160640",
    "end": "2166160"
  },
  {
    "text": "so that would be the definition if I like to get only the user and the big",
    "start": "2166160",
    "end": "2171839"
  },
  {
    "text": "advantages of cql is if I now change something in the front end and also like",
    "start": "2171839",
    "end": "2177560"
  },
  {
    "text": "to get for example the order ID to make a different call to update it I just go",
    "start": "2177560",
    "end": "2183160"
  },
  {
    "text": "in the front end and say okay now I also like to have the order ID and don't have to change anything at the back end so we",
    "start": "2183160",
    "end": "2190119"
  },
  {
    "text": "have really decoupling of front end to back end with cql so it's definitely um",
    "start": "2190119",
    "end": "2195800"
  },
  {
    "text": "worth uh a look and now we have done all of that so",
    "start": "2195800",
    "end": "2201520"
  },
  {
    "text": "we have our website where we have to log in we have the user authentification we can create orders we see the orders but",
    "start": "2201520",
    "end": "2209319"
  },
  {
    "text": "now it at the moment it runs locally on my um um Ide at AWS so it means now we",
    "start": "2209319",
    "end": "2218000"
  },
  {
    "text": "have to put it on S3 and for this we will build a static",
    "start": "2218000",
    "end": "2226359"
  },
  {
    "text": "website so the one of the big advantages of re s is that all is uh more or less",
    "start": "2226359",
    "end": "2233040"
  },
  {
    "text": "done with JavaScript and HTML and CSS so I can create a so-called static",
    "start": "2233040",
    "end": "2239520"
  },
  {
    "text": "website which creates then HTML file with a Javascript file which I can then",
    "start": "2239520",
    "end": "2245359"
  },
  {
    "text": "Deploy on for example S3 and I don't need some big um compute power with ec2",
    "start": "2245359",
    "end": "2251520"
  },
  {
    "text": "or containers to be able to deliver my front end so I can really reduce um the",
    "start": "2251520",
    "end": "2258400"
  },
  {
    "text": "cost of that here and it hasn't build npm run",
    "start": "2258400",
    "end": "2269040"
  },
  {
    "text": "build so now it um creates the build here and after it's done we will",
    "start": "2270000",
    "end": "2277520"
  },
  {
    "text": "uploaded it to S3 and then it's on S3 and we can hit then the end point from",
    "start": "2277520",
    "end": "2283920"
  },
  {
    "text": "the cloudfront distribution our CDN to see the website very easily the build",
    "start": "2283920",
    "end": "2289680"
  },
  {
    "text": "process uh need some seconds here to finish",
    "start": "2289680",
    "end": "2298078"
  },
  {
    "text": "[Music] so then at the meantime we can go to",
    "start": "2304210",
    "end": "2311960"
  },
  {
    "text": "cloudfront um and get our URL for the cloud front",
    "start": "2311960",
    "end": "2318920"
  },
  {
    "text": "distribution come on typically that doesn't take that long",
    "start": "2321079",
    "end": "2327480"
  },
  {
    "text": "but now we are finished so we now just sync the build folder which we uh let",
    "start": "2327480",
    "end": "2334240"
  },
  {
    "text": "created from re uh JS and if we now hit the cloud from",
    "start": "2334240",
    "end": "2341640"
  },
  {
    "text": "distribution with another window we will see again we have to sign",
    "start": "2341640",
    "end": "2349000"
  },
  {
    "text": "in so the full functionality is available even if we only have a static",
    "start": "2349000",
    "end": "2355400"
  },
  {
    "text": "website and then we can sign in and see the full page and can also create um new",
    "start": "2359079",
    "end": "2366640"
  },
  {
    "text": "orders and see also the orders we have done so far so that's more or less a",
    "start": "2366640",
    "end": "2372280"
  },
  {
    "text": "quick uh demo of how fast you can really build a serverless um",
    "start": "2372280",
    "end": "2379319"
  },
  {
    "text": "application and now I will give you um overview about the services we used so",
    "start": "2379319",
    "end": "2386119"
  },
  {
    "text": "we had Cognito as our user management uh system so it's a manage user directory",
    "start": "2386119",
    "end": "2391760"
  },
  {
    "text": "you can also um sign in with existing identities so for example with Facebook",
    "start": "2391760",
    "end": "2397400"
  },
  {
    "text": "Google or Amazon so that your user don't have to create a new account you have",
    "start": "2397400",
    "end": "2402720"
  },
  {
    "text": "also um hosted UI you have seen one of those and you can also be able to access",
    "start": "2402720",
    "end": "2409599"
  },
  {
    "text": "AWS Resources with the Cognito users and it's uh open ID connect and or2 based so",
    "start": "2409599",
    "end": "2416920"
  },
  {
    "text": "they're industry standards AWS app sync was the cql uh service so we have a",
    "start": "2416920",
    "end": "2422560"
  },
  {
    "text": "managed crafl server which is also serverless so you only pay per invocation not for idle we connected to",
    "start": "2422560",
    "end": "2430640"
  },
  {
    "text": "data sources in our accounts and we have also um data sync real time and offline",
    "start": "2430640",
    "end": "2436640"
  },
  {
    "text": "capabilities for app sync so we I can also interact for example with a mobile app and if it's offline and comes online",
    "start": "2436640",
    "end": "2443160"
  },
  {
    "text": "again I can um sync the data there I can use SCF as a facade for any",
    "start": "2443160",
    "end": "2449960"
  },
  {
    "text": "AWS Services I have and it also have to conflict detection resolution in the",
    "start": "2449960",
    "end": "2455079"
  },
  {
    "text": "cloud with for example the data synchronization and we have Enterprise security features",
    "start": "2455079",
    "end": "2460160"
  },
  {
    "text": "with API keys and Cognito users as we have demonstrated Lambda as the serverless",
    "start": "2460160",
    "end": "2467680"
  },
  {
    "text": "compute uh service we have all the uh capabilities which we like from",
    "start": "2467680",
    "end": "2473280"
  },
  {
    "text": "serverless so no server supervision or manage we scale with usage we have never pay for idle and we have availability",
    "start": "2473280",
    "end": "2480359"
  },
  {
    "text": "and fall tolerance buil in and as our um persistent storage we",
    "start": "2480359",
    "end": "2486119"
  },
  {
    "text": "used Amazon Dynamo B which is a fully managed nosql database document or key",
    "start": "2486119",
    "end": "2492000"
  },
  {
    "text": "value based it scales to nearly any workload so uh Amazon um retail operates",
    "start": "2492000",
    "end": "2499520"
  },
  {
    "text": "for example on Dynamo DB with billions of Records it's really fast and",
    "start": "2499520",
    "end": "2504720"
  },
  {
    "text": "consistent it has a lot of fine TR access control so it can really give permissions on F field basis and it's",
    "start": "2504720",
    "end": "2512560"
  },
  {
    "text": "event driven programming uh possible with Dynamo DB and as we see amplify",
    "start": "2512560",
    "end": "2517599"
  },
  {
    "text": "library is more or less uh a library for JavaScript rejs angularjs as well as for",
    "start": "2517599",
    "end": "2524720"
  },
  {
    "text": "IOS and Android which really enables you as front-end developer to interact with all the AWS backend resources pretty",
    "start": "2524720",
    "end": "2531960"
  },
  {
    "text": "easily so for example with authentification as we saw also with analytics with pinpoint with apis or",
    "start": "2531960",
    "end": "2539440"
  },
  {
    "text": "with storage if I like for example to upload some profile images um or also",
    "start": "2539440",
    "end": "2544680"
  },
  {
    "text": "caching and push notifications with apps so and in the summary to bring this all",
    "start": "2544680",
    "end": "2551359"
  },
  {
    "text": "together the big advantage that the building blocks are ready to use you don't have to configure a lot you can",
    "start": "2551359",
    "end": "2557160"
  },
  {
    "text": "just grab it and use it don't have to um bring operation system to harden it and",
    "start": "2557160",
    "end": "2563480"
  },
  {
    "text": "all the stuff you can really easily start with serverless you have the benefit it scales with your needs it's",
    "start": "2563480",
    "end": "2570520"
  },
  {
    "text": "um High available and fall tolerance built in so you don't have to care about that to be in multiple availity zones",
    "start": "2570520",
    "end": "2576559"
  },
  {
    "text": "because the ser Springs that automatically and you pay only for what you use really on the invocation base so",
    "start": "2576559",
    "end": "2583400"
  },
  {
    "text": "if no user interacts with your website you have no costs at all so that's pretty good also for startups because",
    "start": "2583400",
    "end": "2589960"
  },
  {
    "text": "resources are mostly uh tied so you really have only cost if you interact with your",
    "start": "2589960",
    "end": "2596160"
  },
  {
    "text": "customers and one of the biggest um points I like to make here is really if",
    "start": "2596160",
    "end": "2602680"
  },
  {
    "text": "you're a startup uh middle stun company or even Enterprise really build your",
    "start": "2602680",
    "end": "2608559"
  },
  {
    "text": "minimal vir product as fast as possible so if you have a product idea go and build it build the first",
    "start": "2608559",
    "end": "2615720"
  },
  {
    "text": "draft of it and then go to your customers and iterate on it really really go to your um customers because",
    "start": "2615720",
    "end": "2623319"
  },
  {
    "text": "they know what they like and so you can easily make a demo and develop it",
    "start": "2623319",
    "end": "2628520"
  },
  {
    "text": "further with your customers so don't be 6 months one year in your uh office and",
    "start": "2628520",
    "end": "2635240"
  },
  {
    "text": "develop something and then interact with the customer really maybe a little bit more than half an hour maybe a day or",
    "start": "2635240",
    "end": "2641480"
  },
  {
    "text": "three but then really go out there it's also helpful if you like to present the idea so PowerPoint we can create really",
    "start": "2641480",
    "end": "2648000"
  },
  {
    "text": "cool it's fine but to really see how it works it's really impressive if you can",
    "start": "2648000",
    "end": "2653160"
  },
  {
    "text": "just show a demo how it works how it interacts and then it's really easy to",
    "start": "2653160",
    "end": "2658920"
  },
  {
    "text": "deploy uh and to develop as we see with amplifier we have a lot of capabilities",
    "start": "2658920",
    "end": "2664160"
  },
  {
    "text": "to really easily interact with all the building blocks um we can use there and",
    "start": "2664160",
    "end": "2671280"
  },
  {
    "text": "with that um we have some related breakouts so we have uh serverless best",
    "start": "2671280",
    "end": "2676559"
  },
  {
    "text": "practices for conation management and cost optimization it's the next session in room four and we have also a",
    "start": "2676559",
    "end": "2683880"
  },
  {
    "text": "serverless open location data with here XY Z it's at 300 p.m. in room 2 and",
    "start": "2683880",
    "end": "2690359"
  },
  {
    "text": "yesterday we had also talk about full stack in the era of serverless computing which also gives a good uh overview",
    "start": "2690359",
    "end": "2696599"
  },
  {
    "text": "about ser lless so if you have missed that talk it will become in a couple of",
    "start": "2696599",
    "end": "2701839"
  },
  {
    "text": "days available on YouTube as a video and that moment I will really thank you all",
    "start": "2701839",
    "end": "2707480"
  },
  {
    "text": "um for being here and listen to me and I really would appreciate if you could uh",
    "start": "2707480",
    "end": "2713400"
  },
  {
    "text": "complete the session survey or hit the smilees on your way out to rate a",
    "start": "2713400",
    "end": "2718520"
  },
  {
    "text": "session that I uh can improve there and if you have any further questions I will",
    "start": "2718520",
    "end": "2723920"
  },
  {
    "text": "be uh at the front of the startup Central um or you can uh drop me email",
    "start": "2723920",
    "end": "2729680"
  },
  {
    "text": "uh at any time so thank you very much",
    "start": "2729680",
    "end": "2734720"
  }
]