[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2320"
  },
  {
    "text": "do you like to make your sequels",
    "start": "2320",
    "end": "3919"
  },
  {
    "text": "of a high availability setup on aws much",
    "start": "3919",
    "end": "6720"
  },
  {
    "text": "easier to maintain and a lot more cost",
    "start": "6720",
    "end": "8960"
  },
  {
    "text": "effective",
    "start": "8960",
    "end": "9920"
  },
  {
    "text": "then watch this deep dive on how to do",
    "start": "9920",
    "end": "11840"
  },
  {
    "text": "it with fsx for windows file server",
    "start": "11840",
    "end": "14400"
  },
  {
    "text": "hello my name is daniel kreuzofer i'm a",
    "start": "14400",
    "end": "16320"
  },
  {
    "text": "specialist solutions architect for",
    "start": "16320",
    "end": "18000"
  },
  {
    "text": "microsoft workloads on aws",
    "start": "18000",
    "end": "20640"
  },
  {
    "text": "let's have a look at the agenda we'll",
    "start": "20640",
    "end": "22480"
  },
  {
    "start": "21000",
    "end": "303000"
  },
  {
    "text": "start with a brief overview of whatever",
    "start": "22480",
    "end": "24560"
  },
  {
    "text": "64 windows file server is",
    "start": "24560",
    "end": "27039"
  },
  {
    "text": "then we'll have a look on how customers",
    "start": "27039",
    "end": "28960"
  },
  {
    "text": "are usually running secret server high",
    "start": "28960",
    "end": "30880"
  },
  {
    "text": "availability setups on aws",
    "start": "30880",
    "end": "33040"
  },
  {
    "text": "and how fsx can simplify those then i'll",
    "start": "33040",
    "end": "36079"
  },
  {
    "text": "show you a demo of a sql server high",
    "start": "36079",
    "end": "38160"
  },
  {
    "text": "availability setup",
    "start": "38160",
    "end": "39200"
  },
  {
    "text": "using fsx for windows and how simple it",
    "start": "39200",
    "end": "42239"
  },
  {
    "text": "is to set up a sample environment",
    "start": "42239",
    "end": "44960"
  },
  {
    "text": "so what is amazon fsx for windows 5",
    "start": "44960",
    "end": "47680"
  },
  {
    "text": "server",
    "start": "47680",
    "end": "48719"
  },
  {
    "text": "in its core it's a fully managed windows",
    "start": "48719",
    "end": "51199"
  },
  {
    "text": "file system",
    "start": "51199",
    "end": "52320"
  },
  {
    "text": "that means you get native windows",
    "start": "52320",
    "end": "54160"
  },
  {
    "text": "servers that provide a windows file",
    "start": "54160",
    "end": "55920"
  },
  {
    "text": "system to your applications",
    "start": "55920",
    "end": "58320"
  },
  {
    "text": "at the same time fsx for windows is",
    "start": "58320",
    "end": "60160"
  },
  {
    "text": "deeply integrated in the aws platform",
    "start": "60160",
    "end": "62640"
  },
  {
    "text": "and can be configured through the aws",
    "start": "62640",
    "end": "64640"
  },
  {
    "text": "console",
    "start": "64640",
    "end": "65280"
  },
  {
    "text": "and also through aws apis and because",
    "start": "65280",
    "end": "68640"
  },
  {
    "text": "it's running native windows servers",
    "start": "68640",
    "end": "70560"
  },
  {
    "text": "underneath it's fully",
    "start": "70560",
    "end": "72000"
  },
  {
    "text": "compatible with the windows file system",
    "start": "72000",
    "end": "73840"
  },
  {
    "text": "and also can be joined to existing",
    "start": "73840",
    "end": "75840"
  },
  {
    "text": "customer active directories",
    "start": "75840",
    "end": "77920"
  },
  {
    "text": "or the aws manage active directory",
    "start": "77920",
    "end": "80320"
  },
  {
    "text": "service",
    "start": "80320",
    "end": "81520"
  },
  {
    "text": "you can run it in a multi ac setup for",
    "start": "81520",
    "end": "84159"
  },
  {
    "text": "high availability",
    "start": "84159",
    "end": "85360"
  },
  {
    "text": "and there is different options to",
    "start": "85360",
    "end": "86960"
  },
  {
    "text": "optimize each fsx instance for",
    "start": "86960",
    "end": "89119"
  },
  {
    "text": "cost be it using by hdd storage or ssd",
    "start": "89119",
    "end": "92640"
  },
  {
    "text": "storage",
    "start": "92640",
    "end": "93280"
  },
  {
    "text": "that depends on the use case and your",
    "start": "93280",
    "end": "95040"
  },
  {
    "text": "performance requirements of course",
    "start": "95040",
    "end": "97119"
  },
  {
    "text": "coming back to the topic of how",
    "start": "97119",
    "end": "98560"
  },
  {
    "text": "customers run their sql server workloads",
    "start": "98560",
    "end": "100880"
  },
  {
    "text": "in aws",
    "start": "100880",
    "end": "102000"
  },
  {
    "text": "first there is two general ways to do",
    "start": "102000",
    "end": "104000"
  },
  {
    "text": "this customers can use amazon rds which",
    "start": "104000",
    "end": "106880"
  },
  {
    "text": "is a managed solution",
    "start": "106880",
    "end": "108320"
  },
  {
    "text": "that already supports high performance",
    "start": "108320",
    "end": "110399"
  },
  {
    "text": "and high availability scenarios",
    "start": "110399",
    "end": "112479"
  },
  {
    "text": "but there's also customers who require a",
    "start": "112479",
    "end": "114640"
  },
  {
    "text": "lot more control",
    "start": "114640",
    "end": "115680"
  },
  {
    "text": "over their sql server setups and",
    "start": "115680",
    "end": "117520"
  },
  {
    "text": "configuration",
    "start": "117520",
    "end": "118719"
  },
  {
    "text": "and that's why those customers run sql",
    "start": "118719",
    "end": "120560"
  },
  {
    "text": "server self-managed on amazon ec2",
    "start": "120560",
    "end": "123280"
  },
  {
    "text": "and that's the scenarios we're going to",
    "start": "123280",
    "end": "124960"
  },
  {
    "text": "focus on right now",
    "start": "124960",
    "end": "126560"
  },
  {
    "text": "so how does a typical high availability",
    "start": "126560",
    "end": "129039"
  },
  {
    "text": "scenario for sql server on amazon ec2",
    "start": "129039",
    "end": "131840"
  },
  {
    "text": "look like",
    "start": "131840",
    "end": "133280"
  },
  {
    "text": "normally you run at least two db",
    "start": "133280",
    "end": "135440"
  },
  {
    "text": "instances",
    "start": "135440",
    "end": "136319"
  },
  {
    "text": "where one is the primary server which",
    "start": "136319",
    "end": "138560"
  },
  {
    "text": "has its copy of the database on an ebs",
    "start": "138560",
    "end": "140959"
  },
  {
    "text": "volume",
    "start": "140959",
    "end": "141760"
  },
  {
    "text": "and that instance is shipping all the",
    "start": "141760",
    "end": "143520"
  },
  {
    "text": "changes through different mechanisms",
    "start": "143520",
    "end": "145599"
  },
  {
    "text": "to the secondary server or multiple",
    "start": "145599",
    "end": "147599"
  },
  {
    "text": "secondary servers",
    "start": "147599",
    "end": "149120"
  },
  {
    "text": "these setups are called always on",
    "start": "149120",
    "end": "151200"
  },
  {
    "text": "availability groups",
    "start": "151200",
    "end": "152959"
  },
  {
    "text": "the nature of these setups is that they",
    "start": "152959",
    "end": "155440"
  },
  {
    "text": "will have",
    "start": "155440",
    "end": "156000"
  },
  {
    "text": "a separate copy of the database on each",
    "start": "156000",
    "end": "158560"
  },
  {
    "text": "individual server",
    "start": "158560",
    "end": "160239"
  },
  {
    "text": "and there's also another server running",
    "start": "160239",
    "end": "162160"
  },
  {
    "text": "in a separate ac",
    "start": "162160",
    "end": "163519"
  },
  {
    "text": "as the witness but there is also a setup",
    "start": "163519",
    "end": "166160"
  },
  {
    "text": "that is called",
    "start": "166160",
    "end": "167120"
  },
  {
    "text": "failover clustering instances what's",
    "start": "167120",
    "end": "169599"
  },
  {
    "text": "different here",
    "start": "169599",
    "end": "170640"
  },
  {
    "text": "you still have primary and secondary",
    "start": "170640",
    "end": "172879"
  },
  {
    "text": "servers but this time",
    "start": "172879",
    "end": "174480"
  },
  {
    "text": "the database copy just exists once on a",
    "start": "174480",
    "end": "177599"
  },
  {
    "text": "shared fsx for windows file system",
    "start": "177599",
    "end": "180560"
  },
  {
    "text": "the witness is another fsx for windows",
    "start": "180560",
    "end": "183120"
  },
  {
    "text": "running in the third",
    "start": "183120",
    "end": "184080"
  },
  {
    "text": "availability zone so no additional ec2",
    "start": "184080",
    "end": "186879"
  },
  {
    "text": "instance is required as well",
    "start": "186879",
    "end": "188640"
  },
  {
    "text": "and that's where fs64 windows file",
    "start": "188640",
    "end": "190800"
  },
  {
    "text": "server makes this setup much",
    "start": "190800",
    "end": "192640"
  },
  {
    "text": "simpler because you don't have to set up",
    "start": "192640",
    "end": "194720"
  },
  {
    "text": "and maintain that highly available",
    "start": "194720",
    "end": "196720"
  },
  {
    "text": "shared file system",
    "start": "196720",
    "end": "198560"
  },
  {
    "text": "there's also other aspects to consider",
    "start": "198560",
    "end": "200720"
  },
  {
    "text": "why a failover clustering setup might be",
    "start": "200720",
    "end": "202879"
  },
  {
    "text": "better than using availability groups",
    "start": "202879",
    "end": "205440"
  },
  {
    "text": "one major difference is that failover",
    "start": "205440",
    "end": "208000"
  },
  {
    "text": "clustering",
    "start": "208000",
    "end": "208799"
  },
  {
    "text": "doesn't require a sql server enterprise",
    "start": "208799",
    "end": "211440"
  },
  {
    "text": "license",
    "start": "211440",
    "end": "212159"
  },
  {
    "text": "and instead can use standard licensing",
    "start": "212159",
    "end": "215040"
  },
  {
    "text": "and that of course reduces the tco",
    "start": "215040",
    "end": "217760"
  },
  {
    "text": "a lot the failover clustering setup is",
    "start": "217760",
    "end": "220879"
  },
  {
    "text": "also very familiar and a common scenario",
    "start": "220879",
    "end": "223519"
  },
  {
    "text": "for running sql on premises",
    "start": "223519",
    "end": "225599"
  },
  {
    "text": "so you can leverage that knowledge it's",
    "start": "225599",
    "end": "228159"
  },
  {
    "text": "also faster because",
    "start": "228159",
    "end": "229360"
  },
  {
    "text": "replication is handled by the storage",
    "start": "229360",
    "end": "231440"
  },
  {
    "text": "system and not by the secret server",
    "start": "231440",
    "end": "233680"
  },
  {
    "text": "instant itself",
    "start": "233680",
    "end": "234959"
  },
  {
    "text": "so this frees up resources on the",
    "start": "234959",
    "end": "236799"
  },
  {
    "text": "database server",
    "start": "236799",
    "end": "238159"
  },
  {
    "text": "and it's simple to set up so database",
    "start": "238159",
    "end": "240480"
  },
  {
    "text": "administrators will require less effort",
    "start": "240480",
    "end": "242720"
  },
  {
    "text": "to ensure high availability setups",
    "start": "242720",
    "end": "245840"
  },
  {
    "text": "now it's time to show you this failover",
    "start": "245840",
    "end": "247599"
  },
  {
    "text": "clustering scenario in the real world",
    "start": "247599",
    "end": "249680"
  },
  {
    "text": "this demo is based on a blog post that",
    "start": "249680",
    "end": "251519"
  },
  {
    "text": "was published on the aws website by my",
    "start": "251519",
    "end": "254239"
  },
  {
    "text": "colleagues due to twicer",
    "start": "254239",
    "end": "255840"
  },
  {
    "text": "bresch bengali and ellen vittier we've",
    "start": "255840",
    "end": "258400"
  },
  {
    "text": "put the link to the blog post in the",
    "start": "258400",
    "end": "259840"
  },
  {
    "text": "description box of this video for your",
    "start": "259840",
    "end": "261759"
  },
  {
    "text": "reference",
    "start": "261759",
    "end": "262880"
  },
  {
    "text": "so we'll start right into the",
    "start": "262880",
    "end": "264479"
  },
  {
    "text": "architecture diagram of the blog post",
    "start": "264479",
    "end": "266479"
  },
  {
    "text": "and how to get started",
    "start": "266479",
    "end": "268240"
  },
  {
    "text": "this infrastructure is used on a blog",
    "start": "268240",
    "end": "269919"
  },
  {
    "text": "post and also for this demo now the",
    "start": "269919",
    "end": "271919"
  },
  {
    "text": "question is how do you set it up",
    "start": "271919",
    "end": "274000"
  },
  {
    "text": "well you can do this step by step",
    "start": "274000",
    "end": "275600"
  },
  {
    "text": "manually in the console or from the aws",
    "start": "275600",
    "end": "278320"
  },
  {
    "text": "command line interface",
    "start": "278320",
    "end": "279759"
  },
  {
    "text": "but we've created a quick start in the",
    "start": "279759",
    "end": "281759"
  },
  {
    "text": "form of a cdk",
    "start": "281759",
    "end": "283040"
  },
  {
    "text": "project a cloud development kit project",
    "start": "283040",
    "end": "285840"
  },
  {
    "text": "that will do the deployment of this",
    "start": "285840",
    "end": "287520"
  },
  {
    "text": "basic infrastructure",
    "start": "287520",
    "end": "289120"
  },
  {
    "text": "the link to that project is in the",
    "start": "289120",
    "end": "290560"
  },
  {
    "text": "description box of this video as well",
    "start": "290560",
    "end": "292720"
  },
  {
    "text": "so if you never use cdk before you",
    "start": "292720",
    "end": "295040"
  },
  {
    "text": "should watch our introduction to cdk",
    "start": "295040",
    "end": "297520"
  },
  {
    "text": "also linked in the description but i",
    "start": "297520",
    "end": "299600"
  },
  {
    "text": "would recommend doing that later once",
    "start": "299600",
    "end": "301440"
  },
  {
    "text": "you like to implement this on your own",
    "start": "301440",
    "end": "303520"
  },
  {
    "start": "303000",
    "end": "389000"
  },
  {
    "text": "so let's have a brief look at the cdk",
    "start": "303520",
    "end": "305440"
  },
  {
    "text": "project and how to use it",
    "start": "305440",
    "end": "307280"
  },
  {
    "text": "the cdk project has multiple stacks that",
    "start": "307280",
    "end": "310160"
  },
  {
    "text": "represent the architecture for the demo",
    "start": "310160",
    "end": "312080"
  },
  {
    "text": "environment",
    "start": "312080",
    "end": "313039"
  },
  {
    "text": "starting with the vpc stack and dhcp",
    "start": "313039",
    "end": "315840"
  },
  {
    "text": "options for active directory",
    "start": "315840",
    "end": "318000"
  },
  {
    "text": "then the managed active directory and",
    "start": "318000",
    "end": "320080"
  },
  {
    "text": "the secret manager",
    "start": "320080",
    "end": "321280"
  },
  {
    "text": "that will hold our administrator",
    "start": "321280",
    "end": "322880"
  },
  {
    "text": "password so we can log into our machines",
    "start": "322880",
    "end": "324880"
  },
  {
    "text": "later",
    "start": "324880",
    "end": "325600"
  },
  {
    "text": "the fsx for windows stack a bastion host",
    "start": "325600",
    "end": "328800"
  },
  {
    "text": "stack",
    "start": "328800",
    "end": "329360"
  },
  {
    "text": "we will use this machine to log into the",
    "start": "329360",
    "end": "331199"
  },
  {
    "text": "vpc and from there we will connect to",
    "start": "331199",
    "end": "333120"
  },
  {
    "text": "the other machines in the",
    "start": "333120",
    "end": "334240"
  },
  {
    "text": "environment and finally the sql server",
    "start": "334240",
    "end": "336880"
  },
  {
    "text": "ec2 instances",
    "start": "336880",
    "end": "338000"
  },
  {
    "text": "in another cdk stack to run this",
    "start": "338000",
    "end": "340560"
  },
  {
    "text": "deployment the only thing to do is to",
    "start": "340560",
    "end": "342400"
  },
  {
    "text": "change these parameters to your aws",
    "start": "342400",
    "end": "344800"
  },
  {
    "text": "account number",
    "start": "344800",
    "end": "345919"
  },
  {
    "text": "and the aws region to deploy to you also",
    "start": "345919",
    "end": "349120"
  },
  {
    "text": "need to name a key pair in your account",
    "start": "349120",
    "end": "351520"
  },
  {
    "text": "for that",
    "start": "351520",
    "end": "352080"
  },
  {
    "text": "region that you have access to",
    "start": "352080",
    "end": "354240"
  },
  {
    "text": "everything else can be left as it is",
    "start": "354240",
    "end": "356240"
  },
  {
    "text": "unless you like to change things like",
    "start": "356240",
    "end": "357759"
  },
  {
    "text": "the performance of the fs6",
    "start": "357759",
    "end": "359680"
  },
  {
    "text": "or the size of the sql server instances",
    "start": "359680",
    "end": "361840"
  },
  {
    "text": "for example",
    "start": "361840",
    "end": "362880"
  },
  {
    "text": "this can be done here very easily to",
    "start": "362880",
    "end": "365440"
  },
  {
    "text": "deploy this",
    "start": "365440",
    "end": "366000"
  },
  {
    "text": "infrastructure into the account you only",
    "start": "366000",
    "end": "368240"
  },
  {
    "text": "have to run the cdk deploy command",
    "start": "368240",
    "end": "370319"
  },
  {
    "text": "and wait for it to finish the double",
    "start": "370319",
    "end": "372400"
  },
  {
    "text": "minus all parameter is used to deploy",
    "start": "372400",
    "end": "374479"
  },
  {
    "text": "all stacks in the project in sequence",
    "start": "374479",
    "end": "377120"
  },
  {
    "text": "so you don't have to run it multiple",
    "start": "377120",
    "end": "378880"
  },
  {
    "text": "times for each individual stack",
    "start": "378880",
    "end": "381280"
  },
  {
    "text": "this can take about two hours to finish",
    "start": "381280",
    "end": "383360"
  },
  {
    "text": "so we will not wait for it",
    "start": "383360",
    "end": "384960"
  },
  {
    "text": "instead let's have a look at the final",
    "start": "384960",
    "end": "386960"
  },
  {
    "text": "result in the aws console",
    "start": "386960",
    "end": "389360"
  },
  {
    "start": "389000",
    "end": "744000"
  },
  {
    "text": "once the deployment is complete you",
    "start": "389360",
    "end": "391120"
  },
  {
    "text": "should have a list of cloud formation",
    "start": "391120",
    "end": "393199"
  },
  {
    "text": "stacks in your aws account",
    "start": "393199",
    "end": "395360"
  },
  {
    "text": "that looks similar to this looking at",
    "start": "395360",
    "end": "398000"
  },
  {
    "text": "the ec2 console",
    "start": "398000",
    "end": "399759"
  },
  {
    "text": "you will see that there is now three",
    "start": "399759",
    "end": "401600"
  },
  {
    "text": "instances running",
    "start": "401600",
    "end": "403280"
  },
  {
    "text": "as defined there are two sql nodes and",
    "start": "403280",
    "end": "406240"
  },
  {
    "text": "one",
    "start": "406240",
    "end": "406639"
  },
  {
    "text": "bastion host referring back to the blog",
    "start": "406639",
    "end": "409840"
  },
  {
    "text": "post",
    "start": "409840",
    "end": "410479"
  },
  {
    "text": "using the cdk template we've just taken",
    "start": "410479",
    "end": "412960"
  },
  {
    "text": "the shortcut to about the middle of the",
    "start": "412960",
    "end": "414960"
  },
  {
    "text": "document",
    "start": "414960",
    "end": "416000"
  },
  {
    "text": "where the next step is to create the sql",
    "start": "416000",
    "end": "418400"
  },
  {
    "text": "server file share on the newly created",
    "start": "418400",
    "end": "420639"
  },
  {
    "text": "fs6 file system",
    "start": "420639",
    "end": "422080"
  },
  {
    "text": "to start working on that i will log on",
    "start": "422080",
    "end": "424400"
  },
  {
    "text": "to the bastion host but",
    "start": "424400",
    "end": "425840"
  },
  {
    "text": "to do that i need the administrator",
    "start": "425840",
    "end": "427759"
  },
  {
    "text": "password for the domain admin",
    "start": "427759",
    "end": "430319"
  },
  {
    "text": "where do we get that it's stored in aws",
    "start": "430319",
    "end": "433120"
  },
  {
    "text": "secrets manager",
    "start": "433120",
    "end": "434319"
  },
  {
    "text": "because the cdk template stored that",
    "start": "434319",
    "end": "436639"
  },
  {
    "text": "password in secrets manager",
    "start": "436639",
    "end": "438319"
  },
  {
    "text": "so it's safe and we can fetch it from",
    "start": "438319",
    "end": "440160"
  },
  {
    "text": "there here we go",
    "start": "440160",
    "end": "442080"
  },
  {
    "text": "i've retrieved a secret value this is",
    "start": "442080",
    "end": "444479"
  },
  {
    "text": "the user id and the managed id",
    "start": "444479",
    "end": "446720"
  },
  {
    "text": "the name of the domain and the password",
    "start": "446720",
    "end": "450160"
  },
  {
    "text": "now i can log into the bastion host by",
    "start": "450160",
    "end": "452080"
  },
  {
    "text": "clicking on the instance id",
    "start": "452080",
    "end": "453759"
  },
  {
    "text": "then on connect and then i can download",
    "start": "453759",
    "end": "455840"
  },
  {
    "text": "the rdp file",
    "start": "455840",
    "end": "456880"
  },
  {
    "text": "this makes it easier the only thing left",
    "start": "456880",
    "end": "459039"
  },
  {
    "text": "is to enter the correct credentials that",
    "start": "459039",
    "end": "460639"
  },
  {
    "text": "we just got from secrets manager",
    "start": "460639",
    "end": "462800"
  },
  {
    "text": "on the machine i double check in the",
    "start": "462800",
    "end": "464639"
  },
  {
    "text": "active directory users and computers",
    "start": "464639",
    "end": "466800"
  },
  {
    "text": "console",
    "start": "466800",
    "end": "467599"
  },
  {
    "text": "that all required machines are part of",
    "start": "467599",
    "end": "470000"
  },
  {
    "text": "the active directory",
    "start": "470000",
    "end": "471599"
  },
  {
    "text": "this looks correct i've also created one",
    "start": "471599",
    "end": "474400"
  },
  {
    "text": "service account for the secret server",
    "start": "474400",
    "end": "476400"
  },
  {
    "text": "instances",
    "start": "476400",
    "end": "477440"
  },
  {
    "text": "and a group db admins that i added that",
    "start": "477440",
    "end": "480240"
  },
  {
    "text": "service user to",
    "start": "480240",
    "end": "481599"
  },
  {
    "text": "and also my personal admin user i also",
    "start": "481599",
    "end": "484720"
  },
  {
    "text": "created a second group",
    "start": "484720",
    "end": "485919"
  },
  {
    "text": "sql servers which has as members the two",
    "start": "485919",
    "end": "489199"
  },
  {
    "text": "sql server computer objects next",
    "start": "489199",
    "end": "492240"
  },
  {
    "text": "according to the blog post i've mounted",
    "start": "492240",
    "end": "494080"
  },
  {
    "text": "the d",
    "start": "494080",
    "end": "494479"
  },
  {
    "text": "drive of the fsx so i can create my sql",
    "start": "494479",
    "end": "497520"
  },
  {
    "text": "server share",
    "start": "497520",
    "end": "498319"
  },
  {
    "text": "to be able to mount the fsx i added all",
    "start": "498319",
    "end": "500879"
  },
  {
    "text": "three computers",
    "start": "500879",
    "end": "502240"
  },
  {
    "text": "the bastion host the sql node 1 and the",
    "start": "502240",
    "end": "504560"
  },
  {
    "text": "sql node 2",
    "start": "504560",
    "end": "505680"
  },
  {
    "text": "to the default security group of the vpc",
    "start": "505680",
    "end": "508479"
  },
  {
    "text": "because otherwise they cannot reach the",
    "start": "508479",
    "end": "510560"
  },
  {
    "text": "fsx",
    "start": "510560",
    "end": "511599"
  },
  {
    "text": "i did this for convenience you can of",
    "start": "511599",
    "end": "513599"
  },
  {
    "text": "course define more fine grade network",
    "start": "513599",
    "end": "515518"
  },
  {
    "text": "access control but for the sake of the",
    "start": "515519",
    "end": "517279"
  },
  {
    "text": "demo this is good enough",
    "start": "517279",
    "end": "518880"
  },
  {
    "text": "so let's create the sql db folder on",
    "start": "518880",
    "end": "521200"
  },
  {
    "text": "that drive",
    "start": "521200",
    "end": "523839"
  },
  {
    "text": "next we use the powershell template",
    "start": "523839",
    "end": "525680"
  },
  {
    "text": "provided in the blog post",
    "start": "525680",
    "end": "527279"
  },
  {
    "text": "to create the fs6 share for sql the main",
    "start": "527279",
    "end": "530560"
  },
  {
    "text": "things to note are",
    "start": "530560",
    "end": "531839"
  },
  {
    "text": "that you need to change the fsx",
    "start": "531839",
    "end": "533839"
  },
  {
    "text": "parameter to the dns name of your fsx",
    "start": "533839",
    "end": "536480"
  },
  {
    "text": "windows remote powershell endpoint",
    "start": "536480",
    "end": "539120"
  },
  {
    "text": "you will find that dns name here in the",
    "start": "539120",
    "end": "541120"
  },
  {
    "text": "fsx console",
    "start": "541120",
    "end": "543279"
  },
  {
    "text": "also double check that the user and",
    "start": "543279",
    "end": "545279"
  },
  {
    "text": "group names provided to grand access",
    "start": "545279",
    "end": "547680"
  },
  {
    "text": "are the ones that you created in the",
    "start": "547680",
    "end": "549279"
  },
  {
    "text": "active directory",
    "start": "549279",
    "end": "550720"
  },
  {
    "text": "the special flag needed for the sql high",
    "start": "550720",
    "end": "553360"
  },
  {
    "text": "availability mode of the share is the",
    "start": "553360",
    "end": "555360"
  },
  {
    "text": "continuously available flag",
    "start": "555360",
    "end": "557680"
  },
  {
    "text": "so let's execute that command it should",
    "start": "557680",
    "end": "559680"
  },
  {
    "text": "now create our fsx share",
    "start": "559680",
    "end": "562000"
  },
  {
    "text": "that was successful the next step is we",
    "start": "562000",
    "end": "564320"
  },
  {
    "text": "set permissions to the share on the file",
    "start": "564320",
    "end": "566560"
  },
  {
    "text": "level",
    "start": "566560",
    "end": "567440"
  },
  {
    "text": "for that i will add db admins the sql",
    "start": "567440",
    "end": "570560"
  },
  {
    "text": "servers and the secret service account",
    "start": "570560",
    "end": "573200"
  },
  {
    "text": "to the security list and give full",
    "start": "573200",
    "end": "575360"
  },
  {
    "text": "control to all three objects",
    "start": "575360",
    "end": "579200"
  },
  {
    "text": "okay now we have created a file share",
    "start": "579200",
    "end": "581040"
  },
  {
    "text": "and we are ready to install",
    "start": "581040",
    "end": "582240"
  },
  {
    "text": "secret server in failover clustering",
    "start": "582240",
    "end": "584240"
  },
  {
    "text": "mode this part is probably well known to",
    "start": "584240",
    "end": "586880"
  },
  {
    "text": "anyone who has already",
    "start": "586880",
    "end": "588080"
  },
  {
    "text": "installed a sql server failover cluster",
    "start": "588080",
    "end": "590399"
  },
  {
    "text": "on premises",
    "start": "590399",
    "end": "591440"
  },
  {
    "text": "however to do this in aws our sql server",
    "start": "591440",
    "end": "594160"
  },
  {
    "text": "machines need more ip addresses",
    "start": "594160",
    "end": "596720"
  },
  {
    "text": "by default each instance only has one ip",
    "start": "596720",
    "end": "599600"
  },
  {
    "text": "address assigned",
    "start": "599600",
    "end": "600720"
  },
  {
    "text": "but we need three ip addresses per sql",
    "start": "600720",
    "end": "603279"
  },
  {
    "text": "server",
    "start": "603279",
    "end": "604079"
  },
  {
    "text": "one for the host one for the sql cluster",
    "start": "604079",
    "end": "607200"
  },
  {
    "text": "and one for the client endpoint we're",
    "start": "607200",
    "end": "610240"
  },
  {
    "text": "adding those through the networking",
    "start": "610240",
    "end": "612160"
  },
  {
    "text": "managed ip addresses action",
    "start": "612160",
    "end": "615200"
  },
  {
    "text": "here we add two more addresses",
    "start": "615200",
    "end": "617600"
  },
  {
    "text": "preferably ones we can easily remember",
    "start": "617600",
    "end": "620720"
  },
  {
    "text": "so in this case i will add 1010 to",
    "start": "620720",
    "end": "623839"
  },
  {
    "text": "100 and 1010 to 101.",
    "start": "623839",
    "end": "628640"
  },
  {
    "text": "the same happened for the second sql",
    "start": "628640",
    "end": "630640"
  },
  {
    "text": "server so here i now have also three ap",
    "start": "630640",
    "end": "633839"
  },
  {
    "text": "addresses",
    "start": "633839",
    "end": "636320"
  },
  {
    "text": "next if we start the sql server setup on",
    "start": "636880",
    "end": "639360"
  },
  {
    "text": "the first sql server instance",
    "start": "639360",
    "end": "641519"
  },
  {
    "text": "we see that the option to do a new sql",
    "start": "641519",
    "end": "643680"
  },
  {
    "text": "server failover cluster installation is",
    "start": "643680",
    "end": "645680"
  },
  {
    "text": "currently grayed out",
    "start": "645680",
    "end": "647040"
  },
  {
    "text": "so we need to create a failover cluster",
    "start": "647040",
    "end": "648959"
  },
  {
    "text": "first",
    "start": "648959",
    "end": "650720"
  },
  {
    "text": "this is done through the failover",
    "start": "650720",
    "end": "652240"
  },
  {
    "text": "cluster manager in windows",
    "start": "652240",
    "end": "654560"
  },
  {
    "text": "in the failover cluster manager we",
    "start": "654560",
    "end": "656480"
  },
  {
    "text": "create a new cluster",
    "start": "656480",
    "end": "658000"
  },
  {
    "text": "with the create cluster wizard",
    "start": "658000",
    "end": "661040"
  },
  {
    "text": "adding both computers to the list of",
    "start": "661040",
    "end": "662880"
  },
  {
    "text": "servers is the first step",
    "start": "662880",
    "end": "665279"
  },
  {
    "text": "next we create a name for the cluster",
    "start": "665279",
    "end": "667600"
  },
  {
    "text": "endpoint",
    "start": "667600",
    "end": "669360"
  },
  {
    "text": "and next we need to uncheck the add all",
    "start": "669360",
    "end": "671839"
  },
  {
    "text": "eligible storage to the cluster",
    "start": "671839",
    "end": "673839"
  },
  {
    "text": "because we will point the cluster to fsx",
    "start": "673839",
    "end": "676240"
  },
  {
    "text": "instead of using local storage",
    "start": "676240",
    "end": "679920"
  },
  {
    "text": "after the wizard is done we need to set",
    "start": "682959",
    "end": "685440"
  },
  {
    "text": "the static ip addresses to the cluster",
    "start": "685440",
    "end": "687600"
  },
  {
    "text": "endpoint",
    "start": "687600",
    "end": "688480"
  },
  {
    "text": "instead of using dhcp so i am double",
    "start": "688480",
    "end": "691600"
  },
  {
    "text": "clicking the",
    "start": "691600",
    "end": "692240"
  },
  {
    "text": "endpoint resource and then the first ip",
    "start": "692240",
    "end": "694560"
  },
  {
    "text": "address",
    "start": "694560",
    "end": "696000"
  },
  {
    "text": "confirm to set a static ip address and",
    "start": "696000",
    "end": "698160"
  },
  {
    "text": "in our case we use the static ip address",
    "start": "698160",
    "end": "700320"
  },
  {
    "text": "ending with 101 for both servers in the",
    "start": "700320",
    "end": "703040"
  },
  {
    "text": "different subnets",
    "start": "703040",
    "end": "706079"
  },
  {
    "text": "after applying the changes the cluster",
    "start": "712079",
    "end": "713839"
  },
  {
    "text": "should show an online status",
    "start": "713839",
    "end": "716720"
  },
  {
    "text": "now i need to make sure that each of the",
    "start": "716720",
    "end": "718399"
  },
  {
    "text": "ip addresses of the cluster",
    "start": "718399",
    "end": "720160"
  },
  {
    "text": "is only active on the node that also has",
    "start": "720160",
    "end": "722320"
  },
  {
    "text": "this static ip assigned",
    "start": "722320",
    "end": "724000"
  },
  {
    "text": "so the 1010 to 101 should only be active",
    "start": "724000",
    "end": "728000"
  },
  {
    "text": "on sql node 1",
    "start": "728000",
    "end": "729680"
  },
  {
    "text": "and the 1010 3 101 should only be active",
    "start": "729680",
    "end": "732959"
  },
  {
    "text": "on sql node 2.",
    "start": "732959",
    "end": "735360"
  },
  {
    "text": "after applying that change and some",
    "start": "735360",
    "end": "737040"
  },
  {
    "text": "delay to apply the changes",
    "start": "737040",
    "end": "738880"
  },
  {
    "text": "all nodes and cluster networks should be",
    "start": "738880",
    "end": "742839"
  },
  {
    "text": "up",
    "start": "742839",
    "end": "744399"
  },
  {
    "text": "in the active directory users and groups",
    "start": "744399",
    "end": "746399"
  },
  {
    "text": "we now need to add a new cluster",
    "start": "746399",
    "end": "748240"
  },
  {
    "text": "endpoint",
    "start": "748240",
    "end": "748880"
  },
  {
    "text": "object to the sql servers group to make",
    "start": "748880",
    "end": "751519"
  },
  {
    "text": "sure the cluster has the necessary",
    "start": "751519",
    "end": "753839"
  },
  {
    "text": "rights",
    "start": "753839",
    "end": "754800"
  },
  {
    "text": "we also need to make sure that our",
    "start": "754800",
    "end": "756480"
  },
  {
    "text": "cluster endpoint object",
    "start": "756480",
    "end": "758160"
  },
  {
    "text": "is allowed to create and delete computer",
    "start": "758160",
    "end": "760639"
  },
  {
    "text": "objects in active directory",
    "start": "760639",
    "end": "762959"
  },
  {
    "text": "for that i right click on computers then",
    "start": "762959",
    "end": "765519"
  },
  {
    "text": "delegate control",
    "start": "765519",
    "end": "767440"
  },
  {
    "text": "then i select the cluster endpoint and i",
    "start": "767440",
    "end": "769760"
  },
  {
    "text": "have to filter for computers so it does",
    "start": "769760",
    "end": "772079"
  },
  {
    "text": "find it",
    "start": "772079",
    "end": "773440"
  },
  {
    "text": "then i select a custom task to delegate",
    "start": "773440",
    "end": "776639"
  },
  {
    "text": "select only computer objects and to",
    "start": "776639",
    "end": "778959"
  },
  {
    "text": "allow to create and delete selected",
    "start": "778959",
    "end": "780800"
  },
  {
    "text": "objects",
    "start": "780800",
    "end": "782079"
  },
  {
    "text": "and then i select full control for",
    "start": "782079",
    "end": "783839"
  },
  {
    "text": "permissions",
    "start": "783839",
    "end": "785120"
  },
  {
    "text": "and we're done with the permission",
    "start": "785120",
    "end": "786399"
  },
  {
    "text": "settings now if we start the sql server",
    "start": "786399",
    "end": "789519"
  },
  {
    "text": "setup again on our first node",
    "start": "789519",
    "end": "791360"
  },
  {
    "text": "it will show us the option to create a",
    "start": "791360",
    "end": "793440"
  },
  {
    "text": "sql server failover cluster",
    "start": "793440",
    "end": "795279"
  },
  {
    "text": "let's do this for the first node in a",
    "start": "795279",
    "end": "797680"
  },
  {
    "text": "feature selection",
    "start": "797680",
    "end": "798959"
  },
  {
    "text": "choose at least the database engine",
    "start": "798959",
    "end": "800800"
  },
  {
    "text": "services",
    "start": "800800",
    "end": "802079"
  },
  {
    "text": "in the instance configuration we define",
    "start": "802079",
    "end": "804639"
  },
  {
    "text": "a unique network name",
    "start": "804639",
    "end": "806079"
  },
  {
    "text": "for our sql cluster in the cluster",
    "start": "806079",
    "end": "809200"
  },
  {
    "text": "network configuration",
    "start": "809200",
    "end": "810800"
  },
  {
    "text": "i select to configure a static ip",
    "start": "810800",
    "end": "812880"
  },
  {
    "text": "address for the listener",
    "start": "812880",
    "end": "814079"
  },
  {
    "text": "on this machine so i identify first the",
    "start": "814079",
    "end": "817279"
  },
  {
    "text": "correct subnet",
    "start": "817279",
    "end": "818399"
  },
  {
    "text": "which is also shown here on the desktop",
    "start": "818399",
    "end": "821040"
  },
  {
    "text": "and i",
    "start": "821040",
    "end": "821519"
  },
  {
    "text": "set 1010 to 100 as the listener ip",
    "start": "821519",
    "end": "824720"
  },
  {
    "text": "because i use the 101 for the cluster ip",
    "start": "824720",
    "end": "827680"
  },
  {
    "text": "for the second server this will be done",
    "start": "827680",
    "end": "829600"
  },
  {
    "text": "for the other subnet also using the",
    "start": "829600",
    "end": "831440"
  },
  {
    "text": "ip100 for the listener ip",
    "start": "831440",
    "end": "834320"
  },
  {
    "text": "for the service accounts i use the user",
    "start": "834320",
    "end": "836560"
  },
  {
    "text": "i create an active directory",
    "start": "836560",
    "end": "838240"
  },
  {
    "text": "for running the agent and database",
    "start": "838240",
    "end": "840000"
  },
  {
    "text": "engine",
    "start": "840000",
    "end": "841680"
  },
  {
    "text": "now in the database engine configuration",
    "start": "841680",
    "end": "843920"
  },
  {
    "text": "i go to data directories",
    "start": "843920",
    "end": "845920"
  },
  {
    "text": "and define the data root directory to be",
    "start": "845920",
    "end": "848320"
  },
  {
    "text": "our newly created fsx",
    "start": "848320",
    "end": "850079"
  },
  {
    "text": "share sqldb note that compared to",
    "start": "850079",
    "end": "853920"
  },
  {
    "text": "always-on availability groups",
    "start": "853920",
    "end": "855680"
  },
  {
    "text": "the user data log and backup will be all",
    "start": "855680",
    "end": "858240"
  },
  {
    "text": "on the shared directory",
    "start": "858240",
    "end": "859920"
  },
  {
    "text": "we could define a different directory",
    "start": "859920",
    "end": "861839"
  },
  {
    "text": "for the tempdb",
    "start": "861839",
    "end": "863199"
  },
  {
    "text": "this would make sense for instance types",
    "start": "863199",
    "end": "865360"
  },
  {
    "text": "with nvme high speed local storage",
    "start": "865360",
    "end": "868079"
  },
  {
    "text": "and would get us better performance but",
    "start": "868079",
    "end": "870320"
  },
  {
    "text": "for the sake of the demo we leave it on",
    "start": "870320",
    "end": "872079"
  },
  {
    "text": "the f6 as well",
    "start": "872079",
    "end": "873680"
  },
  {
    "text": "finally i will add my current user as a",
    "start": "873680",
    "end": "875760"
  },
  {
    "text": "database admin otherwise i cannot",
    "start": "875760",
    "end": "877519"
  },
  {
    "text": "continue and then i can finalize the",
    "start": "877519",
    "end": "879600"
  },
  {
    "text": "installation",
    "start": "879600",
    "end": "881360"
  },
  {
    "text": "everything will install now for the",
    "start": "881360",
    "end": "882959"
  },
  {
    "text": "first database server",
    "start": "882959",
    "end": "884959"
  },
  {
    "text": "let's check now in the failover cluster",
    "start": "884959",
    "end": "886720"
  },
  {
    "text": "manager that this node is up and running",
    "start": "886720",
    "end": "889680"
  },
  {
    "text": "in the rows list we see that the role is",
    "start": "889680",
    "end": "891839"
  },
  {
    "text": "running and if we open the cluster we",
    "start": "891839",
    "end": "893760"
  },
  {
    "text": "see",
    "start": "893760",
    "end": "894240"
  },
  {
    "text": "one node is up and running now let's",
    "start": "894240",
    "end": "897360"
  },
  {
    "text": "bring up the second node on the cluster",
    "start": "897360",
    "end": "899839"
  },
  {
    "text": "we're logged in to the second node and",
    "start": "899839",
    "end": "902160"
  },
  {
    "text": "this time instead of running a new sql",
    "start": "902160",
    "end": "904320"
  },
  {
    "text": "server failover cluster installation",
    "start": "904320",
    "end": "906079"
  },
  {
    "text": "we choose to add a node to a sql server",
    "start": "906079",
    "end": "908399"
  },
  {
    "text": "failover cluster",
    "start": "908399",
    "end": "910079"
  },
  {
    "text": "this is going to be easier because most",
    "start": "910079",
    "end": "911920"
  },
  {
    "text": "settings will be taken from the existing",
    "start": "911920",
    "end": "913600"
  },
  {
    "text": "cluster node and",
    "start": "913600",
    "end": "914560"
  },
  {
    "text": "only a few changes will be made so most",
    "start": "914560",
    "end": "916639"
  },
  {
    "text": "dialogues can be clicked through with",
    "start": "916639",
    "end": "918240"
  },
  {
    "text": "next",
    "start": "918240",
    "end": "919839"
  },
  {
    "text": "for this node we add the 1010 3100",
    "start": "919839",
    "end": "922720"
  },
  {
    "text": "static ip address",
    "start": "922720",
    "end": "926000"
  },
  {
    "text": "in the service accounts tab we only need",
    "start": "926000",
    "end": "927760"
  },
  {
    "text": "to give the sql admin password again and",
    "start": "927760",
    "end": "929920"
  },
  {
    "text": "click next",
    "start": "929920",
    "end": "931519"
  },
  {
    "text": "finally we're ready to add the node and",
    "start": "931519",
    "end": "933360"
  },
  {
    "text": "click install",
    "start": "933360",
    "end": "935040"
  },
  {
    "text": "once it's done we need to make sure in",
    "start": "935040",
    "end": "937279"
  },
  {
    "text": "the failover cluster manager that for",
    "start": "937279",
    "end": "939440"
  },
  {
    "text": "each node in the cluster",
    "start": "939440",
    "end": "941120"
  },
  {
    "text": "the ip address is set to static which is",
    "start": "941120",
    "end": "943759"
  },
  {
    "text": "correct for the first node",
    "start": "943759",
    "end": "945360"
  },
  {
    "text": "and also the advanced policies only the",
    "start": "945360",
    "end": "948160"
  },
  {
    "text": "owner node of the static ip is selected",
    "start": "948160",
    "end": "952079"
  },
  {
    "text": "same on a second node ip address is set",
    "start": "952079",
    "end": "954560"
  },
  {
    "text": "to static",
    "start": "954560",
    "end": "955600"
  },
  {
    "text": "and only the owner machine of the static",
    "start": "955600",
    "end": "957839"
  },
  {
    "text": "ip is selected as possible owner",
    "start": "957839",
    "end": "961120"
  },
  {
    "text": "in the list of nodes one ip is online",
    "start": "961120",
    "end": "963759"
  },
  {
    "text": "and one is offline",
    "start": "963759",
    "end": "965040"
  },
  {
    "text": "which is the expected state because the",
    "start": "965040",
    "end": "967040"
  },
  {
    "text": "secondary will become",
    "start": "967040",
    "end": "968560"
  },
  {
    "text": "online only if the primary node fails",
    "start": "968560",
    "end": "972000"
  },
  {
    "text": "now we have configured the sql server",
    "start": "972000",
    "end": "973680"
  },
  {
    "text": "failover cluster correctly so it's using",
    "start": "973680",
    "end": "975600"
  },
  {
    "text": "fsx for the shared storage",
    "start": "975600",
    "end": "977920"
  },
  {
    "text": "for more information please refer to the",
    "start": "977920",
    "end": "980000"
  },
  {
    "text": "links in the description of this video",
    "start": "980000",
    "end": "982079"
  },
  {
    "text": "thank you for watching bye",
    "start": "982079",
    "end": "990959"
  }
]