[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "um thank you all for coming this title of this session is secure content delivery using Amazon cloudfront my name",
    "start": "599",
    "end": "5879"
  },
  {
    "text": "is Alex Dunlap I'm the general manager for cloudfront um I've got Matthew Baldwin here with me Matthew is a senior",
    "start": "5879",
    "end": "11719"
  },
  {
    "text": "software development engineer on the cloudfront team um want to start with just a thought from Andy's uh keynote",
    "start": "11719",
    "end": "17880"
  },
  {
    "text": "yesterday uh he talked a little bit about ANS and ores and um I won't quite",
    "start": "17880",
    "end": "23840"
  },
  {
    "text": "get quite exactly the quote right but he was basically saying traditionally folks have been asked uh to make tradeoff",
    "start": "23840",
    "end": "30880"
  },
  {
    "text": "uh between one of two things you know do you want this or that and the premise of",
    "start": "30880",
    "end": "36200"
  },
  {
    "text": "AWS and what we're doing often means the ability to say and I Want A and B Not A",
    "start": "36200",
    "end": "41640"
  },
  {
    "text": "or B and uh with that in mind today we're going to talk about using cloudfront a product that's usually",
    "start": "41640",
    "end": "49079"
  },
  {
    "text": "considered something that helps make sites faster um to also help make those",
    "start": "49079",
    "end": "54719"
  },
  {
    "text": "sites more secure so rather than choosing between fast or secure uh what",
    "start": "54719",
    "end": "60199"
  },
  {
    "text": "I hope you leave here today with is an understanding how to make something fast and secure um we're going to talk briefly",
    "start": "60199",
    "end": "68080"
  },
  {
    "text": "about why security matters uh we're going to talk about how we think about",
    "start": "68080",
    "end": "73159"
  },
  {
    "text": "Security in terms of the key aspects and the things that make it up we'll talk in a lot of detail around how cloudfront",
    "start": "73159",
    "end": "79360"
  },
  {
    "text": "can help and hopefully you'll walk away with some specific best practices about how to make your content more secure",
    "start": "79360",
    "end": "86280"
  },
  {
    "text": "this is a 200 level session so it's not going to be um",
    "start": "86280",
    "end": "91479"
  },
  {
    "text": "we're not going to be going through detailed code examples but it does assume some amount of knowledge of cloud front and content",
    "start": "91479",
    "end": "98960"
  },
  {
    "text": "delivery uh why does security matter um a lot of this should be uh fairly obvious but I think it's the right place",
    "start": "98960",
    "end": "105200"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "to start security matters because we're often when we're putting websites online",
    "start": "105200",
    "end": "110240"
  },
  {
    "text": "we're talking about maintaining customer trust we're talking about maintaining Regulatory Compliance we're talking",
    "start": "110240",
    "end": "117520"
  },
  {
    "text": "maintaining uh the integrity the privacy of customers personal information we",
    "start": "117520",
    "end": "122759"
  },
  {
    "text": "don't think that you should have to give those things up just to make a site that performs faster a site that scales",
    "start": "122759",
    "end": "128599"
  },
  {
    "text": "better all of the benefits that you get from using a cloud uh a CDN like cloudfront uh we don't believe that",
    "start": "128599",
    "end": "134959"
  },
  {
    "text": "should come at the expense of any of these three things in general AWS thinks of security",
    "start": "134959",
    "end": "141640"
  },
  {
    "start": "138000",
    "end": "138000"
  },
  {
    "text": "in three different areas the first is the security of our infrastructure um this is how we secure the facilities and",
    "start": "141640",
    "end": "149360"
  },
  {
    "text": "the Serv and all the things that make up our services the second is the services",
    "start": "149360",
    "end": "154840"
  },
  {
    "text": "security um these are the security options and features that are available to you as the customer and the third is",
    "start": "154840",
    "end": "161200"
  },
  {
    "text": "the application security things you do in your application itself inherently",
    "start": "161200",
    "end": "166879"
  },
  {
    "text": "the cloud is a shared security Mo um model so um it's a shared responsibility",
    "start": "166879",
    "end": "172680"
  },
  {
    "text": "we take certain pieces of responsibility you take certain pieces of responsibility um so we'll go through",
    "start": "172680",
    "end": "178599"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "and kind of use this framew work to talk about cloudfront and talk about how we",
    "start": "178599",
    "end": "184000"
  },
  {
    "text": "secure our infrastructure how we secure our services the Ser cloudfront service what options we make available to you",
    "start": "184000",
    "end": "191319"
  },
  {
    "text": "and things you can do in your application to make your content delivery more",
    "start": "191319",
    "end": "196959"
  },
  {
    "text": "secure this is going to be the device I'm going to use um on the I guess uh",
    "start": "196959",
    "end": "204000"
  },
  {
    "text": "one end of the uh screen you'll see things that cloudfront does automatically um we're going to signal",
    "start": "204000",
    "end": "210360"
  },
  {
    "text": "uh that with a DNA logo basically these are things that we're just going to do",
    "start": "210360",
    "end": "215400"
  },
  {
    "text": "um automatically on your behalf things you don't need to think about but security that you get just by the virtue",
    "start": "215400",
    "end": "221599"
  },
  {
    "text": "of using cloudfront uh the uh user icon there will represent things that you need to",
    "start": "221599",
    "end": "228480"
  },
  {
    "text": "do things that you can do with your application or your configuration of cloudfront features in order to make",
    "start": "228480",
    "end": "234079"
  },
  {
    "text": "your content delivery more secure and this a sum of those two things together that um really will represent uh secured",
    "start": "234079",
    "end": "241840"
  },
  {
    "text": "content delivery so let's start with the infrastructure and um I'm not going to",
    "start": "241840",
    "end": "247280"
  },
  {
    "text": "go into a whole lot of detail here um but want to talk briefly about some of the things that we do on the hardware",
    "start": "247280",
    "end": "254319"
  },
  {
    "text": "side on the facility side in order to um secure our physical",
    "start": "254319",
    "end": "260280"
  },
  {
    "start": "258000",
    "end": "258000"
  },
  {
    "text": "infrastructure um it starts with some basic stuff uh it starts by limiting access to our facilities uh putting our",
    "start": "260280",
    "end": "267720"
  },
  {
    "text": "facilities into nondescript uh locations um making sure that there is",
    "start": "267720",
    "end": "273080"
  },
  {
    "text": "professional security staff available there um I think I'm on the right uh",
    "start": "273080",
    "end": "278560"
  },
  {
    "text": "next slide um and then it goes on to things that we do in terms of how Amazon employees are able to interact with our",
    "start": "278560",
    "end": "285000"
  },
  {
    "text": "infrastructure so um one of the things that we do is every employee when they're deploying software or otherwise",
    "start": "285000",
    "end": "292039"
  },
  {
    "text": "interacting with our hosts goes through multiple layers of uh network security two- Factor authentication in order to",
    "start": "292039",
    "end": "298919"
  },
  {
    "text": "access the the servers themselves the code themselves um we have multiple",
    "start": "298919",
    "end": "304039"
  },
  {
    "text": "layers of encryption uh separation that enhances our containment basically",
    "start": "304039",
    "end": "309440"
  },
  {
    "text": "understanding if uh who is able to access what and make sure they're not able to access more than they're um",
    "start": "309440",
    "end": "316680"
  },
  {
    "text": "entitled to and then finally rigorous logging making sure we know who has done what to our services making sure every",
    "start": "316680",
    "end": "322880"
  },
  {
    "text": "deployment has been tracked and authorized and was intended the result of all of this uh this is a fairly new",
    "start": "322880",
    "end": "329960"
  },
  {
    "text": "development for cloudfront cloudfront was included in our last um PCI uh uh certification or audit so that",
    "start": "329960",
    "end": "338840"
  },
  {
    "text": "was very exciting that's just something that came out at the beginning of the third quarter um more interesting I think and",
    "start": "338840",
    "end": "345919"
  },
  {
    "text": "the focus of this talk today will be about security Ser uh Services security and uh application security so let me",
    "start": "345919",
    "end": "353360"
  },
  {
    "text": "start with the first of those uh which is Services security these are the options and features that you can",
    "start": "353360",
    "end": "358759"
  },
  {
    "text": "configure as part of of uh cloudfront um cloudfront can protect",
    "start": "358759",
    "end": "365800"
  },
  {
    "text": "data in transit we have a variety of mechanism that do that let's talk about what that means um at the core the the",
    "start": "365800",
    "end": "373160"
  },
  {
    "start": "369000",
    "end": "369000"
  },
  {
    "text": "core method we have to do this is https and uh we have options that will",
    "start": "373160",
    "end": "379039"
  },
  {
    "text": "allow cloudfront to uh encrypt data using htps between our Edge location and",
    "start": "379039",
    "end": "384800"
  },
  {
    "text": "the origin so as we pull data from S3 or your custom origin to to our Edge",
    "start": "384800",
    "end": "390199"
  },
  {
    "text": "locations and then also use encryption htps encryption",
    "start": "390199",
    "end": "396360"
  },
  {
    "text": "to deliver data to your end users on the internet so let's go",
    "start": "396360",
    "end": "402160"
  },
  {
    "text": "through um I'm going to have Matthew now go through some of the features in more detail about how we automatically use",
    "start": "402160",
    "end": "409960"
  },
  {
    "text": "Advanced SSL features in order to make that process both safe secure and",
    "start": "409960",
    "end": "416039"
  },
  {
    "text": "performant we use uh as C use high security ciphers uh and we enforce",
    "start": "416039",
    "end": "422440"
  },
  {
    "start": "417000",
    "end": "417000"
  },
  {
    "text": "server Cipher preference so we have a list of ciphers that we have uh benchmarked and we' determined that they",
    "start": "422440",
    "end": "429160"
  },
  {
    "text": "perform very well and they also provide you the the good security well what do we mean by the good security and the",
    "start": "429160",
    "end": "434520"
  },
  {
    "text": "high security in the ciphers we use ephemeral key exchange um",
    "start": "434520",
    "end": "439560"
  },
  {
    "text": "with our uh with our top priority uh Cipher Suites and FAL key exchange",
    "start": "439560",
    "end": "446039"
  },
  {
    "text": "simply means that uh the session key that is established to to secure the one https session will not be reused um to",
    "start": "446039",
    "end": "453759"
  },
  {
    "text": "secure another session and this enables perfect forward secrecy perfect for a secrecy is a property of a key agreement",
    "start": "453759",
    "end": "460120"
  },
  {
    "text": "protocol that means that uh if the master keys or your your public private",
    "start": "460120",
    "end": "465479"
  },
  {
    "text": "key pair that is your your SSL certificate is compromised in the future the uh the key material cannot be used",
    "start": "465479",
    "end": "472199"
  },
  {
    "text": "to go back in time and decrypt past sessions and this this is an excellent security uh feature of um of modern TLS",
    "start": "472199",
    "end": "480159"
  },
  {
    "text": "Cipher Suites and they are at the top of the cloudfront uh server C Cipher preference",
    "start": "480159",
    "end": "485960"
  },
  {
    "text": "list on the right hand side you see a uh a client hello um or S handshake I",
    "start": "485960",
    "end": "491639"
  },
  {
    "text": "should say uh the client sends a hello does a Ser a hello and a certificate um",
    "start": "491639",
    "end": "496759"
  },
  {
    "text": "and we agree the key um the ephemeral key at this point in time uh we finish",
    "start": "496759",
    "end": "502080"
  },
  {
    "text": "the session and we you have a SSL session established to cloudfront so you can make your get request securely",
    "start": "502080",
    "end": "510639"
  },
  {
    "text": "improve performance we do two things for you we employ SSL or TLS session tickets I should say uh and this allows us to",
    "start": "511000",
    "end": "517880"
  },
  {
    "text": "abbreviate the SSR handshake uh and we also uh support online certificate status protocol or ocsp stapling um for",
    "start": "517880",
    "end": "527720"
  },
  {
    "text": "short what our session ticket is well if you remember our previous uh SSL handshake um at the end when we uh when",
    "start": "527720",
    "end": "535480"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "we've completed and agreed the Cy the the the session um and agreed the the",
    "start": "535480",
    "end": "541560"
  },
  {
    "text": "keys and the cipher we're going to use we encrypt that data and we send it back to the client uh this allows clients to",
    "start": "541560",
    "end": "549600"
  },
  {
    "text": "uh reconnect in the future and abbreviate this handshake so you don't have the two round trips in order to",
    "start": "549600",
    "end": "554880"
  },
  {
    "text": "establish SSL uh the as part of the client hello the client would send a session ticket that he previously has",
    "start": "554880",
    "end": "560880"
  },
  {
    "text": "saved Amazon cloudfront is able to decrypt that as we have the uh the keys to do that and we can uh send back the",
    "start": "560880",
    "end": "567360"
  },
  {
    "text": "session resumption and shorten that uh TLS",
    "start": "567360",
    "end": "572839"
  },
  {
    "start": "573000",
    "end": "573000"
  },
  {
    "text": "handshake ocsp stapling this is a uh this is another",
    "start": "573200",
    "end": "578360"
  },
  {
    "text": "TLS extension uh and essentially what happens is the client sends a TLS client",
    "start": "578360",
    "end": "584360"
  },
  {
    "text": "hello to cloudfront and as part of the hello it's they say that we uh Pro please provide the uh status of",
    "start": "584360",
    "end": "591200"
  },
  {
    "text": "this certificate uh cloudfront will request the certificate status from the ocsp responder and cach that response so that",
    "start": "591200",
    "end": "597519"
  },
  {
    "text": "we can uh use it to send status back to to clients in the future um we send that back to the",
    "start": "597519",
    "end": "604440"
  },
  {
    "text": "client and uh at this point in time the client now has he can validate the",
    "start": "604440",
    "end": "609680"
  },
  {
    "text": "signature in that ocsp response to determine that the service certificate",
    "start": "609680",
    "end": "614800"
  },
  {
    "text": "that he is using has not been revoked um and give him confidence that the that",
    "start": "614800",
    "end": "619880"
  },
  {
    "text": "that session is uh is now secure uh at this point we have a SSL session from",
    "start": "619880",
    "end": "625079"
  },
  {
    "text": "the client to cloudfront and we can make our application Level get requests",
    "start": "625079",
    "end": "631160"
  },
  {
    "text": "so we did some testing uh this is not um from our browser this is from some testing we did um offline of our own and",
    "start": "631160",
    "end": "637880"
  },
  {
    "text": "we had a a client side uh application instrumented to uh record the various",
    "start": "637880",
    "end": "644240"
  },
  {
    "text": "stages of the TLs handshake and doing ocsp uh checks on the client",
    "start": "644240",
    "end": "650440"
  },
  {
    "text": "side and in here we can see we spent 50 millisecond establishing a TCP connection we sent the client hello got",
    "start": "650440",
    "end": "657240"
  },
  {
    "text": "the server hello back and in that we we got the service certificate the uh client then looks in the service",
    "start": "657240",
    "end": "663800"
  },
  {
    "text": "certificate he walks up the ca chain and picks out the ocsp responder information embedded in the certificate uh for each",
    "start": "663800",
    "end": "671360"
  },
  {
    "text": "ocsp responder for each certificate in the chain he had to make a DNS query for that responder's um domain name he had",
    "start": "671360",
    "end": "679040"
  },
  {
    "text": "to make a TCP connection to that service he had to send a request and get a response and here we uh we took in",
    "start": "679040",
    "end": "685480"
  },
  {
    "text": "excess of 250 milliseconds to establish a connection with confront we tried it again but this time we said",
    "start": "685480",
    "end": "691639"
  },
  {
    "text": "to the the client sent the uh ocsp extension and said hey cloudfront give",
    "start": "691639",
    "end": "696959"
  },
  {
    "text": "me the uh certificate status for This Server we greatly short we significantly",
    "start": "696959",
    "end": "703240"
  },
  {
    "text": "improved the connection time we still have the same TCP handshake um up front we still have the client hello and the",
    "start": "703240",
    "end": "709800"
  },
  {
    "text": "server hello were approximately the same as before um but in that uh as part of",
    "start": "709800",
    "end": "715760"
  },
  {
    "text": "the handshake the server responded with the ocsp response that validated the certificate chain and uh we were able to",
    "start": "715760",
    "end": "722000"
  },
  {
    "text": "complete the handshake a lot quicker without those intermediary CA walking U CA",
    "start": "722000",
    "end": "728120"
  },
  {
    "text": "checks so in our in our test we were over 120 milliseconds faster which equates about 30% for the uh for the",
    "start": "728120",
    "end": "735839"
  },
  {
    "text": "time that we saw the next thing that advanced SSL gives you um is when a clown is",
    "start": "735839",
    "end": "743560"
  },
  {
    "start": "737000",
    "end": "737000"
  },
  {
    "text": "established in htps with your origin uh there are certain things that your",
    "start": "743560",
    "end": "748720"
  },
  {
    "text": "origin certificate must hold up to the first one is the origin domain name must match the subject name or a subject",
    "start": "748720",
    "end": "754959"
  },
  {
    "text": "alternate name that's configured within that certificate the certificate must be issued by a trusted CA and a trusted CA",
    "start": "754959",
    "end": "761399"
  },
  {
    "text": "to us um we use the Milla um CA store which is publicly available on the",
    "start": "761399",
    "end": "767160"
  },
  {
    "text": "internet and any well pardon me one well rep reputable uh C CA out there um is",
    "start": "767160",
    "end": "775040"
  },
  {
    "text": "included in that uh and the last one the certificate must be valid within the current um time window so the current",
    "start": "775040",
    "end": "781720"
  },
  {
    "text": "date must not be past the expiration date of the certificate or before the um the uh start date of the",
    "start": "781720",
    "end": "788440"
  },
  {
    "text": "certificate I'm going to head back now to Alex and he's going to tell you about what you need to do in order to uh",
    "start": "788440",
    "end": "794120"
  },
  {
    "text": "secure your services y thanks Matthew um so up to now we've been looking at things that were kind of in the DNA um",
    "start": "794120",
    "end": "801040"
  },
  {
    "text": "if you remember the logo from the be from the beginning uh side of the equation uh we're going to shift now to things that you need to do as a",
    "start": "801040",
    "end": "807160"
  },
  {
    "text": "developer either in your configuration of cloudfront or as you build your application",
    "start": "807160",
    "end": "813440"
  },
  {
    "start": "812000",
    "end": "812000"
  },
  {
    "text": "um delivering content uh using htps um there's two options um by default a",
    "start": "813440",
    "end": "821680"
  },
  {
    "text": "cloudfront distribution will accept connections either uh on an HTTP or an https connections many of our customers",
    "start": "821680",
    "end": "828600"
  },
  {
    "text": "want to use only htps um and to support that there are two options you can",
    "start": "828600",
    "end": "834880"
  },
  {
    "text": "configure in cloudfront uh the first is strict https and this is just a setting on your distribution that says do not",
    "start": "834880",
    "end": "841320"
  },
  {
    "text": "accept uh connections that come in over an HTTP connection um the second one is",
    "start": "841320",
    "end": "846639"
  },
  {
    "text": "which we're seeing more and more customers use is actually to redirect customers from the HTTP version of an",
    "start": "846639",
    "end": "852279"
  },
  {
    "text": "asset to the htps version of an asset so this is a configuration you can make as part of your uh cloudfront distribution",
    "start": "852279",
    "end": "858800"
  },
  {
    "text": "conf configuration uh in order to say I want to use strict https or I want to",
    "start": "858800",
    "end": "864160"
  },
  {
    "text": "redirect HTP to htps uh if you do nothing your distribution will accept both",
    "start": "864160",
    "end": "871040"
  },
  {
    "start": "871000",
    "end": "871000"
  },
  {
    "text": "there are different options that we support um for say SSL a TLS is more",
    "start": "871720",
    "end": "876800"
  },
  {
    "text": "technically accurate um a lot of these have to do with what kind of cert you're going to use the first option is to use",
    "start": "876800",
    "end": "883360"
  },
  {
    "text": "the cloudfront uh domain name in the default cloudfront.net CER and U this is",
    "start": "883360",
    "end": "889120"
  },
  {
    "text": "one certificate it's a wild card certificate for cloud star. cloudfront.net uh that are shared among",
    "start": "889120",
    "end": "894639"
  },
  {
    "text": "many customers and so you see an example down at the bottom the DX x x that where",
    "start": "894639",
    "end": "899680"
  },
  {
    "text": "XXX is the unique identifier for your distribution. cloudfront.net uh the",
    "start": "899680",
    "end": "905120"
  },
  {
    "text": "second option is and this is a simple option cloudfront.net works well for many use cases it's not very customer",
    "start": "905120",
    "end": "910920"
  },
  {
    "text": "friendly though uh we don't see a lot of customers or end users who want to type D1 2 3 4 5 6 into a browser um so in",
    "start": "910920",
    "end": "919120"
  },
  {
    "text": "addition to offering the cloudfront.net certificate we have two other options that both allow you to bring uh your own",
    "start": "919120",
    "end": "925120"
  },
  {
    "text": "SSL uh certificate the first is Sni based Uh custom SSL and this relies on",
    "start": "925120",
    "end": "932040"
  },
  {
    "text": "the uh Sni or server name indication extension to the TLs protocol and so it",
    "start": "932040",
    "end": "937120"
  },
  {
    "text": "will allow you to bring you upload your your certificate into um the identity and access management system and um uh",
    "start": "937120",
    "end": "945440"
  },
  {
    "text": "allows you to put your own own certificate up there um the Sni extension sends the host name outside of",
    "start": "945440",
    "end": "951519"
  },
  {
    "text": "the SSL handshake so we we know uh which search to use we say hey we're getting a",
    "start": "951519",
    "end": "956839"
  },
  {
    "text": "request for www.mysite.com let me go get the uh search for",
    "start": "956839",
    "end": "961920"
  },
  {
    "text": "www.mysite.com the good news about Sni based to custom SSL is we provide a free",
    "start": "961920",
    "end": "968199"
  },
  {
    "text": "of charge uh the bad news is that it's not supported 100% And particularly some",
    "start": "968199",
    "end": "973480"
  },
  {
    "text": "older browsers or browser OS combinations don't support the Sni uh",
    "start": "973480",
    "end": "979319"
  },
  {
    "text": "extension so we have a third option uh that is universa um applicable uh that",
    "start": "979319",
    "end": "984959"
  },
  {
    "text": "allows you to bring your own SSL uh certificate and we will dedicate",
    "start": "984959",
    "end": "990120"
  },
  {
    "text": "IP space to your certificate at each of our Edge locations um so in that we get",
    "start": "990120",
    "end": "995560"
  },
  {
    "text": "a request for 1.2.3.4 where that's the IP address of a particular Edge location",
    "start": "995560",
    "end": "1001199"
  },
  {
    "text": "that falls into the IP space we've dedicated for your SSL certificate we use that to uh select the select the",
    "start": "1001199",
    "end": "1009160"
  },
  {
    "text": "certificate uh the good news is that works on 100% of browsers um it is an",
    "start": "1009160",
    "end": "1014920"
  },
  {
    "text": "extra uh fee that we charge um to reflect the IP space that is um being",
    "start": "1014920",
    "end": "1020000"
  },
  {
    "text": "consumed by that um before I go back there's um an",
    "start": "1020000",
    "end": "1025918"
  },
  {
    "text": "additional option read a question somebody asked about uh the poodle vulnerability um there's an additional",
    "start": "1025919",
    "end": "1031520"
  },
  {
    "text": "setting for dedicated IP based custom SSL which is to set the minimal protocol",
    "start": "1031520",
    "end": "1036798"
  },
  {
    "text": "version that you want to support uh we recommend that you set that to support only TLS um 1.0 or higher um some",
    "start": "1036799",
    "end": "1045918"
  },
  {
    "text": "customers have applications that are trying to reach older devices that maybe only do",
    "start": "1045919",
    "end": "1051440"
  },
  {
    "text": "sslv3 uh so as an option you can go in and say I want to allow sslv3",
    "start": "1051440",
    "end": "1057280"
  },
  {
    "text": "connections uh that has some uh uh exposes some vulnerabilities uh that",
    "start": "1057280",
    "end": "1062960"
  },
  {
    "text": "came out with um was poodle or Heartbleed poodle poodle sorry um I got",
    "start": "1062960",
    "end": "1068640"
  },
  {
    "text": "it mixed up um but it gives you flexibility if you do have older clients that need to uh need to re reach um uh",
    "start": "1068640",
    "end": "1077480"
  },
  {
    "text": "only support sslv3 I want to talk a little bit about a customer example and some of the",
    "start": "1077480",
    "end": "1082520"
  },
  {
    "text": "different ways that the the customer has used uh different configurations for SSL on cloudfront uh the customer is mapbox",
    "start": "1082520",
    "end": "1090679"
  },
  {
    "text": "and um what they wanted to do is to use a custom domain so xxx. mapbox.com they",
    "start": "1090679",
    "end": "1097400"
  },
  {
    "start": "1091000",
    "end": "1091000"
  },
  {
    "text": "knew their clients supported TLS so they were delivering primarily to um",
    "start": "1097400",
    "end": "1103559"
  },
  {
    "text": "applications that ran on no known clients so they wanted an OP economical option they opted for Sni based",
    "start": "1103559",
    "end": "1112720"
  },
  {
    "text": "SSL um there's a couple of usage patterns and mapbox actually used both",
    "start": "1112720",
    "end": "1117880"
  },
  {
    "start": "1113000",
    "end": "1113000"
  },
  {
    "text": "uh the first is what I'll call halfbridge TLS termination and the second one is called Full Bridge TLS",
    "start": "1117880",
    "end": "1123640"
  },
  {
    "text": "termination so what do I mean by that halfbridge termination basically does",
    "start": "1123640",
    "end": "1128679"
  },
  {
    "start": "1125000",
    "end": "1125000"
  },
  {
    "text": "the htps or the SSL TLS session only between the edge location and the end",
    "start": "1128679",
    "end": "1134240"
  },
  {
    "text": "user and uh data back to your origin is sent over a uh regular HTTP uh",
    "start": "1134240",
    "end": "1140799"
  },
  {
    "text": "connection why would you want it to do this well this is useful for getting",
    "start": "1140799",
    "end": "1146559"
  },
  {
    "text": "um content that is not inherently secure so for example the mapbox logo um that",
    "start": "1146559",
    "end": "1153080"
  },
  {
    "text": "might be contained within a page that uh has other information that is secure so you want the",
    "start": "1153080",
    "end": "1159200"
  },
  {
    "text": "entire viewer the customer and user session to be secured using htps but there's no reason to secure the mapbox",
    "start": "1159200",
    "end": "1166840"
  },
  {
    "text": "logo on the origin side that that's okay a run uh over an HTTP session and you",
    "start": "1166840",
    "end": "1172159"
  },
  {
    "text": "can create a um uh property of your cloudfront distribution um and it's",
    "start": "1172159",
    "end": "1177799"
  },
  {
    "text": "actually a Path U path pattern it's a feature we call cache behaviors so you say anything in slash in um you know",
    "start": "1177799",
    "end": "1185679"
  },
  {
    "text": "half Bridge I'll make that up um I want to use a HTTP connection back to the",
    "start": "1185679",
    "end": "1190919"
  },
  {
    "text": "origin anything else I want to use an https connection back to the origin um",
    "start": "1190919",
    "end": "1196159"
  },
  {
    "text": "so use halfbridge when the content you're trying to secure is not inherently secure not inherently",
    "start": "1196159",
    "end": "1202240"
  },
  {
    "text": "sensitive um but is part of a broader package that requires uh encryption",
    "start": "1202240",
    "end": "1208000"
  },
  {
    "text": "fullbridge uh TLS termination this is more uh common what this does it says I",
    "start": "1208000",
    "end": "1214120"
  },
  {
    "text": "want to use uh uh TLS all the way um so both between the end user and um and",
    "start": "1214120",
    "end": "1221400"
  },
  {
    "text": "cloudfront and cloudfront and the origin and so the way to do this is you would configure one of the two options I",
    "start": "1221400",
    "end": "1226960"
  },
  {
    "text": "discussed earlier either to enforce htps U from the cloudfront distribution to",
    "start": "1226960",
    "end": "1232000"
  },
  {
    "text": "the end user or to redirect and then set the uh cloudfront uh cache Behavior to",
    "start": "1232000",
    "end": "1238400"
  },
  {
    "text": "match the viewer that basically says I'm going to go to the origin using the same protocol that I had from the viewer",
    "start": "1238400",
    "end": "1245280"
  },
  {
    "text": "because I've limited the traffic from the viewer to only come in over htps I know I will only go to the origin using",
    "start": "1245280",
    "end": "1253840"
  },
  {
    "start": "1254000",
    "end": "1254000"
  },
  {
    "text": "https um I kind of alluded to this mapbox uses multiple Origins um for the",
    "start": "1254760",
    "end": "1261080"
  },
  {
    "text": "content that is not inherently secure in and of itself they use the halfbridge model and for most of the other content",
    "start": "1261080",
    "end": "1267360"
  },
  {
    "text": "they use the full Bridge model but you're not done yet so now",
    "start": "1267360",
    "end": "1272559"
  },
  {
    "text": "we're going to go into some other options for securing um particularly for protecting content that is cached at at",
    "start": "1272559",
    "end": "1278880"
  },
  {
    "text": "the edge um this is a feature that we uh think of as terms of access control so",
    "start": "1278880",
    "end": "1285200"
  },
  {
    "text": "it's not uh encryption but it's controlling who is allowed to access your content and so this can be useful",
    "start": "1285200",
    "end": "1292000"
  },
  {
    "text": "if you're trying to say run a um uh deliver content only to selected",
    "start": "1292000",
    "end": "1297559"
  },
  {
    "text": "customers have an expiration period where I only want this URL to be valid",
    "start": "1297559",
    "end": "1302799"
  },
  {
    "text": "or trying to limit the IP space to which you can deliver your content so we have two solutions for",
    "start": "1302799",
    "end": "1310440"
  },
  {
    "start": "1308000",
    "end": "1308000"
  },
  {
    "text": "this that uh each work in similar Fashions um but if different can be implemented in two different ways so the",
    "start": "1310440",
    "end": "1316799"
  },
  {
    "text": "general feature is something we call private content and what private content says is I'm going to create as a developer a policy that says this is",
    "start": "1316799",
    "end": "1324240"
  },
  {
    "text": "when I want this URL to be valid um I'm going to include this in this policy a",
    "start": "1324240",
    "end": "1329360"
  },
  {
    "text": "Time range an IP range and the name of my assets or a path pattern um I'm going",
    "start": "1329360",
    "end": "1335000"
  },
  {
    "text": "to sign that with a um private key that I have Amazon cloudfront is going to",
    "start": "1335000",
    "end": "1341039"
  },
  {
    "text": "have the public key uh half when we get the request we're going to decrypt the signature look at the policy file and",
    "start": "1341039",
    "end": "1348520"
  },
  {
    "text": "and then only serve the content when the policy is valid there's two different ways to implement this uh the first is",
    "start": "1348520",
    "end": "1355880"
  },
  {
    "text": "assigned URL so in assigned URL you attach that signature into a query",
    "start": "1355880",
    "end": "1361000"
  },
  {
    "text": "string and your url changes so I'll have a web server that is producing unique",
    "start": "1361000",
    "end": "1366880"
  },
  {
    "text": "URLs for each user if the user is entitled to the piece of content I'll put a um know my essentially entitlement",
    "start": "1366880",
    "end": "1374080"
  },
  {
    "text": "server will put a valid signature onto the URL send it out in the um object",
    "start": "1374080",
    "end": "1379120"
  },
  {
    "text": "will be downloaded or the video will play if not um it won't and so that way",
    "start": "1379120",
    "end": "1385320"
  },
  {
    "text": "you have control as to who's able to download content from your codf front distribution um works really well uh for",
    "start": "1385320",
    "end": "1393880"
  },
  {
    "text": "uh restricting access to individual files um we also have a version of this that",
    "start": "1393880",
    "end": "1400320"
  },
  {
    "text": "works with our rtmp streaming distributions but the world has moved to um in the video space uh fragmented",
    "start": "1400320",
    "end": "1407480"
  },
  {
    "text": "video things like hls mpeg-h uh HDs smooth there's a bunch of",
    "start": "1407480",
    "end": "1413000"
  },
  {
    "text": "these fragmented video files which contain a manifest um that references individual V",
    "start": "1413000",
    "end": "1418760"
  },
  {
    "text": "video fragments um so we started to hear from customers that the idea of signing each line in that manifest where um each",
    "start": "1418760",
    "end": "1427320"
  },
  {
    "text": "line represents a particular video fragment was um pretty onerous and was",
    "start": "1427320",
    "end": "1433679"
  },
  {
    "text": "adding to extra work uh for their web servers so rather than doing doing that",
    "start": "1433679",
    "end": "1438760"
  },
  {
    "text": "we implemented another option that we call sign cookies sign cookies take all that same logic for um you know",
    "start": "1438760",
    "end": "1445679"
  },
  {
    "text": "developing a policy file and puts it into a a cookie and so uh that allows",
    "start": "1445679",
    "end": "1451240"
  },
  {
    "text": "you to restrict uh access to multiple files without changing URLs uh very",
    "start": "1451240",
    "end": "1457640"
  },
  {
    "text": "useful for this fragmented video and then we've found that customers are actually using this in other areas other",
    "start": "1457640",
    "end": "1463679"
  },
  {
    "text": "use cases that we didn't necessarily expect so here's an example of a policy statement for uh URLs you'll see the",
    "start": "1463679",
    "end": "1471279"
  },
  {
    "text": "resource line um that's where you specify the URL uh you can include a a",
    "start": "1471279",
    "end": "1477799"
  },
  {
    "text": "asterisk you can include a path saying Hey I want to uh include uh everything that matches this this pattern uh",
    "start": "1477799",
    "end": "1485080"
  },
  {
    "text": "condition includes a date so basically uh we will enforce that the date is less",
    "start": "1485080",
    "end": "1490320"
  },
  {
    "text": "than a particular point in time so you might have your web server say I only want this URL to be valid for 24 hours",
    "start": "1490320",
    "end": "1497279"
  },
  {
    "text": "or I want it to expire at midnight on the 15th of the month and then the last",
    "start": "1497279",
    "end": "1502640"
  },
  {
    "text": "one is the IP address um you can actually use CER notation here to say the range of IP addresses from which I",
    "start": "1502640",
    "end": "1510200"
  },
  {
    "text": "want this video or this asset or this image or this Javascript file whatever it is um who's allowed to access it so",
    "start": "1510200",
    "end": "1518360"
  },
  {
    "text": "uh the IP address all of these are optional you can use one two three of these in combination one",
    "start": "1518360",
    "end": "1523760"
  },
  {
    "text": "another and then include it in um your policy file",
    "start": "1523760",
    "end": "1529200"
  },
  {
    "text": "um so one of the one of the ways customers use this is kind of as a development mode um so we'll see",
    "start": "1529200",
    "end": "1535520"
  },
  {
    "text": "customers initially restrict access to their cloudfront content using an internal IP address range um and this",
    "start": "1535520",
    "end": "1542120"
  },
  {
    "text": "allows you to test things before you make your site widely available to the",
    "start": "1542120",
    "end": "1547760"
  },
  {
    "text": "public but you're still not done so um what if you want to restrict access",
    "start": "1547760",
    "end": "1554559"
  },
  {
    "text": "based on the parameters in the request um so up to now we've been talking about things that you do on the web server",
    "start": "1554559",
    "end": "1561000"
  },
  {
    "text": "side um there may be requests that are valid and other requests that you consider unnecessary and so this example",
    "start": "1561000",
    "end": "1569320"
  },
  {
    "text": "talks about scraper Bots there are other examples um where you may say hey this",
    "start": "1569320",
    "end": "1574559"
  },
  {
    "text": "traffic is not not not what I want hitting my distribution uh so in order",
    "start": "1574559",
    "end": "1580039"
  },
  {
    "text": "to solve for that we launched just this week AWS WF and what awsf does it allows",
    "start": "1580039",
    "end": "1586080"
  },
  {
    "text": "you to block or allow cont content based on characteristics of the HTTP request",
    "start": "1586080",
    "end": "1592440"
  },
  {
    "text": "um so Matthew yeah this is an example of Sorry Miss slide um mapbox using the",
    "start": "1592440",
    "end": "1598799"
  },
  {
    "text": "example is using a uh has been using a beta version of AWS Waf and what they've done is they've built a uh sort of Clos",
    "start": "1598799",
    "end": "1606200"
  },
  {
    "text": "Loop where they start with logs uh coming off of the server logs and they",
    "start": "1606200",
    "end": "1611880"
  },
  {
    "text": "use this to do some uh thread analysis they then use the AWS we uh API in order",
    "start": "1611880",
    "end": "1618000"
  },
  {
    "text": "to to update their rules which determines what traffic is valid what traffic is not valid what do they allow",
    "start": "1618000",
    "end": "1624080"
  },
  {
    "text": "into their cloudfront distribution so with that um Matthew is",
    "start": "1624080",
    "end": "1629399"
  },
  {
    "text": "going to give you a quick demo of how you can use AWS WF to block uh bad Bots",
    "start": "1629399",
    "end": "1635360"
  },
  {
    "text": "dynamically using uh web apples sure so I'll take you through the technical",
    "start": "1635360",
    "end": "1640679"
  },
  {
    "text": "implementation of a website we put together which is served on cloud front and integrates with the AWS W to",
    "start": "1640679",
    "end": "1645960"
  },
  {
    "text": "demonstrate some of its features so the the example we're going to use is blocking bad blocks Bots dynamically",
    "start": "1645960",
    "end": "1651679"
  },
  {
    "text": "with AWS w web accles we need three things to get started we need an IP set this is a AOS",
    "start": "1651679",
    "end": "1659320"
  },
  {
    "start": "1655000",
    "end": "1655000"
  },
  {
    "text": "WF um condition uh and we basically say uh we'll populate this with the IP",
    "start": "1659320",
    "end": "1664519"
  },
  {
    "text": "addresses of our bad box that we dynamically detect the next thing we need is a rule and this tells us what to",
    "start": "1664519",
    "end": "1669799"
  },
  {
    "text": "do when things when requests match our condition or contained in our IP set and our rule is going to be to deny and then",
    "start": "1669799",
    "end": "1677480"
  },
  {
    "text": "we put um then we create a web Apple which is a collection of rules uh and",
    "start": "1677480",
    "end": "1682519"
  },
  {
    "text": "Associated a default action which is allow so that the non- bad Bots are still able to access our website uh",
    "start": "1682519",
    "end": "1689519"
  },
  {
    "text": "unless it matches our rule which case they'll be Demi and then our web application needs two things the first thing is a",
    "start": "1689519",
    "end": "1695679"
  },
  {
    "text": "mechanism to detect our bad Bots and uh then we need to be able to take what we",
    "start": "1695679",
    "end": "1701039"
  },
  {
    "text": "detected and update our web accles and so that they're propagated to the uh to",
    "start": "1701039",
    "end": "1706360"
  },
  {
    "text": "the edge so the first part detex in bad Bots we",
    "start": "1706360",
    "end": "1712279"
  },
  {
    "start": "1708000",
    "end": "1708000"
  },
  {
    "text": "did this relatively simply we created a robots. text file which says disallow",
    "start": "1712279",
    "end": "1718399"
  },
  {
    "text": "Honeypot um so any good and well behaving Bots like the Google bot uh the Bing bot Etc will uh download the",
    "start": "1718399",
    "end": "1725760"
  },
  {
    "text": "robots. text and will not index Pages starting with SL matching Honeypot uh we upload that to the root",
    "start": "1725760",
    "end": "1732320"
  },
  {
    "text": "of our web application and then the second thing we did was to create a hidden link Within within the page which",
    "start": "1732320",
    "end": "1739960"
  },
  {
    "text": "uh protects us against uh scraper Bots who are downloading the HTML scraping it and following the links um to to get all",
    "start": "1739960",
    "end": "1746760"
  },
  {
    "text": "your content uh it's hidden so that uh a regular user of your website will not",
    "start": "1746760",
    "end": "1752240"
  },
  {
    "text": "see it and won't be tempted to click on it and uh once that uh once that URL is",
    "start": "1752240",
    "end": "1759720"
  },
  {
    "text": "requested it triggers an action um which is how we block our bad bad bots so uh",
    "start": "1759720",
    "end": "1767159"
  },
  {
    "start": "1762000",
    "end": "1762000"
  },
  {
    "text": "when the honey link is requested we uh generate a change token for the ads wff",
    "start": "1767159",
    "end": "1773320"
  },
  {
    "text": "that allows us to update our IP set we take the IP address of the client that connected to cloudfront and insert it",
    "start": "1773320",
    "end": "1779600"
  },
  {
    "text": "into our IP Set uh that change is saved and propagated to the cloudfront edge",
    "start": "1779600",
    "end": "1785039"
  },
  {
    "text": "locations uh typically in under 1 to two",
    "start": "1785039",
    "end": "1789679"
  },
  {
    "text": "minutes pardon me so uh I'm going to give you a quick demonstration of this in action",
    "start": "1790440",
    "end": "1797799"
  },
  {
    "text": "so here's our website our quack quacky nature um offering the largest selection of rubber docks uh to to the Internet so",
    "start": "1798159",
    "end": "1805240"
  },
  {
    "text": "uh here we have our bad bot trapping which uh we click on this link and it tells us a little about what we just",
    "start": "1805240",
    "end": "1810919"
  },
  {
    "text": "talked about and we're going to hit",
    "start": "1810919",
    "end": "1814480"
  },
  {
    "text": "test okay so our origin has returned blocked and it's added our IP address uh",
    "start": "1816559",
    "end": "1822080"
  },
  {
    "text": "20878 2321 uh to the IP Set uh so hopefully now when we go",
    "start": "1822080",
    "end": "1829960"
  },
  {
    "text": "to back to quack nature.com our request cannot be satisfied the ads WF has blocked our request and we're no longer",
    "start": "1829960",
    "end": "1836320"
  },
  {
    "text": "to able to access that page or any other page on our website that's protected by that uh by that web",
    "start": "1836320",
    "end": "1844120"
  },
  {
    "text": "Apple so I'm hand back to uh Alex cool um going to take a couple of uh",
    "start": "1847159",
    "end": "1853360"
  },
  {
    "start": "1850000",
    "end": "1850000"
  },
  {
    "text": "additional things to think about just in terms of uh further securing um your",
    "start": "1853360",
    "end": "1859080"
  },
  {
    "text": "cloudfront distribution uh cloud trail we talked earlier about sort of the importance of logging cloud trail is",
    "start": "1859080",
    "end": "1865799"
  },
  {
    "text": "great for recording a full history of who is making changes to your AWS resources in general and cloudfront in",
    "start": "1865799",
    "end": "1872639"
  },
  {
    "text": "particular so um what cloud trail does is it looks for the cloudfront API calls",
    "start": "1872639",
    "end": "1878000"
  },
  {
    "text": "so not the data plane calls but the uh control plane calls where you create a new distribution or delete a",
    "start": "1878000",
    "end": "1883679"
  },
  {
    "text": "distribution or modify it uh really useful for understanding who's made which change uh to your cloudfront um",
    "start": "1883679",
    "end": "1893600"
  },
  {
    "text": "configuration um application security so let's go just one level higher up and talk about how you can secure your",
    "start": "1894480",
    "end": "1900960"
  },
  {
    "text": "application and your origin um the things in this category are things",
    "start": "1900960",
    "end": "1906480"
  },
  {
    "start": "1903000",
    "end": "1903000"
  },
  {
    "text": "around IM they're things around origin access identities and Key Management we'll talk about each of those so no",
    "start": "1906480",
    "end": "1913960"
  },
  {
    "text": "matter how secure you make Cloud front if your origin is access ible um you",
    "start": "1913960",
    "end": "1919480"
  },
  {
    "text": "know a malicious party could go around cloudfront and access your origin so we offer two different ways to restrict",
    "start": "1919480",
    "end": "1926519"
  },
  {
    "start": "1923000",
    "end": "1923000"
  },
  {
    "text": "access to your origin they're different whether they're S3 or U what we call Custom Origins custom Origins actually",
    "start": "1926519",
    "end": "1933000"
  },
  {
    "text": "include things that are running in ec2 or elb U so it's not AWS versus non AWS",
    "start": "1933000",
    "end": "1938679"
  },
  {
    "text": "it's just S3 versus everything else um a uh origin access identity is the",
    "start": "1938679",
    "end": "1945000"
  },
  {
    "text": "technique we use for securing access to your s bucket and basically what this is",
    "start": "1945000",
    "end": "1950480"
  },
  {
    "text": "is it is a very limited purpose uh identity um that uh cloudfront uses to",
    "start": "1950480",
    "end": "1957480"
  },
  {
    "text": "access your S3 bucket youle you can create um uh either allow it to access",
    "start": "1957480",
    "end": "1963440"
  },
  {
    "text": "specific objects or more commonly an entire bucket um but it makes sure that you have control over what cloudfront is",
    "start": "1963440",
    "end": "1970039"
  },
  {
    "text": "using so we're essentially going to go to that S3 bucket using this identity",
    "start": "1970039",
    "end": "1975639"
  },
  {
    "text": "and that way you can Ackle uh individual objects or buckets just to cloudfront just to us it's not shared with any",
    "start": "1975639",
    "end": "1982000"
  },
  {
    "text": "other customer it's just a unique very limited purpose identity that cloudfront uses for a particular",
    "start": "1982000",
    "end": "1988440"
  },
  {
    "text": "distribution um for custom Origins the approach that we use is wh listing of",
    "start": "1988440",
    "end": "1993639"
  },
  {
    "text": "the cloud uh recommend using is white listing of the cloudfront IP range um so",
    "start": "1993639",
    "end": "1998880"
  },
  {
    "text": "this ensures that um your origin doesn't get overloaded from requests that don't originate from uh um codron and and um I",
    "start": "1998880",
    "end": "2009480"
  },
  {
    "text": "guess we talked about this but here's a little diagram where a a customer comes in they try to access this is the bottom",
    "start": "2009480",
    "end": "2016120"
  },
  {
    "text": "your um or I guess in the center uh your cloudfront distribution uh the portion",
    "start": "2016120",
    "end": "2022120"
  },
  {
    "text": "of your site that's hosted in S3 um is validated using that limited purpose",
    "start": "2022120",
    "end": "2027799"
  },
  {
    "text": "origin access identity um if somebody comes in and tries to access your S3 bucket uh that",
    "start": "2027799",
    "end": "2034399"
  },
  {
    "text": "S3 bucket is not going to allow content to be served or object to be served by",
    "start": "2034399",
    "end": "2039720"
  },
  {
    "text": "Anonymous users so that doesn't work um for custom Origins um the way um the",
    "start": "2039720",
    "end": "2048720"
  },
  {
    "start": "2042000",
    "end": "2042000"
  },
  {
    "text": "approach works is it limits uh uh access based on IP IP range so cloudfront IP",
    "start": "2048720",
    "end": "2054679"
  },
  {
    "text": "space is going to be um whitelisted for your custom origin a a malicious user",
    "start": "2054679",
    "end": "2060760"
  },
  {
    "text": "trying to access your origin from outside of the cloudfront IP space um will be denied so how do you know know",
    "start": "2060760",
    "end": "2068040"
  },
  {
    "text": "what the cloudfront IP space is um well what we do is we uh uh have a Amazon SNS",
    "start": "2068040",
    "end": "2075040"
  },
  {
    "text": "notification uh that automatically updates provides notifications on changes to that IP space um and you can",
    "start": "2075040",
    "end": "2082040"
  },
  {
    "text": "use this to automatically update uh security groups um if you stick around for the next session it's actually in",
    "start": "2082040",
    "end": "2088000"
  },
  {
    "text": "this room right after this we're going to demonstrate a Lambda function that uh one of the engineers on the cloudfront",
    "start": "2088000",
    "end": "2093280"
  },
  {
    "text": "team has written um that will consume those SNS uh um um um uh messages and",
    "start": "2093280",
    "end": "2100960"
  },
  {
    "text": "automatically configure a security group to add new IP spaces or cloudfronts",
    "start": "2100960",
    "end": "2106280"
  },
  {
    "text": "changing IP space um so you can stick around and and and see that in the very next",
    "start": "2106280",
    "end": "2111839"
  },
  {
    "text": "session um identity access management again this is more of an AWS uh sort of",
    "start": "2111839",
    "end": "2117560"
  },
  {
    "text": "fundamental but um you know this allows you to create manag policies or custom policies that control who and how users",
    "start": "2117560",
    "end": "2125560"
  },
  {
    "text": "are able to interact with the cloudfront apis um so this is user roles and",
    "start": "2125560",
    "end": "2130880"
  },
  {
    "text": "permissions um again not going to go super deep here because this is more of a Amazon General kind of thing um but",
    "start": "2130880",
    "end": "2138760"
  },
  {
    "text": "you know a couple of the things that we see customers do in practice uh cloudfront has an invalidation API and",
    "start": "2138760",
    "end": "2145240"
  },
  {
    "text": "invalidation lets customers remove objects from cash um pre prematurely if",
    "start": "2145240",
    "end": "2150599"
  },
  {
    "text": "you will um you can basically say hey I want it this object has not um reached",
    "start": "2150599",
    "end": "2157160"
  },
  {
    "text": "its expert eration but it's a bad image or there's something else wrong with it I want to get it out of cach everywhere",
    "start": "2157160",
    "end": "2162800"
  },
  {
    "text": "um in many organizations the user who may need to do that doesn't need full",
    "start": "2162800",
    "end": "2168319"
  },
  {
    "text": "privileges to create and modify cloudfront distributions so we see customers using I am in order to uh give",
    "start": "2168319",
    "end": "2176839"
  },
  {
    "text": "one group of users just the ability to create invalidations um uh and not",
    "start": "2176839",
    "end": "2182400"
  },
  {
    "text": "actually modify the core uh configuration of your cloudfront assets um the second one is probably more",
    "start": "2182400",
    "end": "2188520"
  },
  {
    "text": "common uh where we see customers who want to give essentially readon uh",
    "start": "2188520",
    "end": "2193839"
  },
  {
    "text": "privileges so give someone the right to um review configuration data but not actually make changes um so that's again",
    "start": "2193839",
    "end": "2201160"
  },
  {
    "text": "possible with I am um so the last thing you know how do you validate all of this um this goes",
    "start": "2201160",
    "end": "2208079"
  },
  {
    "text": "back a little bit more to uh SSL uh but uh SSL Labs has a um a tool",
    "start": "2208079",
    "end": "2215760"
  },
  {
    "text": "that will look at various uh set settings uh as part of your uh SSL",
    "start": "2215760",
    "end": "2221240"
  },
  {
    "text": "configuration and if you do all of the uh stuff we've talked about you can actually get a A+ rating on uh SSL Labs",
    "start": "2221240",
    "end": "2230680"
  },
  {
    "text": "um again little pitch for our next session we'll go into um more detail",
    "start": "2230680",
    "end": "2235839"
  },
  {
    "text": "here in the next in the next session um but um just goes to show that if you",
    "start": "2235839",
    "end": "2242760"
  },
  {
    "text": "apply these things you can actually uh lead to a much uh more secure uh delivery platform so with that thank you",
    "start": "2242760",
    "end": "2250800"
  },
  {
    "text": "um I hope that you've learned some tactical things I will stick around Matthew will stick around up at the front of the room we'd be happy to",
    "start": "2250800",
    "end": "2256520"
  },
  {
    "text": "answer any questions uh we appreciate your time and U please stick around for the next session we'll be doing a series",
    "start": "2256520",
    "end": "2262839"
  },
  {
    "text": "of four um quick talks from Engineers very practical in terms of takeaways you",
    "start": "2262839",
    "end": "2268319"
  },
  {
    "text": "can have to make your uh content faster and more secure thank you",
    "start": "2268319",
    "end": "2275880"
  }
]