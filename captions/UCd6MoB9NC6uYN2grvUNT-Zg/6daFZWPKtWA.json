[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hello everyone my name is karthik",
    "start": "719",
    "end": "2480"
  },
  {
    "text": "vijayaragun and i'm a documentdb",
    "start": "2480",
    "end": "4400"
  },
  {
    "text": "specialist solutions architect with aws",
    "start": "4400",
    "end": "7200"
  },
  {
    "text": "amazon documentdb is a fast scalable",
    "start": "7200",
    "end": "10400"
  },
  {
    "text": "fully managed mongodb compatible",
    "start": "10400",
    "end": "12880"
  },
  {
    "text": "database service in today's video i'll",
    "start": "12880",
    "end": "15519"
  },
  {
    "text": "show you how to integrate amazon",
    "start": "15519",
    "end": "17440"
  },
  {
    "text": "documentdb with aws secrets manager",
    "start": "17440",
    "end": "20800"
  },
  {
    "text": "aw secrets manager helps to protect",
    "start": "20800",
    "end": "22960"
  },
  {
    "text": "secrets needed to access applications",
    "start": "22960",
    "end": "25279"
  },
  {
    "text": "services and other it resources secrets",
    "start": "25279",
    "end": "28000"
  },
  {
    "text": "manager enables you to easily rotate",
    "start": "28000",
    "end": "30880"
  },
  {
    "text": "manage and retrieve credentials your",
    "start": "30880",
    "end": "33360"
  },
  {
    "text": "applications will make an api call to",
    "start": "33360",
    "end": "35840"
  },
  {
    "text": "secrets manager to retrieve the",
    "start": "35840",
    "end": "37360"
  },
  {
    "text": "credentials from the target service in",
    "start": "37360",
    "end": "39280"
  },
  {
    "text": "our example today it's going to be",
    "start": "39280",
    "end": "40640"
  },
  {
    "text": "documentdb by integrating with secrets",
    "start": "40640",
    "end": "43200"
  },
  {
    "text": "manager you can encapsulate credentials",
    "start": "43200",
    "end": "46160"
  },
  {
    "text": "from your application also just with a",
    "start": "46160",
    "end": "49039"
  },
  {
    "text": "few clicks you can configure secrets",
    "start": "49039",
    "end": "51199"
  },
  {
    "text": "manager to rotate your credentials",
    "start": "51199",
    "end": "53039"
  },
  {
    "text": "periodically let's take a look at the",
    "start": "53039",
    "end": "55199"
  },
  {
    "text": "demo to see how all of this works",
    "start": "55199",
    "end": "57360"
  },
  {
    "text": "together",
    "start": "57360",
    "end": "58960"
  },
  {
    "start": "58000",
    "end": "182000"
  },
  {
    "text": "okay so i'm here at the aws management",
    "start": "58960",
    "end": "61280"
  },
  {
    "text": "console for documentdb i have two",
    "start": "61280",
    "end": "63600"
  },
  {
    "text": "clusters called demo and getting started",
    "start": "63600",
    "end": "65840"
  },
  {
    "text": "with documentdb in the northern virginia",
    "start": "65840",
    "end": "67920"
  },
  {
    "text": "region i'm going to be using this",
    "start": "67920",
    "end": "69600"
  },
  {
    "text": "cluster called demo to integrate with",
    "start": "69600",
    "end": "71840"
  },
  {
    "text": "secrets manager so let's go to secrets",
    "start": "71840",
    "end": "74159"
  },
  {
    "text": "manager and say store a new secret and",
    "start": "74159",
    "end": "77360"
  },
  {
    "text": "i'm gonna select this option called",
    "start": "77360",
    "end": "79040"
  },
  {
    "text": "credentials for documentdb database and",
    "start": "79040",
    "end": "81840"
  },
  {
    "text": "i'm gonna give the username so i'm gonna",
    "start": "81840",
    "end": "84080"
  },
  {
    "text": "go into my documentdb cluster the demo",
    "start": "84080",
    "end": "86560"
  },
  {
    "text": "cluster and i'm going to copy the",
    "start": "86560",
    "end": "88240"
  },
  {
    "text": "username from here",
    "start": "88240",
    "end": "90240"
  },
  {
    "text": "and i'm going to use that over here",
    "start": "90240",
    "end": "93200"
  },
  {
    "text": "and then i'm going to give the password",
    "start": "93200",
    "end": "96560"
  },
  {
    "text": "for this user",
    "start": "96560",
    "end": "98479"
  },
  {
    "text": "and i'm gonna select the cluster that",
    "start": "98479",
    "end": "100960"
  },
  {
    "text": "i'm integrating now so i'm gonna select",
    "start": "100960",
    "end": "102880"
  },
  {
    "text": "the demo cluster and i'm gonna say next",
    "start": "102880",
    "end": "106399"
  },
  {
    "text": "over here",
    "start": "106399",
    "end": "107520"
  },
  {
    "text": "i'll give a secret name uh for this",
    "start": "107520",
    "end": "110240"
  },
  {
    "text": "particular secret now this secret name",
    "start": "110240",
    "end": "112320"
  },
  {
    "text": "is the one that",
    "start": "112320",
    "end": "113920"
  },
  {
    "text": "my application would be using to",
    "start": "113920",
    "end": "116079"
  },
  {
    "text": "interact with uh documentdb so i'm going",
    "start": "116079",
    "end": "119280"
  },
  {
    "text": "to call that as",
    "start": "119280",
    "end": "121280"
  },
  {
    "text": "app slash documentdb",
    "start": "121280",
    "end": "124000"
  },
  {
    "text": "slash demo",
    "start": "124000",
    "end": "126479"
  },
  {
    "text": "and i can give a free float description",
    "start": "126479",
    "end": "129119"
  },
  {
    "text": "here saying that this is",
    "start": "129119",
    "end": "131520"
  },
  {
    "text": "secrets for demo cluster",
    "start": "131520",
    "end": "134800"
  },
  {
    "text": "now when i scroll down i'm going to",
    "start": "134800",
    "end": "136400"
  },
  {
    "text": "leave everything else as default i'm",
    "start": "136400",
    "end": "138400"
  },
  {
    "text": "going to go next for now i'm going to",
    "start": "138400",
    "end": "140239"
  },
  {
    "text": "leave the",
    "start": "140239",
    "end": "141360"
  },
  {
    "text": "rotation",
    "start": "141360",
    "end": "143200"
  },
  {
    "text": "automatic rotation of credentials",
    "start": "143200",
    "end": "144640"
  },
  {
    "text": "disabled we'll come back and enable this",
    "start": "144640",
    "end": "146319"
  },
  {
    "text": "in a bit",
    "start": "146319",
    "end": "147360"
  },
  {
    "text": "and then i'm going to say next and i'll",
    "start": "147360",
    "end": "149840"
  },
  {
    "text": "get an option to review i'm going to",
    "start": "149840",
    "end": "151680"
  },
  {
    "text": "review all of this and i also get a",
    "start": "151680",
    "end": "153840"
  },
  {
    "text": "chance to review the source code so",
    "start": "153840",
    "end": "155519"
  },
  {
    "text": "secrets manager you know creates a",
    "start": "155519",
    "end": "157360"
  },
  {
    "text": "source code for various uh",
    "start": "157360",
    "end": "159440"
  },
  {
    "text": "languages and here for i'm going to be",
    "start": "159440",
    "end": "161280"
  },
  {
    "text": "using python so i'll be using this",
    "start": "161280",
    "end": "163040"
  },
  {
    "text": "particular source code in my application",
    "start": "163040",
    "end": "165599"
  },
  {
    "text": "when i connect to documentdb so i will",
    "start": "165599",
    "end": "168480"
  },
  {
    "text": "come back to the source code in a bit",
    "start": "168480",
    "end": "169920"
  },
  {
    "text": "i'm going to say store and as you can",
    "start": "169920",
    "end": "172080"
  },
  {
    "text": "see now we have created a secret called",
    "start": "172080",
    "end": "174319"
  },
  {
    "text": "app slash documentdb slash demo",
    "start": "174319",
    "end": "176800"
  },
  {
    "text": "the next step is to use the secret in an",
    "start": "176800",
    "end": "179360"
  },
  {
    "text": "application uh to retrieve the",
    "start": "179360",
    "end": "181440"
  },
  {
    "text": "credentials so i have an ec2 instance",
    "start": "181440",
    "end": "184319"
  },
  {
    "start": "182000",
    "end": "227000"
  },
  {
    "text": "that have recreated here and to this ec2",
    "start": "184319",
    "end": "187280"
  },
  {
    "text": "instance i've attached an im role called",
    "start": "187280",
    "end": "189920"
  },
  {
    "text": "secrets manager reader if i go into the",
    "start": "189920",
    "end": "192720"
  },
  {
    "text": "secrets manager reader you can see that",
    "start": "192720",
    "end": "195200"
  },
  {
    "text": "i have a policy attached to this role",
    "start": "195200",
    "end": "197280"
  },
  {
    "text": "called secrets manager read-only policy",
    "start": "197280",
    "end": "200560"
  },
  {
    "text": "and",
    "start": "200560",
    "end": "201360"
  },
  {
    "text": "when we look into the secrets manager",
    "start": "201360",
    "end": "202879"
  },
  {
    "text": "read-only policy all that it does is it",
    "start": "202879",
    "end": "205599"
  },
  {
    "text": "allows",
    "start": "205599",
    "end": "206640"
  },
  {
    "text": "secrets manager get secret value action",
    "start": "206640",
    "end": "209360"
  },
  {
    "text": "for all secrets so basically what we've",
    "start": "209360",
    "end": "213040"
  },
  {
    "text": "done here is we've we have enabled our",
    "start": "213040",
    "end": "215040"
  },
  {
    "text": "ec2 instance to",
    "start": "215040",
    "end": "216959"
  },
  {
    "text": "talk to secrets manager uh especially",
    "start": "216959",
    "end": "219760"
  },
  {
    "text": "make the getsecret value call so that it",
    "start": "219760",
    "end": "222159"
  },
  {
    "text": "can retrieve the secret from secrets",
    "start": "222159",
    "end": "224000"
  },
  {
    "text": "manager and then connect to documentdb",
    "start": "224000",
    "end": "226319"
  },
  {
    "text": "so now",
    "start": "226319",
    "end": "227680"
  },
  {
    "start": "227000",
    "end": "312000"
  },
  {
    "text": "let me ssh into the",
    "start": "227680",
    "end": "230480"
  },
  {
    "text": "ec2 instance that i have created",
    "start": "230480",
    "end": "233599"
  },
  {
    "text": "and as you can see here i have a couple",
    "start": "233599",
    "end": "236879"
  },
  {
    "text": "of python files the sampleapp.py is the",
    "start": "236879",
    "end": "239439"
  },
  {
    "text": "main python app and the secrets manager",
    "start": "239439",
    "end": "242480"
  },
  {
    "text": "dot py is the same source code that",
    "start": "242480",
    "end": "245680"
  },
  {
    "text": "secrets manager gave me when i created",
    "start": "245680",
    "end": "247920"
  },
  {
    "text": "the secret app slash documentdb slash",
    "start": "247920",
    "end": "250560"
  },
  {
    "text": "demo the region and all that stuff so if",
    "start": "250560",
    "end": "252799"
  },
  {
    "text": "you go here click on this",
    "start": "252799",
    "end": "255599"
  },
  {
    "text": "and go into python 3 this is this source",
    "start": "255599",
    "end": "259040"
  },
  {
    "text": "code and what you see here are exactly",
    "start": "259040",
    "end": "261280"
  },
  {
    "text": "the same",
    "start": "261280",
    "end": "262240"
  },
  {
    "text": "now if i look into my sample app",
    "start": "262240",
    "end": "265440"
  },
  {
    "text": "that py all that the sample app does is",
    "start": "265440",
    "end": "268639"
  },
  {
    "text": "calls the get secret function",
    "start": "268639",
    "end": "271040"
  },
  {
    "text": "uh which is in the secrets manager.py",
    "start": "271040",
    "end": "275199"
  },
  {
    "text": "and uh here's a getsecrets function and",
    "start": "275199",
    "end": "278080"
  },
  {
    "text": "it gets the secrets and then when when",
    "start": "278080",
    "end": "280560"
  },
  {
    "text": "i'm creating my client uh i'm using that",
    "start": "280560",
    "end": "284320"
  },
  {
    "text": "secrets so i'm using the host port",
    "start": "284320",
    "end": "287280"
  },
  {
    "text": "username and password are all retrieved",
    "start": "287280",
    "end": "289360"
  },
  {
    "text": "from secrets manager so now if i run",
    "start": "289360",
    "end": "291520"
  },
  {
    "text": "this application like python3",
    "start": "291520",
    "end": "294880"
  },
  {
    "text": "sample app you can see that this",
    "start": "294880",
    "end": "297680"
  },
  {
    "text": "application",
    "start": "297680",
    "end": "298960"
  },
  {
    "text": "got the secrets from secrets manager",
    "start": "298960",
    "end": "300960"
  },
  {
    "text": "created an instance of the client and",
    "start": "300960",
    "end": "302639"
  },
  {
    "text": "then inserted a record into documentdb",
    "start": "302639",
    "end": "305280"
  },
  {
    "text": "and read that record successfully and",
    "start": "305280",
    "end": "307120"
  },
  {
    "text": "printed that record which is x uh",
    "start": "307120",
    "end": "310000"
  },
  {
    "text": "documentdb as a document",
    "start": "310000",
    "end": "312320"
  },
  {
    "start": "312000",
    "end": "473000"
  },
  {
    "text": "so that's again a very simple example of",
    "start": "312320",
    "end": "314960"
  },
  {
    "text": "how you can integrate aws secrets",
    "start": "314960",
    "end": "317440"
  },
  {
    "text": "manager with amazon documentdb now if",
    "start": "317440",
    "end": "320160"
  },
  {
    "text": "you want to rotate credentials if you",
    "start": "320160",
    "end": "321919"
  },
  {
    "text": "recall when i created this",
    "start": "321919",
    "end": "324720"
  },
  {
    "text": "secret i disabled uh the rotation but",
    "start": "324720",
    "end": "328800"
  },
  {
    "text": "you know for some enterprises or most of",
    "start": "328800",
    "end": "331039"
  },
  {
    "text": "the enterprises that i've seen have",
    "start": "331039",
    "end": "332560"
  },
  {
    "text": "requirements to",
    "start": "332560",
    "end": "334080"
  },
  {
    "text": "rotate the credentials periodically so",
    "start": "334080",
    "end": "335919"
  },
  {
    "text": "if you want to do that you can just say",
    "start": "335919",
    "end": "337520"
  },
  {
    "text": "edit",
    "start": "337520",
    "end": "338560"
  },
  {
    "text": "say enable rotation and what is that",
    "start": "338560",
    "end": "340960"
  },
  {
    "text": "period do you want to rotate it every 30",
    "start": "340960",
    "end": "342800"
  },
  {
    "text": "days 60 days or 90 days i'm just going",
    "start": "342800",
    "end": "344800"
  },
  {
    "text": "to say 30 days and i'm going to say",
    "start": "344800",
    "end": "346639"
  },
  {
    "text": "create a lambda function right and i can",
    "start": "346639",
    "end": "349280"
  },
  {
    "text": "give this lambda function a name we are",
    "start": "349280",
    "end": "351360"
  },
  {
    "text": "going to say rotate documentdb",
    "start": "351360",
    "end": "353440"
  },
  {
    "text": "demo cred so i'm just going to give this",
    "start": "353440",
    "end": "355600"
  },
  {
    "text": "name and i'm going to save it",
    "start": "355600",
    "end": "358479"
  },
  {
    "text": "so when i do this it takes about a",
    "start": "358479",
    "end": "360560"
  },
  {
    "text": "couple minutes to create uh cloud",
    "start": "360560",
    "end": "363440"
  },
  {
    "text": "formation resources for this lambda",
    "start": "363440",
    "end": "364960"
  },
  {
    "text": "function and that this lambda function",
    "start": "364960",
    "end": "367120"
  },
  {
    "text": "will automatically handle rotation of",
    "start": "367120",
    "end": "369600"
  },
  {
    "text": "the credentials for you so that you",
    "start": "369600",
    "end": "371039"
  },
  {
    "text": "don't have to worry about you know",
    "start": "371039",
    "end": "372639"
  },
  {
    "text": "rotating the credentials manually okay",
    "start": "372639",
    "end": "374800"
  },
  {
    "text": "now the lambda function has been created",
    "start": "374800",
    "end": "376479"
  },
  {
    "text": "and you get this message called secret",
    "start": "376479",
    "end": "378400"
  },
  {
    "text": "successfully scheduled for rotation",
    "start": "378400",
    "end": "380720"
  },
  {
    "text": "uh and if you go over here",
    "start": "380720",
    "end": "382800"
  },
  {
    "text": "you can uh see uh you know that that the",
    "start": "382800",
    "end": "386479"
  },
  {
    "text": "the rotation status is now enabled",
    "start": "386479",
    "end": "389199"
  },
  {
    "text": "i'm gonna explicitly rotate a secret so",
    "start": "389199",
    "end": "392000"
  },
  {
    "text": "that it's not going to be the same",
    "start": "392000",
    "end": "393840"
  },
  {
    "text": "password that i used before so i'm going",
    "start": "393840",
    "end": "395600"
  },
  {
    "text": "to say rotate and you see this message",
    "start": "395600",
    "end": "397680"
  },
  {
    "text": "this secret will be rotated immediately",
    "start": "397680",
    "end": "399360"
  },
  {
    "text": "and the rotation schedule will be reset",
    "start": "399360",
    "end": "401199"
  },
  {
    "text": "so",
    "start": "401199",
    "end": "402319"
  },
  {
    "text": "let's click on this so we now know that",
    "start": "402319",
    "end": "404479"
  },
  {
    "text": "the password has changed or the password",
    "start": "404479",
    "end": "406479"
  },
  {
    "text": "has been rotated so now let me go back",
    "start": "406479",
    "end": "408960"
  },
  {
    "text": "to my ec2 instance here",
    "start": "408960",
    "end": "411599"
  },
  {
    "text": "and let me rerun the python application",
    "start": "411599",
    "end": "414720"
  },
  {
    "text": "i'm not making any changes to my ec2",
    "start": "414720",
    "end": "416639"
  },
  {
    "text": "instance and you can see that even",
    "start": "416639",
    "end": "418639"
  },
  {
    "text": "though the credentials has been rotated",
    "start": "418639",
    "end": "420880"
  },
  {
    "text": "at run time since we are making the get",
    "start": "420880",
    "end": "422639"
  },
  {
    "text": "secrets call uh over here this is",
    "start": "422639",
    "end": "425919"
  },
  {
    "text": "calling uh secrets manager to get the",
    "start": "425919",
    "end": "428319"
  },
  {
    "text": "new secret and uh you know that is",
    "start": "428319",
    "end": "430639"
  },
  {
    "text": "passed to the client now and i'm able to",
    "start": "430639",
    "end": "432400"
  },
  {
    "text": "successfully connect to my documentdb",
    "start": "432400",
    "end": "434720"
  },
  {
    "text": "cluster and insert a record again so",
    "start": "434720",
    "end": "436880"
  },
  {
    "text": "that brings us to the end of today's",
    "start": "436880",
    "end": "438400"
  },
  {
    "text": "demo to summarize i showed you how to",
    "start": "438400",
    "end": "440960"
  },
  {
    "text": "store a secret for documentdb in aws",
    "start": "440960",
    "end": "443599"
  },
  {
    "text": "secrets manager i then showed you how",
    "start": "443599",
    "end": "445680"
  },
  {
    "text": "you can access the secret using a python",
    "start": "445680",
    "end": "447759"
  },
  {
    "text": "application i also showed you how to",
    "start": "447759",
    "end": "450560"
  },
  {
    "text": "configure aw secrets manager to rotate",
    "start": "450560",
    "end": "452880"
  },
  {
    "text": "your credentials and how rotating",
    "start": "452880",
    "end": "454880"
  },
  {
    "text": "credentials does not require your",
    "start": "454880",
    "end": "457120"
  },
  {
    "text": "applications to make any changes i hope",
    "start": "457120",
    "end": "459520"
  },
  {
    "text": "you learned how amazon documentdb and",
    "start": "459520",
    "end": "461919"
  },
  {
    "text": "aws secrets manager integrates i want to",
    "start": "461919",
    "end": "464560"
  },
  {
    "text": "thank you for your time and attention",
    "start": "464560",
    "end": "465919"
  },
  {
    "text": "today take care and stay safe bye",
    "start": "465919",
    "end": "471080"
  }
]