[
  {
    "text": "Let’s open up the Amazon Managed Service for\nPrometheus console and create a workspace for",
    "start": "0",
    "end": "4200"
  },
  {
    "text": "ourselves. A workspace is a virtual environment\nthat isolates access control for ingestion, storage,",
    "start": "4200",
    "end": "10200"
  },
  {
    "text": "and querying of our Prometheus metrics. Once\ncreated, we can use the generated remote write",
    "start": "10200",
    "end": "15400"
  },
  {
    "text": "URL to have our Prometheus server send metrics\nto the service. Now let’s see how we can use",
    "start": "15400",
    "end": "20599"
  },
  {
    "text": "Amazon Managed Service for Grafana to easily\nvisualize, graph, and query these Prometheus",
    "start": "20600",
    "end": "25600"
  },
  {
    "text": "metrics. Let’s create a workspace within the\nAmazon Managed Grafana service console by",
    "start": "25600",
    "end": "30400"
  },
  {
    "text": "providing a name and clicking next. Authentication\nwill be handled through AWS Single Sign-On,",
    "start": "30400",
    "end": "35900"
  },
  {
    "text": "which is enabled in the current region. Let's select\nthe Service Managed permission type, which will",
    "start": "35900",
    "end": "41600"
  },
  {
    "text": "set up the necessary permissions automatically.\nWe'll select all the datasources supported by the",
    "start": "41600",
    "end": "46300"
  },
  {
    "text": "service, and we'll also select Amazon Simple\nNotification Service for notifications. After",
    "start": "46300",
    "end": "51899"
  },
  {
    "text": "reviewing the options selected, we can click\nCreate Workspace. Now that the workspace has",
    "start": "51900",
    "end": "57100"
  },
  {
    "text": "been created, we’re going to assign users from\nAWS SSO so they can access the Grafana",
    "start": "57100",
    "end": "62100"
  },
  {
    "text": "environment. Once users have been granted\naccess permissions from the previous step, they",
    "start": "62100",
    "end": "67100"
  },
  {
    "text": "can now access the Grafana workspace directly\nvia this workspace URL without having to log into",
    "start": "67100",
    "end": "72299"
  },
  {
    "text": "the AWS console. Let’s click on the URL, enter\nour credentials in the AWS SSO login screen, and",
    "start": "72300",
    "end": "79200"
  },
  {
    "text": "authenticate into Grafana. Here in this pre-created\nGrafana environment, we have a variety of",
    "start": "79200",
    "end": "84799"
  },
  {
    "text": "Dashboards and Datasources configured. Let's\nadd the Amazon Managed Service for",
    "start": "84800",
    "end": "89200"
  },
  {
    "text": "Prometheus datasource. We’re going to give it a\nname, provide the workspace URL, and then save",
    "start": "89200",
    "end": "96100"
  },
  {
    "text": "and test the endpoint after selecting the\nappropriate Authentication option. We have a",
    "start": "96100",
    "end": "100500"
  },
  {
    "text": "sample workload deployed in our environment\nusing Amazon Elastic Kubernetes Service,",
    "start": "100500",
    "end": "104900"
  },
  {
    "text": "Amazon Elastic Container Service, AWS Lambda,\netc. Let's see the Kubernetes Pod monitoring dashboard",
    "start": "104900",
    "end": "113300"
  },
  {
    "text": "Here, we can see the Pod Metrics collected by the\nmanaged Prometheus",
    "start": "113300",
    "end": "116200"
  },
  {
    "text": "service from the environment. The application also\nsends custom metrics in Prometheus format, and",
    "start": "116200",
    "end": "123100"
  },
  {
    "text": "we can see them on the PetAdoptions Dashboard\nhere. We can easily create a new panel by",
    "start": "123100",
    "end": "128100"
  },
  {
    "text": "querying a new metric like this. Now let's take a\nlook at the traces generated by the application to",
    "start": "128100",
    "end": "136600"
  },
  {
    "text": "see how it's performing. Here we're looking at a\ndashboard showing trace data from AWS X-Ray.",
    "start": "136600",
    "end": "142600"
  },
  {
    "text": "We can see some request types seem to be\nslower than others, and we can also investigate a",
    "start": "142600",
    "end": "146700"
  },
  {
    "text": "specific trace if needed. Here we see a segment\ntimeline that shows all the various interactions the",
    "start": "146700",
    "end": "152700"
  },
  {
    "text": "application is having with different services.\nThere’s also a deep link to the AWS X-Ray",
    "start": "152700",
    "end": "158200"
  },
  {
    "text": "console, which we can use to perform\ninvestigations on the trace request. This takes us",
    "start": "158200",
    "end": "163200"
  },
  {
    "text": "directly to the Trace Details page on AWS X-Ray,\nshows the Trace map, and also the segment",
    "start": "163200",
    "end": "169200"
  },
  {
    "text": "timeline. We can continue our investigation from\nhere using X-Ray Analytics if needed. This",
    "start": "169200",
    "end": "174700"
  },
  {
    "text": "application also makes use of some AWS Lambda\nfunctions. Metrics collected from the AWS",
    "start": "174700",
    "end": "179900"
  },
  {
    "text": "Lambda environment can be queried directly from\nAmazon CloudWatch. In this dashboard, we can",
    "start": "179900",
    "end": "185000"
  },
  {
    "text": "see the AWS Lambda function performance data\nas well. We can also connect Amazon Timestream",
    "start": "185000",
    "end": "190000"
  },
  {
    "text": "as a datasource. In this dashboard, we have\nsample time-series data collected from a",
    "start": "190000",
    "end": "194600"
  },
  {
    "text": "deployment environment. Powerful visualizations\nhere can help us dive deep into a specific timeline",
    "start": "194600",
    "end": "199900"
  },
  {
    "text": "for more thorough analysis. We can also take a\nlook at a simple dashboard that fetches data from",
    "start": "199900",
    "end": "204799"
  },
  {
    "text": "an Elasticsearch cluster. As you can see, it only\ntakes a few clicks in the AWS console to easily",
    "start": "204800",
    "end": "210900"
  },
  {
    "text": "create fully-managed workspaces for collecting,\nquerying, and storing our container metrics in the",
    "start": "210900",
    "end": "216299"
  },
  {
    "text": "managed Prometheus service, and instantly\nvisualize the data in the managed Grafana",
    "start": "216300",
    "end": "220400"
  },
  {
    "text": "service, along with multiple other datasources all\nin one console. For additional information on how",
    "start": "220400",
    "end": "226400"
  },
  {
    "text": "to use Amazon Managed Service for Prometheus\nand Amazon Managed Service for Grafana,",
    "start": "226400",
    "end": "231000"
  },
  {
    "text": "please refer to our website and the AWS\ndocumentation.",
    "start": "231000",
    "end": "234466"
  }
]