[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "so my name is Joshua buron I am the director and general manager for compute services at AWS it's a small startup you",
    "start": "359",
    "end": "7600"
  },
  {
    "text": "may have heard of it uh I was one of Amazon's first 100 employees and I left",
    "start": "7600",
    "end": "12840"
  },
  {
    "text": "and came back we call that being a boomerang so back then we only sold books we do a little bit more than that",
    "start": "12840",
    "end": "18960"
  },
  {
    "text": "now I've been with AWS for almost five years uh in this role own a bunch of businesses inside of compute many of",
    "start": "18960",
    "end": "25680"
  },
  {
    "text": "which I'm here to talk to you about today so a quick show of hands uh how many of you are at your first",
    "start": "25680",
    "end": "33239"
  },
  {
    "text": "reinvent that is that that is most of the audience uh how many of you using",
    "start": "33239",
    "end": "38360"
  },
  {
    "text": "AWS today it's good good how many keep raising their hands just because",
    "start": "38360",
    "end": "43920"
  },
  {
    "text": "everybody else is yeah this it's good over here all right uh so obviously",
    "start": "43920",
    "end": "50000"
  },
  {
    "text": "we're here to talk about being better faster cheaper and those are not ores those are ANS you can be all of those",
    "start": "50000",
    "end": "55719"
  },
  {
    "text": "things so if you're not here for that session you're going to have to stay anyway",
    "start": "55719",
    "end": "61000"
  },
  {
    "text": "uh so you know tough uh kidding there's no uh there's no test at the end of this",
    "start": "61000",
    "end": "67560"
  },
  {
    "text": "maybe there'll be a test I don't know uh but you do have to stay all the way to the end for these credits that you've",
    "start": "67560",
    "end": "73280"
  },
  {
    "text": "we've been handing out to be active so I know how to kind of optimize for",
    "start": "73280",
    "end": "78400"
  },
  {
    "text": "the audience so in this session this is what you're going to learn right your key takeaways are the best practices that",
    "start": "78400",
    "end": "84240"
  },
  {
    "start": "79000",
    "end": "168000"
  },
  {
    "text": "you can use today to optimize your cost of compute and to optimize your capacity",
    "start": "84240",
    "end": "90119"
  },
  {
    "text": "we're going to also talk about how you automate this right uh I've been giving this session for a few years and we've",
    "start": "90119",
    "end": "95439"
  },
  {
    "text": "made significant strides in the software that you use to automate this I don't want this to be a lot of undifferentiated heavy lifting I don't",
    "start": "95439",
    "end": "102600"
  },
  {
    "text": "know if we've got it all perfect but I like to think that some of the things we've release that I'm talking about go a long way to making this easy for you",
    "start": "102600",
    "end": "109799"
  },
  {
    "text": "we're also going to go through a few specific workloads I can't go through all of them tonight but hopefully these",
    "start": "109799",
    "end": "114960"
  },
  {
    "text": "are practical examples that you can think of workloads inside your own organization whether you're big or small",
    "start": "114960",
    "end": "121799"
  },
  {
    "text": "startup research Enterprise hopefully they resonate with you and then obviously we've given you uh $50 in",
    "start": "121799",
    "end": "128119"
  },
  {
    "text": "Amazon ec2 spot credit to get started and if you're not familiar with spot that's another poll question how many of",
    "start": "128119",
    "end": "134200"
  },
  {
    "text": "you are using spot this is the smart handsome people in the room",
    "start": "134200",
    "end": "139560"
  },
  {
    "text": "uh this is a really great way that you can optimize and we're going to kind of go over that in more",
    "start": "139560",
    "end": "144720"
  },
  {
    "text": "detail so I've kind of gone over this right this is the agenda we're going to go over General best practices",
    "start": "144720",
    "end": "150680"
  },
  {
    "text": "what the software is underneath for automating cost optimization go through those workload examples I have a special",
    "start": "150680",
    "end": "157000"
  },
  {
    "text": "guest star here from Lyft it's one of our great customers he's going to come up and speak for a few minutes about how",
    "start": "157000",
    "end": "162280"
  },
  {
    "text": "they're putting all of this into practice at their company and then we're going to wrap up with next",
    "start": "162280",
    "end": "168400"
  },
  {
    "start": "168000",
    "end": "280000"
  },
  {
    "text": "steps so these are the four core principles of using AWS effectively the",
    "start": "168440",
    "end": "173720"
  },
  {
    "text": "first one is elasticity so that's using features like autoscaling uh to scale",
    "start": "173720",
    "end": "178879"
  },
  {
    "text": "dynamically up and down using our new machine learning technology that does predictive scaling uh using something like",
    "start": "178879",
    "end": "186480"
  },
  {
    "text": "hibernate which is a new feature we just launched for on demand we launched it for spot last year it's also about",
    "start": "186480",
    "end": "191760"
  },
  {
    "text": "turning instances off that you're not using if you're migrating to AWS from on-prem may not seem inherently obvious",
    "start": "191760",
    "end": "198799"
  },
  {
    "text": "but you can turn things off especially if you're using on demand or spot and save significant amounts of money",
    "start": "198799",
    "end": "203920"
  },
  {
    "text": "another core principle is being flexible so that means using different instance types different availability zones and",
    "start": "203920",
    "end": "209879"
  },
  {
    "text": "side of one of our regions using the different purchase options and I'll kind of go into those you're also going to be",
    "start": "209879",
    "end": "215959"
  },
  {
    "text": "using features that we make uh available to you to identify which workloads are costing you maybe more than they should",
    "start": "215959",
    "end": "222599"
  },
  {
    "text": "and then give you the ability to kind of dashboard the savings for your bosses anybody in this room have a boss right",
    "start": "222599",
    "end": "229040"
  },
  {
    "text": "everybody else probably is the boss maybe you're kind of both so like this actually is pretty important right if",
    "start": "229040",
    "end": "234640"
  },
  {
    "text": "you're just doing a bunch of stuff and throwing it up there to see what sticks you want to be able to identify what am I doing that's working what are the",
    "start": "234640",
    "end": "241319"
  },
  {
    "text": "areas that need more investment where are the areas where maybe I could save money but the ROI would actually be pretty small so I'm going to tell you",
    "start": "241319",
    "end": "247959"
  },
  {
    "text": "how you can do that and then lastly kind of a quick show of hands how many people are migrating something to",
    "start": "247959",
    "end": "254360"
  },
  {
    "text": "AWS okay a lot of you so hopefully this will be relevant so even if you don't have a cloud native workload if you've",
    "start": "254360",
    "end": "260919"
  },
  {
    "text": "got kind of traditional Enterprise workloads HPC batch a lot of these things can benefit from what I'm going",
    "start": "260919",
    "end": "266479"
  },
  {
    "text": "to talk about today you know re-engineering to be cloud native to be more stateless fault tolerant use",
    "start": "266479",
    "end": "272120"
  },
  {
    "text": "containers those are great and I will talk about that but there is nothing that says that's what you have to do to",
    "start": "272120",
    "end": "277880"
  },
  {
    "text": "save money so I mentioned this best practices",
    "start": "277880",
    "end": "283000"
  },
  {
    "start": "280000",
    "end": "387000"
  },
  {
    "text": "here uh on the previous slide these are uh really the key one you're going to start with is",
    "start": "283000",
    "end": "288400"
  },
  {
    "text": "tagging so tagging is metadata where you can use kind of up to 50 tags which just",
    "start": "288400",
    "end": "293720"
  },
  {
    "text": "key value pairs that you can put any text in and what'll help you do is identify which applications are uh",
    "start": "293720",
    "end": "301120"
  },
  {
    "text": "running and using different resources so for example you could tag an instance and say this is part of my website it's",
    "start": "301120",
    "end": "307960"
  },
  {
    "text": "part of the dev test part of my website or it's part of the gamma environment or it's part of the production environment",
    "start": "307960",
    "end": "313960"
  },
  {
    "text": "maybe it was launched by Joshua it was launched by Matt and eventually you know all the tagging you can kind of analyze",
    "start": "313960",
    "end": "319720"
  },
  {
    "text": "it using our kind of cost Explorer and other tools that we provide and then you can actually answer questions like how",
    "start": "319720",
    "end": "325120"
  },
  {
    "text": "much does my website cost or are my Dev test environments being run all the time",
    "start": "325120",
    "end": "330319"
  },
  {
    "text": "are people using the RIS that I purchased or are they launching other instances so tagging is a super important principle uh the tags are free",
    "start": "330319",
    "end": "338039"
  },
  {
    "text": "no charge just for you uh so custom tags these are really important and it's really basic but",
    "start": "338039",
    "end": "344400"
  },
  {
    "text": "people kind of forget the step sometimes the other thing is there's three core pieces of software and I'm going to talk",
    "start": "344400",
    "end": "350160"
  },
  {
    "text": "about them today so ec2 Fleet this is an API that we released back in May and",
    "start": "350160",
    "end": "355400"
  },
  {
    "text": "it's actually core to a number of the cost optimization technology launch templates which are a way to kind of",
    "start": "355400",
    "end": "361440"
  },
  {
    "text": "encapsulate all the launch parameters for ec2 instances and auto scaling",
    "start": "361440",
    "end": "366720"
  },
  {
    "text": "anybody using autoscaling right now also this is pretty pretty common right it's actually used by I think something like",
    "start": "366720",
    "end": "372960"
  },
  {
    "text": "97% of our large customers and it's not something you have to use and I'm going to talk about things uh that don't use",
    "start": "372960",
    "end": "378840"
  },
  {
    "text": "autoscaling but it is a really powerful tool for kind of set it and forget it uh",
    "start": "378840",
    "end": "383960"
  },
  {
    "text": "cost optimization and capacity management so why does this work for you",
    "start": "383960",
    "end": "389599"
  },
  {
    "start": "387000",
    "end": "462000"
  },
  {
    "text": "or you take all these principles uh AWS is kind of always working on your behalf",
    "start": "389599",
    "end": "395120"
  },
  {
    "text": "when it comes to things like cost optimization so obviously it seems pretty basic now but one of the Innovations of the cloud was that you",
    "start": "395120",
    "end": "401560"
  },
  {
    "text": "didn't require upfront investment to get started with technology you didn't have to go buy a data center make a deal with",
    "start": "401560",
    "end": "407199"
  },
  {
    "text": "a Colo sign up for a one-year lease a three-year lease a fiveyear lease it's also pay as you go which is a pretty",
    "start": "407199",
    "end": "412960"
  },
  {
    "text": "flexible tool that's true for both on demand and for spot you also can pay less when you commit because we do",
    "start": "412960",
    "end": "419120"
  },
  {
    "text": "recognize that of course for some people it actually be easier to make a one or a three-year commitment for a significant",
    "start": "419120",
    "end": "424840"
  },
  {
    "text": "discount and then lastly you pay less when we get bigger so this is that famous Amazon Customer Obsession working",
    "start": "424840",
    "end": "431039"
  },
  {
    "text": "on your behalf we've had over 66 price Cuts in AWS on ec2 over the last 10",
    "start": "431039",
    "end": "437319"
  },
  {
    "text": "years and that's where we're using our economy of scale across all of these regions all the hardware types that we",
    "start": "437319",
    "end": "443319"
  },
  {
    "text": "offer all the instances and we're passing that savings along to you and I'm actually going to spend a little bit of time talking about how hard Hardware",
    "start": "443319",
    "end": "449840"
  },
  {
    "text": "innovations that you may have heard of especially if you went to Monday night's talk by Peter Dan sanis how that",
    "start": "449840",
    "end": "455440"
  },
  {
    "text": "actually translates into savings that's almost invisible but is uh really",
    "start": "455440",
    "end": "461919"
  },
  {
    "text": "powerful so I've mentioned purchase options a few times and you heard me talk about spot it's a product that's",
    "start": "461919",
    "end": "467159"
  },
  {
    "start": "462000",
    "end": "610000"
  },
  {
    "text": "pretty near and dear to my heart we actually have three purchasing options in ec2 most of you are familiar with on",
    "start": "467159",
    "end": "473319"
  },
  {
    "text": "demand that's the pay as you go just get started fire up an instance no upfront commitment no long-term commitments",
    "start": "473319",
    "end": "480199"
  },
  {
    "text": "you're build by the second this is the kind of thing you're going to be using for spiky workloads defining your needs",
    "start": "480199",
    "end": "485639"
  },
  {
    "text": "things that can't be interrupted or where you're not certain kind of what instance type to use or how it's going to perform then we have RIS this is",
    "start": "485639",
    "end": "493440"
  },
  {
    "text": "where I mentioned you make a one or a three-year commitment and you make a significant savings over the on demand",
    "start": "493440",
    "end": "498919"
  },
  {
    "text": "price this is really good for your steady state workloads maybe your database is running on this things that",
    "start": "498919",
    "end": "504400"
  },
  {
    "text": "you're never turning off and it would actually make no sense to turn off and then lastly spot instances is so this is",
    "start": "504400",
    "end": "510960"
  },
  {
    "text": "spare ec2 capacity where you save between 70 and 90% And then the only difference between",
    "start": "510960",
    "end": "517320"
  },
  {
    "text": "this and On Demand besides the savings is that uh we can reclaim these instances with a two-minute notification",
    "start": "517320",
    "end": "523680"
  },
  {
    "text": "if we need it back for on demand capacity usage and before I leave this slide I want to mention that people hear",
    "start": "523680",
    "end": "529600"
  },
  {
    "text": "that and they kind of think like how am I going to know how to use it so I'll go into how we use software uh to make it",
    "start": "529600",
    "end": "535040"
  },
  {
    "text": "easier to use spot instances in your production environments but a little statistic I'd like to share is that 95%",
    "start": "535040",
    "end": "541040"
  },
  {
    "text": "of spot instances were terminated by the customer so that just means you finished your workload turned off the instance",
    "start": "541040",
    "end": "547519"
  },
  {
    "text": "moved on to something else so between two and 5% of the time on average you might be interrupted by AWS with that",
    "start": "547519",
    "end": "554000"
  },
  {
    "text": "two-minute notification and there's tooling you can use like our hibernate feature stop start uh but if you're",
    "start": "554000",
    "end": "560040"
  },
  {
    "text": "using a stateless workload two minutes is a really long time if your API tier responds in 100 milliseconds you can",
    "start": "560040",
    "end": "566200"
  },
  {
    "text": "just drain from the elb and kind of move on with life so these are the three core purchasing options and another thing",
    "start": "566200",
    "end": "572600"
  },
  {
    "text": "that sometimes trips people up who are new to AWS there's no difference in the hardware that's underneath these you can",
    "start": "572600",
    "end": "578399"
  },
  {
    "text": "really think of these as Financial constructs so all of the different instance types the ones you heard about",
    "start": "578399",
    "end": "584040"
  },
  {
    "text": "like the A1 with our arm processor AMD all of our Intel choices from the",
    "start": "584040",
    "end": "589600"
  },
  {
    "text": "biggest 12 terabyte X1 instances to the tiniest you know T2 T3 instances all of",
    "start": "589600",
    "end": "595680"
  },
  {
    "text": "those are available in all of these purchasing models and they have the same capabilities right the same features the",
    "start": "595680",
    "end": "601399"
  },
  {
    "text": "same functionality there might be more or less capacity available for spot or for on demand but it's just a financial",
    "start": "601399",
    "end": "609959"
  },
  {
    "text": "construct I mentioned this hibernate feature if you have an application and you're coming from the on- premisis world might take a long time for that",
    "start": "609959",
    "end": "616839"
  },
  {
    "start": "610000",
    "end": "666000"
  },
  {
    "text": "application to boot up right so the instance might boot quickly but then you do a bunch of bootstrapping right you get the application into into memory and",
    "start": "616839",
    "end": "623519"
  },
  {
    "text": "you kind of load data from disk you can now use hibernate both for on demand and since last year for spot to get that",
    "start": "623519",
    "end": "630320"
  },
  {
    "text": "application into a known good State and then hibernate it then when it launches the next time it's that much faster so",
    "start": "630320",
    "end": "637399"
  },
  {
    "text": "in a subtle way that seems like a kind of cool feature but how does that save you money well if you build by the",
    "start": "637399",
    "end": "642639"
  },
  {
    "text": "second and you have a short-lived workload and it takes 30 minutes less to get started that's 30 minutes of savings",
    "start": "642639",
    "end": "649399"
  },
  {
    "text": "right there so even features that just seem like interesting convenience features like pre-warming your instances",
    "start": "649399",
    "end": "655440"
  },
  {
    "text": "can also be a way that you save money",
    "start": "655440",
    "end": "659720"
  },
  {
    "start": "666000",
    "end": "734000"
  },
  {
    "text": "say that for the end I'm sorry uh when I talk about instances you know these are",
    "start": "667360",
    "end": "672519"
  },
  {
    "text": "what we would refer to as different servers or different server types or you might hear them as VMS but we have 175",
    "start": "672519",
    "end": "678920"
  },
  {
    "text": "different instance types so that includes different sizes different families different processors and as you",
    "start": "678920",
    "end": "683959"
  },
  {
    "text": "see here in this curve there's been this Bend upwards and what's happened is that",
    "start": "683959",
    "end": "689040"
  },
  {
    "text": "uh innovations that we have made on the hardware side to make it easier for us and more cost effective to manage this",
    "start": "689040",
    "end": "695959"
  },
  {
    "text": "virtualized at scale environment over uh you know 60 availability zones 18",
    "start": "695959",
    "end": "702240"
  },
  {
    "text": "different regions with another four that have been announced this Hardware advantage that we call the Nitro",
    "start": "702240",
    "end": "707880"
  },
  {
    "text": "platform has turned into our ability to launch more instance types for you I think we're launched something like",
    "start": "707880",
    "end": "713920"
  },
  {
    "text": "three times as many instance types in the last year as we did the previous year so you see these couple of arrows",
    "start": "713920",
    "end": "719440"
  },
  {
    "text": "where it says Nitro for networking and then the C5 and M5 Nitro instances so",
    "start": "719440",
    "end": "724519"
  },
  {
    "text": "the more experience we got with Nitro and the broader became used on our platform the faster we were able to",
    "start": "724519",
    "end": "730720"
  },
  {
    "text": "innovate so what is Nitro so Nitro is a modular building",
    "start": "730720",
    "end": "737360"
  },
  {
    "start": "734000",
    "end": "895000"
  },
  {
    "text": "block that enables us as I mentioned to rapidly deliver new instance types if any of you are familiar with how",
    "start": "737360",
    "end": "742639"
  },
  {
    "text": "virtualization technology Works uh you have a hypervisor that protects the physical hardware and the BIOS it",
    "start": "742639",
    "end": "749279"
  },
  {
    "text": "virtualizes the CPU storage networking and then has a rich set of management capabilities across the top so this",
    "start": "749279",
    "end": "755440"
  },
  {
    "text": "isn't something that we invented obviously there's VMware there's KVM there's been other hypervisor",
    "start": "755440",
    "end": "760600"
  },
  {
    "text": "Technologies but with 10 years of experience operating an at scale virtualized environment what we figured",
    "start": "760600",
    "end": "766440"
  },
  {
    "text": "out was if we break apart all of those functions into separate modular components we can offload them onto",
    "start": "766440",
    "end": "773399"
  },
  {
    "text": "physical Hardware that we develop that allows us to reduce cost by delivering nearly all of the physical Hardware to",
    "start": "773399",
    "end": "780560"
  },
  {
    "text": "you even in this virtualized environment so again I want to spend a little time explaining why that matters in a",
    "start": "780560",
    "end": "787440"
  },
  {
    "text": "virtualized environment like a VMware type environment or KVM if you're on premise about 25 to 33% of your physical",
    "start": "787440",
    "end": "794399"
  },
  {
    "text": "Hardware is given over to your kind of your hypervisor right that's what you need you gain a lot of advantages like",
    "start": "794399",
    "end": "800000"
  },
  {
    "text": "you can rapidly provision and deprovision and you can make sure there's security and policies in place",
    "start": "800000",
    "end": "805199"
  },
  {
    "text": "but you lose that Hardware sometimes people also complain that in comparison to Bare Metal you lose some of the",
    "start": "805199",
    "end": "811600"
  },
  {
    "text": "performance by having this virtualization overhead on our Nitro instances you get 99% bare metal",
    "start": "811600",
    "end": "817600"
  },
  {
    "text": "performance and somewhere between 95 and 99% of the physical Hardware is given",
    "start": "817600",
    "end": "822920"
  },
  {
    "text": "over to you the customer so why does that matter for cost well think about if",
    "start": "822920",
    "end": "829399"
  },
  {
    "text": "uh you know for every seat in this room all of you brought a backpack right and you had to put it on the seat next to",
    "start": "829399",
    "end": "835360"
  },
  {
    "text": "you if instead I can have you put your backpacks under the chair I can fit a lot more people in this room more people",
    "start": "835360",
    "end": "841160"
  },
  {
    "text": "I can fit in this room more people I can deliver this message to in the same amount of time so this actually turns",
    "start": "841160",
    "end": "847079"
  },
  {
    "text": "into a structural cost Advantage for AWS in that we're able to put that many more you know virtual servers instances in",
    "start": "847079",
    "end": "854279"
  },
  {
    "text": "the same physical space and this isn't the kind of innovation that's going to make a lot of sense if you're running a",
    "start": "854279",
    "end": "859480"
  },
  {
    "text": "Colo or you know an on- premise data center with a couple thousand VMS this",
    "start": "859480",
    "end": "864880"
  },
  {
    "text": "isn't the kind of innovation that you're going to invest in because it's not cost effective but at the we're operating at",
    "start": "864880",
    "end": "870199"
  },
  {
    "text": "it makes sense for us to develop our own uh security chips and cards to offload networking and our own hypervisor and",
    "start": "870199",
    "end": "877519"
  },
  {
    "text": "it's also something that allows us to innovate and develop things like firecracker which is a lightweight uh VM",
    "start": "877519",
    "end": "883920"
  },
  {
    "text": "environment for containers and serverless we talked about that on Monday night as well so this is kind of",
    "start": "883920",
    "end": "889240"
  },
  {
    "text": "working for you invisibly under the scenes it makes it move faster for us kind of a",
    "start": "889240",
    "end": "894880"
  },
  {
    "text": "win-win when I talked about all 175 of those instances and and uh someone just",
    "start": "894880",
    "end": "899959"
  },
  {
    "start": "895000",
    "end": "1090000"
  },
  {
    "text": "told me this is actually now already out of date we're going to have 200 of these by the end of the year so I need to have",
    "start": "899959",
    "end": "905360"
  },
  {
    "text": "like a real-time slide service that Updates this but we kind of I don't want you to get overwhelmed by the different",
    "start": "905360",
    "end": "911399"
  },
  {
    "text": "instance types you're going to find one or two or three that are probably right for your workloads and on a given work",
    "start": "911399",
    "end": "917399"
  },
  {
    "text": "any given workload unless you're uh making super heavy use of spot you might only use one instance type but the work",
    "start": "917399",
    "end": "923800"
  },
  {
    "text": "it kind of generally divides into these three uh capability sets so you kind of think about what workload do I have is",
    "start": "923800",
    "end": "929800"
  },
  {
    "text": "it general purpose is it memory intensive is does it need a lot of storage am I using gpus to do machine",
    "start": "929800",
    "end": "935720"
  },
  {
    "text": "learning or deep learning then kind of which capability do I need do I need the latest Intel skyl processors am I fine",
    "start": "935720",
    "end": "942839"
  },
  {
    "text": "on AMD uh do I have a scale out workload like a lamp stack that isn't CPU intensive could I save 45% by using a",
    "start": "942839",
    "end": "950399"
  },
  {
    "text": "pretty small A1 instance on our arm uh chip the graviton do I need the fastest",
    "start": "950399",
    "end": "955720"
  },
  {
    "text": "processor do I need to attach uh elastic graphics to kind of do a little Graphics workload or attach our new elastic",
    "start": "955720",
    "end": "962120"
  },
  {
    "text": "inference service where you can attach a little bit of GPU to a compute instance so you're just going to think about what",
    "start": "962120",
    "end": "967480"
  },
  {
    "text": "your business needs are and then these instances are going to become kind of obvious which ones you",
    "start": "967480",
    "end": "972680"
  },
  {
    "text": "pick but here picking the right instance can also be a cost savings so if you are",
    "start": "972680",
    "end": "978600"
  },
  {
    "text": "coming uh an analogy or excuse me an example I like to use is we have people inside of Amazon who've developed",
    "start": "978600",
    "end": "984759"
  },
  {
    "text": "software that's been around 10 15 years so as they've been moving it kind of migrating it to uh more modern parts of",
    "start": "984759",
    "end": "991800"
  },
  {
    "text": "AWS we are you know customer of ourselves I'll talk to these teams because one of my jobs is to make our",
    "start": "991800",
    "end": "997839"
  },
  {
    "text": "own teams more efficient into how they use AWS and I'll say why are using this",
    "start": "997839",
    "end": "1003079"
  },
  {
    "text": "instance with eight gigs of RAM and they'll say well my application needs a gigs of RAM and I'll say like playing",
    "start": "1003079",
    "end": "1009440"
  },
  {
    "text": "dumb right like what I don't how do you know that they're like well the provisioning script says it needs eight gigs of",
    "start": "1009440",
    "end": "1014639"
  },
  {
    "text": "RAM and I'm like have you tried a T3 they're like I've never tried a T3 turns out significant amounts of our",
    "start": "1014639",
    "end": "1021199"
  },
  {
    "text": "applications are not CPU bound some are obviously some need a C5 or an M5 some",
    "start": "1021199",
    "end": "1026600"
  },
  {
    "text": "are at processing you know big inmemory data sets and they need an x one but a lot of applications you'd be surprised",
    "start": "1026600",
    "end": "1032520"
  },
  {
    "text": "and you can just use on demand or spot to test this out how well they would perform on just a smaller size of the",
    "start": "1032520",
    "end": "1038880"
  },
  {
    "text": "same instance or on a smaller instance family like the t's which are our over",
    "start": "1038880",
    "end": "1044000"
  },
  {
    "text": "subscribed kind of burstable instances so that's another way you can save money just by experimenting with",
    "start": "1044000",
    "end": "1049600"
  },
  {
    "text": "which instance type you're using for your applications this is especially true if you have back office applications maybe you developed them",
    "start": "1049600",
    "end": "1055760"
  },
  {
    "text": "in- house they're you know 5 years old 10 years old 15 years old chances are pretty good you don't need the latest",
    "start": "1055760",
    "end": "1062520"
  },
  {
    "text": "Sky leg processors for those uh and then chances are if you've developed an application in the last 10 years on",
    "start": "1062520",
    "end": "1068320"
  },
  {
    "text": "pretty much any language it's probably chipset agnostic so maybe you can look at AMD save 10 or 15% or maybe like that",
    "start": "1068320",
    "end": "1076159"
  },
  {
    "text": "example I used earlier with the lamp stack we have some tests that we've already shown 45% savings for these",
    "start": "1076159",
    "end": "1082159"
  },
  {
    "text": "applications that really scale out and only need like a large number of kind of very small instances with one or two",
    "start": "1082159",
    "end": "1089679"
  },
  {
    "text": "CPUs on the other side of things maybe you really need a capacity reservation RIS are great and these days with",
    "start": "1089880",
    "end": "1096799"
  },
  {
    "start": "1090000",
    "end": "1151000"
  },
  {
    "text": "regional RIS you don't need to kind of think about what availability Zone they're in but if you need a certain",
    "start": "1096799",
    "end": "1101880"
  },
  {
    "text": "amount ofi coverage historically uh with reservations historically your only",
    "start": "1101880",
    "end": "1107000"
  },
  {
    "text": "option was zonal RIS which tied the discount and the capacity reservation together so we've split those apart now",
    "start": "1107000",
    "end": "1113320"
  },
  {
    "text": "and you can use on demand capacity reservations to cover either your RIS or your on demand usage where you do things",
    "start": "1113320",
    "end": "1119520"
  },
  {
    "text": "like red black deployments and maybe you really want to make sure the other cluster is spun up uh stood up before uh",
    "start": "1119520",
    "end": "1125799"
  },
  {
    "text": "you kind of flip over this isn't something that most of you are going to use but it's another way to save money",
    "start": "1125799",
    "end": "1131559"
  },
  {
    "text": "where you can get a capacity reservation for a very small portion of your Fleet where you really need it and then",
    "start": "1131559",
    "end": "1136760"
  },
  {
    "text": "everything else where you're using spot or on demand or you're keeping it running all the time you don't need to",
    "start": "1136760",
    "end": "1142000"
  },
  {
    "text": "deal with the overhead of having all of your instances kind of you know running 100% of the time just to maintain the",
    "start": "1142000",
    "end": "1147720"
  },
  {
    "text": "very small amount that needs this reservation feature so the takeaway from this",
    "start": "1147720",
    "end": "1153320"
  },
  {
    "start": "1151000",
    "end": "1244000"
  },
  {
    "text": "section with these three purchasing options is that if you're going to optimize costs on",
    "start": "1153320",
    "end": "1158400"
  },
  {
    "text": "ec2 I'm GNA pause for dramatic effect you need to combine the purchasing",
    "start": "1158400",
    "end": "1163799"
  },
  {
    "text": "options it it it trips people up they're like all right I'm gonna I'm gonna figure out which one I'm going to use I'm going to centralize on that uh",
    "start": "1163799",
    "end": "1171000"
  },
  {
    "text": "that's like picking one food that you like and eating only that food the rest of your life uh every so often I meet",
    "start": "1171000",
    "end": "1177600"
  },
  {
    "text": "someone who says that's what they do but most people like to combine things so you're going to use RIS as I mentioned",
    "start": "1177600",
    "end": "1182760"
  },
  {
    "text": "for steady state workloads on demand for scaling up things that can't be interrupted and then you're going to use",
    "start": "1182760",
    "end": "1189000"
  },
  {
    "text": "spot for your fault tolerant flexible stateless workloads now each of your applications might use a different",
    "start": "1189000",
    "end": "1194520"
  },
  {
    "text": "percent of these so I mentioned earlier like you know if you're running a data base are you going to run it on",
    "start": "1194520",
    "end": "1200360"
  },
  {
    "text": "spot no yeah there's good good good head nods here right I will not answer your trouble tickets uh if you if your",
    "start": "1200360",
    "end": "1206799"
  },
  {
    "text": "database crashes because you're running it on spot but even with a database you might have an ETL job that runs once a",
    "start": "1206799",
    "end": "1212799"
  },
  {
    "text": "week or overnight maybe that can run on spot if you're running a website you're going to run a base of on demand and a",
    "start": "1212799",
    "end": "1219400"
  },
  {
    "text": "lot of spot and every workload is going to be different in terms of percentages but I want you to think about it this",
    "start": "1219400",
    "end": "1224559"
  },
  {
    "text": "way it's very rare that I run into a customer that's 100% spot and no r or 100% On Demand and no RIS or 100% RIS",
    "start": "1224559",
    "end": "1232880"
  },
  {
    "text": "and no spot if I do run into those people typically they're actually not as cost optimized as they like to think",
    "start": "1232880",
    "end": "1238679"
  },
  {
    "text": "they are and you people seem very smart so you're gonna you're going to follow",
    "start": "1238679",
    "end": "1244080"
  },
  {
    "start": "1244000",
    "end": "1326000"
  },
  {
    "text": "this now I keep mentioning software and automation uh We've trying to made this easier so those General best practices",
    "start": "1244080",
    "end": "1250760"
  },
  {
    "text": "you could go out and Implement them yourself you could figure out what percent you want to use of spot and OD",
    "start": "1250760",
    "end": "1256400"
  },
  {
    "text": "and RI you can use our run instances API which is the core API used to launch ec2",
    "start": "1256400",
    "end": "1262520"
  },
  {
    "text": "instances uh and then you can just launch your instances and you can build your own orchestration layer and if any",
    "start": "1262520",
    "end": "1268039"
  },
  {
    "text": "of you have been using AWS for a long time this may have actually been something you did we have now made this a lot easier so with ec2 Fleet which",
    "start": "1268039",
    "end": "1275279"
  },
  {
    "text": "I'll talk about uh in a little more depth which is now integrated with autoscaling it's integrated with our",
    "start": "1275279",
    "end": "1281279"
  },
  {
    "text": "elastic container service ECS it's integrated with our kubernetes Management Service eks if you do any",
    "start": "1281279",
    "end": "1287679"
  },
  {
    "text": "rendering like image rendering we have a tool from a company that we acquired called thinkbox they use this technology",
    "start": "1287679",
    "end": "1294760"
  },
  {
    "text": "use EMR for Hadoop and Spark workloads even if you use some of these third parties here right Cub if you use",
    "start": "1294760",
    "end": "1300480"
  },
  {
    "text": "terraform instead of cloud formation if you use Jenkins uh if you use kubernetes in a",
    "start": "1300480",
    "end": "1305799"
  },
  {
    "text": "native Fashion on AWS we're trying to make it possible that whatever choice you make whichever one's right for you",
    "start": "1305799",
    "end": "1312679"
  },
  {
    "text": "the practices that I'm talking about here the software it's embedded in the application so I'm not here to tell you",
    "start": "1312679",
    "end": "1317840"
  },
  {
    "text": "you need to kind of reild your entire application architecture to save money you just need to think about how you",
    "start": "1317840",
    "end": "1322880"
  },
  {
    "text": "incorporate this into what you're already doing you don't have to take my word for",
    "start": "1322880",
    "end": "1328200"
  },
  {
    "start": "1326000",
    "end": "1446000"
  },
  {
    "text": "it although uh I think I'm reasonably uh correct so",
    "start": "1328200",
    "end": "1334880"
  },
  {
    "text": "we have these customer references here to kind of give you an idea of all the different companies that are putting",
    "start": "1334880",
    "end": "1341159"
  },
  {
    "text": "these practices uh into place so for example",
    "start": "1341159",
    "end": "1346320"
  },
  {
    "text": "uh mobile ey this is an autonomous driv company based in Israel they chose AWS",
    "start": "1346320",
    "end": "1351480"
  },
  {
    "text": "as their preferred cloud provider and what they told us is that jobs that would take weeks in their data",
    "start": "1351480",
    "end": "1356520"
  },
  {
    "text": "center they can now do them in hours on ec2 by making pretty heavy use of spot",
    "start": "1356520",
    "end": "1362200"
  },
  {
    "text": "so that's really powerful when you think about how much more you can do how much more work you can get done in a short amount of time or there's a company",
    "start": "1362200",
    "end": "1369159"
  },
  {
    "text": "named alumina which does genetic testing and they offer this Gene sequencing uh technology and software to a lot of uh",
    "start": "1369159",
    "end": "1375919"
  },
  {
    "text": "labs and research institutions around the world they were able to cut their costs by 75% and that turns into being",
    "start": "1375919",
    "end": "1382640"
  },
  {
    "text": "able to offer their service more inexpensively to customers which enables a lot more companies who or research",
    "start": "1382640",
    "end": "1389279"
  },
  {
    "text": "institutions who want to offer genetic testing or use Gene sequencing like a children's hospital suddenly that's",
    "start": "1389279",
    "end": "1395039"
  },
  {
    "text": "within their reach whereas before it was too expensive there's another company adroll",
    "start": "1395039",
    "end": "1400760"
  },
  {
    "text": "that I like to talk about so they're doing realtime bidding this is a really spot friendly workload it's extremely",
    "start": "1400760",
    "end": "1405880"
  },
  {
    "text": "stateless they're processing a 100 billion requests today by making really heavy use of spot so an average response",
    "start": "1405880",
    "end": "1412760"
  },
  {
    "text": "time of kind of 90 milliseconds it's a lot shorter than those small percentage of interruptions that they're going to",
    "start": "1412760",
    "end": "1417840"
  },
  {
    "text": "face and even then they have two minutes to kind of drain connections and move on so using spot has enabled them to save",
    "start": "1417840",
    "end": "1424480"
  },
  {
    "text": "over $3 million a year so that's a pretty big cost reduction uh or maybe three million",
    "start": "1424480",
    "end": "1432200"
  },
  {
    "text": "isn't that big for you uh it is for me so I've talked a lot about kind of uh",
    "start": "1432200",
    "end": "1438480"
  },
  {
    "text": "what I want you to do now I'm going to enter into the portion of the how I want you to do",
    "start": "1438480",
    "end": "1444639"
  },
  {
    "start": "1446000",
    "end": "1467000"
  },
  {
    "text": "this so these are the three core Technologies I mentioned this before ec2 Fleet which is an API launch templates",
    "start": "1446400",
    "end": "1454760"
  },
  {
    "text": "uh which is a service that now uh I'm going to talk about and then autoscaling groups so again not everything is going",
    "start": "1454760",
    "end": "1460600"
  },
  {
    "text": "to be using autoscaling groups but for a large majority of your workloads these are the technologies that you're going",
    "start": "1460600",
    "end": "1465679"
  },
  {
    "text": "to be using so what is launch templates it's uh reduces the number of steps that it",
    "start": "1465679",
    "end": "1472200"
  },
  {
    "start": "1467000",
    "end": "1524000"
  },
  {
    "text": "takes to by launch an instance by capturing all of the launch parameters in a single",
    "start": "1472200",
    "end": "1478360"
  },
  {
    "text": "template uh it makes it easier to roll out changes to your standard launch configurations enforce policies it even",
    "start": "1478360",
    "end": "1484520"
  },
  {
    "text": "has versioning and aliasing so that's you know you can kind of rev how you like instances to be",
    "start": "1484520",
    "end": "1490760"
  },
  {
    "text": "launched uh behind the scenes and then have your autoscaling group automatically pick up the new launch",
    "start": "1490760",
    "end": "1497080"
  },
  {
    "text": "template and then launch the new instances for you I'm not going to spend a ton of time on this there's a number of other sessions about this it's a",
    "start": "1497080",
    "end": "1503520"
  },
  {
    "text": "really powerful Tool uh we think people will like it uh and you can use this with",
    "start": "1503520",
    "end": "1509240"
  },
  {
    "text": "uh cloud formation Auto scaling uh ec2 Fleet and AWS batch so these are other",
    "start": "1509240",
    "end": "1515240"
  },
  {
    "text": "services you can use to kind of automate your provisioning so launch templates are kind of a really powerful low-level",
    "start": "1515240",
    "end": "1523159"
  },
  {
    "text": "primitive and speaking of Primitives I mentioned Amazon ec2 Fleet so this was an API that we launched in May that",
    "start": "1523399",
    "end": "1530039"
  },
  {
    "start": "1524000",
    "end": "1676000"
  },
  {
    "text": "automates the process of combining the different purchase models and combining the different instance types in a single",
    "start": "1530039",
    "end": "1535320"
  },
  {
    "text": "launch call so you can reduce costs increase your efficiency you can mix instance types purchase models mix",
    "start": "1535320",
    "end": "1542320"
  },
  {
    "text": "availability zones this is a synchronous API if that's what you want and by synchronous if you've used run instances",
    "start": "1542320",
    "end": "1549279"
  },
  {
    "text": "you send in a request you get back your instance IDs and then of course that allows you from an orchestration",
    "start": "1549279",
    "end": "1554840"
  },
  {
    "text": "perspective to go do something with that instance ID ec2 fet works exactly the same way you send in a request for how",
    "start": "1554840",
    "end": "1561399"
  },
  {
    "text": "much on demand you want how much RIS how much spot you want whether you want us to kind of prioritize cost or uh",
    "start": "1561399",
    "end": "1568399"
  },
  {
    "text": "diversification and whether you want us to do it differently on the on demand side or differently on the spot side we",
    "start": "1568399",
    "end": "1574039"
  },
  {
    "text": "just do that we send you back the instance IDs you can move on with your life we've even released features uh",
    "start": "1574039",
    "end": "1580679"
  },
  {
    "text": "recently like uh I talked about mixing instance types maybe you have a cluster that could use a C5 or an M5 but it",
    "start": "1580679",
    "end": "1588399"
  },
  {
    "text": "would kind of perform strangely if they were both together well with ec2 Fleet you can specify that you want one or the",
    "start": "1588399",
    "end": "1594279"
  },
  {
    "text": "other but with a single instance option we we'll pick you know whichever one is kind of either the lowest cost or the",
    "start": "1594279",
    "end": "1600919"
  },
  {
    "text": "most available depending on what you've told us we also have a feature coming in the next couple weeks that we call",
    "start": "1600919",
    "end": "1605960"
  },
  {
    "text": "single a so what this allows you to do imagine you're a Hadoop workload or spark and you want to have all your",
    "start": "1605960",
    "end": "1611559"
  },
  {
    "text": "instances in a single a but you want us to pick this cheapest availability Zone before you actually had to kind of",
    "start": "1611559",
    "end": "1618600"
  },
  {
    "text": "go hunt and look at the spot prices and figure out which availability Zone was the cheapest and if it's the cheapest",
    "start": "1618600",
    "end": "1624399"
  },
  {
    "text": "right now it might not be the cheapest in an hour or the cheapest tomorrow prices are pretty smooth with spot these",
    "start": "1624399",
    "end": "1629960"
  },
  {
    "text": "days but they do vary kind of over the weeks now you can specify I want to use A's one two three and five but I want",
    "start": "1629960",
    "end": "1637880"
  },
  {
    "text": "all of my instances to be in one a when you launch it and we will factor in capacity price availability and kind of",
    "start": "1637880",
    "end": "1645640"
  },
  {
    "text": "launch your instances in the cheapest a or the best a for what you're looking for so these are",
    "start": "1645640",
    "end": "1651559"
  },
  {
    "text": "uh really powerful features and we built them as a low-level primitive as an API partially because that's how we do",
    "start": "1651559",
    "end": "1658600"
  },
  {
    "text": "things but secondly because we hear from a lot of people that they don't want to use a managed service they prefer to",
    "start": "1658600",
    "end": "1663760"
  },
  {
    "text": "kind of build their own provisioning framework this is what allows you to do that so if you're using run instances",
    "start": "1663760",
    "end": "1669200"
  },
  {
    "text": "today and using a lot of custom code you could pretty much replace that with ec2 Fleet right",
    "start": "1669200",
    "end": "1675640"
  },
  {
    "text": "now we've also embedded it with these other services so these other services are just calling this",
    "start": "1675919",
    "end": "1681440"
  },
  {
    "start": "1676000",
    "end": "1758000"
  },
  {
    "text": "API so autoscaling which is also what powers scaling for ECS eks batch uh it",
    "start": "1681440",
    "end": "1687960"
  },
  {
    "text": "also Powers scaling for opsworks and beanock so for those first ones this ec2",
    "start": "1687960",
    "end": "1693000"
  },
  {
    "text": "Fleet functionality is already available so if you're using autoscaling you can kind of leave this classroom later and",
    "start": "1693000",
    "end": "1700320"
  },
  {
    "text": "put this stuff into practice and off you go you don't have to switch off autoscaling to use ec2 Fleet it also",
    "start": "1700320",
    "end": "1706080"
  },
  {
    "text": "supports cloud formation there's other AWS services like gamelift uh thinkbox EMR all of these",
    "start": "1706080",
    "end": "1713919"
  },
  {
    "text": "either have ec2 Fleet or they will have ec2 Fleet in the near future underneath it so you don't actually have to learn",
    "start": "1713919",
    "end": "1719279"
  },
  {
    "text": "the new API I also mentioned third parties we love our partners uh we know that how many of you are using Jenkins",
    "start": "1719279",
    "end": "1725880"
  },
  {
    "text": "to do cicd Fair number of you so there is a spot plugin ec2 Fleet plugin for this",
    "start": "1725880",
    "end": "1732320"
  },
  {
    "text": "that I'll kind of go into in detail or if you like terraform over cloud formation uh kind of funny they actually",
    "start": "1732320",
    "end": "1738200"
  },
  {
    "text": "launched support for ec2 Fleet uh the day we launched support for auto scaling and cloud formation took a couple of",
    "start": "1738200",
    "end": "1743919"
  },
  {
    "text": "extra days so that shows you how tightly we continue to work with our partners or if you use Cubo which is a managed",
    "start": "1743919",
    "end": "1749960"
  },
  {
    "text": "service for Hadoop and Spark and other workloads we work very closely with them to kind of bring these capacities uh",
    "start": "1749960",
    "end": "1755960"
  },
  {
    "text": "capabilities to you so Auto scaling why is this so powerful why does it matter how many are",
    "start": "1755960",
    "end": "1762200"
  },
  {
    "text": "you most of you are using autoscaling I heard this earlier so uh you know at a basic level this is what you're going to",
    "start": "1762200",
    "end": "1768519"
  },
  {
    "text": "want to use for Fleet Management if you're using any number of ec2 instances more than one so the health checks",
    "start": "1768519",
    "end": "1774640"
  },
  {
    "text": "feature which detects unhealthy hosts and replaces them that there's there's really like no reason not to use this",
    "start": "1774640",
    "end": "1780559"
  },
  {
    "text": "and to build it yourself you can also use it to dynamically scale kind of Up and Down based on thresholds and metrics",
    "start": "1780559",
    "end": "1787240"
  },
  {
    "text": "that you set and then you can use it to lower your costs of course by descaling when you don't need",
    "start": "1787240",
    "end": "1792320"
  },
  {
    "text": "those instances so fundamentally inside of autoscaling you have an autoscaling",
    "start": "1792320",
    "end": "1797640"
  },
  {
    "start": "1795000",
    "end": "1810000"
  },
  {
    "text": "group it's just a logical group of instances you can set a minimum and a maximum set what your desired capacity",
    "start": "1797640",
    "end": "1803679"
  },
  {
    "text": "is it's pretty straightforward this is existed for about uh between three and five years kind of this concept what's",
    "start": "1803679",
    "end": "1810320"
  },
  {
    "start": "1810000",
    "end": "1872000"
  },
  {
    "text": "new is that we embedded the ec2 fleet functionality now you can save up to 90% by using autoscaling without actually",
    "start": "1810320",
    "end": "1817399"
  },
  {
    "text": "also having to combine spot Fleet or run instances to launch spot so you",
    "start": "1817399",
    "end": "1823000"
  },
  {
    "text": "basically specify whether you want us for your autoscaling group to use lowest cost as your Strat stry you can create a",
    "start": "1823000",
    "end": "1829640"
  },
  {
    "text": "prioritized list I mentioned single availability zones we even have a new feature called minimum instances we",
    "start": "1829640",
    "end": "1836159"
  },
  {
    "text": "noticed that a lot of customers would ask for like a thousand instances and if we didn't have them right now they would",
    "start": "1836159",
    "end": "1841760"
  },
  {
    "text": "start backing off right they'd ask for 900 800 700 until maybe we you know had the instances and then later they would",
    "start": "1841760",
    "end": "1848000"
  },
  {
    "text": "come and add them now you don't have to do that you can tell us look my application can't start if I have less",
    "start": "1848000",
    "end": "1854440"
  },
  {
    "text": "than 100 instances my desired amount is a th and if don't have 100 we'll just tell you no but if we do have a 100",
    "start": "1854440",
    "end": "1860880"
  },
  {
    "text": "we'll launch them and then we'll keep trying to find the rest of the instances as we have them so the idea here is to kind of reduce your orchestration",
    "start": "1860880",
    "end": "1866679"
  },
  {
    "text": "overhead that's the repeated theme uh so how does this actually work",
    "start": "1866679",
    "end": "1872120"
  },
  {
    "start": "1872000",
    "end": "1906000"
  },
  {
    "text": "uh all of these customers I was going to put like a you know celebrities read mean tweets kind of thing up here but",
    "start": "1872120",
    "end": "1879279"
  },
  {
    "text": "there were no Mean Tweets actually the only Mean Tweets were where people were saying like we just made them throw out",
    "start": "1879279",
    "end": "1884519"
  },
  {
    "text": "300 lines of code that they'd written to do this same feature uh and my my favorite tweet up here is",
    "start": "1884519",
    "end": "1890039"
  },
  {
    "text": "the one that says spot instances are the Holy Grail of AWS they are like a chaos monkey that pays",
    "start": "1890039",
    "end": "1896399"
  },
  {
    "text": "you so this is kind of a really powerful feature customers have been adopting it we only released it two weeks ago and",
    "start": "1896399",
    "end": "1902120"
  },
  {
    "text": "it's really taken off so how does it why have they taken off this is what it used",
    "start": "1902120",
    "end": "1907200"
  },
  {
    "start": "1906000",
    "end": "1955000"
  },
  {
    "text": "to look like remember those Auto scaling groups I talked about if you just wanted to use the same instance type and use",
    "start": "1907200",
    "end": "1913480"
  },
  {
    "text": "spot and On Demand or spot in our eyes you had to create two autoscaling groups if you wanted to use lots of different",
    "start": "1913480",
    "end": "1919440"
  },
  {
    "text": "spot instances to maximize your capacity you had to create a spot group autoscaling group for each of those then",
    "start": "1919440",
    "end": "1926000"
  },
  {
    "text": "you had to orchestrate between them depending on when the capacity went up and down or even on the on demand side if",
    "start": "1926000",
    "end": "1933320"
  },
  {
    "text": "you wanted to create a primary instance type where you know 99% of the time we have the capacity but some small amount",
    "start": "1933320",
    "end": "1939240"
  },
  {
    "text": "of time where you spike up like your epic games where they're spinning up you know 1.1 million instances when they",
    "start": "1939240",
    "end": "1944399"
  },
  {
    "text": "release a new update to fortnite you'd have to create different Auto scaling groups in different policies when we",
    "start": "1944399",
    "end": "1950720"
  },
  {
    "text": "didn't have the first instance type so all of this is now a thing in the past now you can create one autoscaling",
    "start": "1950720",
    "end": "1958519"
  },
  {
    "start": "1955000",
    "end": "2003000"
  },
  {
    "text": "group you can still create more than one each of your applications is going to have their own autoscaling group maybe",
    "start": "1958519",
    "end": "1964200"
  },
  {
    "text": "your Dev test environment your production environment those are going to be different autoscaling groups but for each of them you create one",
    "start": "1964200",
    "end": "1970159"
  },
  {
    "text": "autoscaling group one set of scaling policies you combine the instance types you tell us what percentage mix of",
    "start": "1970159",
    "end": "1977840"
  },
  {
    "text": "kind of on demand and RI what percentage mix of spot if you want to use different instance types for the on demand side",
    "start": "1977840",
    "end": "1984320"
  },
  {
    "text": "maybe you purchased RIS only for a certain couple instance types and then you want to use another kind of instance",
    "start": "1984320",
    "end": "1989559"
  },
  {
    "text": "type or a whole set of instance types for spot we support that so we just made capacity management and cost",
    "start": "1989559",
    "end": "1996279"
  },
  {
    "text": "optimization this easy so single autoscaling group I think it's pretty",
    "start": "1996279",
    "end": "2002360"
  },
  {
    "text": "slick another feature we just released last week try to get all my feature launches out ahead of Reinventing",
    "start": "2002360",
    "end": "2008559"
  },
  {
    "start": "2003000",
    "end": "2036000"
  },
  {
    "text": "uh is something we call predictive scaling so ec2 Auto scaling has manual scaling it's had this for a long time",
    "start": "2008559",
    "end": "2014679"
  },
  {
    "text": "you just go into the console right or make an API call and tell us to increase the number of instances you want we have",
    "start": "2014679",
    "end": "2020600"
  },
  {
    "text": "scheduled scaling you know where you can schedule things to turn on and off if you have predictable Peaks Dynamic",
    "start": "2020600",
    "end": "2025799"
  },
  {
    "text": "scaling where you set a threshold like number of jobs in a queue or CPU load or",
    "start": "2025799",
    "end": "2030919"
  },
  {
    "text": "some other metric that determines your application performance and now we have predictive scaling predictive scaling is",
    "start": "2030919",
    "end": "2038600"
  },
  {
    "start": "2036000",
    "end": "2087000"
  },
  {
    "text": "proactively responding to changes using machine learning we actually built this",
    "start": "2038600",
    "end": "2043679"
  },
  {
    "text": "uh it scales in advance of your traffic why do you want to do this well first off it's faster if you're scaling in",
    "start": "2043679",
    "end": "2050480"
  },
  {
    "text": "advance of when the traffic's actually going to come in that means you never have a period of time where your application is",
    "start": "2050480",
    "end": "2056878"
  },
  {
    "text": "underperforming also we prevent descaling so like maybe you have a transient dip in your traffic for five",
    "start": "2056879",
    "end": "2063000"
  },
  {
    "text": "minutes or 10 minutes if you're using a simple Dynamic scaling rule like CPU threshold autoscaling will just blindly",
    "start": "2063000",
    "end": "2069320"
  },
  {
    "text": "scale down and then if your usage goes way back up five minutes later it's",
    "start": "2069320",
    "end": "2074480"
  },
  {
    "text": "going to have to scale back up again and it's also simpler trying to figure out do you have multiple Peaks a day are the",
    "start": "2074480",
    "end": "2080560"
  },
  {
    "text": "Peaks different on Monday and Tuesday Wednesday Friday is it different every weekend that's kind of fairly hard for you to do Auto in a manual fashion so",
    "start": "2080560",
    "end": "2088480"
  },
  {
    "start": "2087000",
    "end": "2183000"
  },
  {
    "text": "how does this work we use machine learning algorithms leverage from almost 20 years of data with billions of",
    "start": "2088480",
    "end": "2095480"
  },
  {
    "text": "traffic patterns across amazon.com then that pre-trained model uses two weeks of your own data to forecast the",
    "start": "2095480",
    "end": "2103160"
  },
  {
    "text": "load metrics for the next two days every day it performs a regression analysis",
    "start": "2103160",
    "end": "2109440"
  },
  {
    "text": "between that load metric and the scaling metric so what does it think it's going to do what should it do it schedules",
    "start": "2109440",
    "end": "2114960"
  },
  {
    "text": "scaling actions for the next two days and then repeats this process every day so it gets smarter over time it's",
    "start": "2114960",
    "end": "2120920"
  },
  {
    "text": "already pretty smart out of the box so what's cool about it as I mentioned is it also prevents descaling so what you",
    "start": "2120920",
    "end": "2127079"
  },
  {
    "text": "see here in the bottom graphs if you manually scaled you could simply create uh as many instances as you need to hit",
    "start": "2127079",
    "end": "2133520"
  },
  {
    "text": "your Peak but then you're wasting money during all these valleys where you're not using the capacity if you use",
    "start": "2133520",
    "end": "2139200"
  },
  {
    "text": "Dynamic scaling you can see it kind of hugs your usage graph pretty closely but if you look closely there are a couple",
    "start": "2139200",
    "end": "2145000"
  },
  {
    "text": "of things where it scales down well after your Peak you know that's kind of money that you're wasting in a sense and",
    "start": "2145000",
    "end": "2152040"
  },
  {
    "text": "it also scales up after you need it and then there's that weird part where it dips that's that descaling that I",
    "start": "2152040",
    "end": "2157880"
  },
  {
    "text": "mentioned so Dynamic scaling scaled back down if you look at predictive scaling it hugs that curve much more tightly so",
    "start": "2157880",
    "end": "2164800"
  },
  {
    "text": "it's not running instances when you don't need it it prevents descaling and it's kind of a set it and forget it",
    "start": "2164800",
    "end": "2170319"
  },
  {
    "text": "thing this is really the beginning of the Journey For Us in the autoscaling team which is part of my org and I think",
    "start": "2170319",
    "end": "2176839"
  },
  {
    "text": "this is really powerful uh hopefully uh you will too of course we would love to hear your",
    "start": "2176839",
    "end": "2182359"
  },
  {
    "text": "feedback so I mentioned this earlier this is the basic technology launch templates ec2 Fleet auto scaling now I'm",
    "start": "2182359",
    "end": "2188640"
  },
  {
    "text": "going to go into three specific workload examples and show you how you put this into",
    "start": "2188640",
    "end": "2194240"
  },
  {
    "text": "practice so these are all the kinds of workloads you could do on AWS I mentioned I've only got time to cover",
    "start": "2194240",
    "end": "2199280"
  },
  {
    "text": "three hopefully you see a pattern if it isn't one of these three examples that fits one of the other examples that",
    "start": "2199280",
    "end": "2204359"
  },
  {
    "text": "you're running so we're going to start with big data and",
    "start": "2204359",
    "end": "2209040"
  },
  {
    "text": "analytics so maybe you're using EMR maybe you're running your own Hadoop or spark pipeline maybe you've got a batch",
    "start": "2209440",
    "end": "2215920"
  },
  {
    "text": "workload that kind has like a grid of worker nodes they're all kind of the same the idea here is that you include",
    "start": "2215920",
    "end": "2221720"
  },
  {
    "text": "spot alongside your kind of core uh nodes that don't go down that are running on on demand or RI and so you",
    "start": "2221720",
    "end": "2229280"
  },
  {
    "text": "know you can process massive amounts of data from the human genome to the fire hose of Twitter data to get semantic",
    "start": "2229280",
    "end": "2236400"
  },
  {
    "text": "analysis uh this is really common use case for spot as you saw from those customer",
    "start": "2236400",
    "end": "2242720"
  },
  {
    "text": "examples so what is the reference architecture here kind of how does this work so what you see here is we have a",
    "start": "2242720",
    "end": "2248520"
  },
  {
    "start": "2243000",
    "end": "2344000"
  },
  {
    "text": "master node and yours might not look exactly like this that's something that can never go down it's controlling all",
    "start": "2248520",
    "end": "2253839"
  },
  {
    "text": "the worker nodes it's controlling your data store so you're going to run that on on demand or RI typically then if",
    "start": "2253839",
    "end": "2260680"
  },
  {
    "text": "you're running Hadoop you might also be using hdfs you don't want those nodes to go down uh in Hadoop terminology those",
    "start": "2260680",
    "end": "2267040"
  },
  {
    "text": "are kind of uh core nodes you're going to run those on OD or RI depending on whether it's a shortlived cluster or a",
    "start": "2267040",
    "end": "2273079"
  },
  {
    "text": "long lived cluster but then all of your task nodes your task Fleet or spark terminology your processors or your",
    "start": "2273079",
    "end": "2280119"
  },
  {
    "text": "worker nodes if you're using batch all of those guys are running on spot because your master node can handle",
    "start": "2280119",
    "end": "2285560"
  },
  {
    "text": "starting them up spinning up more spinning them down if one of them fails it knows you know kind of where you",
    "start": "2285560",
    "end": "2291599"
  },
  {
    "text": "checkpointed and where to come back and so that is really powerful you might have as many as 10x the number of task",
    "start": "2291599",
    "end": "2298160"
  },
  {
    "text": "nodes that you do core nodes or Master nodes now I said you're probably running",
    "start": "2298160",
    "end": "2303359"
  },
  {
    "text": "your core nodes your master nodes on on demand or RI if you have a time in sensitive batch workload or if it's",
    "start": "2303359",
    "end": "2309480"
  },
  {
    "text": "really shortlived you know 2 hours 3 hours 4 hours you could run the entire thing on spot so you're gonna have to",
    "start": "2309480",
    "end": "2316560"
  },
  {
    "text": "decide for yourself kind of what level of orchestration overhead you want to put in what your workload looks like is",
    "start": "2316560",
    "end": "2322400"
  },
  {
    "text": "it long live shortlived but there are multiple ways to save money here one of our customers move it they're running",
    "start": "2322400",
    "end": "2328359"
  },
  {
    "text": "95% of their production Hadoop Fleet on spot instances 95% so like they're saving 70 to 90% on",
    "start": "2328359",
    "end": "2337119"
  },
  {
    "text": "9 95% of their compute bill which is I think 80% of their total bill right so that's that's a pretty powerful amount",
    "start": "2337119",
    "end": "2342960"
  },
  {
    "text": "of savings another company we like to mention Zillow so they are uh blending",
    "start": "2342960",
    "end": "2349599"
  },
  {
    "start": "2344000",
    "end": "2416000"
  },
  {
    "text": "as I mentioned kind of odri and spot to run these hundreds of batch ETL jobs that process something like 10 terabytes",
    "start": "2349599",
    "end": "2355800"
  },
  {
    "text": "of data per day it's unpredictable right kind of comes and goes it could be 10 terabytes two terabytes one terabyte",
    "start": "2355800",
    "end": "2361640"
  },
  {
    "text": "they could run a 100 jobs a thousand jobs so they use spark uh Hadoop hive uh",
    "start": "2361640",
    "end": "2367720"
  },
  {
    "text": "and then they have S3 as a data lake so that's where kind of all the data is stored so what they found is that their",
    "start": "2367720",
    "end": "2372839"
  },
  {
    "text": "Blended rate and you see these numbers up here so I'm going to translate it to percentages their Blended rate their mix",
    "start": "2372839",
    "end": "2378079"
  },
  {
    "text": "of odri and spot it was 30% cheaper than if they had just used all threeyear",
    "start": "2378079",
    "end": "2384119"
  },
  {
    "text": "RIS it was also 70% cheaper than if they had just used all on demand so you know Zillow kind of put",
    "start": "2384119",
    "end": "2392119"
  },
  {
    "text": "these things into practice on these uh Hadoop and these spark workloads and they're saving 70% in comparison to",
    "start": "2392119",
    "end": "2398839"
  },
  {
    "text": "running the whole thing on on demand so the takeaway here is your task nodes your worker nodes your processors",
    "start": "2398839",
    "end": "2405760"
  },
  {
    "text": "convert them to using ec2 Fleet using spot and then think about other ways you",
    "start": "2405760",
    "end": "2410839"
  },
  {
    "text": "can save money whether it's through RIS or maybe even running the short live jobs on",
    "start": "2410839",
    "end": "2415880"
  },
  {
    "text": "spot uh there are a couple of sessions you're in luck here uh on Thursday I can highly recommend these they're LED in",
    "start": "2415880",
    "end": "2421960"
  },
  {
    "start": "2416000",
    "end": "2431000"
  },
  {
    "text": "some cases by PMS or by uh Solutions Architects so this is a really common",
    "start": "2421960",
    "end": "2427040"
  },
  {
    "text": "use use case and we have these sessions for you available tomorrow second workload I want to talk",
    "start": "2427040",
    "end": "2432760"
  },
  {
    "start": "2431000",
    "end": "2448000"
  },
  {
    "text": "about is containers how many of you are running containers in some fashion or another what what we've heard is about",
    "start": "2432760",
    "end": "2439440"
  },
  {
    "text": "64% of customers in one fashion or another are running containers and other people are starting to look at them this is really the perfect workload for cost",
    "start": "2439440",
    "end": "2446960"
  },
  {
    "text": "optimization especially thinking about spot so you can use ECS you can use eks",
    "start": "2446960",
    "end": "2453280"
  },
  {
    "text": "Auto scaling Powers the scaling for both of those you can use ec2 Fleet by yourself if you prefer to if you're",
    "start": "2453280",
    "end": "2459440"
  },
  {
    "text": "running kubernetes native there's a framework called cops for running that on AWS so you can look at the tens of",
    "start": "2459440",
    "end": "2466960"
  },
  {
    "text": "thousands of different instances and already you're really not thinking about instances you're thinking about how many containers do I need to launch how many",
    "start": "2466960",
    "end": "2473079"
  },
  {
    "text": "nodes how many tasks can I fit on those nodes you can use a lot of different instance types and then just have uh",
    "start": "2473079",
    "end": "2479400"
  },
  {
    "text": "kind of you know pack your uh nodes pack your with different tasks and then just look at your task cue and that's how you",
    "start": "2479400",
    "end": "2485000"
  },
  {
    "text": "scale up and down and most of those are stateless you're treating your instances your containers as cattle not pets so",
    "start": "2485000",
    "end": "2492440"
  },
  {
    "text": "this is really the kind of perfect workload for cost optimization so how does this look",
    "start": "2492440",
    "end": "2497760"
  },
  {
    "start": "2496000",
    "end": "2575000"
  },
  {
    "text": "little bit different than the last reference architecture and you can see here we have a cloud formation template",
    "start": "2497760",
    "end": "2502839"
  },
  {
    "text": "here what you do is you have an elb or maybe an ALB application load balancer in front of all of your Fleet so that's",
    "start": "2502839",
    "end": "2509800"
  },
  {
    "text": "Distributing traffic it's routing it and then you have multiple availability zones as opposed to that batch or the",
    "start": "2509800",
    "end": "2516359"
  },
  {
    "text": "Hadoop example where you're in a single availability Zone and then here you still have a single autoscaling group",
    "start": "2516359",
    "end": "2522680"
  },
  {
    "text": "that covers multiple instance types it covers your mix of spot maybe your base of RI or on demand and then you store",
    "start": "2522680",
    "end": "2529920"
  },
  {
    "text": "your session State data in some kind of database right you could use S3 you know for data Lake you could use Dynamo I",
    "start": "2529920",
    "end": "2536839"
  },
  {
    "text": "don't care what database you use like we kind of support them all so this is really straightforward and again before you had to make multiple autoscaling",
    "start": "2536839",
    "end": "2543319"
  },
  {
    "text": "groups now you can make only one uh in terms of savings you can save a",
    "start": "2543319",
    "end": "2549920"
  },
  {
    "text": "lot of money here too so this is a customer Skyscanner they're a travel Fair aggregator they mooved nearly their",
    "start": "2549920",
    "end": "2556040"
  },
  {
    "text": "entire kubernetes cluster over to spot and they're saving 74% over on Demand",
    "start": "2556040",
    "end": "2562240"
  },
  {
    "text": "with almost no application re architecture so if you're running kubernetes if you're using ECS if you're",
    "start": "2562240",
    "end": "2567559"
  },
  {
    "text": "running Docker Rancher MOS you're kind of throwing money away if you're not exploring how you can use spot much more",
    "start": "2567559",
    "end": "2574119"
  },
  {
    "text": "heavily we have a lot of container sessions here uh there's one actually tonight 7 o'clock but can't skip out so",
    "start": "2574119",
    "end": "2581319"
  },
  {
    "start": "2575000",
    "end": "2595000"
  },
  {
    "text": "catch that on YouTube later uh but we have a couple more tomorrow so if you're looking at kubernetes and you want to look into eks we have one tomorrow and",
    "start": "2581319",
    "end": "2588559"
  },
  {
    "text": "then uh running workloads at scale so this is really powerful emerging uh",
    "start": "2588559",
    "end": "2595000"
  },
  {
    "start": "2595000",
    "end": "2611000"
  },
  {
    "text": "pattern the last workload I'm going to go into as an example is uh cicd so how",
    "start": "2595000",
    "end": "2600520"
  },
  {
    "text": "many of you are running continuous integration continuous deployment most of you uh another great",
    "start": "2600520",
    "end": "2606559"
  },
  {
    "text": "use case here here uh Jenkins bamboo a lot of different ways to do this so all you need to do with Jenkins",
    "start": "2606559",
    "end": "2614119"
  },
  {
    "text": "is use uh the ec2 fleet the spot plugin from AWS it's free it's open source uh",
    "start": "2614119",
    "end": "2621119"
  },
  {
    "text": "there's a couple of pull requests you might want to fix those bugs if you get a chance uh it's really simple so the",
    "start": "2621119",
    "end": "2628480"
  },
  {
    "text": "worker nodes leverage spot that's Savings of up to 90% And then uh let me",
    "start": "2628480",
    "end": "2634760"
  },
  {
    "text": "show you the reference example here so basically you have an application load balancer pretty similar to the example",
    "start": "2634760",
    "end": "2640119"
  },
  {
    "start": "2635000",
    "end": "2692000"
  },
  {
    "text": "that I just used with containers or web apps you're funneling traffic to a Jenkins Master right which is running on",
    "start": "2640119",
    "end": "2646319"
  },
  {
    "text": "on demand or RI you don't want that to kind of any risk of going down and then it launches spot instances as agents for",
    "start": "2646319",
    "end": "2652839"
  },
  {
    "text": "the jenin CI server automatically scaling it with load uh by default we'll",
    "start": "2652839",
    "end": "2658920"
  },
  {
    "text": "try to scale your Fleet up using the number of tasks in the build queue but you can configure that whatever you want",
    "start": "2658920",
    "end": "2664960"
  },
  {
    "text": "maybe you don't ever want to have it scale up because you want to maintain you know super low cost you don't care how long your cicd workloads take but",
    "start": "2664960",
    "end": "2671440"
  },
  {
    "text": "this is really simple there's almost no code Matt will talk about this in a minute but you know in some cases it's",
    "start": "2671440",
    "end": "2676480"
  },
  {
    "text": "as little as you know one line eight character code change or four lines of code and you could be saving thousands",
    "start": "2676480",
    "end": "2682280"
  },
  {
    "text": "of dollars a day so with that in mind I think one of the most powerful things here are all of the customers that are",
    "start": "2682280",
    "end": "2688720"
  },
  {
    "text": "using AWS and uh I want to introduce Matt lenti who's a principal engineer at Lyft",
    "start": "2688720",
    "end": "2694640"
  },
  {
    "start": "2692000",
    "end": "2728000"
  },
  {
    "text": "who's here to talk to you about how he's cost optimizing dc2 and how he's making use of spot Matt",
    "start": "2694640",
    "end": "2701599"
  },
  {
    "text": "welcome thanks yeah is the mic on yeah uh so I'm Matt I've an engineer at Lyft",
    "start": "2703400",
    "end": "2711200"
  },
  {
    "text": "I still write code on a daily basis um and I've been there for almost five",
    "start": "2711200",
    "end": "2716359"
  },
  {
    "text": "years I remember when like the entire engineering team for Lift could be like the first two rows here those those days",
    "start": "2716359",
    "end": "2721400"
  },
  {
    "text": "are unfortunately or fortunately long gone depending on your perspective um we've kind of been with",
    "start": "2721400",
    "end": "2729079"
  },
  {
    "start": "2728000",
    "end": "2806000"
  },
  {
    "text": "spot since the beginning it's important that like we as a engineering shop run",
    "start": "2729079",
    "end": "2735359"
  },
  {
    "text": "sort of lean on all of our operational costs because we want to drive as much money into the marketplace as possible",
    "start": "2735359",
    "end": "2741160"
  },
  {
    "text": "which is the business value that's like how much of a discount can we offer you on a given ride like you know how much",
    "start": "2741160",
    "end": "2747119"
  },
  {
    "text": "of an incentive can we give a driver to drive for a given hour those are the numbers the business cares about the",
    "start": "2747119",
    "end": "2753119"
  },
  {
    "text": "business doesn't want to spend money on AWS generally speaking uh so four years ago we started to use",
    "start": "2753119",
    "end": "2760920"
  },
  {
    "text": "spot and you can imagine that like four years ago everything was constantly on fire so this was actually a choice that",
    "start": "2760920",
    "end": "2766880"
  },
  {
    "text": "someone made that was time they spent on this versus time they spent on something else that's how sort of impactful it was",
    "start": "2766880",
    "end": "2774880"
  },
  {
    "text": "and coming up to the current day now we are in a place where 10% of overall AWS",
    "start": "2774880",
    "end": "2780559"
  },
  {
    "text": "spend is spot uh that's actually much higher if you look at just ec2 we use a",
    "start": "2780559",
    "end": "2787000"
  },
  {
    "text": "lot of AWS Upstream Services which uh have all had announced improvements today",
    "start": "2787000",
    "end": "2794440"
  },
  {
    "text": "um basically we're at the millions of hours a month um we try and use spot",
    "start": "2794440",
    "end": "2801520"
  },
  {
    "text": "across many many different workloads I'm going to talk about some examples here here today uh so how how you get started like",
    "start": "2801520",
    "end": "2809599"
  },
  {
    "start": "2806000",
    "end": "2884000"
  },
  {
    "text": "most people they don't want machines to die and spot is like oh the machine can",
    "start": "2809599",
    "end": "2815440"
  },
  {
    "text": "die so I don't want to use it um the easiest way to get going is use cicd convert cicd to spot you get a",
    "start": "2815440",
    "end": "2822800"
  },
  {
    "text": "little familiar familiarity with it cicd if it dies like you rerun the Bild job it's not a big deal the developer waits",
    "start": "2822800",
    "end": "2828720"
  },
  {
    "text": "like another 10 minutes for the commit status on GitHub um but it gives you some place to start with the integration",
    "start": "2828720",
    "end": "2836720"
  },
  {
    "text": "and then you can start like looking at your other workflows that have similar sort of characteristics anything that",
    "start": "2836720",
    "end": "2842240"
  },
  {
    "text": "has fail and retry is a candidate for spot so",
    "start": "2842240",
    "end": "2847640"
  },
  {
    "text": "environments um we do a lot of marketplace simulations which is like should we match passenger x with",
    "start": "2847640",
    "end": "2853680"
  },
  {
    "text": "passenger Y in this way or in this way or in this way and and that requires a lot of compute power uh that mostly all",
    "start": "2853680",
    "end": "2859920"
  },
  {
    "text": "runs in spot uh all of our sort of Open Source hosted um Dev tools be them",
    "start": "2859920",
    "end": "2866920"
  },
  {
    "text": "Jenkins or Presto or spark or Flink or flight all of it is spot as",
    "start": "2866920",
    "end": "2872440"
  },
  {
    "text": "well basically all these applications have one thing in common which is that if if there's a failure at the",
    "start": "2872440",
    "end": "2877839"
  },
  {
    "text": "application Level we can get another machine we don't really care we can",
    "start": "2877839",
    "end": "2883240"
  },
  {
    "start": "2884000",
    "end": "2940000"
  },
  {
    "text": "retry so what does this look like we have this class of applications which is",
    "start": "2884000",
    "end": "2889839"
  },
  {
    "text": "sort of fully spot um they're restartable everything that's",
    "start": "2889839",
    "end": "2895640"
  },
  {
    "text": "not prod they can do things offline they can do batch um and then we have mixpot",
    "start": "2895640",
    "end": "2901640"
  },
  {
    "text": "use cases uh mixpot is uh for workloads which are scalable but we can we can",
    "start": "2901640",
    "end": "2908680"
  },
  {
    "text": "take some amount of uh failure in the machine pool um so if you can imagine at",
    "start": "2908680",
    "end": "2916000"
  },
  {
    "text": "lift we have many many more people using lift at 8:00 p.m. 900 p.m. 10 p.m. then",
    "start": "2916000",
    "end": "2924160"
  },
  {
    "text": "we do it 4 in the morning except maybe on Saturday so because of that a portion of our",
    "start": "2924160",
    "end": "2931760"
  },
  {
    "text": "Fleet is actually like scaling up and scaling down at all times and a good portion of that Fleet is spot scale up",
    "start": "2931760",
    "end": "2938200"
  },
  {
    "text": "scale down so a little bit on terms of like",
    "start": "2938200",
    "end": "2945280"
  },
  {
    "start": "2940000",
    "end": "3076000"
  },
  {
    "text": "best practices how we got here what what to do how to structure your org in a way that you can use spot in a in a in a",
    "start": "2945280",
    "end": "2952200"
  },
  {
    "text": "good sense um we actually spend enough on AWS that we have people that are just",
    "start": "2952200",
    "end": "2957440"
  },
  {
    "text": "a capacity team it's like three guys um and they have they advise teams about",
    "start": "2957440",
    "end": "2964160"
  },
  {
    "text": "what does our I our eye saturation look like where are we spending money what instances should you use for different",
    "start": "2964160",
    "end": "2970440"
  },
  {
    "text": "applications But ultimately the decision on like spot versus non-spot for a specific app goes down to that",
    "start": "2970440",
    "end": "2976480"
  },
  {
    "text": "engineering team and we just empower the engineering team to make the right decision they're aware of how much their",
    "start": "2976480",
    "end": "2981520"
  },
  {
    "text": "stuff costs through cost tagging which Joshua mentioned and they can use this to to essentially reduce the cost of",
    "start": "2981520",
    "end": "2987480"
  },
  {
    "text": "their services um we make it really trivial uh every lot of the stuff that we have is provisioned through either",
    "start": "2987480",
    "end": "2993359"
  },
  {
    "text": "salt stack or terraform and spot enablement in either of those systems is essentially nine characters in an",
    "start": "2993359",
    "end": "2999640"
  },
  {
    "text": "autoscaling group you just Define the spot price and you're pretty much done um and we we use autoscaling groups",
    "start": "2999640",
    "end": "3006599"
  },
  {
    "text": "pretty much everywhere uh that's just best practice you don't want single servers floating around single servers",
    "start": "3006599",
    "end": "3012280"
  },
  {
    "text": "are essentially like pets like if you have a single server it's an ec2 somewhere and if it dies no one",
    "start": "3012280",
    "end": "3017920"
  },
  {
    "text": "understands what system it was part of and it it's it's generally a bad practice um the last thing I'll mention",
    "start": "3017920",
    "end": "3024880"
  },
  {
    "text": "is that spot does come with some additional operational complexity for",
    "start": "3024880",
    "end": "3031799"
  },
  {
    "text": "your Eng teams um and as Joshua said you should evaluate that on a case-by Case",
    "start": "3031799",
    "end": "3037160"
  },
  {
    "text": "basis as to whether you want to you want to take take that small hit I think a lot of the times it's just very well",
    "start": "3037160",
    "end": "3043799"
  },
  {
    "text": "worth it um and it you're just really leaving money on the on the table by not",
    "start": "3043799",
    "end": "3049079"
  },
  {
    "text": "using it um the only times where it doesn't really make sense is very persistent durable applications that",
    "start": "3049079",
    "end": "3054440"
  },
  {
    "text": "have very tight latency guarantees like databases and that's all I have um I hope everyone",
    "start": "3054440",
    "end": "3061400"
  },
  {
    "text": "tries an AV lift ride it's in Vegas it's online you can get between hotels with",
    "start": "3061400",
    "end": "3066640"
  },
  {
    "text": "it um part of that system actually does run on on spot thank you you're",
    "start": "3066640",
    "end": "3074400"
  },
  {
    "start": "3076000",
    "end": "3106000"
  },
  {
    "text": "welcome always interesting to hear how our customers are innovating and saving money using spot and I kind of love",
    "start": "3076839",
    "end": "3082319"
  },
  {
    "text": "hearing uh Matt talk about how the engineering practices have been driven all the way down into the engineering",
    "start": "3082319",
    "end": "3088480"
  },
  {
    "text": "team so if you want to dive any deeper into cicd uh obviously one of these was",
    "start": "3088480",
    "end": "3093559"
  },
  {
    "text": "earlier the other one is tomorrow all these most of these are going to be on YouTube later but these are the kind of",
    "start": "3093559",
    "end": "3098720"
  },
  {
    "text": "workloads that are going to be really friendly for cost savings so I want to go into one other workload in the time",
    "start": "3098720",
    "end": "3104799"
  },
  {
    "text": "that I have left that might sound a little unusual is anybody here watching movies it's like the worst crowd come on",
    "start": "3104799",
    "end": "3111880"
  },
  {
    "text": "guys you watch movies yay movies right woo and uh any kind of movies every movie now nothing is real everything is",
    "start": "3111880",
    "end": "3119000"
  },
  {
    "text": "green screen and visual effects so that has exploded the amount of compute that people are using anybody buy furniture",
    "start": "3119000",
    "end": "3124720"
  },
  {
    "text": "from Ikea that whole catalog it's fake they just render it on a computer with like the seven different versions of the",
    "start": "3124720",
    "end": "3130440"
  },
  {
    "text": "couch that'll fall apart the minute after you get it home and they use this technology from a company that we",
    "start": "3130440",
    "end": "3135960"
  },
  {
    "text": "acquired called AWS thinkbox now and a technology is a render CU manager it's like a specialty purpose batch",
    "start": "3135960",
    "end": "3141839"
  },
  {
    "text": "application that kind of spins up all of these instances renders the effects right if you're watching a movie there",
    "start": "3141839",
    "end": "3147559"
  },
  {
    "text": "might be smoke and hair and fire or if it's an Ikea catalog it's the different colors that are being applied to the",
    "start": "3147559",
    "end": "3152640"
  },
  {
    "text": "same couch and putting it in a fake living room and so I think what this uh does is a company like fuse effects who",
    "start": "3152640",
    "end": "3159640"
  },
  {
    "text": "spoke at reinvent they're based out of Los Angeles they're using a deadline to",
    "start": "3159640",
    "end": "3165160"
  },
  {
    "text": "cost- effectively parallelize their work so they can finish jobs that would normally take something like 10 hours in",
    "start": "3165160",
    "end": "3170559"
  },
  {
    "text": "their on- premise infrastructure to do in one hour on spot so when I say job",
    "start": "3170559",
    "end": "3177599"
  },
  {
    "text": "that makes it sound really boring so I'm going to get to what I mean by",
    "start": "3177599",
    "end": "3183079"
  },
  {
    "start": "3182000",
    "end": "3241000"
  },
  {
    "text": "jobs the exciting part of the [Music] presentation all of this you see here is",
    "start": "3184960",
    "end": "3190480"
  },
  {
    "text": "being rendered on [Music]",
    "start": "3190480",
    "end": "3203440"
  },
  {
    "text": "AWS way so you see this process going on here",
    "start": "3203440",
    "end": "3208599"
  },
  {
    "text": "right there's all these different layers and visual [Music]",
    "start": "3208599",
    "end": "3214359"
  },
  {
    "text": "effects the trucks were not actually on that",
    "start": "3214359",
    "end": "3218720"
  },
  {
    "text": "[Music]",
    "start": "3219850",
    "end": "3233960"
  },
  {
    "text": "Highway way [Music]",
    "start": "3233960",
    "end": "3240170"
  },
  {
    "text": "so this is the kind of thing that's possible on AWS",
    "start": "3240240",
    "end": "3246680"
  },
  {
    "start": "3241000",
    "end": "3285000"
  },
  {
    "text": "uh sorry uh on AWS using spot so from now on since all of you were pretty excited I'm just going to talk over",
    "start": "3246680",
    "end": "3252640"
  },
  {
    "text": "visual effects for every speech in the future uh and if you didn't catch it there was a little Easter egg related to",
    "start": "3252640",
    "end": "3258720"
  },
  {
    "text": "me yours truly in that video so if you were asleep you can watch this later Again on YouTube if you did catch it",
    "start": "3258720",
    "end": "3265119"
  },
  {
    "text": "congratulations uh more seriously if you want to learn about how you can do rendering uh doing physical prototyping",
    "start": "3265119",
    "end": "3271599"
  },
  {
    "text": "you can do that uh virtually now you can attend these uh sessions or you can uh catch them on YouTube or just ask to",
    "start": "3271599",
    "end": "3278440"
  },
  {
    "text": "meet my thinkbox team so now I want to tie that all together right what are you",
    "start": "3278440",
    "end": "3283720"
  },
  {
    "text": "g to do How Are You Gonna Save money so the first thing I keep mentioning this is you're going to look for the obvious",
    "start": "3283720",
    "end": "3288799"
  },
  {
    "start": "3285000",
    "end": "3343000"
  },
  {
    "text": "workloads that are suitable for spot containers they're being used pretty heavily and they're kind of growing very",
    "start": "3288799",
    "end": "3294359"
  },
  {
    "text": "rapidly these are super suitable for spot cicd workloads you can experiment with",
    "start": "3294359",
    "end": "3299559"
  },
  {
    "text": "spot maybe mix in a little bit of on demand for your Dev test workloads uh Matt talked about this even",
    "start": "3299559",
    "end": "3306000"
  },
  {
    "text": "if you have a on premise workload that has not traditionally been fault tolerant it might be Roi positive for",
    "start": "3306000",
    "end": "3312200"
  },
  {
    "text": "you to add checkpointing like a computational fluid Dynamic simulation if you could save 80% on your compute",
    "start": "3312200",
    "end": "3318319"
  },
  {
    "text": "compute or you could get the job done 10 times faster would it be worth a little bit of engineering effort to kind of",
    "start": "3318319",
    "end": "3324359"
  },
  {
    "text": "checkpoint the job periodically it probably would be if you don't have spot in your big data workloads like I",
    "start": "3324359",
    "end": "3330599"
  },
  {
    "text": "mentioned how obvious this is maybe attend one of the reinvent workshops that I'm kind of coming on here so these",
    "start": "3330599",
    "end": "3336480"
  },
  {
    "text": "are the really obvious ways you can save money by layering spot on top of your on demand and your",
    "start": "3336480",
    "end": "3342520"
  },
  {
    "text": "Ri so what are you going to do you're gonna leave this session you're probably going to go get dinner and drinks but",
    "start": "3343240",
    "end": "3349640"
  },
  {
    "text": "maybe after that maybe after you go to sleep and you wake up the next day you're going to optimize across all three purchasing models by using Fleet",
    "start": "3349640",
    "end": "3357039"
  },
  {
    "text": "either by itself or inside of one of those other services that I mentioned you're going to right size meaning pick",
    "start": "3357039",
    "end": "3363319"
  },
  {
    "text": "the smallest instance that actually works for your workload and you're going to Scale based on demand using something",
    "start": "3363319",
    "end": "3368599"
  },
  {
    "text": "like autoscaling using both predictive scaling and dynamic scaling they work together don't forget to scale down and",
    "start": "3368599",
    "end": "3375359"
  },
  {
    "text": "turn things off when people are not using them that's an incredibly powerful way to save money if you're only using",
    "start": "3375359",
    "end": "3380480"
  },
  {
    "text": "something during the workday you're going to use launch templates this is going to streamline simplify your launch",
    "start": "3380480",
    "end": "3385839"
  },
  {
    "text": "process you're going to look for opportunities to use hibernate where you can kind of get your instances in that known good",
    "start": "3385839",
    "end": "3392200"
  },
  {
    "text": "State pre-warm them have them launch up that much faster and then as you migrate to AWS and you develop new applications",
    "start": "3392200",
    "end": "3399319"
  },
  {
    "text": "you are going to architect your workloads with both cost and performance in mind so one of the biggest tricks",
    "start": "3399319",
    "end": "3405640"
  },
  {
    "text": "right to not getting yourself into a situation where you need to reactively in a crisis control your costs is by",
    "start": "3405640",
    "end": "3412319"
  },
  {
    "text": "figuring out a way that you can incorporate all of these practices into your applications all the",
    "start": "3412319",
    "end": "3418440"
  },
  {
    "start": "3418000",
    "end": "3483000"
  },
  {
    "text": "time so you can get started using these cloud formation templates these kind of make it really easy to kind of spin up",
    "start": "3418440",
    "end": "3424039"
  },
  {
    "text": "an environment that resembles the best practices that we've used here you don't have to use cloud formation also if any",
    "start": "3424039",
    "end": "3430280"
  },
  {
    "text": "of you have an account manager if you're using AWS ask them to schedule these are three magic words spot immersion day all",
    "start": "3430280",
    "end": "3437599"
  },
  {
    "text": "three words together in that order don't just say immersion day because then that's a bunch of other stuff this is",
    "start": "3437599",
    "end": "3442640"
  },
  {
    "text": "all that matters spot immersion day this is where we bring our Solutions Architects that are Specialists into",
    "start": "3442640",
    "end": "3449160"
  },
  {
    "text": "your environment you can bring a team of developers together they can do a Hands-On Workshop you don't have to come",
    "start": "3449160",
    "end": "3454359"
  },
  {
    "text": "to Las Vegas to get it and they can learn how to do cost optimization for whatever workloads matter to you doesn't",
    "start": "3454359",
    "end": "3460400"
  },
  {
    "text": "have to be cicd could be rendering could be anything else this has been extremely powerful and a bunch of those customers that are now testimonials their",
    "start": "3460400",
    "end": "3466520"
  },
  {
    "text": "references this is how they got started Zillow Expedia and so on uh as well most",
    "start": "3466520",
    "end": "3472599"
  },
  {
    "text": "of you I think who came in got the $50 spot credits little card that's actually a pretty powerful way to get started on",
    "start": "3472599",
    "end": "3478760"
  },
  {
    "text": "spot this is already cheap enough and now I've made it free for the first $50 so with that in mind in the last",
    "start": "3478760",
    "end": "3484520"
  },
  {
    "start": "3483000",
    "end": "3546000"
  },
  {
    "text": "minute just wanted to say thank you very much for coming I realized there's a lot of information to absorb at a place like",
    "start": "3484520",
    "end": "3490400"
  },
  {
    "text": "reinvent you have to take time out of your busy schedules all of you have jobs come here listen to us hopefully you've",
    "start": "3490400",
    "end": "3497039"
  },
  {
    "text": "heard a lot of new things we've released a lot of things in the last year that have changed the way spot Works changed",
    "start": "3497039",
    "end": "3502280"
  },
  {
    "text": "the way ec2 works changed the way Auto scaling works I've tried to cover most of them here today uh and I've learned a",
    "start": "3502280",
    "end": "3508119"
  },
  {
    "text": "lot from you kind of over the years that have fed into these features we're fond of saying that 90% of our features come",
    "start": "3508119",
    "end": "3515200"
  },
  {
    "text": "from customer requests with the other 10% us looking around the corner to deliver something to you that you didn't",
    "start": "3515200",
    "end": "3521000"
  },
  {
    "text": "even know you needed hopefully that resembles the experience that you've had with AWS uh and with that in mind and",
    "start": "3521000",
    "end": "3527680"
  },
  {
    "text": "speaking of feedback uh I want to say good night and please complete your session surveys in the application that",
    "start": "3527680",
    "end": "3534480"
  },
  {
    "text": "feedback definitely guides not just me but all of AWS reinvent planning for the next year in terms of what sessions you",
    "start": "3534480",
    "end": "3541200"
  },
  {
    "text": "want to see so thank you very much [Applause]",
    "start": "3541200",
    "end": "3547929"
  }
]