[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "good afternoon my name is John Todd and I lead the system architecture team at",
    "start": "1490",
    "end": "6930"
  },
  {
    "text": "octa my team works across the product to improve scalability and security in this",
    "start": "6930",
    "end": "13590"
  },
  {
    "text": "session I'm grateful to have the opportunity to present to you guys how we're using KMS at ACTA in a multi",
    "start": "13590",
    "end": "20220"
  },
  {
    "text": "region environment in addition to talking about Amazon's key management",
    "start": "20220",
    "end": "26189"
  },
  {
    "text": "service we're also going to touch a bit on Identity and Access Management I am",
    "start": "26189",
    "end": "31470"
  },
  {
    "text": "cloud trail and how we're doing auditing the Java SDK mostly for kms and how we",
    "start": "31470",
    "end": "39930"
  },
  {
    "text": "look at the security model running our applications within ec2 we'll do a brief",
    "start": "39930",
    "end": "47579"
  },
  {
    "text": "background on octa and a couple short intros on some encryption concepts that",
    "start": "47579",
    "end": "54210"
  },
  {
    "text": "we'll be using later and then the meat of the conversation is going to be about how we're thinking about the security",
    "start": "54210",
    "end": "61500"
  },
  {
    "text": "model that kms provides how we became comfortable with that at octa and then",
    "start": "61500",
    "end": "67409"
  },
  {
    "text": "the infrastructure and architecture we built to be fault tolerant across",
    "start": "67409",
    "end": "73350"
  },
  {
    "text": "multiple regions let's get one thing out of the way real quick with show of hands",
    "start": "73350",
    "end": "81450"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "let's see if anyone knows what an octa actually is raise your hand if you think octa is an eight-legged creature okay",
    "start": "81450",
    "end": "89549"
  },
  {
    "text": "there's no one who thinks that how about raise your hand if you think octa is a unit of measure okay there's",
    "start": "89549",
    "end": "97290"
  },
  {
    "text": "like 10 cool how about an abbreviation one two three okay",
    "start": "97290",
    "end": "105149"
  },
  {
    "text": "and what about a made-up name for a company all right that's like almost everybody okay well actually octa is a",
    "start": "105149",
    "end": "112409"
  },
  {
    "text": "word it is a unit of measure and it's a unit measure for cloud cover it's used",
    "start": "112409",
    "end": "117570"
  },
  {
    "text": "by aviators and sailors to basically on a scale from zero to eight describe how",
    "start": "117570",
    "end": "123780"
  },
  {
    "text": "much visibility there is",
    "start": "123780",
    "end": "126798"
  },
  {
    "text": "that's not working okay there we go what is octa ACTA is the foundation for",
    "start": "129500",
    "end": "136850"
  },
  {
    "text": "secure connections between people and technology so if you see from our screenshots from a user's perspective",
    "start": "136850",
    "end": "143500"
  },
  {
    "text": "what we're trying to make really simple and easy is for people to get access to the applications they need on any",
    "start": "143500",
    "end": "150530"
  },
  {
    "text": "platform any device as simply and quickly as possible if you think about",
    "start": "150530",
    "end": "163670"
  },
  {
    "start": "162000",
    "end": "162000"
  },
  {
    "text": "the octave product you can put it into two different categories for IT space",
    "start": "163670",
    "end": "170890"
  },
  {
    "text": "octopods a centralized management of users apps and devices so that means we",
    "start": "170890",
    "end": "177200"
  },
  {
    "text": "do things like single sign-on we do provisioning of accounts to third-party systems we offer multi-factor",
    "start": "177200",
    "end": "184610"
  },
  {
    "text": "authentication and we offer device management for developers we offer the",
    "start": "184610",
    "end": "194330"
  },
  {
    "text": "ability for you to build enterprise apps without having to deal with the details of building your own authentication we",
    "start": "194330",
    "end": "204500"
  },
  {
    "text": "have customers like Advent and Adobe who use our product to do authentication for",
    "start": "204500",
    "end": "211250"
  },
  {
    "text": "all of their customers so if you think about the scale of octa where we first",
    "start": "211250",
    "end": "216800"
  },
  {
    "text": "started to focus on identity for employees with a developer model we're",
    "start": "216800",
    "end": "222620"
  },
  {
    "text": "also thinking about identities for customers and partners of our of our",
    "start": "222620",
    "end": "227750"
  },
  {
    "text": "customers if you're interested in more information check out either of the",
    "start": "227750",
    "end": "233360"
  },
  {
    "text": "websites for a lot more detail octa is a",
    "start": "233360",
    "end": "239209"
  },
  {
    "text": "midsize company and we have traction across 2000 customers",
    "start": "239209",
    "end": "244700"
  },
  {
    "text": "in every vertical from tech companies like Twitter and LinkedIn to",
    "start": "244700",
    "end": "250730"
  },
  {
    "text": "manufacturing like Boeing and Tesla health care companies like WebMD Blue",
    "start": "250730",
    "end": "257299"
  },
  {
    "text": "Cross Blue Shield and of course right here in Vegas the MGM gram octa manages tens of millions",
    "start": "257299",
    "end": "265240"
  },
  {
    "text": "of identities on a multi-tenant architecture built entirely on AWS and",
    "start": "265240",
    "end": "271000"
  },
  {
    "text": "we have a team of about 600 people and about a hundred and thirty engineers our",
    "start": "271000",
    "end": "277750"
  },
  {
    "text": "product is used in 185 countries around the world and this is a brief overview",
    "start": "277750",
    "end": "285430"
  },
  {
    "text": "of some of the technologies we use to support octo we're big fans of open",
    "start": "285430",
    "end": "293800"
  },
  {
    "text": "source technology and we're huge users of the AWS platform if you'd like to get",
    "start": "293800",
    "end": "299980"
  },
  {
    "text": "a lot more information about our stack checkout stack shared IO and one of the",
    "start": "299980",
    "end": "305350"
  },
  {
    "text": "great things about our product and being a developer is that we dog food our product every day all right enough of",
    "start": "305350",
    "end": "314230"
  },
  {
    "text": "the sales pitch let's dig into some crypto so why do we why do we use encryption in the first place from a",
    "start": "314230",
    "end": "321430"
  },
  {
    "start": "317000",
    "end": "317000"
  },
  {
    "text": "fundamental perspective we're using crypto because we want to have data confidentiality we want to limit the",
    "start": "321430",
    "end": "328390"
  },
  {
    "text": "access to that data to only the people who have access to the keys with newer algorithms you may also get authenticity",
    "start": "328390",
    "end": "335380"
  },
  {
    "text": "guarantees you might be able to provide some additional context in your",
    "start": "335380",
    "end": "340510"
  },
  {
    "text": "encryption to validate that no one has changed or altered that data either in",
    "start": "340510",
    "end": "346000"
  },
  {
    "text": "transit or at rest but practically why are we all here in this room talking about crypto it's probably because you",
    "start": "346000",
    "end": "353350"
  },
  {
    "text": "either have a compliance reason or because you're trying to do right by your customers and to define what do",
    "start": "353350",
    "end": "360700"
  },
  {
    "text": "right by your customers is it's really adhering to the least privileged principle don't give access to someone",
    "start": "360700",
    "end": "368740"
  },
  {
    "text": "or some system that doesn't need it in the first place so that's the way we think about security at octa and why we",
    "start": "368740",
    "end": "375730"
  },
  {
    "text": "were so excited to move to kms the",
    "start": "375730",
    "end": "381610"
  },
  {
    "start": "380000",
    "end": "380000"
  },
  {
    "text": "problem with encryption is that you take a bunch of data you encrypt it and I even made it confidential but now you",
    "start": "381610",
    "end": "388150"
  },
  {
    "text": "have some other data you need to somehow keep confidential and it's the keys and so effectively",
    "start": "388150",
    "end": "394280"
  },
  {
    "text": "what you're doing is you're moving the problem from a larger set of data to something small that might be slightly",
    "start": "394280",
    "end": "400490"
  },
  {
    "text": "more manageable so before we get into",
    "start": "400490",
    "end": "405830"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "key management think about your application and whether or not you actually need to have access to plain",
    "start": "405830",
    "end": "411920"
  },
  {
    "text": "text data or two keys so for some examples there if you're doing these",
    "start": "411920",
    "end": "418490"
  },
  {
    "text": "cases like authentication or correlation where you don't actually need the plaintext value that would be okay to",
    "start": "418490",
    "end": "425420"
  },
  {
    "text": "operate on a hashed value that you're comparing then consider using hashing",
    "start": "425420",
    "end": "431259"
  },
  {
    "text": "there are also use cases where you're working on encrypted data but you don't",
    "start": "432370",
    "end": "437870"
  },
  {
    "text": "need access to the keys in a homomorphic application you'd be able to provide",
    "start": "437870",
    "end": "444260"
  },
  {
    "text": "you'd be able to do operations on top of your encrypted data these could be",
    "start": "444260",
    "end": "449420"
  },
  {
    "text": "things like ordering or range queries and a great example of this is the DB paper out of MIT where they took the",
    "start": "449420",
    "end": "456350"
  },
  {
    "text": "my sequel database and offered almost every operation that database can perform on encrypted data next you may",
    "start": "456350",
    "end": "466670"
  },
  {
    "text": "only require encrypt right let's let's consider the case where you have an ingest endpoint that's publicly",
    "start": "466670",
    "end": "473120"
  },
  {
    "text": "available but then that service doesn't actually need to decrypt the data in",
    "start": "473120",
    "end": "479150"
  },
  {
    "text": "that scenario you could use asymmetric crypto put public keys out on your ingest servers but they don't actually",
    "start": "479150",
    "end": "485180"
  },
  {
    "text": "need to be doing decrypt again think about lease privilege principle and how these fundamentals can help the last one",
    "start": "485180",
    "end": "493160"
  },
  {
    "text": "is trust no one model and this is kind of another way of saying client-side",
    "start": "493160",
    "end": "498470"
  },
  {
    "text": "crypto right your service doesn't have to deal with cryptographic keys",
    "start": "498470",
    "end": "503720"
  },
  {
    "text": "if you don't ever work on the plaintext data you don't need it you allow the",
    "start": "503720",
    "end": "508760"
  },
  {
    "text": "client to do the encryption and then they send you the ciphertext and you never decrypt it you can take that one",
    "start": "508760",
    "end": "516650"
  },
  {
    "text": "step forward because you might say well okay sure we can put it on the client but then how does client deal with keys so in a lot of",
    "start": "516650",
    "end": "523510"
  },
  {
    "text": "trust no and models you can do a key derivation based on something that the person knows rather than something that",
    "start": "523510",
    "end": "530649"
  },
  {
    "text": "stored on disk so this could be something like a password vault where you take your password and then use that",
    "start": "530649",
    "end": "536830"
  },
  {
    "text": "to derive a key that then is used to encrypt your data so these are a bunch",
    "start": "536830",
    "end": "541990"
  },
  {
    "text": "of different examples for how to get confidentiality without having to manage",
    "start": "541990",
    "end": "547270"
  },
  {
    "text": "keys if if your application must have access to the plaintext data then we",
    "start": "547270",
    "end": "553209"
  },
  {
    "text": "start to talk about moving over to a key server and why that's beneficial to",
    "start": "553209",
    "end": "560100"
  },
  {
    "start": "560000",
    "end": "560000"
  },
  {
    "text": "illustrate this I want to use an example let's consider a simple case where a",
    "start": "560820",
    "end": "566020"
  },
  {
    "text": "client has some plaintext data that they want to send to your service so they send it over a trusted channel that's",
    "start": "566020",
    "end": "572800"
  },
  {
    "text": "encrypted but when it arrives at your service it's now in plain text again and let's",
    "start": "572800",
    "end": "579459"
  },
  {
    "text": "think about some of the requirements that your service might have if you're trying to follow good security practices so for one you probably want a model",
    "start": "579459",
    "end": "587800"
  },
  {
    "text": "where the cryptographic keys are only in memory not on disk there's a number of different attacks or someone might be",
    "start": "587800",
    "end": "593650"
  },
  {
    "text": "able to gain access to that to following",
    "start": "593650",
    "end": "600220"
  },
  {
    "text": "the least privileged principle there's no reason that anyone who has access to the database needs to have the plain",
    "start": "600220",
    "end": "607029"
  },
  {
    "text": "text version of that data both at rest and in memory so that means that we're",
    "start": "607029",
    "end": "612610"
  },
  {
    "text": "going to be doing the encryption in our service and then storing ciphertext text down in the database the problem with",
    "start": "612610",
    "end": "620620"
  },
  {
    "text": "this of course is how do you get that key on to that service so naively we",
    "start": "620620",
    "end": "629410"
  },
  {
    "start": "626000",
    "end": "626000"
  },
  {
    "text": "might do something like serve a server boot up where we put it into an environment variable with some config",
    "start": "629410",
    "end": "635440"
  },
  {
    "text": "management system or into a file I hope most people know why that's not a good idea there's tons of documentation",
    "start": "635440",
    "end": "641560"
  },
  {
    "text": "online about about why that's not a great idea the next model would be",
    "start": "641560",
    "end": "647370"
  },
  {
    "text": "enforcing that that key is only accessible in memory and so to do that you'd have to do something where you're",
    "start": "647370",
    "end": "653140"
  },
  {
    "text": "providing the key to service at runtime over a secure Channel that's the model that octa had been",
    "start": "653140",
    "end": "660120"
  },
  {
    "text": "using for a while before we move to the key management service and of course the",
    "start": "660120",
    "end": "666300"
  },
  {
    "text": "last option is to take those keys out of your service and move them into a key",
    "start": "666300",
    "end": "671310"
  },
  {
    "text": "management service so with a key service we add a new component to this architecture we still encrypt the data",
    "start": "671310",
    "end": "681330"
  },
  {
    "start": "672000",
    "end": "672000"
  },
  {
    "text": "with a data key that's generated within the service or potentially you could go",
    "start": "681330",
    "end": "687240"
  },
  {
    "text": "ask the key service to give you a generated key but the important part here is that the encryption still",
    "start": "687240",
    "end": "694260"
  },
  {
    "text": "happens on the service but then what's stored in the database is a combination of two things the encrypted plaintext",
    "start": "694260",
    "end": "703230"
  },
  {
    "text": "that was provided to you and an encrypted version of the key that came out of the key service we Amazon refers",
    "start": "703230",
    "end": "711779"
  },
  {
    "text": "to this as envelope encryption so with this model that the benefit is that the",
    "start": "711779",
    "end": "719399"
  },
  {
    "text": "key that's actually routing your trust lives in a key service and it never leaves that service this creates a",
    "start": "719399",
    "end": "729510"
  },
  {
    "text": "really nice seam in your application because now the key service interface is easy to audit and you can look at your",
    "start": "729510",
    "end": "737399"
  },
  {
    "text": "service and compare and reconcile the log data to make sure that every request",
    "start": "737399",
    "end": "743130"
  },
  {
    "text": "that's been made to that service is one that you were expecting also because the",
    "start": "743130",
    "end": "749100"
  },
  {
    "text": "key services master key is opaque to your application it allows the key service to rotate the master key",
    "start": "749100",
    "end": "756829"
  },
  {
    "text": "opaquely to your application as long as your application records which version",
    "start": "756829",
    "end": "761940"
  },
  {
    "text": "of the master key was used to encrypt that data you'll be able to continually",
    "start": "761940",
    "end": "768390"
  },
  {
    "text": "add new master keys and the new data that's being encrypted will use those new master keys and you'll still be able",
    "start": "768390",
    "end": "775950"
  },
  {
    "text": "to decrypt the data that was encrypted with old master keys the last benefit of",
    "start": "775950",
    "end": "782310"
  },
  {
    "text": "this model is that in the earlier approach the key that was used for do",
    "start": "782310",
    "end": "787620"
  },
  {
    "text": "Krypto lived in memory for the entire lifetime of that server being up when",
    "start": "787620",
    "end": "793380"
  },
  {
    "text": "you move to a key service you now can make just-in-time requests for your your",
    "start": "793380",
    "end": "798960"
  },
  {
    "text": "cryptographic keys at the cost of performance trade-offs so now let's dig",
    "start": "798960",
    "end": "805830"
  },
  {
    "text": "into how we actually went through this process of rolling out and looking at",
    "start": "805830",
    "end": "812040"
  },
  {
    "text": "the kms offering from Amazon an octa our",
    "start": "812040",
    "end": "817230"
  },
  {
    "text": "encryption use cases are twofold we have customer data that we want to keep private like PII PCI and pH I and we store users",
    "start": "817230",
    "end": "825690"
  },
  {
    "text": "credentials so these were our requirements and let's look at how the",
    "start": "825690",
    "end": "831270"
  },
  {
    "start": "829000",
    "end": "829000"
  },
  {
    "text": "requirements matched up with what kms offers first we wanted strong encryption",
    "start": "831270",
    "end": "837930"
  },
  {
    "text": "and kms offers that with industry standard 256 bit AES GCM in addition to",
    "start": "837930",
    "end": "845670"
  },
  {
    "text": "that they're able to provide Hardware enabled strong random number generator",
    "start": "845670",
    "end": "851450"
  },
  {
    "text": "next we wanted separation of duties and this is a critical part of what a key",
    "start": "851450",
    "end": "857610"
  },
  {
    "text": "service gives you and that the team that's managing the key service if it's different from the team that's managing",
    "start": "857610",
    "end": "864120"
  },
  {
    "text": "your data it means that no one person has both access to your keys and to your data and that's given to you by design",
    "start": "864120",
    "end": "872610"
  },
  {
    "text": "of using kms so by rolling out 2 kms we no longer needed to have our operators",
    "start": "872610",
    "end": "879080"
  },
  {
    "text": "have access to those keys and that means when they leave we don't have to deal",
    "start": "879080",
    "end": "884459"
  },
  {
    "text": "with the same rotation models that we'd have to have if they did have access in",
    "start": "884459",
    "end": "890089"
  },
  {
    "text": "addition Amazon themselves have quorum base manage and separate sorry quorum",
    "start": "890089",
    "end": "896100"
  },
  {
    "text": "based management and separation of duties in their own management of the kms service next we wanted to be able to",
    "start": "896100",
    "end": "904589"
  },
  {
    "text": "support Auto scale so I mentioned that the only secure way without using a key",
    "start": "904589",
    "end": "911160"
  },
  {
    "text": "management service to have the keys only reside in memory is to provide them to",
    "start": "911160",
    "end": "916410"
  },
  {
    "text": "the server at startup time so the problem with that is you need an operator there to be able",
    "start": "916410",
    "end": "923440"
  },
  {
    "text": "to provide those keys and so by using the the kms I am bootstrapping model for getting",
    "start": "923440",
    "end": "931990"
  },
  {
    "text": "credentials on to our ec2 instances we were able to take advantage of that",
    "start": "931990",
    "end": "939010"
  },
  {
    "text": "approach for allowing us to bootstrap servers and autoscale them without having an operator there lastly we",
    "start": "939010",
    "end": "947170"
  },
  {
    "text": "wanted auditability and of course you get that with encryption context and cloud trail now let's dig into the",
    "start": "947170",
    "end": "956860"
  },
  {
    "text": "threat model and take a look at the security off the posture that kms has in",
    "start": "956860",
    "end": "962710"
  },
  {
    "text": "our architecture so if we look at the diagram that we have before we're replacing this generic concept of your",
    "start": "962710",
    "end": "968800"
  },
  {
    "text": "service with specifically running within a situ and we're replacing the generic",
    "start": "968800",
    "end": "975100"
  },
  {
    "text": "concept of a key server with kms let's dig into Amazon ec2 first and see the",
    "start": "975100",
    "end": "982360"
  },
  {
    "text": "model that they're using there so of course now that you have all your keys",
    "start": "982360",
    "end": "988029"
  },
  {
    "text": "moved over our key mint to a key management service you now have another problem which is how do you get the",
    "start": "988029",
    "end": "995290"
  },
  {
    "text": "credentials to be able to talk to the key management service so the solution",
    "start": "995290",
    "end": "1001860"
  },
  {
    "text": "for this is to use I am roles for ec2",
    "start": "1001860",
    "end": "1007100"
  },
  {
    "text": "this allows you to tell I am that you want a particular role to have access to",
    "start": "1007100",
    "end": "1013740"
  },
  {
    "text": "a particular set of keys within kms and then you can associate that role with a",
    "start": "1013740",
    "end": "1019980"
  },
  {
    "text": "set of instances so if you go and look",
    "start": "1019980",
    "end": "1025380"
  },
  {
    "text": "at what the SDK would be doing if you were to just say use the default security provider for getting",
    "start": "1025380",
    "end": "1031949"
  },
  {
    "text": "credentials to kms it would make a request to the metadata service within",
    "start": "1031949",
    "end": "1038329"
  },
  {
    "text": "ec2 and for those who aren't familiar every ec2 instance is launched with",
    "start": "1038329",
    "end": "1043980"
  },
  {
    "text": "access to the static IP where you're able to query for a bunch",
    "start": "1043980",
    "end": "1049049"
  },
  {
    "text": "of different metadata information about the service one of the things that you can query for is the credentials to talk",
    "start": "1049049",
    "end": "1055350"
  },
  {
    "text": "to kms so we dug into that a bit and if you take those credentials off of that",
    "start": "1055350",
    "end": "1061169"
  },
  {
    "text": "machine and you use it on another machine it does work but the team has",
    "start": "1061169",
    "end": "1067950"
  },
  {
    "text": "put in place short-lived credentials so if someone were to gain access to them",
    "start": "1067950",
    "end": "1073020"
  },
  {
    "text": "they would live for a short period of time we wanted to understand more about that so we dug in if you look at the the",
    "start": "1073020",
    "end": "1080549"
  },
  {
    "text": "response you get when you you get when you perform a request for credentials you get an access key ID secret access",
    "start": "1080549",
    "end": "1089100"
  },
  {
    "text": "key and a signed token and if you compare the expiration time with the",
    "start": "1089100",
    "end": "1095730"
  },
  {
    "text": "last updated date you find that their credentials are rotated every hour but",
    "start": "1095730",
    "end": "1101460"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "they're good for six hours so if you think about could I do this better",
    "start": "1101460",
    "end": "1108630"
  },
  {
    "text": "myself we thought the answer was no because the hardest part of this is",
    "start": "1108630",
    "end": "1114980"
  },
  {
    "text": "bootstrapping those credentials to that machine and Amazon has a distinct advantage and that they operate below",
    "start": "1114980",
    "end": "1122429"
  },
  {
    "text": "your ec2 instance at the hypervisor layer where they have access to hardware",
    "start": "1122429",
    "end": "1129650"
  },
  {
    "text": "the next part of the threat model will talk about transport security so here",
    "start": "1131360",
    "end": "1137700"
  },
  {
    "start": "1136000",
    "end": "1136000"
  },
  {
    "text": "there's nothing surprising transport is secured by TLS for confidentiality in",
    "start": "1137700",
    "end": "1144600"
  },
  {
    "text": "authentication of the server side if you go through in more detail they get a a",
    "start": "1144600",
    "end": "1149940"
  },
  {
    "text": "rating on Qualis and they're generally following all the best practices including requiring forward secrecy",
    "start": "1149940",
    "end": "1156330"
  },
  {
    "text": "which may mean that some older clients would network and then the",
    "start": "1156330",
    "end": "1161429"
  },
  {
    "text": "authentication and authorization of a client-side is done via that IAM",
    "start": "1161429",
    "end": "1166860"
  },
  {
    "text": "signature that we saw in the response from the metadata service lastly let's",
    "start": "1166860",
    "end": "1173940"
  },
  {
    "text": "dig into kms there's a great white paper called the",
    "start": "1173940",
    "end": "1180910"
  },
  {
    "text": "km/s cryptographic details that has a lot more information on how they've built and secured kms this diagram comes",
    "start": "1180910",
    "end": "1188410"
  },
  {
    "text": "from that and I highly recommend that people go and use that I just want to",
    "start": "1188410",
    "end": "1193810"
  },
  {
    "text": "talk through two main points about how their model works the first one is to",
    "start": "1193810",
    "end": "1199810"
  },
  {
    "text": "talk about customer master keys so when you go to the UI and kms and you create",
    "start": "1199810",
    "end": "1206170"
  },
  {
    "text": "a new customer master key you may notice that you have the ability to set some",
    "start": "1206170",
    "end": "1211630"
  },
  {
    "text": "amount of time before it will rotate that key so clearly this customer master key is a",
    "start": "1211630",
    "end": "1218470"
  },
  {
    "text": "logical concept and underneath that logical concept there may be multiple",
    "start": "1218470",
    "end": "1223980"
  },
  {
    "text": "actual keys that are used to encrypt your data those actual keys are called",
    "start": "1223980",
    "end": "1230170"
  },
  {
    "text": "the HSA backing keys those are that HBK is in this diagram the second thing I",
    "start": "1230170",
    "end": "1238090"
  },
  {
    "text": "want you to take away from this is that the HSA while it's not a hardware",
    "start": "1238090",
    "end": "1245170"
  },
  {
    "text": "security module that has tamper proof temper proof access to the keys it is in",
    "start": "1245170",
    "end": "1253750"
  },
  {
    "text": "most ways acting exactly like an HSM and that the keys that are used to encrypt",
    "start": "1253750",
    "end": "1260350"
  },
  {
    "text": "your data only live within the HSM in memory and they never leave the service",
    "start": "1260350",
    "end": "1265510"
  },
  {
    "text": "unless they've been encrypted for durability they do export them those are",
    "start": "1265510",
    "end": "1271030"
  },
  {
    "text": "they call those exported key tokens but when they're exported they're exported",
    "start": "1271030",
    "end": "1276250"
  },
  {
    "text": "in an encrypted fashion by a key that's rotated daily",
    "start": "1276250",
    "end": "1281340"
  },
  {
    "text": "so if we wrap it all up you basically have three options when you're looking",
    "start": "1284980",
    "end": "1290170"
  },
  {
    "text": "to do encryption in the cloud with it AWS the first option would be to use",
    "start": "1290170",
    "end": "1296170"
  },
  {
    "text": "Cloud HSM Cloud HSM gives you an actual HSM hardware appliance and you now need",
    "start": "1296170",
    "end": "1303160"
  },
  {
    "text": "to own all of the h.a and uptime of that",
    "start": "1303160",
    "end": "1308200"
  },
  {
    "text": "service from a cost perspective Cloud HSM is also expensive both upfront and",
    "start": "1308200",
    "end": "1315400"
  },
  {
    "text": "ongoing and if you were trying to do it yourself you'd have to do all the stuff",
    "start": "1315400",
    "end": "1321340"
  },
  {
    "text": "that we just talked about in the threat model and you still wouldn't have the advantage of having access to the",
    "start": "1321340",
    "end": "1326470"
  },
  {
    "text": "hardware you for example have to have a separate operations team to do your",
    "start": "1326470",
    "end": "1333030"
  },
  {
    "text": "separation of duties within your organization for a small start-up that's very hard to justify doing so from a",
    "start": "1333030",
    "end": "1342070"
  },
  {
    "text": "cost perspective we found that kms would cost us under a thousand dollars a month",
    "start": "1342070",
    "end": "1347700"
  },
  {
    "text": "cloudy HSM would be somewhere around twenty thousand dollars a month and do",
    "start": "1347700",
    "end": "1353170"
  },
  {
    "text": "it yourself you do the math on how long you think your team would take to build all that functionality it would be very",
    "start": "1353170",
    "end": "1359110"
  },
  {
    "text": "expensive so now let's dig into how we implemented KMS at octave octa is a",
    "start": "1359110",
    "end": "1371080"
  },
  {
    "start": "1369000",
    "end": "1369000"
  },
  {
    "text": "multi region service we guarantee to our customers that if a region goes down in",
    "start": "1371080",
    "end": "1377020"
  },
  {
    "text": "amazon we will be able to have them up and running on another region regardless of how long it takes Amazon to bring",
    "start": "1377020",
    "end": "1383620"
  },
  {
    "text": "that region back up so we have a master region and a DR region in addition if",
    "start": "1383620",
    "end": "1391390"
  },
  {
    "text": "you think about how important this infrastructure is to our product if we",
    "start": "1391390",
    "end": "1396490"
  },
  {
    "text": "can't get access to our crypto keys we can't do what our company does so in",
    "start": "1396490",
    "end": "1401830"
  },
  {
    "text": "addition to having this DoD our multi-region failover we wanted to have",
    "start": "1401830",
    "end": "1407170"
  },
  {
    "text": "a solution where even if kms had a bug where they corrupted their data or they",
    "start": "1407170",
    "end": "1412660"
  },
  {
    "text": "lost our keys or they went down in we would have a way to still get at our",
    "start": "1412660",
    "end": "1418540"
  },
  {
    "text": "encrypted data along those same lines that means we also wanted to avoid",
    "start": "1418540",
    "end": "1425290"
  },
  {
    "text": "vendor lock-in and what I mean by that is not that we want to avoid you know",
    "start": "1425290",
    "end": "1430510"
  },
  {
    "text": "locking into just their API their API is very simple and lightweight what I'm more concerned about is we didn't want",
    "start": "1430510",
    "end": "1437020"
  },
  {
    "text": "we don't want to lock in to having to actually go to every ciphertext blob in",
    "start": "1437020",
    "end": "1442180"
  },
  {
    "text": "every datastore that we have and have to reintroduce where so you have to think",
    "start": "1442180",
    "end": "1448270"
  },
  {
    "text": "about what kind of key hierarchy you're gonna want to be able to support that and lastly we were moving from a model",
    "start": "1448270",
    "end": "1458350"
  },
  {
    "text": "where our cryptographic keys were in memory they were right there with our service and now we need to go out over",
    "start": "1458350",
    "end": "1464050"
  },
  {
    "text": "the network to make a request every time we want those keys so performance was a",
    "start": "1464050",
    "end": "1469330"
  },
  {
    "text": "huge impact and something we spent a lot of time looking at octa was encrypting",
    "start": "1469330",
    "end": "1478750"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "data before we moved to kms so we already had a key hierarchy in place so as I mentioned before we used to have a",
    "start": "1478750",
    "end": "1485830"
  },
  {
    "text": "model where we would provide keys to our servers at runtime that key that we were",
    "start": "1485830",
    "end": "1491980"
  },
  {
    "text": "providing was the region master key the region master key then encrypts a keeper",
    "start": "1491980",
    "end": "1499510"
  },
  {
    "text": "tenant that way every single tenants data is encrypted under a separate",
    "start": "1499510",
    "end": "1505990"
  },
  {
    "text": "master key hierarchy and then that master key is then used to encrypt data",
    "start": "1505990",
    "end": "1513460"
  },
  {
    "text": "keys that actually encrypt our data so",
    "start": "1513460",
    "end": "1520240"
  },
  {
    "text": "when we moved to kms what we were able to do is move our route of trust from",
    "start": "1520240",
    "end": "1525700"
  },
  {
    "text": "this key that an operator has to provide at runtime to our service into the kms",
    "start": "1525700",
    "end": "1531400"
  },
  {
    "text": "service where we never have access to that key and then if you think about how",
    "start": "1531400",
    "end": "1537640"
  },
  {
    "text": "we did this in practice we were able because we had this key hierarchy we were able to keep both running in",
    "start": "1537640",
    "end": "1544630"
  },
  {
    "text": "parallel when we went to roll this out so what I mean by that is we took our existing",
    "start": "1544630",
    "end": "1550830"
  },
  {
    "text": "region master key and we kept deploying that to our service we then took every",
    "start": "1550830",
    "end": "1558029"
  },
  {
    "text": "tenant master key that we had and we kept the old encrypted version and we re",
    "start": "1558029",
    "end": "1564509"
  },
  {
    "text": "encrypted it with kms so that moves the route of trust both in the kms into the",
    "start": "1564509",
    "end": "1570120"
  },
  {
    "text": "key that we already have and we were able to do that because we have this third layer where the the key that's",
    "start": "1570120",
    "end": "1577529"
  },
  {
    "text": "actually protecting our encrypted data is one layer below that so using an",
    "start": "1577529",
    "end": "1589200"
  },
  {
    "start": "1587000",
    "end": "1587000"
  },
  {
    "text": "extended key hierarchy does give you some advantages but it comes with some costs it made the adoption of kms easier",
    "start": "1589200",
    "end": "1596730"
  },
  {
    "text": "because we were able to gradually roll out and we would have we had a rollback strategy if something didn't work it",
    "start": "1596730",
    "end": "1604649"
  },
  {
    "text": "also means that the keys that we actually protect with kms are few there",
    "start": "1604649",
    "end": "1610919"
  },
  {
    "text": "there's just one per tenant so they're enumerable we can find them we can",
    "start": "1610919",
    "end": "1616619"
  },
  {
    "text": "rotate them if we need to both a pro and a con is that the model that we're using",
    "start": "1616619",
    "end": "1623909"
  },
  {
    "text": "means that we don't actually call the kms API when we're encrypting our data",
    "start": "1623909",
    "end": "1630360"
  },
  {
    "text": "we only use it to protect the tenant master keys so that means that we have",
    "start": "1630360",
    "end": "1636389"
  },
  {
    "text": "to manage the security of the code that's actually encrypting our data we run our own our own cryptographic system",
    "start": "1636389",
    "end": "1645059"
  },
  {
    "text": "and we have to get that reviewed periodically so the pro is that you have more control there and the con is of",
    "start": "1645059",
    "end": "1653249"
  },
  {
    "text": "course that you have more responsibility the last thing to mention is in the",
    "start": "1653249",
    "end": "1660330"
  },
  {
    "text": "service to service model where you're encrypting data and sending it to another service the issue is that now",
    "start": "1660330",
    "end": "1667019"
  },
  {
    "text": "because your data is being encrypted not by kms but by a separate key hierarchy that you control you can't rely on the",
    "start": "1667019",
    "end": "1674279"
  },
  {
    "text": "receiving service to have access to the keys that are actually using that data so if you're using this",
    "start": "1674279",
    "end": "1681149"
  },
  {
    "text": "hierarchical model you need to think about a different solution to that we didn't have that problem now let's talk",
    "start": "1681149",
    "end": "1692399"
  },
  {
    "text": "about how we mitigated for failure so again because we have this key hierarchy",
    "start": "1692399",
    "end": "1698450"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "we were able to route the encryption of that tenant master key in multiple",
    "start": "1698450",
    "end": "1705509"
  },
  {
    "text": "places just like we did with rollout where we routed it in our old region",
    "start": "1705509",
    "end": "1711359"
  },
  {
    "text": "master key and then the new KMS key we were also able to route it in multiple",
    "start": "1711359",
    "end": "1716369"
  },
  {
    "text": "km s's and with an RSA key so what this",
    "start": "1716369",
    "end": "1724049"
  },
  {
    "text": "allows us to do is make a request to decrypt one of our tenant master keys from one kms if that goes down we can",
    "start": "1724049",
    "end": "1732210"
  },
  {
    "text": "make a request to the other kms and if that doesn't work then our server",
    "start": "1732210",
    "end": "1737639"
  },
  {
    "text": "doesn't have the ability to decrypt that data the reason why is because this RSA",
    "start": "1737639",
    "end": "1743249"
  },
  {
    "text": "key that we're using is only the public key that's placed on that server so when",
    "start": "1743249",
    "end": "1749549"
  },
  {
    "text": "we create new tenants we can always encrypt it with that public key for RSA but we can't decrypt it with what's",
    "start": "1749549",
    "end": "1755759"
  },
  {
    "text": "currently deployed in our fleet that said if we do hit that scenario we can",
    "start": "1755759",
    "end": "1762029"
  },
  {
    "text": "bring two people together to push the private key the private RSA key to those",
    "start": "1762029",
    "end": "1768210"
  },
  {
    "text": "servers in the case that all of kms is down or that they've somehow lost our keys so how did this actually work in",
    "start": "1768210",
    "end": "1778350"
  },
  {
    "text": "practice on September 20th kms had a",
    "start": "1778350",
    "end": "1783929"
  },
  {
    "text": "heightened error rate for about two hours this is the graph of the requests",
    "start": "1783929",
    "end": "1793049"
  },
  {
    "text": "from our service out to kms right around",
    "start": "1793049",
    "end": "1798210"
  },
  {
    "text": "5:30 we started to see a heightened error rate and then around 5:45 it got",
    "start": "1798210",
    "end": "1804149"
  },
  {
    "text": "pretty high and what you're seeing here is that our service is continually making requests to the US east region",
    "start": "1804149",
    "end": "1812130"
  },
  {
    "text": "but now we're also going out to the US West Region those requests are succeeding and we're then able to",
    "start": "1812130",
    "end": "1818610"
  },
  {
    "text": "decrypt our data our operations team doesn't even get paged or woken up and we continue operating",
    "start": "1818610",
    "end": "1826190"
  },
  {
    "text": "octa takes transparency very seriously and so if you're interested to learn a",
    "start": "1828560",
    "end": "1833790"
  },
  {
    "text": "little bit more about our service uptime take a look at trust dr. com",
    "start": "1833790",
    "end": "1840080"
  },
  {
    "text": "now let's talk about authorization and auditing and and the critical part of authorization and auditing is the",
    "start": "1841580",
    "end": "1848430"
  },
  {
    "start": "1845000",
    "end": "1845000"
  },
  {
    "text": "encryption context so as I mentioned the",
    "start": "1848430",
    "end": "1853500"
  },
  {
    "text": "kms API is very simple we only use three operations we use encrypt decrypt and",
    "start": "1853500",
    "end": "1858990"
  },
  {
    "text": "generate data key all three of those operations allow you to provide encryption context it's additional data",
    "start": "1858990",
    "end": "1865950"
  },
  {
    "text": "that's both used in the encryption algorithm and it's also used when",
    "start": "1865950",
    "end": "1871710"
  },
  {
    "text": "logging and so if you think about how do you come up with what your encryption",
    "start": "1871710",
    "end": "1877680"
  },
  {
    "text": "context should be what you're really thinking about is what how will I answer",
    "start": "1877680",
    "end": "1884670"
  },
  {
    "text": "the question of what data is being encrypted or decrypted when I go and",
    "start": "1884670",
    "end": "1890520"
  },
  {
    "text": "look at my logs you're also trying to answer the question how will I create a",
    "start": "1890520",
    "end": "1896670"
  },
  {
    "text": "security policy to manage access to my keys so the way we thought about it an",
    "start": "1896670",
    "end": "1902310"
  },
  {
    "text": "octa is the encryption context should do two things it should identify your data",
    "start": "1902310",
    "end": "1909080"
  },
  {
    "text": "tell you what's being encrypted what's being decrypted and it should classify your data and typically classification",
    "start": "1909080",
    "end": "1917070"
  },
  {
    "text": "is the way that you're you're structuring your policy for what systems",
    "start": "1917070",
    "end": "1922380"
  },
  {
    "text": "have access to certain keys so in in our concrete example we ended up with",
    "start": "1922380",
    "end": "1928950"
  },
  {
    "text": "service name and entity name as the classification of the data and then an",
    "start": "1928950",
    "end": "1934350"
  },
  {
    "text": "opaque identifier as the way to find out what record is actually being operated",
    "start": "1934350",
    "end": "1940080"
  },
  {
    "text": "on there's a few things to note about the",
    "start": "1940080",
    "end": "1947110"
  },
  {
    "text": "encryption context the first is that it's immutable if you can't provide that value at every decryption you won't be",
    "start": "1947110",
    "end": "1954909"
  },
  {
    "text": "able to decrypt your data so you need to come up with something that is going to either be a property of the data you're",
    "start": "1954909",
    "end": "1962559"
  },
  {
    "text": "encrypting that won't change and is immutable or it's something that's stored right alongside your data I",
    "start": "1962559",
    "end": "1968669"
  },
  {
    "text": "highly recommend not hard coding your encryption context into your code but",
    "start": "1968669",
    "end": "1974679"
  },
  {
    "text": "storing it alongside your data so that you may evolve the way that you model your encryption context over time and",
    "start": "1974679",
    "end": "1982080"
  },
  {
    "text": "still allow the old records that you've already stored to have their old encryption context model and allowing",
    "start": "1982080",
    "end": "1989409"
  },
  {
    "text": "you then swap in the new one lastly because it's in log data don't",
    "start": "1989409",
    "end": "1996580"
  },
  {
    "text": "put anything sensitive there our entities IDs that we're putting into the encryption context are completely new",
    "start": "1996580",
    "end": "2003480"
  },
  {
    "text": "opaque identifiers for our service and have no meaning publicly with our",
    "start": "2003480",
    "end": "2009179"
  },
  {
    "text": "service so if someone were to get both access to the plaintext keys in kms and",
    "start": "2009179",
    "end": "2015330"
  },
  {
    "text": "the encryption context or cloud trail logs they still wouldn't know how to tie that back to the entities within octa so",
    "start": "2015330",
    "end": "2027000"
  },
  {
    "start": "2025000",
    "end": "2025000"
  },
  {
    "text": "the main takeaway is if you don't use encryption context then the best you can",
    "start": "2027000",
    "end": "2032640"
  },
  {
    "text": "do from a policy perspective is you can say allow these actions for these keys",
    "start": "2032640",
    "end": "2039809"
  },
  {
    "text": "to this role if you want more granular",
    "start": "2039809",
    "end": "2044880"
  },
  {
    "text": "policy if you want to be able to say allow access to this key but only for",
    "start": "2044880",
    "end": "2050908"
  },
  {
    "text": "this subset of data that's classified this way then you need to use encryption context and so this illustrates an",
    "start": "2050909",
    "end": "2057658"
  },
  {
    "text": "example of that where our directory app role is a role that we're going to",
    "start": "2057659",
    "end": "2062790"
  },
  {
    "text": "assign to some directory app servers and what this policy is saying is only allow",
    "start": "2062790",
    "end": "2069450"
  },
  {
    "text": "the decrypt operation if the encryption context that was provided",
    "start": "2069450",
    "end": "2074510"
  },
  {
    "text": "has a key of type and a value of directory service sensitive object and",
    "start": "2074510",
    "end": "2084700"
  },
  {
    "start": "2084000",
    "end": "2084000"
  },
  {
    "text": "now let's take a look at the cloud trail logs this is where your encryption context and key information will show up",
    "start": "2084700",
    "end": "2091550"
  },
  {
    "text": "in cloud trail in addition there's a lot of helpful information provided in the",
    "start": "2091550",
    "end": "2098420"
  },
  {
    "text": "cloud trail logs that if you're bringing this into your sim or whatever security",
    "start": "2098420",
    "end": "2104480"
  },
  {
    "text": "monitoring tools you're using it can allow you to build Reconciliation tools",
    "start": "2104480",
    "end": "2109880"
  },
  {
    "text": "and white lists for what you would expect for access to kms one example and",
    "start": "2109880",
    "end": "2118910"
  },
  {
    "start": "2116000",
    "end": "2116000"
  },
  {
    "text": "this you might be wondering why do we have like a suspicious activity log that",
    "start": "2118910",
    "end": "2124130"
  },
  {
    "text": "actually has data on it this was when we were tuning the process but this is an",
    "start": "2124130",
    "end": "2129920"
  },
  {
    "text": "example where we're reconciling our data between our app and the key server so we",
    "start": "2129920",
    "end": "2136970"
  },
  {
    "text": "want to know did every decryption event that happened in kms correspond to a",
    "start": "2136970",
    "end": "2143570"
  },
  {
    "text": "request that came from our service and if the answer is no we want to know why",
    "start": "2143570",
    "end": "2149860"
  },
  {
    "text": "now let's talk about how we rolled out the service and ended some tuning so",
    "start": "2151690",
    "end": "2158810"
  },
  {
    "text": "like I said before because of the encryption hierarchy that we have we were able to have a model where we could",
    "start": "2158810",
    "end": "2165620"
  },
  {
    "text": "roll back so we flighted out our deployment to a subset of our customers using KMS we waited about a day and when",
    "start": "2165620",
    "end": "2174470"
  },
  {
    "text": "when when that went well we rolled it out to the rest of the fleet I'll get",
    "start": "2174470",
    "end": "2181550"
  },
  {
    "text": "back to that tuning bit in a minute when we were looking at the performance numbers in production we saw that the",
    "start": "2181550",
    "end": "2188600"
  },
  {
    "start": "2182000",
    "end": "2182000"
  },
  {
    "text": "cost of making one of these requests was up around 61 milliseconds which for our",
    "start": "2188600",
    "end": "2193760"
  },
  {
    "text": "product would be about a third of the time that we spend responding to any of our requests which isn't going to be",
    "start": "2193760",
    "end": "2200060"
  },
  {
    "text": "acceptable for us so like I said before moving from a model where you provide a",
    "start": "2200060",
    "end": "2207320"
  },
  {
    "start": "2203000",
    "end": "2203000"
  },
  {
    "text": "key to the service that stays there for the entire lifetime of the service being up when",
    "start": "2207320",
    "end": "2213470"
  },
  {
    "text": "you move 2 kms you get this nice option of tunable to nobility in terms of how",
    "start": "2213470",
    "end": "2220190"
  },
  {
    "text": "long you keep your keys in memory you could use them just in time and only once you could use them for a very short",
    "start": "2220190",
    "end": "2227720"
  },
  {
    "text": "period of time and then aged them out so because we didn't want to have this new",
    "start": "2227720",
    "end": "2234490"
  },
  {
    "text": "61 millisecond overhead on every one of our requests we chose to have a short",
    "start": "2234490",
    "end": "2240920"
  },
  {
    "text": "time to live on our encryption keys which is that tuning portion that you",
    "start": "2240920",
    "end": "2247849"
  },
  {
    "text": "see about a week after we deployed kms",
    "start": "2247849",
    "end": "2252069"
  },
  {
    "text": "next when we rolled out kms we found that we were failing over to the west region more than we were expecting when",
    "start": "2255549",
    "end": "2263180"
  },
  {
    "text": "we dug into it a bit it was typically due to just standard socket and connection timeouts and we noticed that",
    "start": "2263180",
    "end": "2271069"
  },
  {
    "text": "the SDK that we were using was not retrying more than once when it was calling out to 2 kms so if you're using",
    "start": "2271069",
    "end": "2279410"
  },
  {
    "start": "2279000",
    "end": "2279000"
  },
  {
    "text": "the Java SDK here's a good example of some settings that are working well for us in production socket timeout a 3",
    "start": "2279410",
    "end": "2286579"
  },
  {
    "text": "seconds connection timeout of 3 seconds and retrying 3 times when we did that we",
    "start": "2286579",
    "end": "2293140"
  },
  {
    "text": "basically have not seen our service switch over to the other region unless there was a high error rate",
    "start": "2293140",
    "end": "2302770"
  },
  {
    "start": "2307000",
    "end": "2307000"
  },
  {
    "text": "so we're very pleased with the kms service there's definitely a few things",
    "start": "2307550",
    "end": "2312650"
  },
  {
    "text": "we'd love to see in addition to what they're already offering the first is support for multi region encryption not",
    "start": "2312650",
    "end": "2321200"
  },
  {
    "text": "dictating exactly how that would have to work but just something that would allow other people to do something similar to",
    "start": "2321200",
    "end": "2328100"
  },
  {
    "text": "what we're doing without having to have a complex key hierarchy next there's",
    "start": "2328100",
    "end": "2334790"
  },
  {
    "text": "some security improvements where for example we can add additional layer of encryption over the standard TLS that",
    "start": "2334790",
    "end": "2342890"
  },
  {
    "text": "they're using when talking between kms and our service for cases like harp lead",
    "start": "2342890",
    "end": "2349190"
  },
  {
    "text": "this would mean that the data still would be encrypted next the tokens that",
    "start": "2349190",
    "end": "2356030"
  },
  {
    "text": "are being issued to ec2 services there's room for improvement and potentially binding them may be channel binding to",
    "start": "2356030",
    "end": "2361640"
  },
  {
    "text": "IP or channel binding to the TLS session and lastly we'd love to see what they're",
    "start": "2361640",
    "end": "2368780"
  },
  {
    "text": "already offering for symmetric key cryptography to be offered for a symmetric key cryptography and if they",
    "start": "2368780",
    "end": "2376040"
  },
  {
    "text": "could offer a certificate authority as a service rooted in a publicly trusted domain I'm sure a lot of people could",
    "start": "2376040",
    "end": "2382310"
  },
  {
    "text": "think of scenarios that were that would be very helpful our takeaway is that the",
    "start": "2382310",
    "end": "2389240"
  },
  {
    "text": "service is highly available if you were gonna go and try to build this yourself despite the small blip that they've had",
    "start": "2389240",
    "end": "2395030"
  },
  {
    "text": "it's still a very hard problem to solve and if you are solving in a cross region they have a fantastic solution it's",
    "start": "2395030",
    "end": "2403220"
  },
  {
    "text": "extremely simple to get up and running a short aside on this is that an octa we",
    "start": "2403220",
    "end": "2408650"
  },
  {
    "text": "have a hackathon every quarter our developers get a chance to come up with ideas that they think would be",
    "start": "2408650",
    "end": "2414050"
  },
  {
    "text": "interesting small teams and they go and they implement something canvas actually came out of three people getting",
    "start": "2414050",
    "end": "2421100"
  },
  {
    "text": "together and in one day implementing this solution and then that team got",
    "start": "2421100",
    "end": "2426110"
  },
  {
    "text": "voted on to then roll this out into production they were given an extra two weeks to do this and those two weeks",
    "start": "2426110",
    "end": "2432170"
  },
  {
    "text": "were basically spent just making sure that the migration path going out to production was going to work properly",
    "start": "2432170",
    "end": "2438250"
  },
  {
    "text": "that's incredible two weeks two completely change your route of trust for crypto the last thing as we",
    "start": "2438250",
    "end": "2448620"
  },
  {
    "text": "mentioned before it's orders of magnitude cheaper and enables a lot of additional features most importantly",
    "start": "2448620",
    "end": "2455090"
  },
  {
    "text": "separation of duties if you're going to",
    "start": "2455090",
    "end": "2460860"
  },
  {
    "start": "2458000",
    "end": "2458000"
  },
  {
    "text": "roll out kms make sure you need to deal with keys in the first place put thought",
    "start": "2460860",
    "end": "2468930"
  },
  {
    "text": "into your encryption context because it's very hard to change later remember",
    "start": "2468930",
    "end": "2473970"
  },
  {
    "text": "that the data is that's in there needs to be immutable and think about identification and classification",
    "start": "2473970",
    "end": "2481490"
  },
  {
    "text": "reconcile your cloud trail logs with your application logs if you're not",
    "start": "2483350",
    "end": "2488640"
  },
  {
    "text": "actually looking at the data that's coming out of cloud trail you don't know if anyone is trying to do something",
    "start": "2488640",
    "end": "2493800"
  },
  {
    "text": "malicious with your key server tune the",
    "start": "2493800",
    "end": "2498870"
  },
  {
    "text": "SDK for time outs and definitely for retries and lastly consider an extended",
    "start": "2498870",
    "end": "2505530"
  },
  {
    "text": "key hierarchy if you want some of these benefits we've talked about like avoiding vendor lock-in enabling",
    "start": "2505530",
    "end": "2512070"
  },
  {
    "text": "multiple routes of trust but remember that it does come with some additional complexity if you have a multi service",
    "start": "2512070",
    "end": "2519060"
  },
  {
    "text": "model lastly there's a few resources",
    "start": "2519060",
    "end": "2524790"
  },
  {
    "text": "that were pretty helpful along the way the first one gives you some information about permission modeling the second one",
    "start": "2524790",
    "end": "2531810"
  },
  {
    "text": "is that white paper I was talking about with details for kms and the final one is helpful when you start to get to",
    "start": "2531810",
    "end": "2537750"
  },
  {
    "text": "coding thanks everyone please remember",
    "start": "2537750",
    "end": "2543120"
  },
  {
    "text": "to fill out your evaluations I want to give a shout out to our team real quick of Cobie and Paul Newman who were the",
    "start": "2543120",
    "end": "2550440"
  },
  {
    "text": "other members of that hackathon team and brains behind this thank you so much for your time",
    "start": "2550440",
    "end": "2557450"
  }
]