[
  {
    "start": "0",
    "end": "228000"
  },
  {
    "text": "hello my name is rajesh francis and i'm",
    "start": "480",
    "end": "2639"
  },
  {
    "text": "part of the solutions architect team at",
    "start": "2639",
    "end": "4160"
  },
  {
    "text": "aws",
    "start": "4160",
    "end": "5200"
  },
  {
    "text": "in this demo we will see how amazon",
    "start": "5200",
    "end": "6960"
  },
  {
    "text": "redshift data sharing feature",
    "start": "6960",
    "end": "8720"
  },
  {
    "text": "can be used to build a multi-tenant",
    "start": "8720",
    "end": "10559"
  },
  {
    "text": "storage architecture for analytics as a",
    "start": "10559",
    "end": "12559"
  },
  {
    "text": "service use case",
    "start": "12559",
    "end": "14559"
  },
  {
    "text": "we also have other demo videos for use",
    "start": "14559",
    "end": "16640"
  },
  {
    "text": "cases like etl versus bi workload",
    "start": "16640",
    "end": "18480"
  },
  {
    "text": "separation",
    "start": "18480",
    "end": "19439"
  },
  {
    "text": "and i encourage you to watch those",
    "start": "19439",
    "end": "21039"
  },
  {
    "text": "videos as well",
    "start": "21039",
    "end": "22480"
  },
  {
    "text": "amazon redshift now supports a secure",
    "start": "22480",
    "end": "24880"
  },
  {
    "text": "and easy way to share data across",
    "start": "24880",
    "end": "26560"
  },
  {
    "text": "redshift clusters",
    "start": "26560",
    "end": "27680"
  },
  {
    "text": "within the same or different aws",
    "start": "27680",
    "end": "29519"
  },
  {
    "text": "accounts",
    "start": "29519",
    "end": "30880"
  },
  {
    "text": "if you're a software service provider",
    "start": "30880",
    "end": "32800"
  },
  {
    "text": "offering subscription-based analytics to",
    "start": "32800",
    "end": "34960"
  },
  {
    "text": "either external or internal customers",
    "start": "34960",
    "end": "37600"
  },
  {
    "text": "you can implement a single tenant",
    "start": "37600",
    "end": "39360"
  },
  {
    "text": "or a multi-tenant architecture single",
    "start": "39360",
    "end": "41520"
  },
  {
    "text": "tenancy means",
    "start": "41520",
    "end": "42399"
  },
  {
    "text": "each cluster holds data for a single",
    "start": "42399",
    "end": "44399"
  },
  {
    "text": "tenant or consumer",
    "start": "44399",
    "end": "45680"
  },
  {
    "text": "and there is really no sharing of",
    "start": "45680",
    "end": "46800"
  },
  {
    "text": "resources whereas multi-tenancy means a",
    "start": "46800",
    "end": "49120"
  },
  {
    "text": "single instance of software and its",
    "start": "49120",
    "end": "50640"
  },
  {
    "text": "supporting infrastructure",
    "start": "50640",
    "end": "52079"
  },
  {
    "text": "is shared to serve multiple tenants or",
    "start": "52079",
    "end": "53920"
  },
  {
    "text": "consumers with a multi-tenant",
    "start": "53920",
    "end": "55760"
  },
  {
    "text": "architecture",
    "start": "55760",
    "end": "56800"
  },
  {
    "text": "you can build a cost efficient solution",
    "start": "56800",
    "end": "58640"
  },
  {
    "text": "by centralizing storage",
    "start": "58640",
    "end": "60559"
  },
  {
    "text": "and simplifying the etl processes",
    "start": "60559",
    "end": "63440"
  },
  {
    "text": "however you have to constantly balance",
    "start": "63440",
    "end": "65518"
  },
  {
    "text": "between cost",
    "start": "65519",
    "end": "66640"
  },
  {
    "text": "and providing a better user experience",
    "start": "66640",
    "end": "68479"
  },
  {
    "text": "for your customers",
    "start": "68479",
    "end": "71040"
  },
  {
    "text": "with data sharing amazon redshift",
    "start": "71040",
    "end": "73040"
  },
  {
    "text": "provides the flexibility to store the",
    "start": "73040",
    "end": "74720"
  },
  {
    "text": "data in a multi-tenant data model",
    "start": "74720",
    "end": "76640"
  },
  {
    "text": "in a single producer cluster while",
    "start": "76640",
    "end": "79520"
  },
  {
    "text": "provisioning additional consumer",
    "start": "79520",
    "end": "80799"
  },
  {
    "text": "clusters as required",
    "start": "80799",
    "end": "82720"
  },
  {
    "text": "this would mean with fewer clusters you",
    "start": "82720",
    "end": "84640"
  },
  {
    "text": "can meet the performance requirements of",
    "start": "84640",
    "end": "86159"
  },
  {
    "text": "your customers",
    "start": "86159",
    "end": "87200"
  },
  {
    "text": "and optimize your cost data sharing is",
    "start": "87200",
    "end": "90479"
  },
  {
    "text": "live",
    "start": "90479",
    "end": "91040"
  },
  {
    "text": "without movement and the producer can",
    "start": "91040",
    "end": "93600"
  },
  {
    "text": "monitor",
    "start": "93600",
    "end": "94240"
  },
  {
    "text": "and track usage of the data by the",
    "start": "94240",
    "end": "96159"
  },
  {
    "text": "consumer clusters",
    "start": "96159",
    "end": "98000"
  },
  {
    "text": "for this demo we will use a simple data",
    "start": "98000",
    "end": "100400"
  },
  {
    "text": "model",
    "start": "100400",
    "end": "101040"
  },
  {
    "text": "which is one dimension table which is",
    "start": "101040",
    "end": "103439"
  },
  {
    "text": "dim customer",
    "start": "103439",
    "end": "104720"
  },
  {
    "text": "and one fact table fact sales",
    "start": "104720",
    "end": "107920"
  },
  {
    "text": "there are three different multi-tenant",
    "start": "107920",
    "end": "109360"
  },
  {
    "text": "storage strategies you can choose to",
    "start": "109360",
    "end": "110720"
  },
  {
    "text": "implement",
    "start": "110720",
    "end": "111680"
  },
  {
    "text": "pool bridge and silo models in all of",
    "start": "111680",
    "end": "114640"
  },
  {
    "text": "these models you will ingest and store",
    "start": "114640",
    "end": "116159"
  },
  {
    "text": "data into the producer",
    "start": "116159",
    "end": "117600"
  },
  {
    "text": "and share this data with one or more",
    "start": "117600",
    "end": "119439"
  },
  {
    "text": "consumer clusters",
    "start": "119439",
    "end": "121200"
  },
  {
    "text": "without data sharing the bi workloads",
    "start": "121200",
    "end": "123280"
  },
  {
    "text": "and etl workloads for multiple tenants",
    "start": "123280",
    "end": "125759"
  },
  {
    "text": "compete for resources from the same",
    "start": "125759",
    "end": "127280"
  },
  {
    "text": "cluster",
    "start": "127280",
    "end": "128800"
  },
  {
    "text": "with data sharing etl workloads can be",
    "start": "128800",
    "end": "131039"
  },
  {
    "text": "isolated from bi workloads",
    "start": "131039",
    "end": "132800"
  },
  {
    "text": "and you also have the option of scaling",
    "start": "132800",
    "end": "134640"
  },
  {
    "text": "your consumers as required",
    "start": "134640",
    "end": "136319"
  },
  {
    "text": "either with one consumer cluster per",
    "start": "136319",
    "end": "138080"
  },
  {
    "text": "tenant or by grouping multiple tenants",
    "start": "138080",
    "end": "140480"
  },
  {
    "text": "under one consumer cluster",
    "start": "140480",
    "end": "142480"
  },
  {
    "text": "the pool model represents an all-in",
    "start": "142480",
    "end": "144560"
  },
  {
    "text": "multi-tenant model",
    "start": "144560",
    "end": "145840"
  },
  {
    "text": "where tenants share all storage",
    "start": "145840",
    "end": "147680"
  },
  {
    "text": "constructs",
    "start": "147680",
    "end": "148879"
  },
  {
    "text": "tenant data is placed in a common",
    "start": "148879",
    "end": "150720"
  },
  {
    "text": "database and all the tenants",
    "start": "150720",
    "end": "152800"
  },
  {
    "text": "share the same database and the schema",
    "start": "152800",
    "end": "156080"
  },
  {
    "text": "with bridge model tenant data is stored",
    "start": "156080",
    "end": "158239"
  },
  {
    "text": "in a single database",
    "start": "158239",
    "end": "159440"
  },
  {
    "text": "but each one of them have their own",
    "start": "159440",
    "end": "161519"
  },
  {
    "text": "schemas",
    "start": "161519",
    "end": "162879"
  },
  {
    "text": "with silo model each of the tenants data",
    "start": "162879",
    "end": "165519"
  },
  {
    "text": "is stored in its own database",
    "start": "165519",
    "end": "167440"
  },
  {
    "text": "sharing only the cluster resources and",
    "start": "167440",
    "end": "169840"
  },
  {
    "text": "we will cover each one of these in the",
    "start": "169840",
    "end": "171599"
  },
  {
    "text": "demo",
    "start": "171599",
    "end": "172319"
  },
  {
    "text": "first let us look at how you can",
    "start": "172319",
    "end": "173599"
  },
  {
    "text": "implement a pool model",
    "start": "173599",
    "end": "175360"
  },
  {
    "text": "this requires the introduction of an",
    "start": "175360",
    "end": "176560"
  },
  {
    "text": "additional column called tenant id in",
    "start": "176560",
    "end": "178720"
  },
  {
    "text": "each table",
    "start": "178720",
    "end": "179599"
  },
  {
    "text": "which is used to control access to",
    "start": "179599",
    "end": "181360"
  },
  {
    "text": "individual tenant data",
    "start": "181360",
    "end": "183360"
  },
  {
    "text": "the current namespace system variable",
    "start": "183360",
    "end": "185280"
  },
  {
    "text": "will have the namespace of the consumer",
    "start": "185280",
    "end": "186959"
  },
  {
    "text": "cluster",
    "start": "186959",
    "end": "187680"
  },
  {
    "text": "from which the queries are being",
    "start": "187680",
    "end": "188879"
  },
  {
    "text": "triggered so we will store this",
    "start": "188879",
    "end": "190959"
  },
  {
    "text": "namespace and the corresponding tenant",
    "start": "190959",
    "end": "192800"
  },
  {
    "text": "id",
    "start": "192800",
    "end": "193200"
  },
  {
    "text": "in the tenant table and reference this",
    "start": "193200",
    "end": "195440"
  },
  {
    "text": "namespace in a view",
    "start": "195440",
    "end": "196800"
  },
  {
    "text": "to restrict access to relevant data for",
    "start": "196800",
    "end": "199360"
  },
  {
    "text": "the consumers",
    "start": "199360",
    "end": "200720"
  },
  {
    "text": "data can be shared in just three simple",
    "start": "200720",
    "end": "202560"
  },
  {
    "text": "steps once we have the database tables",
    "start": "202560",
    "end": "204400"
  },
  {
    "text": "and views created",
    "start": "204400",
    "end": "206000"
  },
  {
    "text": "first we create a data share which is a",
    "start": "206000",
    "end": "208720"
  },
  {
    "text": "new metadata object we introduce",
    "start": "208720",
    "end": "211519"
  },
  {
    "text": "then we add the objects which is schemas",
    "start": "211519",
    "end": "214319"
  },
  {
    "text": "tables or views",
    "start": "214319",
    "end": "215440"
  },
  {
    "text": "to this datasheet we just created",
    "start": "215440",
    "end": "217920"
  },
  {
    "text": "finally we grant",
    "start": "217920",
    "end": "219040"
  },
  {
    "text": "usage on the data share to external",
    "start": "219040",
    "end": "221519"
  },
  {
    "text": "clusters",
    "start": "221519",
    "end": "222480"
  },
  {
    "text": "using their namespace or to an external",
    "start": "222480",
    "end": "226080"
  },
  {
    "text": "account now we'll see a demo of the pool",
    "start": "226080",
    "end": "230159"
  },
  {
    "text": "model",
    "start": "230159",
    "end": "232239"
  },
  {
    "text": "the first step is to create the retrieve",
    "start": "232239",
    "end": "234000"
  },
  {
    "text": "clusters here i've created three",
    "start": "234000",
    "end": "236000"
  },
  {
    "text": "clusters one for producer and two",
    "start": "236000",
    "end": "237599"
  },
  {
    "text": "consumers c1 and c2",
    "start": "237599",
    "end": "239439"
  },
  {
    "text": "i've used ra3 4x large for both producer",
    "start": "239439",
    "end": "242239"
  },
  {
    "text": "and consumer but you can create",
    "start": "242239",
    "end": "244159"
  },
  {
    "text": "different types of ra3 node types for",
    "start": "244159",
    "end": "246560"
  },
  {
    "text": "producer and consumer",
    "start": "246560",
    "end": "248799"
  },
  {
    "text": "i will also note down the name space of",
    "start": "248799",
    "end": "250319"
  },
  {
    "text": "the clusters which we will use later to",
    "start": "250319",
    "end": "252400"
  },
  {
    "text": "share data",
    "start": "252400",
    "end": "253760"
  },
  {
    "text": "now that we have created the rich of",
    "start": "253760",
    "end": "255200"
  },
  {
    "text": "clusters one for producer",
    "start": "255200",
    "end": "257120"
  },
  {
    "text": "and two consumers now we can go ahead",
    "start": "257120",
    "end": "259199"
  },
  {
    "text": "and create the database objects and",
    "start": "259199",
    "end": "261280"
  },
  {
    "text": "share",
    "start": "261280",
    "end": "261759"
  },
  {
    "text": "from the producer to the consumer now",
    "start": "261759",
    "end": "264080"
  },
  {
    "text": "for this i'm using a sql client called",
    "start": "264080",
    "end": "266080"
  },
  {
    "text": "dbeaver",
    "start": "266080",
    "end": "266800"
  },
  {
    "text": "and have established some connections",
    "start": "266800",
    "end": "268320"
  },
  {
    "text": "three connections one to producer and",
    "start": "268320",
    "end": "270080"
  },
  {
    "text": "two to consumer",
    "start": "270080",
    "end": "271600"
  },
  {
    "text": "we will connect to the producer cluster",
    "start": "271600",
    "end": "273199"
  },
  {
    "text": "first and set up the data that we will",
    "start": "273199",
    "end": "275120"
  },
  {
    "text": "share with the consumers",
    "start": "275120",
    "end": "277520"
  },
  {
    "text": "connecting to the producer we will",
    "start": "277520",
    "end": "279759"
  },
  {
    "text": "create a schema",
    "start": "279759",
    "end": "280880"
  },
  {
    "text": "sales and three tables tenant customer",
    "start": "280880",
    "end": "283120"
  },
  {
    "text": "and dimension",
    "start": "283120",
    "end": "285680"
  },
  {
    "text": "the tenant table will hold the details",
    "start": "288320",
    "end": "290000"
  },
  {
    "text": "of all the clusters with their",
    "start": "290000",
    "end": "291199"
  },
  {
    "text": "respective name space",
    "start": "291199",
    "end": "292880"
  },
  {
    "text": "note we have a tenant id column in the",
    "start": "292880",
    "end": "295759"
  },
  {
    "text": "other",
    "start": "295759",
    "end": "296000"
  },
  {
    "text": "tables to identify data for each tenant",
    "start": "296000",
    "end": "299199"
  },
  {
    "text": "now we will injest some sample data",
    "start": "299199",
    "end": "302800"
  },
  {
    "text": "into all the three tables note that we",
    "start": "302800",
    "end": "305360"
  },
  {
    "text": "are setting up data for two tenants",
    "start": "305360",
    "end": "306960"
  },
  {
    "text": "tenant one and tenant two with their",
    "start": "306960",
    "end": "308720"
  },
  {
    "text": "corresponding tenant ids",
    "start": "308720",
    "end": "310320"
  },
  {
    "text": "inserted into the other tables as well",
    "start": "310320",
    "end": "314320"
  },
  {
    "text": "and this being a pool model we will not",
    "start": "319680",
    "end": "322000"
  },
  {
    "text": "share the data tables",
    "start": "322000",
    "end": "323440"
  },
  {
    "text": "directly with the consumer we will",
    "start": "323440",
    "end": "324960"
  },
  {
    "text": "rather create",
    "start": "324960",
    "end": "326479"
  },
  {
    "text": "views on top of these tables and share",
    "start": "326479",
    "end": "328800"
  },
  {
    "text": "the views",
    "start": "328800",
    "end": "329680"
  },
  {
    "text": "to restrict access only for the consumer",
    "start": "329680",
    "end": "331840"
  },
  {
    "text": "that has access to",
    "start": "331840",
    "end": "334240"
  },
  {
    "text": "now if you look at the views it has a",
    "start": "334240",
    "end": "336080"
  },
  {
    "text": "filter called current namespace the",
    "start": "336080",
    "end": "338000"
  },
  {
    "text": "current namespace will be used",
    "start": "338000",
    "end": "339759"
  },
  {
    "text": "to filter the records appropriate for",
    "start": "339759",
    "end": "341759"
  },
  {
    "text": "the consumer that's querying this data",
    "start": "341759",
    "end": "344320"
  },
  {
    "text": "now we have a schema called sales under",
    "start": "344320",
    "end": "346720"
  },
  {
    "text": "development database",
    "start": "346720",
    "end": "348080"
  },
  {
    "text": "and three tables customer sales and",
    "start": "348080",
    "end": "350840"
  },
  {
    "text": "tenant",
    "start": "350840",
    "end": "352320"
  },
  {
    "text": "now we're ready to share this data with",
    "start": "352320",
    "end": "354720"
  },
  {
    "text": "the consumer clusters",
    "start": "354720",
    "end": "356400"
  },
  {
    "text": "for that we need to create a data share",
    "start": "356400",
    "end": "358720"
  },
  {
    "text": "we'll go ahead and create",
    "start": "358720",
    "end": "359680"
  },
  {
    "text": "a sales share",
    "start": "359680",
    "end": "362639"
  },
  {
    "text": "and once we create the data share we can",
    "start": "363280",
    "end": "365280"
  },
  {
    "text": "go ahead and alter the data share and",
    "start": "365280",
    "end": "367440"
  },
  {
    "text": "add",
    "start": "367440",
    "end": "367919"
  },
  {
    "text": "database objects to that data share here",
    "start": "367919",
    "end": "370880"
  },
  {
    "text": "we'll go ahead and add schema sales",
    "start": "370880",
    "end": "373120"
  },
  {
    "text": "and the tables that we created or rather",
    "start": "373120",
    "end": "376240"
  },
  {
    "text": "the views that we created like i said we",
    "start": "376240",
    "end": "377759"
  },
  {
    "text": "will not be",
    "start": "377759",
    "end": "378960"
  },
  {
    "text": "sharing the tables directly with the",
    "start": "378960",
    "end": "380319"
  },
  {
    "text": "consumer because this is a pool model",
    "start": "380319",
    "end": "382160"
  },
  {
    "text": "and it has",
    "start": "382160",
    "end": "382960"
  },
  {
    "text": "all the data sets from multiple tenants",
    "start": "382960",
    "end": "385360"
  },
  {
    "text": "so we are actually sharing the view",
    "start": "385360",
    "end": "387440"
  },
  {
    "text": "customer view sales and customer sales",
    "start": "387440",
    "end": "391520"
  },
  {
    "text": "once we create the data share and added",
    "start": "392720",
    "end": "396160"
  },
  {
    "text": "the objects to the share we can grant",
    "start": "396160",
    "end": "398720"
  },
  {
    "text": "you can",
    "start": "398720",
    "end": "399199"
  },
  {
    "text": "grant access to that data share for the",
    "start": "399199",
    "end": "401199"
  },
  {
    "text": "consumer using the namespace",
    "start": "401199",
    "end": "403680"
  },
  {
    "text": "the namespace of the consumer can be got",
    "start": "403680",
    "end": "405759"
  },
  {
    "text": "from",
    "start": "405759",
    "end": "406960"
  },
  {
    "text": "the cluster itself if you go to the",
    "start": "406960",
    "end": "408479"
  },
  {
    "text": "console and the cluster you will be able",
    "start": "408479",
    "end": "411039"
  },
  {
    "text": "to see",
    "start": "411039",
    "end": "411599"
  },
  {
    "text": "the cluster namespace so we are actually",
    "start": "411599",
    "end": "413680"
  },
  {
    "text": "sharing the",
    "start": "413680",
    "end": "414720"
  },
  {
    "text": "data share with the consumer using the",
    "start": "414720",
    "end": "417120"
  },
  {
    "text": "namespace of the",
    "start": "417120",
    "end": "418000"
  },
  {
    "text": "consumer so we'll execute the grant",
    "start": "418000",
    "end": "421199"
  },
  {
    "text": "usage",
    "start": "421199",
    "end": "423280"
  },
  {
    "text": "and once we do that we can look at all",
    "start": "423280",
    "end": "425440"
  },
  {
    "text": "the data shares that we",
    "start": "425440",
    "end": "426560"
  },
  {
    "text": "have so we've created a new share",
    "start": "426560",
    "end": "430880"
  },
  {
    "text": "sale share and that's what we are seeing",
    "start": "430880",
    "end": "433039"
  },
  {
    "text": "by using show data shares",
    "start": "433039",
    "end": "435039"
  },
  {
    "text": "you can also use other svp tables or",
    "start": "435039",
    "end": "438639"
  },
  {
    "text": "metadata tables like svpp data shares",
    "start": "438639",
    "end": "440560"
  },
  {
    "text": "spv datashare objects to look at",
    "start": "440560",
    "end": "442240"
  },
  {
    "text": "what objects are there in individual",
    "start": "442240",
    "end": "445280"
  },
  {
    "text": "data shares in this case we have three",
    "start": "445280",
    "end": "448400"
  },
  {
    "text": "different",
    "start": "448400",
    "end": "449039"
  },
  {
    "text": "views and one schema for this data share",
    "start": "449039",
    "end": "452080"
  },
  {
    "text": "now to access the data shares that were",
    "start": "452080",
    "end": "453840"
  },
  {
    "text": "shared by the producer cluster from the",
    "start": "453840",
    "end": "456000"
  },
  {
    "text": "consumer cluster",
    "start": "456000",
    "end": "457280"
  },
  {
    "text": "you log into the consumer cluster now",
    "start": "457280",
    "end": "459280"
  },
  {
    "text": "this is another login that i've created",
    "start": "459280",
    "end": "461599"
  },
  {
    "text": "and you can view the data shares that",
    "start": "461599",
    "end": "464720"
  },
  {
    "text": "are available using show data shares now",
    "start": "464720",
    "end": "466879"
  },
  {
    "text": "i see",
    "start": "466879",
    "end": "467280"
  },
  {
    "text": "sales share is available from the",
    "start": "467280",
    "end": "468879"
  },
  {
    "text": "consumer",
    "start": "468879",
    "end": "470879"
  },
  {
    "text": "now you create an external database from",
    "start": "470879",
    "end": "473840"
  },
  {
    "text": "the consumer cluster",
    "start": "473840",
    "end": "475120"
  },
  {
    "text": "to be able to access the database",
    "start": "475120",
    "end": "477360"
  },
  {
    "text": "objects that was shared by the producer",
    "start": "477360",
    "end": "479919"
  },
  {
    "text": "now i created a database called sales",
    "start": "479919",
    "end": "481520"
  },
  {
    "text": "dbc one",
    "start": "481520",
    "end": "483120"
  },
  {
    "text": "and i can access the view customer sales",
    "start": "483120",
    "end": "486240"
  },
  {
    "text": "from",
    "start": "486240",
    "end": "487599"
  },
  {
    "text": "the consumer using a three-part notation",
    "start": "487599",
    "end": "490720"
  },
  {
    "text": "database dot schema dot view name",
    "start": "490720",
    "end": "494879"
  },
  {
    "text": "now as you can see i would only see the",
    "start": "494879",
    "end": "497199"
  },
  {
    "text": "values or the records that are available",
    "start": "497199",
    "end": "499199"
  },
  {
    "text": "for consumer c1",
    "start": "499199",
    "end": "501360"
  },
  {
    "text": "based on the tenant on namespace",
    "start": "501360",
    "end": "504400"
  },
  {
    "text": "now if i log into consumer 10 and 2 i",
    "start": "504400",
    "end": "507280"
  },
  {
    "text": "would see the data that's",
    "start": "507280",
    "end": "508560"
  },
  {
    "text": "accessible by 10 and 2 and not",
    "start": "508560",
    "end": "510240"
  },
  {
    "text": "everything so as you can see here i only",
    "start": "510240",
    "end": "512080"
  },
  {
    "text": "see the data from",
    "start": "512080",
    "end": "513839"
  },
  {
    "text": "10 and 2. now",
    "start": "513839",
    "end": "516959"
  },
  {
    "text": "if you want to access a two part",
    "start": "516959",
    "end": "518320"
  },
  {
    "text": "notation there is an optional object",
    "start": "518320",
    "end": "520240"
  },
  {
    "text": "that you can create",
    "start": "520240",
    "end": "521839"
  },
  {
    "text": "create an external schema sales schema",
    "start": "521839",
    "end": "524480"
  },
  {
    "text": "and then you can access using",
    "start": "524480",
    "end": "526480"
  },
  {
    "text": "a two-part notation which is sales",
    "start": "526480",
    "end": "528080"
  },
  {
    "text": "schema dot view name",
    "start": "528080",
    "end": "531200"
  },
  {
    "start": "531000",
    "end": "866000"
  },
  {
    "text": "now we'll see a demo of the bridge model",
    "start": "531600",
    "end": "534800"
  },
  {
    "text": "for the bridge model we will create",
    "start": "534800",
    "end": "536800"
  },
  {
    "text": "separate schemas for each tenant",
    "start": "536800",
    "end": "538640"
  },
  {
    "text": "and we will store data for each of the",
    "start": "538640",
    "end": "540320"
  },
  {
    "text": "tenants in its own schema",
    "start": "540320",
    "end": "542399"
  },
  {
    "text": "then we will share the tenant 1 schema",
    "start": "542399",
    "end": "544640"
  },
  {
    "text": "with consumer 1",
    "start": "544640",
    "end": "545839"
  },
  {
    "text": "and 10 into schema with consumer too so",
    "start": "545839",
    "end": "548640"
  },
  {
    "text": "let's start by creating the schemas",
    "start": "548640",
    "end": "550320"
  },
  {
    "text": "tenant one and tenant two",
    "start": "550320",
    "end": "553600"
  },
  {
    "text": "then we can create the tables under each",
    "start": "554000",
    "end": "555600"
  },
  {
    "text": "of the schemas so let's create",
    "start": "555600",
    "end": "557200"
  },
  {
    "text": "the tenant one customer and tenant one",
    "start": "557200",
    "end": "559279"
  },
  {
    "text": "sales and the tenant one schema",
    "start": "559279",
    "end": "562720"
  },
  {
    "text": "we'll set up some sample data",
    "start": "562720",
    "end": "566079"
  },
  {
    "text": "now we'll create tables in 10 and 2",
    "start": "567120",
    "end": "569839"
  },
  {
    "text": "schema",
    "start": "569839",
    "end": "570480"
  },
  {
    "text": "the same table structures and",
    "start": "570480",
    "end": "573680"
  },
  {
    "text": "let's also set up some data in 10n2",
    "start": "573680",
    "end": "575760"
  },
  {
    "text": "schema",
    "start": "575760",
    "end": "577600"
  },
  {
    "text": "note you can use in i'm using insert",
    "start": "577600",
    "end": "579279"
  },
  {
    "text": "statement here but you can also use",
    "start": "579279",
    "end": "581040"
  },
  {
    "text": "you know copy command which is the",
    "start": "581040",
    "end": "582160"
  },
  {
    "text": "recommended approach when you're",
    "start": "582160",
    "end": "583600"
  },
  {
    "text": "actually doing your",
    "start": "583600",
    "end": "584880"
  },
  {
    "text": "testing or pocs",
    "start": "584880",
    "end": "588240"
  },
  {
    "text": "so now that we have two schemas we will",
    "start": "588240",
    "end": "590800"
  },
  {
    "text": "go ahead and see those schemas here",
    "start": "590800",
    "end": "592800"
  },
  {
    "text": "this is the producer cluster by the way",
    "start": "592800",
    "end": "594800"
  },
  {
    "text": "and we have two schemas tenant one i can",
    "start": "594800",
    "end": "597040"
  },
  {
    "text": "also see the tables customer and sales",
    "start": "597040",
    "end": "599120"
  },
  {
    "text": "and the tenant one and similarly tenant",
    "start": "599120",
    "end": "600480"
  },
  {
    "text": "two",
    "start": "600480",
    "end": "602000"
  },
  {
    "text": "now we are ready to create the data",
    "start": "602000",
    "end": "603600"
  },
  {
    "text": "shares and grant usage on the data",
    "start": "603600",
    "end": "605920"
  },
  {
    "text": "shares to",
    "start": "605920",
    "end": "606800"
  },
  {
    "text": "the consumer clusters let's go ahead and",
    "start": "606800",
    "end": "609279"
  },
  {
    "text": "create the data share",
    "start": "609279",
    "end": "610320"
  },
  {
    "text": "for tenant one share and we can",
    "start": "610320",
    "end": "613600"
  },
  {
    "text": "add the schema and all the tables that",
    "start": "613600",
    "end": "615839"
  },
  {
    "text": "we just created",
    "start": "615839",
    "end": "616800"
  },
  {
    "text": "to this data share called tenant one",
    "start": "616800",
    "end": "618720"
  },
  {
    "text": "share",
    "start": "618720",
    "end": "620480"
  },
  {
    "text": "similarly we can also create another",
    "start": "620480",
    "end": "622480"
  },
  {
    "text": "data share which is 10 and 2",
    "start": "622480",
    "end": "624800"
  },
  {
    "text": "and we can add the tables created under",
    "start": "624800",
    "end": "626959"
  },
  {
    "text": "10 and 2 schema",
    "start": "626959",
    "end": "628160"
  },
  {
    "text": "to this data share",
    "start": "628160",
    "end": "632000"
  },
  {
    "text": "so we have two data shares now so now we",
    "start": "632000",
    "end": "634399"
  },
  {
    "text": "can share",
    "start": "634399",
    "end": "635360"
  },
  {
    "text": "tenant one data share to consumer one",
    "start": "635360",
    "end": "638399"
  },
  {
    "text": "and ten into data share to consumer two",
    "start": "638399",
    "end": "641760"
  },
  {
    "text": "for that we've already created the",
    "start": "641760",
    "end": "643440"
  },
  {
    "text": "consumer clusters consumer one and",
    "start": "643440",
    "end": "645040"
  },
  {
    "text": "consumer two",
    "start": "645040",
    "end": "646240"
  },
  {
    "text": "we need to pick up the namespace of the",
    "start": "646240",
    "end": "648399"
  },
  {
    "text": "consumer clusters to be able to",
    "start": "648399",
    "end": "650399"
  },
  {
    "text": "share from the producer cluster so the",
    "start": "650399",
    "end": "652320"
  },
  {
    "text": "consumer cluster",
    "start": "652320",
    "end": "653519"
  },
  {
    "text": "namespace can be found in the console in",
    "start": "653519",
    "end": "655920"
  },
  {
    "text": "this section",
    "start": "655920",
    "end": "657760"
  },
  {
    "text": "or you can execute a select current",
    "start": "657760",
    "end": "660079"
  },
  {
    "text": "namespace",
    "start": "660079",
    "end": "660880"
  },
  {
    "text": "in the sql client to get the namespace",
    "start": "660880",
    "end": "664240"
  },
  {
    "text": "of the consumer",
    "start": "664240",
    "end": "666160"
  },
  {
    "text": "you need to log into the consumer",
    "start": "666160",
    "end": "667440"
  },
  {
    "text": "cluster let's log in to consumer tenant",
    "start": "667440",
    "end": "669360"
  },
  {
    "text": "one",
    "start": "669360",
    "end": "670079"
  },
  {
    "text": "and if you hit select current namespace",
    "start": "670079",
    "end": "672320"
  },
  {
    "text": "you will get the current name space of",
    "start": "672320",
    "end": "674079"
  },
  {
    "text": "the consumer so now that we have the",
    "start": "674079",
    "end": "676560"
  },
  {
    "text": "consumer clusters namespace we can go",
    "start": "676560",
    "end": "678240"
  },
  {
    "text": "back to the producer cluster",
    "start": "678240",
    "end": "680079"
  },
  {
    "text": "and grant usage on that data share",
    "start": "680079",
    "end": "682959"
  },
  {
    "text": "tenant one share to the",
    "start": "682959",
    "end": "684399"
  },
  {
    "text": "consumer cluster one",
    "start": "684399",
    "end": "689839"
  },
  {
    "text": "next we can grant usage on the 10n2",
    "start": "691360",
    "end": "694320"
  },
  {
    "text": "share",
    "start": "694320",
    "end": "694800"
  },
  {
    "text": "to consumer cluster 2. i've already got",
    "start": "694800",
    "end": "697680"
  },
  {
    "text": "the namespace of 10n2",
    "start": "697680",
    "end": "699360"
  },
  {
    "text": "or the consumer cluster 2 here so we can",
    "start": "699360",
    "end": "701920"
  },
  {
    "text": "just execute this statement",
    "start": "701920",
    "end": "704000"
  },
  {
    "text": "so now we have already created the",
    "start": "704000",
    "end": "706959"
  },
  {
    "text": "schema",
    "start": "706959",
    "end": "707519"
  },
  {
    "text": "the tables and we have created a data",
    "start": "707519",
    "end": "709920"
  },
  {
    "text": "share and we've also granted",
    "start": "709920",
    "end": "711839"
  },
  {
    "text": "usage on the data share to the consumer",
    "start": "711839",
    "end": "714839"
  },
  {
    "text": "clusters we can look at",
    "start": "714839",
    "end": "717360"
  },
  {
    "text": "the data shares available using svb data",
    "start": "717360",
    "end": "720000"
  },
  {
    "text": "shares",
    "start": "720000",
    "end": "720560"
  },
  {
    "text": "selecting star from svb data shares or",
    "start": "720560",
    "end": "722959"
  },
  {
    "text": "you can also",
    "start": "722959",
    "end": "724399"
  },
  {
    "text": "show data shares that will also show you",
    "start": "724399",
    "end": "728240"
  },
  {
    "text": "the data shares available and if you",
    "start": "728240",
    "end": "731519"
  },
  {
    "text": "want to look at",
    "start": "731519",
    "end": "732240"
  },
  {
    "text": "the objects within the data share you",
    "start": "732240",
    "end": "733920"
  },
  {
    "text": "can execute select svb",
    "start": "733920",
    "end": "736000"
  },
  {
    "text": "data share objects like start from suv",
    "start": "736000",
    "end": "737920"
  },
  {
    "text": "data share objects",
    "start": "737920",
    "end": "739279"
  },
  {
    "text": "you see the data shares available and",
    "start": "739279",
    "end": "742160"
  },
  {
    "text": "the corresponding",
    "start": "742160",
    "end": "743200"
  },
  {
    "text": "objects within the data share that are",
    "start": "743200",
    "end": "745440"
  },
  {
    "text": "shared to the consumer clusters",
    "start": "745440",
    "end": "748399"
  },
  {
    "text": "now that we have created the data shares",
    "start": "748399",
    "end": "750720"
  },
  {
    "text": "we are ready to access",
    "start": "750720",
    "end": "751839"
  },
  {
    "text": "the data shares from the consumer",
    "start": "751839",
    "end": "753360"
  },
  {
    "text": "cluster and read the data that has been",
    "start": "753360",
    "end": "755120"
  },
  {
    "text": "shared from the producer cluster",
    "start": "755120",
    "end": "757120"
  },
  {
    "text": "so for that let's log into the consumer",
    "start": "757120",
    "end": "759120"
  },
  {
    "text": "cluster from the consumer cluster you",
    "start": "759120",
    "end": "761440"
  },
  {
    "text": "can",
    "start": "761440",
    "end": "761839"
  },
  {
    "text": "look at the data shares available for",
    "start": "761839",
    "end": "763839"
  },
  {
    "text": "the consumer using",
    "start": "763839",
    "end": "764880"
  },
  {
    "text": "show data shares as you can see here the",
    "start": "764880",
    "end": "767600"
  },
  {
    "text": "consumer cluster one which is the tenant",
    "start": "767600",
    "end": "769519"
  },
  {
    "text": "one cluster",
    "start": "769519",
    "end": "770560"
  },
  {
    "text": "can see tenant one share because we",
    "start": "770560",
    "end": "773200"
  },
  {
    "text": "shared",
    "start": "773200",
    "end": "774079"
  },
  {
    "text": "the tenant one schema with consumer one",
    "start": "774079",
    "end": "777440"
  },
  {
    "text": "you can also look at the database",
    "start": "777440",
    "end": "778720"
  },
  {
    "text": "objects that are available",
    "start": "778720",
    "end": "780480"
  },
  {
    "text": "we have access to two tables customer",
    "start": "780480",
    "end": "783040"
  },
  {
    "text": "dimension and sales fact table",
    "start": "783040",
    "end": "784880"
  },
  {
    "text": "and the third one is the schema itself",
    "start": "784880",
    "end": "787760"
  },
  {
    "text": "as a first step to read the data from",
    "start": "787760",
    "end": "789920"
  },
  {
    "text": "the consumer cluster",
    "start": "789920",
    "end": "791760"
  },
  {
    "text": "we need to create a database a local",
    "start": "791760",
    "end": "793680"
  },
  {
    "text": "database from the data share that we",
    "start": "793680",
    "end": "795760"
  },
  {
    "text": "just created in the producer cluster",
    "start": "795760",
    "end": "797920"
  },
  {
    "text": "we'll execute the create database",
    "start": "797920",
    "end": "799519"
  },
  {
    "text": "command",
    "start": "799519",
    "end": "801839"
  },
  {
    "text": "once the database is created from the",
    "start": "802560",
    "end": "804320"
  },
  {
    "text": "data share we can",
    "start": "804320",
    "end": "806160"
  },
  {
    "text": "query the tables in the data share using",
    "start": "806160",
    "end": "809360"
  },
  {
    "text": "a three-part notation",
    "start": "809360",
    "end": "810880"
  },
  {
    "text": "which is the local database that we just",
    "start": "810880",
    "end": "812639"
  },
  {
    "text": "created and the tenant name",
    "start": "812639",
    "end": "814880"
  },
  {
    "text": "and the table name",
    "start": "814880",
    "end": "817760"
  },
  {
    "text": "now as you can see i can access the data",
    "start": "820160",
    "end": "822720"
  },
  {
    "text": "from tenant one",
    "start": "822720",
    "end": "823839"
  },
  {
    "text": "customer now as an optional step",
    "start": "823839",
    "end": "827440"
  },
  {
    "text": "you can also create an external schema",
    "start": "827440",
    "end": "829680"
  },
  {
    "text": "which is a tenant one schema",
    "start": "829680",
    "end": "832000"
  },
  {
    "text": "from the database that we just created",
    "start": "832000",
    "end": "835680"
  },
  {
    "text": "if we do create the schema this will",
    "start": "835680",
    "end": "837519"
  },
  {
    "text": "allow us to use a two-part notation",
    "start": "837519",
    "end": "839360"
  },
  {
    "text": "the schema name the local schema name",
    "start": "839360",
    "end": "841360"
  },
  {
    "text": "dot customer which is the",
    "start": "841360",
    "end": "842959"
  },
  {
    "text": "table name instead of a three-part",
    "start": "842959",
    "end": "845360"
  },
  {
    "text": "notation where it is",
    "start": "845360",
    "end": "846639"
  },
  {
    "text": "database schema and the table name",
    "start": "846639",
    "end": "850800"
  },
  {
    "text": "from the consumer cluster you can in",
    "start": "850800",
    "end": "853040"
  },
  {
    "text": "turn grant access to this",
    "start": "853040",
    "end": "855120"
  },
  {
    "text": "shared data share to other users in the",
    "start": "855120",
    "end": "857680"
  },
  {
    "text": "consumer cluster",
    "start": "857680",
    "end": "858720"
  },
  {
    "text": "by creating a group and assigning users",
    "start": "858720",
    "end": "860880"
  },
  {
    "text": "to the group",
    "start": "860880",
    "end": "861760"
  },
  {
    "text": "and granting access to the shared data",
    "start": "861760",
    "end": "864399"
  },
  {
    "text": "objects to that particular group",
    "start": "864399",
    "end": "866079"
  },
  {
    "start": "866000",
    "end": "1087000"
  },
  {
    "text": "now let us see a demo of the silo model",
    "start": "866079",
    "end": "869040"
  },
  {
    "text": "for the silo model",
    "start": "869040",
    "end": "870320"
  },
  {
    "text": "we will store individual tenant data in",
    "start": "870320",
    "end": "872560"
  },
  {
    "text": "separate databases",
    "start": "872560",
    "end": "873920"
  },
  {
    "text": "as opposed to separate schemas the rest",
    "start": "873920",
    "end": "876000"
  },
  {
    "text": "of the steps are",
    "start": "876000",
    "end": "877199"
  },
  {
    "text": "same as in bridge model for this demo we",
    "start": "877199",
    "end": "880320"
  },
  {
    "text": "will create two databases",
    "start": "880320",
    "end": "882160"
  },
  {
    "text": "tenant one silodb and 10n2 silodb",
    "start": "882160",
    "end": "885920"
  },
  {
    "text": "to store the individual tenant data",
    "start": "885920",
    "end": "889760"
  },
  {
    "text": "first we need to log in as an",
    "start": "889760",
    "end": "891120"
  },
  {
    "text": "administrator using the default",
    "start": "891120",
    "end": "893120"
  },
  {
    "text": "database login so in this connection",
    "start": "893120",
    "end": "896000"
  },
  {
    "text": "we're logging into the default database",
    "start": "896000",
    "end": "897760"
  },
  {
    "text": "dev",
    "start": "897760",
    "end": "898959"
  },
  {
    "text": "and that's where we're going to create",
    "start": "898959",
    "end": "900639"
  },
  {
    "text": "the databases",
    "start": "900639",
    "end": "903360"
  },
  {
    "text": "after we create the databases we need to",
    "start": "906959",
    "end": "909600"
  },
  {
    "text": "log in to the individual databases to",
    "start": "909600",
    "end": "911680"
  },
  {
    "text": "create",
    "start": "911680",
    "end": "912240"
  },
  {
    "text": "the schema tables and the data for each",
    "start": "912240",
    "end": "914560"
  },
  {
    "text": "of those tenants",
    "start": "914560",
    "end": "915760"
  },
  {
    "text": "i have another connection here that's",
    "start": "915760",
    "end": "917839"
  },
  {
    "text": "connecting to the silo",
    "start": "917839",
    "end": "919279"
  },
  {
    "text": "1db",
    "start": "919279",
    "end": "921920"
  },
  {
    "text": "as you can see the database is actually",
    "start": "923279",
    "end": "924720"
  },
  {
    "text": "pointing to tenant one silo db",
    "start": "924720",
    "end": "928879"
  },
  {
    "text": "we'll switch the connection to tenant",
    "start": "929199",
    "end": "931120"
  },
  {
    "text": "one cylodb",
    "start": "931120",
    "end": "932959"
  },
  {
    "text": "and now we're ready to create the schema",
    "start": "932959",
    "end": "934880"
  },
  {
    "text": "tables and insert data into",
    "start": "934880",
    "end": "937519"
  },
  {
    "text": "the tenant one data objects",
    "start": "937519",
    "end": "941839"
  },
  {
    "text": "we're creating the schema",
    "start": "942399",
    "end": "945360"
  },
  {
    "text": "the tables the dimension and the fact",
    "start": "946320",
    "end": "949440"
  },
  {
    "text": "table customer sales",
    "start": "949440",
    "end": "951360"
  },
  {
    "text": "we set up the data using insert",
    "start": "951360",
    "end": "953519"
  },
  {
    "text": "statement typically we do recommend copy",
    "start": "953519",
    "end": "955680"
  },
  {
    "text": "command for inserting data",
    "start": "955680",
    "end": "958480"
  },
  {
    "text": "now that we have the schema tables and",
    "start": "958480",
    "end": "960959"
  },
  {
    "text": "the data ingested",
    "start": "960959",
    "end": "962320"
  },
  {
    "text": "we are ready to share this data so",
    "start": "962320",
    "end": "965440"
  },
  {
    "text": "for that the first step is to create the",
    "start": "965440",
    "end": "967519"
  },
  {
    "text": "data share",
    "start": "967519",
    "end": "970160"
  },
  {
    "text": "we will alter the data share tenant one",
    "start": "971040",
    "end": "973120"
  },
  {
    "text": "silo db share and all",
    "start": "973120",
    "end": "974639"
  },
  {
    "text": "add the schema and the corresponding",
    "start": "974639",
    "end": "976639"
  },
  {
    "text": "tables to this data share",
    "start": "976639",
    "end": "979920"
  },
  {
    "text": "next step is to grant usage on this data",
    "start": "980959",
    "end": "984000"
  },
  {
    "text": "share to",
    "start": "984000",
    "end": "984800"
  },
  {
    "text": "the consumer cluster the consumer tenant",
    "start": "984800",
    "end": "987199"
  },
  {
    "text": "one cluster",
    "start": "987199",
    "end": "989839"
  },
  {
    "text": "now the consumer can see this data",
    "start": "992079",
    "end": "996240"
  },
  {
    "text": "so to look at the shares available that",
    "start": "996240",
    "end": "998320"
  },
  {
    "text": "we have created from the producer",
    "start": "998320",
    "end": "999839"
  },
  {
    "text": "cluster",
    "start": "999839",
    "end": "1000560"
  },
  {
    "text": "you can do execute the command show data",
    "start": "1000560",
    "end": "1003199"
  },
  {
    "text": "shares",
    "start": "1003199",
    "end": "1003680"
  },
  {
    "text": "and now as you can see there's an",
    "start": "1003680",
    "end": "1004959"
  },
  {
    "text": "additional data share object connect one",
    "start": "1004959",
    "end": "1007199"
  },
  {
    "text": "cell or db share",
    "start": "1007199",
    "end": "1008399"
  },
  {
    "text": "that's available for the consumers now",
    "start": "1008399",
    "end": "1011519"
  },
  {
    "text": "that we have created",
    "start": "1011519",
    "end": "1012720"
  },
  {
    "text": "the data shares from the producer",
    "start": "1012720",
    "end": "1014240"
  },
  {
    "text": "cluster the consumer cluster can access",
    "start": "1014240",
    "end": "1017040"
  },
  {
    "text": "this data for that we need to log into",
    "start": "1017040",
    "end": "1020399"
  },
  {
    "text": "the consumer let's log into consumer",
    "start": "1020399",
    "end": "1022320"
  },
  {
    "text": "tenant one and if you describe",
    "start": "1022320",
    "end": "1024400"
  },
  {
    "text": "the data shares by using show data",
    "start": "1024400",
    "end": "1026160"
  },
  {
    "text": "shares you'll see the additional data",
    "start": "1026160",
    "end": "1028000"
  },
  {
    "text": "share",
    "start": "1028000",
    "end": "1028720"
  },
  {
    "text": "and you can also see the list of objects",
    "start": "1028720",
    "end": "1030240"
  },
  {
    "text": "available for this consumer",
    "start": "1030240",
    "end": "1032798"
  },
  {
    "text": "and from a silo db share we have those",
    "start": "1032799",
    "end": "1035280"
  },
  {
    "text": "two tables sales",
    "start": "1035280",
    "end": "1036558"
  },
  {
    "text": "and customer and the schema itself",
    "start": "1036559",
    "end": "1040558"
  },
  {
    "text": "to actually start coding the data we",
    "start": "1041839",
    "end": "1043520"
  },
  {
    "text": "need to create",
    "start": "1043520",
    "end": "1045280"
  },
  {
    "text": "a local database similar to how we",
    "start": "1045280",
    "end": "1047280"
  },
  {
    "text": "created in the bridge model",
    "start": "1047280",
    "end": "1053840"
  },
  {
    "text": "so once the local database is created we",
    "start": "1055520",
    "end": "1057919"
  },
  {
    "text": "can start querying the data using a",
    "start": "1057919",
    "end": "1059840"
  },
  {
    "text": "three-part notation which is",
    "start": "1059840",
    "end": "1061760"
  },
  {
    "text": "the local database that we just created",
    "start": "1061760",
    "end": "1063679"
  },
  {
    "text": "the schema and the table name",
    "start": "1063679",
    "end": "1067840"
  },
  {
    "text": "this brings us to the end of the demo",
    "start": "1071039",
    "end": "1072640"
  },
  {
    "text": "for implementing multi-tenant",
    "start": "1072640",
    "end": "1074080"
  },
  {
    "text": "architecture patterns",
    "start": "1074080",
    "end": "1075280"
  },
  {
    "text": "using amazon redshift data sharing we",
    "start": "1075280",
    "end": "1077760"
  },
  {
    "text": "encourage you to",
    "start": "1077760",
    "end": "1078640"
  },
  {
    "text": "try this new feature for your multi-net",
    "start": "1078640",
    "end": "1080480"
  },
  {
    "text": "workloads and for other use cases",
    "start": "1080480",
    "end": "1082720"
  },
  {
    "text": "including",
    "start": "1082720",
    "end": "1083280"
  },
  {
    "text": "separation of etl versus bi workloads",
    "start": "1083280",
    "end": "1086160"
  },
  {
    "text": "thank you",
    "start": "1086160",
    "end": "1089120"
  }
]