[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "- Hi, my name is Talia Nassi,",
    "start": "5410",
    "end": "7080"
  },
  {
    "text": "and I'm a senior developer\nadvocate here at AWS Serverless.",
    "start": "7080",
    "end": "10720"
  },
  {
    "text": "In this video, you learn how to perform",
    "start": "10720",
    "end": "12660"
  },
  {
    "text": "an event discovery\nexercise with your team.",
    "start": "12660",
    "end": "15610"
  },
  {
    "text": "It shows how to create a schema registry",
    "start": "15610",
    "end": "18100"
  },
  {
    "text": "with Amazon EventBridge and\nhow to represent the event",
    "start": "18100",
    "end": "21280"
  },
  {
    "text": "as an object in your code\nto use in your application.",
    "start": "21280",
    "end": "24453"
  },
  {
    "start": "25000",
    "end": "53000"
  },
  {
    "text": "Event-driven architecture at\nits core is driven by producers",
    "start": "26150",
    "end": "29610"
  },
  {
    "text": "creating events and\nsubscribers being made aware",
    "start": "29610",
    "end": "32840"
  },
  {
    "text": "of those events and acting upon them.",
    "start": "32840",
    "end": "34760"
  },
  {
    "text": "An event is a data representation",
    "start": "34760",
    "end": "37430"
  },
  {
    "text": "of something that happened\nelsewhere in the application",
    "start": "37430",
    "end": "40400"
  },
  {
    "text": "or from an outside producer.",
    "start": "40400",
    "end": "42720"
  },
  {
    "text": "When building event-driven applications,",
    "start": "42720",
    "end": "44800"
  },
  {
    "text": "it is critical to\ndetermine what events exist",
    "start": "44800",
    "end": "47550"
  },
  {
    "text": "in the application, who produces them",
    "start": "47550",
    "end": "50149"
  },
  {
    "text": "and who subscribes and reacts to them.",
    "start": "50150",
    "end": "52443"
  },
  {
    "start": "53000",
    "end": "148000"
  },
  {
    "text": "The first step in identifying these events",
    "start": "54230",
    "end": "56620"
  },
  {
    "text": "is to work through the\nprocess of event discovery.",
    "start": "56620",
    "end": "59780"
  },
  {
    "text": "In this process, you decide the events",
    "start": "59780",
    "end": "61800"
  },
  {
    "text": "that the event source produces",
    "start": "61800",
    "end": "63440"
  },
  {
    "text": "and what parts of the\napplication must know",
    "start": "63440",
    "end": "65850"
  },
  {
    "text": "about those events.",
    "start": "65850",
    "end": "67689"
  },
  {
    "text": "Event schemas describe\nthe structure of an event",
    "start": "67690",
    "end": "70570"
  },
  {
    "text": "and fields included in the event.",
    "start": "70570",
    "end": "73380"
  },
  {
    "text": "If the event's contents match",
    "start": "73380",
    "end": "75329"
  },
  {
    "text": "the event target's requirements,",
    "start": "75330",
    "end": "77800"
  },
  {
    "text": "the service sends the event to the target.",
    "start": "77800",
    "end": "80500"
  },
  {
    "text": "If you have an existing application",
    "start": "80500",
    "end": "82270"
  },
  {
    "text": "that you want to discover event schemas",
    "start": "82270",
    "end": "84159"
  },
  {
    "text": "automatically for you,",
    "start": "84160",
    "end": "85720"
  },
  {
    "text": "you can enable the Amazon\nEventBridge schema discovery.",
    "start": "85720",
    "end": "89440"
  },
  {
    "text": "If you're building a new application,",
    "start": "89440",
    "end": "91610"
  },
  {
    "text": "you can conduct an event\ndiscovery exercise.",
    "start": "91610",
    "end": "95300"
  },
  {
    "text": "An event bus connects the\nevent to the subscriber.",
    "start": "95300",
    "end": "99210"
  },
  {
    "text": "The event bus at AWS\nis Amazon EventBridge.",
    "start": "99210",
    "end": "103240"
  },
  {
    "text": "Use EventBridge to\nchoreograph interactions",
    "start": "103240",
    "end": "105520"
  },
  {
    "text": "between event sources and event targets.",
    "start": "105520",
    "end": "108680"
  },
  {
    "text": "Notice that events are not technical",
    "start": "108680",
    "end": "111030"
  },
  {
    "text": "or focused on implementation.",
    "start": "111030",
    "end": "113220"
  },
  {
    "text": "Rather, they are real world things",
    "start": "113220",
    "end": "115320"
  },
  {
    "text": "that happened in your system.",
    "start": "115320",
    "end": "117083"
  },
  {
    "text": "This is because everyone from\ndevelopers to product donors",
    "start": "118290",
    "end": "121940"
  },
  {
    "text": "must understand them.",
    "start": "121940",
    "end": "123900"
  },
  {
    "text": "In the event discovery phase,",
    "start": "123900",
    "end": "125930"
  },
  {
    "text": "events act as your business requirements.",
    "start": "125930",
    "end": "128910"
  },
  {
    "text": "Later, developers then translate",
    "start": "128910",
    "end": "131230"
  },
  {
    "text": "those requirements into code.",
    "start": "131230",
    "end": "133659"
  },
  {
    "text": "Once you have the events laid out,",
    "start": "133660",
    "end": "135380"
  },
  {
    "text": "you decide who's interested in each event.",
    "start": "135380",
    "end": "138130"
  },
  {
    "text": "For example, consider the events listed",
    "start": "138130",
    "end": "140590"
  },
  {
    "text": "for an example e-commerce application:",
    "start": "140590",
    "end": "143530"
  },
  {
    "text": "account created, item added\nto cart and order placed.",
    "start": "143530",
    "end": "147833"
  },
  {
    "text": "Whenever a user creates an account,",
    "start": "149020",
    "end": "151370"
  },
  {
    "text": "the marketing team\nsubscribes to that event",
    "start": "151370",
    "end": "153930"
  },
  {
    "text": "to send the account holder promotions.",
    "start": "153930",
    "end": "156409"
  },
  {
    "text": "The security team encrypts\nthe account holder's",
    "start": "156410",
    "end": "159140"
  },
  {
    "text": "username and password into a database",
    "start": "159140",
    "end": "161510"
  },
  {
    "text": "to save the account credentials.",
    "start": "161510",
    "end": "163830"
  },
  {
    "text": "Whenever a user places an order,\nthe system sends a message",
    "start": "163830",
    "end": "167480"
  },
  {
    "text": "to the fulfillment team to start packing",
    "start": "167480",
    "end": "169879"
  },
  {
    "text": "and shipping the order.",
    "start": "169880",
    "end": "171660"
  },
  {
    "text": "This approach decouples the interactions",
    "start": "171660",
    "end": "173960"
  },
  {
    "text": "between all of these services.",
    "start": "173960",
    "end": "176040"
  },
  {
    "text": "This decoupling is beneficial",
    "start": "176040",
    "end": "178010"
  },
  {
    "text": "because it increases\ndeveloper independence",
    "start": "178010",
    "end": "180920"
  },
  {
    "text": "by reducing the dependencies",
    "start": "180920",
    "end": "182370"
  },
  {
    "text": "on other teams to write integrations.",
    "start": "182370",
    "end": "184683"
  },
  {
    "text": "Once the initial event\nschema planning is complete,",
    "start": "186200",
    "end": "189090"
  },
  {
    "text": "you wanna ensure that developers",
    "start": "189090",
    "end": "190640"
  },
  {
    "text": "can continue to build new features",
    "start": "190640",
    "end": "192819"
  },
  {
    "text": "without needing to coordinate\nwith other teams closely",
    "start": "192820",
    "end": "195590"
  },
  {
    "text": "on event schemas.",
    "start": "195590",
    "end": "197319"
  },
  {
    "text": "For this reason,\nEventBridge's schema registry",
    "start": "197320",
    "end": "200470"
  },
  {
    "text": "and automated schema\ndiscovery can help developers",
    "start": "200470",
    "end": "203610"
  },
  {
    "text": "quickly build new features",
    "start": "203610",
    "end": "205530"
  },
  {
    "text": "based on their application's events.",
    "start": "205530",
    "end": "208459"
  },
  {
    "text": "You use EventBridge schema registries",
    "start": "208460",
    "end": "210620"
  },
  {
    "text": "to search for, find and\ntrack different schemas",
    "start": "210620",
    "end": "213959"
  },
  {
    "text": "generated by your application.",
    "start": "213960",
    "end": "216220"
  },
  {
    "text": "You also can automatically find schemas",
    "start": "216220",
    "end": "218750"
  },
  {
    "text": "with the automated schema registry.",
    "start": "218750",
    "end": "220863"
  },
  {
    "start": "221000",
    "end": "309000"
  },
  {
    "text": "Applications can have many\ndifferent types of events.",
    "start": "222210",
    "end": "225630"
  },
  {
    "text": "Events generated from AWS Services,",
    "start": "225630",
    "end": "228480"
  },
  {
    "text": "third-party SaaS applications",
    "start": "228480",
    "end": "230379"
  },
  {
    "text": "and your custom applications.",
    "start": "230380",
    "end": "232540"
  },
  {
    "text": "With so many event sources,\nit can be challenging",
    "start": "232540",
    "end": "235010"
  },
  {
    "text": "to know what to expect\nwhen consuming events.",
    "start": "235010",
    "end": "238290"
  },
  {
    "text": "A schema represents the\nstructure of an event.",
    "start": "238290",
    "end": "241459"
  },
  {
    "text": "It describes what happened at the event,",
    "start": "241460",
    "end": "243990"
  },
  {
    "text": "where the event came\nfrom and the timestamp.",
    "start": "243990",
    "end": "247410"
  },
  {
    "text": "The event schema is\nimportant for developers",
    "start": "247410",
    "end": "249650"
  },
  {
    "text": "as it shows what data\ncontained in the event",
    "start": "249650",
    "end": "252280"
  },
  {
    "text": "and allows them to write\ncode based on that data.",
    "start": "252280",
    "end": "255373"
  },
  {
    "text": "For example an order placed\nevent might always contain",
    "start": "256630",
    "end": "260079"
  },
  {
    "text": "a list of items in the order as an array",
    "start": "260080",
    "end": "262879"
  },
  {
    "text": "and a user ID as an integer.",
    "start": "262880",
    "end": "264770"
  },
  {
    "text": "EventBridge helps automate\nthe manual process",
    "start": "264770",
    "end": "268050"
  },
  {
    "text": "of finding and documenting schemas.",
    "start": "268050",
    "end": "270800"
  },
  {
    "text": "There are two capabilities to highlight:",
    "start": "270800",
    "end": "273220"
  },
  {
    "text": "the schema registry and schema discovery.",
    "start": "273220",
    "end": "276560"
  },
  {
    "text": "A schema registry is a repository",
    "start": "276560",
    "end": "279160"
  },
  {
    "text": "that stores a collection of schemas.",
    "start": "279160",
    "end": "281420"
  },
  {
    "text": "You can use a schema\nregistry to search for,",
    "start": "281420",
    "end": "284060"
  },
  {
    "text": "find and track different schemas",
    "start": "284060",
    "end": "286000"
  },
  {
    "text": "used and generated by your application.",
    "start": "286000",
    "end": "288900"
  },
  {
    "text": "AWS automatically stores\nschemas for all AWS sources",
    "start": "288900",
    "end": "293229"
  },
  {
    "text": "for EventBridge in your schema registry.",
    "start": "293230",
    "end": "296280"
  },
  {
    "text": "SaaS and custom schemas\ncan be generated and added",
    "start": "296280",
    "end": "299100"
  },
  {
    "text": "to the registry using the\nschema discovery feature.",
    "start": "299100",
    "end": "303100"
  },
  {
    "text": "A schema registry\nenables you to use events",
    "start": "303100",
    "end": "306030"
  },
  {
    "text": "as objects in your code more easily.",
    "start": "306030",
    "end": "308793"
  },
  {
    "text": "In this tutorial, you add an event",
    "start": "310310",
    "end": "312360"
  },
  {
    "text": "to the Amazon EventBridge schema registry.",
    "start": "312360",
    "end": "315099"
  },
  {
    "text": "You create an account, create an event,",
    "start": "315100",
    "end": "317490"
  },
  {
    "text": "which includes a user's\nname and email address.",
    "start": "317490",
    "end": "320910"
  },
  {
    "text": "Navigate to the Amazon EventBridge console",
    "start": "320910",
    "end": "323270"
  },
  {
    "text": "and choose Schemas from the left panel.",
    "start": "323270",
    "end": "325780"
  },
  {
    "text": "There are three types of\nschemas represented in the tabs:",
    "start": "325780",
    "end": "328730"
  },
  {
    "text": "AWS event schema registry,\nDiscovered schema registry",
    "start": "328730",
    "end": "333320"
  },
  {
    "text": "and Custom schema registry.",
    "start": "333320",
    "end": "335750"
  },
  {
    "text": "When you choose AWS event schema registry,",
    "start": "335750",
    "end": "338930"
  },
  {
    "text": "you can search for any\nAWS service or event",
    "start": "338930",
    "end": "342060"
  },
  {
    "text": "that is supported by EventBridge.",
    "start": "342060",
    "end": "344220"
  },
  {
    "text": "There you can view the\nschema for that event.",
    "start": "344220",
    "end": "347500"
  },
  {
    "text": "To create a custom schema\nregistry for your application,",
    "start": "347500",
    "end": "350690"
  },
  {
    "text": "navigate to the Custom schema registry tab",
    "start": "350690",
    "end": "353510"
  },
  {
    "text": "and choose create registry.",
    "start": "353510",
    "end": "355523"
  },
  {
    "text": "Enter a name for the registry\nand then choose Create.",
    "start": "372730",
    "end": "376103"
  },
  {
    "text": "There are currently no\nschemas in the registry",
    "start": "381110",
    "end": "383849"
  },
  {
    "text": "so choose create custom\nschema to create one.",
    "start": "383850",
    "end": "386783"
  },
  {
    "text": "Choose your registry as the destination",
    "start": "389350",
    "end": "391870"
  },
  {
    "text": "and call the schema user.",
    "start": "391870",
    "end": "393863"
  },
  {
    "text": "You can choose to load the schema template",
    "start": "396790",
    "end": "399060"
  },
  {
    "text": "using an open API format from\nthe load template option.",
    "start": "399060",
    "end": "402930"
  },
  {
    "text": "You can then manually enter\ndata for each of the fields.",
    "start": "402930",
    "end": "406263"
  },
  {
    "text": "Alternatively, you can have the service",
    "start": "407720",
    "end": "410140"
  },
  {
    "text": "discover the schema from JSON.",
    "start": "410140",
    "end": "412760"
  },
  {
    "text": "Remember that events are written in JSON.",
    "start": "412760",
    "end": "415860"
  },
  {
    "text": "Choose the discover from JSON tab",
    "start": "415860",
    "end": "417889"
  },
  {
    "text": "and enter the following code:",
    "start": "417890",
    "end": "419850"
  },
  {
    "text": "ID 1, name Talia Nassi,",
    "start": "419850",
    "end": "422530"
  },
  {
    "text": "email address talia@thisismyemail.com.",
    "start": "422530",
    "end": "424613"
  },
  {
    "text": "Then choose discover schema.",
    "start": "436890",
    "end": "438723"
  },
  {
    "text": "EventBridge extrapolates the\nschema from this information.",
    "start": "439935",
    "end": "443660"
  },
  {
    "text": "The schema shows that the ID is a number.",
    "start": "443660",
    "end": "446340"
  },
  {
    "text": "The name is a string",
    "start": "446340",
    "end": "447669"
  },
  {
    "text": "and the email address is also a string.",
    "start": "447670",
    "end": "450520"
  },
  {
    "text": "Choose Create to create the schema.",
    "start": "450520",
    "end": "453400"
  },
  {
    "text": "When you choose your schema\nfrom the schema registry",
    "start": "453400",
    "end": "455759"
  },
  {
    "text": "you can see the structure",
    "start": "455760",
    "end": "456840"
  },
  {
    "text": "of the event that you just created.",
    "start": "456840",
    "end": "458803"
  },
  {
    "start": "459000",
    "end": "566000"
  },
  {
    "text": "Once a schema is added to the registry",
    "start": "460570",
    "end": "462520"
  },
  {
    "text": "you can download a code binding,",
    "start": "462520",
    "end": "464270"
  },
  {
    "text": "which allows you to represent the event",
    "start": "464270",
    "end": "466069"
  },
  {
    "text": "as an object in your code.",
    "start": "466070",
    "end": "468050"
  },
  {
    "text": "You can take advantage of IDE features,",
    "start": "468050",
    "end": "470550"
  },
  {
    "text": "such as validation and auto complete.",
    "start": "470550",
    "end": "473409"
  },
  {
    "text": "Code bindings are also\navailable for Java, Python",
    "start": "473410",
    "end": "476530"
  },
  {
    "text": "or TypeScript programming languages.",
    "start": "476530",
    "end": "478870"
  },
  {
    "text": "You can download bindings",
    "start": "478870",
    "end": "480010"
  },
  {
    "text": "from the Amazon EventBridge console",
    "start": "480010",
    "end": "482050"
  },
  {
    "text": "or directly from your IDE",
    "start": "482050",
    "end": "483870"
  },
  {
    "text": "with the AWS Toolkit plugin\nfor IntelliJ and VS Code.",
    "start": "483870",
    "end": "488870"
  },
  {
    "text": "From the EventBridge console,\nnavigate to your schema",
    "start": "489150",
    "end": "491639"
  },
  {
    "text": "and then choose download code bindings.",
    "start": "491640",
    "end": "494460"
  },
  {
    "text": "Choose the programming\nlanguage you prefer,",
    "start": "494460",
    "end": "496800"
  },
  {
    "text": "then choose download.",
    "start": "496800",
    "end": "498490"
  },
  {
    "text": "This downloads the code\nbinding to your local machine.",
    "start": "498490",
    "end": "501949"
  },
  {
    "text": "You can also choose to\ndownload code bindings",
    "start": "501950",
    "end": "504220"
  },
  {
    "text": "directly to your IDE with the AWS Toolkit.",
    "start": "504220",
    "end": "507510"
  },
  {
    "text": "This tutorial uses VS Code,",
    "start": "507510",
    "end": "509410"
  },
  {
    "text": "but you can also use IntelliJ.",
    "start": "509410",
    "end": "511283"
  },
  {
    "text": "Ensure you have VS Code installed",
    "start": "512220",
    "end": "514269"
  },
  {
    "text": "and then navigate to\nthe VS Code marketplace",
    "start": "514270",
    "end": "516760"
  },
  {
    "text": "and search for AWS and\ninstall the AWS Toolkit.",
    "start": "516760",
    "end": "520969"
  },
  {
    "text": "You may have to restart VS Code.",
    "start": "520970",
    "end": "523052"
  },
  {
    "text": "Choose a profile to connect to AWS",
    "start": "524630",
    "end": "527320"
  },
  {
    "text": "and then set the region to the same region",
    "start": "527320",
    "end": "529360"
  },
  {
    "text": "that you created the schema in.",
    "start": "529360",
    "end": "531470"
  },
  {
    "text": "You see this icon on the left panel",
    "start": "531470",
    "end": "533459"
  },
  {
    "text": "when you access the AWS Explorer.",
    "start": "533460",
    "end": "535903"
  },
  {
    "text": "Choose schemas from the left panel,",
    "start": "537120",
    "end": "539260"
  },
  {
    "text": "then choose your schema, My Registry.",
    "start": "539260",
    "end": "542050"
  },
  {
    "text": "Open user by right clicking\nand choosing View Schema.",
    "start": "542050",
    "end": "546050"
  },
  {
    "text": "You can now use this\nevent object in your code.",
    "start": "546050",
    "end": "548803"
  },
  {
    "text": "To learn more about\nevent-driven architecture,",
    "start": "550320",
    "end": "552440"
  },
  {
    "text": "EventBridge schema registry\nand Amazon EventBridge,",
    "start": "552440",
    "end": "555250"
  },
  {
    "text": "head to serverlessland.com",
    "start": "555250",
    "end": "557220"
  },
  {
    "text": "where you'll find more\ncontent from me and my team.",
    "start": "557220",
    "end": "559779"
  },
  {
    "text": "I'm Talia Nassi. Thanks for tuning in.",
    "start": "559780",
    "end": "561883"
  }
]