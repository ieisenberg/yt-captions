[
  {
    "start": "0",
    "end": "172000"
  },
  {
    "text": "[Music] hi everyone i'm tanya pahuja and i'm a",
    "start": "290",
    "end": "7120"
  },
  {
    "text": "technical account manager here at aws i'm based out of delhi india",
    "start": "7120",
    "end": "12559"
  },
  {
    "text": "welcome to aws supports you in the apac region where aws support",
    "start": "12559",
    "end": "17920"
  },
  {
    "text": "provides the tips to optimize the performance and cloud loading cost provides you with the best practices and",
    "start": "17920",
    "end": "24480"
  },
  {
    "text": "design considerations joining me today is gaurav and pradeep from aws support",
    "start": "24480",
    "end": "31279"
  },
  {
    "text": "can you give us a quick introduction gaurav and pradeep sure tanya",
    "start": "31279",
    "end": "37280"
  },
  {
    "text": "hello everyone i am gaurav i am a technical account manager based out of delhi india in my role i'm aligned with",
    "start": "37280",
    "end": "43600"
  },
  {
    "text": "strategic isvs and i enable customers with migration support cost optimizations and security reviews i",
    "start": "43600",
    "end": "50239"
  },
  {
    "text": "have interests in end user computing and databases with focus on amazon aurora for postgre and my sequel over to you",
    "start": "50239",
    "end": "57280"
  },
  {
    "text": "pradeep thank you gaurav and hello everyone my name is pradeep i'm a technical account",
    "start": "57280",
    "end": "63039"
  },
  {
    "text": "manager here at aws i'm based out of bangalore india and i'm working with aws for almost three years i'm part of end",
    "start": "63039",
    "end": "69920"
  },
  {
    "text": "user computing community and really excited to be part of today's session on app stream 2.0",
    "start": "69920",
    "end": "76080"
  },
  {
    "text": "with that being said let me hand it over to tanya thank you gauruf and thanks pradeep",
    "start": "76080",
    "end": "83119"
  },
  {
    "text": "so everyone today we will be introducing you to amazon app stream 2.0",
    "start": "83119",
    "end": "89040"
  },
  {
    "text": "we will specifically be focusing on the admin and end user flow while using app stream 2.0",
    "start": "89040",
    "end": "96000"
  },
  {
    "text": "before we get into the details a quick note to the attendees online please feel free to use the chat window",
    "start": "96000",
    "end": "102640"
  },
  {
    "text": "on the right hand side of your screen to let us know where you are joining us from today",
    "start": "102640",
    "end": "108159"
  },
  {
    "text": "and you can also share your thoughts and any questions throughout the episode we look forward to hearing from you and",
    "start": "108159",
    "end": "114560"
  },
  {
    "text": "we would also be providing you a link to our survey so if you would like to let",
    "start": "114560",
    "end": "119600"
  },
  {
    "text": "us know how did we go and you can just click on that link and fill your feedback there",
    "start": "119600",
    "end": "125680"
  },
  {
    "text": "with that i will hand it over to gaurav and if score of you can walk us through what all that we would be covering up",
    "start": "125680",
    "end": "131680"
  },
  {
    "text": "today sure i'd be happy to thanks tanya",
    "start": "131680",
    "end": "138239"
  },
  {
    "text": "so we start today's discussion with an overview of end user computing from there on we talk about what is",
    "start": "138319",
    "end": "145599"
  },
  {
    "text": "appstream 2.0 in the next section we call out its features and benefits while highlighting",
    "start": "145599",
    "end": "152480"
  },
  {
    "text": "some industry use cases from there we go into the end user pro",
    "start": "152480",
    "end": "157680"
  },
  {
    "text": "and see it in action via demo we also give you insights into the admin",
    "start": "157680",
    "end": "163120"
  },
  {
    "text": "experience of setting up and golden image and making the application available to the end users",
    "start": "163120",
    "end": "168800"
  },
  {
    "text": "so let's get started shall we end user computing",
    "start": "168800",
    "end": "174239"
  },
  {
    "start": "172000",
    "end": "350000"
  },
  {
    "text": "end user computing on aws provides secure access to your applications and desktops that your workforce requires to",
    "start": "174239",
    "end": "180800"
  },
  {
    "text": "get their job done with aws end user computing users can be productive from any supported device",
    "start": "180800",
    "end": "188000"
  },
  {
    "text": "while improving it agility and organizational security so what do we offer",
    "start": "188000",
    "end": "194080"
  },
  {
    "text": "if you're looking for cloud native persistent desktops go for amazon workspaces for cloud native non-persistent desktop",
    "start": "194080",
    "end": "201280"
  },
  {
    "text": "or application experience we have amazon app stream for file collaboration and management",
    "start": "201280",
    "end": "206720"
  },
  {
    "text": "service we have amazon workdocs which is also supported by an extensible sdk",
    "start": "206720",
    "end": "213280"
  },
  {
    "text": "amazon workspaces web supports cloud native secure web access to your internal urls",
    "start": "213280",
    "end": "221040"
  },
  {
    "text": "so let's move into app stream and see the details about what it is all about",
    "start": "221280",
    "end": "227599"
  },
  {
    "text": "appstream 2.0 offers secure reliable scalable access to your non-persistent",
    "start": "227599",
    "end": "233680"
  },
  {
    "text": "desktop or applications from any locations with a supported device",
    "start": "233680",
    "end": "238799"
  },
  {
    "text": "this is the next generation desktop or application streaming service from aws",
    "start": "238799",
    "end": "244480"
  },
  {
    "text": "this new generation service requires no do-it-yourself effort it's fully managed",
    "start": "244480",
    "end": "250400"
  },
  {
    "text": "and you get the best experience of streaming your apps we have also simplified the app",
    "start": "250400",
    "end": "255439"
  },
  {
    "text": "management amazon appstream 2.0 delivers the latest version of your application directly to",
    "start": "255439",
    "end": "261359"
  },
  {
    "text": "the end users thereby eliminating the pain of patching and updating the application on their devices",
    "start": "261359",
    "end": "268479"
  },
  {
    "text": "because your application is centrally managed updating it is fairly simple additionally you can also utilize the",
    "start": "268479",
    "end": "276160"
  },
  {
    "text": "industry standard sample 2.0 federation to help your users sign into appstream",
    "start": "276160",
    "end": "281199"
  },
  {
    "text": "or if you so choose you can also use the built-in identity management",
    "start": "281199",
    "end": "286479"
  },
  {
    "text": "amazon app stream 2.0 is part of the listed compliance programs and more",
    "start": "286479",
    "end": "292000"
  },
  {
    "text": "it's part of aws sock reports it's pci compliant and conforms to the pci dss",
    "start": "292000",
    "end": "297759"
  },
  {
    "text": "standard and if you have an executed business associate editor with aws on your aws",
    "start": "297759",
    "end": "304320"
  },
  {
    "text": "accounts then you can also use this to stream protected health information and be",
    "start": "304320",
    "end": "310000"
  },
  {
    "text": "covered under hipaa so additionally",
    "start": "310000",
    "end": "315199"
  },
  {
    "text": "appstream supports the federal information processing standards which specify the security requirements for",
    "start": "315199",
    "end": "320560"
  },
  {
    "text": "cryptographic modules with these standards your end users can",
    "start": "320560",
    "end": "325600"
  },
  {
    "text": "be assured that you are using the best in class security while streaming your content",
    "start": "325600",
    "end": "330720"
  },
  {
    "text": "i've been talking for a while now i would like to go back to our moderator and ask if there are any",
    "start": "330720",
    "end": "336840"
  },
  {
    "text": "questions no questions from the audience so i guess we are good thank you",
    "start": "336840",
    "end": "341919"
  },
  {
    "text": "thanks tanya so with that i'll hand it over to my colleague pradeep to take us further into this details of user and",
    "start": "341919",
    "end": "348800"
  },
  {
    "text": "admin features thank you gaurav for a wonderful insight into end user computing and a brief",
    "start": "348800",
    "end": "354960"
  },
  {
    "start": "350000",
    "end": "745000"
  },
  {
    "text": "introduction on app stream now let's talk a little bit about user and admin features",
    "start": "354960",
    "end": "360639"
  },
  {
    "text": "app stream provides you with multiple features such as such as persistent app profiles in a traditional on-prem world",
    "start": "360639",
    "end": "368080"
  },
  {
    "text": "customer would use roaming profile or any third party profile solution to persist application setting",
    "start": "368080",
    "end": "374479"
  },
  {
    "text": "however with app stream this feature is available by default this means that",
    "start": "374479",
    "end": "380080"
  },
  {
    "text": "your user's application customization and windows settings are automatically saved after each streaming session and",
    "start": "380080",
    "end": "387600"
  },
  {
    "text": "applied during the next session for example you can set 3d preferences and solidworks in your first session and",
    "start": "387600",
    "end": "394400"
  },
  {
    "text": "have it automatically applied for future sessions these settings are saved to an s3 bucket",
    "start": "394400",
    "end": "400800"
  },
  {
    "text": "in your aws account within the same region additionally app stream provides you",
    "start": "400800",
    "end": "406720"
  },
  {
    "text": "precise admin control you can control data movement to and from your user's app stream streaming",
    "start": "406720",
    "end": "413520"
  },
  {
    "text": "session you can choose whether to allow users to transfer data between their streaming application and",
    "start": "413520",
    "end": "419919"
  },
  {
    "text": "their local devices through copy paste file upload download or print actions",
    "start": "419919",
    "end": "426479"
  },
  {
    "text": "moreover for customers like cad user who need advanced capabilities such as",
    "start": "426479",
    "end": "431919"
  },
  {
    "text": "multiple monitor usb device support keyboard shortcuts or require seamless",
    "start": "431919",
    "end": "437520"
  },
  {
    "text": "access to local drives and folders during their streaming session we provide windows native client as an",
    "start": "437520",
    "end": "443440"
  },
  {
    "text": "example siemens is using appstream to provide virtual test drives demo environment and",
    "start": "443440",
    "end": "449199"
  },
  {
    "text": "delivered training of its cad software called nx software which is a powerful cad software widely used for design and",
    "start": "449199",
    "end": "456160"
  },
  {
    "text": "manufacturing customer next we have custom branding to customer to create a familiar",
    "start": "456160",
    "end": "462319"
  },
  {
    "text": "experience for your users you can customize the appearance of app stream with your own branding images text and",
    "start": "462319",
    "end": "469360"
  },
  {
    "text": "website links when you when you customize app stream 2.0 branding that is displayed for your",
    "start": "469360",
    "end": "476319"
  },
  {
    "text": "users having said that appstream provides a rich set of apis to programmatically",
    "start": "476319",
    "end": "482000"
  },
  {
    "text": "manage and scale app stream environment you can automate the tasks such as creating fleets deploying stacks and",
    "start": "482000",
    "end": "489440"
  },
  {
    "text": "auto scaling the environment programmatically for example we have many customers like",
    "start": "489440",
    "end": "494560"
  },
  {
    "text": "solidworks multiview who have automated app stream fleet creation and stack",
    "start": "494560",
    "end": "500160"
  },
  {
    "text": "deployment tasks additionally you can set up simple scaling rules to instantly scale the",
    "start": "500160",
    "end": "505680"
  },
  {
    "text": "environment up and down as per your demand moving further",
    "start": "505680",
    "end": "511520"
  },
  {
    "text": "appstream as a managed service provides increased agility for id teams with",
    "start": "511520",
    "end": "517200"
  },
  {
    "text": "global infrastructure spanning across 13 aws region this is the application streaming service of",
    "start": "517200",
    "end": "523440"
  },
  {
    "text": "choice what that means is admin can publish the application in an aws region which is closest to user",
    "start": "523440",
    "end": "530800"
  },
  {
    "text": "location which provides a rich and enhance user experience moving further",
    "start": "530800",
    "end": "538319"
  },
  {
    "text": "streaming protocol since we have already discussed about app stream and its feature let's talk",
    "start": "538399",
    "end": "544000"
  },
  {
    "text": "about streaming protocol a good well-performing user experience depends on the protocol delivering the",
    "start": "544000",
    "end": "550720"
  },
  {
    "text": "service appstream uses nice tcv which is a high performance remote desktop",
    "start": "550720",
    "end": "555920"
  },
  {
    "text": "protocol it lets you securely deliver remote desktop and application streaming from",
    "start": "555920",
    "end": "562160"
  },
  {
    "text": "any cloud or any data center to any device over a varying network conditions",
    "start": "562160",
    "end": "567680"
  },
  {
    "text": "nice tcv is a powerful remote visualization protocol which uses hardware based s264 video encoding and",
    "start": "567680",
    "end": "575279"
  },
  {
    "text": "compression nice tcv offers the following features such as http secure access",
    "start": "575279",
    "end": "582480"
  },
  {
    "text": "with amazon app stream 2.0 your applications streams and user input",
    "start": "582480",
    "end": "587600"
  },
  {
    "text": "flows through a secure streaming gateway on aws over https streaming instances",
    "start": "587600",
    "end": "594399"
  },
  {
    "text": "are not directly accessible from internet and user can only access these applications through the streaming",
    "start": "594399",
    "end": "600000"
  },
  {
    "text": "gateway after they are being authenticated next we have encrypted pixel streams",
    "start": "600000",
    "end": "605839"
  },
  {
    "text": "nicely see we transport rendered images as pixels that provides an additional",
    "start": "605839",
    "end": "611040"
  },
  {
    "text": "layer of security as no proprietary customer data is being sent over the network",
    "start": "611040",
    "end": "617440"
  },
  {
    "text": "finally we have 3d graphics as business apps app stream has a wide range of available",
    "start": "617440",
    "end": "623279"
  },
  {
    "text": "instance type including journal purpose compute optimize memory optimize and graphics",
    "start": "623279",
    "end": "629120"
  },
  {
    "text": "instance type these lets you publish 3d graphics and business application while providing an optimal user experience",
    "start": "629120",
    "end": "636560"
  },
  {
    "text": "even on varying network conditions next",
    "start": "636560",
    "end": "641680"
  },
  {
    "text": "nice dcv delivers a fluid interactive experience for business design",
    "start": "641680",
    "end": "646800"
  },
  {
    "text": "engineering and software development application nicetcb offers the following features such as adaptive quality of service",
    "start": "646800",
    "end": "654959"
  },
  {
    "text": "nice dcv delivers a secure pixel stream to your end user and adjust to network",
    "start": "654959",
    "end": "660160"
  },
  {
    "text": "condition to provide an optimal end user experience nice ccv secures both pixel and end user",
    "start": "660160",
    "end": "667279"
  },
  {
    "text": "inputs using end-to-end aes 256 encryption next we have optimized image quality",
    "start": "667279",
    "end": "674959"
  },
  {
    "text": "the bandwidth adaptive streaming protocol allows nice dcv to provide near real-time responsiveness for your",
    "start": "674959",
    "end": "681920"
  },
  {
    "text": "application without compromising on image quality next nice ccv supports html5 browser",
    "start": "681920",
    "end": "690640"
  },
  {
    "text": "with appstream you can launch your application in any html5 browser such as chrome firefox microsoft edge",
    "start": "690640",
    "end": "698480"
  },
  {
    "text": "additionally app stream 2.0 client for windows is a native application that is",
    "start": "698480",
    "end": "704160"
  },
  {
    "text": "designed for users who require additional capabilities such as multiple monitor usb peripherals which are not",
    "start": "704160",
    "end": "711120"
  },
  {
    "text": "available with the browser during their app stream 2.0 streaming session",
    "start": "711120",
    "end": "716560"
  },
  {
    "text": "now i would like to take a pause here and check with our moderator tanya if you have any follow-up question",
    "start": "716560",
    "end": "724079"
  },
  {
    "text": "uh no questions i see from the audience yet but everyone if you have any",
    "start": "724079",
    "end": "729440"
  },
  {
    "text": "questions on app stream or as pradeep just talked about the user enactment features feel free to post your",
    "start": "729440",
    "end": "736079"
  },
  {
    "text": "questions so that we can just pass it on to our experts thank you pradeep thank you tanya with",
    "start": "736079",
    "end": "741600"
  },
  {
    "text": "that being said let me hand it over to michael e gordo again thanks pradeep those protocols really",
    "start": "741600",
    "end": "747839"
  },
  {
    "start": "745000",
    "end": "1182000"
  },
  {
    "text": "enhance the streaming experience continuing with the benefits of this service i would like to highlight a few",
    "start": "747839",
    "end": "753200"
  },
  {
    "text": "more appstream is a fully managed service so our customers don't need to plan deploy",
    "start": "753200",
    "end": "758880"
  },
  {
    "text": "or manage or even upgrade the application streaming infrastructure we do it for you",
    "start": "758880",
    "end": "765440"
  },
  {
    "text": "app stream delivers the latest versions of apps instantly to your users and eliminate the pain of patching and",
    "start": "765440",
    "end": "770959"
  },
  {
    "text": "updating the applications on end user devices it's secure by default as pradeep just",
    "start": "770959",
    "end": "776639"
  },
  {
    "text": "explained all the pixels that are streamed are encrypted",
    "start": "776639",
    "end": "781680"
  },
  {
    "text": "additionally app stream applications run on instances that are dedicated to the end users",
    "start": "781680",
    "end": "787920"
  },
  {
    "text": "so computer resources are not shared your application runs inside your own",
    "start": "787920",
    "end": "793120"
  },
  {
    "text": "vpcs and hence you can use the amazon vpc security features to control access",
    "start": "793120",
    "end": "799120"
  },
  {
    "text": "this enables you to isolate your applications and deliver them in a very secure way",
    "start": "799120",
    "end": "805440"
  },
  {
    "text": "abstram 2.0 is able to scale on demand and meet our meet the variable customer",
    "start": "805440",
    "end": "810720"
  },
  {
    "text": "needs of upscaling and downscaling it is a fully automated process you can",
    "start": "810720",
    "end": "816720"
  },
  {
    "text": "easily scale up or down your application to any number of users across the globe without having to acquire provision or",
    "start": "816720",
    "end": "823600"
  },
  {
    "text": "operate hardware we also offer pay as you go pricing app stream pricing is based on user",
    "start": "823600",
    "end": "830160"
  },
  {
    "text": "concurrency you only pay for the streaming resources plus a small monthly fee per streaming user there are no",
    "start": "830160",
    "end": "837440"
  },
  {
    "text": "upfront investments or long term commitments when using appstream 2.0 also there are no complex licensing to",
    "start": "837440",
    "end": "844639"
  },
  {
    "text": "negotiate or navigate it integrates really well with your existing it infrastructure customers can",
    "start": "844639",
    "end": "851600"
  },
  {
    "text": "bring their existing identity storage or network setups with appstream 2.0 they",
    "start": "851600",
    "end": "857600"
  },
  {
    "text": "can also bring their existing os licenses to help with appstream 2.0",
    "start": "857600",
    "end": "863920"
  },
  {
    "text": "we have also gone ahead and simplified app management for our users",
    "start": "863920",
    "end": "869360"
  },
  {
    "text": "customers can import applications while maintaining a single version for all their users and easily deploy newer",
    "start": "869360",
    "end": "876079"
  },
  {
    "text": "versions and make them available to users we'll talk about this when we go over the admin demo",
    "start": "876079",
    "end": "882480"
  },
  {
    "text": "in detail next i just want to have a highlight and",
    "start": "882480",
    "end": "887519"
  },
  {
    "text": "bring to the force the industry verticals and the use cases",
    "start": "887519",
    "end": "892560"
  },
  {
    "text": "our enterprise customers have brought in their on-premise vdi infrastructure environments using app stream 2.0 to the",
    "start": "892560",
    "end": "899839"
  },
  {
    "text": "end users it can easily stream graphical graphics apps with minimal engineering effort in",
    "start": "899839",
    "end": "906240"
  },
  {
    "text": "a secure fashion so our users can use intensive gpu applications at any time",
    "start": "906240",
    "end": "912240"
  },
  {
    "text": "even using multiple monitors and three demise your applications can be streamed to any",
    "start": "912240",
    "end": "917440"
  },
  {
    "text": "computer including chromebooks macs or pcs in the edtech sector educational",
    "start": "917440",
    "end": "924079"
  },
  {
    "text": "institutions are using appstream to visualize online labs and provide the students access to the applications that",
    "start": "924079",
    "end": "930480"
  },
  {
    "text": "they need on again any compatible device when it comes to independent software vendors or isvs",
    "start": "930480",
    "end": "937199"
  },
  {
    "text": "they have used appstream to deliver online trials with zero installs demos",
    "start": "937199",
    "end": "942639"
  },
  {
    "text": "and as well as training and building a full software as a service solution without having to rewrite their",
    "start": "942639",
    "end": "948959"
  },
  {
    "text": "application stack with so many use cases this is really exciting time for appstream 2.0",
    "start": "948959",
    "end": "956959"
  },
  {
    "text": "in the next slide i just want to highlight the various resources that we",
    "start": "957040",
    "end": "962079"
  },
  {
    "text": "have to support the use cases that i just talked about",
    "start": "962079",
    "end": "967199"
  },
  {
    "text": "amazon app stream 2.0 runs your application on streaming instances now these instances provide the gpu cpu",
    "start": "967199",
    "end": "974320"
  },
  {
    "text": "memory storage or networking capacity that you need to run your applications",
    "start": "974320",
    "end": "979360"
  },
  {
    "text": "with appstream 2.0 you can choose from a wide selection of streaming instances and you can optimize",
    "start": "979360",
    "end": "985839"
  },
  {
    "text": "for performance or cost you can choose from standard instances or graphics instances or memory",
    "start": "985839",
    "end": "992800"
  },
  {
    "text": "intensive as displayed here i've been again talking for a while now",
    "start": "992800",
    "end": "997920"
  },
  {
    "text": "at this point i'd like to check with our moderator if there are any questions",
    "start": "997920",
    "end": "1002959"
  },
  {
    "text": "yeah so we just wanted to know uh one question so which instance type uh you",
    "start": "1004639",
    "end": "1010160"
  },
  {
    "text": "know that we can select under app stream or for our applications if you can tell the audience that would",
    "start": "1010160",
    "end": "1016000"
  },
  {
    "text": "be really helpful so i'll take this question gaurav and thank you so much tanya for the",
    "start": "1016000",
    "end": "1022079"
  },
  {
    "text": "question here so it basically depends on the application that a user wants to publish so with app stream you have wide",
    "start": "1022079",
    "end": "1028798"
  },
  {
    "text": "variety of selecting instance type for example general purpose memory optimize compute optimize and graphics so",
    "start": "1028799",
    "end": "1035520"
  },
  {
    "text": "depending on your application you can choose the instance type of any style and then test your",
    "start": "1035520",
    "end": "1042240"
  },
  {
    "text": "application once you perform the testing of your application depending on the result you can choose and go with that",
    "start": "1042240",
    "end": "1047520"
  },
  {
    "text": "specific application under the images fleet stack and finally publish it to the user through user pool or through",
    "start": "1047520",
    "end": "1054799"
  },
  {
    "text": "federation any other question that we have here",
    "start": "1054799",
    "end": "1060960"
  },
  {
    "text": "no that's that's all thank you for answering that very helpful thank you thank you so much all right",
    "start": "1060960",
    "end": "1067600"
  },
  {
    "text": "with that i'll hand it over to pradeep to take us further all right thank you so much gaurav for",
    "start": "1067600",
    "end": "1072799"
  },
  {
    "text": "covering the app stream benefits and its use cases now let's dive deep into the end user experience",
    "start": "1072799",
    "end": "1079039"
  },
  {
    "text": "so in this slide i'm going to discuss how amazon app stream 2.0 supports identity federation to app stream stacks",
    "start": "1079039",
    "end": "1086240"
  },
  {
    "text": "through xaml 2.0 so first of all user browsers to their own sso portal",
    "start": "1086240",
    "end": "1092559"
  },
  {
    "text": "this would request the authentication for the user and then this is forwarded to the federated service",
    "start": "1092559",
    "end": "1098320"
  },
  {
    "text": "the federation service requests authentication from the organization identity store for example active",
    "start": "1098320",
    "end": "1104400"
  },
  {
    "text": "directory the identity store authenticates the user and returns the authentication",
    "start": "1104400",
    "end": "1110000"
  },
  {
    "text": "response to the federation service and on successful authentication the federation service posts the same",
    "start": "1110000",
    "end": "1116400"
  },
  {
    "text": "assertion to the user's browser till this stage all the interaction are pretty seamless",
    "start": "1116400",
    "end": "1122720"
  },
  {
    "text": "next the user browser posts the saml assertion to aws sign in saml endpoint",
    "start": "1122720",
    "end": "1128559"
  },
  {
    "text": "aws sign-in receives the saml request process the request authenticates the",
    "start": "1128559",
    "end": "1133600"
  },
  {
    "text": "user and forwards the authentication token to the app stream 2.0",
    "start": "1133600",
    "end": "1139200"
  },
  {
    "text": "using the authentication token from aws app stream 2.0 authorizes the user and",
    "start": "1139200",
    "end": "1144559"
  },
  {
    "text": "presents the application to the browser now in the current slide the picture",
    "start": "1144559",
    "end": "1150000"
  },
  {
    "text": "number three where you see the internet explorer so this is the slide that will be shown at that at this stage",
    "start": "1150000",
    "end": "1156480"
  },
  {
    "text": "now as soon as the user clicks on the application he'll be prompted for the credential again",
    "start": "1156480",
    "end": "1163360"
  },
  {
    "text": "as this time credential would be from operating system level authentication and post entering the credential",
    "start": "1163360",
    "end": "1169360"
  },
  {
    "text": "user application would be launched so this will be the complete end user experience",
    "start": "1169360",
    "end": "1174799"
  },
  {
    "text": "moving further i'll be demonstrating a demo",
    "start": "1174799",
    "end": "1181120"
  },
  {
    "start": "1182000",
    "end": "1710000"
  },
  {
    "text": "all right so in this demo i'm going to demonstrate how user would launch the application from a user pool perspective",
    "start": "1183360",
    "end": "1190880"
  },
  {
    "text": "however the steps involved for publishing application from admin perspective will be shown in the next",
    "start": "1190880",
    "end": "1197280"
  },
  {
    "text": "demo so once you create a user in a user pool and assign a stack an email is sent to",
    "start": "1197280",
    "end": "1204400"
  },
  {
    "text": "the user which would contain login link email address and a temporary password",
    "start": "1204400",
    "end": "1212640"
  },
  {
    "text": "the picture that you see on your screen it will the email will look something similar to this where you'll see login",
    "start": "1212799",
    "end": "1218240"
  },
  {
    "text": "email and attempt password now i will start the demo",
    "start": "1218240",
    "end": "1223679"
  },
  {
    "text": "user will click on the link he'll enter the username he will go and check the",
    "start": "1223760",
    "end": "1228799"
  },
  {
    "text": "temporary password once the password is entered",
    "start": "1228799",
    "end": "1234400"
  },
  {
    "text": "it will prompt the user to change that password user would change that password",
    "start": "1234400",
    "end": "1242559"
  },
  {
    "text": "and enters a new password post that user is presented with app catalog",
    "start": "1242799",
    "end": "1248400"
  },
  {
    "text": "where user can see the publish application next user would click on this application and it will be launched",
    "start": "1248400",
    "end": "1254240"
  },
  {
    "text": "probably in few seconds it might take up to a minute depending on what application you have published",
    "start": "1254240",
    "end": "1260480"
  },
  {
    "text": "additionally you you'll see certain other options such as home folder temporary file side by side view",
    "start": "1260480",
    "end": "1267520"
  },
  {
    "text": "resolution change copy paste while you are within your session",
    "start": "1267520",
    "end": "1274000"
  },
  {
    "text": "now once user is done browsing their session they can go on the right hand side",
    "start": "1274000",
    "end": "1279679"
  },
  {
    "text": "under their username and click on end session this option will terminate their",
    "start": "1279679",
    "end": "1284880"
  },
  {
    "text": "streaming session so this concludes the complete demonstration from the user pool",
    "start": "1284880",
    "end": "1290080"
  },
  {
    "text": "perspective now let's go back to our slides and look at the admin workflow",
    "start": "1290080",
    "end": "1297120"
  },
  {
    "text": "we have all we already know how the user experience look like and let me share some lights on the admin workflow now",
    "start": "1297120",
    "end": "1303360"
  },
  {
    "text": "so under admin workflow we have four stages at first administrator would launch an image builder from appstream",
    "start": "1303360",
    "end": "1310480"
  },
  {
    "text": "console this can also be done using apis post that they will install the",
    "start": "1310480",
    "end": "1316080"
  },
  {
    "text": "application and perform the testing once the testing is done an image will be created and most of your streaming in",
    "start": "1316080",
    "end": "1323039"
  },
  {
    "text": "fact all the streaming instances will be launched from this golden image thereafter we create the fleet where",
    "start": "1323039",
    "end": "1329440"
  },
  {
    "text": "administrator would decide the fleet type such as on-demand always",
    "start": "1329440",
    "end": "1334640"
  },
  {
    "text": "on elastic fleet admin would also select the options such as fleet instance type which are general",
    "start": "1334640",
    "end": "1342000"
  },
  {
    "text": "purpose compute optimize memory optimize graphics user session details fleet",
    "start": "1342000",
    "end": "1347440"
  },
  {
    "text": "capacity like min and max capacity stream view desktop and application like",
    "start": "1347440",
    "end": "1352799"
  },
  {
    "text": "whether you want to go for known persistent desktop or the application view and the scaling policy",
    "start": "1352799",
    "end": "1358640"
  },
  {
    "text": "once the fleet is successfully created admin would create the stack where they would select",
    "start": "1358640",
    "end": "1365200"
  },
  {
    "text": "the desired user settings such as clipboard file transfer print to local devices and application",
    "start": "1365200",
    "end": "1371919"
  },
  {
    "text": "setting persistence post that user can launch this application either using user pool",
    "start": "1371919",
    "end": "1378159"
  },
  {
    "text": "or using streaming url however for production is always recommended to use",
    "start": "1378159",
    "end": "1383679"
  },
  {
    "text": "active directory using saml federation because for a bigger organization that's more viable solution",
    "start": "1383679",
    "end": "1390000"
  },
  {
    "text": "moving further you can entitle the access to app stream",
    "start": "1390000",
    "end": "1395919"
  },
  {
    "text": "stack either by creating groups in your active directory or you can create saml",
    "start": "1395919",
    "end": "1400960"
  },
  {
    "text": "to login against ad for example using adfs octa pink",
    "start": "1400960",
    "end": "1406640"
  },
  {
    "text": "so at this stage i'd like to check if we have any questions in the photo",
    "start": "1406640",
    "end": "1412480"
  },
  {
    "text": "thanks pradeep yeah there was one question from the audience rosco mohito",
    "start": "1413760",
    "end": "1419120"
  },
  {
    "text": "which uh the question was if a customer is using single sign-on to authenticate",
    "start": "1419120",
    "end": "1424799"
  },
  {
    "text": "into app stream 2.0 how does the customer extend the sso into the application within upstream i think i",
    "start": "1424799",
    "end": "1432159"
  },
  {
    "text": "hope your question has been answered by just the prior slides and the demo as",
    "start": "1432159",
    "end": "1437200"
  },
  {
    "text": "well which would be presented but if you want to add something onto it please feel free sure so uh demo will not",
    "start": "1437200",
    "end": "1445039"
  },
  {
    "text": "confirm this specific scenario uh okay so uh the demo that i provided there was",
    "start": "1445039",
    "end": "1452000"
  },
  {
    "text": "from a user pool perspective but the question is regards to the sso perspective so the steps or the slide",
    "start": "1452000",
    "end": "1457440"
  },
  {
    "text": "that i shared earlier answer the complete flow of what rosco is asking",
    "start": "1457440",
    "end": "1464080"
  },
  {
    "text": "so we will share a link on the chart window also for uh more uh insight into these details but",
    "start": "1464240",
    "end": "1470080"
  },
  {
    "text": "the flow would remain the same from sso perspective yeah thanks pradeep and there's one more",
    "start": "1470080",
    "end": "1476720"
  },
  {
    "text": "question uh from the audience that we can just take it up in relevance to the prior slides",
    "start": "1476720",
    "end": "1482720"
  },
  {
    "text": "can we bring our own video windows licenses to app stream 2.0",
    "start": "1482720",
    "end": "1489039"
  },
  {
    "text": "sure uh thanks for the questions on i can take this one that's a very important question uh when",
    "start": "1489039",
    "end": "1494400"
  },
  {
    "text": "it comes to larger enterprises who have licenses already in place you can",
    "start": "1494400",
    "end": "1500559"
  },
  {
    "text": "absolutely bring your own licenses uh with appstream 2.0 and this this way you",
    "start": "1500559",
    "end": "1505760"
  },
  {
    "text": "can utilize the existing infrastructure that you have with app stream",
    "start": "1505760",
    "end": "1511679"
  },
  {
    "text": "great thank you gauru thanks pradeep over to you well thank you so much tanya and",
    "start": "1511760",
    "end": "1518880"
  },
  {
    "text": "let me transfer the control to michael league again thanks pradeep",
    "start": "1518880",
    "end": "1524720"
  },
  {
    "text": "okay so pradeep talked about the admin flow and before we go into the demo i just wanted to have a quick look into",
    "start": "1524720",
    "end": "1531039"
  },
  {
    "text": "how the traffic would flow with app stream 2.0 we will in this in the next slide just look at the network diagram",
    "start": "1531039",
    "end": "1538799"
  },
  {
    "text": "uh when it comes to the authentication as well as the streaming gateway flow",
    "start": "1538799",
    "end": "1543840"
  },
  {
    "text": "uh in the configurations of going over the internet versus going over a vpc",
    "start": "1543840",
    "end": "1549600"
  },
  {
    "text": "endpoint so as you can see and before we go there uh i i want to add",
    "start": "1549600",
    "end": "1557520"
  },
  {
    "text": "one more uh note here for appstream 2.0 internet connectivity is always necessary to",
    "start": "1557520",
    "end": "1564080"
  },
  {
    "text": "authenticate our end users and deliver the web assets for app stream 2.0 to",
    "start": "1564080",
    "end": "1569840"
  },
  {
    "text": "function properly so even with the private network flow you would still need the end users to have connectivity to",
    "start": "1569840",
    "end": "1577039"
  },
  {
    "text": "the internet all right now let's go into the diagram um looking at the initial flow as the",
    "start": "1577039",
    "end": "1583760"
  },
  {
    "text": "user authenticates using saml token their authentication request goes to the authentication service",
    "start": "1583760",
    "end": "1590880"
  },
  {
    "text": "as on the aws managed side and then once an",
    "start": "1590880",
    "end": "1596320"
  },
  {
    "text": "assertion is sent back and the authentication succeeds a streaming connection is made which in",
    "start": "1596320",
    "end": "1601760"
  },
  {
    "text": "this case flows over the internet goes to the streaming gateway and beyond the streaming gateway you have access to the",
    "start": "1601760",
    "end": "1607840"
  },
  {
    "text": "fleets and the stacks that you have created these fleet of instances can also talk",
    "start": "1607840",
    "end": "1614000"
  },
  {
    "text": "to your internal resources in your vpc which are your directory services any file shares that you have any licensing",
    "start": "1614000",
    "end": "1620559"
  },
  {
    "text": "servers that you're running or even rds instances if you so choose inside",
    "start": "1620559",
    "end": "1625679"
  },
  {
    "text": "your vpc now looking at the vpc endpoint flow what changes here is the",
    "start": "1625679",
    "end": "1632159"
  },
  {
    "text": "flow of the streaming gateway content because you have a private path connecting you to your vpc",
    "start": "1632159",
    "end": "1639360"
  },
  {
    "text": "using either vpn or direct connect the streaming connection then takes that path and go to your vpc endpoint from",
    "start": "1639360",
    "end": "1645919"
  },
  {
    "text": "where it connects to the streaming gateway and rest of the flow still remains the same",
    "start": "1645919",
    "end": "1651120"
  },
  {
    "text": "any user settings and files that you save are still being saved on the back end on",
    "start": "1651120",
    "end": "1656880"
  },
  {
    "text": "s3 devices okay so i think at this point",
    "start": "1656880",
    "end": "1662240"
  },
  {
    "text": "we are ready to go into the demo but before we do that uh just one more highlight i want to make",
    "start": "1662240",
    "end": "1668399"
  },
  {
    "text": "is with vpc endpoint flow you need to be allowing the traffic to come in and pass",
    "start": "1668399",
    "end": "1674799"
  },
  {
    "text": "through your vpcs so having said that you need ports ranging from 1400 to 1499 open from the ip address",
    "start": "1674799",
    "end": "1683760"
  },
  {
    "text": "range of your end users additionally for the outbound flow you also need ephemeral network ports open from 1024",
    "start": "1683760",
    "end": "1690880"
  },
  {
    "text": "to 65535 to the ip addresses of your end users",
    "start": "1690880",
    "end": "1697440"
  },
  {
    "text": "all right so it's time to get into the demo",
    "start": "1697440",
    "end": "1702080"
  },
  {
    "text": "okay in the admin flow you can use the quick quick",
    "start": "1708320",
    "end": "1714159"
  },
  {
    "start": "1710000",
    "end": "2867000"
  },
  {
    "text": "settings to get started and you are given three options uh either you can set up sample apps or",
    "start": "1714159",
    "end": "1720320"
  },
  {
    "text": "set up your custom apps here we'll start with the custom map setup so clicking on the custom app the first",
    "start": "1720320",
    "end": "1726559"
  },
  {
    "text": "thing we'll do is choose a base for our image you are you have the ability to filter",
    "start": "1726559",
    "end": "1731840"
  },
  {
    "text": "on platform so let's filter click and choose 2016. so we'll pick a 2016",
    "start": "1731840",
    "end": "1739120"
  },
  {
    "text": "base image for this demo so once you select that image",
    "start": "1739120",
    "end": "1744720"
  },
  {
    "text": "we go to the next slide okay so now we are asked to give a friendly name to",
    "start": "1744720",
    "end": "1750640"
  },
  {
    "text": "this image and also a display name this is very important because this is the golden image name that you will see",
    "start": "1750640",
    "end": "1758320"
  },
  {
    "text": "once the image builder has done creating the image another important point i would like to",
    "start": "1758320",
    "end": "1763760"
  },
  {
    "text": "highlight here is the benefits of using tags with tags you can categorize your resources so that you",
    "start": "1763760",
    "end": "1770320"
  },
  {
    "text": "can easily identify them for the purpose of tracking costs or even ownership you can do it by department you can do it by",
    "start": "1770320",
    "end": "1777520"
  },
  {
    "text": "project or or vendor or anything else really depending on your use case",
    "start": "1777520",
    "end": "1783360"
  },
  {
    "text": "and then uh you can use cost explorer to then go through these tags so next we go",
    "start": "1783360",
    "end": "1788960"
  },
  {
    "text": "and choose our instance type we have the option of choosing from general purpose compute optimized and memory optimized",
    "start": "1788960",
    "end": "1796720"
  },
  {
    "text": "so for the purpose of this demo again we'll go ahead and choose a general purpose large instance",
    "start": "1796720",
    "end": "1802640"
  },
  {
    "text": "so once i select that now it i'm given the option to choose i am roles and vpc",
    "start": "1802640",
    "end": "1807760"
  },
  {
    "text": "endpoints this becomes important when you are trying to set your flow to go through your vpc endpoints if you are",
    "start": "1807760",
    "end": "1814399"
  },
  {
    "text": "not choosing the flow to go through vpc endpoints then you are able to leave them blank and therefore",
    "start": "1814399",
    "end": "1820000"
  },
  {
    "text": "these are optional so for our demo we won't select these",
    "start": "1820000",
    "end": "1826320"
  },
  {
    "text": "we'll just hit next right now coming to the networking side of the world",
    "start": "1826320",
    "end": "1831760"
  },
  {
    "text": "we have the option of giving default internet access to our images that are launched uh these could be required for",
    "start": "1831760",
    "end": "1838720"
  },
  {
    "text": "getting your patches or internet connectivity might be required for your application if you so",
    "start": "1838720",
    "end": "1844640"
  },
  {
    "text": "want you can also put the default internet access to no and then have the network flow through an ad",
    "start": "1844640",
    "end": "1851679"
  },
  {
    "text": "gateway",
    "start": "1851679",
    "end": "1854240"
  },
  {
    "text": "all right in this case we are keeping it on we're picking a subnet which is public",
    "start": "1856799",
    "end": "1862720"
  },
  {
    "text": "and then picking a security group uh the active directory domain uh is is",
    "start": "1862720",
    "end": "1870320"
  },
  {
    "text": "optional and but is required when you're using saml setups so at this stage we are ready to review",
    "start": "1870320",
    "end": "1876640"
  },
  {
    "text": "and create our image builder setup everything looks in order",
    "start": "1876640",
    "end": "1884080"
  },
  {
    "text": "launch the image builder so this process is now successfully launched and then the image",
    "start": "1884080",
    "end": "1891279"
  },
  {
    "text": "can take anywhere from 15 to 30 minutes to come up so right now it's in the pending state",
    "start": "1891279",
    "end": "1899518"
  },
  {
    "text": "we let it come in the available state and once it's available we'll highlight it and hit connect",
    "start": "1899679",
    "end": "1907840"
  },
  {
    "text": "all right so once you hit connect it will take another couple of minutes before you can connect to it and then",
    "start": "1911600",
    "end": "1918240"
  },
  {
    "text": "you choose a user that you're connecting to the image with we start with connecting to the image as an administrator so once you connect to the",
    "start": "1918240",
    "end": "1925120"
  },
  {
    "text": "image as an administrator you see the icon to start the image assistant so",
    "start": "1925120",
    "end": "1930640"
  },
  {
    "text": "click on that icon",
    "start": "1930640",
    "end": "1934120"
  },
  {
    "text": "it will launch the image assistant the first step here is to add your own app for the purposes of this demo we have",
    "start": "1935679",
    "end": "1941679"
  },
  {
    "text": "created a sample bat file which will launch an executable command line as well as the notepad",
    "start": "1941679",
    "end": "1948720"
  },
  {
    "text": "so you can pick and choose the application add it the next step you're asked to choose is",
    "start": "1948720",
    "end": "1954960"
  },
  {
    "text": "the icon you can give your own custom icons to your applications so let's pick",
    "start": "1954960",
    "end": "1960080"
  },
  {
    "text": "and choose an icon and then you also have the optional",
    "start": "1960080",
    "end": "1965200"
  },
  {
    "text": "parameters to give launch parameters so as you launch your application if you want it launched with certain parameters",
    "start": "1965200",
    "end": "1971200"
  },
  {
    "text": "you can do that and you can also have it running in a specific working directory",
    "start": "1971200",
    "end": "1976799"
  },
  {
    "text": "so we'll hit save at this stage now at this stage our application is visible",
    "start": "1976799",
    "end": "1983200"
  },
  {
    "text": "the next step is to then configure this application the first step to configure the",
    "start": "1983200",
    "end": "1988960"
  },
  {
    "text": "application is to switch the user and go into a template user now this template user mimics what your end users will",
    "start": "1988960",
    "end": "1995919"
  },
  {
    "text": "look like so we'll do just that we'll hit the switch user",
    "start": "1995919",
    "end": "2001760"
  },
  {
    "text": "button which will bring us to this window here we have the option of choosing a template user and right now we were in",
    "start": "2001760",
    "end": "2008799"
  },
  {
    "text": "the admin user so let's click there it will relaunch the session for us",
    "start": "2008799",
    "end": "2014399"
  },
  {
    "text": "again we'll launch the image assistant here and this time",
    "start": "2014399",
    "end": "2020000"
  },
  {
    "text": "we'll click on the application now since our application was supposed to launch a command line as well as a",
    "start": "2020000",
    "end": "2025919"
  },
  {
    "text": "notepad that's what you'll see so looks like we were successfully able",
    "start": "2025919",
    "end": "2031440"
  },
  {
    "text": "to launch the application using the template user",
    "start": "2031440",
    "end": "2036559"
  },
  {
    "text": "on the top you can see the folder and the view icons along with other settings that are available to the end users",
    "start": "2036559",
    "end": "2044000"
  },
  {
    "text": "when they are streaming this application now these settings would definitely vary for your custom applications and you may",
    "start": "2044000",
    "end": "2050878"
  },
  {
    "text": "need to do a lot more configuration and settings to make it the way you want it",
    "start": "2050879",
    "end": "2056240"
  },
  {
    "text": "once this is done you switch you again click on switch users and go back to the admin view here we are able to save our settings",
    "start": "2056240",
    "end": "2063760"
  },
  {
    "text": "and these settings are then saved to your image",
    "start": "2063760",
    "end": "2068398"
  },
  {
    "text": "in the next step we then again switch user and make sure the settings that we just saved are actually taken taking",
    "start": "2069919",
    "end": "2077358"
  },
  {
    "text": "effect so we switch user we go to the test user again",
    "start": "2077359",
    "end": "2083200"
  },
  {
    "text": "we will be hitting the image assistant and launching the application using the",
    "start": "2083679",
    "end": "2089760"
  },
  {
    "text": "icon so this time a notepad and command line again came up under the test user",
    "start": "2089760",
    "end": "2097118"
  },
  {
    "text": "so this is where you would want to check and tweak any of the settings for your applications so that your end user",
    "start": "2097119",
    "end": "2104000"
  },
  {
    "text": "experience is optimal once everything looks good you go back to the top right corner and switch users",
    "start": "2104000",
    "end": "2111119"
  },
  {
    "text": "again and at that stage we go back as administrator",
    "start": "2111119",
    "end": "2116560"
  },
  {
    "text": "so let's connect and hit next once we hit next now the step is to",
    "start": "2116560",
    "end": "2122480"
  },
  {
    "text": "optimize the application so we are going to launch the application locally as the administrator and wait for both the",
    "start": "2122480",
    "end": "2128800"
  },
  {
    "text": "applications to come up once they come up we hit continue at this stage it's going to save",
    "start": "2128800",
    "end": "2134560"
  },
  {
    "text": "all the metadata and settings locally on this image we are done with the configuration so",
    "start": "2134560",
    "end": "2140800"
  },
  {
    "text": "we'll give it a name and a display name along with the description tagging again is very important you have",
    "start": "2140800",
    "end": "2147200"
  },
  {
    "text": "the ability to use tags here so we highly encourage you to use them additionally",
    "start": "2147200",
    "end": "2153680"
  },
  {
    "text": "you are encouraged to use the latest agent version of appstream on your instances",
    "start": "2153680",
    "end": "2159839"
  },
  {
    "text": "so i'll just put in some information here hit next and it's just telling me everything and",
    "start": "2159839",
    "end": "2166560"
  },
  {
    "text": "i hit and disconnect and create image so once i do that my streaming session will",
    "start": "2166560",
    "end": "2171760"
  },
  {
    "text": "end and i'll have to go back to the console here in a second",
    "start": "2171760",
    "end": "2176880"
  },
  {
    "text": "so it's stopping i'll close this session has ended and we come back to the console now under image",
    "start": "2176880",
    "end": "2183760"
  },
  {
    "text": "registry we should be able to see this image even though it's not available so to do that we'll filter it on visibility",
    "start": "2183760",
    "end": "2190480"
  },
  {
    "text": "private the current status is pending once it becomes available we are ready",
    "start": "2190480",
    "end": "2196320"
  },
  {
    "text": "for the next steps having said that i'll take a pause here and ask our motivator tanya if there are any",
    "start": "2196320",
    "end": "2203040"
  },
  {
    "text": "questions at this stage yeah uh so one question uh do we also",
    "start": "2203040",
    "end": "2210160"
  },
  {
    "text": "support 4k monitors with app stream uh sure i can take that tanya we",
    "start": "2210160",
    "end": "2216640"
  },
  {
    "text": "absolutely support uh 4k monitors as well as 3d mice and other peripherals that are",
    "start": "2216640",
    "end": "2223839"
  },
  {
    "text": "needed for high gpu applications so uh we have the ability to support",
    "start": "2223839",
    "end": "2229119"
  },
  {
    "text": "them out of the box with that stream okay great and just just one question",
    "start": "2229119",
    "end": "2235520"
  },
  {
    "text": "yeah so we would require a windows native client for our 4k monitor uh in order to",
    "start": "2235520",
    "end": "2242240"
  },
  {
    "text": "support 4k monitor so you would require windows native client uh for the user who would like to use 4k monitor",
    "start": "2242240",
    "end": "2250400"
  },
  {
    "text": "okay and since we just talked about app stream and uh just just curious uh what",
    "start": "2250400",
    "end": "2256079"
  },
  {
    "text": "exactly is the instance delete with app stream or if you can just also little just talk about it",
    "start": "2256079",
    "end": "2263519"
  },
  {
    "text": "uh sure tanya so we just talked about creating a golden image uh as as the",
    "start": "2264000",
    "end": "2269200"
  },
  {
    "text": "admin is creating the application for the end users we'll actually go into the fleets and stack next in this demo so",
    "start": "2269200",
    "end": "2276560"
  },
  {
    "text": "that's a good segue for me to actually bring my colleague in and take us further in the demo and and the process",
    "start": "2276560",
    "end": "2282160"
  },
  {
    "text": "we will definitely explain what app stream fleets and stacks are",
    "start": "2282160",
    "end": "2287599"
  },
  {
    "text": "great so over to you thank you thank you yeah thank you tanya and let me proceed",
    "start": "2287599",
    "end": "2294880"
  },
  {
    "text": "further with the demo so in this demonstration gaurav has already created an image",
    "start": "2294880",
    "end": "2300480"
  },
  {
    "text": "and initially the image status was pending and later it went to available so next step would be to create a fleet",
    "start": "2300480",
    "end": "2306960"
  },
  {
    "text": "where we can choose from the available options such as always on on demand and elastic fleet we will go with our always",
    "start": "2306960",
    "end": "2314640"
  },
  {
    "text": "on fleet for this demo where we will provide a friendly name give it a display name",
    "start": "2314640",
    "end": "2319920"
  },
  {
    "text": "and a description for the easy identification of the fleet once you enter a description",
    "start": "2319920",
    "end": "2327520"
  },
  {
    "text": "you will provide it with the next step of options such as choosing an instance type so here we have again a wide",
    "start": "2327520",
    "end": "2333520"
  },
  {
    "text": "variety of options such as general purpose compute optimize memory optimized in graphics so you can select",
    "start": "2333520",
    "end": "2340960"
  },
  {
    "text": "from any of these options for this demo i have selected journal purpose",
    "start": "2340960",
    "end": "2346800"
  },
  {
    "text": "and within that general purpose i am selecting stream standard x large you can also define the user session details",
    "start": "2346800",
    "end": "2353920"
  },
  {
    "text": "where you can define the min and max timeout you can also go for disconnect timeout",
    "start": "2353920",
    "end": "2359040"
  },
  {
    "text": "in minutes and you idle disconnect timeout you can define the fleet capacity such",
    "start": "2359040",
    "end": "2364400"
  },
  {
    "text": "as minimum capacity of your fleet and the max capacity of the fleet",
    "start": "2364400",
    "end": "2369599"
  },
  {
    "text": "next we have the option to select the stream view so this is the option where",
    "start": "2369599",
    "end": "2374880"
  },
  {
    "text": "we select whether the view will be application or it will be desktop if you choose the desktop view",
    "start": "2374880",
    "end": "2381119"
  },
  {
    "text": "it will launch a known persistent desktop for you so this is where you can go for known persistent",
    "start": "2381119",
    "end": "2387520"
  },
  {
    "text": "next we have option of scaling policies",
    "start": "2387520",
    "end": "2393040"
  },
  {
    "text": "within the scaling policies we can select scale out and scale in policy define a",
    "start": "2393040",
    "end": "2398800"
  },
  {
    "text": "policy name provide a condition for example capacity utilization available",
    "start": "2398800",
    "end": "2404079"
  },
  {
    "text": "capacity and insufficient capacity error now you can define the rule like at what",
    "start": "2404079",
    "end": "2410880"
  },
  {
    "text": "stage that will get triggered and then what and how many instances will be added",
    "start": "2410880",
    "end": "2416400"
  },
  {
    "text": "for a scale out for scaling you can same way or give it a name define a condition and then define the",
    "start": "2416400",
    "end": "2423280"
  },
  {
    "text": "action in the condition again you have capacity utilization available capacity and then",
    "start": "2423280",
    "end": "2428720"
  },
  {
    "text": "insufficient capacity error in addition to a simple scaling policy",
    "start": "2428720",
    "end": "2434960"
  },
  {
    "text": "we still have another option of choosing schedule scaling policies",
    "start": "2434960",
    "end": "2440240"
  },
  {
    "text": "now in the scheduled scaling policies you can define a policy name you can",
    "start": "2440240",
    "end": "2445280"
  },
  {
    "text": "choose start date end date time min capacity max capacity",
    "start": "2445280",
    "end": "2453280"
  },
  {
    "text": "and then you can define the trigger like when this policy will get triggered uh you have the option uh to choose from",
    "start": "2453280",
    "end": "2459680"
  },
  {
    "text": "once frequency and a cron expression now since i have already selected simple",
    "start": "2459680",
    "end": "2465280"
  },
  {
    "text": "scaling policy so i'm going to delete a scheduled scaling policy and proceed further with the simple scaling policy",
    "start": "2465280",
    "end": "2470960"
  },
  {
    "text": "and click on next in this step i'm going to choose an image that was created in the previous",
    "start": "2470960",
    "end": "2476960"
  },
  {
    "text": "step by make league gaurav so i'll choose asy image fleet",
    "start": "2476960",
    "end": "2482240"
  },
  {
    "text": "and then i will click on next here i will choose the network configuration where i'll define vpc subnet 1 2 3 and",
    "start": "2482240",
    "end": "2490000"
  },
  {
    "text": "the security group so you have to in case you are choosing default internet access make sure",
    "start": "2490000",
    "end": "2497200"
  },
  {
    "text": "internet gateway is attached to the subnet and these are public subnet if not you can go for a private subnet",
    "start": "2497200",
    "end": "2505359"
  },
  {
    "text": "so once these options are selected you can also go for active directory configuration provided you have",
    "start": "2505359",
    "end": "2511760"
  },
  {
    "text": "domain join fleet and image builder and you will click on next",
    "start": "2511760",
    "end": "2517200"
  },
  {
    "text": "as soon as you will click on next you will review all the configuration of your fleet and click on create fleet as",
    "start": "2517200",
    "end": "2523920"
  },
  {
    "text": "soon as you click on create fleet it will ask you for an acknowledgement",
    "start": "2523920",
    "end": "2529200"
  },
  {
    "text": "and as you click on acknowledge it'll just create the operation now this entire process would take",
    "start": "2529200",
    "end": "2535599"
  },
  {
    "text": "around few minutes like two three minutes to complete right now as you can see the status is starting uh along with",
    "start": "2535599",
    "end": "2541839"
  },
  {
    "text": "it you see a few other details such as fleet type which is always on instance type and the name of the fleet",
    "start": "2541839",
    "end": "2548720"
  },
  {
    "text": "within a few minutes this status will change from starting to running uh we'll",
    "start": "2548720",
    "end": "2554800"
  },
  {
    "text": "give it a refresh now and uh within few seconds the status will be changed to running as you can see now let's review",
    "start": "2554800",
    "end": "2561280"
  },
  {
    "text": "the configuration of this fleet once more so we clicked on the fleet name status is running we have fleet usage to",
    "start": "2561280",
    "end": "2567920"
  },
  {
    "text": "choose from available capacity in use capacity and then we also have the option to go",
    "start": "2567920",
    "end": "2574640"
  },
  {
    "text": "from image details so here you can see the name of your image fleet configuration main and max capacity your",
    "start": "2574640",
    "end": "2580400"
  },
  {
    "text": "network details and the tags next we will go for the stack creation so",
    "start": "2580400",
    "end": "2586079"
  },
  {
    "text": "we'll click on create stack we'll again give it a friendly name for this demonstration i'm giving asy",
    "start": "2586079",
    "end": "2593119"
  },
  {
    "text": "underscore stack a display name which will be optional and then uh a description for your",
    "start": "2593119",
    "end": "2600319"
  },
  {
    "text": "identification next we have redirect url and feedback",
    "start": "2600319",
    "end": "2606240"
  },
  {
    "text": "url both of these options are optional i mean you don't",
    "start": "2606240",
    "end": "2611280"
  },
  {
    "text": "need to go for uh it's not a mandatory option to go for so here i can choose the option that your user can refer to",
    "start": "2611280",
    "end": "2618160"
  },
  {
    "text": "at the end of their streaming session both the redirect and the feedback url since these two are optional",
    "start": "2618160",
    "end": "2624960"
  },
  {
    "text": "i will go ahead and remove these from this demo and proceed further",
    "start": "2624960",
    "end": "2631200"
  },
  {
    "text": "so now you can see uh vpc endpoint streaming stand experience settings so",
    "start": "2631200",
    "end": "2636560"
  },
  {
    "text": "here you can choose from udp and tcp in case you are going for udp please",
    "start": "2636560",
    "end": "2642000"
  },
  {
    "text": "ensure that the prerequisites are met you can define the tasks next",
    "start": "2642000",
    "end": "2649640"
  },
  {
    "text": "so for right now i'm going for tcp and then you click on enable storage here you can choose persistent storage",
    "start": "2652240",
    "end": "2659359"
  },
  {
    "text": "from which we have three options number one home folder which again will store your files in s3",
    "start": "2659359",
    "end": "2666319"
  },
  {
    "text": "second you can select google drive and then you can go for onedrive next you have user settings where you",
    "start": "2666319",
    "end": "2672480"
  },
  {
    "text": "can define clipboard file transfer and print action you can uh up define the option for the",
    "start": "2672480",
    "end": "2679920"
  },
  {
    "text": "user like control the precise it will give you a precise control on your uh streaming experience whether you want",
    "start": "2679920",
    "end": "2686720"
  },
  {
    "text": "end user to download the file upload the file copy paste so post this we have one more option of",
    "start": "2686720",
    "end": "2693280"
  },
  {
    "text": "selecting application setting persistence where you can enable the setting persistence option and all your",
    "start": "2693280",
    "end": "2700240"
  },
  {
    "text": "windows customization and application setting will be persisted post that you will review the settings and click on",
    "start": "2700240",
    "end": "2705920"
  },
  {
    "text": "create stack this will be pretty instantaneous uh within a few seconds you will get the",
    "start": "2705920",
    "end": "2711040"
  },
  {
    "text": "stack status as active now you can review all the settings here like application entitlement storage",
    "start": "2711040",
    "end": "2718079"
  },
  {
    "text": "details and next you will go ahead and check whether your application are working as expected or not so you will",
    "start": "2718079",
    "end": "2724880"
  },
  {
    "text": "click on stack and create a streaming url you will give it any username user id",
    "start": "2724880",
    "end": "2730880"
  },
  {
    "text": "for example admin 1 duration and then launch it into a browser as soon as you launch",
    "start": "2730880",
    "end": "2737359"
  },
  {
    "text": "it into a browser it presents you with the app catalog and you click on it",
    "start": "2737359",
    "end": "2742480"
  },
  {
    "text": "once you click on it it will go for connecting resizing and loading your application and within few seconds or",
    "start": "2742480",
    "end": "2748400"
  },
  {
    "text": "probably in a minute it will launch your application as you can see right now it's resizing",
    "start": "2748400",
    "end": "2754240"
  },
  {
    "text": "and launch both the application notepad as well as command prompt so you have few options within your session",
    "start": "2754240",
    "end": "2760880"
  },
  {
    "text": "such as side by side view of your application you have persistent storage options",
    "start": "2760880",
    "end": "2767920"
  },
  {
    "text": "then you have clipboard option and next you have the option to select",
    "start": "2767920",
    "end": "2773359"
  },
  {
    "text": "system locale and screen resolution and then you can go for full screen",
    "start": "2773359",
    "end": "2779760"
  },
  {
    "text": "so you can browse through all the options within your session and once you are done browsing your session you can",
    "start": "2779760",
    "end": "2785359"
  },
  {
    "text": "click on user name and then click on end session this will terminate your session here",
    "start": "2785359",
    "end": "2792160"
  },
  {
    "text": "once your session is terminated we will go ahead and try to go for configuration under user pool so we'll go to the user",
    "start": "2792160",
    "end": "2799040"
  },
  {
    "text": "pool in the user pool we will create a user for this we just need an email first",
    "start": "2799040",
    "end": "2806240"
  },
  {
    "text": "name and the last name so me i'm entering a username here",
    "start": "2806240",
    "end": "2812480"
  },
  {
    "text": "and i'll enter the last name i'll go ahead and create a user",
    "start": "2812480",
    "end": "2820480"
  },
  {
    "text": "once the user is created once the user is created i will go ahead and",
    "start": "2824240",
    "end": "2831440"
  },
  {
    "text": "assign it a stack now as soon as a stack is assigned to a user user is sent an email",
    "start": "2831440",
    "end": "2838800"
  },
  {
    "text": "now that email would contain a username password and a login link as we saw last",
    "start": "2838800",
    "end": "2844559"
  },
  {
    "text": "in the first demo using the help of that first link uh he can launch the application using uh user",
    "start": "2844559",
    "end": "2851599"
  },
  {
    "text": "id which is the email address and a temp password later on they can change the password and finally the application",
    "start": "2851599",
    "end": "2856800"
  },
  {
    "text": "will be launched so this concludes our demonstration uh i would like to check",
    "start": "2856800",
    "end": "2861920"
  },
  {
    "text": "at the stage if you have any questions in the forum",
    "start": "2861920",
    "end": "2866400"
  },
  {
    "start": "2867000",
    "end": "2973000"
  },
  {
    "text": "no we are good uh no questions that we see from the audience so i guess we are good thanks buddy",
    "start": "2867599",
    "end": "2875920"
  },
  {
    "text": "so thank you everyone everyone uh today we looked at the",
    "start": "2876480",
    "end": "2882000"
  },
  {
    "text": "amazon app stream 2.0 and uh where god of pretty specifically focused on the",
    "start": "2882000",
    "end": "2888400"
  },
  {
    "text": "admin and end user flow while we are using app stream 2.0 so i hope that was really helpful and if",
    "start": "2888400",
    "end": "2895680"
  },
  {
    "text": "there are any questions that were not answered today you can post your questions on",
    "start": "2895680",
    "end": "2901079"
  },
  {
    "text": "repost.aws and one of our experts can provide you with an answer or your question could",
    "start": "2901079",
    "end": "2906960"
  },
  {
    "text": "even become a topic of one of our future shows and if you have any feedback for us",
    "start": "2906960",
    "end": "2912720"
  },
  {
    "text": "please check the chat box on the right for a link to our survey or you can also email us at aws supports",
    "start": "2912720",
    "end": "2920000"
  },
  {
    "text": "you at amazon.com we really want to hear from you tell us what else you would like us to present",
    "start": "2920000",
    "end": "2926880"
  },
  {
    "text": "on one of our episodes and i would also like to mention please join us again in two weeks on wednesday",
    "start": "2926880",
    "end": "2934480"
  },
  {
    "text": "that is august 10th 10 a.m ist where we will be talking about monitoring rds database",
    "start": "2934480",
    "end": "2942000"
  },
  {
    "text": "environments uh i hope to see you there as well uh thank you for joining us today at aws",
    "start": "2942000",
    "end": "2948160"
  },
  {
    "text": "supports you and happy cloud computing everyone happy cloud computing",
    "start": "2948160",
    "end": "2954160"
  },
  {
    "text": "happy cloud computing and thanks everyone [Music]",
    "start": "2954160",
    "end": "2969679"
  },
  {
    "text": "you",
    "start": "2971920",
    "end": "2974000"
  }
]