[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "well good afternoon thanks for joining us today my name is Tony petrosyan I",
    "start": "1370",
    "end": "7200"
  },
  {
    "text": "work on DynamoDB I have deaf we're here with me he is our product management leader he's",
    "start": "7200",
    "end": "14040"
  },
  {
    "text": "the voice of customers in our meetings and let me tell you he's never satisfied",
    "start": "14040",
    "end": "20510"
  },
  {
    "text": "with the experience you always wants to raise the bar he's gonna help me out throughout the session",
    "start": "20510",
    "end": "26010"
  },
  {
    "text": "we're gonna do a couple of demos but before we get into that let me just say",
    "start": "26010",
    "end": "32969"
  },
  {
    "start": "30000",
    "end": "75000"
  },
  {
    "text": "that I know that we have a lot of customers in this room and I want to thank you for letting dynamodb be part",
    "start": "32969",
    "end": "39090"
  },
  {
    "text": "of your success and you know we spend a lot of time trying to figure out how to",
    "start": "39090",
    "end": "46320"
  },
  {
    "text": "best improve the experience for you and you're a big part of that we take a lot",
    "start": "46320",
    "end": "51840"
  },
  {
    "text": "of feedback from customers so most of the stuff that we're gonna talk about is",
    "start": "51840",
    "end": "57649"
  },
  {
    "text": "is things that customers have asked us to build we do some innovations here and",
    "start": "57649",
    "end": "64140"
  },
  {
    "text": "there on your behalf so I know that of course not all the logos fit here and",
    "start": "64140",
    "end": "69659"
  },
  {
    "text": "not everybody lets us use their logos but thank you for for using dynamo",
    "start": "69659",
    "end": "76490"
  },
  {
    "start": "75000",
    "end": "164000"
  },
  {
    "text": "usually I like to talk about what customers are using dynamo for but we",
    "start": "76490",
    "end": "81600"
  },
  {
    "text": "have a lot of customers here at reinvent talking about how they're using dynamo",
    "start": "81600",
    "end": "87060"
  },
  {
    "text": "and I think it'll be a lot better experience if you actually go listen to the customers and see how they're using",
    "start": "87060",
    "end": "92610"
  },
  {
    "text": "dynamo so we have GE aviation Nike gumgum both which is a Verizon company",
    "start": "92610",
    "end": "100130"
  },
  {
    "text": "and of course Amazon an amazon.com and their experience of using dynamo which",
    "start": "100130",
    "end": "107399"
  },
  {
    "text": "is quite extensive we have a lot of a lot of large customers and Amazon is one",
    "start": "107399",
    "end": "112649"
  },
  {
    "text": "of them and a lot of people don't really know how much Amazon depends on dynamodb",
    "start": "112649",
    "end": "118710"
  },
  {
    "text": "so it's a little bit of an interesting story for us to tell a lot of services",
    "start": "118710",
    "end": "125460"
  },
  {
    "text": "inside AWS use dynamodb as part of managing their cert their own services",
    "start": "125460",
    "end": "131800"
  },
  {
    "text": "and then we always refer to the other side of the Amazon company as amazon.com",
    "start": "131800",
    "end": "137100"
  },
  {
    "text": "because you know they're not really inside AWS and they use a lot of",
    "start": "137100",
    "end": "142860"
  },
  {
    "text": "services but dynamodb is critical to the operation of amazon.com so they have",
    "start": "142860",
    "end": "149080"
  },
  {
    "text": "sessions and they share their experience of using we treat them like customers like anyone else so it's kind of",
    "start": "149080",
    "end": "154570"
  },
  {
    "text": "sometimes fun to listen to them this session some of them already happened but their recordings so you can watch",
    "start": "154570",
    "end": "161350"
  },
  {
    "text": "them on on YouTube before we talk about all the new stuff just a little bit of a",
    "start": "161350",
    "end": "169570"
  },
  {
    "start": "164000",
    "end": "400000"
  },
  {
    "text": "background on dynamodb it's a fully managed non-relational database for any",
    "start": "169570",
    "end": "175450"
  },
  {
    "text": "scale we usually think about the various pillars of DynamoDB and the fully",
    "start": "175450",
    "end": "183220"
  },
  {
    "text": "managed thing is a really important thing for us so we spent a significant",
    "start": "183220",
    "end": "188290"
  },
  {
    "text": "part of our engineering time on that column to ensure security durability",
    "start": "188290",
    "end": "193560"
  },
  {
    "text": "availability of DynamoDB we have adaptive capacity we have maintenance",
    "start": "193560",
    "end": "199420"
  },
  {
    "text": "free global tables if you want to replicate across regions DynamoDB",
    "start": "199420",
    "end": "205960"
  },
  {
    "text": "streams and time to live these are all the things that makes it easier for you to build applications and not having to",
    "start": "205960",
    "end": "212170"
  },
  {
    "text": "manage the infrastructure but the core value of DynamoDB that we try to deliver",
    "start": "212170",
    "end": "217630"
  },
  {
    "text": "is this performance at any scale and the idea here is that you get consistent",
    "start": "217630",
    "end": "224310"
  },
  {
    "text": "performance from DynamoDB regardless of the size of your data so you might have",
    "start": "224310",
    "end": "229480"
  },
  {
    "text": "a table which is 5 terabytes or 50 terabytes or 200 terabytes but when you",
    "start": "229480",
    "end": "235570"
  },
  {
    "text": "do a get request to dynamodb you get your single-digit millisecond response",
    "start": "235570",
    "end": "241060"
  },
  {
    "text": "time and that's it that's a that's the promise that we make that we will",
    "start": "241060",
    "end": "246400"
  },
  {
    "text": "deliver consistent performance regardless of your the scale of your database and we have tables in dynamodb",
    "start": "246400",
    "end": "253690"
  },
  {
    "text": "that are - 300 terabytes in size have trillions of items in there and I'm not talking about databases but a single",
    "start": "253690",
    "end": "260260"
  },
  {
    "text": "table and the customers get their work done because we",
    "start": "260260",
    "end": "265389"
  },
  {
    "text": "a lot of time ensuring that the data is distributed partitioned evenly and that",
    "start": "265389",
    "end": "271270"
  },
  {
    "text": "we deliver on that proper promise we try not to have limits of course you know",
    "start": "271270",
    "end": "278229"
  },
  {
    "text": "every AWS account has some limits you can raise them if you don't know that we",
    "start": "278229",
    "end": "283599"
  },
  {
    "text": "have no practical limits we're DynamoDB so your tables can be of any size and your read and write throughput can be of",
    "start": "283599",
    "end": "291370"
  },
  {
    "text": "any size and if you're not getting what you want because you're hitting your account limit you call and we'll raise",
    "start": "291370",
    "end": "297039"
  },
  {
    "text": "the limit and of course it's a flexible data model it's a no sequel database",
    "start": "297039",
    "end": "302469"
  },
  {
    "text": "we're not trying to be every database for every workload we are a key value of store we are in a no sequel database we",
    "start": "302469",
    "end": "311199"
  },
  {
    "text": "offer the flexibility of the no sequel model and over the last few years our",
    "start": "311199",
    "end": "317500"
  },
  {
    "text": "customer base has really diversified we have customers from every industry",
    "start": "317500",
    "end": "324089"
  },
  {
    "text": "automotive manufacturing health finance banking retail and as more and more",
    "start": "324089",
    "end": "331900"
  },
  {
    "text": "diverse workloads come to dynamo they bring their requirements with them so encryption at rest is something that we",
    "start": "331900",
    "end": "339129"
  },
  {
    "text": "recently did by default all tables are encrypted we have fine-grained access control we",
    "start": "339129",
    "end": "345069"
  },
  {
    "text": "offer an SLA we have fully managed backup restore services an interesting",
    "start": "345069",
    "end": "351490"
  },
  {
    "text": "thing about any of these is they work at any scale so imagine you have a Database",
    "start": "351490",
    "end": "357099"
  },
  {
    "text": "Machine and you're using your database and you have lots of workload running and then somebody starts a backup in the",
    "start": "357099",
    "end": "362500"
  },
  {
    "text": "middle of the day at your busiest time and your machine is now busy because it's trying to do backups and serve",
    "start": "362500",
    "end": "368080"
  },
  {
    "text": "requests and nobody likes that that's why most DBA is run backups at ironore 3",
    "start": "368080",
    "end": "373120"
  },
  {
    "text": "o'clock on Saturday mornings but not dynamo when we run backups you will never know because we ensure that all of",
    "start": "373120",
    "end": "380740"
  },
  {
    "text": "the administrative stuff is happening off the system and it never impacts your workload and that's again a promise that",
    "start": "380740",
    "end": "388240"
  },
  {
    "text": "works at any scale you have it a gigabyte table or a hundred terabyte",
    "start": "388240",
    "end": "393250"
  },
  {
    "text": "table and the promise stands so that's kind of the use of",
    "start": "393250",
    "end": "399520"
  },
  {
    "text": "dynamo and you know a lot of our customers who are using dynamo are now building applications that allows them",
    "start": "399520",
    "end": "406030"
  },
  {
    "start": "400000",
    "end": "515000"
  },
  {
    "text": "to interact directly with their customers so you might have thousands of",
    "start": "406030",
    "end": "412539"
  },
  {
    "text": "customers millions of customers hundreds of millions of customers and you want to learn to manage profiles and you need to",
    "start": "412539",
    "end": "418479"
  },
  {
    "text": "be able to look up information really fast dynamo works really well in those scenarios again you should go and check",
    "start": "418479",
    "end": "426099"
  },
  {
    "text": "out the customer stories for dynamo now I want to spend just a little bit more",
    "start": "426099",
    "end": "431740"
  },
  {
    "text": "time on the fully managed thing so with dynamo DB there are no instances there",
    "start": "431740",
    "end": "438669"
  },
  {
    "text": "are no servers there's a table you create a table and you use the table the",
    "start": "438669",
    "end": "444669"
  },
  {
    "text": "table and it's distribution across hundreds or thousands of nodes is managed for you",
    "start": "444669",
    "end": "451229"
  },
  {
    "text": "machines failing or whatever happens in a data center you don't care about because we offer and availability SLA we",
    "start": "451229",
    "end": "460150"
  },
  {
    "text": "manage the durability and so you don't have to do all of the work that is usually associated with the",
    "start": "460150",
    "end": "465909"
  },
  {
    "text": "infrastructure and that frees you to go and work on your own applications",
    "start": "465909",
    "end": "470969"
  },
  {
    "text": "so again security derivatively availability and I will share with you",
    "start": "470969",
    "end": "476770"
  },
  {
    "text": "that we have a pretty big team engineers and product managers that work on",
    "start": "476770",
    "end": "482669"
  },
  {
    "text": "dynamodb we have teams in Palo Alto in Seattle and in Dublin Ireland",
    "start": "482669",
    "end": "487780"
  },
  {
    "text": "and a substantial part of the team is solely focused on this one slide here",
    "start": "487780",
    "end": "493479"
  },
  {
    "text": "ensuring durability availability security of your data and then we spend",
    "start": "493479",
    "end": "500139"
  },
  {
    "text": "some of our time iterating on features that already exist making them better",
    "start": "500139",
    "end": "505150"
  },
  {
    "text": "and then we spend some of our time building new features so with that we're",
    "start": "505150",
    "end": "513279"
  },
  {
    "text": "gonna do a little demo of some of the new stuff that we've done I'm gonna hand",
    "start": "513279",
    "end": "518500"
  },
  {
    "start": "515000",
    "end": "720000"
  },
  {
    "text": "it off to Jeff to take us on all right thanks Tony so let me try to set this up",
    "start": "518500",
    "end": "524920"
  },
  {
    "text": "a little bit and I'm gonna showcase some of the stuff that was announced yesterday as well as today and then",
    "start": "524920",
    "end": "530829"
  },
  {
    "text": "later we'll go through some of this stuff that we've released over the last 12 months or so so the first thing I want",
    "start": "530829",
    "end": "536260"
  },
  {
    "text": "to go through is something that we released yesterday called our is which is our dynamodb transactional api's and",
    "start": "536260",
    "end": "541779"
  },
  {
    "text": "to demonstrate this I have an iPhone emulator and I have this application",
    "start": "541779",
    "end": "547779"
  },
  {
    "text": "that we've created it's a ride-sharing application I'm sure all of you have probably used one of the",
    "start": "547779",
    "end": "553089"
  },
  {
    "text": "ride-sharing services at some point in time in your life and in fact you can play along with this if you want to it's",
    "start": "553089",
    "end": "558880"
  },
  {
    "text": "just HTTP dynamo rides calm dynamo DB ride calm and there's a little quiz at the",
    "start": "558880",
    "end": "565900"
  },
  {
    "text": "end that if you take it you can get some earn some points and then you can redeem those points at the dynamo DB booth back",
    "start": "565900",
    "end": "572560"
  },
  {
    "text": "in the in the pavilion so let me set it up a little bit parts of this will be showing transactions other parts of it",
    "start": "572560",
    "end": "578890"
  },
  {
    "text": "are just going to be showing some of the the natural things everything is backed using dynamo dB so I'm already logged in",
    "start": "578890",
    "end": "586150"
  },
  {
    "text": "and I have a balance and I'm gonna simulate taking a ride and I can choose",
    "start": "586150",
    "end": "593140"
  },
  {
    "text": "from where I'm gonna start to where I'm gonna go so I'll just randomly select",
    "start": "593140",
    "end": "598290"
  },
  {
    "text": "another location just going to generate my fare and then I'm gonna request this ride so ride is coming I'm splitting it",
    "start": "598290",
    "end": "608440"
  },
  {
    "text": "with someone named Alex and my driver is Jack and I'm gonna go and my ride is",
    "start": "608440",
    "end": "614380"
  },
  {
    "text": "complete and my fare is nine and a half dollars Alex is nine and a half dollars and Jack earns $19 now there's there's a",
    "start": "614380",
    "end": "622270"
  },
  {
    "text": "couple things that are happening behind the scenes in the dynamodb table there's the booking of the ride like",
    "start": "622270",
    "end": "628029"
  },
  {
    "text": "requesting it and there's also the financial transaction so as part of that financial transaction we need to ensure",
    "start": "628029",
    "end": "634510"
  },
  {
    "text": "a few things right we need to ensure that both the riders actually have sufficient balance for that ride and we",
    "start": "634510",
    "end": "641980"
  },
  {
    "text": "have to make sure that the driver gets paid we want those all to happen or fail so it's kind of a traditional",
    "start": "641980",
    "end": "648310"
  },
  {
    "text": "transaction scenario now if you wanted to do this in the past you have to either hand roll that",
    "start": "648310",
    "end": "653950"
  },
  {
    "text": "transaction in the client or use one of the transactional clients that were there this is all natively available in",
    "start": "653950",
    "end": "660220"
  },
  {
    "text": "DynamoDB now if I click OK you can see that my balance was actually deducted",
    "start": "660220",
    "end": "666080"
  },
  {
    "text": "now what I want to do is just over here starts driving sorry I mean look what",
    "start": "666080",
    "end": "677300"
  },
  {
    "text": "I'm going to do is I'm going to start driving some traffic to that application just to simulate a bunch of people",
    "start": "677300",
    "end": "682610"
  },
  {
    "text": "requesting rides and taking those rides and so you can imagine if I launched this maybe in a small area I'm only",
    "start": "682610",
    "end": "688730"
  },
  {
    "text": "getting a few requests per second because I only have a few people using my service at any given time but of",
    "start": "688730",
    "end": "693980"
  },
  {
    "text": "course as you expand that to other areas you go regional you go",
    "start": "693980",
    "end": "699010"
  },
  {
    "text": "national you go global the number of requests per second that you might be receiving is going to go up and so while",
    "start": "699010",
    "end": "706160"
  },
  {
    "text": "this is running you're gonna see the number of requests per second go up I'm gonna let this bake for a little while",
    "start": "706160",
    "end": "712279"
  },
  {
    "text": "and we'll talk a little bit more about what's happening with that in a later demo and I want to switch over to kind",
    "start": "712279",
    "end": "717890"
  },
  {
    "text": "of walk you through the code that is behind this now up front kind of a bunch of little boilerplate stuff you know",
    "start": "717890",
    "end": "725209"
  },
  {
    "start": "720000",
    "end": "933000"
  },
  {
    "text": "just defining some variables and some attributes and so I have to define the riders so of course there's myself",
    "start": "725209",
    "end": "732410"
  },
  {
    "text": "there's the other rider who will be randomly selected and then the driver who's going to get paid of course we",
    "start": "732410",
    "end": "737870"
  },
  {
    "text": "need to create the balance so the balance for both riders and the driver and then the values for those fares are",
    "start": "737870",
    "end": "746600"
  },
  {
    "text": "kind of randomly generated but we need to hold those because we're going to be deducting those from the riders accounts",
    "start": "746600",
    "end": "752270"
  },
  {
    "text": "and of course adding it to the drivers balance now this is where it gets a little bit more interesting this is",
    "start": "752270",
    "end": "757370"
  },
  {
    "text": "stuff that you wouldn't been able to do before yesterday and as a man mentioned we announced it yesterday made the SDK",
    "start": "757370",
    "end": "764089"
  },
  {
    "text": "available so you can play with any of this stuff from from this point on so let me walk you through a little bit",
    "start": "764089",
    "end": "770120"
  },
  {
    "text": "what's happening here so I'm creating a transact right item here for the rider right and we're doing this by using the",
    "start": "770120",
    "end": "776060"
  },
  {
    "text": "rider account so we just have a table in dynamo dB that's storing all of our riders and when you go if you want if",
    "start": "776060",
    "end": "781670"
  },
  {
    "text": "you play with the application you just go and you create an account and I think it gives you a balance of either a thousand or fifty dollars that you can",
    "start": "781670",
    "end": "788540"
  },
  {
    "text": "you can play around with and we're going to do a write to the table it's actually going to be an update for this rider and",
    "start": "788540",
    "end": "794540"
  },
  {
    "text": "there's a couple things that we need to do first it's going to be a conditional right we don't want to do it unless balance of the rider is actually at or",
    "start": "794540",
    "end": "803180"
  },
  {
    "text": "above what the fare is and of course we have to do this for for both riders and",
    "start": "803180",
    "end": "809570"
  },
  {
    "text": "then we have a transactional right right item similar for the driver so the driver of course we don't have to check",
    "start": "809570",
    "end": "815510"
  },
  {
    "text": "his balance but we do need to increment the that balance and then we're gonna do down here is we're going to create a",
    "start": "815510",
    "end": "820850"
  },
  {
    "text": "transact right item request which is just an array of those items that we",
    "start": "820850",
    "end": "826340"
  },
  {
    "text": "created up here and then there's a simple transact right items where it writes all those so that happens all in",
    "start": "826340",
    "end": "833390"
  },
  {
    "text": "a single transaction if any part of that were failed and the whole thing fails and so it's all succeed or all fail and",
    "start": "833390",
    "end": "840580"
  },
  {
    "text": "then we can go down and we can do a transactional read and so after remember",
    "start": "840580",
    "end": "846170"
  },
  {
    "text": "if you look in the when we were in the application I was able to check that my balance had deducted for that ride and",
    "start": "846170",
    "end": "853520"
  },
  {
    "text": "so we're gonna do a read for each of the riders and the driver and we're creating",
    "start": "853520",
    "end": "859820"
  },
  {
    "text": "items just like we did before and then down here we're going to do a transact get items a request where I take the",
    "start": "859820",
    "end": "866150"
  },
  {
    "text": "array of those items created here and then I execute it and so once again just",
    "start": "866150",
    "end": "871610"
  },
  {
    "text": "like the writes it's an all-or-nothing so so Jeff all the setup happens and",
    "start": "871610",
    "end": "877190"
  },
  {
    "text": "then there's just a single call to dynamo to execute multiple updates that",
    "start": "877190",
    "end": "883040"
  },
  {
    "text": "true that's right so you're gonna do a right are you gonna do a read and they're gonna all happen at once and all of those conditionals",
    "start": "883040",
    "end": "889180"
  },
  {
    "text": "happens on items you you can basically read the condition and include that in",
    "start": "889180",
    "end": "896240"
  },
  {
    "text": "the transaction that's correct so the on these conditional writes of here we were checking the balance those are all happening all at the same time",
    "start": "896240",
    "end": "903490"
  },
  {
    "text": "cool so transactions it got announced yesterday by our CTO or as he likes to",
    "start": "903490",
    "end": "914240"
  },
  {
    "text": "call himself the system administrator for a small bookshop werner he has an",
    "start": "914240",
    "end": "923150"
  },
  {
    "text": "attachment with dynamo DB since he was part of the beginning so let's switch",
    "start": "923150",
    "end": "929270"
  },
  {
    "text": "back to the slides and I'll take a look at a little more",
    "start": "929270",
    "end": "935970"
  },
  {
    "start": "933000",
    "end": "1013000"
  },
  {
    "text": "details on transactions so it's purpose-built for developers using",
    "start": "935970",
    "end": "942370"
  },
  {
    "text": "DynamoDB again when we went to build transactions for dynamo DB we decided",
    "start": "942370",
    "end": "948220"
  },
  {
    "text": "that it should follow the principles of DynamoDB which is it should not violate our performance promise single digit",
    "start": "948220",
    "end": "955029"
  },
  {
    "text": "millisecond requests and so on scalability so we didn't want to put a lot of limits around it so you can",
    "start": "955029",
    "end": "961690"
  },
  {
    "text": "include in the transact right items updates inserts and deletes with all of",
    "start": "961690",
    "end": "968560"
  },
  {
    "text": "the various conditions to any item in any table within an account in a region",
    "start": "968560",
    "end": "975850"
  },
  {
    "text": "so the scope of the transaction is a region not a partition not a set of keys",
    "start": "975850",
    "end": "983589"
  },
  {
    "text": "not a node not a machine not a single computer but any table any item in let's",
    "start": "983589",
    "end": "992380"
  },
  {
    "text": "say East u.s. that belongs to an account and that's a really important thing",
    "start": "992380",
    "end": "999100"
  },
  {
    "text": "because we didn't want to say well you can do transactions as long as they're all on the same partition or you can do",
    "start": "999100",
    "end": "1004980"
  },
  {
    "text": "transactions as long as it's part of the same database running on a single node so that's that's the transactions and as",
    "start": "1004980",
    "end": "1013589"
  },
  {
    "start": "1013000",
    "end": "1069000"
  },
  {
    "text": "Jeff said it's a single API calls and you make will you batch a bunch of work that you want to do you submit it and",
    "start": "1013589",
    "end": "1020940"
  },
  {
    "text": "DynamoDB goes off and executes that transaction and ensures that the",
    "start": "1020940",
    "end": "1025980"
  },
  {
    "text": "transaction is driven to completion and all the updates happen and if something",
    "start": "1025980",
    "end": "1031589"
  },
  {
    "text": "doesn't happen if something fails then the transaction is cancelled then we return the reason code so in the example",
    "start": "1031589",
    "end": "1038880"
  },
  {
    "text": "that Jeff had if one of the writers doesn't have enough money for the ride",
    "start": "1038880",
    "end": "1045390"
  },
  {
    "text": "the condition fails in the transaction system sorry I can't go forward I'm",
    "start": "1045390",
    "end": "1050670"
  },
  {
    "text": "going to go back I'm gonna return an error code to you saying your condition check was not true and no changes are",
    "start": "1050670",
    "end": "1058350"
  },
  {
    "text": "made to the data and then as a developer you can say okay yeah I need to exclude",
    "start": "1058350",
    "end": "1063960"
  },
  {
    "text": "that writer because they they're balanced they don't have money or give them more money or whatever so",
    "start": "1063960",
    "end": "1070570"
  },
  {
    "start": "1069000",
    "end": "1174000"
  },
  {
    "text": "transact write items and transact get items are the two new API calls so four",
    "start": "1070570",
    "end": "1075860"
  },
  {
    "text": "DynamoDB transactions is not a conversational thing transaction is an API you have a batch of stuff that you",
    "start": "1075860",
    "end": "1083270"
  },
  {
    "text": "want to do and you want this batch to succeed or fail as a unit because I",
    "start": "1083270",
    "end": "1088340"
  },
  {
    "text": "don't know you're driving some logical amount of work that needs to happen all or nothing",
    "start": "1088340",
    "end": "1093500"
  },
  {
    "text": "so we have acid because we have a ton atomic operations we have consistency we",
    "start": "1093500",
    "end": "1099860"
  },
  {
    "text": "have isolation is serializable we have durability because all dynamodb data is triple replicated we have might",
    "start": "1099860",
    "end": "1108050"
  },
  {
    "text": "important c4 transactions which is a really really cool feature you should try out if you submit a transaction to",
    "start": "1108050",
    "end": "1115490"
  },
  {
    "text": "dynamo DB to go change a bunch of stuff and then let's say I don't know you submitted this transaction from your",
    "start": "1115490",
    "end": "1121370"
  },
  {
    "text": "laptop and your laptop died before DynamoDB could give you a return code",
    "start": "1121370",
    "end": "1126560"
  },
  {
    "text": "and now you don't know what happened to this transaction did it finish did it complete was it rollback what would",
    "start": "1126560",
    "end": "1133580"
  },
  {
    "text": "happen well with the idempotency token you can go back and check and you'll know what happened to the to the",
    "start": "1133580",
    "end": "1140510"
  },
  {
    "text": "transaction so it gives you a lot of power as you're building internet scale",
    "start": "1140510",
    "end": "1146210"
  },
  {
    "text": "applications in the cloud right where you know things aren't always perfect so",
    "start": "1146210",
    "end": "1151640"
  },
  {
    "text": "you can actually plan for failures code for failures and ensure that your",
    "start": "1151640",
    "end": "1156920"
  },
  {
    "text": "application always stays in a consistent state even in the face of failures",
    "start": "1156920",
    "end": "1163660"
  },
  {
    "text": "transactions are synchronous they include condition checks availability",
    "start": "1163660",
    "end": "1168980"
  },
  {
    "text": "SLA applies to transactions the performance is predictable and it scales what you don't get with transactions is",
    "start": "1168980",
    "end": "1176180"
  },
  {
    "text": "you don't get deadlock you don't get long-running transactions because again",
    "start": "1176180",
    "end": "1181550"
  },
  {
    "text": "we don't have a conversational transaction it's not like begin transaction do some stuff oh my phone",
    "start": "1181550",
    "end": "1186890"
  },
  {
    "text": "rings I'm gonna go have lunch and I forgot to do commit or rollback and there was an open transaction and",
    "start": "1186890",
    "end": "1193010"
  },
  {
    "text": "backups couldn't complete because the trunk you couldn't truncate the log or whatever no that happens with dynamo because you",
    "start": "1193010",
    "end": "1199830"
  },
  {
    "text": "prepare all the changes you submitted as a unit in an API call and then that",
    "start": "1199830",
    "end": "1205440"
  },
  {
    "text": "dynamo DB drives that to completion so it's not like unmanaged concurrency if",
    "start": "1205440",
    "end": "1211110"
  },
  {
    "text": "whatever reason you can't there's something going on some contention we just returned it a code to you saying we",
    "start": "1211110",
    "end": "1217260"
  },
  {
    "text": "cancelled this transaction you should try it again because this item was not",
    "start": "1217260",
    "end": "1223560"
  },
  {
    "text": "available or whatever so we tried to take the the usual pain and the suffering of the DBA",
    "start": "1223560",
    "end": "1229340"
  },
  {
    "text": "related to managing large transactional systems with backups and logs and",
    "start": "1229340",
    "end": "1234750"
  },
  {
    "text": "whatever out so that you can build the apps without the pain so for the",
    "start": "1234750",
    "end": "1243450"
  },
  {
    "start": "1241000",
    "end": "1295000"
  },
  {
    "text": "developers the idea here is like it's oh so is it like relational databases well",
    "start": "1243450",
    "end": "1250260"
  },
  {
    "text": "it turns out transactions have pre-existed the relational databases it's just a good developer set of tools",
    "start": "1250260",
    "end": "1256200"
  },
  {
    "text": "to be able to do it all or nothing batch of work we're not turning dynamodb to our DBMS",
    "start": "1256200",
    "end": "1262710"
  },
  {
    "text": "we're just giving you a set of developer tools as in a way of transactions so you",
    "start": "1262710",
    "end": "1267810"
  },
  {
    "text": "can have a thomas city and you know customers have asked for it we've had",
    "start": "1267810",
    "end": "1273270"
  },
  {
    "text": "lots of customers who have built their own transactional libraries that are kind of difficult to manage because",
    "start": "1273270",
    "end": "1280200"
  },
  {
    "text": "they're happening outside without the visibility of the internals of the system and where we do have the",
    "start": "1280200",
    "end": "1286650"
  },
  {
    "text": "visibility into the internals of the system so we can manage the transactions better and faster on your behalf so let",
    "start": "1286650",
    "end": "1295680"
  },
  {
    "start": "1295000",
    "end": "1394000"
  },
  {
    "text": "me give you just an example there's a table and it's a usual pattern that we",
    "start": "1295680",
    "end": "1303390"
  },
  {
    "text": "see with dynamodb you know any DynamoDB a table is really a bucket of items",
    "start": "1303390",
    "end": "1308580"
  },
  {
    "text": "right so in this table we have a gaymer data let's say you have a game and you",
    "start": "1308580",
    "end": "1314100"
  },
  {
    "text": "want to keep the profile of a gamer so we have hammer 57 is a gamer the gamertag and for this particular gamer",
    "start": "1314100",
    "end": "1321090"
  },
  {
    "text": "we have four different items that we use to keep track of their data rank status",
    "start": "1321090",
    "end": "1326490"
  },
  {
    "text": "weapon assets and we used the sort key to separate out these items so if you want to get the",
    "start": "1326490",
    "end": "1333740"
  },
  {
    "text": "information on status for hammer 57 you're on that get operation and you",
    "start": "1333740",
    "end": "1340550"
  },
  {
    "text": "just get that part right so it's highly optimized because you only pay for the",
    "start": "1340550",
    "end": "1345650"
  },
  {
    "text": "reads and writes of that small unit and you don't have to get the entire item when all you need is the status or when",
    "start": "1345650",
    "end": "1352040"
  },
  {
    "text": "you just want to write the status if you want to get all the data we say it related to hammer 57 you just run a",
    "start": "1352040",
    "end": "1358880"
  },
  {
    "text": "query with hammer 57 you get all four items for hammer 57 now let's say you",
    "start": "1358880",
    "end": "1367100"
  },
  {
    "text": "have the system and it works great and you're happy with it and now you have added the feature that allows hammer 57",
    "start": "1367100",
    "end": "1374840"
  },
  {
    "text": "to use their coins to purchase and improve their health status so they",
    "start": "1374840",
    "end": "1380480"
  },
  {
    "text": "don't die so you want to be able to update the health property and set it to",
    "start": "1380480",
    "end": "1386750"
  },
  {
    "text": "hundred while simultaneously taking away coins as a unit a single atomic unit so",
    "start": "1386750",
    "end": "1393800"
  },
  {
    "text": "you will prepare two updates one of them says hey I wanna up the ten to a hundred",
    "start": "1393800",
    "end": "1400730"
  },
  {
    "text": "and then on the other side if hammer 57 has enough coins then I want to deduct",
    "start": "1400730",
    "end": "1408080"
  },
  {
    "text": "the cost of that health improvement from their balance and so that would be the",
    "start": "1408080",
    "end": "1414050"
  },
  {
    "text": "transaction that you would run those are the two items two updates that you would put in a transact right item and submit",
    "start": "1414050",
    "end": "1421340"
  },
  {
    "text": "as a single unit of work two DynamoDB and whoops and and get that transaction",
    "start": "1421340",
    "end": "1428270"
  },
  {
    "text": "done so so that's kind of the use cases for four transactions we think that most",
    "start": "1428270",
    "end": "1434180"
  },
  {
    "text": "of our customers will use transactions to update items multiple items in a table some customers will use",
    "start": "1434180",
    "end": "1440180"
  },
  {
    "text": "transaction to update multiple items in multiple tables but well we'll wait and",
    "start": "1440180",
    "end": "1446660"
  },
  {
    "text": "see what kind of innovative and ingenious ways you will use transactions I'm sure you will have a lot of feedback",
    "start": "1446660",
    "end": "1452720"
  },
  {
    "text": "for us with respect to using transactions our examples are documentation so please give us your",
    "start": "1452720",
    "end": "1460220"
  },
  {
    "text": "feedback so that we can improve this stuff your behalf now nice thing about",
    "start": "1460220",
    "end": "1465710"
  },
  {
    "text": "transactions in DynamoDB itll it's available as soon as you have the SDK",
    "start": "1465710",
    "end": "1471120"
  },
  {
    "text": "you can use it worldwide you don't have to wait for the next version of dynamodb because there is no",
    "start": "1471120",
    "end": "1476580"
  },
  {
    "text": "such thing you know improvements just go in and you just use them you can run transactions",
    "start": "1476580",
    "end": "1482280"
  },
  {
    "text": "on your freshly encrypted tables alright switching to capacity talked a little",
    "start": "1482280",
    "end": "1489930"
  },
  {
    "start": "1486000",
    "end": "1539000"
  },
  {
    "text": "bit about capacity we can all probably agree that managing database capacity is",
    "start": "1489930",
    "end": "1497540"
  },
  {
    "text": "is a challenging task but very important",
    "start": "1497540",
    "end": "1504210"
  },
  {
    "text": "one no one just says that who cares about the database capacity because",
    "start": "1504210",
    "end": "1509370"
  },
  {
    "text": "everybody cares and over time we've always tried to make capacity management for dynamo easier but basically if you",
    "start": "1509370",
    "end": "1517890"
  },
  {
    "text": "have over provisioned and all your database machines are running at 10% utilization you're wasting money if you",
    "start": "1517890",
    "end": "1524850"
  },
  {
    "text": "don't have enough database capacity you know your workloads are running slow and things aren't happening so being able to",
    "start": "1524850",
    "end": "1532350"
  },
  {
    "text": "match the available capacity to what it is that you need your consumption is is",
    "start": "1532350",
    "end": "1539220"
  },
  {
    "start": "1539000",
    "end": "1549000"
  },
  {
    "text": "the thing that everybody deals with so in relational databases you make a bigger machine every time you need more",
    "start": "1539220",
    "end": "1548120"
  },
  {
    "text": "in a clustered system you add more nodes",
    "start": "1548120",
    "end": "1553820"
  },
  {
    "start": "1549000",
    "end": "1577000"
  },
  {
    "text": "in either case it's extremely rare for anyone to take away nodes from a",
    "start": "1553820",
    "end": "1560130"
  },
  {
    "text": "database cluster I rarely hear people saying yeah we have this 20 node cluster",
    "start": "1560130",
    "end": "1565950"
  },
  {
    "text": "and the usage last week was low so we're gonna turn it into a 50 node cluster and",
    "start": "1565950",
    "end": "1572610"
  },
  {
    "text": "then week after we'll add more nodes to it nobody does that but with DynamoDB that is the idea that it's server less",
    "start": "1572610",
    "end": "1581660"
  },
  {
    "start": "1577000",
    "end": "1594000"
  },
  {
    "text": "there are no machines to manage and you should be able to dial up and dial down and it's scales so you should be able to",
    "start": "1581660",
    "end": "1589680"
  },
  {
    "text": "scale out as much as you want and you should be able to get the consistent performance so this morning and EJ",
    "start": "1589680",
    "end": "1597299"
  },
  {
    "start": "1594000",
    "end": "1666000"
  },
  {
    "text": "she announced DynamoDB on demand and the idea of DynamoDB on demand is first of",
    "start": "1597299",
    "end": "1603480"
  },
  {
    "text": "all it has no floor like there's no minimum capacity the minimum is zero if",
    "start": "1603480",
    "end": "1610139"
  },
  {
    "text": "you don't use it you don't use it if you have a terabyte of data sitting and DynamoDB you pay for the storage of the",
    "start": "1610139",
    "end": "1617159"
  },
  {
    "text": "terabyte maybe you pay for the backups but you're not making any read/write requests then you pay no fees for the",
    "start": "1617159",
    "end": "1624899"
  },
  {
    "text": "read/write requests it also has no upper limit so it goes wherever you take it we",
    "start": "1624899",
    "end": "1633600"
  },
  {
    "text": "are not going to govern you because we on demand you've asked to not be limited that's",
    "start": "1633600",
    "end": "1640409"
  },
  {
    "text": "the idea and we just pay for the requests that you make so no capacity",
    "start": "1640409",
    "end": "1645869"
  },
  {
    "text": "planning no provisioning pay for only the reads and writes that you do and you",
    "start": "1645869",
    "end": "1652259"
  },
  {
    "text": "basically eliminate the trade-off of will it be available and how much am I",
    "start": "1652259",
    "end": "1658529"
  },
  {
    "text": "paying because you're just paying you know coin-operated database I request I",
    "start": "1658529",
    "end": "1663899"
  },
  {
    "text": "pay request thing you mean you put this next to our provision model both models",
    "start": "1663899",
    "end": "1673109"
  },
  {
    "start": "1666000",
    "end": "1754000"
  },
  {
    "text": "are very valid and are here to stay we're not replacing one with the other",
    "start": "1673109",
    "end": "1678509"
  },
  {
    "text": "and the idea here is in our provision model there is a minimum maybe you have",
    "start": "1678509",
    "end": "1683549"
  },
  {
    "text": "a workload that for whatever reason you want that workload to have some minimum amount of capacity always because",
    "start": "1683549",
    "end": "1690600"
  },
  {
    "text": "there's constant requests to that you want to govern the max consumption",
    "start": "1690600",
    "end": "1695820"
  },
  {
    "text": "because that is the budget for that application I never want to pay more than whatever and then you have auto",
    "start": "1695820",
    "end": "1703559"
  },
  {
    "text": "scaling that basically tries to optimize in between the minimum and the ceiling",
    "start": "1703559",
    "end": "1708600"
  },
  {
    "text": "based on the policies that you set for your auto scaling like if I reach 60",
    "start": "1708600",
    "end": "1713970"
  },
  {
    "text": "percent target utilization raise it lower it but the idea here is you have",
    "start": "1713970",
    "end": "1719369"
  },
  {
    "text": "all the knobs to govern your consumption on the other hand with on demand it has",
    "start": "1719369",
    "end": "1727559"
  },
  {
    "text": "no limit maybe you have a business where every request you $2 and you never want to be",
    "start": "1727559",
    "end": "1733740"
  },
  {
    "text": "throttled you never want to be governed because every request means you make money so you say you know what on demand",
    "start": "1733740",
    "end": "1740900"
  },
  {
    "text": "let let the requests come so these are",
    "start": "1740900",
    "end": "1746430"
  },
  {
    "text": "the two models and you want to do a",
    "start": "1746430",
    "end": "1751440"
  },
  {
    "text": "little demo sure so I actually stopped the the script",
    "start": "1751440",
    "end": "1757830"
  },
  {
    "start": "1754000",
    "end": "1835000"
  },
  {
    "text": "which was automatically booking the affairs just as you could see how much",
    "start": "1757830",
    "end": "1763020"
  },
  {
    "text": "traffic we were driving to that table so this is I think we got the biggest DC to instance we could get in the region we",
    "start": "1763020",
    "end": "1769860"
  },
  {
    "text": "just drove as much traffic at it and it's pretty much been consistently running since I started it at the",
    "start": "1769860",
    "end": "1774900"
  },
  {
    "text": "beginning of the session and it peaked somewhere in the 36,000 requests per second and so this is a case where we",
    "start": "1774900",
    "end": "1781380"
  },
  {
    "text": "created the table we use the on demand capacity mode so I don't have to",
    "start": "1781380",
    "end": "1786390"
  },
  {
    "text": "provision it if I make zero requests we're not getting charged for it you make thirty six thousand requests a",
    "start": "1786390",
    "end": "1792180"
  },
  {
    "text": "second you're getting charged for thirty six thousand requests a second the nice thing is here there's no reactive",
    "start": "1792180",
    "end": "1797280"
  },
  {
    "text": "scaling up if your application takes off and all of a sudden you have a burst in traffic dynamodb takes care of that so",
    "start": "1797280",
    "end": "1805260"
  },
  {
    "text": "you know in a lot of ways the way I like to explain it is DynamoDB in this mode operates a lot like s3 you know if you",
    "start": "1805260",
    "end": "1813150"
  },
  {
    "text": "create if you're using us three probably most of you are you create a bucket you never worry about the capacity right you",
    "start": "1813150",
    "end": "1819090"
  },
  {
    "text": "just start storing objects in that bucket and you start making requests against it and so dynamodb does to the",
    "start": "1819090",
    "end": "1826620"
  },
  {
    "text": "database world what s3 did for object storage and the way that you set it up",
    "start": "1826620",
    "end": "1832530"
  },
  {
    "text": "is actually pretty easy so let me switch over to the management console and I'm",
    "start": "1832530",
    "end": "1837540"
  },
  {
    "start": "1835000",
    "end": "1844000"
  },
  {
    "text": "there may be some people who haven't used DynamoDB be free for so I'll just show you coming from the beginning I",
    "start": "1837540",
    "end": "1845059"
  },
  {
    "start": "1844000",
    "end": "1914000"
  },
  {
    "text": "login there's my tables",
    "start": "1845120",
    "end": "1850610"
  },
  {
    "text": "I actually have you can see now there's a set of tables here some of them are provisioned with capacity some of them",
    "start": "1850610",
    "end": "1857090"
  },
  {
    "text": "have this new on demand so I can go into rides and when you go to the capacity",
    "start": "1857090",
    "end": "1864920"
  },
  {
    "text": "mode you have your choice so you can still continue to use provisioned and if you have if you have a workload which is",
    "start": "1864920",
    "end": "1872780"
  },
  {
    "text": "pretty consistent or the rant the UU it's pretty the gradual increase in",
    "start": "1872780",
    "end": "1879230"
  },
  {
    "text": "decrease in traffic to your application or if you have predictable traffic where",
    "start": "1879230",
    "end": "1884570"
  },
  {
    "text": "you know you're going to have a burst at certain times of the day you might want to use provision and use auto scaling because there can be some financial",
    "start": "1884570",
    "end": "1891049"
  },
  {
    "text": "savings in doing so if you truly have a type of workload where it's spiky by",
    "start": "1891049",
    "end": "1897140"
  },
  {
    "text": "nature it's unpredictable on demand allows you to just set it forget it and will handle all the capacity management",
    "start": "1897140",
    "end": "1903890"
  },
  {
    "text": "for you on the backend so it's really just switching between these two settings on your table and those are",
    "start": "1903890",
    "end": "1910040"
  },
  {
    "text": "available there when you go and you create a table as well anything else you want to see let's let's hang out here",
    "start": "1910040",
    "end": "1918110"
  },
  {
    "start": "1914000",
    "end": "2144000"
  },
  {
    "text": "and I I'll cover cover a couple of things about what customers are are doing so if you think about managing",
    "start": "1918110",
    "end": "1928640"
  },
  {
    "text": "capacity there's two or three different concepts that you should know about one",
    "start": "1928640",
    "end": "1935270"
  },
  {
    "text": "is it's a financial thing because more capacity more consumption or whatever",
    "start": "1935270",
    "end": "1940580"
  },
  {
    "text": "you have to pay for so there's the issues of governing how much you're going to pay the second part is our",
    "start": "1940580",
    "end": "1950900"
  },
  {
    "text": "ability to give you the capacity that you need when you need it regardless of",
    "start": "1950900",
    "end": "1957350"
  },
  {
    "text": "the billing and how much you're paying and all of that and and and these two concepts are always present so when we",
    "start": "1957350",
    "end": "1965600"
  },
  {
    "text": "think about our provision model we have customers who managed capacity really",
    "start": "1965600",
    "end": "1972799"
  },
  {
    "text": "well because their workloads are in steady state most of the time and the",
    "start": "1972799",
    "end": "1980809"
  },
  {
    "text": "variation between their Lowe's and their peaks and their peak-to-average is very tight range so",
    "start": "1980809",
    "end": "1988260"
  },
  {
    "text": "they like to govern their consumption and their billow within a very defined",
    "start": "1988260",
    "end": "1996300"
  },
  {
    "text": "range and auto-scaling works really well for that because again you know it's managing",
    "start": "1996300",
    "end": "2002480"
  },
  {
    "text": "within a range and auto-scaling is always a reactive system we have to wait",
    "start": "2002480",
    "end": "2008300"
  },
  {
    "text": "for you to hit a particular threshold before we raise the limit and if your",
    "start": "2008300",
    "end": "2015530"
  },
  {
    "text": "consumption goes skyrocketing and you hit your head against the ceiling",
    "start": "2015530",
    "end": "2020840"
  },
  {
    "text": "there's going to be some lag time where we're saying are you sure you want to raise the bill are you sure you want to",
    "start": "2020840",
    "end": "2027140"
  },
  {
    "text": "raise the bill yeah looks like you want to raise raise the bill and then we give you more more capacity on the other hand",
    "start": "2027140",
    "end": "2034190"
  },
  {
    "text": "with on demand the contract is signed in advance you're saying I want to pay for",
    "start": "2034190",
    "end": "2040490"
  },
  {
    "text": "every request I make so we're not gonna sit around and wonder you think they want to pay more for that request and",
    "start": "2040490",
    "end": "2046250"
  },
  {
    "text": "the answer is yeah it's on demand they're gonna that's what they want and this is why we don't wait for you to hit",
    "start": "2046250",
    "end": "2052730"
  },
  {
    "text": "your head against the ceiling we just let you have as much as you want now practically speaking you might have a",
    "start": "2052730",
    "end": "2058790"
  },
  {
    "text": "tiny table that you've never used and all of a sudden you show up and you want",
    "start": "2058790",
    "end": "2063830"
  },
  {
    "text": "to do million reads from this table so it's gonna take us some amount of time to do the work necessary to scale this",
    "start": "2063830",
    "end": "2072200"
  },
  {
    "text": "table but once we do once you establish a particular high-water mark for a table",
    "start": "2072200",
    "end": "2077840"
  },
  {
    "text": "that table can always go back to that limit now if you're an on-demand mode you can bounce back and forth and",
    "start": "2077840",
    "end": "2085720"
  },
  {
    "text": "between whatever high-water mark you set and zero all day long and in the auto",
    "start": "2085720",
    "end": "2092060"
  },
  {
    "text": "scaling mode we will do a measured increases along the way between where",
    "start": "2092060",
    "end": "2097940"
  },
  {
    "text": "the minimum is and where your maximum is set so so that's kind of how this work",
    "start": "2097940",
    "end": "2104210"
  },
  {
    "text": "now we haven't we have a couple of customers that have really interesting workloads which are triggered by an",
    "start": "2104210",
    "end": "2111410"
  },
  {
    "text": "event and they have a very few number of minutes where they have to cross data they don't know when the events are",
    "start": "2111410",
    "end": "2118410"
  },
  {
    "text": "coming but they usually happen once twice that week so it's really hard for them to predict and so on demand works",
    "start": "2118410",
    "end": "2126570"
  },
  {
    "text": "really well because their usage is at zero for most of the week on the month",
    "start": "2126570",
    "end": "2132270"
  },
  {
    "text": "except maybe 20 minutes every week so on-demand works really well in that model because whenever it the load comes",
    "start": "2132270",
    "end": "2139650"
  },
  {
    "text": "with we take it and then they just pay for it anything else to add yeah the only other",
    "start": "2139650",
    "end": "2145110"
  },
  {
    "start": "2144000",
    "end": "2176000"
  },
  {
    "text": "thing I probably would add to it is you don't have to choose a mode and stick to it yeah so you may be let's let's say",
    "start": "2145110",
    "end": "2151740"
  },
  {
    "text": "you're writing a game right and during that launch you have just tens of",
    "start": "2151740",
    "end": "2156750"
  },
  {
    "text": "thousands of users who go on there and you put it in on-demand because you have no way to predict it but then as people",
    "start": "2156750",
    "end": "2162360"
  },
  {
    "text": "drop off and you start to hit steady-state the amount of use of DynamoDB may get you know more",
    "start": "2162360",
    "end": "2167850"
  },
  {
    "text": "consistent you can move between the on-demand and the provision mode as a measure of performing cost savings so if",
    "start": "2167850",
    "end": "2176580"
  },
  {
    "start": "2176000",
    "end": "2214000"
  },
  {
    "text": "you have a brand new application and you don't really know where it's gonna go you put it in on-demand mode and then",
    "start": "2176580",
    "end": "2181860"
  },
  {
    "text": "you let it sit and after a while you say hey you know there's a pretty steady state I can switch to the provision mode",
    "start": "2181860",
    "end": "2188100"
  },
  {
    "text": "and manage my usage within that band which is comfortable for me and you can go back and forth so the it's really",
    "start": "2188100",
    "end": "2195930"
  },
  {
    "text": "important to realize that DynamoDB on-demand isn't some different kind of",
    "start": "2195930",
    "end": "2201030"
  },
  {
    "text": "system it's the same DynamoDB same feature same everything it's just a matter of how we built and how we govern",
    "start": "2201030",
    "end": "2208460"
  },
  {
    "text": "all right let's go back and take a look at a couple of more slides so these are",
    "start": "2208460",
    "end": "2217620"
  },
  {
    "start": "2214000",
    "end": "2444000"
  },
  {
    "text": "some of the things that we've done over the last few months so going backwards",
    "start": "2217620",
    "end": "2224130"
  },
  {
    "text": "but on demand and transactions I think we spent a lot of time on that I want to",
    "start": "2224130",
    "end": "2229440"
  },
  {
    "text": "spend a little bit of time on talking about adaptive capacity this is not a feature that shows up in the console",
    "start": "2229440",
    "end": "2235740"
  },
  {
    "text": "it's not a feature that you program - this is one of the things which happens underneath the covers and maybe you went",
    "start": "2235740",
    "end": "2242880"
  },
  {
    "text": "through Jasso session on Monday and heard about how to dynamodb works on",
    "start": "2242880",
    "end": "2248190"
  },
  {
    "text": "there the hood if you haven't you can watch the video but the work we've done with adaptive capacity is really important when in the",
    "start": "2248190",
    "end": "2256850"
  },
  {
    "text": "early days of DynamoDB it's a distributed system you create a table you have a partitioning key and you put",
    "start": "2256850",
    "end": "2263690"
  },
  {
    "text": "data in there and use the data and you make calls the the system expected that",
    "start": "2263690",
    "end": "2269660"
  },
  {
    "text": "you picked a good partitioning key and you distributed your data evenly and you access your data",
    "start": "2269660",
    "end": "2275750"
  },
  {
    "text": "evenly well that was a good way to start for a distributed database for experts",
    "start": "2275750",
    "end": "2282680"
  },
  {
    "text": "that have a PhD in distributed computing but more and more we have lots of users",
    "start": "2282680",
    "end": "2288380"
  },
  {
    "text": "who are saying you know even with the PhD no one can figure out how to make",
    "start": "2288380",
    "end": "2293390"
  },
  {
    "text": "every workload beautifully distributed and so evenly right you have to be more",
    "start": "2293390",
    "end": "2298580"
  },
  {
    "text": "flexible so the work we've done with adaptive capacity is making dynami dve more flexible more forgiving in the face",
    "start": "2298580",
    "end": "2307010"
  },
  {
    "text": "of workloads that have a skew in access like you're hitting certain set of things more frequently than others right",
    "start": "2307010",
    "end": "2314560"
  },
  {
    "text": "we don't ever want you to manage heatmaps we want to manage it for you so",
    "start": "2314560",
    "end": "2320630"
  },
  {
    "text": "if your workload has some skew in it well obviously it's always better to have a nicely distributed data and",
    "start": "2320630",
    "end": "2326570"
  },
  {
    "text": "nicely distributed access pattern but if it's not adaptive capacity tries to",
    "start": "2326570",
    "end": "2331700"
  },
  {
    "text": "compensate for that and the work we've done there is will move partitions around to cool things off we'll take a",
    "start": "2331700",
    "end": "2338480"
  },
  {
    "text": "partition that has a bunch of data co-located that are being hit more often and split them so that we're always",
    "start": "2338480",
    "end": "2346010"
  },
  {
    "text": "trying to deliver the promise of your readwrite capacity for the table and",
    "start": "2346010",
    "end": "2352690"
  },
  {
    "text": "aggregate and this is work that we've done over the last couple of years and",
    "start": "2352690",
    "end": "2357830"
  },
  {
    "text": "we're continuing to do that and this work was really really important for us to do on demand capacity because",
    "start": "2357830",
    "end": "2364940"
  },
  {
    "text": "everybody here says yeah on demand but how do you make sure that the capacity is there when I show up well this is the",
    "start": "2364940",
    "end": "2372230"
  },
  {
    "text": "part of the dynamic capacity management underneath the covers which has given us the agility to move things around and",
    "start": "2372230",
    "end": "2378710"
  },
  {
    "text": "shove things around and allow you to access things with spiky workloads with",
    "start": "2378710",
    "end": "2384050"
  },
  {
    "text": "uneven workloads with skew now there's no silver bullet in this so this is an",
    "start": "2384050",
    "end": "2390560"
  },
  {
    "text": "area where we'll require continuous improvement and all of these improvements that we've done in adaptive",
    "start": "2390560",
    "end": "2396230"
  },
  {
    "text": "capacity applies to both on-demand and provisioned as we slowly roll the stuff",
    "start": "2396230",
    "end": "2402230"
  },
  {
    "text": "out and this is the stuff that you'll never know when it happens but I hope that your experience is improving with",
    "start": "2402230",
    "end": "2408580"
  },
  {
    "text": "dynamodb as we make some of these changes and maybe you will see less errors and less throttling even if you",
    "start": "2408580",
    "end": "2416510"
  },
  {
    "text": "have a workload which is let's say a little lopsided we introduced an SLA",
    "start": "2416510",
    "end": "2423770"
  },
  {
    "text": "earlier this year we did pointing time recovery and the encryption at rest",
    "start": "2423770",
    "end": "2430060"
  },
  {
    "text": "encryption that rest is now by default on you create a table it's encrypted and",
    "start": "2430060",
    "end": "2435790"
  },
  {
    "text": "on-demand backups and global tables so you want to just do a little tour sure",
    "start": "2435790",
    "end": "2443960"
  },
  {
    "text": "all right we want to let's talk about let's talk about pointing time recovery",
    "start": "2443960",
    "end": "2452150"
  },
  {
    "start": "2444000",
    "end": "2500000"
  },
  {
    "text": "a little bit sure so if you look at any of your tables you can go to the backups",
    "start": "2452150",
    "end": "2457700"
  },
  {
    "text": "tab you'll see here that I have point in time recovery enabled and so a point in",
    "start": "2457700",
    "end": "2464180"
  },
  {
    "text": "time recovery does there's there's two there's two modes of doing backup so let me explain the the two of them that we have the first one here is point in time",
    "start": "2464180",
    "end": "2471170"
  },
  {
    "text": "recovery and this is basically you click button or call the API in your table and",
    "start": "2471170",
    "end": "2476300"
  },
  {
    "text": "you enable that and what it's going to give you is a 35 day sliding window and",
    "start": "2476300",
    "end": "2481540"
  },
  {
    "text": "you can return restore your table to a new table at any point in time down to",
    "start": "2481540",
    "end": "2487760"
  },
  {
    "text": "the second during that window so for example here on this table we enabled it",
    "start": "2487760",
    "end": "2494300"
  },
  {
    "text": "on November 18th so that's a fair amount of time I could go back if I wanted to",
    "start": "2494300",
    "end": "2500380"
  },
  {
    "start": "2500000",
    "end": "2626000"
  },
  {
    "text": "restore that and I could choose a date",
    "start": "2500380",
    "end": "2505550"
  },
  {
    "text": "I can choose an hour minute to the",
    "start": "2505550",
    "end": "2510860"
  },
  {
    "text": "second and what point in time recovery is really good for are those oops moments right somebody inadvertently writes to a",
    "start": "2510860",
    "end": "2518240"
  },
  {
    "text": "production table and now you need to fix that and so you use point in time recovery to restore the table to that",
    "start": "2518240",
    "end": "2524600"
  },
  {
    "text": "point right where it was you know the data set was correct take that second",
    "start": "2524600",
    "end": "2529970"
  },
  {
    "text": "table pull out the day that you want to and then apply that to your existing production table and you can fix that",
    "start": "2529970",
    "end": "2536150"
  },
  {
    "text": "now the other mechanism is that is there is your ability to take an on-demand",
    "start": "2536150",
    "end": "2541250"
  },
  {
    "text": "backup so an on-demand backup is not time bound you're literally taking a",
    "start": "2541250",
    "end": "2547430"
  },
  {
    "text": "snapshot of your table and you can store it for as long as you want to pay for it",
    "start": "2547430",
    "end": "2552680"
  },
  {
    "text": "so if you have compliance or regulate regulatory reasons where you need to",
    "start": "2552680",
    "end": "2559670"
  },
  {
    "text": "take a snapshot of your database and and archive it on demand allows you to do that and I'm gonna have you I have no",
    "start": "2559670",
    "end": "2567950"
  },
  {
    "text": "idea how many tests have been done on this so I'm gonna have you all take a quick look don't blink because I'm going",
    "start": "2567950",
    "end": "2573350"
  },
  {
    "text": "to create that backup and it's done and that table I didn't even look at see",
    "start": "2573350",
    "end": "2578600"
  },
  {
    "text": "what the size of the table is maybe that's not all that impressive the time it takes to do the backup is always the",
    "start": "2578600",
    "end": "2584570"
  },
  {
    "text": "same we go there was a smile to the table but if I took a larger table this one has 35 gigabytes in it right I'll go",
    "start": "2584570",
    "end": "2591350"
  },
  {
    "text": "do the same thing this one will be called Tony don't blink we're done so",
    "start": "2591350",
    "end": "2599240"
  },
  {
    "text": "that's how fast it is to create a backup and you can create that as long as you want to pay for it so obviously for this",
    "start": "2599240",
    "end": "2604310"
  },
  {
    "text": "stuff to work at the scale of dynamo we're continuously running backups and continuously recording changes and we've",
    "start": "2604310",
    "end": "2611720"
  },
  {
    "text": "gotten to a point where when you go click backup that's a meta data operation for us and then figure out how",
    "start": "2611720",
    "end": "2617150"
  },
  {
    "text": "to assemble the things that are necessary for that snapshot to exist and this is the work that we do so not to",
    "start": "2617150",
    "end": "2623930"
  },
  {
    "text": "impact your workload because you want to be able to do the backup when ever without anybody yelling hey the",
    "start": "2623930",
    "end": "2629750"
  },
  {
    "start": "2626000",
    "end": "2655000"
  },
  {
    "text": "applications slow because somebody's doing it backup so point in time",
    "start": "2629750",
    "end": "2636440"
  },
  {
    "text": "recovery was introduced in March or February so it's been in the system and a lot of",
    "start": "2636440",
    "end": "2643970"
  },
  {
    "text": "customers use it if you're not using it it's a good insurance policy to have and",
    "start": "2643970",
    "end": "2649190"
  },
  {
    "text": "will continue to improve on on this feature and then a little bit about",
    "start": "2649190",
    "end": "2654320"
  },
  {
    "text": "encryption yeah sure so if you didn't hear earlier this month we encrypted all",
    "start": "2654320",
    "end": "2660110"
  },
  {
    "start": "2655000",
    "end": "2699000"
  },
  {
    "text": "customer tables so with you didn't have to make a single change if you're already using DynamoDB all of your",
    "start": "2660110",
    "end": "2666950"
  },
  {
    "text": "tables aren't encrypted if you create a new table it's encrypted by default if you look at all of my tables here it",
    "start": "2666950",
    "end": "2673820"
  },
  {
    "text": "might be a little bit hard to to see but there's the encryption type and this default so if you do nothing you create",
    "start": "2673820",
    "end": "2680630"
  },
  {
    "text": "a new table it's going to encrypt it using a key that AWS owns and manages",
    "start": "2680630",
    "end": "2686120"
  },
  {
    "text": "and if I were to look at all of my tables because I think we all just created them with the default encryption",
    "start": "2686120",
    "end": "2692360"
  },
  {
    "text": "type you don't have an option in there but you don't have an option to have an unencrypted table but I could also go in",
    "start": "2692360",
    "end": "2699020"
  },
  {
    "start": "2699000",
    "end": "2776000"
  },
  {
    "text": "and create a table my partition key",
    "start": "2699020",
    "end": "2708320"
  },
  {
    "text": "because I know someone's out there and then I'm not going to use the default setting so if it's use the default",
    "start": "2708320",
    "end": "2714330"
  },
  {
    "text": "settings it's going to use a key that we control and manage on your behalf but if I scroll down there and of course you",
    "start": "2714330",
    "end": "2720450"
  },
  {
    "text": "can choose your provisioning mode it's one of the things that we talked about I scroll down there you can choose between",
    "start": "2720450",
    "end": "2727920"
  },
  {
    "text": "two key options currently so the first one is the default this is a cmk that",
    "start": "2727920",
    "end": "2734010"
  },
  {
    "text": "AWS owns and so that's provided to you at no additional cost so we encrypt your table and you don't",
    "start": "2734010",
    "end": "2740070"
  },
  {
    "text": "have to worry about it but if you want to have the ability to see how it those",
    "start": "2740070",
    "end": "2746700"
  },
  {
    "text": "keys are being accessed to access your DynamoDB table the option you can choose down here is the AWS managed cmk so this",
    "start": "2746700",
    "end": "2755580"
  },
  {
    "text": "is a cmk that we manage on your behalf though it is a key that is in your",
    "start": "2755580",
    "end": "2761430"
  },
  {
    "text": "account so you're gonna pay for that key but you're going to be able to get the cloud trail for that and then you would",
    "start": "2761430",
    "end": "2767490"
  },
  {
    "text": "be responsible for the cloud trail so those are the two options we have all right let's go back to the slides here",
    "start": "2767490",
    "end": "2776670"
  },
  {
    "start": "2776000",
    "end": "2816000"
  },
  {
    "text": "for a second I wanted to mention that",
    "start": "2776670",
    "end": "2781700"
  },
  {
    "text": "just recently our migration team is enabled migration from Cassandra to",
    "start": "2781700",
    "end": "2788550"
  },
  {
    "text": "dynamo so this is a service now that you can use to manage migration of Cassandra",
    "start": "2788550",
    "end": "2793650"
  },
  {
    "text": "clusters to dynamo it's pretty nifty you should go check it out if if you ever",
    "start": "2793650",
    "end": "2799470"
  },
  {
    "text": "think about this kinds of migrations or if you have some customers that have",
    "start": "2799470",
    "end": "2805770"
  },
  {
    "text": "used it and with good success and we have a couple of again the sessions with GE aviation I think they're migrated",
    "start": "2805770",
    "end": "2813000"
  },
  {
    "text": "from Cassandra clusters so some interesting information there this is a list of the sessions that we have about",
    "start": "2813000",
    "end": "2822090"
  },
  {
    "start": "2816000",
    "end": "2856000"
  },
  {
    "text": "dynamodb so I would if you're really interested in the transaction stuff there's a session today I believe it's",
    "start": "2822090",
    "end": "2829560"
  },
  {
    "text": "at 7:00 Josi is doing on transactions and he will do a bit of a deep dive if",
    "start": "2829560",
    "end": "2836880"
  },
  {
    "text": "you really want to know how dynamodb works under the hood you should check out Jo session which is dynam would be",
    "start": "2836880",
    "end": "2843570"
  },
  {
    "text": "be under the hood I really recommend checking out the customer sessions like Nike and and gumgum",
    "start": "2843570",
    "end": "2850650"
  },
  {
    "text": "they're interesting ways of using dynamodb the other thing is I think we",
    "start": "2850650",
    "end": "2859670"
  },
  {
    "start": "2856000",
    "end": "2880000"
  },
  {
    "text": "are continuously updating and putting our blogs out on AWS database blog and I",
    "start": "2859670",
    "end": "2867060"
  },
  {
    "text": "don't know how many people know about that but these are some of the interesting blogs that that are there we're really trying to communicate",
    "start": "2867060",
    "end": "2875100"
  },
  {
    "text": "through AWS database blog and and they also have that dynamodb and Twitter tag",
    "start": "2875100",
    "end": "2883490"
  },
  {
    "start": "2880000",
    "end": "2911000"
  },
  {
    "text": "where all of the changes and blogs and documentation and new stuff all shows up",
    "start": "2883490",
    "end": "2889020"
  },
  {
    "text": "there so we wanted to finish a little early so that we could open up to some questions",
    "start": "2889020",
    "end": "2896030"
  },
  {
    "text": "so if you have any questions come on up hard questions you have a tip if you",
    "start": "2896030",
    "end": "2912900"
  },
  {
    "start": "2911000",
    "end": "2947000"
  },
  {
    "text": "have a table that's provisioned",
    "start": "2912900",
    "end": "2916579"
  },
  {
    "text": "can you change it to on-demand yes you can change the table from provision to",
    "start": "2917950",
    "end": "2924460"
  },
  {
    "text": "on-demand back to provision I think you can change from provisions to on-demand",
    "start": "2924460",
    "end": "2930700"
  },
  {
    "text": "once a day and every 24 hours every 24 hours it can make changes don't want to",
    "start": "2930700",
    "end": "2937210"
  },
  {
    "text": "lock anybody in into anything they may or may not like actually we think that a lot of customers will be going back and",
    "start": "2937210",
    "end": "2943510"
  },
  {
    "text": "forth depending on what stage their application is it yes early on you're at",
    "start": "2943510",
    "end": "2948849"
  },
  {
    "start": "2947000",
    "end": "3444000"
  },
  {
    "text": "a slide that listed four nines for the precondition checks on transactions so",
    "start": "2948849",
    "end": "2954460"
  },
  {
    "text": "the four nine SLA yes yes does that mean that one in 10,000 attempts to withdraw",
    "start": "2954460",
    "end": "2960760"
  },
  {
    "text": "a billion dollars from my bank account will succeed no what it means is that",
    "start": "2960760",
    "end": "2966569"
  },
  {
    "text": "transactional api's are not excluded from our SLA calculations that the",
    "start": "2966569",
    "end": "2972190"
  },
  {
    "text": "transaction API is our G ade and available now and the standard dynamodb",
    "start": "2972190",
    "end": "2978730"
  },
  {
    "text": "availability SLA which was launched a few months ago applies to transactions as well it's not some beta thing that is",
    "start": "2978730",
    "end": "2986400"
  },
  {
    "text": "excluded from real so you could use it in for real so just to clarify it never",
    "start": "2986400",
    "end": "2992950"
  },
  {
    "text": "violates the preconditions condition checks inside transactions are things",
    "start": "2992950",
    "end": "3000540"
  },
  {
    "text": "that have to do with your application so if you have a condition check that says if Tony's balance is zero then cancel",
    "start": "3000540",
    "end": "3009809"
  },
  {
    "text": "the transaction we will cancel that transaction that's not a failure that's actually the application operating",
    "start": "3009809",
    "end": "3015329"
  },
  {
    "text": "correctly right I'm saying it will always fail when it should yes absolutely one in 10,000 chance it won't",
    "start": "3015329",
    "end": "3021390"
  },
  {
    "text": "no they will always fail zero will always be zero and two will always be",
    "start": "3021390",
    "end": "3027000"
  },
  {
    "text": "smaller than three yes so about the",
    "start": "3027000",
    "end": "3034260"
  },
  {
    "text": "capacity so with traditional capacity or what was available before today we were",
    "start": "3034260",
    "end": "3040589"
  },
  {
    "text": "using hive to like bulk dump data out or in we had we could specify a percentage",
    "start": "3040589",
    "end": "3046710"
  },
  {
    "text": "of the capacity we wanted to you is there any ability to rate a limit that kind of data transfer with the on-demand capacity no with on-demand",
    "start": "3046710",
    "end": "3054180"
  },
  {
    "text": "capacity it basically says we're not going to govern consumption if you send",
    "start": "3054180",
    "end": "3059759"
  },
  {
    "text": "us a request we will honor that request so you can't rate limit if you want a rate limit on demand you'll have to rate",
    "start": "3059759",
    "end": "3066539"
  },
  {
    "text": "limit yourself okay only send us to being provisioned yes yeah yes hi",
    "start": "3066539",
    "end": "3074969"
  },
  {
    "text": "can you please elaborate more about restoring backups and global tables as",
    "start": "3074969",
    "end": "3080640"
  },
  {
    "text": "well as transactions yes so when when",
    "start": "3080640",
    "end": "3089189"
  },
  {
    "text": "you do a backup and and when you restore a backup the backup themselves are not",
    "start": "3089189",
    "end": "3095849"
  },
  {
    "text": "transactional so if you have a table that has I don't know hundred billion",
    "start": "3095849",
    "end": "3103140"
  },
  {
    "text": "items and you had done a transaction in there and then you restore that hundred billion item table the the table will be",
    "start": "3103140",
    "end": "3110640"
  },
  {
    "text": "consistent but not transactional so if that and that's that's how it's working",
    "start": "3110640",
    "end": "3115769"
  },
  {
    "text": "right now okay and to be clear for transactions are these supported with global tables no global tables are",
    "start": "3115769",
    "end": "3123259"
  },
  {
    "text": "eventually consistent a synchronous tree replicated across large distances so by",
    "start": "3123259",
    "end": "3130289"
  },
  {
    "text": "nature an asynchronous replication is not transactional you can do",
    "start": "3130289",
    "end": "3135390"
  },
  {
    "text": "transactions to the local replicas of a table but by default transactions are",
    "start": "3135390",
    "end": "3141509"
  },
  {
    "text": "disabled on global tables if you want to do transactions on a local replica of a global table you have to ask us to",
    "start": "3141509",
    "end": "3147660"
  },
  {
    "text": "enable that and that's so we can have this conversation where we say just know",
    "start": "3147660",
    "end": "3152910"
  },
  {
    "text": "that a global asynchronous replication is not transactional thank you sure so",
    "start": "3152910",
    "end": "3160380"
  },
  {
    "text": "we already had transactions in RDS and now we have them in dynamo yes when are",
    "start": "3160380",
    "end": "3165929"
  },
  {
    "text": "you gonna announce a mixed transaction for both databases are you asking for",
    "start": "3165929",
    "end": "3173009"
  },
  {
    "text": "coordinated transactions between dissimilar databases I guess so",
    "start": "3173009",
    "end": "3178759"
  },
  {
    "text": "not in 2019",
    "start": "3178759",
    "end": "3182929"
  },
  {
    "text": "yes okay so when I make a restore our backup will it consumed my read and",
    "start": "3184450",
    "end": "3190160"
  },
  {
    "text": "write capacity when you restore a table has it has nothing to do with your read",
    "start": "3190160",
    "end": "3197210"
  },
  {
    "text": "or write capacity when the table is completed restoring it will have some settings which were appropriate as the",
    "start": "3197210",
    "end": "3204230"
  },
  {
    "text": "time of the backup if you're restoring from an on demand backup the the newly restored table will have the same",
    "start": "3204230",
    "end": "3210290"
  },
  {
    "text": "settings as the table where at the time of the backup if you're restoring from a",
    "start": "3210290",
    "end": "3215830"
  },
  {
    "text": "pillar pointing time recovery then the table will inherit the settings for the",
    "start": "3215830",
    "end": "3221720"
  },
  {
    "text": "the table that exists the readwrite capacity settings for your production table is unrelated to the restore we",
    "start": "3221720",
    "end": "3229790"
  },
  {
    "text": "will restore the table as fast as we can do regardless of what the original table",
    "start": "3229790",
    "end": "3235880"
  },
  {
    "text": "settings are change the settings from on-demand to provision yes or back and",
    "start": "3235880",
    "end": "3242750"
  },
  {
    "text": "forth how long it will take an effect Arnie how long it will take an effect to take an effect it's instantaneous I",
    "start": "3242750",
    "end": "3250640"
  },
  {
    "text": "believe which I mean it doesn't take time to switch billing models yes two",
    "start": "3250640",
    "end": "3257600"
  },
  {
    "text": "quick questions how are you billing for on-demand and",
    "start": "3257600",
    "end": "3263890"
  },
  {
    "text": "also for transactional the example you showed was Java I assume the Python SDK",
    "start": "3263890",
    "end": "3269810"
  },
  {
    "text": "is yes been updated yes so although all the languages are supported in fact if you go read the",
    "start": "3269810",
    "end": "3275690"
  },
  {
    "text": "transaction blog and database it uses a Python example okay so how does the",
    "start": "3275690",
    "end": "3281030"
  },
  {
    "text": "billing firaon to me ah so the billing is we count the requests and we charge it for each request the dynamodb pricing",
    "start": "3281030",
    "end": "3288410"
  },
  {
    "text": "page has the pricing for transit for for on-demand as of now it's live you can go",
    "start": "3288410",
    "end": "3294619"
  },
  {
    "text": "check it out different rates in different regions as always all right thank you by the way with transactions",
    "start": "3294619",
    "end": "3301310"
  },
  {
    "text": "since you brought up billing we do a little more work for transactions so when you do a transactional put we",
    "start": "3301310",
    "end": "3308210"
  },
  {
    "text": "actually have to do two rights so we do a prepare and a it so we will it will cost you two WCU's",
    "start": "3308210",
    "end": "3315989"
  },
  {
    "text": "to do a transaction alright and if you just do a regular put it will cost you one w see you same for reads again we do",
    "start": "3315989",
    "end": "3325400"
  },
  {
    "text": "prepare and a commit so we do more work for transactions we don't have a",
    "start": "3325400",
    "end": "3330419"
  },
  {
    "text": "separate metering and billing it's just that we use more of your RC UW's u tokens same for on-demand and but it we",
    "start": "3330419",
    "end": "3340140"
  },
  {
    "text": "think that it's a lot better than some of the transaction libraries where you know people are doing somewhere around 7",
    "start": "3340140",
    "end": "3347339"
  },
  {
    "text": "to 12 reads and writes for a transaction so I think we're a little better yes is",
    "start": "3347339",
    "end": "3354269"
  },
  {
    "text": "on-demand usable with global tables yes",
    "start": "3354269",
    "end": "3360319"
  },
  {
    "text": "you partially answered this I think but it sounds like you're doing a two-phase commit and that means that I should be",
    "start": "3360589",
    "end": "3366749"
  },
  {
    "text": "thinking about how to avoid contention between making transactions in in any",
    "start": "3366749",
    "end": "3373319"
  },
  {
    "text": "transactional system it's always good to figure out how to avoid contention because contention is managed for you by",
    "start": "3373319",
    "end": "3380459"
  },
  {
    "text": "the database some databases manage contention better and some databases manage contention differently and so yes",
    "start": "3380459",
    "end": "3387959"
  },
  {
    "text": "you should you should try to manage contention and have as little contentions as possible if you're doing",
    "start": "3387959",
    "end": "3394709"
  },
  {
    "text": "a million transactions on million different items in dynamo DB there is no contention if an item is involved in in",
    "start": "3394709",
    "end": "3401969"
  },
  {
    "text": "multiple transaction one of them is gonna get too realized and go forward and the other ones are gonna get",
    "start": "3401969",
    "end": "3407539"
  },
  {
    "text": "cancelled then you'll have to retry right so we always go for the serializable so if you can't serialize",
    "start": "3407539",
    "end": "3414150"
  },
  {
    "text": "it then i will let you know right and that's when you know you have high contention but you know it's not like oh",
    "start": "3414150",
    "end": "3419909"
  },
  {
    "text": "I gotta go see what's stuck because there's a convoy like there's no notion of queues that continue to increase in",
    "start": "3419909",
    "end": "3427529"
  },
  {
    "text": "size because you're have high contention there's always one that's succeeding and",
    "start": "3427529",
    "end": "3433319"
  },
  {
    "text": "then and and more some that are not and you know reason thank you yes hi recently we had",
    "start": "3433319",
    "end": "3440869"
  },
  {
    "text": "a scenario where we were updating auto-scaling on one of our tables through a cloud formation stack update",
    "start": "3440869",
    "end": "3446539"
  },
  {
    "start": "3444000",
    "end": "3600000"
  },
  {
    "text": "and it wanted to reset auto scaling and decrease capacity we then got we",
    "start": "3446539",
    "end": "3454640"
  },
  {
    "text": "received an error saying that we reached our maximum number of down scales and then we had to wait an hour would",
    "start": "3454640",
    "end": "3460910"
  },
  {
    "text": "switching the table over to on-demand capacity",
    "start": "3460910",
    "end": "3466039"
  },
  {
    "text": "allow us to update the auto scaling and reset that you wouldn't need to it when",
    "start": "3466039",
    "end": "3473180"
  },
  {
    "text": "you switch over to Honda man you're no longer using auto scaling so yeah so in a sense yes because you're disabling it",
    "start": "3473180",
    "end": "3478250"
  },
  {
    "text": "and you're paying per request so I yes so if you switched over and you wouldn't make any more requests you would no",
    "start": "3478250",
    "end": "3484099"
  },
  {
    "text": "longer be getting billed for those so switching over to on-demand just to get around the scenario to allow me to reset",
    "start": "3484099",
    "end": "3490400"
  },
  {
    "text": "my auto scaling I would eventually want to be back on that auto scaling you could switch back 24 hours later hello",
    "start": "3490400",
    "end": "3497299"
  },
  {
    "text": "you should call support on that so that there's a case on that we know there's a maximum number of downs I know but still",
    "start": "3497299",
    "end": "3503630"
  },
  {
    "text": "if it's a issue with the cloud formation template not matching something or was",
    "start": "3503630",
    "end": "3508819"
  },
  {
    "text": "that because you didn't have a matching template we had downscaled through the auto scaling four times within an hour",
    "start": "3508819",
    "end": "3515779"
  },
  {
    "text": "and I guess that was a limit possibly a soft limit but we did hit it and we just",
    "start": "3515779",
    "end": "3521059"
  },
  {
    "text": "happened to be updating and fixing the auto scaling so we were unable to finish our production deployment at the time we",
    "start": "3521059",
    "end": "3527480"
  },
  {
    "text": "had to wait an hour before exactly the table and the rest of the services that and and on the table I think I think",
    "start": "3527480",
    "end": "3533119"
  },
  {
    "text": "that's a good piece of feedback for us to improve because sometimes those limits get in the way and you know we",
    "start": "3533119",
    "end": "3539270"
  },
  {
    "text": "could you could probably improve on them okay thank you Thanks yes I have a",
    "start": "3539270",
    "end": "3544369"
  },
  {
    "text": "question on global table yes what is the actual latency on top of your network",
    "start": "3544369",
    "end": "3551750"
  },
  {
    "text": "from one region to the other region that's a that's a question that can only",
    "start": "3551750",
    "end": "3558980"
  },
  {
    "text": "be answered by a physicists who can predict the distance and and so I don't",
    "start": "3558980",
    "end": "3565490"
  },
  {
    "text": "want to be flippant about it but I don't know if replicating from Japan to Brazil or the",
    "start": "3565490",
    "end": "3573350"
  },
  {
    "text": "East region to West Region it's it's in",
    "start": "3573350",
    "end": "3579180"
  },
  {
    "text": "tens of milliseconds as far as the network is concerned usually the network",
    "start": "3579180",
    "end": "3584940"
  },
  {
    "text": "distance and is in a few milliseconds within the United States let's say 30 millisecond and so the latencies and the",
    "start": "3584940",
    "end": "3591900"
  },
  {
    "text": "lags for replication has to do with the throughput and amount of Rights that you",
    "start": "3591900",
    "end": "3598950"
  },
  {
    "text": "do those are more of an issue than the distance in in in in within the research",
    "start": "3598950",
    "end": "3604920"
  },
  {
    "text": "space out your rear based on your right capacity right yeah and how much you're",
    "start": "3604920",
    "end": "3610800"
  },
  {
    "text": "writing but we do we do manage the lag and we monitor it and so vary if you",
    "start": "3610800",
    "end": "3617340"
  },
  {
    "text": "have a 1k object so we're gonna run out of time thank you especially all of you",
    "start": "3617340",
    "end": "3623490"
  },
  {
    "text": "who stuck around please do the surveys Jeff and I will be outside the room so",
    "start": "3623490",
    "end": "3628500"
  },
  {
    "text": "you can continue taking questions but then we're gonna get kicked out of here so meet us in the back if you want to",
    "start": "3628500",
    "end": "3635580"
  },
  {
    "text": "continue",
    "start": "3635580",
    "end": "3637940"
  }
]