[
  {
    "text": "I am milind Oak Senior red shift",
    "start": "480",
    "end": "2879"
  },
  {
    "text": "specialist Solutions",
    "start": "2879",
    "end": "4440"
  },
  {
    "text": "architect and I am joined by my",
    "start": "4440",
    "end": "6480"
  },
  {
    "text": "colleague Rex K who will be taking this",
    "start": "6480",
    "end": "8800"
  },
  {
    "text": "session on RDS MySQL ZL integration with",
    "start": "8800",
    "end": "13280"
  },
  {
    "text": "Amazon red",
    "start": "13280",
    "end": "15160"
  },
  {
    "text": "shift a common pattern we see with",
    "start": "15160",
    "end": "18600"
  },
  {
    "text": "customers is using Amazon Aurora or",
    "start": "18600",
    "end": "22880"
  },
  {
    "text": "Amazon RDS for their operational",
    "start": "22880",
    "end": "25720"
  },
  {
    "text": "databases and Amazon red shift as their",
    "start": "25720",
    "end": "28920"
  },
  {
    "text": "analytic system that powers Insight",
    "start": "28920",
    "end": "32398"
  },
  {
    "text": "typically customers have multiple Aurora",
    "start": "32399",
    "end": "34960"
  },
  {
    "text": "and orus databases and so it requires",
    "start": "34960",
    "end": "38360"
  },
  {
    "text": "them to build multiple data pipelines to",
    "start": "38360",
    "end": "41280"
  },
  {
    "text": "get their operational data ingested into",
    "start": "41280",
    "end": "44719"
  },
  {
    "text": "Amazon red shift era warehouse and we",
    "start": "44719",
    "end": "47480"
  },
  {
    "text": "have heard that ETL is the biggest cost",
    "start": "47480",
    "end": "50680"
  },
  {
    "text": "in their setups and in order to make it",
    "start": "50680",
    "end": "54520"
  },
  {
    "text": "easy to replicate this data from aora",
    "start": "54520",
    "end": "57520"
  },
  {
    "text": "RDS databases to Ms red shift we embark",
    "start": "57520",
    "end": "61800"
  },
  {
    "text": "on the Zero ETL Integrations with Amazon",
    "start": "61800",
    "end": "64838"
  },
  {
    "text": "red shift zero ETL eliminates the need",
    "start": "64839",
    "end": "69040"
  },
  {
    "text": "for customers to build and manage",
    "start": "69040",
    "end": "71960"
  },
  {
    "text": "complex ETL pipelines and yet get near",
    "start": "71960",
    "end": "76240"
  },
  {
    "text": "realtime analytics on petabytes of",
    "start": "76240",
    "end": "78920"
  },
  {
    "text": "transactional",
    "start": "78920",
    "end": "80640"
  },
  {
    "text": "data this journey began with red shift",
    "start": "80640",
    "end": "84159"
  },
  {
    "text": "Spectrum which provided the ability to",
    "start": "84159",
    "end": "86400"
  },
  {
    "text": "query data in place for example from",
    "start": "86400",
    "end": "89680"
  },
  {
    "text": "your your Amazon S3 location in open",
    "start": "89680",
    "end": "92960"
  },
  {
    "text": "file formats and popular table",
    "start": "92960",
    "end": "95960"
  },
  {
    "text": "formats then we added Federated query",
    "start": "95960",
    "end": "99159"
  },
  {
    "text": "which added access to transactional data",
    "start": "99159",
    "end": "101799"
  },
  {
    "text": "residing in external databases in Amazon",
    "start": "101799",
    "end": "105399"
  },
  {
    "text": "RDS for postgressql Amazon Aurora",
    "start": "105399",
    "end": "108439"
  },
  {
    "text": "postgressql compatible Edition Amazon",
    "start": "108439",
    "end": "111399"
  },
  {
    "text": "RDS for MySQL and Amazon Aurora MySQL",
    "start": "111399",
    "end": "115280"
  },
  {
    "text": "compatible Edition and enabled direct",
    "start": "115280",
    "end": "118360"
  },
  {
    "text": "access from Amazon red",
    "start": "118360",
    "end": "121799"
  },
  {
    "text": "shift then Amazon red shift machine",
    "start": "121799",
    "end": "124479"
  },
  {
    "text": "learning further eliminated the need for",
    "start": "124479",
    "end": "127119"
  },
  {
    "text": "data movement and you are now able to",
    "start": "127119",
    "end": "130080"
  },
  {
    "text": "build and run inferences directly from",
    "start": "130080",
    "end": "133160"
  },
  {
    "text": "Amazon red shift by leveraging the",
    "start": "133160",
    "end": "135760"
  },
  {
    "text": "Amazon sagemaker integration red shift",
    "start": "135760",
    "end": "138560"
  },
  {
    "text": "data sharing was a major Milestone as it",
    "start": "138560",
    "end": "141480"
  },
  {
    "text": "allows access to transactionally",
    "start": "141480",
    "end": "143400"
  },
  {
    "text": "consistent data in place without moving",
    "start": "143400",
    "end": "147239"
  },
  {
    "text": "or copying",
    "start": "147239",
    "end": "148560"
  },
  {
    "text": "data and the AWS data exchange leverage",
    "start": "148560",
    "end": "152360"
  },
  {
    "text": "this data sharing technology which",
    "start": "152360",
    "end": "154239"
  },
  {
    "text": "enables you to monetize your data as a",
    "start": "154239",
    "end": "157080"
  },
  {
    "text": "product whilea the AWS",
    "start": "157080",
    "end": "159920"
  },
  {
    "text": "Marketplace the streaming inje in Amazon",
    "start": "159920",
    "end": "162599"
  },
  {
    "text": "red shift makes data available for",
    "start": "162599",
    "end": "164720"
  },
  {
    "text": "analytics faster leveraging materialized",
    "start": "164720",
    "end": "167599"
  },
  {
    "text": "views on top of Amazon managed Kafka and",
    "start": "167599",
    "end": "171280"
  },
  {
    "text": "Kinesis",
    "start": "171280",
    "end": "172560"
  },
  {
    "text": "streams with Amazon S3 Auto auto copy",
    "start": "172560",
    "end": "176560"
  },
  {
    "text": "you can now set up continuous file inje",
    "start": "176560",
    "end": "179319"
  },
  {
    "text": "from your Amazon S3 which automatically",
    "start": "179319",
    "end": "182440"
  },
  {
    "text": "loads new files without the need for",
    "start": "182440",
    "end": "185040"
  },
  {
    "text": "additional tools or custom Solutions and",
    "start": "185040",
    "end": "188319"
  },
  {
    "text": "finally the zero ETL integration which",
    "start": "188319",
    "end": "191239"
  },
  {
    "text": "enables near realtime replication of",
    "start": "191239",
    "end": "193680"
  },
  {
    "text": "transactional data to Amazon Aurora",
    "start": "193680",
    "end": "196879"
  },
  {
    "text": "MySQL which is in GA already and Aurora",
    "start": "196879",
    "end": "200360"
  },
  {
    "text": "post rql and RDS for MySQL which is in",
    "start": "200360",
    "end": "204280"
  },
  {
    "text": "preview and also Dynamo DB which is in",
    "start": "204280",
    "end": "207799"
  },
  {
    "text": "limited preview",
    "start": "207799",
    "end": "210680"
  },
  {
    "text": "Amazon RDS MySQL integration enables",
    "start": "210680",
    "end": "215040"
  },
  {
    "text": "Amazon RDS MySQL customers to run near",
    "start": "215040",
    "end": "218040"
  },
  {
    "text": "realtime analytics and machine learning",
    "start": "218040",
    "end": "221000"
  },
  {
    "text": "on petabytes of transactional data by",
    "start": "221000",
    "end": "223640"
  },
  {
    "text": "offering a fully managed solution for",
    "start": "223640",
    "end": "226560"
  },
  {
    "text": "making the transaction data available in",
    "start": "226560",
    "end": "228959"
  },
  {
    "text": "Amazon red shift within seconds of being",
    "start": "228959",
    "end": "232239"
  },
  {
    "text": "written into the Amazon RDS my SQL",
    "start": "232239",
    "end": "236480"
  },
  {
    "text": "instance customers simply choose the",
    "start": "236480",
    "end": "239760"
  },
  {
    "text": "Amon RDS MySQL databases containing the",
    "start": "239760",
    "end": "242760"
  },
  {
    "text": "data they want to analyze with Amazon",
    "start": "242760",
    "end": "245040"
  },
  {
    "text": "red shift and the schema and data will",
    "start": "245040",
    "end": "247879"
  },
  {
    "text": "be replicated into Amazon red shift",
    "start": "247879",
    "end": "250319"
  },
  {
    "text": "automatically this eliminates the need",
    "start": "250319",
    "end": "252599"
  },
  {
    "text": "for customers to build and manage",
    "start": "252599",
    "end": "254640"
  },
  {
    "text": "complex data pipelines and allows them",
    "start": "254640",
    "end": "257280"
  },
  {
    "text": "to instad focus on improving their",
    "start": "257280",
    "end": "260239"
  },
  {
    "text": "analytical applications customers can",
    "start": "260239",
    "end": "263120"
  },
  {
    "text": "replicate data from",
    "start": "263120",
    "end": "265280"
  },
  {
    "text": "multiple Amazon RDS my SQL database",
    "start": "265280",
    "end": "268360"
  },
  {
    "text": "clusters into the same same Amazon red",
    "start": "268360",
    "end": "271199"
  },
  {
    "text": "shift instance to derive holistic",
    "start": "271199",
    "end": "273840"
  },
  {
    "text": "insights across several applications",
    "start": "273840",
    "end": "277039"
  },
  {
    "text": "while also consolidating their core",
    "start": "277039",
    "end": "280120"
  },
  {
    "text": "analytical assets gaining significant",
    "start": "280120",
    "end": "283000"
  },
  {
    "text": "cost savings and operational",
    "start": "283000",
    "end": "286759"
  },
  {
    "text": "efficiencies the zero ETL integration",
    "start": "289680",
    "end": "292639"
  },
  {
    "text": "operates via the RDS MySQL binary log",
    "start": "292639",
    "end": "295919"
  },
  {
    "text": "also known as the bin log this process",
    "start": "295919",
    "end": "298560"
  },
  {
    "text": "works by collecting changes to the",
    "start": "298560",
    "end": "300600"
  },
  {
    "text": "database logs using the database engine",
    "start": "300600",
    "end": "302759"
  },
  {
    "text": "native API it adapts to the RDS MySQL",
    "start": "302759",
    "end": "308400"
  },
  {
    "text": "site schema changes and you can monitor",
    "start": "308400",
    "end": "312479"
  },
  {
    "text": "progress lag and performance from Red",
    "start": "312479",
    "end": "316520"
  },
  {
    "text": "shift system tables and also Cloud watch",
    "start": "316520",
    "end": "322638"
  },
  {
    "text": "metrics consider this solution",
    "start": "322840",
    "end": "325560"
  },
  {
    "text": "architecture where you have streaming",
    "start": "325560",
    "end": "327800"
  },
  {
    "text": "data for example codes or TI data",
    "start": "327800",
    "end": "331039"
  },
  {
    "text": "getting ingested via the Amazon Red",
    "start": "331039",
    "end": "333280"
  },
  {
    "text": "Chief streaming ingestion capabilities",
    "start": "333280",
    "end": "335880"
  },
  {
    "text": "the transactional data for example",
    "start": "335880",
    "end": "338120"
  },
  {
    "text": "trades being executed gets ingested via",
    "start": "338120",
    "end": "341120"
  },
  {
    "text": "the zero ETL integration in near real",
    "start": "341120",
    "end": "344160"
  },
  {
    "text": "time to Amazon R shift and finally the",
    "start": "344160",
    "end": "347080"
  },
  {
    "text": "third party data for example Market data",
    "start": "347080",
    "end": "349800"
  },
  {
    "text": "like sector industry or security Master",
    "start": "349800",
    "end": "353479"
  },
  {
    "text": "is being procured via the AWS data",
    "start": "353479",
    "end": "355919"
  },
  {
    "text": "exchange and is directly available in",
    "start": "355919",
    "end": "358600"
  },
  {
    "text": "Amazon red shift as tables without",
    "start": "358600",
    "end": "360800"
  },
  {
    "text": "needing to ingest it via files the",
    "start": "360800",
    "end": "364199"
  },
  {
    "text": "analytical data warehouse which runs on",
    "start": "364199",
    "end": "366400"
  },
  {
    "text": "Amazon red shift and Powers both",
    "start": "366400",
    "end": "369280"
  },
  {
    "text": "internal reporting leveraging quick site",
    "start": "369280",
    "end": "372039"
  },
  {
    "text": "and also near realtime trade dashboard",
    "start": "372039",
    "end": "374560"
  },
  {
    "text": "which is built using your favorite",
    "start": "374560",
    "end": "376560"
  },
  {
    "text": "dashboarding",
    "start": "376560",
    "end": "377919"
  },
  {
    "text": "tool let's look at the steps involved",
    "start": "377919",
    "end": "381160"
  },
  {
    "text": "for this",
    "start": "381160",
    "end": "382599"
  },
  {
    "text": "setup these five steps they can be also",
    "start": "382599",
    "end": "386199"
  },
  {
    "text": "done automatically by the zero ETL",
    "start": "386199",
    "end": "389120"
  },
  {
    "text": "wizard",
    "start": "389120",
    "end": "390199"
  },
  {
    "text": "but that might require a restart so you",
    "start": "390199",
    "end": "393919"
  },
  {
    "text": "could choose to do these steps manually",
    "start": "393919",
    "end": "396800"
  },
  {
    "text": "and then perform the restart at your",
    "start": "396800",
    "end": "399720"
  },
  {
    "text": "convenience let's look at the demo now",
    "start": "399720",
    "end": "402680"
  },
  {
    "text": "to see how easy it is to perform this ZL",
    "start": "402680",
    "end": "409560"
  },
  {
    "text": "setup thank you milind hi everyone I am",
    "start": "409560",
    "end": "412960"
  },
  {
    "text": "Rox K the shift specialist Solutions",
    "start": "412960",
    "end": "415560"
  },
  {
    "text": "architect let's log to our AWS",
    "start": "415560",
    "end": "417919"
  },
  {
    "text": "Management console and get started with",
    "start": "417919",
    "end": "419759"
  },
  {
    "text": "the demo we will configure Amazon RDS as",
    "start": "419759",
    "end": "422960"
  },
  {
    "text": "the source and Amazon red shift as the",
    "start": "422960",
    "end": "425120"
  },
  {
    "text": "target let's navigate to Amazon RDS",
    "start": "425120",
    "end": "427680"
  },
  {
    "text": "console page and configure RDS MySQL as",
    "start": "427680",
    "end": "430560"
  },
  {
    "text": "the source to create an RDS for mySQL",
    "start": "430560",
    "end": "433879"
  },
  {
    "text": "database we will create a DV parameter",
    "start": "433879",
    "end": "436280"
  },
  {
    "text": "group first navigate to parameter groups",
    "start": "436280",
    "end": "439879"
  },
  {
    "text": "and click on create parameter group",
    "start": "439879",
    "end": "443000"
  },
  {
    "text": "select parameter group family as my SQL",
    "start": "443000",
    "end": "448520"
  },
  {
    "text": "8.0 we will keep type as DB parameter",
    "start": "448520",
    "end": "451360"
  },
  {
    "text": "group let's call the DB parameter group",
    "start": "451360",
    "end": "455199"
  },
  {
    "text": "as ZL custom PG demo and let's provide a",
    "start": "455199",
    "end": "459639"
  },
  {
    "text": "description",
    "start": "459639",
    "end": "462000"
  },
  {
    "text": "here and click",
    "start": "462000",
    "end": "465440"
  },
  {
    "text": "create our parameter group got created",
    "start": "467199",
    "end": "471400"
  },
  {
    "text": "successfully verify the parameter group",
    "start": "471400",
    "end": "473639"
  },
  {
    "text": "family to be my SQL",
    "start": "473639",
    "end": "475960"
  },
  {
    "text": "8.0 open the parameter group and click",
    "start": "475960",
    "end": "479240"
  },
  {
    "text": "on",
    "start": "479240",
    "end": "480960"
  },
  {
    "text": "edit zero eil integration works by using",
    "start": "480960",
    "end": "484240"
  },
  {
    "text": "binary logs bin log generated by B SQL",
    "start": "484240",
    "end": "487520"
  },
  {
    "text": "database to enable bin logs on RDS for",
    "start": "487520",
    "end": "490960"
  },
  {
    "text": "MySQL there are three parameters that",
    "start": "490960",
    "end": "493560"
  },
  {
    "text": "must be enabled first the bin log",
    "start": "493560",
    "end": "498440"
  },
  {
    "text": "format should be set to",
    "start": "498440",
    "end": "502240"
  },
  {
    "text": "row pin log raw",
    "start": "503400",
    "end": "506639"
  },
  {
    "text": "image should be equal to full",
    "start": "506639",
    "end": "511039"
  },
  {
    "text": "and third bin log check",
    "start": "511039",
    "end": "514560"
  },
  {
    "text": "sum should be set as",
    "start": "514560",
    "end": "517760"
  },
  {
    "text": "none in addition ensure that bin log row",
    "start": "517760",
    "end": "521880"
  },
  {
    "text": "value",
    "start": "521880",
    "end": "523120"
  },
  {
    "text": "option is not set to partial Json by",
    "start": "523120",
    "end": "526839"
  },
  {
    "text": "default this parameter is not set let's",
    "start": "526839",
    "end": "529240"
  },
  {
    "text": "save",
    "start": "529240",
    "end": "531440"
  },
  {
    "text": "changes now choose databases in the",
    "start": "531440",
    "end": "534279"
  },
  {
    "text": "navigation Pane and click on create",
    "start": "534279",
    "end": "538440"
  },
  {
    "text": "database",
    "start": "538440",
    "end": "540560"
  },
  {
    "text": "the engine type should be",
    "start": "540560",
    "end": "543160"
  },
  {
    "text": "MySQL from the engine",
    "start": "543160",
    "end": "545519"
  },
  {
    "text": "version choose RDS for MySQL",
    "start": "545519",
    "end": "549279"
  },
  {
    "text": "8.0 do28 or higher I'll choose MySQL",
    "start": "549279",
    "end": "554320"
  },
  {
    "text": "8.0.3 6 for this",
    "start": "554320",
    "end": "557200"
  },
  {
    "text": "demo for templates select",
    "start": "557200",
    "end": "560440"
  },
  {
    "text": "production multi-az DB cluster is not",
    "start": "560440",
    "end": "563720"
  },
  {
    "text": "currently supported so we will either",
    "start": "563720",
    "end": "566120"
  },
  {
    "text": "choose a multi-az DB instance or",
    "start": "566120",
    "end": "570040"
  },
  {
    "text": "a single DB instance for this demo I",
    "start": "570040",
    "end": "572240"
  },
  {
    "text": "will choose multi a DB",
    "start": "572240",
    "end": "574240"
  },
  {
    "text": "instance for DB instance",
    "start": "574240",
    "end": "578200"
  },
  {
    "text": "identifier I'll type in zero ETS Source",
    "start": "578200",
    "end": "581160"
  },
  {
    "text": "RDS",
    "start": "581160",
    "end": "582399"
  },
  {
    "text": "demo I'll provide a master username and",
    "start": "582399",
    "end": "587360"
  },
  {
    "text": "password under instance configuration",
    "start": "593160",
    "end": "596480"
  },
  {
    "text": "you can choose your desired DB instance",
    "start": "596480",
    "end": "598800"
  },
  {
    "text": "class for this demo I will choose a",
    "start": "598800",
    "end": "601720"
  },
  {
    "text": "standard class of size db. m5.",
    "start": "601720",
    "end": "607680"
  },
  {
    "text": "large configure appropriate network",
    "start": "607680",
    "end": "610720"
  },
  {
    "text": "connectivity and monitoring",
    "start": "610720",
    "end": "613720"
  },
  {
    "text": "settings once a finished expand",
    "start": "613720",
    "end": "616880"
  },
  {
    "text": "additional",
    "start": "616880",
    "end": "618800"
  },
  {
    "text": "configuration under DB parameter group",
    "start": "618800",
    "end": "621519"
  },
  {
    "text": "choose the parameter group you created",
    "start": "621519",
    "end": "623399"
  },
  {
    "text": "earlier ZL custom PG",
    "start": "623399",
    "end": "627480"
  },
  {
    "text": "demo and finally",
    "start": "627480",
    "end": "631320"
  },
  {
    "text": "click on create",
    "start": "631519",
    "end": "633480"
  },
  {
    "text": "database in couple of minutes it should",
    "start": "633480",
    "end": "636680"
  },
  {
    "text": "spin up RDS for mySQL database as the",
    "start": "636680",
    "end": "640160"
  },
  {
    "text": "source for Zer ETL integration while",
    "start": "640160",
    "end": "643240"
  },
  {
    "text": "it's creating let's create and configure",
    "start": "643240",
    "end": "646240"
  },
  {
    "text": "red",
    "start": "646240",
    "end": "647200"
  },
  {
    "text": "shift in red shift console page we will",
    "start": "647200",
    "end": "650160"
  },
  {
    "text": "create red shift data warehouse as a",
    "start": "650160",
    "end": "652240"
  },
  {
    "text": "target for zero edl",
    "start": "652240",
    "end": "654040"
  },
  {
    "text": "integration the data warehouse must meet",
    "start": "654040",
    "end": "656519"
  },
  {
    "text": "the following requirements it should be",
    "start": "656519",
    "end": "658680"
  },
  {
    "text": "using an 3 node types r316 XEL R3 4XL or",
    "start": "658680",
    "end": "663600"
  },
  {
    "text": "R3 XEL Plus or drad shift",
    "start": "663600",
    "end": "667440"
  },
  {
    "text": "serverless red shift should also be",
    "start": "667440",
    "end": "669600"
  },
  {
    "text": "encrypted if you are using a provision",
    "start": "669600",
    "end": "671959"
  },
  {
    "text": "cluster for our demo we will create a",
    "start": "671959",
    "end": "674440"
  },
  {
    "text": "red shift serverless work group as RDS",
    "start": "674440",
    "end": "677519"
  },
  {
    "text": "my SQL ZL integration with redshift is",
    "start": "677519",
    "end": "680399"
  },
  {
    "text": "in preview so we will create red shift",
    "start": "680399",
    "end": "682639"
  },
  {
    "text": "serverless in preview track as well by",
    "start": "682639",
    "end": "685120"
  },
  {
    "text": "clicking on create preview work group",
    "start": "685120",
    "end": "687279"
  },
  {
    "text": "from the top Banner",
    "start": "687279",
    "end": "690480"
  },
  {
    "text": "let's provide a work group",
    "start": "690480",
    "end": "692800"
  },
  {
    "text": "name Z ETL demo work",
    "start": "692800",
    "end": "697639"
  },
  {
    "text": "group you can choose from the",
    "start": "697639",
    "end": "699440"
  },
  {
    "text": "performance and the cost control I will",
    "start": "699440",
    "end": "700920"
  },
  {
    "text": "keep it the default settings then I will",
    "start": "700920",
    "end": "703480"
  },
  {
    "text": "configure the network and the",
    "start": "703480",
    "end": "705959"
  },
  {
    "text": "security and click on next we will be",
    "start": "705959",
    "end": "709360"
  },
  {
    "text": "creating a new name space let's name it",
    "start": "709360",
    "end": "711519"
  },
  {
    "text": "as Zer ETL demo Nam",
    "start": "711519",
    "end": "716680"
  },
  {
    "text": "space we will provide a custom admin",
    "start": "717440",
    "end": "720040"
  },
  {
    "text": "username and",
    "start": "720040",
    "end": "723000"
  },
  {
    "text": "password and click on next let's review",
    "start": "725800",
    "end": "729320"
  },
  {
    "text": "the changes and click on create red",
    "start": "729320",
    "end": "732760"
  },
  {
    "text": "shift serverless work group this will",
    "start": "732760",
    "end": "734959"
  },
  {
    "text": "take a couple of minutes for red shift",
    "start": "734959",
    "end": "737399"
  },
  {
    "text": "serverless to get uh created meanwhile",
    "start": "737399",
    "end": "740560"
  },
  {
    "text": "let's navigate back to our RDS console",
    "start": "740560",
    "end": "743279"
  },
  {
    "text": "and see if RDS mySQL database has",
    "start": "743279",
    "end": "747120"
  },
  {
    "text": "finished creation so that database is in",
    "start": "747120",
    "end": "750000"
  },
  {
    "text": "the available",
    "start": "750000",
    "end": "751920"
  },
  {
    "text": "State now that our source and Target",
    "start": "751920",
    "end": "754519"
  },
  {
    "text": "resources have been provisioned to",
    "start": "754519",
    "end": "756639"
  },
  {
    "text": "create a zero ETL integration between",
    "start": "756639",
    "end": "758519"
  },
  {
    "text": "them a user or a role must have",
    "start": "758519",
    "end": "760760"
  },
  {
    "text": "appropriate I am permissions assigned at",
    "start": "760760",
    "end": "763800"
  },
  {
    "text": "minimum you need permissions to perform",
    "start": "763800",
    "end": "765680"
  },
  {
    "text": "the following actions create zero ETL",
    "start": "765680",
    "end": "768120"
  },
  {
    "text": "Integrations for the source RDS database",
    "start": "768120",
    "end": "771399"
  },
  {
    "text": "View and delete all zero ETL",
    "start": "771399",
    "end": "773279"
  },
  {
    "text": "Integrations and create inbound",
    "start": "773279",
    "end": "775519"
  },
  {
    "text": "Integrations into the target data",
    "start": "775519",
    "end": "777480"
  },
  {
    "text": "warehouse a sample policy has been",
    "start": "777480",
    "end": "780120"
  },
  {
    "text": "provided in in the zero integration",
    "start": "780120",
    "end": "782279"
  },
  {
    "text": "document and you can find the link in",
    "start": "782279",
    "end": "784480"
  },
  {
    "text": "the description of this",
    "start": "784480",
    "end": "786320"
  },
  {
    "text": "video after the appropriate IM policy",
    "start": "786320",
    "end": "788800"
  },
  {
    "text": "has been assigned to a user or a role",
    "start": "788800",
    "end": "791160"
  },
  {
    "text": "let's start creating our first zero ETL",
    "start": "791160",
    "end": "793680"
  },
  {
    "text": "integration from Amazon RDS mySQL",
    "start": "793680",
    "end": "796560"
  },
  {
    "text": "database source to Amazon red shift",
    "start": "796560",
    "end": "799639"
  },
  {
    "text": "Target on the Amazon RDS console choose",
    "start": "799639",
    "end": "802720"
  },
  {
    "text": "zero ETL integration in the navigation",
    "start": "802720",
    "end": "805040"
  },
  {
    "text": "pane choose create zero ETL integration",
    "start": "805040",
    "end": "809360"
  },
  {
    "text": "for integration identifier enter a name",
    "start": "809360",
    "end": "811880"
  },
  {
    "text": "for example Zer edl",
    "start": "811880",
    "end": "816160"
  },
  {
    "text": "demo for Source database click on browse",
    "start": "816160",
    "end": "819480"
  },
  {
    "text": "RDS",
    "start": "819480",
    "end": "820720"
  },
  {
    "text": "databases RDS automatically filters to",
    "start": "820720",
    "end": "823959"
  },
  {
    "text": "supported engine versions in this case",
    "start": "823959",
    "end": "826880"
  },
  {
    "text": "choose the source cluster zero ETL",
    "start": "826880",
    "end": "829160"
  },
  {
    "text": "Source RDS demo that we created",
    "start": "829160",
    "end": "832880"
  },
  {
    "text": "earlier next we will select the Target",
    "start": "832880",
    "end": "835639"
  },
  {
    "text": "red shift data warehouse we can choose a",
    "start": "835639",
    "end": "838120"
  },
  {
    "text": "data warehouse in current AWS account or",
    "start": "838120",
    "end": "841000"
  },
  {
    "text": "in a different account to specify a",
    "start": "841000",
    "end": "843680"
  },
  {
    "text": "different account we would simply enter",
    "start": "843680",
    "end": "846160"
  },
  {
    "text": "the database",
    "start": "846160",
    "end": "848040"
  },
  {
    "text": "Arn in this case we will choose an",
    "start": "848040",
    "end": "850600"
  },
  {
    "text": "existing Data Warehouse in our current",
    "start": "850600",
    "end": "853560"
  },
  {
    "text": "account click on browse rushi data",
    "start": "853560",
    "end": "855959"
  },
  {
    "text": "warehouses and choose the rushi Data",
    "start": "855959",
    "end": "858040"
  },
  {
    "text": "Warehouse Zero ETL demo name space that",
    "start": "858040",
    "end": "861279"
  },
  {
    "text": "we created",
    "start": "861279",
    "end": "863440"
  },
  {
    "text": "earlier RDS will automatically validate",
    "start": "863440",
    "end": "866399"
  },
  {
    "text": "the parameter settings for the Target",
    "start": "866399",
    "end": "868320"
  },
  {
    "text": "database",
    "start": "868320",
    "end": "869600"
  },
  {
    "text": "in this case our data warehouse does not",
    "start": "869600",
    "end": "872000"
  },
  {
    "text": "have the correct resource",
    "start": "872000",
    "end": "873680"
  },
  {
    "text": "policy and case sensitivity parameter to",
    "start": "873680",
    "end": "876560"
  },
  {
    "text": "support zero ETL",
    "start": "876560",
    "end": "878199"
  },
  {
    "text": "integration we will have RDX fix this",
    "start": "878199",
    "end": "881279"
  },
  {
    "text": "for",
    "start": "881279",
    "end": "882680"
  },
  {
    "text": "us next you can review the changes RDS",
    "start": "882680",
    "end": "886240"
  },
  {
    "text": "will perform on red shift in this case",
    "start": "886240",
    "end": "889079"
  },
  {
    "text": "it will update red shift Target resource",
    "start": "889079",
    "end": "891399"
  },
  {
    "text": "policy to have authorized principle and",
    "start": "891399",
    "end": "894800"
  },
  {
    "text": "integration source and enable case",
    "start": "894800",
    "end": "897480"
  },
  {
    "text": "sensitivity for red shift",
    "start": "897480",
    "end": "900199"
  },
  {
    "text": "click on",
    "start": "900199",
    "end": "901759"
  },
  {
    "text": "continue RDS is now fixing the parameter",
    "start": "901759",
    "end": "905160"
  },
  {
    "text": "values we can view more details from the",
    "start": "905160",
    "end": "908079"
  },
  {
    "text": "progress bar at the top of the",
    "start": "908079",
    "end": "911800"
  },
  {
    "text": "page RDS is modifying the case",
    "start": "911920",
    "end": "914759"
  },
  {
    "text": "sensitivity parameter on work group and",
    "start": "914759",
    "end": "918240"
  },
  {
    "text": "it will then update the resource",
    "start": "918240",
    "end": "922079"
  },
  {
    "text": "policy RDS has successfully fixed the",
    "start": "924279",
    "end": "928199"
  },
  {
    "text": "case sensitivity parameter and the",
    "start": "928199",
    "end": "930079"
  },
  {
    "text": "resource policy for Data Warehouse Zero",
    "start": "930079",
    "end": "932680"
  },
  {
    "text": "ETL demo",
    "start": "932680",
    "end": "935839"
  },
  {
    "text": "namespace now optionally we can add TXS",
    "start": "936399",
    "end": "939720"
  },
  {
    "text": "and customize the encryption settings we",
    "start": "939720",
    "end": "942040"
  },
  {
    "text": "will skip this",
    "start": "942040",
    "end": "944519"
  },
  {
    "text": "step let's review the",
    "start": "944519",
    "end": "947560"
  },
  {
    "text": "settings and create the zero ETL",
    "start": "947560",
    "end": "950920"
  },
  {
    "text": "integration by clicking on create zero",
    "start": "950920",
    "end": "953639"
  },
  {
    "text": "ETL integration",
    "start": "953639",
    "end": "956360"
  },
  {
    "text": "PN it can take up to 30",
    "start": "957079",
    "end": "960199"
  },
  {
    "text": "minutes to create the integration and",
    "start": "960199",
    "end": "963680"
  },
  {
    "text": "change status from creating to",
    "start": "963680",
    "end": "967920"
  },
  {
    "text": "active this time will vary depending on",
    "start": "967920",
    "end": "971240"
  },
  {
    "text": "size of your data set in the",
    "start": "971240",
    "end": "973639"
  },
  {
    "text": "source let's fast forward to when it has",
    "start": "973639",
    "end": "976759"
  },
  {
    "text": "been successfully",
    "start": "976759",
    "end": "978959"
  },
  {
    "text": "created the zero ETL integration has",
    "start": "978959",
    "end": "981839"
  },
  {
    "text": "been successfully created for Amazon RDS",
    "start": "981839",
    "end": "984639"
  },
  {
    "text": "mySQL database Zer ETL Source RDS demo",
    "start": "984639",
    "end": "989480"
  },
  {
    "text": "we can see it that it is now in the",
    "start": "989480",
    "end": "992000"
  },
  {
    "text": "active",
    "start": "992000",
    "end": "993560"
  },
  {
    "text": "State the last step is to create a",
    "start": "993560",
    "end": "996279"
  },
  {
    "text": "database in red shift that is linked to",
    "start": "996279",
    "end": "998759"
  },
  {
    "text": "this",
    "start": "998759",
    "end": "999600"
  },
  {
    "text": "integration to do this we will navigate",
    "start": "999600",
    "end": "1002399"
  },
  {
    "text": "to Amazon red shift serverless",
    "start": "1002399",
    "end": "1005600"
  },
  {
    "text": "console next we will go to our namespace",
    "start": "1005600",
    "end": "1008880"
  },
  {
    "text": "Zer ETL demo",
    "start": "1008880",
    "end": "1011399"
  },
  {
    "text": "namespace and open the details for the",
    "start": "1011399",
    "end": "1014519"
  },
  {
    "text": "integration which we have created by",
    "start": "1014519",
    "end": "1016399"
  },
  {
    "text": "clicking on zero edl Integrations",
    "start": "1016399",
    "end": "1020839"
  },
  {
    "text": "we will now create a database from",
    "start": "1022079",
    "end": "1025720"
  },
  {
    "text": "integration let's name it as demo",
    "start": "1025720",
    "end": "1030240"
  },
  {
    "text": "DB and click on create database the",
    "start": "1030240",
    "end": "1033558"
  },
  {
    "text": "database has been created now data",
    "start": "1033559",
    "end": "1036079"
  },
  {
    "text": "written to our source RDS mySQL database",
    "start": "1036079",
    "end": "1039798"
  },
  {
    "text": "will be replicated to our red shift",
    "start": "1039799",
    "end": "1043640"
  },
  {
    "text": "database now we will populate the RDS",
    "start": "1043640",
    "end": "1046120"
  },
  {
    "text": "MySQL Source database with sample data",
    "start": "1046120",
    "end": "1048919"
  },
  {
    "text": "and analyze the same data in near real",
    "start": "1048919",
    "end": "1051240"
  },
  {
    "text": "time in red shift Target let's connect",
    "start": "1051240",
    "end": "1053880"
  },
  {
    "text": "to RS my SQL source using command",
    "start": "1053880",
    "end": "1058240"
  },
  {
    "text": "line you can either use an existing",
    "start": "1064520",
    "end": "1067280"
  },
  {
    "text": "database or create a new one for this",
    "start": "1067280",
    "end": "1069919"
  },
  {
    "text": "demo in this case we will create a new",
    "start": "1069919",
    "end": "1072000"
  },
  {
    "text": "database called zero ETL",
    "start": "1072000",
    "end": "1075919"
  },
  {
    "text": "TB we will then create a new table",
    "start": "1075919",
    "end": "1078320"
  },
  {
    "text": "called sales in this newly created",
    "start": "1078320",
    "end": "1080360"
  },
  {
    "text": "database ZL",
    "start": "1080360",
    "end": "1083720"
  },
  {
    "text": "DB we will load some data to the sales",
    "start": "1084039",
    "end": "1086799"
  },
  {
    "text": "table from a local",
    "start": "1086799",
    "end": "1088799"
  },
  {
    "text": "file let's validate if the data has been",
    "start": "1088799",
    "end": "1091480"
  },
  {
    "text": "successfully loaded to the sales table",
    "start": "1091480",
    "end": "1094280"
  },
  {
    "text": "we can see that there are some records",
    "start": "1094280",
    "end": "1095760"
  },
  {
    "text": "in this newly created sales table in",
    "start": "1095760",
    "end": "1097600"
  },
  {
    "text": "zero ETL DB database of RDS",
    "start": "1097600",
    "end": "1100960"
  },
  {
    "text": "MySQL now let's analyze this data in red",
    "start": "1100960",
    "end": "1104840"
  },
  {
    "text": "shift on the red shift console open",
    "start": "1104840",
    "end": "1107760"
  },
  {
    "text": "query Ator V to and connect to the work",
    "start": "1107760",
    "end": "1111000"
  },
  {
    "text": "Group which we have recently",
    "start": "1111000",
    "end": "1113080"
  },
  {
    "text": "created you can use the following code",
    "start": "1113080",
    "end": "1115559"
  },
  {
    "text": "to validate the zero ETL integration",
    "start": "1115559",
    "end": "1117360"
  },
  {
    "text": "seed or CDC",
    "start": "1117360",
    "end": "1120120"
  },
  {
    "text": "activity we can see that there are few",
    "start": "1120120",
    "end": "1122840"
  },
  {
    "text": "most recent CDC event which is due to",
    "start": "1122840",
    "end": "1125200"
  },
  {
    "text": "the new database which we have created",
    "start": "1125200",
    "end": "1127159"
  },
  {
    "text": "and a new sales table that we have",
    "start": "1127159",
    "end": "1128919"
  },
  {
    "text": "created few seconds back in RDS MySQL",
    "start": "1128919",
    "end": "1132280"
  },
  {
    "text": "and populated with data we can also",
    "start": "1132280",
    "end": "1134640"
  },
  {
    "text": "verify by expanding the catalog and see",
    "start": "1134640",
    "end": "1137640"
  },
  {
    "text": "newly created sales table within the",
    "start": "1137640",
    "end": "1140320"
  },
  {
    "text": "zero ETL DB schema of red shift database",
    "start": "1140320",
    "end": "1144120"
  },
  {
    "text": "demo",
    "start": "1144120",
    "end": "1145200"
  },
  {
    "text": "DB let's query this",
    "start": "1145200",
    "end": "1148960"
  },
  {
    "text": "table and let's validate the row count",
    "start": "1151760",
    "end": "1154400"
  },
  {
    "text": "in this",
    "start": "1154400",
    "end": "1156760"
  },
  {
    "text": "table we can see that the row count in",
    "start": "1157840",
    "end": "1160440"
  },
  {
    "text": "this table matches with the row count of",
    "start": "1160440",
    "end": "1163720"
  },
  {
    "text": "that same table in",
    "start": "1163720",
    "end": "1165840"
  },
  {
    "text": "RDS so that is it with just few click",
    "start": "1165840",
    "end": "1169039"
  },
  {
    "text": "from the UI we have seen how easy it is",
    "start": "1169039",
    "end": "1172000"
  },
  {
    "text": "to create a zero ETL integration from",
    "start": "1172000",
    "end": "1174760"
  },
  {
    "text": "RDS MySQL source to Red shift Target",
    "start": "1174760",
    "end": "1177960"
  },
  {
    "text": "without any need to create and maintain",
    "start": "1177960",
    "end": "1180200"
  },
  {
    "text": "a complex",
    "start": "1180200",
    "end": "1181799"
  },
  {
    "text": "pipeline red shift also provides certain",
    "start": "1181799",
    "end": "1184840"
  },
  {
    "text": "system views and tables to easily",
    "start": "1184840",
    "end": "1187320"
  },
  {
    "text": "monitor zero ETL Integrations within red",
    "start": "1187320",
    "end": "1190159"
  },
  {
    "text": "shift svv integration view provides you",
    "start": "1190159",
    "end": "1193480"
  },
  {
    "text": "configuration details around zero ETL",
    "start": "1193480",
    "end": "1196880"
  },
  {
    "text": "integration CIS integration activity",
    "start": "1196880",
    "end": "1199960"
  },
  {
    "text": "provides information about completed",
    "start": "1199960",
    "end": "1201720"
  },
  {
    "text": "integration runs and you can see that",
    "start": "1201720",
    "end": "1204000"
  },
  {
    "text": "when you first create the integration it",
    "start": "1204000",
    "end": "1206559"
  },
  {
    "text": "will seat the data from RDS MySQL to Red",
    "start": "1206559",
    "end": "1210080"
  },
  {
    "text": "shift and from then on it will continue",
    "start": "1210080",
    "end": "1212000"
  },
  {
    "text": "to do a CDC and then finally svv",
    "start": "1212000",
    "end": "1215640"
  },
  {
    "text": "integration table state provides table",
    "start": "1215640",
    "end": "1218159"
  },
  {
    "text": "level integration details in this case",
    "start": "1218159",
    "end": "1221240"
  },
  {
    "text": "we have replicated a sales table from",
    "start": "1221240",
    "end": "1223640"
  },
  {
    "text": "RDS my SQL to Red shift and the table",
    "start": "1223640",
    "end": "1226280"
  },
  {
    "text": "State shows as sync in addition you can",
    "start": "1226280",
    "end": "1230679"
  },
  {
    "text": "also view integration related metrics",
    "start": "1230679",
    "end": "1232960"
  },
  {
    "text": "published to Amazon cloudwatch let's",
    "start": "1232960",
    "end": "1235720"
  },
  {
    "text": "navigate back to Amazon redshift console",
    "start": "1235720",
    "end": "1239720"
  },
  {
    "text": "choose zero ETL integration from left",
    "start": "1239720",
    "end": "1242120"
  },
  {
    "text": "navigation Pane and click on the",
    "start": "1242120",
    "end": "1244120"
  },
  {
    "text": "integration link to display activity",
    "start": "1244120",
    "end": "1248559"
  },
  {
    "text": "metrics you can see the integration",
    "start": "1248559",
    "end": "1250919"
  },
  {
    "text": "metrix and table",
    "start": "1250919",
    "end": "1253320"
  },
  {
    "text": "statistics these metrics will be",
    "start": "1253320",
    "end": "1255280"
  },
  {
    "text": "populated as soon as data starts flowing",
    "start": "1255280",
    "end": "1259039"
  },
  {
    "text": "integration metrics contain table",
    "start": "1259039",
    "end": "1262159"
  },
  {
    "text": "replication success failure counts and",
    "start": "1262159",
    "end": "1265520"
  },
  {
    "text": "lag details in addition table statistics",
    "start": "1265520",
    "end": "1270000"
  },
  {
    "text": "contain currently active or failed table",
    "start": "1270000",
    "end": "1273400"
  },
  {
    "text": "level replication details and that is it",
    "start": "1273400",
    "end": "1276679"
  },
  {
    "text": "in this demo we showed you how to set up",
    "start": "1276679",
    "end": "1279400"
  },
  {
    "text": "a zero ETL integration from Amazon RDS",
    "start": "1279400",
    "end": "1282360"
  },
  {
    "text": "for MySQL compatible Edition to Amazon",
    "start": "1282360",
    "end": "1285120"
  },
  {
    "text": "red shift this minimizes the need to",
    "start": "1285120",
    "end": "1287760"
  },
  {
    "text": "maintain complex data pipelines and",
    "start": "1287760",
    "end": "1290360"
  },
  {
    "text": "enables near realtime analytics on",
    "start": "1290360",
    "end": "1292640"
  },
  {
    "text": "transactional and operational data thank",
    "start": "1292640",
    "end": "1295440"
  },
  {
    "text": "you for",
    "start": "1295440",
    "end": "1297759"
  },
  {
    "text": "watching",
    "start": "1301440",
    "end": "1304440"
  }
]