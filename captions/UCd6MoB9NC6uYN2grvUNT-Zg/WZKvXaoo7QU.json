[
  {
    "start": "0",
    "end": "152000"
  },
  {
    "text": "foreign",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "supports you I am gaurav a technical account manager based out of Delhi India",
    "start": "7460",
    "end": "12540"
  },
  {
    "text": "we are happy to bring you yet another episode focusing on observability on this show AWS support experts provide",
    "start": "12540",
    "end": "19680"
  },
  {
    "text": "tips to optimize performance in the cloud lower cost and share with you the best practice and design considerations",
    "start": "19680",
    "end": "26820"
  },
  {
    "text": "joining me today are Arun and Siddharth can you give us a quick introduction",
    "start": "26820",
    "end": "32279"
  },
  {
    "text": "Arun followed by Siddharth hey thanks Karo hey welcome everyone to",
    "start": "32279",
    "end": "37440"
  },
  {
    "text": "the series AWS support you I'm Arun I'm part of the AWS solution architecture team working with AWS for uh three and a",
    "start": "37440",
    "end": "44100"
  },
  {
    "text": "half years now and I specialized in database and observability solutions uh thank you gaurav thank you for",
    "start": "44100",
    "end": "50579"
  },
  {
    "text": "hosting us today I'm Siddharth Joshi um technical account manager uh working",
    "start": "50579",
    "end": "55620"
  },
  {
    "text": "with ISP customers and I'm a SME in observity thank you thank you Arun Siddharth so",
    "start": "55620",
    "end": "63359"
  },
  {
    "text": "today we'll be introducing you to getting started with open Telemetry and ADOT the presenters will be specifically",
    "start": "63359",
    "end": "69840"
  },
  {
    "text": "focusing on the use of a DOT and as to how it can be used to build a better observability solution but before we get",
    "start": "69840",
    "end": "77340"
  },
  {
    "text": "into the details a quick note to our attendees online please feel free to use the chat window on the right hand side",
    "start": "77340",
    "end": "83939"
  },
  {
    "text": "of your screen to let us know where you are joining us from please also do share your thoughts and",
    "start": "83939",
    "end": "90180"
  },
  {
    "text": "questions throughout the episode we look forward to hearing from you we'll also provide a link to our survey",
    "start": "90180",
    "end": "96000"
  },
  {
    "text": "so if you would like to let us know on how we did do click the link and leave your valuable feedback",
    "start": "96000",
    "end": "101460"
  },
  {
    "text": "so without further delay I'll hand it over to Arun Arun can you please walk us through what we are going to be talking",
    "start": "101460",
    "end": "106979"
  },
  {
    "text": "about today sure thanks thanks Cara so this is our agenda for today and a package in the",
    "start": "106979",
    "end": "113640"
  },
  {
    "text": "for next one hour uh and since this is an observability talk we will talk about observability and we'll do a little bit",
    "start": "113640",
    "end": "120960"
  },
  {
    "text": "of level setting and understand what are the key pillars of observability and then we'll talk about what open",
    "start": "120960",
    "end": "126119"
  },
  {
    "text": "Telemetry is and what is this project about and some of its component and architecture and how it works and then",
    "start": "126119",
    "end": "132959"
  },
  {
    "text": "in the later part of this talk we will talk about what is AWS contribution in open Telemetry what is AWS destroy for",
    "start": "132959",
    "end": "140940"
  },
  {
    "text": "open Telemetry and at the end Siddharth will also show us a demo how you can",
    "start": "140940",
    "end": "146040"
  },
  {
    "text": "instrument uh Telemetry data from eks using a DOT so let's get started",
    "start": "146040",
    "end": "153480"
  },
  {
    "start": "152000",
    "end": "399000"
  },
  {
    "text": "so since this is an observability talk let's first do a little bit of level setting and understand what",
    "start": "153480",
    "end": "159239"
  },
  {
    "text": "observability is now earlier we used to call it monitoring and monitoring is essentially",
    "start": "159239",
    "end": "165480"
  },
  {
    "text": "about like a green light red light it tells us if the system is working or if the system is not working versus and it",
    "start": "165480",
    "end": "173040"
  },
  {
    "text": "monitoring is also about like good mean time to detect good coverage and good signal to noise ratio versus",
    "start": "173040",
    "end": "179160"
  },
  {
    "text": "observability is it's more about why it's about if the things are not working why they are not working it's also about",
    "start": "179160",
    "end": "185580"
  },
  {
    "text": "being little proactive because now we run large scale applications and we can't afford to run run blind so we need",
    "start": "185580",
    "end": "192599"
  },
  {
    "text": "real we really need the system which can give us depth of information when we talk about uh observability we basically",
    "start": "192599",
    "end": "199800"
  },
  {
    "text": "look at detect investigate and remediate so we detect we mean that we need",
    "start": "199800",
    "end": "205379"
  },
  {
    "text": "capabilities to quickly detect the issue and with investigate customers says that",
    "start": "205379",
    "end": "210540"
  },
  {
    "text": "it is a phase where a lot of time goes in because uh to investigate we really need to rely upon a lot of data coming",
    "start": "210540",
    "end": "216900"
  },
  {
    "text": "from various sources so we need a system which can really help us cut through the chaos and help us Focus what really",
    "start": "216900",
    "end": "224519"
  },
  {
    "text": "matters and then when we are in the middle of the issue we give it a fix and we",
    "start": "224519",
    "end": "229860"
  },
  {
    "text": "remediate that we initially give it a a temporary fix and then we also want to make sure that we identify the issue",
    "start": "229860",
    "end": "236400"
  },
  {
    "text": "completely and then we give it a permanent solution to ensure that it will not happen again and which is where",
    "start": "236400",
    "end": "241500"
  },
  {
    "text": "we need to rely upon a lot of data and we need a system which can really help",
    "start": "241500",
    "end": "246599"
  },
  {
    "text": "us correlate information that comes from various different sources now let's look at what are the different",
    "start": "246599",
    "end": "252900"
  },
  {
    "text": "pillars of observability so observability essentially when we talk about observability we talk about",
    "start": "252900",
    "end": "259260"
  },
  {
    "text": "three k pillars which is metrics logs and traces and there are there are Fleet of services to process this data within",
    "start": "259260",
    "end": "265860"
  },
  {
    "text": "AWS we have Cloud watch we have open search and x-ray virtually what are they so metrics is",
    "start": "265860",
    "end": "273360"
  },
  {
    "text": "and and the simplest example for metric is CPU so uh it's an it's a numeric value it's",
    "start": "273360",
    "end": "280800"
  },
  {
    "text": "a Time series data that has sample Value Point recorded against a particular measurement over a period of time for",
    "start": "280800",
    "end": "287040"
  },
  {
    "text": "example CPU you can plot it over the period of time and then you can analyze the performance",
    "start": "287040",
    "end": "292259"
  },
  {
    "text": "then we have logs which is a timestamp data and log again uh can be structured",
    "start": "292259",
    "end": "298320"
  },
  {
    "text": "or unstructured essentially it talks about an application Behavior",
    "start": "298320",
    "end": "303479"
  },
  {
    "text": "or at any given point in time so we use logs to find out how application was",
    "start": "303479",
    "end": "308520"
  },
  {
    "text": "performing um at any particular point in time and then we have traces uh and traces is",
    "start": "308520",
    "end": "315900"
  },
  {
    "text": "more uh user-centric or it gives lot of information how user is traversing",
    "start": "315900",
    "end": "321419"
  },
  {
    "text": "through different microservices now traces are very important and",
    "start": "321419",
    "end": "326580"
  },
  {
    "text": "interesting piece of signal and particularly we'll talk about microservice architecture so the stress",
    "start": "326580",
    "end": "331860"
  },
  {
    "text": "provide details about how user is traversing through multiple applications and micro Services as he's you know",
    "start": "331860",
    "end": "339320"
  },
  {
    "text": "processing through the application workflow and now to process this this lot of",
    "start": "339320",
    "end": "345380"
  },
  {
    "text": "telemetry data which is metrics logs and trees we have Fleet of services",
    "start": "345380",
    "end": "351000"
  },
  {
    "text": "so on my left we have Cloud watch related services and again cloudwatch is",
    "start": "351000",
    "end": "356100"
  },
  {
    "text": "uh is a better tested tool it is deeply integrated with AWS services and uh it's",
    "start": "356100",
    "end": "362220"
  },
  {
    "text": "good for customers who are completely on AWS and need an observability solution which is which gives a wider coverage",
    "start": "362220",
    "end": "369000"
  },
  {
    "text": "and it's deeply integrated at the other hand like on the right hand side we have open source managed",
    "start": "369000",
    "end": "375300"
  },
  {
    "text": "services and we have a fleet of services like we have Amazon manage grafana Amazon manage Prometheus and at an",
    "start": "375300",
    "end": "382020"
  },
  {
    "text": "instrumentation layer we have a DOT which we will focus today essentially",
    "start": "382020",
    "end": "387240"
  },
  {
    "text": "it is good for the customer who have uh open source first strategy or customer",
    "start": "387240",
    "end": "393000"
  },
  {
    "text": "who want to give a seamless experience monitoring experience uh on-prem as well as on the cloud",
    "start": "393000",
    "end": "399120"
  },
  {
    "start": "399000",
    "end": "1006000"
  },
  {
    "text": "so now let's look at um what open Telemetry is",
    "start": "399120",
    "end": "404819"
  },
  {
    "text": "so open Telemetry is a cncf project uh it gives us a standardization layer",
    "start": "404819",
    "end": "411240"
  },
  {
    "text": "which works between the application and your observability analysis backend",
    "start": "411240",
    "end": "416580"
  },
  {
    "text": "and it allows the developer to seamlessly instrument the Telemetry data from the",
    "start": "416580",
    "end": "423060"
  },
  {
    "text": "application it supports various programming languages as you see on the screen so regardless where the developer",
    "start": "423060",
    "end": "428460"
  },
  {
    "text": "is building the application be it C plus plus.net go uh developer will be able to",
    "start": "428460",
    "end": "433979"
  },
  {
    "text": "use a standardized set of sdks and apis to generate or instrument the Telemetry",
    "start": "433979",
    "end": "439919"
  },
  {
    "text": "data another good part is it also integrates with libraries so imagine you have a database driver and you don't",
    "start": "439919",
    "end": "446340"
  },
  {
    "text": "want to modify your database driver to track your query or generate or instrument the the query set you and and",
    "start": "446340",
    "end": "453840"
  },
  {
    "text": "that's the case with most libraries with Hotel uh you can do that and hotel supports that which means you can just",
    "start": "453840",
    "end": "459660"
  },
  {
    "text": "plug it and enable uh it in your application and directly generate the trace data uh from your",
    "start": "459660",
    "end": "466440"
  },
  {
    "text": "application now with that let's also look at",
    "start": "466440",
    "end": "472440"
  },
  {
    "text": "um essentially what use case uh Hotel solves or what challenge hotels Falls so",
    "start": "472440",
    "end": "477599"
  },
  {
    "text": "now when we talk about uh distributed applications and microservice architecture we see that developers are",
    "start": "477599",
    "end": "483180"
  },
  {
    "text": "developing and using different sdks now while instrumenting the Telemetry data",
    "start": "483180",
    "end": "489240"
  },
  {
    "text": "different sdks have their own format and the mat the telemetries data is generated in different format which",
    "start": "489240",
    "end": "494880"
  },
  {
    "text": "requires a specific agent to process that information now with that we",
    "start": "494880",
    "end": "501660"
  },
  {
    "text": "have challenges in correlating that information because there are different formats and we lose also a lot of",
    "start": "501660",
    "end": "508020"
  },
  {
    "text": "contextual information this is where um open Telemetry or hotel project help it gives us a single solution which is",
    "start": "508020",
    "end": "515520"
  },
  {
    "text": "vendor agnostic it gives us the capability to process data from and take data from multiple sources and move data",
    "start": "515520",
    "end": "522479"
  },
  {
    "text": "to multiple targets and essentially we'll look that look at it today uh as we build the talk",
    "start": "522479",
    "end": "530100"
  },
  {
    "text": "now we also need to understand what that hotel does not give us any persistent",
    "start": "530100",
    "end": "535320"
  },
  {
    "text": "layer so it is not analysis backend uh so to",
    "start": "535320",
    "end": "541260"
  },
  {
    "text": "analysis analyze your Telemetry data you need to rely upon another backend tool",
    "start": "541260",
    "end": "546779"
  },
  {
    "text": "like Cloud watch or Prometheus now with that let's take if there are",
    "start": "546779",
    "end": "553620"
  },
  {
    "text": "any questions right so I don't I do not have any",
    "start": "553620",
    "end": "560880"
  },
  {
    "text": "questions from the audience at this stage I would like to remind the audience to please use the chat option",
    "start": "560880",
    "end": "566640"
  },
  {
    "text": "on the right hand side if they have any questions for our speakers we can ask them live during the show and then take",
    "start": "566640",
    "end": "574620"
  },
  {
    "text": "them take them forward uh actually as I was talking there is a question that",
    "start": "574620",
    "end": "579899"
  },
  {
    "text": "just popped up uh this is by user G garma 7 and the",
    "start": "579899",
    "end": "586440"
  },
  {
    "text": "question is is there any cost for using a DOT solution yeah so that's a good question so there",
    "start": "586440",
    "end": "592980"
  },
  {
    "text": "is no cost for using a DOT it's completely open source and it is free",
    "start": "592980",
    "end": "598200"
  },
  {
    "text": "for our customers all right so yeah back to you",
    "start": "598200",
    "end": "605519"
  },
  {
    "text": "awesome so then let's move uh let's understand what is telemetry signal so and I I",
    "start": "605519",
    "end": "613200"
  },
  {
    "text": "thought I'll emphasize this because we'll use this term Telemetry signal time and again as we build the conversation so when we receive data a",
    "start": "613200",
    "end": "621540"
  },
  {
    "text": "metric data or log data or traces we call it Telemetry signal and you will",
    "start": "621540",
    "end": "626940"
  },
  {
    "text": "see this term Telemetry signal being used multiple times you know when you use hotel or a DOT",
    "start": "626940",
    "end": "634680"
  },
  {
    "text": "now the next is and let's understand um uh like how the architecture would",
    "start": "634680",
    "end": "642360"
  },
  {
    "text": "look like for your observability solution without hotel and with Hotel so so the first is how currently you build",
    "start": "642360",
    "end": "649800"
  },
  {
    "text": "an observability solution without hotels so you have the developer built the application in different languages and",
    "start": "649800",
    "end": "656040"
  },
  {
    "text": "they use different sdks and then since the data is generated in different format it is processed by different",
    "start": "656040",
    "end": "662880"
  },
  {
    "text": "agents now the different agents will then send this data to different backend targets so you will have different",
    "start": "662880",
    "end": "669540"
  },
  {
    "text": "targets for metrics and for traces and for logs now this is where you lose lot",
    "start": "669540",
    "end": "675060"
  },
  {
    "text": "of uh the contextual information and also a lot of challenges that you will",
    "start": "675060",
    "end": "680880"
  },
  {
    "text": "have in correlating that information now with Hotel",
    "start": "680880",
    "end": "686399"
  },
  {
    "text": "essentially we replace the different sdks with a single Hotel",
    "start": "686399",
    "end": "692519"
  },
  {
    "text": "collector so you will have one hotel collector it could be an Hotel collector or a DOT which we will cover",
    "start": "692519",
    "end": "699600"
  },
  {
    "text": "it sits between your application and your backend uh analysis backend and it gives us a",
    "start": "699600",
    "end": "708060"
  },
  {
    "text": "single Library which is vendor agnostics it uses one protocol and it basically",
    "start": "708060",
    "end": "713279"
  },
  {
    "text": "allows us to receive data from multiple sources and process that data so we can",
    "start": "713279",
    "end": "719220"
  },
  {
    "text": "either filter it or we can do some batching and then it allows us to send data to different targets now the",
    "start": "719220",
    "end": "725640"
  },
  {
    "text": "benefit of that is once your application is configured to instrument the Telemetry data developer can anytime",
    "start": "725640",
    "end": "732899"
  },
  {
    "text": "change the target without changing the instrumentation layer now let's look at",
    "start": "732899",
    "end": "740399"
  },
  {
    "text": "the different components of Hotel so primarily there are four components",
    "start": "740399",
    "end": "745440"
  },
  {
    "text": "which is a specification uh Hotel collector SDK and then instrumentation",
    "start": "745440",
    "end": "751980"
  },
  {
    "text": "and contract packages and I will not emphasize more on a specification there is a GitHub page",
    "start": "751980",
    "end": "757800"
  },
  {
    "text": "which talks about different specifications or you can say",
    "start": "757800",
    "end": "763220"
  },
  {
    "text": "standards for building an application compatible to open",
    "start": "763220",
    "end": "768240"
  },
  {
    "text": "Telemetry so you can check out the GitHub page if you want more details and specification now let's talk about hotel",
    "start": "768240",
    "end": "775380"
  },
  {
    "text": "collector now as I mentioned Hotel collector is um as a standardization layer which sits",
    "start": "775380",
    "end": "781920"
  },
  {
    "text": "in between your application and your analysis backend it provides us a vendor agnostic standardized way to process",
    "start": "781920",
    "end": "789180"
  },
  {
    "text": "Telemetry data and it supports various formats so it supports otlp Jager or Prometheus there are",
    "start": "789180",
    "end": "796320"
  },
  {
    "text": "different other commercial observability uh tool providers also now they support Hotel so",
    "start": "796320",
    "end": "802620"
  },
  {
    "text": "Hotel gives various receivers for allowing you to receive Telemetry data",
    "start": "802620",
    "end": "808620"
  },
  {
    "text": "from various sources if you talk about hotel collector",
    "start": "808620",
    "end": "814740"
  },
  {
    "text": "components there are essentially four components",
    "start": "814740",
    "end": "819839"
  },
  {
    "text": "which is receiver processor exporter and extensions so as I mentioned you it",
    "start": "819839",
    "end": "826800"
  },
  {
    "text": "allows us to receive information from various sources so we have different types of receivers like Prometheus x-ray",
    "start": "826800",
    "end": "833880"
  },
  {
    "text": "Zipkin and open Telemetry then it is it gives us different processors so we have",
    "start": "833880",
    "end": "839940"
  },
  {
    "text": "different processes like we can do processing of the telemetric data as we receive the signal so we can we have",
    "start": "839940",
    "end": "846300"
  },
  {
    "text": "different processors but just for example we have a batch processor which can do batching if you want to batch the",
    "start": "846300",
    "end": "853200"
  },
  {
    "text": "signals before you send it to the Target or we can have a filter processor where you can filter the data before you send",
    "start": "853200",
    "end": "859620"
  },
  {
    "text": "it to the Target then there are different exporters like we have you you can send the Telemetry",
    "start": "859620",
    "end": "865680"
  },
  {
    "text": "data to different targets like you can send it to uh Prometheus or cloudwatch so for each Target you have different",
    "start": "865680",
    "end": "872279"
  },
  {
    "text": "exporters and then we have different extensions so we have like a health check extension which gives you a health",
    "start": "872279",
    "end": "878339"
  },
  {
    "text": "check endpoint which you can utilize to find out if the collector is working or not and then we have Sig V4 extension",
    "start": "878339",
    "end": "884579"
  },
  {
    "text": "which is for authentication which so that we'll talk about now at a very high level when we talk",
    "start": "884579",
    "end": "891660"
  },
  {
    "text": "about the configuration this is a sample configuration file to configure the hotel collector and I thought to bring",
    "start": "891660",
    "end": "898620"
  },
  {
    "text": "it up so you understand how flexible it is to configure Hotel collectors so in the first section you see we can we can",
    "start": "898620",
    "end": "904740"
  },
  {
    "text": "configure the receiver the processor exporter and",
    "start": "904740",
    "end": "910079"
  },
  {
    "text": "extensions and we can configure let's say for processor if you're using a batch processor we can Define like what",
    "start": "910079",
    "end": "916079"
  },
  {
    "text": "is the batching time how in what interval we want to batch the signals and then in this later part of the",
    "start": "916079",
    "end": "922680"
  },
  {
    "text": "configuration we Define service where we can Define what processor or receiver or exporter",
    "start": "922680",
    "end": "930300"
  },
  {
    "text": "we are going to use for Trace metrics and logs",
    "start": "930300",
    "end": "935399"
  },
  {
    "text": "now this is this also tells us that it is very flexible you can have different",
    "start": "935399",
    "end": "941339"
  },
  {
    "text": "receiver and um exporter for Trace data for Matrix data and for logs data",
    "start": "941339",
    "end": "949399"
  },
  {
    "text": "now to move the Telemetry data to the hotel collector or to your",
    "start": "950880",
    "end": "958339"
  },
  {
    "text": "processing analysis backend you need to instrument your application to generate",
    "start": "958339",
    "end": "964079"
  },
  {
    "text": "the Telemetry data and for instrumentation uh essentially there can",
    "start": "964079",
    "end": "969120"
  },
  {
    "text": "be an auto instrumentation or manual instrumentation so Auto instrumentation means that you can just instrument your",
    "start": "969120",
    "end": "975839"
  },
  {
    "text": "application by using the sdks with very minimum change in the code or no changes",
    "start": "975839",
    "end": "980940"
  },
  {
    "text": "in the code and then you also have an option where you can manually instrument and again I just thought of like",
    "start": "980940",
    "end": "987600"
  },
  {
    "text": "plotting it against the effort and reward so if you do the manual instrumentation you will have more",
    "start": "987600",
    "end": "993000"
  },
  {
    "text": "granular control so you will put more efforts but then you will have more reward because you will exactly instrument the metric uh that you need",
    "start": "993000",
    "end": "1000560"
  },
  {
    "text": "to monitor your application based on your use case",
    "start": "1000560",
    "end": "1004779"
  },
  {
    "start": "1006000",
    "end": "1253000"
  },
  {
    "text": "now let's look at how Hotel works and the a very high level flow how you can",
    "start": "1006680",
    "end": "1013579"
  },
  {
    "text": "process your data and and create an observability solution using Hotel so",
    "start": "1013579",
    "end": "1019940"
  },
  {
    "text": "at a very high level so let's assume you have an application code which is running on ec2 or one container the",
    "start": "1019940",
    "end": "1026660"
  },
  {
    "text": "first step is basically is to instrument uh the Telemetry data",
    "start": "1026660",
    "end": "1033020"
  },
  {
    "text": "now you can instrument the Telemetry data by using Auto instrumentation layer",
    "start": "1033020",
    "end": "1038058"
  },
  {
    "text": "and there are different apis and sdks which are available for you to instrument the data then you will have",
    "start": "1038059",
    "end": "1044780"
  },
  {
    "text": "your open Telemetry extension and processing layer where you can",
    "start": "1044780",
    "end": "1049880"
  },
  {
    "text": "do the processing before you generate or you move the Telemetry data to The",
    "start": "1049880",
    "end": "1055280"
  },
  {
    "text": "Collector and then you have in process exporter which again will allow you to",
    "start": "1055280",
    "end": "1060500"
  },
  {
    "text": "define the format before it sends now there are two at a very high level there",
    "start": "1060500",
    "end": "1065780"
  },
  {
    "text": "are two ways you can move the Telemetry data one that from the application",
    "start": "1065780",
    "end": "1070820"
  },
  {
    "text": "instrumentation layer you can directly send that to the monitoring service second could be that you send that to",
    "start": "1070820",
    "end": "1078500"
  },
  {
    "text": "the hotel collector and then Hotel collector will then send that to the monitoring service there could be a",
    "start": "1078500",
    "end": "1085220"
  },
  {
    "text": "third way which is um your application directly sending that to the hotel collector or the",
    "start": "1085220",
    "end": "1090320"
  },
  {
    "text": "application monitor monitoring service which may not be a very uh good architecture idly uh you should",
    "start": "1090320",
    "end": "1097520"
  },
  {
    "text": "instrument your Telemetry data send that to the hotel collector and then Hotel collector should be utilized to send the",
    "start": "1097520",
    "end": "1104600"
  },
  {
    "text": "data to the monitoring services now let's break for Q a and see if there",
    "start": "1104600",
    "end": "1110360"
  },
  {
    "text": "are any questions um yes so Arun we have a couple of",
    "start": "1110360",
    "end": "1116059"
  },
  {
    "text": "questions uh there was a follow-up from G garima 7 asking us if uh they can",
    "start": "1116059",
    "end": "1123320"
  },
  {
    "text": "switch from cloud watch to a DOT that they are currently using",
    "start": "1123320",
    "end": "1129200"
  },
  {
    "text": "yeah so I I think there's no need to switch from cloudwatch to a DOT if you are using cloudwatch you can continue to",
    "start": "1129200",
    "end": "1135440"
  },
  {
    "text": "use it uh because cloudwatch allows you to monitor your logs or capture your",
    "start": "1135440",
    "end": "1140720"
  },
  {
    "text": "logs and your infrastructure metrics but you can also at the same time use a DOT",
    "start": "1140720",
    "end": "1146600"
  },
  {
    "text": "to capture application metrics and Trace data okay",
    "start": "1146600",
    "end": "1152480"
  },
  {
    "text": "all right uh the next one is by a user u y u s a d o l a t o o one and they're",
    "start": "1152480",
    "end": "1160520"
  },
  {
    "text": "asking if there is any relationship between a DOT and x-ray",
    "start": "1160520",
    "end": "1165880"
  },
  {
    "text": "we can take take this question at the uh and uh because when we will cover the",
    "start": "1166900",
    "end": "1172580"
  },
  {
    "text": "X-ray exporter yeah sure okay and finally I have one",
    "start": "1172580",
    "end": "1178039"
  },
  {
    "text": "more query from D Kumar 707 asking if they can collect only the metrics and",
    "start": "1178039",
    "end": "1184220"
  },
  {
    "text": "disable the tracing while using a DOT yes so like I showed the configuration file it's very flexible so it's up to",
    "start": "1184220",
    "end": "1191299"
  },
  {
    "text": "you uh what you want to capture you want to capture metric data only or Trace data or one of them and then it's very",
    "start": "1191299",
    "end": "1198559"
  },
  {
    "text": "flexible uh you can also have metric data being captured by different",
    "start": "1198559",
    "end": "1203840"
  },
  {
    "text": "receiver and exporter and Trace data being captured by different receiver export it's very flexible in the",
    "start": "1203840",
    "end": "1208880"
  },
  {
    "text": "configuration all right uh we have one more question coming in this is from uh mukul",
    "start": "1208880",
    "end": "1215539"
  },
  {
    "text": "srivastava asking apart from application monitoring can we use open Telemetry for",
    "start": "1215539",
    "end": "1221960"
  },
  {
    "text": "infrastructure monitoring as well absolutely so you I I think that's what we have a demo today we'll show you how",
    "start": "1221960",
    "end": "1228380"
  },
  {
    "text": "you can use um Hotel collector uh with eks and collect a lot of infrastructure metrics",
    "start": "1228380",
    "end": "1235100"
  },
  {
    "text": "and convert that into a good dashboard all right so these are the questions",
    "start": "1235100",
    "end": "1241220"
  },
  {
    "text": "that I could see in the chat for now again um Team feel free to keep the questions coming we'll try to break bring them up",
    "start": "1241220",
    "end": "1248120"
  },
  {
    "text": "in the next available q a uh back to youth",
    "start": "1248120",
    "end": "1254139"
  },
  {
    "start": "1253000",
    "end": "1788000"
  },
  {
    "text": "uh so so far we have talked about the basic building blocks of obserability uh",
    "start": "1255860",
    "end": "1261080"
  },
  {
    "text": "the challenges and how open Telemetry helps to address those challenges uh now let's talk about AWS desktop for open",
    "start": "1261080",
    "end": "1267559"
  },
  {
    "text": "Telemetry and what is AWS contribution to this uh ecosystem so AWS distrooper",
    "start": "1267559",
    "end": "1273620"
  },
  {
    "text": "open Telemetry is open source distribution uh all the enhancement which AWS brings to open Telemetry uh",
    "start": "1273620",
    "end": "1280520"
  },
  {
    "text": "are all done the upstate we are not going to Fork this project uh it will always remain the distribution uh we",
    "start": "1280520",
    "end": "1287539"
  },
  {
    "text": "while we build a DOT we make sure that all the components which we take from Upstream are ready for production are",
    "start": "1287539",
    "end": "1293900"
  },
  {
    "text": "well tested and validated for performance and security and AWS support is ready to support that",
    "start": "1293900",
    "end": "1301280"
  },
  {
    "text": "ah also the hotel project is very popular there are a lot of contributions",
    "start": "1301280",
    "end": "1306380"
  },
  {
    "text": "coming so we have a release cycle so every 90 days we take the code from the",
    "start": "1306380",
    "end": "1311419"
  },
  {
    "text": "upstream and build the adult uh using a DOT we can collect the traces matrixes",
    "start": "1311419",
    "end": "1316940"
  },
  {
    "text": "we can correlate that we can add contextual information about the AWS",
    "start": "1316940",
    "end": "1322039"
  },
  {
    "text": "resources on which our workload is running and then we can export those to AWS x-ray Cloud watch Amazon manage",
    "start": "1322039",
    "end": "1329600"
  },
  {
    "text": "committees or if we choose to go with any third party Monitoring Solutions or if we can do that",
    "start": "1329600",
    "end": "1337360"
  },
  {
    "text": "uh now what are the benefits of uh using a DOT that we talked about that a DOT is",
    "start": "1337460",
    "end": "1342740"
  },
  {
    "text": "the Upstream first so let's understand why Upstream first is important uh because uh first of all Upstream first",
    "start": "1342740",
    "end": "1348740"
  },
  {
    "text": "is the good open source citizenship uh and uh secondly it gives us an",
    "start": "1348740",
    "end": "1354559"
  },
  {
    "text": "opportunity to vet any idea which we have to write it with a larger Community right and specifically when the ideas",
    "start": "1354559",
    "end": "1361220"
  },
  {
    "text": "are conflicting with each other in in such scenarios it is always the community interest which means and in",
    "start": "1361220",
    "end": "1367580"
  },
  {
    "text": "turn it helps our customers we also make sure that all the a DOT component which",
    "start": "1367580",
    "end": "1373580"
  },
  {
    "text": "we take have gone through our abstract process so it gives you the same security which our AWS services on the",
    "start": "1373580",
    "end": "1381080"
  },
  {
    "text": "cloud gives you and it has the same predictability so because it is open source and one of",
    "start": "1381080",
    "end": "1386900"
  },
  {
    "text": "the challenge open source software can face is that it's very difficult to troubleshoot if we do not know in depth",
    "start": "1386900",
    "end": "1392720"
  },
  {
    "text": "so we have always AWS support to help you and customers who are using",
    "start": "1392720",
    "end": "1398179"
  },
  {
    "text": "Enterprise support can contact that time or their essay to get the further",
    "start": "1398179",
    "end": "1405320"
  },
  {
    "text": "specialist engagement they can get the architectural guidance and uh",
    "start": "1405320",
    "end": "1411620"
  },
  {
    "text": "any queries which they have regarding their observative strategy specifically around open source and we provide one",
    "start": "1411620",
    "end": "1419059"
  },
  {
    "text": "click deployment for AWS services like lebda ECS even eks we have red dot",
    "start": "1419059",
    "end": "1424880"
  },
  {
    "text": "operator it is very easy to install the exporters are available for AWS Solutions Monitoring Solutions as well",
    "start": "1424880",
    "end": "1431900"
  },
  {
    "text": "as any third party Monitoring Solutions so let's look at some of the use cases",
    "start": "1431900",
    "end": "1438679"
  },
  {
    "text": "so at first there are customers who are looking to have a standard for their",
    "start": "1438679",
    "end": "1444200"
  },
  {
    "text": "observative strategy across their applications so those are the uh",
    "start": "1444200",
    "end": "1449960"
  },
  {
    "text": "customers who would look for the adult because it provides them tools and mechanisms to do that then there are",
    "start": "1449960",
    "end": "1456799"
  },
  {
    "text": "customers who want to remove the dependency on their observability vendors they want to go with the manual",
    "start": "1456799",
    "end": "1462200"
  },
  {
    "text": "manually instrumenting their application uh using open Telemetry and then",
    "start": "1462200",
    "end": "1468520"
  },
  {
    "text": "definitely going to take them more time to build an instrument all of their application but once they have done it",
    "start": "1468520",
    "end": "1475460"
  },
  {
    "text": "it makes their application independent of observative interest and adult provides those tools and open provide",
    "start": "1475460",
    "end": "1481760"
  },
  {
    "text": "open telemeter provides those SDK to achieve this code",
    "start": "1481760",
    "end": "1487700"
  },
  {
    "text": "and also open Telemetry is a large ecosystem so we have a lot of uh agents",
    "start": "1487700",
    "end": "1492919"
  },
  {
    "text": "and instrumentation libraries are already available which customer can utilize for example uh if you are",
    "start": "1492919",
    "end": "1499700"
  },
  {
    "text": "running a node.js application which is communicating with redis you do not need to write any code to instrument that",
    "start": "1499700",
    "end": "1505580"
  },
  {
    "text": "because there are already packages available for it",
    "start": "1505580",
    "end": "1510279"
  },
  {
    "text": "now let's look at some of the components which we have in a DOT uh the Upstream",
    "start": "1511220",
    "end": "1516440"
  },
  {
    "text": "open Telemetry repo has lot many but what the components which we take from",
    "start": "1516440",
    "end": "1523220"
  },
  {
    "text": "Upstream are only the ones which are mature or close to being matured and go through our abstract process",
    "start": "1523220",
    "end": "1529580"
  },
  {
    "text": "so uh still we have wide variety of receivers processor exporters and extensions so let's look at an example",
    "start": "1529580",
    "end": "1537260"
  },
  {
    "text": "that where we want to receive the matrixes in the Prometheus format and then we want to export those matrixes to",
    "start": "1537260",
    "end": "1544760"
  },
  {
    "text": "Amazon managed service for Prometheus this is an example which we will see in the demo later today as well so using",
    "start": "1544760",
    "end": "1552020"
  },
  {
    "text": "Prometheus receiver we will receive the matrixes we can apply processors like batch processor which Arun talked about",
    "start": "1552020",
    "end": "1558460"
  },
  {
    "text": "there are other processes like metrics transform processor where we can add",
    "start": "1558460",
    "end": "1563600"
  },
  {
    "text": "certain attributes to matrixes and filter processes processor where we can",
    "start": "1563600",
    "end": "1568640"
  },
  {
    "text": "drop certain matrixes and then there is exporter Prometheus remote right exporter and there is a extension 6v4",
    "start": "1568640",
    "end": "1576559"
  },
  {
    "text": "which provides us the authentication if you have not heard of sigbee4 signal",
    "start": "1576559",
    "end": "1582020"
  },
  {
    "text": "version 4 is basically an authentication mechanism for signing the request which you send to AWS apis",
    "start": "1582020",
    "end": "1591080"
  },
  {
    "text": "and let's look at another example where we have an application which won't which",
    "start": "1591080",
    "end": "1596360"
  },
  {
    "text": "is instrumented using open Telemetry SDK and want to export the traces to AWS",
    "start": "1596360",
    "end": "1602320"
  },
  {
    "text": "x-ray so I think uh there was one question came that what is the relationship between X-ray and adults so",
    "start": "1602320",
    "end": "1609320"
  },
  {
    "text": "adult is where we are collecting the traces and x-ray is where we are going",
    "start": "1609320",
    "end": "1614960"
  },
  {
    "text": "to analyze those stresses so this is another example which we are going to see in the demo letter today so uh using",
    "start": "1614960",
    "end": "1621919"
  },
  {
    "text": "otlp receiver we receive the traces we can apply processors like attribute processors and processor and then using",
    "start": "1621919",
    "end": "1629419"
  },
  {
    "text": "AWS x-ray exporter we are going to export those stresses to AWS x-ray service which we can use to analyze it",
    "start": "1629419",
    "end": "1636559"
  },
  {
    "text": "further uh now let's look at the Prometheus receiver and Prometheus remote right",
    "start": "1636559",
    "end": "1643159"
  },
  {
    "text": "exporter of the a DOT so a Prometheus receiver gives us the complete",
    "start": "1643159",
    "end": "1648740"
  },
  {
    "text": "compatibility with Prometheus right so it has the capability to scrap the metrics in the same way which Prometheus",
    "start": "1648740",
    "end": "1655820"
  },
  {
    "text": "server does it can also do the service Discovery and Matrix relabeling right",
    "start": "1655820",
    "end": "1661820"
  },
  {
    "text": "uh but what it does not have is that it does not have a storage like Prometheus server does right so it needs a place to",
    "start": "1661820",
    "end": "1669200"
  },
  {
    "text": "send those matrixes somewhere uh so it can be a storage like a cortex so a",
    "start": "1669200",
    "end": "1675980"
  },
  {
    "text": "short note on cortex that uh Prometheus is a great tool for Matrix monitoring but there are challenges in scaling it",
    "start": "1675980",
    "end": "1682580"
  },
  {
    "text": "so there are two popular cncf projects which provide scalable storage solution for Prometheus Thanos and cortex so",
    "start": "1682580",
    "end": "1690080"
  },
  {
    "text": "using cortex AWS has built a managed Prometheus service we called Amazon managed promoters and service and we can",
    "start": "1690080",
    "end": "1698480"
  },
  {
    "text": "use that as a storage for our matrixes which are collected by a Prometheus",
    "start": "1698480",
    "end": "1704240"
  },
  {
    "text": "receiver of a DOT so this is how the high high level",
    "start": "1704240",
    "end": "1710320"
  },
  {
    "text": "flow look like so we have a DOT collector pipeline in which we have defined a Prometheus receiver that",
    "start": "1710320",
    "end": "1716299"
  },
  {
    "text": "promises receiver is scrapping metrics from the application application metrics from application infrastructure metrics",
    "start": "1716299",
    "end": "1722659"
  },
  {
    "text": "from kubernetes uh and then we can Define the processors which we want in",
    "start": "1722659",
    "end": "1728179"
  },
  {
    "text": "this particular pipeline we can relabel the matrixes or we can drop some of the",
    "start": "1728179",
    "end": "1733220"
  },
  {
    "text": "matrixes and using Prometheus remote write exporter we are going to export those matrixes to AWS managed from HS",
    "start": "1733220",
    "end": "1741140"
  },
  {
    "text": "service and then we have managed pirafana service which we can use to",
    "start": "1741140",
    "end": "1746779"
  },
  {
    "text": "create beautiful dashboards using the metrics data which is available in from",
    "start": "1746779",
    "end": "1752179"
  },
  {
    "text": "HS service MP so uh this is how uh if you look at the",
    "start": "1752179",
    "end": "1758240"
  },
  {
    "text": "remote right exporter part the exporter part of our pipeline so we in exporter",
    "start": "1758240",
    "end": "1763520"
  },
  {
    "text": "we Define an endpoint a remote right endpoint this is the end point of our Amazon managed Prometheus workspace so",
    "start": "1763520",
    "end": "1771980"
  },
  {
    "text": "this is where we are going to store the matrixes which we are scrapping through our receiver and the Sig V4",
    "start": "1771980",
    "end": "1779500"
  },
  {
    "text": "authentication extension is going to help us authenticate our request to the",
    "start": "1779500",
    "end": "1785960"
  },
  {
    "text": "service uh let's look at some of the deployment method of a dot in eks",
    "start": "1785960",
    "end": "1796159"
  },
  {
    "start": "1788000",
    "end": "2284000"
  },
  {
    "text": "so first of all we have the simplest ways we can run it as the simple kubernetes deployment",
    "start": "1796159",
    "end": "1803779"
  },
  {
    "text": "that is that is the simple simplest way to run it and then there is a demon set if in demonstrate we will have one",
    "start": "1803779",
    "end": "1811100"
  },
  {
    "text": "instance of our adult running on each of the node and we can go with this pattern",
    "start": "1811100",
    "end": "1816380"
  },
  {
    "text": "if we want to evenly distribute load across all the kubernetes nodes which we have then there is a state full set",
    "start": "1816380",
    "end": "1822380"
  },
  {
    "text": "pattern uh where we will have predictable naming for our a DOT collector instances if we have an",
    "start": "1822380",
    "end": "1829580"
  },
  {
    "text": "automation where we requires the standard naming right predictable naming",
    "start": "1829580",
    "end": "1835460"
  },
  {
    "text": "convention then we can go with this and then there is a sidecar deployment in sidecar deployment a DOT run with in the",
    "start": "1835460",
    "end": "1843260"
  },
  {
    "text": "same port where our application is running uh it is again the simple very",
    "start": "1843260",
    "end": "1848299"
  },
  {
    "text": "simple to deploy there is no service Discovery required because there is only one service which a DOT is talking to",
    "start": "1848299",
    "end": "1854299"
  },
  {
    "text": "and then it is fastest way to upload data from application but again the drawback of",
    "start": "1854299",
    "end": "1861080"
  },
  {
    "text": "this approach is that if you are going to make any changes to a DOT collector then you need to read apply the",
    "start": "1861080",
    "end": "1866480"
  },
  {
    "text": "application as well ah so we have a DOT operator as well so",
    "start": "1866480",
    "end": "1873980"
  },
  {
    "text": "a DOT operator is a kubernetes operator it's a what it does it gives you",
    "start": "1873980",
    "end": "1880159"
  },
  {
    "text": "capability to manage the open Telemetry collector in such in the same way when you manage the like you",
    "start": "1880159",
    "end": "1886279"
  },
  {
    "text": "manage the kubernetes native objects it basically extends the kubernetes and in",
    "start": "1886279",
    "end": "1892940"
  },
  {
    "text": "a case we have single click deployment of a DOT either through the console or",
    "start": "1892940",
    "end": "1898279"
  },
  {
    "text": "through CLI so if we install the ADOT uh add-on for",
    "start": "1898279",
    "end": "1905240"
  },
  {
    "text": "eks so that is how it looks like so once we have installed it then a pod of a DOT",
    "start": "1905240",
    "end": "1912200"
  },
  {
    "text": "operator uh will start running which will talk to kubernetes API server and",
    "start": "1912200",
    "end": "1917539"
  },
  {
    "text": "when we deploy an object with resource type open Telemetry collector then our",
    "start": "1917539",
    "end": "1924799"
  },
  {
    "text": "kubernetes API server will notify our adult ADOT will read the custom configuration which we have provided in",
    "start": "1924799",
    "end": "1932299"
  },
  {
    "text": "our file and going to deploy a DOT collector based on the configuration which we have provided we will see this",
    "start": "1932299",
    "end": "1939320"
  },
  {
    "text": "in demo today so now uh what we are going to say in",
    "start": "1939320",
    "end": "1946039"
  },
  {
    "text": "demo there are sample pipeline configuration which I would like to show you this is repeated but we are showing",
    "start": "1946039",
    "end": "1952580"
  },
  {
    "text": "it to make sure that you know everyone understand that how a pipeline looks like uh looks like and how easy it is to",
    "start": "1952580",
    "end": "1959000"
  },
  {
    "text": "configure it right so we have a receiver where we have a Prometheus receiver and",
    "start": "1959000",
    "end": "1964220"
  },
  {
    "text": "we have defined the configuration for it and the scrap jobs like we Define for a Prometheus server uh below that uh there",
    "start": "1964220",
    "end": "1971720"
  },
  {
    "text": "is extension uh sick report which helps you to authenticate you know request",
    "start": "1971720",
    "end": "1977000"
  },
  {
    "text": "with our AWS services I'll be right side we are using a batch",
    "start": "1977000",
    "end": "1983240"
  },
  {
    "text": "processor we are batching metrics every 60 seconds and using we have defined in",
    "start": "1983240",
    "end": "1989659"
  },
  {
    "text": "exporter which is which will use the remote right endpoint of our Amazon managed Prometheus workspace and will",
    "start": "1989659",
    "end": "1996260"
  },
  {
    "text": "export it so under services we we create a pipeline for metrics so",
    "start": "1996260",
    "end": "2002679"
  },
  {
    "text": "what we are saying is that we are going to receive metrics on this receiver we are going to process it using this",
    "start": "2002679",
    "end": "2009159"
  },
  {
    "text": "processor and we are going to export it using this exporter so now we can Define",
    "start": "2009159",
    "end": "2014260"
  },
  {
    "text": "multiple receivers multiple processors and exporters and using those",
    "start": "2014260",
    "end": "2020260"
  },
  {
    "text": "combinations we can create Pipelines this is how the consideration look like",
    "start": "2020260",
    "end": "2027700"
  },
  {
    "text": "for uh x-ray so we have a receiver otlp receiver so we are going to receive",
    "start": "2027700",
    "end": "2034000"
  },
  {
    "text": "traces on this receiver because we have defined under pipeline that we are going to use this receiver for traces we are",
    "start": "2034000",
    "end": "2041440"
  },
  {
    "text": "not using any processors for this Pipeline and then we are going to use AWS x-ray exporter to export the traces",
    "start": "2041440",
    "end": "2048820"
  },
  {
    "text": "which are received to AWS x-ray service so I think at this stage we can before",
    "start": "2048820",
    "end": "2055599"
  },
  {
    "text": "we dive into the demo demo I think we can stop for taking questions",
    "start": "2055599",
    "end": "2062200"
  },
  {
    "text": "all right um so I would like to again remind our audience uh who's watching the show live",
    "start": "2062200",
    "end": "2069099"
  },
  {
    "text": "so please use the chat option to ask any queries that they have uh which we can bring forth to our presenters live in",
    "start": "2069099",
    "end": "2075820"
  },
  {
    "text": "the show um so having said that uh while the questions are are coming in",
    "start": "2075820",
    "end": "2082358"
  },
  {
    "text": "um uh I had a question that came to my mind while you were talking about a DOT and",
    "start": "2082359",
    "end": "2087820"
  },
  {
    "text": "eks so that can be also run ADOT on a ec2 machine or a serverless compute like",
    "start": "2087820",
    "end": "2094419"
  },
  {
    "text": "a Lambda is that a possibility for Lambda we have Lambda layers uh it's",
    "start": "2094419",
    "end": "2101619"
  },
  {
    "text": "a in the configuration which we provide it's a single clicking and then we can use Lambda layers to run a DOT and",
    "start": "2101619",
    "end": "2109079"
  },
  {
    "text": "Export The Matrix and traces to Services we want on ec2 also we can run it on ec2",
    "start": "2109079",
    "end": "2116260"
  },
  {
    "text": "as well so but we would not be running it as a container but we can definitely run it",
    "start": "2116260",
    "end": "2122440"
  },
  {
    "text": "got it so I have a couple more questions coming in so first one is from user D",
    "start": "2122440",
    "end": "2128380"
  },
  {
    "text": "Kumar 707 they're asking how should I use a DOT for apps that are running on",
    "start": "2128380",
    "end": "2134020"
  },
  {
    "text": "ec2 so uh once we deploy the adult collector",
    "start": "2134020",
    "end": "2140440"
  },
  {
    "text": "uh whether a DOT collector is running in a container or it is running on ec2 machine what we need to make sure is",
    "start": "2140440",
    "end": "2146380"
  },
  {
    "text": "that uh the communication between the adult collector and application is there so if",
    "start": "2146380",
    "end": "2152020"
  },
  {
    "text": "there are applications running and they want to ex push the traces to a DOT collector they should be able to communicate to their dot collector vice",
    "start": "2152020",
    "end": "2158859"
  },
  {
    "text": "versa if we are using the Prometheus receiver to the to scrap the metrics then our a DOT collector should have the",
    "start": "2158859",
    "end": "2164680"
  },
  {
    "text": "capability to connect to application and scrap those metrics so once it has the Matrix and then there",
    "start": "2164680",
    "end": "2170800"
  },
  {
    "text": "is a pipeline uh the pipeline will process that and whatever exporters we",
    "start": "2170800",
    "end": "2176859"
  },
  {
    "text": "have defined in that pipeline it is going to export those metrics or traces to",
    "start": "2176859",
    "end": "2181920"
  },
  {
    "text": "those services I hope that answers the question yeah and the exporter the the collector's",
    "start": "2181920",
    "end": "2188680"
  },
  {
    "text": "capability also like to talk to the exporter cells so connectivity has to be established from application to The",
    "start": "2188680",
    "end": "2195220"
  },
  {
    "text": "Collector and then collector to the the target where you want to send the Telemetry data yep",
    "start": "2195220",
    "end": "2201040"
  },
  {
    "text": "all right uh yeah thanks Arun and that uh of course um if there are any follow-ups uh please feel free to ask",
    "start": "2201040",
    "end": "2208180"
  },
  {
    "text": "them in the chat uh I'll move on to the next question that is from mukul srivastava they want to know do we need",
    "start": "2208180",
    "end": "2215859"
  },
  {
    "text": "to make code changes for open Telemetry tracing",
    "start": "2215859",
    "end": "2221380"
  },
  {
    "text": "I can take it off so our answer is you know code changes yes",
    "start": "2221380",
    "end": "2227440"
  },
  {
    "text": "and no so we have basically uh instrumentation we have two kind of",
    "start": "2227440",
    "end": "2232720"
  },
  {
    "text": "instrumentation we have automatic instrumentation and we have manual instrumentation a part which I think",
    "start": "2232720",
    "end": "2237880"
  },
  {
    "text": "Arun touched upon a little bit that with automatic instrumentation we have",
    "start": "2237880",
    "end": "2243839"
  },
  {
    "text": "multiple packages contract libraries which we can add and we will have instrumentation for our application so",
    "start": "2243839",
    "end": "2250740"
  },
  {
    "text": "that is either with the low code or no code so we need to just add the certain",
    "start": "2250740",
    "end": "2256240"
  },
  {
    "text": "packages in our application Define the config and automatic instrumentation can work for us now how much instrumentation",
    "start": "2256240",
    "end": "2264640"
  },
  {
    "text": "we want to put in our application uh depending on that we need to write we may need to write the code as well",
    "start": "2264640",
    "end": "2271660"
  },
  {
    "text": "got it that makes sense all right I think that's everything I had I will let",
    "start": "2271660",
    "end": "2277599"
  },
  {
    "text": "you go into the demo now so I think we are ready for the demo",
    "start": "2277599",
    "end": "2284859"
  },
  {
    "start": "2284000",
    "end": "2675000"
  },
  {
    "text": "so uh in this demo what we are going to do uh is that",
    "start": "2284859",
    "end": "2291220"
  },
  {
    "text": "we will show you the same setup which we showed you in the slides",
    "start": "2291220",
    "end": "2298300"
  },
  {
    "text": "right we are going to scrap kubernetes metrics uh using Prometheus receiver and",
    "start": "2298300",
    "end": "2303339"
  },
  {
    "text": "we are going later we are going to receive the application cases ah in interest of time we already have",
    "start": "2303339",
    "end": "2310420"
  },
  {
    "text": "set up an eks cluster of Amazon managed Prometheus workspace and grafana workspace we have installed the edote",
    "start": "2310420",
    "end": "2317260"
  },
  {
    "text": "operator as well right so but it is very easy to set up a",
    "start": "2317260",
    "end": "2322960"
  },
  {
    "text": "DOT operator on the console we can go to add-on and then we click on get more add-on and here we can see AWS desktop",
    "start": "2322960",
    "end": "2330640"
  },
  {
    "text": "or open Telemetry I have already installed it so I do not see but if it is not installed it should be visible",
    "start": "2330640",
    "end": "2337720"
  },
  {
    "text": "there so once we install it and if we look at the ports which are running in",
    "start": "2337720",
    "end": "2344260"
  },
  {
    "text": "our eks cluster we should be able to see one part running for our",
    "start": "2344260",
    "end": "2350920"
  },
  {
    "text": "open Telemetry operator so our open till yeah here is the port",
    "start": "2350920",
    "end": "2357700"
  },
  {
    "text": "which we can see it's running on its own namespace and this is the word which is",
    "start": "2357700",
    "end": "2362920"
  },
  {
    "text": "responsible for our custom resource definition of open Telemetry connector",
    "start": "2362920",
    "end": "2369460"
  },
  {
    "text": "so here we have the configuration file where we are going to define a resource of type open Telemetry collector and",
    "start": "2369460",
    "end": "2377440"
  },
  {
    "text": "once the kubernetes API server will receive this it is going to notify the operator which we have installed and our",
    "start": "2377440",
    "end": "2383859"
  },
  {
    "text": "operator will read configuration from this file to deploy the add-ons if we",
    "start": "2383859",
    "end": "2389200"
  },
  {
    "text": "look at the configuration it is the same which we see previously there are scrap",
    "start": "2389200",
    "end": "2394240"
  },
  {
    "text": "jobs defined for a Prometheus receiver uh we are going to scrap kubernetes",
    "start": "2394240",
    "end": "2399460"
  },
  {
    "text": "Matrix and here we have the remote right endpoint of Amazon managed from HS",
    "start": "2399460",
    "end": "2404500"
  },
  {
    "text": "surface so on the amp workspace if you look you will find two URLs one is the remote right and with query URL so we",
    "start": "2404500",
    "end": "2411640"
  },
  {
    "text": "are going to use remote write URL for exporting our matrixes to Amazon managed",
    "start": "2411640",
    "end": "2417099"
  },
  {
    "text": "promise letter query URL will be used to create it through krippana so let's",
    "start": "2417099",
    "end": "2423460"
  },
  {
    "text": "deploy this collector so once we deploy this collector it is",
    "start": "2423460",
    "end": "2429160"
  },
  {
    "text": "going to scrap those matrixes process it in the batches and then push it to",
    "start": "2429160",
    "end": "2434680"
  },
  {
    "text": "Amazon managed Prometheus so now let's go to Amazon managed crapana workspace",
    "start": "2434680",
    "end": "2442000"
  },
  {
    "text": "right in the workspace uh we are going to query our parameters Amazon manage",
    "start": "2442000",
    "end": "2447880"
  },
  {
    "text": "Prometheus workspace but let's first add a data source so we we should be able to uh you know create dashboard using the",
    "start": "2447880",
    "end": "2454780"
  },
  {
    "text": "Matrix as available in the Amazon managed promises so now we have imported the uh we have created the data source",
    "start": "2454780",
    "end": "2461380"
  },
  {
    "text": "let's import a public dashboard which is available for kubernetes monitoring",
    "start": "2461380",
    "end": "2466480"
  },
  {
    "text": "using Prometheus Matrix so we are going to use this we are going to specify the our Prometheus data",
    "start": "2466480",
    "end": "2473079"
  },
  {
    "text": "source and once we click on import we are able to see the see that our Matrix",
    "start": "2473079",
    "end": "2479920"
  },
  {
    "text": "from Prometheus has started coming to our dashboard this dashboard has a lot",
    "start": "2479920",
    "end": "2486640"
  },
  {
    "text": "of other panels which shows very useful information and you can also modify",
    "start": "2486640",
    "end": "2493839"
  },
  {
    "text": "these widgets using your own Chrome ql if you want to do that",
    "start": "2493839",
    "end": "2499780"
  },
  {
    "text": "so now we have our kubernetes server monitoring setup we can look at the",
    "start": "2499780",
    "end": "2505960"
  },
  {
    "text": "setting of tracing for our uh you know collecting traces from traces from",
    "start": "2505960",
    "end": "2511119"
  },
  {
    "text": "application and exporting those to AWS x-ray service so for that purpose we are",
    "start": "2511119",
    "end": "2516760"
  },
  {
    "text": "going to deploy a sample application first a traffic generator for that application and then we will deploy a a",
    "start": "2516760",
    "end": "2524440"
  },
  {
    "text": "DOT collector which receives the AWS x-ray traces and Export it to",
    "start": "2524440",
    "end": "2530579"
  },
  {
    "text": "x-ray service so here we have the we have deployed our",
    "start": "2530579",
    "end": "2536920"
  },
  {
    "text": "traffic generator now we are going to deploy a sample application this application is",
    "start": "2536920",
    "end": "2542859"
  },
  {
    "text": "instrumented using open Telemetry SDK and we have all of this information is",
    "start": "2542859",
    "end": "2549640"
  },
  {
    "text": "available publicly we will share those links if you if you are looking to",
    "start": "2549640",
    "end": "2554740"
  },
  {
    "text": "so we have deployed the application now we are going to deploy an a DOT",
    "start": "2554740",
    "end": "2559900"
  },
  {
    "text": "collector so that a DOT collector is going to receive addresses from the application",
    "start": "2559900",
    "end": "2567160"
  },
  {
    "text": "so this is the endpoint where application is going to push the stresses so we are going to deploy",
    "start": "2567160",
    "end": "2572920"
  },
  {
    "text": "collector with the same name and I have already configured my file",
    "start": "2572920",
    "end": "2578859"
  },
  {
    "text": "using this name and we are going to deploy so once we have deployed The",
    "start": "2578859",
    "end": "2584500"
  },
  {
    "text": "Collector let's look at all the boards which are currently running in our",
    "start": "2584500",
    "end": "2590680"
  },
  {
    "text": "kubernetes in our eks cluster and we should be able to see the two applications which we",
    "start": "2590680",
    "end": "2598180"
  },
  {
    "text": "have deployed and two collectors which we have deployed one for the Prometheus one and",
    "start": "2598180",
    "end": "2604540"
  },
  {
    "text": "140 x-ray so here uh all of our four ports are",
    "start": "2604540",
    "end": "2610000"
  },
  {
    "text": "visible now uh let's go to AWS x-ray service and",
    "start": "2610000",
    "end": "2616599"
  },
  {
    "text": "check whether we are able to get the traces coming from the sample application which we have deployed",
    "start": "2616599",
    "end": "2624900"
  },
  {
    "text": "so on x-ray console on the left pane we can see the traces",
    "start": "2625560",
    "end": "2632079"
  },
  {
    "text": "so once we click on traces we are able to see the traces coming from this application and to drill down further on",
    "start": "2632079",
    "end": "2639400"
  },
  {
    "text": "a particular Trace if we click on a particular Trace we are able to see all the operations going on with that",
    "start": "2639400",
    "end": "2646359"
  },
  {
    "text": "particular operation because it's a very simple application our service map is also simple but depends on how",
    "start": "2646359",
    "end": "2652480"
  },
  {
    "text": "complicated your application is and what all activities it is doing it can be vast and it can be really helpful for",
    "start": "2652480",
    "end": "2660280"
  },
  {
    "text": "troubleshooting any issues specifically the performance issues so",
    "start": "2660280",
    "end": "2667180"
  },
  {
    "text": "with this I think done with the demo and I'll hand it over to Arun now",
    "start": "2667180",
    "end": "2675040"
  },
  {
    "start": "2675000",
    "end": "3331000"
  },
  {
    "text": "hey thanks thanks Siddharth for the demo so now as we see uh we see the demo",
    "start": "2675040",
    "end": "2680859"
  },
  {
    "text": "right and we understand how uh simple it is to instrument the metrics using a DOT",
    "start": "2680859",
    "end": "2687280"
  },
  {
    "text": "and especially the a DOT operator for eks we understand that how seamlessly we can",
    "start": "2687280",
    "end": "2694300"
  },
  {
    "text": "instrument the metrics and move them to the analysis backend uh I also want to",
    "start": "2694300",
    "end": "2699760"
  },
  {
    "text": "highlight that everything that we showed in the demo there is also an AWS",
    "start": "2699760",
    "end": "2705099"
  },
  {
    "text": "observability accelerator it is a solution which is available for you if you want to go and automate this entire",
    "start": "2705099",
    "end": "2711520"
  },
  {
    "text": "deployment of AWS managed Prometheus it plus manage grafana and a DOT on eks",
    "start": "2711520",
    "end": "2718560"
  },
  {
    "text": "it's completely available as an automated solution uh so AWS",
    "start": "2718560",
    "end": "2723819"
  },
  {
    "text": "observability accelerator is a set of terraform modules which allows you to do",
    "start": "2723819",
    "end": "2730060"
  },
  {
    "text": "everything that we did in the demo today and more so go check out the solution and feel free to use it and share",
    "start": "2730060",
    "end": "2736660"
  },
  {
    "text": "feedback if you have any for this once you deploy the solution as an outcome after you deploy it you",
    "start": "2736660",
    "end": "2744220"
  },
  {
    "text": "will have certain dashboards which will be available uh and it'll be pre-created",
    "start": "2744220",
    "end": "2749680"
  },
  {
    "text": "for you so you will have different dashboards uh which will show you different matrices",
    "start": "2749680",
    "end": "2755319"
  },
  {
    "text": "like uh let me just okay so like different eks infrastructure matrices",
    "start": "2755319",
    "end": "2761140"
  },
  {
    "text": "right so you will have you will know like how many number of parts are running and other infrastructure metrics",
    "start": "2761140",
    "end": "2766839"
  },
  {
    "text": "uh which will be streamed from your eks infrastructure so all of that will be available these",
    "start": "2766839",
    "end": "2773920"
  },
  {
    "text": "all will be pre-created dashboards once you deploy the solution the next thing that I want to highlight",
    "start": "2773920",
    "end": "2780520"
  },
  {
    "text": "is the AWS observability Workshop the observability workshop essentially is a",
    "start": "2780520",
    "end": "2786819"
  },
  {
    "text": "it's a guide for you and it's a lab which gives you step-by-step instructions if you want to check out",
    "start": "2786819",
    "end": "2793119"
  },
  {
    "text": "some of the observability service that we have so if you want to get some hands-on experience with a AWS",
    "start": "2793119",
    "end": "2800800"
  },
  {
    "text": "observability services like Amazon manage Griffon or Amazon manage Prometheus Cloud Watcher x-ray do check",
    "start": "2800800",
    "end": "2807579"
  },
  {
    "text": "out the lab it will give you step-by-step instructions and tell you how you can",
    "start": "2807579",
    "end": "2814780"
  },
  {
    "text": "use different services and it's a different configuration available in these services",
    "start": "2814780",
    "end": "2820560"
  },
  {
    "text": "so let's summarize what we learned today so we talked about",
    "start": "2820780",
    "end": "2826540"
  },
  {
    "text": "um the observability it's different pillars right and how we can use observability and build and use hotel and building a",
    "start": "2826540",
    "end": "2834339"
  },
  {
    "text": "better observability solution we also talked about uh the hotel component and its architecture we",
    "start": "2834339",
    "end": "2841000"
  },
  {
    "text": "understand now like as Siddharth also showed different receivers that we have so we have different receivers to",
    "start": "2841000",
    "end": "2846700"
  },
  {
    "text": "receive information and difference from various sources in different format right uh for example we have receiver",
    "start": "2846700",
    "end": "2853000"
  },
  {
    "text": "for Prometheus and hotel then we also see",
    "start": "2853000",
    "end": "2858220"
  },
  {
    "text": "different processors as you build the pipeline so you have different processors when you receive the Telemetry signal you can process that",
    "start": "2858220",
    "end": "2864400"
  },
  {
    "text": "even before you send that to your analysis backend so you can do batching you can do filtering and you can",
    "start": "2864400",
    "end": "2871240"
  },
  {
    "text": "optimize and you can also add a lot of contextual information before you send the data to the Target",
    "start": "2871240",
    "end": "2877119"
  },
  {
    "text": "and then we have different exporters so we have different exporters and depending upon where you want to send",
    "start": "2877119",
    "end": "2882400"
  },
  {
    "text": "the Telemetry data so we have exported like Prometheus remote right exporter which allows you to write it to prometh",
    "start": "2882400",
    "end": "2887859"
  },
  {
    "text": "yes we have Cloud watch exporter which essentially allows you to write the Telemetry signal into cloudwatch and",
    "start": "2887859",
    "end": "2893859"
  },
  {
    "text": "then we have x-ray exporter which allows you to send that Trace data to AWS x-ray",
    "start": "2893859",
    "end": "2899920"
  },
  {
    "text": "and then there are different extensions to enhance the overall capability so we we looked at the health check extension",
    "start": "2899920",
    "end": "2906940"
  },
  {
    "text": "which gives you a health check endpoint to observe and monitor your hotel",
    "start": "2906940",
    "end": "2912280"
  },
  {
    "text": "collector then asada talked about we looked at sigwe for authentication",
    "start": "2912280",
    "end": "2918520"
  },
  {
    "text": "extension which essentially allows us to configure authentication with different",
    "start": "2918520",
    "end": "2923800"
  },
  {
    "text": "AWS services that we have and uh at the end we also looked at the",
    "start": "2923800",
    "end": "2929319"
  },
  {
    "text": "demo and we Now understand how easy it is and we talked about the instrumentation right so I think there",
    "start": "2929319",
    "end": "2935680"
  },
  {
    "text": "was a few questions around the instrumentation like how simple it is will there be any code change required",
    "start": "2935680",
    "end": "2941380"
  },
  {
    "text": "yes or no so uh you we looked at like how you can use Auto instrumentation",
    "start": "2941380",
    "end": "2946720"
  },
  {
    "text": "which gives you standard set of matrices but if at all you want to enhance the capability you can go for manual",
    "start": "2946720",
    "end": "2952480"
  },
  {
    "text": "instrumentation and instrument it for your application where you will essentially get more rewards when you do",
    "start": "2952480",
    "end": "2959260"
  },
  {
    "text": "it manually you will have more control but metrics or uh Telemetry signal you want",
    "start": "2959260",
    "end": "2964900"
  },
  {
    "text": "to instrument from your application yes and there are these different links",
    "start": "2964900",
    "end": "2970420"
  },
  {
    "text": "which you see on the screen so go check out different links go check out the observability accelerator solution and",
    "start": "2970420",
    "end": "2977740"
  },
  {
    "text": "the lab that we have with that uh we can break for uh q a and",
    "start": "2977740",
    "end": "2983740"
  },
  {
    "text": "uh we also would like to capture your feedback so please feel free to scan the",
    "start": "2983740",
    "end": "2989020"
  },
  {
    "text": "QR code and share the feedback that you have that would really help us improve the session for next next time",
    "start": "2989020",
    "end": "2995500"
  },
  {
    "text": "right um thanks Arun so I believe um we we captured all the open questions",
    "start": "2995500",
    "end": "3002520"
  },
  {
    "text": "uh if there was any that wasn't uh uh please feel free to let us know or and",
    "start": "3002520",
    "end": "3008400"
  },
  {
    "text": "or add your comments uh in the chat and we can we can bring them to the presenters here uh I do have one uh that",
    "start": "3008400",
    "end": "3016260"
  },
  {
    "text": "I I believe is is open uh this was from a user which we said we'll take it at the end of the show uh the question was",
    "start": "3016260",
    "end": "3024900"
  },
  {
    "text": "around uh X-ray and E Dot and the correlation between that",
    "start": "3024900",
    "end": "3031319"
  },
  {
    "text": "so that you want to take this now",
    "start": "3031319",
    "end": "3035240"
  },
  {
    "text": "yeah so thanks uh so the question is is there any relationship between a DOT and x-ray",
    "start": "3036540",
    "end": "3043760"
  },
  {
    "text": "you're on mute sorry so um the adult helps is to create",
    "start": "3046740",
    "end": "3055500"
  },
  {
    "text": "those stresses collect those stresses process those stresses and Export those",
    "start": "3055500",
    "end": "3061020"
  },
  {
    "text": "stresses uh as uh in Arun mentioned that a DOT is not an analysis backend x-ray",
    "start": "3061020",
    "end": "3068760"
  },
  {
    "text": "is an analysis second so we can export traces to x-ray where we can analyze it",
    "start": "3068760",
    "end": "3075240"
  },
  {
    "text": "so they can collect using a dot but we cannot cannot analyze using network I hope that clarifies the difference and",
    "start": "3075240",
    "end": "3082619"
  },
  {
    "text": "relationship between history sure thanks of that so",
    "start": "3082619",
    "end": "3089760"
  },
  {
    "text": "again a note for our attendees online please add your comments uh in the in",
    "start": "3089760",
    "end": "3095280"
  },
  {
    "text": "the right hand side of your window to add any questions for the team while we",
    "start": "3095280",
    "end": "3100440"
  },
  {
    "text": "have them here if you have any questions for our speaker this is the time to get",
    "start": "3100440",
    "end": "3105540"
  },
  {
    "text": "them like the traces right uh the point with",
    "start": "3105540",
    "end": "3112020"
  },
  {
    "text": "Hotel collector uh you basically will have one collector which can process the trace data and send that to x-ray as",
    "start": "3112020",
    "end": "3118680"
  },
  {
    "text": "that mentioned and the same collector can also receive metric data from different stores and move that to a",
    "start": "3118680",
    "end": "3126000"
  },
  {
    "text": "different Target let's say Prometheus so that really helps a developer to not",
    "start": "3126000",
    "end": "3131339"
  },
  {
    "text": "basically go to different agents or collectors to process different types of data and go to some of the resources which we",
    "start": "3131339",
    "end": "3139920"
  },
  {
    "text": "shared like uh the workshop the observative workshop and AWS obserability accelerator those",
    "start": "3139920",
    "end": "3145800"
  },
  {
    "text": "are really great tools to get started with this right if someone is looking to you know get started with this uh",
    "start": "3145800",
    "end": "3152579"
  },
  {
    "text": "they'll give them real real good hands-on experience and those are free to use",
    "start": "3152579",
    "end": "3158280"
  },
  {
    "text": "absolutely uh so I'm curious uh Siddharth and Arun um so because this is",
    "start": "3158280",
    "end": "3163680"
  },
  {
    "text": "an open source of how do new features get requested especially we're talking about AWS distro for open Telemetry uh",
    "start": "3163680",
    "end": "3170940"
  },
  {
    "text": "what is the mechanism there yeah so uh our roadmap is completely available in",
    "start": "3170940",
    "end": "3176339"
  },
  {
    "text": "public right so um you can feel free go ahead raise your uh feature request uh on our GitHub page",
    "start": "3176339",
    "end": "3183240"
  },
  {
    "text": "and uh if the feature request is already there you can vote uh and you can upload",
    "start": "3183240",
    "end": "3188520"
  },
  {
    "text": "the feature request and um we'll consider that",
    "start": "3188520",
    "end": "3194579"
  },
  {
    "text": "and again just to add that the contribution will be changes will be done to the Upstream uh we do not",
    "start": "3194579",
    "end": "3200819"
  },
  {
    "text": "directly make changes to uh a dot it so we make it upstream and then we take it",
    "start": "3200819",
    "end": "3206400"
  },
  {
    "text": "from there but you can definitely uh request for a feature using the GitHub issues on our uh a DOT collector",
    "start": "3206400",
    "end": "3214800"
  },
  {
    "text": "github.com thank you guys um so that's all the time we had today",
    "start": "3214800",
    "end": "3220619"
  },
  {
    "text": "everyone today we looked at getting started with open Telemetry and ADOT where Arun and Siddharth walked us",
    "start": "3220619",
    "end": "3225960"
  },
  {
    "text": "through observability Spillers using Hotel components and we also had a demo",
    "start": "3225960",
    "end": "3231180"
  },
  {
    "text": "that uh we really hope this information was useful and uh you would continue to",
    "start": "3231180",
    "end": "3236520"
  },
  {
    "text": "utilize the features and share your feedback with us uh if there are any questions that were not answered today",
    "start": "3236520",
    "end": "3242640"
  },
  {
    "text": "please feel free to post your questions to repost dot AWS this is where one of our experts can provide you with an",
    "start": "3242640",
    "end": "3249119"
  },
  {
    "text": "answer to your question or if needed it can even become a topic of our future shows uh as applicable if you have any",
    "start": "3249119",
    "end": "3256980"
  },
  {
    "text": "feedback for us please feel free to use the link for our survey which is in the",
    "start": "3256980",
    "end": "3262260"
  },
  {
    "text": "comment section you can also send us an email to AWS supports you at amazon.com we really",
    "start": "3262260",
    "end": "3268920"
  },
  {
    "text": "want to hear from you so do tell us uh what else would you like to see on this show uh what is working what's not",
    "start": "3268920",
    "end": "3274920"
  },
  {
    "text": "working uh we are looking forward to it um finally this is our final show for",
    "start": "3274920",
    "end": "3280020"
  },
  {
    "text": "the year 2022 we here at AWS supports you want to really take this opportunity",
    "start": "3280020",
    "end": "3285540"
  },
  {
    "text": "to thank you all for joining us we hope to see you again in 2023 uh we are back",
    "start": "3285540",
    "end": "3291119"
  },
  {
    "text": "on Jan 11th uh 10 a.m IST discussing AWS Health aware service with servicenow",
    "start": "3291119",
    "end": "3297000"
  },
  {
    "text": "integration so that's our next show uh in the final show for this year again we",
    "start": "3297000",
    "end": "3302400"
  },
  {
    "text": "would like to thank you for being here with us uh and we'll see you in the next year happy cloud computing",
    "start": "3302400",
    "end": "3308960"
  },
  {
    "text": "thank you everyone and see you next time I wish you a very happy New Year to everyone",
    "start": "3308960",
    "end": "3315318"
  },
  {
    "text": "[Music]",
    "start": "3319110",
    "end": "3324589"
  }
]