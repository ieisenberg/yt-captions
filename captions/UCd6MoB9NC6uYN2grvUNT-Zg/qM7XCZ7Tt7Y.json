[
  {
    "text": "all right good afternoon guys I hope",
    "start": "1070",
    "end": "4920"
  },
  {
    "text": "you're having a good conference my name",
    "start": "4920",
    "end": "7200"
  },
  {
    "text": "is Amir um I'm the founder and CEO of",
    "start": "7200",
    "end": "9450"
  },
  {
    "text": "Spartans and thank you for joining the",
    "start": "9450",
    "end": "11219"
  },
  {
    "text": "session we're going to talk in this",
    "start": "11219",
    "end": "13740"
  },
  {
    "text": "session about how to achieve a",
    "start": "13740",
    "end": "15900"
  },
  {
    "text": "serverless experience while running with",
    "start": "15900",
    "end": "18060"
  },
  {
    "text": "kubernetes or Amazon ACS basically with",
    "start": "18060",
    "end": "21029"
  },
  {
    "text": "containers so let's start before we",
    "start": "21029",
    "end": "25019"
  },
  {
    "text": "start let's talk about how it all got",
    "start": "25019",
    "end": "27990"
  },
  {
    "text": "started so the guy you see here with the",
    "start": "27990",
    "end": "31500"
  },
  {
    "text": "green shirt that's me and my friends",
    "start": "31500",
    "end": "35309"
  },
  {
    "text": "here we're trying to graduate our BSC in",
    "start": "35309",
    "end": "38370"
  },
  {
    "text": "computer science and we had this project",
    "start": "38370",
    "end": "41070"
  },
  {
    "text": "called spotted and we basically wanted",
    "start": "41070",
    "end": "44670"
  },
  {
    "text": "to find some very clever algorithm to",
    "start": "44670",
    "end": "47850"
  },
  {
    "text": "maneuver spot instances before Amazon",
    "start": "47850",
    "end": "50879"
  },
  {
    "text": "interrupts them so we'll be able to find",
    "start": "50879",
    "end": "52920"
  },
  {
    "text": "before that happened and actually locate",
    "start": "52920",
    "end": "55590"
  },
  {
    "text": "them in a different spot instance and",
    "start": "55590",
    "end": "57469"
  },
  {
    "text": "basically we were able to it was a big",
    "start": "57469",
    "end": "60870"
  },
  {
    "text": "success it was like the project of the",
    "start": "60870",
    "end": "63480"
  },
  {
    "text": "year and the rest is history here we are",
    "start": "63480",
    "end": "66060"
  },
  {
    "text": "today the person to my left is our VP of",
    "start": "66060",
    "end": "69630"
  },
  {
    "text": "Sales the person to my right is our head",
    "start": "69630",
    "end": "71909"
  },
  {
    "text": "of product and the person next to him",
    "start": "71909",
    "end": "74540"
  },
  {
    "text": "well he works for AWS but it's ok let's",
    "start": "74540",
    "end": "80759"
  },
  {
    "text": "talk just a little bit about us who we",
    "start": "80759",
    "end": "82650"
  },
  {
    "text": "are",
    "start": "82650",
    "end": "82860"
  },
  {
    "text": "so Spartan started about three and a",
    "start": "82860",
    "end": "84750"
  },
  {
    "text": "half years ago 2015 we raised our Series",
    "start": "84750",
    "end": "88170"
  },
  {
    "text": "A from vertex ventures and Intel Capital",
    "start": "88170",
    "end": "91009"
  },
  {
    "text": "just recently we closed our serious be",
    "start": "91009",
    "end": "93540"
  },
  {
    "text": "worse coming very fast 120 people in the",
    "start": "93540",
    "end": "96090"
  },
  {
    "text": "company in four locations in the world",
    "start": "96090",
    "end": "98159"
  },
  {
    "text": "and expanding that's for inst our",
    "start": "98159",
    "end": "102840"
  },
  {
    "text": "expertise is basically managing compute",
    "start": "102840",
    "end": "107070"
  },
  {
    "text": "workloads on behalf of our customers or",
    "start": "107070",
    "end": "109799"
  },
  {
    "text": "basically today managing over hundreds",
    "start": "109799",
    "end": "112500"
  },
  {
    "text": "of thousands of ec2 instances what we do",
    "start": "112500",
    "end": "115560"
  },
  {
    "text": "is we just provide automation for DevOps",
    "start": "115560",
    "end": "118469"
  },
  {
    "text": "that help them to save time and money by",
    "start": "118469",
    "end": "122909"
  },
  {
    "text": "doing that we're able to save around 60",
    "start": "122909",
    "end": "124710"
  },
  {
    "text": "to 80 percent by running most of the",
    "start": "124710",
    "end": "126299"
  },
  {
    "text": "workloads on spot instances and growing",
    "start": "126299",
    "end": "130679"
  },
  {
    "text": "what we're going to talk about today is",
    "start": "130679",
    "end": "134329"
  },
  {
    "text": "the anatomy of kubernetes and Amazon SES",
    "start": "134329",
    "end": "138109"
  },
  {
    "text": "then we're going to talk about two level",
    "start": "138109",
    "end": "140459"
  },
  {
    "text": "of scaling when it comes to scaling",
    "start": "140459",
    "end": "142400"
  },
  {
    "text": "containers onto instances then we're",
    "start": "142400",
    "end": "146069"
  },
  {
    "text": "going to talk about the difference",
    "start": "146069",
    "end": "147060"
  },
  {
    "text": "between metric driven scaling and",
    "start": "147060",
    "end": "149129"
  },
  {
    "text": "container driven scaling and then we're",
    "start": "149129",
    "end": "152579"
  },
  {
    "text": "gonna talk how can we achieve a service",
    "start": "152579",
    "end": "154769"
  },
  {
    "text": "experience scaling and we'll talk about",
    "start": "154769",
    "end": "157620"
  },
  {
    "text": "spottings ocean which is a product that",
    "start": "157620",
    "end": "159659"
  },
  {
    "text": "we actually launched today so I'd love",
    "start": "159659",
    "end": "162450"
  },
  {
    "text": "to I'll give you a brief overview about",
    "start": "162450",
    "end": "163919"
  },
  {
    "text": "what it does with kubernetes so let's",
    "start": "163919",
    "end": "166560"
  },
  {
    "text": "start so one out of me of kubernetes or",
    "start": "166560",
    "end": "172379"
  },
  {
    "text": "container scheduling in general so what",
    "start": "172379",
    "end": "174989"
  },
  {
    "text": "we see here we have a master alright it",
    "start": "174989",
    "end": "177930"
  },
  {
    "text": "can be managed or unmanaged by the cloud",
    "start": "177930",
    "end": "180090"
  },
  {
    "text": "provider for ECS is completely managed",
    "start": "180090",
    "end": "182459"
  },
  {
    "text": "within kubernetes you probably know eks",
    "start": "182459",
    "end": "185189"
  },
  {
    "text": "or you can just manage your own like",
    "start": "185189",
    "end": "186659"
  },
  {
    "text": "through cops or just install plain",
    "start": "186659",
    "end": "188549"
  },
  {
    "text": "vanilla kubernetes and then we have the",
    "start": "188549",
    "end": "190680"
  },
  {
    "text": "notes the notes that you see here",
    "start": "190680",
    "end": "193139"
  },
  {
    "text": "usually called worker nodes there are",
    "start": "193139",
    "end": "196049"
  },
  {
    "text": "running pods or tasks for ECS and they",
    "start": "196049",
    "end": "199769"
  },
  {
    "text": "have something to call cubelet or ECS",
    "start": "199769",
    "end": "201930"
  },
  {
    "text": "agent and this part is basically",
    "start": "201930",
    "end": "204629"
  },
  {
    "text": "responsible to send data and get data",
    "start": "204629",
    "end": "208470"
  },
  {
    "text": "from the master to basically schedule",
    "start": "208470",
    "end": "210930"
  },
  {
    "text": "containers or drain containers or scale",
    "start": "210930",
    "end": "213269"
  },
  {
    "text": "containers on the worker nodes all of",
    "start": "213269",
    "end": "216209"
  },
  {
    "text": "these pods are also connected to",
    "start": "216209",
    "end": "218370"
  },
  {
    "text": "something that called service service is",
    "start": "218370",
    "end": "220739"
  },
  {
    "text": "a way to bring networking into the",
    "start": "220739",
    "end": "223139"
  },
  {
    "text": "containers so it can be a little",
    "start": "223139",
    "end": "225090"
  },
  {
    "text": "balancer it can be an ingress controller",
    "start": "225090",
    "end": "227489"
  },
  {
    "text": "but basically that's the high level",
    "start": "227489",
    "end": "230509"
  },
  {
    "text": "high-level overview of the anatomy of",
    "start": "230509",
    "end": "233159"
  },
  {
    "text": "like a scheduling of containers it's too",
    "start": "233159",
    "end": "239430"
  },
  {
    "text": "far",
    "start": "239430",
    "end": "241668"
  },
  {
    "text": "all right so let's talk about metric",
    "start": "251010",
    "end": "254319"
  },
  {
    "text": "driven scaling metric driven scaling is",
    "start": "254319",
    "end": "256389"
  },
  {
    "text": "something that we basically know very",
    "start": "256389",
    "end": "259359"
  },
  {
    "text": "well from auto scaling is probably the",
    "start": "259359",
    "end": "262990"
  },
  {
    "text": "traditional way of scaling capacity and",
    "start": "262990",
    "end": "265120"
  },
  {
    "text": "what is metric driven scaling is when a",
    "start": "265120",
    "end": "267490"
  },
  {
    "text": "given metric meets in threshold so what",
    "start": "267490",
    "end": "270460"
  },
  {
    "text": "you see here it's either CPU or memory",
    "start": "270460",
    "end": "272560"
  },
  {
    "text": "that we usually have workloads and we",
    "start": "272560",
    "end": "274840"
  },
  {
    "text": "say if we hit 80% scale up if we lower",
    "start": "274840",
    "end": "278380"
  },
  {
    "text": "than 70% scale down that's a metric",
    "start": "278380",
    "end": "280870"
  },
  {
    "text": "driven scaling the problem with metric",
    "start": "280870",
    "end": "284680"
  },
  {
    "text": "driven scaling is that when it comes to",
    "start": "284680",
    "end": "287080"
  },
  {
    "text": "containers and",
    "start": "287080",
    "end": "287910"
  },
  {
    "text": "infrastructure-as-a-service",
    "start": "287910",
    "end": "289330"
  },
  {
    "text": "it causes scaling tetris issue and let's",
    "start": "289330",
    "end": "293770"
  },
  {
    "text": "talk about what is this tetris scaling",
    "start": "293770",
    "end": "296440"
  },
  {
    "text": "issues so if you look about this diagram",
    "start": "296440",
    "end": "299710"
  },
  {
    "text": "you would see that we have two levels of",
    "start": "299710",
    "end": "302760"
  },
  {
    "text": "scaling one level is the container level",
    "start": "302760",
    "end": "305470"
  },
  {
    "text": "and the other level is the",
    "start": "305470",
    "end": "307389"
  },
  {
    "text": "infrastructure-as-a-service",
    "start": "307389",
    "end": "308620"
  },
  {
    "text": "so basically if you as a devops you want",
    "start": "308620",
    "end": "312130"
  },
  {
    "text": "to scale a service to a thousand",
    "start": "312130",
    "end": "313990"
  },
  {
    "text": "containers all right you can scale to a",
    "start": "313990",
    "end": "316810"
  },
  {
    "text": "thousand containers but you need to make",
    "start": "316810",
    "end": "318729"
  },
  {
    "text": "sure that you will have enough",
    "start": "318729",
    "end": "319960"
  },
  {
    "text": "infrastructure underneath to satisfy",
    "start": "319960",
    "end": "322510"
  },
  {
    "text": "this 1,000 containers and then it causes",
    "start": "322510",
    "end": "325270"
  },
  {
    "text": "because containers can be shipped in",
    "start": "325270",
    "end": "327010"
  },
  {
    "text": "different sizes my containers can",
    "start": "327010",
    "end": "328960"
  },
  {
    "text": "consume one gig of ram or 10 gig of ram",
    "start": "328960",
    "end": "330820"
  },
  {
    "text": "or even 64 gig of ram so it causes a",
    "start": "330820",
    "end": "334180"
  },
  {
    "text": "Tetris game between the actual",
    "start": "334180",
    "end": "335770"
  },
  {
    "text": "infrastructure as a service and the",
    "start": "335770",
    "end": "337930"
  },
  {
    "text": "container size let's show some examples",
    "start": "337930",
    "end": "341590"
  },
  {
    "text": "for that so in that example we're going",
    "start": "341590",
    "end": "344169"
  },
  {
    "text": "to show how a wrong port size can cause",
    "start": "344169",
    "end": "347889"
  },
  {
    "text": "a tetris issue let's see we have your",
    "start": "347889",
    "end": "350289"
  },
  {
    "text": "cluster three instances a large Explorer",
    "start": "350289",
    "end": "354039"
  },
  {
    "text": "and a medium on the large has two",
    "start": "354039",
    "end": "356800"
  },
  {
    "text": "containers the Explorer has three",
    "start": "356800",
    "end": "359080"
  },
  {
    "text": "containers in different sizes and the",
    "start": "359080",
    "end": "361120"
  },
  {
    "text": "medium has no containers but if we",
    "start": "361120",
    "end": "363729"
  },
  {
    "text": "actually look about how many vacant",
    "start": "363729",
    "end": "366060"
  },
  {
    "text": "containers we have in this cluster we",
    "start": "366060",
    "end": "369070"
  },
  {
    "text": "have 1 2 3 4 so that means that",
    "start": "369070",
    "end": "372729"
  },
  {
    "text": "allegedly we have a room to scale",
    "start": "372729",
    "end": "374979"
  },
  {
    "text": "additional 4 more containers right but",
    "start": "374979",
    "end": "379030"
  },
  {
    "text": "what happens if a container",
    "start": "379030",
    "end": "382610"
  },
  {
    "text": "in that size like three containers we",
    "start": "382610",
    "end": "385940"
  },
  {
    "text": "would want to schedule that so with",
    "start": "385940",
    "end": "387830"
  },
  {
    "text": "metric driven scaling we would think",
    "start": "387830",
    "end": "390020"
  },
  {
    "text": "that hey we have enough room in the",
    "start": "390020",
    "end": "391520"
  },
  {
    "text": "cluster but in fact it will not fit",
    "start": "391520",
    "end": "396729"
  },
  {
    "text": "second example is a rocky instance type",
    "start": "397120",
    "end": "400310"
  },
  {
    "text": "let's say that we have two instances",
    "start": "400310",
    "end": "403210"
  },
  {
    "text": "medium and x-large and that's the",
    "start": "403210",
    "end": "406700"
  },
  {
    "text": "current cluster situation we have two",
    "start": "406700",
    "end": "408980"
  },
  {
    "text": "instance two vacant containers and now",
    "start": "408980",
    "end": "412270"
  },
  {
    "text": "we want to scale this spot and we're",
    "start": "412270",
    "end": "416000"
  },
  {
    "text": "missing we have only have two vacant",
    "start": "416000",
    "end": "417860"
  },
  {
    "text": "containers so we're missing actually one",
    "start": "417860",
    "end": "419720"
  },
  {
    "text": "container in order to scale up so let's",
    "start": "419720",
    "end": "422210"
  },
  {
    "text": "bring a new node to the cluster and for",
    "start": "422210",
    "end": "424610"
  },
  {
    "text": "some reason we'll scale up a medium",
    "start": "424610",
    "end": "426020"
  },
  {
    "text": "server it's not gonna help us because",
    "start": "426020",
    "end": "428000"
  },
  {
    "text": "this guy needs to have a full three",
    "start": "428000",
    "end": "430400"
  },
  {
    "text": "container size in order to scale up so",
    "start": "430400",
    "end": "433040"
  },
  {
    "text": "we're in a problem here another major",
    "start": "433040",
    "end": "436280"
  },
  {
    "text": "issue is how do we scale down if you",
    "start": "436280",
    "end": "439070"
  },
  {
    "text": "look at this cluster this cluster is 50%",
    "start": "439070",
    "end": "441200"
  },
  {
    "text": "utilized right the medium server is 50%",
    "start": "441200",
    "end": "443480"
  },
  {
    "text": "utilized the to exploit server is 50%",
    "start": "443480",
    "end": "445820"
  },
  {
    "text": "utilized and the other medium is 50%",
    "start": "445820",
    "end": "447920"
  },
  {
    "text": "utilized so obviously we would want to",
    "start": "447920",
    "end": "449990"
  },
  {
    "text": "scale down and if you want to scale down",
    "start": "449990",
    "end": "452000"
  },
  {
    "text": "let's take the most expensive instance",
    "start": "452000",
    "end": "453770"
  },
  {
    "text": "right which is the two Excel server all",
    "start": "453770",
    "end": "457250"
  },
  {
    "text": "right we took it down but now what this",
    "start": "457250",
    "end": "460460"
  },
  {
    "text": "container cannot be scheduled in a",
    "start": "460460",
    "end": "462020"
  },
  {
    "text": "cluster so because all of that petrus",
    "start": "462020",
    "end": "468140"
  },
  {
    "text": "issues so there has to be another way of",
    "start": "468140",
    "end": "471350"
  },
  {
    "text": "scaling containers which is not based on",
    "start": "471350",
    "end": "473600"
  },
  {
    "text": "metrics and it should be based on",
    "start": "473600",
    "end": "476840"
  },
  {
    "text": "containers so let's talk about what is",
    "start": "476840",
    "end": "479000"
  },
  {
    "text": "containers driven scaling with",
    "start": "479000",
    "end": "482090"
  },
  {
    "text": "containers driven scaling the instance",
    "start": "482090",
    "end": "484400"
  },
  {
    "text": "size type and life cycle should be",
    "start": "484400",
    "end": "489230"
  },
  {
    "text": "determined based on the actual pod or",
    "start": "489230",
    "end": "492050"
  },
  {
    "text": "container",
    "start": "492050",
    "end": "492710"
  },
  {
    "text": "requirements if I have a small pod I'll",
    "start": "492710",
    "end": "495590"
  },
  {
    "text": "get a medium if I have a large pot I",
    "start": "495590",
    "end": "497330"
  },
  {
    "text": "have a to excel if I have two small",
    "start": "497330",
    "end": "499430"
  },
  {
    "text": "balls I have a bigger instance that's",
    "start": "499430",
    "end": "501560"
  },
  {
    "text": "the way it should work right the",
    "start": "501560",
    "end": "504170"
  },
  {
    "text": "infrastructure the service should be",
    "start": "504170",
    "end": "506030"
  },
  {
    "text": "aware of what type and size of",
    "start": "506030",
    "end": "507770"
  },
  {
    "text": "containers we want in addition when we",
    "start": "507770",
    "end": "511580"
  },
  {
    "text": "scale up and scale down we need to take",
    "start": "511580",
    "end": "513469"
  },
  {
    "text": "care of fragmentation because the",
    "start": "513470",
    "end": "514940"
  },
  {
    "text": "otherwise will be in a serious",
    "start": "514940",
    "end": "516229"
  },
  {
    "text": "troubles so let's see how the scale-up",
    "start": "516230",
    "end": "518120"
  },
  {
    "text": "should work if you want to scale up so",
    "start": "518120",
    "end": "521750"
  },
  {
    "text": "we need to introduce a new large server",
    "start": "521750",
    "end": "524630"
  },
  {
    "text": "and even replace them with other",
    "start": "524630",
    "end": "526820"
  },
  {
    "text": "instances so they will meet the",
    "start": "526820",
    "end": "528200"
  },
  {
    "text": "containers requirements and when we",
    "start": "528200",
    "end": "530600"
  },
  {
    "text": "scale down so from having the X large",
    "start": "530600",
    "end": "534020"
  },
  {
    "text": "and the medium will choose very",
    "start": "534020",
    "end": "536060"
  },
  {
    "text": "intelligently to remove the medium and",
    "start": "536060",
    "end": "538010"
  },
  {
    "text": "migrate the medium container to the",
    "start": "538010",
    "end": "539960"
  },
  {
    "text": "exploit server because we have enough",
    "start": "539960",
    "end": "541550"
  },
  {
    "text": "space",
    "start": "541550",
    "end": "542120"
  },
  {
    "text": "that's a container based scaling what",
    "start": "542120",
    "end": "547160"
  },
  {
    "text": "about constraints labels toleration",
    "start": "547160",
    "end": "549860"
  },
  {
    "text": "sometimes when we deploy ports for",
    "start": "549860",
    "end": "551930"
  },
  {
    "text": "containers we put specific labels this",
    "start": "551930",
    "end": "554690"
  },
  {
    "text": "instance should have GPU right so we",
    "start": "554690",
    "end": "562970"
  },
  {
    "text": "need an instance with the GPU okay we'll",
    "start": "562970",
    "end": "565550"
  },
  {
    "text": "get you a g2 to excel or what if this",
    "start": "565550",
    "end": "569360"
  },
  {
    "text": "instance should be or this container",
    "start": "569360",
    "end": "571400"
  },
  {
    "text": "should run on on demand instance okay",
    "start": "571400",
    "end": "573890"
  },
  {
    "text": "we'll get you an on demand instance this",
    "start": "573890",
    "end": "575870"
  },
  {
    "text": "is a container driven scaling and what",
    "start": "575870",
    "end": "578300"
  },
  {
    "text": "if this server needs to be like low",
    "start": "578300",
    "end": "581360"
  },
  {
    "text": "priority this is not like a real",
    "start": "581360",
    "end": "582920"
  },
  {
    "text": "important container and I would like to",
    "start": "582920",
    "end": "584900"
  },
  {
    "text": "schedule it from like you know T",
    "start": "584900",
    "end": "588410"
  },
  {
    "text": "instances which is first of all you can",
    "start": "588410",
    "end": "590600"
  },
  {
    "text": "do that as well with container driven",
    "start": "590600",
    "end": "592130"
  },
  {
    "text": "scaling so basically when we sum it up",
    "start": "592130",
    "end": "596660"
  },
  {
    "text": "so if the instance size type lifecycle",
    "start": "596660",
    "end": "600460"
  },
  {
    "text": "labels pains Toleration everything is",
    "start": "600460",
    "end": "604100"
  },
  {
    "text": "determined by some magic so we basically",
    "start": "604100",
    "end": "607160"
  },
  {
    "text": "didn't handle infrastructure as we scale",
    "start": "607160",
    "end": "609350"
  },
  {
    "text": "up and down so I call it server lists",
    "start": "609350",
    "end": "612080"
  },
  {
    "text": "because we're not dealing with servers",
    "start": "612080",
    "end": "613400"
  },
  {
    "text": "anymore we're actually dealing with",
    "start": "613400",
    "end": "614930"
  },
  {
    "text": "containers and somebody just brings up",
    "start": "614930",
    "end": "617690"
  },
  {
    "text": "servers underneath to satisfy our needs",
    "start": "617690",
    "end": "619750"
  },
  {
    "text": "but I don't call it server list I call",
    "start": "619750",
    "end": "622610"
  },
  {
    "text": "it server list experience and let's talk",
    "start": "622610",
    "end": "624200"
  },
  {
    "text": "about what is the server list experience",
    "start": "624200",
    "end": "625670"
  },
  {
    "text": "the service experience is first no",
    "start": "625670",
    "end": "627650"
  },
  {
    "text": "management management of underlying",
    "start": "627650",
    "end": "629060"
  },
  {
    "text": "infrastructure we don't need ssh to the",
    "start": "629060",
    "end": "631370"
  },
  {
    "text": "nodes we don't need to patch them",
    "start": "631370",
    "end": "633140"
  },
  {
    "text": "everything should be like with the",
    "start": "633140",
    "end": "634760"
  },
  {
    "text": "latest day of my latest security updates",
    "start": "634760",
    "end": "637010"
  },
  {
    "text": "we don't need to touch them it's all",
    "start": "637010",
    "end": "638450"
  },
  {
    "text": "should be managed",
    "start": "638450",
    "end": "640420"
  },
  {
    "text": "traffic shifting which you get by the",
    "start": "640420",
    "end": "643280"
  },
  {
    "text": "container orchestrations you can do",
    "start": "643280",
    "end": "644840"
  },
  {
    "text": "block me deployments you can route your",
    "start": "644840",
    "end": "646880"
  },
  {
    "text": "traffic between service a to service B",
    "start": "646880",
    "end": "650180"
  },
  {
    "text": "you don't need to touch the",
    "start": "650180",
    "end": "651440"
  },
  {
    "text": "infrastructure for that and also you",
    "start": "651440",
    "end": "654050"
  },
  {
    "text": "scale by request so if your containers",
    "start": "654050",
    "end": "655970"
  },
  {
    "text": "needs to horizontally scale that will",
    "start": "655970",
    "end": "658760"
  },
  {
    "text": "scale you'll get more infrastructure if",
    "start": "658760",
    "end": "660740"
  },
  {
    "text": "you need to scale down to zero you'll",
    "start": "660740",
    "end": "662780"
  },
  {
    "text": "also do that it's utility billing you",
    "start": "662780",
    "end": "664970"
  },
  {
    "text": "will pay only for what you use so that's",
    "start": "664970",
    "end": "667220"
  },
  {
    "text": "a surveillance experience for me the",
    "start": "667220",
    "end": "672080"
  },
  {
    "text": "other thing is fast scaling when we",
    "start": "672080",
    "end": "674090"
  },
  {
    "text": "actually implemented that what we saw is",
    "start": "674090",
    "end": "676640"
  },
  {
    "text": "that what our customers were talking",
    "start": "676640",
    "end": "678230"
  },
  {
    "text": "with us is that how do you scale",
    "start": "678230",
    "end": "679970"
  },
  {
    "text": "efficiently from two thousand containers",
    "start": "679970",
    "end": "682430"
  },
  {
    "text": "to sixteen thousand containers how do",
    "start": "682430",
    "end": "685070"
  },
  {
    "text": "you do that think about the metric",
    "start": "685070",
    "end": "687050"
  },
  {
    "text": "driven scaling if you would scale by CPU",
    "start": "687050",
    "end": "689450"
  },
  {
    "text": "it will probably take you a few hours to",
    "start": "689450",
    "end": "692210"
  },
  {
    "text": "realize that the cluster is having CPU",
    "start": "692210",
    "end": "694130"
  },
  {
    "text": "issues but if you're scaling based on",
    "start": "694130",
    "end": "696110"
  },
  {
    "text": "containers you're actually realizing oh",
    "start": "696110",
    "end": "698180"
  },
  {
    "text": "we have additional 14 thousand",
    "start": "698180",
    "end": "701090"
  },
  {
    "text": "containers to scale and we will scale",
    "start": "701090",
    "end": "703730"
  },
  {
    "text": "that in one time and this is where I'm",
    "start": "703730",
    "end": "708050"
  },
  {
    "text": "very very excited to introduce ocean",
    "start": "708050",
    "end": "710960"
  },
  {
    "text": "ocean is our newest product it actually",
    "start": "710960",
    "end": "713840"
  },
  {
    "text": "does all of what I said just now it",
    "start": "713840",
    "end": "716930"
  },
  {
    "text": "determines the instance type the instant",
    "start": "716930",
    "end": "719090"
  },
  {
    "text": "size the lifecycle the labels the",
    "start": "719090",
    "end": "721880"
  },
  {
    "text": "Toleration the taints it manages the",
    "start": "721880",
    "end": "724610"
  },
  {
    "text": "actual traffic shifting it manages the",
    "start": "724610",
    "end": "727280"
  },
  {
    "text": "patch of the underlying instances it",
    "start": "727280",
    "end": "729200"
  },
  {
    "text": "will always bring you the latest AMI it",
    "start": "729200",
    "end": "731360"
  },
  {
    "text": "basically frees you from doing anything",
    "start": "731360",
    "end": "734690"
  },
  {
    "text": "that's related to infrastructure",
    "start": "734690",
    "end": "736760"
  },
  {
    "text": "management when you scale on kubernetes",
    "start": "736760",
    "end": "739070"
  },
  {
    "text": "or Amazon SES we have integration",
    "start": "739070",
    "end": "741740"
  },
  {
    "text": "already today for Amazon eks so you can",
    "start": "741740",
    "end": "743810"
  },
  {
    "text": "basically connect your Amazon eks I'll",
    "start": "743810",
    "end": "745370"
  },
  {
    "text": "show it how we do it just vanilla",
    "start": "745370",
    "end": "748220"
  },
  {
    "text": "kubernetes or Kay ops if you guys are",
    "start": "748220",
    "end": "751100"
  },
  {
    "text": "using cops and Amazon SES is coming by",
    "start": "751100",
    "end": "754610"
  },
  {
    "text": "the end of the year how does it work",
    "start": "754610",
    "end": "760899"
  },
  {
    "text": "so what you seeing here in this diagram",
    "start": "761920",
    "end": "766089"
  },
  {
    "text": "is basically ocean is a layer that works",
    "start": "766089",
    "end": "771610"
  },
  {
    "text": "underneath kubernetes and on top of your",
    "start": "771610",
    "end": "774740"
  },
  {
    "text": "infrastructure as a service provider it",
    "start": "774740",
    "end": "778100"
  },
  {
    "text": "identifies which servers it should bring",
    "start": "778100",
    "end": "779930"
  },
  {
    "text": "to your cluster based on your actual",
    "start": "779930",
    "end": "782389"
  },
  {
    "text": "container sizes it can scale",
    "start": "782389",
    "end": "784189"
  },
  {
    "text": "horizontally or vertically based on your",
    "start": "784189",
    "end": "787819"
  },
  {
    "text": "actual pods consumptions it's a layer",
    "start": "787819",
    "end": "790879"
  },
  {
    "text": "that actually there is a product of AWS",
    "start": "790879",
    "end": "794480"
  },
  {
    "text": "that does something like that which",
    "start": "794480",
    "end": "795920"
  },
  {
    "text": "called Phi gate so we'll talk about like",
    "start": "795920",
    "end": "798139"
  },
  {
    "text": "this Phi get experience but basically as",
    "start": "798139",
    "end": "800480"
  },
  {
    "text": "you can see here it's a layer that",
    "start": "800480",
    "end": "802610"
  },
  {
    "text": "obstructs the compute for you and",
    "start": "802610",
    "end": "804350"
  },
  {
    "text": "chooses very intelligently which",
    "start": "804350",
    "end": "806779"
  },
  {
    "text": "instance type size life cycle and",
    "start": "806779",
    "end": "809350"
  },
  {
    "text": "constraints to use for the cluster main",
    "start": "809350",
    "end": "815509"
  },
  {
    "text": "features is no VM to manage no need to",
    "start": "815509",
    "end": "818329"
  },
  {
    "text": "choose instance types it's 80% less of",
    "start": "818329",
    "end": "820730"
  },
  {
    "text": "infrastructure very important to mention",
    "start": "820730",
    "end": "823009"
  },
  {
    "text": "that everything is running on spot",
    "start": "823009",
    "end": "825920"
  },
  {
    "text": "instances using our prediction algorithm",
    "start": "825920",
    "end": "828680"
  },
  {
    "text": "and also there is a very robust UI that",
    "start": "828680",
    "end": "831350"
  },
  {
    "text": "I'm gonna show a few seconds of to",
    "start": "831350",
    "end": "833540"
  },
  {
    "text": "manage kubernetes we have their",
    "start": "833540",
    "end": "836209"
  },
  {
    "text": "world-class auto scaling and this is",
    "start": "836209",
    "end": "838040"
  },
  {
    "text": "patent-pending it's something that we",
    "start": "838040",
    "end": "839899"
  },
  {
    "text": "worked very hard in the past year to",
    "start": "839899",
    "end": "841839"
  },
  {
    "text": "release and you can also achieve",
    "start": "841839",
    "end": "845199"
  },
  {
    "text": "horizontal and vertical scaling ocean",
    "start": "845199",
    "end": "849649"
  },
  {
    "text": "also has on-premise support very",
    "start": "849649",
    "end": "852350"
  },
  {
    "text": "important to mention if you have",
    "start": "852350",
    "end": "853699"
  },
  {
    "text": "on-premise kubernetes cluster you can",
    "start": "853699",
    "end": "855920"
  },
  {
    "text": "take ocean and install it on Prem what",
    "start": "855920",
    "end": "858560"
  },
  {
    "text": "it will do it will basically discover",
    "start": "858560",
    "end": "860480"
  },
  {
    "text": "your cluster on Prem it will send all of",
    "start": "860480",
    "end": "863059"
  },
  {
    "text": "the cluster topology to our SAS platform",
    "start": "863059",
    "end": "865579"
  },
  {
    "text": "you'll be able to manage your own print",
    "start": "865579",
    "end": "867559"
  },
  {
    "text": "clusters and AWS clusters from a single",
    "start": "867559",
    "end": "869899"
  },
  {
    "text": "pane of glass which is something that",
    "start": "869899",
    "end": "871910"
  },
  {
    "text": "customers asked us a lot how the",
    "start": "871910",
    "end": "876079"
  },
  {
    "text": "architecture of ocean works so you have",
    "start": "876079",
    "end": "879559"
  },
  {
    "text": "your kubernetes master you can choose",
    "start": "879559",
    "end": "881629"
  },
  {
    "text": "whatever you want it can be Amazon eks",
    "start": "881629",
    "end": "884449"
  },
  {
    "text": "your own master and so on and then on",
    "start": "884449",
    "end": "887420"
  },
  {
    "text": "your work your nodes one per cluster",
    "start": "887420",
    "end": "889279"
  },
  {
    "text": "will have to have a controller pod we",
    "start": "889279",
    "end": "892069"
  },
  {
    "text": "call it spot inst control",
    "start": "892069",
    "end": "894170"
  },
  {
    "text": "these controllers identify the cluster",
    "start": "894170",
    "end": "896750"
  },
  {
    "text": "topology and sends all the information",
    "start": "896750",
    "end": "899060"
  },
  {
    "text": "to our SAS UI how I'm going about which",
    "start": "899060",
    "end": "901880"
  },
  {
    "text": "I'm gonna show in about a minute and",
    "start": "901880",
    "end": "904370"
  },
  {
    "text": "basically you can discovers all the",
    "start": "904370",
    "end": "905930"
  },
  {
    "text": "clusters it will take care of the auto",
    "start": "905930",
    "end": "908209"
  },
  {
    "text": "scaling and all the other things that",
    "start": "908209",
    "end": "910130"
  },
  {
    "text": "I've mentioned just by installing this",
    "start": "910130",
    "end": "911899"
  },
  {
    "text": "tiny pod so this is the UI for ocean we",
    "start": "911899",
    "end": "921139"
  },
  {
    "text": "start with a bottom line you see how",
    "start": "921139",
    "end": "923420"
  },
  {
    "text": "many service you have what was the",
    "start": "923420",
    "end": "925399"
  },
  {
    "text": "potential on-demand cost of this cluster",
    "start": "925399",
    "end": "928610"
  },
  {
    "text": "and what was the actual cost so you see",
    "start": "928610",
    "end": "930740"
  },
  {
    "text": "instead of paying about $11,000 you",
    "start": "930740",
    "end": "933259"
  },
  {
    "text": "would pay about 3,000 that's about 73%",
    "start": "933259",
    "end": "936350"
  },
  {
    "text": "of savings and you can see once that the",
    "start": "936350",
    "end": "939889"
  },
  {
    "text": "cluster is available you can see in",
    "start": "939889",
    "end": "941959"
  },
  {
    "text": "which region you're running it when you",
    "start": "941959",
    "end": "943220"
  },
  {
    "text": "created that what is the kubernetes",
    "start": "943220",
    "end": "944630"
  },
  {
    "text": "version what is the CPU in total and",
    "start": "944630",
    "end": "947810"
  },
  {
    "text": "memory allocations of the clusters if we",
    "start": "947810",
    "end": "953690"
  },
  {
    "text": "scroll down so this is a very very",
    "start": "953690",
    "end": "956029"
  },
  {
    "text": "powerful view what you can see here is",
    "start": "956029",
    "end": "958660"
  },
  {
    "text": "we basically wanted to show to give a",
    "start": "958660",
    "end": "963019"
  },
  {
    "text": "visibility of like how much resources my",
    "start": "963019",
    "end": "966649"
  },
  {
    "text": "pods are consuming versus how much nodes",
    "start": "966649",
    "end": "970370"
  },
  {
    "text": "I'm actually running in the cloud so",
    "start": "970370",
    "end": "973069"
  },
  {
    "text": "here you see nodes vs. CPU and memory",
    "start": "973069",
    "end": "976010"
  },
  {
    "text": "allocations and here you can see pods",
    "start": "976010",
    "end": "980000"
  },
  {
    "text": "versus CPU and memory allocation that's",
    "start": "980000",
    "end": "982760"
  },
  {
    "text": "very powerful so you know as you scale",
    "start": "982760",
    "end": "984380"
  },
  {
    "text": "up and down how much instances you",
    "start": "984380",
    "end": "986209"
  },
  {
    "text": "actually bought from the cloud how much",
    "start": "986209",
    "end": "987889"
  },
  {
    "text": "it costs you and it really helps to",
    "start": "987889",
    "end": "991610"
  },
  {
    "text": "identify bottlenecks in networking",
    "start": "991610",
    "end": "993560"
  },
  {
    "text": "bottlenecks in performance here on the",
    "start": "993560",
    "end": "998779"
  },
  {
    "text": "lower section you see the distribution",
    "start": "998779",
    "end": "1000850"
  },
  {
    "text": "because everything is running on spot",
    "start": "1000850",
    "end": "1002380"
  },
  {
    "text": "instances and spot instances as you know",
    "start": "1002380",
    "end": "1004569"
  },
  {
    "text": "they might disappear",
    "start": "1004569",
    "end": "1006100"
  },
  {
    "text": "hey WS my terminate them so what we do",
    "start": "1006100",
    "end": "1008439"
  },
  {
    "text": "very cautiously we distribute them",
    "start": "1008439",
    "end": "1011500"
  },
  {
    "text": "across many instance type sizes and",
    "start": "1011500",
    "end": "1013720"
  },
  {
    "text": "availability zone so if we anticipate an",
    "start": "1013720",
    "end": "1016240"
  },
  {
    "text": "interruption in a specific pool will",
    "start": "1016240",
    "end": "1018130"
  },
  {
    "text": "migrate you to another pool as you can",
    "start": "1018130",
    "end": "1020439"
  },
  {
    "text": "see here we're declining on this pool",
    "start": "1020439",
    "end": "1022360"
  },
  {
    "text": "and increasing from this pool and also",
    "start": "1022360",
    "end": "1024909"
  },
  {
    "text": "you can always monitor your pod status",
    "start": "1024909",
    "end": "1027310"
  },
  {
    "text": "which is I think the most important",
    "start": "1027310",
    "end": "1028959"
  },
  {
    "text": "thing to do in a in a container",
    "start": "1028960",
    "end": "1030280"
  },
  {
    "text": "scheduling orchestration you can see how",
    "start": "1030280",
    "end": "1032350"
  },
  {
    "text": "many poles are running how many pending",
    "start": "1032350",
    "end": "1034360"
  },
  {
    "text": "pods and how many unschedule parts you",
    "start": "1034360",
    "end": "1036370"
  },
  {
    "text": "have unschedule parts basically the",
    "start": "1036370",
    "end": "1038380"
  },
  {
    "text": "situation that you don't want to have in",
    "start": "1038380",
    "end": "1039790"
  },
  {
    "text": "your cluster and that's what ocean",
    "start": "1039790",
    "end": "1041350"
  },
  {
    "text": "always does querying these unschedule",
    "start": "1041350",
    "end": "1043810"
  },
  {
    "text": "pods and launching the capacity that's",
    "start": "1043810",
    "end": "1046089"
  },
  {
    "text": "needed for for the cluster this is ocean",
    "start": "1046090",
    "end": "1052480"
  },
  {
    "text": "on Prem",
    "start": "1052480",
    "end": "1053170"
  },
  {
    "text": "once you install ocean on Prem you can",
    "start": "1053170",
    "end": "1055600"
  },
  {
    "text": "customize the CPU and memory unit cost",
    "start": "1055600",
    "end": "1059710"
  },
  {
    "text": "of your own premise and then it will",
    "start": "1059710",
    "end": "1062560"
  },
  {
    "text": "simulate based on your actual compute in",
    "start": "1062560",
    "end": "1065200"
  },
  {
    "text": "your own Prem how much it gonna cost you",
    "start": "1065200",
    "end": "1067840"
  },
  {
    "text": "nie WS so if you running on Prem",
    "start": "1067840",
    "end": "1071260"
  },
  {
    "text": "clusters and you're thinking about like",
    "start": "1071260",
    "end": "1073600"
  },
  {
    "text": "maybe we should shuffle or offload or",
    "start": "1073600",
    "end": "1077470"
  },
  {
    "text": "workloads from the clouds here the on",
    "start": "1077470",
    "end": "1079090"
  },
  {
    "text": "Prem or from the operon to the cloud",
    "start": "1079090",
    "end": "1080530"
  },
  {
    "text": "here you can have a very very powerful",
    "start": "1080530",
    "end": "1082690"
  },
  {
    "text": "view of both on Prem and and the cloud",
    "start": "1082690",
    "end": "1087010"
  },
  {
    "text": "what I can also see here that's a show",
    "start": "1087010",
    "end": "1089200"
  },
  {
    "text": "back that's also a very cool feature if",
    "start": "1089200",
    "end": "1091180"
  },
  {
    "text": "you have multiple deployments multiple",
    "start": "1091180",
    "end": "1093400"
  },
  {
    "text": "pods running in the cluster you can",
    "start": "1093400",
    "end": "1096070"
  },
  {
    "text": "break down the cost peri deployment",
    "start": "1096070",
    "end": "1097960"
  },
  {
    "text": "which is very powerful the last thing is",
    "start": "1097960",
    "end": "1102040"
  },
  {
    "text": "we always talk about it in the company",
    "start": "1102040",
    "end": "1103750"
  },
  {
    "text": "if there is no customer attraction it's",
    "start": "1103750",
    "end": "1106870"
  },
  {
    "text": "not cool so here is like a customer that",
    "start": "1106870",
    "end": "1111010"
  },
  {
    "text": "just tried that with DCs and he said",
    "start": "1111010",
    "end": "1113620"
  },
  {
    "text": "just like our auto scaling realize that",
    "start": "1113620",
    "end": "1117640"
  },
  {
    "text": "it's cheaper or more efficient to run",
    "start": "1117640",
    "end": "1119380"
  },
  {
    "text": "three c5s large than to see Forex large",
    "start": "1119380",
    "end": "1123160"
  },
  {
    "text": "and we reshuffle the clusters so not",
    "start": "1123160",
    "end": "1125590"
  },
  {
    "text": "only that it's running on excess compute",
    "start": "1125590",
    "end": "1127420"
  },
  {
    "text": "capacity but it's also been packing the",
    "start": "1127420",
    "end": "1129790"
  },
  {
    "text": "application way more intelligently so we",
    "start": "1129790",
    "end": "1133540"
  },
  {
    "text": "can really get the most out of your",
    "start": "1133540",
    "end": "1136000"
  },
  {
    "text": "dollar investments in the cloud we're",
    "start": "1136000",
    "end": "1138820"
  },
  {
    "text": "very excited about that",
    "start": "1138820",
    "end": "1140230"
  },
  {
    "text": "and I think that's kind of like",
    "start": "1140230",
    "end": "1142510"
  },
  {
    "text": "summarizing it",
    "start": "1142510",
    "end": "1144280"
  },
  {
    "text": "thank you very much we'd love to answer",
    "start": "1144280",
    "end": "1145870"
  },
  {
    "text": "any questions we have a couple of",
    "start": "1145870",
    "end": "1147790"
  },
  {
    "text": "minutes and if anyone would like to just",
    "start": "1147790",
    "end": "1149740"
  },
  {
    "text": "raise their hand I can bring you the",
    "start": "1149740",
    "end": "1150730"
  },
  {
    "text": "microphone that waiver",
    "start": "1150730",
    "end": "1151860"
  },
  {
    "text": "else can hear your questions thank you",
    "start": "1151860",
    "end": "1155910"
  },
  {
    "text": "very much is your infrastructure your",
    "start": "1155910",
    "end": "1159420"
  },
  {
    "text": "first church has an API correct that's",
    "start": "1159420",
    "end": "1161309"
  },
  {
    "text": "correct we have an API will it work with",
    "start": "1161309",
    "end": "1162720"
  },
  {
    "text": "Jenkins we're working with Jenkins",
    "start": "1162720",
    "end": "1164370"
  },
  {
    "text": "that's correct",
    "start": "1164370",
    "end": "1167030"
  },
  {
    "text": "anybody else going once going twice",
    "start": "1167840",
    "end": "1172220"
  },
  {
    "text": "thank you very much guys thank you",
    "start": "1172220",
    "end": "1176090"
  },
  {
    "text": "[Applause]",
    "start": "1176090",
    "end": "1178859"
  }
]