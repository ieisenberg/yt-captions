[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello everyone and welcome to the AWS",
    "start": "179",
    "end": "2520"
  },
  {
    "text": "databases video series my name is",
    "start": "2520",
    "end": "4740"
  },
  {
    "text": "Priyanka sanghvi and I am a database",
    "start": "4740",
    "end": "6960"
  },
  {
    "text": "specialist Solutions architect here at",
    "start": "6960",
    "end": "8820"
  },
  {
    "text": "AWS from the Seattle Washington office",
    "start": "8820",
    "end": "11120"
  },
  {
    "text": "today I'm going to show you of how to",
    "start": "11120",
    "end": "13980"
  },
  {
    "text": "analyze posterous log data by using",
    "start": "13980",
    "end": "16680"
  },
  {
    "text": "cloudwatch log insights",
    "start": "16680",
    "end": "18539"
  },
  {
    "start": "18000",
    "end": "30000"
  },
  {
    "text": "cloudwatch login sites enables you to",
    "start": "18539",
    "end": "20939"
  },
  {
    "text": "interactively search and analyze your",
    "start": "20939",
    "end": "23220"
  },
  {
    "text": "log data in Amazon cloudwatch Logs with",
    "start": "23220",
    "end": "25859"
  },
  {
    "text": "the potential to identify the causes and",
    "start": "25859",
    "end": "28080"
  },
  {
    "text": "validate the deployed fixes",
    "start": "28080",
    "end": "30240"
  },
  {
    "start": "30000",
    "end": "58000"
  },
  {
    "text": "today we will cover three things firstly",
    "start": "30240",
    "end": "33180"
  },
  {
    "text": "I will start with a quick introduction",
    "start": "33180",
    "end": "34680"
  },
  {
    "text": "to cloudwatch log followed by the",
    "start": "34680",
    "end": "37140"
  },
  {
    "text": "cloudwatch login sites as well as",
    "start": "37140",
    "end": "39120"
  },
  {
    "text": "explain some of the features that it",
    "start": "39120",
    "end": "40680"
  },
  {
    "text": "provides",
    "start": "40680",
    "end": "42000"
  },
  {
    "text": "thereafter we will shift gears and go to",
    "start": "42000",
    "end": "44280"
  },
  {
    "text": "the AWS console for a short",
    "start": "44280",
    "end": "45960"
  },
  {
    "text": "demonstration on how to set up and",
    "start": "45960",
    "end": "47820"
  },
  {
    "text": "configure Cloud wash log insights for",
    "start": "47820",
    "end": "50280"
  },
  {
    "text": "the analysis of RDS postgres logs and",
    "start": "50280",
    "end": "53340"
  },
  {
    "text": "finally I will wrap it up with the real",
    "start": "53340",
    "end": "55800"
  },
  {
    "text": "life use case scenarios of the same",
    "start": "55800",
    "end": "59219"
  },
  {
    "start": "58000",
    "end": "107000"
  },
  {
    "text": "all right so let's Dive Right In Amazon",
    "start": "59219",
    "end": "61860"
  },
  {
    "text": "cloudwatch provides a set of",
    "start": "61860",
    "end": "63660"
  },
  {
    "text": "observability tools one of which is",
    "start": "63660",
    "end": "66420"
  },
  {
    "text": "cloudwatch logs which offers extensive",
    "start": "66420",
    "end": "68939"
  },
  {
    "text": "capabilities for ingesting managing and",
    "start": "68939",
    "end": "71400"
  },
  {
    "text": "analyzing the log data",
    "start": "71400",
    "end": "73500"
  },
  {
    "text": "you can centralize the logs from any",
    "start": "73500",
    "end": "76380"
  },
  {
    "text": "system application and AWS service which",
    "start": "76380",
    "end": "79439"
  },
  {
    "text": "you use by using cloudwatch logs into a",
    "start": "79439",
    "end": "81900"
  },
  {
    "text": "single highly scalable service",
    "start": "81900",
    "end": "84060"
  },
  {
    "text": "with cloudwatch logs you can view all",
    "start": "84060",
    "end": "86580"
  },
  {
    "text": "your logs as a single unified flow of",
    "start": "86580",
    "end": "88619"
  },
  {
    "text": "events that are ordered by time",
    "start": "88619",
    "end": "90840"
  },
  {
    "text": "regardless of where they are coming from",
    "start": "90840",
    "end": "92820"
  },
  {
    "text": "you can also query and sort your logs",
    "start": "92820",
    "end": "95640"
  },
  {
    "text": "based on other criteria group them",
    "start": "95640",
    "end": "98100"
  },
  {
    "text": "according to particular Fields build",
    "start": "98100",
    "end": "100200"
  },
  {
    "text": "custom computations using a flexible",
    "start": "100200",
    "end": "102479"
  },
  {
    "text": "query language as well as display the",
    "start": "102479",
    "end": "104880"
  },
  {
    "text": "log data in dashboards",
    "start": "104880",
    "end": "107220"
  },
  {
    "start": "107000",
    "end": "148000"
  },
  {
    "text": "one of the key capabilities provided by",
    "start": "107220",
    "end": "109619"
  },
  {
    "text": "Amazon cloudwatch logs is analyzing the",
    "start": "109619",
    "end": "112140"
  },
  {
    "text": "log data using cloudwatch log insights",
    "start": "112140",
    "end": "115020"
  },
  {
    "text": "you can use cloudwatch log insights to",
    "start": "115020",
    "end": "117060"
  },
  {
    "text": "interactively search and analyze your",
    "start": "117060",
    "end": "119159"
  },
  {
    "text": "log data you can perform queries to help",
    "start": "119159",
    "end": "122220"
  },
  {
    "text": "you more effectively and efficiently",
    "start": "122220",
    "end": "124860"
  },
  {
    "text": "respond to the operational issues",
    "start": "124860",
    "end": "127619"
  },
  {
    "text": "a few straightforward but effective",
    "start": "127619",
    "end": "129420"
  },
  {
    "text": "commands are included in the",
    "start": "129420",
    "end": "131280"
  },
  {
    "text": "purpose-built query language of",
    "start": "131280",
    "end": "132780"
  },
  {
    "text": "cloudwatch login sites",
    "start": "132780",
    "end": "135120"
  },
  {
    "text": "to assist you in getting started we",
    "start": "135120",
    "end": "137520"
  },
  {
    "text": "offer sample queries command",
    "start": "137520",
    "end": "139319"
  },
  {
    "text": "explanations query Auto completion and",
    "start": "139319",
    "end": "141900"
  },
  {
    "text": "log field discovery there are sample",
    "start": "141900",
    "end": "144480"
  },
  {
    "text": "queries provided by several AWS service",
    "start": "144480",
    "end": "146879"
  },
  {
    "text": "log formats",
    "start": "146879",
    "end": "149099"
  },
  {
    "start": "148000",
    "end": "157000"
  },
  {
    "text": "with that explained let's shift gears",
    "start": "149099",
    "end": "151800"
  },
  {
    "text": "and go to the AWS Management console to",
    "start": "151800",
    "end": "154500"
  },
  {
    "text": "look at a small demonstration of the",
    "start": "154500",
    "end": "156540"
  },
  {
    "text": "same",
    "start": "156540",
    "end": "157620"
  },
  {
    "start": "157000",
    "end": "217000"
  },
  {
    "text": "this is AWS Management console it is a",
    "start": "157620",
    "end": "160379"
  },
  {
    "text": "graphical user interface that allows",
    "start": "160379",
    "end": "162000"
  },
  {
    "text": "users to access and manage any of the",
    "start": "162000",
    "end": "164819"
  },
  {
    "text": "resources or service which is running on",
    "start": "164819",
    "end": "166800"
  },
  {
    "text": "the AWS infrastructure here I shall show",
    "start": "166800",
    "end": "169500"
  },
  {
    "text": "you of how to use cloudwatch login sites",
    "start": "169500",
    "end": "172080"
  },
  {
    "text": "to get started let's navigate to",
    "start": "172080",
    "end": "174060"
  },
  {
    "text": "cloudwatch",
    "start": "174060",
    "end": "175140"
  },
  {
    "text": "before we get started there is something",
    "start": "175140",
    "end": "177420"
  },
  {
    "text": "that I would like to highlight here is",
    "start": "177420",
    "end": "179280"
  },
  {
    "text": "that many AWS Services sends logs to",
    "start": "179280",
    "end": "181379"
  },
  {
    "text": "cloudwatch for this particular",
    "start": "181379",
    "end": "183060"
  },
  {
    "text": "demonstration we shall just focus on RDS",
    "start": "183060",
    "end": "185340"
  },
  {
    "text": "postgres logs",
    "start": "185340",
    "end": "187440"
  },
  {
    "text": "in cloudwatch under the log section we",
    "start": "187440",
    "end": "190379"
  },
  {
    "text": "have log groups and login sites a log",
    "start": "190379",
    "end": "193260"
  },
  {
    "text": "group is a group of log stream that",
    "start": "193260",
    "end": "195360"
  },
  {
    "text": "shares the same retention monitoring and",
    "start": "195360",
    "end": "197340"
  },
  {
    "text": "access control settings",
    "start": "197340",
    "end": "199140"
  },
  {
    "text": "a log stream is a sequence of log events",
    "start": "199140",
    "end": "201599"
  },
  {
    "text": "that shares the same source",
    "start": "201599",
    "end": "204420"
  },
  {
    "text": "cloudwatch login sites allows you to",
    "start": "204420",
    "end": "206580"
  },
  {
    "text": "quickly search and analyze your log",
    "start": "206580",
    "end": "208379"
  },
  {
    "text": "insights using simple but powerful",
    "start": "208379",
    "end": "210420"
  },
  {
    "text": "queries",
    "start": "210420",
    "end": "211680"
  },
  {
    "text": "next let's go to the surface of",
    "start": "211680",
    "end": "213840"
  },
  {
    "text": "cloudwatch login sites to see how it",
    "start": "213840",
    "end": "216300"
  },
  {
    "text": "functions",
    "start": "216300",
    "end": "217620"
  },
  {
    "text": "all right so this is how the cloud watch",
    "start": "217620",
    "end": "219780"
  },
  {
    "text": "log insights dashboard would look",
    "start": "219780",
    "end": "221879"
  },
  {
    "text": "to get started go ahead and select the",
    "start": "221879",
    "end": "223980"
  },
  {
    "text": "log group that you will work with in",
    "start": "223980",
    "end": "226080"
  },
  {
    "text": "this case it is going to be rdspg logs",
    "start": "226080",
    "end": "228360"
  },
  {
    "text": "that we shall be looking at and so you",
    "start": "228360",
    "end": "230580"
  },
  {
    "text": "can select that from the drop down here",
    "start": "230580",
    "end": "232980"
  },
  {
    "text": "so here I will select rdspg Labs which",
    "start": "232980",
    "end": "236220"
  },
  {
    "text": "is an instance that I have oddly",
    "start": "236220",
    "end": "237599"
  },
  {
    "text": "pre-configured in advance",
    "start": "237599",
    "end": "240480"
  },
  {
    "text": "apart from that this place right here is",
    "start": "240480",
    "end": "243239"
  },
  {
    "text": "a place where you can insert your query",
    "start": "243239",
    "end": "245159"
  },
  {
    "text": "right so we shall run different queries",
    "start": "245159",
    "end": "247860"
  },
  {
    "text": "that will illustrate the power and",
    "start": "247860",
    "end": "249420"
  },
  {
    "text": "simplicity of this tool as we go forward",
    "start": "249420",
    "end": "252299"
  },
  {
    "text": "for now I will just go ahead and you",
    "start": "252299",
    "end": "255120"
  },
  {
    "text": "know use this default query and click on",
    "start": "255120",
    "end": "257639"
  },
  {
    "text": "run",
    "start": "257639",
    "end": "259880"
  },
  {
    "text": "once I do you can see a simple",
    "start": "261600",
    "end": "263880"
  },
  {
    "text": "visualization of the rdsdb instance data",
    "start": "263880",
    "end": "266520"
  },
  {
    "text": "from the last hour along with the",
    "start": "266520",
    "end": "268800"
  },
  {
    "text": "timestamp and message of the last 20",
    "start": "268800",
    "end": "270660"
  },
  {
    "text": "messages",
    "start": "270660",
    "end": "272160"
  },
  {
    "text": "that you have locked so the limit here",
    "start": "272160",
    "end": "274620"
  },
  {
    "text": "was 20 and that's why you can just see",
    "start": "274620",
    "end": "276479"
  },
  {
    "text": "the 20 messages right here",
    "start": "276479",
    "end": "278400"
  },
  {
    "text": "apart from that you can go ahead and",
    "start": "278400",
    "end": "280680"
  },
  {
    "text": "change the time for displaying the logs",
    "start": "280680",
    "end": "282660"
  },
  {
    "text": "by clicking here on the absolute and",
    "start": "282660",
    "end": "285600"
  },
  {
    "text": "relative time if you want so there is",
    "start": "285600",
    "end": "288120"
  },
  {
    "text": "absolute and relative right here right",
    "start": "288120",
    "end": "290100"
  },
  {
    "text": "so you have like the options to choose",
    "start": "290100",
    "end": "292020"
  },
  {
    "text": "from and click on apply right now I'm",
    "start": "292020",
    "end": "294360"
  },
  {
    "text": "not not going to do that",
    "start": "294360",
    "end": "296400"
  },
  {
    "text": "on the right side we have three major",
    "start": "296400",
    "end": "298620"
  },
  {
    "text": "tabs Fields query and query help",
    "start": "298620",
    "end": "303300"
  },
  {
    "text": "assume that you have the ability to get",
    "start": "303300",
    "end": "306600"
  },
  {
    "text": "data based on specific log Fields as we",
    "start": "306600",
    "end": "309419"
  },
  {
    "text": "did in the sample query four system",
    "start": "309419",
    "end": "311759"
  },
  {
    "text": "fields are automatically generated by",
    "start": "311759",
    "end": "314100"
  },
  {
    "text": "cloudwatch login sites for each log",
    "start": "314100",
    "end": "316020"
  },
  {
    "text": "which is uploaded to Amazon cloudwatch",
    "start": "316020",
    "end": "318060"
  },
  {
    "text": "logs they are ingestion time log stream",
    "start": "318060",
    "end": "321419"
  },
  {
    "text": "message and timestamp",
    "start": "321419",
    "end": "324300"
  },
  {
    "text": "going forward you can query your log",
    "start": "324300",
    "end": "326520"
  },
  {
    "text": "groups in cloudwatch login sites by",
    "start": "326520",
    "end": "328440"
  },
  {
    "text": "using a query language",
    "start": "328440",
    "end": "330000"
  },
  {
    "text": "the query syntax allows a variety of",
    "start": "330000",
    "end": "332100"
  },
  {
    "text": "operations and functions including",
    "start": "332100",
    "end": "334199"
  },
  {
    "text": "regular Expressions arithmetic and",
    "start": "334199",
    "end": "336180"
  },
  {
    "text": "comparison operations as well as generic",
    "start": "336180",
    "end": "338460"
  },
  {
    "text": "functions amongst others",
    "start": "338460",
    "end": "340440"
  },
  {
    "text": "we also have a set of sample queries",
    "start": "340440",
    "end": "342840"
  },
  {
    "text": "that one can leverage for various",
    "start": "342840",
    "end": "344400"
  },
  {
    "text": "categories of logging moreover query",
    "start": "344400",
    "end": "347639"
  },
  {
    "text": "help essentially helps you to learn more",
    "start": "347639",
    "end": "349380"
  },
  {
    "text": "regarding the syntax used to write the",
    "start": "349380",
    "end": "351300"
  },
  {
    "text": "queries for example you can retrieve the",
    "start": "351300",
    "end": "353880"
  },
  {
    "text": "data based on specific log fields as we",
    "start": "353880",
    "end": "356699"
  },
  {
    "text": "did in the sample query that we ran",
    "start": "356699",
    "end": "358979"
  },
  {
    "text": "you can also filter the fields based on",
    "start": "358979",
    "end": "361139"
  },
  {
    "text": "certain comparative or Boolean",
    "start": "361139",
    "end": "362699"
  },
  {
    "text": "conditions as well as regular",
    "start": "362699",
    "end": "364020"
  },
  {
    "text": "expressions",
    "start": "364020",
    "end": "365460"
  },
  {
    "text": "you can calculate the aggregate",
    "start": "365460",
    "end": "367500"
  },
  {
    "text": "statistics such as sums average minimum",
    "start": "367500",
    "end": "370139"
  },
  {
    "text": "maximum you can also sort your results",
    "start": "370139",
    "end": "372660"
  },
  {
    "text": "of the query in the ascending or the",
    "start": "372660",
    "end": "374699"
  },
  {
    "text": "descending order as per your use case",
    "start": "374699",
    "end": "376699"
  },
  {
    "text": "moreover you can also limit the log",
    "start": "376699",
    "end": "379199"
  },
  {
    "text": "events like how we did in the sample",
    "start": "379199",
    "end": "380940"
  },
  {
    "text": "query",
    "start": "380940",
    "end": "381840"
  },
  {
    "text": "and lastly you can parse the data from a",
    "start": "381840",
    "end": "384240"
  },
  {
    "text": "log field to create one or more formal",
    "start": "384240",
    "end": "386580"
  },
  {
    "text": "fields that can process further in the",
    "start": "386580",
    "end": "388560"
  },
  {
    "text": "query",
    "start": "388560",
    "end": "390660"
  },
  {
    "text": "also to learn more you can refer to",
    "start": "390660",
    "end": "392819"
  },
  {
    "text": "these Cloud wash log insights documents",
    "start": "392819",
    "end": "395400"
  },
  {
    "text": "which are given here",
    "start": "395400",
    "end": "396720"
  },
  {
    "text": "that explained now I should go ahead and",
    "start": "396720",
    "end": "399419"
  },
  {
    "text": "show you an example of how we can use",
    "start": "399419",
    "end": "401460"
  },
  {
    "text": "this tool for a real life use case",
    "start": "401460",
    "end": "403199"
  },
  {
    "text": "scenario let's say for postgres users",
    "start": "403199",
    "end": "405660"
  },
  {
    "text": "there are number of events that an RDS",
    "start": "405660",
    "end": "408300"
  },
  {
    "text": "postgres Administration or security team",
    "start": "408300",
    "end": "410460"
  },
  {
    "text": "should keep an eye on and be notified",
    "start": "410460",
    "end": "412440"
  },
  {
    "text": "about whenever that happens for example",
    "start": "412440",
    "end": "415080"
  },
  {
    "text": "you can monitor ddl operations such as",
    "start": "415080",
    "end": "417660"
  },
  {
    "text": "update in a production database using",
    "start": "417660",
    "end": "420180"
  },
  {
    "text": "cloudwatch log insights and if these",
    "start": "420180",
    "end": "422819"
  },
  {
    "text": "events occur in the log you can also set",
    "start": "422819",
    "end": "424800"
  },
  {
    "text": "up an alarm on top of that",
    "start": "424800",
    "end": "427080"
  },
  {
    "text": "similarly security teams Also may want",
    "start": "427080",
    "end": "429960"
  },
  {
    "text": "to monitor the failed logins and be",
    "start": "429960",
    "end": "431699"
  },
  {
    "text": "notified about it",
    "start": "431699",
    "end": "433080"
  },
  {
    "text": "before we go ahead and look at that",
    "start": "433080",
    "end": "434520"
  },
  {
    "text": "example let's see how you can enable",
    "start": "434520",
    "end": "436440"
  },
  {
    "text": "query logging to do that you simply have",
    "start": "436440",
    "end": "439199"
  },
  {
    "start": "437000",
    "end": "642000"
  },
  {
    "text": "to navigate to your RDS console and",
    "start": "439199",
    "end": "441599"
  },
  {
    "text": "access your database instance",
    "start": "441599",
    "end": "444300"
  },
  {
    "text": "once you do go ahead and select the",
    "start": "444300",
    "end": "447120"
  },
  {
    "text": "database instance",
    "start": "447120",
    "end": "449520"
  },
  {
    "text": "and then go to the configuration panel",
    "start": "449520",
    "end": "454039"
  },
  {
    "text": "here you can see that it is already",
    "start": "454380",
    "end": "456900"
  },
  {
    "text": "associated with a default parameter",
    "start": "456900",
    "end": "459180"
  },
  {
    "text": "group but you cannot modify the default",
    "start": "459180",
    "end": "461460"
  },
  {
    "text": "parameter group hence we shall go ahead",
    "start": "461460",
    "end": "463319"
  },
  {
    "text": "and create a custom parameter group",
    "start": "463319",
    "end": "465900"
  },
  {
    "text": "so for that you can go to the parameter",
    "start": "465900",
    "end": "468539"
  },
  {
    "text": "group and create a new parameter as",
    "start": "468539",
    "end": "471000"
  },
  {
    "text": "mentioned before you have to create a",
    "start": "471000",
    "end": "472979"
  },
  {
    "text": "custom parameter group here I have",
    "start": "472979",
    "end": "475080"
  },
  {
    "text": "already created that you can go ahead",
    "start": "475080",
    "end": "476580"
  },
  {
    "text": "and create your own by selecting the",
    "start": "476580",
    "end": "478259"
  },
  {
    "text": "create parameter group option right here",
    "start": "478259",
    "end": "480900"
  },
  {
    "text": "and filling the necessary information so",
    "start": "480900",
    "end": "484199"
  },
  {
    "text": "now I will click on the custom parameter",
    "start": "484199",
    "end": "486419"
  },
  {
    "text": "Group which I have pre-configured and",
    "start": "486419",
    "end": "490020"
  },
  {
    "text": "go ahead and look for the log menu",
    "start": "490020",
    "end": "492060"
  },
  {
    "text": "duration statement parameter in the",
    "start": "492060",
    "end": "493919"
  },
  {
    "text": "search box once you do go ahead and",
    "start": "493919",
    "end": "496979"
  },
  {
    "text": "click on the parameter which is login",
    "start": "496979",
    "end": "499020"
  },
  {
    "text": "duration statement and then edit it so",
    "start": "499020",
    "end": "502020"
  },
  {
    "text": "as to change the value to 500",
    "start": "502020",
    "end": "503639"
  },
  {
    "text": "milliseconds",
    "start": "503639",
    "end": "504960"
  },
  {
    "text": "so that it logs all the queries that",
    "start": "504960",
    "end": "506819"
  },
  {
    "text": "takes longer than half of a second to be",
    "start": "506819",
    "end": "508740"
  },
  {
    "text": "completed",
    "start": "508740",
    "end": "509759"
  },
  {
    "text": "next go ahead and search for the log",
    "start": "509759",
    "end": "512159"
  },
  {
    "text": "statement parameter here",
    "start": "512159",
    "end": "514020"
  },
  {
    "text": "so",
    "start": "514020",
    "end": "515599"
  },
  {
    "text": "once you search the log statement",
    "start": "515599",
    "end": "517880"
  },
  {
    "text": "firstly it controls the type of SQL",
    "start": "517880",
    "end": "521399"
  },
  {
    "text": "statements that are being logged so here",
    "start": "521399",
    "end": "523500"
  },
  {
    "text": "there are several",
    "start": "523500",
    "end": "524760"
  },
  {
    "text": "options that you can pick and choose",
    "start": "524760",
    "end": "526440"
  },
  {
    "text": "from",
    "start": "526440",
    "end": "527339"
  },
  {
    "text": "all will log all the types of SQL",
    "start": "527339",
    "end": "530100"
  },
  {
    "text": "statements unless login statement is",
    "start": "530100",
    "end": "532680"
  },
  {
    "text": "disabled",
    "start": "532680",
    "end": "533940"
  },
  {
    "text": "ddl will lock all the ddl statements",
    "start": "533940",
    "end": "536580"
  },
  {
    "text": "like create alter drop and truncate",
    "start": "536580",
    "end": "539640"
  },
  {
    "text": "mod will log all the ddl and DML",
    "start": "539640",
    "end": "542640"
  },
  {
    "text": "statements like insert update and delete",
    "start": "542640",
    "end": "545580"
  },
  {
    "text": "and none would not",
    "start": "545580",
    "end": "547560"
  },
  {
    "text": "um",
    "start": "547560",
    "end": "548279"
  },
  {
    "text": "log any of it",
    "start": "548279",
    "end": "550019"
  },
  {
    "text": "so I should go ahead and select mod for",
    "start": "550019",
    "end": "552180"
  },
  {
    "text": "now and then save the changes",
    "start": "552180",
    "end": "554700"
  },
  {
    "text": "once completed you can go ahead and",
    "start": "554700",
    "end": "557100"
  },
  {
    "text": "modify the database instance and replace",
    "start": "557100",
    "end": "558839"
  },
  {
    "text": "it with the custom parameter group that",
    "start": "558839",
    "end": "560580"
  },
  {
    "text": "we just created",
    "start": "560580",
    "end": "562260"
  },
  {
    "text": "so once you are done with the",
    "start": "562260",
    "end": "565500"
  },
  {
    "text": "modification procedure and replace the",
    "start": "565500",
    "end": "567779"
  },
  {
    "text": "default parameter group with the custom",
    "start": "567779",
    "end": "569220"
  },
  {
    "text": "parameter group here is how you'll be",
    "start": "569220",
    "end": "571800"
  },
  {
    "text": "able to see it so you'll see like a",
    "start": "571800",
    "end": "574080"
  },
  {
    "text": "pending reboot next to the custom",
    "start": "574080",
    "end": "575580"
  },
  {
    "text": "parameter group in your configuration",
    "start": "575580",
    "end": "577260"
  },
  {
    "text": "pan",
    "start": "577260",
    "end": "578399"
  },
  {
    "text": "go ahead and reboot your instance to",
    "start": "578399",
    "end": "580260"
  },
  {
    "text": "apply the changes and once you do that",
    "start": "580260",
    "end": "583019"
  },
  {
    "text": "you will have enabled your query logging",
    "start": "583019",
    "end": "586920"
  },
  {
    "text": "as soon as you reboot your database",
    "start": "586920",
    "end": "589019"
  },
  {
    "text": "instance you will see that the custom",
    "start": "589019",
    "end": "590940"
  },
  {
    "text": "parameter group that we created",
    "start": "590940",
    "end": "593160"
  },
  {
    "text": "for RDS instance is now in sync and you",
    "start": "593160",
    "end": "597660"
  },
  {
    "text": "successfully enabled query logging",
    "start": "597660",
    "end": "600899"
  },
  {
    "text": "now that you have already enabled query",
    "start": "600899",
    "end": "602760"
  },
  {
    "text": "logging let's look at a simple example",
    "start": "602760",
    "end": "604860"
  },
  {
    "text": "where we will search for update events",
    "start": "604860",
    "end": "607320"
  },
  {
    "text": "and see if any such operations occur in",
    "start": "607320",
    "end": "609839"
  },
  {
    "text": "the production environment",
    "start": "609839",
    "end": "612000"
  },
  {
    "text": "for that we shall select the log group",
    "start": "612000",
    "end": "613980"
  },
  {
    "text": "from the drop down so it's going to be",
    "start": "613980",
    "end": "616380"
  },
  {
    "text": "rdspg Labs again",
    "start": "616380",
    "end": "618420"
  },
  {
    "text": "and then we shall modify the sample",
    "start": "618420",
    "end": "621180"
  },
  {
    "text": "query right here and uh you know write a",
    "start": "621180",
    "end": "624959"
  },
  {
    "text": "query which will return a list of log",
    "start": "624959",
    "end": "626820"
  },
  {
    "text": "records by filtering the updates that",
    "start": "626820",
    "end": "628980"
  },
  {
    "text": "have taken place in the database",
    "start": "628980",
    "end": "630180"
  },
  {
    "text": "instance in last one hour",
    "start": "630180",
    "end": "632100"
  },
  {
    "text": "so let's go ahead and do that",
    "start": "632100",
    "end": "635399"
  },
  {
    "text": "all right and then once the two of them",
    "start": "635399",
    "end": "638760"
  },
  {
    "text": "is done then you can go ahead and run",
    "start": "638760",
    "end": "640620"
  },
  {
    "text": "the query",
    "start": "640620",
    "end": "642600"
  },
  {
    "start": "642000",
    "end": "742000"
  },
  {
    "text": "all right so as you can see here the",
    "start": "642600",
    "end": "645240"
  },
  {
    "text": "query results shows the records of the",
    "start": "645240",
    "end": "647339"
  },
  {
    "text": "logs that have update statement as a",
    "start": "647339",
    "end": "649620"
  },
  {
    "text": "part of that message",
    "start": "649620",
    "end": "651180"
  },
  {
    "text": "and they are being sorted in the",
    "start": "651180",
    "end": "653519"
  },
  {
    "text": "ascending order right based on based on",
    "start": "653519",
    "end": "656700"
  },
  {
    "text": "the query that we run",
    "start": "656700",
    "end": "658320"
  },
  {
    "text": "and uh you can also change it to",
    "start": "658320",
    "end": "660839"
  },
  {
    "text": "descending order if you change the",
    "start": "660839",
    "end": "662459"
  },
  {
    "text": "timestamp to descending right",
    "start": "662459",
    "end": "665940"
  },
  {
    "text": "um another important call out here is",
    "start": "665940",
    "end": "667920"
  },
  {
    "text": "that the query result shows the records",
    "start": "667920",
    "end": "669779"
  },
  {
    "text": "in your logs that matches the query",
    "start": "669779",
    "end": "671700"
  },
  {
    "text": "command which is that of timestamp",
    "start": "671700",
    "end": "673860"
  },
  {
    "text": "message ingestion time and log stream",
    "start": "673860",
    "end": "677220"
  },
  {
    "text": "also here there are five different",
    "start": "677220",
    "end": "679800"
  },
  {
    "text": "fields which you can use to filter your",
    "start": "679800",
    "end": "682920"
  },
  {
    "text": "logs based on your needs which are log",
    "start": "682920",
    "end": "685440"
  },
  {
    "text": "log stream message timestamp and",
    "start": "685440",
    "end": "687779"
  },
  {
    "text": "ingestion time hence if you see here we",
    "start": "687779",
    "end": "690779"
  },
  {
    "text": "shall get these logs which have the",
    "start": "690779",
    "end": "692940"
  },
  {
    "text": "update message in them and on clicking",
    "start": "692940",
    "end": "694980"
  },
  {
    "text": "each of them you'll be able to see the",
    "start": "694980",
    "end": "697380"
  },
  {
    "text": "value of these fields so if let's say",
    "start": "697380",
    "end": "699540"
  },
  {
    "text": "you click the first time stamp then",
    "start": "699540",
    "end": "701519"
  },
  {
    "text": "you'll be able to see the five values",
    "start": "701519",
    "end": "703560"
  },
  {
    "text": "and so on for different other 20",
    "start": "703560",
    "end": "706740"
  },
  {
    "text": "different values",
    "start": "706740",
    "end": "708240"
  },
  {
    "text": "moreover you can also easily visualize",
    "start": "708240",
    "end": "710760"
  },
  {
    "text": "the data in different ways by using this",
    "start": "710760",
    "end": "712800"
  },
  {
    "text": "visualization tab right here",
    "start": "712800",
    "end": "714899"
  },
  {
    "text": "in this tab you can pick and choose",
    "start": "714899",
    "end": "716579"
  },
  {
    "text": "different graphs based on your use case",
    "start": "716579",
    "end": "718440"
  },
  {
    "text": "scenario and maybe make use of that for",
    "start": "718440",
    "end": "721320"
  },
  {
    "text": "the representation",
    "start": "721320",
    "end": "722820"
  },
  {
    "text": "so here we have line graph stacked area",
    "start": "722820",
    "end": "725760"
  },
  {
    "text": "bar graph and pie chart",
    "start": "725760",
    "end": "729380"
  },
  {
    "text": "so this brings us to the end of our",
    "start": "729600",
    "end": "732120"
  },
  {
    "text": "demonstration now we'll go back to the",
    "start": "732120",
    "end": "735000"
  },
  {
    "text": "presentation deck where I will explain",
    "start": "735000",
    "end": "736800"
  },
  {
    "text": "you the real life use case scenarios of",
    "start": "736800",
    "end": "739560"
  },
  {
    "text": "cloud watch log insights and wrap it up",
    "start": "739560",
    "end": "741720"
  },
  {
    "text": "with that",
    "start": "741720",
    "end": "742620"
  },
  {
    "start": "742000",
    "end": "827000"
  },
  {
    "text": "the most important use cases of",
    "start": "742620",
    "end": "745380"
  },
  {
    "text": "cloudwatch login sites are first search",
    "start": "745380",
    "end": "748260"
  },
  {
    "text": "for ddl operations",
    "start": "748260",
    "end": "750000"
  },
  {
    "text": "by analyzing and filtering the incoming",
    "start": "750000",
    "end": "752279"
  },
  {
    "text": "logs based on certain inquiry you may",
    "start": "752279",
    "end": "755339"
  },
  {
    "text": "use cloud watch log insights to search",
    "start": "755339",
    "end": "757440"
  },
  {
    "text": "any particular ddl statements like",
    "start": "757440",
    "end": "759600"
  },
  {
    "text": "insert update or delete",
    "start": "759600",
    "end": "762360"
  },
  {
    "text": "it can also be used to create an alarm",
    "start": "762360",
    "end": "764399"
  },
  {
    "text": "using cloudwatch alarm one can create",
    "start": "764399",
    "end": "766800"
  },
  {
    "text": "alarms for specific Matrix that they",
    "start": "766800",
    "end": "769560"
  },
  {
    "text": "want to get alerted for Via",
    "start": "769560",
    "end": "771360"
  },
  {
    "text": "notifications when Matrix falls out of",
    "start": "771360",
    "end": "773519"
  },
  {
    "text": "threshold so for example you can create",
    "start": "773519",
    "end": "775740"
  },
  {
    "text": "a matrix on let's say update and if it",
    "start": "775740",
    "end": "778500"
  },
  {
    "text": "occurs then the alarm will trigger and",
    "start": "778500",
    "end": "780540"
  },
  {
    "text": "you shall get notified about it",
    "start": "780540",
    "end": "783420"
  },
  {
    "text": "there is also integrated monitoring that",
    "start": "783420",
    "end": "785820"
  },
  {
    "text": "uh is one of the most important use case",
    "start": "785820",
    "end": "787920"
  },
  {
    "text": "this feature offers monitoring via",
    "start": "787920",
    "end": "790440"
  },
  {
    "text": "Amazon Cloud watch out of box thus there",
    "start": "790440",
    "end": "793620"
  },
  {
    "text": "is no need for any integrated uh",
    "start": "793620",
    "end": "796320"
  },
  {
    "text": "monitoring with any additional tools",
    "start": "796320",
    "end": "799200"
  },
  {
    "text": "you can monitor your RDS instances and",
    "start": "799200",
    "end": "802019"
  },
  {
    "text": "other databases in one console",
    "start": "802019",
    "end": "804600"
  },
  {
    "text": "or your other AWS resources logs in a",
    "start": "804600",
    "end": "808139"
  },
  {
    "text": "unified view so you can analyze the logs",
    "start": "808139",
    "end": "810540"
  },
  {
    "text": "from various services",
    "start": "810540",
    "end": "813240"
  },
  {
    "text": "last but not the least you can also use",
    "start": "813240",
    "end": "816120"
  },
  {
    "text": "a cloud watch log insights to identify",
    "start": "816120",
    "end": "818459"
  },
  {
    "text": "the failed login attempts so cloudwatch",
    "start": "818459",
    "end": "821459"
  },
  {
    "text": "identifies the process for locating",
    "start": "821459",
    "end": "823079"
  },
  {
    "text": "unsuccessful login attempts inside the",
    "start": "823079",
    "end": "825300"
  },
  {
    "text": "AWS ecosystem",
    "start": "825300",
    "end": "827459"
  },
  {
    "start": "827000",
    "end": "868000"
  },
  {
    "text": "today we only performed a very basic",
    "start": "827459",
    "end": "830100"
  },
  {
    "text": "search of ddl statement update but",
    "start": "830100",
    "end": "832980"
  },
  {
    "text": "instead what you could have actually",
    "start": "832980",
    "end": "835079"
  },
  {
    "text": "done is construct a matrix filter expose",
    "start": "835079",
    "end": "838079"
  },
  {
    "text": "this alert and then create an alert out",
    "start": "838079",
    "end": "840120"
  },
  {
    "text": "of this matrix filter to receive the",
    "start": "840120",
    "end": "841740"
  },
  {
    "text": "notifications whenever an update occurs",
    "start": "841740",
    "end": "844920"
  },
  {
    "text": "since we only started with a very basic",
    "start": "844920",
    "end": "847440"
  },
  {
    "text": "question today we haven't shown you this",
    "start": "847440",
    "end": "849540"
  },
  {
    "text": "but maybe it gives you a sense of",
    "start": "849540",
    "end": "851700"
  },
  {
    "text": "possibility",
    "start": "851700",
    "end": "853019"
  },
  {
    "text": "this brings us to the end of our session",
    "start": "853019",
    "end": "855060"
  },
  {
    "text": "for more information on cloud watch logs",
    "start": "855060",
    "end": "857399"
  },
  {
    "text": "you can look at the link given below",
    "start": "857399",
    "end": "859980"
  },
  {
    "text": "hope this was helpful",
    "start": "859980",
    "end": "861660"
  },
  {
    "text": "thanks for watching",
    "start": "861660",
    "end": "864620"
  }
]