[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "7110"
  },
  {
    "text": "welcome to solving with AWS Solutions",
    "start": "9860",
    "end": "12660"
  },
  {
    "text": "your deep dive into reference",
    "start": "12660",
    "end": "14219"
  },
  {
    "text": "architectures built by AWS that are",
    "start": "14219",
    "end": "16619"
  },
  {
    "text": "ready to deploy instantly in the cloud",
    "start": "16619",
    "end": "18240"
  },
  {
    "text": "I'm Johnny and I'm here today with mukta",
    "start": "18240",
    "end": "20640"
  },
  {
    "text": "from the AWS Solutions team to tell you",
    "start": "20640",
    "end": "22920"
  },
  {
    "text": "about the AWS ml Ops framework solution",
    "start": "22920",
    "end": "25199"
  },
  {
    "text": "thanks Shawnee envelopes is a systematic",
    "start": "25199",
    "end": "27840"
  },
  {
    "text": "process of taking experimental machine",
    "start": "27840",
    "end": "29640"
  },
  {
    "text": "learning models from training to",
    "start": "29640",
    "end": "31560"
  },
  {
    "text": "deployment and monitoring them customers",
    "start": "31560",
    "end": "33899"
  },
  {
    "text": "often find managing the life cycle of",
    "start": "33899",
    "end": "36300"
  },
  {
    "text": "machine learning models to be overly",
    "start": "36300",
    "end": "37980"
  },
  {
    "text": "manual and time consuming this solution",
    "start": "37980",
    "end": "40079"
  },
  {
    "text": "helps organizations feel confident in",
    "start": "40079",
    "end": "42660"
  },
  {
    "text": "building mature mlops workload by",
    "start": "42660",
    "end": "44940"
  },
  {
    "text": "eliminating the need of extensive coding",
    "start": "44940",
    "end": "46920"
  },
  {
    "text": "I'm very interested to hear more about",
    "start": "46920",
    "end": "48840"
  },
  {
    "text": "this so let's Dive In",
    "start": "48840",
    "end": "51680"
  },
  {
    "start": "50000",
    "end": "77000"
  },
  {
    "text": "take me through the solution sure this",
    "start": "51680",
    "end": "54360"
  },
  {
    "text": "is a linkage for this",
    "start": "54360",
    "end": "57559"
  },
  {
    "text": "for the site here",
    "start": "57780",
    "end": "60378"
  },
  {
    "text": "paying for source code which you can use",
    "start": "63239",
    "end": "65400"
  },
  {
    "text": "to modify according to your use case",
    "start": "65400",
    "end": "68580"
  },
  {
    "text": "there's a link for cloud formation",
    "start": "68580",
    "end": "69900"
  },
  {
    "text": "template which you can use to deploy the",
    "start": "69900",
    "end": "71820"
  },
  {
    "text": "solution",
    "start": "71820",
    "end": "72780"
  },
  {
    "text": "okay uh how about you take me through",
    "start": "72780",
    "end": "74700"
  },
  {
    "text": "the architecture sure let me start with",
    "start": "74700",
    "end": "76560"
  },
  {
    "text": "single account architecture there are",
    "start": "76560",
    "end": "78540"
  },
  {
    "start": "77000",
    "end": "110000"
  },
  {
    "text": "two com",
    "start": "78540",
    "end": "80780"
  },
  {
    "text": "two convolutions main template the",
    "start": "84720",
    "end": "86460"
  },
  {
    "text": "provision pipeline is deployed by",
    "start": "86460",
    "end": "88320"
  },
  {
    "text": "orchestrator the customer initiates the",
    "start": "88320",
    "end": "91259"
  },
  {
    "text": "API call to Amazon API Gateway",
    "start": "91259",
    "end": "93799"
  },
  {
    "text": "orchestrators Lambda then creates AWS",
    "start": "93799",
    "end": "97259"
  },
  {
    "text": "code Pipeline and then AWS code pipeline",
    "start": "97259",
    "end": "100079"
  },
  {
    "text": "then provision the requested pipeline",
    "start": "100079",
    "end": "102119"
  },
  {
    "text": "similarly you can use multi-account",
    "start": "102119",
    "end": "105060"
  },
  {
    "text": "template",
    "start": "105060",
    "end": "106320"
  },
  {
    "text": "but you can have different environments",
    "start": "106320",
    "end": "108540"
  },
  {
    "text": "in different AWS accounts okay and what",
    "start": "108540",
    "end": "111420"
  },
  {
    "start": "110000",
    "end": "147000"
  },
  {
    "text": "type of models does the solution support",
    "start": "111420",
    "end": "114000"
  },
  {
    "text": "two models models can be pretty trained",
    "start": "114000",
    "end": "116939"
  },
  {
    "text": "using Amazon Sage maker built-in models",
    "start": "116939",
    "end": "120540"
  },
  {
    "text": "and register using model registry and",
    "start": "120540",
    "end": "123180"
  },
  {
    "text": "custom models for build your own model",
    "start": "123180",
    "end": "126479"
  },
  {
    "text": "scenarios and how do I ensure that my",
    "start": "126479",
    "end": "129300"
  },
  {
    "text": "models are relevant and accurate over",
    "start": "129300",
    "end": "132480"
  },
  {
    "text": "time you can use Solutions data quality",
    "start": "132480",
    "end": "135540"
  },
  {
    "text": "and model quality monitoring models",
    "start": "135540",
    "end": "138239"
  },
  {
    "text": "monitoring pipelines which which you can",
    "start": "138239",
    "end": "141420"
  },
  {
    "text": "use for continuously monitoring the",
    "start": "141420",
    "end": "144540"
  },
  {
    "text": "quality of machine learning models okay",
    "start": "144540",
    "end": "147180"
  },
  {
    "start": "147000",
    "end": "268000"
  },
  {
    "text": "let's see it in action sure so I have a",
    "start": "147180",
    "end": "150060"
  },
  {
    "text": "cloud formation template deployed here",
    "start": "150060",
    "end": "152459"
  },
  {
    "text": "you can choose between single and",
    "start": "152459",
    "end": "154200"
  },
  {
    "text": "multi-account here for the demo I am",
    "start": "154200",
    "end": "156900"
  },
  {
    "text": "using single account so once you deploy",
    "start": "156900",
    "end": "159000"
  },
  {
    "text": "the single account template you can call",
    "start": "159000",
    "end": "162000"
  },
  {
    "text": "the orchestrator API which will then",
    "start": "162000",
    "end": "164700"
  },
  {
    "text": "call Lambda to provision your AWS code",
    "start": "164700",
    "end": "166860"
  },
  {
    "text": "pipeline so I have it example here so",
    "start": "166860",
    "end": "170340"
  },
  {
    "text": "this is the example where I am",
    "start": "170340",
    "end": "172379"
  },
  {
    "text": "provisioning real time inference",
    "start": "172379",
    "end": "174720"
  },
  {
    "text": "pipeline which uses XG boost model to",
    "start": "174720",
    "end": "178019"
  },
  {
    "text": "predict customer churn so once you call",
    "start": "178019",
    "end": "180239"
  },
  {
    "text": "this API it will deploy a cloud",
    "start": "180239",
    "end": "181920"
  },
  {
    "text": "formation template here which will then",
    "start": "181920",
    "end": "184260"
  },
  {
    "text": "creates your sagemaker inference",
    "start": "184260",
    "end": "186060"
  },
  {
    "text": "endpoint and also deploy API Gateway so",
    "start": "186060",
    "end": "189239"
  },
  {
    "text": "once the API Gateway and sagemaker",
    "start": "189239",
    "end": "191700"
  },
  {
    "text": "endpoint is deployed you can use the",
    "start": "191700",
    "end": "194159"
  },
  {
    "text": "inference API which you can get as an",
    "start": "194159",
    "end": "196560"
  },
  {
    "text": "output here this is where you get this",
    "start": "196560",
    "end": "200099"
  },
  {
    "text": "is your bring your own model inference",
    "start": "200099",
    "end": "202319"
  },
  {
    "text": "Lambda rest API you can use this API to",
    "start": "202319",
    "end": "206220"
  },
  {
    "text": "request the predictions for your model",
    "start": "206220",
    "end": "209519"
  },
  {
    "text": "so I have example here so this is this",
    "start": "209519",
    "end": "212879"
  },
  {
    "text": "is the example API call I have so once",
    "start": "212879",
    "end": "216599"
  },
  {
    "text": "you call this API you will get the",
    "start": "216599",
    "end": "218280"
  },
  {
    "text": "probability of churn here which is 0.46",
    "start": "218280",
    "end": "223799"
  },
  {
    "text": "what are some of the pipelines that the",
    "start": "223799",
    "end": "225480"
  },
  {
    "text": "solution contains along with real-time",
    "start": "225480",
    "end": "228180"
  },
  {
    "text": "inference",
    "start": "228180",
    "end": "230719"
  },
  {
    "text": "batch transform pipeline which again",
    "start": "231780",
    "end": "234360"
  },
  {
    "text": "uses Amazon Sage maker and a custom",
    "start": "234360",
    "end": "237840"
  },
  {
    "text": "algorithm along with that we have image",
    "start": "237840",
    "end": "239819"
  },
  {
    "text": "Builder which uses Docker images and",
    "start": "239819",
    "end": "242459"
  },
  {
    "text": "then model quality to continuously",
    "start": "242459",
    "end": "244260"
  },
  {
    "text": "monitor the deployed machine learning",
    "start": "244260",
    "end": "246060"
  },
  {
    "text": "models okay awesome thanks Magda thank",
    "start": "246060",
    "end": "248580"
  },
  {
    "text": "you",
    "start": "248580",
    "end": "250140"
  },
  {
    "text": "thank you for joining our review of the",
    "start": "250140",
    "end": "252239"
  },
  {
    "text": "AWS ml Ops framework which simplifies",
    "start": "252239",
    "end": "254640"
  },
  {
    "text": "the process of taking an experimental ml",
    "start": "254640",
    "end": "256859"
  },
  {
    "text": "model into a production system check",
    "start": "256859",
    "end": "259560"
  },
  {
    "text": "s on the AWS Solutions webpage thank you",
    "start": "259560",
    "end": "262680"
  },
  {
    "text": "for watching",
    "start": "262680",
    "end": "263390"
  },
  {
    "text": "[Music]",
    "start": "263390",
    "end": "266510"
  },
  {
    "text": "foreign",
    "start": "267060",
    "end": "269240"
  }
]