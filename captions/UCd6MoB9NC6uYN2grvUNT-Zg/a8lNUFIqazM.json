[
  {
    "text": "hello everyone my name is Wamsa i'm a",
    "start": "0",
    "end": "3360"
  },
  {
    "text": "solutions architect at Amazon Web",
    "start": "3360",
    "end": "5720"
  },
  {
    "text": "Services in this video I'll walk you",
    "start": "5720",
    "end": "8720"
  },
  {
    "text": "through the process of migrating a",
    "start": "8720",
    "end": "10880"
  },
  {
    "text": "Postgres SQL database from Google Cloud",
    "start": "10880",
    "end": "13759"
  },
  {
    "text": "SQL to Amazon Aurora Postgres SQL let's",
    "start": "13759",
    "end": "17760"
  },
  {
    "text": "get",
    "start": "17760",
    "end": "19920"
  },
  {
    "text": "started here I have created a sample",
    "start": "21080",
    "end": "24000"
  },
  {
    "text": "Postgress SQL database of version 16.8 8",
    "start": "24000",
    "end": "28080"
  },
  {
    "text": "which I'm calling it as",
    "start": "28080",
    "end": "31760"
  },
  {
    "text": "source i have enabled a public IP",
    "start": "32840",
    "end": "35840"
  },
  {
    "text": "connectivity uh for this instance which",
    "start": "35840",
    "end": "38800"
  },
  {
    "text": "is going to be a key part in our",
    "start": "38800",
    "end": "41160"
  },
  {
    "text": "migration let's open cloudshell to check",
    "start": "41160",
    "end": "44719"
  },
  {
    "text": "the sample data",
    "start": "44719",
    "end": "48440"
  },
  {
    "text": "i've created a sample uh database within",
    "start": "50960",
    "end": "54160"
  },
  {
    "text": "the",
    "start": "54160",
    "end": "54920"
  },
  {
    "text": "instance for a periodic table",
    "start": "54920",
    "end": "59519"
  },
  {
    "text": "data connect to the",
    "start": "60920",
    "end": "64559"
  },
  {
    "text": "database provide the password let's run",
    "start": "66920",
    "end": "70400"
  },
  {
    "text": "a select command to view the sample",
    "start": "70400",
    "end": "73479"
  },
  {
    "text": "data",
    "start": "73479",
    "end": "75320"
  },
  {
    "text": "here is a sample data uh which we'll be",
    "start": "75320",
    "end": "78640"
  },
  {
    "text": "using for the demo let's exit out from",
    "start": "78640",
    "end": "81040"
  },
  {
    "text": "here to enable replication we have to",
    "start": "81040",
    "end": "84479"
  },
  {
    "text": "set couple of flags for this instance on",
    "start": "84479",
    "end": "88439"
  },
  {
    "text": "GCP uh let's click on edit configuration",
    "start": "88439",
    "end": "91920"
  },
  {
    "text": "on the",
    "start": "91920",
    "end": "94320"
  },
  {
    "text": "console you scroll down to the flag",
    "start": "96439",
    "end": "99600"
  },
  {
    "text": "section",
    "start": "99600",
    "end": "102600"
  },
  {
    "text": "let's add a database",
    "start": "103040",
    "end": "106640"
  },
  {
    "text": "flag first we have to enable logical",
    "start": "108439",
    "end": "111640"
  },
  {
    "text": "replication search for logical",
    "start": "111640",
    "end": "116079"
  },
  {
    "text": "decoding set the flag add another",
    "start": "121799",
    "end": "126159"
  },
  {
    "text": "flag and search for PG logical",
    "start": "126360",
    "end": "132360"
  },
  {
    "text": "select enable PG",
    "start": "134720",
    "end": "137160"
  },
  {
    "text": "logical once you add those two flags",
    "start": "137160",
    "end": "140000"
  },
  {
    "text": "scroll down to click on",
    "start": "140000",
    "end": "142680"
  },
  {
    "text": "save on save and",
    "start": "142680",
    "end": "146400"
  },
  {
    "text": "restart while this is happening uh let's",
    "start": "147400",
    "end": "150400"
  },
  {
    "text": "switch to AWS",
    "start": "150400",
    "end": "152440"
  },
  {
    "text": "console over here let's start by",
    "start": "152440",
    "end": "155440"
  },
  {
    "text": "understanding the VPC layout",
    "start": "155440",
    "end": "160280"
  },
  {
    "text": "in my account I have a a custom",
    "start": "160400",
    "end": "163160"
  },
  {
    "text": "VPC",
    "start": "163160",
    "end": "165160"
  },
  {
    "text": "with two subnets two private subnets and",
    "start": "165160",
    "end": "168640"
  },
  {
    "text": "two public",
    "start": "168640",
    "end": "170120"
  },
  {
    "text": "subnets in this demo I'll be using the",
    "start": "170120",
    "end": "172879"
  },
  {
    "text": "private subnets uh for creating the",
    "start": "172879",
    "end": "176000"
  },
  {
    "text": "Aurora",
    "start": "176000",
    "end": "177640"
  },
  {
    "text": "instance and I have couple of security",
    "start": "177640",
    "end": "182239"
  },
  {
    "text": "groups one is called private server",
    "start": "182239",
    "end": "185760"
  },
  {
    "text": "security group with inbound rules",
    "start": "185760",
    "end": "189200"
  },
  {
    "text": "allowing communication from the",
    "start": "189200",
    "end": "191040"
  },
  {
    "text": "internetf facing security",
    "start": "191040",
    "end": "192920"
  },
  {
    "text": "group also I have an internetf facing",
    "start": "192920",
    "end": "196000"
  },
  {
    "text": "security group with inbound rules",
    "start": "196000",
    "end": "198879"
  },
  {
    "text": "allowing communication from the internet",
    "start": "198879",
    "end": "201920"
  },
  {
    "text": "all right so let's go to",
    "start": "201920",
    "end": "205159"
  },
  {
    "text": "RDS before creating a database instance",
    "start": "205159",
    "end": "209120"
  },
  {
    "text": "since we'll be migrating from a a",
    "start": "209120",
    "end": "212400"
  },
  {
    "text": "different database we'll have to create",
    "start": "212400",
    "end": "215280"
  },
  {
    "text": "a custom parameter",
    "start": "215280",
    "end": "217799"
  },
  {
    "text": "group let's go to parameter group i have",
    "start": "217799",
    "end": "221040"
  },
  {
    "text": "a sample here i'll create another a",
    "start": "221040",
    "end": "224799"
  },
  {
    "text": "custom parameter group",
    "start": "224799",
    "end": "228680"
  },
  {
    "text": "let's provide a name and",
    "start": "244959",
    "end": "248400"
  },
  {
    "text": "description we'll select post SQL as the",
    "start": "254519",
    "end": "257680"
  },
  {
    "text": "engine",
    "start": "257680",
    "end": "260320"
  },
  {
    "text": "and uh we are dealing with version 16 in",
    "start": "261359",
    "end": "264160"
  },
  {
    "text": "this",
    "start": "264160",
    "end": "266320"
  },
  {
    "text": "demo and this is going to be a cluster",
    "start": "270360",
    "end": "272880"
  },
  {
    "text": "parameter group uh rather than a",
    "start": "272880",
    "end": "274880"
  },
  {
    "text": "database parameter",
    "start": "274880",
    "end": "277400"
  },
  {
    "text": "group let's go ahead and create",
    "start": "277400",
    "end": "282199"
  },
  {
    "text": "once it's created go to the parameter",
    "start": "282800",
    "end": "285800"
  },
  {
    "text": "group and click on",
    "start": "285800",
    "end": "288919"
  },
  {
    "text": "edit search for logical",
    "start": "288919",
    "end": "294320"
  },
  {
    "text": "replication so set the flag to",
    "start": "297800",
    "end": "302120"
  },
  {
    "text": "one and",
    "start": "302120",
    "end": "305680"
  },
  {
    "text": "uh search for sender",
    "start": "307560",
    "end": "311080"
  },
  {
    "text": "timeout so you'll see nothing here set",
    "start": "311080",
    "end": "313600"
  },
  {
    "text": "it to",
    "start": "313600",
    "end": "314840"
  },
  {
    "text": "zero so with those two save those",
    "start": "314840",
    "end": "319080"
  },
  {
    "text": "changes let's make sure it's uh",
    "start": "319080",
    "end": "322680"
  },
  {
    "text": "updated so I have sender timeout as zero",
    "start": "322680",
    "end": "328120"
  },
  {
    "text": "and logical",
    "start": "328120",
    "end": "331720"
  },
  {
    "text": "replication as one okay so this should",
    "start": "331720",
    "end": "335919"
  },
  {
    "text": "be it uh we are ready to go ahead and",
    "start": "335919",
    "end": "338720"
  },
  {
    "text": "create an instance let's create a",
    "start": "338720",
    "end": "343080"
  },
  {
    "text": "database aurora Postgress SQL is",
    "start": "343080",
    "end": "345960"
  },
  {
    "text": "pre-selected let's do a standard",
    "start": "345960",
    "end": "350000"
  },
  {
    "text": "create for the version let's leave the",
    "start": "351160",
    "end": "354400"
  },
  {
    "text": "selected major version",
    "start": "354400",
    "end": "357600"
  },
  {
    "text": "here and uh since this is a demo I'll be",
    "start": "357720",
    "end": "361240"
  },
  {
    "text": "selecting a dev test",
    "start": "361240",
    "end": "363880"
  },
  {
    "text": "template let's call it target postgress",
    "start": "363880",
    "end": "368240"
  },
  {
    "text": "SQL",
    "start": "368240",
    "end": "371199"
  },
  {
    "text": "db and we'll use AWS secrets manager for",
    "start": "374280",
    "end": "377759"
  },
  {
    "text": "managing the",
    "start": "377759",
    "end": "380319"
  },
  {
    "text": "credentials for instance configuration",
    "start": "384919",
    "end": "387600"
  },
  {
    "text": "uh let's use burstable class and we'll",
    "start": "387600",
    "end": "390639"
  },
  {
    "text": "use T3 medium for the demo i'm not going",
    "start": "390639",
    "end": "393919"
  },
  {
    "text": "to choose uh to create narrower replica",
    "start": "393919",
    "end": "396720"
  },
  {
    "text": "uh just for the demo but for production",
    "start": "396720",
    "end": "398639"
  },
  {
    "text": "workloads it's highly recommended to use",
    "start": "398639",
    "end": "400880"
  },
  {
    "text": "multi-AZ deployment",
    "start": "400880",
    "end": "404080"
  },
  {
    "text": "option as you can see here u custom VPC",
    "start": "405880",
    "end": "409440"
  },
  {
    "text": "is pre-selected and uh there is a DB",
    "start": "409440",
    "end": "412720"
  },
  {
    "text": "subnet group as well",
    "start": "412720",
    "end": "414880"
  },
  {
    "text": "the key thing here is let's make sure uh",
    "start": "414880",
    "end": "417199"
  },
  {
    "text": "public access is selected as no uh since",
    "start": "417199",
    "end": "420560"
  },
  {
    "text": "we want the database to be private and",
    "start": "420560",
    "end": "422880"
  },
  {
    "text": "we'll use cloud shell to privately",
    "start": "422880",
    "end": "425120"
  },
  {
    "text": "connect to the RDS for verifying the",
    "start": "425120",
    "end": "427400"
  },
  {
    "text": "data",
    "start": "427400",
    "end": "430400"
  },
  {
    "text": "okay for the security group as shown",
    "start": "431000",
    "end": "434400"
  },
  {
    "text": "earlier uh let's select private",
    "start": "434400",
    "end": "438280"
  },
  {
    "text": "SG and we can uncheck the",
    "start": "438280",
    "end": "442720"
  },
  {
    "text": "default so everything else should be",
    "start": "446039",
    "end": "449280"
  },
  {
    "text": "okay to go ahead except there is one",
    "start": "449280",
    "end": "452560"
  },
  {
    "text": "last thing that we need to do here which",
    "start": "452560",
    "end": "455039"
  },
  {
    "text": "is",
    "start": "455039",
    "end": "456440"
  },
  {
    "text": "um choosing our custom parameter",
    "start": "456440",
    "end": "461599"
  },
  {
    "text": "group so PGSQL custom parameter group is",
    "start": "461960",
    "end": "465520"
  },
  {
    "text": "uh the one I just created so let's",
    "start": "465520",
    "end": "467520"
  },
  {
    "text": "select that and it has both of those",
    "start": "467520",
    "end": "470479"
  },
  {
    "text": "flags",
    "start": "470479",
    "end": "472880"
  },
  {
    "text": "enabled everything else should be good",
    "start": "473000",
    "end": "475120"
  },
  {
    "text": "to go let's go ahead and create the",
    "start": "475120",
    "end": "479599"
  },
  {
    "text": "database while this is happening um we",
    "start": "483960",
    "end": "487680"
  },
  {
    "text": "are good to go ahead and create a DMS",
    "start": "487680",
    "end": "490800"
  },
  {
    "text": "replication instance",
    "start": "490800",
    "end": "494440"
  },
  {
    "text": "we'll be using AWS database migration",
    "start": "506080",
    "end": "508560"
  },
  {
    "text": "service uh for this demo uh there are",
    "start": "508560",
    "end": "513200"
  },
  {
    "text": "few things here we'll be creating one is",
    "start": "513200",
    "end": "515919"
  },
  {
    "text": "a database replication instance and uh",
    "start": "515919",
    "end": "519839"
  },
  {
    "text": "we'll create endpoints for the source",
    "start": "519839",
    "end": "521839"
  },
  {
    "text": "and target and finally we'll create a",
    "start": "521839",
    "end": "524080"
  },
  {
    "text": "task for the actual migration so let's",
    "start": "524080",
    "end": "527200"
  },
  {
    "text": "start by creating a replication",
    "start": "527200",
    "end": "530959"
  },
  {
    "text": "instance click on create replication",
    "start": "531560",
    "end": "536000"
  },
  {
    "text": "instance i'll provide a",
    "start": "536040",
    "end": "540160"
  },
  {
    "text": "name we'll leave the instance class as",
    "start": "547320",
    "end": "549760"
  },
  {
    "text": "T3",
    "start": "549760",
    "end": "552160"
  },
  {
    "text": "medium high availability let's uh select",
    "start": "552519",
    "end": "556160"
  },
  {
    "text": "de or test for the",
    "start": "556160",
    "end": "559759"
  },
  {
    "text": "demo for network",
    "start": "560440",
    "end": "562760"
  },
  {
    "text": "connectivity let's select the custom",
    "start": "562760",
    "end": "565480"
  },
  {
    "text": "VPC and I'm going to select uh the",
    "start": "565480",
    "end": "569040"
  },
  {
    "text": "subnet group which is created for the",
    "start": "569040",
    "end": "570640"
  },
  {
    "text": "DMS this subnet group is nothing but um",
    "start": "570640",
    "end": "574640"
  },
  {
    "text": "a collection of all subnets within the",
    "start": "574640",
    "end": "577000"
  },
  {
    "text": "VPC and I'm going to select uh publicly",
    "start": "577000",
    "end": "580480"
  },
  {
    "text": "accessible as true this is very key uh",
    "start": "580480",
    "end": "583839"
  },
  {
    "text": "in this in in this case because when you",
    "start": "583839",
    "end": "587440"
  },
  {
    "text": "create a publicly accessible DMS",
    "start": "587440",
    "end": "589760"
  },
  {
    "text": "replication instance DMS will provide a",
    "start": "589760",
    "end": "593360"
  },
  {
    "text": "public IP address um which we will go",
    "start": "593360",
    "end": "597440"
  },
  {
    "text": "back to GCP console and add it to the",
    "start": "597440",
    "end": "601560"
  },
  {
    "text": "connections for allowing the",
    "start": "601560",
    "end": "605519"
  },
  {
    "text": "connection everything else should be",
    "start": "605640",
    "end": "607680"
  },
  {
    "text": "good to go let's have one final look we",
    "start": "607680",
    "end": "610480"
  },
  {
    "text": "have a name we have the instance class",
    "start": "610480",
    "end": "612880"
  },
  {
    "text": "test or dev type of",
    "start": "612880",
    "end": "615720"
  },
  {
    "text": "workload and then publicly accessible",
    "start": "615720",
    "end": "619279"
  },
  {
    "text": "instance within the custom",
    "start": "619279",
    "end": "622560"
  },
  {
    "text": "VPC let's click on create replication",
    "start": "622760",
    "end": "627600"
  },
  {
    "text": "instance the replication instance is now",
    "start": "628440",
    "end": "630959"
  },
  {
    "text": "ready let's click on view details to",
    "start": "630959",
    "end": "633200"
  },
  {
    "text": "copy the public IP address",
    "start": "633200",
    "end": "637240"
  },
  {
    "text": "let's go back to GCP",
    "start": "641440",
    "end": "645839"
  },
  {
    "text": "console we don't need the cloud shell at",
    "start": "649000",
    "end": "651440"
  },
  {
    "text": "the moment let's close it",
    "start": "651440",
    "end": "653560"
  },
  {
    "text": "out now we have to allow the public IP",
    "start": "653560",
    "end": "658800"
  },
  {
    "text": "uh address to be able to communicate",
    "start": "658800",
    "end": "661040"
  },
  {
    "text": "with this CloudSQL instance for that",
    "start": "661040",
    "end": "664720"
  },
  {
    "text": "let's go to connections",
    "start": "664720",
    "end": "668680"
  },
  {
    "text": "click on",
    "start": "669040",
    "end": "670600"
  },
  {
    "text": "networking and add a",
    "start": "670600",
    "end": "674399"
  },
  {
    "text": "network i'm going to call it as uh AWS",
    "start": "676760",
    "end": "683120"
  },
  {
    "text": "DMS replication",
    "start": "684200",
    "end": "687920"
  },
  {
    "text": "instance click on save",
    "start": "692680",
    "end": "696399"
  },
  {
    "text": "now this should allow communications",
    "start": "696399",
    "end": "698720"
  },
  {
    "text": "coming from DMS uh we'll test it here in",
    "start": "698720",
    "end": "702079"
  },
  {
    "text": "a bit let's go back to DMS",
    "start": "702079",
    "end": "705399"
  },
  {
    "text": "again now step one uh is creating",
    "start": "705399",
    "end": "708320"
  },
  {
    "text": "replication instance now the next step",
    "start": "708320",
    "end": "710480"
  },
  {
    "text": "is creating the source and target",
    "start": "710480",
    "end": "712600"
  },
  {
    "text": "endpoints let's go ahead and do",
    "start": "712600",
    "end": "716480"
  },
  {
    "text": "that click on create an",
    "start": "720680",
    "end": "723399"
  },
  {
    "text": "endpoint first we'll start by creating a",
    "start": "723399",
    "end": "725839"
  },
  {
    "text": "source",
    "start": "725839",
    "end": "727800"
  },
  {
    "text": "endpoint i'm going to call it",
    "start": "727800",
    "end": "730279"
  },
  {
    "text": "source cloud",
    "start": "730279",
    "end": "731840"
  },
  {
    "text": "[Music]",
    "start": "731840",
    "end": "733399"
  },
  {
    "text": "SQL",
    "start": "733399",
    "end": "736399"
  },
  {
    "text": "endpoint just",
    "start": "738600",
    "end": "741560"
  },
  {
    "text": "select a regular Postgress",
    "start": "741560",
    "end": "745839"
  },
  {
    "text": "SQL and we'll provide uh access",
    "start": "749320",
    "end": "752480"
  },
  {
    "text": "information manually",
    "start": "752480",
    "end": "754560"
  },
  {
    "text": "so for server name it's going to be uh",
    "start": "754560",
    "end": "757680"
  },
  {
    "text": "the IP address so let's copy",
    "start": "757680",
    "end": "762000"
  },
  {
    "text": "that let's click on the Yep copy the",
    "start": "768120",
    "end": "770800"
  },
  {
    "text": "public IP",
    "start": "770800",
    "end": "773000"
  },
  {
    "text": "address paste it over here",
    "start": "773000",
    "end": "777720"
  },
  {
    "text": "portal standard",
    "start": "778720",
    "end": "780680"
  },
  {
    "text": "5432 and",
    "start": "780680",
    "end": "783160"
  },
  {
    "text": "[Music]",
    "start": "783160",
    "end": "784839"
  },
  {
    "text": "username",
    "start": "784839",
    "end": "787839"
  },
  {
    "text": "Chris provided the password as well uh",
    "start": "795240",
    "end": "798399"
  },
  {
    "text": "database name is a periodic",
    "start": "798399",
    "end": "802480"
  },
  {
    "text": "table right that should be it for the",
    "start": "805079",
    "end": "807279"
  },
  {
    "text": "access information we have the public IP",
    "start": "807279",
    "end": "810079"
  },
  {
    "text": "address port username password and the",
    "start": "810079",
    "end": "812399"
  },
  {
    "text": "database",
    "start": "812399",
    "end": "814880"
  },
  {
    "text": "name click on create",
    "start": "816519",
    "end": "820399"
  },
  {
    "text": "endpoint we'll test these endpoints um",
    "start": "822120",
    "end": "825200"
  },
  {
    "text": "here in a bit after creating both of",
    "start": "825200",
    "end": "829279"
  },
  {
    "text": "This time let's create a target",
    "start": "830399",
    "end": "834320"
  },
  {
    "text": "endpoint it's going to be our Aurora uh",
    "start": "834519",
    "end": "838079"
  },
  {
    "text": "identifier and the credentials",
    "start": "838079",
    "end": "841079"
  },
  {
    "text": "accordingly so for that let's open up",
    "start": "841079",
    "end": "844720"
  },
  {
    "text": "RDS console separate",
    "start": "844720",
    "end": "848720"
  },
  {
    "text": "window let's click on the DB identifier",
    "start": "852279",
    "end": "857279"
  },
  {
    "text": "let's copy uh the endpoint",
    "start": "857279",
    "end": "861920"
  },
  {
    "text": "here provide a name of the endpoint it's",
    "start": "868360",
    "end": "871600"
  },
  {
    "text": "going to be",
    "start": "871600",
    "end": "874920"
  },
  {
    "text": "End",
    "start": "885839",
    "end": "888160"
  },
  {
    "text": "point engine is Aurora Postgress",
    "start": "888600",
    "end": "893440"
  },
  {
    "text": "SQL same let's provide the access",
    "start": "894519",
    "end": "896959"
  },
  {
    "text": "information manually paste uh the",
    "start": "896959",
    "end": "899839"
  },
  {
    "text": "endpoint that we just copied from",
    "start": "899839",
    "end": "902000"
  },
  {
    "text": "previous",
    "start": "902000",
    "end": "903639"
  },
  {
    "text": "step port is",
    "start": "903639",
    "end": "907000"
  },
  {
    "text": "5432 credentials username is Postgress",
    "start": "907000",
    "end": "910399"
  },
  {
    "text": "for the password uh we have to get it",
    "start": "910399",
    "end": "912320"
  },
  {
    "text": "from the secrets manager since we",
    "start": "912320",
    "end": "914240"
  },
  {
    "text": "selected that option while creating the",
    "start": "914240",
    "end": "916320"
  },
  {
    "text": "DB instance so let's go to secrets",
    "start": "916320",
    "end": "922240"
  },
  {
    "text": "manager select the secret",
    "start": "925560",
    "end": "929360"
  },
  {
    "text": "name and you can retrieve the secret",
    "start": "929639",
    "end": "932560"
  },
  {
    "text": "value from here copy the password and",
    "start": "932560",
    "end": "936480"
  },
  {
    "text": "then uh paste it back in the endpoint",
    "start": "936480",
    "end": "939440"
  },
  {
    "text": "creation step let's provide the database",
    "start": "939440",
    "end": "944079"
  },
  {
    "text": "name it's the same periodic table",
    "start": "944760",
    "end": "948040"
  },
  {
    "text": "again and click on create",
    "start": "948040",
    "end": "953120"
  },
  {
    "text": "endpoint all right so now um we have all",
    "start": "960279",
    "end": "966160"
  },
  {
    "text": "steps ready to test the endpoints",
    "start": "966160",
    "end": "969199"
  },
  {
    "text": "however uh we still have to create the",
    "start": "969199",
    "end": "971759"
  },
  {
    "text": "database inside the target which is the",
    "start": "971759",
    "end": "974720"
  },
  {
    "text": "Amazon Aurora uh instance so for that",
    "start": "974720",
    "end": "978480"
  },
  {
    "text": "let's click on cloud",
    "start": "978480",
    "end": "980279"
  },
  {
    "text": "shell we'll go ahead and create a VPC",
    "start": "980279",
    "end": "983040"
  },
  {
    "text": "environment",
    "start": "983040",
    "end": "985680"
  },
  {
    "text": "so provide a",
    "start": "985680",
    "end": "988320"
  },
  {
    "text": "name and I'll select the same uh VPC we",
    "start": "991639",
    "end": "994720"
  },
  {
    "text": "have been using for the demo for the",
    "start": "994720",
    "end": "997279"
  },
  {
    "text": "subnet uh let's place this in a private",
    "start": "997279",
    "end": "1001560"
  },
  {
    "text": "subnet pick any of the private",
    "start": "1001560",
    "end": "1004440"
  },
  {
    "text": "subnets the security group I'm going to",
    "start": "1004440",
    "end": "1008160"
  },
  {
    "text": "select internetf facing security group",
    "start": "1008160",
    "end": "1010880"
  },
  {
    "text": "the reason is I have uh inbound rules",
    "start": "1010880",
    "end": "1014440"
  },
  {
    "text": "for the private server security group",
    "start": "1014440",
    "end": "1018079"
  },
  {
    "text": "which is tagged to Aurora instance to",
    "start": "1018079",
    "end": "1021680"
  },
  {
    "text": "allow communications coming from",
    "start": "1021680",
    "end": "1023360"
  },
  {
    "text": "internetf facing security group so the",
    "start": "1023360",
    "end": "1026959"
  },
  {
    "text": "VPC environment which we are just",
    "start": "1026959",
    "end": "1028798"
  },
  {
    "text": "creating for cloud shell will have",
    "start": "1028799",
    "end": "1031120"
  },
  {
    "text": "internet facing SG and Aurora will have",
    "start": "1031120",
    "end": "1034798"
  },
  {
    "text": "a private server SG",
    "start": "1034799",
    "end": "1038678"
  },
  {
    "text": "by default uh the psql version within",
    "start": "1043679",
    "end": "1046798"
  },
  {
    "text": "cloud shell environment may or ma may",
    "start": "1046799",
    "end": "1049440"
  },
  {
    "text": "not match with your target so let's",
    "start": "1049440",
    "end": "1052000"
  },
  {
    "text": "check the version right",
    "start": "1052000",
    "end": "1056039"
  },
  {
    "text": "now yep this is currently pointing to",
    "start": "1056039",
    "end": "1058480"
  },
  {
    "text": "the major version 15 but our target is",
    "start": "1058480",
    "end": "1061840"
  },
  {
    "text": "major version 16 so let's go ahead and",
    "start": "1061840",
    "end": "1064880"
  },
  {
    "text": "remove this and install um psql",
    "start": "1064880",
    "end": "1069480"
  },
  {
    "text": "16 going to use dnf commands for",
    "start": "1069480",
    "end": "1074320"
  },
  {
    "text": "that clear the",
    "start": "1077080",
    "end": "1081039"
  },
  {
    "text": "cache install 16",
    "start": "1085559",
    "end": "1090200"
  },
  {
    "text": "let's make sure the new version is",
    "start": "1102799",
    "end": "1107600"
  },
  {
    "text": "16 all right we should be good to move",
    "start": "1109320",
    "end": "1112400"
  },
  {
    "text": "forward",
    "start": "1112400",
    "end": "1115400"
  },
  {
    "text": "uh right now uh",
    "start": "1116320",
    "end": "1118440"
  },
  {
    "text": "let's log into our uh Aurora database",
    "start": "1118440",
    "end": "1122200"
  },
  {
    "text": "instance and we'll we'll create uh a new",
    "start": "1122200",
    "end": "1125840"
  },
  {
    "text": "database for the periodic",
    "start": "1125840",
    "end": "1129200"
  },
  {
    "text": "table let's do psql and provide a host",
    "start": "1131240",
    "end": "1134720"
  },
  {
    "text": "name all right so that's the host name",
    "start": "1134720",
    "end": "1139039"
  },
  {
    "text": "we have uh the",
    "start": "1139039",
    "end": "1142320"
  },
  {
    "text": "username i'm going to paste the password",
    "start": "1145000",
    "end": "1147200"
  },
  {
    "text": "from the secrets manager",
    "start": "1147200",
    "end": "1149880"
  },
  {
    "text": "again create the",
    "start": "1149880",
    "end": "1153360"
  },
  {
    "text": "database and verify the list of the",
    "start": "1153400",
    "end": "1157039"
  },
  {
    "text": "existing",
    "start": "1157039",
    "end": "1159080"
  },
  {
    "text": "databases all right as you can see there",
    "start": "1159080",
    "end": "1161360"
  },
  {
    "text": "is a periodic table database in here",
    "start": "1161360",
    "end": "1163600"
  },
  {
    "text": "right now it's empty we just created",
    "start": "1163600",
    "end": "1166480"
  },
  {
    "text": "let's go ahead and test the",
    "start": "1166480",
    "end": "1168919"
  },
  {
    "text": "endpoints i'll start with the",
    "start": "1168919",
    "end": "1171559"
  },
  {
    "text": "source click on the source and click on",
    "start": "1171559",
    "end": "1174080"
  },
  {
    "text": "test connection run the test the test is",
    "start": "1174080",
    "end": "1178840"
  },
  {
    "text": "successful similarly let's go back to",
    "start": "1178840",
    "end": "1181840"
  },
  {
    "text": "the target and click on test",
    "start": "1181840",
    "end": "1187120"
  },
  {
    "text": "connection this is also",
    "start": "1187320",
    "end": "1189880"
  },
  {
    "text": "successful now we are good to go ahead",
    "start": "1189880",
    "end": "1192160"
  },
  {
    "text": "and create a migration task",
    "start": "1192160",
    "end": "1196440"
  },
  {
    "text": "let's provide a task identifier i'm",
    "start": "1197120",
    "end": "1200320"
  },
  {
    "text": "going to call it cloud SQL",
    "start": "1200320",
    "end": "1204720"
  },
  {
    "text": "to",
    "start": "1208840",
    "end": "1211840"
  },
  {
    "text": "migration select the same replication",
    "start": "1213160",
    "end": "1216120"
  },
  {
    "text": "instance we have the source database",
    "start": "1216120",
    "end": "1218799"
  },
  {
    "text": "endpoint and the target",
    "start": "1218799",
    "end": "1222720"
  },
  {
    "text": "now for the demo I'm going to just do um",
    "start": "1222720",
    "end": "1226000"
  },
  {
    "text": "a full load and choose the migrate",
    "start": "1226000",
    "end": "1229240"
  },
  {
    "text": "option uh you can also select migrate",
    "start": "1229240",
    "end": "1231919"
  },
  {
    "text": "and replicate option if you need a full",
    "start": "1231919",
    "end": "1234559"
  },
  {
    "text": "load and uh continuous replication",
    "start": "1234559",
    "end": "1238159"
  },
  {
    "text": "between source and",
    "start": "1238159",
    "end": "1241039"
  },
  {
    "text": "target for the task settings um let's",
    "start": "1241480",
    "end": "1246760"
  },
  {
    "text": "select full lo mode and we'll leave",
    "start": "1246760",
    "end": "1250480"
  },
  {
    "text": "everything else as it is i'm going to",
    "start": "1250480",
    "end": "1252240"
  },
  {
    "text": "turn on Cloudatch logs in case if I get",
    "start": "1252240",
    "end": "1254400"
  },
  {
    "text": "errors I'll be able to go to Cloudatch",
    "start": "1254400",
    "end": "1256640"
  },
  {
    "text": "log group and check the",
    "start": "1256640",
    "end": "1259600"
  },
  {
    "text": "logs now for table mappings let's click",
    "start": "1263400",
    "end": "1269039"
  },
  {
    "text": "on add a new selection",
    "start": "1269480",
    "end": "1273600"
  },
  {
    "text": "rule going to enter a schema and I'm",
    "start": "1273720",
    "end": "1277440"
  },
  {
    "text": "going",
    "start": "1277440",
    "end": "1278760"
  },
  {
    "text": "to enter public here so the idea is to",
    "start": "1278760",
    "end": "1282159"
  },
  {
    "text": "copy over anything that's in public",
    "start": "1282159",
    "end": "1285400"
  },
  {
    "text": "schema all the tables within the public",
    "start": "1285400",
    "end": "1289760"
  },
  {
    "text": "schema all right so uh we can do a",
    "start": "1292919",
    "end": "1296240"
  },
  {
    "text": "pre-migration assessment and we'll",
    "start": "1296240",
    "end": "1298240"
  },
  {
    "text": "choose a bucket to copy over um the",
    "start": "1298240",
    "end": "1302679"
  },
  {
    "text": "results let's click on browse S3",
    "start": "1302679",
    "end": "1307720"
  },
  {
    "text": "i'll choose a sample bucket that I have",
    "start": "1307760",
    "end": "1310799"
  },
  {
    "text": "for",
    "start": "1310799",
    "end": "1313039"
  },
  {
    "text": "DMS you can choose to create a new AM",
    "start": "1318360",
    "end": "1321360"
  },
  {
    "text": "role or use an existing one i do have an",
    "start": "1321360",
    "end": "1325120"
  },
  {
    "text": "existing AM role which I'm going to use",
    "start": "1325120",
    "end": "1330520"
  },
  {
    "text": "we'll leave everything else as it",
    "start": "1341039",
    "end": "1344799"
  },
  {
    "text": "is go ahead and create a database",
    "start": "1350840",
    "end": "1353520"
  },
  {
    "text": "migration task once the task is created",
    "start": "1353520",
    "end": "1357039"
  },
  {
    "text": "let's uh click on view premigration",
    "start": "1357039",
    "end": "1359440"
  },
  {
    "text": "assessment we have a warning and there",
    "start": "1359440",
    "end": "1361679"
  },
  {
    "text": "are a few tests that's passed and",
    "start": "1361679",
    "end": "1363600"
  },
  {
    "text": "skipped so let's go ahead and view the",
    "start": "1363600",
    "end": "1368080"
  },
  {
    "text": "results so here you can check what has",
    "start": "1372679",
    "end": "1375520"
  },
  {
    "text": "been skipped and which all are",
    "start": "1375520",
    "end": "1379400"
  },
  {
    "text": "passed we also check the warning that is",
    "start": "1379400",
    "end": "1383039"
  },
  {
    "text": "the unsubed data types so here uh using",
    "start": "1383039",
    "end": "1386640"
  },
  {
    "text": "this data you can go back to the source",
    "start": "1386640",
    "end": "1388880"
  },
  {
    "text": "and fix anything that uh that you want",
    "start": "1388880",
    "end": "1391280"
  },
  {
    "text": "to correct and then you can rerun",
    "start": "1391280",
    "end": "1393679"
  },
  {
    "text": "premigration assessments multiple times",
    "start": "1393679",
    "end": "1396799"
  },
  {
    "text": "until you reach a steady",
    "start": "1396799",
    "end": "1399480"
  },
  {
    "text": "state now I'm good to go ahead with this",
    "start": "1399480",
    "end": "1402760"
  },
  {
    "text": "result i'm going to click on actions and",
    "start": "1402760",
    "end": "1406720"
  },
  {
    "text": "say restart or resume you should see the",
    "start": "1406720",
    "end": "1410159"
  },
  {
    "text": "task status as load complete depending",
    "start": "1410159",
    "end": "1413200"
  },
  {
    "text": "on the size of the data you have uh the",
    "start": "1413200",
    "end": "1415840"
  },
  {
    "text": "time to complete will",
    "start": "1415840",
    "end": "1418280"
  },
  {
    "text": "differ now we can also uh check the",
    "start": "1418280",
    "end": "1421440"
  },
  {
    "text": "table statistics",
    "start": "1421440",
    "end": "1423720"
  },
  {
    "text": "here in my case um 118 rows were copied",
    "start": "1423720",
    "end": "1428880"
  },
  {
    "text": "over from the source like I said you",
    "start": "1428880",
    "end": "1431679"
  },
  {
    "text": "know depending on the the size of the",
    "start": "1431679",
    "end": "1433600"
  },
  {
    "text": "data it might take a different time for",
    "start": "1433600",
    "end": "1435919"
  },
  {
    "text": "each use case uh we can also verify the",
    "start": "1435919",
    "end": "1439280"
  },
  {
    "text": "data that's copied over using cloud show",
    "start": "1439280",
    "end": "1442320"
  },
  {
    "text": "let's uh",
    "start": "1442320",
    "end": "1444840"
  },
  {
    "text": "select our database",
    "start": "1444840",
    "end": "1448280"
  },
  {
    "text": "here periodic",
    "start": "1448280",
    "end": "1451840"
  },
  {
    "text": "table let's do a select command to view",
    "start": "1452840",
    "end": "1456799"
  },
  {
    "text": "the sample data",
    "start": "1456799",
    "end": "1460320"
  },
  {
    "text": "yeah as you can see we have verified the",
    "start": "1460320",
    "end": "1463039"
  },
  {
    "text": "data that's copied over from the source",
    "start": "1463039",
    "end": "1465360"
  },
  {
    "text": "and we have used database migration",
    "start": "1465360",
    "end": "1467279"
  },
  {
    "text": "service to successfully copy data from",
    "start": "1467279",
    "end": "1470640"
  },
  {
    "text": "Google Cloud SQL Postgress SQL engine",
    "start": "1470640",
    "end": "1474400"
  },
  {
    "text": "over to Amazon Aurora Postgress SQL",
    "start": "1474400",
    "end": "1479400"
  }
]