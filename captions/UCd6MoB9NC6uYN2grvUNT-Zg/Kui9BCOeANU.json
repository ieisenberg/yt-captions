[
  {
    "text": "the next session is called so you think your native place master or as I would",
    "start": "2159",
    "end": "7930"
  },
  {
    "text": "like to call it server less computing on a topless so if you turn the keynote this morning you heard maybe Glencore",
    "start": "7930",
    "end": "14350"
  },
  {
    "text": "mention that there will be more and more focus on server less computing and I'd like to show some of those to you today",
    "start": "14350",
    "end": "20590"
  },
  {
    "text": "and this content ideally developed together with my colleague Olivia client",
    "start": "20590",
    "end": "25869"
  },
  {
    "text": "who's a solution architect at data police so it's all about speed no matter",
    "start": "25869",
    "end": "31180"
  },
  {
    "text": "what business you're in it's all about speed speed wins in business in order to",
    "start": "31180",
    "end": "36340"
  },
  {
    "text": "have speed and agility you need to focus on your application everything else is",
    "start": "36340",
    "end": "41680"
  },
  {
    "text": "undifferentiated heavy lifting so what you actually need to do is move the",
    "start": "41680",
    "end": "47290"
  },
  {
    "text": "screen so busy the whole screen technical team please squeeze the screen a little bit what you need to do is move",
    "start": "47290",
    "end": "55180"
  },
  {
    "text": "up the stack by moving up the stack you are abstracting away more and more of",
    "start": "55180",
    "end": "60610"
  },
  {
    "text": "the underlying on differentiating layers now let's take a look at the application architectures a little bit how to do",
    "start": "60610",
    "end": "67570"
  },
  {
    "text": "this squeezy squeeze so what you don't",
    "start": "67570",
    "end": "73540"
  },
  {
    "text": "want to do anymore is this you don't want to make any more a tightly coupled monolithic monster of an application a",
    "start": "73540",
    "end": "80560"
  },
  {
    "text": "huge jar file with all your components inside it's an unmanageable miss it's",
    "start": "80560",
    "end": "85659"
  },
  {
    "text": "fragile it doesn't scale what you need to do what you should do what many",
    "start": "85659",
    "end": "91509"
  },
  {
    "text": "people do these days is decomposed your application into its building blocks so",
    "start": "91509",
    "end": "97119"
  },
  {
    "text": "let's start defining your application building blocks that comprise your end solution and you might need a lot of",
    "start": "97119",
    "end": "104799"
  },
  {
    "text": "things you might need things like compute storage load balancing databases",
    "start": "104799",
    "end": "110020"
  },
  {
    "text": "identity and access management content delivery network nice you need all those",
    "start": "110020",
    "end": "115540"
  },
  {
    "text": "things from IT but they are not differentiating your application your application your solution your product",
    "start": "115540",
    "end": "122290"
  },
  {
    "text": "is defined by your cool features that you develop so use it focus on those",
    "start": "122290",
    "end": "128349"
  },
  {
    "text": "you'll suit focus can you please squeezy squeeze so we can see the whole screen",
    "start": "128349",
    "end": "134439"
  },
  {
    "text": "thank you technical t use it focus on your core differentiators and you suit or float",
    "start": "134439",
    "end": "142660"
  },
  {
    "text": "the undifferentiated ones to services so",
    "start": "142660",
    "end": "148629"
  },
  {
    "text": "that's why we have in the name of our company services amazon web services so",
    "start": "148629",
    "end": "153940"
  },
  {
    "text": "we have a range of services in our portfolio around 40 services currently and the point of those services is",
    "start": "153940",
    "end": "161319"
  },
  {
    "text": "exactly that you can offload the undifferentiated heavy lifting of IT",
    "start": "161319",
    "end": "166769"
  },
  {
    "text": "infrastructure and platforms to those services now you are probably aware and",
    "start": "166769",
    "end": "173470"
  },
  {
    "text": "familiar with the fundamental core services on the bottom compute you can",
    "start": "173470",
    "end": "179319"
  },
  {
    "text": "provision virtual machines storage networking etc those are fine nothing",
    "start": "179319",
    "end": "184930"
  },
  {
    "text": "wrong with that however you still need to then manage your servers you need to make decisions on things like which",
    "start": "184930",
    "end": "191620"
  },
  {
    "text": "operating system should I use what packet sees should i put on my server etc however when you use the",
    "start": "191620",
    "end": "199420"
  },
  {
    "text": "higher-order services what we call the platform level services they provide you more value they abstract away more of",
    "start": "199420",
    "end": "207459"
  },
  {
    "text": "the underlying infrastructure and they let you focus more on your activity they",
    "start": "207459",
    "end": "212859"
  },
  {
    "text": "automate more so let's take a look at some of the services you may be able to",
    "start": "212859",
    "end": "219220"
  },
  {
    "text": "use to build out the server less systems at large scale let's start with the day that here at the bottom tier typically",
    "start": "219220",
    "end": "225579"
  },
  {
    "text": "the most difficult tier to scale and manage here we have Kinesis so amazon",
    "start": "225579",
    "end": "232569"
  },
  {
    "text": "kinesis is a real-time streaming data service allowing you to ingest any",
    "start": "232569",
    "end": "237760"
  },
  {
    "text": "amount of data so with Kinesis you can have hundreds of thousands or millions",
    "start": "237760",
    "end": "243010"
  },
  {
    "text": "of devices or entities producing data pumping your data into Kinesis Kinesis",
    "start": "243010",
    "end": "249609"
  },
  {
    "text": "will ingest it replicate the data across multiple availability zones for durability you don't lose a single",
    "start": "249609",
    "end": "256299"
  },
  {
    "text": "record and on the other side of Kinesis it provides an order stream of data that you can then consumed with your",
    "start": "256299",
    "end": "263289"
  },
  {
    "text": "real-time analytics applications and you can plug in multiple applications",
    "start": "263289",
    "end": "268750"
  },
  {
    "text": "multiple use cases to the same thing is extreme so kinesis is really the way to pump a",
    "start": "268750",
    "end": "275569"
  },
  {
    "text": "lot of data into the cloud one of the ways where do you store it amazon s3",
    "start": "275569",
    "end": "282219"
  },
  {
    "text": "spin around however it is still a crucial element for the object storage",
    "start": "282219",
    "end": "288530"
  },
  {
    "text": "storing files and objects s3 provides unlimited storage capacity 11 ounce of",
    "start": "288530",
    "end": "293930"
  },
  {
    "text": "durability you don't have to do capacity planning and it scales horizontally and",
    "start": "293930",
    "end": "298969"
  },
  {
    "text": "it's very easy to use so let's talk more about the application tier I was",
    "start": "298969",
    "end": "305389"
  },
  {
    "text": "complaining about the monolithic applications what could you do now today with a top Lewis well at reinvent last",
    "start": "305389",
    "end": "313310"
  },
  {
    "text": "year we introduced one of my favorite services are brand-new computer vez AWS",
    "start": "313310",
    "end": "319250"
  },
  {
    "text": "lambda so oedipal s lambda is an event-driven fully managed compute",
    "start": "319250",
    "end": "324469"
  },
  {
    "text": "service basically all you need is called there is no infrastructure to manage",
    "start": "324469",
    "end": "330590"
  },
  {
    "text": "when you use lambda all you need to do is call your function that you want to",
    "start": "330590",
    "end": "335599"
  },
  {
    "text": "execute and you tell the cloud when you want to execute it you can attach it to",
    "start": "335599",
    "end": "341180"
  },
  {
    "text": "an event such as I have a new file new object in my s3 bucket I have a new",
    "start": "341180",
    "end": "346610"
  },
  {
    "text": "piece of data record in my Kinesis real-time data stream something has changed in my DynamoDB table somebody",
    "start": "346610",
    "end": "353659"
  },
  {
    "text": "has made a new entry in the table you can attach a cloud function with lambda and compute against those events compute",
    "start": "353659",
    "end": "361969"
  },
  {
    "text": "against the data the moment the data arrives in the cloud or is to be in",
    "start": "361969",
    "end": "367189"
  },
  {
    "text": "generated nothing to manage no operating systems no servers no high availability",
    "start": "367189",
    "end": "374330"
  },
  {
    "text": "to manage no auto scaling even lambda takes care of everything all you need to",
    "start": "374330",
    "end": "381379"
  },
  {
    "text": "do is provide your coat and lambda execute it and it scales automatically",
    "start": "381379",
    "end": "386960"
  },
  {
    "text": "to any scale so it doesn't matter if your function has to execute once a day",
    "start": "386960",
    "end": "392270"
  },
  {
    "text": "or a million times per hour lambda will execute it in milliseconds and is and it",
    "start": "392270",
    "end": "398779"
  },
  {
    "text": "is impossible to over provision or under promise on your system you don't provision lambda simply runs your coat",
    "start": "398779",
    "end": "405830"
  },
  {
    "text": "whenever the event that you are interested in happens or whenever you call the lambda function lambda is super",
    "start": "405830",
    "end": "414020"
  },
  {
    "text": "fast it executes your code in milliseconds at any scale and it's extremely cost and recent resource",
    "start": "414020",
    "end": "420740"
  },
  {
    "text": "efficient now with lambda there is a generous free tier and after that you",
    "start": "420740",
    "end": "426890"
  },
  {
    "text": "are built at 100 millisecond granularity of compute chunks a hundred millisecond",
    "start": "426890",
    "end": "434180"
  },
  {
    "text": "granularity so for example if your function execution takes 150 milliseconds you are built for 200",
    "start": "434180",
    "end": "441110"
  },
  {
    "text": "milliseconds that's it that's all you consumed it's very fine-grained so",
    "start": "441110",
    "end": "447560"
  },
  {
    "text": "that's all fine but I said earlier you don't need server so how do we get",
    "start": "447560",
    "end": "453470"
  },
  {
    "text": "around that well one way is to start making two-tier architectures for your",
    "start": "453470",
    "end": "459260"
  },
  {
    "text": "application a traditional architecture would be treat here on the left-hand",
    "start": "459260",
    "end": "464450"
  },
  {
    "text": "side you have your clients and customers using your service then you have a server tier the two minutes probably",
    "start": "464450",
    "end": "470990"
  },
  {
    "text": "with elastic load balancing order scaling to respond to the demands and",
    "start": "470990",
    "end": "476540"
  },
  {
    "text": "needs and behind your servers you then have the rest of your services like your",
    "start": "476540",
    "end": "481610"
  },
  {
    "text": "database is your storage system etc that's fine but what we could do",
    "start": "481610",
    "end": "487010"
  },
  {
    "text": "nowadays is this dump the server tier execute your code directly on the",
    "start": "487010",
    "end": "494360"
  },
  {
    "text": "customer device for example on the browser maybe on an IOT device with our IOT SDK and with the ADA place SDK",
    "start": "494360",
    "end": "502550"
  },
  {
    "text": "directly running on the customer device your code and the customary by scales horizontally with the number of clients",
    "start": "502550",
    "end": "508940"
  },
  {
    "text": "and each one of the clients can go directly to the ADA players back-end services where you run your back-end",
    "start": "508940",
    "end": "515300"
  },
  {
    "text": "system securely authenticated access control fully horizontally scaling and",
    "start": "515300",
    "end": "521030"
  },
  {
    "text": "crucially you don't have a survey tier to manage at all in this scenario so one",
    "start": "521030",
    "end": "527360"
  },
  {
    "text": "example is the ADA police JavaScript SDK for browsers that lets your browser's",
    "start": "527360",
    "end": "532900"
  },
  {
    "text": "mobile or desktop laptop execute your quote JavaScript on the browser and",
    "start": "532900",
    "end": "539060"
  },
  {
    "text": "have ta de polis libraries to interact with things like dynamo da ps3 and the",
    "start": "539060",
    "end": "544070"
  },
  {
    "text": "rest of the services how do we deliver your application to the customer in this scenario for example with s3 so Amazon",
    "start": "544070",
    "end": "553370"
  },
  {
    "text": "s3 is not just a storage system on saw service it's also able to deliver",
    "start": "553370",
    "end": "559010"
  },
  {
    "text": "content to the customers over the web and of course you can accelerate and catch this delivery scale out globally",
    "start": "559010",
    "end": "566870"
  },
  {
    "text": "by using Amazon CloudFront CDN in front of that so that's a simple way to",
    "start": "566870",
    "end": "572029"
  },
  {
    "text": "deliver your application to the customer devices fine we need state lambda",
    "start": "572029",
    "end": "581600"
  },
  {
    "text": "functions are stateless they execute when the event happens it's fire-and-forget they execute they do",
    "start": "581600",
    "end": "587930"
  },
  {
    "text": "something with the data maple to new data somewhere else where is the session state where is the gaming state where is",
    "start": "587930",
    "end": "594440"
  },
  {
    "text": "the shopping cart for example here so when you use AWS lambda lambda functions",
    "start": "594440",
    "end": "601160"
  },
  {
    "text": "are stateless when they execute they're small they're fast they're fire-and-forget instant amnesia you have",
    "start": "601160",
    "end": "607880"
  },
  {
    "text": "to keep the state somewhere else and the recommendation is to keep the state in",
    "start": "607880",
    "end": "613670"
  },
  {
    "text": "another service that is fast durable highly available for you to get the",
    "start": "613670",
    "end": "620120"
  },
  {
    "text": "session state and update it dynamo DP is perfect for that so dynamo DP is a no",
    "start": "620120",
    "end": "625310"
  },
  {
    "text": "SQL service which is 0 administration you don't install dynamo DP you simply",
    "start": "625310",
    "end": "631730"
  },
  {
    "text": "create tables you define your indexes and then you specify the performance the",
    "start": "631730",
    "end": "637310"
  },
  {
    "text": "true put that you need from your tables and you can change that while you're in production more unless dynamo DP",
    "start": "637310",
    "end": "645470"
  },
  {
    "text": "provides unlimited storage capacity and provision throughput and ket consistently fast speed single-digit",
    "start": "645470",
    "end": "653240"
  },
  {
    "text": "millisecond response times so this is a great place to keep the session state one example so now let's go to a demo",
    "start": "653240",
    "end": "661579"
  },
  {
    "text": "and this is the demo system that we are going to be building together",
    "start": "661579",
    "end": "668440"
  },
  {
    "text": "doesn't have any service so we are going to be running the application on my browser with the data police JavaScript",
    "start": "668760",
    "end": "674820"
  },
  {
    "text": "SDK we will deliver the JavaScript to my browser from s3 directly no web servers",
    "start": "674820",
    "end": "681480"
  },
  {
    "text": "need it we will authenticate with Facebook once I'm authenticated as an administrator the cloud will give me",
    "start": "681480",
    "end": "689310"
  },
  {
    "text": "temporary session keys so that I can securely authenticate it have access",
    "start": "689310",
    "end": "694770"
  },
  {
    "text": "control to those granular resources that I need so once we are authenticated we",
    "start": "694770",
    "end": "699840"
  },
  {
    "text": "get keys from the cloud and then the JavaScript SDK application can manipulate DynamoDB directly store files",
    "start": "699840",
    "end": "707970"
  },
  {
    "text": "in s3 and then this is a dynamic block application if I upload a new block",
    "start": "707970",
    "end": "714180"
  },
  {
    "text": "entry the metadata cause to dynamo DP and the picture if I upload it goes to",
    "start": "714180",
    "end": "719670"
  },
  {
    "text": "s3 and then one more thing there's a lambda function attached to the sgs3",
    "start": "719670",
    "end": "725430"
  },
  {
    "text": "pocket if theres a new pic so in the s3 bucket it kicks off a lambda function",
    "start": "725430",
    "end": "730500"
  },
  {
    "text": "that makes a thumbnail of that picture so all of these services scale out fully",
    "start": "730500",
    "end": "736350"
  },
  {
    "text": "horizontally unlimited scale so let's see the demo so we'll switch to my browser make a bit bigger for you so",
    "start": "736350",
    "end": "747660"
  },
  {
    "text": "this is the particular bucket that i will be using for the demo as you can see it's currently empty I have not",
    "start": "747660",
    "end": "754620"
  },
  {
    "text": "deployed my application yet let's deploy it together so here is my terminal so in",
    "start": "754620",
    "end": "764160"
  },
  {
    "text": "my laptop I have two chava script application you can see that this index.html there's some JavaScript CSS",
    "start": "764160",
    "end": "770010"
  },
  {
    "text": "etc and I have a little script here that simply uses the AWS command-line tool to",
    "start": "770010",
    "end": "777720"
  },
  {
    "text": "synchronize this directory on my laptop with that pocket in s3 and it sets the",
    "start": "777720",
    "end": "784080"
  },
  {
    "text": "files to be publicly accessible because this is something that customers will need to access and download so there we",
    "start": "784080",
    "end": "792000"
  },
  {
    "text": "go by executing this one command we now should have deployed our application to",
    "start": "792000",
    "end": "797040"
  },
  {
    "text": "the s3 bucket so we have if you will deploy the application to production now",
    "start": "797040",
    "end": "802259"
  },
  {
    "text": "you don't have a server we're using s3 service for delivering the application now we have the files in the pocket the",
    "start": "802259",
    "end": "809100"
  },
  {
    "text": "application how do we deliver it to the customer client my browser when I select",
    "start": "809100",
    "end": "814290"
  },
  {
    "text": "the index dot HTML file you can see that s 3 is giving me a link and of course",
    "start": "814290",
    "end": "820470"
  },
  {
    "text": "you could use MS and route 53 to put a nice hostname and domain name for this",
    "start": "820470",
    "end": "825899"
  },
  {
    "text": "application linked so now when I click this link what happens is that my",
    "start": "825899",
    "end": "831779"
  },
  {
    "text": "browser now download it the file from s3 without any web servers now let's also",
    "start": "831779",
    "end": "840989"
  },
  {
    "text": "show you the JavaScript console so you can see what happens so now we are running the JavaScript on my laptop here",
    "start": "840989",
    "end": "847049"
  },
  {
    "text": "and let's now click the login button let's log in as an administrator so as",
    "start": "847049",
    "end": "857879"
  },
  {
    "text": "you can see there is a facebook authentication that popped up so in the JavaScript that we download it for the",
    "start": "857879",
    "end": "864689"
  },
  {
    "text": "login button it directs us to Facebook so let me now log into Facebook and what",
    "start": "864689",
    "end": "871709"
  },
  {
    "text": "happened on the top right of the screen is that the login button change to logout and there's a new button post so",
    "start": "871709",
    "end": "878220"
  },
  {
    "text": "we are now locked in as an administrator but how did that actually happen here",
    "start": "878220",
    "end": "889069"
  },
  {
    "text": "zooming so that you can see better when I click the login button then the",
    "start": "889069",
    "end": "896220"
  },
  {
    "text": "JavaScript application contacted graph dot facebook.com with this Facebook's identity provider and then when the",
    "start": "896220",
    "end": "904049"
  },
  {
    "text": "login was successful you can see that the JavaScript used a SS STS simple",
    "start": "904049",
    "end": "910109"
  },
  {
    "text": "token service to generate session keys for this browser for this instance of",
    "start": "910109",
    "end": "916019"
  },
  {
    "text": "the application and its associated with an i am role identity and access",
    "start": "916019",
    "end": "922529"
  },
  {
    "text": "management role so first we authenticate it with the provider facebook once the",
    "start": "922529",
    "end": "927899"
  },
  {
    "text": "authentication was successful we then generate obsession keys and they are",
    "start": "927899",
    "end": "932970"
  },
  {
    "text": "attached to an IAM role for granular security let's take a look at that role",
    "start": "932970",
    "end": "939290"
  },
  {
    "text": "so here i have the same IM roll this is the IM console how did the authentication happen well there is a",
    "start": "939290",
    "end": "947279"
  },
  {
    "text": "trust relationship so we can see here that there's a trusted entity facebook.com and there's a particular",
    "start": "947279",
    "end": "954060"
  },
  {
    "text": "application ID so if you look at the application ID it ends it ends with 31",
    "start": "954060",
    "end": "960149"
  },
  {
    "text": "31 if i go to my facebook developer pages you can see that the same",
    "start": "960149",
    "end": "968670"
  },
  {
    "text": "application ID is here so all i needed to do was register an application in facebook facebook generates an",
    "start": "968670",
    "end": "975600"
  },
  {
    "text": "application ID i copied that and i put it in a de polis I am console for this",
    "start": "975600",
    "end": "981839"
  },
  {
    "text": "particular role that is the trust relationship so now i am trusts facebook",
    "start": "981839",
    "end": "987839"
  },
  {
    "text": "for this application facebook says yes he is who he says he is and then the rest of the IM role has the policies",
    "start": "987839",
    "end": "994649"
  },
  {
    "text": "that i can access a dynamo DB table and the particular s3 bucket but nothing",
    "start": "994649",
    "end": "1000589"
  },
  {
    "text": "else so that was the authentication let's now create a blog entry directly",
    "start": "1000589",
    "end": "1007040"
  },
  {
    "text": "from the browser but first let's see what we have so in s3 we only have now",
    "start": "1007040",
    "end": "1012829"
  },
  {
    "text": "the application we don't have any pictures we haven't uploaded any there is a dynamo DB table as well so this",
    "start": "1012829",
    "end": "1020570"
  },
  {
    "text": "particular application has a dynamo DB table but when I scan the table dynamo",
    "start": "1020570",
    "end": "1026480"
  },
  {
    "text": "DB tells us the table is empty there is nothing there so let's create a new blog",
    "start": "1026480",
    "end": "1031910"
  },
  {
    "text": "entry directly from the browser I click on post hello oedipal s summit Singapore",
    "start": "1031910",
    "end": "1042668"
  },
  {
    "text": "some text this is a Porsche 917 k and",
    "start": "1043360",
    "end": "1051700"
  },
  {
    "text": "let's add that's a picture from my laptop my favorite racing car from 1970",
    "start": "1051700",
    "end": "1061150"
  },
  {
    "text": "so I select the picture from my laptop we are running the JavaScript to my browser I click the publish button and",
    "start": "1061150",
    "end": "1067940"
  },
  {
    "text": "now the JavaScript on my laptop with the keys that we will be generated automatically with the I am",
    "start": "1067940",
    "end": "1074030"
  },
  {
    "text": "role that allows access to the s3 pocket then dynamodb should be able to upload this blog entry to assist them in the",
    "start": "1074030",
    "end": "1081260"
  },
  {
    "text": "back end so there's the block entry and when we look at the console here JavaScript console we can see that a",
    "start": "1081260",
    "end": "1087290"
  },
  {
    "text": "couple of things happened there is an AWS s3 javascript call put object so",
    "start": "1087290",
    "end": "1095300"
  },
  {
    "text": "create a new object in the pocket 917 medium dot JPEG it's an image jpg so it",
    "start": "1095300",
    "end": "1100850"
  },
  {
    "text": "uploaded the picture and a SS DynamoDB put by them where the JavaScript put the",
    "start": "1100850",
    "end": "1107780"
  },
  {
    "text": "metadata the text that i wrote to the table so using the keys and the policies",
    "start": "1107780",
    "end": "1113060"
  },
  {
    "text": "we are able to do that now when we scan the dynamo DB table we can see that there is an entry here it has the text",
    "start": "1113060",
    "end": "1120650"
  },
  {
    "text": "that you saw this is a Porsche 917 so the JavaScript on my browser is now able to communicate with dynamo DP directly",
    "start": "1120650",
    "end": "1127910"
  },
  {
    "text": "and securely and when we look at the s3 bucket we can see that there is an asset",
    "start": "1127910",
    "end": "1135680"
  },
  {
    "text": "there is a picture this is the picture of the poor set so it was uploaded by my browser to that s3 bucket using the keys",
    "start": "1135680",
    "end": "1142490"
  },
  {
    "text": "and policies and there is something else there is a thumbnail there's a little",
    "start": "1142490",
    "end": "1148340"
  },
  {
    "text": "picture that's only two kilobytes how did that come their aid Apple s lambda so now i will show you ate apple s",
    "start": "1148340",
    "end": "1155570"
  },
  {
    "text": "lambda when i select the bucket itself and i look at the properties of the",
    "start": "1155570",
    "end": "1161360"
  },
  {
    "text": "pocket i have defined an event in this s3 bucket the event is if there is a new",
    "start": "1161360",
    "end": "1168530"
  },
  {
    "text": "object created in this pocket it executes a lambda function called s3",
    "start": "1168530",
    "end": "1175040"
  },
  {
    "text": "create thumbnail so the moment there is a new object in this pocket like the",
    "start": "1175040",
    "end": "1180170"
  },
  {
    "text": "picture uploaded it executes a lambda function let's go to that lambda function now so this is the console of a",
    "start": "1180170",
    "end": "1188270"
  },
  {
    "text": "double s lambda it's very easy to use all you need to do is upload or call your functions at that stem to events",
    "start": "1188270",
    "end": "1194900"
  },
  {
    "text": "and that's it so by the way look at this I have 5 lambda functions so I five",
    "start": "1194900",
    "end": "1202220"
  },
  {
    "text": "different code code things in lambda they are only 2.9 kilo bytes of storage they are 2.9 kilobytes",
    "start": "1202220",
    "end": "1209309"
  },
  {
    "text": "this thumbnail of a function is less than 1 kilobyte in size you can specify",
    "start": "1209309",
    "end": "1214889"
  },
  {
    "text": "the memory that you are located this function execution and then a timeout lambda will retry and it provides you",
    "start": "1214889",
    "end": "1223950"
  },
  {
    "text": "monitoring cloud wats monitoring for example for the average duration of the",
    "start": "1223950",
    "end": "1229139"
  },
  {
    "text": "execution so this one on average has taken 212 milliseconds to execute so",
    "start": "1229139",
    "end": "1235230"
  },
  {
    "text": "then you can tune your memory and your timeout values accordingly it provides you looks so obviously you need to do",
    "start": "1235230",
    "end": "1242279"
  },
  {
    "text": "some troubleshooting so if and when you're coding lambda you want to see",
    "start": "1242279",
    "end": "1249480"
  },
  {
    "text": "what's going on you can see that in cloud wats looks now the locks are",
    "start": "1249480",
    "end": "1254549"
  },
  {
    "text": "ordered by time of creation and we can take you directly to the right log file for that lambda function so you can",
    "start": "1254549",
    "end": "1261779"
  },
  {
    "text": "easily find the events so you can output your debug log outputs here you can see",
    "start": "1261779",
    "end": "1266850"
  },
  {
    "text": "what's going on good how does that function look like you can also do unit",
    "start": "1266850",
    "end": "1277440"
  },
  {
    "text": "testing and development directly in the lambda console unit testing means that you can invoke the function directly",
    "start": "1277440",
    "end": "1283350"
  },
  {
    "text": "from the console basically simulating the event that actually happens like a new file but this is what I wanted to",
    "start": "1283350",
    "end": "1289409"
  },
  {
    "text": "show you this is the lambda function that creates the thumbnail we load the AWS sdk this is no tas we make an s3",
    "start": "1289409",
    "end": "1298289"
  },
  {
    "text": "client and we use also the image magic external library you can bundle your",
    "start": "1298289",
    "end": "1303809"
  },
  {
    "text": "external libraries with your code in a zip file and upload them to lambda this",
    "start": "1303809",
    "end": "1308940"
  },
  {
    "text": "is a very simple function it gets the file the new file that was put in the pocket and then it calls the image magic",
    "start": "1308940",
    "end": "1317249"
  },
  {
    "text": "resize function to make a small version of the picture if that is successful it",
    "start": "1317249",
    "end": "1322799"
  },
  {
    "text": "uses the a SS SDK to put the thumbnail as a new object it back in the same",
    "start": "1322799",
    "end": "1328619"
  },
  {
    "text": "pocket with the name thumbnail minus original name and that's it it's only 56",
    "start": "1328619",
    "end": "1335340"
  },
  {
    "text": "lines of code that the point of lambda small little cloud functions that are useful so let's do",
    "start": "1335340",
    "end": "1346679"
  },
  {
    "text": "one thing let's delete this block entry now it's gone from this block we go back",
    "start": "1346679",
    "end": "1352020"
  },
  {
    "text": "to dynamo DP we scan the table again done it's empty again so that was the",
    "start": "1352020",
    "end": "1358140"
  },
  {
    "text": "first demo a completely serverless system JavaScript SDK s3 dynamo DB and",
    "start": "1358140",
    "end": "1366570"
  },
  {
    "text": "lambda and Facebook authentication that was an example of an asynchronous lambda",
    "start": "1366570",
    "end": "1373350"
  },
  {
    "text": "called asynchronous call something happened there's a new file picture of a poor set it kicks off a lambda function",
    "start": "1373350",
    "end": "1379230"
  },
  {
    "text": "that does its thing and then it's done but customers were asking when we",
    "start": "1379230",
    "end": "1385590"
  },
  {
    "text": "introduced lambda they wanted to have synchronous lambda calls synchronous",
    "start": "1385590",
    "end": "1390809"
  },
  {
    "text": "call means that you can call lambda and wait for the response basically you can",
    "start": "1390809",
    "end": "1395970"
  },
  {
    "text": "offload compute to lambda directly from your coat now this is interesting it",
    "start": "1395970",
    "end": "1403919"
  },
  {
    "text": "works like this let's say again that you're running for example the oedipal is JavaScript SDK on the browser you",
    "start": "1403919",
    "end": "1410549"
  },
  {
    "text": "have functions that you have defined in your JavaScript they execute on your browser nicely one of the function",
    "start": "1410549",
    "end": "1415890"
  },
  {
    "text": "happens to point to lambda so you can program lambda to do stuff for you in",
    "start": "1415890",
    "end": "1421140"
  },
  {
    "text": "your application just like if it was executing locally you just call a lambda function you make the SDK makes a",
    "start": "1421140",
    "end": "1428940"
  },
  {
    "text": "request to lambda lambda execute your function and gives a response back to your code to your application and if you",
    "start": "1428940",
    "end": "1436590"
  },
  {
    "text": "need to you can use all the other ADA police services behind lambda so your",
    "start": "1436590",
    "end": "1442230"
  },
  {
    "text": "lambda function can use the ada police SDK for example to note chase SDK to use",
    "start": "1442230",
    "end": "1448159"
  },
  {
    "text": "dynamodb ps3 SQS SNS Kinesis whatever it needs so basically with the synchronous",
    "start": "1448159",
    "end": "1457049"
  },
  {
    "text": "lambda call your application running on the customer browser has an unlimited scale supercomputer if you will",
    "start": "1457049",
    "end": "1464220"
  },
  {
    "text": "executing in the background with a SS lambda all you need to do is call lambda",
    "start": "1464220",
    "end": "1469770"
  },
  {
    "text": "functions here's an example from the ADA polished JavaScript SDK of calling an external",
    "start": "1469770",
    "end": "1475660"
  },
  {
    "text": "lambda function in synchronous mode so we load the ADA plus sdk JavaScript then",
    "start": "1475660",
    "end": "1482500"
  },
  {
    "text": "we make a lambda object here new ADA plus lambda object and all you need to",
    "start": "1482500",
    "end": "1488110"
  },
  {
    "text": "do after that is to invoke a lambda function you tell lambda which function",
    "start": "1488110",
    "end": "1493360"
  },
  {
    "text": "you want to execute you give it some payload and that's it you get a response",
    "start": "1493360",
    "end": "1499180"
  },
  {
    "text": "from lambda and you continue working lambda can do the super computer stuff",
    "start": "1499180",
    "end": "1504880"
  },
  {
    "text": "in the background using the capacity of the cloud so the second demo I would",
    "start": "1504880",
    "end": "1510910"
  },
  {
    "text": "like to show you is exactly that let's take a look at synchronous function",
    "start": "1510910",
    "end": "1516040"
  },
  {
    "text": "execution with AWS lambda it's similar to the previous demo we are still going to use the browser AWS JavaScript SDK",
    "start": "1516040",
    "end": "1523990"
  },
  {
    "text": "for the browser we are going to deliver the JavaScript application from s3 to",
    "start": "1523990",
    "end": "1530290"
  },
  {
    "text": "the browser just like you saw earlier but after this the application running on the browser is only communicating",
    "start": "1530290",
    "end": "1537370"
  },
  {
    "text": "with lambda it's only calling help from lambda lambda in the background can use",
    "start": "1537370",
    "end": "1543460"
  },
  {
    "text": "the rest of the services like dynamo DP and the simple notification service all",
    "start": "1543460",
    "end": "1549130"
  },
  {
    "text": "the application needs to do is call lambda functions lambda will handle the rest of the cloud behind the scenes so",
    "start": "1549130",
    "end": "1556540"
  },
  {
    "text": "let's go to this demo",
    "start": "1556540",
    "end": "1559410"
  },
  {
    "text": "okay this is the second pocket just like you saw earlier i use s3 to deliver the",
    "start": "1565890",
    "end": "1572250"
  },
  {
    "text": "application to the browser so this is the second application that uses synchronous calls there is a link there",
    "start": "1572250",
    "end": "1579030"
  },
  {
    "text": "and i have already opened here in the Firefox and I ignore the update go away",
    "start": "1579030",
    "end": "1587360"
  },
  {
    "text": "there you go so this is the second JavaScript application now it says it's",
    "start": "1590450",
    "end": "1597990"
  },
  {
    "text": "an edible as lambda demo we can load some comments this is also block system it's a different one we can post some",
    "start": "1597990",
    "end": "1604770"
  },
  {
    "text": "comments and what I have opened here on the bottom is the network monitoring",
    "start": "1604770",
    "end": "1610020"
  },
  {
    "text": "developer tool but before we do anything let's take a look at the code the code",
    "start": "1610020",
    "end": "1617370"
  },
  {
    "text": "that is now running on my browser",
    "start": "1617370",
    "end": "1620930"
  },
  {
    "text": "like it's a little bit bigger for you guys okay so this is the javascript",
    "start": "1628080",
    "end": "1634260"
  },
  {
    "text": "running on the browser right now it creates a new lambda object and then we",
    "start": "1634260",
    "end": "1639600"
  },
  {
    "text": "have a couple of buttons on the screen there's a load comments button if we click that button it invokes and lambda",
    "start": "1639600",
    "end": "1646440"
  },
  {
    "text": "function called get all posts so when we click the button it invokes a lambda",
    "start": "1646440",
    "end": "1652260"
  },
  {
    "text": "function and lambda is supposed to get the block comments from somewhere we will see later from where then lambda",
    "start": "1652260",
    "end": "1658529"
  },
  {
    "text": "wrist splint responds with the data Oh potentially an arrow if something goes wrong goes wrong if it was successful",
    "start": "1658529",
    "end": "1665480"
  },
  {
    "text": "the JavaScript will simply insert the new comments to the web page that we are",
    "start": "1665480",
    "end": "1670830"
  },
  {
    "text": "viewing so get the data from lambda and then display them on the screen let's go",
    "start": "1670830",
    "end": "1677279"
  },
  {
    "text": "to the actual code in lambda so remember if we press the button it executes the",
    "start": "1677279",
    "end": "1683190"
  },
  {
    "text": "lambda function called get all posts okay where is that get all posts this is",
    "start": "1683190",
    "end": "1694620"
  },
  {
    "text": "the lambda function you can see is a matrix there invocations execution",
    "start": "1694620",
    "end": "1700200"
  },
  {
    "text": "duration let's take a look at the function itself get all posts so if i",
    "start": "1700200",
    "end": "1705330"
  },
  {
    "text": "press the button the javascript is calling that lambda function and it execute this code what does it do ah it",
    "start": "1705330",
    "end": "1713880"
  },
  {
    "text": "creates a new DynamoDB object and it",
    "start": "1713880",
    "end": "1718980"
  },
  {
    "text": "makes a query to DynamoDB and gets the block comments from dynamo DP so the",
    "start": "1718980",
    "end": "1726389"
  },
  {
    "text": "JavaScript application doesn't have to do it it just as lambda can you please give me the latest blog comments the",
    "start": "1726389",
    "end": "1732029"
  },
  {
    "text": "lambda function uses the dynamo DP object and communicates with dynamo DP",
    "start": "1732029",
    "end": "1737760"
  },
  {
    "text": "and then when there's a response from dynamo DP the lambda function will return the comments they go back to the",
    "start": "1737760",
    "end": "1747120"
  },
  {
    "text": "JavaScript code which is then displaying them on the screen so let's see how that",
    "start": "1747120",
    "end": "1752880"
  },
  {
    "text": "works let's see what we have in dynamo DP first do we have any comments in the",
    "start": "1752880",
    "end": "1758610"
  },
  {
    "text": "dynamo DB table so in DynamoDB I have a table called",
    "start": "1758610",
    "end": "1764909"
  },
  {
    "text": "lambda demo posts let's go to that table and scan it we have two comments already",
    "start": "1764909",
    "end": "1771779"
  },
  {
    "text": "in the dynamo DB table a SS IOT hack day was awesome and I look forward to the",
    "start": "1771779",
    "end": "1776849"
  },
  {
    "text": "edible estimate Singapore so the table has some data some comments let's go",
    "start": "1776849",
    "end": "1784859"
  },
  {
    "text": "back to the application I click the button see what happens now if you look",
    "start": "1784859",
    "end": "1791639"
  },
  {
    "text": "at the network monitoring here you saw that when i click the button that javascript running on my browser talks",
    "start": "1791639",
    "end": "1798539"
  },
  {
    "text": "to lambda dot us ways to dot amazon AWS comm center json object there and then",
    "start": "1798539",
    "end": "1806340"
  },
  {
    "text": "there's the response times so the application running my browser only talks to lambda with a synchronous",
    "start": "1806340",
    "end": "1812340"
  },
  {
    "text": "function gets a response and then is able to gate take from the lambda",
    "start": "1812340",
    "end": "1818039"
  },
  {
    "text": "response that payload and then display them on the screen here so lambda use DynamoDB in the background let's make a",
    "start": "1818039",
    "end": "1825389"
  },
  {
    "text": "new comment if i post a new comment what happens there's another piece of",
    "start": "1825389",
    "end": "1831899"
  },
  {
    "text": "JavaScript code on the browser if I click the post button it takes the text",
    "start": "1831899",
    "end": "1837570"
  },
  {
    "text": "that i wrote and calls another for lambda function create new post and then",
    "start": "1837570",
    "end": "1844799"
  },
  {
    "text": "since the payload of the of the text that i wrote to that lambda function on",
    "start": "1844799",
    "end": "1851059"
  },
  {
    "text": "the other side in a depressed lambda",
    "start": "1851059",
    "end": "1857570"
  },
  {
    "text": "what happens if we call that lambda function create new post so if we get a",
    "start": "1859669",
    "end": "1869669"
  },
  {
    "text": "call in lambda for this function create new post it makes a dynamo DB object",
    "start": "1869669",
    "end": "1874979"
  },
  {
    "text": "again and a simple notification service object the first thing that the lambda",
    "start": "1874979",
    "end": "1880109"
  },
  {
    "text": "function does is that it takes the payload the text that we write and it puts them in dynamo dB and if that was",
    "start": "1880109",
    "end": "1889320"
  },
  {
    "text": "successful it will also send a notification to the simple notification",
    "start": "1889320",
    "end": "1895030"
  },
  {
    "text": "service with ms on SNS you can deliver notifications to things like email other",
    "start": "1895030",
    "end": "1901030"
  },
  {
    "text": "applications or mobile devices and I have registered a topic in Amazon SNS",
    "start": "1901030",
    "end": "1908440"
  },
  {
    "text": "simple notification service this is the topic where we should get the notification and I have to subscriptions",
    "start": "1908440",
    "end": "1915310"
  },
  {
    "text": "I have my email and my phone so the point is that if there's a new blog",
    "start": "1915310",
    "end": "1922090"
  },
  {
    "text": "entry in that table in that block I want to be notified on my phone and my email",
    "start": "1922090",
    "end": "1929950"
  },
  {
    "text": "let's see what happens let's go back to that client browser this is a new",
    "start": "1929950",
    "end": "1936910"
  },
  {
    "text": "comment on my dynamic block click post",
    "start": "1936910",
    "end": "1944910"
  },
  {
    "text": "and what happens here in the network monitoring is that we invoke lambda",
    "start": "1944910",
    "end": "1951430"
  },
  {
    "text": "function and something happened on my phone hello",
    "start": "1951430",
    "end": "1962820"
  },
  {
    "text": "I got a notification message on my mobile phone new comment this is a new",
    "start": "1964169",
    "end": "1969720"
  },
  {
    "text": "comment on my dynamic block so the same text it was delivered as a push notification on my phone it's visible",
    "start": "1969720",
    "end": "1977639"
  },
  {
    "text": "here on the block itself and if we call",
    "start": "1977639",
    "end": "1983519"
  },
  {
    "text": "to my email inbox there is a new email a",
    "start": "1983519",
    "end": "1988859"
  },
  {
    "text": "SS notifications new comment on a double s lambda demo this is a new comment on",
    "start": "1988859",
    "end": "1994679"
  },
  {
    "text": "my dynamic block so I got an email through the SNS service and I gotta push",
    "start": "1994679",
    "end": "1999869"
  },
  {
    "text": "notification on my phone and in dynamo",
    "start": "1999869",
    "end": "2006710"
  },
  {
    "text": "DP if we scan the table we should have one more entry here there you go this is",
    "start": "2006710",
    "end": "2011720"
  },
  {
    "text": "a new comment",
    "start": "2011720",
    "end": "2014350"
  },
  {
    "text": "so that was a quick demo so in the synchronous calling of lambda functions just to recap we delivered the",
    "start": "2022480",
    "end": "2029169"
  },
  {
    "text": "JavaScript to my browser a topology of our JavaScript SDK for the browsers it",
    "start": "2029169",
    "end": "2034750"
  },
  {
    "text": "only communicated lambda lambda used in the background the lambda function used",
    "start": "2034750",
    "end": "2039940"
  },
  {
    "text": "dynamo DP and simple notification service to work with the backend system but for the client only communication",
    "start": "2039940",
    "end": "2046840"
  },
  {
    "text": "from the local code was with lambda functions so we offloaded compute and logic to lambda and the rest of ADA",
    "start": "2046840",
    "end": "2053560"
  },
  {
    "text": "police because servers are just so last season that was my presentation I really",
    "start": "2053560",
    "end": "2063398"
  },
  {
    "text": "hope that you enjoyed server less computing thank you",
    "start": "2063399",
    "end": "2067590"
  }
]