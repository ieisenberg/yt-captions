[
  {
    "text": "hello everyone welcome to the",
    "start": "1860",
    "end": "3899"
  },
  {
    "text": "presentation on monitoring solution for",
    "start": "3899",
    "end": "6480"
  },
  {
    "text": "RDS custom for SQL server using Amazon",
    "start": "6480",
    "end": "8460"
  },
  {
    "text": "cloudwatch in this presentation we will",
    "start": "8460",
    "end": "11580"
  },
  {
    "text": "be discussing briefly about the RTS",
    "start": "11580",
    "end": "13320"
  },
  {
    "text": "custom for SQL server and the monitoring",
    "start": "13320",
    "end": "15420"
  },
  {
    "text": "tool we will explore how this",
    "start": "15420",
    "end": "17460"
  },
  {
    "text": "combination of this SQL Server instance",
    "start": "17460",
    "end": "19920"
  },
  {
    "text": "and the monitoring tool can help you",
    "start": "19920",
    "end": "21600"
  },
  {
    "text": "gain a better visibility on the RDS",
    "start": "21600",
    "end": "23699"
  },
  {
    "text": "custom instance and at the same time you",
    "start": "23699",
    "end": "25859"
  },
  {
    "text": "can monitor the performance metrics and",
    "start": "25859",
    "end": "27599"
  },
  {
    "text": "troubleshoot any issues that might come",
    "start": "27599",
    "end": "29279"
  },
  {
    "text": "after",
    "start": "29279",
    "end": "30980"
  },
  {
    "text": "a senior database specialist partner",
    "start": "30980",
    "end": "33420"
  },
  {
    "text": "Solutions architect at AWS I work with",
    "start": "33420",
    "end": "36000"
  },
  {
    "text": "AWS Partners to provide technical",
    "start": "36000",
    "end": "37920"
  },
  {
    "text": "guidance and assistance thus enabling",
    "start": "37920",
    "end": "40320"
  },
  {
    "text": "them to build a highly scalable and a",
    "start": "40320",
    "end": "42360"
  },
  {
    "text": "secure solution in the cloud along with",
    "start": "42360",
    "end": "43980"
  },
  {
    "text": "me I have my colleagues Sid Joshi and",
    "start": "43980",
    "end": "46559"
  },
  {
    "text": "Nanda chinappa Sida Nanda can you",
    "start": "46559",
    "end": "49079"
  },
  {
    "text": "introduce yourself",
    "start": "49079",
    "end": "51620"
  },
  {
    "text": "hi I'm Sid Joshi I'm a Solutions",
    "start": "52020",
    "end": "54059"
  },
  {
    "text": "architect working on the Mid-Atlantic",
    "start": "54059",
    "end": "55920"
  },
  {
    "text": "team in the US my job is to act as a",
    "start": "55920",
    "end": "58500"
  },
  {
    "text": "technical advisor for my customers and",
    "start": "58500",
    "end": "60420"
  },
  {
    "text": "find solutions for the use cases my",
    "start": "60420",
    "end": "63180"
  },
  {
    "text": "specialization is observability",
    "start": "63180",
    "end": "66540"
  },
  {
    "text": "hello everyone my name is Nanda chinapa",
    "start": "66540",
    "end": "69240"
  },
  {
    "text": "and I am a cloud infrastructure",
    "start": "69240",
    "end": "70680"
  },
  {
    "text": "architect at AWS Professional Services",
    "start": "70680",
    "end": "72240"
  },
  {
    "text": "my area of expertise are infrastructure",
    "start": "72240",
    "end": "74820"
  },
  {
    "text": "automation Cloud migration and databases",
    "start": "74820",
    "end": "77040"
  },
  {
    "text": "I assist AWS customers in adopting the",
    "start": "77040",
    "end": "79439"
  },
  {
    "text": "AWS cloud and achieving the desired",
    "start": "79439",
    "end": "81240"
  },
  {
    "text": "business outcome by implementing cloud",
    "start": "81240",
    "end": "82799"
  },
  {
    "text": "computing initiatives",
    "start": "82799",
    "end": "85820"
  },
  {
    "text": "today's agenda includes discussing RDS",
    "start": "86040",
    "end": "89159"
  },
  {
    "text": "custom for SQL server and its various",
    "start": "89159",
    "end": "91560"
  },
  {
    "text": "use cases for customers",
    "start": "91560",
    "end": "93659"
  },
  {
    "text": "following that we will provide a",
    "start": "93659",
    "end": "95880"
  },
  {
    "text": "solution overview which outlines the",
    "start": "95880",
    "end": "97920"
  },
  {
    "text": "utilization of cloudwatch metrics to",
    "start": "97920",
    "end": "100200"
  },
  {
    "text": "monitor RDS custom for SQL Server",
    "start": "100200",
    "end": "103259"
  },
  {
    "text": "we will explore the cloudwatch metrics",
    "start": "103259",
    "end": "105299"
  },
  {
    "text": "that are automatically generated as part",
    "start": "105299",
    "end": "107640"
  },
  {
    "text": "of the solution",
    "start": "107640",
    "end": "109200"
  },
  {
    "text": "additionally earner will present an",
    "start": "109200",
    "end": "111540"
  },
  {
    "text": "overview of the implementation steps",
    "start": "111540",
    "end": "113159"
  },
  {
    "text": "including the custom scripts we",
    "start": "113159",
    "end": "115079"
  },
  {
    "text": "developed",
    "start": "115079",
    "end": "116280"
  },
  {
    "text": "we will conclude with a demonstration on",
    "start": "116280",
    "end": "118680"
  },
  {
    "text": "how to download install and implement",
    "start": "118680",
    "end": "121020"
  },
  {
    "text": "this tool in a customer's environment",
    "start": "121020",
    "end": "123780"
  },
  {
    "text": "we have successfully implemented this",
    "start": "123780",
    "end": "125399"
  },
  {
    "text": "monitoring solution in multiple custom",
    "start": "125399",
    "end": "127500"
  },
  {
    "text": "environments resulting in their High",
    "start": "127500",
    "end": "129539"
  },
  {
    "text": "satisfaction",
    "start": "129539",
    "end": "130739"
  },
  {
    "text": "so let's get started",
    "start": "130739",
    "end": "133500"
  },
  {
    "text": "Amazon RDS custom is a managed database",
    "start": "133500",
    "end": "136379"
  },
  {
    "text": "service for commercial database engines",
    "start": "136379",
    "end": "138780"
  },
  {
    "text": "such as Oracle and SQL Server it",
    "start": "138780",
    "end": "142020"
  },
  {
    "text": "combines the advantage of a managed",
    "start": "142020",
    "end": "144300"
  },
  {
    "text": "database service including automated",
    "start": "144300",
    "end": "146400"
  },
  {
    "text": "provisioning backup point-in-time",
    "start": "146400",
    "end": "149099"
  },
  {
    "text": "recovery and automation with the added",
    "start": "149099",
    "end": "151620"
  },
  {
    "text": "capability for a database administrator",
    "start": "151620",
    "end": "153599"
  },
  {
    "text": "to access and customize the database",
    "start": "153599",
    "end": "155580"
  },
  {
    "text": "environment and the operating system",
    "start": "155580",
    "end": "158340"
  },
  {
    "text": "with RDS custom for SQL Server customers",
    "start": "158340",
    "end": "161519"
  },
  {
    "text": "now have the flexibility to bring their",
    "start": "161519",
    "end": "163920"
  },
  {
    "text": "own media and patches allowing them to",
    "start": "163920",
    "end": "166500"
  },
  {
    "text": "apply those specific patches",
    "start": "166500",
    "end": "167840"
  },
  {
    "text": "additionally unlike RDS SQL Server which",
    "start": "167840",
    "end": "171720"
  },
  {
    "text": "restricts database admin privileges and",
    "start": "171720",
    "end": "174120"
  },
  {
    "text": "operating system access RDS custom for",
    "start": "174120",
    "end": "176819"
  },
  {
    "text": "SQL Server grants customer assist admin",
    "start": "176819",
    "end": "179340"
  },
  {
    "text": "and admin privileges similar to what",
    "start": "179340",
    "end": "181620"
  },
  {
    "text": "they would have on an on-premise SQL",
    "start": "181620",
    "end": "183300"
  },
  {
    "text": "Server database",
    "start": "183300",
    "end": "185900"
  },
  {
    "text": "now let's take a look at the use cases",
    "start": "186900",
    "end": "189480"
  },
  {
    "text": "of RDS custom for SQL Server granular",
    "start": "189480",
    "end": "192780"
  },
  {
    "text": "control",
    "start": "192780",
    "end": "193680"
  },
  {
    "text": "by having operating system access you",
    "start": "193680",
    "end": "196260"
  },
  {
    "text": "gain the ability to install custom",
    "start": "196260",
    "end": "197940"
  },
  {
    "text": "drivers enable specific features or work",
    "start": "197940",
    "end": "201540"
  },
  {
    "text": "with the application that require",
    "start": "201540",
    "end": "202980"
  },
  {
    "text": "elevated level of access",
    "start": "202980",
    "end": "205620"
  },
  {
    "text": "lift and shift business applications",
    "start": "205620",
    "end": "208200"
  },
  {
    "text": "there are two notable examples Microsoft",
    "start": "208200",
    "end": "210959"
  },
  {
    "text": "SharePoint and Microsoft Dynamics both",
    "start": "210959",
    "end": "213959"
  },
  {
    "text": "of these applications require the",
    "start": "213959",
    "end": "215879"
  },
  {
    "text": "installation of libraries at the",
    "start": "215879",
    "end": "217680"
  },
  {
    "text": "operating system level for the database",
    "start": "217680",
    "end": "219659"
  },
  {
    "text": "instance to function properly",
    "start": "219659",
    "end": "222060"
  },
  {
    "text": "disaster recovery",
    "start": "222060",
    "end": "224220"
  },
  {
    "text": "RS custom for SQL Server provides",
    "start": "224220",
    "end": "226739"
  },
  {
    "text": "capabilities to set up Dr from a",
    "start": "226739",
    "end": "229500"
  },
  {
    "text": "self-managed environment allowing you to",
    "start": "229500",
    "end": "232140"
  },
  {
    "text": "implement measures to protect your",
    "start": "232140",
    "end": "234000"
  },
  {
    "text": "database in case of unexpected events or",
    "start": "234000",
    "end": "236640"
  },
  {
    "text": "system failures",
    "start": "236640",
    "end": "239340"
  },
  {
    "text": "in AWS you have multiple options for",
    "start": "239340",
    "end": "242280"
  },
  {
    "text": "running SQL Server databases",
    "start": "242280",
    "end": "244739"
  },
  {
    "text": "you can choose to deploy them on ec2",
    "start": "244739",
    "end": "247019"
  },
  {
    "text": "which offers a self-managed approach",
    "start": "247019",
    "end": "251000"
  },
  {
    "text": "alternatively you can opt for RDS SQL",
    "start": "251000",
    "end": "253980"
  },
  {
    "text": "Server a fully managed database service",
    "start": "253980",
    "end": "256440"
  },
  {
    "text": "provided by AWS",
    "start": "256440",
    "end": "258720"
  },
  {
    "text": "with RDS SQL Server AWS takes care of",
    "start": "258720",
    "end": "261959"
  },
  {
    "text": "essential tasks such as patching scaling",
    "start": "261959",
    "end": "266540"
  },
  {
    "text": "backups High availability and Disaster",
    "start": "266540",
    "end": "269699"
  },
  {
    "text": "Recovery allowing you and your team to",
    "start": "269699",
    "end": "272280"
  },
  {
    "text": "focus on business and application Level",
    "start": "272280",
    "end": "274560"
  },
  {
    "text": "responsibilities giving you a",
    "start": "274560",
    "end": "276720"
  },
  {
    "text": "Competitive Edge",
    "start": "276720",
    "end": "278759"
  },
  {
    "text": "now there is an additional option",
    "start": "278759",
    "end": "280919"
  },
  {
    "text": "available for running your SQL Server",
    "start": "280919",
    "end": "283320"
  },
  {
    "text": "databases with RDS custom",
    "start": "283320",
    "end": "285900"
  },
  {
    "text": "as shown on screen RDS custom Bridges",
    "start": "285900",
    "end": "289020"
  },
  {
    "text": "the gap between running databases on ec2",
    "start": "289020",
    "end": "292080"
  },
  {
    "text": "and RDS",
    "start": "292080",
    "end": "293820"
  },
  {
    "text": "our primary recommendation for a",
    "start": "293820",
    "end": "295560"
  },
  {
    "text": "workload is to choose RDS if you seek a",
    "start": "295560",
    "end": "298380"
  },
  {
    "text": "fully managed database experience in",
    "start": "298380",
    "end": "300900"
  },
  {
    "text": "this offering AWS fully manages both the",
    "start": "300900",
    "end": "303960"
  },
  {
    "text": "databases and the operating system",
    "start": "303960",
    "end": "307759"
  },
  {
    "text": "however we understand that some",
    "start": "307800",
    "end": "309900"
  },
  {
    "text": "customers have application that require",
    "start": "309900",
    "end": "312540"
  },
  {
    "text": "administrative rights to the database or",
    "start": "312540",
    "end": "315240"
  },
  {
    "text": "underlying system while still designing",
    "start": "315240",
    "end": "317639"
  },
  {
    "text": "a managed database service",
    "start": "317639",
    "end": "319199"
  },
  {
    "text": "for such use cases RDS custom proves to",
    "start": "319199",
    "end": "322500"
  },
  {
    "text": "be the ideal choice",
    "start": "322500",
    "end": "324300"
  },
  {
    "text": "with RDS custom customers retain",
    "start": "324300",
    "end": "326759"
  },
  {
    "text": "complete access to resources and have",
    "start": "326759",
    "end": "329039"
  },
  {
    "text": "the flexibility to make any necessary",
    "start": "329039",
    "end": "331320"
  },
  {
    "text": "changes or customizations that might",
    "start": "331320",
    "end": "334020"
  },
  {
    "text": "impact seamless automation",
    "start": "334020",
    "end": "337280"
  },
  {
    "text": "to address this challenge RS custom",
    "start": "337620",
    "end": "340039"
  },
  {
    "text": "incorporates additional safeguards to",
    "start": "340039",
    "end": "342360"
  },
  {
    "text": "support automation",
    "start": "342360",
    "end": "345138"
  },
  {
    "text": "with RDS custom there's a shared",
    "start": "345720",
    "end": "347820"
  },
  {
    "text": "responsibility between customers and RDS",
    "start": "347820",
    "end": "350639"
  },
  {
    "text": "for tasks like backups and patching",
    "start": "350639",
    "end": "354120"
  },
  {
    "text": "with Amazon res custom for SQL Server",
    "start": "354120",
    "end": "356940"
  },
  {
    "text": "you can now customize your database",
    "start": "356940",
    "end": "358800"
  },
  {
    "text": "server and operating system",
    "start": "358800",
    "end": "360900"
  },
  {
    "text": "you can apply special patches or",
    "start": "360900",
    "end": "362880"
  },
  {
    "text": "modified database software settings to",
    "start": "362880",
    "end": "365100"
  },
  {
    "text": "accommodate third-party application that",
    "start": "365100",
    "end": "367080"
  },
  {
    "text": "requires privileged access",
    "start": "367080",
    "end": "370099"
  },
  {
    "text": "now I will hand it over to arnab who",
    "start": "370740",
    "end": "373500"
  },
  {
    "text": "will walk you through the solution",
    "start": "373500",
    "end": "374580"
  },
  {
    "text": "overview the list of cloud watch metrics",
    "start": "374580",
    "end": "376979"
  },
  {
    "text": "that we are monitoring as part of the",
    "start": "376979",
    "end": "378419"
  },
  {
    "text": "solution and the high level",
    "start": "378419",
    "end": "380039"
  },
  {
    "text": "implementation steps earn up over to you",
    "start": "380039",
    "end": "384240"
  },
  {
    "text": "thank you Ananda let's deep dive into",
    "start": "384240",
    "end": "387120"
  },
  {
    "text": "this monitoring solution",
    "start": "387120",
    "end": "390139"
  },
  {
    "text": "so this is an overview of the solution",
    "start": "391860",
    "end": "393720"
  },
  {
    "text": "as mentioned earlier in RDS custom for",
    "start": "393720",
    "end": "397199"
  },
  {
    "text": "SQL Server we have access to the",
    "start": "397199",
    "end": "399660"
  },
  {
    "text": "underlying host",
    "start": "399660",
    "end": "401639"
  },
  {
    "text": "as a part of this solution we collect",
    "start": "401639",
    "end": "404039"
  },
  {
    "text": "the host level metrics using a script",
    "start": "404039",
    "end": "406199"
  },
  {
    "text": "and publish them to a custom namespace",
    "start": "406199",
    "end": "408840"
  },
  {
    "text": "in Amazon cloudwatch",
    "start": "408840",
    "end": "411660"
  },
  {
    "text": "this metrics include the server metrics",
    "start": "411660",
    "end": "414180"
  },
  {
    "text": "the database metrics and volume metrics",
    "start": "414180",
    "end": "416699"
  },
  {
    "text": "which are obtained from the windows",
    "start": "416699",
    "end": "418860"
  },
  {
    "text": "performance monitor tool",
    "start": "418860",
    "end": "421680"
  },
  {
    "text": "these metrics are then displayed on a",
    "start": "421680",
    "end": "423960"
  },
  {
    "text": "custom dashboard within Amazon",
    "start": "423960",
    "end": "425520"
  },
  {
    "text": "cloudwatch",
    "start": "425520",
    "end": "427500"
  },
  {
    "text": "customers do have the ability to",
    "start": "427500",
    "end": "429539"
  },
  {
    "text": "configure cloudwatch alarms and receive",
    "start": "429539",
    "end": "431819"
  },
  {
    "text": "email alerts through Amazon's simple",
    "start": "431819",
    "end": "434220"
  },
  {
    "text": "notification service",
    "start": "434220",
    "end": "437300"
  },
  {
    "text": "now let's look at the metric that will",
    "start": "439099",
    "end": "442199"
  },
  {
    "text": "be displayed on the cloudwatch dashboard",
    "start": "442199",
    "end": "444180"
  },
  {
    "text": "for our customers through the script",
    "start": "444180",
    "end": "447660"
  },
  {
    "text": "under infrastructure metrics you can",
    "start": "447660",
    "end": "450360"
  },
  {
    "text": "monitor the following",
    "start": "450360",
    "end": "452639"
  },
  {
    "text": "the free storage space",
    "start": "452639",
    "end": "454620"
  },
  {
    "text": "this metric allows you to track the",
    "start": "454620",
    "end": "456720"
  },
  {
    "text": "available storage space within the RDS",
    "start": "456720",
    "end": "459300"
  },
  {
    "text": "custom for SQL Server instance",
    "start": "459300",
    "end": "462000"
  },
  {
    "text": "CPU utilization",
    "start": "462000",
    "end": "463940"
  },
  {
    "text": "this metric provides insight into the",
    "start": "463940",
    "end": "466800"
  },
  {
    "text": "usage of the CPU resources within the",
    "start": "466800",
    "end": "469199"
  },
  {
    "text": "instance",
    "start": "469199",
    "end": "471120"
  },
  {
    "text": "available memory this particular metric",
    "start": "471120",
    "end": "473759"
  },
  {
    "text": "indicate the amount of memory that is",
    "start": "473759",
    "end": "475979"
  },
  {
    "text": "currently available for use within the",
    "start": "475979",
    "end": "477960"
  },
  {
    "text": "instance",
    "start": "477960",
    "end": "479759"
  },
  {
    "text": "in RDS custom for SQL Server instances",
    "start": "479759",
    "end": "482520"
  },
  {
    "text": "there are two volumes the root volume",
    "start": "482520",
    "end": "484680"
  },
  {
    "text": "which contains the installed operating",
    "start": "484680",
    "end": "486660"
  },
  {
    "text": "system and the data volumes which store",
    "start": "486660",
    "end": "489900"
  },
  {
    "text": "the SQL Server database related files",
    "start": "489900",
    "end": "493080"
  },
  {
    "text": "if any of these volumes become full the",
    "start": "493080",
    "end": "496020"
  },
  {
    "text": "RDS custom for SQL Server instance",
    "start": "496020",
    "end": "498060"
  },
  {
    "text": "enters a storage full state",
    "start": "498060",
    "end": "500520"
  },
  {
    "text": "therefore we have included individual",
    "start": "500520",
    "end": "503699"
  },
  {
    "text": "monitoring metric for each of these",
    "start": "503699",
    "end": "505500"
  },
  {
    "text": "volumes to ensure their storage levels",
    "start": "505500",
    "end": "508199"
  },
  {
    "text": "are monitored accurately",
    "start": "508199",
    "end": "510960"
  },
  {
    "text": "in terms of workload metrics we have",
    "start": "510960",
    "end": "513959"
  },
  {
    "text": "Incorporated the read and the right iops",
    "start": "513959",
    "end": "516360"
  },
  {
    "text": "along with the read and write throughput",
    "start": "516360",
    "end": "519240"
  },
  {
    "text": "these metrics will provide the customers",
    "start": "519240",
    "end": "521339"
  },
  {
    "text": "with the ability to monitor the",
    "start": "521339",
    "end": "523320"
  },
  {
    "text": "performance of their SQL Server",
    "start": "523320",
    "end": "524880"
  },
  {
    "text": "workloads",
    "start": "524880",
    "end": "526440"
  },
  {
    "text": "additionally under workload metrics",
    "start": "526440",
    "end": "528420"
  },
  {
    "text": "customer can also observe the database",
    "start": "528420",
    "end": "530820"
  },
  {
    "text": "connections metric and the buffer cache",
    "start": "530820",
    "end": "533399"
  },
  {
    "text": "heat ratio",
    "start": "533399",
    "end": "535140"
  },
  {
    "text": "from a performance metrics perspective",
    "start": "535140",
    "end": "537360"
  },
  {
    "text": "we have included the average read and",
    "start": "537360",
    "end": "540360"
  },
  {
    "text": "the right latency metric and the average",
    "start": "540360",
    "end": "542399"
  },
  {
    "text": "Q length Matrix as a part of this",
    "start": "542399",
    "end": "544440"
  },
  {
    "text": "solution",
    "start": "544440",
    "end": "546800"
  },
  {
    "text": "in this particular slide I will explain",
    "start": "548360",
    "end": "551640"
  },
  {
    "text": "the scripts that we are using in the",
    "start": "551640",
    "end": "553560"
  },
  {
    "text": "back end which will cater to this",
    "start": "553560",
    "end": "555300"
  },
  {
    "text": "monitoring solution",
    "start": "555300",
    "end": "556740"
  },
  {
    "text": "so allow me to explain the purpose and",
    "start": "556740",
    "end": "558540"
  },
  {
    "text": "functioning of the script in the backend",
    "start": "558540",
    "end": "561180"
  },
  {
    "text": "so we are adding three scripts the first",
    "start": "561180",
    "end": "563459"
  },
  {
    "text": "one called cloudwatch Agent config",
    "start": "563459",
    "end": "565800"
  },
  {
    "text": "automation.ps",
    "start": "565800",
    "end": "568380"
  },
  {
    "text": "which serves as a wrapper script which",
    "start": "568380",
    "end": "570480"
  },
  {
    "text": "is responsible for automating the",
    "start": "570480",
    "end": "572339"
  },
  {
    "text": "installation process",
    "start": "572339",
    "end": "574019"
  },
  {
    "text": "it updates the two scripts mentioned",
    "start": "574019",
    "end": "576060"
  },
  {
    "text": "below and finalizes the installation",
    "start": "576060",
    "end": "579120"
  },
  {
    "text": "the second script is cloudwatchagent dot",
    "start": "579120",
    "end": "582120"
  },
  {
    "text": "Json which gathers information such as",
    "start": "582120",
    "end": "585240"
  },
  {
    "text": "memory usage TCP connections and logical",
    "start": "585240",
    "end": "588300"
  },
  {
    "text": "connections it publishes this data in a",
    "start": "588300",
    "end": "591720"
  },
  {
    "text": "custom Cloud watch namespace",
    "start": "591720",
    "end": "593940"
  },
  {
    "text": "the third script dashboard config.json",
    "start": "593940",
    "end": "597000"
  },
  {
    "text": "is a configuration file for the",
    "start": "597000",
    "end": "599100"
  },
  {
    "text": "dashboard it retrieves the raw data from",
    "start": "599100",
    "end": "601800"
  },
  {
    "text": "AWS ec2 and AWS EBS and the custom",
    "start": "601800",
    "end": "606420"
  },
  {
    "text": "namespace",
    "start": "606420",
    "end": "608519"
  },
  {
    "text": "then it performs mathematical",
    "start": "608519",
    "end": "610200"
  },
  {
    "text": "calculations to present the required",
    "start": "610200",
    "end": "612540"
  },
  {
    "text": "cloudwatch metrics on the cloudwatch",
    "start": "612540",
    "end": "614820"
  },
  {
    "text": "dashboard",
    "start": "614820",
    "end": "616440"
  },
  {
    "text": "in this slide we are showing the",
    "start": "616440",
    "end": "618720"
  },
  {
    "text": "deployment of the script which automates",
    "start": "618720",
    "end": "620760"
  },
  {
    "text": "the entire installation process",
    "start": "620760",
    "end": "623100"
  },
  {
    "text": "the script will ask the name of the",
    "start": "623100",
    "end": "625500"
  },
  {
    "text": "custom cloudwatch dashboard as an user",
    "start": "625500",
    "end": "627959"
  },
  {
    "text": "input",
    "start": "627959",
    "end": "629339"
  },
  {
    "text": "it is always recommended to provide the",
    "start": "629339",
    "end": "631800"
  },
  {
    "text": "name of the RDS custom for SQL Server",
    "start": "631800",
    "end": "634260"
  },
  {
    "text": "instance as the name of the dashboard",
    "start": "634260",
    "end": "636839"
  },
  {
    "text": "so in case if you got multiple RDS",
    "start": "636839",
    "end": "638820"
  },
  {
    "text": "custom for SQL Server instance in your",
    "start": "638820",
    "end": "641100"
  },
  {
    "text": "account or in that region then you can",
    "start": "641100",
    "end": "643080"
  },
  {
    "text": "differentiate all the dashboard based on",
    "start": "643080",
    "end": "645120"
  },
  {
    "text": "the instance names",
    "start": "645120",
    "end": "647519"
  },
  {
    "text": "the script will automatically collect",
    "start": "647519",
    "end": "649200"
  },
  {
    "text": "the ec2 instance ID the instance Ami ID",
    "start": "649200",
    "end": "652380"
  },
  {
    "text": "the region the volume ID and the volume",
    "start": "652380",
    "end": "655380"
  },
  {
    "text": "name attached to the RDS custom for SQL",
    "start": "655380",
    "end": "657899"
  },
  {
    "text": "Server environment",
    "start": "657899",
    "end": "659640"
  },
  {
    "text": "the script executes in minute and it",
    "start": "659640",
    "end": "662399"
  },
  {
    "text": "deploys the dashboard in your AWS",
    "start": "662399",
    "end": "664320"
  },
  {
    "text": "cloudwatch console",
    "start": "664320",
    "end": "665820"
  },
  {
    "text": "we will see this in action shortly",
    "start": "665820",
    "end": "669620"
  },
  {
    "text": "so these are the high level steps for",
    "start": "669660",
    "end": "671579"
  },
  {
    "text": "installing this monitoring solution",
    "start": "671579",
    "end": "673560"
  },
  {
    "text": "first you need to have RDS custom for",
    "start": "673560",
    "end": "675720"
  },
  {
    "text": "SQL Server environment in your AWS",
    "start": "675720",
    "end": "677940"
  },
  {
    "text": "account",
    "start": "677940",
    "end": "679079"
  },
  {
    "text": "next you need to download the script",
    "start": "679079",
    "end": "681240"
  },
  {
    "text": "from GitHub and transfer the script in",
    "start": "681240",
    "end": "683640"
  },
  {
    "text": "the ec2 host for the RDS custom for SQL",
    "start": "683640",
    "end": "686519"
  },
  {
    "text": "Server instance",
    "start": "686519",
    "end": "688500"
  },
  {
    "text": "then you use the installer to deploy the",
    "start": "688500",
    "end": "690839"
  },
  {
    "text": "monitoring solution",
    "start": "690839",
    "end": "692160"
  },
  {
    "text": "post installation you can view the",
    "start": "692160",
    "end": "693959"
  },
  {
    "text": "dashboard in AWS console and also create",
    "start": "693959",
    "end": "696660"
  },
  {
    "text": "Cloud watch alarms on the required",
    "start": "696660",
    "end": "698459"
  },
  {
    "text": "metrics",
    "start": "698459",
    "end": "700880"
  },
  {
    "text": "foreign",
    "start": "700980",
    "end": "703639"
  },
  {
    "text": "this monitoring solution is available",
    "start": "703680",
    "end": "705839"
  },
  {
    "text": "for download from GitHub and we also",
    "start": "705839",
    "end": "708300"
  },
  {
    "text": "have an AWS blog which explains in",
    "start": "708300",
    "end": "710399"
  },
  {
    "text": "details about the solution and the",
    "start": "710399",
    "end": "712980"
  },
  {
    "text": "metric which are monitored via this tool",
    "start": "712980",
    "end": "716040"
  },
  {
    "text": "now I will invite Nanda",
    "start": "716040",
    "end": "718320"
  },
  {
    "text": "to show a demo of the installation of",
    "start": "718320",
    "end": "720420"
  },
  {
    "text": "this tool and you can see it in action",
    "start": "720420",
    "end": "722820"
  },
  {
    "text": "how easily you can deploy the monitoring",
    "start": "722820",
    "end": "724740"
  },
  {
    "text": "solution for RDS custom for SQL Server",
    "start": "724740",
    "end": "728160"
  },
  {
    "text": "over to you Nanda",
    "start": "728160",
    "end": "730440"
  },
  {
    "text": "thanks Arnold in this demo I will walk",
    "start": "730440",
    "end": "733620"
  },
  {
    "text": "you through the prerequisites that are",
    "start": "733620",
    "end": "735540"
  },
  {
    "text": "required to be completed before the",
    "start": "735540",
    "end": "737519"
  },
  {
    "text": "automation script could be executed",
    "start": "737519",
    "end": "740040"
  },
  {
    "text": "once the prerequisites are met I will",
    "start": "740040",
    "end": "742440"
  },
  {
    "text": "proceed with executing the automation",
    "start": "742440",
    "end": "743760"
  },
  {
    "text": "state",
    "start": "743760",
    "end": "744720"
  },
  {
    "text": "this script is designed to configure the",
    "start": "744720",
    "end": "747060"
  },
  {
    "text": "cloudwatch agent on the RDS custom",
    "start": "747060",
    "end": "749160"
  },
  {
    "text": "database instance allowing it to capture",
    "start": "749160",
    "end": "751980"
  },
  {
    "text": "the specific metrics from Windows",
    "start": "751980",
    "end": "753899"
  },
  {
    "text": "perform",
    "start": "753899",
    "end": "755180"
  },
  {
    "text": "subsequently the script will push these",
    "start": "755180",
    "end": "757500"
  },
  {
    "text": "metrics to the custom dashboard which is",
    "start": "757500",
    "end": "760019"
  },
  {
    "text": "also deployed through the automation",
    "start": "760019",
    "end": "761700"
  },
  {
    "text": "script",
    "start": "761700",
    "end": "763260"
  },
  {
    "text": "now let's get started",
    "start": "763260",
    "end": "766760"
  },
  {
    "text": "here are the few prerequisites that are",
    "start": "767880",
    "end": "770339"
  },
  {
    "text": "required for the automation script to be",
    "start": "770339",
    "end": "772680"
  },
  {
    "text": "successfully executed",
    "start": "772680",
    "end": "774240"
  },
  {
    "text": "install the AWS CLI",
    "start": "774240",
    "end": "777240"
  },
  {
    "text": "download the cloudwatch agent.json",
    "start": "777240",
    "end": "780860"
  },
  {
    "text": "dashboard config.json and cloudwatch",
    "start": "780860",
    "end": "784920"
  },
  {
    "text": "agent config",
    "start": "784920",
    "end": "786500"
  },
  {
    "text": "automation.ps1 file from the GitHub repo",
    "start": "786500",
    "end": "790019"
  },
  {
    "text": "to the C drive",
    "start": "790019",
    "end": "791880"
  },
  {
    "text": "ensure the ec2 instance will attach the",
    "start": "791880",
    "end": "794459"
  },
  {
    "text": "RDS custom database instance has the AWS",
    "start": "794459",
    "end": "798000"
  },
  {
    "text": "cloudwatch put dashboard and AWS easy to",
    "start": "798000",
    "end": "801000"
  },
  {
    "text": "describe volume to get the required",
    "start": "801000",
    "end": "803040"
  },
  {
    "text": "information for the automation script to",
    "start": "803040",
    "end": "804899"
  },
  {
    "text": "successfully be executed",
    "start": "804899",
    "end": "808100"
  },
  {
    "text": "I have also copied the automation",
    "start": "809220",
    "end": "812040"
  },
  {
    "text": "scripts from GitHub repo to the C drive",
    "start": "812040",
    "end": "814860"
  },
  {
    "text": "of the RDS custom instance",
    "start": "814860",
    "end": "817440"
  },
  {
    "text": "you can find these scripts on the AWS",
    "start": "817440",
    "end": "820260"
  },
  {
    "text": "GitHub repo",
    "start": "820260",
    "end": "823399"
  },
  {
    "text": "now let's install the awcli I have the",
    "start": "826560",
    "end": "830100"
  },
  {
    "text": "installer copied to the RDS custom",
    "start": "830100",
    "end": "831660"
  },
  {
    "text": "instance",
    "start": "831660",
    "end": "834199"
  },
  {
    "text": "click on next",
    "start": "842339",
    "end": "844560"
  },
  {
    "text": "accepted terms in license agreement",
    "start": "844560",
    "end": "848899"
  },
  {
    "text": "next",
    "start": "848940",
    "end": "851720"
  },
  {
    "text": "the awcli has been successfully",
    "start": "854040",
    "end": "856920"
  },
  {
    "text": "installed",
    "start": "856920",
    "end": "859160"
  },
  {
    "text": "I have ensured that I have AWS Cloud",
    "start": "860279",
    "end": "863339"
  },
  {
    "text": "watch put dashboard and AWS EC to",
    "start": "863339",
    "end": "866880"
  },
  {
    "text": "describe volume permissions attached to",
    "start": "866880",
    "end": "869459"
  },
  {
    "text": "the ec2 instance role associated with",
    "start": "869459",
    "end": "871980"
  },
  {
    "text": "the RDS custom instance",
    "start": "871980",
    "end": "874500"
  },
  {
    "text": "now that we have met all the",
    "start": "874500",
    "end": "876480"
  },
  {
    "text": "prerequisites let me give you an",
    "start": "876480",
    "end": "878579"
  },
  {
    "text": "overview of the scripts that we will be",
    "start": "878579",
    "end": "880980"
  },
  {
    "text": "using to capture the design metrics and",
    "start": "880980",
    "end": "883740"
  },
  {
    "text": "create a custom dashboard",
    "start": "883740",
    "end": "886940"
  },
  {
    "text": "cloudwatch agent dot Json",
    "start": "888740",
    "end": "892620"
  },
  {
    "text": "this script is used to configure the",
    "start": "892620",
    "end": "895019"
  },
  {
    "text": "cloudwatch agent to capture the desired",
    "start": "895019",
    "end": "897540"
  },
  {
    "text": "counters from Windows perform on and",
    "start": "897540",
    "end": "900480"
  },
  {
    "text": "push the metrics to a custom Cloud watch",
    "start": "900480",
    "end": "903000"
  },
  {
    "text": "namespace",
    "start": "903000",
    "end": "904800"
  },
  {
    "text": "in the script we are capturing SQL",
    "start": "904800",
    "end": "907260"
  },
  {
    "text": "Server General statistics",
    "start": "907260",
    "end": "909120"
  },
  {
    "text": "SQL Server buffer manager and logical",
    "start": "909120",
    "end": "912000"
  },
  {
    "text": "disk",
    "start": "912000",
    "end": "913199"
  },
  {
    "text": "you can refer Microsoft Windows",
    "start": "913199",
    "end": "915899"
  },
  {
    "text": "performance public documentation for",
    "start": "915899",
    "end": "918600"
  },
  {
    "text": "available counters and add any desired",
    "start": "918600",
    "end": "921060"
  },
  {
    "text": "counters to the script",
    "start": "921060",
    "end": "924380"
  },
  {
    "text": "next is the dashboard config.jsonscript",
    "start": "927660",
    "end": "932879"
  },
  {
    "text": "this script is used to create the custom",
    "start": "937980",
    "end": "940680"
  },
  {
    "text": "cloudwatch dashboard for monitoring RDS",
    "start": "940680",
    "end": "943740"
  },
  {
    "text": "custom metrics that was captured and",
    "start": "943740",
    "end": "946320"
  },
  {
    "text": "stored on the custom name Space by the",
    "start": "946320",
    "end": "948779"
  },
  {
    "text": "cloud watch agent",
    "start": "948779",
    "end": "950459"
  },
  {
    "text": "in this script we provide the custom",
    "start": "950459",
    "end": "952740"
  },
  {
    "text": "namespace information metric name",
    "start": "952740",
    "end": "955260"
  },
  {
    "text": "instance ID and all the information",
    "start": "955260",
    "end": "957660"
  },
  {
    "text": "required to build the custom dashboard",
    "start": "957660",
    "end": "960779"
  },
  {
    "text": "if you are configuring the cloudwatch",
    "start": "960779",
    "end": "963000"
  },
  {
    "text": "agent to capture a specific performance",
    "start": "963000",
    "end": "965699"
  },
  {
    "text": "counter we need to add the metric",
    "start": "965699",
    "end": "967920"
  },
  {
    "text": "information on this dashboard",
    "start": "967920",
    "end": "970399"
  },
  {
    "text": "config.jsonscript for the metric to be",
    "start": "970399",
    "end": "973320"
  },
  {
    "text": "available on the custom dashboard",
    "start": "973320",
    "end": "977180"
  },
  {
    "text": "the last script is the automation script",
    "start": "981660",
    "end": "984120"
  },
  {
    "text": "Cloud watch agent config automation.ps1",
    "start": "984120",
    "end": "989339"
  },
  {
    "text": "this script uses ec2 metadata to capture",
    "start": "989519",
    "end": "993180"
  },
  {
    "text": "the ec2 instance information like ec2",
    "start": "993180",
    "end": "996420"
  },
  {
    "text": "instance ID Ami ID region and uses AWS",
    "start": "996420",
    "end": "1001699"
  },
  {
    "text": "CLI to capture EVS volume information",
    "start": "1001699",
    "end": "1004459"
  },
  {
    "text": "and also create the custom cloudwatch",
    "start": "1004459",
    "end": "1007699"
  },
  {
    "text": "dashboard",
    "start": "1007699",
    "end": "1009139"
  },
  {
    "text": "this automation script takes care of",
    "start": "1009139",
    "end": "1011899"
  },
  {
    "text": "configuring the cloudwatch agent",
    "start": "1011899",
    "end": "1013660"
  },
  {
    "text": "updating the dashboard config.json",
    "start": "1013660",
    "end": "1016759"
  },
  {
    "text": "script and creating the cloud watch",
    "start": "1016759",
    "end": "1018800"
  },
  {
    "text": "dashboard",
    "start": "1018800",
    "end": "1021500"
  },
  {
    "text": "the only input to this script is the",
    "start": "1021500",
    "end": "1023660"
  },
  {
    "text": "cloud watch dashboard name",
    "start": "1023660",
    "end": "1026980"
  },
  {
    "text": "now that we have reviewed all the",
    "start": "1028520",
    "end": "1030740"
  },
  {
    "text": "scripts let's create the custom",
    "start": "1030740",
    "end": "1032660"
  },
  {
    "text": "cloudwatch dashboard by executing the",
    "start": "1032660",
    "end": "1035360"
  },
  {
    "text": "automation script",
    "start": "1035360",
    "end": "1036860"
  },
  {
    "text": "to execute the automation script open",
    "start": "1036860",
    "end": "1039500"
  },
  {
    "text": "partial as administrator navigate to A C",
    "start": "1039500",
    "end": "1042918"
  },
  {
    "text": "drive where you have saved the",
    "start": "1042919",
    "end": "1044600"
  },
  {
    "text": "automation script and execute the cloud",
    "start": "1044600",
    "end": "1047480"
  },
  {
    "text": "watch agent config automation.ps1 script",
    "start": "1047480",
    "end": "1052720"
  },
  {
    "text": "provide the dashboard name",
    "start": "1076340",
    "end": "1079840"
  },
  {
    "text": "we can see that the script is performing",
    "start": "1100160",
    "end": "1102860"
  },
  {
    "text": "the configuration of cloud watch agent",
    "start": "1102860",
    "end": "1105320"
  },
  {
    "text": "and creation of the dashboard",
    "start": "1105320",
    "end": "1109000"
  },
  {
    "text": "the configuration of cloud watch agent",
    "start": "1117559",
    "end": "1120320"
  },
  {
    "text": "and creation of dashboard has",
    "start": "1120320",
    "end": "1122720"
  },
  {
    "text": "successfully completed",
    "start": "1122720",
    "end": "1125299"
  },
  {
    "text": "it might take few minutes for the cloud",
    "start": "1125299",
    "end": "1127340"
  },
  {
    "text": "watch metrics to populate on the AWS",
    "start": "1127340",
    "end": "1129980"
  },
  {
    "text": "cloudwatch console",
    "start": "1129980",
    "end": "1133059"
  },
  {
    "text": "we can confirm the dashboard creation by",
    "start": "1137059",
    "end": "1140179"
  },
  {
    "text": "logging into the Amazon cloudwatch",
    "start": "1140179",
    "end": "1142520"
  },
  {
    "text": "console",
    "start": "1142520",
    "end": "1143720"
  },
  {
    "text": "we can navigate to metrics and see the",
    "start": "1143720",
    "end": "1147020"
  },
  {
    "text": "custom name space for your audience",
    "start": "1147020",
    "end": "1149059"
  },
  {
    "text": "instance created by the automation",
    "start": "1149059",
    "end": "1151039"
  },
  {
    "text": "script",
    "start": "1151039",
    "end": "1153399"
  },
  {
    "text": "now we can check the cloudwatch",
    "start": "1170320",
    "end": "1172820"
  },
  {
    "text": "dashboard",
    "start": "1172820",
    "end": "1175240"
  },
  {
    "text": "here we can see the custom cloudwatch",
    "start": "1178100",
    "end": "1181039"
  },
  {
    "text": "dashboard that we created using the",
    "start": "1181039",
    "end": "1182840"
  },
  {
    "text": "automation script",
    "start": "1182840",
    "end": "1185559"
  },
  {
    "text": "we can see the RDS custom metrics we",
    "start": "1187039",
    "end": "1189860"
  },
  {
    "text": "captured using the cloudwatch agent",
    "start": "1189860",
    "end": "1191720"
  },
  {
    "text": "being displayed here",
    "start": "1191720",
    "end": "1195280"
  },
  {
    "text": "you can also create cloudwatch alarm for",
    "start": "1201860",
    "end": "1205100"
  },
  {
    "text": "any of these metrics to alert you if any",
    "start": "1205100",
    "end": "1208220"
  },
  {
    "text": "of the metrics has met the configured",
    "start": "1208220",
    "end": "1210620"
  },
  {
    "text": "threshold",
    "start": "1210620",
    "end": "1213039"
  },
  {
    "text": "you can refer the AWS blog post on",
    "start": "1213799",
    "end": "1216919"
  },
  {
    "text": "monitor Amazon RDS custom for SQL server",
    "start": "1216919",
    "end": "1220100"
  },
  {
    "text": "using Amazon cloudwatch for steps to",
    "start": "1220100",
    "end": "1223340"
  },
  {
    "text": "create the cloudwatch alarm",
    "start": "1223340",
    "end": "1226480"
  },
  {
    "text": "I hope this video was helpful thanks for",
    "start": "1230660",
    "end": "1233720"
  },
  {
    "text": "watching",
    "start": "1233720",
    "end": "1236140"
  },
  {
    "text": "thank you for attending this session we",
    "start": "1236299",
    "end": "1238700"
  },
  {
    "text": "hope you found the insights shared about",
    "start": "1238700",
    "end": "1240200"
  },
  {
    "text": "RDS custom monitoring tool both",
    "start": "1240200",
    "end": "1242179"
  },
  {
    "text": "informative and applicable for your",
    "start": "1242179",
    "end": "1244220"
  },
  {
    "text": "specific use cases if you have any",
    "start": "1244220",
    "end": "1246380"
  },
  {
    "text": "further questions or need assistance in",
    "start": "1246380",
    "end": "1248299"
  },
  {
    "text": "implementing this monitoring tool please",
    "start": "1248299",
    "end": "1250520"
  },
  {
    "text": "feel free to reach out to our team",
    "start": "1250520",
    "end": "1252620"
  },
  {
    "text": "we are here to support you every step of",
    "start": "1252620",
    "end": "1254600"
  },
  {
    "text": "the week",
    "start": "1254600",
    "end": "1255559"
  },
  {
    "text": "once again thank you for being a part of",
    "start": "1255559",
    "end": "1257720"
  },
  {
    "text": "this presentation and we look forward",
    "start": "1257720",
    "end": "1259580"
  },
  {
    "text": "for continued collaboration in the",
    "start": "1259580",
    "end": "1261559"
  },
  {
    "text": "future",
    "start": "1261559",
    "end": "1262460"
  },
  {
    "text": "as always happy cloud computing",
    "start": "1262460",
    "end": "1266679"
  }
]