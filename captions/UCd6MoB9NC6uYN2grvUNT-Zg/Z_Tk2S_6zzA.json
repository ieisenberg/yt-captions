[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "afternoon hi everyone my name is Paul Maddox I'm a Solutions Architect at AWS",
    "start": "0",
    "end": "5100"
  },
  {
    "text": "I specialize in containers amongst a few other things and I'm here today to talk",
    "start": "5100",
    "end": "10740"
  },
  {
    "text": "about how better to run containers on AWS before I begin can I get a show up come",
    "start": "10740",
    "end": "18480"
  },
  {
    "text": "this is the Apple world of dongles now that we have to live with with USBC they",
    "start": "18480",
    "end": "24689"
  },
  {
    "text": "plug that back in before a stock can I can I get a show of hands of the room of who's using containers today you don't",
    "start": "24689",
    "end": "33420"
  },
  {
    "text": "count I know you are okay who's using them in production okay good",
    "start": "33420",
    "end": "39149"
  },
  {
    "text": "number okay so when I speak to customers",
    "start": "39149",
    "end": "47039"
  },
  {
    "text": "around docker and containers a lot of people I speak to a running containers in development environments test",
    "start": "47039",
    "end": "53070"
  },
  {
    "text": "environments and it's pretty easy to do right you can very quickly docker is a",
    "start": "53070",
    "end": "58469"
  },
  {
    "text": "traditional application rapid docker container around it and launch it on",
    "start": "58469",
    "end": "63510"
  },
  {
    "text": "your machine using docker it's really easy right and so with that in mind we a",
    "start": "63510",
    "end": "70920"
  },
  {
    "text": "couple of years ago at AWS had customers come in to us and saying hey WS can you",
    "start": "70920",
    "end": "75960"
  },
  {
    "text": "do a docker thing for us like we want some sort of docker what can you do we sort of sat there a bit confused you",
    "start": "75960",
    "end": "82380"
  },
  {
    "text": "know you can run dock or an ec2 yourselves no problem and actually when",
    "start": "82380",
    "end": "88170"
  },
  {
    "text": "we dug into it people wanted a bit more than that so when it comes to taking",
    "start": "88170",
    "end": "94950"
  },
  {
    "start": "92000",
    "end": "104000"
  },
  {
    "text": "containers to production and scaling up scaling out there's a bit what's to think about and this is where our",
    "start": "94950",
    "end": "101100"
  },
  {
    "text": "container orchestration engines come in so I skipped a slide here today we're",
    "start": "101100",
    "end": "106259"
  },
  {
    "text": "going to cover in depth a couple of container orchestration options that you have available to you on AWS",
    "start": "106259",
    "end": "112170"
  },
  {
    "start": "112000",
    "end": "153000"
  },
  {
    "text": "so we're going to talk about Amazon SES the ec2 container service we're going to",
    "start": "112170",
    "end": "118500"
  },
  {
    "text": "go into detail on how to deploy it how to get a cluster up and running some of the key features some of the things you",
    "start": "118500",
    "end": "124229"
  },
  {
    "text": "need to know to manage in ECS clustering operationally wise how do you monitor it etc and then we're going to talk around",
    "start": "124229",
    "end": "130920"
  },
  {
    "text": "other container options as well like Kuban it is and talk about how to run that on AWS",
    "start": "130920",
    "end": "136370"
  },
  {
    "text": "what the implications are there for things like management how you deploy and to do that we're gonna have a good",
    "start": "136370",
    "end": "143610"
  },
  {
    "text": "friend of mine Rick from Ticketmaster come on stage and talk about their usage of kubernetes on AWS and their",
    "start": "143610",
    "end": "149700"
  },
  {
    "text": "experience running it so as I meant to move into production is harder typically",
    "start": "149700",
    "end": "156480"
  },
  {
    "start": "153000",
    "end": "269000"
  },
  {
    "text": "when you take containers into production away from just a developer's laptop there's a lot of questions that come up things like how do I deploy my",
    "start": "156480",
    "end": "164010"
  },
  {
    "text": "containers how do I do get them on the hosts how do I do that in a way that ensures zero downtime when I'm updating",
    "start": "164010",
    "end": "170280"
  },
  {
    "text": "containers or maybe I want to run Bluegreen deployments and get my containers up and running side-by-side",
    "start": "170280",
    "end": "175500"
  },
  {
    "text": "and manage the traffic across the canary type deployments as well once I've got",
    "start": "175500",
    "end": "180900"
  },
  {
    "text": "my containers deployed how do I keep them there how do I keep them running how do I keep them alive how do I health",
    "start": "180900",
    "end": "186240"
  },
  {
    "text": "check them how do I make sure that if a container fails for whatever reason that something brings that container back up",
    "start": "186240",
    "end": "193370"
  },
  {
    "text": "how can I get my containers to talk to each other so service discovery getting from one container to another container",
    "start": "193370",
    "end": "200040"
  },
  {
    "text": "how do how do they find out about each other and talk to each other do i link them together do I use you",
    "start": "200040",
    "end": "206400"
  },
  {
    "text": "know consult some kind of server discovery and then how can you configure your containers so how do you actually",
    "start": "206400",
    "end": "213150"
  },
  {
    "text": "get runtime parameters into your containers so you don't really want to be baking into your container all your",
    "start": "213150",
    "end": "219780"
  },
  {
    "text": "configuration data like database host names and passwords and that kind of stuff right you want one container build",
    "start": "219780",
    "end": "225960"
  },
  {
    "text": "that progresses through all of your different environments so how do I configure my containers at run times and",
    "start": "225960",
    "end": "231810"
  },
  {
    "text": "how do I do that with secrets how do i best secure my secrets and then finally",
    "start": "231810",
    "end": "238530"
  },
  {
    "text": "the last question that comes up a lot when conversations I have with customers is so we're getting to that world where",
    "start": "238530",
    "end": "244020"
  },
  {
    "text": "we've got a big pool of compute and we've got our containers on them how do we optimize that pool of compute maybe",
    "start": "244020",
    "end": "251280"
  },
  {
    "text": "I've got some containers that I want to run as highly available as possible over multiple availability zones maybe I've",
    "start": "251280",
    "end": "258630"
  },
  {
    "text": "got some like dev tests except sure we're actually availability isn't my primary optimization factor actually its",
    "start": "258630",
    "end": "264570"
  },
  {
    "text": "cost so how do i optimize that so we're going to talk about the a",
    "start": "264570",
    "end": "271740"
  },
  {
    "text": "couple of containing orchestrations engines that are out there today I mention DCs we're gonna dive into ETS",
    "start": "271740",
    "end": "277350"
  },
  {
    "text": "first but before I do I just want to start with our main goal at AWS here is",
    "start": "277350",
    "end": "282660"
  },
  {
    "text": "about choice our goal is to be the best place for you to run your containers",
    "start": "282660",
    "end": "288440"
  },
  {
    "text": "regardless of which choice of container orchestration engineers so I'm going to talk about ECS here Rick's gonna talk",
    "start": "288440",
    "end": "295199"
  },
  {
    "text": "about kubernetes will help you run whatever you want on AWS our goal is to be the best place for containers full",
    "start": "295199",
    "end": "301530"
  },
  {
    "text": "stop so with that let's dive into ECS a bit and talk about some of the key",
    "start": "301530",
    "end": "307949"
  },
  {
    "start": "304000",
    "end": "422000"
  },
  {
    "text": "functions and features and functionality when we built acs one of our main goals",
    "start": "307949",
    "end": "314580"
  },
  {
    "text": "who is to build a container orchestration system that was super easy for customers to use right no software",
    "start": "314580",
    "end": "321389"
  },
  {
    "text": "to manage ok the it's a managed service so the actual scheduling engine etc runs",
    "start": "321389",
    "end": "328320"
  },
  {
    "text": "in our part of the world right it's not in your AWS account it's not something that you have to maintain manage patch",
    "start": "328320",
    "end": "334229"
  },
  {
    "text": "install update etc we wanted to build something that had real deep integration",
    "start": "334229",
    "end": "340289"
  },
  {
    "text": "with other AWS services so things like load balancers automatically registering",
    "start": "340289",
    "end": "345510"
  },
  {
    "text": "containers with load balancers for example auto scaling being able to not",
    "start": "345510",
    "end": "350909"
  },
  {
    "text": "only scale in and out on the pool of computer your containers run them but",
    "start": "350909",
    "end": "356130"
  },
  {
    "text": "also actually scaling up and down the number of containers as well in an automated way things like logging and",
    "start": "356130",
    "end": "362460"
  },
  {
    "text": "centralized logging and integration with things like cloud watch logs networking and ID access we've got I am in AWS and",
    "start": "362460",
    "end": "371070"
  },
  {
    "text": "how do i integrate permissions on my clusters with iam things like monitoring as well and these deep integrations are",
    "start": "371070",
    "end": "378780"
  },
  {
    "text": "one of the main strengths of ECS here that you'll find so to dig into a few of",
    "start": "378780",
    "end": "383789"
  },
  {
    "text": "these we also wanted to make sure that security and compliance were live really",
    "start": "383789",
    "end": "388919"
  },
  {
    "text": "important to us and to our customers as well so with ECS you have PCI",
    "start": "388919",
    "end": "393990"
  },
  {
    "text": "certification for handling credit cards you have ISO 27001 you have strong integration with things like I am",
    "start": "393990",
    "end": "401100"
  },
  {
    "text": "rolls per container so you can scope down your permissions in a really fine grain manner so even if you're not",
    "start": "401100",
    "end": "408660"
  },
  {
    "text": "handling credit card data even if you're not that interested in ISO 27001 just",
    "start": "408660",
    "end": "414930"
  },
  {
    "text": "know that because some of our customers are everybody's reaping the benefits of that when you use ECS so the key",
    "start": "414930",
    "end": "423450"
  },
  {
    "start": "422000",
    "end": "503000"
  },
  {
    "text": "components of ECS you have the main ECS service this is the ship in the middle",
    "start": "423450",
    "end": "428610"
  },
  {
    "text": "here and this is the bit that's managed by AWS the bit that you don't need to run or patch except through yourself",
    "start": "428610",
    "end": "434240"
  },
  {
    "text": "below that you have container instances these are ec2 instances Windows or Linux",
    "start": "434240",
    "end": "440700"
  },
  {
    "text": "and they run docker and they run our ECS agent this is an open source agent that",
    "start": "440700",
    "end": "447120"
  },
  {
    "text": "sits on the hosts and talks to the main back end to the ECS service and says hey what containers should I be running etc",
    "start": "447120",
    "end": "453540"
  },
  {
    "text": "I've got this much resources so that when you pass in a task definition which",
    "start": "453540",
    "end": "458940"
  },
  {
    "text": "is how you define your containers within ECS you have a Jason task definition you",
    "start": "458940",
    "end": "465060"
  },
  {
    "text": "list the containers and then you deploy it so it's your unit of deployment when you deploy a task definition the ECS",
    "start": "465060",
    "end": "471450"
  },
  {
    "text": "service is able to communicate with all of your different instances and decide where it should put those tasks one of",
    "start": "471450",
    "end": "479250"
  },
  {
    "text": "the nice things here is that these container instances they're just ec2 instances we provide an optimized army",
    "start": "479250",
    "end": "486150"
  },
  {
    "text": "that has docker pre-installed and you know some of the kernel parameters tweaked etc for docker and it has our",
    "start": "486150",
    "end": "492060"
  },
  {
    "text": "agent baked in but ultimately you could create your own maybe from your own master image your army or something if",
    "start": "492060",
    "end": "498030"
  },
  {
    "text": "you have a golden build internally there just DC to machines so how do I deploy",
    "start": "498030",
    "end": "504990"
  },
  {
    "start": "503000",
    "end": "599000"
  },
  {
    "text": "ezs how do I get a cluster up and running there's a number of different ways to do this things like cloud",
    "start": "504990",
    "end": "510300"
  },
  {
    "text": "formation things like command line bar our UI I'm gonna show you here the ECSC",
    "start": "510300",
    "end": "516150"
  },
  {
    "text": "Li so we have the AWS CLI probably quite a few of you here will have used it for",
    "start": "516150",
    "end": "521849"
  },
  {
    "text": "some of our services like Beanstalk and ECS we have a higher level obstructed CLI that just makes life a bit easier so",
    "start": "521849",
    "end": "529290"
  },
  {
    "text": "we have the ECSC Li and it has this simple up command and this is going to bring up",
    "start": "529290",
    "end": "534540"
  },
  {
    "text": "for you right with one command here and you can provide things like the keeper air and which VPC you want to deploy",
    "start": "534540",
    "end": "541889"
  },
  {
    "text": "into which subnet security rules etc and there's a lot of flexibility there you",
    "start": "541889",
    "end": "547410"
  },
  {
    "text": "can also use the UI to deploy your cluster as well my simple way or cloud formation the UI is such a really nice",
    "start": "547410",
    "end": "555449"
  },
  {
    "text": "way of the pointer spot so don't know how familiar you are with spot market but you can basically bid on unused",
    "start": "555449",
    "end": "561690"
  },
  {
    "text": "capacity in our datacenters see up to nineteen ninety-five percent cost savings so really nice place to run dev",
    "start": "561690",
    "end": "569550"
  },
  {
    "text": "test workloads I have customers that use this for production as well but a lot of people will just use this for dev tests",
    "start": "569550",
    "end": "575910"
  },
  {
    "text": "so with sportful II you can say I want a cluster made up of any of these",
    "start": "575910",
    "end": "581459"
  },
  {
    "text": "particular instance types and I want this much CPU or this much memory and",
    "start": "581459",
    "end": "586740"
  },
  {
    "text": "you could be really flexible right and you can just build up that pool of compute and get the cost savings to come",
    "start": "586740",
    "end": "591839"
  },
  {
    "text": "with spot so you can do this fighter CLI but the UI just makes it really easy to do here stock what how to deploy a",
    "start": "591839",
    "end": "600839"
  },
  {
    "start": "599000",
    "end": "657000"
  },
  {
    "text": "service and once you have your cluster up and running one of the easiest ways to deploy a service is to use docker",
    "start": "600839",
    "end": "606720"
  },
  {
    "text": "compose so docker compose if you've used to compose before it allows you to",
    "start": "606720",
    "end": "612199"
  },
  {
    "text": "specify a set of containers in a compose file and run it locally on your machine with docker actually with the UCS CLI",
    "start": "612199",
    "end": "620040"
  },
  {
    "text": "can interact with those compose files so you can say docker compose up to run it locally and then when you're ready to",
    "start": "620040",
    "end": "626490"
  },
  {
    "text": "run it on ECS you can just use SES CLI compose and this is going to bring up a",
    "start": "626490",
    "end": "632910"
  },
  {
    "text": "service it's going to give you a chance to specify some of the ECS specific information for that service like which",
    "start": "632910",
    "end": "639689"
  },
  {
    "text": "iam role should your containers use which load balancer should the containers register with or maybe an alb",
    "start": "639689",
    "end": "647819"
  },
  {
    "text": "you're gonna be working with target group set and then just a quick way of seeing which containers you've got",
    "start": "647819",
    "end": "652829"
  },
  {
    "text": "running so really nice easy to use CLI let's talk a bit about resource",
    "start": "652829",
    "end": "658860"
  },
  {
    "start": "657000",
    "end": "732000"
  },
  {
    "text": "optimization this was one of the other questions I had up at the beginning is once you have your pool of compute how",
    "start": "658860",
    "end": "664709"
  },
  {
    "text": "best do you optimize that pool of compute well with ECS you have a number of",
    "start": "664709",
    "end": "669970"
  },
  {
    "text": "controls available to you the first displacement strategies so for a task",
    "start": "669970",
    "end": "676630"
  },
  {
    "text": "for a service that you run on ECS you can choose how you want those containers placed on your cluster so you can choose",
    "start": "676630",
    "end": "683170"
  },
  {
    "text": "maybe tube impact them maybe you want your cluster to have the minimum possible number of hosts to optimize on",
    "start": "683170",
    "end": "689710"
  },
  {
    "text": "cost so get those containers packed really tightly and don't worry too much about high availability or maybe you",
    "start": "689710",
    "end": "696580"
  },
  {
    "text": "want the opposite maybe you want to spread your containers out as much as possible for high availability maybe",
    "start": "696580",
    "end": "702910"
  },
  {
    "text": "you've got groups of containers that you want to keep together right so by using affinity you can say okay always deploy",
    "start": "702910",
    "end": "710470"
  },
  {
    "text": "this container or this group of containers with this one alongside each other on a host or maybe you've got a",
    "start": "710470",
    "end": "716020"
  },
  {
    "text": "scenario where containers should always be on distinct instances so if you're",
    "start": "716020",
    "end": "721270"
  },
  {
    "text": "using the UI with ECS when you deploy your services just a drop down you can pick from and choose from so really",
    "start": "721270",
    "end": "727060"
  },
  {
    "text": "powerful you can specify it as well programmatically with the CLI and SDKs etc your sub placement constraints so",
    "start": "727060",
    "end": "736150"
  },
  {
    "start": "732000",
    "end": "774000"
  },
  {
    "text": "these are a way of saying in a bit more granular level where containers should be deployed to so for example if I'm",
    "start": "736150",
    "end": "742960"
  },
  {
    "text": "deploying a container that does a load of gpu-based calculations I'm only going to want to deploy that to GPU instances",
    "start": "742960",
    "end": "749740"
  },
  {
    "text": "so I could when I define that service and deploy it I could say put a placement constraint on to only run on",
    "start": "749740",
    "end": "756460"
  },
  {
    "text": "this particular type of instance or maybe only on instances that are running this particular army so if you've used",
    "start": "756460",
    "end": "763720"
  },
  {
    "text": "kubernetes this is very similar to tanks for example and sorry tolerance it",
    "start": "763720",
    "end": "770440"
  },
  {
    "text": "taints intolerance this thank you one of the other questions I had was around",
    "start": "770440",
    "end": "776440"
  },
  {
    "start": "774000",
    "end": "891000"
  },
  {
    "text": "service discovery you've got your containers deployed how do you get them talking to each other there are two main",
    "start": "776440",
    "end": "782260"
  },
  {
    "text": "options I see customers using with ECS the first up is to use load balancers so",
    "start": "782260",
    "end": "788200"
  },
  {
    "text": "when you register a service in ECS you give you're given the option to attach it to a load balancer and what SES is",
    "start": "788200",
    "end": "795160"
  },
  {
    "text": "gonna do behind the scenes is whenever a container spins up for that service anywhere on your cluster it's automatically going to register",
    "start": "795160",
    "end": "801279"
  },
  {
    "text": "with the load balancer and when the task finishes when the container goes away it's going to unregister it from the",
    "start": "801279",
    "end": "806470"
  },
  {
    "text": "load balancer so using something like this you can use our application load balancer here in the middle and actually",
    "start": "806470",
    "end": "813279"
  },
  {
    "text": "send traffic to different micro services based on host based routing or pass",
    "start": "813279",
    "end": "818290"
  },
  {
    "text": "based routing so really easy way to just do that service discovery the other main",
    "start": "818290",
    "end": "825040"
  },
  {
    "text": "way I see used is DNS based and I like this one because it uses a really cool feature of ECS so ECS has an event",
    "start": "825040",
    "end": "832089"
  },
  {
    "text": "stream coming off it anything that happens on your cluster and a new containers get scheduled and spun up for",
    "start": "832089",
    "end": "839079"
  },
  {
    "text": "example fires off an event and you can hook lambda functions up to that event stream so you can react and do things",
    "start": "839079",
    "end": "845499"
  },
  {
    "text": "based on what's happening inside your cluster so actually with lambda it's really easy to receive one of these",
    "start": "845499",
    "end": "851319"
  },
  {
    "text": "events and register in DNS our container when it starts and when the container",
    "start": "851319",
    "end": "856540"
  },
  {
    "text": "dies unregistered from DNS so this is really useful if you're using for",
    "start": "856540",
    "end": "861850"
  },
  {
    "text": "example UDP protocol which you're not going to have to do with the load balancer this is really useful if you",
    "start": "861850",
    "end": "869680"
  },
  {
    "text": "you want to use DNS based service discovery right for so you have a couple",
    "start": "869680",
    "end": "874930"
  },
  {
    "text": "of options you can register as an a record for example as an IP address and",
    "start": "874930",
    "end": "879970"
  },
  {
    "text": "have a round-robin of IP addresses if you want the port as well in there you can use SRV records this is a really",
    "start": "879970",
    "end": "887290"
  },
  {
    "text": "easy way to get up and running with DNS based service discovery next thing I",
    "start": "887290",
    "end": "892600"
  },
  {
    "start": "891000",
    "end": "964000"
  },
  {
    "text": "want to talk about is config management how do we do configs and secrets within SES so we have a service called the ec2",
    "start": "892600",
    "end": "902649"
  },
  {
    "text": "parameter store does anyone played with this not many people it's hip away in",
    "start": "902649",
    "end": "909610"
  },
  {
    "text": "the ec2 console right you can find it in the AC 2 tab of the console and it's a",
    "start": "909610",
    "end": "914740"
  },
  {
    "text": "configuration store right it allows you to put configuration data in things like key value pairs and retrieve them as",
    "start": "914740",
    "end": "922089"
  },
  {
    "text": "well it's really useful for secrets you can automatically encrypt your key value",
    "start": "922089",
    "end": "928149"
  },
  {
    "text": "data with kms our key management service so one really nice pattern here",
    "start": "928149",
    "end": "934690"
  },
  {
    "text": "is to use the I am role integration with ECS to say this container can retrieve",
    "start": "934690",
    "end": "941200"
  },
  {
    "text": "this bit of configuration data and only this container can retrieve it and only this container can decrypt it with the",
    "start": "941200",
    "end": "948460"
  },
  {
    "text": "kms key so you can have really granular container based secrets baked in with",
    "start": "948460",
    "end": "953710"
  },
  {
    "text": "the security of I am it's a very powerful feature that I think we could",
    "start": "953710",
    "end": "959710"
  },
  {
    "text": "publicize more because not not enough people have seen this how do you do ma",
    "start": "959710",
    "end": "965590"
  },
  {
    "start": "964000",
    "end": "1042000"
  },
  {
    "text": "get monitoring and logging with e CS so as anyone here played with x-ray no",
    "start": "965590",
    "end": "974250"
  },
  {
    "text": "x-ray is a really really cool distributed tracing service baked into AWS you can use it with containers and",
    "start": "974250",
    "end": "981460"
  },
  {
    "text": "ECS you can use it with lambda you can use it with ec2 very very flexible and it allows you to automatically build up",
    "start": "981460",
    "end": "988480"
  },
  {
    "text": "a service map of all of your micro services and their interactions with AWS services and third-party services so it",
    "start": "988480",
    "end": "997090"
  },
  {
    "text": "requires you to make a few modifications to your applications okay so if I wanted",
    "start": "997090",
    "end": "1002460"
  },
  {
    "text": "to trace a nodejs application for example when I initiate the AWS SDK in",
    "start": "1002460",
    "end": "1007950"
  },
  {
    "text": "my app in my node code I can just wrap that with the x-ray function automatically then from then on all of",
    "start": "1007950",
    "end": "1014850"
  },
  {
    "text": "my interactions with AWS services are going to be graphed mapped for me I'm going to see things like average",
    "start": "1014850",
    "end": "1019860"
  },
  {
    "text": "transactions per second I'm going to see things like the failure rates so the colors here represent HTTP response",
    "start": "1019860",
    "end": "1026370"
  },
  {
    "text": "codes from those services so very easily you can get up and running and get this bird's-eye view of all your micro",
    "start": "1026370",
    "end": "1032100"
  },
  {
    "text": "services we have a guide on our website that shows exactly how to set this up with ECS but you can use this no matter",
    "start": "1032100",
    "end": "1038459"
  },
  {
    "text": "what container orchestration engine you're using to be honest what's cool is",
    "start": "1038459",
    "end": "1043500"
  },
  {
    "start": "1042000",
    "end": "1097000"
  },
  {
    "text": "you can deep dive a bit here and and see okay for these particular URLs that are",
    "start": "1043500",
    "end": "1048900"
  },
  {
    "text": "called in my application where's my latency right so we can see here in this example we can see our latency is there",
    "start": "1048900",
    "end": "1055800"
  },
  {
    "text": "of our URLs but we can also see the 89% of our traces had an ok response 1.76",
    "start": "1055800",
    "end": "1065160"
  },
  {
    "text": "had errors not in this demo you also get a nice",
    "start": "1065160",
    "end": "1070830"
  },
  {
    "text": "waterfall graph of all of your external dependencies and and the route that the",
    "start": "1070830",
    "end": "1076110"
  },
  {
    "text": "traffic takes between your micro services and AWS services so you can",
    "start": "1076110",
    "end": "1081179"
  },
  {
    "text": "drill down into detail and see okay that latency figure I saw it's probably made up from twelve point nine seconds here",
    "start": "1081179",
    "end": "1089190"
  },
  {
    "text": "going to dynamodb there so it's a really good way to get an insight into your",
    "start": "1089190",
    "end": "1094230"
  },
  {
    "text": "applications and understand what they're doing with ECS you also get cloud watch",
    "start": "1094230",
    "end": "1099929"
  },
  {
    "start": "1097000",
    "end": "1122000"
  },
  {
    "text": "built-in right so you're going to get monitoring for CPU and memory at a cluster level but also an ADCs service",
    "start": "1099929",
    "end": "1107789"
  },
  {
    "text": "level right so you're gonna be able to graph things like CPU and memory for your services but also if you're using",
    "start": "1107789",
    "end": "1114360"
  },
  {
    "text": "load balancers you're gonna be able to see the latency for incoming requests etc all built in by default out of the",
    "start": "1114360",
    "end": "1120690"
  },
  {
    "text": "box you can of course export these metrics to other toolings so if you're",
    "start": "1120690",
    "end": "1126419"
  },
  {
    "start": "1122000",
    "end": "1140000"
  },
  {
    "text": "using Prometheus for example or elasticsearch with the elk stack there's",
    "start": "1126419",
    "end": "1131789"
  },
  {
    "text": "a couple of open-source plugins that allow you to just export your data straight into those solutions for",
    "start": "1131789",
    "end": "1141059"
  },
  {
    "start": "1140000",
    "end": "1165000"
  },
  {
    "text": "logging ACS has centralized logging support built-in so within your task definition that JSON definition of your",
    "start": "1141059",
    "end": "1147780"
  },
  {
    "text": "containers you can specify lob drivers so potential options here are spunk if",
    "start": "1147780",
    "end": "1152820"
  },
  {
    "text": "you're running Splunk fluent d one really nice option is AWS logs which",
    "start": "1152820",
    "end": "1158039"
  },
  {
    "text": "will automatically export all of your containers standard out into cloud watch logs once it's in cloud watch logs you get",
    "start": "1158039",
    "end": "1166740"
  },
  {
    "start": "1165000",
    "end": "1209000"
  },
  {
    "text": "their UI the console within cloud watch logs you can search for your logs etc there's also a really nice feature",
    "start": "1166740",
    "end": "1173010"
  },
  {
    "text": "within cloud watch logs called metric filters metric filters allow you to",
    "start": "1173010",
    "end": "1178679"
  },
  {
    "text": "specify search patterns such as era user couldn't sign in or something some sort of text-based search pattern and when",
    "start": "1178679",
    "end": "1185909"
  },
  {
    "text": "you do that cloud watch logs is automatically gonna graph with cloud watch any occurrences of that log entry",
    "start": "1185909",
    "end": "1192059"
  },
  {
    "text": "you get a graph and you can see exactly when they're happening you can set alarms on that to notify",
    "start": "1192059",
    "end": "1197909"
  },
  {
    "text": "people or systems but you can also in that graph too right click and view the log entries",
    "start": "1197909",
    "end": "1203340"
  },
  {
    "text": "associated with that point in time so really nice way of just time together metrics and logs so to wrap up on the",
    "start": "1203340",
    "end": "1211350"
  },
  {
    "start": "1209000",
    "end": "1260000"
  },
  {
    "text": "ECS site and ets is a fully managed container orchestration engine it's",
    "start": "1211350",
    "end": "1216360"
  },
  {
    "text": "actually free as well so you pay for the ec2 resources for your container hosts the actual",
    "start": "1216360",
    "end": "1223230"
  },
  {
    "text": "scheduling part the container the backend the backplane that's the AWS management that's a free service we",
    "start": "1223230",
    "end": "1228990"
  },
  {
    "text": "offer to customers you can use things like low bounces or dns for service discovery with the ECS event stream that",
    "start": "1228990",
    "end": "1237270"
  },
  {
    "text": "gives you extreme flexibility over your scheduling options your placement strategies and constraints to optimize",
    "start": "1237270",
    "end": "1244500"
  },
  {
    "text": "your cluster you can use the SSM parameters store to store that configuration and secrets data",
    "start": "1244500",
    "end": "1251390"
  },
  {
    "text": "monitoring you have things like x-ray cloud watch car watch logs all your own tooling and as I mentioned it's free",
    "start": "1251390",
    "end": "1258480"
  },
  {
    "text": "service so with that said we've sort of gone over the ECS side there's gonna be",
    "start": "1258480",
    "end": "1265230"
  },
  {
    "start": "1260000",
    "end": "1293000"
  },
  {
    "text": "a point at the end for Q&A if anyone has questions around e CS or anything else in this talk I want to talk a bit about",
    "start": "1265230",
    "end": "1270840"
  },
  {
    "text": "something that we did recently which is join the cloud native computing foundation did anyone see this",
    "start": "1270840",
    "end": "1277020"
  },
  {
    "text": "announcement yeah okay so we joined this little while ago back in August and",
    "start": "1277020",
    "end": "1283169"
  },
  {
    "text": "there's been a lot of questions and speculation around our reasons for doing this and I just wanted to cover that off",
    "start": "1283169",
    "end": "1290250"
  },
  {
    "text": "and tell you our thoughts behind that so the cloud native computing foundation",
    "start": "1290250",
    "end": "1296010"
  },
  {
    "start": "1293000",
    "end": "1357000"
  },
  {
    "text": "covers 12 super interesting open source projects open source projects that are",
    "start": "1296010",
    "end": "1301500"
  },
  {
    "text": "interesting both to AWS and to our customers as well so a lot of people there's a lot of speculation around",
    "start": "1301500",
    "end": "1307590"
  },
  {
    "text": "kubernetes etc actually we're interested in a lot of these projects some real",
    "start": "1307590",
    "end": "1312750"
  },
  {
    "text": "examples here you'll see that we've already contributed towards things like container d c and i is another one here",
    "start": "1312750",
    "end": "1322289"
  },
  {
    "text": "so for e CS we're working on container networking right to be able to use AWS",
    "start": "1322289",
    "end": "1327899"
  },
  {
    "text": "networking primitives with your containers we're doing that with CNI so",
    "start": "1327899",
    "end": "1333720"
  },
  {
    "text": "the CNI specific occasion for Katainen networking is what we're using and you can actually go and read up about that on github we're",
    "start": "1333720",
    "end": "1339960"
  },
  {
    "text": "developing that in an open source community model and it's on the EECS agent page you can see all around there",
    "start": "1339960",
    "end": "1345450"
  },
  {
    "text": "are plans for integrating CNI with ECS there so while kubernetes is super interesting",
    "start": "1345450",
    "end": "1351600"
  },
  {
    "text": "to us and our customers our vision here for joining the CN CF is actually a lot bigger than that",
    "start": "1351600",
    "end": "1357020"
  },
  {
    "start": "1357000",
    "end": "1405000"
  },
  {
    "text": "that said the CN CF did a survey recently and apparently 63% of people",
    "start": "1357020",
    "end": "1364830"
  },
  {
    "text": "that run kubernetes running on AWS and thank you back to our goal earlier of",
    "start": "1364830",
    "end": "1369870"
  },
  {
    "text": "making AWS the best place to run containers no matter what your choice of orchestration engine is clearly we want",
    "start": "1369870",
    "end": "1377040"
  },
  {
    "text": "to make e AWS the best place to run kubernetes to so we're going to be contributing back to the communities project as well as",
    "start": "1377040",
    "end": "1383550"
  },
  {
    "text": "some of the other CN CF projects as well I know there's been a lot of speculation",
    "start": "1383550",
    "end": "1388650"
  },
  {
    "text": "around is AWS going to run a managed service etc there just to save you all",
    "start": "1388650",
    "end": "1393870"
  },
  {
    "text": "putting your hands up in a minute I can't talk or comment on that at all that's not an area that I'm gonna cover",
    "start": "1393870",
    "end": "1400020"
  },
  {
    "text": "today so sorry if that's the sole reason you came to this session okay so we",
    "start": "1400020",
    "end": "1407700"
  },
  {
    "start": "1405000",
    "end": "1514000"
  },
  {
    "text": "talked about the choices the main choices there between kubernetes ECS etc who's using what on the platform so it",
    "start": "1407700",
    "end": "1415110"
  },
  {
    "text": "turns out there's great stories on both sides right here so people like Expedia Travel X traveling so super interesting",
    "start": "1415110",
    "end": "1422010"
  },
  {
    "text": "they're running a PCI FCA regulated workload on ECS okay the really really",
    "start": "1422010",
    "end": "1430380"
  },
  {
    "text": "interesting story they've done some very interesting stuff around container security for containers talking to other",
    "start": "1430380",
    "end": "1435780"
  },
  {
    "text": "containers their mantra when I've spoken to them before has always been we've got the regulatory requirement but we want",
    "start": "1435780",
    "end": "1442020"
  },
  {
    "text": "to go more so super interesting there's a video actually on YouTube where we actually drill into their architecture",
    "start": "1442020",
    "end": "1448050"
  },
  {
    "text": "and go through it search for travel X this is my architecture and you'll find it Amazon another big user of ECS as well",
    "start": "1448050",
    "end": "1455910"
  },
  {
    "text": "there's some talks that we've done reinvent before talking about how Amazon uses ECS for generating recommendation",
    "start": "1455910",
    "end": "1463620"
  },
  {
    "text": "engine stuff with spark for example GoPro did a really cool case",
    "start": "1463620",
    "end": "1468690"
  },
  {
    "text": "you can go and watch a video where go pro tool called about their usage as well and then using kubernetes on AWS",
    "start": "1468690",
    "end": "1475290"
  },
  {
    "text": "you've got people like munzo bang trying to revolutionize the banking world these guys are super open about their usage",
    "start": "1475290",
    "end": "1481020"
  },
  {
    "text": "they've got a really good tech blog you can go and read up about what they're doing they're using link addy heavily as",
    "start": "1481020",
    "end": "1486390"
  },
  {
    "text": "well for service mesh very interesting zalando big European retailer and also",
    "start": "1486390",
    "end": "1492240"
  },
  {
    "text": "Ticketmaster so Ticketmaster actually I brought along Rick with me so Rick has",
    "start": "1492240",
    "end": "1498390"
  },
  {
    "text": "come from Ticketmaster he's gonna dive deep on kubernetes he's actually came to",
    "start": "1498390",
    "end": "1503640"
  },
  {
    "text": "me and said I want to do quite a got a big demo quite a big there he he's gonna deploy a whole cluster here live on",
    "start": "1503640",
    "end": "1509640"
  },
  {
    "text": "stage and deploy some services to it so it should be a really good demo Rick you're up all right bear with me guys",
    "start": "1509640",
    "end": "1528240"
  },
  {
    "start": "1514000",
    "end": "1597000"
  },
  {
    "text": "what I said",
    "start": "1528240",
    "end": "1530720"
  },
  {
    "text": "right guys so Paul asked me to come here today to talk to you about Cuba Nettie's and the way that Ticketmaster are doing",
    "start": "1544200",
    "end": "1551369"
  },
  {
    "text": "it on AWS I'm going to tell you a couple of ways Ticketmaster doing at AWS because there's lots of ways to run this and",
    "start": "1551369",
    "end": "1558419"
  },
  {
    "text": "we've got a couple of ways we do it internally so I'll explain those reasons as we go through well first of all let",
    "start": "1558419",
    "end": "1568169"
  },
  {
    "text": "me about me I'm Rick Harvey I'm a contractor with taking master I came in",
    "start": "1568169",
    "end": "1573389"
  },
  {
    "text": "to help them with their kubernetes products I've also been a channel for Six Nations and Ticketmaster in a",
    "start": "1573389",
    "end": "1580559"
  },
  {
    "text": "previous life as well and I specialized in doing migrations from on-prem",
    "start": "1580559",
    "end": "1587190"
  },
  {
    "text": "datacenters in to AWS so I've been doing this for quite a while now I'm Rick",
    "start": "1587190",
    "end": "1592200"
  },
  {
    "text": "without the K as well this is you may have noticed by the the picture so Cuba",
    "start": "1592200",
    "end": "1599759"
  },
  {
    "start": "1597000",
    "end": "1801000"
  },
  {
    "text": "Nettie's Ticketmaster have two primary ways of doing this we use tectonic and",
    "start": "1599759",
    "end": "1606119"
  },
  {
    "text": "we use cops I'm gonna go deep on cops today and tell you about how we use cops",
    "start": "1606119",
    "end": "1611419"
  },
  {
    "text": "but first of all let me tell you about tectonic take a masters a very very large company and we have different",
    "start": "1611419",
    "end": "1618509"
  },
  {
    "text": "products all around the world the US guys run tectonic and this is primarily",
    "start": "1618509",
    "end": "1625649"
  },
  {
    "text": "because they have very very large clusters that have multiple products in there so it's a multi-talented",
    "start": "1625649",
    "end": "1631700"
  },
  {
    "text": "deployment of cuban artists it needs to be kept separate in namespaces and",
    "start": "1631700",
    "end": "1637220"
  },
  {
    "text": "there's a lot of data being transferred between so things like etcd",
    "start": "1637220",
    "end": "1642509"
  },
  {
    "text": "which is used for service discovery and configuration management within the cluster is very very busy",
    "start": "1642509",
    "end": "1649619"
  },
  {
    "text": "tectonic support support having your own separate etcd cluster on the side and",
    "start": "1649619",
    "end": "1655379"
  },
  {
    "text": "this makes a very very very fast cluster for you International which is the UK",
    "start": "1655379",
    "end": "1663330"
  },
  {
    "text": "really we use cops because we have a bit of a different deployment mechanism we",
    "start": "1663330",
    "end": "1670279"
  },
  {
    "text": "tend to isolate products or product groups into their own V pcs enable",
    "start": "1670279",
    "end": "1676210"
  },
  {
    "text": "so when we come to deploy in Cuba Nettie's we end up with 1 cluster per product group now if we're having a",
    "start": "1676210",
    "end": "1683259"
  },
  {
    "text": "separate attd cluster for every one of these as you can imagine we'd have lots of lots of instances and the cost would",
    "start": "1683259",
    "end": "1689860"
  },
  {
    "text": "rack up very very quickly on on ec2 costs so it's kind of why there's two",
    "start": "1689860",
    "end": "1695740"
  },
  {
    "text": "different deployment mechanisms they're both pretty awesome ways to do tectonic",
    "start": "1695740",
    "end": "1702369"
  },
  {
    "text": "is a licensed propriety deployment",
    "start": "1702369",
    "end": "1707679"
  },
  {
    "text": "you'll need a license key you can run it for 10 nodes free cops on the other end",
    "start": "1707679",
    "end": "1713049"
  },
  {
    "text": "is a entirely open-source product another reason for us using it because",
    "start": "1713049",
    "end": "1719379"
  },
  {
    "text": "it's it's free so let me just skip back",
    "start": "1719379",
    "end": "1725610"
  },
  {
    "text": "our deployment environments we tend to use terraform for everything we do in",
    "start": "1725610",
    "end": "1732580"
  },
  {
    "text": "amazon so we can repeat it we can replace it as everybody's asked them very very easily and we can spin up",
    "start": "1732580",
    "end": "1738669"
  },
  {
    "text": "other environments we can spin up dev test QA very very easily from that now this",
    "start": "1738669",
    "end": "1746399"
  },
  {
    "text": "causes some issues when doing some of the deployments but there's ways to work around it which I'll dive into",
    "start": "1746399",
    "end": "1752279"
  },
  {
    "text": "everything that we do in AWS we tag and if it's not tagged it gets deleted so if",
    "start": "1752279",
    "end": "1760600"
  },
  {
    "text": "a dev comes up and spins up a few ec2 instances that we don't really know what they're doing and they're not tagged",
    "start": "1760600",
    "end": "1765820"
  },
  {
    "text": "them with the probe the product code environment and what the application is it will get deleted within 15 minutes so",
    "start": "1765820",
    "end": "1772779"
  },
  {
    "text": "it stops people Bitcoin mining on arguably us account basically we try and",
    "start": "1772779",
    "end": "1779320"
  },
  {
    "text": "do everything to best practice so when we create DPC's we have public subnets and private subnets and the only things",
    "start": "1779320",
    "end": "1787450"
  },
  {
    "text": "that really go in public of bastion house and elastic load balancers everything else is in public and we use",
    "start": "1787450",
    "end": "1794710"
  },
  {
    "text": "network access control lists and security groups to to look after the ingress basically an egress so why did",
    "start": "1794710",
    "end": "1803230"
  },
  {
    "start": "1801000",
    "end": "2090000"
  },
  {
    "text": "we use kubernetes over ETS well one of the big reasons was",
    "start": "1803230",
    "end": "1808490"
  },
  {
    "text": "the community there's a lot of help out there and a lot of our guys are very very active in the community",
    "start": "1808490",
    "end": "1814570"
  },
  {
    "text": "contributing code back to to the kubernetes and tectonic products at the",
    "start": "1814570",
    "end": "1820009"
  },
  {
    "text": "same time so it was very very easy to get involved in get help with and pass",
    "start": "1820009",
    "end": "1827179"
  },
  {
    "text": "ideas around so that was one of the main ones the cube control now this is this",
    "start": "1827179",
    "end": "1833480"
  },
  {
    "text": "is the key to a community's cluster it's the way of connecting in running your",
    "start": "1833480",
    "end": "1839059"
  },
  {
    "text": "workloads getting information out it's a very very powerful tool it's very",
    "start": "1839059",
    "end": "1844159"
  },
  {
    "text": "similar to the ETS CLI tool but you've got one or two advantages of it is you",
    "start": "1844159",
    "end": "1849499"
  },
  {
    "text": "can actually drop direct into a container for debug purposes so a bit like with docker how you can run docker",
    "start": "1849499",
    "end": "1855529"
  },
  {
    "text": "exec and drop into a container you can do the same with the cube control tool across the network it will automatically",
    "start": "1855529",
    "end": "1862700"
  },
  {
    "text": "find the host for you or find the container and connect your laptop to to",
    "start": "1862700",
    "end": "1868220"
  },
  {
    "text": "that container so it's very very good for debug purposes we have a large",
    "start": "1868220",
    "end": "1873889"
  },
  {
    "text": "amount of products so orchestration is is key to everything",
    "start": "1873889",
    "end": "1879259"
  },
  {
    "text": "be enough to repeat it replace it update it Kuban it is is great for that just",
    "start": "1879259",
    "end": "1885320"
  },
  {
    "text": "like ECS you have either adjacent or in our case we can have a y ml file as well don't about honest yes yeah yeah so we",
    "start": "1885320",
    "end": "1896299"
  },
  {
    "text": "can object not yeah more bit the same you define your your services in there now cuba Nettie's has some slightly",
    "start": "1896299",
    "end": "1903799"
  },
  {
    "text": "different concepts to ets pods are a collection of like-minded containers",
    "start": "1903799",
    "end": "1911149"
  },
  {
    "text": "that you put together a pods quite clever actually it shares a local host",
    "start": "1911149",
    "end": "1916700"
  },
  {
    "text": "network so if I was to spend a pod up with a patchy web server and a MySQL",
    "start": "1916700",
    "end": "1922789"
  },
  {
    "text": "database I can write code that runs on Apache that talks to localhost 3306",
    "start": "1922789",
    "end": "1929539"
  },
  {
    "text": "and I'd get into my database without having to do large amounts of service discovery extras on top it's there by",
    "start": "1929539",
    "end": "1937100"
  },
  {
    "text": "default in the concepts of a pod you can horse also have what used to be",
    "start": "1937100",
    "end": "1943080"
  },
  {
    "text": "called replication controllers now these are ways of scaling your pots so you",
    "start": "1943080",
    "end": "1949590"
  },
  {
    "text": "might want several copies of your apache or nginx front end this has been",
    "start": "1949590",
    "end": "1955049"
  },
  {
    "text": "replaced recently recent called deployments it's a similar kind of concept but a little bit more powerful",
    "start": "1955049",
    "end": "1963679"
  },
  {
    "text": "we mentioned about constraining where you want to run your workloads this is a",
    "start": "1963890",
    "end": "1971220"
  },
  {
    "text": "relatively new concept in Cuba Nettie's at one point six I believe take some",
    "start": "1971220",
    "end": "1977340"
  },
  {
    "text": "tolerances we always used to label Cuba Nettie's workers their nodes and give",
    "start": "1977340",
    "end": "1984690"
  },
  {
    "text": "them things like say this has got SSD attached to it this one's in EU West 1a",
    "start": "1984690",
    "end": "1990870"
  },
  {
    "text": "1b 1c so you could attach EBS disks to it on the fly so your container would",
    "start": "1990870",
    "end": "1997410"
  },
  {
    "text": "have to run in a particular easy to connect in you could do that with labels but now you do person called paints and",
    "start": "1997410",
    "end": "2003980"
  },
  {
    "text": "tolerances there's slightly more powerful set of verbs to describe how",
    "start": "2003980",
    "end": "2009530"
  },
  {
    "text": "you're going to connect together and by that I can say if application is running",
    "start": "2009530",
    "end": "2016250"
  },
  {
    "text": "on this server never allow application be to run on here in fact don't let anything else run on this server because",
    "start": "2016250",
    "end": "2023090"
  },
  {
    "text": "you may have issues on the inverse I can say well this is a dev box so I'm gonna",
    "start": "2023090",
    "end": "2029900"
  },
  {
    "text": "tolerate it running on there and allow you to just squash it down and give it performance problems because it's only a",
    "start": "2029900",
    "end": "2035630"
  },
  {
    "text": "dev container it's allows you to mix your workloads a lot better and get very very dense",
    "start": "2035630",
    "end": "2041380"
  },
  {
    "text": "deployments so why cops it gave us the",
    "start": "2041380",
    "end": "2047090"
  },
  {
    "text": "ability to deploy into our existing V pcs which are all terraformed I've",
    "start": "2047090",
    "end": "2052850"
  },
  {
    "text": "mentioned the cost savings already with etcd I'm rolling updates now this is",
    "start": "2052850",
    "end": "2058520"
  },
  {
    "text": "pretty cool feature if anyone's ever built a Cuban artists cluster by hand and try to do updates it can be very",
    "start": "2058520",
    "end": "2064429"
  },
  {
    "text": "very painful you can end up completely toast in etcd which is all your config",
    "start": "2064429",
    "end": "2069530"
  },
  {
    "text": "and stayed guest split brain we're in a world of pain the cops tool takes care of all of this",
    "start": "2069530",
    "end": "2076608"
  },
  {
    "text": "for you it just works and then we've got the the fact it's also community led products",
    "start": "2076609",
    "end": "2083329"
  },
  {
    "text": "and it's in the communities github so it's a very very responsive area right",
    "start": "2083329",
    "end": "2091220"
  },
  {
    "start": "2090000",
    "end": "2118000"
  },
  {
    "text": "guys so this is where I'm going to try and show you the power of cops and hope everything works in a bit of a live demo",
    "start": "2091220",
    "end": "2098319"
  },
  {
    "text": "so with this let's just flick over to my",
    "start": "2098319",
    "end": "2104450"
  },
  {
    "text": "terminal now you might move to see I've got a backup there waiting just in case",
    "start": "2104450",
    "end": "2110530"
  },
  {
    "text": "I'm also going to flick over to my over",
    "start": "2110530",
    "end": "2118400"
  },
  {
    "text": "to my ear ec2 and s3 consoles just to show you I'm not cheating so when we do",
    "start": "2118400",
    "end": "2125599"
  },
  {
    "text": "a deployment cops uses an s3 bucket to handle things like PKI and the cloud in",
    "start": "2125599",
    "end": "2133220"
  },
  {
    "text": "it convicts that are going to be consumed by the cluster as it boots show you I'm not cheating here's an empty",
    "start": "2133220",
    "end": "2139400"
  },
  {
    "text": "bucket nothing special guys but and just to prove I'm not cheating and I'm gonna run",
    "start": "2139400",
    "end": "2145460"
  },
  {
    "text": "this one in Frankfurt cuz I've got no workloads in Frankfurt at the moment so you can see got no easy two instances",
    "start": "2145460",
    "end": "2152529"
  },
  {
    "text": "okay so when we when we're running this I'm going to cheat and copy a lot of",
    "start": "2152529",
    "end": "2157819"
  },
  {
    "text": "stuff over to my other terminal window just because I'll probably fat fingers",
    "start": "2157819",
    "end": "2163339"
  },
  {
    "text": "think if I try and type it live and it won't work so we're going to set up our cops demo contained to iOS our domain",
    "start": "2163339",
    "end": "2170990"
  },
  {
    "text": "name and we're going to set a few things up I showed you that s3 bucket as well",
    "start": "2170990",
    "end": "2176240"
  },
  {
    "text": "that had created and we're just going to set this up in out in our shell session",
    "start": "2176240",
    "end": "2181910"
  },
  {
    "text": "so we can refer to it by variable so I have to retype out every time it's",
    "start": "2181910",
    "end": "2189529"
  },
  {
    "text": "relatively simple what we're going to do here we're going to run create cluster",
    "start": "2189529",
    "end": "2194809"
  },
  {
    "text": "now when you create a cluster like this",
    "start": "2194809",
    "end": "2199839"
  },
  {
    "text": "cops is going to create everything for us it's going to create a V PC for us",
    "start": "2199839",
    "end": "2205670"
  },
  {
    "text": "it's going to create the security groups and that gateways all the subnets will be set up",
    "start": "2205670",
    "end": "2211140"
  },
  {
    "text": "as well and the route tables and everything will be there for you in this particular demo I'm going to",
    "start": "2211140",
    "end": "2217110"
  },
  {
    "text": "give it give us a multi master set up so we've got three masters one in each AZ and I'm also going to ask for three",
    "start": "2217110",
    "end": "2223290"
  },
  {
    "text": "workers three nodes I've told it it's apology private now this is quite",
    "start": "2223290",
    "end": "2229980"
  },
  {
    "text": "important that apology private will mean that all my instances get deployed in",
    "start": "2229980",
    "end": "2235230"
  },
  {
    "text": "private subnets within AWS and the only way we're going to have ingress into that is via elastic load balancers that",
    "start": "2235230",
    "end": "2241920"
  },
  {
    "text": "are going to run in the public subnets cops takes care of tagging all us or nets for us as well so Cuba Nettie's can",
    "start": "2241920",
    "end": "2248580"
  },
  {
    "text": "understand what goes where so let's let's run this command first what this",
    "start": "2248580",
    "end": "2255420"
  },
  {
    "text": "is doing in the background is it discovering what we've got over in in",
    "start": "2255420",
    "end": "2260490"
  },
  {
    "text": "Frankfurt it's going to set up some it's",
    "start": "2260490",
    "end": "2265530"
  },
  {
    "text": "going to set up a side a block for us it's adding some entries into DNS ready for us to go and it's creating PKI",
    "start": "2265530",
    "end": "2273510"
  },
  {
    "text": "certificates now these PKI certificates are quite important these are the things that",
    "start": "2273510",
    "end": "2280050"
  },
  {
    "text": "allow nodes to talk to each other directly now when i refresh this booklet",
    "start": "2280050",
    "end": "2286170"
  },
  {
    "text": "you see I've got my cluster in here and if we dig into this you can see we've",
    "start": "2286170",
    "end": "2291810"
  },
  {
    "text": "got PGI cluster spec and config conflict being cloud cloud init instance groups",
    "start": "2291810",
    "end": "2299010"
  },
  {
    "text": "are covering a second once we get going I'm going to tell it to spin up now and then take you through it while it's",
    "start": "2299010",
    "end": "2305460"
  },
  {
    "text": "doing it so rather strangely create",
    "start": "2305460",
    "end": "2312240"
  },
  {
    "text": "cluster doesn't actually create any AWS instances for you it just sets",
    "start": "2312240",
    "end": "2317970"
  },
  {
    "text": "everything up the next command that we run which is edit update cluster with a",
    "start": "2317970",
    "end": "2324060"
  },
  {
    "text": "yes command and the end I've got the right one is actually going to instruct",
    "start": "2324060",
    "end": "2329870"
  },
  {
    "text": "the API on AWS to go and create our instances for us",
    "start": "2329870",
    "end": "2336060"
  },
  {
    "text": "so we're going to let that run in the background and as it comes up everything it's going to get created for us and we",
    "start": "2336060",
    "end": "2342630"
  },
  {
    "text": "should see very very quickly we'll start to get instances in this in this console",
    "start": "2342630",
    "end": "2349200"
  },
  {
    "text": "here I'll flick back in a moment let's have a look at a bit of a slide why",
    "start": "2349200",
    "end": "2355680"
  },
  {
    "text": "we're doing this so this is what we're trying to trying to achieve we want a",
    "start": "2355680",
    "end": "2362960"
  },
  {
    "text": "auto scaling group for each master now the reason why it's in an auto scaling group of one is if that must-haves fails",
    "start": "2362960",
    "end": "2369180"
  },
  {
    "text": "it will get replaced attached to this auto scale is an EBS volume that gets",
    "start": "2369180",
    "end": "2375660"
  },
  {
    "text": "attached to the master and that holds etcd for us in this case it's actually encrypted as well so it's encrypted at",
    "start": "2375660",
    "end": "2382470"
  },
  {
    "text": "rest so all your config senior secrets that you put into cubing that is a secure at rest we've then got a big Auto",
    "start": "2382470",
    "end": "2391170"
  },
  {
    "text": "scale group with all our workers in we've told it to have three for now in",
    "start": "2391170",
    "end": "2396720"
  },
  {
    "text": "cops we call this an instance group and an instance group basically a collection of of worker nodes for you that you can",
    "start": "2396720",
    "end": "2403650"
  },
  {
    "text": "add labels to these labels are important for the Tate's and tolerances that I mentioned earlier and we can have",
    "start": "2403650",
    "end": "2411600"
  },
  {
    "text": "multiple instance groups we can actually go into the cops command line and say give me another instance group and we",
    "start": "2411600",
    "end": "2417270"
  },
  {
    "text": "could create another instance group we could tell it to only span to 80s for example and we could say within that",
    "start": "2417270",
    "end": "2423630"
  },
  {
    "text": "instance group we want them to have provisioned i/o disks and we want to put",
    "start": "2423630",
    "end": "2429900"
  },
  {
    "text": "on a taint there that only allows database containers connect to them so",
    "start": "2429900",
    "end": "2436170"
  },
  {
    "text": "we've got high i/o on the back end if reduce take all sets so we can have",
    "start": "2436170",
    "end": "2442890"
  },
  {
    "text": "multiple tiers of this and we can also go into the into the the nitty-gritty",
    "start": "2442890",
    "end": "2448770"
  },
  {
    "text": "within cops and add extra subnets in there so we could separate masters and",
    "start": "2448770",
    "end": "2455160"
  },
  {
    "text": "we could separate instance groups out into their own subnets with variable yes",
    "start": "2455160",
    "end": "2460330"
  },
  {
    "text": "it's all doable from there the main command line all right let's see if we've got anything spinning up yet guys",
    "start": "2460330",
    "end": "2467340"
  },
  {
    "text": "right okay whoo lookee right we've got three masters and three nodes being",
    "start": "2467340",
    "end": "2473650"
  },
  {
    "text": "created I'll talk a little bit more why these initialize but if we have a look",
    "start": "2473650",
    "end": "2479860"
  },
  {
    "text": "at our our console we've finished giving the commands it's all now in the hands",
    "start": "2479860",
    "end": "2485680"
  },
  {
    "text": "of Amazon Web Services where it should work another thing the cops tool does",
    "start": "2485680",
    "end": "2492790"
  },
  {
    "text": "for you it sets up your cue control config so this is your set of certificates you have on your local",
    "start": "2492790",
    "end": "2498730"
  },
  {
    "text": "machine to be able to connect in and authenticate now if we just give this a",
    "start": "2498730",
    "end": "2503950"
  },
  {
    "text": "quick view you can see I've got two configurations here if I move this high off the screen you can see anyway",
    "start": "2503950",
    "end": "2510880"
  },
  {
    "text": "I've got the backup cluster just in case this wasn't going to work and in yellow highlighted is the cluster I've just",
    "start": "2510880",
    "end": "2518860"
  },
  {
    "text": "created this is also up for me magically cops is taking care of PKI it's great",
    "start": "2518860",
    "end": "2526210"
  },
  {
    "text": "certificates for the users it's creative passwords for the dashboards everything's done for you so it's it's",
    "start": "2526210",
    "end": "2533080"
  },
  {
    "text": "very very handy and if you've ever built a cluster by hand you know how much time",
    "start": "2533080",
    "end": "2538210"
  },
  {
    "text": "this can actually take while doing it so let's see if we've got any status coming",
    "start": "2538210",
    "end": "2544150"
  },
  {
    "text": "yeah I very much doubt it because we're under five minutes but so yeah our load",
    "start": "2544150",
    "end": "2552850"
  },
  {
    "start": "2550000",
    "end": "3170000"
  },
  {
    "text": "balancer hasn't come up yet well it's come up but we've got nothing connected so some other one of the resources",
    "start": "2552850",
    "end": "2559390"
  },
  {
    "text": "copses crate for us a load balancer for the API you can go in and specify when",
    "start": "2559390",
    "end": "2564820"
  },
  {
    "text": "you create this you can actually do some funky stuff and enhancer security groups on there by default the security groups",
    "start": "2564820",
    "end": "2571780"
  },
  {
    "text": "are pretty open that doesn't mean have a go at connecting to my cluster police but it's",
    "start": "2571780",
    "end": "2578410"
  },
  {
    "text": "all good and so I can show you while this is booting up a little bit of how",
    "start": "2578410",
    "end": "2586150"
  },
  {
    "text": "cops describes a cluster so this is our Alcott's configuration",
    "start": "2586150",
    "end": "2593809"
  },
  {
    "text": "this is what gets stored in s3 we've got specifications of the etcd",
    "start": "2593809",
    "end": "2599980"
  },
  {
    "text": "service ect runs on the Masters that's where our big",
    "start": "2599980",
    "end": "2605059"
  },
  {
    "text": "cost-saving is in the International as you can see the API access is a little bit open there with a with a zero range",
    "start": "2605059",
    "end": "2612140"
  },
  {
    "text": "on you can also go in and update the version of humanities you're learning I think one seven six is the latest stable",
    "start": "2612140",
    "end": "2619880"
  },
  {
    "text": "so you could you could tweak that and then apply a rolling update and it'll push it out to the rest of it here's our",
    "start": "2619880",
    "end": "2629509"
  },
  {
    "text": "subnets now if you're going to deploy into an existing subnet this is a bit",
    "start": "2629509",
    "end": "2635539"
  },
  {
    "text": "that you'll be tweaking around it's not very well documented at the moment but this is a bitty tweaking you have to",
    "start": "2635539",
    "end": "2642259"
  },
  {
    "text": "have a private and a utility set of descriptions private is where your masters go utility could be a separate",
    "start": "2642259",
    "end": "2649519"
  },
  {
    "text": "set of subnets yeah again it's a private subnet in the utility ones we have",
    "start": "2649519",
    "end": "2655190"
  },
  {
    "text": "dispensed specifying that gateways things like that because these are the ones that can't connect out so we go in",
    "start": "2655190",
    "end": "2662660"
  },
  {
    "text": "and do that ourselves and then as I've said everything's private on the",
    "start": "2662660",
    "end": "2668059"
  },
  {
    "text": "topology here we've got private on both but my DNS is a public dns that's fine my DNS is in route 53 it was a",
    "start": "2668059",
    "end": "2676700"
  },
  {
    "text": "pre-existing zone there you can use external providers but it just works",
    "start": "2676700",
    "end": "2681740"
  },
  {
    "text": "really really well with with the integration with route 53 if yours to",
    "start": "2681740",
    "end": "2687319"
  },
  {
    "text": "edit this once you've done it you you run a cops update cluster and it'll tell",
    "start": "2687319",
    "end": "2694579"
  },
  {
    "text": "you what changes is going to make and then cops update cluster with a - - yes on the end and it'll do the updates for",
    "start": "2694579",
    "end": "2700819"
  },
  {
    "text": "you if you're doing something it's going to change existing nodes that's up there there's also a concept of rolling",
    "start": "2700819",
    "end": "2706730"
  },
  {
    "text": "updates and that will that will get pushed through as well which is really quite cool so let's see let's see what",
    "start": "2706730",
    "end": "2713539"
  },
  {
    "text": "we've got Hey so we've got some nodes running as you can see two of them are reporting",
    "start": "2713539",
    "end": "2720049"
  },
  {
    "text": "not ready yet but they'll be here in a fuse humans also this is all my resource that",
    "start": "2720049",
    "end": "2726079"
  },
  {
    "text": "I've created on AWS s3 masters three nodes in here so we're getting to the",
    "start": "2726079",
    "end": "2731359"
  },
  {
    "text": "state where we should have ready on everything another another watershed",
    "start": "2731359",
    "end": "2737480"
  },
  {
    "text": "moment there that we've passed so at the moment it's not particularly impressive",
    "start": "2737480",
    "end": "2743020"
  },
  {
    "text": "we can go a little bit deeper so cube",
    "start": "2743020",
    "end": "2748280"
  },
  {
    "text": "control get nodes from the namespace",
    "start": "2748280",
    "end": "2754270"
  },
  {
    "text": "cube system you'll see what it's been done and configured for us in the background nope",
    "start": "2754270",
    "end": "2761980"
  },
  {
    "text": "let's get the pods instead of the nodes you see we've got quite a few things",
    "start": "2761980",
    "end": "2767900"
  },
  {
    "text": "running for us all in containers so we've got the control manager the API",
    "start": "2767900",
    "end": "2774079"
  },
  {
    "text": "serve the proxies that cube DNS the scheduler and we'll also have a few",
    "start": "2774079",
    "end": "2780410"
  },
  {
    "text": "Calico nodes up here because I've I pick calico as a as a network CNI module you",
    "start": "2780410",
    "end": "2786710"
  },
  {
    "text": "can also swap that quite easily for things like weave or flannel it's just a flaky change so it's it's very very very",
    "start": "2786710",
    "end": "2795230"
  },
  {
    "text": "easy to change stuff right so I kind of",
    "start": "2795230",
    "end": "2800420"
  },
  {
    "text": "wanted to show you something that looks a little bit prettier than a command line so I'm going to hop on here and I'm",
    "start": "2800420",
    "end": "2806839"
  },
  {
    "text": "going to tell our cluster too so first",
    "start": "2806839",
    "end": "2813859"
  },
  {
    "text": "of all have heap stir now Paul talks about monitoring heap stirs a way of getting some",
    "start": "2813859",
    "end": "2819410"
  },
  {
    "text": "statistics and out of our nodes and into various things you can plug in to",
    "start": "2819410",
    "end": "2825440"
  },
  {
    "text": "Prometheus quite easily there's a very good Prometheus plugin there's some open",
    "start": "2825440",
    "end": "2830660"
  },
  {
    "text": "source projects to push into Clare watch and stuff as well I'm just going to do it locally and I'm also going to create",
    "start": "2830660",
    "end": "2837470"
  },
  {
    "text": "the dashboard for you so if we have a",
    "start": "2837470",
    "end": "2844430"
  },
  {
    "text": "look at this dashboard llamó file it's just",
    "start": "2844430",
    "end": "2850060"
  },
  {
    "text": "very very similar to what Paul was showing is a little bit more ridiculous the dashboard has to have role based",
    "start": "2850060",
    "end": "2857470"
  },
  {
    "text": "authentication our back integration into it but at the heart we're specifying a container the version",
    "start": "2857470",
    "end": "2864310"
  },
  {
    "text": "the container and we're also specifying some ingress into there which in our",
    "start": "2864310",
    "end": "2869500"
  },
  {
    "text": "case is an elastic load balancer so if",
    "start": "2869500",
    "end": "2875080"
  },
  {
    "text": "we now have a look at this pod sort of running somewhere in this right here at",
    "start": "2875080",
    "end": "2880599"
  },
  {
    "text": "the bottom we've got the cuba Nettie's dashboard up and running now mentioned",
    "start": "2880599",
    "end": "2887020"
  },
  {
    "text": "services so this is quite important for what we're about to do next services so I don't have an external IP",
    "start": "2887020",
    "end": "2900820"
  },
  {
    "text": "for that nevermind",
    "start": "2900820",
    "end": "2903750"
  },
  {
    "text": "yeah so the dashboard here is running locally my cluster and I've got no service connected to at the moment not",
    "start": "2910490",
    "end": "2918950"
  },
  {
    "text": "quite sure why let's have a quick look",
    "start": "2918950",
    "end": "2925609"
  },
  {
    "text": "at our our config so",
    "start": "2925609",
    "end": "2930039"
  },
  {
    "text": "we'll come back to that one in a bit I",
    "start": "2938440",
    "end": "2942579"
  },
  {
    "text": "didn't now now didn't pray to it I didn't do my sacrifice let's hope the",
    "start": "2943480",
    "end": "2948830"
  },
  {
    "text": "deployment works a little bit better here so what I'm going to try and show",
    "start": "2948830",
    "end": "2954830"
  },
  {
    "text": "you is how Cuba Nettie's can actually link in with the AWS features and we can",
    "start": "2954830",
    "end": "2959869"
  },
  {
    "text": "go in there and we can get it to create a load balancer for us to open our",
    "start": "2959869",
    "end": "2965300"
  },
  {
    "text": "service up so we can actually use it so",
    "start": "2965300",
    "end": "2970910"
  },
  {
    "text": "here first of all I'm going to ask it to just deploy the stock nginx mind the",
    "start": "2970910",
    "end": "2980180"
  },
  {
    "text": "right directory the stock nginx",
    "start": "2980180",
    "end": "2985270"
  },
  {
    "text": "let's create the namespace first",
    "start": "2991240",
    "end": "2995290"
  },
  {
    "text": "so namespaces away illogically separating your applications from each other quite useful for if you've got",
    "start": "3003830",
    "end": "3011090"
  },
  {
    "text": "lots of deployments and go multi-talented right that one worked so once we've got that up and running we're",
    "start": "3011090",
    "end": "3018530"
  },
  {
    "text": "going to end up with three nginx servers spread out across our cluster and what I",
    "start": "3018530",
    "end": "3025940"
  },
  {
    "text": "want to do now is expose this exposing",
    "start": "3025940",
    "end": "3031010"
  },
  {
    "text": "basically Krause has a load balancer and it connects it back into our kubernetes cluster at the moment the default",
    "start": "3031010",
    "end": "3036590"
  },
  {
    "text": "integration with kubernetes is by elastic load balancer not application load balancer ticketmaster are working",
    "start": "3036590",
    "end": "3043100"
  },
  {
    "text": "with core OS on alb ingress controller so hopefully that's something they'll get moved along soon okay right yeah",
    "start": "3043100",
    "end": "3053900"
  },
  {
    "text": "I'll pick those up in a moment so now that exposed our our service what",
    "start": "3053900",
    "end": "3061760"
  },
  {
    "text": "we need to do is",
    "start": "3061760",
    "end": "3070210"
  },
  {
    "text": "have a look what it's called our load balancer first of all and when",
    "start": "3072160",
    "end": "3078940"
  },
  {
    "text": "everything comes up and connects and goes through it should all be happy so",
    "start": "3078940",
    "end": "3084420"
  },
  {
    "text": "we'll have a new load balancer here that Cuba Nettie's is provisioned for us",
    "start": "3084420",
    "end": "3089910"
  },
  {
    "text": "we'll just wait for the instances to come into service and as soon as it does I'll show you the default nginx page",
    "start": "3089910",
    "end": "3095590"
  },
  {
    "text": "which is really really exciting but it will work this time okay so so there's a question here on",
    "start": "3095590",
    "end": "3107170"
  },
  {
    "text": "twitch can kubernetes and cots synergize with ETS not out the box you've got two",
    "start": "3107170",
    "end": "3115830"
  },
  {
    "text": "areas for your containers to run you've got pcs you have containers in there and",
    "start": "3115830",
    "end": "3121630"
  },
  {
    "text": "you've got cuba Nettie's spawned by cops and that's the kind of siloed you could",
    "start": "3121630",
    "end": "3129910"
  },
  {
    "text": "use it like console to put a service discovery across the entire set of",
    "start": "3129910",
    "end": "3135190"
  },
  {
    "text": "clusters that you've got running and you could use service discovery like that externally to try and connect things",
    "start": "3135190",
    "end": "3140320"
  },
  {
    "text": "together there'd be a little bit of work probably to do on the side of security",
    "start": "3140320",
    "end": "3147430"
  },
  {
    "text": "groups and everything because by default the cops cluster that's come up allows cops knows to talk to cops nodes and",
    "start": "3147430",
    "end": "3154060"
  },
  {
    "text": "nobody else anything else",
    "start": "3154060",
    "end": "3163620"
  },
  {
    "start": "3170000",
    "end": "3319000"
  },
  {
    "text": "or to them why you did that okay there's a question over right why",
    "start": "3170530",
    "end": "3175580"
  },
  {
    "text": "does the auto scaling group from the master have just one note now this is",
    "start": "3175580",
    "end": "3180920"
  },
  {
    "text": "for Auto healing not auto scaling really so if our master was to fail in any",
    "start": "3180920",
    "end": "3186770"
  },
  {
    "text": "particular availability zone the auto scaling group will take care of it and just replace it with a brand new one so",
    "start": "3186770",
    "end": "3193130"
  },
  {
    "text": "if it detects failure it will get replaced or if you kill it accidentally it will get replaced so that's what we",
    "start": "3193130",
    "end": "3200240"
  },
  {
    "text": "use that right fingers crossed everybody there you go",
    "start": "3200240",
    "end": "3205700"
  },
  {
    "text": "welcome to nginx so this is a really",
    "start": "3205700",
    "end": "3215960"
  },
  {
    "text": "really simple demo to show you that within ten or so minutes we've got a cluster up and running we got connected",
    "start": "3215960",
    "end": "3221900"
  },
  {
    "text": "in and that's how easy is nowadays to",
    "start": "3221900",
    "end": "3227270"
  },
  {
    "text": "actually consume easy to use kubernetes on top which before used to be quite a",
    "start": "3227270",
    "end": "3233480"
  },
  {
    "text": "pain to actually get all that up and running so so it's a big step forward there are lots of other tools you should",
    "start": "3233480",
    "end": "3239330"
  },
  {
    "text": "look at this cube spray so the cube AWS or cube or I can't remember which one it",
    "start": "3239330",
    "end": "3245510"
  },
  {
    "text": "is but one of them's become cops the other ones are still a separate product there are lots of ways of doing this",
    "start": "3245510",
    "end": "3253090"
  },
  {
    "text": "that's it really guys so that's all I have from now if anyone's got any",
    "start": "3253090",
    "end": "3258200"
  },
  {
    "text": "questions for Paul or myself please get in touch with us around for a bit anyway",
    "start": "3258200",
    "end": "3264710"
  },
  {
    "text": "for the next well I'm gonna be here for an hour - I'm not gonna sign you up for staying longer if you're planning on",
    "start": "3264710",
    "end": "3269810"
  },
  {
    "text": "leaving but we're gonna be around a bit as well if people want to chat about specific architectures and stuff around containers but if there's any general",
    "start": "3269810",
    "end": "3276650"
  },
  {
    "text": "Q&A now more than happy to answer questions yep",
    "start": "3276650",
    "end": "3283330"
  },
  {
    "text": "so your container and your datas your data runs on SES the on ec2 sorry on",
    "start": "3286680",
    "end": "3293680"
  },
  {
    "text": "your instance is in your control of your PB PC the bit that goes through the e CS backplane service is the scheduling",
    "start": "3293680",
    "end": "3300369"
  },
  {
    "text": "information so you'd send a task definition say hey ec s run these containers on my cluster somewhere the",
    "start": "3300369",
    "end": "3306190"
  },
  {
    "text": "out sub containers the data and stuff around that that's on your V PC your instances and stuff but yeah we're",
    "start": "3306190",
    "end": "3313780"
  },
  {
    "text": "actually completely out of time we've overrun a bit so if you've got questions come fine meal Rick",
    "start": "3313780",
    "end": "3320160"
  }
]