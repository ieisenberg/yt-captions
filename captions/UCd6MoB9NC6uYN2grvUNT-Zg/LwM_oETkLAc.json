[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "[Music]",
    "start": "610",
    "end": "4590"
  },
  {
    "text": "[Applause]",
    "start": "4590",
    "end": "5420"
  },
  {
    "text": "[Music]",
    "start": "5420",
    "end": "8040"
  },
  {
    "text": "in this video you'll see how to monitor",
    "start": "8040",
    "end": "11440"
  },
  {
    "text": "the performance of your Amazon Elastic",
    "start": "11440",
    "end": "13719"
  },
  {
    "text": "container service or Amazon ECS",
    "start": "13719",
    "end": "16540"
  },
  {
    "text": "applications using cloud watch container",
    "start": "16540",
    "end": "19180"
  },
  {
    "text": "insights with container insights you can",
    "start": "19180",
    "end": "22300"
  },
  {
    "text": "aggregate and summarize metrics from",
    "start": "22300",
    "end": "24699"
  },
  {
    "text": "your containerized applications allowing",
    "start": "24699",
    "end": "27519"
  },
  {
    "text": "you to troubleshoot your Amazon ECS",
    "start": "27519",
    "end": "29619"
  },
  {
    "text": "clusters by isolating specific issues",
    "start": "29619",
    "end": "33649"
  },
  {
    "start": "33000",
    "end": "80000"
  },
  {
    "text": "before you can begin monitoring your",
    "start": "33649",
    "end": "35600"
  },
  {
    "text": "applications you need to ensure cloud",
    "start": "35600",
    "end": "38090"
  },
  {
    "text": "watch container insights is enabled in",
    "start": "38090",
    "end": "40370"
  },
  {
    "text": "your region let's navigate to the Amazon",
    "start": "40370",
    "end": "43579"
  },
  {
    "text": "ECS console and check the account",
    "start": "43579",
    "end": "45980"
  },
  {
    "text": "settings",
    "start": "45980",
    "end": "47500"
  },
  {
    "text": "the setting we are looking for is at the",
    "start": "47500",
    "end": "49810"
  },
  {
    "text": "bottom of the page",
    "start": "49810",
    "end": "52620"
  },
  {
    "text": "setting needs to be enabled before you",
    "start": "53160",
    "end": "55260"
  },
  {
    "text": "deploy an application if you want to",
    "start": "55260",
    "end": "57330"
  },
  {
    "text": "monitor it with cloud watch container",
    "start": "57330",
    "end": "59340"
  },
  {
    "text": "insights by default in this case",
    "start": "59340",
    "end": "62040"
  },
  {
    "text": "container insights has been enabled",
    "start": "62040",
    "end": "66110"
  },
  {
    "text": "you can also learn about configuring",
    "start": "66880",
    "end": "68650"
  },
  {
    "text": "cloud watch container insights by",
    "start": "68650",
    "end": "71080"
  },
  {
    "text": "reviewing the documentation",
    "start": "71080",
    "end": "73640"
  },
  {
    "text": "let's return to the Amazon ECS clusters",
    "start": "73640",
    "end": "76460"
  },
  {
    "text": "page",
    "start": "76460",
    "end": "78760"
  },
  {
    "start": "80000",
    "end": "124000"
  },
  {
    "text": "as you can see we've already set up an",
    "start": "80580",
    "end": "83310"
  },
  {
    "text": "application running as an Amazon ECS",
    "start": "83310",
    "end": "86040"
  },
  {
    "text": "cluster and the cluster has already been",
    "start": "86040",
    "end": "88680"
  },
  {
    "text": "set up to take advantage of cloud watch",
    "start": "88680",
    "end": "90570"
  },
  {
    "text": "container insights let's drill down to",
    "start": "90570",
    "end": "93570"
  },
  {
    "text": "see the metrics for this cluster",
    "start": "93570",
    "end": "96689"
  },
  {
    "text": "this metrics tab is where metrics on",
    "start": "96689",
    "end": "99240"
  },
  {
    "text": "cluster resources were previously",
    "start": "99240",
    "end": "101130"
  },
  {
    "text": "reported only a few metrics were",
    "start": "101130",
    "end": "103829"
  },
  {
    "text": "available such as CPU utilization and",
    "start": "103829",
    "end": "106890"
  },
  {
    "text": "memory utilization since this",
    "start": "106890",
    "end": "109439"
  },
  {
    "text": "information is now being aggregated by",
    "start": "109439",
    "end": "111450"
  },
  {
    "text": "cloud watch container insights instead",
    "start": "111450",
    "end": "113670"
  },
  {
    "text": "these metrics are blank now let's look",
    "start": "113670",
    "end": "117060"
  },
  {
    "text": "at the new container insights dashboard",
    "start": "117060",
    "end": "118979"
  },
  {
    "text": "which you can easily view with the click",
    "start": "118979",
    "end": "121259"
  },
  {
    "text": "of a button",
    "start": "121259",
    "end": "123530"
  },
  {
    "start": "124000",
    "end": "147000"
  },
  {
    "text": "the new container insights dashboard",
    "start": "124810",
    "end": "127060"
  },
  {
    "text": "provides a more extensive and",
    "start": "127060",
    "end": "128619"
  },
  {
    "text": "customizable metrics display and a wider",
    "start": "128619",
    "end": "131590"
  },
  {
    "text": "range of information including CPU and",
    "start": "131590",
    "end": "134770"
  },
  {
    "text": "memory utilization tasks and service",
    "start": "134770",
    "end": "137530"
  },
  {
    "text": "counts storage and network performance",
    "start": "137530",
    "end": "139750"
  },
  {
    "text": "and container instance counts for",
    "start": "139750",
    "end": "142720"
  },
  {
    "text": "clusters services and tasks",
    "start": "142720",
    "end": "147000"
  },
  {
    "start": "147000",
    "end": "179000"
  },
  {
    "text": "you can sort the data in different ways",
    "start": "147800",
    "end": "149930"
  },
  {
    "text": "such as by services",
    "start": "149930",
    "end": "153730"
  },
  {
    "text": "as you can see this application has",
    "start": "155080",
    "end": "157390"
  },
  {
    "text": "three different services running and",
    "start": "157390",
    "end": "159190"
  },
  {
    "text": "data can be viewed for each service you",
    "start": "159190",
    "end": "162970"
  },
  {
    "text": "can select an instance name in the",
    "start": "162970",
    "end": "164560"
  },
  {
    "text": "legend to filter the page for that",
    "start": "164560",
    "end": "166210"
  },
  {
    "text": "instance",
    "start": "166210",
    "end": "168440"
  },
  {
    "text": "you can also sort by tasks",
    "start": "168440",
    "end": "172630"
  },
  {
    "text": "let's filter the tasks to focus solely",
    "start": "173470",
    "end": "176080"
  },
  {
    "text": "on the front end service",
    "start": "176080",
    "end": "179460"
  },
  {
    "start": "179000",
    "end": "224000"
  },
  {
    "text": "now let's test the responsiveness of our",
    "start": "180000",
    "end": "181980"
  },
  {
    "text": "metrics by simulating a change in the",
    "start": "181980",
    "end": "184140"
  },
  {
    "text": "cluster environment we can do that using",
    "start": "184140",
    "end": "186930"
  },
  {
    "text": "AWS cloud 9",
    "start": "186930",
    "end": "190760"
  },
  {
    "text": "AWS cloud 9 is a cloud-based integrated",
    "start": "192290",
    "end": "195930"
  },
  {
    "text": "development environment with direct",
    "start": "195930",
    "end": "197819"
  },
  {
    "text": "terminal access to Amazon Web Services",
    "start": "197819",
    "end": "200420"
  },
  {
    "text": "let's simulate putting a moderate load",
    "start": "200420",
    "end": "203040"
  },
  {
    "text": "on the application",
    "start": "203040",
    "end": "206000"
  },
  {
    "text": "we'll do that by running this script",
    "start": "206990",
    "end": "208940"
  },
  {
    "text": "which will constantly attempt to load",
    "start": "208940",
    "end": "211130"
  },
  {
    "text": "the webpage",
    "start": "211130",
    "end": "212980"
  },
  {
    "text": "let's refresh the dashboard and see",
    "start": "212980",
    "end": "215050"
  },
  {
    "text": "whether it changes",
    "start": "215050",
    "end": "217920"
  },
  {
    "text": "as you can see CPU utilization has",
    "start": "218870",
    "end": "221840"
  },
  {
    "text": "increased",
    "start": "221840",
    "end": "224349"
  },
  {
    "start": "224000",
    "end": "248000"
  },
  {
    "text": "over the next few minutes we can see the",
    "start": "224490",
    "end": "227190"
  },
  {
    "text": "other metrics fluctuate as we put",
    "start": "227190",
    "end": "229140"
  },
  {
    "text": "additional load on the cluster now let's",
    "start": "229140",
    "end": "232110"
  },
  {
    "text": "put a greater load on our application",
    "start": "232110",
    "end": "235550"
  },
  {
    "text": "this time we'll run the Apache bench",
    "start": "237180",
    "end": "239790"
  },
  {
    "text": "application to perform a load test",
    "start": "239790",
    "end": "243620"
  },
  {
    "text": "let's refresh the dashboard again",
    "start": "243920",
    "end": "247450"
  },
  {
    "text": "you can see that CPU utilization has",
    "start": "248959",
    "end": "251599"
  },
  {
    "text": "increased significantly this time to",
    "start": "251599",
    "end": "254150"
  },
  {
    "text": "nearly 100%",
    "start": "254150",
    "end": "257060"
  },
  {
    "text": "let's scroll down to look at some of the",
    "start": "257060",
    "end": "259010"
  },
  {
    "text": "other information provided by the",
    "start": "259010",
    "end": "260660"
  },
  {
    "text": "dashboard",
    "start": "260660",
    "end": "262870"
  },
  {
    "text": "here you can view a list of all running",
    "start": "262870",
    "end": "265570"
  },
  {
    "text": "tasks and their performance metrics",
    "start": "265570",
    "end": "267610"
  },
  {
    "text": "along with the container each task is",
    "start": "267610",
    "end": "270250"
  },
  {
    "text": "associated with",
    "start": "270250",
    "end": "273060"
  },
  {
    "start": "273000",
    "end": "337000"
  },
  {
    "text": "for deeper analysis you can select a",
    "start": "274319",
    "end": "277110"
  },
  {
    "text": "task and open its performance logs",
    "start": "277110",
    "end": "279240"
  },
  {
    "text": "directly in cloud watch logs insights",
    "start": "279240",
    "end": "283490"
  },
  {
    "text": "each node can be expanded to show all",
    "start": "286389",
    "end": "289180"
  },
  {
    "text": "the data that is being collected in the",
    "start": "289180",
    "end": "290889"
  },
  {
    "text": "logs",
    "start": "290889",
    "end": "293129"
  },
  {
    "text": "you can also run your own custom queries",
    "start": "294380",
    "end": "298900"
  },
  {
    "text": "you",
    "start": "303390",
    "end": "305290"
  },
  {
    "text": "for example this query will summarize",
    "start": "305290",
    "end": "308170"
  },
  {
    "text": "the container performance data by time",
    "start": "308170",
    "end": "310390"
  },
  {
    "text": "period",
    "start": "310390",
    "end": "311919"
  },
  {
    "text": "you can also write queries to analyze",
    "start": "311919",
    "end": "314199"
  },
  {
    "text": "other aspects of an Amazon ECS cluster",
    "start": "314199",
    "end": "317110"
  },
  {
    "text": "such as resource utilization to help",
    "start": "317110",
    "end": "320020"
  },
  {
    "text": "right size container tasks",
    "start": "320020",
    "end": "322910"
  },
  {
    "text": "you've just seen how to monitor the",
    "start": "322910",
    "end": "324950"
  },
  {
    "text": "performance of your Amazon ECS",
    "start": "324950",
    "end": "327020"
  },
  {
    "text": "applications using cloud watch container",
    "start": "327020",
    "end": "329570"
  },
  {
    "text": "insights",
    "start": "329570",
    "end": "331150"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "331150",
    "end": "333610"
  },
  {
    "text": "to try",
    "start": "333610",
    "end": "336000"
  }
]