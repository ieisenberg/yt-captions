[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hi my name is rich wah and I'm the",
    "start": "60",
    "end": "3000"
  },
  {
    "text": "global business development manager on",
    "start": "3000",
    "end": "4740"
  },
  {
    "text": "the Aurora database team at AWS today",
    "start": "4740",
    "end": "7770"
  },
  {
    "text": "I'm gonna give you an overview of Amazon",
    "start": "7770",
    "end": "9960"
  },
  {
    "text": "Aurora Christmas which I'm proud to say",
    "start": "9960",
    "end": "12210"
  },
  {
    "text": "is the fastest growing service in AWS",
    "start": "12210",
    "end": "15269"
  },
  {
    "text": "history begin let's look at Aurora",
    "start": "15269",
    "end": "17789"
  },
  {
    "start": "16000",
    "end": "16000"
  },
  {
    "text": "architecture at a high level at its core",
    "start": "17789",
    "end": "20250"
  },
  {
    "text": "Aurora is a Postgres compatible database",
    "start": "20250",
    "end": "22650"
  },
  {
    "text": "that has been highly optimized for the",
    "start": "22650",
    "end": "24449"
  },
  {
    "text": "cloud what does that mean well we",
    "start": "24449",
    "end": "26699"
  },
  {
    "text": "started by breaking apart the stack and",
    "start": "26699",
    "end": "28800"
  },
  {
    "text": "pulling the storage layer out of the",
    "start": "28800",
    "end": "30539"
  },
  {
    "text": "database so that each one is its own",
    "start": "30539",
    "end": "32430"
  },
  {
    "text": "distinct layer that allows the database",
    "start": "32430",
    "end": "34620"
  },
  {
    "text": "and storage to scale independently from",
    "start": "34620",
    "end": "36780"
  },
  {
    "text": "each other the database and storage",
    "start": "36780",
    "end": "38910"
  },
  {
    "text": "layers each has its own monitoring",
    "start": "38910",
    "end": "40559"
  },
  {
    "text": "system so that each layer can fail and",
    "start": "40559",
    "end": "42510"
  },
  {
    "text": "heal independently in addition Aurora is",
    "start": "42510",
    "end": "45660"
  },
  {
    "text": "integrated with a host of distributed",
    "start": "45660",
    "end": "47460"
  },
  {
    "text": "services something that we can do",
    "start": "47460",
    "end": "49020"
  },
  {
    "text": "seamlessly in the cloud for example the",
    "start": "49020",
    "end": "51539"
  },
  {
    "text": "leverages foundational services such as",
    "start": "51539",
    "end": "53340"
  },
  {
    "text": "s3 furbacca which offers the",
    "start": "53340",
    "end": "55260"
  },
  {
    "text": "industry-leading",
    "start": "55260",
    "end": "56190"
  },
  {
    "text": "eleven nines of your ability route 53",
    "start": "56190",
    "end": "58469"
  },
  {
    "text": "for DNS routing simple workflow service",
    "start": "58469",
    "end": "61469"
  },
  {
    "text": "to automate backup tasks and the",
    "start": "61469",
    "end": "63420"
  },
  {
    "text": "time-tested",
    "start": "63420",
    "end": "64439"
  },
  {
    "text": "RDS control plane to manager with this",
    "start": "64439",
    "end": "67680"
  },
  {
    "text": "architecture were able to provide",
    "start": "67680",
    "end": "68909"
  },
  {
    "text": "hundreds of thousands of writes per",
    "start": "68909",
    "end": "70770"
  },
  {
    "text": "second and millions of reads per second",
    "start": "70770",
    "end": "72900"
  },
  {
    "text": "with read replicas and why are customers",
    "start": "72900",
    "end": "75780"
  },
  {
    "start": "75000",
    "end": "75000"
  },
  {
    "text": "interested specifically in Postgres",
    "start": "75780",
    "end": "77939"
  },
  {
    "text": "well you likely know some of these",
    "start": "77939",
    "end": "79740"
  },
  {
    "text": "reasons already but I thought I'd share",
    "start": "79740",
    "end": "81869"
  },
  {
    "text": "some Postgres is an open source project",
    "start": "81869",
    "end": "84270"
  },
  {
    "text": "that started more than 20 years ago as a",
    "start": "84270",
    "end": "86220"
  },
  {
    "text": "follow-on to the ingress database system",
    "start": "86220",
    "end": "88229"
  },
  {
    "text": "by Michael Stonebraker at UC Berkeley",
    "start": "88229",
    "end": "90180"
  },
  {
    "text": "there's an active and vibrant",
    "start": "90180",
    "end": "91920"
  },
  {
    "text": "open-source community that continues to",
    "start": "91920",
    "end": "93990"
  },
  {
    "text": "innovate with painting features and",
    "start": "93990",
    "end": "95670"
  },
  {
    "text": "capabilities this is partially due to",
    "start": "95670",
    "end": "97560"
  },
  {
    "text": "the type of open-source license used by",
    "start": "97560",
    "end": "99270"
  },
  {
    "text": "Postgres which allows anyone to modify",
    "start": "99270",
    "end": "101460"
  },
  {
    "text": "the source code as needed",
    "start": "101460",
    "end": "102600"
  },
  {
    "text": "in addition Postgres is not under",
    "start": "102600",
    "end": "105030"
  },
  {
    "text": "controlled by single company it's owned",
    "start": "105030",
    "end": "106920"
  },
  {
    "text": "by a non-profit foundation which",
    "start": "106920",
    "end": "108840"
  },
  {
    "text": "addresses customer concerns about vendor",
    "start": "108840",
    "end": "110610"
  },
  {
    "text": "lock-in from the prospective",
    "start": "110610",
    "end": "112350"
  },
  {
    "text": "functionality plus press offers good",
    "start": "112350",
    "end": "114299"
  },
  {
    "text": "performance out of the box with trans",
    "start": "114299",
    "end": "116159"
  },
  {
    "text": "actual semantics we similar to those of",
    "start": "116159",
    "end": "118560"
  },
  {
    "text": "Oracle and sequel server Postgres is",
    "start": "118560",
    "end": "121049"
  },
  {
    "text": "object oriented and ANSI sequel 2008",
    "start": "121049",
    "end": "123600"
  },
  {
    "text": "compatible which makes it easy for",
    "start": "123600",
    "end": "125430"
  },
  {
    "text": "customers to migrate applications from",
    "start": "125430",
    "end": "127530"
  },
  {
    "text": "other relational database platforms",
    "start": "127530",
    "end": "129410"
  },
  {
    "text": "huskers also supports extensions which",
    "start": "129410",
    "end": "132239"
  },
  {
    "text": "allows you to easily expand its core",
    "start": "132239",
    "end": "134040"
  },
  {
    "text": "capabilities in a variety of ways but",
    "start": "134040",
    "end": "135930"
  },
  {
    "text": "the most powerful and popular is the",
    "start": "135930",
    "end": "137760"
  },
  {
    "text": "post GIS extension which offers very",
    "start": "137760",
    "end": "140129"
  },
  {
    "text": "strong support for geospatial use cases",
    "start": "140129",
    "end": "142290"
  },
  {
    "text": "it also supports stored procedures in",
    "start": "142290",
    "end": "144420"
  },
  {
    "text": "many languages including TLP G sequel",
    "start": "144420",
    "end": "146489"
  },
  {
    "text": "which is very similar to Oracle's PLC",
    "start": "146489",
    "end": "149030"
  },
  {
    "text": "this combination of features makes",
    "start": "149030",
    "end": "151260"
  },
  {
    "text": "Postgres the most horrible compatible",
    "start": "151260",
    "end": "153090"
  },
  {
    "text": "open-source database we even see that",
    "start": "153090",
    "end": "155190"
  },
  {
    "text": "with our own AWS schema conversion tool",
    "start": "155190",
    "end": "157200"
  },
  {
    "text": "with the highest automatic conversion",
    "start": "157200",
    "end": "159030"
  },
  {
    "text": "rates from Oracle being to post gross",
    "start": "159030",
    "end": "161580"
  },
  {
    "text": "schemas are typically converted in the",
    "start": "161580",
    "end": "163800"
  },
  {
    "text": "high ninety percent wage I'm working",
    "start": "163800",
    "end": "166260"
  },
  {
    "text": "with literally hundreds of customers",
    "start": "166260",
    "end": "167760"
  },
  {
    "text": "globally for migrating their Oracle",
    "start": "167760",
    "end": "169500"
  },
  {
    "text": "workloads supposed to us customers such",
    "start": "169500",
    "end": "171510"
  },
  {
    "text": "as Verizon and ice comm they moved from",
    "start": "171510",
    "end": "173910"
  },
  {
    "text": "Oracle to Postgres",
    "start": "173910",
    "end": "175019"
  },
  {
    "text": "that aren't very very happy with it one",
    "start": "175019",
    "end": "177150"
  },
  {
    "text": "of my favorite migration stories is",
    "start": "177150",
    "end": "178709"
  },
  {
    "text": "about a little ecommerce company called",
    "start": "178709",
    "end": "180390"
  },
  {
    "text": "amazon.com earlier this year",
    "start": "180390",
    "end": "182610"
  },
  {
    "text": "Amazon migrated 100% of the fulfillment",
    "start": "182610",
    "end": "185190"
  },
  {
    "text": "centers off of Oracle and on to a roar",
    "start": "185190",
    "end": "187980"
  },
  {
    "text": "hostess and recently they made a",
    "start": "187980",
    "end": "189900"
  },
  {
    "text": "smoothly through prime day running fully",
    "start": "189900",
    "end": "191970"
  },
  {
    "text": "on the aurora Postgres platform one",
    "start": "191970",
    "end": "195330"
  },
  {
    "start": "195000",
    "end": "195000"
  },
  {
    "text": "important question customers often ask",
    "start": "195330",
    "end": "197040"
  },
  {
    "text": "is what does plus kris compatibility",
    "start": "197040",
    "end": "198930"
  },
  {
    "text": "really mean well it means that our roar",
    "start": "198930",
    "end": "200790"
  },
  {
    "text": "at Postgres is 100% why are compatible",
    "start": "200790",
    "end": "203700"
  },
  {
    "text": "with community postal this is really",
    "start": "203700",
    "end": "206159"
  },
  {
    "text": "important to understand because it means",
    "start": "206159",
    "end": "208170"
  },
  {
    "text": "you can take your puskás database from",
    "start": "208170",
    "end": "210360"
  },
  {
    "text": "your laptop your data center your Colo",
    "start": "210360",
    "end": "213330"
  },
  {
    "text": "or off of ec2 or RDS and drop it right",
    "start": "213330",
    "end": "216299"
  },
  {
    "text": "into aurora post box",
    "start": "216299",
    "end": "217799"
  },
  {
    "text": "it also means we can easily leave",
    "start": "217799",
    "end": "219450"
  },
  {
    "text": "anytime you're not locked in in any way",
    "start": "219450",
    "end": "221610"
  },
  {
    "text": "they created we're all closed for us we",
    "start": "221610",
    "end": "223709"
  },
  {
    "text": "took post press code and integrated",
    "start": "223709",
    "end": "225900"
  },
  {
    "text": "Aurora's cloud optimized storage into",
    "start": "225900",
    "end": "228030"
  },
  {
    "text": "the lower layers for our storage",
    "start": "228030",
    "end": "230040"
  },
  {
    "text": "maintains six copies of every right",
    "start": "230040",
    "end": "231780"
  },
  {
    "text": "across three availability zones for",
    "start": "231780",
    "end": "233400"
  },
  {
    "text": "Hydra bility it supports up to 15 Reed",
    "start": "233400",
    "end": "236040"
  },
  {
    "text": "replicas with very little replica life",
    "start": "236040",
    "end": "238590"
  },
  {
    "text": "generally it's in the single-digit",
    "start": "238590",
    "end": "239700"
  },
  {
    "text": "milliseconds and it provides failover",
    "start": "239700",
    "end": "242040"
  },
  {
    "text": "times of 30 seconds or loss in terms of",
    "start": "242040",
    "end": "244799"
  },
  {
    "text": "performance we see three times or better",
    "start": "244799",
    "end": "246599"
  },
  {
    "text": "performance in terms of right throughput",
    "start": "246599",
    "end": "248610"
  },
  {
    "text": "when compared to standard Postgres on",
    "start": "248610",
    "end": "250470"
  },
  {
    "text": "standard benchmarks to get a better",
    "start": "250470",
    "end": "253230"
  },
  {
    "start": "252000",
    "end": "252000"
  },
  {
    "text": "understanding of Aurora",
    "start": "253230",
    "end": "254430"
  },
  {
    "text": "I find it useful to compare it to",
    "start": "254430",
    "end": "255810"
  },
  {
    "text": "traditional architecture so let's look",
    "start": "255810",
    "end": "257790"
  },
  {
    "text": "at how already has post rest in a multi",
    "start": "257790",
    "end": "259650"
  },
  {
    "text": "availability zone system works that is",
    "start": "259650",
    "end": "262079"
  },
  {
    "text": "the picture on the left hand side you",
    "start": "262079",
    "end": "264210"
  },
  {
    "text": "have one primary and asynchronous",
    "start": "264210",
    "end": "265949"
  },
  {
    "text": "secondary each database instance has its",
    "start": "265949",
    "end": "268199"
  },
  {
    "text": "own disk and that distance mirrored for",
    "start": "268199",
    "end": "270180"
  },
  {
    "text": "redundancy so for copies the data are",
    "start": "270180",
    "end": "272669"
  },
  {
    "text": "stored across to availability zones this",
    "start": "272669",
    "end": "275130"
  },
  {
    "text": "works great and helps us run the largest",
    "start": "275130",
    "end": "277110"
  },
  {
    "text": "fleet of Postgres databases in the world",
    "start": "277110",
    "end": "279360"
  },
  {
    "text": "with very high availability empirical",
    "start": "279360",
    "end": "281690"
  },
  {
    "text": "however because this uses the monolithic",
    "start": "281690",
    "end": "284669"
  },
  {
    "text": "traditional database stack even in the",
    "start": "284669",
    "end": "286949"
  },
  {
    "text": "AWS cloud you can only keep this so far",
    "start": "286949",
    "end": "289280"
  },
  {
    "text": "that's why we did things differently in",
    "start": "289280",
    "end": "291630"
  },
  {
    "text": "Aurora which on the right hand side you",
    "start": "291630",
    "end": "294090"
  },
  {
    "text": "can immediately see that the",
    "start": "294090",
    "end": "295020"
  },
  {
    "text": "architecture is different there's one",
    "start": "295020",
    "end": "296850"
  },
  {
    "text": "primary database the writer and then",
    "start": "296850",
    "end": "298830"
  },
  {
    "text": "multiple elite replicas and the replicas",
    "start": "298830",
    "end": "301169"
  },
  {
    "text": "all share a distributed storage system",
    "start": "301169",
    "end": "303000"
  },
  {
    "text": "with the primary rather than managing",
    "start": "303000",
    "end": "304680"
  },
  {
    "text": "their own storage and in terms of the",
    "start": "304680",
    "end": "306570"
  },
  {
    "text": "data it is written six times across",
    "start": "306570",
    "end": "308310"
  },
  {
    "text": "three available in zones by default now",
    "start": "308310",
    "end": "311070"
  },
  {
    "text": "let's dive deeper into how Laura works",
    "start": "311070",
    "end": "312979"
  },
  {
    "text": "as I just mentioned the raw storage",
    "start": "312979",
    "end": "315240"
  },
  {
    "start": "313000",
    "end": "313000"
  },
  {
    "text": "contains the end of six times across",
    "start": "315240",
    "end": "316800"
  },
  {
    "text": "three AZ's and eight is continually",
    "start": "316800",
    "end": "319169"
  },
  {
    "text": "backed up to s3 there are no backup",
    "start": "319169",
    "end": "321389"
  },
  {
    "text": "windows no performance impact during",
    "start": "321389",
    "end": "323280"
  },
  {
    "text": "backup because of that the system has a",
    "start": "323280",
    "end": "325710"
  },
  {
    "text": "separate monitoring management layer",
    "start": "325710",
    "end": "327389"
  },
  {
    "text": "you'll never see as a customer to you",
    "start": "327389",
    "end": "329340"
  },
  {
    "text": "database just keeps on looking one",
    "start": "329340",
    "end": "331919"
  },
  {
    "text": "powerful aspect of Aurora is that it",
    "start": "331919",
    "end": "334050"
  },
  {
    "text": "uses a quorum algorithm for lights when",
    "start": "334050",
    "end": "336630"
  },
  {
    "text": "a transaction comes into database",
    "start": "336630",
    "end": "338159"
  },
  {
    "text": "instance it sends the logs",
    "start": "338159",
    "end": "339720"
  },
  {
    "text": "asynchronously to all six storage nodes",
    "start": "339720",
    "end": "341849"
  },
  {
    "text": "and as soon as four out of the six",
    "start": "341849",
    "end": "343800"
  },
  {
    "text": "acknowledge the transaction is durable",
    "start": "343800",
    "end": "345630"
  },
  {
    "text": "the system commits the transaction so",
    "start": "345630",
    "end": "348090"
  },
  {
    "text": "this means that lagging disks or nodes",
    "start": "348090",
    "end": "350280"
  },
  {
    "text": "or even entire availability zones can be",
    "start": "350280",
    "end": "352710"
  },
  {
    "text": "written through by the system with",
    "start": "352710",
    "end": "354690"
  },
  {
    "text": "little or no impact on performance in",
    "start": "354690",
    "end": "356490"
  },
  {
    "text": "fact an entire easy can go down and",
    "start": "356490",
    "end": "358979"
  },
  {
    "text": "there are cluster will just keep on",
    "start": "358979",
    "end": "360449"
  },
  {
    "text": "running as long as four storage nodes",
    "start": "360449",
    "end": "362610"
  },
  {
    "text": "are available he keeps on writing",
    "start": "362610",
    "end": "364580"
  },
  {
    "text": "another key benefit of a corn-based",
    "start": "364580",
    "end": "366750"
  },
  {
    "text": "system is that nodes can leave and join",
    "start": "366750",
    "end": "369090"
  },
  {
    "text": "the system as they're upgraded and",
    "start": "369090",
    "end": "370650"
  },
  {
    "text": "repaired and there's no performance or",
    "start": "370650",
    "end": "372449"
  },
  {
    "text": "availability in one final benefit is",
    "start": "372449",
    "end": "375270"
  },
  {
    "text": "that the storage grows automatically and",
    "start": "375270",
    "end": "377190"
  },
  {
    "text": "can give increments as the database size",
    "start": "377190",
    "end": "379199"
  },
  {
    "text": "grows up to 64 terabytes there's no need",
    "start": "379199",
    "end": "382320"
  },
  {
    "text": "to worry about tree provisioning or",
    "start": "382320",
    "end": "383789"
  },
  {
    "text": "running out of storage",
    "start": "383789",
    "end": "384840"
  },
  {
    "text": "many customers have told me what a big",
    "start": "384840",
    "end": "387000"
  },
  {
    "text": "relief it is that",
    "start": "387000",
    "end": "388200"
  },
  {
    "text": "but not have to manage storage in now",
    "start": "388200",
    "end": "391500"
  },
  {
    "text": "one thing to note is that the storage",
    "start": "391500",
    "end": "392910"
  },
  {
    "text": "nodes are not actually six physical",
    "start": "392910",
    "end": "395100"
  },
  {
    "text": "storage service they consist of hundreds",
    "start": "395100",
    "end": "397770"
  },
  {
    "text": "and in some cases thousands of I three",
    "start": "397770",
    "end": "399900"
  },
  {
    "text": "instances that on their own compute",
    "start": "399900",
    "end": "401700"
  },
  {
    "text": "memory and very fast nvme SSDs their i/o",
    "start": "401700",
    "end": "405510"
  },
  {
    "text": "app must we abstract that fleet of item",
    "start": "405510",
    "end": "408780"
  },
  {
    "text": "instances into the six storage nodes and",
    "start": "408780",
    "end": "411090"
  },
  {
    "text": "present them to you as the Aurora",
    "start": "411090",
    "end": "412470"
  },
  {
    "text": "storage subsystem thus if an i3 goes bad",
    "start": "412470",
    "end": "415440"
  },
  {
    "text": "it's easier replaced in the background",
    "start": "415440",
    "end": "417390"
  },
  {
    "text": "for data size grows we can just add more",
    "start": "417390",
    "end": "419940"
  },
  {
    "text": "piping instances so you can see that",
    "start": "419940",
    "end": "422220"
  },
  {
    "text": "it's quite a robust architecture that's",
    "start": "422220",
    "end": "423960"
  },
  {
    "text": "been managed by Aurora",
    "start": "423960",
    "end": "425100"
  },
  {
    "text": "in the back now let's talk about the",
    "start": "425100",
    "end": "427800"
  },
  {
    "text": "database layer just like in the storage",
    "start": "427800",
    "end": "429930"
  },
  {
    "text": "layer there's a separate monitoring and",
    "start": "429930",
    "end": "431790"
  },
  {
    "text": "repair system one you'll never see as a",
    "start": "431790",
    "end": "433440"
  },
  {
    "text": "customer at any time Aurora provides one",
    "start": "433440",
    "end": "436200"
  },
  {
    "text": "primary writable database node and up to",
    "start": "436200",
    "end": "438450"
  },
  {
    "text": "15 read-only replicas these nodes are",
    "start": "438450",
    "end": "441180"
  },
  {
    "text": "monitored to replace automatically",
    "start": "441180",
    "end": "442830"
  },
  {
    "text": "infants apparently the only that the",
    "start": "442830",
    "end": "444720"
  },
  {
    "text": "system detects any failing database",
    "start": "444720",
    "end": "446460"
  },
  {
    "text": "processes and recycles them as needed",
    "start": "446460",
    "end": "448650"
  },
  {
    "text": "now the read replicas in Aurora actually",
    "start": "448650",
    "end": "450930"
  },
  {
    "text": "serve two functions first they help with",
    "start": "450930",
    "end": "453300"
  },
  {
    "text": "query offloading as their name implies",
    "start": "453300",
    "end": "454740"
  },
  {
    "text": "and second they act as failover targets",
    "start": "454740",
    "end": "458010"
  },
  {
    "text": "in case the primary goes down now let's",
    "start": "458010",
    "end": "460530"
  },
  {
    "text": "first talk about where it off load",
    "start": "460530",
    "end": "462000"
  },
  {
    "text": "because of optimizations we've made",
    "start": "462000",
    "end": "464160"
  },
  {
    "text": "these read replicas typically lag",
    "start": "464160",
    "end": "465870"
  },
  {
    "text": "mastered by less than 10 milliseconds",
    "start": "465870",
    "end": "468030"
  },
  {
    "text": "notice I said milliseconds not seconds",
    "start": "468030",
    "end": "470640"
  },
  {
    "text": "this allows you to scale out your read",
    "start": "470640",
    "end": "472950"
  },
  {
    "text": "load as well as direct workloads to",
    "start": "472950",
    "end": "474750"
  },
  {
    "text": "specific read replicas for different",
    "start": "474750",
    "end": "476340"
  },
  {
    "text": "applications Aurora provides a reader",
    "start": "476340",
    "end": "478650"
  },
  {
    "text": "endpoint which treats all the readers of",
    "start": "478650",
    "end": "480420"
  },
  {
    "text": "cool it will automatically load balance",
    "start": "480420",
    "end": "483000"
  },
  {
    "text": "the read workload DNS round-robin you",
    "start": "483000",
    "end": "485370"
  },
  {
    "text": "also have the ability to specify your",
    "start": "485370",
    "end": "486870"
  },
  {
    "text": "own custom endpoint and include any",
    "start": "486870",
    "end": "489510"
  },
  {
    "text": "subset of the leaders in that for",
    "start": "489510",
    "end": "491520"
  },
  {
    "text": "example if you have five twenty replicas",
    "start": "491520",
    "end": "493920"
  },
  {
    "text": "you may want to subset three of them for",
    "start": "493920",
    "end": "495960"
  },
  {
    "text": "a specific VI application and you can do",
    "start": "495960",
    "end": "498450"
  },
  {
    "text": "that with a custom input you also have",
    "start": "498450",
    "end": "500850"
  },
  {
    "text": "the option to set your replicas to auto",
    "start": "500850",
    "end": "502350"
  },
  {
    "text": "scale an Aurora will add and delete",
    "start": "502350",
    "end": "504750"
  },
  {
    "text": "replicas as the read traffic increases",
    "start": "504750",
    "end": "507330"
  },
  {
    "text": "and decreases",
    "start": "507330",
    "end": "508430"
  },
  {
    "text": "now let's talk about how the read",
    "start": "508430",
    "end": "510660"
  },
  {
    "text": "replicas offer high availability they do",
    "start": "510660",
    "end": "513270"
  },
  {
    "text": "this by serving as failover targets if",
    "start": "513270",
    "end": "515669"
  },
  {
    "text": "the primer instance were to go down",
    "start": "515669",
    "end": "516900"
  },
  {
    "text": "would be automatically detected and a",
    "start": "516900",
    "end": "519270"
  },
  {
    "text": "failover would occur in thirty-second",
    "start": "519270",
    "end": "521159"
  },
  {
    "text": "or less you have the ability to specify",
    "start": "521159",
    "end": "523529"
  },
  {
    "text": "the failable order so you can choose the",
    "start": "523529",
    "end": "525540"
  },
  {
    "text": "most appropriate read replica as to your",
    "start": "525540",
    "end": "527250"
  },
  {
    "text": "zero then to your London tier 2 and so",
    "start": "527250",
    "end": "529680"
  },
  {
    "text": "forth note that this happens transparent",
    "start": "529680",
    "end": "531930"
  },
  {
    "text": "in the application the application",
    "start": "531930",
    "end": "533310"
  },
  {
    "text": "connects to the primary database",
    "start": "533310",
    "end": "535139"
  },
  {
    "text": "instance via will be called the cluster",
    "start": "535139",
    "end": "536670"
  },
  {
    "text": "info and that endpoint always point to",
    "start": "536670",
    "end": "539040"
  },
  {
    "text": "the primary so when a failover occurs we",
    "start": "539040",
    "end": "541829"
  },
  {
    "text": "modify the cluster endpoint so that a",
    "start": "541829",
    "end": "543930"
  },
  {
    "text": "points at the newly promoted Prime with",
    "start": "543930",
    "end": "545759"
  },
  {
    "text": "the help make failover is even smoother",
    "start": "545759",
    "end": "548040"
  },
  {
    "text": "you can also leverage a feature called",
    "start": "548040",
    "end": "549810"
  },
  {
    "text": "cluster cache management which keeps the",
    "start": "549810",
    "end": "551850"
  },
  {
    "text": "cash from a replica in sync with the",
    "start": "551850",
    "end": "554069"
  },
  {
    "text": "primers cache that way when a failover",
    "start": "554069",
    "end": "556379"
  },
  {
    "text": "occurs the cache of the new primary that",
    "start": "556379",
    "end": "558480"
  },
  {
    "text": "was just newly promoted is already warm",
    "start": "558480",
    "end": "560610"
  },
  {
    "text": "so the brown up here it is greatly",
    "start": "560610",
    "end": "562110"
  },
  {
    "text": "reduced and the app is running at full",
    "start": "562110",
    "end": "563759"
  },
  {
    "text": "speed very quickly now a final note is",
    "start": "563759",
    "end": "566579"
  },
  {
    "text": "that we do recommend that customers have",
    "start": "566579",
    "end": "568170"
  },
  {
    "text": "at least one read replicas if they want",
    "start": "568170",
    "end": "570029"
  },
  {
    "text": "fail overs in 30 seconds or less without",
    "start": "570029",
    "end": "572370"
  },
  {
    "text": "one at the primary were to fail a new",
    "start": "572370",
    "end": "574439"
  },
  {
    "text": "database instance would need to be",
    "start": "574439",
    "end": "576029"
  },
  {
    "text": "instantiated and that would take a few",
    "start": "576029",
    "end": "578100"
  },
  {
    "text": "minutes so that's how we achieve high",
    "start": "578100",
    "end": "580259"
  },
  {
    "text": "availability or look now let's dive",
    "start": "580259",
    "end": "582329"
  },
  {
    "text": "deeper in the performance in order to",
    "start": "582329",
    "end": "585240"
  },
  {
    "start": "585000",
    "end": "585000"
  },
  {
    "text": "provide higher performance we do a few",
    "start": "585240",
    "end": "586920"
  },
  {
    "text": "things differently in our Laura first we",
    "start": "586920",
    "end": "589290"
  },
  {
    "text": "only write log records not gloss second",
    "start": "589290",
    "end": "591990"
  },
  {
    "text": "we bash those records together with what",
    "start": "591990",
    "end": "594089"
  },
  {
    "text": "we call a boxcar technique thus we're",
    "start": "594089",
    "end": "596310"
  },
  {
    "text": "actually shipping a set of log records",
    "start": "596310",
    "end": "598410"
  },
  {
    "text": "in part shuffling it to appropriate",
    "start": "598410",
    "end": "600480"
  },
  {
    "text": "segments and then box powering again",
    "start": "600480",
    "end": "602370"
  },
  {
    "text": "into buckets for storage mode in this",
    "start": "602370",
    "end": "604500"
  },
  {
    "text": "way we get a lot more efficiency out of",
    "start": "604500",
    "end": "606360"
  },
  {
    "text": "network and because the storage system",
    "start": "606360",
    "end": "608399"
  },
  {
    "text": "is transaction aware it doesn't",
    "start": "608399",
    "end": "609930"
  },
  {
    "text": "acknowledge just individual rights the",
    "start": "609930",
    "end": "612000"
  },
  {
    "text": "actual acknowledges groups of",
    "start": "612000",
    "end": "613410"
  },
  {
    "text": "transactions so by only writing log",
    "start": "613410",
    "end": "615899"
  },
  {
    "text": "records and packing commits together",
    "start": "615899",
    "end": "617790"
  },
  {
    "text": "even though we do 6 times more logical",
    "start": "617790",
    "end": "620069"
  },
  {
    "text": "writes that a typical model of the",
    "start": "620069",
    "end": "621480"
  },
  {
    "text": "database we actually generate 9 times",
    "start": "621480",
    "end": "624029"
  },
  {
    "text": "less network traffic and with the 4 out",
    "start": "624029",
    "end": "626490"
  },
  {
    "text": "of 6 right form we can not only reduce",
    "start": "626490",
    "end": "628559"
  },
  {
    "text": "Io by network jitter as well these are",
    "start": "628559",
    "end": "631769"
  },
  {
    "text": "reasons Aurora can offer three times or",
    "start": "631769",
    "end": "633990"
  },
  {
    "text": "better throughput than standard place",
    "start": "633990",
    "end": "635370"
  },
  {
    "text": "books now let's look at one more",
    "start": "635370",
    "end": "637529"
  },
  {
    "text": "Kyrie's remember that storage is",
    "start": "637529",
    "end": "640559"
  },
  {
    "text": "intelligent with its own compute and",
    "start": "640559",
    "end": "642779"
  },
  {
    "text": "memory and SSD well because of that we",
    "start": "642779",
    "end": "645899"
  },
  {
    "text": "can use the storage nodes to offload",
    "start": "645899",
    "end": "647550"
  },
  {
    "text": "some of the operations from the nativist",
    "start": "647550",
    "end": "649439"
  },
  {
    "text": "this slide is really busy so don't",
    "start": "649439",
    "end": "651569"
  },
  {
    "text": "expect to read the whole thing but the",
    "start": "651569",
    "end": "653250"
  },
  {
    "text": "key point is that only",
    "start": "653250",
    "end": "654830"
  },
  {
    "text": "operations one into black the Daedalus",
    "start": "654830",
    "end": "657130"
  },
  {
    "text": "that entails receiving a batch of log",
    "start": "657130",
    "end": "659720"
  },
  {
    "text": "records from the database persisting it",
    "start": "659720",
    "end": "661820"
  },
  {
    "text": "in Log form to local SSD and then",
    "start": "661820",
    "end": "664190"
  },
  {
    "text": "acknowledging it that the rest of the",
    "start": "664190",
    "end": "666320"
  },
  {
    "text": "operations number three through eight",
    "start": "666320",
    "end": "667730"
  },
  {
    "text": "happen asynchronously in the background",
    "start": "667730",
    "end": "670400"
  },
  {
    "text": "and don't affect database performance at",
    "start": "670400",
    "end": "672320"
  },
  {
    "text": "all things such as coalescing logs and",
    "start": "672320",
    "end": "674540"
  },
  {
    "text": "data blocks backing up the s3 gossiping",
    "start": "674540",
    "end": "677780"
  },
  {
    "text": "with other storage nodes garbage",
    "start": "677780",
    "end": "679490"
  },
  {
    "text": "collection and verification checks on",
    "start": "679490",
    "end": "681620"
  },
  {
    "text": "the storage so as you can see there are",
    "start": "681620",
    "end": "683930"
  },
  {
    "text": "some really nice benefits to having",
    "start": "683930",
    "end": "685340"
  },
  {
    "text": "intelligent storage nodes in Aurora",
    "start": "685340",
    "end": "688330"
  },
  {
    "text": "now let's look at the results of a",
    "start": "688330",
    "end": "690520"
  },
  {
    "start": "689000",
    "end": "689000"
  },
  {
    "text": "particular benchmark this is from a syst",
    "start": "690520",
    "end": "692470"
  },
  {
    "text": "bench test comparing standard Postgres",
    "start": "692470",
    "end": "694360"
  },
  {
    "text": "and RDS with aurora plus plus standard",
    "start": "694360",
    "end": "696940"
  },
  {
    "text": "Postgres is the blue line along the",
    "start": "696940",
    "end": "698800"
  },
  {
    "text": "bottom and aurora plus cress is the",
    "start": "698800",
    "end": "700540"
  },
  {
    "text": "orange line along the top now it's",
    "start": "700540",
    "end": "702790"
  },
  {
    "text": "obvious that it were a provides higher",
    "start": "702790",
    "end": "704350"
  },
  {
    "text": "performance across the board in this",
    "start": "704350",
    "end": "706150"
  },
  {
    "text": "particular benchmark if you take a",
    "start": "706150",
    "end": "708160"
  },
  {
    "text": "closer look you'll see something",
    "start": "708160",
    "end": "709360"
  },
  {
    "text": "interesting as a number of client",
    "start": "709360",
    "end": "711400"
  },
  {
    "text": "connections grow is the performance",
    "start": "711400",
    "end": "712900"
  },
  {
    "text": "multiple of Aurora actually increases as",
    "start": "712900",
    "end": "714940"
  },
  {
    "text": "well at lower client counselor is about",
    "start": "714940",
    "end": "717550"
  },
  {
    "text": "two times better performing but at",
    "start": "717550",
    "end": "719530"
  },
  {
    "text": "higher client counts roar is actually",
    "start": "719530",
    "end": "721330"
  },
  {
    "text": "over five times better",
    "start": "721330",
    "end": "722740"
  },
  {
    "text": "the fact is highly concurrent workload",
    "start": "722740",
    "end": "725170"
  },
  {
    "text": "is where we are really shines the more",
    "start": "725170",
    "end": "727390"
  },
  {
    "text": "users that hit the database that better",
    "start": "727390",
    "end": "729220"
  },
  {
    "text": "Roy does in comparison to a standard",
    "start": "729220",
    "end": "730780"
  },
  {
    "text": "database one copy of course is that this",
    "start": "730780",
    "end": "733900"
  },
  {
    "text": "is just a benchmark so results will vary",
    "start": "733900",
    "end": "735880"
  },
  {
    "text": "depending on your workload I encourage",
    "start": "735880",
    "end": "738040"
  },
  {
    "text": "you to do a POC of Aurora with your",
    "start": "738040",
    "end": "739690"
  },
  {
    "text": "actual workload to get a real idea of",
    "start": "739690",
    "end": "741940"
  },
  {
    "text": "how it performs fringy another thing I",
    "start": "741940",
    "end": "745210"
  },
  {
    "start": "744000",
    "end": "744000"
  },
  {
    "text": "want to call out what Aurora is that it",
    "start": "745210",
    "end": "746710"
  },
  {
    "text": "does backups and very differently from",
    "start": "746710",
    "end": "748600"
  },
  {
    "text": "traditional databases the main",
    "start": "748600",
    "end": "750520"
  },
  {
    "text": "difference is that there are no",
    "start": "750520",
    "end": "751660"
  },
  {
    "text": "checkpoints or continually backs up into",
    "start": "751660",
    "end": "754780"
  },
  {
    "text": "s3 in a parallel asynchronous and",
    "start": "754780",
    "end": "757750"
  },
  {
    "text": "distributed manner because there are no",
    "start": "757750",
    "end": "760060"
  },
  {
    "text": "checkpoints there's absolutely no",
    "start": "760060",
    "end": "761410"
  },
  {
    "text": "performance impact for backup operations",
    "start": "761410",
    "end": "763360"
  },
  {
    "text": "there's also a significant difference",
    "start": "763360",
    "end": "765760"
  },
  {
    "text": "when doing crash the third on the left",
    "start": "765760",
    "end": "767890"
  },
  {
    "text": "you see how a traditional database does",
    "start": "767890",
    "end": "769660"
  },
  {
    "text": "this it has to load the checkpoint data",
    "start": "769660",
    "end": "771760"
  },
  {
    "text": "and then apply all the log records since",
    "start": "771760",
    "end": "773680"
  },
  {
    "text": "the last checkpoint which could be up to",
    "start": "773680",
    "end": "775510"
  },
  {
    "text": "five minutes away in a large writing",
    "start": "775510",
    "end": "777520"
  },
  {
    "text": "system this can be a lot of Records and",
    "start": "777520",
    "end": "780070"
  },
  {
    "text": "recovery which is often single-threaded",
    "start": "780070",
    "end": "782260"
  },
  {
    "text": "can take even longer than the original",
    "start": "782260",
    "end": "783640"
  },
  {
    "text": "transactions took to run in contrast on",
    "start": "783640",
    "end": "787270"
  },
  {
    "text": "the right you see how Aurora comes from",
    "start": "787270",
    "end": "789700"
  },
  {
    "text": "a crash early in the Amazon lore design",
    "start": "789700",
    "end": "792100"
  },
  {
    "text": "you have a concept that a log based",
    "start": "792100",
    "end": "794200"
  },
  {
    "text": "storing system could recover more",
    "start": "794200",
    "end": "795880"
  },
  {
    "text": "quickly and so that's what we built",
    "start": "795880",
    "end": "797770"
  },
  {
    "text": "because the system is transaction aware",
    "start": "797770",
    "end": "800110"
  },
  {
    "text": "and constantly applying logs and",
    "start": "800110",
    "end": "802270"
  },
  {
    "text": "coalescing blocks recovery from a",
    "start": "802270",
    "end": "805210"
  },
  {
    "text": "primary node crash and we start is",
    "start": "805210",
    "end": "806920"
  },
  {
    "text": "really matter setting what transaction",
    "start": "806920",
    "end": "809140"
  },
  {
    "text": "ID you'd like the system to be visible",
    "start": "809140",
    "end": "810670"
  },
  {
    "text": "at the result is that it's orders of",
    "start": "810670",
    "end": "813010"
  },
  {
    "text": "magnitude faster instead of minutes it's",
    "start": "813010",
    "end": "815800"
  },
  {
    "text": "just a few seconds here's a graph that",
    "start": "815800",
    "end": "818980"
  },
  {
    "start": "818000",
    "end": "818000"
  },
  {
    "text": "shows the difference in crafter seven",
    "start": "818980",
    "end": "820570"
  },
  {
    "text": "times the blue",
    "start": "820570",
    "end": "821889"
  },
  {
    "text": "those on the left are for a traditional",
    "start": "821889",
    "end": "823269"
  },
  {
    "text": "database system as you know there's",
    "start": "823269",
    "end": "825489"
  },
  {
    "text": "always a trade-off of a recovery time",
    "start": "825489",
    "end": "827290"
  },
  {
    "text": "and performance depending on the redo",
    "start": "827290",
    "end": "829629"
  },
  {
    "text": "size with a three game redo recovered in",
    "start": "829629",
    "end": "831850"
  },
  {
    "text": "nineteen seconds writes for about",
    "start": "831850",
    "end": "833529"
  },
  {
    "text": "eighteen thousand per second with a much",
    "start": "833529",
    "end": "835569"
  },
  {
    "text": "larger thirty good review performance a",
    "start": "835569",
    "end": "837819"
  },
  {
    "text": "lot better at over 40 thousand writes",
    "start": "837819",
    "end": "839559"
  },
  {
    "text": "per second but it took one hundred and",
    "start": "839559",
    "end": "841389"
  },
  {
    "text": "twenty three seconds to recover with",
    "start": "841389",
    "end": "843850"
  },
  {
    "text": "Aurora is totally different it's",
    "start": "843850",
    "end": "846279"
  },
  {
    "text": "represented by that little orange dot",
    "start": "846279",
    "end": "848290"
  },
  {
    "text": "way over on the right hand side they",
    "start": "848290",
    "end": "850449"
  },
  {
    "text": "recovered in three seconds it was",
    "start": "850449",
    "end": "852489"
  },
  {
    "text": "immediately up to full speed",
    "start": "852489",
    "end": "853689"
  },
  {
    "text": "pushing 135 thousand nine per second",
    "start": "853689",
    "end": "856359"
  },
  {
    "text": "because it has no reading in the end",
    "start": "856359",
    "end": "858790"
  },
  {
    "text": "recovery time is reduced by up to 97",
    "start": "858790",
    "end": "861429"
  },
  {
    "text": "percent with Aurora compared to",
    "start": "861429",
    "end": "862989"
  },
  {
    "text": "traditional postal systems now let's",
    "start": "862989",
    "end": "866559"
  },
  {
    "text": "talk about a few more of the advanced",
    "start": "866559",
    "end": "867939"
  },
  {
    "text": "features that are lower offers first",
    "start": "867939",
    "end": "870339"
  },
  {
    "start": "870000",
    "end": "870000"
  },
  {
    "text": "there's performance insights which",
    "start": "870339",
    "end": "872079"
  },
  {
    "text": "lexico be on infrastructure and OS level",
    "start": "872079",
    "end": "874149"
  },
  {
    "text": "metrics that you may get from cloud",
    "start": "874149",
    "end": "875529"
  },
  {
    "text": "watch and enhanced monitoring p.i or",
    "start": "875529",
    "end": "878199"
  },
  {
    "text": "performance insights actually guides",
    "start": "878199",
    "end": "879899"
  },
  {
    "text": "discovery performance issues you can",
    "start": "879899",
    "end": "882850"
  },
  {
    "text": "select from hundreds of metrics and",
    "start": "882850",
    "end": "884709"
  },
  {
    "text": "drill down into the granular detail",
    "start": "884709",
    "end": "886569"
  },
  {
    "text": "whereas impacting the database before",
    "start": "886569",
    "end": "888100"
  },
  {
    "text": "this one key metric the database look",
    "start": "888100",
    "end": "890379"
  },
  {
    "text": "which makes performance bottlenecks",
    "start": "890379",
    "end": "892089"
  },
  {
    "text": "merely stand out we can view the load by",
    "start": "892089",
    "end": "894699"
  },
  {
    "text": "various dimensions such as weight events",
    "start": "894699",
    "end": "896769"
  },
  {
    "text": "sequel hosts and users this is a tool",
    "start": "896769",
    "end": "900160"
  },
  {
    "text": "that customers love I've heard a lot of",
    "start": "900160",
    "end": "902169"
  },
  {
    "text": "great feedback about it what's really",
    "start": "902169",
    "end": "904119"
  },
  {
    "text": "nice is that it's totally free to use",
    "start": "904119",
    "end": "905529"
  },
  {
    "text": "and retains seven days of metrics for",
    "start": "905529",
    "end": "907720"
  },
  {
    "text": "free as well now you have the option of",
    "start": "907720",
    "end": "909850"
  },
  {
    "text": "keeping them for longer up to two years",
    "start": "909850",
    "end": "911679"
  },
  {
    "text": "by just paying a little bit for storage",
    "start": "911679",
    "end": "914879"
  },
  {
    "text": "another really useful feature is fast",
    "start": "914879",
    "end": "917199"
  },
  {
    "start": "915000",
    "end": "915000"
  },
  {
    "text": "database cloning with this feature you",
    "start": "917199",
    "end": "919209"
  },
  {
    "text": "can create clones in a minute or two",
    "start": "919209",
    "end": "920860"
  },
  {
    "text": "versus having to do a full snapshot",
    "start": "920860",
    "end": "922689"
  },
  {
    "text": "restore it creates a new cluster with a",
    "start": "922689",
    "end": "925119"
  },
  {
    "text": "storage that is just pointers to the",
    "start": "925119",
    "end": "926949"
  },
  {
    "text": "primary so no data needs to be copied it",
    "start": "926949",
    "end": "929559"
  },
  {
    "text": "uses copy-on-write technology so the",
    "start": "929559",
    "end": "931959"
  },
  {
    "text": "clone only needs to store new rights or",
    "start": "931959",
    "end": "933879"
  },
  {
    "text": "the dentals you can create up to 15",
    "start": "933879",
    "end": "936100"
  },
  {
    "text": "clones of a database you can also clone",
    "start": "936100",
    "end": "938109"
  },
  {
    "text": "across accounts so if your production",
    "start": "938109",
    "end": "939970"
  },
  {
    "text": "and dev test environments are different",
    "start": "939970",
    "end": "941589"
  },
  {
    "text": "accounts that's easily taken care of",
    "start": "941589",
    "end": "943329"
  },
  {
    "text": "customers have found that it's great for",
    "start": "943329",
    "end": "945609"
  },
  {
    "text": "creating dev test instances or instances",
    "start": "945609",
    "end": "947799"
  },
  {
    "text": "for doing benchmarks it's also great for",
    "start": "947799",
    "end": "949869"
  },
  {
    "text": "long-running queries for example if you",
    "start": "949869",
    "end": "952089"
  },
  {
    "text": "have a query that needs to run for 30",
    "start": "952089",
    "end": "953769"
  },
  {
    "text": "minutes you can create a fast load",
    "start": "953769",
    "end": "956320"
  },
  {
    "text": "get that clone with your query and then",
    "start": "956320",
    "end": "957940"
  },
  {
    "text": "toss away when you're done that way",
    "start": "957940",
    "end": "959950"
  },
  {
    "text": "won't have any impact on the performance",
    "start": "959950",
    "end": "961810"
  },
  {
    "text": "of the primary database cluster now",
    "start": "961810",
    "end": "964900"
  },
  {
    "text": "let's talk about Aurora circles this is",
    "start": "964900",
    "end": "967120"
  },
  {
    "start": "965000",
    "end": "965000"
  },
  {
    "text": "a new feature that customers are really",
    "start": "967120",
    "end": "969070"
  },
  {
    "text": "excited about service gives you the",
    "start": "969070",
    "end": "971230"
  },
  {
    "text": "ability to automatically scale your",
    "start": "971230",
    "end": "972790"
  },
  {
    "text": "databases up and down based on your",
    "start": "972790",
    "end": "974830"
  },
  {
    "text": "workload characteristics there's no more",
    "start": "974830",
    "end": "976900"
  },
  {
    "text": "need to monitor and manually change",
    "start": "976900",
    "end": "978400"
  },
  {
    "text": "instant sizes the way service works is",
    "start": "978400",
    "end": "981100"
  },
  {
    "text": "that the applications connect with epoxy",
    "start": "981100",
    "end": "983110"
  },
  {
    "text": "layer there's a warm pool of instances",
    "start": "983110",
    "end": "985330"
  },
  {
    "text": "of different sizes underneath it when",
    "start": "985330",
    "end": "987460"
  },
  {
    "text": "the workload requirements go up for",
    "start": "987460",
    "end": "989140"
  },
  {
    "text": "example because memory or compute",
    "start": "989140",
    "end": "990760"
  },
  {
    "text": "requirements go above a certain",
    "start": "990760",
    "end": "991930"
  },
  {
    "text": "threshold certain lists will switch to a",
    "start": "991930",
    "end": "994180"
  },
  {
    "text": "larger instance size when they go down",
    "start": "994180",
    "end": "996100"
  },
  {
    "text": "it switches to a smaller one you just",
    "start": "996100",
    "end": "998950"
  },
  {
    "text": "set a min and a max number of ECU's",
    "start": "998950",
    "end": "1001230"
  },
  {
    "text": "which stands for Aurora capacity units",
    "start": "1001230",
    "end": "1003060"
  },
  {
    "text": "and the service cluster will",
    "start": "1003060",
    "end": "1004740"
  },
  {
    "text": "automatically adjust the instance ID",
    "start": "1004740",
    "end": "1006480"
  },
  {
    "text": "within those parameters one nice option",
    "start": "1006480",
    "end": "1009180"
  },
  {
    "text": "is that you can set your min a CU to",
    "start": "1009180",
    "end": "1010950"
  },
  {
    "text": "zero which essentially puts the database",
    "start": "1010950",
    "end": "1012990"
  },
  {
    "text": "into a hibernating stage this is great",
    "start": "1012990",
    "end": "1015330"
  },
  {
    "text": "for dev fest environments where it goes",
    "start": "1015330",
    "end": "1017100"
  },
  {
    "text": "down to zero in the evenings and on",
    "start": "1017100",
    "end": "1018900"
  },
  {
    "text": "weekends when no one's working on other",
    "start": "1018900",
    "end": "1021030"
  },
  {
    "text": "good use cases include infrequently used",
    "start": "1021030",
    "end": "1022950"
  },
  {
    "text": "applications for example low volume blog",
    "start": "1022950",
    "end": "1025290"
  },
  {
    "text": "sites applications are variable load",
    "start": "1025290",
    "end": "1027600"
  },
  {
    "text": "with peaks of activity that are hard to",
    "start": "1027600",
    "end": "1029760"
  },
  {
    "text": "predict",
    "start": "1029760",
    "end": "1030240"
  },
  {
    "text": "for instance news sites and consolidated",
    "start": "1030240",
    "end": "1032790"
  },
  {
    "text": "fleets of multi tenant SAS applications",
    "start": "1032790",
    "end": "1034800"
  },
  {
    "text": "now one note is that service is not a",
    "start": "1034800",
    "end": "1037380"
  },
  {
    "text": "panacea for all use cases there is a",
    "start": "1037380",
    "end": "1039870"
  },
  {
    "text": "little bit of a pause about two to three",
    "start": "1039870",
    "end": "1041610"
  },
  {
    "text": "seconds as it switches instance sizes",
    "start": "1041610",
    "end": "1043650"
  },
  {
    "text": "from one to another so the application",
    "start": "1043650",
    "end": "1045720"
  },
  {
    "text": "does need to be able to withstand that I",
    "start": "1045720",
    "end": "1047430"
  },
  {
    "text": "always encourage customers to test it",
    "start": "1047430",
    "end": "1049740"
  },
  {
    "text": "out to see if it's a fit for their",
    "start": "1049740",
    "end": "1051120"
  },
  {
    "text": "particular workplace now being said",
    "start": "1051120",
    "end": "1052890"
  },
  {
    "text": "server list is gaining rapid adoption",
    "start": "1052890",
    "end": "1055020"
  },
  {
    "text": "and customers of all sizes",
    "start": "1055020",
    "end": "1057740"
  },
  {
    "text": "finally here are some features that are",
    "start": "1057740",
    "end": "1059760"
  },
  {
    "start": "1058000",
    "end": "1058000"
  },
  {
    "text": "coming soon to an Aurora database near",
    "start": "1059760",
    "end": "1061830"
  },
  {
    "text": "you the first is global database this",
    "start": "1061830",
    "end": "1064710"
  },
  {
    "text": "enables you to do cross region",
    "start": "1064710",
    "end": "1066360"
  },
  {
    "text": "replication and create lead replicas and",
    "start": "1066360",
    "end": "1068370"
  },
  {
    "text": "different regions around the world it",
    "start": "1068370",
    "end": "1070410"
  },
  {
    "text": "brings data closer to your customers out",
    "start": "1070410",
    "end": "1072150"
  },
  {
    "text": "for patients in different geographies",
    "start": "1072150",
    "end": "1073400"
  },
  {
    "text": "it's also great for supporting the warm",
    "start": "1073400",
    "end": "1076230"
  },
  {
    "text": "dr strategy what's nice is that",
    "start": "1076230",
    "end": "1078330"
  },
  {
    "text": "replication is done on the Aurora",
    "start": "1078330",
    "end": "1080040"
  },
  {
    "text": "storage tier so it provides high",
    "start": "1080040",
    "end": "1082110"
  },
  {
    "text": "throughput with low latency in real",
    "start": "1082110",
    "end": "1084450"
  },
  {
    "text": "world tests we've seen the latency to be",
    "start": "1084450",
    "end": "1086730"
  },
  {
    "text": "well under one second between any two",
    "start": "1086730",
    "end": "1088680"
  },
  {
    "text": "regions in the world",
    "start": "1088680",
    "end": "1089700"
  },
  {
    "text": "and throughput of up to 200,000 writes",
    "start": "1089700",
    "end": "1092639"
  },
  {
    "text": "per second with negligible impact the",
    "start": "1092639",
    "end": "1095820"
  },
  {
    "text": "next one is data API this allows you to",
    "start": "1095820",
    "end": "1098159"
  },
  {
    "text": "connect to a war service via an HTTP",
    "start": "1098159",
    "end": "1100380"
  },
  {
    "text": "interface without using a client-side",
    "start": "1100380",
    "end": "1101970"
  },
  {
    "text": "driver grant for the fast and rapidly",
    "start": "1101970",
    "end": "1104700"
  },
  {
    "text": "proliferating number of IMT and mobile",
    "start": "1104700",
    "end": "1106980"
  },
  {
    "text": "devices in the world the next one is",
    "start": "1106980",
    "end": "1109230"
  },
  {
    "text": "backtrack this is like a rewind button",
    "start": "1109230",
    "end": "1111570"
  },
  {
    "text": "for your database instance it's for",
    "start": "1111570",
    "end": "1113340"
  },
  {
    "text": "those cases where someone accidentally",
    "start": "1113340",
    "end": "1114840"
  },
  {
    "text": "drops a table or doesn't delete without",
    "start": "1114840",
    "end": "1116880"
  },
  {
    "text": "where clause instead of having to do a",
    "start": "1116880",
    "end": "1119100"
  },
  {
    "text": "full point time restore which can take a",
    "start": "1119100",
    "end": "1121230"
  },
  {
    "text": "while",
    "start": "1121230",
    "end": "1121769"
  },
  {
    "text": "you can go back in time in a matter of",
    "start": "1121769",
    "end": "1124230"
  },
  {
    "text": "seconds the next one is Aurora parallel",
    "start": "1124230",
    "end": "1126809"
  },
  {
    "text": "query of course we all know that",
    "start": "1126809",
    "end": "1128399"
  },
  {
    "text": "Postgres already has a parallel query",
    "start": "1128399",
    "end": "1130919"
  },
  {
    "text": "feature but this is somewhat different",
    "start": "1130919",
    "end": "1132750"
  },
  {
    "text": "it's actually the Aurora version of",
    "start": "1132750",
    "end": "1135179"
  },
  {
    "text": "parallel query on the storage tier this",
    "start": "1135179",
    "end": "1137700"
  },
  {
    "text": "feature will enable you to push down the",
    "start": "1137700",
    "end": "1139470"
  },
  {
    "text": "predicates into the intelligent storage",
    "start": "1139470",
    "end": "1141210"
  },
  {
    "text": "layer and greatly increase the speed of",
    "start": "1141210",
    "end": "1143399"
  },
  {
    "text": "many of your queries in real-life tests",
    "start": "1143399",
    "end": "1145649"
  },
  {
    "text": "we've seen gains of 10x to a hundred",
    "start": "1145649",
    "end": "1148139"
  },
  {
    "text": "expert words and much more stay tuned",
    "start": "1148139",
    "end": "1151980"
  },
  {
    "text": "for more features coming to Aurora",
    "start": "1151980",
    "end": "1153570"
  },
  {
    "text": "post-post we're constantly innovating",
    "start": "1153570",
    "end": "1155700"
  },
  {
    "text": "and hard at work to provide customers",
    "start": "1155700",
    "end": "1157830"
  },
  {
    "text": "like you with what you need from an",
    "start": "1157830",
    "end": "1159750"
  },
  {
    "text": "enterprise-grade relational database",
    "start": "1159750",
    "end": "1161460"
  },
  {
    "text": "system thank you for taking the time to",
    "start": "1161460",
    "end": "1163679"
  },
  {
    "text": "learn a little bit more about Amazon",
    "start": "1163679",
    "end": "1165120"
  },
  {
    "text": "Aurora closeness I really hope it was",
    "start": "1165120",
    "end": "1167279"
  },
  {
    "text": "helpful to you for more details please",
    "start": "1167279",
    "end": "1169320"
  },
  {
    "text": "go to the AWS sorapus rest page noted on",
    "start": "1169320",
    "end": "1172169"
  },
  {
    "text": "this slide I hope you get the chance to",
    "start": "1172169",
    "end": "1174840"
  },
  {
    "text": "experience the benefits of Aurora in the",
    "start": "1174840",
    "end": "1176789"
  },
  {
    "text": "very near future",
    "start": "1176789",
    "end": "1177630"
  },
  {
    "text": "again this is rich WA global business",
    "start": "1177630",
    "end": "1180179"
  },
  {
    "text": "development manager for Aurora from AWS",
    "start": "1180179",
    "end": "1182090"
  },
  {
    "text": "signing off",
    "start": "1182090",
    "end": "1185210"
  }
]