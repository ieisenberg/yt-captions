[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "Welcome to 'This Is My Architecture'.",
    "start": "7574",
    "end": "9309"
  },
  {
    "text": "I am Hawn and today, \nI am joined by Daniel from Airbnb. Welcome.",
    "start": "9343",
    "end": "13313"
  },
  {
    "text": "Thanks. It's good to be here, Hawn.",
    "start": "13547",
    "end": "14948"
  },
  {
    "start": "15000",
    "end": "34000"
  },
  {
    "text": "So, before we get into your architecture,",
    "start": "15582",
    "end": "17351"
  },
  {
    "text": "for those who are not familiar with Airbnb,\ncan you tell me a little bit about what you guys do?",
    "start": "17451",
    "end": "22222"
  },
  {
    "text": "Yeah. So, Airbnb is an online marketplace",
    "start": "22556",
    "end": "25359"
  },
  {
    "text": "where guests and hosts can connect with each other",
    "start": "25392",
    "end": "27294"
  },
  {
    "text": "and as a guest, you can, you know, stay in unique accommodations",
    "start": "27327",
    "end": "31698"
  },
  {
    "text": "or have one-of-a-kind experiences with these hosts.",
    "start": "31732",
    "end": "34067"
  },
  {
    "start": "34000",
    "end": "87000"
  },
  {
    "text": "Wow. So, what are some of the business challenges",
    "start": "34535",
    "end": "37237"
  },
  {
    "text": "that you are trying to solve with your architecture?",
    "start": "37271",
    "end": "39573"
  },
  {
    "text": "Yeah. So, at Airbnb, we run our own multi-tenant\nKubernetes clusters on EC2.",
    "start": "39940",
    "end": "46180"
  },
  {
    "text": "You know, we want our own clusters because\nwe sometimes need a back port fixes",
    "start": "46680",
    "end": "51218"
  },
  {
    "text": "or add new features into our Kubernetes",
    "start": "51218",
    "end": "54954"
  },
  {
    "text": "and the main challenge that we ran into in the past was,",
    "start": "55522",
    "end": "58625"
  },
  {
    "text": "we have, you know, many different pods that\nrun on a, you know, single host",
    "start": "59660",
    "end": "65165"
  },
  {
    "text": "and we want to give fine-grain access controls\nor fine-grain IAM roles to these pods.",
    "start": "65699",
    "end": "70470"
  },
  {
    "text": "And so the way we do that now is,",
    "start": "72773",
    "end": "75275"
  },
  {
    "text": "you know, we have our control plane\nthat manages all of our pods in our cluster.",
    "start": "75309",
    "end": "79279"
  },
  {
    "text": "What the control plane does is\nit injects service account tokens into the pod.",
    "start": "79847",
    "end": "84852"
  },
  {
    "start": "87000",
    "end": "167000"
  },
  {
    "text": "And that control plane is one of the EC2s?",
    "start": "87421",
    "end": "89323"
  },
  {
    "text": "Yes, that's correct.",
    "start": "89656",
    "end": "90390"
  },
  {
    "text": "The control plane runs on a physically separate\nEC2 host than all of our worker nodes.",
    "start": "90390",
    "end": "95929"
  },
  {
    "text": "Okay.",
    "start": "95929",
    "end": "96763"
  },
  {
    "text": "So, the control plane injects tokens.",
    "start": "97898",
    "end": "100701"
  },
  {
    "text": "These tokens are cryptographically signed,\nbut they contain basically an identity.",
    "start": "100801",
    "end": "106673"
  },
  {
    "text": "They act like an ID card for these pods.",
    "start": "106673",
    "end": "108709"
  },
  {
    "text": "And some things that a token will have\nare, what namespace the pod belongs to,",
    "start": "109276",
    "end": "114314"
  },
  {
    "text": "and also the name of the pod.",
    "start": "117918",
    "end": "120854"
  },
  {
    "text": "The pod can then take this token and send it directly to STS.",
    "start": "122389",
    "end": "127261"
  },
  {
    "text": "Okay.",
    "start": "129129",
    "end": "130063"
  },
  {
    "text": "You know for verification.",
    "start": "130430",
    "end": "131597"
  },
  {
    "text": "Since, again, since I mentioned before these pods are cryptography signed.",
    "start": "132699",
    "end": "135736"
  },
  {
    "text": "STS can verify that the token is valid and hasn't been tampered with.",
    "start": "135736",
    "end": "140540"
  },
  {
    "text": "If that all checks out, STS can then check the IAM role",
    "start": "141775",
    "end": "148614"
  },
  {
    "text": "and verify that the namespace and the name of the pod",
    "start": "148815",
    "end": "153720"
  },
  {
    "text": "is able to assume the IAM role that it's requesting.",
    "start": "153720",
    "end": "158725"
  },
  {
    "text": "And if all that checks out, you know, STS will get\ntemporary credentials for that IAM role",
    "start": "159359",
    "end": "163764"
  },
  {
    "text": "and send those credentials back to the pods.",
    "start": "164231",
    "end": "166066"
  },
  {
    "start": "167000",
    "end": "213000"
  },
  {
    "text": "So, from a multi-tenant perspective,",
    "start": "167768",
    "end": "169536"
  },
  {
    "text": "how do you secure those pods in a more clustered manner\nin your Kubernetes cluster?",
    "start": "169636",
    "end": "175075"
  },
  {
    "text": "Yeah, it's a good question.",
    "start": "175576",
    "end": "176376"
  },
  {
    "text": "So, you know, each pod has its own identity",
    "start": "176410",
    "end": "179980"
  },
  {
    "text": "that's, you know, that's provided by our control plane",
    "start": "180013",
    "end": "183250"
  },
  {
    "text": "and you know, in the IAM role definition itself",
    "start": "183750",
    "end": "188789"
  },
  {
    "text": "you know, service owners are able to say like,\nyou know, IAM role Foo, for example,",
    "start": "189456",
    "end": "193694"
  },
  {
    "text": "should only be allowed to be assumed\nby pods in the Foo namespace.",
    "start": "194595",
    "end": "199733"
  },
  {
    "text": "So you know, given that connection with each other",
    "start": "202503",
    "end": "206006"
  },
  {
    "text": "we can guarantee that other\npods and different name spaces",
    "start": "206840",
    "end": "209976"
  },
  {
    "text": "cannot assume you know Foo's IAM role.",
    "start": "209977",
    "end": "212546"
  },
  {
    "start": "213000",
    "end": "311000"
  },
  {
    "text": "Cool.",
    "start": "213447",
    "end": "214281"
  },
  {
    "text": "So in terms of reconciliation and making sure\nthat the pods are assuming the right role.",
    "start": "214281",
    "end": "220521"
  },
  {
    "text": "How do you monitor that and audit that?",
    "start": "220521",
    "end": "222321"
  },
  {
    "text": "Yeah, it's a good question. So you know STS emits events into CloudTrail.",
    "start": "222856",
    "end": "228462"
  },
  {
    "text": "Whenever it creates a new token also whenever\nour pods, you know, assume an IAM role",
    "start": "231198",
    "end": "235636"
  },
  {
    "text": "those events also get emitted into CloudTrail",
    "start": "235636",
    "end": "238038"
  },
  {
    "text": "and we take these events, and we ingest them into our Elasticsearch cluster",
    "start": "239173",
    "end": "244378"
  },
  {
    "text": "that you know engineers have access to",
    "start": "244778",
    "end": "247314"
  },
  {
    "text": "and sort of the main purpose of this",
    "start": "247314",
    "end": "250517"
  },
  {
    "text": "or the main purposes that we're allowed,",
    "start": "250517",
    "end": "252386"
  },
  {
    "text": "we can, you know, see\nwhen a pod is assuming an IAM role.",
    "start": "252419",
    "end": "256490"
  },
  {
    "text": "We can see what IAM roles are being used,\nwe can also see when a failure happens",
    "start": "256757",
    "end": "263629"
  },
  {
    "text": "and when that happens for example,\noftentimes, we notice before service owners,",
    "start": "263630",
    "end": "267901"
  },
  {
    "text": "you know, realize that there's a problem, \nand we can either go, and you know,",
    "start": "267901",
    "end": "271705"
  },
  {
    "text": "check their definition of their IAM role\nto make sure you know it's correct",
    "start": "271738",
    "end": "274775"
  },
  {
    "text": "or we can let service owners know, you know,",
    "start": "274775",
    "end": "277678"
  },
  {
    "text": "something's wrong and they need to take a look at a problem.",
    "start": "277678",
    "end": "280414"
  },
  {
    "text": "So, you would notify the service owners immediately",
    "start": "280981",
    "end": "283550"
  },
  {
    "text": "for them to correct the roles and configuration.",
    "start": "283550",
    "end": "285853"
  },
  {
    "text": "Yeah and ideally, we have alerting to automatically notify them.",
    "start": "285853",
    "end": "289089"
  },
  {
    "text": "Awesome.",
    "start": "289623",
    "end": "290357"
  },
  {
    "text": "Well, that is so cool you're able to",
    "start": "290357",
    "end": "293160"
  },
  {
    "text": "provide that fine-grain access to the multi-tenancy",
    "start": "293493",
    "end": "298031"
  },
  {
    "text": "and enable it for your Kubernetes cluster, so thank you for that.",
    "start": "298031",
    "end": "300834"
  },
  {
    "text": "Thank you.",
    "start": "300834",
    "end": "301835"
  },
  {
    "text": "And thank you for watching,\n'This is My Architecture'.",
    "start": "301835",
    "end": "304070"
  }
]