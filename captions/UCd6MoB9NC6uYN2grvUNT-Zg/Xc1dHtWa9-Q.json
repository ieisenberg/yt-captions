[
  {
    "text": "all right then let's get started hello everyone my name is Kyle Knapp and I'm a",
    "start": "30",
    "end": "5670"
  },
  {
    "text": "software developer here at AWS where I primarily focus on developing the a to",
    "start": "5670",
    "end": "11550"
  },
  {
    "text": "be us command-line interface and AWS SDK for Python also known as moto 3 and I'm",
    "start": "11550",
    "end": "19230"
  },
  {
    "text": "going to talk to you today about what it means to be ineffective a to be a COI user and how you can become one to start",
    "start": "19230",
    "end": "29160"
  },
  {
    "text": "this talks can be advanced so I'm not going to go over a lot of the basics of how to use the aw CLI or the basic usage",
    "start": "29160",
    "end": "36660"
  },
  {
    "text": "patterns I'm making the assumption that you are already familiar fees which will allow me to dive into more advanced",
    "start": "36660",
    "end": "42540"
  },
  {
    "text": "topics in the case you're not too familiar with AWS CLI here's some few",
    "start": "42540",
    "end": "50640"
  },
  {
    "text": "links you can look into and of course the slides will be online later for reference so let's get started the",
    "start": "50640",
    "end": "58140"
  },
  {
    "text": "intimus command-line interface it's a unified command line tool for managing your 8 abyss resources and",
    "start": "58140",
    "end": "64128"
  },
  {
    "text": "interacting with the various different Davis api's and when I think of what it",
    "start": "64129",
    "end": "70740"
  },
  {
    "text": "means to be an effective database CLI user I think of four tenets first the",
    "start": "70740",
    "end": "77520"
  },
  {
    "text": "effective date abyss CLI user uses an iterative workflow so they take a step by step approach to figuring out the",
    "start": "77520",
    "end": "83939"
  },
  {
    "text": "commands you need to run what parameters in order to accomplish a task and once they start feeling comfortable they take that next step trying to",
    "start": "83939",
    "end": "90600"
  },
  {
    "text": "combine commands together and build shell scripts off of those commands they",
    "start": "90600",
    "end": "96270"
  },
  {
    "text": "troubleshoot well when they get results they don't expect they are able to figure out why they're getting results",
    "start": "96270",
    "end": "102420"
  },
  {
    "text": "in able to resolve those issues they're resourceful tooling so they take",
    "start": "102420",
    "end": "108119"
  },
  {
    "text": "functionality outside of the CLI along with the CLI to build functionality that they may need and finally they",
    "start": "108119",
    "end": "116729"
  },
  {
    "text": "understand performance implications they understand how more how some of the more complex commands work in CLI and how",
    "start": "116729",
    "end": "123780"
  },
  {
    "text": "changing parameters and configuration values actually affect that performance",
    "start": "123780",
    "end": "128959"
  },
  {
    "text": "so in order to illustrate these tenets I'm going to go over a sample application we're",
    "start": "128959",
    "end": "134340"
  },
  {
    "text": "be building throughout the stem to this session and in the sample application I'm gonna be taking Amazon BBC to create",
    "start": "134340",
    "end": "141239"
  },
  {
    "text": "a virtual private cloud then I'll be using Amazon ec2 to lunch instances into",
    "start": "141239",
    "end": "147030"
  },
  {
    "text": "that VPC you'd be using I am to create roles for that instance for role for",
    "start": "147030",
    "end": "152910"
  },
  {
    "text": "that instance such that the ec2 instance can then get temporary security security",
    "start": "152910",
    "end": "159000"
  },
  {
    "text": "credentials and upload files to s3 so",
    "start": "159000",
    "end": "164010"
  },
  {
    "text": "taking architectural or view of what we're building here's the ADA miss cloud we're gonna first start off by creating",
    "start": "164010",
    "end": "170220"
  },
  {
    "text": "our V PC each V PC comes with a built-in route table well then create is subnet well create a",
    "start": "170220",
    "end": "179040"
  },
  {
    "text": "Internet gateway and attach it to our V PC so can communicate with the outside world and then we'll create a security",
    "start": "179040",
    "end": "186360"
  },
  {
    "text": "group well launch ec2 instances with an IM role and using that IM role the ec2",
    "start": "186360",
    "end": "195000"
  },
  {
    "text": "instances can upload files to s3 so let's start talking about the first",
    "start": "195000",
    "end": "201120"
  },
  {
    "text": "tenant which is the effective abs CLI user uses an iterative workflow so",
    "start": "201120",
    "end": "208260"
  },
  {
    "text": "here's a sample feel like command that a general seal i user may run where they specify the service they specified the",
    "start": "208260",
    "end": "215010"
  },
  {
    "text": "operation and a set of parameters that they need to provide they didn't get a",
    "start": "215010",
    "end": "220139"
  },
  {
    "text": "json response back from the service and based off the application are trying to",
    "start": "220139",
    "end": "225389"
  },
  {
    "text": "build they'll use components of that response for subsequent commands so for example we're gonna be using a PPC a",
    "start": "225389",
    "end": "230849"
  },
  {
    "text": "idea why because a lot of the resources depending on that be pc so they would go",
    "start": "230849",
    "end": "236430"
  },
  {
    "text": "ahead and copy and paste that value into a command or even if they're savvy they'll save it to a bash variable so i",
    "start": "236430",
    "end": "243349"
  },
  {
    "text": "want to make the comment we can do better we can do better because if we're trying to get that take that next step",
    "start": "243349",
    "end": "250169"
  },
  {
    "text": "trying to build shell scripts off of the commands we ran we need to do this in a programmatic way there's still a manual",
    "start": "250169",
    "end": "257190"
  },
  {
    "text": "step of copying and pasting that actual value here's a better way of writing",
    "start": "257190",
    "end": "263159"
  },
  {
    "text": "this command we're still calling the UC to create VPC but instead now we add parameters such",
    "start": "263159",
    "end": "269770"
  },
  {
    "text": "as query to use a james path expression to query down the specific value that we may need which is vp cid and then we use",
    "start": "269770",
    "end": "277810"
  },
  {
    "text": "output techs to actually strip off the double quotes so that when we now echo",
    "start": "277810",
    "end": "283180"
  },
  {
    "text": "vp cid it will be the correct value another way of doing it is by running",
    "start": "283180",
    "end": "289840"
  },
  {
    "text": "the entire command and then saving the entire output and using command-line tools like JP which is a james path",
    "start": "289840",
    "end": "296920"
  },
  {
    "text": "command-line tool to get the same four functionality as query and output i want",
    "start": "296920",
    "end": "304240"
  },
  {
    "text": "to make this a mint we can't even make this better so in under two in order to understand",
    "start": "304240",
    "end": "310210"
  },
  {
    "text": "how we can make it better we need to understand what the problem is the problem is we don't know necessarily know what the output is gonna be ahead",
    "start": "310210",
    "end": "316390"
  },
  {
    "text": "of time we have to guess based off prior experience or based off the help documentation or go ahead and run the",
    "start": "316390",
    "end": "322930"
  },
  {
    "text": "command to save the entire response and try to work your way from there what would be better is if we can get a sample output to work with that we",
    "start": "322930",
    "end": "330730"
  },
  {
    "text": "didn't actually make that API request and have a lot more confidence than we came and we're about to run so what I",
    "start": "330730",
    "end": "335980"
  },
  {
    "text": "want to show you now is a new feature that we launched yesterday in the latest in a co live release that allow us to do",
    "start": "335980",
    "end": "342520"
  },
  {
    "text": "that cool so I'm gonna go ahead and type",
    "start": "342520",
    "end": "350170"
  },
  {
    "text": "out UC to create VPC provide a cider block and december on this command i'm",
    "start": "350170",
    "end": "361510"
  },
  {
    "text": "going to add a generate CLI skeleton parameter if you're familiar with this parameter providing no other positional",
    "start": "361510",
    "end": "368950"
  },
  {
    "text": "arguments that parameter I'll print out a sample input which you can then use for the CLI input JSON parameter the",
    "start": "368950",
    "end": "375820"
  },
  {
    "text": "feature we add the extension we added to this parameter is the output extension so if I type output here I can actually",
    "start": "375820",
    "end": "382420"
  },
  {
    "text": "see what a sample response would look like furthermore I can then apply the",
    "start": "382420",
    "end": "387760"
  },
  {
    "text": "query parameters that I want to actually figure out what specific value that I may need so I'm gonna query for the VPC",
    "start": "387760",
    "end": "393700"
  },
  {
    "text": "and then I can get the VPC ID and can you continue to iterate to I get the",
    "start": "393700",
    "end": "398740"
  },
  {
    "text": "exact format that I want out so this looks like this",
    "start": "398740",
    "end": "405059"
  },
  {
    "text": "looks like something we want to work with and now I can go ahead to and",
    "start": "405059",
    "end": "411539"
  },
  {
    "text": "remove the generates Eli skeleton parameter and actually make that API call now let it feel confident about the",
    "start": "411539",
    "end": "418379"
  },
  {
    "text": "commands so that now if I echo that it",
    "start": "418379",
    "end": "428399"
  },
  {
    "text": "should be correct which it is so this is a really handy command handy parameter",
    "start": "428399",
    "end": "434309"
  },
  {
    "text": "to use mainly because it can give you a lot more confidence in the command you're about to run the query the output",
    "start": "434309",
    "end": "440909"
  },
  {
    "text": "you're using and when you have this scenario where you're creating a lot of resources you don't want to be making",
    "start": "440909",
    "end": "446099"
  },
  {
    "text": "the API unnecessary API calls because if you messed it up and trying to make a programmatic away you have to go back",
    "start": "446099",
    "end": "452610"
  },
  {
    "text": "and delete the resource to try again so",
    "start": "452610",
    "end": "461039"
  },
  {
    "text": "now what I want to do is talk about how we're able to do this how are we able to rely on this sample response so here is",
    "start": "461039",
    "end": "467969"
  },
  {
    "text": "the output from the generate CLI skeleton with the out pop ssin and the",
    "start": "467969",
    "end": "474059"
  },
  {
    "text": "reason we're able to do this is because the COI relies on the underlying library also known as boto core Botta core is",
    "start": "474059",
    "end": "481559"
  },
  {
    "text": "library that powers the aid of s sdk for python and ada Bly beau de core is completely data-driven such that all of",
    "start": "481559",
    "end": "489899"
  },
  {
    "text": "the all of his met all of its methods all of its parameters are driven off API",
    "start": "489899",
    "end": "495269"
  },
  {
    "text": "models representing the various different a davis api and here is an",
    "start": "495269",
    "end": "501119"
  },
  {
    "text": "example of one of those api dodge api's and you can see that when you start",
    "start": "501119",
    "end": "509159"
  },
  {
    "text": "looking looking at the sample response compared to the output for word create PPC it's model you can see how they",
    "start": "509159",
    "end": "516448"
  },
  {
    "text": "start matching up such that the outer members match up with the other members and the inner members such as VPC IDs as",
    "start": "516449",
    "end": "523529"
  },
  {
    "text": "well match up so having this direct translation we couldn't accurately have that as a sample where a sample response",
    "start": "523529",
    "end": "529529"
  },
  {
    "text": "because that'll put accurately represents what's coming back from the service and therefore we can reliable",
    "start": "529529",
    "end": "535260"
  },
  {
    "text": "use query and output so now that I",
    "start": "535260",
    "end": "541050"
  },
  {
    "text": "talked about the generate CLI skeleton output let's continue on with our sample application and build a few more",
    "start": "541050",
    "end": "546150"
  },
  {
    "text": "resources I'm going to be showing you a few more tricks in order to accomplish that iterative workflow as well",
    "start": "546150",
    "end": "553790"
  },
  {
    "text": "so to show you one more time how generates a high skeleton with the output option works let me start using",
    "start": "562210",
    "end": "568760"
  },
  {
    "text": "it for the create subnet command I have",
    "start": "568760",
    "end": "576170"
  },
  {
    "text": "to pass in a cider block I have to pass",
    "start": "576170",
    "end": "582620"
  },
  {
    "text": "in a VPC ID as well and before running this command I will go ahead and put the",
    "start": "582620",
    "end": "590270"
  },
  {
    "text": "generate CLI skeleton parameter with the output option and from there I have a quick reference in order to create my",
    "start": "590270",
    "end": "596330"
  },
  {
    "text": "Seamus path query and figure out the",
    "start": "596330",
    "end": "603560"
  },
  {
    "text": "output this looks like the response one'd so I'm going to go ahead and",
    "start": "603560",
    "end": "610880"
  },
  {
    "text": "remove the generate CLI skeleton parameter with the output option to go ahead and actually make that API",
    "start": "610880",
    "end": "616970"
  },
  {
    "text": "response",
    "start": "616970",
    "end": "619389"
  },
  {
    "text": "and now if I echo it it should be correct which it is cool so now what I'm",
    "start": "627020",
    "end": "633620"
  },
  {
    "text": "gonna do in order to speed this up a little bit is show you some sample commands that I built up using the",
    "start": "633620",
    "end": "639410"
  },
  {
    "text": "generate CLI skeleton I don't need to show it to you I feel like I've given you a little gist of how it works so I'm",
    "start": "639410",
    "end": "644930"
  },
  {
    "text": "gonna open up the spare file and go ahead and copy it and run it in a",
    "start": "644930",
    "end": "651470"
  },
  {
    "text": "terminal so all I'm doing is I'm creating a gateway I'm attaching it to the V PC and I'm just describing what",
    "start": "651470",
    "end": "659300"
  },
  {
    "text": "the table ID is for my V PC that got built with it so now the very last step",
    "start": "659300",
    "end": "665420"
  },
  {
    "text": "I need to do is go ahead and create a route and in order to create a route I need to call the EC to create route",
    "start": "665420",
    "end": "671600"
  },
  {
    "text": "command which accepts a route table ID",
    "start": "671600",
    "end": "677470"
  },
  {
    "text": "destination Sider block and finally you",
    "start": "679360",
    "end": "686180"
  },
  {
    "text": "need the the gateway ID so before",
    "start": "686180",
    "end": "693410"
  },
  {
    "text": "running this command what I'm gonna do is actually prefix it with echo and the reason prefixing it with echo is because",
    "start": "693410",
    "end": "700160"
  },
  {
    "text": "I haven't been checking any of the bash variables that I have and I don't want to run this command and have a messed up",
    "start": "700160",
    "end": "705649"
  },
  {
    "text": "one of my variables so now if I actually look at how bash how it got substituted",
    "start": "705649",
    "end": "710810"
  },
  {
    "text": "I can see how the table ID got substituted correctly and also the gateway ID also got substituted",
    "start": "710810",
    "end": "716240"
  },
  {
    "text": "correctly as well so I'm pretty confident about that those commands gonna work so I'm gonna go ahead and actually run it and to return",
    "start": "716240",
    "end": "726890"
  },
  {
    "text": "true which looks like it worked worked fine so now let's take that next",
    "start": "726890",
    "end": "732380"
  },
  {
    "text": "iterative step of creating shell scripts the fact that we did this all programmatically it makes it really easy",
    "start": "732380",
    "end": "738649"
  },
  {
    "text": "to start actually having a basis for our shell script so now I'm going to seem to",
    "start": "738649",
    "end": "743660"
  },
  {
    "text": "use the history commands to actually get the previous commands that I have been",
    "start": "743660",
    "end": "749720"
  },
  {
    "text": "running I'll strip out the line numbers as well",
    "start": "749720",
    "end": "755740"
  },
  {
    "text": "and now if I open it I can see all the commands that that have run so I can go",
    "start": "756400",
    "end": "763220"
  },
  {
    "text": "ahead and just start removing some of the commands I don't need such as the generate CLI skeleton I can't remove the",
    "start": "763220",
    "end": "768860"
  },
  {
    "text": "echo some more this generates Eli skeleton and eventually I can get down",
    "start": "768860",
    "end": "775160"
  },
  {
    "text": "to the set of commands that I need to actually run to get this working and the",
    "start": "775160",
    "end": "780200"
  },
  {
    "text": "fact that I've already ran these in a terminal I know that it's this is gonna work and from there if I want to I can",
    "start": "780200",
    "end": "785510"
  },
  {
    "text": "continue iterating on my shell scripts such that I can add the VPC ID if I want",
    "start": "785510",
    "end": "792320"
  },
  {
    "text": "to echo that out I can add a shebang to the top I can add some air logic in",
    "start": "792320",
    "end": "797510"
  },
  {
    "text": "there as well but you'll get the gist of how how easy it was from taking a",
    "start": "797510",
    "end": "802610"
  },
  {
    "text": "programmatic approach to writing a CLI commands it was to actually start",
    "start": "802610",
    "end": "808100"
  },
  {
    "text": "writing shell scripts",
    "start": "808100",
    "end": "810850"
  },
  {
    "text": "so in order to incorporate a iterative",
    "start": "819070",
    "end": "824810"
  },
  {
    "text": "work iterative workflow some recommendations that I have are you generate CLI skeleton's output it's a",
    "start": "824810",
    "end": "831860"
  },
  {
    "text": "way for you to play around with the command the kids sample responses to kind of get the gist of what you're going to get back and once you have a",
    "start": "831860",
    "end": "838280"
  },
  {
    "text": "lot of confidence you can go ahead and run the command with more confidence that it's going to work the way expect",
    "start": "838280",
    "end": "844150"
  },
  {
    "text": "also don't forget about unix commands such as echo to make sure you're checking what how your variables are",
    "start": "844150",
    "end": "849470"
  },
  {
    "text": "getting replaced and if you took the programmatic approach to writing your commands you can easily write shell scripts off of them using the history",
    "start": "849470",
    "end": "856160"
  },
  {
    "text": "command so now what i want to do is talk",
    "start": "856160",
    "end": "862610"
  },
  {
    "text": "about the second tenet which is defective database COI user troubleshoots well so here's a command",
    "start": "862610",
    "end": "870590"
  },
  {
    "text": "that many many of you in the room have probably run where you ran the command and you got a error back saying you're",
    "start": "870590",
    "end": "877610"
  },
  {
    "text": "missing a required argument or you ran a command like this and you had specified an invalid resource ID for the most part",
    "start": "877610",
    "end": "885410"
  },
  {
    "text": "CLI exceptions are self-explanatory but for some exceptions you may not understand how the how you're getting",
    "start": "885410",
    "end": "891530"
  },
  {
    "text": "them and you need some deeper insight into what exactly is going on with your CLI command and that is where debug logs",
    "start": "891530",
    "end": "900710"
  },
  {
    "text": "come in with a debug parameter so when you add debug to the end of the command",
    "start": "900710",
    "end": "905870"
  },
  {
    "text": "or anywhere in the command it will print out instead of log messages the log",
    "start": "905870",
    "end": "911630"
  },
  {
    "text": "messages represent what to see how the CLI is processing that commands and these log messages continue on they have",
    "start": "911630",
    "end": "918950"
  },
  {
    "text": "to continue on for a long time and they're overly verbose for the purpose of CLI developers like myself say be",
    "start": "918950",
    "end": "925820"
  },
  {
    "text": "able to understand what the CLI is doing under and under the cover and",
    "start": "925820",
    "end": "932050"
  },
  {
    "text": "fortunately for the general general seal a user like yourselves you don't need to understand most of the debug log",
    "start": "932050",
    "end": "938660"
  },
  {
    "text": "messages there's only a handful set of debug log messages that will give you that insight you need to debug your CLI",
    "start": "938660",
    "end": "944450"
  },
  {
    "text": "command and in order to understand debug logs you need to understand how have a",
    "start": "944450",
    "end": "951310"
  },
  {
    "text": "understanding of how the CLI stack works so I'm going to start walking through that at the very first step of a CLI",
    "start": "951310",
    "end": "958000"
  },
  {
    "text": "command there is the parsing of the command so determining what operation what parameters got passed in after the",
    "start": "958000",
    "end": "964870"
  },
  {
    "text": "command gets parsed a boat oak or client call gets made but of course if you remember from before",
    "start": "964870",
    "end": "970270"
  },
  {
    "text": "it's that underlying library that powers the database Python SDK and database CY",
    "start": "970270",
    "end": "977080"
  },
  {
    "text": "so you can see how how that helps translate so you see how the operation command gets translated to a boater core",
    "start": "977080",
    "end": "984250"
  },
  {
    "text": "client method and how the parameters also get mapped to method parameters as",
    "start": "984250",
    "end": "989589"
  },
  {
    "text": "well so once the method call has been made then you get a response back and",
    "start": "989589",
    "end": "994900"
  },
  {
    "text": "with that response the parameters such as query and then outfit are then applied to actually get it into the",
    "start": "994900",
    "end": "1001320"
  },
  {
    "text": "format that you may need what I want to do now is focus on what's happening",
    "start": "1001320",
    "end": "1007170"
  },
  {
    "text": "under boat Accord the very first step that happens is but a poor validate and",
    "start": "1007170",
    "end": "1013950"
  },
  {
    "text": "serialize the parameters passed to the method call so you can see on the right",
    "start": "1013950",
    "end": "1019440"
  },
  {
    "text": "right here there is a sample model for create security group and has a bunch of",
    "start": "1019440",
    "end": "1025410"
  },
  {
    "text": "information related to the input such as the valid parameters you can pass in what their types are and even what's",
    "start": "1025410",
    "end": "1032520"
  },
  {
    "text": "required so using this information but a quarter validate it and then serialize it down to an HTTP request well then",
    "start": "1032520",
    "end": "1040500"
  },
  {
    "text": "send that request and a response will be received back and with that response boat Accord will then use the output of",
    "start": "1040500",
    "end": "1046589"
  },
  {
    "text": "this model you notice the create security group result to actually get into a format",
    "start": "1046589",
    "end": "1052140"
  },
  {
    "text": "that the seal I could consume so now back to debug logs one point you need to",
    "start": "1052140",
    "end": "1060150"
  },
  {
    "text": "understand is that debug logs they follow the same direction as a CLI stack so log messages log messages that happen",
    "start": "1060150",
    "end": "1067590"
  },
  {
    "text": "at the very beginning of the stack correspond to the beginning of the debug",
    "start": "1067590",
    "end": "1074580"
  },
  {
    "text": "logs and debug log messages at the end correspond to the end of the stack as well so now let's actually look into",
    "start": "1074580",
    "end": "1081630"
  },
  {
    "text": "some debug logs at different parts of the stack here's a sample command that I've put up",
    "start": "1081630",
    "end": "1086920"
  },
  {
    "text": "and looking at the parsing of the command part of the stack one log message that I really really like using",
    "start": "1086920",
    "end": "1093280"
  },
  {
    "text": "is their arguments entered into the CLI while this may seem obvious it's particularly useful if you're using bash",
    "start": "1093280",
    "end": "1100060"
  },
  {
    "text": "substitution so such so that you can actually see what the literal value passed in is another log message that I",
    "start": "1100060",
    "end": "1107950"
  },
  {
    "text": "like looking at is when you use file parameter notation so when you want to express the contents of the file with a",
    "start": "1107950",
    "end": "1114130"
  },
  {
    "text": "file colon slash slash notation so when you first look at the arguments entered",
    "start": "1114130",
    "end": "1119530"
  },
  {
    "text": "you notice that it hasn't been parsed yet but later down in the log messages you can actually see what the contents",
    "start": "1119530",
    "end": "1126100"
  },
  {
    "text": "of that file were and figure out what value were actually passing to that API call you're making once you get to the",
    "start": "1126100",
    "end": "1135700"
  },
  {
    "text": "validation the serialization part of the stack one log message I like look",
    "start": "1135700",
    "end": "1140710"
  },
  {
    "text": "looking at is the making request so this has a lot of information about the request you're about to send over the",
    "start": "1140710",
    "end": "1146830"
  },
  {
    "text": "wire for example there's the operation there's the parameters you can pass in",
    "start": "1146830",
    "end": "1152140"
  },
  {
    "text": "and even the URL that you're gonna send this request to furthermore once you get",
    "start": "1152140",
    "end": "1160630"
  },
  {
    "text": "down to the HTTP request and response part of the stack this is a smaller log message but it's actually quite important because it tells you what the",
    "start": "1160630",
    "end": "1167530"
  },
  {
    "text": "HTTP status code was of your request so it tells you if it was successful or not",
    "start": "1167530",
    "end": "1172920"
  },
  {
    "text": "you can also figure out what the literal body of your seal-like inmate of your",
    "start": "1172920",
    "end": "1178360"
  },
  {
    "text": "response was so you notice here on the right that this is XML this is what ec2",
    "start": "1178360",
    "end": "1183760"
  },
  {
    "text": "returns to us in the CLI the CLI actually parses this XML and returns it into that JSON document back",
    "start": "1183760",
    "end": "1190210"
  },
  {
    "text": "so this hasn't been touched by the parser at all and you can see some of the untouched values such as the return the group ID and even some values that",
    "start": "1190210",
    "end": "1198070"
  },
  {
    "text": "get parsed out such as a request ID you don't see that in they see what the response to a CLI command and finally",
    "start": "1198070",
    "end": "1206340"
  },
  {
    "text": "one log messages to look at is the retry handler log message so it tells you if",
    "start": "1206340",
    "end": "1212170"
  },
  {
    "text": "your request got retried at all in our case there was no retry that happened so now what I want to do is take the",
    "start": "1212170",
    "end": "1219140"
  },
  {
    "text": "knowledge that we just learned and actually apply it to a sample debugging scenario and the sample debugging",
    "start": "1219140",
    "end": "1224330"
  },
  {
    "text": "scenario will be related to creating our security group so let's say we were",
    "start": "1224330",
    "end": "1240799"
  },
  {
    "text": "working on our application and we're about to create a security group but our boss pulled us aside and told us we need",
    "start": "1240799",
    "end": "1248150"
  },
  {
    "text": "to go tend to some resources in a different region currently the region we're working in is in u.s. West - and",
    "start": "1248150",
    "end": "1253549"
  },
  {
    "text": "easy research resources on us West one so I'm going to go ahead and set my",
    "start": "1253549",
    "end": "1260090"
  },
  {
    "text": "region to us West one and let's say this",
    "start": "1260090",
    "end": "1267350"
  },
  {
    "text": "was a Friday and you you tended to the region to the resources but you never",
    "start": "1267350",
    "end": "1272929"
  },
  {
    "text": "got back to actually creating a security group so you come back into office on Monday and you get right back to it",
    "start": "1272929",
    "end": "1278299"
  },
  {
    "text": "not if you didn't remember to set your your region to us West to now and go",
    "start": "1278299",
    "end": "1283309"
  },
  {
    "text": "ahead and type the easy to create security group command by providing a",
    "start": "1283309",
    "end": "1290690"
  },
  {
    "text": "group name a description",
    "start": "1290690",
    "end": "1297070"
  },
  {
    "text": "and also the VP CID",
    "start": "1299550",
    "end": "1303500"
  },
  {
    "text": "you'll get this exception back saying you can't find your V PC at that point",
    "start": "1308240",
    "end": "1314300"
  },
  {
    "text": "you may be confused did I was just using this V PC why why doesn't exist why",
    "start": "1314300",
    "end": "1321470"
  },
  {
    "text": "can't I find anymore but I didn't mess with my Bosch variables at all I wonder if someone went and deleted my",
    "start": "1321470",
    "end": "1327080"
  },
  {
    "text": "V PC over the weekend from at that point yeah there's two options you can look",
    "start": "1327080",
    "end": "1332840"
  },
  {
    "text": "into first you can call the ec2 described V pcs command to see if your V PC actually exists or you could go ahead",
    "start": "1332840",
    "end": "1339050"
  },
  {
    "text": "and just rerun the command but this time with debug and when you when you print out debug you'll see there's a lot of",
    "start": "1339050",
    "end": "1345530"
  },
  {
    "text": "log messages I personally don't like using standard error to look through these log messages I personally like",
    "start": "1345530",
    "end": "1351190"
  },
  {
    "text": "piping it to a pager such as less because what that let me do is jump",
    "start": "1351190",
    "end": "1359090"
  },
  {
    "text": "around in lines and actually search for specific parts of the debug log messages if you remember from that command",
    "start": "1359090",
    "end": "1366170"
  },
  {
    "text": "we got an exception back right so whenever there's an exception and you're looking at the debug logs there will",
    "start": "1366170",
    "end": "1371540"
  },
  {
    "text": "always be a trace back so that's the very first thing that I always search for when parsing debug logs and you can",
    "start": "1371540",
    "end": "1379550"
  },
  {
    "text": "notice that the trace back in this case is at the very end of our log message so if you remember the stack this is happening in the parsing of the response",
    "start": "1379550",
    "end": "1386030"
  },
  {
    "text": "and when you start looking into this you notice that this is this error is",
    "start": "1386030",
    "end": "1391790"
  },
  {
    "text": "getting raised and boto core clients so that makes sense since in the parsing of the response under the make underscore",
    "start": "1391790",
    "end": "1398630"
  },
  {
    "text": "API call and it is purposely raising a client error based off a parsed response",
    "start": "1398630",
    "end": "1405559"
  },
  {
    "text": "so that's telling me Bota core is purposely raising this error because of a response return to it so now if I",
    "start": "1405559",
    "end": "1414590"
  },
  {
    "text": "scroll up to the actual response to the HTTP status code I notice that it's",
    "start": "1414590",
    "end": "1420500"
  },
  {
    "text": "actually a four hundred I got back so my assumption was right so that's telling me my request was off so scrolling back",
    "start": "1420500",
    "end": "1429500"
  },
  {
    "text": "up and looking at the making requests part of the debug log messages you can",
    "start": "1429500",
    "end": "1435140"
  },
  {
    "text": "actually see it start seeing that information and checking to make sure it's actually correct such as the Krait security group operation looks right",
    "start": "1435140",
    "end": "1442070"
  },
  {
    "text": "continue to scroll this VP CID value that looks like a proper VP CID and finally when you get to the URL you",
    "start": "1442070",
    "end": "1449510"
  },
  {
    "text": "realize this URL looks wrong this is pointed at us West one and then you realize oh I forgot to set my region",
    "start": "1449510",
    "end": "1457100"
  },
  {
    "text": "back to us West - and that's why us I'm not able to find my VP see because US",
    "start": "1457100",
    "end": "1463550"
  },
  {
    "text": "West one doesn't know about my BP sees in u.s. West - so with that knowledge",
    "start": "1463550",
    "end": "1470630"
  },
  {
    "text": "now I go ahead and reset the region and I'm actually gonna go ahead and run the",
    "start": "1470630",
    "end": "1476390"
  },
  {
    "text": "command and I'm gonna put the query in ahead of time because I know already know that and save its value so now if I",
    "start": "1476390",
    "end": "1495740"
  },
  {
    "text": "echo it it should be correct which it is",
    "start": "1495740",
    "end": "1500930"
  },
  {
    "text": "cool so thanks to how we thanks to our debugging knowledge we're able to figure out why we couldn't find our V PC so now",
    "start": "1500930",
    "end": "1514280"
  },
  {
    "text": "let's talk about the key takeaways from that section so in order to become better at troubleshooting make sure you",
    "start": "1514280",
    "end": "1520730"
  },
  {
    "text": "use debug logs they'll have a lot of information of what the CLI is doing and you can use that to figure out what your",
    "start": "1520730",
    "end": "1527210"
  },
  {
    "text": "command and why you're getting the results you are if it's an area that you're getting always search for the",
    "start": "1527210",
    "end": "1532790"
  },
  {
    "text": "trace back when you search for the trace back you figure out where that air is getting raised and then from there you can work your way up the debug logs with",
    "start": "1532790",
    "end": "1539840"
  },
  {
    "text": "your knowledge of the AWI stack to actually figure out what caused that so",
    "start": "1539840",
    "end": "1547880"
  },
  {
    "text": "now let's talk about the third tenant which is the effective a two-bit COI",
    "start": "1547880",
    "end": "1553280"
  },
  {
    "text": "user is resourceful with tooling so when I think of resourceful tooling I think",
    "start": "1553280",
    "end": "1558560"
  },
  {
    "text": "of using functionality outside of the ADA by CLI such as bash Unix commands an",
    "start": "1558560",
    "end": "1565360"
  },
  {
    "text": "external tooling like JP that James command-line tool and some of the interactive tools like JP terminer be a",
    "start": "1565360",
    "end": "1571100"
  },
  {
    "text": "shell I would really recommend watching last year's CLI reinvent talk if you want to learn more about this it goes",
    "start": "1571100",
    "end": "1577040"
  },
  {
    "text": "into great depth about how you can get bind these and what I want to do now is",
    "start": "1577040",
    "end": "1582050"
  },
  {
    "text": "focus on this do-it-yourself aspect of tooling and in order to talk about this",
    "start": "1582050",
    "end": "1588410"
  },
  {
    "text": "aspect I want to go over a brand new feature that we released just today in",
    "start": "1588410",
    "end": "1593900"
  },
  {
    "text": "the CLI and I'm really excited about it and this feature is called aliases so",
    "start": "1593900",
    "end": "1600010"
  },
  {
    "text": "I'm really excited about aliases because I feel that it's gonna make CLI users across all skill groups a lot more",
    "start": "1600010",
    "end": "1607460"
  },
  {
    "text": "productive as a CLI user so sealion aliases are very similar to get aliases",
    "start": "1607460",
    "end": "1614750"
  },
  {
    "text": "where if you specify in your git config a shorthand command for a longer command",
    "start": "1614750",
    "end": "1621700"
  },
  {
    "text": "you can run this shorthand command and it will be able to translate it",
    "start": "1621700",
    "end": "1627700"
  },
  {
    "text": "the full command name so get Co sub branch becomes get check out some branch so I can act I can go ahead and talk",
    "start": "1627700",
    "end": "1635110"
  },
  {
    "text": "about this in slice but actually what I want to do is actually go through demo and actually show you how you can build up aliases and all the really cool",
    "start": "1635110",
    "end": "1640179"
  },
  {
    "text": "functionality that you can get out of aliases and how that can really improve your productivity as a CLI user and in",
    "start": "1640179",
    "end": "1647409"
  },
  {
    "text": "order to illustrate this we're going to go back to our sample application and create our ec2 instance and/or role and",
    "start": "1647409",
    "end": "1654460"
  },
  {
    "text": "launch those so to give a brief",
    "start": "1654460",
    "end": "1665559"
  },
  {
    "text": "introduction of how aliases work I'm going to show you review a command that I really like it's the STS get caller",
    "start": "1665559",
    "end": "1671769"
  },
  {
    "text": "identity commands the reason why I like it is because it tells me who actually",
    "start": "1671769",
    "end": "1678549"
  },
  {
    "text": "what user actually made that request specifically it gives me a lot of lot of helpful information such as the account",
    "start": "1678549",
    "end": "1685360"
  },
  {
    "text": "ID that count ID is useful for creating your arms for granting permissions for",
    "start": "1685360",
    "end": "1691149"
  },
  {
    "text": "creating policies and the only other way to get it would be to log into the console you can find your account ID",
    "start": "1691149",
    "end": "1697149"
  },
  {
    "text": "there or even try to parse in a resource aren't out you have so having this on the back your hand would be really handy",
    "start": "1697149",
    "end": "1702850"
  },
  {
    "text": "and a great candidate for an alias so in order to add it as an alias you have to",
    "start": "1702850",
    "end": "1708250"
  },
  {
    "text": "open up the anybody CLI alias file and you'll notice there's a top-level section here you need that for all",
    "start": "1708250",
    "end": "1715000"
  },
  {
    "text": "aliases alias files and if I want to actually add a alias for this Who am I I",
    "start": "1715000",
    "end": "1720940"
  },
  {
    "text": "essentially see this command as the Who am I for 80 of us services and all I",
    "start": "1720940",
    "end": "1726970"
  },
  {
    "text": "need to do is specify my commands I want to run and all to do now is type ABS Who",
    "start": "1726970",
    "end": "1735279"
  },
  {
    "text": "am I and it'll give me the same response back from get caller identity",
    "start": "1735279",
    "end": "1740490"
  },
  {
    "text": "furthermore like get aliases you can add any set of parameters that",
    "start": "1740490",
    "end": "1746200"
  },
  {
    "text": "are valid to that command on to that alias so if the count ID is all I want I can go ahead and put the query for",
    "start": "1746200",
    "end": "1752320"
  },
  {
    "text": "account and I can also apply an output text so I get that unquoted account ID",
    "start": "1752320",
    "end": "1757539"
  },
  {
    "text": "back so now if the counties all I care about I can go ahead and iterate and add this",
    "start": "1757539",
    "end": "1765220"
  },
  {
    "text": "those parameters to my alias so I can",
    "start": "1765220",
    "end": "1771640"
  },
  {
    "text": "find my query so that now if I call ATS",
    "start": "1771640",
    "end": "1780220"
  },
  {
    "text": "Who am I I just get that unquoted account ID back so now I gave you that",
    "start": "1780220",
    "end": "1788350"
  },
  {
    "text": "brief introduction of how aliases work what I want to do now is show some of the deeper functionality that you can",
    "start": "1788350",
    "end": "1794830"
  },
  {
    "text": "get out of using aliases so going back to our sample application we're gonna go",
    "start": "1794830",
    "end": "1801279"
  },
  {
    "text": "ahead and create our role to start in order to create a role the first thing",
    "start": "1801279",
    "end": "1806919"
  },
  {
    "text": "we need is a roll name so I'm gonna call mine reinvent and we also need a trust policy so I have a trust policy on disk",
    "start": "1806919",
    "end": "1814620"
  },
  {
    "text": "and my trust policy says it allows the CCT the service to assume that role so",
    "start": "1814620",
    "end": "1823630"
  },
  {
    "text": "if I want to go ahead and actually create a role I have to call a Davis I am create rural commands and specify",
    "start": "1823630",
    "end": "1832149"
  },
  {
    "text": "that role name and the zoom roll policy",
    "start": "1832149",
    "end": "1837730"
  },
  {
    "text": "document I mean use the follow parameters notation in order to reference that trust policy now so I'm",
    "start": "1837730",
    "end": "1846940"
  },
  {
    "text": "not actually gonna run this command I just want to make the point that I think this is actually would be a good candidate that could candidate for an",
    "start": "1846940",
    "end": "1853750"
  },
  {
    "text": "alias and it's a good candidate for an alias for two reasons one in order to",
    "start": "1853750",
    "end": "1859029"
  },
  {
    "text": "run this command you always have to reference the file on disk you have to know where that file is and then be able to run that command from there too if I",
    "start": "1859029",
    "end": "1866529"
  },
  {
    "text": "wanted to have a different service to be able to assume the role I would have to go in and modify that file it'd be nice",
    "start": "1866529",
    "end": "1872500"
  },
  {
    "text": "if I could specify what service I want to assume that role I went ahead and actually create an alias for the",
    "start": "1872500",
    "end": "1878139"
  },
  {
    "text": "specific purpose so the alias I created is called create",
    "start": "1878139",
    "end": "1885100"
  },
  {
    "text": "assume role where all you have to do is pass in a role name and the name of the",
    "start": "1885100",
    "end": "1892150"
  },
  {
    "text": "service you want to create that role allowed to assume that role so when I",
    "start": "1892150",
    "end": "1898630"
  },
  {
    "text": "run that alias now I'll get the response back from I am create role so you can see how I have the assumed role policy",
    "start": "1898630",
    "end": "1905710"
  },
  {
    "text": "document in here and the role name of reinvent so now let me actually show you what this alias looks like so as it said",
    "start": "1905710",
    "end": "1921760"
  },
  {
    "text": "before you'll notice a few things I'm still calling I am create role but they Co I command is wrapped by a Bosch",
    "start": "1921760",
    "end": "1928030"
  },
  {
    "text": "function which is then prefixed by this exclamation mark here the exclamation",
    "start": "1928030",
    "end": "1933100"
  },
  {
    "text": "mark is important because it indicates to the CLI that to run this kit that in",
    "start": "1933100",
    "end": "1938170"
  },
  {
    "text": "order to run this command run it as an external command and a subprocess of your shell and what that lets you do is",
    "start": "1938170",
    "end": "1944140"
  },
  {
    "text": "take advantage of a lot of the functionality that your shell provides such as bash functions I use a bash",
    "start": "1944140",
    "end": "1950590"
  },
  {
    "text": "function because then I can then map positional arguments to my CLI commands so I mapped the first positional",
    "start": "1950590",
    "end": "1956740"
  },
  {
    "text": "argument to the role name and then I mapped the second positional argument to actually fill out the same role policy document you'll notice that in order to",
    "start": "1956740",
    "end": "1965080"
  },
  {
    "text": "have a variable a similar role policy document it's hard coded and there's a lot of escaping of double quotes I",
    "start": "1965080",
    "end": "1971560"
  },
  {
    "text": "didn't do but just by hand you should not do this by hand it takes a long time and you're going to make",
    "start": "1971560",
    "end": "1976870"
  },
  {
    "text": "mistakes instead what I used was JP and if you specify the trust part of the",
    "start": "1976870",
    "end": "1983350"
  },
  {
    "text": "file name trust policy JSON and then use a james path expression to string it",
    "start": "1983350",
    "end": "1989730"
  },
  {
    "text": "will actually escape the quotes for you as it's just converting the entire JSON",
    "start": "1989730",
    "end": "1995170"
  },
  {
    "text": "document into a string so that is the exact value I used and in order to",
    "start": "1995170",
    "end": "2002250"
  },
  {
    "text": "continue on with our sample application we need to now figure out what policy we",
    "start": "2002250",
    "end": "2007350"
  },
  {
    "text": "want for that role specifically we need s3 tap permissions have s3 permissions for it so in order to figure out all the",
    "start": "2007350",
    "end": "2014940"
  },
  {
    "text": "policies of available to me I need to run it diam ELISA policies command and when I'm",
    "start": "2014940",
    "end": "2023670"
  },
  {
    "text": "around this command you'll notice a few things there's there's a fair amount of policies available most of them are not",
    "start": "2023670",
    "end": "2029070"
  },
  {
    "text": "even related to s3 so you probably would want to do a query for policy names of containing s3 furthermore oh the list",
    "start": "2029070",
    "end": "2036990"
  },
  {
    "text": "policies command doesn't actually say what specific policies you're getting grant you're granting you would have to",
    "start": "2036990",
    "end": "2042030"
  },
  {
    "text": "use the get policy version in order to get policy version commands in order to determine that and while the names are",
    "start": "2042030",
    "end": "2048360"
  },
  {
    "text": "self-explanatory for the most part it would be not actually nice to know what permissions you're granting so for the",
    "start": "2048360",
    "end": "2055139"
  },
  {
    "text": "specific use case I actually created another alias called search policies so",
    "start": "2055140",
    "end": "2061290"
  },
  {
    "text": "all I have to do is provide a positional argument go search for all the policy names that contain that argument and",
    "start": "2061290",
    "end": "2067409"
  },
  {
    "text": "also print out the document as well so",
    "start": "2067410",
    "end": "2075960"
  },
  {
    "text": "now when I run this command I can see all the s3 related policies such as to",
    "start": "2075960",
    "end": "2081060"
  },
  {
    "text": "Amazon s3 read-only you can see the document as well you can see there's an",
    "start": "2081060",
    "end": "2086190"
  },
  {
    "text": "s3 full access and there's even some super specific s3 related policy for the",
    "start": "2086190",
    "end": "2092580"
  },
  {
    "text": "purpose of this session I'm gonna use the that full the full access policy so",
    "start": "2092580",
    "end": "2099060"
  },
  {
    "text": "I'm gonna go ahead and save that policy arm so now what I want to do is actually",
    "start": "2099060",
    "end": "2106170"
  },
  {
    "text": "show you what this search policies alias looks like",
    "start": "2106170",
    "end": "2110630"
  },
  {
    "text": "so the reason why I want to show you this alias is to show you that you can",
    "start": "2117440",
    "end": "2122510"
  },
  {
    "text": "have more than one CLI command in an alias you can have entire bash scripts",
    "start": "2122510",
    "end": "2127730"
  },
  {
    "text": "in your alias or whatever your shell supports so I'm not gonna go into this",
    "start": "2127730",
    "end": "2132980"
  },
  {
    "text": "too deeply there's a lot of complex james path queries i'm doing here but I",
    "start": "2132980",
    "end": "2138280"
  },
  {
    "text": "originally call Wes policies commit command I searched for all the policies",
    "start": "2138280",
    "end": "2143750"
  },
  {
    "text": "that contained that first positional argument that I passed in and then I use further james path expressions to get",
    "start": "2143750",
    "end": "2149450"
  },
  {
    "text": "into an output format that i can then type into the get policy version command",
    "start": "2149450",
    "end": "2154820"
  },
  {
    "text": "and using the get policy version command i can get all the documents the specific document for that policy version so now",
    "start": "2154820",
    "end": "2165590"
  },
  {
    "text": "let me go ahead and real quickly attach the policy to my oops attach that policy",
    "start": "2165590",
    "end": "2175220"
  },
  {
    "text": "to my role and i need to provide a",
    "start": "2175220",
    "end": "2181370"
  },
  {
    "text": "policy yarn",
    "start": "2181370",
    "end": "2184120"
  },
  {
    "text": "so I'm all set up now in terms of my role the next thing I need to do is create a instance profile for Macy to",
    "start": "2187440",
    "end": "2193620"
  },
  {
    "text": "instance in my role so in order to speed this up I create another alias called",
    "start": "2193620",
    "end": "2199830"
  },
  {
    "text": "setup instance profile that all it does is take a role name and I'll create an",
    "start": "2199830",
    "end": "2207990"
  },
  {
    "text": "instance profile and add that role under the same name so you can see how I just",
    "start": "2207990",
    "end": "2214800"
  },
  {
    "text": "created a reinvent instance profile so we have all the resources now to",
    "start": "2214800",
    "end": "2219960"
  },
  {
    "text": "actually go ahead and start launching our ec2 instances so for the purpose of",
    "start": "2219960",
    "end": "2226170"
  },
  {
    "text": "this demonstration I created another alias surprise called the launch",
    "start": "2226170",
    "end": "2233850"
  },
  {
    "text": "reinvent alias and the launch main event alias it's different other ones in the",
    "start": "2233850",
    "end": "2240090"
  },
  {
    "text": "sense that I'm not using an external command you notice there's no exclamation mark so I'm using the sub command run instances and the reason I",
    "start": "2240090",
    "end": "2246540"
  },
  {
    "text": "have an alias for this is it it shirin it's the amount of typing I'm gonna have",
    "start": "2246540",
    "end": "2252450"
  },
  {
    "text": "to do for future commands such so that I don't have to remember what the image ID",
    "start": "2252450",
    "end": "2257700"
  },
  {
    "text": "was I don't have to remember what my key name is or even that James Beth expression when I query so now that all",
    "start": "2257700",
    "end": "2266240"
  },
  {
    "text": "I have to do is provide all the variable parameters so parameters such as the",
    "start": "2266240",
    "end": "2274020"
  },
  {
    "text": "instance type there's the security",
    "start": "2274020",
    "end": "2279120"
  },
  {
    "text": "groups",
    "start": "2279120",
    "end": "2281600"
  },
  {
    "text": "there's the ayah mrs. profile and",
    "start": "2287090",
    "end": "2296500"
  },
  {
    "text": "finally I just need to provide the subnet ID so now let me go ahead and",
    "start": "2296500",
    "end": "2308570"
  },
  {
    "text": "save the instance ID so I all have to do",
    "start": "2308570",
    "end": "2317750"
  },
  {
    "text": "is echo it out to make sure that looks correct and this so now I have been",
    "start": "2317750",
    "end": "2322850"
  },
  {
    "text": "instance that's getting launched I'm going to go ahead and spin up a second instance for the sake of the next",
    "start": "2322850",
    "end": "2328130"
  },
  {
    "text": "demonstration this instance is going to be a bit larger so now let me check to",
    "start": "2328130",
    "end": "2343430"
  },
  {
    "text": "make sure that this is correct as well and it is okay so as these instances are",
    "start": "2343430",
    "end": "2351260"
  },
  {
    "text": "getting launched let's go back and talk about the key takeaways from this",
    "start": "2351260",
    "end": "2358640"
  },
  {
    "text": "section so in order to be more resourceful tooling I highly recommend trying aliases aliases are going to make",
    "start": "2358640",
    "end": "2365540"
  },
  {
    "text": "you a lot more productive for multiple reasons one it's going to reduce the length of the commands you're typing two",
    "start": "2365540",
    "end": "2371420"
  },
  {
    "text": "it's gonna reduce the complexity you can store default parameters you're gonna be able to wrap shell functionality inside",
    "start": "2371420",
    "end": "2378770"
  },
  {
    "text": "of your CI commands so all you need to do is we run a single CLI command to access that functionality and finally",
    "start": "2378770",
    "end": "2385280"
  },
  {
    "text": "one thing I want to note is that if you notice this alias file it's separate",
    "start": "2385280",
    "end": "2390530"
  },
  {
    "text": "from your credentials is separate from your config file and this was done on purpose it makes it a lot easier to",
    "start": "2390530",
    "end": "2396380"
  },
  {
    "text": "share aliases with other co-workers with fellow sealion thews iasts as is you",
    "start": "2396380",
    "end": "2402470"
  },
  {
    "text": "don't have to worry about leaking your credentials or your configuration and on",
    "start": "2402470",
    "end": "2407840"
  },
  {
    "text": "the same note the CLI team has recently actually has recently launched a github",
    "start": "2407840",
    "end": "2414020"
  },
  {
    "text": "repository with sample aliases so actually let me open that up real quick",
    "start": "2414020",
    "end": "2420160"
  },
  {
    "text": "so the alias the alias repository is under the abus labs the org and it's",
    "start": "2422200",
    "end": "2429140"
  },
  {
    "text": "called it of a CLI - aliases so this is a brand new repository as this is a brand new feature so we're going to be",
    "start": "2429140",
    "end": "2435260"
  },
  {
    "text": "continue adding more aliases to this repository and these aliases that we",
    "start": "2435260",
    "end": "2441560"
  },
  {
    "text": "filled up or ones that we use in our everyday work so you're gonna already increase your level of productivity there and another point I want to make",
    "start": "2441560",
    "end": "2448790"
  },
  {
    "text": "out is that this is on github it's an open source project so if you come across a really cool alien that you",
    "start": "2448790",
    "end": "2455300"
  },
  {
    "text": "think it's gonna be really helpful for the rest of the CLI community go ahead and send a poor quest and people can",
    "start": "2455300",
    "end": "2462109"
  },
  {
    "text": "start picking up aliases right away and start using the productivity that are the functionality that you created so",
    "start": "2462109",
    "end": "2476530"
  },
  {
    "text": "now that I talked about that tenant let's talk about the final Senate which is defective a two-bit CEO a user",
    "start": "2476530",
    "end": "2482540"
  },
  {
    "text": "understands performance implications so when I think of understanding performance implications I think of",
    "start": "2482540",
    "end": "2487940"
  },
  {
    "text": "three different areas in see why there's client-side server-side filtering there's pagination and then there's also",
    "start": "2487940",
    "end": "2494990"
  },
  {
    "text": "that's three commands so let's talk about client-side and server-side filtering to start here's a sample",
    "start": "2494990",
    "end": "2503599"
  },
  {
    "text": "command a CLI user may run what they're trying to do is describe to them all the",
    "start": "2503599",
    "end": "2508970"
  },
  {
    "text": "Amazon Linux hvi mommies and they do so by you specifying the query parameter so",
    "start": "2508970",
    "end": "2515599"
  },
  {
    "text": "if you remember from the second section about the in the troubleshooting section",
    "start": "2515599",
    "end": "2520849"
  },
  {
    "text": "about how the stack works specifically for query you would remember that query",
    "start": "2520849",
    "end": "2525950"
  },
  {
    "text": "gets applied at the very end of the stack so this is after the request has been sent after the response has gotten",
    "start": "2525950",
    "end": "2532070"
  },
  {
    "text": "back and even after the parsing so by running the command like this you're actually listing out all the available",
    "start": "2532070",
    "end": "2538310"
  },
  {
    "text": "images to you and then performing that client-side filter which as a result",
    "start": "2538310",
    "end": "2545030"
  },
  {
    "text": "causes the command to be slower than it needs to be a better command to run would be to use server-side parameters",
    "start": "2545030",
    "end": "2552290"
  },
  {
    "text": "such as the filter ammeter to go ahead and let the service API go ahead and filter it out for you",
    "start": "2552290",
    "end": "2558440"
  },
  {
    "text": "and then from there you can use client-side parameters to actually filter out what you may need at the end",
    "start": "2558440",
    "end": "2564500"
  },
  {
    "text": "and by running it like this you greatly increase the time for that command to",
    "start": "2564500",
    "end": "2569780"
  },
  {
    "text": "run or decrease the time it takes in general you want to make sure that",
    "start": "2569780",
    "end": "2575750"
  },
  {
    "text": "you're using server-side parameters whenever possible as it's going as if",
    "start": "2575750",
    "end": "2580760"
  },
  {
    "text": "you put it all in the query it's gonna take longer than it needs to so now what",
    "start": "2580760",
    "end": "2589010"
  },
  {
    "text": "I want to do is talk about pagination so if you're unfamiliar about pagination here is an example command that is",
    "start": "2589010",
    "end": "2595760"
  },
  {
    "text": "paginate it by default it's a describe snapshots command so the way pagination",
    "start": "2595760",
    "end": "2601130"
  },
  {
    "text": "works in the COI is the CLI will make the describe snapshots API request and",
    "start": "2601130",
    "end": "2606970"
  },
  {
    "text": "based off that request they'll get a response back with the list of snapshots available to the user",
    "start": "2606970",
    "end": "2612680"
  },
  {
    "text": "if there's any more available snapshots that can be described it will return an output token the steal line will detect",
    "start": "2612680",
    "end": "2618650"
  },
  {
    "text": "this output token and then use it as an input token for subsequent requests to get the next set of snapshots and the",
    "start": "2618650",
    "end": "2625790"
  },
  {
    "text": "CLI will keep doing this until there's no more out there's no more output tokens coming back from the service",
    "start": "2625790",
    "end": "2631040"
  },
  {
    "text": "indicating there is no more snapshots to be described once all these responses",
    "start": "2631040",
    "end": "2637070"
  },
  {
    "text": "are collected they are then merged into one big list of snapshots so the",
    "start": "2637070",
    "end": "2643490"
  },
  {
    "text": "behavior of pagination actually changed based off the parameters you pass in so here's an example of how the behavior",
    "start": "2643490",
    "end": "2650510"
  },
  {
    "text": "can change with the output parameter specifically in a text format and when you specify output text you still get",
    "start": "2650510",
    "end": "2658580"
  },
  {
    "text": "all of the snapshots but instead of actually waiting for all the responses to come back the CLI will output each",
    "start": "2658580",
    "end": "2666160"
  },
  {
    "text": "response as it comes in and you get more of a streaming effects here so if you",
    "start": "2666160",
    "end": "2671300"
  },
  {
    "text": "have the workflow where you're trying to describe a set of resources and then perform an action on that set of",
    "start": "2671300",
    "end": "2676460"
  },
  {
    "text": "resources you want to make sure you're using the output text format because that will increase the concurrency so",
    "start": "2676460",
    "end": "2682880"
  },
  {
    "text": "for example if I wanted to share my particular snapshot with an individual user if I didn't",
    "start": "2682880",
    "end": "2688940"
  },
  {
    "text": "provide output text to my parameter I would have to wait for the entire command to run before I can start",
    "start": "2688940",
    "end": "2695890"
  },
  {
    "text": "sharing my snapshot and therefore it",
    "start": "2695890",
    "end": "2702140"
  },
  {
    "text": "will deke therefore by providing an output text you have you'll speed up the length of your shell scripts and",
    "start": "2702140",
    "end": "2708440"
  },
  {
    "text": "commands so now one last area I really",
    "start": "2708440",
    "end": "2713930"
  },
  {
    "text": "want to focus on for this part of the talk is that Sri commands so but that's",
    "start": "2713930",
    "end": "2721730"
  },
  {
    "text": "three commands here's a sample architecture of how necessary command",
    "start": "2721730",
    "end": "2727430"
  },
  {
    "text": "looks there's always a thread for LS three commands there's always a thread pool backing it and these threads what",
    "start": "2727430",
    "end": "2734300"
  },
  {
    "text": "they do is they they contact s3 and upload or download data to and from the",
    "start": "2734300",
    "end": "2740030"
  },
  {
    "text": "cloud so when we're doing an upload the first thing this the command will do is",
    "start": "2740030",
    "end": "2745340"
  },
  {
    "text": "determine if the file use a beep multi-part uploaded and if it does it",
    "start": "2745340",
    "end": "2751790"
  },
  {
    "text": "will break the file up into parts and it'll put each part into a task queue so",
    "start": "2751790",
    "end": "2757339"
  },
  {
    "text": "that threads will then start pulling parts off this task queue and start doing that performing the upload is and",
    "start": "2757339",
    "end": "2764570"
  },
  {
    "text": "as a cheese thread finishes it will pull another part off and continue to perform",
    "start": "2764570",
    "end": "2770630"
  },
  {
    "text": "the upload part and then once there is no more parts left it will then call a",
    "start": "2770630",
    "end": "2777230"
  },
  {
    "text": "complete multi-part upload to actually finalize that s3 object so in order to",
    "start": "2777230",
    "end": "2783140"
  },
  {
    "text": "talk about performance related to the Sri commands there's four different parameters that you can set that affects",
    "start": "2783140",
    "end": "2788900"
  },
  {
    "text": "the performance note that these parameters they only affect the s3 commands they don't they don't even",
    "start": "2788900",
    "end": "2794420"
  },
  {
    "text": "affect the s3 API ones as those are generated from the API model that s3 provides and the parameter I really want",
    "start": "2794420",
    "end": "2802099"
  },
  {
    "text": "to focus on right now is the max concurrent request because that has the most performance implications and when",
    "start": "2802099",
    "end": "2809000"
  },
  {
    "text": "you go to back to the architecture max concurrent request directly translates",
    "start": "2809000",
    "end": "2814070"
  },
  {
    "text": "to the number of threads in your thread pool so increasing the matching current request that will increase the potential",
    "start": "2814070",
    "end": "2820170"
  },
  {
    "text": "and what you're using and decreasing it will decrease the potential bandwidth as well so in order to illustrate this I'm",
    "start": "2820170",
    "end": "2827819"
  },
  {
    "text": "actually going to complete this final leg of our sample application and upload",
    "start": "2827819",
    "end": "2834299"
  },
  {
    "text": "files to Amazon s3 from our ec2 instances so by now the ec2 instances",
    "start": "2834299",
    "end": "2848819"
  },
  {
    "text": "should be ready to be connected to one thing I have to do before I actually can SSH onto my instance is authorize my IP",
    "start": "2848819",
    "end": "2858170"
  },
  {
    "text": "for that security group I want to know",
    "start": "2858170",
    "end": "2865710"
  },
  {
    "text": "when I'm actually running this alias I am NOT actually opening up to the world I'm I'm only using my specific IP that I",
    "start": "2865710",
    "end": "2872460"
  },
  {
    "text": "know about and now if I want to actually connect to my ec2 instance I have",
    "start": "2872460",
    "end": "2877920"
  },
  {
    "text": "another alias to do step to see that and it's called connect SSH so I'm going to",
    "start": "2877920",
    "end": "2883980"
  },
  {
    "text": "go ahead and connect to that first instance I created so on this ec2",
    "start": "2883980",
    "end": "2893069"
  },
  {
    "text": "instance now I have a few things installed I have the CLI installed and a",
    "start": "2893069",
    "end": "2898770"
  },
  {
    "text": "few files laying around and to show you how an s3 how s3 upload works let me go",
    "start": "2898770",
    "end": "2904049"
  },
  {
    "text": "ahead and run a command",
    "start": "2904049",
    "end": "2906770"
  },
  {
    "text": "and if you're a longtime user of the COI or specifically the s3 commands one",
    "start": "2915180",
    "end": "2921030"
  },
  {
    "text": "thing you may notice and the minor version bump what 1.11 that a few behave",
    "start": "2921030",
    "end": "2927330"
  },
  {
    "text": "you've things change in behavior so one change was we moved off of the part",
    "start": "2927330",
    "end": "2932820"
  },
  {
    "text": "notation when expressing progress to a specific value in terms of bytes and in",
    "start": "2932820",
    "end": "2940100"
  },
  {
    "text": "the recent release of the CLI that released aliases released one more feature which is transfer speed so you",
    "start": "2940100",
    "end": "2946830"
  },
  {
    "text": "can see on the right here this is the actual transfer speed of your CLI command so one approach to actually",
    "start": "2946830",
    "end": "2954570"
  },
  {
    "text": "figuring out what's a proper maxing current quest would be to try to upload a file and figure out what max",
    "start": "2954570",
    "end": "2960930"
  },
  {
    "text": "concurrent requests gets you the the highest transfer speed possible if so if",
    "start": "2960930",
    "end": "2967860"
  },
  {
    "text": "you're actually trying to do this for multiple environments this would be tedious if it was only for one environment and might not be bad but in",
    "start": "2967860",
    "end": "2975930"
  },
  {
    "text": "a case that you're spinning up dami and dip for different sizes of different environments it'd be nice if it was more",
    "start": "2975930",
    "end": "2981420"
  },
  {
    "text": "automated I actually wrote a script that would do that as well so into my script",
    "start": "2981420",
    "end": "2989010"
  },
  {
    "text": "what I do is I set it at a very low setting of one max concurrent request and from there I actually track what the",
    "start": "2989010",
    "end": "2994800"
  },
  {
    "text": "transfer speed is by running the CLI command in a subprocess and parsing through the standard out but and after",
    "start": "2994800",
    "end": "3002120"
  },
  {
    "text": "pulling for 10 seconds it will then suggest a new maxi curry quest and from there it can actually start determining",
    "start": "3002120",
    "end": "3008330"
  },
  {
    "text": "if what what max concurrent request is should try next so you can see how when",
    "start": "3008330",
    "end": "3013880"
  },
  {
    "text": "it went from 1 to 4 and notice the big increase so we tried 4 to 7 but then when it went",
    "start": "3013880",
    "end": "3020060"
  },
  {
    "text": "from 4 to 7 though you'll notice that it did increase as much one thing you need",
    "start": "3020060",
    "end": "3025580"
  },
  {
    "text": "to realize is that for all environments you're limited in your resources so once you start hitting that bandwidth",
    "start": "3025580",
    "end": "3031370"
  },
  {
    "text": "throwing it anymore max anymore a number of threads into your transfer is not",
    "start": "3031370",
    "end": "3036830"
  },
  {
    "text": "going to increase the amount of bandwidth you have available to you so picking them up matching her request size that's correct or more suited for",
    "start": "3036830",
    "end": "3044150"
  },
  {
    "text": "your environment is quite important so now let me hop off this ec2 instance",
    "start": "3044150",
    "end": "3050010"
  },
  {
    "text": "and hop on to the other instance dice spun up and if you remember this ec2",
    "start": "3050010",
    "end": "3058800"
  },
  {
    "text": "instance was a larger one so it has more bandwidth available to it to make it",
    "start": "3058800",
    "end": "3064260"
  },
  {
    "text": "easier for me to configure this I actually added another alias that calls out my my Python script that I wrote",
    "start": "3064260",
    "end": "3071790"
  },
  {
    "text": "called and I called it a Davis auto-configure so now this is gonna be doing the same thing as last time where it starts at",
    "start": "3071790",
    "end": "3083220"
  },
  {
    "text": "foot one and tries to track the transfer speed and as it's tracking the transfer speed you'll start noticing once it hits",
    "start": "3083220",
    "end": "3091950"
  },
  {
    "text": "the floor that the actual transfer speed before was so a bit higher than it was for that smaller instance so once it's",
    "start": "3091950",
    "end": "3102240"
  },
  {
    "text": "tracked for four you notice that when it makes that jump from four to seven now the bandwidth is still pretty high you",
    "start": "3102240",
    "end": "3109410"
  },
  {
    "text": "notice that it hasn't reached that ceiling yet in terms of bandwidth usage in fact it didn't reach even though it",
    "start": "3109410",
    "end": "3117810"
  },
  {
    "text": "didn't reach it it suggests the maximum value increased even more right now on my reprise script the maximum jump I can",
    "start": "3117810",
    "end": "3124290"
  },
  {
    "text": "make is three so even when going from seven to ten it still notice enough",
    "start": "3124290",
    "end": "3130020"
  },
  {
    "text": "increase to try a different value in terms of eleven and in the end it",
    "start": "3130020",
    "end": "3136830"
  },
  {
    "text": "actually decided to stay with eleven and at one point I really want to make here",
    "start": "3136830",
    "end": "3142650"
  },
  {
    "text": "is that if I had to if I had stayed with seven I'll be missing out and potentially a lot of bandwidth and if",
    "start": "3142650",
    "end": "3150770"
  },
  {
    "text": "this transfer speed is important to me knowing about that maxing her request the concurrent requests value what's",
    "start": "3150770",
    "end": "3157860"
  },
  {
    "text": "appropriate for the environment is quite important so",
    "start": "3157860",
    "end": "3165080"
  },
  {
    "text": "now let's talk about the important takeaways since terms of understand performance implications so first I",
    "start": "3171490",
    "end": "3179050"
  },
  {
    "text": "talked about server-side and client-side filtering takeaway there is always use server-side filtering when possible I'd",
    "start": "3179050",
    "end": "3186880"
  },
  {
    "text": "also talked about pagination if you're trying to have a workflow where you're describing resources and then performing",
    "start": "3186880",
    "end": "3193360"
  },
  {
    "text": "action on them make sure you use output text and pipe those commands together and finally I talked about matching",
    "start": "3193360",
    "end": "3199930"
  },
  {
    "text": "parent requests and how setting that can actually affect your performance speed and finding that specific value you need",
    "start": "3199930",
    "end": "3205870"
  },
  {
    "text": "is important so now now they talk about",
    "start": "3205870",
    "end": "3211660"
  },
  {
    "text": "all the tenants what I want to do is summarize what I talked about so I",
    "start": "3211660",
    "end": "3216790"
  },
  {
    "text": "talked about the effective API user and I gave a lot of practical examples of how you can implement or follow these",
    "start": "3216790",
    "end": "3223600"
  },
  {
    "text": "tenets and your everyday CLI use so in terms of using an iterative workflow I",
    "start": "3223600",
    "end": "3230260"
  },
  {
    "text": "talked about how you can use generate CLI skeleton with the output option to go ahead and get a sample response to",
    "start": "3230260",
    "end": "3236320"
  },
  {
    "text": "play with and give you a lot more confidence before you're actually making that API request there is",
    "start": "3236320",
    "end": "3242340"
  },
  {
    "text": "troubleshooting well and using debug logs to get that extra beat a bit of context you need for understanding what",
    "start": "3242340",
    "end": "3248680"
  },
  {
    "text": "your CLI commands doing in terms of being resourceful tooling use aliases",
    "start": "3248680",
    "end": "3253840"
  },
  {
    "text": "aliases are going to make you a lot more productive and it's going to increase it's gonna improve your CLI workflow and",
    "start": "3253840",
    "end": "3261450"
  },
  {
    "text": "finally in order to understand performance implications I talked about s3 and how that affects transfer speeds",
    "start": "3261450",
    "end": "3268200"
  },
  {
    "text": "so I really hope you enjoyed this talk make sure you complete your evaluations",
    "start": "3268200",
    "end": "3275650"
  },
  {
    "text": "and I want to thank you again but wait before we pause I want to make the note if you want any follow-up information",
    "start": "3275650",
    "end": "3281800"
  },
  {
    "text": "please follow the intimus developer blogs we'll have a blog post summarizing what I talked about impossible and some",
    "start": "3281800",
    "end": "3287740"
  },
  {
    "text": "extensions on top of it if you are a Twitter user you can follow me at be Kyle Knapp you will post information as",
    "start": "3287740",
    "end": "3295240"
  },
  {
    "text": "follow-up information comes up and also make sure you check out make sure to check out the aliases repository where",
    "start": "3295240",
    "end": "3301090"
  },
  {
    "text": "it's brand-new so we're gonna be eating you adding new aliases so continually stop by to pick up some new functionality that's gonna really help",
    "start": "3301090",
    "end": "3307150"
  },
  {
    "text": "with your CLI development and thank you again",
    "start": "3307150",
    "end": "3312270"
  }
]