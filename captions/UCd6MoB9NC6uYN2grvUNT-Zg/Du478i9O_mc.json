[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "JEFF WIERER: Alright. So, first of all, thank you all for coming out here today. I'm amazed how many people wanted\nto learn about policies.",
    "start": "600",
    "end": "7700"
  },
  {
    "text": "I guess the lesson here is put Ninja\nin your title next time.",
    "start": "7700",
    "end": "13200"
  },
  {
    "text": "So, hopefully you're here, though, to - let me just switch this over. Hopefully, you're here because you're interested",
    "start": "13200",
    "end": "19800"
  },
  {
    "text": "in Identity Access Management, you want to learn how to secure the\nresources in your AWS account,",
    "start": "19800",
    "end": "25600"
  },
  {
    "text": "and you want to master the IAM policy language. My name is Jeff Wierer.",
    "start": "25600",
    "end": "30900"
  },
  {
    "text": "I'm a Senior Manager on the Identity\nand Access Management team and I hope to, in the next 60 minutes, get us all up to speed and become\npolicy ninjas.",
    "start": "30900",
    "end": "38500"
  },
  {
    "text": "Now, in order to do that, I'm going to go through quite a few\nJSON documents.",
    "start": "38500",
    "end": "43900"
  },
  {
    "text": "So, I'll make this one last request, if it's hard for you to see, I will\nencourage you to come up.",
    "start": "43900",
    "end": "49700"
  },
  {
    "text": "Also, if an hour of looking at JSON documents is not how you want to spend your morning, good news is, you know, it's not too late.",
    "start": "49700",
    "end": "58100"
  },
  {
    "text": "There's a lot of great sessions and\nyou won't hurt my feelings. So, with that, let's go ahead and\nget into it.",
    "start": "58100",
    "end": "63900"
  },
  {
    "start": "63000",
    "end": "63000"
  },
  {
    "text": "What to expect from this session. Really, if you walk away with one\nthing that you learned",
    "start": "63900",
    "end": "70100"
  },
  {
    "text": "in terms of how to secure your account, something you didn't know about policies, a tool to debug, something like that,",
    "start": "70100",
    "end": "76900"
  },
  {
    "text": "I think that it's a mission accomplished. Now, the way I structured this presentation is based off the fact that every day,",
    "start": "76900",
    "end": "84400"
  },
  {
    "text": "I try to spend some time helping customers, whether it's in our forums, getting\non the calls with somebody,",
    "start": "84400",
    "end": "90000"
  },
  {
    "text": "working through support tickets, and that experience has afforded me to see a lot of creative policies",
    "start": "90000",
    "end": "96500"
  },
  {
    "text": "and a lot of things that customers\nhave attempted to do but could not figure out how to do. Quite honestly, sometimes, it took\nme a few days",
    "start": "96500",
    "end": "103100"
  },
  {
    "text": "to figure out how to create the policy. So, I'm going to share what I have learned over the last three and a half years at Amazon,",
    "start": "103100",
    "end": "110800"
  },
  {
    "text": "and hopefully, this is a session\nabout policies,",
    "start": "110800",
    "end": "115900"
  },
  {
    "text": "I'm going to try to keep it as lively\nas possible. And the way we're going to do that is I'm going to go through the demonstrations,",
    "start": "115900",
    "end": "121700"
  },
  {
    "text": "I'm going to show you how the policies work, and I'm going to describe to you\nline by line what they're actually doing. So, with that, let's go into the\nfirst demonstration.",
    "start": "121700",
    "end": "130700"
  },
  {
    "text": "Now, this was an actual customer use case. I didn't make this up. Customer filed a ticket because they\ncouldn't figure out how to do it,",
    "start": "130700",
    "end": "136200"
  },
  {
    "text": "and they had a very simple requirement. They wanted their developers to be\nable to launch EC2 instances, but they wanted to be able to control costs.",
    "start": "136200",
    "end": "143099"
  },
  {
    "text": "So, they just said I just want them\nto be able to launch instances as long as they're a T1, a T2, or\nan M3.",
    "start": "143100",
    "end": "149900"
  },
  {
    "text": "So, I'm going to walk you through\nthe process of how they attempted to create that policy and then attach it to an IAM user.",
    "start": "149900",
    "end": "157800"
  },
  {
    "text": "Now, as we go through the presentation\nthrough the day, I'm going to change personas,",
    "start": "157800",
    "end": "163900"
  },
  {
    "text": "and I'm going to stay as the administrator in Chrome, and the user's always going to be\nin Firefox,",
    "start": "163900",
    "end": "170700"
  },
  {
    "text": "and that way I don't have to keep\nlogging in and out. And so, right now, I'm logged in\nas the administrator.",
    "start": "170700",
    "end": "176000"
  },
  {
    "text": "For those of you who've not used\nIAM before, you go in here and click users, and\nI have Bob.",
    "start": "176000",
    "end": "184500"
  },
  {
    "text": "I'm sure you've heard about Bob before, and Bob's not attached to any groups. He doesn't have any permissions.",
    "start": "184500",
    "end": "190700"
  },
  {
    "text": "He's got an access key and a password\nand that's about it. So, I want to create a policy for Bob.",
    "start": "190700",
    "end": "196600"
  },
  {
    "text": "And I'm going to go ahead and create a policy. I'm going to use the policy generator because it makes life easier.",
    "start": "196600",
    "end": "202900"
  },
  {
    "text": "And remember, we want them to be\nable to launch instances, but only to certain types. So, first thing I'm going to do here is I'm going to grant access to EC2.",
    "start": "202900",
    "end": "210800"
  },
  {
    "text": "I'm going to give them access to\nall actions and all resources.",
    "start": "210800",
    "end": "216600"
  },
  {
    "text": "I'm going to add that statement. Now, I want to lock it down. So, I'm going to deny, in this case,\naccess to EC2,",
    "start": "216600",
    "end": "225700"
  },
  {
    "text": "but I'm going to limit it to a specific action, which is run instances, which is the action or the API that\nis required",
    "start": "225700",
    "end": "232700"
  },
  {
    "text": "to launch an instance with EC2. I want to put some conditions on\ntop of this.",
    "start": "232700",
    "end": "238500"
  },
  {
    "text": "Specifically, I want to check that the string is not like for an\ninstance type of T1*T2*M3*.",
    "start": "238500",
    "end": "258400"
  },
  {
    "text": "So, I'm going to add that condition. I'm going to add the statement, and the nice thing about the policy generator is it generates the JSON for me.",
    "start": "258400",
    "end": "265600"
  },
  {
    "text": "Alright. So, I don't have to remember. So, that's one small tip. Hopefully a bunch of you have already\ndone that before, and I'm just going to give this a\nname before I forgot.",
    "start": "265600",
    "end": "272300"
  },
  {
    "text": "So, I'll call it Demo1. And there's a few things that I like\nto clean up just around the policy,",
    "start": "272300",
    "end": "277900"
  },
  {
    "text": "especially if I have single item\nlists or arrays. Don't really need the brackets.",
    "start": "277900",
    "end": "283800"
  },
  {
    "text": "So, I'm just going to kill a bunch\nof stuff here just so it's easier on your eyes. By the way, I warned you about not\nbeing able to see in the back.",
    "start": "283800",
    "end": "291000"
  },
  {
    "text": "So, no feedback, oh, I couldn't see\nwhat he was doing.",
    "start": "291000",
    "end": "300600"
  },
  {
    "text": "I could zoom. Let's see. We'll do that. I could zoom a little. I don't know if that helped much.",
    "start": "300600",
    "end": "307300"
  },
  {
    "text": "Alright, keep the comments coming. Real-time feedback appreciated. Now, I left an error in there just\nto kind of show you what happens.",
    "start": "307300",
    "end": "316500"
  },
  {
    "text": "You're going through and it validates and it tells you you had some type\nof JSON error, and I'll steal the show.",
    "start": "316500",
    "end": "321800"
  },
  {
    "text": "I put a comma in there. Now, when you validate the policy\n- oh, wait. Did I put another error in there?",
    "start": "321800",
    "end": "327900"
  },
  {
    "text": "Oh yeah, forgot the comma here too. Okay, so now the policy is valid.",
    "start": "327900",
    "end": "333000"
  },
  {
    "text": "So, this is something that we didn't\nhave a year ago. The other thing I'll show you is that you can use formatting so\nit makes it pretty.",
    "start": "333000",
    "end": "339800"
  },
  {
    "text": "And now, it's a little bit easier. I'm allowing all EC2 actions on all resources, and I'm denying this one action when\nthe instance type",
    "start": "339800",
    "end": "346000"
  },
  {
    "text": "does not match T1, T2, or M3.",
    "start": "346000",
    "end": "352200"
  },
  {
    "text": "Okay, so I'm going to create that policy. I'm going to go back to our buddy, Bob, and I'm going to attach that policy\nand I called in re-Invent.",
    "start": "352200",
    "end": "363000"
  },
  {
    "text": "See, now, that's why I know you can't\nsee anything when you do that.",
    "start": "363000",
    "end": "369400"
  },
  {
    "text": "There we go. Attach the policy, and just to kind of prove it, you can show that this policy is\nattached to them.",
    "start": "369400",
    "end": "376300"
  },
  {
    "text": "So, now, I'm going to switch roles\nover in Firefox now, and I'm Bob. And Bob's going to go over to the\nEC2 console.",
    "start": "376300",
    "end": "387500"
  },
  {
    "text": "He's going to try to launch an instances, and let's look at the fail case first, because we wanted to prevent him from launching anything that wasn't\nof those three instance types.",
    "start": "387500",
    "end": "395300"
  },
  {
    "text": "So, I'm just going to take an M4 here. Review and launch.",
    "start": "395300",
    "end": "401300"
  },
  {
    "text": "Sure, launch. I acknowledge. Boom. Error message, right.",
    "start": "401300",
    "end": "407400"
  },
  {
    "text": "Get this lovely, encoded error message. So, that was expected because we\ndidn't want Bob to be able to launch that instance.",
    "start": "407400",
    "end": "413300"
  },
  {
    "text": "So, let's go back, choose an instance\ntype that's allowed. Let's use the T2 Micro, review and launch.",
    "start": "413300",
    "end": "420699"
  },
  {
    "text": "I'm just going to click through a\nbunch of these things that warn me, yes, I acknowledge, launch. And boom, error message.",
    "start": "420700",
    "end": "429400"
  },
  {
    "text": "So, yeah, I think we'd all agree\nthat that was a fail.",
    "start": "429400",
    "end": "435100"
  },
  {
    "text": "And the reason I show you that is that this is the logical process\nthat people typically go through.",
    "start": "435100",
    "end": "440300"
  },
  {
    "text": "And this was a customer who knew\nwhat they were doing. They were experienced, and probably a bunch of you are saying wait,",
    "start": "440300",
    "end": "445699"
  },
  {
    "text": "why didn't that work? There may be some Ninjas in the room\nwho already know. But it's not enough to just understand",
    "start": "445700",
    "end": "452100"
  },
  {
    "text": "the syntax and the grammar of the language. You have to understand how the authorization model works with the various services,",
    "start": "452100",
    "end": "458000"
  },
  {
    "text": "in this case EC2. And that's what I'm going to hopefully give you guys some insight about today,",
    "start": "458000",
    "end": "463600"
  },
  {
    "text": "and I will show you the success case towards the end of the presentation. Now, because there are some people\nwho are new to policies,",
    "start": "463600",
    "end": "470200"
  },
  {
    "text": "I'm going to try to go through the basics. I'm going to do it as fast as possible just to give us all a baseline.",
    "start": "470200",
    "end": "476699"
  },
  {
    "text": "But the policy language is around\nauthorization. There's just two facets. There's the language, the syntax,\nthe grammar.",
    "start": "476700",
    "end": "483300"
  },
  {
    "text": "And then, there's the important piece, the enforcement, how is it actually\nused by the AWS services",
    "start": "483300",
    "end": "488600"
  },
  {
    "text": "that you want to access or deny access. And that's the piece that is the\nmost important part",
    "start": "488600",
    "end": "494500"
  },
  {
    "text": "of really trying to start mastering\ncreating permissions inside of AWS.",
    "start": "494500",
    "end": "501700"
  },
  {
    "start": "500000",
    "end": "500000"
  },
  {
    "text": "All these policies, as you've already\nseen, are JSON documents. They contain statements. Sometimes, I'll call them permissions.",
    "start": "501700",
    "end": "507900"
  },
  {
    "text": "These permissions follow a certain model. I like to create policies that follow\nthe PARC model.",
    "start": "507900",
    "end": "513500"
  },
  {
    "text": "Stands for Principal, Action, Resource,\nand Condition. There's also an effect.",
    "start": "513500",
    "end": "519099"
  },
  {
    "text": "The effect is simply an allow or a deny. EPARC doesn't really roll off the tongue, so, I just generally say there's\nPARC plus an effect.",
    "start": "519100",
    "end": "528899"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "I want to go through each of the\nfour pieces pretty quickly just so that you know what it is\nyou're looking at.",
    "start": "528900",
    "end": "534300"
  },
  {
    "text": "So, when I say Principal, I really mean it's an actor, right.\nIt's an entity. It's something that is going to be\nallowed or denied",
    "start": "534300",
    "end": "540899"
  },
  {
    "text": "access to a resource. And the way that you indicate these\nin policies is by their ARN.",
    "start": "540900",
    "end": "546700"
  },
  {
    "text": "If you never knew what an ARN stands for, it's just the Amazon Resource Name, right. There's going to be two types of\npolicies that you encounter,",
    "start": "546700",
    "end": "552900"
  },
  {
    "text": "policies that are attached to users,\ngroups, and roles, and policies that are attached to\nthe resources, like a bucket.",
    "start": "552900",
    "end": "559800"
  },
  {
    "text": "Those that are the user groups and roles, those are IAM policies. Now, when you create an IAM policy, we know who the principal is.",
    "start": "559800",
    "end": "567300"
  },
  {
    "text": "It's attached to the user, it's attached\nto the group, it's attached to the role. However, if it's a resource-based policy,",
    "start": "567300",
    "end": "573300"
  },
  {
    "text": "you're going to have to specify who\nthe principal is. And so, here, I'll give you a few\ncommon principals.",
    "start": "573300",
    "end": "578900"
  },
  {
    "text": "So, let's say that you have an object\nin a bucket like an image or something and you want to share it with the world because it's part of a website,",
    "start": "578900",
    "end": "584300"
  },
  {
    "text": "then you can use the anonymous or\neveryone has access \"*.*\".",
    "start": "584300",
    "end": "590600"
  },
  {
    "text": "You may have multiple AWS accounts. You may need to share data with other\nAWS customers.",
    "start": "590600",
    "end": "595900"
  },
  {
    "text": "In that case, you would specify the\naccount ARN. You can either put the 12-digit code, or you can put in the full root ARN.",
    "start": "595900",
    "end": "601400"
  },
  {
    "text": "They both work the same. Of course, I prefer that you use IAM users, since I work in Identity and Access Management",
    "start": "601400",
    "end": "608200"
  },
  {
    "text": "and you can scope down those with\npermissions. And so, this is what a user ARN looks like. And of course, you may be granting access",
    "start": "608200",
    "end": "615400"
  },
  {
    "text": "to resources in your account as part\nof an application maybe using Cognito or something",
    "start": "615400",
    "end": "620900"
  },
  {
    "text": "or using a Facebook user or a Google user or something of that matter,",
    "start": "620900",
    "end": "626500"
  },
  {
    "text": "and this is what those federated\nusers would look like. Of course, we have IAM roles. IAM roles look a lot like the IAM user ARN,",
    "start": "626500",
    "end": "634199"
  },
  {
    "text": "except it's a role. And then last but not least are service ARNs. People tend not to know about the\nservice ARNs.",
    "start": "634200",
    "end": "639800"
  },
  {
    "text": "So, how many of you have launched\nan EC2 instance with a role? Everybody, right? Yeah. Okay.",
    "start": "639800",
    "end": "645000"
  },
  {
    "text": "When you do that, you are granting access to the EC2 team to assume that role.",
    "start": "645000",
    "end": "650500"
  },
  {
    "text": "And so, there is actually a service principal for each of the services, and for EC2, it's EC2.amazonaws.com.",
    "start": "650500",
    "end": "657100"
  },
  {
    "text": "Now, most of the tooling does that for you, but that's what's happening behind\nthe scenes. And of course, these are dummy numbers.",
    "start": "657100",
    "end": "663500"
  },
  {
    "text": "So, you want to replace these with\nyour 12-digit account ID if you want to use any of these in\nan actual policy.",
    "start": "663500",
    "end": "670800"
  },
  {
    "start": "670000",
    "end": "670000"
  },
  {
    "text": "Now, action is what you want that\nprincipal to be able to do, and I apologize in advance.",
    "start": "670800",
    "end": "676100"
  },
  {
    "text": "I'll probably interchangeably say\naction and API just because there's pretty much\na 99% correlation between the two.",
    "start": "676100",
    "end": "682800"
  },
  {
    "text": "However, there are some actions like\nIAM passrole where there is no equivalent API. But for the purpose of this presentation,",
    "start": "682800",
    "end": "689800"
  },
  {
    "text": "I will say action and API interchangeably. Now, if you wanted to get a - I don't know -",
    "start": "689800",
    "end": "696100"
  },
  {
    "text": "there's over 2,000 of these actions and I haven't memorized them all. So, you can get them from the tooling like the policy generator like I did.",
    "start": "696100",
    "end": "703000"
  },
  {
    "text": "You can look in the docs. They're all there. Or, you can use the policy simulator, which we'll take a look at.",
    "start": "703000",
    "end": "708899"
  },
  {
    "text": "Now, all statements have to have\nan Action or a NotAction. And I haven't talked about Not's yet.",
    "start": "708900",
    "end": "714200"
  },
  {
    "text": "You can have NotPrincipals, NotActions,\nNotResources. NotActions are the most interesting one. So, I'll spend an entire slide on it.",
    "start": "714200",
    "end": "721100"
  },
  {
    "text": "But here's what some of the actions look like. Hopefully you've used some of these before. This is just EC2, IAM, and S3.",
    "start": "721100",
    "end": "727800"
  },
  {
    "text": "A couple more interesting things\nabout the languages, you can specify more than one action. And when you do, you're creating an array",
    "start": "727800",
    "end": "733400"
  },
  {
    "text": "and you need to encapsulate that\nin square brackets. Now, to make it easier, we also allow wildcards.",
    "start": "733400",
    "end": "740700"
  },
  {
    "text": "So, we have two of them. One is the asterisk. This is the multi-character wildcard, and we have the question mark,",
    "start": "740700",
    "end": "746500"
  },
  {
    "text": "which is a single character wildcard. And this will allow you to create\ntighter policies that don't have big, long lists.",
    "start": "746500",
    "end": "753100"
  },
  {
    "text": "So, for example here by using iam:*AccessKey*, what I am doing is I'm granting or\ndenying access",
    "start": "753100",
    "end": "758800"
  },
  {
    "text": "to create, delete, list, or update AccessKey. And so, this is a way to create tighter policies,",
    "start": "758800",
    "end": "764600"
  },
  {
    "text": "because as anybody who's created policies, you've probably hit a policy limit.",
    "start": "764600",
    "end": "769900"
  },
  {
    "text": "And so, size does matter. You've got to laugh. It's not going\nto get better.",
    "start": "769900",
    "end": "776199"
  },
  {
    "text": "So, let's talk about NotAction, because a lot of customers I talk\nto are a little confused",
    "start": "776200",
    "end": "782399"
  },
  {
    "text": "about what I mean by that. So, when you're using Not, especially\nwith an Action, what you're doing is you're saying here's an exception to a list of\nthings, right.",
    "start": "782400",
    "end": "791700"
  },
  {
    "text": "And this, once again, is going to help you create shorter, tighter policies. So, let's say, for example,",
    "start": "791700",
    "end": "796800"
  },
  {
    "text": "you want to grant the user access\nto everything in AWS, but you don't want them to have administrative\nprivileges.",
    "start": "796800",
    "end": "804000"
  },
  {
    "text": "So, you want to exclude \"iam*\". You could create a very short policy like this.",
    "start": "804000",
    "end": "810700"
  },
  {
    "text": "So, the effect is allow. NotAction: \"iam*\". So, give me everything that is not\nIAM on every resource.",
    "start": "810700",
    "end": "819600"
  },
  {
    "text": "Or, you could do it this way. They're both pretty short. The other one grants access to everything,",
    "start": "819600",
    "end": "827100"
  },
  {
    "text": "and then denies, takes away, the\nability to call \"iam*\". So, here's a question: is there a\ndifference?",
    "start": "827100",
    "end": "835400"
  },
  {
    "text": "Yes? No. Yes, the yes is right. Here's the subtle difference.",
    "start": "835400",
    "end": "840500"
  },
  {
    "text": "So, a lot of people think NotAction\nis the equivalent of a deny, and it's an exclusion, and it's a\nsubtle difference, right.",
    "start": "840500",
    "end": "847000"
  },
  {
    "text": "So, if I had this policy attached to a user and then I mistakenly added them\nto the administrator group,",
    "start": "847000",
    "end": "852800"
  },
  {
    "text": "they would get admin rights. However, if I made the same mistake with the policy on the right,",
    "start": "852800",
    "end": "859000"
  },
  {
    "text": "the deny would trump the allow. And so, if you absolutely wanted\nto deny access to a user,",
    "start": "859000",
    "end": "866300"
  },
  {
    "text": "you'd either use the policy on my\nright, as I'm looking at it,",
    "start": "866300",
    "end": "873200"
  },
  {
    "text": "or you'd do a combination of the two. And so, there is a difference.",
    "start": "873200",
    "end": "878500"
  },
  {
    "start": "877000",
    "end": "877000"
  },
  {
    "text": "So, resources, resources are easy. These are the object or objects that you want to allow the actor\nto request.",
    "start": "878500",
    "end": "886100"
  },
  {
    "text": "And your statement's always going to include a Resource or a NotResource. And so, here's some basic ones for\na bucket, a queue.",
    "start": "886100",
    "end": "892600"
  },
  {
    "text": "I'll give you an example of a list\nof DynamoDB tables because they're really big. And the last one's interesting.",
    "start": "892600",
    "end": "899000"
  },
  {
    "text": "I'll just point it out here. Customers ask me this all the time. How do I limit access to a specific region?",
    "start": "899000",
    "end": "904500"
  },
  {
    "text": "And so, you can see here they may say oh, I only want to operate in us-east, and in there, I want access to all instances.",
    "start": "904500",
    "end": "910600"
  },
  {
    "text": "And so, this is the resource that\nyou would specify in there to lock them to a certain region. Of course, say you wanted to run\nin us-east and us-west,",
    "start": "910600",
    "end": "917800"
  },
  {
    "text": "you would just make a list of those. Someone's doing well. They're killing it.",
    "start": "917800",
    "end": "926700"
  },
  {
    "text": "The last part, we got to be a little\nbit competitive, right? Can we get some clapping, and just simultaneously clap for\nsome reason.",
    "start": "926700",
    "end": "940300"
  },
  {
    "text": "Take that next door. Alright. So, the condition - presentation's\ngoing sideways.",
    "start": "940300",
    "end": "947900"
  },
  {
    "text": "Conditions. Conditions are important because they allow you to add this\nadditional criteria.",
    "start": "947900",
    "end": "953899"
  },
  {
    "text": "Now, it's optional criteria, but\nin most cases, you need these additional conditions  in order to really make the policy\ndo what you want it to do.",
    "start": "953900",
    "end": "963500"
  },
  {
    "text": "Conditions can be a little bit tricky\nto understand. So, in the simplest case, you can\nhave a single condition, but you can actually add multiple\nconditions to the statement.",
    "start": "963500",
    "end": "972000"
  },
  {
    "text": "And so, I have here Condition 1 and\nCondition 2, and then those conditions can have\nmultiple values.",
    "start": "972000",
    "end": "978800"
  },
  {
    "text": "So, when the policy starts to look like this, how do you evaluate it? So, the key here is if you have a\nsingle condition,",
    "start": "978800",
    "end": "988000"
  },
  {
    "text": "and that condition includes multiple values like the Condition 1 does,",
    "start": "988000",
    "end": "993400"
  },
  {
    "text": "those conditions are evaluated using\nlogical OR. So, that one single statement says\nthat Key1",
    "start": "993400",
    "end": "998899"
  },
  {
    "text": "must be one of those three values. However, you can also have multiple conditions",
    "start": "998900",
    "end": "1006500"
  },
  {
    "text": "or multiple keys in a single condition. And in those cases, the conditions\nare evaluated using logical AND.",
    "start": "1006500",
    "end": "1013600"
  },
  {
    "text": "So, why didn't we just put operators\nin there for AND and OR? I don't know. This pre-dates me.",
    "start": "1013600",
    "end": "1019300"
  },
  {
    "text": "But this is how it's evaluated. So, the way that this policy reads is the condition will be true if\nKey1 is any of those three values,",
    "start": "1019300",
    "end": "1027799"
  },
  {
    "text": "AND Key2 is any of those two values, and Key3 is that single value. If any of those things are false,\nthe entire policy -",
    "start": "1027800",
    "end": "1034299"
  },
  {
    "text": "or I should say the entire statement\nfor that policy is treated as false. Now, if that was completely confusing,",
    "start": "1034300",
    "end": "1040500"
  },
  {
    "start": "1040000",
    "end": "1040000"
  },
  {
    "text": "let's take a look at a real example. So, let's say that we wanted to have\na condition",
    "start": "1040500",
    "end": "1047500"
  },
  {
    "text": "that had to be October 8th, which\ntoday, it is. It has to be before 3:00 PM, which it is.",
    "start": "1047500",
    "end": "1056100"
  },
  {
    "text": "And let's just assume we're coming from one of these two sider blocks. The other condition is the time has\nto be after noon,",
    "start": "1056100",
    "end": "1062400"
  },
  {
    "text": "and I haven't gone on that long. So, this policy would actually fail\none of the conditions.",
    "start": "1062400",
    "end": "1069000"
  },
  {
    "text": "Therefore, the entire policy or the\nentire statement attached to this condition would be false.",
    "start": "1069000",
    "end": "1075600"
  },
  {
    "text": "So, hopefully that clears up conditions a bit. Policy variables.",
    "start": "1075600",
    "end": "1080700"
  },
  {
    "text": "We introduced policy variables a\ncouple of years ago, and they really are life savers in terms of creating tighter, smaller policies.",
    "start": "1080700",
    "end": "1089000"
  },
  {
    "start": "1084000",
    "end": "1084000"
  },
  {
    "text": "Before policy variables, you had\nto create policies and you had to put static strings in there,",
    "start": "1089000",
    "end": "1094900"
  },
  {
    "text": "and if you wanted one for Bob and for Sally, you had to create a copy of it and\nmaintain them separately.",
    "start": "1094900",
    "end": "1100300"
  },
  {
    "text": "And so, you really want to start\nusing variables if you're not using them in there. And they're based off of existing keys.",
    "start": "1100300",
    "end": "1106700"
  },
  {
    "text": "So, we just looked at SourceIP and\nCurrentTime. But if you're using an IAM user, there's keys in there that you can\nuse for variables as well.",
    "start": "1106700",
    "end": "1114200"
  },
  {
    "text": "There's username, userid, principaltype. Of course, if you're using Federation,\neither via Cognito,",
    "start": "1114200",
    "end": "1120500"
  },
  {
    "text": "this is what the Facebook and the\nAmazon IDs look for, and if you're using the Security\nAssertion Markup or SAML,",
    "start": "1120500",
    "end": "1126800"
  },
  {
    "text": "you're going to have the audience\nand the issuer. Now, all these variables are defined by us.",
    "start": "1126800",
    "end": "1132200"
  },
  {
    "text": "So, you can't create your own variable. And there's way too many for me to\nlist in this presentation.",
    "start": "1132200",
    "end": "1137900"
  },
  {
    "text": "So, if you want to see the list of them, you're going to have to go the service-specific\ndocumentation and look at the variables that are\navailable for that service.",
    "start": "1137900",
    "end": "1145600"
  },
  {
    "text": "And there's a couple use cases here\nthat I'll go through to kind of demonstrate how you can\nuse these variables.",
    "start": "1145600",
    "end": "1152799"
  },
  {
    "start": "1152000",
    "end": "1152000"
  },
  {
    "text": "So, there's a couple things I want\nto point out. The first one is that when you create\na policy with a variable,",
    "start": "1152800",
    "end": "1158600"
  },
  {
    "text": "you have to have this version. Now, if you're going through the\npolicy generator now, we stuff it in there for you automatically.",
    "start": "1158600",
    "end": "1165000"
  },
  {
    "text": "If you've been a customer of ours\nfor a few years and you have older policies, you probably don't have that version in there.",
    "start": "1165000",
    "end": "1171200"
  },
  {
    "text": "And so, if you're anything like me, you go and you create a policy, you forget to put that in there,\nit doesn't work. And you go ah, it's broken.",
    "start": "1171200",
    "end": "1177799"
  },
  {
    "text": "I did this over and over when we\nwere building this feature, and all the developers would come\nand smack me on the head and say you didn't put the version in there,",
    "start": "1177800",
    "end": "1183400"
  },
  {
    "text": "and of course, it works. So, what happens if you don't put\nthe version? It treats all the variables are literals.",
    "start": "1183400",
    "end": "1189100"
  },
  {
    "text": "IE, policy's not going to do what\nyou think it's going to do. Now, I'm using the IAM username.",
    "start": "1189100",
    "end": "1195200"
  },
  {
    "text": "So, if this was Bob, this variable\nwould resolve to Bob. And you can use those variables in conditions",
    "start": "1195200",
    "end": "1201799"
  },
  {
    "text": "and you can use those variables as\npart of a resource ARN as well.",
    "start": "1201800",
    "end": "1209200"
  },
  {
    "text": "A little bit on managing policies. So, as I mentioned, we have IAM policies and we also have Resource-based policies.",
    "start": "1209200",
    "end": "1215900"
  },
  {
    "text": "And as you dig into IAM policies, there's two types or two ways to\nmanage them.",
    "start": "1215900",
    "end": "1221800"
  },
  {
    "start": "1216000",
    "end": "1216000"
  },
  {
    "text": "I like to refer to this as the older\nway and the newer way. So, earlier this year, we introduced something called managed policies.",
    "start": "1221800",
    "end": "1228800"
  },
  {
    "text": "And if you haven't taken a look at\nmanaged policies, after you're done here, if you have\nyour laptop open,",
    "start": "1228800",
    "end": "1234100"
  },
  {
    "text": "I encourage you to take a look at these. These are much better over the previous inline policies\nthat we had.",
    "start": "1234100",
    "end": "1240800"
  },
  {
    "text": "When you used a managed policy, you create a policy once, You can attach it to users, groups, and roles.",
    "start": "1240800",
    "end": "1246500"
  },
  {
    "text": "And if you want to update that policy, you update it one time. IE, you set it and forget it, and you don't have to do the copy\nand pasting",
    "start": "1246500",
    "end": "1253600"
  },
  {
    "text": "from users to groups that you had\nto do in the past. We also introduced AWS managed policies.",
    "start": "1253600",
    "end": "1259399"
  },
  {
    "text": "A good example of that is the reader policy. So, as AWS introduces new services, new APIs,",
    "start": "1259400",
    "end": "1265299"
  },
  {
    "text": "as we occasionally do, if you had an operator group that\nneeded access",
    "start": "1265300",
    "end": "1272000"
  },
  {
    "text": "to all those immutable APIs, read, describe, list, get, whatever, you would have to keep adding those APIs",
    "start": "1272000",
    "end": "1277500"
  },
  {
    "text": "and keeping up with us as we release things. If you instead attach the reader\npolicy from AWS,",
    "start": "1277500",
    "end": "1283600"
  },
  {
    "text": "we do all the maintenance. You set it one time. We'll continue to add all those APIs and there's nothing you need to do.",
    "start": "1283600",
    "end": "1289400"
  },
  {
    "text": "And there's a whole set of managed\npolicies that we provide. Of course, you can create your own\npolicies that you create.",
    "start": "1289400",
    "end": "1296200"
  },
  {
    "text": "Those policies are limited to 5K in size, and you can also version those policies.",
    "start": "1296200",
    "end": "1303200"
  },
  {
    "text": "So, if you create a policy and it's working and then you go and change it, and of course, you broke something, you can do roll back on that as well.",
    "start": "1303200",
    "end": "1310100"
  },
  {
    "text": "You can attach 10 managed policies\nto each user, group, and role. And the nice thing about it is you can put authorization around\nthese managed policies as well.",
    "start": "1310100",
    "end": "1317700"
  },
  {
    "text": "So, one of the scenarios we're going to look at is I want to create a limited admin who can create users and do all that\ngreat stuff,",
    "start": "1317700",
    "end": "1323000"
  },
  {
    "text": "but they can only set certain permissions. Managed policies enable that. So, we also support inline policies.",
    "start": "1323000",
    "end": "1330299"
  },
  {
    "text": "Easy way to think about inline policies is it doesn't support any of that\nstuff in managed policies. You have to copy and paste every policy",
    "start": "1330300",
    "end": "1337700"
  },
  {
    "text": "to the user, group, and role. And there's different size limits based on whether you're putting the policy",
    "start": "1337700",
    "end": "1343600"
  },
  {
    "text": "on the user, the group, or role. Now, there's some cases like, hey, just want to test something quick.",
    "start": "1343600",
    "end": "1348700"
  },
  {
    "text": "An inline policy is quick and simple. But, for the most part, if you haven't taken a look at managed policies,",
    "start": "1348700",
    "end": "1354500"
  },
  {
    "text": "I encourage you to create all your\nnew policies as managed policies and then, as you need to,",
    "start": "1354500",
    "end": "1360200"
  },
  {
    "text": "migrate your existing inline policies as well. And those are all for IAM policies",
    "start": "1360200",
    "end": "1366200"
  },
  {
    "start": "1363000",
    "end": "1363000"
  },
  {
    "text": "and those live with the user, groups, and roles. There's a whole set of other policies\ncalled resource policies that live with the resource itself.",
    "start": "1366200",
    "end": "1374300"
  },
  {
    "text": "A good example of those are S3, Glacier,\nSNS, and SQS, who have bucket, vault, topic, and\nqueue policies.",
    "start": "1374300",
    "end": "1381800"
  },
  {
    "text": "And the major difference here is\nyou need to specify the principal, because in this case, we don't know\nwho you're granting access to.",
    "start": "1381800",
    "end": "1388400"
  },
  {
    "text": "So, there has to be an actor in there. In this case here, we're using the AWS root account\n\"111122223333\".",
    "start": "1388400",
    "end": "1398600"
  },
  {
    "text": "And it's a good reminder here. I just talked about all the benefits\nof the managed policies. One downside is you can't use managed policies",
    "start": "1398600",
    "end": "1406500"
  },
  {
    "text": "with resource-based policies. So, if you're creating a bucket policy, that policy is going to live with\nthe bucket,",
    "start": "1406500",
    "end": "1413100"
  },
  {
    "text": "which sort of makes sense because\nit only applies to that bucket. But just a good thing to point out here.",
    "start": "1413100",
    "end": "1421500"
  },
  {
    "text": "Okay. So, I've gone on and on, and let's look at all those examples\nthat I promised.",
    "start": "1421500",
    "end": "1427100"
  },
  {
    "text": "Specifically, we're going to look\nat S3, IAM, and EC2. So, the first one that I get asked\na lot about",
    "start": "1427100",
    "end": "1433300"
  },
  {
    "text": "is creating a home directory using\nS3. So, a lot of customers want to be able",
    "start": "1433300",
    "end": "1440200"
  },
  {
    "text": "to allow their end users to use S3 sort of as a file storage service,\nkind of like document storage.",
    "start": "1440200",
    "end": "1449900"
  },
  {
    "text": "But they may have hundreds, thousands of users, and of course, you're limited to the number of buckets you can create.",
    "start": "1449900",
    "end": "1455600"
  },
  {
    "text": "So, you can't create a bucket per user. So, what they want to do is use a\nsingle bucket and then specify a folder,",
    "start": "1455600",
    "end": "1461300"
  },
  {
    "text": "which is actually a prefix in S3\nterminology, and allow the user to log in to the\nAWS management console,",
    "start": "1461300",
    "end": "1469200"
  },
  {
    "text": "go to that bucket, and only have\naccess to that specific prefix.",
    "start": "1469200",
    "end": "1474299"
  },
  {
    "text": "So, let's take a look at that. So, the first thing I'm going to do",
    "start": "1474300",
    "end": "1480299"
  },
  {
    "text": "is make sure I attach this policy from Bob. And this time, I'll go and add him to a group",
    "start": "1480300",
    "end": "1485800"
  },
  {
    "text": "because I created a bunch of re-Invent groups. It's kind of like one of those cooking shows where you have it half baked.",
    "start": "1485800",
    "end": "1491799"
  },
  {
    "text": "So, I'm going to give him access to the re-Invent S3 Home_Folders group",
    "start": "1491800",
    "end": "1503700"
  },
  {
    "text": "and now he's a member of that group, and there's the policy. Don't try to see it here. I'll show it in a slide and walk you",
    "start": "1503700",
    "end": "1509900"
  },
  {
    "text": "step-by-step what it's actually doing. And now, before I added him to the policy,",
    "start": "1509900",
    "end": "1515700"
  },
  {
    "text": "Bob experience was access denied, right? So, I'm going to refresh now because\nI've applied that policy.",
    "start": "1515700",
    "end": "1526799"
  },
  {
    "text": "Let Firefox do its thing.",
    "start": "1526800",
    "end": "1532700"
  },
  {
    "text": "Okay, so I'll pause here for a second. So, this is one of the things if you're trying to use the S3 console\nas an end user tool,",
    "start": "1532700",
    "end": "1540000"
  },
  {
    "text": "they're going to see all the buckets. This is just the way the tool works. So, a lot of people say hey, can\nI hide those buckets.",
    "start": "1540000",
    "end": "1545200"
  },
  {
    "text": "Short answer, no. But they can't get into it. So, if Bob tries to get into my documents folder,",
    "start": "1545200",
    "end": "1551500"
  },
  {
    "text": "he's going to get sorry, you don't have permissions to view\nthis bucket. However, he can go into the Test-Bucket",
    "start": "1551500",
    "end": "1557700"
  },
  {
    "text": "which is what I granted him access to. He cannot get into the finance folder.",
    "start": "1557700",
    "end": "1564000"
  },
  {
    "text": "He can get into his home folder. Can't get into Craig's folder. He can get into his folder where\nhe keeps images of my daughter.",
    "start": "1564000",
    "end": "1578799"
  },
  {
    "text": "So, let's just assume Bob is a family\nfriend and this is cool. It's not like the creepy scenario.",
    "start": "1578800",
    "end": "1586500"
  },
  {
    "text": "And so, you can see that Bob can\nnow store pictures of my kid in that Test-Bucket.",
    "start": "1586500",
    "end": "1593300"
  },
  {
    "text": "So, that was a pretty easy one. But, let's break down the policy, okay, and look step by step what's actually\nhappening there.",
    "start": "1593300",
    "end": "1600000"
  },
  {
    "text": "So, I'm just going to reiterate. You need the version in order for\nthe variables to work because I'm using variables in it.",
    "start": "1600000",
    "end": "1607900"
  },
  {
    "text": "Now, the first two statements are\nreally about the necessary permissions to get\nin through the S3 console.",
    "start": "1607900",
    "end": "1616400"
  },
  {
    "text": "So, if you look at the top here, it says ListAllMyBuckets and GetBucketLocation. These are the first two APIs that\nthe S3 console asks for.",
    "start": "1616400",
    "end": "1624299"
  },
  {
    "text": "It does this automatically. There's no way to stop it. And so, you must grant the user permissions to do that",
    "start": "1624300",
    "end": "1630200"
  },
  {
    "text": "if you want to use the console. And what you're basically saying is you can see a list of all the\nbucket names.",
    "start": "1630200",
    "end": "1636799"
  },
  {
    "text": "Now, if you don't want that, there's a lot of 3rd party tools out there that you might want to consider that would just give him access to\na single bucket.",
    "start": "1636800",
    "end": "1644200"
  },
  {
    "text": "And the next thing I'm going to point out here is that I'm giving access to the\n\"s3:ListBucket\" API. Now, the ListBucket API is an interesting one.",
    "start": "1644200",
    "end": "1651299"
  },
  {
    "text": "If you've actually called the API, you know that it takes a target of\nthe bucket ARN",
    "start": "1651300",
    "end": "1657900"
  },
  {
    "text": "and then it filters based on a prefix. And so, what I'm saying here is you\ncan call ListBucket",
    "start": "1657900",
    "end": "1663900"
  },
  {
    "text": "on this bucket when the prefix matches exactly",
    "start": "1663900",
    "end": "1669300"
  },
  {
    "text": "[\"\",home/\"] with a delimiter of \"/\", which is the default delimiter for\nthe S3 console.",
    "start": "1669300",
    "end": "1678500"
  },
  {
    "text": "It took me a day to figure that out. It's in the documentation now, but it took me a day to figure that one out.",
    "start": "1678500",
    "end": "1685100"
  },
  {
    "text": "The next one is what's going to allow you to list all the objects in that prefix\nor that folder or what you can think of as sub folders.",
    "start": "1685100",
    "end": "1691700"
  },
  {
    "text": "And once again, this is ListBucket\non the bucket ARN, but I need to use a different condition.",
    "start": "1691700",
    "end": "1698100"
  },
  {
    "text": "And so, we know that when you mix\nand match conditions, it's a set of ANDs or ORs.",
    "start": "1698100",
    "end": "1703399"
  },
  {
    "text": "And so, I created this as a separate statement so that here I can use a \"StringLike\" as opposed to a \"StringEquals\",",
    "start": "1703400",
    "end": "1709300"
  },
  {
    "text": "and that's because I'm going to use Bob, which is going to be variable. We don't know what it's going to\nresolve to,",
    "start": "1709300",
    "end": "1715700"
  },
  {
    "text": "and I'm using a wildcard. And so, you have to use \"StringLike\"\ninstead of \"StringEquals\".",
    "start": "1715700",
    "end": "1720899"
  },
  {
    "text": "Last but not least, I need to be able to call all the\nother S3 actions, right,",
    "start": "1720900",
    "end": "1726100"
  },
  {
    "text": "GetObject, PutObject, DeleteObject. And those are interesting APIs because they don't take a target\nof a bucket.",
    "start": "1726100",
    "end": "1733500"
  },
  {
    "text": "They take a target of the full resource ARN. And so, that's why you have to break this up",
    "start": "1733500",
    "end": "1739100"
  },
  {
    "text": "into multiple statements here. And this last one basically says you can have access to the root of\nthat folder",
    "start": "1739100",
    "end": "1746000"
  },
  {
    "text": "or you can have access to all the subfolders or all the objects in that folder. And you guys who are S3 experts,",
    "start": "1746000",
    "end": "1753500"
  },
  {
    "text": "what I'm really saying is you can\nget all the objects in that bucket that match a certain\nprefix filter.",
    "start": "1753500",
    "end": "1760900"
  },
  {
    "text": "Okay. So, that's how you grant access\nto a Home_Folder in S3.",
    "start": "1760900",
    "end": "1767600"
  },
  {
    "text": "And what about creating a limited\nIAM administrator? I get this one quite a bit, too. We wrote a blog post about it, and at the end, I have some links to those.",
    "start": "1767600",
    "end": "1775000"
  },
  {
    "start": "1768000",
    "end": "1768000"
  },
  {
    "text": "So, imagine you have a project and you want to designate one of the users. Let's say his name is Bob.",
    "start": "1775000",
    "end": "1781600"
  },
  {
    "text": "And Bob needs to be able to create\nother IAM users, create keys, set passwords, do all\nthat stuff.",
    "start": "1781600",
    "end": "1788400"
  },
  {
    "text": "But, you don't want Bob creating\nreal administrators with full rights.",
    "start": "1788400",
    "end": "1793600"
  },
  {
    "text": "You only want Bob to be able to assign\npermissions that are specific for your project. This is where managed policies come in.",
    "start": "1793600",
    "end": "1801000"
  },
  {
    "text": "And so, what we're going to do is we're going to create a group\nof policies that use variables, and I'm going to grant Bob access\nto a couple policies.",
    "start": "1801000",
    "end": "1810900"
  },
  {
    "text": "And, he's going to have the ability to go into the IAM console and create users and he can only set permissions using\nthose two policies.",
    "start": "1810900",
    "end": "1820200"
  },
  {
    "text": "So, once again, I'll switch over here and I'm going to remove him from\nthis group ",
    "start": "1820200",
    "end": "1826600"
  },
  {
    "text": "and I'm going to add him to another group.",
    "start": "1826600",
    "end": "1833200"
  },
  {
    "text": "And that was the Limited Admin group.\nGood naming.",
    "start": "1833200",
    "end": "1841899"
  },
  {
    "text": "And now, you can see here by adding\nhim to that group, he has actually got access to two policies. One of them is a set of permissions",
    "start": "1841900",
    "end": "1848500"
  },
  {
    "text": "that give him access to the IAM console. So, just like the S3 console, there's a number of APIs that it\ncalls automatically",
    "start": "1848500",
    "end": "1857200"
  },
  {
    "text": "that they have to access to or they're going to get access denied even getting into the console. The other policy,",
    "start": "1857200",
    "end": "1863600"
  },
  {
    "text": "this one grants him all the things\nhe needs to do, create users, set passwords, and then down here, set the policies.",
    "start": "1863600",
    "end": "1870399"
  },
  {
    "text": "I will show you these in PowerPoint so that a human can read them. And so, now Bob has these rights,",
    "start": "1870400",
    "end": "1876600"
  },
  {
    "text": "and if I switch over to Bob, now\nhe can go to the IAM console. Now, keep in mind, Bob doesn't have\nfull IAM rights.",
    "start": "1876600",
    "end": "1883899"
  },
  {
    "text": "So, he's going to see some access denied. But, what he can do is he can go\nto the users,",
    "start": "1883900",
    "end": "1889900"
  },
  {
    "text": "he can create a new user. Let's call that new user Craig.",
    "start": "1889900",
    "end": "1896600"
  },
  {
    "text": "And I'll create and I could show\nyou the security credentials, but I'm not going to do that.",
    "start": "1896600",
    "end": "1902400"
  },
  {
    "text": "Let's assume that I download these, and then Craig's created.",
    "start": "1902400",
    "end": "1908700"
  },
  {
    "text": "Craig's going to need a password. So, I can assign a password.",
    "start": "1908700",
    "end": "1914900"
  },
  {
    "text": "No, I'm not typing password. Now, he's got a password,",
    "start": "1914900",
    "end": "1921100"
  },
  {
    "text": "and I want to be able to attach permissions. So, I'm going to attach a policy, and you couldn't see it in the policy,",
    "start": "1921100",
    "end": "1927100"
  },
  {
    "text": "but what I did is I gave him access to the DynamoDBFullAccess, and this\nis an AWS managed policy.",
    "start": "1927100",
    "end": "1932700"
  },
  {
    "text": "You can tell because it has the little\norange box there. So, he's able to attach that policy.",
    "start": "1932700",
    "end": "1938899"
  },
  {
    "text": "And then, I also gave him access\nto that S3_Home_Folder.",
    "start": "1938900",
    "end": "1944500"
  },
  {
    "text": "So, I attach that one, and you can see it. Now, if Bob tries to be sneaky and he's like I'm just going to create\nan administrator account,",
    "start": "1944500",
    "end": "1951600"
  },
  {
    "text": "try to attach that policy, doesn't work. So you see, he can only do what we defined.",
    "start": "1951600",
    "end": "1957600"
  },
  {
    "text": "This wasn't possible before we had\nmanaged policies.",
    "start": "1957600",
    "end": "1962799"
  },
  {
    "text": "So now, let me log out and I'm going\nto sign back in,",
    "start": "1962800",
    "end": "1974200"
  },
  {
    "text": "this time as Craig.",
    "start": "1974200",
    "end": "1980000"
  },
  {
    "text": "Close a bunch of things, and I gave\nhim access to DynamoDB.",
    "start": "1980000",
    "end": "1985100"
  },
  {
    "text": "I also gave him access to S3. So, if I go over here,",
    "start": "1985100",
    "end": "1990200"
  },
  {
    "text": "you can see that he indeed has access\nto see those tables.",
    "start": "1990200",
    "end": "1996100"
  },
  {
    "text": "And if I were to select one, he could\nexplore the table. Not a whole lot in there, just proving that the permissions work.",
    "start": "1996100",
    "end": "2002800"
  },
  {
    "text": "Of course, he's got the same experience\nin S3 that Bob does where he can go into the Test-Bucket.",
    "start": "2002800",
    "end": "2008800"
  },
  {
    "text": "He can go into the Home_Folder. He can't see pictures of my kid. However, he can go into his folder",
    "start": "2008800",
    "end": "2014600"
  },
  {
    "text": "where there is really nothing to see. So, just kind of proving that he\ncould create",
    "start": "2014600",
    "end": "2020600"
  },
  {
    "text": "these limited administrative roles.",
    "start": "2020600",
    "end": "2025900"
  },
  {
    "text": "And I'm going to quickly sign back in as Bob, because he's not done.",
    "start": "2025900",
    "end": "2033300"
  },
  {
    "text": "Okay. So, let me get to - no, I'll\nwalk through this policy, then I'll get to one of my favorite parts.",
    "start": "2033300",
    "end": "2039000"
  },
  {
    "text": "So, once again, you have to have\nthe version up there. Here's the set of permissions that\nallows creating that user,",
    "start": "2039000",
    "end": "2045500"
  },
  {
    "text": "manage the keys, setting the passwords. These are pretty straightforward. You just grant the IAM actions for those.",
    "start": "2045500",
    "end": "2052500"
  },
  {
    "text": "About the only one that's maybe a\nlittle bit confusing is CreateLoginProfile and DeleteLoginProfile. That's CreatePassword and DeletePassword.",
    "start": "2052500",
    "end": "2060099"
  },
  {
    "text": "The rest of them are pretty straightforward. The second part of it down here is where we grant the ability to\nattach or detach a policy,",
    "start": "2060100",
    "end": "2067500"
  },
  {
    "text": "specifically, he can only attach\nthe re-Invent policy for the S3_Home_Folder that I created",
    "start": "2067500",
    "end": "2074300"
  },
  {
    "text": "or the policy for DynamoDBFUllAccess. And we did a complete write up. Here's the short URL if you want\nto read about that",
    "start": "2074300",
    "end": "2080899"
  },
  {
    "text": "on the AWS security blog. Now, as I mentioned, there is a set of rights",
    "start": "2080900",
    "end": "2087099"
  },
  {
    "text": "that you also have to grant to the user just to get into the IAM console\nin the first place.",
    "start": "2087100",
    "end": "2093500"
  },
  {
    "text": "So, if you want to see that list of users, they have to have access to all of the users and call ListUser.",
    "start": "2093500",
    "end": "2100000"
  },
  {
    "text": "The other permission you need to do is it fills out that table with some\ninformation around who the user is, whether they\nhave a password,",
    "start": "2100000",
    "end": "2107500"
  },
  {
    "text": "what groups they're a member of,\nif they have keys. And so, if you want that table to\ncompletely fill out, you'll have to grant access to each of those",
    "start": "2107500",
    "end": "2114400"
  },
  {
    "text": "for each of the users. In that case, you can just use the\nuser variable because that will resolve each role",
    "start": "2114400",
    "end": "2120099"
  },
  {
    "text": "to the user's name for that role. Okay. This is the part I probably\nget asked the most about,",
    "start": "2120100",
    "end": "2127200"
  },
  {
    "text": "is how do I do all this with EC2. So, if any of you were customers\nof ours a couple of years ago,",
    "start": "2127200",
    "end": "2134300"
  },
  {
    "start": "2129000",
    "end": "2129000"
  },
  {
    "text": "you knew that previously, all policies applied to all EC2 resources.",
    "start": "2134300",
    "end": "2139799"
  },
  {
    "text": "So, you want to grant the ability for someone to terminate an instance, you had to grant them the ability to terminate all instances in all\nregions in your entire account.",
    "start": "2139800",
    "end": "2148200"
  },
  {
    "text": "Now, permissions can be set on a\nper resource. So, for example, you can say hey,",
    "start": "2148200",
    "end": "2153500"
  },
  {
    "text": "you can start, stop, and terminate\njust this particular instance, or just this instance that matches\na particular tag.",
    "start": "2153500",
    "end": "2162000"
  },
  {
    "text": "And so, this is what it used to look\nlike before, and we were sad. And yes, there is a better way.",
    "start": "2162000",
    "end": "2169000"
  },
  {
    "text": "And so, now, instead of having a\n* in there, you can put in an ARN, and this is what an instance ID, if you want to say hey, I got this thing,",
    "start": "2169000",
    "end": "2175600"
  },
  {
    "text": "and this is the developer instance and this is all you have access to. Likewise, we talked about this a\nlittle bit earlier,",
    "start": "2175600",
    "end": "2180700"
  },
  {
    "text": "you can grant them access to all of the instances in a certain region.",
    "start": "2180700",
    "end": "2185900"
  },
  {
    "text": "So, this one says hey, you have access to everything that is us-east-1.",
    "start": "2185900",
    "end": "2192400"
  },
  {
    "text": "You can go one step further, right, because you can tag your EC2 instances. You can have a tag on there",
    "start": "2192400",
    "end": "2197800"
  },
  {
    "text": "that says this is my department tag,\nand this is dev. And so, if I'm a developer, and those instances are in us-east-1,",
    "start": "2197800",
    "end": "2206100"
  },
  {
    "text": "and they're tagged with dev, then you have access to it.",
    "start": "2206100",
    "end": "2211500"
  },
  {
    "start": "2210000",
    "end": "2210000"
  },
  {
    "text": "Now, the key with EC2 resource permissions is it supports a lot of resource types,",
    "start": "2211500",
    "end": "2217000"
  },
  {
    "text": "but not all of them. And so, there's a part of the documentation\nthat has a table.",
    "start": "2217000",
    "end": "2223099"
  },
  {
    "text": "I literally open that up in one window when I'm creating policies for EC2. And so, here's the list of resource\ntypes that it supports.",
    "start": "2223100",
    "end": "2230900"
  },
  {
    "text": "I've put it only there in a reference along with all the supported actions. And so, I'll put out that some of\nthe actions",
    "start": "2230900",
    "end": "2238000"
  },
  {
    "start": "2232000",
    "end": "2232000"
  },
  {
    "text": "that are not supported here are like describe, list, all of those actions.",
    "start": "2238000",
    "end": "2244300"
  },
  {
    "text": "And so, a lot of times, people will say hey, can I filter on, you know, DescribeInstances. The short answer is no, you can't.",
    "start": "2244300",
    "end": "2250300"
  },
  {
    "text": "It's not supported. And so, it's key that you understand\nthe nuances of what is supported and what is not",
    "start": "2250300",
    "end": "2256500"
  },
  {
    "text": "in order to create an effective policy. And this goes back to the first policy\nthat we looked at,",
    "start": "2256500",
    "end": "2263000"
  },
  {
    "text": "why didn't that policy work. And so, as I mentioned, you can tag\nyour resources,",
    "start": "2263000",
    "end": "2269099"
  },
  {
    "text": "and a lot of people do this for organizational reasons or they tag it because they want to have",
    "start": "2269100",
    "end": "2275000"
  },
  {
    "text": "a certain department or call center. But these are great for also doing\nauthorization as well.",
    "start": "2275000",
    "end": "2280700"
  },
  {
    "text": "And so, let's look at how we can use tags as a way to prevent a user from doing\nsomething in the system.",
    "start": "2280700",
    "end": "2288100"
  },
  {
    "text": "And so, specifically, I want to limit a user from starting, stopping, or terminating\nan instance unless the instance is owned by that user.",
    "start": "2288100",
    "end": "2295599"
  },
  {
    "text": "And so, I'm going to show you how you add a tag to an EC2 instance, I'll show you a policy that grants a user access to the\nEC2 console,",
    "start": "2295600",
    "end": "2303800"
  },
  {
    "text": "and then of course, we're going to\nuse a policy that uses the username variable to limit what that user can do in\nthe system.",
    "start": "2303800",
    "end": "2312000"
  },
  {
    "text": "And so, once again, I'll go in as\nthe administrator and I will remove Bob from this group.",
    "start": "2312000",
    "end": "2320400"
  },
  {
    "text": "And I believe I have another group in here. Yeah, the EC2_Owner, add him to that group.",
    "start": "2320400",
    "end": "2333500"
  },
  {
    "text": "There's one policy in here. It's a pretty simple policy with\ntwo statements, but like the others, I'll break it\ndown in the presentation.",
    "start": "2333500",
    "end": "2342599"
  },
  {
    "text": "And so, now Bob has access to that. And so, if I switch over to Bob,",
    "start": "2342600",
    "end": "2348900"
  },
  {
    "text": "and I go over into EC2,",
    "start": "2348900",
    "end": "2354900"
  },
  {
    "text": "and I go in there as running instances, I'll just show you a couple things that I find people still don't know.",
    "start": "2354900",
    "end": "2360299"
  },
  {
    "text": "So, there's this Owner column, right. And so, you can show and hide columns\nbased on tags.",
    "start": "2360300",
    "end": "2367600"
  },
  {
    "text": "Everybody already know this? Okay, some people. So, I'll show that. And so, you can see that there's\nan instance tagged as Bob,",
    "start": "2367600",
    "end": "2374700"
  },
  {
    "text": "and there's an instance that is tagged as me. And so, if Bob goes in here,",
    "start": "2374700",
    "end": "2381099"
  },
  {
    "text": "and oh yeah, I'm going to live dangerously. He tries to terminate it. He gets an access denied, okay.",
    "start": "2381100",
    "end": "2387700"
  },
  {
    "text": "However, there's this instance over here",
    "start": "2387700",
    "end": "2394500"
  },
  {
    "text": "that matches his owner tag, and he's able to start it. And in a minute or so when that's\nactually up and running,",
    "start": "2394500",
    "end": "2401300"
  },
  {
    "text": "I can show you him stopping it as well. And so, how did I do that? So, there's two parts here,",
    "start": "2401300",
    "end": "2407700"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "and I broke it out because I took\nall of the APIs, all the actions that don't support\nresource level permissions,",
    "start": "2407700",
    "end": "2416200"
  },
  {
    "text": "and when I say that, what I mean is that the resource\nhas to be star. So, you need a separate block for it.",
    "start": "2416200",
    "end": "2423000"
  },
  {
    "text": "If you don't give access to these APIs, once again, they're not going to be able to see anything in the console.",
    "start": "2423000",
    "end": "2428200"
  },
  {
    "text": "They want to be able to see a list\nof the instances. You have to grant them access to see a list of all of the instances.",
    "start": "2428200",
    "end": "2435500"
  },
  {
    "text": "Now, for those destructive actions, right, the ability to reboot, stop, start,\nor terminate,",
    "start": "2435500",
    "end": "2442300"
  },
  {
    "text": "I'm granted Bob the ability to do that for all instances in us-east,",
    "start": "2442300",
    "end": "2447700"
  },
  {
    "text": "as long as there's a tag called Owner that resolves to his name.",
    "start": "2447700",
    "end": "2453300"
  },
  {
    "text": "And this is where the variable comes in handy because I don't have to specify Bob,",
    "start": "2453300",
    "end": "2458600"
  },
  {
    "text": "I don't have to specify Craig or\nSally there. Whoever they are, it will be resolved. And so, this is a single policy I can use",
    "start": "2458600",
    "end": "2464800"
  },
  {
    "text": "for all of my developers that need to be able to manage their\nown instances.",
    "start": "2464800",
    "end": "2472600"
  },
  {
    "text": "I think there's a question, and you may have missed. For the sake of going through, I'm going to take all questions at\nthe very end.",
    "start": "2472600",
    "end": "2479200"
  },
  {
    "text": "So, I apologize about that. And so, a couple of things I'll point out. Once again, got to have the version.",
    "start": "2479200",
    "end": "2486000"
  },
  {
    "text": "This top part is for seeing everything\nin the console that's necessary to do the job.",
    "start": "2486000",
    "end": "2491700"
  },
  {
    "text": "And then, these parts down here are\nwhere we check for the tag and we have the variable that gets\nresolved to the user's name.",
    "start": "2491700",
    "end": "2500099"
  },
  {
    "text": "Okay. Remember when we started? We had a goal of preventing a user\nfrom launching an instance",
    "start": "2500100",
    "end": "2507400"
  },
  {
    "start": "2501000",
    "end": "2501000"
  },
  {
    "text": "unless it was one of those three types. Let's actually make it work this time.",
    "start": "2507400",
    "end": "2515800"
  },
  {
    "text": "So, in this case here, I'm going to remove him from the group.",
    "start": "2515800",
    "end": "2521900"
  },
  {
    "text": "I'm going to attach a policy.",
    "start": "2521900",
    "end": "2528099"
  },
  {
    "text": "And I'm going to attach this policy. And I'll show you this one, and this\nis a working policy",
    "start": "2528100",
    "end": "2536300"
  },
  {
    "text": "that will actually do what we're\nsupposed to do. So, I'll show you the fail case and\nthe success case again.",
    "start": "2536300",
    "end": "2543700"
  },
  {
    "text": "I removed him, so he can't actually\nstop this anymore. Let's go ahead and launch an instance.",
    "start": "2543700",
    "end": "2550400"
  },
  {
    "text": "We'll go through the exact same flow\nwe did at the beginning. So, I want to choose an m4.",
    "start": "2550400",
    "end": "2555700"
  },
  {
    "text": "Just Review and Launch.",
    "start": "2555700",
    "end": "2562900"
  },
  {
    "text": "And boom, we get the error case, right. So, I'm going to copy that just because I'm going to use it\nin a second.",
    "start": "2562900",
    "end": "2568400"
  },
  {
    "text": "But now, I'm going to go back and I'm going to choose the t2 micro.",
    "start": "2568400",
    "end": "2576000"
  },
  {
    "text": "Yes. Review and Launch. I acknowledge.",
    "start": "2576000",
    "end": "2585600"
  },
  {
    "text": "Now, you can see that Bob is able to launch instances of that type. So, how did I do that and why did\nthis one work?",
    "start": "2585600",
    "end": "2594400"
  },
  {
    "start": "2593000",
    "end": "2593000"
  },
  {
    "text": "And so, I used a couple of the things\nthat we talked about today. The first statement in here is a NotAction.",
    "start": "2594400",
    "end": "2603200"
  },
  {
    "text": "And what I'm saying is you have the\nability to call everything but anything in IAM in\nthe ec2:RunInstances API.",
    "start": "2603200",
    "end": "2615800"
  },
  {
    "text": "Now, the trick here is this grants\neverything but those two. So, the user has access to S3.",
    "start": "2615800",
    "end": "2621700"
  },
  {
    "text": "The user has access to Dynamo, SQS,\nyou name it. And so, if you don't want them to\nhave access to that, you would have to put a list of all the things",
    "start": "2621700",
    "end": "2627400"
  },
  {
    "text": "you would want to exclude. The next part here, this is what\ngrants access to everything you need to launch\nin instance",
    "start": "2627400",
    "end": "2634099"
  },
  {
    "text": "except the actual instance. So, a lot of people forget that. When you launch an instance, you\nneed a key pair. You need an AMI, you need a volume,",
    "start": "2634100",
    "end": "2640700"
  },
  {
    "text": "you need all that stuff. And so, here I'm using the NotResource. Give them access to everything",
    "start": "2640700",
    "end": "2646799"
  },
  {
    "text": "that is not an instance in these\ntwo regions. For this one, I chose to show us-east\nand eu-west.",
    "start": "2646800",
    "end": "2655300"
  },
  {
    "text": "And now, you want the ability to launch an instance in those regions,",
    "start": "2655300",
    "end": "2661900"
  },
  {
    "text": "but only if the instance type is\nt1, t2, and t3.",
    "start": "2661900",
    "end": "2667099"
  },
  {
    "text": "And the reason that this policy works and the other policy doesn't work is this instance type is a key that's\nonly relevant",
    "start": "2667100",
    "end": "2673200"
  },
  {
    "text": "to these two resources. And in the first policy that we tried to create, we were trying to check the instance type",
    "start": "2673200",
    "end": "2679600"
  },
  {
    "text": "for something like a key pair or a volume, and the instance type is not relevant.",
    "start": "2679600",
    "end": "2684800"
  },
  {
    "text": "It's not there. It's null. And so, when it's null, the system doesn't know what to do with it. And so, it treats it as a failure.",
    "start": "2684800",
    "end": "2691599"
  },
  {
    "text": "IE, it treats it as an access denied, and that's why the first policy failed and this one succeeded.",
    "start": "2691600",
    "end": "2697400"
  },
  {
    "text": "Now, this policy's kind of long. So, I think I can make it even shorter. And I can do that if I take advantage\nof IfExists.",
    "start": "2697400",
    "end": "2704799"
  },
  {
    "start": "2701000",
    "end": "2701000"
  },
  {
    "text": "I'm sure there's a few of you who\nknow about IfExists, but there's about this much documentation\nin the IAM docs.",
    "start": "2704800",
    "end": "2712800"
  },
  {
    "text": "So, let me explain it. So, many condition keys exist only\nfor certain resource types.",
    "start": "2712800",
    "end": "2719099"
  },
  {
    "text": "And as I said with that first policy, if you try to test for a key that\ndoesn't exist, your policy is going to fail.",
    "start": "2719100",
    "end": "2725700"
  },
  {
    "text": "Now, we have this little thing. It's the IfExists that you can append to any of the conditional operators,\nexcept for null.",
    "start": "2725700",
    "end": "2732799"
  },
  {
    "text": "And so, you can take StringLike and turn it into StringLikeIfExists.",
    "start": "2732800",
    "end": "2738500"
  },
  {
    "text": "And this is a life saver, because what it allows you to do is create all sorts of policies where\nyou're, like, test it, but if it's not there, I\ndon't care.",
    "start": "2738500",
    "end": "2747099"
  },
  {
    "text": "And so, the policy, an even tighter, easier, better policy\nis this one,",
    "start": "2747100",
    "end": "2752900"
  },
  {
    "text": "where I go and I allow access to\nall ec2:*. So, I don't have to put any exception lists.",
    "start": "2752900",
    "end": "2758000"
  },
  {
    "text": "I'm white listing all of EC2. But then, I'm denying RunInstances",
    "start": "2758000",
    "end": "2763700"
  },
  {
    "text": "for any instance, and in this case, any region where the instance type, if it exists,",
    "start": "2763700",
    "end": "2771900"
  },
  {
    "text": "is not like t1, t2, or t3. So, this is the final policy that\nI actually gave to the customer,",
    "start": "2771900",
    "end": "2777400"
  },
  {
    "text": "two statement policy that solves\nthat very simple use case.",
    "start": "2777400",
    "end": "2786599"
  },
  {
    "text": "Alright, yeah. Thank you.",
    "start": "2786600",
    "end": "2796200"
  },
  {
    "text": "I don't think that one's in the documentation, so you can have that one. Maybe it will be by the time I get out. Now, there's a bunch of tools we\nhave for testing and debugging.",
    "start": "2796200",
    "end": "2804100"
  },
  {
    "text": "We're getting down through the home stretch, so, I might go through these a little\nbit quicker. We took a look at the policy editor.",
    "start": "2804100",
    "end": "2812900"
  },
  {
    "start": "2811000",
    "end": "2811000"
  },
  {
    "text": "There's a couple of things that we\nadded into the policy editor that make life a little bit easier. We catch the JSON errors.",
    "start": "2812900",
    "end": "2819600"
  },
  {
    "text": "We catch the policy grammar errors. You can check this little box down here so that it auto formats it for you,",
    "start": "2819600",
    "end": "2826400"
  },
  {
    "text": "if you like the formatting that we provide. So, it's kind of like a mini JSON policy ID",
    "start": "2826400",
    "end": "2832500"
  },
  {
    "text": "built into the management console. The other thing we have is the policy simulator.",
    "start": "2832500",
    "end": "2838000"
  },
  {
    "start": "2835000",
    "end": "2835000"
  },
  {
    "text": "You can get to the policy simulator from the IAM console as well. And you can think of this as sort\nof a sandbox",
    "start": "2838000",
    "end": "2844400"
  },
  {
    "text": "where you can test your policies. So, you might not want to test them\nin production. And you can either import policies\nthat are attached",
    "start": "2844400",
    "end": "2851000"
  },
  {
    "text": "to users, groups, and roles, or you can author completely new policies,",
    "start": "2851000",
    "end": "2856100"
  },
  {
    "text": "and then you put in the criteria around the bucket I want to access or the table I want to access, and then you run a simulation,",
    "start": "2856100",
    "end": "2862600"
  },
  {
    "text": "and it'll tell you if it's giving\nyou the access. It gives you a result set which will tell you",
    "start": "2862600",
    "end": "2868400"
  },
  {
    "text": "if it's actually doing what you intended\nfor that policy to do. Now, the one I want to spend more time on",
    "start": "2868400",
    "end": "2874400"
  },
  {
    "start": "2872000",
    "end": "2872000"
  },
  {
    "text": "is decoding that EC2 authorization message. So, remember that beautiful encoded output?",
    "start": "2874400",
    "end": "2882500"
  },
  {
    "text": "Anyone ever wonder what that is or\nwhat you do with it? Yeah? Okay. There's actually a tool that we provide",
    "start": "2882500",
    "end": "2889500"
  },
  {
    "text": "if you have access to call the sts:DecodeAuthorizationMessage to figure out what went wrong.",
    "start": "2889500",
    "end": "2896600"
  },
  {
    "text": "And if you're creating an EC2 policy, this is what you need to use to figure out what you did not grant in order to\nmake that policy work.",
    "start": "2896600",
    "end": "2905200"
  },
  {
    "text": "And so, let me just show you.",
    "start": "2905200",
    "end": "2911000"
  },
  {
    "text": "I'm going to take that weird looking\nred message and I'm going to determine what caused\nan EC2 authorization failure.",
    "start": "2911000",
    "end": "2919099"
  },
  {
    "text": "Now, the good news is we already\nhave a bunch of those, right? So, I think if I go back in.",
    "start": "2919100",
    "end": "2927400"
  },
  {
    "text": "I still have it in my clipboard. And what I did is I just created\na little batch file for simplicity.",
    "start": "2927400",
    "end": "2934000"
  },
  {
    "text": "And what it's using is the AWS command line tool and I'm calling the sts:DecodeAuthorizationMessage.",
    "start": "2934000",
    "end": "2942600"
  },
  {
    "text": "Oops. Not intended. And I'm sending it that encoded message that I got from the EC2 console.",
    "start": "2942600",
    "end": "2949000"
  },
  {
    "text": "And then, I'm just piping it into\na text file and dumping it to Notepad so that\nyou can see it.",
    "start": "2949000",
    "end": "2954200"
  },
  {
    "text": "Now, this in itself is not very human readable. So, I do a couple of things. First, I delete this little wrapper.",
    "start": "2954200",
    "end": "2960800"
  },
  {
    "text": "And I don't know why it's there, but it is. And I delete it. And then, there's all these forward slash,",
    "start": "2960800",
    "end": "2968000"
  },
  {
    "text": "and I get rid of those. Just turn those into quotes.",
    "start": "2968000",
    "end": "2977200"
  },
  {
    "text": "So, it's a little bit better. But then, if you're like me, I just take this and I dump it into\nmy favorite JSON editor.",
    "start": "2977200",
    "end": "2984700"
  },
  {
    "text": "I'm just using JSONLint. And then, it formats it. Now, it's something that I can read.",
    "start": "2984700",
    "end": "2990500"
  },
  {
    "text": "And you can go through here and, you know, it tells you things like who was it.",
    "start": "2990500",
    "end": "2995600"
  },
  {
    "text": "Of course it was Bob, right? And he's trying to call RunInstances. And here's the conditions that we set.",
    "start": "2995600",
    "end": "3002500"
  },
  {
    "text": "And then, somewhere in here it says\nthe set of failures, and these are all the failures that\nwent through.",
    "start": "3002500",
    "end": "3010300"
  },
  {
    "text": "And you can walk through this lovely\nJSON document. You can see that I tried to launch\nan m4 instance,",
    "start": "3010300",
    "end": "3016200"
  },
  {
    "text": "and that's what caused the failure. And so, this is how you get something\nthat is human readable that will actually point you in the direction",
    "start": "3016200",
    "end": "3022200"
  },
  {
    "text": "of what you need to correct in your policy. And I did an entire blog post on\nthis as well if you're interested.",
    "start": "3022200",
    "end": "3030400"
  },
  {
    "text": "Okay. Let me wrap up with policy\nenforcement. So, when we evaluate policies,",
    "start": "3030400",
    "end": "3039799"
  },
  {
    "start": "3034000",
    "end": "3034000"
  },
  {
    "text": "first we start with a deny. By default, we try to access things, we just assume you're going to be denied.",
    "start": "3039800",
    "end": "3045500"
  },
  {
    "text": "And we go through and we collect\nall the policies that could apply to the request.",
    "start": "3045500",
    "end": "3051100"
  },
  {
    "text": "So, maybe you're requesting an object\nfrom S3 and there's a bucket policy, and there's a policy attached to the user,",
    "start": "3051100",
    "end": "3057300"
  },
  {
    "text": "and the user is also a member of a group. We take all that policy, all that\nJSON goodness,",
    "start": "3057300",
    "end": "3063200"
  },
  {
    "text": "and we evaluate it all at the same time and we evaluate it equally.",
    "start": "3063200",
    "end": "3068599"
  },
  {
    "text": "And only the policies that match\nwhat you're trying to do will get evaluated.",
    "start": "3068600",
    "end": "3073700"
  },
  {
    "text": "And so, we evaluate all those applicable policies and we look for a deny. This is an important step. If there is a deny for what you're\ntrying to do,",
    "start": "3073700",
    "end": "3082700"
  },
  {
    "text": "final decision is deny, and that's it. Now, however, is there an allow?",
    "start": "3082700",
    "end": "3089000"
  },
  {
    "text": "Now, if there's an allow and there's\nnot a deny, then the final decision is allow, and you get access to that resource.",
    "start": "3089000",
    "end": "3096100"
  },
  {
    "text": "However, if there's no deny and there's no allow, we go back to step one, which is really the final decision\nis default deny.",
    "start": "3096100",
    "end": "3103200"
  },
  {
    "text": "And so, this is how all of those\npolicies are evaluated.",
    "start": "3103200",
    "end": "3109700"
  },
  {
    "start": "3109000",
    "end": "3109000"
  },
  {
    "text": "Okay. We got to the end. So, here's a summary. Don't get up yet. Don't get up yet.",
    "start": "3109700",
    "end": "3116099"
  },
  {
    "text": "I've got some other stuff in here, surprises for people who stay. So, IAM provides access control to\nyour account.",
    "start": "3116100",
    "end": "3123000"
  },
  {
    "text": "We know now that the heart of that\nis the policy language. As we just took a look at,",
    "start": "3123000",
    "end": "3128799"
  },
  {
    "text": "policies are denied by default and denies always trump allows. Use policy versions,",
    "start": "3128800",
    "end": "3135200"
  },
  {
    "text": "and this is the last time I'm going to say it. Sorry. Use policy variables, and this is the last time I'm going to say it. Put a version in there if it's not\ngoing to work.",
    "start": "3135200",
    "end": "3142200"
  },
  {
    "text": "Use managed policies, please. They make all of our lives easier. And then, keep in mind what EC2 actions\nare supported,",
    "start": "3142200",
    "end": "3149200"
  },
  {
    "text": "because if you try to use an EC2 action that doesn't support resource level\npermissions, you're going to get an access denied.",
    "start": "3149200",
    "end": "3155599"
  },
  {
    "text": "Now, I humbly request that you fill\nout your evaluations.",
    "start": "3155600",
    "end": "3161500"
  },
  {
    "text": "They help us improve the conference. They help me improve as a speaker, which you obviously know I need.",
    "start": "3161500",
    "end": "3170600"
  },
  {
    "start": "3169000",
    "end": "3169000"
  },
  {
    "text": "There's a couple of other sessions. So, one of them happened yesterday, and if you don't have a DeLorean",
    "start": "3170600",
    "end": "3177900"
  },
  {
    "text": "or you don't understand that cultural reference,",
    "start": "3177900",
    "end": "3183000"
  },
  {
    "text": "those will be posted online at some\npoint onto YouTube. Though, there is a session at 1:30\naround Federation,",
    "start": "3183000",
    "end": "3188700"
  },
  {
    "text": "which I think dovetails with permissions very well that I encourage you to go through.",
    "start": "3188700",
    "end": "3193900"
  },
  {
    "text": "And then, the last thing I'm going to do because they're long and hairy are these URLs where you can get\nto the documentation, the Security Blog, our home page,",
    "start": "3193900",
    "end": "3201000"
  },
  {
    "text": "the forum where I hang out, and our\nTwitter ID. And with that, thank you very much.",
    "start": "3201000",
    "end": "3212800"
  }
]