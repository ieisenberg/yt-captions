[
  {
    "text": "- Hi.",
    "start": "690",
    "end": "1523"
  },
  {
    "text": "In this video I will show\nyou how to deploy a demo",
    "start": "1523",
    "end": "5310"
  },
  {
    "text": "that will enable you\nto query your Data Lake",
    "start": "5310",
    "end": "7800"
  },
  {
    "text": "with natural language.",
    "start": "7800",
    "end": "10080"
  },
  {
    "text": "I'm Lior Perez.",
    "start": "10080",
    "end": "11070"
  },
  {
    "text": "I'm a solutions architect at AWS.",
    "start": "11070",
    "end": "13769"
  },
  {
    "text": "And I've seen customers asking\nhow to create a chat bot",
    "start": "13770",
    "end": "18240"
  },
  {
    "text": "that can answer questions\nbased on their internal data.",
    "start": "18240",
    "end": "22983"
  },
  {
    "text": "Sometimes their internal\ndata are structured data.",
    "start": "24600",
    "end": "28860"
  },
  {
    "text": "And what I mean by structured\ndata is simply data",
    "start": "28860",
    "end": "32220"
  },
  {
    "text": "that are stored in tables.",
    "start": "32220",
    "end": "34920"
  },
  {
    "text": "And these tables are stored in databases,",
    "start": "34920",
    "end": "37815"
  },
  {
    "text": "and these databases can\nbe stored in a data lake.",
    "start": "37815",
    "end": "41883"
  },
  {
    "text": "Let's take a simple example.",
    "start": "44430",
    "end": "46830"
  },
  {
    "text": "Imagine that you operate a web shop",
    "start": "46830",
    "end": "49650"
  },
  {
    "text": "and you want to answer this question.",
    "start": "49650",
    "end": "52410"
  },
  {
    "text": "Who are the top five customers",
    "start": "52410",
    "end": "54570"
  },
  {
    "text": "who bought products from French suppliers?",
    "start": "54570",
    "end": "56973"
  },
  {
    "text": "To answer these questions,\nyou would ask a data analyst.",
    "start": "58530",
    "end": "62820"
  },
  {
    "text": "The data analyst would first\nsearch the data catalog.",
    "start": "62820",
    "end": "66723"
  },
  {
    "text": "They would do that to know\nwhich tables are required",
    "start": "67680",
    "end": "70320"
  },
  {
    "text": "to answer the question.",
    "start": "70320",
    "end": "71523"
  },
  {
    "text": "Then they would query the data,",
    "start": "72870",
    "end": "75930"
  },
  {
    "text": "and to do that, they would\nwrite and perform a SQL query.",
    "start": "75930",
    "end": "80133"
  },
  {
    "text": "And the last step would simply be",
    "start": "81390",
    "end": "83760"
  },
  {
    "text": "to write the answer in natural language.",
    "start": "83760",
    "end": "87513"
  },
  {
    "text": "So the demo that we're going\nto show you today is a demo",
    "start": "89820",
    "end": "93750"
  },
  {
    "text": "that automates this whole process.",
    "start": "93750",
    "end": "96783"
  },
  {
    "text": "But before jumping into\nthe deployment of the demo,",
    "start": "97680",
    "end": "101460"
  },
  {
    "text": "I would like to show\nyou the user interface.",
    "start": "101460",
    "end": "104220"
  },
  {
    "text": "So you will have a web interface in which",
    "start": "104220",
    "end": "107820"
  },
  {
    "text": "you will be able to write your question",
    "start": "107820",
    "end": "111150"
  },
  {
    "text": "and you will get the answer.",
    "start": "111150",
    "end": "113580"
  },
  {
    "text": "And this answer will be pretty verbose.",
    "start": "113580",
    "end": "116010"
  },
  {
    "text": "So you will be able to\nsee what's happening",
    "start": "116010",
    "end": "119070"
  },
  {
    "text": "behind the scene.",
    "start": "119070",
    "end": "120243"
  },
  {
    "text": "We will get into the details\nof this verbose response later,",
    "start": "126990",
    "end": "130500"
  },
  {
    "text": "but for now, I just wanted to show you",
    "start": "130500",
    "end": "132750"
  },
  {
    "text": "that at the end you get an\nanswer to your initial question.",
    "start": "132750",
    "end": "136620"
  },
  {
    "text": "And here you can see that we\nhave the top five customers",
    "start": "136620",
    "end": "140159"
  },
  {
    "text": "who bought products from French suppliers.",
    "start": "140160",
    "end": "142260"
  },
  {
    "text": "Let's deploy the demo now.",
    "start": "143310",
    "end": "145709"
  },
  {
    "text": "The first thing that\nyou need to do is to go",
    "start": "145710",
    "end": "147810"
  },
  {
    "text": "to the GitHub repository.",
    "start": "147810",
    "end": "150420"
  },
  {
    "text": "It is in the aws-samples organization,",
    "start": "150420",
    "end": "153569"
  },
  {
    "text": "and the repository name",
    "start": "153570",
    "end": "154890"
  },
  {
    "text": "is natural-language-queries-for-datalakes.",
    "start": "154890",
    "end": "158220"
  },
  {
    "text": "In this repository,",
    "start": "158220",
    "end": "159420"
  },
  {
    "text": "you will find a README in\nwhich you will get instructions",
    "start": "159420",
    "end": "162930"
  },
  {
    "text": "for installation.",
    "start": "162930",
    "end": "164282"
  },
  {
    "text": "We are going to use a Cloud9\ninstance, so you can go",
    "start": "167460",
    "end": "171750"
  },
  {
    "text": "to your AWS account and go to Cloud9.",
    "start": "171750",
    "end": "174960"
  },
  {
    "text": "Cloud9 will provide you an\nIDE to work with your code.",
    "start": "174960",
    "end": "179343"
  },
  {
    "text": "Of course, if you're an advanced user,",
    "start": "180360",
    "end": "182670"
  },
  {
    "text": "you can also use your own laptop,",
    "start": "182670",
    "end": "185819"
  },
  {
    "text": "but here for simplicity, we'll use Cloud9.",
    "start": "185820",
    "end": "188253"
  },
  {
    "text": "You can start by clicking\non Create Environment.",
    "start": "189090",
    "end": "192269"
  },
  {
    "text": "You can give a name to your environment.",
    "start": "192270",
    "end": "195753"
  },
  {
    "text": "And you can select an m5.large instance.",
    "start": "202770",
    "end": "206253"
  },
  {
    "text": "When you're done, you\ncan create your instance.",
    "start": "210780",
    "end": "213423"
  },
  {
    "text": "And we still have one thing to do",
    "start": "216600",
    "end": "218670"
  },
  {
    "text": "before using this instance.",
    "start": "218670",
    "end": "220530"
  },
  {
    "text": "We need to increase the disk size.",
    "start": "220530",
    "end": "223620"
  },
  {
    "text": "So to do that, you click\non the instance name,",
    "start": "223620",
    "end": "226922"
  },
  {
    "text": "you click on Manage EC2 Instance,",
    "start": "227760",
    "end": "230013"
  },
  {
    "text": "and you select your instance.",
    "start": "234810",
    "end": "236612"
  },
  {
    "text": "You click on storage.",
    "start": "237600",
    "end": "239583"
  },
  {
    "text": "And you can see here that\nthe volume has a size",
    "start": "241560",
    "end": "245849"
  },
  {
    "text": "of 10 gigabytes.",
    "start": "245850",
    "end": "247200"
  },
  {
    "text": "And we're going to increase\nthis to 20 gigabytes",
    "start": "247200",
    "end": "249930"
  },
  {
    "text": "by clicking on the volume, selecting it,",
    "start": "249930",
    "end": "252812"
  },
  {
    "text": "click on action, modify volume,",
    "start": "255030",
    "end": "258002"
  },
  {
    "text": "and you can change the\nsize to 20 gigabyte.",
    "start": "260040",
    "end": "262923"
  },
  {
    "text": "You can now go back to\nyour Cloud9 instance.",
    "start": "267210",
    "end": "270180"
  },
  {
    "text": "So you can click on environments.",
    "start": "270180",
    "end": "273570"
  },
  {
    "text": "And then you can open\nyour Cloud9 environment.",
    "start": "273570",
    "end": "277923"
  },
  {
    "text": "So as you can see, you have a terminal.",
    "start": "282480",
    "end": "284760"
  },
  {
    "text": "And we're going to work in this terminal.",
    "start": "284760",
    "end": "286980"
  },
  {
    "text": "We are going to check if our\nvolume has been increased.",
    "start": "286980",
    "end": "291980"
  },
  {
    "text": "So here we can see",
    "start": "292140",
    "end": "294120"
  },
  {
    "text": "that the volume has\nnot been increased yet.",
    "start": "294120",
    "end": "297540"
  },
  {
    "text": "So we are going to reboot\nthe instance to ensure",
    "start": "297540",
    "end": "300990"
  },
  {
    "text": "that the modifications has\nbeen taken into consideration.",
    "start": "300990",
    "end": "305880"
  },
  {
    "text": "sudo reboot now.",
    "start": "305880",
    "end": "308313"
  },
  {
    "text": "And this will reboot your instance.",
    "start": "310710",
    "end": "312903"
  },
  {
    "text": "Okay, now we can check\nagain the volume size,",
    "start": "319260",
    "end": "324150"
  },
  {
    "text": "and we can see here that\nwe have our 20 gigabytes.",
    "start": "324150",
    "end": "327240"
  },
  {
    "text": "So now we are going to\nclone the repository.",
    "start": "327240",
    "end": "331112"
  },
  {
    "text": "So you can type the git clone command",
    "start": "332670",
    "end": "335770"
  },
  {
    "text": "and paste the URL of\nthe GitHub repository.",
    "start": "337650",
    "end": "341403"
  },
  {
    "text": "Now that we have cloned the repository,",
    "start": "347670",
    "end": "349950"
  },
  {
    "text": "let's look at the\ninstallation instructions.",
    "start": "349950",
    "end": "353640"
  },
  {
    "text": "First we're going to\ncd into the src folder.",
    "start": "353640",
    "end": "357243"
  },
  {
    "text": "So of course, first we need",
    "start": "358440",
    "end": "360610"
  },
  {
    "text": "to cd into our repository\nfolder, and then cd src.",
    "start": "360610",
    "end": "365610"
  },
  {
    "text": "The next step is to create\na virtual environment",
    "start": "369570",
    "end": "372240"
  },
  {
    "text": "and install the dependencies.",
    "start": "372240",
    "end": "373500"
  },
  {
    "text": "So we can just copy these instructions",
    "start": "373500",
    "end": "377400"
  },
  {
    "text": "and paste them in the terminal.",
    "start": "377400",
    "end": "380013"
  },
  {
    "text": "So this will install the Python\ndependencies for our code.",
    "start": "383070",
    "end": "387063"
  },
  {
    "text": "Now the installation is done,",
    "start": "395460",
    "end": "398130"
  },
  {
    "text": "we're going to launch\nthe Streamlit server.",
    "start": "398130",
    "end": "401520"
  },
  {
    "text": "So Streamlit is a Python library",
    "start": "401520",
    "end": "403919"
  },
  {
    "text": "that helps data scientists\nwrite user interfaces in Python.",
    "start": "403920",
    "end": "408920"
  },
  {
    "text": "So we're going to launch\nthe Streamlit server.",
    "start": "409620",
    "end": "412113"
  },
  {
    "text": "So we just have to paste the instructions,",
    "start": "413400",
    "end": "415889"
  },
  {
    "text": "streamlit run streamlit_app.py\n--server.port 8080.",
    "start": "415890",
    "end": "420890"
  },
  {
    "text": "Here you can see that the\nStreamlit server has been launched",
    "start": "424080",
    "end": "426840"
  },
  {
    "text": "on the port 8080,",
    "start": "426840",
    "end": "428130"
  },
  {
    "text": "but we cannot access these\nports directly on Cloud9.",
    "start": "428130",
    "end": "432150"
  },
  {
    "text": "So to access this Streamlit application,",
    "start": "432150",
    "end": "435300"
  },
  {
    "text": "we're going to click here on preview",
    "start": "435300",
    "end": "438419"
  },
  {
    "text": "and then preview running application.",
    "start": "438420",
    "end": "440883"
  },
  {
    "text": "And you will see that the\napplication will appear",
    "start": "442590",
    "end": "445560"
  },
  {
    "text": "in this part of the window.",
    "start": "445560",
    "end": "447753"
  },
  {
    "text": "To open it in a browser tab,",
    "start": "448890",
    "end": "452250"
  },
  {
    "text": "we can click here on this\nbutton, pop out into new window.",
    "start": "452250",
    "end": "457250"
  },
  {
    "text": "Then this will open the Streamlit\napplication in a new tab.",
    "start": "458340",
    "end": "463230"
  },
  {
    "text": "Now that our application\nis running, we need first",
    "start": "463230",
    "end": "467580"
  },
  {
    "text": "to index the business data catalog.",
    "start": "467580",
    "end": "469860"
  },
  {
    "text": "This is something that\nyou will do only once.",
    "start": "469860",
    "end": "472742"
  },
  {
    "text": "And this will look at your data catalog",
    "start": "473730",
    "end": "476400"
  },
  {
    "text": "and store it in a vector database.",
    "start": "476400",
    "end": "479699"
  },
  {
    "text": "This vector database will\nenable us searching the tables",
    "start": "479700",
    "end": "484020"
  },
  {
    "text": "directly from natural language queries.",
    "start": "484020",
    "end": "487142"
  },
  {
    "text": "Now the indexing is complete,\nwe can ask our first question.",
    "start": "490320",
    "end": "494550"
  },
  {
    "text": "So let's try with our first question.",
    "start": "494550",
    "end": "497099"
  },
  {
    "text": "Who are the top five customers",
    "start": "497100",
    "end": "498480"
  },
  {
    "text": "who bought products from French suppliers?",
    "start": "498480",
    "end": "500580"
  },
  {
    "text": "As you can see, our demo works.",
    "start": "508440",
    "end": "510630"
  },
  {
    "text": "We get an answer to the question here.",
    "start": "510630",
    "end": "513750"
  },
  {
    "text": "We can see that the top five customers",
    "start": "513750",
    "end": "515490"
  },
  {
    "text": "who bought products from French suppliers,",
    "start": "515490",
    "end": "517020"
  },
  {
    "text": "here at one, IT, et cetera.",
    "start": "517020",
    "end": "519123"
  },
  {
    "text": "Let's talk now about the workflow",
    "start": "520650",
    "end": "522960"
  },
  {
    "text": "and how it is implemented in the code.",
    "start": "522960",
    "end": "525450"
  },
  {
    "text": "The basic usage is just\ninstantiating the DataGenie class",
    "start": "525450",
    "end": "530450"
  },
  {
    "text": "and ask your question.",
    "start": "530880",
    "end": "532590"
  },
  {
    "text": "So you can see that this is very simple.",
    "start": "532590",
    "end": "535170"
  },
  {
    "text": "As we said before, the\nworkflow is in three steps.",
    "start": "535170",
    "end": "538410"
  },
  {
    "text": "The first step is the data catalog search.",
    "start": "538410",
    "end": "541203"
  },
  {
    "text": "We need to find the\ntables that are required",
    "start": "542340",
    "end": "544980"
  },
  {
    "text": "to answer the user question.",
    "start": "544980",
    "end": "547260"
  },
  {
    "text": "The second step is the\ngeneration of a SQL query,",
    "start": "547260",
    "end": "551400"
  },
  {
    "text": "and then we perform this SQL query.",
    "start": "551400",
    "end": "554310"
  },
  {
    "text": "And the third step is",
    "start": "554310",
    "end": "556140"
  },
  {
    "text": "to generate an answer in natural language.",
    "start": "556140",
    "end": "559590"
  },
  {
    "text": "Now we're going to look at the first step,",
    "start": "559590",
    "end": "561720"
  },
  {
    "text": "the data catalog search.",
    "start": "561720",
    "end": "563699"
  },
  {
    "text": "And of course, before talking\nabout data catalog search,",
    "start": "563700",
    "end": "567510"
  },
  {
    "text": "we need to see where the data are stored.",
    "start": "567510",
    "end": "571590"
  },
  {
    "text": "The data are stored in\nthe source codes folder,",
    "start": "571590",
    "end": "575730"
  },
  {
    "text": "and it is in the example data folder.",
    "start": "575730",
    "end": "578932"
  },
  {
    "text": "And in this example data folder,",
    "start": "578932",
    "end": "581040"
  },
  {
    "text": "you will find several things.",
    "start": "581040",
    "end": "583500"
  },
  {
    "text": "You will find a data folder\nwhich contains the databases",
    "start": "583500",
    "end": "586980"
  },
  {
    "text": "in SQLite files.",
    "start": "586980",
    "end": "588513"
  },
  {
    "text": "In this sample, you have two\ndatabases that are provided,",
    "start": "589560",
    "end": "593279"
  },
  {
    "text": "the Chinook database and\nthe Northwind database.",
    "start": "593280",
    "end": "596460"
  },
  {
    "text": "Both of them are open source databases,",
    "start": "596460",
    "end": "598620"
  },
  {
    "text": "and you can find information",
    "start": "598620",
    "end": "600060"
  },
  {
    "text": "on what they contain on the internet.",
    "start": "600060",
    "end": "603029"
  },
  {
    "text": "Of course, you can also use your own data.",
    "start": "603030",
    "end": "606240"
  },
  {
    "text": "It can be in SQLite format,",
    "start": "606240",
    "end": "608250"
  },
  {
    "text": "but also in any other type of database",
    "start": "608250",
    "end": "610920"
  },
  {
    "text": "like PostgreSQL or Athena.",
    "start": "610920",
    "end": "613950"
  },
  {
    "text": "You will just have to\nimplement the connector",
    "start": "613950",
    "end": "616410"
  },
  {
    "text": "into Python code.",
    "start": "616410",
    "end": "617642"
  },
  {
    "text": "The second thing that you will\nfind is a metadata folder.",
    "start": "620070",
    "end": "623980"
  },
  {
    "text": "And in this metadata folder,",
    "start": "623980",
    "end": "626130"
  },
  {
    "text": "we will find the information\nabout the data catalog.",
    "start": "626130",
    "end": "629910"
  },
  {
    "text": "As we said before, you\nneed to perform a search",
    "start": "629910",
    "end": "634290"
  },
  {
    "text": "in the data catalog,\nthis is the first step",
    "start": "634290",
    "end": "636149"
  },
  {
    "text": "so of course, you need the data catalog.",
    "start": "636150",
    "end": "638490"
  },
  {
    "text": "And this is what we will\nfind in this metadata folder.",
    "start": "638490",
    "end": "641970"
  },
  {
    "text": "In this metadata folder, you\nwill find data catalog files.",
    "start": "641970",
    "end": "645629"
  },
  {
    "text": "Each of these files will\ndescribe one of the tables",
    "start": "645630",
    "end": "649500"
  },
  {
    "text": "that you have in your data lake.",
    "start": "649500",
    "end": "652200"
  },
  {
    "text": "For instance, here we have one\nexample of data catalog file.",
    "start": "652200",
    "end": "657200"
  },
  {
    "text": "It tells that it's a table that\nis in the Chinook database.",
    "start": "657750",
    "end": "661080"
  },
  {
    "text": "It gives the name of the table,",
    "start": "661080",
    "end": "663450"
  },
  {
    "text": "here it's the Album table.",
    "start": "663450",
    "end": "666610"
  },
  {
    "text": "We have a description.",
    "start": "666610",
    "end": "668579"
  },
  {
    "text": "It tells that this table\ncontains information",
    "start": "668580",
    "end": "670800"
  },
  {
    "text": "about music albums.",
    "start": "670800",
    "end": "672542"
  },
  {
    "text": "Then you have a description\nfor each column.",
    "start": "672542",
    "end": "676020"
  },
  {
    "text": "The title column is the name\nof the title of the album.",
    "start": "676020",
    "end": "679800"
  },
  {
    "text": "The ArtistId.",
    "start": "679800",
    "end": "681390"
  },
  {
    "text": "Please note that the good description",
    "start": "681390",
    "end": "683040"
  },
  {
    "text": "of the columns is very important",
    "start": "683040",
    "end": "685470"
  },
  {
    "text": "because sometimes the column\nnames are not very explicit",
    "start": "685470",
    "end": "688800"
  },
  {
    "text": "and nobody can guess what they contain.",
    "start": "688800",
    "end": "692040"
  },
  {
    "text": "We also have some information about",
    "start": "692040",
    "end": "693750"
  },
  {
    "text": "what the related table contains.",
    "start": "693750",
    "end": "696720"
  },
  {
    "text": "This is very important",
    "start": "696720",
    "end": "697709"
  },
  {
    "text": "because if you want to perform joins,",
    "start": "697710",
    "end": "699450"
  },
  {
    "text": "you need to have information\nabout the relationships",
    "start": "699450",
    "end": "701880"
  },
  {
    "text": "between the tables.",
    "start": "701880",
    "end": "702993"
  },
  {
    "text": "Now that we have a\ndocument for each table,",
    "start": "703830",
    "end": "706170"
  },
  {
    "text": "we're going to use vector search.",
    "start": "706170",
    "end": "708360"
  },
  {
    "text": "Vector search is a way to\nrelate semantically a text,",
    "start": "708360",
    "end": "712410"
  },
  {
    "text": "like the user question\nhere, and some documents.",
    "start": "712410",
    "end": "716879"
  },
  {
    "text": "The vector search will enable\nus to find the best matches.",
    "start": "716880",
    "end": "719943"
  },
  {
    "text": "How are we going to use that?",
    "start": "721620",
    "end": "723600"
  },
  {
    "text": "So let's get into the\ndetails of the step one,",
    "start": "723600",
    "end": "726660"
  },
  {
    "text": "the data catalog search.",
    "start": "726660",
    "end": "728819"
  },
  {
    "text": "The first thing is to find the database.",
    "start": "728820",
    "end": "731943"
  },
  {
    "text": "And to do that, we will\njust perform a vector search",
    "start": "732870",
    "end": "736260"
  },
  {
    "text": "to find the best match in the tables.",
    "start": "736260",
    "end": "739740"
  },
  {
    "text": "And we will get the database\nname from the document",
    "start": "739740",
    "end": "742410"
  },
  {
    "text": "that describes the table.",
    "start": "742410",
    "end": "744212"
  },
  {
    "text": "The second step will be\nto split the question",
    "start": "745740",
    "end": "748709"
  },
  {
    "text": "for the table search.",
    "start": "748710",
    "end": "750480"
  },
  {
    "text": "Here, what we want to do\nis to find all the tables",
    "start": "750480",
    "end": "754260"
  },
  {
    "text": "that are needed to answer the question.",
    "start": "754260",
    "end": "756180"
  },
  {
    "text": "So we will ask the LLM,",
    "start": "756180",
    "end": "758670"
  },
  {
    "text": "can you create a list of questions",
    "start": "758670",
    "end": "761579"
  },
  {
    "text": "that will help us perform some search",
    "start": "761580",
    "end": "765810"
  },
  {
    "text": "and find all the tables that we need?",
    "start": "765810",
    "end": "768123"
  },
  {
    "text": "And here at the LLM\nwill split the question",
    "start": "769140",
    "end": "771420"
  },
  {
    "text": "in four questions.",
    "start": "771420",
    "end": "773430"
  },
  {
    "text": "The first one would be,",
    "start": "773430",
    "end": "774450"
  },
  {
    "text": "what tables contain\ninformation about customers",
    "start": "774450",
    "end": "776760"
  },
  {
    "text": "and their purchases?",
    "start": "776760",
    "end": "778050"
  },
  {
    "text": "The second one would be,",
    "start": "778050",
    "end": "779160"
  },
  {
    "text": "what tables contain\ninformation about products",
    "start": "779160",
    "end": "781319"
  },
  {
    "text": "and their suppliers, including\nthe country of the suppliers?",
    "start": "781320",
    "end": "784800"
  },
  {
    "text": "So for each of the questions",
    "start": "784800",
    "end": "786420"
  },
  {
    "text": "that we generated at the previous step,",
    "start": "786420",
    "end": "789269"
  },
  {
    "text": "we are going to perform a vector search",
    "start": "789270",
    "end": "791280"
  },
  {
    "text": "and we're going to ask for\nthe three best matches.",
    "start": "791280",
    "end": "794550"
  },
  {
    "text": "So here for the first question, we see",
    "start": "794550",
    "end": "797010"
  },
  {
    "text": "that we have three potential tables,",
    "start": "797010",
    "end": "799530"
  },
  {
    "text": "for the second question,",
    "start": "799530",
    "end": "800430"
  },
  {
    "text": "we have three potential tables, et cetera.",
    "start": "800430",
    "end": "802500"
  },
  {
    "text": "And then the last step will just be",
    "start": "802500",
    "end": "805680"
  },
  {
    "text": "to concatenate all the results.",
    "start": "805680",
    "end": "807933"
  },
  {
    "text": "So here we got a list of\ntables that could be required",
    "start": "809070",
    "end": "813630"
  },
  {
    "text": "to answer the question.",
    "start": "813630",
    "end": "815493"
  },
  {
    "text": "Let's look now at the\nimplementation in the code.",
    "start": "817410",
    "end": "820472"
  },
  {
    "text": "All the code of the data catalog search",
    "start": "821580",
    "end": "824100"
  },
  {
    "text": "is in the catalog_query.py file.",
    "start": "824100",
    "end": "827069"
  },
  {
    "text": "I will let you go through this file,",
    "start": "827070",
    "end": "828990"
  },
  {
    "text": "but I will show you a few\nextracts of this file.",
    "start": "828990",
    "end": "832099"
  },
  {
    "text": "Here, this is the code\nfor the vector search.",
    "start": "832099",
    "end": "835200"
  },
  {
    "text": "As you can see, it's quite short.",
    "start": "835200",
    "end": "836913"
  },
  {
    "text": "We use the faiss library.",
    "start": "838020",
    "end": "840120"
  },
  {
    "text": "Faiss is an in-memory vector database.",
    "start": "840120",
    "end": "842613"
  },
  {
    "text": "We store the database in a file.",
    "start": "843900",
    "end": "845820"
  },
  {
    "text": "So here we are just going to load it",
    "start": "845820",
    "end": "848777"
  },
  {
    "text": "to be able to use this database.",
    "start": "848777",
    "end": "851699"
  },
  {
    "text": "And then we just use",
    "start": "851700",
    "end": "853230"
  },
  {
    "text": "the similarity_search_with_score method.",
    "start": "853230",
    "end": "856350"
  },
  {
    "text": "And this is all what you need\nto perform a vector search.",
    "start": "856350",
    "end": "861032"
  },
  {
    "text": "Another extract of the code\nthat I want to show you",
    "start": "861870",
    "end": "864570"
  },
  {
    "text": "is the prompt that we use\nto split the questions.",
    "start": "864570",
    "end": "868203"
  },
  {
    "text": "And basically we say that we are going",
    "start": "869490",
    "end": "871529"
  },
  {
    "text": "to perform a vector\nsearch in the data catalog",
    "start": "871530",
    "end": "873540"
  },
  {
    "text": "to find the tables.",
    "start": "873540",
    "end": "875040"
  },
  {
    "text": "Your task is to create a\ncomprehensive list of questions",
    "start": "875040",
    "end": "877920"
  },
  {
    "text": "that we will ask to the data catalog.",
    "start": "877920",
    "end": "880233"
  },
  {
    "text": "So you see that the hard\nwork is done by the LLM.",
    "start": "881400",
    "end": "886400"
  },
  {
    "text": "So we're using generative\nAI at all the steps.",
    "start": "886920",
    "end": "890639"
  },
  {
    "text": "The second part of the workflow\nis the SQL query generation.",
    "start": "890640",
    "end": "894690"
  },
  {
    "text": "And we will also perform the SQL query",
    "start": "894690",
    "end": "897120"
  },
  {
    "text": "after it has been generated.",
    "start": "897120",
    "end": "898863"
  },
  {
    "text": "The code for this part is\nin the sql_query.py file.",
    "start": "900030",
    "end": "903693"
  },
  {
    "text": "What we're going to do in this\nstep is to give to the LLM",
    "start": "904650",
    "end": "908820"
  },
  {
    "text": "the schema of the tables,",
    "start": "908820",
    "end": "911160"
  },
  {
    "text": "three examples rows from the tables,",
    "start": "911160",
    "end": "914160"
  },
  {
    "text": "the data catalog document\nfor each of the tables,",
    "start": "914160",
    "end": "918329"
  },
  {
    "text": "and the question of the user.",
    "start": "918330",
    "end": "920580"
  },
  {
    "text": "And we will ask it to\ngenerate a SQL query.",
    "start": "920580",
    "end": "923613"
  },
  {
    "text": "This is the prompt that we\nuse for SQL query generation.",
    "start": "926220",
    "end": "930392"
  },
  {
    "text": "So you can see that we ask,\ngiven an input question,",
    "start": "931590",
    "end": "935730"
  },
  {
    "text": "create a SQL query to get\nfrom the database, et cetera.",
    "start": "935730",
    "end": "938943"
  },
  {
    "text": "It is important that\nthe SQL query complies",
    "start": "940620",
    "end": "942779"
  },
  {
    "text": "with the dialect syntax.",
    "start": "942780",
    "end": "945240"
  },
  {
    "text": "And we give the business\ndata catalog information",
    "start": "945240",
    "end": "948029"
  },
  {
    "text": "about the tables.",
    "start": "948030",
    "end": "949230"
  },
  {
    "text": "We give the information\nabout the tables' schema",
    "start": "949230",
    "end": "951870"
  },
  {
    "text": "and example rows.",
    "start": "951870",
    "end": "953130"
  },
  {
    "text": "And we also give the input question.",
    "start": "953130",
    "end": "956040"
  },
  {
    "text": "And we provide all these\ninformation in XML format.",
    "start": "956040",
    "end": "960152"
  },
  {
    "text": "We also ask the LLM to\nanswer in XML format.",
    "start": "961080",
    "end": "964833"
  },
  {
    "text": "And this makes the parsing\nof the result easy.",
    "start": "965910",
    "end": "969509"
  },
  {
    "text": "So this is what we get when\nwe generate the SQL query.",
    "start": "969510",
    "end": "973053"
  },
  {
    "text": "We get a SQL query,",
    "start": "974580",
    "end": "975807"
  },
  {
    "text": "and we also get an\nexplanation of the SQL query.",
    "start": "975807",
    "end": "978813"
  },
  {
    "text": "This helps us check",
    "start": "979800",
    "end": "981029"
  },
  {
    "text": "that the LLM has understood our question.",
    "start": "981030",
    "end": "984543"
  },
  {
    "text": "The last step is to write the answer.",
    "start": "986130",
    "end": "990330"
  },
  {
    "text": "So it's just generating an\nanswer in natural language.",
    "start": "990330",
    "end": "993990"
  },
  {
    "text": "To perform this step,",
    "start": "993990",
    "end": "995640"
  },
  {
    "text": "we take all the information\nfrom the previous steps",
    "start": "995640",
    "end": "998490"
  },
  {
    "text": "and we ask the LLM",
    "start": "998490",
    "end": "1000050"
  },
  {
    "text": "to generate an answer in natural language.",
    "start": "1000050",
    "end": "1002779"
  },
  {
    "text": "So this is pretty simple.",
    "start": "1002780",
    "end": "1004550"
  },
  {
    "text": "All the code is in the\nfinal_answer.py file.",
    "start": "1004550",
    "end": "1008333"
  },
  {
    "text": "Before concluding, I wanted to show you",
    "start": "1010550",
    "end": "1012766"
  },
  {
    "text": "that this demo can also\nbe deployed to the web.",
    "start": "1012767",
    "end": "1015920"
  },
  {
    "text": "Because for now we just deployed it",
    "start": "1015920",
    "end": "1018950"
  },
  {
    "text": "in a local instance in Cloud9.",
    "start": "1018950",
    "end": "1022790"
  },
  {
    "text": "But if you want to make it accessible",
    "start": "1022790",
    "end": "1024439"
  },
  {
    "text": "to your colleagues, for instance,",
    "start": "1024440",
    "end": "1026470"
  },
  {
    "text": "you can deploy it to the web.",
    "start": "1026470",
    "end": "1029209"
  },
  {
    "text": "All the information\nthat you need to deploy",
    "start": "1029210",
    "end": "1031399"
  },
  {
    "text": "are on the GitHub repo.",
    "start": "1031400",
    "end": "1033533"
  },
  {
    "text": "You have a deploying section\nin which you can see a diagram",
    "start": "1034700",
    "end": "1039699"
  },
  {
    "text": "of the architecture that will be deployed,",
    "start": "1039800",
    "end": "1042770"
  },
  {
    "text": "and you have a CDK template.",
    "start": "1042770",
    "end": "1044780"
  },
  {
    "text": "CDK is the Cloud Development Kit.",
    "start": "1044780",
    "end": "1047630"
  },
  {
    "text": "It's an infrastructure as code library.",
    "start": "1047630",
    "end": "1051890"
  },
  {
    "text": "And to use it, you just need",
    "start": "1051890",
    "end": "1053600"
  },
  {
    "text": "to use the command cdk deploy.",
    "start": "1053600",
    "end": "1056299"
  },
  {
    "text": "It will automatically deploy\nall the infrastructure.",
    "start": "1056300",
    "end": "1059423"
  },
  {
    "text": "Your application will be\ndeployed in a container",
    "start": "1060440",
    "end": "1063529"
  },
  {
    "text": "in Amazon ECS.",
    "start": "1063530",
    "end": "1065780"
  },
  {
    "text": "And you will also benefit\nfrom Amazon Cognito",
    "start": "1065780",
    "end": "1068810"
  },
  {
    "text": "which would provide user authentication.",
    "start": "1068810",
    "end": "1072050"
  },
  {
    "text": "You have all the information that you need",
    "start": "1072050",
    "end": "1073940"
  },
  {
    "text": "to try it yourself.",
    "start": "1073940",
    "end": "1075500"
  },
  {
    "text": "Go to the GitHub repo, clone the codes,",
    "start": "1075500",
    "end": "1078260"
  },
  {
    "text": "and start experimenting now.",
    "start": "1078260",
    "end": "1080300"
  },
  {
    "text": "Happy building.",
    "start": "1080300",
    "end": "1081263"
  }
]