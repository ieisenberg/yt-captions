[
  {
    "start": "0",
    "end": "163000"
  },
  {
    "text": "awesome welcome back here to the 80s loft in San Francisco here today for",
    "start": "30",
    "end": "5670"
  },
  {
    "text": "those of you here in the room thanks for getting to stay with us and joining us here in person all this week we've been",
    "start": "5670",
    "end": "11580"
  },
  {
    "text": "covering recaps of reinvent launches and kind of updates into the technology space that we have here at AWS today's",
    "start": "11580",
    "end": "18150"
  },
  {
    "text": "day is focused entirely on the surrealist platform of services that we have our portfolio I should say of",
    "start": "18150",
    "end": "23760"
  },
  {
    "text": "products and so far we've had three different sessions here today we have covered a view into lambda and service",
    "start": "23760",
    "end": "30420"
  },
  {
    "text": "applications spend a little bit of time talking about some of our tooling including the AWS Sam template engine",
    "start": "30420",
    "end": "38010"
  },
  {
    "text": "and the Sam CLI and then just before this we covered the lambda layers and runtime api announcements from reinvent",
    "start": "38010",
    "end": "44129"
  },
  {
    "text": "to really big key critical features in AWS lambda that were really excited that",
    "start": "44129",
    "end": "49710"
  },
  {
    "text": "we were able to announce we're continuing on here today in this next hour we're talking about API is the API",
    "start": "49710",
    "end": "55500"
  },
  {
    "text": "gateway and then again at the next hour we will finish up with diving little bit deep into a Tobias step functions if",
    "start": "55500",
    "end": "62640"
  },
  {
    "text": "you're just joining us again my name is Chris Mons I am currently a principal developer advocate for service here at",
    "start": "62640",
    "end": "67710"
  },
  {
    "text": "AWS based in our new york city office been an AWS for a little over six and a half years across a couple different",
    "start": "67710",
    "end": "73680"
  },
  {
    "text": "roles but come primarily from a start-up background worked for a number startups in new york city area primarily and will",
    "start": "73680",
    "end": "78869"
  },
  {
    "text": "be considered ops or DevOps just as the admin type roles so why are we here",
    "start": "78869",
    "end": "85170"
  },
  {
    "text": "again overall today so again today is primarily about server list but this session in particular is about api's and",
    "start": "85170",
    "end": "91920"
  },
  {
    "text": "the power of AP is one thing I like to do and that I've spent a lot of time",
    "start": "91920",
    "end": "97619"
  },
  {
    "text": "over the last couple years doing its talking about how we internally in Amazon have shaped and done product",
    "start": "97619",
    "end": "102869"
  },
  {
    "text": "development for quite some time if we go back historically and we look at Amazon first launched back in 1994 and grown",
    "start": "102869",
    "end": "111479"
  },
  {
    "text": "obviously since then so we're you know 20 and change your old company if you used amazon.com the retail side the",
    "start": "111479",
    "end": "119040"
  },
  {
    "text": "retail site back between 1994 and 2001 opened up your web browser went to",
    "start": "119040",
    "end": "124680"
  },
  {
    "text": "amazon.com went to the homepage went up to the search bar search for whatever product you might be looking for at that",
    "start": "124680",
    "end": "130800"
  },
  {
    "text": "point in time landed on a search results page Danah listing looked at a bunch of different listings read all the",
    "start": "130800",
    "end": "136410"
  },
  {
    "text": "information add it to a car went through the checkout flow and eventually checked out",
    "start": "136410",
    "end": "141660"
  },
  {
    "text": "all of that happened as part of a large monolithic application and actually we",
    "start": "141660",
    "end": "146820"
  },
  {
    "text": "did a lot of things back then in Pearl we had a lot of large monolithic databases and so what we found is we",
    "start": "146820",
    "end": "153540"
  },
  {
    "text": "came into 2001 was that this was kind of holding back our ability to move faster and to grow our platform and be able to",
    "start": "153540",
    "end": "159990"
  },
  {
    "text": "support new capabilities and features and so we spent some time thinking about",
    "start": "159990",
    "end": "165030"
  },
  {
    "start": "163000",
    "end": "163000"
  },
  {
    "text": "how to reshape basically the flow that we had for how we did product development terms of how we had our team",
    "start": "165030",
    "end": "171330"
  },
  {
    "text": "shaped how we built this monolithic application and then the delivery pipeline that allowed us to get through",
    "start": "171330",
    "end": "178100"
  },
  {
    "text": "deploying out these new features and I like to say that back when we had the monolith what happened as we look to add new",
    "start": "178100",
    "end": "184110"
  },
  {
    "text": "features and capabilities is that it wasn't akin to too many cooks in the same kitchen it was too many cooks",
    "start": "184110",
    "end": "189300"
  },
  {
    "text": "stirring the same pot everyone adding their own ingredients taking a sip and realizing that the Gulag didn't taste",
    "start": "189300",
    "end": "194880"
  },
  {
    "text": "too good and so it's back in about 2001 that we started to go through a really really",
    "start": "194880",
    "end": "200340"
  },
  {
    "text": "dramatic transition through how we were shaved as an organization for the people side we moved from these large",
    "start": "200340",
    "end": "205830"
  },
  {
    "text": "monolithic teams to something that we now call a to pizza team model kind of a small cell based mini kind of a team",
    "start": "205830",
    "end": "211620"
  },
  {
    "text": "inside a larger whole we broke down the application into micro services and now these teams are highly pelo allies",
    "start": "211620",
    "end": "217950"
  },
  {
    "text": "delivering their own components in terms of how we think about our architecture again we do what today is considered",
    "start": "217950",
    "end": "224970"
  },
  {
    "text": "architectural II microservices so we went from that one big monolith into what you see here which is actually an",
    "start": "224970",
    "end": "231299"
  },
  {
    "text": "image from about circa 2008 2009 all of the services that were inside Amazon so",
    "start": "231299",
    "end": "237390"
  },
  {
    "text": "this kind of Death Star's looking diagram as I like to describe it here again represents all the various different capabilities and services and",
    "start": "237390",
    "end": "243930"
  },
  {
    "text": "stuff that you see now again but now almost a decade ago so the lines of",
    "start": "243930",
    "end": "250260"
  },
  {
    "text": "connectivity represent dependencies across these so which services were dependent on each other and so in the",
    "start": "250260",
    "end": "255299"
  },
  {
    "text": "middle there are kind of common services like authentication and authorization and other things that were used across",
    "start": "255299",
    "end": "261510"
  },
  {
    "text": "other services now the each of these little boxes basically represents",
    "start": "261510",
    "end": "267150"
  },
  {
    "text": "something that has an API and services were basically shaped that they would only connect to other services API to get",
    "start": "267150",
    "end": "273740"
  },
  {
    "text": "information and you could only share your own services information via an API so it's very much ingrained and the",
    "start": "273740",
    "end": "279470"
  },
  {
    "text": "culture of how we think about software now primarily these connect over HTTP there are some other means for",
    "start": "279470",
    "end": "285020"
  },
  {
    "text": "transferring information today things like services like SNS or queues or other streaming services but by a large",
    "start": "285020",
    "end": "291950"
  },
  {
    "text": "HTTP restful api is what we've built and we could certainly to be largely black box from each other so if i am building",
    "start": "291950",
    "end": "298670"
  },
  {
    "text": "a service and you're consuming it all you really get to know is my services API spec the performance you should",
    "start": "298670",
    "end": "305030"
  },
  {
    "text": "expect and and you know what my api does so you don't really get to know what",
    "start": "305030",
    "end": "310700"
  },
  {
    "text": "languages were in in operating system it runs in what databases I use any of that kind of stuff another way to think about",
    "start": "310700",
    "end": "317090"
  },
  {
    "start": "317000",
    "end": "317000"
  },
  {
    "text": "this is that we first launched AWS s3 so simple storage service one of the first",
    "start": "317090",
    "end": "322100"
  },
  {
    "text": "services we had here at AWS believed back in 2006 when we first launched that product it",
    "start": "322100",
    "end": "327530"
  },
  {
    "text": "had eight separate micro services that made up what it is and now this is an image here from reinvents where one of",
    "start": "327530",
    "end": "335270"
  },
  {
    "text": "the leaders of s3 got up on stage and talked about the history of the product and so started at 8 back in 2006 and we",
    "start": "335270",
    "end": "343820"
  },
  {
    "text": "jumped forward to 2018 s3 is actually more than 235 micro services just one",
    "start": "343820",
    "end": "350900"
  },
  {
    "text": "product 235 micro services now s3 happens to be a product that has a whole",
    "start": "350900",
    "end": "356150"
  },
  {
    "text": "lot of capabilities does a whole lot of different things now that it first didn't we launched it 12 years prior but",
    "start": "356150",
    "end": "361310"
  },
  {
    "text": "again that's kind of the model that we have as we expand we add more common more micro services sometimes we divide services into other ones all API driven",
    "start": "361310",
    "end": "368870"
  },
  {
    "text": "so api's are kind of the name of the game for how we build technology so this leads us to some pretty interesting",
    "start": "368870",
    "end": "375200"
  },
  {
    "text": "stats you know today we have thousands of these two Pizza teams building this micro services architecture practicing",
    "start": "375200",
    "end": "382070"
  },
  {
    "text": "continuous delivery with multiple environments we talked about things like dev staging and prod before and what it",
    "start": "382070",
    "end": "388160"
  },
  {
    "text": "means is that in 2016 we actually did a little more than 60 million deployments that year so that's a lot of deployments",
    "start": "388160",
    "end": "395810"
  },
  {
    "text": "again api-based applications now this is just us there's other ways",
    "start": "395810",
    "end": "401040"
  },
  {
    "text": "to look at it there's a really awesome book out there called building microservices by a gentleman named Sam",
    "start": "401040",
    "end": "406560"
  },
  {
    "text": "Newman it's kind of considered one of the authoritative sources on this concept of micro-services and in",
    "start": "406560",
    "end": "412710"
  },
  {
    "text": "relating this to api's Marc Andreessen who's a famous VC here out in the valley has a phrase that software is eating the",
    "start": "412710",
    "end": "420120"
  },
  {
    "text": "world he said this a number of years ago there was kind of a retort from a gentleman named dr. Steve Wilmont who's",
    "start": "420120",
    "end": "425310"
  },
  {
    "text": "currently at Red Hat and represents the API space from them who said well it's ap eyes that are eating software all",
    "start": "425310",
    "end": "431430"
  },
  {
    "text": "right software that people are designing today by and large is API driven so here's your small little biology lesson of the",
    "start": "431430",
    "end": "437520"
  },
  {
    "text": "day does anyone know what honey bees have to do with building micro-services",
    "start": "437520",
    "end": "443870"
  },
  {
    "text": "anybody nobody good so I could teach you something non-technical today so if you",
    "start": "443870",
    "end": "448980"
  },
  {
    "text": "went into your favorite web browser and you searched for AP is which you might think of as AP eyes it could also be",
    "start": "448980",
    "end": "456000"
  },
  {
    "text": "APIs which is the genus for honeybees and so you might occasionally get lost",
    "start": "456000",
    "end": "461640"
  },
  {
    "text": "on the the wrong page looking for information about AP eyes or you might be really interested in honeybees but so",
    "start": "461640",
    "end": "468300"
  },
  {
    "text": "I don't know for sure that Sam and the folks that are Riley put honeybees on the cover as part of kind of a",
    "start": "468300",
    "end": "474950"
  },
  {
    "text": "tongue-in-cheek joke I think that they did but there's a relation that you have between the two of those anyway a little",
    "start": "474950",
    "end": "482010"
  },
  {
    "text": "fun fact more about API so again they show up all over the place right many of",
    "start": "482010",
    "end": "487500"
  },
  {
    "text": "us are wearing or carrying a device that are talking to AP eyes all day long",
    "start": "487500",
    "end": "492890"
  },
  {
    "text": "again whether it be the the phones and our pockets the things on our wrists the cars that",
    "start": "492890",
    "end": "498720"
  },
  {
    "text": "you might be driving if you have one the devices that are around your home increasingly api's are everywhere terms",
    "start": "498720",
    "end": "506130"
  },
  {
    "text": "of companies that have been very disruptive in in various different industries they have been largely around building ap is if we talk about Airbnb",
    "start": "506130",
    "end": "513479"
  },
  {
    "text": "you know the headquarters just down the street here they've been building api's for the last ten plus years uber square",
    "start": "513479",
    "end": "519479"
  },
  {
    "text": "slack all API driven organizations and how they build their architectures and",
    "start": "519479",
    "end": "524490"
  },
  {
    "text": "their technology so API is super critical super important the way that we",
    "start": "524490",
    "end": "530010"
  },
  {
    "text": "think about modern software today and getting away from this these concepts of the monolith let's are",
    "start": "530010",
    "end": "536610"
  },
  {
    "text": "about building your api's and I'm going to assume here that most people here already have a fundamental basic understanding of what",
    "start": "536610",
    "end": "543240"
  },
  {
    "text": "api's are and how they work let's let's you know kind of take it from a low level and then go a little bit deeper",
    "start": "543240",
    "end": "549120"
  },
  {
    "text": "alright the basic technology stack for an API is typically you've got a client the internet or a network some sort of",
    "start": "549120",
    "end": "556440"
  },
  {
    "start": "556000",
    "end": "556000"
  },
  {
    "text": "API server some sort of back-end and then databases data stores etc that you",
    "start": "556440",
    "end": "561480"
  },
  {
    "text": "might be talking to now when it comes to things like api's there's basic ways that you can do them and then there's",
    "start": "561480",
    "end": "567390"
  },
  {
    "text": "ways that you have to do it if you want to expose your API to millions of customers similarly to what we do and",
    "start": "567390",
    "end": "572670"
  },
  {
    "text": "many other companies that are out there and even internally when you're managing API is there's a number of things that",
    "start": "572670",
    "end": "577710"
  },
  {
    "start": "575000",
    "end": "575000"
  },
  {
    "text": "you struggle with things like managing multiple versions environments so stages in our terminology if you need to expose",
    "start": "577710",
    "end": "584820"
  },
  {
    "text": "access to other developers so companies for example like stripe here have an API exposed developers that's incredibly",
    "start": "584820",
    "end": "591660"
  },
  {
    "text": "popular access authorization can be a challenge things like traffic spikes",
    "start": "591660",
    "end": "596760"
  },
  {
    "text": "dealing with management overhead of having to maintain this layer and so this is typically where people think about having some sort of API gateway",
    "start": "596760",
    "end": "603180"
  },
  {
    "text": "and so again I mentioned this earlier today API gateways as a concept is not something that we invented here at AWS",
    "start": "603180",
    "end": "609720"
  },
  {
    "start": "605000",
    "end": "605000"
  },
  {
    "text": "there are many different API gateways in the industry there are hosted api is there are Enterprise API is you can buy",
    "start": "609720",
    "end": "615630"
  },
  {
    "text": "they're open API gateways that you can find but one thing that I've been encouraging companies for for half a",
    "start": "615630",
    "end": "621600"
  },
  {
    "text": "decade now is find an API gateway product and centralized on it get everyone the organization use the",
    "start": "621600",
    "end": "627330"
  },
  {
    "text": "same API gateway standardize on it for public private whatever it might be find an API gateway happy to be slightly",
    "start": "627330",
    "end": "633840"
  },
  {
    "text": "opinionated I think that we have a pretty amazing API gateway product here at AWS it's got a lot of capabilities and I'm not going to read for the",
    "start": "633840",
    "end": "639660"
  },
  {
    "text": "laundry list of these here but just to you know cherry pick a couple ability to get out API keys for developers being",
    "start": "639660",
    "end": "646560"
  },
  {
    "text": "able to do things like throttling and modeling at usage tiers SDK generation that's a pretty cool one DDoS protection",
    "start": "646560",
    "end": "653150"
  },
  {
    "text": "there's a whole lot of stuff that you can do with amazon's api gateway it also meets the key criteria for a service",
    "start": "653150",
    "end": "659339"
  },
  {
    "text": "product so you don't pay for it when it's not in use it automatically scales it's automatically available",
    "start": "659339",
    "end": "664830"
  },
  {
    "text": "there's no servers you have to set up manage for API gateway and if you've been here in the room for most day or if",
    "start": "664830",
    "end": "670950"
  },
  {
    "text": "you've been following on Twitch you've seen us briefly demo some capabilities of API gateway just really quickly now",
    "start": "670950",
    "end": "679080"
  },
  {
    "text": "API gateway is has been around for about three and a half years now has a number of capabilities to it it's really robust",
    "start": "679080",
    "end": "685500"
  },
  {
    "text": "piece of technology or service I should say and so we've got different ways of exposing api's out to your services or",
    "start": "685500",
    "end": "692580"
  },
  {
    "text": "your clients and then different ways that those api is can be powered and we're gonna go into all that stuff right here now I mentioned this very very",
    "start": "692580",
    "end": "700620"
  },
  {
    "start": "699000",
    "end": "699000"
  },
  {
    "text": "early today but just coming back to it again we did just announce a couple weeks ago support for WebSockets and ap",
    "start": "700620",
    "end": "706770"
  },
  {
    "text": "is now WebSockets representing an interesting shift in the API space in building near real-time API interaction",
    "start": "706770",
    "end": "714420"
  },
  {
    "text": "where from the backend of the API you want to push a message out to the consumers of that API so this can allow",
    "start": "714420",
    "end": "722550"
  },
  {
    "text": "for really interesting things whether it be mobile apps or dashboards or IOT or chat BOTS and stuff like that",
    "start": "722550",
    "end": "728250"
  },
  {
    "text": "now WebSockets as a technology itself is not new but one of the challenges in the space of service has been that",
    "start": "728250",
    "end": "733770"
  },
  {
    "text": "traditionally the compute tier that handles interfacing with your data and",
    "start": "733770",
    "end": "738990"
  },
  {
    "text": "your customers has to store some state about which clients there are involved",
    "start": "738990",
    "end": "744240"
  },
  {
    "text": "in the WebSocket connection there's an active client and there's a state that has to get managed now this has resulted",
    "start": "744240",
    "end": "750420"
  },
  {
    "text": "in people needing to run very outsize compute tiers because they have to track all that state even if messages aren't",
    "start": "750420",
    "end": "755820"
  },
  {
    "text": "being pushed and so this can be a place where web socket API eyes can become very expensive one of the challenges",
    "start": "755820",
    "end": "761670"
  },
  {
    "text": "we've had in the service space is that server lists workloads by default out of the bag are just kind of ephemeral",
    "start": "761670",
    "end": "767250"
  },
  {
    "text": "lambda functions go away they don't maintain state API gateway is kind of a transitory proxy at the end of the day",
    "start": "767250",
    "end": "774500"
  },
  {
    "text": "so this is pretty new and pretty different and pretty exciting because basically what happens here is that API",
    "start": "774500",
    "end": "781200"
  },
  {
    "text": "gateway manages that state for you it tracks the connections and and what clients are around and then any back-end",
    "start": "781200",
    "end": "787350"
  },
  {
    "text": "can be used for your WebSockets API and again with this you're not paying for",
    "start": "787350",
    "end": "793430"
  },
  {
    "text": "you know servers you're only paying for what you use with API gateway now in",
    "start": "793430",
    "end": "799680"
  },
  {
    "text": "terms of what goes behind API gateway again whether you're doing WebSockets or just normal rest-based HTTP API is could be almost any computer",
    "start": "799680",
    "end": "809070"
  },
  {
    "start": "808000",
    "end": "808000"
  },
  {
    "text": "service you could think of so you could certainly put ec2 or one of the load balance products that we have here at",
    "start": "809070",
    "end": "814680"
  },
  {
    "text": "AWS behind it you can put a container behind it and this can be a container running from one of our services or if",
    "start": "814680",
    "end": "820260"
  },
  {
    "text": "you run kubernetes yourself or something else and then obviously lambda which we've shown a couple times here today",
    "start": "820260",
    "end": "825709"
  },
  {
    "text": "now when deploying a micro service with ec2 it's pretty straightforward you're typically going to have ec2 configured",
    "start": "825709",
    "end": "831870"
  },
  {
    "start": "827000",
    "end": "827000"
  },
  {
    "text": "in an auto scaling group maybe maybe not but that's general best practice then you have some sort of a load balancer so",
    "start": "831870",
    "end": "837720"
  },
  {
    "text": "elastic load balancer application load balancer and LB or network load balancer depending on what your need is from that",
    "start": "837720",
    "end": "844260"
  },
  {
    "text": "load balancing tier you'd put that behind API gateway expose out your web interface from those services and then",
    "start": "844260",
    "end": "850649"
  },
  {
    "text": "API gateway can handle the outbound interface to your API with ECS or eks or",
    "start": "850649",
    "end": "858240"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "far gay or kubernetes or any container workload your options are either that you run something like nginx locally",
    "start": "858240",
    "end": "863910"
  },
  {
    "text": "that represents out a service or you put those behind a load balancer as well and in this case API gateway then is",
    "start": "863910",
    "end": "870300"
  },
  {
    "text": "representing back through those to the container based workload that you have and scaling and all of that is handled",
    "start": "870300",
    "end": "875610"
  },
  {
    "text": "either by the service or by something like auto scaling behind the scenes now we've already kind of covered lambda",
    "start": "875610",
    "end": "881810"
  },
  {
    "text": "earlier today and so again what happens with a lambda based back-end is that API gateway calls the lambda API to invoke",
    "start": "881810",
    "end": "888779"
  },
  {
    "text": "it you never need to think about scaling it you never need to think about load balancers or anything like that",
    "start": "888779",
    "end": "893850"
  },
  {
    "text": "API gateway will just automatically call the lambda API for invocation of your function so this represents again a",
    "start": "893850",
    "end": "901709"
  },
  {
    "text": "number of different architectures again with the API gateway and lambda it's pretty straightforward",
    "start": "901709",
    "end": "906899"
  },
  {
    "text": "it just invokes the lambda API but you can actually put API gateway in front of a number of different things so we can",
    "start": "906899",
    "end": "912270"
  },
  {
    "text": "put in front of step functions which we're gonna end today talking about step functions so this could be really useful",
    "start": "912270",
    "end": "917399"
  },
  {
    "text": "if you have a a synchronous API that needs to kick off some sort of a workflow behind the scenes you could",
    "start": "917399",
    "end": "924420"
  },
  {
    "text": "also and I think this is one of the coolest things you do with API gateway that people don't know about is put ap gateway in front of almost any aw",
    "start": "924420",
    "end": "930750"
  },
  {
    "text": "service that you could think of and so one thing that we see people do is have say a mobile application that",
    "start": "930750",
    "end": "936300"
  },
  {
    "text": "needs to just get data back and forth from a database like RDS or like",
    "start": "936300",
    "end": "941550"
  },
  {
    "text": "dynamodb what you could do here with DynamoDB is just map the dynamodb api",
    "start": "941550",
    "end": "947040"
  },
  {
    "text": "behind the api gateway expose out any sort of api from the api gateway that you have there and do all of your logic",
    "start": "947040",
    "end": "954090"
  },
  {
    "text": "for how you handle creates reads updates and deletes in your mobile application",
    "start": "954090",
    "end": "959100"
  },
  {
    "text": "so instead of even having a computer you can just directly exposed DynamoDB up to",
    "start": "959100",
    "end": "964140"
  },
  {
    "text": "your application but you can use things like the api keys the api gateway provides usage here's throttling caching",
    "start": "964140",
    "end": "971010"
  },
  {
    "text": "of the information in the api gateway again without having to manage your computer so that's pretty cool you can",
    "start": "971010",
    "end": "978210"
  },
  {
    "text": "put it in front of things like Kinesis so you can expose Kinesis out to motive things like mobile applications so if",
    "start": "978210",
    "end": "984540"
  },
  {
    "text": "you wanted to collect say session information or tracking the information about that from this mobile device I",
    "start": "984540",
    "end": "991410"
  },
  {
    "text": "could have it talk basically directly to Kinesis through API gateway without",
    "start": "991410",
    "end": "996420"
  },
  {
    "text": "having to embed in my app say AWS credentials so just a couple of examples that you can do there you can also put",
    "start": "996420",
    "end": "1003320"
  },
  {
    "text": "API gateway in front of resources that exist inside of a private data center",
    "start": "1003320",
    "end": "1008480"
  },
  {
    "text": "for example via direct connect to your AWS accounts or your Atos VPC virtual",
    "start": "1008480",
    "end": "1013580"
  },
  {
    "text": "private cloud you could expose private resources inside your data center you can also put API gateway in front of any",
    "start": "1013580",
    "end": "1019250"
  },
  {
    "text": "public HTTP endpoint you have an app running in Heroku you can put API gateway in front of it I've been",
    "start": "1019250",
    "end": "1024770"
  },
  {
    "text": "operating another cloud provider you could put API gateway in front of it so it can be backed by anything publicly or",
    "start": "1024770",
    "end": "1030589"
  },
  {
    "text": "basically privately HTTP serving now you",
    "start": "1030590",
    "end": "1036110"
  },
  {
    "text": "have three different types of endpoints to choose from and they represent all sorts of different needs that you might have one is edge optimized so this was",
    "start": "1036110",
    "end": "1044000"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "the first that we first launched API gateway with and this is where we basically will give you a cloud front",
    "start": "1044000",
    "end": "1049220"
  },
  {
    "text": "which is our CDN service distribution so cloud front has 100 plus points of",
    "start": "1049220",
    "end": "1055820"
  },
  {
    "text": "presence around the globe I think we're almost about 160 or so points of presence if I can remember the number right and what this means is that if you",
    "start": "1055820",
    "end": "1062840"
  },
  {
    "text": "have users that are connecting from the web again browser or mobile based you",
    "start": "1062840",
    "end": "1067880"
  },
  {
    "text": "can make use of the acceleration of having a CDN service in front of that API you might also have an API that",
    "start": "1067880",
    "end": "1073850"
  },
  {
    "text": "needs to be exposed just inside of a region or one that you want to bring your own CDN configuration to and then",
    "start": "1073850",
    "end": "1080300"
  },
  {
    "text": "you can use a regional API and so if you are using another CDN service like fastly your Akamai or something like",
    "start": "1080300",
    "end": "1087140"
  },
  {
    "text": "that you could put that in front of your regional hosted API and then lastly",
    "start": "1087140",
    "end": "1092300"
  },
  {
    "text": "private API is so something launched just last summer these are API is it exists only inside of your virtual private cloud and so",
    "start": "1092300",
    "end": "1098300"
  },
  {
    "text": "this is for things like internal micro services that going back to the diagram I had of s3 being 235 micro services",
    "start": "1098300",
    "end": "1105650"
  },
  {
    "text": "almost all of those are private into the infrastructure and not consumed externally by customers and so again",
    "start": "1105650",
    "end": "1113120"
  },
  {
    "text": "supporting that growth of the micro services world that we see so sticking",
    "start": "1113120",
    "end": "1118130"
  },
  {
    "text": "with the theme of today let's again saying that we chose we haven't got API gateway we're gonna have lambda as our back-end tier and then whatever database",
    "start": "1118130",
    "end": "1125720"
  },
  {
    "text": "we might have behind the scenes now I mentioned this earlier but just to rehash this one really really common",
    "start": "1125720",
    "end": "1131270"
  },
  {
    "start": "1128000",
    "end": "1128000"
  },
  {
    "text": "architectural pattern that we see that's that's growing rapidly today is this concept of a service web application",
    "start": "1131270",
    "end": "1137510"
  },
  {
    "text": "where the entire stack can be serviced pay for what you use no permanent infrastructure and no servers that you",
    "start": "1137510",
    "end": "1143150"
  },
  {
    "text": "run and again this is a situation where you're using typically some sort of modern JavaScript framework to represent",
    "start": "1143150",
    "end": "1149150"
  },
  {
    "text": "your web application whether it be something like react or view or angular or any of those that would get stored in",
    "start": "1149150",
    "end": "1154610"
  },
  {
    "text": "s3 with your CSS and and other static content and served out with s3 as a web",
    "start": "1154610",
    "end": "1159830"
  },
  {
    "text": "server now that could optionally be fronted by cloud front and then although your business logic could be an API gateway",
    "start": "1159830",
    "end": "1165920"
  },
  {
    "text": "and lambda and again with this you have automatic scale just pay for what you use high availability no servers to",
    "start": "1165920",
    "end": "1173090"
  },
  {
    "text": "manage so pretty exciting and something that we see kind of shifting the industry in this way so let's talk about",
    "start": "1173090",
    "end": "1179960"
  },
  {
    "text": "security so going back to that diagram that we have of all of the various capabilities of API gateway where would",
    "start": "1179960",
    "end": "1189230"
  },
  {
    "start": "1189000",
    "end": "1189000"
  },
  {
    "text": "you imagine from here that you could add security well the answer is actually",
    "start": "1189230",
    "end": "1195110"
  },
  {
    "text": "everywhere there's different ways that you can add security to every single bit of this stack right",
    "start": "1195110",
    "end": "1201080"
  },
  {
    "text": "we could have security at the client-side so your customers need to log in with a username and password in order to access your back-end you could",
    "start": "1201080",
    "end": "1208100"
  },
  {
    "text": "also have specific API keys that only exist in the mobile device then able to access the backend to the V and a half",
    "start": "1208100",
    "end": "1214280"
  },
  {
    "text": "things like encryption on the wire so API gateway is gonna use SSL for the AP is for API gateway to your back-end in",
    "start": "1214280",
    "end": "1220880"
  },
  {
    "text": "the case of it being lambda it's going to use iam permissions to say whether or not you can talk to that lambda function",
    "start": "1220880",
    "end": "1225890"
  },
  {
    "text": "or if it was other backends you could do things like be able to authenticate that",
    "start": "1225890",
    "end": "1231080"
  },
  {
    "text": "back-end and then from your lambda function to your data base which we've seen earlier today you have the function",
    "start": "1231080",
    "end": "1236300"
  },
  {
    "text": "policy which says what can this function do and what can it talk to you so we can add security in all these various places",
    "start": "1236300",
    "end": "1242090"
  },
  {
    "text": "but in talking just about API gateway we have a couple different security mechanisms that exist just at the API",
    "start": "1242090",
    "end": "1247820"
  },
  {
    "text": "level so we see here we have I M permissions so this is basically the ability to say that I am or AWS",
    "start": "1247820",
    "end": "1254830"
  },
  {
    "text": "credentials can be used to access an API and interface with it we have a lambda custom authorizer so this is where you",
    "start": "1254830",
    "end": "1260960"
  },
  {
    "text": "would write a lambda function to interface with some sort of custom logic this could be a user management system",
    "start": "1260960",
    "end": "1266540"
  },
  {
    "text": "that you run this could be a user a lambda function that interfaces with something like auth0 or you know any",
    "start": "1266540",
    "end": "1272750"
  },
  {
    "text": "other sort of identity provider that you might be working with we were something called cutting user pools talk a little",
    "start": "1272750",
    "end": "1278270"
  },
  {
    "text": "bit more about here in a moment which is a completely managed user management system and then we have a concept called",
    "start": "1278270",
    "end": "1283520"
  },
  {
    "text": "resource policies what's unique about resource policies it ties into things like private API endpoints you could say",
    "start": "1283520",
    "end": "1290420"
  },
  {
    "text": "all of the services in my VPC can talk to this or just certain subnets or just",
    "start": "1290420",
    "end": "1295580"
  },
  {
    "text": "certain AWS accounts and it's kind of a wider way of scoping who and what can access your API gateway now lambda",
    "start": "1295580",
    "end": "1304970"
  },
  {
    "start": "1304000",
    "end": "1304000"
  },
  {
    "text": "custom authorizers are pretty popular if we see this for people that have an existing user management service where",
    "start": "1304970",
    "end": "1311240"
  },
  {
    "text": "they are already handling things like API keys or some sort of other credential that they give to their",
    "start": "1311240",
    "end": "1316430"
  },
  {
    "text": "customers and so you can create a lambda function that basically interprets the success or failure of accepting those",
    "start": "1316430",
    "end": "1322850"
  },
  {
    "text": "credentials and then uses a token to tell the api gateway you know this is good or not more or less simple i",
    "start": "1322850",
    "end": "1329330"
  },
  {
    "text": "version of it i gave the example earlier of how we had had a request for basic HTTP off",
    "start": "1329330",
    "end": "1335350"
  },
  {
    "text": "for API gateway it's not something built into it and so the lead p.m. for for API",
    "start": "1335350",
    "end": "1341170"
  },
  {
    "text": "gateway actually went and built one and hacked it together and published it in the service application repository and",
    "start": "1341170",
    "end": "1346450"
  },
  {
    "text": "so you can have everything from basic username and password up through more sophisticated you know",
    "start": "1346450",
    "end": "1351490"
  },
  {
    "text": "tokens or security keys lambda custom authorizers basically support any of",
    "start": "1351490",
    "end": "1356980"
  },
  {
    "text": "that now if you don't want to manage your own user system which is something that I would never encourage anyone to",
    "start": "1356980",
    "end": "1363610"
  },
  {
    "start": "1360000",
    "end": "1360000"
  },
  {
    "text": "do their options like kognito user pools and so what user pools do is give you a completely managed user credential and",
    "start": "1363610",
    "end": "1371170"
  },
  {
    "text": "information management system you can have everything basically handled for you from sign up and and sign in",
    "start": "1371170",
    "end": "1377170"
  },
  {
    "text": "workflows being able to do things like have multi-factor whether it be a token",
    "start": "1377170",
    "end": "1382540"
  },
  {
    "text": "or an SMS email verification password resets it could also do things like",
    "start": "1382540",
    "end": "1387930"
  },
  {
    "text": "detect if people are trying to log into an accounts like trying to brute force",
    "start": "1387930",
    "end": "1393580"
  },
  {
    "text": "into it and react to it there's a whole lot of capabilities and coming into user pools we could probably spend a whole hour talking about that but in general",
    "start": "1393580",
    "end": "1400300"
  },
  {
    "text": "this is one of those things that as a developer running your own user management system is not providing value",
    "start": "1400300",
    "end": "1406000"
  },
  {
    "text": "to your business and so it encourage you to look at the the various providers that are out there this technology verse",
    "start": "1406000",
    "end": "1411130"
  },
  {
    "text": "building this stuff yourself so start a little bit more about what goes into",
    "start": "1411130",
    "end": "1416590"
  },
  {
    "text": "deploying API so we've seen today so the really basic examples of what you can be done with surplice api's and using Sam",
    "start": "1416590",
    "end": "1424090"
  },
  {
    "text": "for example to deploy them but it's important to note that we have a lot of",
    "start": "1424090",
    "end": "1429130"
  },
  {
    "text": "customers that aren't using lambda behind API gateway they're using things like ec2 or ECS or other technologies",
    "start": "1429130",
    "end": "1435280"
  },
  {
    "text": "and so it's important to know how to deploy api's without Sam I've mentioned",
    "start": "1435280",
    "end": "1440500"
  },
  {
    "text": "a little bit earlier there's this concept of stages and api's you can use these for things like lifecycle",
    "start": "1440500",
    "end": "1445840"
  },
  {
    "start": "1444000",
    "end": "1444000"
  },
  {
    "text": "management so having dev tests prod or alpha beta gamma a side story when I",
    "start": "1445840",
    "end": "1453670"
  },
  {
    "text": "worked at Etsy we we had a strong kind of back and forth about what we should call the pre-production environment and",
    "start": "1453670",
    "end": "1460210"
  },
  {
    "text": "we argued about whether it should be called pre prod or staging or whatever it might be and instead we settled on",
    "start": "1460210",
    "end": "1465610"
  },
  {
    "text": "princess so we called our non production environment princess and you deployed to princess before you deploy to prod and",
    "start": "1465610",
    "end": "1472669"
  },
  {
    "text": "it was just because we realized the term didn't matter but in this case you could have an API gateway for princess and an",
    "start": "1472669",
    "end": "1478129"
  },
  {
    "text": "API gateway stage for prod and and do that so whatever you want to call it you can call it that but essentially think of them as",
    "start": "1478129",
    "end": "1484699"
  },
  {
    "text": "separate out environments that represent the same API definition and spec over time now these have API gateway stage",
    "start": "1484699",
    "end": "1493369"
  },
  {
    "text": "variables that align with that stage that represent you know effectively key value pairs that can be passed down to",
    "start": "1493369",
    "end": "1498589"
  },
  {
    "text": "customize the functionality of that stage at whatever stage it is so for dev",
    "start": "1498589",
    "end": "1503599"
  },
  {
    "text": "I could have certain values passed down for product and have certain values passed down and again we gave the",
    "start": "1503599",
    "end": "1508669"
  },
  {
    "text": "example of how you can use this for doing traffic shifting in lambda and and",
    "start": "1508669",
    "end": "1513859"
  },
  {
    "text": "we're not at least and be able to map these stage variables back to things like lambda aliases and versions and be",
    "start": "1513859",
    "end": "1521179"
  },
  {
    "text": "able to do things like true software lifecycle promotion processes and fun stuff like that but API gateways got a",
    "start": "1521179",
    "end": "1528499"
  },
  {
    "text": "couple capabilities that make it powerful beyond just what you can do with interfacing for example with lambda and so API gateway does have its own",
    "start": "1528499",
    "end": "1535999"
  },
  {
    "start": "1534000",
    "end": "1534000"
  },
  {
    "text": "concept of canary support we talked about Canaries with Sam and safe deployments earlier here today but with",
    "start": "1535999",
    "end": "1542569"
  },
  {
    "text": "API gateway you can do a very similar thing where you can shift a certain percent of traffic to a two-year",
    "start": "1542569",
    "end": "1548749"
  },
  {
    "text": "customers of your API and so this can be really useful for a number of different",
    "start": "1548749",
    "end": "1554719"
  },
  {
    "text": "things a deploying from version one to version two of your application and you want to push out just a small amount of",
    "start": "1554719",
    "end": "1560899"
  },
  {
    "text": "traffic you could do that but what's really interesting about API gateway or one interesting thing I should say about",
    "start": "1560899",
    "end": "1566599"
  },
  {
    "text": "API gateway is that we see customers using this to do a lot more creative and interesting things let's say that today",
    "start": "1566599",
    "end": "1573049"
  },
  {
    "text": "you have an API that's running in a traditional monolithic sense or you have an API that's running on virtual servers",
    "start": "1573049",
    "end": "1578859"
  },
  {
    "text": "you know running inside of AWS or anyplace else we'll see customers use API gateway as a",
    "start": "1578859",
    "end": "1584539"
  },
  {
    "text": "mechanism for migration so put an API gateway in front of your API that is monolithic and running inside a virtual",
    "start": "1584539",
    "end": "1590869"
  },
  {
    "text": "machines and then basically use Canaries to shift portions of traffic out to a",
    "start": "1590869",
    "end": "1596149"
  },
  {
    "text": "new back-end and you can do this on a method by Method basis you could take a sing API call from the entirety of your API",
    "start": "1596149",
    "end": "1602940"
  },
  {
    "text": "and pointed at lambda and test it for a period of time that you define",
    "start": "1602940",
    "end": "1608299"
  },
  {
    "text": "indefinitely a couple hours a couple minutes a couple days and then decide whether you want to shift traffic in one",
    "start": "1608299",
    "end": "1613950"
  },
  {
    "text": "way or the other obviously people will be able to do use this to take api's and move them from on-premises up to the",
    "start": "1613950",
    "end": "1621359"
  },
  {
    "text": "cloud so taking them from their data center moving them up to an AWS environment and so again you can get",
    "start": "1621359",
    "end": "1626519"
  },
  {
    "text": "really fine-grained down to the method level shifting this traffic or you can do an entire API or you can do again",
    "start": "1626519",
    "end": "1631769"
  },
  {
    "text": "various different parts of it again pretty straightforward I have version one of my API I'd like to",
    "start": "1631769",
    "end": "1637950"
  },
  {
    "text": "I'd like to deploy version two so I could figure up in deploy version two on API gateway and I don't do anything with",
    "start": "1637950",
    "end": "1645989"
  },
  {
    "text": "my API clients they're going to a certain back-end and that's just gonna be there behind the scenes or the API",
    "start": "1645989",
    "end": "1652799"
  },
  {
    "text": "gateway definition stays the same from like a URL perspective and then whatever's going on in the backend is",
    "start": "1652799",
    "end": "1658019"
  },
  {
    "text": "separate and different and that's fine and now I could sit here and again we generate different logs and metrics for",
    "start": "1658019",
    "end": "1664289"
  },
  {
    "text": "the different versions of your API so I can go and compare and contrast against those and then if things don't look good",
    "start": "1664289",
    "end": "1670919"
  },
  {
    "text": "I can merely roll that back if they do look good then I can roll it forward and move on to v2 and again my clients don't",
    "start": "1670919",
    "end": "1677279"
  },
  {
    "text": "ever have to know what's shifting as part of this so really great for doing migrations I've seen customers want to",
    "start": "1677279",
    "end": "1683639"
  },
  {
    "text": "do it for trying out different languages hey we've traditionally written this API in Java we'd like to explore go on a",
    "start": "1683639",
    "end": "1690179"
  },
  {
    "text": "method by method basis you can move to go and change out the backends and so again harder to do without an API",
    "start": "1690179",
    "end": "1697769"
  },
  {
    "text": "gateway product so how can we do other things right how can we get our clients",
    "start": "1697769",
    "end": "1703289"
  },
  {
    "text": "to connect to our API now it's trivial to just publish an API definition until your developer customers if you produce",
    "start": "1703289",
    "end": "1709049"
  },
  {
    "text": "an external API or even internally to other teams here's an API spec go get them",
    "start": "1709049",
    "end": "1714690"
  },
  {
    "text": "but one thing that I really like is when companies actually produce client SDKs",
    "start": "1714690",
    "end": "1719909"
  },
  {
    "text": "and so with the API gateway we can create client SDKs of our API so assume",
    "start": "1719909",
    "end": "1726090"
  },
  {
    "start": "1725000",
    "end": "1725000"
  },
  {
    "text": "that I define my API in something like swagger now called open API which is a",
    "start": "1726090",
    "end": "1731129"
  },
  {
    "text": "template driven way for defining ap is kind of a standard so I defined my API to play",
    "start": "1731129",
    "end": "1737460"
  },
  {
    "text": "it up to API gateway I've got version 1.1 I can actually say hey API gateway give me an SDK or give me code in nodejs",
    "start": "1737460",
    "end": "1745980"
  },
  {
    "text": "that represents my AP is and it's going to give you a zip file that has all of the code that you need in nodejs",
    "start": "1745980",
    "end": "1752400"
  },
  {
    "text": "for basically all of the functions that are inside of your API and I could take that and I can wrap it up as an NPM I",
    "start": "1752400",
    "end": "1758880"
  },
  {
    "text": "could put that in some sort of NPM repo publicly or privately or I could put it in a lambda layer for example and then I",
    "start": "1758880",
    "end": "1765870"
  },
  {
    "text": "could tell my customers externally or internally hey here's version 1.1 nodejs client for",
    "start": "1765870",
    "end": "1771870"
  },
  {
    "text": "my api go and consume that and they consume that codebase points back at the API they don't have to know my API spec",
    "start": "1771870",
    "end": "1779100"
  },
  {
    "text": "they don't have to write a whole lot of code I'm giving them basically the keys to access this data over time I might",
    "start": "1779100",
    "end": "1785850"
  },
  {
    "text": "decide that I'm gonna release the next version of my API and so I just go through the same process you swagger",
    "start": "1785850",
    "end": "1791160"
  },
  {
    "text": "document upload it up to API gateway chin Arena new client SDK wrap it up as",
    "start": "1791160",
    "end": "1797040"
  },
  {
    "text": "an NPM or whatever or a layer publish it and away you go and so it's it's pretty",
    "start": "1797040",
    "end": "1802680"
  },
  {
    "text": "straightforward to do this but it's pretty powerful and I think that if you're building ap eyes that are meant to be consumed by not your organization",
    "start": "1802680",
    "end": "1808320"
  },
  {
    "text": "or even yourself generating an SDK will save you some time and being able to do that now the SDKs that API gateway",
    "start": "1808320",
    "end": "1815850"
  },
  {
    "text": "generates for you follow best practices that we have at AWS so by default they will do things like back off and retry",
    "start": "1815850",
    "end": "1821370"
  },
  {
    "text": "if you so configure it the code is there and so it's an interesting learning tool as well I would say now one thing that",
    "start": "1821370",
    "end": "1829380"
  },
  {
    "start": "1829000",
    "end": "1829000"
  },
  {
    "text": "we've recently done this happened right before we invent but we continue to put more capabilities into it is we",
    "start": "1829380",
    "end": "1835410"
  },
  {
    "text": "relaunched the API gateway developer portal and so this is something that you can use to expose to the customers of",
    "start": "1835410",
    "end": "1843210"
  },
  {
    "text": "your API publicly or privately and we've actually launched this as a service application so I am going to show that",
    "start": "1843210",
    "end": "1850470"
  },
  {
    "text": "to you now",
    "start": "1850470",
    "end": "1852980"
  },
  {
    "text": "so I can come back in here to the lambda console and go to functions great",
    "start": "1859330",
    "end": "1867020"
  },
  {
    "text": "function start this app repo let's see I type in are there remember the right",
    "start": "1867020",
    "end": "1888220"
  },
  {
    "text": "search phrase right here",
    "start": "1888220",
    "end": "1892090"
  },
  {
    "text": "easiest way to find it is Amazon API gateway developer portal and we'll find",
    "start": "1894590",
    "end": "1907760"
  },
  {
    "text": "out what's new I'll just go the documentation that's right and in the documentation here it",
    "start": "1907760",
    "end": "1915410"
  },
  {
    "text": "will link to the name for this second yeah cool so this is the the application",
    "start": "1915410",
    "end": "1926240"
  },
  {
    "text": "detail here in that's right it doesn't have the word developer the title just deaf portal sorry so this is the",
    "start": "1926240",
    "end": "1932210"
  },
  {
    "text": "application here in the service app repo again I can go in here and just click",
    "start": "1932210",
    "end": "1937490"
  },
  {
    "text": "deploy and it'll take you back into the console and I can find out all sorts of of aspects about this it has a bunch of",
    "start": "1937490",
    "end": "1945110"
  },
  {
    "text": "application settings it's got a rimi file that walks directly through all of it and what you end up getting after",
    "start": "1945110",
    "end": "1951590"
  },
  {
    "text": "this is deployed is a really",
    "start": "1951590",
    "end": "1957440"
  },
  {
    "text": "sophisticated stateless application it's actually a really great example of a full-fledged service application that",
    "start": "1957440",
    "end": "1963200"
  },
  {
    "text": "has 31 resources that come out of it api gateway definition a whole bunch of",
    "start": "1963200",
    "end": "1968750"
  },
  {
    "text": "lambda functions Cognito user pools and s3 buckets and so it lives in an s3",
    "start": "1968750",
    "end": "1974690"
  },
  {
    "text": "bucket and so i think if i remember",
    "start": "1974690",
    "end": "1980990"
  },
  {
    "text": "where second here if I come and get the",
    "start": "1980990",
    "end": "1988100"
  },
  {
    "text": "outputs for it that's right this is the CloudFormation console just watches via Sam that's right",
    "start": "1988100",
    "end": "1999680"
  },
  {
    "text": "sorry I broke this earlier anyway you can come and find this here and launch",
    "start": "1999680",
    "end": "2005080"
  },
  {
    "text": "it pretty tribute I again linked out of the docks but the Deaf portal is really powerful so you can go through and",
    "start": "2005080",
    "end": "2011190"
  },
  {
    "text": "publish an API for it we're working on a lot of other capabilities so it has full documentation has things like keys that",
    "start": "2011190",
    "end": "2018520"
  },
  {
    "text": "you can generate for developer customers and so I would definitely encourage you to take a look at the developer portal",
    "start": "2018520",
    "end": "2024280"
  },
  {
    "text": "we're gonna be adding a whole lot more functionality to this real soon team's cranking away on it and so this is",
    "start": "2024280",
    "end": "2030010"
  },
  {
    "text": "something that is is pretty new in terms of API gateway okay couple of things",
    "start": "2030010",
    "end": "2039280"
  },
  {
    "text": "here about APA gateway I always like to say that you can't move fast if you're not measuring what you're doing as a",
    "start": "2039280",
    "end": "2045730"
  },
  {
    "text": "former operations person as a former",
    "start": "2045730",
    "end": "2054760"
  },
  {
    "text": "operations devops is kind of person and I've spent a lot of time building out metrics logging and monitoring systems I",
    "start": "2054760",
    "end": "2060250"
  },
  {
    "text": "am really happy that this stuff is all built into the service ecosystem today and so inside of both API gateway and",
    "start": "2060250",
    "end": "2067898"
  },
  {
    "start": "2067000",
    "end": "2067000"
  },
  {
    "text": "lambda we capture a number of metrics for you they're just generally made available and can be consumed inside of",
    "start": "2067899",
    "end": "2075550"
  },
  {
    "text": "lambda code you can also create custom metrics using the cloud watch metrics API call for put metric data in terms of",
    "start": "2075550",
    "end": "2083379"
  },
  {
    "text": "logging it's the same way so API gateway actually has a number of capabilities for capturing log data for you you can",
    "start": "2083380",
    "end": "2090970"
  },
  {
    "text": "specify the level of the logging so error or info or both of them you could",
    "start": "2090970",
    "end": "2095980"
  },
  {
    "text": "also capture full-body request content though I would caution you that this",
    "start": "2095980",
    "end": "2101020"
  },
  {
    "text": "could be a lot of data to store for a really busy API and you do pay for logs so you want to turn that on when you're",
    "start": "2101020",
    "end": "2106480"
  },
  {
    "text": "doing debugging but potentially not all of the time and this could be configured at this stage or per method",
    "start": "2106480",
    "end": "2113050"
  },
  {
    "text": "so really fine-grained if you want to say do what I mentioned before about transition single API method to a new back-end you",
    "start": "2113050",
    "end": "2119950"
  },
  {
    "text": "can specifically turn on full capture for that and be able to get that information lambda similarly has access to to",
    "start": "2119950",
    "end": "2127359"
  },
  {
    "text": "logging as well captures anything that's just output and then you can do things in cloud watch logs such as what's",
    "start": "2127359",
    "end": "2133869"
  },
  {
    "text": "called log pivots which allows you to generate essentially a regex or a regular expression that can pull data",
    "start": "2133869",
    "end": "2140319"
  },
  {
    "text": "out of your log lines and generate metrics and alarms based on that and then dive into those and the other thing",
    "start": "2140319",
    "end": "2146079"
  },
  {
    "text": "is is that it's really easy to take those logs and then put them into I'm",
    "start": "2146079",
    "end": "2151359"
  },
  {
    "text": "sorry this should say elastic search for s3 and then look at them with things like Cabana or ethene or quick site now",
    "start": "2151359",
    "end": "2160810"
  },
  {
    "start": "2160000",
    "end": "2160000"
  },
  {
    "text": "integrated into API gateway and I think it's really pertinent for API gateway is something called a table x-ray and so 80",
    "start": "2160810",
    "end": "2168250"
  },
  {
    "text": "of us x-ray allows you to do profiling a tracing of calls in a distributed system",
    "start": "2168250",
    "end": "2173319"
  },
  {
    "text": "so you know thinking about that 235 services that make up s3 knowing how",
    "start": "2173319",
    "end": "2180130"
  },
  {
    "text": "traffic and how requests are flowing through some number of those is really important and so with x-ray which is",
    "start": "2180130",
    "end": "2186940"
  },
  {
    "text": "supported in apa gateway it's supported in lambda a number of other AWS services we actually can see a map of what the",
    "start": "2186940",
    "end": "2194109"
  },
  {
    "text": "request flow looks like from a service call perspective across different services so this can be really useful",
    "start": "2194109",
    "end": "2200380"
  },
  {
    "text": "for understanding where there might be failures or issues you can see histograms or performance and be able to",
    "start": "2200380",
    "end": "2206770"
  },
  {
    "text": "go back and look at what failed when and potentially why and so it shows you this this cool little graphic that you see",
    "start": "2206770",
    "end": "2212170"
  },
  {
    "text": "here this service map it also gives you a waterfall view of calls that were made inside of the flow so if I had an API",
    "start": "2212170",
    "end": "2218619"
  },
  {
    "start": "2214000",
    "end": "2214000"
  },
  {
    "text": "gateway based example here you would see the first service being a PA gateway that talks to a lambda function that",
    "start": "2218619",
    "end": "2224650"
  },
  {
    "text": "maybe talks with database and I can capture that full flow of calls and see how it's performed over time now I",
    "start": "2224650",
    "end": "2231940"
  },
  {
    "text": "mentioned this pretty briefly before that I again with API gateway there are",
    "start": "2231940",
    "end": "2237280"
  },
  {
    "text": "lots of people that are using it without lambda it is not just tied to lambda and for api's and api definitions in general",
    "start": "2237280",
    "end": "2244960"
  },
  {
    "text": "there was a tool called swagger that's become very popular in industry in version 3 renamed itself to the oppa",
    "start": "2244960",
    "end": "2251200"
  },
  {
    "text": "API specification or OS for short and you can use this to define out your AP",
    "start": "2251200",
    "end": "2256810"
  },
  {
    "text": "is now when you use Sam to set up a service application we actually generate behind the scenes swagger text for you",
    "start": "2256810",
    "end": "2264760"
  },
  {
    "text": "in cloud formation you can actually embed swagger into cloud formation but you can create this yourself to define",
    "start": "2264760",
    "end": "2270940"
  },
  {
    "text": "your api's and there are a number of testing tools monitoring tools security",
    "start": "2270940",
    "end": "2276790"
  },
  {
    "text": "tools that will take a swagger document and do things like generate a test suite generate monitoring generate security",
    "start": "2276790",
    "end": "2284470"
  },
  {
    "text": "tests or validation and so swagger / open api is really great it's the",
    "start": "2284470",
    "end": "2291250"
  },
  {
    "text": "Extender specification for this and so encourage you to take a look at this just for you know interfacing with a",
    "start": "2291250",
    "end": "2296859"
  },
  {
    "text": "third party world that's out there so let's go again real quick here and pop",
    "start": "2296859",
    "end": "2302380"
  },
  {
    "text": "out and hop into the API gateway console we spent a lot of time here today in the",
    "start": "2302380",
    "end": "2308650"
  },
  {
    "text": "lambda console but here in the API gateway console there are all sorts of",
    "start": "2308650",
    "end": "2314260"
  },
  {
    "text": "things you can do so we can see here I have a whole lot of different API is defined you know earlier before we were",
    "start": "2314260",
    "end": "2319960"
  },
  {
    "text": "talking about layers in runtime I showed you that I had a PHP API and it was a",
    "start": "2319960",
    "end": "2324970"
  },
  {
    "text": "really basic thing it has a single resource just slash of my URL and then",
    "start": "2324970",
    "end": "2330819"
  },
  {
    "text": "it supports any call that I want to make to it in terms of HT peak also puts gets the leads post etc now we've got other",
    "start": "2330819",
    "end": "2338770"
  },
  {
    "text": "api's that are a bit more sophisticated let me go find something here well for",
    "start": "2338770",
    "end": "2345849"
  },
  {
    "text": "example we have our magic 8-ball which had the route for 8-ball as well as in any see if I can find it slightly meteor",
    "start": "2345849",
    "end": "2354880"
  },
  {
    "text": "example I have another API here but let's actually dive in look at how these",
    "start": "2354880",
    "end": "2360280"
  },
  {
    "text": "are configured so again this is the resource I just have a singer call that I suppose that I support here for slash",
    "start": "2360280",
    "end": "2365890"
  },
  {
    "text": "in terms of stages I have a prod stage and a stage that's just called stage and",
    "start": "2365890",
    "end": "2372609"
  },
  {
    "text": "I can go and dive into that if I want to set for specific types of HTTP calls how",
    "start": "2372609",
    "end": "2378640"
  },
  {
    "text": "I should respond and what I should do in this case it just inherits it from the overall stage",
    "start": "2378640",
    "end": "2385078"
  },
  {
    "text": "and the overall stage level this is where I can go in and set things like cache settings I could change the way",
    "start": "2385940",
    "end": "2392160"
  },
  {
    "text": "that logging and tracing happens I could set up stage variables I could do SDK generation I do document history sort of",
    "start": "2392160",
    "end": "2399360"
  },
  {
    "text": "Canaries all sorts of stuff like that I could also come in and do things like shape gateway responses so let's say",
    "start": "2399360",
    "end": "2406890"
  },
  {
    "text": "that you were putting an APN gateway in front of a legacy API and that legacy API doesn't do the best things sometimes",
    "start": "2406890",
    "end": "2413460"
  },
  {
    "text": "you may actually want a service to respond with a 200 code and an error message versus a 400 code which would",
    "start": "2413460",
    "end": "2421080"
  },
  {
    "text": "potentially cause a failure in a client just as an example so you can come in you can configure all of the HTTP",
    "start": "2421080",
    "end": "2426150"
  },
  {
    "text": "requests and responses you can model different types of mappings for things I",
    "start": "2426150",
    "end": "2431400"
  },
  {
    "text": "have a good example of that here and then obviously there's a dashboard in here for seeing what's going on in this",
    "start": "2431400",
    "end": "2436740"
  },
  {
    "text": "API so lots of information that you can get from this lots of things that you",
    "start": "2436740",
    "end": "2442290"
  },
  {
    "text": "can set and configure inside of this and so a valuable place to become familiar",
    "start": "2442290",
    "end": "2447600"
  },
  {
    "text": "with",
    "start": "2447600",
    "end": "2449990"
  },
  {
    "text": "cool so just wrapping up you know again we've talked about a number of different aspects around API is already here today",
    "start": "2459320",
    "end": "2465170"
  },
  {
    "start": "2462000",
    "end": "2462000"
  },
  {
    "text": "but the importance of API is in the industry and how people are building software I think is still even kind of",
    "start": "2465170",
    "end": "2471410"
  },
  {
    "text": "in the early days there's still companies that I think aren't paying attention to the importance of how to think about building api's but again the",
    "start": "2471410",
    "end": "2479240"
  },
  {
    "text": "devices we wear the technologies we interface with the companies that have shaped the various different industries",
    "start": "2479240",
    "end": "2484810"
  },
  {
    "text": "that are out there are building api's and there's a good chance that it's something you'll have to become familiar with benefits of things like api gateway",
    "start": "2484810",
    "end": "2492920"
  },
  {
    "text": "in terms of there not being infrastructure that you have to manage automatic scale paying for the value that you get for it so not paying for",
    "start": "2492920",
    "end": "2499220"
  },
  {
    "text": "idle obviously incredibly important lots of different integrations for authentication authorization getting the",
    "start": "2499220",
    "end": "2505970"
  },
  {
    "text": "various capabilities about supporting different types of how the api is exposed edge regional and private",
    "start": "2505970",
    "end": "2512330"
  },
  {
    "text": "different backends so EC 2 containers lambda anything out there on the",
    "start": "2512330",
    "end": "2517700"
  },
  {
    "text": "internet means that you've got a lot of different things that you can do with api gateway just like I was with a lot",
    "start": "2517700",
    "end": "2524330"
  },
  {
    "text": "of the other stuff we talked about here today you can find out this and more about the API gateway building api's on",
    "start": "2524330",
    "end": "2529940"
  },
  {
    "text": "AWS to amazon.com slash server lists again if you look at the white bar up there you'll find access or you'll find",
    "start": "2529940",
    "end": "2536510"
  },
  {
    "text": "links to things like the application repository developer tools resources various partners and stuff that exists",
    "start": "2536510",
    "end": "2543050"
  },
  {
    "text": "and so like in the resources for example you'll find all sorts of getting started stuff for building api's and managing",
    "start": "2543050",
    "end": "2548240"
  },
  {
    "text": "api's so encourage you to check that out again my name is Chris Munn so you can find me at months at amazon.com or",
    "start": "2548240",
    "end": "2554030"
  },
  {
    "text": "actress moans on Twitter I we're not done here today we're gonna start up here at 3:15 here Pacific time talking",
    "start": "2554030",
    "end": "2562820"
  },
  {
    "text": "about step functions but for now we're going to take a quick little break and come back to that thank you for everyone",
    "start": "2562820",
    "end": "2568190"
  },
  {
    "text": "who's joined us here remotely on Twitch again we'll be right back real soon here with the rest of our day and for those",
    "start": "2568190",
    "end": "2574100"
  },
  {
    "text": "of you here physically in the loft thanks appreciate you being here and hope you stick around for the last session so thank you",
    "start": "2574100",
    "end": "2581350"
  },
  {
    "text": "you",
    "start": "2581410",
    "end": "2583470"
  }
]