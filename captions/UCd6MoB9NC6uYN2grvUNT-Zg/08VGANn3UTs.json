[
  {
    "text": "hello welcome i'm chris barclay the product manager for opsworks and thank you very much for joining us today",
    "start": "799",
    "end": "6080"
  },
  {
    "text": "on our webinar about continuous integration and deployment we're going to show you a few features we just launched last week as well",
    "start": "6080",
    "end": "12960"
  },
  {
    "text": "as part of this webinar and look forward to telling you a little bit about the service first",
    "start": "12960",
    "end": "18000"
  },
  {
    "text": "and then jumping right into a demonstration",
    "start": "18000",
    "end": "22480"
  },
  {
    "text": "so just a quick background and feel free while you're doing this while i'm speaking if you",
    "start": "25599",
    "end": "31199"
  },
  {
    "text": "have any questions or any problems please use the chat feature in the side panel to just send us your your",
    "start": "31199",
    "end": "38719"
  },
  {
    "text": "questions or comments so opsworks is a devops application management solution",
    "start": "38719",
    "end": "44559"
  },
  {
    "text": "if you develop or manage applications you know they can be pretty complex and not just to code there's operational",
    "start": "44559",
    "end": "50239"
  },
  {
    "text": "responsibilities too these tasks need to be predictable there's nothing worse than trying to diagnose an operational problem in your",
    "start": "50239",
    "end": "56559"
  },
  {
    "text": "live application you want to be able to configure and control any aspect of your app and you need a tool that's powerful and",
    "start": "56559",
    "end": "62960"
  },
  {
    "text": "flexible enough to support a wide range of application architectures you also probably want something that's easy to use",
    "start": "62960",
    "end": "70479"
  },
  {
    "text": "now once upon a time we used to hand craft our environments everything from provisioning hardware to",
    "start": "70880",
    "end": "76640"
  },
  {
    "text": "creating database tables and that can be nice when you have the time but it's hard to ensure repeatability",
    "start": "76640",
    "end": "82159"
  },
  {
    "text": "and especially at scale what we really want is to have consistency as we scale",
    "start": "82159",
    "end": "89040"
  },
  {
    "text": "and everything's going to come out to be exactly the same and so how do we do this well we use",
    "start": "89040",
    "end": "95119"
  },
  {
    "text": "recipes to describe how to configure our environment and automation to ensure consistency across",
    "start": "95119",
    "end": "100400"
  },
  {
    "text": "all of our resources so you might think of code as really the output of what your developers create that runs your service",
    "start": "100400",
    "end": "107680"
  },
  {
    "text": "but it's also the configuration of your environment in the servers of the software runs on making sure that all this code works",
    "start": "107680",
    "end": "113680"
  },
  {
    "text": "together and is predictable is an important aspect of coding in the cloud",
    "start": "113680",
    "end": "119119"
  },
  {
    "text": "we developed opsworks for you opsworks is an integrated application management solution that brings together",
    "start": "120479",
    "end": "126159"
  },
  {
    "text": "the a la carte solutions offered by aws it brings together all the tools you need to manage your application",
    "start": "126159",
    "end": "131760"
  },
  {
    "text": "and perhaps best of all you only pay for the resources that you use opsworks itself is free",
    "start": "131760",
    "end": "138720"
  },
  {
    "text": "so what are the benefits of using opsworks well simply put opsworks makes your life easier because",
    "start": "140080",
    "end": "145680"
  },
  {
    "text": "it's simple it includes a management console clis and sdks and built-in support for frameworks and common tasks",
    "start": "145680",
    "end": "152800"
  },
  {
    "text": "it also makes you more productive it provides an integrated experience to model and reproduce the application",
    "start": "152800",
    "end": "157840"
  },
  {
    "text": "configuration reliably it's flexible it supports a wide variety of application architectures",
    "start": "157840",
    "end": "163440"
  },
  {
    "text": "and any software that has a scripted installation it's powerful it includes an event-driven",
    "start": "163440",
    "end": "168640"
  },
  {
    "text": "configuration system with support for customizable deployments rollback patch management auto scaling",
    "start": "168640",
    "end": "173760"
  },
  {
    "text": "and more and finally a secure we've created default security groups so that you don't have to worry about",
    "start": "173760",
    "end": "179040"
  },
  {
    "text": "setting those up yourself and you can extend this with you on your own as well as manage imuser permissions",
    "start": "179040",
    "end": "184800"
  },
  {
    "text": "with fine grained permissions like sudo and ssh writes on the instances per user",
    "start": "184800",
    "end": "190879"
  },
  {
    "text": "so it's probably worth covering the aws deployment options so you understand what opsworks provides",
    "start": "192400",
    "end": "198000"
  },
  {
    "text": "each option provides a choice of flexibility speed and control omis are fast to boot but they can take",
    "start": "198000",
    "end": "204640"
  },
  {
    "text": "more time to bake in your changes tools like the elastic theme stock let you take advantage of pre-configured",
    "start": "204640",
    "end": "210959"
  },
  {
    "text": "armies and dynamically update your code and then opsworks lets you build from a base army and layer in",
    "start": "210959",
    "end": "217360"
  },
  {
    "text": "your changes using chef recipes so let's give you a little bit more",
    "start": "217360",
    "end": "223280"
  },
  {
    "text": "background on each of the application management services that aws offers i'll briefly introduce",
    "start": "223280",
    "end": "230000"
  },
  {
    "text": "what each application management service does and describe how optics works is different and it really comes down to the level of",
    "start": "230000",
    "end": "235439"
  },
  {
    "text": "convenience and control that you need elastic beam stock is an easy to use solution for building web apps",
    "start": "235439",
    "end": "241439"
  },
  {
    "text": "and web services with popular application containers such as java php python ruby and net if you want to upload your code and",
    "start": "241439",
    "end": "248400"
  },
  {
    "text": "go and don't need to customize your environment much beamstock may be for you on the other",
    "start": "248400",
    "end": "254159"
  },
  {
    "text": "side cloud formation is a building block service that lets you provision and manage almost any aws resource via a",
    "start": "254159",
    "end": "259680"
  },
  {
    "text": "domain-specific language it's powerful that it requires you to author templates in that domain-specific",
    "start": "259680",
    "end": "265040"
  },
  {
    "text": "language and it doesn't provide out-of-the-box functionality for applications like deployments aws opsworks is a",
    "start": "265040",
    "end": "272000"
  },
  {
    "text": "powerful end-to-end solution that gives you an easy way to manage applications of nearly any scale and complexity",
    "start": "272000",
    "end": "277759"
  },
  {
    "text": "without sacrificing control it features an integrated experience for managing the complete application life cycle",
    "start": "277759",
    "end": "283919"
  },
  {
    "text": "including resource provisioning configuration management application deployment software updates",
    "start": "283919",
    "end": "289600"
  },
  {
    "text": "monitoring and access controls so let me just take you through a little",
    "start": "289600",
    "end": "295680"
  },
  {
    "text": "bit of what we're going to show you in the demonstration we're first going to model our application starting with a stack that",
    "start": "295680",
    "end": "301600"
  },
  {
    "text": "contains all the resources we're going to use next we'll create a layer a layer is a",
    "start": "301600",
    "end": "307440"
  },
  {
    "text": "blueprint for how we configure the ec2 instances that we're using for a common purpose we're going to create a php layer for",
    "start": "307440",
    "end": "313600"
  },
  {
    "text": "our php app then we'll create some instances and deploy our application onto it",
    "start": "313600",
    "end": "320720"
  },
  {
    "text": "now our application like mini needs to connect to a database for persistence",
    "start": "320720",
    "end": "325919"
  },
  {
    "text": "how do we create and configure the database and then make sure our app connects to it the old way would be to create the",
    "start": "325919",
    "end": "331440"
  },
  {
    "text": "database tables by hand and bake the connection information into our application code",
    "start": "331440",
    "end": "336639"
  },
  {
    "text": "but this is error-prone because you can miss a step or later forget what you did when you need to recreate it and so what",
    "start": "336639",
    "end": "342160"
  },
  {
    "text": "we really want is for configuration information such as user creation and all the metadata about the database to be",
    "start": "342160",
    "end": "348320"
  },
  {
    "text": "managed like our source code that way we can always roll it back if there are changes that don't work unfortunately chef gives us a way to do",
    "start": "348320",
    "end": "355039"
  },
  {
    "text": "this so opsworks triggers events during the application life cycle",
    "start": "355039",
    "end": "360960"
  },
  {
    "text": "such as when your instance is provisioned or an application is deployed and this lets you perform specific",
    "start": "360960",
    "end": "366160"
  },
  {
    "text": "configuration tasks using chef recipes that are attached to those events metadata is automatically generated by",
    "start": "366160",
    "end": "372400"
  },
  {
    "text": "opsworks for such information as the instances that are running in a layer and layer specific parameters you can",
    "start": "372400",
    "end": "378240"
  },
  {
    "text": "also specify metadata yourself that's passed to the recipes let's take a look at an example recipe",
    "start": "378240",
    "end": "385440"
  },
  {
    "text": "so we probably need to connect to our database table for all the information our app is going to generate and we could do that",
    "start": "386479",
    "end": "393280"
  },
  {
    "text": "by hand but we'd like to automate it to ensure repeatability so we write a recipe",
    "start": "393280",
    "end": "398400"
  },
  {
    "text": "the recipe would be brittle if we hard-coded information like the use name and database name so we define it in metadata and pass it to the recipes",
    "start": "398400",
    "end": "405440"
  },
  {
    "text": "chef takes the metadata and plugs it into the recipe we can see for example that the deploy my thp app database",
    "start": "405440",
    "end": "414240"
  },
  {
    "text": "becomes root in abc xyz and then that gets put into the command",
    "start": "414240",
    "end": "420840"
  },
  {
    "text": "below now let's talk a little bit about the demonstration that i'm going to show",
    "start": "420840",
    "end": "427120"
  },
  {
    "text": "we're talking in this demonstration about integrating your development pipeline to improve reliability",
    "start": "427120",
    "end": "432880"
  },
  {
    "text": "so you can automate your entire entire build process first deploying to a staging environment that mirrors production",
    "start": "432880",
    "end": "438720"
  },
  {
    "text": "and then when your integration tests pass deploy to production you can easily spin up parallel",
    "start": "438720",
    "end": "443840"
  },
  {
    "text": "production environments and migrate traffic incrementally so it's easy to roll back if there's problems in this demonstration we're going to",
    "start": "443840",
    "end": "449840"
  },
  {
    "text": "show making a change inside a git repository having that kick off a jenkins build an",
    "start": "449840",
    "end": "455280"
  },
  {
    "text": "integration test and then automatically deploying that to staging we'll then come back and talk a",
    "start": "455280",
    "end": "460639"
  },
  {
    "text": "little bit about how you might kick that off to production so our um our environment looks a little",
    "start": "460639",
    "end": "467440"
  },
  {
    "text": "bit like this we have round53 that's managing an a record for our our environment it points to an elb",
    "start": "467440",
    "end": "476160"
  },
  {
    "text": "and that elb points to instances in our app server tier and then they connect to mysql database",
    "start": "476160",
    "end": "483280"
  },
  {
    "text": "and you could use rds mysql database or run it on on opsworks layer whichever you prefer",
    "start": "483280",
    "end": "491199"
  },
  {
    "text": "so let's just go ahead and jump into the demonstration so i'm going to go ahead and add a stack",
    "start": "491199",
    "end": "498960"
  },
  {
    "text": "let's call this my test stack",
    "start": "498960",
    "end": "506479"
  },
  {
    "text": "and we have a choice of operating systems we can choose amazon linux or ubuntu uh we can choose the region we want this",
    "start": "506479",
    "end": "512479"
  },
  {
    "text": "stack to be built in we can choose the default availability zone which we can override later and we",
    "start": "512479",
    "end": "518240"
  },
  {
    "text": "probably want to for our php app server tier so we can have multiple servers and different availability zones",
    "start": "518240",
    "end": "523279"
  },
  {
    "text": "all being routed from our elb we can choose to have a default ssh key",
    "start": "523279",
    "end": "529120"
  },
  {
    "text": "for all the instances in our stack or we can assign ssh keys for individual",
    "start": "529120",
    "end": "534320"
  },
  {
    "text": "users and we'll talk a little bit more about that we can choose what we'd like to have for",
    "start": "534320",
    "end": "539519"
  },
  {
    "text": "our our storage do we want to have an instance store or use ebs",
    "start": "539519",
    "end": "544560"
  },
  {
    "text": "and then we can choose to point to some custom chef's cookbooks and that's what i'm going to do here i'm going to show you the",
    "start": "544560",
    "end": "551519"
  },
  {
    "text": "checkbook books we're going to use to get these instances configured and here's where my my cookbooks reside",
    "start": "551519",
    "end": "558640"
  },
  {
    "text": "so i'm going to go ahead and get my git url here and paste it into my repository",
    "start": "558640",
    "end": "566080"
  },
  {
    "text": "url and then i'm going to go ahead and come down here and add the stack",
    "start": "566080",
    "end": "574160"
  },
  {
    "text": "now the next thing i want to do is create some layers and so the layers that i want are things",
    "start": "574720",
    "end": "580480"
  },
  {
    "text": "like the app server so i'm going to use php since that's the application that i've written",
    "start": "580480",
    "end": "585839"
  },
  {
    "text": "i also can set up other layer types so i for example could create a ganglia",
    "start": "585839",
    "end": "591360"
  },
  {
    "text": "monitoring server memcache servers these are really as i mentioned just templates for how i'm going to be",
    "start": "591360",
    "end": "599040"
  },
  {
    "text": "setting up the instances that are associated with this layer i'm going to go ahead and add the layer",
    "start": "599040",
    "end": "606640"
  },
  {
    "text": "and i'm going to go ahead and create some instances that are associated with this layer",
    "start": "607040",
    "end": "612160"
  },
  {
    "text": "so i can go ahead and create instances of various sizes and i'll go ahead and add this instance",
    "start": "612399",
    "end": "618160"
  },
  {
    "text": "and get it started now let's take a look at what the layer is in a little bit more detail so that",
    "start": "618160",
    "end": "625120"
  },
  {
    "text": "we can understand what opsworks is doing for us so a layer consists of a number of",
    "start": "625120",
    "end": "630959"
  },
  {
    "text": "built-in chef recipes that opsworks handles on your behalf and this gets the basic setup for the",
    "start": "630959",
    "end": "636720"
  },
  {
    "text": "instances for the particular layer type so you can see for example that ops works on the setup event which is when",
    "start": "636720",
    "end": "643040"
  },
  {
    "text": "the instance is coming up installs some some things like apache and uh",
    "start": "643040",
    "end": "648640"
  },
  {
    "text": "and in that apache it actually uh installs php and if we were to click on this we could",
    "start": "648640",
    "end": "653760"
  },
  {
    "text": "see the actual recipe that opsworks is executing for us so if you're kind of curious about what",
    "start": "653760",
    "end": "659040"
  },
  {
    "text": "opsworks is doing this is all available in github and you can take a look at exactly what opsworks is doing",
    "start": "659040",
    "end": "664959"
  },
  {
    "text": "with the built-in recipes you can also put your own custom shop recipes in here if you want to extend or",
    "start": "664959",
    "end": "672399"
  },
  {
    "text": "or change the behavior of the layer and we're going to do that in this instance we're going to go ahead and",
    "start": "672399",
    "end": "677920"
  },
  {
    "text": "take a look at the php app recipes and we have",
    "start": "677920",
    "end": "684160"
  },
  {
    "text": "an app setup recipe which basically will configure this application to talk to my database",
    "start": "684160",
    "end": "691360"
  },
  {
    "text": "so let's go ahead and we'll add that to the stack",
    "start": "691360",
    "end": "696079"
  },
  {
    "text": "then we can also see some other parameters that i have for my layer so i can choose to have",
    "start": "700399",
    "end": "706800"
  },
  {
    "text": "an elastic load balancer that i've configured load balancing traffic for my layer and as i mentioned we're going to we'll",
    "start": "706800",
    "end": "713200"
  },
  {
    "text": "be doing that for this demonstration i can also attach eds volumes to",
    "start": "713200",
    "end": "718560"
  },
  {
    "text": "instances in my layer so if i need persistent storage and i want to have it mounted at a certain place like vol data",
    "start": "718560",
    "end": "724880"
  },
  {
    "text": "then i can go ahead and select the mount point what raid level i want um",
    "start": "724880",
    "end": "730560"
  },
  {
    "text": "how much storage i want per disk and just click that that add button and",
    "start": "730560",
    "end": "738240"
  },
  {
    "text": "then new instances that are created in this layer will will have the that characteristic it'll have an evs volume created",
    "start": "738240",
    "end": "744720"
  },
  {
    "text": "i can also choose to have elastic ips associated with these instances now this probably isn't very necessary",
    "start": "744720",
    "end": "751279"
  },
  {
    "text": "since i'm going to put an elastic load balancer in front of these instances so i'm not going to bother with assigning an eip",
    "start": "751279",
    "end": "756399"
  },
  {
    "text": "but that options available for you and then we can install various operating system packages that aren't",
    "start": "756399",
    "end": "762079"
  },
  {
    "text": "already handled by opsworks so maybe for example you want to install",
    "start": "762079",
    "end": "767760"
  },
  {
    "text": "you know mysql client or something like that you can go ahead and type those package names in and add them and",
    "start": "767760",
    "end": "774000"
  },
  {
    "text": "opsworks we'll we'll go ahead and take care of installing those packages for you as well",
    "start": "774000",
    "end": "779199"
  },
  {
    "text": "you can see that we have a default security group for um for this layer type and you can go ahead and add additional",
    "start": "779680",
    "end": "785519"
  },
  {
    "text": "security groups if you want or you can of course change the behavior of these security groups",
    "start": "785519",
    "end": "790560"
  },
  {
    "text": "inside the ec2 security group console and there's something called auto",
    "start": "790560",
    "end": "796959"
  },
  {
    "text": "healing which allows us to if the instance for some reason stops functioning",
    "start": "796959",
    "end": "802560"
  },
  {
    "text": "we can go ahead and stop and restart this instance which for a php app server is a fine thing",
    "start": "802560",
    "end": "808639"
  },
  {
    "text": "since you're basically horizontally scaling these so let's go ahead and we'll save the the",
    "start": "808639",
    "end": "815040"
  },
  {
    "text": "change that i made to this layer let's talk a little bit about apps so now that i've configured the software",
    "start": "815040",
    "end": "822000"
  },
  {
    "text": "for my ec2 instance i'm going to want to deploy my app my app or apps to that php app server",
    "start": "822000",
    "end": "828560"
  },
  {
    "text": "so let's go ahead and configure my app and it's a php app that's going to be",
    "start": "828560",
    "end": "836480"
  },
  {
    "text": "going to my php app server and for my application my document root is",
    "start": "836480",
    "end": "842240"
  },
  {
    "text": "at web i also have the stored in a git repository but i could be using um",
    "start": "842240",
    "end": "847440"
  },
  {
    "text": "my own git repository i don't have to use github i could use if i get you know maybe located inside my own",
    "start": "847440",
    "end": "853519"
  },
  {
    "text": "data center i could connect it to that subversion i could also use http",
    "start": "853519",
    "end": "858800"
  },
  {
    "text": "or s3 archives so it's very flexible the repository types that you have and of",
    "start": "858800",
    "end": "864399"
  },
  {
    "text": "course if we don't support something here and you want to still use it then check gives you a very wide variety of ways to",
    "start": "864399",
    "end": "872000"
  },
  {
    "text": "to go ahead and pull your your source code down as well so that's another way to do it so here's my",
    "start": "872000",
    "end": "878800"
  },
  {
    "text": "my app source code so i'm going to go ahead and get the get url for this as well and paste that",
    "start": "878800",
    "end": "884800"
  },
  {
    "text": "right into my repository url and um then we can see that if i had",
    "start": "884800",
    "end": "890880"
  },
  {
    "text": "this in a specific branch or revision number i could i could type that in here and so that's how you could",
    "start": "890880",
    "end": "896320"
  },
  {
    "text": "move from release to release is by changing the",
    "start": "896320",
    "end": "902399"
  },
  {
    "text": "the revision number and i'm going to go ahead and create add an app",
    "start": "902399",
    "end": "909760"
  },
  {
    "text": "so now that i have my app and i have my my layers let's talk a little",
    "start": "910320",
    "end": "916720"
  },
  {
    "text": "bit about how i can get this app onto my instances so what we'll want to do is we'll want",
    "start": "916720",
    "end": "922959"
  },
  {
    "text": "to create a deployment so we can deploy this app to uh to my instance or instances",
    "start": "922959",
    "end": "929120"
  },
  {
    "text": "so let's go ahead and i have a stack that's uh that's already kind of up and running let's take a look at um and how i could",
    "start": "929120",
    "end": "936240"
  },
  {
    "text": "do this so basically i could do it manually by clicking on this deploy and app button",
    "start": "936240",
    "end": "941759"
  },
  {
    "text": "and this would let me deploy my app to the instances in my in my um for my php app server",
    "start": "941759",
    "end": "948800"
  },
  {
    "text": "tier but what we want to do here is we want to automate that and so instead of having to come to",
    "start": "948800",
    "end": "954480"
  },
  {
    "text": "the screen and do it um each time um like you know i wanted to make a deployment instead i hooked it up to my",
    "start": "954480",
    "end": "960800"
  },
  {
    "text": "jenkins build system and i hooked jenkins up to my um my github repository so that there's",
    "start": "960800",
    "end": "968000"
  },
  {
    "text": "events triggered when i um when i make changes uh when i check in my code and um so this allows me to kind of have",
    "start": "968000",
    "end": "974639"
  },
  {
    "text": "a continuous uh process for my staging servers and so let's go ahead and we'll show how",
    "start": "974639",
    "end": "980000"
  },
  {
    "text": "all that works by going into my source repo and making a change so let's go ahead and",
    "start": "980000",
    "end": "988639"
  },
  {
    "text": "take a look at my app dot php",
    "start": "988639",
    "end": "997040"
  },
  {
    "text": "let's take a look at what's currently been deployed so if i go back to my environment here",
    "start": "997040",
    "end": "1003279"
  },
  {
    "text": "we can see on my layers that i have an elb that's that's connected to my php app server",
    "start": "1003279",
    "end": "1010160"
  },
  {
    "text": "and this this elb",
    "start": "1010160",
    "end": "1016320"
  },
  {
    "text": "is is the way i want to go ahead and connect to",
    "start": "1016639",
    "end": "1022079"
  },
  {
    "text": "to those instances and i as i mentioned to you too i have route 53 that's connecting to that elb so let's",
    "start": "1022079",
    "end": "1027600"
  },
  {
    "text": "go ahead and just go to my um",
    "start": "1027600",
    "end": "1032079"
  },
  {
    "text": "my elb excuse my rough d3 a record and we can see that that just connects to my my uh",
    "start": "1033760",
    "end": "1040959"
  },
  {
    "text": "eob and then therefore to the the instances running in this layer so now if i wanted to change this maybe",
    "start": "1040959",
    "end": "1048000"
  },
  {
    "text": "make it a little more emphatic so i let's go ahead and just change it from being a series of of dots thereafter your thoughts to",
    "start": "1048000",
    "end": "1055280"
  },
  {
    "text": "being something like an exclamation point let's go ahead and and just make that simple change",
    "start": "1055280",
    "end": "1061120"
  },
  {
    "text": "i'll uh change that i'll go ahead and commit the changes",
    "start": "1061120",
    "end": "1067679"
  },
  {
    "text": "and now that commit should have should be kicking off a build in jenkins which i can see that it is",
    "start": "1067679",
    "end": "1075039"
  },
  {
    "text": "and that build basically is going to go through and run integration tests that i've defined",
    "start": "1075039",
    "end": "1080400"
  },
  {
    "text": "and assuming that those tests pass then it's going to kick off a deployment in my opsworks layer so let's go ahead",
    "start": "1080400",
    "end": "1087120"
  },
  {
    "text": "and take a look at what's going on in opsworks so let me click on deployment",
    "start": "1087120",
    "end": "1092320"
  },
  {
    "text": "and we can see that indeed there is a deployment that's been kicked off um so let's go ahead and click into that",
    "start": "1092320",
    "end": "1097440"
  },
  {
    "text": "and see what's happening so it's deploying to the php",
    "start": "1097440",
    "end": "1102720"
  },
  {
    "text": "um instance that's inside my php app server tier it's also sending an event to my db",
    "start": "1102720",
    "end": "1109440"
  },
  {
    "text": "master so i have my sql database running inside opsworks",
    "start": "1109440",
    "end": "1114640"
  },
  {
    "text": "and you might be asking why are we sending a deployment of my php app to my database well going",
    "start": "1114640",
    "end": "1120880"
  },
  {
    "text": "back to what i mentioned inside the presentation where we're actually sending events to those",
    "start": "1120880",
    "end": "1126160"
  },
  {
    "text": "instances it doesn't necessarily mean we're going to deploy the php application code to the dbmaster we're",
    "start": "1126160",
    "end": "1131360"
  },
  {
    "text": "actually sending a deploy event there because you may have some custom recipes that that may need to",
    "start": "1131360",
    "end": "1136559"
  },
  {
    "text": "do some different work on deployment so now that we've seen that this deployment has succeeded",
    "start": "1136559",
    "end": "1143280"
  },
  {
    "text": "let's just go ahead and go back and we can refresh our our app and we can see that",
    "start": "1143280",
    "end": "1149600"
  },
  {
    "text": "somebody's added thank you some additional comments",
    "start": "1149600",
    "end": "1155120"
  },
  {
    "text": "let me go here to our instances",
    "start": "1155120",
    "end": "1159840"
  },
  {
    "text": "i don't see that our our our code got uh fully deployed",
    "start": "1162559",
    "end": "1168240"
  },
  {
    "text": "oh we got the the kickoff of the of the event i'm not quite sure why we didn't uh get",
    "start": "1169120",
    "end": "1175039"
  },
  {
    "text": "our code deployed to take a look at that subsequently so",
    "start": "1175039",
    "end": "1181600"
  },
  {
    "text": "i mentioned that there's some additional capabilities in addition to elb that we",
    "start": "1181600",
    "end": "1186720"
  },
  {
    "text": "wanted to to show you and one of the other features that we added was list monitoring support",
    "start": "1186720",
    "end": "1193600"
  },
  {
    "text": "and so here we can see that you can you can see a bunch of information about",
    "start": "1193600",
    "end": "1199120"
  },
  {
    "text": "the instances that are running in your layers so we can see for example the the",
    "start": "1199120",
    "end": "1204159"
  },
  {
    "text": "processes the load the memory used the cpu for each of the layers that we have so we have a static",
    "start": "1204159",
    "end": "1210720"
  },
  {
    "text": "web server layer a php app server layer my sql layer in this demonstration we can also dive",
    "start": "1210720",
    "end": "1216159"
  },
  {
    "text": "down into the specific layers to see what's going on with the instances so i clicked on",
    "start": "1216159",
    "end": "1221520"
  },
  {
    "text": "that and i can see that i have a couple instances that are in this layer my uh app server 3 is actually",
    "start": "1221520",
    "end": "1227520"
  },
  {
    "text": "currently stopped so that's why there's no data inside there perhaps if i were to",
    "start": "1227520",
    "end": "1232640"
  },
  {
    "text": "change it to you know two weeks worth of data we could see if it was running during any of that that time",
    "start": "1232640",
    "end": "1239280"
  },
  {
    "text": "doesn't look like it was we can also dive into the specific instances so we can see",
    "start": "1239280",
    "end": "1245280"
  },
  {
    "text": "more detailed data if we wanted to see it and we can see that there's actually quite a few different metrics that we're",
    "start": "1245280",
    "end": "1251360"
  },
  {
    "text": "collecting here so things like memory used memory cache memory free so this",
    "start": "1251360",
    "end": "1256480"
  },
  {
    "text": "can help you when you're trying to take a look at how your instances are running and because all this is sent to",
    "start": "1256480",
    "end": "1262320"
  },
  {
    "text": "cloudwatch you can actually set up alarms for this so perhaps you might want to alarm if cpu utilization is above a certain",
    "start": "1262320",
    "end": "1268559"
  },
  {
    "text": "level or if memory usage is above a certain level so cloudwatch gives you the ability to set",
    "start": "1268559",
    "end": "1274000"
  },
  {
    "text": "up those alarms you also as i mentioned can set up the",
    "start": "1274000",
    "end": "1279120"
  },
  {
    "text": "ability for particular users to ssh into the instances and what's nice about this is that if you have a team",
    "start": "1279120",
    "end": "1285280"
  },
  {
    "text": "member that ends up leaving the project you can instantly remove their access to",
    "start": "1285280",
    "end": "1290640"
  },
  {
    "text": "ssh or perform pseudo actions on those instances so you don't have to have a single ssh",
    "start": "1290640",
    "end": "1296080"
  },
  {
    "text": "key for all the instances instead you have user-based ssh keys",
    "start": "1296080",
    "end": "1302080"
  },
  {
    "text": "now let's kind of go back to show you a little bit more about what we want to do in this",
    "start": "1302400",
    "end": "1307440"
  },
  {
    "text": "the next step for this demonstration so you probably don't want to have a",
    "start": "1307440",
    "end": "1313679"
  },
  {
    "text": "continuous pipeline for your production servers instead what you might want to do",
    "start": "1313679",
    "end": "1318799"
  },
  {
    "text": "is create a new environment when you're ready to deploy substantial",
    "start": "1318799",
    "end": "1325039"
  },
  {
    "text": "change to production and so what we can do in this instance is what we call a blue green deploy",
    "start": "1325039",
    "end": "1330960"
  },
  {
    "text": "where we stand up a duplicate set of infrastructure and slowly cut traffic over to it via dns",
    "start": "1330960",
    "end": "1337679"
  },
  {
    "text": "so what we want to do here is we'll we have our existing environment that is currently serving up",
    "start": "1337679",
    "end": "1343919"
  },
  {
    "text": "traffic and then we want to start we want to basically clone that environment",
    "start": "1343919",
    "end": "1349280"
  },
  {
    "text": "and start routing a percentage of our traffic over to it and see how monitor our metrics see how",
    "start": "1349280",
    "end": "1355360"
  },
  {
    "text": "things run we've already performed all of our integration tests so hopefully things are going to work but as we know things can",
    "start": "1355360",
    "end": "1362960"
  },
  {
    "text": "sometimes you know not work as we expect them to in production so here we're kind of doing it",
    "start": "1362960",
    "end": "1368640"
  },
  {
    "text": "in a small way by using rapid d3's feature to let us just route a percentage of our traffic over as we",
    "start": "1368640",
    "end": "1375520"
  },
  {
    "text": "gain confidence we can start routing more and more traffic over to our new environment and then of course when we're fully",
    "start": "1375520",
    "end": "1383120"
  },
  {
    "text": "ready we can go ahead and route all the traffic there and turn off our old environment so this is",
    "start": "1383120",
    "end": "1389360"
  },
  {
    "text": "kind of a safe way to kind of move from um uh one version of an application to",
    "start": "1389360",
    "end": "1394880"
  },
  {
    "text": "another in production and opsworks give you gives you a pretty easy way to do that",
    "start": "1394880",
    "end": "1400880"
  },
  {
    "text": "we can let you do that basically by uh by cloning your environment so if you come here and click on clone",
    "start": "1401360",
    "end": "1408320"
  },
  {
    "text": "you can just go ahead and clone your entire stack the permissions the apps basically",
    "start": "1408320",
    "end": "1414320"
  },
  {
    "text": "everything about your environment and um and then you you can attach a new",
    "start": "1414320",
    "end": "1419760"
  },
  {
    "text": "elb to that copy so you'd take a look at your your layers you'll go ahead and add",
    "start": "1419760",
    "end": "1427520"
  },
  {
    "text": "a new elb to that and then you go to your route d3 control panel and start",
    "start": "1427520",
    "end": "1433760"
  },
  {
    "text": "routing traffic to that that new environment and of course it would be a percentage of your users is probably what you'd do at",
    "start": "1433760",
    "end": "1440080"
  },
  {
    "text": "first or you can route all your traffic over and keep that second that",
    "start": "1440080",
    "end": "1445200"
  },
  {
    "text": "first environment up and running because you can always just switch traffic back",
    "start": "1445200",
    "end": "1450399"
  },
  {
    "text": "so let's go ahead and let's say that we had kicked off a deployment to this environment with",
    "start": "1452400",
    "end": "1459520"
  },
  {
    "text": "the changes that we we've made",
    "start": "1459520",
    "end": "1463200"
  },
  {
    "text": "so again this is deploying um my app code from my source repo to my app server",
    "start": "1466000",
    "end": "1473760"
  },
  {
    "text": "and i could of course have multiple app servers in my layer so if i were to create additional new app",
    "start": "1473760",
    "end": "1479760"
  },
  {
    "text": "servers then those would get the same configuration as i had configured before",
    "start": "1479760",
    "end": "1485360"
  },
  {
    "text": "and then as i add my app servers to as they come up up and running elb has",
    "start": "1485360",
    "end": "1491600"
  },
  {
    "text": "the feature where it has a health check that's monitoring uh when those applications are actually up and online and available so i",
    "start": "1491600",
    "end": "1498000"
  },
  {
    "text": "configure a health check that that makes sure that those applications are indeed running",
    "start": "1498000",
    "end": "1503279"
  },
  {
    "text": "uh the code that i want them to be running and elb is periodically monitoring that health check so if for some reason those apps go down",
    "start": "1503279",
    "end": "1510320"
  },
  {
    "text": "they automatically get taken out of the the load balancer and i don't have to worry about",
    "start": "1510320",
    "end": "1516240"
  },
  {
    "text": "them serving bad traffic so let's go ahead and we'll take a look at um at this we can see that has the new",
    "start": "1516559",
    "end": "1522799"
  },
  {
    "text": "version of my app so if i want to i can go ahead and go into",
    "start": "1522799",
    "end": "1528640"
  },
  {
    "text": "and go into route 3 and and cut over to this version of the app like",
    "start": "1528640",
    "end": "1534240"
  },
  {
    "text": "i mentioned inside the demonstration so hopefully this gives you a good summary of how opsworks can support",
    "start": "1534240",
    "end": "1541279"
  },
  {
    "text": "continuous integration build by having git automatically event for example your",
    "start": "1541279",
    "end": "1547120"
  },
  {
    "text": "continuous your build server and so you could kick off builds automatically when you have new",
    "start": "1547120",
    "end": "1554960"
  },
  {
    "text": "new check-ins to your source code repo and that lets you always be running tests on things that are getting checked",
    "start": "1554960",
    "end": "1560000"
  },
  {
    "text": "in so you don't have to worry about um you know which uh which check-in uh broke your build",
    "start": "1560000",
    "end": "1565679"
  },
  {
    "text": "um you could also be running your uh your integration tests and your staging environment um so that you have um full confidence",
    "start": "1565679",
    "end": "1573679"
  },
  {
    "text": "that everything that's being checked in passes all your your integration tests and then when you're ready you can go",
    "start": "1573679",
    "end": "1579440"
  },
  {
    "text": "ahead and clone your environment um in production and",
    "start": "1579440",
    "end": "1584640"
  },
  {
    "text": "deploy the new code to that cloned environment and then gradually cut over to that new environment",
    "start": "1584640",
    "end": "1590640"
  },
  {
    "text": "so at this point i'm going to go ahead and take questions please feel free to use the uh the chat",
    "start": "1592799",
    "end": "1598880"
  },
  {
    "text": "feature there in the right hand corner of your your screen and um and i'll go ahead and",
    "start": "1598880",
    "end": "1606480"
  },
  {
    "text": "answer questions uh at this time",
    "start": "1606480",
    "end": "1612320"
  },
  {
    "text": "so um first question is um plans to support other configuration management systems other than chef um so",
    "start": "1612320",
    "end": "1618720"
  },
  {
    "text": "we what this is actually uh one of the things we um we've questions we've heard frequently it's it's um we answer we've answered",
    "start": "1618720",
    "end": "1626000"
  },
  {
    "text": "this um in our frequently asked questions we we want to be very customer focused um for everything we do",
    "start": "1626000",
    "end": "1631840"
  },
  {
    "text": "and so um we're very open to supporting uh other configuration management systems as well as other features that",
    "start": "1631840",
    "end": "1638320"
  },
  {
    "text": "customers need the primary way we get broad customer feedback is through the forums",
    "start": "1638320",
    "end": "1644640"
  },
  {
    "text": "so there's a couple threads in the forums already for other configuration management systems so i encourage you to kind of search",
    "start": "1644640",
    "end": "1651120"
  },
  {
    "text": "in the opsworks forums and plus one on the ones that you want if you don't see the one you want then",
    "start": "1651120",
    "end": "1656720"
  },
  {
    "text": "feel free to start the new thread so hopefully that answers that question on",
    "start": "1656720",
    "end": "1662159"
  },
  {
    "text": "elastic ip the question is will every box get one so the the answer is if you",
    "start": "1662159",
    "end": "1667279"
  },
  {
    "text": "configure the eip setting in that particular layer to turn to to to yes then every",
    "start": "1667279",
    "end": "1675039"
  },
  {
    "text": "instance that you launch in that layer will get an elastic ip and so it's really a configuration setting on the",
    "start": "1675039",
    "end": "1680080"
  },
  {
    "text": "layer and then that layer is really a blueprint so every instance that you bring up will have exactly the characteristics of what",
    "start": "1680080",
    "end": "1686480"
  },
  {
    "text": "you've defined in that layer um",
    "start": "1686480",
    "end": "1696000"
  },
  {
    "text": "a question is there a way to flag a deployment is automatically automatic versus that somebody uh push",
    "start": "1696000",
    "end": "1702240"
  },
  {
    "text": "the button in the ui so at this point um there's",
    "start": "1702240",
    "end": "1707760"
  },
  {
    "text": "not a specific not a specific way to to to show that um the service",
    "start": "1707760",
    "end": "1714399"
  },
  {
    "text": "um the service does give you quite a bit of information about um the deployments though in fact why",
    "start": "1714399",
    "end": "1721520"
  },
  {
    "text": "don't we um i probably should have shown",
    "start": "1721520",
    "end": "1726720"
  },
  {
    "text": "that um for each of these deployments there you can get quite a bit of detail on the deployment",
    "start": "1726880",
    "end": "1732720"
  },
  {
    "text": "such as what user ran it um so the way you could get information on whether this was an automatic",
    "start": "1732720",
    "end": "1738320"
  },
  {
    "text": "deployment is you could see the user that it was run by um so the if you're if you have this through a",
    "start": "1738320",
    "end": "1744159"
  },
  {
    "text": "scripted uh user then then you would see that it was through that that scripted user so that's kind of one",
    "start": "1744159",
    "end": "1749600"
  },
  {
    "text": "way and the other is we have some very detailed logs that you can bring up um",
    "start": "1749600",
    "end": "1754640"
  },
  {
    "text": "this doesn't relate directly to your question but uh something that probably i should have mentioned just for um looking into errors or or",
    "start": "1754640",
    "end": "1762000"
  },
  {
    "text": "configuration problems that if you were to have them it's very easy to kind of get logs of",
    "start": "1762000",
    "end": "1767279"
  },
  {
    "text": "what's happened during that configuration run without having to jump onto the boxes so um so we can kind of give you uh some",
    "start": "1767279",
    "end": "1774240"
  },
  {
    "text": "insight into who's performed each of the configuration actions um because we do",
    "start": "1774240",
    "end": "1779440"
  },
  {
    "text": "at least note the user that performed it when it when it was kicked off and when it completed",
    "start": "1779440",
    "end": "1795840"
  },
  {
    "text": "so question on um elb setup and route53 changes are can they be done manually or",
    "start": "1798000",
    "end": "1804640"
  },
  {
    "text": "automatically so the the elb setup is indeed something you would do through",
    "start": "1804640",
    "end": "1810799"
  },
  {
    "text": "the elb user interface and then you can automatically associate elvs",
    "start": "1810799",
    "end": "1816799"
  },
  {
    "text": "within the opsworks console as far as kind of configuring it to work automatically as",
    "start": "1816799",
    "end": "1822320"
  },
  {
    "text": "part of a continuous integration and deploy pipeline as i've shown you here",
    "start": "1822320",
    "end": "1827919"
  },
  {
    "text": "you would need to kind of script that yourself using the sdks or cli",
    "start": "1827919",
    "end": "1834240"
  },
  {
    "text": "at this point in time question about support for bpc uh today",
    "start": "1834240",
    "end": "1841200"
  },
  {
    "text": "opsworks supports um very basic bpc options we we support",
    "start": "1841200",
    "end": "1846240"
  },
  {
    "text": "the newly launched vpc for everyone which was announced in the blog probably",
    "start": "1846240",
    "end": "1852080"
  },
  {
    "text": "about a month ago and we only support uh launching instances in the default",
    "start": "1852080",
    "end": "1857360"
  },
  {
    "text": "subnet so if you want to launch in multiple subnets that's not supported at this time",
    "start": "1857360",
    "end": "1862799"
  },
  {
    "text": "definitely one of the things we hear frequently from customers and one of the things that we would like to address",
    "start": "1862799",
    "end": "1868159"
  },
  {
    "text": "in the near term so basic support today more support later",
    "start": "1868159",
    "end": "1875278"
  },
  {
    "text": "a question of do we also provide a host of jenkins we do not provide a host of jenkins at",
    "start": "1876480",
    "end": "1881760"
  },
  {
    "text": "this time but i created this jenkins in my own uh offshore stack so basically what i",
    "start": "1881760",
    "end": "1888960"
  },
  {
    "text": "did was i created a static web server layer and then i added a jenkins recipe to my layer",
    "start": "1888960",
    "end": "1897519"
  },
  {
    "text": "so basically the static web server is just an nginx layer and then i just used some jenkins",
    "start": "1897519",
    "end": "1904640"
  },
  {
    "text": "chef recipes to install and run jenkins on that layer so we don't have that as a",
    "start": "1904640",
    "end": "1910240"
  },
  {
    "text": "built-in today but it's just an example of how you can extend opsworks to to install other types of software",
    "start": "1910240",
    "end": "1918000"
  },
  {
    "text": "packages",
    "start": "1918840",
    "end": "1921840"
  },
  {
    "text": "question on adding postgres as a database to opsworks um so as i mentioned kind of in the",
    "start": "1925200",
    "end": "1930960"
  },
  {
    "text": "beginning of the q a we really want to be super customer focused and there's a postgres",
    "start": "1930960",
    "end": "1937279"
  },
  {
    "text": "thread in the forums would appreciate you you know plus wanting that if that's something that you want we really appreciate the feedback from",
    "start": "1937279",
    "end": "1943840"
  },
  {
    "text": "users and are using that to prioritize our roadmap",
    "start": "1943840",
    "end": "1949840"
  },
  {
    "text": "um question on talking about custom apps and layers in terms of deployment so you know you can kind of think of",
    "start": "1950240",
    "end": "1956399"
  },
  {
    "text": "this jenkins as a bit of a of a custom layer it it's customizing an existing layer i could",
    "start": "1956399",
    "end": "1963440"
  },
  {
    "text": "have created a completely custom layer so if i wanted to i can create a layer type that's",
    "start": "1963440",
    "end": "1969039"
  },
  {
    "text": "that's custom and basically it lets you install all of your own software so",
    "start": "1969039",
    "end": "1975600"
  },
  {
    "text": "what this is good for is if you have something that you don't feel like you can extend an existing layer you want to",
    "start": "1975600",
    "end": "1980640"
  },
  {
    "text": "just kind of build from scratch the custom layer lets you do that in this instance for jenkins i actually",
    "start": "1980640",
    "end": "1986480"
  },
  {
    "text": "wanted to use a you know web server and so nginx was pretty handy so either way you can opt source gives",
    "start": "1986480",
    "end": "1992720"
  },
  {
    "text": "you a lot of extensibility options to get the software that you want installed",
    "start": "1992720",
    "end": "2005600"
  },
  {
    "text": "so a question of deploying from multiple repositories um this person's application can consist of",
    "start": "2005600",
    "end": "2011600"
  },
  {
    "text": "multiple applications coming from different repos so there's a couple things that you can",
    "start": "2011600",
    "end": "2018159"
  },
  {
    "text": "you can do one is that um you can create multiple apps here um so for example i could have my",
    "start": "2018159",
    "end": "2024480"
  },
  {
    "text": "php app could be coming from the repo that i showed you you could also create another php app which comes from a different repository",
    "start": "2024480",
    "end": "2032480"
  },
  {
    "text": "so you could you could do it just by creating multiple apps you're not limited to a single app the other option depending on your use",
    "start": "2032480",
    "end": "2039840"
  },
  {
    "text": "case is you can use chef recipes so for your layer",
    "start": "2039840",
    "end": "2046480"
  },
  {
    "text": "on the php layer you can see that there's this deploy event and deploy is what gets kicked off when",
    "start": "2046480",
    "end": "2052960"
  },
  {
    "text": "you actually trigger a deployment over here so you could actually just create a chef recipe which",
    "start": "2052960",
    "end": "2058240"
  },
  {
    "text": "pulls from the source from each of your repos and then performs whatever installation",
    "start": "2058240",
    "end": "2063919"
  },
  {
    "text": "steps are necessary so either way is kind of how you could deploy from multiple repositories to a",
    "start": "2063919",
    "end": "2071118"
  },
  {
    "text": "single layer",
    "start": "2071119",
    "end": "2075838"
  },
  {
    "text": "a question on can we use our own um armies today that's not possible today today",
    "start": "2077919",
    "end": "2084158"
  },
  {
    "text": "you need to use the the armies that opsworks provides but that's kind of another area that we're",
    "start": "2084159",
    "end": "2090800"
  },
  {
    "text": "hearing feedback from from customers and definitely would appreciate uh if folks on this call",
    "start": "2090800",
    "end": "2096560"
  },
  {
    "text": "if that's useful for you please do feel free to let us know in the forums about your use",
    "start": "2096560",
    "end": "2102000"
  },
  {
    "text": "case and and we do appreciate that input",
    "start": "2102000",
    "end": "2106240"
  },
  {
    "text": "question on will this deck be shared we will be sharing this deck an email will go out subsequently with",
    "start": "2107520",
    "end": "2113520"
  },
  {
    "text": "information inside this presentation",
    "start": "2113520",
    "end": "2117838"
  },
  {
    "text": "a question on this opsworks support ebs optimized instances today we don't um the instance types",
    "start": "2124560",
    "end": "2131119"
  },
  {
    "text": "that we support uh just use standard uh ebs uh volumes so uh if ebs",
    "start": "2131119",
    "end": "2136720"
  },
  {
    "text": "optimized instances are useful for you um i've taken a note that you want it but if there's others on the line that",
    "start": "2136720",
    "end": "2142400"
  },
  {
    "text": "that would like it please do add your votes to the forums",
    "start": "2142400",
    "end": "2147680"
  },
  {
    "text": "so question of how did you get your database instance information to the app instance so",
    "start": "2154880",
    "end": "2161920"
  },
  {
    "text": "the there's kind of two answers for this one is if you're using a built-in layer",
    "start": "2161920",
    "end": "2168000"
  },
  {
    "text": "type then opsworks will will do that for you so if you create a mysql layer inside of",
    "start": "2168000",
    "end": "2176400"
  },
  {
    "text": "opsworks then the mysql connection parameters",
    "start": "2176400",
    "end": "2181760"
  },
  {
    "text": "and username information gets passed automatically as metadata to your app server tier",
    "start": "2181760",
    "end": "2187200"
  },
  {
    "text": "if you want to use rds what options gives you is the ability to pass in custom configuration settings",
    "start": "2187200",
    "end": "2195040"
  },
  {
    "text": "through the stack settings json so you can see that i have some custom json here that i'm passing",
    "start": "2195040",
    "end": "2200079"
  },
  {
    "text": "into my jenkins i can actually pass in connection parameters to my rds instance",
    "start": "2200079",
    "end": "2206320"
  },
  {
    "text": "in the same json and so in that way i can go ahead and connect to my rdf database",
    "start": "2206320",
    "end": "2212240"
  },
  {
    "text": "as well",
    "start": "2212240",
    "end": "2215839"
  },
  {
    "text": "so a couple questions about windows certainly a an area that that",
    "start": "2229359",
    "end": "2236640"
  },
  {
    "text": "we're interested in getting input on so a few questions of folks asking about windows support there too",
    "start": "2236640",
    "end": "2242240"
  },
  {
    "text": "please do kind of add your votes in the the forums for for windows um",
    "start": "2242240",
    "end": "2247440"
  },
  {
    "text": "we as an organization you probably have seen that aws is making a lot of investments in",
    "start": "2247440",
    "end": "2252640"
  },
  {
    "text": "windows we want to support every",
    "start": "2252640",
    "end": "2257839"
  },
  {
    "text": "type of application development community out there in fact there was a really nice announcement just a week or two ago with",
    "start": "2257839",
    "end": "2263920"
  },
  {
    "text": "additional system center integration so uh today uh opsource does not support windows but uh",
    "start": "2263920",
    "end": "2269280"
  },
  {
    "text": "but organizationally we're very big windows proponents and so address please to the",
    "start": "2269280",
    "end": "2276640"
  },
  {
    "text": "forums for for windows",
    "start": "2276640",
    "end": "2285838"
  },
  {
    "text": "question of adding elb via the appsource interface to an instance so the way that opsworks supports elb",
    "start": "2286240",
    "end": "2292960"
  },
  {
    "text": "today is we associate elastic load balancers with layers and then offshore takes care of",
    "start": "2292960",
    "end": "2299280"
  },
  {
    "text": "adding and removing the elbs that are associated with that layer to your elastic load balancer so if i",
    "start": "2299280",
    "end": "2305359"
  },
  {
    "text": "start up a new instance and say the php app server layer if i were to start up this stopped instance",
    "start": "2305359",
    "end": "2310480"
  },
  {
    "text": "let's just go ahead and take take a look at it so i have two instances here i'll start this up now as soon as this",
    "start": "2310480",
    "end": "2317839"
  },
  {
    "text": "this app server comes up we'll go ahead and associate it with the elb so you don't have to worry about",
    "start": "2317839",
    "end": "2323040"
  },
  {
    "text": "manually associating instances with the lbs opsworks goes ahead and does that for you um but um you wouldn't be associating it",
    "start": "2323040",
    "end": "2330320"
  },
  {
    "text": "manually with with elbs you we just automate that that process and then of course elb does the health",
    "start": "2330320",
    "end": "2335839"
  },
  {
    "text": "checks on those instances so as you if they were to for some reason",
    "start": "2335839",
    "end": "2340960"
  },
  {
    "text": "go offline then traffic would would stop routing to those instances until they became healthy again by passing the health",
    "start": "2340960",
    "end": "2349040"
  },
  {
    "text": "checks question is there a way to send ad hoc commands to some or all instances",
    "start": "2352839",
    "end": "2359839"
  },
  {
    "text": "you can do that so deployments if i wanted to deploy an app or run some sort of",
    "start": "2359839",
    "end": "2364960"
  },
  {
    "text": "command i can i can choose the instances that i i send those to so for example",
    "start": "2364960",
    "end": "2370800"
  },
  {
    "text": "um i could choose to send them only to some instance instances in a particular layer i could",
    "start": "2370800",
    "end": "2376800"
  },
  {
    "text": "choose to send it to only particular layers so it's very easy for me to customize",
    "start": "2376800",
    "end": "2382079"
  },
  {
    "text": "how that deployment uh runs so it gives you a lot of flexibility on on how you want to do your deployments",
    "start": "2382079",
    "end": "2388240"
  },
  {
    "text": "if you want to do it in batches or or whatnot and then of course the deployments once you've actually",
    "start": "2388240",
    "end": "2393359"
  },
  {
    "text": "performed them there's this log of the deployment of which instances did it deploy to what",
    "start": "2393359",
    "end": "2398720"
  },
  {
    "text": "the success status was you're able to see the logs for those and everything else",
    "start": "2398720",
    "end": "2405440"
  },
  {
    "text": "question on do ebs volumes persist across auto heals and the answer is is yes so one of the",
    "start": "2408800",
    "end": "2415280"
  },
  {
    "text": "things that's that opsworks does for you is these instances",
    "start": "2415280",
    "end": "2421200"
  },
  {
    "text": "retain all their characteristics even after they've been terminated so if i were to to basically terminate uh stop stop this",
    "start": "2421359",
    "end": "2428319"
  },
  {
    "text": "this instance and then start it up again um it'll have the same elastic ip it'll have the same",
    "start": "2428319",
    "end": "2434240"
  },
  {
    "text": "if if i had attached elastic ips to it it'll have the same volumes associated with it so you don't",
    "start": "2434240",
    "end": "2441119"
  },
  {
    "text": "have to worry about trying to reassociate elastic ips with instances if you stop and start them the same is",
    "start": "2441119",
    "end": "2446480"
  },
  {
    "text": "true for auto healing so if an instance gets auto healed and gets restarted then you'll get the exact same uh",
    "start": "2446480",
    "end": "2452640"
  },
  {
    "text": "information attached to that instance so it'll it'll look and behave exactly like the original instance",
    "start": "2452640",
    "end": "2460079"
  },
  {
    "text": "uh does software support reserved instances we do so basically opsworks instances behave just like ec2 instances they're ec2 instances",
    "start": "2463280",
    "end": "2470240"
  },
  {
    "text": "under the cover so um basically the all the reserved instances faqs apply to opsworks",
    "start": "2470240",
    "end": "2476560"
  },
  {
    "text": "it's all handled by billing on your behalf so your reserves instances are just associated with those obstacle",
    "start": "2476560",
    "end": "2482000"
  },
  {
    "text": "sentences that are running",
    "start": "2482000",
    "end": "2485040"
  },
  {
    "text": "so um that that just about answers most of the questions there um one last one but not spot instances",
    "start": "2487040",
    "end": "2493599"
  },
  {
    "text": "and that's correct we do not support spot instances today so um i really appreciate everyone",
    "start": "2493599",
    "end": "2500319"
  },
  {
    "text": "attending today's webinar if you have additional questions or comments or feedback",
    "start": "2500319",
    "end": "2505839"
  },
  {
    "text": "please do feel free to jump into the forums and and ask your questions we do look forward to getting your",
    "start": "2505839",
    "end": "2512800"
  },
  {
    "text": "feedback on on how you're using ops works and any additional comments on how we can make houseworks",
    "start": "2512800",
    "end": "2518079"
  },
  {
    "text": "better um thank you very much uh just to let you know uh how to get in",
    "start": "2518079",
    "end": "2523280"
  },
  {
    "text": "touch with us we're on the web oops at uh",
    "start": "2523280",
    "end": "2530560"
  },
  {
    "text": "amazon.com amazon.com opsworks thank you very much have a good day",
    "start": "2530560",
    "end": "2551839"
  },
  {
    "text": "you",
    "start": "2566240",
    "end": "2568319"
  }
]