[
  {
    "text": "hello everybody and welcome to the ADA where server this webinar series unleash",
    "start": "1159",
    "end": "6210"
  },
  {
    "text": "innovation and build modern applications my name is Steven Leduc I'm a Solutions",
    "start": "6210",
    "end": "11340"
  },
  {
    "text": "Architect with Amazon Web Services and it gives me great pleasure today to present to you a four-part series we're",
    "start": "11340",
    "end": "18119"
  },
  {
    "text": "going to start off talking about what's new with a with with servers and we're",
    "start": "18119",
    "end": "24000"
  },
  {
    "text": "going to talk about all the releases that we've made at reinvent last year and all the new functionalities since",
    "start": "24000",
    "end": "30390"
  },
  {
    "text": "things like AWS lambda layers API API gateway WebSocket support runtime api's",
    "start": "30390",
    "end": "39090"
  },
  {
    "text": "and many more in the next session",
    "start": "39090",
    "end": "44270"
  },
  {
    "text": "application modernization in a service world we'll take a closer look at the impact that serverless technologies is",
    "start": "44270",
    "end": "51059"
  },
  {
    "text": "having on modern application development and how these technologies can help you make better decisions around things like",
    "start": "51059",
    "end": "58739"
  },
  {
    "text": "micro services messaging and integration patterns and also databases and then",
    "start": "58739",
    "end": "65939"
  },
  {
    "text": "going to be joined by our special guest Ilene Jemma Smith from viz Alize it's going to talk to you about the work that",
    "start": "65939",
    "end": "71460"
  },
  {
    "text": "she's she's been doing it with Sydney trains and how they're using service",
    "start": "71460",
    "end": "78659"
  },
  {
    "text": "technologies to better understand tre delay characterizations and providing",
    "start": "78659",
    "end": "84299"
  },
  {
    "text": "this decision support in real time using services like RDS idea versus lambda",
    "start": "84299",
    "end": "90150"
  },
  {
    "text": "step functions s3 and many more services and finally we're going to be joined by",
    "start": "90150",
    "end": "96570"
  },
  {
    "text": "the team at cloud Conformity Paul Hall top and micro Marty are going to talk to you about how their journey about to",
    "start": "96570",
    "end": "104299"
  },
  {
    "text": "processing to two million 200 million well architected checks a day spanning",
    "start": "104299",
    "end": "110579"
  },
  {
    "text": "over 2,000 lambdas and over hundred dynamodb tables and you'll learn how",
    "start": "110579",
    "end": "116219"
  },
  {
    "text": "clout conformity and AWS have been working together to help deal with things to help solve some of their",
    "start": "116219",
    "end": "122610"
  },
  {
    "text": "challenges around monitoring service applications scaling security and some",
    "start": "122610",
    "end": "127979"
  },
  {
    "text": "of the cost optimization worth been doing throughout the series you're",
    "start": "127979",
    "end": "133500"
  },
  {
    "text": "going to have an opportunity to ask questions in the panel on your right in the chat session feel free to answer to",
    "start": "133500",
    "end": "140970"
  },
  {
    "text": "ask questions along the way we've got a team of service experts at they're ready to answer you all of your questions",
    "start": "140970",
    "end": "147240"
  },
  {
    "text": "we're also going to use this as a mechanism to ask our own questions we're going to be asking some questions to you",
    "start": "147240",
    "end": "155000"
  },
  {
    "text": "about the content that you've just listened and it's going to be you you've heard and the content and it's going to",
    "start": "155000",
    "end": "160770"
  },
  {
    "text": "be your opportunity to win some prizes we're also giving away AWS credits that you can apply to your",
    "start": "160770",
    "end": "167100"
  },
  {
    "text": "accounts and we're going to use it as a way for be able to capture more information so please keep your eye out",
    "start": "167100",
    "end": "172770"
  },
  {
    "text": "in the chat and feel free to ask as many questions as you like so we're going to",
    "start": "172770",
    "end": "179850"
  },
  {
    "text": "get started double what's new with serverless we'll begin shortly hope you enjoy the series",
    "start": "179850",
    "end": "185640"
  },
  {
    "text": "and we'll see you shortly",
    "start": "185640",
    "end": "189740"
  },
  {
    "text": "hello my name is Tim leduc I'm a Solutions Architect with Amazon Web Services and today we'll be talking to",
    "start": "191600",
    "end": "197400"
  },
  {
    "text": "about what's new with service really well this session is about is about is a",
    "start": "197400",
    "end": "203550"
  },
  {
    "text": "recap of all the latest and the greatest since reinvent last year to date I want",
    "start": "203550",
    "end": "208650"
  },
  {
    "text": "to talk about the innovations we've made to our compute platform the enhancements to the developer IDE experience we'll",
    "start": "208650",
    "end": "216420"
  },
  {
    "text": "review how our language support and lambda and the service programming model is changing what and how developers are",
    "start": "216420",
    "end": "223230"
  },
  {
    "text": "building service applications and finally we'll finish off with announcements we made to our integration",
    "start": "223230",
    "end": "229470"
  },
  {
    "text": "and database services so let's get started",
    "start": "229470",
    "end": "234440"
  },
  {
    "text": "so some providers produce to run multiple customer containers and code",
    "start": "236890",
    "end": "243160"
  },
  {
    "text": "inside of a single server or virtual machine now this is tempting because it",
    "start": "243160",
    "end": "248350"
  },
  {
    "text": "provides excellent efficiency and makes it easy to achieve low latency however a",
    "start": "248350",
    "end": "254020"
  },
  {
    "text": "multi-tenant approach like this doesn't provide the high security separation that single single tenant instances or",
    "start": "254020",
    "end": "261820"
  },
  {
    "text": "servers provide for AWS this is not a trade-off we're willing to make the",
    "start": "261820",
    "end": "268990"
  },
  {
    "text": "other approach is to run each customer container or code in their own set of",
    "start": "268990",
    "end": "274000"
  },
  {
    "text": "dedicated servers or virtual machines and this provides the same security in",
    "start": "274000",
    "end": "279580"
  },
  {
    "text": "isolation as an ec2 instance but most difficult to achieve the best performance and efficiency when we walk",
    "start": "279580",
    "end": "287110"
  },
  {
    "text": "when we launch lambda we chose to use dedicated ec2 instances for each of our customers and this provides the security",
    "start": "287110",
    "end": "294040"
  },
  {
    "text": "we need or be at lower efficiency and higher costs for us and while this was a",
    "start": "294040",
    "end": "299950"
  },
  {
    "text": "fun way to launch the service we knew we would need to make of innovations in our",
    "start": "299950",
    "end": "306340"
  },
  {
    "text": "infrastructure to eliminate this trade-off so we went to work building a",
    "start": "306340",
    "end": "311560"
  },
  {
    "text": "virtualization technology that eliminates this trade-off the result was",
    "start": "311560",
    "end": "317290"
  },
  {
    "text": "firecracker one of the first big announcements coming out of reinvent firecracker is a virtualization",
    "start": "317290",
    "end": "324550"
  },
  {
    "text": "technology that is purpose-built for creating and managing secure multi tenant containers and function based",
    "start": "324550",
    "end": "331300"
  },
  {
    "text": "services it's designed with a focus on security firecracker micro VMs work with",
    "start": "331300",
    "end": "338620"
  },
  {
    "text": "KVM hardware virtualization and provide the same security isolation as",
    "start": "338620",
    "end": "344200"
  },
  {
    "text": "traditional virtual machines firecracker also implements a minimal device model",
    "start": "344200",
    "end": "350200"
  },
  {
    "text": "which executes all non-essential functionality and reduces the attack surface on the marker VM I mean one of",
    "start": "350200",
    "end": "359140"
  },
  {
    "text": "the best ways to improve the security of anything is by reducing the surface area",
    "start": "359140",
    "end": "365470"
  },
  {
    "text": "after security firecracker focuses on speed it accelerates virtual machine",
    "start": "365470",
    "end": "372110"
  },
  {
    "text": "creation time for guests with a Linux kernel configuration optimized for containers and lambda this enables fast",
    "start": "372110",
    "end": "380419"
  },
  {
    "text": "startup times firecracker Michael VMs initiate user space code in a less than",
    "start": "380419",
    "end": "386090"
  },
  {
    "text": "125 milliseconds and finally it's designed for scale and efficiency",
    "start": "386090",
    "end": "392660"
  },
  {
    "text": "each firecracker micro VM requires less than 5 megabytes of system overhead and",
    "start": "392660",
    "end": "398630"
  },
  {
    "text": "this enables high density of micro VMs to be packed on each server and you can",
    "start": "398630",
    "end": "403789"
  },
  {
    "text": "create lots of micro VMs on each on each",
    "start": "403789",
    "end": "409190"
  },
  {
    "text": "machine and finally firecracker has built-in mechanisms that enforce fair",
    "start": "409190",
    "end": "415819"
  },
  {
    "text": "sharing of network and storage resources even across thousands of micro VMs so",
    "start": "415819",
    "end": "423680"
  },
  {
    "text": "you can see that we're making the same deep investments in our infrastructure support service computing as we have to",
    "start": "423680",
    "end": "431180"
  },
  {
    "text": "support AC 2 instances and while this is all visible to you this is all invisible to you as developers the good news is is",
    "start": "431180",
    "end": "439370"
  },
  {
    "text": "that firecrackers being is being used to reduce the cost and increase the performances of services like lambda",
    "start": "439370",
    "end": "447849"
  },
  {
    "text": "this allows us to continue to prioritize our roadmap for customer requests we",
    "start": "448090",
    "end": "453740"
  },
  {
    "text": "always wants to make sure we always want to make sure you have the right tools to do the job so developers are used to",
    "start": "453740",
    "end": "464330"
  },
  {
    "text": "working in environments that are easily replicated in the cloud and on their desktop but how do you do bug a lambda",
    "start": "464330",
    "end": "471590"
  },
  {
    "text": "based service application locally last year we announced AWS cloud 9 which",
    "start": "471590",
    "end": "477919"
  },
  {
    "text": "includes a full create step through debug and deploy experience for service",
    "start": "477919",
    "end": "485330"
  },
  {
    "text": "applications we want to meet you at the tools were you already being successful",
    "start": "485330",
    "end": "491229"
  },
  {
    "text": "you told us that you wanted to you wanted live debugging for lambda so we launched the AWS toolkit for",
    "start": "491229",
    "end": "498639"
  },
  {
    "text": "PyCharm which is now generally available we also we also are active in active",
    "start": "498639",
    "end": "507939"
  },
  {
    "text": "development for the AWS toolkits for Visual Studio code and IntelliJ these",
    "start": "507939",
    "end": "514120"
  },
  {
    "text": "toolkits will enable you to easily develop service applications including a",
    "start": "514120",
    "end": "519818"
  },
  {
    "text": "full create step through debug and deploy experience in the IDE and",
    "start": "519819",
    "end": "525100"
  },
  {
    "text": "language of your choice whether it be Python Java node or dotnet",
    "start": "525100",
    "end": "531540"
  },
  {
    "text": "and even though we're launching these toolkits to help you with service these toolkits are open source and intended to",
    "start": "531540",
    "end": "538779"
  },
  {
    "text": "help you develop for all of the AWS not just service so please check out pycharm",
    "start": "538779",
    "end": "544449"
  },
  {
    "text": "in the JetBrains marketplace and head over to github to give us feedback and help contribute to any of these toolkits",
    "start": "544449",
    "end": "554279"
  },
  {
    "text": "so as you can see from this diagram we have a very strong release history for",
    "start": "556319",
    "end": "561399"
  },
  {
    "text": "for AWS lambda and the language runtime features of the platform today we",
    "start": "561399",
    "end": "569139"
  },
  {
    "text": "provide managed runtimes for five core languages and frameworks including nodejs",
    "start": "569139",
    "end": "575579"
  },
  {
    "text": "6.1 and 8.1 Python 2.7 3.6 3.7 Java r8",
    "start": "575579",
    "end": "583500"
  },
  {
    "text": "golang and dotnet core and that includes PowerShell at reinvent we-we severe now",
    "start": "583500",
    "end": "592839"
  },
  {
    "text": "support for our six managed runtime in Ruby 2 point 5 and this enables Ruby",
    "start": "592839",
    "end": "600790"
  },
  {
    "text": "developers now to natively use AWS to build their applications",
    "start": "600790",
    "end": "607139"
  },
  {
    "text": "so we're gonna keep adding more languages but sometimes we hear from customers that there are some",
    "start": "613530",
    "end": "618960"
  },
  {
    "text": "enhancements that they are looking for or there's a specific version of a language that they want to use or",
    "start": "618960",
    "end": "625680"
  },
  {
    "text": "perhaps they want to use some kind of offbeat language we want to meet it we wanted to meet that customer need so we",
    "start": "625680",
    "end": "632760"
  },
  {
    "text": "made it possible for you to bring your own custom runtime effectively you bring your own language",
    "start": "632760",
    "end": "638130"
  },
  {
    "text": "now our Ruby support is actually built on this capability so at launch we",
    "start": "638130",
    "end": "644550"
  },
  {
    "text": "provided a C++ and a rust custom runtime library that you can use in your form",
    "start": "644550",
    "end": "650370"
  },
  {
    "text": "then you can readily use it in your applications and they're available on github we also have a variety of",
    "start": "650370",
    "end": "658050"
  },
  {
    "text": "partners that are providing some runtimes such as cobalt Erlang PHP and",
    "start": "658050",
    "end": "663930"
  },
  {
    "text": "even Swift and as you can see so as you can see the runtime constraints of",
    "start": "663930",
    "end": "669390"
  },
  {
    "text": "lambda have been virtually eliminated and as developers you can now build service applications however you like",
    "start": "669390",
    "end": "676550"
  },
  {
    "text": "one thing I will point out though is this but choosing to bring your own runtime to lambda you are effectively",
    "start": "676550",
    "end": "683070"
  },
  {
    "text": "taking full control and responsibility for that implementation so my advice would be to consider whether or not a",
    "start": "683070",
    "end": "689670"
  },
  {
    "text": "managed runtime is better for you over a custom one so you don't have that additional overhead of managing that",
    "start": "689670",
    "end": "697230"
  },
  {
    "text": "runtime unless you think there's a strategic advantage of doing so so how",
    "start": "697230",
    "end": "706170"
  },
  {
    "text": "are custom runtimes made possible well through a new feature core in lambda",
    "start": "706170",
    "end": "711180"
  },
  {
    "text": "called lambda layers which lets you take shared code libraries and dependencies",
    "start": "711180",
    "end": "716790"
  },
  {
    "text": "and separate it out as a layer hmm now so what does this look like well if",
    "start": "716790",
    "end": "723690"
  },
  {
    "text": "you've developed lambda functions before you know that you've got to package all of your application dependencies for",
    "start": "723690",
    "end": "730380"
  },
  {
    "text": "your for your function for the for the development teams deploying a large",
    "start": "730380",
    "end": "736140"
  },
  {
    "text": "number of functions and managing these dependencies and brawling changes out in production can be challenging with",
    "start": "736140",
    "end": "743520"
  },
  {
    "text": "lambda layers you upload this layer once and it become and it can be referenced",
    "start": "743520",
    "end": "749030"
  },
  {
    "text": "across all of your functions you can version each of these layers and also",
    "start": "749030",
    "end": "754100"
  },
  {
    "text": "also control access through iam policies so lambda layers allows you to start",
    "start": "754100",
    "end": "760820"
  },
  {
    "text": "allows a allows developers to start uploading once and reuse multiple times",
    "start": "760820",
    "end": "766690"
  },
  {
    "text": "it all lambda already lets you package your dependencies but but require you to",
    "start": "766690",
    "end": "773150"
  },
  {
    "text": "duplicate it across all of your function that you function code that you wrote so we see developers adopt these patents on",
    "start": "773150",
    "end": "780110"
  },
  {
    "text": "what we've what we've seen is developers adopt patterns or thin wrapper of thin wrappers around their core functionality",
    "start": "780110",
    "end": "787010"
  },
  {
    "text": "across functions and layers make it easy for developers to reuse code within",
    "start": "787010",
    "end": "793670"
  },
  {
    "text": "lambda there's also laser foundation for us to",
    "start": "793670",
    "end": "798980"
  },
  {
    "text": "do in it to innovate further on behalf of you of the developers and how and",
    "start": "798980",
    "end": "805790"
  },
  {
    "text": "allow you to get and allow us to optimize how your code gets initialized and loaded one of the important",
    "start": "805790",
    "end": "816080"
  },
  {
    "text": "additions to the lambda lairs release was to provide support for the service",
    "start": "816080",
    "end": "821270"
  },
  {
    "text": "application model now with a new layers version resource you can use you can use",
    "start": "821270",
    "end": "829190"
  },
  {
    "text": "layers within the service application model and with version 0.8.1 or above of",
    "start": "829190",
    "end": "838460"
  },
  {
    "text": "the service application model command-line interface you can now support layers locally and remotely",
    "start": "838460",
    "end": "844970"
  },
  {
    "text": "which allows you to work with layers while doing local development and easily consume layers with other with other",
    "start": "844970",
    "end": "852200"
  },
  {
    "text": "parts of your organization's that are responsible for managing that layer or is the integrate layers from third-party",
    "start": "852200",
    "end": "858770"
  },
  {
    "text": "providers and most importantly I guess from a deployment perspective is it",
    "start": "858770",
    "end": "864830"
  },
  {
    "text": "allows you to standardize and roll these to put roll these assets out through",
    "start": "864830",
    "end": "870380"
  },
  {
    "text": "your through your deployment pipelines",
    "start": "870380",
    "end": "875620"
  },
  {
    "text": "now another nice feature is related to the service application repository now",
    "start": "878370",
    "end": "884740"
  },
  {
    "text": "some of the systems that you're already building are already complete applications you aren't just composing",
    "start": "884740",
    "end": "890680"
  },
  {
    "text": "libraries anymore you're composing applications out of smaller application blocks the last year",
    "start": "890680",
    "end": "896950"
  },
  {
    "text": "we announced the service application repository now if you remember it made it easy for your teams to to store and",
    "start": "896950",
    "end": "905050"
  },
  {
    "text": "share and deploy service applications the repository allows you to deploy",
    "start": "905050",
    "end": "910750"
  },
  {
    "text": "pre-built applications that you already have tested you've already verified them and approve them for use by by your",
    "start": "910750",
    "end": "918459"
  },
  {
    "text": "organization and the repositories also",
    "start": "918459",
    "end": "923860"
  },
  {
    "text": "makes applications available for private use within your organization as well as",
    "start": "923860",
    "end": "929440"
  },
  {
    "text": "public use and allows you to bring in applications from partners and other third-party developers now what we heard",
    "start": "929440",
    "end": "939459"
  },
  {
    "text": "from customers is that their service applications grow common patterns start to emerge and that often get re",
    "start": "939459",
    "end": "946510"
  },
  {
    "text": "implemented across teams and projects this results in duplication of effort",
    "start": "946510",
    "end": "951760"
  },
  {
    "text": "herding developer velocity it makes it hard to enforce architecture best practices across an organization so now",
    "start": "951760",
    "end": "959770"
  },
  {
    "text": "we support nested applications in the service application repository with nested apps you can compose applications",
    "start": "959770",
    "end": "967630"
  },
  {
    "text": "together from smaller application components and store and deploy these nested apps in the service application",
    "start": "967630",
    "end": "974649"
  },
  {
    "text": "repository so different teams in an organization can easily contribute to",
    "start": "974649",
    "end": "980620"
  },
  {
    "text": "the architecture design in a collaborative manner and each of these components can be reused by other",
    "start": "980620",
    "end": "987040"
  },
  {
    "text": "applications again we've provided service application model support for",
    "start": "987040",
    "end": "994149"
  },
  {
    "text": "nested apps now here we can see at the top here we can see we can see your",
    "start": "994149",
    "end": "1001440"
  },
  {
    "text": "function and your function is now consuming a nested service application",
    "start": "1001440",
    "end": "1008200"
  },
  {
    "text": "how do we make this unique we're passing in parameters that make that application",
    "start": "1008200",
    "end": "1013660"
  },
  {
    "text": "unique through the service application parameters section down here and so we",
    "start": "1013660",
    "end": "1020050"
  },
  {
    "text": "can see you can start to compose fully fledged applications with reusable",
    "start": "1020050",
    "end": "1025209"
  },
  {
    "text": "application components within your application architecture let's move on",
    "start": "1025209",
    "end": "1032079"
  },
  {
    "text": "to API gateway now this service continued continues to evolve you have",
    "start": "1032079",
    "end": "1039130"
  },
  {
    "text": "several options for deploying restful api using api gateway you had edge",
    "start": "1039130",
    "end": "1044140"
  },
  {
    "text": "optimized endpoints which come with their own full fully managed cloud front",
    "start": "1044140",
    "end": "1050020"
  },
  {
    "text": "distribution and make it really easily make it really easy to to to work with",
    "start": "1050020",
    "end": "1055299"
  },
  {
    "text": "them with rest api you've also got we also launched regional endpoints which allow you to",
    "start": "1055299",
    "end": "1061540"
  },
  {
    "text": "create REST API that can be accessed from the same ADRs region and with your",
    "start": "1061540",
    "end": "1066880"
  },
  {
    "text": "rest aid to api is deployed now this helps you reduce request latency when",
    "start": "1066880",
    "end": "1072250"
  },
  {
    "text": "api requests originate from the same region as your rest api and also provides you with the ability to manage",
    "start": "1072250",
    "end": "1078429"
  },
  {
    "text": "your own caching layer if you choose to and you can create private api's this",
    "start": "1078429",
    "end": "1084549"
  },
  {
    "text": "was a massive ask from a lot of organization and basically these api's are fully private can only be accessed",
    "start": "1084549",
    "end": "1091330"
  },
  {
    "text": "from your virtual private cloud using a BPC endpoint so since we invent we since",
    "start": "1091330",
    "end": "1100330"
  },
  {
    "text": "reinvent since the announcement we made it reinvents should say we've launched",
    "start": "1100330",
    "end": "1105820"
  },
  {
    "text": "support for WebSockets an api gateway and this will enable custom developers",
    "start": "1105820",
    "end": "1111400"
  },
  {
    "text": "to build real-time two-way communication applications running on lambda func on",
    "start": "1111400",
    "end": "1117669"
  },
  {
    "text": "lambda functions or other api gateway integrations when a WebSocket connection",
    "start": "1117669",
    "end": "1123400"
  },
  {
    "text": "is established API gateway will manage the persistence of the connection and",
    "start": "1123400",
    "end": "1129419"
  },
  {
    "text": "based on event triggers can trigger a lambda function or are they double your",
    "start": "1129419",
    "end": "1134860"
  },
  {
    "text": "services in addition there is a callback endpoint that can be used to send data",
    "start": "1134860",
    "end": "1141070"
  },
  {
    "text": "back to the connected client so this new capability enables developers to easily",
    "start": "1141070",
    "end": "1146309"
  },
  {
    "text": "build interactive applications such as chat applications mobile apps potentially even building dynamic",
    "start": "1146309",
    "end": "1152989"
  },
  {
    "text": "dashboards without having to worry about the infrastructure needed to accept and",
    "start": "1152989",
    "end": "1160169"
  },
  {
    "text": "maintain persistent persistent connections so for more information",
    "start": "1160169",
    "end": "1165989"
  },
  {
    "text": "about WebSocket support I recommend you check out george mouths webinar recording on YouTube I'll leave this",
    "start": "1165989",
    "end": "1173190"
  },
  {
    "text": "address open for a moment so another thing that customers have asked for is",
    "start": "1173190",
    "end": "1179970"
  },
  {
    "text": "how do I use lambda with some of my traditional application architectures ones that have a load balancer in front",
    "start": "1179970",
    "end": "1187859"
  },
  {
    "text": "of a group of servers for example to support this you now have application",
    "start": "1187859",
    "end": "1195149"
  },
  {
    "text": "load balancer support for lambda you can now register a lambda as a target for an",
    "start": "1195149",
    "end": "1201179"
  },
  {
    "text": "application load balancer and this allows you to more easily transition your existing architectures over to lab",
    "start": "1201179",
    "end": "1207389"
  },
  {
    "text": "data and you can also mix and match your compute backends based on your needs",
    "start": "1207389",
    "end": "1212580"
  },
  {
    "text": "such as potential using ec2 or even throw in a bit of fire game or or start",
    "start": "1212580",
    "end": "1219509"
  },
  {
    "text": "to move out to lambda altogether this is a great feature for an application developer looking to migrate existing",
    "start": "1219509",
    "end": "1225989"
  },
  {
    "text": "application components and functionality to the server space with relative ease",
    "start": "1225989",
    "end": "1231359"
  },
  {
    "text": "and min and and and reduced risk and this is but if you're looking for",
    "start": "1231359",
    "end": "1238609"
  },
  {
    "text": "authentication and authorization request validation rate limiting and throttling",
    "start": "1238609",
    "end": "1246769"
  },
  {
    "text": "SDK generation and direct access to AWS service backends then maybe this is not",
    "start": "1246769",
    "end": "1254549"
  },
  {
    "text": "a service for you focus use api gateway for that kind of functionality and this",
    "start": "1254549",
    "end": "1261450"
  },
  {
    "text": "is what it looks like in the console it's fairly straightforward to set up all you need to do is to create a target",
    "start": "1261450",
    "end": "1267509"
  },
  {
    "text": "group a target group with the type of function function and then select the function",
    "start": "1267509",
    "end": "1274450"
  },
  {
    "text": "where you and the version or alias that you want to route the two that you want",
    "start": "1274450",
    "end": "1281650"
  },
  {
    "text": "to route to and finally set up a a path",
    "start": "1281650",
    "end": "1288450"
  },
  {
    "text": "that points to that resource group that that target group and and away you go",
    "start": "1288450",
    "end": "1295210"
  },
  {
    "text": "fairly straightforward and there's a",
    "start": "1295210",
    "end": "1302410"
  },
  {
    "text": "lots of orchestration workflow engines orchestration and workflow engines around now two years ago we launched",
    "start": "1302410",
    "end": "1307810"
  },
  {
    "text": "step functions to help you with this now step functions allows you to build fully managed state machines that help",
    "start": "1307810",
    "end": "1314050"
  },
  {
    "text": "you coordinate the components of a distributed application and micro services using visual workflows it also",
    "start": "1314050",
    "end": "1322210"
  },
  {
    "text": "provides you with a mechanism to help save state as you transition data between components in your state machine",
    "start": "1322210",
    "end": "1328570"
  },
  {
    "text": "and allows you to keep the orchestration out of your code so your functions",
    "start": "1328570",
    "end": "1333790"
  },
  {
    "text": "remain clean and have single responsibility this is a good thing it",
    "start": "1333790",
    "end": "1339010"
  },
  {
    "text": "also allows you to build workflows that have components that execute in sequence",
    "start": "1339010",
    "end": "1346680"
  },
  {
    "text": "allows you to wrap around retry and",
    "start": "1346680",
    "end": "1352260"
  },
  {
    "text": "retry and catching errors and taking and taking steps to to mitigate those you",
    "start": "1352260",
    "end": "1361540"
  },
  {
    "text": "can choose a execution path based on some conditional logic within your state",
    "start": "1361540",
    "end": "1367720"
  },
  {
    "text": "and you can also use it to run our parallel execution tasks so combined",
    "start": "1367720",
    "end": "1373420"
  },
  {
    "text": "combining these capabilities allows you to create some intricate workflows the",
    "start": "1373420",
    "end": "1380110"
  },
  {
    "text": "customers love the fact that they can easily call lambda functions to implement that business logic using step functions but they've also asked us for",
    "start": "1380110",
    "end": "1387310"
  },
  {
    "text": "more options and with step functions API connectors you now will design workflows",
    "start": "1387310",
    "end": "1393700"
  },
  {
    "text": "between your AWS services without having to write any code really accelerating",
    "start": "1393700",
    "end": "1399400"
  },
  {
    "text": "your time to market and your ability to integrate with these services without having",
    "start": "1399400",
    "end": "1404720"
  },
  {
    "text": "right a huge amount of collage ik so we've added integrations for eight AWS",
    "start": "1404720",
    "end": "1411260"
  },
  {
    "text": "services to automate workflows even faster so you can you integrate we've",
    "start": "1411260",
    "end": "1416419"
  },
  {
    "text": "got components that integrate with AWS batch our container service CCS AWS fire",
    "start": "1416419",
    "end": "1422809"
  },
  {
    "text": "gates we can also you can also use it to persist data to and retrieve data from",
    "start": "1422809",
    "end": "1428809"
  },
  {
    "text": "Amazon DynamoDB and use use our messaging service SNS and SQS to send",
    "start": "1428809",
    "end": "1435590"
  },
  {
    "text": "messages in to to other parts of your environment and we've also got",
    "start": "1435590",
    "end": "1441650"
  },
  {
    "text": "integrators with sage maker and glue services and this is a super useful",
    "start": "1441650",
    "end": "1447020"
  },
  {
    "text": "feature which I encourage you to explore",
    "start": "1447020",
    "end": "1451000"
  },
  {
    "text": "finally let's have a look at some of the database enhancements with May for dynamodb if you're building or",
    "start": "1452470",
    "end": "1458780"
  },
  {
    "text": "contemplating building service applications DynamoDB will likely be a feature in your architecture now one of",
    "start": "1458780",
    "end": "1466880"
  },
  {
    "text": "the trickiest parts in DynamoDB is knowing how much write and read throughput to provision today customers",
    "start": "1466880",
    "end": "1474140"
  },
  {
    "text": "have to make decisions of rare decisions and provisioned weather or whatever",
    "start": "1474140",
    "end": "1479510"
  },
  {
    "text": "amount they think is a bit is about right and we have to go big when you",
    "start": "1479510",
    "end": "1484669"
  },
  {
    "text": "have a big or a steady workload where you have some experience and pay close attention to the read and write put read",
    "start": "1484669",
    "end": "1492169"
  },
  {
    "text": "and read and write throughput then it's more straightforward and customers feel",
    "start": "1492169",
    "end": "1498260"
  },
  {
    "text": "pretty confident about about that provisioning decisions and often add",
    "start": "1498260",
    "end": "1504020"
  },
  {
    "text": "automated auto scaling policies so they so they know when they scale when usage",
    "start": "1504020",
    "end": "1511400"
  },
  {
    "text": "Rises sharply they can cap costs so they don't live at a temporary at that",
    "start": "1511400",
    "end": "1517429"
  },
  {
    "text": "temporary peak however if you don't know much a don't hat don't know much about",
    "start": "1517429",
    "end": "1523400"
  },
  {
    "text": "your everywhere haven't got much experience with it awful tables that are not used often or for ones that wear",
    "start": "1523400",
    "end": "1530980"
  },
  {
    "text": "where traffic is particularly Sparky because of seasonal or event-driven reasons it's much harder to know what to",
    "start": "1530980",
    "end": "1539260"
  },
  {
    "text": "provision and what we usually seize customers do is over provision so they",
    "start": "1539260",
    "end": "1546370"
  },
  {
    "text": "know the app will keep functioning during those spikes but more often than",
    "start": "1546370",
    "end": "1551860"
  },
  {
    "text": "not not bother setting an auto scaling policies so they live at those peaks now",
    "start": "1551860",
    "end": "1558310"
  },
  {
    "text": "to meet these to meet some of these challenges dynamo deep we release dynamodb read/write capacity on demand",
    "start": "1558310",
    "end": "1566310"
  },
  {
    "text": "the on demand capacity requires no capacity planning at all you simply",
    "start": "1566310",
    "end": "1571660"
  },
  {
    "text": "create your table select on-demand and dynamo DB manages the read/write capacity for you when you need to scale",
    "start": "1571660",
    "end": "1579550"
  },
  {
    "text": "up on demand scales for you when you are using less on demand enables you to pay",
    "start": "1579550",
    "end": "1585190"
  },
  {
    "text": "for or less so you're only being charged for the read and write requests that you",
    "start": "1585190",
    "end": "1590680"
  },
  {
    "text": "consume so the current way of provisioning read/write capacity what we",
    "start": "1590680",
    "end": "1596620"
  },
  {
    "text": "now call provisioned is more cost-effective when you're confident you're not you'll have a decent",
    "start": "1596620",
    "end": "1602650"
  },
  {
    "text": "utilization of whatever provisioning capacity you specify but for less",
    "start": "1602650",
    "end": "1607690"
  },
  {
    "text": "predictable workloads where you're skeptical you'll have higher utilization and want to make sure you only pay for",
    "start": "1607690",
    "end": "1614440"
  },
  {
    "text": "what you consume we'll take care of managing that for you with on-demand I highly recommend you take a look at this",
    "start": "1614440",
    "end": "1621580"
  },
  {
    "text": "particularly if you're starting to build out service applications one of my",
    "start": "1621580",
    "end": "1627790"
  },
  {
    "text": "favorite announcements is traction tracker from reinvent its transactional API support for dynamo DB which allows",
    "start": "1627790",
    "end": "1635140"
  },
  {
    "text": "you to create transactions on multiple",
    "start": "1635140",
    "end": "1641830"
  },
  {
    "text": "items in multiple tables with no restrictions on keys partitions shards",
    "start": "1641830",
    "end": "1648160"
  },
  {
    "text": "and so on we built these transactional API specifically for developers who are",
    "start": "1648160",
    "end": "1654070"
  },
  {
    "text": "building applications on dynamo DB and asked for simpler ways of coding for",
    "start": "1654070",
    "end": "1659140"
  },
  {
    "text": "more complex application logic now dynamo DB isn't api-based key-value document store so in",
    "start": "1659140",
    "end": "1667930"
  },
  {
    "text": "building transactions we wanted to make sure to stay true to the nature of DynamoDB and not just follow the path of",
    "start": "1667930",
    "end": "1675220"
  },
  {
    "text": "other databases that have a different data model and requirements so the Texas",
    "start": "1675220",
    "end": "1680830"
  },
  {
    "text": "textbook examples that are used for transactions always have to do with taking money from one account and adding",
    "start": "1680830",
    "end": "1688240"
  },
  {
    "text": "it to another or in an order processing when you add an order and update",
    "start": "1688240",
    "end": "1693400"
  },
  {
    "text": "inventory all at once in relational database in relational databases data is",
    "start": "1693400",
    "end": "1700900"
  },
  {
    "text": "normalized a single entity is represented across many related tables and that is why and that is why to have",
    "start": "1700900",
    "end": "1709030"
  },
  {
    "text": "to though you have to build an application in the relational model you need to facilitate things like joins",
    "start": "1709030",
    "end": "1715050"
  },
  {
    "text": "referential integrity rules and transactions but in no sequel world an",
    "start": "1715050",
    "end": "1721240"
  },
  {
    "text": "entity is usually a JSON object or a document so an application doesn't spray data all or all for a single entity",
    "start": "1721240",
    "end": "1728650"
  },
  {
    "text": "across many tables so the difference between no sequel and relational databases is the data model and the",
    "start": "1728650",
    "end": "1736060"
  },
  {
    "text": "required functionality to operate in on that data model it happens that",
    "start": "1736060",
    "end": "1741220"
  },
  {
    "text": "transactions are useful in both models but the existence of transactions does",
    "start": "1741220",
    "end": "1746290"
  },
  {
    "text": "not mean that you can or should do relational algebra and DynamoDB so for a",
    "start": "1746290",
    "end": "1752530"
  },
  {
    "text": "long time developers have built highly scalable no sequel applications using conditional updates and added logic to",
    "start": "1752530",
    "end": "1759610"
  },
  {
    "text": "get all or nothing' some all-or-nothing semantics with dynamodb transactions we're making it easier for you for no",
    "start": "1759610",
    "end": "1767110"
  },
  {
    "text": "sequel developers to build internet scale applications all of the best",
    "start": "1767110",
    "end": "1772150"
  },
  {
    "text": "practices of no sequel development model still applies without having to worry about deadlocks long-running",
    "start": "1772150",
    "end": "1778540"
  },
  {
    "text": "transactions transactions that have been left open unmanaged concurrency and all",
    "start": "1778540",
    "end": "1784150"
  },
  {
    "text": "of the DBA pain and suffering that goes along with that",
    "start": "1784150",
    "end": "1788850"
  },
  {
    "text": "so as I draw to a close all of the all",
    "start": "1791300",
    "end": "1796500"
  },
  {
    "text": "of the all of the announcements that I've just shared with you and much much more is available at our reinvents site where",
    "start": "1796500",
    "end": "1804690"
  },
  {
    "text": "you can find videos to all of the related material and deep dive sessions",
    "start": "1804690",
    "end": "1810330"
  },
  {
    "text": "that dive into the topics that I've just mentioned to you so please go check that",
    "start": "1810330",
    "end": "1815760"
  },
  {
    "text": "out also if you're a developer and you're not already on the AWS developers",
    "start": "1815760",
    "end": "1822000"
  },
  {
    "text": "slack channel get on there now it's we've got rooms that are focused on servers application development",
    "start": "1822000",
    "end": "1829020"
  },
  {
    "text": "containers kubernetes community and and many many more things so please join the",
    "start": "1829020",
    "end": "1835440"
  },
  {
    "text": "AWS community discussion there's there's experts from all over the world taking",
    "start": "1835440",
    "end": "1840990"
  },
  {
    "text": "part including AWS AWS solutions architects and other technical staff and",
    "start": "1840990",
    "end": "1847500"
  },
  {
    "text": "they're more than we're more than happy to help you with any questions that you might have and with that I'm gonna say",
    "start": "1847500",
    "end": "1854340"
  },
  {
    "text": "thank you very much and please stick around we've got many more so we've got",
    "start": "1854340",
    "end": "1859380"
  },
  {
    "text": "a couple more few more sessions to come look forward to seeing you then Thanks",
    "start": "1859380",
    "end": "1864720"
  },
  {
    "text": "go forth and build and go serve us",
    "start": "1864720",
    "end": "1869090"
  },
  {
    "text": "welcome back everybody my name's Stephen leading I'm a Solutions Architect with Amazon Web Services and this is the",
    "start": "1870080",
    "end": "1876210"
  },
  {
    "text": "second part in our service service series application modernization in a",
    "start": "1876210",
    "end": "1881940"
  },
  {
    "text": "service world so in this in this webinar I want to talk to you take a closer look at the impact that service technologies",
    "start": "1881940",
    "end": "1888930"
  },
  {
    "text": "is having on modern application development and how these technologies can help you make smart decisions around",
    "start": "1888930",
    "end": "1896780"
  },
  {
    "text": "and around design patterns and implementations around microservices",
    "start": "1896780",
    "end": "1902730"
  },
  {
    "text": "messaging and integration patterns as well as data bases but before we get",
    "start": "1902730",
    "end": "1907800"
  },
  {
    "text": "started for those of you who've just joined us a couple of logistical points in the right hand side of your screen",
    "start": "1907800",
    "end": "1913380"
  },
  {
    "text": "you'll see a chat session please feel free to ask questions along the way we",
    "start": "1913380",
    "end": "1919320"
  },
  {
    "text": "have a team of service expert waiting to answer your questions we've also we'll also use",
    "start": "1919320",
    "end": "1924570"
  },
  {
    "text": "that chat session to provide you additional information and use it as a",
    "start": "1924570",
    "end": "1930929"
  },
  {
    "text": "mechanism to ask you our own questions so we'll be giving away prizes throughout the web series and it's your",
    "start": "1930929",
    "end": "1937710"
  },
  {
    "text": "opportunity to - to win AWS credits and other prizes along the way so let's get",
    "start": "1937710",
    "end": "1945720"
  },
  {
    "text": "started application modernization in a service world is going to get started right now",
    "start": "1945720",
    "end": "1952730"
  },
  {
    "text": "hello everybody when I'm Stephen bleeding I'm a Solutions Architect with Amazon Web Services and this is",
    "start": "1953299",
    "end": "1959490"
  },
  {
    "text": "application modernization in a service world in this session we'll take a",
    "start": "1959490",
    "end": "1965130"
  },
  {
    "text": "closer look at the impact service can have on modern application development and how service technologies can help",
    "start": "1965130",
    "end": "1971580"
  },
  {
    "text": "you make smart technology choices and design decisions around micro-services messaging and integration patterns and",
    "start": "1971580",
    "end": "1978630"
  },
  {
    "text": "release strategies there's a lot to cover so let's just jump straight in so",
    "start": "1978630",
    "end": "1985440"
  },
  {
    "text": "what is modern application development well earlier BS we think of modern",
    "start": "1985440",
    "end": "1990750"
  },
  {
    "text": "application development as a journey rather than an end state and there are many paths of this journey maybe you're",
    "start": "1990750",
    "end": "1997380"
  },
  {
    "text": "building something new and maybe you're already talking the cloud native talk on the other hand maybe you've done a major",
    "start": "1997380",
    "end": "2004850"
  },
  {
    "text": "enterprise lift and shift out of their data center and are taking your first steps into the new world as the picture",
    "start": "2004850",
    "end": "2011779"
  },
  {
    "text": "shows these things don't have to happen in any particular order and in fact what",
    "start": "2011779",
    "end": "2017210"
  },
  {
    "text": "happens in most cases is that customers do several things at once now ultimately",
    "start": "2017210",
    "end": "2022880"
  },
  {
    "text": "it's all about removing any of the impediments as many of the impediments as possible to getting high-quality",
    "start": "2022880",
    "end": "2029240"
  },
  {
    "text": "software out the door these are approaches that we've seen work over and",
    "start": "2029240",
    "end": "2034669"
  },
  {
    "text": "over again using service technologies frees you up and lets you focus on what",
    "start": "2034669",
    "end": "2041330"
  },
  {
    "text": "really matters creating new differentiation for your business you don't have to provision and manage",
    "start": "2041330",
    "end": "2047179"
  },
  {
    "text": "infrastructure you always have just enough resources to get the job done you don't have to pay for what you're not",
    "start": "2047179",
    "end": "2053419"
  },
  {
    "text": "using and your environment is in currently available and durable all of",
    "start": "2053419",
    "end": "2058580"
  },
  {
    "text": "these capabilities are characteristics of service infrastructure by reducing",
    "start": "2058580",
    "end": "2063889"
  },
  {
    "text": "operational overhead your do you you as developers reclaim time and energy that",
    "start": "2063890",
    "end": "2069290"
  },
  {
    "text": "can be spent delivering new and better customer outcomes and more and more we're seeing modern applications that",
    "start": "2069290",
    "end": "2076550"
  },
  {
    "text": "have been designed architected deployed managed and secured with service",
    "start": "2076550",
    "end": "2081889"
  },
  {
    "text": "technologies now Amazon has been down this journey we've made a transition",
    "start": "2081890",
    "end": "2088070"
  },
  {
    "text": "from a monolithic application and team structure to micro services in the",
    "start": "2088070",
    "end": "2093110"
  },
  {
    "text": "concept of two pizza teams many years",
    "start": "2093110",
    "end": "2098270"
  },
  {
    "text": "ago we had a large DeBarge team of developers working on a large monolithic application using a single delivery",
    "start": "2098270",
    "end": "2104330"
  },
  {
    "text": "pipeline and this has had a massive impact on this had a massive impact on our ability to meet customer",
    "start": "2104330",
    "end": "2110810"
  },
  {
    "text": "expectations quickly today it looks a little bit more like this single purpose",
    "start": "2110810",
    "end": "2117260"
  },
  {
    "text": "services each which is supported by buy two pizza teams which are which take",
    "start": "2117260",
    "end": "2123530"
  },
  {
    "text": "full ownership and full accountability for the delivery of those services connected only through api's which are",
    "start": "2123530",
    "end": "2130490"
  },
  {
    "text": "largely back black boxes to each other is give teams your tight the teams have",
    "start": "2130490",
    "end": "2136400"
  },
  {
    "text": "been given the autonomy to choose the right tools for the right job as long as they communicate with each other over",
    "start": "2136400",
    "end": "2141590"
  },
  {
    "text": "HTTP and the solution was to build self-service tools and automation",
    "start": "2141590",
    "end": "2147700"
  },
  {
    "text": "enabling each one of the DevOps teams to own and manage their own release processes accelerating the livery of a",
    "start": "2147700",
    "end": "2155810"
  },
  {
    "text": "better user experience the concept of micro services was also born which of",
    "start": "2155810",
    "end": "2162020"
  },
  {
    "text": "course in just a map and of course it wasn't just about making architecture and technology choices the whole",
    "start": "2162020",
    "end": "2168550"
  },
  {
    "text": "organization reinvented itself to support this model so for AWS giving",
    "start": "2168550",
    "end": "2176540"
  },
  {
    "text": "developers operational responsibility has greatly enhanced the quality of their services both from a customer and",
    "start": "2176540",
    "end": "2184220"
  },
  {
    "text": "a technology point of view our philosophy is you build it you",
    "start": "2184220",
    "end": "2189730"
  },
  {
    "text": "this brings developers in contact with the day-to-day operations of their software and it also brings them into",
    "start": "2189730",
    "end": "2196820"
  },
  {
    "text": "the day-to-day contact with the customer and this customer food feedback loop",
    "start": "2196820",
    "end": "2202700"
  },
  {
    "text": "this is essential for improving the quality of the service and these three approaches satisfy all of our modern",
    "start": "2202700",
    "end": "2209810"
  },
  {
    "text": "application development best practices",
    "start": "2209810",
    "end": "2213310"
  },
  {
    "text": "today when I think about application modernization I'm focusing on a few things building event-driven architectures",
    "start": "2214869",
    "end": "2221740"
  },
  {
    "text": "adopting serverless where possible and an acute focus on delivering business",
    "start": "2221740",
    "end": "2227240"
  },
  {
    "text": "value like Verna Vogel's said in this keynote at the green at reinvent last",
    "start": "2227240",
    "end": "2233900"
  },
  {
    "text": "year all the code I will want to write is business logic so let's take a look",
    "start": "2233900",
    "end": "2240920"
  },
  {
    "text": "at the first couple of approaches to modern application development and how we go start how we have we start to go",
    "start": "2240920",
    "end": "2247220"
  },
  {
    "text": "about building event-driven driven service applications so let's level set",
    "start": "2247220",
    "end": "2254540"
  },
  {
    "text": "our understanding of what marker services are here a couple of de nition definitions martin fowler describes",
    "start": "2254540",
    "end": "2261770"
  },
  {
    "text": "marker services as an architectural style is which is an approach to",
    "start": "2261770",
    "end": "2267650"
  },
  {
    "text": "developing a single application as a suite of smaller services each running in its own process and communicating",
    "start": "2267650",
    "end": "2276080"
  },
  {
    "text": "with lightweight mechanisms often HTTP resource api's now this is a great this",
    "start": "2276080",
    "end": "2283310"
  },
  {
    "text": "is a great technical definition of what market services are I think it's a little bit something missing here I",
    "start": "2283310",
    "end": "2288770"
  },
  {
    "text": "think a little bit more focus on the business would be would be good sam",
    "start": "2288770",
    "end": "2294530"
  },
  {
    "text": "newman describes micro services as independently deployable services that work together",
    "start": "2294530",
    "end": "2299810"
  },
  {
    "text": "model around a business domain now we're starting to see the introduction of what",
    "start": "2299810",
    "end": "2305270"
  },
  {
    "text": "what we're actually really trying to focus on which is actually the business domain and how a business operates and",
    "start": "2305270",
    "end": "2310550"
  },
  {
    "text": "communicates with each other my personal favorite one here is the",
    "start": "2310550",
    "end": "2317970"
  },
  {
    "text": "technical authority for a business capability and I like this and this is one that's why you need a heart and I",
    "start": "2317970",
    "end": "2323190"
  },
  {
    "text": "like this definition because one it focuses clearly on what are the outcomes",
    "start": "2323190",
    "end": "2328410"
  },
  {
    "text": "of our micro services but makes no assumptions of other than to say that there are technical Authority for put",
    "start": "2328410",
    "end": "2335400"
  },
  {
    "text": "for a business capability there's no mention of any kind of constraints around size process or technology that",
    "start": "2335400",
    "end": "2343320"
  },
  {
    "text": "needs to be implemented and I think is a good starting point for understanding",
    "start": "2343320",
    "end": "2348450"
  },
  {
    "text": "how we're going to start building event-driven architectures now one of the things that we need to consider in",
    "start": "2348450",
    "end": "2354420"
  },
  {
    "text": "in this whole market services landscape other trade-offs we make when we",
    "start": "2354420",
    "end": "2359640"
  },
  {
    "text": "designing our system now this is a graph from a presentation ravallo we did a few",
    "start": "2359640",
    "end": "2365760"
  },
  {
    "text": "years ago it's a good representation of the relationship between the number of services that we have in our",
    "start": "2365760",
    "end": "2371550"
  },
  {
    "text": "architecture and the costs or the effort of integration now the less services we",
    "start": "2371550",
    "end": "2378060"
  },
  {
    "text": "have the the higher the cost per service",
    "start": "2378060",
    "end": "2383810"
  },
  {
    "text": "but also the lower the cost of integration the more services we have",
    "start": "2383810",
    "end": "2390089"
  },
  {
    "text": "the higher the cost of integration but the lower the cost of service so as",
    "start": "2390089",
    "end": "2396680"
  },
  {
    "text": "developers and architects we should really look to find a sweet site somewhere around here ultimately let the",
    "start": "2396680",
    "end": "2404940"
  },
  {
    "text": "business capabilities drive the design choices now what we see on the Internet",
    "start": "2404940",
    "end": "2412710"
  },
  {
    "text": "is a graphics very similar to this we see a bunch of services with labels on",
    "start": "2412710",
    "end": "2419070"
  },
  {
    "text": "it and both inc interconnecting relationships between each of those and",
    "start": "2419070",
    "end": "2424310"
  },
  {
    "text": "while on the face of it this looks absolutely fine all of them quite wonder how do we",
    "start": "2424310",
    "end": "2430800"
  },
  {
    "text": "define those boundaries for these services and this fundamentally is the hard part",
    "start": "2430800",
    "end": "2438050"
  },
  {
    "text": "now one of the key one of one of the key strategies for determining how these",
    "start": "2438470",
    "end": "2444950"
  },
  {
    "text": "boundaries are defined are through domain driven design yeah the main",
    "start": "2444950",
    "end": "2451099"
  },
  {
    "text": "driven design movement was actually popularized by Eric Evans as book DDD and subsequent publications from Vaughan",
    "start": "2451099",
    "end": "2459740"
  },
  {
    "text": "Vernon and a few others now this book provides a broad framework for making",
    "start": "2459740",
    "end": "2464990"
  },
  {
    "text": "design decisions in developing a technical vocabulary for discussing the main design and it focuses on",
    "start": "2464990",
    "end": "2472490"
  },
  {
    "text": "establishing and and modeling ubiquitous languages which is a practice or",
    "start": "2472490",
    "end": "2478010"
  },
  {
    "text": "language which is a practice of building up a common rigorous language between developers and users and other",
    "start": "2478010",
    "end": "2485660"
  },
  {
    "text": "stakeholders and provides gardens around modeling techniques using things like entities value objects repositories and",
    "start": "2485660",
    "end": "2492859"
  },
  {
    "text": "services now many people when they start to read this book they start they start",
    "start": "2492859",
    "end": "2499910"
  },
  {
    "text": "looking at the tactical elements which is a very at the very beginning of this book and some good advice I got from",
    "start": "2499910",
    "end": "2506380"
  },
  {
    "text": "editor Hahn and and Greg Young was take up start reading this book at a chapter",
    "start": "2506380",
    "end": "2513680"
  },
  {
    "text": "at a roundabout chapter 11 which starts talking about the strategic design and",
    "start": "2513680",
    "end": "2519470"
  },
  {
    "text": "this is really fundamental to core concepts around building up the boundaries that were that we're looking",
    "start": "2519470",
    "end": "2525920"
  },
  {
    "text": "for looking to establish in a marker services architecture and in that's in",
    "start": "2525920",
    "end": "2534230"
  },
  {
    "text": "that section around strategic design with we get we get introduced to the concept of a bounded context these are",
    "start": "2534230",
    "end": "2540800"
  },
  {
    "text": "essential modeling deed tool in in domain driven design and also for micro services and the helped us identify the",
    "start": "2540800",
    "end": "2547940"
  },
  {
    "text": "explicit boundaries around our understanding of the ubiquitous language and the things people really care about",
    "start": "2547940",
    "end": "2554510"
  },
  {
    "text": "and allow us to create multiple models",
    "start": "2554510",
    "end": "2560300"
  },
  {
    "text": "for form for business concepts and what",
    "start": "2560300",
    "end": "2565670"
  },
  {
    "text": "is is multiple models what am i referring to here one of the things I really couldn't",
    "start": "2565670",
    "end": "2571400"
  },
  {
    "text": "and was you know how can I represent something in multiple different ways in",
    "start": "2571400",
    "end": "2577549"
  },
  {
    "text": "an example that then warned Vernon has in his book is this a publishing example",
    "start": "2577549",
    "end": "2584569"
  },
  {
    "text": "and how to model a book fundamentally the the upshot of this example is is",
    "start": "2584569",
    "end": "2591499"
  },
  {
    "text": "that there is no one model when we first create a book when we first think about",
    "start": "2591499",
    "end": "2596869"
  },
  {
    "text": "a book writing a book that it's nothing but a concept we don't have things like",
    "start": "2596869",
    "end": "2602329"
  },
  {
    "text": "ISBN numbers or or or any kind of we",
    "start": "2602329",
    "end": "2607670"
  },
  {
    "text": "might even not even have a title we may not even have an abstract but it's still something as we move through the",
    "start": "2607670",
    "end": "2614900"
  },
  {
    "text": "publishing phases we start to have interactions with other parts of the",
    "start": "2614900",
    "end": "2619970"
  },
  {
    "text": "business the book takes on other properties things like you know",
    "start": "2619970",
    "end": "2625660"
  },
  {
    "text": "authorship and it starts to develop an editorial process and things start to",
    "start": "2625660",
    "end": "2632109"
  },
  {
    "text": "develop themselves around you know what is the layout of the book and do I need illustrations how am I going to market",
    "start": "2632109",
    "end": "2639380"
  },
  {
    "text": "and sell the book and finally how am I going to distribute it at each and each phase we have a different representation",
    "start": "2639380",
    "end": "2647089"
  },
  {
    "text": "of of the book and be very difficult for us to just use a single model and then",
    "start": "2647089",
    "end": "2653690"
  },
  {
    "text": "expect to make that representative of all of the business processes",
    "start": "2653690",
    "end": "2659420"
  },
  {
    "text": "that's that encompassing the part that encompasses the publishing of that that that object or that entity and so when",
    "start": "2659420",
    "end": "2669739"
  },
  {
    "text": "we once we once we have identified bounded context we need to get a global",
    "start": "2669739",
    "end": "2675140"
  },
  {
    "text": "view of our domain and context Maps help us deal with that they help us deal with",
    "start": "2675140",
    "end": "2681170"
  },
  {
    "text": "mapping different but related ubiquitous languages but integrating their bounded",
    "start": "2681170",
    "end": "2686960"
  },
  {
    "text": "contexts now both authors describe ways in which we can integrate our bounded",
    "start": "2686960",
    "end": "2692960"
  },
  {
    "text": "context using things like shared kernels anti-corruption layers and open host services of integration patterns but an",
    "start": "2692960",
    "end": "2701630"
  },
  {
    "text": "additional central tactical component for achieving integration is modeling domain domain events now often",
    "start": "2701630",
    "end": "2709430"
  },
  {
    "text": "modeling domain events isn't something that is something that isn't really considered and most projects typically",
    "start": "2709430",
    "end": "2715730"
  },
  {
    "text": "our work starts with the static data model but modeling domain events helps",
    "start": "2715730",
    "end": "2722060"
  },
  {
    "text": "us define our event-driven architectures they're important as they form part of",
    "start": "2722060",
    "end": "2727370"
  },
  {
    "text": "the ubiquitous language for our bounded context and provide the basis for publisher publish/subscribe integration",
    "start": "2727370",
    "end": "2734990"
  },
  {
    "text": "between our contexts essentially what we're looking for in domain objects are",
    "start": "2734990",
    "end": "2740450"
  },
  {
    "text": "objects that are immutable objects that are represented as verbs in the past tense they're not designed to be",
    "start": "2740450",
    "end": "2748490"
  },
  {
    "text": "mechanisms for transferring large quantities of data we've got data transfer objects for that rather event",
    "start": "2748490",
    "end": "2756470"
  },
  {
    "text": "should be lightweight and be representative of what is occurred within the within the context that has",
    "start": "2756470",
    "end": "2762170"
  },
  {
    "text": "emitted them so good domain modeling tools it's a good domain modeling I",
    "start": "2762170",
    "end": "2769430"
  },
  {
    "text": "should say is an essential component to supporting event-driven architectures in",
    "start": "2769430",
    "end": "2776570"
  },
  {
    "text": "a very popular approach to to a more",
    "start": "2776570",
    "end": "2781790"
  },
  {
    "text": "popular an upcoming approach to modeling of their events within our system is",
    "start": "2781790",
    "end": "2787060"
  },
  {
    "text": "event storming modeling which is really useful way to do outside in domain modeling where you",
    "start": "2787060",
    "end": "2794510"
  },
  {
    "text": "starting with the events that occur in your domain in your business process and",
    "start": "2794510",
    "end": "2799900"
  },
  {
    "text": "rather than starting with the day the the the static data model they're",
    "start": "2799900",
    "end": "2810170"
  },
  {
    "text": "fundamentally all software development centers around managing dependencies we won't have loose coupling and high",
    "start": "2810170",
    "end": "2816740"
  },
  {
    "text": "cohesion and achieve a high degree of encapsulation and we've been if you've",
    "start": "2816740",
    "end": "2822980"
  },
  {
    "text": "been in software development for a while you will have heard this over and over again and achieving this achieving this",
    "start": "2822980",
    "end": "2830000"
  },
  {
    "text": "utopia is actually harder harder than it that it first appears it's easier said",
    "start": "2830000",
    "end": "2835370"
  },
  {
    "text": "than done so from a coupling perspective we need to make we need to understand that we're",
    "start": "2835370",
    "end": "2841349"
  },
  {
    "text": "not just dealing with package level dependencies and having to make making",
    "start": "2841349",
    "end": "2846599"
  },
  {
    "text": "having to make decisions around you know things like dependency injections and those kinds of things",
    "start": "2846599",
    "end": "2851699"
  },
  {
    "text": "but we're also concerning ourselves with things like platform level dependencies so what is it within am i integrating",
    "start": "2851699",
    "end": "2859160"
  },
  {
    "text": "different types of platforms and how i'm going to communicate with that standards such as HTTP you have have assisted us",
    "start": "2859160",
    "end": "2867630"
  },
  {
    "text": "with that but there may be cases where you still have some platform level dependencies other things like",
    "start": "2867630",
    "end": "2873809"
  },
  {
    "text": "time-based dependencies between collaborating components within your environment are also coupling concerns",
    "start": "2873809",
    "end": "2880679"
  },
  {
    "text": "that you should you should you need to be aware of and they need to address things like waiting for operations or",
    "start": "2880679",
    "end": "2886859"
  },
  {
    "text": "sequel sequential processing to take place before you can continue on with whatever it is that you were doing and",
    "start": "2886859",
    "end": "2893119"
  },
  {
    "text": "then there's things like spatial coupling where you're dealing with a network level abstractions so you don't",
    "start": "2893119",
    "end": "2899699"
  },
  {
    "text": "have to worry about we're collaborating services are in the network and and",
    "start": "2899699",
    "end": "2904859"
  },
  {
    "text": "provide you with a payload of mechanisms for them so achieving this loose",
    "start": "2904859",
    "end": "2912630"
  },
  {
    "text": "coupling it is is is difficult there's no loose or tie coupling it's",
    "start": "2912630",
    "end": "2919319"
  },
  {
    "text": "fundamentally a trade-off on multiple dimensions and messaging is a crit is critical to managing coupling and",
    "start": "2919319",
    "end": "2925949"
  },
  {
    "text": "addressing some of these concerns now",
    "start": "2925949",
    "end": "2931469"
  },
  {
    "text": "there are a number of integration options on ADA at 4:00 we're in AWS but",
    "start": "2931469",
    "end": "2937109"
  },
  {
    "text": "I wanted to focus on these three sqs SNS and Adria step functions each of these",
    "start": "2937109",
    "end": "2943589"
  },
  {
    "text": "services plays a fundamental role in helping you build decoupled highly scale scaleable microservices distributed",
    "start": "2943589",
    "end": "2951269"
  },
  {
    "text": "systems and service applications for the cloud now sqs is a simple flexible fully",
    "start": "2951269",
    "end": "2961140"
  },
  {
    "text": "managed suit managed Message Queuing service for reliable and continual continuous exchange of any volume of",
    "start": "2961140",
    "end": "2967829"
  },
  {
    "text": "messages from practically anywhere now with sqs as an event source for",
    "start": "2967829",
    "end": "2973180"
  },
  {
    "text": "lambda you can use lambda functions to respond to new messages in an sqs queue",
    "start": "2973180",
    "end": "2979590"
  },
  {
    "text": "the lambda is effectively polling that queue for you you still get all the the",
    "start": "2979590",
    "end": "2985960"
  },
  {
    "text": "great stuff sqs provides you so you into your integration model doesn't change whether you're you know polling that",
    "start": "2985960",
    "end": "2992290"
  },
  {
    "text": "queue yourself or not you still have message durability you still have you",
    "start": "2992290",
    "end": "2998380"
  },
  {
    "text": "still have queues that can accept messages pretty much at any rate there's",
    "start": "2998380",
    "end": "3003630"
  },
  {
    "text": "no need to provision capacity and you can still use visibility timeouts to control for failure portfolio processing",
    "start": "3003630",
    "end": "3013550"
  },
  {
    "text": "but it is a very useful way for you to be able to start to start to scale and",
    "start": "3015260",
    "end": "3022830"
  },
  {
    "text": "throttle out your your implementations and provide reliable messaging between your service components SNS simple",
    "start": "3022830",
    "end": "3034320"
  },
  {
    "text": "notification service is a simple flexible fully managed publish/subscribe messaging and mobile push notification",
    "start": "3034320",
    "end": "3041820"
  },
  {
    "text": "service for high throughput high reliable message delivery now SNS allows",
    "start": "3041820",
    "end": "3048119"
  },
  {
    "text": "you to put some push messages to a variety of endpoints and clients in your",
    "start": "3048119",
    "end": "3054030"
  },
  {
    "text": "distributed systems or micro services and you can do so across multiple",
    "start": "3054030",
    "end": "3059460"
  },
  {
    "text": "protocols and they're a key enabler for an event-driven publish/subscribe",
    "start": "3059460",
    "end": "3064710"
  },
  {
    "text": "architecture now what some customers",
    "start": "3064710",
    "end": "3070350"
  },
  {
    "text": "have been doing is is is using topic-based is mapping events to topics and there's",
    "start": "3070350",
    "end": "3079080"
  },
  {
    "text": "nothing inherently wrong with this except for from a from a coupling",
    "start": "3079080",
    "end": "3084600"
  },
  {
    "text": "perspective so in this example I've got I've got a logical publisher publishing",
    "start": "3084600",
    "end": "3089970"
  },
  {
    "text": "a gray and a blue blue blue messages or blue events and and they're both aligned",
    "start": "3089970",
    "end": "3097650"
  },
  {
    "text": "to gray and blue topics and the consumers are subscribing to the top",
    "start": "3097650",
    "end": "3103710"
  },
  {
    "text": "for the messages that they are interested in now this is great but one",
    "start": "3103710",
    "end": "3109050"
  },
  {
    "text": "of the one of the key concerns is here is that the publisher now needs to know which public which mess which topic to",
    "start": "3109050",
    "end": "3116280"
  },
  {
    "text": "publish each message to so as your as your the events grow within within your",
    "start": "3116280",
    "end": "3122910"
  },
  {
    "text": "within your application so do the topics and so the so does the the coupling between those between a bit of",
    "start": "3122910",
    "end": "3129690"
  },
  {
    "text": "infrastructure and and the actual natural logical message itself so the",
    "start": "3129690",
    "end": "3135390"
  },
  {
    "text": "responsibility of routing those mitches messages to the ret to the correct topic",
    "start": "3135390",
    "end": "3140550"
  },
  {
    "text": "is is that of the of the of the publisher now with Emma with SNS message",
    "start": "3140550",
    "end": "3148950"
  },
  {
    "text": "filters filters publishers simply need to decorate those messages with message",
    "start": "3148950",
    "end": "3154770"
  },
  {
    "text": "attributes and subscribers to those topics can specify a filter policy which",
    "start": "3154770",
    "end": "3160080"
  },
  {
    "text": "allows them to receive only the messages that they're interested in so in this in",
    "start": "3160080",
    "end": "3165720"
  },
  {
    "text": "this case here the publisher can publish either gray or blue messages it as long",
    "start": "3165720",
    "end": "3172500"
  },
  {
    "text": "as it's been Dec as long as the publisher decorates that with some metadata attributes absque ribes can",
    "start": "3172500",
    "end": "3178859"
  },
  {
    "text": "specify the the filter that they want to be that they are interested in for the",
    "start": "3178859",
    "end": "3184890"
  },
  {
    "text": "messages that they interested in receiving so you can see here service a is really only interested in receiving",
    "start": "3184890",
    "end": "3191010"
  },
  {
    "text": "gray messages service B only to service C is not respess off' eyeing any",
    "start": "3191010",
    "end": "3196619"
  },
  {
    "text": "messages so it's going to receive all of the events that the the publisher is",
    "start": "3196619",
    "end": "3203369"
  },
  {
    "text": "publishing and so this provides a really nice way for for you to low your",
    "start": "3203369",
    "end": "3212700"
  },
  {
    "text": "infrastructure cost but also remove some of the complexity around routing for me from a publishing perspective now to in",
    "start": "3212700",
    "end": "3221849"
  },
  {
    "text": "addition some additional filters that you can you can operate on ease things like exact matching on value strings you",
    "start": "3221849",
    "end": "3229680"
  },
  {
    "text": "can even do pre prefix matching or anything but messaging which is fundamentally blacklisting so show me",
    "start": "3229680",
    "end": "3236609"
  },
  {
    "text": "everything but a particular string you can also use exact matter exact matching on your",
    "start": "3236609",
    "end": "3243369"
  },
  {
    "text": "numeric values and as well as looking at ranges your services your subscribers",
    "start": "3243369",
    "end": "3249460"
  },
  {
    "text": "can very be very specific around the messages that they receive and this is a",
    "start": "3249460",
    "end": "3255250"
  },
  {
    "text": "great way to start filtering through start optimizing your your mock services",
    "start": "3255250",
    "end": "3261670"
  },
  {
    "text": "environments now one of the other things",
    "start": "3261670",
    "end": "3268210"
  },
  {
    "text": "that we've seen like many people do is you know this this whole thing about",
    "start": "3268210",
    "end": "3273490"
  },
  {
    "text": "function this whole concept around function chaining where one function is calling another function which is",
    "start": "3273490",
    "end": "3279040"
  },
  {
    "text": "calling another function there's a bunch of problems with is fundamentally each poor each function needs to know how to",
    "start": "3279040",
    "end": "3286119"
  },
  {
    "text": "call the next function down the chain this coordination logic adds additional coupling to the implementation and",
    "start": "3286119",
    "end": "3292480"
  },
  {
    "text": "violates you know single responsibility design principles on top of making the functions overly complex now because of",
    "start": "3292480",
    "end": "3301000"
  },
  {
    "text": "the stateless nature of lambda you need a mechanism for persisting state between function calls and this adds additional",
    "start": "3301000",
    "end": "3307990"
  },
  {
    "text": "services to the solution this will add additional services to the solution and",
    "start": "3307990",
    "end": "3313090"
  },
  {
    "text": "add an additional over operational concern and dealing with failures and",
    "start": "3313090",
    "end": "3320140"
  },
  {
    "text": "retries also becomes very difficult so inter step functions",
    "start": "3320140",
    "end": "3326290"
  },
  {
    "text": "step functions allows you to build fully managed state machines that help you coordinate the components of distributed",
    "start": "3326290",
    "end": "3332980"
  },
  {
    "text": "applications and micro services and do so using visual workflows it also",
    "start": "3332980",
    "end": "3338170"
  },
  {
    "text": "provides you with a mechanism to save state as you transition data between the",
    "start": "3338170",
    "end": "3343300"
  },
  {
    "text": "components in your state machine and allows you to keep orchestrating or orchestration out of out of",
    "start": "3343300",
    "end": "3349710"
  },
  {
    "text": "orchestration logic out of your code so your your functions remain clean and",
    "start": "3349710",
    "end": "3355570"
  },
  {
    "text": "have single responsibilities but together encapsulate business capability",
    "start": "3355570",
    "end": "3360880"
  },
  {
    "text": "is not all that dissimilar to the concept of an aggregate and done domain driven design",
    "start": "3360880",
    "end": "3367140"
  },
  {
    "text": "and so it allows us to do things like sequential task execution being able to",
    "start": "3367140",
    "end": "3373499"
  },
  {
    "text": "catch try and reach retry failed tasks you can do conditional logic and and and",
    "start": "3373499",
    "end": "3381390"
  },
  {
    "text": "have have discrete execution paths based on based on some values in some of the",
    "start": "3381390",
    "end": "3389190"
  },
  {
    "text": "data inside your state and you can also use it to run parallel parallel tasks",
    "start": "3389190",
    "end": "3397130"
  },
  {
    "text": "now developers really love the fact that they can easily call lambda functions to implement their business logic so with",
    "start": "3398089",
    "end": "3404519"
  },
  {
    "text": "and what we and with step functions API connectors you can actually design",
    "start": "3404519",
    "end": "3409799"
  },
  {
    "text": "workflows now with with between your AWS services without actually having to",
    "start": "3409799",
    "end": "3415140"
  },
  {
    "text": "write any code now we've added eight integrations for AWS services to",
    "start": "3415140",
    "end": "3420690"
  },
  {
    "text": "automate workflows even faster you can use compute services such as AWS batch",
    "start": "3420690",
    "end": "3426349"
  },
  {
    "text": "elastic container service service and Fargate and database services like",
    "start": "3426349",
    "end": "3432269"
  },
  {
    "text": "Amazon DynamoDB as well as starting to integrate your own messaging messaging",
    "start": "3432269",
    "end": "3438029"
  },
  {
    "text": "service such as SNS and SQS and sage maker and glue this takes away a lot of",
    "start": "3438029",
    "end": "3444749"
  },
  {
    "text": "the heavy lifting of integrating these services into your micro services and",
    "start": "3444749",
    "end": "3450210"
  },
  {
    "text": "accelerates your development and focus on just writing business logic so my",
    "start": "3450210",
    "end": "3457890"
  },
  {
    "text": "previous sessions I talk to you about service application repository and this",
    "start": "3457890",
    "end": "3463200"
  },
  {
    "text": "is a set of capabilities that made it easier for teams to store share and deploy complete service applications now",
    "start": "3463200",
    "end": "3472619"
  },
  {
    "text": "nested applications is a new feature that allows you to build service applications as a set of nested",
    "start": "3472619",
    "end": "3478289"
  },
  {
    "text": "applications and this is particularly useful when you see common patterns emerge that often get re implemented",
    "start": "3478289",
    "end": "3484799"
  },
  {
    "text": "across teams and projects and normally this results in duplication of effort",
    "start": "3484799",
    "end": "3490589"
  },
  {
    "text": "hurting developer velocity and makes the hard to enforce architectural best practices across your organization",
    "start": "3490589",
    "end": "3499410"
  },
  {
    "text": "so here's an example of how you might embed reusable functionality inside your service applications in this example in",
    "start": "3499410",
    "end": "3506770"
  },
  {
    "text": "this example I've got I have add two applications subscribing to a domain event emitted by emitted by my service",
    "start": "3506770",
    "end": "3517450"
  },
  {
    "text": "application and each one of those is persisting that those events to s3 and",
    "start": "3517450",
    "end": "3523330"
  },
  {
    "text": "dynamo in their own respective contexts now these are fully featured implementations that encapsulate the",
    "start": "3523330",
    "end": "3530710"
  },
  {
    "text": "functionality of auditing and analytics and can be easily reused and deployed into other service applications if you",
    "start": "3530710",
    "end": "3541840"
  },
  {
    "text": "put all these service capabilities together the messaging components provide you",
    "start": "3541840",
    "end": "3547660"
  },
  {
    "text": "with a highly scalable durable of implementation for common design patterns to support asynchronous",
    "start": "3547660",
    "end": "3554260"
  },
  {
    "text": "adventure of an microservices communication in multiple different ways",
    "start": "3554260",
    "end": "3559930"
  },
  {
    "text": "one way fire-and-forget dual will request some response and",
    "start": "3559930",
    "end": "3565510"
  },
  {
    "text": "you'll be able to specify of course pub/sub messaging which can be used in",
    "start": "3565510",
    "end": "3572020"
  },
  {
    "text": "conjunction with sqs now with the s with step function and nested applications we",
    "start": "3572020",
    "end": "3578350"
  },
  {
    "text": "can encapsulate business functionality and long running processes reliably and reuse common patterns across our",
    "start": "3578350",
    "end": "3584920"
  },
  {
    "text": "architectures the important thing to recognize here is that our messaging and",
    "start": "3584920",
    "end": "3590290"
  },
  {
    "text": "integration patterns allow you to provide reliable and scalable architectures with loosely coupled",
    "start": "3590290",
    "end": "3595690"
  },
  {
    "text": "marker surfaces with explicit boundaries and they're important attribute and and",
    "start": "3595690",
    "end": "3601090"
  },
  {
    "text": "the and that and these are important attributes and that we that will help us",
    "start": "3601090",
    "end": "3607930"
  },
  {
    "text": "look that that will help us with that what we're going to be looking at next so i spoken a lot about marker services",
    "start": "3607930",
    "end": "3615550"
  },
  {
    "text": "let's take a look at two other approaches from what an application development in the service context modeling applications and infrastructure",
    "start": "3615550",
    "end": "3622360"
  },
  {
    "text": "as code and continuous integration and continuous deployment",
    "start": "3622360",
    "end": "3628140"
  },
  {
    "text": "now first thing I want to do is introduce you to the service application",
    "start": "3629460",
    "end": "3634600"
  },
  {
    "text": "model this is how we model and functions and service applications service",
    "start": "3634600",
    "end": "3640330"
  },
  {
    "text": "application model is a sir is an open source framework that provides shorthand",
    "start": "3640330",
    "end": "3645880"
  },
  {
    "text": "syntax to express things like functions API api's databases and event source",
    "start": "3645880",
    "end": "3652840"
  },
  {
    "text": "mappings for our lambda functions and effectively it's a superset of cloud formation it helps us transform and",
    "start": "3652840",
    "end": "3659710"
  },
  {
    "text": "expand that and helps us transform and expand the syntax to output cloud",
    "start": "3659710",
    "end": "3666820"
  },
  {
    "text": "formation syntax and it supports because it's fundamentally CloudFormation",
    "start": "3666820",
    "end": "3671830"
  },
  {
    "text": "supports all types of cloud formation resources you can you can find more",
    "start": "3671830",
    "end": "3677320"
  },
  {
    "text": "information on this link and here's just an example or a very simple example of",
    "start": "3677320",
    "end": "3684040"
  },
  {
    "text": "how you can use them as service application model so in just 20 lines of",
    "start": "3684040",
    "end": "3689260"
  },
  {
    "text": "code I'm able to create a lambda function specify its handler its runtime",
    "start": "3689260",
    "end": "3694500"
  },
  {
    "text": "where I can find its where I can find the source code that we're going to be deploying to the platform I can also",
    "start": "3694500",
    "end": "3701410"
  },
  {
    "text": "specify my I and policies and the event source is in this case it's API gateway",
    "start": "3701410",
    "end": "3708930"
  },
  {
    "text": "now and then map that sorry and then map that function to a specific path for a",
    "start": "3708930",
    "end": "3716140"
  },
  {
    "text": "specific method now this is a implicit definition for that for that mapping and",
    "start": "3716140",
    "end": "3722350"
  },
  {
    "text": "what service application model is actually going to do is going to create an API with those resources and actually",
    "start": "3722350",
    "end": "3729460"
  },
  {
    "text": "create the the integration mapping necessary to point to that lambda function we've also got a way to to",
    "start": "3729460",
    "end": "3736810"
  },
  {
    "text": "create DynamoDB very very simply and then use that as a reference in my iam",
    "start": "3736810",
    "end": "3742720"
  },
  {
    "text": "policy so with this 20 lines of code you can see I've actually accomplished quite",
    "start": "3742720",
    "end": "3748060"
  },
  {
    "text": "a lot accompanying Sam is the same",
    "start": "3748060",
    "end": "3753070"
  },
  {
    "text": "command-line interface now this provides us with a mechanism to",
    "start": "3753070",
    "end": "3759319"
  },
  {
    "text": "initialize that runs run service applications locally I can invoke and",
    "start": "3759319",
    "end": "3766410"
  },
  {
    "text": "start api's I'm not going to invoke and start lambda functions I can also use it",
    "start": "3766410",
    "end": "3772020"
  },
  {
    "text": "to generate events that are going to need to consume and build my builds out my my service applications a build and",
    "start": "3772020",
    "end": "3780299"
  },
  {
    "text": "publish are the two newest commands that we've added to Sam CLI so Sam allows you",
    "start": "3780299",
    "end": "3786539"
  },
  {
    "text": "to build up your lambda source and generate the deployment artifacts that",
    "start": "3786539",
    "end": "3793349"
  },
  {
    "text": "create so Sam build allows you to do all this to build your lambda source code",
    "start": "3793349",
    "end": "3798599"
  },
  {
    "text": "and generate their deployment artifacts they generate the lander execution environment so by doing this the",
    "start": "3798599",
    "end": "3806130"
  },
  {
    "text": "function that you build locally will run similar to the environment to the",
    "start": "3806130",
    "end": "3811349"
  },
  {
    "text": "environment that's in the AWS cloud so the same Bill command integrate sorry",
    "start": "3811349",
    "end": "3817920"
  },
  {
    "text": "iterates through the functions in your application and looks for a manifest file such as a requirements test if",
    "start": "3817920",
    "end": "3823710"
  },
  {
    "text": "you're if you're doing Python that contains all the dependencies and then automatically creates deployment",
    "start": "3823710",
    "end": "3830190"
  },
  {
    "text": "artifacts that you can deploy to lambda using the same package in Sam deploy",
    "start": "3830190",
    "end": "3835230"
  },
  {
    "text": "commands Sam publish is allows you to",
    "start": "3835230",
    "end": "3841970"
  },
  {
    "text": "automate the deployment of your applications to the service application repository and provides a new it",
    "start": "3841970",
    "end": "3849329"
  },
  {
    "text": "provides a different way for you to be able to distribute your applications now",
    "start": "3849329",
    "end": "3856980"
  },
  {
    "text": "a typical workflow for developers when they when are using Sam is first by using the mini command but creating a",
    "start": "3856980",
    "end": "3864240"
  },
  {
    "text": "function and specifying a runtime then we'd go into the same Bill command which",
    "start": "3864240",
    "end": "3869819"
  },
  {
    "text": "as I just described takes all of the artifacts and takes all of the dependencies and packages and them up",
    "start": "3869819",
    "end": "3875700"
  },
  {
    "text": "and once I've completed those processes I can then use package and deploy and to",
    "start": "3875700",
    "end": "3882390"
  },
  {
    "text": "deploy my applications and that and this cycle repeats itself until I get to that",
    "start": "3882390",
    "end": "3888089"
  },
  {
    "text": "point where I want to publish my application if I choose to to the",
    "start": "3888089",
    "end": "3893130"
  },
  {
    "text": "service application repository I can also you start to use the service",
    "start": "3893130",
    "end": "3898440"
  },
  {
    "text": "application model template file within my within my build environment",
    "start": "3898440",
    "end": "3903599"
  },
  {
    "text": "now AWS code build provides is a service that provides you as a fully managed",
    "start": "3903599",
    "end": "3909960"
  },
  {
    "text": "build service that compiles all your source code runs all your tests and produces all the software packages by",
    "start": "3909960",
    "end": "3916800"
  },
  {
    "text": "executing the commands that I just talked about so it can scale continuously and and have multiple",
    "start": "3916800",
    "end": "3924750"
  },
  {
    "text": "concurrent builds that you can have multiple concurrent builds but the best",
    "start": "3924750",
    "end": "3931020"
  },
  {
    "text": "thing about all this is is that built around the same pricing structure as as lambda is whereas you're only paying for",
    "start": "3931020",
    "end": "3938880"
  },
  {
    "text": "the millet or the time it takes for the time it actually takes to do the",
    "start": "3938880",
    "end": "3944010"
  },
  {
    "text": "compilation and you don't have to worry about managing your servers now each",
    "start": "3944010",
    "end": "3949440"
  },
  {
    "text": "bill runs effectively in a new docker container for a consistent immutable",
    "start": "3949440",
    "end": "3954869"
  },
  {
    "text": "environment and docker and AWS CLI are installed on every code code build image",
    "start": "3954869",
    "end": "3960960"
  },
  {
    "text": "so you can you can start to build up your commands we're certainly that they",
    "start": "3960960",
    "end": "3965970"
  },
  {
    "text": "all execute correctly and you also have the ability to provide your own custom",
    "start": "3965970",
    "end": "3971490"
  },
  {
    "text": "build environments that are suited to the needs of your your particular application now from a service",
    "start": "3971490",
    "end": "3978030"
  },
  {
    "text": "perspective or from a lander perspective we've got you can you can build up your",
    "start": "3978030",
    "end": "3984810"
  },
  {
    "text": "multiple phases within your within your build environment through a build specification file and this allows you",
    "start": "3984810",
    "end": "3992280"
  },
  {
    "text": "to run things like your CI continuous integration testing and also allows you",
    "start": "3992280",
    "end": "3997710"
  },
  {
    "text": "to execute the the packaging commands are necessary to transform your",
    "start": "3997710",
    "end": "4003109"
  },
  {
    "text": "applications into deployable artifacts and this facilitates transition and",
    "start": "4003109",
    "end": "4008960"
  },
  {
    "text": "automation of your service application through your build cycle three deployments are core sorry now another",
    "start": "4008960",
    "end": "4016730"
  },
  {
    "text": "way we're looking at modernizing application development is now approach to infrastructure as code",
    "start": "4016730",
    "end": "4023280"
  },
  {
    "text": "now the AWS CDK is an infrastructure modeling framework that allows you to",
    "start": "4023280",
    "end": "4028530"
  },
  {
    "text": "define your cloud resources using an imperative programming interface and this makes it much more approachable for",
    "start": "4028530",
    "end": "4035940"
  },
  {
    "text": "developers than than regular cloud formation the cdk provides a library of",
    "start": "4035940",
    "end": "4041250"
  },
  {
    "text": "higher-level resource types called construct classes would you can compose",
    "start": "4041250",
    "end": "4046380"
  },
  {
    "text": "into stacks and apps now the cdk is currently in Developer",
    "start": "4046380",
    "end": "4051780"
  },
  {
    "text": "Preview and so if you want to be able to so please check it out and we are we are",
    "start": "4051780",
    "end": "4057960"
  },
  {
    "text": "actually taking feedback and looking for collaboration on on on the actual framework itself now something here's",
    "start": "4057960",
    "end": "4066840"
  },
  {
    "text": "some examples of how what cdk looks like this is an example this is a useful way",
    "start": "4066840",
    "end": "4073740"
  },
  {
    "text": "city Kaiser is a useful way for creating high level structures for example a VP senior standard in your environment and",
    "start": "4073740",
    "end": "4082440"
  },
  {
    "text": "it's it's a easy way for you to standardize you know the creation of sudden nets and gateways network address",
    "start": "4082440",
    "end": "4089240"
  },
  {
    "text": "net services routing and security groups",
    "start": "4089240",
    "end": "4094340"
  },
  {
    "text": "we've also got a high-level resources for introducing things like get proper",
    "start": "4095390",
    "end": "4100859"
  },
  {
    "text": "creating things like a load balance Fargate service so here we've got here",
    "start": "4100859",
    "end": "4108359"
  },
  {
    "text": "we're interacting with ECS service that defines things like a load balancer listener rules target groups and",
    "start": "4108359",
    "end": "4115980"
  },
  {
    "text": "optionally you can use you can introduce route 53 alias records now these 22",
    "start": "4115980",
    "end": "4124290"
  },
  {
    "text": "lines of typescript code basically generate over 400 lines of cloud",
    "start": "4124290",
    "end": "4129900"
  },
  {
    "text": "permission syntax so you can see shoot one it's more attainable - it's going to",
    "start": "4129900",
    "end": "4136230"
  },
  {
    "text": "save you a lot of time now another way you can use CD case to start modeling",
    "start": "4136230",
    "end": "4143400"
  },
  {
    "text": "your pipelines and you configure AWS code pipeline with cdk so when you add a",
    "start": "4143400",
    "end": "4151440"
  },
  {
    "text": "micro services you need to create a new pipeline similar to you know the one that you created before we see decay you",
    "start": "4151440",
    "end": "4158960"
  },
  {
    "text": "can use that higher level classes instead of copying and pasting lots of yeah more code inside your inside your",
    "start": "4158960",
    "end": "4165290"
  },
  {
    "text": "inside your cloud formation files so",
    "start": "4165290",
    "end": "4172130"
  },
  {
    "text": "here's an example of how you might create a marker services pipeline as you",
    "start": "4172130",
    "end": "4180770"
  },
  {
    "text": "can see we've got a number of different we've got a number of different constructs in here we've got the",
    "start": "4180770",
    "end": "4187579"
  },
  {
    "text": "pipeline we've got an access to secrets parameter and we're passing all of those",
    "start": "4187579",
    "end": "4192770"
  },
  {
    "text": "credentials into the github source action which is going to kick off our",
    "start": "4192770",
    "end": "4197989"
  },
  {
    "text": "which is going to kick off our pipeline and here's a pipeline stack and so as I",
    "start": "4197989",
    "end": "4204139"
  },
  {
    "text": "was mentioning before in this stack you can create the contacts that you that simply by you can create a new pipeline",
    "start": "4204139",
    "end": "4210469"
  },
  {
    "text": "simply by creating new pipelines and so in aligning those two new micro-services",
    "start": "4210469",
    "end": "4218889"
  },
  {
    "text": "now just like with the same CLI you can use the the cdk CLI commands to help",
    "start": "4220119",
    "end": "4229130"
  },
  {
    "text": "automate and use the use the add CloudFormation actions within your pipeline to automate the deployment and",
    "start": "4229130",
    "end": "4237139"
  },
  {
    "text": "you also use the Sam set you can also use the cdk CMC I plug-in when you're",
    "start": "4237139",
    "end": "4242809"
  },
  {
    "text": "Jenkins environment to execute these commands so you can see we're looking",
    "start": "4242809",
    "end": "4249340"
  },
  {
    "text": "we're starting to develop and think of ways to help accelerate the delivery of",
    "start": "4249340",
    "end": "4254960"
  },
  {
    "text": "your applications so let's wrap the",
    "start": "4254960",
    "end": "4260000"
  },
  {
    "text": "session up by asking you what really matters fundamentally we look modern",
    "start": "4260000",
    "end": "4266030"
  },
  {
    "text": "Apple is a modern application development is all about greater agility less overhead better focus increased",
    "start": "4266030",
    "end": "4273860"
  },
  {
    "text": "scale more flexibility and only paying for what you value as developers we",
    "start": "4273860",
    "end": "4282590"
  },
  {
    "text": "should be focusing on what we're seeing to be a new way of building applet patience developers can should could be",
    "start": "4282590",
    "end": "4293300"
  },
  {
    "text": "able to do almost anything leverage existing platforms that have thought",
    "start": "4293300",
    "end": "4299900"
  },
  {
    "text": "that a bit that are opinionated to help drive out and and build build best practice security scale performance and",
    "start": "4299900",
    "end": "4308690"
  },
  {
    "text": "cost aspects for you and with that I want to say thank you very much look",
    "start": "4308690",
    "end": "4316670"
  },
  {
    "text": "forward to the next session go build and go service welcome back everybody my",
    "start": "4316670",
    "end": "4326450"
  },
  {
    "text": "name is Steven leading I'm a Solutions Architect for Amazon Web Services and welcome to this next session in our",
    "start": "4326450",
    "end": "4333560"
  },
  {
    "text": "service webinar series if you've just joined us never mind you the previous",
    "start": "4333560",
    "end": "4340730"
  },
  {
    "text": "sessions that we've made today and have all been recorded so you can view them at your leisure after we've made this",
    "start": "4340730",
    "end": "4346910"
  },
  {
    "text": "available online so before we get started a few logistics I just wanted to",
    "start": "4346910",
    "end": "4354860"
  },
  {
    "text": "let you know that we have a chat session in your browser and you can use that",
    "start": "4354860",
    "end": "4361460"
  },
  {
    "text": "chat session to ask questions at any time throughout this presentation we",
    "start": "4361460",
    "end": "4366980"
  },
  {
    "text": "have a team of service experts ready to answer your question and so so far away",
    "start": "4366980",
    "end": "4373100"
  },
  {
    "text": "at will we also will use this to ask our own questions we've got giveaway prizes",
    "start": "4373100",
    "end": "4379400"
  },
  {
    "text": "we've also got some AWS vouchers so when you see us asking a question and you're",
    "start": "4379400",
    "end": "4384890"
  },
  {
    "text": "the first person to answer that correctly then we'll send you those",
    "start": "4384890",
    "end": "4390320"
  },
  {
    "text": "prizes and we'll also be posting links and other resources that are related to",
    "start": "4390320",
    "end": "4397370"
  },
  {
    "text": "the presentation so you can use those to follow up throughout after the after the",
    "start": "4397370",
    "end": "4404710"
  },
  {
    "text": "after the presentation is completed so with me today I have a lean from viz",
    "start": "4404710",
    "end": "4410210"
  },
  {
    "text": "olynyk's welcome Naveen thank you it's a pleasure to be here thank you for coming I mean um is what's",
    "start": "4410210",
    "end": "4417380"
  },
  {
    "text": "up what's visible extend and what they do thank you well the mission of physics is enabling change with data we",
    "start": "4417380",
    "end": "4423679"
  },
  {
    "text": "have a proprietary platform that serves our customers in the public and private sector with a focus and transportation",
    "start": "4423679",
    "end": "4429650"
  },
  {
    "text": "tourism and economic development customers who come to us all have the same pain point I don't know what I",
    "start": "4429650",
    "end": "4435710"
  },
  {
    "text": "don't know about what's in my data I don't want to have a heavy bi expensive solution and I don't have the budget to",
    "start": "4435710",
    "end": "4442190"
  },
  {
    "text": "hire data scientists can you help me to discover those insights can you help me to be more proactive instead of reactive",
    "start": "4442190",
    "end": "4448960"
  },
  {
    "text": "okay fantastic and and service is very much part of your story and you're going",
    "start": "4448960",
    "end": "4454280"
  },
  {
    "text": "to be talking to us about the work that you've done with Sydney trains today correct excellent well without further",
    "start": "4454280",
    "end": "4460429"
  },
  {
    "text": "ado I'll pass it on to you and you can tell us all about it thank you very much thank you",
    "start": "4460429",
    "end": "4467019"
  },
  {
    "text": "great so welcome everyone today I want to talk to you about serverless serverless is simple efficient and cost",
    "start": "4469869",
    "end": "4477380"
  },
  {
    "text": "effective and what I want to do this afternoon is take you through some production examples of service in action",
    "start": "4477380",
    "end": "4483860"
  },
  {
    "text": "for our visit expose our customers are frustrated with the level of effort required from preparing data to",
    "start": "4483860",
    "end": "4490940"
  },
  {
    "text": "gathering insight and they want to be proactive the data exists to make this happen but a platform in which their",
    "start": "4490940",
    "end": "4497900"
  },
  {
    "text": "disparate information is tied together at scale is where we come in to help our engineers appreciate the flexibility and",
    "start": "4497900",
    "end": "4504860"
  },
  {
    "text": "the simplicity that serverless provides them in our production deployments for many of our customers a pilot is the",
    "start": "4504860",
    "end": "4512480"
  },
  {
    "text": "starting point to quickly refine their problem statement but also to broaden",
    "start": "4512480",
    "end": "4517849"
  },
  {
    "text": "their definition of what's possible when they see their data in action our pilots",
    "start": "4517849",
    "end": "4523460"
  },
  {
    "text": "will launch in anywhere from 2 to 12 weeks and have been really helpful in bringing together both the business and",
    "start": "4523460",
    "end": "4529760"
  },
  {
    "text": "technical stakeholders today I want to focus on the technical aspects of using",
    "start": "4529760",
    "end": "4534770"
  },
  {
    "text": "serverless in production so let's get started server list drives multiple parts of our",
    "start": "4534770",
    "end": "4541429"
  },
  {
    "text": "platform our engineers love the scalability the replicability and the flexibility that serverless enable",
    "start": "4541429",
    "end": "4548409"
  },
  {
    "text": "our customers love the cost-effectiveness I want to dig in because our dashboards are a fairly",
    "start": "4548409",
    "end": "4554979"
  },
  {
    "text": "straightforward approach to web delivered dashboards over the past years we've transitioned our monolithic ingest",
    "start": "4554979",
    "end": "4561969"
  },
  {
    "text": "subsystem to a server server list approach making this scaleable cost-effective and easy to maintain we",
    "start": "4561969",
    "end": "4569650"
  },
  {
    "text": "can change individual pieces much more easily and effectively so there's no need to do a large-scale release just to",
    "start": "4569650",
    "end": "4576579"
  },
  {
    "text": "change individual parts of the system they can all be easily managed and this matters to our clients because as they",
    "start": "4576579",
    "end": "4582789"
  },
  {
    "text": "want to add new sources of data we can quickly integrate new endpoints seamlessly in terms of machine learning",
    "start": "4582789",
    "end": "4590110"
  },
  {
    "text": "we can readily augment our graph with various kinds of ml and graph analytics later on we'll cover continuous training",
    "start": "4590110",
    "end": "4596709"
  },
  {
    "text": "for delay characterization and trains so let's take a look at the architecture what you're looking at right now is a",
    "start": "4596709",
    "end": "4603849"
  },
  {
    "text": "generalized sample of our architecture all of our solutions are web delivered to our users",
    "start": "4603849",
    "end": "4609309"
  },
  {
    "text": "previously we use servlet containers like Tomcat hosted on ec2 we have now",
    "start": "4609309",
    "end": "4615039"
  },
  {
    "text": "transitioned the vast majority to service with the little exceptions of some interactive stateful visualizations",
    "start": "4615039",
    "end": "4621159"
  },
  {
    "text": "that actually need a visualization server but transitioning was easy and the cost savings were significant on",
    "start": "4621159",
    "end": "4628150"
  },
  {
    "text": "order of 90 percent now think about that 90 percent now let's move on to ingest",
    "start": "4628150",
    "end": "4634780"
  },
  {
    "text": "and service and it makes the heavy and it makes heavy use of AWS lambda Amazon",
    "start": "4634780",
    "end": "4640449"
  },
  {
    "text": "Kinesis and Amazon s3 we're gonna get into more detail on that in the next slide our knowledge graph is a",
    "start": "4640449",
    "end": "4646269"
  },
  {
    "text": "proprietary graph Pat form but certain aspects of how we augment our graph have",
    "start": "4646269",
    "end": "4651459"
  },
  {
    "text": "also transitioned to server lists using Amazon sage maker and AWS lambda we'll also dig into those further on why",
    "start": "4651459",
    "end": "4658479"
  },
  {
    "text": "server lists for us it's easy to maintain easy to structure in architecture it removes the pain of",
    "start": "4658479",
    "end": "4664209"
  },
  {
    "text": "operational maintenance it allows you to separate concerns design patterns in a",
    "start": "4664209",
    "end": "4669459"
  },
  {
    "text": "more effective way there's flexibility we can pick up and we can replicate this elsewhere quickly for",
    "start": "4669459",
    "end": "4675100"
  },
  {
    "text": "they're clients and it allows our engineers to focus on the different more complex problems within our graph",
    "start": "4675100",
    "end": "4680830"
  },
  {
    "text": "instead of a huge time sink of operational concerns so I want to pause for a second and talk about graphs",
    "start": "4680830",
    "end": "4686980"
  },
  {
    "text": "because not everybody is familiar with them because our solutions require us to understand data in a multi-dimensional",
    "start": "4686980",
    "end": "4692770"
  },
  {
    "text": "and highly contextual way we've found graph databases to be an elegant and effective way to model and analyze data",
    "start": "4692770",
    "end": "4699720"
  },
  {
    "text": "by the way a mizuna Amazon Neptune is a managed graph solution that can support",
    "start": "4699720",
    "end": "4705370"
  },
  {
    "text": "both RDF and property graph models definitely worth looking into and our team uses Amazon Neptune in some of our",
    "start": "4705370",
    "end": "4711490"
  },
  {
    "text": "solutions so this is an example with rats and it can help explain why impacts",
    "start": "4711490",
    "end": "4717790"
  },
  {
    "text": "and context matters customer problem here is understanding their risk for city and council finds an exposure of",
    "start": "4717790",
    "end": "4725260"
  },
  {
    "text": "their shop and goods to vermin the graph allows us to map both space and time and",
    "start": "4725260",
    "end": "4731320"
  },
  {
    "text": "to give context to the impacts of different events space locations are things like streets and intersections",
    "start": "4731320",
    "end": "4737950"
  },
  {
    "text": "and stores and how far apart those businesses are time for different purposes can be days hours minutes",
    "start": "4737950",
    "end": "4743350"
  },
  {
    "text": "seconds or microseconds depends on the use case but here minutes and hours works the timepiece looks like a tree",
    "start": "4743350",
    "end": "4750940"
  },
  {
    "text": "and those things aren't connected until something happens they simply exist",
    "start": "4750940",
    "end": "4756340"
  },
  {
    "text": "independently in the graph but then an event happens here a rat infestation",
    "start": "4756340",
    "end": "4762070"
  },
  {
    "text": "report has been filed think about this as we're adding a fact what happened is",
    "start": "4762070",
    "end": "4767380"
  },
  {
    "text": "a rat report came in and it's now dynamically connecting spatial where in what place and time at what time what we",
    "start": "4767380",
    "end": "4774880"
  },
  {
    "text": "want to do in this example is help the user who's a shopkeeper to understand what's the impact for them what's their",
    "start": "4774880",
    "end": "4782200"
  },
  {
    "text": "risk for a fine or a rodent infestation and how does that impact change over time how does that impact work within",
    "start": "4782200",
    "end": "4789640"
  },
  {
    "text": "space so here's where it all comes together we have another node that we've added into the graph that node is a rat",
    "start": "4789640",
    "end": "4797440"
  },
  {
    "text": "infestation the impact event it was triggered by the rat report then you can",
    "start": "4797440",
    "end": "4802870"
  },
  {
    "text": "see that it impacts differ things in different ways all those impacts have different weights those",
    "start": "4802870",
    "end": "4809420"
  },
  {
    "text": "weights are different based on what kind of a store it is a florist versus a restaurant and how close it is to the",
    "start": "4809420",
    "end": "4816440"
  },
  {
    "text": "location of the report flower shop two blocks away is not going to be as",
    "start": "4816440",
    "end": "4821510"
  },
  {
    "text": "concerned about rats as the two food shops that are within 25 meters of the report we know this impact matters",
    "start": "4821510",
    "end": "4828139"
  },
  {
    "text": "because we validated the assumption with our customers so the following day there's still an impact but the weights",
    "start": "4828139",
    "end": "4834349"
  },
  {
    "text": "start to change and this also considers the historical data over time and we've built out decay curves for different",
    "start": "4834349",
    "end": "4841340"
  },
  {
    "text": "kinds of impacts and risks the decay curves define how long the impact matters for and that decay curve also",
    "start": "4841340",
    "end": "4848749"
  },
  {
    "text": "defines those weights what's your risk for getting a fine for rats we see a correlation of rodent reports made and",
    "start": "4848749",
    "end": "4855769"
  },
  {
    "text": "the likelihood of these businesses getting fines and then how this maps over time different areas of different",
    "start": "4855769",
    "end": "4861710"
  },
  {
    "text": "weights and then you can even pull back and start to see larger patterns and identify what areas and what businesses",
    "start": "4861710",
    "end": "4868579"
  },
  {
    "text": "are at risk and this is showing how over time the impact of the event has decayed",
    "start": "4868579",
    "end": "4873920"
  },
  {
    "text": "out one week later so graphs are multi-dimensional across time and space and they give context to what's",
    "start": "4873920",
    "end": "4880099"
  },
  {
    "text": "happening and why this is just one simple example of some of the work that we do but I want to come back to survey",
    "start": "4880099",
    "end": "4886460"
  },
  {
    "text": "list because that surrounds all of our graph work okay now that we've talked",
    "start": "4886460",
    "end": "4893300"
  },
  {
    "text": "about the graph let's dig into our overall reference architecture this is",
    "start": "4893300",
    "end": "4898309"
  },
  {
    "text": "for our client and transportation who wants to know more about the real-time punctuality of trains where are they",
    "start": "4898309",
    "end": "4905329"
  },
  {
    "text": "what's making them late how does one late train impact others in the network there are three service pieces we're",
    "start": "4905329",
    "end": "4911960"
  },
  {
    "text": "gonna focus on two the first one how do we build up the vehicle real-time position data and get that into the",
    "start": "4911960",
    "end": "4919400"
  },
  {
    "text": "graph using serverless our engineers prefer serverless because it saves them the road heavy lifting",
    "start": "4919400",
    "end": "4925130"
  },
  {
    "text": "tasks and they can focus instead on refining our let me take you through the sequence",
    "start": "4925130",
    "end": "4930700"
  },
  {
    "text": "okay first we have to have a step function because we need to trigger the",
    "start": "4930700",
    "end": "4936440"
  },
  {
    "text": "AWS lambdas quickly you can only trigger lambdas once a minute with amazon cloud",
    "start": "4936440",
    "end": "4941750"
  },
  {
    "text": "watch so we set up an AWS step function that step function invokes our AWS",
    "start": "4941750",
    "end": "4947930"
  },
  {
    "text": "Landa's at 15-second intervals the first lambda that gets triggered is very straightforward it's a request out",
    "start": "4947930",
    "end": "4955400"
  },
  {
    "text": "to get the customer real-time vehicle position data API and we get an answer",
    "start": "4955400",
    "end": "4961130"
  },
  {
    "text": "back the vehicle position response we serialize that data we store it into an",
    "start": "4961130",
    "end": "4967160"
  },
  {
    "text": "Amazon s3 bucket our raw data bucket and we now have our own copy of an instant",
    "start": "4967160",
    "end": "4972469"
  },
  {
    "text": "in time from their api by doing this we're building up our historical record",
    "start": "4972469",
    "end": "4978290"
  },
  {
    "text": "of vehicle positions over time and this allows us in the future to analyze and/or to rerun our processes as we want",
    "start": "4978290",
    "end": "4985940"
  },
  {
    "text": "to refine our algorithms then starting with the raw data Amazon s3 bucket the",
    "start": "4985940",
    "end": "4992030"
  },
  {
    "text": "graph import AWS lambda is now triggered by Amazon s3 when new data is written by",
    "start": "4992030",
    "end": "4999620"
  },
  {
    "text": "the previous AWS lambda and keep in mind this decouples the capture and the",
    "start": "4999620",
    "end": "5005350"
  },
  {
    "text": "processing of data then we insert all of this the vehicle position and the OP in",
    "start": "5005350",
    "end": "5010360"
  },
  {
    "text": "the Augmented data into our graph one of the things that we're doing is determining whether a vehicle that has",
    "start": "5010360",
    "end": "5016660"
  },
  {
    "text": "come in via a position report has completed a trip or if that vehicle is",
    "start": "5016660",
    "end": "5022060"
  },
  {
    "text": "still running a trip when we detect a trip has completed because it's in the final station as defined by the time",
    "start": "5022060",
    "end": "5028630"
  },
  {
    "text": "table then when that happens the AWS lambda puts that trip ID into a queue",
    "start": "5028630",
    "end": "5035110"
  },
  {
    "text": "now that trip ID for a completed trip is put into the Amazon sq SQ s qsq that",
    "start": "5035110",
    "end": "5043300"
  },
  {
    "text": "brings us to our third AWS lambda this lambda is triggered by the trip ID",
    "start": "5043300",
    "end": "5048610"
  },
  {
    "text": "message in the Amazon s Q s Q the reason for this AWS lamda process is to create",
    "start": "5048610",
    "end": "5055600"
  },
  {
    "text": "training vectors for our delay characters note we use sqs here because it both",
    "start": "5055600",
    "end": "5062670"
  },
  {
    "text": "decouples the tasks and allows for many trips to be processed in parallel by the",
    "start": "5062670",
    "end": "5069389"
  },
  {
    "text": "AWS lambda function but back to our user right because it's all about solving",
    "start": "5069389",
    "end": "5074429"
  },
  {
    "text": "problems for our customer well our users need to know not just that there are delays but what kind of delays and what",
    "start": "5074429",
    "end": "5082920"
  },
  {
    "text": "are the impacts of those delays on the whole system is it track segment related",
    "start": "5082920",
    "end": "5088349"
  },
  {
    "text": "is it equipment related is it likely to impact future trips on the tracks will there be knock-on delays to other",
    "start": "5088349",
    "end": "5095520"
  },
  {
    "text": "trips or to other tracks serverless allows us to answer these questions",
    "start": "5095520",
    "end": "5100820"
  },
  {
    "text": "efficiently and let me show you just the first part of the suite of delay related",
    "start": "5100820",
    "end": "5106530"
  },
  {
    "text": "insights that we create here is where we have our delay characterization training",
    "start": "5106530",
    "end": "5112980"
  },
  {
    "text": "it makes use of an AWS step function AWS lambdas and Amazon sage maker so let me",
    "start": "5112980",
    "end": "5119520"
  },
  {
    "text": "describe for you the continuous training process I want to think of it from a",
    "start": "5119520",
    "end": "5124739"
  },
  {
    "text": "workflow perspective a step function allows us to orchestrate the",
    "start": "5124739",
    "end": "5129810"
  },
  {
    "text": "interactions between multiple AWS lambdas this allows serverless functions",
    "start": "5129810",
    "end": "5135690"
  },
  {
    "text": "to solve very complex problems we start by triggering our training AWS step",
    "start": "5135690",
    "end": "5141780"
  },
  {
    "text": "function once per day and keep in mind because this is decoupled it doesn't",
    "start": "5141780",
    "end": "5147030"
  },
  {
    "text": "interfere or collide with any other processes we start by having an AWS Lam that check for new data and then if new",
    "start": "5147030",
    "end": "5155070"
  },
  {
    "text": "data is available we have an AWS lambda that will start a training job remember",
    "start": "5155070",
    "end": "5161550"
  },
  {
    "text": "that the data that the lambda is looking for our delay profile and delay change",
    "start": "5161550",
    "end": "5166650"
  },
  {
    "text": "vectors that we have previously created we'll see those in the next slide the training process is asynchronous so",
    "start": "5166650",
    "end": "5174119"
  },
  {
    "text": "after kicking off the training job the lambda returns a value to the AWS step",
    "start": "5174119",
    "end": "5179940"
  },
  {
    "text": "function noting that the job was successfully started now if a training process has been kicked",
    "start": "5179940",
    "end": "5186240"
  },
  {
    "text": "off there's another AWS lambda that's checking to see if the training is complete when yes the step function",
    "start": "5186240",
    "end": "5192930"
  },
  {
    "text": "invokes another AWS lambda to deploy the new model to an Amazon sage maker",
    "start": "5192930",
    "end": "5198450"
  },
  {
    "text": "endpoint following a successful deployment there's a simple housekeeping function to perform cleanup and log the",
    "start": "5198450",
    "end": "5205380"
  },
  {
    "text": "process so let's review we have a rolling window of scheduled versus",
    "start": "5205380",
    "end": "5211770"
  },
  {
    "text": "actual performance and we need to continually retrain because things are",
    "start": "5211770",
    "end": "5216810"
  },
  {
    "text": "different there's equipment and infrastructure changes and they evolve ridership isn't constant a train",
    "start": "5216810",
    "end": "5223410"
  },
  {
    "text": "platform that's constantly crowded is going to have a different delay time than one that's empty the data sets",
    "start": "5223410",
    "end": "5229350"
  },
  {
    "text": "evolve so the simplest level use only the delay data in practice particularly",
    "start": "5229350",
    "end": "5235200"
  },
  {
    "text": "for classification and regression type models context is important but weather events day of the week time of the day",
    "start": "5235200",
    "end": "5243660"
  },
  {
    "text": "with season at us we've got two vectors of data the delay profile which is the",
    "start": "5243660",
    "end": "5248910"
  },
  {
    "text": "deviation at each reporting point and the delay change which is the difference in the delay at each reporting plane so",
    "start": "5248910",
    "end": "5258200"
  },
  {
    "text": "here's an example of two vectors the first one is the delay profile that's",
    "start": "5258200",
    "end": "5263250"
  },
  {
    "text": "what you see on your left the other is the delay change these are shown in seconds and while the image here is",
    "start": "5263250",
    "end": "5269400"
  },
  {
    "text": "showing you station level for simplicity we actually capture data at much more granular points all throughout the",
    "start": "5269400",
    "end": "5275310"
  },
  {
    "text": "network again note that these vectors are the delay profile and the change vectors that we discussed creating",
    "start": "5275310",
    "end": "5281610"
  },
  {
    "text": "before so let's dig into those lambdas it's really simple to kick off a",
    "start": "5281610",
    "end": "5286980"
  },
  {
    "text": "training run with Amazon sage maker we use boto three the standard AWS Python",
    "start": "5286980",
    "end": "5292470"
  },
  {
    "text": "library you'll need some basic stuff like identify the appropriate container for your algorithm identify an iam role",
    "start": "5292470",
    "end": "5299760"
  },
  {
    "text": "identify the kind and size of training instance you want to use but from a code point of view the only work is setting",
    "start": "5299760",
    "end": "5307140"
  },
  {
    "text": "up the s3 locations where the training data resides and the s3 location to put",
    "start": "5307140",
    "end": "5312630"
  },
  {
    "text": "the new model now we create our training job kicking off the training function is just a",
    "start": "5312630",
    "end": "5318869"
  },
  {
    "text": "single function call just have set our parameters training job name hyper",
    "start": "5318869",
    "end": "5324059"
  },
  {
    "text": "parameters here we're looking at k-means so we specify the number of clusters specify the algorithm with the data from",
    "start": "5324059",
    "end": "5331199"
  },
  {
    "text": "above and identified the I am role and the input data manifest file is just the",
    "start": "5331199",
    "end": "5337559"
  },
  {
    "text": "list of vectors that we created earlier so we finished the parameters if",
    "start": "5337559",
    "end": "5343230"
  },
  {
    "text": "identified the output path where to put the model identify the instance types and define stopping conditions here we",
    "start": "5343230",
    "end": "5350250"
  },
  {
    "text": "set them at once a day remember that the training is asynchronous job is started then the AWS step",
    "start": "5350250",
    "end": "5356969"
  },
  {
    "text": "function will orchestrate the process of waiting for the training to complete when the training is completed then we",
    "start": "5356969",
    "end": "5364230"
  },
  {
    "text": "deploy the new model and here we have the deployed model basic some basic",
    "start": "5364230",
    "end": "5370139"
  },
  {
    "text": "configuration from the endpoint and on to invoking the model using the model is",
    "start": "5370139",
    "end": "5375360"
  },
  {
    "text": "just as easy in this case the model is being invoked during an augmentation of data into our knowledge graph what we",
    "start": "5375360",
    "end": "5382469"
  },
  {
    "text": "have here is a very simple AWS lambda that passes in a current delay profile",
    "start": "5382469",
    "end": "5388679"
  },
  {
    "text": "vector of a complete trip to the amazon sage maker endpoint it returns to us the",
    "start": "5388679",
    "end": "5395070"
  },
  {
    "text": "type of delay in this case spot or increasing so now let me show you that",
    "start": "5395070",
    "end": "5401639"
  },
  {
    "text": "in action for a customer in this example the bottom we have a spot delay it's",
    "start": "5401639",
    "end": "5408929"
  },
  {
    "text": "between Braxton and the singleton statement state segment excuse me on the",
    "start": "5408929",
    "end": "5414389"
  },
  {
    "text": "intercity line and potentially can impact for trips with per trip delays of",
    "start": "5414389",
    "end": "5420630"
  },
  {
    "text": "up to 14 minutes this will keep updating and our customer will know if those",
    "start": "5420630",
    "end": "5426420"
  },
  {
    "text": "delays are increasing or decreasing because the delays vary and the type of",
    "start": "5426420",
    "end": "5431969"
  },
  {
    "text": "delay can also change is extremely important for our client to have these",
    "start": "5431969",
    "end": "5437280"
  },
  {
    "text": "real-time Toomas so I want to wrap up by just",
    "start": "5437280",
    "end": "5443010"
  },
  {
    "text": "pointing out behind the scenes we use machine learning as you can see here we've got a wide variety of approaches",
    "start": "5443010",
    "end": "5449670"
  },
  {
    "text": "for our customers and AWS powers are engineers to be able to do a lot more",
    "start": "5449670",
    "end": "5454969"
  },
  {
    "text": "again by removing that undifferentiated heavy lifting our engineers instead can",
    "start": "5454969",
    "end": "5461790"
  },
  {
    "text": "focus on our graph enclosing the graph is built on ec2 and service and what a",
    "start": "5461790",
    "end": "5468540"
  },
  {
    "text": "server that's really done for us serverless has saved us time it saved us money it's led our solutions become more",
    "start": "5468540",
    "end": "5475260"
  },
  {
    "text": "extensible for our clients it gives us the ability to do more and scale as a",
    "start": "5475260",
    "end": "5481110"
  },
  {
    "text": "small team that serves customers in the US Europe Canada and Australia that",
    "start": "5481110",
    "end": "5487710"
  },
  {
    "text": "efficiency and economy is priceless so",
    "start": "5487710",
    "end": "5494340"
  },
  {
    "text": "thank you and if you want to learn more please reach out I think thank you so",
    "start": "5494340",
    "end": "5501300"
  },
  {
    "text": "much for that excellent presentation I really enjoyed hearing about how you approached the the customer use case and",
    "start": "5501300",
    "end": "5507900"
  },
  {
    "text": "the thought processes that you went through to break that solution down and and then subsequently applying modern",
    "start": "5507900",
    "end": "5513960"
  },
  {
    "text": "application development practices to integrate with things like AI to",
    "start": "5513960",
    "end": "5519690"
  },
  {
    "text": "implement the solutions so that was really insightful thank you very much to all of the attendees if you would like",
    "start": "5519690",
    "end": "5527489"
  },
  {
    "text": "to hear more from visi Linux please click the yes link that's been provided",
    "start": "5527489",
    "end": "5533430"
  },
  {
    "text": "to you in the chat area and they will get in touch with you and answer any questions that you may have and and",
    "start": "5533430",
    "end": "5541080"
  },
  {
    "text": "we're going to take a short break before we move on to our final presentation but",
    "start": "5541080",
    "end": "5547980"
  },
  {
    "text": "please check back here there very shortly thank you very much",
    "start": "5547980",
    "end": "5553400"
  },
  {
    "text": "welcome back everybody thanks for everyone for joining this webinar this",
    "start": "5554299",
    "end": "5559589"
  },
  {
    "text": "is the fourth and final session of our series but if you've just joined us fear not all of the recordings that we've for",
    "start": "5559589",
    "end": "5567269"
  },
  {
    "text": "the sessions that we've had today will be available online so you can catch up when you have time today some logistics",
    "start": "5567269",
    "end": "5577889"
  },
  {
    "text": "before we get started so as with the previous sessions please use the chat session to ask questions in your browser",
    "start": "5577889",
    "end": "5585329"
  },
  {
    "text": "to ask any questions along the way and our service experts at the ready to",
    "start": "5585329",
    "end": "5590579"
  },
  {
    "text": "answer all of your questions for the in regards to this session will also be",
    "start": "5590579",
    "end": "5595919"
  },
  {
    "text": "using it as an opportunity to ask our own questions and this is going to give you the chance to win prizes and AWS",
    "start": "5595919",
    "end": "5602999"
  },
  {
    "text": "credits if you're the first to answer the questions directly and we'll also be",
    "start": "5602999",
    "end": "5608159"
  },
  {
    "text": "posting links and other contact information about the presentations that you're that you're seeing today so with",
    "start": "5608159",
    "end": "5615809"
  },
  {
    "text": "me today the guys from cloud Conformity guys welcome and thanks for thanks for coming",
    "start": "5615809",
    "end": "5621659"
  },
  {
    "text": "in thanks - i'm paul head of security thank you see a mike co-founder and CEO",
    "start": "5621659",
    "end": "5629760"
  },
  {
    "text": "at cloud Conformity Paul and Mike are going to be sharing their real-world",
    "start": "5629760",
    "end": "5635249"
  },
  {
    "text": "experiences around running production workloads at scale and how they've been working with AWS to deal with things",
    "start": "5635249",
    "end": "5642989"
  },
  {
    "text": "like security scaling monitoring and also some of the cost challenges I'm",
    "start": "5642989",
    "end": "5649229"
  },
  {
    "text": "really some super excited to be able to present the cloud Conformity to you guys",
    "start": "5649229",
    "end": "5654419"
  },
  {
    "text": "and really can't wait to hear what they have to say so / - guys thank you mister thanks",
    "start": "5654419",
    "end": "5663409"
  },
  {
    "text": "so we'll start by giving some background about our company and our application",
    "start": "5666650",
    "end": "5672660"
  },
  {
    "text": "and then explore some of the challenges we face in some ways we've found to",
    "start": "5672660",
    "end": "5677790"
  },
  {
    "text": "solve them in the age of serve less like Jonah tell us a little bit about the company that you helped to found and how",
    "start": "5677790",
    "end": "5684660"
  },
  {
    "text": "we've ended up all-in on service sure cloud conformity is a",
    "start": "5684660",
    "end": "5690560"
  },
  {
    "text": "software-as-a-service continuous assurance product that delivers over 500 automated best",
    "start": "5690560",
    "end": "5698640"
  },
  {
    "text": "practices across the five pillars of AWS well architected framework security",
    "start": "5698640",
    "end": "5705270"
  },
  {
    "text": "reliability performance cost optimization and operational excellence",
    "start": "5705270",
    "end": "5710570"
  },
  {
    "text": "along with the continuous assurance of your cloud infrastructure cloud",
    "start": "5710570",
    "end": "5716610"
  },
  {
    "text": "conformity is also an educational tool providing detailed resolution steps to",
    "start": "5716610",
    "end": "5723630"
  },
  {
    "text": "rectify security misconfigurations performance and cost inefficiencies and",
    "start": "5723630",
    "end": "5730260"
  },
  {
    "text": "reliability risks so not only highlighting warnings and",
    "start": "5730260",
    "end": "5736140"
  },
  {
    "text": "violations in near-real-time but also providing rationale and",
    "start": "5736140",
    "end": "5741230"
  },
  {
    "text": "resolution steps and automated remediation the original idea was to",
    "start": "5741230",
    "end": "5748500"
  },
  {
    "text": "know who's connecting to to our AWS accounts what are the changes they're",
    "start": "5748500",
    "end": "5754320"
  },
  {
    "text": "making and also what's the impact of the change to make that a reality cloud",
    "start": "5754320",
    "end": "5761040"
  },
  {
    "text": "conformity now provides customers with tree controls first before the event or",
    "start": "5761040",
    "end": "5769730"
  },
  {
    "text": "preventive control for that we've got",
    "start": "5769730",
    "end": "5774860"
  },
  {
    "text": "infrastructure as code script scanning our rich API set and policy enforcement",
    "start": "5774860",
    "end": "5782390"
  },
  {
    "text": "second during the event or detective control that's where we provide",
    "start": "5782390",
    "end": "5788280"
  },
  {
    "text": "customers with 500 best practices and after the event which is or corrective",
    "start": "5788280",
    "end": "5797130"
  },
  {
    "text": "control which is our Auto remediation component we",
    "start": "5797130",
    "end": "5803729"
  },
  {
    "text": "talked about these later in this presentation but put it simply it is our",
    "start": "5803729",
    "end": "5810539"
  },
  {
    "text": "mission to promote best practices for cloud in a developer friendly an API",
    "start": "5810539",
    "end": "5818070"
  },
  {
    "text": "first ecosystem now the main reasons for",
    "start": "5818070",
    "end": "5823639"
  },
  {
    "text": "using serverless were to boost productivity inspire innovation and make",
    "start": "5823639",
    "end": "5830399"
  },
  {
    "text": "the most of limited resources we wouldn't be where we are now without",
    "start": "5830399",
    "end": "5837179"
  },
  {
    "text": "server less so in this slide in this",
    "start": "5837179",
    "end": "5844860"
  },
  {
    "text": "slide you can see where we've got to today so as you can see on this slide",
    "start": "5844860",
    "end": "5857989"
  },
  {
    "text": "we've got 2300 lambda functions running",
    "start": "5857989",
    "end": "5864929"
  },
  {
    "text": "in our production environment we have over 100 dynamodb tables spanning",
    "start": "5864929",
    "end": "5872849"
  },
  {
    "text": "regions in the US Europe and Asia Pacific Pacific we use step function to",
    "start": "5872849",
    "end": "5883260"
  },
  {
    "text": "stitch those functions together and also we run five million lambda execution per",
    "start": "5883260",
    "end": "5891899"
  },
  {
    "text": "day and so we do all this to basically run 234 million",
    "start": "5891899",
    "end": "5900389"
  },
  {
    "text": "well architected framework checks per day for our AWS customers so in my",
    "start": "5900389",
    "end": "5908249"
  },
  {
    "text": "opinion serverless is all about focusing your efforts on what provide value to",
    "start": "5908249",
    "end": "5915719"
  },
  {
    "text": "users we wanted to basically focus on",
    "start": "5915719",
    "end": "5921019"
  },
  {
    "text": "application and business logic not servers or infrastructure and that's the",
    "start": "5921019",
    "end": "5927119"
  },
  {
    "text": "beauty of servers so developer can just get projects off the ground with small agile team and it",
    "start": "5927119",
    "end": "5936470"
  },
  {
    "text": "also provides developers with almost zero administration increased velocity",
    "start": "5936470",
    "end": "5942740"
  },
  {
    "text": "and pay-per-use so next slide please so",
    "start": "5942740",
    "end": "5948010"
  },
  {
    "text": "now I'm going to talk about our reference architecture for server less",
    "start": "5948010",
    "end": "5954650"
  },
  {
    "text": "and how we have built multiple applications from it so we use a server",
    "start": "5954650",
    "end": "5961820"
  },
  {
    "text": "less architecture for all cloud Conformity applications for example we",
    "start": "5961820",
    "end": "5967640"
  },
  {
    "text": "have developed cloud conformity auto remediation which is by the way open-source and currently running 50",
    "start": "5967640",
    "end": "5977330"
  },
  {
    "text": "separate auto remediation functions using lambda each other each of those",
    "start": "5977330",
    "end": "5983150"
  },
  {
    "text": "auto remediation functions is triggered by SNS when our main rule engine detects",
    "start": "5983150",
    "end": "5990530"
  },
  {
    "text": "the failure of a best best practice check for example we have a rule that",
    "start": "5990530",
    "end": "5997910"
  },
  {
    "text": "checks for open s3 buckets and closes them when they're detected once the",
    "start": "5997910",
    "end": "6004810"
  },
  {
    "text": "insecure bucket is detected or lambda then goes to the bucket and changes its",
    "start": "6004810",
    "end": "6011110"
  },
  {
    "text": "configuration to no longer be public using serverless",
    "start": "6011110",
    "end": "6016920"
  },
  {
    "text": "we're able to detect and react to this in near real-time from detection to",
    "start": "6016920",
    "end": "6023380"
  },
  {
    "text": "correction take less than two minutes we also need to be able to monitor the performance of",
    "start": "6023380",
    "end": "6030750"
  },
  {
    "text": "lambda from cost and error perspective will cover how we solve the doze",
    "start": "6030750",
    "end": "6037900"
  },
  {
    "text": "monitoring challenges later in this presentation so for our reference",
    "start": "6037900",
    "end": "6044980"
  },
  {
    "text": "surveillance architecture we used lambda in conjunction with step functions",
    "start": "6044980",
    "end": "6052030"
  },
  {
    "text": "Amazon API get why Amazon DynamoDB Amazon s3 AWS Keemun",
    "start": "6052030",
    "end": "6059040"
  },
  {
    "text": "service AWS simple notification service",
    "start": "6059040",
    "end": "6064740"
  },
  {
    "text": "and AWS simple queue service and Kinesis as well so as you can see on the slide",
    "start": "6064740",
    "end": "6073160"
  },
  {
    "text": "so all our applications are built in a similar manner some just have extra",
    "start": "6073160",
    "end": "6081750"
  },
  {
    "text": "services bolted on typically our applications are hosted on s3 API",
    "start": "6081750",
    "end": "6090180"
  },
  {
    "text": "gateway is used to create publish maintain monitor and secure the api's",
    "start": "6090180",
    "end": "6096870"
  },
  {
    "text": "and both dynamic and static content is served through cloud front which is",
    "start": "6096870",
    "end": "6103940"
  },
  {
    "text": "integrated with AWS Web Application Firewall and AWS shield to protect and",
    "start": "6103940",
    "end": "6111720"
  },
  {
    "text": "safeguard cloud conformity from common web exploit we'll talk about this later",
    "start": "6111720",
    "end": "6118170"
  },
  {
    "text": "when we tackle security now I'm gonna",
    "start": "6118170",
    "end": "6125520"
  },
  {
    "text": "talk about one of our main applications",
    "start": "6125520",
    "end": "6131100"
  },
  {
    "text": "called conformity boards here you're looking at a three year evolution of",
    "start": "6131100",
    "end": "6137910"
  },
  {
    "text": "that application conformity but is basically responsible for scanning",
    "start": "6137910",
    "end": "6144170"
  },
  {
    "text": "customers AWS infrastructure for breaches or possible weaknesses in",
    "start": "6144170",
    "end": "6150450"
  },
  {
    "text": "security cost reliability and performance so conformity board has five",
    "start": "6150450",
    "end": "6157580"
  },
  {
    "text": "components scheduler using AWS cloud",
    "start": "6157580",
    "end": "6162990"
  },
  {
    "text": "watch scheduler Authenticator using AWS simple token service inventory AWS well",
    "start": "6162990",
    "end": "6172740"
  },
  {
    "text": "architected rule engine and notification using SNS and simple enol service so on",
    "start": "6172740",
    "end": "6181620"
  },
  {
    "text": "the left hand side you can see the initial version",
    "start": "6181620",
    "end": "6187069"
  },
  {
    "text": "that we built almost three years ago so",
    "start": "6187069",
    "end": "6192530"
  },
  {
    "text": "it was just one monolithic lambda function and on the right hand side you",
    "start": "6192530",
    "end": "6199280"
  },
  {
    "text": "can see the current version now I'm gonna talk a little bit about the",
    "start": "6199280",
    "end": "6204469"
  },
  {
    "text": "difference between the two and the evolution a little bit as well so there",
    "start": "6204469",
    "end": "6212299"
  },
  {
    "text": "are problems with the left big lambda",
    "start": "6212299",
    "end": "6217579"
  },
  {
    "text": "function for example we had to give it a lot of permission as you know each",
    "start": "6217579",
    "end": "6225699"
  },
  {
    "text": "lambda function requires a lambda execution roll to granted permissions to",
    "start": "6225699",
    "end": "6231589"
  },
  {
    "text": "access AWS services or resources usually big lambda functions tend to have an",
    "start": "6231589",
    "end": "6238159"
  },
  {
    "text": "overly permissive roll which is a bad security practice as you can see for for",
    "start": "6238159",
    "end": "6246409"
  },
  {
    "text": "achieving conformity but in one lambda function we had to give it a lot of",
    "start": "6246409",
    "end": "6251679"
  },
  {
    "text": "permissions to s3 to elasticsearch to DynamoDB and other services scaling",
    "start": "6251679",
    "end": "6259609"
  },
  {
    "text": "issue was also one of the drawbacks of the monolithic function on the left hand",
    "start": "6259609",
    "end": "6267229"
  },
  {
    "text": "side so in theory you know as you know",
    "start": "6267229",
    "end": "6272799"
  },
  {
    "text": "10% of your functions consume 90% of your resources such as lambda memory",
    "start": "6272799",
    "end": "6280179"
  },
  {
    "text": "scaling this independently is usually cheaper cheaper than scaling a single",
    "start": "6280179",
    "end": "6287299"
  },
  {
    "text": "monolithic lambda function and also poor discoverability with such a big function",
    "start": "6287299",
    "end": "6295519"
  },
  {
    "text": "it's quite challenging to know which feature and capability exists through",
    "start": "6295519",
    "end": "6301219"
  },
  {
    "text": "which part of the application so I guess",
    "start": "6301219",
    "end": "6308639"
  },
  {
    "text": "we were running that for for for a year or two and then we decided to actually",
    "start": "6308639",
    "end": "6314359"
  },
  {
    "text": "improve that architecture and now we're looking at multiple lambda functions",
    "start": "6314359",
    "end": "6323149"
  },
  {
    "text": "orchestrated by AWS step function so I guess some of the lessons learned are",
    "start": "6323149",
    "end": "6331189"
  },
  {
    "text": "first and foremost keep it simple each function do only one thing we try to",
    "start": "6331189",
    "end": "6338809"
  },
  {
    "text": "follow the UNIX philosophy do one thing and do it well if your code base is too",
    "start": "6338809",
    "end": "6346800"
  },
  {
    "text": "big to be managed by a developer or a small team try to break it down and",
    "start": "6346800",
    "end": "6352889"
  },
  {
    "text": "that's exactly what happened to our conformity about version one don't",
    "start": "6352889",
    "end": "6359309"
  },
  {
    "text": "repeat yourself this is a commonly cited principle of software development to",
    "start": "6359309",
    "end": "6367289"
  },
  {
    "text": "eliminate the duplication of functionality and extracting that in a",
    "start": "6367289",
    "end": "6372479"
  },
  {
    "text": "separate component and a new lambda is a great fit for for such case functions",
    "start": "6372479",
    "end": "6382019"
  },
  {
    "text": "should not call other functions instead try to use queues and messages and other",
    "start": "6382019",
    "end": "6391109"
  },
  {
    "text": "forms of integration so in our new",
    "start": "6391109",
    "end": "6397619"
  },
  {
    "text": "architecture we use a lot of messaging and queuing as well when designing",
    "start": "6397619",
    "end": "6405119"
  },
  {
    "text": "functions try to follow solid principle or single responsibility principle so",
    "start": "6405119",
    "end": "6412109"
  },
  {
    "text": "you know exactly what the function does and you know the function is actually very small it's very focused",
    "start": "6412109",
    "end": "6421969"
  },
  {
    "text": "utilize cloud watch alarms to inform you when duration goes beyond throttling",
    "start": "6422239",
    "end": "6429329"
  },
  {
    "text": "occurs or function fails before your customers tell you that so monitoring",
    "start": "6429329",
    "end": "6435480"
  },
  {
    "text": "and alerting is crucial crucial for all production grade services we use server",
    "start": "6435480",
    "end": "6443190"
  },
  {
    "text": "less to build our own monitoring and alerting alerting system we're going to talk about more about monitoring later",
    "start": "6443190",
    "end": "6450810"
  },
  {
    "text": "but please reach out to us if if you need more information about this and",
    "start": "6450810",
    "end": "6456409"
  },
  {
    "text": "also be a ver of lambda limits such as timeout deployment package size",
    "start": "6456409",
    "end": "6463980"
  },
  {
    "text": "concurrent execution so on and so forth in terms of security try to run lambda",
    "start": "6463980",
    "end": "6472770"
  },
  {
    "text": "safely in V PC if they need to communicate with your databases block",
    "start": "6472770",
    "end": "6481880"
  },
  {
    "text": "anomalous HTTP traffic with AWS Web Application Firewall and AWS shield if",
    "start": "6481880",
    "end": "6489239"
  },
  {
    "text": "you're using API gateway and lambda use",
    "start": "6489239",
    "end": "6494520"
  },
  {
    "text": "your own kms keys to securely pass environment variables into lambda",
    "start": "6494520",
    "end": "6500940"
  },
  {
    "text": "functions and lastly use a framework to",
    "start": "6500940",
    "end": "6506730"
  },
  {
    "text": "develop build and deploy and maintain your functions awesome thanks Mike one",
    "start": "6506730",
    "end": "6516630"
  },
  {
    "text": "of the challenges of running an unknown bleeding-edge platform is that there are gaps that you don't even know about and",
    "start": "6516630",
    "end": "6523639"
  },
  {
    "text": "when you find them no one else has solved them so you either have to wait",
    "start": "6523639",
    "end": "6528960"
  },
  {
    "text": "or build your own solutions and one of our major challenges is monitoring",
    "start": "6528960",
    "end": "6535130"
  },
  {
    "text": "Amazon CloudWatch events gets better and better and in our opinion is only",
    "start": "6535130",
    "end": "6540780"
  },
  {
    "text": "marginally behind third-party products that you have to pay for and deploy we're continually looking at third-party",
    "start": "6540780",
    "end": "6548310"
  },
  {
    "text": "tools for their ability to monitor security performance and cost but we've",
    "start": "6548310",
    "end": "6553739"
  },
  {
    "text": "yet to find one that the things that we really need so as an example Amazon CloudWatch",
    "start": "6553739",
    "end": "6559890"
  },
  {
    "text": "records AWS lambda memory and the maximum memory that a function uses this",
    "start": "6559890",
    "end": "6568110"
  },
  {
    "text": "is a critical metric to see if you are over specifying your AWS lambda",
    "start": "6568110",
    "end": "6575760"
  },
  {
    "text": "functions because if you do that you'll pay quite a lot for that now this metric is caught in cloud watch",
    "start": "6575760",
    "end": "6583440"
  },
  {
    "text": "but it's not a metric available in the cloud watch dashboard and there are some",
    "start": "6583440",
    "end": "6589650"
  },
  {
    "text": "third-party tools that will pull this data for you and this is the Gotcha is",
    "start": "6589650",
    "end": "6594900"
  },
  {
    "text": "that the they'll do it on a single function or ask you to give them the name of a single function and they'll",
    "start": "6594900",
    "end": "6600600"
  },
  {
    "text": "probably just do it for a single region or a single account but luckily our VP",
    "start": "6600600",
    "end": "6606630"
  },
  {
    "text": "of engine of engineering too loves a challenge like this and you can see from this slide that we pulled the maximum",
    "start": "6606630",
    "end": "6614580"
  },
  {
    "text": "memory usage a maximum memory available both of which of those good indicators",
    "start": "6614580",
    "end": "6620010"
  },
  {
    "text": "for cost optimization and we do that over five-minute intervals we pull other",
    "start": "6620010",
    "end": "6626460"
  },
  {
    "text": "critical data too and we have a point-and-click interface that shows",
    "start": "6626460",
    "end": "6631470"
  },
  {
    "text": "roll-up data at a regional and function level now if I told you that this",
    "start": "6631470",
    "end": "6638220"
  },
  {
    "text": "monitoring was built on service then I think you'll start to understand how we",
    "start": "6638220",
    "end": "6644070"
  },
  {
    "text": "work in this case we use six AWS lambda functions and Amazon Elastic search and",
    "start": "6644070",
    "end": "6651570"
  },
  {
    "text": "we're using the the smallest Amazon Elastic search instance type that's available and we only store the last 24",
    "start": "6651570",
    "end": "6658920"
  },
  {
    "text": "hours of monitoring data",
    "start": "6658920",
    "end": "6662960"
  },
  {
    "text": "next we're going to talk about our best practices across the server stack based",
    "start": "6663989",
    "end": "6669840"
  },
  {
    "text": "on the well architected framework Mike you love the 8 of us well architected",
    "start": "6669840",
    "end": "6675630"
  },
  {
    "text": "framework everything that we do comes from that foundation can you tell us",
    "start": "6675630",
    "end": "6680670"
  },
  {
    "text": "about the framework and why it's a developer's best friend sure yes that's that's actually right",
    "start": "6680670",
    "end": "6686940"
  },
  {
    "text": "I do love AWS well architected framework and it's super exciting to be working",
    "start": "6686940",
    "end": "6693390"
  },
  {
    "text": "very closely with AWS on that we are big",
    "start": "6693390",
    "end": "6699000"
  },
  {
    "text": "believers in AWS well architecture framework and it's five pillars and",
    "start": "6699000",
    "end": "6704420"
  },
  {
    "text": "lenses and we believe that having well architected systems greatly increases",
    "start": "6704420",
    "end": "6712230"
  },
  {
    "text": "the likelihood of business success really for those not familiar with the",
    "start": "6712230",
    "end": "6719190"
  },
  {
    "text": "framework aw swell architected framework helps cloud developers build secure",
    "start": "6719190",
    "end": "6727980"
  },
  {
    "text": "resilient high-performing and efficient infrastructure for their applications I",
    "start": "6727980",
    "end": "6735140"
  },
  {
    "text": "also encourage you to have a look at AWS server less application lens which",
    "start": "6735140",
    "end": "6741719"
  },
  {
    "text": "focuses on how to design deploy and architect your server less application",
    "start": "6741719",
    "end": "6748290"
  },
  {
    "text": "workloads on the AWS cloud so here are a",
    "start": "6748290",
    "end": "6753840"
  },
  {
    "text": "few serverless best practice best practice examples taken from these",
    "start": "6753840",
    "end": "6762300"
  },
  {
    "text": "servers server less lens unused dynamodb table this is a cost",
    "start": "6762300",
    "end": "6768810"
  },
  {
    "text": "optimization best practice to identify and any kind of unused dynamodb table",
    "start": "6768810",
    "end": "6776700"
  },
  {
    "text": "with within your AWS account and remove them to help lower the cost of your",
    "start": "6776700",
    "end": "6782940"
  },
  {
    "text": "monthly AWS bills another example is lambda execution roll",
    "start": "6782940",
    "end": "6789030"
  },
  {
    "text": "this is to ensure that your lambda functions do not share the same",
    "start": "6789030",
    "end": "6795360"
  },
  {
    "text": "Identity and Access Management execution role in order to promote the principle",
    "start": "6795360",
    "end": "6802210"
  },
  {
    "text": "of least privilege by providing each individual functions the minimal amount",
    "start": "6802210",
    "end": "6807850"
  },
  {
    "text": "of access required to perform its task also API gateway active tracing for",
    "start": "6807850",
    "end": "6816340"
  },
  {
    "text": "example this is to ensure that active tracing is enabled for your API gateway",
    "start": "6816340",
    "end": "6821890"
  },
  {
    "text": "stages to sample the incoming request and sends traces back to AWS x-ray once",
    "start": "6821890",
    "end": "6832090"
  },
  {
    "text": "this feature is enabled x-ray service will trace and analyze user requests as",
    "start": "6832090",
    "end": "6838630"
  },
  {
    "text": "they travel through your API gateway to the underlying services like lambda so",
    "start": "6838630",
    "end": "6847110"
  },
  {
    "text": "please do refer to a cloud conformity knowledge base page for over 500 best",
    "start": "6847110",
    "end": "6854950"
  },
  {
    "text": "practices across the five pillars of well architected Mike that's great",
    "start": "6854950",
    "end": "6863260"
  },
  {
    "text": "thanks so what I'll do now is I'll do a deep dive into the technical best",
    "start": "6863260",
    "end": "6868570"
  },
  {
    "text": "practices that our own talk cloud Conformity does for service sounds bit so we big believers in the AWS well",
    "start": "6868570",
    "end": "6877630"
  },
  {
    "text": "architected framework and it's five pillars of security cost optimization operational excellence reliability and",
    "start": "6877630",
    "end": "6884620"
  },
  {
    "text": "performance efficiency and our checks are broken down into those different groups so using our own application we",
    "start": "6884620",
    "end": "6892780"
  },
  {
    "text": "review our Amazon cloud formation templates and are deployed infrastructure for compliance with the",
    "start": "6892780",
    "end": "6899140"
  },
  {
    "text": "well architected framework and then whenever we identified that there is a problem in the environment we make sure",
    "start": "6899140",
    "end": "6905800"
  },
  {
    "text": "that that change doesn't happen as a manual change in the environment that there goes back to the original template",
    "start": "6905800",
    "end": "6913380"
  },
  {
    "text": "and then that the proper stack or the updated stack just gets deployed through the CID CD process that way we know that",
    "start": "6913380",
    "end": "6921179"
  },
  {
    "text": "we're always improving our building blocks and that we don't end up playing whack-a-mole where the same issue that",
    "start": "6921179",
    "end": "6928620"
  },
  {
    "text": "we fix now when someone goes and tinker's directly in the environment and makes a change there we just end up",
    "start": "6928620",
    "end": "6934860"
  },
  {
    "text": "seeing the next time there's a deployment all those or bad issues come back into the environment again",
    "start": "6934860",
    "end": "6940400"
  },
  {
    "text": "so our AWS lambda checks include making sure that environment variables are",
    "start": "6940400",
    "end": "6947219"
  },
  {
    "text": "encrypted with customer manage keys that we ensure AWS lambda functions do not",
    "start": "6947219",
    "end": "6953850"
  },
  {
    "text": "allow unknown across account access that the lambdas themselves are running the",
    "start": "6953850",
    "end": "6959190"
  },
  {
    "text": "latest version of the runtime that there is a unique role for every single",
    "start": "6959190",
    "end": "6966179"
  },
  {
    "text": "different lambda that would function that we're running and so for us well",
    "start": "6966179",
    "end": "6972239"
  },
  {
    "text": "we've got some 2300 different lambda functions we've got a large number of",
    "start": "6972239",
    "end": "6977699"
  },
  {
    "text": "roles that has a one role for each one of those that you've turned on on tracing and that absolutely you are",
    "start": "6977699",
    "end": "6985409"
  },
  {
    "text": "never running any lambdas that have got full admin privileges we also have a",
    "start": "6985409",
    "end": "6991110"
  },
  {
    "text": "number of checks for DynamoDB making sure that you have continuous backups turned on that you remove any of those",
    "start": "6991110",
    "end": "6999139"
  },
  {
    "text": "unused tables that you mentioned before and that encryption is turned on and if",
    "start": "6999139",
    "end": "7004850"
  },
  {
    "text": "you're using the dynamo accelerator cluster making sure that you've got",
    "start": "7004850",
    "end": "7010370"
  },
  {
    "text": "encryption turned on there the API gateway we check that you're using the",
    "start": "7010370",
    "end": "7016250"
  },
  {
    "text": "Web Application Firewall and that you're using SSL Certificates for",
    "start": "7016250",
    "end": "7022690"
  },
  {
    "text": "authentication rotating those certificates when they need rotating and that you've got the appropriate logs set",
    "start": "7022690",
    "end": "7030170"
  },
  {
    "text": "up throughout or for your API gateway so like one of the other things that we use",
    "start": "7030170",
    "end": "7037670"
  },
  {
    "text": "for deploying packages is the surplus framework what's",
    "start": "7037670",
    "end": "7043140"
  },
  {
    "text": "that like to use as a developer all right so I guess to run serverless",
    "start": "7043140",
    "end": "7050880"
  },
  {
    "text": "at scale it is important to use a framework to develop build deploy",
    "start": "7050880",
    "end": "7058040"
  },
  {
    "text": "maintain your functions and also I would say small and easy to understand",
    "start": "7058040",
    "end": "7063510"
  },
  {
    "text": "functions are much much easier to build version and in dependency deploy so we",
    "start": "7063510",
    "end": "7070830"
  },
  {
    "text": "use these server less framework and lovin it and we decided to actually",
    "start": "7070830",
    "end": "7076710"
  },
  {
    "text": "implement a s as our main programming language as well so server less",
    "start": "7076710",
    "end": "7083580"
  },
  {
    "text": "framework is a core component of our company's engineering team which helps",
    "start": "7083580",
    "end": "7090390"
  },
  {
    "text": "us reduce IT operational costs and deploy services faster and apart from",
    "start": "7090390",
    "end": "7097830"
  },
  {
    "text": "being easy an open source it has a lot",
    "start": "7097830",
    "end": "7102960"
  },
  {
    "text": "of other benefits as well for example minimum configuration you can easily",
    "start": "7102960",
    "end": "7108660"
  },
  {
    "text": "define your entire service stack with a single ml file it also has a robust",
    "start": "7108660",
    "end": "7119250"
  },
  {
    "text": "ecosystem and vibrant community the serverless framework community has built",
    "start": "7119250",
    "end": "7125790"
  },
  {
    "text": "and published tons of plugins to extend the frameworks functionality and",
    "start": "7125790",
    "end": "7131360"
  },
  {
    "text": "examples projects to get you solid quickly in terms of application",
    "start": "7131360",
    "end": "7137880"
  },
  {
    "text": "lifecycle management which is something that you would definitely need when you start server less development it",
    "start": "7137880",
    "end": "7148380"
  },
  {
    "text": "provides you with built in support for local development stages rollback and",
    "start": "7148380",
    "end": "7154320"
  },
  {
    "text": "more and framework is actually loaded with the functionality you need to",
    "start": "7154320",
    "end": "7160770"
  },
  {
    "text": "manage the lifecycle of your application now the other thing I think",
    "start": "7160770",
    "end": "7167350"
  },
  {
    "text": "it's worth mentioning is cloud formation support so a while ago the serverless",
    "start": "7167350",
    "end": "7174580"
  },
  {
    "text": "framework team added this dysfunctionality now you can add your",
    "start": "7174580",
    "end": "7180910"
  },
  {
    "text": "cloud formation resources directly into service application which is fantastic",
    "start": "7180910",
    "end": "7189900"
  },
  {
    "text": "great one of the things that we do is everything we build we have a fantastic",
    "start": "7191370",
    "end": "7196600"
  },
  {
    "text": "API and using that API you'll be able to being able to build as a fantastic CI CD",
    "start": "7196600",
    "end": "7204570"
  },
  {
    "text": "toolchain general walk us through how we've been able to enhance that for service sure at cloud conformity we",
    "start": "7204570",
    "end": "7213400"
  },
  {
    "text": "really strive to have a freedom and responsibility culture where we hire",
    "start": "7213400",
    "end": "7220680"
  },
  {
    "text": "great engineers and we trust them to do their job well but how do we ensure that",
    "start": "7220680",
    "end": "7229870"
  },
  {
    "text": "we are secure and optimized at all times freedom given how do we ensure that we",
    "start": "7229870",
    "end": "7238650"
  },
  {
    "text": "safely build new features and fast deliver to our customer",
    "start": "7238650",
    "end": "7244240"
  },
  {
    "text": "the answer is automation we trust our developers to build systems but to",
    "start": "7244240",
    "end": "7250270"
  },
  {
    "text": "ensure security brazilians and performance as soon as their code is",
    "start": "7250270",
    "end": "7257260"
  },
  {
    "text": "checked in it goes through an automated infrastructure as code phase where it's",
    "start": "7257260",
    "end": "7264520"
  },
  {
    "text": "checked against AWS well architected and some other compliance and standards so",
    "start": "7264520",
    "end": "7272770"
  },
  {
    "text": "this is if you're looking at the slide at build stage there's a template",
    "start": "7272770",
    "end": "7278830"
  },
  {
    "text": "scanner phase where it's checked against well architected developer who owns this",
    "start": "7278830",
    "end": "7287680"
  },
  {
    "text": "system would receive notification for us it's slack if a bad practice has been",
    "start": "7287680",
    "end": "7294490"
  },
  {
    "text": "introduced there they might need to do multiple iterations before the code is",
    "start": "7294490",
    "end": "7302440"
  },
  {
    "text": "automatically deployed to dev environment and then from there once in",
    "start": "7302440",
    "end": "7309260"
  },
  {
    "text": "dev test or staging it goes through another automated well architected",
    "start": "7309260",
    "end": "7315890"
  },
  {
    "text": "review against a live environment and also some other automated tests and then",
    "start": "7315890",
    "end": "7324290"
  },
  {
    "text": "promote it through production only if it is in line with well architect it with a",
    "start": "7324290",
    "end": "7332540"
  },
  {
    "text": "proper customer feedback loop customers can basically leave feedback about the",
    "start": "7332540",
    "end": "7340640"
  },
  {
    "text": "product then the feedback is analyzed conclusions are implemented and the",
    "start": "7340640",
    "end": "7347480"
  },
  {
    "text": "finally delivered and the loop is repeated right so in my view this is the",
    "start": "7347480",
    "end": "7353900"
  },
  {
    "text": "most effective way to improve your product which requires a good delivery",
    "start": "7353900",
    "end": "7360410"
  },
  {
    "text": "pipeline I would definitely encourage all cloud developers architects and our",
    "start": "7360410",
    "end": "7368330"
  },
  {
    "text": "customers to do this as well great and",
    "start": "7368330",
    "end": "7374120"
  },
  {
    "text": "I'm just finishing off on that mark it's just that's the API that we build into",
    "start": "7374120",
    "end": "7379760"
  },
  {
    "text": "everything from day one we just end up getting so much value out of having that",
    "start": "7379760",
    "end": "7384830"
  },
  {
    "text": "as part of our architecture and philosophy of building things so there's so many different ways that our API just",
    "start": "7384830",
    "end": "7391490"
  },
  {
    "text": "allows us to extend what we're doing that's that's very true we try to be really an a kind of API first company",
    "start": "7391490",
    "end": "7400640"
  },
  {
    "text": "and I guess we learned this from AWS you know AWS provides us with a lot of API",
    "start": "7400640",
    "end": "7407920"
  },
  {
    "text": "that we can use to build things to add value to the service that AWS provides",
    "start": "7407920",
    "end": "7416450"
  },
  {
    "text": "through to their customers great so now I'm gonna talk about",
    "start": "7416450",
    "end": "7422380"
  },
  {
    "text": "AWS DynamoDB and just like with lambda we run into some challenges as a result",
    "start": "7422380",
    "end": "7429220"
  },
  {
    "text": "of being an early starter but first of all I'm going to mention the things that we really like about DynamoDB so for",
    "start": "7429220",
    "end": "7436780"
  },
  {
    "text": "prototyping whenever we want to test out a new idea and we need to store data we",
    "start": "7436780",
    "end": "7442240"
  },
  {
    "text": "use DynamoDB it might not even be a typical role or thing that you'd think",
    "start": "7442240",
    "end": "7447670"
  },
  {
    "text": "of using DynamoDB for but it's just so quick and simple and fast to set up it's",
    "start": "7447670",
    "end": "7453340"
  },
  {
    "text": "low cost you can test it and then blow it away afterwards speed we carefully designed",
    "start": "7453340",
    "end": "7459520"
  },
  {
    "text": "our inventory capability to run as fast as possible and it's incredibly fast low",
    "start": "7459520",
    "end": "7465040"
  },
  {
    "text": "maintenance there's almost nothing that you need to do with DynamoDB we don't have an ops team because we have very",
    "start": "7465040",
    "end": "7471940"
  },
  {
    "text": "little infrastructure to look after now I said that we don't have an ops team we",
    "start": "7471940",
    "end": "7478600"
  },
  {
    "text": "don't have an opportunist arted to run into challenges with how we're running that greater infrastructure so we expect",
    "start": "7478600",
    "end": "7485380"
  },
  {
    "text": "our developers to be responsible for the application that they build and the immediate AWS infrastructure that it",
    "start": "7485380",
    "end": "7492490"
  },
  {
    "text": "runs on we couldn't be asking them to redesign a a V PC or something like that",
    "start": "7492490",
    "end": "7497950"
  },
  {
    "text": "and so there's a lot of other infrastructure in the environment that we really need someone to be working on",
    "start": "7497950",
    "end": "7505210"
  },
  {
    "text": "their next thing that we like about DynamoDB is its ability to scale",
    "start": "7505210",
    "end": "7510450"
  },
  {
    "text": "elastically to meet customer demand as a triggers function that allows us to",
    "start": "7510450",
    "end": "7516970"
  },
  {
    "text": "maintain state and orchestrate the creation of more complex outputs such as",
    "start": "7516970",
    "end": "7522880"
  },
  {
    "text": "report generation where we use a number of different AWS lambdas and also AWS",
    "start": "7522880",
    "end": "7530400"
  },
  {
    "text": "step functions state machine and of course encryption and the great thing",
    "start": "7530400",
    "end": "7536470"
  },
  {
    "text": "about dynamodb is everything is encrypted automatically we don't have to",
    "start": "7536470",
    "end": "7541630"
  },
  {
    "text": "do anything at all and that came into effect in November last year but there are a few cautions",
    "start": "7541630",
    "end": "7548830"
  },
  {
    "text": "with using dynamite so you need to watch the number of global indexes that you've got to manage",
    "start": "7548830",
    "end": "7555000"
  },
  {
    "text": "cost DynamoDB benefits from the critical",
    "start": "7555000",
    "end": "7560340"
  },
  {
    "text": "design of the primary key and you've got to watch out for index and object size",
    "start": "7560340",
    "end": "7566220"
  },
  {
    "text": "limits so they've been a number of business problems that DynamoDB has",
    "start": "7566220",
    "end": "7571320"
  },
  {
    "text": "solved with us initially with AWS dynamodb we experienced application",
    "start": "7571320",
    "end": "7579150"
  },
  {
    "text": "outages and poor performance and they were difficult to troubleshoot and fix",
    "start": "7579150",
    "end": "7584220"
  },
  {
    "text": "without just throwing more money at dynamodb buy more capacity which women",
    "start": "7584220",
    "end": "7589980"
  },
  {
    "text": "have used most of the time so we learn to use exponential back-off to avoid",
    "start": "7589980",
    "end": "7594990"
  },
  {
    "text": "exhaustion of write or read capacity and our VP of engineering made the simpler",
    "start": "7594990",
    "end": "7601740"
  },
  {
    "text": "by building an estate SDK wrapper for AWS DynamoDB and this automates that job",
    "start": "7601740",
    "end": "7608550"
  },
  {
    "text": "of backing off the reads and writes if it gets rattled wait until we've got the capacity available and then reapplying",
    "start": "7608550",
    "end": "7615180"
  },
  {
    "text": "it at that stage which is open source there yeah cloud conformities a growing",
    "start": "7615180",
    "end": "7623700"
  },
  {
    "text": "business and a scaling issues there AWS dynamodb doesn't address for us in",
    "start": "7623700",
    "end": "7629460"
  },
  {
    "text": "the way that we've got it said it although it's got an ability to order",
    "start": "7629460",
    "end": "7634560"
  },
  {
    "text": "scale this is more to meet a general trend and you can see on the slide here where we suffer from short-term spikes",
    "start": "7634560",
    "end": "7641190"
  },
  {
    "text": "and you can see those blue spikes going across the red line the red line is what we've got provisioned the blue spikes",
    "start": "7641190",
    "end": "7647520"
  },
  {
    "text": "exceed that and you can also see in some in some occasions that dynamodb does scale but it's scales after the bursts",
    "start": "7647520",
    "end": "7655050"
  },
  {
    "text": "have taken place so it's not able in the way that we've got it set up to be able to cope with those immediate extra",
    "start": "7655050",
    "end": "7663120"
  },
  {
    "text": "demands and the other thing that it's impossible for dynamodb to scale for is",
    "start": "7663120",
    "end": "7668760"
  },
  {
    "text": "when we add new customers into our system so if we have a new customer who's got say 500 AWS accounts and we",
    "start": "7668760",
    "end": "7676020"
  },
  {
    "text": "know we're adding that on my day we have to go to dynamodb and increase its capacity for certain tables",
    "start": "7676020",
    "end": "7682240"
  },
  {
    "text": "that are going to be affected by that and we also learned that it's also important to increase your minimum as",
    "start": "7682240",
    "end": "7688570"
  },
  {
    "text": "well as your maximum capacity everyone's always always focused on on the maximum but you need to make sure that you've",
    "start": "7688570",
    "end": "7694300"
  },
  {
    "text": "got that minimum to get optimum performance initially we found it",
    "start": "7694300",
    "end": "7699370"
  },
  {
    "text": "challenging to monitor AWS DynamoDB early on Amazon Cloud watched the",
    "start": "7699370",
    "end": "7705490"
  },
  {
    "text": "dashboards and metrics were primitive and although they've got better now we",
    "start": "7705490",
    "end": "7710560"
  },
  {
    "text": "ended up building a slack integration using AWS so HMDA and AWS simple",
    "start": "7710560",
    "end": "7716590"
  },
  {
    "text": "notification service to highlight critical failures for us in real time as",
    "start": "7716590",
    "end": "7723310"
  },
  {
    "text": "our server less Empire increases in size and our business scales so do our running costs so we're currently looking",
    "start": "7723310",
    "end": "7730420"
  },
  {
    "text": "at a couple of different ways that we might change the way that we're billing DynamoDB so the first would be to spend",
    "start": "7730420",
    "end": "7739030"
  },
  {
    "text": "the same amount of money but bundled that into an upfront yearly reserve",
    "start": "7739030",
    "end": "7744790"
  },
  {
    "text": "capacity and so for the same amounts would spend you would actually get a higher amount of capacity and then",
    "start": "7744790",
    "end": "7751870"
  },
  {
    "text": "hopefully that would give a sufficient Headroom for those spikes and then there's a second approach that we're",
    "start": "7751870",
    "end": "7757780"
  },
  {
    "text": "considering and that's to enable on-demand billing for some of our tables the ones that are subject to those",
    "start": "7757780",
    "end": "7764170"
  },
  {
    "text": "highest demands and they're just occasionally high tide amounts because",
    "start": "7764170",
    "end": "7769870"
  },
  {
    "text": "on-demand is able to scale immediately and you pay only for what you use this",
    "start": "7769870",
    "end": "7775090"
  },
  {
    "text": "would appear to meet our requirement to cope with those spikes and also reduce the administration like once it's",
    "start": "7775090",
    "end": "7781030"
  },
  {
    "text": "scaling and scaling in real time we wouldn't have to go in it and turn it up at any stage but there's a catch there",
    "start": "7781030",
    "end": "7787660"
  },
  {
    "text": "and that's if we're subject to a denial of service or more likely there's some issue in our code then we might see",
    "start": "7787660",
    "end": "7794890"
  },
  {
    "text": "demand rise very quickly very high and it could be expensive that's another",
    "start": "7794890",
    "end": "7800800"
  },
  {
    "text": "reason you need the proper automation and monitoring in place yeah so talking",
    "start": "7800800",
    "end": "7808090"
  },
  {
    "text": "about that how do we deal with scale with AWS lambda what concurrency challenges do we",
    "start": "7808090",
    "end": "7815090"
  },
  {
    "text": "have and how does that affect downstream dependencies so we're obviously",
    "start": "7815090",
    "end": "7822580"
  },
  {
    "text": "constantly looking for technologies that empower our developers to build the next",
    "start": "7822580",
    "end": "7828710"
  },
  {
    "text": "generation applications for example recently we were looking at AWS batch to",
    "start": "7828710",
    "end": "7835640"
  },
  {
    "text": "replace lambda in one of our applications but decided not to go ahead",
    "start": "7835640",
    "end": "7841340"
  },
  {
    "text": "with that because for us a shorter time",
    "start": "7841340",
    "end": "7847580"
  },
  {
    "text": "to market is more important than ever we're not experienced enough with AWS",
    "start": "7847580",
    "end": "7854870"
  },
  {
    "text": "batch which is by the way a great service but we don't know or we don't",
    "start": "7854870",
    "end": "7860180"
  },
  {
    "text": "fully know the operational and security overheads at scale for that service but",
    "start": "7860180",
    "end": "7866840"
  },
  {
    "text": "you know have been doing this for years now we are quite comfortable with server",
    "start": "7866840",
    "end": "7874010"
  },
  {
    "text": "lists you know and we think you know we got all the monitoring tools obviously",
    "start": "7874010",
    "end": "7879590"
  },
  {
    "text": "it's always a challenge we improve upon them but we're quite happy where we are",
    "start": "7879590",
    "end": "7885800"
  },
  {
    "text": "now just on the AWS patch after much",
    "start": "7885800",
    "end": "7892490"
  },
  {
    "text": "discussion with AWS we'll learn that there are potentially other common",
    "start": "7892490",
    "end": "7897500"
  },
  {
    "text": "problems with a Tobias patch at scale that might not suit our use case so for",
    "start": "7897500",
    "end": "7905150"
  },
  {
    "text": "example batch is a little slower to evaluate and place jobs than a server",
    "start": "7905150",
    "end": "7912230"
  },
  {
    "text": "less application and this is because batch manages ec2 instances as well and",
    "start": "7912230",
    "end": "7918620"
  },
  {
    "text": "could need to provision resources to place jobs right so if the batch",
    "start": "7918620",
    "end": "7924140"
  },
  {
    "text": "environment doesn't have any instances then batch will try to scale the",
    "start": "7924140",
    "end": "7929600"
  },
  {
    "text": "environment after a job is submitted this can delay the job by a few minutes",
    "start": "7929600",
    "end": "7935780"
  },
  {
    "text": "while waiting for the ec2 instance will launch and bootstrap the other common issue is",
    "start": "7935780",
    "end": "7943300"
  },
  {
    "text": "when resources not being available to place a job and at scale we're running",
    "start": "7943300",
    "end": "7952000"
  },
  {
    "text": "our conformity but I think this is quite critical for us we cannot afford not to",
    "start": "7952000",
    "end": "7960050"
  },
  {
    "text": "have resources available to us so the bad job are kind of stuck in a runnable",
    "start": "7960050",
    "end": "7967489"
  },
  {
    "text": "mode until there are ec2 resources for the job",
    "start": "7967489",
    "end": "7973070"
  },
  {
    "text": "to be run available that's great and it sounds like it is a good opportunity for",
    "start": "7973070",
    "end": "7979640"
  },
  {
    "text": "us to take a step back look at what we were doing on serverless and make sure that it really met the needs of the",
    "start": "7979640",
    "end": "7986179"
  },
  {
    "text": "workloads that we were run in and look at the advantages of it and then just take a look back at a more traditional",
    "start": "7986179",
    "end": "7991699"
  },
  {
    "text": "approach at running those workloads and saying I'm actually the reason that",
    "start": "7991699",
    "end": "7998150"
  },
  {
    "text": "we're on service still means everything that we need and you know we've got no need to change anything at all",
    "start": "7998150",
    "end": "8004960"
  },
  {
    "text": "absolutely okay so as a head of security",
    "start": "8004960",
    "end": "8010150"
  },
  {
    "text": "I'm obviously totally passionate about security and in particular AWS security so we're going to talk about our",
    "start": "8010150",
    "end": "8017160"
  },
  {
    "text": "ecosystem of AWS and third-party tools that we use to monitor service security",
    "start": "8017160",
    "end": "8023489"
  },
  {
    "text": "some of our security ecosystem is shown on this slide we try and use native AWS",
    "start": "8023489",
    "end": "8030429"
  },
  {
    "text": "services wherever we can only buy in additional services where we find a gap",
    "start": "8030429",
    "end": "8035830"
  },
  {
    "text": "that concerns us so first that means using the AWS Web Application Firewall",
    "start": "8035830",
    "end": "8041230"
  },
  {
    "text": "which is brilliant in so many different ways I've had the challenge of managing",
    "start": "8041230",
    "end": "8046719"
  },
  {
    "text": "enterprise web application firewall deployments where you have to spend",
    "start": "8046719",
    "end": "8052390"
  },
  {
    "text": "thirty thousand dollars per each application build some rules for it running a",
    "start": "8052390",
    "end": "8057640"
  },
  {
    "text": "testing mode for a couple of weeks and then deploy those rules to production you rinse and repeat that for 30",
    "start": "8057640",
    "end": "8064719"
  },
  {
    "text": "applications with many many false positives and it quickly becomes either in a",
    "start": "8064719",
    "end": "8070300"
  },
  {
    "text": "effective or unmanageable and in addition a lot of traditional security tools were not built with cloud in mind",
    "start": "8070300",
    "end": "8076860"
  },
  {
    "text": "we had very expensive complicated to build and required constant maintenance",
    "start": "8076860",
    "end": "8083500"
  },
  {
    "text": "and patching and looking after on the flip side with a CloudFormation template",
    "start": "8083500",
    "end": "8090040"
  },
  {
    "text": "I can deploy 10 rules on an AWS Web Application Firewall in five minutes and",
    "start": "8090040",
    "end": "8096370"
  },
  {
    "text": "link that to a load balancer or in this case a CloudFront distribution and the",
    "start": "8096370",
    "end": "8101890"
  },
  {
    "text": "AWS graph in my opinion is very good and you can just deploy it in its default",
    "start": "8101890",
    "end": "8107410"
  },
  {
    "text": "configuration and that's going to block 80% of the internet background noise without doing anything more guard duty",
    "start": "8107410",
    "end": "8115720"
  },
  {
    "text": "is another awesome service it costs very little it's incredibly easy to turn on",
    "start": "8115720",
    "end": "8121090"
  },
  {
    "text": "and it does a fantastic job of grabbing your VPC flow logs DNS lookups and cloud",
    "start": "8121090",
    "end": "8128110"
  },
  {
    "text": "trail events and then cross-references those with a third party threat information service and that allows it",
    "start": "8128110",
    "end": "8137140"
  },
  {
    "text": "to produce accurate actionable results then our application takes those guard duty alerts and fires them into my slack",
    "start": "8137140",
    "end": "8144730"
  },
  {
    "text": "channel and it passes it neatly into a single line that describes the alarm and",
    "start": "8144730",
    "end": "8150460"
  },
  {
    "text": "gives me a hyperlink so I can go straight to that affected resource there's no for me there's no cutting and",
    "start": "8150460",
    "end": "8156580"
  },
  {
    "text": "pasting a resource ID logging into the account going to the cloud trail dashboard",
    "start": "8156580",
    "end": "8162580"
  },
  {
    "text": "and trying to input it there or going to the ec2 system manager putting in and doing a filter again so I just go",
    "start": "8162580",
    "end": "8168490"
  },
  {
    "text": "straight to the results guide Julie's great detecting attacks in real time and",
    "start": "8168490",
    "end": "8173920"
  },
  {
    "text": "and lerton you to it as it happened so I've watched a developer spin up a new",
    "start": "8173920",
    "end": "8179020"
  },
  {
    "text": "ec2 instance with Remote Desktop Protocol open to the Internet our",
    "start": "8179020",
    "end": "8184300"
  },
  {
    "text": "application cloud conformity is then alerted as to the open port guard duty then detects that the port is being",
    "start": "8184300",
    "end": "8190540"
  },
  {
    "text": "probed and then a few minutes later guard duty reports that that account has been subject to a brute-force attack and",
    "start": "8190540",
    "end": "8197410"
  },
  {
    "text": "in real time from the time that that that ec2 instance is created we",
    "start": "8197410",
    "end": "8202969"
  },
  {
    "text": "that port opened on the internet it's about 10 to 15 minutes for any news easy to that's deployed like that to actually",
    "start": "8202969",
    "end": "8210500"
  },
  {
    "text": "being actively exploited and if the administration password for that Remote",
    "start": "8210500",
    "end": "8217670"
  },
  {
    "text": "Desktop Protocol is not that strong then someone's going to get in I don't know of any other tool that takes this kind",
    "start": "8217670",
    "end": "8224630"
  },
  {
    "text": "of rich data and turns it into accurate alerts at this price point we also use",
    "start": "8224630",
    "end": "8229760"
  },
  {
    "text": "secrets managers secrets managers in enhanced version of the parameter store it makes rotation of Secrets trivial for",
    "start": "8229760",
    "end": "8238670"
  },
  {
    "text": "our developers and gives us excellent oversight of our secrets management from end to end so for example one of the",
    "start": "8238670",
    "end": "8245779"
  },
  {
    "text": "joys of my job is filling in third-party security assessments for our cloud",
    "start": "8245780",
    "end": "8250880"
  },
  {
    "text": "infrastructure and being able to put down that I used secrets manager for managing our our credentials just means",
    "start": "8250880",
    "end": "8258018"
  },
  {
    "text": "that I'm given the top answer to your questions like that and typically for AWS this is another pay-as-you-go",
    "start": "8258019",
    "end": "8264920"
  },
  {
    "text": "service with no management head overhead so I'm not having to build it not having to run another ec2 with a servant",
    "start": "8264920",
    "end": "8271630"
  },
  {
    "text": "alienvault so we use alienvault USM as a security information and events manager",
    "start": "8271630",
    "end": "8278719"
  },
  {
    "text": "and over the years I've used lots and lots of different themes on some very large networks and I find alienvault",
    "start": "8278719",
    "end": "8286189"
  },
  {
    "text": "is the simplest to deploy it's the quickest to produce reliable actionable insights and although it was written",
    "start": "8286190",
    "end": "8293779"
  },
  {
    "text": "from the ground up for AWS alienvault has such a rich history of seeing development because the company also",
    "start": "8293780",
    "end": "8300410"
  },
  {
    "text": "owns the open-source security information and event management platform alienvault is also great for",
    "start": "8300410",
    "end": "8307939"
  },
  {
    "text": "building really useful dashboards for CloudFront for hundreds 500 application",
    "start": "8307940",
    "end": "8314000"
  },
  {
    "text": "errors and in particular permission issues which developers are often blind to so if your function is not working in",
    "start": "8314000",
    "end": "8320719"
  },
  {
    "text": "a production account you may not see the permission failures as clearly as the same does and we often discover code",
    "start": "8320719",
    "end": "8327260"
  },
  {
    "text": "issues as a prod product of using a security tool a",
    "start": "8327260",
    "end": "8332409"
  },
  {
    "text": "so I'm going to finish with a discussion of what you can expect to pay when you're doing things this way so although",
    "start": "8334510",
    "end": "8342050"
  },
  {
    "text": "on this slide I haven't broken out the specific cost what we're paying per month for these individual services we",
    "start": "8342050",
    "end": "8349369"
  },
  {
    "text": "are showing here clearly the percentage of our bill that's consumed by each one",
    "start": "8349369",
    "end": "8354619"
  },
  {
    "text": "of these services and this is our total bill that's not like ec2 at the side of",
    "start": "8354619",
    "end": "8360529"
  },
  {
    "text": "this that's consuming a lot more these are the most expensive ticket items on our bill and the only one that's missing",
    "start": "8360530",
    "end": "8366678"
  },
  {
    "text": "here is support and that's a simple percentage of your total spent so in",
    "start": "8366679",
    "end": "8375619"
  },
  {
    "text": "short service with AWS has allowed us to scale really quickly and at a relatively",
    "start": "8375619",
    "end": "8382159"
  },
  {
    "text": "low cost and with little operational overhead and this has allowed us to concentrate on building a world-class",
    "start": "8382159",
    "end": "8389449"
  },
  {
    "text": "system for constantly checking our customers compliance against the AWS well architected framework and I think",
    "start": "8389449",
    "end": "8397279"
  },
  {
    "text": "that nothing illustrates how happy we are with the results of our journey more clearly then when we started to build",
    "start": "8397279",
    "end": "8404750"
  },
  {
    "text": "our new soon to launch platform that's going to be checking our customers",
    "start": "8404750",
    "end": "8409819"
  },
  {
    "text": "Mike's Microsoft Azure infrastructure guess what platform we've built that on of course AWS service so thank you very",
    "start": "8409819",
    "end": "8422899"
  },
  {
    "text": "much for your time here's some takeaways about some of the things that we've talked about",
    "start": "8422899",
    "end": "8429939"
  },
  {
    "text": "thank you very much thank you Paul and",
    "start": "8432940",
    "end": "8437960"
  },
  {
    "text": "Mike thank you so much for that great presentation it's awesome to hear how your experiences awesome to hear about",
    "start": "8437960",
    "end": "8445820"
  },
  {
    "text": "your experiences and how you're building service applications globally and it's",
    "start": "8445820",
    "end": "8451820"
  },
  {
    "text": "scale to all of our attendees if you'd like to hear more about cloud Conformity",
    "start": "8451820",
    "end": "8458240"
  },
  {
    "text": "please click the yes link provided to you in the chat area and they'll get in",
    "start": "8458240",
    "end": "8463641"
  },
  {
    "text": "touch with you to answer any questions that you might have and that's all we",
    "start": "8463641",
    "end": "8468830"
  },
  {
    "text": "have that's all we have for you today folks thank you again for your attendance we hope this has been",
    "start": "8468830",
    "end": "8475101"
  },
  {
    "text": "informative please provide feedback we really appreciate that and then we want",
    "start": "8475101",
    "end": "8482150"
  },
  {
    "text": "to know more about what we're doing well and things that we can do better and",
    "start": "8482150",
    "end": "8487181"
  },
  {
    "text": "with that I'll just leave you with a a goodbye and go build and go build on",
    "start": "8487181",
    "end": "8494120"
  },
  {
    "text": "service they",
    "start": "8494120",
    "end": "8497410"
  }
]