[
  {
    "start": "0",
    "end": "109000"
  },
  {
    "text": "hey good morning everyone hope you're having a nice day today can you all hear",
    "start": "1220",
    "end": "6420"
  },
  {
    "text": "me put your headphones on clap for the silent disco this is how to clap silently cool my name is John crow I'm a",
    "start": "6420",
    "end": "16379"
  },
  {
    "text": "senior software development engineer at Amazon Web Services or criminal protection our department is primarily",
    "start": "16379",
    "end": "23010"
  },
  {
    "text": "concerned with protecting the border of Amazon Web Services and amazon.com and",
    "start": "23010",
    "end": "28130"
  },
  {
    "text": "all of your resources inside of AWS especially CloudFront distributions route 53 hosted zones and all of the",
    "start": "28130",
    "end": "35579"
  },
  {
    "text": "regional resources like instances and load balancers this morning we're going to talk about distributed denial of",
    "start": "35579",
    "end": "41790"
  },
  {
    "text": "service attacks what shield can do for you how I can leverage laughs and go",
    "start": "41790",
    "end": "46920"
  },
  {
    "text": "from there so first we'll start with a brief primer it's like any course you",
    "start": "46920",
    "end": "52949"
  },
  {
    "text": "know got a good understanding of what is DDoS and what kind of resources who can",
    "start": "52949",
    "end": "58260"
  },
  {
    "text": "be affected by it we'll go over what AWS does in the shared responsibility model to create",
    "start": "58260",
    "end": "64350"
  },
  {
    "text": "insight and then how you can access those insights and finally we'll wrap up with why everyone should have a response",
    "start": "64350",
    "end": "71400"
  },
  {
    "text": "plan before you're under attack",
    "start": "71400",
    "end": "74990"
  },
  {
    "text": "Before we jump into all that if you were here yesterday or if you look at the live stream there's a great talk by",
    "start": "78420",
    "end": "85140"
  },
  {
    "text": "Kamal Verma from Dow Jones it goes very deep on some of these DDoS topics and",
    "start": "85140",
    "end": "90600"
  },
  {
    "text": "how they protect their perimeter on AWS and later today there's a builder",
    "start": "90600",
    "end": "95910"
  },
  {
    "text": "session with Cameron Worrell where you can learn how to use inspector and wofe and system manager so take a close look",
    "start": "95910",
    "end": "102570"
  },
  {
    "text": "for these find him if you can some great speakers here all right so let's talk",
    "start": "102570",
    "end": "111390"
  },
  {
    "start": "109000",
    "end": "513000"
  },
  {
    "text": "what is DDoS I'm gonna start from the bottom of this acronym and talk about the service any kind of service that",
    "start": "111390",
    "end": "119070"
  },
  {
    "text": "we're delivering is a bunch of links in a chain there's all components that go together to deliver a service from you",
    "start": "119070",
    "end": "125700"
  },
  {
    "text": "who's built it to your consumers your customers we were trying to provide value to it includes some networking",
    "start": "125700",
    "end": "131910"
  },
  {
    "text": "level includes some infrastructure like you might have some ec2 instances or load balancers and it includes any",
    "start": "131910",
    "end": "138300"
  },
  {
    "text": "applications that you've written on top of that that are running in say API a gateway or an application load balancer",
    "start": "138300",
    "end": "144420"
  },
  {
    "text": "or in cluttering distribution the denial",
    "start": "144420",
    "end": "149940"
  },
  {
    "text": "of any of these services just takes one of those links in the chain to knock out",
    "start": "149940",
    "end": "155160"
  },
  {
    "text": "the ability of you to deliver value to your customers so attackers will often try and find the weakest link in the",
    "start": "155160",
    "end": "161670"
  },
  {
    "text": "chain they'll try to overwhelm the network with a bunch of volume and packets just to congest it they'll try",
    "start": "161670",
    "end": "168780"
  },
  {
    "text": "to target your infrastructure and prevent you from accepting new connections or they'll go to the very",
    "start": "168780",
    "end": "175560"
  },
  {
    "text": "top level and play with the application try to be try to stress it out in a way",
    "start": "175560",
    "end": "180959"
  },
  {
    "text": "that's abnormal or if they're very clever it'll be as normally look looking as possible but they won't actually care",
    "start": "180959",
    "end": "187560"
  },
  {
    "text": "about the results or they'll just be trying to stop login attempts the final",
    "start": "187560",
    "end": "193830"
  },
  {
    "text": "bit is distributed so these attacks are coming from a wide variety of sources",
    "start": "193830",
    "end": "198930"
  },
  {
    "text": "it's not as easy as just finding that one malicious person or computer and",
    "start": "198930",
    "end": "204000"
  },
  {
    "text": "blocking it they're coming from all over the internet so this is the the type of problem that we're going to talk about",
    "start": "204000",
    "end": "210390"
  },
  {
    "text": "today to draw a little bit deeper on each of",
    "start": "210390",
    "end": "217410"
  },
  {
    "text": "those pieces take a look at this diagram to mock up a mock-up of a network you've",
    "start": "217410",
    "end": "223320"
  },
  {
    "text": "got a bunch of happy light blue and dark blue users and you've got this malicious",
    "start": "223320",
    "end": "228360"
  },
  {
    "text": "user mixed in there they've flooded this link from their ISP through an internet exchange to one of",
    "start": "228360",
    "end": "234960"
  },
  {
    "text": "clogged fronts edge locations and now that location can't accept new requests",
    "start": "234960",
    "end": "241800"
  },
  {
    "text": "or send any responses to anybody else because it's been saturated so",
    "start": "241800",
    "end": "246870"
  },
  {
    "text": "CloudFront will automatically handle network type events but and that's on our side of the shared",
    "start": "246870",
    "end": "253260"
  },
  {
    "text": "responsibility model how we protect the network so that wherever your resource is you'll always have some network",
    "start": "253260",
    "end": "259859"
  },
  {
    "text": "available with lots of excess capacity to make sure that we can provide that service to you",
    "start": "259859",
    "end": "267620"
  },
  {
    "text": "UDP floods are very common they're over 60 percent roughly of all DDoS attacks",
    "start": "267750",
    "end": "273990"
  },
  {
    "text": "and their objective is to fill up a pipe like this by sending small requests that",
    "start": "273990",
    "end": "280560"
  },
  {
    "text": "get very large responses and directing them to our target or you could be the",
    "start": "280560",
    "end": "286980"
  },
  {
    "text": "reflector in either case they're filling up the pipe with requests that they don't care about the content of you may",
    "start": "286980",
    "end": "293820"
  },
  {
    "text": "recall in the recent few years the largest one of these was 1.7 terabits",
    "start": "293820",
    "end": "299130"
  },
  {
    "text": "per second just think about that for a while that's a huge amount of volume to",
    "start": "299130",
    "end": "306060"
  },
  {
    "text": "handle meanwhile more recently just in the first quarter we observed a seven",
    "start": "306060",
    "end": "312120"
  },
  {
    "text": "hundred and sixty two gigabit per second flood of this type and automatically rerouted traffic around it",
    "start": "312120",
    "end": "320060"
  },
  {
    "text": "bringing up a step the next type of next categories of attack would be looking at",
    "start": "322920",
    "end": "328690"
  },
  {
    "text": "connection exhaustion or transport exhaustion same type of users we've",
    "start": "328690",
    "end": "334030"
  },
  {
    "text": "abstracted away the network say that you're getting to any one of these locations and a bunch of hosts within",
    "start": "334030",
    "end": "339820"
  },
  {
    "text": "our maintaining connection with each of the customers so customers ABC might",
    "start": "339820",
    "end": "345730"
  },
  {
    "text": "have made a few requests or a small or a large number of requests and the malicious user labelled II is just",
    "start": "345730",
    "end": "351940"
  },
  {
    "text": "trying to fill up that table with as many connections as they can that are half open this common type of attack",
    "start": "351940",
    "end": "357850"
  },
  {
    "text": "also known as a syn flood that's the second largest type of DDoS attacks are",
    "start": "357850",
    "end": "365110"
  },
  {
    "text": "these connection exhaustion attacks and in recent years there's been a attack as",
    "start": "365110",
    "end": "370150"
  },
  {
    "text": "large as 500 million packets per second and just think if this one little host",
    "start": "370150",
    "end": "375300"
  },
  {
    "text": "has to take 500 million connection requests hold the connection open",
    "start": "375300",
    "end": "380620"
  },
  {
    "text": "faithfully and then get silence on the line like great I've got the connection",
    "start": "380620",
    "end": "385660"
  },
  {
    "text": "for you now what do you want but this type of attack would open that connection get a host waiting for the",
    "start": "385660",
    "end": "392410"
  },
  {
    "text": "request and drop it in first quarter of",
    "start": "392410",
    "end": "397840"
  },
  {
    "text": "this year we saw one of these attacks was as large as 260 million so it's half as large as the biggest one that we've",
    "start": "397840",
    "end": "404110"
  },
  {
    "text": "ever seen and at the highest level in",
    "start": "404110",
    "end": "411460"
  },
  {
    "text": "the stack there's applications stressing attacks so within a particular host or",
    "start": "411460",
    "end": "416770"
  },
  {
    "text": "service there are finite resources it's not everything is not infinite but you",
    "start": "416770",
    "end": "421810"
  },
  {
    "text": "can go you can consider in general that there's compute and there's in-memory and there's IO on disk or across the",
    "start": "421810",
    "end": "429430"
  },
  {
    "text": "network and any one of these could be the target of a stress malicious user",
    "start": "429430",
    "end": "435280"
  },
  {
    "text": "might have found that your service will calculate some prime numbers for example",
    "start": "435280",
    "end": "440320"
  },
  {
    "text": "and they could keep requesting and cause it to spend a lot of compute cycles doing that or it might be accumulating",
    "start": "440320",
    "end": "448060"
  },
  {
    "text": "some data and the attacker could tell it to accumulate meaningless amounts of",
    "start": "448060",
    "end": "453910"
  },
  {
    "text": "data taking up memory or a very common one is that the disk or mint or network will be",
    "start": "453910",
    "end": "461219"
  },
  {
    "text": "consumed by this malicious attacker in",
    "start": "461219",
    "end": "467430"
  },
  {
    "text": "all cases the attacker is trying to find an expensive request to make your server work hard and then doesn't care about",
    "start": "467430",
    "end": "473939"
  },
  {
    "text": "the response so you have a login page a final example here they could certainly",
    "start": "473939",
    "end": "481289"
  },
  {
    "text": "be doing some kind of a credential attack very sophisticated trying to find a way in but to deny the service all",
    "start": "481289",
    "end": "487620"
  },
  {
    "text": "they have to do is keep trying harder and harder and harder and cause that login page to go down and now your users",
    "start": "487620",
    "end": "493379"
  },
  {
    "text": "can't log in at all so to sum up we have",
    "start": "493379",
    "end": "499919"
  },
  {
    "text": "Network level attacks transport they go to the infrastructure and application level attacks the most sophisticated",
    "start": "499919",
    "end": "505169"
  },
  {
    "text": "that try to behave like a real consumer but are just stressing you out so who",
    "start": "505169",
    "end": "515010"
  },
  {
    "start": "513000",
    "end": "755000"
  },
  {
    "text": "can be affected what kinds of resources can be affected for the network link",
    "start": "515010",
    "end": "520729"
  },
  {
    "text": "anything that's on the Internet can be affected the best thing you can do to protect against network attacks is",
    "start": "520729",
    "end": "527699"
  },
  {
    "text": "to leave all of the stuff you don't need on the internet off the internet if you've got a multi-tiered application",
    "start": "527699",
    "end": "534420"
  },
  {
    "text": "only expose the very top tier the web facing tier you obviously wouldn't want",
    "start": "534420",
    "end": "540899"
  },
  {
    "text": "to put your database right on the internet but you'd be surprised how often that happens or you know have an",
    "start": "540899",
    "end": "546269"
  },
  {
    "text": "s3 bucket that's public when it could be private",
    "start": "546269",
    "end": "551750"
  },
  {
    "text": "transport layer anytime that a connection is being tracked we can an",
    "start": "552440",
    "end": "558080"
  },
  {
    "text": "attacker can exhaust that tracking resource so TCP is a staple protocol",
    "start": "558080",
    "end": "564380"
  },
  {
    "text": "you're sure you're aware of the three-way handshake syn syn ack ack that's a deliberate and explicit type of",
    "start": "564380",
    "end": "571100"
  },
  {
    "text": "connection tracking but you may not be aware UDP also has connection tracking",
    "start": "571100",
    "end": "576680"
  },
  {
    "text": "in load balancers in AWS and so it could also be a subject of exhaustion attacks",
    "start": "576680",
    "end": "583210"
  },
  {
    "text": "and finally on the application layer cloud run distributions API gateways",
    "start": "583210",
    "end": "591700"
  },
  {
    "text": "application load balancers anything that has an HTTP presence and accepts a get",
    "start": "591700",
    "end": "597170"
  },
  {
    "text": "or a post type of request sends a response back can you know you subject",
    "start": "597170",
    "end": "602390"
  },
  {
    "text": "to an application attack where the attacker simulates your application but doesn't care about the result so some of",
    "start": "602390",
    "end": "611990"
  },
  {
    "text": "the network resources are VPC that gives you a footprint virtual private cloud here in in Amazon it's analogous to",
    "start": "611990",
    "end": "619790"
  },
  {
    "text": "having a network in an on-premise ec2 instances easier virtualization layer these are all subject to the lowest",
    "start": "619790",
    "end": "626660"
  },
  {
    "text": "level only to network then you get up to",
    "start": "626660",
    "end": "631910"
  },
  {
    "text": "hosted zones and global accelerators and classic and network load balancers these all have connection tracking built in",
    "start": "631910",
    "end": "639260"
  },
  {
    "text": "and at the highest level application api's and distributions are full HTTP",
    "start": "639260",
    "end": "645560"
  },
  {
    "text": "applications so there's subject to all three layers of attack for each one of",
    "start": "645560",
    "end": "651380"
  },
  {
    "text": "these things have listed a few best practices just to get you to jump to jump started but we don't drill into",
    "start": "651380",
    "end": "657590"
  },
  {
    "text": "these too much these are just a jumping point but definitely use security groups and there were cackles limit the surface",
    "start": "657590",
    "end": "665330"
  },
  {
    "text": "area that's exposed to use elastic IP so ever possible so you can change the IP of an instance without restarting the",
    "start": "665330",
    "end": "671960"
  },
  {
    "text": "instance entirely if you're using DNS which of course you",
    "start": "671960",
    "end": "677460"
  },
  {
    "text": "are type in amazon.com search for bananas you've already used DNS this",
    "start": "677460",
    "end": "683460"
  },
  {
    "text": "morning so if you can help it use route 53 because we've built in specialized DNS protections that are",
    "start": "683460",
    "end": "690180"
  },
  {
    "text": "always on for for DNS in the cloud global accelerator it's pretty cool",
    "start": "690180",
    "end": "698010"
  },
  {
    "text": "allows you to use a single IP or up to four IPs and direct to load balancers",
    "start": "698010",
    "end": "703770"
  },
  {
    "text": "across any region leads right into the next point the the load balancers it's a",
    "start": "703770",
    "end": "710400"
  },
  {
    "text": "step up it's like an upgrade of having an instance easily scales out you can",
    "start": "710400",
    "end": "715410"
  },
  {
    "text": "apply scaling rules which we'll talk about a little bit later and at the last",
    "start": "715410",
    "end": "721650"
  },
  {
    "text": "level these applications are best coupled with laughs so as you can see as",
    "start": "721650",
    "end": "726810"
  },
  {
    "text": "much visibility as possible into what types of requests are coming get some insight about that and definitely for",
    "start": "726810",
    "end": "732120"
  },
  {
    "text": "cloud front get that always-on protection I can't forget our partners",
    "start": "732120",
    "end": "737220"
  },
  {
    "text": "have built a lot of great rules whether you're installing a like a network protection appliance at the VPC or if",
    "start": "737220",
    "end": "744600"
  },
  {
    "text": "you're applying a wife partner rule there's a huge variety of partner solutions available to to help protect",
    "start": "744600",
    "end": "750180"
  },
  {
    "text": "against DDoS and other security problems",
    "start": "750180",
    "end": "754880"
  },
  {
    "start": "755000",
    "end": "1048000"
  },
  {
    "text": "so third segment here we're gonna talk a little bit about what AWS does how we",
    "start": "757300",
    "end": "762910"
  },
  {
    "text": "act all the time how we react to attacks and how we create insights for the",
    "start": "762910",
    "end": "770110"
  },
  {
    "text": "network level Amazon has a huge footprint of routers and locations we",
    "start": "770110",
    "end": "775330"
  },
  {
    "text": "collect aggregated net flow from all the routers and switches around the border",
    "start": "775330",
    "end": "780370"
  },
  {
    "text": "of our network and centralize those into regional aggregations in addition we",
    "start": "780370",
    "end": "788500"
  },
  {
    "text": "have some specialized some custom inline scrubbing devices for cloud friend refugee three these are always in line",
    "start": "788500",
    "end": "794290"
  },
  {
    "text": "and we're always receiving that data and doing that that scrubbing work for regions these are in line by reaction",
    "start": "794290",
    "end": "800350"
  },
  {
    "text": "but in both cases we collect metrics back from those scrubbers and decide and",
    "start": "800350",
    "end": "805660"
  },
  {
    "text": "then shapers and vectors that are collected on those scrubbers so you get a more detailed view of what type of traffic is crossing and whether it is a",
    "start": "805660",
    "end": "812550"
  },
  {
    "text": "DDoS attack or if it's legitimate we use",
    "start": "812550",
    "end": "817960"
  },
  {
    "text": "this these net flow logs to prioritize effort net flow you're probably already thinking well that's not every packet",
    "start": "817960",
    "end": "824650"
  },
  {
    "text": "how are you protecting me if you don't look at every packet and confirm if it's a good or a bad one well that's okay",
    "start": "824650",
    "end": "830430"
  },
  {
    "text": "DDoS is a big volume event so if we only",
    "start": "830430",
    "end": "835840"
  },
  {
    "text": "look at samples we'll still be able to tell when a drastic change in the population and the size of that",
    "start": "835840",
    "end": "842380"
  },
  {
    "text": "population has has occurred it's especially useful because under",
    "start": "842380",
    "end": "847770"
  },
  {
    "text": "high-volume attack you don't want to get less efficient don't want to start retrying requests and so on the bigger",
    "start": "847770",
    "end": "855340"
  },
  {
    "text": "the volume of requests is the more efficient we get at determining whether it's under attack or not and we also use",
    "start": "855340",
    "end": "863800"
  },
  {
    "text": "these lossy data points as just a starting to draw attention put one of",
    "start": "863800",
    "end": "870940"
  },
  {
    "text": "those in line scrubbing devices on and then get full vision of the vectors and shapers in both cases we distill",
    "start": "870940",
    "end": "880260"
  },
  {
    "text": "exabytes of information down to just a few points of data that give a good",
    "start": "880260",
    "end": "886000"
  },
  {
    "text": "profile of what the traffic looks like so that includes looking source IPS and deciding out of this",
    "start": "886000",
    "end": "892810"
  },
  {
    "text": "population at this moment it had a it looked like a hundred IPS from these",
    "start": "892810",
    "end": "899950"
  },
  {
    "text": "various regions give it an entropy score that says that describes it and then",
    "start": "899950",
    "end": "905080"
  },
  {
    "text": "from the next moment decide a new entropy score that if it has grown to a thousand IPS and now they're in entirely",
    "start": "905080",
    "end": "911020"
  },
  {
    "text": "different geographic regions and the entropy changes and we just look at spikes of volume and entropy changes to",
    "start": "911020",
    "end": "919690"
  },
  {
    "text": "decide when an attack is starting so for example Cu UDP port 11 to 11 has a huge",
    "start": "919690",
    "end": "927460"
  },
  {
    "text": "increase in volume and the stability of those IPS that are targeting us have changed a lot that's a UDP flood on this",
    "start": "927460",
    "end": "934720"
  },
  {
    "text": "particular port that you might have heard of memcache up to the next level",
    "start": "934720",
    "end": "943500"
  },
  {
    "text": "for transport and connection exhaustion attacks we go a level deeper and collect",
    "start": "943500",
    "end": "950650"
  },
  {
    "text": "some more metrics from from the hosts and infrastructure track whether",
    "start": "950650",
    "end": "955960"
  },
  {
    "text": "connection is initialization is successful or failing look at some common health metrics like CPU and",
    "start": "955960",
    "end": "961960"
  },
  {
    "text": "memory on instance or success fail metrics on an HTTP application but",
    "start": "961960",
    "end": "968830"
  },
  {
    "text": "that's the most basic level we still are using some of that lossy data from the",
    "start": "968830",
    "end": "975490"
  },
  {
    "text": "previous slide to start this in this inspection but that allows us like by",
    "start": "975490",
    "end": "982480"
  },
  {
    "text": "really quickly collecting just samples allows us to quickly react even before sometimes an impact is observed we can",
    "start": "982480",
    "end": "989200"
  },
  {
    "text": "get that scrubber in place and block the attack entirely at the minimum we use",
    "start": "989200",
    "end": "995050"
  },
  {
    "text": "that quick reaction to upgrade from sampled net flow to getting perfect data",
    "start": "995050",
    "end": "1000690"
  },
  {
    "text": "from the in scrubbing device the inline scrubbing device example at this level",
    "start": "1000690",
    "end": "1006750"
  },
  {
    "text": "is you get a huge increase in syn packets on our net flow we see we can",
    "start": "1006750",
    "end": "1012060"
  },
  {
    "text": "see that just there's a lot more syn packets happening why and the host is emitting some connection errors he's",
    "start": "1012060",
    "end": "1018540"
  },
  {
    "text": "probably under a syn flood or a half-open attack at that point we would put the inline",
    "start": "1018540",
    "end": "1025490"
  },
  {
    "text": "scrubber in in place and it would start to negotiate sins with any new",
    "start": "1025490",
    "end": "1031579"
  },
  {
    "text": "connection open one up handle it before it gets to the host and only when",
    "start": "1031579",
    "end": "1037220"
  },
  {
    "text": "the AK has come back only when that connection is confirmed then move the connection from the scrubbing device",
    "start": "1037220",
    "end": "1042380"
  },
  {
    "text": "down to the target host",
    "start": "1042380",
    "end": "1045819"
  },
  {
    "start": "1048000",
    "end": "1195000"
  },
  {
    "text": "now at the top level at applications the best thing to do is some collect some",
    "start": "1050970",
    "end": "1055980"
  },
  {
    "text": "logs so people all usually come in a very common format w3c other formats are",
    "start": "1055980",
    "end": "1062250"
  },
  {
    "text": "possible you can do whatever you prefer I prefer to get mine from laughs that",
    "start": "1062250",
    "end": "1068040"
  },
  {
    "text": "way across all three of these resources the logging is consistent but in addition cloud front application load",
    "start": "1068040",
    "end": "1073800"
  },
  {
    "text": "balancer API gateway also can provide logs in the format that you specify and",
    "start": "1073800",
    "end": "1078990"
  },
  {
    "text": "directly to any target that you wish so instead of laughs you could send the logs to elasticsearch or to cloud watch",
    "start": "1078990",
    "end": "1086640"
  },
  {
    "text": "insights or even just to s3 just hold on to those for for later once you have",
    "start": "1086640",
    "end": "1094470"
  },
  {
    "text": "these once we have these logs then we model the traffic to your application an",
    "start": "1094470",
    "end": "1100200"
  },
  {
    "text": "example application might have a home page you just come from just woken up and gone to amazon.com and then you've",
    "start": "1100200",
    "end": "1107700"
  },
  {
    "text": "logged into your account search for bananas add them to your cart go to the payment page checkout Thank You page and",
    "start": "1107700",
    "end": "1115200"
  },
  {
    "text": "then log out just an example we model the application traffic to each URI in",
    "start": "1115200",
    "end": "1123720"
  },
  {
    "text": "in order to determine that say when a large amount of requests are coming to",
    "start": "1123720",
    "end": "1130050"
  },
  {
    "text": "the login page compared to before it's likely there's a login attack either trying to deny logins by taking down the",
    "start": "1130050",
    "end": "1137820"
  },
  {
    "text": "login page or trying to brute force or credential stuff and expose one of one",
    "start": "1137820",
    "end": "1143100"
  },
  {
    "text": "of your users we also we profile on all",
    "start": "1143100",
    "end": "1149010"
  },
  {
    "text": "tops all kinds of attributes to get the top contributors and compare them from past times that had healthy status to",
    "start": "1149010",
    "end": "1156470"
  },
  {
    "text": "the current anomaly or the current attack time and try and figure out what's the one thing that's common about",
    "start": "1156470",
    "end": "1162840"
  },
  {
    "text": "all of the attack requests most of the time attackers even if they have a huge",
    "start": "1162840",
    "end": "1168570"
  },
  {
    "text": "variety of sources even from a variety of geographic regions there will be",
    "start": "1168570",
    "end": "1173670"
  },
  {
    "text": "something that's common the user agent might have a typo",
    "start": "1173670",
    "end": "1179820"
  },
  {
    "text": "they may be requesting the same exact URI over and over but there's there's a little attribute in there somewhere that",
    "start": "1179820",
    "end": "1185489"
  },
  {
    "text": "we can pick out and difference between a good period and a bad period to build a pattern and block it",
    "start": "1185489",
    "end": "1193940"
  },
  {
    "start": "1195000",
    "end": "1273000"
  },
  {
    "text": "so for route 53 and cloud front we have some always-on protections which is is",
    "start": "1199700",
    "end": "1205130"
  },
  {
    "text": "fantastic 169 edge locations around the world trying to get the lowest latency and",
    "start": "1205130",
    "end": "1211310"
  },
  {
    "text": "highest availability by 53 has an amazing SLA guarantee of 100% cloud",
    "start": "1211310",
    "end": "1218180"
  },
  {
    "text": "front is 99.9 I believe and to guarantee that availability across all of those",
    "start": "1218180",
    "end": "1224900"
  },
  {
    "text": "locations we are constantly validating protocol making sure that TCP connections are not",
    "start": "1224900",
    "end": "1231290"
  },
  {
    "text": "left half open no invalid HTTP requests no invalid DNS requests and just taking",
    "start": "1231290",
    "end": "1238400"
  },
  {
    "text": "advantage of these two services we'll get right in the door we'll get you these these protections in addition in",
    "start": "1238400",
    "end": "1247360"
  },
  {
    "text": "regions where we don't always have the scrubbers in line we'll take reaction so as mentioning before how to detect",
    "start": "1247360",
    "end": "1253910"
  },
  {
    "text": "when an event happens we put that at that scrubber in place then we're upgrading the connection tracking and",
    "start": "1253910",
    "end": "1260210"
  },
  {
    "text": "upgrading the network protection and protocol validations for these resources as well automatically for the",
    "start": "1260210",
    "end": "1270530"
  },
  {
    "text": "application level for a CloudFront application load balancer api gateway these are more of a suggestion that",
    "start": "1270530",
    "end": "1277630"
  },
  {
    "start": "1273000",
    "end": "1334000"
  },
  {
    "text": "investigation is required it's very difficult to set an automatic response",
    "start": "1277630",
    "end": "1283580"
  },
  {
    "text": "and say oh you have an HTTP flood what should i block maybe I shouldn't block",
    "start": "1283580",
    "end": "1289730"
  },
  {
    "text": "anything at all HBO goes live with Game of Thrones on Sunday night and there's a",
    "start": "1289730",
    "end": "1295130"
  },
  {
    "text": "huge spike of traffic but it's not a DDoS attack that's normal customer traffic so in this case we always just",
    "start": "1295130",
    "end": "1301310"
  },
  {
    "text": "send the notification just draw the attention here's a strange thing that's happening if it's bad to a deep dive in",
    "start": "1301310",
    "end": "1308240"
  },
  {
    "text": "logs and find what the attribute is if you're expecting it then no worries",
    "start": "1308240",
    "end": "1313210"
  },
  {
    "text": "and we're always on hand to help so call cloud support call ERT directly if your",
    "start": "1313970",
    "end": "1320450"
  },
  {
    "text": "shield advance customer that's the DDoS response team and will happily help you sort through the logs if the logs are",
    "start": "1320450",
    "end": "1327169"
  },
  {
    "text": "available hopefully so that's the if there's one thing you do enable logging",
    "start": "1327169",
    "end": "1333220"
  },
  {
    "start": "1334000",
    "end": "1342000"
  },
  {
    "text": "now let's talk about some of these insights have been mentioning and look at a few of them in detail so a lot of",
    "start": "1335919",
    "end": "1343789"
  },
  {
    "start": "1342000",
    "end": "1388000"
  },
  {
    "text": "these are available in the console in the API if you've subscribed to shield advanced you'll see a great amount of",
    "start": "1343789",
    "end": "1350629"
  },
  {
    "text": "detail of attack traffic and have it access to the global threat environment",
    "start": "1350629",
    "end": "1355669"
  },
  {
    "text": "dashboard with drill down views from two weeks down to a day and in addition",
    "start": "1355669",
    "end": "1361610"
  },
  {
    "text": "every quarter you'll get a security report describing what's going on with AWS and around the Internet and what can",
    "start": "1361610",
    "end": "1367639"
  },
  {
    "text": "you do to best protect in addition to shield advanced AWS laughs has some",
    "start": "1367639",
    "end": "1373309"
  },
  {
    "text": "insights built in that we'll look at and all of these are are backed by a cloud",
    "start": "1373309",
    "end": "1378320"
  },
  {
    "text": "watch metrics so even without shield advanced and wife you can still stuff",
    "start": "1378320",
    "end": "1383840"
  },
  {
    "text": "logs into cloud watch and and get some of these great insights so here's an",
    "start": "1383840",
    "end": "1390049"
  },
  {
    "start": "1388000",
    "end": "1474000"
  },
  {
    "text": "example the quote from the recent shield advanced quarterly report thank you being customer",
    "start": "1390049",
    "end": "1398440"
  },
  {
    "text": "the highlights from this one were for automatic DDoS protection we've got new well-formed HTTP request validation for",
    "start": "1398590",
    "end": "1405850"
  },
  {
    "text": "cloud fronts new reliable DNS requests validation for route 53 we've got some summaries of what",
    "start": "1405850",
    "end": "1412570"
  },
  {
    "text": "happened in the last quarter like in addition to the two data points I mentioned before about UDP and syn",
    "start": "1412570",
    "end": "1418210"
  },
  {
    "text": "floods we saw a total of 250 3,000 attacks in the last 90 days the largest",
    "start": "1418210",
    "end": "1425290"
  },
  {
    "text": "one I already mentioned those 760 2 gigabits for a UDP reflection or 260",
    "start": "1425290",
    "end": "1432130"
  },
  {
    "text": "million packets per second for syn flood and the last one was a 1 million",
    "start": "1432130",
    "end": "1438220"
  },
  {
    "text": "requests per second application flood",
    "start": "1438220",
    "end": "1442230"
  },
  {
    "text": "we'll also have some late-breaking news like recently we've released the new",
    "start": "1445080",
    "end": "1451149"
  },
  {
    "text": "vector of UDP reflection from ubiquity discovery service this security report",
    "start": "1451149",
    "end": "1457629"
  },
  {
    "text": "will talk about what's going on with that and how you're automatically protected and some cool stuff like a new",
    "start": "1457629",
    "end": "1463659"
  },
  {
    "text": "service integration with firewall manager so if your shield advance customer you can use firewall manager now to apply policy and have any new",
    "start": "1463659",
    "end": "1471159"
  },
  {
    "text": "resources automatically protected let's",
    "start": "1471159",
    "end": "1476409"
  },
  {
    "start": "1474000",
    "end": "1502000"
  },
  {
    "text": "start let's dive in deep on some of these global threat environment points as a shield advanced customer you can",
    "start": "1476409",
    "end": "1483220"
  },
  {
    "text": "come look at the console anytime click down here in global threat environment and you can see a picture of the world",
    "start": "1483220",
    "end": "1488950"
  },
  {
    "text": "and where tacks are happening mostly there in US but also in Central Europe",
    "start": "1488950",
    "end": "1495179"
  },
  {
    "text": "you can see a summary of what's been happening in the last day or up to two",
    "start": "1495179",
    "end": "1500230"
  },
  {
    "text": "weeks drilling on on the day what hours",
    "start": "1500230",
    "end": "1506200"
  },
  {
    "start": "1502000",
    "end": "1518000"
  },
  {
    "text": "are most common maybe lunch time is the most common who knows but from time to",
    "start": "1506200",
    "end": "1511629"
  },
  {
    "text": "time you come back to the threat environment dashboard and take a look at this graph and see what time of day attacks are happening and these are the",
    "start": "1511629",
    "end": "1521169"
  },
  {
    "text": "three got Network level in the middle we've got transport on the left and application level on the right over the",
    "start": "1521169",
    "end": "1530739"
  },
  {
    "text": "course of the last day there's been a steady stream of both Network and transport attacks application attacks",
    "start": "1530739",
    "end": "1537789"
  },
  {
    "text": "are more rare but there's been some some spikes so 60,000 requests per second",
    "start": "1537789",
    "end": "1543489"
  },
  {
    "text": "80,000 requests per second in bursts here and there",
    "start": "1543489",
    "end": "1548039"
  },
  {
    "start": "1547000",
    "end": "1597000"
  },
  {
    "text": "that was the threat environment so covering all of AWS in addition you can",
    "start": "1550580",
    "end": "1557120"
  },
  {
    "text": "drill into your own account and hopefully this is not you this is my account but if your account looks like",
    "start": "1557120",
    "end": "1562970"
  },
  {
    "text": "this you're having a bad day eight of your IPS are under attack you have distribution under attack and at the",
    "start": "1562970",
    "end": "1570020"
  },
  {
    "text": "very right in the last 24 hours there's been constant constant attacks now you",
    "start": "1570020",
    "end": "1578360"
  },
  {
    "text": "want take a picture go ahead so this will draw some attention you",
    "start": "1578360",
    "end": "1583520"
  },
  {
    "text": "know you can drill in on ongoing attacks click in see what the details of each event are and you can use the API as",
    "start": "1583520",
    "end": "1590600"
  },
  {
    "text": "well so I'll briefly talk about the API before we jump back into the console to show the detail of these attacks",
    "start": "1590600",
    "end": "1598270"
  },
  {
    "start": "1597000",
    "end": "1644000"
  },
  {
    "text": "Atos sdk it's pretty easy to to submit these requests shield list attacks i've",
    "start": "1598360",
    "end": "1605990"
  },
  {
    "text": "elided a lot but the one at the top was a UDP reflection and you can see what",
    "start": "1605990",
    "end": "1611000"
  },
  {
    "text": "resources under attack when did it start in UNIX epoch start and end and with",
    "start": "1611000",
    "end": "1616160"
  },
  {
    "text": "that attack ID you can go and get some more details so on the right what IP was under attack you'll see some counters",
    "start": "1616160",
    "end": "1622550"
  },
  {
    "text": "and vectors that were included this is just the the back end API view but you",
    "start": "1622550",
    "end": "1629930"
  },
  {
    "text": "might be able to use some scripting get an alert look at what the list the",
    "start": "1629930",
    "end": "1635630"
  },
  {
    "text": "attacks that are currently in progress get the detail of it and start from there to go on a log deep dive for that",
    "start": "1635630",
    "end": "1642380"
  },
  {
    "text": "particular resource here's what that looked like in the console each of these",
    "start": "1642380",
    "end": "1649940"
  },
  {
    "start": "1644000",
    "end": "1697000"
  },
  {
    "text": "resources the vector that was under attack you can click on each one of those vectors and see the CloudWatch metric behind it",
    "start": "1649940",
    "end": "1657580"
  },
  {
    "text": "and after clicking on one of those attacks here's this elastic IP had lots of reflection and get a graph over time",
    "start": "1659020",
    "end": "1666110"
  },
  {
    "text": "of how many packets were affected by this attack looks like a million packets",
    "start": "1666110",
    "end": "1672500"
  },
  {
    "text": "per second for a long period of time now",
    "start": "1672500",
    "end": "1678860"
  },
  {
    "text": "let's jump over at woth so say that the resource that was under attack was an application load balancer or a",
    "start": "1678860",
    "end": "1686000"
  },
  {
    "text": "CloudFront distribution wife we'll have additional details about the request volume in the last several minutes if",
    "start": "1686000",
    "end": "1694670"
  },
  {
    "text": "you scroll down a little bit behind below this graph they'll also be some additional logging options which we'll",
    "start": "1694670",
    "end": "1701270"
  },
  {
    "text": "come to in a moment so moral of story is",
    "start": "1701270",
    "end": "1707600"
  },
  {
    "text": "all these insights that we build are built into cloud watch you can easily attach an alarm and get notified by",
    "start": "1707600",
    "end": "1715010"
  },
  {
    "text": "paging or email or even enact a lambda function to go and pick up logs parse",
    "start": "1715010",
    "end": "1721610"
  },
  {
    "text": "them and and deliver some insight once",
    "start": "1721610",
    "end": "1728600"
  },
  {
    "text": "again the biggest thing you can do to start this project of DDoS protection is",
    "start": "1728600",
    "end": "1733610"
  },
  {
    "text": "getting logs before you're under attack even if you only send them to s3 they're",
    "start": "1733610",
    "end": "1739460"
  },
  {
    "text": "still there's Athena a great structured query language interface on top of that that you can use at the highest level",
    "start": "1739460",
    "end": "1747620"
  },
  {
    "text": "you can send them right to DRT during an event and in between there's automation that you can do engage a lambda parse",
    "start": "1747620",
    "end": "1754820"
  },
  {
    "text": "these logs there's other services that do constant curation like sending the logs into cloud watch will build",
    "start": "1754820",
    "end": "1762170"
  },
  {
    "text": "insights dynamically and at the worst just save them for a rainy day",
    "start": "1762170",
    "end": "1768760"
  },
  {
    "text": "at the at the end of the day you always contact the ddos response team as well",
    "start": "1769790",
    "end": "1775850"
  },
  {
    "text": "anytime you like not just when you're under attack to review your posture to help plan a",
    "start": "1775850",
    "end": "1781400"
  },
  {
    "text": "response to run a game day to practice reaction so use this resource to improve",
    "start": "1781400",
    "end": "1788390"
  },
  {
    "text": "your you know feeling about DDoS before before you get attacks so this one here",
    "start": "1788390",
    "end": "1798230"
  },
  {
    "start": "1795000",
    "end": "1829000"
  },
  {
    "text": "this cloud metric is the backbone of shield it just says for each particular",
    "start": "1798230",
    "end": "1803960"
  },
  {
    "text": "resource whether we determined it was or wasn't under attack",
    "start": "1803960",
    "end": "1809320"
  },
  {
    "text": "we often attach this metric to an alarm and when those alarms go into error then",
    "start": "1809320",
    "end": "1817700"
  },
  {
    "text": "send a notification to SNS get an email get a page or also send them to send",
    "start": "1817700",
    "end": "1823640"
  },
  {
    "text": "them to a lambda function to take reaction",
    "start": "1823640",
    "end": "1827260"
  },
  {
    "start": "1829000",
    "end": "1837000"
  },
  {
    "text": "so why plan for ddos it's a shared",
    "start": "1832440",
    "end": "1838770"
  },
  {
    "start": "1837000",
    "end": "2036000"
  },
  {
    "text": "responsibility AWS covers a lot of it and you cover a lot of it and we meet",
    "start": "1838770",
    "end": "1843990"
  },
  {
    "text": "somewhere in the middle so there's network which you have little control over but we do a great job of protecting",
    "start": "1843990",
    "end": "1850170"
  },
  {
    "text": "all of our network assets these are shared assets among all of all the customers and ourselves so it's in",
    "start": "1850170",
    "end": "1856650"
  },
  {
    "text": "everyone's best interest that we build the best protections from the ground up",
    "start": "1856650",
    "end": "1861890"
  },
  {
    "text": "the higher that we get into the stack the more variation there is in customer resource that's more difficult to make",
    "start": "1861890",
    "end": "1867780"
  },
  {
    "text": "automated widespread automation but each customer can definitely know their own",
    "start": "1867780",
    "end": "1875160"
  },
  {
    "text": "logs know their own traffic and build a automated response to go in in tandem",
    "start": "1875160",
    "end": "1880410"
  },
  {
    "text": "with an attack notification remember to",
    "start": "1880410",
    "end": "1887190"
  },
  {
    "text": "architect from the beginning with security in mind and with availability in mind not just as an afterthought so",
    "start": "1887190",
    "end": "1894830"
  },
  {
    "text": "don't forget that you've hard-coded an instance size and type in in some little",
    "start": "1895160",
    "end": "1901500"
  },
  {
    "text": "page somewhere try to make that really easy to modify so that when you do come",
    "start": "1901500",
    "end": "1908460"
  },
  {
    "text": "under attack you're not in a rush to figure out what is it that I have to have to change all those scale factors",
    "start": "1908460",
    "end": "1915060"
  },
  {
    "text": "are really easily accessible at the top best you can do is use load balancers that themselves have scaling built in",
    "start": "1915060",
    "end": "1922070"
  },
  {
    "text": "but even if you're using ec2 instances or other statically allocated resources",
    "start": "1922070",
    "end": "1927440"
  },
  {
    "text": "user CloudFormation template have variables that are easily changeable and",
    "start": "1927440",
    "end": "1934770"
  },
  {
    "text": "of course your engineers are going to be your operators are going to be sleepy when they're under attack you'll",
    "start": "1934770",
    "end": "1939840"
  },
  {
    "text": "probably be 3:00 a.m. so document the plan so it's easy to understand",
    "start": "1939840",
    "end": "1946460"
  },
  {
    "text": "on top of the automatic notification and responds proactively collecting logs is",
    "start": "1948460",
    "end": "1954740"
  },
  {
    "text": "the first step take a look at the logs dive into them see what is jumping out",
    "start": "1954740",
    "end": "1962000"
  },
  {
    "text": "at you and you'll be able to build your own profile like we do for Network level",
    "start": "1962000",
    "end": "1969050"
  },
  {
    "text": "but build those profiles for application level as well so you've got an understanding of what types of user",
    "start": "1969050",
    "end": "1974960"
  },
  {
    "text": "agents are hitting your your sites your application what geographic areas from time to time",
    "start": "1974960",
    "end": "1980480"
  },
  {
    "text": "are hitting and whether they're changing and what we do like take an example from",
    "start": "1980480",
    "end": "1988340"
  },
  {
    "text": "how we do it on the network and transport level by pre calculating those profiles and having them ready you may",
    "start": "1988340",
    "end": "1993950"
  },
  {
    "text": "not even have to store logs for a long period of time but if you take logs and collect all the you are eyes aggregate",
    "start": "1993950",
    "end": "2001450"
  },
  {
    "text": "to the top 10 collect all of the user agents all the geographic regions that",
    "start": "2001450",
    "end": "2006970"
  },
  {
    "text": "are and any other HTTP attributes that you feel like and get a profile of those",
    "start": "2006970",
    "end": "2013480"
  },
  {
    "text": "so that you can refer back to it at a later time and find what is the difference what's the what's the anomaly",
    "start": "2013480",
    "end": "2019480"
  },
  {
    "text": "and when you go to the shield console there's an easy button to enable DRT to",
    "start": "2019480",
    "end": "2027190"
  },
  {
    "text": "access your account and your logs if you'd like them to to be able to do that",
    "start": "2027190",
    "end": "2032440"
  },
  {
    "text": "for you so I promised before we look at some of",
    "start": "2032440",
    "end": "2039700"
  },
  {
    "start": "2036000",
    "end": "2129000"
  },
  {
    "text": "the vlogging options here's the wife console right below the requests per",
    "start": "2039700",
    "end": "2047350"
  },
  {
    "text": "second graph just scrolling down a little bit there's sampled requests so any any time",
    "start": "2047350",
    "end": "2052510"
  },
  {
    "text": "you can go here get some new samples and look at what IPS what you are I and",
    "start": "2052510",
    "end": "2058500"
  },
  {
    "text": "drilling in you'll also see some of the top HTTP attributes like header like user agent this is also available in the",
    "start": "2058500",
    "end": "2067658"
  },
  {
    "text": "API so you get under attack and you can automate using using some scripting atreus Aveda breasts sdk in this example",
    "start": "2067659",
    "end": "2076300"
  },
  {
    "text": "I've taken a step backwards and started from listing to web ackles and the rules you'll need the ID of each of these to",
    "start": "2076300",
    "end": "2083378"
  },
  {
    "text": "build a sample requests call but then once you look for sampled requests you",
    "start": "2083379",
    "end": "2091720"
  },
  {
    "text": "can see over here this particular request came from Brazil is to this URI here handful the headers except except",
    "start": "2091720",
    "end": "2098650"
  },
  {
    "text": "encoding the particular user agent and all the sample blogs will look like this especially take note of the the weight",
    "start": "2098650",
    "end": "2106060"
  },
  {
    "text": "at the bottom because they're sampled that weight will tell you this represents three requests or this",
    "start": "2106060",
    "end": "2112900"
  },
  {
    "text": "represents 40 requests and use that for aggregating later so if you take out the URI and start building a top your I list",
    "start": "2112900",
    "end": "2119530"
  },
  {
    "text": "use the weight as the key value to tell",
    "start": "2119530",
    "end": "2124930"
  },
  {
    "text": "which ones are more or less common",
    "start": "2124930",
    "end": "2128760"
  },
  {
    "start": "2129000",
    "end": "2163000"
  },
  {
    "text": "you can also enable full logging so if you start clicking here",
    "start": "2130170",
    "end": "2135810"
  },
  {
    "text": "it'll drill into how to enable logs you'll need Kinesis fire hose and then",
    "start": "2135810",
    "end": "2141270"
  },
  {
    "text": "already set up to send those logs to wherever you need them to be as we're mentioning before send them right to s 3",
    "start": "2141270",
    "end": "2147660"
  },
  {
    "text": "and you can use them for a rainy day or send them to a Kinesis data stream send",
    "start": "2147660",
    "end": "2153900"
  },
  {
    "text": "them to a lambda function send them to cloud watch insights this is where you",
    "start": "2153900",
    "end": "2158910"
  },
  {
    "text": "could set up where those logs go",
    "start": "2158910",
    "end": "2162440"
  },
  {
    "text": "so here's an example of how to set up that that cloud watch alarm just look under DDoS protection look for DDoS",
    "start": "2168570",
    "end": "2176200"
  },
  {
    "text": "detected on any particular resource they are in and when it's one alarm trigger",
    "start": "2176200",
    "end": "2184570"
  },
  {
    "text": "that lambda function that will go back and look over the s3 bucket with the logs in it and pull out the top URIs put",
    "start": "2184570",
    "end": "2192070"
  },
  {
    "text": "those you are eyes into an email and send it to your operator or in the worst",
    "start": "2192070",
    "end": "2197710"
  },
  {
    "text": "case wake somebody up I need help and get it get them paying attention to it",
    "start": "2197710",
    "end": "2203830"
  },
  {
    "text": "even if we don't know what the right action is immediately to start looking at those logs and creating a response",
    "start": "2203830",
    "end": "2211950"
  },
  {
    "start": "2214000",
    "end": "2258000"
  },
  {
    "text": "this relies on on SNS which is very dynamic so using SNS you can send them to an",
    "start": "2220640",
    "end": "2226940"
  },
  {
    "text": "email to a pager or you can send them right to anything that consume SNS like",
    "start": "2226940",
    "end": "2231980"
  },
  {
    "text": "sqs to dynamically operate on this notification that SNS may for example",
    "start": "2231980",
    "end": "2238880"
  },
  {
    "text": "trigger a lambda function or you may have a lambda step function that's periodically going over the logs every",
    "start": "2238880",
    "end": "2245120"
  },
  {
    "text": "five minutes or say and this is the backbone of notification so get familiar",
    "start": "2245120",
    "end": "2251810"
  },
  {
    "text": "with with SNS and and cloud watch alarms",
    "start": "2251810",
    "end": "2256480"
  },
  {
    "start": "2258000",
    "end": "2295000"
  },
  {
    "text": "and if all else fails you can call for",
    "start": "2258460",
    "end": "2263660"
  },
  {
    "text": "help so get those logs ready call cloud support or call the US response team and",
    "start": "2263660",
    "end": "2273580"
  },
  {
    "text": "you can also get an IOT button hit the button call this lambda function on this",
    "start": "2274000",
    "end": "2281300"
  },
  {
    "text": "website here shield engagement lambda and DRT will call you right back",
    "start": "2281300",
    "end": "2287500"
  },
  {
    "start": "2295000",
    "end": "2407000"
  },
  {
    "text": "so remember if you take away one thing it's logging if you take away two things",
    "start": "2298170",
    "end": "2305430"
  },
  {
    "text": "it's look at those logs look at them proactively build a profile of your",
    "start": "2305430",
    "end": "2314039"
  },
  {
    "text": "application that's what we do on the backend for Network and transport layer",
    "start": "2314039",
    "end": "2319289"
  },
  {
    "text": "all the time and that's what we're starting to build for application layer",
    "start": "2319289",
    "end": "2324450"
  },
  {
    "text": "attacks you have flow logs you yourself",
    "start": "2324450",
    "end": "2329789"
  },
  {
    "text": "can get flow logs from VPC even yesterday at the keynote was mentioned BPC flow mirroring new feature that will",
    "start": "2329789",
    "end": "2337349"
  },
  {
    "text": "give in time copy of every packet or a filter set of packets from a particular",
    "start": "2337349",
    "end": "2343710"
  },
  {
    "text": "Eni so in addition to flow logs flow mirroring on ec2 instances look at that",
    "start": "2343710",
    "end": "2350670"
  },
  {
    "text": "health status enable the detailed monitoring so you can get one step deeper into bandwidth and and CPU and",
    "start": "2350670",
    "end": "2357990"
  },
  {
    "text": "memory utilization and if you're running a particular application on this host do",
    "start": "2357990",
    "end": "2363779"
  },
  {
    "text": "something with your own logs will never do something with your logs on an",
    "start": "2363779",
    "end": "2368940"
  },
  {
    "text": "instance but you can create you can build profiles of what's happening in",
    "start": "2368940",
    "end": "2374640"
  },
  {
    "text": "your logs and use them to help us react in the future for refugee 3 we're",
    "start": "2374640",
    "end": "2382470"
  },
  {
    "text": "logging goes right to cloud watch for load balancers put them into s3 and use",
    "start": "2382470",
    "end": "2388259"
  },
  {
    "text": "athena and for a particular application load balancers or any other HTTP use",
    "start": "2388259",
    "end": "2395160"
  },
  {
    "text": "laugh or get the logs directly from them logs",
    "start": "2395160",
    "end": "2400890"
  },
  {
    "text": "did I say logs",
    "start": "2400890",
    "end": "2403818"
  },
  {
    "start": "2407000",
    "end": "2427000"
  },
  {
    "text": "all right thanks for coming I was John",
    "start": "2408490",
    "end": "2415580"
  },
  {
    "text": "please remember to fill out a session survey on your mobile app before you go and have a great morning",
    "start": "2420240",
    "end": "2426740"
  }
]