[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "Welcome to another episode of\n 'This is My Architecture'.",
    "start": "6828",
    "end": "10344"
  },
  {
    "text": "I'm Aarthi, \nand joining me today is John, \nfrom Nasuni.",
    "start": "10344",
    "end": "14396"
  },
  {
    "text": "John, thank you for joining us today.",
    "start": "14396",
    "end": "16589"
  },
  {
    "text": "Thank you, thank you for having me.",
    "start": "16589",
    "end": "18034"
  },
  {
    "text": "John, tell us what Nasuni does.",
    "start": "18034",
    "end": "20028"
  },
  {
    "text": "So, Nasuni creates a global file infrastructure \nfor enterprise customers.",
    "start": "20028",
    "end": "23233"
  },
  {
    "text": "We have a massively scalable file system \nthat's automatically versioned",
    "start": "23233",
    "end": "27829"
  },
  {
    "text": "and available anywhere \nthrough our Edge Appliances. ",
    "start": "27829",
    "end": "30133"
  },
  {
    "text": "So that means that you can access \nthe same file from basically any point",
    "start": "30696",
    "end": "34961"
  },
  {
    "text": "where you can put an Edge Appliance, \nthroughout the globe.",
    "start": "34962",
    "end": "37123"
  },
  {
    "text": "So accessing files from anywhere, what were the\n challenges in building this architecture?",
    "start": "37123",
    "end": "41689"
  },
  {
    "start": "38000",
    "end": "89000"
  },
  {
    "text": "Well the biggest challenge is making sure \nthat you don't overwrite data",
    "start": "41689",
    "end": "45638"
  },
  {
    "text": "when you're writing on top of a file.",
    "start": "45638",
    "end": "46996"
  },
  {
    "text": "So, it's commonly talked about as the consistency \nchallenge or a lock challenge.",
    "start": "46996",
    "end": "51153"
  },
  {
    "text": "So, the problem is, I can access my file \nsystem from these Edge Appliances,",
    "start": "51153",
    "end": "57110"
  },
  {
    "text": "Edge Appliances can live anywhere, \nthey could be in the EC2 region,",
    "start": "57110",
    "end": "60279"
  },
  {
    "text": "they can be an outpost, but if \nI'm going to open up a file",
    "start": "60279",
    "end": "63812"
  },
  {
    "text": "I have to make sure that if \nI open up that file, let's say,",
    "start": "64679",
    "end": "68288"
  },
  {
    "text": "I've got Aarthi opening up that file, that no one \nelse can open up that file as well.",
    "start": "68288",
    "end": "73047"
  },
  {
    "text": "And it's really easy if we're\n talking about one appliance.",
    "start": "73047",
    "end": "75635"
  },
  {
    "text": "But once you're talking about multiple \nappliances accessing the same file,",
    "start": "75636",
    "end": "79912"
  },
  {
    "text": "how is it that when I open up that file someone \nelse isn't going to open up that file?",
    "start": "79912",
    "end": "83131"
  },
  {
    "text": "So, that's called a global file locking problem, \nso we create a global file locking infrastructure for that.",
    "start": "83131",
    "end": "88812"
  },
  {
    "text": "So how do you solve for it? \nLike, where does this logic lie",
    "start": "88813",
    "end": "91604"
  },
  {
    "start": "89000",
    "end": "144000"
  },
  {
    "text": "of how you lock these files?",
    "start": "91604",
    "end": "93464"
  },
  {
    "text": "Well, our innovation was, we said, the lock \ninformation can't just live here on the appliance,",
    "start": "93685",
    "end": "98466"
  },
  {
    "text": "it's got to be a global service, because \nyour appliances can be anywhere,",
    "start": "98467",
    "end": "101724"
  },
  {
    "text": "which means that your lock\n should be also anywhere.",
    "start": "101724",
    "end": "104644"
  },
  {
    "text": "So we create a global file lock service, \nand we put it inside of a region.",
    "start": "104644",
    "end": "108621"
  },
  {
    "text": "And so, now when you open up a file and \nan appliance, first thing that the file does is",
    "start": "108622",
    "end": "112755"
  },
  {
    "text": "it says: hey, I need to check to see whether  or not anyone else has that file locked or not.",
    "start": "112755",
    "end": "117603"
  },
  {
    "text": "And it does so by accessing this service, then there's\nsome logic that looks for the name of the file,",
    "start": "117603",
    "end": "123618"
  },
  {
    "text": "and then we look in a record \nand a DynamoDB database to say:",
    "start": "123619",
    "end": "128044"
  },
  {
    "text": "hey, is there a lock set on here \nor is there not a lock set on here?",
    "start": "128044",
    "end": "131414"
  },
  {
    "text": "And the challenge here is, you're waiting, \nyou as a user are waiting to open that file,",
    "start": "131414",
    "end": "135539"
  },
  {
    "text": "so this has to be super, super low latency.",
    "start": "135539",
    "end": "137738"
  },
  {
    "text": "That's why we use Dynamo: super low latency, incredibly\n scalable, really fast so you can open these files very quickly.",
    "start": "137738",
    "end": "144155"
  },
  {
    "start": "144000",
    "end": "191000"
  },
  {
    "text": "Got it. So, as a user you've got that Dynamo that's helping you\n with the low latency side of things, right?",
    "start": "144155",
    "end": "150574"
  },
  {
    "text": "You mentioned this is a global architecture, \nso, how do you achieve this global architecture?",
    "start": "150574",
    "end": "155809"
  },
  {
    "text": "Well, we realized that one \nof the other big problems is,",
    "start": "155809",
    "end": "158453"
  },
  {
    "text": "if we tell everyone to go back to one region \nfor the global file lock service,",
    "start": "158453",
    "end": "161820"
  },
  {
    "text": "the latency is going to get really, really high.",
    "start": "161820",
    "end": "163583"
  },
  {
    "text": "So, if I've got an appliance that's in Texas, and I've got \nanother appliance that has my outpost in Singapore,",
    "start": "163583",
    "end": "170762"
  },
  {
    "text": "if Singapore is always contacting U.S. East, \nthat's way, way too long.",
    "start": "170763",
    "end": "174817"
  },
  {
    "text": "So what we said was, we're going to have to \ncome up with a second region.",
    "start": "174817",
    "end": "178294"
  },
  {
    "text": "And so, we did this, and we said: we're going to \ncome up with another region in which",
    "start": "178734",
    "end": "182187"
  },
  {
    "text": "you have a global file lock service available, \nso that you can very quickly access",
    "start": "182188",
    "end": "186852"
  },
  {
    "text": "the same stack, but in \na location that's closer to you.",
    "start": "186852",
    "end": "190243"
  },
  {
    "text": "Got it. So how do you achieve consistency \nnow, when you have two regions?",
    "start": "190243",
    "end": "194215"
  },
  {
    "start": "191000",
    "end": "305000"
  },
  {
    "text": "Well, before, we actually did this,\n we built this six years ago",
    "start": "194215",
    "end": "198109"
  },
  {
    "text": "and DynamoDB at that time did not have \nglobal table, so we wrote this Lambda function",
    "start": "198109",
    "end": "202616"
  },
  {
    "text": "along with Kinesis and some other stuff, \nand basically it was making sure",
    "start": "202616",
    "end": "206466"
  },
  {
    "text": "there was consistency \nbetween multiple region tables.",
    "start": "206466",
    "end": "209263"
  },
  {
    "text": "And then, once global tables came out, we said:",
    "start": "210153",
    "end": "212320"
  },
  {
    "text": "OK, this is great, Dynamo is going to take care of this part,\n Dynamo is going to make sure that that goes back and forth.",
    "start": "212320",
    "end": "217605"
  },
  {
    "text": "And we said, you know, the way to maintain \nconsistency really should be at DNS.",
    "start": "217605",
    "end": "223431"
  },
  {
    "text": "So now, the appliance goes\n directly here at DNS and says:",
    "start": "223431",
    "end": "226949"
  },
  {
    "text": "hey, Route 53, I'm trying to\n access the U.S. East log service,",
    "start": "226949",
    "end": "231217"
  },
  {
    "text": "U.S. East is paired with U.S. West, so \nU.S. East will say, OK, U.S. East is here.",
    "start": "231217",
    "end": "235368"
  },
  {
    "text": "If something goes wrong, Route 53, because \nit's got its own mechanisms ",
    "start": "235368",
    "end": "238916"
  },
  {
    "text": "to determine availability, it's going to tell us whether or not\n any part of this stack, including EC2 or Dynamo, is down.",
    "start": "238916",
    "end": "245363"
  },
  {
    "text": "Now Route 53 can do its active-passive failover, \nin this case it'll be to U.S. West.",
    "start": "245363",
    "end": "249817"
  },
  {
    "text": "But what our Lambda does, we do something \na little bit extra here, we say:",
    "start": "250610",
    "end": "253157"
  },
  {
    "text": "OK, once I realize there's a problem here, I've got a TTL\n one to actually move everything over,",
    "start": "253157",
    "end": "258387"
  },
  {
    "text": "I know there's some lag in consistency \nof the Dynamo database,",
    "start": "258387",
    "end": "262117"
  },
  {
    "text": "Lambda here is going to \ntell this ELB right away:",
    "start": "262117",
    "end": "265589"
  },
  {
    "text": "Hey, start rejecting requests.",
    "start": "265589",
    "end": "267354"
  },
  {
    "text": "This appliance knows that if I get a 503 back, \nI'm just going to keep redoing requests",
    "start": "267355",
    "end": "272148"
  },
  {
    "text": "for a period of time, so I can make sure \neverything gets transferred over. ",
    "start": "272148",
    "end": "275337"
  },
  {
    "text": "So this Lambda here is basically telling \nthis service to stop taking requests,",
    "start": "275337",
    "end": "280333"
  },
  {
    "text": "waits until Dynamo says, hey, I'm all set, \nwaits for Route 53 to say it's failed everything over,",
    "start": "280333",
    "end": "287402"
  },
  {
    "text": "and then everything can be \non this other region here.",
    "start": "287402",
    "end": "289734"
  },
  {
    "text": "Got it, so you are basically using Lambda to \ntrigger these functions that say:",
    "start": "289734",
    "end": "293730"
  },
  {
    "text": "hey, I've got consistency achieved, \nfailover to the other region now. ",
    "start": "293730",
    "end": "297336"
  },
  {
    "text": "It's like an extra level of regional failover, on top of some \nreally great multi-regional availability options.",
    "start": "297336",
    "end": "305001"
  },
  {
    "start": "305000",
    "end": "341000"
  },
  {
    "text": "And what scale are we talking here in terms \nof the file lock architecture?",
    "start": "305001",
    "end": "308585"
  },
  {
    "text": "Last year we did 31-32 billion requests,",
    "start": "308585",
    "end": "312667"
  },
  {
    "text": "at the most we do probably close to \nabout 2000 requests per second.",
    "start": "313453",
    "end": "317071"
  },
  {
    "text": "That's growing at, we're doubling\n about every 12 to 18 months.",
    "start": "317071",
    "end": "320879"
  },
  {
    "text": "So we're always preparing for each of these \nregions to be about twice as much ",
    "start": "320879",
    "end": "325632"
  },
  {
    "text": "as they will be in about 18 months.",
    "start": "325632",
    "end": "327741"
  },
  {
    "text": "And in terms of latency, we're shooting for 40-50-60 \nmilliseconds for this entire transaction to happen.",
    "start": "328484",
    "end": "335224"
  },
  {
    "text": "So everything here has to be fast, and this point, \nagain, has to be as close as possible. ",
    "start": "335224",
    "end": "340522"
  },
  {
    "text": "Got it. Thank you, John, that's impressive scale \nand you've also achieved for that ",
    "start": "340522",
    "end": "344438"
  },
  {
    "start": "341000",
    "end": "362000"
  },
  {
    "text": "lesser latency that's required, that is typically \na challenge for this kind of architecture.",
    "start": "344438",
    "end": "348981"
  },
  {
    "text": "Thank you for sharing this architecture with us",
    "start": "349404",
    "end": "351543"
  },
  {
    "text": "and thank you for joining us \nin 'This is My Architecture'.",
    "start": "351543",
    "end": "354741"
  },
  {
    "text": "See you soon.",
    "start": "354741",
    "end": "356031"
  },
  {
    "text": "Thank you for watching",
    "start": "357120",
    "end": "359267"
  }
]