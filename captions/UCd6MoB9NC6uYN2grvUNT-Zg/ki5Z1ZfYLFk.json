[
  {
    "text": "hi my name is Andrew wing and I'm a",
    "start": "5400",
    "end": "7040"
  },
  {
    "text": "Solutions architect here at AWS today",
    "start": "7040",
    "end": "10000"
  },
  {
    "text": "I'm going to be talking about the limits",
    "start": "10000",
    "end": "11400"
  },
  {
    "text": "you may run into when using the local",
    "start": "11400",
    "end": "13559"
  },
  {
    "text": "secondary index or OSI on Dynamo",
    "start": "13559",
    "end": "18760"
  },
  {
    "text": "DB as you already know Amazon Dynamo DB",
    "start": "20160",
    "end": "23039"
  },
  {
    "text": "is a serverless nosql database with",
    "start": "23039",
    "end": "25199"
  },
  {
    "text": "single digit millisecond latency D",
    "start": "25199",
    "end": "28080"
  },
  {
    "text": "provides fast access to items in theable",
    "start": "28080",
    "end": "30560"
  },
  {
    "text": "by use specifying their primary key",
    "start": "30560",
    "end": "32360"
  },
  {
    "text": "values at the time of the query however",
    "start": "32360",
    "end": "35040"
  },
  {
    "text": "many application often require one or",
    "start": "35040",
    "end": "37040"
  },
  {
    "text": "more access pattern that database need",
    "start": "37040",
    "end": "39040"
  },
  {
    "text": "to support So to allow efficient access",
    "start": "39040",
    "end": "41600"
  },
  {
    "text": "to these attributes other than the",
    "start": "41600",
    "end": "43280"
  },
  {
    "text": "primary Keys we have the secondary index",
    "start": "43280",
    "end": "46199"
  },
  {
    "text": "a secondary index is a data structure",
    "start": "46199",
    "end": "48600"
  },
  {
    "text": "that contains a subset of attributes",
    "start": "48600",
    "end": "50440"
  },
  {
    "text": "from the from a table thatb supports two",
    "start": "50440",
    "end": "53320"
  },
  {
    "text": "types of secondary index the global",
    "start": "53320",
    "end": "55160"
  },
  {
    "text": "secondary index and the local secondary",
    "start": "55160",
    "end": "57440"
  },
  {
    "text": "index you can issue query or scan the",
    "start": "57440",
    "end": "60000"
  },
  {
    "text": "request against these indexes check out",
    "start": "60000",
    "end": "61960"
  },
  {
    "text": "our Dan DB nuggets video on choosing the",
    "start": "61960",
    "end": "64320"
  },
  {
    "text": "right secondary index to use in today's",
    "start": "64320",
    "end": "66799"
  },
  {
    "text": "video though we're going to focus on the",
    "start": "66799",
    "end": "68560"
  },
  {
    "text": "local secondary index and the limits",
    "start": "68560",
    "end": "70560"
  },
  {
    "text": "that you may run into when you're",
    "start": "70560",
    "end": "72040"
  },
  {
    "text": "designing a table with OSI so a quick",
    "start": "72040",
    "end": "75000"
  },
  {
    "text": "recap on what is an LSI an LSI or local",
    "start": "75000",
    "end": "78479"
  },
  {
    "text": "secondary index essentially is an index",
    "start": "78479",
    "end": "81479"
  },
  {
    "text": "with the same partition key as the base",
    "start": "81479",
    "end": "83240"
  },
  {
    "text": "table but with a different attribute as",
    "start": "83240",
    "end": "85439"
  },
  {
    "text": "a sort key so imagine having a table for",
    "start": "85439",
    "end": "88200"
  },
  {
    "text": "an e-commerce application that tracks a",
    "start": "88200",
    "end": "90720"
  },
  {
    "text": "different order coming in you have a",
    "start": "90720",
    "end": "93119"
  },
  {
    "text": "primary key of order ID and a sore key",
    "start": "93119",
    "end": "95960"
  },
  {
    "text": "of order date to quy orders by customer",
    "start": "95960",
    "end": "98960"
  },
  {
    "text": "sorted by time so let's now take a look",
    "start": "98960",
    "end": "101320"
  },
  {
    "text": "at a sample table here we have the base",
    "start": "101320",
    "end": "104000"
  },
  {
    "text": "table with the access pattern of order",
    "start": "104000",
    "end": "106240"
  },
  {
    "text": "by order date however maybe you also",
    "start": "106240",
    "end": "108880"
  },
  {
    "text": "want to understand customer orders by",
    "start": "108880",
    "end": "110600"
  },
  {
    "text": "product category or by the order amount",
    "start": "110600",
    "end": "113200"
  },
  {
    "text": "so you can create an LSI in this case to",
    "start": "113200",
    "end": "115360"
  },
  {
    "text": "quy the order ID partition key and",
    "start": "115360",
    "end": "117399"
  },
  {
    "text": "further narrow down the results of the",
    "start": "117399",
    "end": "119240"
  },
  {
    "text": "product category",
    "start": "119240",
    "end": "120479"
  },
  {
    "text": "so one key thing to remember if you're",
    "start": "120479",
    "end": "122200"
  },
  {
    "text": "looking to utilize an LSI is that you",
    "start": "122200",
    "end": "124280"
  },
  {
    "text": "must create your LSI at time of table",
    "start": "124280",
    "end": "127840"
  },
  {
    "text": "creation now let's take a look at how we",
    "start": "127840",
    "end": "130039"
  },
  {
    "text": "can create an LSI there are three",
    "start": "130039",
    "end": "132480"
  },
  {
    "text": "different ways you can create an LSI you",
    "start": "132480",
    "end": "134680"
  },
  {
    "text": "can use the AWS console the AWS CLI or",
    "start": "134680",
    "end": "137959"
  },
  {
    "text": "the AWS",
    "start": "137959",
    "end": "139879"
  },
  {
    "text": "SDK I'll do a quick demo here do the AWS",
    "start": "139879",
    "end": "143040"
  },
  {
    "text": "console here in the console we can click",
    "start": "143040",
    "end": "145519"
  },
  {
    "text": "on the create table button and it will",
    "start": "145519",
    "end": "147200"
  },
  {
    "text": "take us through the",
    "start": "147200",
    "end": "148599"
  },
  {
    "text": "configuration let's give the table name",
    "start": "148599",
    "end": "151040"
  },
  {
    "text": "of",
    "start": "151040",
    "end": "151959"
  },
  {
    "text": "orders with a primary key of order",
    "start": "151959",
    "end": "155720"
  },
  {
    "text": "ID and a sore key of order",
    "start": "155720",
    "end": "159920"
  },
  {
    "text": "date then to add a secondary index",
    "start": "159920",
    "end": "163040"
  },
  {
    "text": "you'll want to use the customize",
    "start": "163040",
    "end": "164360"
  },
  {
    "text": "settings option we'll keep the capacity",
    "start": "164360",
    "end": "167040"
  },
  {
    "text": "setting to the default values but you",
    "start": "167040",
    "end": "169400"
  },
  {
    "text": "see here under the secondary index",
    "start": "169400",
    "end": "171159"
  },
  {
    "text": "section you can create a local index and",
    "start": "171159",
    "end": "174080"
  },
  {
    "text": "a global index to create a new local",
    "start": "174080",
    "end": "176840"
  },
  {
    "text": "secondary index you'll click on the",
    "start": "176840",
    "end": "178720"
  },
  {
    "text": "create local index button button the",
    "start": "178720",
    "end": "180920"
  },
  {
    "text": "first thing you'll need to put in is",
    "start": "180920",
    "end": "182640"
  },
  {
    "text": "alternative store key to your base table",
    "start": "182640",
    "end": "185239"
  },
  {
    "text": "for this new index I'm going to use the",
    "start": "185239",
    "end": "187360"
  },
  {
    "text": "order status attribute as my new sore",
    "start": "187360",
    "end": "190040"
  },
  {
    "text": "key then you can also customize your",
    "start": "190040",
    "end": "192799"
  },
  {
    "text": "index name here I'm going to leave it",
    "start": "192799",
    "end": "194680"
  },
  {
    "text": "just as the order status",
    "start": "194680",
    "end": "196879"
  },
  {
    "text": "index then the last thing you can",
    "start": "196879",
    "end": "199080"
  },
  {
    "text": "customize is your attribute projection",
    "start": "199080",
    "end": "201599"
  },
  {
    "text": "you have three different options when it",
    "start": "201599",
    "end": "203280"
  },
  {
    "text": "comes to attribute projection first is",
    "start": "203280",
    "end": "205959"
  },
  {
    "text": "the all projection that means you're",
    "start": "205959",
    "end": "207920"
  },
  {
    "text": "going to project all the table",
    "start": "207920",
    "end": "209280"
  },
  {
    "text": "attributes onto the index then you have",
    "start": "209280",
    "end": "212159"
  },
  {
    "text": "the only Keys option this option only",
    "start": "212159",
    "end": "214879"
  },
  {
    "text": "project the index and the primary Keys",
    "start": "214879",
    "end": "217360"
  },
  {
    "text": "onto the index lastly you have the",
    "start": "217360",
    "end": "220000"
  },
  {
    "text": "include option which will project all",
    "start": "220000",
    "end": "222200"
  },
  {
    "text": "attribute described in only keys and",
    "start": "222200",
    "end": "224400"
  },
  {
    "text": "other non-key attribute that you specify",
    "start": "224400",
    "end": "226760"
  },
  {
    "text": "once you have selected your settings",
    "start": "226760",
    "end": "228360"
  },
  {
    "text": "here I'm going to keep it to all for my",
    "start": "228360",
    "end": "230200"
  },
  {
    "text": "attribute projection you can hit the",
    "start": "230200",
    "end": "231799"
  },
  {
    "text": "create index button you can see now the",
    "start": "231799",
    "end": "234079"
  },
  {
    "text": "order status index is now created with",
    "start": "234079",
    "end": "237400"
  },
  {
    "text": "the type local to signify that it's a",
    "start": "237400",
    "end": "240159"
  },
  {
    "text": "local secondary",
    "start": "240159",
    "end": "241560"
  },
  {
    "text": "index here comes the first limit that",
    "start": "241560",
    "end": "244439"
  },
  {
    "text": "you need to be aware of if you want to",
    "start": "244439",
    "end": "246519"
  },
  {
    "text": "use LSI with your Dynamo DB",
    "start": "246519",
    "end": "249840"
  },
  {
    "text": "tables L is that you only have a maximum",
    "start": "249840",
    "end": "253480"
  },
  {
    "text": "of five local secondary indexes per DB",
    "start": "253480",
    "end": "257759"
  },
  {
    "text": "table I'm going to create five Lis here",
    "start": "257759",
    "end": "261120"
  },
  {
    "text": "for this",
    "start": "261120",
    "end": "263560"
  },
  {
    "text": "demo now you see that I have created",
    "start": "266280",
    "end": "269120"
  },
  {
    "text": "five different local secondary indexes",
    "start": "269120",
    "end": "271400"
  },
  {
    "text": "here for this table and when I try to",
    "start": "271400",
    "end": "274000"
  },
  {
    "text": "create a six one by clicking the create",
    "start": "274000",
    "end": "276120"
  },
  {
    "text": "local secondary index button you can see",
    "start": "276120",
    "end": "278759"
  },
  {
    "text": "that it gave me an error that I cannot",
    "start": "278759",
    "end": "280680"
  },
  {
    "text": "create more than five local secondary",
    "start": "280680",
    "end": "282720"
  },
  {
    "text": "indexes per table so if you're going to",
    "start": "282720",
    "end": "285720"
  },
  {
    "text": "utilize OSI as part of your design to",
    "start": "285720",
    "end": "288600"
  },
  {
    "text": "Think Through what of the access",
    "start": "288600",
    "end": "290039"
  },
  {
    "text": "patterns that you need OSI to support",
    "start": "290039",
    "end": "292600"
  },
  {
    "text": "before you create all these Lis and also",
    "start": "292600",
    "end": "295320"
  },
  {
    "text": "make sure you remember that OSI can only",
    "start": "295320",
    "end": "297720"
  },
  {
    "text": "be created during table creation",
    "start": "297720",
    "end": "300160"
  },
  {
    "text": "and now let's create this dyn D table so",
    "start": "300160",
    "end": "302759"
  },
  {
    "text": "we can add some items to it now that the",
    "start": "302759",
    "end": "305759"
  },
  {
    "text": "table has been created I'm going to",
    "start": "305759",
    "end": "307520"
  },
  {
    "text": "switch to the AWS clii for the rest of",
    "start": "307520",
    "end": "309960"
  },
  {
    "text": "the demo here I'm using the AWS Cloud",
    "start": "309960",
    "end": "313000"
  },
  {
    "text": "shell which is a browser based shell you",
    "start": "313000",
    "end": "314880"
  },
  {
    "text": "can quickly run scripts with the AWS CLI",
    "start": "314880",
    "end": "318360"
  },
  {
    "text": "the next limit you need to be aware of",
    "start": "318360",
    "end": "320199"
  },
  {
    "text": "is that tables with LSI enable has a 10",
    "start": "320199",
    "end": "323360"
  },
  {
    "text": "Gaby item collection size limit this",
    "start": "323360",
    "end": "326039"
  },
  {
    "text": "means that for all the items under the",
    "start": "326039",
    "end": "328000"
  },
  {
    "text": "same partition key value the size of",
    "start": "328000",
    "end": "330479"
  },
  {
    "text": "those items plus the same item in each",
    "start": "330479",
    "end": "332759"
  },
  {
    "text": "OSI you create cannot exceed that limit",
    "start": "332759",
    "end": "336440"
  },
  {
    "text": "to avoid this limit you want to make",
    "start": "336440",
    "end": "338319"
  },
  {
    "text": "sure your partition key has high",
    "start": "338319",
    "end": "340319"
  },
  {
    "text": "cardinality as well as only projecting",
    "start": "340319",
    "end": "342600"
  },
  {
    "text": "the necessary attributes onto your OSI",
    "start": "342600",
    "end": "345120"
  },
  {
    "text": "to limit the size of the items on those",
    "start": "345120",
    "end": "347680"
  },
  {
    "text": "indexes if you do hit the limit you will",
    "start": "347680",
    "end": "350360"
  },
  {
    "text": "get an item collection size limit exceed",
    "start": "350360",
    "end": "352600"
  },
  {
    "text": "the exception and you will not be able",
    "start": "352600",
    "end": "354680"
  },
  {
    "text": "to add more items let's go back to clash",
    "start": "354680",
    "end": "357400"
  },
  {
    "text": "out and take a look at how we can keep",
    "start": "357400",
    "end": "359080"
  },
  {
    "text": "track of the it item collection sizes of",
    "start": "359080",
    "end": "360960"
  },
  {
    "text": "your table I have the 50 kilobyte items",
    "start": "360960",
    "end": "364440"
  },
  {
    "text": "here that I'm going to write to the",
    "start": "364440",
    "end": "366680"
  },
  {
    "text": "orders table that we just created",
    "start": "366680",
    "end": "370520"
  },
  {
    "text": "earlier I'm using the put item operation",
    "start": "370520",
    "end": "373360"
  },
  {
    "text": "here to write this item onto the orders",
    "start": "373360",
    "end": "376039"
  },
  {
    "text": "table you can see that I'm setting the",
    "start": "376039",
    "end": "378440"
  },
  {
    "text": "return item collection metrics to size",
    "start": "378440",
    "end": "381400"
  },
  {
    "text": "here to return the size of my item",
    "start": "381400",
    "end": "384160"
  },
  {
    "text": "collection executing this",
    "start": "384160",
    "end": "386440"
  },
  {
    "text": "command you can see at the bottom of",
    "start": "386440",
    "end": "388479"
  },
  {
    "text": "this response the size estimate range GB",
    "start": "388479",
    "end": "391800"
  },
  {
    "text": "gives me the size of the item",
    "start": "391800",
    "end": "393759"
  },
  {
    "text": "collection it's currently between 0 to 1",
    "start": "393759",
    "end": "396720"
  },
  {
    "text": "GB remember the maximum size of an item",
    "start": "396720",
    "end": "399520"
  },
  {
    "text": "collection is 10",
    "start": "399520",
    "end": "401599"
  },
  {
    "text": "GB another interesting thing we can see",
    "start": "401599",
    "end": "404240"
  },
  {
    "text": "here is that this operation took 300",
    "start": "404240",
    "end": "407599"
  },
  {
    "text": "right capacity units now you probably",
    "start": "407599",
    "end": "410199"
  },
  {
    "text": "remember that one kilobyte of item",
    "start": "410199",
    "end": "412880"
  },
  {
    "text": "consumes just one righted capacity unit",
    "start": "412880",
    "end": "415680"
  },
  {
    "text": "so a 50 KOB item should have taken 5050",
    "start": "415680",
    "end": "418879"
  },
  {
    "text": "red capacity unit but in this case it's",
    "start": "418879",
    "end": "421800"
  },
  {
    "text": "taken 300 that's because for table with",
    "start": "421800",
    "end": "425639"
  },
  {
    "text": "LSI the item size is actually the size",
    "start": "425639",
    "end": "428599"
  },
  {
    "text": "of the item written to the base table",
    "start": "428599",
    "end": "431039"
  },
  {
    "text": "plus the size of the item written to",
    "start": "431039",
    "end": "432960"
  },
  {
    "text": "each of the secondary indexes so for a",
    "start": "432960",
    "end": "436160"
  },
  {
    "text": "50 kilobyte item with 5 OSI table which",
    "start": "436160",
    "end": "440360"
  },
  {
    "text": "means 50 * 6 is 300 kilobytes and that's",
    "start": "440360",
    "end": "443639"
  },
  {
    "text": "the item size for this operation that",
    "start": "443639",
    "end": "446680"
  },
  {
    "text": "brings us to our last limit that will be",
    "start": "446680",
    "end": "449680"
  },
  {
    "text": "discussing today which is that the item",
    "start": "449680",
    "end": "453520"
  },
  {
    "text": "size of a table with local secondary",
    "start": "453520",
    "end": "456560"
  },
  {
    "text": "index is the base table plus all the",
    "start": "456560",
    "end": "459919"
  },
  {
    "text": "secondary",
    "start": "459919",
    "end": "461199"
  },
  {
    "text": "indexes let's look at this example with",
    "start": "461199",
    "end": "463840"
  },
  {
    "text": "100 kilobyte",
    "start": "463840",
    "end": "465360"
  },
  {
    "text": "item let me write try to write this to",
    "start": "465360",
    "end": "468080"
  },
  {
    "text": "my orders table 100 KOB items BR to the",
    "start": "468080",
    "end": "471960"
  },
  {
    "text": "a table with five L",
    "start": "471960",
    "end": "474039"
  },
  {
    "text": "OSI means the item size is now 600",
    "start": "474039",
    "end": "477280"
  },
  {
    "text": "kiloby D DB has a limit of 400 kilobyte",
    "start": "477280",
    "end": "480840"
  },
  {
    "text": "as your max item size so let's see what",
    "start": "480840",
    "end": "483720"
  },
  {
    "text": "happens when I try to write this item to",
    "start": "483720",
    "end": "485319"
  },
  {
    "text": "the",
    "start": "485319",
    "end": "487080"
  },
  {
    "text": "table I've created an item here that's",
    "start": "487080",
    "end": "489759"
  },
  {
    "text": "around 100 kilobytes in size I'm going",
    "start": "489759",
    "end": "492840"
  },
  {
    "text": "to attempt to do the same put item",
    "start": "492840",
    "end": "495120"
  },
  {
    "text": "operations to the orders table and see",
    "start": "495120",
    "end": "498159"
  },
  {
    "text": "what happens",
    "start": "498159",
    "end": "499960"
  },
  {
    "text": "here you can see here are the commands",
    "start": "499960",
    "end": "502159"
  },
  {
    "text": "for the put item",
    "start": "502159",
    "end": "504440"
  },
  {
    "text": "operation and",
    "start": "504440",
    "end": "507039"
  },
  {
    "text": "enter you can see here that I've gone",
    "start": "507039",
    "end": "509800"
  },
  {
    "text": "exception for the item size exceeding",
    "start": "509800",
    "end": "512320"
  },
  {
    "text": "the maximum allowed",
    "start": "512320",
    "end": "514959"
  },
  {
    "text": "size even though the item is only 100",
    "start": "514959",
    "end": "517479"
  },
  {
    "text": "kilobytes because there are five local",
    "start": "517479",
    "end": "520240"
  },
  {
    "text": "secondary indexes plus the base table",
    "start": "520240",
    "end": "523800"
  },
  {
    "text": "that is 600 kilobytes of item size that",
    "start": "523800",
    "end": "526040"
  },
  {
    "text": "we're running into so this is another so",
    "start": "526040",
    "end": "529240"
  },
  {
    "text": "this is another limit that you need to",
    "start": "529240",
    "end": "530519"
  },
  {
    "text": "be aware of when you're using OSI that",
    "start": "530519",
    "end": "533519"
  },
  {
    "text": "each OSI you create has an impact on",
    "start": "533519",
    "end": "536040"
  },
  {
    "text": "your item size",
    "start": "536040",
    "end": "539639"
  },
  {
    "text": "and that's it folks thank you all for",
    "start": "540200",
    "end": "542680"
  },
  {
    "text": "watching this video hope it's helpful",
    "start": "542680",
    "end": "545399"
  },
  {
    "text": "we'll see you again in the next video",
    "start": "545399",
    "end": "549800"
  }
]