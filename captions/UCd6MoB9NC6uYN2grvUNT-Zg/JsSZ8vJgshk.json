[
  {
    "text": "hello my name is Lee hadigan I'm a",
    "start": "5080",
    "end": "7399"
  },
  {
    "text": "senior specialist Solutions architect",
    "start": "7399",
    "end": "9120"
  },
  {
    "text": "with Amazon Dynamo Deb in this video I'm",
    "start": "9120",
    "end": "12040"
  },
  {
    "text": "going to show you how you can pre-warm",
    "start": "12040",
    "end": "13639"
  },
  {
    "text": "your dynamodb table with their latest",
    "start": "13639",
    "end": "15519"
  },
  {
    "text": "feature called warm",
    "start": "15519",
    "end": "17279"
  },
  {
    "text": "throughput pre-warming your Dynam be",
    "start": "17279",
    "end": "19359"
  },
  {
    "text": "table allows you to prepare for sudden",
    "start": "19359",
    "end": "21119"
  },
  {
    "text": "traffic spikes by ensuring your table or",
    "start": "21119",
    "end": "23880"
  },
  {
    "text": "index is fully scaled out ready to",
    "start": "23880",
    "end": "26279"
  },
  {
    "text": "handle the load before any traffic",
    "start": "26279",
    "end": "28039"
  },
  {
    "text": "surges may happen this can be",
    "start": "28039",
    "end": "30400"
  },
  {
    "text": "particularly useful during events like",
    "start": "30400",
    "end": "31920"
  },
  {
    "text": "flash sales product launches migrations",
    "start": "31920",
    "end": "35440"
  },
  {
    "text": "or any time where you can expect high",
    "start": "35440",
    "end": "37399"
  },
  {
    "text": "and unpredictable",
    "start": "37399",
    "end": "38879"
  },
  {
    "text": "traffic by the end of this video you'll",
    "start": "38879",
    "end": "41760"
  },
  {
    "text": "understand how warm through book can",
    "start": "41760",
    "end": "43000"
  },
  {
    "text": "help you prevent throttling minimize",
    "start": "43000",
    "end": "44800"
  },
  {
    "text": "latency and ensure reliability for your",
    "start": "44800",
    "end": "47239"
  },
  {
    "text": "application during critical",
    "start": "47239",
    "end": "49840"
  },
  {
    "text": "periods Dy be is a fully managed nosql",
    "start": "49840",
    "end": "53039"
  },
  {
    "text": "database built in the cloud to handle",
    "start": "53039",
    "end": "55359"
  },
  {
    "text": "applications of any scale it can scale",
    "start": "55359",
    "end": "58000"
  },
  {
    "text": "to provide predictable performance even",
    "start": "58000",
    "end": "60120"
  },
  {
    "text": "when making millions of requests per",
    "start": "60120",
    "end": "62719"
  },
  {
    "text": "second however there are scenarios where",
    "start": "62719",
    "end": "65040"
  },
  {
    "text": "pre-warming downward read table is",
    "start": "65040",
    "end": "66799"
  },
  {
    "text": "necessary to ensure your application can",
    "start": "66799",
    "end": "69000"
  },
  {
    "text": "handle sudden traffic spikes without",
    "start": "69000",
    "end": "71320"
  },
  {
    "text": "delays in situations like these traffic",
    "start": "71320",
    "end": "74119"
  },
  {
    "text": "can increase unexpectedly and outpace",
    "start": "74119",
    "end": "76560"
  },
  {
    "text": "the automatic scaling mechanisms of",
    "start": "76560",
    "end": "78280"
  },
  {
    "text": "Dynamo B pre-warming your Dynam B table",
    "start": "78280",
    "end": "81680"
  },
  {
    "text": "ensures that the necessary throughput",
    "start": "81680",
    "end": "83240"
  },
  {
    "text": "capacity is ready in advance preventing",
    "start": "83240",
    "end": "85360"
  },
  {
    "text": "throttling reducing latency and",
    "start": "85360",
    "end": "87360"
  },
  {
    "text": "maintaining a smooth user experience",
    "start": "87360",
    "end": "89119"
  },
  {
    "text": "during critical",
    "start": "89119",
    "end": "91920"
  },
  {
    "text": "periods warm throughput is a flexible",
    "start": "92960",
    "end": "95560"
  },
  {
    "text": "feature that can be applied to both",
    "start": "95560",
    "end": "96880"
  },
  {
    "text": "provisioned and On Demand mode tables",
    "start": "96880",
    "end": "99320"
  },
  {
    "text": "enabling pre-warm capacity no matter",
    "start": "99320",
    "end": "101680"
  },
  {
    "text": "which table you use for this video",
    "start": "101680",
    "end": "104960"
  },
  {
    "text": "however we'll focus specifically on how",
    "start": "104960",
    "end": "106680"
  },
  {
    "text": "warm 3book can enhance performance in on",
    "start": "106680",
    "end": "108680"
  },
  {
    "text": "demand mode preparing your table for",
    "start": "108680",
    "end": "110479"
  },
  {
    "text": "sudden traffic spikes to maintain that",
    "start": "110479",
    "end": "112439"
  },
  {
    "text": "seamless high-speed",
    "start": "112439",
    "end": "114280"
  },
  {
    "text": "operations let us start by understanding",
    "start": "114280",
    "end": "116560"
  },
  {
    "text": "the characteristics of an onoma mode",
    "start": "116560",
    "end": "118479"
  },
  {
    "text": "table",
    "start": "118479",
    "end": "121479"
  },
  {
    "text": "on M mode was introduced in 2018 and is",
    "start": "122039",
    "end": "125200"
  },
  {
    "text": "designed to make scal and as effortless",
    "start": "125200",
    "end": "126960"
  },
  {
    "text": "as possible as you can see there's no",
    "start": "126960",
    "end": "129560"
  },
  {
    "text": "limit but you start at zero and then it",
    "start": "129560",
    "end": "132280"
  },
  {
    "text": "will be automatically adjusts to your",
    "start": "132280",
    "end": "134519"
  },
  {
    "text": "workload you don't need to worry about",
    "start": "134519",
    "end": "136680"
  },
  {
    "text": "capacity planning in advance you just",
    "start": "136680",
    "end": "138599"
  },
  {
    "text": "simply make API calls and then would be",
    "start": "138599",
    "end": "140800"
  },
  {
    "text": "handles the",
    "start": "140800",
    "end": "142160"
  },
  {
    "text": "rest this feature offers several key",
    "start": "142160",
    "end": "144879"
  },
  {
    "text": "benefits first it eliminates difficult",
    "start": "144879",
    "end": "147560"
  },
  {
    "text": "trade-offs between over provisioning",
    "start": "147560",
    "end": "149360"
  },
  {
    "text": "which can Le to unnecessary costs and",
    "start": "149360",
    "end": "151879"
  },
  {
    "text": "worse under provisioning which can",
    "start": "151879",
    "end": "154040"
  },
  {
    "text": "result in throttle requests or higher",
    "start": "154040",
    "end": "156920"
  },
  {
    "text": "latency onoma capacity mode ensures that",
    "start": "156920",
    "end": "159440"
  },
  {
    "text": "you pay only for the reads and rights",
    "start": "159440",
    "end": "160959"
  },
  {
    "text": "that you perform and it instantly",
    "start": "160959",
    "end": "162840"
  },
  {
    "text": "accommodates your workload as traffic",
    "start": "162840",
    "end": "164519"
  },
  {
    "text": "ramps up or down for scenarios where",
    "start": "164519",
    "end": "167519"
  },
  {
    "text": "unpredictable traffic patterns on demand",
    "start": "167519",
    "end": "169599"
  },
  {
    "text": "mode is a flexible and costeffective way",
    "start": "169599",
    "end": "171879"
  },
  {
    "text": "to ensure your application can handle",
    "start": "171879",
    "end": "173680"
  },
  {
    "text": "any changes in demand",
    "start": "173680",
    "end": "177480"
  },
  {
    "text": "smoothly when you create a new on demand",
    "start": "178239",
    "end": "180920"
  },
  {
    "text": "table we give you the capacity or the",
    "start": "180920",
    "end": "183000"
  },
  {
    "text": "base throughput of 4,000 right requests",
    "start": "183000",
    "end": "185480"
  },
  {
    "text": "per second which means you can handle up",
    "start": "185480",
    "end": "187519"
  },
  {
    "text": "to 4,000 individual rights every second",
    "start": "187519",
    "end": "190799"
  },
  {
    "text": "on the read side D be Sports up to",
    "start": "190799",
    "end": "193040"
  },
  {
    "text": "12,000 read requests per second or",
    "start": "193040",
    "end": "195519"
  },
  {
    "text": "alowing up to 24 eventually consistent",
    "start": "195519",
    "end": "197640"
  },
  {
    "text": "rates per",
    "start": "197640",
    "end": "200200"
  },
  {
    "text": "second so let's understand how on demand",
    "start": "200480",
    "end": "203440"
  },
  {
    "text": "mode scales on demand mode supports up",
    "start": "203440",
    "end": "206120"
  },
  {
    "text": "to twice your previous peak in",
    "start": "206120",
    "end": "208760"
  },
  {
    "text": "throughput so as your application",
    "start": "208760",
    "end": "211200"
  },
  {
    "text": "consumption on Dynamo Tob increases you",
    "start": "211200",
    "end": "214519"
  },
  {
    "text": "set these new Peaks periodically so when",
    "start": "214519",
    "end": "217159"
  },
  {
    "text": "you elevate your traffic for a given",
    "start": "217159",
    "end": "218720"
  },
  {
    "text": "amount of time then be sets the new",
    "start": "218720",
    "end": "221120"
  },
  {
    "text": "Peaks and under the hood it scales up to",
    "start": "221120",
    "end": "223560"
  },
  {
    "text": "meet them this allows you to consume up",
    "start": "223560",
    "end": "226040"
  },
  {
    "text": "to twice your previous Peak within a 30",
    "start": "226040",
    "end": "228239"
  },
  {
    "text": "minute",
    "start": "228239",
    "end": "230560"
  },
  {
    "text": "period another good thing about Dy be is",
    "start": "231319",
    "end": "234280"
  },
  {
    "text": "it does not scale down so once you've",
    "start": "234280",
    "end": "236519"
  },
  {
    "text": "set that previous Peak it stays there it",
    "start": "236519",
    "end": "239280"
  },
  {
    "text": "remains for the lifetime of that table",
    "start": "239280",
    "end": "241519"
  },
  {
    "text": "so let's imagine you had a flash sale",
    "start": "241519",
    "end": "243599"
  },
  {
    "text": "where you got 1 million requests per",
    "start": "243599",
    "end": "246079"
  },
  {
    "text": "second but then for the remainer of the",
    "start": "246079",
    "end": "248319"
  },
  {
    "text": "year you had very little to know traffic",
    "start": "248319",
    "end": "250680"
  },
  {
    "text": "on your table The Flash sale returns",
    "start": "250680",
    "end": "252920"
  },
  {
    "text": "next year and you can automatically hit",
    "start": "252920",
    "end": "254920"
  },
  {
    "text": "that 1 million request per second",
    "start": "254920",
    "end": "258759"
  },
  {
    "text": "instantly so to understand how the base",
    "start": "258919",
    "end": "263440"
  },
  {
    "text": "capacity of a non-demand mode table",
    "start": "263440",
    "end": "265240"
  },
  {
    "text": "works I'm going to simulate a migration",
    "start": "265240",
    "end": "267759"
  },
  {
    "text": "using a script on AWS glue to put some",
    "start": "267759",
    "end": "270639"
  },
  {
    "text": "traffic against the brand new on demand",
    "start": "270639",
    "end": "272479"
  },
  {
    "text": "table let's see how that",
    "start": "272479",
    "end": "275199"
  },
  {
    "text": "works so here we are in the AWS console",
    "start": "275199",
    "end": "278039"
  },
  {
    "text": "and the first thing we want to do is we",
    "start": "278039",
    "end": "279320"
  },
  {
    "text": "want to create a brand new denimal B",
    "start": "279320",
    "end": "282880"
  },
  {
    "text": "table so we go here to create table we",
    "start": "282880",
    "end": "286440"
  },
  {
    "text": "give it a name I'll call this one no",
    "start": "286440",
    "end": "289360"
  },
  {
    "text": "preor I'll give it a partition key call",
    "start": "289360",
    "end": "292520"
  },
  {
    "text": "PK this our key called",
    "start": "292520",
    "end": "295759"
  },
  {
    "text": "SK uh we'll go for customize setting to",
    "start": "295759",
    "end": "298560"
  },
  {
    "text": "change the mode to on the demand so now",
    "start": "298560",
    "end": "301039"
  },
  {
    "text": "we've got a brand new on demand table",
    "start": "301039",
    "end": "303160"
  },
  {
    "text": "and we'll scroll down and we'll create",
    "start": "303160",
    "end": "304560"
  },
  {
    "text": "that",
    "start": "304560",
    "end": "306759"
  },
  {
    "text": "table so couple of seconds and that",
    "start": "312000",
    "end": "314800"
  },
  {
    "text": "table will create and it's active then",
    "start": "314800",
    "end": "317639"
  },
  {
    "text": "we'll move over to our glue script so",
    "start": "317639",
    "end": "320319"
  },
  {
    "text": "I've written this really simple script",
    "start": "320319",
    "end": "322199"
  },
  {
    "text": "in AWS glue notebook the first thing we",
    "start": "322199",
    "end": "324800"
  },
  {
    "text": "do is we just have some import",
    "start": "324800",
    "end": "326520"
  },
  {
    "text": "statements and here's where I simulate a",
    "start": "326520",
    "end": "328960"
  },
  {
    "text": "migration you can think of maybe reading",
    "start": "328960",
    "end": "331319"
  },
  {
    "text": "from a relational database and doing a",
    "start": "331319",
    "end": "333360"
  },
  {
    "text": "join maybe denormalizing your data",
    "start": "333360",
    "end": "335840"
  },
  {
    "text": "reading from another nosql database or",
    "start": "335840",
    "end": "337680"
  },
  {
    "text": "wherever you get your data from here I'm",
    "start": "337680",
    "end": "339759"
  },
  {
    "text": "just generating some random items with",
    "start": "339759",
    "end": "341960"
  },
  {
    "text": "some random strings and I'm going to put",
    "start": "341960",
    "end": "344800"
  },
  {
    "text": "100 million items into",
    "start": "344800",
    "end": "347440"
  },
  {
    "text": "Dynamo then we scroll down to the Dynamo",
    "start": "347440",
    "end": "350000"
  },
  {
    "text": "part and we just sync that data that we",
    "start": "350000",
    "end": "351639"
  },
  {
    "text": "have we put it into a data frame and we",
    "start": "351639",
    "end": "353280"
  },
  {
    "text": "sync it to D will be to a table called",
    "start": "353280",
    "end": "355360"
  },
  {
    "text": "no prearm so let's go ahead and execute",
    "start": "355360",
    "end": "358240"
  },
  {
    "text": "that",
    "start": "358240",
    "end": "360280"
  },
  {
    "text": "and while it's running we'll check the",
    "start": "360280",
    "end": "361919"
  },
  {
    "text": "metrics so we'll check back in a few",
    "start": "361919",
    "end": "363240"
  },
  {
    "text": "minutes we'll check the metrics and",
    "start": "363240",
    "end": "364400"
  },
  {
    "text": "we'll understand what's happening",
    "start": "364400",
    "end": "365720"
  },
  {
    "text": "against our new on demand mode",
    "start": "365720",
    "end": "369240"
  },
  {
    "text": "table so now we're back in the Dynamo to",
    "start": "371000",
    "end": "373199"
  },
  {
    "text": "be console let's click on our table and",
    "start": "373199",
    "end": "376080"
  },
  {
    "text": "understand what's happening to do that",
    "start": "376080",
    "end": "377479"
  },
  {
    "text": "we'll click in this monitor tab right",
    "start": "377479",
    "end": "380560"
  },
  {
    "text": "here and we'll scroll down to see how",
    "start": "380560",
    "end": "383960"
  },
  {
    "text": "our rights are ongo so here we have our",
    "start": "383960",
    "end": "386759"
  },
  {
    "text": "right usage double click and do that",
    "start": "386759",
    "end": "390280"
  },
  {
    "text": "and we'll see here so here's where I",
    "start": "390280",
    "end": "393479"
  },
  {
    "text": "started the job at 1146 UTC and the",
    "start": "393479",
    "end": "397360"
  },
  {
    "text": "traffic starts to ramp up but look how",
    "start": "397360",
    "end": "400120"
  },
  {
    "text": "it's limited to 4,000 right capacity",
    "start": "400120",
    "end": "402479"
  },
  {
    "text": "units per",
    "start": "402479",
    "end": "404080"
  },
  {
    "text": "second so it's scaled up really fast but",
    "start": "404080",
    "end": "406560"
  },
  {
    "text": "it hit this wall at 4,000 right capacity",
    "start": "406560",
    "end": "409039"
  },
  {
    "text": "units per second so if you remember back",
    "start": "409039",
    "end": "411280"
  },
  {
    "text": "to when we talked about the base",
    "start": "411280",
    "end": "412800"
  },
  {
    "text": "capacity that a nonam mode table gives",
    "start": "412800",
    "end": "414960"
  },
  {
    "text": "you it gives you the ability to do 4,000",
    "start": "414960",
    "end": "417479"
  },
  {
    "text": "right capacity units out of the box",
    "start": "417479",
    "end": "420400"
  },
  {
    "text": "so if we come out of here and we go to",
    "start": "420400",
    "end": "422759"
  },
  {
    "text": "our throttling requests we can see that",
    "start": "422759",
    "end": "425319"
  },
  {
    "text": "we're getting throttled anything that",
    "start": "425319",
    "end": "426599"
  },
  {
    "text": "goes above 4,000 right capacity",
    "start": "426599",
    "end": "429240"
  },
  {
    "text": "units so down B with on demand mode",
    "start": "429240",
    "end": "433360"
  },
  {
    "text": "allows you to consume twice your",
    "start": "433360",
    "end": "435360"
  },
  {
    "text": "previous Peak within a 30 minute period",
    "start": "435360",
    "end": "438039"
  },
  {
    "text": "for us we didn't wait for 30 minutes we",
    "start": "438039",
    "end": "440000"
  },
  {
    "text": "just went from zero to as hard as we",
    "start": "440000",
    "end": "442000"
  },
  {
    "text": "could write using that AWS glue script",
    "start": "442000",
    "end": "445080"
  },
  {
    "text": "that result in a heavy amount of chling",
    "start": "445080",
    "end": "447240"
  },
  {
    "text": "which would lead some people to believe",
    "start": "447240",
    "end": "449240"
  },
  {
    "text": "that maybe Dynam to be can't handle the",
    "start": "449240",
    "end": "451599"
  },
  {
    "text": "load that they're driving at it so",
    "start": "451599",
    "end": "454720"
  },
  {
    "text": "that's where warm through put comes in",
    "start": "454720",
    "end": "457479"
  },
  {
    "text": "let's first understand what warant",
    "start": "457479",
    "end": "458879"
  },
  {
    "text": "throughput is and then we'll rerun our",
    "start": "458879",
    "end": "460720"
  },
  {
    "text": "migration with our table enabled and",
    "start": "460720",
    "end": "462720"
  },
  {
    "text": "pre-war via warant",
    "start": "462720",
    "end": "466039"
  },
  {
    "text": "throughput so War throughput refers to",
    "start": "467159",
    "end": "469680"
  },
  {
    "text": "number of read and R operations your dyn",
    "start": "469680",
    "end": "472360"
  },
  {
    "text": "be can instantly support these values",
    "start": "472360",
    "end": "475199"
  },
  {
    "text": "are available by default for all",
    "start": "475199",
    "end": "477159"
  },
  {
    "text": "provisioned and On Demand mode tables",
    "start": "477159",
    "end": "479520"
  },
  {
    "text": "and represent how much your tables have",
    "start": "479520",
    "end": "481440"
  },
  {
    "text": "scaled based on historical",
    "start": "481440",
    "end": "483840"
  },
  {
    "text": "use if you're using on demand mode or if",
    "start": "483840",
    "end": "486840"
  },
  {
    "text": "you update your Provisions reput to",
    "start": "486840",
    "end": "488440"
  },
  {
    "text": "these values your application will be",
    "start": "488440",
    "end": "490360"
  },
  {
    "text": "able to issue requests up to those",
    "start": "490360",
    "end": "492400"
  },
  {
    "text": "values",
    "start": "492400",
    "end": "493840"
  },
  {
    "text": "instantly then will be will",
    "start": "493840",
    "end": "495720"
  },
  {
    "text": "automatically adjust warm throughput",
    "start": "495720",
    "end": "497159"
  },
  {
    "text": "values as your usage increases however",
    "start": "497159",
    "end": "500360"
  },
  {
    "text": "you can also increase these values",
    "start": "500360",
    "end": "502000"
  },
  {
    "text": "proactively when needed which is",
    "start": "502000",
    "end": "504599"
  },
  {
    "text": "especially useful for upcoming Peak",
    "start": "504599",
    "end": "506360"
  },
  {
    "text": "events like product launches or sales or",
    "start": "506360",
    "end": "508879"
  },
  {
    "text": "in our case",
    "start": "508879",
    "end": "510599"
  },
  {
    "text": "migrations D be can scale to support",
    "start": "510599",
    "end": "513159"
  },
  {
    "text": "table and workloads of virtually any",
    "start": "513159",
    "end": "515039"
  },
  {
    "text": "size in 3ot for example on the man mode",
    "start": "515039",
    "end": "518399"
  },
  {
    "text": "can scale to double the previous Peak",
    "start": "518399",
    "end": "520080"
  },
  {
    "text": "within 30 minutes and will continue to",
    "start": "520080",
    "end": "522240"
  },
  {
    "text": "allocate more capacity as your traffic",
    "start": "522240",
    "end": "524959"
  },
  {
    "text": "increases however as we've seen in our",
    "start": "524959",
    "end": "526959"
  },
  {
    "text": "previous result chling can occur if",
    "start": "526959",
    "end": "529080"
  },
  {
    "text": "triput exceeds twice the previous Peak",
    "start": "529080",
    "end": "531160"
  },
  {
    "text": "within that 30-minute window for plan",
    "start": "531160",
    "end": "534200"
  },
  {
    "text": "Peak events where the request rates to",
    "start": "534200",
    "end": "536040"
  },
  {
    "text": "den will be table might include",
    "start": "536040",
    "end": "537959"
  },
  {
    "text": "increases of 10x or 100 X you can assess",
    "start": "537959",
    "end": "541120"
  },
  {
    "text": "whether the current warm streetot is",
    "start": "541120",
    "end": "542560"
  },
  {
    "text": "sufficient to handle the expected",
    "start": "542560",
    "end": "544399"
  },
  {
    "text": "traffic or if we need to create it if we",
    "start": "544399",
    "end": "547160"
  },
  {
    "text": "need to increase it",
    "start": "547160",
    "end": "550279"
  },
  {
    "text": "proactively so if we think back to our",
    "start": "551000",
    "end": "554040"
  },
  {
    "text": "brand new on demand mode table we got",
    "start": "554040",
    "end": "556440"
  },
  {
    "text": "that current capability of 4,000 Bri",
    "start": "556440",
    "end": "558680"
  },
  {
    "text": "capacity units per second here you can",
    "start": "558680",
    "end": "561600"
  },
  {
    "text": "see we we tried to consume well beyond",
    "start": "561600",
    "end": "564760"
  },
  {
    "text": "that 4,000 R capacity units and we seen",
    "start": "564760",
    "end": "567200"
  },
  {
    "text": "the troton and a cloudwatch metrix",
    "start": "567200",
    "end": "570519"
  },
  {
    "text": "however we know we need more than 4,000",
    "start": "570519",
    "end": "572320"
  },
  {
    "text": "right capacity units so we can",
    "start": "572320",
    "end": "574160"
  },
  {
    "text": "proactively increase it using warm",
    "start": "574160",
    "end": "577000"
  },
  {
    "text": "throughput to pre-warm our",
    "start": "577000",
    "end": "579279"
  },
  {
    "text": "table that would result in hopefully",
    "start": "579279",
    "end": "582120"
  },
  {
    "text": "something that looks like this so we",
    "start": "582120",
    "end": "584360"
  },
  {
    "text": "pre-warm our table to handle a peak of",
    "start": "584360",
    "end": "587279"
  },
  {
    "text": "40,000 right capacity units per second",
    "start": "587279",
    "end": "590120"
  },
  {
    "text": "so we expect to consume no more than",
    "start": "590120",
    "end": "591839"
  },
  {
    "text": "40,000 so we think 40,000 is a good bet",
    "start": "591839",
    "end": "595120"
  },
  {
    "text": "for our",
    "start": "595120",
    "end": "596120"
  },
  {
    "text": "migration let's see how that looks in",
    "start": "596120",
    "end": "598480"
  },
  {
    "text": "the next migration",
    "start": "598480",
    "end": "601320"
  },
  {
    "text": "simulation so now we're back in the",
    "start": "602320",
    "end": "604160"
  },
  {
    "text": "Dynam be console and we're going to",
    "start": "604160",
    "end": "605680"
  },
  {
    "text": "create a new on demand mode",
    "start": "605680",
    "end": "607640"
  },
  {
    "text": "table this one we're going to call",
    "start": "607640",
    "end": "609839"
  },
  {
    "text": "pre-or and we're going to give it the",
    "start": "609839",
    "end": "611839"
  },
  {
    "text": "same Keys which is PK for the petition",
    "start": "611839",
    "end": "614160"
  },
  {
    "text": "key and SK for the S key once again",
    "start": "614160",
    "end": "617320"
  },
  {
    "text": "we'll customize settings and we'll click",
    "start": "617320",
    "end": "619320"
  },
  {
    "text": "on demand mode but this time we're going",
    "start": "619320",
    "end": "622040"
  },
  {
    "text": "to use this new feature called warm",
    "start": "622040",
    "end": "624040"
  },
  {
    "text": "throughput so we'll drop this down and",
    "start": "624040",
    "end": "626800"
  },
  {
    "text": "here we have the ability to set warm",
    "start": "626800",
    "end": "628279"
  },
  {
    "text": "throughput or pre-warm table for reads",
    "start": "628279",
    "end": "631279"
  },
  {
    "text": "and wres for us we're only concerned",
    "start": "631279",
    "end": "634160"
  },
  {
    "text": "about wrs because we're writing into D",
    "start": "634160",
    "end": "637200"
  },
  {
    "text": "be so we're going to increase this to a",
    "start": "637200",
    "end": "639519"
  },
  {
    "text": "value of 40,000 now this will pre-warm",
    "start": "639519",
    "end": "642279"
  },
  {
    "text": "our dynb table and give it the",
    "start": "642279",
    "end": "644200"
  },
  {
    "text": "capability to do 4,000 rights per second",
    "start": "644200",
    "end": "647079"
  },
  {
    "text": "out of the box so no longer that 4,000",
    "start": "647079",
    "end": "649519"
  },
  {
    "text": "rights that you get by default this time",
    "start": "649519",
    "end": "651680"
  },
  {
    "text": "we're telling them we expect high",
    "start": "651680",
    "end": "654079"
  },
  {
    "text": "traffic give me 40,000 rights per",
    "start": "654079",
    "end": "657200"
  },
  {
    "text": "second we'll scroll down and we'll",
    "start": "657200",
    "end": "659320"
  },
  {
    "text": "create that",
    "start": "659320",
    "end": "661760"
  },
  {
    "text": "table and we'll wait for that table to",
    "start": "662279",
    "end": "664480"
  },
  {
    "text": "become",
    "start": "664480",
    "end": "666800"
  },
  {
    "text": "active now we see our table is active",
    "start": "667920",
    "end": "670240"
  },
  {
    "text": "we'll go back over to our glue script",
    "start": "670240",
    "end": "672639"
  },
  {
    "text": "and we just need to change the table",
    "start": "672639",
    "end": "674160"
  },
  {
    "text": "name so instead of no pre-warm we'll",
    "start": "674160",
    "end": "676560"
  },
  {
    "text": "change our table there into pre-warm and",
    "start": "676560",
    "end": "678560"
  },
  {
    "text": "we'll do the same migration simulation",
    "start": "678560",
    "end": "680200"
  },
  {
    "text": "once",
    "start": "680200",
    "end": "681560"
  },
  {
    "text": "again we'll give that a couple of",
    "start": "681560",
    "end": "683399"
  },
  {
    "text": "minutes again and we'll dig into the",
    "start": "683399",
    "end": "684800"
  },
  {
    "text": "catch",
    "start": "684800",
    "end": "687120"
  },
  {
    "text": "metrix so now let's just check the",
    "start": "687120",
    "end": "689600"
  },
  {
    "text": "cloudwatch metrics for this new",
    "start": "689600",
    "end": "691760"
  },
  {
    "text": "migration so we'll click on our table of",
    "start": "691760",
    "end": "693560"
  },
  {
    "text": "preor we'll go to the monitor tab once",
    "start": "693560",
    "end": "697120"
  },
  {
    "text": "again we'll scroll down to the right",
    "start": "697120",
    "end": "700560"
  },
  {
    "text": "let's open this up let's zoom in a",
    "start": "700560",
    "end": "703519"
  },
  {
    "text": "little",
    "start": "703519",
    "end": "704360"
  },
  {
    "text": "bit so here we can see we're not blocked",
    "start": "704360",
    "end": "706880"
  },
  {
    "text": "by that 4,000 right capacity unit",
    "start": "706880",
    "end": "708720"
  },
  {
    "text": "anymore we're consuming above 30,000",
    "start": "708720",
    "end": "711120"
  },
  {
    "text": "right capacity",
    "start": "711120",
    "end": "713079"
  },
  {
    "text": "units let's just check our Monitor and",
    "start": "713079",
    "end": "715560"
  },
  {
    "text": "tab",
    "start": "715560",
    "end": "716720"
  },
  {
    "text": "now sorry our throttle and tab so here",
    "start": "716720",
    "end": "719920"
  },
  {
    "text": "you can see we have absolutely no",
    "start": "719920",
    "end": "721240"
  },
  {
    "text": "throttling on our Dynamo to table",
    "start": "721240",
    "end": "723399"
  },
  {
    "text": "whatsoever so this limit of 30,000 is",
    "start": "723399",
    "end": "727040"
  },
  {
    "text": "not actually a Dynamo Tob limit but this",
    "start": "727040",
    "end": "729000"
  },
  {
    "text": "is the limitation on our glue job that's",
    "start": "729000",
    "end": "730920"
  },
  {
    "text": "the amount of capacity it can consume so",
    "start": "730920",
    "end": "733639"
  },
  {
    "text": "by simply telling Dynamo Tob to pre-warm",
    "start": "733639",
    "end": "736360"
  },
  {
    "text": "to 40,000 right capacity units we can",
    "start": "736360",
    "end": "738839"
  },
  {
    "text": "execute this migration without any",
    "start": "738839",
    "end": "740880"
  },
  {
    "text": "throttling any unexpected latencies and",
    "start": "740880",
    "end": "743880"
  },
  {
    "text": "the job goes off with a success",
    "start": "743880",
    "end": "748360"
  },
  {
    "text": "so now let's see what more we can get",
    "start": "751480",
    "end": "753760"
  },
  {
    "text": "from warm",
    "start": "753760",
    "end": "755760"
  },
  {
    "text": "throughput so if we go to additional",
    "start": "755760",
    "end": "758399"
  },
  {
    "text": "settings on the top right for this table",
    "start": "758399",
    "end": "761040"
  },
  {
    "text": "we can scroll down and we can see our",
    "start": "761040",
    "end": "762440"
  },
  {
    "text": "warm throughput settings so we can see",
    "start": "762440",
    "end": "764839"
  },
  {
    "text": "that this table has given us the ability",
    "start": "764839",
    "end": "766440"
  },
  {
    "text": "to do 12,000 reads which we're getting",
    "start": "766440",
    "end": "768600"
  },
  {
    "text": "out of the box with a non demand mode",
    "start": "768600",
    "end": "770320"
  },
  {
    "text": "table but then we can also see the",
    "start": "770320",
    "end": "772240"
  },
  {
    "text": "40,000 rights that we explicitly",
    "start": "772240",
    "end": "774199"
  },
  {
    "text": "mentioned when we created the table now",
    "start": "774199",
    "end": "776600"
  },
  {
    "text": "you can increase these at any time so I",
    "start": "776600",
    "end": "778760"
  },
  {
    "text": "can go here and and set the reads to for",
    "start": "778760",
    "end": "781959"
  },
  {
    "text": "example let's imagine we expect 30,000",
    "start": "781959",
    "end": "784480"
  },
  {
    "text": "reads as well we can save that and under",
    "start": "784480",
    "end": "787399"
  },
  {
    "text": "the hood Dy begins to scale up the table",
    "start": "787399",
    "end": "789519"
  },
  {
    "text": "as synchronously so it'll take a few",
    "start": "789519",
    "end": "791279"
  },
  {
    "text": "minutes to create but while it's",
    "start": "791279",
    "end": "793480"
  },
  {
    "text": "creating you'll see it in this upd and",
    "start": "793480",
    "end": "795839"
  },
  {
    "text": "Status likewise if we go back to our",
    "start": "795839",
    "end": "798120"
  },
  {
    "text": "pre-warm table which we didn't use warm",
    "start": "798120",
    "end": "800199"
  },
  {
    "text": "throughput for we can see the warm",
    "start": "800199",
    "end": "802120"
  },
  {
    "text": "throughput values so here it's send",
    "start": "802120",
    "end": "805000"
  },
  {
    "text": "12,000 reads and 4,000 wrs exactly what",
    "start": "805000",
    "end": "808519"
  },
  {
    "text": "you get out of the the box with a",
    "start": "808519",
    "end": "809839"
  },
  {
    "text": "non-demand mode table these will",
    "start": "809839",
    "end": "812279"
  },
  {
    "text": "increase proactively so as your demand",
    "start": "812279",
    "end": "814399"
  },
  {
    "text": "increases so as you slowly scale this",
    "start": "814399",
    "end": "817240"
  },
  {
    "text": "table up warm through up will also scale",
    "start": "817240",
    "end": "819720"
  },
  {
    "text": "up to reference the table's capabilities",
    "start": "819720",
    "end": "823199"
  },
  {
    "text": "that means if you have existing tables",
    "start": "823199",
    "end": "825120"
  },
  {
    "text": "and you expect a large surge in traffic",
    "start": "825120",
    "end": "827440"
  },
  {
    "text": "due to an event like the flash flash",
    "start": "827440",
    "end": "829519"
  },
  {
    "text": "sale or a migration or other things that",
    "start": "829519",
    "end": "831839"
  },
  {
    "text": "we mentioned you can check your table's",
    "start": "831839",
    "end": "833920"
  },
  {
    "text": "current capability and if you don't",
    "start": "833920",
    "end": "835880"
  },
  {
    "text": "think they expect they meet your",
    "start": "835880",
    "end": "837480"
  },
  {
    "text": "expectations you can simply",
    "start": "837480",
    "end": "839680"
  },
  {
    "text": "edited click on the warrant trook",
    "start": "839680",
    "end": "841759"
  },
  {
    "text": "settings and we can give this one",
    "start": "841759",
    "end": "843000"
  },
  {
    "text": "140,000 right capacity units as",
    "start": "843000",
    "end": "845880"
  },
  {
    "text": "well so warm throughput allows the",
    "start": "845880",
    "end": "848680"
  },
  {
    "text": "ability to understand what a current",
    "start": "848680",
    "end": "851279"
  },
  {
    "text": "table's capabilities is but it also",
    "start": "851279",
    "end": "853480"
  },
  {
    "text": "gives you the ability to pre-warm it if",
    "start": "853480",
    "end": "855360"
  },
  {
    "text": "it doesn't meet your requirements that",
    "start": "855360",
    "end": "858040"
  },
  {
    "text": "war through put is supported in the",
    "start": "858040",
    "end": "859600"
  },
  {
    "text": "console like you can see in the AWS CLA",
    "start": "859600",
    "end": "862920"
  },
  {
    "text": "and supportting sdks and also through",
    "start": "862920",
    "end": "865199"
  },
  {
    "text": "infrastructure as code such as C",
    "start": "865199",
    "end": "867079"
  },
  {
    "text": "information and cdk",
    "start": "867079",
    "end": "870199"
  },
  {
    "text": "thank you for taking the time to learn",
    "start": "870199",
    "end": "871839"
  },
  {
    "text": "about Dynamo tob's new warm throughput",
    "start": "871839",
    "end": "873920"
  },
  {
    "text": "feature as we've seen warm throughput",
    "start": "873920",
    "end": "876560"
  },
  {
    "text": "can significantly enhance your table's",
    "start": "876560",
    "end": "878639"
  },
  {
    "text": "Readiness for sudden traffic spikes",
    "start": "878639",
    "end": "880839"
  },
  {
    "text": "helping you to avoid throttling minimize",
    "start": "880839",
    "end": "882720"
  },
  {
    "text": "latency and ensure a seamless experience",
    "start": "882720",
    "end": "885199"
  },
  {
    "text": "for your users my name is Lee Hanigan",
    "start": "885199",
    "end": "888040"
  },
  {
    "text": "I'm a senior specialist Solutions",
    "start": "888040",
    "end": "889440"
  },
  {
    "text": "architect for Amazon dynb and I'll see",
    "start": "889440",
    "end": "891800"
  },
  {
    "text": "you in the next one",
    "start": "891800",
    "end": "895360"
  }
]