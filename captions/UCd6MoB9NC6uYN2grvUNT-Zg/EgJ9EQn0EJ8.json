[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "okay welcome everybody to the last presentation of the afternoon",
    "start": "79",
    "end": "6859"
  },
  {
    "text": "thanks for staying all day and enjoying this new security mini session we're",
    "start": "6859",
    "end": "12150"
  },
  {
    "text": "excited to put it on for you today we're going to talk about",
    "start": "12150",
    "end": "18710"
  },
  {
    "text": "ways to leverage the key management service for secure application design",
    "start": "18710",
    "end": "23820"
  },
  {
    "text": "now of course there's lots of components to secure application design right there's Network security there's",
    "start": "23820",
    "end": "29939"
  },
  {
    "text": "identity access management you can even talk about the geographic",
    "start": "29939",
    "end": "35730"
  },
  {
    "text": "location and physical security of things but we're going to focus very much around the use of encryption and access",
    "start": "35730",
    "end": "41040"
  },
  {
    "text": "control of encryption keys we're going to talk about some best practices that we're seeing out there",
    "start": "41040",
    "end": "47270"
  },
  {
    "text": "amongst our customers for how they're using kms and how to take advantage of",
    "start": "47270",
    "end": "52460"
  },
  {
    "text": "some of the features that we've implemented I'm also going to talk in some detail about a new feature that we",
    "start": "52460",
    "end": "58920"
  },
  {
    "text": "launched a couple of months ago called import key and then finally something that we're really excited about is we've",
    "start": "58920",
    "end": "65369"
  },
  {
    "text": "got a partner box that's going to come and talk about how they are solving",
    "start": "65369",
    "end": "71520"
  },
  {
    "text": "problems for their customers in the area of data security by leveraging",
    "start": "71520",
    "end": "77330"
  },
  {
    "text": "AWS security services like cloud HSM and kms so I'm going to start at a very high",
    "start": "77330",
    "end": "84810"
  },
  {
    "start": "82000",
    "end": "82000"
  },
  {
    "text": "level we'll get fairly deep but I want to provide some context for how we're",
    "start": "84810",
    "end": "91770"
  },
  {
    "text": "going to talk about some of the ideas inside this presentation so I'm going to assume everybody here is familiar with",
    "start": "91770",
    "end": "97590"
  },
  {
    "text": "the CIA model for security most people think about encryption as delivering on",
    "start": "97590",
    "end": "104159"
  },
  {
    "text": "the confidentiality component but it certainly plays a role in",
    "start": "104159",
    "end": "110090"
  },
  {
    "text": "integrity and of course availability making sure that not only your data but",
    "start": "110090",
    "end": "116640"
  },
  {
    "text": "the keys used to encrypt your data are highly available is critical",
    "start": "116640",
    "end": "122360"
  },
  {
    "start": "122000",
    "end": "122000"
  },
  {
    "text": "so let's talk a little bit more about confidentiality",
    "start": "122360",
    "end": "127429"
  },
  {
    "text": "in terms of ensuring that only the right people get access to your data",
    "start": "127429",
    "end": "133970"
  },
  {
    "text": "with encryption it's easy to reason about well I've got to make sure only",
    "start": "133970",
    "end": "139080"
  },
  {
    "text": "the right person has the key but when you are looking at systems where you're accessing the data remotely",
    "start": "139080",
    "end": "145709"
  },
  {
    "text": "or accessing the keys remotely you've got to can access controls on those two independent",
    "start": "145709",
    "end": "153300"
  },
  {
    "text": "resources so for those of you who are familiar with Identity and Access Management",
    "start": "153300",
    "end": "159060"
  },
  {
    "text": "within AWS you probably wrestle with the park model on a regular basis defining which",
    "start": "159060",
    "end": "166140"
  },
  {
    "text": "principles whether they're users or roles have access to which actions which",
    "start": "166140",
    "end": "172500"
  },
  {
    "text": "API AWS API is that affect which resources inside your",
    "start": "172500",
    "end": "178800"
  },
  {
    "text": "account which Arne's and finally under which conditions",
    "start": "178800",
    "end": "184430"
  },
  {
    "text": "so access control is clearly critical the act of encrypting",
    "start": "186590",
    "end": "193590"
  },
  {
    "text": "or creating ciphertext certainly provides you protection for those who don't have the ability to get the key",
    "start": "193590",
    "end": "201200"
  },
  {
    "text": "when you use techniques like authenticated encryption you can protect that data for",
    "start": "201200",
    "end": "207630"
  },
  {
    "text": "modification in many cases it's easier to reason about the security of a single",
    "start": "207630",
    "end": "215370"
  },
  {
    "text": "object like an encryption key than it is to reason about the security of lots of resources that may be protected under",
    "start": "215370",
    "end": "221850"
  },
  {
    "text": "that key and finally I will continue to reinforce this idea that we believe it's critical",
    "start": "221850",
    "end": "228120"
  },
  {
    "text": "to have independent access control for your encrypted data the ciphertext and",
    "start": "228120",
    "end": "233940"
  },
  {
    "text": "the encryption keys so while we do offer some transparent",
    "start": "233940",
    "end": "239570"
  },
  {
    "text": "server-side encryption features in AWS we think that all that really is doing",
    "start": "239570",
    "end": "245940"
  },
  {
    "text": "is saying well if you've got permissions to the resource we're just automatically going to get the keys and decrypt the",
    "start": "245940",
    "end": "251910"
  },
  {
    "text": "data for you and we give you an opportunity with kms to define independent access control mechanisms on",
    "start": "251910",
    "end": "258810"
  },
  {
    "text": "the keys to further scope down and tighten control so",
    "start": "258810",
    "end": "265330"
  },
  {
    "text": "from an integrity standpoint how do you make sure that the data that",
    "start": "265330",
    "end": "271060"
  },
  {
    "text": "you put into a location whether it be key or ciphertext is the data that you get back so you can use replication",
    "start": "271060",
    "end": "278110"
  },
  {
    "text": "across independent systems this will mitigate against corruption at the",
    "start": "278110",
    "end": "283330"
  },
  {
    "text": "software layer or any type of risk to the server hardware itself",
    "start": "283330",
    "end": "290020"
  },
  {
    "text": "that's storing your data from a logical integrity standpoint there's plenty of very common cryptographic techniques as",
    "start": "290020",
    "end": "297849"
  },
  {
    "text": "simple as check sums you can have complicated Mac implementations and certainly using digital certificates",
    "start": "297849",
    "end": "306780"
  },
  {
    "text": "so the availability question is really one you need to decide for yourself",
    "start": "307229",
    "end": "313020"
  },
  {
    "text": "so if you think about the inverse the unavailability of data how much time can",
    "start": "313020",
    "end": "319659"
  },
  {
    "text": "you users live without getting access to their sensitive data",
    "start": "319659",
    "end": "324690"
  },
  {
    "text": "right so you may for example have an application where the ciphertext is",
    "start": "324690",
    "end": "329860"
  },
  {
    "text": "available but the keys aren't or vice-versa so you need to think about the union of the availability",
    "start": "329860",
    "end": "335710"
  },
  {
    "text": "characteristics of those two services to define availability for your entire data",
    "start": "335710",
    "end": "341110"
  },
  {
    "text": "set the other issue on availability is latency how much time does it take to",
    "start": "341110",
    "end": "347680"
  },
  {
    "text": "retrieve a given object when you think about the s3 case s3 puts and gets",
    "start": "347680",
    "end": "354629"
  },
  {
    "text": "depending on the size of your file the put might take let's just say an average",
    "start": "354629",
    "end": "360580"
  },
  {
    "text": "of 500 milliseconds so how much extra time is required to get the correct",
    "start": "360580",
    "end": "366819"
  },
  {
    "text": "encryption keys encrypt that data write it to disk before you get a success",
    "start": "366819",
    "end": "372129"
  },
  {
    "text": "response right you need to account for that additional overhead",
    "start": "372129",
    "end": "378479"
  },
  {
    "start": "378000",
    "end": "378000"
  },
  {
    "text": "so I'm going to invent a sample application that has some security requirements and we're going to walk",
    "start": "378479",
    "end": "384639"
  },
  {
    "text": "through the see the I and the a implications for",
    "start": "384639",
    "end": "390310"
  },
  {
    "text": "that and how kms and encryption in general across AWS could be used so think about",
    "start": "390310",
    "end": "399100"
  },
  {
    "text": "launching an instance it's your own application code and that instance needs",
    "start": "399100",
    "end": "404870"
  },
  {
    "text": "to have the ability to talk to other remote servers or services",
    "start": "404870",
    "end": "410830"
  },
  {
    "text": "so we're talking about secrets that have to be deployed to the instance and in",
    "start": "410830",
    "end": "416300"
  },
  {
    "text": "many cases these are going to be secrets that aren't used for talking to AWS",
    "start": "416300",
    "end": "422600"
  },
  {
    "text": "services because of course something like ec2 rolls already gives you rapidly rotating AWS credentials to talk to",
    "start": "422600",
    "end": "429560"
  },
  {
    "text": "services these could be credentials like I need to talk to a database or a Cassandra database or I've got some",
    "start": "429560",
    "end": "436040"
  },
  {
    "text": "other third party service that has a special set of credentials how do I get these things down to an instance in a",
    "start": "436040",
    "end": "443540"
  },
  {
    "text": "secure fashion from a CIA standpoint in terms of",
    "start": "443540",
    "end": "450860"
  },
  {
    "text": "confidentiality integrity and availability I'm going to insert excuse",
    "start": "450860",
    "end": "456350"
  },
  {
    "text": "me assert a relatively simple set of requirements first of all your secrets",
    "start": "456350",
    "end": "461900"
  },
  {
    "text": "can't be stored in plain text anywhere you want to make sure the secrets are",
    "start": "461900",
    "end": "467270"
  },
  {
    "text": "only decrypted on the instance that needs them as opposed to perhaps",
    "start": "467270",
    "end": "474170"
  },
  {
    "text": "decrypting them somewhere and then sending them down over a secure Channel from an integrity standpoint as well as",
    "start": "474170",
    "end": "481220"
  },
  {
    "text": "a durability of the secret you need to make sure that these are replicated in multiple locations and you want to make",
    "start": "481220",
    "end": "487340"
  },
  {
    "text": "sure that the secret that you've defined isn't being changed underneath you without your knowledge",
    "start": "487340",
    "end": "494889"
  },
  {
    "text": "for the process of launching an instance and application instance typically this",
    "start": "495040",
    "end": "500090"
  },
  {
    "text": "is going to be measured in seconds or perhaps even minutes depending on how large the instance and the attached",
    "start": "500090",
    "end": "505340"
  },
  {
    "text": "volume is but the simple rule is if the instance is launched and you have started to push code down to it those",
    "start": "505340",
    "end": "511940"
  },
  {
    "text": "secrets should also be available and we'll arbitrarily say that this is going",
    "start": "511940",
    "end": "518630"
  },
  {
    "text": "to be a relatively small instance and we want this to take under a minute so now let's break these down",
    "start": "518630",
    "end": "526240"
  },
  {
    "text": "individually we said we don't want to store plaintext secret on disk",
    "start": "526240",
    "end": "531810"
  },
  {
    "text": "and we don't want to decrypt the secret anywhere but the instance that you own so what does this imply",
    "start": "531810",
    "end": "539779"
  },
  {
    "text": "what it implies is that you have to have encryption code running in your instance",
    "start": "541100",
    "end": "547070"
  },
  {
    "text": "right you cannot rely on a server-side encryption implementation because if",
    "start": "547070",
    "end": "553770"
  },
  {
    "text": "you're storing your secrets in a service that is doing server-side encryption then that service is going to decrypt",
    "start": "553770",
    "end": "560250"
  },
  {
    "text": "your secrets before it bends it to you so if you stored your secret sins as3",
    "start": "560250",
    "end": "565680"
  },
  {
    "text": "using s3 server-side encryption s3 will decrypt before it then returns those",
    "start": "565680",
    "end": "571589"
  },
  {
    "text": "secrets down to you over TLS so the TLS session is absolutely secured",
    "start": "571589",
    "end": "578400"
  },
  {
    "text": "with strong encryption however as a best practice we think it's",
    "start": "578400",
    "end": "584250"
  },
  {
    "text": "more useful to only decrypt that data locally inside your instance using",
    "start": "584250",
    "end": "589830"
  },
  {
    "text": "application code that you control under a process ID that you own",
    "start": "589830",
    "end": "596089"
  },
  {
    "text": "so what are your options on the client side you could use the general AWS SDK",
    "start": "596330",
    "end": "603000"
  },
  {
    "text": "and any of the kms API s to be able to pass some ciphertext blob",
    "start": "603000",
    "end": "610520"
  },
  {
    "text": "and get a data encryption key we also have some higher-level",
    "start": "610520",
    "end": "617570"
  },
  {
    "text": "SDKs which are a little bit easier to use in various environments for those of you",
    "start": "617570",
    "end": "624720"
  },
  {
    "text": "who have used s3 a lot you might be familiar with the s3 encryption client the dynamodb encryption client is also",
    "start": "624720",
    "end": "632610"
  },
  {
    "text": "very useful to manage selective encryption on various tables rows or",
    "start": "632610",
    "end": "638970"
  },
  {
    "text": "fields to optimistically and opportunistically encrypt only certain",
    "start": "638970",
    "end": "646200"
  },
  {
    "text": "data to ensure you have high performance so these are all client SDKs that get",
    "start": "646200",
    "end": "653220"
  },
  {
    "text": "access to your underlying cryptographic provider on your system but they still require you to supply a key provider",
    "start": "653220",
    "end": "661550"
  },
  {
    "text": "now of course in this talk we're talking about kms is a key provider and all of these are integrated with kms assuming",
    "start": "661550",
    "end": "669000"
  },
  {
    "text": "you have a key in your account you can also use any keys inside your existing",
    "start": "669000",
    "end": "674820"
  },
  {
    "text": "key providers whether they're managed by AWS or not okay so let's talk a little bit about",
    "start": "674820",
    "end": "682800"
  },
  {
    "start": "681000",
    "end": "681000"
  },
  {
    "text": "how the custom applications using the SDKs are doing encryption because we",
    "start": "682800",
    "end": "689940"
  },
  {
    "text": "think the idea of envelope encryption is very useful and in fact we use envelope encryption",
    "start": "689940",
    "end": "695970"
  },
  {
    "text": "in all of the server-side encryption implementations across the as of last",
    "start": "695970",
    "end": "702030"
  },
  {
    "text": "week 23 AWS services that offer server-side encryption why do we do envelope encryption well we",
    "start": "702030",
    "end": "710040"
  },
  {
    "text": "want to make sure that for every resource and think of it resources something that has an Arn we have a",
    "start": "710040",
    "end": "717180"
  },
  {
    "text": "unique data key so that limits the blast radius of that data key to the specific",
    "start": "717180",
    "end": "722730"
  },
  {
    "text": "resource whether it's a small 500k image that you're uploading to s3 or a 2",
    "start": "722730",
    "end": "729690"
  },
  {
    "text": "terabyte RDS database that's an individual resource we will provide an",
    "start": "729690",
    "end": "735570"
  },
  {
    "text": "individual key we also get a lot better performance because the encryption can",
    "start": "735570",
    "end": "741030"
  },
  {
    "text": "happen locally when you have your plaintext that needs to be encrypted you don't have to take all of your plaintext",
    "start": "741030",
    "end": "746670"
  },
  {
    "text": "and make a network call to get it encrypted by the kms service right instead you get a key that can be",
    "start": "746670",
    "end": "755850"
  },
  {
    "text": "passed down to your application and used by your application to do its work and the only time you may",
    "start": "755850",
    "end": "763860"
  },
  {
    "text": "need to make a call to kms is to get the cipher text representation of that key",
    "start": "763860",
    "end": "770160"
  },
  {
    "text": "decrypted the first time you need to use it okay",
    "start": "770160",
    "end": "776240"
  },
  {
    "start": "776000",
    "end": "776000"
  },
  {
    "text": "so we had another requirement about keeping copies of cipher text in multiple locations so using a redundant",
    "start": "776660",
    "end": "785670"
  },
  {
    "text": "storage architecture makes a lot of sense within kms we actually store copies of",
    "start": "785670",
    "end": "791940"
  },
  {
    "text": "your master keys in redundant storage locations one of which happens to be s3",
    "start": "791940",
    "end": "798239"
  },
  {
    "text": "which is designed with 11 9s durability for your own applications and what we",
    "start": "798239",
    "end": "803999"
  },
  {
    "text": "see amongst our customers is a combination of s3 and sometimes dynamo",
    "start": "803999",
    "end": "809149"
  },
  {
    "text": "right in many cases dynamo is attractive because much lower latencies so if you",
    "start": "809149",
    "end": "815970"
  },
  {
    "text": "need high volumes of keys and you're trying to minimize the impact of latency to your application dynamo might make",
    "start": "815970",
    "end": "822540"
  },
  {
    "text": "sense and you might use s3 as an archive okay",
    "start": "822540",
    "end": "828529"
  },
  {
    "text": "how do we ensure that secrets haven't changed since they were last used",
    "start": "830119",
    "end": "835819"
  },
  {
    "text": "so here rather than having you try to manage bunch of check sums or drive a Mac off",
    "start": "835819",
    "end": "843660"
  },
  {
    "text": "of a secret with kms we actually provide",
    "start": "843660",
    "end": "849199"
  },
  {
    "text": "authenticated encryption by default so whether you're submitting data",
    "start": "849199",
    "end": "854579"
  },
  {
    "text": "directly to kms as long as it's under 4 kilobytes or you're using envelope",
    "start": "854579",
    "end": "861329"
  },
  {
    "text": "encryption and having data Keys sent up and back to kms every encryption operation done within",
    "start": "861329",
    "end": "868079"
  },
  {
    "text": "the service is using 256 bit AES keys under Galois counter mode",
    "start": "868079",
    "end": "874819"
  },
  {
    "text": "now I'm not going to go into the details of Galois counter mode but one of the",
    "start": "874819",
    "end": "880170"
  },
  {
    "text": "things that it does is it allows you to ensure that the integrity the",
    "start": "880170",
    "end": "887339"
  },
  {
    "text": "ciphertext is maintained between encrypts and decrypts now one of the ways that we do this we",
    "start": "887339",
    "end": "893429"
  },
  {
    "text": "expose one of these parameters for integrity through a feature we call",
    "start": "893429",
    "end": "898919"
  },
  {
    "text": "encryption context so encryption context is an arbitrary",
    "start": "898919",
    "end": "904350"
  },
  {
    "text": "string string map that you can submit when you make what we call the data",
    "start": "904350",
    "end": "910529"
  },
  {
    "text": "plane calls to kms so encrypt generate data key there's two variants of that",
    "start": "910529",
    "end": "916069"
  },
  {
    "text": "decrypt re-encrypt anytime you're using the key to create a ciphertext you pass",
    "start": "916069",
    "end": "922350"
  },
  {
    "text": "in this string string pair the next time you want to decrypt that ciphertext you",
    "start": "922350",
    "end": "928499"
  },
  {
    "text": "must also pass in the exact same pair so this adds some additional security it",
    "start": "928499",
    "end": "936040"
  },
  {
    "text": "also enables you to use the string string pair in policies",
    "start": "936040",
    "end": "944490"
  },
  {
    "text": "why is that important because you might have a master key that's in use by a lot",
    "start": "944490",
    "end": "951670"
  },
  {
    "text": "of different applications might be used by s3 for server-side",
    "start": "951670",
    "end": "957010"
  },
  {
    "text": "encryption you might have a master key that's also used by your applications",
    "start": "957010",
    "end": "962440"
  },
  {
    "text": "because this master key represents maybe phi4 your us customers so now what you",
    "start": "962440",
    "end": "969280"
  },
  {
    "text": "want to do is ensure that the code paths that are coming to kms and requesting use for that key are doing so in an",
    "start": "969280",
    "end": "976750"
  },
  {
    "text": "expected fashion if you implement encryption context in your application you know that the decrypt operation",
    "start": "976750",
    "end": "984310"
  },
  {
    "text": "should only happen on a ciphertext if it has this encryption context and you can then map that back to the proper",
    "start": "984310",
    "end": "991270"
  },
  {
    "text": "application so that's why it's useful from an authorization standpoint the more",
    "start": "991270",
    "end": "996850"
  },
  {
    "text": "obvious reason for looking at using encryption context is in cloud trail",
    "start": "996850",
    "end": "1002580"
  },
  {
    "text": "logs so cloud trail logs is our answer to prove to me that all my keys were used",
    "start": "1002580",
    "end": "1009840"
  },
  {
    "text": "properly in ways that I expect and what we do by default for all AWS",
    "start": "1009840",
    "end": "1016860"
  },
  {
    "text": "services that integrate with kms is we insert an encryption context it actually means something this is the resource",
    "start": "1016860",
    "end": "1024240"
  },
  {
    "text": "that you wanted to get encrypted now the actual data key that encrypted that resource is hidden and transparent to",
    "start": "1024240",
    "end": "1031290"
  },
  {
    "text": "you but that data key itself was wrapped underneath the kms master key and you",
    "start": "1031290",
    "end": "1037709"
  },
  {
    "text": "can see the key ID represented there that's the generic identifier but the",
    "start": "1037709",
    "end": "1042959"
  },
  {
    "text": "encryption context now tells you why that master key was used so you can start to build",
    "start": "1042959",
    "end": "1048800"
  },
  {
    "text": "anomaly detection mechanisms cloud trail log is going to cloud watch creating events you're looking for the absence of",
    "start": "1048800",
    "end": "1057300"
  },
  {
    "text": "encryption context or some modification that can trigger an alarm it might even trigger a lamb function we just had a",
    "start": "1057300",
    "end": "1064470"
  },
  {
    "text": "presentation in the other area where one of the security architects had a demo of",
    "start": "1064470",
    "end": "1069630"
  },
  {
    "text": "how this could all work - in many ways have your secure application self defend",
    "start": "1069630",
    "end": "1076770"
  },
  {
    "text": "against code errors by your application developers or unauthorized users",
    "start": "1076770",
    "end": "1081870"
  },
  {
    "text": "attempting to use your master keys inside Camus's so encryption context",
    "start": "1081870",
    "end": "1087330"
  },
  {
    "text": "very powerful concept we have a blog on the AWS security blog that goes",
    "start": "1087330",
    "end": "1092910"
  },
  {
    "text": "specifically around encryption context and all of its uses strongly recommend taking a look at that so let's move on",
    "start": "1092910",
    "end": "1099930"
  },
  {
    "text": "to the other requirements which is if the instance can launch the secret should be accessible and it should",
    "start": "1099930",
    "end": "1105570"
  },
  {
    "text": "happen within one minute so clearly we have kms in every commercial region",
    "start": "1105570",
    "end": "1112610"
  },
  {
    "text": "except China which we're working on you want to use kms endpoints within the",
    "start": "1112610",
    "end": "1118230"
  },
  {
    "text": "same region that your ec2 instances are running in remember that kms is a regional service you don't choose which",
    "start": "1118230",
    "end": "1123600"
  },
  {
    "text": "availability zone we ensure that kms is up and running and accessible from any",
    "start": "1123600",
    "end": "1129710"
  },
  {
    "text": "availability zone from a latency standpoint this is something where of course your mileage",
    "start": "1129710",
    "end": "1135900"
  },
  {
    "text": "may vary we're working as hard as we can to bring down latencies for lots of our",
    "start": "1135900",
    "end": "1142620"
  },
  {
    "text": "API calls again you need to look and see what you need for the total end-to-end",
    "start": "1142620",
    "end": "1147750"
  },
  {
    "text": "solution to either encrypt and write data or read and decrypt data and determine",
    "start": "1147750",
    "end": "1153950"
  },
  {
    "text": "whether or not you can afford a call to kms for each object to each data object",
    "start": "1153950",
    "end": "1160680"
  },
  {
    "text": "that your application is processing or whether you might want to reuse a data key inside your application in memory",
    "start": "1160680",
    "end": "1167370"
  },
  {
    "text": "for 5 10 20 some number of objects this reuse of data key or caching data keys",
    "start": "1167370",
    "end": "1174120"
  },
  {
    "text": "ends up being a what we'll call unnecessary evil in many cases because",
    "start": "1174120",
    "end": "1180210"
  },
  {
    "text": "your application just can't afford the latency of making yet another Network call we strongly recommend you to think",
    "start": "1180210",
    "end": "1186990"
  },
  {
    "text": "very hard about the reuse of data keys that changes the blast radius of that key it also changes the attack surface",
    "start": "1186990",
    "end": "1195120"
  },
  {
    "text": "on that key you should talk at length with your local security engineer to",
    "start": "1195120",
    "end": "1201960"
  },
  {
    "text": "understand whether this is a safe mechanism so a couple of the things that are useful when you're doing client-side",
    "start": "1201960",
    "end": "1208080"
  },
  {
    "start": "1204000",
    "end": "1204000"
  },
  {
    "text": "development we have a lot of customers that use the CLI we in the world of crypto we deal",
    "start": "1208080",
    "end": "1215280"
  },
  {
    "text": "with raw bytes the CLI often deals with base64 encoding so be aware of what",
    "start": "1215280",
    "end": "1221070"
  },
  {
    "text": "encoding changes are happening on the request rate side so by default we",
    "start": "1221070",
    "end": "1226860"
  },
  {
    "text": "throttle the data plane operations the encryption Eclipse at a hundred requests per second",
    "start": "1226860",
    "end": "1232130"
  },
  {
    "text": "now we're in the process of trying to raise this default and we can selectively raise this for you on an",
    "start": "1232130",
    "end": "1238860"
  },
  {
    "text": "account by account basis reach out to us via the support ticket and create a limit increase request and",
    "start": "1238860",
    "end": "1246150"
  },
  {
    "text": "we'll get in touch with you to understand your use case I want to talk about key aliases so the",
    "start": "1246150",
    "end": "1253170"
  },
  {
    "text": "arn format of a kms master key includes the 32 character good at the end not",
    "start": "1253170",
    "end": "1259230"
  },
  {
    "text": "particularly human readable we have a feature called kms aliases where you can do effectively a symlink from a human",
    "start": "1259230",
    "end": "1267450"
  },
  {
    "text": "readable string to a key ID now your application code can refer to the alias",
    "start": "1267450",
    "end": "1273300"
  },
  {
    "text": "and you can actually run the same code in different regions but have a mapping",
    "start": "1273300",
    "end": "1279240"
  },
  {
    "text": "of that alias to the regionally isolated KMS keys so this might make deployment",
    "start": "1279240",
    "end": "1284820"
  },
  {
    "text": "simpler as you go from region to region do be aware however that aliases are not",
    "start": "1284820",
    "end": "1290580"
  },
  {
    "text": "supported inside policies the reason for that is that the mapping of the alias",
    "start": "1290580",
    "end": "1295620"
  },
  {
    "text": "can happen independently of the editing of the policy we don't want to allow escalation and privilege",
    "start": "1295620",
    "end": "1303110"
  },
  {
    "start": "1302000",
    "end": "1302000"
  },
  {
    "text": "okay so now let's dig in a little bit to the authorization logic for kms",
    "start": "1303110",
    "end": "1309290"
  },
  {
    "text": "like I said before we think that the rules around how you determine who can use a key and",
    "start": "1309290",
    "end": "1315960"
  },
  {
    "text": "under what under which conditions is ultimately the best set of tools that you can use to secure your data",
    "start": "1315960",
    "end": "1322460"
  },
  {
    "text": "so we start with what we call the key policy so this is a policy that's actually attached to the key for those",
    "start": "1322460",
    "end": "1329670"
  },
  {
    "text": "of you familiar with s3 bucket policies it's a similar concept right a key policy is not an IM policy",
    "start": "1329670",
    "end": "1338960"
  },
  {
    "text": "it's important to remember and all authorization starts with the key policy",
    "start": "1338960",
    "end": "1344810"
  },
  {
    "text": "there's another type of policy which we call a grant and KMS and grants are a",
    "start": "1344810",
    "end": "1352110"
  },
  {
    "text": "new construct that are really designed to be used programmatically and they're",
    "start": "1352110",
    "end": "1357390"
  },
  {
    "text": "designed to be used when you have certain resources that go from in use to",
    "start": "1357390",
    "end": "1362790"
  },
  {
    "text": "at rest and there is a quite a bit of documentation on how grants are used",
    "start": "1362790",
    "end": "1368070"
  },
  {
    "text": "within AWS service integrations especially around EBS volumes RDS",
    "start": "1368070",
    "end": "1373290"
  },
  {
    "text": "databases redshift clusters right well we are trying to accomplish with grants",
    "start": "1373290",
    "end": "1379200"
  },
  {
    "text": "is to minimize any opportunity that AWS has in being able to use your kms keys",
    "start": "1379200",
    "end": "1386480"
  },
  {
    "text": "to decrypt something without your prior knowledge or authorization and so in",
    "start": "1386480",
    "end": "1394140"
  },
  {
    "text": "your application development you might have cases where you need to temporarily give somebody access or a lot of people",
    "start": "1394140",
    "end": "1399840"
  },
  {
    "text": "access to decrypt something but then take it away right and if you have some",
    "start": "1399840",
    "end": "1406170"
  },
  {
    "text": "of these use cases and constantly editing and updating policy documents sounds onerous take a look at kms grants",
    "start": "1406170",
    "end": "1413780"
  },
  {
    "text": "okay so the other thing about kms policies is you can delegate the",
    "start": "1413780",
    "end": "1422520"
  },
  {
    "text": "ability for an IM policy to be evaluated so this is a little bit confusing I've",
    "start": "1422520",
    "end": "1429510"
  },
  {
    "text": "got a diagram here hopefully you can read so inside the kms key policy you",
    "start": "1429510",
    "end": "1435900"
  },
  {
    "text": "can have a little statement that says allow any I M policies that refer to",
    "start": "1435900",
    "end": "1442610"
  },
  {
    "text": "kms keys and this key in particular to be evaluated we actually include that",
    "start": "1442610",
    "end": "1450690"
  },
  {
    "text": "statement by default in all kms key policies if you edit that out what that",
    "start": "1450690",
    "end": "1457440"
  },
  {
    "text": "means is if you have a bunch of IM users that you call admins and you assume that",
    "start": "1457440",
    "end": "1462670"
  },
  {
    "text": "they are going to go and administer kms keys they will quickly find that they cannot and they say well wait a second I",
    "start": "1462670",
    "end": "1469390"
  },
  {
    "text": "am I am star dot star I'm the most powerful person in the account what's going on here",
    "start": "1469390",
    "end": "1474960"
  },
  {
    "text": "and we did this on purpose because we feel that the kms master key over time",
    "start": "1474960",
    "end": "1481660"
  },
  {
    "text": "will be the most valuable piece of data that you store inside AWS and we want to",
    "start": "1481660",
    "end": "1487750"
  },
  {
    "text": "make sure you can look at a key policy and very easily understand exactly who",
    "start": "1487750",
    "end": "1493630"
  },
  {
    "text": "has control over that key so we enable you to define i.m policies because we",
    "start": "1493630",
    "end": "1501310"
  },
  {
    "text": "know that most customers have been doing that and feel comfortable doing that but for the very security-conscious it may",
    "start": "1501310",
    "end": "1507640"
  },
  {
    "text": "be appropriate to actually remove that statement and only define administrators",
    "start": "1507640",
    "end": "1512740"
  },
  {
    "text": "of a key inside the key policy itself ok",
    "start": "1512740",
    "end": "1518910"
  },
  {
    "text": "so now let's talk about key management options so this is bubbling up a little",
    "start": "1518910",
    "end": "1525010"
  },
  {
    "start": "1520000",
    "end": "1520000"
  },
  {
    "text": "bit we've been focusing on kms but I want to make sure you understand how",
    "start": "1525010",
    "end": "1530220"
  },
  {
    "text": "kms gives you certain advantages but could potentially come at a cost",
    "start": "1530220",
    "end": "1538140"
  },
  {
    "text": "so what I've done over the top is identify four categories kms Cloud HSM",
    "start": "1538140",
    "end": "1546060"
  },
  {
    "text": "partner solutions and whether they're delivered through marketplace or you deploy them on your own it's more or",
    "start": "1546060",
    "end": "1552280"
  },
  {
    "text": "less the same versus do-it-yourself so if you think about where encryption keys",
    "start": "1552280",
    "end": "1557380"
  },
  {
    "text": "are generated and stored and managed with kms we say we are going to do this",
    "start": "1557380",
    "end": "1562750"
  },
  {
    "text": "for you we do have a new feature where we let you generate an import and I'll",
    "start": "1562750",
    "end": "1568210"
  },
  {
    "text": "talk about that later but we handle all that part with cloud HSM all this",
    "start": "1568210",
    "end": "1575110"
  },
  {
    "text": "generation of storage is actually happening I dedicated appliance that's designed to be very difficult to break",
    "start": "1575110",
    "end": "1581290"
  },
  {
    "text": "into so strong physical and logical security with partner solutions either",
    "start": "1581290",
    "end": "1587200"
  },
  {
    "text": "the partner is hosting the key management or it could be some other application that's running in a unique",
    "start": "1587200",
    "end": "1593290"
  },
  {
    "text": "ec2 instance typically inside your account and certainly would do it yourself it doesn't matter where it's",
    "start": "1593290",
    "end": "1600290"
  },
  {
    "text": "running inside ec2 on premise you are in charge of both the physical and logical security of those keys",
    "start": "1600290",
    "end": "1606820"
  },
  {
    "text": "so where are the keys actually used who owns in the code that is performing the",
    "start": "1606820",
    "end": "1613460"
  },
  {
    "text": "encryption and decryption with kms master keys kms owns it we have to do",
    "start": "1613460",
    "end": "1620450"
  },
  {
    "text": "the encryption and decryption operation but inside your application with that data key is being used to encrypt your",
    "start": "1620450",
    "end": "1627040"
  },
  {
    "text": "application secret as an example that's your code with Cloud HSM the keys themselves are",
    "start": "1627040",
    "end": "1636950"
  },
  {
    "text": "used inside the device by code that is written by a third party and maintained by a third party so that's what happens",
    "start": "1636950",
    "end": "1644510"
  },
  {
    "text": "with the master key the local data key again is running inside an application that you own you'll notice that cloudy",
    "start": "1644510",
    "end": "1652340"
  },
  {
    "text": "HSM does not integrate with other AWS services and the reason for that is that",
    "start": "1652340",
    "end": "1657410"
  },
  {
    "text": "in order for an AWS service to use Cloud HSM that's service and all of the AWS",
    "start": "1657410",
    "end": "1663260"
  },
  {
    "text": "employees that manage that service have to have credentials to use your HSM and we think that for customers who want",
    "start": "1663260",
    "end": "1670550"
  },
  {
    "text": "the utmost and security from a physical security standpoint using HSMs it does",
    "start": "1670550",
    "end": "1676400"
  },
  {
    "text": "make a lot of sense for them to share credentials with an unknown number of service operators so that's why Cloud",
    "start": "1676400",
    "end": "1683990"
  },
  {
    "text": "HSM is really something that you've got to maintain on your own in terms of the keys as well as the client interfaces",
    "start": "1683990",
    "end": "1692350"
  },
  {
    "text": "so how do you do access control in these situations with kms it's",
    "start": "1692350",
    "end": "1699400"
  },
  {
    "text": "very similar to the way you do I am and we just talked about how keys have their",
    "start": "1699400",
    "end": "1704450"
  },
  {
    "text": "own policy and they can delegate to I am users with Cloud HSM this is very specific to the manufacturer of the HSM",
    "start": "1704450",
    "end": "1710630"
  },
  {
    "text": "in this case Gemalto SafeNet with partner solutions",
    "start": "1710630",
    "end": "1715640"
  },
  {
    "text": "or do it yourself again this is completely independent of AWS",
    "start": "1715640",
    "end": "1721870"
  },
  {
    "text": "authorization logic who is responsible for performance and scale all in the km/s example can you",
    "start": "1721870",
    "end": "1730150"
  },
  {
    "text": "rely on us to provide the performance and scale that you need",
    "start": "1730150",
    "end": "1735610"
  },
  {
    "text": "now in some cases if you need a ton of encryption",
    "start": "1735610",
    "end": "1741150"
  },
  {
    "text": "operations and we can't give you the requests per second that you need you might need to cache keys locally and",
    "start": "1741150",
    "end": "1746560"
  },
  {
    "text": "manage that yourself but in every other key management solution you're in charge",
    "start": "1746560",
    "end": "1753340"
  },
  {
    "text": "and as I mentioned the integration with AWS services only with kms do we have this",
    "start": "1753340",
    "end": "1759790"
  },
  {
    "text": "integration because only with kms can we ensure that we minimize those service",
    "start": "1759790",
    "end": "1765700"
  },
  {
    "text": "teams ability to use your keys in some unauthorized fashion we force those",
    "start": "1765700",
    "end": "1772600"
  },
  {
    "text": "service teams to use the same access control policies and the same nouns and verbs for authorization that",
    "start": "1772600",
    "end": "1780520"
  },
  {
    "text": "you have to use whenever you use any AWS service so it's all very consistent and very tightly controlled",
    "start": "1780520",
    "end": "1786990"
  },
  {
    "text": "finally from a pricing model in most cases kms is the only kind of",
    "start": "1786990",
    "end": "1793720"
  },
  {
    "text": "pay-per-use we're seeing a lot of changes in that area especially with marketplace solutions the model for the past two to three",
    "start": "1793720",
    "end": "1800950"
  },
  {
    "text": "decades has been by a specialized device and specialized hardware and run as many keys as it will handle",
    "start": "1800950",
    "end": "1807300"
  },
  {
    "text": "we say that from a master key standpoint you probably don't need a ton of keys in",
    "start": "1807300",
    "end": "1814150"
  },
  {
    "text": "fact most customers tend to get by with something less than 10 to 20 unless they",
    "start": "1814150",
    "end": "1820000"
  },
  {
    "text": "are themselves a service provider and they are trying to offer protection for their customers in which case they can",
    "start": "1820000",
    "end": "1827020"
  },
  {
    "text": "have thousands if not tens of thousands ok so let me talk a little about the",
    "start": "1827020",
    "end": "1834310"
  },
  {
    "start": "1832000",
    "end": "1832000"
  },
  {
    "text": "import key model so why did we build in porky well one of",
    "start": "1834310",
    "end": "1839980"
  },
  {
    "text": "the problems that customers came to us with was 'we have this KMS create key api and that's great and the feedback",
    "start": "1839980",
    "end": "1846280"
  },
  {
    "text": "that i get or the response that i get from the API is here's a key ID and here's the date it was created but I",
    "start": "1846280",
    "end": "1852970"
  },
  {
    "text": "have a couple of questions how do I know that the key that was created that's inside the service is different",
    "start": "1852970",
    "end": "1858650"
  },
  {
    "text": "then this guy's key or that guy's key prove to me that you are generating",
    "start": "1858650",
    "end": "1864260"
  },
  {
    "text": "unique keys well if you think about this it's impossible to prove that because",
    "start": "1864260",
    "end": "1870260"
  },
  {
    "text": "somebody would have to look at the keys and prove uniqueness and as I said before with kms there is no code that",
    "start": "1870260",
    "end": "1876710"
  },
  {
    "text": "will expose the plaintext copy of your key to anyone so we're stuck to some extent so we",
    "start": "1876710",
    "end": "1884630"
  },
  {
    "text": "wanted a way for customers to be responsible for the randomness of key generation we also want to make sure customers",
    "start": "1884630",
    "end": "1890900"
  },
  {
    "text": "could store a local copy we offer two independent storage locations for master keys Cave s keys",
    "start": "1890900",
    "end": "1898250"
  },
  {
    "text": "are the most durable thing in AWS but it's theoretically possible that we",
    "start": "1898250",
    "end": "1905750"
  },
  {
    "text": "could have some catastrophic event and lose your key which would mean that your data is lost as well so customers said",
    "start": "1905750",
    "end": "1911690"
  },
  {
    "text": "give me something that I can store somewhere else so the way kms import key works is you",
    "start": "1911690",
    "end": "1918800"
  },
  {
    "text": "generate a key we provide a secure way for you to import it into the service and you can set an optional expiration",
    "start": "1918800",
    "end": "1925580"
  },
  {
    "text": "time on the key that means that after that time expires the key cannot be used anywhere inside AWS and we enforce that",
    "start": "1925580",
    "end": "1933680"
  },
  {
    "text": "at the heart of the kms service once you import a key you import it",
    "start": "1933680",
    "end": "1939290"
  },
  {
    "text": "against a cmk key ID that's been created so this",
    "start": "1939290",
    "end": "1945500"
  },
  {
    "text": "imported key looks like any other key you would have been used to using inside kms use it with s3 use it with redshift",
    "start": "1945500",
    "end": "1952670"
  },
  {
    "text": "use it within your own applications doesn't matter works exactly the same and you can delete this key material but reom",
    "start": "1952670",
    "end": "1960950"
  },
  {
    "text": "port it under the same key ID at any time so now you have a way to have a key",
    "start": "1960950",
    "end": "1967700"
  },
  {
    "text": "available for encryption operations remove it so that nobody",
    "start": "1967700",
    "end": "1973450"
  },
  {
    "text": "your users AWS employees nobody is going to be able to decrypt that data until",
    "start": "1973450",
    "end": "1979370"
  },
  {
    "text": "you rien port the key material now of course getting keys out of",
    "start": "1979370",
    "end": "1985070"
  },
  {
    "text": "existing systems you want to make sure that those are secure systems most of our customers that want to use this",
    "start": "1985070",
    "end": "1990710"
  },
  {
    "text": "feature are using some of the standard HSM providers and key management infrastructure providers like safe net",
    "start": "1990710",
    "end": "1997670"
  },
  {
    "text": "Gemalto and Tallis II security so we are using standards-based approaches to let you take keys out of your existing key",
    "start": "1997670",
    "end": "2005170"
  },
  {
    "text": "management infrastructure and import it into kms so let me just quickly go through what the workflow looks like",
    "start": "2005170",
    "end": "2011410"
  },
  {
    "start": "2007000",
    "end": "2007000"
  },
  {
    "text": "here you'll call a create key API but set an optional parameter that says this",
    "start": "2011410",
    "end": "2017320"
  },
  {
    "text": "origin of this key is external that means we've got a key ID and all the metadata for a key but there's actually",
    "start": "2017320",
    "end": "2023260"
  },
  {
    "text": "no key then we're going to ask you to download a public key that is actually unique to",
    "start": "2023260",
    "end": "2031030"
  },
  {
    "text": "this key ID this is not one public key for all customers on the world or the region this is actually unique to you",
    "start": "2031030",
    "end": "2037780"
  },
  {
    "text": "and unique to this key you then pass that public key into your key management",
    "start": "2037780",
    "end": "2042790"
  },
  {
    "text": "infrastructure and tell it send me back an encrypted copy of a 256-bit key",
    "start": "2042790",
    "end": "2049320"
  },
  {
    "text": "and this is a standard format that every HSM provider already provides",
    "start": "2049320",
    "end": "2056648"
  },
  {
    "text": "natively now you've got an encrypted blob and you pass it under the import key API",
    "start": "2056649",
    "end": "2062638"
  },
  {
    "text": "we will decrypt it using the private portion of that blue RSA public key and",
    "start": "2062639",
    "end": "2068158"
  },
  {
    "text": "then we will take your key and encrypt it under our key hierarchy copy it to",
    "start": "2068159",
    "end": "2074200"
  },
  {
    "text": "multiple locations so that for the period that you want that key to be valid we don't lose it",
    "start": "2074200",
    "end": "2081358"
  },
  {
    "text": "okay so in summary try to identify your",
    "start": "2081359",
    "end": "2089290"
  },
  {
    "text": "confidentiality integrity availability requirements up front in many cases if",
    "start": "2089290",
    "end": "2095440"
  },
  {
    "text": "you're working with partners or other customers as a service provider you need to work with them use envelope",
    "start": "2095440",
    "end": "2101080"
  },
  {
    "text": "encryption as a way to limit your blast radius encryption context can't reinforce us",
    "start": "2101080",
    "end": "2108340"
  },
  {
    "text": "enough this is super important to make sure you have a complete audit story as well as the best opportunity to scope",
    "start": "2108340",
    "end": "2116950"
  },
  {
    "text": "down access control policies on the keys if you need to be able to generate your",
    "start": "2116950",
    "end": "2122619"
  },
  {
    "text": "own keys and store a copy considering porky and finally as you",
    "start": "2122619",
    "end": "2128240"
  },
  {
    "text": "build your applications take a look at what's coming out the back end in cloud trail verify that all the log events and",
    "start": "2128240",
    "end": "2135980"
  },
  {
    "text": "there are actually telling you a story that will convince your auditors and your customers that's what you need to do okay",
    "start": "2135980",
    "end": "2142480"
  },
  {
    "text": "at this point I'm going to bring up Corey and he's going to tell you about how box is trying to solve this problem",
    "start": "2142480",
    "end": "2149599"
  },
  {
    "text": "of data protection and security for their customers okay thank you",
    "start": "2149599",
    "end": "2155500"
  },
  {
    "text": "hello everyone my name is Corey Ming kovitch I'm a staff software engineer at box and I'm going to be presenting box",
    "start": "2159250",
    "end": "2165920"
  },
  {
    "text": "key safe or how kms saved us for managing HSMs a lot of you already know",
    "start": "2165920",
    "end": "2171530"
  },
  {
    "text": "what box does but box is a modern content management platform that transforms how organizations work and",
    "start": "2171530",
    "end": "2178039"
  },
  {
    "text": "collaborate to achieve results faster I like to think of box as the heart of the",
    "start": "2178039",
    "end": "2183710"
  },
  {
    "text": "modern enterprise application by centralizing where your contents stored we provide the same security and",
    "start": "2183710",
    "end": "2190369"
  },
  {
    "text": "compliance to every single application take for example DocuSign and salesforce when they both store their content with",
    "start": "2190369",
    "end": "2197900"
  },
  {
    "text": "box you know they meet the exact same security requirements let's take a look at a specific example of how those works",
    "start": "2197900",
    "end": "2206079"
  },
  {
    "text": "here is a highly regulated industry a healthcare industry and they want to",
    "start": "2206079",
    "end": "2212029"
  },
  {
    "text": "make a simple application for their customers instead of having to reinvent the wheel they can leverage box to meet",
    "start": "2212029",
    "end": "2218630"
  },
  {
    "text": "their compliance requirements and by utilizing the Box platform they can get easy content management collaboration",
    "start": "2218630",
    "end": "2224930"
  },
  {
    "text": "and security deliver to their customers while knowing they meet all the HIPAA requirements but other industries are",
    "start": "2224930",
    "end": "2232309"
  },
  {
    "text": "even more regulated and require the company to manage their own encryption so historically customer managed",
    "start": "2232309",
    "end": "2240049"
  },
  {
    "start": "2237000",
    "end": "2237000"
  },
  {
    "text": "encryption has been pretty hard your choice has been between client-side agents that sit on your computer and",
    "start": "2240049",
    "end": "2245900"
  },
  {
    "text": "basically wrap the box sync app and every time you want to store a file it",
    "start": "2245900",
    "end": "2251329"
  },
  {
    "text": "encrypts it before it gets sent to box and every time you download it it gets decrypted before arrives at your",
    "start": "2251329",
    "end": "2257180"
  },
  {
    "text": "computer but the problem is this breaks the mobile experience and this breaks",
    "start": "2257180",
    "end": "2262280"
  },
  {
    "text": "the web app another solution is proxy based encryption where as basically a",
    "start": "2262280",
    "end": "2267890"
  },
  {
    "text": "VPN that sits in front of box where customers upload and as long as their",
    "start": "2267890",
    "end": "2273650"
  },
  {
    "text": "connect to the VPN it'll encrypt it and when they're accessing that content",
    "start": "2273650",
    "end": "2278660"
  },
  {
    "text": "it'll get decrypted again but the problem is this breaks collaboration imagine if you're trying to share",
    "start": "2278660",
    "end": "2285590"
  },
  {
    "text": "document with a vendor and you send them an invoice they're not going to be connected to the same VPN they're not",
    "start": "2285590",
    "end": "2291140"
  },
  {
    "text": "going to be able to access that content a third interesting solution is api",
    "start": "2291140",
    "end": "2296570"
  },
  {
    "text": "after upload if you can selectively classify the documents you have that",
    "start": "2296570",
    "end": "2302630"
  },
  {
    "text": "need additional security what you can do is have a independent process override",
    "start": "2302630",
    "end": "2308030"
  },
  {
    "text": "those files with encrypted versions but again you never know what's actually going to be encrypted and if the",
    "start": "2308030",
    "end": "2314210"
  },
  {
    "text": "classification doesn't really work you're going to run into problems with collaboration",
    "start": "2314210",
    "end": "2320440"
  },
  {
    "start": "2320000",
    "end": "2320000"
  },
  {
    "text": "so there's a couple drawbacks to these historic solutions they decrease productivity needs two",
    "start": "2320920",
    "end": "2328070"
  },
  {
    "text": "views by breaking file preview and the mobile access and nowadays most",
    "start": "2328070",
    "end": "2335870"
  },
  {
    "text": "access to content people just expect the mobile experience to be working they",
    "start": "2335870",
    "end": "2341120"
  },
  {
    "text": "actually decrease overall security by breaking antivirus if we can't scan the content then we can't provide antivirus",
    "start": "2341120",
    "end": "2348170"
  },
  {
    "text": "on it they break government controls because ediscovery is based on text",
    "start": "2348170",
    "end": "2353960"
  },
  {
    "text": "search and if we can't do text search over the content then ediscovery can't work but the bigger problem is the",
    "start": "2353960",
    "end": "2361160"
  },
  {
    "text": "incentivization for shadow IT if you're going to go on a plane ride you need to edit your powerpoint you're most likely",
    "start": "2361160",
    "end": "2368000"
  },
  {
    "text": "going to download it and maybe even email it to yourself to your personal gmail account just so you know you have",
    "start": "2368000",
    "end": "2373280"
  },
  {
    "text": "access because you don't trust the historic solutions so let me introduce box key safe and how",
    "start": "2373280",
    "end": "2380540"
  },
  {
    "text": "we allow customers to manage their own encryption I'm going to go through a four step process of how a file gets",
    "start": "2380540",
    "end": "2387350"
  },
  {
    "text": "uploaded to box and cryptid and how we interact with a customer's kms instance",
    "start": "2387350",
    "end": "2393059"
  },
  {
    "text": "or cloud HSN instance so step one a files uploaded and as Ken pointed out",
    "start": "2393059",
    "end": "2399440"
  },
  {
    "text": "envelope encryption is the right solution for a lot especially arbitrary",
    "start": "2399440",
    "end": "2404670"
  },
  {
    "text": "sized files so we create a brand-new data encryption key for that file we encrypt it once a box and then it gets",
    "start": "2404670",
    "end": "2412260"
  },
  {
    "text": "sent over to either a kms or cloud HSM this creates an audit trail",
    "start": "2412260",
    "end": "2418670"
  },
  {
    "text": "that the customer sees and what you see is a clear separation of encryption responsibilities and instead of",
    "start": "2418670",
    "end": "2425520"
  },
  {
    "text": "modifying the front door and damaging the user experience what we've created as a seamless backend",
    "start": "2425520",
    "end": "2431490"
  },
  {
    "text": "integration that allows the customer to maintain the ultimate control over their data",
    "start": "2431490",
    "end": "2437030"
  },
  {
    "text": "let's dive a little bit deeper to see how encryption works a box and we're",
    "start": "2437030",
    "end": "2443250"
  },
  {
    "text": "going to go in a comparison of standard encryption and if you add clouded you",
    "start": "2443250",
    "end": "2448290"
  },
  {
    "text": "SEM and if you add kms and how those differ between each other so",
    "start": "2448290",
    "end": "2453380"
  },
  {
    "text": "the native box encryption is vanilla envelope encryption as I like to call it",
    "start": "2453380",
    "end": "2459329"
  },
  {
    "text": "a file gets uploaded a unique data encryption key is generated that vial is",
    "start": "2459329",
    "end": "2465599"
  },
  {
    "text": "encrypted with that data encryption key and stored then the data encryption key itself is encrypted with a box key",
    "start": "2465599",
    "end": "2472740"
  },
  {
    "text": "encryption key and that's stored but we wanted to allow the customer to control",
    "start": "2472740",
    "end": "2478530"
  },
  {
    "text": "part of this flow to have the ultimate on/off button so we've done in the cloud HSM case is",
    "start": "2478530",
    "end": "2487940"
  },
  {
    "text": "we still upload a file create a unique data encryption key and still encrypt at",
    "start": "2487940",
    "end": "2493290"
  },
  {
    "text": "once but then we add a second layer of encryption using in this case Gemalto HSM so we take that single encrypted",
    "start": "2493290",
    "end": "2502200"
  },
  {
    "text": "data encryption key and send it to the Gemalto HSM that creates a log that can",
    "start": "2502200",
    "end": "2507359"
  },
  {
    "text": "go to some to the customers Splunk instance and then if they need to back",
    "start": "2507359",
    "end": "2513809"
  },
  {
    "text": "up that HSM they can create a backup HSM and instantiate it into as many regions",
    "start": "2513809",
    "end": "2518819"
  },
  {
    "text": "as they now managing HSMs is historically been",
    "start": "2518819",
    "end": "2524619"
  },
  {
    "text": "quite difficult and a lot of customers are not at the right size to manage a whole group of HSMs so we've realized is",
    "start": "2524619",
    "end": "2533440"
  },
  {
    "text": "the way that we use the HSN's kms is a perfect fit to be swapped out so we send",
    "start": "2533440",
    "end": "2540609"
  },
  {
    "text": "the singly encrypted key to kms for additional layer of encryption along with audit parameters and here there's",
    "start": "2540609",
    "end": "2547960"
  },
  {
    "text": "cloud trail to generate these audit logs that feed into the customer and with the new key importation feature they could",
    "start": "2547960",
    "end": "2554890"
  },
  {
    "text": "also use their backup HSM to import into kms now let's compare contrast from Bach's",
    "start": "2554890",
    "end": "2562390"
  },
  {
    "text": "point of view cloud HSM and kms and before I start there's a lot of benefits",
    "start": "2562390",
    "end": "2567999"
  },
  {
    "text": "to cloud HSM you get level 2/5 validation and Phipps validation for",
    "start": "2567999",
    "end": "2573759"
  },
  {
    "text": "hardware is quite difficult you also get single tenancy where that",
    "start": "2573759",
    "end": "2579819"
  },
  {
    "text": "HSM belongs to you and you know how many requests per second it can handle so kms",
    "start": "2579819",
    "end": "2586359"
  },
  {
    "text": "as Ken said the default rate is a hundred but that can be increased much larger than that and is for a lot of",
    "start": "2586359",
    "end": "2593170"
  },
  {
    "text": "customers cloudy HSM on on their hand is quite slow especially with audit",
    "start": "2593170",
    "end": "2600519"
  },
  {
    "text": "logging there's special patches you can apply but most customers end up running a cluster of three to six HSMs",
    "start": "2600519",
    "end": "2608130"
  },
  {
    "text": "the biggest difference is kind of the reliability where AWS is managing kms of",
    "start": "2608130",
    "end": "2615220"
  },
  {
    "text": "scaling of making sure that it's up while Cloud Aegis ends have to be",
    "start": "2615220",
    "end": "2620619"
  },
  {
    "text": "managed by the customer that means they must manage patching they must manage high availability and",
    "start": "2620619",
    "end": "2626309"
  },
  {
    "text": "then as from our side we have to support every HSM version and different versions",
    "start": "2626309",
    "end": "2632440"
  },
  {
    "text": "require different client library so it becomes much harder for us let me give you an anecdote to kind of",
    "start": "2632440",
    "end": "2640630"
  },
  {
    "text": "show the difference between the two we recently had to update the HSM client",
    "start": "2640630",
    "end": "2646059"
  },
  {
    "text": "library the Java library so we went to the Gemalto support site we searched for their library we found a library that",
    "start": "2646059",
    "end": "2653529"
  },
  {
    "text": "seemed to be New York we downloaded it it's password-protected so after a few",
    "start": "2653529",
    "end": "2658989"
  },
  {
    "text": "e-mails back and forth we got a password we decrypted it we got a Windows binary",
    "start": "2658989",
    "end": "2665979"
  },
  {
    "text": "so we could accept a EULA we then accepted it on a Windows VM then that",
    "start": "2665979",
    "end": "2672849"
  },
  {
    "text": "gave us at our and inside of that tar we finally got our jar",
    "start": "2672849",
    "end": "2678359"
  },
  {
    "text": "so I'll go a little bit further about our",
    "start": "2678359",
    "end": "2685569"
  },
  {
    "text": "architecture and how we communicate to these HSMs to maintain high availability and the performance expectation of",
    "start": "2685569",
    "end": "2693039"
  },
  {
    "text": "people using box because people don't want the performance to be degraded just",
    "start": "2693039",
    "end": "2698589"
  },
  {
    "text": "because they're adding extra security so a box we have something called the key",
    "start": "2698589",
    "end": "2706059"
  },
  {
    "text": "encryption decryption service and I want to show how we communicate with kms and",
    "start": "2706059",
    "end": "2711130"
  },
  {
    "text": "cloud at HSM what we do for each HSM customer is we",
    "start": "2711130",
    "end": "2717099"
  },
  {
    "text": "spin up a new H sub connector and this is because the gemalto library use",
    "start": "2717099",
    "end": "2722200"
  },
  {
    "text": "environment variables for configuration what it also does is it provides",
    "start": "2722200",
    "end": "2727509"
  },
  {
    "text": "isolation between different customers if there's a crash and takes out the JVM it",
    "start": "2727509",
    "end": "2733749"
  },
  {
    "text": "only won't impact more than one customer then secondly each inside each one of",
    "start": "2733749",
    "end": "2740739"
  },
  {
    "text": "these HSM connectors we talk to each HSM individually that way if one of them",
    "start": "2740739",
    "end": "2747309"
  },
  {
    "text": "locks up we can quickly fall back to another one without the customer realizing it if you compare this to kms",
    "start": "2747309",
    "end": "2755319"
  },
  {
    "text": "it's just a restful call using the SDK so let's dive a little bit deeper into the",
    "start": "2755319",
    "end": "2762910"
  },
  {
    "text": "kms code so health checking is one of the most",
    "start": "2762910",
    "end": "2768009"
  },
  {
    "start": "2765000",
    "end": "2765000"
  },
  {
    "text": "crucial parts at least for box of knowing if the customers kms is",
    "start": "2768009",
    "end": "2773529"
  },
  {
    "text": "accessible and we can use it this is a snippet of Scala code but what it",
    "start": "2773529",
    "end": "2778539"
  },
  {
    "text": "basically does is it does the describe key on the kms we're trying to talk to and then it checks of the key is enabled",
    "start": "2778539",
    "end": "2785870"
  },
  {
    "text": "and if we can perform encrypts and decrypts",
    "start": "2785870",
    "end": "2789760"
  },
  {
    "text": "the other thing we use is cloud trail logging so in this case we want to send",
    "start": "2792040",
    "end": "2800090"
  },
  {
    "text": "a set of four things that will want to appear at an annotation to cloud trail",
    "start": "2800090",
    "end": "2807010"
  },
  {
    "text": "for example we send the request ID an object ID we're trying to access the",
    "start": "2807010",
    "end": "2813320"
  },
  {
    "text": "enterprise ID request they get and the user ID we convert that to JSON and we put it in",
    "start": "2813320",
    "end": "2819890"
  },
  {
    "text": "a header called the cloud trail annotation what happens is when Amazon",
    "start": "2819890",
    "end": "2825830"
  },
  {
    "text": "gets this request it takes that header and when you're looking at your cloud trail logs you'll just see this JSON",
    "start": "2825830",
    "end": "2832400"
  },
  {
    "text": "expand it out now there have been some challenges with",
    "start": "2832400",
    "end": "2839930"
  },
  {
    "text": "using kms there's two specific challenges that I wanted to talk about one of them is key",
    "start": "2839930",
    "end": "2848030"
  },
  {
    "text": "rotation so natively at kms supports yearly rotation but some customers want",
    "start": "2848030",
    "end": "2856190"
  },
  {
    "text": "quarterly rotation and the only way to do that is to create additional master keys and that can be really cumbersome",
    "start": "2856190",
    "end": "2864520"
  },
  {
    "text": "furthermore some compliance schemes require that the data encryption keys",
    "start": "2864520",
    "end": "2870110"
  },
  {
    "text": "beery encrypted after the key has been rotated the issue with these bulk rekey",
    "start": "2870110",
    "end": "2876770"
  },
  {
    "text": "operations is that only cloud trail knows that the key rotations happen as",
    "start": "2876770",
    "end": "2882520"
  },
  {
    "text": "of now there's no way to tell if an encrypted blob was created before or after the key rotation and the only safe",
    "start": "2882520",
    "end": "2890600"
  },
  {
    "text": "way for us is just to go and Riaan crypt all the data keys over that period",
    "start": "2890600",
    "end": "2897520"
  },
  {
    "text": "the second concern that some customers have is key availability and ken has",
    "start": "2897520",
    "end": "2903200"
  },
  {
    "start": "2898000",
    "end": "2898000"
  },
  {
    "text": "addressed that a little bit with key import KMS keys are regionally isolated",
    "start": "2903200",
    "end": "2909760"
  },
  {
    "text": "it has high availability within the region but some customers wanted more control but luckily they can use key",
    "start": "2909760",
    "end": "2918170"
  },
  {
    "text": "import the one problem with key import is that it breaks simple key rotation you don't",
    "start": "2918170",
    "end": "2924199"
  },
  {
    "text": "get a simple check box that says rotate this key yearly and then you have to",
    "start": "2924199",
    "end": "2929930"
  },
  {
    "text": "create multiple master keys and this is not easy to automate on our side",
    "start": "2929930",
    "end": "2935900"
  },
  {
    "text": "or on the customer side ok let me summarize key say for you by",
    "start": "2935900",
    "end": "2942559"
  },
  {
    "text": "integrating with AWS cloud HSM and kms this is a loud box to give the customer",
    "start": "2942559",
    "end": "2950089"
  },
  {
    "text": "a guaranteed audit trail the ultimate access control and",
    "start": "2950089",
    "end": "2955299"
  },
  {
    "text": "it was easy to incorporate into envelope encryption at box we don't cache data",
    "start": "2955299",
    "end": "2961430"
  },
  {
    "text": "keys and we have third-party auditors that come and audit or a code to verify this to give the customer the",
    "start": "2961430",
    "end": "2967789"
  },
  {
    "text": "reassurance this did have some trade-offs we have a minor latency increase because we have to call these",
    "start": "2967789",
    "end": "2973729"
  },
  {
    "text": "sir services and it did increase the availability surface area because you",
    "start": "2973729",
    "end": "2979339"
  },
  {
    "text": "are talking to two additional services but these trade-offs are much more palatable to the end-user when compared",
    "start": "2979339",
    "end": "2986089"
  },
  {
    "text": "to customer managed encryption historic way of doing it",
    "start": "2986089",
    "end": "2991839"
  },
  {
    "text": "thank you very much if you want to email me or the team just send an email to",
    "start": "2991839",
    "end": "2997039"
  },
  {
    "text": "Keds a box and remember to complete your evaluations if",
    "start": "2997039",
    "end": "3002469"
  },
  {
    "text": "there are any questions there's two microphones in this room and Ken can come up and answer any questions",
    "start": "3002469",
    "end": "3011079"
  },
  {
    "text": "you might have [Applause]",
    "start": "3011079",
    "end": "3017449"
  }
]