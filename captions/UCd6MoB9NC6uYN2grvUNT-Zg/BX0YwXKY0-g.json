[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "hello folks I'm Dave I've been doing security specialist a saying in security",
    "start": "0",
    "end": "7230"
  },
  {
    "text": "and compliance at SAE at AWS for about three and a quarter years now and I've",
    "start": "7230",
    "end": "13139"
  },
  {
    "text": "been doing security in general for probably a quarter of a century longer than that so I've been around the block",
    "start": "13139",
    "end": "19380"
  },
  {
    "text": "a few times and done a whole bunch of projects in a whole bunch of industries this talk is intended to follow along",
    "start": "19380",
    "end": "26519"
  },
  {
    "text": "from Paul's previous session which I hope a great many of you were here for and enjoyed a little observation to",
    "start": "26519",
    "end": "34230"
  },
  {
    "text": "begin with actually I mean there's an old saying in security that security is 70% people policy and procedure and 30%",
    "start": "34230",
    "end": "41610"
  },
  {
    "text": "what you do to the computers I hope I can help convince you during this",
    "start": "41610",
    "end": "47250"
  },
  {
    "text": "session that if you apply appropriate security controls that AWS offers you",
    "start": "47250",
    "end": "52440"
  },
  {
    "text": "and do a bunch of automation around them then that's probably more a 60/40 split now but certainly when it comes to",
    "start": "52440",
    "end": "60480"
  },
  {
    "text": "actually doing DevOps and then putting security into the middle of it there is",
    "start": "60480",
    "end": "66030"
  },
  {
    "text": "from a people perspective there is probably no greater motivation for a developer to write tight and secure code",
    "start": "66030",
    "end": "72780"
  },
  {
    "text": "than knowing he's going to have to run and maintain it in production but anyway on with on with the session I've got a",
    "start": "72780",
    "end": "80820"
  },
  {
    "text": "fabok to get through today so I am going to have to go fairly quickly apologies",
    "start": "80820",
    "end": "87810"
  },
  {
    "text": "to the lady translating into Hebrew in the corner I hope she's not going to",
    "start": "87810",
    "end": "93900"
  },
  {
    "text": "have a hard to harder time keeping up so I'm going to start actually with a nice",
    "start": "93900",
    "end": "100619"
  },
  {
    "text": "piece of good news which is the AWS service application repository this is",
    "start": "100619",
    "end": "106920"
  },
  {
    "start": "102000",
    "end": "132000"
  },
  {
    "text": "something that we launched without a great deal of fanfare to be honest about",
    "start": "106920",
    "end": "112100"
  },
  {
    "text": "two two and a half weeks ago who here is hands up please who here is",
    "start": "112100",
    "end": "117600"
  },
  {
    "text": "actually looking at it using it who's had a place over not a one okay well as",
    "start": "117600",
    "end": "125490"
  },
  {
    "text": "I said he launched without no fanfare the no fanfare was clearly very loud well the silence was clearly very loudly",
    "start": "125490",
    "end": "131520"
  },
  {
    "text": "heard but what you end up actually having is a new",
    "start": "131520",
    "end": "137010"
  },
  {
    "text": "online essentially a portal which gives you access to a whole bunch of lambda",
    "start": "137010",
    "end": "143970"
  },
  {
    "text": "functions and other capabilities and I expect at some point there'll be things",
    "start": "143970",
    "end": "149040"
  },
  {
    "text": "like API gateways swagga definitions and so forth coming along as well although everything gets packaged up as Sam which",
    "start": "149040",
    "end": "155069"
  },
  {
    "text": "I'll get on to in a moment so we have our service application repository there",
    "start": "155069",
    "end": "160560"
  },
  {
    "text": "it is go have a look at it and and you if you actually log into your AWS",
    "start": "160560",
    "end": "165750"
  },
  {
    "text": "environment and open it up you'll find just tons and tons and tons about a",
    "start": "165750",
    "end": "171030"
  },
  {
    "text": "hundred and eighty of them so far of lambda functions wrapped up in Sam with",
    "start": "171030",
    "end": "178010"
  },
  {
    "text": "API gateway definitions potentially DynamoDB definitions as well and and you",
    "start": "178010",
    "end": "185190"
  },
  {
    "text": "you also from the point of view of Sam can go here in order to actually get the details on what it is how to use it and",
    "start": "185190",
    "end": "192360"
  },
  {
    "text": "how to package your environments all these functions here are free to use",
    "start": "192360",
    "end": "197970"
  },
  {
    "text": "it's a condition of of functions being published in the service application",
    "start": "197970",
    "end": "204329"
  },
  {
    "text": "repository that the source code for them is made available so even if a function",
    "start": "204329",
    "end": "209790"
  },
  {
    "text": "in here doesn't exactly fit your workload requirement you should be able to download the version from here open",
    "start": "209790",
    "end": "217859"
  },
  {
    "text": "it up look at the documentation see where the source code is go get that and modify it to your requirements",
    "start": "217859",
    "end": "224450"
  },
  {
    "text": "everything in here also is MIT Lite well all the all the AWS functions that are",
    "start": "224450",
    "end": "230579"
  },
  {
    "text": "in here that we actually wrote to seed the repository to begin with are MIT license so again you can look at them",
    "start": "230579",
    "end": "238680"
  },
  {
    "text": "and make use of them for your own purposes so Sam if you haven't come",
    "start": "238680",
    "end": "243959"
  },
  {
    "start": "241000",
    "end": "274000"
  },
  {
    "text": "across it everyone here familiar with our favorites to our favorite squirrel",
    "start": "243959",
    "end": "249260"
  },
  {
    "text": "not that many again it's an abstraction on cloud formation that's intended primarily for making easily reproducible",
    "start": "249260",
    "end": "257729"
  },
  {
    "text": "and easily software deployable and automatable service frameworks easy to",
    "start": "257729",
    "end": "264719"
  },
  {
    "text": "deploy so it abstract on CloudFormation as mentioned specifically to deal with lambda",
    "start": "264719",
    "end": "271130"
  },
  {
    "text": "functions API gateways DynamoDB tables and Sam also incorporates its own",
    "start": "271130",
    "end": "277850"
  },
  {
    "start": "274000",
    "end": "304000"
  },
  {
    "text": "mechanism for actually doing event triggering it supports the usual",
    "start": "277850",
    "end": "282890"
  },
  {
    "text": "suspects that you would expect and a bunch more so you can actually trigger",
    "start": "282890",
    "end": "287930"
  },
  {
    "text": "in Sam lambda functions based on IOT and",
    "start": "287930",
    "end": "293120"
  },
  {
    "text": "it even integrates with the alexis skills framework so again you can go",
    "start": "293120",
    "end": "298300"
  },
  {
    "text": "packaging a lexer integration capability up as Sam and trigger on a skill",
    "start": "298300",
    "end": "303350"
  },
  {
    "text": "invocation for offline testing and simulation Paul is a very modest chap",
    "start": "303350",
    "end": "309410"
  },
  {
    "start": "304000",
    "end": "358000"
  },
  {
    "text": "our previous presenter he's actually the co-author of Sam local which enables you",
    "start": "309410",
    "end": "315950"
  },
  {
    "text": "to actually stand up your Sam prototype environment in a simulated lambda and",
    "start": "315950",
    "end": "324320"
  },
  {
    "text": "API gateway world that's all based on docker containers and I know because he",
    "start": "324320",
    "end": "330080"
  },
  {
    "text": "does it himself it's small and light enough that it can be run on a fairly serious laptop by the way when it comes",
    "start": "330080",
    "end": "338750"
  },
  {
    "text": "to when it comes to slides and so forth these slides will be published after the",
    "start": "338750",
    "end": "344060"
  },
  {
    "text": "summit so unless you have immediate need of going and looking at what's in any of",
    "start": "344060",
    "end": "349580"
  },
  {
    "text": "these links don't worry about taking photos I don't mind if you do but the",
    "start": "349580",
    "end": "354590"
  },
  {
    "text": "slides will be available so you can save yourself some hassle if you want to moving on to development and continuous",
    "start": "354590",
    "end": "361820"
  },
  {
    "start": "358000",
    "end": "518000"
  },
  {
    "text": "integration and continuous deployment environments this really is what DevOps",
    "start": "361820",
    "end": "368390"
  },
  {
    "text": "is all about and also why you need to go putting security right in there from the beginning because as we all know DevOps",
    "start": "368390",
    "end": "376190"
  },
  {
    "text": "is intended to move fast from actually doing multiple deployments a day while multiple multiple deployments a minute",
    "start": "376190",
    "end": "383030"
  },
  {
    "text": "in the case of some organizations through to monitoring performance monitoring behavior feeding back and",
    "start": "383030",
    "end": "390530"
  },
  {
    "text": "then actually reintegrating so you wind up actually having a very fast feedback loop there's two things about this from",
    "start": "390530",
    "end": "398270"
  },
  {
    "text": "a security perspective first if you stops doing things like putting",
    "start": "398270",
    "end": "403819"
  },
  {
    "text": "an extra security stage on the end of your loop your DevOps guys won't like it",
    "start": "403819",
    "end": "408889"
  },
  {
    "text": "I mean it'll slow your loop down or at least it'll be perceived as slowing the loop down because you've got this extra",
    "start": "408889",
    "end": "415069"
  },
  {
    "text": "stage and they will probably try doing timing on it and second in security",
    "start": "415069",
    "end": "421909"
  },
  {
    "text": "these days you can't be the abominable no man you can't be a blocker in the way",
    "start": "421909",
    "end": "427789"
  },
  {
    "text": "of stuff getting done otherwise people will go around you and to be honest if you get in their way it's not good for",
    "start": "427789",
    "end": "435349"
  },
  {
    "text": "the code for your organization as a whole so what you actually need to do is",
    "start": "435349",
    "end": "440419"
  },
  {
    "text": "make the desirable way of doing something also be the secure way of",
    "start": "440419",
    "end": "445550"
  },
  {
    "text": "doing something by default if your developers want to use tools that you",
    "start": "445550",
    "end": "452360"
  },
  {
    "text": "don't make available see what those tools do see if their security is appropriate if it is use it let them use",
    "start": "452360",
    "end": "460310"
  },
  {
    "text": "it if there's something that you think is more secure then bring it in-house and give it give it them so they can the",
    "start": "460310",
    "end": "467419"
  },
  {
    "text": "best way to stop someone using a tool that you don't want them to use is to offer them something better and I'm",
    "start": "467419",
    "end": "475219"
  },
  {
    "text": "speaking from experience on that and the other thing of course is again because the DevOps cycle is intended to be fast",
    "start": "475219",
    "end": "482089"
  },
  {
    "text": "if you go taking your production deployment environment and you're running in a",
    "start": "482089",
    "end": "488029"
  },
  {
    "text": "DevOps and securing it using all our appropriate recommendations for whatever",
    "start": "488029",
    "end": "493719"
  },
  {
    "text": "industry and compliance requirements you need to operate within and you then go",
    "start": "493719",
    "end": "499819"
  },
  {
    "text": "opening that up for the output of your development environment then unless your",
    "start": "499819",
    "end": "505849"
  },
  {
    "text": "development environment has appropriate security controls in it you're going to find yourself in an insecure state very",
    "start": "505849",
    "end": "512149"
  },
  {
    "text": "very fast so again this is why actually security of your development lifecycle",
    "start": "512149",
    "end": "518719"
  },
  {
    "start": "518000",
    "end": "583000"
  },
  {
    "text": "is really really important but we have to hit a pragmatic balance point to do",
    "start": "518719",
    "end": "524750"
  },
  {
    "text": "appropriate security while not getting in people's way so I'm going to run",
    "start": "524750",
    "end": "529819"
  },
  {
    "text": "through a few things that we can actually do to were put security controls in place in a",
    "start": "529819",
    "end": "537520"
  },
  {
    "text": "devops environment this is actually a little bit deeper than I've gone before",
    "start": "537520",
    "end": "542620"
  },
  {
    "text": "when talking about dev SEC ops I mean Here I am in tel-aviv and it's good to",
    "start": "542620",
    "end": "547810"
  },
  {
    "text": "be back and I see Israel as being essentially security technology staffed up central planet Earth so I'm hoping",
    "start": "547810",
    "end": "555790"
  },
  {
    "text": "that a whole bunch of this is stuff that you're either doing already or if you're not that it's stuff that you'll be",
    "start": "555790",
    "end": "561700"
  },
  {
    "text": "adopting shortly so an obvious integration point get hooks you then",
    "start": "561700",
    "end": "567700"
  },
  {
    "text": "have AP is that you can go calling from your continuous integration environment weather weather weather just using AP",
    "start": "567700",
    "end": "574720"
  },
  {
    "text": "ice or tools like Jenkins and then finally if you're doing continuous deployment you absolutely need to be",
    "start": "574720",
    "end": "581290"
  },
  {
    "text": "doing continuous penetration testing and hey I've got an architecture for that so if you look at a typical CI CD pipeline",
    "start": "581290",
    "end": "589090"
  },
  {
    "start": "583000",
    "end": "636000"
  },
  {
    "text": "those of you who doing CI CD please put your hands up if this bears a at least",
    "start": "589090",
    "end": "595810"
  },
  {
    "text": "moderate relationship to what you're currently using we got a few hands this is good so if",
    "start": "595810",
    "end": "603730"
  },
  {
    "text": "you take a look at this through security tinted glasses what you wind up seeing",
    "start": "603730",
    "end": "609190"
  },
  {
    "text": "is this these are all the places in your pipeline where you have the opportunity",
    "start": "609190",
    "end": "614670"
  },
  {
    "text": "to insert useful and often reasonably lightweight security controls so I'm",
    "start": "614670",
    "end": "621040"
  },
  {
    "text": "going to take these one at a time so if we look at code validation as a piece of",
    "start": "621040",
    "end": "626830"
  },
  {
    "text": "work that you would trigger when your developer goes submitting a piece of code into your version control system",
    "start": "626830",
    "end": "633450"
  },
  {
    "text": "for version control these days you can pretty much read get at which point",
    "start": "633450",
    "end": "638770"
  },
  {
    "start": "636000",
    "end": "779000"
  },
  {
    "text": "there's a few ways of doing things so for native native private get you have",
    "start": "638770",
    "end": "645550"
  },
  {
    "text": "git hooks and we actually have a tool on our AWS labs account on github called",
    "start": "645550",
    "end": "651760"
  },
  {
    "text": "git secrets which it's been around for a little while a few people know about it",
    "start": "651760",
    "end": "658110"
  },
  {
    "text": "but the fact that people still keep hand kits still keep hardwiring AWS keys into their code and then going",
    "start": "658110",
    "end": "667000"
  },
  {
    "text": "inactive posting it to get up without redacting McKee's means that not everyone's using it so if you ty get secrets in a Zagat",
    "start": "667000",
    "end": "676240"
  },
  {
    "text": "hook to your get environment then when you go actually pushing your code",
    "start": "676240",
    "end": "681459"
  },
  {
    "text": "upwards it'll go reg X scanning your source to see if there's anything in in",
    "start": "681459",
    "end": "688089"
  },
  {
    "text": "there that looks like an AWS access key or secret access key pair and it'll then",
    "start": "688089",
    "end": "693699"
  },
  {
    "text": "go stop that push if it sees it happening so the primary vector that",
    "start": "693699",
    "end": "699819"
  },
  {
    "text": "people mishandle their keys via is something that we can actually deal with obviously of course please don't go",
    "start": "699819",
    "end": "706990"
  },
  {
    "text": "hardwiring keys into your code anyway please run your code in a roll it",
    "start": "706990",
    "end": "712870"
  },
  {
    "text": "whether it be in its ec2 instance or its lambda function or it's some ECS or now",
    "start": "712870",
    "end": "717910"
  },
  {
    "text": "of course eks or far gated container and that way and that way you just wind up",
    "start": "717910",
    "end": "723519"
  },
  {
    "text": "don't needing to not needing to put any keys in there at all if your github",
    "start": "723519",
    "end": "728529"
  },
  {
    "text": "users and hey one way or another I expect a lot of us are you can actually do something very similar again using",
    "start": "728529",
    "end": "736300"
  },
  {
    "text": "AWS technologies with github make it github natively github offers something",
    "start": "736300",
    "end": "741459"
  },
  {
    "text": "very analogous to regular get hooks with github web hooks and I would very much",
    "start": "741459",
    "end": "747279"
  },
  {
    "text": "recommend having a look at this very detailed blog posting here which",
    "start": "747279",
    "end": "753010"
  },
  {
    "text": "actually enables you to use a lambda function as your remediation and to",
    "start": "753010",
    "end": "760029"
  },
  {
    "text": "seeing an alarm via a get hook so you can actually turn lambda functions into",
    "start": "760029",
    "end": "765490"
  },
  {
    "text": "github bots and this again is something that you may want to do just just in manner of augmenting your source control",
    "start": "765490",
    "end": "773230"
  },
  {
    "text": "and source management even without considering using it in a manner of in a manner analogous to get secrets",
    "start": "773230",
    "end": "779819"
  },
  {
    "start": "779000",
    "end": "790000"
  },
  {
    "text": "so let's now move on into auditing and validation and for auditing and",
    "start": "779819",
    "end": "785529"
  },
  {
    "text": "validation here people typically wind up looking at things like static code analysis but so there's a few ways in",
    "start": "785529",
    "end": "793000"
  },
  {
    "start": "790000",
    "end": "917000"
  },
  {
    "text": "which you can actually go calling out to external tools to do auditing and",
    "start": "793000",
    "end": "798819"
  },
  {
    "text": "validation of your code a thing that we launched at reinvent and which is just becoming available via",
    "start": "798819",
    "end": "807080"
  },
  {
    "text": "some marketplace capabilities is private link this is a really neat thing because",
    "start": "807080",
    "end": "812900"
  },
  {
    "text": "of course some people still have their concerns about actually making an API call out to the Amazon boundary network",
    "start": "812900",
    "end": "820820"
  },
  {
    "text": "which from a threat risk perspective you need to treat as being analogous to the Internet because all AWS customers have access to",
    "start": "820820",
    "end": "829100"
  },
  {
    "text": "it and as we all know having a credit card doesn't necessarily make you a good person",
    "start": "829100",
    "end": "835630"
  },
  {
    "text": "so if you think about what we did a couple of years ago with s3 private VPC",
    "start": "835630",
    "end": "843470"
  },
  {
    "text": "endpoints which then also got extended DynamoDB private link is the",
    "start": "843470",
    "end": "849070"
  },
  {
    "text": "generalization of this capability to a whole bunch of other services what you're able to actually do is if you",
    "start": "849070",
    "end": "855770"
  },
  {
    "text": "stand up at NLB our new load balancer that we're again we announced at reinvent you can extend from that NLB an",
    "start": "855770",
    "end": "864680"
  },
  {
    "text": "en i not only cross VPC but also cross account to give you effectively a",
    "start": "864680",
    "end": "871280"
  },
  {
    "text": "private endpoint for whatever service your NLB is offering so you can back",
    "start": "871280",
    "end": "878480"
  },
  {
    "text": "your NLB with the restful service or run and then actually these can be offered",
    "start": "878480",
    "end": "884870"
  },
  {
    "text": "through marketplace as well so alternative ways to do this is using",
    "start": "884870",
    "end": "889910"
  },
  {
    "text": "traditional restful api s-- through API endpoints that are on the public",
    "start": "889910",
    "end": "896120"
  },
  {
    "text": "Internet and of course in that case you also need to ensure that the functions you're calling those API is from again",
    "start": "896120",
    "end": "903320"
  },
  {
    "text": "using lambda and to stick things together have a root of all signal paths out to that API presentation point",
    "start": "903320",
    "end": "909920"
  },
  {
    "text": "whether directly or if you're running in a V PC vie something like a squid proxy",
    "start": "909920",
    "end": "915230"
  },
  {
    "text": "so you can go white listing the URLs I picked some local vendors of useful",
    "start": "915230",
    "end": "921950"
  },
  {
    "start": "917000",
    "end": "986000"
  },
  {
    "text": "static analysis tools as an example to show different ways in which they're called",
    "start": "921950",
    "end": "927170"
  },
  {
    "text": "so if we start in the middle here with very code they their interface actually isn't",
    "start": "927170",
    "end": "935210"
  },
  {
    "text": "isn't Jason but rather XML so what you can actually do rather than rather than",
    "start": "935210",
    "end": "941510"
  },
  {
    "text": "look at it like a cig v4 call is just curl it I'll also point out at this at",
    "start": "941510",
    "end": "948530"
  },
  {
    "text": "this point we have a couple of secrets here that we would want to go",
    "start": "948530",
    "end": "953840"
  },
  {
    "text": "substituting in when we go making our call and I'll be talking in a little bit",
    "start": "953840",
    "end": "959540"
  },
  {
    "text": "about how you can actually do this automatically and programmatically using",
    "start": "959540",
    "end": "964630"
  },
  {
    "text": "Systems Manager parameter store but I don't like being a three pass compiler",
    "start": "964630",
    "end": "970040"
  },
  {
    "text": "so I try and minimize me forward references white sauce have direct github integration and the guys have",
    "start": "970040",
    "end": "977540"
  },
  {
    "text": "checkmarks again you have an AP you you have an API exposed you go calling it",
    "start": "977540",
    "end": "982730"
  },
  {
    "text": "it's a regular restful api they've got their documentation as to how you do it there if you're using jenkins by the way",
    "start": "982730",
    "end": "990140"
  },
  {
    "start": "986000",
    "end": "1078000"
  },
  {
    "text": "who is lots of Jenkins users happy",
    "start": "990140",
    "end": "995600"
  },
  {
    "text": "Jenkins users some so these guys have",
    "start": "995600",
    "end": "1002250"
  },
  {
    "text": "intrinsic Jenkins plugins Jenkins plugins are a very popular way to",
    "start": "1002250",
    "end": "1007620"
  },
  {
    "text": "integrate extra tooling like external static analysis into your CI pipeline we",
    "start": "1007620",
    "end": "1015820"
  },
  {
    "text": "even have a plugin for Jenkins rar code build capability to actually do your",
    "start": "1015820",
    "end": "1022000"
  },
  {
    "text": "compiling for you and while Jenkins plugins proliferate you probably want to",
    "start": "1022000",
    "end": "1028120"
  },
  {
    "text": "have a system for doing plug-in management and I came across this one from pragma the other day which I",
    "start": "1028120",
    "end": "1034000"
  },
  {
    "text": "actually rather liked incidentally when it comes to the references and reading",
    "start": "1034000",
    "end": "1040150"
  },
  {
    "text": "at the end one thing I do very much recommend actually readings where I got",
    "start": "1040150",
    "end": "1046150"
  },
  {
    "text": "this from any subscribers in here to DevOps weekly just the one okay",
    "start": "1046150",
    "end": "1053170"
  },
  {
    "text": "obviously not all innovation happens at AWS DevOps weekly which link at the end",
    "start": "1053170",
    "end": "1059170"
  },
  {
    "text": "is a free email newsletter it comes out on a Sunday afternoon",
    "start": "1059170",
    "end": "1064240"
  },
  {
    "text": "and I've been happy subscribed for a couple of years there's nearly always every week at least one good piece good",
    "start": "1064240",
    "end": "1071289"
  },
  {
    "text": "link to a piece of security technology in there so I I happen to be a fan I like I like reading it on Sunday evening",
    "start": "1071289",
    "end": "1078850"
  },
  {
    "start": "1078000",
    "end": "1088000"
  },
  {
    "text": "so if we get back now to our diagram let's look at continuous scanning what",
    "start": "1078850",
    "end": "1085840"
  },
  {
    "text": "do we actually mean here well we can mean a couple of things actually first thing obviously is dependency checking",
    "start": "1085840",
    "end": "1091690"
  },
  {
    "start": "1088000",
    "end": "1252000"
  },
  {
    "text": "your own code may be tight but you may actually be linking against libraries",
    "start": "1091690",
    "end": "1097779"
  },
  {
    "text": "that aren't these these could be versions of libraries that actually have",
    "start": "1097779",
    "end": "1102789"
  },
  {
    "text": "CVS against them or they could merely be old versions that have been deprecated",
    "start": "1102789",
    "end": "1108250"
  },
  {
    "text": "in in the light of new versions that have come out how are you actually going",
    "start": "1108250",
    "end": "1113710"
  },
  {
    "text": "to check that your dependencies of your code are themselves sound so the lambda",
    "start": "1113710",
    "end": "1122559"
  },
  {
    "text": "runtime environment is for all practical purposes a regular Amazon Linux user",
    "start": "1122559",
    "end": "1129370"
  },
  {
    "text": "land you can expect what's in there to be reasonably current but you may want",
    "start": "1129370",
    "end": "1136029"
  },
  {
    "text": "to be absolutely doubly sure and actually package up static actually",
    "start": "1136029",
    "end": "1141190"
  },
  {
    "text": "package up libraries into your own environment that you ship as a zip file as part of your as part of your own",
    "start": "1141190",
    "end": "1147880"
  },
  {
    "text": "lambda environment and again this is where you can wind up doing your own checking both look at version info and",
    "start": "1147880",
    "end": "1155230"
  },
  {
    "text": "CVS at Lincoln import time the guys at white sauce actually have a fun browser plugin as well I also know that in the",
    "start": "1155230",
    "end": "1164770"
  },
  {
    "text": "CI CD front I friends at dome 9 are",
    "start": "1164770",
    "end": "1170049"
  },
  {
    "text": "doing some things in this space although I haven't caught up with them yet to find out what I'll be doing so tomorrow",
    "start": "1170049",
    "end": "1175419"
  },
  {
    "text": "shows I don't get to Israel often enough they've got this whole new product and I haven't seen it yet black duck who got",
    "start": "1175419",
    "end": "1182559"
  },
  {
    "text": "bought by synopsis obviously are also particularly well-known for doing this",
    "start": "1182559",
    "end": "1187950"
  },
  {
    "text": "both in terms of dependency management and also license management which which",
    "start": "1187950",
    "end": "1193539"
  },
  {
    "text": "I know white source also do so if for example again you're linking against a piece of",
    "start": "1193539",
    "end": "1199720"
  },
  {
    "text": "open-source code that happens to be gplv3 and you're only happy with gplv2",
    "start": "1199720",
    "end": "1205410"
  },
  {
    "text": "these tools will actually flag that up as well so we're starting to get",
    "start": "1205410",
    "end": "1210730"
  },
  {
    "text": "actually very meta about our dependencies and compliance the other",
    "start": "1210730",
    "end": "1215770"
  },
  {
    "text": "things that you may want to do is actually do scanning on things like your Sam templates and and your cloud",
    "start": "1215770",
    "end": "1222160"
  },
  {
    "text": "formation templates which are themselves ultimately just text files so you can",
    "start": "1222160",
    "end": "1228250"
  },
  {
    "text": "you can grep through them look for reg X look for patterns of IP addresses for",
    "start": "1228250",
    "end": "1235240"
  },
  {
    "text": "example which may betray someone trying to deploy a development and test workload into a production environment",
    "start": "1235240",
    "end": "1241299"
  },
  {
    "text": "so you can stop it at that point and of course you can just use the the text the",
    "start": "1241299",
    "end": "1249370"
  },
  {
    "text": "text decomposition and analysis tools of your choice in whatever language you choose checksumming is something that",
    "start": "1249370",
    "end": "1256510"
  },
  {
    "start": "1252000",
    "end": "1321000"
  },
  {
    "text": "people some people want to do very much more of a holdover from doing C ICD in",
    "start": "1256510",
    "end": "1263250"
  },
  {
    "text": "traditional on-premise environments so I actually have a little bit of a question",
    "start": "1263250",
    "end": "1268510"
  },
  {
    "text": "mark over checksumming when you start looking at AWS especially if you're",
    "start": "1268510",
    "end": "1273900"
  },
  {
    "text": "coming out of a package build environment to produce an ami so for",
    "start": "1273900",
    "end": "1280210"
  },
  {
    "text": "package building here hashey call packer anybody a few Packer is very feature",
    "start": "1280210",
    "end": "1290049"
  },
  {
    "text": "full it's a it works very well it can be fun to configure if you want",
    "start": "1290049",
    "end": "1296950"
  },
  {
    "text": "to start with an existing ami and just change it a little bit say update a",
    "start": "1296950",
    "end": "1302200"
  },
  {
    "text": "package here and there it can be a bit fun to push through Packer again so you",
    "start": "1302200",
    "end": "1307510"
  },
  {
    "text": "may want to look at Systems Manager automate as potentially a means of ami",
    "start": "1307510",
    "end": "1313780"
  },
  {
    "text": "maintenance and doing doing doing maintenance more easily compared to actually building an ami completely from",
    "start": "1313780",
    "end": "1320500"
  },
  {
    "text": "scratch but anyway back to checksumming in an AWS environment do you really need",
    "start": "1320500",
    "end": "1326620"
  },
  {
    "start": "1321000",
    "end": "1380000"
  },
  {
    "text": "to it's a fact that's moderately well known I think it's fair to say that AMI",
    "start": "1326620",
    "end": "1333029"
  },
  {
    "text": "ultimately are stored in s3 and s3 while everyone makes it pretend to be a",
    "start": "1333029",
    "end": "1339600"
  },
  {
    "text": "filesystem and look like a filesystem al isn't a filesystem it's a key/value object store and what this means is that",
    "start": "1339600",
    "end": "1346619"
  },
  {
    "text": "with your am I being an object okay a very large and binary one it is in",
    "start": "1346619",
    "end": "1352649"
  },
  {
    "text": "itself an atomic entity which makes the which makes the ami itself immutable",
    "start": "1352649",
    "end": "1359279"
  },
  {
    "text": "unless you rip and replace the whole thing there is no way to actually do any bitwise or file wise editing on an ami",
    "start": "1359279",
    "end": "1367979"
  },
  {
    "text": "once it's been created so in terms of checksumming this is where I have a",
    "start": "1367979",
    "end": "1373259"
  },
  {
    "text": "question as to whether it's something that's really necessary but some people may have controls that require it",
    "start": "1373259",
    "end": "1380599"
  },
  {
    "start": "1380000",
    "end": "1466000"
  },
  {
    "text": "finally before you go pushing things out",
    "start": "1380599",
    "end": "1388080"
  },
  {
    "text": "to your various deployment environments all these entities are going to be",
    "start": "1388080",
    "end": "1393539"
  },
  {
    "text": "generating logs anyway if their AWS services that you're using like Systems",
    "start": "1393539",
    "end": "1399690"
  },
  {
    "text": "Manager they're going to be generating cloud trail records as you call them you can from your Jenkins environments for",
    "start": "1399690",
    "end": "1406679"
  },
  {
    "text": "example use the cloud watch events agent sorry cloud watch logs agent or an agent",
    "start": "1406679",
    "end": "1414419"
  },
  {
    "text": "of your choosing for your security incident event management and monitoring system to scrape the log files from",
    "start": "1414419",
    "end": "1421200"
  },
  {
    "text": "those ec2 instances that your services are running on and push them into either",
    "start": "1421200",
    "end": "1427019"
  },
  {
    "text": "into cloud watch or into your incident and event management and monitoring",
    "start": "1427019",
    "end": "1433229"
  },
  {
    "text": "system as mentioned logs of course make great evidence in the event of something",
    "start": "1433229",
    "end": "1439169"
  },
  {
    "text": "questionable happening and you needing to do do any forensic tracking back and forth man for your promotion process in",
    "start": "1439169",
    "end": "1447509"
  },
  {
    "text": "two different environments this normally in the form of things like cloud formation or run code deploy or",
    "start": "1447509",
    "end": "1455609"
  },
  {
    "text": "rum Baba bottom ECS containers",
    "start": "1455609",
    "end": "1461130"
  },
  {
    "text": "they themselves will also generate cloud trail records for you to show what went where penetration testing definitely",
    "start": "1461130",
    "end": "1471870"
  },
  {
    "text": "read this if you haven't already you may be pleasantly surprised that we've we've",
    "start": "1471870",
    "end": "1477750"
  },
  {
    "text": "been working for we've been working quietly for a long time in the background to try and increase the",
    "start": "1477750",
    "end": "1484710"
  },
  {
    "text": "number of services that are within scope for being pen testable by external and",
    "start": "1484710",
    "end": "1490440"
  },
  {
    "text": "by yourselves or other external testing companies who you choose to a point if",
    "start": "1490440",
    "end": "1497360"
  },
  {
    "text": "you're getting traditional pen testing done on in on ec2 definitely deploy",
    "start": "1497360",
    "end": "1503340"
  },
  {
    "text": "inspector on your instances when they get tested so that you can actually get",
    "start": "1503340",
    "end": "1509160"
  },
  {
    "text": "information from inside your instance ideally run this in continuous scanning",
    "start": "1509160",
    "end": "1514440"
  },
  {
    "text": "mode as to whether any testing any badness that your testers throw at it",
    "start": "1514440",
    "end": "1520500"
  },
  {
    "text": "your application causes any misbehavior even in transient form inspector if you",
    "start": "1520500",
    "end": "1526980"
  },
  {
    "text": "run it in continuous assessment mode it'll actually pick up on any changes in",
    "start": "1526980",
    "end": "1533010"
  },
  {
    "text": "your in your applications posture which might be applicable to CVS even if they",
    "start": "1533010",
    "end": "1539640"
  },
  {
    "text": "only exist from millisecond it'll spot them also in terms of tools may be",
    "start": "1539640",
    "end": "1545460"
  },
  {
    "text": "prepackaged there's a whole bunch out there including again a couple of local",
    "start": "1545460",
    "end": "1550650"
  },
  {
    "text": "guys a wasp's app of course is very well-known for doing the wasp web web",
    "start": "1550650",
    "end": "1556140"
  },
  {
    "text": "top ten and others or indeed if you're a pen test service penetration provider",
    "start": "1556140",
    "end": "1561330"
  },
  {
    "text": "pen test and service provider yourselves and I know there's a few out in this",
    "start": "1561330",
    "end": "1566340"
  },
  {
    "text": "part of the world we've got an architecture for actually doing this so if I I'm going to walk through the",
    "start": "1566340",
    "end": "1573060"
  },
  {
    "start": "1567000",
    "end": "1775000"
  },
  {
    "text": "customer side of this specifically I'm not going to deal hugely with the pen",
    "start": "1573060",
    "end": "1578760"
  },
  {
    "text": "test provider piece if you want to talk to me about it please catch me afterwards I am around all day so let's",
    "start": "1578760",
    "end": "1586110"
  },
  {
    "text": "look a little bit of workflow here if we've got our developer putting code",
    "start": "1586110",
    "end": "1592140"
  },
  {
    "text": "into code commit that can get picked up by code pipeline which is part of what it does will",
    "start": "1592140",
    "end": "1598800"
  },
  {
    "text": "potentially wind up doing a bit of integration maybe using something like code bills you'll definitely wind up",
    "start": "1598800",
    "end": "1605610"
  },
  {
    "text": "running another code pipeline step hopefully involving testing your code on",
    "start": "1605610",
    "end": "1610740"
  },
  {
    "text": "an ec2 instance that happens to be instrumented with inspector let let's let's say we're then deploying that code",
    "start": "1610740",
    "end": "1617940"
  },
  {
    "text": "using code deploy we go push that up into a staging environment here it's based on ec2 so we've got some it with",
    "start": "1617940",
    "end": "1625460"
  },
  {
    "text": "so we've got some instances we may be pushing a package up here but what we",
    "start": "1625460",
    "end": "1631920"
  },
  {
    "text": "can then do from our code pipeline as our last step is we can drum we can run",
    "start": "1631920",
    "end": "1636990"
  },
  {
    "text": "a lambda function so this lambda function let's say we've got a pen test provider over here that we like using",
    "start": "1636990",
    "end": "1643140"
  },
  {
    "text": "who provide automated pen testing as a service chances are they provide a menu",
    "start": "1643140",
    "end": "1648390"
  },
  {
    "text": "of tests that they will run for you probably just on some static website you",
    "start": "1648390",
    "end": "1653460"
  },
  {
    "text": "can put together from what you know of your deployment here from code pipeline effectively a job spec involving some",
    "start": "1653460",
    "end": "1662430"
  },
  {
    "text": "unique identifiers normally the software version of the package that you want to test a list of the tests from their menu",
    "start": "1662430",
    "end": "1670320"
  },
  {
    "text": "that you want them to run for probably also yeah definitely also the means to",
    "start": "1670320",
    "end": "1677760"
  },
  {
    "text": "write to an s3 bucket you'd normally do this via something like a one-shot",
    "start": "1677760",
    "end": "1682800"
  },
  {
    "text": "signed s3 URL and your own identifier in terms so that they can actually bill you",
    "start": "1682800",
    "end": "1690240"
  },
  {
    "text": "plus of course the information about the target to attack send that over to them",
    "start": "1690240",
    "end": "1696120"
  },
  {
    "text": "they will wind up running their attacks they will drop the output of those",
    "start": "1696120",
    "end": "1701880"
  },
  {
    "text": "attacks in the form of a report essentially probably just the can't probably just the console logs from",
    "start": "1701880",
    "end": "1708120"
  },
  {
    "text": "their attack and tooling in your s3 bucket you can then from there trigger a",
    "start": "1708120",
    "end": "1715140"
  },
  {
    "text": "lambda function from that write action grep through the report and based on",
    "start": "1715140",
    "end": "1720240"
  },
  {
    "text": "whether there are any fails or not you can choose what to do obviously if those",
    "start": "1720240",
    "end": "1725310"
  },
  {
    "text": "fails you probably want to extract the version take the copies of the fails post that to an SNS topic that can maybe maybe go",
    "start": "1725310",
    "end": "1733230"
  },
  {
    "text": "and integrate in Jireh or some other bulk management system or just be subscribed to by the engineering team",
    "start": "1733230",
    "end": "1739260"
  },
  {
    "text": "who were looking after this piece of software so that they know the test has failed and haven't have a view on what",
    "start": "1739260",
    "end": "1746010"
  },
  {
    "text": "they may need to do if the if there are no fails then this at this point if",
    "start": "1746010",
    "end": "1751920"
  },
  {
    "text": "you're the kind of organization that's been doing continue that's actually happy doing continuous deployment you",
    "start": "1751920",
    "end": "1759270"
  },
  {
    "text": "could then go kick off another flow may be another code deploy to actually take",
    "start": "1759270",
    "end": "1764580"
  },
  {
    "text": "that version of the code and push it to production so this is how you can actually do decent rigorous testing in",
    "start": "1764580",
    "end": "1772500"
  },
  {
    "text": "an automated fashion to make your code ready for actually going to production",
    "start": "1772500",
    "end": "1777630"
  },
  {
    "start": "1775000",
    "end": "1829000"
  },
  {
    "text": "deployment but to get a bit better don't also also don't forget to consider the",
    "start": "1777630",
    "end": "1783570"
  },
  {
    "text": "security of your security tooling and this is where lambda can get fun",
    "start": "1783570",
    "end": "1789300"
  },
  {
    "text": "the thing about lambda functions is they're really easy to deploy and there",
    "start": "1789300",
    "end": "1794520"
  },
  {
    "text": "really is no shortcut for good design even though you may just want to get",
    "start": "1794520",
    "end": "1799530"
  },
  {
    "text": "your sleeves up and get in there but in terms of the third-party tools that you",
    "start": "1799530",
    "end": "1805679"
  },
  {
    "text": "want to deploy obviously you want to make sure everything's done over HTTPS if you're calling internet side",
    "start": "1805679",
    "end": "1812010"
  },
  {
    "text": "endpoints and you want to do diligence on the providers of those services so go",
    "start": "1812010",
    "end": "1818190"
  },
  {
    "text": "and see what they've got in terms of audit reports go see what is said about",
    "start": "1818190",
    "end": "1823350"
  },
  {
    "text": "them in in the industry in general but for your own lambda security there are a",
    "start": "1823350",
    "end": "1829320"
  },
  {
    "start": "1829000",
    "end": "2007000"
  },
  {
    "text": "few important rules of thumb so from the point of view of least privilege and",
    "start": "1829320",
    "end": "1835800"
  },
  {
    "text": "privilege scope constraint we say one function one purpose one I am role and",
    "start": "1835800",
    "end": "1842429"
  },
  {
    "text": "as far as how to how you can generate those I am roles rather than go necessarily poking around with I am",
    "start": "1842429",
    "end": "1848940"
  },
  {
    "text": "yourself our friends are pure SEC have actually released a tool on github that will do",
    "start": "1848940",
    "end": "1854670"
  },
  {
    "text": "static analysis of your lambda function source and from that Amit",
    "start": "1854670",
    "end": "1860530"
  },
  {
    "text": "and I am a least privileged I am role that you could go running that lambda function in it's a fairly new tool but",
    "start": "1860530",
    "end": "1867670"
  },
  {
    "text": "if it's something that you think might make your lives easier by all means download and experiment there's some",
    "start": "1867670",
    "end": "1877180"
  },
  {
    "text": "arguments happen in both directions about whether or not to run your lambda functions in a V PC people who",
    "start": "1877180",
    "end": "1884580"
  },
  {
    "text": "particularly focus on performance aren't keen on it because actually standing a",
    "start": "1884580",
    "end": "1890290"
  },
  {
    "text": "lambda function up inside a V PC adds overhead at cold start time because",
    "start": "1890290",
    "end": "1895870"
  },
  {
    "text": "you've got to go creating a new en I you've got to hang security groups on it it it adds a little mortal a start time",
    "start": "1895870",
    "end": "1903510"
  },
  {
    "text": "I say consider your threat model my view",
    "start": "1903510",
    "end": "1908800"
  },
  {
    "text": "is that everything starts with a threat model quite a few things end with it and if you consider exfiltration",
    "start": "1908800",
    "end": "1915190"
  },
  {
    "text": "to be an important threat against what may be what your lambda function may be doing then you might actually want to go",
    "start": "1915190",
    "end": "1922840"
  },
  {
    "text": "running in a V PC because you have the ability tang security groups on your lambda function because it's all",
    "start": "1922840",
    "end": "1928270"
  },
  {
    "text": "operating through an it through an e and I you probably you also if you don't want to go giving it direct internet",
    "start": "1928270",
    "end": "1934840"
  },
  {
    "text": "connection have the ability to go talking through proxies such as squid to do white listing of where your lambda",
    "start": "1934840",
    "end": "1941680"
  },
  {
    "text": "function can actually go connecting to so again there is a balance to be found depending on what your priorities are",
    "start": "1941680",
    "end": "1948480"
  },
  {
    "text": "everything comes out of your threat model I read last year sometime actually",
    "start": "1948480",
    "end": "1954940"
  },
  {
    "text": "guide poor Johnny from sneaked he produced he did a really good session at",
    "start": "1954940",
    "end": "1961840"
  },
  {
    "text": "serverless conf this is the link to his slides I highly recommend reading them",
    "start": "1961840",
    "end": "1968230"
  },
  {
    "text": "and obviously you can think about them some more than you can in my brief session here also again friends are pure",
    "start": "1968230",
    "end": "1976720"
  },
  {
    "text": "sec have got some very interesting new tooling for lambda function monitoring and management and also privileged",
    "start": "1976720",
    "end": "1984820"
  },
  {
    "text": "control within the lambda environment and it then becomes an interesting",
    "start": "1984820",
    "end": "1991720"
  },
  {
    "text": "question as to whether from again your threat risk perspective what",
    "start": "1991720",
    "end": "1997090"
  },
  {
    "text": "goes on here will suitably compensate for not putting your lambda function in",
    "start": "1997090",
    "end": "2002369"
  },
  {
    "text": "a V PC you as to whether you may want to be able to substitute one for the other",
    "start": "2002369",
    "end": "2008570"
  },
  {
    "text": "secrets management I mentioned earlier as where as we showed on the as we",
    "start": "2008570",
    "end": "2016529"
  },
  {
    "text": "showed on the external API calls often you need to go making API calls that",
    "start": "2016529",
    "end": "2021869"
  },
  {
    "text": "have credentials in them so how are you going to do that you really don't want to go hardwiring them into the source",
    "start": "2021869",
    "end": "2028080"
  },
  {
    "text": "code of your lambda functions so use Systems Manager parameter store it's what we built it for what you need to do",
    "start": "2028080",
    "end": "2034649"
  },
  {
    "text": "is you need to give your lambda function and I am role with these parameters in",
    "start": "2034649",
    "end": "2040139"
  },
  {
    "text": "it and ensure the KMS key that you're going to be encrypting your secrets with",
    "start": "2040139",
    "end": "2046440"
  },
  {
    "text": "has this policy so your lambda function can actually go decrypting it how you go",
    "start": "2046440",
    "end": "2054480"
  },
  {
    "start": "2052000",
    "end": "2201000"
  },
  {
    "text": "about using this here's a CLI example that I actually use in my own",
    "start": "2054480",
    "end": "2060569"
  },
  {
    "text": "environment for putting RSA private keys into newly spun up ec2 instances that",
    "start": "2060569",
    "end": "2068279"
  },
  {
    "text": "are running Apache so if we look at the top here we've got the truncated value",
    "start": "2068279",
    "end": "2073950"
  },
  {
    "text": "which is my private key we we note it as being a type secure string which means",
    "start": "2073950",
    "end": "2080608"
  },
  {
    "text": "we want to encrypt it with KMS at rest here's the KMS key ID that we encrypt it",
    "start": "2080609",
    "end": "2086669"
  },
  {
    "text": "with and we're just calling it my private key now in in the cloud init",
    "start": "2086669",
    "end": "2092398"
  },
  {
    "text": "script that I then go running on my instances I have a standard UNIX command",
    "start": "2092399",
    "end": "2097890"
  },
  {
    "text": "cat something a little bit interesting essentially my key to all the usual",
    "start": "2097890",
    "end": "2103890"
  },
  {
    "text": "plaits of the usual place where my apache expects to find its private key and doing the usual Chonan show mod and",
    "start": "2103890",
    "end": "2110609"
  },
  {
    "text": "Letson and then let's run it when you wrap this up in send command and in the",
    "start": "2110609",
    "end": "2117569"
  },
  {
    "text": "context of lambda functions SSM is actually part of the lambda runtime",
    "start": "2117569",
    "end": "2123539"
  },
  {
    "text": "environment anyway so you don't need to go installing a package here I can I can run this command targeted",
    "start": "2123539",
    "end": "2131319"
  },
  {
    "text": "against anything that he's tagged as being a web server which in the case of my web server of course includes itself",
    "start": "2131319",
    "end": "2137049"
  },
  {
    "text": "and then when Mike when my command goes out to systems manager parameter store",
    "start": "2137049",
    "end": "2145420"
  },
  {
    "text": "will take my private key and substitute it in here so what actually runs on my",
    "start": "2145420",
    "end": "2153609"
  },
  {
    "text": "line Xbox at the end of the day is this thing in curly brackets replaced with",
    "start": "2153609",
    "end": "2159190"
  },
  {
    "text": "the value of my private key so I'm just literally just cutting my key to where",
    "start": "2159190",
    "end": "2164410"
  },
  {
    "text": "it needs to be and letting things go so you can use this for things like correct",
    "start": "2164410",
    "end": "2170980"
  },
  {
    "text": "credentials for external external scanning most people use it more often",
    "start": "2170980",
    "end": "2177700"
  },
  {
    "text": "than more often than that for things like database connection credentials you get the idea you don't need to go",
    "start": "2177700",
    "end": "2184390"
  },
  {
    "text": "hardwiring any set any secrets into your lamda code and also if you need to",
    "start": "2184390",
    "end": "2190510"
  },
  {
    "text": "rotate your secrets based on policy you can rotate them up here by by doing a",
    "start": "2190510",
    "end": "2196119"
  },
  {
    "text": "new parameter without having to change your code actually in your function so",
    "start": "2196119",
    "end": "2202510"
  },
  {
    "start": "2201000",
    "end": "2446000"
  },
  {
    "text": "logging under learning environments I'm going to go through cloud watch events a little bit I'm having going to need to",
    "start": "2202510",
    "end": "2209470"
  },
  {
    "text": "speed up because I'm running running short on time here cloud watch events",
    "start": "2209470",
    "end": "2215319"
  },
  {
    "text": "everyone uses it because it is quite simply the lowest latency AWS logging",
    "start": "2215319",
    "end": "2220960"
  },
  {
    "text": "and alerting mechanism it's also pretty simple to pass and it has a huge range",
    "start": "2220960",
    "end": "2226180"
  },
  {
    "text": "of event sources available so to actually make use of it and create your first rule you can just using the",
    "start": "2226180",
    "end": "2233559"
  },
  {
    "text": "console select from the drop-down that you want to use an API call as an event source let's say that we're picking up",
    "start": "2233559",
    "end": "2241029"
  },
  {
    "text": "on cloud trail here and we want to pick up on any actions to either delete the",
    "start": "2241029",
    "end": "2246520"
  },
  {
    "text": "trail or stop logging because these are things that people really shouldn't be doing with CloudFront so sorry with",
    "start": "2246520",
    "end": "2252490"
  },
  {
    "text": "cloud trail if they do then what we actually want to do is run this lambda function here and essentially let it all",
    "start": "2252490",
    "end": "2260079"
  },
  {
    "text": "go in terms of what a cloud watch event rec record actually looks like once we've",
    "start": "2260079",
    "end": "2266259"
  },
  {
    "text": "got one we can do this with it and indeed this is what we'd normally do inside our lambda function maybe minus",
    "start": "2266259",
    "end": "2272769"
  },
  {
    "text": "the print bit and his our record hope you can all see it the interesting",
    "start": "2272769",
    "end": "2278950"
  },
  {
    "text": "things that happen in it actually happened in the second half so we can see here that the entity that has tried",
    "start": "2278950",
    "end": "2286779"
  },
  {
    "text": "to be affected is this cloud trail trail Bob our intern here has gone and made a",
    "start": "2286779",
    "end": "2294609"
  },
  {
    "text": "call here it was invoked by signing Amazon AWS com so this was run from the",
    "start": "2294609",
    "end": "2300069"
  },
  {
    "text": "console these were the keys that Bob authenticated with and he tried to make",
    "start": "2300069",
    "end": "2305950"
  },
  {
    "text": "cloud trails stop logging we don't want that so we can actually respond to that once we've passed our event with just",
    "start": "2305950",
    "end": "2313180"
  },
  {
    "text": "actually let's turn this thing back on again we probably also want to know the fact that this has happened so we can",
    "start": "2313180",
    "end": "2320259"
  },
  {
    "text": "actually push details of that event to SNS which can then potentially get",
    "start": "2320259",
    "end": "2326349"
  },
  {
    "text": "picked up by ACPs and send us a nice email so that we can see that this has happened and of course the the running",
    "start": "2326349",
    "end": "2333759"
  },
  {
    "text": "of our the running of our lambda function actually goes and logs itself",
    "start": "2333759",
    "end": "2339039"
  },
  {
    "text": "as well as indeed those postings of stream log redaction is something that",
    "start": "2339039",
    "end": "2345609"
  },
  {
    "text": "is pretty new on the menu my mate Bertram dawn who works in the same job",
    "start": "2345609",
    "end": "2352869"
  },
  {
    "text": "role as me and he's based in Germany Bertram is actually is trained in his",
    "start": "2352869",
    "end": "2358660"
  },
  {
    "text": "background as a data pros a data protection officer and with German law being what it is the fact that logs",
    "start": "2358660",
    "end": "2367089"
  },
  {
    "text": "contain things like email addresses and tuples of source IP addresses and time",
    "start": "2367089",
    "end": "2372940"
  },
  {
    "text": "stamps were things that he had to think about and decided that if you wanted to",
    "start": "2372940",
    "end": "2379089"
  },
  {
    "text": "go shipping logs cross region you may need to do make a few changes to it so",
    "start": "2379089",
    "end": "2386049"
  },
  {
    "text": "let's look at what we can do here if we've got cloud trail and config going to our bucket going to our s3 bucket and",
    "start": "2386049",
    "end": "2392609"
  },
  {
    "text": "potentially events being generated from ec2 instances into cloud watch we can",
    "start": "2392609",
    "end": "2398800"
  },
  {
    "text": "actually take a lambda function for a read from cloud watch and drop those into our s3 bucket before we we can also",
    "start": "2398800",
    "end": "2405970"
  },
  {
    "text": "at this point also still use some cloud watch and cloud watch events as a",
    "start": "2405970",
    "end": "2412119"
  },
  {
    "text": "trigger for our response lambda functions which I probably won't have time to cover cover here unfortunately",
    "start": "2412119",
    "end": "2417190"
  },
  {
    "text": "and then we would we would use our lap we'd use a lambda function to take all",
    "start": "2417190",
    "end": "2422350"
  },
  {
    "text": "that consolidated log data and ship it to some remote account which just has an",
    "start": "2422350",
    "end": "2428260"
  },
  {
    "text": "s3 bucket holding all our log data beyond the reach of these guys here we",
    "start": "2428260",
    "end": "2435369"
  },
  {
    "text": "may actually want to do some redaction in another lambda function here so we",
    "start": "2435369",
    "end": "2440410"
  },
  {
    "text": "have unredacted data here redacted data here redaction and then just shaping how",
    "start": "2440410",
    "end": "2446020"
  },
  {
    "text": "we go about doing that whoops what happened here we go so we haven't we take our redaction",
    "start": "2446020",
    "end": "2452380"
  },
  {
    "text": "function trigger it on s3 put object unzip our log records if we if we need",
    "start": "2452380",
    "end": "2458740"
  },
  {
    "text": "to walk through the jason identify an api i based on what the key what the",
    "start": "2458740",
    "end": "2464080"
  },
  {
    "text": "keys are replace it with asterisks do the same thing for any other data we",
    "start": "2464080",
    "end": "2469990"
  },
  {
    "text": "consider sensitive zip it back up again create an alert which we found anything",
    "start": "2469990",
    "end": "2475180"
  },
  {
    "text": "sensitive and pass it on we are working Bertram's actually got a minimal",
    "start": "2475180",
    "end": "2481030"
  },
  {
    "text": "function for doing this with cloud trails we're working on open sourcing it",
    "start": "2481030",
    "end": "2486210"
  },
  {
    "text": "hopefully the the the the new the new",
    "start": "2486210",
    "end": "2491920"
  },
  {
    "text": "function repository is going to make that easier the function itself doesn't need much in the way of roles now if you",
    "start": "2491920",
    "end": "2499690"
  },
  {
    "text": "go wanting if you go deploying this kind of logging environment in your developer accounts because each developer is very",
    "start": "2499690",
    "end": "2506170"
  },
  {
    "text": "likely to and want and have a genuine need of their own AWS account how do you",
    "start": "2506170",
    "end": "2511270"
  },
  {
    "text": "stop them breaking the logging environment that you've so carefully set up with a CloudFormation template when",
    "start": "2511270",
    "end": "2517359"
  },
  {
    "text": "you automatically provision their account organizations SCPs at this point",
    "start": "2517359",
    "end": "2522520"
  },
  {
    "text": "i really am going to run out of time for this bit so i'll point you to my session at rien then where I went through this in a",
    "start": "2522520",
    "end": "2528329"
  },
  {
    "text": "bunch more detail and gave a bunch of examples guard duty threat intelligence as a service it's",
    "start": "2528329",
    "end": "2535020"
  },
  {
    "text": "been talked about a little bit earlier today what it can actually detect this",
    "start": "2535020",
    "end": "2541200"
  },
  {
    "text": "is a whole bunch of stuff this slide is now actually slightly out of date guard duty added 12 new detections just",
    "start": "2541200",
    "end": "2549030"
  },
  {
    "text": "two Sundays ago and is now up to 46 the guys on guard duty team are iterating",
    "start": "2549030",
    "end": "2555420"
  },
  {
    "text": "very fast regarding what they're able to add these are the categories of things",
    "start": "2555420",
    "end": "2560760"
  },
  {
    "text": "that guard duty can detect and there is a full list of detections and what they cover here as you might expect one of",
    "start": "2560760",
    "end": "2567750"
  },
  {
    "text": "the things that's picked up his cryptocurrency because when people find mishandled keys as mentioned earlier one",
    "start": "2567750",
    "end": "2573930"
  },
  {
    "text": "of the first things that they typically do is because of the nature of the economy of the economics is start mining",
    "start": "2573930",
    "end": "2579180"
  },
  {
    "text": "Bitcoin this can pick this up and stop it but a very common thing that I also",
    "start": "2579180",
    "end": "2584670"
  },
  {
    "text": "get asked about the guard duty can look at and find is dns-based exfiltration so",
    "start": "2584670",
    "end": "2590480"
  },
  {
    "text": "guard duty is really easy to turn on very easy to use I recommend you do so",
    "start": "2590480",
    "end": "2596010"
  },
  {
    "text": "in fact what guard duty actually does is it outputs to cloud watch events again",
    "start": "2596010",
    "end": "2602040"
  },
  {
    "text": "our favorite log source guard duty findings actually come with",
    "start": "2602040",
    "end": "2607280"
  },
  {
    "text": "characterization including guard duty zone risk measure so when you feed that into a lambda function we actually have",
    "start": "2607280",
    "end": "2614970"
  },
  {
    "text": "an integration example at AWS samples rather than AWS laps which can take your",
    "start": "2614970",
    "end": "2621750"
  },
  {
    "text": "guard duty findings and send them to the slack channel of your choice customers that we've spoken to they send B they",
    "start": "2621750",
    "end": "2629430"
  },
  {
    "text": "send the low priority stuff to a slack channel often just a slack noise channel",
    "start": "2629430",
    "end": "2634829"
  },
  {
    "text": "that the admins keep careful our keeper and I on more severe ones can go to a",
    "start": "2634829",
    "end": "2640680"
  },
  {
    "text": "specific higher severity slack channel for admins and maybe an escalation path",
    "start": "2640680",
    "end": "2646410"
  },
  {
    "text": "really severe ones you can just send through to page duty pager Duty in production environments I'm probably",
    "start": "2646410",
    "end": "2655230"
  },
  {
    "start": "2650000",
    "end": "2720000"
  },
  {
    "text": "going to have to cut myself short at this point because I'm pretty much out of time but again this is some",
    "start": "2655230",
    "end": "2661070"
  },
  {
    "text": "thing that I ran through in that reinvent session that's linked to earlier so you can go look at it there",
    "start": "2661070",
    "end": "2667760"
  },
  {
    "text": "the idea here is to deal with the issue where our hapless intern Bob who's",
    "start": "2667760",
    "end": "2674060"
  },
  {
    "text": "probably new in his role wants to launch an ec2 instance and we need to check if",
    "start": "2674060",
    "end": "2679670"
  },
  {
    "text": "he's launching an appropriate ami in an appropriate context from the point of view of security groups subnets V pcs",
    "start": "2679670",
    "end": "2688010"
  },
  {
    "text": "etc so that launch event gets picked up by cloud watch events that can get that",
    "start": "2688010",
    "end": "2695300"
  },
  {
    "text": "can trigger a lambda function which can check if our ami is approved etc that",
    "start": "2695300",
    "end": "2700520"
  },
  {
    "text": "can be done by against policy which would go putting in somewhere like dynamodb rather than hard wiring into",
    "start": "2700520",
    "end": "2705950"
  },
  {
    "text": "your lambda function if Bob's instance is deemed inappropriate that can go kick",
    "start": "2705950",
    "end": "2711890"
  },
  {
    "text": "off another event which can go terminate his instance probably even before it's up bearing in mind that a linux instance",
    "start": "2711890",
    "end": "2718820"
  },
  {
    "text": "takes about a minute to launch laugh and not in the context of service and lambda",
    "start": "2718820",
    "end": "2725150"
  },
  {
    "start": "2720000",
    "end": "2752000"
  },
  {
    "text": "we do have our new laugh managed rules if your lambdas are internet-facing",
    "start": "2725150",
    "end": "2732710"
  },
  {
    "text": "and if they're processing regular URLs",
    "start": "2732710",
    "end": "2737780"
  },
  {
    "text": "then woth is a good thing but ultimately again it's down to your own risk",
    "start": "2737780",
    "end": "2744050"
  },
  {
    "text": "appetite based on what the context of your environment is so again it's thing",
    "start": "2744050",
    "end": "2750020"
  },
  {
    "text": "to thing to be aware of thing to think about and to suit as and to fit as you need we have our own new service",
    "start": "2750020",
    "end": "2757790"
  },
  {
    "start": "2752000",
    "end": "2824000"
  },
  {
    "text": "application lens white paper which we published to right at the end of last",
    "start": "2757790",
    "end": "2763220"
  },
  {
    "text": "year I also certainly for the programmers in the room I recommend pure",
    "start": "2763220",
    "end": "2768440"
  },
  {
    "text": "sex white paper on service most common weaknesses there's actually worked",
    "start": "2768440",
    "end": "2774860"
  },
  {
    "text": "examples in there on both how it get how it gets done wrong and how to do it right and as mentioned already I'm a big",
    "start": "2774860",
    "end": "2782570"
  },
  {
    "text": "fan of DevOps weekly so lambda really caused a bit of a stir when it first",
    "start": "2782570",
    "end": "2788870"
  },
  {
    "text": "came out and there was as I guys among the",
    "start": "2788870",
    "end": "2794090"
  },
  {
    "text": "and even even among the AWS SAEs that this meme was the right thing to do",
    "start": "2794090",
    "end": "2802390"
  },
  {
    "text": "ultimately it comes down to context lambda is actually really really good for a lot of stuff the glue service is",
    "start": "2802390",
    "end": "2810950"
  },
  {
    "text": "called glue certainly but in men in many people's environments it's lambda that holds the universe together so I hope",
    "start": "2810950",
    "end": "2818450"
  },
  {
    "text": "this has been interesting I've run slightly over time but thank you [Applause]",
    "start": "2818450",
    "end": "2825940"
  }
]