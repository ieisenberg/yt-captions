[
  {
    "text": "there we go hey that was easy hello there uh My Name Is Zade um I am I lead",
    "start": "480",
    "end": "7439"
  },
  {
    "text": "the engineering teams for gilt.com across New York and Dublin and uh it's on behalf of those guys that I'm",
    "start": "7439",
    "end": "13280"
  },
  {
    "text": "presenting here today uh also with the great Derek Childs so effectively we got together and we we had this idea why",
    "start": "13280",
    "end": "19480"
  },
  {
    "text": "don't we talk about the things that guilt has done specifically around moving to microservices architecture on",
    "start": "19480",
    "end": "26199"
  },
  {
    "text": "AWS uh over the last three or four years and there's a lot of things that and guilt that we've learned ourselves you",
    "start": "26199",
    "end": "32160"
  },
  {
    "text": "know of of of how we've kind of come across and and and answered some of the problems so uh and then Derrick is going",
    "start": "32160",
    "end": "39200"
  },
  {
    "text": "to talk then more about like from the other the the other customers that he works with the general patterns that",
    "start": "39200",
    "end": "44879"
  },
  {
    "text": "that he's seen in terms of adopting microservices in the cloud so uh I'll",
    "start": "44879",
    "end": "50719"
  },
  {
    "text": "start talking about uh guilt and guilt Journey um because this is America a lot",
    "start": "50719",
    "end": "57399"
  },
  {
    "text": "of you guys may actually know what guilt is uh but for me it's really important to kind of get a feeling for like you",
    "start": "57399",
    "end": "64158"
  },
  {
    "text": "know what what is guilt and and even like why does guilt need a tech team so",
    "start": "64159",
    "end": "69320"
  },
  {
    "text": "uh the way I think about it is uh so guilt it its concept is luxury Brands given to you at at a at a discounted",
    "start": "69320",
    "end": "76479"
  },
  {
    "text": "price okay uh and the way the business works is so we've got these great merchants and what they do is they work",
    "start": "76479",
    "end": "81720"
  },
  {
    "text": "with our uh designers and Brands across the world uh to to select and curate",
    "start": "81720",
    "end": "87040"
  },
  {
    "text": "really really great product and and bring that to our customers okay so um this is one of our",
    "start": "87040",
    "end": "93159"
  },
  {
    "text": "stylists uh and then when we get the products the products arrive to us to",
    "start": "93159",
    "end": "98240"
  },
  {
    "text": "sell um you know and what we discovered as part of growing this business is when we get these beautiful bags and dresses",
    "start": "98240",
    "end": "105719"
  },
  {
    "text": "and you know whatever whatever shoes whatever these things are um it turns out that the vendors the brands",
    "start": "105719",
    "end": "110759"
  },
  {
    "text": "themselves may not actually have very good photographs we want to make this product look absolutely great okay so at",
    "start": "110759",
    "end": "117600"
  },
  {
    "text": "guilt we actually have our own photo studios and our own creative Studios and what we do is we shoot that product and",
    "start": "117600",
    "end": "122759"
  },
  {
    "text": "we make it look fabulous for our site okay",
    "start": "122759",
    "end": "127920"
  },
  {
    "text": "um um I love working in a real business uh so this is this is our uh Warehouse",
    "start": "127920",
    "end": "133800"
  },
  {
    "text": "in Kentucky um we receive physical product we put it on our shelves and then we turn it around and then we ship",
    "start": "133800",
    "end": "140040"
  },
  {
    "text": "it out okay it's really really nice to work for a company that deals in real things now why am I telling you all of",
    "start": "140040",
    "end": "146440"
  },
  {
    "text": "this the reason I'm telling you all of this is because um the the guilt business model is a very very unique",
    "start": "146440",
    "end": "153879"
  },
  {
    "text": "business model okay and it turns out there is no off-the-shelf software that",
    "start": "153879",
    "end": "158959"
  },
  {
    "text": "you can buy that can run a business like guilt and so what we've done since Inception is we've actually built a huge",
    "start": "158959",
    "end": "165480"
  },
  {
    "text": "amount of that software ourselves okay so the software that we use to curate",
    "start": "165480",
    "end": "170560"
  },
  {
    "text": "the brands and actually get the products together uh the software that we uh use in our Studios you know to to manage all",
    "start": "170560",
    "end": "177519"
  },
  {
    "text": "of our photo shoots uh the software that we use in parts of our warehouse uh that's all written by our engineering",
    "start": "177519",
    "end": "184879"
  },
  {
    "text": "team um one of the big things then uh about guilt then is that the sales it's",
    "start": "184879",
    "end": "191159"
  },
  {
    "text": "all about the rush uh the sales go live every day at noon and there's a really",
    "start": "191159",
    "end": "196840"
  },
  {
    "text": "there's a really great thing that happens here uh we send out uh at approximately 11:45 every day EST we",
    "start": "196840",
    "end": "204400"
  },
  {
    "text": "send out approximately 5.5 million emails okay and these emails go out to our members and they say hey here's the",
    "start": "204400",
    "end": "210519"
  },
  {
    "text": "products and the sales that we have today for you okay um and that's amazing so we send 5.5 million uh personalized",
    "start": "210519",
    "end": "218879"
  },
  {
    "text": "emails and push notifications um and then our customers Stampede the site it's our very own self-denial of service",
    "start": "218879",
    "end": "226280"
  },
  {
    "text": "attack okay from our own marketing department okay uh this is our customer",
    "start": "226280",
    "end": "231319"
  },
  {
    "text": "base okay um it's really fun to think of our customers you know as as a herd of",
    "start": "231319",
    "end": "238400"
  },
  {
    "text": "steaming wild beast um in fact from a technical perspective they don't actually look like this what they look",
    "start": "238400",
    "end": "245159"
  },
  {
    "text": "like is this okay this is the reason why I am trilled to work at guilt um this is",
    "start": "245159",
    "end": "251920"
  },
  {
    "text": "a a profile of the traffic uh on any given day and what you see around just",
    "start": "251920",
    "end": "257239"
  },
  {
    "text": "before 16 there which is um uh noon uh EST what you see is this this this",
    "start": "257239",
    "end": "263960"
  },
  {
    "text": "gentle rise that's from the second that we start sending out our our notifications and our emails okay and",
    "start": "263960",
    "end": "269520"
  },
  {
    "text": "then you can see the pulse load right once the sales go live at noon that's the rush okay everything that we build",
    "start": "269520",
    "end": "276600"
  },
  {
    "text": "apart from all the stuff that we do to build the business process and to build you know everything that runs the back",
    "start": "276600",
    "end": "282080"
  },
  {
    "text": "office of the business everything we do in the front end has to scale to this",
    "start": "282080",
    "end": "287960"
  },
  {
    "text": "okay it has to be resilient to that Spike okay and that's one of the really really great things about being about",
    "start": "287960",
    "end": "294120"
  },
  {
    "text": "working in a guilt um there's another interesting thing here which uh which",
    "start": "294120",
    "end": "299280"
  },
  {
    "text": "you know I learned when I joined is that um failure here is not uniform or rather",
    "start": "299280",
    "end": "304600"
  },
  {
    "text": "the cost of failure is not uniform okay the amount of money we bring on any one",
    "start": "304600",
    "end": "309720"
  },
  {
    "text": "given day happens in those two or three hours after the spike that's when we are",
    "start": "309720",
    "end": "314800"
  },
  {
    "text": "earning dollars right um if the site goes down or the apps go down at that moment in time that is expensive okay um",
    "start": "314800",
    "end": "322880"
  },
  {
    "text": "yet for the rest of the day as you can see the cost of failure is actually much much lighter okay so it affects how we",
    "start": "322880",
    "end": "328800"
  },
  {
    "text": "think about things so we need to be solid for this noon Rush every day so",
    "start": "328800",
    "end": "334199"
  },
  {
    "text": "let's talk about then like how did it start um and how did we get from what was originally a super monolith uh to a",
    "start": "334199",
    "end": "342919"
  },
  {
    "text": "highly distributed microservice architecture okay um so here was our",
    "start": "342919",
    "end": "348120"
  },
  {
    "text": "architecture in 2007 um and it was uh like uh uh it's great this is like the",
    "start": "348120",
    "end": "354639"
  },
  {
    "text": "rails to riches story okay uh bunch of guys get together right they program",
    "start": "354639",
    "end": "360000"
  },
  {
    "text": "Ruby on Rails okay and so their architecture diagram is really like a big box and then a cylinder right and",
    "start": "360000",
    "end": "365520"
  },
  {
    "text": "that's it okay uh and that's actually great I mean um I've programmed with Ruby on Rails over the last couple of",
    "start": "365520",
    "end": "371039"
  },
  {
    "text": "years and it turns out actually Ruby on Rails is brilliant I mean it's a fantastic language it's a great framework it's absolutely fabulous the",
    "start": "371039",
    "end": "376560"
  },
  {
    "text": "only problem for us is that it didn't scale okay now there'll be people for you know Ruby lovers who be like oh but",
    "start": "376560",
    "end": "382639"
  },
  {
    "text": "look at me look at me no you can do it and we're like we tried like we tried very very hard we had the best Ruby Engineers on the planet working with us",
    "start": "382639",
    "end": "389360"
  },
  {
    "text": "um and really the problem in a sense wasn't Ruby uh it wasn't rails the problem was our customers right there",
    "start": "389360",
    "end": "395720"
  },
  {
    "text": "was one day when we had uh Christian lutan which is a a brand of Footwear and",
    "start": "395720",
    "end": "401319"
  },
  {
    "text": "uh you know that day was one of those days when your site goes viral um and that was one of the first days that the",
    "start": "401319",
    "end": "406560"
  },
  {
    "text": "site went down right nicely because the site went down they kept on hitting the site so that when it came back up there",
    "start": "406560",
    "end": "411599"
  },
  {
    "text": "was even more pent up Demand right which was great so so when you're trying to",
    "start": "411599",
    "end": "417160"
  },
  {
    "text": "scale something you've got a couple of like things you to try and do we added mcache to the right to kind of speed",
    "start": "417160",
    "end": "422479"
  },
  {
    "text": "things up we also have a separate job system that takes a lot of our offline processing uh but this was this was",
    "start": "422479",
    "end": "428520"
  },
  {
    "text": "roughly our architecture so we realized it didn't scale okay so what did we do",
    "start": "428520",
    "end": "434440"
  },
  {
    "text": "uh we adopted a technology called Java jaava technology and and",
    "start": "434440",
    "end": "440560"
  },
  {
    "text": "effectively effectively um the way we did it was was actually I think kind of interesting so what we did was we said",
    "start": "440560",
    "end": "447240"
  },
  {
    "text": "um you know there's really two kinds of traffic for Guilt there's the traffic that's internal right from the people",
    "start": "447240",
    "end": "452759"
  },
  {
    "text": "who are working for guilt and setting up sales and actually you know like the business process right we left those",
    "start": "452759",
    "end": "458800"
  },
  {
    "text": "people over on the left of the chart we left those on the Ruby on Rails app and that's fantastic because Ruby allows us",
    "start": "458800",
    "end": "464960"
  },
  {
    "text": "to build a tooling very quickly for for those guys okay but for the massive amount of bulk load on on the on the S",
    "start": "464960",
    "end": "471960"
  },
  {
    "text": "we did we did that through a bunch of java Services um I'll just briefly explain the architecture here um to the",
    "start": "471960",
    "end": "479000"
  },
  {
    "text": "bottom right of the chart you can see some um some big old services for some classic kind of business entities in an",
    "start": "479000",
    "end": "485000"
  },
  {
    "text": "e-commerce company um you've got user service product service cart service we had a number of these really really big",
    "start": "485000",
    "end": "491919"
  },
  {
    "text": "Services then north of that you've got this layer for Content page assembly and",
    "start": "491919",
    "end": "497400"
  },
  {
    "text": "you see we have a number of services there page gen for generating Pages a city service um effectively what we did",
    "start": "497400",
    "end": "504440"
  },
  {
    "text": "was we we separated our business uh our technology stack by the different business businesses that guilt was",
    "start": "504440",
    "end": "510360"
  },
  {
    "text": "running at the time okay so we have classic siloed business lines and siloed business architecture okay um and then",
    "start": "510360",
    "end": "518120"
  },
  {
    "text": "the the the front end here that was um delivering all the web pages was done using jsps okay so um this was actually",
    "start": "518120",
    "end": "526200"
  },
  {
    "text": "in a sense you know okay it's fine it's fine it's fine until it isn't okay the",
    "start": "526200",
    "end": "531760"
  },
  {
    "text": "services that we were using they were little mini monoliths of their own okay our product service loads all of the",
    "start": "531760",
    "end": "537800"
  },
  {
    "text": "products and sales into memory so that when the noon rush comes we serve everything from memory that's fantastic",
    "start": "537800",
    "end": "543600"
  },
  {
    "text": "the only problem now is that like it takes 20 minutes to start the service up okay it's a great big Behemoth okay um",
    "start": "543600",
    "end": "552000"
  },
  {
    "text": "what else is there uh we had these teams that were focused solely on business lines we had effectively this monolithic",
    "start": "552000",
    "end": "559760"
  },
  {
    "text": "huge uh Java application uh we call it Swift um and that was over two parts",
    "start": "559760",
    "end": "565640"
  },
  {
    "text": "first Swift the front end that that drove the pages uh and then page end that did the content assembly okay and",
    "start": "565640",
    "end": "571920"
  },
  {
    "text": "that's like two great big repos and 100 Engineers trying desperately to to commit code to those repos okay uh",
    "start": "571920",
    "end": "578959"
  },
  {
    "text": "incredibly hard and uh you know as an engineer it's like so you know one week you're doing a feature you implement the",
    "start": "578959",
    "end": "585120"
  },
  {
    "text": "feature and it goes into this really really long queue uh to get QA and then it goes through the QA it fails and then",
    "start": "585120",
    "end": "591680"
  },
  {
    "text": "it comes back to you three or four weeks later you're moving on something else right now but you've got to go back in time and try and figure that stuff out",
    "start": "591680",
    "end": "597320"
  },
  {
    "text": "very very hard so what we found was the architecture was very very much um impairing us one of the other things we",
    "start": "597320",
    "end": "603680"
  },
  {
    "text": "found then as well was um because we were all sneaking stuff desperately in we were all breaking our own rules um",
    "start": "603680",
    "end": "609680"
  },
  {
    "text": "and so we started doing things like uh sending little lines straight to the database to get a little hack in really quick okay um and effectively what we",
    "start": "609680",
    "end": "616760"
  },
  {
    "text": "ended up with was uh something of a mess something of a mess that could fail on any given day and bring down noon right",
    "start": "616760",
    "end": "623120"
  },
  {
    "text": "and that's a terrible position to be when effectively you know the the business relies on us to keep the side up and we're down at noon",
    "start": "623120",
    "end": "630200"
  },
  {
    "text": "okay so um had this Moment by the way here where we basically said um you know",
    "start": "630200",
    "end": "636079"
  },
  {
    "text": "there was a day I needed I needed a one piece of information I needed the shipping message the shipping message",
    "start": "636079",
    "end": "641680"
  },
  {
    "text": "rather the marketing message uh on any given day for a given user and I was like hey you know uh it's like 20% off",
    "start": "641680",
    "end": "649120"
  },
  {
    "text": "your shipping today or free shipping today whatever you know I want to service I want to you know I've got user information and I want to find out what",
    "start": "649120",
    "end": "655399"
  },
  {
    "text": "their message should be okay and I looked at the architecture and I looked at the code and I discovered that if I",
    "start": "655399",
    "end": "660720"
  },
  {
    "text": "wanted that one piece of information the marketing message of the day um I'd have to go deep into that page gen service",
    "start": "660720",
    "end": "667279"
  },
  {
    "text": "and get like you know I don't know kilobytes of Json data that describe the front homepage of our site and scrape",
    "start": "667279",
    "end": "674200"
  },
  {
    "text": "right into that just to get that one sentence right there was something wrong so at the time I was chatting with our",
    "start": "674200",
    "end": "680600"
  },
  {
    "text": "CTO back then the great Mike bisik and I was saying I think you know I think what we need is a little service right I think we need like a service that just",
    "start": "680600",
    "end": "686720"
  },
  {
    "text": "has one endpoint okay the endpoint is going to do this thing give you the marketing message of the day and we were",
    "start": "686720",
    "end": "692240"
  },
  {
    "text": "chatting and what we were talking about SED so completely crazy right like we're going to set up a whole Java virtual",
    "start": "692240",
    "end": "697880"
  },
  {
    "text": "machine on four instances or we're going to have it just serve that one little endpoint it was absolutely destined to",
    "start": "697880",
    "end": "704839"
  },
  {
    "text": "failure so we did it okay and uh and that actually was our first microservice",
    "start": "704839",
    "end": "710120"
  },
  {
    "text": "and it was great actually it was was really really exciting so the big thing though around that time was how do we",
    "start": "710120",
    "end": "715880"
  },
  {
    "text": "arrange our teams you know away from this big mon trying desperately to to",
    "start": "715880",
    "end": "721560"
  },
  {
    "text": "get little features for the businesses in um how can we organize our teams you know on our software so that it's really",
    "start": "721560",
    "end": "727800"
  },
  {
    "text": "easy to get stuff to production um and that we can really have a big positive impact on the business so enter",
    "start": "727800",
    "end": "734760"
  },
  {
    "text": "microservices okay uh 2015 this is a very very high level view of our architecture and a number of things have",
    "start": "734760",
    "end": "741880"
  },
  {
    "text": "happened here okay uh some of the old players are still there the big old database it's still there right some of",
    "start": "741880",
    "end": "748639"
  },
  {
    "text": "those big old Services still there although a little smaller or different shaped but what you'll notice is a forest of services right some of them",
    "start": "748639",
    "end": "756079"
  },
  {
    "text": "are are admin toing and some of them are for our site itself okay and these are",
    "start": "756079",
    "end": "761560"
  },
  {
    "text": "the the the microservices ti that that many of our of our um apps use one of",
    "start": "761560",
    "end": "767079"
  },
  {
    "text": "the other thing we did as well breaking up the monolith north of the picture um",
    "start": "767079",
    "end": "772240"
  },
  {
    "text": "we actually broke our um our big monolithic web application into multiple",
    "start": "772240",
    "end": "777440"
  },
  {
    "text": "applications right and again this sounds kind of crazy but effectively when you go to gilt.com and you move from",
    "start": "777440",
    "end": "782800"
  },
  {
    "text": "different pages on the site you're actually moving and being served by entirely different apps okay um and",
    "start": "782800",
    "end": "789639"
  },
  {
    "text": "that's actually uh that actually turns out a great thing because if you've got a team that's working desperately on a",
    "start": "789639",
    "end": "794760"
  },
  {
    "text": "feature for the product detail page it doesn't affect the guys who are doing search or loyalty or personalization and",
    "start": "794760",
    "end": "800959"
  },
  {
    "text": "they can they can deploy software in their own time um and they can and they can get their code out to",
    "start": "800959",
    "end": "806839"
  },
  {
    "text": "production so um so how do we get here it's interesting",
    "start": "806839",
    "end": "811920"
  },
  {
    "text": "there was never any moment when um a bunch of us got into a room and got like you know pens and wrote over all the",
    "start": "811920",
    "end": "818160"
  },
  {
    "text": "walls and said here's the architecture right uh effectively what happened was",
    "start": "818160",
    "end": "824760"
  },
  {
    "text": "uh we just started saying let's build what we need let's actually get teams together let's give them a problem to",
    "start": "824760",
    "end": "829839"
  },
  {
    "text": "solve and then let's let them build whatever Services they need to solve those problems okay um so there's a",
    "start": "829839",
    "end": "836040"
  },
  {
    "text": "number of things that socially were really important in terms of our culture um that allowed the um the architecture",
    "start": "836040",
    "end": "842959"
  },
  {
    "text": "to evolve okay so a couple of key things here uh one of the things that we do with guilt is voluntary adoption if",
    "start": "842959",
    "end": "849320"
  },
  {
    "text": "you've got a great idea a great tool a great new piece of technology that's brilliant okay we never force that",
    "start": "849320",
    "end": "856199"
  },
  {
    "text": "technology on any of our Engineers right if it's really as great as you say it is then people are going to adopt it okay",
    "start": "856199",
    "end": "862279"
  },
  {
    "text": "and then it's going to be really great okay so uh turns out that that principle has really really important in how we",
    "start": "862279",
    "end": "868639"
  },
  {
    "text": "eventually evolved our entire tuling set okay um I'll move on for uh for the",
    "start": "868639",
    "end": "874320"
  },
  {
    "text": "importance of time uh so here's the number of services and our service growth over those periods uh this is",
    "start": "874320",
    "end": "880720"
  },
  {
    "text": "really really interesting you see this uh really great uh moment of inflection there where we're growing growing",
    "start": "880720",
    "end": "886120"
  },
  {
    "text": "growing and then sometime which is actually dated February 2012 uh we discovered that uh you know",
    "start": "886120",
    "end": "892880"
  },
  {
    "text": "we've been toying with this Scala programming language uh for too long we were officially a Scala shop okay and",
    "start": "892880",
    "end": "899600"
  },
  {
    "text": "with that adoption of the new language and the adoption of a lot of the techniques that we built around deploying to production uh we found that",
    "start": "899600",
    "end": "905800"
  },
  {
    "text": "it was really really easy to create services and as a result we created tons of services okay um so we're actually",
    "start": "905800",
    "end": "912440"
  },
  {
    "text": "now we've leveled off now we're probably in the region of about 300 different Services um across the business um so",
    "start": "912440",
    "end": "919920"
  },
  {
    "text": "what are the services doing I mean the services are uh are capturing so many different parts of our business they're",
    "start": "919920",
    "end": "926000"
  },
  {
    "text": "there for our recommendation systems our email systems notification systems uh to do with you know calculating shipping",
    "start": "926000",
    "end": "932440"
  },
  {
    "text": "delivery Windows anything that we think is a nugget of really useful important uh business logic we try and get into a",
    "start": "932440",
    "end": "939720"
  },
  {
    "text": "service now in more concrete terms what what's the kind of the the the architectural choices that we use when",
    "start": "939720",
    "end": "946120"
  },
  {
    "text": "writing a service so the way I think about it here is largely you know we're using the jvm um typically you've got",
    "start": "946120",
    "end": "953680"
  },
  {
    "text": "some kind of framework some kind of you know framework for hoisting up some Json endpoints uh cuz effectively all of our",
    "start": "953680",
    "end": "959319"
  },
  {
    "text": "services are are holding Json over HTTP um you drop in your code into that framework and then there's a couple of",
    "start": "959319",
    "end": "965440"
  },
  {
    "text": "other kind of pluggable things you need some monitoring you need some loging one of the big things that's really important for microservices is that a",
    "start": "965440",
    "end": "971839"
  },
  {
    "text": "service typically has its own data store right and it completely owns its own data store and that's a really really",
    "start": "971839",
    "end": "978279"
  },
  {
    "text": "important thing you should think about if you're going to do microservices and say yeah I've got 100 services and they're all pointing to the same",
    "start": "978279",
    "end": "983680"
  },
  {
    "text": "database that's a bad idea it's a bad idea because one scheme of change on that database base can break 999",
    "start": "983680",
    "end": "990800"
  },
  {
    "text": "Services right so you really want to make sure that your service fully owns uh its own data so then the te the",
    "start": "990800",
    "end": "997759"
  },
  {
    "text": "technology choices like in a world of voluntary adoption and total freedom for the developers to pick whatever they",
    "start": "997759",
    "end": "1002839"
  },
  {
    "text": "want um we've kind of ended up kind of arriving on the following we've got a couple of different options we use uh we",
    "start": "1002839",
    "end": "1009399"
  },
  {
    "text": "have our own internal very very lightweight service framework at guilt we also use play framework now play",
    "start": "1009399",
    "end": "1015319"
  },
  {
    "text": "framework is actually built for web applications and rendering HTML it turns out it's really really good for writing",
    "start": "1015319",
    "end": "1021519"
  },
  {
    "text": "services um really really fabulous uh monitoring wise we use New Relic",
    "start": "1021519",
    "end": "1026640"
  },
  {
    "text": "extensively it's a fantastic tool um we also have an internal tool called cave um cave allows us to do some really",
    "start": "1026640",
    "end": "1033000"
  },
  {
    "text": "really interesting things our services Aid events uh we listen for those events for patterns and time series we also",
    "start": "1033000",
    "end": "1039760"
  },
  {
    "text": "listen for the absence of events so we can create we can create an alert around the idea of you know if there are no",
    "start": "1039760",
    "end": "1046959"
  },
  {
    "text": "orders shipped to the United states in the last hour raise an alarm right and",
    "start": "1046959",
    "end": "1053080"
  },
  {
    "text": "that's a really great way to think about things like whatever about the technical things that could be going wrong if you look for the business things that should",
    "start": "1053080",
    "end": "1059240"
  },
  {
    "text": "always be true when they're not true there's something broken right that's what cave allows us to do we open sourced that recently it's on",
    "start": "1059240",
    "end": "1066480"
  },
  {
    "text": "kc. um for logging purposes we use a mixture of log for J number of logging tools we also use a lot of cloud watch",
    "start": "1066480",
    "end": "1073120"
  },
  {
    "text": "extensively now uh programming languages Scala Java and JavaScript and also we're",
    "start": "1073120",
    "end": "1078320"
  },
  {
    "text": "beginning to use node as well in our services um so you think are the",
    "start": "1078320",
    "end": "1083360"
  },
  {
    "text": "services like are they really microservices um well the lines of code per Service as you can see here um it's",
    "start": "1083360",
    "end": "1090039"
  },
  {
    "text": "a logarithmic scale um so most of our services have approximately uh 2 to the",
    "start": "1090039",
    "end": "1096159"
  },
  {
    "text": "11 which is 2024 uh lines of code that's actually really nice because you can drop into a",
    "start": "1096159",
    "end": "1101960"
  },
  {
    "text": "service and pretty quickly figure out what the hell the service is doing because there's not that much code in",
    "start": "1101960",
    "end": "1107080"
  },
  {
    "text": "there in terms of files per service right we've got 2 to the five okay",
    "start": "1107080",
    "end": "1112960"
  },
  {
    "text": "that's 32 uh that's really nice as well okay so any particular service doesn't really have that much in its repo",
    "start": "1112960",
    "end": "1121240"
  },
  {
    "text": "okay um one of the big things that people have asked me in the past is how do you do Discovery right and this is",
    "start": "1121240",
    "end": "1126880"
  },
  {
    "text": "really really important Discovery is uh enormously simple now people will tell",
    "start": "1126880",
    "end": "1132679"
  },
  {
    "text": "you Discovery is enormously hard so that they can sell you something to solve the problem of service Discovery right in",
    "start": "1132679",
    "end": "1138280"
  },
  {
    "text": "fact right we found that actually it's very very simple so first thing is is Discovery is a client needs to get to a",
    "start": "1138280",
    "end": "1143880"
  },
  {
    "text": "service how's it going to do it well it's got a name of a service I need to look up that URL right so what we do is",
    "start": "1143880",
    "end": "1149640"
  },
  {
    "text": "we use zookeeper um as a highly available store we say give me the",
    "start": "1149640",
    "end": "1155120"
  },
  {
    "text": "configuration we get the configuration back with the URL um and then we make a restful call on the service now our",
    "start": "1155120",
    "end": "1161280"
  },
  {
    "text": "services are always uh I going to say back our services are always fronted by a load balancer the load balancer that",
    "start": "1161280",
    "end": "1167280"
  },
  {
    "text": "we've used in the past uh we call it Zeus okay uh but through the miracle of marketing and Acquisitions and and",
    "start": "1167280",
    "end": "1173840"
  },
  {
    "text": "business uh Zeus has gone through a number of incarnations it became Stingray then steap and is now called",
    "start": "1173840",
    "end": "1179480"
  },
  {
    "text": "Brock ad okay we find this to be a great tool we use it extensively and effectively what it does is it takes",
    "start": "1179480",
    "end": "1185720"
  },
  {
    "text": "over a huge amount of the highly availability and full tolerance and scalability that we need for all of our services everything just goes through",
    "start": "1185720",
    "end": "1192360"
  },
  {
    "text": "that middleman and then it's just a restful call on the service to make to to go forward now so we used to be on",
    "start": "1192360",
    "end": "1199600"
  },
  {
    "text": "bare metal um we used to run all of our services and all of our infrastructure um across two data centers in the United",
    "start": "1199600",
    "end": "1205880"
  },
  {
    "text": "States um and this year we we made the big move this year we went uh to Vapor",
    "start": "1205880",
    "end": "1211840"
  },
  {
    "text": "uh we took it all and we moved it to the cloud and we were able to do so in a period of approximately 3 months that",
    "start": "1211840",
    "end": "1217559"
  },
  {
    "text": "was after about 6 to nine months of of very intensive work um but this was actually a a an enormous achievement for",
    "start": "1217559",
    "end": "1224120"
  },
  {
    "text": "us um and we also we got over the the fear around hey you know you've got this",
    "start": "1224120",
    "end": "1229880"
  },
  {
    "text": "the these Services they're on bare metal they're not going to be on bare metal anymore how are we going to deal with",
    "start": "1229880",
    "end": "1235000"
  },
  {
    "text": "that H it turns out that the performance that we've had on Amazon's been absolutely fabulous so how did we do it",
    "start": "1235000",
    "end": "1240360"
  },
  {
    "text": "so you take the existing data centers um effectively what we did then is we created a legacy VPC uh sorry a",
    "start": "1240360",
    "end": "1247679"
  },
  {
    "text": "VPC we call it Legacy VPC in um in Amazon and then we connected the two",
    "start": "1247679",
    "end": "1252760"
  },
  {
    "text": "with a dual 10 GB Direct Connect line okay there was a talk earlier on a fabulous talk on Direct Connect uh",
    "start": "1252760",
    "end": "1258720"
  },
  {
    "text": "really really great great product um and that had a two millisecond latency between our data center and our VPC okay",
    "start": "1258720",
    "end": "1266320"
  },
  {
    "text": "so then what you do is the stuff that you were originally deploying to the um to the data center we said well let's",
    "start": "1266320",
    "end": "1272400"
  },
  {
    "text": "just move those over to Amazon machines now um that are being deployed in the VPC this is called a lift and shift",
    "start": "1272400",
    "end": "1279440"
  },
  {
    "text": "right some people call this an anti-pattern right I call it the easiest way to get from A to B okay so we just",
    "start": "1279440",
    "end": "1284880"
  },
  {
    "text": "move the stuff over so uh once we had done that though we then created sub",
    "start": "1284880",
    "end": "1290080"
  },
  {
    "text": "account accounts for the various kind of large systems or teams in our company uh",
    "start": "1290080",
    "end": "1296679"
  },
  {
    "text": "like a common account mobile personalization M data and the idea now is is that you know if you as a team",
    "start": "1296679",
    "end": "1302960"
  },
  {
    "text": "want to do something really really cool with Dynamo DB or or uh you know any of the other big tools or you want to do a",
    "start": "1302960",
    "end": "1308520"
  },
  {
    "text": "huge amount of elasticity work you begin to move your services into these accounts Okay so we've got this very",
    "start": "1308520",
    "end": "1315840"
  },
  {
    "text": "very nice hybrid model of a kind of a static lift shift move which got us out of our data center uh but then as our",
    "start": "1315840",
    "end": "1323039"
  },
  {
    "text": "Engineers now move into a devops model they have full freedom to play in the um",
    "start": "1323039",
    "end": "1328720"
  },
  {
    "text": "in in the team accounts um so uh you know just some of",
    "start": "1328720",
    "end": "1334880"
  },
  {
    "text": "the some of the things that that you realize you know some of the questions like oh my how are we going to do this you know uh should we have many services",
    "start": "1334880",
    "end": "1342400"
  },
  {
    "text": "per ec2 instance right we looked at this and we said no okay we said no because",
    "start": "1342400",
    "end": "1347880"
  },
  {
    "text": "um what we have found is co collocating or having multiple services on the same box for us is a really bad idea the",
    "start": "1347880",
    "end": "1355520"
  },
  {
    "text": "number of noses we've lost because one Rogue service took down you know 10",
    "start": "1355520",
    "end": "1361240"
  },
  {
    "text": "other services that were on the same box right we couldn't have it okay so we actually said let's deploy a single",
    "start": "1361240",
    "end": "1367600"
  },
  {
    "text": "service instance um per per uh per ec2 instance that's good um the other thing",
    "start": "1367600",
    "end": "1373360"
  },
  {
    "text": "that we've done is a lot of our servers are now deployed using Docker right Docker is great in terms of giving us",
    "start": "1373360",
    "end": "1379159"
  },
  {
    "text": "repeatable deploys we have a clearcut immutable definition of what the service",
    "start": "1379159",
    "end": "1385200"
  },
  {
    "text": "is uh and that's fantastic um what we've actually moved towards saying now is the container gives us immutable deploys um",
    "start": "1385200",
    "end": "1393600"
  },
  {
    "text": "but the instance or the ec2 instance gives us a sense of mutability that we need okay um and then in this new",
    "start": "1393600",
    "end": "1401919"
  },
  {
    "text": "architecture I mean how does service Discovery work well it actually turns out to be easy we're still using zookeeper for the original look up we",
    "start": "1401919",
    "end": "1409279"
  },
  {
    "text": "get the configuration information um and then we've got a classic elb load balancer that we're hitting off uh to",
    "start": "1409279",
    "end": "1415679"
  },
  {
    "text": "our services okay um so it's the same model it's the same pattern it's very",
    "start": "1415679",
    "end": "1421720"
  },
  {
    "text": "very easy um and again you know the load balancers elb gives us everything we",
    "start": "1421720",
    "end": "1426840"
  },
  {
    "text": "need in terms of high availability for tolerance and scalability so um let's think the number",
    "start": "1426840",
    "end": "1433279"
  },
  {
    "text": "of instances um per service when we deploy a service we want to deploy it so that it's highly available so what we",
    "start": "1433279",
    "end": "1439799"
  },
  {
    "text": "tend to do is deploy um either three or as you can see here four three or four instances of Any Given service okay this",
    "start": "1439799",
    "end": "1447400"
  },
  {
    "text": "is just to make sure that we have enough instances running that if we lost one or two we'd be fine okay the instance size",
    "start": "1447400",
    "end": "1454159"
  },
  {
    "text": "um the instance size is very very interesting because we're doing one jvm per instance this means then that the",
    "start": "1454159",
    "end": "1460880"
  },
  {
    "text": "vast majority of our instances are T2 micro uh we also have a bunch of Smalls and mediums and then for some of the",
    "start": "1460880",
    "end": "1467799"
  },
  {
    "text": "bigger Hots then we have um some some some really large instances here I like",
    "start": "1467799",
    "end": "1473320"
  },
  {
    "text": "this chart because basically it means we're living the dream you know we're actually got lots and lots of small Services running on lots and lots of",
    "start": "1473320",
    "end": "1479840"
  },
  {
    "text": "very inexpensive hardware and that for us is is is a real win okay um so it's",
    "start": "1479840",
    "end": "1487240"
  },
  {
    "text": "interesting to think then I guess this is just the you know the the entire evolution in one slide where we can say",
    "start": "1487240",
    "end": "1494279"
  },
  {
    "text": "yeah okay we started off as the monolith we grew uh you know into more and more services right but they were still big",
    "start": "1494279",
    "end": "1501039"
  },
  {
    "text": "big chunky services and for us the the point of Liberation uh was when we when we broke it all apart into lots and lots",
    "start": "1501039",
    "end": "1507679"
  },
  {
    "text": "of small services and then of course this year uh moving to the cloud so um so things that are important",
    "start": "1507679",
    "end": "1515360"
  },
  {
    "text": "uh so we love microservices um effectively you know having microservices has allowed us to",
    "start": "1515360",
    "end": "1522039"
  },
  {
    "text": "you know to to to to Really remove the dependencies between teams people can just get stuff done right we deploy Dey",
    "start": "1522039",
    "end": "1528880"
  },
  {
    "text": "all day now throughout the day we we deploy throughout noon you what was once the kind of the lockdown period you must",
    "start": "1528880",
    "end": "1534600"
  },
  {
    "text": "not deploy anything we feel great about deploying there okay when a service goes down it'll go down and it won't take",
    "start": "1534600",
    "end": "1539960"
  },
  {
    "text": "down the entire site it's fine you know we we'll get it back up again okay uh we run lots of initiatives in parallel uh",
    "start": "1539960",
    "end": "1546520"
  },
  {
    "text": "use of Docker and our general culture allows us to say use whatever Tech or language you like to build your services",
    "start": "1546520",
    "end": "1551840"
  },
  {
    "text": "we don't really mind as long as we can get them running in the cloud okay so lots of great things there um I think as",
    "start": "1551840",
    "end": "1558080"
  },
  {
    "text": "well you know one of the things about also loving the cloud is there has been this great shift uh for us as teams it",
    "start": "1558080",
    "end": "1565039"
  },
  {
    "text": "allows us to do devops devops in a in a real and meaningful way all right what we find now is our engineers get to",
    "start": "1565039",
    "end": "1571679"
  },
  {
    "text": "choose you know the instances they run on uh the the databases they use the queing systems they use and our",
    "start": "1571679",
    "end": "1577440"
  },
  {
    "text": "Engineers are are are quite happy uh to have that level of control um it's also as well an exceptionally low barrier of",
    "start": "1577440",
    "end": "1584159"
  },
  {
    "text": "Entry uh to try out any new database or any new tool we find that it's enormously uh enormously good okay",
    "start": "1584159",
    "end": "1590640"
  },
  {
    "text": "there's loads of other great benefits there one of the other ones though that I just want to highlight there is cost visibility um we actually have um you",
    "start": "1590640",
    "end": "1598080"
  },
  {
    "text": "know we actually have the ability now to know how much something costs last week one of my engineers in Dublin uh reduced",
    "start": "1598080",
    "end": "1604440"
  },
  {
    "text": "the cost of gilt.com cart by half okay uh and that's amazing now if if we",
    "start": "1604440",
    "end": "1609960"
  },
  {
    "text": "didn't have that visibly on cost he would never have known that the service was costing this this much per month",
    "start": "1609960",
    "end": "1615440"
  },
  {
    "text": "right but having that loop back to kind of say hey this this is how much these servers are costing and he goes yeah you",
    "start": "1615440",
    "end": "1620679"
  },
  {
    "text": "know what we don't need that we don't need that we can scale that down and all of a sudden then you're actually uh saving money it's fantastic so we really",
    "start": "1620679",
    "end": "1626840"
  },
  {
    "text": "really like that um okay uh yeah so uh a Ric and good time uh let's uh hand it",
    "start": "1626840",
    "end": "1634039"
  },
  {
    "text": "over to you Derek and uh thank you very [Applause]",
    "start": "1634039",
    "end": "1644880"
  },
  {
    "text": "much all right thanks Aid and uh hello everyone we appreciate your time in the",
    "start": "1644880",
    "end": "1650440"
  },
  {
    "text": "uh in the famous preppy hour slot here on Thursday um and so in the second half of",
    "start": "1650440",
    "end": "1656640"
  },
  {
    "text": "the session today uh what I'd like to do is shift from uh guilt story which is a",
    "start": "1656640",
    "end": "1662480"
  },
  {
    "text": "great story from monolithic to microservices from physical data centers",
    "start": "1662480",
    "end": "1667760"
  },
  {
    "text": "to the AWS cloud and talk more about General uh emergent patterns and",
    "start": "1667760",
    "end": "1673200"
  },
  {
    "text": "challenges that we're seeing in AWS when we talk to guilt and other companies that are that are making this journey I",
    "start": "1673200",
    "end": "1680279"
  },
  {
    "text": "think many of you uh that are listening and watching um are are either considering making a move from a",
    "start": "1680279",
    "end": "1686760"
  },
  {
    "text": "traditional monolithic uh architecture to a microservices architecture or possibly already already committed and",
    "start": "1686760",
    "end": "1693000"
  },
  {
    "text": "already on the way and so we'd like to get to leave you with some uh with some things that you can take",
    "start": "1693000",
    "end": "1699120"
  },
  {
    "text": "away so before I jump into those patterns I think it's interesting to to take a step back and think about you",
    "start": "1699120",
    "end": "1705799"
  },
  {
    "text": "know monolithic traditional architectures and microservice architectures as really a Continuum right and so it's really",
    "start": "1705799",
    "end": "1712559"
  },
  {
    "text": "going to be a journey from one side of this of this slide to the other U there's advantages to being in a",
    "start": "1712559",
    "end": "1717799"
  },
  {
    "text": "monolithic architecture right it's it it's simpler to to make deployments your your uh refactoring inside of an IDE is",
    "start": "1717799",
    "end": "1725720"
  },
  {
    "text": "actually pretty straightforward because you've got all the code loaded in one place uh you can make a couple clicks um",
    "start": "1725720",
    "end": "1731399"
  },
  {
    "text": "but you know there are some there are some good uh advantages to microservices as well and so what we want to do here",
    "start": "1731399",
    "end": "1737000"
  },
  {
    "text": "when we think about these pattern is think about minimizing the disadvantages and really playing to the strengths of",
    "start": "1737000",
    "end": "1742360"
  },
  {
    "text": "the microservices model so I'd like to walk through six of",
    "start": "1742360",
    "end": "1747679"
  },
  {
    "text": "these challenges this is not an exhaustive list of course but this is something uh that we've that we've seen as we've talked to guilt and and other",
    "start": "1747679",
    "end": "1754240"
  },
  {
    "text": "customers so I'll jump right in so the first challenge the first set",
    "start": "1754240",
    "end": "1760720"
  },
  {
    "text": "of patterns here is around organization and so um at the at the",
    "start": "1760720",
    "end": "1768320"
  },
  {
    "text": "high level microservice is really an organizational or cultural shift inside your company and so when you start to",
    "start": "1768320",
    "end": "1774600"
  },
  {
    "text": "think about moving towards micro Services many of you many of us will be organized in a pattern that looks like",
    "start": "1774600",
    "end": "1781360"
  },
  {
    "text": "this where we have teams of really smart people that know how to do uh great things with technology uh and so we've",
    "start": "1781360",
    "end": "1787799"
  },
  {
    "text": "we've in this slide we have a UI team we have an application logic team we have a DBA team and what we see and this is",
    "start": "1787799",
    "end": "1793919"
  },
  {
    "text": "Conway's law if some of you are familiar with this uh what we see is that our application archit Ure tends to mirror",
    "start": "1793919",
    "end": "1799799"
  },
  {
    "text": "our our our org chart as we move forward into the microservices world we really",
    "start": "1799799",
    "end": "1805600"
  },
  {
    "text": "want to think about organizing on business responsibilities right what what am I what am I obligated to provide",
    "start": "1805600",
    "end": "1811840"
  },
  {
    "text": "to other services or back to the business uh and we're going to we're going to range our teams around one",
    "start": "1811840",
    "end": "1818279"
  },
  {
    "text": "service or around a small number of services so this is important to think about at the beginning of the journey uh",
    "start": "1818279",
    "end": "1824559"
  },
  {
    "text": "and this may be a bit of a of a change in your organization chart but it's really critical to have these teams",
    "start": "1824559",
    "end": "1829840"
  },
  {
    "text": "feeling that like they have the ultimate responsibility for these services and so that means that you wind",
    "start": "1829840",
    "end": "1836320"
  },
  {
    "text": "up with a team and this really plays into the devops model very well that sort of Soup To Nuts owns the service",
    "start": "1836320",
    "end": "1842200"
  },
  {
    "text": "and owns the delivery of that service they're going to own requirements Gathering they're going to pick the technology that is the best suited for",
    "start": "1842200",
    "end": "1849240"
  },
  {
    "text": "the service that they need to build uh the technology that they're most comfortable with they're going to develop it they're going to make sure it",
    "start": "1849240",
    "end": "1855000"
  },
  {
    "text": "meets the quality bar they're going to take care of deployments uh often many deployments in a day and then they're",
    "start": "1855000",
    "end": "1860519"
  },
  {
    "text": "going to support it uh and that means that there's no more wall to throw uh code over or throw deployments over",
    "start": "1860519",
    "end": "1865880"
  },
  {
    "text": "there's there's nobody on the other side of the wall right and so uh you you've really got to uh own it from beginning",
    "start": "1865880",
    "end": "1871039"
  },
  {
    "text": "to end and so as we start building these teams and building these small services",
    "start": "1871039",
    "end": "1877200"
  },
  {
    "text": "and sort of peeling the onion and and pulling uh Services out of our monolithic um artifacts we're going to",
    "start": "1877200",
    "end": "1884159"
  },
  {
    "text": "find ourselves with dozens and potentially hundreds of microservices and that means that we're going to be members of a community so as service",
    "start": "1884159",
    "end": "1891039"
  },
  {
    "text": "owners uh we're going to be both consumers and providers of services in this community in any Community it's",
    "start": "1891039",
    "end": "1897600"
  },
  {
    "text": "important to be a good citizen so we want to make sure that our teams are thinking about good citizenship in this",
    "start": "1897600",
    "end": "1903240"
  },
  {
    "text": "new in this new area and so if we think about the service consumer side which most services are going to be",
    "start": "1903240",
    "end": "1909880"
  },
  {
    "text": "consumers a good citizen means that you're going to design for failure right verer likes to say everything fails all",
    "start": "1909880",
    "end": "1915639"
  },
  {
    "text": "of the time right we hope that that's not you know literally true for our services uh but in a it's a great",
    "start": "1915639",
    "end": "1921360"
  },
  {
    "text": "mindset to take when you think about consuming services from somebody else inside your organization so what's going",
    "start": "1921360",
    "end": "1927120"
  },
  {
    "text": "to happen when you're making a service call uh and it times out what happens if it's just taking a long time if it's tar",
    "start": "1927120",
    "end": "1932919"
  },
  {
    "text": "pitting you what happens if you get an HTTP 429 that's saying hey slow down um you're being throttled so you need to",
    "start": "1932919",
    "end": "1939000"
  },
  {
    "text": "think about that with every service call and really think about how you can degrade gracefully can you continue to",
    "start": "1939000",
    "end": "1944960"
  },
  {
    "text": "provide some partial service uh while you while you're having trouble talking to those other services so expect to be",
    "start": "1944960",
    "end": "1950880"
  },
  {
    "text": "throttled build retry logic into your client service calls uh you should use",
    "start": "1950880",
    "end": "1955960"
  },
  {
    "text": "exponential back off uh for example the AWS sdks do that by default they're going to roughly double the amount of",
    "start": "1955960",
    "end": "1961639"
  },
  {
    "text": "time that they wait in between uh each service call if the service call is failing so we can give that service",
    "start": "1961639",
    "end": "1967039"
  },
  {
    "text": "that's in trouble a chance to breathe and recover and caching becomes very important in this model and we're going",
    "start": "1967039",
    "end": "1972760"
  },
  {
    "text": "to talk a little bit more about that caching of course important uh across the board uh in in Information",
    "start": "1972760",
    "end": "1978760"
  },
  {
    "text": "Technology but as a service client it becomes especially important so if we think about the other",
    "start": "1978760",
    "end": "1985519"
  },
  {
    "text": "side of this of this transaction the service provider being a good citizen",
    "start": "1985519",
    "end": "1990760"
  },
  {
    "text": "starts with publishing your metrics right once you're once you're on the hook for providing a service that",
    "start": "1990760",
    "end": "1996639"
  },
  {
    "text": "probably multiple other services depend on they're going to be looking for you to be able to provide things like what's",
    "start": "1996639",
    "end": "2002679"
  },
  {
    "text": "the throughput that you're currently seeing what's the error rate that you're currently seeing what's the latency that",
    "start": "2002679",
    "end": "2008120"
  },
  {
    "text": "you're currently seeing those are all critical metrics and if somebody thinks that something's going on they need to be able to go and find uh those at least",
    "start": "2008120",
    "end": "2015360"
  },
  {
    "text": "those three metrics so think about the externally relevant metrics that your service um is providing to other people",
    "start": "2015360",
    "end": "2021440"
  },
  {
    "text": "and make sure that those are publicly available the next thing is to protect yourself so you're going to want to",
    "start": "2021440",
    "end": "2026720"
  },
  {
    "text": "build throttling into your API if you have a misbehaving client that's trying to basically do an accidental denial of",
    "start": "2026720",
    "end": "2033080"
  },
  {
    "text": "service attack you want to be able to stop them before they can take you down and cause degradation for other services",
    "start": "2033080",
    "end": "2039480"
  },
  {
    "text": "so build build throttling into your API you want to keep your implementation details product uh private so again once",
    "start": "2039480",
    "end": "2046960"
  },
  {
    "text": "you have dozens and hundreds of microservices in this ecosystem um if you leak your implementation details",
    "start": "2046960",
    "end": "2053118"
  },
  {
    "text": "people are going to start depending on them and then you're going to be stuck with your implementation so just make sure that you have a very clear service",
    "start": "2053119",
    "end": "2059079"
  },
  {
    "text": "boundary you know hide your implementation details behind your API very important and backwards compatibility",
    "start": "2059079",
    "end": "2065878"
  },
  {
    "text": "becomes very important um backwards compatibility when you have a few clients you can ask them to take an",
    "start": "2065879",
    "end": "2071000"
  },
  {
    "text": "incompatible API change every once in a while maybe not a big deal they might Grumble about it a little bit uh but you",
    "start": "2071000",
    "end": "2076919"
  },
  {
    "text": "can imagine a hundred Services trying to make a couple of backwards incompatible changes a year and you're going to have",
    "start": "2076919",
    "end": "2082878"
  },
  {
    "text": "chaos and so being a good service provider in this case means make forwards compatible changes Right add",
    "start": "2082879",
    "end": "2089560"
  },
  {
    "text": "new HTTP or API methods to your service don't delete methods because people are going to be depending on them don't",
    "start": "2089560",
    "end": "2095398"
  },
  {
    "text": "change the functionality think about adding them or use API versioning which will make it easy for people to take new",
    "start": "2095399",
    "end": "2101760"
  },
  {
    "text": "versions and other people can stay on the old versions and so I'd be remiss talking",
    "start": "2101760",
    "end": "2107079"
  },
  {
    "text": "about uh being a good service provider uh if I didn't mention Amazon API Gateway so certainly you can roll your",
    "start": "2107079",
    "end": "2114000"
  },
  {
    "text": "own throttling uh using things like engine X and Apache httpd uh you can roll your own caching using elastic",
    "start": "2114000",
    "end": "2120720"
  },
  {
    "text": "cache or you can build your own redis or mcash D cluster you can do your own monitoring there's lots of great",
    "start": "2120720",
    "end": "2126440"
  },
  {
    "text": "monitoring software out there and you can think about versioning and authentication uh Amazon API Gateway um",
    "start": "2126440",
    "end": "2132640"
  },
  {
    "text": "attempts to put all of those together into one package for you so certainly suggest that you think about using API",
    "start": "2132640",
    "end": "2138000"
  },
  {
    "text": "Gateway if it makes sense for your services as you start to build them out so next let's move on to Discovery",
    "start": "2138000",
    "end": "2145119"
  },
  {
    "text": "this is something that we hear from customers uh as a concern as they start to build out their service architecture",
    "start": "2145119",
    "end": "2150400"
  },
  {
    "text": "how am I going to find 100 different services in this environment right and it turns out that it's actually usually",
    "start": "2150400",
    "end": "2156280"
  },
  {
    "text": "pretty straightforward um and so the simple way to think about this is to use DNS right have a well well agreed upon",
    "start": "2156280",
    "end": "2163200"
  },
  {
    "text": "convention for how you're going to name your services inject the environment that you're going to be running your service in at runtime and since your",
    "start": "2163200",
    "end": "2170480"
  },
  {
    "text": "service knows the name of the environment that it's in and it knows the name of the service that it needs to to hit it can uh it can easily go and",
    "start": "2170480",
    "end": "2178760"
  },
  {
    "text": "find typically an elastic load balancer uh but the DNS name that that's going to provide that",
    "start": "2178760",
    "end": "2185720"
  },
  {
    "text": "service now there are a few issues with this one of them is you know your clients might not be respecting TTL and",
    "start": "2185720",
    "end": "2191359"
  },
  {
    "text": "so if you want to make a lot of changes they're going to be using cach DNS and uh you know it's a pretty it's a",
    "start": "2191359",
    "end": "2196920"
  },
  {
    "text": "pretty Bare Bones model so if the simple model is not working for you you can think about making uh a dynamic service",
    "start": "2196920",
    "end": "2203119"
  },
  {
    "text": "registry there's plenty of great options out there that can handle Dynamic service registry and the nice thing",
    "start": "2203119",
    "end": "2208640"
  },
  {
    "text": "about those is they're going to give you additional functionality besides just where's my service you're going to give you things like configuration management",
    "start": "2208640",
    "end": "2214560"
  },
  {
    "text": "health checks lots of other stuff so if the simp model looks like it's not going to work you can you can take a look at",
    "start": "2214560",
    "end": "2220359"
  },
  {
    "text": "some of those other options so moving right along uh the",
    "start": "2220359",
    "end": "2227040"
  },
  {
    "text": "third challenge uh and set of patterns that we see is around data",
    "start": "2227040",
    "end": "2232200"
  },
  {
    "text": "management and so Aid talked about this uh in the beginning of the session here but the monolithic world we really are",
    "start": "2233240",
    "end": "2240480"
  },
  {
    "text": "used to this pattern of a big monolithic uh typically expensive uh centralized",
    "start": "2240480",
    "end": "2245599"
  },
  {
    "text": "database and lots and lots of applications that are depending on that database there's some challenges with",
    "start": "2245599",
    "end": "2250880"
  },
  {
    "text": "this model so one of them as Aid mentioned is schem of changes can become very difficult uh if you have lots of",
    "start": "2250880",
    "end": "2257400"
  },
  {
    "text": "service teams that are are depending on the same schema uh it could take months uh potentially a number of months to get",
    "start": "2257400",
    "end": "2263319"
  },
  {
    "text": "everybody to agree and finally push that schema change out into production it means that you're typically going to",
    "start": "2263319",
    "end": "2269240"
  },
  {
    "text": "wind up locked into a single technology vendor uh for better or worse uh over time um typically you're going to be",
    "start": "2269240",
    "end": "2275079"
  },
  {
    "text": "writing custom sword procedures you're going to be using non-standard SQL uh extensions it's going to get harder and",
    "start": "2275079",
    "end": "2280640"
  },
  {
    "text": "harder over time if you do want to switch out implementations it means that you're signing up for vertical scaling uh and",
    "start": "2280640",
    "end": "2287640"
  },
  {
    "text": "the different database vendors have done a good job over the years at getting better and better at vertical scaling uh",
    "start": "2287640",
    "end": "2292680"
  },
  {
    "text": "but of course uh horizontal scaling is typically going to win as you as you continue to",
    "start": "2292680",
    "end": "2297800"
  },
  {
    "text": "grow and it means that you have a single point of failure it means that that single database uh if it goes out or if",
    "start": "2297800",
    "end": "2303160"
  },
  {
    "text": "it has problems could affect lots of people so we're going to say this is an anti- pattern in the in the",
    "start": "2303160",
    "end": "2308839"
  },
  {
    "text": "microservices world and so moving to microservices means that we're going to decentralize",
    "start": "2308839",
    "end": "2315079"
  },
  {
    "text": "these data stores we're not going to let Services share data stores and developers love this right because we",
    "start": "2315079",
    "end": "2321119"
  },
  {
    "text": "get to pick the data uh storage technology that makes sense for our service that's typically going to be",
    "start": "2321119",
    "end": "2326800"
  },
  {
    "text": "based on our data access pattern so we're going to think about how we need to read the data and we're going to use the right data data store for the job",
    "start": "2326800",
    "end": "2333560"
  },
  {
    "text": "often that's more than one data store often that's multiple data stores and nice thing about being being an AWS is you can pick uh you know two three four",
    "start": "2333560",
    "end": "2340599"
  },
  {
    "text": "data stores uh whatever you need for the job it's very easy to do it means that you can move very fast right because you",
    "start": "2340599",
    "end": "2346560"
  },
  {
    "text": "don't need to depend on anybody for a schema change your team can agree on it you can push it out and you're done um",
    "start": "2346560",
    "end": "2352560"
  },
  {
    "text": "it means that you're going to scale independently so that's important for cost uh and it means that you can really um have full control over how you're",
    "start": "2352560",
    "end": "2358920"
  },
  {
    "text": "scaling your data tier and again we want to gate that data through the service API we don't want to share the actual",
    "start": "2358920",
    "end": "2364839"
  },
  {
    "text": "raw connection to our data store um with any of the other services because they're immediately going to start depending on",
    "start": "2364839",
    "end": "2372119"
  },
  {
    "text": "implementation another challenge that we hear about is transactional integrity um right so typically with a giant",
    "start": "2372880",
    "end": "2379280"
  },
  {
    "text": "monolithic database you can use the transaction features that are built into your database engine and you can make",
    "start": "2379280",
    "end": "2385040"
  },
  {
    "text": "sure that you have uh you know whatever transactional guarantees that you need and if you split that data out into",
    "start": "2385040",
    "end": "2390960"
  },
  {
    "text": "multiple services and you now need to pull bits of data from different Services well how do I do a transaction",
    "start": "2390960",
    "end": "2397000"
  },
  {
    "text": "so there's two ways to think about this the traditional model with databases is the pessimistic model it means you're",
    "start": "2397000",
    "end": "2402800"
  },
  {
    "text": "going to design for the 1% of the cases uh where you have a transactional issue and you're going to do a lot of work",
    "start": "2402800",
    "end": "2408440"
  },
  {
    "text": "ahead of time to make sure that you you're ready for it and you can you can stick along with that model um you can",
    "start": "2408440",
    "end": "2414160"
  },
  {
    "text": "move that transaction into your client application logic you can own it yourself and you can say I'm going to go",
    "start": "2414160",
    "end": "2419480"
  },
  {
    "text": "hit these services and if there's a problem uh I'm going to write logic that's going to going to solve it you",
    "start": "2419480",
    "end": "2425000"
  },
  {
    "text": "can create a new microservices new microservice and call it the transaction manager or the distributed locking",
    "start": "2425000",
    "end": "2430480"
  },
  {
    "text": "Service uh and you can have lots of distributed locks and you can go get a distributed lock do the work that you need to do and then and then release it",
    "start": "2430480",
    "end": "2436720"
  },
  {
    "text": "back um there's some Frameworks out there Dynamo DB for example has been used for this um and then another option",
    "start": "2436720",
    "end": "2444200"
  },
  {
    "text": "is to Simply rethink your design and so many times um strict transactional",
    "start": "2444200",
    "end": "2449480"
  },
  {
    "text": "Integrity is actually not needed and so every service team can think about whether or not they need strong",
    "start": "2449480",
    "end": "2455160"
  },
  {
    "text": "transactional guarantees and in many cases it's actually not necessary so you can switch to an optimistic model where",
    "start": "2455160",
    "end": "2461520"
  },
  {
    "text": "you're programming for the 95% the 99% uh you can accept that eventual consistency is fine for your use case uh",
    "start": "2461520",
    "end": "2469440"
  },
  {
    "text": "eventual consistency is great from a scaling perspective um if the operation is idempotent if you're doing a put",
    "start": "2469440",
    "end": "2476359"
  },
  {
    "text": "operation across multiple Services uh and you can put it more than once and it's not going to affect the state of",
    "start": "2476359",
    "end": "2481400"
  },
  {
    "text": "the system if you have some kind of transactional issue you can just do it again um you can fix it later so you can",
    "start": "2481400",
    "end": "2488160"
  },
  {
    "text": "think about having a a dead letter CU or some kind of uh place where you're keeping track of uh issues that happen",
    "start": "2488160",
    "end": "2493599"
  },
  {
    "text": "during the day and you can go back and fix them uh later on so for some use cases it's not really urgent to fix",
    "start": "2493599",
    "end": "2499400"
  },
  {
    "text": "these kinds of issues and you can focus on that 99% optimistic case or in some",
    "start": "2499400",
    "end": "2504440"
  },
  {
    "text": "cases you can actually say it doesn't matter so another challenge with this model where we're splitting out data",
    "start": "2504440",
    "end": "2511000"
  },
  {
    "text": "into different Services is aggregation so great we've split this data out into lots of small data stores well now I",
    "start": "2511000",
    "end": "2516960"
  },
  {
    "text": "need a roll up at the end of the day somebody in the business is asking me uh to have an aggregate view of what the",
    "start": "2516960",
    "end": "2522160"
  },
  {
    "text": "services have inside them uh and so there's three ways that you can think about doing this the first model is",
    "start": "2522160",
    "end": "2528760"
  },
  {
    "text": "probably the most pure um it's a poll model where you create as part of your API way to get batch data out of it and",
    "start": "2528760",
    "end": "2537200"
  },
  {
    "text": "so you can have a marker uh and you can have Batch get uh API calls and your clients can go and pull all the data out",
    "start": "2537200",
    "end": "2544280"
  },
  {
    "text": "that they need and then go aggregate it somewhere that's not going to be very efficient and so in practice what we see",
    "start": "2544280",
    "end": "2550640"
  },
  {
    "text": "is typically more of a push model so your services are all going to agree in this case to be tightly coupled uh to",
    "start": "2550640",
    "end": "2557839"
  },
  {
    "text": "something like S3 or Cloud watch or maybe an aggregation service that you write and you're going to push that data",
    "start": "2557839",
    "end": "2564800"
  },
  {
    "text": "you know every minute every five minutes uh every so often to this centralized place that it can get rolled up uh we",
    "start": "2564800",
    "end": "2570960"
  },
  {
    "text": "just announce the service um uh Kinesis fire hose uh which could potentially be",
    "start": "2570960",
    "end": "2576359"
  },
  {
    "text": "great for this where you drop the Kinesis agent onto the host that are generating this data uh if it's log data",
    "start": "2576359",
    "end": "2581640"
  },
  {
    "text": "for example uh and it'll automatically get pushed out to S3 or out to redshift so that could be a good option and then",
    "start": "2581640",
    "end": "2588000"
  },
  {
    "text": "pubsub is another option you can create a subscribe API call in method into your API and you can let the other services",
    "start": "2588000",
    "end": "2595119"
  },
  {
    "text": "that need to do this aggregation subscribe to a feed you can push that data out using Kinesis or sqs or some",
    "start": "2595119",
    "end": "2601040"
  },
  {
    "text": "other method uh so that the the different services that need to do aggregation can get exactly the data",
    "start": "2601040",
    "end": "2606240"
  },
  {
    "text": "that they need so a little bit more sophisticated that'll give you some more fine grain",
    "start": "2606240",
    "end": "2611920"
  },
  {
    "text": "control so moving on uh to deployment so continuous delivery and",
    "start": "2612400",
    "end": "2618960"
  },
  {
    "text": "continuous deployment work great with the microservices model and we see Guilt do this for example so you know the the",
    "start": "2618960",
    "end": "2625480"
  },
  {
    "text": "right build pipeline for each service is really going to be up to the service team so some service teams are going to",
    "start": "2625480",
    "end": "2630720"
  },
  {
    "text": "say hey we want to do continuous delivery all the way to some staging environment for example so we're going",
    "start": "2630720",
    "end": "2636240"
  },
  {
    "text": "to get it into staging we're going to run some integration tests and then we're going to have a manual push to production and for some Services that's",
    "start": "2636240",
    "end": "2641839"
  },
  {
    "text": "the right call it's it's too critical to do automated deployment for other services uh customers tell us hey it",
    "start": "2641839",
    "end": "2648160"
  },
  {
    "text": "really doesn't matter you know if if we push the wrong uh we push a bug out into production for this service uh not a big",
    "start": "2648160",
    "end": "2653760"
  },
  {
    "text": "deal uh we can always roll it back later we can detect it um and so it's really up to each team to make that decision",
    "start": "2653760",
    "end": "2660040"
  },
  {
    "text": "how far do we want to push automation there's lots of great software out there for this um and so",
    "start": "2660040",
    "end": "2665920"
  },
  {
    "text": "you can pick the one that you're currently comfortable with uh or you can try something",
    "start": "2665920",
    "end": "2671920"
  },
  {
    "text": "new of course code pipeline uh gives you the ability to visually draw this out um",
    "start": "2672400",
    "end": "2678480"
  },
  {
    "text": "and so that's another thing that you can you can think about looking uh to",
    "start": "2678480",
    "end": "2683839"
  },
  {
    "text": "do so uh another issue and this is something that guilt R ran into is running multiple Services per container",
    "start": "2684920",
    "end": "2691200"
  },
  {
    "text": "uh or per instance depending on the deployment methodology that you're using U there's some issues with doing",
    "start": "2691200",
    "end": "2697480"
  },
  {
    "text": "this uh this is what we're used to in the in the monolithic world but it means that monitoring is now going to be",
    "start": "2697480",
    "end": "2703079"
  },
  {
    "text": "shared across different service teams so if I see an issue with high CPU High memory uh operating system errors it's",
    "start": "2703079",
    "end": "2710240"
  },
  {
    "text": "not easy to pinpoint what the culprit is it means that my unit of scale is tied",
    "start": "2710240",
    "end": "2715960"
  },
  {
    "text": "to multiple service so my user service in this example needs to grow my other services are going to get dragged along",
    "start": "2715960",
    "end": "2721760"
  },
  {
    "text": "with it that's not cost efficient it means there's a lack of clear ownership which of the services",
    "start": "2721760",
    "end": "2727040"
  },
  {
    "text": "teams owns this instance and it means that IM immutable deployments are going to become very",
    "start": "2727040",
    "end": "2732559"
  },
  {
    "text": "hard because each instance or each container uh has multiple uh folks inside of it that may be wanting to make",
    "start": "2732559",
    "end": "2738680"
  },
  {
    "text": "changes so we're going to say again this is an anti- pattern for microservices",
    "start": "2738680",
    "end": "2744440"
  },
  {
    "text": "architecture so there's a lot of benefits by thinking about going to a single service per container uh or a",
    "start": "2744440",
    "end": "2750079"
  },
  {
    "text": "single service per instance uh a lot of these challenges go away and so this is definitely a good pattern to follow with",
    "start": "2750079",
    "end": "2759280"
  },
  {
    "text": "microservices and of course there's a third option uh and we're seeing more and more of this which is to get rid of the services all together uh plenty of",
    "start": "2760000",
    "end": "2767079"
  },
  {
    "text": "immutability there uh plenty of scaling there uh API Gateway can handle the front end of this uh Lambda can handle",
    "start": "2767079",
    "end": "2774680"
  },
  {
    "text": "the execution and then you can pick your favorite uh backend for the data store and just get out of the business of",
    "start": "2774680",
    "end": "2781079"
  },
  {
    "text": "doing these deployments at all uh and just push code so definitely an emergent pattern and a great uh fit for for",
    "start": "2781079",
    "end": "2790040"
  },
  {
    "text": "microservices so uh the next um the next issue that we see is IO explosion for",
    "start": "2792680",
    "end": "2798880"
  },
  {
    "text": "for the term for the purposes of this talk and what that means is as you get",
    "start": "2798880",
    "end": "2804160"
  },
  {
    "text": "many dozens or maybe many hundreds of services running out in production your dependency graph is going to get harder",
    "start": "2804160",
    "end": "2810160"
  },
  {
    "text": "and harder to understand or maybe even compute uh or maybe even print on a on a on a reasonably sized piece of paper",
    "start": "2810160",
    "end": "2817359"
  },
  {
    "text": "and so that's fine but it means that um some of your services May wind up get running very hot right they're just very",
    "start": "2817359",
    "end": "2824280"
  },
  {
    "text": "popular they're in the critical path for a lot of other services and that's going to become expensive you're going to have to scale those Services out to handle",
    "start": "2824280",
    "end": "2830599"
  },
  {
    "text": "the increased CPU Network traffic and so we can see in this diagram uh you know a",
    "start": "2830599",
    "end": "2836040"
  },
  {
    "text": "single request can fan out into potentially many many requests and so as a good citizen in this uh in this",
    "start": "2836040",
    "end": "2844480"
  },
  {
    "text": "ecosystem we can think about as a service consumer adding a local cash and we can actually pull whole whole",
    "start": "2844480",
    "end": "2851000"
  },
  {
    "text": "branches of this diagram and make them not necessary so by doing that as as",
    "start": "2851000",
    "end": "2856480"
  },
  {
    "text": "early as we can in the call chain that means we'll be able to to make the most",
    "start": "2856480",
    "end": "2862960"
  },
  {
    "text": "savings another challenge that we've seen is hotpots and again that just means you've built one of the services",
    "start": "2863839",
    "end": "2869119"
  },
  {
    "text": "that's very popular uh and that's a nice thing but how can we sort of um reduce",
    "start": "2869119",
    "end": "2874480"
  },
  {
    "text": "the number of calls here but in this case we've got this user service it's being asked the same question repeatedly",
    "start": "2874480",
    "end": "2879640"
  },
  {
    "text": "there's really no reason for that to be done and so you can borrow a term from",
    "start": "2879640",
    "end": "2884839"
  },
  {
    "text": "software development World which is a dependency injection which means the service is going to require that you",
    "start": "2884839",
    "end": "2890280"
  },
  {
    "text": "pass along some of the data that it needs as part of its API so you can't make the service call without going off",
    "start": "2890280",
    "end": "2896559"
  },
  {
    "text": "to this user service and getting the data that the shipping service needs uh in that case we're actually",
    "start": "2896559",
    "end": "2903040"
  },
  {
    "text": "going to force by the API design um uh a good behavior here and we're going to",
    "start": "2903040",
    "end": "2908440"
  },
  {
    "text": "take some of the pressure off of this user service it's another thing to think about from the server from the service",
    "start": "2908440",
    "end": "2914359"
  },
  {
    "text": "provider side where it makes",
    "start": "2914359",
    "end": "2918519"
  },
  {
    "text": "sense so next I'd like to talk a little bit about monitoring and so monitoring can also",
    "start": "2920000",
    "end": "2927079"
  },
  {
    "text": "become a challenge in a world where we've got lots and lots of services and so it's important to think about",
    "start": "2927079",
    "end": "2932200"
  },
  {
    "text": "splitting the monitoring Horizon into two there are metrics and so latency",
    "start": "2932200",
    "end": "2938119"
  },
  {
    "text": "request per second error rate that your clients of your service care about uh",
    "start": "2938119",
    "end": "2944599"
  },
  {
    "text": "and so again it's important to make sure you're publishing those and making those available so people can understand the health of your",
    "start": "2944599",
    "end": "2950400"
  },
  {
    "text": "service and then there's all the other metrics that have to do with how you've built this thing and frankly nobody else",
    "start": "2950400",
    "end": "2956119"
  },
  {
    "text": "cares how you've built your service right that's that's that's up to you to understand it's up to you to change if",
    "start": "2956119",
    "end": "2961359"
  },
  {
    "text": "you need to um but when you have an issue with your service you're going to care very much about the details",
    "start": "2961359",
    "end": "2967440"
  },
  {
    "text": "and so we can give the internally relevant metrics um over to the service",
    "start": "2967440",
    "end": "2972559"
  },
  {
    "text": "teams they can pick their favorite monitoring framework and again there's lots out there uh and they can they can",
    "start": "2972559",
    "end": "2977760"
  },
  {
    "text": "use the ones that are the best uh suited for their application so another challenge is",
    "start": "2977760",
    "end": "2984559"
  },
  {
    "text": "logging again we want to keep the data stores separate we want to keep uh the",
    "start": "2984559",
    "end": "2989599"
  },
  {
    "text": "the API boundary in between uh these different Services pure but logging is another case one of these these edge",
    "start": "2989599",
    "end": "2996040"
  },
  {
    "text": "cases where you really want to agree on a logging solution across the board uh",
    "start": "2996040",
    "end": "3001839"
  },
  {
    "text": "by doing that you can push uh your logs from all of your service into uh a",
    "start": "3001839",
    "end": "3007359"
  },
  {
    "text": "common logging Service uh like Summa Logic for example or Splunk uh you can build your own uh elk uh elastic search",
    "start": "3007359",
    "end": "3015920"
  },
  {
    "text": "um log stash Cabana cluster if you like um whatever the solution is you know",
    "start": "3015920",
    "end": "3021240"
  },
  {
    "text": "pick one and stick with it and then you'll be able to correlate so correlating uh request",
    "start": "3021240",
    "end": "3027599"
  },
  {
    "text": "becomes increasingly important when you have lots and lots of services where did I have a failure somewhere down the line",
    "start": "3027599",
    "end": "3034119"
  },
  {
    "text": "here and so if you take the time to establish this logging standard across all of your",
    "start": "3034119",
    "end": "3040240"
  },
  {
    "text": "teams you can use correlation IDs and this becomes very important and that could be as simple as just at the very",
    "start": "3040240",
    "end": "3046400"
  },
  {
    "text": "beginning of your call chain um pick a unique identifier and then stick that in",
    "start": "3046400",
    "end": "3051799"
  },
  {
    "text": "the header of every single API call and the modern logging aggregation tools are great great at having you type in a",
    "start": "3051799",
    "end": "3058839"
  },
  {
    "text": "string into the search box and seeing a Time ordered uh set of every single log entry from every single service um so",
    "start": "3058839",
    "end": "3066000"
  },
  {
    "text": "that's a great way to do some troubleshooting and it's easy to set",
    "start": "3066000",
    "end": "3071880"
  },
  {
    "text": "up and so we're just about up on time here but we talked about six again not an exhaustive list but uh six things to",
    "start": "3072520",
    "end": "3079400"
  },
  {
    "text": "think about as you begin this journey towards the microservices",
    "start": "3079400",
    "end": "3084960"
  },
  {
    "text": "architecture so there's some great related sessions here that I would encourage you to check",
    "start": "3085040",
    "end": "3090240"
  },
  {
    "text": "out please complete your evaluations uh and we're right up about out of time so",
    "start": "3090240",
    "end": "3095920"
  },
  {
    "text": "thank you very much for attending [Applause]",
    "start": "3095920",
    "end": "3105630"
  }
]