[
  {
    "text": "[Music]",
    "start": "380",
    "end": "12109"
  },
  {
    "text": "hello",
    "start": "12240",
    "end": "12960"
  },
  {
    "text": "i'm mayush a cloud support engineer here",
    "start": "12960",
    "end": "15120"
  },
  {
    "text": "at aws office in dallas",
    "start": "15120",
    "end": "16800"
  },
  {
    "text": "today i'm going to show you how to",
    "start": "16800",
    "end": "18320"
  },
  {
    "text": "resolve the aws lambda error you receive",
    "start": "18320",
    "end": "20560"
  },
  {
    "text": "when the policy size for function gets",
    "start": "20560",
    "end": "22400"
  },
  {
    "text": "bigger than the limit",
    "start": "22400",
    "end": "23760"
  },
  {
    "text": "let's get started our aim is to find all",
    "start": "23760",
    "end": "26640"
  },
  {
    "text": "the repetitive statements that belong to",
    "start": "26640",
    "end": "28640"
  },
  {
    "text": "the same principle",
    "start": "28640",
    "end": "29679"
  },
  {
    "text": "or have same prefix in the source arn in",
    "start": "29679",
    "end": "31920"
  },
  {
    "text": "the functions policy",
    "start": "31920",
    "end": "33360"
  },
  {
    "text": "and then replace them with the single",
    "start": "33360",
    "end": "34880"
  },
  {
    "text": "white card statement that represents all",
    "start": "34880",
    "end": "37120"
  },
  {
    "text": "the statements at once",
    "start": "37120",
    "end": "38800"
  },
  {
    "text": "first we must find all these statements",
    "start": "38800",
    "end": "41040"
  },
  {
    "text": "in the function policy",
    "start": "41040",
    "end": "42640"
  },
  {
    "text": "we can do that either from aws",
    "start": "42640",
    "end": "44239"
  },
  {
    "text": "management console or by using aws cli",
    "start": "44239",
    "end": "47200"
  },
  {
    "text": "in the aws command line interface first",
    "start": "47200",
    "end": "49840"
  },
  {
    "text": "let's see how to find it from the",
    "start": "49840",
    "end": "51199"
  },
  {
    "text": "console",
    "start": "51199",
    "end": "52000"
  },
  {
    "text": "after logging into the console navigate",
    "start": "52000",
    "end": "54399"
  },
  {
    "text": "to the lambda console",
    "start": "54399",
    "end": "58000"
  },
  {
    "text": "then select and open the lambda function",
    "start": "58000",
    "end": "60480"
  },
  {
    "text": "that is getting the error",
    "start": "60480",
    "end": "63520"
  },
  {
    "text": "let's switch to the permissions tab and",
    "start": "70320",
    "end": "72400"
  },
  {
    "text": "scroll down to the resource-based policy",
    "start": "72400",
    "end": "74159"
  },
  {
    "text": "section",
    "start": "74159",
    "end": "76560"
  },
  {
    "text": "note all the sids that have the same",
    "start": "78400",
    "end": "80159"
  },
  {
    "text": "principle or have the same prefix",
    "start": "80159",
    "end": "81920"
  },
  {
    "text": "for their source arn that we can then",
    "start": "81920",
    "end": "84840"
  },
  {
    "text": "replace",
    "start": "84840",
    "end": "87840"
  },
  {
    "text": "to do the same from aws cli we must",
    "start": "92720",
    "end": "95119"
  },
  {
    "text": "first have aws eli installed",
    "start": "95119",
    "end": "97119"
  },
  {
    "text": "and ready to make awsc like commands you",
    "start": "97119",
    "end": "99920"
  },
  {
    "text": "can also use command line json processor",
    "start": "99920",
    "end": "101920"
  },
  {
    "text": "jq",
    "start": "101920",
    "end": "102560"
  },
  {
    "text": "to write advanced queries to filter out",
    "start": "102560",
    "end": "104399"
  },
  {
    "text": "specific details from the aws cli",
    "start": "104399",
    "end": "106399"
  },
  {
    "text": "commands",
    "start": "106399",
    "end": "107360"
  },
  {
    "text": "for instructions to download and install",
    "start": "107360",
    "end": "109200"
  },
  {
    "text": "jq see download jq on the jq website on",
    "start": "109200",
    "end": "112000"
  },
  {
    "text": "github",
    "start": "112000",
    "end": "113200"
  },
  {
    "text": "let's open terminal and run the command",
    "start": "113200",
    "end": "115360"
  },
  {
    "text": "to get functions policy",
    "start": "115360",
    "end": "118719"
  },
  {
    "text": "we can see from the output that sns is",
    "start": "124719",
    "end": "126719"
  },
  {
    "text": "the most repetitive principle in the",
    "start": "126719",
    "end": "128080"
  },
  {
    "text": "policy",
    "start": "128080",
    "end": "129039"
  },
  {
    "text": "we can also see that there are multiple",
    "start": "129039",
    "end": "130560"
  },
  {
    "text": "statements with the source iron that",
    "start": "130560",
    "end": "132160"
  },
  {
    "text": "starts with the sns test",
    "start": "132160",
    "end": "133599"
  },
  {
    "text": "prefix we can filter out all the",
    "start": "133599",
    "end": "135840"
  },
  {
    "text": "statement that has source iron that",
    "start": "135840",
    "end": "137280"
  },
  {
    "text": "start with the sns test with the command",
    "start": "137280",
    "end": "143840"
  },
  {
    "text": "let's remove all the statements that we",
    "start": "148720",
    "end": "150560"
  },
  {
    "text": "retrieved earlier using the command",
    "start": "150560",
    "end": "156319"
  },
  {
    "text": "now we can add a new single statement",
    "start": "156319",
    "end": "158000"
  },
  {
    "text": "that uses wildcard",
    "start": "158000",
    "end": "159360"
  },
  {
    "text": "sns test dash star to represent all the",
    "start": "159360",
    "end": "162560"
  },
  {
    "text": "statements that we deleted earlier",
    "start": "162560",
    "end": "164480"
  },
  {
    "text": "we can run the command",
    "start": "164480",
    "end": "171840"
  },
  {
    "text": "we have now successfully added wildcard",
    "start": "173680",
    "end": "175360"
  },
  {
    "text": "permission on the functions policy and",
    "start": "175360",
    "end": "177120"
  },
  {
    "text": "reduce the policy size to add more",
    "start": "177120",
    "end": "178720"
  },
  {
    "text": "statements",
    "start": "178720",
    "end": "179519"
  },
  {
    "text": "you can follow the same method for other",
    "start": "179519",
    "end": "181120"
  },
  {
    "text": "repetitive principle or source crns that",
    "start": "181120",
    "end": "183440"
  },
  {
    "text": "have the same prefix and then",
    "start": "183440",
    "end": "185200"
  },
  {
    "text": "replace them with the wildcard",
    "start": "185200",
    "end": "186480"
  },
  {
    "text": "statements to further reduce the size of",
    "start": "186480",
    "end": "188319"
  },
  {
    "text": "a function's policy",
    "start": "188319",
    "end": "190879"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "190879",
    "end": "192640"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "192640",
    "end": "199840"
  },
  {
    "text": "you",
    "start": "200959",
    "end": "203040"
  }
]