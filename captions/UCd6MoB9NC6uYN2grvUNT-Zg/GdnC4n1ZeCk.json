[
  {
    "text": "- [Jason] Hi.",
    "start": "1560",
    "end": "2393"
  },
  {
    "text": "Today in this demo video series,",
    "start": "2393",
    "end": "3659"
  },
  {
    "text": "I will be talking about how\nto deploy containers on AWS",
    "start": "3660",
    "end": "6480"
  },
  {
    "text": "without any container\norchestrator knowledge.",
    "start": "6480",
    "end": "9059"
  },
  {
    "text": "So let's start at a very high level",
    "start": "9060",
    "end": "10440"
  },
  {
    "text": "and start working down what\nwe've heard from customers",
    "start": "10440",
    "end": "12629"
  },
  {
    "text": "as well as developers who want\nto focus on app development,",
    "start": "12630",
    "end": "15480"
  },
  {
    "text": "but face many challenges which\nlimits their productivity.",
    "start": "15480",
    "end": "18930"
  },
  {
    "text": "Firstly, they would like to innovate",
    "start": "18930",
    "end": "20280"
  },
  {
    "text": "and focus on applications on their code",
    "start": "20280",
    "end": "22710"
  },
  {
    "text": "to be able to build value-added services",
    "start": "22710",
    "end": "24096"
  },
  {
    "text": "and products on top of AWS.",
    "start": "24097",
    "end": "26610"
  },
  {
    "text": "Secondly, they wanna do this\nin a way that allows them",
    "start": "26610",
    "end": "28950"
  },
  {
    "text": "to scale far beyond what\nthey will be able to do so",
    "start": "28950",
    "end": "31560"
  },
  {
    "text": "on their traditional\non-premises data centers,",
    "start": "31560",
    "end": "33960"
  },
  {
    "text": "so they want to be able to scale out",
    "start": "33960",
    "end": "35520"
  },
  {
    "text": "and scale in very quickly, and of course,",
    "start": "35520",
    "end": "37500"
  },
  {
    "text": "this whole process has to\nbe painless and seamless.",
    "start": "37500",
    "end": "40650"
  },
  {
    "text": "Lastly, security is very important,",
    "start": "40650",
    "end": "42165"
  },
  {
    "text": "so they want to be\ndeveloping and operating",
    "start": "42165",
    "end": "44548"
  },
  {
    "text": "in a very secure manner.",
    "start": "44548",
    "end": "46383"
  },
  {
    "text": "So let's take a look App\nRunner's building blocks,",
    "start": "48300",
    "end": "50100"
  },
  {
    "text": "or what's under the hood.",
    "start": "50100",
    "end": "51600"
  },
  {
    "text": "At the top here, you see\nthe application coming out",
    "start": "51600",
    "end": "53940"
  },
  {
    "text": "of either a container registry,",
    "start": "53940",
    "end": "55379"
  },
  {
    "text": "like it's your public\nor it's your private,",
    "start": "55380",
    "end": "57810"
  },
  {
    "text": "or it can even be a\nsource code repository,",
    "start": "57810",
    "end": "59550"
  },
  {
    "text": "something like GitHub or Bitbucket.",
    "start": "59550",
    "end": "61950"
  },
  {
    "text": "Sitting underneath that is App Runner.",
    "start": "61950",
    "end": "63870"
  },
  {
    "text": "With App Runner, you don't\nhave to manage any clusters,",
    "start": "63870",
    "end": "66240"
  },
  {
    "text": "like load balancing, things\nlike autoscaling, observability,",
    "start": "66240",
    "end": "69570"
  },
  {
    "text": "as well as the CI/CD,\namong many other things.",
    "start": "69570",
    "end": "72060"
  },
  {
    "text": "This all handled by App\nRunner under the hood.",
    "start": "72060",
    "end": "74520"
  },
  {
    "text": "Your only job here is to focus\non building your application,",
    "start": "74520",
    "end": "76725"
  },
  {
    "text": "and App Runner takes care of the rest.",
    "start": "76725",
    "end": "79323"
  },
  {
    "text": "So there are a few benefits and use case,",
    "start": "81450",
    "end": "83009"
  },
  {
    "text": "which I'll briefly go through here.",
    "start": "83010",
    "end": "84960"
  },
  {
    "text": "The first benefits, of\ncourse, is ease of use.",
    "start": "84960",
    "end": "87150"
  },
  {
    "text": "With App Runner, you can build",
    "start": "87150",
    "end": "88740"
  },
  {
    "text": "and run web applications at scale",
    "start": "88740",
    "end": "90869"
  },
  {
    "text": "in a way that's not going\nto require you to replatform",
    "start": "90870",
    "end": "93180"
  },
  {
    "text": "and change architecture every\nstep of the progression.",
    "start": "93180",
    "end": "96060"
  },
  {
    "text": "With App Runner, we\nabstract that infrastructure",
    "start": "96060",
    "end": "98159"
  },
  {
    "text": "away from you, so there\nare no VPCs to operate.",
    "start": "98160",
    "end": "100710"
  },
  {
    "text": "The networks are handled\nand abstracted by AWS,",
    "start": "100710",
    "end": "103530"
  },
  {
    "text": "and the same goes with the servers",
    "start": "103530",
    "end": "105360"
  },
  {
    "text": "as well as the CI/CD pipelines.",
    "start": "105360",
    "end": "107010"
  },
  {
    "text": "There are also no orchestrator\ntechnologies to learn,",
    "start": "107010",
    "end": "109890"
  },
  {
    "text": "like ECS or EKS, and this\nleads to adjusted reduction",
    "start": "109890",
    "end": "113477"
  },
  {
    "text": "in your time to market for\nnew applications and features.",
    "start": "113477",
    "end": "117899"
  },
  {
    "text": "Secondly is flexible deployments.",
    "start": "117900",
    "end": "120060"
  },
  {
    "text": "From a deployments perspective,\nwe provide flexibility.",
    "start": "120060",
    "end": "123149"
  },
  {
    "text": "You have the options here\nto either deploy directly",
    "start": "123150",
    "end": "125430"
  },
  {
    "text": "out of Git repository,",
    "start": "125430",
    "end": "127230"
  },
  {
    "text": "or if you have already heavily\ninvested in containers,",
    "start": "127230",
    "end": "129159"
  },
  {
    "text": "you can continue to do so as well.",
    "start": "129159",
    "end": "131790"
  },
  {
    "text": "From this demo, I am\ngoing to deploy directly",
    "start": "131790",
    "end": "134250"
  },
  {
    "text": "from a container registry,\nso while App Runner",
    "start": "134250",
    "end": "137250"
  },
  {
    "text": "is providing the option\nto build applications,",
    "start": "137250",
    "end": "139320"
  },
  {
    "text": "you don't have to do it\nthrough App Runner itself.",
    "start": "139320",
    "end": "141990"
  },
  {
    "text": "You may already be using Jenkins or GitLab",
    "start": "141990",
    "end": "144570"
  },
  {
    "text": "or variety of other CI/CD pipelines.",
    "start": "144570",
    "end": "147030"
  },
  {
    "text": "You can, of course, keep those as it is,",
    "start": "147030",
    "end": "149130"
  },
  {
    "text": "push your images into\nECR as the last step,",
    "start": "149130",
    "end": "152340"
  },
  {
    "text": "and then App Runner can\nwatch the ECR repository,",
    "start": "152340",
    "end": "155099"
  },
  {
    "text": "grab the tagged image, and be\nable to deploy that for you.",
    "start": "155100",
    "end": "158103"
  },
  {
    "text": "In terms of use case,",
    "start": "159000",
    "end": "160410"
  },
  {
    "text": "some of the more common\napplication use case",
    "start": "160410",
    "end": "162300"
  },
  {
    "text": "that are best suited to run in App Runner",
    "start": "162300",
    "end": "164090"
  },
  {
    "text": "include frontend and backend\nweb or mobile applications,",
    "start": "164090",
    "end": "167310"
  },
  {
    "text": "and this allows you to run thousands",
    "start": "167310",
    "end": "168444"
  },
  {
    "text": "of microservices simultaneously,\nincluding API services,",
    "start": "168445",
    "end": "172350"
  },
  {
    "text": "backend web services, websites, and more.",
    "start": "172350",
    "end": "174853"
  },
  {
    "text": "App Runner applications also\nsupport container images",
    "start": "174853",
    "end": "177840"
  },
  {
    "text": "in any languages as well as\nruntimes and web frameworks,",
    "start": "177840",
    "end": "181349"
  },
  {
    "text": "including Node.js and Python.",
    "start": "181350",
    "end": "184350"
  },
  {
    "text": "So for today's demo, we\nwill be using two services,",
    "start": "184350",
    "end": "187089"
  },
  {
    "text": "AWS ECR, which is the container registry,",
    "start": "187089",
    "end": "189510"
  },
  {
    "text": "as well as AWS App Runner to\nactually run the application.",
    "start": "189510",
    "end": "193319"
  },
  {
    "text": "Now, let's move into the demo.",
    "start": "193320",
    "end": "195540"
  },
  {
    "text": "Hi, so welcome back to the demo.",
    "start": "195540",
    "end": "196950"
  },
  {
    "text": "First things first, you're gonna have",
    "start": "196950",
    "end": "197970"
  },
  {
    "text": "to create a repository.",
    "start": "197970",
    "end": "199500"
  },
  {
    "text": "I have already created one.",
    "start": "199500",
    "end": "200700"
  },
  {
    "text": "It's called demo video,",
    "start": "200700",
    "end": "202050"
  },
  {
    "text": "and this is where you're\ngonna be pushing your images",
    "start": "202050",
    "end": "204120"
  },
  {
    "text": "into the repository.",
    "start": "204120",
    "end": "205739"
  },
  {
    "text": "You can also view the push commands here,",
    "start": "205740",
    "end": "207450"
  },
  {
    "text": "where it gives you necessary\nsteps that you can do",
    "start": "207450",
    "end": "210930"
  },
  {
    "text": "to actually authenticate\nto the ECR service",
    "start": "210930",
    "end": "213060"
  },
  {
    "text": "and ultimately be able\nto push your own images",
    "start": "213060",
    "end": "215250"
  },
  {
    "text": "into ECR itself.",
    "start": "215250",
    "end": "216783"
  },
  {
    "text": "So first things first, I'm\ngonna authenticate to ECR.",
    "start": "219180",
    "end": "221670"
  },
  {
    "text": "Basically. what it does\nis that it uses AWS CLI,",
    "start": "221670",
    "end": "223849"
  },
  {
    "text": "and then it performs a Docker login",
    "start": "223850",
    "end": "226050"
  },
  {
    "text": "based on your credentials,",
    "start": "226050",
    "end": "227940"
  },
  {
    "text": "and this allows you to\npush your images into ECR.",
    "start": "227940",
    "end": "231030"
  },
  {
    "text": "So since I've already built my image",
    "start": "231030",
    "end": "233196"
  },
  {
    "text": "and it's already cached locally,",
    "start": "233196",
    "end": "235890"
  },
  {
    "text": "I'm just gonna push the image to the ECR.",
    "start": "235890",
    "end": "237660"
  },
  {
    "text": "It's gonna be a relatively quick process",
    "start": "237660",
    "end": "239105"
  },
  {
    "text": "because it's already\nbuilt and pushed before.",
    "start": "239105",
    "end": "243403"
  },
  {
    "text": "All the layers are already cached.",
    "start": "243403",
    "end": "245730"
  },
  {
    "text": "So once you refresh this, you're\ngonna see the image appear",
    "start": "245730",
    "end": "249629"
  },
  {
    "text": "within the repository itself.",
    "start": "249630",
    "end": "251460"
  },
  {
    "text": "So now, you're gonna use this image",
    "start": "251460",
    "end": "252577"
  },
  {
    "text": "and then deploy it\nwithin App Runner itself.",
    "start": "252577",
    "end": "255959"
  },
  {
    "text": "Let's go over to the App Runner console.",
    "start": "255960",
    "end": "258540"
  },
  {
    "text": "So once you're in the App Runner console,",
    "start": "258540",
    "end": "260100"
  },
  {
    "text": "you can create a service,",
    "start": "260100",
    "end": "261633"
  },
  {
    "text": "and then you're on this landing page,",
    "start": "262590",
    "end": "263850"
  },
  {
    "text": "you basically have two options.",
    "start": "263850",
    "end": "265410"
  },
  {
    "text": "You could either deploy\nit via container registry,",
    "start": "265410",
    "end": "268590"
  },
  {
    "text": "or you could use a source code repository.",
    "start": "268590",
    "end": "271169"
  },
  {
    "text": "So some of the source code\nrepositories or providers",
    "start": "271170",
    "end": "273720"
  },
  {
    "text": "that we have enabled\nwithin App Runner itself",
    "start": "273720",
    "end": "276540"
  },
  {
    "text": "is GitHub and also\nBitbucket, but for today,",
    "start": "276540",
    "end": "279870"
  },
  {
    "text": "I'm gonna show you the\ncontainer registry option.",
    "start": "279870",
    "end": "282960"
  },
  {
    "text": "So you could deploy images\neither from ECR private",
    "start": "282960",
    "end": "287220"
  },
  {
    "text": "or ECR public repositories,",
    "start": "287220",
    "end": "288642"
  },
  {
    "text": "and of course, I just use private,",
    "start": "288642",
    "end": "290520"
  },
  {
    "text": "so I'm gonna use the ECR private ones.",
    "start": "290520",
    "end": "293190"
  },
  {
    "text": "Select your image repository,\nit's the demo video one,",
    "start": "293190",
    "end": "296700"
  },
  {
    "text": "and then the image tag\nwill automatically pop in,",
    "start": "296700",
    "end": "298830"
  },
  {
    "text": "because there's only one image within it.",
    "start": "298830",
    "end": "300879"
  },
  {
    "text": "Next, scroll down to\nthe deployment settings.",
    "start": "302220",
    "end": "304830"
  },
  {
    "text": "You basically have two options,\neither manual or automatic.",
    "start": "304830",
    "end": "307349"
  },
  {
    "text": "I'm gonna select the automatic ones,",
    "start": "307350",
    "end": "309060"
  },
  {
    "text": "and what that means is that\nevery time I push a new image",
    "start": "309060",
    "end": "311580"
  },
  {
    "text": "into the repository, it's gonna look out",
    "start": "311580",
    "end": "313710"
  },
  {
    "text": "for the certain tag, and then\nit's gonna deploy the image",
    "start": "313710",
    "end": "316339"
  },
  {
    "text": "in App Runner or update the\napplication in App Runner",
    "start": "316339",
    "end": "320009"
  },
  {
    "text": "for you automatically.",
    "start": "320010",
    "end": "322200"
  },
  {
    "text": "And for you to do so, you\nwill need to have access",
    "start": "322200",
    "end": "324256"
  },
  {
    "text": "or permissions to ECR itself,",
    "start": "324256",
    "end": "326580"
  },
  {
    "text": "and that's why you need to\ncreate a new service role.",
    "start": "326580",
    "end": "328710"
  },
  {
    "text": "I have already created one,",
    "start": "328710",
    "end": "329910"
  },
  {
    "text": "so I'm just gonna use the existing role.",
    "start": "329910",
    "end": "331910"
  },
  {
    "text": "So go on to the next page.",
    "start": "333030",
    "end": "334773"
  },
  {
    "text": "You're gonna give your\nApp Runner service a name.",
    "start": "336180",
    "end": "339240"
  },
  {
    "text": "Just gonna call it demo video service,",
    "start": "339240",
    "end": "342960"
  },
  {
    "text": "and you have the option\nto choose the capacity,",
    "start": "342960",
    "end": "344707"
  },
  {
    "text": "or the amount of resources you wanna give",
    "start": "344707",
    "end": "346643"
  },
  {
    "text": "to the App Runner application itself.",
    "start": "346643",
    "end": "348690"
  },
  {
    "text": "By default, it's gonna be\none vCPU and two GB mem,",
    "start": "348690",
    "end": "351480"
  },
  {
    "text": "but of course, this is\nsomething that you can configure",
    "start": "351480",
    "end": "353520"
  },
  {
    "text": "based on your own application needs.",
    "start": "353520",
    "end": "355563"
  },
  {
    "text": "So the port I'm gonna use is 8080.",
    "start": "357030",
    "end": "358920"
  },
  {
    "text": "Again, this is something that\nyou can configure on your own,",
    "start": "358920",
    "end": "361823"
  },
  {
    "text": "and you have the option to do things",
    "start": "362730",
    "end": "364293"
  },
  {
    "text": "like autoscaling configurations.",
    "start": "364293",
    "end": "365787"
  },
  {
    "text": "You could determine the\nminimum size that you want,",
    "start": "365787",
    "end": "368310"
  },
  {
    "text": "the maximum size you\nwant the autoscale up to,",
    "start": "368310",
    "end": "370563"
  },
  {
    "text": "also the amount of concurrency requests",
    "start": "370563",
    "end": "372270"
  },
  {
    "text": "that the App Runner application\ncan take at any one time.",
    "start": "372270",
    "end": "375543"
  },
  {
    "text": "You can also configure a health check",
    "start": "376680",
    "end": "379110"
  },
  {
    "text": "where you have two protocols to choose.",
    "start": "379110",
    "end": "381000"
  },
  {
    "text": "You could either choose a TCP protocol,",
    "start": "381000",
    "end": "382305"
  },
  {
    "text": "or if you have a certain\npathway in application,",
    "start": "382305",
    "end": "384731"
  },
  {
    "text": "you could choose the HTTP health check.",
    "start": "384731",
    "end": "387723"
  },
  {
    "text": "So in terms of security,\nif your application needs",
    "start": "390960",
    "end": "393237"
  },
  {
    "text": "to have access to other AWS services,",
    "start": "393237",
    "end": "395229"
  },
  {
    "text": "like S3 or DynamoDB or RDS,",
    "start": "395229",
    "end": "398640"
  },
  {
    "text": "you will need to grant\nyour application a role",
    "start": "398640",
    "end": "400590"
  },
  {
    "text": "with the necessary IAM policies",
    "start": "400590",
    "end": "403020"
  },
  {
    "text": "and permissions attached to that role,",
    "start": "403020",
    "end": "404669"
  },
  {
    "text": "but since I do not have\nthat within my application,",
    "start": "404670",
    "end": "406206"
  },
  {
    "text": "I'm just gonna leave it as blank.",
    "start": "406206",
    "end": "408479"
  },
  {
    "text": "You could also configure\nencryption using AWS own keys,",
    "start": "408480",
    "end": "413130"
  },
  {
    "text": "or you can upload your own keys into KMS",
    "start": "413130",
    "end": "415470"
  },
  {
    "text": "and use those keys as encryption keys",
    "start": "415470",
    "end": "417290"
  },
  {
    "text": "within your application.",
    "start": "417290",
    "end": "419640"
  },
  {
    "text": "So I'm just gonna leave\nthe rest as default,",
    "start": "419640",
    "end": "421620"
  },
  {
    "text": "and then I'm gonna click on next,",
    "start": "421620",
    "end": "423270"
  },
  {
    "text": "review, and review your configurations,",
    "start": "425730",
    "end": "428400"
  },
  {
    "text": "and then if everything's okay,",
    "start": "428400",
    "end": "430350"
  },
  {
    "text": "can just scroll down to create and deploy.",
    "start": "430350",
    "end": "433533"
  },
  {
    "text": "So now, this is gonna take several minutes",
    "start": "435930",
    "end": "437651"
  },
  {
    "text": "to actually come up, and you can see here,",
    "start": "437651",
    "end": "440130"
  },
  {
    "text": "it returns to your default domain.",
    "start": "440130",
    "end": "441570"
  },
  {
    "text": "This is where you're gonna\naccess your application on from.",
    "start": "441570",
    "end": "444150"
  },
  {
    "text": "You can also look at the\nsource, where you can see",
    "start": "444150",
    "end": "447270"
  },
  {
    "text": "that it's actually referencing\nECR private repository,",
    "start": "447270",
    "end": "450873"
  },
  {
    "text": "and you can also look at the\nApp Runner event logs themself.",
    "start": "451953",
    "end": "454953"
  },
  {
    "text": "So you can look at the deployment logs",
    "start": "456090",
    "end": "457743"
  },
  {
    "text": "to see if everything's created properly,",
    "start": "457743",
    "end": "460470"
  },
  {
    "text": "and once the application's up,",
    "start": "460470",
    "end": "461790"
  },
  {
    "text": "you can also look at the application logs",
    "start": "461790",
    "end": "463430"
  },
  {
    "text": "in this interface as well.",
    "start": "463430",
    "end": "464789"
  },
  {
    "text": "Of course, you can view\nall of this on CloudWatch",
    "start": "464790",
    "end": "467460"
  },
  {
    "text": "if you want to as well.",
    "start": "467460",
    "end": "468610"
  },
  {
    "text": "So now we're gonna give this a while.",
    "start": "470610",
    "end": "471960"
  },
  {
    "text": "If this is currently\noperation in progress,",
    "start": "471960",
    "end": "475080"
  },
  {
    "text": "it's gonna turn to a running state.",
    "start": "475080",
    "end": "476831"
  },
  {
    "text": "If it does not turn green,",
    "start": "476831",
    "end": "479100"
  },
  {
    "text": "it means that something\nwrong has happened,",
    "start": "479100",
    "end": "480870"
  },
  {
    "text": "either on application level,",
    "start": "480870",
    "end": "482729"
  },
  {
    "text": "and you will have to go through\nthe logs and troubleshoot",
    "start": "482730",
    "end": "485040"
  },
  {
    "text": "to see what is wrong with it.",
    "start": "485040",
    "end": "486490"
  },
  {
    "text": "So now let's give it a while,",
    "start": "487410",
    "end": "488640"
  },
  {
    "text": "and we'll come back when this turns green.",
    "start": "488640",
    "end": "490740"
  },
  {
    "text": "That's here.",
    "start": "492330",
    "end": "493163"
  },
  {
    "text": "Now you successfully deployed",
    "start": "493163",
    "end": "494310"
  },
  {
    "text": "your App Runner service itself.",
    "start": "494310",
    "end": "495672"
  },
  {
    "text": "You can see there's up and running,",
    "start": "495672",
    "end": "497297"
  },
  {
    "text": "there are no errors here,",
    "start": "497297",
    "end": "499669"
  },
  {
    "text": "and now that you can click\non this default domain,",
    "start": "499669",
    "end": "502471"
  },
  {
    "text": "you actually route to\nyour application itself.",
    "start": "502471",
    "end": "503357"
  },
  {
    "text": "So here we go, you have\nsuccessfully pushed the image",
    "start": "505350",
    "end": "508770"
  },
  {
    "text": "into ECR and deploy that\nimage into App Runner itself.",
    "start": "508770",
    "end": "513149"
  },
  {
    "text": "So with this deployment, you\nrealize that you do not have",
    "start": "513150",
    "end": "516193"
  },
  {
    "text": "to handle any of the underlying\nnetworking things, like VPC.",
    "start": "516193",
    "end": "519719"
  },
  {
    "text": "There's no CI/CD process",
    "start": "519720",
    "end": "521159"
  },
  {
    "text": "which you have done within AWS itself,",
    "start": "521160",
    "end": "523889"
  },
  {
    "text": "and there's no autoscaling\nwhich you need to configure.",
    "start": "523890",
    "end": "527010"
  },
  {
    "text": "All of this is done\nunder the hood for you,",
    "start": "527010",
    "end": "529167"
  },
  {
    "text": "and the only thing you need\nto do is to specify the image,",
    "start": "529167",
    "end": "532080"
  },
  {
    "text": "push it in ECR, and then\ncreate the App Runner service,",
    "start": "532080",
    "end": "535020"
  },
  {
    "text": "and there we go, we\nhave a live application.",
    "start": "535020",
    "end": "537270"
  },
  {
    "text": "Thanks for watching.",
    "start": "537270",
    "end": "538103"
  },
  {
    "text": "This is a long video",
    "start": "538103",
    "end": "538936"
  },
  {
    "text": "on how to easily deploy\nyour containers on database.",
    "start": "538936",
    "end": "541560"
  },
  {
    "text": "Till next time.",
    "start": "541560",
    "end": "542393"
  }
]