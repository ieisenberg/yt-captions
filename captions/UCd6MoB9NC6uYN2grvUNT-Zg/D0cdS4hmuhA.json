[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "In this video, you’ll see how to leverage Service \nLevel Objectives (SLOs) with Prometheus metrics.",
    "start": "60",
    "end": "5133"
  },
  {
    "text": "With this feature, you can set \nmeasurable targets for performance",
    "start": "5901",
    "end": "9266"
  },
  {
    "text": "metrics on your applications to \nmeasure business objectives and identify",
    "start": "9266",
    "end": "13584"
  },
  {
    "text": "and triage issues before \nthey impact your users.",
    "start": "13584",
    "end": "16574"
  },
  {
    "start": "18000",
    "end": "35000"
  },
  {
    "text": "Before we begin, let’s review some \nprerequisite setup that we’ve already completed.",
    "start": "18901",
    "end": "23516"
  },
  {
    "text": "First, we deployed a sample web application \nfrom the One Observability Workshop.",
    "start": "24437",
    "end": "28986"
  },
  {
    "text": "The web app is for pet adoption, \nand we have it running in our account.",
    "start": "29400",
    "end": "33166"
  },
  {
    "start": "35000",
    "end": "53000"
  },
  {
    "text": "To track Prometheus metrics for our web app,  ",
    "start": "35551",
    "end": "38000"
  },
  {
    "text": "we deployed the AWS Distro for OpenTelemetry \nCollector in our application’s ECS cluster.",
    "start": "38000",
    "end": "44064"
  },
  {
    "text": "We can view the Prometheus \nmetrics in Amazon CloudWatch.",
    "start": "45280",
    "end": "48424"
  },
  {
    "start": "53000",
    "end": "66000"
  },
  {
    "text": "We also configured a \ndashboard in Amazon Managed",
    "start": "53560",
    "end": "56080"
  },
  {
    "text": "Grafana to visualize some of \nthe metrics we’re collecting.",
    "start": "56080",
    "end": "59259"
  },
  {
    "text": "Now, return to the CloudWatch console \nand create an SLO for our web application.",
    "start": "60680",
    "end": "65207"
  },
  {
    "start": "66000",
    "end": "92000"
  },
  {
    "text": "We’ll provide a name for our SLO.",
    "start": "67120",
    "end": "69273"
  },
  {
    "text": "Next, we’ll select a service level indicator \n(SLI), which is the metric we want to monitor.",
    "start": "71670",
    "end": "76159"
  },
  {
    "text": "Since we’re monitoring a Prometheus \nmetric, we’ll choose CloudWatch Metric.",
    "start": "77033",
    "end": "81398"
  },
  {
    "text": "Next, we’ll select the specific \nCloudWatch metric we want to monitor.",
    "start": "82875",
    "end": "86776"
  },
  {
    "text": "For this example, we’ll monitor the \nnumber of pets waiting for adoption.",
    "start": "87000",
    "end": "90890"
  },
  {
    "start": "92000",
    "end": "125000"
  },
  {
    "text": "When we select the metric, the \ngraph updates with its data.",
    "start": "92200",
    "end": "95577"
  },
  {
    "text": "In this case, the metric \nfluctuates between 26 and",
    "start": "95920",
    "end": "99040"
  },
  {
    "text": "16 units, meaning pets available for \nadoption, at each 15-minute interval.",
    "start": "99040",
    "end": "104101"
  },
  {
    "text": "Next, we’ll set a threshold that we’ll \nuse to determine if the metric is healthy.",
    "start": "105458",
    "end": "109919"
  },
  {
    "text": "We’ll specify a minimum of 20 pets to be \navailable for search in a five-minute period.",
    "start": "110640",
    "end": "115281"
  },
  {
    "text": "We can set the interval we \nwant to measure our SLO for.",
    "start": "117040",
    "end": "120076"
  },
  {
    "text": "We can either choose a rolling \nday or a fixed calendar day.",
    "start": "120400",
    "end": "123454"
  },
  {
    "start": "125000",
    "end": "173000"
  },
  {
    "text": "Next, we’ll set an attainment \ngoal for the time interval.",
    "start": "125626",
    "end": "128310"
  },
  {
    "text": "When we adjust the attainment goal,  ",
    "start": "129360",
    "end": "131226"
  },
  {
    "text": "the description below updates to \nexplain the meaning of the change.",
    "start": "131226",
    "end": "134946"
  },
  {
    "text": "For example, if we choose \n50%, then our goal is to",
    "start": "135809",
    "end": "139640"
  },
  {
    "text": "attain 20 or more results for more \nthan 12 hours in a 1 rolling day interval.",
    "start": "139640",
    "end": "144228"
  },
  {
    "text": "Next, we'll set a warning threshold \nfor the total amount of time that a  ",
    "start": "145538",
    "end": "149040"
  },
  {
    "text": "service can be non-compliant \nbefore it is in violation of its SLO.",
    "start": "149040",
    "end": "153674"
  },
  {
    "text": "Let's choose 60%.",
    "start": "154040",
    "end": "155678"
  },
  {
    "text": "The Error budget data \ngraph updated accordingly.",
    "start": "156929",
    "end": "159698"
  },
  {
    "text": "We can optionally configure CloudWatch  ",
    "start": "162000",
    "end": "163800"
  },
  {
    "text": "alarms to be notified of important \nevents related to this SLO goal.",
    "start": "163800",
    "end": "167792"
  },
  {
    "text": "We’ll set an SLO attainment goal alarm.",
    "start": "168087",
    "end": "170653"
  },
  {
    "start": "173000",
    "end": "219000"
  },
  {
    "text": "We’ll create a new topic and \nprovide our email address.",
    "start": "173711",
    "end": "176440"
  },
  {
    "text": "Finally, we’ll create the \nSLO and CloudWatch alarm.",
    "start": "188000",
    "end": "190828"
  },
  {
    "text": "It can take some time for CloudWatch \nto update with the latest information.",
    "start": "191600",
    "end": "195143"
  },
  {
    "text": "For demonstration purposes, let’s \nreview some previously created SLOs.",
    "start": "195840",
    "end": "200177"
  },
  {
    "text": "The first SLO has a high \navailability threshold of",
    "start": "201381",
    "end": "204440"
  },
  {
    "text": "20 units, and its Service Level \nIndicator status is “Unhealthy.”",
    "start": "204440",
    "end": "208741"
  },
  {
    "text": "The next SLO has a lower availability \nthreshold of 10, and its SLI status is “Healthy.”",
    "start": "210040",
    "end": "215715"
  },
  {
    "start": "219000",
    "end": "233000"
  },
  {
    "text": "You’ve just seen how to leverage Service \nLevel Objectives with Prometheus metrics.",
    "start": "219600",
    "end": "223787"
  },
  {
    "text": "You can learn more about this topic in\nthe description and links for this video.",
    "start": "224741",
    "end": "228543"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "229160",
    "end": "232000"
  }
]