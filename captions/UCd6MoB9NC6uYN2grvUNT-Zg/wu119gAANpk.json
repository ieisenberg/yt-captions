[
  {
    "text": "hi everyone did you hear me yeah do you",
    "start": "709",
    "end": "6000"
  },
  {
    "text": "hear me it's kiss awesome it's gonna be very interesting session because you're very",
    "start": "6000",
    "end": "11969"
  },
  {
    "text": "intimate with me you might probably hear me breathe but I have almost no feedback with you it's the second time I do it I",
    "start": "11969",
    "end": "19170"
  },
  {
    "text": "did one yesterday so hopefully today gets a little bit better today we're",
    "start": "19170",
    "end": "24510"
  },
  {
    "text": "going to talk a little bit about resiliency and especially chaos engineering and how we apply that to",
    "start": "24510",
    "end": "31529"
  },
  {
    "text": "build resilient systems my kind of work with AWS is about resiliency right I've",
    "start": "31529",
    "end": "38910"
  },
  {
    "text": "been working now with videos for about three and a half years and I've been working on large scale systems for",
    "start": "38910",
    "end": "44100"
  },
  {
    "text": "almost 18 years right so some of these things that I'm talking about is most of",
    "start": "44100",
    "end": "51300"
  },
  {
    "text": "it lived through experiences and failures and I'm going to try to give you some of these experience and then",
    "start": "51300",
    "end": "58170"
  },
  {
    "text": "kind of ideas so that you don't have to fail like I've done before before okay",
    "start": "58170",
    "end": "66600"
  },
  {
    "text": "first failure right my clicker of course does it work so let me check that all",
    "start": "66600",
    "end": "73200"
  },
  {
    "text": "right so I need to tell you are you able to",
    "start": "73200",
    "end": "79110"
  },
  {
    "text": "predict a little bit what is gonna happen in this video do you know how many of you have seen that yeah so if",
    "start": "79110",
    "end": "86040"
  },
  {
    "text": "you haven't seen that video try to try to guess what is happening it's very",
    "start": "86040",
    "end": "93630"
  },
  {
    "text": "interesting like so you can think about this guy like being the rampant query in",
    "start": "93630",
    "end": "100530"
  },
  {
    "text": "the system right it goes slowly from the client to the backend looks very gentle",
    "start": "100530",
    "end": "106320"
  },
  {
    "text": "and nice and friendly and all of a sudden takes everything down not and actually the most interesting part is",
    "start": "106320",
    "end": "112890"
  },
  {
    "text": "not necessarily the thing going down is how hard it is to bring it back up very",
    "start": "112890",
    "end": "118619"
  },
  {
    "text": "often people talk about things that break down but actually my opinion it's",
    "start": "118619",
    "end": "123930"
  },
  {
    "text": "a way more complicated and dangerous to bring things back up right so why am i",
    "start": "123930",
    "end": "129750"
  },
  {
    "text": "showing you this and before I'm going to turn my Bluetooth on that will help with",
    "start": "129750",
    "end": "135290"
  },
  {
    "text": "that all right so you see that what happened so why are we talking about",
    "start": "135290",
    "end": "141020"
  },
  {
    "text": "that really well it turns out these kind of distributed systems are really really",
    "start": "141020",
    "end": "147350"
  },
  {
    "text": "hard to predict and this video in my opinion reprints very well what a complex system is this tons of elements",
    "start": "147350",
    "end": "154300"
  },
  {
    "text": "we can imagine a lot of scenarios but it's very very hard to predict what will",
    "start": "154300",
    "end": "159950"
  },
  {
    "text": "happen in fact we usually say that if you have a system comprised more of ten six ten parts it's kind of complex",
    "start": "159950",
    "end": "168380"
  },
  {
    "text": "because you have so many combinations of possibilities of things interacting with",
    "start": "168380",
    "end": "174050"
  },
  {
    "text": "one another and asking an architect to be able to predict what's gonna happen is pretty much impossible back in the",
    "start": "174050",
    "end": "181220"
  },
  {
    "text": "days you know you had your mono lis maybe a CDN a database at least that's",
    "start": "181220",
    "end": "186620"
  },
  {
    "text": "how amazon.com was built in the early days it was quite straightforward to",
    "start": "186620",
    "end": "191770"
  },
  {
    "text": "understand to some extent the problem was with scheduling right so when we",
    "start": "191770",
    "end": "198500"
  },
  {
    "text": "scale them we have to break this into micro-services now we have over a thousand eight hundred micro services",
    "start": "198500",
    "end": "203930"
  },
  {
    "text": "running on amazon.com right so it's a lot of services interacting with one another so we need to figure out how we",
    "start": "203930",
    "end": "210920"
  },
  {
    "text": "run with that and you also have to remember that failures happen all the",
    "start": "210920",
    "end": "218210"
  },
  {
    "text": "time and especially in complex systems right again back in the days when you had three or four component it was",
    "start": "218210",
    "end": "224330"
  },
  {
    "text": "totally normal to have all the system to be running 100% all the time but that",
    "start": "224330",
    "end": "230330"
  },
  {
    "text": "was kind of the expected level of resiliency 100% nowadays when you have",
    "start": "230330",
    "end": "237680"
  },
  {
    "text": "thousands or let's say Android even of services it's impossible that at any",
    "start": "237680",
    "end": "242960"
  },
  {
    "text": "point of time everything works right it's just statistically impossible you",
    "start": "242960",
    "end": "248480"
  },
  {
    "text": "always some have something that will fail somewhere in your system and we call that kind of the idea of being able",
    "start": "248480",
    "end": "254960"
  },
  {
    "text": "to run a complex system with failure in mind we call that kind of resiliency it's the capability to run waste",
    "start": "254960",
    "end": "263000"
  },
  {
    "text": "failures and there's a particular term for that call partial failure mode right and this is",
    "start": "263000",
    "end": "269120"
  },
  {
    "text": "how it looks like because I could explain it to you but I think this video is much better at explaining this is a taxi driver in India and he just got a",
    "start": "269120",
    "end": "278060"
  },
  {
    "text": "flat tire well you know he has to to go there is time the customer wants to go",
    "start": "278060",
    "end": "283910"
  },
  {
    "text": "at the destination and he calls is made to bring him a new tire so that he can",
    "start": "283910",
    "end": "289370"
  },
  {
    "text": "actually complete this mission and that's exactly what the idea of resiliency and partial failure mode is",
    "start": "289370",
    "end": "295580"
  },
  {
    "text": "and this is what we want our system to be able to do at large scale is how do you run the system so that if there are",
    "start": "295580",
    "end": "302540"
  },
  {
    "text": "failures around we can still do what we want to do and sometimes we have to",
    "start": "302540",
    "end": "308660"
  },
  {
    "text": "degrade right but at least we can continue doing what we want to do so this is exactly what resiliency is so",
    "start": "308660",
    "end": "316730"
  },
  {
    "text": "now the question is how do we build the systems well there's tons of other things and when you ask you to be people",
    "start": "316730",
    "end": "323200"
  },
  {
    "text": "how do we be resilient system they'll first say you know infrastructure and application and indeed actually the",
    "start": "323200",
    "end": "330110"
  },
  {
    "text": "first work has to happen on the infrastructure level you go up the stack network and data to the application but",
    "start": "330110",
    "end": "336680"
  },
  {
    "text": "what is up there the most important thing is people right because you can",
    "start": "336680",
    "end": "342950"
  },
  {
    "text": "have all the best technology in the world at the end of the day is people that will implement and run the system so it's very very important when you",
    "start": "342950",
    "end": "350210"
  },
  {
    "text": "implement or think about resiliency that actually you put people on top of the pyramid and even at the center of any",
    "start": "350210",
    "end": "355910"
  },
  {
    "text": "decision that you're gonna do so all that needs to be designed with resiliency I'm not going to do a deep",
    "start": "355910",
    "end": "362240"
  },
  {
    "text": "dive on resiliency in these sessions I have several others but this one I want to focus more on how do we test for",
    "start": "362240",
    "end": "369740"
  },
  {
    "text": "resiliency and how do we improve through metallosis methodologies like chaos engineering so we have those systems and",
    "start": "369740",
    "end": "378169"
  },
  {
    "text": "you know back in the days we would test those systems you need with unit testing and functional testing but you can",
    "start": "378169",
    "end": "384560"
  },
  {
    "text": "easily imagine that those ways of testing are actually not at all fit for",
    "start": "384560",
    "end": "391390"
  },
  {
    "text": "what we want to do now in large scale system there are millions of people it's impossible pretty much to simulate tens",
    "start": "391390",
    "end": "398810"
  },
  {
    "text": "of millions of people using a system at once right so we have to come up with new ideas",
    "start": "398810",
    "end": "403910"
  },
  {
    "text": "right so this is absolutely not enough and in 2000 in the mid 2000 when",
    "start": "403910",
    "end": "410860"
  },
  {
    "text": "amazon.com started to experience this exponential growth we hired a guy called",
    "start": "410860",
    "end": "416300"
  },
  {
    "text": "Jesse Robbins and Jesse Robbins first at the best title ever in any company master disaster but Jesse Robbins was a",
    "start": "416300",
    "end": "424880"
  },
  {
    "text": "firefighter and firefighter do something very interesting when it comes to",
    "start": "424880",
    "end": "430520"
  },
  {
    "text": "training they training roughly 80% of the time and you know why they try anyone wants to get a guess I",
    "start": "430520",
    "end": "438470"
  },
  {
    "text": "know it's silent but you can yell I can hear it's simply to build an intuition",
    "start": "438470",
    "end": "445419"
  },
  {
    "text": "so that when they go and fight a real fire they don't have to think they don't have to follow a book they don't have to",
    "start": "445419",
    "end": "452539"
  },
  {
    "text": "follow a set of rules but they can just react with intuition so that they first",
    "start": "452539",
    "end": "460280"
  },
  {
    "text": "fight the fire but actually also don't get killed if they think too much too long they are pretty much dead so he",
    "start": "460280",
    "end": "468020"
  },
  {
    "text": "came with this idea of building this resiliency mindset and learn how and",
    "start": "468020",
    "end": "474710"
  },
  {
    "text": "teach the team how to have this kind of intuition to fight outages and he did",
    "start": "474710",
    "end": "480470"
  },
  {
    "text": "something quite interesting he launched what we call game day still today and what he did was what interesting it was",
    "start": "480470",
    "end": "487910"
  },
  {
    "text": "running in data centers and then suddenly would start unplugging servers",
    "start": "487910",
    "end": "493449"
  },
  {
    "text": "there's quite a much noise there but I hope you you can hear me still right it",
    "start": "493449",
    "end": "499760"
  },
  {
    "text": "would just go around unplug servers and even at some point it would shut down whole data centers we didn't repeat that",
    "start": "499760",
    "end": "507949"
  },
  {
    "text": "experiment too often because taking down the data centers was quite damaging it",
    "start": "507949",
    "end": "513080"
  },
  {
    "text": "took down some customers so we thought okay maybe we shouldn't be that brutal but it was nonetheless very very",
    "start": "513080",
    "end": "519320"
  },
  {
    "text": "interesting lessons on how our system were starting to behave but the gamedays was kind of an old ID",
    "start": "519320",
    "end": "527550"
  },
  {
    "text": "and not very interesting marketing wise I think Netflix in the end of 2014",
    "start": "527550",
    "end": "533819"
  },
  {
    "text": "started to expand their architecture into multi regions they started to grow in the number of service and they came",
    "start": "533819",
    "end": "539550"
  },
  {
    "text": "up with a much better title for doing this kind of introduction test which is called chaos engineering and chaos",
    "start": "539550",
    "end": "546179"
  },
  {
    "text": "engineering the idea is very simple it's you inject failures in an environment",
    "start": "546179",
    "end": "551519"
  },
  {
    "text": "Netflix does it in production but it doesn't mean necessarily that you have to do it in production in fact I always",
    "start": "551519",
    "end": "557730"
  },
  {
    "text": "say never start in production because it will ever it will always stay up so you have to start very early on in your dev",
    "start": "557730",
    "end": "565740"
  },
  {
    "text": "environment and I'll do some demos with you a bit later and then you progress towards your different environment test",
    "start": "565740",
    "end": "571980"
  },
  {
    "text": "staging and maybe eventually when your Netflix you can do stuff in production",
    "start": "571980",
    "end": "578220"
  },
  {
    "text": "and this kind of injections can go from you know application level host failure",
    "start": "578220",
    "end": "585240"
  },
  {
    "text": "attacks stack attacks Network attacks region attack but also people attack",
    "start": "585240",
    "end": "590490"
  },
  {
    "text": "I'll give you an idea and I'm not saying that you should break the necks of people a people attack I've done it one",
    "start": "590490",
    "end": "598199"
  },
  {
    "text": "recently with the customer is that customer as at the curve at the person called Paul in the company and Paul was",
    "start": "598199",
    "end": "605670"
  },
  {
    "text": "the master hacker you gave him any task it would be able to do it fixes everything understand everything better",
    "start": "605670",
    "end": "612870"
  },
  {
    "text": "than anyone in the company it's very Paul bus factor was very very",
    "start": "612870",
    "end": "618749"
  },
  {
    "text": "high and when I'm saying Paul bus factor it means if Paul gets hit by a bus the company could have big problems so what",
    "start": "618749",
    "end": "627059"
  },
  {
    "text": "we did was very simple I arrived in the morning I say Paul give me your laptop and you go home and then let's see how",
    "start": "627059",
    "end": "633120"
  },
  {
    "text": "the system is gonna operate six hours it took for the whole experiment to stop",
    "start": "633120",
    "end": "638639"
  },
  {
    "text": "because it was already all panic there's tons of issues people didn't",
    "start": "638639",
    "end": "643980"
  },
  {
    "text": "know how to add to recover some databases they didn't know if there were some backups how they were activated so",
    "start": "643980",
    "end": "650519"
  },
  {
    "text": "there was tons of issues like this that you could simply do it with human attack right so that's kind of",
    "start": "650519",
    "end": "659810"
  },
  {
    "text": "what we're doing with cows engineering and we do it really to build first an",
    "start": "659810",
    "end": "666589"
  },
  {
    "text": "intuition towards how do we behave in an app outage but also to find new problems",
    "start": "666589",
    "end": "672910"
  },
  {
    "text": "the testing is very very good at fixing the knowns right or testing the knowns",
    "start": "672910",
    "end": "680890"
  },
  {
    "text": "but it doesn't uncover the unknown right it doesn't tell you how system might",
    "start": "680890",
    "end": "686870"
  },
  {
    "text": "interact or give you some let's say idea of what happened if you add latency in",
    "start": "686870",
    "end": "693589"
  },
  {
    "text": "the system you know chaos engine earing does that basically right so it means",
    "start": "693589",
    "end": "698810"
  },
  {
    "text": "that we can uncover problems in an environment when all the engineers are",
    "start": "698810",
    "end": "705320"
  },
  {
    "text": "at work right and usually we run chaos experiment you know at 10:00 in the morning when engineer has had their",
    "start": "705320",
    "end": "712040"
  },
  {
    "text": "coffees they are ready they are not hungry they don't need to go to lunch they'll prefer to do some work right if",
    "start": "712040",
    "end": "719180"
  },
  {
    "text": "you do it too late in the evening usually it doesn't work too early there's no coffee so chaos engineering experiments usually",
    "start": "719180",
    "end": "724940"
  },
  {
    "text": "start at 10:00 a.m. and then we break things when everyone is in the room the",
    "start": "724940",
    "end": "730970"
  },
  {
    "text": "problem is if you don't do that outages is always happen on Friday nights",
    "start": "730970",
    "end": "736690"
  },
  {
    "text": "weekends during Christmas on birthdays on weddings and that's not what you want",
    "start": "736690",
    "end": "744130"
  },
  {
    "text": "so we uncover weaknesses at the right time to avoid being awakened at 1:00",
    "start": "744130",
    "end": "750680"
  },
  {
    "text": "a.m. and the whole idea of case engineering is really not to break things without the purpose I always say",
    "start": "750680",
    "end": "757550"
  },
  {
    "text": "calcium generate is a scientific experiment to demonstrate an IPO thesis and we'll talk about this later",
    "start": "757550",
    "end": "765180"
  },
  {
    "text": "so what are the faces of caves engineering well there's quite a few",
    "start": "765180",
    "end": "770250"
  },
  {
    "text": "phases the first one is you don't start caves engineering if you don't have resilient system if you just have a",
    "start": "770250",
    "end": "777630"
  },
  {
    "text": "system that you know can break easily caves engineering is great as a look",
    "start": "777630",
    "end": "782850"
  },
  {
    "text": "forward or kind of give you some ideas of what might happen in the futures but it's not for the present if you want to",
    "start": "782850",
    "end": "789750"
  },
  {
    "text": "go into chaos engineering you have to have resilient systems so you have to go through the exercise of reviewing your",
    "start": "789750",
    "end": "796140"
  },
  {
    "text": "architecture figuring out if there are single point of failures if you are sensitive to cascading failures or",
    "start": "796140",
    "end": "802500"
  },
  {
    "text": "things like this and then you go all the way to fix and sometimes after fixing well you go back into the experiment and",
    "start": "802500",
    "end": "810120"
  },
  {
    "text": "then you think try again right or you go back into the very beginning fixing rate",
    "start": "810120",
    "end": "817280"
  },
  {
    "text": "starting to rebuild the resiliency because you have uncovered something which you didn't expect so let's take a",
    "start": "817280",
    "end": "823800"
  },
  {
    "text": "look quickly about how about some of the ideas to build resilience system I think",
    "start": "823800",
    "end": "829650"
  },
  {
    "text": "one of the most important thing about resiliency is the idea of bulk head you know isolating a part of the system so",
    "start": "829650",
    "end": "837060"
  },
  {
    "text": "that if there's a failure happening on one part of the system it doesn't propagate to the rest of the",
    "start": "837060",
    "end": "842670"
  },
  {
    "text": "environment and this is not a new idea if accessing I did I've been used for",
    "start": "842670",
    "end": "847980"
  },
  {
    "text": "building ships and trying to avoid having the water being propagated across",
    "start": "847980",
    "end": "854040"
  },
  {
    "text": "the entire boat sometimes it doesn't work but most of the time it does right so these kind of ideas you have to keep",
    "start": "854040",
    "end": "860460"
  },
  {
    "text": "in mind and we use that system or that idea a lot in AWS to do what we call sail based architectures where we take",
    "start": "860460",
    "end": "868590"
  },
  {
    "text": "an environment a full environment in in in the region and then we create a sail out of it and then we replicate that",
    "start": "868590",
    "end": "874620"
  },
  {
    "text": "self many many times within the region and then we do dns dns routing inside",
    "start": "874620",
    "end": "880380"
  },
  {
    "text": "the region across money many main cells and some of our services like dynamodb or s3 have tens of thousands of cells",
    "start": "880380",
    "end": "886740"
  },
  {
    "text": "within the region right so very big and we do that simply to limit the blast",
    "start": "886740",
    "end": "892860"
  },
  {
    "text": "radius right so if there is a cell having an issue we can isolate we can test with an",
    "start": "892860",
    "end": "898710"
  },
  {
    "text": "dive into that cell without affecting the rest of the environment and I think that's an idea that is very very",
    "start": "898710",
    "end": "904740"
  },
  {
    "text": "powerful to be resilient system another important thing is to think about cascading failure and especially",
    "start": "904740",
    "end": "910550"
  },
  {
    "text": "overload now because very often in an environment we build redundant applications you know you duplicate for",
    "start": "910550",
    "end": "918750"
  },
  {
    "text": "example all your application but then you really have to think what happened if one part of the application fails and",
    "start": "918750",
    "end": "925740"
  },
  {
    "text": "then the entire traffic it goes to the other a Z or region right and this is I",
    "start": "925740",
    "end": "932130"
  },
  {
    "text": "think a very good idea of the of how overload works right the mom is the load",
    "start": "932130",
    "end": "937770"
  },
  {
    "text": "balancer she's giving care to two kids one of the kid experienced an issue",
    "start": "937770",
    "end": "942840"
  },
  {
    "text": "Falls and then she gives the entire attention back to the only left kid and",
    "start": "942840",
    "end": "950100"
  },
  {
    "text": "then overloads the kid and then that fails and that's actually roughly",
    "start": "950100",
    "end": "956300"
  },
  {
    "text": "exactly how system fails and most of the time that's due to overloading and there's many reasons why you might have",
    "start": "956300",
    "end": "962370"
  },
  {
    "text": "overload run so in terms of resiliency this is just a summary is really not a",
    "start": "962370",
    "end": "970470"
  },
  {
    "text": "thorough understanding of everything but resiliency but these are some of the failures I've seen and lived myself",
    "start": "970470",
    "end": "978500"
  },
  {
    "text": "certificates how many of you have had outages because of certificates that",
    "start": "978500",
    "end": "983790"
  },
  {
    "text": "yeah yeah exactly and it's weird we don't build alerts from certificates",
    "start": "983790",
    "end": "988920"
  },
  {
    "text": "right because it's very simple it's checking date of the certificate if that date is coming to expiration sends an",
    "start": "988920",
    "end": "995580"
  },
  {
    "text": "email and then verify that someone reads that email that's actually the most problematic thing because the email",
    "start": "995580",
    "end": "1001580"
  },
  {
    "text": "always been sent it's just no one reads it another one is memory leaks how many",
    "start": "1001580",
    "end": "1006770"
  },
  {
    "text": "of you have had a Friday Saturday restart because your Java JVM instance",
    "start": "1006770",
    "end": "1014150"
  },
  {
    "text": "just as leaks and you don't really know why you say let's restart it every Saturday and hopefully it covers the",
    "start": "1014150",
    "end": "1021170"
  },
  {
    "text": "problem licenses as well right in versioning I still meet a lot of customers that don't do versioning so",
    "start": "1021170",
    "end": "1028699"
  },
  {
    "text": "that means they just deploy code and then you ask them which version of the code is being",
    "start": "1028699",
    "end": "1033749"
  },
  {
    "text": "deployed and they have no idea and that's a problem as you can imagine because then it's very hard to figure",
    "start": "1033749",
    "end": "1039659"
  },
  {
    "text": "out where the bugs might be on the application level killers or timeouts",
    "start": "1039659",
    "end": "1046019"
  },
  {
    "text": "and retries I think that's 90% of the out juices that have lived in the last ten years our entirely related to",
    "start": "1046019",
    "end": "1053220"
  },
  {
    "text": "timeouts how many of you are Python developers here just a yeah cool can you tell me the default timeout of",
    "start": "1053220",
    "end": "1061799"
  },
  {
    "text": "the request library in Python anyone",
    "start": "1061799",
    "end": "1067758"
  },
  {
    "text": "yeah exactly one person said no timeout in fact it's exactly what it is and it's",
    "start": "1068119",
    "end": "1075899"
  },
  {
    "text": "not only Python it's the same for the gdb C drivers which are 30 minute",
    "start": "1075899",
    "end": "1080970"
  },
  {
    "text": "timeout it's the same with many of the tomcat sequel drivers which have also 30 minute",
    "start": "1080970",
    "end": "1087299"
  },
  {
    "text": "or infinite timeouts and that's a problem because we use libraries we",
    "start": "1087299",
    "end": "1092759"
  },
  {
    "text": "import libraries through NPM through peope and we assume things that be a",
    "start": "1092759",
    "end": "1098129"
  },
  {
    "text": "right way and often the timeouts are not set and when you don't have time out set",
    "start": "1098129",
    "end": "1103860"
  },
  {
    "text": "it means that when you call the dependency at that dependency doesn't answer and your client doesn't retry",
    "start": "1103860",
    "end": "1109440"
  },
  {
    "text": "well guess what happens you run out of connection pools very very fast if it's",
    "start": "1109440",
    "end": "1114600"
  },
  {
    "text": "a database for example all right so timeouts are super important and I would say if you are not",
    "start": "1114600",
    "end": "1121350"
  },
  {
    "text": "able to answer the simple questions what is your default timeout in the systems",
    "start": "1121350",
    "end": "1126769"
  },
  {
    "text": "then you have a problem because that will break one day or later another one",
    "start": "1126769",
    "end": "1131999"
  },
  {
    "text": "is rich Weiss and especially avoiding retry storms rich why storms are for",
    "start": "1131999",
    "end": "1137220"
  },
  {
    "text": "example my system is experiencing a small network glitch right and everyone",
    "start": "1137220",
    "end": "1142950"
  },
  {
    "text": "rich wise at the same time the requests that creates the retry storms that usually does overload and kills the",
    "start": "1142950",
    "end": "1149940"
  },
  {
    "text": "system very easily another one is if you have just an error in the backend and",
    "start": "1149940",
    "end": "1155249"
  },
  {
    "text": "all the clients start to retry and retry every seconds like that means all of a",
    "start": "1155249",
    "end": "1161399"
  },
  {
    "text": "sudden well your system will keep in retry loop and what I've found the biggest problem",
    "start": "1161399",
    "end": "1167940"
  },
  {
    "text": "is people don't define the numbers of retry so I've seen a lot of system retrying infinitely never stopping and",
    "start": "1167940",
    "end": "1174929"
  },
  {
    "text": "going to a loop and until you actually stop the backend it will continue retrying so the right way if you have",
    "start": "1174929",
    "end": "1181499"
  },
  {
    "text": "retries is to do a back off so you system hasn't problem your client makes a request okay you say I'm gonna retry",
    "start": "1181499",
    "end": "1189059"
  },
  {
    "text": "and then if it still has the error you just say oh I'm gonna back up so you retry after 2 seconds after 4 seconds 6",
    "start": "1189059",
    "end": "1196499"
  },
  {
    "text": "8 16 we call that exponential back-off but we also figure out that simple",
    "start": "1196499",
    "end": "1201809"
  },
  {
    "text": "exponential back-off doesn't work you just have to have exponential back-off plus a jitter so that when you have a",
    "start": "1201809",
    "end": "1207600"
  },
  {
    "text": "complex systems you don't have you don't have this kind of retries that all",
    "start": "1207600",
    "end": "1214769"
  },
  {
    "text": "happen at the same time so think about this when you when you implement your",
    "start": "1214769",
    "end": "1220320"
  },
  {
    "text": "application I think a very good pattern to force the developer to think about Thomas and we tries to use circuit",
    "start": "1220320",
    "end": "1226230"
  },
  {
    "text": "breakers circuit breaker is basically Ewing blow up a request inside an object",
    "start": "1226230",
    "end": "1231809"
  },
  {
    "text": "and that object monitors for the dependency whether the depends is he has",
    "start": "1231809",
    "end": "1237029"
  },
  {
    "text": "failures its latency and errors and if the errors keeps coming instead of",
    "start": "1237029",
    "end": "1242519"
  },
  {
    "text": "querying it you just break it you just say well don't go there it's it's bad",
    "start": "1242519",
    "end": "1247529"
  },
  {
    "text": "right and when you create that object the developer is forced to have a kind",
    "start": "1247529",
    "end": "1255029"
  },
  {
    "text": "of a second as what we call a degradation a degradation right so you",
    "start": "1255029",
    "end": "1261509"
  },
  {
    "text": "tell it oh if that object breaks then for example serve from cache of served from other things and if you've used",
    "start": "1261509",
    "end": "1268799"
  },
  {
    "text": "netflix they are really good at using circuit breaker on their on the UI they often have recommendation engines that",
    "start": "1268799",
    "end": "1275879"
  },
  {
    "text": "are personalized if those don't work they will just give you popular on Netflix or top trending here and there",
    "start": "1275879",
    "end": "1281909"
  },
  {
    "text": "and these are all coming from cache so it serves to thing is actually makes the back-end free of of queries because",
    "start": "1281909",
    "end": "1289739"
  },
  {
    "text": "everything is going to go to cache and that's a very good thing to do when you're experiencing",
    "start": "1289739",
    "end": "1295480"
  },
  {
    "text": "you in the back end you don't want to have more people coming and making",
    "start": "1295480",
    "end": "1300520"
  },
  {
    "text": "active query on your application when you are experiencing issues so when you're experiencing issues back off and",
    "start": "1300520",
    "end": "1306280"
  },
  {
    "text": "try to give back general type of data like something coming from cash on the",
    "start": "1306280",
    "end": "1313570"
  },
  {
    "text": "operation level I'd say you really have to have an understanding of what's",
    "start": "1313570",
    "end": "1320290"
  },
  {
    "text": "happening in the system but I still see a lot of time logs and being able to",
    "start": "1320290",
    "end": "1327640"
  },
  {
    "text": "trace a request or observe the entire system really really not to the point",
    "start": "1327640",
    "end": "1333040"
  },
  {
    "text": "where you can very fast pinpoint problems so this is super super important and you have to do this also",
    "start": "1333040",
    "end": "1339810"
  },
  {
    "text": "infrastructure as code I think this is some super important so that you know how the system is deployed and you can",
    "start": "1339810",
    "end": "1346540"
  },
  {
    "text": "reproduce it you can rerun it you can version control it so all that is very important so if you are really",
    "start": "1346540",
    "end": "1352870"
  },
  {
    "text": "interested in to that stuff I do a shameless plug this is a series of blog I brought on on resiliency",
    "start": "1352870",
    "end": "1359200"
  },
  {
    "text": "you'll have all the slides so you don't have to to take the I'll publish the slide on my Twitter handle after this",
    "start": "1359200",
    "end": "1365530"
  },
  {
    "text": "talk but you can go deep dive on there and is also a very very good tool and",
    "start": "1365530",
    "end": "1371710"
  },
  {
    "text": "and and white paper work free called the well architected framework which is a",
    "start": "1371710",
    "end": "1377020"
  },
  {
    "text": "set of questions that you go through with your company to kind of make you think enforce you think about all those",
    "start": "1377020",
    "end": "1382390"
  },
  {
    "text": "little ideas and system that help you build more reliable resilient application so once you've done that",
    "start": "1382390",
    "end": "1390130"
  },
  {
    "text": "you're ready to gonna go to the next level and start thinking about chaos engineering and before you go into",
    "start": "1390130",
    "end": "1396280"
  },
  {
    "text": "breaking things you have to figure out how am I going to monitor the health of my application what is my steady state",
    "start": "1396280",
    "end": "1402250"
  },
  {
    "text": "and the steady state is not straightforward a lot of people will start using CPU or memory metrics it's",
    "start": "1402250",
    "end": "1409810"
  },
  {
    "text": "totally false it's totally wrong even though you can have the pattern of your",
    "start": "1409810",
    "end": "1414910"
  },
  {
    "text": "CPU and memory usually it's very local it's not system-wide and and you have to",
    "start": "1414910",
    "end": "1420610"
  },
  {
    "text": "think of a better metric and you have to have a steady state that you can see the",
    "start": "1420610",
    "end": "1426700"
  },
  {
    "text": "evolution over weeks month and you can compare go back and see what it means to give you a very good idea of",
    "start": "1426700",
    "end": "1433000"
  },
  {
    "text": "in my opinion one of the best steady-state Netflix has what they call the pulse of Netflix and the pulse of",
    "start": "1433000",
    "end": "1438970"
  },
  {
    "text": "Netflix is simply how many people how many times people around the world click",
    "start": "1438970",
    "end": "1446020"
  },
  {
    "text": "on the play button when they start Netflix and I think it's a beautiful metrics because if the system is",
    "start": "1446020",
    "end": "1453010"
  },
  {
    "text": "experiencing the issue people will tend to click few times it doesn't work it doesn't work somewhere so they can",
    "start": "1453010",
    "end": "1458680"
  },
  {
    "text": "detect this kind of small changes in the number of play buttons people click and",
    "start": "1458680",
    "end": "1465130"
  },
  {
    "text": "I think this is directly related to user experience and also the business because",
    "start": "1465130",
    "end": "1470920"
  },
  {
    "text": "the sole purpose of Netflix is to deliver video and customers want to see that video and so I think it's a",
    "start": "1470920",
    "end": "1478270"
  },
  {
    "text": "beautiful beautiful metric at Amazon we use the sales right are the shipments",
    "start": "1478270",
    "end": "1484990"
  },
  {
    "text": "this is for us very very steady metrics we are able to do very very good",
    "start": "1484990",
    "end": "1490150"
  },
  {
    "text": "predictions on what what is going to be our our sales of shipment in the",
    "start": "1490150",
    "end": "1496480"
  },
  {
    "text": "particular region and the particular time and we did some experiment on the",
    "start": "1496480",
    "end": "1502000"
  },
  {
    "text": "Amazon retail page and we increased we added 100% latency or increments of 100",
    "start": "1502000",
    "end": "1508900"
  },
  {
    "text": "percent at NC until having almost two seconds I didn't and for every hundred",
    "start": "1508900",
    "end": "1515230"
  },
  {
    "text": "milliseconds we noticed almost a 1% drop in sales and 100 milliseconds is not",
    "start": "1515230",
    "end": "1522280"
  },
  {
    "text": "something you can detect as human right we are fast humans are roughly 300 400",
    "start": "1522280",
    "end": "1528460"
  },
  {
    "text": "milliseconds people like me are more along the 600 700 milliseconds so it's",
    "start": "1528460",
    "end": "1534310"
  },
  {
    "text": "more touching the the behavior rather",
    "start": "1534310",
    "end": "1540610"
  },
  {
    "text": "than make youth being aware of what's happening Google is obviously the search",
    "start": "1540610",
    "end": "1547690"
  },
  {
    "text": "right and they can make experiment by hand by adding latency into their website and they see that if they add",
    "start": "1547690",
    "end": "1554380"
  },
  {
    "text": "the 500 millisecond latency is 20% fewer search and ads when search is your",
    "start": "1554380",
    "end": "1560440"
  },
  {
    "text": "business it's it's massive massive impact so once you",
    "start": "1560440",
    "end": "1566240"
  },
  {
    "text": "have your steady-state figured out and that's actually quite hard you have to go into the fun part",
    "start": "1566240",
    "end": "1572810"
  },
  {
    "text": "and that's the iPod itis and this is where you take the entire team so you take your CTO your CEO your business",
    "start": "1572810",
    "end": "1581120"
  },
  {
    "text": "people your applications your manager you take pretty everyone in the room and you ask the simple question what if and",
    "start": "1581120",
    "end": "1587990"
  },
  {
    "text": "then you go into different type of scenarios what if if I what if my master",
    "start": "1587990",
    "end": "1593150"
  },
  {
    "text": "database goes down well very often when I do experiments like this with",
    "start": "1593150",
    "end": "1598550"
  },
  {
    "text": "customers I ask everyone to write on the paper so that they don't listen to each",
    "start": "1598550",
    "end": "1603920"
  },
  {
    "text": "other and everyone has different answers no one will say the same thing and",
    "start": "1603920",
    "end": "1609200"
  },
  {
    "text": "usually I stop the things here I say okay why everyone has a different story right because if you know are your",
    "start": "1609200",
    "end": "1616790"
  },
  {
    "text": "system behaved you should everyone should have the same story or at least they should have read it in a book or in",
    "start": "1616790",
    "end": "1622310"
  },
  {
    "text": "the application design what should happen right so we make these experiments and then we figure out what",
    "start": "1622310",
    "end": "1630290"
  },
  {
    "text": "everyone is saying so example what happens if i take my master database go down very often you'll have the UI",
    "start": "1630290",
    "end": "1636710"
  },
  {
    "text": "designer so I never thought about that or but I would love the user to still be",
    "start": "1636710",
    "end": "1642800"
  },
  {
    "text": "able to use the application then you have the backend guy you say oh that's",
    "start": "1642800",
    "end": "1648200"
  },
  {
    "text": "not gonna support so let me ask you a question how many of you are supporting",
    "start": "1648200",
    "end": "1653450"
  },
  {
    "text": "read-only mode on your backends today right how many of you have databases",
    "start": "1653450",
    "end": "1659620"
  },
  {
    "text": "right I mean your view are in the business of running databases quite a",
    "start": "1659620",
    "end": "1665210"
  },
  {
    "text": "few actually majority is not majority you have other kind of business so probably your user don't always need to",
    "start": "1665210",
    "end": "1673880"
  },
  {
    "text": "write in the database right give you an example Prime video prime video for",
    "start": "1673880",
    "end": "1679430"
  },
  {
    "text": "purpose is to give videos and they have a very beautiful patterns that if the master database go down they go into a",
    "start": "1679430",
    "end": "1685400"
  },
  {
    "text": "read-only mode you can still consume videos but everything that is required",
    "start": "1685400",
    "end": "1690650"
  },
  {
    "text": "to master database is either hidden put on hold or queued or just simply inactivated and that's my",
    "start": "1690650",
    "end": "1698150"
  },
  {
    "text": "opinion something that is very interesting it's the same with what happen if your authentication system goes down do you just close the door or",
    "start": "1698150",
    "end": "1705980"
  },
  {
    "text": "do file open and I think it's those are all interesting questions to to go through when you have your old team",
    "start": "1705980",
    "end": "1713000"
  },
  {
    "text": "around the table because trust me will force some very hard discussions which",
    "start": "1713000",
    "end": "1718400"
  },
  {
    "text": "are very interesting at the end so make that everyone's problem and you shouldn't just have back end to go into",
    "start": "1718400",
    "end": "1725120"
  },
  {
    "text": "the what if because it will tell you just a very part very little part of the story then you also should kind of avoid",
    "start": "1725120",
    "end": "1734290"
  },
  {
    "text": "hypotheses when one person in the room says I don't know if or mm not sure",
    "start": "1734290",
    "end": "1741920"
  },
  {
    "text": "these usually are alarms right so if anyone has doubt that it will take the",
    "start": "1741920",
    "end": "1747770"
  },
  {
    "text": "entire system down don't try it verify first make sure it's resilient go",
    "start": "1747770",
    "end": "1752990"
  },
  {
    "text": "back to the boring the drawing board and figuring out because you should really do I put this is an experiment I don't",
    "start": "1752990",
    "end": "1760220"
  },
  {
    "text": "think that you are confident will be resilient because that's what chaos engineering is it's just a method for",
    "start": "1760220",
    "end": "1766730"
  },
  {
    "text": "verifying an hypothesis so then you go into designing and run your experiment",
    "start": "1766730",
    "end": "1772490"
  },
  {
    "text": "and this is the fun part you pick your hypothesis you have your metric your steady state you might",
    "start": "1772490",
    "end": "1778910"
  },
  {
    "text": "notify or not your organisation I always say notify your organisation at least the incident response team so that they",
    "start": "1778910",
    "end": "1786230"
  },
  {
    "text": "don't come from a party the night before",
    "start": "1786230",
    "end": "1791320"
  },
  {
    "text": "with a big headache so everyone should be at ten o'clock",
    "start": "1791320",
    "end": "1796880"
  },
  {
    "text": "more or less sharp in the office ready to kind of take on any kind of",
    "start": "1796880",
    "end": "1802040"
  },
  {
    "text": "experiment that happened and then one thing that is super important is you should be able to stop any experiment so",
    "start": "1802040",
    "end": "1808640"
  },
  {
    "text": "I've seen experiments that eventually escalated into cascading failures and",
    "start": "1808640",
    "end": "1815840"
  },
  {
    "text": "there was no stop button so think about how you can implement a stop button for",
    "start": "1815840",
    "end": "1821180"
  },
  {
    "text": "example instead of really taking down the database put a proxy in front or",
    "start": "1821180",
    "end": "1826490"
  },
  {
    "text": "shut down the security group usually I'm a lot easier to to to revert",
    "start": "1826490",
    "end": "1831910"
  },
  {
    "text": "instead of restarting an entire database or having it really lock down so when",
    "start": "1831910",
    "end": "1839380"
  },
  {
    "text": "you design your experiment trying to find interesting solutions right one of",
    "start": "1839380",
    "end": "1844540"
  },
  {
    "text": "the good way in my opinion where I've seen works pretty well it's not the only one to isolate and go back very fast is using",
    "start": "1844540",
    "end": "1853090"
  },
  {
    "text": "cannery deploys so you use you make an experiment in a very small part of your",
    "start": "1853090",
    "end": "1858460"
  },
  {
    "text": "system you may get some 1% of the traffic there such your experiment get",
    "start": "1858460",
    "end": "1863740"
  },
  {
    "text": "comfortable with it and eventually increase the traffic right and you have to increase up to 100 percent eventually",
    "start": "1863740",
    "end": "1869920"
  },
  {
    "text": "because that's also when system fails so",
    "start": "1869920",
    "end": "1875260"
  },
  {
    "text": "as since this time fail at 98% when basically there was too many concurrent",
    "start": "1875260",
    "end": "1880870"
  },
  {
    "text": "connections or the cache was was totally warmed up and started to have some",
    "start": "1880870",
    "end": "1887559"
  },
  {
    "text": "issues so I'm going to review with you now a bit of tools and we're going to do a couple of demos and see what kind of",
    "start": "1887559",
    "end": "1895059"
  },
  {
    "text": "bananas we can feed our monkeys so the first one actually which is very interesting a lot of the time people",
    "start": "1895059",
    "end": "1900550"
  },
  {
    "text": "don't know is on Amazon / if you use our our database you have fault injection",
    "start": "1900550",
    "end": "1907000"
  },
  {
    "text": "queries so you can literally do a sequel statement to inject some some some",
    "start": "1907000",
    "end": "1915309"
  },
  {
    "text": "failures you can crash your master you can do failover tests you can do a disk",
    "start": "1915309",
    "end": "1922600"
  },
  {
    "text": "failure and ask add the number of of error right there and you can also do",
    "start": "1922600",
    "end": "1928240"
  },
  {
    "text": "this congestion and the query looks like this you open your your console and you can do system simulate and those are",
    "start": "1928240",
    "end": "1936280"
  },
  {
    "text": "very interesting because they are reversible immediately so it doesn't",
    "start": "1936280",
    "end": "1942280"
  },
  {
    "text": "really affect the system it's just a simulation so that's something that in my opinion people should know and I love",
    "start": "1942280",
    "end": "1950710"
  },
  {
    "text": "doing this on databases because first is because databases are often the weakest",
    "start": "1950710",
    "end": "1957730"
  },
  {
    "text": "part of the system because no one touches them first everyone leaves the database for the last part",
    "start": "1957730",
    "end": "1965240"
  },
  {
    "text": "even when it's about testing for residency making system are hardened or",
    "start": "1965240",
    "end": "1971690"
  },
  {
    "text": "things like is the database everyone is scared of touching it so I think when",
    "start": "1971690",
    "end": "1976789"
  },
  {
    "text": "you when you have the possibility to simulate failures it's very very good so think about that one a very interesting",
    "start": "1976789",
    "end": "1984730"
  },
  {
    "text": "query that I love to run on systems as well even locally is a simple simple",
    "start": "1984730",
    "end": "1991100"
  },
  {
    "text": "comment right WR q RK and basically that will launch 2012 threads with 400",
    "start": "1991100",
    "end": "1998330"
  },
  {
    "text": "concurrent connections for 30 seconds on a local endpoint for example your health API let me show you a little bit how",
    "start": "1998330",
    "end": "2005980"
  },
  {
    "text": "this looks like so Ivan I have an application here running using docker compose right so my application is",
    "start": "2005980",
    "end": "2013840"
  },
  {
    "text": "composed of database so there's a database the master database there's a",
    "start": "2013840",
    "end": "2018909"
  },
  {
    "text": "slave this Redis there's a task is basically a message passing and you know you can you can you can query a query",
    "start": "2018909",
    "end": "2027250"
  },
  {
    "text": "products so basically it gives you kind of some fun things what is very",
    "start": "2027250",
    "end": "2036909"
  },
  {
    "text": "interesting to do here is you know run run a crazy query like this and then you",
    "start": "2036909",
    "end": "2042909"
  },
  {
    "text": "see basically first thing is what happens here you know what's super",
    "start": "2042909",
    "end": "2049358"
  },
  {
    "text": "deadly here what you can realize really fast is actually logging",
    "start": "2049359",
    "end": "2056010"
  },
  {
    "text": "I would say in in in the past five big outage I've seen two were related to be",
    "start": "2056890",
    "end": "2063669"
  },
  {
    "text": "dis being four because there was two verbals logging or the logging was not",
    "start": "2063670",
    "end": "2070080"
  },
  {
    "text": "able to to adjust for example to the traffic or to say there was no",
    "start": "2070080",
    "end": "2076210"
  },
  {
    "text": "monitoring of the disc and usually when your disc is getting full you don't want",
    "start": "2076210",
    "end": "2083020"
  },
  {
    "text": "to keep logging you want to preserve the system so you should have monitors of your disk on your instance and being",
    "start": "2083020",
    "end": "2089889"
  },
  {
    "text": "able to revert and to just stop logging you don't want to to go in the mode",
    "start": "2089890",
    "end": "2097240"
  },
  {
    "text": "where which is simply break because you don't have data of space left on there on your back end another another",
    "start": "2097240",
    "end": "2104670"
  },
  {
    "text": "interesting thing is how fast are you able to answer a simple request right so",
    "start": "2104670",
    "end": "2110610"
  },
  {
    "text": "where am I whoops where did I run that so let's run that and now let's try to",
    "start": "2110610",
    "end": "2117400"
  },
  {
    "text": "query query the health API again you see",
    "start": "2117400",
    "end": "2123430"
  },
  {
    "text": "how much longer it takes right yeah and you know the big problem with that well",
    "start": "2123430",
    "end": "2129910"
  },
  {
    "text": "if I'm behind a load balancer or route 53 there's a health check and there are pings right if I'm not able to answer a",
    "start": "2129910",
    "end": "2137410"
  },
  {
    "text": "ping or health check what's gonna happen I'm gonna be taken out of the auto scaling group of things on is right so",
    "start": "2137410",
    "end": "2144550"
  },
  {
    "text": "when you have storms of queries or very heavy traffic prioritized Pink's",
    "start": "2144550",
    "end": "2149830"
  },
  {
    "text": "prioritize health checks make sure that you are always able to answer it fast",
    "start": "2149830",
    "end": "2155230"
  },
  {
    "text": "and actually a good design here would simply simply be to force that API to be",
    "start": "2155230",
    "end": "2163080"
  },
  {
    "text": "high high priority and all the others may be lower priority and then cache it",
    "start": "2163080",
    "end": "2169480"
  },
  {
    "text": "so this is kind of an interesting discussion that you have to have and I didn't have to do much here is simply",
    "start": "2169480",
    "end": "2175600"
  },
  {
    "text": "one query can give you already a lot of work to do another one that is very",
    "start": "2175600",
    "end": "2183250"
  },
  {
    "text": "interesting is you can start adding latency in your network so this is the TC command in Linux",
    "start": "2183250",
    "end": "2189760"
  },
  {
    "text": "that will add let's say 200 milliseconds latency on your 80 eth0 interface and",
    "start": "2189760",
    "end": "2196030"
  },
  {
    "text": "that's beautiful as I say latency is deadly you can break things with latency",
    "start": "2196030",
    "end": "2201370"
  },
  {
    "text": "like you can't even imagine because usually of timeouts and because of",
    "start": "2201370",
    "end": "2207700"
  },
  {
    "text": "retries and that's a very good way to fix those issues another of course the",
    "start": "2207700",
    "end": "2216310"
  },
  {
    "text": "interesting tool and this is kind of the first tool that was really done and that",
    "start": "2216310",
    "end": "2222040"
  },
  {
    "text": "was the simian army by Netflix they started building those simian armies in in the in the 2015 the first one was the",
    "start": "2222040",
    "end": "2229660"
  },
  {
    "text": "crazy little monkey behind and what it does this monkey goes randomly into your",
    "start": "2229660",
    "end": "2235210"
  },
  {
    "text": "AWS environment and kills ec2 instances so you select a bunch of auto scaling",
    "start": "2235210",
    "end": "2241360"
  },
  {
    "text": "groups and you say well randomly kill instances because if you design applications so that they are resilient",
    "start": "2241360",
    "end": "2246430"
  },
  {
    "text": "they should not have states transfer so you should be able to kill them this",
    "start": "2246430",
    "end": "2252850"
  },
  {
    "text": "should be stateless so you kill it and then he comes back and self heals",
    "start": "2252850",
    "end": "2257940"
  },
  {
    "text": "they're able to change change security group or even break an entire region the",
    "start": "2257940",
    "end": "2263980"
  },
  {
    "text": "big gorilla behind is one of the monkeys of Netflix that randomly kills the",
    "start": "2263980",
    "end": "2269560"
  },
  {
    "text": "region so that you can practice a region failover and they do this in production once a month straight and it takes about 10-15",
    "start": "2269560",
    "end": "2276220"
  },
  {
    "text": "minute for for them every month to shift an entire traffic from one region to another so it's very interesting the",
    "start": "2276220",
    "end": "2282430"
  },
  {
    "text": "problem with the simian army it's kind of a bit it's those are first schedulers like cron jobs and then they are",
    "start": "2282430",
    "end": "2289420"
  },
  {
    "text": "integrated in spinnaker which is a CIC D pipeline so if you want to use them you have to go into using spinnaker or",
    "start": "2289420",
    "end": "2296500"
  },
  {
    "text": "things like Google Atlas the principles are very interesting and I think this is something that you should all be aware",
    "start": "2296500",
    "end": "2303100"
  },
  {
    "text": "of one of my favorite is the kale toolkit it's an open source project and",
    "start": "2303100",
    "end": "2309010"
  },
  {
    "text": "I think this one is very nice because there's very simple interface and you can build extensions on top of it so",
    "start": "2309010",
    "end": "2315520"
  },
  {
    "text": "people have built extensions for all the different clouds AWS as your Google and even",
    "start": "2315520",
    "end": "2321759"
  },
  {
    "text": "or their own clouds and what is interesting here is like it feels more",
    "start": "2321759",
    "end": "2326919"
  },
  {
    "text": "like a test because you can integrate it directly in your CI CD pipeline so let me show you how this looks like so this",
    "start": "2326919",
    "end": "2335799"
  },
  {
    "text": "is how you define you see in the back can you show me thumbs in the back so you want bigger so basically you can",
    "start": "2335799",
    "end": "2346089"
  },
  {
    "text": "define an experiment using a JSON document here and my my experiment is",
    "start": "2346089",
    "end": "2351669"
  },
  {
    "text": "take down a database so I describe what",
    "start": "2351669",
    "end": "2356919"
  },
  {
    "text": "it is I can have my steady state hypothesis and I say well in normal",
    "start": "2356919",
    "end": "2362979"
  },
  {
    "text": "condition my health check should have time out of 15 and or being able to",
    "start": "2362979",
    "end": "2368289"
  },
  {
    "text": "answer within this 15 seconds which actually is very very bad it should be a lot faster than that and the tolerance",
    "start": "2368289",
    "end": "2374679"
  },
  {
    "text": "is should be 200 so that means the error code that is returned is a 200 then you",
    "start": "2374679",
    "end": "2381669"
  },
  {
    "text": "can implement methods you say ok first once you start the experiment you will",
    "start": "2381669",
    "end": "2387339"
  },
  {
    "text": "obviously take down the day the day base here I'm using docker environment so run",
    "start": "2387339",
    "end": "2394119"
  },
  {
    "text": "some docker comments to take down database I keep the PID of that database",
    "start": "2394119",
    "end": "2400419"
  },
  {
    "text": "of that container so that I can restart it later and then so I stop it and then",
    "start": "2400419",
    "end": "2406150"
  },
  {
    "text": "I run a probe to see is my system still",
    "start": "2406150",
    "end": "2411219"
  },
  {
    "text": "alive ok yes my system might be alive then I'll restart it and then I reject the probe",
    "start": "2411219",
    "end": "2418209"
  },
  {
    "text": "and then I have a rollback function which basically will restart the docker container if things go wrong and this is",
    "start": "2418209",
    "end": "2424299"
  },
  {
    "text": "very interesting because you can really see in practice how it goes so this is",
    "start": "2424299",
    "end": "2429609"
  },
  {
    "text": "again my my doctor environment actually just for the sake of it I want to show you my docker compose so there is a",
    "start": "2429609",
    "end": "2436599"
  },
  {
    "text": "front and API there is a tasks and there are as nettinger next is the master",
    "start": "2436599",
    "end": "2441699"
  },
  {
    "text": "database a slave there's replication between database these readies for message passing and cache actually all",
    "start": "2441699",
    "end": "2447609"
  },
  {
    "text": "this is in my github is going to be open source after this talk so you can all download and play with",
    "start": "2447609",
    "end": "2453190"
  },
  {
    "text": "if you want there's also the caves experiment so you can see see in practice I'd world and really the first",
    "start": "2453190",
    "end": "2460569"
  },
  {
    "text": "thing you could do actually before going that is simply I go into into you know",
    "start": "2460569",
    "end": "2466150"
  },
  {
    "text": "doaker so you'd say okay let's do docker PS and you say okay let's grab and you get to",
    "start": "2466150",
    "end": "2476440"
  },
  {
    "text": "save that's the idea of my container and you can just say docker stop that will",
    "start": "2476440",
    "end": "2485230"
  },
  {
    "text": "stop my my container it takes a bit of time and then you can just make another",
    "start": "2485230",
    "end": "2490990"
  },
  {
    "text": "request there and you'll see now my health check will return that in fact my",
    "start": "2490990",
    "end": "2496839"
  },
  {
    "text": "slave is down so that's still interesting 503 the problem is this is",
    "start": "2496839",
    "end": "2505450"
  },
  {
    "text": "its manual and you know it's we want things to be automated right so that's",
    "start": "2505450",
    "end": "2512800"
  },
  {
    "text": "the cool part with with the framework here so let me restart the",
    "start": "2512800",
    "end": "2521578"
  },
  {
    "text": "[Music] which one what was the ID so which",
    "start": "2524340",
    "end": "2534870"
  },
  {
    "text": "restart that it's verified that it's gonna come back up so these cash implementing here so I'm",
    "start": "2534870",
    "end": "2541740"
  },
  {
    "text": "not too worried it's gonna come back up alright anyway so let's go back to the",
    "start": "2541740",
    "end": "2548480"
  },
  {
    "text": "two here my experiment actually let's",
    "start": "2548480",
    "end": "2553830"
  },
  {
    "text": "just test that experience sorry I make you things change and it's very inch you can peep in style",
    "start": "2553830",
    "end": "2560190"
  },
  {
    "text": "chaos toolkit and and it drunk very nicely and then you can just simply run",
    "start": "2560190",
    "end": "2565680"
  },
  {
    "text": "the experiment and it goes through the entire thing it checks the steady states yeah my hypothesis and the actual",
    "start": "2565680",
    "end": "2572730"
  },
  {
    "text": "application does response to the health check it is a 200 now it stops the database and you see here it started to",
    "start": "2572730",
    "end": "2580140"
  },
  {
    "text": "stop it so then you can even check the health check and you see now my master",
    "start": "2580140",
    "end": "2585720"
  },
  {
    "text": "is down in indeed continues the experiment and says one of the",
    "start": "2585720",
    "end": "2591990"
  },
  {
    "text": "experiment here failed why because I had said my health check should be at 200 and actually you see my eyes check in",
    "start": "2591990",
    "end": "2597810"
  },
  {
    "text": "that case he's a 400 returns a 403 a 503 so which is a service unavailable simply",
    "start": "2597810",
    "end": "2605070"
  },
  {
    "text": "because my database is quite critical so implement this kind of error code and I think just having these simple",
    "start": "2605070",
    "end": "2611780"
  },
  {
    "text": "experiments are very powerful because they feel like a test you can integrate them in your see ICD pipeline and you",
    "start": "2611780",
    "end": "2618870"
  },
  {
    "text": "can use them as regression tests as well that you know when you change things when people rethink about error codes",
    "start": "2618870",
    "end": "2625020"
  },
  {
    "text": "change framework it's very good to rerun everything so you can make tons of small experiment like this and I think is it's",
    "start": "2625020",
    "end": "2632850"
  },
  {
    "text": "really brilliant so I really highly recommend highly recommend to look into",
    "start": "2632850",
    "end": "2639390"
  },
  {
    "text": "this the interesting thing is also it gives you a journal so when oops or you",
    "start": "2639390",
    "end": "2650520"
  },
  {
    "text": "see it gives you a journal that keeps track of all that so you can then keep",
    "start": "2650520",
    "end": "2656670"
  },
  {
    "text": "them all right so let's go back into the presentation so",
    "start": "2656670",
    "end": "2665280"
  },
  {
    "text": "yeah it kills two kids something very interesting I kept that in here so you can have a look another one that I",
    "start": "2665280",
    "end": "2670860"
  },
  {
    "text": "really like you probably heard about it it's called gremlin green ring is",
    "start": "2670860",
    "end": "2677330"
  },
  {
    "text": "destruction as a service you know it's a service that you you you can you have to",
    "start": "2677330",
    "end": "2682680"
  },
  {
    "text": "pay for it but it's very very nicely done it's a user interface it looks like",
    "start": "2682680",
    "end": "2687930"
  },
  {
    "text": "this so this is a green line that is installed for my account and here you",
    "start": "2687930",
    "end": "2693870"
  },
  {
    "text": "can you can see the different clients I have and I have a I have an instance an",
    "start": "2693870",
    "end": "2699390"
  },
  {
    "text": "ec2 instance which has the Grimm name plugging so Grameen works with a plug-in",
    "start": "2699390",
    "end": "2704730"
  },
  {
    "text": "you install the plug-in and then it starts to talk with the backend and then you can really start to do attacks right",
    "start": "2704730",
    "end": "2711630"
  },
  {
    "text": "so you can say new attack you can select your target and you can decide what kind",
    "start": "2711630",
    "end": "2717960"
  },
  {
    "text": "of attack you want so you can say a CPU a disk attack io memory you can do",
    "start": "2717960",
    "end": "2724320"
  },
  {
    "text": "shutdown process killer time travel which is one of my favorite attack you change the time of back-end that's",
    "start": "2724320",
    "end": "2729900"
  },
  {
    "text": "deadly usually I highly recommend everyone to try that on your test environment time",
    "start": "2729900",
    "end": "2737220"
  },
  {
    "text": "travel so this is very beautiful it's a nice UI what I really like is there's a",
    "start": "2737220",
    "end": "2742770"
  },
  {
    "text": "direct out all attack very clear so that if things go wrong you can stop so it's",
    "start": "2742770",
    "end": "2749670"
  },
  {
    "text": "very it's very easy to do you can only show gremlin and then that's it my instance is being attacked and then you",
    "start": "2749670",
    "end": "2756780"
  },
  {
    "text": "can just simply stop everything so if you have this kind of system you can",
    "start": "2756780",
    "end": "2762150"
  },
  {
    "text": "have a docker container you can install on new ec2 instance and all that stuff",
    "start": "2762150",
    "end": "2767250"
  },
  {
    "text": "so something really very nice and this bunch of other one Toxie proxy is one of my favorites as",
    "start": "2767250",
    "end": "2774180"
  },
  {
    "text": "well it's a proxy that you installed between component and you can design what they call toxics which can affect",
    "start": "2774180",
    "end": "2782880"
  },
  {
    "text": "latency timeouts and it's very beautiful again interface to do it open source as",
    "start": "2782880",
    "end": "2789360"
  },
  {
    "text": "well and it's been used in production by Shopify so it's not something you should use in your production environment but something in",
    "start": "2789360",
    "end": "2795720"
  },
  {
    "text": "the test environment to start building building cool stuff so as I say it's a proxy if you are into abilities there's",
    "start": "2795720",
    "end": "2803640"
  },
  {
    "text": "a nice project called cheap monkeys and then Pumbaa which is a very good way to",
    "start": "2803640",
    "end": "2809540"
  },
  {
    "text": "attack your docker containers so it kind of angle hopes a little bit the doctor",
    "start": "2809540",
    "end": "2815130"
  },
  {
    "text": "stopped docker restarts in a kind of a bit nicer framework and gives you all",
    "start": "2815130",
    "end": "2820320"
  },
  {
    "text": "the cool tools to go around that another one which was recently released if you",
    "start": "2820320",
    "end": "2828180"
  },
  {
    "text": "are into traceability for serverless application is tundra tundra allows you",
    "start": "2828180",
    "end": "2833370"
  },
  {
    "text": "as well to add filters and modify request on the fly so you can test for example added latency also wrote a big",
    "start": "2833370",
    "end": "2840690"
  },
  {
    "text": "blog post if you are into into Python and and lambda how do you to to kind of",
    "start": "2840690",
    "end": "2848640"
  },
  {
    "text": "add latency on your functions and that's also a very nice way to do it and then",
    "start": "2848640",
    "end": "2856830"
  },
  {
    "text": "you have to verify and learn and really it's about quantifying the results here as I won't go too much into detail it's",
    "start": "2856830",
    "end": "2865080"
  },
  {
    "text": "pretty obvious but the most important one time to details all right I think one of the biggest outages I've had our",
    "start": "2865080",
    "end": "2871970"
  },
  {
    "text": "escalation path and alert system failed but that was what happened and it was",
    "start": "2871970",
    "end": "2879210"
  },
  {
    "text": "cascading failures my god this is a big party beyond so something that you really have to",
    "start": "2879210",
    "end": "2886490"
  },
  {
    "text": "monitor from the alert time you get the alert from the time that all clear and stable and so quantify all the result",
    "start": "2886490",
    "end": "2893180"
  },
  {
    "text": "and then go back into you know when you had the iPod Aziz and compared to all",
    "start": "2893180",
    "end": "2899840"
  },
  {
    "text": "what people had put in the papers very often it's gonna be a very very big difference and again you have to go",
    "start": "2899840",
    "end": "2905900"
  },
  {
    "text": "through that discussion why is it so different why no one predicted that DNS was not DNS failover was not happening",
    "start": "2905900",
    "end": "2913880"
  },
  {
    "text": "as fast as people think and then you will uncover some some big issue there",
    "start": "2913880",
    "end": "2919910"
  },
  {
    "text": "at the Amazon with the process of that week all the corrections of errors which",
    "start": "2919910",
    "end": "2925640"
  },
  {
    "text": "is a big process with a team of principals and very big engineers that kind of go through trying to understand",
    "start": "2925640",
    "end": "2932960"
  },
  {
    "text": "when the failure happened what is the root cause and it goes through what we call the five why's you start from the",
    "start": "2932960",
    "end": "2938000"
  },
  {
    "text": "outage and then you ask questions deep and deep into why and because Y but Y",
    "start": "2938000",
    "end": "2944090"
  },
  {
    "text": "and Y and we usually don't stop into only one cycle we ask many teams to go",
    "start": "2944090",
    "end": "2951500"
  },
  {
    "text": "through that five was because usually if you ask two or three people the five words you get also different type of",
    "start": "2951500",
    "end": "2958130"
  },
  {
    "text": "answers so collect all of those this usually gives very interesting story one",
    "start": "2958130",
    "end": "2964220"
  },
  {
    "text": "of the most important thing you have to remember when you have a knowledge is usually not because one problem it's",
    "start": "2964220",
    "end": "2969230"
  },
  {
    "text": "usually a collection of small problems that pile to create a big catastrophic",
    "start": "2969230",
    "end": "2974450"
  },
  {
    "text": "failures right so when you go through that process of the five why's or corrections of errors try not to stop",
    "start": "2974450",
    "end": "2982520"
  },
  {
    "text": "into the first problem because very often there is uncovered these things to",
    "start": "2982520",
    "end": "2987830"
  },
  {
    "text": "uncover and understand at a deeper level so collections of more questions you",
    "start": "2987830",
    "end": "2993680"
  },
  {
    "text": "have to ask I love the one that why didn't anyone in the other team",
    "start": "2993680",
    "end": "3000670"
  },
  {
    "text": "commonhelp if there was an outage I think this is something that also is",
    "start": "3000670",
    "end": "3006040"
  },
  {
    "text": "very good indicator of a culture of a company one the biggest lesson in my",
    "start": "3006040",
    "end": "3011890"
  },
  {
    "text": "life is that I wouldn't be on stage today if one of my manager",
    "start": "3011890",
    "end": "3017110"
  },
  {
    "text": "about eight years ago would have blame me I cleaned a database in production",
    "start": "3017110",
    "end": "3023080"
  },
  {
    "text": "while we were having an outage and when I'm say cleaning really deleted production system databases while we",
    "start": "3023080",
    "end": "3030010"
  },
  {
    "text": "were having an outage simply because I well panicked there was some sweat",
    "start": "3030010",
    "end": "3036100"
  },
  {
    "text": "coming it was a crazy crazy thing then I was in the wrong environment I thought I was in tests I was in production I run",
    "start": "3036100",
    "end": "3043060"
  },
  {
    "text": "the delete comment and you can imagine it was not nice and when we did the corrections of error",
    "start": "3043060",
    "end": "3048700"
  },
  {
    "text": "there's never mention of my name it was always how was it possible that during",
    "start": "3048700",
    "end": "3054310"
  },
  {
    "text": "an outage I was able or someone was able to delete the database it should never happen so basically it was very it was a",
    "start": "3054310",
    "end": "3062050"
  },
  {
    "text": "wake-up call and we then started to build tools to avoid problems right because failures will happen you might",
    "start": "3062050",
    "end": "3068770"
  },
  {
    "text": "blame someone today for doing a mistakes tomorrow is your turn that it's going to do the mistake and you don't want to be",
    "start": "3068770",
    "end": "3074920"
  },
  {
    "text": "that person that is blame and you know at the end of the way the day most of the software we build are not mission or",
    "start": "3074920",
    "end": "3081460"
  },
  {
    "text": "life critical if they are then it might be a different story but no one is gonna",
    "start": "3081460",
    "end": "3087070"
  },
  {
    "text": "die if our Instagram application goes down right so it's no reason to blame",
    "start": "3087070",
    "end": "3093700"
  },
  {
    "text": "people what we want is you know learn and especially trying to avoid failures",
    "start": "3093700",
    "end": "3100270"
  },
  {
    "text": "and and build tools around that and at the end is fixed right and there's no",
    "start": "3100270",
    "end": "3105870"
  },
  {
    "text": "silver bullet you have to do the job do not go into a process where you find the",
    "start": "3105870",
    "end": "3111190"
  },
  {
    "text": "mistakes and then you don't prioritize fixing them again two months ago customers had gone",
    "start": "3111190",
    "end": "3116560"
  },
  {
    "text": "through a very nice case engineering experiment I isolated some big problems",
    "start": "3116560",
    "end": "3124180"
  },
  {
    "text": "and then didn't fix it two weeks later 19 hours outage because of that it could",
    "start": "3124180",
    "end": "3130330"
  },
  {
    "text": "have been avoided and so don't go into that make sure your your business understand",
    "start": "3130330",
    "end": "3136270"
  },
  {
    "text": "the importance of fixing this these problems that you find there are some challenges mostly cultural because",
    "start": "3136270",
    "end": "3143050"
  },
  {
    "text": "people love their code love their framework club their languages you know Python vs. Ruby versus gold versus",
    "start": "3143050",
    "end": "3149740"
  },
  {
    "text": "everything people go into love relationship with their code and we all treat our code",
    "start": "3149740",
    "end": "3155349"
  },
  {
    "text": "like the baby so as soon as you have heart discussions is gonna heat up so try to take some distance at the end of",
    "start": "3155349",
    "end": "3161469"
  },
  {
    "text": "the day the mission is just a bit resonant systems right and remember",
    "start": "3161469",
    "end": "3168089"
  },
  {
    "text": "people will build the reasons it's you can have all the process of the tools at",
    "start": "3168089",
    "end": "3174459"
  },
  {
    "text": "the end of the day is your people so focus on the culture and naturally the",
    "start": "3174459",
    "end": "3179829"
  },
  {
    "text": "rest will come and even if you use case engineering it still will fail so you",
    "start": "3179829",
    "end": "3186339"
  },
  {
    "text": "still will have major failure we use chaos engineering all the time they double us from many different things we",
    "start": "3186339",
    "end": "3192549"
  },
  {
    "text": "still have tens of failures a day right and that's just how life is but we have",
    "start": "3192549",
    "end": "3199900"
  },
  {
    "text": "less catastrophic failures because we are able to uncover big problems so take",
    "start": "3199900",
    "end": "3207249"
  },
  {
    "text": "time and think think big but go slowly and especially keep jump when you do",
    "start": "3207249",
    "end": "3214569"
  },
  {
    "text": "this all right thank you very much there's a bunch of references",
    "start": "3214569",
    "end": "3219659"
  },
  {
    "text": "and remember this is very important if you like that session go into the app",
    "start": "3223750",
    "end": "3228820"
  },
  {
    "text": "and and give some feedback it's very interesting for us to get your feedback how we can improve so that you have a",
    "start": "3228820",
    "end": "3234849"
  },
  {
    "text": "better experience as well thank you very much",
    "start": "3234849",
    "end": "3239070"
  }
]