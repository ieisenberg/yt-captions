[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "hey good morning everyone thanks for joining us here again today at the loft here in San Francisco I've got a full",
    "start": "30",
    "end": "5430"
  },
  {
    "text": "day here talking about serverless content quite a lot of topics that we're gonna cover for the whole day and so",
    "start": "5430",
    "end": "11040"
  },
  {
    "text": "thank you again here for joining us my name is Chris months I am currently principal and lead developer advocate",
    "start": "11040",
    "end": "16289"
  },
  {
    "text": "for serviced at AWS mastery based out of our New York City office so came a way out here today to spend some time with",
    "start": "16289",
    "end": "22170"
  },
  {
    "text": "you I've been here at AWS for a little over six and a half years across a couple different roles including",
    "start": "22170",
    "end": "27689"
  },
  {
    "text": "representing our DevOps space for a little while and being such an architect and then before that actually worked for a number startups in New York City area",
    "start": "27689",
    "end": "33390"
  },
  {
    "text": "companies like Etsy and meetup primarily on the infrastructure what you might call DevOps or s or a type of a role so",
    "start": "33390",
    "end": "41520"
  },
  {
    "text": "why are we here today so all this week here at the loft we are doing a recap on things that happened at AWS reinvent",
    "start": "41520",
    "end": "48510"
  },
  {
    "text": "2018 for those of you who have never been to before reinvent is our yearly user and developer conference that we",
    "start": "48510",
    "end": "55199"
  },
  {
    "text": "run in Las Vegas and one of the hottest topics that we had this year again was this concept of service and so",
    "start": "55199",
    "end": "62489"
  },
  {
    "text": "throughout today we're gonna cover a number of different topics in this space kind of going across from kind of",
    "start": "62489",
    "end": "68340"
  },
  {
    "text": "beginning stuff all the way up through a number of the services that play into this space so service what does this",
    "start": "68340",
    "end": "75000"
  },
  {
    "start": "73000",
    "end": "73000"
  },
  {
    "text": "mean so it's kind of an industry buzzword these days it means a lot of things to a lot of different people but for us here at AWS that comes down to",
    "start": "75000",
    "end": "82049"
  },
  {
    "text": "really kind of four key criteria for how we think about what service means so we",
    "start": "82049",
    "end": "87270"
  },
  {
    "text": "kind of have four guiding principles that we think about that in our minds say whether or not something is or isn't",
    "start": "87270",
    "end": "92939"
  },
  {
    "text": "service and so for us it means there being no service the provision or manage just means no physical and virtual no",
    "start": "92939",
    "end": "99990"
  },
  {
    "text": "really like container orchestration that you would ever have to think about yourself should scale with usage so as requests come in or data comes in or",
    "start": "99990",
    "end": "106950"
  },
  {
    "text": "events come in the platform that is service automatically scale to handle that and and do whatever it needs to do",
    "start": "106950",
    "end": "112890"
  },
  {
    "text": "for interacting or solving for that request we have a terminal use now called pay for value sometimes we say",
    "start": "112890",
    "end": "119189"
  },
  {
    "text": "not pay for idle or pay for just what you use and really when we talk about pay for value we're talking about this",
    "start": "119189",
    "end": "124920"
  },
  {
    "text": "idea that if you have resources that are sitting idle that aren't being used that aren't say sitting waiting for requests",
    "start": "124920",
    "end": "131370"
  },
  {
    "text": "that you're paying for that and our mind is wasted and so with the service that we talked about here today pretty much almost all",
    "start": "131370",
    "end": "138390"
  },
  {
    "text": "of them you're not gonna pay anything if they're not in use I'd like to give the example of if you're in at an organization that has say an app that's",
    "start": "138390",
    "end": "145080"
  },
  {
    "text": "used internally and you're primarily say a nine-to-five kind of shop that means all those other hours in the week you're",
    "start": "145080",
    "end": "150510"
  },
  {
    "text": "paying for that infrastructure you might be not be using but in the world of service that's not something that happens the lastly availability and",
    "start": "150510",
    "end": "156959"
  },
  {
    "text": "fault tolerance built-in so here at AWS we have a concept of regions there's over 18 of those I believe today",
    "start": "156959",
    "end": "163530"
  },
  {
    "text": "globally that you can run your infrastructure inside of inside of those regions our concept called availability",
    "start": "163530",
    "end": "169470"
  },
  {
    "text": "zones you can think of availability zones as essentially different data centers that exist within this",
    "start": "169470",
    "end": "174720"
  },
  {
    "text": "geographically bound region such that one of the most basic principles of building for fault tolerance in high",
    "start": "174720",
    "end": "180930"
  },
  {
    "text": "availability AWS is this concept of building across availability zones now in a traditional more server full model",
    "start": "180930",
    "end": "187680"
  },
  {
    "text": "you would be thinking about running infrastructure in those yourself and doing things like load balancing or",
    "start": "187680",
    "end": "193680"
  },
  {
    "text": "mapping requests across them but as we see today in the service space you won't have to think about that as much with",
    "start": "193680",
    "end": "200070"
  },
  {
    "text": "the products and the services that we're gonna be talking about now those are kind of the guiding principles that we",
    "start": "200070",
    "end": "205709"
  },
  {
    "text": "have on our side for what we stays forever this is but when we talk to customers about what service means for them and what it's brought to them it",
    "start": "205709",
    "end": "212579"
  },
  {
    "text": "means a number of different things the way that they see it so when customers talk to us about what they see from service they see kind of the benefits",
    "start": "212579",
    "end": "218970"
  },
  {
    "text": "that you see listed here so greater agility they're able to move faster because they're spending less time on",
    "start": "218970",
    "end": "223980"
  },
  {
    "text": "infrastructure they're not dealing with a lot of the overhead and setting up of various things like servers and",
    "start": "223980",
    "end": "229290"
  },
  {
    "text": "operating systems and all of that and that aligns with things like being able to better focus on just their business",
    "start": "229290",
    "end": "235560"
  },
  {
    "text": "need so I'm able to focus their energy on writing the code I'm building their applications on talking to their customers on iterating learning what it",
    "start": "235560",
    "end": "242310"
  },
  {
    "text": "is that they would want to get in to their product things like increased",
    "start": "242310",
    "end": "247380"
  },
  {
    "text": "scale so we have organizations that are doing things at a scale that they would have never been able to do in their own data centers in terms of things like",
    "start": "247380",
    "end": "253859"
  },
  {
    "text": "data ingestion data processing being able to scale out a product say for a specific period of time right maybe you",
    "start": "253859",
    "end": "261299"
  },
  {
    "text": "deal with something like a Super Bowl it's coming up in a couple of weeks you know you wouldn't want to run that infrastructure for that event",
    "start": "261299",
    "end": "267190"
  },
  {
    "text": "for 24/7 for entire year but in the case of things like server lists the kind of stuff where you can have very bursty",
    "start": "267190",
    "end": "273040"
  },
  {
    "text": "quick workloads that get dealt with greater flexibility faster time-to-market etc so really what we're",
    "start": "273040",
    "end": "278890"
  },
  {
    "text": "going to see today is just kind of the ease of use of what it is that we're going to what's possible with these",
    "start": "278890",
    "end": "284860"
  },
  {
    "text": "products now this first hour here our focus is gonna be around a product called AWS lambda",
    "start": "284860",
    "end": "289960"
  },
  {
    "text": "aw slam des is a compute service it was first announced a little over four years ago and then became generally available",
    "start": "289960",
    "end": "296460"
  },
  {
    "text": "it'll be four years in April so a product that's been around for a couple of years and now lambda sits at the",
    "start": "296460",
    "end": "303670"
  },
  {
    "text": "intersection of a couple of different concepts and ideas first here in the industry the first is that what we've",
    "start": "303670",
    "end": "309610"
  },
  {
    "text": "seen is as micro-services as an architectural paradigm have grown in popularity and say the last decade or so",
    "start": "309610",
    "end": "315690"
  },
  {
    "text": "that has led to this concept of event-driven compute essentially thinking of the individual actions and",
    "start": "315690",
    "end": "321430"
  },
  {
    "text": "flows and bits of ways that your develop that your customers interface with your product as individual kind of workflows",
    "start": "321430",
    "end": "327910"
  },
  {
    "text": "within the greater capabilities of what it is that your products do and so we",
    "start": "327910",
    "end": "333100"
  },
  {
    "text": "could take all of the various capabilities all the ways the interface and break it down these individual events that event model aligns with",
    "start": "333100",
    "end": "339580"
  },
  {
    "text": "being able to think of your application code directly aligning to them and so let's kind of let this concept of",
    "start": "339580",
    "end": "344710"
  },
  {
    "text": "functions as a service functions that align to the events that make up the greater whole of your application and",
    "start": "344710",
    "end": "349990"
  },
  {
    "text": "then at the center of this what we have is a service functions of the service offering which is lambda and so lambda",
    "start": "349990",
    "end": "356860"
  },
  {
    "text": "meets the for kind of crea criteria that I talked about before you don't run any servers or infrastructure yourself",
    "start": "356860",
    "end": "362320"
  },
  {
    "text": "you're not doing any operating system patching or installing software it scales for use you pay for the value",
    "start": "362320",
    "end": "367960"
  },
  {
    "text": "that you get out of it and it's gonna be highly available by default and so there",
    "start": "367960",
    "end": "373510"
  },
  {
    "text": "are the the fast service it's the fast industry I should say itself has grown a",
    "start": "373510",
    "end": "378520"
  },
  {
    "text": "last number of years there's a number of options out there in the industry there's open source options there's options from other cloud providers but",
    "start": "378520",
    "end": "385270"
  },
  {
    "text": "as we'll see here with lambda today there's quite a lot of capabilities that it has and now we talked more about what",
    "start": "385270",
    "end": "391090"
  },
  {
    "start": "391000",
    "end": "391000"
  },
  {
    "text": "lambda is I think sometimes people lose a little bit of all of the complexity that lambda hides from you it really",
    "start": "391090",
    "end": "397120"
  },
  {
    "text": "takes a lot of the layers under the stack and makes it so that you don't have to deal with them and so lambda isn't just",
    "start": "397120",
    "end": "402999"
  },
  {
    "text": "a comparison to say a virtual machine or a server that might be sitting somewhere it's a computer vez that provides things",
    "start": "402999",
    "end": "409569"
  },
  {
    "text": "like load balancing and auto scaling and failure handling an operating system management security management",
    "start": "409569",
    "end": "415139"
  },
  {
    "text": "utilization management lots of things that lambda is doing behind the scenes that if you were to build and do this",
    "start": "415139",
    "end": "420699"
  },
  {
    "text": "yourself would be quite a lot of complexity quite a lot of work now I mentioned lambda was first",
    "start": "420699",
    "end": "426249"
  },
  {
    "start": "426000",
    "end": "426000"
  },
  {
    "text": "announced a little over four years ago it was actually at reinvent 2014 so I use a conference back then and it's a",
    "start": "426249",
    "end": "432699"
  },
  {
    "text": "pretty mature product in terms of how we think of things here at AWS so again it's been out for just about four years",
    "start": "432699",
    "end": "438699"
  },
  {
    "text": "and in those four years we've seen a lot of things go into lambda this is",
    "start": "438699",
    "end": "443770"
  },
  {
    "text": "something that I put together back at the end October / about early November and basically what it spells out is we had a",
    "start": "443770",
    "end": "450159"
  },
  {
    "text": "new feature capability launched into lambda every month for the last four",
    "start": "450159",
    "end": "455559"
  },
  {
    "text": "years so quite a lot of capabilities today lambda serves trillions of events",
    "start": "455559",
    "end": "461409"
  },
  {
    "text": "or it has trillions of events that process through the system per month so it's at a pretty massive scale as well",
    "start": "461409",
    "end": "467080"
  },
  {
    "text": "and that's again driven by customer workloads on the platform now lambda",
    "start": "467080",
    "end": "472719"
  },
  {
    "text": "doesn't just sit inside of a vacuum when we talk about lambda and the context what it provides it sits inside of what",
    "start": "472719",
    "end": "478149"
  },
  {
    "text": "is considered a service application and now a service application typically has two or three components to it it has the",
    "start": "478149",
    "end": "485169"
  },
  {
    "text": "event source so what it is it's going to cause a triggering of that lambda function it has then the lambda function",
    "start": "485169",
    "end": "490869"
  },
  {
    "text": "and it has potentially whatever it is that your lambda function needs to connect to a database a data store",
    "start": "490869",
    "end": "496180"
  },
  {
    "text": "another internet-facing service technically anything that could run open on a network port you could connect to",
    "start": "496180",
    "end": "502360"
  },
  {
    "text": "from lambda and so on the event source side we've got a little over 40 different services today that directly",
    "start": "502360",
    "end": "508419"
  },
  {
    "text": "interact with lambda plus our own API which we'll talk about here in a little bit that you could just write code",
    "start": "508419",
    "end": "514539"
  },
  {
    "text": "against yourself and so this is things like requests to API gateways responding to an object being put in an s3 bucket",
    "start": "514539",
    "end": "520888"
  },
  {
    "text": "doing things like pulling messages out of a queue a number of different ways",
    "start": "520889",
    "end": "525910"
  },
  {
    "text": "that you can interface with lambda and we'll talk and look at some of these a little more closely here today in terms",
    "start": "525910",
    "end": "531850"
  },
  {
    "text": "of your function so the initial model that we had here at lambda is that we provide basically curated execution environments",
    "start": "531850",
    "end": "540010"
  },
  {
    "text": "that have various different programming languages built in for you and so we first launched with no Jessa Python and",
    "start": "540010",
    "end": "547089"
  },
  {
    "text": "add a Java and c-sharp and go and then just here back at reinvent added Ruby and then something called the runtime",
    "start": "547089",
    "end": "552760"
  },
  {
    "text": "api and i'm going to talk about that briefly here but then later today we're gonna explore the runtime api in in much",
    "start": "552760",
    "end": "558190"
  },
  {
    "text": "greater depth and essentially the runtime api allows you to do is at this point now bring any language that you",
    "start": "558190",
    "end": "563500"
  },
  {
    "text": "want to to lambda so you're no longer restricted by just the languages that we were providing to you and then again in",
    "start": "563500",
    "end": "570370"
  },
  {
    "text": "terms of what you talk to from your lambda function this is entirely up to you whatever it is that your code needs",
    "start": "570370",
    "end": "575680"
  },
  {
    "text": "to interface with you can interface with it there's no restrictions or blockers from our side you write your code it",
    "start": "575680",
    "end": "580990"
  },
  {
    "text": "contains your business logic it does what it has to do so let's actually hold here let's you know this is kind of",
    "start": "580990",
    "end": "587200"
  },
  {
    "text": "abstract let's actually dive in and see what this looks like and and see what we can do here so I'm gonna hop out of",
    "start": "587200",
    "end": "594420"
  },
  {
    "text": "presentation mode here and go to the AWS console make this a little bit bigger",
    "start": "594420",
    "end": "599500"
  },
  {
    "text": "for everybody as for those you who have maybe never seen this before this is the AWS console we've got here",
    "start": "599500",
    "end": "605709"
  },
  {
    "text": "you know 140 plus services basically there's quite a long list of things that",
    "start": "605709",
    "end": "610779"
  },
  {
    "text": "you could go and and explore and play with we're gonna start here with lambda so I'm gonna go into the lambda console",
    "start": "610779",
    "end": "617500"
  },
  {
    "text": "and I am going to create a new function as you can see I've had a number of other functions here so let's call this",
    "start": "617500",
    "end": "623980"
  },
  {
    "text": "function hello loft SF I'm gonna make this a",
    "start": "623980",
    "end": "629140"
  },
  {
    "text": "Python function and it needs to create a role this is basically permissioning",
    "start": "629140",
    "end": "635260"
  },
  {
    "text": "that this function will use and we'll talk a little bit more about this here in a bit and now i'm just gonna go ahead and say create oops yeah name this",
    "start": "635260",
    "end": "645150"
  },
  {
    "text": "takes a moment or two here for it to go and create some sample code for me okay",
    "start": "650209",
    "end": "658980"
  },
  {
    "text": "cool so now I am looking at the configuration of this lambda function that I have it right now has just the",
    "start": "658980",
    "end": "667350"
  },
  {
    "text": "raw function itself I can scroll down here and I can view the code for this function it's very very basic we see",
    "start": "667350",
    "end": "673800"
  },
  {
    "text": "there's just about eight lines plus some white space and what is going to happen",
    "start": "673800",
    "end": "679230"
  },
  {
    "text": "in here is I'm going to execute this function called lambda handler and then it's just going to return some some",
    "start": "679230",
    "end": "685980"
  },
  {
    "text": "basic text so it's gonna say hello from lambda let's go ahead and change this to hello from the SF loft and now we could",
    "start": "685980",
    "end": "694560"
  },
  {
    "text": "save this and now we can go and execute this so inside the console here I can",
    "start": "694560",
    "end": "700079"
  },
  {
    "text": "click test I can create an event and I'm just going to create a blank event because I don't need to do anything with",
    "start": "700079",
    "end": "705660"
  },
  {
    "text": "this say create and say tests cool and",
    "start": "705660",
    "end": "717120"
  },
  {
    "text": "it tells me here the little green box is good if it was bad it would be a red box in this case it says that it spit out",
    "start": "717120",
    "end": "723209"
  },
  {
    "text": "this this JSON structure which says hello from SF loft there's a status code",
    "start": "723209",
    "end": "728670"
  },
  {
    "text": "for it I could see that this took point two four milliseconds that I use nineteen megabytes of memory for this",
    "start": "728670",
    "end": "735060"
  },
  {
    "text": "and I see a bunch of information that looks like what would be log lines from lambda now what happened behind the",
    "start": "735060",
    "end": "741630"
  },
  {
    "text": "scenes here right so I have this code it was saved I have a configured lambda function that represents this code when",
    "start": "741630",
    "end": "747690"
  },
  {
    "text": "I clicked tests what happened was behind the scenes the lambda service went and said okay we have an event it's destined",
    "start": "747690",
    "end": "754860"
  },
  {
    "text": "for this function that belongs to Chris's account we're going to find a compute resource that's available we're",
    "start": "754860",
    "end": "760949"
  },
  {
    "text": "gonna pull down Chris's code on that we're going to start up the execution environment we're gonna pull in the event and then execute at all and so",
    "start": "760949",
    "end": "768540"
  },
  {
    "text": "this was a very very basic example of all that happening but again behind the scenes all of this just happened and it",
    "start": "768540",
    "end": "773850"
  },
  {
    "text": "just worked now I can come here and I can add an event source so let me go ahead and add an EP gateway",
    "start": "773850",
    "end": "780870"
  },
  {
    "text": "I've got to come down and configure it and so we're gonna attach this to I happen to have an existing end point for",
    "start": "780870",
    "end": "786750"
  },
  {
    "text": "this and we'll just use what's called the deployment stage and for security",
    "start": "786750",
    "end": "792839"
  },
  {
    "text": "I'm just gonna say it's totally open no that's probably not what you'd want to do in a real-world scenario so I can go",
    "start": "792839",
    "end": "799589"
  },
  {
    "text": "here and save this and what it tells me down below here now is I have an API",
    "start": "799589",
    "end": "805589"
  },
  {
    "text": "endpoint and I can go and open that up in a new tab oops",
    "start": "805589",
    "end": "812330"
  },
  {
    "text": "there we go miss and slash cool so now I see again the same text that I saw inside of the lambda a console and so we",
    "start": "820620",
    "end": "830040"
  },
  {
    "text": "can go ahead here let's let's test the demo gods real quick for those of you who are following along at home as it",
    "start": "830040",
    "end": "836490"
  },
  {
    "text": "were on twitch you can also go ahead and do this let me copy this let me open up",
    "start": "836490",
    "end": "842510"
  },
  {
    "text": "so you know let's do word sorry one second to open up a browser come out a",
    "start": "842510",
    "end": "855360"
  },
  {
    "text": "full screen here link document sorry one second here",
    "start": "855360",
    "end": "861860"
  },
  {
    "text": "okay so if you have a browser in front yeah on a phone or anywhere else go ahead and hit this URL hit it with with",
    "start": "870280",
    "end": "877690"
  },
  {
    "text": "all of your might and hopefully for those of you who are following it at home on the stream you should go ahead",
    "start": "877690",
    "end": "883270"
  },
  {
    "text": "and be able to see this as well I'll give everyone a moment or two to do this",
    "start": "883270",
    "end": "891180"
  },
  {
    "text": "apologies for the obscure string of characters and that Billy URL we get",
    "start": "895260",
    "end": "901120"
  },
  {
    "text": "it'll get a thumbs-up from somebody who's been able to hit it and it's loading for them cool all right so a whole bunch in here have been able",
    "start": "901120",
    "end": "906970"
  },
  {
    "text": "to hit it hoping a whole bunch of you here on Twitch got to hit this again you've seen my amazing web application",
    "start": "906970",
    "end": "912250"
  },
  {
    "text": "that simply says hello from the SF loft now if I come back here to the lambda console and I can go over to a",
    "start": "912250",
    "end": "919780"
  },
  {
    "text": "monitoring tab that we have here and I can go and say I want to see things from",
    "start": "919780",
    "end": "925870"
  },
  {
    "text": "the last hour and it's still pulling in some of this data here for us in",
    "start": "925870",
    "end": "931470"
  },
  {
    "text": "near-real-time but what I'm seeing here is that a whole bunch of you have gone and you know",
    "start": "931470",
    "end": "937089"
  },
  {
    "text": "loaded this application and so I fifty",
    "start": "937089",
    "end": "942730"
  },
  {
    "text": "or so it says here right now I know it takes a little while for the metrics to catch up either way right what have we",
    "start": "942730",
    "end": "950380"
  },
  {
    "text": "done taking some code put it into a function created on the API gateway and",
    "start": "950380",
    "end": "955960"
  },
  {
    "text": "put it all out in front of you in just a couple minutes didn't set up any servers didn't set up any operating systems then",
    "start": "955960",
    "end": "961960"
  },
  {
    "text": "it set up any load balancing and configure any networking didn't do anything else except just have some code",
    "start": "961960",
    "end": "967180"
  },
  {
    "text": "that got executed by about as big a scale as we wanted to throw at it right now and again this is kind of the idea here",
    "start": "967180",
    "end": "974589"
  },
  {
    "text": "behind what we're looking for with things like lambda now this was an incredibly basic example we didn't talk",
    "start": "974589",
    "end": "980260"
  },
  {
    "text": "to any databases we're not really doing any sort of calculations or anything exciting but again very very low amount",
    "start": "980260",
    "end": "987370"
  },
  {
    "text": "of work to get this up and running so we're at a hundred and sixty nine per this time period so awesome let me go",
    "start": "987370",
    "end": "997839"
  },
  {
    "text": "back to slides here actually what I'm first going to do",
    "start": "997839",
    "end": "1003060"
  },
  {
    "text": "a second here as I'm actually just going to delete this function okay cool so",
    "start": "1003060",
    "end": "1014250"
  },
  {
    "text": "it's a little deeper into again lambda and its capabilities and what you can do with it so we saw a really brief example",
    "start": "1014250",
    "end": "1022620"
  },
  {
    "text": "of all the lambda function here it's actually the same code that you see here in the green box on this slide and again",
    "start": "1022620",
    "end": "1029880"
  },
  {
    "start": "1025000",
    "end": "1025000"
  },
  {
    "text": "this code in this green box represents the most basic basic basic basic simple lambda function that you could imagine",
    "start": "1029880",
    "end": "1035900"
  },
  {
    "text": "now in a lambda function you must have something that's called the handler the handler is essentially the insertion",
    "start": "1035900",
    "end": "1042720"
  },
  {
    "text": "point for execution of your function from the lambda platform and so I that",
    "start": "1042720",
    "end": "1049320"
  },
  {
    "text": "is where we're gonna pass in what's called an event object the context object talked about here in a second and generally this is where your business",
    "start": "1049320",
    "end": "1055650"
  },
  {
    "text": "logic is is linked out of you could call sub functions or you know other code that exists inside of your deployed for",
    "start": "1055650",
    "end": "1061950"
  },
  {
    "text": "application artifacts but pretty straightforward you have to have some sort of handler that you the service",
    "start": "1061950",
    "end": "1068070"
  },
  {
    "text": "then invokes now the event object you saw me really quickly create just a blank JSON structure I didn't need to",
    "start": "1068070",
    "end": "1073350"
  },
  {
    "text": "pass anything in there but typically the event object contains all sorts of relevant bits of information from the",
    "start": "1073350",
    "end": "1079800"
  },
  {
    "text": "invocation source so if it was from an API gateway I would have things like the path parameters headers anything else",
    "start": "1079800",
    "end": "1086610"
  },
  {
    "text": "about the request body that was sent in I could find information about the client and the URI they were going to",
    "start": "1086610",
    "end": "1091830"
  },
  {
    "text": "and all that kind of stuff if it was from an s3 bucket so Amazon simple storage service I would see things such",
    "start": "1091830",
    "end": "1097590"
  },
  {
    "text": "as the bucket and then the object key and what type of an action it was that was taken on it and again depending on",
    "start": "1097590",
    "end": "1104460"
  },
  {
    "text": "the invocation service anything could be passed in for this the context object is",
    "start": "1104460",
    "end": "1109620"
  },
  {
    "text": "a little bit different this is actually something that is generated by the platform it represents information about",
    "start": "1109620",
    "end": "1114690"
  },
  {
    "text": "both the invocation and the underlying infrastructure that your function is running configured for and so you can",
    "start": "1114690",
    "end": "1121080"
  },
  {
    "text": "use to find out things like log information total timeout for your function and a little bits of information that you might want to",
    "start": "1121080",
    "end": "1126600"
  },
  {
    "text": "interface with from inside of your code but again really kind of basic thing that you could do now I mentioned",
    "start": "1126600",
    "end": "1133410"
  },
  {
    "text": "previously that we have a couple languages that are managed by the lamda service in the platform and we provide updates to that periodically",
    "start": "1133410",
    "end": "1141330"
  },
  {
    "start": "1134000",
    "end": "1134000"
  },
  {
    "text": "in new versions and so forth but we also had some announcements a couple of weeks ago at reinvent for business expanding",
    "start": "1141330",
    "end": "1149039"
  },
  {
    "text": "this so to announcements which again we're going to spend almost a full hour on here later today the lambda runtime",
    "start": "1149039",
    "end": "1154200"
  },
  {
    "text": "API and then layers so the runtime api already mentioned allows you to bring pretty much any language that can run",
    "start": "1154200",
    "end": "1160140"
  },
  {
    "text": "inside of linux to lambda so lambda runs on linux behind the scenes and so we've",
    "start": "1160140",
    "end": "1165419"
  },
  {
    "text": "seen customers bring things like c++ and rust and PHP and cobol and c c++ all",
    "start": "1165419",
    "end": "1175559"
  },
  {
    "text": "sorts of things to lambda and so you can use the runtime api and it's really simple and we will dive a little bit",
    "start": "1175559",
    "end": "1180899"
  },
  {
    "text": "deeper into that here today layers is basically a little different well layers allows you to do is create a code",
    "start": "1180899",
    "end": "1187830"
  },
  {
    "text": "artifact for reuse and sharing of things like application dependencies libraries",
    "start": "1187830",
    "end": "1194159"
  },
  {
    "text": "that you might want to share across an organization other snippets of code even things like configuration files things",
    "start": "1194159",
    "end": "1200490"
  },
  {
    "text": "like SSL Certificates there's all sorts of stuff you could put inside of a layer and share a cross and again we'll talk",
    "start": "1200490",
    "end": "1206010"
  },
  {
    "text": "about that a little bit more soon but again these were two really big updates for lambda and really really awesome",
    "start": "1206010",
    "end": "1212970"
  },
  {
    "text": "capabilities which again will will go really deep into later now in terms of pricing for lambda you saw something",
    "start": "1212970",
    "end": "1219210"
  },
  {
    "start": "1217000",
    "end": "1217000"
  },
  {
    "text": "when I went through the console that talked about how many milliseconds it took for my function to execute you",
    "start": "1219210",
    "end": "1224309"
  },
  {
    "text": "might have also noticed the build duration for my function so one of the I think really cool things about lambda is",
    "start": "1224309",
    "end": "1230399"
  },
  {
    "text": "that it builds in hundreds of milliseconds of increment so really really fine-grained down to you know",
    "start": "1230399",
    "end": "1237450"
  },
  {
    "text": "what it is that your function is doing and executing versus if you had say an instance or a container that you're",
    "start": "1237450",
    "end": "1242909"
  },
  {
    "text": "billing for longer periods when we first launched lambda ec2 instances we're still build by the hour now they are",
    "start": "1242909",
    "end": "1250169"
  },
  {
    "text": "build down to I believe the second it is so it's a little bit different but hundreds of milliseconds still that much",
    "start": "1250169",
    "end": "1256710"
  },
  {
    "text": "more fine grained for what you're doing the second kind of factor to how lambda is priced is based on the memory consumption I'm sorry the memory that",
    "start": "1256710",
    "end": "1263580"
  },
  {
    "text": "you've configured it for so inside of lambda today we support anywhere from 120 megabytes up to 3 gigabytes",
    "start": "1263580",
    "end": "1270100"
  },
  {
    "text": "that can be available to your function and now this is actually a really important key part of how you think",
    "start": "1270100",
    "end": "1275680"
  },
  {
    "text": "about application performance and lambda because what comes with the cranking up",
    "start": "1275680",
    "end": "1282370"
  },
  {
    "text": "of the memory for the function is the amount of CPU and network throughput that is available to your function and",
    "start": "1282370",
    "end": "1288970"
  },
  {
    "start": "1285000",
    "end": "1285000"
  },
  {
    "text": "so as you go from 128 megabytes to 256 megabytes to 512 to a gig and so forth",
    "start": "1288970",
    "end": "1295750"
  },
  {
    "text": "it will proportionally linearly scale again the amount of CPU that you have available to your function and so quite",
    "start": "1295750",
    "end": "1302170"
  },
  {
    "text": "often what we find is that people maybe misunderstand that it can be valuable to",
    "start": "1302170",
    "end": "1307270"
  },
  {
    "text": "crank up the amount of memory for your function to get CPU so take a little quick example of that so let's say we",
    "start": "1307270",
    "end": "1314950"
  },
  {
    "start": "1313000",
    "end": "1313000"
  },
  {
    "text": "had a true CPU based workload so in this case we're actually going to just do some some pretty hard math we're going",
    "start": "1314950",
    "end": "1321070"
  },
  {
    "text": "to calculate thousand times all prime numbers that are less than oh this is here a million and so we're gonna do all",
    "start": "1321070",
    "end": "1328330"
  },
  {
    "text": "that in a single function execution and then we're gonna see here that we have configured that against 120 megabytes",
    "start": "1328330",
    "end": "1333600"
  },
  {
    "text": "256 512 and then 1024 so pretty much linear stepping up through the memory",
    "start": "1333600",
    "end": "1339610"
  },
  {
    "text": "configuration well we see then is the amount of time that it took for that to run and then we see the cost that it",
    "start": "1339610",
    "end": "1346330"
  },
  {
    "text": "would take for each of those runs to happen and so a pretty straightforward color cord coding here red is the the",
    "start": "1346330",
    "end": "1353050"
  },
  {
    "text": "worst and green is the best and so we can see that with less memory it took",
    "start": "1353050",
    "end": "1358600"
  },
  {
    "text": "longer with the most memory it was the fastest we can also see that with the least amount of memory it was the",
    "start": "1358600",
    "end": "1364930"
  },
  {
    "text": "cheapest but if we note here what the actual difference is then for the cost",
    "start": "1364930",
    "end": "1370270"
  },
  {
    "text": "for 1024 what actually works out to is that the difference between 128 and 1024",
    "start": "1370270",
    "end": "1376570"
  },
  {
    "text": "is that we shave off over 10 seconds of execution and it only costs us 0.0001 of",
    "start": "1376570",
    "end": "1384400"
  },
  {
    "text": "$1 so now you know depending on your what you're doing depending on what the",
    "start": "1384400",
    "end": "1389470"
  },
  {
    "text": "the need is of your application you have to decide if you know you want to make that trade-off of 10 seconds first point",
    "start": "1389470",
    "end": "1396400"
  },
  {
    "text": "a1 of $1 and again this is for very CPU based workloads now I think a lot of",
    "start": "1396400",
    "end": "1401440"
  },
  {
    "text": "people sometimes misunderstand what represent cpu-based workload today one thing",
    "start": "1401440",
    "end": "1406659"
  },
  {
    "text": "that's really interesting is if you talked to a lot of other aap is whether they'd be a SS API is their external API",
    "start": "1406659",
    "end": "1412690"
  },
  {
    "text": "is nowadays SSL communication is actually a lot more compute intensive than it used to be a number of years ago",
    "start": "1412690",
    "end": "1418929"
  },
  {
    "text": "and this is because we all use higher bitrate SSL Certificates and so the computational work and handling that",
    "start": "1418929",
    "end": "1424900"
  },
  {
    "text": "equip ssin is actually logarithmically higher than it used to be for lower bit rates so these are things that you can",
    "start": "1424900",
    "end": "1430570"
  },
  {
    "text": "explore and what's great is that it's so easy to turn this knob up test your functions see how it behaves and",
    "start": "1430570",
    "end": "1436620"
  },
  {
    "text": "understand this difference for yourself but it's pretty much the number one basic first thing we tell all of our",
    "start": "1436620",
    "end": "1442659"
  },
  {
    "text": "customers who say I feel like my lambdas not running as fast as it could is how much memory have you configured it for",
    "start": "1442659",
    "end": "1449789"
  },
  {
    "text": "so talk a little bit more about some of the other aspects here of lambda so across lambda we have a number of",
    "start": "1449880",
    "end": "1455710"
  },
  {
    "start": "1452000",
    "end": "1452000"
  },
  {
    "text": "different execution models now you can think of these as just the the different ways that we can invoke a lambda",
    "start": "1455710",
    "end": "1461049"
  },
  {
    "text": "function and how it's going to respond the first is a synchronous or push based model and we saw this in the example",
    "start": "1461049",
    "end": "1467110"
  },
  {
    "text": "before where we had an API gateway configured to talk to a lambda function we made a request that API and it almost",
    "start": "1467110",
    "end": "1473679"
  },
  {
    "text": "immediately responded back with the results of what was executed inside of our lambda function and so that is a",
    "start": "1473679",
    "end": "1479799"
  },
  {
    "text": "synchronous model we're expecting lambda to give something back upstream to the invocation source now let's take an",
    "start": "1479799",
    "end": "1485919"
  },
  {
    "text": "example of where maybe we take a object let's say it's an image file and we upload that to an s3 bucket or we put a",
    "start": "1485919",
    "end": "1492220"
  },
  {
    "text": "message into an Amazon SNS or simple notification service topic it's gonna go",
    "start": "1492220",
    "end": "1497320"
  },
  {
    "text": "into that service that service then is going to essentially generate the invoke down to lambda which will take that",
    "start": "1497320",
    "end": "1502929"
  },
  {
    "text": "message or take that object information and act upon it in this situation there's no real path back to the",
    "start": "1502929",
    "end": "1508929"
  },
  {
    "text": "original client that put that message into the topic or put that object into a bucket and so what's going to happen",
    "start": "1508929",
    "end": "1514900"
  },
  {
    "text": "here as lambda is going to do the work that it needs to do it's going to complete that or potentially fail or what might happen but again there's no",
    "start": "1514900",
    "end": "1521950"
  },
  {
    "text": "reaction back to the client and so maybe you're building a whole model looking for a change or looking for an update or",
    "start": "1521950",
    "end": "1527710"
  },
  {
    "text": "something different but in this case that is an asynchronous event all right so we're not expecting something to come back the lastly we have pull based and",
    "start": "1527710",
    "end": "1535149"
  },
  {
    "text": "so this exists today for a couple our invocation services we see here Amazon DynamoDB listed and Amazon",
    "start": "1535149",
    "end": "1542150"
  },
  {
    "text": "Kinesis where we have streams of data that can be made available from those services and then on the lambda side we",
    "start": "1542150",
    "end": "1548120"
  },
  {
    "text": "run a polar that is constantly looking for messages in those streams and then it will pull those messages our those",
    "start": "1548120",
    "end": "1554180"
  },
  {
    "text": "changes out and pass them into a lambda invocation for you we also do the same thing for Amazon sqs simple queue",
    "start": "1554180",
    "end": "1560660"
  },
  {
    "text": "service that it pulls messages in batches out of the queue and puts them into lambda functions so depending on",
    "start": "1560660",
    "end": "1567890"
  },
  {
    "text": "your need depending on your architecture depending on what you're building you know communication or execution off of these are basically there's three",
    "start": "1567890",
    "end": "1574490"
  },
  {
    "text": "different ways that you could think about how you interface with lambda now it gets much more nuanced with this and we have an entire presentation or so on",
    "start": "1574490",
    "end": "1582290"
  },
  {
    "text": "how retries and failure handling and how scale plays into all of these those are",
    "start": "1582290",
    "end": "1587570"
  },
  {
    "text": "all different factors but just again understand that there are different ways of invoking lambda across the different",
    "start": "1587570",
    "end": "1593780"
  },
  {
    "text": "services that we have now behind all of these is the lambda api here at AWS from",
    "start": "1593780",
    "end": "1602900"
  },
  {
    "text": "pretty much day one we have been an api driven organization that builds and provides api's to our customers if you",
    "start": "1602900",
    "end": "1609050"
  },
  {
    "text": "use the console or the CLI or any of the SDKs or most of the management tools pretty much all the manager tools that",
    "start": "1609050",
    "end": "1615200"
  },
  {
    "text": "exist in the industry to interface with AWS at some point you're talking to an AWS api behind the scenes and so lambda",
    "start": "1615200",
    "end": "1621590"
  },
  {
    "text": "is no different so if we go back to the various execution models and the services that interface with lambda",
    "start": "1621590",
    "end": "1626840"
  },
  {
    "text": "today they are talking to the lambda api on your behalf so the polar invokes the",
    "start": "1626840",
    "end": "1632750"
  },
  {
    "text": "lambda api api gateway invokes the lambda api sq SNS and s3 invoked the",
    "start": "1632750",
    "end": "1638840"
  },
  {
    "text": "lambda api and so the lambda api exists built again built into our SDKs well",
    "start": "1638840",
    "end": "1644300"
  },
  {
    "start": "1641000",
    "end": "1641000"
  },
  {
    "text": "documented and out there and there are many times when you actually don't need to use another invocation source you can just have your own code execute a lambda",
    "start": "1644300",
    "end": "1651560"
  },
  {
    "text": "function directly and so in this case you maybe get a little bit more control maybe have to take on a little bit more",
    "start": "1651560",
    "end": "1656570"
  },
  {
    "text": "of the work involved but you don't have to use one of the services that we have in front of this so that there again the",
    "start": "1656570",
    "end": "1664640"
  },
  {
    "text": "lambda API now in talking about the API one thing that's really critical to",
    "start": "1664640",
    "end": "1670100"
  },
  {
    "text": "lambda is every aw service is security security is a credible focus for us here at AWS we",
    "start": "1670100",
    "end": "1677749"
  },
  {
    "text": "think is the most important thing that we spend our focus spend and focus our time on and so land is no different and",
    "start": "1677749",
    "end": "1683779"
  },
  {
    "text": "since day one of this product it's had a very unique security kind of model and aspect to it it's kind of two main",
    "start": "1683779",
    "end": "1689330"
  },
  {
    "text": "things that you have to think about there is what is it that my function can do and apologies here looks like some of",
    "start": "1689330",
    "end": "1695210"
  },
  {
    "text": "my the ordering on this slide it should be a little bit cleaner than this but",
    "start": "1695210",
    "end": "1700990"
  },
  {
    "text": "the bullets are a little out of line so there's what can my function do so my function code can it talk to an s3",
    "start": "1700990",
    "end": "1706759"
  },
  {
    "text": "bucket can talk to a dynamodb table I'm gonna call another AWS API on my behalf and then there's who can invoke my",
    "start": "1706759",
    "end": "1713779"
  },
  {
    "text": "function is it be an API gateway is a venous three bucket is it open to the",
    "start": "1713779",
    "end": "1718940"
  },
  {
    "text": "world and I'm gonna share out the information for it so that people could call it for some reason and so two",
    "start": "1718940",
    "end": "1724009"
  },
  {
    "text": "different angles are how you have to think about securing and locking down your function when we talk about some of the tooling that we have here in this",
    "start": "1724009",
    "end": "1730429"
  },
  {
    "text": "space in the next session that we'll cover here today we'll go a bit deeper into how we can simplify this for you",
    "start": "1730429",
    "end": "1735700"
  },
  {
    "text": "but again this is the stuff that is critical from a security perspective by default lambda is very locked down so by",
    "start": "1735700",
    "end": "1742429"
  },
  {
    "text": "default your function can't talk to other services by default no one can invoke your lambda function and so you",
    "start": "1742429",
    "end": "1748639"
  },
  {
    "text": "have to enable those things but you also want to be you know cautious and thinking about what you are enabling and",
    "start": "1748639",
    "end": "1753860"
  },
  {
    "text": "how you're configuring that and so it's a bit different than just having a port open on the internet that you protect",
    "start": "1753860",
    "end": "1759499"
  },
  {
    "text": "with a firewall it's again integrated into the API layer and how we think about things here at AWS",
    "start": "1759499",
    "end": "1765999"
  },
  {
    "text": "now across all the things that you can do with lambda it encompasses almost anything that you could do with compute",
    "start": "1765999",
    "end": "1772539"
  },
  {
    "start": "1767000",
    "end": "1767000"
  },
  {
    "text": "so backing web applications for example so we see a lot of companies today that are looking at say the new wave of",
    "start": "1772539",
    "end": "1780100"
  },
  {
    "text": "front-end technologies so things like react and view and angular and that whole ecosystem that exists in building",
    "start": "1780100",
    "end": "1786769"
  },
  {
    "text": "whether it be a true single page application or a more complex non single",
    "start": "1786769",
    "end": "1792320"
  },
  {
    "text": "page application but powering that web application with an API and with compute via lambda we also see true backends for",
    "start": "1792320",
    "end": "1800419"
  },
  {
    "text": "things - whether these be internal micro-services inside of a larger architecture or things that power mobile applications",
    "start": "1800419",
    "end": "1806630"
  },
  {
    "text": "or even things like IOT devices that is another place where lambda plays a role",
    "start": "1806630",
    "end": "1811640"
  },
  {
    "text": "and there's a lot of devices in the world where maybe things that roll",
    "start": "1811640",
    "end": "1817910"
  },
  {
    "text": "around your apartment or your home and clean it up and vacuum it some of those talk to lambda there are devices that",
    "start": "1817910",
    "end": "1823460"
  },
  {
    "text": "are lights or switches or heating units and things that will talk to lambda so there's a lot of places where lambda",
    "start": "1823460",
    "end": "1829309"
  },
  {
    "text": "shows up that you may not even realize it today data processing so this is one of the largest use cases to be see today",
    "start": "1829309",
    "end": "1835280"
  },
  {
    "text": "here in lambda and this is everything from say near real-time streaming analytics of data through batch",
    "start": "1835280",
    "end": "1840860"
  },
  {
    "text": "processing through ETL workloads and today we see this again for all sorts of",
    "start": "1840860",
    "end": "1846620"
  },
  {
    "text": "different use cases there are organizations like FINRA financial regulation agency that processes half a",
    "start": "1846620",
    "end": "1854059"
  },
  {
    "text": "trillion events per day in lambda things like stock trades and other events that happen in the market looking for",
    "start": "1854059",
    "end": "1860030"
  },
  {
    "text": "fraudulent aspects and things that happen there are companies processing tens of thousands of things like sensor",
    "start": "1860030",
    "end": "1868640"
  },
  {
    "text": "data from devices again IOT space there's also companies that are doing things like collecting beacon",
    "start": "1868640",
    "end": "1875120"
  },
  {
    "text": "information from ads or click tracking and websites and so that's kind of the data processing side chat BOTS so chat",
    "start": "1875120",
    "end": "1882920"
  },
  {
    "text": "BOTS we see showing up all over the place these days these are chat BOTS that could be both internally and externally facing one of my favorite",
    "start": "1882920",
    "end": "1889850"
  },
  {
    "text": "internal tools that Amazon recently got a chat bot I was pretty excited about it it is behind the scenes powered by",
    "start": "1889850",
    "end": "1895070"
  },
  {
    "text": "lambda and some other technologies that we have but the chat bot basically simplifies something that would have required me",
    "start": "1895070",
    "end": "1901309"
  },
  {
    "text": "clicking a bunch through an interface and so again we see chat bots that are helping externally for customer support",
    "start": "1901309",
    "end": "1906770"
  },
  {
    "text": "we see companies that build chat BOTS that face internally for things like this internal tool that we have at",
    "start": "1906770",
    "end": "1912590"
  },
  {
    "text": "Amazon that I use that has one it could be things like finance or HR or facilities related for example Alexa so",
    "start": "1912590",
    "end": "1920150"
  },
  {
    "text": "how many of you have an Alexa capable device at home quite a few of you okay pretty cool so when you ask our good",
    "start": "1920150",
    "end": "1925700"
  },
  {
    "text": "friend Alexa to do something that will invoke what's called a alexis skill and",
    "start": "1925700",
    "end": "1930800"
  },
  {
    "text": "then behind that Alexa skill you need some sort of compute typically to handle what's called the fulfillment of that skill action and so the Alexa team says",
    "start": "1930800",
    "end": "1938300"
  },
  {
    "text": "that Lane is the best platform for hosting Alexa skills and actually it's it's really",
    "start": "1938300",
    "end": "1943460"
  },
  {
    "text": "easy to get started and building it it's a lot of fun if you have any impression about children spouses or small animals",
    "start": "1943460",
    "end": "1950030"
  },
  {
    "text": "you can actually have a lot of fun messing with them and saying things like so I have a two and a half year old at",
    "start": "1950030",
    "end": "1955520"
  },
  {
    "text": "home and I could say you know Alexa is a time for Jack to go to bed and then Alexa could tell them it's time to go to bed and so he'll listen to the little",
    "start": "1955520",
    "end": "1961940"
  },
  {
    "text": "hockey puck discs on the TV stand won't listen to dad but a little couple lines",
    "start": "1961940",
    "end": "1967520"
  },
  {
    "text": "of code and you can simplify your life but either way Alexa a lot of fun building skills with lambda really easy",
    "start": "1967520",
    "end": "1973610"
  },
  {
    "text": "to do and so a good kind of fun hack weekend project the lastly I to",
    "start": "1973610",
    "end": "1979220"
  },
  {
    "text": "automation so IT automation is a place where a lot of our customers first dip their toes and we see this plugging into",
    "start": "1979220",
    "end": "1985970"
  },
  {
    "text": "things like the various development and management tools that we have here at AWS everything from doing API analysis",
    "start": "1985970",
    "end": "1994430"
  },
  {
    "text": "of like API calls to being things that react to cloud watch alarms to reacting",
    "start": "1994430",
    "end": "1999890"
  },
  {
    "text": "to events that happen inside of your infrastructure then we've seen third-party companies build things like",
    "start": "1999890",
    "end": "2005980"
  },
  {
    "text": "whole compliance frameworks that use lambda in an event-based model to respond to things that happen and so a",
    "start": "2005980",
    "end": "2012670"
  },
  {
    "text": "lot of things that can happen here but this is again a kind of the long tail of all the things that are possible with",
    "start": "2012670",
    "end": "2018190"
  },
  {
    "text": "lambda so that's lambda we're gonna move a little bit past lambda to talk about some more of the service space here now",
    "start": "2018190",
    "end": "2025210"
  },
  {
    "start": "2025000",
    "end": "2025000"
  },
  {
    "text": "we're gonna have spent a full Albert here today talking a little bit more about API gateway Amazon API gateway is",
    "start": "2025210",
    "end": "2030730"
  },
  {
    "text": "another core part of the service portfolio that we have here API gateway",
    "start": "2030730",
    "end": "2036790"
  },
  {
    "text": "it did not in for Amazon API gateway did not define the API space this is API",
    "start": "2036790",
    "end": "2042160"
  },
  {
    "text": "gateways have existed for a long time now but what makes the Amazon API gateway really unique is that again it",
    "start": "2042160",
    "end": "2047470"
  },
  {
    "text": "fits with inside of this box of what is server lists and has a number of really interesting capabilities that it can do",
    "start": "2047470",
    "end": "2053500"
  },
  {
    "text": "that are only really possible inside of a cloud environment being able to have example have things like DDoS protection",
    "start": "2053500",
    "end": "2059710"
  },
  {
    "text": "built in being able to do things like throttling and usage tiers at a very large scale but also not costing you",
    "start": "2059710",
    "end": "2067090"
  },
  {
    "text": "anything when you're not running it an RPP gateway which again we're going to talk about and",
    "start": "2067090",
    "end": "2072560"
  },
  {
    "text": "lot of depth here later has number of ways that it can be configured it can be configured to have what are called edge",
    "start": "2072560",
    "end": "2078590"
  },
  {
    "text": "endpoints which are funded by a CDN can have regional endpoints that only exist in an ad base region you have private",
    "start": "2078590",
    "end": "2084679"
  },
  {
    "text": "endpoints for things like internal micro services and then what back that API could be everything from lambda2",
    "start": "2084680",
    "end": "2090470"
  },
  {
    "text": "containers to traditionally compute to pretty much any HTTP facing service on",
    "start": "2090470",
    "end": "2095960"
  },
  {
    "text": "the Internet so really robust product and we're gonna spend a full hour exploring and talking about api gateway",
    "start": "2095960",
    "end": "2101360"
  },
  {
    "text": "today and then just sticking on api gateway here for another moment or two",
    "start": "2101360",
    "end": "2106370"
  },
  {
    "start": "2104000",
    "end": "2104000"
  },
  {
    "text": "we did just announce at reinvent WebSockets support for api gateway this is one of the most heavily requested",
    "start": "2106370",
    "end": "2112550"
  },
  {
    "text": "features since we announced the product a little over three and a half years ago WebSockets are an interesting technology",
    "start": "2112550",
    "end": "2118850"
  },
  {
    "text": "and how they're changing how people think about building near real-time dashboards and interactivity and",
    "start": "2118850",
    "end": "2124280"
  },
  {
    "text": "applications and so we see customers using this for all sorts of different means but this is a pretty tricky thing",
    "start": "2124280",
    "end": "2130400"
  },
  {
    "text": "to do with scale because typically what happens with WebSockets and you'll talk about this a little more later is you",
    "start": "2130400",
    "end": "2135620"
  },
  {
    "text": "have to maintain state information somewhere and typically you've done that on a computer which means that if you",
    "start": "2135620",
    "end": "2141110"
  },
  {
    "text": "have to maintain state doing that in something like lambda which is very much ephemeral you really can't do what's",
    "start": "2141110",
    "end": "2147650"
  },
  {
    "text": "interesting about this is that API gateway in this case manages the state for you and so you could use lambda to",
    "start": "2147650",
    "end": "2153080"
  },
  {
    "text": "back a WebSockets API and so you can get all the benefits basically if server lists and WebSockets which is again",
    "start": "2153080",
    "end": "2161060"
  },
  {
    "text": "something that didn't exist before six weeks ago and so something that we're pretty excited about what all of us",
    "start": "2161060",
    "end": "2167300"
  },
  {
    "start": "2167000",
    "end": "2167000"
  },
  {
    "text": "lends itself to is something that we're seeing really kind of changing the industry in a number of different ways",
    "start": "2167300",
    "end": "2172480"
  },
  {
    "text": "I've worked with large enterprise companies here at AWS for again over the last six years",
    "start": "2172480",
    "end": "2177650"
  },
  {
    "text": "and when we go and see large enterprises they will have hundreds of applications inside of their portfolio and many of",
    "start": "2177650",
    "end": "2184400"
  },
  {
    "text": "these are really basic effectively web applications now traditionally they've been things like you know Java",
    "start": "2184400",
    "end": "2190970"
  },
  {
    "text": "Enterprise applications that are traditional two or three tier apps where they've got a web tier in an app tier in",
    "start": "2190970",
    "end": "2196400"
  },
  {
    "text": "a database and they run on some number of servers and maybe they're largely again a nine-to-five kind of",
    "start": "2196400",
    "end": "2202310"
  },
  {
    "text": "organization or they have very light usage of certain applications but all that stuff will run on servers",
    "start": "2202310",
    "end": "2207770"
  },
  {
    "text": "somewhere taking up time taking it up operational overhead we've had a number of examples of companies move over to",
    "start": "2207770",
    "end": "2215750"
  },
  {
    "text": "this model of a service web application where they will have again the canoe age front-end technologies like react review",
    "start": "2215750",
    "end": "2223010"
  },
  {
    "text": "or angular JavaScript frameworks etc where you can host that information in something like s3 so as 3 cubic figured",
    "start": "2223010",
    "end": "2229400"
  },
  {
    "text": "as a web server could optionally put a CDN in front of that like cloud front and serve that traffic out for that if",
    "start": "2229400",
    "end": "2234950"
  },
  {
    "text": "it was something external and then have all of the business logic basically being served by API gateway and lambda",
    "start": "2234950",
    "end": "2241730"
  },
  {
    "text": "and so with the exception of wherever maybe your database might live all of the Restless is server lists when it's",
    "start": "2241730",
    "end": "2247550"
  },
  {
    "text": "not in use you're not paying for it when you need it it can near instantaneously respond to those requests and so we are",
    "start": "2247550",
    "end": "2254360"
  },
  {
    "text": "seeing enterprise organizations just shutting down tons of servers simplifying their costs greatly reducing",
    "start": "2254360",
    "end": "2261830"
  },
  {
    "text": "cost companies that are talking about 50 plus percent savings on terms of the these applications and so it's really",
    "start": "2261830",
    "end": "2268850"
  },
  {
    "text": "really transformative and I think we're gonna see a really huge shift over the next couple years of the maturity in",
    "start": "2268850",
    "end": "2274250"
  },
  {
    "text": "this space there's an awesome organization that's local here to San Francisco a net lafay that's kind of in",
    "start": "2274250",
    "end": "2280310"
  },
  {
    "text": "the lead of some of this space as well and a number of other companies but really cool exciting stuff that's going",
    "start": "2280310",
    "end": "2286490"
  },
  {
    "text": "on here beyond api's again there's a number of things you can do with this just to",
    "start": "2286490",
    "end": "2292040"
  },
  {
    "start": "2289000",
    "end": "2289000"
  },
  {
    "text": "quickly walk through some more examples so again I can have a model by where I put an object into an s3 bucket and now",
    "start": "2292040",
    "end": "2298880"
  },
  {
    "text": "this object could be a photo a video a log file it could be a document from my",
    "start": "2298880",
    "end": "2303980"
  },
  {
    "text": "Salesforce it could be a medical record it could be an x-ray image it could be a",
    "start": "2303980",
    "end": "2309590"
  },
  {
    "text": "blob of data that came out of a device that generates some sort of unique blob of data and it goes into the s3 bucket",
    "start": "2309590",
    "end": "2316910"
  },
  {
    "text": "and so s3 is meant for you know infinite internet scale storage you just throw data into it it's scales",
    "start": "2316910",
    "end": "2323840"
  },
  {
    "text": "you don't need to think about it and then s3 can go and invoke lambda and so you could take that data and you can",
    "start": "2323840",
    "end": "2329570"
  },
  {
    "text": "transform it transcode it resize it reshape it do ml and ìaî workloads on it",
    "start": "2329570",
    "end": "2336590"
  },
  {
    "text": "all sorts of things that you could do with this and so with again the tide lambda you're",
    "start": "2336590",
    "end": "2343070"
  },
  {
    "text": "not maintaining stateful computer versus behind the scenes with SNS so simple",
    "start": "2343070",
    "end": "2348470"
  },
  {
    "text": "notification service this is something that we see as kind of a bridge sometimes between microservices has a",
    "start": "2348470",
    "end": "2353840"
  },
  {
    "text": "number different capabilities that make it really useful for that and so messages can go into again what are called topics SNS again is meant for",
    "start": "2353840",
    "end": "2360920"
  },
  {
    "text": "massive massive scale and so like the you know event buses of old as it were the messages can go in and then invoke",
    "start": "2360920",
    "end": "2367760"
  },
  {
    "text": "lambda functions on your behalf sqs simple queue service same kind of thing you want to batch up some sort of",
    "start": "2367760",
    "end": "2373880"
  },
  {
    "text": "workload information pull out that those that workload from that queue over some",
    "start": "2373880",
    "end": "2379670"
  },
  {
    "text": "period of time and execute upon it this is also really popular in micro services context where you might have a lot of",
    "start": "2379670",
    "end": "2385460"
  },
  {
    "text": "fluctuation of scale up and scale down and that's something that sqs handles really really well really heavily used",
    "start": "2385460",
    "end": "2391550"
  },
  {
    "text": "internally at Amazon across the world for lots of different use cases Kinesis",
    "start": "2391550",
    "end": "2397340"
  },
  {
    "text": "which I talked a little bit about before so Kinesis shows up in everything from click tracking to IOT sensor information",
    "start": "2397340",
    "end": "2405020"
  },
  {
    "text": "to log data anyplace where you need to ingest a massive amount of content Kinesis can handle that and then we run",
    "start": "2405020",
    "end": "2412100"
  },
  {
    "text": "a polling service pulls that data out and you can act upon that data Lex this",
    "start": "2412100",
    "end": "2417230"
  },
  {
    "text": "is a technology that is a chatbot service it's also very core to Alexa",
    "start": "2417230",
    "end": "2422630"
  },
  {
    "text": "itself and so when you have your chat bot or you have your Alexa skill behind the scenes when you have to do what's",
    "start": "2422630",
    "end": "2427730"
  },
  {
    "text": "called fulfillment of that conversation or that action that you're taking with that BA or Alexa you can evoke a lambda",
    "start": "2427730",
    "end": "2433520"
  },
  {
    "text": "function and then lastly again I'm a I'm an old system in ops guy I've spent",
    "start": "2433520",
    "end": "2440180"
  },
  {
    "text": "years in data centers cutting my hands on on racks and the little nuts that you",
    "start": "2440180",
    "end": "2446450"
  },
  {
    "text": "have to put in the racks and losing those and stuff like that I've also run a lot of cron jobs in my life and so",
    "start": "2446450",
    "end": "2453350"
  },
  {
    "text": "cron jobs pretty basic but you have all sorts of things where cron jobs become critical and you think about how UHA",
    "start": "2453350",
    "end": "2459980"
  },
  {
    "text": "your cron jobs and how you make sure that they ran that they ran well and they did all these things one of my",
    "start": "2459980",
    "end": "2465020"
  },
  {
    "text": "favorite use cases for lambda is basically to replace cron and so we have a service called cloud watch events",
    "start": "2465020",
    "end": "2470690"
  },
  {
    "text": "which supports something called scheduled events and with that you can invoke a lambda function at a certain time you can do",
    "start": "2470690",
    "end": "2477650"
  },
  {
    "text": "fun things to this we have another service called run command surprisingly enough it allows you to run commands on",
    "start": "2477650",
    "end": "2483289"
  },
  {
    "text": "server based systems and so you can use cloud watch events lambda and run",
    "start": "2483289",
    "end": "2489349"
  },
  {
    "text": "command to execute effectively shell scripts and other things like that on your operating systems without having to",
    "start": "2489349",
    "end": "2495920"
  },
  {
    "text": "manage those servers and think about it that way so basic workload but in these kind of things which can save you time",
    "start": "2495920",
    "end": "2501650"
  },
  {
    "text": "and save you effort in and just pay for themselves over time well end today",
    "start": "2501650",
    "end": "2507499"
  },
  {
    "start": "2507000",
    "end": "2507000"
  },
  {
    "text": "talking about one of my favorite services in this space which is a service called AWS step functions and so",
    "start": "2507499",
    "end": "2514609"
  },
  {
    "text": "when we talk about lambda and we talk about this concept of event-driven computing and we talked about the decomposition of a traditional app into",
    "start": "2514609",
    "end": "2521930"
  },
  {
    "text": "both micro services but then this finer granularity that lambda offers up one of",
    "start": "2521930",
    "end": "2527119"
  },
  {
    "text": "the things that customers tend to do is build a lot of orchestration into their code you think about having one lambda",
    "start": "2527119",
    "end": "2532339"
  },
  {
    "text": "function call another lambda function call another lambda function and now this can lead to a lot of undesired consequences due to limits of lambda",
    "start": "2532339",
    "end": "2540819"
  },
  {
    "text": "purposeful limits that we have but also just things that you really don't want to do and so you know what step",
    "start": "2540819",
    "end": "2546319"
  },
  {
    "start": "2546000",
    "end": "2546000"
  },
  {
    "text": "functions do is it basically can handle workflow management for you it could allow you to do things like have decision tree is a parallelization and",
    "start": "2546319",
    "end": "2552769"
  },
  {
    "text": "retry and fail your handling and we're gonna go into a lot more depth here at the end of today talking about step",
    "start": "2552769",
    "end": "2558140"
  },
  {
    "text": "functions but it's a really cool core part of the service space for us here at AWS and and something that just a couple",
    "start": "2558140",
    "end": "2564859"
  },
  {
    "text": "weeks ago got a lot more capability now rounding out the platform here one thing",
    "start": "2564859",
    "end": "2571640"
  },
  {
    "start": "2569000",
    "end": "2569000"
  },
  {
    "text": "that's really important to a lot of our customers is that quite a lot of you have workloads that have to meet certain",
    "start": "2571640",
    "end": "2577309"
  },
  {
    "text": "compliance standards and regimes so you know if you're processing things like credit card transactions or monetary",
    "start": "2577309",
    "end": "2583700"
  },
  {
    "text": "transactions the PCI standard is very very important to you if you were dealing with healthcare records personal",
    "start": "2583700",
    "end": "2590509"
  },
  {
    "text": "identifiable information any of that kind of stuff HIPAA is a regulation that you'll spend a lot of time with if you",
    "start": "2590509",
    "end": "2597589"
  },
  {
    "text": "happen to be in the public sector and you have to deal with things like FedRAMP or various other government compliance and accreditation",
    "start": "2597589",
    "end": "2604430"
  },
  {
    "text": "aspects the great thing is now or the very thing for now for quite some time in the service space is that pretty",
    "start": "2604430",
    "end": "2610550"
  },
  {
    "text": "much across the portfolio we have those checkbox checked so if you need to build a healthcare application you can do it",
    "start": "2610550",
    "end": "2616339"
  },
  {
    "text": "completely service Li if you have to build credit card processing or financial record processing you can do",
    "start": "2616339",
    "end": "2622010"
  },
  {
    "text": "that service Li and so across the portfolio you have products that we have all the ones that we've talked about today and some ones that we won't get to",
    "start": "2622010",
    "end": "2628300"
  },
  {
    "text": "you can you know go and read about how we can help you solve the problems that you have with these products cool so",
    "start": "2628300",
    "end": "2637220"
  },
  {
    "text": "where do you start right we showed me hopping into the console before firing up a function setting up an API gateway",
    "start": "2637220",
    "end": "2642619"
  },
  {
    "text": "without security sharing it to the world via bitly link which was dangerous and dumb and not something that you want to",
    "start": "2642619",
    "end": "2648710"
  },
  {
    "text": "do in the real world when it's your credit card that is attached to the AWS account thankfully I'm an Amazon employee and as long as I don't build a",
    "start": "2648710",
    "end": "2657109"
  },
  {
    "text": "whole lot I I don't get in trouble but for you it might be a different story so typically you're not going to just go",
    "start": "2657109",
    "end": "2662810"
  },
  {
    "text": "into the console create your whole business application in a way you go typically what you're going to do is",
    "start": "2662810",
    "end": "2668300"
  },
  {
    "text": "either use the traditional tools that you might have so the IDE of your choice however you might write code whether it",
    "start": "2668300",
    "end": "2674869"
  },
  {
    "start": "2674000",
    "end": "2674000"
  },
  {
    "text": "be a more complex IDE whether it be something like notepad whether it be something like VI as long as it's not",
    "start": "2674869",
    "end": "2681770"
  },
  {
    "text": "Emacs you're okay okay a couple people got the joke : it's early in the morning",
    "start": "2681770",
    "end": "2687200"
  },
  {
    "text": "that's fine but we're I like to recommend people start is with a framework and so Munir we are kind of",
    "start": "2687200",
    "end": "2694310"
  },
  {
    "text": "four plus years in this space there are an awesome number of frameworks that are out there really create companies that",
    "start": "2694310",
    "end": "2699800"
  },
  {
    "text": "are building tools for various reasons we have some tools as well one of the most popular ones is the surplice",
    "start": "2699800",
    "end": "2706520"
  },
  {
    "text": "framework you'll see it here with kind of a red logo over on the far side of the slide here one of the first",
    "start": "2706520",
    "end": "2712369"
  },
  {
    "text": "frameworks one of the most robust ones that exists out there then there's a couple others that are tied more to",
    "start": "2712369",
    "end": "2718339"
  },
  {
    "text": "specific languages so claudia j/s as the name might align is javascript based tool it has specific capabilities",
    "start": "2718339",
    "end": "2725359"
  },
  {
    "text": "primarily around chat BOTS and api's for example Sparta is a framework for go alright and so it really kind of awesome",
    "start": "2725359",
    "end": "2732140"
  },
  {
    "text": "capabilities that they've done there to help simplify building applications and go on lambda apex architects all other",
    "start": "2732140",
    "end": "2738200"
  },
  {
    "text": "good tools Zappa is a Python framework and there are a number of other ones that are out there there's also a number",
    "start": "2738200",
    "end": "2744020"
  },
  {
    "text": "of companies that have built interactions with lambda so that you don't have to deal with any of these",
    "start": "2744020",
    "end": "2749420"
  },
  {
    "text": "so I mentioned net liffe I before which can help with hosting single page applications they have the ability to",
    "start": "2749420",
    "end": "2754940"
  },
  {
    "text": "plug into lambda companies like Twilio can plug into lambda for interfacing with things like chat bots and SMS BOTS",
    "start": "2754940",
    "end": "2761330"
  },
  {
    "text": "and stuff like that on our side we're actually next the next hour here gonna talk about EWS Sam this wonderful little",
    "start": "2761330",
    "end": "2767900"
  },
  {
    "text": "squirrel friend of ours my good buddy here Eric in the back of the room who is another developer",
    "start": "2767900",
    "end": "2773960"
  },
  {
    "text": "advocate for service here at AWS we have a whole pile of stickers for you all of our good friend Sam which again we'll",
    "start": "2773960",
    "end": "2779420"
  },
  {
    "text": "talk about here in a later so you'd leave with some some fun stickers hopefully here today and then we've got",
    "start": "2779420",
    "end": "2784670"
  },
  {
    "text": "a couple other tools and frameworks a tibia chalice actually came out of the CLI and SDKs tool team here at AWS they",
    "start": "2784670",
    "end": "2792350"
  },
  {
    "text": "started building these tool internally to do some stuff and then open sourced it's been really popular it's a Python framework and then eight of us amplify",
    "start": "2792350",
    "end": "2798980"
  },
  {
    "text": "which is a a mix between kind of a front end and back end management tool suite a whole bunch of different capabilities",
    "start": "2798980",
    "end": "2804620"
  },
  {
    "text": "can also help you manage functions so I encourage people start with one of these frameworks they're going to make your",
    "start": "2804620",
    "end": "2810290"
  },
  {
    "text": "life better we'll talk about Sam here a little bit so you can see that but you know instead of just opening up a",
    "start": "2810290",
    "end": "2815930"
  },
  {
    "text": "terminal window or an IDE somewhere and hacking away take a look at some of these tools the other thing that we have",
    "start": "2815930",
    "end": "2822470"
  },
  {
    "text": "here which we'll talk about a little bit here later today is the service application repository this is a place",
    "start": "2822470",
    "end": "2827870"
  },
  {
    "text": "where you as a developer can go and share publicly or privately inside of an organization entire service applications",
    "start": "2827870",
    "end": "2835250"
  },
  {
    "text": "it's basically the highest level of reuse and sharing of you know software",
    "start": "2835250",
    "end": "2840410"
  },
  {
    "text": "that you could think of it's it's almost akin to a open source free marketplace",
    "start": "2840410",
    "end": "2845570"
  },
  {
    "text": "of commercial software or free software open store that you could find that fits in the service world and so you come in",
    "start": "2845570",
    "end": "2851900"
  },
  {
    "text": "here and you can search and find all sorts of things from an educational standpoint it's an incredibly valuable tool you can come in and find again",
    "start": "2851900",
    "end": "2859550"
  },
  {
    "text": "almost anything that you want example wise and learn from it and so with that",
    "start": "2859550",
    "end": "2865970"
  },
  {
    "text": "I'm actually going to hop to a quick demo here for just that and then we will",
    "start": "2865970",
    "end": "2872000"
  },
  {
    "text": "break here for the end of the session",
    "start": "2872000",
    "end": "2875800"
  },
  {
    "text": "great so we go back to my console here and click on create function if I then",
    "start": "2879609",
    "end": "2885200"
  },
  {
    "text": "go over to the far right here and sorry because I zoomed in the text is a little squished on this box and we go to the",
    "start": "2885200",
    "end": "2890539"
  },
  {
    "text": "application at the service application repository we could see here that there",
    "start": "2890539",
    "end": "2895759"
  },
  {
    "text": "are you know 36 pages or so of applications it grows every day there's",
    "start": "2895759",
    "end": "2901099"
  },
  {
    "text": "all sorts of things I see Alexis skills I see micro service HTTP endpoint I see",
    "start": "2901099",
    "end": "2906890"
  },
  {
    "text": "an image resizer service and so some of these will vary from you know kind of toys up through really interesting kind",
    "start": "2906890",
    "end": "2913579"
  },
  {
    "text": "of full-fledged components of an infrastructure this is a fun one I found",
    "start": "2913579",
    "end": "2918829"
  },
  {
    "text": "just the other day and it is a magic",
    "start": "2918829",
    "end": "2924980"
  },
  {
    "text": "8-ball service application and so if you remember those those fun toys you know",
    "start": "2924980",
    "end": "2930170"
  },
  {
    "text": "magic 8-ball you shake it you ask you a question you know does Sally have a crush on me and it comes back and says",
    "start": "2930170",
    "end": "2935299"
  },
  {
    "text": "you know not in your dreams so you can now basically shake your laptop and do",
    "start": "2935299",
    "end": "2941420"
  },
  {
    "text": "that not quite but we'll see so what I have here is all sorts of information I could go and I can open up the github",
    "start": "2941420",
    "end": "2947180"
  },
  {
    "text": "repository for this I can see the what's called Sam template which again we'll talk about here in a little bit later",
    "start": "2947180",
    "end": "2952670"
  },
  {
    "text": "that was used to launch this I could find what permissions it needs what software license is attached to it if",
    "start": "2952670",
    "end": "2959390"
  },
  {
    "text": "there's a readme file that's been set up but I'm just gonna go ahead and deploy this so what's happening behind the",
    "start": "2959390",
    "end": "2967579"
  },
  {
    "text": "scenes is this application now is going to be deployed inside of my account with all of the resources that it needs oh ah",
    "start": "2967579",
    "end": "2974680"
  },
  {
    "text": "hold on one second this is because I already have one in this region and it",
    "start": "2974680",
    "end": "2980509"
  },
  {
    "text": "uses some of the same names on a second come to a different region try that",
    "start": "2980509",
    "end": "2987440"
  },
  {
    "text": "again",
    "start": "2987440",
    "end": "2989529"
  },
  {
    "text": "great so again what's happening here is the service application repository is",
    "start": "2999869",
    "end": "3005819"
  },
  {
    "text": "taking this application that was shared by this other developer and launching it inside of my account now typically you'd",
    "start": "3005819",
    "end": "3012390"
  },
  {
    "text": "want to go and explore this read about a little further take a peek at the code understand what you know is going on into this we put certain kind of safety",
    "start": "3012390",
    "end": "3019859"
  },
  {
    "text": "controls in place to you know help for a certain amount of you know potentially",
    "start": "3019859",
    "end": "3024869"
  },
  {
    "text": "bad actors but if you look here in the resources window we see that it's",
    "start": "3024869",
    "end": "3030390"
  },
  {
    "text": "creating a bunch of different AWS resources for me it's creating a function it's creating permissions and a",
    "start": "3030390",
    "end": "3035849"
  },
  {
    "text": "role to creating an API endpoint tool so",
    "start": "3035849",
    "end": "3043049"
  },
  {
    "text": "it looks like we're all done so let's go here click on this function so I'm in",
    "start": "3043049",
    "end": "3051089"
  },
  {
    "text": "the console for this here I see I have my function it's got a whole bunch of code it's just a Python pretty",
    "start": "3051089",
    "end": "3056579"
  },
  {
    "text": "straightforward actually it's only 70s or so lines of code and it could 20 or so lines are the the responses that my",
    "start": "3056579",
    "end": "3063209"
  },
  {
    "text": "magic 8-ball can give me and so let me go ahead real quick here and test this I",
    "start": "3063209",
    "end": "3069529"
  },
  {
    "text": "think if I create a blank event it should be okay okay test call so again",
    "start": "3069529",
    "end": "3082289"
  },
  {
    "text": "tested it in the console it's firing up behind the scenes so you can see here this spit out a response and it's a",
    "start": "3082289",
    "end": "3089940"
  },
  {
    "text": "bunch of HTML so that's cool so let's come down here now and actually find the API gateway endpoint so I click",
    "start": "3089940",
    "end": "3096119"
  },
  {
    "text": "on the trigger I get the endpoint and I can go and open",
    "start": "3096119",
    "end": "3101309"
  },
  {
    "text": "this up in a new tab okay all right so",
    "start": "3101309",
    "end": "3106650"
  },
  {
    "text": "let's see magic 8-ball is everyone in this room excited about today's presentation",
    "start": "3106650",
    "end": "3112309"
  },
  {
    "text": "most likely good great Thank You magic 8-ball that could have gone a really different way and so I'm pretty happy",
    "start": "3112309",
    "end": "3118589"
  },
  {
    "text": "about that so you know again we can come here and and poke the demo guides and",
    "start": "3118589",
    "end": "3126319"
  },
  {
    "text": "you know I can copy this link to dress we can go over here to our good friend",
    "start": "3126319",
    "end": "3131670"
  },
  {
    "text": "Billy and copy that's do that's so once again",
    "start": "3131670",
    "end": "3142829"
  },
  {
    "text": "here if you got a browser open in front yeah feel free to give it well feel free to give this a test",
    "start": "3142829",
    "end": "3150499"
  },
  {
    "text": "never send a bitly link to a text-to-speech app it doesn't work out",
    "start": "3170500",
    "end": "3176510"
  },
  {
    "text": "too well as you can see from the way this link looks so kind of a fun thing",
    "start": "3176510",
    "end": "3183049"
  },
  {
    "text": "to do to generate random noise though",
    "start": "3183049",
    "end": "3186430"
  },
  {
    "text": "cool so I see some magic 8-balls loading up here on people's screens and again",
    "start": "3191619",
    "end": "3197170"
  },
  {
    "text": "right so we have here a a bit more of a full-fledged application than the",
    "start": "3197170",
    "end": "3202450"
  },
  {
    "text": "original thing that I had that just spit out hello from the loft in this case you can actually from lamda return you know",
    "start": "3202450",
    "end": "3209170"
  },
  {
    "text": "this case you're seeing HTML content some CSS and stuff and I you know kind",
    "start": "3209170",
    "end": "3215200"
  },
  {
    "text": "of get this little UI and interface and this is happening just inside of my API gateway that's returning this",
    "start": "3215200",
    "end": "3221469"
  },
  {
    "text": "so again various capabilities of API gateway being shown off behind the scenes but didn't set up any servers",
    "start": "3221469",
    "end": "3227859"
  },
  {
    "text": "didn't sell any operating systems didn't run any software locally I'm not thinking about you know patching for",
    "start": "3227859",
    "end": "3233440"
  },
  {
    "text": "this I'm not thinking about networking all of you have been able to hit it I haven't had to scale it or think about",
    "start": "3233440",
    "end": "3238479"
  },
  {
    "text": "anything like that again that's kind of the beauty and the power of surplice",
    "start": "3238479",
    "end": "3243988"
  },
  {
    "text": "cool so I again we got a full day of of content and talking points around this",
    "start": "3244650",
    "end": "3250869"
  },
  {
    "text": "this is just kind of the early introduction to lambda into what service applications are I again we're gonna be",
    "start": "3250869",
    "end": "3257890"
  },
  {
    "text": "talking a lot more in depth today next about some of our tooling and then the session after that will be around layers",
    "start": "3257890",
    "end": "3263890"
  },
  {
    "text": "and the runtime api and the afternoon we're gonna have a really a deep dive into api gateway and then finishing up",
    "start": "3263890",
    "end": "3269769"
  },
  {
    "text": "with step functions so hopefully here by the end of the day you've got a really good view into what sort of list is how it works for those of you who are here",
    "start": "3269769",
    "end": "3276279"
  },
  {
    "text": "following on the twitch stream appreciate your participation in this we're gonna try to address some of the",
    "start": "3276279",
    "end": "3281349"
  },
  {
    "text": "questions that we can hear touring to break as well and hopefully you stick around here for the rest day with us as",
    "start": "3281349",
    "end": "3286749"
  },
  {
    "text": "well a lot of what I talked about here today can be found off of the service landing page that we have so AWS to",
    "start": "3286749",
    "end": "3292900"
  },
  {
    "text": "amazon.com server lists this is the the home page for all sorts of content you",
    "start": "3292900",
    "end": "3298779"
  },
  {
    "text": "can see kind of at the the white bar that's towards the top of the screen there a link to the service application",
    "start": "3298779",
    "end": "3304150"
  },
  {
    "text": "repository a link to our developer tools section which Croods links to some of those third-party frameworks I mentioned",
    "start": "3304150",
    "end": "3309670"
  },
  {
    "text": "links to resources so these are things like Tech Talks webinars blog posts",
    "start": "3309670",
    "end": "3315489"
  },
  {
    "text": "white papers case studies reference architecture is getting started guides so many different things",
    "start": "3315489",
    "end": "3321099"
  },
  {
    "text": "links to AWS partners these are both companies that provide technology to face our build with service as well as",
    "start": "3321099",
    "end": "3327910"
  },
  {
    "text": "organizations that could come and help your company build something service if",
    "start": "3327910",
    "end": "3333339"
  },
  {
    "text": "you have to drop off here again my name's Chris Mons I am principal developer advocate for service here at AWS based out of New York City I could",
    "start": "3333339",
    "end": "3340480"
  },
  {
    "text": "find me at Mons at amazon.com or at Chrisman's on Twitter feel free to come and interface me on either of those to",
    "start": "3340480",
    "end": "3347050"
  },
  {
    "text": "you and I'm happy to help you with that again we here the law fair gonna take a couple minute break between sessions but",
    "start": "3347050",
    "end": "3353349"
  },
  {
    "text": "happy to handle questions we'll be keeping on top of the questions here in twitch today as well and so thank you",
    "start": "3353349",
    "end": "3358720"
  },
  {
    "text": "and we'll see you in just a couple minutes",
    "start": "3358720",
    "end": "3361950"
  }
]