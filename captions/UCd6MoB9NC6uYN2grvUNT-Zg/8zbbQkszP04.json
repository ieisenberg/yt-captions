[
  {
    "text": "all right uh hey thanks for coming I'm Mike Barrett I work at remind and uh really excited to tell you guys a little",
    "start": "440",
    "end": "6160"
  },
  {
    "text": "bit about uh Empire and how we moved away from Heroku into uh Amazon",
    "start": "6160",
    "end": "12480"
  },
  {
    "text": "ECS no it's not working all right um real quick what you",
    "start": "14320",
    "end": "20400"
  },
  {
    "text": "what you can expect from this session I'm going to start off with a quick introduction tell you a little bit about remind a little bit about the history of",
    "start": "20400",
    "end": "25760"
  },
  {
    "text": "why we did this and then Eric's going to hop up here and he's going to do the fun part with all the demos and the the",
    "start": "25760",
    "end": "31199"
  },
  {
    "text": "background design stuff so it'll be cool um again this is Eric Holmes I'm Mike",
    "start": "31199",
    "end": "36440"
  },
  {
    "text": "Barrett that's Eric at is wedding day that's me with my boy Archer um we're infrastructure engineers at remind we",
    "start": "36440",
    "end": "43000"
  },
  {
    "text": "build lots of uh stuff and we do we both do quite a bit of Open Source so if you want to find our stuff you can find it",
    "start": "43000",
    "end": "50879"
  },
  {
    "text": "there all right so what's remind remind is a messaging platform for teachers students and parents um makes it really",
    "start": "50879",
    "end": "58399"
  },
  {
    "text": "easy for a teacher to send reminders to kids about like what what homework they have or if they're having a a trip come",
    "start": "58399",
    "end": "64600"
  },
  {
    "text": "up that kind of thing there's a lot of numbers up here um and if you were at the keynote you saw my boss Jason steal",
    "start": "64600",
    "end": "70960"
  },
  {
    "text": "the Thunder of this slide a little bit uh really the important number that isn't up here is the one that he he",
    "start": "70960",
    "end": "76320"
  },
  {
    "text": "repeated 8,300 kids every day in this country drop out and that's something that reminds really passionate about",
    "start": "76320",
    "end": "83119"
  },
  {
    "text": "fixing so give you a little bit of History um back when REM mind started",
    "start": "83119",
    "end": "88520"
  },
  {
    "text": "2011 it was monil just a monolithic Ruby on Rails app uh that did all the web",
    "start": "88520",
    "end": "93600"
  },
  {
    "text": "processing did the background processing all that stuff eventually that didn't scale and that became really apparent",
    "start": "93600",
    "end": "99720"
  },
  {
    "text": "during back to school back to school's crazy for us um sure if you guys have kids back to school's nuts for you",
    "start": "99720",
    "end": "105799"
  },
  {
    "text": "there's a lot of emotions going on for us it's similar except for we're worried about the servers uh we get about I",
    "start": "105799",
    "end": "112759"
  },
  {
    "text": "think this year in August when it starts for about a month and a half each day we'd get about 400,000 new users um",
    "start": "112759",
    "end": "120479"
  },
  {
    "text": "So eventually when the mon monolith started to slow down we started to see it creaking we broke off our first",
    "start": "120479",
    "end": "125759"
  },
  {
    "text": "service and um it worked out really well worked out really well for us uh so well in fact that today we have over 30",
    "start": "125759",
    "end": "131640"
  },
  {
    "text": "different services that all talk to each other so when we started we started in",
    "start": "131640",
    "end": "138120"
  },
  {
    "text": "Heroku and Heroku was awesome for us uh let the team really focus on what was important on building code getting new",
    "start": "138120",
    "end": "144200"
  },
  {
    "text": "features out you know getting our users going uh but as we got bigger and as we",
    "start": "144200",
    "end": "149239"
  },
  {
    "text": "had all these microservices it started to we started to really feel some of the pain from the constraints um one of the",
    "start": "149239",
    "end": "155239"
  },
  {
    "text": "big ones is every app you put into heru is public it's out on the internet which",
    "start": "155239",
    "end": "160560"
  },
  {
    "text": "when we started going to these microservices now we have 30 of these things that are out on the internet which means you have to protect each and",
    "start": "160560",
    "end": "166040"
  },
  {
    "text": "every one of them um not even not only that but not only the apps but the databases that you use in Heroku are",
    "start": "166040",
    "end": "172840"
  },
  {
    "text": "public and on the internet and so you have to secure them with these really long passwords and stuff which is still good practice anyways but it just it",
    "start": "172840",
    "end": "178599"
  },
  {
    "text": "wasn't a great story for us uh and then finally the fact that we had very little visibility and control over the host and",
    "start": "178599",
    "end": "185040"
  },
  {
    "text": "the the host that the the the processes ran on and the routing layer was starting to show some pain for us so um",
    "start": "185040",
    "end": "193400"
  },
  {
    "text": "around that time we started to talk about like well what are we going to do instead like how are we going to do how are we going to continue to provide the",
    "start": "193400",
    "end": "199159"
  },
  {
    "text": "service and still keep all the power and flexibility that we're used to and uh this is actually one of the things that",
    "start": "199159",
    "end": "205120"
  },
  {
    "text": "really drew me to remind it's a really cool company this isn't our core product like there's no reason that we needed to",
    "start": "205120",
    "end": "211480"
  },
  {
    "text": "do this necessarily but it everyone really saw that there could be benefit to us producing something like Empire",
    "start": "211480",
    "end": "218400"
  },
  {
    "text": "and just you being able to use it so they gave us the the the go-ahead to start building it so what did we want on",
    "start": "218400",
    "end": "224159"
  },
  {
    "text": "the platform first of all AWS we'd been using AWS in a lot of a lot of different",
    "start": "224159",
    "end": "229480"
  },
  {
    "text": "places already um so we were super comfortable with it so it just made sense to put it on there uh second",
    "start": "229480",
    "end": "235000"
  },
  {
    "text": "flexibility this is going back sort of to the control visibility and flexibility of the hosts and routing like we just we want to be able to see",
    "start": "235000",
    "end": "240840"
  },
  {
    "text": "all the way down to the instance what was going on and be able to tune things um we had developed some really good",
    "start": "240840",
    "end": "247760"
  },
  {
    "text": "shared patterns of deployment and development while we were in Heroku using Toll Factor apps um and we just",
    "start": "247760",
    "end": "253400"
  },
  {
    "text": "didn't want to lose that we didn't want to you know have a big hit on our developers productivity just because we're on a new",
    "start": "253400",
    "end": "259120"
  },
  {
    "text": "system because remind has never had an operation or full-time operations team we didn't intend to build one and so",
    "start": "259120",
    "end": "265919"
  },
  {
    "text": "that meant that this application had to be able to be ran by the Developers themselves with as little uh",
    "start": "265919",
    "end": "271639"
  },
  {
    "text": "interference as possible and then we were also starting to use Docker a little bit internally and the the ideas",
    "start": "271639",
    "end": "279479"
  },
  {
    "text": "in Heroku with your apps are sort of fit into the Container idea so it made sense for us to go ahead and mess with that",
    "start": "279479",
    "end": "285520"
  },
  {
    "text": "but I'm going to go into that a little bit more so reasons we were really into containers really fast build and deploy",
    "start": "285520",
    "end": "292240"
  },
  {
    "text": "cycle for us to deploy a service any given service takes about 1 to two minutes from the point when we check it",
    "start": "292240",
    "end": "299000"
  },
  {
    "text": "in to get pushing it out there um they make it super easy for you to isolate dependencies which is great if you want",
    "start": "299000",
    "end": "305280"
  },
  {
    "text": "to pack a lot of of applications on the same host you can basically um you just don't have to worry about them having",
    "start": "305280",
    "end": "310919"
  },
  {
    "text": "dependency conflicts uh better so one of the really cool features and especially with Empire",
    "start": "310919",
    "end": "317240"
  },
  {
    "text": "I think Eric will show a uh the command later but because of the fact that you're using the same images you can",
    "start": "317240",
    "end": "323680"
  },
  {
    "text": "pull them down and run them on your laptop and you can actually with Empire you can pull down the images and pull",
    "start": "323680",
    "end": "329199"
  },
  {
    "text": "down the fig and run that locally on your laptop to do development testing that kind of thing um immutable images",
    "start": "329199",
    "end": "336039"
  },
  {
    "text": "are really awesome that means that for a given version of of something we can tear it down bring it back up and we",
    "start": "336039",
    "end": "341199"
  },
  {
    "text": "know it's exactly the same we don't have to worry about like oh did somebody make a change to this no we know for that version it's always going to be the same",
    "start": "341199",
    "end": "347039"
  },
  {
    "text": "and then because of all these things we can pack more uh applications on host and it allows us to better utilize the",
    "start": "347039",
    "end": "353680"
  },
  {
    "text": "underlying host resources and so with that I'm going to go ahead and hand it over to Eric and he's going to get to",
    "start": "353680",
    "end": "359479"
  },
  {
    "text": "the the fun part thanks thanks Mike so I'm going to talk to you a little bit about how we built Empire so we started",
    "start": "359479",
    "end": "365479"
  },
  {
    "text": "building Empire back in January and we knew what we wanted but we still had just a really long road of us to",
    "start": "365479",
    "end": "371479"
  },
  {
    "text": "actually build it so we had a few main design goals when we started out so one of them was that we just wanted it to be",
    "start": "371479",
    "end": "377720"
  },
  {
    "text": "really easy to operate so a lot of the existing uh Solutions in the space that we had run into were just operationally",
    "start": "377720",
    "end": "384080"
  },
  {
    "text": "complex to set up or just difficult to actually run um but we wanted something that was going to have a minimal amount",
    "start": "384080",
    "end": "389440"
  },
  {
    "text": "of dependencies and just be really easy to operate uh we're big proponents of Open Source at REM mind we open source a",
    "start": "389440",
    "end": "396000"
  },
  {
    "text": "lot of things and we're built on top of Open Source Products so we wanted to try and give back as much as possible and",
    "start": "396000",
    "end": "402319"
  },
  {
    "text": "you know we knew when we were building this that it wasn't going to give us we weren't trying to build we were trying to build something generic um we were",
    "start": "402319",
    "end": "407479"
  },
  {
    "text": "trying to solve everybody's problem kind of um and what we were building wasn't going to be specific to us and it wasn't",
    "start": "407479",
    "end": "412880"
  },
  {
    "text": "going to give us any kind of competitive advantage in our personal product space um so we wanted to open source it if we",
    "start": "412880",
    "end": "418520"
  },
  {
    "text": "could and then one of the constraints that we actually really liked about Heroku was uh 12 Factor application so",
    "start": "418520",
    "end": "424759"
  },
  {
    "text": "all of our services are U built on this 12 Factor model and I'll talk about it a little bit more in in the later slides",
    "start": "424759",
    "end": "430800"
  },
  {
    "text": "um but if you're not familiar with it it's essentially like a set of best practices uh or a methodology for how",
    "start": "430800",
    "end": "436280"
  },
  {
    "text": "you should build uh robust stateless services that you can scale out easily and then when we started building this",
    "start": "436280",
    "end": "442800"
  },
  {
    "text": "you know we weren't sure we we kind of knew the least and we weren't sure what we were going to use as a scheduling",
    "start": "442800",
    "end": "448639"
  },
  {
    "text": "backend for our darker containers so we wanted something when we built this we wanted to make the scheduling back end",
    "start": "448639",
    "end": "453680"
  },
  {
    "text": "swappable so uh you know we were going to spike into one scheduling back end and if it didn't work out we wanted to",
    "start": "453680",
    "end": "458879"
  },
  {
    "text": "be able to easy easily switch between two and then maybe even uh further down the line support different uh scheduling",
    "start": "458879",
    "end": "465520"
  },
  {
    "text": "backends and then you know most importantly we needed this thing to be like super stable so we have you know 30",
    "start": "465520",
    "end": "471639"
  },
  {
    "text": "million users and apparently they don't like it when we break things so you know we need to be able to do this migration",
    "start": "471639",
    "end": "478840"
  },
  {
    "text": "uh without any kind of downtime and then we wanted to use Docker images as a unit of deployment so",
    "start": "478840",
    "end": "484759"
  },
  {
    "text": "when we wanted to deploy a new version of a service we would just build a new Docker image and then deploy that to the",
    "start": "484759",
    "end": "491520"
  },
  {
    "text": "platform so when we started building Empire we kind of broke it out into these three main components so the",
    "start": "491680",
    "end": "496800"
  },
  {
    "text": "scheduling component is the component that the platform would talk to to actually run an application so ideally",
    "start": "496800",
    "end": "502680"
  },
  {
    "text": "this would be see there a separate Service uh that we would talk to uh the router the routing layer uh would be",
    "start": "502680",
    "end": "509479"
  },
  {
    "text": "essentially the layer that would hold service Discovery and expose applications that uh provide HTTP or TCP",
    "start": "509479",
    "end": "516000"
  },
  {
    "text": "services to actually communicate with each other and then the control plane would just be the interface into the",
    "start": "516000",
    "end": "521360"
  },
  {
    "text": "platform so this would be either like a graphical user interface or maybe a",
    "start": "521360",
    "end": "527920"
  },
  {
    "text": "CLI so the scheduling component will generally have some form of cluster management so uh this allows machines",
    "start": "528360",
    "end": "535080"
  },
  {
    "text": "that come up to just contribute uh their CPU and memory resources into a pool of Machin",
    "start": "535080",
    "end": "541040"
  },
  {
    "text": "machines and then it would have some form of task placement so this would provide us with an API to communicate",
    "start": "541040",
    "end": "546519"
  },
  {
    "text": "with when we actually want to run something on the cluster of machines um and this allows us to treat our machines as just a pool of resources so we want",
    "start": "546519",
    "end": "553480"
  },
  {
    "text": "we want to run something it checks CPU and memory finds a suitable host runs it on that",
    "start": "553480",
    "end": "559040"
  },
  {
    "text": "host so one of the most important interfaces that we extracted pretty early on inside of Empire uh was the",
    "start": "559040",
    "end": "565000"
  },
  {
    "text": "schedule interface and this is what I was talking about with plugable backends so we Define an app as a collection of",
    "start": "565000",
    "end": "570480"
  },
  {
    "text": "processes and the scheduler interface just is a very generic uh implementation or not an implementation interface for",
    "start": "570480",
    "end": "577360"
  },
  {
    "text": "running an application removing an application scaling individual process out processes out horizontally um and",
    "start": "577360",
    "end": "583760"
  },
  {
    "text": "then retrieving uh uh State about the running uh or pending",
    "start": "583760",
    "end": "589720"
  },
  {
    "text": "tasks so about 3 months into the project we had a V1 version of Empire and it",
    "start": "589720",
    "end": "594880"
  },
  {
    "text": "looked like this so for the scheduling layer we were using coreos and Fleet so if you're not familiar with Fleet it's",
    "start": "594880",
    "end": "600880"
  },
  {
    "text": "essentially a distributed uh system d That's backed by uh this uh component called ETD which is a cluster manager",
    "start": "600880",
    "end": "607519"
  },
  {
    "text": "and a distributed key Value Store um and then the routing layer we were using a combination of things so we were using",
    "start": "607519",
    "end": "613680"
  },
  {
    "text": "engine X ETD registrator and comd um basically when new Docker containers",
    "start": "613680",
    "end": "620680"
  },
  {
    "text": "came up this component called registrator would listen for events it would publish a key into ETD comd would",
    "start": "620680",
    "end": "627079"
  },
  {
    "text": "listen for those changes update an engine configuration it was super complicated and that's why we eventually",
    "start": "627079",
    "end": "633120"
  },
  {
    "text": "kind of removed this component um and then for oop sorry and then for the control plane uh we so all of our",
    "start": "633120",
    "end": "640920"
  },
  {
    "text": "developers were really familiar with um the existing tools that we were using so we're using Heroku and we're using the",
    "start": "640920",
    "end": "646920"
  },
  {
    "text": "Heroku CLI so we basically took the Heroku platform API and treated it as a spec um we really didn't want to change",
    "start": "646920",
    "end": "653920"
  },
  {
    "text": "a lot about our actual workflow we just wanted to change implementation details um so we took the platform API",
    "start": "653920",
    "end": "660279"
  },
  {
    "text": "implemented it inside of Empire and that allowed us to just use reuse existing tools like the Heroku",
    "start": "660279",
    "end": "666600"
  },
  {
    "text": "CLI so actually I should go back so around the same time um we started",
    "start": "666920",
    "end": "673320"
  },
  {
    "text": "testing this in staging and we kind of felt like we weren't getting the stability that we really wanted and we",
    "start": "673320",
    "end": "678959"
  },
  {
    "text": "were kind of just piecing together all these Alpha level components um and we were just a little bit worried about",
    "start": "678959",
    "end": "684639"
  },
  {
    "text": "actually putting all these components into production so around this time ec2",
    "start": "684639",
    "end": "690279"
  },
  {
    "text": "container service became generally available um so ec2 container service if you're not familiar with it um it's just",
    "start": "690279",
    "end": "696880"
  },
  {
    "text": "a it's a manage a cluster manager and scheduler for running uh Docker images essentially so the way I generally",
    "start": "696880",
    "end": "703079"
  },
  {
    "text": "describe it it's probably the easiest way to run Docker images on a cluster of",
    "start": "703079",
    "end": "709000"
  },
  {
    "text": "machines uh it provides four main resources uh clusters are essentially a logical grouping of ec2 instances uh",
    "start": "709320",
    "end": "717800"
  },
  {
    "text": "task definitions are basically like templates for what you want to run so it allows you to specify the container",
    "start": "717800",
    "end": "723880"
  },
  {
    "text": "environment variables other options to go along with it tasks represent just a running instance of a task definition",
    "start": "723880",
    "end": "730600"
  },
  {
    "text": "and then services are one of the most important Concepts that we use inside of Empire and uh this is this allows you to",
    "start": "730600",
    "end": "735920"
  },
  {
    "text": "horizontally scale a task definition so uh you link a task definition to a service and it will services will",
    "start": "735920",
    "end": "741800"
  },
  {
    "text": "maintain desired state so if you want to run five 10 instances of something then services are the way that you want to do",
    "start": "741800",
    "end": "748160"
  },
  {
    "text": "that so if we take a look again at that schedule interface we could essentially",
    "start": "748160",
    "end": "753720"
  },
  {
    "text": "just map it directly to these ECS API calls which make it really simple um so running an app we're just going to",
    "start": "753720",
    "end": "758959"
  },
  {
    "text": "register a task definition create an ECS service or update in an existing ECS Service uh removing an app it's going to",
    "start": "758959",
    "end": "765600"
  },
  {
    "text": "delete a service scaling processes we'll just update the desired",
    "start": "765600",
    "end": "770600"
  },
  {
    "text": "count so we spiked into a prototype using ECS as the back end um this was",
    "start": "771920",
    "end": "777000"
  },
  {
    "text": "great because it allowed us to either us to remove those existing scheduling components that we had basically built",
    "start": "777000",
    "end": "782240"
  },
  {
    "text": "up ourselves and just use AWS Services managed AWS services so this was",
    "start": "782240",
    "end": "787760"
  },
  {
    "text": "services that we wouldn't have to actually run and operate and maintain and monitor ourselves um so we basically",
    "start": "787760",
    "end": "793680"
  },
  {
    "text": "told our boss you know we're going to throw away three months of work because we really believe that this is like the right thing to do and you know",
    "start": "793680",
    "end": "799480"
  },
  {
    "text": "fortunately they were okay with that because um we were pretty confident that this would be the most like stable solution for us moving forward um and",
    "start": "799480",
    "end": "807560"
  },
  {
    "text": "this is still the architecture that we use in sight of Empire today so today Empire is a just really",
    "start": "807560",
    "end": "815320"
  },
  {
    "text": "easy to run open- Source self-hosted platform for running 12 Factor Docker",
    "start": "815320",
    "end": "822240"
  },
  {
    "text": "applications so I want to talk a little bit about uh 12 factor and how it's uh how Docker and ECS really complements uh",
    "start": "822240",
    "end": "829000"
  },
  {
    "text": "12-factor applications if you can architect your applications this way it's a really good way to do things so 12 Factor describes these 12",
    "start": "829000",
    "end": "837199"
  },
  {
    "text": "main tenants for how you should build service um and I won't go through all of these but I'll go through some of the most",
    "start": "837199",
    "end": "843040"
  },
  {
    "text": "important ones um but basically it's all these these components things like config backing Services uh",
    "start": "843040",
    "end": "851639"
  },
  {
    "text": "logging so the first one that I'll talk about is dependencies so this one says that we should explicitly declare and",
    "start": "852360",
    "end": "858079"
  },
  {
    "text": "isolate our dependencies so the great thing about Docker is it makes it really easy to do this um so we have Docker",
    "start": "858079",
    "end": "864199"
  },
  {
    "text": "files that allow us to declare the dependencies and build an image from it um so",
    "start": "864199",
    "end": "869560"
  },
  {
    "text": "you know if you have a ruby application for example that might do some image processing you'll probably depend on image magic which is a dynamic library",
    "start": "869560",
    "end": "876040"
  },
  {
    "text": "and you need you need to have that Dynamic library on whatever server you put that you run that application um",
    "start": "876040",
    "end": "881120"
  },
  {
    "text": "Docker files allow us to just explicitly declare that and then bundle it up in a in an",
    "start": "881120",
    "end": "887199"
  },
  {
    "text": "image the next one is build release run so we should strictly separate our build and run stages so this this is really",
    "start": "887199",
    "end": "894920"
  },
  {
    "text": "great with Docker because we can actually build an image completely isolated from where we actually run",
    "start": "894920",
    "end": "900360"
  },
  {
    "text": "it so I remind uh whenever a developer pushes something to GitHub we build an",
    "start": "900360",
    "end": "905560"
  },
  {
    "text": "image from that every single time and then we tag it with the G Shaw that it was built from and then when a developer just",
    "start": "905560",
    "end": "912199"
  },
  {
    "text": "wants to deploy it we just combine the docker image so they deploy the G Shaw uh tag they deploy the docker image tag",
    "start": "912199",
    "end": "918680"
  },
  {
    "text": "with the G Shaw it gets combined with the current configuration for the app and this is what forms are release",
    "start": "918680",
    "end": "923839"
  },
  {
    "text": "inside of Empire and then Empire just hands us off to ECS to actually run",
    "start": "923839",
    "end": "929720"
  },
  {
    "text": "so like kuroku we support the concept of uh proc files so proc files allow you to",
    "start": "929720",
    "end": "935199"
  },
  {
    "text": "um Define the processes individual named commands that compose your application",
    "start": "935199",
    "end": "940440"
  },
  {
    "text": "so it's not too uncommon if you have uh like a ruby or python application it might have a web process that has like a",
    "start": "940440",
    "end": "946560"
  },
  {
    "text": "an maybe an API and then maybe a worker process that does some background Pro processing maybe pulls things off of a",
    "start": "946560",
    "end": "953040"
  },
  {
    "text": "queue um and then when when you deploy an a Docker image to uh Empire it pulls",
    "start": "953040",
    "end": "958560"
  },
  {
    "text": "the image it extracts the the pro file from it and then each one of these Pro File entries gets mapped directly to an",
    "start": "958560",
    "end": "964839"
  },
  {
    "text": "Associated ECS service and for web processes so if you",
    "start": "964839",
    "end": "970600"
  },
  {
    "text": "define a web process inside the proc file then uh Empire will take advantage of the elb integration inside of ECS and",
    "start": "970600",
    "end": "977680"
  },
  {
    "text": "it will create and attach uh an internal elb to that application and as a form of",
    "start": "977680",
    "end": "983160"
  },
  {
    "text": "service Discovery we just create an internal cname record and pointed at that elb so using the app name so if you",
    "start": "983160",
    "end": "989000"
  },
  {
    "text": "deploy an application called API then it's always available inside of that um inside of the VPC using uh API as the C",
    "start": "989000",
    "end": "997440"
  },
  {
    "text": "name as the DNS okay so the next one is concurrency so this says that we should scale out",
    "start": "997440",
    "end": "1003680"
  },
  {
    "text": "via the process model so when we want to build robust stess Services we don't want to rely on any kind of state and we want to be able to easily scale out and",
    "start": "1003680",
    "end": "1010120"
  },
  {
    "text": "then also be able to scale down um we can do that very easily with Empire we just do mcale web to 10 it's going to",
    "start": "1010120",
    "end": "1017160"
  },
  {
    "text": "scale it out to 10 instances of that um and all this does is it just tells the ECS service to change its desired",
    "start": "1017160",
    "end": "1022880"
  },
  {
    "text": "count and ECS will eventually fulfill that as long as it has enough resources inside of the pool of",
    "start": "1022880",
    "end": "1029400"
  },
  {
    "text": "machines next one is uh Dev prod parody so this is this is a you know people talk about this a lot but it's really",
    "start": "1029400",
    "end": "1035600"
  },
  {
    "text": "actually pretty hard to do um and this is that we should try and keep staging development and production as similar as",
    "start": "1035600",
    "end": "1040760"
  },
  {
    "text": "possible um this has been a lot easier for us as we've moved to Docker because",
    "start": "1040760",
    "end": "1045798"
  },
  {
    "text": "the same image that we build and run in production you know developers can pull and run on their Local Host um and it's",
    "start": "1045799",
    "end": "1051160"
  },
  {
    "text": "almost identical to what we're running in production um and we can actually even use you know with if you're using Empire there's a little bit of Unix",
    "start": "1051160",
    "end": "1057400"
  },
  {
    "text": "magic that you can do here uh to just pull the environment variables that you're that the application is configured with and then get the same",
    "start": "1057400",
    "end": "1063480"
  },
  {
    "text": "kind of configuration uh so the next one is logs",
    "start": "1063480",
    "end": "1069039"
  },
  {
    "text": "so uh in 12 Factor we it says that we should treat logs as a event stream so all of our applications we just log the",
    "start": "1069039",
    "end": "1074720"
  },
  {
    "text": "standard out um and then we have a Damon on all the hosts that streams these logs",
    "start": "1074720",
    "end": "1080159"
  },
  {
    "text": "and it puts them into Kinesis for us um so we have a Kinesis stream and this allows us to uh easily uh support this",
    "start": "1080159",
    "end": "1087799"
  },
  {
    "text": "EMP log command instead of Empire which gives us streaming logs um this is mostly useful for debugging so if you're",
    "start": "1087799",
    "end": "1093640"
  },
  {
    "text": "in a staging environment you deploy something you want to stream the logs and see what's going on uh this makes it really easy to do",
    "start": "1093640",
    "end": "1101120"
  },
  {
    "text": "that uh so the next one is admin processes so we should run admin",
    "start": "1101120",
    "end": "1106520"
  },
  {
    "text": "management tasks as one-off processes so uh if you have a ruby python application",
    "start": "1106520",
    "end": "1112320"
  },
  {
    "text": "you probably have database migrations maybe you want to run a reals console to do some interactive stuff um this is",
    "start": "1112320",
    "end": "1118159"
  },
  {
    "text": "kind of hard to implement but we actually implement it inside of Empire so when you run like something like EMP run migrate it it will actually attach",
    "start": "1118159",
    "end": "1124799"
  },
  {
    "text": "your your uh shell to a running container inside of the cluster and it'll it'll actually be interactive too",
    "start": "1124799",
    "end": "1131039"
  },
  {
    "text": "so if you do rails console you can do some things inside of it so I'm going to go ahead and jump",
    "start": "1131039",
    "end": "1137159"
  },
  {
    "text": "into a little demo um I'll go ahead and show you how to set up an Empire environment and then um I'll show you",
    "start": "1137159",
    "end": "1143159"
  },
  {
    "text": "how we just build and deploy a simple Docker application and hopefully the demo gods",
    "start": "1143159",
    "end": "1149080"
  },
  {
    "text": "are good to us so we'll",
    "start": "1149080",
    "end": "1153919"
  },
  {
    "text": "see",
    "start": "1154120",
    "end": "1157120"
  },
  {
    "text": "okay okay is that is that okay can everybody see that okay all",
    "start": "1161240",
    "end": "1167720"
  },
  {
    "text": "right",
    "start": "1167720",
    "end": "1170720"
  },
  {
    "text": "okay so I'm going to go ahead and tell you the story of a company you may have heard of before uh Acme Incorporated so",
    "start": "1173159",
    "end": "1179320"
  },
  {
    "text": "Acme Inc it's been around for years but what you may not know is that they decided to come online today and even",
    "start": "1179320",
    "end": "1185400"
  },
  {
    "text": "more importantly they figured that it would be best to to have us do that for them instead of Empire so this is a true",
    "start": "1185400",
    "end": "1191400"
  },
  {
    "text": "story this real this is a real company so they figured all sorts of cool new stuff are coming out today at reinvent",
    "start": "1191400",
    "end": "1197480"
  },
  {
    "text": "and they they want us to do for them so after we gathered a few requirements um it became pretty obvious that while they",
    "start": "1197480",
    "end": "1204640"
  },
  {
    "text": "wanted a web presence they don't really know what they want to do yet so I figured we'll just go ahead and make a placeholder for them and deploy it to",
    "start": "1204640",
    "end": "1212120"
  },
  {
    "text": "Empire so before using Empire the only thing that we'll need to do is uh of",
    "start": "1212120",
    "end": "1217840"
  },
  {
    "text": "course set up Empire so we just need to uh install Empire inside of an ECS",
    "start": "1217840",
    "end": "1223039"
  },
  {
    "text": "cluster and then we'll need to install the M CLI so I'll just show you real quick how we can",
    "start": "1223039",
    "end": "1229240"
  },
  {
    "text": "do",
    "start": "1229240",
    "end": "1231640"
  },
  {
    "text": "that okay so as we said before Empire is open source um it's available at101",
    "start": "1236200",
    "end": "1244480"
  },
  {
    "text": "Empire so to set up Empire we provide a cloud formation stack um this",
    "start": "1247200",
    "end": "1252360"
  },
  {
    "text": "cloudformation stack is mostly suitable for a demo um if you",
    "start": "1252360",
    "end": "1258200"
  },
  {
    "text": "were running Empire a production environment you'd probably want to build your own cloudformation stack and make some a couple of changes to it um but",
    "start": "1258200",
    "end": "1263840"
  },
  {
    "text": "this is a really good way just to try it out so when you launch the cloud",
    "start": "1263840",
    "end": "1270640"
  },
  {
    "text": "information UI it'll give you a couple of parameters things like Docker username email if you're pulling private",
    "start": "1270640",
    "end": "1275880"
  },
  {
    "text": "Docker images um you can provide those here most of these you can actually just leave blank uh the only one that's",
    "start": "1275880",
    "end": "1281600"
  },
  {
    "text": "required is a key name this allows this St access into the host um in a production environment you wouldn't want",
    "start": "1281600",
    "end": "1287679"
  },
  {
    "text": "to do this you would want like Bastion host or something but this is okay for a demo and then you'll just click next and",
    "start": "1287679",
    "end": "1295640"
  },
  {
    "text": "then we'll create the cloudformation stack so this will take about 10 minutes um I'm not going to do it now just",
    "start": "1295640",
    "end": "1301360"
  },
  {
    "text": "because it takes so long so I have a a pre-existing Empire environment that I'm going to go ahead and",
    "start": "1301360",
    "end": "1308200"
  },
  {
    "text": "use so the next thing that we need to do is just install the Empire CLI so the Empire CLI is called EMP and it's",
    "start": "1310240",
    "end": "1317840"
  },
  {
    "text": "available at /m and if you have a working go environment it's really easy to install",
    "start": "1317840",
    "end": "1323679"
  },
  {
    "text": "we actually provide binaries as well um but we can just type go get REM 101m and this will install the",
    "start": "1323679",
    "end": "1330440"
  },
  {
    "text": "mcli and then the next thing that we'll need to do is just tell the mcli where our Empire environment is located so in",
    "start": "1330440",
    "end": "1337320"
  },
  {
    "text": "the cloud formation stack I have an Empire elb DNS name so",
    "start": "1337320",
    "end": "1344440"
  },
  {
    "text": "this is the location for the Empire API that we have now Empire API URL so I'm just going to set",
    "start": "1344440",
    "end": "1351279"
  },
  {
    "text": "this Empire API URL and this will tell the Empire CLI where to actually communicate with the Empire",
    "start": "1351279",
    "end": "1359120"
  },
  {
    "text": "API okay so now that we have Empires all set up we can just run M apps to see what",
    "start": "1363039",
    "end": "1370000"
  },
  {
    "text": "we're running so right now we have no applications inside of our Empire environment it's just a bare Empire uh",
    "start": "1370000",
    "end": "1376279"
  },
  {
    "text": "cluster so we can um start running some applications for Acme and we can actually verify this too by looking in",
    "start": "1376279",
    "end": "1382480"
  },
  {
    "text": "the EC uh ECS console if I go to the this is our ECS",
    "start": "1382480",
    "end": "1389240"
  },
  {
    "text": "cluster that was created with that cloud information stack and you'll see right now we have",
    "start": "1389240",
    "end": "1394799"
  },
  {
    "text": "one ECS service so this is the ECS service for the Empire",
    "start": "1394799",
    "end": "1400158"
  },
  {
    "text": "API all right so I'm going to go ahead and uh deploy a placeholder site for",
    "start": "1400320",
    "end": "1406400"
  },
  {
    "text": "Acme Inc uh it's pretty simple I already built it beforehand so I'm already in it let me",
    "start": "1406400",
    "end": "1413360"
  },
  {
    "text": "see here all right so it's very simple um we just want to give them a standard you",
    "start": "1413360",
    "end": "1420200"
  },
  {
    "text": "know HTML website it's just some stand uh plain text HTML uh welcome to the",
    "start": "1420200",
    "end": "1426039"
  },
  {
    "text": "home of Acme Inc very simple very simple my design",
    "start": "1426039",
    "end": "1431600"
  },
  {
    "text": "skills are not good too so it doesn't look very good but it's very simple all right so the next thing that we need to",
    "start": "1431600",
    "end": "1438600"
  },
  {
    "text": "do is just build a Docker file so it's since it's just some static HTML uh we're just going to use engine X so I'm",
    "start": "1438600",
    "end": "1444960"
  },
  {
    "text": "just going to serve it with engine x uh this is a Docker file for it it's just going to build from this the official",
    "start": "1444960",
    "end": "1450159"
  },
  {
    "text": "engine X Docker image uh it's just going to copy some enginex configuration file the uh HTML file that we created and",
    "start": "1450159",
    "end": "1458120"
  },
  {
    "text": "then it's just going to run engine X when we run this Docker image and if you look at",
    "start": "1458120",
    "end": "1464880"
  },
  {
    "text": "the if you look at the engine X configuration also pretty simple uh just sets up a server block that's",
    "start": "1464880",
    "end": "1470960"
  },
  {
    "text": "just going to just going to just going to um serve the HTML",
    "start": "1470960",
    "end": "1478000"
  },
  {
    "text": "file so we can build this really",
    "start": "1478520",
    "end": "1482399"
  },
  {
    "text": "easily Docker build so like we said before great thing",
    "start": "1483840",
    "end": "1490720"
  },
  {
    "text": "about Docker images is they build really fast as long as you have a pre-existing layer cache which is",
    "start": "1490720",
    "end": "1497320"
  },
  {
    "text": "important and let me just go ahead and run it just to make sure that it actually",
    "start": "1497320",
    "end": "1504600"
  },
  {
    "text": "works okay so it's working dock image so it's working in local development",
    "start": "1517679",
    "end": "1523039"
  },
  {
    "text": "machine we want to go ahead and deploy this to Empire so the the way we do do that is by the",
    "start": "1523039",
    "end": "1530000"
  },
  {
    "text": "only prerequisite to deploy something to Empire is you just have to host it on a Docker registry um so all we have to do",
    "start": "1530000",
    "end": "1535799"
  },
  {
    "text": "is push this image to the dockor registry and then we'll just deploy to Empire so let me go ahead and do",
    "start": "1535799",
    "end": "1542159"
  },
  {
    "text": "that so I'm going to go ahead and push the image that we just",
    "start": "1542159",
    "end": "1547600"
  },
  {
    "text": "built this might take hopefully not too long I think most of the the layers are already cached so um if you're not",
    "start": "1547600",
    "end": "1554000"
  },
  {
    "text": "familiar with Docker it uses a basically like a layered system so uh a single oh",
    "start": "1554000",
    "end": "1562000"
  },
  {
    "text": "no Ducker the demo gods are not good today",
    "start": "1562000",
    "end": "1568240"
  },
  {
    "text": "h this might be a good reason to not use the official Docker registry and use the new one that they just",
    "start": "1570360",
    "end": "1577520"
  },
  {
    "text": "announced so the docker registry doesn't have super high availability but it looks",
    "start": "1577520",
    "end": "1584640"
  },
  {
    "text": "like it's working now so it shouldn't take too long because all of the I already pushed this",
    "start": "1584640",
    "end": "1591559"
  },
  {
    "text": "beforehand so all of the layers are pretty much already cached on the docker",
    "start": "1591559",
    "end": "1596639"
  },
  {
    "text": "registry so while that's pushing actually I can just go ahead and I'm just going to go ahead and create a new",
    "start": "1605200",
    "end": "1610840"
  },
  {
    "text": "application I'm going to call it dubdub duub inside of the Empire environment so this will create an application inside",
    "start": "1610840",
    "end": "1616480"
  },
  {
    "text": "of Empire and then what I want to do is I want to expose this publicly to the Internet so by default um if your Empire",
    "start": "1616480",
    "end": "1624360"
  },
  {
    "text": "Service uh exposes a web process it's going to create an internal EB for it",
    "start": "1624360",
    "end": "1629880"
  },
  {
    "text": "and it's only going to be accessible with inside the VPC but that's not super useful for us so we can actually expose",
    "start": "1629880",
    "end": "1635880"
  },
  {
    "text": "it publicly by just adding a domain to it so if I just add a domain and domain doesn't actually",
    "start": "1635880",
    "end": "1642799"
  },
  {
    "text": "matter right now I'm just going to add the domain to it and this will tell Empire to expose this application",
    "start": "1642799",
    "end": "1649000"
  },
  {
    "text": "publicly and let me see I think that image is probably done pushing so now all we have to do is just deploy",
    "start": "1649000",
    "end": "1656919"
  },
  {
    "text": "it should be pretty fast okay so that what that did is it pulled the docker",
    "start": "1668640",
    "end": "1674000"
  },
  {
    "text": "image it extracted the proc file from it tried to extract a proc file this app doesn't a proc file so it uses the",
    "start": "1674000",
    "end": "1679519"
  },
  {
    "text": "default command from the docker file and then since it's a a default to a web process it created an elb for it and",
    "start": "1679519",
    "end": "1686200"
  },
  {
    "text": "that EB is public So within a couple of minutes or so this uh application should be publicly accessible we can use the",
    "start": "1686200",
    "end": "1693000"
  },
  {
    "text": "MPS command to look at what's actually running dubb dub so we're running one",
    "start": "1693000",
    "end": "1701360"
  },
  {
    "text": "web process so this should be accessible let me go ahead and grab the elb and then we'll try and hit it and see if it",
    "start": "1701360",
    "end": "1707120"
  },
  {
    "text": "works see",
    "start": "1707120",
    "end": "1713919"
  },
  {
    "text": "EB E2 yeah actually I want to go to the ECS service okay so we'll see now inside of",
    "start": "1713919",
    "end": "1722159"
  },
  {
    "text": "ECS we have an additional ECS Service uh you see it's a ID and then-- web uh what",
    "start": "1722159",
    "end": "1730000"
  },
  {
    "text": "this is is the app ID inside of Empire web specifies that it's for the the ECS services for the web process and we can",
    "start": "1730000",
    "end": "1737120"
  },
  {
    "text": "look into this and we'll see the EB that was attached to",
    "start": "1737120",
    "end": "1742000"
  },
  {
    "text": "it and I'll just grab the location for the CV a little small",
    "start": "1746760",
    "end": "1755278"
  },
  {
    "text": "sorry okay so it's working it's pretty easy pretty quick okay so it looks like",
    "start": "1764159",
    "end": "1770480"
  },
  {
    "text": "I made a typo though um I called them acam in Co is probably not super happy about that so let me just go ahead and",
    "start": "1770480",
    "end": "1777480"
  },
  {
    "text": "fix that typo real quick and then I'll",
    "start": "1777480",
    "end": "1781320"
  },
  {
    "text": "redeploy so I'll just make it and push",
    "start": "1786320",
    "end": "1790840"
  },
  {
    "text": "it make push so great thing about Docker is the",
    "start": "1792000",
    "end": "1801159"
  },
  {
    "text": "quick you know build and iteration cycle so um since we already have things cached we just have to build it builds",
    "start": "1801159",
    "end": "1807120"
  },
  {
    "text": "pretty quick you saw that buildt you know a matter of seconds most of our services do um and then pushing as long",
    "start": "1807120",
    "end": "1813240"
  },
  {
    "text": "as you have as long as you're you have an existing layer cache uh pushing generally takes you know 10 20",
    "start": "1813240",
    "end": "1821480"
  },
  {
    "text": "seconds should finish okay and then I'll deploy the new",
    "start": "1824279",
    "end": "1831039"
  },
  {
    "text": "image so one of the really cool things about ECS is that when we deploy new versions of things uh it's going to do a",
    "start": "1835880",
    "end": "1841480"
  },
  {
    "text": "rolling upgrade so if we look at MPS again we see that we're still running",
    "start": "1841480",
    "end": "1848120"
  },
  {
    "text": "the V1 version so we just deployed a new version and we're not running it for some reason and this is because we told",
    "start": "1848120",
    "end": "1855039"
  },
  {
    "text": "ECS to run this new version but it's it's um it's not consistent so it's it's",
    "start": "1855039",
    "end": "1860519"
  },
  {
    "text": "going to basically spin up new versions of the V2 version and then it's going to",
    "start": "1860519",
    "end": "1866399"
  },
  {
    "text": "wait for connections to drain from the old version and then it's going to bring down those existing processes so we'll",
    "start": "1866399",
    "end": "1871679"
  },
  {
    "text": "get zero downtime we won't lose any connections or any requests during that time so let me look at it again so now",
    "start": "1871679",
    "end": "1877720"
  },
  {
    "text": "you can see now we have a V2 version running and V1 still up it's probably",
    "start": "1877720",
    "end": "1883039"
  },
  {
    "text": "still serving requests if I hit this application I might even go back and forth between aam ink and Acme",
    "start": "1883039",
    "end": "1891279"
  },
  {
    "text": "in",
    "start": "1891600",
    "end": "1894600"
  },
  {
    "text": "maybe there we go so Acme Inc if I hit it again might be acam ink maybe",
    "start": "1896799",
    "end": "1903240"
  },
  {
    "text": "not so it looks like we're almost switched",
    "start": "1903240",
    "end": "1908600"
  },
  {
    "text": "over okay so one of the cool things too is that every time we deploy a new version of something it creates a new",
    "start": "1908600",
    "end": "1916840"
  },
  {
    "text": "release so we have two versions of the dubdub duub",
    "start": "1916840",
    "end": "1922159"
  },
  {
    "text": "application and we can easily roll back to V1 version if we broke something",
    "start": "1922159",
    "end": "1930120"
  },
  {
    "text": "simple operation and we can also configure so",
    "start": "1930120",
    "end": "1936720"
  },
  {
    "text": "one of the other things about 12 Factor applications is that we should configure via environment variables so we support all that inside of Empire via M set and",
    "start": "1936720",
    "end": "1944600"
  },
  {
    "text": "MV so if we had some environment variable that we needed Maybe a uh like a rails environment we can easily set",
    "start": "1944600",
    "end": "1954278"
  },
  {
    "text": "that and then look at the environment and every time we also",
    "start": "1957279",
    "end": "1962559"
  },
  {
    "text": "deploy so when we deploy or set environment variables it'll create a new",
    "start": "1962559",
    "end": "1967720"
  },
  {
    "text": "release so now we should have four we should have four releases one for the roll back and then one where we",
    "start": "1968039",
    "end": "1974360"
  },
  {
    "text": "set the configuration okay okay so hopefully",
    "start": "1974360",
    "end": "1979399"
  },
  {
    "text": "this gives you a good idea of how Empire can be used and uh how easy it is to",
    "start": "1979399",
    "end": "1984600"
  },
  {
    "text": "just uh use it to build you know stess 12 Factor applications if you have a lot of services microservice architecture uh",
    "start": "1984600",
    "end": "1990600"
  },
  {
    "text": "it's a really great great great way to run those so I'd like to go ahead and jump into a couple more slides",
    "start": "1990600",
    "end": "1999399"
  },
  {
    "text": "about excuse me uh so we've been using Docker in production now for about five months um",
    "start": "2000360",
    "end": "2007480"
  },
  {
    "text": "all through Empire and ECS um and we have discovered a few things we've",
    "start": "2007480",
    "end": "2012519"
  },
  {
    "text": "learned a few pain points and um I'd like to share a couple of those with you so the first one is container",
    "start": "2012519",
    "end": "2019159"
  },
  {
    "text": "instance roll out um so when you're running ECS or uh just containers in",
    "start": "2019159",
    "end": "2025559"
  },
  {
    "text": "general your actual hosts become just a pool of resources so you don't you generally don't put very much on them um",
    "start": "2025559",
    "end": "2031960"
  },
  {
    "text": "just some base stuff like for us it's Docker the ECS agent um statsd and some",
    "start": "2031960",
    "end": "2038360"
  },
  {
    "text": "logging infrastructure um so this means that when we want to when we want to deploy a new version of it we we really",
    "start": "2038360",
    "end": "2044720"
  },
  {
    "text": "Embrace immutability and we don't we don't ever make any changes to our base hosts we build a new Ami and then we",
    "start": "2044720",
    "end": "2051118"
  },
  {
    "text": "deploy that to our cluster um when we want to roll out that new version of the Ami it's a little challenging because",
    "start": "2051119",
    "end": "2056839"
  },
  {
    "text": "what you have to do is you have to bring down an existing host that has ECS Services running make sure that they're",
    "start": "2056839",
    "end": "2063240"
  },
  {
    "text": "uh they get spun up on a different host and then continue that process throughout the entire ECS cluster so if",
    "start": "2063240",
    "end": "2069560"
  },
  {
    "text": "you're running a fairly large ECS cluster we run about 36 hosts right now um that can take a long time if you if",
    "start": "2069560",
    "end": "2075800"
  },
  {
    "text": "you want to do it safely um for us it takes a couple hours so just something to be aware",
    "start": "2075800",
    "end": "2081040"
  },
  {
    "text": "of next one is logging um unfortunately logging in Docker it's leaves a little",
    "start": "2081040",
    "end": "2086440"
  },
  {
    "text": "bit to be desired right now for us um we use a combination of log spout and sua",
    "start": "2086440",
    "end": "2091760"
  },
  {
    "text": "logic so uh on all of the uh ec2 container instanes that we run we run",
    "start": "2091760",
    "end": "2098200"
  },
  {
    "text": "log spout which connects to the docker Damon and streams all of the the logs from all of the containers to a seal",
    "start": "2098200",
    "end": "2104119"
  },
  {
    "text": "logic agent um and that forwards it along to sual logic where we do all of our log a",
    "start": "2104119",
    "end": "2110240"
  },
  {
    "text": "aggregation when you're running a lot of containers like we are in production um it gets kind of challenging to know",
    "start": "2110240",
    "end": "2116240"
  },
  {
    "text": "where those log lines actually originated from um so we get around this by using this Source environment",
    "start": "2116240",
    "end": "2121520"
  },
  {
    "text": "variable which gets set inside of Empire and this includes uh it's a single string that includes the app name the",
    "start": "2121520",
    "end": "2127720"
  },
  {
    "text": "process type that's running and the version the release version of the application um and we use this we set",
    "start": "2127720",
    "end": "2133920"
  },
  {
    "text": "this as CIS log structured data in all of our log lines and this makes it really easy for us to filter out uh",
    "start": "2133920",
    "end": "2139720"
  },
  {
    "text": "filter for logs in uh in sem logic so next thing to be aware of is",
    "start": "2139720",
    "end": "2145800"
  },
  {
    "text": "Docker is Docker is a big monolith so it's a Damon it runs all of your containers as a Damon um if it panics or",
    "start": "2145800",
    "end": "2152359"
  },
  {
    "text": "crashes your containers are going to go down um that kind of sucks but fortunately things like ECS that manage",
    "start": "2152359",
    "end": "2158680"
  },
  {
    "text": "desired State um Shield us a lot from any kind of instability that could be there uh so if you know if the doer",
    "start": "2158680",
    "end": "2165160"
  },
  {
    "text": "Damon does go down on your host uh ECS is going to know about it and it's going to it's going to take those existing",
    "start": "2165160",
    "end": "2170280"
  },
  {
    "text": "tasks put them on a healthy host and uh you'll be all",
    "start": "2170280",
    "end": "2175880"
  },
  {
    "text": "good uh when we first started using Docker um about three or four months ago um we discovered pretty early on that",
    "start": "2176000",
    "end": "2183480"
  },
  {
    "text": "our build and deploy cycle wasn't as fast as we would like to be so in older",
    "start": "2183480",
    "end": "2189400"
  },
  {
    "text": "versions of Docker we were actually at the time we were building our Docker images in CI and we were using uh Docker",
    "start": "2189400",
    "end": "2196200"
  },
  {
    "text": "1.4 I think at the time um which had a number of bugs that make it uh not super",
    "start": "2196200",
    "end": "2201880"
  },
  {
    "text": "fast for building and pushing um and So eventually what we did is we uh we broke",
    "start": "2201880",
    "end": "2208440"
  },
  {
    "text": "out this project called conveyor and this is our new build Pipeline and this is uh a build system for Docker images",
    "start": "2208440",
    "end": "2214240"
  },
  {
    "text": "and it's also open source a build system for Docker images um that uses the layer cache efficiently so it's very",
    "start": "2214240",
    "end": "2220280"
  },
  {
    "text": "integrated with GitHub um and it will build dark images significantly faster than any other build system that I've",
    "start": "2220280",
    "end": "2227000"
  },
  {
    "text": "seen so far so if you if you run into problems about building does really quickly take a look at conveyor we just",
    "start": "2227000",
    "end": "2233359"
  },
  {
    "text": "open source it recently and then lastly the space moves really fast I mean containerization is",
    "start": "2233359",
    "end": "2239800"
  },
  {
    "text": "really big right now I mean we're basically standing on the shoulders of giants tools like Docker uh services",
    "start": "2239800",
    "end": "2245560"
  },
  {
    "text": "like ECS um have really given given us the tools that we can that we can use to actually build a platform like this if",
    "start": "2245560",
    "end": "2252599"
  },
  {
    "text": "we tried to do this two years ago people would have thought we were crazy and people probably thought we were crazy",
    "start": "2252599",
    "end": "2258160"
  },
  {
    "text": "when we started anyways but um you know we've been really consistently impressed with ad's offerings and just the overall",
    "start": "2258160",
    "end": "2264280"
  },
  {
    "text": "stability of ECS we've been running um all of remind inside of ECS now for I",
    "start": "2264280",
    "end": "2270400"
  },
  {
    "text": "guess four or five months probably five months um and it's been super stable um",
    "start": "2270400",
    "end": "2275760"
  },
  {
    "text": "so we're really happy with it and so that's the end um and I'll just go ahead and open up for any questions",
    "start": "2275760",
    "end": "2281839"
  },
  {
    "text": "if anybody has any questions thank",
    "start": "2281839",
    "end": "2286519"
  },
  {
    "text": "you",
    "start": "2288720",
    "end": "2291720"
  }
]