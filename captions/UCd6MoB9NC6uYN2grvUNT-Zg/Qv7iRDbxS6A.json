[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "okay good afternoon welcome if you're here today I assume you're interested in",
    "start": "0",
    "end": "5730"
  },
  {
    "text": "migrations from monoliths to microservices my name is Hernan slansky I'm a Solutions Architect at Amazon Web",
    "start": "5730",
    "end": "12120"
  },
  {
    "text": "Services working with global enterprise customers I've had the privilege of working with Cisco infinite video",
    "start": "12120",
    "end": "18630"
  },
  {
    "text": "platform over the past year helping them with their journey to AWS joining me",
    "start": "18630",
    "end": "23820"
  },
  {
    "text": "today is avi frother the CTO of Cisco IVP avi is going to be telling us how",
    "start": "23820",
    "end": "31529"
  },
  {
    "start": "29000",
    "end": "70000"
  },
  {
    "text": "cisco broke apart their monolith and how that transformation enabled them to achieve one of the fastest paced",
    "start": "31529",
    "end": "37739"
  },
  {
    "text": "migrations to AWS that I've witnessed in my tenure to date both avi and I are",
    "start": "37739",
    "end": "43469"
  },
  {
    "text": "going to be talking about some of the challenges that customers face when breaking apart their monolith avi is",
    "start": "43469",
    "end": "49530"
  },
  {
    "text": "going to be talking about the challenges that Cisco faced breaking apart their monolithic application and some of the",
    "start": "49530",
    "end": "55469"
  },
  {
    "text": "patterns that they used in order to overcome some of those challenges I'm going to be talking about some of the",
    "start": "55469",
    "end": "61500"
  },
  {
    "text": "challenges that customers face when teasing apart their monolithic databases and some of the patterns that can be",
    "start": "61500",
    "end": "66990"
  },
  {
    "text": "used in order to overcome those issues let's start by talking about modern",
    "start": "66990",
    "end": "72299"
  },
  {
    "start": "70000",
    "end": "227000"
  },
  {
    "text": "software development so some people think that modern software development is all about technology well it's not",
    "start": "72299",
    "end": "78600"
  },
  {
    "text": "just about technology it's about three things it's about technology it's about",
    "start": "78600",
    "end": "83909"
  },
  {
    "text": "organization and it's about processes and the way we look at modern software development at Amazon is from the",
    "start": "83909",
    "end": "90570"
  },
  {
    "text": "technology perspective we start with micro services and I'll tell you why so",
    "start": "90570",
    "end": "95670"
  },
  {
    "text": "in 2001 amazon.com was a big monolithic application with big monolithic",
    "start": "95670",
    "end": "101490"
  },
  {
    "text": "development teams and we were facing a number of challenges one of the big challenges that we were facing was",
    "start": "101490",
    "end": "107310"
  },
  {
    "text": "around development and deployment velocity so was taking us time to get new functionality developed and deployed",
    "start": "107310",
    "end": "114659"
  },
  {
    "text": "into production and the reason for this was due to the size and the complexity",
    "start": "114659",
    "end": "119880"
  },
  {
    "text": "of the application and we knew that if we were going to continue to scale at the pace that we were scaling we would",
    "start": "119880",
    "end": "126659"
  },
  {
    "text": "need to do something different and so we started to tease apart our monolithic application well before the turn",
    "start": "126659",
    "end": "133890"
  },
  {
    "text": "microservices was coined in our industry we also knew that an architectural",
    "start": "133890",
    "end": "140820"
  },
  {
    "text": "approach alone was not going to be sufficient if we still had large development teams and large operations",
    "start": "140820",
    "end": "147540"
  },
  {
    "text": "teams shipping code between each other we knew we would not achieve the development of velocity that we needed",
    "start": "147540",
    "end": "153300"
  },
  {
    "text": "and so we started to tease apart our teams and build small fully functional",
    "start": "153300",
    "end": "159600"
  },
  {
    "text": "teams who had both operational knowledge and development knowledge these teams",
    "start": "159600",
    "end": "165360"
  },
  {
    "text": "would have end-to-end ownership of the entire product lifecycle we call these teams service teams or an Amazon we call",
    "start": "165360",
    "end": "173070"
  },
  {
    "text": "them two pizza teams teams that are sized no larger than two pizzas can feed so between eight to twelve people these",
    "start": "173070",
    "end": "179970"
  },
  {
    "text": "are small but hungry teams we also knew that if these teams were going to run",
    "start": "179970",
    "end": "185760"
  },
  {
    "text": "independently we're going to develop independently we're going to operate independently we needed to provide them",
    "start": "185760",
    "end": "191340"
  },
  {
    "text": "with the tools in order for them to achieve the velocity that we wanted and so we started to develop continuous",
    "start": "191340",
    "end": "198810"
  },
  {
    "text": "integration continuous deployment and continuous delivery tools tools and after being hardened within Amazon for",
    "start": "198810",
    "end": "206970"
  },
  {
    "text": "over ten years we released as services to our customers on AWS I'm referring to code pipeline",
    "start": "206970",
    "end": "213630"
  },
  {
    "text": "and code deploy so to summarize what was Amazon's challenge with respect to the",
    "start": "213630",
    "end": "220500"
  },
  {
    "text": "monolith why did we break it apart we needed development velocity now let's",
    "start": "220500",
    "end": "227370"
  },
  {
    "text": "look at the results the ball that you see here is a visual representation of Amazon comm with thousands of micro",
    "start": "227370",
    "end": "234390"
  },
  {
    "text": "services and their interconnects between them and in 2014 we released some",
    "start": "234390",
    "end": "240150"
  },
  {
    "text": "information which talked to the development velocity that we achieved so we've got thousands of service teams",
    "start": "240150",
    "end": "246239"
  },
  {
    "text": "across Amazon building micro services each operating and developing and",
    "start": "246239",
    "end": "251489"
  },
  {
    "text": "deploying independently of each other practicing continuous delivery getting",
    "start": "251489",
    "end": "256739"
  },
  {
    "text": "code all the way to production and in 2014 we managed to deploy 50 million",
    "start": "256739",
    "end": "262919"
  },
  {
    "text": "times think about that number that's more than one deployment for every second for every day of 2014",
    "start": "262919",
    "end": "270810"
  },
  {
    "text": "including nights weekends and holidays god forbid so what did micro services",
    "start": "270810",
    "end": "279750"
  },
  {
    "text": "help Amazon achieve it helped us achieve the development velocity that we so desired in a monolithic world we're used",
    "start": "279750",
    "end": "288990"
  },
  {
    "text": "to building our applications with a single database we can't continue to do that if we want to build micro services",
    "start": "288990",
    "end": "297860"
  },
  {
    "text": "if we want our teams to operate independently if we want our teams to own their own service if you want our",
    "start": "297860",
    "end": "305070"
  },
  {
    "text": "teams to achieve the development velocity that micro services can can offer we need to tease apart our",
    "start": "305070",
    "end": "311940"
  },
  {
    "text": "database and that in fact is one of the key tenants for micro services architecture the tenants of",
    "start": "311940",
    "end": "319910"
  },
  {
    "text": "decentralized data management and what we mean by this is that each micro service needs to own its own database or",
    "start": "319910",
    "end": "327720"
  },
  {
    "text": "set of databases and there are two reasons for this so first of all from the technology perspective we want to",
    "start": "327720",
    "end": "334560"
  },
  {
    "text": "choose the right tool for the job we want to choose the right data store that",
    "start": "334560",
    "end": "339720"
  },
  {
    "text": "will provide us the functionality that our service requires so for instance if we're building a search service we would",
    "start": "339720",
    "end": "346889"
  },
  {
    "text": "want to choose some sort of search engines such as elastic search or solar the second reason is each micro service",
    "start": "346889",
    "end": "353909"
  },
  {
    "text": "needs or each service team needs to own its technology both the application and",
    "start": "353909",
    "end": "359520"
  },
  {
    "text": "the database and they need to be comfortable with supporting and maintaining it going forward so they so",
    "start": "359520",
    "end": "364889"
  },
  {
    "text": "we want to choose a database that each service team can support until now I've",
    "start": "364889",
    "end": "371729"
  },
  {
    "text": "spoken about the why and the what of teasing apart our monolith why do we",
    "start": "371729",
    "end": "376949"
  },
  {
    "text": "want to tease it apart we want to achieve development velocity what do we want to do with our monolith we want to",
    "start": "376949",
    "end": "383310"
  },
  {
    "text": "tease apart the monolithic application into micro services and also tease apart are monolithic database now I want to",
    "start": "383310",
    "end": "389970"
  },
  {
    "text": "talk about the how focusing on how to tease apart are monolithic database what",
    "start": "389970",
    "end": "396180"
  },
  {
    "text": "challenges are we going to face when we tease apart are monolithic database so I'm gonna talk about three common",
    "start": "396180",
    "end": "401259"
  },
  {
    "text": "scenarios the customers face when teasing apart their monolithic database the first one is shared static data what",
    "start": "401259",
    "end": "409150"
  },
  {
    "text": "do I do when I have data that doesn't change often that I need to share across multiple services the second one is",
    "start": "409150",
    "end": "415479"
  },
  {
    "text": "shared immutable data data that changes frequently that multiple service needs access to and the third are transactions",
    "start": "415479",
    "end": "423330"
  },
  {
    "text": "why are we going to talk about these three scenarios because in a monolithic database these three scenarios are very",
    "start": "423330",
    "end": "430509"
  },
  {
    "text": "common and basic functionality that you get out of a monolithic database let's",
    "start": "430509",
    "end": "438610"
  },
  {
    "start": "438000",
    "end": "463000"
  },
  {
    "text": "dive into the first scenario so in this case in the shared static data we've got three services that all need access to",
    "start": "438610",
    "end": "445029"
  },
  {
    "text": "the same data so in a monolithic world it's very easy they all have access to the same database to the same table they",
    "start": "445029",
    "end": "453550"
  },
  {
    "text": "can just reach into the database and extract that information when we tease apart our monolithic database there are",
    "start": "453550",
    "end": "459939"
  },
  {
    "text": "a number of approaches that we can take so the first approach is to duplicate",
    "start": "459939",
    "end": "465520"
  },
  {
    "start": "463000",
    "end": "520000"
  },
  {
    "text": "the table for each service this is a simple but effective approach you need",
    "start": "465520",
    "end": "471009"
  },
  {
    "text": "to keep in mind that if you do need to update the static data you need to update it in multiple locations the",
    "start": "471009",
    "end": "478060"
  },
  {
    "text": "second approach is to extract that data and embed it in your code perhaps a",
    "start": "478060",
    "end": "483399"
  },
  {
    "text": "property file of sorts now while this does not address the consistency issue that I just raised if",
    "start": "483399",
    "end": "489789"
  },
  {
    "text": "you're using services like code deploy in code pipeline it's very easy to deploy code to multiple services at the",
    "start": "489789",
    "end": "496599"
  },
  {
    "text": "same time in production and the third approach is to create a new service out",
    "start": "496599",
    "end": "503319"
  },
  {
    "text": "of the static data and this makes sense if the size of the data or the",
    "start": "503319",
    "end": "508930"
  },
  {
    "text": "complexity of the logic around the data justifies it so until now we spoke about infrequently changing data so let's talk",
    "start": "508930",
    "end": "516190"
  },
  {
    "text": "about how we really training data and we're going to talk about this in the",
    "start": "516190",
    "end": "522279"
  },
  {
    "start": "520000",
    "end": "538000"
  },
  {
    "text": "context of a shipping service which needs access to a user's address so in a monolithic world the shipping service",
    "start": "522279",
    "end": "528790"
  },
  {
    "text": "will just reach into the database the user get access get the users table and the address when we tease apart our",
    "start": "528790",
    "end": "535300"
  },
  {
    "text": "database there are two approaches that we can take the first approach is the synchronous lookup so in this approach",
    "start": "535300",
    "end": "541780"
  },
  {
    "start": "538000",
    "end": "633000"
  },
  {
    "text": "each service that needs access to another services data will reach into",
    "start": "541780",
    "end": "546820"
  },
  {
    "text": "will do a synchronous call and fetch the data so in our case the shipping service",
    "start": "546820",
    "end": "552400"
  },
  {
    "text": "will make a call to the user service which will query its database and return the information and the advantage of",
    "start": "552400",
    "end": "558850"
  },
  {
    "text": "this approach is that we don't have to worry about consistency the shipping service is retrieving the",
    "start": "558850",
    "end": "564040"
  },
  {
    "text": "data from a single source of truth the they trade off on the other hand is that",
    "start": "564040",
    "end": "570640"
  },
  {
    "text": "we need two calls in order to retrieve the data so how do we improve on this",
    "start": "570640",
    "end": "575860"
  },
  {
    "text": "pattern how do we improve the performance of this pattern so the next pattern is based off of this pattern how",
    "start": "575860",
    "end": "582010"
  },
  {
    "text": "do we improve performance of a latency-sensitive operation we had a",
    "start": "582010",
    "end": "588040"
  },
  {
    "text": "cache and if we want to improve the availability of the data in the cache",
    "start": "588040",
    "end": "593350"
  },
  {
    "text": "the shipping service will subscribe to events from the user service and any",
    "start": "593350",
    "end": "598810"
  },
  {
    "text": "time a user's address will get updated the shipping service will then update its cache the advantage here is we've",
    "start": "598810",
    "end": "605440"
  },
  {
    "text": "addressed our performance problem the shipping service is retrieving the data directly from the cache the",
    "start": "605440",
    "end": "612490"
  },
  {
    "text": "trade-off on the other hand is because the shipping service is receiving data from the cache it's now eventually",
    "start": "612490",
    "end": "618340"
  },
  {
    "text": "consistent so the here are two approaches one is consistent and the other is eventually consistent how do we",
    "start": "618340",
    "end": "624940"
  },
  {
    "text": "achieve consistency across our system so here we talk about transactions so",
    "start": "624940",
    "end": "633220"
  },
  {
    "start": "633000",
    "end": "689000"
  },
  {
    "text": "transactions are a very useful thing they say these things either all happen together or none of them happen at all",
    "start": "633220",
    "end": "638980"
  },
  {
    "text": "and in the context of a database they allow me to update multiple tables knowing that if one of the updates fails",
    "start": "638980",
    "end": "645130"
  },
  {
    "text": "my transaction will roll everything back and leave my data in a consistent State",
    "start": "645130",
    "end": "650910"
  },
  {
    "text": "let's take a context of an ordering system where I I place an order I need",
    "start": "650910",
    "end": "656290"
  },
  {
    "text": "to update my orders table and then I need to debit my account table what happens if that operation never gets to",
    "start": "656290",
    "end": "663160"
  },
  {
    "text": "the account table so in a monolithic database where single transaction boundary around both",
    "start": "663160",
    "end": "668830"
  },
  {
    "text": "of those operations I can rely on the transaction to roll everything back and leave my data in a consistent State what",
    "start": "668830",
    "end": "676900"
  },
  {
    "text": "happens when we tease apart our monolithic database we now lose that single transaction boundary and there",
    "start": "676900",
    "end": "683170"
  },
  {
    "text": "are a number of approaches that we can take in order to implement transactions in a microservices world so the first",
    "start": "683170",
    "end": "690310"
  },
  {
    "text": "approach is if you don't need transactional consistency and eventual",
    "start": "690310",
    "end": "695710"
  },
  {
    "text": "consistency is sufficient then if the queue and retry approach is very effective so in this case once we place",
    "start": "695710",
    "end": "703450"
  },
  {
    "text": "the order we put a message on a queue that the account service will then read",
    "start": "703450",
    "end": "708460"
  },
  {
    "text": "from and apply and apply the transaction to the account table now this approach",
    "start": "708460",
    "end": "714880"
  },
  {
    "text": "as I mentioned is eventually consistence it's simple and robust and it handles failures gracefully this is a very",
    "start": "714880",
    "end": "721630"
  },
  {
    "text": "common pattern but notice we didn't really implement the transaction this is",
    "start": "721630",
    "end": "726910"
  },
  {
    "text": "more of a synchronization of sorts what happens if we really need transactions so that following two approaches can be",
    "start": "726910",
    "end": "734290"
  },
  {
    "text": "used in order to implement transactions in a distributed system so two-phase commit is an atomic commit protocol",
    "start": "734290",
    "end": "741040"
  },
  {
    "start": "738000",
    "end": "862000"
  },
  {
    "text": "which guarantees consistency in a distributed system and it works as such",
    "start": "741040",
    "end": "746260"
  },
  {
    "text": "we have a transaction manager who's responsible for orchestrating the",
    "start": "746260",
    "end": "751390"
  },
  {
    "text": "transaction across multiple components and as its name suggests it's a - it's",
    "start": "751390",
    "end": "756640"
  },
  {
    "text": "its two-phase approach so the first phase is the voting phase and in this",
    "start": "756640",
    "end": "762100"
  },
  {
    "text": "phase the transaction manager makes a proposal of the change that it wants to make to each of the components each of",
    "start": "762100",
    "end": "767680"
  },
  {
    "text": "the components don't do anything just yet they vote they say either they can do it or they can't and if they can do",
    "start": "767680",
    "end": "773260"
  },
  {
    "text": "it they hold on to the resources that they need until they hear back from the transaction manager once the transaction",
    "start": "773260",
    "end": "779590"
  },
  {
    "text": "manager hears back from all of the components we then go into the next phase the commit phase and in this phase",
    "start": "779590",
    "end": "786940"
  },
  {
    "text": "if the transaction manager gets a positive response from each of the components it will then issue a commits",
    "start": "786940",
    "end": "793060"
  },
  {
    "text": "telling each of the components to commit the transaction if the transaction manager gets",
    "start": "793060",
    "end": "799150"
  },
  {
    "text": "a negative response from just one of the components it will issue an abort telling the telling all the components",
    "start": "799150",
    "end": "805210"
  },
  {
    "text": "to release the resources that they that they held previously and finally since",
    "start": "805210",
    "end": "810340"
  },
  {
    "text": "this is a distributed system each component needs to confirm the",
    "start": "810340",
    "end": "815890"
  },
  {
    "text": "transaction manager when they've completed their transaction so the two-phase commit is a very common",
    "start": "815890",
    "end": "821290"
  },
  {
    "text": "approach one that's easy to implement but there are a number of weaknesses the",
    "start": "821290",
    "end": "826720"
  },
  {
    "text": "big weakness is the two-phase commit locks resources between the phases locking resources means adding",
    "start": "826720",
    "end": "834040"
  },
  {
    "text": "contention to your application which is never a good thing and if we combine that with certain failure modes such as the transaction",
    "start": "834040",
    "end": "840370"
  },
  {
    "text": "manager failing or one of the services failing that contention will be even longer so the two-phase commit is",
    "start": "840370",
    "end": "847090"
  },
  {
    "text": "primarily useful for short-lived transactions or scenarios where we're",
    "start": "847090",
    "end": "852250"
  },
  {
    "text": "not concerned about network weather but what are we gonna do if we have long live transactions are we gonna hold on",
    "start": "852250",
    "end": "858490"
  },
  {
    "text": "to those resources for long live transactions so the next pattern the saga pattern is a good is a good",
    "start": "858490",
    "end": "865750"
  },
  {
    "start": "862000",
    "end": "1000000"
  },
  {
    "text": "approach for long live transactions and the saga pattern is not new in the database literature it was written about",
    "start": "865750",
    "end": "871360"
  },
  {
    "text": "in the paper by Hector Garcia Molina and Kenneth Salem 1987 from Princeton University they were there at the time",
    "start": "871360",
    "end": "878830"
  },
  {
    "text": "they were talking about a scenario of a long live transaction in the single database in more modern times that",
    "start": "878830",
    "end": "884760"
  },
  {
    "text": "pattern is used for a distributed system so the transits of the saga pattern what",
    "start": "884760",
    "end": "891670"
  },
  {
    "text": "it does is you take your transaction and you split it up into multiple serial steps the saga is responsible for",
    "start": "891670",
    "end": "897850"
  },
  {
    "text": "maintaining the consistency of the operation either completing all the transactions or rolling them back and",
    "start": "897850",
    "end": "904480"
  },
  {
    "text": "the way it rolls them back is it applies a compensating transaction let's break",
    "start": "904480",
    "end": "910570"
  },
  {
    "text": "that down so saga is a long-lived transaction that can be written as a",
    "start": "910570",
    "end": "915670"
  },
  {
    "text": "sequence of transactions so we take our transaction T and we split it up into a series of transactions so if we can",
    "start": "915670",
    "end": "921730"
  },
  {
    "text": "split our transaction up we have the start of a saga next we create",
    "start": "921730",
    "end": "926800"
  },
  {
    "text": "compensating transactions to undo the transaction in case we need to back now it's important to note those",
    "start": "926800",
    "end": "934060"
  },
  {
    "text": "compensating transactions don't necessarily undo the transaction they semantically undo the transaction so a",
    "start": "934060",
    "end": "940750"
  },
  {
    "text": "perfect example of needing to some not every transaction can be undone for instance that nasty email that you",
    "start": "940750",
    "end": "947199"
  },
  {
    "text": "sent to your boss that you want to recall you can't undo that once you've sent it it's gone you can request to delete it you can",
    "start": "947199",
    "end": "954459"
  },
  {
    "text": "request an apology but you can't undo it so the saga pattern has a guarantee its",
    "start": "954459",
    "end": "960100"
  },
  {
    "text": "guarantee is either all of the transactions complete and our system is left in a consistent state or some of",
    "start": "960100",
    "end": "966790"
  },
  {
    "text": "the transactions complete some of them fail and then we apply compensating transactions to return the system to a",
    "start": "966790",
    "end": "973899"
  },
  {
    "text": "business consistent state the difference between two-phase commit and saga is",
    "start": "973899",
    "end": "980620"
  },
  {
    "text": "that two-phase commit locks its resources in order to guarantee its consistency whereas the saga works in",
    "start": "980620",
    "end": "987940"
  },
  {
    "text": "units of work which can be undone by the compensating transactions so saga is",
    "start": "987940",
    "end": "994240"
  },
  {
    "text": "useful for both short lived and log lived transactions so before I hand off",
    "start": "994240",
    "end": "1001260"
  },
  {
    "text": "to AVI there are three messages that I want you to take away with today the first is if you have a monolithic",
    "start": "1001260",
    "end": "1006540"
  },
  {
    "text": "application and you're suffering from development or a lack of development velocity consider micro services they",
    "start": "1006540",
    "end": "1015149"
  },
  {
    "text": "helped us second when you go down that path you will face a number of",
    "start": "1015149",
    "end": "1020670"
  },
  {
    "text": "challenges consider the patterns that we've discussed today they will help you get there faster and finally learn from",
    "start": "1020670",
    "end": "1027900"
  },
  {
    "text": "others avi is going to tell us how cisco broke apart their monolith the challenges they faced the patterns they",
    "start": "1027900",
    "end": "1034500"
  },
  {
    "text": "used and the results they achieved javi stage is all yours thank you very much",
    "start": "1034500",
    "end": "1040230"
  },
  {
    "text": "for known it's been a pleasure it's been a long journey almost I think a year and I really appreciate all the time you spent together and I wanted to talk to",
    "start": "1040230",
    "end": "1047880"
  },
  {
    "start": "1047000",
    "end": "1155000"
  },
  {
    "text": "you about the story of Cisco and Cisco IVP IEP is the solution that we give to",
    "start": "1047880",
    "end": "1053909"
  },
  {
    "text": "service providers cable operators in order to deliver premium IP content to",
    "start": "1053909",
    "end": "1059040"
  },
  {
    "text": "their customers linear channel change video on demand and into features like recording catch up",
    "start": "1059040",
    "end": "1065590"
  },
  {
    "text": "and restart short video it's time to differentiate to rapidly innovate to",
    "start": "1065590",
    "end": "1074680"
  },
  {
    "text": "utterly amazed it's time to accelerate growth with personalized premium content",
    "start": "1074680",
    "end": "1081430"
  },
  {
    "text": "it's time to deliver broadcast quality video over IP everywhere it's time to",
    "start": "1081430",
    "end": "1089650"
  },
  {
    "text": "scale and reach all devices improve efficiencies and reduce cost",
    "start": "1089650",
    "end": "1095240"
  },
  {
    "text": "there's never been a better time to transform entertain we've been as",
    "start": "1095240",
    "end": "1105320"
  },
  {
    "text": "business for many years from the days of digital even pre dates from analog and until recently the service providers had",
    "start": "1105320",
    "end": "1113720"
  },
  {
    "text": "on premise their own data centers but they call it time data centers they had",
    "start": "1113720",
    "end": "1119090"
  },
  {
    "text": "a couple of monolith applications they were pretty much developing the delivering the functionality of the entire solution and the delivery",
    "start": "1119090",
    "end": "1125809"
  },
  {
    "text": "suffered from the waterfall released an upgrade was probably annually a year maybe a good time as certain customers",
    "start": "1125809",
    "end": "1132649"
  },
  {
    "text": "got a half a year and they really wanted to challenge us data get to a much more rapid release cycle every day every two",
    "start": "1132649",
    "end": "1140809"
  },
  {
    "text": "weeks major developments are talking about not just bug fixes over here I would speak to you about a journey how",
    "start": "1140809",
    "end": "1148100"
  },
  {
    "text": "we took this entire thing and we will be Cobra birthed in the cloud we're not",
    "start": "1148100",
    "end": "1154970"
  },
  {
    "text": "just talking about we hear about a number of micro servers not solution of 510 we're talking about hundreds of micro services together at build up this",
    "start": "1154970",
    "end": "1160850"
  },
  {
    "start": "1155000",
    "end": "1181000"
  },
  {
    "text": "solution their deployment is at scale and multiple customers we talk about",
    "start": "1160850",
    "end": "1165860"
  },
  {
    "text": "thousands of micro services and one thing that we achieved is we were able",
    "start": "1165860",
    "end": "1171649"
  },
  {
    "text": "to wrap this entire solution up and bring it up to AWS to the cloud and I",
    "start": "1171649",
    "end": "1177440"
  },
  {
    "text": "think what it's called a record time of four months and the reason we were able to achieve this is because previously",
    "start": "1177440",
    "end": "1183860"
  },
  {
    "start": "1181000",
    "end": "1198000"
  },
  {
    "text": "historically about a year and a half two years beforehand there are four major areas which we invested lots of",
    "start": "1183860",
    "end": "1190039"
  },
  {
    "text": "development a lot of effort in order to achieve what we call rebirth in the cloud a proper cloud architecture let me",
    "start": "1190039",
    "end": "1198320"
  },
  {
    "start": "1198000",
    "end": "1234000"
  },
  {
    "text": "start with automation in automation two simple things it's the ability from one",
    "start": "1198320",
    "end": "1203539"
  },
  {
    "text": "command line to deploy the entire system regardless of your developer if your",
    "start": "1203539",
    "end": "1208549"
  },
  {
    "text": "customer run one line and every one L development teams have to dear that that",
    "start": "1208549",
    "end": "1214220"
  },
  {
    "text": "one line should be able to deploy them but it's how we deploying them from scratch it's also upgrading customers don't deploy every single day in the",
    "start": "1214220",
    "end": "1220010"
  },
  {
    "text": "system they're always in the pattern of upgrades now the customers were also the development team is once they deploy",
    "start": "1220010",
    "end": "1225080"
  },
  {
    "text": "their system every single day they're making little changes minor changes and they want to constantly be upgrading it and it's how you bring",
    "start": "1225080",
    "end": "1230770"
  },
  {
    "text": "automation to achieve the sets from one line the benefits afterwards are very",
    "start": "1230770",
    "end": "1235990"
  },
  {
    "start": "1234000",
    "end": "1271000"
  },
  {
    "text": "very clear first of all development this we used to work with like 1 2 3 environments to",
    "start": "1235990",
    "end": "1242230"
  },
  {
    "text": "support an entire development team I'll talk about hard as developers the times change today sometimes you've got a team",
    "start": "1242230",
    "end": "1248110"
  },
  {
    "text": "that want to spin up another environment for right now for the next couple of hours front some type of test tomorrow in another environment",
    "start": "1248110",
    "end": "1253360"
  },
  {
    "text": "you got a new team onboarding we've got probably over 50 and between 50-100 deployments constantly going on just in",
    "start": "1253360",
    "end": "1260320"
  },
  {
    "text": "the engineering it also gives very good velocity for onboarding new customers it's not a matter of shipping over",
    "start": "1260320",
    "end": "1265960"
  },
  {
    "text": "equipment a couple of months until they got the system up and running we're talking about hours and micro-services",
    "start": "1265960",
    "end": "1273690"
  },
  {
    "text": "began to very very deep over here I think was a greater beginning presentation and I want to speak a lot",
    "start": "1273690",
    "end": "1278740"
  },
  {
    "text": "about our micro services I want to break up into two different challenges that we had what our platform on one of the",
    "start": "1278740",
    "end": "1285220"
  },
  {
    "text": "applications platform monoliths were entire systems that have been developed",
    "start": "1285220",
    "end": "1290530"
  },
  {
    "start": "1286000",
    "end": "1345000"
  },
  {
    "text": "over years to give some type of commonality of functionality for example logging or deployment and inside them",
    "start": "1290530",
    "end": "1297520"
  },
  {
    "text": "you had a number of applications the application might have been small they might have been big they might even multiple in one monolith but a cave over",
    "start": "1297520",
    "end": "1303940"
  },
  {
    "text": "here is a some type of common framework that all these systems needed now our",
    "start": "1303940",
    "end": "1309460"
  },
  {
    "text": "solution not built up of one of these and we're putting together many and how do we get something common over here it",
    "start": "1309460",
    "end": "1315190"
  },
  {
    "text": "wasn't simple okay we had oh sometimes scotch tape at certain times bubblegum",
    "start": "1315190",
    "end": "1321340"
  },
  {
    "text": "even that's how we refer to an our engineering terms in order to get all these monoliths together for example",
    "start": "1321340",
    "end": "1326860"
  },
  {
    "text": "just shipping logs to one area and writing much many different layers and we thought when we started this journey",
    "start": "1326860",
    "end": "1334210"
  },
  {
    "text": "we could just peel off this onion and we could just select out the applications and then we have one new common",
    "start": "1334210",
    "end": "1341830"
  },
  {
    "text": "denominator or a common platform for all them but it turns out when you start peeling layers we're not talking about onions we're talking about something",
    "start": "1341830",
    "end": "1347500"
  },
  {
    "start": "1345000",
    "end": "1373000"
  },
  {
    "text": "they are very intertwined and very connected into the applications itself the libraries that he used the way that",
    "start": "1347500",
    "end": "1353410"
  },
  {
    "text": "they actually managed scale the way they did logging made it very very hard just to remove all these layers over here and",
    "start": "1353410",
    "end": "1358540"
  },
  {
    "text": "just take out the application in most times we just extracted the logic and we",
    "start": "1358540",
    "end": "1364730"
  },
  {
    "text": "rewrote the application and this is a big challenge obviously who wants to start writing the code but it actually gave us a lot of velocity and we",
    "start": "1364730",
    "end": "1370820"
  },
  {
    "text": "achieved it much faster and what success successes that we've got by far and many",
    "start": "1370820",
    "end": "1376669"
  },
  {
    "start": "1373000",
    "end": "1398000"
  },
  {
    "text": "less lines of code the performance has improved dramatically and the cost of",
    "start": "1376669",
    "end": "1383299"
  },
  {
    "text": "operation as well people say that I I wanted achieve a hundred percent over here technically it wasn't possible so",
    "start": "1383299",
    "end": "1389809"
  },
  {
    "text": "they only got up to ninety nine point seven this is what we removed all of our platforms and we actually had one new",
    "start": "1389809",
    "end": "1394940"
  },
  {
    "text": "common platform through all of our services people usually though understand a bit more of the function",
    "start": "1394940",
    "end": "1400369"
  },
  {
    "start": "1398000",
    "end": "1409000"
  },
  {
    "text": "model lists so here we're talking about big machines that basically are capable of doing many different tasks and lots",
    "start": "1400369",
    "end": "1406100"
  },
  {
    "text": "of data knobs and configurations for each customer in our situation one of our samples over here is the main",
    "start": "1406100",
    "end": "1412279"
  },
  {
    "start": "1409000",
    "end": "1435000"
  },
  {
    "text": "catalog it's we have on one side the broadcast information we've got as linear content we've got as VOD VOD",
    "start": "1412279",
    "end": "1418489"
  },
  {
    "text": "video on-demand library and we've got all the different entitlements that all of the users have and it went into one",
    "start": "1418489",
    "end": "1424100"
  },
  {
    "text": "very very big engine in order to support our application on the other side for the user experience from table able to",
    "start": "1424100",
    "end": "1430340"
  },
  {
    "text": "do aggregated search view television or purchase video on-demand having this one",
    "start": "1430340",
    "end": "1436100"
  },
  {
    "start": "1435000",
    "end": "1466000"
  },
  {
    "text": "monolith over here is very very challenging it made very very hard in order to fix even bugs in order to start",
    "start": "1436100",
    "end": "1443509"
  },
  {
    "text": "getting into thousands or millions of lines of code we understand why our deployments were happening only once a",
    "start": "1443509",
    "end": "1450080"
  },
  {
    "text": "year you change one thing you have to test entire system they were very very costly and they're scale was her osius",
    "start": "1450080",
    "end": "1456950"
  },
  {
    "text": "either you duplicated the entire monolith just because you need one set of one one feature of that application",
    "start": "1456950",
    "end": "1462679"
  },
  {
    "text": "in order to scale up and again over here we rewrote and this time it's many",
    "start": "1462679",
    "end": "1469340"
  },
  {
    "start": "1466000",
    "end": "1505000"
  },
  {
    "text": "applications again a dramatic dramatic reduction over here and in in lines of code we improve the game performance",
    "start": "1469340",
    "end": "1476299"
  },
  {
    "text": "which wasn't a given people assumed in the beginning at mabie's modernist were designed in ways that they could perform a lot better reality showed differently",
    "start": "1476299",
    "end": "1483049"
  },
  {
    "text": "and as well as the bomb we reduced our cost a lot I would say we're about a",
    "start": "1483049",
    "end": "1488149"
  },
  {
    "text": "third but a lot more important than just seeing the graph over here is that we have to scale we're talking about scale",
    "start": "1488149",
    "end": "1494600"
  },
  {
    "text": "1cor for one specific feature for example the search so the monolith was scaling at these huge massive amounts",
    "start": "1494600",
    "end": "1500570"
  },
  {
    "text": "and the micro services we could scale them individually the development teams",
    "start": "1500570",
    "end": "1506630"
  },
  {
    "start": "1505000",
    "end": "1543000"
  },
  {
    "text": "when we started approaching this we had a couple of guidelines what we wanted teams to be a hundred percent vertical",
    "start": "1506630",
    "end": "1512630"
  },
  {
    "text": "and depending from end to end a team should be able to not to be depend on any other team in order to deliver functionality we went on the domain",
    "start": "1512630",
    "end": "1518600"
  },
  {
    "text": "driven architecture where we told teams you've got the basic information we'll",
    "start": "1518600",
    "end": "1524000"
  },
  {
    "text": "talk a little bit about where that came from and what does it require in order for you to deliver the feature that",
    "start": "1524000",
    "end": "1529220"
  },
  {
    "text": "being dependent upon any other teams so an example here let's just imagine we were a broadcaster and we actually heard",
    "start": "1529220",
    "end": "1534440"
  },
  {
    "text": "a VOD library or got a linear channel change in the whole channel line up so we've got a catalog of all of our view",
    "start": "1534440",
    "end": "1540230"
  },
  {
    "text": "of the assets and there's lots of different functionality one team is actually providing a functionality to navigate to the entire VOD store so",
    "start": "1540230",
    "end": "1547250"
  },
  {
    "text": "they're taking these files that parsing they're internalize internally they're building their databases their data",
    "start": "1547250",
    "end": "1552740"
  },
  {
    "text": "structures in order to optimally support their functionality this is the patterns",
    "start": "1552740",
    "end": "1558110"
  },
  {
    "text": "that run in spoke about earlier on you'll see this duplication because the search also needs to ingest the same VOD",
    "start": "1558110",
    "end": "1565039"
  },
  {
    "text": "library and it's not two different copies but each one ingested only the",
    "start": "1565039",
    "end": "1570080"
  },
  {
    "text": "information that was relevant for that service VOD you need the synopsis you need the price search you probably need",
    "start": "1570080",
    "end": "1576380"
  },
  {
    "text": "the actors it's a different set of information that you want in ingesting they'd only ingest it but the way that",
    "start": "1576380",
    "end": "1581720"
  },
  {
    "text": "they process it internally is to optimally provide it to the clients at",
    "start": "1581720",
    "end": "1586850"
  },
  {
    "text": "the best in the in the best possible way and over here we face another challenge",
    "start": "1586850",
    "end": "1593090"
  },
  {
    "start": "1592000",
    "end": "1636000"
  },
  {
    "text": "of duplication of code because in the monolith there was one parser if there",
    "start": "1593090",
    "end": "1598940"
  },
  {
    "text": "was a bug in the parser you fixed at once what happens over here when each team is individual writing their own parsers so we had a few patterns of this",
    "start": "1598940",
    "end": "1606140"
  },
  {
    "text": "is not many where teams are very smart engineers are very they don't like actually just writing code they like",
    "start": "1606140",
    "end": "1612200"
  },
  {
    "text": "innovating so a couple of teams got together and said listen I wrote a parser let me deliver to you as a library let's create some common",
    "start": "1612200",
    "end": "1617630"
  },
  {
    "text": "libraries over here these are not data storages it's not that they're calling back to these in order to retrieve data",
    "start": "1617630",
    "end": "1623059"
  },
  {
    "text": "they're just fuses libraries for parsing different teams contribute to them linked together with him at Build time",
    "start": "1623059",
    "end": "1628370"
  },
  {
    "text": "so each one is still just using the parsing capabilities and internally storing it on their structures we",
    "start": "1628370",
    "end": "1636650"
  },
  {
    "start": "1636000",
    "end": "1728000"
  },
  {
    "text": "replaced our entire system with zero downtime to our customers and over here we faced another challenge how do we",
    "start": "1636650",
    "end": "1642860"
  },
  {
    "text": "build up the data in the new micro services where right now it's sitting within the monoliths and I want to speak",
    "start": "1642860",
    "end": "1647990"
  },
  {
    "text": "about three patterns who are a few more visitors three major patterns the first one is the simplest the fork and just it",
    "start": "1647990",
    "end": "1653270"
  },
  {
    "text": "basically means is a file it's been ingested until today into the monolith we just have to fork in the beginning supplied also to the micro service the",
    "start": "1653270",
    "end": "1660680"
  },
  {
    "text": "micro service gets populated with the data this obviously is before our clients are actually even talking to the monolith it gives the ability for the",
    "start": "1660680",
    "end": "1666920"
  },
  {
    "text": "developers to start ensuring that it ingested the data properly they could do load testing on these micro services in",
    "start": "1666920",
    "end": "1673040"
  },
  {
    "text": "the live production even before they started shifting over the clients but certain times the model is actually do",
    "start": "1673040",
    "end": "1678410"
  },
  {
    "text": "manipulations or they actually have some type of State inside so the recache",
    "start": "1678410",
    "end": "1683540"
  },
  {
    "text": "allowed us when they were monoliths that actually had API is in order to act for example dump the entire database so we",
    "start": "1683540",
    "end": "1689630"
  },
  {
    "text": "were able to access the monolith from the micro service we created some interface we dumped all the data into",
    "start": "1689630",
    "end": "1696020"
  },
  {
    "text": "our new micro service in order to populate it and the most challenging ones one is actually state you can imagine a user zoom booking and",
    "start": "1696020",
    "end": "1702200"
  },
  {
    "text": "recordings constantly in a system so the states start over here and over here we have to create throwaway code just to",
    "start": "1702200",
    "end": "1708440"
  },
  {
    "text": "always synchronize monolith and the micro service and this goes on for a while because as we're breaking apart",
    "start": "1708440",
    "end": "1714200"
  },
  {
    "text": "this monolith some actions are being driven through the micro service it has to update the monolith and some actions",
    "start": "1714200",
    "end": "1720680"
  },
  {
    "text": "are going still through the monolith and s update the micro service we succeeded to replace our entire system in flight I",
    "start": "1720680",
    "end": "1728260"
  },
  {
    "start": "1728000",
    "end": "1746000"
  },
  {
    "text": "want to speak about a couple of common frameworks that we get out of the cloud",
    "start": "1728260",
    "end": "1734090"
  },
  {
    "text": "people always think the cloud is compute we know today to a lot the beyond compute and just storage it's what are",
    "start": "1734090",
    "end": "1741080"
  },
  {
    "text": "the services that the cloud could give you to enable you actually to develop applications I selected a list of nine over here I'm",
    "start": "1741080",
    "end": "1748670"
  },
  {
    "start": "1746000",
    "end": "1777000"
  },
  {
    "text": "sure many of these talk to many people in the room over here you could clearly identify service registry in a micro",
    "start": "1748670",
    "end": "1755270"
  },
  {
    "text": "service world we've got hundreds coming up and going down and the IP is constantly changing it's an obvious object storage was not so clear although",
    "start": "1755270",
    "end": "1762580"
  },
  {
    "text": "we did discover that there are certain clouds that provide your services object storage but we needed this over here to",
    "start": "1762580",
    "end": "1767620"
  },
  {
    "text": "share data between different services and it's not only a matter of getting all these platform services actually how",
    "start": "1767620",
    "end": "1774490"
  },
  {
    "text": "many times they actually work together for example our smart routing this is a pattern that we use on a daily basis for",
    "start": "1774490",
    "end": "1781570"
  },
  {
    "start": "1777000",
    "end": "1810000"
  },
  {
    "text": "upgrade in our system basically when we do when we deploy a new version of a new micro service it's sitting side by side",
    "start": "1781570",
    "end": "1788290"
  },
  {
    "text": "and we have the ability to take individual users which we tagged them and regardless of where an entire chain",
    "start": "1788290",
    "end": "1794470"
  },
  {
    "text": "this micro service is sitting to gear them to use to this user to only use that one version version 1.1 while the",
    "start": "1794470",
    "end": "1801250"
  },
  {
    "text": "entire community on top is always pointing to the version 1 this is not",
    "start": "1801250",
    "end": "1806770"
  },
  {
    "text": "just one common service provided by the cloud it's actually connecting together our deployment tools together a service",
    "start": "1806770",
    "end": "1814330"
  },
  {
    "start": "1810000",
    "end": "1871000"
  },
  {
    "text": "registry and also talking to our load balancers each time a new micro server is being deployed update the service",
    "start": "1814330",
    "end": "1819970"
  },
  {
    "text": "registry configure the load balancers associate which users should be targeted right now for this instance of the micro",
    "start": "1819970",
    "end": "1825280"
  },
  {
    "text": "service until eventually as we gradually steer more and more population over to",
    "start": "1825280",
    "end": "1830830"
  },
  {
    "text": "the service until everyone steered over and then stop random traffic to the old ones and our pipeline our pipeline runs",
    "start": "1830830",
    "end": "1839260"
  },
  {
    "text": "24/7 our pipeline at the system level treats every change to every component",
    "start": "1839260",
    "end": "1845530"
  },
  {
    "text": "as a new version upgrades using the same processes that we do in life and testing",
    "start": "1845530",
    "end": "1851710"
  },
  {
    "text": "it and we have thousands over the past year runs of new deployments and there's",
    "start": "1851710",
    "end": "1857890"
  },
  {
    "text": "many times that it also looks fails and we believe asking the philosophy better fail then dilute then develop very very",
    "start": "1857890",
    "end": "1865180"
  },
  {
    "text": "slowly so we do see a pattern we do see it happening over here teams learn from there and they improve let's speak a bit about the pattern and",
    "start": "1865180",
    "end": "1872560"
  },
  {
    "text": "how things connect to stuff that we start off in the beginning every new change to every service is delivered",
    "start": "1872560",
    "end": "1877780"
  },
  {
    "text": "into a queue and that queue that processed one at a time in our main",
    "start": "1877780",
    "end": "1882940"
  },
  {
    "text": "pipeline so you can imagine over here service 3 and service to get upgraded and right now the manifests",
    "start": "1882940",
    "end": "1890050"
  },
  {
    "text": "basically includes these two together but it was upgraded in automation it was",
    "start": "1890050",
    "end": "1896230"
  },
  {
    "text": "very important for us always to be able to deploy a new system and we discovered overtime that some services when they",
    "start": "1896230",
    "end": "1902320"
  },
  {
    "text": "give you a new version they didn't support or there was some bug in order to deploy the system from scratch and",
    "start": "1902320",
    "end": "1907390"
  },
  {
    "text": "therefore we developed another cue we don't always run it because it would take much longer for the pipeline to be",
    "start": "1907390",
    "end": "1913780"
  },
  {
    "text": "executed we wanted a very quick return for the developers so we run it like once a day and what happens at the end of the day",
    "start": "1913780",
    "end": "1919900"
  },
  {
    "text": "is we take the final version that was completed the night before and we do a big upgrade we basically upgrade all the services that pass the pipeline and on",
    "start": "1919900",
    "end": "1926800"
  },
  {
    "text": "this we do actually clean deployed so we also tested a major upgrade it could have been 10 could it be sometimes I",
    "start": "1926800",
    "end": "1932440"
  },
  {
    "text": "think some cases even 20 micro-services together this is what's gonna happen eventually in the field but we also made",
    "start": "1932440",
    "end": "1938110"
  },
  {
    "text": "sure that we could do a clean deploy so if something was broken we could quickly open up bugs to the development teams",
    "start": "1938110",
    "end": "1943450"
  },
  {
    "text": "and fix stuff that was developed probably in the past 24 hours and then Sunday comes along and again the queue gets filled up and obviously",
    "start": "1943450",
    "end": "1950620"
  },
  {
    "text": "one service didn't pass the queue it gets rejected it's not in the manifest and therefore Monday the release and the",
    "start": "1950620",
    "end": "1956260"
  },
  {
    "text": "object of the update just sweeps over service 3 and their development team is going to fix their bugs we have learned",
    "start": "1956260",
    "end": "1968080"
  },
  {
    "text": "so much over this past period of the world is developing so rapidly we're",
    "start": "1968080",
    "end": "1974110"
  },
  {
    "text": "always thinking where we can improve for example a pipeline is very serial we",
    "start": "1974110",
    "end": "1980380"
  },
  {
    "text": "want to achieve the point where the individual development team could deliver directly to the customer to the",
    "start": "1980380",
    "end": "1985900"
  },
  {
    "text": "end customer to end user without a dependency on a different team and we're constantly evolving and debating and",
    "start": "1985900",
    "end": "1992800"
  },
  {
    "text": "we're building technologies in order to enable this the cloud is way beyond like",
    "start": "1992800",
    "end": "2000330"
  },
  {
    "start": "1998000",
    "end": "2030000"
  },
  {
    "text": "I said earlier on just the basic services in the compute we're always evaluating the services if it's",
    "start": "2000330",
    "end": "2006090"
  },
  {
    "text": "serverless architecture if it's about deployment tools code called pipeline code deploy and these levels we already",
    "start": "2006090",
    "end": "2012810"
  },
  {
    "text": "have applications integrations with alexa and as developers we're always evaluating what could we leverage from",
    "start": "2012810",
    "end": "2018420"
  },
  {
    "text": "the cloud versus what until today we we developing ourself for the needs our application and we're always in this",
    "start": "2018420",
    "end": "2024010"
  },
  {
    "text": "balance over here by retiring some of our services and using a service at what the cloud is actually providing the",
    "start": "2024010",
    "end": "2030160"
  },
  {
    "start": "2030000",
    "end": "2058000"
  },
  {
    "text": "example of the code pipeline we've got a team which replaced all of our development tools in order to get an",
    "start": "2030160",
    "end": "2036100"
  },
  {
    "text": "end-to-end pipeline running using the Amazon tools it's it's one less thing",
    "start": "2036100",
    "end": "2041350"
  },
  {
    "text": "for us to have to support why do I have to support our own tools over here we can actually leverage it from Amazon so they developed an entire pipeline from",
    "start": "2041350",
    "end": "2047110"
  },
  {
    "text": "whether you commit into the get it gets deployed into the environment for the testing it gets upgrade to the next",
    "start": "2047110",
    "end": "2052240"
  },
  {
    "text": "environment and eventually gets deployed and shipped for all the different production environments for all the customers and my takeaway is that first",
    "start": "2052240",
    "end": "2060580"
  },
  {
    "start": "2058000",
    "end": "2129000"
  },
  {
    "text": "of all these investments this doesn't happen for free it's a huge investment I can't tell you if it's 20 percent if",
    "start": "2060580",
    "end": "2065679"
  },
  {
    "text": "it's 30 percent every organization and each one of their own challenges but it's a big investment and our investment",
    "start": "2065679",
    "end": "2070720"
  },
  {
    "text": "was about breaking this apart taking these big monoliths over here and break them into little pieces constantly leveraging and understanding",
    "start": "2070720",
    "end": "2077800"
  },
  {
    "text": "how the cloud is evolving or new services are coming out of the cloud and that doesn't end it's an ongoing basis",
    "start": "2077800",
    "end": "2083020"
  },
  {
    "text": "every single day what was newly announced over here does it fit into our organization does it fit into our",
    "start": "2083020",
    "end": "2088388"
  },
  {
    "text": "solution over here will we benefit from it and automation Coda's autumn code is",
    "start": "2088389",
    "end": "2094360"
  },
  {
    "text": "code deployment is code today and configuration every single thing has to be automated and if you actually have",
    "start": "2094360",
    "end": "2101290"
  },
  {
    "text": "the right focus on these three things you're going to increase your customer satisfaction we measure our customer",
    "start": "2101290",
    "end": "2108670"
  },
  {
    "text": "satisfaction actually by the NPS score that their customers give them and we monitor this over here we improved our",
    "start": "2108670",
    "end": "2115390"
  },
  {
    "text": "costs we're much cheaper today to run we reduce our costs dramatically and ultimately our developers are much",
    "start": "2115390",
    "end": "2121420"
  },
  {
    "text": "happier as well because they're focused a lot more in the innovation parts and not just on developing and maintaining",
    "start": "2121420",
    "end": "2126790"
  },
  {
    "text": "traditional legacy systems thank you very much if you have any questions feel free",
    "start": "2126790",
    "end": "2136160"
  },
  {
    "start": "2129000",
    "end": "2272000"
  },
  {
    "text": "[Applause]",
    "start": "2136160",
    "end": "2145250"
  },
  {
    "text": "penny wasn't excited microphones on microphone over here yeah well we're",
    "start": "2145250",
    "end": "2155850"
  },
  {
    "text": "around if anybody wants to ask those questions privately",
    "start": "2155850",
    "end": "2159860"
  },
  {
    "text": "well so the question was of cisco.com runs on monoliths I'm speaking over here",
    "start": "2167260",
    "end": "2173930"
  },
  {
    "text": "specifically by the IVP it's what we give it's not the Cisco Dom website that's a total different organization",
    "start": "2173930",
    "end": "2179119"
  },
  {
    "text": "I'm talking about over here this the service that we developed for the service providers to deliver video",
    "start": "2179119",
    "end": "2184490"
  },
  {
    "text": "totally different application I don't know the answer for cisco.com again I",
    "start": "2184490",
    "end": "2205670"
  },
  {
    "text": "didn't send a question cisco.com was not the solution that we spoke about over here do we have web eminences we do have web",
    "start": "2205670",
    "end": "2211940"
  },
  {
    "text": "engines there within our solution as well we do have some of our applications of the weltover web technology many of",
    "start": "2211940",
    "end": "2218240"
  },
  {
    "text": "the communication between our clients and the head and over webcast technology and the web engine could be an Apache",
    "start": "2218240",
    "end": "2224300"
  },
  {
    "text": "server it could be something very very small",
    "start": "2224300",
    "end": "2227559"
  },
  {
    "text": "[Music]",
    "start": "2254670",
    "end": "2257769"
  },
  {
    "text": "so what we did is we so the question",
    "start": "2263260",
    "end": "2275450"
  },
  {
    "start": "2272000",
    "end": "2411000"
  },
  {
    "text": "over here is actually how we broke up our big monolith since the micro-services yes",
    "start": "2275450",
    "end": "2281810"
  },
  {
    "text": "so what again what we haven't is teams that took a feature and they took ownership of this feature over here for",
    "start": "2281810",
    "end": "2288230"
  },
  {
    "text": "example at the vaad the VOD so there's a monolith that and today was supporting it to the clients the team understood",
    "start": "2288230",
    "end": "2293540"
  },
  {
    "text": "from end to end where does that information come from does it come from an external file it's come from within the model of database they developed a",
    "start": "2293540",
    "end": "2300050"
  },
  {
    "text": "new micro service and they started ingesting from a data you just come from the from the external source or from within the model itself they tested it",
    "start": "2300050",
    "end": "2306950"
  },
  {
    "text": "and then you start shifting the API is coming from the clients just little by little start using the micro service the",
    "start": "2306950",
    "end": "2312830"
  },
  {
    "text": "monolith still remained because the monoliths come to support many many functional and functional functional calls we moved over a little by little I",
    "start": "2312830",
    "end": "2319940"
  },
  {
    "text": "would say until we got to the bet the mass probably about 60% of the API is off and then it mentioned we came to",
    "start": "2319940",
    "end": "2324980"
  },
  {
    "text": "that was a really hard the last mile was the hardest part because the last mile is like you know static data stuff it's",
    "start": "2324980",
    "end": "2330110"
  },
  {
    "text": "really intertwined together and over there we had to do a very big change and basically we got everything prepared we",
    "start": "2330110",
    "end": "2335360"
  },
  {
    "text": "had all the services running on their own and still a lot of the calls were still calling this model probably say about 40% of the calls in tow like the",
    "start": "2335360",
    "end": "2342830"
  },
  {
    "text": "static data we had an all the new service have to call this new static data service over here and we worked over there we wrote all the themes",
    "start": "2342830",
    "end": "2348980"
  },
  {
    "text": "together so all the teams to these individual micro services we brought them together what we call the reads one",
    "start": "2348980",
    "end": "2354680"
  },
  {
    "text": "with integration and they basically it took them probably in certain cases three weeks in certain cases mitem",
    "start": "2354680",
    "end": "2360410"
  },
  {
    "text": "taking them two months in order to get all the functionality off but we still still have two miles in the system and",
    "start": "2360410",
    "end": "2366040"
  },
  {
    "text": "unless they were actually being noisy meaning different model is act differently is mana list that you have to shut down",
    "start": "2366040",
    "end": "2371380"
  },
  {
    "text": "parts of them that was really in the in the details and we had to do it until",
    "start": "2371380",
    "end": "2376450"
  },
  {
    "text": "eventually it just became registered in the red in the service registry but not active at all we left it another cycle",
    "start": "2376450",
    "end": "2382569"
  },
  {
    "text": "or two and then we started shutting down all those machines so in the in the",
    "start": "2382569",
    "end": "2387640"
  },
  {
    "text": "beginning starts very quickly you get a few things that you could pull very very very quickly but then you get to the core and that then you need everyone",
    "start": "2387640",
    "end": "2393549"
  },
  {
    "text": "working together there's no magic over there and it's you start by the by by breaking",
    "start": "2393549",
    "end": "2412960"
  },
  {
    "start": "2411000",
    "end": "2482000"
  },
  {
    "text": "up your organization and you define the team and you say you know you're responsible you're responsible for the",
    "start": "2412960",
    "end": "2420730"
  },
  {
    "text": "delivering recommendations from A to Z go learn the domain go learn well the",
    "start": "2420730",
    "end": "2425799"
  },
  {
    "text": "pizzas are today and break it apart into something you know maintain yourself and the team's always were they had that",
    "start": "2425799",
    "end": "2432579"
  },
  {
    "text": "they were accountable from end to end from the feature so as long as they didn't put everything away they were waiting for other teams to",
    "start": "2432579",
    "end": "2438130"
  },
  {
    "text": "develop and fix bugs that they were required to so it actually was a big incentive for them and I gave them the velocity as well so I would say I would",
    "start": "2438130",
    "end": "2443650"
  },
  {
    "text": "start from their organization what we we",
    "start": "2443650",
    "end": "2458200"
  },
  {
    "text": "develop the team's current functionality okay and they had their response we now sometimes they didn't know even",
    "start": "2458200",
    "end": "2463359"
  },
  {
    "text": "understand the monolith they had issues they had to turn to a different team and to eventually ever to have to break it apart but yes we first of all to find",
    "start": "2463359",
    "end": "2469569"
  },
  {
    "text": "functionality and we and it was from end to end even our clients teams over there even develop into the client it's the biggest",
    "start": "2469569",
    "end": "2478059"
  },
  {
    "text": "challenge the common architecture what are your",
    "start": "2478059",
    "end": "2484170"
  },
  {
    "start": "2482000",
    "end": "2582000"
  },
  {
    "text": "common platform services that everyone have to work with you know I can't choose a nice slogging just because I enjoy working with them and you're gonna",
    "start": "2484170",
    "end": "2489839"
  },
  {
    "text": "choose a different logging at the end when two different areas over here the messaging had a message has my deploy but I'm at the point how do I configure",
    "start": "2489839",
    "end": "2496140"
  },
  {
    "text": "the system how do the words come out of the system someone has to operate this deciding these the these these three things in",
    "start": "2496140",
    "end": "2502109"
  },
  {
    "text": "the beginning again and there's always going to be opinions and it's gonna be religions but as an organization you",
    "start": "2502109",
    "end": "2507689"
  },
  {
    "text": "have to understand that at some point if you want to succeed these things have to give the second part is now to give the team the guidelines this is what you",
    "start": "2507689",
    "end": "2514019"
  },
  {
    "text": "have to be working with and they change over time our deployment probably changed three or four times over the past two years because we learned today",
    "start": "2514019",
    "end": "2520829"
  },
  {
    "text": "so it's so many times over of what worked for us what didn't work for us and how to communicate if you want to make another change tomorrow in the",
    "start": "2520829",
    "end": "2526619"
  },
  {
    "text": "deployment pattern we ready to know how to communicate this at if you have a Prante in the deployment we gate you you",
    "start": "2526619",
    "end": "2532650"
  },
  {
    "text": "don't even enter the pipeline so that's the more the other thing I would say is when you do have these guidelines",
    "start": "2532650",
    "end": "2537920"
  },
  {
    "text": "develop them into code as gates so a few containers you have to give sizes",
    "start": "2537920",
    "end": "2544499"
  },
  {
    "text": "otherwise you can just use endless resources it's a requirement it's important for you make sure it's",
    "start": "2544499",
    "end": "2549599"
  },
  {
    "text": "mandated and when you actually get a new container release if that is parameters don't appear just reject the kimono",
    "start": "2549599",
    "end": "2554819"
  },
  {
    "text": "immediately the sooner you could identify this is an issue the sooner the team will be reactive and the sooner to actually learn and we're talking",
    "start": "2554819",
    "end": "2560819"
  },
  {
    "text": "thousands of hours",
    "start": "2560819",
    "end": "2564170"
  },
  {
    "text": "we have a community so you could be community test and you can be community alpha and I could be community alive all",
    "start": "2580920",
    "end": "2587860"
  },
  {
    "start": "2582000",
    "end": "2671000"
  },
  {
    "text": "the rest of your community life and when a new service comes in regardless of where it is entire chain it registers as",
    "start": "2587860",
    "end": "2593860"
  },
  {
    "text": "a new service and then we say you know we're gonna start routing community tests we used over there headers and we",
    "start": "2593860",
    "end": "2600580"
  },
  {
    "text": "user we use a proxy and we've configured the system at deployment time already within console awareness that this",
    "start": "2600580",
    "end": "2606700"
  },
  {
    "text": "inversion exists and then afterwards basically requests come in from any one of us we tag on that header of what",
    "start": "2606700",
    "end": "2613180"
  },
  {
    "text": "community is part of and then we're not no no we're using tags in the headers",
    "start": "2613180",
    "end": "2620770"
  },
  {
    "text": "we're configuring our h8 proxies using console template so every HTI proxy has",
    "start": "2620770",
    "end": "2626770"
  },
  {
    "text": "a console template when they've changed something in the console automatically all the proxies basically build up the",
    "start": "2626770",
    "end": "2631840"
  },
  {
    "text": "new round tables and therefore we start saying okay it's time let's start writing over our test community so if we",
    "start": "2631840",
    "end": "2637090"
  },
  {
    "text": "have some service sitting I don't know three levels down in the chain we're still gonna be with all witching the same gateway cuz that didn't change and",
    "start": "2637090",
    "end": "2643390"
  },
  {
    "text": "header of that load balancer basically says route everyone to the same gateways or to the pool of gateways but when",
    "start": "2643390",
    "end": "2648820"
  },
  {
    "text": "eventually reach the the the H a proxy for that individual service it now is where that's two versions and it knows",
    "start": "2648820",
    "end": "2654640"
  },
  {
    "text": "that right now only about test two the new pool of the new what's called the",
    "start": "2654640",
    "end": "2660490"
  },
  {
    "text": "group of the new version and then we're we're confident and we see it's working very very well then we're at over alpha",
    "start": "2660490",
    "end": "2665920"
  },
  {
    "text": "users when you say this they're all",
    "start": "2665920",
    "end": "2672640"
  },
  {
    "start": "2671000",
    "end": "2847000"
  },
  {
    "text": "reading from the same database some of them ingest them yeah it's in console in",
    "start": "2672640",
    "end": "2682180"
  },
  {
    "text": "console every single time a new service comes up it registers in console I'm a new I'm the service the service group",
    "start": "2682180",
    "end": "2688390"
  },
  {
    "text": "and this is my version over here I wouldn't say they don't always mean from the same database when there is common shared data then yes they're all waiting",
    "start": "2688390",
    "end": "2694330"
  },
  {
    "text": "from the same one but a lot of services come up in they just really build our cache and we have this distinction between which of the databases that we",
    "start": "2694330",
    "end": "2700900"
  },
  {
    "text": "actually have state and persistency and which are the services that are using databases but they using the database",
    "start": "2700900",
    "end": "2706570"
  },
  {
    "text": "just an efficient way to store their data models they want to be able to query it so they're using a database but",
    "start": "2706570",
    "end": "2711910"
  },
  {
    "text": "all that data could be readjusted from crash and then when a new service comes up basically creates itself a new table",
    "start": "2711910",
    "end": "2717250"
  },
  {
    "text": "so doesn't even affect the other one rebuilds all information when it's available it starts serving the communities a little bit about when we",
    "start": "2717250",
    "end": "2723940"
  },
  {
    "text": "get to the live community than we do canary meaning into it so we could do targeted we could take an individual",
    "start": "2723940",
    "end": "2729280"
  },
  {
    "text": "user and we could target to exactly which version of which service to use Netflix have their client side load",
    "start": "2729280",
    "end": "2735190"
  },
  {
    "text": "balancing we are using it on a chip Rox we developed a mechanism and and we get",
    "start": "2735190",
    "end": "2741940"
  },
  {
    "text": "to the live then the customer starts saying I want 10% I want to start throttling it over here so we work we",
    "start": "2741940",
    "end": "2747010"
  },
  {
    "text": "work in both modes in a proxy we have",
    "start": "2747010",
    "end": "2757210"
  },
  {
    "text": "multi region deployments depends on the customers the difficulties are not in a",
    "start": "2757210",
    "end": "2763960"
  },
  {
    "text": "console the difficulties are in the databases are servers that basically have to be master or slave and then you",
    "start": "2763960",
    "end": "2770530"
  },
  {
    "text": "configure the console from one to return the URL from the other data centers that when a service is running on one data",
    "start": "2770530",
    "end": "2775660"
  },
  {
    "text": "center wants to talk it's not actually talking to its the slave so it's actually getting back the URL for the other data center going back and forth",
    "start": "2775660",
    "end": "2782310"
  },
  {
    "text": "that's a lot of times while you try to get rid of a lot of those databases and move to databases which are more more",
    "start": "2782310",
    "end": "2788200"
  },
  {
    "text": "user friendly in a multiracial",
    "start": "2788200",
    "end": "2791460"
  },
  {
    "text": "now we have we have two totally different regions not only not only in",
    "start": "2798989",
    "end": "2805210"
  },
  {
    "text": "AWS souls or other clouds an OpenStack environment in aw he was even more",
    "start": "2805210",
    "end": "2811869"
  },
  {
    "text": "challenging Nonnie that was environment because it's totally different networks even we had a bridge of networks it was",
    "start": "2811869",
    "end": "2816880"
  },
  {
    "text": "a lot more complicated but we got them working you have three in each one the cluster of three and between them they're synchronizing I'm not aware I",
    "start": "2816880",
    "end": "2824170"
  },
  {
    "text": "mean we've got 19 May challenges a lot of you know uh tweaks that we did along the way but I'm not aware we didn't tell",
    "start": "2824170",
    "end": "2848049"
  },
  {
    "start": "2847000",
    "end": "2973000"
  },
  {
    "text": "a team which service they have to focus on we told too much functionality right and we told teams don't develop too much",
    "start": "2848049",
    "end": "2853269"
  },
  {
    "text": "functionality into your new services a year that you're writing so teams start deciding for themselves without the services they need it we really gave",
    "start": "2853269",
    "end": "2859569"
  },
  {
    "text": "them a lot of independency we gave certain guidelines like we did it we wanted to avoid as much as we can calls from one from one micro service to",
    "start": "2859569",
    "end": "2867609"
  },
  {
    "text": "a different one we want the more the communication to be coming like from the backend duplicate the data because over",
    "start": "2867609",
    "end": "2873430"
  },
  {
    "text": "the time you always really is that I'm just gonna use your information already exists and then we come to the live system and you realize wait a second",
    "start": "2873430",
    "end": "2879190"
  },
  {
    "text": "it's you throw out the data after day and I need it to be persistent for two days oh yeah cause you haven't use case",
    "start": "2879190",
    "end": "2884799"
  },
  {
    "text": "why do you do that so teams learn relatively quickly that they really develop their as much as they can to be",
    "start": "2884799",
    "end": "2891640"
  },
  {
    "text": "isolated and depends on themself and I would say that we more broke up the teams and their functionality and they learned on their own what their micro",
    "start": "2891640",
    "end": "2898359"
  },
  {
    "text": "services are because the micro services don't match up exactly to the monolith they gave a hundred percent functionality they gave to the area for",
    "start": "2898359",
    "end": "2905469"
  },
  {
    "text": "a solution today but it's not like a map up you know to monoliths together or happen to be three different more models",
    "start": "2905469",
    "end": "2911769"
  },
  {
    "text": "became fifteen different micro services but they weren't only for that one monolith they were like two other ones together because the team focused right",
    "start": "2911769",
    "end": "2916809"
  },
  {
    "text": "now I'm doing the recommendations all right now doing the entire VOD library",
    "start": "2916809",
    "end": "2921989"
  },
  {
    "text": "so I Penn State we has a specific one we've always had on top the architecture and certain guidelines that we had",
    "start": "2921989",
    "end": "2927610"
  },
  {
    "text": "good way down this project we have teams of multi- like someone's heart one",
    "start": "2927610",
    "end": "2937130"
  },
  {
    "text": "creature and they say well I use this in the model that's it really we need to have another team's like the service out",
    "start": "2937130",
    "end": "2942140"
  },
  {
    "text": "of the model so if I ask the team basically develop another service on",
    "start": "2942140",
    "end": "2948050"
  },
  {
    "text": "their own yeah and we have a very big open open code model so if you ever do",
    "start": "2948050",
    "end": "2956630"
  },
  {
    "text": "need something from a different team you just go into their code and you edit it no there's no code ownership there's",
    "start": "2956630",
    "end": "2963230"
  },
  {
    "text": "just it's a philosophy that we built organization there's more the moderators",
    "start": "2963230",
    "end": "2972130"
  },
  {
    "text": "we have tools sometimes that use it but eventually there is the moderator which is usually the team that stands behind",
    "start": "2972160",
    "end": "2978230"
  },
  {
    "start": "2973000",
    "end": "3028000"
  },
  {
    "text": "the service it's gonna support also in the field and they basically do a code review as well they built into her a lot of automation",
    "start": "2978230",
    "end": "2983810"
  },
  {
    "text": "tools certain certain components use actually the environments in order to test the full system end to end for",
    "start": "2983810",
    "end": "2989360"
  },
  {
    "text": "every single pull request that comes in and right away you get feedback if your pro requests broke something or not some",
    "start": "2989360",
    "end": "2995660"
  },
  {
    "text": "of them have they even review the test and the test coverage and if you delivered a feature that reduced below",
    "start": "2995660",
    "end": "3000880"
  },
  {
    "text": "80% they won't accept your feature because they want you also contribute additional tests to cover it so teams built around basically they're depending",
    "start": "3000880",
    "end": "3008410"
  },
  {
    "text": "on how many other teams worked and stepped into her monolith to contribute code they build up their own type of mechanisms",
    "start": "3008410",
    "end": "3015270"
  },
  {
    "text": "I think it was simpler than we thought",
    "start": "3024490",
    "end": "3030710"
  },
  {
    "start": "3028000",
    "end": "3121000"
  },
  {
    "text": "it was but to convince the organization was kind of like you had to have the",
    "start": "3030710",
    "end": "3035750"
  },
  {
    "text": "right people just support you of course a lot of people why are you doing this these things already exist",
    "start": "3035750",
    "end": "3041030"
  },
  {
    "text": "today it's not gonna give us any in the future and you're sitting behind their your explain to them you know what our",
    "start": "3041030",
    "end": "3046369"
  },
  {
    "text": "velocity for development is today you know our custom we're just not gonna be relevant in two years if this is what happens over here",
    "start": "3046369",
    "end": "3052490"
  },
  {
    "text": "we can't we can't work in the skinny you know you know that you know that man the time it is for a customer to take new",
    "start": "3052490",
    "end": "3057950"
  },
  {
    "text": "information in justice system is will solve that all for you did the entire organization buy into it no but the",
    "start": "3057950",
    "end": "3063410"
  },
  {
    "text": "engineering did we did as I the bomb was",
    "start": "3063410",
    "end": "3076640"
  },
  {
    "text": "easy for example I remember I had to create his matrixes convince people by saying you know I want to reduce the",
    "start": "3076640",
    "end": "3081680"
  },
  {
    "text": "cost to operate by 30% we didn't say we're to increase your velocity of development that came as",
    "start": "3081680",
    "end": "3087349"
  },
  {
    "text": "like a given even though I knew the ROI was better than development velocity then it was challenging and I mean my",
    "start": "3087349",
    "end": "3093920"
  },
  {
    "text": "manager is sitting over here in the room who was the very thing leave her behind us and he basically made it happen",
    "start": "3093920",
    "end": "3100690"
  },
  {
    "text": "go convince your product team that the next feature that will bring the best",
    "start": "3120620",
    "end": "3126930"
  },
  {
    "start": "3121000",
    "end": "3214000"
  },
  {
    "text": "benefit is to do six months of going into silence mode and we didn't I said",
    "start": "3126930",
    "end": "3132090"
  },
  {
    "text": "you know that Big Bang was certain services came very early on but that Big Bang we had to get someone you know like",
    "start": "3132090",
    "end": "3139050"
  },
  {
    "text": "at some point we just said you know what we need right now 15 engineers for the next three months longer than any task",
    "start": "3139050",
    "end": "3144330"
  },
  {
    "text": "and at the end obvious at the end everyone consensus thank you it's like it's amazing but a lot of times thank",
    "start": "3144330",
    "end": "3151860"
  },
  {
    "text": "you very much the challenge is actually to get that buy and to get the to get an investment and sometimes I would say we're very",
    "start": "3151860",
    "end": "3160080"
  },
  {
    "text": "creative sometimes bit on the side of here than outside of here so when they",
    "start": "3160080",
    "end": "3165540"
  },
  {
    "text": "start seeing the customer an example when they provided a new set of ingest",
    "start": "3165540",
    "end": "3171710"
  },
  {
    "text": "to the system they wanted to update it three times a day that was a requirement",
    "start": "3171710",
    "end": "3177810"
  },
  {
    "text": "we saw the product at three times a day you can make changes because you know you watch television at home the schedule changes they have a requirement three times a day it took 24 hours to",
    "start": "3177810",
    "end": "3185610"
  },
  {
    "text": "process a new file so the customer puts in the file and he's sitting down over there you know even your requirements",
    "start": "3185610",
    "end": "3191700"
  },
  {
    "text": "and once he get a little piece on you say by the way the channel change is updated right now in microseconds",
    "start": "3191700",
    "end": "3197460"
  },
  {
    "text": "you gave a new you know you gave a new channel line up over here immediately it's gonna see that feature and what's the magic oh wait a second what else do",
    "start": "3197460",
    "end": "3203790"
  },
  {
    "text": "you wanna for also you're also the TV Guide to see it okay that will be our next feature how do we develop the next",
    "start": "3203790",
    "end": "3209310"
  },
  {
    "text": "feature we actually break out to another model okay we can continue outside",
    "start": "3209310",
    "end": "3215359"
  }
]