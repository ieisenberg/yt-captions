[
  {
    "start": "0",
    "end": "236000"
  },
  {
    "text": "BECKY WEISS: Hi everybody. Welcome\nto re-Invent. My name is Becky Weiss. I am a Principal Engineer.",
    "start": "1600",
    "end": "6700"
  },
  {
    "text": "I work on our Virginia-based EC2\nNetworking team, and the thing we're going to talk\nabout today,",
    "start": "6700",
    "end": "12400"
  },
  {
    "text": "Virtual Private Cloud, VPC. This is what I work on. So, it is my honor and privilege today to introduce you to the concepts\nyou need to know",
    "start": "12400",
    "end": "19800"
  },
  {
    "text": "to create your Virtual Data Center in the AWS cloud using VPC.",
    "start": "19800",
    "end": "26099"
  },
  {
    "text": "And before we begin, to kind of get\nan idea of who's here, how many of you here consider yourself\nnetworking experts?",
    "start": "26100",
    "end": "33700"
  },
  {
    "text": "Like, maybe you have actually set\nup a traditional data center.",
    "start": "33700",
    "end": "39400"
  },
  {
    "text": "Maybe you've set up your own corporate network. And those of you who are networking experts, you know that this takes quite a\nbit of expertise,",
    "start": "39400",
    "end": "47399"
  },
  {
    "text": "quite a bit of doing, you know. You need to know about things like\naddressing, subnetting, routing, firewalls.",
    "start": "47400",
    "end": "55300"
  },
  {
    "text": "You need to know about services like DNS that you might run in your network. And even after you do that,",
    "start": "55300",
    "end": "60600"
  },
  {
    "text": "it takes quite a bit of doing to\nmaintain that and to see what's actually going on. Now, how many of you here are not",
    "start": "60600",
    "end": "66500"
  },
  {
    "text": "from that traditional networking\nbackground? You're from a more application development background where you want to build the thing",
    "start": "66500",
    "end": "73500"
  },
  {
    "text": "that makes your business what it is and you want the network to just\nkind of work? Well, this talk is VPC,",
    "start": "73500",
    "end": "79400"
  },
  {
    "text": "and this talk is for both of you. I'm going to show you some of the\nthings you can do with your VPC",
    "start": "79400",
    "end": "86000"
  },
  {
    "text": "that give you a lot of that control that you have in a traditional networking\nenvironment to make your network work exactly\nthe way you want,",
    "start": "86000",
    "end": "93300"
  },
  {
    "text": "bend it to your will, as it were. But because it's virtual, it is easier, it is more flexible,",
    "start": "93300",
    "end": "100400"
  },
  {
    "text": "and it is much more visible what\nis going on than ever before.",
    "start": "100400",
    "end": "105800"
  },
  {
    "text": "How many of you here are already\nquite familiar with VPC? Experts in VPC? Alright. You're in the wrong place.",
    "start": "105800",
    "end": "112100"
  },
  {
    "text": "So, this talk is going to be an overview\nof what you can do.",
    "start": "112100",
    "end": "118000"
  },
  {
    "text": "It's no accident that this talk is happening very early in re-Invent. There are a whole lot more deep dives",
    "start": "118000",
    "end": "124600"
  },
  {
    "text": "into various aspects of VPC that I'm just going to touch on today. So, you definitely want to look for\nthose deep dives later",
    "start": "124600",
    "end": "131000"
  },
  {
    "text": "if anything here piques your interest\nto learn more about. So, let's begin.",
    "start": "131000",
    "end": "136600"
  },
  {
    "text": "And let's back way up. Let's start with the elastic compute\ncloud EC2 instance. Now, an EC2 instance,",
    "start": "136600",
    "end": "143500"
  },
  {
    "text": "it is a virtual machine running in the cloud.",
    "start": "143500",
    "end": "148700"
  },
  {
    "text": "And the E is for elastic, which means you're probably running\nmultiple of them. In fact, if you're doing the cloud right,",
    "start": "148700",
    "end": "154200"
  },
  {
    "text": "you're probably taking advantage of this and scaling up when you need more and scaling down when you need less.",
    "start": "154200",
    "end": "159700"
  },
  {
    "text": "Now, of course, these are virtual machines which means they're not sitting under\nyour desk somewhere, which means the only way to do anything\nuseful with these instances,",
    "start": "159700",
    "end": "167100"
  },
  {
    "text": "the only way to get into or out of\nthem is with a network.",
    "start": "167100",
    "end": "173200"
  },
  {
    "text": "And these EC2 instances, they're\nrunning on hosts and our Amazon data centers, 11 regions\naround the world.",
    "start": "173200",
    "end": "179500"
  },
  {
    "text": "And what the VPC is, in short, the VPC is your network that your\nEC2 instances run in the cloud,",
    "start": "179500",
    "end": "186100"
  },
  {
    "text": "and that's really the long and short of it. So, but the thing is, the P is for private.",
    "start": "186100",
    "end": "191700"
  },
  {
    "text": "In a VPC, you get to call a lot of\nthese shots. You get to decide exactly how this\nnetwork looks",
    "start": "191700",
    "end": "198099"
  },
  {
    "text": "and build it exactly the way that you want. For example, you get to choose what\nIP addresses you use.",
    "start": "198100",
    "end": "206099"
  },
  {
    "text": "Here, I'll use some IP address. You get to make this choice. And in fact, since this is your own network,",
    "start": "206100",
    "end": "212400"
  },
  {
    "text": "you're not sharing it with other customers, it is your own logical network, if you choose the same IP addresses as you,",
    "start": "212400",
    "end": "218400"
  },
  {
    "text": "that's totally fine. These are isolated. Again, your data center. You might decide you want your network",
    "start": "218400",
    "end": "225100"
  },
  {
    "text": "split up into various sub-networks. You might do that so you can have\npart of it face the Internet and have public IP addresses and\npart of it not.",
    "start": "225100",
    "end": "233900"
  },
  {
    "text": "So, what we're going to talk about today is, like I said, this is an overview into VPC.",
    "start": "233900",
    "end": "241400"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "We are going to introduce you to\nthe vocabulary that you need to get familiar enough with VPC concepts",
    "start": "241400",
    "end": "248500"
  },
  {
    "text": "so that you can go home and start\nbuilding your VPC and be productive with it. The core set of things that you need to know",
    "start": "248500",
    "end": "255100"
  },
  {
    "text": "to be productive with VPC for most customers is actually not that much, and I'll\nwalk you through that.",
    "start": "255100",
    "end": "262200"
  },
  {
    "text": "And because these things are always better with a concrete example, we're going to do that by way -",
    "start": "262200",
    "end": "267900"
  },
  {
    "text": "we're going to set up the simplest\npossible VPC out there. We're going to set up a simple, Internet\nconnected VPC,",
    "start": "267900",
    "end": "274800"
  },
  {
    "text": "which for many of you, if not most of you, that is 100% adequate to meet your\nneeds in the cloud.",
    "start": "274800",
    "end": "280400"
  },
  {
    "text": "But, we'll walk through the details so that you can see exactly what\nyour VPC is built of.",
    "start": "280400",
    "end": "286199"
  },
  {
    "text": "And then finally, we're going to talk about more advanced connectivity scenarios. If you need something beyond a network",
    "start": "286200",
    "end": "294400"
  },
  {
    "text": "that has connectivity to the Internet,\nwe'll talk about that. We'll also talk about some services  that make manageability in your VPC\nway, way easier",
    "start": "294400",
    "end": "302600"
  },
  {
    "text": "than a traditional networking environment. So, let's get started. We're going to set up an Internet\nconnected VPC.",
    "start": "302600",
    "end": "310300"
  },
  {
    "text": "Now, I should mention that for those of you who have a new account with us since\nabout late 2013,",
    "start": "310300",
    "end": "317300"
  },
  {
    "text": "this VPC that I'm going to set up here, you already have one in your account. We have created one for you.",
    "start": "317300",
    "end": "323100"
  },
  {
    "text": "It's called your Default VPC. If you just go and launch EC2 instances and you have one of these default VPCs,",
    "start": "323100",
    "end": "329400"
  },
  {
    "text": "the instances just show up as part\nof your VPC. Of course, you can create other VPCs,",
    "start": "329400",
    "end": "334500"
  },
  {
    "text": "you can do other things, but a lot of this stuff here is already\ndone by default. But, I want to walk you through it anyway",
    "start": "334500",
    "end": "340199"
  },
  {
    "text": "so that you can really understand\nwhat it's made out of. And we're going to do this in four steps.",
    "start": "340200",
    "end": "346600"
  },
  {
    "text": "First of all, a network is made out\nof IP addresses, right. So, we're going to have to do something\nabout addressing.",
    "start": "346600",
    "end": "354000"
  },
  {
    "text": "Networks are made out of subnetworks. So, we're going to talk about that and why you would do that and what\nthat means.",
    "start": "354000",
    "end": "359599"
  },
  {
    "text": "And then, we're going to talk about how you get between your network\nand the Internet, and that's routing, and that's where\nthe magic happens in a VPC.",
    "start": "359600",
    "end": "366599"
  },
  {
    "text": "We're going to keep coming back and\nback to this topic. And then finally, your VPC is made\nout of security.",
    "start": "366600",
    "end": "372199"
  },
  {
    "text": "You want to make sure that the traffic\nthat you want gets to your EC2 instances and your VPC and not any of the traffic that you\ndon't want.",
    "start": "372200",
    "end": "381400"
  },
  {
    "text": "So, first let's get - like I said, you choose the IP addresses for your VPC. So, let's choose them.",
    "start": "381400",
    "end": "387500"
  },
  {
    "text": "And just a word on notation. Many of you will be familiar with\nthis notation,",
    "start": "387500",
    "end": "392599"
  },
  {
    "start": "390000",
    "end": "390000"
  },
  {
    "text": "but in case you're not, you're going to see CIDR notation here, Classless Inter-Domain Routing.",
    "start": "392600",
    "end": "398400"
  },
  {
    "text": "It's a convention for specifying\nranges of IP addresses. I'm giving you an example here.",
    "start": "398400",
    "end": "403500"
  },
  {
    "text": "It looks like an IP address followed\nby a slash, followed by a number. And all of that means is that if\nI take that IP address",
    "start": "403500",
    "end": "410000"
  },
  {
    "text": "and I write it out as a 32-bit binary number, the /16 here, it means hold the high\n16 bits fixed,",
    "start": "410000",
    "end": "418500"
  },
  {
    "text": "and the other bits can vary. In English, what this notation means,\n172.31.0.0/16,",
    "start": "418500",
    "end": "426500"
  },
  {
    "text": "that means all of the addresses that are 172.31.something.something.",
    "start": "426500",
    "end": "432500"
  },
  {
    "text": "So, you're going to see this notation\nall over the place. Don't be thrown by it. This is what it means.",
    "start": "432500",
    "end": "438200"
  },
  {
    "text": "Okay. So, let's choose. We have this VPC, let's choose an\nIP address range for it.",
    "start": "438200",
    "end": "443400"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "There, I chose one. Okay, what went into that choice? What should you should choose for your IP address range for your VPC?",
    "start": "443400",
    "end": "451199"
  },
  {
    "text": "First of all, you'll notice, those of you who are familiar with\nIP addressing schemes,",
    "start": "451200",
    "end": "457000"
  },
  {
    "text": "you'll notice that I choose an RFC1918 range. Now, RFC1918 is an RFC that defines\naddress ranges",
    "start": "457000",
    "end": "466300"
  },
  {
    "text": "that are customarily used for private networks. And the P is for private. That's what we're creating here.",
    "start": "466300",
    "end": "471600"
  },
  {
    "text": "So, unless you have a reason to do otherwise, I recommend that you choose an RFC1918\nrange for your IP address",
    "start": "471600",
    "end": "477800"
  },
  {
    "text": "as it'll be much easier for other people, people with a networking background\nwho see your network, to kind of intuit what's going here.",
    "start": "477800",
    "end": "486300"
  },
  {
    "text": "And then, I chose /16 for the size of my VPC. Now, /16, that's actually the biggest VPC",
    "start": "486300",
    "end": "492300"
  },
  {
    "text": "that we allow you to create today. That's 64,000 addresses.",
    "start": "492300",
    "end": "498199"
  },
  {
    "text": "And you know what, I hope you use them all. But even if you don't, even if you only plan to launch a couple of EC2 instances here and there,",
    "start": "498200",
    "end": "504900"
  },
  {
    "text": "your deployment's not going to be that big, I still recommend that you make a\nnice, big VPC for it,",
    "start": "504900",
    "end": "511600"
  },
  {
    "text": "unless you have a reason to do otherwise, and we'll talk about that in just a second. But creating a nice big VP -",
    "start": "511600",
    "end": "517800"
  },
  {
    "text": "unlike almost everything else that\nwe're going to talk about today, everything is so easy and configurable.",
    "start": "517800",
    "end": "524700"
  },
  {
    "text": "That's the V in VPC. It's so easy to do. The IP address range that you choose\nfor your VPC",
    "start": "524700",
    "end": "530100"
  },
  {
    "text": "is fixed for the life of the VPC. So, you want to make sure that it's big enough for you to grow into.",
    "start": "530100",
    "end": "535500"
  },
  {
    "text": "So, it costs you nothing to allocate a huge address space\nfor your VPC.",
    "start": "535500",
    "end": "540700"
  },
  {
    "text": "You may as well do so. The only thing you need to think about with choosing this address range",
    "start": "540700",
    "end": "546500"
  },
  {
    "text": "is that we're going to talk about\nthis later today and you may decide you want to connect your VPC",
    "start": "546500",
    "end": "556300"
  },
  {
    "text": "with other networks that you have like a corporate data center or maybe even another VPC.",
    "start": "556300",
    "end": "562600"
  },
  {
    "text": "There are scenarios for all of this, and we enable all of this. Now, for the reasons that you think,",
    "start": "562600",
    "end": "568200"
  },
  {
    "text": "your life will be a lot easier if you're trying to connect to another\naddress range that you don't overlap with.",
    "start": "568200",
    "end": "574700"
  },
  {
    "text": "So, avoid overlapping with other networks that you might be connecting with\nin the future, and we'll talk about those advanced\nconnectivity scenarios later.",
    "start": "574700",
    "end": "581700"
  },
  {
    "text": "Okay, enough about addressing. Let's divide up our VPC into something\ncalled subnets.",
    "start": "581700",
    "end": "588100"
  },
  {
    "text": "Now, as you know, we've got 11 regions\naround the world. AWS is in 11 regions around the world. You can launch VPCs in any of them.",
    "start": "588100",
    "end": "596100"
  },
  {
    "text": "Your VPC in one of these regions, it is your network for your EC2 instances\nin that region.",
    "start": "596100",
    "end": "602800"
  },
  {
    "text": "Now, those of you who kind of pay attention to our availability story, you'll know that our regions are\nsub divided,",
    "start": "602800",
    "end": "609400"
  },
  {
    "text": "each of them into multiple availability zones. Who here cares about building high\navailability applications?",
    "start": "609400",
    "end": "615500"
  },
  {
    "text": "Oh boy, I sure do, right? Availability zones are logically\ndistinct parts of our VPC,",
    "start": "615500",
    "end": "625000"
  },
  {
    "text": "connected with a low-latency link, but they are designed with availability in mind. They are designed to have separate\nfailure characteristics",
    "start": "625000",
    "end": "632300"
  },
  {
    "text": "from each other. And you know, to go back to our example here, we have this VPC.",
    "start": "632300",
    "end": "638300"
  },
  {
    "start": "636000",
    "end": "636000"
  },
  {
    "text": "For our running example here, we're going to use the example of\nthe Ireland region, eu-west-1.",
    "start": "638300",
    "end": "645899"
  },
  {
    "text": "Now, eu-west-1 has three availability\nzones in it. They are called eu-west-1a, 1b, and\n1c.",
    "start": "645900",
    "end": "653100"
  },
  {
    "text": "My VPC is my network in the Ireland region and I want to deploy my application across all of these availability zones",
    "start": "653100",
    "end": "660300"
  },
  {
    "text": "so that I can take advantage of the -  so that my own application can be\nhigh availability",
    "start": "660300",
    "end": "666900"
  },
  {
    "text": "deployed across these multiple availability zones. So, I actually want my VPC to span\nall of them.",
    "start": "666900",
    "end": "673399"
  },
  {
    "text": "And this is where subnets come into\nthe picture. A subnet is a part of your VPC that lives inside an availability zone.",
    "start": "673400",
    "end": "682000"
  },
  {
    "text": "So, I recommend when you're creating your VPC and you're getting started with your VPC that you create a subnet in each\nof the availability zones.",
    "start": "682000",
    "end": "689200"
  },
  {
    "text": "So, in each of your subnets that\nyou create, you're going to allocate for it a\nsub range of addresses",
    "start": "689200",
    "end": "694700"
  },
  {
    "text": "from the range of addresses that\nyou allocated for your VPC. So, here you can see I've said this\nsubnetting,",
    "start": "694700",
    "end": "700800"
  },
  {
    "text": "it's going to have addresses 172.31.0.something, 172.31.1.something here,",
    "start": "700800",
    "end": "708500"
  },
  {
    "text": "and you'll notice that I choose a\n/24 for my subnet size, and this, unless you have a reason\nto do otherwise,",
    "start": "708500",
    "end": "714700"
  },
  {
    "text": "I recommend that you start this way. A subnet in each availability zone\nwith a /24 size.",
    "start": "714700",
    "end": "721300"
  },
  {
    "text": "/24 gets you 251 IP addresses in\nthe subnet.",
    "start": "721300",
    "end": "726600"
  },
  {
    "text": "Now, those of you who are paying attention are thinking wait, 2 to the 8th,\nthat's 256. That's not 251.",
    "start": "726600",
    "end": "733400"
  },
  {
    "text": "That is because we reserve the low\nfour IP address and the broadcast IP addresses in\nthe subnet for our own use.",
    "start": "733400",
    "end": "740600"
  },
  {
    "text": "So, a /24 subnet actually gets you\n251 IP addresses. Now, depending upon your point of view,",
    "start": "740600",
    "end": "747400"
  },
  {
    "text": "251 IP addresses in the availability zone is either a lot or moderate, and\nthat's fine.",
    "start": "747400",
    "end": "754300"
  },
  {
    "text": "You can always create more subnets later. You can have multiple subnets in\nan availability zone.",
    "start": "754300",
    "end": "760300"
  },
  {
    "text": "Subnets live inside the availability zone, but you can have multiple subnets\nin the availability zone. And the reason why I didn't make\nthese subnets huge",
    "start": "760300",
    "end": "767700"
  },
  {
    "text": "is I didn't want to blow my entire\nlarge IP address range from my VPC in one go.",
    "start": "767700",
    "end": "774100"
  },
  {
    "text": "So, there's plenty of room in this\naddress range around these subnets for me to create\nmore subnets as I need them,",
    "start": "774100",
    "end": "780400"
  },
  {
    "text": "and you'll see later why you might\nwant additional subnets. Another thing, since we're creating\nan internet connected VPC,",
    "start": "780400",
    "end": "786900"
  },
  {
    "text": "which means my intention is to have every EC2 instance in the VPC have a public IP address,",
    "start": "786900",
    "end": "793800"
  },
  {
    "text": "there's a setting on the VPC. This is a console screenshot. You're going to see a lot of these\nin my talk today",
    "start": "793800",
    "end": "799400"
  },
  {
    "text": "because we're going to go into very\nconcrete detail. There's a setting here. If you check it, it will make it",
    "start": "799400",
    "end": "805900"
  },
  {
    "text": "so that every time you launch an\nEC2 instance into your subnet, it automatically comes with a public\nIP address.",
    "start": "805900",
    "end": "812199"
  },
  {
    "text": "Sometimes, you want that. Sometimes, you don't. We want it for this example, so I'm\ngoing to check that.",
    "start": "812200",
    "end": "818500"
  },
  {
    "text": "So, you check this and you get a\npublic IP address with every EC2 instance that you launch.",
    "start": "818500",
    "end": "824100"
  },
  {
    "text": "So, great, we got our subnet. To recap, here's what we've done so far. We've created a VPC in the Ireland region.",
    "start": "824100",
    "end": "830100"
  },
  {
    "text": "We've given it a nice, large address\nrange, /16. We've created moderately sized subnets,",
    "start": "830100",
    "end": "835900"
  },
  {
    "text": "one in each of the three availability\nzones in the Ireland region. So, now I can launch EC2 instances\nanywhere in Ireland.",
    "start": "835900",
    "end": "842399"
  },
  {
    "text": "And you know, I've given you some\nadvice about sizes. I keep saying unless you have a reason\nto do something else.",
    "start": "842400",
    "end": "849000"
  },
  {
    "text": "We're going to talk about those reasons to do something else later. But let's set up our simple VPC right\nnow and let's continue.",
    "start": "849000",
    "end": "855000"
  },
  {
    "text": "And this is where things get interesting\nin your VPC. Create a route to the Internet.",
    "start": "855000",
    "end": "860699"
  },
  {
    "text": "Many of you hear the word route and think routers, think complicated.",
    "start": "860700",
    "end": "866300"
  },
  {
    "text": "It's actually - your VPC comes with\na route table and it's a very, very simple concept.",
    "start": "866300",
    "end": "871899"
  },
  {
    "text": "The route table for your VPC has\na list of rules that tell it where the traffic is\nsupposed to go,",
    "start": "871900",
    "end": "877500"
  },
  {
    "text": "and anybody can look at them and anybody can understand them and anybody can see what's happening\nin your VPC.",
    "start": "877500",
    "end": "885199"
  },
  {
    "text": "So, let's talk about these route tables. The route tables contain rules for saying where your packets should go.",
    "start": "885200",
    "end": "891899"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "Your VPC comes with a default route table which is the route table that governs how routing works in your whole VPC.",
    "start": "891900",
    "end": "899500"
  },
  {
    "text": "You can override this on a subnet\nby subnet basis. That's a topic for later on. But let's go look at that default\nroute table",
    "start": "899500",
    "end": "907399"
  },
  {
    "text": "that came with my VPC. So, all I did was set up my VPC and\nsome subnets, and now I'm going to look at the\nroute table.",
    "start": "907400",
    "end": "914399"
  },
  {
    "text": "So, if I look at this route table, I see that there is exactly one rule here.",
    "start": "914400",
    "end": "919600"
  },
  {
    "text": "So, let me look at what this rule says. This rule says it has an address\nrange of 172.31.0.0/16.",
    "start": "919600",
    "end": "928700"
  },
  {
    "text": "So, that's the address range of my VPC. What that rule means, this rule is\nabout packets",
    "start": "928700",
    "end": "934400"
  },
  {
    "text": "that look like they're going to other\nEC2 instances within my VPC. And you'll see that it goes local.",
    "start": "934400",
    "end": "941900"
  },
  {
    "text": "The routing for these packets that are destined for other EC2 instances in my VPC, they are routed locally within my VPC.",
    "start": "941900",
    "end": "950800"
  },
  {
    "text": "Now, if I try to send a packet outside my VPC, we'll have an address outside that range,",
    "start": "950800",
    "end": "956100"
  },
  {
    "text": "and I don't have a routing rule for it, which means it goes nowhere. It gets dropped.",
    "start": "956100",
    "end": "962000"
  },
  {
    "text": "So, what I have here is a party in\nmy VPC and nobody's invited. And this is not what I want, right?",
    "start": "962000",
    "end": "967500"
  },
  {
    "text": "I wanted an Internet connected VPC. So, I need a rule that says what\nto do with those packets",
    "start": "967500",
    "end": "974300"
  },
  {
    "text": "that are destined for the Internet. So, enter the Internet gateway.",
    "start": "974300",
    "end": "980000"
  },
  {
    "start": "978000",
    "end": "978000"
  },
  {
    "text": "So, Internet gateway, it is a resource that you can create\nand attach to your VPC.",
    "start": "980000",
    "end": "986600"
  },
  {
    "text": "And the short version's IGW, Internet gateway, and it's a thing you send packets to",
    "start": "986600",
    "end": "992600"
  },
  {
    "text": "if you want them to go to the Internet. So, I've created this Internet gateway, and now I create a rule.",
    "start": "992600",
    "end": "999900"
  },
  {
    "text": "I create a rule saying 0.0.0.0/0 and that means everything gets routed\nto the IGW,",
    "start": "999900",
    "end": "1007000"
  },
  {
    "text": "to the Internet gateway. And the way these route rules get applied",
    "start": "1007000",
    "end": "1012100"
  },
  {
    "text": "is the most specific routing rule\nthat applies to your packet is the one that dominates.",
    "start": "1012100",
    "end": "1017900"
  },
  {
    "text": "So, if you're sending a packet from one EC2 instance to another\nwithin the VPC,",
    "start": "1017900",
    "end": "1023899"
  },
  {
    "text": "it'll hit that 172.31 rule and get\nrouted locally, which is what you want.",
    "start": "1023900",
    "end": "1029199"
  },
  {
    "text": "If you're sending a packet anywhere else, it'll get routed to the Internet\ngateway and then Internet, which is what you want.",
    "start": "1029200",
    "end": "1035199"
  },
  {
    "text": "Now, I've had customers ask me what\nis an Internet gateway. Is this a router you guys have?",
    "start": "1035200",
    "end": "1041800"
  },
  {
    "text": "Is it a single point of failure?\nIs it a thing? Well, no, it's not a thing. It actually is a thing.",
    "start": "1041800",
    "end": "1047300"
  },
  {
    "text": "It's a highly available lots of things that gets traffic between the Internet\nand your VPC. You do not need to worry about it\nas a single point of failure.",
    "start": "1047300",
    "end": "1054899"
  },
  {
    "text": "It's an abstraction. It's an abstraction that makes this\nthing very easy to reason about. 0/0 goes to the internet.",
    "start": "1054900",
    "end": "1061500"
  },
  {
    "text": "That's what you need to know. The rest just works. So, here, everything that doesn't\ngo to the VPC,",
    "start": "1061500",
    "end": "1067799"
  },
  {
    "text": "I send it to the Internet. So, great. I have a route to the\nInternet now, but I don't necessarily want everything\nfrom the Internet",
    "start": "1067800",
    "end": "1075300"
  },
  {
    "text": "coming to and from everything in my VPC. I want to control that. I want to make sure that I get exactly\nthe traffic that I want,",
    "start": "1075300",
    "end": "1083100"
  },
  {
    "text": "only the traffic that I want. VPC gives you two tools to control this.",
    "start": "1083100",
    "end": "1088400"
  },
  {
    "text": "One is Network ACL, Network Access\nControl Lists, and the other is Security Groups.",
    "start": "1088400",
    "end": "1093800"
  },
  {
    "text": "First, let's talk about Network ACLs. It's a more straightforward concept, even if it's something that fewer\ncustomers use.",
    "start": "1093800",
    "end": "1101000"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "For those of you who come from a\ntraditional networking environment, the analogous concept here is a stateless\nfirewall rules.",
    "start": "1101000",
    "end": "1107700"
  },
  {
    "text": "So, you'll see that I have one that\ngoverns my entire VPC.",
    "start": "1107700",
    "end": "1113100"
  },
  {
    "text": "I can override it on a subnet by\nsubnet basis. If I go look at the rules,",
    "start": "1113100",
    "end": "1118500"
  },
  {
    "text": "you'll see these look a lot like\nfirewall rules. They’ve got some address ranges. They're applied in a certain order\naccording to that rule number.",
    "start": "1118500",
    "end": "1125900"
  },
  {
    "text": "If you look at my rules here, you see I'm not really doing anything\ninteresting with my network ACL, and many of you won't, but you can.",
    "start": "1125900",
    "end": "1133900"
  },
  {
    "text": "If you have stateless firewall rules you'd like to bring over to your VPC, this is how you would - stateless firewall rules you'd like\nto bring over from your network,",
    "start": "1133900",
    "end": "1141400"
  },
  {
    "text": "this is how you would do it. The way you read this is that rule\n100 gets applied first.",
    "start": "1141400",
    "end": "1150200"
  },
  {
    "text": "It matches everything because it's\na 0/0 rule, and I'm allowing it. So, this rule isn't doing anything\nthat interesting,",
    "start": "1150200",
    "end": "1156399"
  },
  {
    "text": "but I could add more if I wanted to. Stateless means that they're applied -",
    "start": "1156400",
    "end": "1161799"
  },
  {
    "text": "it's a blunt instrument. They're applied blindly without regard for whether this packet is part of\nan established connection or not.",
    "start": "1161800",
    "end": "1170100"
  },
  {
    "text": "This is just a blunt hammer. These rules get applied in the order specified to the packet that they see.",
    "start": "1170100",
    "end": "1177800"
  },
  {
    "text": "Now, let's talk about what you're almost certainly going\nto be using to get security in your VPC, and\nthat's security groups.",
    "start": "1177800",
    "end": "1184800"
  },
  {
    "text": "Now, security groups are a very flexible\nabstraction for doing the equivalent of stateful\nfirewall rules in your VPC.",
    "start": "1184800",
    "end": "1192900"
  },
  {
    "text": "And they should architected after\nthe architecture of your application.",
    "start": "1192900",
    "end": "1198900"
  },
  {
    "text": "Let me explain what I mean by that. So, let's use a very hypothetical,\nvery naive example",
    "start": "1198900",
    "end": "1204800"
  },
  {
    "text": "of an application that I'm running in my VPC. And I'll say that my - and those of you who have ever run\na non-trivial application,",
    "start": "1204800",
    "end": "1212200"
  },
  {
    "text": "you know that all these instances here, they're not all doing the same thing. There's several different tiers, several different roles, several\nthings going on here.",
    "start": "1212200",
    "end": "1219600"
  },
  {
    "text": "So, for this simple example, let's say I've got a bunch of web\nservers over here. Web servers, I'm building a public\nweb service.",
    "start": "1219600",
    "end": "1226700"
  },
  {
    "text": "I really do want traffic from the\nInternet onto these instances. And then, when these web servers\naccept requests",
    "start": "1226700",
    "end": "1234200"
  },
  {
    "text": "from all my customers on the Internet, I want them to turn around and make\nrequests to my backend",
    "start": "1234200",
    "end": "1239799"
  },
  {
    "text": "to get whatever information my customer needs in order to serve their request. And these backends,",
    "start": "1239800",
    "end": "1246100"
  },
  {
    "text": "there's really no reason for anybody\non the Internet to be reaching into the backends.",
    "start": "1246100",
    "end": "1251600"
  },
  {
    "text": "They're backends. They're not web servers. They're not outward facing web servers. So, this is kind of the setup.",
    "start": "1251600",
    "end": "1256800"
  },
  {
    "text": "In reality, there's sort of more\nto it than this. If I were actually building an application\nthe cloudy way,",
    "start": "1256800",
    "end": "1262100"
  },
  {
    "text": "I'd probably put it an elastic load\nbalancer in front of this, but I don't have all of this because I want this to be simple.",
    "start": "1262100",
    "end": "1268600"
  },
  {
    "text": "So, security groups. So, what I do is I group each type\nof EC2 instance",
    "start": "1268600",
    "end": "1274700"
  },
  {
    "text": "into a security group. I have a security group named MyWebServers and a security group called MyBackends.",
    "start": "1274700",
    "end": "1282600"
  },
  {
    "text": "Now, security groups are groups. They're groups of EC2 instances that have various rules applied to them.",
    "start": "1282600",
    "end": "1289400"
  },
  {
    "text": "Now, if I think about from my application\narchitecture point of view, think about in English what kind\nof security rules",
    "start": "1289400",
    "end": "1295100"
  },
  {
    "text": "you want applied to each of these groups. Well, to my web servers,",
    "start": "1295100",
    "end": "1300799"
  },
  {
    "text": "I want to allow web traffic from anywhere. That's what I want. I don't want traffic on arbitrary ports.",
    "start": "1300800",
    "end": "1307100"
  },
  {
    "text": "I want the web traffic to these instances, but I want it from anywhere. And then, into the backends,",
    "start": "1307100",
    "end": "1313500"
  },
  {
    "text": "I only want to allow traffic from\nmy web servers. Those are the only hosts that have\nany business",
    "start": "1313500",
    "end": "1319100"
  },
  {
    "text": "talking to my backend. And security groups allow you to\nuse this language almost verbatim",
    "start": "1319100",
    "end": "1325900"
  },
  {
    "text": "to set up security in your application. So, if we go to the security groups console,",
    "start": "1325900",
    "end": "1332200"
  },
  {
    "text": "we look at the security group. I'll show you what these would actually\nlook like in practice. So, if I wanted to open up HTTP port\n80 to the world",
    "start": "1332200",
    "end": "1340899"
  },
  {
    "text": "for these web servers instances, I would put one rule here. I would say HTTP port 80, TCP traffic.",
    "start": "1340900",
    "end": "1348000"
  },
  {
    "start": "1346000",
    "end": "1346000"
  },
  {
    "text": "I'm going to open this to 0/0. Now, you notice I don't have any rules here about any other ports, any other protocols.",
    "start": "1348000",
    "end": "1354500"
  },
  {
    "text": "That's intentional. If there isn't a security group rule for a certain kind of traffic, it\ngets rejected,",
    "start": "1354500",
    "end": "1362500"
  },
  {
    "text": "which is what I want. Now, let's look at the backend security\ngroup rule.",
    "start": "1362500",
    "end": "1367899"
  },
  {
    "text": "You can have multiple rules, but I have just one here. For the backend security group rule,",
    "start": "1367900",
    "end": "1373100"
  },
  {
    "text": "you'll see that this rule's a little\nbit more interesting. If you notice here, so, in my imaginary example, it's port\n2345",
    "start": "1373100",
    "end": "1380200"
  },
  {
    "text": "that the web servers reach into the backends. That's what that means. So, I've written this TCP rule",
    "start": "1380200",
    "end": "1385700"
  },
  {
    "text": "that allows TCP traffic on port 2345, and you'll see that the source",
    "start": "1385700",
    "end": "1391800"
  },
  {
    "text": "is not an IP address or IP address range or list of IP address ranges. It is another security group.",
    "start": "1391800",
    "end": "1398500"
  },
  {
    "text": "Now, think about that for a minute. That is so flexible, because in a traditional world, if you wanted to permit traffic from\none group of hosts to another,",
    "start": "1398500",
    "end": "1408600"
  },
  {
    "text": "somebody needed to be managing a\nlist of IP addresses or IP address ranges,",
    "start": "1408600",
    "end": "1414000"
  },
  {
    "text": "and they need to make sure it stayed current and it wasn't allowing things it should, and you'd have to kind of map that back.",
    "start": "1414000",
    "end": "1420300"
  },
  {
    "text": "Here, it's totally clear what's going on. I'm referring to this other web service\nsecurity group, allowing it in, and in fact,",
    "start": "1420300",
    "end": "1426500"
  },
  {
    "text": "if I have this nice, elastic application where I'm always adding new web servers and taking away web servers, that's fine.",
    "start": "1426500",
    "end": "1432200"
  },
  {
    "text": "I don't need to think about its membership. The right things just happen here. So, that's security groups.",
    "start": "1432200",
    "end": "1439600"
  },
  {
    "start": "1438000",
    "end": "1438000"
  },
  {
    "text": "A couple more words on security groups and VPC. I showed you ingress in bound security\ngroup rules.",
    "start": "1439600",
    "end": "1445800"
  },
  {
    "text": "Both security groups and network ACLs allow you to define both ingress rules, which are the most commonly used,",
    "start": "1445800",
    "end": "1451800"
  },
  {
    "text": "and egress rules, outbound rules. Those are really useful if you need\nto get on top of making sure that your instances",
    "start": "1451800",
    "end": "1458700"
  },
  {
    "text": "are only initiating connections to\nother hosts.",
    "start": "1458700",
    "end": "1466500"
  },
  {
    "text": "As a best practice, you should do what I did with that backend security group,",
    "start": "1466500",
    "end": "1471700"
  },
  {
    "text": "where I allowed in traffic by reference\nfrom other groups. Avoid trying to have to manage laundry\nlists of IP addresses.",
    "start": "1471700",
    "end": "1482700"
  },
  {
    "text": "That's not cloudy. It's not easy.\nIt's not fun. Here's another thing that I've observed\nwith customers",
    "start": "1482700",
    "end": "1488400"
  },
  {
    "text": "using architecting applications for security with security group rules.",
    "start": "1488400",
    "end": "1493500"
  },
  {
    "text": "So, as you learn about AWS, one very, very useful thing is you\nlaunch EC2 instances,",
    "start": "1493500",
    "end": "1501799"
  },
  {
    "text": "you can launch them into an Identity\nand Access Management, IAM - that's our Identity and Access Management service -",
    "start": "1501800",
    "end": "1507600"
  },
  {
    "text": "an IAM role. Now, an IAM role, what that does, if you launch an EC2 instance with\nan IAM role,",
    "start": "1507600",
    "end": "1513400"
  },
  {
    "text": "it gives you a way to declare certain\nspecific permissions that your instance is authorized\nto do on your behalf.",
    "start": "1513400",
    "end": "1522200"
  },
  {
    "text": "And this obviates the need for you to have to smear credentials\nacross your EC2 instances, which is a security worst practice.",
    "start": "1522200",
    "end": "1529000"
  },
  {
    "text": "So, IAM roles, great, wonderful tool. You should absolutely be using it\nif you care about security.",
    "start": "1529000",
    "end": "1534899"
  },
  {
    "text": "Now, I've noticed that many customers have a one-to-one relationship between IAM roles that they launch EC2 instances into\nand security groups.",
    "start": "1534900",
    "end": "1543700"
  },
  {
    "text": "Now, if you think about that, that\nkind of makes sense. An IAM role is what this instance can do.",
    "start": "1543700",
    "end": "1549200"
  },
  {
    "text": "A security group membership is who\nthis instance can talk to, who can talk to it. And you can kind of see how there might be,",
    "start": "1549200",
    "end": "1556000"
  },
  {
    "text": "conceptually, as your architecting\nyour application, a one-to-one relationship between\nwhat you can do and who you can talk to.",
    "start": "1556000",
    "end": "1562800"
  },
  {
    "text": "So, great, we have built this Internet\nconnected VPC. Now, for many of you,",
    "start": "1562800",
    "end": "1568400"
  },
  {
    "text": "many of you are done here. Many of you, you create this VPC,\nit's your network.",
    "start": "1568400",
    "end": "1573800"
  },
  {
    "text": "It's just going to work. It's in all the availability zones. You have connectivity to the Internet.",
    "start": "1573800",
    "end": "1579300"
  },
  {
    "text": "You're doing your security groups right, following the architecture of your\napplication, and you have a great, secure,",
    "start": "1579300",
    "end": "1585500"
  },
  {
    "text": "Internet connected network in the\ncloud, and you're done. But, you can do more with VPC,",
    "start": "1585500",
    "end": "1592200"
  },
  {
    "text": "and that's what the rest of this\ntalk is going to be. Connectivity options beyond just\nInternet access.",
    "start": "1592200",
    "end": "1598600"
  },
  {
    "text": "I'm going to pick on three particular examples. If you recall a couple minutes ago,",
    "start": "1598600",
    "end": "1604100"
  },
  {
    "start": "1600000",
    "end": "1600000"
  },
  {
    "text": "I talked about route tables and how you have this default route\ntable for the VPC, but you can do routing on a subnet\nby subnet basis.",
    "start": "1604100",
    "end": "1611700"
  },
  {
    "text": "I'm going to go into some scenarios\nand examples of when you might want to do this. We're also going to talk about VPC peering.",
    "start": "1611700",
    "end": "1618700"
  },
  {
    "text": "VPC peering is a tool that gives\nyou private connectivity",
    "start": "1618700",
    "end": "1624200"
  },
  {
    "text": "between multiple VPCs that you may\nhave in the cloud. We’ll talk about why you might have\nmultiple VPCs in the cloud.",
    "start": "1624200",
    "end": "1630500"
  },
  {
    "text": "And finally, we're going to talk\na little bit about Amazon Virtual Private Network,\nVPN, and Direct Connect.",
    "start": "1630500",
    "end": "1637500"
  },
  {
    "text": "These are a pair of technologies\nthat allow you to have a secure, private connection\nbetween your VPC",
    "start": "1637500",
    "end": "1643200"
  },
  {
    "text": "and your own data center, your own\ncorporate network. First, let's talk about routing on\na subnet by subnet basis",
    "start": "1643200",
    "end": "1649700"
  },
  {
    "text": "and why you might do this. Now, if you look at our documentation on VPC,",
    "start": "1649700",
    "end": "1655200"
  },
  {
    "text": "you'll see there's some talk about public subnets and private subnets. And what they mean by that,",
    "start": "1655200",
    "end": "1661600"
  },
  {
    "text": "when you see our documentation talk\nabout public subnets, it's a subnet with a route to the Internet.",
    "start": "1661600",
    "end": "1666799"
  },
  {
    "text": "When you see it talk about private subnets, it's a subnet without a route to\nthe Internet. I prefer to use the terms Internet\nconnected and internal,",
    "start": "1666800",
    "end": "1674299"
  },
  {
    "text": "because that's sort of more precise. Your Internet connected subnet is not public",
    "start": "1674300",
    "end": "1679799"
  },
  {
    "text": "unless you open up all of the security\nperipherals or something like that. But so, you're going to hear me talk",
    "start": "1679800",
    "end": "1685900"
  },
  {
    "text": "about Internet connected subnets\nand non-Internet connected subnets. Back to our example over here.",
    "start": "1685900",
    "end": "1692400"
  },
  {
    "start": "1690000",
    "end": "1690000"
  },
  {
    "text": "You'll recognize this. We've got our web servers. We've got our backends.",
    "start": "1692400",
    "end": "1697700"
  },
  {
    "text": "And remember, we put them into different\nsecurity groups, and that's good security. But let's say you need to go a step further.",
    "start": "1697700",
    "end": "1704800"
  },
  {
    "text": "Maybe you have compliance requirements that require you to demonstrate that\nthere is really no way",
    "start": "1704800",
    "end": "1710100"
  },
  {
    "text": "to reach those backend instances\nfrom the Internet, that you actually have multiple ways\nof preventing access",
    "start": "1710100",
    "end": "1717100"
  },
  {
    "text": "from the Internet to the backend servers, or maybe you just like kind of a\nbelt and suspenders approach.",
    "start": "1717100",
    "end": "1723600"
  },
  {
    "text": "So, absolutely put these in different\nsecurity groups, get your rules right, but in addition to that,",
    "start": "1723600",
    "end": "1729400"
  },
  {
    "text": "you could put these two different\ntypes of EC2 instances into different subnets.",
    "start": "1729400",
    "end": "1737000"
  },
  {
    "text": "Okay. Now, if I have different subnets, what does that mean I can do? Well, for the web servers, the web servers, I do want them to\nbe Internet facing.",
    "start": "1737000",
    "end": "1744200"
  },
  {
    "text": "So, in my route table, I have a 0/0 route to the Internet gateway that is attached to my VPC.",
    "start": "1744200",
    "end": "1750700"
  },
  {
    "text": "Great, but in my backends, maybe I don't. Maybe, I have no route to the Internet, and if I have no route to the Internet,",
    "start": "1750700",
    "end": "1756200"
  },
  {
    "text": "then I really know that you can't\nget to these backends. You can't get to these backends from\nthe Internet.",
    "start": "1756200",
    "end": "1763100"
  },
  {
    "text": "Now, of course, life, sometimes, is a little bit more complicated than that. I'm going to redraw this picture",
    "start": "1763100",
    "end": "1768300"
  },
  {
    "start": "1768000",
    "end": "1768000"
  },
  {
    "text": "with the internal and Internet facing\nsubnets side by side. You know, because over here on the\nright-hand side,",
    "start": "1768300",
    "end": "1777799"
  },
  {
    "text": "I've got an Internet facing subnet. It's got a 0/0 route to the Internet gateway that's attached to my VPC.",
    "start": "1777800",
    "end": "1784100"
  },
  {
    "text": "Over on the left, I don't have such a route. But maybe I do sometimes need my instances",
    "start": "1784100",
    "end": "1791899"
  },
  {
    "text": "in the internal facing subnet - maybe sometimes I do need them to\nreach out to the Internet.",
    "start": "1791900",
    "end": "1797100"
  },
  {
    "text": "For example, maybe sometimes, they want to reach out to a yum repo\nand update packages or something like that.",
    "start": "1797100",
    "end": "1802700"
  },
  {
    "text": "But I want them to do it behind a NAT, behind Network Address Translation. I don't want to have to give each\nof them a public IP address",
    "start": "1802700",
    "end": "1809400"
  },
  {
    "text": "and put them on the Internet. So, for this scenario,",
    "start": "1809400",
    "end": "1815100"
  },
  {
    "text": "what you can do to solve this problem, to have an internal facing subnet with EC2 instances that don't have\npublic IP addresses,",
    "start": "1815100",
    "end": "1821700"
  },
  {
    "text": "that don't have a route to the Internet, instead of creating a 0/0 route to\nthe Internet gateway,",
    "start": "1821700",
    "end": "1828000"
  },
  {
    "text": "which is not what you want here, that's not what you intended, instead, you launch a NAT, Network Address Translation EC2 instance",
    "start": "1828000",
    "end": "1835500"
  },
  {
    "text": "in your Internet facing subnet and route all of your 0/0 traffic to it",
    "start": "1835500",
    "end": "1841400"
  },
  {
    "text": "so that Internet bound traffic goes\nto the NAT instance, gets NAT'ed, gets sent out to the\nInternet from there,",
    "start": "1841400",
    "end": "1848400"
  },
  {
    "text": "and the reverse as well. And you'll see that our wizard for\ncreating a VPC in our console",
    "start": "1848400",
    "end": "1857400"
  },
  {
    "text": "even will stamp out this setup for you. Unless you think that you have to\ngo implementing",
    "start": "1857400",
    "end": "1863799"
  },
  {
    "text": "that NAT instance logic yourself, you don't. This is what you can search for. This is an Amazon machine image name.",
    "start": "1863800",
    "end": "1870799"
  },
  {
    "text": "You can search for this. If you launch an EC2 instance with\nthis Amazon machine image, it's already ready to do your NAT\nlogic for you.",
    "start": "1870800",
    "end": "1880200"
  },
  {
    "text": "Okay. So, that's routing on a subnet\nby subnet basis. Let's talk more about route. In fact, let's talk about when",
    "start": "1880200",
    "end": "1887000"
  },
  {
    "text": "you might have multiple VPCs in the cloud and how you can get connectivity\nbetween them.",
    "start": "1887000",
    "end": "1893200"
  },
  {
    "text": "So, first let's talk about use case here. There's a couple of reasons why you\nmight run - many customers just run one VPC in the cloud.",
    "start": "1893200",
    "end": "1900700"
  },
  {
    "start": "1896000",
    "end": "1896000"
  },
  {
    "text": "It's their network, and it just works,\nand that's fine. There are some scenarios ",
    "start": "1900700",
    "end": "1907000"
  },
  {
    "text": "where you might wish to run multiple VPCs. One that I see sometimes is organizations have entirely different VPCs",
    "start": "1907000",
    "end": "1914300"
  },
  {
    "text": "for development, Q&A, production\nenvironments. So, that's one case.",
    "start": "1914300",
    "end": "1919800"
  },
  {
    "text": "Another case is one like the one\nI have on the board here. Maybe you work for a very large organization",
    "start": "1919800",
    "end": "1925900"
  },
  {
    "text": "where you want individual teams to\nown their own network. So, you want to give individual teams\neach their own VPC",
    "start": "1925900",
    "end": "1933299"
  },
  {
    "text": "so each of them can decide exactly how to best configure it\nto meet its needs. You don't want some central authority",
    "start": "1933300",
    "end": "1939600"
  },
  {
    "text": "trying to arbitrate the VPC for everybody.",
    "start": "1939600",
    "end": "1944900"
  },
  {
    "text": "So, you give these teams their separate VPCs. But of course, you're a large organization. You have some really nice common\ninfrastructure",
    "start": "1944900",
    "end": "1951100"
  },
  {
    "text": "for everybody to use, logging authentication\nmonitoring, all this kind of stuff that all of\nthese teams,",
    "start": "1951100",
    "end": "1957000"
  },
  {
    "text": "with their own individual VPCs, need access to. Now, of course, one thing you could do",
    "start": "1957000",
    "end": "1962100"
  },
  {
    "text": "is you could take your internal services, put them on the Internet, have everybody reach them through\nthe Internet, and that would work.",
    "start": "1962100",
    "end": "1967900"
  },
  {
    "text": "But of course, these are internal services. They don't really have much of a\nreason to live on the Internet.",
    "start": "1967900",
    "end": "1974000"
  },
  {
    "text": "And that is exactly the scenario that VPC peering is designed to enable.",
    "start": "1974000",
    "end": "1980200"
  },
  {
    "text": "VPC peering, what it does is given\na pair of VPCs - and of course, you can peer multiple\nVPCs with each other,",
    "start": "1980200",
    "end": "1988600"
  },
  {
    "text": "but we'll talk about a peering between\ntwo VPCs here. If I have my VPC over here, our familiar\n172.31/16,",
    "start": "1988600",
    "end": "1996399"
  },
  {
    "text": "and then some other VPC over here,\n10.55/16, what VPC peering allows us to do",
    "start": "1996400",
    "end": "2003400"
  },
  {
    "text": "is it allows us to have private connectivity",
    "start": "2003400",
    "end": "2009800"
  },
  {
    "text": "between these two networks. It does not go out through the Internet. It is private connectivity within\nEC2 over private IP addresses",
    "start": "2009800",
    "end": "2016000"
  },
  {
    "text": "between these two networks. Now, of course, you probably notice that these two address ranges, they\ndon't overlap.",
    "start": "2016000",
    "end": "2021500"
  },
  {
    "text": "That's no accident. You can't peer address ranges that overlap for the reasons that you think, and that is one reason why it's important",
    "start": "2021500",
    "end": "2029400"
  },
  {
    "text": "to think about the IP address ranges\nthat you choose for your VPC. Okay. So, let's just walk through the steps",
    "start": "2029400",
    "end": "2036600"
  },
  {
    "start": "2036000",
    "end": "2036000"
  },
  {
    "text": "involved in establishing a peering, because a peering doesn't exist. Peerings are established via kind\nof a two-way handshake",
    "start": "2036600",
    "end": "2043000"
  },
  {
    "text": "between both sides. The peering doesn't exist until both\nsides have agreed to it,",
    "start": "2043000",
    "end": "2049000"
  },
  {
    "text": "you know, for the reasons that you think. And another thing worth noting is\nthat blue VPC,",
    "start": "2049000",
    "end": "2054899"
  },
  {
    "text": "it could either be in my account or it could be in some other account. Because we see many customers are\nrunning AWS in multiple accounts,",
    "start": "2054900",
    "end": "2062200"
  },
  {
    "text": "sometimes for ease of financial accounting reasons. So, the first step, if I decide that I want to peer with this VPC,",
    "start": "2062200",
    "end": "2068799"
  },
  {
    "text": "because maybe I want to consume some\nservices that are in this VPC, the first thing I do is I initiate\na peering request.",
    "start": "2068800",
    "end": "2077399"
  },
  {
    "text": "Here's how that looks on our console. I say okay, here's another VPC that\nI want to peer with.",
    "start": "2077400",
    "end": "2083399"
  },
  {
    "text": "It is, in my example, in my account, but as you see here, you can choose\na VPC in another account.",
    "start": "2083400",
    "end": "2090700"
  },
  {
    "text": "But we don't have a peering yet. We don't have a peering yet, because we don't have a peering until you have accepted the peering request.",
    "start": "2090700",
    "end": "2098400"
  },
  {
    "text": "And that looks like this. You'll see this in your VPC peering console.",
    "start": "2098400",
    "end": "2104299"
  },
  {
    "text": "You'll see that you have a peering request that is pending acceptance from me.",
    "start": "2104300",
    "end": "2110300"
  },
  {
    "text": "And you will accept it, or you will reject it. You'll accept it, and once you accept it,",
    "start": "2110300",
    "end": "2117400"
  },
  {
    "text": "now we have a peering. We have a peering, but nothing interesting happens in\na VPC without a route,",
    "start": "2117400",
    "end": "2125500"
  },
  {
    "start": "2119000",
    "end": "2119000"
  },
  {
    "text": "without something in our route table,\nbecause right now, my route table doesn't really say\nwhat to do with packets",
    "start": "2125500",
    "end": "2131300"
  },
  {
    "text": "that are destined to 10.55 addresses. So, here's what I do.",
    "start": "2131300",
    "end": "2137000"
  },
  {
    "text": "We create routes. And I have to create a route from\nmy end to your VPC, and you have to create a route from\nyour end to my VPC.",
    "start": "2137000",
    "end": "2144600"
  },
  {
    "text": "And here's how that looks like. It's this one. You should be getting familiar with\nthis route table notation.",
    "start": "2144600",
    "end": "2151799"
  },
  {
    "text": "10.55/16, so that means packets that\nare trying to get to your VPC, they go to the pcx, to the peering\nconnection.",
    "start": "2151800",
    "end": "2160799"
  },
  {
    "text": "There's a line below that. We're going to talk about that later. But what this means in English is that if I'm sending traffic to your VPC,",
    "start": "2160800",
    "end": "2167800"
  },
  {
    "text": "don't send it out to the Internet. Send it to the peering connection and it will get right there. And I, in fact, use your private\nIP addresses to send traffic.",
    "start": "2167800",
    "end": "2175500"
  },
  {
    "text": "So, you've created kind of two VPCs that are an extension of one another's networks.",
    "start": "2175500",
    "end": "2182800"
  },
  {
    "text": "But let's talk about existing networks\nthat you have. Maybe you have an existing data center",
    "start": "2182800",
    "end": "2190900"
  },
  {
    "text": "that you would like to connect to\nyour VPC securely and privately. Maybe you have on-premises infrastructure.",
    "start": "2190900",
    "end": "2196800"
  },
  {
    "text": "AWS VPN and Direct Connect, these are the pair of technologies\nthat you use to do this,",
    "start": "2196800",
    "end": "2203500"
  },
  {
    "text": "and this is very useful for customers who want to do, either for a period\nof time or forever,",
    "start": "2203500",
    "end": "2211200"
  },
  {
    "text": "want to do a hybrid deployment where some applications are running\non-premises",
    "start": "2211200",
    "end": "2216400"
  },
  {
    "text": "and some applications running in the cloud, but they need to be able to talk\nto each other. If that sounds like your scenario,",
    "start": "2216400",
    "end": "2222900"
  },
  {
    "text": "then these technologies are for you. I'm going to kind of scratch the\nsurface here. We've got a great talk later this week",
    "start": "2222900",
    "end": "2228700"
  },
  {
    "text": "doing a deep dive into Direct Connect and VPN. So, if you're interested in learning\na lot more about it,",
    "start": "2228700",
    "end": "2235400"
  },
  {
    "text": "I would definitely recommend that\nyou check that out. So, here's the setup for both VPN\nand Direct Connect.",
    "start": "2235400",
    "end": "2242700"
  },
  {
    "text": "Over on the left, I have my data center, or my on-premises network.",
    "start": "2242700",
    "end": "2249400"
  },
  {
    "text": "Over on the right, I have my VPC. And the things you can use to connect them, I've got VPN, you have Direct Connect,",
    "start": "2249400",
    "end": "2258200"
  },
  {
    "text": "and both of them accomplish the same thing, which is to make these two networks\nan extension of each other,",
    "start": "2258200",
    "end": "2263799"
  },
  {
    "text": "make these two networks able to talk\nto each other. Alright. First, let's talk about VPN.",
    "start": "2263800",
    "end": "2270900"
  },
  {
    "start": "2269000",
    "end": "2269000"
  },
  {
    "text": "I'm going to give you kind of the\nvocabulary, what you need to know to get started\ncreating a VPN.",
    "start": "2270900",
    "end": "2278200"
  },
  {
    "text": "So, the first thing you need in order\nto have a VPN, the name is hardware VPN, you need a device.",
    "start": "2278200",
    "end": "2285000"
  },
  {
    "text": "We call it a customer gateway. You're the customer. This is your gateway. This is a device that you own, that\nyou manage in your data center.",
    "start": "2285000",
    "end": "2293599"
  },
  {
    "text": "This is a device that you own and manage that is capable of being your side\nof the IPsec tunnels",
    "start": "2293600",
    "end": "2302400"
  },
  {
    "text": "that get created for a VPN connection. Now, if you have set up a VPN connection before,",
    "start": "2302400",
    "end": "2309200"
  },
  {
    "text": "you probably already have this equipment. We have in our documentation a long\nlist of devices that we have tested for VPN,",
    "start": "2309200",
    "end": "2315900"
  },
  {
    "text": "and in fact, including vendor by\nvendor instructions for how to set these things up.",
    "start": "2315900",
    "end": "2322400"
  },
  {
    "text": "We have instructions for a variety\nof vendors. So, you get your device. That's one end of the VPN connection.",
    "start": "2322400",
    "end": "2328800"
  },
  {
    "text": "Our end of the VPN connection, or your VPC's end of the VPN connection is called a Virtual Private Gateway.",
    "start": "2328800",
    "end": "2335700"
  },
  {
    "text": "You'll see it referred to as VGW\nin the route tables. And when you set these things up,",
    "start": "2335700",
    "end": "2341100"
  },
  {
    "text": "you follow the instructions to setup, what you get is you get a pair of\nIPsec tunnels.",
    "start": "2341100",
    "end": "2347800"
  },
  {
    "text": "Remember how I said talking about\nthe Internet gateway, that it's not a single point of failure, it's not a thing, it's a highly-scaled,\navailable thing?",
    "start": "2347800",
    "end": "2355900"
  },
  {
    "text": "Well, here, these IPsec tunnels,\nthey do end somewhere. We create two of them,",
    "start": "2355900",
    "end": "2361900"
  },
  {
    "text": "and that's for high availability\non our side. These two IPsec tunnels, they terminate in different availability\nzones on our end.",
    "start": "2361900",
    "end": "2367700"
  },
  {
    "text": "So, we're taking advantage of our own high-availability availability zone story",
    "start": "2367700",
    "end": "2373000"
  },
  {
    "text": "to be able to give you these two\nredundant connections that you can fail over between. So, we strongly recommend that you go ahead",
    "start": "2373000",
    "end": "2380000"
  },
  {
    "text": "and configure both of them. Now, of course, nothing exciting\nhappens in a VPC without a route.",
    "start": "2380000",
    "end": "2387099"
  },
  {
    "text": "And that's what we do. Your route table for your VPC, you'll\nadd a route to it that says traffic that's trying to\ngo to my data center",
    "start": "2387100",
    "end": "2395200"
  },
  {
    "text": "gets sent to the virtual gateway. Same concept as before. And you can see what's going on here.",
    "start": "2395200",
    "end": "2401400"
  },
  {
    "start": "2401000",
    "end": "2401000"
  },
  {
    "text": "It's very visible. You can see that over here, I have\nthis route.",
    "start": "2401400",
    "end": "2407800"
  },
  {
    "text": "I have this list of routes and I can see where the traffic is going and what's supposed to happen to it.",
    "start": "2407800",
    "end": "2414100"
  },
  {
    "text": "Can you have one route to the VGW and one route to your Internet gateway?",
    "start": "2414100",
    "end": "2419500"
  },
  {
    "text": "You absolutely can, and that's a\ncommon scenario. If you want your VPC to be both connected\nto the Internet and connected to your on-premises\nnetwork, that's fine.",
    "start": "2419500",
    "end": "2427100"
  },
  {
    "text": "Just create route rules for each of those, one to an Internet gateway and one\nto a virtual private gateway.",
    "start": "2427100",
    "end": "2433599"
  },
  {
    "text": "So, that's kind of the lingo of VPN. These are the things that you need\nto know to get started. Let's talk about when you might use that",
    "start": "2433600",
    "end": "2440200"
  },
  {
    "text": "and when you might use Direct Connect, which is our other technology for creating a secure, private connection",
    "start": "2440200",
    "end": "2445800"
  },
  {
    "text": "between your on-premises network and ours. So, both of these do the same thing,",
    "start": "2445800",
    "end": "2451099"
  },
  {
    "text": "a secure connection between your\ndata center and your VPC. VPN as you saw, it's a pair of encrypted\nIPsec tunnels",
    "start": "2451100",
    "end": "2459800"
  },
  {
    "text": "that go over the Internet. So, that means it's secure, but it\ngoes over the Internet, which means you're limited by whatever\ndata transfer rates",
    "start": "2459800",
    "end": "2467300"
  },
  {
    "text": "that you can get over the Internet. You're also paying Internet data\ntransfer rates here.",
    "start": "2467300",
    "end": "2473200"
  },
  {
    "text": "Direct Connect is really for customers who anticipate transferring a lot more data between your on-premises network\nand your VPC.",
    "start": "2473200",
    "end": "2481900"
  },
  {
    "text": "Direct Connect is what it sounds like. It is a direct connection, a dedicated line, between your equipment and ours",
    "start": "2481900",
    "end": "2487900"
  },
  {
    "text": "in one of many colocation centers\naround the world. And if you have a Direct Connect,",
    "start": "2487900",
    "end": "2493700"
  },
  {
    "text": "we offer port speeds of 1 Gbps and\n10 Gbps,",
    "start": "2493700",
    "end": "2498800"
  },
  {
    "text": "and you can go sub 1 gig with the\nhelp of our partners, and it gives you a lower per gig\ndata transfer rate than VPN.",
    "start": "2498800",
    "end": "2507200"
  },
  {
    "text": "So really, your choice between VPN\nand Direct Connect should be driven a lot by how much data you anticipate flowing between them.",
    "start": "2507200",
    "end": "2513400"
  },
  {
    "text": "Like I said, the great deep dive into these concepts later this week. For highest availability, you can use both and use BGP for failover between\nthe two of them.",
    "start": "2513400",
    "end": "2521799"
  },
  {
    "text": "Alright. So, enough about connectivity. Let's talk about what's actually\ngoing on within your VPC.",
    "start": "2521800",
    "end": "2527500"
  },
  {
    "text": "And I'm going to bring up one example of something that just gets so much\neasier in a VPC",
    "start": "2527500",
    "end": "2533300"
  },
  {
    "text": "than it is in a traditional networking\nenvironment. So, those of you from a traditional\nnetworking world know that you need to think about DNS,",
    "start": "2533300",
    "end": "2541500"
  },
  {
    "text": "resolution of DNS names into IP addresses. And if you want to have any control over it,",
    "start": "2541500",
    "end": "2549200"
  },
  {
    "text": "you're probably talking about running\nname servers. You have to be pretty conversed in\nthese concepts, keeping them available,",
    "start": "2549200",
    "end": "2554800"
  },
  {
    "text": "because DNS is really, really important. What VPC allows you to do is it gets\nyou out of all of that.",
    "start": "2554800",
    "end": "2560700"
  },
  {
    "text": "You don't have to do that, but at the same time, it gives you\nexcellent control",
    "start": "2560700",
    "end": "2566000"
  },
  {
    "text": "over how DNS works in your VPC without actually having to run the\nDNS yourself.",
    "start": "2566000",
    "end": "2571800"
  },
  {
    "text": "So, here's what I mean by that. If I look in my VPC, I'll see over\nin the right-hand corner,",
    "start": "2571800",
    "end": "2576900"
  },
  {
    "start": "2573000",
    "end": "2573000"
  },
  {
    "text": "I'll see that there are two DNS settings on it. DNS resolution, DNS hostnames. I've said yes to both.",
    "start": "2576900",
    "end": "2583200"
  },
  {
    "text": "You probably will too. DNS resolution is answering the question, do you want us to do DNS for you.",
    "start": "2583200",
    "end": "2590500"
  },
  {
    "text": "Most of you choose yes, although if you don't want that, if you really do want to run your\nown name servers, you can.",
    "start": "2590500",
    "end": "2596000"
  },
  {
    "text": "In AWS, you would say no here, and then set up your own name servers\nand run your own DNS.",
    "start": "2596000",
    "end": "2601700"
  },
  {
    "text": "If you say yes here, you don't have\nto do anything and DNS just works, which is great.",
    "start": "2601700",
    "end": "2607300"
  },
  {
    "text": "The other option here, which I recommend choosing, there's really no reason not to, is when you launch EC2 instances\nin your VPC",
    "start": "2607300",
    "end": "2615700"
  },
  {
    "text": "and you have this setting on, you get two DNS names for the price\nof zero for your EC2 instance.",
    "start": "2615700",
    "end": "2622000"
  },
  {
    "start": "2618000",
    "end": "2618000"
  },
  {
    "text": "Alright. One of them over here. This one over here says ip-172-31-something.",
    "start": "2622000",
    "end": "2628400"
  },
  {
    "text": "It looks like it has the private IP address of my EC2 instance embedded in it,\nand it does.",
    "start": "2628400",
    "end": "2634400"
  },
  {
    "text": "What this DNS name does, if I try to resolve it inside my VPC,",
    "start": "2634400",
    "end": "2639500"
  },
  {
    "text": "it gives me that private IP address\nlike you might expect. Outside my VPC, this DNS name has\nno meaning.",
    "start": "2639500",
    "end": "2645300"
  },
  {
    "text": "If I try to resolve it, I get no answer. In DNS speak, that's an annex domain. So, outside the VPC doesn't mean anything.",
    "start": "2645300",
    "end": "2651500"
  },
  {
    "text": "Inside the VPC, means my private\nIP address. But this is the more interesting\nof the two DNS names.",
    "start": "2651500",
    "end": "2659500"
  },
  {
    "text": "You look at this one, I have this\nEC2 instance. It has a public IP address. 52, it looks like it has the public\nIP address embedded in it,",
    "start": "2659500",
    "end": "2669400"
  },
  {
    "text": "and it does, and here's what's neat\nabout this DNS name that we automatically assigned your instance",
    "start": "2669400",
    "end": "2675099"
  },
  {
    "text": "is that it works correctly from everywhere. So, if I try to resolve -",
    "start": "2675100",
    "end": "2680900"
  },
  {
    "text": "so, this is a Windows machine. It's out on the Internet. If I try to resolve this DNS name\nfrom somewhere outside my VPC,",
    "start": "2680900",
    "end": "2687100"
  },
  {
    "text": "you'll see that I get what you expect, the public IP address of this EC2 instance. And if you're outside my VPC,",
    "start": "2687100",
    "end": "2694000"
  },
  {
    "text": "that is absolutely the correct way\nto get to this instance is through its public IP address. So, that's the right answer.",
    "start": "2694000",
    "end": "2700700"
  },
  {
    "text": "But if I go inside my VPC, if I go inside my VPC and resolve\nthis same name,",
    "start": "2700700",
    "end": "2708200"
  },
  {
    "text": "you'll see that what I get here, that's not the public IP address. That's the private IP address of\nthe instance.",
    "start": "2708200",
    "end": "2713900"
  },
  {
    "text": "And that's the correct answer. The correct way to send traffic within your VPC so that it gets routed with that\nlocal route,",
    "start": "2713900",
    "end": "2721599"
  },
  {
    "text": "so that your security groups, which you've architected correctly\nand in a cloudy way, so the security groups work the way you want,",
    "start": "2721600",
    "end": "2728200"
  },
  {
    "text": "you want to be sending traffic to\nthis instance by its private IP address.",
    "start": "2728200",
    "end": "2733600"
  },
  {
    "text": "And this DNS hostname that we gave you, it resolves to the right thing from\neverywhere,",
    "start": "2733600",
    "end": "2740299"
  },
  {
    "text": "which is really, really handy. But there's more with DNS. This is super handy.",
    "start": "2740300",
    "end": "2745500"
  },
  {
    "start": "2744000",
    "end": "2744000"
  },
  {
    "text": "Amazon Route 53 is the AWS DNS service and you can do all the DNS things\nwith Route 53.",
    "start": "2745500",
    "end": "2752800"
  },
  {
    "text": "You can register domain names. You can create DNS zones out on the Internet.",
    "start": "2752800",
    "end": "2759600"
  },
  {
    "text": "It's got a fantastic availability story. There's a great deep dive into Route\n53 later this week. But one thing Route 53 lets you do\nwith your VPC",
    "start": "2759600",
    "end": "2767300"
  },
  {
    "text": "is you can create something called\na private hosted zone. In English, a private hosted zone",
    "start": "2767300",
    "end": "2773500"
  },
  {
    "text": "is your own world of DNS inside your VPC, which means you get to control how DNS works",
    "start": "2773500",
    "end": "2780300"
  },
  {
    "text": "without running DNS in your VPC. Let me show you an example of what you can do with Route 53 private hosted zones.",
    "start": "2780300",
    "end": "2787700"
  },
  {
    "start": "2787000",
    "end": "2787000"
  },
  {
    "text": "So, here I'm going to go to the Route\n53 console. You'll see here I've created a private\nhosted zone",
    "start": "2787700",
    "end": "2793900"
  },
  {
    "text": "on demohostedzone.org. Now, I don't own that domain. I don't think anybody does. You could go out and buy it.",
    "start": "2793900",
    "end": "2799599"
  },
  {
    "text": "I don't own that domain, but I get to make the rules over exactly how this resolves in my VPC.",
    "start": "2799600",
    "end": "2806900"
  },
  {
    "text": "So, you'll see over here, I created a private hosted zone, and over here, I've associated it\nwith my VPC.",
    "start": "2806900",
    "end": "2812900"
  },
  {
    "text": "You can associate it with multiple\nVPCs in any of the regions. And what that means",
    "start": "2812900",
    "end": "2818599"
  },
  {
    "text": "is I've basically taken over demohostedzone.org\nin my VPCs.",
    "start": "2818600",
    "end": "2824200"
  },
  {
    "text": "So, if I go over here just for the\nsake of demonstration here, I'll create an A record.",
    "start": "2824200",
    "end": "2830100"
  },
  {
    "text": "That means it resolves to an IPv4 address for example.demohostedzone.org. I say that that should resolves to\n172.31.0.99.",
    "start": "2830100",
    "end": "2839500"
  },
  {
    "text": "Now, that's an address in my VPC. It doesn't even have to be. It can be anything. You make the rules here.",
    "start": "2839500",
    "end": "2845900"
  },
  {
    "text": "So, now if I go to my EC2 instance and I try to resolve example.demohostedzone.org,",
    "start": "2845900",
    "end": "2851500"
  },
  {
    "start": "2846000",
    "end": "2846000"
  },
  {
    "text": "you'll see that I get the answer\nI said I should. This is so easy.",
    "start": "2851500",
    "end": "2856700"
  },
  {
    "text": "I had to do almost nothing to make\nthat happen. I don't even need to be a DNS expert\nin order to make that happen.",
    "start": "2856700",
    "end": "2863800"
  },
  {
    "text": "So, that's just one example of the\nkinds of services that you usually need to provide\nin a network",
    "start": "2863800",
    "end": "2869799"
  },
  {
    "text": "that are made just so easy and flexible\nand visible by VPC. Oh, but there's so much more.",
    "start": "2869800",
    "end": "2875400"
  },
  {
    "text": "There's so much more you can do with a VPC, and we have just scratched the surface. I hope this kind of gives you things\nyou can look into",
    "start": "2875400",
    "end": "2883100"
  },
  {
    "text": "to do more with your network. Just to give you the smallest glimpse of what else you can do in your VPC,",
    "start": "2883100",
    "end": "2890500"
  },
  {
    "start": "2890000",
    "end": "2890000"
  },
  {
    "text": "this year we launched a new feature for VPC called VPC Flow Logs. Now, this gives you an unprecedented\nlevel of visibility",
    "start": "2890500",
    "end": "2899600"
  },
  {
    "text": "into exactly what is going on with\nyour network traffic, to and from all of your EC2 instances.",
    "start": "2899600",
    "end": "2906300"
  },
  {
    "text": "What it is, is if you turn on Flow Logs, you can opt into a full metadata\ndump of all of the packets",
    "start": "2906300",
    "end": "2913600"
  },
  {
    "text": "that are going to and from your EC2 instances. And not only the ones that actually succeeded in going to and from your VPC instances,",
    "start": "2913600",
    "end": "2920000"
  },
  {
    "text": "but the ones that your security groups\nare rejecting. So, if you really want to understand what kind of traffic you're getting\nand not getting,",
    "start": "2920000",
    "end": "2927200"
  },
  {
    "text": "you can turn on Flow Logs. Now, you can do this in a traditional\nnetworking environment. You could do something like run tcpdump\non your hosts",
    "start": "2927200",
    "end": "2934000"
  },
  {
    "text": "and create some sort of infrastructure\nto collect them, but here, it's easy. You turn this on and you go to CloudWatch Logs,",
    "start": "2934000",
    "end": "2939800"
  },
  {
    "text": "which is our AWS logging service,\nto pick them up, and then you can analyze them, you can use them for troubleshooting,",
    "start": "2939800",
    "end": "2945800"
  },
  {
    "text": "you can use them for kind of security\ntypes of analysis. So interesting what you get when you start analyzing your application\nup close like this.",
    "start": "2945800",
    "end": "2956000"
  },
  {
    "text": "Another thing that we released this year is Amazon VPC endpoints for S3.",
    "start": "2956000",
    "end": "2962300"
  },
  {
    "text": "And what this is, you remember how\nsome of you are going to be creating subnets\nin your VPC,",
    "start": "2962300",
    "end": "2968000"
  },
  {
    "text": "or maybe even entire VPCs that don't have a route to an Internet gateway, don't have connectivity to the Internet,",
    "start": "2968000",
    "end": "2974200"
  },
  {
    "text": "but yet, Amazon Simple Storage service, this is where you're putting your data. This is an important part of your\napplication,",
    "start": "2974200",
    "end": "2980000"
  },
  {
    "text": "and you want a secure way to get between your VPC and your\nS3 that doesn't involve the Internet.",
    "start": "2980000",
    "end": "2986100"
  },
  {
    "text": "Well, that is what S3 endpoints does. You can almost think of this as a\nworm hole from your VPC to S3.",
    "start": "2986100",
    "end": "2992099"
  },
  {
    "text": "And it gives you great control over the data that's a part of your application. You can control policy at the VPC\nendpoint part of the connection,",
    "start": "2992100",
    "end": "3001200"
  },
  {
    "text": "meaning I can say exactly what this VPC is and is not allowed to do in S3, and what which S3 buckets and objects.",
    "start": "3001200",
    "end": "3009200"
  },
  {
    "text": "And I can also specify policy over\nhere at my S3 bucket. I can say that this bucket is accessible",
    "start": "3009200",
    "end": "3014799"
  },
  {
    "text": "only from this VPC endpoint, which means only from this VPC. So, I have control two ways",
    "start": "3014800",
    "end": "3021500"
  },
  {
    "text": "over how the data that is part of\nmy application is secured. This was a very popular feature that\nwe launched this year.",
    "start": "3021500",
    "end": "3029600"
  },
  {
    "text": "ClassicLink. So, those of you that have been around\na long time, you'll know that when we first launched\nEC2 in 2006,",
    "start": "3029600",
    "end": "3038000"
  },
  {
    "text": "there wasn't a VPC. Your EC2 instances, they would launch\ninto a flat network,",
    "start": "3038000",
    "end": "3043200"
  },
  {
    "text": "you know, flat AWS network. We'd give you the IP addresses. We'd tell you it's connected to the Internet,",
    "start": "3043200",
    "end": "3049500"
  },
  {
    "text": "give you a public IP address. You didn't get a lot of the controls that we just spent the last hour\ntalking about.",
    "start": "3049500",
    "end": "3056800"
  },
  {
    "text": "And we have many customers who are\nrunning mission critical, highly successful applications on\nEC2 classic.",
    "start": "3056800",
    "end": "3062400"
  },
  {
    "text": "It's a great product. Those customers are looking at VPC and saying they want to take advantage\nof many of these options,",
    "start": "3062400",
    "end": "3069800"
  },
  {
    "text": "many of these security options, network\nmanagement options, and what ClassicLink is, is it gives\nyou private connectivity",
    "start": "3069800",
    "end": "3076900"
  },
  {
    "text": "between those EC2 classic instances\nin the flat network and the instances in your VPC,",
    "start": "3076900",
    "end": "3082400"
  },
  {
    "text": "which is a great on-ramp for migrating\nan application to VPC without taking downtime.",
    "start": "3082400",
    "end": "3088400"
  },
  {
    "text": "There are two great talks about migrating from EC2 classic\nto VPC this week,",
    "start": "3088400",
    "end": "3094100"
  },
  {
    "text": "both by customers, one by Twilio,\none by Pinterest, talking about how they are making that move",
    "start": "3094100",
    "end": "3100000"
  },
  {
    "text": "from classic to VPC. So, if that's the situation that\nyou're facing, these are definitely talks that you\nwill want to check out.",
    "start": "3100000",
    "end": "3108100"
  },
  {
    "text": "There's so much more.  There is so much more. You're not even close to done with VPC, although you do now understand what you need",
    "start": "3108100",
    "end": "3114800"
  },
  {
    "text": "in order to have a network for your\nEC2 instances that just works. There's a whole bunch of talks later this week,",
    "start": "3114800",
    "end": "3120000"
  },
  {
    "text": "deep dives into various aspects of\nVPC and surrounded services like Route 53, like Classic to VPC migration,",
    "start": "3120000",
    "end": "3129000"
  },
  {
    "text": "and all of this allows you to manage\nyour network like a boss,",
    "start": "3129000",
    "end": "3135100"
  },
  {
    "start": "3130000",
    "end": "3130000"
  },
  {
    "text": "whether or not you're a networking expert. Make it easy, make it flexible, make it visible what's going on.",
    "start": "3135100",
    "end": "3141800"
  },
  {
    "text": "Thank you so much for being here, and please remember to fill out your\nevaluations.",
    "start": "3141800",
    "end": "3149099"
  },
  {
    "text": "Thank you.",
    "start": "3149100",
    "end": "3151000"
  }
]