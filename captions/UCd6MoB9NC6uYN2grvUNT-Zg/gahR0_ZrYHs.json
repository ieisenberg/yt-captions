[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "hey everyone my name is Brent Langston I'm a developer advocate for Amazon Web",
    "start": "199",
    "end": "6540"
  },
  {
    "text": "Services and this talk is about moving from a monolith to micro-services and",
    "start": "6540",
    "end": "13710"
  },
  {
    "text": "all the bumps along the way all the problems that you might experience all the things that you might encounter that",
    "start": "13710",
    "end": "20189"
  },
  {
    "text": "you're gonna have to figure out how to solve before Amazon I worked for a",
    "start": "20189",
    "end": "26340"
  },
  {
    "text": "little startup called cloud passage and helped tree architect their platform",
    "start": "26340",
    "end": "31560"
  },
  {
    "text": "from monolith to micro service so I've been where you're at I understand what",
    "start": "31560",
    "end": "37350"
  },
  {
    "text": "you're going through or are about to go through so I've definitely able to sort",
    "start": "37350",
    "end": "43379"
  },
  {
    "text": "of talk you through it at the end of all of this or later if you have any questions definitely track",
    "start": "43379",
    "end": "50309"
  },
  {
    "text": "me down I'll be around to reinvent all you know the whole time and then of course you can hit me up on Twitter with",
    "start": "50309",
    "end": "57030"
  },
  {
    "text": "any of the questions that you might think of later but for now let's talk",
    "start": "57030",
    "end": "62250"
  },
  {
    "text": "about what it is that you're going to have to figure out what are the things",
    "start": "62250",
    "end": "68580"
  },
  {
    "start": "65000",
    "end": "85000"
  },
  {
    "text": "that you're going to have to solve for anytime you try and make a change of this size it's good to think about all",
    "start": "68580",
    "end": "76409"
  },
  {
    "text": "of the different aspects of that change and how it's going to affect your organization so let's start off by",
    "start": "76409",
    "end": "83159"
  },
  {
    "text": "looking at you know just sort of categories of change everyone always",
    "start": "83159",
    "end": "89250"
  },
  {
    "start": "85000",
    "end": "124000"
  },
  {
    "text": "jumps to technical you know how am I going to solve this problem technically but really you're almost doomed if you",
    "start": "89250",
    "end": "97590"
  },
  {
    "text": "don't also solve for the problem of convincing people that are involved and",
    "start": "97590",
    "end": "103170"
  },
  {
    "text": "can end being able to have an effective workflow figured out so we need to have",
    "start": "103170",
    "end": "109890"
  },
  {
    "text": "ready solutions to solve for that as well so let's take a look what are some",
    "start": "109890",
    "end": "116159"
  },
  {
    "text": "of the problems that you might encounter that fall more into the people category",
    "start": "116159",
    "end": "123110"
  },
  {
    "start": "124000",
    "end": "556000"
  },
  {
    "text": "what are some hurdles that you'll have to prepare for well we we you know often",
    "start": "124490",
    "end": "129720"
  },
  {
    "text": "we'll hear well I'm used to doing it this way you know you're gonna come along and try",
    "start": "129720",
    "end": "135270"
  },
  {
    "text": "and introduce a new way of doing things so that in and of itself is going to be an obstacle that you're gonna need to be",
    "start": "135270",
    "end": "141420"
  },
  {
    "text": "prepared for why is the new way better what is going to be better for the",
    "start": "141420",
    "end": "146850"
  },
  {
    "text": "developer or for the product person or for whoever the the team member is just",
    "start": "146850",
    "end": "152810"
  },
  {
    "text": "be ready to answer why is this way better one specific question you know",
    "start": "152810",
    "end": "161850"
  },
  {
    "text": "that I keep hearing is well how do I develop locally so you know there are",
    "start": "161850",
    "end": "167700"
  },
  {
    "text": "some answers that you can give that you can have in your back pocket ready to go one approach would be run everything",
    "start": "167700",
    "end": "174870"
  },
  {
    "text": "locally so you can use docker you can docker compose up that's one possibility",
    "start": "174870",
    "end": "180810"
  },
  {
    "text": "you can just have ready the ability to execute all of your micro services",
    "start": "180810",
    "end": "186720"
  },
  {
    "text": "locally this may be a good solution for you it may actually not be a good",
    "start": "186720",
    "end": "191880"
  },
  {
    "text": "solution for you as you scale up as you have as you go from dozens of services to hundreds of services or maybe even",
    "start": "191880",
    "end": "198840"
  },
  {
    "text": "thousands of services you might outgrow this solution so what else can you do you can run just enough locally that you",
    "start": "198840",
    "end": "207239"
  },
  {
    "text": "can test basic functionality so you'll probably be organizing your developers",
    "start": "207239",
    "end": "213540"
  },
  {
    "text": "into teams and maybe those teams will run their services locally but all the",
    "start": "213540",
    "end": "219360"
  },
  {
    "text": "other services that are provided by all the other teams you might still not run",
    "start": "219360",
    "end": "224459"
  },
  {
    "text": "those locally and then when you're ready to test interaction with those services you can push to a dev cluster or push to",
    "start": "224459",
    "end": "231840"
  },
  {
    "text": "a test cluster another possibility is continuously deploy to a dev cluster so",
    "start": "231840",
    "end": "237989"
  },
  {
    "text": "change your code execute it locally to see that you know it does what you expect it to do and then commit it push",
    "start": "237989",
    "end": "244739"
  },
  {
    "text": "it and let it continuously deploy to a cluster dedicated to you this is actually what I did at my last place and",
    "start": "244739",
    "end": "251790"
  },
  {
    "text": "it worked really well because everyone had their own dedicated cluster and they",
    "start": "251790",
    "end": "257190"
  },
  {
    "text": "could see every service running and they would have the production version of every service running that they weren't",
    "start": "257190",
    "end": "263400"
  },
  {
    "text": "working on and then they would have their branch continuous we deployed that they were working on and they could actually push their code",
    "start": "263400",
    "end": "270220"
  },
  {
    "text": "and see it all see how it all interacts one other note here there is cloud 9 I",
    "start": "270220",
    "end": "277030"
  },
  {
    "text": "don't know how many of you guys have ever used cloud 9 yes I've recently started using it probably",
    "start": "277030",
    "end": "282910"
  },
  {
    "text": "in the last six months it's an online IDE so instead of thinking about how do",
    "start": "282910",
    "end": "288010"
  },
  {
    "text": "I develop locally instead you move local into the cloud and all of your",
    "start": "288010",
    "end": "293710"
  },
  {
    "text": "development is done from the cloud first and then you can check check out code run services locally and you can even",
    "start": "293710",
    "end": "302230"
  },
  {
    "text": "have them talk to your remote clusters and sort of it's almost like they're a",
    "start": "302230",
    "end": "307240"
  },
  {
    "text": "part of the remote cluster so that's definitely an awesome option as well so",
    "start": "307240",
    "end": "313810"
  },
  {
    "text": "another one deployments are painful will that get any worse well I talked to",
    "start": "313810",
    "end": "320050"
  },
  {
    "text": "companies all the time that tell me about their deployments that take that take hours sometimes it takes a day",
    "start": "320050",
    "end": "326880"
  },
  {
    "text": "sometimes they think it's going to take hours and it ends up taking a day because of all of the problems that come",
    "start": "326880",
    "end": "333970"
  },
  {
    "text": "along a deployment never happens the same way twice it executes it does what",
    "start": "333970",
    "end": "341080"
  },
  {
    "text": "it's supposed to do and then they have to go through and clean up all the things that it missed so deployments are",
    "start": "341080",
    "end": "347890"
  },
  {
    "text": "all are you know tend to be problem areas so when you talk to your",
    "start": "347890",
    "end": "353200"
  },
  {
    "text": "developers or talk to your business people about increasing them all they",
    "start": "353200",
    "end": "359290"
  },
  {
    "text": "think is well I'm gonna take that problem area and multiply it by 10 or by",
    "start": "359290",
    "end": "364360"
  },
  {
    "text": "a hundred or whatever and that sounds like a bad idea so have an answer ready",
    "start": "364360",
    "end": "369669"
  },
  {
    "text": "for will this get worse no we're going to streamline deployments we're going to automate everything and we're going to",
    "start": "369669",
    "end": "376150"
  },
  {
    "text": "use tools that we'll have at our disposal to be able to eliminate the",
    "start": "376150",
    "end": "381790"
  },
  {
    "text": "problems that we're seeing today and deploy in a totally new totally different way and we'll look we'll talk",
    "start": "381790",
    "end": "388360"
  },
  {
    "text": "more about that in a second my kin config management handles everything",
    "start": "388360",
    "end": "393430"
  },
  {
    "text": "perfectly I'm just going to bake in micro services into my config manager",
    "start": "393430",
    "end": "399200"
  },
  {
    "text": "I see why it's tempting to do that as operations people you might be used to",
    "start": "399200",
    "end": "407000"
  },
  {
    "text": "putting everything into config management because that is the authoritative description of how a",
    "start": "407000",
    "end": "413810"
  },
  {
    "text": "server should look right well the difference here is with this",
    "start": "413810",
    "end": "419240"
  },
  {
    "text": "move from monolith to micro-services we also want to take advantage of not",
    "start": "419240",
    "end": "424820"
  },
  {
    "text": "having to think in terms of servers so we want to think in terms of services",
    "start": "424820",
    "end": "430010"
  },
  {
    "text": "and all we care about is having our service run and having the right scale",
    "start": "430010",
    "end": "435710"
  },
  {
    "text": "for our service we don't care what it runs on we don't care where it runs it",
    "start": "435710",
    "end": "442220"
  },
  {
    "text": "just needs to be running so if we start to pivot and think about services",
    "start": "442220",
    "end": "448490"
  },
  {
    "text": "instead of servers then we just need to be able to describe services at that",
    "start": "448490",
    "end": "453800"
  },
  {
    "text": "point the server itself can become very simple so I was actually able to get rid",
    "start": "453800",
    "end": "459350"
  },
  {
    "text": "of config management altogether what do you mean you have to be on call with a",
    "start": "459350",
    "end": "465980"
  },
  {
    "text": "shift from monolith to micro services there's going to be a lot more to know",
    "start": "465980",
    "end": "472310"
  },
  {
    "text": "about a lot more you know instead of one monolith that everyone knows how to restart you might have hundreds of",
    "start": "472310",
    "end": "478880"
  },
  {
    "text": "services and one team of people one operation staff it would be very",
    "start": "478880",
    "end": "484640"
  },
  {
    "text": "difficult to potentially impossible for them to know all the details about how the interactions and interoperability",
    "start": "484640",
    "end": "491510"
  },
  {
    "text": "--zz work so put the development teams for those services on call because",
    "start": "491510",
    "end": "498440"
  },
  {
    "text": "they're the experts in that service but of course the resistance is will on call sounds terrible you know I hear the",
    "start": "498440",
    "end": "505640"
  },
  {
    "text": "operations team complaining all the time that they got thousands of pages over the weekend they were up for you know 12",
    "start": "505640",
    "end": "514010"
  },
  {
    "text": "hours working on a problem etc etc the answer to this is we're going to fix",
    "start": "514010",
    "end": "520969"
  },
  {
    "text": "that we're on call is not going to be like that if we can solve all of the",
    "start": "520970",
    "end": "526400"
  },
  {
    "text": "basic problems of on-call how how to restart a service how to make sure that",
    "start": "526400",
    "end": "531740"
  },
  {
    "text": "it's running how make sure that it's healthy if we can solve all of those problems then the on call becomes a lot better",
    "start": "531740",
    "end": "538670"
  },
  {
    "text": "and the problems that you might end up getting paged with at this point are gonna be more developer related there's",
    "start": "538670",
    "end": "544820"
  },
  {
    "text": "some code that isn't working quite right so I need to change it and push a fix and that's definitely something that a",
    "start": "544820",
    "end": "552230"
  },
  {
    "text": "developer is going to be more likely to do so how can a ws help with this well I",
    "start": "552230",
    "end": "559610"
  },
  {
    "start": "556000",
    "end": "590000"
  },
  {
    "text": "mentioned cloud 9 definitely check that one out there's also code build and code pipeline so these will actually",
    "start": "559610",
    "end": "566060"
  },
  {
    "text": "orchestrate actions for you totally customizable you can have you can have them execute pretty much anything we",
    "start": "566060",
    "end": "574310"
  },
  {
    "text": "have Amazon ECS and eks and then of course AWS Fargate and these will be",
    "start": "574310",
    "end": "580430"
  },
  {
    "text": "really good tools for you to orchestrate your containers so we're gonna take a",
    "start": "580430",
    "end": "585709"
  },
  {
    "text": "look in a little bit and we're gonna talk specifically about containers how",
    "start": "585709",
    "end": "591560"
  },
  {
    "text": "does docker help with the migration so anytime you talk about monolith to micro",
    "start": "591560",
    "end": "596930"
  },
  {
    "text": "services docker is almost always part of the conversation why well one reason",
    "start": "596930",
    "end": "604089"
  },
  {
    "text": "with packaging so if you think about all",
    "start": "604089",
    "end": "609649"
  },
  {
    "text": "of the problems with distributing software how do you know that you have",
    "start": "609649",
    "end": "614720"
  },
  {
    "text": "all the libraries installed into all the right places how do you know that a server didn't miss its check-in didn't",
    "start": "614720",
    "end": "620360"
  },
  {
    "text": "get an update if you can bundle all of that together into one package and",
    "start": "620360",
    "end": "625910"
  },
  {
    "text": "distribute it around in one form then you can be guaranteed that you have",
    "start": "625910",
    "end": "631010"
  },
  {
    "text": "everything you need to run this code and then you know it's going to execute the same everywhere so docker solves that",
    "start": "631010",
    "end": "637579"
  },
  {
    "text": "problem for us so that's why it is it is goes hand-in-hand with a switch from",
    "start": "637579",
    "end": "644300"
  },
  {
    "text": "monolith to micro services what about scaling so with scaling we can scale up",
    "start": "644300",
    "end": "652130"
  },
  {
    "text": "we can scale down because docker is so easy to execute and because it executes",
    "start": "652130",
    "end": "658790"
  },
  {
    "text": "the same no matter what language you're running you can build tooling around you",
    "start": "658790",
    "end": "664820"
  },
  {
    "text": "know make more of or tooling around okay I don't need this many knock some down and that tooling",
    "start": "664820",
    "end": "671720"
  },
  {
    "text": "becomes Universal no matter what language it is you're running experimenting with when you have all of",
    "start": "671720",
    "end": "677990"
  },
  {
    "text": "these problems solved packaging solved distribution how do I push or an image around and then scaling solved then",
    "start": "677990",
    "end": "685370"
  },
  {
    "text": "experimenting becomes easier you can actually have a developer just have an idea and they don't they aren't bound by",
    "start": "685370",
    "end": "692300"
  },
  {
    "text": "I need to write in a certain language they aren't bound by I need to have an instance of a certain type or certain",
    "start": "692300",
    "end": "699650"
  },
  {
    "text": "resources or certain libraries installed they don't have to go to operations and",
    "start": "699650",
    "end": "704779"
  },
  {
    "text": "say you know make me a server that looks like this and have all the back-and-forth while",
    "start": "704779",
    "end": "710630"
  },
  {
    "text": "that happens they can just experiment package up their code see that it runs push it out to a test cluster and then",
    "start": "710630",
    "end": "719390"
  },
  {
    "text": "start to get people's opinion on it you know they can show it to their product team and they can say what do you think about this and then they can iterate on",
    "start": "719390",
    "end": "726350"
  },
  {
    "text": "it or maybe roll it back some companies that that are very mature in this area",
    "start": "726350",
    "end": "731390"
  },
  {
    "text": "already will actually push this all the way to production and they'll actually send a small amount of traffic to",
    "start": "731390",
    "end": "738410"
  },
  {
    "text": "production and get people's opinion on that so how can I WS help with this well",
    "start": "738410",
    "end": "745400"
  },
  {
    "start": "742000",
    "end": "786000"
  },
  {
    "text": "of course ECS eks as we mentioned there's also ECR",
    "start": "745400",
    "end": "750650"
  },
  {
    "text": "for hosting your containers this is a registry that you can use it's very",
    "start": "750650",
    "end": "756950"
  },
  {
    "text": "robust very scalable and something that you don't have to run yourself cloud",
    "start": "756950",
    "end": "762560"
  },
  {
    "text": "formation and then there's application load balancer application load balancer alb is one way to actually route traffic",
    "start": "762560",
    "end": "770480"
  },
  {
    "text": "where it needs to go and you can route traffic in a very intelligent way then there's cloud watch Amazon AWS code",
    "start": "770480",
    "end": "778430"
  },
  {
    "text": "pipeline again for orchestrating whatever actions whatever changes you need to execute and code build so of",
    "start": "778430",
    "end": "789260"
  },
  {
    "start": "786000",
    "end": "872000"
  },
  {
    "text": "course the technical challenge is if we stop and think about what are what are some very common problems that we run",
    "start": "789260",
    "end": "796130"
  },
  {
    "text": "into you know problem number one is the service running is my monolith running and if it's not running what do",
    "start": "796130",
    "end": "802880"
  },
  {
    "text": "I need to do so operationally for four years we've done things like we'll start",
    "start": "802880",
    "end": "808520"
  },
  {
    "text": "the service with supervisor D or start the service with Monnett that's of",
    "start": "808520",
    "end": "814160"
  },
  {
    "text": "course a great answer but what if you have you know hundreds of services or",
    "start": "814160",
    "end": "819230"
  },
  {
    "text": "thousands of services can you imagine trying to configure Monnett for handling",
    "start": "819230",
    "end": "825170"
  },
  {
    "text": "that or having services that might be there or might not be there or trying to",
    "start": "825170",
    "end": "830330"
  },
  {
    "text": "scale up or down very rapidly second-by-second it's not really built",
    "start": "830330",
    "end": "836540"
  },
  {
    "text": "for that right so orchestration can help us here my clicker is sticking is the",
    "start": "836540",
    "end": "846230"
  },
  {
    "text": "process healthy this is another problem that we it's a common problem and we",
    "start": "846230",
    "end": "851839"
  },
  {
    "text": "want to be able to solve it so having a built-in way to Health Check having a built-in standard way to define what a",
    "start": "851839",
    "end": "859850"
  },
  {
    "text": "healthy process looks like and then if it's not healthy a standard reaction the",
    "start": "859850",
    "end": "865070"
  },
  {
    "text": "standard reaction is simply kill the containers and let the orchestrator start up a new one how do you get",
    "start": "865070",
    "end": "872990"
  },
  {
    "text": "traffic into your processes again standardize around something like alb for ingress NLB if you don't need layer",
    "start": "872990",
    "end": "880550"
  },
  {
    "text": "seven if you want layer four sending traffic to the right location and have",
    "start": "880550",
    "end": "886910"
  },
  {
    "text": "that location B what's dynamic so as containers start up spin down run on",
    "start": "886910",
    "end": "892640"
  },
  {
    "text": "random ports you can actually have a lb and n lb have the orchestrator update",
    "start": "892640",
    "end": "898910"
  },
  {
    "text": "it's config in real-time so another one",
    "start": "898910",
    "end": "907670"
  },
  {
    "start": "902000",
    "end": "958000"
  },
  {
    "text": "how does one service find another with a monolith you don't really have this problem because all of the all of the",
    "start": "907670",
    "end": "914029"
  },
  {
    "text": "logic all of the code is inside one monolith so it's easy to just to",
    "start": "914029",
    "end": "919040"
  },
  {
    "text": "understand I'm going to call another function I'm gonna call another part of the code but if that's actually now",
    "start": "919040",
    "end": "924649"
  },
  {
    "text": "broken out and running potentially somewhere else on a different machine how do you know how to find it how do",
    "start": "924649",
    "end": "929870"
  },
  {
    "text": "you address it so service discovery is something that is built into many orchestrators including ECS we have",
    "start": "929870",
    "end": "937160"
  },
  {
    "text": "integration with service disk with route 53 service discovery and eks we have",
    "start": "937160",
    "end": "942890"
  },
  {
    "text": "built in service discovery available with that we just give all of our",
    "start": "942890",
    "end": "947990"
  },
  {
    "text": "services unique names and then we can address them directly by the unique",
    "start": "947990",
    "end": "953029"
  },
  {
    "text": "names we can route traffic from one service to another according to name",
    "start": "953029",
    "end": "958209"
  },
  {
    "text": "when should you scale up or when should you scale down metrics are part of a",
    "start": "958209",
    "end": "964670"
  },
  {
    "text": "native Orchestrator this is part of a healthy robust Orchestrator so being able to understand what metrics should I",
    "start": "964670",
    "end": "972110"
  },
  {
    "text": "be seeing when I'm healthy when am I at my cap and when do I need to scale up it's something that you'll figure out",
    "start": "972110",
    "end": "978500"
  },
  {
    "text": "for your own service and then you'll be able to just sort of wire in and when",
    "start": "978500",
    "end": "983600"
  },
  {
    "text": "you reach a certain threshold make more and if you need then to have a bigger",
    "start": "983600",
    "end": "988910"
  },
  {
    "text": "cluster because your machines are so simple you can simply just add more machines to your cluster and then of",
    "start": "988910",
    "end": "999860"
  },
  {
    "text": "course deploys you know I mentioned this a minute ago as a pain point so how does the orchestration solve deploys well",
    "start": "999860",
    "end": "1006640"
  },
  {
    "text": "this is one of my favorite parts orchestrators are they basically work by",
    "start": "1006640",
    "end": "1012370"
  },
  {
    "text": "describing the end state this is the state that I want to see and then the orchestrator figures out what do I need",
    "start": "1012370",
    "end": "1018520"
  },
  {
    "text": "to go and change to make that happen so you don't have to ssh to a thousand",
    "start": "1018520",
    "end": "1024160"
  },
  {
    "text": "servers you don't have to execute remote commands and or execute a script or",
    "start": "1024160",
    "end": "1029829"
  },
  {
    "text": "execute a series of commands you don't have to copy a bunch of files from one",
    "start": "1029829",
    "end": "1035380"
  },
  {
    "text": "place to many and then move a bunch of symlinks and have all this coordinator effort instead what you do is you just",
    "start": "1035380",
    "end": "1042010"
  },
  {
    "text": "push a description or update a description potentially with a new docker tag and then the orchestrator",
    "start": "1042010",
    "end": "1048548"
  },
  {
    "text": "says okay well everything is described everything as described is perfect except for this one docker tag so I'm",
    "start": "1048549",
    "end": "1055750"
  },
  {
    "text": "gonna go ahead and do whatever I need to do to push out images have the agent",
    "start": "1055750",
    "end": "1062350"
  },
  {
    "text": "running on each server pull the right image and then restart the process restart the container so it makes it",
    "start": "1062350",
    "end": "1069940"
  },
  {
    "text": "very simple to do deploys in it and it's in a unified sort of way what else what",
    "start": "1069940",
    "end": "1081610"
  },
  {
    "start": "1079000",
    "end": "1138000"
  },
  {
    "text": "else do we get out of using orchestration by baking in all of our logic all of our description of how our",
    "start": "1081610",
    "end": "1088659"
  },
  {
    "text": "services should run into the orchestrator then our machines the",
    "start": "1088659",
    "end": "1093760"
  },
  {
    "text": "description or the configuration of our machines becomes very simple so it becomes very easy to rotate your",
    "start": "1093760",
    "end": "1100179"
  },
  {
    "text": "machines out so if you have any kind of security risk and you need an update it's easy to just replace machines with",
    "start": "1100179",
    "end": "1107710"
  },
  {
    "text": "newer versions of machines and this actually leads to immutable infrastructure and here immutable",
    "start": "1107710",
    "end": "1114280"
  },
  {
    "text": "doesn't mean impossible - right - it simply means I'm not going to mutate",
    "start": "1114280",
    "end": "1119860"
  },
  {
    "text": "this config I'm not going to go from change one to change two to change three",
    "start": "1119860",
    "end": "1124870"
  },
  {
    "text": "to change four I'm going to start fresh every single time and anytime I need to update a config I'm gonna update the",
    "start": "1124870",
    "end": "1131679"
  },
  {
    "text": "config and then replace all the machines so they will start with the updated config what else can you do with",
    "start": "1131679",
    "end": "1141070"
  },
  {
    "start": "1138000",
    "end": "1187000"
  },
  {
    "text": "orchestration it can help save you money so you can replace special snowflakes",
    "start": "1141070",
    "end": "1146169"
  },
  {
    "text": "that are out there that have to be a little bit different replace them with",
    "start": "1146169",
    "end": "1151230"
  },
  {
    "text": "running container that are just they're just running inside your cluster which",
    "start": "1151230",
    "end": "1156520"
  },
  {
    "text": "is just a big resource pool docker will make it easy to co-locate services so",
    "start": "1156520",
    "end": "1161950"
  },
  {
    "text": "instead of one service one instance or for reliability one service three",
    "start": "1161950",
    "end": "1168309"
  },
  {
    "text": "instances you can actually just have a fleet of servers out there that it's just a big",
    "start": "1168309",
    "end": "1173860"
  },
  {
    "text": "Poole and you launch docker containers until you're close to full and as you need more resources you simply add more",
    "start": "1173860",
    "end": "1181500"
  },
  {
    "text": "instances and then you can run more docker containers so how can AWS help",
    "start": "1181500",
    "end": "1188980"
  },
  {
    "start": "1187000",
    "end": "1230000"
  },
  {
    "text": "with this of course ECS our native Orchestrator eks if you want an",
    "start": "1188980",
    "end": "1194350"
  },
  {
    "text": "open-source Orchestrator it's our open source kubernetes service Fargate if you",
    "start": "1194350",
    "end": "1199720"
  },
  {
    "text": "don't even want to manage instances at all don't want to think about scaling the underlying infrastructure you can",
    "start": "1199720",
    "end": "1205360"
  },
  {
    "text": "execute on Fargate CloudFormation for describing the end state of your",
    "start": "1205360",
    "end": "1210669"
  },
  {
    "text": "infrastructure and then cloud formation will just reach out and make it happen auto scaling for scaling up and down",
    "start": "1210669",
    "end": "1217870"
  },
  {
    "text": "your tasks or your containers and then alb for routing traffic cloud watch and",
    "start": "1217870",
    "end": "1224830"
  },
  {
    "text": "then route 53 for service discovery these are all definitely services you should be checking out so next up I want",
    "start": "1224830",
    "end": "1232600"
  },
  {
    "start": "1230000",
    "end": "1343000"
  },
  {
    "text": "to introduce max blaze he's the staff operations engineer at duolingo and he's",
    "start": "1232600",
    "end": "1237730"
  },
  {
    "text": "going to talk to you a little bit about their experience breaking down the monolith to micro services ok Thank You",
    "start": "1237730",
    "end": "1247990"
  },
  {
    "text": "Bret so I think Brent covered you know a lot of the social aspects and we",
    "start": "1247990",
    "end": "1253419"
  },
  {
    "text": "definitely ran into a lot of these things as we moved from monolith the micro services I'm gonna really get into",
    "start": "1253419",
    "end": "1259450"
  },
  {
    "text": "the technical details but before I do that I want to take a poll so how many of you have heard of duolingo well most",
    "start": "1259450",
    "end": "1267010"
  },
  {
    "text": "the room we have any really active users ok few more so for those who don't know",
    "start": "1267010",
    "end": "1275100"
  },
  {
    "text": "the mission of duolingo is free an accessible language education for all and we really take this to heart let's",
    "start": "1275100",
    "end": "1284140"
  },
  {
    "text": "go back alright so this is our main application it is currently the most",
    "start": "1284140",
    "end": "1289630"
  },
  {
    "text": "downloaded education app in the world and what we really try to do is gamify learning we want to make language",
    "start": "1289630",
    "end": "1296140"
  },
  {
    "text": "education fun for everyone and right now we have 30 languages across 80 different",
    "start": "1296140",
    "end": "1303640"
  },
  {
    "text": "courses in various language directions and one of the cool things is English is",
    "start": "1303640",
    "end": "1310100"
  },
  {
    "text": "over 50% of our user base worldwide so there's a great demand for learning",
    "start": "1310100",
    "end": "1316100"
  },
  {
    "text": "English and not only is it fun it's very effective so there was an independent",
    "start": "1316100",
    "end": "1321980"
  },
  {
    "text": "study conducted a few years ago thirty four hours of duolingo equals one college semester of Spanish and we have",
    "start": "1321980",
    "end": "1330950"
  },
  {
    "text": "a lot of users we have 300 million worldwide and we also have a very lean",
    "start": "1330950",
    "end": "1337460"
  },
  {
    "text": "company so we only have 150 employees about half of which are engineers so",
    "start": "1337460",
    "end": "1343880"
  },
  {
    "start": "1343000",
    "end": "1381000"
  },
  {
    "text": "here's our growth curve in terms of users and employees and I often get the question when I show this graph is how",
    "start": "1343880",
    "end": "1351170"
  },
  {
    "text": "were you able to sustain this sort of growth with you know so few people and we're thinking about 2 million users for",
    "start": "1351170",
    "end": "1358460"
  },
  {
    "text": "every single employee and the answer to that is a be testing so we make very",
    "start": "1358460",
    "end": "1364750"
  },
  {
    "text": "specific choices on the sort of experiments we run and we have hundreds of them running at any point in time and",
    "start": "1364750",
    "end": "1372200"
  },
  {
    "text": "as long as we get results they're statistically significant those are the sorts of features that we push and",
    "start": "1372200",
    "end": "1377510"
  },
  {
    "text": "that's really helped us over the years so here's a brief history of our",
    "start": "1377510",
    "end": "1383180"
  },
  {
    "start": "1381000",
    "end": "1513000"
  },
  {
    "text": "infrastructure we launched in late 2012 we were born on AWS we've never run on",
    "start": "1383180",
    "end": "1390830"
  },
  {
    "text": "anything else and we launched with mostly Python to stack running with",
    "start": "1390830",
    "end": "1396530"
  },
  {
    "text": "mostly manually built infrastructure so things got more complicated over the",
    "start": "1396530",
    "end": "1403160"
  },
  {
    "text": "years and we had to implement some sort of configuration management we ended up with ansible and we're finally able to",
    "start": "1403160",
    "end": "1410030"
  },
  {
    "text": "rebuild all of our a.m. eyes with a very definitive configuration and some more",
    "start": "1410030",
    "end": "1419030"
  },
  {
    "text": "time passed and we started run into this issue where deployments were not happening fast enough like I said we're",
    "start": "1419030",
    "end": "1425030"
  },
  {
    "text": "running lots of experiments developers want their changes out you know immediately all the time I'm sure a lot",
    "start": "1425030",
    "end": "1431000"
  },
  {
    "text": "of you have this issue so we really started to think about micro services so",
    "start": "1431000",
    "end": "1436220"
  },
  {
    "text": "actually our first micro service did not run on ETS on Bienstock and we gave developers",
    "start": "1436220",
    "end": "1443200"
  },
  {
    "text": "access to the entire stack so that they can move really quickly and that also",
    "start": "1443200",
    "end": "1448210"
  },
  {
    "text": "became kind of an incubator for our micro service platform that we later",
    "start": "1448210",
    "end": "1454210"
  },
  {
    "text": "move to around the same time we also started auto scaling on ec2 we started",
    "start": "1454210",
    "end": "1459940"
  },
  {
    "text": "to care about costs at the certain scale then we added centralized dashboards and",
    "start": "1459940",
    "end": "1466120"
  },
  {
    "text": "logging this was so that all of our development teams as they were growing can have you know a lot more",
    "start": "1466120",
    "end": "1472180"
  },
  {
    "text": "introspection to what was going on for all these micro services and also the",
    "start": "1472180",
    "end": "1477760"
  },
  {
    "text": "monolith and I would say terraform has",
    "start": "1477760",
    "end": "1484030"
  },
  {
    "text": "been one of the biggest wins at least for me this was this is life-changing so at this point we actually imported our",
    "start": "1484030",
    "end": "1491260"
  },
  {
    "text": "entire manually built infrastructure for the most part and we were able to first",
    "start": "1491260",
    "end": "1497050"
  },
  {
    "text": "time do code reviews of the infrastructure which was absolutely fantastic and then a little over a year",
    "start": "1497050",
    "end": "1505810"
  },
  {
    "text": "ago we started moving towards ECS and poured our first micro service there so",
    "start": "1505810",
    "end": "1514450"
  },
  {
    "start": "1513000",
    "end": "1584000"
  },
  {
    "text": "in general why moved to micro services so there's scalability so not only did",
    "start": "1514450",
    "end": "1520060"
  },
  {
    "text": "we want to scare scale the infrastructure horizontally right rather than vertically we also wanted to scale",
    "start": "1520060",
    "end": "1527560"
  },
  {
    "text": "our teams so we didn't want to hire one or two engineers for every new service like though that wasn't gonna happen",
    "start": "1527560",
    "end": "1532870"
  },
  {
    "text": "especially with our size so we really try to automate as much as possible I",
    "start": "1532870",
    "end": "1538810"
  },
  {
    "text": "also mentioned velocity before so developers can deploy what they want",
    "start": "1538810",
    "end": "1544000"
  },
  {
    "text": "when they want there was also a problem of flexibility so developers wanted to",
    "start": "1544000",
    "end": "1549730"
  },
  {
    "text": "start using more languages like Scala nodejs Python 3 rather than just our old",
    "start": "1549730",
    "end": "1556210"
  },
  {
    "text": "Python 2 stack and also reliability we wanted to break away the really fragile",
    "start": "1556210",
    "end": "1561580"
  },
  {
    "text": "parts of our monolith that weren't really important that could impact reliability and we wanted to achieve",
    "start": "1561580",
    "end": "1567280"
  },
  {
    "text": "four nines this was something we had never done before or even you know 100 percenter",
    "start": "1567280",
    "end": "1573830"
  },
  {
    "text": "we were also running into some cost savings issues you know at the scale about a year ago and we really wanted to",
    "start": "1573830",
    "end": "1579770"
  },
  {
    "text": "start tackling that especially with compute so what do you decide what to",
    "start": "1579770",
    "end": "1587360"
  },
  {
    "start": "1584000",
    "end": "1623000"
  },
  {
    "text": "carve out of your monolith first so this is what I recommend so start with something small but impactful so one of",
    "start": "1587360",
    "end": "1593960"
  },
  {
    "text": "the first features we carved out was just simply reminder service this is just a reminder to practice your",
    "start": "1593960",
    "end": "1600350"
  },
  {
    "text": "language into a lingo and then we moved up in size and complexity so I swear",
    "start": "1600350",
    "end": "1606200"
  },
  {
    "text": "with every single feature reported every micro service that we move from Bienstock to e CS we ran into some",
    "start": "1606200",
    "end": "1612260"
  },
  {
    "text": "unexpected problem I swear every single time so accumulate all that knowledge",
    "start": "1612260",
    "end": "1617720"
  },
  {
    "text": "and then tackle the really hard stuff at the very end and it'll be much easier",
    "start": "1617720",
    "end": "1622960"
  },
  {
    "text": "now let's talk about just raw probabilities so let's say you have two",
    "start": "1622960",
    "end": "1628640"
  },
  {
    "start": "1623000",
    "end": "1678000"
  },
  {
    "text": "nines of availability across your monolith you know it's not great but it's you know it's okay for",
    "start": "1628640",
    "end": "1633920"
  },
  {
    "text": "something that's not that important and you split up your features but they're",
    "start": "1633920",
    "end": "1639470"
  },
  {
    "text": "still intertwined they're still dependent on each other you know your availability is gonna go down you're not",
    "start": "1639470",
    "end": "1645680"
  },
  {
    "text": "really at least gonna be solving the problem of availability you might solve you know flexibility or velocity but",
    "start": "1645680",
    "end": "1653630"
  },
  {
    "text": "yeah your availability is not going to be great versus if you make them independent as",
    "start": "1653630",
    "end": "1658910"
  },
  {
    "text": "you implement something like circuit breakers there's a lot of open source tools like Netflix history since we were",
    "start": "1658910",
    "end": "1667070"
  },
  {
    "text": "on Python for the most part we actually implemented our own circuit breaker library you can get something like you",
    "start": "1667070",
    "end": "1673760"
  },
  {
    "text": "know six nines of uptime with just three services right so why use docker Brent",
    "start": "1673760",
    "end": "1681020"
  },
  {
    "start": "1678000",
    "end": "1719000"
  },
  {
    "text": "touched on some of this before so it standardizes the build process and encapsulate encapsulates dependencies",
    "start": "1681020",
    "end": "1687970"
  },
  {
    "text": "deployments are really quick roll backs are really quick so you're spinning up docker containers in seconds rather than",
    "start": "1687970",
    "end": "1694970"
  },
  {
    "text": "minutes with instances and one of the best things for us was the flexible",
    "start": "1694970",
    "end": "1700430"
  },
  {
    "text": "resource allocation so you have you know essentially an infinite combinations of memory and CPU to",
    "start": "1700430",
    "end": "1706190"
  },
  {
    "text": "you're microservice rather than trying to pick an instance that will fit it and",
    "start": "1706190",
    "end": "1711370"
  },
  {
    "text": "also one of the biggest early wins that we had was simplifying local development",
    "start": "1711370",
    "end": "1717110"
  },
  {
    "text": "setup so this was our initial setup right just like a long list",
    "start": "1717110",
    "end": "1724070"
  },
  {
    "text": "please don't screenshot it it's not it's not useful but at this point when we",
    "start": "1724070",
    "end": "1730549"
  },
  {
    "text": "were doing this we had dozens of micro services across you know lots of teams and every new employee had to come in",
    "start": "1730549",
    "end": "1737570"
  },
  {
    "text": "and go through this entire process which would take a long time and I should also mention that we were running on Mac OS",
    "start": "1737570",
    "end": "1743029"
  },
  {
    "text": "so our operating system was not running the Linux platter it was not matching the Linux platform that we're running in",
    "start": "1743029",
    "end": "1748879"
  },
  {
    "text": "production which you know can be an issue so we went from this running on",
    "start": "1748879",
    "end": "1754309"
  },
  {
    "text": "Mac OS and with docker it turned into this so now we have a standard way to set up local environments which is nice",
    "start": "1754309",
    "end": "1761029"
  },
  {
    "text": "and easy so why use docker with Amazon ECS so we looked at a lot of different",
    "start": "1761029",
    "end": "1768889"
  },
  {
    "text": "orchestration platforms we looked at Cooper Nettie's we looked at hofstra Corp nomads and they were all missing at",
    "start": "1768889",
    "end": "1775490"
  },
  {
    "text": "least one of these features so we ended up going with ECS so there's task auto scaling so if you're not familiar with",
    "start": "1775490",
    "end": "1781549"
  },
  {
    "text": "this term a task is a group of one or more containers that are grouped and",
    "start": "1781549",
    "end": "1787009"
  },
  {
    "text": "that is a task so you can scale those up with CPU across the entire service",
    "start": "1787009",
    "end": "1792639"
  },
  {
    "text": "there's task level AWS I am so we can isolate I am permissions at the service",
    "start": "1792639",
    "end": "1799250"
  },
  {
    "text": "level rather than at the instance level there's cloud watch integration we are already using tools like Ravana so this",
    "start": "1799250",
    "end": "1807169"
  },
  {
    "text": "plug right into our existing monitoring infrastructure and also a dynamic alb",
    "start": "1807169",
    "end": "1812360"
  },
  {
    "text": "targets so what do you do with this random port that you're assigned to your container you have to map it to something and alb integration makes that",
    "start": "1812360",
    "end": "1819529"
  },
  {
    "text": "really nice and easy it's essentially automatic and also manageability like I said we're really small we only",
    "start": "1819529",
    "end": "1826190"
  },
  {
    "text": "have two ops engineers in the entire company so we didn't really have to manage much we'd have to worry about the",
    "start": "1826190",
    "end": "1831889"
  },
  {
    "text": "Cooper Nettie's cluster or the Nomad cluster going down it was all managed for us so I guess",
    "start": "1831889",
    "end": "1839420"
  },
  {
    "start": "1837000",
    "end": "1893000"
  },
  {
    "text": "we're huge fans of terraform and we actually use terraform to abstract all",
    "start": "1839420",
    "end": "1844580"
  },
  {
    "text": "this for our developers so we have a simple web service you could stick you",
    "start": "1844580",
    "end": "1849920"
  },
  {
    "text": "know laughs or cloud front in front of this we have a worker service either",
    "start": "1849920",
    "end": "1855080"
  },
  {
    "text": "demonized or cron based using cloud watch events we have multitude of data",
    "start": "1855080",
    "end": "1861800"
  },
  {
    "text": "stores so if you need encrypted passwords you can use kms Amazon RDS",
    "start": "1861800",
    "end": "1868010"
  },
  {
    "text": "Aurora dynamo were one of the biggest uses of DynamoDB and also we use Redis",
    "start": "1868010",
    "end": "1874670"
  },
  {
    "text": "and memcache quite a bit it also tied into our existing monitoring infrastructure so all those tools I",
    "start": "1874670",
    "end": "1881120"
  },
  {
    "text": "should be beginning at the beginning we're still using every single one of those we just made you know small",
    "start": "1881120",
    "end": "1886850"
  },
  {
    "text": "incremental improvements until we reached this current setup here so let's",
    "start": "1886850",
    "end": "1893840"
  },
  {
    "text": "take a look at what one of these services looks like in code you can see it's you know very small number of",
    "start": "1893840",
    "end": "1900980"
  },
  {
    "text": "parameters so the first set all ties into billing so these are all billing tags these are all mandatory for every",
    "start": "1900980",
    "end": "1907940"
  },
  {
    "text": "single service that we deploy you have an auto scaling set so the min and Max count CPU and memory resources and at",
    "start": "1907940",
    "end": "1917540"
  },
  {
    "text": "the bottom there you can see the container port which will map to the alb so here's what one of those definitions",
    "start": "1917540",
    "end": "1924590"
  },
  {
    "text": "looks like for an Aurora database very similar billing tag so you can see billing across all the micro service and",
    "start": "1924590",
    "end": "1932270"
  },
  {
    "text": "all of its resources we have we have the",
    "start": "1932270",
    "end": "1939440"
  },
  {
    "text": "database engine so we're running Aurora Postgres and also the the instance type",
    "start": "1939440",
    "end": "1944540"
  },
  {
    "text": "here you should also notice that there's a KMS key that's fully encrypted so this",
    "start": "1944540",
    "end": "1953810"
  },
  {
    "start": "1952000",
    "end": "2000000"
  },
  {
    "text": "is what our CI CD setup looks like so we use Jenkins for building the docker",
    "start": "1953810",
    "end": "1959450"
  },
  {
    "text": "files and there's a developer cycle there and we use github so the custom",
    "start": "1959450",
    "end": "1966830"
  },
  {
    "text": "thing there is the plan of planning apply while supplying a version string",
    "start": "1966830",
    "end": "1973249"
  },
  {
    "text": "I should also mention that we use Amazon s3 to store the terraform State in an",
    "start": "1973249",
    "end": "1978440"
  },
  {
    "text": "encrypted bucket so that allows us to have passwords within terraform without",
    "start": "1978440",
    "end": "1983600"
  },
  {
    "text": "actually uploading it to the github repo so the normal flow is the docker file is",
    "start": "1983600",
    "end": "1990679"
  },
  {
    "text": "built on Jenkins it's uploaded to the Amazon ECR repo and then ECS pulls down",
    "start": "1990679",
    "end": "1996350"
  },
  {
    "text": "the image during the deployment with terraform so let's talk a little a",
    "start": "1996350",
    "end": "2002649"
  },
  {
    "start": "2000000",
    "end": "2070000"
  },
  {
    "text": "little bit about load balancing so this is one of the first bumps that we ran into so al B's and CL B's are not equivalent",
    "start": "2002649",
    "end": "2012159"
  },
  {
    "text": "and they're not the able T is definitely not a drop-in replacement so the CL B if you're not aware aka ELB that was the",
    "start": "2012159",
    "end": "2019659"
  },
  {
    "text": "old name of it alb runs at layer 7 the CL b can run at",
    "start": "2019659",
    "end": "2025119"
  },
  {
    "text": "layer 4 I can do TCP and al B's we found are definitely more strict when handling",
    "start": "2025119",
    "end": "2031990"
  },
  {
    "text": "malformed requests so we had some services that form their own requests and had custom headers and the other",
    "start": "2031990",
    "end": "2039249"
  },
  {
    "text": "thing to keep in mind is the AL BS default to http 2 and would be interesting things about that is headers",
    "start": "2039249",
    "end": "2045970"
  },
  {
    "text": "are always passed as lowercase and we had some services that assumed a case so",
    "start": "2045970",
    "end": "2051730"
  },
  {
    "text": "you could see that that becomes a real issue so there's some little things you have to think about there's also lots of",
    "start": "2051730",
    "end": "2058030"
  },
  {
    "text": "difference differences in the cloud watch metrics so al B's are more discreet for errors versus CL abuse or",
    "start": "2058030",
    "end": "2064750"
  },
  {
    "text": "continuous and this kind of mess up your alarms if you're not careful",
    "start": "2064750",
    "end": "2069990"
  },
  {
    "text": "so test global AWS I am permissions so I definitely advise you to apply all of",
    "start": "2069990",
    "end": "2076270"
  },
  {
    "start": "2070000",
    "end": "2120000"
  },
  {
    "text": "your iam permissions at the service level don't really share any I am resources I know there's kind of a big",
    "start": "2076270",
    "end": "2083858"
  },
  {
    "text": "Bush a big push to do that sort of thing but keep everything separate because you",
    "start": "2083859",
    "end": "2090069"
  },
  {
    "text": "don't want you know a small accidental change to ripple across all of your services and one thing to note",
    "start": "2090069",
    "end": "2097329"
  },
  {
    "text": "I am TAS level permissions needs to be supported by your AWS client libraries",
    "start": "2097329",
    "end": "2102549"
  },
  {
    "text": "so we have a lot of boto to code in our Python stack and it actually",
    "start": "2102549",
    "end": "2107710"
  },
  {
    "text": "doesn't support this so as we're porting to boto 3 which does we actually moved all those applications",
    "start": "2107710",
    "end": "2115390"
  },
  {
    "text": "to a separate cluster to kind of segregated so Microsoft standard",
    "start": "2115390",
    "end": "2122289"
  },
  {
    "start": "2120000",
    "end": "2186000"
  },
  {
    "text": "micro-service standardization so this becomes a really big deal as you add services and I wouldn't even",
    "start": "2122289",
    "end": "2129819"
  },
  {
    "text": "run you know a dozen micro services without some sort of standardization so from the get-go try to develop a common",
    "start": "2129819",
    "end": "2135910"
  },
  {
    "text": "naming scheme for repos and services Auto generate as much as the initial service is possible so have some sort of",
    "start": "2135910",
    "end": "2143829"
  },
  {
    "text": "service factories so your developers can start with something nice and easy the",
    "start": "2143829",
    "end": "2149739"
  },
  {
    "text": "third point is so important so move core functionality to shared libraries especially any access to Amazon api's",
    "start": "2149739",
    "end": "2157930"
  },
  {
    "text": "you don't want every team implementing hosts API calls separately and then at",
    "start": "2157930",
    "end": "2163420"
  },
  {
    "text": "some point you want to standardize everything and then you have to accumulate all those it's just the pain do it from the get-go definitely provide",
    "start": "2163420",
    "end": "2172390"
  },
  {
    "text": "standard alarms and dashboards and I'll show you what those look like at duolingo and also periodically review",
    "start": "2172390",
    "end": "2178690"
  },
  {
    "text": "micro services for consistency and quality we don't do this very often but I'll show you what we do for that so",
    "start": "2178690",
    "end": "2186970"
  },
  {
    "start": "2186000",
    "end": "2244000"
  },
  {
    "text": "this is what one of our web service dashboards looks like at the top we have",
    "start": "2186970",
    "end": "2192190"
  },
  {
    "text": "local time and UTC this becomes really important when you're looking at various",
    "start": "2192190",
    "end": "2197730"
  },
  {
    "text": "console dashboards they may be in your local time zone or UTC your logs might",
    "start": "2197730",
    "end": "2204039"
  },
  {
    "text": "be in different time zones you might have some other third-party applications so that's that's really nice and handy",
    "start": "2204039",
    "end": "2209920"
  },
  {
    "text": "so for whatever - whether you just happen to be looking at you'll always have that reference so we have UCS",
    "start": "2209920",
    "end": "2217630"
  },
  {
    "text": "things like healthy unhealthy and running tasks we have customer facing metrics such as latency average and",
    "start": "2217630",
    "end": "2224650"
  },
  {
    "text": "percentiles number of requests CPU min average max and one thing you should",
    "start": "2224650",
    "end": "2231279"
  },
  {
    "text": "always do is divide as much as you can by a Z so this might help you detect a",
    "start": "2231279",
    "end": "2236589"
  },
  {
    "text": "bad instance or a bad container that may be running out of memory on an",
    "start": "2236589",
    "end": "2242049"
  },
  {
    "text": "instance and here's what our worker service dashboard looks like it's a lot",
    "start": "2242049",
    "end": "2247720"
  },
  {
    "start": "2244000",
    "end": "2256000"
  },
  {
    "text": "simpler we simply add an sqs dashboard at the bottom for visible and polluted",
    "start": "2247720",
    "end": "2254890"
  },
  {
    "text": "messages and we also integrate all of this into page rudy so like Brett",
    "start": "2254890",
    "end": "2261730"
  },
  {
    "start": "2256000",
    "end": "2317000"
  },
  {
    "text": "mentioned we actually have each one of our service teams on call for their own applications and that's another reason",
    "start": "2261730",
    "end": "2269619"
  },
  {
    "text": "why you really want to have standardized dashboards so they can be on call for each other services if you have people",
    "start": "2269619",
    "end": "2276309"
  },
  {
    "text": "moving teams it's nice and easy to on board and our integration has two levels",
    "start": "2276309",
    "end": "2284500"
  },
  {
    "text": "of metrics so we have emergency alarms which go to paid or duty and then we have warning alarms that just go to",
    "start": "2284500",
    "end": "2291430"
  },
  {
    "text": "email it might be a team mailing list for for instance we also include links to play books so if you're not that",
    "start": "2291430",
    "end": "2297609"
  },
  {
    "text": "familiar with the service that you're on call for you can quickly reference the play books there and we're big uses of",
    "start": "2297609",
    "end": "2304539"
  },
  {
    "text": "slack so everything including alarms Pedro Duty alerts deployments they're",
    "start": "2304539",
    "end": "2311799"
  },
  {
    "text": "all visible and FLAC if you want to see them so I'm going to come back to",
    "start": "2311799",
    "end": "2318900"
  },
  {
    "start": "2317000",
    "end": "2342000"
  },
  {
    "text": "standardization so we gamify learning so we decided to gamify the grading of our",
    "start": "2318900",
    "end": "2324579"
  },
  {
    "text": "micro services so we have lots of different categories here and different",
    "start": "2324579",
    "end": "2330339"
  },
  {
    "text": "levels so a bronze silver gold and platinum and if the service internally",
    "start": "2330339",
    "end": "2335380"
  },
  {
    "text": "is getting all platinum it's you know it's really really good that's just the defining service within the company so",
    "start": "2335380",
    "end": "2341670"
  },
  {
    "text": "this is what part of the grading rubric looks like we try to automate this",
    "start": "2341670",
    "end": "2346900"
  },
  {
    "text": "grading as much as possible so one of the things you can automate is there like a readme file or is there an owner",
    "start": "2346900",
    "end": "2353980"
  },
  {
    "text": "that you can easily automate that some things where you might have to bring a bunch of people you know conference room",
    "start": "2353980",
    "end": "2360130"
  },
  {
    "text": "and take a look at the code is like is the architecture explained well if you",
    "start": "2360130",
    "end": "2365200"
  },
  {
    "text": "have some machine learning you know they can do this might be now afterwards please",
    "start": "2365200",
    "end": "2370980"
  },
  {
    "start": "2371000",
    "end": "2421000"
  },
  {
    "text": "all right so this is one of my favorite topics this is what what we've been working on over the last quarter is cost",
    "start": "2371100",
    "end": "2379570"
  },
  {
    "text": "reduction so there's essentially two ways that you can you know save costs",
    "start": "2379570",
    "end": "2385090"
  },
  {
    "text": "using ECS so one is at the cluster level so you can change the instance type",
    "start": "2385090",
    "end": "2390420"
  },
  {
    "text": "pricing options so spot RI on-demand you can auto scale the cluster or you could",
    "start": "2390420",
    "end": "2397330"
  },
  {
    "text": "add or remove a Z's so not always ease are created equal some a Z's have access",
    "start": "2397330",
    "end": "2403480"
  },
  {
    "text": "to more instances than others and this can be you know a big problem at a certain scale so the other way you can",
    "start": "2403480",
    "end": "2410440"
  },
  {
    "text": "do that is by allocating the right amount of resources for each service and also using tasks auto scaling for each",
    "start": "2410440",
    "end": "2418420"
  },
  {
    "text": "of those services so roughly a year ago",
    "start": "2418420",
    "end": "2423760"
  },
  {
    "text": "when we first set up the ECS cluster this was our starting point and our favorite instance type was a c3 2x large",
    "start": "2423760",
    "end": "2431940"
  },
  {
    "text": "we also had some reserved instances and then the rest we used on-demand and I",
    "start": "2431940",
    "end": "2437290"
  },
  {
    "text": "should also mention that we were not a lot of scaling for the time we didn't want to add that complexity at first so",
    "start": "2437290",
    "end": "2446130"
  },
  {
    "start": "2444000",
    "end": "2481000"
  },
  {
    "text": "roughly I don't know six or seven months ago the c5 D came out which was super",
    "start": "2446130",
    "end": "2451360"
  },
  {
    "text": "exciting for us and you noticed we skipped c4 that's because we like to use",
    "start": "2451360",
    "end": "2456730"
  },
  {
    "text": "lots of ephemeral storage we have lots and lots of logs that go through Alec stack and that's kind of where they",
    "start": "2456730",
    "end": "2462550"
  },
  {
    "text": "buffer so if you take a look at the math on this the c5 is actually 50% faster",
    "start": "2462550",
    "end": "2470530"
  },
  {
    "text": "than C 3 so that's a huge win right out of the gate and it's cheaper so it's",
    "start": "2470530",
    "end": "2476950"
  },
  {
    "text": "win-win right well there was a slight problem UCS uses core to define the",
    "start": "2476950",
    "end": "2488170"
  },
  {
    "start": "2481000",
    "end": "2515000"
  },
  {
    "text": "amount of CPU so a cores are not really equivalent across machine types right so",
    "start": "2488170",
    "end": "2495370"
  },
  {
    "text": "c5 is 50% faster than c3 so you're gonna have scaling issues the units are just",
    "start": "2495370",
    "end": "2501070"
  },
  {
    "text": "not equivalent and what we actually found was that services were scaling up when they should have been",
    "start": "2501070",
    "end": "2506140"
  },
  {
    "text": "and some of them were actually running out of threads this is a huge problem so",
    "start": "2506140",
    "end": "2516640"
  },
  {
    "start": "2515000",
    "end": "2526000"
  },
  {
    "text": "like I said it before now we're on c5 D again we have reserved instances and on",
    "start": "2516640",
    "end": "2523150"
  },
  {
    "text": "demand and we're not scaling and this is where we wanted to end up",
    "start": "2523150",
    "end": "2528760"
  },
  {
    "start": "2526000",
    "end": "2546000"
  },
  {
    "text": "we wanted to Auto scale we wanted to use you know the entire range of c5 d and m5",
    "start": "2528760",
    "end": "2534760"
  },
  {
    "text": "D so we can grab as many instances as we possibly can and bin pack them and we",
    "start": "2534760",
    "end": "2541690"
  },
  {
    "text": "also wanted to use spot we wanted to get that 90 percent savings and we ended up",
    "start": "2541690",
    "end": "2548140"
  },
  {
    "text": "going with this product called spa tents and I'll tell you a little bit about that so here are some of the features we",
    "start": "2548140",
    "end": "2555670"
  },
  {
    "start": "2553000",
    "end": "2600000"
  },
  {
    "text": "were able to mix the families and sizes instances like we wanted we could use all of our our eyes that we had before",
    "start": "2555670",
    "end": "2562960"
  },
  {
    "text": "any spot was used they also gave us a 15-minute notice if you just use spot",
    "start": "2562960",
    "end": "2569530"
  },
  {
    "text": "fleet for instance you only get a two minute notice before an instant shuts down and what was really cool is they",
    "start": "2569530",
    "end": "2576040"
  },
  {
    "text": "fit the capacity you know the different instances and sizes to your ECS task",
    "start": "2576040",
    "end": "2582760"
  },
  {
    "text": "load so it's kind of like a reverse bin packing and they also provide this really cool easy capacity heat map so",
    "start": "2582760",
    "end": "2589780"
  },
  {
    "text": "here you're seeing us 1e doesn't have all the instance types that we need so",
    "start": "2589780",
    "end": "2595240"
  },
  {
    "text": "we would simply remove that easy from the cluster entirely it also has some",
    "start": "2595240",
    "end": "2603130"
  },
  {
    "start": "2600000",
    "end": "2632000"
  },
  {
    "text": "more UCS integration so it will drain all the tasks for us we can also provide some cluster head room so just just adds",
    "start": "2603130",
    "end": "2612099"
  },
  {
    "text": "a little bit of a safety buffer in case we have a spike in traffic it allows us",
    "start": "2612099",
    "end": "2617500"
  },
  {
    "text": "to spread capacities across a ZZZ and it builds on a percentage of savings so if",
    "start": "2617500",
    "end": "2623710"
  },
  {
    "text": "we're not using the service we don't have to pay anything and finally it has terraform support so it could fit into",
    "start": "2623710",
    "end": "2629230"
  },
  {
    "text": "our existing tariffs or modules so this is what one of our smaller clusters",
    "start": "2629230",
    "end": "2635230"
  },
  {
    "text": "looks like purple is reserved green is spot and you",
    "start": "2635230",
    "end": "2640450"
  },
  {
    "text": "could barely see it the blue line is on demand so we're actually sitting on quite a bit of money here and we're at a",
    "start": "2640450",
    "end": "2647170"
  },
  {
    "text": "50/50 ratio so 50/50 spot and then the other 50% is RI or on-demand so let's",
    "start": "2647170",
    "end": "2657369"
  },
  {
    "start": "2656000",
    "end": "2684000"
  },
  {
    "text": "talk about micro service cost at the tasks level now so what I advise you to do is to audit every single service make",
    "start": "2657369",
    "end": "2665440"
  },
  {
    "text": "sure they're not allocating you know a ton of CPU memory and internally we have",
    "start": "2665440",
    "end": "2671320"
  },
  {
    "text": "these these goals here so 60% CPU scaling factor and also we try to add a",
    "start": "2671320",
    "end": "2677650"
  },
  {
    "text": "little bit of a buffer for memory so 60 to 80 percent of memory so you could",
    "start": "2677650",
    "end": "2685660"
  },
  {
    "start": "2684000",
    "end": "2718000"
  },
  {
    "text": "kind of eyeball the graph and kind of come up with a CPU unit but there's",
    "start": "2685660",
    "end": "2691360"
  },
  {
    "text": "definitely a more direct way to do it much easier way to do it so you take your allocated CPU you have so that's",
    "start": "2691360",
    "end": "2696550"
  },
  {
    "text": "the CPU core units you multiply that by your current utilization from the graph",
    "start": "2696550",
    "end": "2701890"
  },
  {
    "text": "and then that gives you what you're actually using in the UCS CPU units you",
    "start": "2701890",
    "end": "2708340"
  },
  {
    "text": "then take that and then you simply divide it by the desired utilization and that's what you set so that's how you",
    "start": "2708340",
    "end": "2714430"
  },
  {
    "text": "get the auto scaling threshold and then for memory we simply just track memory",
    "start": "2714430",
    "end": "2722200"
  },
  {
    "start": "2718000",
    "end": "2754000"
  },
  {
    "text": "usage between deployments and we take a look at the graph if it's ever increasing you know you have a memory",
    "start": "2722200",
    "end": "2728109"
  },
  {
    "text": "leak that you have to fix if you have memory leaks that are really hard to fix",
    "start": "2728109",
    "end": "2735330"
  },
  {
    "text": "definitely set containers to restart if memory exceeds a hundred percent you don't want TAS knocking out other tasks",
    "start": "2735330",
    "end": "2743080"
  },
  {
    "text": "within the in the same instance and causing cascading failures that's really bad so don't over allocate memory I know",
    "start": "2743080",
    "end": "2749950"
  },
  {
    "text": "the option is there but don't do it so",
    "start": "2749950",
    "end": "2755320"
  },
  {
    "start": "2754000",
    "end": "2806000"
  },
  {
    "text": "one other note on cost so you're actually spending quite a bit of money on s3 across all our services and it's a",
    "start": "2755320",
    "end": "2763930"
  },
  {
    "text": "storage service right so that's what you should probably focus on well not always so we we spent a lot of time",
    "start": "2763930",
    "end": "2770260"
  },
  {
    "text": "looking at how much data we're actually storing which is in the the dark blue or purple at the bottom and you can see we",
    "start": "2770260",
    "end": "2776950"
  },
  {
    "text": "kind of got that cost down but the overall cost was still increasing and we found this is really strange so we split",
    "start": "2776950",
    "end": "2784900"
  },
  {
    "text": "up the cost by API call and we found out that list on my buckets plus get object",
    "start": "2784900",
    "end": "2790450"
  },
  {
    "text": "were over 50% of our Amazon s3 cost was which was pretty surprising and we",
    "start": "2790450",
    "end": "2796420"
  },
  {
    "text": "actually went in the cloud trail logs and found it was a single service causing all this havoc on our bills so",
    "start": "2796420",
    "end": "2803250"
  },
  {
    "text": "keep that in mind all right so overall we reduced our",
    "start": "2803250",
    "end": "2809320"
  },
  {
    "start": "2806000",
    "end": "2837000"
  },
  {
    "text": "compute cost by 60% by using spa tensed we reduced our cost per Mau by 30% and",
    "start": "2809320",
    "end": "2818070"
  },
  {
    "text": "we also brought our entire AWS bill through some other cost savings routines",
    "start": "2818070",
    "end": "2825880"
  },
  {
    "text": "to 25% so you could see from August before we started putting all this into",
    "start": "2825880",
    "end": "2832780"
  },
  {
    "text": "place to October you know it's a huge drop there so key results so scalability",
    "start": "2832780",
    "end": "2840310"
  },
  {
    "start": "2837000",
    "end": "2868000"
  },
  {
    "text": "we now manage over a hundred micro services teams can deploy their own their own services when they want we now",
    "start": "2840310",
    "end": "2848950"
  },
  {
    "text": "have the flexibility to support three different programming languages so we added Python 3 Scala and Java we",
    "start": "2848950",
    "end": "2858100"
  },
  {
    "text": "actually hit four nines of uptime last quarter which was the first time ever in our history and we also reduced our cost",
    "start": "2858100",
    "end": "2865330"
  },
  {
    "text": "by 60% so if you enjoyed this talk we're",
    "start": "2865330",
    "end": "2870760"
  },
  {
    "start": "2868000",
    "end": "2892000"
  },
  {
    "text": "hiring we're actually not in Silicon Valley",
    "start": "2870760",
    "end": "2876079"
  },
  {
    "text": "we're in Pittsburgh Pennsylvania and it is definitely not the smokey you know image that you have in your head it's",
    "start": "2876079",
    "end": "2882260"
  },
  {
    "text": "actually become a really booming tech town with lots of great food just that",
    "start": "2882260",
    "end": "2887660"
  },
  {
    "text": "fly on it so check this out so here's",
    "start": "2887660",
    "end": "2893450"
  },
  {
    "start": "2892000",
    "end": "2922000"
  },
  {
    "text": "the slide for your cameras these are some really great resources that helped us along the way so Sam Newman's book",
    "start": "2893450",
    "end": "2900140"
  },
  {
    "text": "building micro-services is what I consider the de facto standard microservice book Susan Fowler's book is also really great",
    "start": "2900140",
    "end": "2907270"
  },
  {
    "text": "it covers more of the operational level and then I have some other links here that we use every day so thank you",
    "start": "2907270",
    "end": "2916360"
  },
  {
    "text": "[Applause]",
    "start": "2916360",
    "end": "2924419"
  }
]