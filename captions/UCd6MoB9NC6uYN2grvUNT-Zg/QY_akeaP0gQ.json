[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "I'm the CTO and founder and we're going",
    "start": "6500",
    "end": "9900"
  },
  {
    "text": "to talk about DynamoDB capacity so three",
    "start": "9900",
    "end": "12809"
  },
  {
    "text": "different things right sizing so how",
    "start": "12809",
    "end": "14880"
  },
  {
    "text": "much should you provision how much how",
    "start": "14880",
    "end": "17310"
  },
  {
    "text": "much are you consuming and there's even",
    "start": "17310",
    "end": "19470"
  },
  {
    "text": "more complications there the second is",
    "start": "19470",
    "end": "21150"
  },
  {
    "text": "reserved usage how much reserve you",
    "start": "21150",
    "end": "23130"
  },
  {
    "text": "should should you use and then how do I",
    "start": "23130",
    "end": "25109"
  },
  {
    "text": "actually allocate and understand my",
    "start": "25109",
    "end": "26789"
  },
  {
    "text": "spend there's lots of lots of little",
    "start": "26789",
    "end": "29640"
  },
  {
    "text": "gotchas and so all the data is there in",
    "start": "29640",
    "end": "31830"
  },
  {
    "text": "amazon amazon has all the data it's just",
    "start": "31830",
    "end": "34290"
  },
  {
    "text": "in different places you got to pull it",
    "start": "34290",
    "end": "35910"
  },
  {
    "text": "together to make intelligent business",
    "start": "35910",
    "end": "37410"
  },
  {
    "text": "decisions on this so right sizing so the",
    "start": "37410",
    "end": "41190"
  },
  {
    "start": "38000",
    "end": "305000"
  },
  {
    "text": "most important thing that you need to",
    "start": "41190",
    "end": "42540"
  },
  {
    "text": "look at when you right size DynamoDB",
    "start": "42540",
    "end": "44460"
  },
  {
    "text": "well let's consider first of all there's",
    "start": "44460",
    "end": "45989"
  },
  {
    "text": "two things you have to do one is you",
    "start": "45989",
    "end": "48149"
  },
  {
    "text": "have to choose your provision capacity",
    "start": "48149",
    "end": "50160"
  },
  {
    "text": "and provision you have to do that for",
    "start": "50160",
    "end": "51989"
  },
  {
    "text": "both read and write so there's really",
    "start": "51989",
    "end": "53910"
  },
  {
    "text": "two numbers you have to come up with now",
    "start": "53910",
    "end": "56160"
  },
  {
    "text": "how you actually monitor that and make",
    "start": "56160",
    "end": "58410"
  },
  {
    "text": "decisions is really based on cloud watch",
    "start": "58410",
    "end": "61920"
  },
  {
    "text": "metrics so out of the box all these",
    "start": "61920",
    "end": "63750"
  },
  {
    "text": "metrics are generated so if you're using",
    "start": "63750",
    "end": "65760"
  },
  {
    "text": "cloud watch you have this data right so",
    "start": "65760",
    "end": "68100"
  },
  {
    "text": "you just now need to go use it and so",
    "start": "68100",
    "end": "69780"
  },
  {
    "text": "the top line is the ones you want to",
    "start": "69780",
    "end": "71909"
  },
  {
    "text": "look at first which is consumed you want",
    "start": "71909",
    "end": "73950"
  },
  {
    "text": "to know as you're using the Tate as",
    "start": "73950",
    "end": "75689"
  },
  {
    "text": "you're using dynamodb how much you",
    "start": "75689",
    "end": "77250"
  },
  {
    "text": "actually consuming so you get a metric",
    "start": "77250",
    "end": "80070"
  },
  {
    "text": "that says consumed read consumed right",
    "start": "80070",
    "end": "82170"
  },
  {
    "text": "and now out of that data you want to",
    "start": "82170",
    "end": "84180"
  },
  {
    "text": "look at two things average and max",
    "start": "84180",
    "end": "86220"
  },
  {
    "text": "because they're both important right",
    "start": "86220",
    "end": "87960"
  },
  {
    "text": "your average is what does it look like",
    "start": "87960",
    "end": "89700"
  },
  {
    "text": "for a five minute period an hour",
    "start": "89700",
    "end": "91439"
  },
  {
    "text": "whatever it is your max is how high did",
    "start": "91439",
    "end": "93689"
  },
  {
    "text": "I spike because you can't just use the",
    "start": "93689",
    "end": "95850"
  },
  {
    "text": "max amazon does have some throttle some",
    "start": "95850",
    "end": "100470"
  },
  {
    "text": "bursting capabilities it's not exactly",
    "start": "100470",
    "end": "103850"
  },
  {
    "text": "documented they give you some details so",
    "start": "103850",
    "end": "106530"
  },
  {
    "text": "they make your life a little bit easier",
    "start": "106530",
    "end": "108000"
  },
  {
    "text": "by allowing you to burst but you can't",
    "start": "108000",
    "end": "110100"
  },
  {
    "text": "write or expect it you can't expect that",
    "start": "110100",
    "end": "113399"
  },
  {
    "text": "bursting is going to save you so you do",
    "start": "113399",
    "end": "115680"
  },
  {
    "text": "have to pick the right provision",
    "start": "115680",
    "end": "118829"
  },
  {
    "text": "capacity so if you're consuming five",
    "start": "118829",
    "end": "120960"
  },
  {
    "text": "units you don't want to confuse you",
    "start": "120960",
    "end": "124170"
  },
  {
    "text": "don't want to provision five because if",
    "start": "124170",
    "end": "125790"
  },
  {
    "text": "you ever spike you're going to get hit",
    "start": "125790",
    "end": "127409"
  },
  {
    "text": "if you if you know your app is very",
    "start": "127409",
    "end": "129270"
  },
  {
    "text": "stable then maybe you don't have if you",
    "start": "129270",
    "end": "130979"
  },
  {
    "text": "know your usage is very stable maybe you",
    "start": "130979",
    "end": "132540"
  },
  {
    "text": "can pick five",
    "start": "132540",
    "end": "133980"
  },
  {
    "text": "your goal is to keep to provision to",
    "start": "133980",
    "end": "137250"
  },
  {
    "text": "pick as little as you can and stay in",
    "start": "137250",
    "end": "140400"
  },
  {
    "text": "line with that consumed if you can auto",
    "start": "140400",
    "end": "142650"
  },
  {
    "text": "scale it there are different ways to",
    "start": "142650",
    "end": "144120"
  },
  {
    "text": "auto scale your your capacity which is",
    "start": "144120",
    "end": "147390"
  },
  {
    "text": "basically as you're consumed changes can",
    "start": "147390",
    "end": "150209"
  },
  {
    "text": "you auto scaling your provision with it",
    "start": "150209",
    "end": "151890"
  },
  {
    "text": "as well so consumed is how much you're",
    "start": "151890",
    "end": "154260"
  },
  {
    "text": "actually using provision is basically",
    "start": "154260",
    "end": "155940"
  },
  {
    "text": "you say this is my this is my table and",
    "start": "155940",
    "end": "159420"
  },
  {
    "text": "I wanted to have this much throughput",
    "start": "159420",
    "end": "162810"
  },
  {
    "text": "that I I support for it you're paying",
    "start": "162810",
    "end": "164970"
  },
  {
    "text": "based on provisioned you don't pay and",
    "start": "164970",
    "end": "167069"
  },
  {
    "text": "consume you ban the you pay on provision",
    "start": "167069",
    "end": "169049"
  },
  {
    "text": "so if you consume 0 but your provision a",
    "start": "169049",
    "end": "171450"
  },
  {
    "text": "hundred thousand you're going to pay for",
    "start": "171450",
    "end": "173099"
  },
  {
    "text": "a hundred thousand so the goal is to",
    "start": "173099",
    "end": "174540"
  },
  {
    "text": "keep those as close together as possible",
    "start": "174540",
    "end": "176989"
  },
  {
    "text": "so you can measure the consumed you can",
    "start": "176989",
    "end": "180329"
  },
  {
    "text": "also cloud watch pushes out the",
    "start": "180329",
    "end": "182579"
  },
  {
    "text": "provisioned read and write capacity as",
    "start": "182579",
    "end": "184290"
  },
  {
    "text": "well so it makes it very manageable so",
    "start": "184290",
    "end": "186750"
  },
  {
    "text": "you can look at those two cloud right",
    "start": "186750",
    "end": "187920"
  },
  {
    "text": "metrics next to each other and actually",
    "start": "187920",
    "end": "190140"
  },
  {
    "text": "see how far off you are the other cloud",
    "start": "190140",
    "end": "192569"
  },
  {
    "text": "watch metrics is throttled requests and",
    "start": "192569",
    "end": "194760"
  },
  {
    "text": "there's actually a couple more we'll",
    "start": "194760",
    "end": "196200"
  },
  {
    "text": "show you in a different slide because",
    "start": "196200",
    "end": "197340"
  },
  {
    "text": "it's not just throttle request its read",
    "start": "197340",
    "end": "199680"
  },
  {
    "text": "and write thought throttle requests but",
    "start": "199680",
    "end": "201810"
  },
  {
    "text": "but basically thought of throttle",
    "start": "201810",
    "end": "203910"
  },
  {
    "text": "request is anytime you're calling and",
    "start": "203910",
    "end": "205829"
  },
  {
    "text": "you're getting down on air because you",
    "start": "205829",
    "end": "208079"
  },
  {
    "text": "get you you could trying to consume more",
    "start": "208079",
    "end": "210630"
  },
  {
    "text": "than you provisioned you're going to get",
    "start": "210630",
    "end": "212310"
  },
  {
    "text": "a throttle request there so you can",
    "start": "212310",
    "end": "213720"
  },
  {
    "text": "actually go into cloud watch as well and",
    "start": "213720",
    "end": "215280"
  },
  {
    "text": "look at that again they'll allow you to",
    "start": "215280",
    "end": "218069"
  },
  {
    "text": "burst a little bit so this is very much",
    "start": "218069",
    "end": "220349"
  },
  {
    "text": "an art not a science around how much do",
    "start": "220349",
    "end": "223650"
  },
  {
    "text": "I provision to match my right consumed",
    "start": "223650",
    "end": "226410"
  },
  {
    "text": "amount so the idea again is provision",
    "start": "226410",
    "end": "228510"
  },
  {
    "text": "only as much as you consume and keep",
    "start": "228510",
    "end": "230849"
  },
  {
    "text": "that throttle request as close to zero",
    "start": "230849",
    "end": "232709"
  },
  {
    "text": "as possible the other thing to",
    "start": "232709",
    "end": "234480"
  },
  {
    "text": "understand cloud watch retains up to 14",
    "start": "234480",
    "end": "236489"
  },
  {
    "text": "days of metrics so you know if you",
    "start": "236489",
    "end": "238859"
  },
  {
    "text": "really want to look at a longer term you",
    "start": "238859",
    "end": "240750"
  },
  {
    "text": "have to be prepared for that so here is",
    "start": "240750",
    "end": "242430"
  },
  {
    "text": "actually cloud checker showing you these",
    "start": "242430",
    "end": "243900"
  },
  {
    "text": "metrics so you can actually go ahead and",
    "start": "243900",
    "end": "245519"
  },
  {
    "text": "pick DynamoDB consumed read capacities",
    "start": "245519",
    "end": "248310"
  },
  {
    "text": "over a much longer period of time so",
    "start": "248310",
    "end": "250620"
  },
  {
    "text": "this is when we when we start at that",
    "start": "250620",
    "end": "252239"
  },
  {
    "text": "table or this start of this dynamo DB",
    "start": "252239",
    "end": "255030"
  },
  {
    "text": "and it just looks and you can see this",
    "start": "255030",
    "end": "257160"
  },
  {
    "text": "is your max so you have both average and",
    "start": "257160",
    "end": "260579"
  },
  {
    "text": "max so you can see this is how you spike",
    "start": "260579",
    "end": "262560"
  },
  {
    "text": "though each one of those is your spikes",
    "start": "262560",
    "end": "264060"
  },
  {
    "text": "so you have the ability to do a start",
    "start": "264060",
    "end": "266159"
  },
  {
    "text": "and end they actually look at",
    "start": "266159",
    "end": "267389"
  },
  {
    "text": "at and so you can pull your consume you",
    "start": "267389",
    "end": "269340"
  },
  {
    "text": "can pull your average max your provision",
    "start": "269340",
    "end": "272639"
  },
  {
    "text": "and then compare all those so that you",
    "start": "272639",
    "end": "274499"
  },
  {
    "text": "have something you can actually make a",
    "start": "274499",
    "end": "275669"
  },
  {
    "text": "choice on that so here's another where",
    "start": "275669",
    "end": "278099"
  },
  {
    "text": "you could see your average read",
    "start": "278099",
    "end": "279270"
  },
  {
    "text": "provisioned is one thing your average",
    "start": "279270",
    "end": "281159"
  },
  {
    "text": "consumed is less than that and then the",
    "start": "281159",
    "end": "283889"
  },
  {
    "text": "max is is that so you really and I'm",
    "start": "283889",
    "end": "287340"
  },
  {
    "text": "going to say this and then I'm going to",
    "start": "287340",
    "end": "288539"
  },
  {
    "text": "change my mind a minute later but",
    "start": "288539",
    "end": "290639"
  },
  {
    "text": "usually you don't really want to",
    "start": "290639",
    "end": "292669"
  },
  {
    "text": "provision more than your max the idea is",
    "start": "292669",
    "end": "295590"
  },
  {
    "text": "your max should be enough so that you if",
    "start": "295590",
    "end": "298229"
  },
  {
    "text": "you ever you're never going to spike",
    "start": "298229",
    "end": "299520"
  },
  {
    "text": "above that so it should be enough so you",
    "start": "299520",
    "end": "301979"
  },
  {
    "text": "really if you see the max line you",
    "start": "301979",
    "end": "304259"
  },
  {
    "text": "shouldn't be provisioning above that you",
    "start": "304259",
    "end": "305879"
  },
  {
    "start": "305000",
    "end": "509000"
  },
  {
    "text": "also want to monitor DynamoDB for errors",
    "start": "305879",
    "end": "308069"
  },
  {
    "text": "so the things you want to monitor",
    "start": "308069",
    "end": "309330"
  },
  {
    "text": "obviously system errors and user errors",
    "start": "309330",
    "end": "311250"
  },
  {
    "text": "those are what the user can get as he's",
    "start": "311250",
    "end": "314279"
  },
  {
    "text": "using it so every every system a system",
    "start": "314279",
    "end": "316889"
  },
  {
    "text": "error is basically on the on the system",
    "start": "316889",
    "end": "319199"
  },
  {
    "text": "side the user error is doing something",
    "start": "319199",
    "end": "321779"
  },
  {
    "text": "wrong there now read throttle events",
    "start": "321779",
    "end": "323729"
  },
  {
    "text": "right throttle events and throw out a",
    "start": "323729",
    "end": "326009"
  },
  {
    "text": "request so there's some real intricacies",
    "start": "326009",
    "end": "328289"
  },
  {
    "text": "over whether you're there's not quite a",
    "start": "328289",
    "end": "330240"
  },
  {
    "text": "one-to-one correlation so don't get",
    "start": "330240",
    "end": "331770"
  },
  {
    "text": "confused about that and the dimensions",
    "start": "331770",
    "end": "334740"
  },
  {
    "text": "you can read those events over different",
    "start": "334740",
    "end": "336659"
  },
  {
    "text": "things like the table the operation so",
    "start": "336659",
    "end": "339330"
  },
  {
    "text": "you could really dig in and really see",
    "start": "339330",
    "end": "341039"
  },
  {
    "text": "where my throttle requests are happening",
    "start": "341039",
    "end": "342899"
  },
  {
    "text": "so we have a bunch of best practice",
    "start": "342899",
    "end": "345180"
  },
  {
    "text": "checks that help you with all that so we",
    "start": "345180",
    "end": "347460"
  },
  {
    "text": "actually will look at your environment",
    "start": "347460",
    "end": "348930"
  },
  {
    "text": "and highlight for you where you have",
    "start": "348930",
    "end": "350399"
  },
  {
    "text": "idle and unused stuff where you're",
    "start": "350399",
    "end": "352050"
  },
  {
    "text": "getting system errors where you're",
    "start": "352050",
    "end": "353759"
  },
  {
    "text": "getting throttled requests user errors",
    "start": "353759",
    "end": "355589"
  },
  {
    "text": "all of that so cloud checker will",
    "start": "355589",
    "end": "357360"
  },
  {
    "text": "actually help you keep track of all this",
    "start": "357360",
    "end": "358740"
  },
  {
    "text": "and actually push that to you right",
    "start": "358740",
    "end": "360120"
  },
  {
    "text": "sizing warning so here's the warnings",
    "start": "360120",
    "end": "362279"
  },
  {
    "text": "which is that you want to keep your even",
    "start": "362279",
    "end": "365520"
  },
  {
    "text": "if you're consumed is less than there's",
    "start": "365520",
    "end": "367740"
  },
  {
    "text": "your provisioned you still may get",
    "start": "367740",
    "end": "369899"
  },
  {
    "text": "throttled so you know does that make",
    "start": "369899",
    "end": "372779"
  },
  {
    "text": "sense it shouldn't make sense because",
    "start": "372779",
    "end": "375689"
  },
  {
    "text": "you provision more than you consume the",
    "start": "375689",
    "end": "378389"
  },
  {
    "text": "SDKs have built-in retry logic as well",
    "start": "378389",
    "end": "380789"
  },
  {
    "text": "so if you're using the SDK and you're",
    "start": "380789",
    "end": "383189"
  },
  {
    "text": "getting throttled you may not even know",
    "start": "383189",
    "end": "385349"
  },
  {
    "text": "about it because it may get throttled",
    "start": "385349",
    "end": "386969"
  },
  {
    "text": "wait x seconds and try again but",
    "start": "386969",
    "end": "389639"
  },
  {
    "text": "understanding why why would you get",
    "start": "389639",
    "end": "391169"
  },
  {
    "text": "throttled based on that and it's because",
    "start": "391169",
    "end": "393060"
  },
  {
    "text": "of partitions and in Matthews",
    "start": "393060",
    "end": "396769"
  },
  {
    "text": "presentation you talked about partition",
    "start": "396769",
    "end": "398729"
  },
  {
    "text": "keys that's all what it's about",
    "start": "398729",
    "end": "400950"
  },
  {
    "text": "that you have to make sure your",
    "start": "400950",
    "end": "402000"
  },
  {
    "text": "partitions are well designed and your",
    "start": "402000",
    "end": "404820"
  },
  {
    "text": "you're distributing your keys correctly",
    "start": "404820",
    "end": "406710"
  },
  {
    "text": "and it really is hot keys or the main",
    "start": "406710",
    "end": "408120"
  },
  {
    "text": "problem here behind the scenes in",
    "start": "408120",
    "end": "412080"
  },
  {
    "text": "DynamoDB they have multiple partitions",
    "start": "412080",
    "end": "414000"
  },
  {
    "text": "and it's based on two things one is the",
    "start": "414000",
    "end": "417240"
  },
  {
    "text": "size of the partition and the other is",
    "start": "417240",
    "end": "419070"
  },
  {
    "text": "how much provision capacity you've",
    "start": "419070",
    "end": "421050"
  },
  {
    "text": "actually set up but to understand a",
    "start": "421050",
    "end": "423330"
  },
  {
    "text": "partition can be up to 10 terabytes so",
    "start": "423330",
    "end": "426510"
  },
  {
    "text": "if your tables more than 10 terabytes",
    "start": "426510",
    "end": "428190"
  },
  {
    "text": "you're going to put it on multiple",
    "start": "428190",
    "end": "429210"
  },
  {
    "text": "partitions the other thing is the",
    "start": "429210",
    "end": "432480"
  },
  {
    "text": "maximum that you can put on a partition",
    "start": "432480",
    "end": "436200"
  },
  {
    "text": "the maximum a petition can do is three",
    "start": "436200",
    "end": "438570"
  },
  {
    "text": "thousand reads and a thousand writes per",
    "start": "438570",
    "end": "441030"
  },
  {
    "text": "second so if you partition ten thousand",
    "start": "441030",
    "end": "444720"
  },
  {
    "text": "reads and two thousand rights and it's",
    "start": "444720",
    "end": "447480"
  },
  {
    "text": "all on one partition all your days on",
    "start": "447480",
    "end": "450330"
  },
  {
    "text": "one partition you can't recognize that",
    "start": "450330",
    "end": "452280"
  },
  {
    "text": "you still can only get three thousand",
    "start": "452280",
    "end": "454200"
  },
  {
    "text": "out of that now DynamoDB tries to when",
    "start": "454200",
    "end": "457380"
  },
  {
    "text": "you go above the 3,000 what it does is",
    "start": "457380",
    "end": "459540"
  },
  {
    "text": "split you into two partitions so even if",
    "start": "459540",
    "end": "462360"
  },
  {
    "text": "you don't hit the 10 terabytes you get",
    "start": "462360",
    "end": "464220"
  },
  {
    "text": "split into two partitions and so if your",
    "start": "464220",
    "end": "467370"
  },
  {
    "text": "keys are distributed properly and you're",
    "start": "467370",
    "end": "469200"
  },
  {
    "text": "doing those five thousand reads evenly",
    "start": "469200",
    "end": "471210"
  },
  {
    "text": "across the two partitions then you could",
    "start": "471210",
    "end": "473580"
  },
  {
    "text": "recognize five thousand but if all the",
    "start": "473580",
    "end": "477510"
  },
  {
    "text": "keys you're hitting in a second are on",
    "start": "477510",
    "end": "479100"
  },
  {
    "text": "the same partition you still can't",
    "start": "479100",
    "end": "481020"
  },
  {
    "text": "exceed the 3,000 so it's all about one",
    "start": "481020",
    "end": "484500"
  },
  {
    "text": "of the most important things when you're",
    "start": "484500",
    "end": "486000"
  },
  {
    "text": "trying to optimize your DynamoDB usage",
    "start": "486000",
    "end": "489150"
  },
  {
    "text": "is to think about partition key",
    "start": "489150",
    "end": "491100"
  },
  {
    "text": "strategies to think about how you're",
    "start": "491100",
    "end": "493320"
  },
  {
    "text": "setting up your partition keys and then",
    "start": "493320",
    "end": "495060"
  },
  {
    "text": "how you're accessing reading or writing",
    "start": "495060",
    "end": "496560"
  },
  {
    "text": "data so that's really a very important",
    "start": "496560",
    "end": "499320"
  },
  {
    "text": "thing to do and I'm not going to go too",
    "start": "499320",
    "end": "500430"
  },
  {
    "text": "deep into that but there's some really",
    "start": "500430",
    "end": "502260"
  },
  {
    "text": "interesting blog posts about how to set",
    "start": "502260",
    "end": "504030"
  },
  {
    "text": "up your partition keys in a way how to",
    "start": "504030",
    "end": "506010"
  },
  {
    "text": "read it in a certain order do things",
    "start": "506010",
    "end": "508080"
  },
  {
    "text": "like that so the other thing is then",
    "start": "508080",
    "end": "509550"
  },
  {
    "start": "509000",
    "end": "687000"
  },
  {
    "text": "purchasing your reserve capacity so once",
    "start": "509550",
    "end": "512070"
  },
  {
    "text": "you've figured out so the one thing to",
    "start": "512070",
    "end": "513960"
  },
  {
    "text": "understand right sizing comes first so",
    "start": "513960",
    "end": "515880"
  },
  {
    "text": "don't buy your reserve capacity first",
    "start": "515880",
    "end": "517500"
  },
  {
    "text": "and then go back and right size because",
    "start": "517500",
    "end": "519000"
  },
  {
    "text": "you're going to figure out you bought",
    "start": "519000",
    "end": "519840"
  },
  {
    "text": "too much you didn't buy enough whatever",
    "start": "519840",
    "end": "521310"
  },
  {
    "text": "so get your right sizing first then",
    "start": "521310",
    "end": "523830"
  },
  {
    "text": "figure out what do I need to do reserve",
    "start": "523830",
    "end": "525540"
  },
  {
    "text": "reserved usage can be up to on DynamoDB",
    "start": "525540",
    "end": "527940"
  },
  {
    "text": "can be about 75% if you're willing to",
    "start": "527940",
    "end": "529890"
  },
  {
    "text": "commit for three years so it can be a",
    "start": "529890",
    "end": "531600"
  },
  {
    "text": "huge amount again the other thing that",
    "start": "531600",
    "end": "533460"
  },
  {
    "text": "I've seen is with dynamo",
    "start": "533460",
    "end": "534660"
  },
  {
    "text": "be your storage is pretty cheap actually",
    "start": "534660",
    "end": "537149"
  },
  {
    "text": "i mean i think i think the latest one is",
    "start": "537149",
    "end": "538680"
  },
  {
    "text": "about 25 cents a gigabyte so storage is",
    "start": "538680",
    "end": "541440"
  },
  {
    "text": "very rarely what your expensive part of",
    "start": "541440",
    "end": "543569"
  },
  {
    "text": "DynamoDB is it's typically your your",
    "start": "543569",
    "end": "545790"
  },
  {
    "text": "provision capacity that that really is",
    "start": "545790",
    "end": "547680"
  },
  {
    "text": "your big cost so that's where you really",
    "start": "547680",
    "end": "549779"
  },
  {
    "text": "need to focus on optimizing it so on",
    "start": "549779",
    "end": "552750"
  },
  {
    "text": "demand versus reserved so amazon has a",
    "start": "552750",
    "end": "556319"
  },
  {
    "text": "lot of different models for a reserved",
    "start": "556319",
    "end": "558269"
  },
  {
    "text": "usage so ec2 has their model RDS",
    "start": "558269",
    "end": "561769"
  },
  {
    "text": "redshift all of those are fairly similar",
    "start": "561769",
    "end": "564680"
  },
  {
    "text": "DynamoDB is a pretty different model",
    "start": "564680",
    "end": "566850"
  },
  {
    "text": "it's still that I'm committing i'm",
    "start": "566850",
    "end": "569430"
  },
  {
    "text": "basically purchasing X number of reserve",
    "start": "569430",
    "end": "572639"
  },
  {
    "text": "capacity units I have to pick whether",
    "start": "572639",
    "end": "574889"
  },
  {
    "text": "it's read or write or I can do both",
    "start": "574889",
    "end": "577050"
  },
  {
    "text": "obviously but I but each one gets used",
    "start": "577050",
    "end": "579899"
  },
  {
    "text": "but you don't have to do other things",
    "start": "579899",
    "end": "581579"
  },
  {
    "text": "like with ec2 you have to pick",
    "start": "581579",
    "end": "583279"
  },
  {
    "text": "availability zone instance type",
    "start": "583279",
    "end": "586220"
  },
  {
    "text": "operating system all that with DynamoDB",
    "start": "586220",
    "end": "588930"
  },
  {
    "text": "it's pretty simple if you just read and",
    "start": "588930",
    "end": "590550"
  },
  {
    "text": "write and then that not that that",
    "start": "590550",
    "end": "592920"
  },
  {
    "text": "capacity reserve capacity use can be",
    "start": "592920",
    "end": "594779"
  },
  {
    "text": "used against any table so it's also not",
    "start": "594779",
    "end": "596790"
  },
  {
    "text": "like you're buying reserve capacity for",
    "start": "596790",
    "end": "598319"
  },
  {
    "text": "specific table so it's actually pretty",
    "start": "598319",
    "end": "600389"
  },
  {
    "text": "simple model it's probably the simplest",
    "start": "600389",
    "end": "602160"
  },
  {
    "text": "model around reserved usage so you again",
    "start": "602160",
    "end": "605850"
  },
  {
    "text": "you could pick one or three years you",
    "start": "605850",
    "end": "607829"
  },
  {
    "text": "have to pick read or write and you have",
    "start": "607829",
    "end": "609149"
  },
  {
    "text": "to pick which region applies to so those",
    "start": "609149",
    "end": "611189"
  },
  {
    "text": "those are the three factors don't commit",
    "start": "611189",
    "end": "615149"
  },
  {
    "text": "to a specific table so how do you",
    "start": "615149",
    "end": "617490"
  },
  {
    "text": "actually calculate how much on demand",
    "start": "617490",
    "end": "619199"
  },
  {
    "text": "you're using basically provisioned minus",
    "start": "619199",
    "end": "621839"
  },
  {
    "text": "reserved so whatever you provision and",
    "start": "621839",
    "end": "624680"
  },
  {
    "text": "if your auto scaling that question",
    "start": "624680",
    "end": "627449"
  },
  {
    "text": "becomes a lot harder than just have I",
    "start": "627449",
    "end": "628920"
  },
  {
    "text": "selected one provisioning level and if I",
    "start": "628920",
    "end": "631050"
  },
  {
    "text": "leave that on all the time if I leave",
    "start": "631050",
    "end": "633329"
  },
  {
    "text": "that on all the time then it's very easy",
    "start": "633329",
    "end": "634829"
  },
  {
    "text": "to figure out how much I should buy for",
    "start": "634829",
    "end": "636839"
  },
  {
    "text": "reserve capacity is basically provision",
    "start": "636839",
    "end": "639449"
  },
  {
    "text": "y minus what I have reserved today and",
    "start": "639449",
    "end": "641160"
  },
  {
    "text": "here's a case of where again you see",
    "start": "641160",
    "end": "643230"
  },
  {
    "text": "this is auto scaling a little bit but",
    "start": "643230",
    "end": "644939"
  },
  {
    "text": "you just take your average read units",
    "start": "644939",
    "end": "646620"
  },
  {
    "text": "provisioned your reserve units consumed",
    "start": "646620",
    "end": "649620"
  },
  {
    "text": "and what's left is what you're running",
    "start": "649620",
    "end": "652019"
  },
  {
    "text": "today is on demand so again this is just",
    "start": "652019",
    "end": "654990"
  },
  {
    "text": "cloud checker showing you exactly that",
    "start": "654990",
    "end": "656639"
  },
  {
    "text": "showing you over a time period you know",
    "start": "656639",
    "end": "658829"
  },
  {
    "text": "what would be the best amount of reserve",
    "start": "658829",
    "end": "661980"
  },
  {
    "text": "capacity to buy again this is just a",
    "start": "661980",
    "end": "663930"
  },
  {
    "text": "report that will give you exactly you",
    "start": "663930",
    "end": "665730"
  },
  {
    "text": "know this is what your possible monthly",
    "start": "665730",
    "end": "667259"
  },
  {
    "text": "saving is if you",
    "start": "667259",
    "end": "668190"
  },
  {
    "text": "this amount of reserved this is what you",
    "start": "668190",
    "end": "670200"
  },
  {
    "text": "had existing that's what they recommend",
    "start": "670200",
    "end": "671840"
  },
  {
    "text": "total upfront months to break even total",
    "start": "671840",
    "end": "675060"
  },
  {
    "text": "savings over a year less the upfront",
    "start": "675060",
    "end": "677160"
  },
  {
    "text": "return on investment so we just give you",
    "start": "677160",
    "end": "679110"
  },
  {
    "text": "a lot of stats to map all that out make",
    "start": "679110",
    "end": "681240"
  },
  {
    "text": "it real easy to right-size make it real",
    "start": "681240",
    "end": "683340"
  },
  {
    "text": "easy to make those purchase",
    "start": "683340",
    "end": "685140"
  },
  {
    "text": "recommendations around DynamoDB the last",
    "start": "685140",
    "end": "687840"
  },
  {
    "start": "687000",
    "end": "801000"
  },
  {
    "text": "piece is actually understand what you're",
    "start": "687840",
    "end": "689550"
  },
  {
    "text": "spending with dynamo DB and it's an",
    "start": "689550",
    "end": "691800"
  },
  {
    "text": "interesting challenge with dynamo DB the",
    "start": "691800",
    "end": "693720"
  },
  {
    "text": "place to go look at your your",
    "start": "693720",
    "end": "695040"
  },
  {
    "text": "expenditure the detailed billing report",
    "start": "695040",
    "end": "697140"
  },
  {
    "text": "so that's a big file that Amazon dumps",
    "start": "697140",
    "end": "699930"
  },
  {
    "text": "into an s3 bucket that basically every",
    "start": "699930",
    "end": "702360"
  },
  {
    "text": "hour every charge you get it dumps in",
    "start": "702360",
    "end": "704700"
  },
  {
    "text": "there and that could be a huge file I",
    "start": "704700",
    "end": "706020"
  },
  {
    "text": "see people with 50 100 million rows in",
    "start": "706020",
    "end": "708930"
  },
  {
    "text": "their DB are for the month the one",
    "start": "708930",
    "end": "711240"
  },
  {
    "text": "challenge though is that where they",
    "start": "711240",
    "end": "712410"
  },
  {
    "text": "write data in there they for Reese",
    "start": "712410",
    "end": "714420"
  },
  {
    "text": "there's a resource idea there so if",
    "start": "714420",
    "end": "716160"
  },
  {
    "text": "you're running ec2 you get your instance",
    "start": "716160",
    "end": "718170"
  },
  {
    "text": "idea in there if you're running s3 you",
    "start": "718170",
    "end": "720840"
  },
  {
    "text": "get your s3 bucket name in there so you",
    "start": "720840",
    "end": "722460"
  },
  {
    "text": "have real fine grain details so you can",
    "start": "722460",
    "end": "724710"
  },
  {
    "text": "understand exactly which resources",
    "start": "724710",
    "end": "726270"
  },
  {
    "text": "associated with it which costs today",
    "start": "726270",
    "end": "728490"
  },
  {
    "text": "dynamodb doesn't write that resources",
    "start": "728490",
    "end": "730710"
  },
  {
    "text": "idea there today so you just see how",
    "start": "730710",
    "end": "733980"
  },
  {
    "text": "much your total usage is which makes a",
    "start": "733980",
    "end": "736140"
  },
  {
    "text": "little bit harder to start understanding",
    "start": "736140",
    "end": "737760"
  },
  {
    "text": "well my usage is all coming from these",
    "start": "737760",
    "end": "739920"
  },
  {
    "text": "five tables so these are the ones I want",
    "start": "739920",
    "end": "741720"
  },
  {
    "text": "to focus on on on really optimizing my",
    "start": "741720",
    "end": "746040"
  },
  {
    "text": "usage so because that's important really",
    "start": "746040",
    "end": "748680"
  },
  {
    "text": "is you have a twenty-thousand-dollar",
    "start": "748680",
    "end": "750800"
  },
  {
    "text": "DynamoDB bill you know what do you do if",
    "start": "750800",
    "end": "753720"
  },
  {
    "text": "you just start randomly picking tables",
    "start": "753720",
    "end": "755340"
  },
  {
    "text": "and trying to optimize them one at a",
    "start": "755340",
    "end": "756660"
  },
  {
    "text": "time that's a bad idea because you don't",
    "start": "756660",
    "end": "758160"
  },
  {
    "text": "know you know how much how much cost",
    "start": "758160",
    "end": "760470"
  },
  {
    "text": "each one at is so you really want to",
    "start": "760470",
    "end": "762210"
  },
  {
    "text": "figure out which of the most expensive",
    "start": "762210",
    "end": "764250"
  },
  {
    "text": "focus on those because that's where",
    "start": "764250",
    "end": "766500"
  },
  {
    "text": "you're going to get the most savings by",
    "start": "766500",
    "end": "767640"
  },
  {
    "text": "optimizing so again we give you a report",
    "start": "767640",
    "end": "770490"
  },
  {
    "text": "that shows kind of your total cost by",
    "start": "770490",
    "end": "772200"
  },
  {
    "text": "table how do we do that we",
    "start": "772200",
    "end": "773700"
  },
  {
    "text": "cross-reference your cloud ruch metrics",
    "start": "773700",
    "end": "775410"
  },
  {
    "text": "so again amazon has the data in it so it",
    "start": "775410",
    "end": "778410"
  },
  {
    "text": "has cloud watch which tell you exactly",
    "start": "778410",
    "end": "780089"
  },
  {
    "text": "what you provisioned each hour of each",
    "start": "780089",
    "end": "782700"
  },
  {
    "text": "month and it has the the details",
    "start": "782700",
    "end": "785130"
  },
  {
    "text": "detailed billing report which shows",
    "start": "785130",
    "end": "786839"
  },
  {
    "text": "exactly what the cost is you just have",
    "start": "786839",
    "end": "788850"
  },
  {
    "text": "to compare the two and you can come up",
    "start": "788850",
    "end": "790380"
  },
  {
    "text": "and start allocating cost to to a",
    "start": "790380",
    "end": "793440"
  },
  {
    "text": "specific table",
    "start": "793440",
    "end": "796430"
  }
]