[
  {
    "text": "[Music]",
    "start": "1230",
    "end": "6259"
  },
  {
    "text": "welcome to this market texture I'm Peter",
    "start": "6980",
    "end": "9780"
  },
  {
    "text": "I'm here with golf from apps agon go",
    "start": "9780",
    "end": "11849"
  },
  {
    "text": "good to have you here",
    "start": "11849",
    "end": "12540"
  },
  {
    "text": "hi great van here alright so before we",
    "start": "12540",
    "end": "14340"
  },
  {
    "text": "talk about your solution tell us a bit",
    "start": "14340",
    "end": "16108"
  },
  {
    "text": "about your company so epsilon is a",
    "start": "16109",
    "end": "18449"
  },
  {
    "text": "monitoring company for morning cloud",
    "start": "18449",
    "end": "20070"
  },
  {
    "text": "applications that's all right",
    "start": "20070",
    "end": "22230"
  },
  {
    "text": "and what's the problem solving so what",
    "start": "22230",
    "end": "24750"
  },
  {
    "text": "you're trying to do is we look at Mona",
    "start": "24750",
    "end": "27480"
  },
  {
    "text": "cloud application and there are highly",
    "start": "27480",
    "end": "28740"
  },
  {
    "text": "distributed and they use many managed",
    "start": "28740",
    "end": "31380"
  },
  {
    "text": "services right and what we're trying to",
    "start": "31380",
    "end": "33239"
  },
  {
    "text": "do is take the three pillars of",
    "start": "33239",
    "end": "35370"
  },
  {
    "text": "monitoring logs metric and traces and",
    "start": "35370",
    "end": "37770"
  },
  {
    "text": "combine them together instead of having",
    "start": "37770",
    "end": "39809"
  },
  {
    "text": "different tools to give you the full",
    "start": "39809",
    "end": "41309"
  },
  {
    "text": "observability to your system okay sounds",
    "start": "41309",
    "end": "43379"
  },
  {
    "text": "interesting and this is what you've",
    "start": "43379",
    "end": "45180"
  },
  {
    "text": "built so walk us through so what's going",
    "start": "45180",
    "end": "48059"
  },
  {
    "text": "on here is this this is the part of the",
    "start": "48059",
    "end": "50070"
  },
  {
    "text": "architecture that since charge of",
    "start": "50070",
    "end": "51449"
  },
  {
    "text": "generating metrics for lambda functions",
    "start": "51449",
    "end": "53670"
  },
  {
    "text": "with what part of the things that we are",
    "start": "53670",
    "end": "55739"
  },
  {
    "text": "monitoring is learned functions for",
    "start": "55739",
    "end": "57329"
  },
  {
    "text": "customers and we want to be able to",
    "start": "57329",
    "end": "60199"
  },
  {
    "text": "understand different metrics about them",
    "start": "60199",
    "end": "62399"
  },
  {
    "text": "memories when they are out of memories",
    "start": "62399",
    "end": "64948"
  },
  {
    "text": "if they had a timeout if their errors",
    "start": "64949",
    "end": "66689"
  },
  {
    "text": "things like that so the first thing that",
    "start": "66689",
    "end": "69180"
  },
  {
    "text": "we do here is if we have the clients",
    "start": "69180",
    "end": "71430"
  },
  {
    "text": "lambda function we have to get data",
    "start": "71430",
    "end": "72900"
  },
  {
    "text": "about it right",
    "start": "72900",
    "end": "73710"
  },
  {
    "text": "so what we chose to do is to use the",
    "start": "73710",
    "end": "76200"
  },
  {
    "text": "cloud root integration with Kinesis to",
    "start": "76200",
    "end": "78119"
  },
  {
    "text": "stream different parts of the lambdas",
    "start": "78119",
    "end": "80670"
  },
  {
    "text": "clouds logs into a Kinesis in Oracle and",
    "start": "80670",
    "end": "85470"
  },
  {
    "text": "this is the first part where we get data",
    "start": "85470",
    "end": "87270"
  },
  {
    "text": "from our users to our system ok I see so",
    "start": "87270",
    "end": "90570"
  },
  {
    "text": "you grant access basically to your",
    "start": "90570",
    "end": "92100"
  },
  {
    "text": "customers account from your customers",
    "start": "92100",
    "end": "94350"
  },
  {
    "text": "accounts to your account in the law",
    "start": "94350",
    "end": "96509"
  },
  {
    "text": "basically data influx into a Canasta",
    "start": "96509",
    "end": "98729"
  },
  {
    "text": "stream ok see what happens next what's",
    "start": "98729",
    "end": "101700"
  },
  {
    "text": "the next part okay so these Kinesis is",
    "start": "101700",
    "end": "104040"
  },
  {
    "text": "getting parts of the logs of the land",
    "start": "104040",
    "end": "105810"
  },
  {
    "text": "right when along started executing when",
    "start": "105810",
    "end": "107490"
  },
  {
    "text": "it finished executing and now we have to",
    "start": "107490",
    "end": "109530"
  },
  {
    "text": "transform these logs into what we call",
    "start": "109530",
    "end": "111540"
  },
  {
    "text": "invocation records records to describe",
    "start": "111540",
    "end": "113490"
  },
  {
    "text": "different invocations of our clients",
    "start": "113490",
    "end": "115649"
  },
  {
    "text": "learners so this is what this learners",
    "start": "115649",
    "end": "117689"
  },
  {
    "text": "in charge of its basically transformed",
    "start": "117689",
    "end": "120390"
  },
  {
    "text": "on the right it gets data from these",
    "start": "120390",
    "end": "122670"
  },
  {
    "text": "finishes which is log data and using",
    "start": "122670",
    "end": "127200"
  },
  {
    "text": "this DynamoDB which is the animal to be",
    "start": "127200",
    "end": "129300"
  },
  {
    "text": "the storage data about the function of",
    "start": "129300",
    "end": "131459"
  },
  {
    "text": "our customers how many memory do",
    "start": "131459",
    "end": "133330"
  },
  {
    "text": "do they have how many times they have",
    "start": "133330",
    "end": "135580"
  },
  {
    "text": "what is their channel using data from",
    "start": "135580",
    "end": "137500"
  },
  {
    "text": "this database you can analyze these logs",
    "start": "137500",
    "end": "140200"
  },
  {
    "text": "and create what we call invocation",
    "start": "140200",
    "end": "142480"
  },
  {
    "text": "records records that describe okay there",
    "start": "142480",
    "end": "144760"
  },
  {
    "text": "was an invocation",
    "start": "144760",
    "end": "147209"
  },
  {
    "text": "he took XY said it had an arrow I didn't",
    "start": "148600",
    "end": "151780"
  },
  {
    "text": "hand arrow it's at a time out and also",
    "start": "151780",
    "end": "154690"
  },
  {
    "text": "it can update this database so something",
    "start": "154690",
    "end": "158800"
  },
  {
    "text": "this we call partial implications so",
    "start": "158800",
    "end": "160810"
  },
  {
    "text": "because lambda is being triggered with",
    "start": "160810",
    "end": "162310"
  },
  {
    "text": "partial data from two kinases like",
    "start": "162310",
    "end": "164350"
  },
  {
    "text": "chunks of logs from a lot of customers",
    "start": "164350",
    "end": "166330"
  },
  {
    "text": "sometimes it's we don't get it all in",
    "start": "166330",
    "end": "168730"
  },
  {
    "text": "the same lambda invocation so we also",
    "start": "168730",
    "end": "170470"
  },
  {
    "text": "use this database to keep track of",
    "start": "170470",
    "end": "171970"
  },
  {
    "text": "what's going on at the end we get this",
    "start": "171970",
    "end": "174250"
  },
  {
    "text": "skinny stream we tell you the stream of",
    "start": "174250",
    "end": "176680"
  },
  {
    "text": "all the records of our different clients",
    "start": "176680",
    "end": "179260"
  },
  {
    "text": "and vacations okay it sounds really good",
    "start": "179260",
    "end": "181000"
  },
  {
    "text": "so that dynamodb is containing data from",
    "start": "181000",
    "end": "185080"
  },
  {
    "text": "all of our of your customers right and",
    "start": "185080",
    "end": "188020"
  },
  {
    "text": "utilize that information to power that",
    "start": "188020",
    "end": "190810"
  },
  {
    "text": "decision making process and also you",
    "start": "190810",
    "end": "192850"
  },
  {
    "text": "also improve that data continuously",
    "start": "192850",
    "end": "195220"
  },
  {
    "text": "while you're running and making your",
    "start": "195220",
    "end": "196810"
  },
  {
    "text": "decisions that's pretty interesting so",
    "start": "196810",
    "end": "199150"
  },
  {
    "text": "we have knesset right down here I see",
    "start": "199150",
    "end": "201400"
  },
  {
    "text": "two flows right now so talking to this",
    "start": "201400",
    "end": "205630"
  },
  {
    "text": "one maybe yeah so these cases have",
    "start": "205630",
    "end": "208660"
  },
  {
    "text": "invocation records right and this is",
    "start": "208660",
    "end": "210010"
  },
  {
    "text": "something pretty valuable for us in AB",
    "start": "210010",
    "end": "211959"
  },
  {
    "text": "single but we want two different things",
    "start": "211959",
    "end": "214540"
  },
  {
    "text": "with these invocations so the first",
    "start": "214540",
    "end": "216340"
  },
  {
    "text": "thing we want to do is we want to allow",
    "start": "216340",
    "end": "217750"
  },
  {
    "text": "the user to very fast when he has a",
    "start": "217750",
    "end": "219580"
  },
  {
    "text": "request ID or a link to specific",
    "start": "219580",
    "end": "221230"
  },
  {
    "text": "invocation maybe form a trace which is a",
    "start": "221230",
    "end": "223120"
  },
  {
    "text": "different part in our system to be able",
    "start": "223120",
    "end": "224830"
  },
  {
    "text": "to look at on the data of this",
    "start": "224830",
    "end": "226630"
  },
  {
    "text": "invocation so this is what this part is",
    "start": "226630",
    "end": "229660"
  },
  {
    "text": "in charge of it's basically a storage",
    "start": "229660",
    "end": "231820"
  },
  {
    "text": "that is really fast for a specific query",
    "start": "231820",
    "end": "234130"
  },
  {
    "text": "over one specific item we take an",
    "start": "234130",
    "end": "236200"
  },
  {
    "text": "invocation record from these Kinesis",
    "start": "236200",
    "end": "238770"
  },
  {
    "text": "we're sending to this loan the function",
    "start": "238770",
    "end": "241360"
  },
  {
    "text": "now this lambda function is in charge of",
    "start": "241360",
    "end": "243400"
  },
  {
    "text": "writing them into service Aurora",
    "start": "243400",
    "end": "245470"
  },
  {
    "text": "database so our system can query it",
    "start": "245470",
    "end": "248770"
  },
  {
    "text": "later",
    "start": "248770",
    "end": "249280"
  },
  {
    "text": "now usually lambda in Aurora doesn't mix",
    "start": "249280",
    "end": "252489"
  },
  {
    "text": "right doesn't mix well right because",
    "start": "252489",
    "end": "255239"
  },
  {
    "text": "connection pooling is can be issued",
    "start": "255239",
    "end": "257530"
  },
  {
    "text": "economy problematic with lambda but the",
    "start": "257530",
    "end": "259989"
  },
  {
    "text": "kisses loan integration solve this for",
    "start": "259989",
    "end": "261940"
  },
  {
    "text": "us because kinases basically limit how",
    "start": "261940",
    "end": "264100"
  },
  {
    "text": "many concurrent lambdas are executing",
    "start": "264100",
    "end": "266720"
  },
  {
    "text": "time alright okay so these two things",
    "start": "266720",
    "end": "269870"
  },
  {
    "text": "you give a storage for pretty much",
    "start": "269870",
    "end": "271850"
  },
  {
    "text": "instant occurring all right which",
    "start": "271850",
    "end": "273890"
  },
  {
    "text": "happens here and you make sure that you",
    "start": "273890",
    "end": "275600"
  },
  {
    "text": "buffer or protect and over from an",
    "start": "275600",
    "end": "277640"
  },
  {
    "text": "overload yeah okay so what happens right",
    "start": "277640",
    "end": "279890"
  },
  {
    "text": "here so the second part is the more",
    "start": "279890",
    "end": "282320"
  },
  {
    "text": "active part right because looking at the",
    "start": "282320",
    "end": "284540"
  },
  {
    "text": "specific invocation is nice but when you",
    "start": "284540",
    "end": "286310"
  },
  {
    "text": "want to look and then overview obvious",
    "start": "286310",
    "end": "288320"
  },
  {
    "text": "as an overview of a system sometimes",
    "start": "288320",
    "end": "290660"
  },
  {
    "text": "want to look at aggregated metrics let's",
    "start": "290660",
    "end": "293420"
  },
  {
    "text": "say for example what's the p90 duration",
    "start": "293420",
    "end": "296150"
  },
  {
    "text": "of a specific lambda function because if",
    "start": "296150",
    "end": "297980"
  },
  {
    "text": "it's being close to time out the Navy",
    "start": "297980",
    "end": "300230"
  },
  {
    "text": "I'm gonna have a problem soon so this is",
    "start": "300230",
    "end": "302090"
  },
  {
    "text": "what this part is in charge of making",
    "start": "302090",
    "end": "303860"
  },
  {
    "text": "those disaggregated data so we take this",
    "start": "303860",
    "end": "306350"
  },
  {
    "text": "invocation records and we throw them",
    "start": "306350",
    "end": "310030"
  },
  {
    "text": "into firehose now fire always batches",
    "start": "310030",
    "end": "312980"
  },
  {
    "text": "them together and put them in a three",
    "start": "312980",
    "end": "316040"
  },
  {
    "text": "for us now we have kind of a data like",
    "start": "316040",
    "end": "319220"
  },
  {
    "text": "here write all of the invocation being",
    "start": "319220",
    "end": "320810"
  },
  {
    "text": "Sorna certificate three which we can",
    "start": "320810",
    "end": "322850"
  },
  {
    "text": "query using Athena in order to get the",
    "start": "322850",
    "end": "327740"
  },
  {
    "text": "results that we need okay",
    "start": "327740",
    "end": "329690"
  },
  {
    "text": "in fact Athena and s3 work very well",
    "start": "329690",
    "end": "332150"
  },
  {
    "text": "together however what's important is",
    "start": "332150",
    "end": "334160"
  },
  {
    "text": "that the data store tree needs to be",
    "start": "334160",
    "end": "335900"
  },
  {
    "text": "optimized right in terms of structure so",
    "start": "335900",
    "end": "339290"
  },
  {
    "text": "assume that seeing the blue right here",
    "start": "339290",
    "end": "340930"
  },
  {
    "text": "that this plays a role right yeah so",
    "start": "340930",
    "end": "344330"
  },
  {
    "text": "what we're doing here is we don't want",
    "start": "344330",
    "end": "346190"
  },
  {
    "text": "to store all those Jason's in there",
    "start": "346190",
    "end": "347780"
  },
  {
    "text": "three because it's not very efficient",
    "start": "347780",
    "end": "349790"
  },
  {
    "text": "not for Athena and not storage wise in",
    "start": "349790",
    "end": "352160"
  },
  {
    "text": "there three so with great you do with",
    "start": "352160",
    "end": "354950"
  },
  {
    "text": "firehose we basically decided of the",
    "start": "354950",
    "end": "359120"
  },
  {
    "text": "what this Dalek looks like in glue and",
    "start": "359120",
    "end": "361700"
  },
  {
    "text": "we turn on the data conversion in files",
    "start": "361700",
    "end": "364820"
  },
  {
    "text": "when we integrated it with glue so",
    "start": "364820",
    "end": "367640"
  },
  {
    "text": "basically Jason records are coming into",
    "start": "367640",
    "end": "369740"
  },
  {
    "text": "firehose but fire was shooting out for",
    "start": "369740",
    "end": "371990"
  },
  {
    "text": "care records whose structure is defined",
    "start": "371990",
    "end": "374540"
  },
  {
    "text": "by this glue table and is optimized for",
    "start": "374540",
    "end": "377900"
  },
  {
    "text": "our queries mm-hmm all right okay go",
    "start": "377900",
    "end": "380210"
  },
  {
    "text": "this is a great solution now overall is",
    "start": "380210",
    "end": "382820"
  },
  {
    "text": "you're connecting with many of your",
    "start": "382820",
    "end": "384260"
  },
  {
    "text": "customers so what's the load that you're",
    "start": "384260",
    "end": "386030"
  },
  {
    "text": "able to cope with so this system is",
    "start": "386030",
    "end": "388100"
  },
  {
    "text": "designed to deal with a very high load",
    "start": "388100",
    "end": "390229"
  },
  {
    "text": "we have hundreds of thousands of lambdas",
    "start": "390229",
    "end": "393410"
  },
  {
    "text": "that were monitoring for our clients",
    "start": "393410",
    "end": "395000"
  },
  {
    "text": "with billions of invocations paramount",
    "start": "395000",
    "end": "397160"
  },
  {
    "text": "so you can say it's a lot of data that",
    "start": "397160",
    "end": "399320"
  },
  {
    "text": "we're ingesting",
    "start": "399320",
    "end": "400139"
  },
  {
    "text": "and so that's actually why a we're using",
    "start": "400139",
    "end": "403139"
  },
  {
    "text": "surveillance because a lot of these",
    "start": "403139",
    "end": "404699"
  },
  {
    "text": "things are also scanning pretty easily",
    "start": "404699",
    "end": "406919"
  },
  {
    "text": "and secondly we try to cut the data as",
    "start": "406919",
    "end": "409710"
  },
  {
    "text": "soon as possible so swimming the logs we",
    "start": "409710",
    "end": "412080"
  },
  {
    "text": "only stream very relevant line data",
    "start": "412080",
    "end": "413909"
  },
  {
    "text": "relevant for us over here we're not",
    "start": "413909",
    "end": "416009"
  },
  {
    "text": "sending all of the logs were only",
    "start": "416009",
    "end": "417240"
  },
  {
    "text": "creating implication records files is",
    "start": "417240",
    "end": "419669"
  },
  {
    "text": "dropping data this language dropping",
    "start": "419669",
    "end": "421319"
  },
  {
    "text": "that we only stream the data that we",
    "start": "421319",
    "end": "423270"
  },
  {
    "text": "need in order to proceed sorry very",
    "start": "423270",
    "end": "424889"
  },
  {
    "text": "cautious about limiting to what really",
    "start": "424889",
    "end": "426960"
  },
  {
    "text": "matters yeah I'll reduce into what",
    "start": "426960",
    "end": "428490"
  },
  {
    "text": "really matters",
    "start": "428490",
    "end": "428999"
  },
  {
    "text": "okay thanks Kyle thank you very much for",
    "start": "428999",
    "end": "430650"
  },
  {
    "text": "sharing this with us and thanks for",
    "start": "430650",
    "end": "432779"
  },
  {
    "text": "watching this some architecture",
    "start": "432779",
    "end": "435510"
  },
  {
    "text": "[Music]",
    "start": "435510",
    "end": "438839"
  }
]