[
  {
    "text": "hello everybody thanks for coming out tonight my name is Scott Allison I'm the",
    "start": "1100",
    "end": "6210"
  },
  {
    "text": "senior technical product manager for AWS green grass and this is session IOT 365 introducing the new features of AWS IOT",
    "start": "6210",
    "end": "13290"
  },
  {
    "text": "green grass and thanks for coming out so we're gonna be talking a lot about release 1.7 of green grass tonight you",
    "start": "13290",
    "end": "22080"
  },
  {
    "text": "guys may have seen it released on Monday there are a lot of new features to cover a lot of things that we think you can make good use of and we're looking",
    "start": "22080",
    "end": "28439"
  },
  {
    "text": "forward to talking about them so let's start off a little bit of an introduction about AWS IOT green grass",
    "start": "28439",
    "end": "34670"
  },
  {
    "text": "when we talk about IOT deployments we usually talk about it in terms of the three laws talk about the laws of",
    "start": "34670",
    "end": "41399"
  },
  {
    "text": "physics the laws of economics and the laws of the land so in each case the law",
    "start": "41399",
    "end": "46440"
  },
  {
    "text": "of physics the speed of light only goes so fast so you probably want to be able to operate on your data locally perform actions cache things so that you can do",
    "start": "46440",
    "end": "53399"
  },
  {
    "text": "things at the edge the law of economics it can be expensive to transit a lot of data to the cloud and so you may want to",
    "start": "53399",
    "end": "60120"
  },
  {
    "text": "filter or analyze the data at the edge to minimize the amount of data you send off out of the edge into the cloud and",
    "start": "60120",
    "end": "66960"
  },
  {
    "text": "then in terms of the law of land there may be regulations like HIPAA or gdpr",
    "start": "66960",
    "end": "72479"
  },
  {
    "text": "that require you to perform operations on premises so in order to make that",
    "start": "72479",
    "end": "77729"
  },
  {
    "text": "possible we built AWS IOT Greengrass and we added some features that we think helped with",
    "start": "77729",
    "end": "82920"
  },
  {
    "text": "all of these things so we built a platform for local code execution using lambda that allow you to perform actions",
    "start": "82920",
    "end": "88320"
  },
  {
    "text": "at the edge with a familiar format that you already know in AWS lambda secure",
    "start": "88320",
    "end": "93659"
  },
  {
    "text": "connectivity allows you to communicate securely with the devices on-premises services in the cloud and other",
    "start": "93659",
    "end": "99000"
  },
  {
    "text": "Greengrass devices ml inference so that you can move ml models to the edge and",
    "start": "99000",
    "end": "105270"
  },
  {
    "text": "perform analysis and ml at the edge without having to work in the cloud and",
    "start": "105270",
    "end": "110780"
  },
  {
    "text": "local actions and resources allowing you to access cameras and the file system and other pieces of hardware to perform",
    "start": "110780",
    "end": "117149"
  },
  {
    "text": "actions using the devices at the edge so what does that look like a practice",
    "start": "117149",
    "end": "123060"
  },
  {
    "text": "right now you guys are probably already pretty familiar with how it works computing at the edge because you already use AWS IOT Greengrass but a",
    "start": "123060",
    "end": "129330"
  },
  {
    "text": "common edge scenario might be you're collecting it some data from on-premise devices like thermometers temperature",
    "start": "129330",
    "end": "134510"
  },
  {
    "text": "sensors industrial devices cars your caching and analyzing that data on the",
    "start": "134510",
    "end": "139790"
  },
  {
    "text": "green graph score filtering it doing some sort of work on it and then performing local actions or transferring",
    "start": "139790",
    "end": "146360"
  },
  {
    "text": "the data to cloud services like cloud watch or SNS so at each step along the way you're building things in lambda or",
    "start": "146360",
    "end": "153920"
  },
  {
    "text": "you're building things that require authentication to other services so what",
    "start": "153920",
    "end": "159290"
  },
  {
    "text": "we tried to do with release 1.7 is to make it easier to build and deploy applications to the edge using AWS IOT",
    "start": "159290",
    "end": "166130"
  },
  {
    "text": "Greengrass connectors and we have Dimitri's mean from extreme networks to give a demo of what that might look like",
    "start": "166130",
    "end": "171700"
  },
  {
    "text": "and then we have enhanced security features to help you secure the applications that you build in AWS IOT",
    "start": "171700",
    "end": "177560"
  },
  {
    "text": "Greengrass so we've got AWS IOT Greengrass secrets manager which is an extension of the AWS secrets manager to",
    "start": "177560",
    "end": "184730"
  },
  {
    "text": "the edge and then AWS IOT Greengrass hardware security integration which is hardware security integration and then",
    "start": "184730",
    "end": "193340"
  },
  {
    "text": "we have logic supply here to give a demo of that and then greater flexibility so we allow Greengrass / lam - isolation",
    "start": "193340",
    "end": "200030"
  },
  {
    "text": "and permission configurations down one-point-seven those are the things that we'll be covering in this session but there are a lot of other pieces to",
    "start": "200030",
    "end": "206390"
  },
  {
    "text": "this release that are also important that you might be interested in we have the ability to perform bulk deployments",
    "start": "206390",
    "end": "211400"
  },
  {
    "text": "now to multiple AWS Greengrass groups and we also have support for a LPN and",
    "start": "211400",
    "end": "216620"
  },
  {
    "text": "proxy if you have Network scenarios that require you to work in a restricted Network environment and we've improved",
    "start": "216620",
    "end": "222800"
  },
  {
    "text": "ml inference I'm in 1.7 we made it more performant with a smaller footprint there's a lot to talk about there and so",
    "start": "222800",
    "end": "229340"
  },
  {
    "text": "we have a separate session for that that's IOT 214 machine learning at the IOT edge and that's tomorrow at 11:30 at",
    "start": "229340",
    "end": "235760"
  },
  {
    "text": "the Venetian so let's talk a little bit about the simplified deployments piece",
    "start": "235760",
    "end": "241040"
  },
  {
    "text": "of 1.7 AWS IOT Greengrass connectors which I just mentioned what are they so",
    "start": "241040",
    "end": "248450"
  },
  {
    "text": "we know that when people build applications using AWS IOT Greengrass they tend to do a lot of things over and",
    "start": "248450",
    "end": "254450"
  },
  {
    "text": "over again and they write lambda Stu do that processing the data moving into cloud services connecting to devices",
    "start": "254450",
    "end": "259790"
  },
  {
    "text": "that use industrial protocols and connecting to AWS services so what we",
    "start": "259790",
    "end": "265039"
  },
  {
    "text": "wanted to do is make it easier for you to do that without having to write code so what AWS Greengrass connectors are are prepackaged bundles",
    "start": "265039",
    "end": "272930"
  },
  {
    "text": "of lambda functions and mqtt topics and secrets that allow you to perform those",
    "start": "272930",
    "end": "280159"
  },
  {
    "text": "actions and configure them simply from the console just by filling out some parameters so there are eleven of them",
    "start": "280159",
    "end": "285500"
  },
  {
    "text": "available today eight familiar things that you might be using at the edge already plus three integrations with",
    "start": "285500",
    "end": "290840"
  },
  {
    "text": "third-party services cloud watch events or cloud watch metrics AWS IOT device",
    "start": "290840",
    "end": "296840"
  },
  {
    "text": "defender SNS and if you're using a third-party service Twilio spelunker service now we're not done creating and",
    "start": "296840",
    "end": "303500"
  },
  {
    "text": "releasing connectors and we're working with several partners in 2019 we'll be working with Intel and they're open vino",
    "start": "303500",
    "end": "309889"
  },
  {
    "text": "SDK to create a connector that allows you to connect with that easily with Nvidia for their deep stream SDK and OSI",
    "start": "309889",
    "end": "316190"
  },
  {
    "text": "soft for industrial historian use cases with their PI offering and in addition",
    "start": "316190",
    "end": "321349"
  },
  {
    "text": "to that we're going to allow you to edit the connectors that we already provide to you and build your own connectors and",
    "start": "321349",
    "end": "327500"
  },
  {
    "text": "that's coming as well we know that the contribution mechanism is best from you guys the customers and so we want to",
    "start": "327500",
    "end": "333199"
  },
  {
    "text": "enable that as well so what does an AWS IOT Greengrass connector do and how does",
    "start": "333199",
    "end": "340280"
  },
  {
    "text": "it work well it's easy enough to find you go into the AWS Greengrass console open it",
    "start": "340280",
    "end": "346370"
  },
  {
    "text": "up and then you'll see the connectors as a new section within that section there's a list of all the available connectors you can select them from the",
    "start": "346370",
    "end": "353029"
  },
  {
    "text": "list and attach them to a Greengrass group and then deploy them so a good",
    "start": "353029",
    "end": "359330"
  },
  {
    "text": "example of that is the SNS connector whereas previously you might have written a lambda function to connect authenticate and pass data to Amazon SNS",
    "start": "359330",
    "end": "366380"
  },
  {
    "text": "the connector does that for you it's a straightforward configuration you go into SNS and create an SNS topic save",
    "start": "366380",
    "end": "372620"
  },
  {
    "text": "that arne come back to Greengrass add the AWS Greengrass connector for SNS to",
    "start": "372620",
    "end": "379159"
  },
  {
    "text": "your group and configure it and the configuration of this is just adding the iron of the SNS topic to that and",
    "start": "379159",
    "end": "386449"
  },
  {
    "text": "hitting finish and then you attach and deploy once it's deployed there'll be an MQTT topic out there with the name all",
    "start": "386449",
    "end": "391849"
  },
  {
    "text": "you have to do is publish to that topic anything publish that topic will be sent to the SNS topic you desired",
    "start": "391849",
    "end": "397970"
  },
  {
    "text": "and if you don't use SNS say for example you're using Tulio we also have a connector for that and the configuration",
    "start": "397970",
    "end": "404330"
  },
  {
    "text": "is very much the same so you add your auth token for Twilio to AWS secrets manager using AWS Greengrass secrets",
    "start": "404330",
    "end": "411890"
  },
  {
    "text": "manager which I'll talk about a little bit later and then you specify the phone number NS ID deploy and then it would also",
    "start": "411890",
    "end": "418280"
  },
  {
    "text": "create an EM key topic you publish to and those messages would be sent via Twilio so that's the theory of how're",
    "start": "418280",
    "end": "427730"
  },
  {
    "text": "you guys connectors work for a practical example I'd like to invite Dimitri's Amin from extreme networks to the stage",
    "start": "427730",
    "end": "433130"
  },
  {
    "text": "to give a little demo and talk about what he's done with it here to show you",
    "start": "433130",
    "end": "443660"
  },
  {
    "text": "something that we did with green grass and green grass connectors but first few words about extreme extreme networks we",
    "start": "443660",
    "end": "452990"
  },
  {
    "text": "build networks hardware and software network solutions for wired and wireless age campus data center the whole range",
    "start": "452990",
    "end": "460970"
  },
  {
    "text": "if you didn't hear much about extreme that's okay it's changing we are accelerated to become number three",
    "start": "460970",
    "end": "467360"
  },
  {
    "text": "network company in data center and this year we are in the leaders quadrant of the corner Magic Quadrant for wireless",
    "start": "467360",
    "end": "474440"
  },
  {
    "text": "and word when it comes to IOT networking is only part is always part of the",
    "start": "474440",
    "end": "481070"
  },
  {
    "text": "picture but at an extreme we don't brain just the networking pipes there are",
    "start": "481070",
    "end": "486350"
  },
  {
    "text": "interesting devices with interesting form factors like specialized the virus or door switches the access points with",
    "start": "486350",
    "end": "493400"
  },
  {
    "text": "video cameras on them the small form factor devices like a walled plate these",
    "start": "493400",
    "end": "499160"
  },
  {
    "text": "devices have hardware support for IT protocols Bluetooth Low Energy threat others we have Wi-Fi based and Bluetooth",
    "start": "499160",
    "end": "507560"
  },
  {
    "text": "based location services and that that makes a stream part all the multiple IOT",
    "start": "507560",
    "end": "513289"
  },
  {
    "text": "solutions for many verticals here is an example this is a smart device is how it",
    "start": "513289",
    "end": "520400"
  },
  {
    "text": "looks which is part of the software hardware solution for the IOT in the",
    "start": "520400",
    "end": "527839"
  },
  {
    "text": "healthcare it effectively builds a simple security for intrinsically and secure",
    "start": "527839",
    "end": "535380"
  },
  {
    "text": "devices by creating the tunnels and applying the policies to the devices now",
    "start": "535380",
    "end": "543090"
  },
  {
    "text": "you think ok extreme is cool but what does it all have to do with the energy",
    "start": "543090",
    "end": "548270"
  },
  {
    "text": "Greengrass specifically and we've had where services well here is a deal we",
    "start": "548270",
    "end": "553950"
  },
  {
    "text": "built a variety of the next generation hardware switches access points",
    "start": "553950",
    "end": "559770"
  },
  {
    "text": "controllers these things have huge exist compute capacity and we want to turn",
    "start": "559770",
    "end": "567930"
  },
  {
    "text": "this capacity to run Greengrass right on these devices and give it to you to you",
    "start": "567930",
    "end": "573540"
  },
  {
    "text": "to run your network yes you will be able to run your Greengrass workloads right",
    "start": "573540",
    "end": "579330"
  },
  {
    "text": "on the network and this is good because you don't need to introduce another et",
    "start": "579330",
    "end": "585780"
  },
  {
    "text": "demain can use something that's already in place it was already managed it's",
    "start": "585780",
    "end": "591300"
  },
  {
    "text": "already secured it's already monitor it is paid for and while with that",
    "start": "591300",
    "end": "596940"
  },
  {
    "text": "you can tap into the information that comes from the extreme devices IOT",
    "start": "596940",
    "end": "602040"
  },
  {
    "text": "information network information location information we put that to test with our",
    "start": "602040",
    "end": "610260"
  },
  {
    "text": "partners Schneider Electric their industrial innovation team they want to",
    "start": "610260",
    "end": "617190"
  },
  {
    "text": "take the data from a vast array of industrial devices that speak industrial",
    "start": "617190",
    "end": "622650"
  },
  {
    "text": "protocols like Modbus and opt UA but do not talk to AWS over in PTT and they",
    "start": "622650",
    "end": "629910"
  },
  {
    "text": "want to push this data to the cloud once in the cloud we want to run analytics to get insights and provide the unified",
    "start": "629910",
    "end": "638550"
  },
  {
    "text": "view to all the devices finally they want to close the control loop so that the actions run as close to",
    "start": "638550",
    "end": "647580"
  },
  {
    "text": "device as possible while doing that they want to maximise the security and minimize the cost which effectively",
    "start": "647580",
    "end": "655080"
  },
  {
    "text": "rules out introducing a new IT domain their extreme networks we've Greengrass",
    "start": "655080",
    "end": "661410"
  },
  {
    "text": "running right on the network devices fit squarely so here is the POC there is a water with",
    "start": "661410",
    "end": "669210"
  },
  {
    "text": "a lot on that controlled by the variable speed drive this is a very smart thing",
    "start": "669210",
    "end": "674280"
  },
  {
    "text": "that among other cool things knows to talk tcp over the kind of Modbus over",
    "start": "674280",
    "end": "679710"
  },
  {
    "text": "TCP we take this device and connected",
    "start": "679710",
    "end": "685590"
  },
  {
    "text": "that literally unplugged that from the variable speed control and plug it here",
    "start": "685590",
    "end": "691200"
  },
  {
    "text": "and plug the other part to the cloud how close to the cloud it can be if you want",
    "start": "691200",
    "end": "696660"
  },
  {
    "text": "it closer just cut the network cable like the green grass already",
    "start": "696660",
    "end": "704100"
  },
  {
    "text": "pre-configured and print out in the image so once you plug it in it can be deployed when deployed there are two",
    "start": "704100",
    "end": "711900"
  },
  {
    "text": "lambda functions running there one Poole's device for the data and sends them to the cloud and other runs anomaly",
    "start": "711900",
    "end": "717360"
  },
  {
    "text": "detection right there and we also used the new Modbus connector from AWS to do",
    "start": "717360",
    "end": "724140"
  },
  {
    "text": "the ad-hoc request to the devices as well as controlling the device when the",
    "start": "724140",
    "end": "729690"
  },
  {
    "text": "message hit the cloud goes to the LG rule and then we send that to the IOT analytics for cranking the data later",
    "start": "729690",
    "end": "736950"
  },
  {
    "text": "and we send the two elasticsearch in cabana for providing the live dashboards",
    "start": "736950",
    "end": "743240"
  },
  {
    "text": "okay let's get into the code I use Gringo's",
    "start": "743390",
    "end": "750630"
  },
  {
    "text": "the utility that lets me define the group definition as llamo and then push",
    "start": "750630",
    "end": "757620"
  },
  {
    "text": "that and create that into AWS cloud well we all believe in infrastructure as code right so I can do that repeatedly or I",
    "start": "757620",
    "end": "765600"
  },
  {
    "text": "can put it in github and share that with you which I'm gonna do right after this session so don't run away so here we",
    "start": "765600",
    "end": "774720"
  },
  {
    "text": "have the first lambda definition the Modbus not a collector protocol that post data then second lambda definition",
    "start": "774720",
    "end": "782130"
  },
  {
    "text": "Annamalai detection the code will be on github you can see the algorithms and everything of how use that",
    "start": "782130",
    "end": "788310"
  },
  {
    "text": "scrolling down is the new AWS Greengrass",
    "start": "788310",
    "end": "793800"
  },
  {
    "text": "connector the Modbus connector as you can see I referred that by the it takes some parameters and finally",
    "start": "793800",
    "end": "800550"
  },
  {
    "text": "subscriptions who is talking to whom or which topics so here the Modbus lambda",
    "start": "800550",
    "end": "807560"
  },
  {
    "text": "reads the devices publish them to the cloud as well as to the animal eye-catcher lambda when animal catches",
    "start": "807560",
    "end": "814620"
  },
  {
    "text": "it gets published to the and the Modbus can talk to the cloud for requests and response okay finally the rule when",
    "start": "814620",
    "end": "827820"
  },
  {
    "text": "anomaly happens we form the request to the Modbus connector that stops the",
    "start": "827820",
    "end": "834329"
  },
  {
    "text": "motor by setting the speed where frequency to zero and post that to the Modbus connector over HTTP protocol we",
    "start": "834329",
    "end": "841680"
  },
  {
    "text": "could have done that with lambda problem production it will be better to do so but for a prototype it's easy to turn on",
    "start": "841680",
    "end": "847500"
  },
  {
    "text": "and off the rules so it looks better okay getting closer I wish I brought the",
    "start": "847500",
    "end": "855449"
  },
  {
    "text": "device but it is pretty big and very loud so I don't have the device with me but the dashboard will tell the story",
    "start": "855449",
    "end": "864769"
  },
  {
    "text": "here is the dashboard and we have the",
    "start": "864769",
    "end": "869850"
  },
  {
    "text": "previous run here and the motor right now is stopped so I go and start the motor by setting the speed to 150",
    "start": "869850",
    "end": "876290"
  },
  {
    "text": "publish that junkie TT topic the Modbus connector picks it up to go back to the",
    "start": "876290",
    "end": "882209"
  },
  {
    "text": "dashboard so you can see the torque right now jumps up there are a couple of",
    "start": "882209",
    "end": "888180"
  },
  {
    "text": "anomaly sketched because the torque jumps up and down here I'm changing the resolution for the better view the graph",
    "start": "888180",
    "end": "897089"
  },
  {
    "text": "shows the torque the graph on the table shows the animal is along with the data",
    "start": "897089",
    "end": "902459"
  },
  {
    "text": "now few of interest in things I fast forward that so now we're going to",
    "start": "902459",
    "end": "907980"
  },
  {
    "text": "inflict an anomaly we want to grab the motor for the shaft so that the speed goes down and the current and the tour",
    "start": "907980",
    "end": "915420"
  },
  {
    "text": "goes up so holding up grab okay we see you know if it jumps up but the rule is",
    "start": "915420",
    "end": "922380"
  },
  {
    "text": "not yet enabled so nothing's happening the anomaly is registered when emily is",
    "start": "922380",
    "end": "927839"
  },
  {
    "text": "posted to her late hold cool data in the cloud but weep on going so the motor keeps on",
    "start": "927839",
    "end": "936030"
  },
  {
    "text": "running I'm keep on waiting I probably will fast-forward that again about now how's",
    "start": "936030",
    "end": "943770"
  },
  {
    "text": "it going boring and now I go and enable",
    "start": "943770",
    "end": "960240"
  },
  {
    "text": "the rule so go their actions enable the",
    "start": "960240",
    "end": "966660"
  },
  {
    "text": "rule I hate this UI with the passion I almost killed the rule by clicking",
    "start": "966660",
    "end": "972000"
  },
  {
    "text": "delete because it's next to enable so rule now is enabled we quote come back",
    "start": "972000",
    "end": "977250"
  },
  {
    "text": "is actually it caught some anomaly but this anomaly was cut before the rule is",
    "start": "977250",
    "end": "982560"
  },
  {
    "text": "enabled in fact it's a funny story the guy was sitting on a chair and a trend is here close to the device the road hit",
    "start": "982560",
    "end": "989400"
  },
  {
    "text": "the chair and we cut the anomaly before actually is like what's going on so now",
    "start": "989400",
    "end": "996570"
  },
  {
    "text": "we actually grab that by the shaft and I will hold that by the shaft for as long as I can so that motor will burn and I'm",
    "start": "996570",
    "end": "1005720"
  },
  {
    "text": "holding this and the motor says now we just say the motor that's it you can see",
    "start": "1005720",
    "end": "1021430"
  },
  {
    "text": "extreme devices which are currently Greengrass capable in the device catalog",
    "start": "1021430",
    "end": "1026660"
  },
  {
    "text": "already and as i promised everything that you'd seen here is already on",
    "start": "1026660",
    "end": "1031850"
  },
  {
    "text": "github i'll keep the slide on so that you take the pictures and for questions comments",
    "start": "1031850",
    "end": "1037910"
  },
  {
    "text": "feedback or drinks I'll stick around [Applause]",
    "start": "1037910",
    "end": "1045160"
  },
  {
    "text": "ok thanks Dimitri alright now that you've seen a demo of connectors in",
    "start": "1045160",
    "end": "1051200"
  },
  {
    "text": "action let's move on and talk a little bit about the enhanced security features of the 1.7 release so as we mentioned",
    "start": "1051200",
    "end": "1058880"
  },
  {
    "text": "before we're extending AWS secrets manager to the edge with AWS IOT Greengrass secrets manager",
    "start": "1058880",
    "end": "1065030"
  },
  {
    "text": "now some of you may be familiar with AWS Secrets manager already you may be using it if you're not it's a cloud service",
    "start": "1065030",
    "end": "1071210"
  },
  {
    "text": "for storing things like keys passwords credentials and configurations in an",
    "start": "1071210",
    "end": "1077120"
  },
  {
    "text": "encrypted space so what we've done is we've extended Greengrass such that",
    "start": "1077120",
    "end": "1083030"
  },
  {
    "text": "secrets are now available as resources that can be attached to and deploy to Greengrass groups so it's easy enough to",
    "start": "1083030",
    "end": "1089960"
  },
  {
    "text": "use and they're usable by connectors and lambda functions but how does that really work it works very similarly to",
    "start": "1089960",
    "end": "1095870"
  },
  {
    "text": "any other resource you would attach a Greengrass today so you go in the secrets manager provision your secrets",
    "start": "1095870",
    "end": "1101690"
  },
  {
    "text": "there and then go right back to the Greengrass console and from the Greengrass console underneath the",
    "start": "1101690",
    "end": "1106820"
  },
  {
    "text": "resource tab you'll now see a new type of resource called secret you can select",
    "start": "1106820",
    "end": "1112100"
  },
  {
    "text": "any secret that you stored in AWS secrets manager any version of that and",
    "start": "1112100",
    "end": "1117590"
  },
  {
    "text": "they're encrypted in transit and at rest on the device and in transit from the cloud so it's pretty straightforward",
    "start": "1117590",
    "end": "1124100"
  },
  {
    "text": "it's easy to use and we hope it'll help you secure your applications at the edge without having to hard code passwords or",
    "start": "1124100",
    "end": "1130610"
  },
  {
    "text": "manage the storage of the secret yourselves on the devices so but that's not all we have to talk about in terms of security so I'd like to invite talk",
    "start": "1130610",
    "end": "1138080"
  },
  {
    "text": "to Anna cook to the stage so she can take over and talk about more security features great thanks",
    "start": "1138080",
    "end": "1147830"
  },
  {
    "text": "my name is Tatiana cook I'm another product manager on the green grass team so I've been working closely with Scott",
    "start": "1147830",
    "end": "1154310"
  },
  {
    "text": "and the rest of our team to bring you guys some new exciting security capabilities you've heard a little bit",
    "start": "1154310",
    "end": "1160100"
  },
  {
    "text": "from Dmitry about applications that you can build and deploy to your edge devices and this new capability to bring",
    "start": "1160100",
    "end": "1165620"
  },
  {
    "text": "secrets to the edge but I'm sure securing these new capabilities it's top of mind for you so first I'll break down",
    "start": "1165620",
    "end": "1171560"
  },
  {
    "text": "a little bit about our existing security architecture and then I can tell you about a new hardware security feature",
    "start": "1171560",
    "end": "1176930"
  },
  {
    "text": "that we have that will help you ensure that anything you bring to the edge stays secure with Greengrass today we",
    "start": "1176930",
    "end": "1182480"
  },
  {
    "text": "help protect messages that you're sending between the green graph score on your local device and the IOT cloud and",
    "start": "1182480",
    "end": "1189020"
  },
  {
    "text": "between your green graph score and other local devices maybe the truck shown in this picture by using a few different",
    "start": "1189020",
    "end": "1195170"
  },
  {
    "text": "capabilities first of all we ensure that your identity is correct for the device when it connects to the cloud by using I",
    "start": "1195170",
    "end": "1201700"
  },
  {
    "text": "am roles so that means that when you connect from your Greengrass cord at the cloud you only have access to the right",
    "start": "1201700",
    "end": "1207250"
  },
  {
    "text": "resources that you've provisioned for your device to access second all we use TLS encryption of all of the messages",
    "start": "1207250",
    "end": "1213820"
  },
  {
    "text": "sent between the Greengrass core and the cloud and the Greengrass core and your local device and we use a variety of different cipher suites as options to do",
    "start": "1213820",
    "end": "1221110"
  },
  {
    "text": "that as part of that TLS encryption we provide a private and public key that are stored on the Greengrass device that",
    "start": "1221110",
    "end": "1228190"
  },
  {
    "text": "are helps to use to encrypt and decrypt these messages along with the x.509 certificates that you use for that",
    "start": "1228190",
    "end": "1233950"
  },
  {
    "text": "messaging connection when you establish it right now Greengrass allows you to store a private key in the filesystem on",
    "start": "1233950",
    "end": "1239980"
  },
  {
    "text": "your device so that you can use that private key to decrypt any messages sent to you with the corresponding public key",
    "start": "1239980",
    "end": "1246000"
  },
  {
    "text": "today we're excited to announce a new capability because what we've heard from many customers is that they might be",
    "start": "1246000",
    "end": "1252250"
  },
  {
    "text": "interested in running devices that are in unsecured physical locations for example they might want to put a",
    "start": "1252250",
    "end": "1258280"
  },
  {
    "text": "transponder on a vehicle that's moving around in the real world so they can flag when it moves out of the zone they've allowed it to be navigating",
    "start": "1258280",
    "end": "1264670"
  },
  {
    "text": "through you might want to be measuring HVAC sensors within a hospital and you",
    "start": "1264670",
    "end": "1269680"
  },
  {
    "text": "could have a gateway device in that hospital that may not be physically secured so maybe the maintenance staff can physically get access to that device",
    "start": "1269680",
    "end": "1276190"
  },
  {
    "text": "or you could be interested in using video cameras at a conference with more than 50 thousand people to capture",
    "start": "1276190",
    "end": "1282820"
  },
  {
    "text": "images that allow you to make sure that buses are in the right place at the right time and this is a real use case",
    "start": "1282820",
    "end": "1288010"
  },
  {
    "text": "that our Protective Services team reached out to us about so many of you",
    "start": "1288010",
    "end": "1293110"
  },
  {
    "text": "at this point in the conference have probably tried to get from one place to another and you might have taken advantage of the wait time information",
    "start": "1293110",
    "end": "1299260"
  },
  {
    "text": "that's provided to you in your AWS app and there are three pieces to that so there's walking information there's",
    "start": "1299260",
    "end": "1305830"
  },
  {
    "text": "information about how long it would take to get uber or lyft and their shuttle time information this information isn't",
    "start": "1305830",
    "end": "1311440"
  },
  {
    "text": "publicly available at something that is being generated by our teens and we worked with the Protective Services team",
    "start": "1311440",
    "end": "1316780"
  },
  {
    "text": "to help enable the architecture getting that information so the way that this works is you're waiting in line maybe",
    "start": "1316780",
    "end": "1322870"
  },
  {
    "text": "you were trying to get to hear from the Venetian and as you may have noticed you were shepherded over certain arrows some",
    "start": "1322870",
    "end": "1329410"
  },
  {
    "text": "of you may have been yelled at not walking over the right carpeted portion when you were trying to get in line and that's because we have video",
    "start": "1329410",
    "end": "1335610"
  },
  {
    "text": "cameras 44 different cameras that are pointing at those lines counting people as they go in and out one of the things",
    "start": "1335610",
    "end": "1343320"
  },
  {
    "text": "that we did as part of this was actually run processing on the camera devices themselves so that we're not saving",
    "start": "1343320",
    "end": "1348660"
  },
  {
    "text": "pictures of the back of your head in the cloud so that we can go back and look at them later the video cameras actually do",
    "start": "1348660",
    "end": "1354720"
  },
  {
    "text": "processing and they count in and out information that information so that flow and line data not the video or",
    "start": "1354720",
    "end": "1361770"
  },
  {
    "text": "image information from the cameras was sent to logic supply devices and James will talk a little bit more about the",
    "start": "1361770",
    "end": "1367260"
  },
  {
    "text": "logic supply device and their implementation of Intel's TPM 2.0 but",
    "start": "1367260",
    "end": "1372600"
  },
  {
    "text": "those logic supply gateway devices are running AWS screen graphs and what Greengrass is able to do is securely",
    "start": "1372600",
    "end": "1378570"
  },
  {
    "text": "send information from that device up to the cloud where applications are running",
    "start": "1378570",
    "end": "1383910"
  },
  {
    "text": "to help calculate how many people are in line and notify both of you of how long the wait is and the bus company that's",
    "start": "1383910",
    "end": "1389760"
  },
  {
    "text": "sending new buses to help get those blind times down part of the reason protective services reached out to us is",
    "start": "1389760",
    "end": "1394860"
  },
  {
    "text": "because they had this logic supply hardware with the Intel trusted platform module but they weren't able to integrate it with their edge application",
    "start": "1394860",
    "end": "1401730"
  },
  {
    "text": "and what we're excited to announce with Greengrass is hardware security creation that allows you to use the public key",
    "start": "1401730",
    "end": "1407400"
  },
  {
    "text": "that securely generated and stored on a trusted platform module or other kind of edge secure element and that means that",
    "start": "1407400",
    "end": "1413700"
  },
  {
    "text": "it's in a tamper-proof location the private key never leaves the location itself so that the messages you're",
    "start": "1413700",
    "end": "1418920"
  },
  {
    "text": "sending from the core to the cloud or the core to local devices stay encrypted and can't be decrypted by a rogue agent",
    "start": "1418920",
    "end": "1425840"
  },
  {
    "text": "so the big change here is that you'll have the opportunity to integrate through a pkcs 11 interface with a",
    "start": "1425840",
    "end": "1432840"
  },
  {
    "text": "hardware secure element maybe you have hardware secure elements present on the devices you're using today and this is",
    "start": "1432840",
    "end": "1438059"
  },
  {
    "text": "really great because all you'll need to do is deploy new firmware from your secure element provider and update your",
    "start": "1438059",
    "end": "1443760"
  },
  {
    "text": "Greengrass score to run version 1.7 it's easy to get started with us so first of",
    "start": "1443760",
    "end": "1450300"
  },
  {
    "text": "all you'll follow your vendors directions to generate a private key on your secure element the next thing",
    "start": "1450300",
    "end": "1456510"
  },
  {
    "text": "you'll do is you'll update your Greengrass config JSON file to point towards the secure element rather than",
    "start": "1456510",
    "end": "1462179"
  },
  {
    "text": "the file system private key paths that you might have in the past you'll also want to make sure",
    "start": "1462179",
    "end": "1467250"
  },
  {
    "text": "that you authenticate the certificates you're using correctly to take advantage of that private key the last piece of",
    "start": "1467250",
    "end": "1473730"
  },
  {
    "text": "this is integration with the AWS IOT secrets that Scott mentioned through",
    "start": "1473730",
    "end": "1479309"
  },
  {
    "text": "Greengrass secrets manager you can bring those to the edge and if you have a secure element on your device you can use that for encryption and decryption",
    "start": "1479309",
    "end": "1485520"
  },
  {
    "text": "of those secrets to make sure that the private information you're using for your applications stays secure we're",
    "start": "1485520",
    "end": "1492929"
  },
  {
    "text": "really thrilled to be able to announce this with a variety of different partners we worked with so a lot of",
    "start": "1492929",
    "end": "1498179"
  },
  {
    "text": "thanks to the teams that Intel Logic supply microchip Infineon and XP",
    "start": "1498179",
    "end": "1503780"
  },
  {
    "text": "stmicroelectronics Sora comm vitro yubico and zimba there are all partners",
    "start": "1503780",
    "end": "1509160"
  },
  {
    "text": "who are qualifying their hardware to work with the security integration if you're interested in getting started",
    "start": "1509160",
    "end": "1514860"
  },
  {
    "text": "today or learning more about devices that have gone through the qualification process you can get that information",
    "start": "1514860",
    "end": "1520169"
  },
  {
    "text": "through our new partner device catalog by searching for HSI you can see some of",
    "start": "1520169",
    "end": "1525240"
  },
  {
    "text": "the devices that are directly available for purchase now and because of the variety of vendors we worked with we",
    "start": "1525240",
    "end": "1530700"
  },
  {
    "text": "think that there are a lot of different things to meet the needs that you might have at the edge if you're a partner in",
    "start": "1530700",
    "end": "1536190"
  },
  {
    "text": "the audience and you hear this and you say how can I get on these slides we have a new device tester program that's",
    "start": "1536190",
    "end": "1542250"
  },
  {
    "text": "allowing our partners to have tooling and become qualified for things like hardware security integration so that's",
    "start": "1542250",
    "end": "1547799"
  },
  {
    "text": "publicly available now as well you've heard me talk for a little bit about the theory of how to do this and I'm now",
    "start": "1547799",
    "end": "1554190"
  },
  {
    "text": "excited to welcome James Floyd from the logic supply team up to the stage to talk about the work that his team has",
    "start": "1554190",
    "end": "1560220"
  },
  {
    "text": "done for hardware security integration [Applause]",
    "start": "1560220",
    "end": "1569410"
  },
  {
    "text": "Thank You Tatiana thanks everyone for being here tonight my name is James Floyd I'm a sales engineer at logic supply and I work very",
    "start": "1569410",
    "end": "1577280"
  },
  {
    "text": "closely with our sales team and our customers understand their needs and making sure we're putting the right solution in front of them tonight I'm",
    "start": "1577280",
    "end": "1583610"
  },
  {
    "text": "happy to talk to you about hardware security integration within the Greengrass core but first who is a",
    "start": "1583610",
    "end": "1589730"
  },
  {
    "text": "logical supply large supply is an industrial computer manufacturer we're located in Vermont also located in",
    "start": "1589730",
    "end": "1595970"
  },
  {
    "text": "Vermont is maple syrup as I'm sure you guys are all aware some of the best beer if anyone's ever had Hedy topper and",
    "start": "1595970",
    "end": "1603470"
  },
  {
    "text": "also ice cream Ben and Jerry's our focus at large supply is on small form-factor",
    "start": "1603470",
    "end": "1608480"
  },
  {
    "text": "hardware and industrial designs our computer systems are used by software",
    "start": "1608480",
    "end": "1614750"
  },
  {
    "text": "companies they need a hardware element to make their solution whole they also use our OEM services like branding",
    "start": "1614750",
    "end": "1621580"
  },
  {
    "text": "imaging and direct fulfillment services and we also worked with many end-users",
    "start": "1621580",
    "end": "1627260"
  },
  {
    "text": "who use our systems as workstations and thin clients in factory environments those customers like our reliable",
    "start": "1627260",
    "end": "1634280"
  },
  {
    "text": "designs and embedded life cycles we've",
    "start": "1634280",
    "end": "1640520"
  },
  {
    "text": "been working with the green grass group since the beginning of the year to certify our hardware platform so the green grass court we're excited today to",
    "start": "1640520",
    "end": "1647870"
  },
  {
    "text": "be able to now leverage hardware security within the green grass core working with AWS group and Intel we're",
    "start": "1647870",
    "end": "1655220"
  },
  {
    "text": "leveraging Intel's platform trust technology to make this happen with a secure element in place we're able to",
    "start": "1655220",
    "end": "1660890"
  },
  {
    "text": "address a lot of our concerns as it relates to security specifically at the cloud a use case that we'd like to",
    "start": "1660890",
    "end": "1669530"
  },
  {
    "text": "highlight is a typical heating ventilation air conditioning HVAC how",
    "start": "1669530",
    "end": "1675050"
  },
  {
    "text": "many of you have a nest at home I love my nest allows me to optimize cooling within my house and lower my energy",
    "start": "1675050",
    "end": "1682400"
  },
  {
    "text": "costs at a much larger scale looking within a hospital there are a lot of more risks involved with bringing a",
    "start": "1682400",
    "end": "1687920"
  },
  {
    "text": "system like that online some of those risks include spoofing or rogue devices man-in-the-middle attacks and denial of",
    "start": "1687920",
    "end": "1695390"
  },
  {
    "text": "service next I want to show you real quick how",
    "start": "1695390",
    "end": "1703049"
  },
  {
    "text": "easy it is to actually implement hardware security within the green grass court there's a short video that I'll",
    "start": "1703049",
    "end": "1708690"
  },
  {
    "text": "walk you through first we're generating",
    "start": "1708690",
    "end": "1716969"
  },
  {
    "text": "a set of key set of keys for a new AWS green grass group next we're downloading",
    "start": "1716969",
    "end": "1728699"
  },
  {
    "text": "the private key that is used to connect the green grass group and moving it to a location where can be found by a TPM",
    "start": "1728699",
    "end": "1734309"
  },
  {
    "text": "script",
    "start": "1734309",
    "end": "1736669"
  },
  {
    "text": "here we're looking at the TPM scripts location highlighting the various items that will be used in the config file",
    "start": "1752130",
    "end": "1757710"
  },
  {
    "text": "along with expected location of the private key",
    "start": "1757710",
    "end": "1762410"
  },
  {
    "text": "next we run the script so that the private keys hash will be integrated into the system via Intel PTT",
    "start": "1770370",
    "end": "1777200"
  },
  {
    "text": "[Music]",
    "start": "1788460",
    "end": "1791809"
  },
  {
    "text": "next we move over the green grass folder to view the config files",
    "start": "1796980",
    "end": "1802070"
  },
  {
    "text": "and lastly we log in to and run green grass with a secure element now in place",
    "start": "1810630",
    "end": "1817980"
  },
  {
    "text": "success cool now with a hardware secure element",
    "start": "1820260",
    "end": "1827370"
  },
  {
    "text": "in place we're able to address some of the concerns we mentioned before specifically wrote for rogue devices and",
    "start": "1827370",
    "end": "1833100"
  },
  {
    "text": "spoofing the hardware security lemont is now physically located within the PTT and TPM on the within the within device",
    "start": "1833100",
    "end": "1840930"
  },
  {
    "text": "itself if anyone ever gets hard gets physical physically located by your device they'll not not have access to",
    "start": "1840930",
    "end": "1847860"
  },
  {
    "text": "the secure element because it's no longer the filesystem it's physically on the device we're also addressing the",
    "start": "1847860",
    "end": "1854430"
  },
  {
    "text": "man-in-the-middle concerns in Commission and communications encrypted using the",
    "start": "1854430",
    "end": "1859530"
  },
  {
    "text": "transport layer security protocol and lastly that digital the denial service",
    "start": "1859530",
    "end": "1865530"
  },
  {
    "text": "the only registered devices can access the file system with harbor security",
    "start": "1865530",
    "end": "1871490"
  },
  {
    "text": "integration in place we've moved from a solution where the private and public",
    "start": "1871490",
    "end": "1878070"
  },
  {
    "text": "keys were stored within a file system and were had the potential being compromised now we have a physical",
    "start": "1878070",
    "end": "1884730"
  },
  {
    "text": "secure element in place where people will not have access to the keys from the file system we're able to leverage",
    "start": "1884730",
    "end": "1891150"
  },
  {
    "text": "that using AWS and their hardware secure integration until trusted platform technology all on logic supplies",
    "start": "1891150",
    "end": "1898320"
  },
  {
    "text": "intelligent gateway thank you [Applause]",
    "start": "1898320",
    "end": "1908770"
  },
  {
    "text": "there's more great thanks James will now dive in to the third set of",
    "start": "1908770",
    "end": "1915350"
  },
  {
    "text": "capabilities that were excited to be able to announce today so we've heard",
    "start": "1915350",
    "end": "1920600"
  },
  {
    "text": "from customers since Greengrass launch that customers want to use green grass in a diverse set of environments they",
    "start": "1920600",
    "end": "1927710"
  },
  {
    "text": "might be interested in running AWS IOT green grass inside of a docker container",
    "start": "1927710",
    "end": "1932740"
  },
  {
    "text": "they could want to run green grass on a device where there are fewer dependencies and they don't have to make",
    "start": "1932740",
    "end": "1939170"
  },
  {
    "text": "Colonel level changes finally customers are interested in accessing more local",
    "start": "1939170",
    "end": "1944840"
  },
  {
    "text": "resources like Bluetooth Low Energy or USB devices that don't have a fixed file path we're making it easier for",
    "start": "1944840",
    "end": "1953240"
  },
  {
    "text": "customers to get up and running with green grass regardless of what environment they're interested in running green grass in so today with",
    "start": "1953240",
    "end": "1960590"
  },
  {
    "text": "this new capability that I'm about to describe you'll be able to run AWS IOT green grass in a docker container this",
    "start": "1960590",
    "end": "1968690"
  },
  {
    "text": "is possible because we're giving you more flexibility so to start off with today green grass provides per lambda",
    "start": "1968690",
    "end": "1975050"
  },
  {
    "text": "container isolation so when you're running applications on the edge with green grass you've got the benefits of",
    "start": "1975050",
    "end": "1980080"
  },
  {
    "text": "isolation and security that come with having a container environment provided for you and this is part of our current",
    "start": "1980080",
    "end": "1986240"
  },
  {
    "text": "model it's something that by default will still be present when you configure a green grass group in the cloud and deploy all of your lambdas to the edge",
    "start": "1986240",
    "end": "1993200"
  },
  {
    "text": "we have something called local resource access that allows you to interact with device resources locally through that",
    "start": "1993200",
    "end": "2000070"
  },
  {
    "text": "container environment we think customers enjoyed the fact that this brings a lot of security benefits with it and you",
    "start": "2000070",
    "end": "2006640"
  },
  {
    "text": "have the benefit of your lambdas all being isolated from each other however in some cases you might want to let",
    "start": "2006640",
    "end": "2013900"
  },
  {
    "text": "loose a little bit and allow those lambdas to run as OS processes we have a new mode that we're introducing where",
    "start": "2013900",
    "end": "2020140"
  },
  {
    "text": "lambdas and Greengrass have no container present this means that it's easier to directly access the operating system or",
    "start": "2020140",
    "end": "2026080"
  },
  {
    "text": "hardware environment that you've deployed Greengrass to or interact directly with device resources finally",
    "start": "2026080",
    "end": "2032980"
  },
  {
    "text": "customers will have the option to run a hybrid mix where they deploy containerization for some of their",
    "start": "2032980",
    "end": "2038770"
  },
  {
    "text": "lambdas but they want to configure certain lambdas for example if you have an application that you want to interact",
    "start": "2038770",
    "end": "2044000"
  },
  {
    "text": "with a ble device you can configure that to run without a container present this",
    "start": "2044000",
    "end": "2049099"
  },
  {
    "text": "means that you still got the security in isolation benefits where you need them but you can toggle that containerization",
    "start": "2049099",
    "end": "2054830"
  },
  {
    "text": "off on a per lambda basis and be really granular about the way that you configure device access this is going to",
    "start": "2054830",
    "end": "2062780"
  },
  {
    "text": "or it is now live today and it's easy for you to configure this from the console or a CLI so you can select it a",
    "start": "2062780",
    "end": "2070429"
  },
  {
    "text": "group level whether or not you want a container and you can also go in and edit per lambda container isolation",
    "start": "2070429",
    "end": "2075950"
  },
  {
    "text": "settings we're also giving you more granularity in the way that you allow",
    "start": "2075950",
    "end": "2081618"
  },
  {
    "text": "permissions for different lambdas so previously all lambdas ran with the same group and user ID GGC user and GGC group",
    "start": "2081619",
    "end": "2089270"
  },
  {
    "text": "now you'll have the ability on a per lambda basis to edit whether or not that lambda is associated with that user ID",
    "start": "2089270",
    "end": "2096560"
  },
  {
    "text": "in group or a new user ID in group for example if you want to restrict permissions for a particular application",
    "start": "2096560",
    "end": "2102859"
  },
  {
    "text": "or to allow certain applications to run as root you'll have the ability to have that really close control over",
    "start": "2102859",
    "end": "2108109"
  },
  {
    "text": "permissions this is really exciting for a lot of the developers out there",
    "start": "2108109",
    "end": "2113510"
  },
  {
    "text": "because the docker capability means that you can run green grass in docker on Mac OS 10 or on Windows 10 so we think it'll",
    "start": "2113510",
    "end": "2120560"
  },
  {
    "text": "be really easy for you to get started running green grass in those environments if you don't want to try them on your edge device I know there's",
    "start": "2120560",
    "end": "2129380"
  },
  {
    "text": "a lot that we talked through so I'll kind of do a quick wrap-up and tell you how to get started with all of these exciting new features that our team's",
    "start": "2129380",
    "end": "2135650"
  },
  {
    "text": "been working on as Scott mentioned for simplified deployments if you want to try out the 11 green grass connectors we",
    "start": "2135650",
    "end": "2142369"
  },
  {
    "text": "have available today documentation for those connectors is all available through the console so you can go check",
    "start": "2142369",
    "end": "2148460"
  },
  {
    "text": "that out and as he mentioned we'll have new connectors coming live in 2019 for",
    "start": "2148460",
    "end": "2153560"
  },
  {
    "text": "enhanced security you can configure your secrets and attach them to resources in the console and you can find qualified",
    "start": "2153560",
    "end": "2159200"
  },
  {
    "text": "hardware to take advantage of Hardware root of trust for your security architecture we encourage you to search",
    "start": "2159200",
    "end": "2165109"
  },
  {
    "text": "the Amazon partner device network for any Greengrass HSI qualified devices",
    "start": "2165109",
    "end": "2172630"
  },
  {
    "text": "we're really excited that alongside this greater flexibility we're also providing customers access to green grass that is",
    "start": "2173520",
    "end": "2179640"
  },
  {
    "text": "packaged up as a docker image for you to deploy to whatever edge device you'd like to run it in if you want to run",
    "start": "2179640",
    "end": "2185609"
  },
  {
    "text": "green grass inside of a docker container so there are links here and you can find documentation for how to access our",
    "start": "2185609",
    "end": "2191760"
  },
  {
    "text": "docker file and docker image online through the console thank you all for your attention and Scott and I are now",
    "start": "2191760",
    "end": "2198660"
  },
  {
    "text": "happy to answer any questions you have about the capabilities in release 1.7",
    "start": "2198660",
    "end": "2204650"
  },
  {
    "text": "[Applause]",
    "start": "2204930",
    "end": "2211329"
  },
  {
    "text": "yes yeah that's correct so within the config JSON for the green grass core you",
    "start": "2235380",
    "end": "2240790"
  },
  {
    "text": "can now specify the address of the proxy and the port you'll be communicating on",
    "start": "2240790",
    "end": "2246480"
  },
  {
    "text": "yes other questions",
    "start": "2246599",
    "end": "2253990"
  },
  {
    "text": "yeah we did such a good job explaining everything hey we did it awesome well thanks for coming guys we",
    "start": "2253990",
    "end": "2260020"
  },
  {
    "text": "really appreciate you being here enjoy Las Vegas [Applause]",
    "start": "2260020",
    "end": "2266760"
  }
]