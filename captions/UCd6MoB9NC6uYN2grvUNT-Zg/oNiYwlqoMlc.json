[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2480"
  },
  {
    "text": "hello",
    "start": "2480",
    "end": "3280"
  },
  {
    "text": "and thank you for watching this video on",
    "start": "3280",
    "end": "5200"
  },
  {
    "text": "how to start a pipeline execution",
    "start": "5200",
    "end": "7520"
  },
  {
    "text": "for an existing aws code pipeline via",
    "start": "7520",
    "end": "10240"
  },
  {
    "text": "the aws.net",
    "start": "10240",
    "end": "11840"
  },
  {
    "text": "sdk i am ignacio fuentes a solutions",
    "start": "11840",
    "end": "15280"
  },
  {
    "text": "architect here",
    "start": "15280",
    "end": "16080"
  },
  {
    "text": "at aws aws code pipeline is a fully",
    "start": "16080",
    "end": "20000"
  },
  {
    "text": "managed continuous delivery service",
    "start": "20000",
    "end": "22400"
  },
  {
    "text": "that helps you automate your release",
    "start": "22400",
    "end": "24320"
  },
  {
    "text": "pipelines for fast and reliable",
    "start": "24320",
    "end": "26400"
  },
  {
    "text": "application and infrastructure updates",
    "start": "26400",
    "end": "29199"
  },
  {
    "text": "code pipeline allows you to automate the",
    "start": "29199",
    "end": "31359"
  },
  {
    "text": "build",
    "start": "31359",
    "end": "32320"
  },
  {
    "text": "test and deploy phases of your release",
    "start": "32320",
    "end": "35040"
  },
  {
    "text": "process",
    "start": "35040",
    "end": "36079"
  },
  {
    "text": "this enables you to rapidly and reliably",
    "start": "36079",
    "end": "39040"
  },
  {
    "text": "deliver",
    "start": "39040",
    "end": "39680"
  },
  {
    "text": "features and updates you can easily",
    "start": "39680",
    "end": "42399"
  },
  {
    "text": "integrate aws code pipeline",
    "start": "42399",
    "end": "44719"
  },
  {
    "text": "with third-party services such as github",
    "start": "44719",
    "end": "47680"
  },
  {
    "text": "or with your own custom plugin",
    "start": "47680",
    "end": "50000"
  },
  {
    "text": "with aws code pipeline you only pay for",
    "start": "50000",
    "end": "52719"
  },
  {
    "text": "what you use",
    "start": "52719",
    "end": "53680"
  },
  {
    "text": "there are no upfront fees or long-term",
    "start": "53680",
    "end": "56559"
  },
  {
    "text": "commitments",
    "start": "56559",
    "end": "57600"
  },
  {
    "text": "so let's get started as you can see",
    "start": "57600",
    "end": "61440"
  },
  {
    "text": "i already have a code pipeline in my",
    "start": "61440",
    "end": "63680"
  },
  {
    "text": "account",
    "start": "63680",
    "end": "65040"
  },
  {
    "text": "normally and by default every time that",
    "start": "65040",
    "end": "67920"
  },
  {
    "text": "you make a change in source control",
    "start": "67920",
    "end": "70320"
  },
  {
    "text": "the pipeline will be triggered and all",
    "start": "70320",
    "end": "72560"
  },
  {
    "text": "its steps taken",
    "start": "72560",
    "end": "74159"
  },
  {
    "text": "this is the current behavior but what if",
    "start": "74159",
    "end": "77520"
  },
  {
    "text": "you wanted to introduce a more complex",
    "start": "77520",
    "end": "80000"
  },
  {
    "text": "or conditional logic to determine",
    "start": "80000",
    "end": "82400"
  },
  {
    "text": "whether a change in source control",
    "start": "82400",
    "end": "84560"
  },
  {
    "text": "should or should not result in",
    "start": "84560",
    "end": "86960"
  },
  {
    "text": "triggering your pipeline",
    "start": "86960",
    "end": "88880"
  },
  {
    "text": "for example consider the scenario of",
    "start": "88880",
    "end": "91200"
  },
  {
    "text": "your application having a readme file",
    "start": "91200",
    "end": "93840"
  },
  {
    "text": "that is still part of source control but",
    "start": "93840",
    "end": "96479"
  },
  {
    "text": "changes to it",
    "start": "96479",
    "end": "97439"
  },
  {
    "text": "need not trigger a pipeline execution to",
    "start": "97439",
    "end": "100159"
  },
  {
    "text": "recompile",
    "start": "100159",
    "end": "101119"
  },
  {
    "text": "re-test and redeploy the application",
    "start": "101119",
    "end": "104880"
  },
  {
    "text": "this pipeline is tied to a code commit",
    "start": "104880",
    "end": "107280"
  },
  {
    "text": "repository",
    "start": "107280",
    "end": "108560"
  },
  {
    "text": "this repository has an asp.net",
    "start": "108560",
    "end": "110720"
  },
  {
    "text": "application with controllers",
    "start": "110720",
    "end": "112479"
  },
  {
    "text": "models and views as well as a readme.md",
    "start": "112479",
    "end": "115360"
  },
  {
    "text": "file",
    "start": "115360",
    "end": "116320"
  },
  {
    "text": "what we want to do is introduce",
    "start": "116320",
    "end": "118240"
  },
  {
    "text": "customlogic in.net code",
    "start": "118240",
    "end": "120560"
  },
  {
    "text": "to control the events that kick off the",
    "start": "120560",
    "end": "122960"
  },
  {
    "text": "pipeline",
    "start": "122960",
    "end": "124640"
  },
  {
    "text": "the behavior that determines that upon",
    "start": "124640",
    "end": "127040"
  },
  {
    "text": "each change in source control",
    "start": "127040",
    "end": "129119"
  },
  {
    "text": "the pipeline should be triggered is",
    "start": "129119",
    "end": "131440"
  },
  {
    "text": "configured in",
    "start": "131440",
    "end": "132239"
  },
  {
    "text": "amazon event bridge via an event bridge",
    "start": "132239",
    "end": "135360"
  },
  {
    "text": "rule",
    "start": "135360",
    "end": "136480"
  },
  {
    "text": "this is the rule that we will modify",
    "start": "136480",
    "end": "140319"
  },
  {
    "text": "as we can see the target of this rule is",
    "start": "140319",
    "end": "143520"
  },
  {
    "text": "the pipeline directly what we will do is",
    "start": "143520",
    "end": "147599"
  },
  {
    "text": "we will modify the target of the rule to",
    "start": "147599",
    "end": "150319"
  },
  {
    "text": "invoke an",
    "start": "150319",
    "end": "150959"
  },
  {
    "text": "aws lambda function instead of having it",
    "start": "150959",
    "end": "154239"
  },
  {
    "text": "trigger the pipeline directly",
    "start": "154239",
    "end": "157840"
  },
  {
    "text": "with this in place let's take a look at",
    "start": "164720",
    "end": "167040"
  },
  {
    "text": "the code for the.net lambda function",
    "start": "167040",
    "end": "169440"
  },
  {
    "text": "that executes the logic we want i am",
    "start": "169440",
    "end": "172319"
  },
  {
    "text": "using visual studio code and",
    "start": "172319",
    "end": "174319"
  },
  {
    "text": "net core 3.1 although you can also do",
    "start": "174319",
    "end": "177040"
  },
  {
    "text": "this in visual studio",
    "start": "177040",
    "end": "178640"
  },
  {
    "text": "and other versions of the dotnet",
    "start": "178640",
    "end": "180159"
  },
  {
    "text": "framework the first thing this.net core",
    "start": "180159",
    "end": "183200"
  },
  {
    "text": "function will need",
    "start": "183200",
    "end": "184480"
  },
  {
    "text": "is the nuget packages for code pipeline",
    "start": "184480",
    "end": "187040"
  },
  {
    "text": "and code commit",
    "start": "187040",
    "end": "188560"
  },
  {
    "text": "we can add these packages in the cs",
    "start": "188560",
    "end": "190640"
  },
  {
    "text": "approach file",
    "start": "190640",
    "end": "191599"
  },
  {
    "text": "of our lambda.net core function",
    "start": "191599",
    "end": "195040"
  },
  {
    "text": "back in our function let's take a look",
    "start": "195040",
    "end": "197120"
  },
  {
    "text": "at the code to create",
    "start": "197120",
    "end": "198400"
  },
  {
    "text": "our custom logic first we set the values",
    "start": "198400",
    "end": "202080"
  },
  {
    "text": "for the list of files",
    "start": "202080",
    "end": "203440"
  },
  {
    "text": "we want to ignore in case of changes",
    "start": "203440",
    "end": "206640"
  },
  {
    "text": "we set the names of our code commit",
    "start": "206640",
    "end": "209200"
  },
  {
    "text": "repository and pipeline",
    "start": "209200",
    "end": "211599"
  },
  {
    "text": "the function will receive and",
    "start": "211599",
    "end": "213200"
  },
  {
    "text": "automatically deserialize our event",
    "start": "213200",
    "end": "215840"
  },
  {
    "text": "which will contain the old commit id and",
    "start": "215840",
    "end": "218720"
  },
  {
    "text": "the commit id",
    "start": "218720",
    "end": "219599"
  },
  {
    "text": "of the event that triggered the function",
    "start": "219599",
    "end": "222560"
  },
  {
    "text": "with this two ids",
    "start": "222560",
    "end": "224080"
  },
  {
    "text": "we can use the code commit",
    "start": "224080",
    "end": "226760"
  },
  {
    "text": "getdifferencesasync method",
    "start": "226760",
    "end": "228640"
  },
  {
    "text": "to determine what files changed between",
    "start": "228640",
    "end": "231360"
  },
  {
    "text": "the incoming commit",
    "start": "231360",
    "end": "232959"
  },
  {
    "text": "and its parent commit this method",
    "start": "232959",
    "end": "236480"
  },
  {
    "text": "will return a list of differences",
    "start": "236480",
    "end": "238480"
  },
  {
    "text": "between the two commits",
    "start": "238480",
    "end": "240720"
  },
  {
    "text": "we will iterate over the differences and",
    "start": "240720",
    "end": "243200"
  },
  {
    "text": "if any of the files",
    "start": "243200",
    "end": "244480"
  },
  {
    "text": "in the differences is not included in",
    "start": "244480",
    "end": "247200"
  },
  {
    "text": "our list of",
    "start": "247200",
    "end": "247920"
  },
  {
    "text": "files to ignore the pipeline should be",
    "start": "247920",
    "end": "250799"
  },
  {
    "text": "triggered",
    "start": "250799",
    "end": "251920"
  },
  {
    "text": "otherwise the pipeline will not be",
    "start": "251920",
    "end": "254560"
  },
  {
    "text": "triggered",
    "start": "254560",
    "end": "256160"
  },
  {
    "text": "let's go to our asp.net application",
    "start": "256160",
    "end": "259519"
  },
  {
    "text": "and make a change to the readme.md file",
    "start": "259519",
    "end": "262479"
  },
  {
    "text": "and push it",
    "start": "262479",
    "end": "263280"
  },
  {
    "text": "to code commit",
    "start": "263280",
    "end": "269840"
  },
  {
    "text": "back in the code commit ui we can see",
    "start": "272320",
    "end": "275360"
  },
  {
    "text": "that there is",
    "start": "275360",
    "end": "276080"
  },
  {
    "text": "a new commit now let's go over to the",
    "start": "276080",
    "end": "279840"
  },
  {
    "text": "pipeline ui",
    "start": "279840",
    "end": "281360"
  },
  {
    "text": "to see if it has been triggered",
    "start": "281360",
    "end": "285360"
  },
  {
    "text": "as expected since we only made a change",
    "start": "286320",
    "end": "289120"
  },
  {
    "text": "to the readme.md file",
    "start": "289120",
    "end": "291199"
  },
  {
    "text": "the pipeline was not triggered",
    "start": "291199",
    "end": "294800"
  },
  {
    "text": "we can even corroborate this if we go to",
    "start": "294960",
    "end": "297440"
  },
  {
    "text": "the aws",
    "start": "297440",
    "end": "298639"
  },
  {
    "text": "cloudwatch logs for our function",
    "start": "298639",
    "end": "302000"
  },
  {
    "text": "we can see in the logs that the function",
    "start": "302000",
    "end": "304479"
  },
  {
    "text": "was executed",
    "start": "304479",
    "end": "305919"
  },
  {
    "text": "and the returned value was no need to",
    "start": "305919",
    "end": "309120"
  },
  {
    "text": "launch",
    "start": "309120",
    "end": "309600"
  },
  {
    "text": "pipeline",
    "start": "309600",
    "end": "312240"
  },
  {
    "text": "now let's do this same process again but",
    "start": "313199",
    "end": "316400"
  },
  {
    "text": "this time changing another file that's",
    "start": "316400",
    "end": "319280"
  },
  {
    "text": "part of our application",
    "start": "319280",
    "end": "321120"
  },
  {
    "text": "and we will see if the pipeline does get",
    "start": "321120",
    "end": "323600"
  },
  {
    "text": "triggered",
    "start": "323600",
    "end": "324240"
  },
  {
    "text": "this time we will change",
    "start": "324240",
    "end": "327280"
  },
  {
    "text": "our index.cs html file save it",
    "start": "327280",
    "end": "331199"
  },
  {
    "text": "and push it to source control",
    "start": "331199",
    "end": "338479"
  },
  {
    "text": "we can see in the code commit ui that",
    "start": "338479",
    "end": "341199"
  },
  {
    "text": "there is",
    "start": "341199",
    "end": "341759"
  },
  {
    "text": "a new commit",
    "start": "341759",
    "end": "344720"
  },
  {
    "text": "now if we go over to the pipeline ui",
    "start": "347600",
    "end": "351440"
  },
  {
    "text": "we can see that it has indeed been",
    "start": "351440",
    "end": "353759"
  },
  {
    "text": "triggered",
    "start": "353759",
    "end": "356320"
  },
  {
    "text": "we can see in the logs that the function",
    "start": "356639",
    "end": "358960"
  },
  {
    "text": "was executed",
    "start": "358960",
    "end": "360240"
  },
  {
    "text": "and the returned value was pipelined",
    "start": "360240",
    "end": "364840"
  },
  {
    "text": "launched",
    "start": "364840",
    "end": "367840"
  },
  {
    "text": "as you can see it's very easy to use",
    "start": "369919",
    "end": "372319"
  },
  {
    "text": "the.net sdk for code",
    "start": "372319",
    "end": "374319"
  },
  {
    "text": "pipeline and in today's example i showed",
    "start": "374319",
    "end": "377360"
  },
  {
    "text": "you how to invoke a pipeline",
    "start": "377360",
    "end": "379280"
  },
  {
    "text": "from net code but it's just as easy to",
    "start": "379280",
    "end": "381919"
  },
  {
    "text": "use any of the other functions from code",
    "start": "381919",
    "end": "384160"
  },
  {
    "text": "pipeline",
    "start": "384160",
    "end": "384960"
  },
  {
    "text": "such as creating reading deleting or any",
    "start": "384960",
    "end": "388000"
  },
  {
    "text": "other functionality",
    "start": "388000",
    "end": "389280"
  },
  {
    "text": "available as part of the sdk i hope you",
    "start": "389280",
    "end": "392800"
  },
  {
    "text": "enjoyed this video and found it",
    "start": "392800",
    "end": "394479"
  },
  {
    "text": "informative",
    "start": "394479",
    "end": "395520"
  },
  {
    "text": "thank you for watching",
    "start": "395520",
    "end": "404080"
  }
]