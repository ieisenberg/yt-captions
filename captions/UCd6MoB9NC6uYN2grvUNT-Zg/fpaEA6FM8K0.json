[
  {
    "text": "okay so I guess we're going to get started now um welcome to the last day of reinvent I hope you guys were",
    "start": "3959",
    "end": "9960"
  },
  {
    "text": "enjoying it um I know I did um my name is Lauren seagull and I'm going to be",
    "start": "9960",
    "end": "15240"
  },
  {
    "text": "talking about writing JavaScript applications with the AWS SDK um so JavaScript is everywhere it's",
    "start": "15240",
    "end": "24560"
  },
  {
    "text": "in our browsers um it's been in our browsers for almost as long as browsers have existed you're if you're writing a",
    "start": "24560",
    "end": "31320"
  },
  {
    "text": "web app you're probably writing JavaScript almost every day and with um",
    "start": "31320",
    "end": "38160"
  },
  {
    "text": "with with things like no with environments like no. JS we're starting to see JavaScript not only used in the",
    "start": "38160",
    "end": "43520"
  },
  {
    "text": "client side but also being moved into the server side so with a language as",
    "start": "43520",
    "end": "49079"
  },
  {
    "text": "ubiquitous as JavaScript we definitely think it's important to be a important part of the adus ecosystem so last year",
    "start": "49079",
    "end": "56800"
  },
  {
    "text": "we launched a developer preview of the adus SDK for node.js",
    "start": "56800",
    "end": "61920"
  },
  {
    "text": "and um I I think it uh we added a lot of features in La over the last year and we",
    "start": "61920",
    "end": "68600"
  },
  {
    "text": "built a really strong foundation for our JavaScript SDK um we have full service parody which",
    "start": "68600",
    "end": "75520"
  },
  {
    "text": "means we support all features of all uh services in the ad SDK for node.js and",
    "start": "75520",
    "end": "80600"
  },
  {
    "text": "we're continuing to add features at the high at higher level features and and nice features like response pagin",
    "start": "80600",
    "end": "86960"
  },
  {
    "text": "response pagination and uh Waiters that brings us to today so a couple",
    "start": "86960",
    "end": "94280"
  },
  {
    "text": "weeks ago we announced the a SDK for JavaScript that now works in your browser or mobile devices and we're",
    "start": "94280",
    "end": "100640"
  },
  {
    "text": "really excited about the um potential that this new SDK brings for developing",
    "start": "100640",
    "end": "106560"
  },
  {
    "text": "web apps right inside your web browser deploying right to S3 or whatever uh static site you host and being able to",
    "start": "106560",
    "end": "113200"
  },
  {
    "text": "talk right directly to the adabas services uh so enough talking about",
    "start": "113200",
    "end": "120079"
  },
  {
    "text": "let's let's actually see what they're like um I have a couple goals in this talk the first one is to introduce the",
    "start": "120079",
    "end": "126719"
  },
  {
    "text": "Adis SDK for node.js um after we learn about the fundamentals",
    "start": "126719",
    "end": "133040"
  },
  {
    "text": "of how the SDK works I'll talk about the SDK for JavaScript in the browser and some of the differences between the two",
    "start": "133040",
    "end": "139920"
  },
  {
    "text": "and finally we'll see how you can actually write a two-tiered web application using nothing but JavaScript",
    "start": "139920",
    "end": "145440"
  },
  {
    "text": "HTML and CSS uh with the new SDK",
    "start": "145440",
    "end": "150920"
  },
  {
    "text": "so I'm going to start with the ads SDK for node.js and uh give you a little bit of overview",
    "start": "151120",
    "end": "156879"
  },
  {
    "text": "about the actual SDK we have full service coverage which means we support over 30 ads Services um",
    "start": "156879",
    "end": "164360"
  },
  {
    "text": "there's a broad spectrum of of of services that you can use in the SDK we have extensible clients which",
    "start": "164360",
    "end": "171840"
  },
  {
    "text": "means you can customize uh you can really dig deep and customize a large part of how your requests get routed",
    "start": "171840",
    "end": "177519"
  },
  {
    "text": "through to um to services so if you need to customized things there's a really good um event based architecture that",
    "start": "177519",
    "end": "184319"
  },
  {
    "text": "I'm going to talk about we also use standard no. JS idioms which means if you're using streams",
    "start": "184319",
    "end": "190480"
  },
  {
    "text": "event emitters domains um we support all of those things and most importantly to me uh",
    "start": "190480",
    "end": "197920"
  },
  {
    "text": "we're it's completely open source and available on GitHub you can go to the GitHub uh repo you can submit poll",
    "start": "197920",
    "end": "205200"
  },
  {
    "text": "requests you can uh make feature suggestions you can report issues we love to get um we love to get all of",
    "start": "205200",
    "end": "210480"
  },
  {
    "text": "those things so let's get started with the ads SDK for nodejs uh the first step is to",
    "start": "210480",
    "end": "218760"
  },
  {
    "text": "install the SDK and that's pretty easy with npm all you have to do is npm install ads",
    "start": "218760",
    "end": "224439"
  },
  {
    "text": "SDK once you've finished installing it and it's uh loaded up you can load up node and just require the SDK using a",
    "start": "224439",
    "end": "233159"
  },
  {
    "text": "standard module require so you've installed and loaded the SDK now you just need to now you",
    "start": "233159",
    "end": "239360"
  },
  {
    "text": "want to start using it you need to do a little bit of configuration before you before you can use it and that's done uh",
    "start": "239360",
    "end": "244920"
  },
  {
    "text": "through the ads. config object and you mostly just need to configure credentials and your region to use the",
    "start": "244920",
    "end": "251799"
  },
  {
    "text": "SDK you can also configure some extras and we'll talk about how that works so configuring",
    "start": "251799",
    "end": "259160"
  },
  {
    "text": "credentials um basically there's a couple ways you can config configure credentials the first one is you can use",
    "start": "259160",
    "end": "265759"
  },
  {
    "text": "IM rolls for ec2 instances if you're using ec2 already to host your application I this is the best way to um set up your",
    "start": "265759",
    "end": "274479"
  },
  {
    "text": "application you can also use environment variables if you um are not using E2 or",
    "start": "274479",
    "end": "279800"
  },
  {
    "text": "have some other requirements and finally you can store your credentials in the file system",
    "start": "279800",
    "end": "286199"
  },
  {
    "text": "preferably outside of source control um and that's because you should not hardcode your credentials um uh unless",
    "start": "286199",
    "end": "294000"
  },
  {
    "text": "so there there is one scenario where you will hard Cod credentials I'll talk about this when we when we do our demo um and if you do hard code credent your",
    "start": "294000",
    "end": "300639"
  },
  {
    "text": "credentials make sure that you have readon credentials and they're scoped with a policy to specific resources so",
    "start": "300639",
    "end": "306560"
  },
  {
    "text": "that you make sure that um people don't access things that they that they",
    "start": "306560",
    "end": "312000"
  },
  {
    "text": "shouldn't so like I said if you're using IM rolls for ec2 instances all all of this stuff is free it's basically a zero",
    "start": "312240",
    "end": "318720"
  },
  {
    "text": "configuration setup you don't have to do any configuration when you load your uh when when you load the SDK on the ec2",
    "start": "318720",
    "end": "325360"
  },
  {
    "text": "instance if you're using environment variables these are some of the environment variables you can use to set up the SDK that's the access key at the",
    "start": "325360",
    "end": "332400"
  },
  {
    "text": "top um you can get the secret access key and you can use the you can also set the region as",
    "start": "332400",
    "end": "339639"
  },
  {
    "text": "well so configuring other stuff um if you're going to do it programmatically",
    "start": "339639",
    "end": "345600"
  },
  {
    "text": "this is how you can configure the SDK you basically call ads. config do update",
    "start": "345600",
    "end": "351160"
  },
  {
    "text": "or you can just set the config object it's a standard hash it's a standard uh object uh and so you can add in the",
    "start": "351160",
    "end": "357560"
  },
  {
    "text": "region you can add in Max retry count the default is three you can add in a logger which will show you some of some",
    "start": "357560",
    "end": "363120"
  },
  {
    "text": "of the requests that go through and you can uh check the documentation for more options uh to",
    "start": "363120",
    "end": "369560"
  },
  {
    "text": "set so um you can also configure from a file a Json file if you want to configure if you have your settings",
    "start": "369560",
    "end": "375599"
  },
  {
    "text": "inside of a file you can use that method to uh load them into your SDK keep in",
    "start": "375599",
    "end": "381759"
  },
  {
    "text": "mind that if you're loading credentials through this Json object that you should probably keep them out of source control as",
    "start": "381759",
    "end": "388280"
  },
  {
    "text": "well so you've configured the SDK and you want to use it let's talk about how you can work with",
    "start": "388280",
    "end": "394440"
  },
  {
    "text": "services so the SDK comes bundled with a bunch of service objects and they're",
    "start": "394440",
    "end": "399840"
  },
  {
    "text": "effectively classes that you can use so things like ads. S3 ads. ec2 Dynamo DB",
    "start": "399840",
    "end": "407319"
  },
  {
    "text": "sqs SNS and uh more to construct a service object you",
    "start": "407319",
    "end": "414160"
  },
  {
    "text": "basically just do new uh EC a. ec2 and you can pass in optional configuration",
    "start": "414160",
    "end": "420479"
  },
  {
    "text": "if you pass an optional configuration that will be specific to the service object that you've constructed and uh it",
    "start": "420479",
    "end": "426400"
  },
  {
    "text": "will inherit the global configuration from the adest St config object you can call an operation once",
    "start": "426400",
    "end": "433000"
  },
  {
    "text": "you have that service object you just do e2. describe instances with this optional parameters and an optional call",
    "start": "433000",
    "end": "439840"
  },
  {
    "text": "back if you want to be notified when the request is complete the Callback itself is a",
    "start": "439840",
    "end": "445919"
  },
  {
    "text": "standard node error data callback so error First Data after um if the error",
    "start": "445919",
    "end": "451160"
  },
  {
    "text": "is null it will it won't if there if there's no error there won't it will be null if you have data the data will be",
    "start": "451160",
    "end": "456639"
  },
  {
    "text": "in the data so if you don't use the Callback form you can also just get a request",
    "start": "456639",
    "end": "462919"
  },
  {
    "text": "object and this gets a request object that hasn't been sent um and you could just pass in parameters and now you have",
    "start": "462919",
    "end": "468680"
  },
  {
    "text": "this request object I'm going to talk a little bit about how the request object works because um it it enables a lot of",
    "start": "468680",
    "end": "474680"
  },
  {
    "text": "more more of the advanced features that you can use in the SDK if you if you use the request object itself",
    "start": "474680",
    "end": "480759"
  },
  {
    "text": "you can send the request object uh by just calling the send and you can pass a call back here as well um you can also",
    "start": "480759",
    "end": "488360"
  },
  {
    "text": "add listeners to the request object and this is our venting system that I'll talk about something like on complete",
    "start": "488360",
    "end": "494319"
  },
  {
    "text": "and you will have um event that a call back that gets fired on",
    "start": "494319",
    "end": "499919"
  },
  {
    "text": "complete so uh the SDK is made up of requests and responses and um this is a",
    "start": "500400",
    "end": "506599"
  },
  {
    "text": "fundamental architecture in the SDK and I'll talk a little bit about how that works basically you send an ads request",
    "start": "506599",
    "end": "514080"
  },
  {
    "text": "you get an ads response to go a little more deeply into",
    "start": "514080",
    "end": "519320"
  },
  {
    "text": "how it works you have we have a request life cycle um and basically what happens is you have an operation you call an",
    "start": "519320",
    "end": "526360"
  },
  {
    "text": "operation and it returns to you uh a. request object you can send the request object",
    "start": "526360",
    "end": "533800"
  },
  {
    "text": "to you know send it off to the server this effectively starts our event life",
    "start": "533800",
    "end": "539160"
  },
  {
    "text": "cycle when we start emitting events on uh throughout the process so we will emit event when we build the the request we",
    "start": "539160",
    "end": "545320"
  },
  {
    "text": "will emit event when we send it um and we will emit events when we complete",
    "start": "545320",
    "end": "550880"
  },
  {
    "text": "it if you have a call if you did pass a call back through you will that this is at the other end right there is when the",
    "start": "550880",
    "end": "557399"
  },
  {
    "text": "call back will actually get triggered um and that returns an ads. response",
    "start": "557399",
    "end": "565160"
  },
  {
    "text": "object so the adab. request object has a couple of properties on it we looked at send and we looked at uh the on event it",
    "start": "565160",
    "end": "573680"
  },
  {
    "text": "also has things like the HTP request object so if uh if property if you want to investigate some of the um low-level",
    "start": "573680",
    "end": "582120"
  },
  {
    "text": "HTTP details of your request let's say you sent a request and you got an error",
    "start": "582120",
    "end": "587519"
  },
  {
    "text": "and you want to figure out if the parameter actually got sent through you can investigate the HTP request object",
    "start": "587519",
    "end": "592880"
  },
  {
    "text": "and see what the headers we set up were what the parameters we set sent through are um there's also more in the",
    "start": "592880",
    "end": "600120"
  },
  {
    "text": "documentation if you look at the adsa request object in the docs so similarly response has a bunch",
    "start": "600120",
    "end": "606959"
  },
  {
    "text": "of properties on it uh there's fewer on this one mostly the ones you are going to be interested in are the arror",
    "start": "606959",
    "end": "612920"
  },
  {
    "text": "property and the DAT property and those are the error and data properties that get passed in the",
    "start": "612920",
    "end": "619040"
  },
  {
    "text": "Callback we also have things like the retry count if you're interested in how many times uh a request was retried U",
    "start": "619040",
    "end": "625320"
  },
  {
    "text": "before it succeeded there's also similarly the lowlevel HTP response",
    "start": "625320",
    "end": "630760"
  },
  {
    "text": "property that you can dig through what the actual what the server actually sent back and again there's uh more there's",
    "start": "630760",
    "end": "637760"
  },
  {
    "text": "more you can look at in the documentation so to recap you send an",
    "start": "637760",
    "end": "643360"
  },
  {
    "text": "ads request you get an uh we emit some life cycle events and we call back with the adabas",
    "start": "643360",
    "end": "649639"
  },
  {
    "text": "response so that's the um that's how the request architecture Works uh it's important to go over this just because",
    "start": "649639",
    "end": "655600"
  },
  {
    "text": "we're going to look at some of the features of the SDK now um and a lot of these features rely on this request",
    "start": "655600",
    "end": "662360"
  },
  {
    "text": "response um architecture so some of the SDK features",
    "start": "662360",
    "end": "667800"
  },
  {
    "text": "that we have that we've added over the last year and that I think are really excited um the global configuration object we just talked about there's also",
    "start": "667800",
    "end": "675480"
  },
  {
    "text": "bound parameters which allow you to um send a send a parameter on each",
    "start": "675480",
    "end": "681000"
  },
  {
    "text": "operation that you call for a service object we'll look at that in a second we have response pagination uh event listeners API",
    "start": "681000",
    "end": "689000"
  },
  {
    "text": "version locking and uh secure credential management so I'm going to jump into",
    "start": "689000",
    "end": "694800"
  },
  {
    "text": "rather than talk about all these things CU talking is boring let's just actually load up a a a terminal and start",
    "start": "694800",
    "end": "703560"
  },
  {
    "text": "coding so I have a terminal here um and let's uh fire up node to just get",
    "start": "708320",
    "end": "716639"
  },
  {
    "text": "inside and the first thing we're going to need to do is require the SDK so let's require the",
    "start": "716639",
    "end": "723800"
  },
  {
    "text": "SDK so now we need to configure what we would typically do is we would configure a region um I've exported my region to",
    "start": "725880",
    "end": "733000"
  },
  {
    "text": "my environment in my on my desk on my de development desktop here or laptop so I",
    "start": "733000",
    "end": "738839"
  },
  {
    "text": "have my environment set up and I also have my um credentials in my configuration",
    "start": "738839",
    "end": "744399"
  },
  {
    "text": "here um so uh before we go any further I just",
    "start": "744399",
    "end": "750720"
  },
  {
    "text": "want to set up a logger here this is going to help us see what's going in and out of of the of you know our requests",
    "start": "750720",
    "end": "757240"
  },
  {
    "text": "so we're going to just set it to process. standard out you can set it to anything that accepts write or or um",
    "start": "757240",
    "end": "764880"
  },
  {
    "text": "print and so now let's just uh let's just create an S3 object and um so new",
    "start": "765720",
    "end": "772480"
  },
  {
    "text": "ads. S3 so we have an S3",
    "start": "772480",
    "end": "777600"
  },
  {
    "text": "object and let's send a simple list buckets request to the",
    "start": "777600",
    "end": "784920"
  },
  {
    "text": "server so response equals s3. list buckets and we'll send it I could use",
    "start": "784920",
    "end": "792160"
  },
  {
    "text": "the call back here but um since we're going to be waiting for this come back it's easier in the reppel just to do do",
    "start": "792160",
    "end": "797880"
  },
  {
    "text": "send and we'll we'll see what happens so uh I'm just going to add null here so it doesn't print a bunch of stuff after so",
    "start": "797880",
    "end": "803920"
  },
  {
    "text": "you'll see eventually this comes back we got a bunch of buckets and now we have the response object that we can do",
    "start": "803920",
    "end": "809240"
  },
  {
    "text": "response.data to see our data um and we can do response. error if",
    "start": "809240",
    "end": "815800"
  },
  {
    "text": "there is one there isn't any um but if we wanted we can check so that's how you",
    "start": "815800",
    "end": "820959"
  },
  {
    "text": "B use the SDK at a basic level let's look at one of the features I I like a lot which is bound",
    "start": "820959",
    "end": "827120"
  },
  {
    "text": "parameters um when you're working with Services you're often sending a lot of the same uh parameters through so if",
    "start": "827120",
    "end": "833279"
  },
  {
    "text": "you're working with S3 on an on an object you're sending the same bucket through every single request um the s K",
    "start": "833279",
    "end": "839399"
  },
  {
    "text": "has a feature called bound parameters that lets you effectively set that parameter on the object itself rather than setting it through every operation",
    "start": "839399",
    "end": "846399"
  },
  {
    "text": "so let's look at how that works I'm going to create a new S3 object I'm going to call S3 bucket I'm going to do",
    "start": "846399",
    "end": "851959"
  },
  {
    "text": "new ads. S3 and I'm going to bind a parameter here you pass the params",
    "start": "851959",
    "end": "857759"
  },
  {
    "text": "object uh parameter at the Constructor and I'm going to bind it to a",
    "start": "857759",
    "end": "864079"
  },
  {
    "text": "bucket so I have a bucket this is the operation I called just so you could see it um so I call that operation I have an",
    "start": "865839",
    "end": "873120"
  },
  {
    "text": "S3 bucket object and you can think of this S3 bucket sort of like a resource representing the bucket because I can",
    "start": "873120",
    "end": "878160"
  },
  {
    "text": "actually just call list objects and I don't need to actually pass the bucket anymore um so list objects I can",
    "start": "878160",
    "end": "886480"
  },
  {
    "text": "response.data to get the data um sorry I didn't assign",
    "start": "886480",
    "end": "892040"
  },
  {
    "text": "it and then all my objects are there um I can also get objects on that S3 bucket",
    "start": "892560",
    "end": "900040"
  },
  {
    "text": "so get object and all I have to do is pass a key I don't have to pass the bucket so key let's get key.txt",
    "start": "900040",
    "end": "906959"
  },
  {
    "text": "do",
    "start": "906959",
    "end": "909959"
  },
  {
    "text": "send and I can just grab the body and then turn it into a string it's a buffer",
    "start": "913120",
    "end": "920079"
  },
  {
    "text": "by default and we should get our contents so that's how you can do uh",
    "start": "920079",
    "end": "927160"
  },
  {
    "text": "bound parameters and you can bind parameters to any service and um if you have a bound",
    "start": "927160",
    "end": "932480"
  },
  {
    "text": "parameter on a service object and it doesn't um and the operation doesn't actually respond to this uh to that",
    "start": "932480",
    "end": "939639"
  },
  {
    "text": "parameter it'll basically be ignored so I can even call list buckets which is something you wouldn't necessarily call",
    "start": "939639",
    "end": "944680"
  },
  {
    "text": "on a on a bucket resource but I could still call this operation um so so you can still call",
    "start": "944680",
    "end": "950800"
  },
  {
    "text": "that operation so let's look at another feature that I like a lot which is",
    "start": "950800",
    "end": "955839"
  },
  {
    "text": "response pagination so we just saw um we just saw bound parameters let's look",
    "start": "955839",
    "end": "961319"
  },
  {
    "text": "at another feature um sometimes when you're using features uh services like S3 or Dynamo DB you'll",
    "start": "961319",
    "end": "968519"
  },
  {
    "text": "send requests that give you a lot of data in the response and sometimes they'll split that response up over multiple actual calls so you'll have to",
    "start": "968519",
    "end": "975920"
  },
  {
    "text": "page effectively the SDK comes with a feature called response pagination that",
    "start": "975920",
    "end": "981639"
  },
  {
    "text": "simplifies a lot of that for you and handles all the pagination on your behalf so uh let's create a Dynamo DB",
    "start": "981639",
    "end": "989079"
  },
  {
    "text": "table object so I'm going to similarly to the way we created an S3 bucket I'm going to create a table object that represents a table in my Dynamo DB",
    "start": "989079",
    "end": "995800"
  },
  {
    "text": "resource here and I will bind a parameter to our sessions",
    "start": "995800",
    "end": "1004399"
  },
  {
    "text": "table",
    "start": "1005319",
    "end": "1008319"
  },
  {
    "text": "oops and um let let us scan over this table so I have a bunch of data in this",
    "start": "1010920",
    "end": "1016839"
  },
  {
    "text": "table and let's run a scan operation on this table and let's limit it by 10 just so we can get a better understanding of",
    "start": "1016839",
    "end": "1022399"
  },
  {
    "text": "of how pagination works and I'll send it um this is going to return uh one res",
    "start": "1022399",
    "end": "1031079"
  },
  {
    "text": "one set of the uh of the results so if I look at the response. data I'll only get",
    "start": "1031079",
    "end": "1036480"
  },
  {
    "text": "10 items and this is typically how you would use it in in a normal case but",
    "start": "1036480",
    "end": "1041520"
  },
  {
    "text": "sometimes there's more data to get so the SDK has on the response object the SDK has um a method called has next page",
    "start": "1041520",
    "end": "1049400"
  },
  {
    "text": "that I can call and in this case it says there are more pages to get so there there is there are next there are new",
    "start": "1049400",
    "end": "1055520"
  },
  {
    "text": "pages to get I can call next page to actually return a new request object",
    "start": "1055520",
    "end": "1061039"
  },
  {
    "text": "that I can then send so this is a request object so let's um let's send",
    "start": "1061039",
    "end": "1066320"
  },
  {
    "text": "this and assign it to our new response object and this will um if you look at the logger output you'll see that it's",
    "start": "1066320",
    "end": "1073400"
  },
  {
    "text": "not only sending a limit and a table name but it's now also sending our exclusive start key and that is the exclusive start key ke for the next set",
    "start": "1073400",
    "end": "1079559"
  },
  {
    "text": "of data to actually grab so if we look at our data we have the next set of data",
    "start": "1079559",
    "end": "1085080"
  },
  {
    "text": "I could continue doing this um over the set and we continue getting more data",
    "start": "1085080",
    "end": "1090240"
  },
  {
    "text": "but uh you could you could do this has next page next page Loop you're on your own but the SDK also has a helper method",
    "start": "1090240",
    "end": "1097200"
  },
  {
    "text": "that lets you that basically does it for you so let's look at that so I'm going to basically count all the pages in this",
    "start": "1097200",
    "end": "1103159"
  },
  {
    "text": "in this um table and so I'll um I'll do this",
    "start": "1103159",
    "end": "1109320"
  },
  {
    "text": "Dynamo DB do sorry table. scan limit",
    "start": "1109320",
    "end": "1115640"
  },
  {
    "text": "10 and so this is the each page method which is available on the request object and the each page method basically does",
    "start": "1116200",
    "end": "1122720"
  },
  {
    "text": "this has next page next page loop on your behalf so um each page takes an error",
    "start": "1122720",
    "end": "1129200"
  },
  {
    "text": "data call back so that is going to be filled with each page of",
    "start": "1129200",
    "end": "1134799"
  },
  {
    "text": "results if I have data if basically if there if there are no more pages dat will be will be null so we'll check if",
    "start": "1134799",
    "end": "1141960"
  },
  {
    "text": "if we have Pages here and I'll log the page so",
    "start": "1141960",
    "end": "1148520"
  },
  {
    "text": "page and I'll also log the um data. items. length to see how many items we",
    "start": "1149480",
    "end": "1155480"
  },
  {
    "text": "have in each page so when I send this off you're",
    "start": "1155480",
    "end": "1162120"
  },
  {
    "text": "going to see um a couple of requests come through really quick in the logger and each time it'll show um the page",
    "start": "1162120",
    "end": "1168039"
  },
  {
    "text": "number and the number of items that are in uh each page so let's do that so you",
    "start": "1168039",
    "end": "1173799"
  },
  {
    "text": "can see it running through and I have about 11 pages there and so it scanned and ran through all",
    "start": "1173799",
    "end": "1180559"
  },
  {
    "text": "the pages for me so I really like that feature I think it's really useful for for scanning over",
    "start": "1180559",
    "end": "1185640"
  },
  {
    "text": "large items large large collections of data so that's uh response pagination",
    "start": "1185640",
    "end": "1191679"
  },
  {
    "text": "let's look at another feature uh event listeners so I talked a little bit about how you can hook events into your the",
    "start": "1191679",
    "end": "1197440"
  },
  {
    "text": "SDK um and there are some events that you",
    "start": "1197440",
    "end": "1202679"
  },
  {
    "text": "might want to capture so um rather than using a call back if you're if you're using the same call back on multiple",
    "start": "1202679",
    "end": "1208960"
  },
  {
    "text": "objects you can actually just hook up an event to those call backs so let's look at how events work uh I'm going",
    "start": "1208960",
    "end": "1215440"
  },
  {
    "text": "to go back to our S3 bucket object here and I'm going to list",
    "start": "1215440",
    "end": "1222440"
  },
  {
    "text": "objects and I'm just going to I'm not going to send it this time I'm just going to get the request",
    "start": "1225400",
    "end": "1230760"
  },
  {
    "text": "object so here we have a request object that represents um the a request to list",
    "start": "1230760",
    "end": "1236720"
  },
  {
    "text": "objects it hasn't been sent yet and I'm before I send it I'm going to hook up a success event to",
    "start": "1236720",
    "end": "1243200"
  },
  {
    "text": "this um and this is going to give me back my response object and I'm basically just I'm going to use this I'm",
    "start": "1243200",
    "end": "1248720"
  },
  {
    "text": "going to use this event just to log the data that comes through so log",
    "start": "1248720",
    "end": "1254200"
  },
  {
    "text": "response.data so we've added that I'll show you this again we've added a success event that just logs the data",
    "start": "1256960",
    "end": "1263880"
  },
  {
    "text": "and now I can go ahead and send my request and that uh event should should",
    "start": "1263880",
    "end": "1269400"
  },
  {
    "text": "actually print the data over there so I can hook up events to",
    "start": "1269400",
    "end": "1274679"
  },
  {
    "text": "specific requests but if you're sending a lot of requests uh that use the same events you it might be inconvenient to",
    "start": "1274679",
    "end": "1281640"
  },
  {
    "text": "actually hook them up manually to every single event so the SDK also has a global events object and this events",
    "start": "1281640",
    "end": "1288760"
  },
  {
    "text": "object uh is is used every time you construct a new service object we copy",
    "start": "1288760",
    "end": "1294799"
  },
  {
    "text": "in all the events from the global events object the same way we do from configuration so let's go ahead and",
    "start": "1294799",
    "end": "1300400"
  },
  {
    "text": "attach an event globally so we'll do the exact same thing that we did before but this time we'll do it on the global",
    "start": "1300400",
    "end": "1306640"
  },
  {
    "text": "events object and we will log",
    "start": "1306640",
    "end": "1311640"
  },
  {
    "text": "response.data and now we've hooked that up one thing we will have to do we will have to uh recreate the S3 object",
    "start": "1311840",
    "end": "1318640"
  },
  {
    "text": "because it only happens when you create a new object that the events get pulled in from the global events so we'll we'll",
    "start": "1318640",
    "end": "1323960"
  },
  {
    "text": "basically just recreate our S3 object U let's just call it",
    "start": "1323960",
    "end": "1330480"
  },
  {
    "text": "S3 and I will list buckets and you'll see once I send this",
    "start": "1333559",
    "end": "1339120"
  },
  {
    "text": "request uh it will also log because it has all the um so it automatically logged all the",
    "start": "1339120",
    "end": "1346240"
  },
  {
    "text": "data I'm going to go ahead and clear clear out the event so you can actually just uh clear out all so this is a",
    "start": "1346240",
    "end": "1354760"
  },
  {
    "text": "standard event emitter object so it's uses a standard Vitter interface so I can remove all",
    "start": "1354760",
    "end": "1361720"
  },
  {
    "text": "listeners and that gets rid of the event so so when we continue this we're not going to see more more logging",
    "start": "1363960",
    "end": "1369679"
  },
  {
    "text": "information um the last feature I want to talk about is credential management so I talked a",
    "start": "1369679",
    "end": "1376440"
  },
  {
    "text": "bit about how you can manage credentials properly in your application let's look at some of the helpers that we added uh",
    "start": "1376440",
    "end": "1382960"
  },
  {
    "text": "to make that easier so you can configure credentials",
    "start": "1382960",
    "end": "1388159"
  },
  {
    "text": "by if you were to hard code this and again I don't recommend you do this but you can configure credentials by setting an access key ID um Etc in the",
    "start": "1388159",
    "end": "1396279"
  },
  {
    "text": "credentials uh property of config but we also have a helper method",
    "start": "1396279",
    "end": "1402200"
  },
  {
    "text": "called AWS do temporary credentials and this object fetches temporary",
    "start": "1402200",
    "end": "1408840"
  },
  {
    "text": "credentials uh from from IM and STS so that you can so that you can use temporary credentials that will",
    "start": "1408840",
    "end": "1415039"
  },
  {
    "text": "eventually expire after a short period of time it's uh pretty useful to use",
    "start": "1415039",
    "end": "1420440"
  },
  {
    "text": "this because um when you use this kind of thing uh if your keys do ever get",
    "start": "1420440",
    "end": "1426120"
  },
  {
    "text": "leaked you will have a much smaller blast radius of damage because those keys will expire quickly and you can",
    "start": "1426120",
    "end": "1432279"
  },
  {
    "text": "automatically expire them so let's uh set this so that set our",
    "start": "1432279",
    "end": "1440279"
  },
  {
    "text": "temporary credentials that all we have to do to configure temporary credentials it's going to seed the temporary credentials with our Master credentials",
    "start": "1440279",
    "end": "1446520"
  },
  {
    "text": "so it uses the master credentials to get temporary credentials that's already that's all set up for us we don't have to do that um so now let's use these",
    "start": "1446520",
    "end": "1453799"
  },
  {
    "text": "temporary credentials again because we've configured it globally we have to recreate our S3 object so let's create a",
    "start": "1453799",
    "end": "1458919"
  },
  {
    "text": "new S3 object and we have a new S3 object that",
    "start": "1458919",
    "end": "1464480"
  },
  {
    "text": "has that temporary credential set up the cool thing about temporary credentials and all the credential helpers that we",
    "start": "1464480",
    "end": "1469799"
  },
  {
    "text": "have is that they run lazily so they won't actually go and get credentials until you've until you've actually sent",
    "start": "1469799",
    "end": "1475440"
  },
  {
    "text": "out an operation uh made an operation call so I'm going to list buckets here",
    "start": "1475440",
    "end": "1481440"
  },
  {
    "text": "and you're going to see when I send it it's not only going to call out to S3 it's also going to do a pre-flight",
    "start": "1481440",
    "end": "1486799"
  },
  {
    "text": "request to STS to actually get credentials so uh when I run this you're going to see STS to get session token",
    "start": "1486799",
    "end": "1493919"
  },
  {
    "text": "and then list buckets from S3 so so that uh that's a bunch of",
    "start": "1493919",
    "end": "1499760"
  },
  {
    "text": "features in the SDK that you can use uh I'm going to jump back and we're going to talk about some more fun",
    "start": "1499760",
    "end": "1507520"
  },
  {
    "text": "stuff specifically the Ada SDK for JavaScript in the",
    "start": "1507880",
    "end": "1512960"
  },
  {
    "text": "browser so the SDK for JavaScript in the browser is something we've been building up over the last year we use the the",
    "start": "1512960",
    "end": "1520080"
  },
  {
    "text": "foundation of the SDK for node.js to build up this SDK um we're currently in a developer",
    "start": "1520080",
    "end": "1526840"
  },
  {
    "text": "preview and we're definitely looking for feedback so as I pointed out to the GitHub repo earlier you can go onto the",
    "start": "1526840",
    "end": "1532240"
  },
  {
    "text": "GitHub repository um and submit feedback feature suggestions uh issues",
    "start": "1532240",
    "end": "1538440"
  },
  {
    "text": "documentation fixes poll requests to install the SDK if you're",
    "start": "1538440",
    "end": "1544520"
  },
  {
    "text": "using in a browser you just have to use a script tag um just use script Source um there it's it's also in our guide",
    "start": "1544520",
    "end": "1551120"
  },
  {
    "text": "documentation so if you go to um the guides it will show you how to set it",
    "start": "1551120",
    "end": "1556440"
  },
  {
    "text": "up we currently support five Services uh we support Amazon S3 Amazon Dynamo DB",
    "start": "1556440",
    "end": "1563520"
  },
  {
    "text": "sqs SNS and STS we have support for all modern",
    "start": "1563520",
    "end": "1569399"
  },
  {
    "text": "browsers from IE to Firefox to um Opera Safari even Android mobile um and other",
    "start": "1569399",
    "end": "1576000"
  },
  {
    "text": "mobile browsers and the coolest part about this is that if you were paying attention",
    "start": "1576000",
    "end": "1582360"
  },
  {
    "text": "just before if you've been using the node SDK over the last year you already know how to use the browser SDK it's",
    "start": "1582360",
    "end": "1587799"
  },
  {
    "text": "this it's the exact same code base the only thing that that differs is how you configure the the SDK so um",
    "start": "1587799",
    "end": "1595440"
  },
  {
    "text": "configuration configuring credentials is is a little different because you're not using ec2 and um we're also inside a",
    "start": "1595440",
    "end": "1603279"
  },
  {
    "text": "two-tier web application so when you're inside of a two-tier web application you don't have",
    "start": "1603279",
    "end": "1609279"
  },
  {
    "text": "anywhere to hide your secret keys and so you can't just put your secret Keys directly in your uh in your application",
    "start": "1609279",
    "end": "1615799"
  },
  {
    "text": "and definitely don't put your secret key in your in your application I can't stress that enough",
    "start": "1615799",
    "end": "1621799"
  },
  {
    "text": "um so let's talk a little bit about the difference between two-tier and and and a traditional architectures because I",
    "start": "1621799",
    "end": "1628399"
  },
  {
    "text": "think it's important to touch on how um how Javas how JavaScript in the browser is is is a very different way to develop",
    "start": "1628399",
    "end": "1636080"
  },
  {
    "text": "applications and and can be very powerful so a traditional web",
    "start": "1636080",
    "end": "1641279"
  },
  {
    "text": "application architecture you have um you have your clients on the left",
    "start": "1641279",
    "end": "1646360"
  },
  {
    "text": "there and they're talking to your back end if you're using node.js it's probably a node.js backend or it could",
    "start": "1646360",
    "end": "1651919"
  },
  {
    "text": "be a Java Ruby or something else um and your backend ends up talking to your",
    "start": "1651919",
    "end": "1657799"
  },
  {
    "text": "services and then gets the response back and then passes it back to your client so that's great but with the",
    "start": "1657799",
    "end": "1665320"
  },
  {
    "text": "two-tier web application we can completely get rid of the middle tier and talk directly to the services so you",
    "start": "1665320",
    "end": "1672200"
  },
  {
    "text": "can talk your clients now move directly into the browser all the code is sitting inside your browser and you talk",
    "start": "1672200",
    "end": "1677600"
  },
  {
    "text": "directly to the services that you want there are a lot of benefits to this",
    "start": "1677600",
    "end": "1684120"
  },
  {
    "text": "the first one is you have fewer moving Parts which means there are fewer things that can break because you don't have a",
    "start": "1684120",
    "end": "1691159"
  },
  {
    "text": "a middle tier sitting between your application that can U mess up you have you you just have your code sitting in",
    "start": "1691159",
    "end": "1696320"
  },
  {
    "text": "your client because you have move fewer moving Parts it also means that there's",
    "start": "1696320",
    "end": "1702200"
  },
  {
    "text": "less code to write which means you can prototype much quicker um and deploying applications is also much",
    "start": "1702200",
    "end": "1708799"
  },
  {
    "text": "easier and speaking of deploying all you have is a static application you just have static files",
    "start": "1708799",
    "end": "1715360"
  },
  {
    "text": "so deploying is really as simple as sending stuff up to Amazon S3 or whatever static host you're",
    "start": "1715360",
    "end": "1720880"
  },
  {
    "text": "using which means you can actually host a fully Dynamic application for literally pennies a month and that's",
    "start": "1720880",
    "end": "1727880"
  },
  {
    "text": "really powerful so let's talk about some application ideas uh there's a lot of",
    "start": "1727880",
    "end": "1734519"
  },
  {
    "text": "really cool things you can do with the SD and I think it opens up a completely new way to think about the way we develop web",
    "start": "1734519",
    "end": "1740000"
  },
  {
    "text": "applications so a couple of things you can do with the SDK writing for software so people can",
    "start": "1740000",
    "end": "1746440"
  },
  {
    "text": "communicate with each other over Forum similarly BL a Blog commenting service would be uh easy uh pretty easy to do",
    "start": "1746440",
    "end": "1753399"
  },
  {
    "text": "with the SDK you can you you can write a blogging platform similarly that also accepts you",
    "start": "1753399",
    "end": "1760039"
  },
  {
    "text": "accepts posts from authors if you're writing Chrome extensions or Firefox extensions is a",
    "start": "1760039",
    "end": "1766080"
  },
  {
    "text": "great way to use the SDK uh you can talk directly to your to Dynamo DB to store",
    "start": "1766080",
    "end": "1771120"
  },
  {
    "text": "large amounts of data um or S3 to store files similarly if you're writing win RT",
    "start": "1771120",
    "end": "1778000"
  },
  {
    "text": "or metro style applications you can write applications that um run locally on on a desktop computer that talk",
    "start": "1778000",
    "end": "1784360"
  },
  {
    "text": "directly to S3 without having a middle tier and if you are writing mobile",
    "start": "1784360",
    "end": "1790159"
  },
  {
    "text": "applications you have the same sort of criteria you can write almost any mobile application running locally inside of a",
    "start": "1790159",
    "end": "1796760"
  },
  {
    "text": "browser on the the client device so let's start let's let's go",
    "start": "1796760",
    "end": "1803440"
  },
  {
    "text": "let's jump into uh web application that I wrote using the SDK and nothing but HTML CSS and",
    "start": "1803440",
    "end": "1811039"
  },
  {
    "text": "JavaScript I'll be demoing a simple blog application with content stored in Dynamo DB and your assets stored in",
    "start": "1811039",
    "end": "1818519"
  },
  {
    "text": "Amazon S3 so I'm going to pop this back open to the demo here",
    "start": "1818519",
    "end": "1826440"
  },
  {
    "text": "so I wrote a little sample application here and it's available on GitHub I'll show you the link here uh ads Labs is",
    "start": "1836519",
    "end": "1844480"
  },
  {
    "text": "our repo for all our all our cool projects that we write and you can go to the reinvent 2013 JS blog demo I'll give",
    "start": "1844480",
    "end": "1852360"
  },
  {
    "text": "you some time to look at that um",
    "start": "1852360",
    "end": "1858880"
  },
  {
    "text": "so I have a bunch of code here and we'll we'll just do a quick run through of the code just to see what it looks",
    "start": "1858880",
    "end": "1865399"
  },
  {
    "text": "like this is the skeleton of my application this is the only HTML I needed to write to make my application",
    "start": "1865399",
    "end": "1870720"
  },
  {
    "text": "work um it has a bunch of UI it basically just controls the UI all the",
    "start": "1870720",
    "end": "1876240"
  },
  {
    "text": "HTML that I need the important part here is at the bottom is where I load the SDK let me",
    "start": "1876240",
    "end": "1881720"
  },
  {
    "text": "just bump that up a bit so you can see it better so this is the uh this is the",
    "start": "1881720",
    "end": "1886840"
  },
  {
    "text": "part where I actually do the Lo loing of the SDK and we load our application",
    "start": "1886840",
    "end": "1892760"
  },
  {
    "text": "code and so um we also have a little bit of information about our application and",
    "start": "1892760",
    "end": "1897880"
  },
  {
    "text": "this is the app info JS file and this contains all of our um SDK configuration",
    "start": "1897880",
    "end": "1904200"
  },
  {
    "text": "details so we're going to be using Facebook to actually do ooth logins and",
    "start": "1904200",
    "end": "1910080"
  },
  {
    "text": "I'll talk a little bit about how that works in a bit for for the admin user and I mentioned before not to hardcode",
    "start": "1910080",
    "end": "1916399"
  },
  {
    "text": "your credentials this is a very specific LLY um scoped credential for read only access to my Dynamo DB table and only",
    "start": "1916399",
    "end": "1923200"
  },
  {
    "text": "for my Dynamo DB table so you can embed so users who log users who are not logged into my blog should still be able",
    "start": "1923200",
    "end": "1929679"
  },
  {
    "text": "to read it so I have an IM user setup with read privileges for that database",
    "start": "1929679",
    "end": "1934840"
  },
  {
    "text": "um and I also have the table name there and the region that it's in and for S3",
    "start": "1934840",
    "end": "1940200"
  },
  {
    "text": "similarly we're going to be storing assets there so I have my uh S3 bucket that I'm going to be hosting in",
    "start": "1940200",
    "end": "1945720"
  },
  {
    "text": "it we could do a quick look at the application itself U most of it is",
    "start": "1945720",
    "end": "1950880"
  },
  {
    "text": "controlling the UI so some of it's just um standard HTML uh Dom manipulation",
    "start": "1950880",
    "end": "1956720"
  },
  {
    "text": "I'll I'll just run through a couple of the actual uses of the SDK so this is where we will upload assets and so uh",
    "start": "1956720",
    "end": "1965080"
  },
  {
    "text": "you could see this operation is S3 bucket. put object over there um right right there and you could see",
    "start": "1965080",
    "end": "1972360"
  },
  {
    "text": "if you were following along this is basically exactly what you would do in the node SDK so very similar to to",
    "start": "1972360",
    "end": "1980039"
  },
  {
    "text": "do we also have a published article so this is our interaction with Dynamo DB so you can see we use the item up there",
    "start": "1980080",
    "end": "1986760"
  },
  {
    "text": "and we actually just put item the same way we would if we were using the node",
    "start": "1986760",
    "end": "1992158"
  },
  {
    "text": "SDK we also have a delete um and the rest of it mostly just the um just the",
    "start": "1992279",
    "end": "1998320"
  },
  {
    "text": "UI stuff here's a little query we're doing a simp a very simple query and we're using response pagination to get",
    "start": "1998320",
    "end": "2004039"
  },
  {
    "text": "each page we could we could actually set up paging it's a very simple blog we could set up paging if we wanted",
    "start": "2004039",
    "end": "2011039"
  },
  {
    "text": "to so it's only a couple hundred lines of code uh 260 and um it's very simple to do this",
    "start": "2012039",
    "end": "2019720"
  },
  {
    "text": "is the ooth login stuff that we'll be talking about in a bit so I actually haven't even deployed",
    "start": "2019720",
    "end": "2027200"
  },
  {
    "text": "this yet so we're actually going to deploy this together so I'm just going to jump into the",
    "start": "2027200",
    "end": "2034840"
  },
  {
    "text": "um so just to show you how easy it is to deploy an application I'm actually using the CLI here if you were at the CLI talk",
    "start": "2035279",
    "end": "2041559"
  },
  {
    "text": "or if you heard about the CLI we have a new unified CLI um and I'm using the aw S3 sync command to actually just publish",
    "start": "2041559",
    "end": "2048240"
  },
  {
    "text": "all my Assets in this directory up to S3 on on my bucket and so let's just call",
    "start": "2048240",
    "end": "2055240"
  },
  {
    "text": "dopu and you'll see the S3 um the CIS is going to upload all of our assets and",
    "start": "2055240",
    "end": "2060878"
  },
  {
    "text": "we've now just deployed our application so let's go check S3 to see",
    "start": "2060879",
    "end": "2066440"
  },
  {
    "text": "our application running",
    "start": "2066440",
    "end": "2069720"
  },
  {
    "text": "oops so uh there's currently nothing in our blog let's um log in to actually um",
    "start": "2082480",
    "end": "2089000"
  },
  {
    "text": "sorry about that it's running on htps so there's nothing in our blog",
    "start": "2089000",
    "end": "2095240"
  },
  {
    "text": "let's log in to actually um add a post so I have this set up I had",
    "start": "2095240",
    "end": "2102079"
  },
  {
    "text": "this registered with a Facebook application to handle my login for me um",
    "start": "2102079",
    "end": "2107320"
  },
  {
    "text": "and this is going to give me permission to actually use my application",
    "start": "2107320",
    "end": "2113359"
  },
  {
    "text": "oops there we go so you can see that um this is some of my just the application",
    "start": "2113920",
    "end": "2119359"
  },
  {
    "text": "enables me to post now because I'm at I'm logged in as an admin and so I could click",
    "start": "2119359",
    "end": "2124920"
  },
  {
    "text": "post and I could say um you know let's create a post say welcome to reinvent",
    "start": "2124920",
    "end": "2133200"
  },
  {
    "text": "2013 um and let's",
    "start": "2133200",
    "end": "2138119"
  },
  {
    "text": "say so we're writing a post I just have this little um uh what you see is what you get editor here that uh stack",
    "start": "2138599",
    "end": "2145320"
  },
  {
    "text": "Overflow uses it's open source you can use it on yours it uses markdown um so we get live preview at the bottom there",
    "start": "2145320",
    "end": "2152680"
  },
  {
    "text": "and this editor has this way to embed images by default I think they just let you link to an image but I've modified",
    "start": "2152680",
    "end": "2158720"
  },
  {
    "text": "this a little bit to actually let me select an image and this is actually going to go and upload the image to S3",
    "start": "2158720",
    "end": "2165960"
  },
  {
    "text": "on my behalf I've actually set up logging the same way we set up logging in our in our in our terminal so you can",
    "start": "2165960",
    "end": "2171839"
  },
  {
    "text": "actually see a lot of the stuff that is pump that is being sent through so you can see originally we actually had the",
    "start": "2171839",
    "end": "2178480"
  },
  {
    "text": "Dynamo DB scan that did the you know read read all the posts and display them to",
    "start": "2178480",
    "end": "2184040"
  },
  {
    "text": "user and then we did our login operation down here assum roll um and then we",
    "start": "2184040",
    "end": "2190280"
  },
  {
    "text": "finally logged in and now you can see our put object operation that we actually sent",
    "start": "2190280",
    "end": "2195440"
  },
  {
    "text": "through and so if I um just update you can see that the post uh shows the image",
    "start": "2195440",
    "end": "2202480"
  },
  {
    "text": "there and I can just say like uh hope you are enjoying the",
    "start": "2202480",
    "end": "2209920"
  },
  {
    "text": "sessions and so let's publish this post and you can see if you guys have your laptops open up you can actually hit",
    "start": "2209920",
    "end": "2215319"
  },
  {
    "text": "this reinvent blog demo3 Amazon w.com you can you guys can follow along and actually refresh your page it should be",
    "start": "2215319",
    "end": "2221720"
  },
  {
    "text": "up there now so I can actually go in and edit this post now that I'm logged in I can go in and edit let's um make this a",
    "start": "2221720",
    "end": "2229800"
  },
  {
    "text": "comma and let's just say",
    "start": "2229800",
    "end": "2233520"
  },
  {
    "text": "um uh so yeah so I can edit the",
    "start": "2237440",
    "end": "2244240"
  },
  {
    "text": "post and it's updated uh and again if I refresh the page I get the same stuff I",
    "start": "2244240",
    "end": "2251880"
  },
  {
    "text": "can also add more posts just to see how the the you know how it Scrolls um",
    "start": "2251880",
    "end": "2258400"
  },
  {
    "text": "so so I have my database ordering by date so it'll automatically show the last one first and so again if I refresh",
    "start": "2267040",
    "end": "2274200"
  },
  {
    "text": "it'll show it so that's the little uh demo I can also",
    "start": "2274200",
    "end": "2279640"
  },
  {
    "text": "delete um I can also delete posts um so that's a little blog demo uh we're going",
    "start": "2279640",
    "end": "2284839"
  },
  {
    "text": "to jump back and talk a little bit more about the uh little some of the features",
    "start": "2284839",
    "end": "2290079"
  },
  {
    "text": "that we that I just showed here so what are some key differences",
    "start": "2290079",
    "end": "2297200"
  },
  {
    "text": "between three-tier and two-tier I talked a lot about um logging",
    "start": "2297200",
    "end": "2303200"
  },
  {
    "text": "in and I talked a lot about how to manage credentials um browser security",
    "start": "2303200",
    "end": "2308720"
  },
  {
    "text": "is is a is very different when you're developing two-tier applications specifically uh when you're dealing with",
    "start": "2308720",
    "end": "2314839"
  },
  {
    "text": "cores and when you're dealing with credentials on devices so it's really important to understand how how it works",
    "start": "2314839",
    "end": "2320920"
  },
  {
    "text": "and how it's different from a from a three-tier architecture so let's talk about cross origin resource",
    "start": "2320920",
    "end": "2327640"
  },
  {
    "text": "sharing Kors is effectively this thing that says uh that all that basically your",
    "start": "2327640",
    "end": "2334760"
  },
  {
    "text": "browser says can am I allowed to actually send a request across a domain so typically your browser will not let",
    "start": "2334760",
    "end": "2340599"
  },
  {
    "text": "you send a request across a domain but Coors enables you to opt into",
    "start": "2340599",
    "end": "2345920"
  },
  {
    "text": "that behavior from from the host from the host's end so what happens is your browser sends a pre-flight request to the",
    "start": "2345920",
    "end": "2352319"
  },
  {
    "text": "external host and asks the question am I allowed to operate on this domain and the the server is supposed to come back",
    "start": "2352319",
    "end": "2359240"
  },
  {
    "text": "and say yes you may or um it might say no you can't in that case you get stopped um but if it says yes you may",
    "start": "2359240",
    "end": "2366119"
  },
  {
    "text": "that's when the browser sends the XR request so for S3 S3 has a Coors",
    "start": "2366119",
    "end": "2373480"
  },
  {
    "text": "configuration feature if you've dug through the permissions you might have seen it um effectively what you'll have to do is you'll need to configure cores",
    "start": "2373480",
    "end": "2380720"
  },
  {
    "text": "on S3 in order to use it you in the way you configure is you",
    "start": "2380720",
    "end": "2386599"
  },
  {
    "text": "use the bucket policy to actually configure cores this is uh a sample and you might not be able to see this but if",
    "start": "2386599",
    "end": "2392079"
  },
  {
    "text": "you load up the console and you uh click the permissions Tab and you go to the cores configuration editor",
    "start": "2392079",
    "end": "2397839"
  },
  {
    "text": "this is what they'll pop up they have a bunch of samples so it's actually kind of easy to get started with it um but",
    "start": "2397839",
    "end": "2403200"
  },
  {
    "text": "you'll need to configure you'll need to set up this configuration in order to use the SDK with",
    "start": "2403200",
    "end": "2409040"
  },
  {
    "text": "S3 with other services uh with other services that are authenticated like Dynamo DB sqs SNS you don't need to",
    "start": "2409280",
    "end": "2416520"
  },
  {
    "text": "configure cores cores is already uh cores is already on because you're you have an authenticated request already so",
    "start": "2416520",
    "end": "2421720"
  },
  {
    "text": "you don't have to worry about that the issue here is that you have public um you have public assets on S3 and you",
    "start": "2421720",
    "end": "2427400"
  },
  {
    "text": "want to make sure that you're sending them to the right people so cores that's how you set up",
    "start": "2427400",
    "end": "2433240"
  },
  {
    "text": "cores let's talk about credentials so again never hardcode your credentials I again I can't stress that",
    "start": "2433240",
    "end": "2440240"
  },
  {
    "text": "enough you should not be hardcoding credentials in your application don't leak Secrets bad idea",
    "start": "2440240",
    "end": "2445800"
  },
  {
    "text": "um the way that we get around this is we use a feature of IM and STS called Web identity Federation and this is a",
    "start": "2445800",
    "end": "2452680"
  },
  {
    "text": "feature that we released a couple months back that allows you to use Facebook",
    "start": "2452680",
    "end": "2457800"
  },
  {
    "text": "Google or log in with Amazon as thirdparty identity providers to do the ooth login effectively what happens is you go",
    "start": "2457800",
    "end": "2466359"
  },
  {
    "text": "uh you register an application with those providers just like you would with any Facebook uh develop developer",
    "start": "2466359",
    "end": "2472079"
  },
  {
    "text": "application and what you do is your users log into that application as if they were using it and they get an",
    "start": "2472079",
    "end": "2477720"
  },
  {
    "text": "access token back and that access token gives them access to that application but what you will be doing with that access token is you'll take that access",
    "start": "2477720",
    "end": "2484119"
  },
  {
    "text": "token you'll come to AWS and you'll trade that access token in for AWS keys and AWS with web identity Federation",
    "start": "2484119",
    "end": "2491040"
  },
  {
    "text": "will actually talk to the application and make sure that the user has the correct permissions to access the",
    "start": "2491040",
    "end": "2496599"
  },
  {
    "text": "application and then give back keys to uh to your JavaScript application that way keys are never actually hard-coded",
    "start": "2496599",
    "end": "2503319"
  },
  {
    "text": "embedded in your application so to set up web web",
    "start": "2503319",
    "end": "2508560"
  },
  {
    "text": "identity Federation what you'll need to do is set up an IM Ro for the identity provider it's it's pretty easy to do if",
    "start": "2508560",
    "end": "2515000"
  },
  {
    "text": "you go into your console in the IM cons console you can create a new role um in",
    "start": "2515000",
    "end": "2520960"
  },
  {
    "text": "the roles Tab and you click create new role and at the bottom there there's a very uh there's a little box for roll",
    "start": "2520960",
    "end": "2527280"
  },
  {
    "text": "for web identity provider access you'll click that and basically it'll give you a drop down for Facebook login with",
    "start": "2527280",
    "end": "2534040"
  },
  {
    "text": "Amazon or um or Google and you will give it your application ID that you've",
    "start": "2534040",
    "end": "2539559"
  },
  {
    "text": "registered with th with those identity providers after you set up that you'll",
    "start": "2539559",
    "end": "2545480"
  },
  {
    "text": "be running through the wizard and will'll ask you to set up permissions this is the part where you'll set up specific permissions to access only",
    "start": "2545480",
    "end": "2551559"
  },
  {
    "text": "Dynamo DB uh my specific table or S3 and and you'll make sure that your permissions are correct for that user",
    "start": "2551559",
    "end": "2557760"
  },
  {
    "text": "again make sure that make sure that they're only accessing the resources that you want them to",
    "start": "2557760",
    "end": "2563480"
  },
  {
    "text": "access once you've set up your uh role and you have an Arn for it this is the",
    "start": "2563960",
    "end": "2569640"
  },
  {
    "text": "call that we use that I use in this in the blog demo to actually get credentials so we we saw the temporary",
    "start": "2569640",
    "end": "2575760"
  },
  {
    "text": "credentials uh credentials management thing in the demo before to actually just get temporary credentials this is",
    "start": "2575760",
    "end": "2581760"
  },
  {
    "text": "this works in a very similar way you just assign the Adis web identity credentials object to your to your",
    "start": "2581760",
    "end": "2587440"
  },
  {
    "text": "Global credentials uh pointing to your role Arn and a provider id and and finally the",
    "start": "2587440",
    "end": "2594000"
  },
  {
    "text": "web identity token the web identity token is the access key that you got from the ooth",
    "start": "2594000",
    "end": "2599240"
  },
  {
    "text": "procedure and after you do that all of the uh all of the calls that you make will be authenticated through web",
    "start": "2599240",
    "end": "2605280"
  },
  {
    "text": "identity Federation again it'll run laser so it it'll send a pre-flight request to STS to get those credentials",
    "start": "2605280",
    "end": "2611040"
  },
  {
    "text": "and then come back and make the follow-up request that's what you saw in the logs before with the assum r with web",
    "start": "2611040",
    "end": "2617640"
  },
  {
    "text": "identity so we talked about how you do it in the SDK uh the process of getting the ooth",
    "start": "2617640",
    "end": "2624359"
  },
  {
    "text": "token will differ per provider you use this is the example for Facebook uh this",
    "start": "2624359",
    "end": "2629599"
  },
  {
    "text": "is a a minim minimum minimal example for Facebook you can actually go to the identity providers documentation they",
    "start": "2629599",
    "end": "2635520"
  },
  {
    "text": "give you pretty good examples on how to get access tokens um but you would basically call fb. login there's other",
    "start": "2635520",
    "end": "2642200"
  },
  {
    "text": "ways to do it but here's one of them you can call fb. login and if you are successful the response will be response. author response. access token",
    "start": "2642200",
    "end": "2649520"
  },
  {
    "text": "and now you have your FB access token you can um Throw That Into the Web identity credentials object and now",
    "start": "2649520",
    "end": "2656440"
  },
  {
    "text": "you're ready to go with with authenticated access again if you're using Google or",
    "start": "2656440",
    "end": "2662000"
  },
  {
    "text": "login with Amazon it's basically the same thing once you get your access token from those identity providers you",
    "start": "2662000",
    "end": "2668079"
  },
  {
    "text": "can go ahead and um just pass trade it in for actual access",
    "start": "2668079",
    "end": "2674318"
  },
  {
    "text": "keys so that's how you would um use the JavaScript SDK in the browser and in",
    "start": "2674640",
    "end": "2680160"
  },
  {
    "text": "node.js to build really cool applications I want to end the talk by by talking about something that I I",
    "start": "2680160",
    "end": "2685760"
  },
  {
    "text": "think is really important and that's our community so at Amazon we actually we love open source we all of the sdks that",
    "start": "2685760",
    "end": "2692559"
  },
  {
    "text": "we release are available on GitHub and they're all licensed under the open source Apache to",
    "start": "2692559",
    "end": "2698000"
  },
  {
    "text": "license we really believe in a strong Community um and we really think that uh",
    "start": "2698000",
    "end": "2703760"
  },
  {
    "text": "everybody should be involved in that's way we do get involved in open source um our project again is available",
    "start": "2703760",
    "end": "2709880"
  },
  {
    "text": "on GitHub on uh right there we definitely love to get feedback we",
    "start": "2709880",
    "end": "2715359"
  },
  {
    "text": "definitely love to get poll requests um I said this before I'm going to stress it again we we love getting contributions",
    "start": "2715359",
    "end": "2722079"
  },
  {
    "text": "to the SDK so if you run through the documentation and you see that something it might be a little awkward we love to",
    "start": "2722079",
    "end": "2728160"
  },
  {
    "text": "see people helping us improve the docs we love to see when people report issues it's how we know we have issues",
    "start": "2728160",
    "end": "2735000"
  },
  {
    "text": "so please report issues to us um if you see something that you can easily fix",
    "start": "2735000",
    "end": "2741280"
  },
  {
    "text": "please you know go ahead and fix it that's that would be great um submit poll",
    "start": "2741280",
    "end": "2746440"
  },
  {
    "text": "requests and finally if you if you're writing something that you think is a little larger and might not belong in the uh the core SDK or you know um don't",
    "start": "2746440",
    "end": "2754280"
  },
  {
    "text": "really want to necessarily go through the trouble you can also write a third party plugin and third party plugins are",
    "start": "2754280",
    "end": "2760640"
  },
  {
    "text": "uh great way to add features to the SDK um features that might not necessarily be part of the SDK itself",
    "start": "2760640",
    "end": "2766800"
  },
  {
    "text": "but like helper methods high level abstractions over Dynamo DB um if you",
    "start": "2766800",
    "end": "2772079"
  },
  {
    "text": "look at our package on npm",
    "start": "2772079",
    "end": "2777319"
  },
  {
    "text": "npmjs.com to use S3 more easily or Dynamo DB more easily um there's a",
    "start": "2785920",
    "end": "2792400"
  },
  {
    "text": "couple there in that list that you can you can look through finally as we move into the",
    "start": "2792400",
    "end": "2798640"
  },
  {
    "text": "browser um Bower is a really cool package manager that we're looking at to see how we can actually get um packages",
    "start": "2798640",
    "end": "2805359"
  },
  {
    "text": "for um JavaScript in the browser and see how we can cont how we can sort of set that up for the community and how we can",
    "start": "2805359",
    "end": "2811800"
  },
  {
    "text": "uh be involved in that as well so we defin want you guys to write",
    "start": "2811800",
    "end": "2817839"
  },
  {
    "text": "more and help us out and um contribute uh we continue contributing and we we think it's great to have um a really",
    "start": "2817839",
    "end": "2824960"
  },
  {
    "text": "strong Community I think that's really how we're going to drive uh the these all all this development forward is",
    "start": "2824960",
    "end": "2830359"
  },
  {
    "text": "having a strong community so with that I want to thank you guys for listening to my talk uh I'm going to be up here for",
    "start": "2830359",
    "end": "2835880"
  },
  {
    "text": "questions just in a bit after I at the end here and um we love getting feedback I like I said we love getting feedback",
    "start": "2835880",
    "end": "2842440"
  },
  {
    "text": "so please uh give feedback to this talk if you if you enjoyed it or if you didn't like it let us know so thank you",
    "start": "2842440",
    "end": "2850640"
  }
]