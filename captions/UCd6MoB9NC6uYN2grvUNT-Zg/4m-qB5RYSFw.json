[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "hello my name is Jeremy Shearer I'm a",
    "start": "299",
    "end": "2520"
  },
  {
    "text": "senior partner solution architect here",
    "start": "2520",
    "end": "4740"
  },
  {
    "text": "at AWS",
    "start": "4740",
    "end": "6180"
  },
  {
    "text": "I'm part of the Oracle applications on",
    "start": "6180",
    "end": "8760"
  },
  {
    "text": "AWS team and my focus is to help",
    "start": "8760",
    "end": "11340"
  },
  {
    "text": "Partners and customers successfully",
    "start": "11340",
    "end": "13740"
  },
  {
    "text": "migrate jde workloads to AWS",
    "start": "13740",
    "end": "17039"
  },
  {
    "text": "today I'm going to talk with you about",
    "start": "17039",
    "end": "19500"
  },
  {
    "text": "how to architect a SQL Server database",
    "start": "19500",
    "end": "22920"
  },
  {
    "text": "to support the unique i o",
    "start": "22920",
    "end": "25439"
  },
  {
    "text": "characteristics and the performance",
    "start": "25439",
    "end": "27180"
  },
  {
    "text": "characteristics of JD Edwards I'm not",
    "start": "27180",
    "end": "30119"
  },
  {
    "text": "going to delve into resiliency",
    "start": "30119",
    "end": "31920"
  },
  {
    "text": "configurations and some of the other",
    "start": "31920",
    "end": "35780"
  },
  {
    "text": "requirements of these Solutions I'm",
    "start": "35780",
    "end": "38219"
  },
  {
    "text": "going to save those for for another",
    "start": "38219",
    "end": "39660"
  },
  {
    "text": "session today we're going to focus you",
    "start": "39660",
    "end": "42540"
  },
  {
    "text": "know very tightly on the performance",
    "start": "42540",
    "end": "44700"
  },
  {
    "text": "characteristics and how to architect for",
    "start": "44700",
    "end": "46860"
  },
  {
    "text": "those characteristics",
    "start": "46860",
    "end": "48780"
  },
  {
    "start": "48000",
    "end": "109000"
  },
  {
    "text": "so when JD Edwards uses a SQL Server",
    "start": "48780",
    "end": "51719"
  },
  {
    "text": "database it has unique characteristics",
    "start": "51719",
    "end": "54660"
  },
  {
    "text": "and and one of those is the way that it",
    "start": "54660",
    "end": "57180"
  },
  {
    "text": "interacts with the databases it sends",
    "start": "57180",
    "end": "59039"
  },
  {
    "text": "only basic data manipulation language",
    "start": "59039",
    "end": "63480"
  },
  {
    "text": "um commands to the database to read and",
    "start": "63480",
    "end": "66900"
  },
  {
    "text": "write the data and it typically does",
    "start": "66900",
    "end": "68939"
  },
  {
    "text": "those in the sequential order where",
    "start": "68939",
    "end": "71400"
  },
  {
    "text": "it'll do one after the other it won't do",
    "start": "71400",
    "end": "73140"
  },
  {
    "text": "a fire hose where it sends a lot of",
    "start": "73140",
    "end": "74700"
  },
  {
    "text": "requests at once it'll do these these",
    "start": "74700",
    "end": "76740"
  },
  {
    "text": "queries one after the other the impact",
    "start": "76740",
    "end": "79560"
  },
  {
    "text": "of that is that we don't use a lot of",
    "start": "79560",
    "end": "83580"
  },
  {
    "text": "CPU on the database itself because most",
    "start": "83580",
    "end": "85860"
  },
  {
    "text": "of the processing is happening in the",
    "start": "85860",
    "end": "87540"
  },
  {
    "text": "application tier but what we are very",
    "start": "87540",
    "end": "90240"
  },
  {
    "text": "sensitive to is the i o characteristics",
    "start": "90240",
    "end": "94020"
  },
  {
    "text": "so one of our first requirements then is",
    "start": "94020",
    "end": "96360"
  },
  {
    "text": "we need to architect a solution that has",
    "start": "96360",
    "end": "99479"
  },
  {
    "text": "a low amount of CPU horsepower but a lot",
    "start": "99479",
    "end": "103680"
  },
  {
    "text": "of i o capability with it to meet what",
    "start": "103680",
    "end": "107159"
  },
  {
    "text": "we need for JD Edwards",
    "start": "107159",
    "end": "109979"
  },
  {
    "start": "109000",
    "end": "173000"
  },
  {
    "text": "the the second characteristic that we",
    "start": "109979",
    "end": "112380"
  },
  {
    "text": "have to architect for is the read",
    "start": "112380",
    "end": "114000"
  },
  {
    "text": "latency sensitivity so because JD",
    "start": "114000",
    "end": "116939"
  },
  {
    "text": "Edwards is doing a lot of these",
    "start": "116939",
    "end": "119460"
  },
  {
    "text": "operations sequentially one after the",
    "start": "119460",
    "end": "122399"
  },
  {
    "text": "other the time it takes to perform any",
    "start": "122399",
    "end": "125040"
  },
  {
    "text": "one of these operations you know",
    "start": "125040",
    "end": "127619"
  },
  {
    "text": "accumulates as we're doing hundreds of",
    "start": "127619",
    "end": "129720"
  },
  {
    "text": "thousands of them sequentially so we",
    "start": "129720",
    "end": "132239"
  },
  {
    "text": "need to minimize that latency you know",
    "start": "132239",
    "end": "134940"
  },
  {
    "text": "on those read iOS",
    "start": "134940",
    "end": "136920"
  },
  {
    "text": "next we have to minimize the read",
    "start": "136920",
    "end": "139560"
  },
  {
    "text": "latency for our right iOS you know",
    "start": "139560",
    "end": "142980"
  },
  {
    "text": "particularly to our log files so we have",
    "start": "142980",
    "end": "144720"
  },
  {
    "text": "processes like JD Edwards MRP that are",
    "start": "144720",
    "end": "147000"
  },
  {
    "text": "doing the sequential write operations",
    "start": "147000",
    "end": "148980"
  },
  {
    "text": "and the time it takes to do the right",
    "start": "148980",
    "end": "151200"
  },
  {
    "text": "directly impacts the runtime of the",
    "start": "151200",
    "end": "153840"
  },
  {
    "text": "processes and finally we need to",
    "start": "153840",
    "end": "156300"
  },
  {
    "text": "architect an understanding that we use",
    "start": "156300",
    "end": "158760"
  },
  {
    "text": "read committed snapshot isolation which",
    "start": "158760",
    "end": "161700"
  },
  {
    "text": "I'll talk about a little bit more in",
    "start": "161700",
    "end": "163560"
  },
  {
    "text": "detail here in a few minutes where it",
    "start": "163560",
    "end": "166260"
  },
  {
    "text": "creates a lot of i o in our tempdb",
    "start": "166260",
    "end": "168959"
  },
  {
    "text": "database so we'll need to architect the",
    "start": "168959",
    "end": "171780"
  },
  {
    "text": "solution to accommodate that so so let's",
    "start": "171780",
    "end": "174720"
  },
  {
    "start": "173000",
    "end": "220000"
  },
  {
    "text": "start by talking about our ec2 instance",
    "start": "174720",
    "end": "177239"
  },
  {
    "text": "type our go to instance type for a JD",
    "start": "177239",
    "end": "180420"
  },
  {
    "text": "Edward SQL Server database today is our",
    "start": "180420",
    "end": "183000"
  },
  {
    "text": "X2 iedn",
    "start": "183000",
    "end": "185580"
  },
  {
    "text": "instance type",
    "start": "185580",
    "end": "187620"
  },
  {
    "text": "which provides",
    "start": "187620",
    "end": "189739"
  },
  {
    "text": "a lot of i o backend for each vcpu that",
    "start": "189739",
    "end": "194519"
  },
  {
    "text": "is provisioned",
    "start": "194519",
    "end": "196200"
  },
  {
    "text": "additionally it provides a lot of RAM",
    "start": "196200",
    "end": "198659"
  },
  {
    "text": "for each vcpu provision it gives us 32",
    "start": "198659",
    "end": "202140"
  },
  {
    "text": "gigabyte of ram per vcpu",
    "start": "202140",
    "end": "205980"
  },
  {
    "text": "and what that means to us is that we can",
    "start": "205980",
    "end": "209220"
  },
  {
    "text": "allocate that Ram as a SQL Server you",
    "start": "209220",
    "end": "212400"
  },
  {
    "text": "know as a SQL Server buffer cache into",
    "start": "212400",
    "end": "215400"
  },
  {
    "text": "our SQL Server database so we got our",
    "start": "215400",
    "end": "218519"
  },
  {
    "text": "jde database here",
    "start": "218519",
    "end": "220379"
  },
  {
    "start": "220000",
    "end": "258000"
  },
  {
    "text": "and any time that we can use that RAM",
    "start": "220379",
    "end": "223440"
  },
  {
    "text": "for the buffer cache you know we can",
    "start": "223440",
    "end": "226560"
  },
  {
    "text": "return the data very quickly we don't",
    "start": "226560",
    "end": "228540"
  },
  {
    "text": "have to go to disk to do it so we're",
    "start": "228540",
    "end": "230459"
  },
  {
    "text": "trying to get out here to our",
    "start": "230459",
    "end": "231840"
  },
  {
    "text": "application tier get our data back to",
    "start": "231840",
    "end": "234120"
  },
  {
    "text": "the application as quick as we can when",
    "start": "234120",
    "end": "236459"
  },
  {
    "text": "we get that data from memory back to the",
    "start": "236459",
    "end": "238799"
  },
  {
    "text": "app that gives us the lowest read",
    "start": "238799",
    "end": "241620"
  },
  {
    "text": "latency sensitivity so we want to pull",
    "start": "241620",
    "end": "243900"
  },
  {
    "text": "as much as we can from that memory we",
    "start": "243900",
    "end": "246239"
  },
  {
    "text": "want to get at very high buffer cachet",
    "start": "246239",
    "end": "248940"
  },
  {
    "text": "ratio 99",
    "start": "248940",
    "end": "251000"
  },
  {
    "text": "99.5 percent 99.9 percent those are",
    "start": "251000",
    "end": "254580"
  },
  {
    "text": "great ratios we want to be up there as",
    "start": "254580",
    "end": "257160"
  },
  {
    "text": "high as we can",
    "start": "257160",
    "end": "258540"
  },
  {
    "start": "258000",
    "end": "287000"
  },
  {
    "text": "even",
    "start": "258540",
    "end": "259919"
  },
  {
    "text": "even have those High ratios inevitably",
    "start": "259919",
    "end": "262139"
  },
  {
    "text": "we're still going to end up having to go",
    "start": "262139",
    "end": "263699"
  },
  {
    "text": "to disk and to come to come to disk",
    "start": "263699",
    "end": "267720"
  },
  {
    "text": "we'll typically use our gp3 storage our",
    "start": "267720",
    "end": "271440"
  },
  {
    "text": "gp3 general purpose 3 storage",
    "start": "271440",
    "end": "274199"
  },
  {
    "text": "each one of these volumes can provide up",
    "start": "274199",
    "end": "276900"
  },
  {
    "text": "to 16",
    "start": "276900",
    "end": "278340"
  },
  {
    "text": "000 iops of performance with a moderate",
    "start": "278340",
    "end": "281759"
  },
  {
    "text": "amount of latency these are SSD based",
    "start": "281759",
    "end": "284100"
  },
  {
    "text": "drives you know the latency is pretty",
    "start": "284100",
    "end": "286800"
  },
  {
    "text": "good on it",
    "start": "286800",
    "end": "287880"
  },
  {
    "text": "if the 16 000 iops is not enough",
    "start": "287880",
    "end": "291060"
  },
  {
    "text": "performance we can actually stripe and",
    "start": "291060",
    "end": "293220"
  },
  {
    "text": "mirror across multiple gp3 volumes so if",
    "start": "293220",
    "end": "297660"
  },
  {
    "text": "we use four gp3 volumes that'll add up",
    "start": "297660",
    "end": "300900"
  },
  {
    "text": "to you know 60 up to 64 000 iops of",
    "start": "300900",
    "end": "304800"
  },
  {
    "text": "thorough put there",
    "start": "304800",
    "end": "307819"
  },
  {
    "text": "so that that covers our read latency",
    "start": "308639",
    "end": "311520"
  },
  {
    "text": "requirement and our read i o requirement",
    "start": "311520",
    "end": "314160"
  },
  {
    "text": "but what about our right I O requirement",
    "start": "314160",
    "end": "316100"
  },
  {
    "text": "most jde processes can also put their",
    "start": "316100",
    "end": "320340"
  },
  {
    "text": "their log files their ldf files also on",
    "start": "320340",
    "end": "323460"
  },
  {
    "text": "gp3 but if you're running some very time",
    "start": "323460",
    "end": "326940"
  },
  {
    "text": "sensitive processes that are very right",
    "start": "326940",
    "end": "330240"
  },
  {
    "text": "chatty like JD Edwards MRP you may need",
    "start": "330240",
    "end": "334259"
  },
  {
    "text": "to move the log file to our low latency",
    "start": "334259",
    "end": "337620"
  },
  {
    "text": "io2 block Express storage",
    "start": "337620",
    "end": "340680"
  },
  {
    "text": "so this io2 block Express storage",
    "start": "340680",
    "end": "345020"
  },
  {
    "text": "provides sub millisecond latency",
    "start": "345020",
    "end": "350180"
  },
  {
    "text": "for for these write operations so we",
    "start": "350940",
    "end": "354000"
  },
  {
    "text": "have seen you know Hands-On when we move",
    "start": "354000",
    "end": "356280"
  },
  {
    "text": "the ldf file of the SQL Server database",
    "start": "356280",
    "end": "359460"
  },
  {
    "text": "from gp3 to io2 we've seen the runtime",
    "start": "359460",
    "end": "362820"
  },
  {
    "text": "of the MRP process drop in half by",
    "start": "362820",
    "end": "365400"
  },
  {
    "text": "making that move so again we'll put our",
    "start": "365400",
    "end": "367620"
  },
  {
    "text": "we put our data you know MDF and ldf",
    "start": "367620",
    "end": "372539"
  },
  {
    "text": "files",
    "start": "372539",
    "end": "374039"
  },
  {
    "text": "on the gp3 storage and our log files are",
    "start": "374039",
    "end": "378180"
  },
  {
    "text": "ldf on our io2 block Express",
    "start": "378180",
    "end": "382139"
  },
  {
    "start": "381000",
    "end": "485000"
  },
  {
    "text": "so so now we've covered our 0.1 about",
    "start": "382139",
    "end": "384780"
  },
  {
    "text": "our low CPU to IO we've talked about our",
    "start": "384780",
    "end": "387780"
  },
  {
    "text": "read latency requirements we've talked",
    "start": "387780",
    "end": "389759"
  },
  {
    "text": "about our right latency requirements but",
    "start": "389759",
    "end": "391800"
  },
  {
    "text": "what about our temp DB well our X2 ien",
    "start": "391800",
    "end": "395160"
  },
  {
    "text": "instance type up here has a neat feature",
    "start": "395160",
    "end": "398699"
  },
  {
    "text": "with it called an instant store so these",
    "start": "398699",
    "end": "402120"
  },
  {
    "text": "instant stores which can we can have up",
    "start": "402120",
    "end": "405419"
  },
  {
    "text": "to one you know 1.9 terabyte per instant",
    "start": "405419",
    "end": "409199"
  },
  {
    "text": "store with up to two of these instant",
    "start": "409199",
    "end": "411539"
  },
  {
    "text": "stores per server",
    "start": "411539",
    "end": "415139"
  },
  {
    "text": "are ideal for our temp DB i o",
    "start": "415139",
    "end": "420000"
  },
  {
    "text": "requirements",
    "start": "420000",
    "end": "422780"
  },
  {
    "text": "so the way that we would leverage these",
    "start": "425340",
    "end": "428880"
  },
  {
    "text": "instant stores is we would actually move",
    "start": "428880",
    "end": "432300"
  },
  {
    "text": "our temp DB out here to these instant",
    "start": "432300",
    "end": "435900"
  },
  {
    "text": "store locations these instant stores are",
    "start": "435900",
    "end": "439380"
  },
  {
    "text": "ephemeral which means when this system",
    "start": "439380",
    "end": "442319"
  },
  {
    "text": "is shut down the content of these these",
    "start": "442319",
    "end": "446880"
  },
  {
    "text": "drives you know goes away so that's",
    "start": "446880",
    "end": "450240"
  },
  {
    "text": "perfectly acceptable for our temp DB",
    "start": "450240",
    "end": "452460"
  },
  {
    "text": "database because when JD or when SQL",
    "start": "452460",
    "end": "454860"
  },
  {
    "text": "Server restarts it recreates this tempdb",
    "start": "454860",
    "end": "458639"
  },
  {
    "text": "database with every restart just like we",
    "start": "458639",
    "end": "460800"
  },
  {
    "text": "recreate and re-partition these instant",
    "start": "460800",
    "end": "464759"
  },
  {
    "text": "stores every time our ec2 instance",
    "start": "464759",
    "end": "467240"
  },
  {
    "text": "restarts these instant stores provide",
    "start": "467240",
    "end": "470580"
  },
  {
    "text": "very high iops very low latency and it",
    "start": "470580",
    "end": "474660"
  },
  {
    "text": "you know very nicely meets the",
    "start": "474660",
    "end": "477120"
  },
  {
    "text": "requirement or number four requirement",
    "start": "477120",
    "end": "478800"
  },
  {
    "text": "up here of the heavy temp dbio",
    "start": "478800",
    "end": "481319"
  },
  {
    "text": "requirements when we have that rcsi",
    "start": "481319",
    "end": "483660"
  },
  {
    "text": "enabled",
    "start": "483660",
    "end": "485460"
  },
  {
    "start": "485000",
    "end": "537000"
  },
  {
    "text": "so just real quick in summary we talked",
    "start": "485460",
    "end": "488280"
  },
  {
    "text": "about the unique requirements of running",
    "start": "488280",
    "end": "490139"
  },
  {
    "text": "JD Edwards on a SQL Server where we need",
    "start": "490139",
    "end": "492539"
  },
  {
    "text": "very low CPU to i o ratios we need we",
    "start": "492539",
    "end": "496199"
  },
  {
    "text": "are very read latency sensitive so we",
    "start": "496199",
    "end": "498599"
  },
  {
    "text": "want to have a lot of buffer cache and",
    "start": "498599",
    "end": "501720"
  },
  {
    "text": "we want to have moderate latency you",
    "start": "501720",
    "end": "504060"
  },
  {
    "text": "know out to the storage we talked about",
    "start": "504060",
    "end": "506220"
  },
  {
    "text": "write latency sensitivity particularly",
    "start": "506220",
    "end": "508800"
  },
  {
    "text": "for jobs like MRP where we want to where",
    "start": "508800",
    "end": "512399"
  },
  {
    "text": "gp3 is typically enough but sometimes we",
    "start": "512399",
    "end": "516000"
  },
  {
    "text": "actually have to move to even lower",
    "start": "516000",
    "end": "517440"
  },
  {
    "text": "latency io2 block Express for our log",
    "start": "517440",
    "end": "520440"
  },
  {
    "text": "file and then we talked about the heavy",
    "start": "520440",
    "end": "523200"
  },
  {
    "text": "tempdb I O with our CSI where we can",
    "start": "523200",
    "end": "526320"
  },
  {
    "text": "move that out to our instance store",
    "start": "526320",
    "end": "529680"
  },
  {
    "text": "thank you for attending the session",
    "start": "529680",
    "end": "531779"
  },
  {
    "text": "today",
    "start": "531779",
    "end": "532680"
  },
  {
    "text": "I hope you have a great day",
    "start": "532680",
    "end": "535640"
  }
]