[
  {
    "text": "[Applause]",
    "start": "0",
    "end": "750"
  },
  {
    "text": "[Music]",
    "start": "750",
    "end": "990"
  },
  {
    "text": "[Applause]",
    "start": "990",
    "end": "990"
  },
  {
    "text": "[Music]",
    "start": "990",
    "end": "3879"
  },
  {
    "text": "hey there everyone i'm brent langston",
    "start": "6799",
    "end": "8720"
  },
  {
    "text": "and i'm a developer advocate at amazon",
    "start": "8720",
    "end": "10639"
  },
  {
    "text": "web services today i want to show you",
    "start": "10639",
    "end": "12799"
  },
  {
    "text": "how to use ecr to store your container",
    "start": "12799",
    "end": "14960"
  },
  {
    "text": "images and how to manage the image",
    "start": "14960",
    "end": "16720"
  },
  {
    "text": "lifecycle with the ecr lifecycle",
    "start": "16720",
    "end": "18640"
  },
  {
    "text": "policies",
    "start": "18640",
    "end": "19920"
  },
  {
    "text": "so let's start with a simple hello world",
    "start": "19920",
    "end": "22160"
  },
  {
    "text": "app",
    "start": "22160",
    "end": "23119"
  },
  {
    "text": "we'll start by creating a repository to",
    "start": "23119",
    "end": "25359"
  },
  {
    "text": "host our images and for each image we",
    "start": "25359",
    "end": "27840"
  },
  {
    "text": "want to push we'll need to define a",
    "start": "27840",
    "end": "29679"
  },
  {
    "text": "repository in ecr",
    "start": "29679",
    "end": "32800"
  },
  {
    "text": "so here i am in ecr",
    "start": "32800",
    "end": "36480"
  },
  {
    "text": "and i'm just going to click the get",
    "start": "36480",
    "end": "38160"
  },
  {
    "text": "started button",
    "start": "38160",
    "end": "39840"
  },
  {
    "text": "and you can see that i have to give my",
    "start": "39840",
    "end": "41840"
  },
  {
    "text": "repository a name hello world",
    "start": "41840",
    "end": "46640"
  },
  {
    "text": "and i'll just go to the next step",
    "start": "46640",
    "end": "49920"
  },
  {
    "text": "and that's all i have to do at this",
    "start": "49920",
    "end": "51600"
  },
  {
    "text": "point i have a new repository created",
    "start": "51600",
    "end": "54719"
  },
  {
    "text": "and i can go to my client and start to",
    "start": "54719",
    "end": "57680"
  },
  {
    "text": "use",
    "start": "57680",
    "end": "58719"
  },
  {
    "text": "these",
    "start": "58719",
    "end": "59760"
  },
  {
    "text": "commands",
    "start": "59760",
    "end": "60879"
  },
  {
    "text": "to",
    "start": "60879",
    "end": "61760"
  },
  {
    "text": "push and pull images",
    "start": "61760",
    "end": "64400"
  },
  {
    "text": "so the first step is to log into my new",
    "start": "64400",
    "end": "67920"
  },
  {
    "text": "docker registry i'll copy this aws ecr",
    "start": "67920",
    "end": "72640"
  },
  {
    "text": "get login command",
    "start": "72640",
    "end": "75439"
  },
  {
    "text": "and that outputs a docker login command",
    "start": "75439",
    "end": "78880"
  },
  {
    "text": "i can use",
    "start": "78880",
    "end": "80240"
  },
  {
    "text": "so",
    "start": "80240",
    "end": "81360"
  },
  {
    "text": "i will copy and paste",
    "start": "81360",
    "end": "84840"
  },
  {
    "text": "that and now you see i've logged in",
    "start": "84840",
    "end": "87840"
  },
  {
    "text": "successfully",
    "start": "87840",
    "end": "89680"
  },
  {
    "text": "from here if i build my docker image",
    "start": "89680",
    "end": "94159"
  },
  {
    "text": "i now have a new image built and ready",
    "start": "94240",
    "end": "96640"
  },
  {
    "text": "to push to my docker registry",
    "start": "96640",
    "end": "99200"
  },
  {
    "text": "the next command is",
    "start": "99200",
    "end": "101680"
  },
  {
    "text": "showing me how i can tag my image",
    "start": "101680",
    "end": "106000"
  },
  {
    "text": "and you can see that i just tagged my",
    "start": "106240",
    "end": "108560"
  },
  {
    "text": "image hello world latest",
    "start": "108560",
    "end": "110720"
  },
  {
    "text": "now i could also tag it with any number",
    "start": "110720",
    "end": "114240"
  },
  {
    "text": "of other things",
    "start": "114240",
    "end": "115600"
  },
  {
    "text": "by default many developers will tag",
    "start": "115600",
    "end": "117680"
  },
  {
    "text": "their images latest",
    "start": "117680",
    "end": "119280"
  },
  {
    "text": "i've used latest but you could also use",
    "start": "119280",
    "end": "121439"
  },
  {
    "text": "a sha from a git commit or a hash from a",
    "start": "121439",
    "end": "123920"
  },
  {
    "text": "build number",
    "start": "123920",
    "end": "125119"
  },
  {
    "text": "from your cicd system if you are",
    "start": "125119",
    "end": "127439"
  },
  {
    "text": "automatically generating new image",
    "start": "127439",
    "end": "129360"
  },
  {
    "text": "builds",
    "start": "129360",
    "end": "130399"
  },
  {
    "text": "now that we've tagged the image we'll",
    "start": "130399",
    "end": "132239"
  },
  {
    "text": "push this to amazon ecr",
    "start": "132239",
    "end": "134560"
  },
  {
    "text": "i'm going to copy this command",
    "start": "134560",
    "end": "136480"
  },
  {
    "text": "for docker push",
    "start": "136480",
    "end": "139360"
  },
  {
    "text": "and",
    "start": "140840",
    "end": "142480"
  },
  {
    "text": "we've pushed our image",
    "start": "142480",
    "end": "144160"
  },
  {
    "text": "and back on the console",
    "start": "144160",
    "end": "148400"
  },
  {
    "text": "we now have an image in our registry",
    "start": "148800",
    "end": "153040"
  },
  {
    "text": "a great feature of amazon ecr is that",
    "start": "153040",
    "end": "156000"
  },
  {
    "text": "images are encrypted and compressed when",
    "start": "156000",
    "end": "158160"
  },
  {
    "text": "they're added to the repository this",
    "start": "158160",
    "end": "160319"
  },
  {
    "text": "dockerfile image was about 15 megabytes",
    "start": "160319",
    "end": "162959"
  },
  {
    "text": "before i pushed it and now you can see",
    "start": "162959",
    "end": "165120"
  },
  {
    "text": "it's only 6.24 megabytes that's about a",
    "start": "165120",
    "end": "168319"
  },
  {
    "text": "60 compression this helps reduce your",
    "start": "168319",
    "end": "171200"
  },
  {
    "text": "storage costs and also makes it faster",
    "start": "171200",
    "end": "174239"
  },
  {
    "text": "to pull images when you go to run them",
    "start": "174239",
    "end": "176720"
  },
  {
    "text": "over the life of a project we will end",
    "start": "176720",
    "end": "178720"
  },
  {
    "text": "up building a lot of images having",
    "start": "178720",
    "end": "181280"
  },
  {
    "text": "already built images available is handy",
    "start": "181280",
    "end": "184400"
  },
  {
    "text": "but there comes a point when it's",
    "start": "184400",
    "end": "185920"
  },
  {
    "text": "unlikely that you will need that build",
    "start": "185920",
    "end": "187680"
  },
  {
    "text": "artifact this is where life cycle",
    "start": "187680",
    "end": "190000"
  },
  {
    "text": "policies come in handy",
    "start": "190000",
    "end": "192000"
  },
  {
    "text": "our workflow is to push images while we",
    "start": "192000",
    "end": "194159"
  },
  {
    "text": "develop them when we merge our feature",
    "start": "194159",
    "end": "196400"
  },
  {
    "text": "branch to the development branch we will",
    "start": "196400",
    "end": "198480"
  },
  {
    "text": "tag it development with a release number",
    "start": "198480",
    "end": "201920"
  },
  {
    "text": "and then we'll tag it with development",
    "start": "201920",
    "end": "203840"
  },
  {
    "text": "by itself which is a moving tag",
    "start": "203840",
    "end": "206640"
  },
  {
    "text": "same with staging same with production",
    "start": "206640",
    "end": "209120"
  },
  {
    "text": "so you can see we have staging 2",
    "start": "209120",
    "end": "211920"
  },
  {
    "text": "production 5 development 4 and then we",
    "start": "211920",
    "end": "214879"
  },
  {
    "text": "have a lot of untagged images also that",
    "start": "214879",
    "end": "217440"
  },
  {
    "text": "were just work in progress",
    "start": "217440",
    "end": "219920"
  },
  {
    "text": "we will probably never want to roll back",
    "start": "219920",
    "end": "221760"
  },
  {
    "text": "more than a few versions of our software",
    "start": "221760",
    "end": "224159"
  },
  {
    "text": "so let's create a lifecycle policy that",
    "start": "224159",
    "end": "226239"
  },
  {
    "text": "preserves the most recent images but",
    "start": "226239",
    "end": "228319"
  },
  {
    "text": "cleans up older images that will likely",
    "start": "228319",
    "end": "230480"
  },
  {
    "text": "not be used again",
    "start": "230480",
    "end": "232400"
  },
  {
    "text": "we'll start by clicking the tab for dry",
    "start": "232400",
    "end": "235280"
  },
  {
    "text": "run of lifecycle rules",
    "start": "235280",
    "end": "238879"
  },
  {
    "text": "and let's say that we want to keep",
    "start": "238959",
    "end": "241120"
  },
  {
    "text": "ten production images",
    "start": "241120",
    "end": "243519"
  },
  {
    "text": "and five staging images and five",
    "start": "243519",
    "end": "245920"
  },
  {
    "text": "development images",
    "start": "245920",
    "end": "248640"
  },
  {
    "text": "we can add a rule",
    "start": "248640",
    "end": "251680"
  },
  {
    "text": "we give the rule a priority and a",
    "start": "251680",
    "end": "254720"
  },
  {
    "text": "description",
    "start": "254720",
    "end": "257360"
  },
  {
    "text": "we can specify a tag prefix",
    "start": "260479",
    "end": "264639"
  },
  {
    "text": "and then our match criteria is going to",
    "start": "266240",
    "end": "268160"
  },
  {
    "text": "be image count more than",
    "start": "268160",
    "end": "270639"
  },
  {
    "text": "five",
    "start": "270639",
    "end": "273040"
  },
  {
    "text": "we can do the same thing for development",
    "start": "273919",
    "end": "278120"
  },
  {
    "text": "and then remember all those untagged",
    "start": "294560",
    "end": "296400"
  },
  {
    "text": "images that were just work in progress",
    "start": "296400",
    "end": "299600"
  },
  {
    "text": "let's make a rule to clean those up also",
    "start": "299600",
    "end": "301680"
  },
  {
    "text": "let's just keep around the last 30 or so",
    "start": "301680",
    "end": "305120"
  },
  {
    "text": "so we'll add",
    "start": "305120",
    "end": "308520"
  },
  {
    "text": "[Music]",
    "start": "309330",
    "end": "316518"
  },
  {
    "text": "image count more than 30. this time",
    "start": "317039",
    "end": "319680"
  },
  {
    "text": "you'll notice i picked untagged for",
    "start": "319680",
    "end": "321919"
  },
  {
    "text": "image status",
    "start": "321919",
    "end": "324240"
  },
  {
    "text": "and save",
    "start": "324240",
    "end": "326560"
  },
  {
    "text": "if we're happy with this result",
    "start": "326560",
    "end": "328800"
  },
  {
    "text": "we just apply as life cycle policy",
    "start": "328800",
    "end": "333440"
  },
  {
    "text": "and now we have a policy in place to",
    "start": "334560",
    "end": "336479"
  },
  {
    "text": "keep our registry tidy",
    "start": "336479",
    "end": "338479"
  },
  {
    "text": "so that's how we can use amazon ecr to",
    "start": "338479",
    "end": "340720"
  },
  {
    "text": "host our docker images and automatically",
    "start": "340720",
    "end": "343280"
  },
  {
    "text": "clean up the images we don't need",
    "start": "343280",
    "end": "344880"
  },
  {
    "text": "anymore you can learn more on the aws",
    "start": "344880",
    "end": "347680"
  },
  {
    "text": "website thanks for watching",
    "start": "347680",
    "end": "352150"
  },
  {
    "text": "[Music]",
    "start": "352150",
    "end": "357039"
  },
  {
    "text": "you",
    "start": "357039",
    "end": "359120"
  }
]