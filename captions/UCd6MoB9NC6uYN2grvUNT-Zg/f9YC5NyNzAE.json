[
  {
    "text": "- Hi, everyone.",
    "start": "1110",
    "end": "2010"
  },
  {
    "text": "My name is John Russell,",
    "start": "2010",
    "end": "3240"
  },
  {
    "text": "and I'm a developer advocate with AWS.",
    "start": "3240",
    "end": "6600"
  },
  {
    "text": "I work with the Amazon Aurora database.",
    "start": "6600",
    "end": "9360"
  },
  {
    "text": "Today, I'm going to talk to you",
    "start": "9360",
    "end": "11219"
  },
  {
    "text": "about the Babelfish for\nPostgreSQL open-source project.",
    "start": "11220",
    "end": "15270"
  },
  {
    "text": "Babelfish is a project that helps you",
    "start": "15270",
    "end": "17280"
  },
  {
    "text": "to port legacy T-SQL applications",
    "start": "17280",
    "end": "19980"
  },
  {
    "text": "to a modern platform based on PostgreSQL.",
    "start": "19980",
    "end": "23253"
  },
  {
    "text": "I'll do a full walkthrough showing",
    "start": "24180",
    "end": "26040"
  },
  {
    "text": "how you can get an Aurora\nPostgreSQL database running",
    "start": "26040",
    "end": "29520"
  },
  {
    "text": "integrated with Babelfish.",
    "start": "29520",
    "end": "31173"
  },
  {
    "text": "Wouldn't it be great to\nhave one database server",
    "start": "32640",
    "end": "35220"
  },
  {
    "text": "that listened on two ports,",
    "start": "35220",
    "end": "37140"
  },
  {
    "text": "each accepting a specific SQL dialect?",
    "start": "37140",
    "end": "40800"
  },
  {
    "text": "That's what Babelfish for PostgreSQL does.",
    "start": "40800",
    "end": "43470"
  },
  {
    "text": "It listens on port 5432.",
    "start": "43470",
    "end": "46290"
  },
  {
    "text": "That's the port you\nconnect to for Postgres",
    "start": "46290",
    "end": "48360"
  },
  {
    "text": "and all iT-SQL features.",
    "start": "48360",
    "end": "50640"
  },
  {
    "text": "And it listens on port 1433.",
    "start": "50640",
    "end": "53309"
  },
  {
    "text": "That's the equivalent port",
    "start": "53310",
    "end": "54810"
  },
  {
    "text": "for the SQL dialect known as T-SQL.",
    "start": "54810",
    "end": "58470"
  },
  {
    "text": "Spoiler alert:",
    "start": "58470",
    "end": "59880"
  },
  {
    "text": "That's what we'll end up\nwith at the end of the demo.",
    "start": "59880",
    "end": "62940"
  },
  {
    "text": "This terminal session shows\nwhat that will look like",
    "start": "62940",
    "end": "65400"
  },
  {
    "text": "when the exercise is successful.",
    "start": "65400",
    "end": "67503"
  },
  {
    "text": "We'll start by going into the AWS Console",
    "start": "75420",
    "end": "77970"
  },
  {
    "text": "for the RDS service,",
    "start": "77970",
    "end": "79653"
  },
  {
    "text": "and then into the page that\nlists all of our databases.",
    "start": "84210",
    "end": "87453"
  },
  {
    "text": "As you can see right now,",
    "start": "90990",
    "end": "92280"
  },
  {
    "text": "we've got zero databases\nin this AWS region,",
    "start": "92280",
    "end": "95700"
  },
  {
    "text": "nothing for Aurora",
    "start": "95700",
    "end": "97020"
  },
  {
    "text": "or for any of the other\nkinds of RDS databases.",
    "start": "97020",
    "end": "100920"
  },
  {
    "text": "I know from reading the\nAmazon Aurora documentation",
    "start": "100920",
    "end": "103619"
  },
  {
    "text": "for using Babelfish that\nthere are some prerequisites,",
    "start": "103620",
    "end": "106770"
  },
  {
    "text": "some other things we're going",
    "start": "106770",
    "end": "108119"
  },
  {
    "text": "to need to choose or create along the way.",
    "start": "108120",
    "end": "111150"
  },
  {
    "text": "But I have confidence",
    "start": "111150",
    "end": "112410"
  },
  {
    "text": "that the AWS Console will\ndo all of that for me.",
    "start": "112410",
    "end": "115770"
  },
  {
    "text": "So I'll just dive right into\nthe Create database procedure.",
    "start": "115770",
    "end": "119253"
  },
  {
    "text": "At the end of this procedure,",
    "start": "121770",
    "end": "123240"
  },
  {
    "text": "I'll consider it a success",
    "start": "123240",
    "end": "124650"
  },
  {
    "text": "as long as I end up with\na working database server.",
    "start": "124650",
    "end": "128280"
  },
  {
    "text": "Therefore, I'm going to\npick the very minimal set",
    "start": "128280",
    "end": "130920"
  },
  {
    "text": "of options needed to\nget a database server up",
    "start": "130920",
    "end": "133530"
  },
  {
    "text": "and running with Babelfish.",
    "start": "133530",
    "end": "134943"
  },
  {
    "text": "For this first choice",
    "start": "136140",
    "end": "137190"
  },
  {
    "text": "between standard create and easy create,",
    "start": "137190",
    "end": "139740"
  },
  {
    "text": "easy create won't give us the\nchoice to turn on Babelfish,",
    "start": "139740",
    "end": "142920"
  },
  {
    "text": "so I'll stick with standard create.",
    "start": "142920",
    "end": "145263"
  },
  {
    "text": "To use Babelfish, we definitely\nhave to pick Amazon Aurora",
    "start": "146910",
    "end": "150390"
  },
  {
    "text": "as our overall database type.",
    "start": "150390",
    "end": "152313"
  },
  {
    "text": "For the edition, we want the\nPostgres-compatible Aurora.",
    "start": "156660",
    "end": "160650"
  },
  {
    "text": "Babelfish requires the\nPostgres-compatible edition.",
    "start": "160650",
    "end": "163952"
  },
  {
    "text": "There are some version prerequisites",
    "start": "165570",
    "end": "167550"
  },
  {
    "text": "for the Babelfish feature.",
    "start": "167550",
    "end": "169470"
  },
  {
    "text": "For any major feature that\nrequires particular versions,",
    "start": "169470",
    "end": "172380"
  },
  {
    "text": "it's going to have a little\nslider here under the filters.",
    "start": "172380",
    "end": "176040"
  },
  {
    "text": "We'll just show the versions",
    "start": "176040",
    "end": "177569"
  },
  {
    "text": "that make sense to use with Babelfish.",
    "start": "177570",
    "end": "179670"
  },
  {
    "text": "And now we have a very small\nset of versions to choose from.",
    "start": "179670",
    "end": "183513"
  },
  {
    "text": "I'm going to pick version 14.4.",
    "start": "184500",
    "end": "187740"
  },
  {
    "text": "Babelfish is so new and fast-moving,",
    "start": "187740",
    "end": "189690"
  },
  {
    "text": "it's always best to have the very latest",
    "start": "189690",
    "end": "191850"
  },
  {
    "text": "and greatest version.",
    "start": "191850",
    "end": "193770"
  },
  {
    "text": "The most recent major version",
    "start": "193770",
    "end": "195450"
  },
  {
    "text": "of Postgres-compatible Aurora is the one",
    "start": "195450",
    "end": "197489"
  },
  {
    "text": "that picks up all the new features.",
    "start": "197490",
    "end": "199653"
  },
  {
    "text": "I don't need a super\npowerful database server",
    "start": "201000",
    "end": "203310"
  },
  {
    "text": "because for this exercise,",
    "start": "203310",
    "end": "205560"
  },
  {
    "text": "I'm just gonna use it for a\nvery minimal proof of concept.",
    "start": "205560",
    "end": "208560"
  },
  {
    "text": "So I'll pick development and test",
    "start": "208560",
    "end": "211050"
  },
  {
    "text": "as my basic set of options.",
    "start": "211050",
    "end": "213333"
  },
  {
    "text": "For my cluster identifier,",
    "start": "215070",
    "end": "216810"
  },
  {
    "text": "I'll pick something descriptive,",
    "start": "216810",
    "end": "218730"
  },
  {
    "text": "saying it's Babelfish enabled,",
    "start": "218730",
    "end": "221310"
  },
  {
    "text": "Postgres compatible, and\nrunning Postgres version 14.",
    "start": "221310",
    "end": "225722"
  },
  {
    "text": "For the credentials settings,",
    "start": "226590",
    "end": "228209"
  },
  {
    "text": "the master username is the user",
    "start": "228210",
    "end": "230400"
  },
  {
    "text": "that I will use to connect on both ports,",
    "start": "230400",
    "end": "233040"
  },
  {
    "text": "so calling it Postgres\ndoesn't quite make sense.",
    "start": "233040",
    "end": "236250"
  },
  {
    "text": "Let's call it administrator.",
    "start": "236250",
    "end": "238110"
  },
  {
    "text": "Admin happens to be a\nreserved username for Aurora.",
    "start": "238110",
    "end": "241710"
  },
  {
    "text": "For the administrator password,",
    "start": "241710",
    "end": "243300"
  },
  {
    "text": "I'll choose something myself.",
    "start": "243300",
    "end": "245463"
  },
  {
    "text": "For the database instance class,",
    "start": "249360",
    "end": "251100"
  },
  {
    "text": "I'm going to choose something\nthat doesn't cost very much.",
    "start": "251100",
    "end": "254010"
  },
  {
    "text": "It'll be t3.large.",
    "start": "254010",
    "end": "257250"
  },
  {
    "text": "I wouldn't choose something\nwith so little RAM",
    "start": "257250",
    "end": "259140"
  },
  {
    "text": "if I was putting it into production,",
    "start": "259140",
    "end": "260700"
  },
  {
    "text": "but just to try out\nthe basic functionality",
    "start": "260700",
    "end": "263010"
  },
  {
    "text": "in a developer environment,",
    "start": "263010",
    "end": "264330"
  },
  {
    "text": "that's a low-cost option.",
    "start": "264330",
    "end": "265862"
  },
  {
    "text": "For availability and durability,",
    "start": "267570",
    "end": "269850"
  },
  {
    "text": "again, if I was going into production",
    "start": "269850",
    "end": "271680"
  },
  {
    "text": "or had business-critical data,",
    "start": "271680",
    "end": "273330"
  },
  {
    "text": "I would choose Multi-AZ deployment.",
    "start": "273330",
    "end": "276120"
  },
  {
    "text": "But for development and tests,",
    "start": "276120",
    "end": "277889"
  },
  {
    "text": "I don't need the expense of\na second database instance.",
    "start": "277890",
    "end": "281250"
  },
  {
    "text": "With the way Aurora separates\nthe compute capacity",
    "start": "281250",
    "end": "283710"
  },
  {
    "text": "from the data storage,",
    "start": "283710",
    "end": "285150"
  },
  {
    "text": "even if my test instance was destroyed,",
    "start": "285150",
    "end": "287550"
  },
  {
    "text": "I could create a new one",
    "start": "287550",
    "end": "288569"
  },
  {
    "text": "and attach it to the same cluster volume",
    "start": "288570",
    "end": "290730"
  },
  {
    "text": "that contains all my data.",
    "start": "290730",
    "end": "292590"
  },
  {
    "text": "So everything would still be safe.",
    "start": "292590",
    "end": "293940"
  },
  {
    "text": "It would just be a few minutes\nto recover, in that case.",
    "start": "293940",
    "end": "297123"
  },
  {
    "text": "I'm just going to try\nout this database server",
    "start": "298500",
    "end": "300510"
  },
  {
    "text": "from my own laptop",
    "start": "300510",
    "end": "301650"
  },
  {
    "text": "that doesn't have any\nspecial network settings.",
    "start": "301650",
    "end": "304440"
  },
  {
    "text": "So I'm not going to set up\nconnectivity to an EC2 instance,",
    "start": "304440",
    "end": "308940"
  },
  {
    "text": "although that is an intriguing\noption that's fairly new.",
    "start": "308940",
    "end": "312180"
  },
  {
    "text": "If you run database\napplications or SQL clients",
    "start": "312180",
    "end": "315300"
  },
  {
    "text": "on an EC2 instance, you\nshould try out this setting.",
    "start": "315300",
    "end": "317900"
  },
  {
    "text": "I will use the default VPC\nthat I have for this region",
    "start": "320400",
    "end": "324150"
  },
  {
    "text": "and the default subnet group.",
    "start": "324150",
    "end": "326759"
  },
  {
    "text": "These are things that I didn't\nhave to consciously create.",
    "start": "326760",
    "end": "329880"
  },
  {
    "text": "They already exist in this region.",
    "start": "329880",
    "end": "333330"
  },
  {
    "text": "For public access, I'll say Yes.",
    "start": "333330",
    "end": "336270"
  },
  {
    "text": "As I said, I do want to connect",
    "start": "336270",
    "end": "338039"
  },
  {
    "text": "to this server from my laptop,",
    "start": "338040",
    "end": "340020"
  },
  {
    "text": "which is not inside any\nVPN or corporate firewall.",
    "start": "340020",
    "end": "343413"
  },
  {
    "text": "Let me emphasize that the\nbest practice is definitely",
    "start": "344370",
    "end": "346919"
  },
  {
    "text": "to pick No here.",
    "start": "346920",
    "end": "348900"
  },
  {
    "text": "For this demo, it's not\na production system,",
    "start": "348900",
    "end": "351780"
  },
  {
    "text": "not business-critical data,",
    "start": "351780",
    "end": "353820"
  },
  {
    "text": "no personally identifiable or\nother sensitive information.",
    "start": "353820",
    "end": "357840"
  },
  {
    "text": "I'm just trying out the functionality,",
    "start": "357840",
    "end": "359730"
  },
  {
    "text": "sort of a \"Hello, World!\"",
    "start": "359730",
    "end": "361380"
  },
  {
    "text": "for both of the SQL dialects\nI want to demonstrate.",
    "start": "361380",
    "end": "364530"
  },
  {
    "text": "And I'm going to delete\nthe database server",
    "start": "364530",
    "end": "366510"
  },
  {
    "text": "at the end of the demo.",
    "start": "366510",
    "end": "367660"
  },
  {
    "text": "For security, I am going to\ncreate a new security group.",
    "start": "369090",
    "end": "372750"
  },
  {
    "text": "And in there, I'll specify\nthat only my one IP address",
    "start": "372750",
    "end": "376380"
  },
  {
    "text": "is able to connect to\nthis database server.",
    "start": "376380",
    "end": "379260"
  },
  {
    "text": "I'll give the security group a name",
    "start": "379260",
    "end": "381240"
  },
  {
    "text": "that makes clear that it's\nonly for this one demo cluster.",
    "start": "381240",
    "end": "384693"
  },
  {
    "text": "Availability zone.",
    "start": "386070",
    "end": "387570"
  },
  {
    "text": "I think AWS can make a better\nchoice for that than I can.",
    "start": "387570",
    "end": "390540"
  },
  {
    "text": "We'll leave that alone. No preference.",
    "start": "390540",
    "end": "392673"
  },
  {
    "text": "Database port.",
    "start": "393600",
    "end": "394980"
  },
  {
    "text": "I'll use 5432",
    "start": "394980",
    "end": "396900"
  },
  {
    "text": "because that's the\nwell-known port for Postgres.",
    "start": "396900",
    "end": "400410"
  },
  {
    "text": "Every Babelfish-enabled\nAurora cluster uses Postgres",
    "start": "400410",
    "end": "403770"
  },
  {
    "text": "as its database engine.",
    "start": "403770",
    "end": "405423"
  },
  {
    "text": "Now, here's the part that's unique",
    "start": "406380",
    "end": "408120"
  },
  {
    "text": "for using Babelfish with Aurora.",
    "start": "408120",
    "end": "410940"
  },
  {
    "text": "Check this checkbox,",
    "start": "410940",
    "end": "413160"
  },
  {
    "text": "and that turns on Babelfish\nsupport in this cluster.",
    "start": "413160",
    "end": "417390"
  },
  {
    "text": "It also brings up some other\nchoices related to Babelfish.",
    "start": "417390",
    "end": "420960"
  },
  {
    "text": "And all of those choices get\nsaved in the parameter group",
    "start": "420960",
    "end": "424350"
  },
  {
    "text": "so you can reuse them for\nother database clusters.",
    "start": "424350",
    "end": "427383"
  },
  {
    "text": "Those other Babelfish choices\nappear a bit farther down.",
    "start": "428790",
    "end": "432090"
  },
  {
    "text": "We'll set some other\noptions in the meantime.",
    "start": "432090",
    "end": "434340"
  },
  {
    "text": "For a throwaway database\ninstance for this demo,",
    "start": "435600",
    "end": "438720"
  },
  {
    "text": "I'll just use basic\npassword authentication.",
    "start": "438720",
    "end": "442140"
  },
  {
    "text": "Because I'm keeping costs slow",
    "start": "442140",
    "end": "443970"
  },
  {
    "text": "and I'm using a database instance class",
    "start": "443970",
    "end": "446160"
  },
  {
    "text": "that has relatively little memory,",
    "start": "446160",
    "end": "448380"
  },
  {
    "text": "I'm gonna turn off any feature",
    "start": "448380",
    "end": "449880"
  },
  {
    "text": "that isn't needed for the\nbasic functionality testing",
    "start": "449880",
    "end": "452580"
  },
  {
    "text": "in this demo.",
    "start": "452580",
    "end": "453960"
  },
  {
    "text": "I'll turn off things that require memory",
    "start": "453960",
    "end": "456240"
  },
  {
    "text": "or storage like performance insights",
    "start": "456240",
    "end": "458550"
  },
  {
    "text": "and enhanced monitoring,",
    "start": "458550",
    "end": "460409"
  },
  {
    "text": "even though I would enable them",
    "start": "460410",
    "end": "461940"
  },
  {
    "text": "if I were using this server",
    "start": "461940",
    "end": "463410"
  },
  {
    "text": "for real performance or development work.",
    "start": "463410",
    "end": "465933"
  },
  {
    "text": "Now, the only choice here\nfor cluster parameter group",
    "start": "467580",
    "end": "471210"
  },
  {
    "text": "is to create new",
    "start": "471210",
    "end": "473100"
  },
  {
    "text": "because I haven't done anything\nin this region up to now.",
    "start": "473100",
    "end": "476160"
  },
  {
    "text": "So there is no existing\nparameter group to pick.",
    "start": "476160",
    "end": "479370"
  },
  {
    "text": "The console is going to create\nthe new parameter group.",
    "start": "479370",
    "end": "482070"
  },
  {
    "text": "And it's already picked out a name",
    "start": "482070",
    "end": "483960"
  },
  {
    "text": "based on the name I\nchose for this cluster.",
    "start": "483960",
    "end": "486242"
  },
  {
    "text": "For my experiments,",
    "start": "487597",
    "end": "488849"
  },
  {
    "text": "I might want to create\nseveral databases all",
    "start": "488850",
    "end": "491250"
  },
  {
    "text": "in the same server.",
    "start": "491250",
    "end": "492990"
  },
  {
    "text": "I'll choose the multi database option.",
    "start": "492990",
    "end": "495509"
  },
  {
    "text": "That'll give me flexibility to be able",
    "start": "495510",
    "end": "497160"
  },
  {
    "text": "to create multiple databases\nusing the T-SQL side of things.",
    "start": "497160",
    "end": "501813"
  },
  {
    "text": "The Babelfish TDS port will leave as 1433.",
    "start": "503220",
    "end": "507630"
  },
  {
    "text": "That's the familiar port for T-SQL.",
    "start": "507630",
    "end": "510363"
  },
  {
    "text": "All the Babelfish-specific settings are",
    "start": "511590",
    "end": "513779"
  },
  {
    "text": "in the cluster parameter group.",
    "start": "513780",
    "end": "515700"
  },
  {
    "text": "Therefore, the DB parameter group,",
    "start": "515700",
    "end": "517680"
  },
  {
    "text": "which is more for diagnostics\nand troubleshooting settings,",
    "start": "517680",
    "end": "521370"
  },
  {
    "text": "we'll leave as the default.",
    "start": "521370",
    "end": "522783"
  },
  {
    "text": "Because I only have a\nsingle database instance",
    "start": "523740",
    "end": "526230"
  },
  {
    "text": "that I'm creating, remember,",
    "start": "526230",
    "end": "527820"
  },
  {
    "text": "I didn't pick the Multi-AZ option earlier,",
    "start": "527820",
    "end": "530940"
  },
  {
    "text": "failover priority isn't relevant.",
    "start": "530940",
    "end": "533490"
  },
  {
    "text": "For backup retention period,",
    "start": "533490",
    "end": "535290"
  },
  {
    "text": "I'll choose something very short",
    "start": "535290",
    "end": "537060"
  },
  {
    "text": "because I'm going to delete\nthis database cluster",
    "start": "537060",
    "end": "539310"
  },
  {
    "text": "after the demo.",
    "start": "539310",
    "end": "540273"
  },
  {
    "text": "Encryption I'll turn off.",
    "start": "541500",
    "end": "543270"
  },
  {
    "text": "For this simple demo,",
    "start": "543270",
    "end": "545070"
  },
  {
    "text": "no need to deal with encryption keys.",
    "start": "545070",
    "end": "547233"
  },
  {
    "text": "Log exports.",
    "start": "548610",
    "end": "549630"
  },
  {
    "text": "Let's turn that on",
    "start": "549630",
    "end": "550800"
  },
  {
    "text": "so that I can examine what's\nhappening behind the scenes",
    "start": "550800",
    "end": "553589"
  },
  {
    "text": "and see any kind of errors",
    "start": "553590",
    "end": "555420"
  },
  {
    "text": "that are being generated\nduring the cluster setup.",
    "start": "555420",
    "end": "558839"
  },
  {
    "text": "Although this is going to be a\nshort-lived database cluster,",
    "start": "558840",
    "end": "562950"
  },
  {
    "text": "so I don't expect there\nto be any upgrades needed,",
    "start": "562950",
    "end": "565680"
  },
  {
    "text": "but automatic minor version\nupgrades is a nice setting",
    "start": "565680",
    "end": "568620"
  },
  {
    "text": "to have enabled, so I'll leave that on.",
    "start": "568620",
    "end": "570753"
  },
  {
    "text": "Maintenance window.",
    "start": "571950",
    "end": "572783"
  },
  {
    "text": "That's not really relevant, in this case.",
    "start": "572783",
    "end": "575043"
  },
  {
    "text": "Deletion protection I leave turned off",
    "start": "576450",
    "end": "579090"
  },
  {
    "text": "because I may even delete this\ndatabase server the same day",
    "start": "579090",
    "end": "582030"
  },
  {
    "text": "that I create it.",
    "start": "582030",
    "end": "583203"
  },
  {
    "text": "I probably will run through\nthis process more than once,",
    "start": "584820",
    "end": "587760"
  },
  {
    "text": "perhaps making other choices,",
    "start": "587760",
    "end": "589950"
  },
  {
    "text": "as I learn what's really\nappropriate during my experiments.",
    "start": "589950",
    "end": "593133"
  },
  {
    "text": "Let's go ahead and create\nthe database server.",
    "start": "594030",
    "end": "597270"
  },
  {
    "text": "In Aurora terminology,\nI'm creating a cluster,",
    "start": "597270",
    "end": "601170"
  },
  {
    "text": "even though I only asked",
    "start": "601170",
    "end": "602459"
  },
  {
    "text": "to create a single database instance.",
    "start": "602460",
    "end": "604893"
  },
  {
    "text": "What we end up with back\nin the list of databases",
    "start": "610560",
    "end": "613260"
  },
  {
    "text": "is the Aurora cluster.",
    "start": "613260",
    "end": "615540"
  },
  {
    "text": "That's the top-level object\nthat manages the storage",
    "start": "615540",
    "end": "618269"
  },
  {
    "text": "in one or more database instances.",
    "start": "618270",
    "end": "620883"
  },
  {
    "text": "Underneath that cluster is\nmy single database instance.",
    "start": "621900",
    "end": "625770"
  },
  {
    "text": "As I said, for my development\nand test environment,",
    "start": "625770",
    "end": "628560"
  },
  {
    "text": "I'm not prioritizing high availability.",
    "start": "628560",
    "end": "631650"
  },
  {
    "text": "If I was, I would've chosen Multi-AZ",
    "start": "631650",
    "end": "634020"
  },
  {
    "text": "back in the create database settings.",
    "start": "634020",
    "end": "636570"
  },
  {
    "text": "And then there would be\ntwo database instances",
    "start": "636570",
    "end": "638790"
  },
  {
    "text": "in the cluster, with the\nsecond ready to take over",
    "start": "638790",
    "end": "641459"
  },
  {
    "text": "from the first in case\nof a hardware failure",
    "start": "641460",
    "end": "643740"
  },
  {
    "text": "or data center outage.",
    "start": "643740",
    "end": "645483"
  },
  {
    "text": "Now the cluster and its database instance",
    "start": "653490",
    "end": "655620"
  },
  {
    "text": "have both been created successfully.",
    "start": "655620",
    "end": "657903"
  },
  {
    "text": "Let's make sure that we\nhave everything we'll need",
    "start": "658830",
    "end": "660990"
  },
  {
    "text": "to be able to connect.",
    "start": "660990",
    "end": "662193"
  },
  {
    "text": "First, we'll retrieve the details",
    "start": "664590",
    "end": "666900"
  },
  {
    "text": "that we'll need for connection parameters",
    "start": "666900",
    "end": "668730"
  },
  {
    "text": "or connection strings.",
    "start": "668730",
    "end": "671040"
  },
  {
    "text": "We'll need to know the writer endpoint,",
    "start": "671040",
    "end": "673199"
  },
  {
    "text": "also known as the cluster endpoint.",
    "start": "673200",
    "end": "675483"
  },
  {
    "text": "That's what we'll plug in as\nthe host name, or server name,",
    "start": "677310",
    "end": "680520"
  },
  {
    "text": "when we're specifying connection settings",
    "start": "680520",
    "end": "682500"
  },
  {
    "text": "for a client program.",
    "start": "682500",
    "end": "683703"
  },
  {
    "text": "We'll also need to know the\nname of a user to log in as.",
    "start": "686400",
    "end": "690510"
  },
  {
    "text": "Aurora created one, the\nadministrative user,",
    "start": "690510",
    "end": "693450"
  },
  {
    "text": "during the create database process.",
    "start": "693450",
    "end": "696450"
  },
  {
    "text": "In this case, the name that I chose during",
    "start": "696450",
    "end": "698850"
  },
  {
    "text": "the create database\nprocess was administrator.",
    "start": "698850",
    "end": "702183"
  },
  {
    "text": "I would create other users\nwith their own passwords",
    "start": "703650",
    "end": "706200"
  },
  {
    "text": "and permissions inside the database",
    "start": "706200",
    "end": "709500"
  },
  {
    "text": "through SQL if I was using\nthis database for real work.",
    "start": "709500",
    "end": "713493"
  },
  {
    "text": "The other thing to double\ncheck for connectivity",
    "start": "715650",
    "end": "717930"
  },
  {
    "text": "is the security group.",
    "start": "717930",
    "end": "720270"
  },
  {
    "text": "That's associated with\nthe database instance,",
    "start": "720270",
    "end": "722913"
  },
  {
    "text": "which we see down here.",
    "start": "723810",
    "end": "725043"
  },
  {
    "text": "In fact, this aspect of\nthe network configuration",
    "start": "726360",
    "end": "729209"
  },
  {
    "text": "is part of the EC2 service.",
    "start": "729210",
    "end": "731553"
  },
  {
    "text": "You use the same mechanism to allow",
    "start": "732390",
    "end": "734580"
  },
  {
    "text": "or block network access to EC2 instances",
    "start": "734580",
    "end": "738600"
  },
  {
    "text": "and RDS and Aurora database instances.",
    "start": "738600",
    "end": "742170"
  },
  {
    "text": "This security group is being created",
    "start": "742170",
    "end": "744060"
  },
  {
    "text": "as part of the creation\nprocess in the console.",
    "start": "744060",
    "end": "746913"
  },
  {
    "text": "And this is going to define",
    "start": "747870",
    "end": "749310"
  },
  {
    "text": "who exactly is allowed to\nconnect to the database,",
    "start": "749310",
    "end": "752640"
  },
  {
    "text": "not from a password point of view,",
    "start": "752640",
    "end": "754770"
  },
  {
    "text": "but from a network perspective.",
    "start": "754770",
    "end": "756843"
  },
  {
    "text": "The way that we fine tune\nthe security group settings",
    "start": "757980",
    "end": "761100"
  },
  {
    "text": "is by doing Edit inbound rules.",
    "start": "761100",
    "end": "764399"
  },
  {
    "text": "We see that the create cluster dialogue",
    "start": "764400",
    "end": "766530"
  },
  {
    "text": "in the console has\nautomatically created a rule",
    "start": "766530",
    "end": "769290"
  },
  {
    "text": "for Postgres traffic on port 5432.",
    "start": "769290",
    "end": "773282"
  },
  {
    "text": "It's detected my own IP address",
    "start": "775050",
    "end": "777390"
  },
  {
    "text": "that I'm coming in through.",
    "start": "777390",
    "end": "778740"
  },
  {
    "text": "32 is the most restrictive number",
    "start": "780330",
    "end": "782310"
  },
  {
    "text": "that you can put as the suffix here.",
    "start": "782310",
    "end": "784770"
  },
  {
    "text": "That means that IP address",
    "start": "784770",
    "end": "786600"
  },
  {
    "text": "and only that IP address\nis allowed network access",
    "start": "786600",
    "end": "789720"
  },
  {
    "text": "to that database server.",
    "start": "789720",
    "end": "791160"
  },
  {
    "text": "No IP ranges.",
    "start": "791160",
    "end": "793022"
  },
  {
    "text": "Now I'm going to want to\nconnect to the T-SQL port.",
    "start": "794460",
    "end": "798420"
  },
  {
    "text": "I'm going to add another rule.",
    "start": "798420",
    "end": "800639"
  },
  {
    "text": "That one is labeled MSSQL.",
    "start": "800640",
    "end": "803403"
  },
  {
    "text": "It's for port 1433.",
    "start": "805620",
    "end": "808560"
  },
  {
    "text": "That's for the T-SQL dialect.",
    "start": "808560",
    "end": "810873"
  },
  {
    "text": "We'll specify again that\nonly my IP address is allowed",
    "start": "814080",
    "end": "817650"
  },
  {
    "text": "to connect to that database server.",
    "start": "817650",
    "end": "819513"
  },
  {
    "text": "Other IP addresses won't\neven be able to ping it.",
    "start": "820530",
    "end": "823590"
  },
  {
    "text": "They won't know it exists.",
    "start": "823590",
    "end": "825093"
  },
  {
    "text": "Locking down the security group tightly.",
    "start": "825990",
    "end": "828120"
  },
  {
    "text": "That's the secret anytime\nthe public accessibility flag",
    "start": "828120",
    "end": "831420"
  },
  {
    "text": "is turned on.",
    "start": "831420",
    "end": "832263"
  },
  {
    "text": "Once I save these changes\nto the security group,",
    "start": "833400",
    "end": "836400"
  },
  {
    "text": "everything should be in place to log",
    "start": "836400",
    "end": "838200"
  },
  {
    "text": "into our Babelfish-enabled Aurora cluster.",
    "start": "838200",
    "end": "841353"
  },
  {
    "text": "At this point, if I was\nacting as an administrator,",
    "start": "842430",
    "end": "845520"
  },
  {
    "text": "I might declare victory\nand stop right there.",
    "start": "845520",
    "end": "848760"
  },
  {
    "text": "With Aurora, you don't\nneed to actually connect",
    "start": "848760",
    "end": "851190"
  },
  {
    "text": "to the database for a lot\nof the administration.",
    "start": "851190",
    "end": "854700"
  },
  {
    "text": "As an administrator, you\ncan use the RDS Console",
    "start": "854700",
    "end": "857760"
  },
  {
    "text": "to create configure,\nbackup, restore, monitor,",
    "start": "857760",
    "end": "862110"
  },
  {
    "text": "do all those sorts of things\nto the database server",
    "start": "862110",
    "end": "864839"
  },
  {
    "text": "without actually being able\nto read or change the data.",
    "start": "864840",
    "end": "868143"
  },
  {
    "text": "But for this demo, I'm\nacting as a developer.",
    "start": "869550",
    "end": "872700"
  },
  {
    "text": "I'm going to go the\nextra step of connecting",
    "start": "872700",
    "end": "874710"
  },
  {
    "text": "and running some SQL in both dialects.",
    "start": "874710",
    "end": "877680"
  },
  {
    "text": "That's why I configured the security group",
    "start": "877680",
    "end": "880140"
  },
  {
    "text": "to be able to connect to the\ndatabase server from my laptop.",
    "start": "880140",
    "end": "883140"
  },
  {
    "text": "I'm going to connect to\nboth the PostgreSQL port",
    "start": "884280",
    "end": "886980"
  },
  {
    "text": "and the T-SQL port,",
    "start": "886980",
    "end": "888480"
  },
  {
    "text": "and demonstrate that the database server",
    "start": "888480",
    "end": "891269"
  },
  {
    "text": "can process both SQL dialects.",
    "start": "891270",
    "end": "894570"
  },
  {
    "text": "For this final part of the demo,",
    "start": "894570",
    "end": "896460"
  },
  {
    "text": "we'll switch out of the console",
    "start": "896460",
    "end": "897900"
  },
  {
    "text": "and over into a terminal window.",
    "start": "897900",
    "end": "900150"
  },
  {
    "text": "I'll use the SQL Command client for T-SQL",
    "start": "900150",
    "end": "904530"
  },
  {
    "text": "and the psql client for Postgres.",
    "start": "904530",
    "end": "907680"
  },
  {
    "text": "Both of these clients are available",
    "start": "907680",
    "end": "909180"
  },
  {
    "text": "for Windows, Linux, and Mac.",
    "start": "909180",
    "end": "911430"
  },
  {
    "text": "So you can follow these\nsame steps no matter",
    "start": "911430",
    "end": "913470"
  },
  {
    "text": "which platform you're familiar with.",
    "start": "913470",
    "end": "915543"
  },
  {
    "text": "The big benefit of Babelfish",
    "start": "919530",
    "end": "921180"
  },
  {
    "text": "is the way it understands\nthe T-SQL dialect",
    "start": "921180",
    "end": "924089"
  },
  {
    "text": "and the TDS protocol.",
    "start": "924090",
    "end": "925950"
  },
  {
    "text": "So let's take a look at that first.",
    "start": "925950",
    "end": "927993"
  },
  {
    "text": "Back in the console,",
    "start": "928860",
    "end": "929970"
  },
  {
    "text": "I copied the connection settings,",
    "start": "929970",
    "end": "931560"
  },
  {
    "text": "like the host name and\nthe administrator user ID.",
    "start": "931560",
    "end": "934323"
  },
  {
    "text": "I've assigned those to\nenvironment variables.",
    "start": "935310",
    "end": "937620"
  },
  {
    "text": "I'll pass those values as parameters",
    "start": "937620",
    "end": "939779"
  },
  {
    "text": "to both the T-SQL and\nPostgres client programs.",
    "start": "939780",
    "end": "943563"
  },
  {
    "text": "I'll run a few statements\nto show some things",
    "start": "944550",
    "end": "946589"
  },
  {
    "text": "that will look familiar\nto someone who uses T-SQL:",
    "start": "946590",
    "end": "949293"
  },
  {
    "text": "executing statements with go,",
    "start": "950850",
    "end": "952953"
  },
  {
    "text": "a built-in function;",
    "start": "955200",
    "end": "956463"
  },
  {
    "text": "creating a table, and then querying;",
    "start": "958680",
    "end": "961412"
  },
  {
    "text": "getting the list of available databases;",
    "start": "980100",
    "end": "982712"
  },
  {
    "text": "and checking which\ndatabase I'm currently in.",
    "start": "985200",
    "end": "987453"
  },
  {
    "text": "Now I'll connect to the\nPostgreSQL server using",
    "start": "993900",
    "end": "996810"
  },
  {
    "text": "the psql client program.",
    "start": "996810",
    "end": "999600"
  },
  {
    "text": "Again, my connection parameters\ninclude the host name",
    "start": "999600",
    "end": "1002600"
  },
  {
    "text": "and administrative user\nof my database server.",
    "start": "1002600",
    "end": "1005209"
  },
  {
    "text": "I copied those out of the AWS Console.",
    "start": "1005210",
    "end": "1008453"
  },
  {
    "text": "psql uses port 5432 by default.",
    "start": "1009410",
    "end": "1013579"
  },
  {
    "text": "Postgres database\nservers typically contain",
    "start": "1013580",
    "end": "1015950"
  },
  {
    "text": "a default database named postgres.",
    "start": "1015950",
    "end": "1017930"
  },
  {
    "text": "So that's the database I'll start off in.",
    "start": "1017930",
    "end": "1020273"
  },
  {
    "text": "In Postgres, I can run the\nsame types of statements",
    "start": "1021110",
    "end": "1023660"
  },
  {
    "text": "as in the T-SQL session,",
    "start": "1023660",
    "end": "1026270"
  },
  {
    "text": "but now using Postgres syntax,",
    "start": "1026270",
    "end": "1028370"
  },
  {
    "text": "function names, meta commands, and so on.",
    "start": "1028370",
    "end": "1030983"
  },
  {
    "text": "In the list of my databases,",
    "start": "1031910",
    "end": "1033319"
  },
  {
    "text": "one of them really jumps out:",
    "start": "1033320",
    "end": "1034939"
  },
  {
    "text": "babelfish_db.",
    "start": "1034940",
    "end": "1037129"
  },
  {
    "text": "That's the database\ncontaining all the tables",
    "start": "1037130",
    "end": "1039319"
  },
  {
    "text": "and metadata for the Babelfish support.",
    "start": "1039320",
    "end": "1042169"
  },
  {
    "text": "I'll connect to that database\nand browse around there.",
    "start": "1042170",
    "end": "1044933"
  },
  {
    "text": "In terms of the PostgreSQL structure,",
    "start": "1045800",
    "end": "1048199"
  },
  {
    "text": "there are several schemas\ninside the database.",
    "start": "1048200",
    "end": "1051529"
  },
  {
    "text": "master_dbo holds all the schema objects",
    "start": "1051530",
    "end": "1054680"
  },
  {
    "text": "that were in the master database",
    "start": "1054680",
    "end": "1056270"
  },
  {
    "text": "that we saw in the T-SQL session.",
    "start": "1056270",
    "end": "1059150"
  },
  {
    "text": "Here are the tables that are\nin the master_dbo schema.",
    "start": "1059150",
    "end": "1062450"
  },
  {
    "text": "See how some of the column\ntypes are user defined,",
    "start": "1062450",
    "end": "1065210"
  },
  {
    "text": "like sys.tinyint and sys.datetime?",
    "start": "1065210",
    "end": "1068929"
  },
  {
    "text": "Babelfish defines these types in Postgres",
    "start": "1068930",
    "end": "1071630"
  },
  {
    "text": "to match the semantics of the\ncorresponding types in T-SQL.",
    "start": "1071630",
    "end": "1076040"
  },
  {
    "text": "Seeing the schemas with Babelfish names",
    "start": "1076040",
    "end": "1078530"
  },
  {
    "text": "and the information schema suggests",
    "start": "1078530",
    "end": "1080480"
  },
  {
    "text": "to me that creating objects\nand data running DDL",
    "start": "1080480",
    "end": "1084010"
  },
  {
    "text": "and DML in T-SQL is actually\nsetting up extra metadata",
    "start": "1084010",
    "end": "1089010"
  },
  {
    "text": "that I don't fully understand yet.",
    "start": "1089540",
    "end": "1091970"
  },
  {
    "text": "So until I read more\nabout interoperability,",
    "start": "1091970",
    "end": "1095210"
  },
  {
    "text": "I'm going to do all DDL\nand DML on the T-SQL side",
    "start": "1095210",
    "end": "1100210"
  },
  {
    "text": "and only run queries on\nthat data from Postgres.",
    "start": "1100280",
    "end": "1103523"
  },
  {
    "text": "Here's a query in Postgres",
    "start": "1104540",
    "end": "1106040"
  },
  {
    "text": "to read the table that was\ncreated and populated in T-SQL.",
    "start": "1106040",
    "end": "1110183"
  },
  {
    "text": "That's the end of my demo\nof Aurora plus Babelfish.",
    "start": "1112370",
    "end": "1116450"
  },
  {
    "text": "But wait, there's one more thing.",
    "start": "1116450",
    "end": "1118850"
  },
  {
    "text": "Remember, I'm a developer",
    "start": "1118850",
    "end": "1120320"
  },
  {
    "text": "who's just trying out this\ntechnology for the first time.",
    "start": "1120320",
    "end": "1123740"
  },
  {
    "text": "I don't need to leave\nthis server running 24/7.",
    "start": "1123740",
    "end": "1126740"
  },
  {
    "text": "That would cost money.",
    "start": "1126740",
    "end": "1127840"
  },
  {
    "text": "Here's what you can do",
    "start": "1128810",
    "end": "1129800"
  },
  {
    "text": "if you don't need to\nuse the server overnight",
    "start": "1129800",
    "end": "1131990"
  },
  {
    "text": "or over the weekend,",
    "start": "1131990",
    "end": "1133400"
  },
  {
    "text": "or when you're entirely finished with it.",
    "start": "1133400",
    "end": "1136130"
  },
  {
    "text": "There's a stop action that\napplies to each Aurora cluster.",
    "start": "1136130",
    "end": "1139733"
  },
  {
    "text": "You don't get billed for\ndatabase instance hours",
    "start": "1140990",
    "end": "1144110"
  },
  {
    "text": "while the cluster is stopped.",
    "start": "1144110",
    "end": "1146059"
  },
  {
    "text": "It typically takes a few\nminutes to stop the cluster",
    "start": "1146060",
    "end": "1148640"
  },
  {
    "text": "and a few minutes to start\nit again when you need it.",
    "start": "1148640",
    "end": "1151640"
  },
  {
    "text": "Aurora auto starts the\ncluster after seven days",
    "start": "1151640",
    "end": "1155390"
  },
  {
    "text": "because if you could\nleave it stopped forever,",
    "start": "1155390",
    "end": "1157730"
  },
  {
    "text": "it would fall behind in\nterms of software updates",
    "start": "1157730",
    "end": "1160070"
  },
  {
    "text": "and other maintenance.",
    "start": "1160070",
    "end": "1161690"
  },
  {
    "text": "But this is a convenient way to cut costs",
    "start": "1161690",
    "end": "1164659"
  },
  {
    "text": "when your dev test\ndatabases idle overnight,",
    "start": "1164660",
    "end": "1167660"
  },
  {
    "text": "over the weekend, or\nwhile you're on vacation.",
    "start": "1167660",
    "end": "1170303"
  },
  {
    "text": "If you don't need the database\ncluster at all anymore,",
    "start": "1173210",
    "end": "1175669"
  },
  {
    "text": "you can delete it.",
    "start": "1175670",
    "end": "1177260"
  },
  {
    "text": "When trying out some new technology,",
    "start": "1177260",
    "end": "1179510"
  },
  {
    "text": "you might go through several cycles",
    "start": "1179510",
    "end": "1181100"
  },
  {
    "text": "of creating Aurora clusters\nwith different settings",
    "start": "1181100",
    "end": "1184220"
  },
  {
    "text": "and deleting the earlier ones.",
    "start": "1184220",
    "end": "1186470"
  },
  {
    "text": "In the AWS Console,",
    "start": "1186470",
    "end": "1187970"
  },
  {
    "text": "you can add or remove\nmultiple database instances",
    "start": "1187970",
    "end": "1191480"
  },
  {
    "text": "from an Aurora cluster.",
    "start": "1191480",
    "end": "1193520"
  },
  {
    "text": "When you delete the last database\ninstance from the cluster,",
    "start": "1193520",
    "end": "1197480"
  },
  {
    "text": "that has the effect of\ndeleting the cluster too.",
    "start": "1197480",
    "end": "1200333"
  },
  {
    "text": "If you're using the AWS\nCommand Line Interface,",
    "start": "1201380",
    "end": "1204110"
  },
  {
    "text": "you actually have to do\nan extra step yourself",
    "start": "1204110",
    "end": "1206840"
  },
  {
    "text": "to delete the cluster",
    "start": "1206840",
    "end": "1207830"
  },
  {
    "text": "after all the database instances are gone.",
    "start": "1207830",
    "end": "1210380"
  },
  {
    "text": "This extra choice of\n\"Create final snapshot?\"",
    "start": "1210380",
    "end": "1213710"
  },
  {
    "text": "is asking whether there's any data",
    "start": "1213710",
    "end": "1215299"
  },
  {
    "text": "in this cluster that's worth preserving,",
    "start": "1215300",
    "end": "1217820"
  },
  {
    "text": "in case you want to set\nup the same data again",
    "start": "1217820",
    "end": "1220130"
  },
  {
    "text": "in the future.",
    "start": "1220130",
    "end": "1221660"
  },
  {
    "text": "For my demo instance where I\nonly had that one toy table,",
    "start": "1221660",
    "end": "1225620"
  },
  {
    "text": "I say No.",
    "start": "1225620",
    "end": "1227300"
  },
  {
    "text": "If I had loaded hundreds\nof gigabytes of data",
    "start": "1227300",
    "end": "1229340"
  },
  {
    "text": "to use in benchmarks, I'd say Yes.",
    "start": "1229340",
    "end": "1232340"
  },
  {
    "text": "Then, instead of going through\nthe create database dialogue,",
    "start": "1232340",
    "end": "1235610"
  },
  {
    "text": "I do restore snapshot\nto create a new cluster",
    "start": "1235610",
    "end": "1238970"
  },
  {
    "text": "with that same data.",
    "start": "1238970",
    "end": "1240143"
  },
  {
    "text": "At the end of this video,",
    "start": "1244522",
    "end": "1245840"
  },
  {
    "text": "I hope you understand the basic steps",
    "start": "1245840",
    "end": "1247820"
  },
  {
    "text": "of getting ready to use\nBabelfish With Amazon Aurora.",
    "start": "1247820",
    "end": "1251600"
  },
  {
    "text": "Now you can start migrating\nand running T-SQL applications.",
    "start": "1251600",
    "end": "1255830"
  },
  {
    "text": "I'll explore that subject in\nmore depth in future videos.",
    "start": "1255830",
    "end": "1259640"
  },
  {
    "text": "Thanks, everybody, for watching,",
    "start": "1259640",
    "end": "1261410"
  },
  {
    "text": "and good luck with\nBabelfish for PostgreSQL.",
    "start": "1261410",
    "end": "1265600"
  }
]