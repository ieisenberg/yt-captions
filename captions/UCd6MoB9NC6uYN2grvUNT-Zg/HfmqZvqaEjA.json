[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "- [Instructor] In this video,",
    "start": "150",
    "end": "990"
  },
  {
    "text": "you'll see how to improve\napplication performance",
    "start": "990",
    "end": "3390"
  },
  {
    "text": "with Amazon CloudWatch\nApplication Signals.",
    "start": "3390",
    "end": "6870"
  },
  {
    "text": "With this feature,",
    "start": "6870",
    "end": "8010"
  },
  {
    "text": "you can automatically instrument\nyour applications on AWS,",
    "start": "8010",
    "end": "12000"
  },
  {
    "text": "so you can track their performance",
    "start": "12000",
    "end": "13530"
  },
  {
    "text": "against business objectives",
    "start": "13530",
    "end": "15000"
  },
  {
    "text": "and prioritize incident response.",
    "start": "15000",
    "end": "17433"
  },
  {
    "start": "19000",
    "end": "81000"
  },
  {
    "text": "This is the Amazon CloudWatch Console.",
    "start": "19664",
    "end": "22590"
  },
  {
    "text": "To get started,",
    "start": "22590",
    "end": "23520"
  },
  {
    "text": "let's look at how to\nenable Application Signals.",
    "start": "23520",
    "end": "25983"
  },
  {
    "text": "First, we need to specify",
    "start": "27270",
    "end": "28860"
  },
  {
    "text": "the platform of our application services.",
    "start": "28860",
    "end": "31350"
  },
  {
    "text": "We can choose Amazon\nElastic Kubernetes service,",
    "start": "31350",
    "end": "34230"
  },
  {
    "text": "or a custom platform.",
    "start": "34230",
    "end": "36360"
  },
  {
    "text": "In this case, we'll keep EKS selected,",
    "start": "36360",
    "end": "38610"
  },
  {
    "text": "and specify an existing EKS cluster.",
    "start": "38610",
    "end": "41313"
  },
  {
    "text": "Note that the CloudWatch\nObservability EKS add-on",
    "start": "42630",
    "end": "45750"
  },
  {
    "text": "has been successfully created.",
    "start": "45750",
    "end": "47700"
  },
  {
    "text": "This add-on is required",
    "start": "47700",
    "end": "48930"
  },
  {
    "text": "to send telemetry data to CloudWatch.",
    "start": "48930",
    "end": "50883"
  },
  {
    "text": "To configure application\nmetrics and trace sampling,",
    "start": "52320",
    "end": "55290"
  },
  {
    "text": "we must add the following annotation",
    "start": "55290",
    "end": "57180"
  },
  {
    "text": "to the application workload\nor namespace manifest.",
    "start": "57180",
    "end": "60393"
  },
  {
    "text": "The addition of the annotation will cause",
    "start": "61380",
    "end": "63120"
  },
  {
    "text": "the OpenTelemetry Java auto\ninstrumentation library",
    "start": "63120",
    "end": "66600"
  },
  {
    "text": "to be automatically injected\ninto the specified services.",
    "start": "66600",
    "end": "70409"
  },
  {
    "text": "This allows us to get started\nwithout making any changes",
    "start": "70410",
    "end": "73140"
  },
  {
    "text": "to our application code.",
    "start": "73140",
    "end": "74703"
  },
  {
    "text": "We've already enabled Application Signals",
    "start": "76020",
    "end": "77909"
  },
  {
    "text": "for our EKS cluster,\nso we'll click Cancel.",
    "start": "77910",
    "end": "80583"
  },
  {
    "start": "81000",
    "end": "140000"
  },
  {
    "text": "Once enabled, Application\nSignals automatically collects",
    "start": "82320",
    "end": "85200"
  },
  {
    "text": "metrics and traces from applications.",
    "start": "85200",
    "end": "87302"
  },
  {
    "text": "This page provides an\noverview of key metrics,",
    "start": "88560",
    "end": "91350"
  },
  {
    "text": "including top operations",
    "start": "91350",
    "end": "92790"
  },
  {
    "text": "and dependencies by\nvolume, fault and latency.",
    "start": "92790",
    "end": "96213"
  },
  {
    "text": "It also shows the status\nof service-level indicators",
    "start": "97470",
    "end": "100230"
  },
  {
    "text": "that have been configured\nfor our application services.",
    "start": "100230",
    "end": "103053"
  },
  {
    "text": "Next, let's open the service map",
    "start": "104010",
    "end": "105960"
  },
  {
    "text": "to inspect our application topology.",
    "start": "105960",
    "end": "108062"
  },
  {
    "text": "We'll zoom out to view the full topology.",
    "start": "109350",
    "end": "112229"
  },
  {
    "text": "Two of our services have\nan unhealthy SLI status.",
    "start": "112230",
    "end": "115920"
  },
  {
    "text": "Let's drill into one of the service nodes.",
    "start": "115920",
    "end": "118020"
  },
  {
    "text": "The pane summarizes key\ninformation about the service,",
    "start": "120390",
    "end": "123390"
  },
  {
    "text": "including service-level objectives",
    "start": "123390",
    "end": "125070"
  },
  {
    "text": "and associated SLIs, service\noperations and dependencies,",
    "start": "125070",
    "end": "129060"
  },
  {
    "text": "and any Amazon CloudWatch Synthetics,",
    "start": "129060",
    "end": "131280"
  },
  {
    "text": "or real user monitoring pages.",
    "start": "131280",
    "end": "133293"
  },
  {
    "text": "Let's return to the Services page to see",
    "start": "134550",
    "end": "136800"
  },
  {
    "text": "how we can further investigate\nour unhealthy services.",
    "start": "136800",
    "end": "139833"
  },
  {
    "start": "140000",
    "end": "217000"
  },
  {
    "text": "We can quickly view the\nunhealthy SLIs for each service.",
    "start": "141090",
    "end": "144303"
  },
  {
    "text": "Let's drill into the Pet\nClinic front-end service",
    "start": "145590",
    "end": "147810"
  },
  {
    "text": "to get more information.",
    "start": "147810",
    "end": "149043"
  },
  {
    "text": "The Service Detail page is\norganized into four tabs.",
    "start": "150330",
    "end": "154350"
  },
  {
    "text": "The Service Operations tab displays a list",
    "start": "154350",
    "end": "156810"
  },
  {
    "text": "of the operations our service exposes,",
    "start": "156810",
    "end": "159209"
  },
  {
    "text": "along with key metrics for each operation.",
    "start": "159210",
    "end": "161673"
  },
  {
    "text": "Let's select the operation\nfor scheduling pet visits.",
    "start": "162960",
    "end": "165843"
  },
  {
    "text": "The charts update accordingly.",
    "start": "167070",
    "end": "168960"
  },
  {
    "text": "Notice that the first chart shows",
    "start": "168960",
    "end": "170670"
  },
  {
    "text": "some drops in availability.",
    "start": "170670",
    "end": "173130"
  },
  {
    "text": "Let's select a point on the graph",
    "start": "173130",
    "end": "174690"
  },
  {
    "text": "where the availability drops\nto Investigate the Root Cause.",
    "start": "174690",
    "end": "178023"
  },
  {
    "text": "In the pane, we can see\nthe correlated traces.",
    "start": "179280",
    "end": "181653"
  },
  {
    "text": "Let's drill into one to learn more.",
    "start": "182940",
    "end": "184833"
  },
  {
    "text": "This page displays a map",
    "start": "186030",
    "end": "187410"
  },
  {
    "text": "of service nodes involved\nin the selected trace,",
    "start": "187410",
    "end": "190110"
  },
  {
    "text": "along with a timeline of trace segments.",
    "start": "190110",
    "end": "192363"
  },
  {
    "text": "Let's view additional information",
    "start": "194520",
    "end": "195930"
  },
  {
    "text": "about this request made to DynamoDB.",
    "start": "195930",
    "end": "198362"
  },
  {
    "text": "Here we can see the exception",
    "start": "201510",
    "end": "203010"
  },
  {
    "text": "that caused the request to fail.",
    "start": "203010",
    "end": "204693"
  },
  {
    "text": "For applications running on EKS",
    "start": "205920",
    "end": "208020"
  },
  {
    "text": "that use CloudWatch Container Insights,",
    "start": "208020",
    "end": "210510"
  },
  {
    "text": "we can get additional\nperformance monitoring metrics",
    "start": "210510",
    "end": "212970"
  },
  {
    "text": "by selecting any link\nin the Hosted In column.",
    "start": "212970",
    "end": "216363"
  },
  {
    "start": "217000",
    "end": "322000"
  },
  {
    "text": "This view is automatically\nfiltered for the EKS pod",
    "start": "217758",
    "end": "220500"
  },
  {
    "text": "that processed the transaction.",
    "start": "220500",
    "end": "222213"
  },
  {
    "text": "CPU and memory utilization\nmetrics can help identify issues",
    "start": "223380",
    "end": "227670"
  },
  {
    "text": "occurring outside of the application,",
    "start": "227670",
    "end": "229950"
  },
  {
    "text": "like infrastructure problems",
    "start": "229950",
    "end": "231629"
  },
  {
    "text": "that might have caused\nthe request to fail.",
    "start": "231630",
    "end": "233913"
  },
  {
    "text": "In this case, everything looks normal.",
    "start": "235140",
    "end": "237040"
  },
  {
    "text": "Let's return to the Service Details page",
    "start": "238140",
    "end": "240240"
  },
  {
    "text": "for the Pet Clinic front-end service",
    "start": "240240",
    "end": "242280"
  },
  {
    "text": "and look at the remaining tabs.",
    "start": "242280",
    "end": "243963"
  },
  {
    "text": "The Dependencies tab displays metrics",
    "start": "245220",
    "end": "247380"
  },
  {
    "text": "for the dependencies\nthat the service calls.",
    "start": "247380",
    "end": "249663"
  },
  {
    "text": "This table shows the operations\ncalled for each dependency.",
    "start": "250950",
    "end": "254193"
  },
  {
    "text": "The Synthetics Canaries tab\nshows information about canaries",
    "start": "259260",
    "end": "262680"
  },
  {
    "text": "that call the service.",
    "start": "262680",
    "end": "264270"
  },
  {
    "text": "Note that to see canaries\nin Application Signals,",
    "start": "264270",
    "end": "267150"
  },
  {
    "text": "X-Ray Active Tracing must be enabled.",
    "start": "267150",
    "end": "269703"
  },
  {
    "text": "We can select a canary to troubleshoot",
    "start": "270990",
    "end": "272669"
  },
  {
    "text": "why it failed.",
    "start": "272670",
    "end": "273633"
  },
  {
    "text": "In a single click,",
    "start": "274860",
    "end": "276150"
  },
  {
    "text": "we're able to see the canary\ntraces that are correlated",
    "start": "276150",
    "end": "278729"
  },
  {
    "text": "to the data point we selected.",
    "start": "278730",
    "end": "280920"
  },
  {
    "text": "In this case, they help us\nunderstand why the operation",
    "start": "280920",
    "end": "284070"
  },
  {
    "text": "for creating an owner was unavailable.",
    "start": "284070",
    "end": "286203"
  },
  {
    "text": "The Final tab displays\na list of client pages",
    "start": "287460",
    "end": "289889"
  },
  {
    "text": "that call the service, along\nwith client page metrics",
    "start": "289890",
    "end": "292860"
  },
  {
    "text": "to help us assess the\nweb app's performance.",
    "start": "292860",
    "end": "295172"
  },
  {
    "text": "Again, we can drill into any of the charts",
    "start": "296970",
    "end": "298740"
  },
  {
    "text": "to get more details.",
    "start": "298740",
    "end": "300033"
  },
  {
    "text": "Note that CloudWatch Real User Monitoring",
    "start": "303900",
    "end": "306090"
  },
  {
    "text": "and X-Ray Active Tracing must be enabled",
    "start": "306090",
    "end": "308190"
  },
  {
    "text": "to view these metrics.",
    "start": "308190",
    "end": "310020"
  },
  {
    "text": "Next, let's look at how to create SLOs.",
    "start": "310020",
    "end": "312633"
  },
  {
    "text": "SLOs can be used to track\nthe longer-term performances",
    "start": "313860",
    "end": "316498"
  },
  {
    "text": "of services to ensure\nthey're meeting expectations.",
    "start": "316498",
    "end": "320159"
  },
  {
    "text": "Let's create one now.",
    "start": "320160",
    "end": "321693"
  },
  {
    "start": "322000",
    "end": "436000"
  },
  {
    "text": "In this example, we'll create an SLO",
    "start": "322950",
    "end": "325320"
  },
  {
    "text": "to monitor the availability\nof the service used",
    "start": "325320",
    "end": "327570"
  },
  {
    "text": "to schedule a pet visit.",
    "start": "327570",
    "end": "329460"
  },
  {
    "text": "First, we'll provide a name.",
    "start": "329460",
    "end": "331143"
  },
  {
    "text": "Next, we'll set an SLI",
    "start": "333990",
    "end": "336000"
  },
  {
    "text": "to determine whether we\nare meeting our SLO goal.",
    "start": "336000",
    "end": "338883"
  },
  {
    "text": "We can select a custom CloudWatch metric,",
    "start": "339720",
    "end": "342150"
  },
  {
    "text": "or we can simply select\na service operation",
    "start": "342150",
    "end": "344310"
  },
  {
    "text": "from a discovered service.",
    "start": "344310",
    "end": "345783"
  },
  {
    "text": "In this case, we'll do the latter.",
    "start": "347040",
    "end": "348740"
  },
  {
    "text": "Next, we'll set the condition.",
    "start": "359430",
    "end": "361650"
  },
  {
    "text": "In this case, an\navailability greater than 99%",
    "start": "361650",
    "end": "365040"
  },
  {
    "text": "in a one-minute period indicates success.",
    "start": "365040",
    "end": "367503"
  },
  {
    "text": "Next, we'll set the SLO\nto define the reliability",
    "start": "368760",
    "end": "372120"
  },
  {
    "text": "of our service against\ncustomer expectations.",
    "start": "372120",
    "end": "374673"
  },
  {
    "text": "The interval establishes\nhow much time we have",
    "start": "375960",
    "end": "378360"
  },
  {
    "text": "before we need to respond to these events",
    "start": "378360",
    "end": "380610"
  },
  {
    "text": "and assess the reliability of the service.",
    "start": "380610",
    "end": "383580"
  },
  {
    "text": "In this case, we'll set the\ninterval to 28 rolling days.",
    "start": "383580",
    "end": "387332"
  },
  {
    "text": "We'll leave the attainment goal at 99.9%.",
    "start": "388650",
    "end": "392259"
  },
  {
    "text": "Next, we'll set CloudWatch\nalarms to receive notifications",
    "start": "394080",
    "end": "396960"
  },
  {
    "text": "for important events\nrelated to this SLO goal.",
    "start": "396960",
    "end": "399992"
  },
  {
    "text": "The SLO and CloudWatch alarms",
    "start": "406290",
    "end": "408270"
  },
  {
    "text": "have been successfully created.",
    "start": "408270",
    "end": "410069"
  },
  {
    "text": "Now we can monitor our SLO's\nattainment rate, error budget,",
    "start": "410070",
    "end": "413790"
  },
  {
    "text": "and other metrics from this List page",
    "start": "413790",
    "end": "415890"
  },
  {
    "text": "to see if they are meeting the goals.",
    "start": "415890",
    "end": "417873"
  },
  {
    "text": "You've just seen how to\nimprove application performance",
    "start": "420450",
    "end": "422820"
  },
  {
    "text": "with CloudWatch Application Signals.",
    "start": "422820",
    "end": "424983"
  },
  {
    "text": "You can learn more about this topic",
    "start": "427260",
    "end": "428790"
  },
  {
    "text": "in the description and\nlinks for this video.",
    "start": "428790",
    "end": "430990"
  },
  {
    "text": "Thanks for watching, now\nit's your turn to try.",
    "start": "431850",
    "end": "434643"
  }
]