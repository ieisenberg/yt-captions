[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "start": "0",
    "end": "166"
  },
  {
    "text": "AWS Glue DataBrew is a visual data preparation tool",
    "start": "166",
    "end": "4033"
  },
  {
    "text": "with an interactive point and click visual interface",
    "start": "4033",
    "end": "6966"
  },
  {
    "text": "that doesn't require writing any code.",
    "start": "6966",
    "end": "8733"
  },
  {
    "start": "8733",
    "end": "9700"
  },
  {
    "text": "Data preparation can take up to 80%",
    "start": "9700",
    "end": "12365"
  },
  {
    "text": "of your data analysis time due to time consuming,",
    "start": "12366",
    "end": "14533"
  },
  {
    "start": "14533",
    "end": "14833"
  },
  {
    "text": "expensive,",
    "start": "14833",
    "end": "15833"
  },
  {
    "start": "15833",
    "end": "16066"
  },
  {
    "text": "and manual or highly technical processes.",
    "start": "16066",
    "end": "18566"
  },
  {
    "start": "18566",
    "end": "20133"
  },
  {
    "start": "20000",
    "end": "44000"
  },
  {
    "text": "This demo will show you can import,",
    "start": "20133",
    "end": "22333"
  },
  {
    "start": "22333",
    "end": "22800"
  },
  {
    "text": "clean,",
    "start": "22800",
    "end": "23566"
  },
  {
    "start": "23566",
    "end": "23866"
  },
  {
    "text": "and normalize data",
    "start": "23866",
    "end": "25533"
  },
  {
    "text": "to get it ready for input to a business report",
    "start": "25533",
    "end": "27933"
  },
  {
    "text": "or a machine learning model.",
    "start": "27933",
    "end": "29400"
  },
  {
    "start": "29400",
    "end": "29833"
  },
  {
    "text": "We'll also show some exploratory data analysis",
    "start": "29833",
    "end": "32566"
  },
  {
    "text": "to get deeper insights in to the data.",
    "start": "32566",
    "end": "34466"
  },
  {
    "start": "34466",
    "end": "35000"
  },
  {
    "text": "This is first critical step in many analytics or machine learning workflows,",
    "start": "35000",
    "end": "39000"
  },
  {
    "text": "because inaccurate or corrupt data can produce incorrect results.",
    "start": "39000",
    "end": "42266"
  },
  {
    "start": "42266",
    "end": "44032"
  },
  {
    "start": "44000",
    "end": "74000"
  },
  {
    "text": "Let's get started by creating a new project.",
    "start": "44033",
    "end": "46100"
  },
  {
    "start": "46100",
    "end": "48833"
  },
  {
    "text": "DataBrew allows you to securely upload files from your local disc,",
    "start": "48833",
    "end": "52333"
  },
  {
    "start": "52333",
    "end": "52700"
  },
  {
    "text": "or connect to data in an Amazon S3 data lake,",
    "start": "52700",
    "end": "55366"
  },
  {
    "start": "55366",
    "end": "55566"
  },
  {
    "text": "Amazon Redshift, and a variety of other datastores.",
    "start": "55566",
    "end": "58833"
  },
  {
    "start": "58833",
    "end": "60133"
  },
  {
    "text": "For this demo, I'm going to select a dataset I previously set up",
    "start": "60133",
    "end": "63666"
  },
  {
    "text": "from the CityBike bikeshare program in New York City",
    "start": "63666",
    "end": "66400"
  },
  {
    "text": "found at citybikenyc.com.",
    "start": "66400",
    "end": "68633"
  },
  {
    "start": "68633",
    "end": "74166"
  },
  {
    "start": "74000",
    "end": "108000"
  },
  {
    "text": "We are now in a DataBrew project, allowing us to explore the dataset.",
    "start": "74166",
    "end": "78033"
  },
  {
    "start": "78033",
    "end": "78500"
  },
  {
    "text": "Note that in the console we are working with a small sample of the data,",
    "start": "78500",
    "end": "82500"
  },
  {
    "text": "but we will eventually run a job against the entire dataset.",
    "start": "82500",
    "end": "85633"
  },
  {
    "start": "85633",
    "end": "86166"
  },
  {
    "text": "The dataset consists of bike trip information such as trip duration,",
    "start": "86166",
    "end": "90133"
  },
  {
    "text": "start and end station, as well as customer details.",
    "start": "90133",
    "end": "93066"
  },
  {
    "start": "93066",
    "end": "94233"
  },
  {
    "text": "We want to do some analysis by day",
    "start": "94233",
    "end": "96300"
  },
  {
    "text": "so let's extract the day from the date column.",
    "start": "96300",
    "end": "98500"
  },
  {
    "start": "98500",
    "end": "98933"
  },
  {
    "text": "DataBrew recognized the data as a date,",
    "start": "98933",
    "end": "100965"
  },
  {
    "start": "100966",
    "end": "101300"
  },
  {
    "text": "and allows us to change the format to a string",
    "start": "101300",
    "end": "103633"
  },
  {
    "text": "which will make it easier to extract the day using the split function.",
    "start": "103633",
    "end": "106733"
  },
  {
    "start": "106733",
    "end": "108066"
  },
  {
    "start": "108000",
    "end": "146000"
  },
  {
    "text": "We then split the data using the space character as a delimiter.",
    "start": "108066",
    "end": "111566"
  },
  {
    "start": "111566",
    "end": "112700"
  },
  {
    "text": "Once the data is split,",
    "start": "112700",
    "end": "114232"
  },
  {
    "text": "we can reformat the time stamps to show just the day and month.",
    "start": "114233",
    "end": "117400"
  },
  {
    "start": "117400",
    "end": "117833"
  },
  {
    "text": "Then we rename the column so we can keep track of it more easily.",
    "start": "117833",
    "end": "120766"
  },
  {
    "start": "120766",
    "end": "123733"
  },
  {
    "text": "Data cleaning is an important part of the data preparation process,",
    "start": "123733",
    "end": "127033"
  },
  {
    "text": "and DataBrew makes it easy to clean data.",
    "start": "127033",
    "end": "129200"
  },
  {
    "start": "129200",
    "end": "129466"
  },
  {
    "text": "You can see that the start and end station names contain ampersands",
    "start": "129466",
    "end": "132533"
  },
  {
    "text": "that can't be processed in our data analysis.",
    "start": "132533",
    "end": "134966"
  },
  {
    "start": "134966",
    "end": "136566"
  },
  {
    "text": "We'll clean the data in this column by removing any special characters.",
    "start": "136566",
    "end": "140200"
  },
  {
    "start": "140200",
    "end": "146166"
  },
  {
    "start": "146000",
    "end": "185000"
  },
  {
    "text": "In this column you can see that there are two primary types of customers,",
    "start": "146166",
    "end": "149733"
  },
  {
    "text": "subscribers who are annual members, ",
    "start": "149733",
    "end": "151800"
  },
  {
    "text": "and customers who hold a time based pass.  ",
    "start": "151800",
    "end": "154166"
  },
  {
    "start": "154166",
    "end": "154200"
  },
  {
    "text": "This dataset will be used to train a machine learning model",
    "start": "154200",
    "end": "156866"
  },
  {
    "text": "that predicts expected trip duration for a new customer in a given month.",
    "start": "156866",
    "end": "160265"
  },
  {
    "start": "160266",
    "end": "161066"
  },
  {
    "text": "To prevent any unintended bias in the ML model, ",
    "start": "161066",
    "end": "164233"
  },
  {
    "text": "we need to convert the input from character to numeric form. ",
    "start": "164233",
    "end": "167400"
  },
  {
    "start": "167400",
    "end": "168732"
  },
  {
    "text": "We will use the categorical mapping function to map",
    "start": "168733",
    "end": "171400"
  },
  {
    "text": "the user type to numeric values in a separate column.",
    "start": "171400",
    "end": "174000"
  },
  {
    "start": "174000",
    "end": "174833"
  },
  {
    "text": "We'll choose to map all the values,",
    "start": "174833",
    "end": "176732"
  },
  {
    "text": "and since there are just two values we assign them to one and two. ",
    "start": "176733",
    "end": "179866"
  },
  {
    "start": "179866",
    "end": "180900"
  },
  {
    "text": "This creates a new column with our mapped data.",
    "start": "180900",
    "end": "183299"
  },
  {
    "start": "183300",
    "end": "185233"
  },
  {
    "start": "185000",
    "end": "223000"
  },
  {
    "text": "At any point, we can quickly undo,",
    "start": "185233",
    "end": "187500"
  },
  {
    "start": "187500",
    "end": "187833"
  },
  {
    "text": "redo,",
    "start": "187833",
    "end": "188866"
  },
  {
    "start": "188866",
    "end": "189233"
  },
  {
    "text": "edit,",
    "start": "189233",
    "end": "189800"
  },
  {
    "start": "189800",
    "end": "190200"
  },
  {
    "text": "or delete any step",
    "start": "190200",
    "end": "191666"
  },
  {
    "text": "and see instant updates to the data and statistics. ",
    "start": "191666",
    "end": "194733"
  },
  {
    "start": "194733",
    "end": "196100"
  },
  {
    "text": "Next, let's do some quick analysis on our data to better understand it.",
    "start": "196100",
    "end": "199966"
  },
  {
    "start": "199966",
    "end": "200633"
  },
  {
    "text": "We'll compare average trip duration by user type and by start station.",
    "start": "200633",
    "end": "204500"
  },
  {
    "start": "204500",
    "end": "205066"
  },
  {
    "text": "So, we'll choose the group button,",
    "start": "205066",
    "end": "207032"
  },
  {
    "start": "207033",
    "end": "207933"
  },
  {
    "text": "select user type, ",
    "start": "207933",
    "end": "209466"
  },
  {
    "start": "209466",
    "end": "212600"
  },
  {
    "text": "and then mean trip duration.",
    "start": "212600",
    "end": "214766"
  },
  {
    "start": "214766",
    "end": "216733"
  },
  {
    "text": "It's interesting to note that on demand customers, in general,",
    "start": "216733",
    "end": "219433"
  },
  {
    "text": "appear to have longer trip times.",
    "start": "219433",
    "end": "221000"
  },
  {
    "start": "221000",
    "end": "223600"
  },
  {
    "start": "223000",
    "end": "271000"
  },
  {
    "text": "DataBrew also has rich profiling functionality.",
    "start": "223600",
    "end": "226366"
  },
  {
    "start": "226366",
    "end": "227866"
  },
  {
    "text": "In a project, you can easily navigate to the profile view",
    "start": "227866",
    "end": "230833"
  },
  {
    "text": "to get statistics on the larger dataset",
    "start": "230833",
    "end": "233099"
  },
  {
    "text": "including missing cells,  ",
    "start": "233100",
    "end": "234600"
  },
  {
    "start": "234600",
    "end": "234900"
  },
  {
    "text": "duplicate rows,",
    "start": "234900",
    "end": "236099"
  },
  {
    "start": "236100",
    "end": "236400"
  },
  {
    "text": "a correlation matrix, and more.",
    "start": "236400",
    "end": "238765"
  },
  {
    "start": "238766",
    "end": "240566"
  },
  {
    "text": "We can zero in on a specific column, such as a start station name.",
    "start": "240566",
    "end": "244500"
  },
  {
    "start": "244500",
    "end": "246466"
  },
  {
    "text": "We get a distribution of values across the column, and other useful information.",
    "start": "246466",
    "end": "250366"
  },
  {
    "start": "250366",
    "end": "251400"
  },
  {
    "text": "For example, we can quickly see that the West 42nd and 8th Avenue station ",
    "start": "251400",
    "end": "255400"
  },
  {
    "text": "Is the most popular station for the month of September.",
    "start": "255400",
    "end": "258000"
  },
  {
    "start": "258000",
    "end": "261032"
  },
  {
    "text": "For ID columns, you can quickly check cardinality, skew, ",
    "start": "261033",
    "end": "264733"
  },
  {
    "text": "and other statistics to make sure that the nature of the data aligns with what you're expecting to see. ",
    "start": "264733",
    "end": "269033"
  },
  {
    "start": "269033",
    "end": "271733"
  },
  {
    "start": "271000",
    "end": "307000"
  },
  {
    "text": "For our next analysis, we want to add bike maintenance records so we can check",
    "start": "271733",
    "end": "275800"
  },
  {
    "text": "when a particular bike was last serviced and if it impacts average trip times. ",
    "start": "275800",
    "end": "279565"
  },
  {
    "start": "279566",
    "end": "280466"
  },
  {
    "text": "So, we'll want to join trip data with another dataset.",
    "start": "280466",
    "end": "283866"
  },
  {
    "start": "283866",
    "end": "284432"
  },
  {
    "text": "We'll choose the join option,",
    "start": "284433",
    "end": "286000"
  },
  {
    "start": "286000",
    "end": "286300"
  },
  {
    "text": "select the dataset,",
    "start": "286300",
    "end": "287565"
  },
  {
    "start": "287566",
    "end": "288066"
  },
  {
    "text": "specify a join key, ",
    "start": "288066",
    "end": "289566"
  },
  {
    "start": "289566",
    "end": "289900"
  },
  {
    "text": "and join type.",
    "start": "289900",
    "end": "290699"
  },
  {
    "start": "290700",
    "end": "293333"
  },
  {
    "text": "After a few selections,",
    "start": "293333",
    "end": "294800"
  },
  {
    "start": "294800",
    "end": "295033"
  },
  {
    "text": "the join is run, and we have added maintenance records for the bikes. ",
    "start": "295033",
    "end": "297832"
  },
  {
    "start": "297833",
    "end": "299466"
  },
  {
    "text": "We could then go on to flag any trip times longer than 30 minutes",
    "start": "299466",
    "end": "302900"
  },
  {
    "text": "when a bike was serviced a day before the rides to validate our hypothesis.",
    "start": "302900",
    "end": "306000"
  },
  {
    "start": "306000",
    "end": "307600"
  },
  {
    "start": "307000",
    "end": "365000"
  },
  {
    "text": "Note that all the steps performed on the sample of the data set get captured as a recipe",
    "start": "307600",
    "end": "311833"
  },
  {
    "text": "that can then be applied to the larger dataset.",
    "start": "311833",
    "end": "314266"
  },
  {
    "start": "314266",
    "end": "315000"
  },
  {
    "text": "We can now create a job to run this recipe.",
    "start": "315000",
    "end": "317266"
  },
  {
    "start": "317266",
    "end": "317565"
  },
  {
    "text": "We'll specify an Amazon S3 bucket to contain the outputs,",
    "start": "317566",
    "end": "320566"
  },
  {
    "start": "320566",
    "end": "321133"
  },
  {
    "text": "and then select CSV for business reports,",
    "start": "321133",
    "end": "323666"
  },
  {
    "start": "323666",
    "end": "323800"
  },
  {
    "text": "and the more compressed Parquet format for further processing in Amazon Redshift. ",
    "start": "323800",
    "end": "327766"
  },
  {
    "start": "327766",
    "end": "331266"
  },
  {
    "text": "This recipe can now be run on new datasets for different months.",
    "start": "331266",
    "end": "334233"
  },
  {
    "start": "334233",
    "end": "335800"
  },
  {
    "text": "Other analysts and data scientists in your organization can also import this recipe",
    "start": "335800",
    "end": "339400"
  },
  {
    "text": "into their project and build on it for further analysis.",
    "start": "339400",
    "end": "342300"
  },
  {
    "start": "342300",
    "end": "343099"
  },
  {
    "text": "In this demo you've seen how easy it is to use DataBrew to prepare and analyze data",
    "start": "343100",
    "end": "346900"
  },
  {
    "text": "without writing any code, enabling you to generate business reports,",
    "start": "346900",
    "end": "350565"
  },
  {
    "text": "query data, and train machine learning models. ",
    "start": "350566",
    "end": "353266"
  },
  {
    "start": "353266",
    "end": "353565"
  },
  {
    "text": "Once the data is prepared, your organization can immediately start using it",
    "start": "353566",
    "end": "357133"
  },
  {
    "text": "with AWS and third party analytics and machine learning services.",
    "start": "357133",
    "end": "360800"
  },
  {
    "start": "360800",
    "end": "361766"
  },
  {
    "text": "Please visit the AWS Glue website for additional information to get started.",
    "start": "361766",
    "end": "365332"
  }
]