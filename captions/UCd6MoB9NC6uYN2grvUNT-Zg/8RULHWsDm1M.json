[
  {
    "text": "Hello, everyone.\nWelcome to re:Invent",
    "start": "5063",
    "end": "7766"
  },
  {
    "text": "and to our special\n'This is My Architecture' series.",
    "start": "7766",
    "end": "11625"
  },
  {
    "text": "We wanted to share a couple\nof 'This is My Architecture' sessions today",
    "start": "11625",
    "end": "15724"
  },
  {
    "text": "and provide some additional context\non questions asked",
    "start": "15724",
    "end": "19200"
  },
  {
    "text": "and service updates in these videos.",
    "start": "19200",
    "end": "21856"
  },
  {
    "text": "We have two sessions\nlined up for you today.",
    "start": "21856",
    "end": "24505"
  },
  {
    "text": "Let's get started with Zoho.",
    "start": "24505",
    "end": "26685"
  },
  {
    "text": "When I talked to Raji\non how they built Site24x7",
    "start": "26685",
    "end": "30927"
  },
  {
    "text": "a scalable, real-time\nuser monitoring system on AWS.",
    "start": "30927",
    "end": "35519"
  },
  {
    "text": "Let's go watch it.",
    "start": "35519",
    "end": "36519"
  },
  {
    "text": "Hi, and welcome to another episode\nof 'This is My Architecture.'",
    "start": "44877",
    "end": "48784"
  },
  {
    "text": "I'm Aarthi from AWS,",
    "start": "48784",
    "end": "50276"
  },
  {
    "text": "and joining me in Mumbai today\nis Raji from Zoho.",
    "start": "50276",
    "end": "53401"
  },
  {
    "text": "Raji, thank you for joining us today.",
    "start": "53401",
    "end": "55220"
  },
  {
    "text": "Thank you, Aarthi.",
    "start": "55220",
    "end": "56253"
  },
  {
    "text": "So Raji, tell us what Zoho does,\nand what is your specific role?",
    "start": "56253",
    "end": "59786"
  },
  {
    "text": "Zoho has a suite of online applications",
    "start": "60512",
    "end": "63403"
  },
  {
    "text": "that are needed for end-to-end\noperation of any business.",
    "start": "63403",
    "end": "67020"
  },
  {
    "text": "And I'm a product manager in Zoho",
    "start": "67020",
    "end": "69381"
  },
  {
    "text": "for the product called Site24x7.",
    "start": "69381",
    "end": "71951"
  },
  {
    "text": "Site24x7 is the monitoring solution",
    "start": "71951",
    "end": "74552"
  },
  {
    "text": "that does monitoring\nfor the full stack of your application",
    "start": "74553",
    "end": "78311"
  },
  {
    "text": "starting from your end user layer\nto your application layer",
    "start": "78311",
    "end": "81661"
  },
  {
    "text": "to platform layer\nto your infrastructure layer.",
    "start": "81662",
    "end": "84615"
  },
  {
    "text": "It gives the full, all-in-one\nmonitoring solution.",
    "start": "84615",
    "end": "88134"
  },
  {
    "text": "And what are we going to talk about today?",
    "start": "88135",
    "end": "90221"
  },
  {
    "text": "You mentioned the monitoring solutions.",
    "start": "90221",
    "end": "92098"
  },
  {
    "text": "Is that what we're going\nto dive into today.",
    "start": "92098",
    "end": "93909"
  },
  {
    "text": "Monitoring solution, the Site24x7,",
    "start": "93910",
    "end": "96801"
  },
  {
    "text": "we run it on our service",
    "start": "96801",
    "end": "98515"
  },
  {
    "text": "And we wanted to do\nthe real-user monitoring as a feature,",
    "start": "98515",
    "end": "102265"
  },
  {
    "text": "which-- we faced some problems\nwhen we had to run it on our own servers.",
    "start": "102265",
    "end": "106879"
  },
  {
    "text": "And that's when we wanted to use AWS.",
    "start": "106879",
    "end": "109652"
  },
  {
    "text": "And that's\nwhat we're going to talk about today.",
    "start": "109652",
    "end": "111613"
  },
  {
    "text": "Great, can you elaborate\non some of the challenges",
    "start": "111613",
    "end": "114534"
  },
  {
    "text": "of running this real-user\nmonitoring on-prem",
    "start": "114535",
    "end": "117052"
  },
  {
    "text": "before we dive into the architecture.\n-Yeah.",
    "start": "117052",
    "end": "118996"
  },
  {
    "text": "As I said, the real-user monitoring",
    "start": "118996",
    "end": "120778"
  },
  {
    "text": "is a real-time monitoring\nof end users' experience",
    "start": "120778",
    "end": "124723"
  },
  {
    "text": "as to how the application\nis behaving across geographies.",
    "start": "124723",
    "end": "128481"
  },
  {
    "text": "How the application is behaving--",
    "start": "128481",
    "end": "130537"
  },
  {
    "text": "How is it deferring with respect to ISPs?",
    "start": "130538",
    "end": "133140"
  },
  {
    "text": "How is it deferring\nwith respect to browsers?",
    "start": "133141",
    "end": "135283"
  },
  {
    "text": "With respect to devices?\nThere are so many things that we collect",
    "start": "135283",
    "end": "138235"
  },
  {
    "text": "from real-time users.",
    "start": "138235",
    "end": "140133"
  },
  {
    "text": "Having said that,\nthis is a real-time environment.",
    "start": "140133",
    "end": "143726"
  },
  {
    "text": "We don't know the number of requests\nthat we are going to get in.",
    "start": "143727",
    "end": "146360"
  },
  {
    "text": "So the volume,\nthe elasticity, the scaling part",
    "start": "146360",
    "end": "149743"
  },
  {
    "text": "we can't handle it on our own servers,",
    "start": "149743",
    "end": "151625"
  },
  {
    "text": "and that's when we wanted to move to AWS.",
    "start": "151626",
    "end": "153969"
  },
  {
    "text": "Great, why don't we dive\ninto the architecture",
    "start": "153969",
    "end": "156039"
  },
  {
    "text": "of how you do this real-user monitoring?",
    "start": "156039",
    "end": "158102"
  },
  {
    "text": "Yeah, so as I said,\nit starts with the user's browser.",
    "start": "158102",
    "end": "161240"
  },
  {
    "text": "So the user has to download the script\ninto that browser.",
    "start": "161240",
    "end": "165365"
  },
  {
    "text": "So, for which the request\nis actually routed through Route 53",
    "start": "165365",
    "end": "169474"
  },
  {
    "text": "and it reaches the CDN.",
    "start": "169474",
    "end": "171474"
  },
  {
    "text": "So the request comes to CDN,",
    "start": "171474",
    "end": "173841"
  },
  {
    "text": "and then the actual script,\nthe beacon script we call it,",
    "start": "173841",
    "end": "177615"
  },
  {
    "text": "is downloaded in the browser",
    "start": "177615",
    "end": "179763"
  },
  {
    "text": "and then that actually does\nthe data collection part.",
    "start": "179763",
    "end": "183185"
  },
  {
    "text": "The various datas that I talked about.",
    "start": "183185",
    "end": "185491"
  },
  {
    "text": "So the beacon collects all the data",
    "start": "185491",
    "end": "187577"
  },
  {
    "text": "and as and when it collects,\nit, again, routes through Route 53",
    "start": "187577",
    "end": "192108"
  },
  {
    "text": "to the ALBs.",
    "start": "192108",
    "end": "195928"
  },
  {
    "text": "And from ALBs,",
    "start": "195928",
    "end": "197928"
  },
  {
    "text": "we just move it to the Collectors.",
    "start": "197928",
    "end": "202467"
  },
  {
    "text": "The Collectors are nothing\nbut a group of EC2 instances,",
    "start": "202467",
    "end": "206834"
  },
  {
    "text": "which are auto scaled.",
    "start": "206834",
    "end": "208397"
  },
  {
    "text": "And from here,\nwe actually push the data to SQS.",
    "start": "208397",
    "end": "213775"
  },
  {
    "text": "Okay, so once you collect all this data\non the EC2 instances",
    "start": "213775",
    "end": "217526"
  },
  {
    "text": "and then push it to the NSQ/SQ,\nwhat happens after that?",
    "start": "217526",
    "end": "220823"
  },
  {
    "text": "And maybe before even I go to that,",
    "start": "220823",
    "end": "223440"
  },
  {
    "text": "I want to say why we are using\nthis auto scaling environment",
    "start": "223440",
    "end": "226355"
  },
  {
    "text": "for the EC2 instances.",
    "start": "226355",
    "end": "227831"
  },
  {
    "text": "I said we'll get a huge amount of requests.",
    "start": "227831",
    "end": "230211"
  },
  {
    "text": "It's something like we get up to\n23 million requests a day on normal days.",
    "start": "230212",
    "end": "234657"
  },
  {
    "text": "And, on peak days, peak load days,\nit actually doubles.",
    "start": "234657",
    "end": "238250"
  },
  {
    "text": "We get 50 million requests a day\nand 50 thousand requests per minute.",
    "start": "238251",
    "end": "242314"
  },
  {
    "text": "So such scale is possible\nonly using the auto scale Collectors.",
    "start": "242314",
    "end": "246821"
  },
  {
    "text": "Now, after this collects the information\nand puts it into SQS",
    "start": "246821",
    "end": "250494"
  },
  {
    "text": "we have another set of EC2 instances,\nwhich are auto scaled",
    "start": "250494",
    "end": "254330"
  },
  {
    "text": "and that, we call it as Processors,",
    "start": "254330",
    "end": "256642"
  },
  {
    "text": "which, again,\nfetches the information from SQS",
    "start": "256642",
    "end": "260845"
  },
  {
    "text": "and does all the calculations\nthat we want to do,",
    "start": "260845",
    "end": "263386"
  },
  {
    "text": "does all the processing.",
    "start": "263386",
    "end": "264732"
  },
  {
    "text": "And we use two components here.",
    "start": "264733",
    "end": "267006"
  },
  {
    "text": "One is for caching,\nother is for database storage.",
    "start": "267006",
    "end": "270874"
  },
  {
    "text": "And for caching, we use Redis",
    "start": "270874",
    "end": "273966"
  },
  {
    "text": "to do the-- have it in the cache\nand do the processing.",
    "start": "273966",
    "end": "276755"
  },
  {
    "text": "And finally store the data into Cassandra.",
    "start": "276755",
    "end": "280771"
  },
  {
    "text": "And this Cassandra is actually\nacross multiple, availability zones,",
    "start": "280771",
    "end": "286725"
  },
  {
    "text": "so that we take care of high availability.",
    "start": "286725",
    "end": "289200"
  },
  {
    "text": "It's a cluster, so that we can take care\nof high availability of the data.",
    "start": "289200",
    "end": "293389"
  },
  {
    "text": "I think you bring a good point\nabout the high availability architecture here",
    "start": "293389",
    "end": "297209"
  },
  {
    "text": "especially-- you talked about the scalability\nwith auto scaling instances.",
    "start": "297209",
    "end": "300639"
  },
  {
    "text": "So is this entire architecture\nthat we're seeing here,",
    "start": "300639",
    "end": "303156"
  },
  {
    "text": "is this running in a single region\nacross availability zones?",
    "start": "303156",
    "end": "306203"
  },
  {
    "text": "Or how are your users directed\nto like different reg--",
    "start": "306203",
    "end": "308500"
  },
  {
    "text": "from different regions directed?",
    "start": "308500",
    "end": "310531"
  },
  {
    "text": "Yeah, so this is one architecture.",
    "start": "310531",
    "end": "313409"
  },
  {
    "text": "We have customers across the globe.",
    "start": "313409",
    "end": "315698"
  },
  {
    "text": "But then we don't use\nthe same in multi-region.",
    "start": "315698",
    "end": "318629"
  },
  {
    "text": "We have the similar architecture",
    "start": "318629",
    "end": "320577"
  },
  {
    "text": "in different regions.",
    "start": "320577",
    "end": "322514"
  },
  {
    "text": "That's mainly because the data--",
    "start": "322515",
    "end": "324470"
  },
  {
    "text": "we have the data residing in these servers.",
    "start": "324470",
    "end": "326877"
  },
  {
    "text": "Those are, again, EC2 instances.",
    "start": "326877",
    "end": "329233"
  },
  {
    "text": "And there are a lot of regulations\nthat come with each of the countries.",
    "start": "329233",
    "end": "332616"
  },
  {
    "text": "For example if you take the EU, (.eu)",
    "start": "332616",
    "end": "335499"
  },
  {
    "text": "GDPR has to be compliant",
    "start": "335499",
    "end": "337203"
  },
  {
    "text": "and you can't have your customer's data\ntaken out of the EU borders.",
    "start": "337204",
    "end": "341416"
  },
  {
    "text": "So each and every country is coming up\nwith their own regulations",
    "start": "341416",
    "end": "344370"
  },
  {
    "text": "and customers don't want\ntheir data to go out.",
    "start": "344371",
    "end": "347439"
  },
  {
    "text": "So that's the main reason\nwe have the similar set of architectures",
    "start": "347439",
    "end": "351156"
  },
  {
    "text": "in different regions.",
    "start": "351157",
    "end": "353641"
  },
  {
    "text": "So when the user request comes in\nbased on the domain name,",
    "start": "353641",
    "end": "356268"
  },
  {
    "text": "like .com, .eu, or .in, it gets routed",
    "start": "356268",
    "end": "359143"
  },
  {
    "text": "to the individual regions accordingly.\n-Perfect!",
    "start": "359143",
    "end": "360987"
  },
  {
    "text": "-That's how it is.\n-Okay.",
    "start": "360987",
    "end": "362479"
  },
  {
    "text": "So once the processor\nlike completes all its function here",
    "start": "362479",
    "end": "365152"
  },
  {
    "text": "you then send data based on\nwhether you're doing caching",
    "start": "365152",
    "end": "367550"
  },
  {
    "text": "or to the Redis or to Cassandra.",
    "start": "367550",
    "end": "369783"
  },
  {
    "text": "What happens in this side of the world?",
    "start": "369783",
    "end": "371651"
  },
  {
    "text": "Like I see a dashboard here--",
    "start": "371652",
    "end": "372877"
  },
  {
    "text": "Yeah, so all this data collected\nis being stored.",
    "start": "372877",
    "end": "376282"
  },
  {
    "text": "Then the user has to\nview it in the dashboard.",
    "start": "376282",
    "end": "378625"
  },
  {
    "text": "As I said, Site24x7\nruns it on our own servers.",
    "start": "378625",
    "end": "381993"
  },
  {
    "text": "Now, the dashboard is also on the server.",
    "start": "381993",
    "end": "384430"
  },
  {
    "text": "We need to get the information,\nso those are APA requests,",
    "start": "384430",
    "end": "387860"
  },
  {
    "text": "that, again, comes through Route 53",
    "start": "387860",
    "end": "390383"
  },
  {
    "text": "to the ALBs",
    "start": "390383",
    "end": "392164"
  },
  {
    "text": "and from here to the processors.",
    "start": "392164",
    "end": "395937"
  },
  {
    "text": "And the processors fetches it\nfrom the Cassandra database",
    "start": "395937",
    "end": "398439"
  },
  {
    "text": "and gives the data to the user",
    "start": "398439",
    "end": "400744"
  },
  {
    "text": "for them to view the real-time experience\nof their applications.",
    "start": "400744",
    "end": "405064"
  },
  {
    "text": "Where exactly the problem, if there\nis any JavaScript errors, are there--",
    "start": "405064",
    "end": "408826"
  },
  {
    "text": "How the snapshot is.\nHow the resources are loaded.",
    "start": "408826",
    "end": "411483"
  },
  {
    "text": "So all the information\nthat we have collected",
    "start": "411483",
    "end": "413805"
  },
  {
    "text": "and stored it in the Cassandra",
    "start": "413805",
    "end": "415324"
  },
  {
    "text": "is viewed in the dashboard",
    "start": "415325",
    "end": "417289"
  },
  {
    "text": "using another--\nThat's the component there.",
    "start": "417289",
    "end": "420047"
  },
  {
    "text": "This is a neat architecture",
    "start": "420047",
    "end": "421631"
  },
  {
    "text": "especially having an operations person\nview real-time metrics",
    "start": "421631",
    "end": "424748"
  },
  {
    "text": "is super important to having\na very reliable architecture.",
    "start": "424748",
    "end": "428857"
  },
  {
    "text": "What are some of the future enhancements",
    "start": "428858",
    "end": "430617"
  },
  {
    "text": "that you're thinking\nwith this architecture?",
    "start": "430617",
    "end": "432240"
  },
  {
    "text": "So we have three things in mind.",
    "start": "432240",
    "end": "434919"
  },
  {
    "text": "One is this Route 53 component.",
    "start": "434920",
    "end": "437325"
  },
  {
    "text": "We can actually make use\nof the geo-based Route 53",
    "start": "437325",
    "end": "441052"
  },
  {
    "text": "even though we have this architecture\nin deployment in multiple regions.",
    "start": "441052",
    "end": "445746"
  },
  {
    "text": "We can make use of geo-based Route 53\nto route it to that region,",
    "start": "445746",
    "end": "449177"
  },
  {
    "text": "so that's one thing that we have in plan.",
    "start": "449177",
    "end": "451066"
  },
  {
    "text": "The second thing is-- this is, again,\na simple collector,",
    "start": "451066",
    "end": "455035"
  },
  {
    "text": "which just collects the information",
    "start": "455035",
    "end": "457248"
  },
  {
    "text": "and pushes the data to the SQS.",
    "start": "457248",
    "end": "459505"
  },
  {
    "text": "So I need not have these\nas an EC2 instance",
    "start": "459506",
    "end": "463101"
  },
  {
    "text": "or an application running in EC2 instance.",
    "start": "463101",
    "end": "465357"
  },
  {
    "text": "I can replace this with Lambda functions",
    "start": "465357",
    "end": "467591"
  },
  {
    "text": "that takes care of, again,\npushing the data to SQS.",
    "start": "467592",
    "end": "470607"
  },
  {
    "text": "Again, Lambda function\nis elastically scalable as well.",
    "start": "470607",
    "end": "474318"
  },
  {
    "text": "And the third important thing\nis maintaining this deployment.",
    "start": "474318",
    "end": "478147"
  },
  {
    "text": "So we have to take care of updating the builds\nin each of these places,",
    "start": "478147",
    "end": "482295"
  },
  {
    "text": "and maintaining in multiple regions\nis, again, a headache for us.",
    "start": "482295",
    "end": "485699"
  },
  {
    "text": "So I'm thinking if we can use a CodeDeploy",
    "start": "485699",
    "end": "488426"
  },
  {
    "text": "to do all those automations for us",
    "start": "488426",
    "end": "490168"
  },
  {
    "text": "so it is easy for us.",
    "start": "490168",
    "end": "491598"
  },
  {
    "text": "-Automate and make it easy.\n-Yeah.",
    "start": "491598",
    "end": "493567"
  },
  {
    "text": "Raji, thank you for sharing\nhow Site24x7 uses AWS",
    "start": "493567",
    "end": "497559"
  },
  {
    "text": "to do real-user monitoring.",
    "start": "497559",
    "end": "499766"
  },
  {
    "text": "Great architecture,\nand thank you for joining us today.",
    "start": "499766",
    "end": "502328"
  },
  {
    "text": "And thank you\nfor watching 'This is My Architecture.'",
    "start": "502329",
    "end": "504782"
  },
  {
    "text": "See you soon!",
    "start": "504782",
    "end": "505782"
  },
  {
    "text": "And that's a wrap",
    "start": "506821",
    "end": "507990"
  },
  {
    "text": "to how Site24x7\nbuilt their monitoring systems on AWS.",
    "start": "507990",
    "end": "513380"
  },
  {
    "text": "Next, we move from monitoring\nto more security",
    "start": "513381",
    "end": "517263"
  },
  {
    "text": "with Ryan from William Hill,",
    "start": "517264",
    "end": "519341"
  },
  {
    "text": "talking about\nhow they built DDoS Protection on AWS.",
    "start": "519342",
    "end": "524110"
  },
  {
    "text": "Let's go watch it.",
    "start": "524110",
    "end": "525847"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "532834",
    "end": "534553"
  },
  {
    "text": "My name is Peter,\nand I'm here with Ryan from William Hill.",
    "start": "534553",
    "end": "537076"
  },
  {
    "text": "-Hey Ryan, good to have you here.\n-Thanks for having me.",
    "start": "537076",
    "end": "539178"
  },
  {
    "text": "Alright so what do you guys do?",
    "start": "539178",
    "end": "540693"
  },
  {
    "text": "So William Hill is one of the world's\nleading betting and gaming companies.",
    "start": "540693",
    "end": "544300"
  },
  {
    "text": "We provide gaming applications\nfor customers all around the world",
    "start": "544301",
    "end": "547288"
  },
  {
    "text": "on many different platforms.",
    "start": "547288",
    "end": "548653"
  },
  {
    "text": "Alright, I know that you've been subject\nto a large DDoS attack some time ago.",
    "start": "548653",
    "end": "553293"
  },
  {
    "text": "And you've decided to move\nyour security posture into the clouds.",
    "start": "553293",
    "end": "558074"
  },
  {
    "text": "What's the actual issue\nyou've had to deal with?",
    "start": "558074",
    "end": "561410"
  },
  {
    "text": "So in 2016 we were the victims\nof a major DDoS attack,",
    "start": "561410",
    "end": "565167"
  },
  {
    "text": "which utilized one of the largest botnets\nof the time, the Mirai botnet,",
    "start": "565167",
    "end": "568847"
  },
  {
    "text": "and at its peak we were hit\nwith over 177 cubits a second,",
    "start": "568847",
    "end": "572255"
  },
  {
    "text": "which impacted our applications.",
    "start": "572255",
    "end": "574245"
  },
  {
    "text": "Alright, that's something.",
    "start": "574245",
    "end": "576190"
  },
  {
    "text": "So you have chosen a couple of services.\nLet's talk through the architecture.",
    "start": "576190",
    "end": "579746"
  },
  {
    "text": "Sure, so in front\nof all of our applications,",
    "start": "579746",
    "end": "582543"
  },
  {
    "text": "we have CloudFront.",
    "start": "582544",
    "end": "584418"
  },
  {
    "text": "and we use CloudFront's\npartner applications",
    "start": "584418",
    "end": "589527"
  },
  {
    "text": "to mitigate against DDoS,\nso we use Shield Advanced",
    "start": "589527",
    "end": "593699"
  },
  {
    "text": "to be able to mitigate",
    "start": "593699",
    "end": "595464"
  },
  {
    "text": "both layer 3 and layer 7--",
    "start": "595464",
    "end": "598644"
  },
  {
    "text": "layer 3 and layer 4 DDoS attempts.",
    "start": "598644",
    "end": "602644"
  },
  {
    "text": "Things such as ACK floods or SYN floods.",
    "start": "602644",
    "end": "606644"
  },
  {
    "text": "Also low complexity layer 7 attacks,",
    "start": "606644",
    "end": "612355"
  },
  {
    "text": "such as HTTP floods.",
    "start": "612355",
    "end": "614706"
  },
  {
    "text": "For more complicated layer 7 attacks",
    "start": "614706",
    "end": "617527"
  },
  {
    "text": "we use WAF,",
    "start": "617527",
    "end": "619694"
  },
  {
    "text": "where we can create filters\nto block more complicated attacks.",
    "start": "619694",
    "end": "624047"
  },
  {
    "text": "This is a good time in the architecture\nto talk about Shield Advanced.",
    "start": "625014",
    "end": "629251"
  },
  {
    "text": "Ryan talks about\nhow they used Shield Advanced",
    "start": "629252",
    "end": "632067"
  },
  {
    "text": "to protect against layer 3\nand layer 4 attacks.",
    "start": "632067",
    "end": "635479"
  },
  {
    "text": "One recent feature we launched this year\nthat may be of interest",
    "start": "635479",
    "end": "639440"
  },
  {
    "text": "is protection groups.",
    "start": "639440",
    "end": "641112"
  },
  {
    "text": "AWS Shield Advanced now allows you\nto bundle resources",
    "start": "641112",
    "end": "644942"
  },
  {
    "text": "like your CloudFront distribution,\nfor example,",
    "start": "644942",
    "end": "647582"
  },
  {
    "text": "into these protection groups,",
    "start": "647582",
    "end": "649457"
  },
  {
    "text": "giving you a self-service way\nto customize the scope of detection",
    "start": "649457",
    "end": "653808"
  },
  {
    "text": "and mitigation for your application",
    "start": "653809",
    "end": "656590"
  },
  {
    "text": "by treating multiple resources\nas a single unit.",
    "start": "656590",
    "end": "660168"
  },
  {
    "text": "Let's go back to hearing",
    "start": "660168",
    "end": "661738"
  },
  {
    "text": "how they completed\ntheir security architecture framework.",
    "start": "661738",
    "end": "665347"
  },
  {
    "text": "So you used Shield Advanced\nto increase scale out",
    "start": "667095",
    "end": "670347"
  },
  {
    "text": "to swallow the incoming flood",
    "start": "670347",
    "end": "673009"
  },
  {
    "text": "and use WAF to make sure that you block.",
    "start": "673009",
    "end": "675352"
  },
  {
    "text": "Now there's more to this.\nTalk us through.",
    "start": "675353",
    "end": "678439"
  },
  {
    "text": "Sure, so from CloudFront\nand the protection that's therein,",
    "start": "678439",
    "end": "682010"
  },
  {
    "text": "we send the traffic across to Route 53,",
    "start": "682010",
    "end": "685198"
  },
  {
    "text": "where we have two separate,\nRoute 53 hosted zones.",
    "start": "685198",
    "end": "690368"
  },
  {
    "text": "One for traffic going to an ELB.",
    "start": "690368",
    "end": "695595"
  },
  {
    "text": "For traffic going to an ELB,",
    "start": "695595",
    "end": "697173"
  },
  {
    "text": "we just send non-sensitive traffic,",
    "start": "697174",
    "end": "700916"
  },
  {
    "text": "But for more sensitive traffic,",
    "start": "700916",
    "end": "702285"
  },
  {
    "text": "we send the traffic across\nto an EC2 instance,",
    "start": "702285",
    "end": "705001"
  },
  {
    "text": "which hosts an F5 BIG-IP,",
    "start": "705002",
    "end": "708786"
  },
  {
    "text": "which is another form of WAF",
    "start": "708786",
    "end": "710645"
  },
  {
    "text": "and that adds an extra layer of protection",
    "start": "710645",
    "end": "713707"
  },
  {
    "text": "on top of the WAF\nwe already have on CloudFront.",
    "start": "713707",
    "end": "716910"
  },
  {
    "text": "I see, so you do basically\nintroduce another layer",
    "start": "716911",
    "end": "719450"
  },
  {
    "text": "to make sure that you are able\nto tackle even more",
    "start": "719450",
    "end": "722372"
  },
  {
    "text": "types and variations of attacks",
    "start": "722372",
    "end": "724137"
  },
  {
    "text": "with F5 being involved here.",
    "start": "724137",
    "end": "726379"
  },
  {
    "text": "I see this is happening within a VPC,\nso there's a segregation.",
    "start": "726379",
    "end": "729581"
  },
  {
    "text": "What happens to the rest of the services.",
    "start": "729581",
    "end": "731690"
  },
  {
    "text": "Yeah, so once the traffic\ngoes through the VPC,",
    "start": "731690",
    "end": "735104"
  },
  {
    "text": "we send it across to a VPC peering,",
    "start": "735104",
    "end": "739073"
  },
  {
    "text": "which sends the traffic to one\nof our seven different channel accounts,",
    "start": "739073",
    "end": "744891"
  },
  {
    "text": "where our applications actually sit.",
    "start": "744891",
    "end": "747406"
  },
  {
    "text": "So from the VPC peering,",
    "start": "747406",
    "end": "749273"
  },
  {
    "text": "we see it goes across to the VPCs\nin those accounts,",
    "start": "749273",
    "end": "752070"
  },
  {
    "text": "which allows developers\nto create applications",
    "start": "752070",
    "end": "756430"
  },
  {
    "text": "with the DDoS protection already built in.",
    "start": "756430",
    "end": "758602"
  },
  {
    "text": "I see, so you do send filtered\nand non-filtered traffic",
    "start": "758602",
    "end": "761344"
  },
  {
    "text": "down here to your\nkind of cloud environment,",
    "start": "761344",
    "end": "764898"
  },
  {
    "text": "and there's on-prem involved as well.",
    "start": "764898",
    "end": "766711"
  },
  {
    "text": "I see Direct Connect.\nHow does that collaborate?",
    "start": "766711",
    "end": "771125"
  },
  {
    "text": "Sure, yeah, so we're still in the process",
    "start": "771125",
    "end": "773533"
  },
  {
    "text": "of migrating to the cloud,",
    "start": "773533",
    "end": "774931"
  },
  {
    "text": "so we have a number of applications",
    "start": "774931",
    "end": "776308"
  },
  {
    "text": "that actually sit\non our on-premise data centers.",
    "start": "776308",
    "end": "779852"
  },
  {
    "text": "So traffic from both the EC2 instances",
    "start": "779853",
    "end": "782353"
  },
  {
    "text": "and from the ALB",
    "start": "784319",
    "end": "786647"
  },
  {
    "text": "go through to Direct Connect,",
    "start": "786647",
    "end": "789006"
  },
  {
    "text": "which then allows our customers' traffic\nto go to our on-prem application servers.",
    "start": "789007",
    "end": "793040"
  },
  {
    "text": "Alright, okay.\nSo we end with this part.",
    "start": "794376",
    "end": "796641"
  },
  {
    "text": "On-prem is involved.",
    "start": "796642",
    "end": "798798"
  },
  {
    "text": "But I see some more services.\nWhat about these?",
    "start": "798798",
    "end": "801423"
  },
  {
    "text": "Sure, yeah so\nfor an added layer of protection",
    "start": "801423",
    "end": "804696"
  },
  {
    "text": "we send traffic--\nwe send logs of our traffic",
    "start": "804696",
    "end": "808351"
  },
  {
    "text": "from CloudFront over to an S3 bucket.",
    "start": "808351",
    "end": "811484"
  },
  {
    "text": "From there we then send the logs across\nto our on-premise analysis servers,",
    "start": "811484",
    "end": "817194"
  },
  {
    "text": "which use both proprietary\nand third-party analytics",
    "start": "817194",
    "end": "822201"
  },
  {
    "text": "and equations to be able\nto identify further malicious traffic.",
    "start": "822202",
    "end": "826076"
  },
  {
    "text": "Once that traffic is identified",
    "start": "827288",
    "end": "828999"
  },
  {
    "text": "we then send the IP addresses",
    "start": "828999",
    "end": "832380"
  },
  {
    "text": "back up to AWS",
    "start": "832380",
    "end": "833857"
  },
  {
    "text": "into this DynamoDB instance we see here.",
    "start": "833857",
    "end": "837911"
  },
  {
    "text": "And there's a--\nBasically the IP addresses",
    "start": "837911",
    "end": "841715"
  },
  {
    "text": "are added to a table within DynamoDB,",
    "start": "841715",
    "end": "845402"
  },
  {
    "text": "both with an expiration date,",
    "start": "845402",
    "end": "849605"
  },
  {
    "text": "which due to the nature of IP addresses\nare changing constantly.",
    "start": "849606",
    "end": "852270"
  },
  {
    "text": "There is a Lambda function which then runs",
    "start": "854067",
    "end": "856020"
  },
  {
    "text": "that inspects that table",
    "start": "856020",
    "end": "858294"
  },
  {
    "text": "for any new entries\nor for any expired entries,",
    "start": "858294",
    "end": "864043"
  },
  {
    "text": "and then updates the WAF filters",
    "start": "864043",
    "end": "867731"
  },
  {
    "text": "with those IP addresses.",
    "start": "867731",
    "end": "868738"
  },
  {
    "text": "So it looks like a continuous\nimprovement flow to your WAF filters.",
    "start": "869660",
    "end": "874384"
  },
  {
    "text": "Utilize the Direct Connect connection\nwith the low latency and high bandwidth",
    "start": "874385",
    "end": "878402"
  },
  {
    "text": "to make sure that you have no losses\nin terms of connection.",
    "start": "878402",
    "end": "884282"
  },
  {
    "text": "And...yeah.\nThank you, Ryan.",
    "start": "884283",
    "end": "886439"
  },
  {
    "text": "Thanks for sharing\nthis very interesting solution.",
    "start": "886439",
    "end": "889479"
  },
  {
    "text": "And thanks for watching\n'This is My Architecture.'",
    "start": "889479",
    "end": "891441"
  },
  {
    "text": "That's an impressive way\nto use Lambda functions",
    "start": "893025",
    "end": "895926"
  },
  {
    "text": "to inspect DynamoDB tables",
    "start": "895926",
    "end": "898225"
  },
  {
    "text": "and then update the WAF filters\nwith the IP addresses.",
    "start": "898225",
    "end": "902639"
  },
  {
    "text": "One thing I want to add here",
    "start": "902639",
    "end": "904264"
  },
  {
    "text": "is with the latest version of AWS WAF",
    "start": "904265",
    "end": "906984"
  },
  {
    "text": "we support variable\nCIDR ranges for IP sets,",
    "start": "906984",
    "end": "910577"
  },
  {
    "text": "giving you the flexibility.",
    "start": "910577",
    "end": "912624"
  },
  {
    "text": "For IPv4, for instance,\nwe support /1 to /32.",
    "start": "912624",
    "end": "917460"
  },
  {
    "text": "And for IPv6, we support /1 to /128.",
    "start": "917460",
    "end": "922046"
  },
  {
    "text": "The IP set match statement\ninspects the IP address of a web request",
    "start": "922046",
    "end": "926913"
  },
  {
    "text": "against a set of IP addresses\nand address ranges.",
    "start": "926913",
    "end": "930536"
  },
  {
    "text": "So you can use this\nto either allow or block web requests",
    "start": "930536",
    "end": "935082"
  },
  {
    "text": "based on the IP addresses.",
    "start": "935082",
    "end": "937371"
  },
  {
    "text": "One additional thing to note here.",
    "start": "937371",
    "end": "939441"
  },
  {
    "text": "By default, AWS WAF uses the IP address\nfrom the web request origin,",
    "start": "939442",
    "end": "945692"
  },
  {
    "text": "but you can definitely configure the rule",
    "start": "945692",
    "end": "948670"
  },
  {
    "text": "to use an HTTP header",
    "start": "948670",
    "end": "951388"
  },
  {
    "text": "like X-Forwarded-for instead.",
    "start": "951388",
    "end": "954935"
  },
  {
    "text": "And that's a wrap\nfor 'This is My Architecture' session",
    "start": "954935",
    "end": "958427"
  },
  {
    "text": "at re:Invent.",
    "start": "958427",
    "end": "959787"
  },
  {
    "text": "We hope you enjoyed the two videos",
    "start": "959787",
    "end": "961998"
  },
  {
    "text": "and the additional information.",
    "start": "961999",
    "end": "964281"
  },
  {
    "text": "See you soon in another\n'This is My Architecture' session.",
    "start": "964281",
    "end": "967593"
  }
]