[
  {
    "text": "good afternoon everybody hello and welcome very happy to be here",
    "start": "89",
    "end": "5850"
  },
  {
    "text": "be here with you guys today my name is Vivek Wadhwa veted I'm business",
    "start": "5850",
    "end": "11130"
  },
  {
    "text": "development manager with the continuous Services team and today I'll be speaking about operational excellence with",
    "start": "11130",
    "end": "18390"
  },
  {
    "text": "containerized workloads using AWS Fargate this year I've spent a lot of",
    "start": "18390",
    "end": "23910"
  },
  {
    "text": "time speaking with a lot of customers about their experience with AWS Fargate and as part of today's presentation I'm",
    "start": "23910",
    "end": "30990"
  },
  {
    "text": "going to share some of the best practices and lessons learned from those customer conversations so you can take",
    "start": "30990",
    "end": "37710"
  },
  {
    "text": "advantage of them and as part of that I'll also share some customer stories and use cases so you can understand how",
    "start": "37710",
    "end": "45539"
  },
  {
    "text": "other customers have taken this journey and I'll also then pass it off to Shimon Holtz who is the CTO and founder of de",
    "start": "45539",
    "end": "52649"
  },
  {
    "text": "Tree and he'll be sharing their the de Tree experience with AWS Fargate and then follow that up with a demo so let's",
    "start": "52649",
    "end": "60329"
  },
  {
    "text": "get started let me just level set for anybody who's relatively new to Fargate",
    "start": "60329",
    "end": "65400"
  },
  {
    "text": "on what Fargate is so far gate is a managed container orchestration service",
    "start": "65400",
    "end": "70830"
  },
  {
    "text": "it's today built upon Amazon ECS so you get the benefits of the global scale the",
    "start": "70830",
    "end": "77460"
  },
  {
    "text": "global availability of Amazon ECS but you get a service experience in Fargate",
    "start": "77460",
    "end": "84479"
  },
  {
    "text": "you don't have to manage the underlying instances you're basically looking at containers specifying the resources that",
    "start": "84479",
    "end": "90960"
  },
  {
    "text": "you need and you're deploying them the service can scale up and down based on",
    "start": "90960",
    "end": "97470"
  },
  {
    "text": "your needs and you'd be specifying the service scaling parameters and it has a pay-as-you-go model in addition to that",
    "start": "97470",
    "end": "104369"
  },
  {
    "text": "Fargate makes takes advantage of native AWS integration and what that means is",
    "start": "104369",
    "end": "109500"
  },
  {
    "text": "it's actually taking advantage of capabilities like native EPC integration I am permissions at the task level so a",
    "start": "109500",
    "end": "117479"
  },
  {
    "text": "task just a level set for anyone who may be new to AWS Fargate or amazon ECS is a",
    "start": "117479",
    "end": "123360"
  },
  {
    "text": "logical construct of one or more containers up to ten containers so you'd be deploying a task and with Fargate",
    "start": "123360",
    "end": "130170"
  },
  {
    "text": "you'd be able to get native I am control and permissions at the task level in addition to that",
    "start": "130170",
    "end": "137659"
  },
  {
    "text": "integration with other parts of the ecosystem like monitoring and logging from a cloud west perspective and other",
    "start": "137659",
    "end": "143120"
  },
  {
    "text": "parts of the AWS ecosystem so while Amazon ECS provides a managed",
    "start": "143120",
    "end": "150140"
  },
  {
    "text": "control plane experience and from control plane perspective I'm talking about how the orchestration is done the",
    "start": "150140",
    "end": "156319"
  },
  {
    "text": "scheduling the task placement across your ec2 instances what actually happens",
    "start": "156319",
    "end": "162319"
  },
  {
    "text": "from a far gate perspective is you no longer have to manage the OS the docker",
    "start": "162319",
    "end": "167480"
  },
  {
    "text": "run time the ECS agent this basically gets taken care of by Fargate now we've",
    "start": "167480",
    "end": "174440"
  },
  {
    "text": "had a lot of momentum behind the adoption of Fargate we've had customers from every market segment take advantage",
    "start": "174440",
    "end": "180590"
  },
  {
    "text": "of Fargate you've had customers from media manufacturing electronics startups",
    "start": "180590",
    "end": "187640"
  },
  {
    "text": "and enterprises all alike take advantage of Fargate so we've had customers like Turner and Honda and Samsung and CBS and",
    "start": "187640",
    "end": "194599"
  },
  {
    "text": "KPMG take advantage of Fargate and they've had very successful deployments of this so let me get into some of the",
    "start": "194599",
    "end": "202329"
  },
  {
    "text": "aspects of Fargate and one of the first questions I get about Fargate is can I use for gate in the region's I care",
    "start": "202329",
    "end": "208849"
  },
  {
    "text": "about so these are the currently available global regions that you can actually take advantage of far gate and",
    "start": "208849",
    "end": "215000"
  },
  {
    "text": "this is available in the Americas Europe Middle East Africa and Asia Pacific now",
    "start": "215000",
    "end": "222650"
  },
  {
    "text": "let's get into some of the operational aspects of Italy as far gate a obvious far gate starts off with a very strong",
    "start": "222650",
    "end": "228739"
  },
  {
    "text": "app operational foundation it's actually built on the ec2 and EBS compute SLA so",
    "start": "228739",
    "end": "238370"
  },
  {
    "text": "we're commit our commitment is to provide four nines of availability so that's a really good starting point to",
    "start": "238370",
    "end": "243859"
  },
  {
    "text": "start building your applications in addition to that as with all of AWS you",
    "start": "243859",
    "end": "249889"
  },
  {
    "text": "get to take advantage of the multi availability zone capabilities that are available with every region now I only",
    "start": "249889",
    "end": "256940"
  },
  {
    "text": "call this out in this presentation because with Fargate things are a little subtle in that you have to explicitly",
    "start": "256940",
    "end": "262840"
  },
  {
    "text": "say when you're specifying your availability zones you're actually doing so in",
    "start": "262840",
    "end": "267920"
  },
  {
    "text": "bliss Utley when you're specifying the subnets are going to use so the subnets mapped to the availability zone so just",
    "start": "267920",
    "end": "274040"
  },
  {
    "text": "be aware of that and you know as with general deployments about availability",
    "start": "274040",
    "end": "279080"
  },
  {
    "text": "zones you should deploy them across as many availability zones as you can and this is not just from an availability",
    "start": "279080",
    "end": "285620"
  },
  {
    "text": "perspective but also from a capacity perspective now one of the features that",
    "start": "285620",
    "end": "291410"
  },
  {
    "text": "was released earlier this year that a lot of customers really haven't take",
    "start": "291410",
    "end": "296780"
  },
  {
    "text": "advantage of is container health checks so you're now able to get the capabilities around docker container",
    "start": "296780",
    "end": "303860"
  },
  {
    "text": "health checks in addition to load balancer health checks so where a load balancer health checks would provide",
    "start": "303860",
    "end": "309880"
  },
  {
    "text": "HTTP and TCP level health checks you'd be able to define custom health checks",
    "start": "309880",
    "end": "316310"
  },
  {
    "text": "at a docker container level and be able to specify parameters around how many times you want that to check redeploy",
    "start": "316310",
    "end": "323150"
  },
  {
    "text": "the service if it's on if you read it play the task if it's unhealthy and be able to check the status of this either",
    "start": "323150",
    "end": "329540"
  },
  {
    "text": "in the console or through the describe tasks API and check the health status of that now one aspect of a strong",
    "start": "329540",
    "end": "340040"
  },
  {
    "text": "operational foundation is security and this is really an area that customers love about Fargate so let me dig into",
    "start": "340040",
    "end": "345800"
  },
  {
    "text": "this a little bit and one reason for this is just a security structure helps customers adopt container technology and",
    "start": "345800",
    "end": "352480"
  },
  {
    "text": "not have to worry as much about the rigors of going through internal approvals from their information",
    "start": "352480",
    "end": "358460"
  },
  {
    "text": "security teams so let's start with the AWS shared security responsibility model",
    "start": "358460",
    "end": "364910"
  },
  {
    "text": "so with Fargate AWS is now taking care of the operating system the docker run time the infrastructure and the scaling",
    "start": "364910",
    "end": "372830"
  },
  {
    "text": "and the capacity associated with it in addition to what you would get with ECS in terms of scheduling and control plane",
    "start": "372830",
    "end": "379670"
  },
  {
    "text": "management you as a customer would be responsible for your container images",
    "start": "379670",
    "end": "385240"
  },
  {
    "text": "configuring your docker containers and also identity and access management as",
    "start": "385240",
    "end": "390920"
  },
  {
    "text": "well as network configuration now this is a really good time to get into what",
    "start": "390920",
    "end": "396590"
  },
  {
    "text": "the Fargate platform version is some of you may already be using this but I to take it and to just highlight some",
    "start": "396590",
    "end": "403160"
  },
  {
    "text": "subtleties so with Fargate you're getting a known quantity in the Fargate",
    "start": "403160",
    "end": "408620"
  },
  {
    "text": "platform version so a ga release 1.0 we've subsequently released two additional enhancements and this is one",
    "start": "408620",
    "end": "415490"
  },
  {
    "text": "way where we are able to release new capabilities so you can see with 1.1 we added capabilities for the",
    "start": "415490",
    "end": "422300"
  },
  {
    "text": "ECS service discovery dr. hell checks in containers and other capabilities and",
    "start": "422300",
    "end": "427820"
  },
  {
    "text": "then we additionally added other features subsequently thereafter now this is a known quantity that you can",
    "start": "427820",
    "end": "433070"
  },
  {
    "text": "qualify your software against while not having to worry about the underlying infrastructure so things like the OS the",
    "start": "433070",
    "end": "439550"
  },
  {
    "text": "docker run time ECS agent you don't need to worry about what works with what how to deploy it just gets taken care of you",
    "start": "439550",
    "end": "445340"
  },
  {
    "text": "from a platform version but you have a known quantity now if there's a security vulnerability AWS would patch the",
    "start": "445340",
    "end": "452180"
  },
  {
    "text": "Fargate platform version for you and all of the things that are underneath it the OS the runtime those would be taken care",
    "start": "452180",
    "end": "459139"
  },
  {
    "text": "of by AWS as well so some of the security benefits that you actually get",
    "start": "459139",
    "end": "464300"
  },
  {
    "text": "with Fargate are as I mentioned AWS would patch the docker run time in the operating system you wouldn't have",
    "start": "464300",
    "end": "471289"
  },
  {
    "text": "direct access to the infrastructure so there's no SSH and there's no docker exact in so this helps reduce the attack",
    "start": "471289",
    "end": "477110"
  },
  {
    "text": "surface area and it's actually reinforcing good and best practices around making the changes through a",
    "start": "477110",
    "end": "483919"
  },
  {
    "text": "proper CI CD pipeline and driving best practices around DevOps in CI CD in",
    "start": "483919",
    "end": "489349"
  },
  {
    "text": "addition to that there's no privileged access so that means that you have much",
    "start": "489349",
    "end": "494750"
  },
  {
    "text": "less of a surtax surface area and this is also reinforcing best practices one",
    "start": "494750",
    "end": "500510"
  },
  {
    "text": "aspect that's actually less understood is what is the isolation boundary when you have a server list model and you're",
    "start": "500510",
    "end": "506270"
  },
  {
    "text": "running containers so with a task that is the isolation boundary in Fargate so",
    "start": "506270",
    "end": "511849"
  },
  {
    "text": "you don't share a kernel you don't share CPU resources you don't share memory",
    "start": "511849",
    "end": "517520"
  },
  {
    "text": "resources or ionize with another task the task is the isolation boundary so",
    "start": "517520",
    "end": "524480"
  },
  {
    "text": "that also means since every task gets its own eni and you're running in AWS PPC mode you're getting all of the",
    "start": "524480",
    "end": "530750"
  },
  {
    "text": "benefits from a V PC perspective you're all your application perfect for your task runs through the",
    "start": "530750",
    "end": "536660"
  },
  {
    "text": "Eni you get to take advantage of security constructs at a VPC level like security groups and network ACLs you",
    "start": "536660",
    "end": "543620"
  },
  {
    "text": "also get the benefits of using VPC float logs to monitor your your network traffic to see are there security issues",
    "start": "543620",
    "end": "551180"
  },
  {
    "text": "that you should be aware of from a network perspective from a registry",
    "start": "551180",
    "end": "556339"
  },
  {
    "text": "perspective when we launched ie WS Fargate we supported Amazon Elastic",
    "start": "556339",
    "end": "561680"
  },
  {
    "text": "container registry which is our registry platform that was created in 2015 it's",
    "start": "561680",
    "end": "566930"
  },
  {
    "text": "highly scalable globally available encrypted and also supports lifecycle policy management customers may choose",
    "start": "566930",
    "end": "573199"
  },
  {
    "text": "to run public Raza Tories as well but very recently in September we announced support for third party private",
    "start": "573199",
    "end": "579820"
  },
  {
    "text": "repositories so you would basically store your credentials in AWS secrets",
    "start": "579820",
    "end": "588470"
  },
  {
    "text": "manager you would then specify that in your container definition and then be",
    "start": "588470",
    "end": "593630"
  },
  {
    "text": "able to look that up and authenticate against that now any conversation about",
    "start": "593630",
    "end": "601940"
  },
  {
    "text": "security is incomplete without compliance so far gate as ECS this also",
    "start": "601940",
    "end": "608540"
  },
  {
    "text": "supports all of the ISO certifications PCI compliance it's HIPAA eligible and",
    "start": "608540",
    "end": "613790"
  },
  {
    "text": "it supports sock 1 2 3 so this event additionally becomes a really strong starting point if you're running in a",
    "start": "613790",
    "end": "620089"
  },
  {
    "text": "regulated market or you need to be able to report to your auditors that in addition to being server list it also",
    "start": "620089",
    "end": "625820"
  },
  {
    "text": "meets these compliance requirements and it takes some of that burden off of your hands now once you have a strong",
    "start": "625820",
    "end": "631940"
  },
  {
    "text": "security posture like that one question that comes up is ok this is a little bit of a change of procedures for me how am",
    "start": "631940",
    "end": "637790"
  },
  {
    "text": "I going to now observe my applications and my containers so let's get into that a little bit so out of the box cloud",
    "start": "637790",
    "end": "643910"
  },
  {
    "text": "watch events can is though you can actually make that available in terms of",
    "start": "643910",
    "end": "649190"
  },
  {
    "text": "task state changes so you can actually monitor that there and in addition to that there's nothing to configure as far",
    "start": "649190",
    "end": "655220"
  },
  {
    "text": "as service utilization for CPU and memory so you can actually go to cloud watch metrics and be able to view that",
    "start": "655220",
    "end": "660680"
  },
  {
    "text": "there's no configuration that you need to do there in addition you can take advantage of logging from an EWS logs",
    "start": "660680",
    "end": "665839"
  },
  {
    "text": "perspective which is the cloud watch logs and you basically just create a log group configure your log group and then make",
    "start": "665839",
    "end": "671610"
  },
  {
    "text": "sure you add the task execution permission and you're able to now view your logs through cloud wash logs one",
    "start": "671610",
    "end": "680190"
  },
  {
    "text": "important capability that some of you may be aware of is task metadata I'd like to dig in a little bit as to",
    "start": "680190",
    "end": "686459"
  },
  {
    "text": "some capabilities of this that are really important first of all you can use the task meditator to query",
    "start": "686459",
    "end": "691920"
  },
  {
    "text": "environmental and runtime in information about your tasks there are other ways to",
    "start": "691920",
    "end": "697860"
  },
  {
    "text": "take advantage of this without actually having to do anything you could use tools like data dog which has excellent",
    "start": "697860",
    "end": "703079"
  },
  {
    "text": "integration with this so you can actually see V CPU and memory utilization at a task level in addition",
    "start": "703079",
    "end": "709800"
  },
  {
    "text": "to that if you are looking to troubleshoot or understand your task launch times or what contribution your",
    "start": "709800",
    "end": "716939"
  },
  {
    "text": "image pull times may have to your overall task launch times one in one helpful way to debug this is to use the",
    "start": "716939",
    "end": "724620"
  },
  {
    "text": "task metadata capabilities to look at when your tasks were created and went into pending state when the docker image",
    "start": "724620",
    "end": "730649"
  },
  {
    "text": "poll will started when it stops so you actually understand how long is this actually taking is it's a function of my",
    "start": "730649",
    "end": "736110"
  },
  {
    "text": "country container image size is there a network issue is there something else I should be looking into and then you can",
    "start": "736110",
    "end": "741689"
  },
  {
    "text": "also see when the task was started and went into running state now application",
    "start": "741689",
    "end": "750540"
  },
  {
    "text": "tracing is an important part as your application development processes it mature and we do have support for this",
    "start": "750540",
    "end": "757889"
  },
  {
    "text": "through AWS x-ray you can actually take advantage of this at the bottom I've included a link but essentially by",
    "start": "757889",
    "end": "763199"
  },
  {
    "text": "running this as a sidecar you're able to actually make use of x-ray and start troubleshooting your applications ahead",
    "start": "763199",
    "end": "768750"
  },
  {
    "text": "of time and understand and prevent problems before they become bigger problems now Fargate is not going to be",
    "start": "768750",
    "end": "778019"
  },
  {
    "text": "you know container conversations are not going to be complete without a CI CD piece so I want to touch on this a",
    "start": "778019",
    "end": "783480"
  },
  {
    "text": "little bit so we do have a reference architecture that you can actually use for Fargate for as far as CI CD and you",
    "start": "783480",
    "end": "792750"
  },
  {
    "text": "can actually use the aid of AWS developer tools whether it be code commit commit code build cloud formation",
    "start": "792750",
    "end": "799470"
  },
  {
    "text": "for deployments and code by pipeline to orchestrate whole thing or you can use open-source tools like github and Jenkins for those",
    "start": "799470",
    "end": "807150"
  },
  {
    "text": "who are also following spinnaker we are actually actively working on that that is a work in progress and you can follow",
    "start": "807150",
    "end": "812820"
  },
  {
    "text": "that on the spinnaker github as well as the spinnaker documentation now one",
    "start": "812820",
    "end": "818010"
  },
  {
    "text": "announcement that was made yesterday that is really cool is as far as a ECS",
    "start": "818010",
    "end": "824040"
  },
  {
    "text": "as well as Fargate now supports native blue green support because of code deploy integration so you can actually",
    "start": "824040",
    "end": "829440"
  },
  {
    "text": "do Bluegreen deployments with code deploy now another aspect of being able",
    "start": "829440",
    "end": "841500"
  },
  {
    "text": "to run strong operations is if you're especially if you're a central IT organization or you're trying to attribute cost and understand chargeback",
    "start": "841500",
    "end": "848850"
  },
  {
    "text": "is the support for tagging well you've had it in ec2 you haven't necessarily had it with UCS and Fargate you now have",
    "start": "848850",
    "end": "855810"
  },
  {
    "text": "that as a native capability you can actually opt in to this with a new Arn",
    "start": "855810",
    "end": "861120"
  },
  {
    "text": "and once you've done that you can actually make use of understanding so what the art does is basically adds",
    "start": "861120",
    "end": "867090"
  },
  {
    "text": "cluster information into your tasks so you can actually understand what cluster it's part of and if you're part of a",
    "start": "867090",
    "end": "874260"
  },
  {
    "text": "service it'll also add the service piece as well so you can now actually go into your costs and usage report data and",
    "start": "874260",
    "end": "879420"
  },
  {
    "text": "understand you know how is my cost allocated associated with this stuff and you can also use cost Explorer and",
    "start": "879420",
    "end": "885930"
  },
  {
    "text": "there's a detailed blog about this as well as documentation that gives you screenshots and and and dig into how you",
    "start": "885930",
    "end": "891450"
  },
  {
    "text": "can actually attribute this and this will vary by customer based on how they do cost allocation internally whether it",
    "start": "891450",
    "end": "897750"
  },
  {
    "text": "be by services applications line of businesses so it does require some focus",
    "start": "897750",
    "end": "903180"
  },
  {
    "text": "on that now let me get into some customer experiences there are three",
    "start": "903180",
    "end": "909480"
  },
  {
    "text": "scenarios that I'm gonna outline the first is an enterprise wide migration from a customer that you probably have",
    "start": "909480",
    "end": "917250"
  },
  {
    "text": "all heard of Turner they actually presented here at reinvent I think their presentations are on Monday and Tuesday so you can probably",
    "start": "917250",
    "end": "924300"
  },
  {
    "text": "if you haven't been to that one you can actually catch the the replay on on YouTube when it's posted so they're",
    "start": "924300",
    "end": "930360"
  },
  {
    "text": "obviously the parent company of companies like the Cartoon Network T and T TBS",
    "start": "930360",
    "end": "935370"
  },
  {
    "text": "they had actually had 5000 container deployment with thousands of services in",
    "start": "935370",
    "end": "940920"
  },
  {
    "text": "an existing environment where they were actually managing a container orchestration platform for both the",
    "start": "940920",
    "end": "946080"
  },
  {
    "text": "control plane and the day and their worker nodes and they looked at this over time and they understand understood",
    "start": "946080",
    "end": "953010"
  },
  {
    "text": "that there was a lot of complexity associated with this there was a lot of undifferentiated have you lifting that they were doing in terms of managing the",
    "start": "953010",
    "end": "959370"
  },
  {
    "text": "infrastructure managing the lifecycle of all of this and building essentially a",
    "start": "959370",
    "end": "965460"
  },
  {
    "text": "platform on top of that to enable their developers and their different lines of business or their brands so they looked",
    "start": "965460",
    "end": "971970"
  },
  {
    "text": "at their options earlier this year and they decided to go with AWS Fargate and they did so because this would help them",
    "start": "971970",
    "end": "978060"
  },
  {
    "text": "offload a lot of responsibilities both from a security capability perspective a provision from an operational",
    "start": "978060",
    "end": "983790"
  },
  {
    "text": "perspective from a provisioning and not having to do two-factor scaling for example and leverage Fargate and just",
    "start": "983790",
    "end": "990089"
  },
  {
    "text": "worry about their containers they were able to use things like the Fargate CLI to really help the developers migrate",
    "start": "990089",
    "end": "997950"
  },
  {
    "text": "their workloads over and be able to support deployments and then from an infrastructure as a code perspective they were actually leveraging terraform",
    "start": "997950",
    "end": "1004670"
  },
  {
    "text": "and this really helped them reduce drive a lot of automation drive a lot of consistency and help adopt new",
    "start": "1004670",
    "end": "1011270"
  },
  {
    "text": "capabilities much more quickly and from a cost savings perspective they were actually able to leverage a lot of",
    "start": "1011270",
    "end": "1016430"
  },
  {
    "text": "efficiencies here from an operational perspective as well as turn off tasks when they just weren't using them and a lot of this stuff is now available on",
    "start": "1016430",
    "end": "1023000"
  },
  {
    "text": "Turner's get labs so you can actually go to Turner labs and look at their terraform scripts as well as they're a",
    "start": "1023000",
    "end": "1030319"
  },
  {
    "text": "far gate CLI fork that they can actually you can actually contribute or consume",
    "start": "1030319",
    "end": "1036250"
  },
  {
    "text": "now another customer that we're looking at here is an enterprise customer that's trying to launch a new idea and go go",
    "start": "1036250",
    "end": "1042380"
  },
  {
    "text": "quickly and go global and this is court Eva agro signs their division they're the agricultural division of Dow DuPont",
    "start": "1042380",
    "end": "1048620"
  },
  {
    "text": "and they do a lot of research globally on how to improve agricultural productivity so their line of business",
    "start": "1048620",
    "end": "1055220"
  },
  {
    "text": "came to them with an idea we have a new ml algorithm that we want to use and how",
    "start": "1055220",
    "end": "1061010"
  },
  {
    "text": "do we get this out quickly and globally so we can actually get away from a lot of the manual and tedious work that we",
    "start": "1061010",
    "end": "1067220"
  },
  {
    "text": "have to do so they were actually able to look at different options and they looked at how do we get this out quickly so they they leveraged Fargate",
    "start": "1067220",
    "end": "1074440"
  },
  {
    "text": "they use CI CD tools from the developer AWS developer tools like code commit code build code pipeline and then they",
    "start": "1074440",
    "end": "1081130"
  },
  {
    "text": "deployed using quote cloud formation and they were actually able to stand this up",
    "start": "1081130",
    "end": "1086650"
  },
  {
    "text": "prove it out very quickly and then deploy globally so they were actually able to get this done fairly quickly and",
    "start": "1086650",
    "end": "1093520"
  },
  {
    "text": "able to get a much lower cost on doing this they were able to automate a lot of capabilities and improve the developer",
    "start": "1093520",
    "end": "1099250"
  },
  {
    "text": "experience as well the last scenario I'll talk about is the startup active is",
    "start": "1099250",
    "end": "1106330"
  },
  {
    "text": "actually you use some of you may be using active it's basically a leading provider of wellness and fitness content",
    "start": "1106330",
    "end": "1114160"
  },
  {
    "text": "and they actually have an app that's out there that provides you with",
    "start": "1114160",
    "end": "1120090"
  },
  {
    "text": "professional trainers that are actually able to provide content to you you can",
    "start": "1120300",
    "end": "1125560"
  },
  {
    "text": "pair that up with music and you can actually leverage you know workout workout as you need some some you know",
    "start": "1125560",
    "end": "1131950"
  },
  {
    "text": "exercise places they actually Fitness foot centers actually make use of this for their programs and they're actually",
    "start": "1131950",
    "end": "1137920"
  },
  {
    "text": "able to do this now when active started their journey to far gate what they looked at was they had a cost structure",
    "start": "1137920",
    "end": "1143650"
  },
  {
    "text": "that they had with their existing environment they also looked at a monolithic application so they wanted to",
    "start": "1143650",
    "end": "1149080"
  },
  {
    "text": "see how they can move that over break it up into micro services and not have so",
    "start": "1149080",
    "end": "1154900"
  },
  {
    "text": "much of a cost structure so they actually moved over their monolith they were able to strip it down into smaller",
    "start": "1154900",
    "end": "1160690"
  },
  {
    "text": "micro services and then also their api's so by doing this they're actually were",
    "start": "1160690",
    "end": "1166030"
  },
  {
    "text": "able to leverage far gating cloud formation to drive better behavior internally as far as automation through",
    "start": "1166030",
    "end": "1171910"
  },
  {
    "text": "CI and making changes in that form and then they were able to actually get",
    "start": "1171910",
    "end": "1178150"
  },
  {
    "text": "significant efficiencies in terms of cost savings which they actually measure in the number of Kia's that you can",
    "start": "1178150",
    "end": "1184000"
  },
  {
    "text": "actually buy Kia's as in the car so that's how they first start up that's actually the the metric they're actually",
    "start": "1184000",
    "end": "1189970"
  },
  {
    "text": "using so it's quite significant so I hope with this you've understood that",
    "start": "1189970",
    "end": "1196450"
  },
  {
    "text": "there are a lot of benefits that come with AWS Fargate there are some capabilities that are available with",
    "start": "1196450",
    "end": "1203200"
  },
  {
    "text": "Fargate that helps you reduce your operational burden sometimes I get asked where are the tips and tricks and this",
    "start": "1203200",
    "end": "1209860"
  },
  {
    "text": "is kind of the point is you don't necessarily need a lot of these tips and tricks you're actually building your",
    "start": "1209860",
    "end": "1215350"
  },
  {
    "text": "workloads at a container level and that's your focus and that's where it should be and you're getting the efficiency because AWS is taking a lot",
    "start": "1215350",
    "end": "1221980"
  },
  {
    "text": "of the burden away from you so I'd like for to pass it on the presentation - shamone totes is the CTO",
    "start": "1221980",
    "end": "1228130"
  },
  {
    "text": "and founder of the tree and he'll share his experience with AWS Fargate and then could conclude with the demo Thank You",
    "start": "1228130",
    "end": "1236409"
  },
  {
    "text": "Vivek hi everyone nice to meet you my name is human thought so today I'm gonna",
    "start": "1236409",
    "end": "1242169"
  },
  {
    "text": "talk to you about our journey into Fargate and how we build our company completely serverless using mostly",
    "start": "1242169",
    "end": "1249880"
  },
  {
    "text": "Fargate in a little bit of lambda but in order to start I'll tell a little bit",
    "start": "1249880",
    "end": "1256029"
  },
  {
    "text": "about myself so I'm 30 years old I'm one of the WS community heroes and this is me in a",
    "start": "1256029",
    "end": "1263169"
  },
  {
    "text": "very very happy day eight years ago when I got a server into my lab and I was",
    "start": "1263169",
    "end": "1269289"
  },
  {
    "text": "very very happy who here still has physical servers okay okay you're in the",
    "start": "1269289",
    "end": "1276820"
  },
  {
    "text": "right way so I'll ask you another question who here has ec2 instances okay",
    "start": "1276820",
    "end": "1283990"
  },
  {
    "text": "so that's our ec2 console we have zero ec2 instances running in our company and",
    "start": "1283990",
    "end": "1290769"
  },
  {
    "text": "I'm very very happy and I'm gonna tell you a little bit more about how we did that in how we run our company and then",
    "start": "1290769",
    "end": "1297250"
  },
  {
    "text": "I'm gonna show you a live demo and we'll actually take an OGS service and add an",
    "start": "1297250",
    "end": "1303429"
  },
  {
    "text": "end point to it and deploy it into production and then you can see I'll show you the CIC the pipeline and",
    "start": "1303429",
    "end": "1309309"
  },
  {
    "text": "everything we do along the way hopefully the demo gods will stick with us so",
    "start": "1309309",
    "end": "1316570"
  },
  {
    "text": "first I'll tell you a little bit about the tree and what we do in order for you to understand how we apply the",
    "start": "1316570",
    "end": "1322450"
  },
  {
    "text": "technology so the tree is a geat ops policy engine so for every change that",
    "start": "1322450",
    "end": "1327970"
  },
  {
    "text": "the developer makes it's being checked according to our best policies and best",
    "start": "1327970",
    "end": "1334570"
  },
  {
    "text": "practices and policies engine so think of it as an application on top of Gaeta and every time you open a pull",
    "start": "1334570",
    "end": "1340890"
  },
  {
    "text": "request it checks if you're actually working according to your best practices",
    "start": "1340890",
    "end": "1346070"
  },
  {
    "text": "so the the way we we see the world today",
    "start": "1346070",
    "end": "1351990"
  },
  {
    "text": "of development and it's related to this talk and to the tree is that the world has changed and everything is going very",
    "start": "1351990",
    "end": "1359429"
  },
  {
    "text": "very fast from development into production and git is actually the single source of truth that connects",
    "start": "1359429",
    "end": "1366480"
  },
  {
    "text": "everything and nowadays companies including my company I open a pull request I merge it and it goes into",
    "start": "1366480",
    "end": "1373320"
  },
  {
    "text": "production and there is more code than ever everything is becoming codified",
    "start": "1373320",
    "end": "1379820"
  },
  {
    "text": "everything is becoming I call it Yama leaf ID because you don't go to a dashboard anymore in order to configure",
    "start": "1379820",
    "end": "1386510"
  },
  {
    "text": "something you just write the Hamill's code or m/l definition file and then you",
    "start": "1386510",
    "end": "1393179"
  },
  {
    "text": "put it in your repository and then you push it into production so the way our",
    "start": "1393179",
    "end": "1398760"
  },
  {
    "text": "platform works is that our customers installer get up application then we scan the code of the organization and we",
    "start": "1398760",
    "end": "1407850"
  },
  {
    "text": "build a catalog and this catalog has all of the components all of the people and",
    "start": "1407850",
    "end": "1414510"
  },
  {
    "text": "you can see actually it the view of your entire devstack you can ask simple questions of like who is using what and",
    "start": "1414510",
    "end": "1421590"
  },
  {
    "text": "where where do I have the AWS SDK and which versions am i using in different",
    "start": "1421590",
    "end": "1426660"
  },
  {
    "text": "services and then on top of that we're enabling smart policies so actually far",
    "start": "1426660",
    "end": "1433110"
  },
  {
    "text": "gate is powering this part every time a customer of ours opens a pull request we're scanning the code using Fargate so",
    "start": "1433110",
    "end": "1442950"
  },
  {
    "text": "the way it works from our side is that every time we want to actually deploy",
    "start": "1442950",
    "end": "1449520"
  },
  {
    "text": "something to production there is no procedure there is no someone you need",
    "start": "1449520",
    "end": "1455070"
  },
  {
    "text": "to talk to you just create a branch you make your commits then you open a pull",
    "start": "1455070",
    "end": "1460770"
  },
  {
    "text": "request your peers are helping you you have automated tests automated scans we",
    "start": "1460770",
    "end": "1466500"
  },
  {
    "text": "have are the three policies that help build and make sure that we made the correct things like not committed",
    "start": "1466500",
    "end": "1474240"
  },
  {
    "text": "secrets into code make sure that for example we use the new ECS tagging feature in order to know who a cost and",
    "start": "1474240",
    "end": "1483420"
  },
  {
    "text": "to tagger resources make sure that we have a JIRA ticket related to this pool",
    "start": "1483420",
    "end": "1489030"
  },
  {
    "text": "request so we will know logically what we worked for and then if all the checks pass aim or",
    "start": "1489030",
    "end": "1496500"
  },
  {
    "text": "we make fixes along the way then we submit our fixes and then we are able to",
    "start": "1496500",
    "end": "1504720"
  },
  {
    "text": "merge our code into production and this is how we deploy code into production so",
    "start": "1504720",
    "end": "1512570"
  },
  {
    "text": "a little bit about the philosophy of what brought us to using Fargate and",
    "start": "1512570",
    "end": "1518790"
  },
  {
    "text": "running a service company so we prefer buy versus build our business is to help",
    "start": "1518790",
    "end": "1525870"
  },
  {
    "text": "our companies implement their internal best practices in order to prevent",
    "start": "1525870",
    "end": "1531030"
  },
  {
    "text": "production outages our customers are always asking us for more and more features in order to help them codify",
    "start": "1531030",
    "end": "1538140"
  },
  {
    "text": "their policies we have no business in running ec2 instances fixing them",
    "start": "1538140",
    "end": "1545700"
  },
  {
    "text": "deploying them babysitting them it just has nothing to do with our company so we",
    "start": "1545700",
    "end": "1550830"
  },
  {
    "text": "have no ops the developers are the kings and we're using any service we can get",
    "start": "1550830",
    "end": "1556350"
  },
  {
    "text": "as long as it cost effective and it makes sense to our business so why",
    "start": "1556350",
    "end": "1563280"
  },
  {
    "text": "Fargate at the beginning before forget existed we actually used to run on ec2",
    "start": "1563280",
    "end": "1569840"
  },
  {
    "text": "ECS ec2 and it was nice it was better than actually running it on barely ec2",
    "start": "1569840",
    "end": "1578730"
  },
  {
    "text": "but it was still a hassle and I'll go through the things that actually made",
    "start": "1578730",
    "end": "1585390"
  },
  {
    "text": "the difference for us and why we chose to move to Fargate now I'm one of the",
    "start": "1585390",
    "end": "1593420"
  },
  {
    "text": "community leaders and in Israel and we have a meetup group of more than 6,000 people and people often come and ask me",
    "start": "1593420",
    "end": "1601690"
  },
  {
    "text": "how come forget is so expensive if you look at the ec2 instances the difference",
    "start": "1601690",
    "end": "1606730"
  },
  {
    "text": "is very big and I tell them it's it's different you can't compare it it's not apples to apples there are so many",
    "start": "1606730",
    "end": "1613779"
  },
  {
    "text": "things that forget does and that you have to do if you're running on ec2 it's",
    "start": "1613779",
    "end": "1618850"
  },
  {
    "text": "about system administration it's about security and compliance it's about scaling not being over provisioned so",
    "start": "1618850",
    "end": "1626500"
  },
  {
    "text": "how do you quantify the amount of money that it costs you it's hard and in this",
    "start": "1626500",
    "end": "1632440"
  },
  {
    "text": "is why people are having a hard time doing that and I can understand but I",
    "start": "1632440",
    "end": "1637600"
  },
  {
    "text": "can tell you my point of view so the first thing is that we no longer have to",
    "start": "1637600",
    "end": "1642700"
  },
  {
    "text": "configure a.m. eyes we don't have any iam eyes in my previous job we had a",
    "start": "1642700",
    "end": "1648370"
  },
  {
    "text": "bakery with packer and we used to build them and babysit them and and someone",
    "start": "1648370",
    "end": "1653529"
  },
  {
    "text": "wants Ubuntu and another one wants a CentOS and then you constantly have to keep up refreshing your mmm eyes and",
    "start": "1653529",
    "end": "1659139"
  },
  {
    "text": "configuring them we don't do that anymore monitoring and logging is just",
    "start": "1659139",
    "end": "1665259"
  },
  {
    "text": "built-in it is automatically it's a checkbox and all of your logs are going",
    "start": "1665259",
    "end": "1671350"
  },
  {
    "text": "into a cloud watch we use data table on top of that because you know cloud watch",
    "start": "1671350",
    "end": "1677730"
  },
  {
    "text": "is very good but sometimes it needs some help so we leverage that with data dialogues",
    "start": "1677730",
    "end": "1685059"
  },
  {
    "text": "and we can have all of our a monitoring and logging just built in so we don't",
    "start": "1685059",
    "end": "1691600"
  },
  {
    "text": "need to have some elasticsearch cluster and send everything there or do custom things the next thing is that we no",
    "start": "1691600",
    "end": "1700450"
  },
  {
    "text": "longer have to deal with the operation system management we only look at the container level then of course the",
    "start": "1700450",
    "end": "1707169"
  },
  {
    "text": "container is also Linux and you can run alpha and you can run a boon - you can run different types of containers but we",
    "start": "1707169",
    "end": "1714370"
  },
  {
    "text": "no longer care about the underlying ec2 infrastructure and the operating system",
    "start": "1714370",
    "end": "1719830"
  },
  {
    "text": "so we no longer do Linux patching we no longer need to update our docker daemon",
    "start": "1719830",
    "end": "1726129"
  },
  {
    "text": "I don't care we don't need to keep track of our ECS agent version and we don't need to have down times in order to",
    "start": "1726129",
    "end": "1732100"
  },
  {
    "text": "update it because fergie does it for so actually I don't know which kind of",
    "start": "1732100",
    "end": "1737820"
  },
  {
    "text": "Linux my container is running on I have no idea which am I to use I don't know which docker version and I don't really",
    "start": "1737820",
    "end": "1744779"
  },
  {
    "text": "care because our atomic unit is a container we ship it any trans and this",
    "start": "1744779",
    "end": "1751890"
  },
  {
    "text": "is great another thing that we were having trouble with and we no longer",
    "start": "1751890",
    "end": "1758159"
  },
  {
    "text": "have to deal with is gaming because back at the time when we were running ICS on",
    "start": "1758159",
    "end": "1763650"
  },
  {
    "text": "ec2 we actually had to have several auto scaling groups and we had to have the services tasks in Fargate and then you",
    "start": "1763650",
    "end": "1773429"
  },
  {
    "text": "need to have an alignment between your ec2 auto scaling group in the scaling of your containers and then you need to",
    "start": "1773429",
    "end": "1780210"
  },
  {
    "text": "bring back them because you want to run cost-effectively right so you're",
    "start": "1780210",
    "end": "1785279"
  },
  {
    "text": "starting to do like sizing optimization and again my customers want visibility",
    "start": "1785279",
    "end": "1791039"
  },
  {
    "text": "they want governance over their development cycle they want us to help them build policies they don't care",
    "start": "1791039",
    "end": "1797279"
  },
  {
    "text": "about my bin packing and I don't care about it either so there is no need for me to do that and the most important",
    "start": "1797279",
    "end": "1806429"
  },
  {
    "text": "thing for us is compliance and security because it our heart our core is",
    "start": "1806429",
    "end": "1812460"
  },
  {
    "text": "scanning our customers source code so we are compliant from day one we're running",
    "start": "1812460",
    "end": "1819240"
  },
  {
    "text": "on Fargate and we get sucked to and heap and pci-dss and we that talked about the",
    "start": "1819240",
    "end": "1825330"
  },
  {
    "text": "gazillion different certifications that they are there I'm glad that I didn't",
    "start": "1825330",
    "end": "1830909"
  },
  {
    "text": "have to do them in that matter and it just comes as security out of the box so",
    "start": "1830909",
    "end": "1837990"
  },
  {
    "text": "when I talk to customers when CSIS ask me about the solution tell them it's taken care by Amazon so it's great so",
    "start": "1837990",
    "end": "1848850"
  },
  {
    "text": "before I jump into the demo and show you how we actually deploy into production",
    "start": "1848850",
    "end": "1854940"
  },
  {
    "text": "I'll tell you about how our environment looks like so we have two clusters two",
    "start": "1854940",
    "end": "1862140"
  },
  {
    "text": "ECS clusters one of them is staging the other one is production and we're mainly",
    "start": "1862140",
    "end": "1867809"
  },
  {
    "text": "in know jes shop and we have a micro service template and our CI and I will show you",
    "start": "1867809",
    "end": "1874230"
  },
  {
    "text": "the demo determines the the cluster that it has to deploy to by the branch of the",
    "start": "1874230",
    "end": "1880139"
  },
  {
    "text": "code so if it's mastered and it goes to the latest one to production and if it's",
    "start": "1880139",
    "end": "1885870"
  },
  {
    "text": "staging it goes to staging and we use ECR as their repository for containers",
    "start": "1885870",
    "end": "1891929"
  },
  {
    "text": "which works really great and we use elby's we have internal alvey's and",
    "start": "1891929",
    "end": "1897690"
  },
  {
    "text": "external elby's so services who only interoperate and talk to each other",
    "start": "1897690",
    "end": "1902970"
  },
  {
    "text": "internally they just use the internal alb and services that get traffic from outside they use the alb and also we",
    "start": "1902970",
    "end": "1911250"
  },
  {
    "text": "read from queues we talk to other AWS services but i wanted to focus on on",
    "start": "1911250",
    "end": "1917010"
  },
  {
    "text": "just the the containers part here so what I'm going to take you through now",
    "start": "1917010",
    "end": "1923130"
  },
  {
    "text": "is a eight steps of how a we can actually deploy a change into production",
    "start": "1923130",
    "end": "1928799"
  },
  {
    "text": "and in flux looks like many many steps and lots of things are happening but it's almost",
    "start": "1928799",
    "end": "1935519"
  },
  {
    "text": "it's very very fast and it's very very easy so the first thing that happens is",
    "start": "1935519",
    "end": "1941490"
  },
  {
    "text": "that we will submit our code changes and then we will open a pull request then",
    "start": "1941490",
    "end": "1947279"
  },
  {
    "text": "this pull request will trigger Travis CI build and during this bill that will show you our centralized CI CD in script",
    "start": "1947279",
    "end": "1955830"
  },
  {
    "text": "we use one centralized script for all of our micro services because we had a",
    "start": "1955830",
    "end": "1961320"
  },
  {
    "text": "problem as we were gaining more and more micro services we needed a centralized solution to have our deployment a script",
    "start": "1961320",
    "end": "1968940"
  },
  {
    "text": "across the all of the micro services so we use s3 and we run it across all of",
    "start": "1968940",
    "end": "1977429"
  },
  {
    "text": "our micro services and we determine which cluster should we deploy to then I",
    "start": "1977429",
    "end": "1982860"
  },
  {
    "text": "could create a new task definition revision so it will pull the new",
    "start": "1982860",
    "end": "1987929"
  },
  {
    "text": "container that we pushed into ECR then we update the service with the new task definition and this moment the service",
    "start": "1987929",
    "end": "1995730"
  },
  {
    "text": "starts to a register our new tasks into our alb and initiates a draining process now",
    "start": "1995730",
    "end": "2003039"
  },
  {
    "text": "this is very important many people in the community come and say Shimon why does my task take so long to go live",
    "start": "2003039",
    "end": "2010090"
  },
  {
    "text": "and I tell them it's not because of forget forget is very very fast",
    "start": "2010090",
    "end": "2015279"
  },
  {
    "text": "the default drain time for an al B is 5 minutes so no matter how fast forget",
    "start": "2015279",
    "end": "2021340"
  },
  {
    "text": "does that your default al B is configured to join connections for 5 minutes so you can change that in my",
    "start": "2021340",
    "end": "2027909"
  },
  {
    "text": "demo I change that to 30 seconds and it can help you go live faster if that's",
    "start": "2027909",
    "end": "2033669"
  },
  {
    "text": "your use case so after the task is registered we destroy the old task and",
    "start": "2033669",
    "end": "2039460"
  },
  {
    "text": "we clean up the old task definitions so",
    "start": "2039460",
    "end": "2044529"
  },
  {
    "text": "now let's try to move to our demo let's",
    "start": "2044529",
    "end": "2053648"
  },
  {
    "text": "hope that the demo gods are with us well we sacrificed all our easy to",
    "start": "2053649",
    "end": "2059138"
  },
  {
    "text": "instances for that and ok so I have here",
    "start": "2059139",
    "end": "2066608"
  },
  {
    "text": "a very very simple nodejs application I chose a very simple application just to",
    "start": "2066609",
    "end": "2072790"
  },
  {
    "text": "show you the whole deployment process of course we have complicated micro services that do lots of things but in",
    "start": "2072790",
    "end": "2078700"
  },
  {
    "text": "this case there's just a Travis file we use Travis in order to do our build and",
    "start": "2078700",
    "end": "2083888"
  },
  {
    "text": "I'll show it to you now all it does is basically defined that it's a docker the nodejs version it installs the AWS CLI",
    "start": "2083889",
    "end": "2092700"
  },
  {
    "text": "installs and tests our code and then uses our centralized CI CD deployment",
    "start": "2092700",
    "end": "2098170"
  },
  {
    "text": "script which I'll go into deep details about em we have our docker file which",
    "start": "2098170",
    "end": "2104380"
  },
  {
    "text": "is also very very simple it's just not GS it's taking the code installing the",
    "start": "2104380",
    "end": "2110069"
  },
  {
    "text": "dependencies exposing port 8000 and defines a health check which is very",
    "start": "2110069",
    "end": "2116500"
  },
  {
    "text": "very simple and we have our code and in this code running a core web server",
    "start": "2116500",
    "end": "2122950"
  },
  {
    "text": "it's like Express only another another flavor so let's add a new endpoint so",
    "start": "2122950",
    "end": "2131770"
  },
  {
    "text": "I'm gonna add an endpoint call forget and this end point is gonna have",
    "start": "2131770",
    "end": "2138160"
  },
  {
    "text": "a link to a blog post that I wrote about how we migrated into a fur gate",
    "start": "2138160",
    "end": "2146190"
  },
  {
    "text": "okay so let's create a branch okay",
    "start": "2146190",
    "end": "2160560"
  },
  {
    "text": "okay so I'm adding the Fargate endpoint",
    "start": "2165900",
    "end": "2171920"
  },
  {
    "text": "and now let's create the branch and",
    "start": "2171920",
    "end": "2176970"
  },
  {
    "text": "let's open a pull request very simple it's a very classic use case so if we go",
    "start": "2176970",
    "end": "2184770"
  },
  {
    "text": "into github you can see that I'm adding the the pull request now opening it up",
    "start": "2184770",
    "end": "2192750"
  },
  {
    "text": "and then we instantly have all of our checks running and as you can see we",
    "start": "2192750",
    "end": "2198540"
  },
  {
    "text": "have a different checks automatically triggered upon all of our repositories",
    "start": "2198540",
    "end": "2203760"
  },
  {
    "text": "so this is actually an open source repository called demo the tree-ring than 2018 so I can see here that I can't",
    "start": "2203760",
    "end": "2212660"
  },
  {
    "text": "merge my pull requests because there is some problem with my policy let's see",
    "start": "2212660",
    "end": "2218060"
  },
  {
    "text": "okay so I can see that we have a policy that we should use nodejs 10 because",
    "start": "2218060",
    "end": "2223080"
  },
  {
    "text": "that's the new LTS version of not GS and our engine detected that so I can",
    "start": "2223080",
    "end": "2228600"
  },
  {
    "text": "quickly go and fix that so I can just choose nodes 10 and update now to",
    "start": "2228600",
    "end": "2235920"
  },
  {
    "text": "version 10 and now this way I can align my organization to move and work with the new version so let's push our fixed",
    "start": "2235920",
    "end": "2246630"
  },
  {
    "text": "changes",
    "start": "2246630",
    "end": "2249380"
  },
  {
    "text": "okay so now as you can see all of my tests are passing because we are aligned",
    "start": "2257250",
    "end": "2263970"
  },
  {
    "text": "to our policy and we can go ahead and merge a pull request and now that it's",
    "start": "2263970",
    "end": "2269849"
  },
  {
    "text": "merged it's gonna trigger the build via Travis CI now I'm going to show you all",
    "start": "2269849",
    "end": "2276630"
  },
  {
    "text": "the different tools that they we use in order to build the container and show",
    "start": "2276630",
    "end": "2281760"
  },
  {
    "text": "you the endpoint so actually our service is reinvent and you can actually access",
    "start": "2281760",
    "end": "2288450"
  },
  {
    "text": "it dot the tree dot IO we indent reinvent and we added our endpoint and",
    "start": "2288450",
    "end": "2297450"
  },
  {
    "text": "we will actually deploy it into production so now it started at the build process so now I'll show you our",
    "start": "2297450",
    "end": "2305460"
  },
  {
    "text": "environment so this is the ACS console that has our tasks we can see that we",
    "start": "2305460",
    "end": "2312869"
  },
  {
    "text": "have a task a definition and the revision number is number nine this is a",
    "start": "2312869",
    "end": "2318030"
  },
  {
    "text": "repeat so I already did one session so we have some revisions and we can see",
    "start": "2318030",
    "end": "2323490"
  },
  {
    "text": "all of the different events that happened and we can have logging building inside of that I think maybe",
    "start": "2323490",
    "end": "2331530"
  },
  {
    "text": "that's the internet we have our alb that listens to our traffic and then we have",
    "start": "2331530",
    "end": "2339119"
  },
  {
    "text": "our a lb target group which will see the different tasks registered on to in a",
    "start": "2339119",
    "end": "2347220"
  },
  {
    "text": "moment so while it is building I'll show you a very cool is a CLI tool because",
    "start": "2347220",
    "end": "2354300"
  },
  {
    "text": "going is nice but you know CLI is always better so this is a tool a far get CLI",
    "start": "2354300",
    "end": "2361500"
  },
  {
    "text": "that allows you to actually query it's an open source written in go that allows you to actually query your cluster so if",
    "start": "2361500",
    "end": "2369660"
  },
  {
    "text": "I want to get a definition about my service I can just run the command and I",
    "start": "2369660",
    "end": "2378780"
  },
  {
    "text": "can see in my terminal here that we have a service named reinvent the amount of",
    "start": "2378780",
    "end": "2384359"
  },
  {
    "text": "containers that we have we can see all of the information about that service in addition we can",
    "start": "2384359",
    "end": "2390099"
  },
  {
    "text": "also do that for our load balancer and here we'll see information about our",
    "start": "2390099",
    "end": "2397420"
  },
  {
    "text": "load balancer so it's really really great a for you know CLI usage and not",
    "start": "2397420",
    "end": "2402819"
  },
  {
    "text": "just a GUI so now I'll go deeper into",
    "start": "2402819",
    "end": "2411130"
  },
  {
    "text": "our a deployment script and how we managed all of the different micro services so attached upon the fact that",
    "start": "2411130",
    "end": "2419739"
  },
  {
    "text": "we have a centralized build script for all of our micro services so another thing that many people ask me is that",
    "start": "2419739",
    "end": "2426519"
  },
  {
    "text": "Shimon how do you manage secrets across many different micro services as a very",
    "start": "2426519",
    "end": "2431950"
  },
  {
    "text": "very common question so the way we do it is that we use I am a encryption keys",
    "start": "2431950",
    "end": "2439059"
  },
  {
    "text": "and for every service we have an encryption key dedicated to that service and then we use the ec2 parameter store",
    "start": "2439059",
    "end": "2446950"
  },
  {
    "text": "in order to store a JSON configuration for this service that is encrypted with",
    "start": "2446950",
    "end": "2452799"
  },
  {
    "text": "the key of that service so then when the service goes up it applicative ligo's",
    "start": "2452799",
    "end": "2459640"
  },
  {
    "text": "and using its I am role it gets the key it goes to the parameter store gets its",
    "start": "2459640",
    "end": "2465369"
  },
  {
    "text": "configuration injects the configuration and starts running so no secrets in code",
    "start": "2465369",
    "end": "2471279"
  },
  {
    "text": "don't do that many companies get wiped by that why even have a policy for that and all of our customers use that I",
    "start": "2471279",
    "end": "2478059"
  },
  {
    "text": "don't even have one customer that don't use it because that's the most horrible thing that can happen to you okay so now",
    "start": "2478059",
    "end": "2486039"
  },
  {
    "text": "let's take a look at our build I think it's still it's still building so here",
    "start": "2486039",
    "end": "2494259"
  },
  {
    "text": "it's pushing our container and what and it's actually what happened is that we",
    "start": "2494259",
    "end": "2499509"
  },
  {
    "text": "built the new layers and try to zoom in and also show you better so a it's",
    "start": "2499509",
    "end": "2507039"
  },
  {
    "text": "actually a register the new task and it updated the image and it created a new",
    "start": "2507039",
    "end": "2513579"
  },
  {
    "text": "task definition revision you see revision number ten and now it updated the service and it",
    "start": "2513579",
    "end": "2520780"
  },
  {
    "text": "we take a look at our service it is yes we should see that we have two running",
    "start": "2520780",
    "end": "2527320"
  },
  {
    "text": "tasks now revision number nine and revision number ten and now if we take a look at our load balancer we can see",
    "start": "2527320",
    "end": "2535870"
  },
  {
    "text": "that we have two healthy targets now and shortly it should start draining one of",
    "start": "2535870",
    "end": "2542260"
  },
  {
    "text": "them in order to flip the switch for the new version and again if it's not",
    "start": "2542260",
    "end": "2547510"
  },
  {
    "text": "healthy if it does not work then it will keep the old version and it won't deploy",
    "start": "2547510",
    "end": "2554590"
  },
  {
    "text": "a failure so as you can see it started raining and the joining process will",
    "start": "2554590",
    "end": "2560770"
  },
  {
    "text": "take 30 seconds and if we look here and this is our deregistration delay that's",
    "start": "2560770",
    "end": "2566290"
  },
  {
    "text": "how I call it draining but the registration delay and you can specify the default is five minutes so what does",
    "start": "2566290",
    "end": "2575650"
  },
  {
    "text": "our deployment script actually do so it's a very very simple batch script and",
    "start": "2575650",
    "end": "2582599"
  },
  {
    "text": "we thought about like doing it with other stuff but we ended up just running a batch script and we use Travis CI so",
    "start": "2583140",
    "end": "2590980"
  },
  {
    "text": "we determined the branch so if it's a master we'll go to production if it's staging we go to staging and if it's not",
    "start": "2590980",
    "end": "2598150"
  },
  {
    "text": "one of them were just building the tag and pushing it in to ECR and then we're doing the darker",
    "start": "2598150",
    "end": "2603970"
  },
  {
    "text": "billdocker tag docker push in order to push it to the registry and then we're actually using ICS deployed and ECS",
    "start": "2603970",
    "end": "2611860"
  },
  {
    "text": "deploy is a very neat open source and also bash script and it's actually a",
    "start": "2611860",
    "end": "2620080"
  },
  {
    "text": "script that uses the task definition and service entries in Amazon ECS and it allows you to do a Bluegreen deployment",
    "start": "2620080",
    "end": "2627810"
  },
  {
    "text": "and it actually does all the magic for us so you just tell it I want to a",
    "start": "2627810",
    "end": "2633930"
  },
  {
    "text": "update this service with this container with this new definition and it just",
    "start": "2633930",
    "end": "2640450"
  },
  {
    "text": "goes there and in does it for us so as you can see here and we're just",
    "start": "2640450",
    "end": "2645460"
  },
  {
    "text": "executing it with different parameters and we're given it a timeout we're",
    "start": "2645460",
    "end": "2651580"
  },
  {
    "text": "defining the amount of a definitions to keep all the all the old",
    "start": "2651580",
    "end": "2657190"
  },
  {
    "text": "tasks the finishes are become are getting deleted we specify the service name the image and that way it is being",
    "start": "2657190",
    "end": "2666069"
  },
  {
    "text": "deployed so now if we actually go to far gate hopefully we have our blog post so",
    "start": "2666069",
    "end": "2675779"
  },
  {
    "text": "it's very long you can just go to the AWS target page and we're a case study",
    "start": "2675779",
    "end": "2681039"
  },
  {
    "text": "there so hopefully this helps demonstrate how easy it is to actually deploy something",
    "start": "2681039",
    "end": "2687940"
  },
  {
    "text": "into Fargate I like it because it uses",
    "start": "2687940",
    "end": "2696339"
  },
  {
    "text": "docker and the underlying infrastructure is baselined we also have stuff that uses serverless",
    "start": "2696339",
    "end": "2702400"
  },
  {
    "text": "framework which is also great but for us we like running with containers and it",
    "start": "2702400",
    "end": "2709150"
  },
  {
    "text": "really really helped us so now any developer that wants to actually go and deploy into production it just takes the",
    "start": "2709150",
    "end": "2717010"
  },
  {
    "text": "template makes a service and goes to production so just to finish up I'll",
    "start": "2717010",
    "end": "2727480"
  },
  {
    "text": "talk a little bit about the challenges that you might face if you're gonna use Fargate so the number one thing is that",
    "start": "2727480",
    "end": "2734799"
  },
  {
    "text": "Fargate has a limit of 10 gigabytes disk space and for some workloads it might be",
    "start": "2734799",
    "end": "2740619"
  },
  {
    "text": "problematic I can understand that mmm I hope that they're working on it",
    "start": "2740619",
    "end": "2745980"
  },
  {
    "text": "currently what you see is what you get and I think that this is the reason is",
    "start": "2745980",
    "end": "2751720"
  },
  {
    "text": "because you cannot change the instance type that you get so that's another limitation so let's say you have a GPU",
    "start": "2751720",
    "end": "2758710"
  },
  {
    "text": "optimized instance a workload that means a GPU or you want a CPU optimized one or",
    "start": "2758710",
    "end": "2765039"
  },
  {
    "text": "a memory optimized run or i/o and optimized one you can choose you don't even know which instance you're running",
    "start": "2765039",
    "end": "2771220"
  },
  {
    "text": "on for our use case it's great for use your use case you should consider I don't know it depends on what you're",
    "start": "2771220",
    "end": "2777670"
  },
  {
    "text": "running another thing is that you can't attach an EBS volume or use EFS that's",
    "start": "2777670",
    "end": "2786490"
  },
  {
    "text": "also a limitation you can like use s3 and stuff like that",
    "start": "2786490",
    "end": "2791680"
  },
  {
    "text": "applicative Lee from your application but in terms of the container you can't do that another thing is that in terms",
    "start": "2791680",
    "end": "2799060"
  },
  {
    "text": "of pricing the direct pricing so spot model is not supported so you might use",
    "start": "2799060",
    "end": "2805630"
  },
  {
    "text": "other company solutions like spa tensed for example they provide some sort of",
    "start": "2805630",
    "end": "2810850"
  },
  {
    "text": "solution with containers that tries to do something similar to forget it on spot instances but currently you can",
    "start": "2810850",
    "end": "2819040"
  },
  {
    "text": "transport so I understand I have people who come and tell me she listen Shimon",
    "start": "2819040",
    "end": "2824109"
  },
  {
    "text": "we run like a hundred instances 8xl with spot instances if we move to forget now",
    "start": "2824109",
    "end": "2830590"
  },
  {
    "text": "it's just gonna I understand for us it works it's really well another thing is that there is no",
    "start": "2830590",
    "end": "2836920"
  },
  {
    "text": "reserved instances you would call it reserved containers and I talked a",
    "start": "2836920",
    "end": "2842920"
  },
  {
    "text": "little bit to the team about that and they said that they don't just want to copy paste and lift and shift the RI",
    "start": "2842920",
    "end": "2849040"
  },
  {
    "text": "model that we currently have with ec2 instances into Fargate they want to",
    "start": "2849040",
    "end": "2854530"
  },
  {
    "text": "think of a model that is more appropriate to this container first world so I hope that we will get an",
    "start": "2854530",
    "end": "2861369"
  },
  {
    "text": "option and once there is an option to buy reserved capacity I will be the first one that buys that so the final",
    "start": "2861369",
    "end": "2870160"
  },
  {
    "text": "thing is we are proud open case study of forget forget helped us win customers",
    "start": "2870160",
    "end": "2877570"
  },
  {
    "text": "because it's very very secure it runs on Amazon's environment we'll really love it we're an open case study if you want",
    "start": "2877570",
    "end": "2885010"
  },
  {
    "text": "to go and read a blog post that I wrote step-by-step of how we migrated from ec2",
    "start": "2885010",
    "end": "2891430"
  },
  {
    "text": "to far gate this is the blog post and with that I want to tell to tell you",
    "start": "2891430",
    "end": "2899410"
  },
  {
    "text": "thank you and mean vivec we will be here to answer any questions you might have thank you very much for coming",
    "start": "2899410",
    "end": "2905560"
  },
  {
    "text": "[Applause]",
    "start": "2905560",
    "end": "2911889"
  }
]