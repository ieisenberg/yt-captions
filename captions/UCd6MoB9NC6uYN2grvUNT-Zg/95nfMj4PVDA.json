[
  {
    "start": "0",
    "end": "310000"
  },
  {
    "text": "all right hello and welcome everybody to another day in the life of a cloud",
    "start": "30",
    "end": "5339"
  },
  {
    "text": "network engineer at Netflix today we'll be talking about decisions decisions that Artie makes on a day to day basis",
    "start": "5339",
    "end": "12090"
  },
  {
    "text": "this these decisions have been named the pass they were making these decisions today we want to talk about the impact",
    "start": "12090",
    "end": "17670"
  },
  {
    "text": "that these decisions have on our team and our company as a whole our two main health areas in this talk are we around",
    "start": "17670",
    "end": "23519"
  },
  {
    "text": "VPC and DNS my name is Donovan Fitz I'm a cloud and network yesterday at Netflix everyone my name is joel Kodama I'm also",
    "start": "23519",
    "end": "30060"
  },
  {
    "text": "a cloud network essary at Netflix and I joined Netflix a little over four years ago and when I joined I was on the",
    "start": "30060",
    "end": "36570"
  },
  {
    "text": "corporate network engineering team and at that point in time I really had no idea about this AWS cloud thing I didn't",
    "start": "36570",
    "end": "43440"
  },
  {
    "text": "have any interaction with the previous to that but what I did know is that a ws",
    "start": "43440",
    "end": "50610"
  },
  {
    "text": "and at the time this really consisted of Amazon's older environment ec2 classic I",
    "start": "50610",
    "end": "56010"
  },
  {
    "text": "never had some VPC set up for some testing purposes and I know from my team's perspective at the time we",
    "start": "56010",
    "end": "63090"
  },
  {
    "text": "managed some VPN connections into those V pcs and I remembered my first real interaction with AWS is when the",
    "start": "63090",
    "end": "70110"
  },
  {
    "text": "developer came up to me and he had some trouble connecting to a database and being the helpful fact that I was on but",
    "start": "70110",
    "end": "80130"
  },
  {
    "text": "I decided I should help him try to understand these you know connectivity problems so I jumped in to the console",
    "start": "80130",
    "end": "86729"
  },
  {
    "text": "if you know figured out what account this was in figured out what region it was in did my digging around to find out",
    "start": "86729",
    "end": "92759"
  },
  {
    "text": "if this was a network issue and in the end it turned out to be a security group problem you know go figure but what that",
    "start": "92759",
    "end": "99390"
  },
  {
    "text": "really told me as it as an engineer is that in order to be successful at Netflix I really needed to learn about",
    "start": "99390",
    "end": "105780"
  },
  {
    "text": "this AWS VPC thing so I spent the next several months learning all about VPC",
    "start": "105780",
    "end": "111509"
  },
  {
    "text": "all the components that make it up right you think about you know subnets and VG WS and IG w use CG W's and Direct",
    "start": "111509",
    "end": "119250"
  },
  {
    "text": "Connect and route tables and prefix lists and endpoints I mean the list goes on and on of all the things you really",
    "start": "119250",
    "end": "125250"
  },
  {
    "text": "need to understand and for me it was about mapping those back to the physical constructs that I understood you know",
    "start": "125250",
    "end": "131760"
  },
  {
    "text": "from a networking perspective and in all of this learning I was afforded the opportunity to join a new",
    "start": "131760",
    "end": "137940"
  },
  {
    "text": "team that was forming a cloud network engineering team that was really going to be focused on building a global",
    "start": "137940",
    "end": "143790"
  },
  {
    "text": "network infrastructure for the Netflix streaming system right at the time we",
    "start": "143790",
    "end": "148950"
  },
  {
    "text": "were going through a large migration from our classic environment over into VPC and so you know as soon as I",
    "start": "148950",
    "end": "155790"
  },
  {
    "text": "supported this opportunity has started to I thought about all the questions that I needed to be able to answer like",
    "start": "155790",
    "end": "161220"
  },
  {
    "text": "how does ec2 classic really work right and one or developer is gonna take away that a neat you know the the behaviors",
    "start": "161220",
    "end": "167760"
  },
  {
    "text": "that need to be moved over from ec2 classic and what are the best practices for building VPC and how does art",
    "start": "167760",
    "end": "174060"
  },
  {
    "text": "something like our IPC right our inner inter-process communication story play",
    "start": "174060",
    "end": "179610"
  },
  {
    "text": "into all of this because when building out this architecture you really have to think about how that ecosystem works and",
    "start": "179610",
    "end": "185850"
  },
  {
    "text": "where do I get started all right I'm thinking about building a global architecture what's the starting point",
    "start": "185850",
    "end": "191850"
  },
  {
    "text": "for this and when you really think about it you have to start off with kind of the smallest component which is really",
    "start": "191850",
    "end": "197040"
  },
  {
    "text": "what does an individual V PC look like but in reality we needed to compare that to ec2 classic for those of you that",
    "start": "197040",
    "end": "204180"
  },
  {
    "text": "don't know ec2 classic was a very flat network right every single customer shared the same IP space every instance",
    "start": "204180",
    "end": "211170"
  },
  {
    "text": "was given a public IP address and a private IP address when you think about this in contrast to V PC V pcs have this",
    "start": "211170",
    "end": "218329"
  },
  {
    "text": "concept of subnets in subnets really define the kind of IP address an",
    "start": "218329",
    "end": "223709"
  },
  {
    "text": "instance is gonna get when you think about you know private subnets instances get a private IP address public subnets",
    "start": "223709",
    "end": "229980"
  },
  {
    "text": "instances get both a public and a private IP address and this really plays into how we think about this global",
    "start": "229980",
    "end": "235560"
  },
  {
    "text": "network architecture now when I think about private subnets though in private IP addresses one thing that comes to",
    "start": "235560",
    "end": "241980"
  },
  {
    "text": "mind from from a networking background is how we gonna translate these addresses I mean they need to get out to the internet we need to provide some",
    "start": "241980",
    "end": "248489"
  },
  {
    "text": "kind of address translation and luckily at the time Amazon had come out with not gateways alright not gateways are a",
    "start": "248489",
    "end": "254670"
  },
  {
    "text": "managed construct to allow address translation and at Netflix when we think about leveraging you know services we",
    "start": "254670",
    "end": "261959"
  },
  {
    "text": "have a common term that we use called undifferentiated heavy lifting we think about the technical advantages",
    "start": "261959",
    "end": "267820"
  },
  {
    "text": "of doing something ourselves and if you really don't get anything out of it then we're we would love to just leverage",
    "start": "267820",
    "end": "273730"
  },
  {
    "text": "something that AWS or other vendors provide and for not gateways that was easy because realistically they provide",
    "start": "273730",
    "end": "280630"
  },
  {
    "text": "the highly scalable and performant service so we chose to go with not gateways in this circumstance now with a",
    "start": "280630",
    "end": "288730"
  },
  {
    "text": "single V PC we could think about moving over all of our classic instances over into V PC but we really had to consider",
    "start": "288730",
    "end": "296590"
  },
  {
    "text": "the fact that we had more than one account in classic we had several accounts in classic and for each one of",
    "start": "296590",
    "end": "302290"
  },
  {
    "text": "those accounts that we were moving over it needed the V PC so we really had to start thinking about what was our inter",
    "start": "302290",
    "end": "309010"
  },
  {
    "text": "VPC communication story right how do these communicate to each other and really and remember this is back in 2015",
    "start": "309010",
    "end": "316450"
  },
  {
    "start": "310000",
    "end": "310000"
  },
  {
    "text": "when we're making these decisions on how to build out this global network architecture when you think about inner",
    "start": "316450",
    "end": "322090"
  },
  {
    "text": "V PC communication there's really three options available to you there's the internet obviously there's V PC peering",
    "start": "322090",
    "end": "329200"
  },
  {
    "text": "which maintains that traffic within the AWS fabric and then there's AWS Direct Connect right physical connections in",
    "start": "329200",
    "end": "335230"
  },
  {
    "text": "the V PC where traffic would end up traversing through our own data centers or pops and then basically go back into",
    "start": "335230",
    "end": "341530"
  },
  {
    "text": "AWS constructs so when we think about this we have to take all the considerations into play right one big",
    "start": "341530",
    "end": "349240"
  },
  {
    "text": "thing that we really had to think about especially because we are using private subnets was this bidirectional private",
    "start": "349240",
    "end": "356020"
  },
  {
    "text": "IP communication I think when you think about accounts that need to communicate to each other across these V pcs you",
    "start": "356020",
    "end": "362919"
  },
  {
    "text": "know we have a mechanism called service discovery and service discovery is where applications will register to a central",
    "start": "362919",
    "end": "369010"
  },
  {
    "text": "repository and they register with some information and that information is really their private IP address and",
    "start": "369010",
    "end": "374740"
  },
  {
    "text": "that's how other applications communicate to them due to the fact that we're using private subnets we had to",
    "start": "374740",
    "end": "380410"
  },
  {
    "text": "have a mechanism that supported bidirectional private IP communication and when looking at these really the",
    "start": "380410",
    "end": "385720"
  },
  {
    "text": "internet doesn't provide that we just talked about using that gateways right that translate addresses but V PC",
    "start": "385720",
    "end": "391210"
  },
  {
    "text": "pairing does as does Direct Connect you know Joel when we're creating this type of global architecture we wanted what",
    "start": "391210",
    "end": "398560"
  },
  {
    "text": "was this security concerns that we had to think of as well as if we had this very large flat ip's network yeah when we think",
    "start": "398560",
    "end": "404830"
  },
  {
    "text": "about the security story one thing that we knew that we had to maintain was the ability to use security group references",
    "start": "404830",
    "end": "410380"
  },
  {
    "text": "and what I mean by that is the ability to go into a security group and create a rule that references another security",
    "start": "410380",
    "end": "416920"
  },
  {
    "text": "group attached to a different application right this was important for us because our developers were accustomed to doing this and we wanted",
    "start": "416920",
    "end": "423370"
  },
  {
    "text": "to ensure that we could still enable their velocity when we moved into VP C and when we think about these constructs",
    "start": "423370",
    "end": "429670"
  },
  {
    "text": "the only one that really supported that was BBC peering now if I remember",
    "start": "429670",
    "end": "435010"
  },
  {
    "text": "correctly when we were making these decisions we were really concerned about our large clusters as well we have some really large clusters and they sent a",
    "start": "435010",
    "end": "441880"
  },
  {
    "text": "ton of traffic what do we have to consider there yeah Donovan I mean when we are really considering this we had to",
    "start": "441880",
    "end": "447520"
  },
  {
    "text": "think about the fact that we had large applications that were you know going making large transactions to our data",
    "start": "447520",
    "end": "453400"
  },
  {
    "text": "stores right when we have Cassandra we have easy cash we have RDS databases so bandwidth constraints were definitely a",
    "start": "453400",
    "end": "459310"
  },
  {
    "text": "concern and when you really think about this right the Internet has a",
    "start": "459310",
    "end": "464610"
  },
  {
    "text": "conceivably unlimited bandwidth when you think about it when you think about VPC peering you're really limited just to",
    "start": "464610",
    "end": "471220"
  },
  {
    "text": "node 2 node communication whatever the bandwidth constraints are from one node to another that's what you're limited by",
    "start": "471220",
    "end": "477070"
  },
  {
    "text": "now at the time AWS direct connect really only supported a single one gig interface or a 10 gig interface and so",
    "start": "477070",
    "end": "484120"
  },
  {
    "text": "that didn't really do it for us when you really think about all these we made the decision to go with VPC peering it was",
    "start": "484120",
    "end": "489970"
  },
  {
    "text": "it was a pretty easy decision and what we ended up with was this full mesh of VPC peers in region and what this really",
    "start": "489970",
    "end": "496480"
  },
  {
    "text": "looks like is it's similar to the ec2 classic environment right a very flat network where everything has",
    "start": "496480",
    "end": "501880"
  },
  {
    "text": "connectivity to everything else now the challenge here is as we continue to grow and add more VP C's",
    "start": "501880",
    "end": "507910"
  },
  {
    "text": "it's dealing with the complexity of thinking about standardizing this across the board now with that a little automation goes a",
    "start": "507910",
    "end": "514390"
  },
  {
    "text": "long way for that circumstance and we'll talk a little bit about how we automate that now but one consideration that we",
    "start": "514390",
    "end": "520990"
  },
  {
    "text": "have to take into account which is the ability to have bi-directional IP communication for private IPs",
    "start": "520990",
    "end": "526840"
  },
  {
    "text": "this really carries over when we think about moving this to the global story right because in the global story we",
    "start": "526840",
    "end": "532810"
  },
  {
    "text": "still had you know services in a single region like Jenkins for integration testing and bastions for SSH access and users that",
    "start": "532810",
    "end": "540820"
  },
  {
    "text": "were sitting in our offices that needed private IP connectivity and at the time really the only thing you could do is",
    "start": "540820",
    "end": "546880"
  },
  {
    "text": "set up direct connects and build out your own MPLS backbone to really support this and that's what we did so for all",
    "start": "546880",
    "end": "553030"
  },
  {
    "text": "the regions we operate in we went ahead and set up Direct Connect we then built out fiber ring across all of our regions",
    "start": "553030",
    "end": "559360"
  },
  {
    "text": "and extended that to our office buildings so now we can do service to service communication as well as user to",
    "start": "559360",
    "end": "565120"
  },
  {
    "text": "service communication for those private IPS now the one big thing when thinking about a global network though is the IP",
    "start": "565120",
    "end": "571240"
  },
  {
    "text": "space you use for us we wanted to ensure we had a large enough IP space to grow into and it didn't conflict with what",
    "start": "571240",
    "end": "577960"
  },
  {
    "text": "our offices were already set up with so we decided to go with 160 4/10 or RFC 65",
    "start": "577960",
    "end": "583930"
  },
  {
    "text": "98 range right this really gave us the ability to continue to grow and add more regions when we needed to but and all of",
    "start": "583930",
    "end": "591760"
  },
  {
    "text": "that what this really gives us is a single unified network across all of our accounts in all of our regions and",
    "start": "591760",
    "end": "597670"
  },
  {
    "text": "extends to our users to have that connectivity but in talking to other AWS",
    "start": "597670",
    "end": "602920"
  },
  {
    "text": "customers over the last few years one thing that I've actually noticed is that as we were doing this you know it really",
    "start": "602920",
    "end": "609760"
  },
  {
    "text": "made our environment very unique and when you think about kind of uniqueness with our environment it requires",
    "start": "609760",
    "end": "616120"
  },
  {
    "text": "something yeah absolutely Joel so we have a unique global environment where",
    "start": "616120",
    "end": "621460"
  },
  {
    "text": "we maintain global IP reach ability and this type of unique environment really demands unique network to lean in order",
    "start": "621460",
    "end": "627790"
  },
  {
    "text": "to appropriately manage this environment so what we've done is we've opted to build our own software to help manage",
    "start": "627790",
    "end": "634090"
  },
  {
    "text": "our infrastructure we've built this in Python it's built on top of the boto 3 sdk",
    "start": "634090",
    "end": "639330"
  },
  {
    "text": "unfortunately it's it's very hyper specific tool not only are our our",
    "start": "639330",
    "end": "645880"
  },
  {
    "text": "company but also our team so open sourcing something like this is not really an option for us so we built a",
    "start": "645880",
    "end": "652960"
  },
  {
    "text": "package called cloud net and the way this works is it lets us build abstractions on top of the boat of three",
    "start": "652960",
    "end": "659070"
  },
  {
    "text": "SDK that really help us interact with the environment in the way that we think",
    "start": "659070",
    "end": "664870"
  },
  {
    "text": "as humans so in this particular example we're creating two different V pcs and these are just one one-liners we specify an",
    "start": "664870",
    "end": "672600"
  },
  {
    "text": "account to region a name and a prefix length so this handles all the role assumption for us it allows us to jump",
    "start": "672600",
    "end": "679320"
  },
  {
    "text": "into any account that we we own and all that's handled for us under the hoods here we also don't specify an actual",
    "start": "679320",
    "end": "686760"
  },
  {
    "text": "ipv4 Sider block we just spent specify a prefix length so as Joel mentioned we we",
    "start": "686760",
    "end": "692100"
  },
  {
    "text": "have a global unique address space so this also hides it all the complexities around finding a particular network",
    "start": "692100",
    "end": "697920"
  },
  {
    "text": "block to use for a V PC so it reaches out to our IP address management solution finds a free network block and",
    "start": "697920",
    "end": "703260"
  },
  {
    "text": "then assigns it to the V PC so the result here is that we end up with two instances of V PC and then we can just",
    "start": "703260",
    "end": "709410"
  },
  {
    "text": "peer them together as well so again this Joel mentioned we have a full mesh of V PC peering so managing that is really",
    "start": "709410",
    "end": "716010"
  },
  {
    "text": "important to us and so here we can take two instance of V PC just do a dot pr2 method and we pass in another instance",
    "start": "716010",
    "end": "722430"
  },
  {
    "text": "of a V PC and this handles all the heavy lifting the role assumption to request",
    "start": "722430",
    "end": "728160"
  },
  {
    "text": "the v p-- CPE and accept it and then it also goes through all the route tables in the V PC and updating the route",
    "start": "728160",
    "end": "734580"
  },
  {
    "text": "tables to remote the to route rather the remote be PC cider block across the BBC",
    "start": "734580",
    "end": "740520"
  },
  {
    "text": "peering connection it makes management of full mash appearance much more manageable I mean and we can even extend",
    "start": "740520",
    "end": "746670"
  },
  {
    "text": "this abstraction to do things new like resize of e PC so in this case we can actually say V PC 0 dot resize we can",
    "start": "746670",
    "end": "753300"
  },
  {
    "text": "again just specify that prefix length of a slash 16 it'll go out and find the right IP block that we're gonna utilize",
    "start": "753300",
    "end": "759120"
  },
  {
    "text": "and some of you might be thinking like well all you're doing is adding a new IP block to a V PC I mean how hard is that",
    "start": "759120",
    "end": "765120"
  },
  {
    "text": "but it's really everything else that you have to think about right that the EPC is pure do a whole bunch of other things",
    "start": "765120",
    "end": "771000"
  },
  {
    "text": "and so you actually have to go through every single one of those peering and update every route table to have reach",
    "start": "771000",
    "end": "776640"
  },
  {
    "text": "ability and not only from the routing side but you have to think about security groups we have thousands of",
    "start": "776640",
    "end": "781890"
  },
  {
    "text": "security groups and we have to enumerate through every group and every rule and see if we find a match for the existing",
    "start": "781890",
    "end": "788430"
  },
  {
    "text": "IP block and if we do we have to add a match for the new IP block because who wants to troubleshoot something where",
    "start": "788430",
    "end": "794040"
  },
  {
    "text": "you have a half connectivity I mean that's really no fun and so we ensure that we have this capability across the board right and",
    "start": "794040",
    "end": "800740"
  },
  {
    "text": "this one-liner does all of that for us yeah absolutely and so we've gotten to the point now where we can start",
    "start": "800740",
    "end": "805870"
  },
  {
    "text": "building even higher level abstractions on top of that so we're at the point now where we declare our intention of vbc",
    "start": "805870",
    "end": "812410"
  },
  {
    "text": "periods within the CMO file and once we create VPC we add the vp cid in here and we have a pipeline that'll kick off and",
    "start": "812410",
    "end": "819220"
  },
  {
    "text": "it will run this single one-liner to standardize our BPC periods this will go through and we'll add any periods that",
    "start": "819220",
    "end": "824980"
  },
  {
    "text": "don't exist it will true up in E that may have deviated from our intent and it",
    "start": "824980",
    "end": "830350"
  },
  {
    "text": "really just makes the complete management of a full mesh appearance a solved problem for us I'd like to say at",
    "start": "830350",
    "end": "835720"
  },
  {
    "text": "this point like moving away from a full mesh to the BBC appearance is actually more work for us and so I think this",
    "start": "835720",
    "end": "840880"
  },
  {
    "text": "goes to show really the power of just taking this type of automation in-house and automating it yourself so you can",
    "start": "840880",
    "end": "846550"
  },
  {
    "text": "really get to the point where you understand the interaction with AWS versus trying to understand how to use a",
    "start": "846550",
    "end": "852700"
  },
  {
    "text": "tool to interact with AWS so I think that's one of the key takeaways there now tool we've gotten to the point now",
    "start": "852700",
    "end": "859090"
  },
  {
    "text": "where we've managed our infrastructure in such a way that it frees up our time to look at more interesting things what",
    "start": "859090",
    "end": "864550"
  },
  {
    "text": "else are we looking at yeah thanks Donovan you know now that we have the kind of this global architecture we have",
    "start": "864550",
    "end": "870490"
  },
  {
    "text": "the automation to execute upon that now we have to think about other things like you know how do we integrate new AWS",
    "start": "870490",
    "end": "876370"
  },
  {
    "text": "features into our current ecosystem so for example last year at reinvent they introduced this inter region VPC peering",
    "start": "876370",
    "end": "883270"
  },
  {
    "text": "how many of you are super excited for that to come out how many of you use it today all right yeah there's some hands",
    "start": "883270",
    "end": "891580"
  },
  {
    "text": "out there you know for us we were very excited as well because we thought this was gonna solve some of our you know",
    "start": "891580",
    "end": "897190"
  },
  {
    "text": "cross region communications story and when you really think about it it would write because now we could do a full",
    "start": "897190",
    "end": "902980"
  },
  {
    "text": "mesh of EPC peers in region and we could do a full mesh of EPC peers across region and that would solve it we could",
    "start": "902980",
    "end": "909070"
  },
  {
    "text": "think about getting rid of our own MPLS backbone but when we think about integrating this there's a couple things",
    "start": "909070",
    "end": "914440"
  },
  {
    "start": "912000",
    "end": "912000"
  },
  {
    "text": "we have to consider first of all is like yeah when you consider it to the existing solution which is AWS Direct",
    "start": "914440",
    "end": "919600"
  },
  {
    "text": "Connect what do we get out of it well one of the nice things is that we do get network level encryption right it comes",
    "start": "919600",
    "end": "924820"
  },
  {
    "text": "for free with inter region VPC peering for a direct connect we'd have to do that on our own but that's not our only consideration",
    "start": "924820",
    "end": "930750"
  },
  {
    "text": "yeah absolutely I think another consideration if you remember back to when we were just making we were going",
    "start": "930750",
    "end": "936450"
  },
  {
    "text": "through this decision matrix with in Region V PC P R and we were concerned about these these bandwidth requirements",
    "start": "936450",
    "end": "941460"
  },
  {
    "text": "of our very large clusters how does that stack up with cross region yeah when you think about the bandwidth constraints the nice thing is that inter region V PC",
    "start": "941460",
    "end": "947520"
  },
  {
    "text": "peering extends that capability in terms of bandwidth being constrained based on the node that you're using right it's no",
    "start": "947520",
    "end": "953910"
  },
  {
    "text": "denote bandwidth constraint now AWS Direct Connect has evolved over the time and now you can do things like a 10 by",
    "start": "953910",
    "end": "960750"
  },
  {
    "text": "10 to give you a hundred Giga capabilities but you still have to think about building that out across all of",
    "start": "960750",
    "end": "966300"
  },
  {
    "text": "our regions right and that's still kind of a management burden as well as just managing all the interfaces you have to",
    "start": "966300",
    "end": "972420"
  },
  {
    "text": "set up for the direct connect all the eloise and you know everything there and that's kind of management burden so not",
    "start": "972420",
    "end": "978660"
  },
  {
    "text": "great when it comes to Direct Connect in that respect all right all right I think we're trending in the right direction",
    "start": "978660",
    "end": "983700"
  },
  {
    "text": "what's the security story look like with cross region BBC peering you know one of the things we were most excited about",
    "start": "983700",
    "end": "989160"
  },
  {
    "text": "was this maybe this ability to do security group references right can you reference them across region and",
    "start": "989160",
    "end": "994740"
  },
  {
    "text": "unfortunately you can't right and so for us this is kind of the same across the board like Mike hello hello there we go",
    "start": "994740",
    "end": "1006620"
  },
  {
    "text": "sorry about that Oh went out again I can yell can",
    "start": "1006620",
    "end": "1012200"
  },
  {
    "text": "everyone hear me all right so we couldn't really do security group",
    "start": "1012200",
    "end": "1018020"
  },
  {
    "text": "references so neither of these are real benefit for us oh yeah absolutely so it",
    "start": "1018020",
    "end": "1023900"
  },
  {
    "text": "looks like within two region D BC purine we're definitely a lot better off than we are with Direct Connect why not just",
    "start": "1023900",
    "end": "1029990"
  },
  {
    "text": "light it up across the board that's a great question and for us there was one more consideration that we have to make and that's really around how V PC",
    "start": "1029990",
    "end": "1036650"
  },
  {
    "text": "peering fundamentally works you really have to set up a route for every single V PC P R and when we think about this",
    "start": "1036650",
    "end": "1043970"
  },
  {
    "text": "right Direct Connect actually gives us the ability since we're using this 164 /",
    "start": "1043970",
    "end": "1049910"
  },
  {
    "text": "10 IP space to have one route that represents all of our other regions and we can set that route in a route table",
    "start": "1049910",
    "end": "1056540"
  },
  {
    "text": "punt it down to our virtual gateway and have connectivity across the board to all of our other VP",
    "start": "1056540",
    "end": "1062630"
  },
  {
    "text": "in every other region hello I'm back",
    "start": "1062630",
    "end": "1070810"
  },
  {
    "text": "maybe nope hello oh my new alright so the dilemma",
    "start": "1071560",
    "end": "1081020"
  },
  {
    "text": "here is that when you think about VP see peers we have to have a route for every single one of those and we have so many",
    "start": "1081020",
    "end": "1087290"
  },
  {
    "text": "routes and are so many hearings in our environment that we fundamentally can't actually do a full mesh of cross region",
    "start": "1087290",
    "end": "1093770"
  },
  {
    "text": "VPC peers without continuing to push on the limits of our route tables and when",
    "start": "1093770",
    "end": "1098930"
  },
  {
    "text": "we think about pushing limits you know we pushed limits in all kinds of ways we not only push them for route tables we",
    "start": "1098930",
    "end": "1105350"
  },
  {
    "start": "1101000",
    "end": "1101000"
  },
  {
    "text": "push them for security groups the number that we can create the number of rules that we can create we push them in the",
    "start": "1105350",
    "end": "1111230"
  },
  {
    "text": "number of routes that can be propagated through a vgw through like Direct Connect we also push on things like API",
    "start": "1111230",
    "end": "1117350"
  },
  {
    "text": "rate limits and we not only think about these when integrating AWS features we",
    "start": "1117350",
    "end": "1122360"
  },
  {
    "text": "also think about these when we're integrating our own in-house features you know for example does anybody here",
    "start": "1122360",
    "end": "1128360"
  },
  {
    "text": "know what Titus's Oh a few of you alright so so to give you a rundown",
    "start": "1128360",
    "end": "1134390"
  },
  {
    "text": "Titus is our open source container orchestration and runtime platform",
    "start": "1134390",
    "end": "1140510"
  },
  {
    "text": "within Netflix right it's been growing adoption from all of our vendor all of",
    "start": "1140510",
    "end": "1145520"
  },
  {
    "text": "our developers it runs on apache meso sand docker and it's been in its",
    "start": "1145520",
    "end": "1150890"
  },
  {
    "text": "adoption we're running maybe about three million containers a week at this point right quite a few containers and when we",
    "start": "1150890",
    "end": "1158240"
  },
  {
    "text": "were teaming up with a tightest team to help them solve some of their network problems right you know we had to think",
    "start": "1158240",
    "end": "1163790"
  },
  {
    "start": "1163000",
    "end": "1163000"
  },
  {
    "text": "about what are those challenges and one of them is really around an IP per container when you think about our",
    "start": "1163790",
    "end": "1169700"
  },
  {
    "text": "service discovery we talked about earlier by every instance registers to discovery with its own IP address and it",
    "start": "1169700",
    "end": "1176870"
  },
  {
    "text": "with the containers we needed the same thing to happen so from a container perspective we needed to ensure that we",
    "start": "1176870",
    "end": "1182120"
  },
  {
    "text": "did have an IP per container and not just for service discovery but for things like log analysis as well as some",
    "start": "1182120",
    "end": "1189020"
  },
  {
    "text": "internal tooling we have an internal tool called sonar that applies metadata to an IP address",
    "start": "1189020",
    "end": "1194640"
  },
  {
    "text": "we wanted to share that that metadata was unique for every IP address we are using within our network the other",
    "start": "1194640",
    "end": "1200370"
  },
  {
    "text": "requirement for tightest and just containers in general is the ability to deploy quickly right that's that's one",
    "start": "1200370",
    "end": "1207270"
  },
  {
    "text": "of the benefits of containers as I can build it locally I can go ahead and ship it up to a nice AWS instance and have it",
    "start": "1207270",
    "end": "1213300"
  },
  {
    "text": "run very very quickly now from a networking perspective this really made us start to change how we view scale",
    "start": "1213300",
    "end": "1220350"
  },
  {
    "text": "inside of AWS right because traditionally we always thought about scale and the sheer number of ec2",
    "start": "1220350",
    "end": "1226290"
  },
  {
    "text": "instances that were running at any given time and because realistically and generally an Amazon ec2 instance has one",
    "start": "1226290",
    "end": "1233490"
  },
  {
    "text": "elastic network interface and one IP address but when we take into account this IP per container solution right you",
    "start": "1233490",
    "end": "1240840"
  },
  {
    "text": "now have something like this where we have IPS that are assigned to containers all these containers are co-tenant into",
    "start": "1240840",
    "end": "1247680"
  },
  {
    "text": "an elastic network interface and all of those are on an Amazon ec2 instance right this makes us think about this",
    "start": "1247680",
    "end": "1254460"
  },
  {
    "text": "paradigm a bit differently because now it's not scale and the number of ec2 instances it's scaling the number of IP",
    "start": "1254460",
    "end": "1260340"
  },
  {
    "text": "addresses that are used out there now for the other requirement to be able to deploy quickly all right we are",
    "start": "1260340",
    "end": "1266670"
  },
  {
    "text": "partnering with the tightest team to think about how do you actually do this all right because there's really a",
    "start": "1266670",
    "end": "1271980"
  },
  {
    "text": "couple different ways that you can slice this and one of them is doing it on demand what I mean is as a workload",
    "start": "1271980",
    "end": "1277440"
  },
  {
    "text": "comes in to Titus they need to be able to provision all everything that's necessary to have that workload running",
    "start": "1277440",
    "end": "1283680"
  },
  {
    "text": "and this means a whole bunch of AWS API calls right we need to be able to create the network interface we have to find it",
    "start": "1283680",
    "end": "1289830"
  },
  {
    "text": "and attach it we have to go ahead and add secondary IP addresses to that enough for to basically sustain all the",
    "start": "1289830",
    "end": "1295800"
  },
  {
    "text": "containers that are needed for that workload we also then have to modify the network interface to have a security",
    "start": "1295800",
    "end": "1301260"
  },
  {
    "text": "group on there to ensure we have the right security attributes and really at this point we're bounded as to the",
    "start": "1301260",
    "end": "1307890"
  },
  {
    "text": "deployment as quickly as we can actually mutate the AWS environment all right so let me think about this",
    "start": "1307890",
    "end": "1313500"
  },
  {
    "text": "if we can't mutate the AWS network fast enough to deploy our containers what if we just take a different approach and",
    "start": "1313500",
    "end": "1319410"
  },
  {
    "text": "flip this over and just pre populate everything upfront so you're basically wondering if we can populate all of our",
    "start": "1319410",
    "end": "1326100"
  },
  {
    "text": "network interfaces that start up and just like load them up with yeah absolutely yeah I mean that seems like a solution but when you really look",
    "start": "1326100",
    "end": "1333480"
  },
  {
    "text": "at that capability and you think about a growing number of ec2 instances across the board up to you know in this case",
    "start": "1333480",
    "end": "1339240"
  },
  {
    "text": "four thousand and we think about the fact that we attach eight network interfaces to every ec2 instance and we",
    "start": "1339240",
    "end": "1345809"
  },
  {
    "text": "want to pre-populate those with IPS I mean when you really think about the fact that like a VP C is a single slash",
    "start": "1345809",
    "end": "1351450"
  },
  {
    "text": "16 then you really can't pre populate a whole lot of IPs on there Joel you need to think bigger we talked about earlier",
    "start": "1351450",
    "end": "1358379"
  },
  {
    "text": "how it's super easy for us to resize our VP C's we need to fly of exodus because you can put five five six teens in the",
    "start": "1358379",
    "end": "1363690"
  },
  {
    "text": "VP C you're right you can do 5/6 teens and although you can't really assign them perfectly right you have to think",
    "start": "1363690",
    "end": "1369570"
  },
  {
    "text": "about breaking them down across all your subnets I mean it gives you a little over 300,000 IPs but when you really",
    "start": "1369570",
    "end": "1375779"
  },
  {
    "text": "think about the rate at which VP era Titus is going ahead and adopting and evolving I mean this really doesn't cut",
    "start": "1375779",
    "end": "1382889"
  },
  {
    "text": "it for them it's just surely the number of IP addresses is really not supported so from the titus perspective they had",
    "start": "1382889",
    "end": "1389820"
  },
  {
    "text": "to think about a hybrid model where they really pre create all the elastic network interfaces but they don't",
    "start": "1389820",
    "end": "1395340"
  },
  {
    "text": "actually populate all the IP addresses right up front they'll do them in batches of 4 IP addresses at a time when",
    "start": "1395340",
    "end": "1401399"
  },
  {
    "text": "workload comes in and that gives them the ability to kind of sustain this at scale but one of the things from the",
    "start": "1401399",
    "end": "1407129"
  },
  {
    "text": "networking side is that we still wanted to ensure that they could continue to evolve and grow their girl our network",
    "start": "1407129",
    "end": "1413759"
  },
  {
    "text": "to be able to meet their demand when Titus first came on board right they were an application like any other they",
    "start": "1413759",
    "end": "1420659"
  },
  {
    "text": "were sitting in our production account and realistically they were sitting in same subnets as all of our other",
    "start": "1420659",
    "end": "1426570"
  },
  {
    "text": "production applications if you notice here we actually have two subnets because we had run out of IP space to",
    "start": "1426570",
    "end": "1432720"
  },
  {
    "text": "begin with and had to resize once but there's some concerns about Titus sitting co-tenant with the rest of our",
    "start": "1432720",
    "end": "1439049"
  },
  {
    "text": "ec2 instances when we think about the co-tenant scenario one concern is really",
    "start": "1439049",
    "end": "1444210"
  },
  {
    "start": "1441000",
    "end": "1441000"
  },
  {
    "text": "around IP isolation when you think about them being in the same subnets as all of our other production applications",
    "start": "1444210",
    "end": "1450379"
  },
  {
    "text": "realistically I mean they're using the same IP pool which also means that that IP pool could get exhausted so that's",
    "start": "1450379",
    "end": "1457019"
  },
  {
    "text": "something we have to be really concerned about yeah absolutely so remember that when Titus was first",
    "start": "1457019",
    "end": "1462250"
  },
  {
    "text": "gaining traction internally that it was super easy for people to move their workloads from ec2 to Titus simply",
    "start": "1462250",
    "end": "1468520"
  },
  {
    "text": "because they could share the security group between their ec2 environment and when they're operating a container yeah that was a definite advantage here was",
    "start": "1468520",
    "end": "1474790"
  },
  {
    "text": "the ability to share security groups right because in some cases we actually have applications that run ec2 instances",
    "start": "1474790",
    "end": "1481270"
  },
  {
    "text": "and Titus at the same time and so the nice thing here being co-tenant is that you could use that same security group",
    "start": "1481270",
    "end": "1486880"
  },
  {
    "text": "across both of those deployments okay so what is there anything we have to",
    "start": "1486880",
    "end": "1492340"
  },
  {
    "text": "concern what are we concerned about with the API right I mean we were talking earlier about mutating the Amazon API",
    "start": "1492340",
    "end": "1497860"
  },
  {
    "text": "what does that look like again in the co-tenant situation yeah the co-tenant scenario you have to think about what this AWS api is remember that API rate",
    "start": "1497860",
    "end": "1505330"
  },
  {
    "text": "limits are done at the account level so anyone sharing that same account whether you're deployed in the same",
    "start": "1505330",
    "end": "1510550"
  },
  {
    "text": "subnet or not are actually in contention for all those API calls so when you think about the ability to create all",
    "start": "1510550",
    "end": "1516850"
  },
  {
    "text": "the network interfaces and mutate them right you're really just contending with the rest of our production application",
    "start": "1516850",
    "end": "1522280"
  },
  {
    "text": "and that's not a great scenario either and realistically with the co-tenant scenario you only get about ninety eight",
    "start": "1522280",
    "end": "1527410"
  },
  {
    "text": "thousand shared IP addresses and when you think about the size of our fleet and this the growing fleet of titus and",
    "start": "1527410",
    "end": "1533050"
  },
  {
    "text": "with an IP per container I mean that's really not enough yeah I remember when we were sitting and talking about this",
    "start": "1533050",
    "end": "1538630"
  },
  {
    "text": "problem we were really in a fortunate situation you know we had to we already resized of even see once we always",
    "start": "1538630",
    "end": "1545290"
  },
  {
    "text": "operate in the three zone mode in every region and we can resize three more times so we just went ahead and put a",
    "start": "1545290",
    "end": "1551350"
  },
  {
    "text": "slash 16 in every zone for him yeah we gave them their own dedicated subnets and what that really did is open up the",
    "start": "1551350",
    "end": "1557170"
  },
  {
    "text": "the fact that they had IP isolation they're using their own subnet so they weren't gonna actually exhaust IPS for",
    "start": "1557170",
    "end": "1562750"
  },
  {
    "text": "the rest of our production fleet they still had this ability to use shared security groups we didn't solve the AWS",
    "start": "1562750",
    "end": "1569050"
  },
  {
    "text": "API isolation though right because remember that API rate limits are done at the account level and we gave them about 200,000 dedicated IP addresses in",
    "start": "1569050",
    "end": "1576610"
  },
  {
    "text": "this scenario yeah it seems like we're in a better spot than we were originally but I mean the next step for it is",
    "start": "1576610",
    "end": "1582280"
  },
  {
    "text": "probably a dedicated V PC yeah I mean I think a dedicated V PC might be the natural evolution here but you know you",
    "start": "1582280",
    "end": "1588310"
  },
  {
    "text": "end up contending with this shared security group problem so remember security groups are bounded to a V PC",
    "start": "1588310",
    "end": "1593680"
  },
  {
    "text": "so giving them their own dedicated VPC means we can no longer use that same security group if they have applications",
    "start": "1593680",
    "end": "1599620"
  },
  {
    "text": "in ec2 and now they have applications in theis our containers and Titus that's a problem and it really doesn't solve our",
    "start": "1599620",
    "end": "1606130"
  },
  {
    "text": "AWS API isolation at all although it does give them about a hundred thousand more IPS when you really break it down",
    "start": "1606130",
    "end": "1612370"
  },
  {
    "text": "and assign those to the proper subnets and I don't think this is really gonna fly for them I think realistically we",
    "start": "1612370",
    "end": "1618280"
  },
  {
    "text": "have to extend this and go to a dedicated account to give them those AWS API isolations that way they have their",
    "start": "1618280",
    "end": "1623800"
  },
  {
    "text": "own buckets for rate limiting but we still have some decisions to make around the shared security group and really how",
    "start": "1623800",
    "end": "1629170"
  },
  {
    "text": "we're gonna solve that but Donovan who talked a lot about VPC decisions you know you're gonna talk about DNS what do",
    "start": "1629170",
    "end": "1635170"
  },
  {
    "text": "we got on the dns front yeah yeah absolutely so again we spend all we spend a lot of",
    "start": "1635170",
    "end": "1640990"
  },
  {
    "text": "our time not only thinking about VPC but we spend a lot of time thinking about DNS as well and so within the DNS realm",
    "start": "1640990",
    "end": "1649330"
  },
  {
    "text": "I want to go back and I want to talk about a really critical decision we made over this past year and that was around",
    "start": "1649330",
    "end": "1655090"
  },
  {
    "text": "how we use DNS in conjunction with service discovery so I understand service discovery is a big topic it can",
    "start": "1655090",
    "end": "1662710"
  },
  {
    "text": "be pretty nuanced and at times maybe controversial and I don't want to get into all that but I want to make sure that we're all on the same page so",
    "start": "1662710",
    "end": "1668950"
  },
  {
    "text": "Netflix we use Eureka for service discovery Eureka is open source it's on our github page anybody is welcome to",
    "start": "1668950",
    "end": "1674920"
  },
  {
    "text": "use it it's a rest-based service so anytime an instance comes up it makes a rest call to register themselves and as depicted",
    "start": "1674920",
    "end": "1681910"
  },
  {
    "text": "on the screen when foo wants to be able to discover where bar is it'll go ahead and make a rest request to get a list of",
    "start": "1681910",
    "end": "1687640"
  },
  {
    "text": "nodes in which bar is operating on and they're off to the races now the nice thing about Eureka is that has this",
    "start": "1687640",
    "end": "1693820"
  },
  {
    "text": "concepts of states that ec2 clusters can be in so we frequently red-black our",
    "start": "1693820",
    "end": "1699040"
  },
  {
    "text": "clusters or as some people call it blue Galena blue green and Eureka has the",
    "start": "1699040",
    "end": "1704500"
  },
  {
    "text": "ability to just flip that that state of clusters in very quickly from in service to out of service the whole time foo is",
    "start": "1704500",
    "end": "1710380"
  },
  {
    "text": "able to satisfy its request and be able to figure out the current in in service",
    "start": "1710380",
    "end": "1716410"
  },
  {
    "text": "version of bar now the the frequent question that we've had in for a long time and it predates my time at Netflix",
    "start": "1716410",
    "end": "1722260"
  },
  {
    "text": "is how can we use DNS we don't want to use a rest client we're using a web browser I want to be able to just type in hostname and so to solve this problem",
    "start": "1722260",
    "end": "1729110"
  },
  {
    "text": "what we've done historically is we've just synchronized all this data into a route 53 public hosted zone so by using",
    "start": "1729110",
    "end": "1736400"
  },
  {
    "text": "a common naming format we send and synchronize the state that Eureka has in",
    "start": "1736400",
    "end": "1741770"
  },
  {
    "text": "terms of what's in service and how to service in the world and we create records inside route 53 - to solve this",
    "start": "1741770",
    "end": "1748159"
  },
  {
    "text": "DNS requirement now over time this is become problematic we're now at a state where our environment has become large",
    "start": "1748159",
    "end": "1755299"
  },
  {
    "text": "enough that this synchronization process is a problem we have a ton of more micro",
    "start": "1755299",
    "end": "1761720"
  },
  {
    "text": "services we have a lot of changes especially with tightest ip's coming and going all the time we're simply at the spot where we can't",
    "start": "1761720",
    "end": "1768140"
  },
  {
    "text": "mutate a route 53 public hosted zone fast enough and so again where we're at a critical decision where we want to",
    "start": "1768140",
    "end": "1774140"
  },
  {
    "text": "figure out what we can do in this situation now our team doesn't manage eureka internally but we like partnering",
    "start": "1774140",
    "end": "1781280"
  },
  {
    "text": "with other teams and we sat down with the team that manages it and we we got together and we tried to figure out what can we do about this problem so anytime",
    "start": "1781280",
    "end": "1789169"
  },
  {
    "text": "we want to make a decision and try and move forward I think it is helpful to go back to a decision matrix and figure out",
    "start": "1789169",
    "end": "1795380"
  },
  {
    "start": "1794000",
    "end": "1794000"
  },
  {
    "text": "what what's what are we actually trying to solve for so in this particular case our existing solution does a great job",
    "start": "1795380",
    "end": "1801080"
  },
  {
    "text": "at Auto removing CL DNS records it also has the great in service out of service",
    "start": "1801080",
    "end": "1806530"
  },
  {
    "text": "capability that we've come to know and love but again the problem is you simply can't mutate the route 53 public hosted",
    "start": "1806530",
    "end": "1812690"
  },
  {
    "text": "Zone fast enough you know Donovan yeah I talked to AWS about this okay as we often do to figure out there's any",
    "start": "1812690",
    "end": "1819409"
  },
  {
    "text": "solutions we can use out there and they decide they said let's look at this route this auto naming service the route",
    "start": "1819409",
    "end": "1825049"
  },
  {
    "text": "53 auto naming and it does something very similar where it'll create you know DNS records for instances that are",
    "start": "1825049",
    "end": "1830809"
  },
  {
    "text": "coming up but when you really stack this up to kind of the criteria here it doesn't remove Auto stale DNS records",
    "start": "1830809",
    "end": "1837080"
  },
  {
    "text": "so we would still have to kind of do that on our own and it doesn't know anything about our own internal",
    "start": "1837080",
    "end": "1842799"
  },
  {
    "text": "discovery so out of service would have to be our own hook now being an AWS service though it has its own rate",
    "start": "1842799",
    "end": "1848630"
  },
  {
    "text": "limits so the benefit there is that like you know those that rate limits are much higher than what we as a customer have",
    "start": "1848630",
    "end": "1853640"
  },
  {
    "text": "but in the end I just don't think that we don't think it's gonna fly yeah unfortunately we're not always able to",
    "start": "1853640",
    "end": "1860270"
  },
  {
    "text": "leverage jams on service the way that we'd like to and in this particular case you know this is a this is a problem that we're",
    "start": "1860270",
    "end": "1867179"
  },
  {
    "text": "currently experiencing and it's actually impacting some of our internal applications and you know people are",
    "start": "1867179",
    "end": "1872280"
  },
  {
    "text": "coming to us to the on-call people the team that is supposed to be the managers of DNS and Netflix and they're having",
    "start": "1872280",
    "end": "1878820"
  },
  {
    "text": "these problems and we really need to solve this today and so what we did is we thought of hey",
    "start": "1878820",
    "end": "1883980"
  },
  {
    "text": "we can we can build something in-house to solve this problem so we created a DNS layer on top of Eureka aptly named",
    "start": "1883980",
    "end": "1890130"
  },
  {
    "text": "Eureka DNS it's a little bit laggy the",
    "start": "1890130",
    "end": "1900360"
  },
  {
    "text": "clickers networking let's go forward yeah okay absolutely okay just go ahead",
    "start": "1900360",
    "end": "1906410"
  },
  {
    "text": "so historically what we've done is again we synchronized this into a rel 53",
    "start": "1906410",
    "end": "1911520"
  },
  {
    "text": "public host and zone so are our thoughts in what we did in this scenario was we",
    "start": "1911520",
    "end": "1916559"
  },
  {
    "text": "simply swap to that route 53 hosted zone to a set of authoritative nameservers",
    "start": "1916559",
    "end": "1921660"
  },
  {
    "text": "that we own and operate so in this particular case it doesn't really matter who's servicing the DNS requests do you",
    "start": "1921660",
    "end": "1927390"
  },
  {
    "text": "nested to your contract and as long as you're satisfying that contract you can really operate any sort of authoritative",
    "start": "1927390",
    "end": "1932760"
  },
  {
    "text": "nameserver your want so in this particular case we no longer have an actual you know common DNS zone that you",
    "start": "1932760",
    "end": "1939510"
  },
  {
    "text": "would typically think of or simply taking a DNS request and we're synthesizing the response based on data",
    "start": "1939510",
    "end": "1945090"
  },
  {
    "text": "that we have in Eureka at that point in time oh wait Donavan you're telling me",
    "start": "1945090",
    "end": "1950100"
  },
  {
    "text": "that we're gonna build our own authoritative DNS servers in AWS I'm not",
    "start": "1950100",
    "end": "1955919"
  },
  {
    "text": "telling you that we're going to I'm telling you that we did all right all right okay so anytime that's the",
    "start": "1955919",
    "end": "1962460"
  },
  {
    "text": "great thing about ec2 is you can really build whatever you want but for something like an authoritative nameserver inside the ec2 you need to",
    "start": "1962460",
    "end": "1969030"
  },
  {
    "text": "just think about what it actually tasted to accomplish your task and so go back to our decision matrix again like what",
    "start": "1969030",
    "end": "1975150"
  },
  {
    "start": "1973000",
    "end": "1973000"
  },
  {
    "text": "do we need for an authoritative nameserver we need a static IP so we need I P V for support we need ipv6",
    "start": "1975150",
    "end": "1980940"
  },
  {
    "text": "support and obviously DNS is UDP so we need UDP support all right all right I got it how about we use network load balancers",
    "start": "1980940",
    "end": "1990270"
  },
  {
    "text": "to be able to size the NLD was really set AWS less here so let's think about this an NLB",
    "start": "1990270",
    "end": "1996870"
  },
  {
    "text": "supports static ipv4 addresses they're static but it comes up a little short on",
    "start": "1996870",
    "end": "2002360"
  },
  {
    "text": "the v6 story and obviously no UDP supports so that's a clear non-starter yes only they supported UDP okay only",
    "start": "2002360",
    "end": "2010010"
  },
  {
    "text": "what about an elastic IP address okay the last thing I people work ok in the",
    "start": "2010010",
    "end": "2017600"
  },
  {
    "text": "last six I so an elastic IP you know it assigns directly to an instance I'd call",
    "start": "2017600",
    "end": "2022820"
  },
  {
    "text": "the primitive and since it's you sign it to an ec2 instance you can operate",
    "start": "2022820",
    "end": "2028159"
  },
  {
    "text": "whatever IP protocol you want through it but by definition they don't support ipv6 and hold on before you say it I'm",
    "start": "2028159",
    "end": "2034880"
  },
  {
    "text": "not gonna let us do something without supporting ipv6 okay you and the ipv6",
    "start": "2034880",
    "end": "2039919"
  },
  {
    "text": "all right let's see I like the elastic IP though but what if we just created an elastic network interface we assign that",
    "start": "2039919",
    "end": "2046820"
  },
  {
    "text": "elastic IP to it and then you can have your ipv6 address all right I think that'll work so now we can again we can",
    "start": "2046820",
    "end": "2053210"
  },
  {
    "text": "attach this to an ec2 instance so we can operate whatever IP protocol we want we get both of these six of these for",
    "start": "2053210",
    "end": "2059240"
  },
  {
    "text": "support and I think this is I think we have a winner yeah but you know what about the high availability story I mean",
    "start": "2059240",
    "end": "2065300"
  },
  {
    "text": "it's a bit of a challenge right that uses a single lastik network interface yeah yeah we definitely have to take a little bit more care and how we actually",
    "start": "2065300",
    "end": "2071358"
  },
  {
    "text": "deploy this internally right so let's think about a think about how we do this so what we've done is we've gone ahead",
    "start": "2071359",
    "end": "2077240"
  },
  {
    "text": "and pre created all these staticy and isostatic key and I will have before addressing six address and I'll have the",
    "start": "2077240",
    "end": "2082368"
  },
  {
    "text": "appropriate security group to allow you to be traffic in and so now when we deploy an ec2 instance it will go",
    "start": "2082369",
    "end": "2087530"
  },
  {
    "text": "through a discovery process and then in that discovery process if it finds the e and I attaches itself to it and then",
    "start": "2087530",
    "end": "2093800"
  },
  {
    "text": "it's able to service DNS requests that come in to that IP so we also have to consider how we essentially red-black a",
    "start": "2093800",
    "end": "2100340"
  },
  {
    "text": "dns cluster because that's how we deploy updates in this particular case the new instance comes up it discovers that en I",
    "start": "2100340",
    "end": "2107450"
  },
  {
    "text": "moves over to the the new instance and then the old one goes away old one goes away and at this point we've deployed an",
    "start": "2107450",
    "end": "2116390"
  },
  {
    "text": "update to a DNS cluster it's pretty cool now that's just one that's just one little building block we also have to",
    "start": "2116390",
    "end": "2121910"
  },
  {
    "text": "consider how we do this because at a larger scale because again we don't just",
    "start": "2121910",
    "end": "2127310"
  },
  {
    "text": "delegate a DNS zone to a single IP we have to do this multiple times so we've done is we've replicated this that",
    "start": "2127310",
    "end": "2133280"
  },
  {
    "text": "particular set up we just talked through twice per availability zone and then again we always operate in regions that",
    "start": "2133280",
    "end": "2138710"
  },
  {
    "text": "have three zones so we just replicated again out for every zone in addition to",
    "start": "2138710",
    "end": "2143720"
  },
  {
    "text": "that we have to then take that template and stamp it out across every region that we operate in and then again per different environment",
    "start": "2143720",
    "end": "2150830"
  },
  {
    "text": "so when I'm talking about an environment I'm thinking testing and production so we end up with this this cookie cutter",
    "start": "2150830",
    "end": "2156500"
  },
  {
    "text": "scenario that we just replicate out multiple times and one of the really cool things about this is that your your",
    "start": "2156500",
    "end": "2161660"
  },
  {
    "text": "DNS namespace is very very well structured and something that I'd like to call a DNS delegation hierarchy so",
    "start": "2161660",
    "end": "2168200"
  },
  {
    "start": "2165000",
    "end": "2165000"
  },
  {
    "text": "and again in how we actually ended up deploying this is we take our third level domain eureka Netflix net in this",
    "start": "2168200",
    "end": "2174950"
  },
  {
    "text": "case we delegate out our environments and then from there we delegate our regions so now as an application",
    "start": "2174950",
    "end": "2182510"
  },
  {
    "text": "developer at Netflix if you simply deploy a service and use the Netflix",
    "start": "2182510",
    "end": "2187609"
  },
  {
    "text": "ecosystem you will get a host name for your service and so the great thing again about this is that it's really",
    "start": "2187609",
    "end": "2193490"
  },
  {
    "text": "rigidly structured in terms of your name space for your DNS host name I think that's another like really powerful",
    "start": "2193490",
    "end": "2199040"
  },
  {
    "text": "concept that anybody can use even if you're not doing exactly what we're doing here you take care with your DNS",
    "start": "2199040",
    "end": "2205010"
  },
  {
    "text": "namespace and you structure it and you don't have to structure it exactly like this but if you put enough foresight",
    "start": "2205010",
    "end": "2210800"
  },
  {
    "text": "into there to structure it you end up in a really cool scenario so now for us what we can do is we can flip between",
    "start": "2210800",
    "end": "2216740"
  },
  {
    "text": "different stacks of our of our deployments so you can simply change the region name and the host name to go from",
    "start": "2216740",
    "end": "2222050"
  },
  {
    "text": "one region to another you can check out your test and your pradhans by simply changing a token in the host name it's",
    "start": "2222050",
    "end": "2227660"
  },
  {
    "text": "really cool yeah Don this is a very interesting solution to a problem we had but you know one theme I'm seeing with",
    "start": "2227660",
    "end": "2233780"
  },
  {
    "text": "all of these things is that you know we're being very reactionary to things that we're dealing with right problems",
    "start": "2233780",
    "end": "2239089"
  },
  {
    "text": "were coming up against like isn't there a chance for us to be a little bit more proactive and some things we're working on",
    "start": "2239089",
    "end": "2244359"
  },
  {
    "text": "absolutely so as we as we talked earlier like if we've kind of fought a bunch of fires already and we have a lot of",
    "start": "2244359",
    "end": "2250099"
  },
  {
    "text": "automation and tooling that helps make our day-to-day operational workloads super easy and it kind of frees us up to",
    "start": "2250099",
    "end": "2255710"
  },
  {
    "text": "be able to think more proactively about things that we want to work on and within DNS there's an opportunity to do that and what we've",
    "start": "2255710",
    "end": "2263360"
  },
  {
    "text": "identified for an opportunity is around DNS theory so when any one of our hundred and thirty seven million users",
    "start": "2263360",
    "end": "2269300"
  },
  {
    "text": "around the world open up their web browser and they want to watch Netflix they type dub dub dub Netflix comm and",
    "start": "2269300",
    "end": "2274690"
  },
  {
    "text": "we have to at the DNS level steer them to one of our three regions that we operate in now from a serviceability perspective it",
    "start": "2274690",
    "end": "2282500"
  },
  {
    "text": "doesn't really matter what region we send you to because on the backend we replicate all your bookmarks their",
    "start": "2282500",
    "end": "2287780"
  },
  {
    "text": "profile all that good stuff across all three regions so we can service any customer from any region what we what",
    "start": "2287780",
    "end": "2299660"
  },
  {
    "text": "we've done historically though to solve this problem is we've used geography so geo DNS does this commonly referred to",
    "start": "2299660",
    "end": "2305510"
  },
  {
    "text": "we have a static hand-tuned policy where we map particular geographies of the world to our AWS region and we're off to",
    "start": "2305510",
    "end": "2312920"
  },
  {
    "text": "the races to kind of solve this problem so a user in San Francisco for example would be statically mapped to our US",
    "start": "2312920",
    "end": "2318800"
  },
  {
    "text": "west to region and the user in London would be statically mapped to our US one region when this ends up having a big",
    "start": "2318800",
    "end": "2325790"
  },
  {
    "text": "impact on how each regions like the traffic that they received from our customers so what we're looking at here",
    "start": "2325790",
    "end": "2332270"
  },
  {
    "text": "is a request weight request rate per region as a percentage of our global",
    "start": "2332270",
    "end": "2338810"
  },
  {
    "text": "request rate and each reasons broken out to their own color we have the percentage of requests on the left-hand",
    "start": "2338810",
    "end": "2344480"
  },
  {
    "text": "side and this is overtime and we're looking at a one a one week time span now if we did load-balancing with geo",
    "start": "2344480",
    "end": "2351980"
  },
  {
    "text": "DNS perfectly or just DNS in general perfectly we would end up with this perfect balance at one third so in",
    "start": "2351980",
    "end": "2357650"
  },
  {
    "text": "theory the best we could ever do is 1/3 distribution between our three regions and so we call anything above that",
    "start": "2357650",
    "end": "2363920"
  },
  {
    "text": "one-third boundary and availability risk and so in the event of a regional failure if we have to evacuate a region",
    "start": "2363920",
    "end": "2371410"
  },
  {
    "text": "if we're moving more than a third of our customers we're being more risky with",
    "start": "2371410",
    "end": "2376430"
  },
  {
    "text": "our customers traffic than we really need to be right so and then once we're failed out of that region we should be",
    "start": "2376430",
    "end": "2382070"
  },
  {
    "text": "having a perfect balance at 250 percent for our two regions and so we consider anything above the 50% threshold a cost",
    "start": "2382070",
    "end": "2389420"
  },
  {
    "text": "driver because again and we were able to fail out of any region eight in order to accomplish that we need to",
    "start": "2389420",
    "end": "2395430"
  },
  {
    "text": "maintain ec2 instance capacity in every region to support any other region's failure so we're at a point now where",
    "start": "2395430",
    "end": "2403140"
  },
  {
    "text": "we're thinking you know we can do one better here you know we can we can definitely optimize our our cost driver",
    "start": "2403140",
    "end": "2412440"
  },
  {
    "text": "and our availability risk simply by being a lot smarter with how we resolve",
    "start": "2412440",
    "end": "2417780"
  },
  {
    "text": "DNS for our customers Domon yes again you know I talked to AWS about this looked at some available solutions okay",
    "start": "2417780",
    "end": "2425280"
  },
  {
    "text": "we said okay well we're not really optimizing for latency what if we optimize for latency what would that actually looked like okay so what if we",
    "start": "2425280",
    "end": "2432240"
  },
  {
    "text": "utilize amazon's route 53 latency based routing all right when you think about latency based routing it really takes",
    "start": "2432240",
    "end": "2437910"
  },
  {
    "text": "that other pillar and a concern which is performance so if a user when they make that DNS resolution they're gonna look",
    "start": "2437910",
    "end": "2443940"
  },
  {
    "text": "at their latency to all the regions and they're gonna send them to the region has the lowest latency and so similarly",
    "start": "2443940",
    "end": "2449370"
  },
  {
    "text": "like Gio and you think about like a user in San Francisco they're gonna go to us west to you think about a user and",
    "start": "2449370",
    "end": "2455490"
  },
  {
    "start": "2452000",
    "end": "2452000"
  },
  {
    "text": "London's gonna go to e us one and as we started considering this we thought well how do we really understand what the",
    "start": "2455490",
    "end": "2462450"
  },
  {
    "text": "ramifications of this are if we chose to go fully with latency based routing across the globe and so in order to get",
    "start": "2462450",
    "end": "2468990"
  },
  {
    "text": "that data we instrumented these real user measurements and really user measurements are basically probes that",
    "start": "2468990",
    "end": "2474660"
  },
  {
    "text": "go out to every single region and identify what the latency is to every region from our clients and so there's a",
    "start": "2474660",
    "end": "2481230"
  },
  {
    "text": "very small percentage of chance that those are you out there when you open up Netflix on your devices you're sending",
    "start": "2481230",
    "end": "2487800"
  },
  {
    "text": "these probes and then you're sending all that data back to us so that we can go ahead and do things like model out what",
    "start": "2487800",
    "end": "2493530"
  },
  {
    "text": "it would look like if we chose everyone's region based on the lowest performance are the lowest latency to",
    "start": "2493530",
    "end": "2500100"
  },
  {
    "text": "that region and really this is what it ends up looking like if you notice here it ends up being a very large skew and",
    "start": "2500100",
    "end": "2507480"
  },
  {
    "text": "there's one region that sticks out in particular that has now roughly 75% of",
    "start": "2507480",
    "end": "2513360"
  },
  {
    "text": "our client requests during peak and that region is us East one and the concern",
    "start": "2513360",
    "end": "2518970"
  },
  {
    "text": "here is that you know we're really not trending in the right direction because now we have this much larger",
    "start": "2518970",
    "end": "2524130"
  },
  {
    "text": "availability risk we actually have this much law cos driver and for us we were trying to",
    "start": "2524130",
    "end": "2529619"
  },
  {
    "text": "drive that down so really latency based routing wasn't gonna do it for us and",
    "start": "2529619",
    "end": "2534690"
  },
  {
    "text": "and I mean you know when you look at that US East one and how much percentage of client requests there I mean Don I",
    "start": "2534690",
    "end": "2539880"
  },
  {
    "text": "mean why would something like that actually happen yeah yeah it's a good question so maybe let's go through a",
    "start": "2539880",
    "end": "2544890"
  },
  {
    "text": "little mini case study and to try and figure out and understand how we ended up in the scenario with latency based",
    "start": "2544890",
    "end": "2549900"
  },
  {
    "text": "routing so we'll look at a map of the world and we'll put three users in the world so we have a user with our yellow",
    "start": "2549900",
    "end": "2556380"
  },
  {
    "text": "dot in the Midwest of the United States it looks like it's in Wisconsin we have a user in the with a blue dot in Spain",
    "start": "2556380",
    "end": "2562890"
  },
  {
    "text": "and then we have a user way down in South America in Argentina it looks like so the user in yellow has a great",
    "start": "2562890",
    "end": "2570779"
  },
  {
    "text": "connectivity to the two American regions and then decent connectivity as it goes across the Atlantic over to our EU",
    "start": "2570779",
    "end": "2576989"
  },
  {
    "text": "region the user in Spain obviously has great connectivity to our EU region slightly more latent as you go across",
    "start": "2576989",
    "end": "2583199"
  },
  {
    "text": "our three other regions in America and then the user in South America since we don't operate in that region we have to",
    "start": "2583199",
    "end": "2588900"
  },
  {
    "text": "bring that traffic all the way up to North America or Europe and that added distance adds Network latency here so",
    "start": "2588900",
    "end": "2595140"
  },
  {
    "text": "every users preferred region in this particular scenario we end up with a 2/3 distribution to us east one now if we",
    "start": "2595140",
    "end": "2603390"
  },
  {
    "text": "transcribed this data on to a table it's a little bit easier to see again we see the two-thirds distribution to us East",
    "start": "2603390",
    "end": "2609119"
  },
  {
    "text": "one now again we didn't have this problem with with geo DNS if you",
    "start": "2609119",
    "end": "2614130"
  },
  {
    "text": "remember it was much much differently balanced so the way we again the way",
    "start": "2614130",
    "end": "2619440"
  },
  {
    "start": "2619000",
    "end": "2619000"
  },
  {
    "text": "that geo DNS worked for us is we had this hand-tuned static policy where we mapped a particular geography to a",
    "start": "2619440",
    "end": "2625829"
  },
  {
    "text": "region in this particular case we achieved better balance by mapping or Wisconsin to us West to now geo DNS is",
    "start": "2625829",
    "end": "2634199"
  },
  {
    "text": "interesting when you really start to dig in and figure out how it works from a technical perspective fundamentally it's",
    "start": "2634199",
    "end": "2640650"
  },
  {
    "text": "an authoritative nameserver and it gets a dns request it looks up the source IP in this thing called the geo database",
    "start": "2640650",
    "end": "2645930"
  },
  {
    "text": "and then it derives the geography from where that request came in and then it has to look at our geo steering policy",
    "start": "2645930",
    "end": "2653789"
  },
  {
    "text": "map that we gave them and and figure out how it should resolve our particular dns request for us you know Donovan",
    "start": "2653789",
    "end": "2660690"
  },
  {
    "text": "fix this you know I think what we need to do is be more granular and how we have the ability to control where you",
    "start": "2660690",
    "end": "2666720"
  },
  {
    "text": "know what prefix goes where so why don't we just cut out that geo and we just build a prefix map based on those",
    "start": "2666720",
    "end": "2672089"
  },
  {
    "text": "prefixes directly yeah absolutely so this is this is where we're trending right is where we're exploring this idea",
    "start": "2672089",
    "end": "2678510"
  },
  {
    "text": "of if we just cut out the geo layer and instead just do everything based on prefix we could in theory get much more",
    "start": "2678510",
    "end": "2686160"
  },
  {
    "start": "2682000",
    "end": "2682000"
  },
  {
    "text": "granular on what we're trying to accomplish here with our dns game so so now instead of a geography we have IP",
    "start": "2686160",
    "end": "2693359"
  },
  {
    "text": "networks so we're sending an IP network to a particular location and one of the",
    "start": "2693359",
    "end": "2699240"
  },
  {
    "text": "other things that we thought of when we're going through this process is that you know every every so often we",
    "start": "2699240",
    "end": "2704280"
  },
  {
    "text": "actually do regional failures proactively to show to prove to ourselves that we can in fact sustain",
    "start": "2704280",
    "end": "2710579"
  },
  {
    "text": "any region going down we call these Kong exercises so whenever whenever we run in",
    "start": "2710579",
    "end": "2715950"
  },
  {
    "text": "a Kong exercise will completely take down a native es region and will serve everything from two regions and in those",
    "start": "2715950",
    "end": "2721230"
  },
  {
    "text": "scenarios we actually are adding latency to customers requests that may be going from an optimal region to a slightly",
    "start": "2721230",
    "end": "2727800"
  },
  {
    "text": "more latent region and what we've learned is that these customers actually don't notice a difference it's",
    "start": "2727800",
    "end": "2733109"
  },
  {
    "text": "imperceivable to them they have no no impact to their experience and so we came up with this idea of there's a",
    "start": "2733109",
    "end": "2739500"
  },
  {
    "text": "threshold where we can actually add a little bit of latency to our users request and it's in perceivable to them",
    "start": "2739500",
    "end": "2745770"
  },
  {
    "text": "we call an imp receivable impact and so in this particular example where we're",
    "start": "2745770",
    "end": "2751020"
  },
  {
    "text": "using 100 milliseconds as example and if we in theory were to add have this delta",
    "start": "2751020",
    "end": "2758069"
  },
  {
    "text": "where we can add a little you have a little bit of budget to a particular users request it really opens up the",
    "start": "2758069",
    "end": "2763710"
  },
  {
    "text": "world in terms of options for steering so now the prefix in yellow they have sufficient network connectivity they can",
    "start": "2763710",
    "end": "2769920"
  },
  {
    "text": "really be served from any region that we operate in and the prefix in red is similar we're not every region but",
    "start": "2769920",
    "end": "2775650"
  },
  {
    "text": "there's two regions that really stick out where they should be steered - and the user in blue is similar but the two",
    "start": "2775650",
    "end": "2781290"
  },
  {
    "text": "different regions and so at this point we've essentially turned DNS Styrian into a big data problem we have",
    "start": "2781290",
    "end": "2787410"
  },
  {
    "text": "every prefix on the Internet and tons of data points and we're trying to figure out what is the optimal steering policy",
    "start": "2787410",
    "end": "2792900"
  },
  {
    "text": "to optimize for our cost availability risk as well as latency so we went ahead",
    "start": "2792900",
    "end": "2799319"
  },
  {
    "text": "and we actually probe this out using the same real user measurements that Joel was mentioning earlier and this is what we ended up with now you can see that",
    "start": "2799319",
    "end": "2806400"
  },
  {
    "text": "we're getting much closer to that perfect balance I don't think we'll ever be able to achieve it but you can see",
    "start": "2806400",
    "end": "2811410"
  },
  {
    "text": "we've reduced our cost driver and we're getting really close to that perfect balance now if we map out geo steering",
    "start": "2811410",
    "end": "2819240"
  },
  {
    "text": "on a map of North America this is kind of what we ended up with we can see clear geographic boundaries where for",
    "start": "2819240",
    "end": "2825780"
  },
  {
    "text": "example Mexico is being steered to us east one in white and the vast majority of the United States is going to us less",
    "start": "2825780",
    "end": "2832109"
  },
  {
    "text": "two in red now if we take the same map and we plot our prefix steering it becomes way crazy right there's no",
    "start": "2832109",
    "end": "2838589"
  },
  {
    "text": "geographic boundaries being observed here and in fact we see another color we see we start to see blue and this is",
    "start": "2838589",
    "end": "2844020"
  },
  {
    "text": "representative of customers in North America that have sufficient network connectivity that will notice no impact",
    "start": "2844020",
    "end": "2849900"
  },
  {
    "text": "to their it will have no impact to their experience if we were to in fact steer them to you West one via DNS so now",
    "start": "2849900",
    "end": "2859230"
  },
  {
    "text": "we're at a decision point we haven't made this decision we're still exploring it and we want to figure out what we can",
    "start": "2859230",
    "end": "2865289"
  },
  {
    "text": "do with this data we would love to be in a situation where we could simply provide this type of data set to route",
    "start": "2865289",
    "end": "2870960"
  },
  {
    "text": "53 and have them operate the authoritative nameservers and have the",
    "start": "2870960",
    "end": "2876089"
  },
  {
    "text": "contract the data that we sent to them such that they would respond to our DNS",
    "start": "2876089",
    "end": "2881190"
  },
  {
    "text": "requests based on what we provide with this data if these decisions are interesting to you you know we would",
    "start": "2881190",
    "end": "2886740"
  },
  {
    "text": "love to talk to you we love talking to companies about just about anything our hearts where we're nerds or geeks and if",
    "start": "2886740",
    "end": "2893039"
  },
  {
    "text": "if these decisions are interesting to you again come talk to us you know we have openings on our team and we would",
    "start": "2893039",
    "end": "2898410"
  },
  {
    "text": "love to add more stunning colleagues as well thanks everyone for joining us and hearing a little bit about what we deal",
    "start": "2898410",
    "end": "2904559"
  },
  {
    "text": "with on a day to day basis on the cloud network engineering team you know thanks for listening to our story and we do",
    "start": "2904559",
    "end": "2911220"
  },
  {
    "text": "have an expo booth in the expo hall so unfortunately it's not open right after this but",
    "start": "2911220",
    "end": "2916720"
  },
  {
    "text": "we'll be there throughout the week so if you want to stop by come and talk to us our contacts up there and if you guys",
    "start": "2916720",
    "end": "2922270"
  },
  {
    "text": "have any questions we can answer some questions over here we have a few minutes before the next session but thanks everyone for joining please make",
    "start": "2922270",
    "end": "2928750"
  },
  {
    "text": "sure to rate us thanks everybody",
    "start": "2928750",
    "end": "2933810"
  }
]