[
  {
    "text": "- [Instructor] Hello, everyone.",
    "start": "2250",
    "end": "3150"
  },
  {
    "text": "Today, I'm going to give\nyou a brief overview",
    "start": "3150",
    "end": "5400"
  },
  {
    "text": "of Online Certificate\nStatus Protocol stapling,",
    "start": "5400",
    "end": "8100"
  },
  {
    "text": "or server certificates, in AWS IoT Core.",
    "start": "8100",
    "end": "11313"
  },
  {
    "text": "AWS IoT Core, a managed cloud service",
    "start": "12237",
    "end": "15120"
  },
  {
    "text": "that lets customers securely\nconnect internet of things,",
    "start": "15120",
    "end": "18090"
  },
  {
    "text": "or IoT, devices to the\ncloud and management scale,",
    "start": "18090",
    "end": "21750"
  },
  {
    "text": "supports Online Certificate\nStatus Protocol, or OCSP,",
    "start": "21750",
    "end": "25247"
  },
  {
    "text": "stapling for server certificates.",
    "start": "25247",
    "end": "27543"
  },
  {
    "text": "This security feature adds an\nextra layer of verification",
    "start": "28830",
    "end": "32040"
  },
  {
    "text": "to check the validity\nand revocation status",
    "start": "32040",
    "end": "34230"
  },
  {
    "text": "of your custom domain server certificate",
    "start": "34230",
    "end": "36480"
  },
  {
    "text": "in a Transport Layer\nSecurity, or TLS, handshake.",
    "start": "36480",
    "end": "40323"
  },
  {
    "text": "When your device or other client attempts",
    "start": "41790",
    "end": "43470"
  },
  {
    "text": "to connect to AWS IoT Core,\nthe AWS IoT Core server",
    "start": "43470",
    "end": "46937"
  },
  {
    "text": "will send an X.509 certificate",
    "start": "46937",
    "end": "50490"
  },
  {
    "text": "that your device uses to\nauthenticate the server.",
    "start": "50490",
    "end": "53610"
  },
  {
    "text": "Authentication takes\nplace at the TLS layer",
    "start": "53610",
    "end": "56730"
  },
  {
    "text": "through validation of\nthe certificate chain.",
    "start": "56730",
    "end": "59670"
  },
  {
    "text": "This is the same method\nused by your browser",
    "start": "59670",
    "end": "62309"
  },
  {
    "text": "when you visit an HTTPS URL.",
    "start": "62310",
    "end": "64713"
  },
  {
    "text": "One way to check if a certificate\nis valid is by using OCSP.",
    "start": "66030",
    "end": "70590"
  },
  {
    "text": "It allows real-time validation\nof SSL/TLS certificates",
    "start": "70590",
    "end": "74789"
  },
  {
    "text": "during the secure handshake process.",
    "start": "74790",
    "end": "77640"
  },
  {
    "text": "It checks if the\ncertificate hasn't expired",
    "start": "77640",
    "end": "80130"
  },
  {
    "text": "or been revoked by the\nissuing certificate authority",
    "start": "80130",
    "end": "83189"
  },
  {
    "text": "since it was issued.",
    "start": "83190",
    "end": "85170"
  },
  {
    "text": "OCSP is more efficient\nand scalable compared",
    "start": "85170",
    "end": "87840"
  },
  {
    "text": "to traditional certificate\nrevocation lists, or CRLs.",
    "start": "87840",
    "end": "92280"
  },
  {
    "text": "OCSP responses are smaller in size,",
    "start": "92280",
    "end": "94979"
  },
  {
    "text": "making them suitable for large\nprivate key infrastructures,",
    "start": "94980",
    "end": "97736"
  },
  {
    "text": "or PKIs, with many certificates.",
    "start": "97736",
    "end": "100773"
  },
  {
    "text": "There are two main ways OCSP can be used,",
    "start": "101940",
    "end": "104490"
  },
  {
    "text": "one, client-side OCSP.",
    "start": "104490",
    "end": "106950"
  },
  {
    "text": "In this mode, during the TLS handshake,",
    "start": "106950",
    "end": "109590"
  },
  {
    "text": "the client contacts an OCSP responder",
    "start": "109590",
    "end": "112259"
  },
  {
    "text": "to verify the revocation status\nof the server certificate.",
    "start": "112260",
    "end": "115730"
  },
  {
    "text": "An OCSP responder, also\nknown as OCSP server,",
    "start": "115730",
    "end": "119490"
  },
  {
    "text": "receives and responds to OCSP requests",
    "start": "119490",
    "end": "122490"
  },
  {
    "text": "from clients that seek to\nverify the revocation status",
    "start": "122490",
    "end": "124793"
  },
  {
    "text": "of certificates.",
    "start": "124793",
    "end": "126183"
  },
  {
    "text": "The second option, server-side\nOCSP or OCSP stapling,",
    "start": "127980",
    "end": "132570"
  },
  {
    "text": "here, the server is\nenabled to make the request",
    "start": "132570",
    "end": "134730"
  },
  {
    "text": "to the OCSP responder.",
    "start": "134730",
    "end": "136440"
  },
  {
    "text": "It then staples or\nattaches the OCSP response",
    "start": "136440",
    "end": "139790"
  },
  {
    "text": "to the certificate and\nsends it to the client",
    "start": "139790",
    "end": "142230"
  },
  {
    "text": "during the TLS handshake.",
    "start": "142230",
    "end": "143642"
  },
  {
    "text": "There are a few advantages",
    "start": "145740",
    "end": "146820"
  },
  {
    "text": "of using server certificate OCSP stapling",
    "start": "146820",
    "end": "149670"
  },
  {
    "text": "compared to client-side OCSP checks.",
    "start": "149670",
    "end": "152193"
  },
  {
    "text": "Without OCSP stapling, client\ndevices can expose information",
    "start": "153570",
    "end": "157143"
  },
  {
    "text": "to third-party OCSP responders",
    "start": "157143",
    "end": "159930"
  },
  {
    "text": "when checking certificate\nor revocation status,",
    "start": "159930",
    "end": "162840"
  },
  {
    "text": "potentially compromising user privacy.",
    "start": "162840",
    "end": "165989"
  },
  {
    "text": "OCSP stapling mitigates this",
    "start": "165990",
    "end": "167517"
  },
  {
    "text": "by having the server\nobtain the OCSP response",
    "start": "167517",
    "end": "171360"
  },
  {
    "text": "and deliver it directly to the client.",
    "start": "171360",
    "end": "173283"
  },
  {
    "text": "It also can improve reliability,",
    "start": "174510",
    "end": "176099"
  },
  {
    "text": "as a server periodically fetches\nand caches OCSP responses,",
    "start": "176100",
    "end": "180420"
  },
  {
    "text": "reducing reliance on real-time\nOCSP responder availability.",
    "start": "180420",
    "end": "184533"
  },
  {
    "text": "Additionally, OCSP stapling\noffloads the burden",
    "start": "185880",
    "end": "188841"
  },
  {
    "text": "of responding to OCSP requests",
    "start": "188841",
    "end": "190980"
  },
  {
    "text": "from responders to the server,\ndistributing load more evenly",
    "start": "190980",
    "end": "195420"
  },
  {
    "text": "and making certificate validation",
    "start": "195420",
    "end": "197283"
  },
  {
    "text": "more efficient and scalable.",
    "start": "197283",
    "end": "200130"
  },
  {
    "text": "Finally, it reduces latency\nby attaching the OCSP response",
    "start": "200130",
    "end": "204930"
  },
  {
    "text": "with the server certificate\nduring the TLS handshake",
    "start": "204930",
    "end": "207930"
  },
  {
    "text": "instead of the client querying\nthe OCSP servers separately.",
    "start": "207930",
    "end": "211952"
  },
  {
    "text": "How does OCSP stapling\nwork in AWS IoT Core?",
    "start": "213330",
    "end": "216543"
  },
  {
    "text": "With OCSP stapling enabled\nfor your custom domain",
    "start": "217650",
    "end": "221040"
  },
  {
    "text": "in AWS IoT Core,",
    "start": "221040",
    "end": "223019"
  },
  {
    "text": "the service calls an\nOCSP responder every hour",
    "start": "223020",
    "end": "226050"
  },
  {
    "text": "to get the certificate's\nrevocation status.",
    "start": "226050",
    "end": "229080"
  },
  {
    "text": "It then caches the latest\nvalid OCSP response.",
    "start": "229080",
    "end": "233430"
  },
  {
    "text": "During a TLS handshake,",
    "start": "233430",
    "end": "234719"
  },
  {
    "text": "AWS IoT Core retrieves\nthis cached response",
    "start": "234720",
    "end": "237025"
  },
  {
    "text": "and includes it along with\nthe server certificate",
    "start": "237025",
    "end": "239849"
  },
  {
    "text": "sent to the client device.",
    "start": "239850",
    "end": "242100"
  },
  {
    "text": "The device can then validate\nthe certificate status",
    "start": "242100",
    "end": "245610"
  },
  {
    "text": "using the stapled OCSP response.",
    "start": "245610",
    "end": "248043"
  },
  {
    "text": "Let's look at the step-by-step workflow.",
    "start": "249120",
    "end": "251400"
  },
  {
    "text": "First, the device needs to be\nregistered with custom domains",
    "start": "251400",
    "end": "255150"
  },
  {
    "text": "with OCSP stapling enabled.",
    "start": "255150",
    "end": "257342"
  },
  {
    "text": "Two, AWS IoT Core calls\nOCSP responder every hour",
    "start": "258900",
    "end": "263639"
  },
  {
    "text": "to get the certificate status.",
    "start": "263640",
    "end": "266220"
  },
  {
    "text": "Three, the OCSP responder\nreceives the request,",
    "start": "266220",
    "end": "269820"
  },
  {
    "text": "sends the latest OCSP response,",
    "start": "269820",
    "end": "272460"
  },
  {
    "text": "and the server stores\nthe cached OCSP response.",
    "start": "272460",
    "end": "275432"
  },
  {
    "text": "Four, the device sends\na client hello message",
    "start": "276750",
    "end": "280200"
  },
  {
    "text": "to initiate the TLS\nhandshake with AWS IoT Core.",
    "start": "280200",
    "end": "284163"
  },
  {
    "text": "Five, AWS IoT Core gets\nthe latest OCSP response",
    "start": "285180",
    "end": "288298"
  },
  {
    "text": "from the server cache.",
    "start": "288298",
    "end": "290730"
  },
  {
    "text": "Six, the server sends\nthe server hello message",
    "start": "290730",
    "end": "293520"
  },
  {
    "text": "to the device.",
    "start": "293520",
    "end": "294690"
  },
  {
    "text": "The server also sends\nthe server certificate",
    "start": "294690",
    "end": "296356"
  },
  {
    "text": "and the certificate status to the client.",
    "start": "296356",
    "end": "299490"
  },
  {
    "text": "Seven, the device validates\nthe OCSP server status,",
    "start": "299490",
    "end": "303599"
  },
  {
    "text": "and finally, eight, the\nTLS handshake is completed.",
    "start": "303600",
    "end": "306753"
  },
  {
    "text": "Let's go over the steps on\nhow to enable OCSP stapling.",
    "start": "309210",
    "end": "313203"
  },
  {
    "text": "To enable this feature in AWS IoT Core,",
    "start": "314160",
    "end": "317280"
  },
  {
    "text": "you must create a domain\nconfiguration for a custom domain",
    "start": "317280",
    "end": "320880"
  },
  {
    "text": "or update an existing\ncustom domain configuration.",
    "start": "320880",
    "end": "323823"
  },
  {
    "text": "This can be done using AWS IoT console",
    "start": "324810",
    "end": "327480"
  },
  {
    "text": "or command line interface.",
    "start": "327480",
    "end": "329490"
  },
  {
    "text": "I'll show you how to do\nthis from the console.",
    "start": "329490",
    "end": "331983"
  },
  {
    "text": "From the AWS console,\nnavigate to AWS IoT Core.",
    "start": "334770",
    "end": "338253"
  },
  {
    "text": "Choose settings from the\nleft navigation menu,",
    "start": "344310",
    "end": "347160"
  },
  {
    "text": "then choose create domain configuration",
    "start": "347160",
    "end": "349800"
  },
  {
    "text": "or an existing domain\nconfiguration for a custom domain.",
    "start": "349800",
    "end": "352599"
  },
  {
    "text": "If you choose to create a\nnew domain configuration",
    "start": "353880",
    "end": "356190"
  },
  {
    "text": "from the previous step,",
    "start": "356190",
    "end": "357750"
  },
  {
    "text": "you will see the create\ndomain configuration page.",
    "start": "357750",
    "end": "361050"
  },
  {
    "text": "In the domain configuration\nproperty section,",
    "start": "361050",
    "end": "364379"
  },
  {
    "text": "choose custom domain.",
    "start": "364380",
    "end": "366240"
  },
  {
    "text": "Enter the information to\ncreate a domain configuration.",
    "start": "366240",
    "end": "369660"
  },
  {
    "text": "If you choose to update an\nexisting domain configuration",
    "start": "369660",
    "end": "372151"
  },
  {
    "text": "for a custom domain,",
    "start": "372151",
    "end": "374130"
  },
  {
    "text": "you will see the domain\nconfiguration details page.",
    "start": "374130",
    "end": "376770"
  },
  {
    "text": "Choose edit.",
    "start": "376770",
    "end": "377603"
  },
  {
    "text": "To enable OCSP server stapling,",
    "start": "378870",
    "end": "381300"
  },
  {
    "text": "choose enable server\ncertificate OCSP stapling",
    "start": "381300",
    "end": "384120"
  },
  {
    "text": "in the server certificate\nconfiguration subsection.",
    "start": "384120",
    "end": "387180"
  },
  {
    "text": "Choose create domain configuration",
    "start": "387180",
    "end": "389520"
  },
  {
    "text": "or update domain configuration.",
    "start": "389520",
    "end": "391923"
  },
  {
    "text": "AWS IoT Core emits retrieve\nOCSP staple data success metric",
    "start": "393125",
    "end": "398125"
  },
  {
    "text": "and retrieve OCSP staple data\nlog entries to CloudWatch.",
    "start": "399030",
    "end": "404030"
  },
  {
    "text": "The metric and the log entries\ncan help you detect issues",
    "start": "404100",
    "end": "406958"
  },
  {
    "text": "related to retrieving OCSP responses.",
    "start": "406958",
    "end": "410223"
  },
  {
    "text": "To recap, online certificate\nstatus protocol, or OCSP,",
    "start": "412590",
    "end": "417360"
  },
  {
    "text": "is used to check the\ncertificate revocation status",
    "start": "417360",
    "end": "420479"
  },
  {
    "text": "during the Transport\nLayer Security handshake.",
    "start": "420480",
    "end": "423517"
  },
  {
    "text": "AWS IoT Core's OCSP stapling capability",
    "start": "423517",
    "end": "426540"
  },
  {
    "text": "enhances security for your custom domains",
    "start": "426540",
    "end": "429570"
  },
  {
    "text": "by continuously verifying\nserver certificate validity.",
    "start": "429570",
    "end": "433353"
  },
  {
    "text": "It improves privacy,\nreliability, scalability,",
    "start": "434190",
    "end": "438120"
  },
  {
    "text": "and reduces latency compared",
    "start": "438120",
    "end": "440460"
  },
  {
    "text": "to traditional client-side OCSP checks.",
    "start": "440460",
    "end": "442863"
  },
  {
    "text": "To start using this feature,\nsimply enable OCSP stapling",
    "start": "443910",
    "end": "448260"
  },
  {
    "text": "when creating or editing\na domain configuration",
    "start": "448260",
    "end": "450460"
  },
  {
    "text": "for your custom domain\nin the AWS IoT Console",
    "start": "450460",
    "end": "454830"
  },
  {
    "text": "or through the CLI.",
    "start": "454830",
    "end": "456302"
  },
  {
    "text": "To learn more about this feature,",
    "start": "457140",
    "end": "458760"
  },
  {
    "text": "refer to AWS IoT Core developer guide.",
    "start": "458760",
    "end": "462120"
  },
  {
    "text": "Useful links are provided in description.",
    "start": "462120",
    "end": "464820"
  },
  {
    "text": "Thanks for watching.",
    "start": "464820",
    "end": "465820"
  }
]