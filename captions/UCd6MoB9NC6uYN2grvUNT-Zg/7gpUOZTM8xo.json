[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hi I am Paris a senior technical account",
    "start": "8200",
    "end": "10400"
  },
  {
    "text": "manager here at the AWS office in",
    "start": "10400",
    "end": "12480"
  },
  {
    "text": "Northern Virginia today I going to show",
    "start": "12480",
    "end": "14920"
  },
  {
    "text": "how to pass application load balancer",
    "start": "14920",
    "end": "16760"
  },
  {
    "text": "checks for Amazon elastic container",
    "start": "16760",
    "end": "18680"
  },
  {
    "text": "service task that are running using the",
    "start": "18680",
    "end": "20920"
  },
  {
    "text": "Amazon elastic computer cloud launch",
    "start": "20920",
    "end": "23160"
  },
  {
    "text": "type let's get started there are",
    "start": "23160",
    "end": "26080"
  },
  {
    "text": "different reasons ALB health checks can",
    "start": "26080",
    "end": "28480"
  },
  {
    "text": "fail health checks can fail for one of",
    "start": "28480",
    "end": "30880"
  },
  {
    "text": "the following reasons scenario one the",
    "start": "30880",
    "end": "33960"
  },
  {
    "text": "connectivity between the ALB and Amazon",
    "start": "33960",
    "end": "36640"
  },
  {
    "text": "eest task is broken scenario two the",
    "start": "36640",
    "end": "40120"
  },
  {
    "text": "health check settings for the Target",
    "start": "40120",
    "end": "41840"
  },
  {
    "text": "groups are incorrect scenario three the",
    "start": "41840",
    "end": "45680"
  },
  {
    "text": "application in the container is down",
    "start": "45680",
    "end": "48039"
  },
  {
    "text": "erroring out or",
    "start": "48039",
    "end": "49920"
  },
  {
    "text": "misconfigured scenario four the",
    "start": "49920",
    "end": "52640"
  },
  {
    "text": "container instance is unhealthy let's",
    "start": "52640",
    "end": "55320"
  },
  {
    "text": "take one scenario at a",
    "start": "55320",
    "end": "57399"
  },
  {
    "text": "time scenario one the connect activ ity",
    "start": "57399",
    "end": "60440"
  },
  {
    "start": "58000",
    "end": "273000"
  },
  {
    "text": "between the application load balancer",
    "start": "60440",
    "end": "62440"
  },
  {
    "text": "and ECS task is broken first confirm",
    "start": "62440",
    "end": "65799"
  },
  {
    "text": "that the security group associated with",
    "start": "65799",
    "end": "68119"
  },
  {
    "text": "your load balancer allows erest traffic",
    "start": "68119",
    "end": "71240"
  },
  {
    "text": "to The Container instances or task",
    "start": "71240",
    "end": "73920"
  },
  {
    "text": "elastic network interface on the",
    "start": "73920",
    "end": "76119"
  },
  {
    "text": "registered Port go to the ECS service by",
    "start": "76119",
    "end": "79320"
  },
  {
    "text": "entering ECS in the search",
    "start": "79320",
    "end": "82880"
  },
  {
    "text": "bar go to your ECS",
    "start": "82920",
    "end": "86799"
  },
  {
    "text": "cluster choose the service that you are",
    "start": "86799",
    "end": "89560"
  },
  {
    "text": "TR",
    "start": "89560",
    "end": "91600"
  },
  {
    "text": "shooting in the status panel click view",
    "start": "91600",
    "end": "94880"
  },
  {
    "text": "load",
    "start": "94880",
    "end": "97079"
  },
  {
    "text": "balancer in the tab panel choose",
    "start": "97079",
    "end": "101200"
  },
  {
    "text": "security then choose the security group",
    "start": "101200",
    "end": "105719"
  },
  {
    "text": "ID in the security group page choose the",
    "start": "105719",
    "end": "109360"
  },
  {
    "text": "outbound",
    "start": "109360",
    "end": "111000"
  },
  {
    "text": "rules verify that you have the eress",
    "start": "111000",
    "end": "114439"
  },
  {
    "text": "traffic allowed on the right destination",
    "start": "114439",
    "end": "116960"
  },
  {
    "text": "and the",
    "start": "116960",
    "end": "118280"
  },
  {
    "text": "port next let's verify that the security",
    "start": "118280",
    "end": "121920"
  },
  {
    "text": "group of your container or task elastic",
    "start": "121920",
    "end": "125039"
  },
  {
    "text": "network interface allows incress traffic",
    "start": "125039",
    "end": "128360"
  },
  {
    "text": "from the load",
    "start": "128360",
    "end": "129679"
  },
  {
    "text": "balancer go to the ECS service by",
    "start": "129679",
    "end": "132480"
  },
  {
    "text": "entering ECS in the search",
    "start": "132480",
    "end": "136480"
  },
  {
    "text": "bar go to your ECS",
    "start": "136959",
    "end": "140760"
  },
  {
    "text": "cluster go to the service that you are",
    "start": "140760",
    "end": "145560"
  },
  {
    "text": "troubleshooting choose",
    "start": "145920",
    "end": "148760"
  },
  {
    "text": "networking",
    "start": "148760",
    "end": "150560"
  },
  {
    "text": "choose the security",
    "start": "150560",
    "end": "152879"
  },
  {
    "text": "group in the security group page check",
    "start": "152879",
    "end": "156239"
  },
  {
    "text": "the inbound",
    "start": "156239",
    "end": "158920"
  },
  {
    "text": "rules verify that the inbound traffic is",
    "start": "158920",
    "end": "162040"
  },
  {
    "text": "allowed from the right Source our",
    "start": "162040",
    "end": "164120"
  },
  {
    "text": "application load balancer and the",
    "start": "164120",
    "end": "166200"
  },
  {
    "text": "expected Port another factor that can",
    "start": "166200",
    "end": "169640"
  },
  {
    "text": "affect the connectivity is when your",
    "start": "169640",
    "end": "172040"
  },
  {
    "text": "load balancer and container or ECS task",
    "start": "172040",
    "end": "176760"
  },
  {
    "text": "elastic network interface are in",
    "start": "176760",
    "end": "179159"
  },
  {
    "text": "different availability zones in the AWS",
    "start": "179159",
    "end": "182680"
  },
  {
    "text": "PPC network mode to resolve this let's",
    "start": "182680",
    "end": "186280"
  },
  {
    "text": "verify the A's where our container",
    "start": "186280",
    "end": "189799"
  },
  {
    "text": "instances are deployed go to the ec2",
    "start": "189799",
    "end": "193319"
  },
  {
    "text": "console by entering ec2 in the search",
    "start": "193319",
    "end": "198440"
  },
  {
    "text": "bar in the navigation pan under",
    "start": "199640",
    "end": "202760"
  },
  {
    "text": "autoscaling choose autoscaling",
    "start": "202760",
    "end": "207159"
  },
  {
    "text": "groups select the auto scaling group",
    "start": "207239",
    "end": "209760"
  },
  {
    "text": "group associated with your",
    "start": "209760",
    "end": "212760"
  },
  {
    "text": "cluster go to the details tab under",
    "start": "212760",
    "end": "215360"
  },
  {
    "text": "Network section and note the list of",
    "start": "215360",
    "end": "218840"
  },
  {
    "text": "a now let's check the AIS for our load",
    "start": "218840",
    "end": "224239"
  },
  {
    "text": "balancers go to the ECS service by",
    "start": "224239",
    "end": "226959"
  },
  {
    "text": "entering ECS in the search",
    "start": "226959",
    "end": "230760"
  },
  {
    "text": "bar go to your ECS",
    "start": "231599",
    "end": "235239"
  },
  {
    "text": "cluster choose the service that you are",
    "start": "235239",
    "end": "238680"
  },
  {
    "text": "troubleshooting in the status panel",
    "start": "238680",
    "end": "241760"
  },
  {
    "text": "click view load",
    "start": "241760",
    "end": "243439"
  },
  {
    "text": "balancer check the list of AES make sure",
    "start": "243439",
    "end": "247680"
  },
  {
    "text": "that they match with the A's that we",
    "start": "247680",
    "end": "250079"
  },
  {
    "text": "noted earlier one last thing we must",
    "start": "250079",
    "end": "253200"
  },
  {
    "text": "verify that the connectivity that is",
    "start": "253200",
    "end": "255280"
  },
  {
    "text": "checking the network access control list",
    "start": "255280",
    "end": "257519"
  },
  {
    "text": "or Knuckles associated with our load",
    "start": "257519",
    "end": "260639"
  },
  {
    "text": "balancer and ECS container instances or",
    "start": "260639",
    "end": "264639"
  },
  {
    "text": "elastic network interface for AWS VPC",
    "start": "264639",
    "end": "268400"
  },
  {
    "text": "Network Mode is configured correctly",
    "start": "268400",
    "end": "271919"
  },
  {
    "text": "scenario two the health check settings",
    "start": "271919",
    "end": "274280"
  },
  {
    "start": "273000",
    "end": "323000"
  },
  {
    "text": "for the Target group is incorrect go to",
    "start": "274280",
    "end": "277400"
  },
  {
    "text": "the E2 console by entering ec2 in search",
    "start": "277400",
    "end": "282440"
  },
  {
    "text": "bar in the navigation pan under load",
    "start": "282440",
    "end": "285960"
  },
  {
    "text": "balancing choose Target",
    "start": "285960",
    "end": "289400"
  },
  {
    "text": "groups select the target group for your",
    "start": "289400",
    "end": "293680"
  },
  {
    "text": "containers check the following on the",
    "start": "293680",
    "end": "296120"
  },
  {
    "text": "health check tab the port and the path",
    "start": "296120",
    "end": "299960"
  },
  {
    "text": "are configured correctly for Port make",
    "start": "299960",
    "end": "303720"
  },
  {
    "text": "sure you use the traffic port or the",
    "start": "303720",
    "end": "306320"
  },
  {
    "text": "dedicated health check Port if you have",
    "start": "306320",
    "end": "308400"
  },
  {
    "text": "configured that the timeout is set",
    "start": "308400",
    "end": "311800"
  },
  {
    "text": "correctly time out must be greater than",
    "start": "311800",
    "end": "314199"
  },
  {
    "text": "the time that your container needs to",
    "start": "314199",
    "end": "316440"
  },
  {
    "text": "return a health check",
    "start": "316440",
    "end": "317470"
  },
  {
    "text": "[Music]",
    "start": "317470",
    "end": "320569"
  },
  {
    "text": "ping scenario three the application in",
    "start": "321240",
    "end": "325080"
  },
  {
    "start": "323000",
    "end": "585000"
  },
  {
    "text": "the container is down erroring out or",
    "start": "325080",
    "end": "328479"
  },
  {
    "text": "misconfigured after you check the",
    "start": "328479",
    "end": "330720"
  },
  {
    "text": "configuration of your target group the",
    "start": "330720",
    "end": "333039"
  },
  {
    "text": "next thing to check is the application",
    "start": "333039",
    "end": "335000"
  },
  {
    "text": "configuration and status to make sure",
    "start": "335000",
    "end": "338319"
  },
  {
    "text": "that it can respond to the health check",
    "start": "338319",
    "end": "340560"
  },
  {
    "text": "pings with the correct response code to",
    "start": "340560",
    "end": "343560"
  },
  {
    "text": "make sure that your container responds",
    "start": "343560",
    "end": "345360"
  },
  {
    "text": "to the health check ping check the CPU",
    "start": "345360",
    "end": "347720"
  },
  {
    "text": "and memory utilization for the ECS",
    "start": "347720",
    "end": "350080"
  },
  {
    "text": "service go to the ECS service by",
    "start": "350080",
    "end": "352639"
  },
  {
    "text": "entering ECS in the search",
    "start": "352639",
    "end": "356560"
  },
  {
    "text": "bar go to your ECS Club",
    "start": "357000",
    "end": "361120"
  },
  {
    "text": "cluster go to the service that you are",
    "start": "361120",
    "end": "365600"
  },
  {
    "text": "trauring under the health and Metric tab",
    "start": "365759",
    "end": "368919"
  },
  {
    "text": "check the CPU utilization and memory",
    "start": "368919",
    "end": "371599"
  },
  {
    "text": "utilization High CPU can cause your",
    "start": "371599",
    "end": "374639"
  },
  {
    "text": "application to be unresponsive and cause",
    "start": "374639",
    "end": "377639"
  },
  {
    "text": "503 error or timeout make sure that you",
    "start": "377639",
    "end": "381360"
  },
  {
    "text": "have some grace period after the task is",
    "start": "381360",
    "end": "384440"
  },
  {
    "text": "instantiated this grace period allows",
    "start": "384440",
    "end": "386840"
  },
  {
    "text": "the easiest task to have time after",
    "start": "386840",
    "end": "389800"
  },
  {
    "text": "instantiation to register with the load",
    "start": "389800",
    "end": "392520"
  },
  {
    "text": "balancer go to the ec2 console by",
    "start": "392520",
    "end": "395639"
  },
  {
    "text": "entering ec2 in the search",
    "start": "395639",
    "end": "398479"
  },
  {
    "text": "bar in the navigation pan under",
    "start": "398479",
    "end": "402120"
  },
  {
    "text": "autoscaling choose autoscaling groups",
    "start": "402120",
    "end": "405960"
  },
  {
    "text": "select the autoscaling group associated",
    "start": "405960",
    "end": "408479"
  },
  {
    "text": "with your",
    "start": "408479",
    "end": "409560"
  },
  {
    "text": "cluster under health",
    "start": "409560",
    "end": "413280"
  },
  {
    "text": "checks choose edit adjust the grace",
    "start": "413280",
    "end": "417319"
  },
  {
    "text": "period to allow enough time for your",
    "start": "417319",
    "end": "419360"
  },
  {
    "text": "container to instantiate before health",
    "start": "419360",
    "end": "421840"
  },
  {
    "text": "checks can be",
    "start": "421840",
    "end": "423520"
  },
  {
    "text": "performed if all this is correct then",
    "start": "423520",
    "end": "425960"
  },
  {
    "text": "check the application logs to see if",
    "start": "425960",
    "end": "427879"
  },
  {
    "text": "there are any application errors that",
    "start": "427879",
    "end": "430240"
  },
  {
    "text": "might cause the health checks to fail",
    "start": "430240",
    "end": "432960"
  },
  {
    "text": "next let's make sure that the",
    "start": "432960",
    "end": "434840"
  },
  {
    "text": "application is returning the expected",
    "start": "434840",
    "end": "437199"
  },
  {
    "text": "Response Code to health check by default",
    "start": "437199",
    "end": "440199"
  },
  {
    "text": "this is 200 using SSH connect to your",
    "start": "440199",
    "end": "444039"
  },
  {
    "text": "container",
    "start": "444039",
    "end": "445759"
  },
  {
    "text": "instance install curl if it's not",
    "start": "445759",
    "end": "448520"
  },
  {
    "text": "already installed",
    "start": "448520",
    "end": "450160"
  },
  {
    "text": "note that in my case curl is already",
    "start": "450160",
    "end": "452840"
  },
  {
    "text": "installed find the IP address of the",
    "start": "452840",
    "end": "454919"
  },
  {
    "text": "container if you are using the bridge",
    "start": "454919",
    "end": "457759"
  },
  {
    "text": "Network Mode get the container ID by",
    "start": "457759",
    "end": "461039"
  },
  {
    "text": "running the following",
    "start": "461039",
    "end": "464720"
  },
  {
    "text": "command run the following command to",
    "start": "466199",
    "end": "468479"
  },
  {
    "text": "store IP address in the variable IP addr",
    "start": "468479",
    "end": "471800"
  },
  {
    "text": "be sure to replace 1 2 3 4 5 6 7 8 9",
    "start": "471800",
    "end": "475720"
  },
  {
    "text": "with the actual container",
    "start": "475720",
    "end": "478039"
  },
  {
    "text": "ID if if you are using the AWS VPC",
    "start": "478039",
    "end": "481400"
  },
  {
    "text": "Network Mode then the task IP address",
    "start": "481400",
    "end": "484240"
  },
  {
    "text": "assigned to your elastic network",
    "start": "484240",
    "end": "485960"
  },
  {
    "text": "interface is the IP address if you are",
    "start": "485960",
    "end": "488639"
  },
  {
    "text": "using the host Network Mode use the IP",
    "start": "488639",
    "end": "491400"
  },
  {
    "text": "address of the host that the task is",
    "start": "491400",
    "end": "493960"
  },
  {
    "text": "exposed through I'm using the AWS VPC",
    "start": "493960",
    "end": "497520"
  },
  {
    "text": "mode so to find IP address I'll do this",
    "start": "497520",
    "end": "500919"
  },
  {
    "text": "go to the ECS service by entering ECS in",
    "start": "500919",
    "end": "504759"
  },
  {
    "text": "the search",
    "start": "504759",
    "end": "506800"
  },
  {
    "text": "bar go to the ECS cluster",
    "start": "506800",
    "end": "510080"
  },
  {
    "text": "go to the service that I am",
    "start": "510080",
    "end": "513599"
  },
  {
    "text": "troubleshooting go to the tasks",
    "start": "513599",
    "end": "517159"
  },
  {
    "text": "tab under tasks choose one of the",
    "start": "517159",
    "end": "522560"
  },
  {
    "text": "tasks under the configuration Ani ID",
    "start": "522560",
    "end": "526680"
  },
  {
    "text": "choose the elastic network interface",
    "start": "526680",
    "end": "531000"
  },
  {
    "text": "ID choose the network interface ID",
    "start": "531000",
    "end": "534560"
  },
  {
    "text": "again copy the private ipv4 ID",
    "start": "534560",
    "end": "541200"
  },
  {
    "text": "after you find the IP address run the",
    "start": "541200",
    "end": "543120"
  },
  {
    "text": "Cur command to the health check path the",
    "start": "543120",
    "end": "545519"
  },
  {
    "text": "health check for my container is running",
    "start": "545519",
    "end": "547480"
  },
  {
    "text": "at this IP address at the Port ad and",
    "start": "547480",
    "end": "551200"
  },
  {
    "text": "the path forward slash so for me the",
    "start": "551200",
    "end": "553880"
  },
  {
    "text": "command",
    "start": "553880",
    "end": "554920"
  },
  {
    "text": "is note the response to the curl",
    "start": "554920",
    "end": "558399"
  },
  {
    "text": "command if you get non HTTP error",
    "start": "558399",
    "end": "561320"
  },
  {
    "text": "messages then your application is not",
    "start": "561320",
    "end": "563720"
  },
  {
    "text": "listening to http traffic if you receive",
    "start": "563720",
    "end": "566560"
  },
  {
    "text": "an HTTP code but it is different then",
    "start": "566560",
    "end": "568920"
  },
  {
    "text": "what you have set it up in the mat",
    "start": "568920",
    "end": "571040"
  },
  {
    "text": "settings then your application is not",
    "start": "571040",
    "end": "573560"
  },
  {
    "text": "returning the expected status code and",
    "start": "573560",
    "end": "576399"
  },
  {
    "text": "you must fix that check your target",
    "start": "576399",
    "end": "578399"
  },
  {
    "text": "groups health check settings to find out",
    "start": "578399",
    "end": "580480"
  },
  {
    "text": "the expected success code now let's talk",
    "start": "580480",
    "end": "583560"
  },
  {
    "text": "about the final scenario scenario 4 the",
    "start": "583560",
    "end": "586480"
  },
  {
    "start": "585000",
    "end": "674000"
  },
  {
    "text": "container instance is unhealthy if you",
    "start": "586480",
    "end": "589240"
  },
  {
    "text": "get the following error message from",
    "start": "589240",
    "end": "591079"
  },
  {
    "text": "your ECS service then your container",
    "start": "591079",
    "end": "593440"
  },
  {
    "text": "instance is unhealthy let's verify and",
    "start": "593440",
    "end": "596200"
  },
  {
    "text": "correct this go to the ECT console by",
    "start": "596200",
    "end": "598839"
  },
  {
    "text": "enter entering ec2 ins search",
    "start": "598839",
    "end": "601200"
  },
  {
    "text": "bar in the navigation pan choose",
    "start": "601200",
    "end": "605240"
  },
  {
    "text": "instances check the status of your",
    "start": "605240",
    "end": "607320"
  },
  {
    "text": "container instance if it is in fail",
    "start": "607320",
    "end": "609440"
  },
  {
    "text": "State then try stopping and starting the",
    "start": "609440",
    "end": "613399"
  },
  {
    "text": "instance before we finish note that it",
    "start": "613399",
    "end": "616000"
  },
  {
    "text": "is a best practice to use load balancers",
    "start": "616000",
    "end": "619000"
  },
  {
    "text": "in your",
    "start": "619000",
    "end": "620279"
  },
  {
    "text": "deployment an application load balancer",
    "start": "620279",
    "end": "623079"
  },
  {
    "text": "or ALB offers several useful features",
    "start": "623079",
    "end": "626320"
  },
  {
    "text": "when used with Amazon ECS services each",
    "start": "626320",
    "end": "629720"
  },
  {
    "text": "service can serve traffic from multiple",
    "start": "629720",
    "end": "632040"
  },
  {
    "text": "load balancers and expose multiple load",
    "start": "632040",
    "end": "635279"
  },
  {
    "text": "balance ports by specifying multiple",
    "start": "635279",
    "end": "638040"
  },
  {
    "text": "Target groups albs are supported by task",
    "start": "638040",
    "end": "641320"
  },
  {
    "text": "hosted on both AWS forget and ec2",
    "start": "641320",
    "end": "644560"
  },
  {
    "text": "instances albs allow containers to use",
    "start": "644560",
    "end": "647639"
  },
  {
    "text": "Dynamic host Port mapping so that",
    "start": "647639",
    "end": "650240"
  },
  {
    "text": "multiple tasks from the same service are",
    "start": "650240",
    "end": "652519"
  },
  {
    "text": "allowed per container instance and",
    "start": "652519",
    "end": "655320"
  },
  {
    "text": "finally lb support path-based routing",
    "start": "655320",
    "end": "658040"
  },
  {
    "text": "and priority rules so that multiple",
    "start": "658040",
    "end": "660000"
  },
  {
    "text": "Services can use the same listener port",
    "start": "660000",
    "end": "663000"
  },
  {
    "text": "on a single application load balancer",
    "start": "663000",
    "end": "665920"
  },
  {
    "text": "and now you know how to pass application",
    "start": "665920",
    "end": "668880"
  },
  {
    "text": "load balancer checks for Amazon ECS task",
    "start": "668880",
    "end": "671839"
  },
  {
    "text": "that are running using the E to launch",
    "start": "671839",
    "end": "674079"
  },
  {
    "start": "674000",
    "end": "690000"
  },
  {
    "text": "type thanks for watching and happy cloud",
    "start": "674079",
    "end": "676639"
  },
  {
    "text": "computing from all of us here at",
    "start": "676639",
    "end": "679220"
  },
  {
    "text": "[Music]",
    "start": "679220",
    "end": "680160"
  },
  {
    "text": "[Applause]",
    "start": "680160",
    "end": "681910"
  },
  {
    "text": "[Music]",
    "start": "681910",
    "end": "685079"
  },
  {
    "text": "AWS",
    "start": "687959",
    "end": "690959"
  }
]