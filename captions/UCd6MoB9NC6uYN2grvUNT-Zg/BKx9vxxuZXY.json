[
  {
    "text": "[Music]",
    "start": "0",
    "end": "3159"
  },
  {
    "text": "[Music] my name is Austin Collins I'm an AWS Community hero I left my superhero",
    "start": "5960",
    "end": "12759"
  },
  {
    "text": "costume at home though and today I stand before you in my civilian disguise just a JavaScript developer a devops engineer",
    "start": "12759",
    "end": "20640"
  },
  {
    "text": "and uh the founder of a company called serverless Inc when I first started building apps years ago it was fun uh",
    "start": "20640",
    "end": "27960"
  },
  {
    "text": "until the glamour of building apps faded the glamour of building anything faded and I realize what is really going on",
    "start": "27960",
    "end": "34879"
  },
  {
    "text": "and what is really going on uh I believe is an arms race uh it's a race to write better",
    "start": "34879",
    "end": "42200"
  },
  {
    "text": "software faster we have to ship features stability quality faster and we're all",
    "start": "42200",
    "end": "47680"
  },
  {
    "text": "in the race your company's in the race your weekend project whether you realize it or not is in the",
    "start": "47680",
    "end": "53719"
  },
  {
    "text": "race and it's not a bad thing it's the way it is the way it probably always has been uh but we're spending more money uh",
    "start": "53719",
    "end": "60840"
  },
  {
    "text": "on the tools that help us deliver software faster increasing demand for tools which increases the number of",
    "start": "60840",
    "end": "67600"
  },
  {
    "text": "tools and now there's a whole bunch of freaking tools out there specifically for cloud computing and it's tempting to",
    "start": "67600",
    "end": "74040"
  },
  {
    "text": "get lost uh digging into these tools and they look so fun and I got lost for a",
    "start": "74040",
    "end": "80439"
  },
  {
    "text": "while but at the end of the day I had to deliver an application and keep delivering fast because the arms race is",
    "start": "80439",
    "end": "87079"
  },
  {
    "text": "real and it's happening and over the years I've transformed formed into an extreme uh",
    "start": "87079",
    "end": "92560"
  },
  {
    "text": "pragmatist and tools that introduce complexity overhead or my enemy Simplicity My One True Love and to find",
    "start": "92560",
    "end": "100840"
  },
  {
    "text": "Simplicity I measure the total cost of ownership that's what I look for and this brought me to Lambda which I",
    "start": "100840",
    "end": "108000"
  },
  {
    "text": "believe has the lowest total cost of ownership out of any compute service that there is right",
    "start": "108000",
    "end": "113280"
  },
  {
    "text": "now you simply upload code with a little bit of configuration you've got pay per use pricing which is a revolution in",
    "start": "113280",
    "end": "121079"
  },
  {
    "text": "itself uh manage containers isolation already already all managed for you and the thing scales",
    "start": "121079",
    "end": "127319"
  },
  {
    "text": "automatically uh again lowest total cost of ownership it's the I call it the convenient compute service it's got some",
    "start": "127319",
    "end": "134760"
  },
  {
    "text": "quirks but but I love it and the first thing I wanted to do when Lambda came out was build an entire application on",
    "start": "134760",
    "end": "141160"
  },
  {
    "text": "it and this is what that talk is all about how do we build applications exclusively on Lambda and API Gateway",
    "start": "141160",
    "end": "147120"
  },
  {
    "text": "and take advantage of this this wonderful new techn technology",
    "start": "147120",
    "end": "153040"
  },
  {
    "text": "so uh after Lambda came out I said this is fantastic after API Gateway came out",
    "start": "153040",
    "end": "158360"
  },
  {
    "text": "I said it's the time to start building and I started to refactor an entire application to run exclusively on Lambda",
    "start": "158360",
    "end": "163640"
  },
  {
    "text": "and API Gateway and I ran into a few problems uh Lambda is fantastic but when",
    "start": "163640",
    "end": "169360"
  },
  {
    "text": "you have lots of functions it means managing lots of containers and it ends up being like total Anarchy you have",
    "start": "169360",
    "end": "176319"
  },
  {
    "text": "just basically a bunch of Rowdy containers that need to be coralled somehow I mean I mean you can make your first Lambda function it feels great",
    "start": "176319",
    "end": "181920"
  },
  {
    "text": "your second Lambda function feels great but as soon as you hit 10 20 Lambda functions there needs to be some",
    "start": "181920",
    "end": "187319"
  },
  {
    "text": "structure there and that was missing furthermore if you add on top of that uh multi- regions replicating your lambdas",
    "start": "187319",
    "end": "193440"
  },
  {
    "text": "across regions uh staging your lambdas to have development beta uh production stages bring on multi-developer teams uh",
    "start": "193440",
    "end": "201480"
  },
  {
    "text": "all working off the same groups of lambdas uh add in Resource Management databases file storage rest apis uh code",
    "start": "201480",
    "end": "209159"
  },
  {
    "text": "sharing how how do we do code sharing across functions in lambdas and containers uh local development how is",
    "start": "209159",
    "end": "215080"
  },
  {
    "text": "this how is this done testing security architectural patterns how do we architect our code across this",
    "start": "215080",
    "end": "221519"
  },
  {
    "text": "fragmented new uh architecture and optimization how do we optimize our Lambda functions for faster response",
    "start": "221519",
    "end": "227799"
  },
  {
    "text": "times because these things need to respond to web requests at the end of the day and these are the immediate",
    "start": "227799",
    "end": "233560"
  },
  {
    "text": "problems I ran into within hours of using Lambda for the first time and refactoring a large application to run",
    "start": "233560",
    "end": "238920"
  },
  {
    "text": "exclusively on lamb and this is why I made the framework the",
    "start": "238920",
    "end": "244120"
  },
  {
    "text": "serverless framework I started this project by myself in August 2015 sorry July 2015 it used to be called jaws and",
    "start": "244120",
    "end": "251879"
  },
  {
    "text": "it had a cool uh logo of a shark and stuff and uh I put it up on Hacker News",
    "start": "251879",
    "end": "258320"
  },
  {
    "text": "and I immediately walked away because I expected nothing of it because I thought like everything else on Hacker News we",
    "start": "258320",
    "end": "263400"
  },
  {
    "text": "would just sink straight to the bottom and no one would ever check it out but I came back like a couple hours later and the thing had quickly gotten on the",
    "start": "263400",
    "end": "269280"
  },
  {
    "text": "front page Hacker News number two position hundreds of upvotes lots of comments and it was a little weird all",
    "start": "269280",
    "end": "275680"
  },
  {
    "text": "the comments were positive so something was strange on Hacker News that day and I realized that this thing this project",
    "start": "275680",
    "end": "282680"
  },
  {
    "text": "had struck a nerve uh and a lot of developers were responding to it uh specifically the aspects of it that were",
    "start": "282680",
    "end": "289160"
  },
  {
    "text": "serverless uh All Over The Branding I put this as a serverless application framework you don't have to manage any",
    "start": "289160",
    "end": "294520"
  },
  {
    "text": "servers not to say that servers don't exist uh it's just that the developer doesn't have to think think about them",
    "start": "294520",
    "end": "300320"
  },
  {
    "text": "AWS manages them so that's how this whole thing got started uh the day it went viral on Hacker News I started",
    "start": "300320",
    "end": "306039"
  },
  {
    "text": "working on this full-time uh and it was fantastic and now you know six months",
    "start": "306039",
    "end": "311320"
  },
  {
    "text": "later um there's a lot of there's a lot of Lambda deployment tools out there seems like every day I wake up there's a",
    "start": "311320",
    "end": "316960"
  },
  {
    "text": "new Lambda deployment tool it's written in Python it's written in go um but",
    "start": "316960",
    "end": "322199"
  },
  {
    "text": "there's something I learned the second day after this went viral on Hacker News uh the first day it was fantastic it was",
    "start": "322199",
    "end": "328400"
  },
  {
    "text": "a huge party the second day it was the hangover and all the issues started to come in and all the issues were hey can",
    "start": "328400",
    "end": "334800"
  },
  {
    "text": "you add support for this AWS feature and can you add support for this AWS feature and can you add support for these three",
    "start": "334800",
    "end": "340199"
  },
  {
    "text": "AWS features which then will allow support for this next AWS feature and I realized that what I was making here was",
    "start": "340199",
    "end": "346800"
  },
  {
    "text": "not the serverless framework it's the AWS application framework uh that",
    "start": "346800",
    "end": "352199"
  },
  {
    "text": "happens to be serverless and that means that we were building something that had to support all of aws's vast",
    "start": "352199",
    "end": "358319"
  },
  {
    "text": "functionality and give it order order and structure um in some simple way and",
    "start": "358319",
    "end": "363919"
  },
  {
    "text": "that was a huge challenge so it's been 6 months since I've been working on this",
    "start": "363919",
    "end": "369240"
  },
  {
    "text": "uh we now have raised some money to do this full-time uh we got a team of three full-time people so far uh and we've",
    "start": "369240",
    "end": "375919"
  },
  {
    "text": "come a long way but the point is we're here to make an incredible application framework that covers aws's vast",
    "start": "375919",
    "end": "382360"
  },
  {
    "text": "functionality abstracts it simplifies it and also runs everything on Lambda",
    "start": "382360",
    "end": "388520"
  },
  {
    "text": "everyone on our team we think that Lambda is going to be the focal point of AWS cloud and what that means is in the",
    "start": "388520",
    "end": "394160"
  },
  {
    "text": "future we may all be using Lambda as the compute service for doing anything on AWS and we've designed this framework so",
    "start": "394160",
    "end": "401880"
  },
  {
    "text": "that it interprets AWS from the perspective of Lambda so let's dig into it I'm going to",
    "start": "401880",
    "end": "407960"
  },
  {
    "text": "do a quick demo here here's the GitHub repo uh again this is only six months old but we've skyrocketed to about 7,000",
    "start": "407960",
    "end": "415319"
  },
  {
    "text": "GitHub Stars uh we have lots of Enterprise companies already digging in talking to me about how they could put",
    "start": "415319",
    "end": "420960"
  },
  {
    "text": "this into production which I think is amazing given how early this",
    "start": "420960",
    "end": "426000"
  },
  {
    "text": "is there's our sweet read me",
    "start": "426000",
    "end": "430280"
  },
  {
    "text": "logo anyway this is all a uh node.js uh application uh it takes the form of a",
    "start": "431280",
    "end": "438520"
  },
  {
    "text": "command line interface and to install it you just run npm install",
    "start": "438520",
    "end": "445440"
  },
  {
    "text": "serverless throw in the global flag here",
    "start": "445440",
    "end": "450720"
  },
  {
    "text": "anyway no. JS application you install it via npm it's installed and now you have",
    "start": "452520",
    "end": "458360"
  },
  {
    "text": "serverless commands so I could type in serverless here and it's going to give",
    "start": "458360",
    "end": "463520"
  },
  {
    "text": "me a list of all the things that serverless can do which is quite a lot you can call the",
    "start": "463520",
    "end": "471440"
  },
  {
    "text": "CLI Tool uh by using serverless uh we also have a shorter version which is just SLS and let's create our first",
    "start": "471440",
    "end": "478800"
  },
  {
    "text": "project here all I have to do is type in SLS project",
    "start": "478800",
    "end": "485120"
  },
  {
    "text": "create uh we're going to get some instructions here initializing our first serverless project enter a name for this",
    "start": "485120",
    "end": "490879"
  },
  {
    "text": "project let's call it demo one enter a un universally unique project bucket",
    "start": "490879",
    "end": "496039"
  },
  {
    "text": "name so it so this right now is going to create some scaffolding on our computer it's going to create a uh a file",
    "start": "496039",
    "end": "501560"
  },
  {
    "text": "structure for a serverless application in addition to that it's also going to create a S3 bucket on your AWS account",
    "start": "501560",
    "end": "508599"
  },
  {
    "text": "and in this S3 bucket it's going to store backups of your lamda functions it's going to store backups of your cloud formation templates because this",
    "start": "508599",
    "end": "515599"
  },
  {
    "text": "is the first framework that not only manages your code but your infrastructure uh all in the same",
    "start": "515599",
    "end": "520640"
  },
  {
    "text": "project and uh it's also going to store on that project bucket it's going to store environment variables because",
    "start": "520640",
    "end": "526480"
  },
  {
    "text": "Lambda doesn't have environment variable support yet so we've had to sort of fake it uh until they make",
    "start": "526480",
    "end": "533440"
  },
  {
    "text": "it uh an email for AWS alarms that may or may not be relevant to you",
    "start": "536519",
    "end": "542200"
  },
  {
    "text": "uh and then it's going to ask you to select the first region for your project uh this is a a multi- region uh",
    "start": "542200",
    "end": "547720"
  },
  {
    "text": "framework uh you could have multiple regions in your project and I'll get into that in a bit but let's go with",
    "start": "547720",
    "end": "552880"
  },
  {
    "text": "East one uh if you have an AWS profile already on your computer it'll detect that and it'll ask it'll prompt you to",
    "start": "552880",
    "end": "559360"
  },
  {
    "text": "select which one you want to use these are your credentials uh to the AWS account that uh serverless is going to",
    "start": "559360",
    "end": "565279"
  },
  {
    "text": "access and create stuff for you um if you don't have a profile you can it's going to prompt you and say hey you",
    "start": "565279",
    "end": "570839"
  },
  {
    "text": "don't have any profiles enter in some uh access keys and you can go on AWS create an I am user uh and create uh and get",
    "start": "570839",
    "end": "578760"
  },
  {
    "text": "the access keys for that and plug it in right here so I selected my default profile",
    "start": "578760",
    "end": "586000"
  },
  {
    "text": "serverless has my credentials to the my AWS account and now it's going to do some awesome automation the first is",
    "start": "586000",
    "end": "592760"
  },
  {
    "text": "it's going to create a stage for me so this application framework has the concept of stages built in St is same",
    "start": "592760",
    "end": "599959"
  },
  {
    "text": "thing as environments uh and it's automatically going to create a development stage and in your project",
    "start": "599959",
    "end": "605640"
  },
  {
    "text": "you could have one or infinite stages and each stage can have one or multiple regions so it's going to create a Dev",
    "start": "605640",
    "end": "611839"
  },
  {
    "text": "stage and then a Us East stage and then it goes and creates a project bucket on S3 which is going to store backups of",
    "start": "611839",
    "end": "618680"
  },
  {
    "text": "all my project information and then it's going to do something else that's really interesting again this is the application framework that manages your",
    "start": "618680",
    "end": "625120"
  },
  {
    "text": "code and your infrastructure uh and each St in each stage in each region it's going to create a replication of your",
    "start": "625120",
    "end": "632200"
  },
  {
    "text": "infrastructure uh via cloud formation and it's going to deploy that stuff or you can deploy it whenever you want uh",
    "start": "632200",
    "end": "639040"
  },
  {
    "text": "to that stage and to that region so already with a simple command uh we have",
    "start": "639040",
    "end": "645240"
  },
  {
    "text": "um our first development stage uh we're using uh our F our first region we're creating a project bucket to store",
    "start": "645240",
    "end": "651800"
  },
  {
    "text": "backups for our project and we're deploying our resources and the first resources that server list is going to",
    "start": "651800",
    "end": "657560"
  },
  {
    "text": "create for you is just a simple role that your Lambda functions will all share and use while that's running it",
    "start": "657560",
    "end": "664639"
  },
  {
    "text": "usually takes two or 3 minutes I just want to show off the internal architecture um again this is the AWS",
    "start": "664639",
    "end": "672240"
  },
  {
    "text": "application framework that happens to be serverless and we've spent hundreds of hours trying to make sure that this",
    "start": "672240",
    "end": "679079"
  },
  {
    "text": "architecture here is clean and scalable so that we can grow elegantly to support",
    "start": "679079",
    "end": "684519"
  },
  {
    "text": "all the functionality that AWS offers and we've ripped out the core internals and Rewritten them maybe like I don't",
    "start": "684519",
    "end": "690360"
  },
  {
    "text": "know 20 times or something and the result is pretty straightforward and accessible so if you're interested in",
    "start": "690360",
    "end": "696160"
  },
  {
    "text": "commit contributing to open source this might be a good project for you um if you're already Savvy with JavaScript uh",
    "start": "696160",
    "end": "703399"
  },
  {
    "text": "basically we have a lib folder here and everything that the framework does is",
    "start": "703399",
    "end": "708440"
  },
  {
    "text": "divided into actions so every cool automation that this thing does is uh in",
    "start": "708440",
    "end": "714800"
  },
  {
    "text": "its own action clearly isolated so here's function deploy right here you can create a function uh function",
    "start": "714800",
    "end": "721240"
  },
  {
    "text": "logging if you want to run a function locally everything is in its own file furthermore whenever the framework is",
    "start": "721240",
    "end": "727240"
  },
  {
    "text": "first loaded whenever you write that command in the CLI the your whole project is loaded into memory and any of",
    "start": "727240",
    "end": "733199"
  },
  {
    "text": "the actions can work with those project assets just by using our simple classes we have a class for for all of our",
    "start": "733199",
    "end": "740240"
  },
  {
    "text": "project assets here and each class has a ton of",
    "start": "740240",
    "end": "746560"
  },
  {
    "text": "useful methods so you could easily write some type of",
    "start": "746560",
    "end": "752760"
  },
  {
    "text": "uh extension for this thing um that allows you to work with assets and do",
    "start": "752760",
    "end": "757839"
  },
  {
    "text": "sort of anything you'd like Anyway let's get back to it here so our cloud formation is finished we've created our",
    "start": "757839",
    "end": "763079"
  },
  {
    "text": "initial resources you can see there's a few success messages here uh we successfully deployed our development",
    "start": "763079",
    "end": "769120"
  },
  {
    "text": "resources to us east1 um we created that region we created that stage and the",
    "start": "769120",
    "end": "774519"
  },
  {
    "text": "project is ready to go and open it up",
    "start": "774519",
    "end": "779600"
  },
  {
    "text": "and let's take a look at what a project file looks",
    "start": "779600",
    "end": "783519"
  },
  {
    "text": "like all right this is the scaffolding that serverless has just created uh we don't have much going on here we have a",
    "start": "799360",
    "end": "806440"
  },
  {
    "text": "EnV file.ge ignore file uh pretty straightforward there's a readme that's automatically created for you uh of",
    "start": "806440",
    "end": "813079"
  },
  {
    "text": "interest is the S project. Json which saves our core project configuration",
    "start": "813079",
    "end": "818800"
  },
  {
    "text": "right here the name the version uh author description um also of interest is a meta folder so",
    "start": "818800",
    "end": "827000"
  },
  {
    "text": "as I said the serverless framework has a concept of stages built into it and we store all that stage data in your metap",
    "start": "827000",
    "end": "833320"
  },
  {
    "text": "folder right here and even better we have uh another concept called variables",
    "start": "833320",
    "end": "840680"
  },
  {
    "text": "because in your configuration files it's basically it's really hard to have a whole bunch of configuration for project",
    "start": "840680",
    "end": "846639"
  },
  {
    "text": "assets um that are working across all your stages and the way we make that work is you're able to",
    "start": "846639",
    "end": "853000"
  },
  {
    "text": "specify certain variables for each stage for example here here are some variables",
    "start": "853000",
    "end": "858680"
  },
  {
    "text": "that are automatically created and you could take these variables and put them right in your project configuration files so that when you create project",
    "start": "858680",
    "end": "865519"
  },
  {
    "text": "assets these will work across uh all your stages in your project which is very cool for teams who are",
    "start": "865519",
    "end": "871560"
  },
  {
    "text": "collaborating on this everybody's using the same Lambda functions they're using uh the same cloud formation templates",
    "start": "871560",
    "end": "877560"
  },
  {
    "text": "and you could put variables in there that change depending on the stage that those team members are working",
    "start": "877560",
    "end": "882720"
  },
  {
    "text": "on uh also there's a resources folder here um every resource file here is a",
    "start": "882720",
    "end": "888120"
  },
  {
    "text": "cloud formation template um this the stage that this cloud formation template",
    "start": "888120",
    "end": "893199"
  },
  {
    "text": "is for and the region that is that is for has been saved here and this is what serverless creates out of the box is",
    "start": "893199",
    "end": "899639"
  },
  {
    "text": "just a straightforward IM roll uh with a simple policy that allows",
    "start": "899639",
    "end": "904759"
  },
  {
    "text": "your uh Lambda to do basic tasks if you want to edit uh your core project",
    "start": "904759",
    "end": "911279"
  },
  {
    "text": "resources there's an S resources file right here again it's another cloud formation template uh the difference is",
    "start": "911279",
    "end": "916839"
  },
  {
    "text": "in this one you could use your stage variables um in",
    "start": "916839",
    "end": "922639"
  },
  {
    "text": "here and basically whenever you add something to this cloud formation template there's a command called serverless resources",
    "start": "923680",
    "end": "930160"
  },
  {
    "text": "deploy uh which will deploy it it'll save a copy of the cloud formation file",
    "start": "930160",
    "end": "936480"
  },
  {
    "text": "right to your resources folder here it'll push it up to your project bucket and then it'll go deploy it on cloud formation for",
    "start": "936480",
    "end": "944000"
  },
  {
    "text": "you now this is a fully interactive uh CLI and it does lots of cool stuff out",
    "start": "945360",
    "end": "953040"
  },
  {
    "text": "of the box so I just C in cded into the project file uh the first thing I'll I'll do is just let's just check out the",
    "start": "953040",
    "end": "959040"
  },
  {
    "text": "project we have these uh dashboard commands um and the first I'll show you is Dash summary this shows a simple uh",
    "start": "959040",
    "end": "967240"
  },
  {
    "text": "uh a simple summary of your project we have one stage it's the development stage and it has one region um there's",
    "start": "967240",
    "end": "973880"
  },
  {
    "text": "no components we'll get into that next and then there's a quick summary here at the end so at any time whenever you're working on your project you could just",
    "start": "973880",
    "end": "979839"
  },
  {
    "text": "call this command and and see what's going on we have one other piece of",
    "start": "979839",
    "end": "986360"
  },
  {
    "text": "scaffolding here that you should be aware of um in our project",
    "start": "986360",
    "end": "991880"
  },
  {
    "text": "file uh all the Lambda functions are are kept in in root folders uh in your",
    "start": "992240",
    "end": "997399"
  },
  {
    "text": "project folder uh and these are called components and components Define a runtime not only is this the first",
    "start": "997399",
    "end": "1003399"
  },
  {
    "text": "application framework that controls your code and your infrastructure but we actually have uh support for multiple",
    "start": "1003399",
    "end": "1009360"
  },
  {
    "text": "programming languages and we're working to support all the languages that Lambda supports uh and to organize all your",
    "start": "1009360",
    "end": "1015680"
  },
  {
    "text": "functions uh cleanly by the programming language or by the runtime that they use",
    "start": "1015680",
    "end": "1020800"
  },
  {
    "text": "we have this concept of components which is just a folder in your project that says hey all the L Lambda functions in",
    "start": "1020800",
    "end": "1027880"
  },
  {
    "text": "this folder uh are python or all the Lambda functions in this folder are node so let's create a component real",
    "start": "1027880",
    "end": "1035600"
  },
  {
    "text": "quick and we're going to create a rest API component because we're here to make",
    "start": "1036000",
    "end": "1041240"
  },
  {
    "text": "a uh a web application a backend for a web application and this is going to add",
    "start": "1041240",
    "end": "1047798"
  },
  {
    "text": "some simple scaffold building to the project uh here's our rest API component again it's just a folder in your project",
    "start": "1047799",
    "end": "1054440"
  },
  {
    "text": "uh in here there's a little bit more automation that's done for you uh there's a package.json uh for",
    "start": "1054440",
    "end": "1059640"
  },
  {
    "text": "dependencies that you want if you want to share stuff uh share code across all your Lambda functions in this component",
    "start": "1059640",
    "end": "1065320"
  },
  {
    "text": "um this is how you do it there's also a Liv folder if you want to write some custom code that you want to share across all the functions in your",
    "start": "1065320",
    "end": "1070840"
  },
  {
    "text": "component uh all this stuff is created for you as well as a SC component. Json file and you can see pretty simple",
    "start": "1070840",
    "end": "1077880"
  },
  {
    "text": "here's the name here's the runtime and custom is something else that we'll get into later so the component is",
    "start": "1077880",
    "end": "1085360"
  },
  {
    "text": "created I could check it out right here it's in the dashboard now we have you know our stage our first region that",
    "start": "1085360",
    "end": "1090919"
  },
  {
    "text": "stage and our first component now let's create our first",
    "start": "1090919",
    "end": "1096799"
  },
  {
    "text": "function all right so I we have a simple function create command and in it you just have to specify the component if",
    "start": "1099400",
    "end": "1106000"
  },
  {
    "text": "you want to Nest your functions and subfolders you could do that a lot of people like that in the beginning it used to just be a whole bunch of",
    "start": "1106000",
    "end": "1111880"
  },
  {
    "text": "functions in the same folder and once people hit 70 Lambda functions in their project they said this sucks it's just",
    "start": "1111880",
    "end": "1117200"
  },
  {
    "text": "too it's just too cluttered can we Nest these things in in subfolders and we said yeah that makes sense so by using",
    "start": "1117200",
    "end": "1124280"
  },
  {
    "text": "uh the simple command in specifying a path uh serverless will create a function and Nest it in the subf",
    "start": "1124280",
    "end": "1130960"
  },
  {
    "text": "subfolder that you specify so that's",
    "start": "1130960",
    "end": "1136200"
  },
  {
    "text": "it the function was created if I look at the dash summary again we now have one component our rest API it",
    "start": "1136200",
    "end": "1143559"
  },
  {
    "text": "should say we have one function and one one endpoint right there but the labels are a little",
    "start": "1143559",
    "end": "1150919"
  },
  {
    "text": "off all right so here's our project scaffolding again uh now we have a users folder in our component and in the users",
    "start": "1153080",
    "end": "1160240"
  },
  {
    "text": "folder there's a show uh show folder and in here is our function this is Javascript this is nodejs code for our",
    "start": "1160240",
    "end": "1167320"
  },
  {
    "text": "function uh as as well as an event if you want to run the F the function locally you could do that and if you",
    "start": "1167320",
    "end": "1173720"
  },
  {
    "text": "want to populate it with any data uh you just put it in this event object uh there's also an S function. Json file",
    "start": "1173720",
    "end": "1180880"
  },
  {
    "text": "which specifies your Lambda function configuration and if you're familiar with Lambda um this stuff uh will be",
    "start": "1180880",
    "end": "1188080"
  },
  {
    "text": "familiar to you uh the only thing that we add on extra is that you could easily add endpoints to your Lambda function",
    "start": "1188080",
    "end": "1194600"
  },
  {
    "text": "right here and out of the box we create your first endpoint for you uh we give it a",
    "start": "1194600",
    "end": "1200159"
  },
  {
    "text": "path and a get you could add multiple end points to your Lambda function and furthermore if you want your Lambda",
    "start": "1200159",
    "end": "1205960"
  },
  {
    "text": "function to be triggered by events you could specify them right in here as",
    "start": "1205960",
    "end": "1211440"
  },
  {
    "text": "well so our function was created if you want to run it locally we'll just use serverless function",
    "start": "1213760",
    "end": "1219960"
  },
  {
    "text": "run we'll call it and we just called the function and that's what the function is designed to say it just says hey your",
    "start": "1219960",
    "end": "1226200"
  },
  {
    "text": "serverless function was run successfully pretty",
    "start": "1226200",
    "end": "1230840"
  },
  {
    "text": "straightforward next up we have a separate dashboard for whenever we want to deploy our project assets uh it gives",
    "start": "1231960",
    "end": "1237919"
  },
  {
    "text": "another summary of all the all the Assets in your project again uh here in the rest API users subfolder uh show",
    "start": "1237919",
    "end": "1245080"
  },
  {
    "text": "function uh we have a function and an endpoint the command line tool picks",
    "start": "1245080",
    "end": "1250679"
  },
  {
    "text": "this stuff uh AO picks this stuff up automatically and you could toggle through the assets of your project that",
    "start": "1250679",
    "end": "1256799"
  },
  {
    "text": "you want to deploy and hit deploy so whether you have a",
    "start": "1256799",
    "end": "1262200"
  },
  {
    "text": "couple Lambda functions or 70 Lambda functions with hundreds of different endpoints you could uh toggle through",
    "start": "1262200",
    "end": "1268320"
  },
  {
    "text": "them and deploy each thing uh individually uh there's also lots of flags here like you could do serverless",
    "start": "1268320",
    "end": "1274840"
  },
  {
    "text": "uh function deploy Das all it'll deploy all the functions for you um same with",
    "start": "1274840",
    "end": "1281080"
  },
  {
    "text": "the endpoints and you'll see that the functions are deployed first and what you get here they're deployed to our Dev",
    "start": "1281080",
    "end": "1288039"
  },
  {
    "text": "stage and uh the in the US east region and what you get is the Arn for those",
    "start": "1288039",
    "end": "1293760"
  },
  {
    "text": "functions that you deployed uh second off after the functions are deployed server list then goes and creates all",
    "start": "1293760",
    "end": "1299919"
  },
  {
    "text": "the endpoints uh that you specified in your project and attaches those to your function and spits out a",
    "start": "1299919",
    "end": "1308919"
  },
  {
    "text": "URL and if we enter in that URL into our browser here it runs and this is",
    "start": "1314400",
    "end": "1319919"
  },
  {
    "text": "fantastic you basically have this uh manage container that's infinitely scalable that only charges you whenever",
    "start": "1319919",
    "end": "1326679"
  },
  {
    "text": "it's called that you've deployed within a few seconds and as you keep working on this you keep modifying your functions",
    "start": "1326679",
    "end": "1333320"
  },
  {
    "text": "just go back and redeploy them uh again every single time you deploy Lambda functions what serverless does is it",
    "start": "1333320",
    "end": "1339840"
  },
  {
    "text": "uploads a copy of the function to your project bucket so you have a backup there soon we're going to bring on roll",
    "start": "1339840",
    "end": "1345240"
  },
  {
    "text": "roll back support so you can either roll back to uh so that you could could roll back to the Lambda functions in your",
    "start": "1345240",
    "end": "1350279"
  },
  {
    "text": "project bucket uh and then it and then cilus takes a Lambda function deploys it on AWS for you uh automatically versions",
    "start": "1350279",
    "end": "1358000"
  },
  {
    "text": "it so every single time you deploy a Lambda function the version gets bumped up and then it adds an alias to that",
    "start": "1358000",
    "end": "1364400"
  },
  {
    "text": "version um with the stage that you deployed to so we try very hard here to",
    "start": "1364400",
    "end": "1369799"
  },
  {
    "text": "isolate everything by stages and regions um and the result is I think",
    "start": "1369799",
    "end": "1376400"
  },
  {
    "text": "unprecedented agility especially when you look at uh just the ability that you",
    "start": "1376400",
    "end": "1381520"
  },
  {
    "text": "have to work with your your applications projects independently uh from one another when I first started this",
    "start": "1381520",
    "end": "1387799"
  },
  {
    "text": "project I thought oh man this pricing model rocks I don't have to waste a whole bunch of money every single month paying for Server resources anymore I",
    "start": "1387799",
    "end": "1395200"
  },
  {
    "text": "don't know about you all but I've got a building problem and I just build stuff like crazy and I'll deploy it and it",
    "start": "1395200",
    "end": "1400320"
  },
  {
    "text": "just runs and it charges me every single month and at some point I looked at my bills and I'm like I'm paying like 800",
    "start": "1400320",
    "end": "1405679"
  },
  {
    "text": "bucks a month for side projects uh and anyway so so I thought that the the pricing",
    "start": "1405679",
    "end": "1413039"
  },
  {
    "text": "model uh was going to speak to to a lot of people uh it certainly spoke to me but as I continued this project what I",
    "start": "1413039",
    "end": "1420320"
  },
  {
    "text": "learned that more people were interested in is that this offers uh unprecedented",
    "start": "1420320",
    "end": "1426159"
  },
  {
    "text": "agility containers uh orchestration servers it's all handled for you and now you have this complete freedom to",
    "start": "1426159",
    "end": "1433120"
  },
  {
    "text": "isolate and divide your logic however you'd like um and work with components in your app application uh independently",
    "start": "1433120",
    "end": "1440200"
  },
  {
    "text": "of of of each other so at any time I can go to this endpoint change the configuration for this specific endpoint",
    "start": "1440200",
    "end": "1446400"
  },
  {
    "text": "change the Lambda function that's right behind this endpoint as well and it's not going to affect any other endpoints in my rest API a lot of people have",
    "start": "1446400",
    "end": "1452640"
  },
  {
    "text": "custom build steps that they need to perform lots of companies it's a very subjective thing and I recognized this",
    "start": "1452640",
    "end": "1458360"
  },
  {
    "text": "early on and this is why we spent so much darn time refactoring the core architecture to have a",
    "start": "1458360",
    "end": "1465880"
  },
  {
    "text": "clean uh actions layout because what this enables is anyone",
    "start": "1465880",
    "end": "1472200"
  },
  {
    "text": "could write a plugin for serverless that replaces one of the core actions in the platform with their own custom logic it",
    "start": "1472200",
    "end": "1478919"
  },
  {
    "text": "just targets one action or multiple actions or it adds hooks that logic that could fire before or after uh in action",
    "start": "1478919",
    "end": "1486840"
  },
  {
    "text": "fires and the plug-in Community has sort of taken off I think these are this is",
    "start": "1486840",
    "end": "1492480"
  },
  {
    "text": "only like half the plugins that have been written so far but many of these things add custom build steps that f",
    "start": "1492480",
    "end": "1498600"
  },
  {
    "text": "before any of our actions fire so um some of the best ones here I mean",
    "start": "1498600",
    "end": "1503840"
  },
  {
    "text": "they're all they're all pretty cool but this Optimizer this is the only one that we we made and uh the optimizer is",
    "start": "1503840",
    "end": "1511200"
  },
  {
    "text": "specifically for node.js uh what it does is it browser fies before it deploys your Lambda function whenever you do",
    "start": "1511200",
    "end": "1517559"
  },
  {
    "text": "serverless function deploy or serverless Dash deploy the optimizer uh browser",
    "start": "1517559",
    "end": "1522840"
  },
  {
    "text": "your JavaScript code so it only extracts the stuff that you're that L that that",
    "start": "1522840",
    "end": "1528600"
  },
  {
    "text": "that that Lambda function is using and then it minifies it um and that's what it zips up and the result is you have",
    "start": "1528600",
    "end": "1535039"
  },
  {
    "text": "this really tiny file size for your Lambda function uh which is which is fantastic because you could upload it",
    "start": "1535039",
    "end": "1540840"
  },
  {
    "text": "much more quickly furthermore uh we believe it helps the",
    "start": "1540840",
    "end": "1545880"
  },
  {
    "text": "performance uh for when your Lambda actually runs and we you know there's a lot of stuff that Lambda does behind the",
    "start": "1545880",
    "end": "1551360"
  },
  {
    "text": "scenes but one thing we know is that whenever a Lambda is firing up uh from a cold start AWS has to download it from s",
    "start": "1551360",
    "end": "1558360"
  },
  {
    "text": "three and unzip it and the smaller the file size We Believe helps that I",
    "start": "1558360",
    "end": "1563720"
  },
  {
    "text": "haven't dealt with a lot of that specifically but one thing I feel strongly about when I started this",
    "start": "1563720",
    "end": "1569720"
  },
  {
    "text": "project is we don't want to really abstract too much uh all all we really want to do with this project is just put",
    "start": "1569720",
    "end": "1575960"
  },
  {
    "text": "some structure around the raw AWS SDK and when you look at our configuration files here um the",
    "start": "1575960",
    "end": "1583799"
  },
  {
    "text": "configurations uh properties uh these are all the raw properties raw parameters that the AWS SDK takes in so",
    "start": "1583799",
    "end": "1591559"
  },
  {
    "text": "theoretically anything that you could do on the AWS dashboard or anything they're",
    "start": "1591559",
    "end": "1596760"
  },
  {
    "text": "all using the SDK as well um it's all uh it's all available right here and we",
    "start": "1596760",
    "end": "1602559"
  },
  {
    "text": "added a little bit of magic here because uh normally you'd have to stringify the",
    "start": "1602559",
    "end": "1608480"
  },
  {
    "text": "request template which is a just a lame user experience uh and a contributor came in and he said like oh no we'll",
    "start": "1608480",
    "end": "1614279"
  },
  {
    "text": "just stringify it later and you could just write it out as a normal Json object so yeah that's that's that's",
    "start": "1614279",
    "end": "1620440"
  },
  {
    "text": "possible and we've we've tried to improve it there we have uh as I said there's end points is an array put in",
    "start": "1620440",
    "end": "1626559"
  },
  {
    "text": "one or 100 end points right in there and I'll I'll dig in on some cool patterns",
    "start": "1626559",
    "end": "1632600"
  },
  {
    "text": "um in just a few minutes here what I see people doing that's that seems kind of groundbreaking to me all right let's I'm",
    "start": "1632600",
    "end": "1639760"
  },
  {
    "text": "going to get into some cool things that I that we're seeing now with the framework that uh I think just head and",
    "start": "1639760",
    "end": "1647559"
  },
  {
    "text": "shoulders above of everything else that's out there as I said you could have one or multiple components uh in your serverless project",
    "start": "1647559",
    "end": "1655480"
  },
  {
    "text": "this one just has a rest API component um for a while we only supported lambdas",
    "start": "1655480",
    "end": "1661000"
  },
  {
    "text": "that were triggered by API Gateway we finally brought in really nice event support for you know S3 events uh",
    "start": "1661000",
    "end": "1668559"
  },
  {
    "text": "cloudwatch uh Dynamo DB streams so we have that now and this is what I think",
    "start": "1668559",
    "end": "1674880"
  },
  {
    "text": "the ideal application looks like I think that in your serverless project you",
    "start": "1674880",
    "end": "1680080"
  },
  {
    "text": "should have a few components one for your rest API for your for your uh you",
    "start": "1680080",
    "end": "1686360"
  },
  {
    "text": "know your backend code but also another component that just handles uh events on your AWS account this is a really nice",
    "start": "1686360",
    "end": "1693200"
  },
  {
    "text": "way to add in all this functionality into a simple project file because there's a lot of events that you want to",
    "start": "1693200",
    "end": "1699279"
  },
  {
    "text": "be able to handle like image resizing if an image is uploaded to an S3 bucket or something that that code shouldn't",
    "start": "1699279",
    "end": "1704919"
  },
  {
    "text": "actually be in your rest API this could be handled separately so this is a really nice way to separate uh these two",
    "start": "1704919",
    "end": "1711440"
  },
  {
    "text": "things and furthermore I see this huge demand for utility functions for people's applications lambdas that comb",
    "start": "1711440",
    "end": "1717919"
  },
  {
    "text": "through logs or lambdas uh that do security audits all that stuff I think that this is the first time and Lambda",
    "start": "1717919",
    "end": "1725279"
  },
  {
    "text": "is the the right compute service that enables you to build a project and uh",
    "start": "1725279",
    "end": "1731159"
  },
  {
    "text": "have all that logic in one place and this is the way to organize it uh I think that's uh I just don't think",
    "start": "1731159",
    "end": "1737880"
  },
  {
    "text": "there's anything else out there that's like this second I want to talk about code architectures for a second here in",
    "start": "1737880",
    "end": "1744240"
  },
  {
    "text": "the beginning we saw more of a nano Services pattern uh with Lambda and that was that",
    "start": "1744240",
    "end": "1751240"
  },
  {
    "text": "people would make a Lambda function for each individual API endpoint and that's",
    "start": "1751240",
    "end": "1756360"
  },
  {
    "text": "really cool it makes uh monitoring you know debugging those Lambda functions really easy you know this Lambda",
    "start": "1756360",
    "end": "1761480"
  },
  {
    "text": "function does this thing and it's also really agile again uh the level of agility here is uh is phenomenal and",
    "start": "1761480",
    "end": "1769559"
  },
  {
    "text": "this way with this pattern you can uh manipulate update work on each API",
    "start": "1769559",
    "end": "1774919"
  },
  {
    "text": "endpoint completely independent um from the rest of your application and that's",
    "start": "1774919",
    "end": "1779960"
  },
  {
    "text": "powerful but there's a lot of people who do what we call the microservices pattern and these names I don't know",
    "start": "1779960",
    "end": "1786159"
  },
  {
    "text": "there a little fuzzy but I I think of this as uh people people will make a Lambda function that handles a resource",
    "start": "1786159",
    "end": "1793120"
  },
  {
    "text": "for example their users data and that single Lambda function will have",
    "start": "1793120",
    "end": "1798559"
  },
  {
    "text": "multiple end points uh for crud operations on that resource and in the Lambda function you could say oh what",
    "start": "1798559",
    "end": "1804799"
  },
  {
    "text": "was the path um that API Gateway used when it triggered this Lambda function and what was the method and you could",
    "start": "1804799",
    "end": "1810720"
  },
  {
    "text": "actually use a Lambda uh to route to the correct logic you know from whatever the",
    "start": "1810720",
    "end": "1815840"
  },
  {
    "text": "incoming response was uh so these two are really interesting this one you know there's still a lot of agility here I",
    "start": "1815840",
    "end": "1822279"
  },
  {
    "text": "see people using this more and more because they just don't want to deal with more Lambda functions um and then",
    "start": "1822279",
    "end": "1827760"
  },
  {
    "text": "there's something else that's really caught our interest lately I'm just calling this the new monolithic",
    "start": "1827760",
    "end": "1832880"
  },
  {
    "text": "architecture now uh I don't know if anyone here has heard of graphql is anyone is anyone familiar with",
    "start": "1832880",
    "end": "1839760"
  },
  {
    "text": "graphql okay there's there's a couple people here uh this this stuff blew my",
    "start": "1839760",
    "end": "1845440"
  },
  {
    "text": "mind I had a contributor come to me and he said are you looking at graph qo it's a it's a open source project that",
    "start": "1845440",
    "end": "1852000"
  },
  {
    "text": "Facebook is putting out um and I said no he said it's amazing and we got to put it in a Lambda function uh because",
    "start": "1852000",
    "end": "1858760"
  },
  {
    "text": "that's just it's going to be an awesome uh set of tools and so graph qm is still",
    "start": "1858760",
    "end": "1864399"
  },
  {
    "text": "a little bit new to it personally but this is a this is a um a runtime and a",
    "start": "1864399",
    "end": "1870279"
  },
  {
    "text": "query language that Facebook has made and they have various implementations of it in different programming languages so",
    "start": "1870279",
    "end": "1876760"
  },
  {
    "text": "there's they just open sourced this a few months ago I believe and there's a node.js implementation of graphql and",
    "start": "1876760",
    "end": "1883960"
  },
  {
    "text": "what you do with this is you could put it in front of your persistence layer uh multiple database options uh for example",
    "start": "1883960",
    "end": "1891080"
  },
  {
    "text": "you could take graphql and put it in front of like five Dynamo DB tables um and then you could hit graphql with an",
    "start": "1891080",
    "end": "1898200"
  },
  {
    "text": "incoming request and request a shape of data and that shape of data can include",
    "start": "1898200",
    "end": "1903799"
  },
  {
    "text": "attributes from data objects across data sources like across Dynamo DB tables you",
    "start": "1903799",
    "end": "1909480"
  },
  {
    "text": "say hey I want um like 10 users and I want uh maybe for like an e-commerce",
    "start": "1909480",
    "end": "1915720"
  },
  {
    "text": "thing I want like three uh I want their the title of their latest orders um and",
    "start": "1915720",
    "end": "1921000"
  },
  {
    "text": "then I want the uh first three reviews uh for each of those products that they ordered all merged into one object and",
    "start": "1921000",
    "end": "1928039"
  },
  {
    "text": "graphql will query uh all your data sources um concurrently aggregate that",
    "start": "1928039",
    "end": "1934480"
  },
  {
    "text": "uh the the resulting data objects and merge it into the shape that you requested and spit that back out now why",
    "start": "1934480",
    "end": "1940519"
  },
  {
    "text": "is this cool because this means you could have a rest API endpoint a rest API that only",
    "start": "1940519",
    "end": "1947159"
  },
  {
    "text": "has one endpoint point and Facebook claims that they're using this I don't know about these claims but they say",
    "start": "1947159",
    "end": "1952679"
  },
  {
    "text": "they're using graphql to serve all of their mobile applications and uh via like a single",
    "start": "1952679",
    "end": "1959159"
  },
  {
    "text": "rest API endpoint uh and they're serving over a thousand versions um uh of their",
    "start": "1959159",
    "end": "1965519"
  },
  {
    "text": "applications with this single rest API and as those applications uh iterate as the versions change um and they need new",
    "start": "1965519",
    "end": "1973440"
  },
  {
    "text": "types of data they just change the shape of their incoming request uh and they send that up to graphql and graphql can",
    "start": "1973440",
    "end": "1979799"
  },
  {
    "text": "handle it and it's very interesting from the perspective of if you ever had to deal with storing historical records of",
    "start": "1979799",
    "end": "1985559"
  },
  {
    "text": "data and stuff um this reduces that significantly so we thought like wow",
    "start": "1985559",
    "end": "1992080"
  },
  {
    "text": "single uh endpoint rest apis how do we you know putting that in Lambda there's",
    "start": "1992080",
    "end": "1997440"
  },
  {
    "text": "like nothing cooler than that uh and we made a proof of concept recently and we",
    "start": "1997440",
    "end": "2002559"
  },
  {
    "text": "worked with the contributor to do this it's called the serverless graphql blog",
    "start": "2002559",
    "end": "2008519"
  },
  {
    "text": "uh and this was a cool project just this also made the front page of Hacker News um but it's a serverless Blog and it",
    "start": "2008519",
    "end": "2016360"
  },
  {
    "text": "uses three Dynamo DB tables it has one for authors one for posts one for comments and it has if you go into",
    "start": "2016360",
    "end": "2025159"
  },
  {
    "text": "it it has one Lambda function and in that Lambda",
    "start": "2025880",
    "end": "2031480"
  },
  {
    "text": "function it has one endpoint and here's the path uh uh the",
    "start": "2031480",
    "end": "2039000"
  },
  {
    "text": "method is post and you go in there and you say hey I want the first um I want",
    "start": "2039000",
    "end": "2045000"
  },
  {
    "text": "the first 10 posts and I want like the ti the name of the author in there and I want the first three comments or the the",
    "start": "2045000",
    "end": "2052200"
  },
  {
    "text": "name of the poster of the first three comments and that's how you shape your request you could shape it however you'd",
    "start": "2052200",
    "end": "2058358"
  },
  {
    "text": "like you ping uh the single rest API endpoint and graphql is sitting in the",
    "start": "2058359",
    "end": "2065000"
  },
  {
    "text": "Lambda function uh your request hits that first first it queries these three Dynamo DB tables concurrently pulls in",
    "start": "2065000",
    "end": "2072679"
  },
  {
    "text": "the pulls in the resulting data uh combines it matches it to the shape of your request and and spits it out so for",
    "start": "2072679",
    "end": "2080720"
  },
  {
    "text": "us the idea of having serverless the idea of having uh rest apis in Lambda is already phenomenal uh it's you know",
    "start": "2080720",
    "end": "2088320"
  },
  {
    "text": "managed for you uh it instantly scales you only get charged per use and if you could use graphql to reduce the number",
    "start": "2088320",
    "end": "2094520"
  },
  {
    "text": "of end points for your rest API down to like one or two you may have another one that handles uh your admin API uh I",
    "start": "2094520",
    "end": "2101359"
  },
  {
    "text": "think that it doesn't get much more efficient than that Lambda also doesn't have support for uh JavaScript es6 uh",
    "start": "2101359",
    "end": "2108599"
  },
  {
    "text": "fortunately uh we wrote Our Optimizer plugin um so that it it runs your code",
    "start": "2108599",
    "end": "2114720"
  },
  {
    "text": "uh through Babel so allowing you to use es6 syntax and Lambda and that's what you're looking at here um but it hits",
    "start": "2114720",
    "end": "2122400"
  },
  {
    "text": "that uh I guess all the schemas here are stored in this schema file we only have",
    "start": "2122400",
    "end": "2127800"
  },
  {
    "text": "about 116 lines of code here and and here's our Dynamo DB logic",
    "start": "2127800",
    "end": "2137400"
  },
  {
    "text": "you you basically have to train graphql how to how to pull in your data from",
    "start": "2137400",
    "end": "2142720"
  },
  {
    "text": "these data sources and it doesn't have to be a single data source you could have Dynamo DB and reddis uh you know",
    "start": "2142720",
    "end": "2148520"
  },
  {
    "text": "and then some relational database system and hook graph and put graphql in front of all those but I think Kevin yeah he",
    "start": "2148520",
    "end": "2154400"
  },
  {
    "text": "was able to pull this off in under 300 lines of code at the end of the day what I see people doing is they mix these code architectures some endpoints",
    "start": "2154400",
    "end": "2161319"
  },
  {
    "text": "they'll have a lam function for each some of them they'll try and uh hook up multiple endpoints uh to a single L",
    "start": "2161319",
    "end": "2167119"
  },
  {
    "text": "function and this is still so new we only fil we only created that proof of concept uh a few weeks ago so who knows",
    "start": "2167119",
    "end": "2175079"
  },
  {
    "text": "where this will go but we're pretty bullish on it we're we're trying to use it wherever we can because it makes maintenance so much easier so lastly uh",
    "start": "2175079",
    "end": "2182640"
  },
  {
    "text": "we have a great Community there's a couple people from our community today here today I think we're up to about",
    "start": "2182640",
    "end": "2190040"
  },
  {
    "text": "um got about 616 people uh I'm in here all day long our team is in here all day",
    "start": "2190040",
    "end": "2196079"
  },
  {
    "text": "long and we're we're trying to re to handle your requests uh at the end of the day this still is the AWS",
    "start": "2196079",
    "end": "2201880"
  },
  {
    "text": "application framework and there's a lot of requests that come in um so we can't",
    "start": "2201880",
    "end": "2206960"
  },
  {
    "text": "get to them all also you saw that we have uh plugins",
    "start": "2206960",
    "end": "2214520"
  },
  {
    "text": "um I think that there are a lot of there's a lot of great plugins here already someone wrote uh I think this is",
    "start": "2214520",
    "end": "2219760"
  },
  {
    "text": "the most popular one is the serve plug-in uh which adds a server to the",
    "start": "2219760",
    "end": "2225000"
  },
  {
    "text": "serverless framework which to me is kind of hilarious and especially because it's the most popular one it basically just",
    "start": "2225000",
    "end": "2230240"
  },
  {
    "text": "creates a local server so you can uh run your Lambda functions uh uh locally just",
    "start": "2230240",
    "end": "2237240"
  },
  {
    "text": "like any other uh local server uh and do better local development lastly we",
    "start": "2237240",
    "end": "2242720"
  },
  {
    "text": "created We Made Project files sharable so that people could start sharing their server list projects uh and they're",
    "start": "2242720",
    "end": "2249280"
  },
  {
    "text": "basically uh we use npm as a delivery mechanism and you can run serverless",
    "start": "2249280",
    "end": "2255480"
  },
  {
    "text": "project install to install a project uh that's already been created and you'll see that the graphql blog is in here um",
    "start": "2255480",
    "end": "2262319"
  },
  {
    "text": "and instantly deploy that uh next up for us we're going to",
    "start": "2262319",
    "end": "2267680"
  },
  {
    "text": "come out with version 0.5 which adds in lot lots more uh features and support",
    "start": "2267680",
    "end": "2273720"
  },
  {
    "text": "for plug-in development um and after that what we need now is a serverless",
    "start": "2273720",
    "end": "2280040"
  },
  {
    "text": "application boilerplate project uh I think finally all the pieces are in",
    "start": "2280040",
    "end": "2285119"
  },
  {
    "text": "place to to make a great boiler plate project that includes plugins in it um",
    "start": "2285119",
    "end": "2291560"
  },
  {
    "text": "as well as we like to offer a users crud example uh as well as authentication API",
    "start": "2291560",
    "end": "2296880"
  },
  {
    "text": "Gateway now has this new authenticators feature which solves the authentication problem for a lot of people um and we're",
    "start": "2296880",
    "end": "2303640"
  },
  {
    "text": "going to release that in probably a week or so and you'll be able to install it with server L project install and you",
    "start": "2303640",
    "end": "2309880"
  },
  {
    "text": "should be able to get up and running within a few minutes",
    "start": "2309880",
    "end": "2315359"
  }
]