[
  {
    "text": "all right there we go so we'll go ahead and get started thanks everyone for coming I know this is a late session",
    "start": "50",
    "end": "7160"
  },
  {
    "text": "especially since there's a pub crawls and other things going on so do you appreciate you taking the time out today",
    "start": "7160",
    "end": "16320"
  },
  {
    "text": "we're going to be talking about deep learning for developers just a quick note I am actually not a hog a loo pesco",
    "start": "16320",
    "end": "23039"
  },
  {
    "text": "he's a colleague of mine at it abuse my name's Nate Slater this is a repeat session so hog a was the original",
    "start": "23039",
    "end": "29849"
  },
  {
    "text": "presenter so I'm presenting off his his deck I forgot to update it with my name",
    "start": "29849",
    "end": "35760"
  },
  {
    "text": "so and then we have Sanjay men who will be presenting the second part of the",
    "start": "35760",
    "end": "42180"
  },
  {
    "text": "presentation from Samsung talking about how they've used some convolutional and",
    "start": "42180",
    "end": "47850"
  },
  {
    "text": "recurrent neural networks to do some very interesting things with heart rate monitoring okay",
    "start": "47850",
    "end": "55350"
  },
  {
    "text": "so these are the the main topics I'm going to cover first is just sort of an overview of deep learning and why it's",
    "start": "55350",
    "end": "62879"
  },
  {
    "text": "important why it's a big deal then we'll talk about some of the basic concepts just a show of hands how many folks here",
    "start": "62879",
    "end": "69030"
  },
  {
    "text": "have actually like written you know a neural map in Python or one of the",
    "start": "69030",
    "end": "75060"
  },
  {
    "text": "frameworks tensorflow or what not okay decent amount so so we're actually gonna",
    "start": "75060",
    "end": "80939"
  },
  {
    "text": "dive into some of the actual code and some of the model architectures that that you see when you're writing these",
    "start": "80939",
    "end": "87659"
  },
  {
    "text": "types of learning algorithms and then you know we'll go into some some of the",
    "start": "87659",
    "end": "93270"
  },
  {
    "text": "details about how you actually code a deep neural net and then as I mentioned we will have Samsung talk about their",
    "start": "93270",
    "end": "99600"
  },
  {
    "text": "use of this technology and the goal is by the end of the session to really",
    "start": "99600",
    "end": "106380"
  },
  {
    "text": "understand what deep learning is and how you can get started with it today so as",
    "start": "106380",
    "end": "113640"
  },
  {
    "text": "we go through this you know I think I think one thing to keep in mind is you don't have to understand all of the details of you know what what the neural",
    "start": "113640",
    "end": "120780"
  },
  {
    "text": "net is doing under the hood to get started right at some point you'll probably want to learn the details but",
    "start": "120780",
    "end": "126030"
  },
  {
    "text": "if you're a software engineer and you're interested in learning about how you can incorporate learning algorithms into",
    "start": "126030",
    "end": "131250"
  },
  {
    "text": "your code by the end of the session you should hopefully have a pretty good idea about how to do that okay so deep",
    "start": "131250",
    "end": "139110"
  },
  {
    "text": "learning is a big deal Andrew Aang who's really well-regarded",
    "start": "139110",
    "end": "144510"
  },
  {
    "text": "sort of thought leader in in deep learning he was one of the original founders of Google brain then he went on",
    "start": "144510",
    "end": "150300"
  },
  {
    "text": "to found Coursera he's a professor or was a professor at Stanford I've taken a",
    "start": "150300",
    "end": "156480"
  },
  {
    "text": "number of his classes on Coursera he's just a really great sort of communicator",
    "start": "156480",
    "end": "162420"
  },
  {
    "text": "and and just really can communicate complex technical topics really really",
    "start": "162420",
    "end": "168000"
  },
  {
    "text": "well and he basically views deep learning as a superpower right you can",
    "start": "168000",
    "end": "173100"
  },
  {
    "text": "do since the synthesizing art from you know images you can do machine",
    "start": "173100",
    "end": "179400"
  },
  {
    "text": "translation there's a whole number of almost magical things that you can do with machine learning so one of the",
    "start": "179400",
    "end": "189300"
  },
  {
    "text": "questions I get a lot you know is just having Thanksgiving with my family and my dad who's you know kind of a",
    "start": "189300",
    "end": "194910"
  },
  {
    "text": "technology Luddite was asking me you know what what I do every day and one of",
    "start": "194910",
    "end": "200340"
  },
  {
    "text": "the things I've noticed is there there's a sort of a misunderstanding of what",
    "start": "200340",
    "end": "205380"
  },
  {
    "text": "artificial intelligence is what machine learning is and what deep learning is right a lot of people use the terms interchangeably and we've even done that",
    "start": "205380",
    "end": "211590"
  },
  {
    "text": "a little bit at AWS where we've labeled you know certain services as AI /ml and",
    "start": "211590",
    "end": "218370"
  },
  {
    "text": "in reality they're really more pure machine learning services so if you--if you look at this sort of ven ven diagram",
    "start": "218370",
    "end": "224070"
  },
  {
    "text": "type image on on the slide here artificial intelligence is really a term",
    "start": "224070",
    "end": "229650"
  },
  {
    "text": "that encompasses a whole set of different fields including machine learning and artificial intelligence was",
    "start": "229650",
    "end": "236610"
  },
  {
    "text": "actually something that touring sort of started when he asked can machines do",
    "start": "236610",
    "end": "243360"
  },
  {
    "text": "what what we can and when you talk about AI you're really talking not only about you know technical concepts but also",
    "start": "243360",
    "end": "249720"
  },
  {
    "text": "some philosophical concepts right really what is thought what can we teach machines to think and and really again",
    "start": "249720",
    "end": "257250"
  },
  {
    "text": "the the the appropriate thing to ask is can can we teach machines to do what we do right machine learning is actually a",
    "start": "257250",
    "end": "264210"
  },
  {
    "text": "subset of that and it refers to a specific set of rythms statistic statistics based",
    "start": "264210",
    "end": "269670"
  },
  {
    "text": "algorithms that can quote unquote learn and there's a whole bunch of different",
    "start": "269670",
    "end": "275490"
  },
  {
    "text": "types of machine learning algorithms there's decision trees there's logistic regression and then of course we have",
    "start": "275490",
    "end": "283080"
  },
  {
    "text": "deep learning which is just one of these machine learning based techniques so today we're really going to be focusing",
    "start": "283080",
    "end": "288330"
  },
  {
    "text": "on the machine learning and the deep learning piece and really what machine",
    "start": "288330",
    "end": "294240"
  },
  {
    "text": "learning does is it it sort of tweaks the traditional programming model so for folks here who've been doing software",
    "start": "294240",
    "end": "300330"
  },
  {
    "text": "engineering software programming typically what you do is you know you have a bunch of data maybe you're reading data from a file already and",
    "start": "300330",
    "end": "306510"
  },
  {
    "text": "data from a database and then you've got to apply some rules to that data right you know maybe you're dealing with data",
    "start": "306510",
    "end": "312660"
  },
  {
    "text": "from a form and if certain fields in the form aren't filled out you have to display an error message right so",
    "start": "312660",
    "end": "319200"
  },
  {
    "text": "essentially what you're doing is you're hard coding the rules based on the data that you see in the machine learning",
    "start": "319200",
    "end": "325950"
  },
  {
    "text": "approach you start with the data and then you start with some known answers",
    "start": "325950",
    "end": "331020"
  },
  {
    "text": "that's that your ground truth right you start with something that you already know the answer to and then you derive",
    "start": "331020",
    "end": "336330"
  },
  {
    "text": "the rules from that so it really changes the way you actually develop software",
    "start": "336330",
    "end": "342450"
  },
  {
    "text": "because you can get out of the business of having to write very rigid brittle rules based code and instead you can use",
    "start": "342450",
    "end": "350340"
  },
  {
    "text": "these learning algorithms that will actually be able to do the right thing with data that they've never seen before",
    "start": "350340",
    "end": "359030"
  },
  {
    "text": "so deep learning is a big deal because it has a growing impact on our lives and if we take a look at just some of the",
    "start": "360500",
    "end": "366780"
  },
  {
    "text": "services we consume every day we have all these personalization services and I think this is a probably a screenshot",
    "start": "366780",
    "end": "373440"
  },
  {
    "text": "from like Amazon Prime video where you know if you watch one type of show we'll recommend a whole bunch of other shows",
    "start": "373440",
    "end": "380610"
  },
  {
    "text": "right so we can look at your past history and compute a set of",
    "start": "380610",
    "end": "385770"
  },
  {
    "text": "recommendations for you and if again going back to the the rules versus the learning approach you could think well",
    "start": "385770",
    "end": "392520"
  },
  {
    "text": "if I was to do this in the traditional model you know the number of rules I would need over time to account for",
    "start": "392520",
    "end": "398280"
  },
  {
    "text": "everybody's tastes and everybody's sort of asked video history that they watch you just couldn't code that right there's no",
    "start": "398280",
    "end": "404670"
  },
  {
    "text": "way to actually to write an algorithm a traditional algorithm where you hard code those rules so you have to use",
    "start": "404670",
    "end": "410370"
  },
  {
    "text": "machine learning for those types of problems in our fulfillment centers we're using it for logistics right so",
    "start": "410370",
    "end": "416190"
  },
  {
    "text": "that's those orange things there are the Kiva robots would zip around the fulfillment centers and polite um's off",
    "start": "416190",
    "end": "421470"
  },
  {
    "text": "off the the shelf so we use machine learning extensively to orchestrate the logistics in the fulfillment centers",
    "start": "421470",
    "end": "428580"
  },
  {
    "text": "everybody knows Amazon Alexa right so there is a whole bunch of you know",
    "start": "428580",
    "end": "434100"
  },
  {
    "text": "automatic speech recognition right when you speak to the device we have to go from spoken text",
    "start": "434100",
    "end": "439440"
  },
  {
    "text": "there's speech to text and then from that text we do some natural language processing and then from that we can",
    "start": "439440",
    "end": "445740"
  },
  {
    "text": "then you know figure out what it is you ask the device to do and then of course autonomous vehicles are you know a",
    "start": "445740",
    "end": "452940"
  },
  {
    "text": "really kind of important and a part of",
    "start": "452940",
    "end": "458010"
  },
  {
    "text": "part of machine learning right you've got many different companies who want to get into this space and it makes heavy",
    "start": "458010",
    "end": "463440"
  },
  {
    "text": "heavy use of computer vision for autonomous driving I think in this case we're actually showing a drone so you",
    "start": "463440",
    "end": "469680"
  },
  {
    "text": "you know autonomous vehicles is more than just cars it can also be drones and and other",
    "start": "469680",
    "end": "474810"
  },
  {
    "text": "unmanned vehicles",
    "start": "474810",
    "end": "479060"
  },
  {
    "text": "so another thing particularly in the area of image classification you know",
    "start": "480290",
    "end": "485790"
  },
  {
    "text": "machines can actually do better than humans now right so here we have a picture of a cat you can see we've",
    "start": "485790",
    "end": "491760"
  },
  {
    "text": "basically you know got the set of classifications there with probabilities",
    "start": "491760",
    "end": "497250"
  },
  {
    "text": "attached to them you can see that you know the computer is correctly identifying that this is a tabby cat",
    "start": "497250",
    "end": "502530"
  },
  {
    "text": "with fifty 7.3 percent probability of it being accurate you know clearly it's not",
    "start": "502530",
    "end": "507780"
  },
  {
    "text": "a toilet seat with with one point six six percent accuracy and this this is a",
    "start": "507780",
    "end": "512849"
  },
  {
    "text": "little bit hard to read because it's kind of on its side but you'll see the one to pay attention to is that that",
    "start": "512849",
    "end": "518099"
  },
  {
    "text": "circle with the line through it that that's humans right so you can see the Alex net and Google Lynette and vgg 16",
    "start": "518099",
    "end": "525750"
  },
  {
    "text": "those are image classification implementations those are doing significantly better than humans so in",
    "start": "525750",
    "end": "531360"
  },
  {
    "text": "in the case of computer vision image classification it's really a song it's a solved problem right you know the",
    "start": "531360",
    "end": "537699"
  },
  {
    "text": "computer can do it and they can do it better better than a human can",
    "start": "537699",
    "end": "542699"
  },
  {
    "text": "okay so let's take a look you know add some deep learning in action Nvidia maker of graphics cards that have",
    "start": "542819",
    "end": "551279"
  },
  {
    "text": "accelerators on them that are really really important for some of the linear algebra that underpins the deep learning",
    "start": "551279",
    "end": "558810"
  },
  {
    "text": "is basically building a platform for self-driving cars I think we have a",
    "start": "558810",
    "end": "565509"
  },
  {
    "text": "video here so you can see you know we've",
    "start": "565509",
    "end": "571389"
  },
  {
    "text": "got some bounding box and a computer vision algorithm that's it's able to",
    "start": "571389",
    "end": "577329"
  },
  {
    "text": "identify the other cars on the road draw a box around it I think there's some",
    "start": "577329",
    "end": "584410"
  },
  {
    "text": "audio but it's a little hard to a little hard to hear you know so part of when when you have a self-driving cars just",
    "start": "584410",
    "end": "590769"
  },
  {
    "text": "knowing what else is on the road you also have to be able to identify the lanes right you don't want the car to to",
    "start": "590769",
    "end": "597670"
  },
  {
    "text": "drift out out of its Lane this I believe is lidar right so this is actually a",
    "start": "597670",
    "end": "603240"
  },
  {
    "text": "different type of imagery that that you use which i think is better at telling",
    "start": "603240",
    "end": "608589"
  },
  {
    "text": "like spacial distances right car stops",
    "start": "608589",
    "end": "616389"
  },
  {
    "text": "fortunately as the pedestrians are crossing",
    "start": "616389",
    "end": "620370"
  },
  {
    "text": "and so yet continues on so one of the things that that's really interesting",
    "start": "640880",
    "end": "646519"
  },
  {
    "text": "about autonomous vehicles is it's it's using several different types of signals right so classic computer vision you",
    "start": "646519",
    "end": "655730"
  },
  {
    "text": "know you feed it an image it can tell if it's a cat or not a cat when you're dealing with self-driving cars you have",
    "start": "655730",
    "end": "661100"
  },
  {
    "text": "to be able to create a model that has sources of data from from lots of",
    "start": "661100",
    "end": "666949"
  },
  {
    "text": "different cameras a lot of the cameras at different angles lidar data so you're",
    "start": "666949",
    "end": "673310"
  },
  {
    "text": "building a very complex model that has you know able to consume rich amounts of data so this is basically what what a",
    "start": "673310",
    "end": "682970"
  },
  {
    "text": "self-driving car sees and I think that's it ok so let's",
    "start": "682970",
    "end": "695360"
  },
  {
    "text": "dig into what it takes to get started with this right obviously a self-driving car pretty complicated but the good news",
    "start": "695360",
    "end": "702920"
  },
  {
    "text": "is is that to get started you don't have to go to the the same lengths that you would if you were going to be building a",
    "start": "702920",
    "end": "709550"
  },
  {
    "text": "self-driving car and everything that we're going to talk about here is what",
    "start": "709550",
    "end": "714649"
  },
  {
    "text": "essentially it's the foundation for what these more complex problems are actually doing so a neural net neural net is",
    "start": "714649",
    "end": "724189"
  },
  {
    "text": "essentially trying to mimic what what happens in the brain and there is some debate about whether or not what a",
    "start": "724189",
    "end": "729500"
  },
  {
    "text": "neural net is actually doing is sort of biologically correct but for the purpose",
    "start": "729500",
    "end": "736189"
  },
  {
    "text": "of this discussion you know brains consist of something called neurons we have a whole lot of them we have even more synapses which",
    "start": "736189",
    "end": "742220"
  },
  {
    "text": "connect those neurons and if you look at a simple neural net what what it's",
    "start": "742220",
    "end": "748579"
  },
  {
    "text": "trying to do is its organized in the same in the same way as the neurons in the brain right so we have those circles",
    "start": "748579",
    "end": "755120"
  },
  {
    "text": "there those are those are considered the neurons we have some data that's coming in that's the you know X 1 through X and",
    "start": "755120",
    "end": "761389"
  },
  {
    "text": "then we apply some function to that data and we end up with a prediction right we",
    "start": "761389",
    "end": "768620"
  },
  {
    "text": "end up with with an answer of some sort right so again there is some debate",
    "start": "768620",
    "end": "774259"
  },
  {
    "text": "whether or not the brain is actually functioning or neural net is actually",
    "start": "774259",
    "end": "780350"
  },
  {
    "text": "doing the exact same thing in as the brain is but that's sort of not important right the important thing is",
    "start": "780350",
    "end": "785629"
  },
  {
    "text": "the the neural net is really more a terminology that sort of defines the",
    "start": "785629",
    "end": "791239"
  },
  {
    "text": "structure of the model and you know",
    "start": "791239",
    "end": "796879"
  },
  {
    "text": "mathematically this is what it looks like right you're essentially taking a sum across a vector of numbers and",
    "start": "796879",
    "end": "805459"
  },
  {
    "text": "you're applying a coefficient that's the W term to the data which is the X term",
    "start": "805459",
    "end": "813259"
  },
  {
    "text": "and then that outer term is some kind of nonlinear function will talk about those those in a second in the case of a",
    "start": "813259",
    "end": "820160"
  },
  {
    "text": "neural net we call that an activation function so essentially you have a neuron and the neuron applies some kind of activation function and then you end",
    "start": "820160",
    "end": "827209"
  },
  {
    "text": "up with some value and the value is your prediction that's the Y value there and",
    "start": "827209",
    "end": "834669"
  },
  {
    "text": "these neural nets consist of layers so you have your input layer which is",
    "start": "834699",
    "end": "840410"
  },
  {
    "text": "basically the data you're feeding into the neural net and then you'll have some number of layers beyond that and those",
    "start": "840410",
    "end": "846470"
  },
  {
    "text": "are called hidden layers and if every neuron in each layer connects to every",
    "start": "846470",
    "end": "852499"
  },
  {
    "text": "other neuron in the next layer it's called a fully connected layer so you'll see a lot of these types of graphs when",
    "start": "852499",
    "end": "857809"
  },
  {
    "text": "you start working with neural nets where you have all these lines that are connecting these these layers together",
    "start": "857809",
    "end": "863799"
  },
  {
    "text": "and you know neural nets can be very simple where you only have several",
    "start": "863799",
    "end": "870289"
  },
  {
    "text": "layers right or they can be very complex where you have multiple layers and in fact the term deep neural net typically",
    "start": "870289",
    "end": "878569"
  },
  {
    "text": "refers to a neural net where you have many many layers right so this is yeah",
    "start": "878569",
    "end": "886909"
  },
  {
    "text": "just what I mentioned before a fully connected layer is when all of the neurons are connected to the previous",
    "start": "886909",
    "end": "892789"
  },
  {
    "text": "layer and to the next layer and if you were to think of this as a graph the",
    "start": "892789",
    "end": "900169"
  },
  {
    "text": "edges so the lines that are connecting the neurons to one another basically have",
    "start": "900169",
    "end": "907160"
  },
  {
    "text": "weights associated with them these are these are coefficients and that's what the model is learning during training",
    "start": "907160",
    "end": "914600"
  },
  {
    "text": "and I guess show of hands how many folks here I've worked with with just straight",
    "start": "914600",
    "end": "919850"
  },
  {
    "text": "linear regression like multi multivariate linear regression right so if you're dealing with a small number of",
    "start": "919850",
    "end": "925460"
  },
  {
    "text": "variables in linear regression you can actually solve for the coefficients directly you can you can use calculus to",
    "start": "925460",
    "end": "931430"
  },
  {
    "text": "do it but if you have a large number of them it becomes too cumbersome so even in a simple linear regression you can",
    "start": "931430",
    "end": "938210"
  },
  {
    "text": "actually learn the coefficients right using the same exact technique that you you learn you use with a neural net",
    "start": "938210",
    "end": "943700"
  },
  {
    "text": "we'll talk about what that technique is but it's basically a way of looking at",
    "start": "943700",
    "end": "948770"
  },
  {
    "text": "your error you know you make a prediction you see how far away the prediction is from the ground truth and",
    "start": "948770",
    "end": "953780"
  },
  {
    "text": "then you adjust the coefficients accordingly to try and minimize the error that's essentially what's going on",
    "start": "953780",
    "end": "960380"
  },
  {
    "text": "here right so all of those weights between each neuron in one layer and the",
    "start": "960380",
    "end": "967310"
  },
  {
    "text": "next layer the the weights are learned during the training process okay so",
    "start": "967310",
    "end": "977450"
  },
  {
    "text": "there's some specific types of neural nets that that do some similar actions",
    "start": "977450",
    "end": "983660"
  },
  {
    "text": "but they're designed for sort of more specific purposes in this case if we're",
    "start": "983660",
    "end": "989450"
  },
  {
    "text": "talking about a convolutional neural net what we're doing here is instead of instead of just having a fully connected",
    "start": "989450",
    "end": "995090"
  },
  {
    "text": "a set of fully connected layers we have some convolutional layers right so we're",
    "start": "995090",
    "end": "1000640"
  },
  {
    "text": "sort of changing the the concepts slightly in that we're going to apply a filter and the filter has the weights in",
    "start": "1000640",
    "end": "1008980"
  },
  {
    "text": "it and those weights basically are sort of slid across the input image and you",
    "start": "1008980",
    "end": "1017860"
  },
  {
    "text": "multiply the weight by each of the pixel values and you end up with a set of new values right and so those are called",
    "start": "1017860",
    "end": "1023440"
  },
  {
    "text": "filters and in a convolutional neural net what you're actually learning are",
    "start": "1023440",
    "end": "1028569"
  },
  {
    "text": "the filters right so the first filter you may learn might find edges the next",
    "start": "1028570",
    "end": "1034720"
  },
  {
    "text": "filter might find you know circular curved curved shapes and you can stack",
    "start": "1034720",
    "end": "1040480"
  },
  {
    "text": "these filters up one on top of one another and actually end up with a very very specific sort of filter like your",
    "start": "1040480",
    "end": "1047260"
  },
  {
    "text": "combined filter aggregate filter and so when you're training a neural net convolutional neural Nets a with with",
    "start": "1047260",
    "end": "1053200"
  },
  {
    "text": "image recognition image classification essentially what you're learning are these filters but the concepts the same",
    "start": "1053200",
    "end": "1058840"
  },
  {
    "text": "right the filter is basically just a collection of weights that you're applying to the input neurons and this",
    "start": "1058840",
    "end": "1065440"
  },
  {
    "text": "is this is sort of what the computer is seeing right see it doesn't look very meaningful to the human eye but you can",
    "start": "1065440",
    "end": "1071200"
  },
  {
    "text": "start to see it's it's pulling out a set of patterns in in the data and remember",
    "start": "1071200",
    "end": "1077380"
  },
  {
    "text": "you know the computer doesn't see an image it just sees an array of numbers right if you have a 400 by 400 image 400",
    "start": "1077380",
    "end": "1085090"
  },
  {
    "text": "I formed a grayscale image that's a 1,600 lengths vector of numbers right that's all the computer is seeing and",
    "start": "1085090",
    "end": "1092940"
  },
  {
    "text": "the these are really really common in visual computer vision right the",
    "start": "1092940",
    "end": "1097960"
  },
  {
    "text": "convolutional neural nets are very very good for these types of operations and",
    "start": "1097960",
    "end": "1103990"
  },
  {
    "text": "this is a really cool slide you'll see this this is from a rather famous paper",
    "start": "1103990",
    "end": "1109870"
  },
  {
    "text": "that came out that explored what each layer was actually sort of seeing in the convolutional layers you can see in the",
    "start": "1109870",
    "end": "1116020"
  },
  {
    "text": "beginning it's it looks like it's finding you know mostly some edges maybe some colors and then in the second layer",
    "start": "1116020",
    "end": "1121600"
  },
  {
    "text": "it's finding curves and then you get into the deep layer and it's actually you know I you know you're stacking all",
    "start": "1121600",
    "end": "1126640"
  },
  {
    "text": "these filters up and it's actually identifying dogs right so you can get very very rich detail from these filters",
    "start": "1126640",
    "end": "1135270"
  },
  {
    "text": "okay so there are other types of neural nets in some cases you know what what you're",
    "start": "1135450",
    "end": "1141670"
  },
  {
    "text": "trying to do is actually make a prediction based on something you've seen before right and in this case you",
    "start": "1141670",
    "end": "1148120"
  },
  {
    "text": "would use something like a recurrent neural net so if you had time series data for example and you want it to say hey based on you know past patterns in",
    "start": "1148120",
    "end": "1157030"
  },
  {
    "text": "my data from from you know T - you know and seconds what's you know T plus 1",
    "start": "1157030",
    "end": "1163360"
  },
  {
    "text": "gonna be so these would use a recurrent neural net these these are pretty tricky I'll be honest you",
    "start": "1163360",
    "end": "1170440"
  },
  {
    "text": "for folks that are new to neural nets I'd say start start first by learning fully connected neural nets and then go",
    "start": "1170440",
    "end": "1177009"
  },
  {
    "text": "to CNN's and then go to Ardennes because these can get get a little bit tricky",
    "start": "1177009",
    "end": "1183009"
  },
  {
    "text": "but but the concept is ultimately the same it just the difference is is that you they're recurrent right so you're",
    "start": "1183009",
    "end": "1188919"
  },
  {
    "text": "going to basically pass in a value X you'll call your activation function on",
    "start": "1188919",
    "end": "1194470"
  },
  {
    "text": "it you'll get a value Y and then you're gonna pass Y back in to the next to the",
    "start": "1194470",
    "end": "1200259"
  },
  {
    "text": "next layer and because you're passing what you had predicted previously back",
    "start": "1200259",
    "end": "1206710"
  },
  {
    "text": "in to the next layer you're essentially remembering what it what had been predicted in the past and if we unroll",
    "start": "1206710",
    "end": "1212110"
  },
  {
    "text": "this you'll see that this is what it looks like right so we start with our our input layer and we have you know X",
    "start": "1212110",
    "end": "1220149"
  },
  {
    "text": "we passed that in we get some prediction Y and then you know we we pass that on",
    "start": "1220149",
    "end": "1226840"
  },
  {
    "text": "to the next I guess we're unrolling we're unrolling that uh that that recurrent neural net on the left so you",
    "start": "1226840",
    "end": "1233320"
  },
  {
    "text": "have x0 you get you know prediction h0 you'll notice h0 gets fed back in to the",
    "start": "1233320",
    "end": "1238570"
  },
  {
    "text": "next the next layer of the neural net and and what is that doing right so if you think about this in terms of say",
    "start": "1238570",
    "end": "1245409"
  },
  {
    "text": "something like machine translation you could imagine well if I just predicted a verb in the previous layer I probably",
    "start": "1245409",
    "end": "1252039"
  },
  {
    "text": "don't predict another verb in this layer right so it can solve those those kinds of problems that's an over simplistic",
    "start": "1252039",
    "end": "1257620"
  },
  {
    "text": "example that's essentially what what it's doing and this is a simple recurrent neural net there is a much",
    "start": "1257620",
    "end": "1265480"
  },
  {
    "text": "more powerful kind called long short-term memory LS TM which essentially uses four different neural",
    "start": "1265480",
    "end": "1272259"
  },
  {
    "text": "nets kind of simultaneously to remember things forget things ignore things and",
    "start": "1272259",
    "end": "1279730"
  },
  {
    "text": "pay attention to things and that's why I'm saying it gets a little complicated when you're first learning because you have to you have to learn not one but",
    "start": "1279730",
    "end": "1286539"
  },
  {
    "text": "but four but but under the underlying concepts are the same with all neural nets",
    "start": "1286539",
    "end": "1293398"
  },
  {
    "text": "okay so multiple layers combine together form a neural network right so whether",
    "start": "1294360",
    "end": "1299679"
  },
  {
    "text": "you're dealing with an RNN or a CNN or just a fully connected neural net basically that's what it comes down to",
    "start": "1299679",
    "end": "1306780"
  },
  {
    "text": "and in this case we have essentially a we have an input layer we have two",
    "start": "1306780",
    "end": "1313000"
  },
  {
    "text": "hidden layers and we've an output layer so this would be a two layered neural map and again if you think back to just",
    "start": "1313000",
    "end": "1319720"
  },
  {
    "text": "sort of linear or logistic regression you can actually express a logistic",
    "start": "1319720",
    "end": "1325120"
  },
  {
    "text": "regression as a simple one layer neural map right it's the input layer with a bunch of activation functions and then",
    "start": "1325120",
    "end": "1331750"
  },
  {
    "text": "the output layer right so you can basically do do a logistic regression as a neural map and so by adding these",
    "start": "1331750",
    "end": "1337990"
  },
  {
    "text": "additional layers you're essentially just adding more degrees of freedom to the model right so you're essentially",
    "start": "1337990",
    "end": "1344740"
  },
  {
    "text": "creating a very very complex nonlinear function by doing this so it's nonlinear",
    "start": "1344740",
    "end": "1354070"
  },
  {
    "text": "right so so when you're fitting this function to your data you can you can create a very very complex function and",
    "start": "1354070",
    "end": "1361870"
  },
  {
    "text": "in the case of convolutional neural nets you can learn features hierarchically right by applying multiple filters",
    "start": "1361870",
    "end": "1369180"
  },
  {
    "text": "scalable architecture okay so this this is interesting you know one of the things that you can do with neural nets",
    "start": "1369180",
    "end": "1376210"
  },
  {
    "text": "you can you can scale both vertically and horizontally right because the operations that you're performing are",
    "start": "1376210",
    "end": "1382480"
  },
  {
    "text": "basically a bunch of linear algebra so it's multiply and add essentially those",
    "start": "1382480",
    "end": "1388180"
  },
  {
    "text": "can run really really fast and in parallel on GPUs and then when you start",
    "start": "1388180",
    "end": "1394060"
  },
  {
    "text": "to get into the optimization if you're doing something like gradient descent",
    "start": "1394060",
    "end": "1399640"
  },
  {
    "text": "which we'll talk about there are ways you can parallel eyes that actually a cross post so you can",
    "start": "1399640",
    "end": "1405160"
  },
  {
    "text": "actually you know run parts of it in parallel on multiple multiple hosts so",
    "start": "1405160",
    "end": "1411100"
  },
  {
    "text": "you know what this allows you to do is basically deal with very very large input sets of data right way more than",
    "start": "1411100",
    "end": "1418150"
  },
  {
    "text": "we used to be able to handle they are computationally intensive so for",
    "start": "1418150",
    "end": "1423400"
  },
  {
    "text": "training you absolutely are going to need to use some kind of accelerator",
    "start": "1423400",
    "end": "1429070"
  },
  {
    "text": "like a GPU and as we'll see in the next part of the the the session there's",
    "start": "1429070",
    "end": "1435160"
  },
  {
    "text": "actually quite a bit optimization that you'll want to do to do inferences so even after you have a trained model you want to make sure you",
    "start": "1435160",
    "end": "1442480"
  },
  {
    "text": "can do inferences in a cost-effective way so you could do some additional optimizations on the model to make sure",
    "start": "1442480",
    "end": "1448690"
  },
  {
    "text": "that it can run in a scaleable and cost-effective way so it doesn't do you",
    "start": "1448690",
    "end": "1454269"
  },
  {
    "text": "a lot of good to create a a really nice model only to realize hey I can't run this because I'm gonna go bankrupt with",
    "start": "1454269",
    "end": "1460749"
  },
  {
    "text": "the you know GPU instances that I need to do this okay so when you train a",
    "start": "1460749",
    "end": "1468820"
  },
  {
    "text": "neural what net the first thing you do is called a forward pass so essentially you take some input data you initialize",
    "start": "1468820",
    "end": "1475059"
  },
  {
    "text": "your your neural net and all the weights with and then a random way and then you get some output and then you compare the",
    "start": "1475059",
    "end": "1482259"
  },
  {
    "text": "output to the known value to the ground truth and then once you know how far off",
    "start": "1482259",
    "end": "1488230"
  },
  {
    "text": "you are that's your loss you essentially do something called back propagation which you you go backwards through the",
    "start": "1488230",
    "end": "1495100"
  },
  {
    "text": "neural net and you adjust all the the weights to try and minimize the loss and you do this a number of different times",
    "start": "1495100",
    "end": "1502509"
  },
  {
    "text": "right you do this you go over your training examples a number of different times what was the question it it's some",
    "start": "1502509",
    "end": "1515889"
  },
  {
    "text": "it's something that the framework you're using will will do for you typically yeah and we'll see some code examples in",
    "start": "1515889",
    "end": "1521830"
  },
  {
    "text": "a second you can write it yourself if you want to but the good news is you don't have to nowadays with these",
    "start": "1521830",
    "end": "1527440"
  },
  {
    "text": "higher-level frameworks and so each pass",
    "start": "1527440",
    "end": "1532509"
  },
  {
    "text": "through your training data is called an epoch and so you just do this as many times as you feel like you need to until",
    "start": "1532509",
    "end": "1540399"
  },
  {
    "text": "you get to an acceptable level of loss and so this is what's really interesting it's a non-deterministic operation right",
    "start": "1540399",
    "end": "1546100"
  },
  {
    "text": "you're essentially empirically determining a an a certain acceptable level of loss you're not actually",
    "start": "1546100",
    "end": "1552840"
  },
  {
    "text": "zeroing it out right will never go to zero you just hope that it goes to a low enough number so let's look at some code",
    "start": "1552840",
    "end": "1560139"
  },
  {
    "text": "and I'll walk you through what what's actually happening in code so first step",
    "start": "1560139",
    "end": "1565359"
  },
  {
    "text": "is to pick some kind of environment so you can pick and number of frameworks you know you've got",
    "start": "1565359",
    "end": "1571210"
  },
  {
    "text": "tensorflow you've got MX net you've got PI torch you've got Karis and then you",
    "start": "1571210",
    "end": "1576370"
  },
  {
    "text": "can go ahead and install it in this case we're doing a pip install for MX net",
    "start": "1576370",
    "end": "1582179"
  },
  {
    "text": "better yet you can get started really really quick by using sage maker so if you want to just begin coding a neural",
    "start": "1582179",
    "end": "1589450"
  },
  {
    "text": "net you can bring up a sage maker notebook which will have all of these libraries pre-installed on it so you",
    "start": "1589450",
    "end": "1595269"
  },
  {
    "text": "don't have to go through the hassle of you know downloading libraries and some cases you have to you know compile GCC",
    "start": "1595269",
    "end": "1603309"
  },
  {
    "text": "compiler servers that are ready to go that you can just get started with and",
    "start": "1603309",
    "end": "1608740"
  },
  {
    "text": "then we also have the deep learning ami so if you want to just launch an ec2 instance you can just use the deep learning ami and all of these these",
    "start": "1608740",
    "end": "1614440"
  },
  {
    "text": "frameworks are packaged on the ami stage",
    "start": "1614440",
    "end": "1621399"
  },
  {
    "text": "maker is a managed service yes yep so we're going to build in this example a",
    "start": "1621399",
    "end": "1627370"
  },
  {
    "text": "simple image classification this is a digit classification so it's a",
    "start": "1627370",
    "end": "1633460"
  },
  {
    "text": "convolutional neural net it looks like it's got two two convolutional layers two pooling layers and then in several",
    "start": "1633460",
    "end": "1639700"
  },
  {
    "text": "fully connected layers and this is a classic machine learning problem it's almost like the hello world of machine",
    "start": "1639700",
    "end": "1646360"
  },
  {
    "text": "learning or deep learning which is the MS NIST which is a handwritten digits",
    "start": "1646360",
    "end": "1652179"
  },
  {
    "text": "from 0 to 0 to 9 so you can almost imagine this is like a primitive optical character recognition task so this is",
    "start": "1652179",
    "end": "1662710"
  },
  {
    "text": "all it takes to implement this neural net in MX net using the gluon library",
    "start": "1662710",
    "end": "1667899"
  },
  {
    "text": "and I highly recommend if you're gonna get started with MX net you you do use something like glue on because the the",
    "start": "1667899",
    "end": "1674950"
  },
  {
    "text": "MX net language or the MX net syntax itself uses a declarative programming",
    "start": "1674950",
    "end": "1680200"
  },
  {
    "text": "style which is going to feel a little odd to folks that are used to sort of more traditional Python programming but",
    "start": "1680200",
    "end": "1686289"
  },
  {
    "text": "with glue on you can basically sort of write more familiar feeling code and so",
    "start": "1686289",
    "end": "1692500"
  },
  {
    "text": "you can see here what we're doing is we're creating a sequential neural net and then we're adding",
    "start": "1692500",
    "end": "1699040"
  },
  {
    "text": "a the layers right so we've got a convolutional 2d layer and then we've got a pooling layer then we have another",
    "start": "1699040",
    "end": "1704860"
  },
  {
    "text": "2d layer then we have another pooling layer then we're going to flatten them out so all that does is basically take",
    "start": "1704860",
    "end": "1709960"
  },
  {
    "text": "the multi-dimensional arrays and flatten them into a two by two array and then we",
    "start": "1709960",
    "end": "1715960"
  },
  {
    "text": "have some fully connected layers at the end and you can see the final layer is the output layer which has ten outputs",
    "start": "1715960",
    "end": "1722890"
  },
  {
    "text": "one for each digit sure so channels are basically the if you can",
    "start": "1722890",
    "end": "1732280"
  },
  {
    "text": "think if you're dealing with like a red green and blue image you would you would have three channels one for each color",
    "start": "1732280",
    "end": "1738670"
  },
  {
    "text": "in this case where I think we're basically saying we want six six filters right so we're creating six six channels",
    "start": "1738670",
    "end": "1744970"
  },
  {
    "text": "for the initial convolutional layer the pooling layer what you do there is you",
    "start": "1744970",
    "end": "1750520"
  },
  {
    "text": "you take the output from applying the filter and you use you grab the maximum",
    "start": "1750520",
    "end": "1755890"
  },
  {
    "text": "value right so you're essentially down sampling your data with the pooling layer and the strides are how you're",
    "start": "1755890",
    "end": "1764350"
  },
  {
    "text": "moving basically how you're how you're moving the pooling window over the data",
    "start": "1764350",
    "end": "1769690"
  },
  {
    "text": "and same thing for the convolutional layer activation is the activation",
    "start": "1769690",
    "end": "1775210"
  },
  {
    "text": "function so as I mentioned earlier you're gonna use some kind of nonlinear function in this case we're using rail U which stands for rectified linear unit",
    "start": "1775210",
    "end": "1782070"
  },
  {
    "text": "which is kind of like a sigmoid function but instead of asymptoting at zero and",
    "start": "1782070",
    "end": "1789160"
  },
  {
    "text": "one it's just gonna be a max it'll either be zero or it'll be it'll be one it's just a better function to use",
    "start": "1789160",
    "end": "1796110"
  },
  {
    "text": "because you don't have to worry about slopes that are close to zero on the",
    "start": "1796110",
    "end": "1801730"
  },
  {
    "text": "asymptotes and then we do that again and then we flatten everything and then we",
    "start": "1801730",
    "end": "1807640"
  },
  {
    "text": "go into our first dense layer which has 120 neurons the next dense layer has 84",
    "start": "1807640",
    "end": "1812800"
  },
  {
    "text": "neurons and the final one has 10 and again remember that we want 10 in the last one because we're trying to classify 0 to 9 digits right so that's",
    "start": "1812800",
    "end": "1819370"
  },
  {
    "text": "10 total so this is this is this is you know most neural nets that you code with",
    "start": "1819370",
    "end": "1825160"
  },
  {
    "text": "with glue on are going to look like this oh yeah so kernel size is the size of",
    "start": "1825160",
    "end": "1831550"
  },
  {
    "text": "the filter so it's basically we're saying a five-by-five filter and then the stride is how many cells you're moving the",
    "start": "1831550",
    "end": "1839710"
  },
  {
    "text": "filter each time right okay so that",
    "start": "1839710",
    "end": "1846070"
  },
  {
    "text": "that's the model that that's the model architecture so now let's get into the",
    "start": "1846070",
    "end": "1852150"
  },
  {
    "text": "the actual learning part of it right so in this case we define a loss function",
    "start": "1852150",
    "end": "1858400"
  },
  {
    "text": "in this case we're gonna use cross-entropy loss very common function if you're doing classification and then",
    "start": "1858400",
    "end": "1865510"
  },
  {
    "text": "we basically create a trainer and we tell it we're gonna use SGD as the",
    "start": "1865510",
    "end": "1872460"
  },
  {
    "text": "method the learning method or the optimization method that stands for stochastic a stick gradient descent and",
    "start": "1872460",
    "end": "1879490"
  },
  {
    "text": "then we iterate over each epoch right remember Epoque is the entire training",
    "start": "1879490",
    "end": "1885220"
  },
  {
    "text": "data set so we can say let's say we want to do this five total times we get our",
    "start": "1885220",
    "end": "1890820"
  },
  {
    "text": "training examples that's capital X we get our labeled ground truth which is",
    "start": "1890820",
    "end": "1898030"
  },
  {
    "text": "why and then we essentially compute our predicted value we compute our loss and",
    "start": "1898030",
    "end": "1905980"
  },
  {
    "text": "that y hat equals net X that's the forward propagation through the network so what we're doing there is we're",
    "start": "1905980",
    "end": "1911890"
  },
  {
    "text": "actually pushing the data through the network we're getting a prediction then we compute the loss based on that prediction and then we call loss",
    "start": "1911890",
    "end": "1918430"
  },
  {
    "text": "backward which basically does the backward propagation through the network and so it's basically doing the the",
    "start": "1918430",
    "end": "1927430"
  },
  {
    "text": "that's where the weights are getting updated that's where the coefficients are actually updating so you don't have to write any of that that code yourself",
    "start": "1927430",
    "end": "1933630"
  },
  {
    "text": "it's all handled for you here the reason why you have that with statement where",
    "start": "1933630",
    "end": "1938680"
  },
  {
    "text": "it says Auto grad dot record because you only want to do this during training",
    "start": "1938680",
    "end": "1944440"
  },
  {
    "text": "right you don't need the gradients when you're doing inferences so when you're doing inferences you just do forward",
    "start": "1944440",
    "end": "1950620"
  },
  {
    "text": "propagation right because by then you have a fully trained model then all you're doing is you just want a prediction but when you're doing",
    "start": "1950620",
    "end": "1955690"
  },
  {
    "text": "training you need to basically do this backward propagation step to learn the",
    "start": "1955690",
    "end": "1960730"
  },
  {
    "text": "weights and then we just step through it for each batch right so what you",
    "start": "1960730",
    "end": "1966380"
  },
  {
    "text": "as you break your training examples up into batches and so each epoch consists of a number of batches you run each",
    "start": "1966380",
    "end": "1974630"
  },
  {
    "text": "batch through the model both forward propagation back propagation and ideally at the end you'll end up with a",
    "start": "1974630",
    "end": "1980480"
  },
  {
    "text": "optimized loss you don't actually see",
    "start": "1980480",
    "end": "1985880"
  },
  {
    "text": "the weights here they're stored you know they're basically stored in a tensor",
    "start": "1985880",
    "end": "1991810"
  },
  {
    "text": "object that's kind of hidden hidden from you right so that that's what's really nice about using these these",
    "start": "1991810",
    "end": "1998980"
  },
  {
    "text": "higher-level frameworks is you don't actually have to keep track of all those vectors of weights you do see that net",
    "start": "1998980",
    "end": "2004480"
  },
  {
    "text": "collect params call up there that's essentially saying give me all the the weights so it based on the structure of",
    "start": "2004480",
    "end": "2011230"
  },
  {
    "text": "the neural net it vector eise's all the weights and passes it in to the trainer but it's hidden from you completely so",
    "start": "2011230",
    "end": "2017710"
  },
  {
    "text": "you don't actually have to interact with them directly yeah and in one of those method calls",
    "start": "2017710",
    "end": "2025360"
  },
  {
    "text": "it's storing some data somewhere yeah absolutely you can get to the weights if",
    "start": "2025360",
    "end": "2032890"
  },
  {
    "text": "you want them yes absolutely okay so one one thing that's really",
    "start": "2032890",
    "end": "2040180"
  },
  {
    "text": "really common is especially in well-understood areas like computer vision is you don't really have to start",
    "start": "2040180",
    "end": "2046840"
  },
  {
    "text": "from scratch so there's a lot of really good models that are out there already so you can use a pre trained model and",
    "start": "2046840",
    "end": "2052929"
  },
  {
    "text": "you can you know they're called models OU's are these sort of collections of models so you can find a model that",
    "start": "2052929",
    "end": "2058270"
  },
  {
    "text": "already exists and then you can do something called fine tuning so fine tuning you can imagine is you know let's",
    "start": "2058270",
    "end": "2063790"
  },
  {
    "text": "say you have image classification you know it can classify you know ResNet can do what ten thousand different images if you only care about five of those what",
    "start": "2063790",
    "end": "2070810"
  },
  {
    "text": "you do is you just feed it a whole bunch of new training examples of just the five that you care about and the model just sort of gets better at classifying",
    "start": "2070810",
    "end": "2076990"
  },
  {
    "text": "those five so you you rarely even need to start from scratch here and that's something called transfer learning the",
    "start": "2076990",
    "end": "2083590"
  },
  {
    "text": "other the other terminology for it is auto ml right so you start with an existing model and then you can fine-tune it for your purpose and with",
    "start": "2083590",
    "end": "2092350"
  },
  {
    "text": "glue on what's nice is you can actually pull these models in so you can basically say hey you know I want to do in this classification I just you know",
    "start": "2092350",
    "end": "2098740"
  },
  {
    "text": "there method call to download you know these these pre-trained models and then typically what you do is you just detach",
    "start": "2098740",
    "end": "2104850"
  },
  {
    "text": "one of the layers and then put your your output layer on and then it fine Tunes the weights with what the data you're",
    "start": "2104850",
    "end": "2110820"
  },
  {
    "text": "using sorry yeah there's a number of",
    "start": "2110820",
    "end": "2121710"
  },
  {
    "text": "different formats that that these models can be stored and I'm not sure what",
    "start": "2121710",
    "end": "2127110"
  },
  {
    "text": "gluon is using but it has its own sort of repository yeah and so you can see here like I'm grabbing ResNet 18 version",
    "start": "2127110",
    "end": "2133650"
  },
  {
    "text": "one and I'm telling it it's pre pre trained is true and you can see I can just actually invoke that model right",
    "start": "2133650",
    "end": "2140250"
  },
  {
    "text": "away on my data right I don't need to actually define a new architecture and",
    "start": "2140250",
    "end": "2148650"
  },
  {
    "text": "once we have it we can deploy it right so we have a number of different ways to do it sage maker if you're you know if",
    "start": "2148650",
    "end": "2155400"
  },
  {
    "text": "you want a managed service if you're doing IOT you want to do inferences on a on a device ec2 ECS for containers",
    "start": "2155400",
    "end": "2162570"
  },
  {
    "text": "mobile devices or whatever you can dream up all right so this is just really how",
    "start": "2162570",
    "end": "2171870"
  },
  {
    "text": "you do you know you would call a a deployed model and this this is just some Java code and we'll get into the",
    "start": "2171870",
    "end": "2178350"
  },
  {
    "text": "then the next part of the talk which I want to get to will go into sort of how you you optimize inferences so but in",
    "start": "2178350",
    "end": "2185520"
  },
  {
    "text": "this case we're just we're just calling a we're getting a prediction from a deployed model all right",
    "start": "2185520",
    "end": "2193310"
  },
  {
    "text": "you can yeah so typically what you do is you put the model out on a like a rest endpoint and then you just have whatever",
    "start": "2195180",
    "end": "2201220"
  },
  {
    "text": "language you want consume the predictions off the endpoint yep these are just some of the industries that are",
    "start": "2201220",
    "end": "2207910"
  },
  {
    "text": "using deep learning and if you want to get started the you know these URLs are",
    "start": "2207910",
    "end": "2213640"
  },
  {
    "text": "great I like the the gluon tutorials you just bring up a Python notebook and",
    "start": "2213640",
    "end": "2219040"
  },
  {
    "text": "you're good to go all right and we will hand it over to Samsung Thank You Kate",
    "start": "2219040",
    "end": "2232510"
  },
  {
    "text": "hi I'm Sanjay Minh I work at Samsung SDS Samsung SDS is one of the Samsung group",
    "start": "2232510",
    "end": "2239800"
  },
  {
    "text": "company and I'm heading the data analytics Center at Samsung SDS we do",
    "start": "2239800",
    "end": "2246000"
  },
  {
    "text": "deep learning R&D and in three areas one is the visual data depending on the data",
    "start": "2246000",
    "end": "2253660"
  },
  {
    "text": "we have three areas one is the visual data like object recognition you tell if it's a cat or dog second one is a",
    "start": "2253660",
    "end": "2259900"
  },
  {
    "text": "textual data it's a natural language processing the third area is a times use",
    "start": "2259900",
    "end": "2265600"
  },
  {
    "text": "data so in time series data one of the example is cardiac arrhythmia detection",
    "start": "2265600",
    "end": "2270640"
  },
  {
    "text": "so what I'm going to talk about today the deep learning techniques and methodologies I'm going to present today",
    "start": "2270640",
    "end": "2278440"
  },
  {
    "text": "it can be applied to other time series data analysis for example the speech",
    "start": "2278440",
    "end": "2283960"
  },
  {
    "text": "recognition we use it for the smart home appliances and second use case could be",
    "start": "2283960",
    "end": "2291030"
  },
  {
    "text": "normally detection we have a lot of sensor data is from manufacturing line and also the sales forecasting of using",
    "start": "2291030",
    "end": "2301150"
  },
  {
    "text": "the marketing data so I will talk about main main use case would I mean the",
    "start": "2301150",
    "end": "2308310"
  },
  {
    "text": "example is a cardiac arrhythmia so what is cardiac arrhythmia is a group of",
    "start": "2308310",
    "end": "2314500"
  },
  {
    "text": "conditions in which the heartbeat is regular too fast or too slow and the top",
    "start": "2314500",
    "end": "2321700"
  },
  {
    "text": "left graph shows the the electrical activity that is recorded using",
    "start": "2321700",
    "end": "2327700"
  },
  {
    "text": "throws place on on your scheme and this signal is called ECG electrocardiogram P",
    "start": "2327700",
    "end": "2337079"
  },
  {
    "text": "and the top-right graph is the schematic diagram of the normal heartbeat as seen",
    "start": "2337079",
    "end": "2343630"
  },
  {
    "text": "on ECG and the bottom one is the monitoring screen that we captured so",
    "start": "2343630",
    "end": "2350170"
  },
  {
    "text": "now why we want to use apply dip learning in cardiac arrhythmia detection",
    "start": "2350170",
    "end": "2356490"
  },
  {
    "text": "the challenge is that over 300 million ECGs are recorded annually and each ECG",
    "start": "2356490",
    "end": "2363040"
  },
  {
    "text": "data usually 24-hour recording from one person is more than 80,000 heart paths",
    "start": "2363040",
    "end": "2371950"
  },
  {
    "text": "which is a large amount of data and for doctors like clinicians and",
    "start": "2371950",
    "end": "2376960"
  },
  {
    "text": "cardiologists they need to examine all these heartbeats to tell if you have a arrhythmia or not",
    "start": "2376960",
    "end": "2384490"
  },
  {
    "text": "which is a very time-consuming and the fact is that if the heart has a rhythmic",
    "start": "2384490",
    "end": "2391420"
  },
  {
    "text": "condition that only 2.5 percent of the heart beats will show irregular pattern",
    "start": "2391420",
    "end": "2398170"
  },
  {
    "text": "and all other 97.5% will look normal so",
    "start": "2398170",
    "end": "2403450"
  },
  {
    "text": "what if AI and de belem in technique can pinpoint these irregular patterns and",
    "start": "2403450",
    "end": "2409839"
  },
  {
    "text": "mark them then our doctors can only examine these parts which will",
    "start": "2409839",
    "end": "2415000"
  },
  {
    "text": "significantly reduce the time of clinicians and cardiologists it will",
    "start": "2415000",
    "end": "2421359"
  },
  {
    "text": "also increase the accuracy of the diagnosis because they can focus only those parts so that's the motivation",
    "start": "2421359",
    "end": "2429059"
  },
  {
    "text": "then why not use traditional machine lying why we are we prefer deep learning",
    "start": "2429059",
    "end": "2434670"
  },
  {
    "text": "when we detect this cardio I mean cardiac arrhythmia the first",
    "start": "2434670",
    "end": "2440740"
  },
  {
    "text": "reason is that there are 40 different types of arrhythmia there are so many and one of two of them I'm showing here",
    "start": "2440740",
    "end": "2447220"
  },
  {
    "text": "that each heartbeat that are marked by alphabet V is called ventricular",
    "start": "2447220",
    "end": "2454210"
  },
  {
    "text": "tachycardia is when you have an abnormal electrical signal from the lower chambers of your heart",
    "start": "2454210",
    "end": "2460780"
  },
  {
    "text": "I guess faster that it has marked SSB the bottom one is called atrial",
    "start": "2460780",
    "end": "2466510"
  },
  {
    "text": "fibrillation also known as a fib we can tell that the interval between",
    "start": "2466510",
    "end": "2472150"
  },
  {
    "text": "the heartbeats are different so the intervals are irregular we call this one",
    "start": "2472150",
    "end": "2477280"
  },
  {
    "text": "a fib here these two obvious ones you can tell the difference I mean you can",
    "start": "2477280",
    "end": "2482350"
  },
  {
    "text": "find what are the features that can differentiate these different types of arrhythmia but there are so many there",
    "start": "2482350",
    "end": "2489820"
  },
  {
    "text": "are 40 of them and it's very difficult to extract these features and how they",
    "start": "2489820",
    "end": "2496870"
  },
  {
    "text": "are different so if you are applying machine learning you have to do it manually you have to view have a very",
    "start": "2496870",
    "end": "2502690"
  },
  {
    "text": "high level of expertise in extracting features from this kind of data but if",
    "start": "2502690",
    "end": "2507880"
  },
  {
    "text": "you are applying deep learning deep learning will do that for you it's called automatic feature extraction so",
    "start": "2507880",
    "end": "2513970"
  },
  {
    "text": "you just provide this data with labels meaning data plus answers then the deep",
    "start": "2513970",
    "end": "2521770"
  },
  {
    "text": "learning will do the automatically extracted features and you can use that second reason is this now I just talked",
    "start": "2521770",
    "end": "2531280"
  },
  {
    "text": "about the irregular case even for the normal case there are so many data for",
    "start": "2531280",
    "end": "2536590"
  },
  {
    "text": "example here the top graph is about inverted T that usually the T graph T",
    "start": "2536590",
    "end": "2542200"
  },
  {
    "text": "wave has a positive amplitude but this person has a negative amplitude but for",
    "start": "2542200",
    "end": "2549130"
  },
  {
    "text": "him this is a normal heartbeat for him maybe this is caused by the hyperkalemia",
    "start": "2549130",
    "end": "2554620"
  },
  {
    "text": "but this is his normal happy everyday the bottom one is called large T case",
    "start": "2554620",
    "end": "2560050"
  },
  {
    "text": "because the T wave is larger than ARCIC but also this is his normal heartbeat",
    "start": "2560050",
    "end": "2566380"
  },
  {
    "text": "now our task is we have to include the even these weird cases as a normal case",
    "start": "2566380",
    "end": "2573040"
  },
  {
    "text": "so it means that there are so many input data we need to Train and what good I",
    "start": "2573040",
    "end": "2582070"
  },
  {
    "text": "mean deep learning do does better than machine learning is that it has a higher capacity usually if you increase the",
    "start": "2582070",
    "end": "2588370"
  },
  {
    "text": "input data size the accuracy of the your trained model will increase proportionally but at certain point",
    "start": "2588370",
    "end": "2594980"
  },
  {
    "text": "no matter how you increase the data it will reach a saturation point the",
    "start": "2594980",
    "end": "2600410"
  },
  {
    "text": "difference between machine learning and deep learning is that dem Lonny will reach the saturation point way later",
    "start": "2600410",
    "end": "2605869"
  },
  {
    "text": "than the machine learning so you can train more data so that's why but deep",
    "start": "2605869",
    "end": "2611330"
  },
  {
    "text": "learning in this case with complex data set dip learning will do better than a machine learning now I'm gonna start",
    "start": "2611330",
    "end": "2620000"
  },
  {
    "text": "talking about how we apply deep learning for detecting arrhythmia so the input is",
    "start": "2620000",
    "end": "2625790"
  },
  {
    "text": "like this kind of time series data that the back a gray background we apply this",
    "start": "2625790",
    "end": "2631490"
  },
  {
    "text": "time window and we perform this fast Fourier transform then it will translate",
    "start": "2631490",
    "end": "2638359"
  },
  {
    "text": "the data time domain data into the frequency domain data and you slide this",
    "start": "2638359",
    "end": "2644390"
  },
  {
    "text": "window time window to the right and then you will get this consecutive frequency",
    "start": "2644390",
    "end": "2650540"
  },
  {
    "text": "information if you append them all you got the middle figure which is a two dimensional image now you can apply the",
    "start": "2650540",
    "end": "2656470"
  },
  {
    "text": "convolutional neural network here we train the convolutional neural network to output generate these features so",
    "start": "2656470",
    "end": "2664520"
  },
  {
    "text": "this is what we call automatic features generation this doesn't look meaningful for a human",
    "start": "2664520",
    "end": "2671090"
  },
  {
    "text": "eye but this is the most representative features that will tell the difference",
    "start": "2671090",
    "end": "2676580"
  },
  {
    "text": "between these arrhythmia patterns now we're going to use these features as an",
    "start": "2676580",
    "end": "2683270"
  },
  {
    "text": "input to the RNN as Natan described what our enemies are n is as good as",
    "start": "2683270",
    "end": "2689410"
  },
  {
    "text": "recognizing the sequence data time series data so these features are 90",
    "start": "2689410",
    "end": "2695240"
  },
  {
    "text": "degree clockwise rotated so the top one is the only one the bottom one is the later one so you feed that data feed",
    "start": "2695240",
    "end": "2702980"
  },
  {
    "text": "that input to the RNA there are two networks one is the forward Network the",
    "start": "2702980",
    "end": "2707990"
  },
  {
    "text": "other is a backward Network the reason we have to network is that we want to have captured the relationship between",
    "start": "2707990",
    "end": "2714820"
  },
  {
    "text": "previous heartbeat to the next harpy also next heartbeat to the previous",
    "start": "2714820",
    "end": "2720800"
  },
  {
    "text": "heartbeat so we need both directions and we combine this information and use it",
    "start": "2720800",
    "end": "2725990"
  },
  {
    "text": "as a input classifier then this classifier will generate which one of the 40 different",
    "start": "2725990",
    "end": "2732640"
  },
  {
    "text": "rhythmic patterns so that's how that's the architecture of our deep learning",
    "start": "2732640",
    "end": "2738640"
  },
  {
    "text": "now once train is done you have to deploy in a actual system the production",
    "start": "2738640",
    "end": "2746330"
  },
  {
    "text": "level there are many different types but this is one which we tested so the patch",
    "start": "2746330",
    "end": "2752030"
  },
  {
    "text": "is attached to near your heart or around your wrist and it will record the ECG",
    "start": "2752030",
    "end": "2760610"
  },
  {
    "text": "graph and it'll be stored on your mobile device and mobile your mobile device",
    "start": "2760610",
    "end": "2767090"
  },
  {
    "text": "depending on the setting you can upload periodically to the cloud or whenever it has a Wi-Fi access",
    "start": "2767090",
    "end": "2773360"
  },
  {
    "text": "they will upload to the cloud and we will perform the inference which is",
    "start": "2773360",
    "end": "2778430"
  },
  {
    "text": "analyzing this 24-hour data and then this result will be sent to the hospital",
    "start": "2778430",
    "end": "2784390"
  },
  {
    "text": "so this is the screencaps screenshot of our system that every red heart beats",
    "start": "2784390",
    "end": "2792080"
  },
  {
    "text": "are the ones that we want the doctors to look very carefully and then the doctors",
    "start": "2792080",
    "end": "2797990"
  },
  {
    "text": "can zoom in and zoom out to see if if they're realistic my parents were not",
    "start": "2797990",
    "end": "2805060"
  },
  {
    "text": "use cases ranging from first responder monitoring elderly care to sports performance tracking now I'm going to",
    "start": "2805060",
    "end": "2813470"
  },
  {
    "text": "talk about how we fine-tune the inferencing so when we run it on p2 then",
    "start": "2813470",
    "end": "2822290"
  },
  {
    "text": "on so forth for C GPUs it took 20 minutes 1-0 80 minutes and when we run",
    "start": "2822290",
    "end": "2828320"
  },
  {
    "text": "it on c5 it took like hundred twenty minutes so the customers may want just",
    "start": "2828320",
    "end": "2835850"
  },
  {
    "text": "GPU or they want CPU so we wanted to reduce the CPU time which is from hundred twenty minutes to",
    "start": "2835850",
    "end": "2844580"
  },
  {
    "text": "less than five minutes so that was first our first optimization goal but we",
    "start": "2844580",
    "end": "2850790"
  },
  {
    "text": "didn't want to sacrifice the accuracy target accuracy so the accuracy that we",
    "start": "2850790",
    "end": "2855890"
  },
  {
    "text": "are obtained at this status we want to keep that one so that's out",
    "start": "2855890",
    "end": "2861270"
  },
  {
    "text": "was our goal optimization goal and this is our journey to this in France and time optimization so there are two lines",
    "start": "2861270",
    "end": "2870480"
  },
  {
    "text": "one is a blue one and blue one is the latency so it's starting from 120",
    "start": "2870480",
    "end": "2877530"
  },
  {
    "text": "minutes and after eight steps of optimization we wish to under three",
    "start": "2877530",
    "end": "2882780"
  },
  {
    "text": "minutes so lower the batter because it's a latency red one is the relative target",
    "start": "2882780",
    "end": "2889910"
  },
  {
    "text": "accuracy so we started from the the right y-axis hundred percent and you",
    "start": "2889910",
    "end": "2896910"
  },
  {
    "text": "apply the optimization to reduce the latency sometimes the performance of accuracy de grâce but in the end we went",
    "start": "2896910",
    "end": "2905490"
  },
  {
    "text": "back to hundred percent so I'm gonna just talk a little bit just one or two example here the first column leftmost",
    "start": "2905490",
    "end": "2911850"
  },
  {
    "text": "column we have 16 CPUs bi-directional GRU algorithm 256 sampling rate so in",
    "start": "2911850",
    "end": "2918810"
  },
  {
    "text": "order to reduce the latency time the second column the yellow text says that",
    "start": "2918810",
    "end": "2924680"
  },
  {
    "text": "we reduced the sampling from 256 to 128 so the data size is reduced to 1/2",
    "start": "2924680",
    "end": "2931740"
  },
  {
    "text": "that's why we have a inference time is reduced by half so then since the data",
    "start": "2931740",
    "end": "2939900"
  },
  {
    "text": "is small our accuracy dropped also that's not what we want so we do",
    "start": "2939900",
    "end": "2945540"
  },
  {
    "text": "multiple optimization we keep in reducing the latency time but also later",
    "start": "2945540",
    "end": "2951990"
  },
  {
    "text": "like step seven we apply some optimization to increase the accuracy",
    "start": "2951990",
    "end": "2957720"
  },
  {
    "text": "so there we apply yellow Texas auto data balancing because usually you have a lot",
    "start": "2957720",
    "end": "2963900"
  },
  {
    "text": "of normal case data but small arrhythmia",
    "start": "2963900",
    "end": "2969180"
  },
  {
    "text": "case so when we do the each training every at Apple we used a similar sized",
    "start": "2969180",
    "end": "2975150"
  },
  {
    "text": "data we randomly sample from the normal case so that that kind of optimization",
    "start": "2975150",
    "end": "2980580"
  },
  {
    "text": "really help this kind of performance improvement so for your data and your",
    "start": "2980580",
    "end": "2986640"
  },
  {
    "text": "use case will be different but applying this you will go through this kind of similar pattern",
    "start": "2986640",
    "end": "2992430"
  },
  {
    "text": "to get the final result so this is one example and finally this is a kind of",
    "start": "2992430",
    "end": "3001670"
  },
  {
    "text": "ongoing future work if you are data",
    "start": "3001670",
    "end": "3006710"
  },
  {
    "text": "scientists and with programming background you can do Tyson coding to run many frameworks but if you are a",
    "start": "3006710",
    "end": "3014000"
  },
  {
    "text": "domain expert and you just want to apply AI to you to your domain then instead of",
    "start": "3014000",
    "end": "3020570"
  },
  {
    "text": "doing any typing you can just use the visual programming model like this this is called brightest Samsung as Tess is",
    "start": "3020570",
    "end": "3027170"
  },
  {
    "text": "developing that here the magenta color node that that's the input you can",
    "start": "3027170",
    "end": "3034220"
  },
  {
    "text": "specify the which region like east us we east or us west region of where you want",
    "start": "3034220",
    "end": "3040790"
  },
  {
    "text": "to deploy your imagine instances and then once once you select this one you",
    "start": "3040790",
    "end": "3048590"
  },
  {
    "text": "apply some dip learning model and the sage maker will return the result and",
    "start": "3048590",
    "end": "3054770"
  },
  {
    "text": "you can see the output and see if we need for that tuning point here so this",
    "start": "3054770",
    "end": "3059900"
  },
  {
    "text": "is an interface to not only the Amazon stage maker we're also planning to",
    "start": "3059900",
    "end": "3065950"
  },
  {
    "text": "connect to the MX net so that you can do the visual programming here so I think",
    "start": "3065950",
    "end": "3073480"
  },
  {
    "text": "that's the end back to unique",
    "start": "3073480",
    "end": "3080230"
  },
  {
    "text": "thank you okay so we have a few minutes",
    "start": "3081470",
    "end": "3087300"
  },
  {
    "text": "left so we can do a little bit of QA real quick before that though please take the survey you which you can do",
    "start": "3087300",
    "end": "3093210"
  },
  {
    "text": "through the mobile app so we do use the survey data to inform what we'll do for",
    "start": "3093210",
    "end": "3099990"
  },
  {
    "text": "the upcoming events like this and thanks so much for coming and if you have",
    "start": "3099990",
    "end": "3105720"
  },
  {
    "text": "questions I guess you know we'll we'll hang out for a little bit over on the side here and for those that want to go",
    "start": "3105720",
    "end": "3111690"
  },
  {
    "text": "find the pub crawl I completely understand thank you [Applause]",
    "start": "3111690",
    "end": "3121449"
  }
]