[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "in this video you'll learn how to deploy",
    "start": "399",
    "end": "2240"
  },
  {
    "text": "applications using aws service catalog",
    "start": "2240",
    "end": "4640"
  },
  {
    "text": "product chaining",
    "start": "4640",
    "end": "6160"
  },
  {
    "text": "with this capability administrators can",
    "start": "6160",
    "end": "8240"
  },
  {
    "text": "provide approved templates for standard",
    "start": "8240",
    "end": "10000"
  },
  {
    "text": "aws resources through service catalog",
    "start": "10000",
    "end": "12960"
  },
  {
    "text": "developers can then chain service",
    "start": "12960",
    "end": "14480"
  },
  {
    "text": "catalog products to integrate their",
    "start": "14480",
    "end": "16160"
  },
  {
    "text": "applications or business logic on top of",
    "start": "16160",
    "end": "18320"
  },
  {
    "text": "these base resources",
    "start": "18320",
    "end": "19520"
  },
  {
    "text": "quickly and securely to get started",
    "start": "19520",
    "end": "22560"
  },
  {
    "start": "21000",
    "end": "52000"
  },
  {
    "text": "let's go to service catalog",
    "start": "22560",
    "end": "25840"
  },
  {
    "text": "for our purposes a portfolio of service",
    "start": "26400",
    "end": "28560"
  },
  {
    "text": "catalog products has already been",
    "start": "28560",
    "end": "30000"
  },
  {
    "text": "configured we're going to look at three",
    "start": "30000",
    "end": "32640"
  },
  {
    "text": "examples of product chaining",
    "start": "32640",
    "end": "34480"
  },
  {
    "text": "in this first example we'll deploy a",
    "start": "34480",
    "end": "36320"
  },
  {
    "text": "simple network using a service catalog",
    "start": "36320",
    "end": "38160"
  },
  {
    "text": "product that provisions an amazon",
    "start": "38160",
    "end": "39760"
  },
  {
    "text": "virtual private cloud or amazon vpc",
    "start": "39760",
    "end": "42399"
  },
  {
    "text": "with subnets let's see how we can use",
    "start": "42399",
    "end": "45200"
  },
  {
    "text": "the cloudformation template to chain the",
    "start": "45200",
    "end": "46879"
  },
  {
    "text": "provision service catalog products",
    "start": "46879",
    "end": "50640"
  },
  {
    "text": "here you can see two cloudformation",
    "start": "52399",
    "end": "54000"
  },
  {
    "text": "templates side by side",
    "start": "54000",
    "end": "55920"
  },
  {
    "text": "on the right you can see the service",
    "start": "55920",
    "end": "57280"
  },
  {
    "text": "catalog template for a vpc product",
    "start": "57280",
    "end": "59840"
  },
  {
    "text": "on the left is the cloud formation",
    "start": "59840",
    "end": "61280"
  },
  {
    "text": "template for the complete network we",
    "start": "61280",
    "end": "62800"
  },
  {
    "text": "want to deploy",
    "start": "62800",
    "end": "65440"
  },
  {
    "text": "each service catalog product can output",
    "start": "66080",
    "end": "68080"
  },
  {
    "text": "values that can be consumed by other",
    "start": "68080",
    "end": "69760"
  },
  {
    "text": "service catalog",
    "start": "69760",
    "end": "70640"
  },
  {
    "text": "products in this example the vpc product",
    "start": "70640",
    "end": "73760"
  },
  {
    "text": "outputs a vpc id value",
    "start": "73760",
    "end": "76320"
  },
  {
    "text": "this can be used as an input to the",
    "start": "76320",
    "end": "77920"
  },
  {
    "text": "service catalog subnet product",
    "start": "77920",
    "end": "87840"
  },
  {
    "text": "our cloudformation template will",
    "start": "89840",
    "end": "91360"
  },
  {
    "text": "provision the service catalog vpc",
    "start": "91360",
    "end": "93280"
  },
  {
    "text": "product first",
    "start": "93280",
    "end": "94320"
  },
  {
    "text": "and then take the output vpc id and pass",
    "start": "94320",
    "end": "96880"
  },
  {
    "text": "it to the subnet product",
    "start": "96880",
    "end": "98720"
  },
  {
    "text": "this action is product chaining",
    "start": "98720",
    "end": "102400"
  },
  {
    "text": "the get at function enables cloud",
    "start": "103759",
    "end": "105520"
  },
  {
    "text": "formation to extract the output value",
    "start": "105520",
    "end": "107439"
  },
  {
    "text": "from the service catalog product",
    "start": "107439",
    "end": "109920"
  },
  {
    "text": "here you can see the syntax for the",
    "start": "109920",
    "end": "111520"
  },
  {
    "text": "function the parameters are simply the",
    "start": "111520",
    "end": "113759"
  },
  {
    "text": "resource name and the output name",
    "start": "113759",
    "end": "117439"
  },
  {
    "text": "here you can see product chaining for",
    "start": "122479",
    "end": "124000"
  },
  {
    "text": "another subnet",
    "start": "124000",
    "end": "126799"
  },
  {
    "text": "let's look at another example of product",
    "start": "127680",
    "end": "129440"
  },
  {
    "text": "chaining where the vpc is chained to a",
    "start": "129440",
    "end": "131599"
  },
  {
    "text": "route table",
    "start": "131599",
    "end": "133280"
  },
  {
    "text": "notice that the route table product is",
    "start": "133280",
    "end": "134959"
  },
  {
    "text": "referencing the vpc id",
    "start": "134959",
    "end": "142400"
  },
  {
    "text": "and the route table association is",
    "start": "142400",
    "end": "144160"
  },
  {
    "text": "referencing the subnet id",
    "start": "144160",
    "end": "147520"
  },
  {
    "text": "now let's take a look at a more complex",
    "start": "148640",
    "end": "150319"
  },
  {
    "text": "example",
    "start": "150319",
    "end": "152720"
  },
  {
    "start": "152000",
    "end": "328000"
  },
  {
    "text": "we are looking at the same template in",
    "start": "152879",
    "end": "154319"
  },
  {
    "text": "both panes so we can look at different",
    "start": "154319",
    "end": "156000"
  },
  {
    "text": "parts of it at the same time this is a",
    "start": "156000",
    "end": "158720"
  },
  {
    "text": "cloud formation template that will",
    "start": "158720",
    "end": "160160"
  },
  {
    "text": "provision a data pipeline using kinesis",
    "start": "160160",
    "end": "162480"
  },
  {
    "text": "to handle real-time data streams from a",
    "start": "162480",
    "end": "164560"
  },
  {
    "text": "variety of aws resources",
    "start": "164560",
    "end": "167519"
  },
  {
    "text": "note that this cloud formation stack",
    "start": "167519",
    "end": "169120"
  },
  {
    "text": "will use the network created from the",
    "start": "169120",
    "end": "170560"
  },
  {
    "text": "template we looked at earlier",
    "start": "170560",
    "end": "172319"
  },
  {
    "text": "the first service catalog product",
    "start": "172319",
    "end": "174000"
  },
  {
    "text": "provisioned in this template is a key",
    "start": "174000",
    "end": "175840"
  },
  {
    "text": "management service or kms",
    "start": "175840",
    "end": "177599"
  },
  {
    "text": "key resource used to encrypt data",
    "start": "177599",
    "end": "179840"
  },
  {
    "text": "transfer between kinesis",
    "start": "179840",
    "end": "181360"
  },
  {
    "text": "and amazon's simple storage service or",
    "start": "181360",
    "end": "183440"
  },
  {
    "text": "amazon s3",
    "start": "183440",
    "end": "186400"
  },
  {
    "text": "the s3 bucket which is deployed through",
    "start": "193120",
    "end": "195200"
  },
  {
    "text": "the provisioning of its corresponding",
    "start": "195200",
    "end": "196800"
  },
  {
    "text": "service catalog product",
    "start": "196800",
    "end": "198560"
  },
  {
    "text": "requires a kms id as a provisioning",
    "start": "198560",
    "end": "200879"
  },
  {
    "text": "parameter",
    "start": "200879",
    "end": "201680"
  },
  {
    "text": "in order to encrypt any data that enters",
    "start": "201680",
    "end": "203680"
  },
  {
    "text": "or leaves the bucket",
    "start": "203680",
    "end": "205440"
  },
  {
    "text": "to fulfill this value we pass the get ad",
    "start": "205440",
    "end": "207920"
  },
  {
    "text": "function for the kms id provisioning",
    "start": "207920",
    "end": "210000"
  },
  {
    "text": "parameter",
    "start": "210000",
    "end": "210959"
  },
  {
    "text": "referencing the kms key resource output",
    "start": "210959",
    "end": "215280"
  },
  {
    "text": "similarly the kinesis data stream",
    "start": "218480",
    "end": "220640"
  },
  {
    "text": "requires the amazon resource name",
    "start": "220640",
    "end": "222640"
  },
  {
    "text": "or arn of a kms resource to encrypt",
    "start": "222640",
    "end": "225920"
  },
  {
    "text": "inbound or outbound data",
    "start": "225920",
    "end": "228000"
  },
  {
    "text": "again the value is fulfilled by the",
    "start": "228000",
    "end": "229840"
  },
  {
    "text": "getat function",
    "start": "229840",
    "end": "232720"
  },
  {
    "text": "the kinesis data stream also requires",
    "start": "235760",
    "end": "237920"
  },
  {
    "text": "the arn of an s3 bucket where it can",
    "start": "237920",
    "end": "240239"
  },
  {
    "text": "deposit its encrypted data streams",
    "start": "240239",
    "end": "244000"
  },
  {
    "text": "as part of the overall solution amazon's",
    "start": "247280",
    "end": "249599"
  },
  {
    "text": "simple notification service or sns",
    "start": "249599",
    "end": "252080"
  },
  {
    "text": "is configured as a provisioned service",
    "start": "252080",
    "end": "253920"
  },
  {
    "text": "catalog product to send notifications",
    "start": "253920",
    "end": "256000"
  },
  {
    "text": "for certain actions related to auto",
    "start": "256000",
    "end": "257759"
  },
  {
    "text": "scaling",
    "start": "257759",
    "end": "258479"
  },
  {
    "text": "which might be performed as data",
    "start": "258479",
    "end": "259919"
  },
  {
    "text": "requirements change",
    "start": "259919",
    "end": "262240"
  },
  {
    "text": "here encryption is performed by kms to",
    "start": "262240",
    "end": "264639"
  },
  {
    "text": "secure messages sent by sns",
    "start": "264639",
    "end": "267280"
  },
  {
    "text": "to fulfill its kms id provisioning",
    "start": "267280",
    "end": "269360"
  },
  {
    "text": "parameter we'll use the get at function",
    "start": "269360",
    "end": "273360"
  },
  {
    "text": "when creating the application load",
    "start": "280320",
    "end": "281919"
  },
  {
    "text": "balancer three resources need to be",
    "start": "281919",
    "end": "283680"
  },
  {
    "text": "provisioned",
    "start": "283680",
    "end": "284720"
  },
  {
    "text": "the application load balancer itself the",
    "start": "284720",
    "end": "287120"
  },
  {
    "text": "application load balancer target group",
    "start": "287120",
    "end": "289360"
  },
  {
    "text": "and the application load balancer",
    "start": "289360",
    "end": "293039"
  },
  {
    "text": "listener",
    "start": "294840",
    "end": "297120"
  },
  {
    "text": "as the listener is provisioned the",
    "start": "297120",
    "end": "298960"
  },
  {
    "text": "application load balancer and target",
    "start": "298960",
    "end": "300800"
  },
  {
    "text": "group are referenced",
    "start": "300800",
    "end": "302000"
  },
  {
    "text": "chaining the three products together",
    "start": "302000",
    "end": "305520"
  },
  {
    "text": "finally this template provisions auto",
    "start": "308720",
    "end": "310560"
  },
  {
    "text": "scaling referencing the application load",
    "start": "310560",
    "end": "312720"
  },
  {
    "text": "balancer target group",
    "start": "312720",
    "end": "314000"
  },
  {
    "text": "and sns topic arn to chain the products",
    "start": "314000",
    "end": "316720"
  },
  {
    "text": "together",
    "start": "316720",
    "end": "318000"
  },
  {
    "text": "the subnet service catalog product is",
    "start": "318000",
    "end": "320000"
  },
  {
    "text": "likewise provisioned according to its",
    "start": "320000",
    "end": "321840"
  },
  {
    "text": "service catalog product template",
    "start": "321840",
    "end": "324320"
  },
  {
    "text": "now let's go to cloudformation to create",
    "start": "324320",
    "end": "326240"
  },
  {
    "text": "this stack",
    "start": "326240",
    "end": "328800"
  },
  {
    "start": "328000",
    "end": "377000"
  },
  {
    "text": "we'll create a stack by uploading the",
    "start": "328880",
    "end": "330560"
  },
  {
    "text": "template we just viewed",
    "start": "330560",
    "end": "339840"
  },
  {
    "text": "provide a bucket name",
    "start": "350240",
    "end": "353840"
  },
  {
    "text": "now that the solution has deployed let's",
    "start": "371759",
    "end": "373520"
  },
  {
    "text": "quickly check the resources",
    "start": "373520",
    "end": "376800"
  },
  {
    "start": "377000",
    "end": "410000"
  },
  {
    "text": "all the corresponding service catalog",
    "start": "377759",
    "end": "379520"
  },
  {
    "text": "provisioned products were created",
    "start": "379520",
    "end": "380880"
  },
  {
    "text": "successfully",
    "start": "380880",
    "end": "382400"
  },
  {
    "text": "now to validate that the service is",
    "start": "382400",
    "end": "383919"
  },
  {
    "text": "working let's look in the deployed s3",
    "start": "383919",
    "end": "388000"
  },
  {
    "text": "bucket kinesis has deposited compressed",
    "start": "392840",
    "end": "395680"
  },
  {
    "text": "data logs in the s3 bucket",
    "start": "395680",
    "end": "397520"
  },
  {
    "text": "indicating that the solution is working",
    "start": "397520",
    "end": "399199"
  },
  {
    "text": "as expected",
    "start": "399199",
    "end": "400880"
  },
  {
    "text": "you've just seen how to deploy",
    "start": "400880",
    "end": "402240"
  },
  {
    "text": "applications using aws service catalog",
    "start": "402240",
    "end": "404639"
  },
  {
    "text": "product chaining",
    "start": "404639",
    "end": "406319"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "406319",
    "end": "407759"
  },
  {
    "text": "to try",
    "start": "407759",
    "end": "412160"
  }
]