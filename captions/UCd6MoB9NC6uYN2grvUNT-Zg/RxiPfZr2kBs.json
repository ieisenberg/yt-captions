[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "in here and hopefully you had a you were able to to eat something I know the",
    "start": "0",
    "end": "7980"
  },
  {
    "text": "queue was quite long this talk is uh I built this talk",
    "start": "7980",
    "end": "13799"
  },
  {
    "text": "because as I say I've been working as a customer for 11 years I particular have",
    "start": "13799",
    "end": "19410"
  },
  {
    "text": "been working on large-scale systems and I was a huge fan of the Netflix kind of",
    "start": "19410",
    "end": "26369"
  },
  {
    "text": "way back in the days so some of it is inspired by that and then also to show",
    "start": "26369",
    "end": "32130"
  },
  {
    "text": "you that 10 years ago when we were trying to build large hill infrastructures and systems multi-region",
    "start": "32130",
    "end": "38640"
  },
  {
    "text": "systems it took us you know five to ten people's for a year to build things and now in a",
    "start": "38640",
    "end": "44840"
  },
  {
    "text": "couple of clicks you can build this so I say it's pretty ridiculous how things",
    "start": "44840",
    "end": "50129"
  },
  {
    "text": "have changed and hopefully I'll show you some of those things as I say the",
    "start": "50129",
    "end": "56309"
  },
  {
    "start": "55000",
    "end": "106000"
  },
  {
    "text": "session is organized by this we first gonna jump a little bit into reliability and availability because you don't just",
    "start": "56309",
    "end": "63420"
  },
  {
    "text": "start building large-scale multi-regional active active systems out of nothing you need to have a purpose if",
    "start": "63420",
    "end": "70380"
  },
  {
    "text": "your purpose is to look cool for your company that's probably you're gonna get fired you need to have a business",
    "start": "70380",
    "end": "76470"
  },
  {
    "text": "purpose right so we're gonna think about it then why and how and then I'll show you",
    "start": "76470",
    "end": "83030"
  },
  {
    "text": "how I built this demo and then what powers it and things like I saw some",
    "start": "83030",
    "end": "89250"
  },
  {
    "text": "hands on we'll go through all the services happy again it should be a discussion feel free to to ask just",
    "start": "89250",
    "end": "98369"
  },
  {
    "text": "politely don't do like in Israel sorry",
    "start": "98369",
    "end": "105979"
  },
  {
    "start": "106000",
    "end": "146000"
  },
  {
    "text": "the first thing that we need to understand is a little bit talk about reliability and availability and one of",
    "start": "106369",
    "end": "113070"
  },
  {
    "text": "the big quote that really changed the way I think about systems especially large scale system is from burnable",
    "start": "113070",
    "end": "118619"
  },
  {
    "text": "not because the city of Amazon is because really it points very well that failure is a given in any system right",
    "start": "118619",
    "end": "125549"
  },
  {
    "text": "and if you a many of us initially try to architect solutions around failure to",
    "start": "125549",
    "end": "131790"
  },
  {
    "text": "prevent failures but actually you should embrace failures and and architect",
    "start": "131790",
    "end": "137010"
  },
  {
    "text": "solutions with that in mind makes you do very very different different decisions",
    "start": "137010",
    "end": "142790"
  },
  {
    "text": "and some of them I'm gonna talk about there you don't have to understand in",
    "start": "142790",
    "end": "148410"
  },
  {
    "start": "146000",
    "end": "284000"
  },
  {
    "text": "systems they are gonna fire right and there are a few reasons for that there's three types of failure early late and",
    "start": "148410",
    "end": "155610"
  },
  {
    "text": "random failures early failures is everything when you deploy your code there's bog associated to it it takes",
    "start": "155610",
    "end": "161430"
  },
  {
    "text": "sometimes to each right through that code and they eventually fix it and then the late failures these are the ones",
    "start": "161430",
    "end": "168540"
  },
  {
    "text": "that often people think software's don't have late failures but I give you the example of configuration drift right how",
    "start": "168540",
    "end": "174900"
  },
  {
    "text": "many of you have experienced failures because of configuration drift that you know you change hot fix on your live",
    "start": "174900",
    "end": "183090"
  },
  {
    "text": "environment forget to commit that to your github go on we can come back on Monday totally forget and then it stays",
    "start": "183090",
    "end": "189630"
  },
  {
    "text": "there and then one day you do a deployment and the things are different everything crash I've experienced that",
    "start": "189630",
    "end": "195150"
  },
  {
    "text": "several times to say that it's actually one of the most common for the rest of the world in terms of failure the most",
    "start": "195150",
    "end": "202049"
  },
  {
    "text": "common way to fail systems configuration drift so yes there are late failures and of course you have the random failures",
    "start": "202049",
    "end": "208530"
  },
  {
    "text": "I've seen squirrel eating cables acting sharks eating transatlantic cable that",
    "start": "208530",
    "end": "214890"
  },
  {
    "text": "took data centers down drunk truck drivers heating data centers and taking",
    "start": "214890",
    "end": "221370"
  },
  {
    "text": "things down or you know the Sun flares",
    "start": "221370",
    "end": "226940"
  },
  {
    "text": "electromagnetic taking down some like so many systems there's basically things you can't control right so you're gonna",
    "start": "226940",
    "end": "234150"
  },
  {
    "text": "have all the time random failures and of course the random failures are not going to be the ones you select they are the",
    "start": "234150",
    "end": "240840"
  },
  {
    "text": "one they will always the ones that you don't expect will happen right this is",
    "start": "240840",
    "end": "247290"
  },
  {
    "text": "very important because it really means that you need to figure out how to do things now there is another problem it's",
    "start": "247290",
    "end": "252690"
  },
  {
    "text": "like we live in the world where velocity is very important you need to deploy very often that means actually you're",
    "start": "252690",
    "end": "259140"
  },
  {
    "text": "early failures are repeatedly happening simply because if you don't deploy often",
    "start": "259140",
    "end": "265289"
  },
  {
    "text": "your competitors will or your customers we'll go see somewhere else that iterates faster to gets to get",
    "start": "265289",
    "end": "272160"
  },
  {
    "text": "what they want all right so we end up with kind of crazy",
    "start": "272160",
    "end": "277730"
  },
  {
    "text": "what we call bathtub but actually this is not looking any more like a bathtub is really quite silly so talking about",
    "start": "277730",
    "end": "285390"
  },
  {
    "start": "284000",
    "end": "438000"
  },
  {
    "text": "availability is very important because failures will take you down so you need to understand every ability and there's",
    "start": "285390",
    "end": "292140"
  },
  {
    "text": "a simple equation for availability which is the mean time between failures divided by the mean time between failure",
    "start": "292140",
    "end": "298230"
  },
  {
    "text": "plus MTTR which is mean time to recover and if you look at this equation your",
    "start": "298230",
    "end": "303500"
  },
  {
    "text": "main purpose is to get that close to one so that you're a hundred percent so that",
    "start": "303500",
    "end": "309780"
  },
  {
    "text": "means your MTTR needs to be as little as possible the more you increase your mean",
    "start": "309780",
    "end": "315540"
  },
  {
    "text": "time to recovery the less you'd be available which seems pretty obvious so your sole purpose is to do what is to",
    "start": "315540",
    "end": "323130"
  },
  {
    "text": "automate investing automation self-healing systems and things like this because that's the only way you can",
    "start": "323130",
    "end": "328800"
  },
  {
    "text": "fight for availability so those are kind of a given now there's still a lot of work to do on the infrastructure and",
    "start": "328800",
    "end": "334560"
  },
  {
    "text": "I'll talk about some of them as well this is quite interesting a lot of people talk about every ability in terms",
    "start": "334560",
    "end": "340320"
  },
  {
    "text": "of the nines of availability very often you here we are four nines available",
    "start": "340320",
    "end": "345870"
  },
  {
    "text": "which means yearly you have 52 minutes worth of downtime for your credit how",
    "start": "345870",
    "end": "353070"
  },
  {
    "text": "many of you have experienced very large girls failure very large I'm the only",
    "start": "353070",
    "end": "358680"
  },
  {
    "text": "man Wow yeah so some of the failures I've experienced we took it took us",
    "start": "358680",
    "end": "364200"
  },
  {
    "text": "already about you know seven minute to get paged in fact the escalation path of",
    "start": "364200",
    "end": "369450"
  },
  {
    "text": "the paging system fails to start with it failed to realize that there was a",
    "start": "369450",
    "end": "377370"
  },
  {
    "text": "failure in the system so this is already a case gaining failure that happen and then we had configuration drift another",
    "start": "377370",
    "end": "384090"
  },
  {
    "text": "failures when we started to do some deployment so it was cascading it to like this it took us several hours just",
    "start": "384090",
    "end": "390990"
  },
  {
    "text": "to fix everything and very often large-scale failures if they involve humans you will be into the",
    "start": "390990",
    "end": "397020"
  },
  {
    "text": "hours and cumulate that like to several times a year you easily end up into between the two and",
    "start": "397020",
    "end": "405989"
  },
  {
    "text": "the three more often in in the two so what I'm saying here is if you try to go",
    "start": "405989",
    "end": "411089"
  },
  {
    "text": "there you're and as the equation shows you need to invest in mean time to repair that means you need to invest in",
    "start": "411089",
    "end": "417809"
  },
  {
    "text": "self-healing systems where no humans are there that means two things that means",
    "start": "417809",
    "end": "424559"
  },
  {
    "text": "you need to architect your systems to be self-healing but you also need to",
    "start": "424559",
    "end": "429949"
  },
  {
    "text": "understand what kind of failures you've had do a post-mortem and automate that",
    "start": "429949",
    "end": "435119"
  },
  {
    "text": "all right so these are kind of things I want to lay out there now there's a couple of things that you need to understand from the architecture point",
    "start": "435119",
    "end": "442439"
  },
  {
    "start": "438000",
    "end": "678000"
  },
  {
    "text": "of view if you have two cysteines x and y in series what happened",
    "start": "442439",
    "end": "448669"
  },
  {
    "text": "anyone wants to take a bet if for example on a component X is 99%",
    "start": "448669",
    "end": "457769"
  },
  {
    "text": "available and I put it in series with another component which is 99.99 actually the overall availability of the",
    "start": "457769",
    "end": "464579"
  },
  {
    "text": "systems will be lower than any of those components and this is against what we",
    "start": "464579",
    "end": "470699"
  },
  {
    "text": "think you know my chain is as strong as the weakest link in fact it's actually weak there and this is important to",
    "start": "470699",
    "end": "477269"
  },
  {
    "text": "realize because you might and all systems and all our sheer systems are",
    "start": "477269",
    "end": "482549"
  },
  {
    "text": "actually architected in series and you need to be very careful what you do with this now there's another equation",
    "start": "482549",
    "end": "488429"
  },
  {
    "text": "another that you need to understand is this one right now this actually much",
    "start": "488429",
    "end": "493519"
  },
  {
    "text": "cuter equation first to start with and it gives you a lot of benefit because now if you take a system a much lower",
    "start": "493519",
    "end": "501179"
  },
  {
    "text": "availability which is 99 percent and you make it in parallel twice you go into a",
    "start": "501179",
    "end": "507209"
  },
  {
    "text": "four nines availability which is pretty cool and then if you make it three times in parallel you are at six ninths",
    "start": "507209",
    "end": "512610"
  },
  {
    "text": "without you having to transform anything in the architectures you just duplicate",
    "start": "512610",
    "end": "517800"
  },
  {
    "text": "the channel so that's what the straightforward solution to increase your availability and well that's kind",
    "start": "517800",
    "end": "527189"
  },
  {
    "text": "of obvious right and then of course we go now to an AWS regions and in AWS",
    "start": "527189",
    "end": "534899"
  },
  {
    "text": "reach architected like this around daisies I've discussed irate whether an AZ is",
    "start": "534899",
    "end": "539910"
  },
  {
    "text": "they are geographically separated still separated low enough so that you can do",
    "start": "539910",
    "end": "545760"
  },
  {
    "text": "synchronous replication one two three milliseconds of latency between SES and what we do is we always beach our",
    "start": "545760",
    "end": "553470"
  },
  {
    "text": "customers to always architect solutions around three Isis simply because you",
    "start": "553470",
    "end": "558810"
  },
  {
    "text": "increase your availability right so if you wonder why AWS always always always remind people about this it's simply",
    "start": "558810",
    "end": "566520"
  },
  {
    "text": "because of this equation and actually this should be the first thing you do into an architecture to be highly",
    "start": "566520",
    "end": "572010"
  },
  {
    "text": "available and you can of course take this further and we're going to do this today in two regions right because the",
    "start": "572010",
    "end": "578910"
  },
  {
    "text": "region is going into multi regions is the same equations that we are looking for and some of the regional service",
    "start": "578910",
    "end": "586080"
  },
  {
    "text": "that are really important here to to talk about some which have by default",
    "start": "586080",
    "end": "591510"
  },
  {
    "text": "the architected on top of three ICS will help you to have a higher availability",
    "start": "591510",
    "end": "598050"
  },
  {
    "text": "out of the box right because they have three aziz under the hood and some like",
    "start": "598050",
    "end": "603300"
  },
  {
    "text": "our DSST cash and elastic search you can with one click enable multi AZ and I",
    "start": "603300",
    "end": "608640"
  },
  {
    "text": "strongly recommend and if you start to work into April increasing your",
    "start": "608640",
    "end": "613920"
  },
  {
    "text": "availability you look for services that are by default architected across three",
    "start": "613920",
    "end": "619410"
  },
  {
    "text": "aces and these are what I'm talking",
    "start": "619410",
    "end": "625680"
  },
  {
    "text": "about okay and of course every less because we're on the server let's strike as I said my biggest interest here in",
    "start": "625680",
    "end": "634020"
  },
  {
    "text": "service is availability and photo learners for that very purpose okay now you're gonna say of course",
    "start": "634020",
    "end": "640380"
  },
  {
    "text": "making system highly available have cost it has cost because if you want to create cell filling systems if you want",
    "start": "640380",
    "end": "647790"
  },
  {
    "text": "to implement high V BT you will need to invest right so the cost of complexity",
    "start": "647790",
    "end": "653570"
  },
  {
    "text": "of the complexity increases but the cost as well so it's something that is very",
    "start": "653570",
    "end": "660120"
  },
  {
    "text": "important you don't go into architecting very very highly available systems if you do not need as a business this is",
    "start": "660120",
    "end": "666570"
  },
  {
    "text": "what you need to figure out what is your every bility that your customer that you're offering to your customers right",
    "start": "666570",
    "end": "672660"
  },
  {
    "text": "because then you can work backward and figure out what you're working for or working towards and of course there's",
    "start": "672660",
    "end": "682050"
  },
  {
    "start": "678000",
    "end": "708000"
  },
  {
    "text": "something very important to remember is reliability and availability are two different things you can have a very",
    "start": "682050",
    "end": "688949"
  },
  {
    "text": "highly available systems that returns errors it'll still be available but it returned an error and so reliability is that you",
    "start": "688949",
    "end": "697319"
  },
  {
    "text": "want to have a system that is highly available but reliable so that means it returns the truth every time and these",
    "start": "697319",
    "end": "704399"
  },
  {
    "text": "are two things that are totally different and that you want to work about and when we talk when we talk",
    "start": "704399",
    "end": "710370"
  },
  {
    "start": "708000",
    "end": "715000"
  },
  {
    "text": "about reliability actually have three lessons not to and I want to talk about",
    "start": "710370",
    "end": "715829"
  },
  {
    "start": "715000",
    "end": "854000"
  },
  {
    "text": "and one is the most important thing that I've have experienced as outage it's",
    "start": "715829",
    "end": "720930"
  },
  {
    "text": "called exponential back-off exponential back-off works like this if there's an",
    "start": "720930",
    "end": "727709"
  },
  {
    "text": "error in the systems a system a tries to call B and there's an error",
    "start": "727709",
    "end": "733439"
  },
  {
    "text": "generally speaking often the system do a retry immediately there is a retry retry",
    "start": "733439",
    "end": "739860"
  },
  {
    "text": "retry wait right so that means you fill up the networks with retry and if you think about very large-scale systems all",
    "start": "739860",
    "end": "746160"
  },
  {
    "text": "retrying at the same time you end up in massive massive failures and this",
    "start": "746160",
    "end": "751709"
  },
  {
    "text": "exponential backup was introduced when they built the TCP protocol back in the",
    "start": "751709",
    "end": "757500"
  },
  {
    "text": "days for exact purpose of saving networks from being flooded with retries",
    "start": "757500",
    "end": "764180"
  },
  {
    "text": "and very often when you bring dependency into your software you bring libraries",
    "start": "764180",
    "end": "771809"
  },
  {
    "text": "that connects to ready the database and stuff that is lesson number one you need to do is verify that the implement",
    "start": "771809",
    "end": "778620"
  },
  {
    "text": "exponential back-off because one day you'll experience a failure in this root",
    "start": "778620",
    "end": "784019"
  },
  {
    "text": "system and all of them when you bring them back up will try to retry or if you",
    "start": "784019",
    "end": "791100"
  },
  {
    "text": "have an error they will retry and if you do not have exponential back-off they will go into an infinite loop almost of retrying",
    "start": "791100",
    "end": "797790"
  },
  {
    "text": "which will take your system down so something that is very very important to to make sure you have in your libraries",
    "start": "797790",
    "end": "804840"
  },
  {
    "text": "is this now you see the weight function is very simple here you can make the",
    "start": "804840",
    "end": "812640"
  },
  {
    "text": "weight function a bit more reliable not reliable but more efficient by adding a",
    "start": "812640",
    "end": "818970"
  },
  {
    "text": "random jitter into it so that actually the retry is a bit more randomized but nonetheless this is something that is",
    "start": "818970",
    "end": "824700"
  },
  {
    "text": "super important it will it took systems down twice with libraries that we are thinking in our",
    "start": "824700",
    "end": "830190"
  },
  {
    "text": "systems from my previous companies we were dependency on Redis and some Python libraries that we use to connect to",
    "start": "830190",
    "end": "836670"
  },
  {
    "text": "radius for queues didn't implement exponential back-off we had 150 micro",
    "start": "836670",
    "end": "842580"
  },
  {
    "text": "services using queues Redis trying to do retries at the same time took all the rest of the system down for library we",
    "start": "842580",
    "end": "849300"
  },
  {
    "text": "forgot to verify that ID exponential back-off so it cost me and then another important",
    "start": "849300",
    "end": "856770"
  },
  {
    "start": "854000",
    "end": "977000"
  },
  {
    "text": "component is circuit breaker this is a saving life type of thing in fact if you",
    "start": "856770",
    "end": "862380"
  },
  {
    "text": "follow how netflix into a architect their solutions they use a framework or",
    "start": "862380",
    "end": "868770"
  },
  {
    "text": "hi strikes which implements circuit breaker circuit breaker is very interesting imagine I have a component a trying to",
    "start": "868770",
    "end": "875910"
  },
  {
    "text": "call database very often you give the URL of the database to the component a to call it right so you could breaker",
    "start": "875910",
    "end": "882330"
  },
  {
    "text": "you do something different you pass an object and that object as the URL but it also tracks the number of failures of",
    "start": "882330",
    "end": "890820"
  },
  {
    "text": "that dependencies so that you can define threshold after which if you have some",
    "start": "890820",
    "end": "896400"
  },
  {
    "text": "errors you can brake circuit break that so you don't call it anymore so you can start isolating faulty component from",
    "start": "896400",
    "end": "903570"
  },
  {
    "text": "your architecture and this is very important because then you can do degradation of service without having a",
    "start": "903570",
    "end": "910650"
  },
  {
    "text": "system down a very important one is always ask customers imagine your Netflix imagine you're running a video",
    "start": "910650",
    "end": "917900"
  },
  {
    "text": "streaming services and your authentication system goes down what do you do do you let people watch for free",
    "start": "917900",
    "end": "925230"
  },
  {
    "text": "or do you kick them out yeah but not not everyone says that is your system when",
    "start": "925230",
    "end": "934530"
  },
  {
    "text": "you connect into for example Instagram Facebook all that's if you log in don't work most of the time you can't",
    "start": "934530",
    "end": "940380"
  },
  {
    "text": "use the services on my back what do you do well this cancels so there's I interesting right IDs that you can start",
    "start": "940380",
    "end": "947100"
  },
  {
    "text": "to implement in your in York in the path of critical services right funeral is my",
    "start": "947100",
    "end": "954270"
  },
  {
    "text": "damping dependency very critical can I live without it if you can live with it without it circuit breaker is very",
    "start": "954270",
    "end": "961110"
  },
  {
    "text": "important because if you do not have sacred breaker a timeout in calling a non-critical service will bring it back",
    "start": "961110",
    "end": "969690"
  },
  {
    "text": "to the UI to the user with the waiting blocking UI all right so this kind of",
    "start": "969690",
    "end": "975360"
  },
  {
    "text": "stuff a very important and of course we're talking about a synchronous systems as soon as you go into",
    "start": "975360",
    "end": "982470"
  },
  {
    "start": "977000",
    "end": "1020000"
  },
  {
    "text": "distributed systems you have the cap theorem that says in presence of a partition you cannot have both",
    "start": "982470",
    "end": "989940"
  },
  {
    "text": "availability and consistency right so you need to make a decision which is that you want and systems often",
    "start": "989940",
    "end": "996300"
  },
  {
    "text": "especially around the web we talked about we want to be highly available therefore we need to embrace eventual",
    "start": "996300",
    "end": "1003680"
  },
  {
    "text": "consistency right and so that means you also need to embrace a synchronous systems and a synchronous systems to",
    "start": "1003680",
    "end": "1010550"
  },
  {
    "text": "patterns that are really fabulous for that isolating component a from B is message passing whether you want to have",
    "start": "1010550",
    "end": "1017300"
  },
  {
    "text": "a listener or pops-up pattern and then you can do something like this right so you can isolate your API to let's say",
    "start": "1017300",
    "end": "1026930"
  },
  {
    "start": "1020000",
    "end": "1056000"
  },
  {
    "text": "the business logic through queues right so if you have an API call happening",
    "start": "1026930",
    "end": "1032329"
  },
  {
    "text": "there instead of passing the request to the business logic you actually give it",
    "start": "1032330",
    "end": "1037939"
  },
  {
    "text": "an ID and then return immediately and then these IDs goes down into a queue",
    "start": "1037940",
    "end": "1044660"
  },
  {
    "text": "and my workers here when they are available they will take that and then",
    "start": "1044660",
    "end": "1051290"
  },
  {
    "text": "process the job and then push this into cash the result right and then you can use that result and then use push",
    "start": "1051290",
    "end": "1059330"
  },
  {
    "start": "1056000",
    "end": "1094000"
  },
  {
    "text": "notification to sing that to the user so that your user doesn't have to pull all",
    "start": "1059330",
    "end": "1065000"
  },
  {
    "text": "the time for the data is it here is it here how many of you have kids that we",
    "start": "1065000",
    "end": "1070280"
  },
  {
    "text": "are we there yet with area over there yet you probably would kill your kid after three minutes this is the same",
    "start": "1070280",
    "end": "1075980"
  },
  {
    "text": "problem with backends you want to save your architectures from calls that are",
    "start": "1075980",
    "end": "1081980"
  },
  {
    "text": "not important you don't want to call if there's no results so it's better to push right and that architecture is with",
    "start": "1081980",
    "end": "1088580"
  },
  {
    "text": "separating components through queues are is very cool and if you want to know",
    "start": "1088580",
    "end": "1095840"
  },
  {
    "start": "1094000",
    "end": "1120000"
  },
  {
    "text": "more about reliability there is actually a whole well architected framework that has been published some white papers and",
    "start": "1095840",
    "end": "1102140"
  },
  {
    "text": "things like this that you can you can download there's a bunch of them or published yesterday in in Munich I did a",
    "start": "1102140",
    "end": "1109940"
  },
  {
    "text": "talk on chaos engineering that takes that to very very deep and it's online as well you can get it from from Twitter",
    "start": "1109940",
    "end": "1118160"
  },
  {
    "text": "I've post it on Twitter so the question is why do we build multi regions active",
    "start": "1118160",
    "end": "1123590"
  },
  {
    "start": "1120000",
    "end": "1201000"
  },
  {
    "text": "active systems or architecture it's a good question why do we want to do this",
    "start": "1123590",
    "end": "1128620"
  },
  {
    "text": "there's few reasons for that the most important reason which becomes very",
    "start": "1128620",
    "end": "1133670"
  },
  {
    "text": "popular is that now companies have to go global right that they have to have",
    "start": "1133670",
    "end": "1138920"
  },
  {
    "text": "users around the world and if you have a user for example here in Germany and if",
    "start": "1138920",
    "end": "1146270"
  },
  {
    "text": "your back-end is in Germany and your users are in Australia or in the US you",
    "start": "1146270",
    "end": "1152690"
  },
  {
    "text": "by default we don't have Latin seas right and 300 milliseconds licensee round-trip 600 milliseconds almost 1",
    "start": "1152690",
    "end": "1158810"
  },
  {
    "text": "seconds of latency and this is if everything is fine right and same for us",
    "start": "1158810",
    "end": "1164870"
  },
  {
    "text": "and that's a lot of data just to give you a point we did some measurements at",
    "start": "1164870",
    "end": "1170630"
  },
  {
    "text": "amazon.com that 100% 100 millisecond increase of latency on the websites",
    "start": "1170630",
    "end": "1177640"
  },
  {
    "text": "generates a drop of 1% of sales that's insane and that's true data 100",
    "start": "1177640",
    "end": "1185210"
  },
  {
    "text": "milliseconds latency which is you can't you can't even see it as a human but still it results in 1% drops of sales so",
    "start": "1185210",
    "end": "1193400"
  },
  {
    "text": "Latins is very important so customers are now deploying solutions closer to the customers that's why we go multi",
    "start": "1193400",
    "end": "1199580"
  },
  {
    "text": "region and then another good reason is to recovery all right there are some",
    "start": "1199580",
    "end": "1206050"
  },
  {
    "start": "1201000",
    "end": "1400000"
  },
  {
    "text": "applications which need to be always available like banking insurance or Netflix and Netflix does exactly this if",
    "start": "1206050",
    "end": "1214490"
  },
  {
    "text": "there is a critical service that is going down in one of the regions that may impact customer experience or",
    "start": "1214490",
    "end": "1220430"
  },
  {
    "text": "imagine if authentication systems go down the service they will move into",
    "start": "1220430",
    "end": "1227830"
  },
  {
    "text": "without authentication service they will move into a free for everyone doesn't",
    "start": "1227830",
    "end": "1233720"
  },
  {
    "text": "care they'll still send the videos but they will start moving traffic slowly to",
    "start": "1233720",
    "end": "1239090"
  },
  {
    "text": "another regions right they will actually move in about 10 15 minutes all the users of region to another region so",
    "start": "1239090",
    "end": "1246530"
  },
  {
    "text": "that they can recover the critical service in for it's the same same ID if",
    "start": "1246530",
    "end": "1252170"
  },
  {
    "text": "you have the question is imagine you have a database and you have masters and",
    "start": "1252170",
    "end": "1259460"
  },
  {
    "text": "replicas because you move you do a read/write sharding imagining your masters go down so you can't write",
    "start": "1259460",
    "end": "1266240"
  },
  {
    "text": "anymore but you can read can your applications report read-only probably so you can move into you can degrade you",
    "start": "1266240",
    "end": "1273410"
  },
  {
    "text": "can have a circuit breaker moving your application into read-only mode and then initiate a move of traffic to another",
    "start": "1273410",
    "end": "1281540"
  },
  {
    "text": "region so that you can recover slowly and this is a very good way many",
    "start": "1281540",
    "end": "1286820"
  },
  {
    "text": "customers start to do this so it's called graceful degradation and of",
    "start": "1286820",
    "end": "1293030"
  },
  {
    "text": "course business requirement is also customers that by law or by by law need",
    "start": "1293030",
    "end": "1299810"
  },
  {
    "text": "to actually have data separated by hundreds of kilometres in different",
    "start": "1299810",
    "end": "1306440"
  },
  {
    "text": "regions even in the same countries but in US for example or in Japan or things",
    "start": "1306440",
    "end": "1311720"
  },
  {
    "text": "- and the important thing that that actually started the whole phenomena of",
    "start": "1311720",
    "end": "1318530"
  },
  {
    "text": "multi-region building is an outage that Netflix experienced in 2012 which was an",
    "start": "1318530",
    "end": "1326540"
  },
  {
    "text": "outage that was not caused by Netflix itself it was a break it was AWS fault",
    "start": "1326540",
    "end": "1332930"
  },
  {
    "text": "and what happened is there was a problem in the ELB is data plane",
    "start": "1332930",
    "end": "1338029"
  },
  {
    "text": "and that took down the lbs of the of the regions in New York East where Netflix",
    "start": "1338029",
    "end": "1344359"
  },
  {
    "text": "was deployed which has been fixed now don't worry you can safely use the yell",
    "start": "1344359",
    "end": "1352219"
  },
  {
    "text": "bees in in the region but what they started to do is they started to think about a system that would be able to be",
    "start": "1352219",
    "end": "1360229"
  },
  {
    "text": "resilient to full region burnout right and this is why actually they were the",
    "start": "1360229",
    "end": "1366830"
  },
  {
    "text": "first to start really large-scale multi-region failure recovery and they",
    "start": "1366830",
    "end": "1374479"
  },
  {
    "text": "made an update of that blog post in 2016 when they started to do two regions in",
    "start": "1374479",
    "end": "1381710"
  },
  {
    "text": "us plus the one in Europe because now they start to they have customers in Europe so they also used latency and",
    "start": "1381710",
    "end": "1388549"
  },
  {
    "text": "then file over benefit right so it's to business benefit for them better latency",
    "start": "1388549",
    "end": "1395389"
  },
  {
    "text": "for the end users but also better failure recovery and then of course what",
    "start": "1395389",
    "end": "1402379"
  },
  {
    "start": "1400000",
    "end": "1475000"
  },
  {
    "text": "they started to work on is a set of tools that were would be able to test",
    "start": "1402379",
    "end": "1407839"
  },
  {
    "text": "these kind of things because when you have large-scale systems like this functional testing and unit testing are",
    "start": "1407839",
    "end": "1414320"
  },
  {
    "text": "not good enough you need to move to a new kind of testing which is called chaos engineering and these are some of",
    "start": "1414320",
    "end": "1421099"
  },
  {
    "text": "the tools they are using they created some some monkeys they called them the simian armies the first one is this",
    "start": "1421099",
    "end": "1428179"
  },
  {
    "text": "chaos monkey here this crazy little boy which randomly shuts down instances in",
    "start": "1428179",
    "end": "1433820"
  },
  {
    "text": "the region to see if you can recover from failures and then the big gorilla",
    "start": "1433820",
    "end": "1439460"
  },
  {
    "text": "there is the last the last breed of the simian army that shuts down the full",
    "start": "1439460",
    "end": "1446179"
  },
  {
    "text": "regions and they do this once a month in production systems to test if they are good at recovering from failures just to",
    "start": "1446179",
    "end": "1452599"
  },
  {
    "text": "give you an idea in production systems it's no joke so they simulate the full region they shut down that Center and",
    "start": "1452599",
    "end": "1459409"
  },
  {
    "text": "see if the service can recover I'm not saying you should just go tomorrow morning and start shutting down the",
    "start": "1459409",
    "end": "1466489"
  },
  {
    "text": "database I did not say that right there's there's a lot of preparation to do under",
    "start": "1466489",
    "end": "1473630"
  },
  {
    "text": "the hood to do this kind of stuff right so how do we build multi-region systems the first thing to understand is as I",
    "start": "1473630",
    "end": "1480440"
  },
  {
    "start": "1475000",
    "end": "1528000"
  },
  {
    "text": "said you need to move into the world of a synchronous systems because if you are building large-scale systems you deal",
    "start": "1480440",
    "end": "1486380"
  },
  {
    "text": "with synchronous systems or systems that",
    "start": "1486380",
    "end": "1491840"
  },
  {
    "text": "have higher latency between than five milliseconds between systems and when",
    "start": "1491840",
    "end": "1497030"
  },
  {
    "text": "you are there you are in a synchronous mode you don't have a choice otherwise your customers will just wait",
    "start": "1497030",
    "end": "1502130"
  },
  {
    "text": "because if you are if you have more than let's say 100 milliseconds latency to",
    "start": "1502130",
    "end": "1509390"
  },
  {
    "text": "get a result your process are gonna go like waiting all the time so what you want you want to embrace a",
    "start": "1509390",
    "end": "1515200"
  },
  {
    "text": "synchronous processes as well so that you just I can continue doing tasks and",
    "start": "1515200",
    "end": "1521150"
  },
  {
    "text": "your system can continue working your UI can continue working even though things happening behind behind the scene and",
    "start": "1521150",
    "end": "1529520"
  },
  {
    "start": "1528000",
    "end": "1577000"
  },
  {
    "text": "now it's totally possible to do this as well because we started to build what we",
    "start": "1529520",
    "end": "1535010"
  },
  {
    "text": "call the Amazon global network and this was announced in 2016 by James Hamilton who is a distinguished engineer Amazon",
    "start": "1535010",
    "end": "1542720"
  },
  {
    "text": "and what what he announced is that we built actually between all the regions in the world our own dedicated network",
    "start": "1542720",
    "end": "1549890"
  },
  {
    "text": "so that now when you want to do global multi-region systems you are not going",
    "start": "1549890",
    "end": "1557059"
  },
  {
    "text": "over the internet anymore you were some of the functions especially if you use AWS services will go on top of our own",
    "start": "1557059",
    "end": "1565100"
  },
  {
    "text": "network and it's a redundant 100 gig leagues links between each region so",
    "start": "1565100",
    "end": "1572360"
  },
  {
    "text": "very very very big and with that came a",
    "start": "1572360",
    "end": "1580100"
  },
  {
    "start": "1577000",
    "end": "1716000"
  },
  {
    "text": "new feature called multi region multi VPC connectivity and that allows you now",
    "start": "1580100",
    "end": "1585559"
  },
  {
    "text": "to do the piece appearing between two regions right so you can put regions",
    "start": "1585559",
    "end": "1592150"
  },
  {
    "text": "into VPC can we stop just a second",
    "start": "1592150",
    "end": "1597670"
  },
  {
    "text": "you",
    "start": "1598759",
    "end": "1600820"
  },
  {
    "text": "about my nose a tendency to start",
    "start": "1681460",
    "end": "1687460"
  },
  {
    "text": "bleeding so he just started to do some problem alright so with the multi region",
    "start": "1687460",
    "end": "1696850"
  },
  {
    "text": "we were able to start to do VPC peering between regions and this is great because previously people started to had",
    "start": "1696850",
    "end": "1704500"
  },
  {
    "text": "to maintain VP C's between different regions and maintain several links and",
    "start": "1704500",
    "end": "1709720"
  },
  {
    "text": "it's never been easy so now you can do things like this between your VP C which is right then there's another function",
    "start": "1709720",
    "end": "1719050"
  },
  {
    "start": "1716000",
    "end": "1774000"
  },
  {
    "text": "that came that is very interesting for especially static assets video images",
    "start": "1719050",
    "end": "1724240"
  },
  {
    "text": "libraries inside s3 you can enable cross region replication which allows you to",
    "start": "1724240",
    "end": "1729880"
  },
  {
    "text": "move automatically data from an s3 bucket to another bucket it to another",
    "start": "1729880",
    "end": "1735850"
  },
  {
    "text": "regions and just to give you a an ID of the replication speed Netflix not with",
    "start": "1735850",
    "end": "1744250"
  },
  {
    "text": "s3 but with Cassandra they they have Cassandra clusters in different regions",
    "start": "1744250",
    "end": "1749620"
  },
  {
    "text": "and they tested 1 million right inside the region and 500 milliseconds after",
    "start": "1749620",
    "end": "1755650"
  },
  {
    "text": "that I read into another regions and experience no data loss so it was really",
    "start": "1755650",
    "end": "1760780"
  },
  {
    "text": "fast to do to do these kind of things of course we have this 500 millions I guess so again I said eventual eventual",
    "start": "1760780",
    "end": "1768670"
  },
  {
    "text": "consistency needs to be your motto when you architect solutions and then there's",
    "start": "1768670",
    "end": "1775150"
  },
  {
    "start": "1774000",
    "end": "1817000"
  },
  {
    "text": "another features from RDS that is very interesting to use and this is or I already mentioned is that you can do",
    "start": "1775150",
    "end": "1782440"
  },
  {
    "text": "read and write sharding so that means you can start doing read replicas and",
    "start": "1782440",
    "end": "1787650"
  },
  {
    "text": "replicas are a synchronously done to",
    "start": "1787650",
    "end": "1794530"
  },
  {
    "text": "another region right so and you can have regional customers doing all the reads into a region but the problem is of",
    "start": "1794530",
    "end": "1802390"
  },
  {
    "text": "course when you want to make a right the critical ones needs to happen inside the",
    "start": "1802390",
    "end": "1808180"
  },
  {
    "text": "master cross region which is kind of an anti-pattern of multi regions but nonetheless currently is the only way to",
    "start": "1808180",
    "end": "1814840"
  },
  {
    "text": "do now there's a cool things that was just announced is we announced or a",
    "start": "1814840",
    "end": "1822010"
  },
  {
    "start": "1817000",
    "end": "1898000"
  },
  {
    "text": "multi-master right this year so this is something totally new first it will be",
    "start": "1822010",
    "end": "1827530"
  },
  {
    "text": "within regions with some multi in different AC you'll have multi masters",
    "start": "1827530",
    "end": "1832540"
  },
  {
    "text": "in each of ICS that will also have replication so that means you have zero",
    "start": "1832540",
    "end": "1839410"
  },
  {
    "text": "downtown first if one of the Masters go down but then you can do very fast region right starting inside your region",
    "start": "1839410",
    "end": "1847180"
  },
  {
    "text": "and we're taking this actually multi region as well so by the end of this",
    "start": "1847180",
    "end": "1852880"
  },
  {
    "text": "year you'll be able to use aura masters everywhere around the world so I'll have",
    "start": "1852880",
    "end": "1858730"
  },
  {
    "text": "to change the slide when my master is only in one region which is great",
    "start": "1858730",
    "end": "1863740"
  },
  {
    "text": "because then it's you do not have to maintain being log replications how many of you have had to do this in their",
    "start": "1863740",
    "end": "1870580"
  },
  {
    "text": "lives being logged acacia it's the worst job in the world and it always went down",
    "start": "1870580",
    "end": "1879610"
  },
  {
    "text": "is it was a misery and now you know RDS and aura they do this for you you know",
    "start": "1879610",
    "end": "1884740"
  },
  {
    "text": "they do the replication they maintain replication you is it's just too easy",
    "start": "1884740",
    "end": "1891390"
  },
  {
    "text": "which is right for you so this was announced which gonna make things very",
    "start": "1891390",
    "end": "1897040"
  },
  {
    "text": "very good but you if you already want to build stuff you don't have to wait the",
    "start": "1897040",
    "end": "1903280"
  },
  {
    "start": "1898000",
    "end": "1962000"
  },
  {
    "text": "end of 218 in fact dynamodb already support what we call multi master right",
    "start": "1903280",
    "end": "1908710"
  },
  {
    "text": "and dynamodb is the same database that power is Amazon com",
    "start": "1908710",
    "end": "1914710"
  },
  {
    "text": "in fact we move back in the days from Oracle to dynamo because in the late",
    "start": "1914710",
    "end": "1921070"
  },
  {
    "text": "2000 they started to analyze databases request and realize 70% of our requested",
    "start": "1921070",
    "end": "1928690"
  },
  {
    "text": "database were not transactional and we were using transactional database which was stupid so we move into dynamo which",
    "start": "1928690",
    "end": "1937630"
  },
  {
    "text": "actually was built for the very purpose so scaling infinitely at Amazon and now",
    "start": "1937630",
    "end": "1944050"
  },
  {
    "text": "Amazon during prime days which are kind of one day where",
    "start": "1944050",
    "end": "1949059"
  },
  {
    "text": "we have very big sales that Amazon picks up 13 million requests per seconds on the database which is pretty amazing if",
    "start": "1949059",
    "end": "1957159"
  },
  {
    "text": "you ask about it there's other numbers which are pretty colas off but now",
    "start": "1957159",
    "end": "1963009"
  },
  {
    "start": "1962000",
    "end": "2090000"
  },
  {
    "text": "DynamoDB actually we just released a service called global table and our global table takes this master multi",
    "start": "1963009",
    "end": "1970210"
  },
  {
    "text": "master multi-region ID already available for you and it's GA is available in all",
    "start": "1970210",
    "end": "1976419"
  },
  {
    "text": "of the consoles for everyone to use what it does is you create a table it has to be an empty table to start with",
    "start": "1976419",
    "end": "1982690"
  },
  {
    "text": "currently eventually we are releasing features to move existing table into G",
    "start": "1982690",
    "end": "1988389"
  },
  {
    "text": "global table but not currently you need to start from an empty table and then you can with just one click or one API",
    "start": "1988389",
    "end": "1996190"
  },
  {
    "text": "call add regions where you will have master deployed and then each region can",
    "start": "1996190",
    "end": "2001440"
  },
  {
    "text": "just call their masters and we'll do the the replication and especially the",
    "start": "2001440",
    "end": "2007080"
  },
  {
    "text": "conflict resolutions and the conflict resolution applied for DynamoDB global table is last right wins right which is",
    "start": "2007080",
    "end": "2014340"
  },
  {
    "text": "very basic one is no magic there we don't try to understand the query it's",
    "start": "2014340",
    "end": "2019529"
  },
  {
    "text": "very straightforward and just to show you an ID dynamodb streams works like",
    "start": "2019529",
    "end": "2025649"
  },
  {
    "text": "this is like dynamodb global table works by using streams and streams our",
    "start": "2025649",
    "end": "2030990"
  },
  {
    "text": "DynamoDB streams our feature of dynamodb that you can enable in them dependently",
    "start": "2030990",
    "end": "2036149"
  },
  {
    "text": "of global tables that you can every time your going to put data into DynamoDB it",
    "start": "2036149",
    "end": "2042960"
  },
  {
    "text": "can create an ordered stream of all the changes that have happened in your table right you can do the new vs. all in all",
    "start": "2042960",
    "end": "2049888"
  },
  {
    "text": "vs. new all this kind of order and then you can hook lambda functions to do some",
    "start": "2049889",
    "end": "2055579"
  },
  {
    "text": "additional work on top of this this is work this is actually used in very often",
    "start": "2055579",
    "end": "2062069"
  },
  {
    "text": "in the close loop to do data augmentation so very common way of doing this is if you have a an application",
    "start": "2062069",
    "end": "2068878"
  },
  {
    "text": "that used the postal code instead of asking the entire address of a person you will just ask the postal code and",
    "start": "2068879",
    "end": "2074940"
  },
  {
    "text": "then you have a lambda function that takes the the stream that sees that and then check the address of that post call",
    "start": "2074940",
    "end": "2081658"
  },
  {
    "text": "go and added to database after that so you can do cool stuff without asking too",
    "start": "2081659",
    "end": "2087060"
  },
  {
    "text": "much information to the user and of course one of the most important service",
    "start": "2087060",
    "end": "2092398"
  },
  {
    "start": "2090000",
    "end": "2109000"
  },
  {
    "text": "to do this kind of large-scale system is you need to have a dynamic routine and",
    "start": "2092399",
    "end": "2098130"
  },
  {
    "text": "rule 53 is our domain name service that you can use for that is the only service",
    "start": "2098130",
    "end": "2103890"
  },
  {
    "text": "that has 100% SLA which is quite interesting and it has a lot of",
    "start": "2103890",
    "end": "2109620"
  },
  {
    "start": "2109000",
    "end": "2223000"
  },
  {
    "text": "different things that you can use especially it supports what we call the",
    "start": "2109620",
    "end": "2114810"
  },
  {
    "text": "traffic policies which are policies that you can set up in route 53 to do for",
    "start": "2114810",
    "end": "2121710"
  },
  {
    "text": "example latency based routing in this case if my resource is is in in a is",
    "start": "2121710",
    "end": "2129300"
  },
  {
    "text": "high latency all the traffic will go to the lower latency resource or you can do",
    "start": "2129300",
    "end": "2135090"
  },
  {
    "text": "geo DNS this is used for example Netflix Instagram Facebook to separate people",
    "start": "2135090",
    "end": "2141510"
  },
  {
    "text": "from different regions so that they have a database in Europe in in in US and",
    "start": "2141510",
    "end": "2146580"
  },
  {
    "text": "things that is and orient the traffic from those people to the right regions",
    "start": "2146580",
    "end": "2152150"
  },
  {
    "text": "if you more into control things weighted",
    "start": "2152150",
    "end": "2157320"
  },
  {
    "text": "round robin is one and this allows you to do of course the round robin which is 50/50 between between resources but you",
    "start": "2157320",
    "end": "2166020"
  },
  {
    "text": "can actually affect that you can now have 10% 90% and this is used very often",
    "start": "2166020",
    "end": "2171450"
  },
  {
    "text": "for canary deployment as well so you can start with 1 percent and 99 percent of traffic to resource that as for example",
    "start": "2171450",
    "end": "2177960"
  },
  {
    "text": "a new version of your software and then you can test that version of the software and programmatically go back",
    "start": "2177960",
    "end": "2183690"
  },
  {
    "text": "very fast to the old version if you experience some issues right so this is",
    "start": "2183690",
    "end": "2189620"
  },
  {
    "text": "great and the all those three policies are so complemented by what we call DNS",
    "start": "2189620",
    "end": "2195390"
  },
  {
    "text": "failover so basically you have a health checks only on each of your endpoints or resources and if any of those fail then",
    "start": "2195390",
    "end": "2203370"
  },
  {
    "text": "you you go into DNS failover so all those can can use DNS failover as a",
    "start": "2203370",
    "end": "2210630"
  },
  {
    "text": "secondary routing protocol dynamic",
    "start": "2210630",
    "end": "2215970"
  },
  {
    "text": "all right so let's look at it how do we do this because that's the point right",
    "start": "2215970",
    "end": "2222220"
  },
  {
    "text": "I want to show you first how are we going to how you do this into a DynamoDB",
    "start": "2222220",
    "end": "2227260"
  },
  {
    "start": "2223000",
    "end": "2456000"
  },
  {
    "text": "this is do you see dynamodb so in dynamodb I'm here I already have a table",
    "start": "2227260",
    "end": "2234760"
  },
  {
    "text": "called dynamos serverless and you could create a new table for example let's say create this is as hard",
    "start": "2234760",
    "end": "2249580"
  },
  {
    "text": "as that to create a database in dynamo DB and you see a couple of things",
    "start": "2249580",
    "end": "2256660"
  },
  {
    "text": "there's a new there's a new one is a call that a tab called global tables my",
    "start": "2256660",
    "end": "2263440"
  },
  {
    "text": "network is really bad so I'm not sure what happens I'll go to wired Network",
    "start": "2263440",
    "end": "2270820"
  },
  {
    "text": "maybe no I'll help if it works okay so",
    "start": "2270820",
    "end": "2280210"
  },
  {
    "text": "let's let's go there I have a dynamo service table here you talked about demo",
    "start": "2280210",
    "end": "2286360"
  },
  {
    "text": "gods right it's always like oh you should be creating my new test table",
    "start": "2286360",
    "end": "2292840"
  },
  {
    "text": "here and then you see there's a new tab here called global table and as you can",
    "start": "2292840",
    "end": "2299110"
  },
  {
    "text": "see I to start using global table you just need to enable string that's that's",
    "start": "2299110",
    "end": "2305410"
  },
  {
    "text": "it alright and then what you do you can start adding regions here and for the moment there's only five regions",
    "start": "2305410",
    "end": "2311320"
  },
  {
    "text": "reported with global table and Frankfurt is so you can actually do us to",
    "start": "2311320",
    "end": "2317140"
  },
  {
    "text": "Frankfurt or Ireland to Frankfurt so here we'll add a region here in",
    "start": "2317140",
    "end": "2322630"
  },
  {
    "text": "Frankfurt a replica will be created and master will be created in Frankfurt and then",
    "start": "2322630",
    "end": "2329350"
  },
  {
    "text": "you can go to the table and see and you can add in all the different four",
    "start": "2329350",
    "end": "2335620"
  },
  {
    "text": "regions that you want I'm cool so you see I've my yes Dennis",
    "start": "2335620",
    "end": "2342570"
  },
  {
    "text": "know so that's what I said you need to start from an empty table currently but",
    "start": "2345220",
    "end": "2351530"
  },
  {
    "text": "we're releasing eventually to come ways to do it on tables that are already",
    "start": "2351530",
    "end": "2356720"
  },
  {
    "text": "existing but it's not yet possible alright cool so this is what's easy here",
    "start": "2356720",
    "end": "2363859"
  },
  {
    "text": "you can see I created a table with dynamo serverless here with region in",
    "start": "2363859",
    "end": "2369530"
  },
  {
    "text": "Ireland in Virginia and then I've emptied it so you can start creating items feedback IDs for example this is",
    "start": "2369530",
    "end": "2377300"
  },
  {
    "text": "just you know and my god I'm so",
    "start": "2377300",
    "end": "2382460"
  },
  {
    "text": "innovative and then you see my item is created here and then you can search for",
    "start": "2382460",
    "end": "2389000"
  },
  {
    "text": "your items this is not this one so I'll switch here my time here in he's been",
    "start": "2389000",
    "end": "2395840"
  },
  {
    "text": "now moved to another region so here I'm in Ireland and then the same table in in",
    "start": "2395840",
    "end": "2402170"
  },
  {
    "text": "North Virginia and it also has the support now you see there is two fields",
    "start": "2402170",
    "end": "2408590"
  },
  {
    "text": "that have appeared here which I didn't add myself you see which is the regions",
    "start": "2408590",
    "end": "2415520"
  },
  {
    "text": "of where this was created and I created the ID in in Virginia so US East one see",
    "start": "2415520",
    "end": "2425000"
  },
  {
    "text": "this is the AWS date regions and then this is the time at which the object was",
    "start": "2425000",
    "end": "2432200"
  },
  {
    "text": "created so you can also monitor your your data I know from which region that",
    "start": "2432200",
    "end": "2438050"
  },
  {
    "text": "popular data is already generating from and things like so you can start you know experiencing you can start",
    "start": "2438050",
    "end": "2444350"
  },
  {
    "text": "imagining amazon.com being powered you know all the website being powered like this synchronizing data between regions",
    "start": "2444350",
    "end": "2451330"
  },
  {
    "text": "think about it and this is very easy easy to do so what we're gonna do and",
    "start": "2451330",
    "end": "2459050"
  },
  {
    "text": "what I'm gonna show you how to do this quite simply we're gonna use them only be table here to do a replication of",
    "start": "2459050",
    "end": "2466730"
  },
  {
    "text": "data between regions and then everything is going to be independent we're gonna have an API get where with lambda function and then what I'm gonna do I'm",
    "start": "2466730",
    "end": "2474109"
  },
  {
    "text": "using route 53 do the routing between different regions",
    "start": "2474109",
    "end": "2479670"
  },
  {
    "text": "allow show you how the policies are working so we started already with",
    "start": "2479670",
    "end": "2484830"
  },
  {
    "text": "DynamoDB we saw this yes sir yes I'll",
    "start": "2484830",
    "end": "2489900"
  },
  {
    "start": "2489000",
    "end": "2689000"
  },
  {
    "text": "leave this in the in the slide so that you you have access to it as well when you download the slides now I want to",
    "start": "2489900",
    "end": "2496590"
  },
  {
    "text": "show you the lambda functions the lambda functions are actually here this is my I",
    "start": "2496590",
    "end": "2503600"
  },
  {
    "text": "have a bunch of lambda functions I have one called post which is put data into",
    "start": "2503600",
    "end": "2509730"
  },
  {
    "text": "dynamodb so as you see you may have seen have a session ID and then I have some",
    "start": "2509730",
    "end": "2515820"
  },
  {
    "text": "comments this is my lambda function and create feedback basically it takes it",
    "start": "2515820",
    "end": "2522390"
  },
  {
    "text": "takes an event and then put this DynamoDB and this is myelin alright I",
    "start": "2522390",
    "end": "2528000"
  },
  {
    "text": "create I create I put data into my table",
    "start": "2528000",
    "end": "2533070"
  },
  {
    "text": "into DynamoDB and then I return in JSON object with that it's a really straightforward way to build and you can",
    "start": "2533070",
    "end": "2540570"
  },
  {
    "text": "see my initialization of tables are done outside of the of the stuff here you can",
    "start": "2540570",
    "end": "2546450"
  },
  {
    "text": "do this but you don't have to do it exactly like this you can directly access the region through the",
    "start": "2546450",
    "end": "2551580"
  },
  {
    "text": "environmental variable here will this will tell you actually in which regions",
    "start": "2551580",
    "end": "2556770"
  },
  {
    "text": "you are is the same way as how you would use a metadata API so that is a good way",
    "start": "2556770",
    "end": "2562859"
  },
  {
    "text": "to not hardcore for example your connections to dynamodb alright so you",
    "start": "2562859",
    "end": "2568859"
  },
  {
    "text": "see my DynamoDB actually connection will use the regions that is from the closest",
    "start": "2568859",
    "end": "2577859"
  },
  {
    "text": "to the regions where I am okay in that case so if I'm in Virginia I will configure directly to use the Virginia",
    "start": "2577859",
    "end": "2585680"
  },
  {
    "text": "database and vice-versa so it's a good way to do that then I have another function called get which I can retrieve",
    "start": "2585680",
    "end": "2592080"
  },
  {
    "text": "this ID from dynamodb that's pretty straightforward as well I get an item this is my key feedback ID and then I",
    "start": "2592080",
    "end": "2600000"
  },
  {
    "text": "pass the ID and then I have health check here and this I'll show you what I'm",
    "start": "2600000",
    "end": "2607650"
  },
  {
    "text": "using it for a might see it's very very advanced health",
    "start": "2607650",
    "end": "2612710"
  },
  {
    "text": "check system strongly suggest use similar very advanced systems in your environments that was a joke buddies for",
    "start": "2612710",
    "end": "2621710"
  },
  {
    "text": "demo purposes I always I have to say it's a joke otherwise I could be held responsible for massive failures that",
    "start": "2621710",
    "end": "2627500"
  },
  {
    "text": "happen tomorrow in first database master crashed and health check crash I've done",
    "start": "2627500",
    "end": "2634070"
  },
  {
    "text": "my job great and then so you'll see here I like",
    "start": "2634070",
    "end": "2640190"
  },
  {
    "text": "the server list framework but I've deployed all those endpoints all those",
    "start": "2640190",
    "end": "2645830"
  },
  {
    "text": "functions using server lists several s framework and here are my diamond DB",
    "start": "2645830",
    "end": "2651380"
  },
  {
    "text": "tables as well this is not the best way to do this but I've done this for tests I could explain later",
    "start": "2651380",
    "end": "2657710"
  },
  {
    "text": "and then I also created a template that we could use for cloud for Sam right but",
    "start": "2657710",
    "end": "2667720"
  },
  {
    "text": "let's do something interesting let's here return 404 so and then let's do SLS",
    "start": "2667720",
    "end": "2676460"
  },
  {
    "text": "deploy into the region east this will deploy the function the health function",
    "start": "2676460",
    "end": "2681500"
  },
  {
    "text": "and while it does this I want to show you something so where is mine so in route 53 this is",
    "start": "2681500",
    "end": "2692420"
  },
  {
    "start": "2689000",
    "end": "2806000"
  },
  {
    "text": "my dashboard I'm using a traffic policy here for the domain that I'll show you I",
    "start": "2692420",
    "end": "2700180"
  },
  {
    "text": "have a traffic policy here version 11 and this traffic policy takes the C name",
    "start": "2700180",
    "end": "2707930"
  },
  {
    "text": "and basically assign a 50/50 weight between the two different endpoints",
    "start": "2707930",
    "end": "2713330"
  },
  {
    "text": "right so I don't do magic Geo DNS or anything like this I just do a simply a simple round robin and what you can see",
    "start": "2713330",
    "end": "2720050"
  },
  {
    "text": "here is actually evaluate target health and I just deployed a lambda function that is being evaluated and you see",
    "start": "2720050",
    "end": "2728300"
  },
  {
    "text": "before it was 200 and in dying route 53 those health checks are checked",
    "start": "2728300",
    "end": "2734810"
  },
  {
    "text": "regularly so you'll see here of my statues they were healthy until now",
    "start": "2734810",
    "end": "2740480"
  },
  {
    "text": "because they were returning 200 right but as soon as my function is going to be deployed this is gonna go",
    "start": "2740480",
    "end": "2746119"
  },
  {
    "text": "into a 400 this jitter because the policy requires that you have for",
    "start": "2746119",
    "end": "2751549"
  },
  {
    "text": "example for errors in three minutes so it's going to take time before that it",
    "start": "2751549",
    "end": "2756789"
  },
  {
    "text": "starts to to return errors but you can see the health checker the monitoring",
    "start": "2756789",
    "end": "2764450"
  },
  {
    "text": "and view currents we last fail check that was some of those but this was",
    "start": "2764450",
    "end": "2773450"
  },
  {
    "text": "April 17 is today and this was still the last one still okay so we'll try to",
    "start": "2773450",
    "end": "2779630"
  },
  {
    "text": "refresh this as soon as there we go you see my health check already is returning",
    "start": "2779630",
    "end": "2785390"
  },
  {
    "text": "400 so now that's it now the my policy",
    "start": "2785390",
    "end": "2790460"
  },
  {
    "text": "is failing over to Europe so all the data or the traffic will go to Europe and we'll see the consequences after",
    "start": "2790460",
    "end": "2799309"
  },
  {
    "text": "that cool so now we are there we've built the lambda function we've seen",
    "start": "2799309",
    "end": "2804650"
  },
  {
    "text": "this API gateway I want to show you quickly how the API get way is built",
    "start": "2804650",
    "end": "2810890"
  },
  {
    "start": "2806000",
    "end": "3241000"
  },
  {
    "text": "I've of course through the surveillance framework when you deploy your lambda",
    "start": "2810890",
    "end": "2817250"
  },
  {
    "text": "functions an API gateway with three endpoint was created one we create get in health and if you want to see this is",
    "start": "2817250",
    "end": "2824539"
  },
  {
    "text": "exactly what it is here into my service template of my get feedback which is",
    "start": "2824539",
    "end": "2833599"
  },
  {
    "text": "create feedback getting feedback and then lambda here and my path is health",
    "start": "2833599",
    "end": "2839210"
  },
  {
    "text": "create and then get with the idea so my",
    "start": "2839210",
    "end": "2845029"
  },
  {
    "text": "PR gateway is or has been created now what is interesting to see here and you",
    "start": "2845029",
    "end": "2850880"
  },
  {
    "text": "couldn't do that before you need to create custom domain names you can imagine by default API gateway comes",
    "start": "2850880",
    "end": "2857420"
  },
  {
    "text": "with a CloudFront distribution which makes it global and when you do routing you especially dynamic routing between",
    "start": "2857420",
    "end": "2864410"
  },
  {
    "text": "regions you don't want that right so you need to remove the API gateway the default API gateway and move into a",
    "start": "2864410",
    "end": "2870950"
  },
  {
    "text": "custom domain name so that I can also have a domain name in Rob 53 that is consistent with my",
    "start": "2870950",
    "end": "2876710"
  },
  {
    "text": "yeah Gateway so what you can say I'm bringing brought my ACM certificate to",
    "start": "2876710",
    "end": "2882980"
  },
  {
    "text": "API gateway and assign this to the to the API gateway here and by doing this",
    "start": "2882980",
    "end": "2891109"
  },
  {
    "text": "it created what we call a target domain name and this target domain name is",
    "start": "2891109",
    "end": "2896450"
  },
  {
    "text": "actually created by the system so that you can do health checks on this you see",
    "start": "2896450",
    "end": "2902570"
  },
  {
    "text": "my health check is actually I'll show you my else check is using the target",
    "start": "2902570",
    "end": "2913119"
  },
  {
    "text": "the tar the the endpoint here it's not my instructions my routing policy is",
    "start": "2913119",
    "end": "2918800"
  },
  {
    "text": "reaching the target endpoints okay so you can do stuff like this and this is very important because without custom",
    "start": "2918800",
    "end": "2926570"
  },
  {
    "text": "domain name you wouldn't have a consistent domain across your cname and",
    "start": "2926570",
    "end": "2933260"
  },
  {
    "text": "then the the all other API gateway endpoint I've been creative okay and",
    "start": "2933260",
    "end": "2940070"
  },
  {
    "text": "this is now the endpoint so I have now I have this and as I say this is possible",
    "start": "2940070",
    "end": "2946880"
  },
  {
    "text": "because of custom and domain then you can do now an API get where and we already saw that policies so now we have",
    "start": "2946880",
    "end": "2954560"
  },
  {
    "text": "a system that looks like this and we also know that my health check now is failing and pushing stuff only to you",
    "start": "2954560",
    "end": "2961160"
  },
  {
    "text": "and my API is quite simple create a new new term and we will do post my API is",
    "start": "2961160",
    "end": "2973670"
  },
  {
    "text": "quite simple I'll you see back here in the back I had quite quite a mo quite",
    "start": "2973670",
    "end": "2980330"
  },
  {
    "text": "some information I called the post on the global dynamodb I don't at me",
    "start": "2980330",
    "end": "2986330"
  },
  {
    "text": "endpoint create so it will call the create function then I pass some data into the body of message name session",
    "start": "2986330",
    "end": "2993830"
  },
  {
    "text": "some score I sessions cause once not really good it was a session on stage",
    "start": "2993830",
    "end": "3000820"
  },
  {
    "text": "maker but Julian but still thing is awesome it was just a joke",
    "start": "3000820",
    "end": "3007060"
  },
  {
    "text": "and then you know you send that that takes some times there was no no no",
    "start": "3007060",
    "end": "3014100"
  },
  {
    "text": "none of the system was up so it actually launched it was called start and now the",
    "start": "3014100",
    "end": "3019980"
  },
  {
    "text": "system should be replicated so we can of course have a look at dynamodb and see",
    "start": "3019980",
    "end": "3026310"
  },
  {
    "text": "if my item has been has been there and of course I have a demo effect alright",
    "start": "3026310",
    "end": "3034380"
  },
  {
    "text": "is here my feedback ID here there is it in the other region here of course not",
    "start": "3034380",
    "end": "3042810"
  },
  {
    "text": "because it's a good good effect wonderful thank you very much for coming",
    "start": "3042810",
    "end": "3051350"
  },
  {
    "text": "sit let's let the system to to warm up a little bit so we could go and do a bunch",
    "start": "3051350",
    "end": "3057990"
  },
  {
    "text": "of requests like this so that we flood the system now at least the lambda",
    "start": "3057990",
    "end": "3065640"
  },
  {
    "text": "function on the AP gateway are warm and runny the lambda functions for the dynamo D stream should be should be",
    "start": "3065640",
    "end": "3073380"
  },
  {
    "text": "starting to warm up as well right this",
    "start": "3073380",
    "end": "3079260"
  },
  {
    "text": "is just by my request I hear at least yeah they haven't updated this so it",
    "start": "3079260",
    "end": "3085590"
  },
  {
    "text": "means something funny is happening of course I so love this demos what we can",
    "start": "3085590",
    "end": "3096870"
  },
  {
    "text": "do is we can say actually we'll test the test test the system so now of course if",
    "start": "3096870",
    "end": "3104880"
  },
  {
    "text": "I retrieve an ID that is not distributed it should fail but since my actually",
    "start": "3104880",
    "end": "3112530"
  },
  {
    "text": "alarm since my system is now only going to one region I can retreat the systems",
    "start": "3112530",
    "end": "3118070"
  },
  {
    "text": "because it's one one of the health check is now for for so the system only send",
    "start": "3118070",
    "end": "3125730"
  },
  {
    "text": "traffic to one regions and you can see actually let's look at the the rough 53:4 before before looking at what",
    "start": "3125730",
    "end": "3134970"
  },
  {
    "text": "happened on the rest of the system attack my health checks and you can see",
    "start": "3134970",
    "end": "3141900"
  },
  {
    "text": "now my actually the us one is unhealthy so that means none of the no traffic will will be directed",
    "start": "3141900",
    "end": "3147900"
  },
  {
    "text": "there so hopefully if DynamoDB",
    "start": "3147900",
    "end": "3154190"
  },
  {
    "text": "replication would start working of course it doesn't work so well wonderful",
    "start": "3154190",
    "end": "3160759"
  },
  {
    "text": "that's just where I've experienced issues with this table before so let's",
    "start": "3160759",
    "end": "3169470"
  },
  {
    "text": "delete all the items and see what I can do now you experience real with the life",
    "start": "3169470",
    "end": "3176730"
  },
  {
    "text": "of what it is to go on stage and do demos and fail them let's go it's good",
    "start": "3176730",
    "end": "3182759"
  },
  {
    "text": "stuff alright so now we're empty let's",
    "start": "3182759",
    "end": "3197720"
  },
  {
    "text": "do another posts when let's hope this one will generate some traffic I'd",
    "start": "3197720",
    "end": "3209849"
  },
  {
    "text": "understand because actually when I did I temp myself the system was I was working",
    "start": "3209849",
    "end": "3215539"
  },
  {
    "text": "alright so obviously I have a cyst problem with this database so but trust",
    "start": "3215539",
    "end": "3221670"
  },
  {
    "text": "me it works seriously it does a trust trust alright",
    "start": "3221670",
    "end": "3230940"
  },
  {
    "text": "anyway I learned to live with failures that's part of our roles it's good good",
    "start": "3230940",
    "end": "3238589"
  },
  {
    "text": "stuff yeah what's up",
    "start": "3238589",
    "end": "3245960"
  },
  {
    "start": "3241000",
    "end": "3253000"
  },
  {
    "text": "unhealthy only affects route 53 health checks so it shouldn't it shouldn't",
    "start": "3246269",
    "end": "3252809"
  },
  {
    "text": "affect at all DynamoDB global table replications [Music]",
    "start": "3252809",
    "end": "3258919"
  },
  {
    "text": "and the table is empty it's great you try to find excuse for the systems it",
    "start": "3265310",
    "end": "3270510"
  },
  {
    "text": "just doesn't work today for them reason I mean I really appreciate your help",
    "start": "3270510",
    "end": "3277110"
  },
  {
    "text": "guys please feed but that's just the way it is anyway on conclusion yeah we",
    "start": "3277110",
    "end": "3286080"
  },
  {
    "text": "learned about reliability and failures actually so it's not much to say right",
    "start": "3286080",
    "end": "3291720"
  },
  {
    "text": "I'm happy to take questions I just need to I do a lot of demos with",
    "start": "3291720",
    "end": "3298080"
  },
  {
    "text": "this table so something might have happened so I had and it just might be this so I don't know what happened to be",
    "start": "3298080",
    "end": "3304950"
  },
  {
    "text": "honest yeah let's I'll deploy them I'll",
    "start": "3304950",
    "end": "3310920"
  },
  {
    "text": "deploy the new health so let's let's do like this let's pull back to 200 and the",
    "start": "3310920",
    "end": "3316770"
  },
  {
    "text": "SS deploy you asked and see what happens",
    "start": "3316770",
    "end": "3322820"
  },
  {
    "text": "maybe if I do from the US is but it should replicate from everywhere so but",
    "start": "3322970",
    "end": "3332869"
  },
  {
    "text": "absolutely it's eventually consistent",
    "start": "3333710",
    "end": "3339710"
  },
  {
    "text": "maybe tomorrow",
    "start": "3339710",
    "end": "3343250"
  },
  {
    "text": "what's up I really appreciate you guys",
    "start": "3345080",
    "end": "3355980"
  },
  {
    "text": "try to help [Music]",
    "start": "3355980",
    "end": "3361050"
  },
  {
    "text": "actually you're right what are you",
    "start": "3361410",
    "end": "3366999"
  },
  {
    "text": "kidding me thank you ice that's just weird",
    "start": "3366999",
    "end": "3373839"
  },
  {
    "text": "it works nice so actually let's for the",
    "start": "3373839",
    "end": "3385390"
  },
  {
    "text": "sake of verifying please because if it breaks it's just fun to break until the end let's delete all the items so that",
    "start": "3385390",
    "end": "3391809"
  },
  {
    "text": "we are there now all the items should be deleted here now they are what's up",
    "start": "3391809",
    "end": "3403109"
  },
  {
    "text": "and now it's 200 yeah of course but I want to see if if I do an HTTP POST now",
    "start": "3404609",
    "end": "3411670"
  },
  {
    "text": "here just one that'll be I'll have my ID here and then is it now replicated to",
    "start": "3411670",
    "end": "3419049"
  },
  {
    "text": "other regions party beer nice I didn't",
    "start": "3419049",
    "end": "3425499"
  },
  {
    "text": "say that sorry sorry Jeff just delete this really all right I'm done thank you",
    "start": "3425499",
    "end": "3433269"
  },
  {
    "text": "very much thanks for helping fix any questions I'm",
    "start": "3433269",
    "end": "3444729"
  },
  {
    "text": "happy to take them like unready now I'm super ready yeah bring yeah",
    "start": "3444729",
    "end": "3459479"
  },
  {
    "text": "now so you bring your just your Java code inside a package right and what we'll do when you deploy that we will",
    "start": "3471800",
    "end": "3480330"
  },
  {
    "text": "start GBM deploy your code dependencies and then just run your code ourself you don't yeah yeah right so you're kind of",
    "start": "3480330",
    "end": "3507480"
  },
  {
    "text": "touching the idea of hot start cold start and and hot start so when you",
    "start": "3507480",
    "end": "3513450"
  },
  {
    "text": "don't use the system there's nothing no infrastructure created so what we do is",
    "start": "3513450",
    "end": "3519240"
  },
  {
    "text": "the first call that happens on your lambda function we give you a cluster of",
    "start": "3519240",
    "end": "3525870"
  },
  {
    "text": "containers Linux containers under the hood with the right language that you want so supporting GBM in that in that",
    "start": "3525870",
    "end": "3532500"
  },
  {
    "text": "sense so that your containers the containers in the infrastructure will have GBM it will need to start so it",
    "start": "3532500",
    "end": "3538860"
  },
  {
    "text": "takes sometimes like 15 seconds sometimes and then we have the code deploy and then call that function",
    "start": "3538860",
    "end": "3546030"
  },
  {
    "text": "through the handler functions and then if you don't use the system for five minute we'll shut it down so if you",
    "start": "3546030",
    "end": "3553290"
  },
  {
    "text": "reuse the system it's hot and running and you see the first request that I did on lambda was quite slow but then they",
    "start": "3553290",
    "end": "3560550"
  },
  {
    "text": "are they are really fast",
    "start": "3560550",
    "end": "3563630"
  },
  {
    "text": "so you're talking on route 53 TTL oh no",
    "start": "3571380",
    "end": "3579390"
  },
  {
    "text": "no no right no you don't pay lambda you paper execution 100 milliseconds",
    "start": "3579390",
    "end": "3585089"
  },
  {
    "text": "increments right if you lambda functions to return takes 200 milliseconds you'll",
    "start": "3585089",
    "end": "3592019"
  },
  {
    "text": "be paid 200 milliseconds we pay for an infrastructure for keeping it five-minute but that's also why we need",
    "start": "3592019",
    "end": "3598109"
  },
  {
    "text": "to shut it down eventually because otherwise we would need to keep infrastructure up and running for everyone even no no you pay for lambda",
    "start": "3598109",
    "end": "3608489"
  },
  {
    "text": "the pricing of lambda is paper 100 millisecond increment and then the good",
    "start": "3608489",
    "end": "3613829"
  },
  {
    "text": "thing is every account as 1 million invocation of lambda for free per month",
    "start": "3613829",
    "end": "3619650"
  },
  {
    "text": "forever all right so I had customer coming on stage and with me at the summit talking about how they do server",
    "start": "3619650",
    "end": "3627059"
  },
  {
    "text": "less in free chair because they have a million invocation they use a lot of",
    "start": "3627059",
    "end": "3633029"
  },
  {
    "text": "different accounts each of them have millions of invocations and just do a smart yep what do you do do we need to",
    "start": "3633029",
    "end": "3650729"
  },
  {
    "text": "do that we need to do the math on what kind of ec2 instance and all this guy",
    "start": "3650729",
    "end": "3656119"
  },
  {
    "text": "lambda functions are different than ec2 instance lambda functions are tuned by what we call memory so 120 Meg from up",
    "start": "3656119",
    "end": "3664619"
  },
  {
    "text": "to one five and then the memory was three we just updated then the CPU is",
    "start": "3664619",
    "end": "3674069"
  },
  {
    "text": "proportionally increasing with the memory as well so it's like a power button right so you can't really compare",
    "start": "3674069",
    "end": "3679400"
  },
  {
    "text": "to to an ec2 instances it's very different but you know customers that do",
    "start": "3679400",
    "end": "3688199"
  },
  {
    "text": "and that's what was I say lambda functions is great you need to have the right use case right if you're if you",
    "start": "3688199",
    "end": "3693749"
  },
  {
    "text": "want to do calculation that are longer than five minutes very heavy very you",
    "start": "3693749",
    "end": "3698909"
  },
  {
    "text": "know do a calculation right that's the point most of the customers do save using",
    "start": "3698909",
    "end": "3704290"
  },
  {
    "text": "server less but they add in sometimes complexity because these new tools to",
    "start": "3704290",
    "end": "3710410"
  },
  {
    "text": "understand and we were discussing with gentleman in front that you know those are new tools that you need to learn if",
    "start": "3710410",
    "end": "3716920"
  },
  {
    "text": "you have hundred and lambda functions do the work how you gonna manage this mano",
    "start": "3716920",
    "end": "3721960"
  },
  {
    "text": "repos no more repos all this kind of stuff so it's adds but it's for you to",
    "start": "3721960",
    "end": "3728110"
  },
  {
    "text": "make the right call I would say yeah",
    "start": "3728110",
    "end": "3740260"
  },
  {
    "text": "absolutely it's it's an object implementation right secret breaker is just a way for you to implement or to",
    "start": "3740260",
    "end": "3746080"
  },
  {
    "text": "encapsulate a request within an object is very doesn't have to it can be per",
    "start": "3746080",
    "end": "3754570"
  },
  {
    "text": "invitation or you can use the cache you can use memcache or readies to keep the state of an object of a circuit breaker",
    "start": "3754570",
    "end": "3760210"
  },
  {
    "text": "object bar ID inside lambda function so you have a lambda functions which as a",
    "start": "3760210",
    "end": "3765220"
  },
  {
    "text": "circuit breaker that checks validity of a dependency and pushed that data into memcache so that other lambda functions",
    "start": "3765220",
    "end": "3771190"
  },
  {
    "text": "can use it as well no problem they never store the state of a of any application",
    "start": "3771190",
    "end": "3779350"
  },
  {
    "text": "inside lambda or stuff like this it's never the right thing to do because it might just disappear so always use",
    "start": "3779350",
    "end": "3786280"
  },
  {
    "text": "memcache radius or systems to share States between instances through a",
    "start": "3786280",
    "end": "3792150"
  },
  {
    "text": "in-memory stuff yep I'm sorry I didn't",
    "start": "3792150",
    "end": "3799990"
  },
  {
    "text": "hear",
    "start": "3799990",
    "end": "3802110"
  },
  {
    "text": "so the the question is what happened to the memory in the lambda function of the",
    "start": "3808590",
    "end": "3814540"
  },
  {
    "text": "lambda function after it's executed after five minutes we wiped it up we do",
    "start": "3814540",
    "end": "3826840"
  },
  {
    "text": "not guarantee that so and this is a good thing is we do promote the reuse for",
    "start": "3826840",
    "end": "3834910"
  },
  {
    "text": "example the initializations of databases and stuff outside of the scope of the function so that other functions can",
    "start": "3834910",
    "end": "3840310"
  },
  {
    "text": "reuse it because then it's initially the initialized inside the memory so for example if you would have database pools",
    "start": "3840310",
    "end": "3846790"
  },
  {
    "text": "and things like these connection pools that you want to reuse you can and this is the right way to do it right never",
    "start": "3846790",
    "end": "3852220"
  },
  {
    "text": "initialize within the functions because the function is rerun all the time but not what is outside of the function",
    "start": "3852220",
    "end": "3858810"
  },
  {
    "text": "alright so but we do not guarantee you always have to have a possibility to",
    "start": "3858810",
    "end": "3864040"
  },
  {
    "text": "reinitialize things",
    "start": "3864040",
    "end": "3867000"
  },
  {
    "text": "you",
    "start": "3891670",
    "end": "3893730"
  },
  {
    "text": "so the question is if you have an API gateway calling a lambda functions how",
    "start": "3905400",
    "end": "3911980"
  },
  {
    "text": "do you authorize the call so that your lambda function is not executed by someone that should not execute it right",
    "start": "3911980",
    "end": "3917170"
  },
  {
    "text": "well you would want to do this on the API gateway right make sure that your call is authorized through Cuneta a good",
    "start": "3917170",
    "end": "3925300"
  },
  {
    "text": "way to do canítö AWS Amazon could Nita coj and eto is a service that allows you",
    "start": "3925300",
    "end": "3932950"
  },
  {
    "text": "to authenticate your users using open IDs it supports it supports all the",
    "start": "3932950",
    "end": "3940480"
  },
  {
    "text": "authentication things that you want like through open ID or samples or things like this and then you can run your own",
    "start": "3940480",
    "end": "3946270"
  },
  {
    "text": "you can actually write your own lambda function that does custom authorizer if you have your own implementation of",
    "start": "3946270",
    "end": "3951849"
  },
  {
    "text": "authorizations yeah if it's a custom",
    "start": "3951849",
    "end": "3959710"
  },
  {
    "text": "lambda then you have to pay if it's invoked all the time here of course all",
    "start": "3959710",
    "end": "3965589"
  },
  {
    "text": "right so you you would want to use wife rules on your you know on on your on",
    "start": "3965589",
    "end": "3971020"
  },
  {
    "text": "your CDN right to expel the IPS that are doing that are doing DDoS on your IPS",
    "start": "3971020",
    "end": "3979420"
  },
  {
    "text": "right I think we there's the next session let's take it out so thank you",
    "start": "3979420",
    "end": "3987490"
  },
  {
    "text": "very much [Applause]",
    "start": "3987490",
    "end": "3995309"
  }
]