[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "hello good morning or good evening wherever your day finds you welcome to the amazon web services partner webinar",
    "start": "1120",
    "end": "7680"
  },
  {
    "text": "series our topic today will feature deploying your business critical sql server apps",
    "start": "7680",
    "end": "12960"
  },
  {
    "text": "on amazon ec2 i'm your host sherry sullivan i'm here with the partner marketing team in",
    "start": "12960",
    "end": "18640"
  },
  {
    "text": "seattle and before we get started i'd like to just mention a couple of housekeeping items",
    "start": "18640",
    "end": "24640"
  },
  {
    "text": "we are recording today's webcast and we will make it available post event i'd also like to remind folks",
    "start": "24640",
    "end": "31840"
  },
  {
    "text": "that in your browser you have the opportunity to submit questions anytime during this",
    "start": "31840",
    "end": "37360"
  },
  {
    "text": "webcast and we'll take a few minutes at the close to respond to those questions so",
    "start": "37360",
    "end": "42719"
  },
  {
    "text": "please feel free to submit as the webcast moves along i'd also like to remind folks that we do",
    "start": "42719",
    "end": "48559"
  },
  {
    "text": "make our content available on the aws youtube channel as well as slideshare",
    "start": "48559",
    "end": "56079"
  },
  {
    "text": "i'm pleased to be joined today by tony tomarchio who's the director of field engineering with vios who is one of our",
    "start": "57600",
    "end": "64559"
  },
  {
    "text": "aws technology partners as well as our own miles ward who joins us today from",
    "start": "64559",
    "end": "70560"
  },
  {
    "text": "tokyo japan who's a senior solutions architect here at aws",
    "start": "70560",
    "end": "76320"
  },
  {
    "text": "we'll begin with miles providing us with just an overview of the enterprise infrastructure on aws followed by tony",
    "start": "76320",
    "end": "83119"
  },
  {
    "text": "who will give us some sql insights and a demo that showcases soundless sql failover",
    "start": "83119",
    "end": "90320"
  },
  {
    "text": "cluster on aws so with that miles i'll go ahead and transition to you take it away miles",
    "start": "90320",
    "end": "96799"
  },
  {
    "text": "ward jerry thank you very much again this is miles ward i'm a solutions",
    "start": "96799",
    "end": "102720"
  },
  {
    "start": "98000",
    "end": "132000"
  },
  {
    "text": "architect with amazon web services i'm excited to speak with everybody",
    "start": "102720",
    "end": "108079"
  },
  {
    "text": "today one of the core things we are hearing from the aws",
    "start": "108079",
    "end": "113680"
  },
  {
    "text": "customer base is a real focus and a drive to adopt technologies",
    "start": "113680",
    "end": "120079"
  },
  {
    "text": "that are disruptive and innovative and drive real value into their businesses",
    "start": "120079",
    "end": "127600"
  },
  {
    "text": "and the interesting thing we've heard is that they're able to do that with aws because",
    "start": "127600",
    "end": "133840"
  },
  {
    "text": "of frankly just how costly and complex the history of on-premises physical",
    "start": "133840",
    "end": "141040"
  },
  {
    "text": "infrastructure is you require like you know like any kind of business",
    "start": "141040",
    "end": "146319"
  },
  {
    "text": "that's built out of parts and tin and computers and wiring and cabling and",
    "start": "146319",
    "end": "151840"
  },
  {
    "text": "data center facilities there are really large capital expenditures you have the risk of very low utilization of those",
    "start": "151840",
    "end": "159040"
  },
  {
    "text": "systems the prices for uh you know top you know top quality",
    "start": "159040",
    "end": "164319"
  },
  {
    "text": "devices you know continue to be high uh and on top of the actual capital",
    "start": "164319",
    "end": "170640"
  },
  {
    "text": "purchases you have all of the management and administration both of maintenance as well as the procurement",
    "start": "170640",
    "end": "177440"
  },
  {
    "text": "process itself of acquiring all of that capital and justifying it",
    "start": "177440",
    "end": "182640"
  },
  {
    "text": "and given the expense and the the time required to build these kinds",
    "start": "182640",
    "end": "187840"
  },
  {
    "text": "of systems you also have you know a real reluctance and uh and structural resistance to",
    "start": "187840",
    "end": "194640"
  },
  {
    "text": "building things that can scale to meet the demands of businesses what",
    "start": "194640",
    "end": "199760"
  },
  {
    "text": "we've heard from folks like gartner is that the core i.t part of even the biggest and most",
    "start": "199760",
    "end": "206560"
  },
  {
    "text": "efficient enterprises often spends 80 percent or more of its time just keeping",
    "start": "206560",
    "end": "212319"
  },
  {
    "text": "the lights on just running the basics that power and infrastructure so those business values trying to",
    "start": "212319",
    "end": "219680"
  },
  {
    "text": "figure out how to deliver better value to shareholders more innovative products how to come to",
    "start": "219680",
    "end": "225920"
  },
  {
    "text": "market faster drove aws to build a set of services that deliver some really",
    "start": "225920",
    "end": "232400"
  },
  {
    "text": "significant disruptive than its business benefits we wanted to build a system",
    "start": "232400",
    "end": "238400"
  },
  {
    "text": "that demanded no upfront investment we don't want customers we know that there are",
    "start": "238400",
    "end": "244720"
  },
  {
    "text": "business opportunities that are made possible by eliminating the capital expenditure",
    "start": "244720",
    "end": "249920"
  },
  {
    "text": "component of an infrastructure design we also want to bring the total cost of ownership way",
    "start": "249920",
    "end": "257199"
  },
  {
    "text": "way down for infrastructure these computers are supposed to be a commodity now if anything what cloud",
    "start": "257199",
    "end": "264000"
  },
  {
    "text": "computing does is turn them into a utility and we want like all utility consumers to lower prices as often as",
    "start": "264000",
    "end": "271600"
  },
  {
    "text": "possible we also think that it makes sense for businesses to pay only for what you use just like your power bill",
    "start": "271600",
    "end": "278240"
  },
  {
    "text": "you don't have to pay for how much compute capacity you might need",
    "start": "278240",
    "end": "283360"
  },
  {
    "text": "you pay for how much you're actually using and typically you're paying by the hour for aws services we also knew that",
    "start": "283360",
    "end": "290880"
  },
  {
    "text": "with the number of customers that would want to use a system like this that you really have to be able to",
    "start": "290880",
    "end": "296720"
  },
  {
    "text": "operate in a totally self-service way who wants to wait for the vendor to get things set up or for things to get",
    "start": "296720",
    "end": "303120"
  },
  {
    "text": "shipped in the mail or for builds to complete with aws everything is an api or a cli or an easy",
    "start": "303120",
    "end": "312400"
  },
  {
    "text": "web interface away from as fast as you can work through the process uh easy fast deployment you've",
    "start": "312400",
    "end": "320080"
  },
  {
    "text": "also heard from customers that because of those advantages low cost really only paying for what you use and being able",
    "start": "320080",
    "end": "326639"
  },
  {
    "text": "to control what you use you can really grow and even sometimes more importantly",
    "start": "326639",
    "end": "332400"
  },
  {
    "text": "shrink to accommodate the actual business need for infrastructure how",
    "start": "332400",
    "end": "338160"
  },
  {
    "text": "different from the old way of doing it because you have that ability to grow and shrink now now you can capitalize on",
    "start": "338160",
    "end": "344800"
  },
  {
    "text": "opportunities because you've lowered the risk of experimentation you've made it",
    "start": "344800",
    "end": "350400"
  },
  {
    "text": "easier to follow a small experiment with a big scaled infrastructure if the",
    "start": "350400",
    "end": "356880"
  },
  {
    "text": "market demands it and to capitalize on opportunity so",
    "start": "356880",
    "end": "362080"
  },
  {
    "text": "we thought that was a good idea and the market voted and i you know i've seen lots of these magic quantum",
    "start": "362080",
    "end": "368240"
  },
  {
    "text": "charts and gartner does a good job of evaluating lots of different technical spaces but i haven't seen very many of",
    "start": "368240",
    "end": "374319"
  },
  {
    "text": "them with that far of a gap between the market leader and the also ram in this",
    "start": "374319",
    "end": "380560"
  },
  {
    "text": "space so we're hearing from a lot of customers that we've really found something that's valuable and we're we're excited to",
    "start": "380560",
    "end": "388240"
  },
  {
    "text": "continue to invest in this business and see it grow so how did what are a couple of different",
    "start": "388240",
    "end": "394479"
  },
  {
    "start": "393000",
    "end": "437000"
  },
  {
    "text": "ways that works first thing is you've really taken a very open approach to",
    "start": "394479",
    "end": "400000"
  },
  {
    "text": "building systems we want to make sure that you aren't uh attached or locked into any",
    "start": "400000",
    "end": "406080"
  },
  {
    "text": "specific software vendor or stack we have sdks in",
    "start": "406080",
    "end": "411199"
  },
  {
    "text": "seven different programming languages today and we support applications from not",
    "start": "411199",
    "end": "417199"
  },
  {
    "text": "only the open source uh you know or free market vendors but also the biggest",
    "start": "417199",
    "end": "422639"
  },
  {
    "text": "commercial software vendors in the world have chosen aws as a great platform to",
    "start": "422639",
    "end": "428160"
  },
  {
    "text": "run their most sophisticated applications on so we we also know that those applications",
    "start": "428160",
    "end": "434800"
  },
  {
    "text": "now are being used across businesses in every vertical in 190 countries around",
    "start": "434800",
    "end": "441280"
  },
  {
    "start": "437000",
    "end": "492000"
  },
  {
    "text": "the world and delivering value from from the core uh you know architecture components that",
    "start": "441280",
    "end": "448000"
  },
  {
    "text": "line of business applications and these other kinds of core modules that drive",
    "start": "448000",
    "end": "453280"
  },
  {
    "text": "you know the beating heart of big business through the big high scale",
    "start": "453280",
    "end": "459199"
  },
  {
    "text": "high scalability web applications social media systems gaming infrastructure",
    "start": "459199",
    "end": "464560"
  },
  {
    "text": "there's also an you know really exciting developments in big data analysis high performance computing",
    "start": "464560",
    "end": "471360"
  },
  {
    "text": "you know computational fluid dynamics analysis the cloud because of its ability to deliver",
    "start": "471360",
    "end": "477199"
  },
  {
    "text": "high performance infrastructure at a reasonable price in a way that's controllable directly by your developers",
    "start": "477199",
    "end": "484000"
  },
  {
    "text": "has enabled really unique solutions across each of these different verticals",
    "start": "484000",
    "end": "489440"
  },
  {
    "text": "and we know that it wouldn't just be folks in silicon valley it would be folks in the silicon beach and the",
    "start": "489440",
    "end": "496000"
  },
  {
    "start": "492000",
    "end": "554000"
  },
  {
    "text": "philippine wadi and the silicon desert that all want to be able to use this so we started to design and deploy the same",
    "start": "496000",
    "end": "503280"
  },
  {
    "text": "aws infrastructure across the world so now we have nine distinct regions",
    "start": "503280",
    "end": "509759"
  },
  {
    "text": "uh we're available on four different continents at this point we're really able to serve",
    "start": "509759",
    "end": "516000"
  },
  {
    "text": "customer workload in a global way without the kind of",
    "start": "516000",
    "end": "521518"
  },
  {
    "text": "undifferentiated heavy lifting of the contract block and tackling and currency",
    "start": "521519",
    "end": "527040"
  },
  {
    "text": "exchanges and all the other work that it takes to build a system that really works the same with the same",
    "start": "527040",
    "end": "533519"
  },
  {
    "text": "api across the planet and on top of that globally distributed infrastructure that",
    "start": "533519",
    "end": "539839"
  },
  {
    "text": "has all these benefits for latency for locality of data for legal compliance for",
    "start": "539839",
    "end": "546080"
  },
  {
    "text": "uh for you know this sort of geographical penetration into different customer bases we've also built a really",
    "start": "546080",
    "end": "552800"
  },
  {
    "text": "broad set of services so not only do we have these foundational components like",
    "start": "552800",
    "end": "558320"
  },
  {
    "start": "554000",
    "end": "597000"
  },
  {
    "text": "ec2 where you rent computers by the hour or s3 where we store data at",
    "start": "558320",
    "end": "563519"
  },
  {
    "text": "phenomenally high durability we also have higher level aggregated services",
    "start": "563519",
    "end": "568640"
  },
  {
    "text": "you know things like uh elastic search where we uh you know we make it so that you can easily",
    "start": "568640",
    "end": "575120"
  },
  {
    "text": "cloud surfer you make it so you can easily create a search index or you know we'll make elastic mapreduce",
    "start": "575120",
    "end": "581519"
  },
  {
    "text": "where it's easy to run and manage big habit clusters on top of aws so",
    "start": "581519",
    "end": "587040"
  },
  {
    "text": "one of the most important categories of those services places where there are lots of different approaches",
    "start": "587040",
    "end": "593200"
  },
  {
    "text": "is running database software so we know the biggest applications in the world depend on structure and storage and",
    "start": "593200",
    "end": "600240"
  },
  {
    "start": "597000",
    "end": "665000"
  },
  {
    "text": "there's a myriad different ways of building databases in the cloud so not",
    "start": "600240",
    "end": "606480"
  },
  {
    "text": "only can you run standard off the shelf relational database software directly on ec2 where you have",
    "start": "606480",
    "end": "613440"
  },
  {
    "text": "root level access or administrator access to individual computers that you rent by the hour which make it so that",
    "start": "613440",
    "end": "620240"
  },
  {
    "text": "you can design and deploy exactly the way you want um without any kind of constraints about",
    "start": "620240",
    "end": "626240"
  },
  {
    "text": "uh you know about your access to the control and design we've also heard from customers that some of that stuff is",
    "start": "626240",
    "end": "632079"
  },
  {
    "text": "complex and so they want more managed solutions as well so we've built a service called rds where we manage",
    "start": "632079",
    "end": "638399"
  },
  {
    "text": "relational databases on demand for customers we've also done a bunch of the foundational work",
    "start": "638399",
    "end": "644399"
  },
  {
    "text": "and delivered products around the nosql market space both hosting nosql databases on ec2 as",
    "start": "644399",
    "end": "652079"
  },
  {
    "text": "well as amazon managed non-sequel services like dynamodb and simpledb",
    "start": "652079",
    "end": "658000"
  },
  {
    "text": "so we heard from those customers that are running databases on youtube",
    "start": "658000",
    "end": "663440"
  },
  {
    "text": "that they want to run big databases at first you know a lot of customers were powering you know web applications or",
    "start": "663440",
    "end": "670640"
  },
  {
    "text": "social media systems or games but now we're talking about the core databases that power the heart of big enterprise",
    "start": "670640",
    "end": "678480"
  },
  {
    "text": "and so you need things like solid-state disk local for the instance up to two terabytes on our high ones 4x",
    "start": "678480",
    "end": "685279"
  },
  {
    "text": "largest or 244 gigs of memory in the cr1 8x large",
    "start": "685279",
    "end": "690959"
  },
  {
    "text": "instances for data warehousing style applications we even have instances with 48 terabytes of local disk so very",
    "start": "690959",
    "end": "698720"
  },
  {
    "text": "powerful instances all of which you can rent by the hour to deliver high",
    "start": "698720",
    "end": "703920"
  },
  {
    "text": "performance for online and offline database workloads so",
    "start": "703920",
    "end": "709680"
  },
  {
    "text": "we've also worked really hard on our product where we host and manage databases that's a",
    "start": "709680",
    "end": "715839"
  },
  {
    "text": "service called rds and rds has all of these functions for pre-configuring and automatically",
    "start": "715839",
    "end": "722399"
  },
  {
    "start": "719000",
    "end": "741000"
  },
  {
    "text": "deploying and managing at high scale database servers we have functions for",
    "start": "722399",
    "end": "728560"
  },
  {
    "text": "mysql for oracle and we heard from customers that they wanted sql server as well so we've built this managed service",
    "start": "728560",
    "end": "735839"
  },
  {
    "text": "to deliver and deploy those systems on their own the big advantage for rds is a",
    "start": "735839",
    "end": "741360"
  },
  {
    "start": "741000",
    "end": "801000"
  },
  {
    "text": "bunch of again that undifferentiated heavy lifting installing and patching",
    "start": "741360",
    "end": "747040"
  },
  {
    "text": "and optimizing and managing each of those sort of basic functions",
    "start": "747040",
    "end": "752079"
  },
  {
    "text": "they get handled one of the things that we've heard from customers around rds is that",
    "start": "752079",
    "end": "758880"
  },
  {
    "text": "there are more advanced replication topologies high availability designed",
    "start": "758880",
    "end": "764800"
  },
  {
    "text": "other kinds of approaches that they want to be able to take to ensure that in you know the most critical business",
    "start": "764800",
    "end": "771680"
  },
  {
    "text": "scenarios they have all of the options that they might want available to build",
    "start": "771680",
    "end": "776720"
  },
  {
    "text": "a highly replicated highly available database i i wrote the sql server on uc2",
    "start": "776720",
    "end": "783040"
  },
  {
    "text": "whitepaper a couple of years ago and back at that time the state of the art",
    "start": "783040",
    "end": "788240"
  },
  {
    "text": "for running sql server on aws was uh used you know frankly some",
    "start": "788240",
    "end": "794160"
  },
  {
    "text": "somewhat older technologies for replication from microsoft you used you know log shipping and",
    "start": "794160",
    "end": "801760"
  },
  {
    "text": "database mirroring with witnesses as well as transactional replication as the approaches",
    "start": "801760",
    "end": "807360"
  },
  {
    "text": "for maintaining high availability for sql server these are systems that you can build today",
    "start": "807360",
    "end": "813600"
  },
  {
    "text": "on ec2 where you control the sql server's deployment and management directly and",
    "start": "813600",
    "end": "819600"
  },
  {
    "text": "but these functions aren't directly available when building on rds there isn't an",
    "start": "819600",
    "end": "825360"
  },
  {
    "text": "automatic replicated model using the managed database service and so you've definitely heard from customers that",
    "start": "825360",
    "end": "832160"
  },
  {
    "text": "there's demand for more advanced higher performance more consistent",
    "start": "832160",
    "end": "838959"
  },
  {
    "text": "access to the newest and best parts of the sql server story around high availability so",
    "start": "838959",
    "end": "845600"
  },
  {
    "text": "when we heard what scios had to offer we were pretty excited not only for our",
    "start": "845600",
    "end": "850880"
  },
  {
    "text": "customers and partners but for the businesses that they represent at all of the different systems they'd be able to",
    "start": "850880",
    "end": "856880"
  },
  {
    "text": "build at high availability and high performance because of the technologies that psyos have brought to market so",
    "start": "856880",
    "end": "863279"
  },
  {
    "text": "with that i'd love to introduce david i'm excited for for them to show you",
    "start": "863279",
    "end": "869040"
  },
  {
    "text": "how files work excellent thanks miles so as miles",
    "start": "869040",
    "end": "874320"
  },
  {
    "text": "mentions what i'm going to do is review how you can achieve native microsoft clustering within amazon ec2",
    "start": "874320",
    "end": "882480"
  },
  {
    "text": "but before i get into too many of the specifics on how you can actually make this happen i wanted to provide you with a brief background on science",
    "start": "882480",
    "end": "889600"
  },
  {
    "text": "technologies and who we are and what we do so science technologies uh formerly known as steel eye",
    "start": "889600",
    "end": "895120"
  },
  {
    "start": "892000",
    "end": "917000"
  },
  {
    "text": "technologies we focus specifically on high availability and data replication solutions we've",
    "start": "895120",
    "end": "900399"
  },
  {
    "text": "been we've been around for well over a decade protecting thousands and thousands of mission critical",
    "start": "900399",
    "end": "905920"
  },
  {
    "text": "uh servers and applications uh worldwide and",
    "start": "905920",
    "end": "911199"
  },
  {
    "text": "so what we're going to be talking about today is the concept of sandless clustering",
    "start": "911199",
    "end": "917120"
  },
  {
    "text": "so we're going to jump into those details right now so for years the native microsoft clustering feature",
    "start": "917120",
    "end": "922480"
  },
  {
    "text": "that's built right into windows server has been the de facto standard for high availability you know primarily in",
    "start": "922480",
    "end": "928720"
  },
  {
    "text": "physical environments yet one of the challenges that people have in deploying this",
    "start": "928720",
    "end": "934480"
  },
  {
    "text": "is that it requires shared storage such as a fiber channel or an iscsi type of sand",
    "start": "934480",
    "end": "940560"
  },
  {
    "text": "and these types of storage arrays can be very costly complex to set up and maintain so you know certainly as miles",
    "start": "940560",
    "end": "946320"
  },
  {
    "text": "mentioned one of the advantages to moving to the cloud is you don't have to worry about those types of infrastructure details anymore",
    "start": "946320",
    "end": "953600"
  },
  {
    "text": "plus when you take a look at the way a traditional microsoft failover cluster works well technically the",
    "start": "953600",
    "end": "961279"
  },
  {
    "text": "shared storage is a potential single point of failure so if the storage goes down you've lost your entire cluster uh so",
    "start": "961279",
    "end": "969600"
  },
  {
    "text": "you know as you make the move to the cloud generally shared storage isn't available so you aren't able to set up a",
    "start": "969600",
    "end": "974639"
  },
  {
    "text": "native microsoft cluster without additional software so this is exactly the piece of the puzzle that fios solves",
    "start": "974639",
    "end": "981600"
  },
  {
    "text": "we provide real time data replication software that is fully cluster integrated and",
    "start": "981600",
    "end": "988320"
  },
  {
    "text": "fully aware so on the next slide here this is what i call a sandless cluster",
    "start": "988320",
    "end": "994560"
  },
  {
    "start": "991000",
    "end": "1110000"
  },
  {
    "text": "also known as a shared nothing clustering architecture so what we have here are two two windows servers",
    "start": "994560",
    "end": "1001120"
  },
  {
    "text": "uh and our datakeeper datakeeper cloud edition technology is providing real",
    "start": "1001120",
    "end": "1007040"
  },
  {
    "text": "time block level data replication to keep the nodes in sync we support both",
    "start": "1007040",
    "end": "1012320"
  },
  {
    "text": "synchronous as well as asynchronous block level replication because we're doing this at the block",
    "start": "1012320",
    "end": "1018480"
  },
  {
    "text": "level replication engine is very efficient very low overhead minimal impact on the the systems and",
    "start": "1018480",
    "end": "1025199"
  },
  {
    "text": "the performance of your application so just like you would expect in your",
    "start": "1025199",
    "end": "1030319"
  },
  {
    "text": "traditional fanbase cluster you know you've got your multiple nodes in the cluster sql servers running on your your",
    "start": "1030319",
    "end": "1036240"
  },
  {
    "text": "active node and let's say there's a failure so your primary server fails",
    "start": "1036240",
    "end": "1041280"
  },
  {
    "text": "as you would expect the cluster would fail and it would bring your database back online on the",
    "start": "1041280",
    "end": "1046720"
  },
  {
    "text": "standby cluster node now the the datakeeper replication engine because it's fully integrated with the microsoft",
    "start": "1046720",
    "end": "1053039"
  },
  {
    "text": "clustering it handles all of the mirror reversal and the data replication you",
    "start": "1053039",
    "end": "1058320"
  },
  {
    "text": "know redirection accordingly so as the primary server fails and your sql database moves to the other node in your",
    "start": "1058320",
    "end": "1064840"
  },
  {
    "text": "cluster it will start sending data back in the opposite direction so you don't have to worry about manually keeping",
    "start": "1064840",
    "end": "1071039"
  },
  {
    "text": "things in sync that just happens automatically here so by setting up a",
    "start": "1071039",
    "end": "1076320"
  },
  {
    "text": "stainless cluster like this you get the best rto or recovery time objective because you get very very fast failover",
    "start": "1076320",
    "end": "1083440"
  },
  {
    "text": "times as made possible through the native windows server failover clustering technologies",
    "start": "1083440",
    "end": "1088640"
  },
  {
    "text": "but you also get excellent rpo or recovery point objectives because with this real-time replication",
    "start": "1088640",
    "end": "1095600"
  },
  {
    "text": "you're not going to lose any data in the event that you have a failure of one of your your clustered systems here",
    "start": "1095600",
    "end": "1102320"
  },
  {
    "text": "so this diagram is a simple two node cluster configuration that's not the only way you can set this",
    "start": "1102320",
    "end": "1108080"
  },
  {
    "text": "up you can also set up uh larger clusters if you want to do",
    "start": "1108080",
    "end": "1114080"
  },
  {
    "start": "1110000",
    "end": "1167000"
  },
  {
    "text": "more more uh robust failover topologies here and get better protection so here's",
    "start": "1114080",
    "end": "1119120"
  },
  {
    "text": "an example of a three node cluster we're replicating to multiple locations so we do support multi-target replication",
    "start": "1119120",
    "end": "1127440"
  },
  {
    "text": "so here i've got my primary node one at the bottom left side of the screen here it's the active system",
    "start": "1127440",
    "end": "1133039"
  },
  {
    "text": "and data is being replicated in real time both to node 2 which is at the bottom right of your screen",
    "start": "1133039",
    "end": "1138640"
  },
  {
    "text": "as well as to a third node for dr purposes here and if the primary server fails",
    "start": "1138640",
    "end": "1145520"
  },
  {
    "text": "as you would expect sql is failed over to the next server in the priority list that becomes the new source of your data",
    "start": "1145520",
    "end": "1152720"
  },
  {
    "text": "replication so sources and targets again are automatically uh",
    "start": "1152720",
    "end": "1158320"
  },
  {
    "text": "reversed to match where the at where the workload is being run within your cluster",
    "start": "1158320",
    "end": "1164720"
  },
  {
    "text": "so let's look a little bit more specifically how this is typically implemented up in ec2",
    "start": "1164720",
    "end": "1171120"
  },
  {
    "start": "1167000",
    "end": "1238000"
  },
  {
    "text": "so for maximum availability you want to place your cluster nodes in different availability zones so here i",
    "start": "1171120",
    "end": "1177360"
  },
  {
    "text": "have an example where i've got a two node cluster instance one and instance two uh in",
    "start": "1177360",
    "end": "1183520"
  },
  {
    "text": "different availability zones and the data is being replicated in real time now with a shared nothing cluster",
    "start": "1183520",
    "end": "1190320"
  },
  {
    "text": "architecture a stainless clustering architecture like this the native microsoft failover clustering",
    "start": "1190320",
    "end": "1195679"
  },
  {
    "text": "technologies it leverages a file share witness this is basically to protect against split brain so you don't have",
    "start": "1195679",
    "end": "1202400"
  },
  {
    "text": "multiple systems trying to bring the database on at the same time so for maximum availability you ideally",
    "start": "1202400",
    "end": "1210080"
  },
  {
    "text": "want to deploy this in a three availability zone configuration and if you have a failure of your",
    "start": "1210080",
    "end": "1216640"
  },
  {
    "text": "primary instance for some reason the database will fail over to the other node in the cluster",
    "start": "1216640",
    "end": "1222880"
  },
  {
    "text": "and everything stays up here for you now some of the key advantages of",
    "start": "1222880",
    "end": "1229520"
  },
  {
    "text": "deploying a sandless cluster especially up in ec2",
    "start": "1229520",
    "end": "1235039"
  },
  {
    "text": "is you know firstly this is very easy to set up and maintain so for most folks",
    "start": "1235039",
    "end": "1240480"
  },
  {
    "start": "1238000",
    "end": "1304000"
  },
  {
    "text": "out there who have been deploying sql servers in the in physical environments",
    "start": "1240480",
    "end": "1245600"
  },
  {
    "text": "for a number of years most folks have already set up a microsoft failover cluster so because of that you're not",
    "start": "1245600",
    "end": "1251520"
  },
  {
    "text": "you're not having to reinvent the wheel or relearn anything it's all based upon the standard",
    "start": "1251520",
    "end": "1257760"
  },
  {
    "text": "microsoft fail failover clustering technology that you know and love yet we allow you",
    "start": "1257760",
    "end": "1263200"
  },
  {
    "text": "to simply do this now in any environment without that shared storage requirement anymore",
    "start": "1263200",
    "end": "1269600"
  },
  {
    "text": "and because it's fully integrated with the native failover clustering technologies uh you know think of it",
    "start": "1269600",
    "end": "1275280"
  },
  {
    "text": "like the set it forget it principle you just set up the replication and from there you really don't have to think",
    "start": "1275280",
    "end": "1280320"
  },
  {
    "text": "about it or manage it that's all handled through the cluster so this gives you the flexibility to",
    "start": "1280320",
    "end": "1286080"
  },
  {
    "text": "enable the native microsoft clustering in aws and it just makes it that much easier",
    "start": "1286080",
    "end": "1292559"
  },
  {
    "text": "for you to adopt moving mission critical applications into an ec2 environment here",
    "start": "1292559",
    "end": "1300799"
  },
  {
    "text": "so a little more specifics on the technology that makes this possible what we're talking about here today is our",
    "start": "1301600",
    "end": "1306960"
  },
  {
    "start": "1304000",
    "end": "1401000"
  },
  {
    "text": "data keeper cloud edition product which we're focusing here on sql today",
    "start": "1306960",
    "end": "1312640"
  },
  {
    "text": "however because this technology provides real-time block level replication it really can be used to",
    "start": "1312640",
    "end": "1320640"
  },
  {
    "text": "protect and cluster any application or service that you would normally",
    "start": "1320640",
    "end": "1326400"
  },
  {
    "text": "protect within a windows server failover cluster it could be sql sharepoint",
    "start": "1326400",
    "end": "1331760"
  },
  {
    "text": "microsoft dynamics microsoft lync you know you name it file highly available file servers and more",
    "start": "1331760",
    "end": "1338000"
  },
  {
    "text": "this is a very optimized high performance replication engine we're doing this at the block level as i",
    "start": "1338000",
    "end": "1343120"
  },
  {
    "text": "mentioned before so very low overhead we don't have to worry about things like",
    "start": "1343120",
    "end": "1349120"
  },
  {
    "text": "file permissions locked files open files we sit beneath the file system and we replicate any data that gets written to",
    "start": "1349120",
    "end": "1356559"
  },
  {
    "text": "the source system gets replicated in real time to one or more targets that are part of that cluster",
    "start": "1356559",
    "end": "1363200"
  },
  {
    "text": "we do support both synchronous and asynchronous replications you can select the mode of replication",
    "start": "1363200",
    "end": "1369440"
  },
  {
    "text": "that makes most sense based on your business's recovery time and recovery point objectives here",
    "start": "1369440",
    "end": "1375280"
  },
  {
    "text": "it's also very very easy to use and set up i'll show you during the upcoming demonstration but we have a very simple",
    "start": "1375280",
    "end": "1380720"
  },
  {
    "text": "to use nmc microsoft management console interface it's literally a three step",
    "start": "1380720",
    "end": "1385840"
  },
  {
    "text": "wizard to set up the data replication and get that mirror integrated into your",
    "start": "1385840",
    "end": "1393600"
  },
  {
    "text": "traditional fail of your normal failover cluster here now i often get asked you know what type",
    "start": "1393600",
    "end": "1399520"
  },
  {
    "text": "of overhead is involved with with replication now we've done a lot of optimizations",
    "start": "1399520",
    "end": "1405200"
  },
  {
    "start": "1401000",
    "end": "1488000"
  },
  {
    "text": "here to make this very minimal so the diagram up here on the slide we're comparing three things first of",
    "start": "1405200",
    "end": "1411679"
  },
  {
    "text": "all is a standalone sql instance uh without any replication",
    "start": "1411679",
    "end": "1417760"
  },
  {
    "text": "basically non-clustered um and with uh the silos data keeper",
    "start": "1417760",
    "end": "1424159"
  },
  {
    "text": "replication now this is synchronous replication turned on there is minimal overhead we're looking",
    "start": "1424159",
    "end": "1429360"
  },
  {
    "text": "at you know 10 ballpark 10 or so for full data protection and full clustering",
    "start": "1429360",
    "end": "1435919"
  },
  {
    "text": "now a lot of another technology that a lot of other folks look at is the always on availability group technology that's",
    "start": "1435919",
    "end": "1441840"
  },
  {
    "text": "built into windows server i'm sorry sql 2012 and that with the same workload with the",
    "start": "1441840",
    "end": "1449200"
  },
  {
    "text": "same their version of synchronous replication it has significant overhead here so",
    "start": "1449200",
    "end": "1455520"
  },
  {
    "text": "we're talking 60 70 percent ballpark depending on the workload here so one of the key advantages aside from the ease",
    "start": "1455520",
    "end": "1461679"
  },
  {
    "text": "of use and the full cluster integration here is that now with data keeper cloud edition you get",
    "start": "1461679",
    "end": "1467760"
  },
  {
    "text": "the best of both worlds you get the full data protection the full availability for your mission critical sql",
    "start": "1467760",
    "end": "1473760"
  },
  {
    "text": "environment but you're not sacrificing performance in order to achieve availability and",
    "start": "1473760",
    "end": "1479679"
  },
  {
    "text": "data and data protection here there are a number of additional benefits here as to going",
    "start": "1479679",
    "end": "1486799"
  },
  {
    "text": "with a a failover cluster clustered instance of sql with",
    "start": "1486799",
    "end": "1491919"
  },
  {
    "start": "1488000",
    "end": "1588000"
  },
  {
    "text": "datakeeper as opposed to availability groups here first of all because we're clustering and protecting the",
    "start": "1491919",
    "end": "1499360"
  },
  {
    "text": "entire instance uh it supports unlimited databases it",
    "start": "1499360",
    "end": "1504720"
  },
  {
    "text": "also protects your system databases so things like your master msdb your sql",
    "start": "1504720",
    "end": "1511200"
  },
  {
    "text": "logins your sql agent jobs all of that is replicated and protected",
    "start": "1511200",
    "end": "1516480"
  },
  {
    "text": "if you go down the route of availability groups you're going to have to maintain those types of things on your own your sql logins your your sql agent jobs",
    "start": "1516480",
    "end": "1523520"
  },
  {
    "text": "you'll have to keep those in sync so it's a higher administrative overhead here by going with a failover cluster",
    "start": "1523520",
    "end": "1529279"
  },
  {
    "text": "instance the data keeper again all of that all that",
    "start": "1529279",
    "end": "1534880"
  },
  {
    "text": "is just handled for you also it supports unlimited databases plus it replicates data outside the sql",
    "start": "1534880",
    "end": "1543360"
  },
  {
    "text": "server itself so availability groups is going to replicate certain databases with datakeeper because we're doing a",
    "start": "1543360",
    "end": "1549520"
  },
  {
    "text": "disk level block level replication we will replicate data volumes on that",
    "start": "1549520",
    "end": "1555120"
  },
  {
    "text": "windows server your d drive your e drive your f drive whatever you set up to replicate so if your application",
    "start": "1555120",
    "end": "1562000"
  },
  {
    "text": "has data that lives outside of the sql database",
    "start": "1562000",
    "end": "1567200"
  },
  {
    "text": "then this is going to protect that as well also uh you know the final bullet point",
    "start": "1567200",
    "end": "1572480"
  },
  {
    "text": "here talks about replication efficiency and we mentioned that on the previous slide that with a block level disk",
    "start": "1572480",
    "end": "1579039"
  },
  {
    "text": "replication technology much less overhead and much better overall system performance here",
    "start": "1579039",
    "end": "1586080"
  },
  {
    "text": "so we have a number of customers who have adopted this model here what i'm going to take you through here is a",
    "start": "1586080",
    "end": "1591520"
  },
  {
    "start": "1588000",
    "end": "1688000"
  },
  {
    "text": "quick case study and then we will jump into a live demonstration",
    "start": "1591520",
    "end": "1598360"
  },
  {
    "text": "so one of our customers is a software provider and they provide software primarily aimed at retailers",
    "start": "1602960",
    "end": "1610400"
  },
  {
    "text": "and distributors here and they are launching a new apple here they launched a new application and one of the",
    "start": "1610400",
    "end": "1616080"
  },
  {
    "text": "requirements is that they wanted to move they wanted to move this",
    "start": "1616080",
    "end": "1621760"
  },
  {
    "text": "workload up into ec2 but they were familiar for a number of",
    "start": "1621760",
    "end": "1627600"
  },
  {
    "text": "years of deploying traditional physical servers with with a back-end san type of sql clusters they wanted to leverage the",
    "start": "1627600",
    "end": "1634880"
  },
  {
    "text": "existing skill set and expertise that they had you know built up over the years but that said during this",
    "start": "1634880",
    "end": "1641520"
  },
  {
    "text": "transition this is a mission critical system so they needed to maintain and ensure the availability of their sql",
    "start": "1641520",
    "end": "1647840"
  },
  {
    "text": "2012 back end at all times one of the motivators of them moving up to this environment is to eliminate you",
    "start": "1647840",
    "end": "1653840"
  },
  {
    "text": "know the the capital expenditure type costs you know servers fans power cooling all",
    "start": "1653840",
    "end": "1660400"
  },
  {
    "text": "of that yet at the same time ensuring maximum availability here",
    "start": "1660400",
    "end": "1666080"
  },
  {
    "text": "and so you know they look for a solution that would enable the native microsoft",
    "start": "1667440",
    "end": "1673120"
  },
  {
    "text": "failover clustering that they know and love and they've been using for a number of years but they want to make that possible up",
    "start": "1673120",
    "end": "1678640"
  },
  {
    "text": "in ec2 so that's why they turned to scios to help make that happen",
    "start": "1678640",
    "end": "1684080"
  },
  {
    "text": "so what they came up with uh was a multi-availability zone cluster",
    "start": "1684080",
    "end": "1691760"
  },
  {
    "start": "1688000",
    "end": "1790000"
  },
  {
    "text": "again this diagram will look fairly familiar from what we've seen before but they've got a two-node",
    "start": "1691760",
    "end": "1697200"
  },
  {
    "text": "multi-availability zone multi-subnet sql 2012 cluster and they're actually running multiple",
    "start": "1697200",
    "end": "1704559"
  },
  {
    "text": "sql instances they have one sql instance running on the in availability zone the first",
    "start": "1704559",
    "end": "1709919"
  },
  {
    "text": "availability zone they have a second sql instance running on the other cluster node in a different availability zone so",
    "start": "1709919",
    "end": "1715760"
  },
  {
    "text": "there's actually replication happening in both directions uh each node if you will as a backup for the other",
    "start": "1715760",
    "end": "1721679"
  },
  {
    "text": "then in the third availability zone they have their file share witness which is the",
    "start": "1721679",
    "end": "1727120"
  },
  {
    "text": "you know the second opinion or the um the uh the traffic copy if you will to ensure that failover happens at the",
    "start": "1727120",
    "end": "1734559"
  },
  {
    "text": "appropriate times and things like that so what they implemented",
    "start": "1734559",
    "end": "1740320"
  },
  {
    "text": "is you know a two node sandless cluster up in ec2 the primary server fails the sql",
    "start": "1740320",
    "end": "1746559"
  },
  {
    "text": "instance moves to the standby system and data replication happens in",
    "start": "1746559",
    "end": "1751760"
  },
  {
    "text": "the opposite direction now during this time where one of your your your systems your",
    "start": "1751760",
    "end": "1758000"
  },
  {
    "text": "is down data keeper maintains a bitmap technology that tracks the data that is",
    "start": "1758000",
    "end": "1763520"
  },
  {
    "text": "being changed so at this point in time we know exactly what data has changed what data hasn't so when the failed node",
    "start": "1763520",
    "end": "1770159"
  },
  {
    "text": "comes back online data replication picks up where it left off a partial resync is",
    "start": "1770159",
    "end": "1775520"
  },
  {
    "text": "automatically handled and initiated to get that failed node back up to",
    "start": "1775520",
    "end": "1780960"
  },
  {
    "text": "speed and in sync as quickly as possible here",
    "start": "1780960",
    "end": "1785520"
  },
  {
    "text": "so the solution they implemented again was the specifics here on the solution with a two node windows server fail",
    "start": "1789279",
    "end": "1795520"
  },
  {
    "start": "1790000",
    "end": "1919000"
  },
  {
    "text": "failover cluster across multiple availability zones uh they're running two sql instances in an active active",
    "start": "1795520",
    "end": "1801039"
  },
  {
    "text": "config so one sql instance on node a different sql instance on node b and a file share witness in their third",
    "start": "1801039",
    "end": "1806640"
  },
  {
    "text": "availability zone and they're leveraging data keeper cloud edition as the real-time replication",
    "start": "1806640",
    "end": "1813120"
  },
  {
    "text": "engine that's fully integrated into failover clustering to keep the different cluster nodes in sync",
    "start": "1813120",
    "end": "1818720"
  },
  {
    "text": "essentially data keeper cloud edition is making those uh local independent disks",
    "start": "1818720",
    "end": "1824159"
  },
  {
    "text": "look like a single piece of cluster storage some of the key benefits that they were able to realize by implementing this is",
    "start": "1824159",
    "end": "1831200"
  },
  {
    "text": "certainly a much better total cost of ownership they didn't have to invest in new hardware",
    "start": "1831200",
    "end": "1836559"
  },
  {
    "text": "they're they're actually achieving a higher level of availability than before because the shared storage array is no",
    "start": "1836559",
    "end": "1843840"
  },
  {
    "text": "longer that potential single point of failure and because of this they they're able to",
    "start": "1843840",
    "end": "1849200"
  },
  {
    "text": "easily and flexibly deploy new applications and services up in this environment and do so",
    "start": "1849200",
    "end": "1856159"
  },
  {
    "text": "with the peace of mind that they they are ensuring maximum uptime and they're going to have high availability",
    "start": "1856159",
    "end": "1861440"
  },
  {
    "text": "failure clusters set up whenever they deploy new applications and databases up into",
    "start": "1861440",
    "end": "1866880"
  },
  {
    "text": "this environment here and this was all done very quickly and easily this whole solution was deployed",
    "start": "1866880",
    "end": "1872240"
  },
  {
    "text": "in well under a day very easy to set up here so we've reviewed uh the",
    "start": "1872240",
    "end": "1879760"
  },
  {
    "text": "methods for ensuring high availability and forming failover clusters using native microsoft",
    "start": "1879760",
    "end": "1885039"
  },
  {
    "text": "clustering technology here up in amazon ec2 but we've talked about the datakeeper cloud edition product which",
    "start": "1885039",
    "end": "1892080"
  },
  {
    "text": "provides a real-time block level data replication that's fully integrated with native microsoft clustering we've talked",
    "start": "1892080",
    "end": "1898240"
  },
  {
    "text": "about some of the different availability options and differences if you're looking to protect sql 2012",
    "start": "1898240",
    "end": "1903840"
  },
  {
    "text": "specifically failover clusters clustered instances versus always on availability groups",
    "start": "1903840",
    "end": "1909360"
  },
  {
    "text": "we've reviewed a case study and what i'm going to jump into next is a brief live demonstration here",
    "start": "1909360",
    "end": "1916559"
  },
  {
    "text": "so i'm going to go ahead and go ahead and share out my screen and this will take just a moment or so",
    "start": "1916559",
    "end": "1922559"
  },
  {
    "text": "to activate",
    "start": "1922559",
    "end": "1925760"
  },
  {
    "text": "you should be seeing a screen that says connecting to server should be loading",
    "start": "1928240",
    "end": "1933519"
  },
  {
    "start": "1929000",
    "end": "2401000"
  },
  {
    "text": "loading the desktop screen that we'll be sharing here during the demonstration and i'm going to show you a real live",
    "start": "1933519",
    "end": "1940480"
  },
  {
    "text": "in this case two node windows server failover cluster running up on ec2",
    "start": "1940480",
    "end": "1946480"
  },
  {
    "text": "that is data keeper cloud edition enabled so two independent instances no shared storage",
    "start": "1946480",
    "end": "1952720"
  },
  {
    "text": "involved and data keeper cluster edition is providing that uh real-time block level data replication",
    "start": "1952720",
    "end": "1959679"
  },
  {
    "text": "so if we take a look at the screen here i've got my failover cluster manager open i also down at the bottom have the",
    "start": "1959679",
    "end": "1966399"
  },
  {
    "text": "data keeper interface screen open and",
    "start": "1966399",
    "end": "1972480"
  },
  {
    "text": "what we're looking at here is a two node cluster there's node a and node b and i've got a couple of clustered uh",
    "start": "1972480",
    "end": "1979919"
  },
  {
    "text": "clustered resources here uh first i have the sql server the cluster instance",
    "start": "1979919",
    "end": "1985679"
  },
  {
    "text": "itself that's the top resource here in this list and then also i'm clustering",
    "start": "1985679",
    "end": "1992399"
  },
  {
    "text": "microsoft dtc and this is a an important differentiator here because a number of",
    "start": "1992399",
    "end": "1998159"
  },
  {
    "text": "applications depend upon dtc if they leverage distributed",
    "start": "1998159",
    "end": "2003840"
  },
  {
    "text": "transactions so this is uh one reason where if your application does require and depend upon",
    "start": "2003840",
    "end": "2009840"
  },
  {
    "text": "distributed transactions that you're going to for maximum protection you're going to need to deploy a failover cluster",
    "start": "2009840",
    "end": "2015760"
  },
  {
    "text": "instance as opposed to availability groups availability groups and is not compatible with distributed",
    "start": "2015760",
    "end": "2022000"
  },
  {
    "text": "transactions here at this point in time so here i've got my two node cluster if i take a look at the",
    "start": "2022000",
    "end": "2027679"
  },
  {
    "text": "sql server this is a what microsoft would call a multi-site cluster here because",
    "start": "2027679",
    "end": "2034640"
  },
  {
    "text": "the different nodes are in different availability zones and relied on different subnets here so as failover",
    "start": "2034640",
    "end": "2040559"
  },
  {
    "text": "happens it will also update dns to redirect to the appropriate ip",
    "start": "2040559",
    "end": "2045840"
  },
  {
    "text": "now one difference you'll notice if you've ever set up a traditional failover cluster in the past is the disk",
    "start": "2045840",
    "end": "2050960"
  },
  {
    "text": "drive section in your traditional physical fan base cluster world this would be a cluster",
    "start": "2050960",
    "end": "2056800"
  },
  {
    "text": "disk also known as a physical disk resource essentially your shared your shared line on that sand now as i",
    "start": "2056800",
    "end": "2063118"
  },
  {
    "text": "mentioned before what what the data keeper cloud edition does is it abstracts",
    "start": "2063119",
    "end": "2068560"
  },
  {
    "text": "the storage and it makes two or more pieces of independent storage look like a single cluster disk and that's what we",
    "start": "2068560",
    "end": "2074720"
  },
  {
    "text": "see here i've got this data keeper volume h which looks like a single piece of cluster storage but yet it's an h drive",
    "start": "2074720",
    "end": "2081599"
  },
  {
    "text": "on node a and an equally sized h drive on node b and we are keeping those two volumes",
    "start": "2081599",
    "end": "2088638"
  },
  {
    "text": "in sync in real time data is being replicated right now from b back to server a because the current",
    "start": "2088639",
    "end": "2095358"
  },
  {
    "text": "owner of the database it's running on node b right now uh in the available storage pool uh you",
    "start": "2095359",
    "end": "2102560"
  },
  {
    "text": "see the same thing so here you can see the cluster disks again the only difference here from your you know physical sand based cluster is you're",
    "start": "2102560",
    "end": "2108880"
  },
  {
    "text": "going to see these data keeper volumes as opposed to your physical disk resources",
    "start": "2108880",
    "end": "2115119"
  },
  {
    "text": "and then if we take a look at the cluster summary screen",
    "start": "2115119",
    "end": "2120240"
  },
  {
    "text": "the one other difference the second difference here is the quorum configuration so when you're in you're in a traditional fan based",
    "start": "2120240",
    "end": "2126960"
  },
  {
    "text": "cluster you would set this up with node and disk majority so it would use a small one on that san",
    "start": "2126960",
    "end": "2132960"
  },
  {
    "text": "as the third vote towards quorum in this case because there are no shared disks we're doing a stainless cluster",
    "start": "2132960",
    "end": "2139520"
  },
  {
    "text": "configuration we leverage one of the other built-in options in the cluster which is node and file share majority so",
    "start": "2139520",
    "end": "2146560"
  },
  {
    "text": "in this case there's a simple file share witness which in this case we placed in a third availability zone for maximum",
    "start": "2146560",
    "end": "2153440"
  },
  {
    "text": "protection and up time simple file share that's part of the cluster and it acts as the third vote towards cluster quorum",
    "start": "2153440",
    "end": "2160800"
  },
  {
    "text": "here so for all intents and purposes you know this looks feels and acts like your",
    "start": "2160800",
    "end": "2168240"
  },
  {
    "text": "traditional fan base cluster but we're now making this all possible with software-based replication that's",
    "start": "2168240",
    "end": "2174480"
  },
  {
    "text": "fully cluster integrated so i'm going to switch and we're going to take a look now at the datakeeper",
    "start": "2174480",
    "end": "2179599"
  },
  {
    "text": "interface and then we'll go back and i'll uh we'll do a failover of the clustered sql",
    "start": "2179599",
    "end": "2186480"
  },
  {
    "text": "instance from one cluster node to another show how the data replication is automatically reversed",
    "start": "2186480",
    "end": "2192400"
  },
  {
    "text": "so the datakeeper interface is a very easy to use mmc snap-in and what we're looking at here is what",
    "start": "2192400",
    "end": "2199040"
  },
  {
    "text": "we call the server overview report where you can see the different systems involved so here i can see my node a and",
    "start": "2199040",
    "end": "2204480"
  },
  {
    "text": "my node b and the different drive letters that are attached i've got a d drive and an h drive",
    "start": "2204480",
    "end": "2210560"
  },
  {
    "text": "and you can see the state of the mirror they're both actively being mirrored and you can see what their role is so what",
    "start": "2210560",
    "end": "2216320"
  },
  {
    "text": "you'll notice here actually is i have replication uh happening in both both both directions",
    "start": "2216320",
    "end": "2222800"
  },
  {
    "text": "i've got my h drive replicating from b to a and the d drive from a to b so i really have an",
    "start": "2222800",
    "end": "2230480"
  },
  {
    "text": "active active cluster my sequence is on one node the dtc is on a different node they're each working you're each acting",
    "start": "2230480",
    "end": "2236240"
  },
  {
    "text": "as a backup for one another you can have different drive letters replicating in different directions that's perfectly",
    "start": "2236240",
    "end": "2241520"
  },
  {
    "text": "fine if you drill down onto a job this is what we call a mirror here you can see",
    "start": "2241520",
    "end": "2246640"
  },
  {
    "text": "specifics so for any given mirror you can see the source the target the drive letter that's being mirrored and then",
    "start": "2246640",
    "end": "2252720"
  },
  {
    "text": "the ipn points as well as the mirror state you can see full information on what is happening with data replication",
    "start": "2252720",
    "end": "2259359"
  },
  {
    "text": "the nice thing about this technology is you know you go in here and to set up",
    "start": "2259359",
    "end": "2264560"
  },
  {
    "text": "replication you create a job it is a three-step wizard to create you pick your source server you pick your target",
    "start": "2264560",
    "end": "2270480"
  },
  {
    "text": "server and you pick a couple of mirror options such as do you want synchronous or asynchronous replication and from",
    "start": "2270480",
    "end": "2277359"
  },
  {
    "text": "there you really don't have to go back into the data keeper interface if you don't want to it all gets driven going forward",
    "start": "2277359",
    "end": "2284480"
  },
  {
    "text": "through the standard failover cluster manager interface here so",
    "start": "2284480",
    "end": "2290000"
  },
  {
    "text": "if i go back now and let's do a switch over so i want to move my sql instance",
    "start": "2290000",
    "end": "2295200"
  },
  {
    "text": "from node b back to node a so just like you would normally you just right click and say well let's move this to node a",
    "start": "2295200",
    "end": "2303119"
  },
  {
    "text": "and it's going to initiate a switch over as part of this it's also going to update the ip because we're failing over",
    "start": "2303119",
    "end": "2309520"
  },
  {
    "text": "to a sql instance running in a different subnet here as part of this process because of the",
    "start": "2309520",
    "end": "2315680"
  },
  {
    "text": "integration with datakeeper cloud edition it's telling data keeper to automatically switch the direction of",
    "start": "2315680",
    "end": "2323119"
  },
  {
    "text": "replication so now instead of the h volume replicating from b to a",
    "start": "2323119",
    "end": "2328160"
  },
  {
    "text": "the the mirroring is now happening from a over to b because a is now the new current owner so everything took a few",
    "start": "2328160",
    "end": "2334240"
  },
  {
    "text": "seconds here but everything is back online and my sql database is safely and",
    "start": "2334240",
    "end": "2340720"
  },
  {
    "text": "happily living on node a out of my cluster here if i go back into the data",
    "start": "2340720",
    "end": "2346240"
  },
  {
    "text": "keeper interface you'll see here that for this same mirror",
    "start": "2346240",
    "end": "2351520"
  },
  {
    "text": "it now shows that node a is the source node b is the target so we're just you",
    "start": "2351520",
    "end": "2356720"
  },
  {
    "text": "know reconfirming that the the the replication you know was was switched",
    "start": "2356720",
    "end": "2361839"
  },
  {
    "text": "over automatically through this seamless cluster integration here so with that",
    "start": "2361839",
    "end": "2367599"
  },
  {
    "text": "uh that wraps up the demonstration here i'm gonna go ahead and stop desktop sharing",
    "start": "2367599",
    "end": "2373359"
  },
  {
    "text": "and we will bring it back to the slides here uh so",
    "start": "2374160",
    "end": "2379359"
  },
  {
    "text": "uh we just wanna thank everybody for their uh time and interest here today in learning how to deploy you know",
    "start": "2379359",
    "end": "2386000"
  },
  {
    "text": "mission critical sql-based applications up in ec2 we've reviewed the datakeeper cloud edition technology as well as gone",
    "start": "2386000",
    "end": "2392320"
  },
  {
    "text": "through a live demonstration uh so i guess at this point uh sherry i'll turn things back over to you",
    "start": "2392320",
    "end": "2398640"
  },
  {
    "text": "fantastic um thank you so much tony that was a great overview on a great demo i'm",
    "start": "2398640",
    "end": "2403760"
  },
  {
    "start": "2401000",
    "end": "2544000"
  },
  {
    "text": "really showcasing um the scios solution there and miles um thank you for an",
    "start": "2403760",
    "end": "2409520"
  },
  {
    "text": "overview on aws um folks if you joined us midstream um we do invite you to submit some questions and we've got some",
    "start": "2409520",
    "end": "2416079"
  },
  {
    "text": "queued up so let's jump in um i'm going to point this back to you tony is",
    "start": "2416079",
    "end": "2423440"
  },
  {
    "text": "the question is is a domain required to implement this type of configuration or solution",
    "start": "2423440",
    "end": "2430960"
  },
  {
    "text": "excellent question so with the with the configuration that we looked at here today",
    "start": "2431520",
    "end": "2437280"
  },
  {
    "text": "with datakeeper cloud edition it is based upon the native microsoft failover clustering",
    "start": "2437280",
    "end": "2442880"
  },
  {
    "text": "technology one of the requirements of windows server failover cluster is it needs to live in a domain environment",
    "start": "2442880",
    "end": "2450400"
  },
  {
    "text": "so short answer is yes if you have specific needs to do this in",
    "start": "2450400",
    "end": "2456079"
  },
  {
    "text": "an environment without uh active directory uh what we can do is we can take that offline and we can talk about",
    "start": "2456079",
    "end": "2461599"
  },
  {
    "text": "some different options as well with you so great question great um another question",
    "start": "2461599",
    "end": "2467680"
  },
  {
    "text": "now i'll point back to you tony is um does the solution support uh sql",
    "start": "2467680",
    "end": "2474000"
  },
  {
    "text": "2008 r2 standard yeah so so the the data keeper solution",
    "start": "2474000",
    "end": "2481839"
  },
  {
    "text": "we're really application agnostic we're providing real time block level",
    "start": "2481839",
    "end": "2486960"
  },
  {
    "text": "replication at the disc level so as we saw in the demonstration here today we're",
    "start": "2486960",
    "end": "2492240"
  },
  {
    "text": "replicating you know we were replicating the d drive and the h drive but honestly the data inside that drive um could be",
    "start": "2492240",
    "end": "2500000"
  },
  {
    "text": "anything it could be any applications data that can be supported so you know",
    "start": "2500000",
    "end": "2505200"
  },
  {
    "text": "really if if it comes down to you know can you cluster it within failover clustering",
    "start": "2505200",
    "end": "2511359"
  },
  {
    "text": "and then if so data keeper can replicate that data for you okay great",
    "start": "2511359",
    "end": "2517040"
  },
  {
    "text": "is there a maximum to the number of nodes so that's all controlled through um",
    "start": "2517040",
    "end": "2524240"
  },
  {
    "text": "failover clustering so whatever either windows server 2008 or 2012",
    "start": "2524240",
    "end": "2530160"
  },
  {
    "text": "has as their maximum number of nodes that would be your upper limit",
    "start": "2530160",
    "end": "2535359"
  },
  {
    "text": "so that's really controlled through uh microsoft uh failure clustering not through data keeper",
    "start": "2535359",
    "end": "2541200"
  },
  {
    "text": "okay great um tony another question your direction",
    "start": "2541200",
    "end": "2546640"
  },
  {
    "start": "2544000",
    "end": "2578000"
  },
  {
    "text": "and feel free to jump in miles um does this uh technology support distributed",
    "start": "2546640",
    "end": "2553359"
  },
  {
    "text": "transaction controller on amazon ec2 yes great question and that's uh it",
    "start": "2553359",
    "end": "2559440"
  },
  {
    "text": "answers yes and that's what we demoed here today so i had a sql cluster and we were protecting both",
    "start": "2559440",
    "end": "2565520"
  },
  {
    "text": "a uh c clustered sql instance as well as deep",
    "start": "2565520",
    "end": "2570800"
  },
  {
    "text": "microsoft dtc distributed transaction controller so yes all right great",
    "start": "2570800",
    "end": "2578079"
  },
  {
    "start": "2578000",
    "end": "2614000"
  },
  {
    "text": "um is there a type of alerts or notifications that uh styles",
    "start": "2578079",
    "end": "2583200"
  },
  {
    "text": "application can kick off um for certain events yeah great question the answer is yes so",
    "start": "2583200",
    "end": "2589920"
  },
  {
    "text": "all of the activities get logged into the event viewer so all of the standard",
    "start": "2589920",
    "end": "2595440"
  },
  {
    "text": "windows logs and then they each have certain event ids and you can key off various event",
    "start": "2595440",
    "end": "2601359"
  },
  {
    "text": "ids to be notified when those types of events happen so we just integrate with the native windows logging and then from",
    "start": "2601359",
    "end": "2608160"
  },
  {
    "text": "there you can be you can key off ids and get notified okay great",
    "start": "2608160",
    "end": "2614560"
  },
  {
    "start": "2614000",
    "end": "2655000"
  },
  {
    "text": "this is the question um i think sometimes there's confusion around availability zones um from an aws",
    "start": "2614560",
    "end": "2621440"
  },
  {
    "text": "perspective and sort of what what that means but the question here is um can cluster nodes span those regions as well",
    "start": "2621440",
    "end": "2628000"
  },
  {
    "text": "as availability zones on aws like an example would be you know west coast",
    "start": "2628000",
    "end": "2633280"
  },
  {
    "text": "east coast us um you know different geos sure thing uh yes it's really in that",
    "start": "2633280",
    "end": "2639599"
  },
  {
    "text": "case it's just a matter of setting up the appropriate connectivity between the different locations here so",
    "start": "2639599",
    "end": "2646960"
  },
  {
    "text": "generally that would be done through you know a vpn tunnel or some type of effect between between the locations",
    "start": "2646960",
    "end": "2654560"
  },
  {
    "start": "2655000",
    "end": "2721000"
  },
  {
    "text": "this is miles real quick another component there amazon web services has changed pricing",
    "start": "2655520",
    "end": "2663200"
  },
  {
    "text": "recently associated with the data transfer crop at the regional level",
    "start": "2663200",
    "end": "2669599"
  },
  {
    "text": "so normally when you build a system that spans multiple regions",
    "start": "2669599",
    "end": "2675680"
  },
  {
    "text": "you'd be paying the normal internet egress charges for outbound",
    "start": "2675680",
    "end": "2681599"
  },
  {
    "text": "data replication from one region to another now we've reduced those prices in some cases very significantly so",
    "start": "2681599",
    "end": "2689040"
  },
  {
    "text": "standard internet egress for example from us east or the east coast of the united states for the question uh he",
    "start": "2689040",
    "end": "2696480"
  },
  {
    "text": "starts at 12 and a half cents a gigabyte if you are moving data into another region",
    "start": "2696480",
    "end": "2702240"
  },
  {
    "text": "it's only 2 cents a gigabyte that's a vast improvement so",
    "start": "2702240",
    "end": "2707520"
  },
  {
    "text": "these kinds of cross-regional replicated topologies not only function using this",
    "start": "2707520",
    "end": "2714160"
  },
  {
    "text": "ios technology but they're also cost effective",
    "start": "2714160",
    "end": "2719640"
  },
  {
    "start": "2721000",
    "end": "2797000"
  },
  {
    "text": "great point miles thanks another question i'll go ahead and point",
    "start": "2721280",
    "end": "2726800"
  },
  {
    "text": "this back to you tony is um is unlimited database really unlimited",
    "start": "2726800",
    "end": "2733040"
  },
  {
    "text": "um an example is you know does it work with thousands of databases on a single server um maybe you can clarify for",
    "start": "2733040",
    "end": "2739680"
  },
  {
    "text": "folks um what those limitations might be sure sure so so",
    "start": "2739680",
    "end": "2745520"
  },
  {
    "text": "from uh from a data keeper perspective again we're doing block level replication so whether there's one",
    "start": "2745520",
    "end": "2750960"
  },
  {
    "text": "database or a thousand databases it's all the same to us so really when we say you know unlimited databases it's",
    "start": "2750960",
    "end": "2758160"
  },
  {
    "text": "however many databases you can run on sql server itself so um i don't know",
    "start": "2758160",
    "end": "2765040"
  },
  {
    "text": "off the top of my head what the upper limit for number of databases in sql itself but for a given instance you know",
    "start": "2765040",
    "end": "2771440"
  },
  {
    "text": "you could protect with this configuration however many databases you you would run on on sql itself you know",
    "start": "2771440",
    "end": "2777599"
  },
  {
    "text": "let's say for example in a non-cluster or standalone environment the same the same rules",
    "start": "2777599",
    "end": "2782960"
  },
  {
    "text": "apply here with one of the reasons i guess we brought it up that way and phrase it as a limited",
    "start": "2782960",
    "end": "2788160"
  },
  {
    "text": "is with availability groups there are limits to the number of databases that can be protected in that configuration",
    "start": "2788160",
    "end": "2796560"
  },
  {
    "text": "okay thanks for clarifying um another question here is is more it's sort of in the same",
    "start": "2796560",
    "end": "2802880"
  },
  {
    "text": "genre is that you know what's the smallest size ec2 instance supported",
    "start": "2802880",
    "end": "2809280"
  },
  {
    "text": "with the data keeper sure so the configuration we were",
    "start": "2809280",
    "end": "2814480"
  },
  {
    "text": "looking at here today let me pull that up i believe it was a",
    "start": "2814480",
    "end": "2821280"
  },
  {
    "text": "miles correct me if i'm saying anything wrong here but i believe it was m1.small",
    "start": "2821280",
    "end": "2827280"
  },
  {
    "text": "because with setting up a cluster you would assign secondary all the cluster related ips so",
    "start": "2827280",
    "end": "2834160"
  },
  {
    "text": "the cluster ip the ip of the clustered sql instance and so on would be assigned to the instance as a secondary ip",
    "start": "2834160",
    "end": "2841359"
  },
  {
    "text": "address and micro i believe only supports either one or two miles will probably have to",
    "start": "2841359",
    "end": "2847520"
  },
  {
    "text": "correct me there so if you have more than you know that then you would have to go up to the next one up which i",
    "start": "2847520",
    "end": "2854079"
  },
  {
    "text": "believe is m1 dot small but uh yeah tony you got that exactly",
    "start": "2854079",
    "end": "2860160"
  },
  {
    "start": "2858000",
    "end": "2926000"
  },
  {
    "text": "right there rather because of the the cpu timing behavior for the t1 micro",
    "start": "2860160",
    "end": "2867760"
  },
  {
    "text": "instance type it can be i think a very useful place to practice",
    "start": "2867760",
    "end": "2873440"
  },
  {
    "text": "installation or system remediation um you know workloads where you're training",
    "start": "2873440",
    "end": "2880079"
  },
  {
    "text": "users on sql on top of the micro instances but there are very few cases",
    "start": "2880079",
    "end": "2885680"
  },
  {
    "text": "that we've seen in production where sql servers are running on the micro class so we would recommend",
    "start": "2885680",
    "end": "2893200"
  },
  {
    "text": "uh at a minimum the small instance type and again that that only delivers 1.7",
    "start": "2893200",
    "end": "2899440"
  },
  {
    "text": "gigabytes of ram to the workload which um you know we're seeing most production databases operate",
    "start": "2899440",
    "end": "2906800"
  },
  {
    "text": "on larger instances but there shouldn't be a reason on the scio side where you",
    "start": "2906800",
    "end": "2912319"
  },
  {
    "text": "wouldn't be able to run on any of the specific instance types and the demo we saw here today was run",
    "start": "2912319",
    "end": "2919119"
  },
  {
    "text": "the cluster nodes node and node b were m1 not small",
    "start": "2919119",
    "end": "2923920"
  },
  {
    "text": "okay great um follow on question uh specifically around um data keeper and i'll point",
    "start": "2925680",
    "end": "2932480"
  },
  {
    "start": "2926000",
    "end": "2974000"
  },
  {
    "text": "this back to you obviously tony is um is data keeper uh is it limited or available um to to aws",
    "start": "2932480",
    "end": "2941280"
  },
  {
    "text": "no it's it's not so you can also use and deploy data keeper um you know in your",
    "start": "2941280",
    "end": "2947280"
  },
  {
    "text": "own data center um on physical servers on virtual servers it's a very flexible technology",
    "start": "2947280",
    "end": "2954400"
  },
  {
    "text": "so it works very nicely and we have many customers doing this up in aws but um",
    "start": "2954400",
    "end": "2959839"
  },
  {
    "text": "you know you could do this with two physical systems in your own data center and and do a very similar thing so",
    "start": "2959839",
    "end": "2966720"
  },
  {
    "text": "um data keeper works both you know on premise and in the cloud in both physical and virtual environments",
    "start": "2966720",
    "end": "2973440"
  },
  {
    "text": "okay great so we had we had another question which you just alluded to is that can the solution cluster to a",
    "start": "2973440",
    "end": "2979839"
  },
  {
    "start": "2974000",
    "end": "3032000"
  },
  {
    "text": "non-cloud server and and the answer to that is yes",
    "start": "2979839",
    "end": "2985720"
  },
  {
    "text": "so again anytime you know multi sites and things like that are involved",
    "start": "2986400",
    "end": "2991680"
  },
  {
    "text": "it's it's really a matter of ensuring you've got the appropriate you know network",
    "start": "2991680",
    "end": "2997359"
  },
  {
    "text": "connectivity or vpn tunnels and bandwidth between the sites with a real-time replication solution you want",
    "start": "2997359",
    "end": "3002800"
  },
  {
    "text": "to make sure you know it's not so important how big your data set is it's more important how",
    "start": "3002800",
    "end": "3008720"
  },
  {
    "text": "rapidly the data changes so i call it the rate of change here because you want to ensure that you've got",
    "start": "3008720",
    "end": "3014240"
  },
  {
    "text": "um you know sufficient bandwidth so that as quickly as the data gets written on your active server it can be replicated",
    "start": "3014240",
    "end": "3021200"
  },
  {
    "text": "across the network in real time for maximum data protection so it really comes down to rate of change versus",
    "start": "3021200",
    "end": "3027280"
  },
  {
    "text": "bandwidth great",
    "start": "3027280",
    "end": "3032720"
  },
  {
    "start": "3032000",
    "end": "3082000"
  },
  {
    "text": "thank you folks we've got time for just a couple more questions and um tony this question",
    "start": "3032720",
    "end": "3039839"
  },
  {
    "text": "is back um around um can you provide us some insights into",
    "start": "3039839",
    "end": "3044880"
  },
  {
    "text": "how the licensing for data keeper is um how that works",
    "start": "3044880",
    "end": "3050000"
  },
  {
    "text": "sure definitely definitely so a data keeper is licensed on a per cluster node basis so the demonstration we saw here",
    "start": "3050000",
    "end": "3056160"
  },
  {
    "text": "today where i had a two node cluster you know that would be two licenses of the datakeeper software uh if you want to",
    "start": "3056160",
    "end": "3062640"
  },
  {
    "text": "get more specifics or on on or any quotes things of that nature i",
    "start": "3062640",
    "end": "3068960"
  },
  {
    "text": "would just suggest you email amazon us.ios.com and a representative would be",
    "start": "3068960",
    "end": "3077200"
  },
  {
    "text": "very happy to help you out with with all that information",
    "start": "3077200",
    "end": "3082279"
  },
  {
    "start": "3082000",
    "end": "3126000"
  },
  {
    "text": "terrific well i'd like to thank you both um tony and miles for a great presentation today",
    "start": "3082640",
    "end": "3089280"
  },
  {
    "text": "and really providing detailed information around sandless sql failover clustering on aws",
    "start": "3089280",
    "end": "3096480"
  },
  {
    "text": "and um i'd like to invite folks before you jump off our webcast today to uh take a very brief survey we do um",
    "start": "3096480",
    "end": "3102880"
  },
  {
    "text": "appreciate your feedback helps us improve our webinar series and so with that i'd like to thank you tony",
    "start": "3102880",
    "end": "3109680"
  },
  {
    "text": "from sias our technology partner as well as miles our aws solutions architect for",
    "start": "3109680",
    "end": "3116400"
  },
  {
    "text": "a great presentation today and thank you attendees for your time we appreciate it",
    "start": "3116400",
    "end": "3122160"
  },
  {
    "text": "thank you very much",
    "start": "3122160",
    "end": "3125838"
  }
]