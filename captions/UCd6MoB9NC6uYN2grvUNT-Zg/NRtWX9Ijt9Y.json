[
  {
    "start": "0",
    "end": "226000"
  },
  {
    "text": "foreign",
    "start": "420",
    "end": "2719"
  },
  {
    "text": "account manager here at AWS based out of Delhi India welcome to AWS supports you",
    "start": "8000",
    "end": "15120"
  },
  {
    "text": "where AWS support experts provides tips to optimize performance in the cloud lower cost and provides you with the",
    "start": "15120",
    "end": "22500"
  },
  {
    "text": "best practices and design considerations joining me today is case and Anjali from",
    "start": "22500",
    "end": "28680"
  },
  {
    "text": "our AWS support teams can you give us a quick introduction case and Anjali",
    "start": "28680",
    "end": "34559"
  },
  {
    "text": "sure uh thank you Dania hello all uh thank you for joining my name is kez I'm",
    "start": "34559",
    "end": "39960"
  },
  {
    "text": "the technical account manager with AWS I am based out of India and I support",
    "start": "39960",
    "end": "45059"
  },
  {
    "text": "customers from Financial domain I'm one of the core members of the security Improvement Workshop that we try for our",
    "start": "45059",
    "end": "51840"
  },
  {
    "text": "customers to help validate their security posture and assist them in improving it I also lead The Incident",
    "start": "51840",
    "end": "58980"
  },
  {
    "text": "Management tabletop exercise entitlement from The Tam team in India so that's all",
    "start": "58980",
    "end": "64440"
  },
  {
    "text": "about me over to you Anjali hey thanks guys thanks Tanya hey hi everyone thanks",
    "start": "64440",
    "end": "69720"
  },
  {
    "text": "for joining I am Anjali I am also a technical account manager based out of India working with customer in media and",
    "start": "69720",
    "end": "76320"
  },
  {
    "text": "entertainment domain I have been with AWS for one year now I'm also a part of",
    "start": "76320",
    "end": "81479"
  },
  {
    "text": "cloud operation Community with Focus area of architectural health and Cloud optimization which revolves around AWS",
    "start": "81479",
    "end": "88080"
  },
  {
    "text": "trusted advisor well architected tools and all apart from this I am also part of database Community with expertise in",
    "start": "88080",
    "end": "94700"
  },
  {
    "text": "postgresql so thank you over to you Tanya thank you case and thanks Anjali for",
    "start": "94700",
    "end": "101640"
  },
  {
    "text": "joining us today so today we will be introducing you to AWS Health aware Solutions along with a",
    "start": "101640",
    "end": "108119"
  },
  {
    "text": "demo of you know sending Health alerts to service now with evenbridge Integrations where KS and Anjali will",
    "start": "108119",
    "end": "114240"
  },
  {
    "text": "further Deep dive into it but before we get into the details a quick note to the attendees online use",
    "start": "114240",
    "end": "121200"
  },
  {
    "text": "the chat window on the right hand side of your screen to let us know where you are joining us from today and also share",
    "start": "121200",
    "end": "127860"
  },
  {
    "text": "your thoughts any questions that you have throughout the episode we look forward to hearing from you",
    "start": "127860",
    "end": "133680"
  },
  {
    "text": "we will also provide a link to our service so if you would like to let us know how we did during the session",
    "start": "133680",
    "end": "139560"
  },
  {
    "text": "please click on that link and leave your feedback with that can you walk us through what",
    "start": "139560",
    "end": "145319"
  },
  {
    "text": "all that we are going to be covering today case [Music] sure uh thank you Tanya so uh folks",
    "start": "145319",
    "end": "151620"
  },
  {
    "text": "today I would uh talk about AWS Health Service how it is used by the teams at",
    "start": "151620",
    "end": "156900"
  },
  {
    "text": "AWS to communicate with our customers and the kind of events we post to different dashboards and what",
    "start": "156900",
    "end": "163680"
  },
  {
    "text": "personalities in your organization are likely consumer of these different type",
    "start": "163680",
    "end": "169080"
  },
  {
    "text": "of events from there we will go into the AWS Health aware solution which can",
    "start": "169080",
    "end": "175680"
  },
  {
    "text": "aggregate health events across your organization and push those events into communication channels you use every day",
    "start": "175680",
    "end": "183360"
  },
  {
    "text": "uh we would cover its technical architecture uh pricing and the support",
    "start": "183360",
    "end": "188459"
  },
  {
    "text": "model uh we will then talk about uh building notification or automation on",
    "start": "188459",
    "end": "194159"
  },
  {
    "text": "top of health events uh using cloudwatch events or eventbridge uh my colleague",
    "start": "194159",
    "end": "199920"
  },
  {
    "text": "Anjali would cover um the AWS Health aware integration with service now along with uh the common",
    "start": "199920",
    "end": "206459"
  },
  {
    "text": "trouble shooting steps along the way we would cover some of the frequently asked questions we get from our customers uh",
    "start": "206459",
    "end": "213659"
  },
  {
    "text": "lastly for questions just like my colleague highlighted you can post them in chat box at any time during the",
    "start": "213659",
    "end": "219959"
  },
  {
    "text": "presentation and we would pick them up accordingly so let's get started",
    "start": "219959",
    "end": "225799"
  },
  {
    "start": "226000",
    "end": "736000"
  },
  {
    "text": "so the AWS Health Service is designed around providing transparent and ongoing",
    "start": "226799",
    "end": "233819"
  },
  {
    "text": "visibility into your resource performance and availability of your AWS services and accounts uh keeping our",
    "start": "233819",
    "end": "241319"
  },
  {
    "text": "customers informed allows them to take action with best available information to respond to or avoid impacts to their",
    "start": "241319",
    "end": "249180"
  },
  {
    "text": "services the AWS Health aware service provides that platform AWS health is a service that provides",
    "start": "249180",
    "end": "256500"
  },
  {
    "text": "ongoing visibility into the state of your AWS resources services and accounts",
    "start": "256500",
    "end": "262979"
  },
  {
    "text": "the service provides awareness and Remediation guidance for resource performance or availability issues that",
    "start": "262979",
    "end": "270840"
  },
  {
    "text": "may affect your applications running on AWS the service delivers health events",
    "start": "270840",
    "end": "277259"
  },
  {
    "text": "triggered by changes in the health of the AWS resources to help accelerate",
    "start": "277259",
    "end": "283320"
  },
  {
    "text": "troubleshooting you can use these health events to create notification or even",
    "start": "283320",
    "end": "288900"
  },
  {
    "text": "automate action so next is we will talk about what is the AWS Health Service",
    "start": "288900",
    "end": "298400"
  },
  {
    "text": "so um AWS Health event or the AWS Health Service are the informational messages",
    "start": "300540",
    "end": "307280"
  },
  {
    "text": "uh that AWS Health sends on behalf of other AWS services so ec2 RDS S3",
    "start": "307280",
    "end": "315960"
  },
  {
    "text": "Etc are all using Health Service to inform customers of issues that may",
    "start": "315960",
    "end": "322080"
  },
  {
    "text": "affect their accounts or their resources so when AWS Health event is added it has",
    "start": "322080",
    "end": "328080"
  },
  {
    "text": "scope uh events are scope uh publicly or specific to your accounts or your",
    "start": "328080",
    "end": "334500"
  },
  {
    "text": "resources AWS serve these to our customers in a few different ways and",
    "start": "334500",
    "end": "340979"
  },
  {
    "text": "I'll talk about them in depth first is through the AWS Health",
    "start": "340979",
    "end": "346320"
  },
  {
    "text": "dashboard a global console that you can view events from all AWS regions at a",
    "start": "346320",
    "end": "352380"
  },
  {
    "text": "glance without having to change the region selection on the AWS Management console the AWS Health dashboard",
    "start": "352380",
    "end": "359699"
  },
  {
    "text": "provides alerts and Remediation guidance when AWS is experiencing events that may",
    "start": "359699",
    "end": "366180"
  },
  {
    "text": "impact you second through a set of apis to access the information in a programmatic",
    "start": "366180",
    "end": "373259"
  },
  {
    "text": "fashion so resource health events from AWS services are available in AWS health",
    "start": "373259",
    "end": "379800"
  },
  {
    "text": "and can be accessed through these health apis and lastly via post notification through",
    "start": "379800",
    "end": "386759"
  },
  {
    "text": "Cloud watch events where you can set custom rules and targets to extract the",
    "start": "386759",
    "end": "393180"
  },
  {
    "text": "events of Interest Cloud watch events can also be configured to detect health",
    "start": "393180",
    "end": "399120"
  },
  {
    "text": "events and take necessary actions like restart and ec2 instance",
    "start": "399120",
    "end": "404699"
  },
  {
    "text": "uh these channels can be used by our customers to integrate with in-house uh",
    "start": "404699",
    "end": "410340"
  },
  {
    "text": "third-party monitoring and event management systems users can also create",
    "start": "410340",
    "end": "415380"
  },
  {
    "text": "custom dashboards and notifications Health API is a restful web service that",
    "start": "415380",
    "end": "423419"
  },
  {
    "text": "uses Json as a message format the AWS Health API provides programmatic access",
    "start": "423419",
    "end": "429539"
  },
  {
    "text": "to health information that is presented in the health dashboard next uh we will",
    "start": "429539",
    "end": "436020"
  },
  {
    "text": "talk about ways to consume these health events first up is through the service",
    "start": "436020",
    "end": "441599"
  },
  {
    "text": "Health dashboard or sht so um you can access the SS SSD page",
    "start": "441599",
    "end": "448620"
  },
  {
    "text": "using the link on the screen it shows updates on events which affect a broad",
    "start": "448620",
    "end": "455099"
  },
  {
    "text": "set of users of a service within an availability zone or a region service",
    "start": "455099",
    "end": "462060"
  },
  {
    "text": "Health dashboard displays the general status of AWS services and the most",
    "start": "462060",
    "end": "467580"
  },
  {
    "text": "up-to-date or up to the minute information on service availability",
    "start": "467580",
    "end": "473000"
  },
  {
    "text": "the status is publicly available uh per service and region and users can",
    "start": "473000",
    "end": "479639"
  },
  {
    "text": "subscribe to RSS feeds to receive Health event status updates uh the status",
    "start": "479639",
    "end": "486240"
  },
  {
    "text": "history is also available for the past one year these updates are not specific to an",
    "start": "486240",
    "end": "493740"
  },
  {
    "text": "individual customer or an individual account or AWS region so for that we",
    "start": "493740",
    "end": "500759"
  },
  {
    "text": "have the health dashboard or formerly known as the personal health",
    "start": "500759",
    "end": "506160"
  },
  {
    "text": "dashboard so with a PhD or with the health dashboard it gives you a",
    "start": "506160",
    "end": "512880"
  },
  {
    "text": "personalized view into the performance and availability of the AWS Services",
    "start": "512880",
    "end": "518419"
  },
  {
    "text": "underlining your resources with the recent and upcoming events",
    "start": "518419",
    "end": "523820"
  },
  {
    "text": "organized by three different categories um so one is open issues",
    "start": "523820",
    "end": "530880"
  },
  {
    "text": "um the unexpected any unexpected AWS Service events are um an operational issue uh affecting a",
    "start": "530880",
    "end": "538980"
  },
  {
    "text": "service uh which may further affect your resources are all listed under open issues under schedule changes you have",
    "start": "538980",
    "end": "546720"
  },
  {
    "text": "upcoming changes or maintenance events some of these might require action to",
    "start": "546720",
    "end": "552120"
  },
  {
    "text": "avoid service disruptions While others can work automatically uh example would be a direct connect or a VPN tunnel",
    "start": "552120",
    "end": "559260"
  },
  {
    "text": "maintenance major or minor version upgrade and also easy to maintenance",
    "start": "559260",
    "end": "566060"
  },
  {
    "text": "requiring you to stop and start your instances uh the third one is the other",
    "start": "566060",
    "end": "573000"
  },
  {
    "text": "notifications tab where uh all the other um uh outside of open issues or schedule",
    "start": "573000",
    "end": "580019"
  },
  {
    "text": "changes the other uh events uh such as Administration uh security or",
    "start": "580019",
    "end": "585540"
  },
  {
    "text": "informative events uh would be posted under the other notifications tab uh",
    "start": "585540",
    "end": "590760"
  },
  {
    "text": "example of that would be S3 bucket which is allowing Public Access so the",
    "start": "590760",
    "end": "595980"
  },
  {
    "text": "information about that particular resource would be listed under other notification along with uh say abuse",
    "start": "595980",
    "end": "602760"
  },
  {
    "text": "events uh deprecating a feature or version uh recently the one that we have for Lambda runtime uh as well as",
    "start": "602760",
    "end": "611100"
  },
  {
    "text": "unsuccessful AWS certificate manager all of this would be included under the",
    "start": "611100",
    "end": "616740"
  },
  {
    "text": "other notification tab in the event log section uh these events are available",
    "start": "616740",
    "end": "621779"
  },
  {
    "text": "for uh the past 90 days allowing you allowing our customers to look back at a",
    "start": "621779",
    "end": "627480"
  },
  {
    "text": "previous event and any communication from the teams over time another way one can access this",
    "start": "627480",
    "end": "634140"
  },
  {
    "text": "information is with the health API and like I mentioned it is a restful web",
    "start": "634140",
    "end": "640260"
  },
  {
    "text": "service which provides programmatic access to the health information Health",
    "start": "640260",
    "end": "645420"
  },
  {
    "text": "API is available to customers with business Enterprise on Ram or Enterprise",
    "start": "645420",
    "end": "651480"
  },
  {
    "text": "support plan to programmatically integrate along with the third party vendors",
    "start": "651480",
    "end": "657600"
  },
  {
    "text": "or the third party to notification tools on PhD you can view events related to",
    "start": "657600",
    "end": "663420"
  },
  {
    "text": "your individual account or an organization wide when you enable the",
    "start": "663420",
    "end": "668579"
  },
  {
    "text": "organizational view uh under the health section of the PHD console",
    "start": "668579",
    "end": "674940"
  },
  {
    "text": "next we would talk about uh the AWS Health aware solution uh before I jump",
    "start": "674940",
    "end": "680399"
  },
  {
    "text": "into that do we have any questions your husband",
    "start": "680399",
    "end": "686100"
  },
  {
    "text": "yeah suitcase uh one question that I would like to ask on behalf of the audience does AWS do AWS email our",
    "start": "686100",
    "end": "694560"
  },
  {
    "text": "customers for any of these schedule changes and you know the account notification events can you shed some",
    "start": "694560",
    "end": "700140"
  },
  {
    "text": "light there uh sure yes uh definitely so um we do send uh these scheduled changes or",
    "start": "700140",
    "end": "707820"
  },
  {
    "text": "account notifications by default uh these are sent to the root email address and the alternate uh contacts on each",
    "start": "707820",
    "end": "715500"
  },
  {
    "text": "account such as the operational security or the billing context uh AWS also sends",
    "start": "715500",
    "end": "721980"
  },
  {
    "text": "uh Communications which are not health events to these registered emails",
    "start": "721980",
    "end": "728820"
  },
  {
    "text": "got it thanks case I I think it's helpful thank you back to you",
    "start": "728820",
    "end": "734459"
  },
  {
    "text": "thank you so um uh here we will talk about the AWS",
    "start": "734459",
    "end": "739620"
  },
  {
    "start": "736000",
    "end": "1485000"
  },
  {
    "text": "Health aware solution uh the AWS Health aware is a turnkey out-of-the-box",
    "start": "739620",
    "end": "745380"
  },
  {
    "text": "solution provided by AWS that integrates with uh the AWS Health Service",
    "start": "745380",
    "end": "752040"
  },
  {
    "text": "um aha removes heavy lifting of aggregating these uh health events a",
    "start": "752040",
    "end": "757260"
  },
  {
    "text": "great way for our customers to gain visibility into health events in a single account or across their",
    "start": "757260",
    "end": "764339"
  },
  {
    "text": "organization and later potentially built on it using uh event Bridge integration",
    "start": "764339",
    "end": "770940"
  },
  {
    "text": "and fan out to multiple different customers or consumers it can be easily deployed within few",
    "start": "770940",
    "end": "777660"
  },
  {
    "text": "minutes via cloud formation or terraform my colleague would be going through that on during the demo and provides out of",
    "start": "777660",
    "end": "785399"
  },
  {
    "text": "the box integration with uh slack Microsoft teams and chime aha notifies",
    "start": "785399",
    "end": "792360"
  },
  {
    "text": "about all event types provided in the personal dashboard the categories that",
    "start": "792360",
    "end": "797639"
  },
  {
    "text": "we covered in the previous slide which is ongoing issues account notifications uh other uh or any",
    "start": "797639",
    "end": "806339"
  },
  {
    "text": "scheduled changes all of this is integrated with the AWS Health aware",
    "start": "806339",
    "end": "811920"
  },
  {
    "text": "service so aha uses a health API to aggregate events and",
    "start": "811920",
    "end": "818040"
  },
  {
    "text": "the health API like I mentioned earlier is available with business Enterprise",
    "start": "818040",
    "end": "823500"
  },
  {
    "text": "and Enterprise on-ramp support plan uh next we would look into how aha Works",
    "start": "823500",
    "end": "830519"
  },
  {
    "text": "along with the services involved so what you see on the screen is a basic",
    "start": "830519",
    "end": "836820"
  },
  {
    "text": "architecture of the AWS Health aware service the AWS Health aware service or",
    "start": "836820",
    "end": "842339"
  },
  {
    "text": "aha that we commonly account impact with is based on event driven architecture It",
    "start": "842339",
    "end": "849300"
  },
  {
    "text": "leverages event bridge to invoke a required health API at a regular",
    "start": "849300",
    "end": "854820"
  },
  {
    "text": "interval of 60 seconds event Bridge rule then triggers the Lambda function within",
    "start": "854820",
    "end": "861060"
  },
  {
    "text": "Lambda aha source code is stored in a deployment package and contains an event",
    "start": "861060",
    "end": "866820"
  },
  {
    "text": "handler to process these events the customer configured Event Channel",
    "start": "866820",
    "end": "872339"
  },
  {
    "text": "information is stored in the secrets manager to protect access to those channels uh dynamodb is used as a",
    "start": "872339",
    "end": "881040"
  },
  {
    "text": "persistent store so aha passes event data and shows uh and stores the event",
    "start": "881040",
    "end": "887220"
  },
  {
    "text": "related metadata to perform event duplication deduplication",
    "start": "887220",
    "end": "892620"
  },
  {
    "text": "the template can be deployed in organization management account or a delegated account",
    "start": "892620",
    "end": "898139"
  },
  {
    "text": "uh Lambda poles the health API for updates it tracks the status in the",
    "start": "898139",
    "end": "905279"
  },
  {
    "text": "Dynamo TB table and send alerts to the notification platform of choice",
    "start": "905279",
    "end": "911339"
  },
  {
    "text": "now let's look into some of the key benefits of the AWS Health aware",
    "start": "911339",
    "end": "916860"
  },
  {
    "text": "solution so one and uh the foremost one is the",
    "start": "916860",
    "end": "923040"
  },
  {
    "text": "ease of use um aha can be deployed within few minutes um via cloud formation template or uh uh",
    "start": "923040",
    "end": "931019"
  },
  {
    "text": "the terraform deployment option it helps centralize notification instead",
    "start": "931019",
    "end": "936660"
  },
  {
    "text": "of checking dozens of AWS consoles uh the notifications is aggregated uh with",
    "start": "936660",
    "end": "943620"
  },
  {
    "text": "prescriptive guidance provided by the AWS Health Service uh providing you the visibility into the",
    "start": "943620",
    "end": "949740"
  },
  {
    "text": "AWS accounts and resources that are impacted uh with along with the PHD Health alerts",
    "start": "949740",
    "end": "958079"
  },
  {
    "text": "uh with aha you can centralize all organization events on one bus and",
    "start": "958079",
    "end": "964560"
  },
  {
    "text": "maintain one rule set extensibility is one of the key benefits of the AWS Health Affairs solution so it",
    "start": "964560",
    "end": "972420"
  },
  {
    "text": "is easily extensible with uh event Bridge with the capability to ingest both organizational as well as the",
    "start": "972420",
    "end": "979920"
  },
  {
    "text": "non-organizational alerts to an event bus uh that would help you set up rules and",
    "start": "979920",
    "end": "986820"
  },
  {
    "text": "filters to forward important events to external providers uh filters uh that",
    "start": "986820",
    "end": "993959"
  },
  {
    "text": "are the filters provided by aha uh removes the noise and reports only on",
    "start": "993959",
    "end": "1000740"
  },
  {
    "text": "the regions where you have your resources running so uh part of this would be covered",
    "start": "1000740",
    "end": "1006620"
  },
  {
    "text": "in the demo um where we talk about the event pitch extension uh for sending",
    "start": "1006620",
    "end": "1012380"
  },
  {
    "text": "these alerts to servicenow uh lastly aha can take advantage of the",
    "start": "1012380",
    "end": "1018199"
  },
  {
    "text": "AWS organization or organization view which means it can be deployed once in",
    "start": "1018199",
    "end": "1024079"
  },
  {
    "text": "the management account or a delegated account and it would aggregate all the",
    "start": "1024079",
    "end": "1029540"
  },
  {
    "text": "events across your organization and send it to the uh channels that you configure",
    "start": "1029540",
    "end": "1035240"
  },
  {
    "text": "by doing so events are dedup for instance if you use RDS in multiple",
    "start": "1035240",
    "end": "1042380"
  },
  {
    "text": "accounts in the same region that public event would show on each account of uh",
    "start": "1042380",
    "end": "1048558"
  },
  {
    "text": "or on each of those accounts uh with the help of the organization view",
    "start": "1048559",
    "end": "1053900"
  },
  {
    "text": "um that event is only pulled one time and posted to the chat and chat channels",
    "start": "1053900",
    "end": "1059780"
  },
  {
    "text": "hence lowering the noise and it would cover all the resources that are impacted across the organization",
    "start": "1059780",
    "end": "1067160"
  },
  {
    "text": "next up we would cover pricing and support for the AWS health awareness",
    "start": "1067160",
    "end": "1072380"
  },
  {
    "text": "solution so uh AWS Health aware solution is",
    "start": "1072380",
    "end": "1078020"
  },
  {
    "text": "available at no cost uh you basically pay for the services that are used the",
    "start": "1078020",
    "end": "1084200"
  },
  {
    "text": "total cost depends on the number of uh communication channels amount of events",
    "start": "1084200",
    "end": "1090260"
  },
  {
    "text": "stored uh are presented and the Lambda function execution so as of January 2023",
    "start": "1090260",
    "end": "1096520"
  },
  {
    "text": "average cost of running the AWS Health aware solution is less than five dollar",
    "start": "1096520",
    "end": "1102200"
  },
  {
    "text": "per month for a mid to a large size organization with around 250 accounts",
    "start": "1102200",
    "end": "1109580"
  },
  {
    "text": "and the breakdown of the cost is as shown on the screen",
    "start": "1109580",
    "end": "1114799"
  },
  {
    "text": "I would also recommend you to check uh our AWS pricing page for additional",
    "start": "1114799",
    "end": "1119960"
  },
  {
    "text": "information on the cost aha is available on the GitHub sample repository my colleague would be sharing",
    "start": "1119960",
    "end": "1128000"
  },
  {
    "text": "the link in the chat uh from where you could download the GitHub or you could",
    "start": "1128000",
    "end": "1134299"
  },
  {
    "text": "download this solution from the GitHub page coming to the support model uh for any",
    "start": "1134299",
    "end": "1141080"
  },
  {
    "text": "additional question or any query that you may have regarding the AWS Health",
    "start": "1141080",
    "end": "1146419"
  },
  {
    "text": "aware solution you can engage our premium support uh using the options",
    "start": "1146419",
    "end": "1151760"
  },
  {
    "text": "that are showed on the screen next we would like to share some of the",
    "start": "1151760",
    "end": "1157580"
  },
  {
    "text": "feedback that if we have received from our customers who have used the AWS",
    "start": "1157580",
    "end": "1163280"
  },
  {
    "text": "health awareness solution so 90 or 95 percent of our",
    "start": "1163280",
    "end": "1170000"
  },
  {
    "text": "correspondents stated that aha made them more aware of AWS service and",
    "start": "1170000",
    "end": "1176480"
  },
  {
    "text": "maintenance events 86 percent said it was very easy to deploy and you would",
    "start": "1176480",
    "end": "1182780"
  },
  {
    "text": "see why during the demo 14 of our customers uh sent some",
    "start": "1182780",
    "end": "1188480"
  },
  {
    "text": "suggestions for improvement some of them we have Incorporated in our latest",
    "start": "1188480",
    "end": "1193520"
  },
  {
    "text": "release uh which I would be covering in the next slide uh most of our customers uh used the AWS",
    "start": "1193520",
    "end": "1201919"
  },
  {
    "text": "Health aware solution to provide additional visibility to their uh Central operations team uh their knock",
    "start": "1201919",
    "end": "1210020"
  },
  {
    "text": "or an SRE team or to forward uh the related health events to the Enterprise",
    "start": "1210020",
    "end": "1215419"
  },
  {
    "text": "operations team uh others used it uh to",
    "start": "1215419",
    "end": "1220640"
  },
  {
    "text": "make their application team aware of impacts uh potentially affected affecting their workload on AWS and some",
    "start": "1220640",
    "end": "1228919"
  },
  {
    "text": "of them used it to forward these events uh to the it leadership",
    "start": "1228919",
    "end": "1234080"
  },
  {
    "text": "and about 100 of our customers said that they would recommend this solution to",
    "start": "1234080",
    "end": "1240140"
  },
  {
    "text": "their colleague so next up we would look at the new features that",
    "start": "1240140",
    "end": "1246679"
  },
  {
    "text": "we have Incorporated from the feedback that we have received from our customers",
    "start": "1246679",
    "end": "1252160"
  },
  {
    "text": "so with the latest it is um and even more so we are beginning to",
    "start": "1252160",
    "end": "1257780"
  },
  {
    "text": "rely more on uh the event Bridge uh as eventbridge provides much more uh",
    "start": "1257780",
    "end": "1264559"
  },
  {
    "text": "filtering option and routing capability uh what we are looking to do here is to",
    "start": "1264559",
    "end": "1269960"
  },
  {
    "text": "emulate a normal pattern and deliver that similar event to the bus of your",
    "start": "1269960",
    "end": "1275360"
  },
  {
    "text": "choice uh with Aha and now extension with the eventbridge you can create one to one or",
    "start": "1275360",
    "end": "1282679"
  },
  {
    "text": "one to many event rules and with the latest release aha includes an updated schema format",
    "start": "1282679",
    "end": "1291440"
  },
  {
    "text": "or an updated event schema for events published to eventbridge to enable new",
    "start": "1291440",
    "end": "1297260"
  },
  {
    "text": "options for advanced filtering so where you have specific pattern of",
    "start": "1297260",
    "end": "1302780"
  },
  {
    "text": "events uh you are looking for you can send it like a six for example you could",
    "start": "1302780",
    "end": "1308059"
  },
  {
    "text": "send it so you could send some of them uh to the slack channel uh some can be forwarded using email and the other can",
    "start": "1308059",
    "end": "1316039"
  },
  {
    "text": "be forwarded using a SAS solution like pager Duty so um uh the HR events can be",
    "start": "1316039",
    "end": "1323480"
  },
  {
    "text": "sent to the slack Channel which is monitored by the HR entity and the operational events or say events",
    "start": "1323480",
    "end": "1331880"
  },
  {
    "text": "related to databases or RDS or Aurora can be sent to the DBA team and for",
    "start": "1331880",
    "end": "1338960"
  },
  {
    "text": "security related events one can create rules to send these security events uh",
    "start": "1338960",
    "end": "1344780"
  },
  {
    "text": "through uh pager Duty so that the on-call person is uh paged or alerted uh",
    "start": "1344780",
    "end": "1351740"
  },
  {
    "text": "as soon as the event is sent by AWS uh and like I mentioned with uh the updated",
    "start": "1351740",
    "end": "1358100"
  },
  {
    "text": "event schema uh complex filter uh such as uh the notifications and the one that",
    "start": "1358100",
    "end": "1363440"
  },
  {
    "text": "we just discussed uh uh can be used um or applied using uh the event Bridge",
    "start": "1363440",
    "end": "1370460"
  },
  {
    "text": "uh I guess some of this would also be covered uh during the demo uh that would",
    "start": "1370460",
    "end": "1376280"
  },
  {
    "text": "be done by my colleague Anjali so next let's get into the demo then",
    "start": "1376280",
    "end": "1383480"
  },
  {
    "text": "um and how you could integrate these extra targets and specifically the one",
    "start": "1383480",
    "end": "1390320"
  },
  {
    "text": "related to servicenow uh before we get into the demo uh do we",
    "start": "1390320",
    "end": "1396200"
  },
  {
    "text": "have any questions uh thanks case for taking us through the",
    "start": "1396200",
    "end": "1402380"
  },
  {
    "text": "PHD and we also talked about the pricing and support uh this one question I would like to ask on behalf of the audience is",
    "start": "1402380",
    "end": "1409460"
  },
  {
    "text": "there a charge which is associated with using shd or PhD and also does it",
    "start": "1409460",
    "end": "1416419"
  },
  {
    "text": "require any support specific support level subscription yeah good question Tanya so the shd or",
    "start": "1416419",
    "end": "1424580"
  },
  {
    "text": "PhD um uh are available at no charge and this is regardless of the support plan",
    "start": "1424580",
    "end": "1430820"
  },
  {
    "text": "uh customers do not have to be on a specific support plan uh to consume these events they can simply log into",
    "start": "1430820",
    "end": "1437600"
  },
  {
    "text": "their AWS console and type in help under the services and get into the console uh",
    "start": "1437600",
    "end": "1444080"
  },
  {
    "text": "in order to view these events so to answer your question once again there is no charge associated with it",
    "start": "1444080",
    "end": "1451220"
  },
  {
    "text": "great I hope that helps our customers who are present with us viewing this",
    "start": "1451220",
    "end": "1456320"
  },
  {
    "text": "series in session today great so next uh we would be heading",
    "start": "1456320",
    "end": "1461720"
  },
  {
    "text": "into the demo where uh Anjali would be covering uh on the AHA deployment but",
    "start": "1461720",
    "end": "1467539"
  },
  {
    "text": "before that uh she starts there is a link that we are going to share on the chat window and you can refer to our",
    "start": "1467539",
    "end": "1473960"
  },
  {
    "text": "previous asy video for the detailed information on aha over to you actually",
    "start": "1473960",
    "end": "1480679"
  },
  {
    "text": "thanks Tanya and thanks guys for taking us on the Deep dive of aha so in today's",
    "start": "1480679",
    "end": "1486380"
  },
  {
    "start": "1485000",
    "end": "2837000"
  },
  {
    "text": "demo we will cover steps to deploy aha without AWS organization using cloud",
    "start": "1486380",
    "end": "1492020"
  },
  {
    "text": "formation template in a single region for detailed information on different deployment option available please refer",
    "start": "1492020",
    "end": "1498679"
  },
  {
    "text": "to the link shared by Tanya the scenario we will talk about today will cover sending aha event notification to",
    "start": "1498679",
    "end": "1506059"
  },
  {
    "text": "servicenow using AWS eventbridge we will create two servicenow accounts on one",
    "start": "1506059",
    "end": "1511940"
  },
  {
    "text": "account we will send the event notification all the event notification that are coming on Aha and on the other",
    "start": "1511940",
    "end": "1518419"
  },
  {
    "text": "account we will send notification specific for one service this filtration",
    "start": "1518419",
    "end": "1523760"
  },
  {
    "text": "is the par that new aha event schema brings on the table so without further",
    "start": "1523760",
    "end": "1529279"
  },
  {
    "text": "Ado let's dive deep into our demo and see all this in action",
    "start": "1529279",
    "end": "1535340"
  },
  {
    "text": "so uh when we are doing a hard deployment the first step we need to do is create an S3 bucket so for the",
    "start": "1535340",
    "end": "1542000"
  },
  {
    "text": "purpose of this demo let's create a bucket named aha zip and we also need to make sure that when",
    "start": "1542000",
    "end": "1549620"
  },
  {
    "text": "we are creating this S3 bucket it is not publicly accessible so for security point of view let's not make it publicly",
    "start": "1549620",
    "end": "1556700"
  },
  {
    "text": "accessible we have just created this bucket so after this bucket has been created the",
    "start": "1556700",
    "end": "1564440"
  },
  {
    "text": "next step is to upload a zip file so this ZIP file contains the python code",
    "start": "1564440",
    "end": "1570440"
  },
  {
    "text": "used to create the Lambda function as talked about in our architecture by Cass",
    "start": "1570440",
    "end": "1575840"
  },
  {
    "text": "so let's just upload this zip file",
    "start": "1575840",
    "end": "1580179"
  },
  {
    "text": "so once the zip file has been uploaded Next Step would be to deploy iCloud",
    "start": "1581480",
    "end": "1586520"
  },
  {
    "text": "formation template that we get from our GitHub repository so we will create a stack from the new",
    "start": "1586520",
    "end": "1592880"
  },
  {
    "text": "resources we will upload the yml file so let's just select the yml file upload it",
    "start": "1592880",
    "end": "1599480"
  },
  {
    "text": "will click on next so here you can see that there are multiple parameters and",
    "start": "1599480",
    "end": "1604760"
  },
  {
    "text": "configuration that we need to set up so the first step is to provide the stack name so we will write the stack name as",
    "start": "1604760",
    "end": "1610760"
  },
  {
    "text": "aha deployment in the parameters you can see there are multiple parameters that we can set from so the first parameter",
    "start": "1610760",
    "end": "1617900"
  },
  {
    "text": "here is AWS organization whether it is enabled or disabled so the purpose for",
    "start": "1617900",
    "end": "1623539"
  },
  {
    "text": "the purpose of this demo we will keep it as no so moving ahead so the next parameter",
    "start": "1623539",
    "end": "1631279"
  },
  {
    "text": "available for us is the type of events that we want to get notified on so either we can get all the types of event",
    "start": "1631279",
    "end": "1638299"
  },
  {
    "text": "notification or we can choose from whether if you want to get only the notification with respect to an issue so",
    "start": "1638299",
    "end": "1644720"
  },
  {
    "text": "uh in this demo we will select to get all the type of notification",
    "start": "1644720",
    "end": "1649760"
  },
  {
    "text": "then comes the configuration related to package so here we will write the essay",
    "start": "1649760",
    "end": "1655220"
  },
  {
    "text": "bucket name which we created in previous step and the next thing that we need to",
    "start": "1655220",
    "end": "1660799"
  },
  {
    "text": "write here is the name of the zip file that we uploaded on S3 bucket so just",
    "start": "1660799",
    "end": "1667039"
  },
  {
    "text": "ensure that when you are writing the name of the zip file you are including the extension dot zip [Music]",
    "start": "1667039",
    "end": "1673940"
  },
  {
    "text": "so uh in the next configuration steps there are multiple Communication channel that you can choose from so here we are",
    "start": "1673940",
    "end": "1681500"
  },
  {
    "text": "talking about the event notification on which Communication channel it will be sent to so uh we can choose from slack",
    "start": "1681500",
    "end": "1688159"
  },
  {
    "text": "so if you want to get notified on the slack whenever an event occur you can choose from here you can even send these",
    "start": "1688159",
    "end": "1695059"
  },
  {
    "text": "notification to Microsoft teams even chime and for the purpose of this demo",
    "start": "1695059",
    "end": "1700460"
  },
  {
    "text": "we are going to leverage an event bus so uh here we will just write the name",
    "start": "1700460",
    "end": "1707000"
  },
  {
    "text": "of the event bus on which we will send the notification so it's aha event bus",
    "start": "1707000",
    "end": "1712640"
  },
  {
    "text": "so uh moving on uh the next configuration is talking about the event",
    "start": "1712640",
    "end": "1718580"
  },
  {
    "text": "search pack so event search pack is nothing but it is the duration in ours",
    "start": "1718580",
    "end": "1723919"
  },
  {
    "text": "on which we need to get back look back and see if an event occurred so by",
    "start": "1723919",
    "end": "1729440"
  },
  {
    "text": "default this value is 1R but for the purpose of this demo we are keeping it as 48 hours because we want to look back",
    "start": "1729440",
    "end": "1736400"
  },
  {
    "text": "for the eight hours and see if any event occurred and we want to get notified on this",
    "start": "1736400",
    "end": "1742039"
  },
  {
    "text": "so uh let's just skip it [Music] at 48 Hours also you will see that there",
    "start": "1742039",
    "end": "1748820"
  },
  {
    "text": "are multiple others Advanced option available as well so uh say suppose you",
    "start": "1748820",
    "end": "1753919"
  },
  {
    "text": "have a workload deployed on a particular region and you want to get notified on the events or services or issues and",
    "start": "1753919",
    "end": "1762620"
  },
  {
    "text": "challenges that are happening on that particular region so in this you can select that a particular region as well",
    "start": "1762620",
    "end": "1768320"
  },
  {
    "text": "or you can get notified of events happening on all the region so in this demo we have selected it as All Region",
    "start": "1768320",
    "end": "1775120"
  },
  {
    "text": "uh the next configuration is uh AWS organ whether you want to deploy it on",
    "start": "1775120",
    "end": "1782179"
  },
  {
    "text": "multiple region or not so if you want to maintain a high availability then you",
    "start": "1782179",
    "end": "1787880"
  },
  {
    "text": "can deploy it on multiple region but we are keeping it as a single region only",
    "start": "1787880",
    "end": "1793700"
  },
  {
    "text": "so we'll just click create next we'll just review all the configuration that we have set up and once this is done a",
    "start": "1793700",
    "end": "1801799"
  },
  {
    "text": "pop-up will base there is also an option that we need to select because in this template we are creating some IEM",
    "start": "1801799",
    "end": "1808159"
  },
  {
    "text": "resources so we need to acknowledge that we are aware that IM resources will be created using this template so let's",
    "start": "1808159",
    "end": "1815299"
  },
  {
    "text": "just select it and we will create so this deployments take a few minutes",
    "start": "1815299",
    "end": "1822020"
  },
  {
    "text": "for getting to be deployed because we are creating multiple resources we are creating dynamodb we are creating Lambda",
    "start": "1822020",
    "end": "1827659"
  },
  {
    "text": "function so it will take some time for it to getting deployed so once this is deployed we are done",
    "start": "1827659",
    "end": "1834620"
  },
  {
    "text": "with the part of aha deployment the second step we need to do is set up a",
    "start": "1834620",
    "end": "1839720"
  },
  {
    "text": "servicenow account so during my introduction what we are going to do in this demo I talked about that we will be",
    "start": "1839720",
    "end": "1845419"
  },
  {
    "text": "creating two servicenow accounts so here let's uh briefly see how we can create a",
    "start": "1845419",
    "end": "1850940"
  },
  {
    "text": "servicenow account so we will be creating a developer account so let's just login into a servicenow portal",
    "start": "1850940",
    "end": "1858100"
  },
  {
    "text": "add our email [Music] and next then I will enter my password",
    "start": "1858100",
    "end": "1866419"
  },
  {
    "text": "so once I enter my password I click on sign on CE I'm once I am signed in",
    "start": "1866419",
    "end": "1873740"
  },
  {
    "text": "I will get an option where I can start building so once I click on start",
    "start": "1873740",
    "end": "1879200"
  },
  {
    "text": "building it's doing nothing but it will provide me an instance so there are three reasons from which you can choose",
    "start": "1879200",
    "end": "1886039"
  },
  {
    "text": "from so uh first is Tokyo on which there are latest release available with",
    "start": "1886039",
    "end": "1891320"
  },
  {
    "text": "respect to servicenow ABS the second is the San Diego region then there is ROM region so in this demo both the accounts",
    "start": "1891320",
    "end": "1898760"
  },
  {
    "text": "that we have created we will be using Tokyo region so let's click on Tokyo region and we",
    "start": "1898760",
    "end": "1905480"
  },
  {
    "text": "will request for an instance so the fourth instance to be available it takes some time and once the instance",
    "start": "1905480",
    "end": "1912559"
  },
  {
    "text": "is available you will get this pop-up which talks about what is the instance URL the URL that you can use to call",
    "start": "1912559",
    "end": "1919279"
  },
  {
    "text": "servicenow apis for credential purpose it will provide you username and",
    "start": "1919279",
    "end": "1924559"
  },
  {
    "text": "password so username uh for admin level what's the admin username admin password you will also get this information in",
    "start": "1924559",
    "end": "1932539"
  },
  {
    "text": "your registered email and uh just uh make sure that you are copying this information in a notepad because we",
    "start": "1932539",
    "end": "1939260"
  },
  {
    "text": "would be needing this information when we are sending events to servicenow so I will just make a note of this",
    "start": "1939260",
    "end": "1946340"
  },
  {
    "text": "information [Music] we'll just copy all this and keep it in",
    "start": "1946340",
    "end": "1952159"
  },
  {
    "text": "a notepad so now we have uh launched a service now we have created a servicenow",
    "start": "1952159",
    "end": "1957860"
  },
  {
    "text": "account so the next step is making a connection between servicenow and AWS",
    "start": "1957860",
    "end": "1965659"
  },
  {
    "text": "so for this let's go back into our AWS console and go to AWS event Bridge so in",
    "start": "1965659",
    "end": "1972020"
  },
  {
    "text": "AWS event Bridge we need to create API destinations so API destinations are",
    "start": "1972020",
    "end": "1978080"
  },
  {
    "text": "nothing but they are the HTTP endpoints URL using which you can connect to these",
    "start": "1978080",
    "end": "1983600"
  },
  {
    "text": "third parties and in API destinations before we create these API destination we Define those",
    "start": "1983600",
    "end": "1990260"
  },
  {
    "text": "HTTP endpoints we need to create connections so connections uh as in which credentials you wish or which type",
    "start": "1990260",
    "end": "1997220"
  },
  {
    "text": "of authentication method you will use so here let's create uh one connection",
    "start": "1997220",
    "end": "2003220"
  },
  {
    "text": "and let's give it as a name as aha servicenow connection so here if you scroll down there are",
    "start": "2003220",
    "end": "2010179"
  },
  {
    "text": "multiple authorization method that you can choose from so one is the basic one where you can pass on the username and",
    "start": "2010179",
    "end": "2017320"
  },
  {
    "text": "the password the second is oauth client so if you are using oauth credentials",
    "start": "2017320",
    "end": "2022539"
  },
  {
    "text": "then you can pass it here the third is the API key so if you get in any of the",
    "start": "2022539",
    "end": "2027880"
  },
  {
    "text": "third party tools the API key then you can use stat as well here so for the",
    "start": "2027880",
    "end": "2033279"
  },
  {
    "text": "purpose of this demo we will be using basic Authentication and uh here uh just provide the username",
    "start": "2033279",
    "end": "2045120"
  },
  {
    "text": "and then I will enter the password for this basic Authentication",
    "start": "2045340",
    "end": "2050500"
  },
  {
    "text": "and click on next so I have created one connection now I",
    "start": "2050500",
    "end": "2056500"
  },
  {
    "text": "need to create a corresponding API destination so I will just go on API destination tab click on API destination",
    "start": "2056500",
    "end": "2062700"
  },
  {
    "text": "provide the name here uh we are talking about the HTTP",
    "start": "2062700",
    "end": "2069040"
  },
  {
    "text": "this URL link for where we will be going and creating the connection so if you remember when we created the servicenow",
    "start": "2069040",
    "end": "2075820"
  },
  {
    "text": "account we got an information of the instance URL so that instance URL we will be providing here",
    "start": "2075820",
    "end": "2081878"
  },
  {
    "text": "the next option is what kind of HTTP method we will be using when we are",
    "start": "2081879",
    "end": "2087158"
  },
  {
    "text": "calling this URL so uh for servicenow since we will be posting this event we",
    "start": "2087159",
    "end": "2092560"
  },
  {
    "text": "will be using post method after this uh we'll keep everything as",
    "start": "2092560",
    "end": "2098080"
  },
  {
    "text": "default and we need to select the connection so there are two options",
    "start": "2098080",
    "end": "2103480"
  },
  {
    "text": "either you can create connection here or you can choose from the existing connection so we have already created",
    "start": "2103480",
    "end": "2109420"
  },
  {
    "text": "the connection so we will from the drop down select it and just create this API destination",
    "start": "2109420",
    "end": "2115480"
  },
  {
    "text": "so uh since we have created two servicenow account we will also be creating two connections and two API",
    "start": "2115480",
    "end": "2121720"
  },
  {
    "text": "destinations so let's create the other one let's give it as a name as a aha service",
    "start": "2121720",
    "end": "2127000"
  },
  {
    "text": "now uh filter connection so in this API destination we",
    "start": "2127000",
    "end": "2134380"
  },
  {
    "text": "will be sending our filtered notification Here Also let's use the same authentication method basic provide",
    "start": "2134380",
    "end": "2141460"
  },
  {
    "text": "the username the password",
    "start": "2141460",
    "end": "2145799"
  },
  {
    "text": "just writing the password click on to me yeah so just I will create this",
    "start": "2146680",
    "end": "2154660"
  },
  {
    "text": "so once this connection has been created we will create a corresponding API destination",
    "start": "2154660",
    "end": "2159880"
  },
  {
    "text": "let's click on the name here filter will paste the URL method is post and",
    "start": "2159880",
    "end": "2168460"
  },
  {
    "text": "from the already created connection we will from the drop down select the filter connection and we'll",
    "start": "2168460",
    "end": "2174099"
  },
  {
    "text": "just create this API destination so now we have created the API",
    "start": "2174099",
    "end": "2179619"
  },
  {
    "text": "destination so next step is to create the AWS event Bridge or rules so we'll",
    "start": "2179619",
    "end": "2187900"
  },
  {
    "text": "go to AWS event fresh console click on rules",
    "start": "2187900",
    "end": "2193740"
  },
  {
    "text": "and we will select from the bus name aha event bus so if you remember when we did",
    "start": "2194079",
    "end": "2199540"
  },
  {
    "text": "the AHA deployment we provided a name of the AHA uh bus event bus so that is aha",
    "start": "2199540",
    "end": "2205599"
  },
  {
    "text": "event burst we provided we will select it from here and we will create our first rule",
    "start": "2205599",
    "end": "2210640"
  },
  {
    "text": "so in our first rule what we will be doing is we will set be sending all the events that are coming on this event bus",
    "start": "2210640",
    "end": "2217780"
  },
  {
    "text": "to our service now first servicenow account so let's give it as a name",
    "start": "2217780",
    "end": "2223240"
  },
  {
    "text": "aha service now in this event source so in this event Source what we will be doing is that we",
    "start": "2223240",
    "end": "2229720"
  },
  {
    "text": "want to get notification from all the event notifications that are coming in this event bus so let's click select all",
    "start": "2229720",
    "end": "2236920"
  },
  {
    "text": "events so once you select this all events in the event pattern you will see that there's a pre-filled pattern that",
    "start": "2236920",
    "end": "2243700"
  },
  {
    "text": "is coming and it is talking about the account and the account name so if this key value pair is getting justified by",
    "start": "2243700",
    "end": "2251859"
  },
  {
    "text": "events that are coming on this event bus it will pass this rule so let's keep it as as it is click on",
    "start": "2251859",
    "end": "2259119"
  },
  {
    "text": "next and next thing is to select what will be the target so since we will be passing",
    "start": "2259119",
    "end": "2265780"
  },
  {
    "text": "all this to service now and for servicenow connection we created API destination so let's select event Bridge",
    "start": "2265780",
    "end": "2271720"
  },
  {
    "text": "API destination we'll select the existing one so the first is our servicenow",
    "start": "2271720",
    "end": "2278380"
  },
  {
    "text": "once this is selected we will click on advanced settings",
    "start": "2278380",
    "end": "2284440"
  },
  {
    "text": "yeah so just when we click on the next thing we need to do is configure Target input",
    "start": "2284440",
    "end": "2291520"
  },
  {
    "text": "so we need to configure the input Transformer because until now what we",
    "start": "2291520",
    "end": "2296859"
  },
  {
    "text": "have done is we have created a connection with our service now and here we are reading the events that are",
    "start": "2296859",
    "end": "2302020"
  },
  {
    "text": "coming on this bus but we need to pass these events to service now in a certain format so for this we need to configure",
    "start": "2302020",
    "end": "2309280"
  },
  {
    "text": "the input Transformer so let's just click on configure input Transformer",
    "start": "2309280",
    "end": "2314440"
  },
  {
    "text": "the first thing we need to do is in the input path we need to define the attributes so if you see what we are",
    "start": "2314440",
    "end": "2322240"
  },
  {
    "text": "doing here is we have defined few attributes like Arn and time event description even short description and",
    "start": "2322240",
    "end": "2329380"
  },
  {
    "text": "in this attribute we are passing the value by reading uh the updated schema",
    "start": "2329380",
    "end": "2335200"
  },
  {
    "text": "so in our when we were talking in the DAC Cass talked about that in aha we have an updated schema which helps us to",
    "start": "2335200",
    "end": "2342520"
  },
  {
    "text": "do these kind of filtration in this updated schema we have a dictionary name detail and in this dictionary we have",
    "start": "2342520",
    "end": "2349599"
  },
  {
    "text": "multiple attribute which we provides information of event AR and which provides information of description",
    "start": "2349599",
    "end": "2355660"
  },
  {
    "text": "service what is the status so we will leverage that information and store is",
    "start": "2355660",
    "end": "2360820"
  },
  {
    "text": "in these attributes so once we configure this input path in",
    "start": "2360820",
    "end": "2366760"
  },
  {
    "text": "template we will be reading the attributes we defined in the above input path so in input in this template uh in",
    "start": "2366760",
    "end": "2374740"
  },
  {
    "text": "the description let's read the attribute as event description short description we will read as event type uh name then",
    "start": "2374740",
    "end": "2382180"
  },
  {
    "text": "we have service so let's just Define this template",
    "start": "2382180",
    "end": "2387780"
  },
  {
    "text": "so once this template has been defined we will confirm it so we have configured",
    "start": "2387940",
    "end": "2394060"
  },
  {
    "text": "our input Transformer we'll just click on next",
    "start": "2394060",
    "end": "2399099"
  },
  {
    "text": "and next need to keep everything as default we will review the configuration we have done so far and we will just",
    "start": "2399099",
    "end": "2406000"
  },
  {
    "text": "create this rule so once this rule has been created we",
    "start": "2406000",
    "end": "2411940"
  },
  {
    "text": "need to create one more rule so uh in this rule we will be doing the",
    "start": "2411940",
    "end": "2417760"
  },
  {
    "text": "filtration so until now we have sent all the events that are coming on this bus",
    "start": "2417760",
    "end": "2422980"
  },
  {
    "text": "and did nothing any kind of filtration and passed it on but let's create one more rule give it as name of aha",
    "start": "2422980",
    "end": "2429520"
  },
  {
    "text": "servicenow as filter click on next pass on all the events that are coming",
    "start": "2429520",
    "end": "2436119"
  },
  {
    "text": "on this bus now the filtration the filtration we",
    "start": "2436119",
    "end": "2443560"
  },
  {
    "text": "will be doing is in event pattern so we will change the default uh",
    "start": "2443560",
    "end": "2449079"
  },
  {
    "text": "pattern that was coming here we'll click on custom pattern and we will provide our own pattern that we need to match in",
    "start": "2449079",
    "end": "2456280"
  },
  {
    "text": "this rule so just click here so here the pattern that I have entered",
    "start": "2456280",
    "end": "2461320"
  },
  {
    "text": "it is talking about the detailed dictionary that in detail dictionary if the service is cloud formation then only",
    "start": "2461320",
    "end": "2468820"
  },
  {
    "text": "it should pass this rule so that's the filtration I have defined but based on",
    "start": "2468820",
    "end": "2474880"
  },
  {
    "text": "your requirement you can do filtration on based on different services and status as well so it's all based on your",
    "start": "2474880",
    "end": "2482020"
  },
  {
    "text": "requirement what kind of filtration you want to do for in this demo we are doing filtration on service attribute",
    "start": "2482020",
    "end": "2488800"
  },
  {
    "text": "so let's just keep it as Services cloud formation and we'll click on next",
    "start": "2488800",
    "end": "2496200"
  },
  {
    "text": "we'll select event Bridge API destination since we will be sending this to one of our API destination here",
    "start": "2496839",
    "end": "2504640"
  },
  {
    "text": "from existing we will select the second one EPA servicenow filter and uh similarly in the previous step we",
    "start": "2504640",
    "end": "2512020"
  },
  {
    "text": "will configure the input Transformer so it's uh it's using the same step we are defining the attribute in input path",
    "start": "2512020",
    "end": "2518859"
  },
  {
    "text": "then in template we are reading the attribute from input path and preparing it for API call and we will confirm it",
    "start": "2518859",
    "end": "2526480"
  },
  {
    "text": "once the confirmation is done we will again just click on next keep everything as default review the configuration if",
    "start": "2526480",
    "end": "2534339"
  },
  {
    "text": "there is any changes required we can edit it otherwise we will just create this rule",
    "start": "2534339",
    "end": "2540400"
  },
  {
    "text": "so now we have created two rules the for in the first rule we are passing all the events without any filtration in the",
    "start": "2540400",
    "end": "2547240"
  },
  {
    "text": "second rule we are passing the rule based on the filter for service as cloud",
    "start": "2547240",
    "end": "2552579"
  },
  {
    "text": "formation now all the setup has been done now the",
    "start": "2552579",
    "end": "2558940"
  },
  {
    "text": "next step comes of testing whether these events are getting uh sent to service",
    "start": "2558940",
    "end": "2564579"
  },
  {
    "text": "now or not so for this we will go into our servicenow console",
    "start": "2564579",
    "end": "2570280"
  },
  {
    "text": "will go an incident table and in incident table we will select as",
    "start": "2570280",
    "end": "2576820"
  },
  {
    "text": "all so we know we want to see if we are getting all the events or not so here you can see that in short description we",
    "start": "2576820",
    "end": "2584920"
  },
  {
    "text": "get to see AWS specific description so these are the events that were sent by",
    "start": "2584920",
    "end": "2590079"
  },
  {
    "text": "aha on Eventbrite and ultimately on service now so this is only short",
    "start": "2590079",
    "end": "2595480"
  },
  {
    "text": "description but uh in case if you want to see more detail about it so let's",
    "start": "2595480",
    "end": "2601060"
  },
  {
    "text": "just click on this info icon so once you click on this info icon here",
    "start": "2601060",
    "end": "2606880"
  },
  {
    "text": "you can see the information that we passed from our input Transformer so here in description we can see what's",
    "start": "2606880",
    "end": "2613480"
  },
  {
    "text": "the description when the event was happened what is the latest status of this event",
    "start": "2613480",
    "end": "2620140"
  },
  {
    "text": "so all this information can be viewed here so uh let's to uh see if our filtration",
    "start": "2620140",
    "end": "2627160"
  },
  {
    "text": "worked as well or not so let's just go to a second servicenow account go to our",
    "start": "2627160",
    "end": "2632380"
  },
  {
    "text": "incident table and in this incident table let's see if",
    "start": "2632380",
    "end": "2637839"
  },
  {
    "text": "we see any notification or not in all yeah so here we don't see any",
    "start": "2637839",
    "end": "2644560"
  },
  {
    "text": "notification so if you uh viewed in previous when in the service now previous service now",
    "start": "2644560",
    "end": "2650980"
  },
  {
    "text": "account the notifications were not coming for cloud formation service so",
    "start": "2650980",
    "end": "2656079"
  },
  {
    "text": "let's just go ahead in our AWS console and just modify this filtration so here",
    "start": "2656079",
    "end": "2662800"
  },
  {
    "text": "let's go to eventbridge and include a service for which end notification came",
    "start": "2662800",
    "end": "2668440"
  },
  {
    "text": "let's see how we can modify the rule we will go to our again select the I event",
    "start": "2668440",
    "end": "2673720"
  },
  {
    "text": "bus go to our filter rule we'll click on edit and in this pattern instead of cloud",
    "start": "2673720",
    "end": "2681339"
  },
  {
    "text": "formation we will select Cloud Catalyst called Catalyst here so once code",
    "start": "2681339",
    "end": "2686740"
  },
  {
    "text": "Catalyst next and we'll just update this rule",
    "start": "2686740",
    "end": "2691619"
  },
  {
    "text": "uh yeah just updating the rules now rule has been updated but uh how we will get",
    "start": "2692680",
    "end": "2699400"
  },
  {
    "text": "a review the previous notifications again because in our template we defined as 48 hours it's done it's review of 48",
    "start": "2699400",
    "end": "2706900"
  },
  {
    "text": "hours and send the notification so in uh architecture and architecture we talked",
    "start": "2706900",
    "end": "2711940"
  },
  {
    "text": "about that we have a component of dynamodb so in dynamodb all the notification gets stored so that you",
    "start": "2711940",
    "end": "2718180"
  },
  {
    "text": "don't get a duplicate entry so let's just go to the dynamodb and clean all",
    "start": "2718180",
    "end": "2723760"
  },
  {
    "text": "these notifications so that we can test out if our updated filtration rule is",
    "start": "2723760",
    "end": "2728920"
  },
  {
    "text": "working or not we'll get to a dynamodb table of our deployment and we will just",
    "start": "2728920",
    "end": "2734200"
  },
  {
    "text": "delete all the items data here okay once you clean this uh dynamodb so",
    "start": "2734200",
    "end": "2740800"
  },
  {
    "text": "your aha deployment will again go to the searchback period of 48 hours it will see if there's a new notification 48",
    "start": "2740800",
    "end": "2748420"
  },
  {
    "text": "hours back and provide it so now after this search back we can see our in-service now uh we can see that the",
    "start": "2748420",
    "end": "2756339"
  },
  {
    "text": "code catalyst is coming up so here our filtration is working",
    "start": "2756339",
    "end": "2761560"
  },
  {
    "text": "so and you can just click on info you can see that you can all the description is coming",
    "start": "2761560",
    "end": "2768960"
  },
  {
    "text": "so this was all in our demo part but if you are interested in to know more just",
    "start": "2769119",
    "end": "2774760"
  },
  {
    "text": "drop us a note in our comment section and we will take it up so over to you Tanya is there any question from",
    "start": "2774760",
    "end": "2781420"
  },
  {
    "text": "audience thank you Anjali for taking us through",
    "start": "2781420",
    "end": "2788079"
  },
  {
    "text": "the demo so one question uh how can we monitor events that are sent to servicenow like for example one of the",
    "start": "2788079",
    "end": "2794619"
  },
  {
    "text": "event if it is not sent is there a way to track it uh thanks on uh Tania for asking this",
    "start": "2794619",
    "end": "2801880"
  },
  {
    "text": "and yeah do we do face these kind of challenges so if you need to troubleshoot your API integration you",
    "start": "2801880",
    "end": "2808420"
  },
  {
    "text": "can use a sqs dead letter queue to see the errors that are generated by eventbridge and in that letter Q it is a",
    "start": "2808420",
    "end": "2815920"
  },
  {
    "text": "queue that one or more sources cues can use for messages that are not consumed",
    "start": "2815920",
    "end": "2821020"
  },
  {
    "text": "successfully ensure that your sqsq has permission to receive uh information",
    "start": "2821020",
    "end": "2826839"
  },
  {
    "text": "from eventbridge and in our next section what we will be doing is we will be covering more about troubleshooting and",
    "start": "2826839",
    "end": "2833740"
  },
  {
    "text": "monitoring so uh let's yeah thank you Tanya so",
    "start": "2833740",
    "end": "2841180"
  },
  {
    "start": "2837000",
    "end": "2974000"
  },
  {
    "text": "let's go to our troubleshooting so if you go to your event Bridge rules you will see in monitoring section there are",
    "start": "2841180",
    "end": "2847420"
  },
  {
    "text": "three things that you can monitor one is invocations so how many times your rules was invocated and uh what are your",
    "start": "2847420",
    "end": "2855640"
  },
  {
    "text": "triggered rules and here you will see in the third tab it is talking about failed",
    "start": "2855640",
    "end": "2860800"
  },
  {
    "text": "invocations so it means that you did get invocated but your rules were not passed",
    "start": "2860800",
    "end": "2866319"
  },
  {
    "text": "basically you didn't pass that information to your uh Target whether it is event Bridge or any other Target so",
    "start": "2866319",
    "end": "2873280"
  },
  {
    "text": "let's dive deep more into it and see how we can get more information and troubleshooted",
    "start": "2873280",
    "end": "2879640"
  },
  {
    "text": "so moving to the next slide so the first step we will do is we will go to our aha",
    "start": "2879640",
    "end": "2885520"
  },
  {
    "text": "servicenow connection and we will see what's its status whether it is authorized or de-authorized so whenever",
    "start": "2885520",
    "end": "2891819"
  },
  {
    "text": "this API destination get triggered it will make a connection based on our authentication parameter you we used and",
    "start": "2891819",
    "end": "2898720"
  },
  {
    "text": "in if it is not able to connect it will provide this data set de authorize so here we see that the status is",
    "start": "2898720",
    "end": "2904960"
  },
  {
    "text": "deauthorized so let's dive more into it how we can check what's the parameter debt or configuration we are missing so",
    "start": "2904960",
    "end": "2911680"
  },
  {
    "text": "what you can do is you can log in into your AWS CLI and just pass it or normal",
    "start": "2911680",
    "end": "2917500"
  },
  {
    "text": "CLI just go and provide this curl here in the instance ID just provide the",
    "start": "2917500",
    "end": "2923260"
  },
  {
    "text": "information instance ID you get from instance URL when we created the servicenow account you can just hit on",
    "start": "2923260",
    "end": "2929500"
  },
  {
    "text": "this curl providing the authentication as well the username and the password in",
    "start": "2929500",
    "end": "2935200"
  },
  {
    "text": "case you are getting this message message that user is not authenticated or that means you are not providing the",
    "start": "2935200",
    "end": "2942280"
  },
  {
    "text": "appropriate username or you are missing something in the password and you can just first check whether this girl is",
    "start": "2942280",
    "end": "2948880"
  },
  {
    "text": "getting successful or not once this girl gets successful then you can update this information in your API connection and",
    "start": "2948880",
    "end": "2956020"
  },
  {
    "text": "voila your information will get basically you will be able to troubleshoot it and you will get all the",
    "start": "2956020",
    "end": "2961240"
  },
  {
    "text": "information on servicenow so uh that was all from our end in Aha",
    "start": "2961240",
    "end": "2967839"
  },
  {
    "text": "and the deployment strategy so any ending question or notes",
    "start": "2967839",
    "end": "2973540"
  },
  {
    "text": "you know thank you Anjali uh thanks case so one question uh that we would like to",
    "start": "2973540",
    "end": "2980680"
  },
  {
    "start": "2974000",
    "end": "3119000"
  },
  {
    "text": "ask uh you know is the even bus creation necessary to run the AHA or is it only",
    "start": "2980680",
    "end": "2986380"
  },
  {
    "text": "if you want to use the even Bridge can any one of you enlightens the audience please",
    "start": "2986380",
    "end": "2991599"
  },
  {
    "text": "sure yeah I could take that question yeah sure sure yeah so uh only if you uh so with",
    "start": "2991599",
    "end": "2999280"
  },
  {
    "text": "respect to event bus creation necessary to run aha uh it is only if you want to",
    "start": "2999280",
    "end": "3004380"
  },
  {
    "text": "use it for further filtering or send output to other services or third-party",
    "start": "3004380",
    "end": "3009540"
  },
  {
    "text": "Solutions only then you can I could further make use of the event Bridge extensibility",
    "start": "3009540",
    "end": "3017300"
  },
  {
    "text": "foreign",
    "start": "3017700",
    "end": "3019940"
  },
  {
    "text": "so I think we are good no further questions that we see from the audience uh so with that uh today everyone we",
    "start": "3022740",
    "end": "3030300"
  },
  {
    "text": "looked at the AWS Health level Solutions where KS and Anjali also demonstrated",
    "start": "3030300",
    "end": "3035819"
  },
  {
    "text": "the demo of you know sending the health alerts to service now with even Bridge integration so I really hope it was",
    "start": "3035819",
    "end": "3041880"
  },
  {
    "text": "helpful if there are any questions that were not answered today and uh you know you want",
    "start": "3041880",
    "end": "3048359"
  },
  {
    "text": "us uh our experts to answer that for you you can post your questions on repost dot AWS where one of our experts can",
    "start": "3048359",
    "end": "3056099"
  },
  {
    "text": "provide you with the answer to your questions or your question could also become a topic of one of our future",
    "start": "3056099",
    "end": "3062339"
  },
  {
    "text": "shows and if you have any feedback for us please check the chat box on the",
    "start": "3062339",
    "end": "3067380"
  },
  {
    "text": "right hand side for a link to our survey or you can also email us at AWS supports",
    "start": "3067380",
    "end": "3072839"
  },
  {
    "text": "you at amazon.com we want to hear from you tell us what else you would like to",
    "start": "3072839",
    "end": "3078180"
  },
  {
    "text": "see us we would like to see on the show and be sure to join us again in two",
    "start": "3078180",
    "end": "3083880"
  },
  {
    "text": "weeks on February 8th at 10 AM IST where we will be discussing on the",
    "start": "3083880",
    "end": "3089099"
  },
  {
    "text": "implementation of SAS workload optimization with postgres SQL thank you again KS Anjali and all of you",
    "start": "3089099",
    "end": "3096780"
  },
  {
    "text": "for joining us today happy cloud computing hey thank you everyone",
    "start": "3096780",
    "end": "3104420"
  },
  {
    "text": "[Music]",
    "start": "3106880",
    "end": "3112359"
  }
]