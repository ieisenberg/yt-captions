[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "hi everybody good afternoon are we",
    "start": "1070",
    "end": "3840"
  },
  {
    "text": "afternoon officially now I think so",
    "start": "3840",
    "end": "5970"
  },
  {
    "text": "we're just afternoon good afternoon",
    "start": "5970",
    "end": "8790"
  },
  {
    "text": "please come on into the Kubo theater our",
    "start": "8790",
    "end": "10920"
  },
  {
    "text": "next speaker here is taking the stage",
    "start": "10920",
    "end": "12389"
  },
  {
    "text": "and Jay what are you gonna be talking",
    "start": "12389",
    "end": "14280"
  },
  {
    "text": "about today I'm gonna be talking about",
    "start": "14280",
    "end": "18630"
  },
  {
    "text": "Apache Kafka and migrating for the class",
    "start": "18630",
    "end": "21380"
  },
  {
    "text": "okay so why is that something that",
    "start": "21380",
    "end": "23580"
  },
  {
    "text": "everybody it would find useful well I",
    "start": "23580",
    "end": "27269"
  },
  {
    "text": "think people have a lot of on-premise",
    "start": "27269",
    "end": "29519"
  },
  {
    "text": "applications and here we are at AWS",
    "start": "29519",
    "end": "31380"
  },
  {
    "text": "reinvent and people are trying to figure",
    "start": "31380",
    "end": "32850"
  },
  {
    "text": "out how to get from here to there and do",
    "start": "32850",
    "end": "34620"
  },
  {
    "text": "it quickly and safely that sounds useful",
    "start": "34620",
    "end": "37559"
  },
  {
    "text": "to me come on in everybody join us",
    "start": "37559",
    "end": "39510"
  },
  {
    "text": "please we are getting ready to start our",
    "start": "39510",
    "end": "42149"
  },
  {
    "text": "next speaker here and this is confluent",
    "start": "42149",
    "end": "45239"
  },
  {
    "text": "all right so you're small but I need you",
    "start": "45239",
    "end": "47190"
  },
  {
    "text": "to be mighty can we can we scream like",
    "start": "47190",
    "end": "49739"
  },
  {
    "text": "rockstars anyone can you do it I see",
    "start": "49739",
    "end": "52739"
  },
  {
    "text": "some nodding heads yes you can all right",
    "start": "52739",
    "end": "54989"
  },
  {
    "text": "please give a big welcome to the stage",
    "start": "54989",
    "end": "56989"
  },
  {
    "text": "this is Jay Crips talking about Apache",
    "start": "56989",
    "end": "66450"
  },
  {
    "text": "kafka and migrating to the cloud so are",
    "start": "66450",
    "end": "69810"
  },
  {
    "text": "people familiar with Kafka like pretty",
    "start": "69810",
    "end": "71430"
  },
  {
    "text": "familiar yeah okay so this is a pattern",
    "start": "71430",
    "end": "74250"
  },
  {
    "text": "we've seen that's common among our",
    "start": "74250",
    "end": "76229"
  },
  {
    "text": "customers among users of Kafka you know",
    "start": "76229",
    "end": "79380"
  },
  {
    "text": "when people think about you know",
    "start": "79380",
    "end": "80880"
  },
  {
    "text": "migration to the cloud",
    "start": "80880",
    "end": "84048"
  },
  {
    "text": "let's try this again",
    "start": "91820",
    "end": "94479"
  },
  {
    "text": "when did people think about vibrations",
    "start": "94479",
    "end": "96310"
  },
  {
    "start": "95000",
    "end": "95000"
  },
  {
    "text": "of the cloud you kind of think about",
    "start": "96310",
    "end": "97780"
  },
  {
    "text": "like okay how do I get one application I",
    "start": "97780",
    "end": "99520"
  },
  {
    "text": "pick it up and move it but the problem",
    "start": "99520",
    "end": "101680"
  },
  {
    "text": "for a whole company is a lot more",
    "start": "101680",
    "end": "103360"
  },
  {
    "text": "complicated companies have a bunch of",
    "start": "103360",
    "end": "106240"
  },
  {
    "text": "applications they're often intertwined",
    "start": "106240",
    "end": "108420"
  },
  {
    "text": "they communicate in different ways they",
    "start": "108420",
    "end": "110979"
  },
  {
    "text": "depend on each other and they depend on",
    "start": "110979",
    "end": "112810"
  },
  {
    "text": "intricate data flows a lot of these are",
    "start": "112810",
    "end": "115450"
  },
  {
    "text": "built to run on legacy infrastructure so",
    "start": "115450",
    "end": "118000"
  },
  {
    "text": "you know still a large portion of the",
    "start": "118000",
    "end": "120549"
  },
  {
    "text": "economy runs on mainframes all right and",
    "start": "120549",
    "end": "122860"
  },
  {
    "text": "so how do you get the stuff on the",
    "start": "122860",
    "end": "124360"
  },
  {
    "text": "mainframe into the cloud well that's not",
    "start": "124360",
    "end": "125890"
  },
  {
    "text": "happening very quickly and beyond that",
    "start": "125890",
    "end": "128259"
  },
  {
    "text": "the goal isn't just to forklift what you",
    "start": "128259",
    "end": "130780"
  },
  {
    "text": "have and move it the goal is to actually",
    "start": "130780",
    "end": "133420"
  },
  {
    "text": "build for the cloud to be able to get",
    "start": "133420",
    "end": "135580"
  },
  {
    "text": "the agility that you get out of an",
    "start": "135580",
    "end": "136930"
  },
  {
    "text": "elastic environment to be able to use",
    "start": "136930",
    "end": "138730"
  },
  {
    "text": "the data services that are available",
    "start": "138730",
    "end": "140260"
  },
  {
    "text": "there so you don't just want to take",
    "start": "140260",
    "end": "142660"
  },
  {
    "text": "what you have and move it you want to",
    "start": "142660",
    "end": "143980"
  },
  {
    "text": "actually rebuild as kind of cloud native",
    "start": "143980",
    "end": "146560"
  },
  {
    "text": "applications so how do people do this",
    "start": "146560",
    "end": "148950"
  },
  {
    "text": "well you kind of end up with this mess",
    "start": "148950",
    "end": "151630"
  },
  {
    "text": "of interconnections you end up with",
    "start": "151630",
    "end": "153610"
  },
  {
    "text": "different systems talking to the cloud",
    "start": "153610",
    "end": "155200"
  },
  {
    "text": "environments in different ways you end",
    "start": "155200",
    "end": "157239"
  },
  {
    "text": "up with different data flows that",
    "start": "157239",
    "end": "158829"
  },
  {
    "text": "populate different databases or",
    "start": "158829",
    "end": "160510"
  },
  {
    "text": "different data systems you end up with",
    "start": "160510",
    "end": "162340"
  },
  {
    "text": "API calls across environments the",
    "start": "162340",
    "end": "164769"
  },
  {
    "text": "reality is it's pretty hard to actually",
    "start": "164769",
    "end": "166930"
  },
  {
    "text": "reason about this what data is where is",
    "start": "166930",
    "end": "169780"
  },
  {
    "text": "that data up-to-date in both of these",
    "start": "169780",
    "end": "171880"
  },
  {
    "text": "environments and how can I migrate which",
    "start": "171880",
    "end": "174250"
  },
  {
    "text": "piece of my stack and at what time what",
    "start": "174250",
    "end": "176620"
  },
  {
    "text": "are the dependencies and into the",
    "start": "176620",
    "end": "179100"
  },
  {
    "text": "architecture we've seen emerging that",
    "start": "179100",
    "end": "182079"
  },
  {
    "text": "starts to solve a lot of these problems",
    "start": "182079",
    "end": "184120"
  },
  {
    "text": "and allow you to do a more graceful",
    "start": "184120",
    "end": "186100"
  },
  {
    "text": "piece-by-piece migration is one that is",
    "start": "186100",
    "end": "189730"
  },
  {
    "text": "centered around Kafka and so you know",
    "start": "189730",
    "end": "192280"
  },
  {
    "text": "rather than having a zillion",
    "start": "192280",
    "end": "194470"
  },
  {
    "text": "point-to-point connections people are",
    "start": "194470",
    "end": "196870"
  },
  {
    "text": "using central kafka clusters they're",
    "start": "196870",
    "end": "199060"
  },
  {
    "text": "publishing streams of data from their",
    "start": "199060",
    "end": "201430"
  },
  {
    "text": "local on-premise environment they're",
    "start": "201430",
    "end": "203440"
  },
  {
    "text": "replicating that to the different cloud",
    "start": "203440",
    "end": "205209"
  },
  {
    "text": "environments they're loading those into",
    "start": "205209",
    "end": "207579"
  },
  {
    "text": "data systems they're triggering",
    "start": "207579",
    "end": "209079"
  },
  {
    "text": "applications off of it and the reverse",
    "start": "209079",
    "end": "211209"
  },
  {
    "text": "flow works as well and so this allows",
    "start": "211209",
    "end": "213010"
  },
  {
    "text": "them both to share data from databases",
    "start": "213010",
    "end": "215380"
  },
  {
    "text": "as well as trigger application service",
    "start": "215380",
    "end": "218829"
  },
  {
    "text": "calls off of events",
    "start": "218829",
    "end": "220069"
  },
  {
    "text": "and and this has a number of advantages",
    "start": "220069",
    "end": "222849"
  },
  {
    "text": "you know first of all it's real time you",
    "start": "222849",
    "end": "225110"
  },
  {
    "start": "223000",
    "end": "223000"
  },
  {
    "text": "know what you publish to Kafka in one",
    "start": "225110",
    "end": "226670"
  },
  {
    "text": "environment can show up in all of your",
    "start": "226670",
    "end": "228590"
  },
  {
    "text": "other environments you know near",
    "start": "228590",
    "end": "230540"
  },
  {
    "text": "instantaneously it's secure so it gives",
    "start": "230540",
    "end": "233420"
  },
  {
    "text": "you a central point to reason about what",
    "start": "233420",
    "end": "235909"
  },
  {
    "text": "data is going where and how are you",
    "start": "235909",
    "end": "238159"
  },
  {
    "text": "securing the communication mechanism",
    "start": "238159",
    "end": "240019"
  },
  {
    "text": "rather than doing this for every system",
    "start": "240019",
    "end": "241489"
  },
  {
    "text": "and every application you can secure the",
    "start": "241489",
    "end": "243739"
  },
  {
    "text": "central pipe it's reliable so even if",
    "start": "243739",
    "end": "247099"
  },
  {
    "text": "you lose connectivity between",
    "start": "247099",
    "end": "249409"
  },
  {
    "text": "environments by publishing to Kafka",
    "start": "249409",
    "end": "251090"
  },
  {
    "text": "that's persisted in the local",
    "start": "251090",
    "end": "252500"
  },
  {
    "text": "environment and it will replicate over",
    "start": "252500",
    "end": "254510"
  },
  {
    "text": "when network connectivity comes back it",
    "start": "254510",
    "end": "256850"
  },
  {
    "text": "will do that in order and it's scalable",
    "start": "256850",
    "end": "260120"
  },
  {
    "text": "it will allow you to do this at company",
    "start": "260120",
    "end": "262310"
  },
  {
    "text": "scale you can have hundreds or even",
    "start": "262310",
    "end": "264080"
  },
  {
    "text": "thousands of applications and systems",
    "start": "264080",
    "end": "265789"
  },
  {
    "text": "that publish to the central clusters and",
    "start": "265789",
    "end": "267889"
  },
  {
    "text": "you can you know actually take that full",
    "start": "267889",
    "end": "270320"
  },
  {
    "text": "feet across and there's companies",
    "start": "270320",
    "end": "271610"
  },
  {
    "text": "running Kafka at very large scale with",
    "start": "271610",
    "end": "274220"
  },
  {
    "text": "over trillions of events per day that",
    "start": "274220",
    "end": "276199"
  },
  {
    "text": "flow through it and Kafka itself is",
    "start": "276199",
    "end": "279470"
  },
  {
    "text": "actually widely used not only for this",
    "start": "279470",
    "end": "281780"
  },
  {
    "text": "use case but but dozens of other use",
    "start": "281780",
    "end": "284630"
  },
  {
    "text": "cases we know that it's in production at",
    "start": "284630",
    "end": "286940"
  },
  {
    "text": "over a third of the fortune 500",
    "start": "286940",
    "end": "288580"
  },
  {
    "text": "including some of the largest travel",
    "start": "288580",
    "end": "290949"
  },
  {
    "text": "banking insurance and telecom companies",
    "start": "290949",
    "end": "293539"
  },
  {
    "text": "in the world so how does this work in",
    "start": "293539",
    "end": "296060"
  },
  {
    "start": "295000",
    "end": "295000"
  },
  {
    "text": "practice",
    "start": "296060",
    "end": "296539"
  },
  {
    "text": "I'll walk through an example here we",
    "start": "296539",
    "end": "298760"
  },
  {
    "text": "have an Oracle database maybe there's",
    "start": "298760",
    "end": "301039"
  },
  {
    "text": "some ETL into Tara data and we have one",
    "start": "301039",
    "end": "303440"
  },
  {
    "text": "application so I'll show how this would",
    "start": "303440",
    "end": "305210"
  },
  {
    "text": "work for one application and then I'll",
    "start": "305210",
    "end": "306530"
  },
  {
    "text": "show how it would work for many so for",
    "start": "306530",
    "end": "309110"
  },
  {
    "text": "one application our goal is we want to",
    "start": "309110",
    "end": "311210"
  },
  {
    "text": "be able to move this application into",
    "start": "311210",
    "end": "312710"
  },
  {
    "text": "the cloud environment and we want to be",
    "start": "312710",
    "end": "314449"
  },
  {
    "text": "able to do it without breaking the flow",
    "start": "314449",
    "end": "316340"
  },
  {
    "text": "into our analytic system Tara data",
    "start": "316340",
    "end": "319389"
  },
  {
    "text": "because that's not migrating quite yet",
    "start": "319389",
    "end": "321770"
  },
  {
    "text": "yeah we don't have a cherry data in the",
    "start": "321770",
    "end": "323210"
  },
  {
    "text": "cloud quite yet that still remains an",
    "start": "323210",
    "end": "324830"
  },
  {
    "text": "on-premise system and so the steps are",
    "start": "324830",
    "end": "327110"
  },
  {
    "text": "first we set up this pipeline then we",
    "start": "327110",
    "end": "330500"
  },
  {
    "text": "actually start to capture the changes",
    "start": "330500",
    "end": "332330"
  },
  {
    "text": "from the databases where it's",
    "start": "332330",
    "end": "333500"
  },
  {
    "text": "off-the-shelf connectors for Kafka that",
    "start": "333500",
    "end": "335389"
  },
  {
    "text": "allow you to do that without having to",
    "start": "335389",
    "end": "336949"
  },
  {
    "text": "go change the application necessarily",
    "start": "336949",
    "end": "338810"
  },
  {
    "text": "and we we make that data available in",
    "start": "338810",
    "end": "341449"
  },
  {
    "text": "AWS and this allows us to actually",
    "start": "341449",
    "end": "343849"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "migrate the application when we've done",
    "start": "343849",
    "end": "345770"
  },
  {
    "text": "that we could shut down the legacy",
    "start": "345770",
    "end": "347270"
  },
  {
    "text": "version but we can still populate that",
    "start": "347270",
    "end": "349070"
  },
  {
    "text": "reverse data flow for our",
    "start": "349070",
    "end": "350639"
  },
  {
    "text": "purposes and this works not just for one",
    "start": "350639",
    "end": "354030"
  },
  {
    "text": "application but it works for a whole",
    "start": "354030",
    "end": "356370"
  },
  {
    "text": "environment of these and the reason this",
    "start": "356370",
    "end": "357900"
  },
  {
    "text": "is so complicated is because we don't",
    "start": "357900",
    "end": "360270"
  },
  {
    "text": "just have two environments we often have",
    "start": "360270",
    "end": "362310"
  },
  {
    "text": "many we have multiple data centers we",
    "start": "362310",
    "end": "363960"
  },
  {
    "text": "have multi data center data flows and we",
    "start": "363960",
    "end": "366509"
  },
  {
    "text": "have multiple regions at AWS so being",
    "start": "366509",
    "end": "368340"
  },
  {
    "text": "able to simplify this onto a central bus",
    "start": "368340",
    "end": "370949"
  },
  {
    "text": "that actually has a stream of what's",
    "start": "370949",
    "end": "372870"
  },
  {
    "text": "happening dramatically simplifies the",
    "start": "372870",
    "end": "375029"
  },
  {
    "text": "data flows between these environments so",
    "start": "375029",
    "end": "377129"
  },
  {
    "text": "that each builder of an application can",
    "start": "377129",
    "end": "379499"
  },
  {
    "text": "publish their data locally and not have",
    "start": "379499",
    "end": "381689"
  },
  {
    "text": "to reason about the larger data flow of",
    "start": "381689",
    "end": "384210"
  },
  {
    "text": "the company not have to reason about the",
    "start": "384210",
    "end": "386189"
  },
  {
    "text": "different geographical regions not have",
    "start": "386189",
    "end": "388529"
  },
  {
    "text": "to reason about who consumes these",
    "start": "388529",
    "end": "391229"
  },
  {
    "text": "streams of data not have to you know",
    "start": "391229",
    "end": "393539"
  },
  {
    "text": "worry about failure modes where one of",
    "start": "393539",
    "end": "395430"
  },
  {
    "text": "the cloud environments is not available",
    "start": "395430",
    "end": "397110"
  },
  {
    "text": "from the local environment or vice versa",
    "start": "397110",
    "end": "398460"
  },
  {
    "text": "and the advantage of this is not just",
    "start": "398460",
    "end": "402750"
  },
  {
    "text": "how you're migrating applications to the",
    "start": "402750",
    "end": "405060"
  },
  {
    "text": "cloud but this is actually an",
    "start": "405060",
    "end": "407009"
  },
  {
    "start": "407000",
    "end": "407000"
  },
  {
    "text": "architecture which is incredibly",
    "start": "407009",
    "end": "408810"
  },
  {
    "text": "prevalent even among companies born",
    "start": "408810",
    "end": "411029"
  },
  {
    "text": "native in the cloud and so companies are",
    "start": "411029",
    "end": "413430"
  },
  {
    "text": "building around Kafka as the basis for",
    "start": "413430",
    "end": "416009"
  },
  {
    "text": "micro services as the basis for",
    "start": "416009",
    "end": "418199"
  },
  {
    "text": "real-time data flows as a basis for",
    "start": "418199",
    "end": "420599"
  },
  {
    "text": "sophisticated stream processing as a",
    "start": "420599",
    "end": "423389"
  },
  {
    "text": "basis for machine learning applications",
    "start": "423389",
    "end": "425370"
  },
  {
    "text": "that are responding to events in the",
    "start": "425370",
    "end": "427110"
  },
  {
    "text": "business and so the sense this is the",
    "start": "427110",
    "end": "429089"
  },
  {
    "text": "architecture you want to have when you",
    "start": "429089",
    "end": "431310"
  },
  {
    "text": "get there and confluent the the company",
    "start": "431310",
    "end": "436229"
  },
  {
    "text": "on the CEO of offers Kafka as a service",
    "start": "436229",
    "end": "439860"
  },
  {
    "text": "in AWS so you can run Kafka yourself and",
    "start": "439860",
    "end": "443610"
  },
  {
    "text": "we'll help you with that or you can get",
    "start": "443610",
    "end": "445830"
  },
  {
    "text": "it as a fully managed service where we",
    "start": "445830",
    "end": "447389"
  },
  {
    "text": "take care of all the operations all the",
    "start": "447389",
    "end": "449219"
  },
  {
    "text": "upgrades and you pay based on your usage",
    "start": "449219",
    "end": "450889"
  },
  {
    "text": "and this is generally available now we",
    "start": "450889",
    "end": "454409"
  },
  {
    "text": "guarantee that SLA and we're obviously",
    "start": "454409",
    "end": "456419"
  },
  {
    "text": "experts in this as Kafka as the",
    "start": "456419",
    "end": "458849"
  },
  {
    "text": "technology we've created and for your",
    "start": "458849",
    "end": "461399"
  },
  {
    "text": "on-premise environments we also offer a",
    "start": "461399",
    "end": "465229"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "we also offer a software offering which",
    "start": "465229",
    "end": "468210"
  },
  {
    "text": "helps you run manage monitor this run",
    "start": "468210",
    "end": "471210"
  },
  {
    "text": "the multi data center portion of it and",
    "start": "471210",
    "end": "473039"
  },
  {
    "text": "actually instrument these data flows and",
    "start": "473039",
    "end": "475259"
  },
  {
    "text": "prove that all your data has gotten from",
    "start": "475259",
    "end": "477029"
  },
  {
    "text": "point A to point B so you can actually",
    "start": "477029",
    "end": "478919"
  },
  {
    "text": "reason about the question is my cloud",
    "start": "478919",
    "end": "481229"
  },
  {
    "text": "environment caught up to date with my",
    "start": "481229",
    "end": "482969"
  },
  {
    "text": "own premise",
    "start": "482969",
    "end": "483480"
  },
  {
    "text": "environment and vice-versa how far is it",
    "start": "483480",
    "end": "485490"
  },
  {
    "text": "lagging behind can I prove the integrity",
    "start": "485490",
    "end": "487740"
  },
  {
    "text": "of all the data that's supposed to be",
    "start": "487740",
    "end": "488880"
  },
  {
    "text": "there and so that's it if you're",
    "start": "488880",
    "end": "491580"
  },
  {
    "text": "interested in this topic we've done more",
    "start": "491580",
    "end": "494760"
  },
  {
    "text": "in depth webinar with Monsanto which is",
    "start": "494760",
    "end": "497850"
  },
  {
    "text": "a company that is doing this actually a",
    "start": "497850",
    "end": "499830"
  },
  {
    "text": "very large scale is part of their cloud",
    "start": "499830",
    "end": "502170"
  },
  {
    "text": "migration strategy across different",
    "start": "502170",
    "end": "503970"
  },
  {
    "text": "cloud providers and their on premise",
    "start": "503970",
    "end": "505620"
  },
  {
    "text": "facilities we also have a booth over",
    "start": "505620",
    "end": "508320"
  },
  {
    "text": "there that you go check out we'd be",
    "start": "508320",
    "end": "509490"
  },
  {
    "text": "happy to talk to you either about the",
    "start": "509490",
    "end": "510780"
  },
  {
    "text": "cloud service our software offering a",
    "start": "510780",
    "end": "513260"
  },
  {
    "text": "confluent or this general pattern of",
    "start": "513260",
    "end": "516240"
  },
  {
    "text": "tile migration I'm happy to chat now for",
    "start": "516240",
    "end": "519030"
  },
  {
    "text": "anyone who's interested thank you so",
    "start": "519030",
    "end": "520680"
  },
  {
    "text": "much thank you Jay",
    "start": "520680",
    "end": "524120"
  }
]