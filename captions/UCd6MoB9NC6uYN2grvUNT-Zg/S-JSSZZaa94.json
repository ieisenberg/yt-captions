[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "Welcome to \"This is My Architecture.\"",
    "start": "7436",
    "end": "9165"
  },
  {
    "text": "I'm Matt from AWS.",
    "start": "9165",
    "end": "11075"
  },
  {
    "text": "Today, I'm joined by Sangho Lee\nfrom Samsung.",
    "start": "11075",
    "end": "13410"
  },
  {
    "text": "- Thanks for joining.\n- Thank you for having me.",
    "start": "13411",
    "end": "15391"
  },
  {
    "text": "So we're going to talk about\nSamsung Health.",
    "start": "15391",
    "end": "17012"
  },
  {
    "text": "What is Samsung Health?",
    "start": "17012",
    "end": "18071"
  },
  {
    "text": "Samsung Health was released in 2015.",
    "start": "18072",
    "end": "21507"
  },
  {
    "text": "Our mission is to help people\nbe healthier",
    "start": "21507",
    "end": "24730"
  },
  {
    "text": "and get more exercise.",
    "start": "24731",
    "end": "26589"
  },
  {
    "text": "We have about 35,000 requests per second\nfrom all over the world.",
    "start": "26589",
    "end": "31371"
  },
  {
    "text": "Great. So this is a mobile app?",
    "start": "31371",
    "end": "32888"
  },
  {
    "start": "32000",
    "end": "54000"
  },
  {
    "text": "A mobile application.",
    "start": "32888",
    "end": "34686"
  },
  {
    "text": "And we've used various AWS products",
    "start": "34686",
    "end": "37336"
  },
  {
    "text": "such as DynamoDB, ElastiCache, SQS",
    "start": "37336",
    "end": "41281"
  },
  {
    "text": "and so on to handle the traffic.",
    "start": "41281",
    "end": "43238"
  },
  {
    "text": "Great. Yeah, 35,000 requests per second.",
    "start": "43238",
    "end": "45482"
  },
  {
    "text": "You need an architecture that scales,\nright?",
    "start": "45482",
    "end": "47385"
  },
  {
    "text": "Yeah, exactly.",
    "start": "47386",
    "end": "48733"
  },
  {
    "text": "So what happens?",
    "start": "48733",
    "end": "49845"
  },
  {
    "text": "I assume traffic from the mobile app",
    "start": "49845",
    "end": "51898"
  },
  {
    "text": "comes into API Gateway first,\nis that right?",
    "start": "51898",
    "end": "53987"
  },
  {
    "text": "Sure.",
    "start": "53987",
    "end": "55138"
  },
  {
    "start": "54000",
    "end": "72000"
  },
  {
    "text": "We have API Gateway at the forefront",
    "start": "55138",
    "end": "57654"
  },
  {
    "text": "and the traffic is delivered\nby a VPC link",
    "start": "57654",
    "end": "61000"
  },
  {
    "text": "to securely connect API Gateway\nand internal processes.",
    "start": "61000",
    "end": "65622"
  },
  {
    "text": "Okay, so because you're using VPC link,",
    "start": "65622",
    "end": "67617"
  },
  {
    "text": "you have to use NLB,",
    "start": "67617",
    "end": "69093"
  },
  {
    "text": "and then\nyou're going to route your traffic",
    "start": "69094",
    "end": "70313"
  },
  {
    "text": "from NLB to the application.",
    "start": "70313",
    "end": "72228"
  },
  {
    "start": "72000",
    "end": "133000"
  },
  {
    "text": "It looks like you're using containers",
    "start": "72228",
    "end": "73777"
  },
  {
    "text": "or Kubernetes specifically,\nis that right?",
    "start": "73777",
    "end": "75309"
  },
  {
    "text": "Yeah, exactly.",
    "start": "75309",
    "end": "76376"
  },
  {
    "text": "So why did you choose\nto go with the containers?",
    "start": "76376",
    "end": "79209"
  },
  {
    "text": "We improved the way\nwe operate our cloud.",
    "start": "79209",
    "end": "83292"
  },
  {
    "text": "In the past,\nwe used to operate our cloud",
    "start": "83292",
    "end": "86372"
  },
  {
    "text": "in the traditional way.",
    "start": "86372",
    "end": "87515"
  },
  {
    "text": "Okay.",
    "start": "87515",
    "end": "88564"
  },
  {
    "text": "It's like we configure\nthe runtime environment",
    "start": "88564",
    "end": "91273"
  },
  {
    "text": "on each machine",
    "start": "91273",
    "end": "92912"
  },
  {
    "text": "and build some RPM files\ncontaining application binary files.",
    "start": "92912",
    "end": "97334"
  },
  {
    "text": "And then deploy them into cluster.",
    "start": "97334",
    "end": "100063"
  },
  {
    "text": "However, as the service\nwas getting more complex,",
    "start": "100063",
    "end": "103308"
  },
  {
    "text": "and various new features\nwere being added,",
    "start": "103308",
    "end": "106178"
  },
  {
    "text": "we realized it would be difficult\nto operate them efficiently",
    "start": "106178",
    "end": "110434"
  },
  {
    "text": "using the traditional way.",
    "start": "110434",
    "end": "112187"
  },
  {
    "text": "So we decided to apply Kubernetes\nfor this project.",
    "start": "112188",
    "end": "115143"
  },
  {
    "text": "Got it.",
    "start": "115143",
    "end": "116214"
  },
  {
    "text": "So you're using EC2 Linux\nwith application binaries as RPMs",
    "start": "116214",
    "end": "119692"
  },
  {
    "text": "and as you got more popular\nstarting to deploy more faster,",
    "start": "119693",
    "end": "123285"
  },
  {
    "text": "it allowed you to really unlock\nyour developers",
    "start": "123285",
    "end": "125688"
  },
  {
    "text": "by using Kubernetes.",
    "start": "125688",
    "end": "126774"
  },
  {
    "text": "- Yeah, right.\n- Now you're using EKS specifically.",
    "start": "126774",
    "end": "129291"
  },
  {
    "text": "So why did you use EKS\nand not for example Kubernetes on EC2?",
    "start": "129291",
    "end": "133500"
  },
  {
    "text": "There are many ways about that.",
    "start": "133500",
    "end": "136141"
  },
  {
    "text": "First, we don't have to set up\nKubernetes control plane ourselves",
    "start": "136141",
    "end": "140147"
  },
  {
    "text": "because AWS manages it.",
    "start": "140147",
    "end": "141886"
  },
  {
    "text": "Yeah.",
    "start": "141886",
    "end": "142929"
  },
  {
    "text": "And in addition, EKS runs\nKubernetes control plane instances",
    "start": "142929",
    "end": "147113"
  },
  {
    "text": "across multiple AZs\nto ensure high availability.",
    "start": "147113",
    "end": "150713"
  },
  {
    "text": "And also EKS automatically detects",
    "start": "150713",
    "end": "153586"
  },
  {
    "text": "and  replaces\non healthy control plane instances.",
    "start": "153586",
    "end": "156715"
  },
  {
    "text": "So we can focus on our developing logic.",
    "start": "156715",
    "end": "159377"
  },
  {
    "text": "Great.",
    "start": "159377",
    "end": "160453"
  },
  {
    "text": "Okay, so undifferentiated heavy lifting\nis the managed services",
    "start": "160453",
    "end": "163902"
  },
  {
    "text": "that EKS provides make it easier\nfor you and your developers.",
    "start": "163902",
    "end": "166243"
  },
  {
    "text": "- Yeah, right.\n- All right.",
    "start": "166243",
    "end": "167299"
  },
  {
    "text": "So getting back to the architecture,",
    "start": "167299",
    "end": "168946"
  },
  {
    "text": "we have the request coming in\nthrough VPC link into NLB.",
    "start": "168947",
    "end": "173150"
  },
  {
    "text": "And then NLB has to route the request",
    "start": "173150",
    "end": "174926"
  },
  {
    "text": "to the...it looks like\nyou have multiple clusters.",
    "start": "174927",
    "end": "176639"
  },
  {
    "text": "What happens here?",
    "start": "176639",
    "end": "178026"
  },
  {
    "text": "Yeah, we route the traffic\nby port forwarding from NLB side.",
    "start": "178026",
    "end": "182087"
  },
  {
    "text": "So we needed a way\nto connect multiple ports to EKS node.",
    "start": "182087",
    "end": "187344"
  },
  {
    "start": "190000",
    "end": "232000"
  },
  {
    "text": "So you have multiple services running\nin the clusters on different ports,",
    "start": "190094",
    "end": "193097"
  },
  {
    "text": "and you're using NLB port forwarding.",
    "start": "193097",
    "end": "194548"
  },
  {
    "text": "Yeah.",
    "start": "194548",
    "end": "195597"
  },
  {
    "text": "But then how does it work\non the EKS side?",
    "start": "195597",
    "end": "197901"
  },
  {
    "text": "Yeah first, we consider the load balancer",
    "start": "197901",
    "end": "202405"
  },
  {
    "text": "which is created automatically\nby Kubernetes...",
    "start": "202405",
    "end": "205093"
  },
  {
    "text": "The Load Balancer service type?",
    "start": "205093",
    "end": "206330"
  },
  {
    "text": "Yeah, but we were unable to take\nany advantage of that.",
    "start": "206330",
    "end": "210686"
  },
  {
    "text": "This is because it can connect\nonly one port.",
    "start": "210686",
    "end": "213949"
  },
  {
    "text": "However, in our architecture,",
    "start": "213949",
    "end": "215854"
  },
  {
    "text": "we needed a way\nto connect multiple ports",
    "start": "215854",
    "end": "218237"
  },
  {
    "text": "with just one NLB.",
    "start": "218237",
    "end": "219721"
  },
  {
    "text": "Got it.",
    "start": "219721",
    "end": "220797"
  },
  {
    "text": "So you had multiple services,\nmultiple ports",
    "start": "220797",
    "end": "222436"
  },
  {
    "text": "so load balancer node type didn't work.",
    "start": "222436",
    "end": "224430"
  },
  {
    "text": "So what did you use instead?",
    "start": "224430",
    "end": "226090"
  },
  {
    "text": "So we figured that the best way for us",
    "start": "226090",
    "end": "228802"
  },
  {
    "text": "using NodePort\non other Kubernetes service type...",
    "start": "228802",
    "end": "231325"
  },
  {
    "text": "- Ah, NodePort. Okay.\n- Yeah.",
    "start": "231325",
    "end": "233038"
  },
  {
    "text": "So this is how we do it.",
    "start": "233038",
    "end": "235077"
  },
  {
    "text": "We define the NodePort\ninside of Kubernetes cluster...",
    "start": "235077",
    "end": "239724"
  },
  {
    "text": "Yeah.",
    "start": "239725",
    "end": "240785"
  },
  {
    "text": "And then map the port\nto the network load balancer",
    "start": "240785",
    "end": "243696"
  },
  {
    "text": "using target group.",
    "start": "243696",
    "end": "244796"
  },
  {
    "text": "Okay.",
    "start": "244796",
    "end": "245852"
  },
  {
    "text": "And we also create\ndifferent NodePort definition",
    "start": "245852",
    "end": "249195"
  },
  {
    "text": "for each application.",
    "start": "249195",
    "end": "251380"
  },
  {
    "text": "So we expose the port\nto the outside using NodePort,",
    "start": "251380",
    "end": "255158"
  },
  {
    "text": "and then deliver users request\nto the NodePort",
    "start": "255158",
    "end": "258635"
  },
  {
    "text": "through the target group from NLB.",
    "start": "258636",
    "end": "260708"
  },
  {
    "text": "Okay.",
    "start": "260709",
    "end": "261764"
  },
  {
    "text": "So in this way, we were able\nto implement Kubernetes architecture",
    "start": "261764",
    "end": "266017"
  },
  {
    "text": "that can handle multiple port forwarding",
    "start": "266017",
    "end": "268499"
  },
  {
    "text": "with just one network load balancer.",
    "start": "268499",
    "end": "270397"
  },
  {
    "text": "Interesting.",
    "start": "270398",
    "end": "271467"
  },
  {
    "text": "I think a lot of viewers are\ngoing to find that interesting.",
    "start": "271467",
    "end": "272848"
  },
  {
    "text": "You have multiple services\nbut also multiple clusters.",
    "start": "272848",
    "end": "275522"
  },
  {
    "text": "How many clusters?\nHow many applications do you have?",
    "start": "275522",
    "end": "277673"
  },
  {
    "text": "Actually, we have 15 applications\non this cluster.",
    "start": "277673",
    "end": "281221"
  },
  {
    "text": "Wow! Okay.",
    "start": "281221",
    "end": "282280"
  },
  {
    "text": "So 15 applications\nand within each application,",
    "start": "282280",
    "end": "283820"
  },
  {
    "text": "multiple services, multiple ports,",
    "start": "283821",
    "end": "285835"
  },
  {
    "text": "using the port forwarding",
    "start": "285835",
    "end": "287240"
  },
  {
    "text": "and the combination\nwith a NodePort service type.",
    "start": "287240",
    "end": "289367"
  },
  {
    "start": "289000",
    "end": "332000"
  },
  {
    "text": "That's really interesting.",
    "start": "289367",
    "end": "290622"
  },
  {
    "text": "So there's a lot going on here,\nyou know, in the scale.",
    "start": "290622",
    "end": "293031"
  },
  {
    "text": "So there's a lot to monitor\nand a lot of logs.",
    "start": "293031",
    "end": "295261"
  },
  {
    "text": "How are you handling monitoring?",
    "start": "295261",
    "end": "297354"
  },
  {
    "text": "Metrics for infrastructure",
    "start": "297355",
    "end": "299501"
  },
  {
    "text": "as cloud usage and DynamoDB usage",
    "start": "299501",
    "end": "302775"
  },
  {
    "text": "are collected by AWS CloudWatch.",
    "start": "302775",
    "end": "304992"
  },
  {
    "text": "Okay.",
    "start": "304992",
    "end": "306064"
  },
  {
    "text": "And metrics for application",
    "start": "306064",
    "end": "307702"
  },
  {
    "text": "such as CPU usage of Kubernetes port,",
    "start": "307702",
    "end": "311302"
  },
  {
    "text": "and network throughput\nare collected by Prometheus.",
    "start": "311302",
    "end": "314795"
  },
  {
    "text": "And we integrate those",
    "start": "314795",
    "end": "316377"
  },
  {
    "text": "two kinds of metrics\ninto Grafana Dashboards.",
    "start": "316377",
    "end": "319210"
  },
  {
    "text": "Interesting.",
    "start": "319210",
    "end": "320280"
  },
  {
    "text": "So you're using Prometheus\nfor the application level monitoring,",
    "start": "320280",
    "end": "322695"
  },
  {
    "text": "and then you're using",
    "start": "322695",
    "end": "323824"
  },
  {
    "text": "CloudWatch for the\ninfrastructure monitoring,",
    "start": "323824",
    "end": "325357"
  },
  {
    "text": "and then visualizing it all\nwith Grafana.",
    "start": "325357",
    "end": "326901"
  },
  {
    "text": "Yeah, exactly.",
    "start": "326901",
    "end": "327957"
  },
  {
    "text": "Okay. And so that's monitoring.",
    "start": "327957",
    "end": "329880"
  },
  {
    "text": "There's also a lot of logs,",
    "start": "329880",
    "end": "330932"
  },
  {
    "text": "especially at this kind of scale.",
    "start": "330932",
    "end": "332151"
  },
  {
    "start": "332000",
    "end": "406000"
  },
  {
    "text": "- How do you handle logs?\n- You're right.",
    "start": "332151",
    "end": "333759"
  },
  {
    "text": "We use a Fluentd and Elasticsearch",
    "start": "333759",
    "end": "337658"
  },
  {
    "text": "and AWS CloudWatch logs.",
    "start": "337658",
    "end": "339645"
  },
  {
    "text": "We first installed Fluentd agent",
    "start": "339645",
    "end": "342214"
  },
  {
    "text": "as DaemonSet on the cluster node,",
    "start": "342214",
    "end": "344671"
  },
  {
    "text": "and then Fluentd agent",
    "start": "344671",
    "end": "346143"
  },
  {
    "text": "then log to AWS CloudWatch logs,",
    "start": "346144",
    "end": "349132"
  },
  {
    "text": "and then AWS CloudWatch store logs\ninto Elasticsearch.",
    "start": "349132",
    "end": "353448"
  },
  {
    "text": "Okay, so you have DaemonSet",
    "start": "353448",
    "end": "355440"
  },
  {
    "text": "and use Fluentd for logs,",
    "start": "355440",
    "end": "356825"
  },
  {
    "text": "the logs then go into CloudWatch,",
    "start": "356825",
    "end": "358513"
  },
  {
    "text": "and you load them\ninto Elasticsearch cluster.",
    "start": "358513",
    "end": "360604"
  },
  {
    "text": "And do you use Kibana or something?",
    "start": "360604",
    "end": "362601"
  },
  {
    "text": "Yeah, we, finally we can monitor\nthe logs through Kibana.",
    "start": "362601",
    "end": "366216"
  },
  {
    "text": "Okay.",
    "start": "366216",
    "end": "367458"
  },
  {
    "text": "And the last thing I see X-Ray up here,\nwhat are you using X-Ray for?",
    "start": "367458",
    "end": "369890"
  },
  {
    "text": "Yeah, since our architecture\nis based on MSA,",
    "start": "369890",
    "end": "374111"
  },
  {
    "text": "we also use AWS X-Ray",
    "start": "374111",
    "end": "376539"
  },
  {
    "text": "for application performance management.",
    "start": "376540",
    "end": "379109"
  },
  {
    "text": "Interesting.",
    "start": "379109",
    "end": "380170"
  },
  {
    "text": "So you know what, originally,\nI thought that the network part",
    "start": "380170",
    "end": "382117"
  },
  {
    "text": "was the most interesting part\nof this architecture.",
    "start": "382117",
    "end": "383684"
  },
  {
    "text": "But actually, the way you use\nmultiple tools for monitoring",
    "start": "383684",
    "end": "386496"
  },
  {
    "text": "and logging and application traces\nis equally interesting.",
    "start": "386496",
    "end": "389518"
  },
  {
    "text": "It's another very interesting part\nabout how you're using Kubernetes.",
    "start": "389518",
    "end": "392019"
  },
  {
    "text": "Yeah.",
    "start": "392019",
    "end": "393081"
  },
  {
    "text": "It's a really interesting architecture,",
    "start": "393081",
    "end": "394126"
  },
  {
    "text": "and I really appreciate you\nsharing it with us today.",
    "start": "394127",
    "end": "395873"
  },
  {
    "text": "Thank you.",
    "start": "395873",
    "end": "397025"
  },
  {
    "text": "And thanks for watching\n\"This is My Architecture.\"",
    "start": "397025",
    "end": "399418"
  }
]