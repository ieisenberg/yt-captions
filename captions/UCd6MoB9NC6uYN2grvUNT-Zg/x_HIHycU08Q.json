[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11689"
  },
  {
    "text": "hello my name is karthik and i'm a",
    "start": "11920",
    "end": "13920"
  },
  {
    "text": "senior technical account manager here at",
    "start": "13920",
    "end": "15839"
  },
  {
    "text": "the aws office in northern virginia",
    "start": "15839",
    "end": "18240"
  },
  {
    "text": "today i'm going to demonstrate how you",
    "start": "18240",
    "end": "20240"
  },
  {
    "text": "can configure ecs service order scaling",
    "start": "20240",
    "end": "22560"
  },
  {
    "text": "on aws forget now let's get started",
    "start": "22560",
    "end": "26080"
  },
  {
    "start": "26000",
    "end": "120000"
  },
  {
    "text": "automatic scaling of forget tasks works",
    "start": "26080",
    "end": "28080"
  },
  {
    "text": "by integrating amazon ecs for gate with",
    "start": "28080",
    "end": "30800"
  },
  {
    "text": "amazon cloud watch alarms and",
    "start": "30800",
    "end": "32398"
  },
  {
    "text": "application auto scaling first login to",
    "start": "32399",
    "end": "34719"
  },
  {
    "text": "the aws management console and navigate",
    "start": "34719",
    "end": "37120"
  },
  {
    "text": "to the ecs console",
    "start": "37120",
    "end": "40399"
  },
  {
    "text": "for this video i have deployed a demo",
    "start": "42800",
    "end": "44800"
  },
  {
    "text": "app on amazon ecs fargate with tasks",
    "start": "44800",
    "end": "47039"
  },
  {
    "text": "running behind the load balancer in a",
    "start": "47039",
    "end": "48879"
  },
  {
    "text": "target group we'll configure auto",
    "start": "48879",
    "end": "50879"
  },
  {
    "text": "scaling by updating the existing service",
    "start": "50879",
    "end": "52960"
  },
  {
    "text": "that was already created",
    "start": "52960",
    "end": "55039"
  },
  {
    "text": "in the navigation pane select the ecs",
    "start": "55039",
    "end": "57039"
  },
  {
    "text": "cluster and then navigate to the ecs",
    "start": "57039",
    "end": "59280"
  },
  {
    "text": "service",
    "start": "59280",
    "end": "61680"
  },
  {
    "text": "under the ecs service choose the update",
    "start": "62640",
    "end": "64640"
  },
  {
    "text": "button on top right corner and choose",
    "start": "64640",
    "end": "66720"
  },
  {
    "text": "next step until you see the auto scaling",
    "start": "66720",
    "end": "68799"
  },
  {
    "text": "configuration",
    "start": "68799",
    "end": "71799"
  },
  {
    "text": "choose configure order scaling to adjust",
    "start": "74400",
    "end": "76240"
  },
  {
    "text": "your services desired count",
    "start": "76240",
    "end": "79280"
  },
  {
    "text": "a drop down list appears with",
    "start": "79280",
    "end": "80799"
  },
  {
    "text": "configurations to be adjusted for the",
    "start": "80799",
    "end": "82720"
  },
  {
    "text": "order scaling for minimum number of",
    "start": "82720",
    "end": "84720"
  },
  {
    "text": "tasks enter the lowest number of tasks",
    "start": "84720",
    "end": "86560"
  },
  {
    "text": "that you want service auto scaling to",
    "start": "86560",
    "end": "88159"
  },
  {
    "text": "use",
    "start": "88159",
    "end": "89200"
  },
  {
    "text": "for desired number of tasks enter the",
    "start": "89200",
    "end": "91200"
  },
  {
    "text": "number of tasks that you want service",
    "start": "91200",
    "end": "93040"
  },
  {
    "text": "auto scaling to use",
    "start": "93040",
    "end": "94799"
  },
  {
    "text": "for maximum number of tasks enter the",
    "start": "94799",
    "end": "96799"
  },
  {
    "text": "highest number of tasks that you want",
    "start": "96799",
    "end": "98400"
  },
  {
    "text": "service order scaling to use",
    "start": "98400",
    "end": "100400"
  },
  {
    "text": "be sure that the desired number of tasks",
    "start": "100400",
    "end": "102399"
  },
  {
    "text": "is in the range between your minimum and",
    "start": "102399",
    "end": "104320"
  },
  {
    "text": "maximum task count at this step you are",
    "start": "104320",
    "end": "106960"
  },
  {
    "text": "giving amazon ecs permission to create",
    "start": "106960",
    "end": "109439"
  },
  {
    "text": "and use ecs auto scale role now let's",
    "start": "109439",
    "end": "112560"
  },
  {
    "text": "define the order scaling policies",
    "start": "112560",
    "end": "114960"
  },
  {
    "text": "click add scaling policy",
    "start": "114960",
    "end": "118560"
  },
  {
    "text": "amazon acs far gate supports two types",
    "start": "119119",
    "end": "121360"
  },
  {
    "start": "120000",
    "end": "247000"
  },
  {
    "text": "of order scaling",
    "start": "121360",
    "end": "122960"
  },
  {
    "text": "target tracking scaling and step scaling",
    "start": "122960",
    "end": "125840"
  },
  {
    "text": "target tracking scaling scales the",
    "start": "125840",
    "end": "127520"
  },
  {
    "text": "number of tasks in a service based on",
    "start": "127520",
    "end": "129280"
  },
  {
    "text": "the target value for a specific metric",
    "start": "129280",
    "end": "131440"
  },
  {
    "text": "scaling policy adds or removes capacity",
    "start": "131440",
    "end": "133920"
  },
  {
    "text": "to keep the metric at the desired target",
    "start": "133920",
    "end": "136000"
  },
  {
    "text": "value auto scaling creates and manages",
    "start": "136000",
    "end": "138480"
  },
  {
    "text": "the cloud watch alarms that trigger the",
    "start": "138480",
    "end": "140160"
  },
  {
    "text": "scaling policy whereas step scaling",
    "start": "140160",
    "end": "142879"
  },
  {
    "text": "scales the number of tasks of the",
    "start": "142879",
    "end": "144560"
  },
  {
    "text": "service based on a set of scaling",
    "start": "144560",
    "end": "146239"
  },
  {
    "text": "adjustments or step adjustments that",
    "start": "146239",
    "end": "148959"
  },
  {
    "text": "vary based on the size of the alarm",
    "start": "148959",
    "end": "150720"
  },
  {
    "text": "reach when creating step scaling you",
    "start": "150720",
    "end": "153120"
  },
  {
    "text": "must specify the scaling adjustment type",
    "start": "153120",
    "end": "155440"
  },
  {
    "text": "this can be a percentage of the current",
    "start": "155440",
    "end": "157280"
  },
  {
    "text": "capacity or an absolute number",
    "start": "157280",
    "end": "160080"
  },
  {
    "text": "now that you have seen how the scaling",
    "start": "160080",
    "end": "161920"
  },
  {
    "text": "policies work you can choose either a",
    "start": "161920",
    "end": "163840"
  },
  {
    "text": "target tracking policy or step scaling",
    "start": "163840",
    "end": "166080"
  },
  {
    "text": "policy based on your requirements",
    "start": "166080",
    "end": "168959"
  },
  {
    "text": "let's add scaling policy of type target",
    "start": "168959",
    "end": "171440"
  },
  {
    "text": "tracking add a policy name for this auto",
    "start": "171440",
    "end": "174080"
  },
  {
    "text": "scaling policy",
    "start": "174080",
    "end": "176720"
  },
  {
    "text": "under ecs service metric select acs",
    "start": "176720",
    "end": "179440"
  },
  {
    "text": "service average cpu utilization from the",
    "start": "179440",
    "end": "182080"
  },
  {
    "text": "drop down list",
    "start": "182080",
    "end": "185640"
  },
  {
    "text": "you can use cloudwatch metrics cpu",
    "start": "186720",
    "end": "188879"
  },
  {
    "text": "utilization memory utilization and alb",
    "start": "188879",
    "end": "191440"
  },
  {
    "text": "request count to scale out your service",
    "start": "191440",
    "end": "193840"
  },
  {
    "text": "during peak times and scale in the",
    "start": "193840",
    "end": "195920"
  },
  {
    "text": "service during periods of low use",
    "start": "195920",
    "end": "198720"
  },
  {
    "text": "the cloud watch alarm that is created on",
    "start": "198720",
    "end": "200480"
  },
  {
    "text": "the metric triggers order scaling when",
    "start": "200480",
    "end": "202239"
  },
  {
    "text": "the threshold is breached",
    "start": "202239",
    "end": "204480"
  },
  {
    "text": "set the target value to 60 percent",
    "start": "204480",
    "end": "208319"
  },
  {
    "text": "modify the scale out and scale in",
    "start": "208319",
    "end": "209920"
  },
  {
    "text": "cooldown periods as needed or leave them",
    "start": "209920",
    "end": "212400"
  },
  {
    "text": "as default",
    "start": "212400",
    "end": "214239"
  },
  {
    "text": "you can disable scale in if you don't",
    "start": "214239",
    "end": "216080"
  },
  {
    "text": "want the task to scale back upon scaling",
    "start": "216080",
    "end": "218400"
  },
  {
    "text": "out let's keep the value as the default",
    "start": "218400",
    "end": "221599"
  },
  {
    "text": "choose save and update the service",
    "start": "221599",
    "end": "226120"
  },
  {
    "text": "now the auto scaling is configured on",
    "start": "233760",
    "end": "235439"
  },
  {
    "text": "the service based on the metric average",
    "start": "235439",
    "end": "237280"
  },
  {
    "text": "cpu utilization at a threshold of 60",
    "start": "237280",
    "end": "242159"
  },
  {
    "text": "so now you know how to configure order",
    "start": "242560",
    "end": "244400"
  },
  {
    "text": "scaling on amazon ecs for git",
    "start": "244400",
    "end": "247519"
  },
  {
    "start": "247000",
    "end": "261000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "247519",
    "end": "249120"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "249120",
    "end": "252370"
  },
  {
    "text": "[Applause]",
    "start": "252370",
    "end": "254120"
  },
  {
    "text": "[Music]",
    "start": "254120",
    "end": "257289"
  },
  {
    "text": "[Music]",
    "start": "259329",
    "end": "260639"
  },
  {
    "text": "you",
    "start": "260639",
    "end": "262720"
  }
]