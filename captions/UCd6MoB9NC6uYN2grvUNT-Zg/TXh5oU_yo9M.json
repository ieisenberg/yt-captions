[
  {
    "text": "hi my name is James Bezeq I'm a senior",
    "start": "4490",
    "end": "7529"
  },
  {
    "text": "developer advocate here at AWS service",
    "start": "7529",
    "end": "9990"
  },
  {
    "text": "and today I'm going to talk about Amazon",
    "start": "9990",
    "end": "12000"
  },
  {
    "text": "event bridge and how it can help",
    "start": "12000",
    "end": "13830"
  },
  {
    "text": "simplify your application architecture",
    "start": "13830",
    "end": "16108"
  },
  {
    "text": "event bridge can help with several",
    "start": "16109",
    "end": "18180"
  },
  {
    "text": "common problems in distributed",
    "start": "18180",
    "end": "19949"
  },
  {
    "text": "architecture first is tight coupling",
    "start": "19949",
    "end": "22310"
  },
  {
    "text": "companies of all sizes are starting to",
    "start": "22310",
    "end": "24810"
  },
  {
    "text": "move from the monolith to a micro",
    "start": "24810",
    "end": "26580"
  },
  {
    "text": "services model but often the",
    "start": "26580",
    "end": "28529"
  },
  {
    "text": "interactions and tight coupling between",
    "start": "28529",
    "end": "30330"
  },
  {
    "text": "those micro-services tend to also look",
    "start": "30330",
    "end": "32550"
  },
  {
    "text": "fairly monolithic let me show you what I",
    "start": "32550",
    "end": "34379"
  },
  {
    "text": "mean this is a standard synchronous API",
    "start": "34379",
    "end": "39270"
  },
  {
    "text": "I'm sure we've all written plenty of",
    "start": "39270",
    "end": "41130"
  },
  {
    "text": "these in this case a client makes a",
    "start": "41130",
    "end": "43380"
  },
  {
    "text": "request to an order service which then",
    "start": "43380",
    "end": "45480"
  },
  {
    "text": "turns around to a downstream service",
    "start": "45480",
    "end": "47520"
  },
  {
    "text": "called an invoice service and then that",
    "start": "47520",
    "end": "49620"
  },
  {
    "text": "does some work and returns a 201 to show",
    "start": "49620",
    "end": "51899"
  },
  {
    "text": "it's been successful and then returns",
    "start": "51899",
    "end": "53640"
  },
  {
    "text": "that back to the client now this works",
    "start": "53640",
    "end": "56579"
  },
  {
    "text": "fine when you've got a very simple",
    "start": "56579",
    "end": "57930"
  },
  {
    "text": "system like this it looks decoupled and",
    "start": "57930",
    "end": "60510"
  },
  {
    "text": "it's really two separate systems but",
    "start": "60510",
    "end": "63629"
  },
  {
    "text": "what happens when we add more services",
    "start": "63629",
    "end": "65250"
  },
  {
    "text": "that integrate with the order service",
    "start": "65250",
    "end": "66859"
  },
  {
    "text": "the order service has more",
    "start": "66859",
    "end": "68759"
  },
  {
    "text": "responsibilities downstream services",
    "start": "68759",
    "end": "71009"
  },
  {
    "text": "published an API and the order service",
    "start": "71009",
    "end": "73200"
  },
  {
    "text": "becomes responsible for talking to each",
    "start": "73200",
    "end": "75090"
  },
  {
    "text": "of them the order service has to",
    "start": "75090",
    "end": "77189"
  },
  {
    "text": "understand retries semantics for each",
    "start": "77189",
    "end": "78869"
  },
  {
    "text": "service and bundle an SDK for each any",
    "start": "78869",
    "end": "82109"
  },
  {
    "text": "backwards incompatible changes to the",
    "start": "82109",
    "end": "83789"
  },
  {
    "text": "API is and it's on the hook for the",
    "start": "83789",
    "end": "85590"
  },
  {
    "text": "order service team to update them long",
    "start": "85590",
    "end": "89399"
  },
  {
    "text": "term more systems out there",
    "start": "89399",
    "end": "91109"
  },
  {
    "text": "need data from the order service and in",
    "start": "91109",
    "end": "93060"
  },
  {
    "text": "this model those teams are blocked by",
    "start": "93060",
    "end": "94649"
  },
  {
    "text": "the order service team to implement they",
    "start": "94649",
    "end": "96749"
  },
  {
    "text": "cannot operate independently as they",
    "start": "96749",
    "end": "98369"
  },
  {
    "text": "once could and thus friction in the",
    "start": "98369",
    "end": "100109"
  },
  {
    "text": "process due to the integration cost of",
    "start": "100109",
    "end": "102029"
  },
  {
    "text": "hooking services together now the",
    "start": "102029",
    "end": "105599"
  },
  {
    "text": "decoupling is gone and dependencies are",
    "start": "105599",
    "end": "107520"
  },
  {
    "text": "much more fragile and this is a common",
    "start": "107520",
    "end": "109770"
  },
  {
    "text": "pattern systems started in a decoupled",
    "start": "109770",
    "end": "112020"
  },
  {
    "text": "way and trend back to being tightly",
    "start": "112020",
    "end": "114119"
  },
  {
    "text": "coupled here's the second issue as API",
    "start": "114119",
    "end": "118439"
  },
  {
    "text": "is developed into complex workflows it",
    "start": "118439",
    "end": "120779"
  },
  {
    "text": "can be difficult to make sure each",
    "start": "120779",
    "end": "122249"
  },
  {
    "text": "service has the right state I'll explain",
    "start": "122249",
    "end": "124909"
  },
  {
    "text": "here is a simple ecommerce application",
    "start": "124909",
    "end": "127679"
  },
  {
    "text": "in the happy path everything works as",
    "start": "127679",
    "end": "130349"
  },
  {
    "text": "expected the order service triggers",
    "start": "130349",
    "end": "132480"
  },
  {
    "text": "invoicing and payment systems and then",
    "start": "132480",
    "end": "134610"
  },
  {
    "text": "updates the forecasting service once the",
    "start": "134610",
    "end": "137190"
  },
  {
    "text": "payment clears this triggers the",
    "start": "137190",
    "end": "138690"
  },
  {
    "text": "fulfillment and packing of the order",
    "start": "138690",
    "end": "140490"
  },
  {
    "text": "finally fulfillment informs the shipping",
    "start": "140490",
    "end": "143310"
  },
  {
    "text": "service to request tracking information",
    "start": "143310",
    "end": "146510"
  },
  {
    "text": "but what happens if the fulfillment",
    "start": "146510",
    "end": "148980"
  },
  {
    "text": "center cannot find the product because",
    "start": "148980",
    "end": "150720"
  },
  {
    "text": "they're out of stock the fulfillment",
    "start": "150720",
    "end": "153210"
  },
  {
    "text": "team may have to alert the invoice",
    "start": "153210",
    "end": "155160"
  },
  {
    "text": "service and then reverse the payment or",
    "start": "155160",
    "end": "157620"
  },
  {
    "text": "issue a refund or a partial credit",
    "start": "157620",
    "end": "160140"
  },
  {
    "text": "the shipping service may have already",
    "start": "160140",
    "end": "162000"
  },
  {
    "text": "been triggered so the invoice service",
    "start": "162000",
    "end": "163530"
  },
  {
    "text": "sends a message to update the status and",
    "start": "163530",
    "end": "165510"
  },
  {
    "text": "the forecasting service may not accept",
    "start": "165510",
    "end": "167940"
  },
  {
    "text": "this kind of update so now the numbers",
    "start": "167940",
    "end": "169980"
  },
  {
    "text": "are incorrect and require manual",
    "start": "169980",
    "end": "171480"
  },
  {
    "text": "adjustment here's another common",
    "start": "171480",
    "end": "175050"
  },
  {
    "text": "situation imagine your team works on the",
    "start": "175050",
    "end": "177120"
  },
  {
    "text": "payment service but you weren't told",
    "start": "177120",
    "end": "178800"
  },
  {
    "text": "that another service a rewards service",
    "start": "178800",
    "end": "181260"
  },
  {
    "text": "was added what happens in this case when",
    "start": "181260",
    "end": "183930"
  },
  {
    "text": "the fulfillment service errors",
    "start": "183930",
    "end": "185490"
  },
  {
    "text": "well the fulfillment may be orchestrates",
    "start": "185490",
    "end": "187740"
  },
  {
    "text": "all the other services and your payments",
    "start": "187740",
    "end": "190050"
  },
  {
    "text": "team gets a message you undo the payment",
    "start": "190050",
    "end": "192570"
  },
  {
    "text": "but then the shipping is canceled and it",
    "start": "192570",
    "end": "194460"
  },
  {
    "text": "all looks correct but at the end the",
    "start": "194460",
    "end": "197130"
  },
  {
    "text": "reward service never finds out so the",
    "start": "197130",
    "end": "199470"
  },
  {
    "text": "rewards service thinks they integrated",
    "start": "199470",
    "end": "201000"
  },
  {
    "text": "correctly with the order service but the",
    "start": "201000",
    "end": "202920"
  },
  {
    "text": "canceled order results in a reward for a",
    "start": "202920",
    "end": "205260"
  },
  {
    "text": "customer account and that definitely",
    "start": "205260",
    "end": "206760"
  },
  {
    "text": "wasn't the intention now what happens if",
    "start": "206760",
    "end": "209310"
  },
  {
    "text": "the rewards service changes vendors and",
    "start": "209310",
    "end": "211290"
  },
  {
    "text": "adds a new API is this something that",
    "start": "211290",
    "end": "213840"
  },
  {
    "text": "other services know about here's another",
    "start": "213840",
    "end": "217890"
  },
  {
    "text": "major issue let's talk about",
    "start": "217890",
    "end": "219450"
  },
  {
    "text": "availability in these systems back to",
    "start": "219450",
    "end": "223260"
  },
  {
    "text": "our ordering system where your team is",
    "start": "223260",
    "end": "225360"
  },
  {
    "text": "managing payments there are a couple of",
    "start": "225360",
    "end": "226920"
  },
  {
    "text": "potential problems the first is",
    "start": "226920",
    "end": "229200"
  },
  {
    "text": "performance mismatch it takes longer to",
    "start": "229200",
    "end": "231570"
  },
  {
    "text": "process payments than accept orders so",
    "start": "231570",
    "end": "234030"
  },
  {
    "text": "in busy periods the slower performance",
    "start": "234030",
    "end": "235620"
  },
  {
    "text": "that the payment service is holding up",
    "start": "235620",
    "end": "237900"
  },
  {
    "text": "the order service and customers",
    "start": "237900",
    "end": "239640"
  },
  {
    "text": "experience delays in synchronous API is",
    "start": "239640",
    "end": "242400"
  },
  {
    "text": "putting a fast service in front of a",
    "start": "242400",
    "end": "244140"
  },
  {
    "text": "slower one tends to lead to problems",
    "start": "244140",
    "end": "246350"
  },
  {
    "text": "here's another problem with outages if",
    "start": "246350",
    "end": "248790"
  },
  {
    "text": "the payment service goes down the order",
    "start": "248790",
    "end": "251340"
  },
  {
    "text": "system also goes down the availability",
    "start": "251340",
    "end": "254310"
  },
  {
    "text": "metrics for the total service are worse",
    "start": "254310",
    "end": "256350"
  },
  {
    "text": "because these systems are interdependent",
    "start": "256350",
    "end": "257970"
  },
  {
    "text": "the downstream failure appears as a",
    "start": "257970",
    "end": "260730"
  },
  {
    "text": "total failure for the end user so how",
    "start": "260730",
    "end": "263910"
  },
  {
    "text": "can I Amazon average help with these",
    "start": "263910",
    "end": "265530"
  },
  {
    "text": "problems",
    "start": "265530",
    "end": "267289"
  },
  {
    "text": "well events are central to event bridge",
    "start": "267289",
    "end": "270689"
  },
  {
    "text": "and events are observable and not",
    "start": "270689",
    "end": "272369"
  },
  {
    "text": "directed the previous tightly coupled",
    "start": "272369",
    "end": "274619"
  },
  {
    "text": "API is used directed commands whereas an",
    "start": "274619",
    "end": "277319"
  },
  {
    "text": "event-driven approach is observable",
    "start": "277319",
    "end": "278879"
  },
  {
    "text": "what's the difference well then the",
    "start": "278879",
    "end": "281369"
  },
  {
    "text": "command model each command has",
    "start": "281369",
    "end": "283139"
  },
  {
    "text": "explicitly issued to a specific",
    "start": "283139",
    "end": "284819"
  },
  {
    "text": "recipient so here the person on the Left",
    "start": "284819",
    "end": "286889"
  },
  {
    "text": "says please create an invoice and the",
    "start": "286889",
    "end": "289079"
  },
  {
    "text": "person on the right hears that takes",
    "start": "289079",
    "end": "290610"
  },
  {
    "text": "actually events on the other hand are",
    "start": "290610",
    "end": "293279"
  },
  {
    "text": "merely observable by other systems so in",
    "start": "293279",
    "end": "295499"
  },
  {
    "text": "this case the person on the Left says",
    "start": "295499",
    "end": "297029"
  },
  {
    "text": "customer X just ordered a widget a",
    "start": "297029",
    "end": "299399"
  },
  {
    "text": "person at the back hears then says I",
    "start": "299399",
    "end": "301259"
  },
  {
    "text": "will add that to a sales report another",
    "start": "301259",
    "end": "303509"
  },
  {
    "text": "person hears it decides to add it to an",
    "start": "303509",
    "end": "305309"
  },
  {
    "text": "invoice and two other people hear it but",
    "start": "305309",
    "end": "307889"
  },
  {
    "text": "take no action the benefits of this are",
    "start": "307889",
    "end": "310529"
  },
  {
    "text": "that event producers don't need to have",
    "start": "310529",
    "end": "312239"
  },
  {
    "text": "any knowledge about who's listening to",
    "start": "312239",
    "end": "313739"
  },
  {
    "text": "these events and this keeps them simple",
    "start": "313739",
    "end": "315899"
  },
  {
    "text": "it allows other services to consumer",
    "start": "315899",
    "end": "318089"
  },
  {
    "text": "vents without needing upstream changes",
    "start": "318089",
    "end": "320279"
  },
  {
    "text": "that's great but how do we actually",
    "start": "320279",
    "end": "322229"
  },
  {
    "text": "implement all of this how do we pass",
    "start": "322229",
    "end": "324089"
  },
  {
    "text": "information from the order service to",
    "start": "324089",
    "end": "326219"
  },
  {
    "text": "all these downstream systems without",
    "start": "326219",
    "end": "327809"
  },
  {
    "text": "calling them directly well for that we",
    "start": "327809",
    "end": "331139"
  },
  {
    "text": "need an event bus this provides an",
    "start": "331139",
    "end": "333299"
  },
  {
    "text": "endpoint where an event producer can",
    "start": "333299",
    "end": "335159"
  },
  {
    "text": "send events the router managers",
    "start": "335159",
    "end": "337349"
  },
  {
    "text": "directing and filtering those events to",
    "start": "337349",
    "end": "338999"
  },
  {
    "text": "the appropriate downstream consumers",
    "start": "338999",
    "end": "340849"
  },
  {
    "text": "consumers can get the events they care",
    "start": "340849",
    "end": "342929"
  },
  {
    "text": "about reliably while the producers",
    "start": "342929",
    "end": "344849"
  },
  {
    "text": "remain decoupled so our architecture now",
    "start": "344849",
    "end": "348509"
  },
  {
    "text": "looks like this the order service sends",
    "start": "348509",
    "end": "350849"
  },
  {
    "text": "events to the bus which is configured",
    "start": "350849",
    "end": "352439"
  },
  {
    "text": "with rules that determine which",
    "start": "352439",
    "end": "354119"
  },
  {
    "text": "downstream systems get the event now",
    "start": "354119",
    "end": "356610"
  },
  {
    "text": "some targets will care about only",
    "start": "356610",
    "end": "358139"
  },
  {
    "text": "certain events while others will want to",
    "start": "358139",
    "end": "360239"
  },
  {
    "text": "see all the events either way the router",
    "start": "360239",
    "end": "362759"
  },
  {
    "text": "now takes on the complexity of ensuring",
    "start": "362759",
    "end": "364709"
  },
  {
    "text": "that these events get propagated",
    "start": "364709",
    "end": "366229"
  },
  {
    "text": "appropriately to each downstream service",
    "start": "366229",
    "end": "370489"
  },
  {
    "text": "back in our example with an event bus",
    "start": "370489",
    "end": "373409"
  },
  {
    "text": "decoupling the architecture it looks",
    "start": "373409",
    "end": "375659"
  },
  {
    "text": "similar but now if the fulfillment",
    "start": "375659",
    "end": "377669"
  },
  {
    "text": "service has an error it simply raises an",
    "start": "377669",
    "end": "380069"
  },
  {
    "text": "error event this is caught by other",
    "start": "380069",
    "end": "382289"
  },
  {
    "text": "services they're listening and can take",
    "start": "382289",
    "end": "384269"
  },
  {
    "text": "action accordingly and in the other",
    "start": "384269",
    "end": "387509"
  },
  {
    "text": "problem example where a rewards service",
    "start": "387509",
    "end": "389909"
  },
  {
    "text": "is added for another team to consume",
    "start": "389909",
    "end": "391919"
  },
  {
    "text": "some order service events they simply",
    "start": "391919",
    "end": "393899"
  },
  {
    "text": "add a new rule to the bus there's no",
    "start": "393899",
    "end": "395789"
  },
  {
    "text": "need to wait on the order service team",
    "start": "395789",
    "end": "397589"
  },
  {
    "text": "to make an update for them now service",
    "start": "397589",
    "end": "400229"
  },
  {
    "text": "teams can act much more independently",
    "start": "400229",
    "end": "401879"
  },
  {
    "text": "and move faster",
    "start": "401879",
    "end": "404750"
  },
  {
    "text": "this is amazon event bridge",
    "start": "404750",
    "end": "406980"
  },
  {
    "text": "it's a serverless event bus service it",
    "start": "406980",
    "end": "409620"
  },
  {
    "text": "helps you ingest and route events from",
    "start": "409620",
    "end": "411540"
  },
  {
    "text": "SAS applications AWS services and your",
    "start": "411540",
    "end": "414780"
  },
  {
    "text": "own systems some of the notable features",
    "start": "414780",
    "end": "418260"
  },
  {
    "text": "include the fact that it's serverless so",
    "start": "418260",
    "end": "420900"
  },
  {
    "text": "there's no infrastructure to manage your",
    "start": "420900",
    "end": "422340"
  },
  {
    "text": "provision scaling is handled for you and",
    "start": "422340",
    "end": "424860"
  },
  {
    "text": "you only pay for what you use",
    "start": "424860",
    "end": "426390"
  },
  {
    "text": "it offers native integrations with 21",
    "start": "426390",
    "end": "429060"
  },
  {
    "text": "SAS providers with more to come",
    "start": "429060",
    "end": "431150"
  },
  {
    "text": "traffic travels internally within AWS",
    "start": "431150",
    "end": "434040"
  },
  {
    "text": "infrastructure when you work with SAS",
    "start": "434040",
    "end": "435990"
  },
  {
    "text": "providers instead of on the public",
    "start": "435990",
    "end": "437760"
  },
  {
    "text": "Internet it integrates with over 90 AWS",
    "start": "437760",
    "end": "440970"
  },
  {
    "text": "services as sources and 17 services as",
    "start": "440970",
    "end": "444000"
  },
  {
    "text": "targets and it costs $1 per million",
    "start": "444000",
    "end": "446910"
  },
  {
    "text": "events there's no charge for events",
    "start": "446910",
    "end": "448740"
  },
  {
    "text": "sourced from AWS services or for the",
    "start": "448740",
    "end": "451140"
  },
  {
    "text": "delivery of events so I've covered a few",
    "start": "451140",
    "end": "456000"
  },
  {
    "text": "of the common challenges in managing",
    "start": "456000",
    "end": "457590"
  },
  {
    "text": "distributed systems of micro-services",
    "start": "457590",
    "end": "459630"
  },
  {
    "text": "event bridge can help to make sure that",
    "start": "459630",
    "end": "462150"
  },
  {
    "text": "your application remains decoupled api's",
    "start": "462150",
    "end": "464910"
  },
  {
    "text": "and webhook mechanisms tend to lock you",
    "start": "464910",
    "end": "466860"
  },
  {
    "text": "into a more rigid monolithic state even",
    "start": "466860",
    "end": "469650"
  },
  {
    "text": "in separate services an event bus can",
    "start": "469650",
    "end": "472230"
  },
  {
    "text": "help keep these services decoupled even",
    "start": "472230",
    "end": "474600"
  },
  {
    "text": "as your systems become more complex and",
    "start": "474600",
    "end": "476490"
  },
  {
    "text": "as new versions of your service is",
    "start": "476490",
    "end": "478320"
  },
  {
    "text": "launched it provides simplified event",
    "start": "478320",
    "end": "481290"
  },
  {
    "text": "routing the happy path works well but",
    "start": "481290",
    "end": "483720"
  },
  {
    "text": "handling arrow states can be difficult",
    "start": "483720",
    "end": "485460"
  },
  {
    "text": "to orchestrate an event bus can help",
    "start": "485460",
    "end": "488130"
  },
  {
    "text": "manage errors across multiple workflows",
    "start": "488130",
    "end": "490110"
  },
  {
    "text": "and ensure that services remain simple",
    "start": "490110",
    "end": "492450"
  },
  {
    "text": "only listening to events they care about",
    "start": "492450",
    "end": "494430"
  },
  {
    "text": "and only being responsible for creating",
    "start": "494430",
    "end": "496380"
  },
  {
    "text": "events event bridge can also improve",
    "start": "496380",
    "end": "499890"
  },
  {
    "text": "availability in synchronous API as the",
    "start": "499890",
    "end": "502680"
  },
  {
    "text": "availability of the entire system can be",
    "start": "502680",
    "end": "504930"
  },
  {
    "text": "impacted by the failure of any single",
    "start": "504930",
    "end": "507030"
  },
  {
    "text": "service moving towards an asynchronous",
    "start": "507030",
    "end": "509370"
  },
  {
    "text": "infrastructure based around events",
    "start": "509370",
    "end": "511050"
  },
  {
    "text": "allows more resilience and with the",
    "start": "511050",
    "end": "513360"
  },
  {
    "text": "right architecture design can improve",
    "start": "513360",
    "end": "515250"
  },
  {
    "text": "availability finally third-party",
    "start": "515250",
    "end": "518340"
  },
  {
    "text": "integration is available instead of",
    "start": "518340",
    "end": "519960"
  },
  {
    "text": "using polling or web hooks you can",
    "start": "519960",
    "end": "521789"
  },
  {
    "text": "ingest data seamlessly and in near",
    "start": "521790",
    "end": "524010"
  },
  {
    "text": "real-time using events event bridge",
    "start": "524010",
    "end": "526500"
  },
  {
    "text": "offers SAS integrations with a growing",
    "start": "526500",
    "end": "528330"
  },
  {
    "text": "number of providers that can treat new",
    "start": "528330",
    "end": "530280"
  },
  {
    "text": "data in these systems as events event",
    "start": "530280",
    "end": "532740"
  },
  {
    "text": "bridge is designed to help you address",
    "start": "532740",
    "end": "534090"
  },
  {
    "text": "some of the common architectural",
    "start": "534090",
    "end": "535890"
  },
  {
    "text": "pitfalls",
    "start": "535890",
    "end": "536910"
  },
  {
    "text": "of distributed systems and also help",
    "start": "536910",
    "end": "539100"
  },
  {
    "text": "simplify your service systems",
    "start": "539100",
    "end": "540630"
  },
  {
    "text": "architecture to learn more visit",
    "start": "540630",
    "end": "542940"
  },
  {
    "text": "aws.amazon.com forward slash of amperage",
    "start": "542940",
    "end": "546330"
  },
  {
    "text": "thanks for joining me for this brief",
    "start": "546330",
    "end": "548280"
  },
  {
    "text": "overview happy coding",
    "start": "548280",
    "end": "551720"
  }
]