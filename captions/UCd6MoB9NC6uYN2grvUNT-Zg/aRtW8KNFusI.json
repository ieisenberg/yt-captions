[
  {
    "text": "in this video you'll see how to set up",
    "start": "120",
    "end": "2200"
  },
  {
    "text": "an Amazon Aurora ZL integration with",
    "start": "2200",
    "end": "5759"
  },
  {
    "text": "Amazon redshift that includes data",
    "start": "5759",
    "end": "8519"
  },
  {
    "text": "filtering with this integration you get",
    "start": "8519",
    "end": "11160"
  },
  {
    "text": "an easy and reliable solution for",
    "start": "11160",
    "end": "13160"
  },
  {
    "text": "running near real-time analytics and",
    "start": "13160",
    "end": "15080"
  },
  {
    "text": "machine learning on pedabytes of",
    "start": "15080",
    "end": "16720"
  },
  {
    "text": "transactional data with no complex ETL",
    "start": "16720",
    "end": "19920"
  },
  {
    "text": "infrastructure to",
    "start": "19920",
    "end": "21320"
  },
  {
    "text": "maintain you can also Define the",
    "start": "21320",
    "end": "23400"
  },
  {
    "text": "replication scope using data filtering",
    "start": "23400",
    "end": "26119"
  },
  {
    "text": "this might save costs when performing",
    "start": "26119",
    "end": "28039"
  },
  {
    "text": "analytics on fewer tables and makes it",
    "start": "28039",
    "end": "30240"
  },
  {
    "text": "possible to exclude tables with",
    "start": "30240",
    "end": "31920"
  },
  {
    "text": "sensitive personal",
    "start": "31920",
    "end": "34880"
  },
  {
    "text": "information this is the Amazon",
    "start": "35239",
    "end": "37280"
  },
  {
    "text": "relational database service console",
    "start": "37280",
    "end": "39640"
  },
  {
    "text": "where we'll create a zero ETL",
    "start": "39640",
    "end": "42360"
  },
  {
    "text": "integration before we begin let's look",
    "start": "42360",
    "end": "44920"
  },
  {
    "text": "at the source database we'll be",
    "start": "44920",
    "end": "46960"
  },
  {
    "text": "using our source is an aurora postgress",
    "start": "46960",
    "end": "49879"
  },
  {
    "text": "SQL database cluster now let's navigate",
    "start": "49879",
    "end": "53000"
  },
  {
    "text": "to the zero ETL Integrations",
    "start": "53000",
    "end": "55960"
  },
  {
    "text": "page this page describes the three steps",
    "start": "55960",
    "end": "58840"
  },
  {
    "text": "required to create a zero ETL",
    "start": "58840",
    "end": "61480"
  },
  {
    "text": "integration for demonstration purposes",
    "start": "61480",
    "end": "64360"
  },
  {
    "text": "The Source database and Target data",
    "start": "64360",
    "end": "66280"
  },
  {
    "text": "warehouse have already been prepared and",
    "start": "66280",
    "end": "68520"
  },
  {
    "text": "we're now on step three let's create a",
    "start": "68520",
    "end": "71439"
  },
  {
    "text": "zero ETL",
    "start": "71439",
    "end": "74680"
  },
  {
    "text": "integration first we'll give the",
    "start": "74759",
    "end": "76600"
  },
  {
    "text": "integration a",
    "start": "76600",
    "end": "79280"
  },
  {
    "text": "name next we'll select our source",
    "start": "80840",
    "end": "84119"
  },
  {
    "text": "database RDS automatically filters to",
    "start": "84119",
    "end": "86960"
  },
  {
    "text": "supported engine",
    "start": "86960",
    "end": "88520"
  },
  {
    "text": "versions Rd DS validates the parameter",
    "start": "88520",
    "end": "91640"
  },
  {
    "text": "settings for the database cluster in",
    "start": "91640",
    "end": "94000"
  },
  {
    "text": "this case the parameter values need to",
    "start": "94000",
    "end": "95920"
  },
  {
    "text": "be",
    "start": "95920",
    "end": "97119"
  },
  {
    "text": "fixed we'll have RDS fix them for",
    "start": "97119",
    "end": "101720"
  },
  {
    "text": "us under data filtering options we can",
    "start": "102799",
    "end": "106479"
  },
  {
    "text": "include or exclude any existing and",
    "start": "106479",
    "end": "108960"
  },
  {
    "text": "future database tables based on a comma",
    "start": "108960",
    "end": "111719"
  },
  {
    "text": "separated list of filter expressions for",
    "start": "111719",
    "end": "114759"
  },
  {
    "text": "this example we'll include three",
    "start": "114759",
    "end": "116640"
  },
  {
    "text": "databases and schemas that are already",
    "start": "116640",
    "end": "118719"
  },
  {
    "text": "loaded with data",
    "start": "118719",
    "end": "121799"
  },
  {
    "text": "to allow RDS to make the parameter",
    "start": "121799",
    "end": "123840"
  },
  {
    "text": "changes and reboot our database we'll",
    "start": "123840",
    "end": "126039"
  },
  {
    "text": "enter",
    "start": "126039",
    "end": "128360"
  },
  {
    "text": "confirm let's reboot and",
    "start": "128440",
    "end": "131760"
  },
  {
    "text": "continue RDS is now fixing the parameter",
    "start": "131760",
    "end": "135440"
  },
  {
    "text": "values while the parameter values are",
    "start": "135440",
    "end": "137800"
  },
  {
    "text": "being fixed let's select our Target",
    "start": "137800",
    "end": "139920"
  },
  {
    "text": "Amazon redshift data",
    "start": "139920",
    "end": "142360"
  },
  {
    "text": "warehouse for this example we'll use a",
    "start": "142360",
    "end": "145040"
  },
  {
    "text": "Target Data Warehouse in the current",
    "start": "145040",
    "end": "146760"
  },
  {
    "text": "account",
    "start": "146760",
    "end": "149760"
  },
  {
    "text": "our data warehouse does not have the",
    "start": "149959",
    "end": "151640"
  },
  {
    "text": "correct resource policy and case",
    "start": "151640",
    "end": "153440"
  },
  {
    "text": "sensitivity parameter to support zero",
    "start": "153440",
    "end": "155599"
  },
  {
    "text": "ETL",
    "start": "155599",
    "end": "157160"
  },
  {
    "text": "integration we'll have RDS fix this for",
    "start": "157160",
    "end": "162040"
  },
  {
    "text": "us let's review the changes that will be",
    "start": "162080",
    "end": "164599"
  },
  {
    "text": "applied to our Target data warehouse and",
    "start": "164599",
    "end": "168440"
  },
  {
    "text": "continue RDS is now making the fixes we",
    "start": "168440",
    "end": "172080"
  },
  {
    "text": "can view the status details from the top",
    "start": "172080",
    "end": "174040"
  },
  {
    "text": "of the",
    "start": "174040",
    "end": "176360"
  },
  {
    "text": "page continuing with the integration",
    "start": "176640",
    "end": "179200"
  },
  {
    "text": "setup we have the option to add tags and",
    "start": "179200",
    "end": "181760"
  },
  {
    "text": "customize the encryption settings we'll",
    "start": "181760",
    "end": "184480"
  },
  {
    "text": "skip this",
    "start": "184480",
    "end": "186440"
  },
  {
    "text": "step once the source database and Target",
    "start": "186440",
    "end": "189159"
  },
  {
    "text": "data warehouse are fixed we can review",
    "start": "189159",
    "end": "191480"
  },
  {
    "text": "the settings and create the",
    "start": "191480",
    "end": "193280"
  },
  {
    "text": "integration let's skip ahead to when",
    "start": "193280",
    "end": "195239"
  },
  {
    "text": "they are successfully",
    "start": "195239",
    "end": "198239"
  },
  {
    "text": "fixed let's create the zero ETL",
    "start": "198400",
    "end": "203000"
  },
  {
    "text": "integration it can take up to 30 minutes",
    "start": "206959",
    "end": "209280"
  },
  {
    "text": "to create the",
    "start": "209280",
    "end": "210599"
  },
  {
    "text": "integration let's fast forward to when",
    "start": "210599",
    "end": "212840"
  },
  {
    "text": "it has been successfully",
    "start": "212840",
    "end": "216040"
  },
  {
    "text": "created our ETL status is now active now",
    "start": "216239",
    "end": "220000"
  },
  {
    "text": "let's switch to Amazon redshift and",
    "start": "220000",
    "end": "221640"
  },
  {
    "text": "create the database",
    "start": "221640",
    "end": "223840"
  },
  {
    "text": "integration now we are in our Amazon",
    "start": "223840",
    "end": "226080"
  },
  {
    "text": "redshift console let's navigate to the",
    "start": "226080",
    "end": "228560"
  },
  {
    "text": "zero ETL integration we just",
    "start": "228560",
    "end": "232519"
  },
  {
    "text": "created we'll create a database from the",
    "start": "234239",
    "end": "237519"
  },
  {
    "text": "integration we'll select the source name",
    "start": "237519",
    "end": "239799"
  },
  {
    "text": "named database we specified when",
    "start": "239799",
    "end": "241560"
  },
  {
    "text": "creating the",
    "start": "241560",
    "end": "243079"
  },
  {
    "text": "integration next we'll name and create",
    "start": "243079",
    "end": "245159"
  },
  {
    "text": "the destination",
    "start": "245159",
    "end": "247920"
  },
  {
    "text": "database at the bottom of the page we",
    "start": "249879",
    "end": "252200"
  },
  {
    "text": "can view Amazon cloudwatch integration",
    "start": "252200",
    "end": "254519"
  },
  {
    "text": "metrics and table statistics that show",
    "start": "254519",
    "end": "257040"
  },
  {
    "text": "whether data is getting synced from the",
    "start": "257040",
    "end": "258759"
  },
  {
    "text": "source to Amazon redshift metrics will",
    "start": "258759",
    "end": "262000"
  },
  {
    "text": "start populating as soon as data starts",
    "start": "262000",
    "end": "264520"
  },
  {
    "text": "flowing in addition we can view the",
    "start": "264520",
    "end": "267080"
  },
  {
    "text": "table statistics to see which tables",
    "start": "267080",
    "end": "269039"
  },
  {
    "text": "have synced and and which ones have",
    "start": "269039",
    "end": "271120"
  },
  {
    "text": "failed we can select a failed table to",
    "start": "271120",
    "end": "273680"
  },
  {
    "text": "see why it couldn't sync into Amazon",
    "start": "273680",
    "end": "276240"
  },
  {
    "text": "redshift this table is missing a primary",
    "start": "276240",
    "end": "280680"
  },
  {
    "text": "key this table is using an unsupported",
    "start": "280840",
    "end": "283520"
  },
  {
    "text": "table type which is a partition",
    "start": "283520",
    "end": "286000"
  },
  {
    "text": "table let's skip ahead to when the",
    "start": "286000",
    "end": "288240"
  },
  {
    "text": "database has been created from the",
    "start": "288240",
    "end": "289840"
  },
  {
    "text": "integration and some metrics have filled",
    "start": "289840",
    "end": "292240"
  },
  {
    "text": "in we now have metrics for lag tables",
    "start": "292240",
    "end": "295560"
  },
  {
    "text": "replicated successfully and tables",
    "start": "295560",
    "end": "297919"
  },
  {
    "text": "failed",
    "start": "297919",
    "end": "300919"
  },
  {
    "text": "on the table statistics tab we can view",
    "start": "303400",
    "end": "305800"
  },
  {
    "text": "each table's status workload row count",
    "start": "305800",
    "end": "308320"
  },
  {
    "text": "and size when we created the integration",
    "start": "308320",
    "end": "311720"
  },
  {
    "text": "we specified three databases in the data",
    "start": "311720",
    "end": "314120"
  },
  {
    "text": "filtering options so far we've created",
    "start": "314120",
    "end": "317199"
  },
  {
    "text": "one database in the Amazon redshift",
    "start": "317199",
    "end": "320000"
  },
  {
    "text": "console we'll now use Amazon redshift",
    "start": "320000",
    "end": "322800"
  },
  {
    "text": "query editor V2 to create the other two",
    "start": "322800",
    "end": "325720"
  },
  {
    "text": "databases from the",
    "start": "325720",
    "end": "327680"
  },
  {
    "text": "integration we'll obtain the Integra ID",
    "start": "327680",
    "end": "330400"
  },
  {
    "text": "from the system table and use it to",
    "start": "330400",
    "end": "332280"
  },
  {
    "text": "create a new database from the",
    "start": "332280",
    "end": "334639"
  },
  {
    "text": "integration now let's refresh the",
    "start": "334639",
    "end": "336600"
  },
  {
    "text": "database",
    "start": "336600",
    "end": "337840"
  },
  {
    "text": "Explorer two databases now appear in the",
    "start": "337840",
    "end": "340680"
  },
  {
    "text": "pane the second database should also",
    "start": "340680",
    "end": "343080"
  },
  {
    "text": "appear in our table statistics let's go",
    "start": "343080",
    "end": "345440"
  },
  {
    "text": "back and",
    "start": "345440",
    "end": "347440"
  },
  {
    "text": "look as expected we can see the tables",
    "start": "347440",
    "end": "350319"
  },
  {
    "text": "in the second database we created in",
    "start": "350319",
    "end": "352160"
  },
  {
    "text": "Amazon redshift along with their schema",
    "start": "352160",
    "end": "354639"
  },
  {
    "text": "names and sync",
    "start": "354639",
    "end": "357400"
  },
  {
    "text": "status now we'll create the Third Target",
    "start": "357400",
    "end": "360319"
  },
  {
    "text": "database this time we'll also set a",
    "start": "360319",
    "end": "362720"
  },
  {
    "text": "refresh interval to delay the sync of",
    "start": "362720",
    "end": "364639"
  },
  {
    "text": "data from our source Aurora postgress",
    "start": "364639",
    "end": "366840"
  },
  {
    "text": "SQL",
    "start": "366840",
    "end": "367880"
  },
  {
    "text": "cluster we can set the interval anywhere",
    "start": "367880",
    "end": "370479"
  },
  {
    "text": "from 0 seconds to 5",
    "start": "370479",
    "end": "372759"
  },
  {
    "text": "days let's set the refresh interval to",
    "start": "372759",
    "end": "375520"
  },
  {
    "text": "7,200",
    "start": "375520",
    "end": "378520"
  },
  {
    "text": "seconds now that the database is created",
    "start": "378720",
    "end": "381759"
  },
  {
    "text": "let's confirm the database has been",
    "start": "381759",
    "end": "383319"
  },
  {
    "text": "added to the system table with the",
    "start": "383319",
    "end": "385080"
  },
  {
    "text": "refresh interval we",
    "start": "385080",
    "end": "387560"
  },
  {
    "text": "specified as expected the refresh",
    "start": "387560",
    "end": "390039"
  },
  {
    "text": "interval of the third database is 7,200",
    "start": "390039",
    "end": "393720"
  },
  {
    "text": "seconds next let's change the refresh",
    "start": "393720",
    "end": "396520"
  },
  {
    "text": "interval for this database to 600",
    "start": "396520",
    "end": "398840"
  },
  {
    "text": "seconds we'll use the filter to select",
    "start": "398840",
    "end": "401240"
  },
  {
    "text": "the database we want to",
    "start": "401240",
    "end": "403039"
  },
  {
    "text": "update now we'll run the alter",
    "start": "403039",
    "end": "407000"
  },
  {
    "text": "command the refresh interval for the",
    "start": "408199",
    "end": "410520"
  },
  {
    "text": "third database is now 600 seconds now",
    "start": "410520",
    "end": "414039"
  },
  {
    "text": "let's confirm the change was added to",
    "start": "414039",
    "end": "415800"
  },
  {
    "text": "the system",
    "start": "415800",
    "end": "417680"
  },
  {
    "text": "table the refresh interval has been",
    "start": "417680",
    "end": "420039"
  },
  {
    "text": "successfully",
    "start": "420039",
    "end": "422639"
  },
  {
    "text": "updated you've just seen how to set up",
    "start": "423479",
    "end": "425680"
  },
  {
    "text": "Amazon Aurora 0l integration with Amazon",
    "start": "425680",
    "end": "428800"
  },
  {
    "text": "red",
    "start": "428800",
    "end": "429840"
  },
  {
    "text": "shift you can learn more about this",
    "start": "429840",
    "end": "432080"
  },
  {
    "text": "topic in the description and links for",
    "start": "432080",
    "end": "433919"
  },
  {
    "text": "this video thanks for watching now it's",
    "start": "433919",
    "end": "436840"
  },
  {
    "text": "your turn to try",
    "start": "436840",
    "end": "440360"
  }
]