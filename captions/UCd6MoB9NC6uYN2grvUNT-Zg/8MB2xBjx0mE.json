[
  {
    "text": "hello so welcome to today's webinar for aws entitled managing your cloud",
    "start": "80",
    "end": "6000"
  },
  {
    "text": "assets uh my name's ryan shuttleworth and i'm a technical evangelist at aws and it's my job to speak to as",
    "start": "6000",
    "end": "13280"
  },
  {
    "text": "many people as possible and talk about how aws cloud can be used the benefits it can bring you",
    "start": "13280",
    "end": "18960"
  },
  {
    "text": "and some of the more finer technical details of how to get going with it and today's topic is all about",
    "start": "18960",
    "end": "25199"
  },
  {
    "text": "understanding two frameworks within aws the elastic bean stalk and cloud formation",
    "start": "25199",
    "end": "33360"
  },
  {
    "text": "so today's agenda is going to really fall into four parts uh first bit i'm going to see setting",
    "start": "33360",
    "end": "38480"
  },
  {
    "text": "the scene so um a spectrum of system definition and control i've called it um two",
    "start": "38480",
    "end": "44559"
  },
  {
    "text": "polarized ways in which you might go about looking at managing your environment or two",
    "start": "44559",
    "end": "49840"
  },
  {
    "text": "different approaches or philosophies you might have inside your business and then we'll look at a shrink-wrapped",
    "start": "49840",
    "end": "55440"
  },
  {
    "text": "approach to managing your systems in the aws cloud using the elastic beanstalk",
    "start": "55440",
    "end": "60719"
  },
  {
    "text": "and at the opposite end of that spectrum find grain control using cloud formation and then we'll",
    "start": "60719",
    "end": "66159"
  },
  {
    "text": "look at how these two systems can be used together in complementary uses and we'll drop a couple of customer examples along the",
    "start": "66159",
    "end": "72720"
  },
  {
    "text": "way to give you some flavors of how they're used",
    "start": "72720",
    "end": "76960"
  },
  {
    "text": "so also your feedback is important so tell us via questions and answers or use",
    "start": "77840",
    "end": "83439"
  },
  {
    "text": "the contact us form on the website what's good in these webinars what's not what you'd like to see next time and",
    "start": "83439",
    "end": "90400"
  },
  {
    "text": "indeed what you'd like to see aws deliver in terms of products and features we want to know what you think about",
    "start": "90400",
    "end": "95680"
  },
  {
    "text": "what we do and we're trying to react as best as possible to the customer request that we get",
    "start": "95680",
    "end": "102560"
  },
  {
    "text": "so let's get into the the meat and bones of this webinar today so i guess the first thing to talk around",
    "start": "102960",
    "end": "108240"
  },
  {
    "text": "really is the fact that cloud assets are growing quite quickly so people have um have more defined",
    "start": "108240",
    "end": "114720"
  },
  {
    "text": "architectural patterns and indeed you can go to aws.amazon.com architecture and look at the the model",
    "start": "114720",
    "end": "121840"
  },
  {
    "text": "architecture patterns that we um put up there to describe different types of applications such as",
    "start": "121840",
    "end": "128080"
  },
  {
    "text": "web processing batch processing approaches to have fault tolerance and high availability",
    "start": "128080",
    "end": "133120"
  },
  {
    "text": "as a result of more understanding around the use of cloud resources more applications are being put up there",
    "start": "133120",
    "end": "139440"
  },
  {
    "text": "more data is resident in the cloud and more services generally being created leveraging the cloud platforms and what",
    "start": "139440",
    "end": "147280"
  },
  {
    "text": "that sort of results in the fact is that there are more and more cloud assets and um because cloud creates a greater",
    "start": "147280",
    "end": "153760"
  },
  {
    "text": "agility within engineering and development operations teams the environments up there tend to be",
    "start": "153760",
    "end": "159680"
  },
  {
    "text": "faster moving so the problems associated with traditional uh change management system",
    "start": "159680",
    "end": "164959"
  },
  {
    "text": "infrastructure control and definition and become slightly more pronounced so looking at that",
    "start": "164959",
    "end": "171440"
  },
  {
    "text": "how do we maintain control over what is deployed in the cloud and the two ends of the spectrum as i",
    "start": "171440",
    "end": "177200"
  },
  {
    "text": "spoke before so rather polarized view of the world is that at one end you'd have what i would call controlled chaos and at the",
    "start": "177200",
    "end": "184239"
  },
  {
    "text": "other end of the spectrum meticulous management so let's sort of give some typified examples of what i mean by each",
    "start": "184239",
    "end": "190879"
  },
  {
    "text": "of those so the controlled chaos end of the spectrum you might have a process where we",
    "start": "190879",
    "end": "196239"
  },
  {
    "text": "prototype an application we deploy it to an instance in the cloud we might iterate over that application",
    "start": "196239",
    "end": "202159"
  },
  {
    "text": "using test and development cycles and then we go into production and we're doing this all the way through",
    "start": "202159",
    "end": "207360"
  },
  {
    "text": "developing the application really and you get to the point where you have to deploy on more instances of scalability you might deploy onto relational",
    "start": "207360",
    "end": "213760"
  },
  {
    "text": "database service for scale of the application database adding load balancers",
    "start": "213760",
    "end": "219200"
  },
  {
    "text": "auto scaling groups and then you sort of take a step back and say what audit what we have how do we document",
    "start": "219200",
    "end": "224319"
  },
  {
    "text": "what we've got and it quickly becomes a devops um sort of nightmare scenario in",
    "start": "224319",
    "end": "230319"
  },
  {
    "text": "that you might have a developer-centric team that's pushing a product very quickly to market",
    "start": "230319",
    "end": "236000"
  },
  {
    "text": "and the operational um caretaking if you like doesn't happen in sync with that that",
    "start": "236000",
    "end": "242159"
  },
  {
    "text": "engineering cycle and you end up with you know question of what do we have highly manual processes",
    "start": "242159",
    "end": "247519"
  },
  {
    "text": "to get you to that point so this works for a lot of people but it has a different sort of set of dynamics",
    "start": "247519",
    "end": "252959"
  },
  {
    "text": "to it as opposed to what i call meticulous management where we prototype an app we plan the",
    "start": "252959",
    "end": "259359"
  },
  {
    "text": "infrastructure around that prototype we might implement build standards for the application deploy environments such as our test our",
    "start": "259359",
    "end": "266800"
  },
  {
    "text": "our pre-production and so on manage the deployment and the change of the application through change control",
    "start": "266800",
    "end": "271919"
  },
  {
    "text": "and we're implementing formal processes uh often formal tools and embedding configurations",
    "start": "271919",
    "end": "278080"
  },
  {
    "text": "into software frameworks such as chef and puppet now this is a tightly controlled",
    "start": "278080",
    "end": "283360"
  },
  {
    "text": "approach and the opposite end of the spectrum to the previous example but it requires quite a lot of fourth",
    "start": "283360",
    "end": "289360"
  },
  {
    "text": "engineering a lot of effort to achieve that sort of control",
    "start": "289360",
    "end": "294720"
  },
  {
    "text": "so how do you get between these two things and what are the key elements really the um that allow you to move along this",
    "start": "295120",
    "end": "301759"
  },
  {
    "text": "spectrum or to find a place on that spectrum that works for you there's obviously people your people are",
    "start": "301759",
    "end": "307280"
  },
  {
    "text": "the key asset you have in in implementing the processes or the controls that you might want to",
    "start": "307280",
    "end": "313199"
  },
  {
    "text": "put in your environment whether you have informal or formal processes loose or tight controls but",
    "start": "313199",
    "end": "320000"
  },
  {
    "text": "fundamentally you'll be wanting to look at implementing tools and the cloud gives you the ability to achieve a great",
    "start": "320000",
    "end": "325919"
  },
  {
    "text": "deal of automation and the sort of tools that you apply to automation um would sit at either end of the spectrum",
    "start": "325919",
    "end": "332400"
  },
  {
    "text": "depending on where you come from so let's look at that sort of aspect of where you might come from so",
    "start": "332400",
    "end": "338720"
  },
  {
    "text": "if you're in a a controlled chaos in sort of end of the spectrum you might be looking",
    "start": "338720",
    "end": "344160"
  },
  {
    "text": "to achieve some high level shrink trapped environments you might have a developer-centric",
    "start": "344160",
    "end": "349280"
  },
  {
    "text": "organization that just wants the application to run and it doesn't really care about the infrastructure below and only wants",
    "start": "349280",
    "end": "355759"
  },
  {
    "text": "access to that if they really need to so somewhere you can drop an application and have",
    "start": "355759",
    "end": "360800"
  },
  {
    "text": "something that is a production ready system that you know that all the common problems associated with managing",
    "start": "360800",
    "end": "367039"
  },
  {
    "text": "controlling and setting up an environment are taken care of at the other end you'll be looking for",
    "start": "367039",
    "end": "373440"
  },
  {
    "text": "fine-grained declarative control a meticulous planning sort of scenario here",
    "start": "373440",
    "end": "378800"
  },
  {
    "text": "where essentially you might have a devops or an operations team that's looking to",
    "start": "378800",
    "end": "384000"
  },
  {
    "text": "source control if you like their entire data center just as they would source control",
    "start": "384000",
    "end": "390160"
  },
  {
    "text": "configurations for let's say an apache web server or an application server config you want to source control in effect",
    "start": "390160",
    "end": "397199"
  },
  {
    "text": "everything to do with the deployment of servers operating systems load balancers dns etc etc and the tools that we have",
    "start": "397199",
    "end": "405520"
  },
  {
    "text": "in aws try to address these two different perspectives so on the left we have elastic beanstalk",
    "start": "405520",
    "end": "412880"
  },
  {
    "text": "which is really a drop and run environment for your applications and on",
    "start": "412880",
    "end": "418080"
  },
  {
    "text": "the right we have cloud formation which deals with the detailed fine-grained declarative definition of",
    "start": "418080",
    "end": "424560"
  },
  {
    "text": "resources within the aws cloud i'm going to take a look at these two systems in turn",
    "start": "424560",
    "end": "431280"
  },
  {
    "text": "starting with elastic beanstalk so elastic beanstalk is all about",
    "start": "431280",
    "end": "438639"
  },
  {
    "text": "managing the problem of application versions and application environments and trying to abstract the",
    "start": "438639",
    "end": "446639"
  },
  {
    "text": "the developer away from the need to maintain and create resources in aws so shown in",
    "start": "446639",
    "end": "453599"
  },
  {
    "text": "this diagram here i've got application versions at the left as the the yellow boxes deployed into an",
    "start": "453599",
    "end": "459199"
  },
  {
    "text": "environment such as a test environment here and a test environment differs from a production environment in terms of the",
    "start": "459199",
    "end": "465520"
  },
  {
    "text": "types of application instances that are running in terms of the size the scaling that's going on here test",
    "start": "465520",
    "end": "472800"
  },
  {
    "text": "environment has an auto scale of maximum two will only ever be two servers whereas production",
    "start": "472800",
    "end": "478000"
  },
  {
    "text": "has a minimum of three and a maximum of six in our test environment it's in a single",
    "start": "478000",
    "end": "483039"
  },
  {
    "text": "availability zone within aws and in production it's in a multi-az and",
    "start": "483039",
    "end": "488639"
  },
  {
    "text": "it connects to different databases so beanstalk is about letting abstracting away",
    "start": "488639",
    "end": "494800"
  },
  {
    "text": "the definition of those environments on the right and giving a framework for the deployment of differing application",
    "start": "494800",
    "end": "500639"
  },
  {
    "text": "versions into containers that run inside those application environments",
    "start": "500639",
    "end": "507120"
  },
  {
    "text": "and it those containers that we support with beanstalk are important because obviously the languages you write applications in",
    "start": "507120",
    "end": "514880"
  },
  {
    "text": "net java php and python are currently supported in the beanstalk framework so if you're",
    "start": "514880",
    "end": "520800"
  },
  {
    "text": "writing applications in those languages you can leverage beanstalk today without any change to your applications",
    "start": "520800",
    "end": "528640"
  },
  {
    "text": "you can keep up to date on new containers so we're adding new containers to the service all the time so",
    "start": "528880",
    "end": "534080"
  },
  {
    "text": "if you've taken rss feed from http aws.typepad.com as we release new",
    "start": "534080",
    "end": "541120"
  },
  {
    "text": "containers you'll see some of the detailed blog posts come into your inbox regarding the functionality that we",
    "start": "541120",
    "end": "546800"
  },
  {
    "text": "provide so recently we added python to that list and python adds a whole number of frameworks to support there",
    "start": "546800",
    "end": "553120"
  },
  {
    "text": "such as django and flask in addition to the straightforward php and java and.net that we supported",
    "start": "553120",
    "end": "560800"
  },
  {
    "text": "already so the idea being is that you can take a standard web application package",
    "start": "560839",
    "end": "567440"
  },
  {
    "text": "and put it into a beanstalk now what is happening underneath the covers",
    "start": "567440",
    "end": "573360"
  },
  {
    "text": "so your user application sits in an application container or application service",
    "start": "573360",
    "end": "579120"
  },
  {
    "text": "and underneath there we deploy onto those instances http and language interpreters so if this is",
    "start": "579120",
    "end": "585680"
  },
  {
    "text": "a php container we will be pushing out a an apache web server and php libraries",
    "start": "585680",
    "end": "593360"
  },
  {
    "text": "um and then we're installing that onto an operating system and you can choose when you start a beanstalk whether you want 32-bit or 64-bit linux for example",
    "start": "593360",
    "end": "601519"
  },
  {
    "text": "if you're deploying a.net application this will obviously be a windows server and then we deploy that onto an ec2 host",
    "start": "601519",
    "end": "608079"
  },
  {
    "text": "so that whole stack is created and managed for you as part of the beanstalk",
    "start": "608079",
    "end": "613760"
  },
  {
    "text": "and when you deploy into a beanstalk will not only deploy your application into a container but we take care of the",
    "start": "613760",
    "end": "620000"
  },
  {
    "text": "following so we add elastic load balancers for you so we'll create a load balancer in front",
    "start": "620000",
    "end": "625760"
  },
  {
    "text": "of your application we will add auto scaling group so that you can define the automatic",
    "start": "625760",
    "end": "633200"
  },
  {
    "text": "elastic scaling of the application servers that are sitting behind the load balancer and we will deploy instances with that",
    "start": "633200",
    "end": "640720"
  },
  {
    "text": "fully managed stack running your application behind that load balancer and we'll wire all of that into the",
    "start": "640720",
    "end": "647600"
  },
  {
    "text": "beanstalk framework and publish your application under a cname a dns name",
    "start": "647600",
    "end": "653279"
  },
  {
    "text": "so a url that you can hit your application on and depending upon the container various",
    "start": "653279",
    "end": "658800"
  },
  {
    "text": "different aspects of databases come into this as well for example with a python django app will",
    "start": "658800",
    "end": "664160"
  },
  {
    "text": "automatically create the rds resources behind the scenes as well so with one click or one drop of an",
    "start": "664160",
    "end": "671120"
  },
  {
    "text": "application into a beanstalk you're creating a a best practice template",
    "start": "671120",
    "end": "676720"
  },
  {
    "text": "for the deployment of a web application in this case additionally beanstalk collects",
    "start": "676720",
    "end": "684800"
  },
  {
    "text": "logs from these application the apache logs the application tomcat logs for example in the case of",
    "start": "684800",
    "end": "690320"
  },
  {
    "text": "java pulls them all together into s3 and lets you access all of that through",
    "start": "690320",
    "end": "695839"
  },
  {
    "text": "the console the aws management console we also manage application versions so",
    "start": "695839",
    "end": "703040"
  },
  {
    "text": "if you upload a new version of an application we'll store those in s3 and we'll manage the deployment of a new",
    "start": "703040",
    "end": "709040"
  },
  {
    "text": "version of an application onto those containers in the running environment without any downtime",
    "start": "709040",
    "end": "714480"
  },
  {
    "text": "and we'll come on to show you how that's achieved in a moment so how do you create an app for aws",
    "start": "714480",
    "end": "722079"
  },
  {
    "text": "elastic beanstalk well you do it exactly the same way as you do any other application you deploy",
    "start": "722079",
    "end": "727839"
  },
  {
    "text": "so whether it be a java.net php or python application there really is no difference there's no",
    "start": "727839",
    "end": "733720"
  },
  {
    "text": "dependencies on aws inherent for a beanstalk deployment",
    "start": "733720",
    "end": "738880"
  },
  {
    "text": "so this is um an example of valid action so i can deploy an application locally on my local",
    "start": "738880",
    "end": "745680"
  },
  {
    "text": "development machine and i can upload that source application package into beanstalk",
    "start": "745680",
    "end": "751519"
  },
  {
    "text": "run it in beanstalk and i can take that same package download it again and execute it locally there is no changes",
    "start": "751519",
    "end": "758320"
  },
  {
    "text": "required to deploy an application into the beanstalk you can of course leverage aws services",
    "start": "758320",
    "end": "765760"
  },
  {
    "text": "in your applications that's a different matter so you might want to use s3 for example as a storage",
    "start": "765760",
    "end": "771600"
  },
  {
    "text": "system and that will work just as well locally calling out to s3 as it would in beanstalk calling to s3 from",
    "start": "771600",
    "end": "777360"
  },
  {
    "text": "from the ec2 environment and you package your application up as",
    "start": "777360",
    "end": "784240"
  },
  {
    "text": "normal too so if you're looking at a php application you'll you'll zip it up and pass it up to",
    "start": "784240",
    "end": "790160"
  },
  {
    "text": "beanstalk a java application will be a war web application resource file",
    "start": "790160",
    "end": "795680"
  },
  {
    "text": "and a microsoft deployment would be a web deploy package and we provide ide plugins on the left",
    "start": "795680",
    "end": "802399"
  },
  {
    "text": "and also git integration on the right in order to do things like get push into beanstalk",
    "start": "802399",
    "end": "807600"
  },
  {
    "text": "and that you can do deployments direct from an ide so back to that idea of being a",
    "start": "807600",
    "end": "812639"
  },
  {
    "text": "developer kind of approach to managing a cloud infrastructure from within",
    "start": "812639",
    "end": "818160"
  },
  {
    "text": "something like eclipse you can do an automatic deployment and i'll show you some screenshots of that in a second",
    "start": "818160",
    "end": "825519"
  },
  {
    "text": "so looking at the console and how you um applicate deploy an application to beanstalk within the aws console",
    "start": "826480",
    "end": "833839"
  },
  {
    "text": "you choose your region that you wish to run a beanstalk within and then you can launch an environment",
    "start": "833839",
    "end": "839040"
  },
  {
    "text": "or upload a new version so shown here i'm going to this little screen crab of uploading a new version",
    "start": "839040",
    "end": "845519"
  },
  {
    "text": "so i upload a new version i'll choose my file and i can choose whether i want to",
    "start": "845519",
    "end": "851440"
  },
  {
    "text": "upload this version ready for deployment and not deploy it or whether i want to deploy it to an",
    "start": "851440",
    "end": "856880"
  },
  {
    "text": "existing environment after upload so here for example i'm uploading i have two different beanstalk environments my",
    "start": "856880",
    "end": "862480"
  },
  {
    "text": "deploy test and my production and i can choose to upload this new version of the application",
    "start": "862480",
    "end": "868160"
  },
  {
    "text": "and deploy it into either of those environments i can also do these sorts of tasks from",
    "start": "868160",
    "end": "874480"
  },
  {
    "text": "the command line so just with any other part of aws you can call into the command line check the",
    "start": "874480",
    "end": "881279"
  },
  {
    "text": "application status create a new application version and so on you can also use something we call",
    "start": "881279",
    "end": "887120"
  },
  {
    "text": "called eb which is the elastic beanstalk wizard it's a command line application that gives you some very simple controls and",
    "start": "887120",
    "end": "894000"
  },
  {
    "text": "step through process to setting up an application so you might choose to use eb",
    "start": "894000",
    "end": "899360"
  },
  {
    "text": "init which will guide you through the process a little command line wizard for creating a beanstalk and uploading your",
    "start": "899360",
    "end": "905360"
  },
  {
    "text": "application you can start and stop um applications and all the associated resources",
    "start": "905360",
    "end": "910959"
  },
  {
    "text": "that are created under a beanstalk with eb you can update an application and you request an application status",
    "start": "910959",
    "end": "918639"
  },
  {
    "text": "now back to that ide integration if you're using eclipse you can download the eclipse plugin for",
    "start": "919040",
    "end": "926000"
  },
  {
    "text": "beanstalk and you'll be able to then deploy an aws elastic beanstalk application",
    "start": "926000",
    "end": "932560"
  },
  {
    "text": "into a tomcat container so here tomcat6 and tomcat seven containers are supported",
    "start": "932560",
    "end": "938079"
  },
  {
    "text": "choose to run on a server um choose the the region i wish to deploy my application into",
    "start": "938079",
    "end": "944399"
  },
  {
    "text": "and i can choose to create a new application or choose an existing application to",
    "start": "944399",
    "end": "949839"
  },
  {
    "text": "update and the environment i'm going to push into my key pairs associated with",
    "start": "949839",
    "end": "957920"
  },
  {
    "text": "the access for ssh for these machines specify host names and so on and where i",
    "start": "957920",
    "end": "963839"
  },
  {
    "text": "want them to go and just in the same way visual studio",
    "start": "963839",
    "end": "969920"
  },
  {
    "text": "has a very similar set of wizards so here deploying my my application and we're using the publish function within visual studio",
    "start": "969920",
    "end": "976800"
  },
  {
    "text": "again choosing regions choosing a beanstalk and off we go looking at the versioning of my",
    "start": "976800",
    "end": "982320"
  },
  {
    "text": "application the url that my application is going to be published under the container type",
    "start": "982320",
    "end": "989600"
  },
  {
    "text": "for example here is running on a micro instance 64-bit windows server which incidentally fits into our free tier",
    "start": "989600",
    "end": "997040"
  },
  {
    "text": "db group security groups in this case for this application getting back some review of some information for my deployment",
    "start": "997040",
    "end": "1003920"
  },
  {
    "text": "and then i'm coming back here in my visual studio explorer and showing that my environment is healthy and here are",
    "start": "1003920",
    "end": "1009440"
  },
  {
    "text": "some simple controls within visual studio to restart my app or rebuild the entire",
    "start": "1009440",
    "end": "1014480"
  },
  {
    "text": "environment or terminate it and throw it all away so with beanstalk from the developers",
    "start": "1014480",
    "end": "1021600"
  },
  {
    "text": "workbench you can create a model template environment for running a scalable web app",
    "start": "1021600",
    "end": "1027520"
  },
  {
    "text": "within aws and you never need to touch the underlying resources",
    "start": "1027520",
    "end": "1033038"
  },
  {
    "text": "if you're a git user you can do it from a git push so here is a git aws.push",
    "start": "1033039",
    "end": "1038400"
  },
  {
    "text": "counting the objects and pushing them out into my my php deploy test environment and we're",
    "start": "1038400",
    "end": "1045760"
  },
  {
    "text": "ready to go we've updated my beanstalk from a single command line git push",
    "start": "1045760",
    "end": "1053840"
  },
  {
    "text": "we'll talk about the abstraction away from the underlying resources but if you so wish you can go in and have a look at",
    "start": "1054799",
    "end": "1061200"
  },
  {
    "text": "the the the settings that have been applied on this particular application you can",
    "start": "1061200",
    "end": "1066240"
  },
  {
    "text": "update those settings ranging from the server type so here the micro instance is being used",
    "start": "1066240",
    "end": "1073039"
  },
  {
    "text": "but you may up this to a more production scale medium or large ec2 instance you can look at the load",
    "start": "1073039",
    "end": "1080080"
  },
  {
    "text": "balancing the auto scaling so load balancing how often it will check",
    "start": "1080080",
    "end": "1085760"
  },
  {
    "text": "for health of instances and bring instances in and out of of service on the load balancer auto",
    "start": "1085760",
    "end": "1092400"
  },
  {
    "text": "scaling so the group how many instances you wish to start with to run your application and how many you wish it to grow to as a",
    "start": "1092400",
    "end": "1098960"
  },
  {
    "text": "maximum look at the availability zones that you might want to run across so here in case",
    "start": "1098960",
    "end": "1104400"
  },
  {
    "text": "it's saying any two availability zones for a high availability deployment and other things like databases",
    "start": "1104400",
    "end": "1110320"
  },
  {
    "text": "notifications and container types so here for example you if you're accessing",
    "start": "1110320",
    "end": "1116640"
  },
  {
    "text": "aws apis such as s3 or dynamodb then you can provide your access keys",
    "start": "1116640",
    "end": "1123039"
  },
  {
    "text": "your and secret key and in this case this is a web app for using java looking at jdbc connection",
    "start": "1123039",
    "end": "1128640"
  },
  {
    "text": "string to your rds's or so on and again container type more settings",
    "start": "1128640",
    "end": "1134880"
  },
  {
    "text": "here for java looking at heap sizes and so on so you can get control of the underlying resources",
    "start": "1134880",
    "end": "1140960"
  },
  {
    "text": "using the console but of course every single resource that's been created is a standard aws resource so if you",
    "start": "1140960",
    "end": "1147679"
  },
  {
    "text": "show so wish or you need to go and ssh onto an instance you can do so and you can change that instance",
    "start": "1147679",
    "end": "1153440"
  },
  {
    "text": "if you wish you can go into elastic load balancer itself and change the settings directly or you can manage it all through the",
    "start": "1153440",
    "end": "1160880"
  },
  {
    "text": "elastic beanstalk interface so full admin access on the underlying",
    "start": "1160880",
    "end": "1166160"
  },
  {
    "text": "resources so from ec2 instances the amis the machine images that's been used you can change the auto scaling",
    "start": "1166160",
    "end": "1172720"
  },
  {
    "text": "properties and so on and so forth so this is all about then taking",
    "start": "1172720",
    "end": "1179760"
  },
  {
    "text": "application prototypes and a one-click deployment into that production-ready aws infrastructure without the need",
    "start": "1179760",
    "end": "1186720"
  },
  {
    "text": "to create those resources yourself or understand some of the finer semantics of how you do that within aws",
    "start": "1186720",
    "end": "1193280"
  },
  {
    "text": "and do that in a sophisticated maybe mature operations environment so taking your",
    "start": "1193280",
    "end": "1200400"
  },
  {
    "text": "idea to your application typically you're going to spend a lot of time doing what we call heavy lifting so",
    "start": "1200400",
    "end": "1207120"
  },
  {
    "text": "this is the the configuration of resources the the management of operating systems",
    "start": "1207120",
    "end": "1212880"
  },
  {
    "text": "and the environments you want to create the configurations of web apps or containers and so on um and",
    "start": "1212880",
    "end": "1219919"
  },
  {
    "text": "you can spend a bit of time doing um infrastructure so setting up your dns or setting up your",
    "start": "1219919",
    "end": "1225679"
  },
  {
    "text": "load balances and so on so the the other sort of aspects of creating an",
    "start": "1225679",
    "end": "1230799"
  },
  {
    "text": "environment in the cloud with elastic bean stalk collapse all of that down",
    "start": "1230799",
    "end": "1236000"
  },
  {
    "text": "enable you to get to an idea quicker you'll get your idea to an application quicker using elastic beanstalk",
    "start": "1236000",
    "end": "1242400"
  },
  {
    "text": "and not having to worry about the resources that are created so putting this into um context with a",
    "start": "1242400",
    "end": "1250240"
  },
  {
    "text": "real customer example i i can't talk about the customer name unfortunately but it's a real story of",
    "start": "1250240",
    "end": "1255679"
  },
  {
    "text": "significant scale so this company was launching a new product into a brand new geography for them",
    "start": "1255679",
    "end": "1262640"
  },
  {
    "text": "and associated with that launch came a number of online applications a marketing site a whole suite of things",
    "start": "1262640",
    "end": "1270559"
  },
  {
    "text": "to deploy to support this product launch and it was a big build up to this launch of a",
    "start": "1270559",
    "end": "1275840"
  },
  {
    "text": "particular hour on a particular day in a particular country and when that hour came their web applications crashed under",
    "start": "1275840",
    "end": "1282880"
  },
  {
    "text": "exceptional demand effectively they their denial of service their existing data center so they had this this real",
    "start": "1282880",
    "end": "1288960"
  },
  {
    "text": "problem is that the massive marketing lead up to this product launch and their web presence fell on its face so they needed a fast",
    "start": "1288960",
    "end": "1295679"
  },
  {
    "text": "deployment mechanism and they really didn't care about the underlying underlying infrastructure",
    "start": "1295679",
    "end": "1300720"
  },
  {
    "text": "what they wanted to know was that when they deployed their web application is that it would scale it",
    "start": "1300720",
    "end": "1306320"
  },
  {
    "text": "would leverage cloud elastic properties and they wouldn't have to configure anything other than the initial properties um to",
    "start": "1306320",
    "end": "1312640"
  },
  {
    "text": "start with so they turned to beanstalk and they redeployed their application from their existing",
    "start": "1312640",
    "end": "1318000"
  },
  {
    "text": "data center they tested for a brief period and then they put into production and it scaled seamlessly restored the",
    "start": "1318000",
    "end": "1324400"
  },
  {
    "text": "website handled the load and they haven't reverted they now are using beanstalk",
    "start": "1324400",
    "end": "1330480"
  },
  {
    "text": "as a matter of course for such um applications where they are supporting",
    "start": "1330480",
    "end": "1335840"
  },
  {
    "text": "uh a a marketing demand a short spike in in requirement a very short lead time and getting their",
    "start": "1335840",
    "end": "1342080"
  },
  {
    "text": "application into production they don't have to worry about infrastructural resources behind that they can concentrate",
    "start": "1342080",
    "end": "1348000"
  },
  {
    "text": "on the job in hand which is creating the application and maintaining the user experience",
    "start": "1348000",
    "end": "1354559"
  },
  {
    "text": "so that's covered off a bit on elastic beanstalk and we'll circle back on on",
    "start": "1356000",
    "end": "1361280"
  },
  {
    "text": "both later but cloud formation at the opposite end of the spectrum where you really want",
    "start": "1361280",
    "end": "1366400"
  },
  {
    "text": "nitty gritty control over everything that's created within the aws environment and cloud",
    "start": "1366400",
    "end": "1372480"
  },
  {
    "text": "formation is the framework that does that so if you think about what happens under the covers of elastic beanstalk",
    "start": "1372480",
    "end": "1379919"
  },
  {
    "text": "elastic beanstalk is making a series of calls into aws to do things like creating",
    "start": "1379919",
    "end": "1386320"
  },
  {
    "text": "security groups creating auto scaling policies adding elbs and instances behind those load",
    "start": "1386320",
    "end": "1392480"
  },
  {
    "text": "balancers installing some software and doing things like log consolidation so it's executing a series of calls into",
    "start": "1392480",
    "end": "1398799"
  },
  {
    "text": "aws that martial resource creation and then the subsequent configuration of those resources",
    "start": "1398799",
    "end": "1405520"
  },
  {
    "text": "and if you think about the the wealth of resources that you have available to you in aws everything from compute databases",
    "start": "1405520",
    "end": "1412480"
  },
  {
    "text": "the security groups networking middleware services like messaging and queuing and so on",
    "start": "1412480",
    "end": "1417919"
  },
  {
    "text": "cloud formation exposes all of those things in a couple of ways and it's actually a fundamental uh framework underneath the",
    "start": "1417919",
    "end": "1424559"
  },
  {
    "text": "elastic beanstalk so it provides a consistent scripting interface",
    "start": "1424559",
    "end": "1430240"
  },
  {
    "text": "for creating and configuring aws resources so you might want to create an ec2",
    "start": "1430240",
    "end": "1435520"
  },
  {
    "text": "instance you might want to create an auto scaling group and configure that group but it's also a",
    "start": "1435520",
    "end": "1441200"
  },
  {
    "text": "framework for the life cycle management of resources using scripts so what happens if i have a resource",
    "start": "1441200",
    "end": "1447200"
  },
  {
    "text": "that's defined via one of these scripts and then i change that script i update",
    "start": "1447200",
    "end": "1452559"
  },
  {
    "text": "it it's a framework that enables that resource to be updated in a graceful way",
    "start": "1452559",
    "end": "1459520"
  },
  {
    "text": "so if you look at the components behind cloud formation it starts off with a template so this is",
    "start": "1459520",
    "end": "1466240"
  },
  {
    "text": "the json formatted if you like script file that deals with things like parameter",
    "start": "1466240",
    "end": "1471679"
  },
  {
    "text": "definition things that drive a a user-driven template such as names of my databases or users",
    "start": "1471679",
    "end": "1479360"
  },
  {
    "text": "to create on instances or software to install",
    "start": "1479360",
    "end": "1484640"
  },
  {
    "text": "deals with the resource creation so the creation of aws um components if you like such as ec2",
    "start": "1484640",
    "end": "1492320"
  },
  {
    "text": "instances or rds databases and deals with the configuration actions that i wish to apply against those",
    "start": "1492320",
    "end": "1498640"
  },
  {
    "text": "resources so it might be install software or it might be set up an sqsq",
    "start": "1498640",
    "end": "1504480"
  },
  {
    "text": "for example and then that template is deployed into the cloud formation",
    "start": "1504480",
    "end": "1509760"
  },
  {
    "text": "framework and the framework deals with what we call a stack creation the stack updates and any error",
    "start": "1509760",
    "end": "1516799"
  },
  {
    "text": "detection and rollback that's required in the creation of a stack or the application of an update and the resulting artifact is",
    "start": "1516799",
    "end": "1523600"
  },
  {
    "text": "then what we call a stack so configured aws services so this could be in the classic case of",
    "start": "1523600",
    "end": "1529120"
  },
  {
    "text": "the beanstalk an elastic load balancer an auto scaling group and some ec2 instances",
    "start": "1529120",
    "end": "1536240"
  },
  {
    "text": "now the stack is service event aware in that the the actions that you apply in the",
    "start": "1536240",
    "end": "1542000"
  },
  {
    "text": "creation of a stack or the changes in that environment can feed back into cloud formation and",
    "start": "1542000",
    "end": "1547120"
  },
  {
    "text": "trigger actions within the template files and it's also customizable once you've created a stack",
    "start": "1547120",
    "end": "1552480"
  },
  {
    "text": "you can of course go in and access the underlying resources and change them and modify them",
    "start": "1552480",
    "end": "1558320"
  },
  {
    "text": "if you so wish now the error detection and rollback is an interesting point is",
    "start": "1558320",
    "end": "1563520"
  },
  {
    "text": "that if any point in a stack creation the problem is is detected the default behavior of the cloud",
    "start": "1563520",
    "end": "1569679"
  },
  {
    "text": "formation is to roll back the creation of all resources and put you in a consistent known state",
    "start": "1569679",
    "end": "1575360"
  },
  {
    "text": "so you either know that your your stack is working or it's rolled back and it's not now you can play with those",
    "start": "1575360",
    "end": "1581760"
  },
  {
    "text": "the area detection the rollback properties but fundamentally when you want to create a stack from a template you want to know that it's created",
    "start": "1581760",
    "end": "1587440"
  },
  {
    "text": "that's the whole idea let's have a look at a bit of detail",
    "start": "1587440",
    "end": "1593760"
  },
  {
    "text": "behind a template so a couple of snippets here um parameter definition so the first",
    "start": "1593760",
    "end": "1600400"
  },
  {
    "text": "item on that list on the left so this is the snippet and of a json uh template file where i've defined a",
    "start": "1600400",
    "end": "1606400"
  },
  {
    "text": "parameter key name and i've typed string given in the description now when you create a stack",
    "start": "1606400",
    "end": "1612320"
  },
  {
    "text": "in the aws console you'll see that that parameter my first point of the wizard that you'll",
    "start": "1612320",
    "end": "1619840"
  },
  {
    "text": "see in cloud formation has my key name and my description and is asking for user",
    "start": "1619840",
    "end": "1625039"
  },
  {
    "text": "input so in this case it's asking for my ec2 key pair that i want to use to see all the instances that might be created",
    "start": "1625039",
    "end": "1631360"
  },
  {
    "text": "behind this stack so you can take user input and you can",
    "start": "1631360",
    "end": "1638080"
  },
  {
    "text": "use those parameters then in any other part of the script you can then create resources so here is",
    "start": "1638080",
    "end": "1644880"
  },
  {
    "text": "an example of creating a an rds database so we can see the resource section",
    "start": "1644880",
    "end": "1651039"
  },
  {
    "text": "and i'm calling the resource mydb so this instant this rds will be called mydb as far as the",
    "start": "1651039",
    "end": "1656080"
  },
  {
    "text": "stack is concerned it's a type rds rds or aws rdsdb",
    "start": "1656080",
    "end": "1661279"
  },
  {
    "text": "instance which is defined type and you can find all of those types in our documentation and i've set some initial properties",
    "start": "1661279",
    "end": "1667760"
  },
  {
    "text": "here so i've got a five gig allocated storage rds instance i want it to be on a small",
    "start": "1667760",
    "end": "1673440"
  },
  {
    "text": "instance type the engine i want to run is my sql 5.5 and in this case i've hard coded",
    "start": "1673440",
    "end": "1678960"
  },
  {
    "text": "username and password but these would typically be asked for from a parameter in the wizard or extracted from some",
    "start": "1678960",
    "end": "1685760"
  },
  {
    "text": "file or so on so that resource definition will create",
    "start": "1685760",
    "end": "1690799"
  },
  {
    "text": "an rds instance another snippet here is how do i",
    "start": "1690799",
    "end": "1696240"
  },
  {
    "text": "actually configure something on a machine so if you look at some of the example um templates um",
    "start": "1696240",
    "end": "1702000"
  },
  {
    "text": "and i'll show you where you can get to those later you'll find a whole series of actions commonly obviously we're going to go and",
    "start": "1702000",
    "end": "1707760"
  },
  {
    "text": "install some software so once we've created a load balancer or created some instances we want to stick some software on those",
    "start": "1707760",
    "end": "1713279"
  },
  {
    "text": "instances so in this case i'm using a config and i'm using yum on a linux",
    "start": "1713279",
    "end": "1718799"
  },
  {
    "text": "instance to install my sequel apache in php okay so that block under the yum there is going to go off and",
    "start": "1718799",
    "end": "1725039"
  },
  {
    "text": "execute those commands um as that instance is brought up another thing is i'm going to create or",
    "start": "1725039",
    "end": "1732080"
  },
  {
    "text": "download some files here and i'm going to stick some files in my html directory under my web server",
    "start": "1732080",
    "end": "1738559"
  },
  {
    "text": "and i'm going to get those files from s3 so i'm going to download a zip file from s3 and unpack it into",
    "start": "1738559",
    "end": "1745039"
  },
  {
    "text": "my web directory so i'm going to create this essence bootstrap some data onto the box so that this one this this",
    "start": "1745039",
    "end": "1751360"
  },
  {
    "text": "server comes up it's going to render some web pages back to my users immediately",
    "start": "1751360",
    "end": "1757919"
  },
  {
    "text": "so the benefit of template environments is clearly that these are a procedural definition right and one of the things that our",
    "start": "1758880",
    "end": "1764720"
  },
  {
    "text": "customers do is that they use the or leverage the fact that this json as well is to create these",
    "start": "1764720",
    "end": "1769919"
  },
  {
    "text": "programmatically so they can create a a procedural definition of an environment from soup to nuts and",
    "start": "1769919",
    "end": "1777120"
  },
  {
    "text": "they can do it in code if they say wish so they've got consistency in the generation of resources",
    "start": "1777120",
    "end": "1783520"
  },
  {
    "text": "and they don't need to introduce any human aspect into the creation of an environment",
    "start": "1783520",
    "end": "1789120"
  },
  {
    "text": "it's parameter driven so you can create these things as dynamic entities or user-driven templates so anything you",
    "start": "1789120",
    "end": "1796159"
  },
  {
    "text": "would do in a typical scripting language is pretty much mappable into something you can do within cloud formation",
    "start": "1796159",
    "end": "1801679"
  },
  {
    "text": "and you can drive the creation of resources the naming of resources etc etc from your own environment your",
    "start": "1801679",
    "end": "1808080"
  },
  {
    "text": "own data and your own logic you can collaborate as well so you can",
    "start": "1808080",
    "end": "1814000"
  },
  {
    "text": "share templates just as easily as you can share a text file so you can share these between teams as email",
    "start": "1814000",
    "end": "1819919"
  },
  {
    "text": "you can put them onto wikis and you can create commonly used environment templates",
    "start": "1819919",
    "end": "1827039"
  },
  {
    "text": "which you can pass around maybe between engineering teams test teams r d teams and so on i want to create",
    "start": "1827039",
    "end": "1833760"
  },
  {
    "text": "recreate your environment well here's my stack go take it from my template",
    "start": "1833760",
    "end": "1840000"
  },
  {
    "text": "and it creates a known configuration so you can store this stack in source control and obviously you can",
    "start": "1840000",
    "end": "1845440"
  },
  {
    "text": "change manage the changes to those stacks through versioning control as well so this creates an",
    "start": "1845440",
    "end": "1851200"
  },
  {
    "text": "interesting diamond so when you create an environment you can version that environment and you have a complete audit of",
    "start": "1851200",
    "end": "1857600"
  },
  {
    "text": "procedural definition audit of that environment now in a classic data center that's quite hard",
    "start": "1857600",
    "end": "1864000"
  },
  {
    "text": "to achieve and the this brings an interesting dynamic to some of the other sort of processes you have",
    "start": "1864000",
    "end": "1870000"
  },
  {
    "text": "maybe if you're in a regulated environment you have responsibilities under things like iso",
    "start": "1870000",
    "end": "1875559"
  },
  {
    "text": "27001 potentially or or itil creates some interesting um positives in",
    "start": "1875559",
    "end": "1881200"
  },
  {
    "text": "terms of being able to use the cloud and to find things at such a meticulous level of detail",
    "start": "1881200",
    "end": "1887278"
  },
  {
    "text": "so promising a few case studies and this is one of my my favorites at the moment so this is the curiosity rover that's currently",
    "start": "1887679",
    "end": "1895519"
  },
  {
    "text": "starting its journey on mars and it's to do with nasa tv so you may or may not be familiar with",
    "start": "1895519",
    "end": "1902000"
  },
  {
    "text": "the fact that the previous two rovers we've used aws services or nasa have used aws services",
    "start": "1902000",
    "end": "1908960"
  },
  {
    "text": "to manage the image collection and stereo mapping from the cameras on the rovers to determine",
    "start": "1908960",
    "end": "1915360"
  },
  {
    "text": "uh where that rover should go next and we've used workflows and so on now that's still in place for for those",
    "start": "1915360",
    "end": "1920799"
  },
  {
    "text": "two rovers and indeed curiosity but i wanted to focus on a different use case within aws that nasa and jpl have",
    "start": "1920799",
    "end": "1928000"
  },
  {
    "text": "used that incorporates cloud formation and it's to do with nasa tv",
    "start": "1928000",
    "end": "1933200"
  },
  {
    "text": "so as the rover was landing um it was broadcasting live images and when",
    "start": "1933200",
    "end": "1938559"
  },
  {
    "text": "it landed live images to the world via nasa tv which is a web broadcasting platform that they have",
    "start": "1938559",
    "end": "1945360"
  },
  {
    "text": "now this was um put the the curiosity landing put the greatest amount of demand that nasa have seen",
    "start": "1945360",
    "end": "1951039"
  },
  {
    "text": "on their nasa tv infrastructure or they anticipated it would and indeed it did so they needed a way in which they could",
    "start": "1951039",
    "end": "1957279"
  },
  {
    "text": "manage the the scale up and scale down of a pretty complicated and already in existence um web tv and",
    "start": "1957279",
    "end": "1965600"
  },
  {
    "text": "live streaming delivery platform and they use cloud formation as a fundamental part of that",
    "start": "1965600",
    "end": "1971519"
  },
  {
    "text": "so they had a cloud formation template which defined the stack which incorporated um or defined a load",
    "start": "1971519",
    "end": "1978399"
  },
  {
    "text": "balancer to front what they call secondary cache servers generated about 100 ng secondary cache",
    "start": "1978399",
    "end": "1985120"
  },
  {
    "text": "servers and then two to three mid-tier cache servers behind the scenes so different scale instances",
    "start": "1985120",
    "end": "1990640"
  },
  {
    "text": "so this was in essence their their caching layer which they had deployed or they wish to",
    "start": "1990640",
    "end": "1996320"
  },
  {
    "text": "deploy in different aws regions and different aws availability zones",
    "start": "1996320",
    "end": "2001519"
  },
  {
    "text": "and obviously they were piping in live content into this environment and it was pro",
    "start": "2001519",
    "end": "2007760"
  },
  {
    "text": "within served on these cache servers depending on where users came from from a dns level",
    "start": "2007760",
    "end": "2014159"
  },
  {
    "text": "so as the demand increased as the the rover landed and the first image was",
    "start": "2014159",
    "end": "2019360"
  },
  {
    "text": "coming back the demand spiked and they manually used cloud formation to initiate",
    "start": "2019360",
    "end": "2025440"
  },
  {
    "text": "additional stacks to deploy within an availability zone indeed multiple",
    "start": "2025440",
    "end": "2031360"
  },
  {
    "text": "availability zones across multiple regions so once that stack was deployed and they",
    "start": "2031360",
    "end": "2036799"
  },
  {
    "text": "added more and more slices if you like of capacity to their delivery capability",
    "start": "2036799",
    "end": "2043039"
  },
  {
    "text": "the stack was also registering this is available load balancer in terms of the the dns",
    "start": "2043039",
    "end": "2048398"
  },
  {
    "text": "provider they were using which is route 53 so the stack would deploy a whole host of 100 plus servers",
    "start": "2048399",
    "end": "2054878"
  },
  {
    "text": "and then check that was operational and then add it to their dns routing which would then do round",
    "start": "2054879",
    "end": "2061358"
  },
  {
    "text": "robbing and weighted routing into different availability zones depending on where that user has come from",
    "start": "2061359",
    "end": "2066720"
  },
  {
    "text": "and then when they were done they could then just turn off stacks and take out whole slices of capacity",
    "start": "2066720",
    "end": "2072960"
  },
  {
    "text": "so a pretty significant um stack in it saying right that they were deploying a quite a complex roll out of cache",
    "start": "2072960",
    "end": "2079599"
  },
  {
    "text": "servers so where do you go to get more information on this so the cloud",
    "start": "2079599",
    "end": "2086560"
  },
  {
    "text": "formation um we provide a set of templates that you can use to get started",
    "start": "2086560",
    "end": "2092878"
  },
  {
    "text": "so whether you want to look at a server template so just setting up a particular type of",
    "start": "2092879",
    "end": "2098960"
  },
  {
    "text": "linux or windows instance look at maybe high availability configurations how you create instances",
    "start": "2098960",
    "end": "2105040"
  },
  {
    "text": "and load balancers across availability zones or auto scaling groups got examples of relational database",
    "start": "2105040",
    "end": "2111680"
  },
  {
    "text": "service configurations dynamo db and so on we've also got complete open source stacks so you might",
    "start": "2111680",
    "end": "2118480"
  },
  {
    "text": "want to deploy a joomla or a wordpress content management system and you can choose stacks in",
    "start": "2118480",
    "end": "2124880"
  },
  {
    "text": "this template library that would deploy it as a single instance for example with a local mysql server",
    "start": "2124880",
    "end": "2130960"
  },
  {
    "text": "or as multiple instances with a high availability rds server and the templates can be used to to fire",
    "start": "2130960",
    "end": "2137920"
  },
  {
    "text": "those up and you can click the launch stack and choose your region to deploy into and it will launch you into the console",
    "start": "2137920",
    "end": "2143520"
  },
  {
    "text": "and start you on the process or you can have a look at the text files that are the templates and you can",
    "start": "2143520",
    "end": "2148880"
  },
  {
    "text": "learn and take snippets and move from it and we also provide a whole row range of snippet libraries so small",
    "start": "2148880",
    "end": "2155119"
  },
  {
    "text": "pieces like how do you take a user input variable how do you create a dynamodb table how do you integrate with the spot",
    "start": "2155119",
    "end": "2162160"
  },
  {
    "text": "market for example to request an instance for a for a cluster compute at the bottom there you know you've got",
    "start": "2162160",
    "end": "2168079"
  },
  {
    "text": "bees with machine guns templates so you can do spot instances behind load balancers to",
    "start": "2168079",
    "end": "2173280"
  },
  {
    "text": "fire up a web testing attack for example but you can also download from this web",
    "start": "2173280",
    "end": "2180320"
  },
  {
    "text": "page something called cloudformer which is our prototype at this point in time it's an application that you can",
    "start": "2180320",
    "end": "2186000"
  },
  {
    "text": "download and deploy to an ec2 instance inside your environment and cloudformer will then look at your",
    "start": "2186000",
    "end": "2192560"
  },
  {
    "text": "environment look at your servers it will look at your iam resources",
    "start": "2192560",
    "end": "2198480"
  },
  {
    "text": "your security groups and so on and so forth and it will generate you a template for your environment",
    "start": "2198480",
    "end": "2204320"
  },
  {
    "text": "now it doesn't look at what's running on machines and look at the installed software base but it will give you a a really good way",
    "start": "2204320",
    "end": "2211520"
  },
  {
    "text": "to take an existing environment and create the snippets you require to then massage that into a cloud-formed",
    "start": "2211520",
    "end": "2218000"
  },
  {
    "text": "environment",
    "start": "2218000",
    "end": "2220560"
  },
  {
    "text": "now cloud formation as i described before it's comprehensive in terms of the services it supports so all the ones",
    "start": "2225440",
    "end": "2231040"
  },
  {
    "text": "you'd expect are manageable via cloud formation scripts",
    "start": "2231040",
    "end": "2236480"
  },
  {
    "text": "but what i want to draw your attention to really is the fact that you can control elastic stalk as a an aws service",
    "start": "2236480",
    "end": "2244560"
  },
  {
    "text": "from cloud formation now this brings up an interesting sort of point so",
    "start": "2244560",
    "end": "2249920"
  },
  {
    "text": "previously we were talking about this sort of spectrum of either at the end of wanting a high",
    "start": "2249920",
    "end": "2255920"
  },
  {
    "text": "level shrink trapped way to deploy my app and i don't care what's going on under the covers so a very developer-centric view of the world",
    "start": "2255920",
    "end": "2262240"
  },
  {
    "text": "versus the fine-grained declarative view of the world which is you know sophisticated operations teams want",
    "start": "2262240",
    "end": "2268560"
  },
  {
    "text": "fine-grained control and want to effectively source control their environment now if cloud formation can drive elastic",
    "start": "2268560",
    "end": "2274640"
  },
  {
    "text": "beanstalk you can bring these things together so they work together",
    "start": "2274640",
    "end": "2279760"
  },
  {
    "text": "so you can have a highly controlled and documented",
    "start": "2279760",
    "end": "2284960"
  },
  {
    "text": "declaratively defined cloud formation environment that encompasses the ability to have bean",
    "start": "2284960",
    "end": "2291119"
  },
  {
    "text": "stalks running for development teams or engineering teams to be able to deploy applications and maintain high agility within if you",
    "start": "2291119",
    "end": "2298720"
  },
  {
    "text": "like the safety net of a controlled operations team so you can deploy",
    "start": "2298720",
    "end": "2304079"
  },
  {
    "text": "developer sandboxes with production ready infrastructure behind the scenes and maintain comprehensive control of",
    "start": "2304079",
    "end": "2311119"
  },
  {
    "text": "all aspects of that infrastructure so the best of two worlds so that spectrum if you like collapses with the",
    "start": "2311119",
    "end": "2316480"
  },
  {
    "text": "creation of these two tools and frameworks so you can get started fast with",
    "start": "2316480",
    "end": "2322720"
  },
  {
    "text": "beanstalk like i like to call it controlling the chaos really or you can take fine grain control with",
    "start": "2322720",
    "end": "2328079"
  },
  {
    "text": "cloud formation and you can create auditable environment specifications so there's no other system that i know of where you",
    "start": "2328079",
    "end": "2334240"
  },
  {
    "text": "can click a button and get a complete audit of your environment but you can with aws",
    "start": "2334240",
    "end": "2341040"
  },
  {
    "text": "so you can find out more you can get started um both elastic bean stalk and cloud formation web urls they do come under",
    "start": "2341040",
    "end": "2348960"
  },
  {
    "text": "free tiers so if you look at cloud formation and being stalked you're not charged for the use of either of those",
    "start": "2348960",
    "end": "2354960"
  },
  {
    "text": "frameworks you're only charged for the resources that are used under the covers and if you're using things like micro",
    "start": "2354960",
    "end": "2361280"
  },
  {
    "text": "instances or you're using low data volumes you will fall within the free tier",
    "start": "2361280",
    "end": "2367520"
  },
  {
    "text": "so take a look at amazon.com aws to amazon.com you look at the free tier and",
    "start": "2367520",
    "end": "2373200"
  },
  {
    "text": "give aws beanstalk and cloudformation a try",
    "start": "2373200",
    "end": "2380400"
  }
]