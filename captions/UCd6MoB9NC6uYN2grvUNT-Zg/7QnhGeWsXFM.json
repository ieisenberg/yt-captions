[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "my name's James Bezeq I'm a senior",
    "start": "290",
    "end": "2360"
  },
  {
    "text": "developer advocate here at AWS service",
    "start": "2360",
    "end": "4819"
  },
  {
    "text": "this series is about the s3 2 lambda",
    "start": "4819",
    "end": "7339"
  },
  {
    "text": "serverless design pattern and how can",
    "start": "7339",
    "end": "9530"
  },
  {
    "text": "become a flexible core for your service",
    "start": "9530",
    "end": "11870"
  },
  {
    "text": "applications this video shows how you",
    "start": "11870",
    "end": "14480"
  },
  {
    "text": "can bring automated speech-to-text into",
    "start": "14480",
    "end": "16850"
  },
  {
    "text": "your applications with minimal code this",
    "start": "16850",
    "end": "19640"
  },
  {
    "text": "solution uses Amazon transcribe to",
    "start": "19640",
    "end": "22190"
  },
  {
    "text": "automatically convert mp4 audio clips",
    "start": "22190",
    "end": "24770"
  },
  {
    "text": "into text you could use this type of",
    "start": "24770",
    "end": "27470"
  },
  {
    "text": "service application to analyze customer",
    "start": "27470",
    "end": "29480"
  },
  {
    "text": "support calls for example it could take",
    "start": "29480",
    "end": "31910"
  },
  {
    "text": "the audio from your calls and convert",
    "start": "31910",
    "end": "33980"
  },
  {
    "text": "the text for downstream analytics this",
    "start": "33980",
    "end": "36350"
  },
  {
    "text": "way you could understand what topics",
    "start": "36350",
    "end": "38240"
  },
  {
    "text": "your customers are commonly calling",
    "start": "38240",
    "end": "39710"
  },
  {
    "text": "about you can also combine with other",
    "start": "39710",
    "end": "41960"
  },
  {
    "text": "AWS machine-learning services like",
    "start": "41960",
    "end": "44390"
  },
  {
    "text": "Amazon comprehend this would allow you",
    "start": "44390",
    "end": "46700"
  },
  {
    "text": "to understand the sentiment of the cause",
    "start": "46700",
    "end": "48260"
  },
  {
    "text": "that decide if the content is positive",
    "start": "48260",
    "end": "50510"
  },
  {
    "text": "or negative for example the application",
    "start": "50510",
    "end": "52760"
  },
  {
    "text": "I'm going to show you is doing just",
    "start": "52760",
    "end": "54530"
  },
  {
    "text": "exactly that it takes the transcribed",
    "start": "54530",
    "end": "56600"
  },
  {
    "text": "text and uses Amazon comprehend for a",
    "start": "56600",
    "end": "58910"
  },
  {
    "text": "sentiment analysis score which is stores",
    "start": "58910",
    "end": "61130"
  },
  {
    "text": "in the Amazon diamond DynamoDB table the",
    "start": "61130",
    "end": "64430"
  },
  {
    "text": "whole application can listen to an audio",
    "start": "64430",
    "end": "66200"
  },
  {
    "text": "clip and arrive at the sentiment score",
    "start": "66200",
    "end": "68030"
  },
  {
    "text": "to indicate the words spoken a positive",
    "start": "68030",
    "end": "70220"
  },
  {
    "text": "negative or neutral in tone let's take a",
    "start": "70220",
    "end": "72710"
  },
  {
    "text": "look at the code so the first thing to",
    "start": "72710",
    "end": "77479"
  },
  {
    "start": "74000",
    "end": "384000"
  },
  {
    "text": "do is just get clone the repo and I'll",
    "start": "77479",
    "end": "80630"
  },
  {
    "text": "open the s3 2 lambda folder and we'll",
    "start": "80630",
    "end": "84200"
  },
  {
    "text": "just CD into the second example or",
    "start": "84200",
    "end": "86690"
  },
  {
    "text": "transcribe and here you can see we've",
    "start": "86690",
    "end": "88250"
  },
  {
    "text": "got a Sam template so I'm going to do a",
    "start": "88250",
    "end": "90440"
  },
  {
    "text": "Sam deploy using guided deploy on this",
    "start": "90440",
    "end": "93530"
  },
  {
    "text": "template I'll provide a stack name of",
    "start": "93530",
    "end": "97310"
  },
  {
    "text": "jay-bez were transcribed and running in",
    "start": "97310",
    "end": "99979"
  },
  {
    "text": "uswest 2 in this case I saw the bucket",
    "start": "99979",
    "end": "103490"
  },
  {
    "text": "name of jay-bez were transcription and",
    "start": "103490",
    "end": "107350"
  },
  {
    "text": "then we'll just accept the defaults ok",
    "start": "107350",
    "end": "110900"
  },
  {
    "text": "that's now deploying so let's take a",
    "start": "110900",
    "end": "113090"
  },
  {
    "text": "look at the template so it takes a",
    "start": "113090",
    "end": "117770"
  },
  {
    "text": "parameter of Ning input bucket name as a",
    "start": "117770",
    "end": "119689"
  },
  {
    "text": "default and then it specifies that",
    "start": "119689",
    "end": "121640"
  },
  {
    "text": "bucket as a resource it also uses a",
    "start": "121640",
    "end": "124400"
  },
  {
    "text": "dynamo DB table in this example and then",
    "start": "124400",
    "end": "128840"
  },
  {
    "text": "there's two functions we're going to be",
    "start": "128840",
    "end": "130099"
  },
  {
    "text": "using they transfer",
    "start": "130099",
    "end": "132300"
  },
  {
    "text": "description function which uses the",
    "start": "132300",
    "end": "134010"
  },
  {
    "text": "transcribe function code in the jeaious",
    "start": "134010",
    "end": "136680"
  },
  {
    "text": "and it responds to mp3 objects that are",
    "start": "136680",
    "end": "140340"
  },
  {
    "text": "put into the bucket and these are the I",
    "start": "140340",
    "end": "141840"
  },
  {
    "text": "am roars aloud for this function there's",
    "start": "141840",
    "end": "145740"
  },
  {
    "text": "also a sentiment function this will look",
    "start": "145740",
    "end": "148080"
  },
  {
    "text": "at the JSON output from the first",
    "start": "148080",
    "end": "149850"
  },
  {
    "text": "function and use this to call comprehend",
    "start": "149850",
    "end": "152790"
  },
  {
    "text": "to run a sentiment analysis the code",
    "start": "152790",
    "end": "155460"
  },
  {
    "text": "there is in the sentiment folder",
    "start": "155460",
    "end": "156930"
  },
  {
    "text": "function I'm going to look at the",
    "start": "156930",
    "end": "159360"
  },
  {
    "text": "transcribe function first in app jeaious",
    "start": "159360",
    "end": "161840"
  },
  {
    "text": "here's a standard lambda handler so",
    "start": "161840",
    "end": "165990"
  },
  {
    "text": "first of all it goes through all of the",
    "start": "165990",
    "end": "167550"
  },
  {
    "text": "different objects handed in there and",
    "start": "167550",
    "end": "168990"
  },
  {
    "text": "packages that map into this params",
    "start": "168990",
    "end": "171330"
  },
  {
    "text": "object and it hands it through the",
    "start": "171330",
    "end": "173670"
  },
  {
    "text": "transcribed servers to start a",
    "start": "173670",
    "end": "175440"
  },
  {
    "text": "transcription job and really that's all",
    "start": "175440",
    "end": "177870"
  },
  {
    "text": "that function actually does in the",
    "start": "177870",
    "end": "181770"
  },
  {
    "text": "sentiment function which responds to the",
    "start": "181770",
    "end": "184500"
  },
  {
    "text": "JSON objects that have now arrived in",
    "start": "184500",
    "end": "187110"
  },
  {
    "text": "the bucket it looks at the incoming JSON",
    "start": "187110",
    "end": "189990"
  },
  {
    "text": "object and uses s3 to retrieve the",
    "start": "189990",
    "end": "192780"
  },
  {
    "text": "content of json there and then it calls",
    "start": "192780",
    "end": "196500"
  },
  {
    "text": "do sentiment analysis on that",
    "start": "196500",
    "end": "198690"
  },
  {
    "text": "transcription do sentiment analysis is a",
    "start": "198690",
    "end": "202140"
  },
  {
    "text": "function i wrote that's really just a",
    "start": "202140",
    "end": "203489"
  },
  {
    "text": "wrapper for the detect sentiment",
    "start": "203489",
    "end": "205560"
  },
  {
    "text": "function for amazon comprehend and it",
    "start": "205560",
    "end": "208890"
  },
  {
    "text": "returns that result and once it has that",
    "start": "208890",
    "end": "211620"
  },
  {
    "text": "result back in sentiment it just simply",
    "start": "211620",
    "end": "214170"
  },
  {
    "text": "builds a permit to store that in",
    "start": "214170",
    "end": "216480"
  },
  {
    "text": "dynamodb okay it looks like how some",
    "start": "216480",
    "end": "221040"
  },
  {
    "text": "template is now finished deploying so if",
    "start": "221040",
    "end": "222720"
  },
  {
    "text": "I go to the bucket that's been created",
    "start": "222720",
    "end": "226100"
  },
  {
    "text": "jay-bez were transcription currently",
    "start": "226130",
    "end": "230130"
  },
  {
    "text": "it's an empty bucket so I've taken three",
    "start": "230130",
    "end": "231630"
  },
  {
    "text": "audio clips of me reading reviews some",
    "start": "231630",
    "end": "234780"
  },
  {
    "text": "good some bad and one average I'll this",
    "start": "234780",
    "end": "237120"
  },
  {
    "text": "upload those you see a review bad good",
    "start": "237120",
    "end": "239580"
  },
  {
    "text": "and average mp3s I'll click Next to",
    "start": "239580",
    "end": "242910"
  },
  {
    "text": "upload those okay those are now uploaded",
    "start": "242910",
    "end": "250010"
  },
  {
    "text": "now if I just refresh the contents that",
    "start": "250060",
    "end": "252069"
  },
  {
    "text": "temp file is an indication that these",
    "start": "252069",
    "end": "254140"
  },
  {
    "text": "are now being processed by transcribed",
    "start": "254140",
    "end": "257160"
  },
  {
    "text": "so let's take a look in the transcribed",
    "start": "257160",
    "end": "259570"
  },
  {
    "text": "service okay I mean the wrong region I",
    "start": "259570",
    "end": "265510"
  },
  {
    "text": "just need to change my region to US west",
    "start": "265510",
    "end": "267070"
  },
  {
    "text": "to there you can see the three",
    "start": "267070",
    "end": "272770"
  },
  {
    "text": "transcription jobs have been created and",
    "start": "272770",
    "end": "274720"
  },
  {
    "text": "all three of those are in progress",
    "start": "274720",
    "end": "276639"
  },
  {
    "text": "typically they take as long as the",
    "start": "276639",
    "end": "278800"
  },
  {
    "text": "length of the audio and these clips are",
    "start": "278800",
    "end": "280600"
  },
  {
    "text": "20 to 30 seconds each",
    "start": "280600",
    "end": "283260"
  },
  {
    "text": "now the indication that the job is",
    "start": "283260",
    "end": "285430"
  },
  {
    "text": "finished is the arrival of JSON files",
    "start": "285430",
    "end": "288130"
  },
  {
    "text": "inside this s3 bucket so I just",
    "start": "288130",
    "end": "296200"
  },
  {
    "text": "refreshed that you can see now one of",
    "start": "296200",
    "end": "297370"
  },
  {
    "text": "those the bad review is now finished",
    "start": "297370",
    "end": "300000"
  },
  {
    "text": "let's have a look at that transcription",
    "start": "300000",
    "end": "302080"
  },
  {
    "text": "job I'll just click here and now it",
    "start": "302080",
    "end": "307479"
  },
  {
    "text": "shows you the output data location",
    "start": "307479",
    "end": "310530"
  },
  {
    "text": "showing whether JSON file has been",
    "start": "310530",
    "end": "313650"
  },
  {
    "text": "stored and we'll take a look at that now",
    "start": "313650",
    "end": "316260"
  },
  {
    "text": "I'll make this public so we can download",
    "start": "316260",
    "end": "318550"
  },
  {
    "text": "this and pull it into vs code now",
    "start": "318550",
    "end": "322660"
  },
  {
    "text": "looking at the JSON the transcription is",
    "start": "322660",
    "end": "325000"
  },
  {
    "text": "at the top and that's just one big block",
    "start": "325000",
    "end": "326590"
  },
  {
    "text": "of text that is everything I said in the",
    "start": "326590",
    "end": "328390"
  },
  {
    "text": "review further down it shows each word",
    "start": "328390",
    "end": "331810"
  },
  {
    "text": "that was said along with the confidence",
    "start": "331810",
    "end": "333760"
  },
  {
    "text": "score of how confident the service is of",
    "start": "333760",
    "end": "336280"
  },
  {
    "text": "what I said but we're just gonna be",
    "start": "336280",
    "end": "338050"
  },
  {
    "text": "using that transcription block to use",
    "start": "338050",
    "end": "339729"
  },
  {
    "text": "comprehend so now if I go to and look at",
    "start": "339729",
    "end": "344650"
  },
  {
    "text": "the transcription bucket and we'll",
    "start": "344650",
    "end": "349240"
  },
  {
    "text": "switch to dynamo DB that you can see",
    "start": "349240",
    "end": "351039"
  },
  {
    "text": "there's a transcribed table and all",
    "start": "351039",
    "end": "353830"
  },
  {
    "text": "three of those files now often processed",
    "start": "353830",
    "end": "355990"
  },
  {
    "text": "and the scores are in this table we've",
    "start": "355990",
    "end": "357520"
  },
  {
    "text": "got the bad review with a negative score",
    "start": "357520",
    "end": "359830"
  },
  {
    "text": "of 77 percent",
    "start": "359830",
    "end": "362550"
  },
  {
    "text": "and the average review shows a mixed",
    "start": "364720",
    "end": "367600"
  },
  {
    "text": "score of 92 and the good review shows a",
    "start": "367600",
    "end": "369550"
  },
  {
    "text": "positive of 99 which are all in line",
    "start": "369550",
    "end": "371170"
  },
  {
    "text": "with the contents of what we're in those",
    "start": "371170",
    "end": "373120"
  },
  {
    "text": "audio clips if I go back to the contents",
    "start": "373120",
    "end": "379480"
  },
  {
    "text": "the bucket now all three jobs have been",
    "start": "379480",
    "end": "381940"
  },
  {
    "text": "completed you can see the JSON files",
    "start": "381940",
    "end": "383500"
  },
  {
    "text": "they're combining the s3 to lamda design",
    "start": "383500",
    "end": "387970"
  },
  {
    "start": "384000",
    "end": "446000"
  },
  {
    "text": "pattern with other AWS services gives",
    "start": "387970",
    "end": "390550"
  },
  {
    "text": "you a lot of flexibility it can really",
    "start": "390550",
    "end": "392800"
  },
  {
    "text": "open the door to some creative solutions",
    "start": "392800",
    "end": "394720"
  },
  {
    "text": "in this case I used Amazon transcribe an",
    "start": "394720",
    "end": "397630"
  },
  {
    "text": "Amazon comprehend to convert speech to",
    "start": "397630",
    "end": "400300"
  },
  {
    "text": "text and then perform a sentiment",
    "start": "400300",
    "end": "401860"
  },
  {
    "text": "analysis stirring the results in dynamo",
    "start": "401860",
    "end": "404230"
  },
  {
    "text": "dB",
    "start": "404230",
    "end": "404910"
  },
  {
    "text": "since the services handle the scaling",
    "start": "404910",
    "end": "407410"
  },
  {
    "text": "this small application can process",
    "start": "407410",
    "end": "408970"
  },
  {
    "text": "hundreds or even thousands of audio",
    "start": "408970",
    "end": "410800"
  },
  {
    "text": "clips in parallel the lambda function",
    "start": "410800",
    "end": "413350"
  },
  {
    "text": "contains only the minimal business logic",
    "start": "413350",
    "end": "415090"
  },
  {
    "text": "to connect the services just 60 lines of",
    "start": "415090",
    "end": "417550"
  },
  {
    "text": "code in this case using the service",
    "start": "417550",
    "end": "419980"
  },
  {
    "text": "application model setting up a",
    "start": "419980",
    "end": "421690"
  },
  {
    "text": "deployment package with the AWS",
    "start": "421690",
    "end": "423340"
  },
  {
    "text": "resources in our code is also very easy",
    "start": "423340",
    "end": "425200"
  },
  {
    "text": "to download the examples from this video",
    "start": "425200",
    "end": "428260"
  },
  {
    "text": "and deploy the application in your own",
    "start": "428260",
    "end": "429790"
  },
  {
    "text": "account visit this URL thanks for",
    "start": "429790",
    "end": "433270"
  },
  {
    "text": "joining me for this walkthrough don't",
    "start": "433270",
    "end": "434800"
  },
  {
    "text": "miss the other videos in this series",
    "start": "434800",
    "end": "436150"
  },
  {
    "text": "that show other ways to use s3 to lander",
    "start": "436150",
    "end": "438880"
  },
  {
    "text": "for your service applications happy",
    "start": "438880",
    "end": "441070"
  },
  {
    "text": "coding",
    "start": "441070",
    "end": "443250"
  }
]