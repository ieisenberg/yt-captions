[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "610",
    "end": "6020"
  },
  {
    "text": "hello my name is norm from the dotnet",
    "start": "6020",
    "end": "8490"
  },
  {
    "text": "team at a TBS in this video we are going",
    "start": "8490",
    "end": "11040"
  },
  {
    "text": "to talk about Amazon Elastic container",
    "start": "11040",
    "end": "12990"
  },
  {
    "text": "service or ECS for short with dotnet",
    "start": "12990",
    "end": "15389"
  },
  {
    "text": "core VCS is a container orchestration",
    "start": "15389",
    "end": "18240"
  },
  {
    "text": "service that supports docker containers",
    "start": "18240",
    "end": "20520"
  },
  {
    "text": "before we dive into deploying our Dutton",
    "start": "20520",
    "end": "22859"
  },
  {
    "text": "core applications to ECS let's take a",
    "start": "22859",
    "end": "24990"
  },
  {
    "text": "look at how the easiest resources work",
    "start": "24990",
    "end": "27240"
  },
  {
    "start": "27000",
    "end": "140000"
  },
  {
    "text": "together first there is the cluster",
    "start": "27240",
    "end": "29760"
  },
  {
    "text": "which is a logical grouping of our",
    "start": "29760",
    "end": "31470"
  },
  {
    "text": "containers the cluster then has",
    "start": "31470",
    "end": "34320"
  },
  {
    "text": "container instances which are ec2",
    "start": "34320",
    "end": "36600"
  },
  {
    "text": "instances that provide the compute",
    "start": "36600",
    "end": "38340"
  },
  {
    "text": "resources for our cluster next we have",
    "start": "38340",
    "end": "43079"
  },
  {
    "text": "task definitions which tells these es",
    "start": "43079",
    "end": "45510"
  },
  {
    "text": "how to run our container this is where",
    "start": "45510",
    "end": "47969"
  },
  {
    "text": "we declare how much memory and CPU for",
    "start": "47969",
    "end": "50550"
  },
  {
    "text": "the containers you can also set an item",
    "start": "50550",
    "end": "52829"
  },
  {
    "text": "role to give your container a tubes",
    "start": "52829",
    "end": "54840"
  },
  {
    "text": "credentials to access eight of your",
    "start": "54840",
    "end": "56640"
  },
  {
    "text": "services then you can run tasks for your",
    "start": "56640",
    "end": "60660"
  },
  {
    "text": "task definition running a task on a",
    "start": "60660",
    "end": "63120"
  },
  {
    "text": "cluster is for transitory processes that",
    "start": "63120",
    "end": "66240"
  },
  {
    "text": "means when the process declared in the",
    "start": "66240",
    "end": "68010"
  },
  {
    "text": "docker build file exits the tasks",
    "start": "68010",
    "end": "70380"
  },
  {
    "text": "running the container will terminate",
    "start": "70380",
    "end": "73220"
  },
  {
    "text": "when the task starts up it will download",
    "start": "73220",
    "end": "76049"
  },
  {
    "text": "the docker image from the container",
    "start": "76049",
    "end": "77970"
  },
  {
    "text": "registry whether that is docker hub or",
    "start": "77970",
    "end": "80490"
  },
  {
    "text": "Amazon Elastic container registry or ECR",
    "start": "80490",
    "end": "83340"
  },
  {
    "text": "for short another way to run your",
    "start": "83340",
    "end": "86880"
  },
  {
    "text": "containers is as a service this is for",
    "start": "86880",
    "end": "90030"
  },
  {
    "text": "things like web servers where you want",
    "start": "90030",
    "end": "92189"
  },
  {
    "text": "the test to run indefinitely a service",
    "start": "92189",
    "end": "96840"
  },
  {
    "text": "will run a declared number of tasks for",
    "start": "96840",
    "end": "98970"
  },
  {
    "text": "it and will monitor their health if any",
    "start": "98970",
    "end": "101430"
  },
  {
    "text": "of the tasks fail it will restart new",
    "start": "101430",
    "end": "103649"
  },
  {
    "text": "tasks now if our container is a web",
    "start": "103649",
    "end": "107399"
  },
  {
    "text": "server we probably want to tie all these",
    "start": "107399",
    "end": "109619"
  },
  {
    "text": "tests to a load bouncer to provide one",
    "start": "109619",
    "end": "112560"
  },
  {
    "text": "URL endpoint and spread the traffic",
    "start": "112560",
    "end": "114659"
  },
  {
    "text": "across all of the tasks the service will",
    "start": "114659",
    "end": "118860"
  },
  {
    "text": "register the healthy test to the load",
    "start": "118860",
    "end": "120990"
  },
  {
    "text": "balancer and will deregister them if any",
    "start": "120990",
    "end": "123899"
  },
  {
    "text": "of the text become unhealthy once they",
    "start": "123899",
    "end": "128160"
  },
  {
    "text": "are registered the load balancer will",
    "start": "128160",
    "end": "129989"
  },
  {
    "text": "take care of sending the traffic to the",
    "start": "129989",
    "end": "131970"
  },
  {
    "text": "test running our container",
    "start": "131970",
    "end": "133800"
  },
  {
    "text": "any of this far gate is a new technology",
    "start": "133800",
    "end": "136260"
  },
  {
    "text": "for ECS that you can use to deploy your",
    "start": "136260",
    "end": "138870"
  },
  {
    "text": "containers to easy s with Fargate you",
    "start": "138870",
    "end": "142620"
  },
  {
    "start": "140000",
    "end": "175000"
  },
  {
    "text": "don't have to manage any easy to",
    "start": "142620",
    "end": "144420"
  },
  {
    "text": "instances and the compute capacity will",
    "start": "144420",
    "end": "146610"
  },
  {
    "text": "be auto provision at lunch time when you",
    "start": "146610",
    "end": "150060"
  },
  {
    "text": "launch your containers with Fargate you",
    "start": "150060",
    "end": "152280"
  },
  {
    "text": "reserve the amount of CPU and memory",
    "start": "152280",
    "end": "153900"
  },
  {
    "text": "needed for your container and forget",
    "start": "153900",
    "end": "156690"
  },
  {
    "text": "tasks take care of the rest if you are",
    "start": "156690",
    "end": "160800"
  },
  {
    "text": "not using ec2 instances the cluster",
    "start": "160800",
    "end": "163230"
  },
  {
    "text": "creation is simplified all you need to",
    "start": "163230",
    "end": "165600"
  },
  {
    "text": "do is specify a name for the cluster and",
    "start": "165600",
    "end": "168060"
  },
  {
    "text": "when you launch your Fargate based test",
    "start": "168060",
    "end": "170160"
  },
  {
    "text": "provide the VPC configuration and easy",
    "start": "170160",
    "end": "173130"
  },
  {
    "text": "to security groups if we look back at",
    "start": "173130",
    "end": "176580"
  },
  {
    "text": "the ECS diagram we showed before who is",
    "start": "176580",
    "end": "179160"
  },
  {
    "text": "far gate that means that container and",
    "start": "179160",
    "end": "181110"
  },
  {
    "text": "says disappeared and is no longer our",
    "start": "181110",
    "end": "183510"
  },
  {
    "text": "concern with Visual Studio 2017 and the",
    "start": "183510",
    "end": "187080"
  },
  {
    "text": "ADA we still get for Visual Studio you",
    "start": "187080",
    "end": "188490"
  },
  {
    "text": "can deploy dotnet core applications to",
    "start": "188490",
    "end": "190890"
  },
  {
    "text": "directly to easy s let's go take a look",
    "start": "190890",
    "end": "193830"
  },
  {
    "text": "at how you can do that here we are in",
    "start": "193830",
    "end": "196350"
  },
  {
    "text": "visual studio of 2017 and we have the 8",
    "start": "196350",
    "end": "198750"
  },
  {
    "text": "of 6 bar here again on the left",
    "start": "198750",
    "end": "200160"
  },
  {
    "text": "to get started with deploying let's",
    "start": "200160",
    "end": "202350"
  },
  {
    "text": "create a brand new project I'm gonna",
    "start": "202350",
    "end": "204180"
  },
  {
    "text": "create one on this solution I've already",
    "start": "204180",
    "end": "205380"
  },
  {
    "text": "set up",
    "start": "205380",
    "end": "205850"
  },
  {
    "text": "it's an add new project and I'm gonna",
    "start": "205850",
    "end": "209400"
  },
  {
    "text": "deploy a dotnet core a spinet core web",
    "start": "209400",
    "end": "212100"
  },
  {
    "text": "application we're just gonna call this",
    "start": "212100",
    "end": "214080"
  },
  {
    "text": "our web front-end where I say ok and",
    "start": "214080",
    "end": "221090"
  },
  {
    "text": "this is a web application and we're",
    "start": "221090",
    "end": "224070"
  },
  {
    "text": "gonna take advantage of visual studios",
    "start": "224070",
    "end": "225510"
  },
  {
    "text": "doctor support and let it generate a",
    "start": "225510",
    "end": "227010"
  },
  {
    "text": "docker file for us push ok",
    "start": "227010",
    "end": "232069"
  },
  {
    "text": "and here is our project this is just the",
    "start": "235000",
    "end": "237590"
  },
  {
    "text": "standard project facility to occur it",
    "start": "237590",
    "end": "239060"
  },
  {
    "text": "for us and here we have is a docker file",
    "start": "239060",
    "end": "241430"
  },
  {
    "start": "240000",
    "end": "445000"
  },
  {
    "text": "that Visual Studio set up for us on how",
    "start": "241430",
    "end": "244220"
  },
  {
    "text": "to actually build the docker image with",
    "start": "244220",
    "end": "246709"
  },
  {
    "text": "that docker file on there that triggers",
    "start": "246709",
    "end": "248959"
  },
  {
    "text": "they took it to note you can deploy it",
    "start": "248959",
    "end": "250730"
  },
  {
    "text": "to AWS so if I right click we now have",
    "start": "250730",
    "end": "253700"
  },
  {
    "text": "the option to publish the container to",
    "start": "253700",
    "end": "255380"
  },
  {
    "text": "AWS now here's where we start a wizard",
    "start": "255380",
    "end": "260690"
  },
  {
    "text": "and the deployment targets is where we",
    "start": "260690",
    "end": "262460"
  },
  {
    "text": "can see how different options to deploy",
    "start": "262460",
    "end": "264290"
  },
  {
    "text": "this we could do it as a service as a",
    "start": "264290",
    "end": "266750"
  },
  {
    "text": "task a scheduled task or we could just",
    "start": "266750",
    "end": "270050"
  },
  {
    "text": "push this as a darker image to ECR and",
    "start": "270050",
    "end": "272720"
  },
  {
    "text": "then later push it to a service so this",
    "start": "272720",
    "end": "275690"
  },
  {
    "text": "is a web server we're gonna push this as",
    "start": "275690",
    "end": "277400"
  },
  {
    "text": "a service and I'm going to leave this",
    "start": "277400",
    "end": "279560"
  },
  {
    "text": "checked to save the default settings and",
    "start": "279560",
    "end": "281900"
  },
  {
    "text": "it's also going to set up my project for",
    "start": "281900",
    "end": "283550"
  },
  {
    "text": "command line deployments afterwards next",
    "start": "283550",
    "end": "289280"
  },
  {
    "text": "we have to decide what cluster we want",
    "start": "289280",
    "end": "291560"
  },
  {
    "text": "to launch this to and how we want to",
    "start": "291560",
    "end": "292820"
  },
  {
    "text": "launch it I'm gonna use a brand new",
    "start": "292820",
    "end": "295070"
  },
  {
    "text": "cluster today we're gonna call this demo",
    "start": "295070",
    "end": "297530"
  },
  {
    "text": "cluster and I'm gonna use Fargate to",
    "start": "297530",
    "end": "300979"
  },
  {
    "text": "deploy this so I don't have to think",
    "start": "300979",
    "end": "302630"
  },
  {
    "text": "about any ec2 resources when launching",
    "start": "302630",
    "end": "305150"
  },
  {
    "text": "this I just specify my CPU and memory",
    "start": "305150",
    "end": "307789"
  },
  {
    "text": "which I'm going to leave at the default",
    "start": "307789",
    "end": "308840"
  },
  {
    "text": "and my V PC and security groups that I",
    "start": "308840",
    "end": "311539"
  },
  {
    "text": "want for that compute resources so again",
    "start": "311539",
    "end": "314990"
  },
  {
    "text": "push next and then we have to define the",
    "start": "314990",
    "end": "318289"
  },
  {
    "text": "service for our web server here we can",
    "start": "318289",
    "end": "323000"
  },
  {
    "text": "say how many instances of this service",
    "start": "323000",
    "end": "324979"
  },
  {
    "text": "of people run since we want to make sure",
    "start": "324979",
    "end": "326570"
  },
  {
    "text": "this is highly available we're going to",
    "start": "326570",
    "end": "327770"
  },
  {
    "text": "create three tasks with that so there's",
    "start": "327770",
    "end": "329570"
  },
  {
    "text": "gonna be three instances of my web",
    "start": "329570",
    "end": "331220"
  },
  {
    "text": "application running in Fargo push next",
    "start": "331220",
    "end": "336190"
  },
  {
    "text": "and now we're have three different tasks",
    "start": "336190",
    "end": "338690"
  },
  {
    "text": "we want to have them be using an",
    "start": "338690",
    "end": "341030"
  },
  {
    "text": "application load balancer to spread the",
    "start": "341030",
    "end": "343310"
  },
  {
    "text": "traffic across all of our different",
    "start": "343310",
    "end": "344660"
  },
  {
    "text": "instances I'm going to configure that",
    "start": "344660",
    "end": "346780"
  },
  {
    "text": "we're gonna create a brand-new load",
    "start": "346780",
    "end": "348770"
  },
  {
    "text": "balancer I'm going to leave everything",
    "start": "348770",
    "end": "351350"
  },
  {
    "text": "else with the default where it's gonna",
    "start": "351350",
    "end": "352280"
  },
  {
    "text": "create a target group called web",
    "start": "352280",
    "end": "354889"
  },
  {
    "text": "front-end and it's going to say for all",
    "start": "354889",
    "end": "356889"
  },
  {
    "text": "requests send them to this target group",
    "start": "356889",
    "end": "361310"
  },
  {
    "text": "and our Fargate instances will be",
    "start": "361310",
    "end": "364490"
  },
  {
    "text": "attached to that target group and we",
    "start": "364490",
    "end": "366800"
  },
  {
    "text": "must make sure that the health",
    "start": "366800",
    "end": "368180"
  },
  {
    "text": "check is pointing to a valid URL within",
    "start": "368180",
    "end": "369919"
  },
  {
    "text": "that container because that's how it",
    "start": "369919",
    "end": "371750"
  },
  {
    "text": "knows that the tasks are healthy enough",
    "start": "371750",
    "end": "373400"
  },
  {
    "text": "to be added to our load balancer so",
    "start": "373400",
    "end": "376250"
  },
  {
    "text": "hopeless next next we need to find the",
    "start": "376250",
    "end": "381289"
  },
  {
    "text": "task definition for our application",
    "start": "381289",
    "end": "383960"
  },
  {
    "text": "we're gonna create a brand new one and",
    "start": "383960",
    "end": "386570"
  },
  {
    "text": "this is where we can specify an iamb",
    "start": "386570",
    "end": "388520"
  },
  {
    "text": "role that we want to use for application",
    "start": "388520",
    "end": "390139"
  },
  {
    "text": "our application isn't using any of the",
    "start": "390139",
    "end": "392030"
  },
  {
    "text": "services but right now but you can just",
    "start": "392030",
    "end": "393560"
  },
  {
    "text": "set the easiest demo to have it if we",
    "start": "393560",
    "end": "396169"
  },
  {
    "text": "want to add access database services",
    "start": "396169",
    "end": "397729"
  },
  {
    "text": "later",
    "start": "397729",
    "end": "398139"
  },
  {
    "text": "we could also specify any additional",
    "start": "398139",
    "end": "400580"
  },
  {
    "text": "port mappings or environment of rebels",
    "start": "400580",
    "end": "402680"
  },
  {
    "text": "but the toolkit by default will detect",
    "start": "402680",
    "end": "404599"
  },
  {
    "text": "this is a web application an open port",
    "start": "404599",
    "end": "406940"
  },
  {
    "text": "80 and set the production a spinet core",
    "start": "406940",
    "end": "409550"
  },
  {
    "text": "environment variable that's that will",
    "start": "409550",
    "end": "411770"
  },
  {
    "text": "just push polish and that's going to",
    "start": "411770",
    "end": "413270"
  },
  {
    "text": "begin our deployment process so it's",
    "start": "413270",
    "end": "416539"
  },
  {
    "text": "going to create our application load",
    "start": "416539",
    "end": "417740"
  },
  {
    "text": "balancer it's then going to use the",
    "start": "417740",
    "end": "419539"
  },
  {
    "text": "docker CLI to go and build our docker",
    "start": "419539",
    "end": "422150"
  },
  {
    "text": "image once that docker image is complete",
    "start": "422150",
    "end": "425180"
  },
  {
    "text": "it's going to log on to ECR",
    "start": "425180",
    "end": "427430"
  },
  {
    "text": "and then push our docker image to ECR",
    "start": "427430",
    "end": "430610"
  },
  {
    "text": "and with that it'll then create our",
    "start": "430610",
    "end": "432680"
  },
  {
    "text": "service on our cluster now that will",
    "start": "432680",
    "end": "435199"
  },
  {
    "text": "take it about a minute so we're going to",
    "start": "435199",
    "end": "436370"
  },
  {
    "text": "fast forward the video while that",
    "start": "436370",
    "end": "437659"
  },
  {
    "text": "happens",
    "start": "437659",
    "end": "439990"
  },
  {
    "start": "445000",
    "end": "621000"
  },
  {
    "text": "once the deployment is finished the EECS",
    "start": "445750",
    "end": "448760"
  },
  {
    "text": "cluster view comes up which is available",
    "start": "448760",
    "end": "450890"
  },
  {
    "text": "from the 80s Explorer and if we can see",
    "start": "450890",
    "end": "453890"
  },
  {
    "text": "here will refresh we have three tests",
    "start": "453890",
    "end": "456890"
  },
  {
    "text": "pending these are our far gate tests",
    "start": "456890",
    "end": "458660"
  },
  {
    "text": "that are currently being pending and",
    "start": "458660",
    "end": "459950"
  },
  {
    "text": "it's the compute resources are being",
    "start": "459950",
    "end": "461390"
  },
  {
    "text": "provisioned for those tasks so this will",
    "start": "461390",
    "end": "464240"
  },
  {
    "text": "take about a minute for those far gate",
    "start": "464240",
    "end": "465980"
  },
  {
    "text": "tests to come online so again we're",
    "start": "465980",
    "end": "467630"
  },
  {
    "text": "going too fast for the video for those",
    "start": "467630",
    "end": "468830"
  },
  {
    "text": "tests to come on now we can see we have",
    "start": "468830",
    "end": "471020"
  },
  {
    "text": "three running tests all running serving",
    "start": "471020",
    "end": "473420"
  },
  {
    "text": "our application and we have one URL",
    "start": "473420",
    "end": "474950"
  },
  {
    "text": "pointing to it you can click on that and",
    "start": "474950",
    "end": "477410"
  },
  {
    "text": "we can see here is our web application",
    "start": "477410",
    "end": "479840"
  },
  {
    "text": "that has been deployed now this was an",
    "start": "479840",
    "end": "483740"
  },
  {
    "text": "example how we could deploy a front-end",
    "start": "483740",
    "end": "485120"
  },
  {
    "text": "application but what if we also want to",
    "start": "485120",
    "end": "486980"
  },
  {
    "text": "serve is a second app project for our",
    "start": "486980",
    "end": "489410"
  },
  {
    "text": "Web API projects we can do that by",
    "start": "489410",
    "end": "492740"
  },
  {
    "text": "creating a new project",
    "start": "492740",
    "end": "495490"
  },
  {
    "text": "camels licked page my core application",
    "start": "496750",
    "end": "499730"
  },
  {
    "text": "will call this our Web API this time",
    "start": "499730",
    "end": "504860"
  },
  {
    "text": "looks like webby I project template and",
    "start": "504860",
    "end": "506750"
  },
  {
    "text": "again we're gonna have the Dockers port",
    "start": "506750",
    "end": "508160"
  },
  {
    "text": "enabled and we can then just deploy it",
    "start": "508160",
    "end": "514310"
  },
  {
    "text": "to our same cluster into our same",
    "start": "514310",
    "end": "515930"
  },
  {
    "text": "application load balancer I do that we",
    "start": "515930",
    "end": "519349"
  },
  {
    "text": "right click publish continue to us again",
    "start": "519350",
    "end": "523460"
  },
  {
    "text": "we're doing a service we're gonna select",
    "start": "523460",
    "end": "526790"
  },
  {
    "text": "the cluster we just created we're gonna",
    "start": "526790",
    "end": "529160"
  },
  {
    "text": "do it again as a far gate and leave",
    "start": "529160",
    "end": "530390"
  },
  {
    "text": "everything else of the defaults we're",
    "start": "530390",
    "end": "533210"
  },
  {
    "text": "going to create a brand new service",
    "start": "533210",
    "end": "534380"
  },
  {
    "text": "though so let's do the second service",
    "start": "534380",
    "end": "536150"
  },
  {
    "text": "running in our cluster and maybe for",
    "start": "536150",
    "end": "538430"
  },
  {
    "text": "this we don't need as many tasks maybe",
    "start": "538430",
    "end": "539750"
  },
  {
    "text": "for this one really need two tasks for",
    "start": "539750",
    "end": "541340"
  },
  {
    "text": "it go ahead push next and we'll",
    "start": "541340",
    "end": "544940"
  },
  {
    "text": "configure that load balancer for it",
    "start": "544940",
    "end": "546320"
  },
  {
    "text": "we're going to select the same existing",
    "start": "546320",
    "end": "548060"
  },
  {
    "text": "load balancer and this time we're going",
    "start": "548060",
    "end": "551090"
  },
  {
    "text": "to get a new target group for our Web",
    "start": "551090",
    "end": "553520"
  },
  {
    "text": "API and the path pattern is going to be",
    "start": "553520",
    "end": "558680"
  },
  {
    "text": "slash API so this means all requests",
    "start": "558680",
    "end": "561500"
  },
  {
    "text": "that come in to our load balancer that",
    "start": "561500",
    "end": "563660"
  },
  {
    "text": "start with slash API will go to this",
    "start": "563660",
    "end": "566120"
  },
  {
    "text": "target group which will be these Fargate",
    "start": "566120",
    "end": "568340"
  },
  {
    "text": "tasks anything else is going to go back",
    "start": "568340",
    "end": "570560"
  },
  {
    "text": "to our original web front-end so this is",
    "start": "570560",
    "end": "572480"
  },
  {
    "text": "how we can reuse the same cluster and",
    "start": "572480",
    "end": "574940"
  },
  {
    "text": "same load balancer with different",
    "start": "574940",
    "end": "576710"
  },
  {
    "text": "projects",
    "start": "576710",
    "end": "577870"
  },
  {
    "text": "but we must make sure that the health",
    "start": "577870",
    "end": "581350"
  },
  {
    "text": "check is pointing to a valid place",
    "start": "581350",
    "end": "582970"
  },
  {
    "text": "within the container so we're gonna use",
    "start": "582970",
    "end": "586300"
  },
  {
    "text": "the default one in there a API slash",
    "start": "586300",
    "end": "588430"
  },
  {
    "text": "values great again a new tax definition",
    "start": "588430",
    "end": "595510"
  },
  {
    "text": "for it and we can set a role for it",
    "start": "595510",
    "end": "598570"
  },
  {
    "text": "we're gonna leave everything else here",
    "start": "598570",
    "end": "600100"
  },
  {
    "text": "at the defaults and go ahead and publish",
    "start": "600100",
    "end": "601720"
  },
  {
    "text": "that and this is gonna go run that same",
    "start": "601720",
    "end": "604480"
  },
  {
    "text": "deployment logic that we saw before",
    "start": "604480",
    "end": "605890"
  },
  {
    "text": "using the doctor CLI to build a docker",
    "start": "605890",
    "end": "608200"
  },
  {
    "text": "image and push it to ECR well go ahead",
    "start": "608200",
    "end": "611650"
  },
  {
    "text": "and fast for this video while that",
    "start": "611650",
    "end": "613210"
  },
  {
    "text": "happens",
    "start": "613210",
    "end": "615600"
  },
  {
    "text": "and now we can see back on our cluster",
    "start": "620930",
    "end": "623940"
  },
  {
    "start": "621000",
    "end": "847000"
  },
  {
    "text": "view we have our second task and here we",
    "start": "623940",
    "end": "626700"
  },
  {
    "text": "have those two tests currently in the",
    "start": "626700",
    "end": "629370"
  },
  {
    "text": "pending state so we'll go ahead and fast",
    "start": "629370",
    "end": "632700"
  },
  {
    "text": "forward the video while those tests go",
    "start": "632700",
    "end": "634470"
  },
  {
    "text": "into the running state now our Web API",
    "start": "634470",
    "end": "637560"
  },
  {
    "text": "has its two tasks up and running and we",
    "start": "637560",
    "end": "639930"
  },
  {
    "text": "can see we have our euros down here",
    "start": "639930",
    "end": "641310"
  },
  {
    "text": "let's go ahead and click that and you",
    "start": "641310",
    "end": "643200"
  },
  {
    "text": "can see that our web api was calls on",
    "start": "643200",
    "end": "645720"
  },
  {
    "text": "the same a load balancer that our web",
    "start": "645720",
    "end": "648660"
  },
  {
    "text": "front-ends if i go back and remove this",
    "start": "648660",
    "end": "650580"
  },
  {
    "text": "part i can see here we have both our web",
    "start": "650580",
    "end": "654690"
  },
  {
    "text": "front-end and the web api going to the",
    "start": "654690",
    "end": "657360"
  },
  {
    "text": "same load balancer and using the same",
    "start": "657360",
    "end": "659730"
  },
  {
    "text": "cluster now so far we've shown how you",
    "start": "659730",
    "end": "662370"
  },
  {
    "text": "deploy web applications to ACS but",
    "start": "662370",
    "end": "666360"
  },
  {
    "text": "another feature that you can use is you",
    "start": "666360",
    "end": "668010"
  },
  {
    "text": "can also deploy just console",
    "start": "668010",
    "end": "669240"
  },
  {
    "text": "applications this is a good way to do",
    "start": "669240",
    "end": "670770"
  },
  {
    "text": "service applications things that run in",
    "start": "670770",
    "end": "673020"
  },
  {
    "text": "the background let's go ahead and create",
    "start": "673020",
    "end": "675210"
  },
  {
    "text": "a new DynCorp console application so on",
    "start": "675210",
    "end": "678360"
  },
  {
    "text": "this we're going to say add new project",
    "start": "678360",
    "end": "681500"
  },
  {
    "text": "just select a console application from",
    "start": "681500",
    "end": "683820"
  },
  {
    "text": "the dotnet core section and we're going",
    "start": "683820",
    "end": "686130"
  },
  {
    "text": "to create a console application it's",
    "start": "686130",
    "end": "687420"
  },
  {
    "text": "gonna go and list all of my as three",
    "start": "687420",
    "end": "689160"
  },
  {
    "text": "buckets",
    "start": "689160",
    "end": "689670"
  },
  {
    "text": "let's call it bucket Lister and this is",
    "start": "689670",
    "end": "698610"
  },
  {
    "text": "using s3 so I'm going to pull on the s3",
    "start": "698610",
    "end": "700860"
  },
  {
    "text": "nuga package give this sdk s3",
    "start": "700860",
    "end": "708680"
  },
  {
    "text": "okay now we have that package now",
    "start": "715560",
    "end": "718050"
  },
  {
    "text": "I already have this code written so",
    "start": "718050",
    "end": "719370"
  },
  {
    "text": "let's go ahead and copy that out here's",
    "start": "719370",
    "end": "725550"
  },
  {
    "text": "the code very simple code of using our",
    "start": "725550",
    "end": "727680"
  },
  {
    "text": "s3 client to go list our buckets and",
    "start": "727680",
    "end": "729930"
  },
  {
    "text": "print them out to the console and let's",
    "start": "729930",
    "end": "732149"
  },
  {
    "text": "now deploy this to VCS I'm going to",
    "start": "732149",
    "end": "734759"
  },
  {
    "text": "right click on that and we need to",
    "start": "734759",
    "end": "736589"
  },
  {
    "text": "enable docker support for this and we",
    "start": "736589",
    "end": "738629"
  },
  {
    "text": "can do that in Visual Studio by setting",
    "start": "738629",
    "end": "739980"
  },
  {
    "text": "add dr support once will generate our",
    "start": "739980",
    "end": "743220"
  },
  {
    "text": "docker build file you can see in that",
    "start": "743220",
    "end": "746939"
  },
  {
    "text": "docker build file is where it's gonna",
    "start": "746939",
    "end": "748769"
  },
  {
    "text": "say this is the process we were on a run",
    "start": "748769",
    "end": "752899"
  },
  {
    "text": "let's select publish container to AWS",
    "start": "752959",
    "end": "757610"
  },
  {
    "text": "now in this case this is not a process",
    "start": "757970",
    "end": "760649"
  },
  {
    "text": "that we want to run forever we just want",
    "start": "760649",
    "end": "762089"
  },
  {
    "text": "to run this process for the link it",
    "start": "762089",
    "end": "763769"
  },
  {
    "text": "takes to list our ester buckets and",
    "start": "763769",
    "end": "765269"
  },
  {
    "text": "that's when we would on deployed as a",
    "start": "765269",
    "end": "767370"
  },
  {
    "text": "task now so far we've shown deployments",
    "start": "767370",
    "end": "774269"
  },
  {
    "text": "using Fargate but let's go ahead and use",
    "start": "774269",
    "end": "775980"
  },
  {
    "text": "a cluster that I already have that has",
    "start": "775980",
    "end": "777480"
  },
  {
    "text": "some ec2 instances on there so that",
    "start": "777480",
    "end": "779249"
  },
  {
    "text": "we're gonna select that cluster and",
    "start": "779249",
    "end": "780750"
  },
  {
    "text": "choose the launch type of ec2 and so the",
    "start": "780750",
    "end": "783839"
  },
  {
    "text": "VP CL is gonna be used by the instances",
    "start": "783839",
    "end": "787439"
  },
  {
    "text": "that it's gonna be deployed to click",
    "start": "787439",
    "end": "791459"
  },
  {
    "text": "Next and here we can specify it to tasks",
    "start": "791459",
    "end": "794160"
  },
  {
    "text": "configurations we could specify to spend",
    "start": "794160",
    "end": "796379"
  },
  {
    "text": "up multiple versions of this task but",
    "start": "796379",
    "end": "798930"
  },
  {
    "text": "for this case we just want one task",
    "start": "798930",
    "end": "800370"
  },
  {
    "text": "that's gonna print out our three buckets",
    "start": "800370",
    "end": "801750"
  },
  {
    "text": "I move define our task definition and we",
    "start": "801750",
    "end": "811019"
  },
  {
    "text": "need to give it some memory that we want",
    "start": "811019",
    "end": "813329"
  },
  {
    "text": "for this a minimum amount of memory",
    "start": "813329",
    "end": "814620"
  },
  {
    "text": "we're gonna say this is pretty small it",
    "start": "814620",
    "end": "816269"
  },
  {
    "text": "just needs 128 Meg's of memory and we",
    "start": "816269",
    "end": "818879"
  },
  {
    "text": "need to give it a task role to be able",
    "start": "818879",
    "end": "820199"
  },
  {
    "text": "to access s3 so we'll use our existing",
    "start": "820199",
    "end": "822600"
  },
  {
    "text": "role there we're not gonna be exposing",
    "start": "822600",
    "end": "824819"
  },
  {
    "text": "any ports I don't even remember apples",
    "start": "824819",
    "end": "826920"
  },
  {
    "text": "to set so there's nothing in you dear",
    "start": "826920",
    "end": "828300"
  },
  {
    "text": "I'm just gonna go ahead and push publish",
    "start": "828300",
    "end": "829649"
  },
  {
    "text": "and that's gonna get and run our darker",
    "start": "829649",
    "end": "832889"
  },
  {
    "text": "build process to push that and then push",
    "start": "832889",
    "end": "835379"
  },
  {
    "text": "this image to ECR",
    "start": "835379",
    "end": "837139"
  },
  {
    "text": "so this will take that minute so we're",
    "start": "837139",
    "end": "839189"
  },
  {
    "text": "going too fast for the video while that",
    "start": "839189",
    "end": "840240"
  },
  {
    "text": "happens",
    "start": "840240",
    "end": "842540"
  },
  {
    "start": "847000",
    "end": "979000"
  },
  {
    "text": "so here's our ec2 cluster view let's go",
    "start": "847280",
    "end": "850920"
  },
  {
    "text": "look here is our task that we just",
    "start": "850920",
    "end": "852450"
  },
  {
    "text": "launched it's currently pending this",
    "start": "852450",
    "end": "854640"
  },
  {
    "text": "will launch pretty quickly because it",
    "start": "854640",
    "end": "856020"
  },
  {
    "text": "compute resources are already available",
    "start": "856020",
    "end": "858000"
  },
  {
    "text": "it's the ec2 instance in fact if i",
    "start": "858000",
    "end": "860040"
  },
  {
    "text": "refresh this it's already run to",
    "start": "860040",
    "end": "862560"
  },
  {
    "text": "completion and we can see that if we go",
    "start": "862560",
    "end": "864240"
  },
  {
    "text": "to stopped we can see if that task is",
    "start": "864240",
    "end": "866250"
  },
  {
    "text": "already run now to go see the actual",
    "start": "866250",
    "end": "869070"
  },
  {
    "text": "buckets here I can actually go look at",
    "start": "869070",
    "end": "871580"
  },
  {
    "text": "the console and let's go to cloud wash",
    "start": "871580",
    "end": "874860"
  },
  {
    "text": "logs rid of the logs view in cloud watch",
    "start": "874860",
    "end": "881840"
  },
  {
    "text": "and you can see for every one of our ECS",
    "start": "881840",
    "end": "884700"
  },
  {
    "text": "tasks out there a log group was created",
    "start": "884700",
    "end": "887310"
  },
  {
    "text": "and all of the console right lines are",
    "start": "887310",
    "end": "890190"
  },
  {
    "text": "automatically written to that so here's",
    "start": "890190",
    "end": "892290"
  },
  {
    "text": "our bucket list ER and then look at the",
    "start": "892290",
    "end": "895500"
  },
  {
    "text": "stream here's all of my s 3 buckets",
    "start": "895500",
    "end": "897960"
  },
  {
    "text": "there so that's how you can get logging",
    "start": "897960",
    "end": "900930"
  },
  {
    "text": "information from your cluster from your",
    "start": "900930",
    "end": "903180"
  },
  {
    "text": "containers by these and cloud which logs",
    "start": "903180",
    "end": "905040"
  },
  {
    "text": "in writing to the console now one last",
    "start": "905040",
    "end": "909240"
  },
  {
    "text": "thing I wanted to show you is in every",
    "start": "909240",
    "end": "911190"
  },
  {
    "text": "one of our deployments we always had the",
    "start": "911190",
    "end": "912810"
  },
  {
    "text": "easiest tools defaults file that saved",
    "start": "912810",
    "end": "915690"
  },
  {
    "text": "our deployment settings and it also",
    "start": "915690",
    "end": "918000"
  },
  {
    "text": "configured our application deployed to",
    "start": "918000",
    "end": "919860"
  },
  {
    "text": "the COI",
    "start": "919860",
    "end": "920340"
  },
  {
    "text": "in fact if we go look at the cs proj",
    "start": "920340",
    "end": "922890"
  },
  {
    "text": "file when we had that checked this was",
    "start": "922890",
    "end": "926070"
  },
  {
    "text": "added to each of our projects and that",
    "start": "926070",
    "end": "928740"
  },
  {
    "text": "means now if I go to the command line",
    "start": "928740",
    "end": "932270"
  },
  {
    "text": "will make that little bigger I can now",
    "start": "934370",
    "end": "937050"
  },
  {
    "text": "type to hotnet ACS help and there's",
    "start": "937050",
    "end": "942300"
  },
  {
    "text": "those same deployment commands so the",
    "start": "942300",
    "end": "943950"
  },
  {
    "text": "same thing we did in Visual Studio we",
    "start": "943950",
    "end": "945510"
  },
  {
    "text": "can also do from the command line so I",
    "start": "945510",
    "end": "947400"
  },
  {
    "text": "could rerun the same deployment they",
    "start": "947400",
    "end": "949200"
  },
  {
    "text": "saying dot net you see us deploy tasks",
    "start": "949200",
    "end": "953520"
  },
  {
    "text": "and I don't need to specify any",
    "start": "953520",
    "end": "955170"
  },
  {
    "text": "parameters because everything was saved",
    "start": "955170",
    "end": "956700"
  },
  {
    "text": "in that defaults file and that will run",
    "start": "956700",
    "end": "959310"
  },
  {
    "text": "and when we run the same deployment",
    "start": "959310",
    "end": "961320"
  },
  {
    "text": "logic that we did in Visual Studio in",
    "start": "961320",
    "end": "963030"
  },
  {
    "text": "this video we learn how to use dotnet",
    "start": "963030",
    "end": "965790"
  },
  {
    "text": "core with ECS to deploy container",
    "start": "965790",
    "end": "968070"
  },
  {
    "text": "applications thanks for watching",
    "start": "968070",
    "end": "971660"
  },
  {
    "text": "[Music]",
    "start": "971660",
    "end": "981139"
  }
]