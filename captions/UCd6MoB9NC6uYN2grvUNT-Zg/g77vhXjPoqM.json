[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "good afternoon everybody thanks for showing up for the last session of today compared to my",
    "start": "3799",
    "end": "11250"
  },
  {
    "text": "colleagues who were talking about all the machine learning and artificial intelligence that we do at Amazon I",
    "start": "11250",
    "end": "17369"
  },
  {
    "text": "might have two less colorful slides but I'm talking about how you can run your",
    "start": "17369",
    "end": "22590"
  },
  {
    "text": "enterprise workloads so the title of this presentation is getting started with containers in the cloud",
    "start": "22590",
    "end": "29519"
  },
  {
    "text": "my name is Frank I'm a DevOps engineer Software Architect",
    "start": "29519",
    "end": "34620"
  },
  {
    "text": "I work for AWS as a Technical Evangelist and what I want to do in the next 45",
    "start": "34620",
    "end": "41340"
  },
  {
    "text": "minutes is talk to you about containers talk to you about micro services then",
    "start": "41340",
    "end": "47250"
  },
  {
    "text": "explain you a little bit how you can run your micro services in containers on ECS",
    "start": "47250",
    "end": "52320"
  },
  {
    "text": "which is one of our container management services then talk about eks and time",
    "start": "52320",
    "end": "58770"
  },
  {
    "text": "permitting talk about service measures and CN CF projects that run on top of",
    "start": "58770",
    "end": "64728"
  },
  {
    "text": "eks now let's do first things first",
    "start": "64729",
    "end": "70260"
  },
  {
    "start": "67000",
    "end": "336000"
  },
  {
    "text": "and usually we do a demo at the end of the presentation and if we talk about",
    "start": "70260",
    "end": "76159"
  },
  {
    "text": "containers very often we talk about isolation versus virtualization and we",
    "start": "76159",
    "end": "83189"
  },
  {
    "text": "try to explain what namespaces are in Linux we talk about resource limits and",
    "start": "83189",
    "end": "88619"
  },
  {
    "text": "we try to explain what cgroups are we talk about the fact that those containers are sometimes very transient",
    "start": "88619",
    "end": "95970"
  },
  {
    "text": "or volatile they disappear and we have to care for this and then we like to",
    "start": "95970",
    "end": "101549"
  },
  {
    "text": "mention that they provide an extreme scale so they scale extremely well and very often you see this on powerpoints",
    "start": "101549",
    "end": "108570"
  },
  {
    "text": "and I thought since you've seen so many powerpoints already I'll try to show you this hopefully less than 10 minutes and",
    "start": "108570",
    "end": "115829"
  },
  {
    "text": "then we switch back to the slides so",
    "start": "115829",
    "end": "120619"
  },
  {
    "text": "okay this is a shell on my local laptop and what I'm doing is I am connecting to",
    "start": "124659",
    "end": "132910"
  },
  {
    "text": "the cloud that's easy to instance running in the cloud it's actually",
    "start": "132910",
    "end": "139239"
  },
  {
    "text": "running in Frankfurt and that's the remote instance that I want to use to show you a little bit about container",
    "start": "139239",
    "end": "145890"
  },
  {
    "text": "concepts now if we do if we want to start a container we say docker run now",
    "start": "145890",
    "end": "153430"
  },
  {
    "text": "what I want to do is I'm running an ec2 instance which is running under Amazon Linux and what I want to do is under",
    "start": "153430",
    "end": "160989"
  },
  {
    "text": "under Amazon Linux I want to start another container which is using another Linux so I say docker run CentOS and on",
    "start": "160989",
    "end": "169569"
  },
  {
    "text": "this centers I want to say Who am I and it responds with roots so this container",
    "start": "169569",
    "end": "176079"
  },
  {
    "text": "is running as root the interesting thing here is I run a different Linux but I never boot it up I never have to wait",
    "start": "176079",
    "end": "182110"
  },
  {
    "text": "until it gets started because it's a container that is three well that is using the kernel that we already have",
    "start": "182110",
    "end": "187750"
  },
  {
    "text": "for running the Amazon Linux now let's",
    "start": "187750",
    "end": "192850"
  },
  {
    "text": "try something else and let's run a container which is running in the background this is why I give it this",
    "start": "192850",
    "end": "199090"
  },
  {
    "text": "mean at minus D switch for a demon and it needs a port mapping and actually",
    "start": "199090",
    "end": "204250"
  },
  {
    "text": "it's using a port four times nine and I want to map this four times nine port it's running under my account so you can",
    "start": "204250",
    "end": "211840"
  },
  {
    "text": "find it on docker hub if you want to replicate this this this little exercise",
    "start": "211840",
    "end": "217660"
  },
  {
    "text": "you could do it and the container is called micro because I was paying a lot",
    "start": "217660",
    "end": "222730"
  },
  {
    "text": "of attention to make it small now this container is it's running now",
    "start": "222730",
    "end": "228459"
  },
  {
    "text": "in the background and if I try to talk to it if I say curl localhost four times",
    "start": "228459",
    "end": "237250"
  },
  {
    "text": "nine it's responding so it sends something back that looks almost like a web page and if I find my I P address",
    "start": "237250",
    "end": "245230"
  },
  {
    "text": "that looks like this and I try to access it now from here",
    "start": "245230",
    "end": "254340"
  },
  {
    "text": "from my laptop and I give it four times nine",
    "start": "254340",
    "end": "260280"
  },
  {
    "text": "you see it's responding it's responding with its IP address it's responding with",
    "start": "260280",
    "end": "265470"
  },
  {
    "text": "its hostname and it's counting if I repeat this it keeps counting and not",
    "start": "265470",
    "end": "273000"
  },
  {
    "text": "sure if you what you think about the counting probably you think that's German engineering now let's try and",
    "start": "273000",
    "end": "279570"
  },
  {
    "text": "find out why is it why is it doing that we can check the log files with docker",
    "start": "279570",
    "end": "286050"
  },
  {
    "text": "locks and now I need the ID of the container which is printed here so I",
    "start": "286050",
    "end": "292020"
  },
  {
    "text": "need to get this hole ID and don't need to get all of this I just have to have",
    "start": "292020",
    "end": "297419"
  },
  {
    "text": "it unique so let's look at the log files and if you see this what happens is these are the requests already saw the",
    "start": "297419",
    "end": "304620"
  },
  {
    "text": "request that I send by hitting it with a browser and then it tries to get the",
    "start": "304620",
    "end": "310200"
  },
  {
    "text": " I con this little thing here this is what the browser does and this is why we are counting like two invocations if",
    "start": "310200",
    "end": "317729"
  },
  {
    "text": "I click once in a browser the other thing is if I do a curl you see it says",
    "start": "317729",
    "end": "323760"
  },
  {
    "text": "twelve and if I do a curl again it says thirteen fourteen fifteen and so on so",
    "start": "323760",
    "end": "330419"
  },
  {
    "text": "it's counting okay if I really hit it directly without without the browser now",
    "start": "330419",
    "end": "337320"
  },
  {
    "start": "336000",
    "end": "811000"
  },
  {
    "text": "if you want to have more insight into this container I can look into this",
    "start": "337320",
    "end": "342330"
  },
  {
    "text": "container I say docker execute I wanted to M&L it should be interactive and I",
    "start": "342330",
    "end": "348900"
  },
  {
    "text": "need to I need the same container again which is this one a five so I say one a",
    "start": "348900",
    "end": "355289"
  },
  {
    "text": "and I want to run a shell now I'm in the",
    "start": "355289",
    "end": "360570"
  },
  {
    "text": "container and in the container I want to compare this being in the container with",
    "start": "360570",
    "end": "369270"
  },
  {
    "text": "another terminal",
    "start": "369270",
    "end": "372289"
  },
  {
    "text": "let's make this a little bit taller it's not resizing okay anyway this is",
    "start": "376730",
    "end": "386110"
  },
  {
    "text": "not too important it's more important that you see this now in the container",
    "start": "386110",
    "end": "391150"
  },
  {
    "text": "you see surprisingly there is only three processes running there is this little web server running that I was showing",
    "start": "391150",
    "end": "397479"
  },
  {
    "text": "you there's the shell running that I need to well to peek into the container and there's the top running that I'm",
    "start": "397479",
    "end": "403630"
  },
  {
    "text": "doing right now so there is a filesystem in this container and there is a whole",
    "start": "403630",
    "end": "410199"
  },
  {
    "text": "network stack so if I say if config - a you see that there is a network and if I",
    "start": "410199",
    "end": "417220"
  },
  {
    "text": "ping some address from a server that is running under my desk in Germany it's",
    "start": "417220",
    "end": "422950"
  },
  {
    "text": "fully connected to the network so this is all so far this container seems a",
    "start": "422950",
    "end": "428290"
  },
  {
    "text": "little bit almost like a VirtualBox instance now and a lot of people say what's the real difference",
    "start": "428290",
    "end": "433840"
  },
  {
    "text": "the real difference and part of the magic that is done with the namespaces",
    "start": "433840",
    "end": "438910"
  },
  {
    "text": "comes if I let's try something",
    "start": "438910",
    "end": "444720"
  },
  {
    "text": "if I get another shell that is also running on the cloud now if I look here",
    "start": "452280",
    "end": "459660"
  },
  {
    "text": "for the for the same process if I grab",
    "start": "459660",
    "end": "465090"
  },
  {
    "text": "for web server you see the same process I can see on the cloud instance outside",
    "start": "465090",
    "end": "472470"
  },
  {
    "text": "of the container so this is in the container if I do the top I see the web server running and this is",
    "start": "472470",
    "end": "479790"
  },
  {
    "text": "outside of the container which is not at all like a little box image now now if I",
    "start": "479790",
    "end": "486270"
  },
  {
    "text": "take this process ID and if I say sudo",
    "start": "486270",
    "end": "491460"
  },
  {
    "text": "kill minus 9 and give it sorry give it this process ID",
    "start": "491460",
    "end": "501020"
  },
  {
    "text": "here still running if I execute this on the host machine well it's gone so my",
    "start": "502940",
    "end": "511580"
  },
  {
    "text": "whole container is gone and that's the important thing to remember if we talk about isolation versus virtualization we",
    "start": "511580",
    "end": "519440"
  },
  {
    "text": "only have namespaces that help us to isolate those processes another thing is",
    "start": "519440",
    "end": "525110"
  },
  {
    "text": "if I want to run a command like docker run on this Santos container and I want",
    "start": "525110",
    "end": "533750"
  },
  {
    "text": "to say something like uptime those containers they start up really quickly now so the uptime of such a container should",
    "start": "533750",
    "end": "540410"
  },
  {
    "text": "be very small if we do this it says uptime is two days again this is one of",
    "start": "540410",
    "end": "546740"
  },
  {
    "text": "the limitations that we have for containers because it's just isolating but it's not completely booting up",
    "start": "546740",
    "end": "553190"
  },
  {
    "text": "another operating system so this uptime command goes back to the kernel that is running on the Amazon Linux so I think",
    "start": "553190",
    "end": "560870"
  },
  {
    "text": "you get a feeling about those namespaces and about isolation the C groups are a",
    "start": "560870",
    "end": "566450"
  },
  {
    "text": "bit more difficult to show but if I say docker run and look for the help file",
    "start": "566450",
    "end": "572090"
  },
  {
    "text": "and I say grab CPU you see the switch that I could provide for such for",
    "start": "572090",
    "end": "579140"
  },
  {
    "text": "running such a container that would limit the CPU resources and the same is",
    "start": "579140",
    "end": "584180"
  },
  {
    "text": "obviously working with the memory limits that I could sit here for a container so",
    "start": "584180",
    "end": "590960"
  },
  {
    "text": "we understand the namespaces for isolation we understand the C groups for",
    "start": "590960",
    "end": "596090"
  },
  {
    "text": "setting resource limits the other thing that I like to emphasize is if you if",
    "start": "596090",
    "end": "601790"
  },
  {
    "text": "you look at my container and that's the one I was just running this micro container it's 8 megabyte in size so",
    "start": "601790",
    "end": "609260"
  },
  {
    "text": "it's incredibly small if you do a JDK download it's like 20 times bigger than",
    "start": "609260",
    "end": "615650"
  },
  {
    "text": "this container and while you've already seen the trick it's not running a JDK it's not running Java it's running a",
    "start": "615650",
    "end": "622700"
  },
  {
    "text": "static aesthetic Python binary and then executing this this little webserver",
    "start": "622700",
    "end": "628370"
  },
  {
    "text": "ok so we understand about those C groups as well and we see the size of those",
    "start": "628370",
    "end": "634310"
  },
  {
    "text": "font Naina's now going back to the command where I studied a container it was this",
    "start": "634310",
    "end": "642600"
  },
  {
    "text": "one and let's talk about scalability and maybe I have to help me with this",
    "start": "642600",
    "end": "648119"
  },
  {
    "text": "justice oops",
    "start": "648119",
    "end": "650930"
  },
  {
    "text": "this involves some coding let's try and start more than one container let's",
    "start": "653300",
    "end": "660750"
  },
  {
    "text": "start maybe free container or two containers and let's do this now the",
    "start": "660750",
    "end": "666600"
  },
  {
    "text": "port mapping here it won't work if I run two containers with this loop so I replace the minus P with a capital P and",
    "start": "666600",
    "end": "674490"
  },
  {
    "text": "the capital P well means do the port mapping but I don't really care about which port you map it onto so if my bash",
    "start": "674490",
    "end": "682470"
  },
  {
    "text": "scripting is good enough this should start as two containers good or not cool or not you don't look too impressed how",
    "start": "682470",
    "end": "690810"
  },
  {
    "text": "many virtual boxed instances did you ever start on one machine two three four",
    "start": "690810",
    "end": "696740"
  },
  {
    "text": "you say - okay I try to beat you over to a box instances and I want to start like",
    "start": "696740",
    "end": "704579"
  },
  {
    "text": "how about one container for each of you we have 200 seeds there is 30 people",
    "start": "704579",
    "end": "709950"
  },
  {
    "text": "standing around here how about 230 containers let's look at this now ladies",
    "start": "709950",
    "end": "718980"
  },
  {
    "text": "and gentlemen this is actually happening every line that you see is the ID of a container that is starting up you can",
    "start": "718980",
    "end": "725970"
  },
  {
    "text": "count like 21 22 23 it's a synchronous call because it's my",
    "start": "725970",
    "end": "732240"
  },
  {
    "text": "for loop so I can start maybe free containers in one second and you've never started that many well",
    "start": "732240",
    "end": "738600"
  },
  {
    "text": "VirtualBox instances on one machine now that's a big difference if you still don't really think it is a big",
    "start": "738600",
    "end": "744839"
  },
  {
    "text": "difference between having virtualization where you're booting operating system and just running containers so we",
    "start": "744839",
    "end": "752130"
  },
  {
    "text": "understand about scaling we've seen the size we understand about C groups and",
    "start": "752130",
    "end": "757470"
  },
  {
    "text": "the namespaces that's most important that's all you need to know about containers then you have the basics and",
    "start": "757470",
    "end": "762709"
  },
  {
    "text": "then let me change here and just say",
    "start": "762709",
    "end": "768310"
  },
  {
    "text": "docker PS you see all those containers running and if I say docker PS and count",
    "start": "768310",
    "end": "775960"
  },
  {
    "text": "the output it's hundred twenty two three hundred twenty nine so they will be",
    "start": "775960",
    "end": "781360"
  },
  {
    "text": "starting up now what if something goes wrong the answer is it's running in the cloud I don't really care this is why I",
    "start": "781360",
    "end": "787779"
  },
  {
    "text": "want to use the cloud now to run those experiments in a quick way and in a cheap way if it fails I would just shut",
    "start": "787779",
    "end": "794860"
  },
  {
    "text": "down the machine that's why I'm not doing it on my laptop because I still need my laptop for the powerpoints",
    "start": "794860",
    "end": "801360"
  },
  {
    "text": "talking about powerpoints let me switch back to the slides and let's talk about",
    "start": "801360",
    "end": "811110"
  },
  {
    "start": "811000",
    "end": "871000"
  },
  {
    "text": "micro-services because this is most often what we want to do now these days we want to run micro services we want to",
    "start": "811110",
    "end": "818500"
  },
  {
    "text": "implement the micro services architecture and the first question obviously is what are micro services and",
    "start": "818500",
    "end": "824560"
  },
  {
    "text": "there's a pretty good definition that comes from Martin Fowler and he says it's a suite of small services they all",
    "start": "824560",
    "end": "832240"
  },
  {
    "text": "run in their own process and they own their own data that is very important and they communicate with each other",
    "start": "832240",
    "end": "839020"
  },
  {
    "text": "using a lightweight mechanism I think Martin Fowler is one of the experts if",
    "start": "839020",
    "end": "845560"
  },
  {
    "text": "you talk about micro services who's the guy that we probably most often",
    "start": "845560",
    "end": "851290"
  },
  {
    "text": "associate with micro services that was really pushing this in IT any names",
    "start": "851290",
    "end": "858960"
  },
  {
    "text": "well it's I think it's Adrienne Co craft he was pushing this in Netflix so this",
    "start": "859380",
    "end": "865350"
  },
  {
    "text": "was the first company that where I took note of that they're really going for a",
    "start": "865350",
    "end": "870900"
  },
  {
    "text": "micro-services architecture what I want to do is I want to show you like one",
    "start": "870900",
    "end": "876210"
  },
  {
    "start": "871000",
    "end": "1146000"
  },
  {
    "text": "minute 30 statement that Adrienne Koch raft was doing on video talking about",
    "start": "876210",
    "end": "881340"
  },
  {
    "text": "the problems how we get to micro services and what were the reasons why we couldn't have micro services like 5",
    "start": "881340",
    "end": "888210"
  },
  {
    "text": "or 10 years ago it's a short video one minute we watch it together then I tell",
    "start": "888210",
    "end": "894210"
  },
  {
    "text": "you a little bit more about other restrictions and then we see about how can we really implement those micro",
    "start": "894210",
    "end": "900600"
  },
  {
    "text": "services trading a specific concept so",
    "start": "900600",
    "end": "907260"
  },
  {
    "text": "this talks on the evolution of business logic as we went from monoliths through micro services and now we're looking at",
    "start": "907260",
    "end": "913980"
  },
  {
    "text": "functions back about 10 years ago we had monoliths when we tried to split them up",
    "start": "913980",
    "end": "919440"
  },
  {
    "text": "we found that it was a lot of hard work the networks were too slow the CPUs were",
    "start": "919440",
    "end": "924870"
  },
  {
    "text": "too slow and the messaging protocols we used were based on XML and soap and they were heavyweight so when we tried to",
    "start": "924870",
    "end": "931530"
  },
  {
    "text": "split things up we ended up with fairly large services which had a lot of",
    "start": "931530",
    "end": "937140"
  },
  {
    "text": "functionality and we had a relatively small number of monolithic services that we built out moving forward a bit what",
    "start": "937140",
    "end": "945810"
  },
  {
    "text": "we found was that CPUs got a lot faster networks got a lot faster and we moved a much more efficient protocols so it's",
    "start": "945810",
    "end": "952800"
  },
  {
    "text": "maybe a hundred or a thousand times more efficient now to make calls between services that let us take our monolithic",
    "start": "952800",
    "end": "959700"
  },
  {
    "text": "services and break them up into micro services those services formed a fairly",
    "start": "959700",
    "end": "965070"
  },
  {
    "text": "complex looking network with a lot of messages flowing backwards and forward between them you can see here a service",
    "start": "965070",
    "end": "972810"
  },
  {
    "text": "network and service mesh where we go from the edge we flow through many layers of services to reach on the right",
    "start": "972810",
    "end": "979140"
  },
  {
    "text": "hand side storage services and caches now we take that environment we think",
    "start": "979140",
    "end": "986700"
  },
  {
    "text": "about the way that these services are becoming more standardized so rather than building all these services",
    "start": "986700",
    "end": "992370"
  },
  {
    "text": "ourselves we're starting to use off-the-shelf services that are scaled they're highly available and they come",
    "start": "992370",
    "end": "997770"
  },
  {
    "text": "from AWS so we can sqs dynamodb Kinesis SNS and s3 and we feed them all from the",
    "start": "997770",
    "end": "1004700"
  },
  {
    "text": "api gateway the micro services that we built in between these provide the is",
    "start": "1004700",
    "end": "1010550"
  },
  {
    "text": "where the business logic lives so if we look at that business logic that's the glue between the bricks and we're now",
    "start": "1010550",
    "end": "1017630"
  },
  {
    "text": "starting to split that glue up and form individual functions that are really",
    "start": "1017630",
    "end": "1023630"
  },
  {
    "text": "just connecting these services and I've drawn this grayed out because they're not actually running until there's",
    "start": "1023630",
    "end": "1029089"
  },
  {
    "text": "something work for them to do you get a request coming in on the gateway and it gets routed through a few functions and",
    "start": "1029089",
    "end": "1035240"
  },
  {
    "text": "finds its way to particular set of services",
    "start": "1035240",
    "end": "1039490"
  },
  {
    "text": "[Music]",
    "start": "1041430",
    "end": "1044680"
  },
  {
    "text": "okay I think this was a really good explanation about some of the problems that we faced for building micro",
    "start": "1047610",
    "end": "1054480"
  },
  {
    "text": "services that I put here in the middle and the hardware and network so it's like the network protocols that we use",
    "start": "1054480",
    "end": "1060840"
  },
  {
    "text": "the cpu speed and network bandwidth and latency there is more to it",
    "start": "1060840",
    "end": "1065850"
  },
  {
    "text": "if you look at the left hand side what I put under software architecture is the question if you go for containers if you",
    "start": "1065850",
    "end": "1072450"
  },
  {
    "text": "run your micro services in a container like I did how do you run those containers across house the other",
    "start": "1072450",
    "end": "1078510"
  },
  {
    "text": "question is if you have a data store per micro service you're probably facing running a lot of data bases so maybe",
    "start": "1078510",
    "end": "1085650"
  },
  {
    "text": "some micro services do better with a relational database other micro services",
    "start": "1085650",
    "end": "1090780"
  },
  {
    "text": "they do better with a no SQL database and maybe other services do better with",
    "start": "1090780",
    "end": "1096450"
  },
  {
    "text": "with a graph database and somebody has to run and operate and patch all those",
    "start": "1096450",
    "end": "1102210"
  },
  {
    "text": "data bases and then if you look on the right-hand side what I put under tools is if you need to build and deploy this",
    "start": "1102210",
    "end": "1109830"
  },
  {
    "text": "probably your maven package deploy doesn't cut it anymore because now you have to deal with dozens of services so",
    "start": "1109830",
    "end": "1117150"
  },
  {
    "text": "all these micro Services strategy cutting a monolid into micro services in my opinion increases the demand for",
    "start": "1117150",
    "end": "1125760"
  },
  {
    "text": "other services like lower level infrastructure services that you can either operate yourself which requires a",
    "start": "1125760",
    "end": "1132540"
  },
  {
    "text": "lot of knowledge and probably people or you can use flower services to to to",
    "start": "1132540",
    "end": "1138930"
  },
  {
    "text": "have them running this is why I think this is another reason why you probably want to run your micro services in the",
    "start": "1138930",
    "end": "1146100"
  },
  {
    "start": "1146000",
    "end": "1231000"
  },
  {
    "text": "cloud so apart from these technical challenges we face organizational",
    "start": "1146100",
    "end": "1151620"
  },
  {
    "text": "challenges now hands up who has ever heard of Conway's law",
    "start": "1151620",
    "end": "1157669"
  },
  {
    "text": "that's maybe 120 percent of you so Conway once said and to be honest I",
    "start": "1158080",
    "end": "1164920"
  },
  {
    "text": "didn't believe this at the beginning and then I was in many projects and now I strongly believe this so mr. Conway once said that if you",
    "start": "1164920",
    "end": "1172900"
  },
  {
    "text": "build software in an organization the structure of the software will resemble",
    "start": "1172900",
    "end": "1178750"
  },
  {
    "text": "the communication structure of your organization that means if you're building software in an highly highly",
    "start": "1178750",
    "end": "1186790"
  },
  {
    "text": "hierarchical big organization you probably end up with a monolith now understanding this the real question is",
    "start": "1186790",
    "end": "1194100"
  },
  {
    "text": "what can you do I mean what if you want to do micro services but you're this big monolithic bit big hierarchical software",
    "start": "1194100",
    "end": "1201970"
  },
  {
    "text": "company and even fewer people know about this inverse Conway maneuver that",
    "start": "1201970",
    "end": "1208060"
  },
  {
    "text": "basically says well then you have to adapt your organization first of all and have smaller teams that are independent",
    "start": "1208060",
    "end": "1215650"
  },
  {
    "text": "from each other that work independently and work in a more agile way and this is the only way to build a proper a good",
    "start": "1215650",
    "end": "1222250"
  },
  {
    "text": "micro services architecture and this is what we do at Amazon and you've probably heard of those two Pizza teams now",
    "start": "1222250",
    "end": "1229860"
  },
  {
    "text": "having said that let's talk about running containers at scale now I did",
    "start": "1229860",
    "end": "1235510"
  },
  {
    "start": "1231000",
    "end": "1336000"
  },
  {
    "text": "this already with my for loop didn't I well I didn't to be honest that's not really running containers at scale this",
    "start": "1235510",
    "end": "1241450"
  },
  {
    "text": "is just showing you scalability of containers on one host but it's not running containers at scale so what can",
    "start": "1241450",
    "end": "1248740"
  },
  {
    "text": "you do the answer is since the very beginning we had customers running docker on AC - that's exactly what I did",
    "start": "1248740",
    "end": "1255520"
  },
  {
    "text": "for you - to show you but there were pain points and actually these pain points exactly where I stopped with my",
    "start": "1255520",
    "end": "1263170"
  },
  {
    "text": "demonstration and I'm not afraid to tell you this because many many presentations",
    "start": "1263170",
    "end": "1268660"
  },
  {
    "text": "they stopped right here but we start here and we talk about those pain points like how about scheduling how about",
    "start": "1268660",
    "end": "1274900"
  },
  {
    "text": "placing those containers managing and deploying them all this is really",
    "start": "1274900",
    "end": "1280240"
  },
  {
    "text": "difficult and I didn't show you this in in this live demo so our customers wanted something that helped them to",
    "start": "1280240",
    "end": "1287380"
  },
  {
    "text": "overcome those pain points managing containers at scale is heart",
    "start": "1287380",
    "end": "1292559"
  },
  {
    "text": "containers are a good solution for our microservices architecture but then",
    "start": "1292559",
    "end": "1297570"
  },
  {
    "text": "managing those containers at scale becomes incredibly hard if you think about you're running like 29 containers",
    "start": "1297570",
    "end": "1304890"
  },
  {
    "text": "already and you need to place container number 30 which would be the adequate host with the best resources to put it",
    "start": "1304890",
    "end": "1312299"
  },
  {
    "text": "that's nothing that you can decide easily oops those containers I've seen",
    "start": "1312299",
    "end": "1318090"
  },
  {
    "text": "you how quickly they can I've shown you how quickly they can disappear simple kill or something else a memory thing",
    "start": "1318090",
    "end": "1324030"
  },
  {
    "text": "could make them disappear how do you deal I'm with this and then having such",
    "start": "1324030",
    "end": "1329220"
  },
  {
    "text": "an orchestration system around those containers at scale again is is complex and we need to understand this so to",
    "start": "1329220",
    "end": "1338100"
  },
  {
    "start": "1336000",
    "end": "1486000"
  },
  {
    "text": "cope with this we built ECS for you it's elastic container service and it's a",
    "start": "1338100",
    "end": "1344820"
  },
  {
    "text": "highly scalable container management system or container orchestration system it does cluster management and it comes",
    "start": "1344820",
    "end": "1352440"
  },
  {
    "text": "with a deep integration into other AWS services and you can use load balancers",
    "start": "1352440",
    "end": "1358679"
  },
  {
    "text": "that work on a container level and probably and that's one of the core messages here this is the easiest way to",
    "start": "1358679",
    "end": "1365340"
  },
  {
    "text": "run your containers at scale in the Amazon Cloud so that's something to to",
    "start": "1365340",
    "end": "1371940"
  },
  {
    "text": "remember on a more technical level it looks like this we have those ec2 instances that you see",
    "start": "1371940",
    "end": "1379230"
  },
  {
    "text": "in the middle on those ec2 instances we have tasks running based on a task",
    "start": "1379230",
    "end": "1384750"
  },
  {
    "text": "definition and such a task definition is a blueprint for your application each",
    "start": "1384750",
    "end": "1389850"
  },
  {
    "text": "time you launch such a task on Amazon ECS you specify a task definition and",
    "start": "1389850",
    "end": "1395250"
  },
  {
    "text": "you specify which container you want to run how many instances you need what is the port mapping remember my - p99",
    "start": "1395250",
    "end": "1402799"
  },
  {
    "text": "exactly this and other parameters so this is what you specify and there's",
    "start": "1402799",
    "end": "1408090"
  },
  {
    "text": "also an ECS agent running on our ec2 instances and this ECS agent is starting",
    "start": "1408090",
    "end": "1415559"
  },
  {
    "text": "and stopping the containers and it's communicating with Amazon ECS and I this is the s agent is open-source if",
    "start": "1415559",
    "end": "1423450"
  },
  {
    "text": "you want to use it you can build your own orchestration system around it I don't really recommend it because it's a",
    "start": "1423450",
    "end": "1429960"
  },
  {
    "text": "it's a very labor some tasks but in theory you could do this now a lot of",
    "start": "1429960",
    "end": "1437490"
  },
  {
    "text": "people are using this system and some people report it back to as well this is good this is solid it makes a lot of",
    "start": "1437490",
    "end": "1443610"
  },
  {
    "text": "sense and we enjoyed the tight integration to our other Amazon services but it's also the the thing that they",
    "start": "1443610",
    "end": "1452430"
  },
  {
    "text": "have to manage the ec2 ends instances bothered some people and they said wouldn't it be cool to have less control",
    "start": "1452430",
    "end": "1458940"
  },
  {
    "text": "over those ec2 instances and couldn't could you manage them for us it's it's",
    "start": "1458940",
    "end": "1464910"
  },
  {
    "text": "your choice it could be a good thing that you are in control of those ec2 instances you can select you know can",
    "start": "1464910",
    "end": "1471210"
  },
  {
    "text": "select a size you can select the type you could use the Windows instance so all this is your control but some",
    "start": "1471210",
    "end": "1477180"
  },
  {
    "text": "customers says no no I don't want this all I want to do is run my containers and this is why we sorry going the wrong",
    "start": "1477180",
    "end": "1486720"
  },
  {
    "text": "way and this is what we built far gate for you now the important thing about",
    "start": "1486720",
    "end": "1491820"
  },
  {
    "text": "far gage to know is that it's not really a service that you will find in the AWS",
    "start": "1491820",
    "end": "1497460"
  },
  {
    "text": "console it's a launch type so if you decide to go for ECS you can also decide",
    "start": "1497460",
    "end": "1503190"
  },
  {
    "text": "to go for far gate and then we do the management of the underlying hosts for you and this is what a lot of people",
    "start": "1503190",
    "end": "1509730"
  },
  {
    "text": "want so I'm a big fan of containers but I don't really want to manage to Austin I want to start and run my containers so",
    "start": "1509730",
    "end": "1516180"
  },
  {
    "text": "you give it a task definition you set the resource limits for this task and that's it",
    "start": "1516180",
    "end": "1521340"
  },
  {
    "text": "off you go and that's a really good solution for a lot of customers now",
    "start": "1521340",
    "end": "1527270"
  },
  {
    "text": "having explained this again it's you choose ECS you choose the orchestration",
    "start": "1527270",
    "end": "1532590"
  },
  {
    "text": "tool there's the second one and I will come to this in a minute and then you choose to launch type you go for ec2 you",
    "start": "1532590",
    "end": "1540480"
  },
  {
    "text": "bring the worker nodes you care about your ec2 instances or you switch to",
    "start": "1540480",
    "end": "1545880"
  },
  {
    "text": "Fargate you say I want Fargate launch and then we provision this for you and all you do is run your containers within",
    "start": "1545880",
    "end": "1553340"
  },
  {
    "text": "the specified resource limits there's another second service that that I will",
    "start": "1553340",
    "end": "1559070"
  },
  {
    "text": "talk about it's called eks elastic on the container service for kubernetes and also for this service you can choose",
    "start": "1559070",
    "end": "1566360"
  },
  {
    "text": "between bringing your instances yourself the ec2 instances and in the future it's",
    "start": "1566360",
    "end": "1572480"
  },
  {
    "text": "announced it's not available yet you will be able to choose for Fargate as well and then we do the management of",
    "start": "1572480",
    "end": "1579140"
  },
  {
    "text": "those nodes now the question is is CCS used a lot and the answer is yes we have",
    "start": "1579140",
    "end": "1586430"
  },
  {
    "text": "actually very big customers you see now I'm stuck here I don't really know why",
    "start": "1586430",
    "end": "1593810"
  },
  {
    "text": "oh my god trying it out of this",
    "start": "1593810",
    "end": "1602440"
  },
  {
    "start": "1601000",
    "end": "1651000"
  },
  {
    "text": "maybe it's gone let's see yeah okay so segment is a company",
    "start": "1603229",
    "end": "1611610"
  },
  {
    "text": "working with startup marketing data and they process more than one quarter of a",
    "start": "1611610",
    "end": "1617610"
  },
  {
    "text": "million of events per second and that's a huge number and they run on ECS almost",
    "start": "1617610",
    "end": "1623820"
  },
  {
    "text": "entirely and they have auto scaling enabled for ECS so they scale up to thousands of nodes in one cluster now",
    "start": "1623820",
    "end": "1633809"
  },
  {
    "text": "this actually could be the shortest presentation here ever half an hour happy days because we have a good",
    "start": "1633809",
    "end": "1640289"
  },
  {
    "text": "solution for running your containers at scale and I already told you that it's probably the easiest solution that we",
    "start": "1640289",
    "end": "1647039"
  },
  {
    "text": "can offer but then there was something as called kubernetes kubernetes showed",
    "start": "1647039",
    "end": "1652409"
  },
  {
    "start": "1651000",
    "end": "1736000"
  },
  {
    "text": "up and DevOps developers operating people they love kubernetes now imagine this we have this perfectly",
    "start": "1652409",
    "end": "1660179"
  },
  {
    "text": "well working system called ACS and people say oh there is this fancy new thing and we like it a lot what would",
    "start": "1660179",
    "end": "1666510"
  },
  {
    "text": "you do well we built eks which is the elastic container service for kubernetes",
    "start": "1666510",
    "end": "1672720"
  },
  {
    "text": "and the first question obviously is what is kubernetes and why should you care",
    "start": "1672720",
    "end": "1678090"
  },
  {
    "text": "about kubernetes so kubernetes is a open source project that is moving a lot",
    "start": "1678090",
    "end": "1684110"
  },
  {
    "text": "there is people with a lot of enthusiasm behind it's an ideal platform for",
    "start": "1684110",
    "end": "1690179"
  },
  {
    "text": "running your micro services at scale I will present you a customer later that is using eks a lot and he literally said",
    "start": "1690179",
    "end": "1697260"
  },
  {
    "text": "this is software that is so good that it's hard to imagine you couldn't even buy this for money several years ago so",
    "start": "1697260",
    "end": "1703500"
  },
  {
    "text": "there's a huge enthusiasm behind kubernetes it offers a powerful",
    "start": "1703500",
    "end": "1709350"
  },
  {
    "text": "abstraction layer for managing containerized infrastructure if you start with kubernetes the first commands",
    "start": "1709350",
    "end": "1716429"
  },
  {
    "text": "is you want to understand about all those kubernetes resources like parts like services like deployments like",
    "start": "1716429",
    "end": "1723450"
  },
  {
    "text": "ingress controllers and then after a while you understand the power of kubernetes that it's a single extensible",
    "start": "1723450",
    "end": "1731190"
  },
  {
    "text": "API where you can easily add more well components and more functionality so we had customers",
    "start": "1731190",
    "end": "1739539"
  },
  {
    "start": "1736000",
    "end": "1856000"
  },
  {
    "text": "running kubernetes on easy - same as you can run docker on ec2 but those",
    "start": "1739539",
    "end": "1744639"
  },
  {
    "text": "customers they told us well please run kubernetes for us running kubernetes is",
    "start": "1744639",
    "end": "1750309"
  },
  {
    "text": "not easy to be honest it's not easy so",
    "start": "1750309",
    "end": "1756989"
  },
  {
    "text": "we built eks which is the managed kubernetes platform that we can offer",
    "start": "1757589",
    "end": "1763479"
  },
  {
    "text": "you and basically there is two parts to it the top part is the master node and",
    "start": "1763479",
    "end": "1768819"
  },
  {
    "text": "we hide this master node including all the complexity all that all the steps",
    "start": "1768819",
    "end": "1774009"
  },
  {
    "text": "that we need to do behind the fully qualified domain name so you speak to the API server of kubernetes which is a",
    "start": "1774009",
    "end": "1780819"
  },
  {
    "text": "logical dns name now we want you to run enterprise grade workloads on kubernetes",
    "start": "1780819",
    "end": "1788709"
  },
  {
    "text": "and this is obviously why we have to make sure that this master node is highly available and to make it highly",
    "start": "1788709",
    "end": "1794949"
  },
  {
    "text": "available the part of the master node that is keeping the state is called HCD and this is why we have to provision @cd",
    "start": "1794949",
    "end": "1803649"
  },
  {
    "text": "in a way that it's highly available and that's what we do we provision it multi availability so that means there copies",
    "start": "1803649",
    "end": "1811059"
  },
  {
    "text": "running on three at least three different data centers we scale the instances where HDD is running",
    "start": "1811059",
    "end": "1817509"
  },
  {
    "text": "accordingly we give it provisioned I ops we run backups and if something goes wrong of course we we restore it so it's",
    "start": "1817509",
    "end": "1824739"
  },
  {
    "text": "really to run enterprise great applications on top of kubernetes and",
    "start": "1824739",
    "end": "1830440"
  },
  {
    "text": "all you see from this is this fully qualified domain name that you talk to it now looking at the worker nodes same",
    "start": "1830440",
    "end": "1837069"
  },
  {
    "text": "story again you bring the worker nodes until well soon you can use the Fargate mode for this as well the worker nodes",
    "start": "1837069",
    "end": "1844749"
  },
  {
    "text": "connect to your kubernetes cluster and the good news is then you can use all your standard tools like the cube cuddle",
    "start": "1844749",
    "end": "1851619"
  },
  {
    "text": "and and speak to this kubernetes cluster that that is set up for you it's",
    "start": "1851619",
    "end": "1858779"
  },
  {
    "start": "1856000",
    "end": "1921000"
  },
  {
    "text": "certified kubernetes this is I think what everyone expects I think very few",
    "start": "1858779",
    "end": "1864879"
  },
  {
    "text": "people would say well could you tweak it a little bit here do something there and add some Bilson",
    "start": "1864879",
    "end": "1870300"
  },
  {
    "text": "with whistles over there they want a compatible upstream and for kubernetes",
    "start": "1870300",
    "end": "1875400"
  },
  {
    "text": "don't you that's what I would expect from a company like AWS at the same time",
    "start": "1875400",
    "end": "1881610"
  },
  {
    "text": "of course you want a tight integration to our existing cloud services and one is I am for Identity and Access",
    "start": "1881610",
    "end": "1889170"
  },
  {
    "text": "Management and this is why together with a partner called FTO we built this",
    "start": "1889170",
    "end": "1894990"
  },
  {
    "text": "Authenticator and this is what allows you to use those I am rules for the role",
    "start": "1894990",
    "end": "1900150"
  },
  {
    "text": "based access control in kubernetes and we build the second plugin for the",
    "start": "1900150",
    "end": "1905520"
  },
  {
    "text": "networking this is what allows you to use two IP addresses from your VPS well that allows Kuban it is to use",
    "start": "1905520",
    "end": "1912390"
  },
  {
    "text": "those IP addresses from the VPS and that's the cni plugin both open source",
    "start": "1912390",
    "end": "1917430"
  },
  {
    "text": "so you can go and look at the source code and if you want you can change and modify it at the end you get the beloved",
    "start": "1917430",
    "end": "1924450"
  },
  {
    "text": "console that we all know from kubernetes you get your cue cuddle command line",
    "start": "1924450",
    "end": "1930420"
  },
  {
    "text": "that is working as expected and people say what's the easiest way to get",
    "start": "1930420",
    "end": "1936960"
  },
  {
    "text": "started and of course we describe you how to get started how you bring the worker notes what roles you need to",
    "start": "1936960",
    "end": "1943710"
  },
  {
    "text": "configure how to connect them but there is for beginners if you want just focus on kubernetes there's a much easier way",
    "start": "1943710",
    "end": "1950550"
  },
  {
    "text": "to get started it's a tool it's an open source tool again which is called eks control and all you need to say is you",
    "start": "1950550",
    "end": "1957870"
  },
  {
    "text": "can't control trade cluster and that's it if you specify the name like I did",
    "start": "1957870",
    "end": "1963570"
  },
  {
    "text": "you get a proper name otherwise it will pick a funny name a little bit like docker dust you know those taco containers get a fancy name and the same",
    "start": "1963570",
    "end": "1971190"
  },
  {
    "text": "is true for eks control and if you don't specify the number of nodes I think the default is 2 so in my opinion if you",
    "start": "1971190",
    "end": "1978630"
  },
  {
    "text": "want to get started use this first and then maybe look into more details if you really want to if you care about your VP",
    "start": "1978630",
    "end": "1985410"
  },
  {
    "text": "sees about the subnets about your IP address ranges and so on so that's a good tip to get started",
    "start": "1985410",
    "end": "1993140"
  },
  {
    "start": "1991000",
    "end": "2061000"
  },
  {
    "text": "the question is now we have two choices now you can go for ECS or you can go for",
    "start": "1993290",
    "end": "1999240"
  },
  {
    "text": "eks and a lot of customers say please which one should I choose and I think",
    "start": "1999240",
    "end": "2004460"
  },
  {
    "text": "the answer is not so difficult if you have both if you have on-premise workloads and at the same time you have",
    "start": "2004460",
    "end": "2010910"
  },
  {
    "text": "cloud workloads and if you have some affinity to open source which is a",
    "start": "2010910",
    "end": "2015950"
  },
  {
    "text": "euphemism here in kubernetes if you can cope with you know changing systems and",
    "start": "2015950",
    "end": "2021230"
  },
  {
    "text": "and and quick updates and if you enjoy those CN CF projects that I will",
    "start": "2021230",
    "end": "2027500"
  },
  {
    "text": "introduce in a minute and maybe if you already bought into kubernetes then use",
    "start": "2027500",
    "end": "2032690"
  },
  {
    "text": "a guess that's the natural choice if you want the platform that is most tightly",
    "start": "2032690",
    "end": "2039080"
  },
  {
    "text": "integrated with the AWS cloud and if you go for very large cluster like this",
    "start": "2039080",
    "end": "2044150"
  },
  {
    "text": "segment customer that I was introducing you then go for ECS then you can use far",
    "start": "2044150",
    "end": "2050240"
  },
  {
    "text": "gate or not if you want to provision the if you want to manage the underlying hosts yourself or not this is the the",
    "start": "2050240",
    "end": "2057649"
  },
  {
    "text": "second choice that you have now running your micro services on kubernetes has a",
    "start": "2057650",
    "end": "2064070"
  },
  {
    "start": "2061000",
    "end": "2136000"
  },
  {
    "text": "lot of benefits that I was trying to explain but it brings you even more and this is I think where a lot of DevOps",
    "start": "2064070",
    "end": "2070820"
  },
  {
    "text": "these days look into and it's called cloud native compute foundation or CN CF",
    "start": "2070820",
    "end": "2077780"
  },
  {
    "text": "and this CN CF it serves as a vendor-neutral home for many of the",
    "start": "2077780",
    "end": "2083750"
  },
  {
    "text": "fastest growing open source projects and if you do a lot of open source like I do you understand there is just too many",
    "start": "2083750",
    "end": "2090679"
  },
  {
    "text": "open source projects typically and a lot of people say which of them makes sense in which of them don't make sense and",
    "start": "2090679",
    "end": "2096770"
  },
  {
    "text": "this CN CF it's a little bit like like a safety blanket that tells you we have those incubating projects they are not",
    "start": "2096770",
    "end": "2103820"
  },
  {
    "text": "perfect but I think incubating at least requires like three like that this",
    "start": "2103820",
    "end": "2111170"
  },
  {
    "text": "project is used by three different customers in in production but you still should be prepared to you know to work a",
    "start": "2111170",
    "end": "2117830"
  },
  {
    "text": "little bit to get it up and running and then we have those graduated projects which",
    "start": "2117830",
    "end": "2123250"
  },
  {
    "text": "Prometheus for time series and it's kubernetes itself and this is like a pre",
    "start": "2123250",
    "end": "2128530"
  },
  {
    "text": "selection of useful well of useful tools or useful projects that you might run on",
    "start": "2128530",
    "end": "2134110"
  },
  {
    "text": "top of your kubernetes cluster to get additional benefits and one of the most",
    "start": "2134110",
    "end": "2139200"
  },
  {
    "start": "2136000",
    "end": "2326000"
  },
  {
    "text": "talked about things these days probably our service meshes and the question",
    "start": "2139200",
    "end": "2145540"
  },
  {
    "text": "first of all what is such a service mesh the idea of a service mesh is to complement kubernetes by doing things",
    "start": "2145540",
    "end": "2153490"
  },
  {
    "text": "that kubernetes is not doing natively so we have two services a service a in a",
    "start": "2153490",
    "end": "2158950"
  },
  {
    "text": "service B and they're talking to each other now in kubernetes in service a you could just say I want to talk to service",
    "start": "2158950",
    "end": "2165130"
  },
  {
    "text": "B and the resolution the name resolution will make this happen if we have a",
    "start": "2165130",
    "end": "2170260"
  },
  {
    "text": "service mesh in place we inject something that is called proxy on each part now this proxy is relatively small",
    "start": "2170260",
    "end": "2178360"
  },
  {
    "text": "it's 8 megabyte in size and it's automatically injected this is one of",
    "start": "2178360",
    "end": "2184180"
  },
  {
    "text": "the extensions it's called admission controller and if you enable this extension in every part",
    "start": "2184180",
    "end": "2190810"
  },
  {
    "text": "that you start with your containers there will be dyspraxia in addition injected and now this proxy does a",
    "start": "2190810",
    "end": "2197260"
  },
  {
    "text": "little bit like you know service buses used to do 10-15 years ago where you had",
    "start": "2197260",
    "end": "2202450"
  },
  {
    "text": "this huge layer of a service bus that was dealing with cross-cutting concerns but it's just split into well as many",
    "start": "2202450",
    "end": "2209410"
  },
  {
    "text": "pieces as many parts that you're running so the service communication from",
    "start": "2209410",
    "end": "2214570"
  },
  {
    "text": "service to service B is going through this proxy now because it's going through this proxy this proxy is able to",
    "start": "2214570",
    "end": "2221200"
  },
  {
    "text": "collect all kind of telemetry data and you can also instruct this proxy to",
    "start": "2221200",
    "end": "2226210"
  },
  {
    "text": "forward the communication maybe to service B version one or service B version two so all these cross-cutting",
    "start": "2226210",
    "end": "2233110"
  },
  {
    "text": "concerns like retries versioning circuit-breaker that we used to be used to do with",
    "start": "2233110",
    "end": "2239710"
  },
  {
    "text": "either service bus or sometimes with libraries you know these open source cloud libraries that come from Netflix",
    "start": "2239710",
    "end": "2246760"
  },
  {
    "text": "like hystrix where we could do it with them you can't we can do it now with the service mesh",
    "start": "2246760",
    "end": "2253050"
  },
  {
    "text": "benefit a few things such as service smashes it's not a library you don't need to change your source code that's",
    "start": "2253050",
    "end": "2258750"
  },
  {
    "text": "amazing and if you have a library like hystrix with circus for circuit breaking it's only running for one particular",
    "start": "2258750",
    "end": "2265560"
  },
  {
    "text": "language and you need to change the source code with these proxies it's just happening automatically you don't change",
    "start": "2265560",
    "end": "2271710"
  },
  {
    "text": "the code it's working for any language if you can deploy it into a container you get this additional benefit of",
    "start": "2271710",
    "end": "2278280"
  },
  {
    "text": "running a service mesh now here's an example what you could do you could play",
    "start": "2278280",
    "end": "2283920"
  },
  {
    "text": "a little bit of cows engineering and say well it seems to work well if service a is talking to service B but what I",
    "start": "2283920",
    "end": "2291090"
  },
  {
    "text": "really want to do is I want to to tease it a little bit to make it more harder and to inject false like like an",
    "start": "2291090",
    "end": "2300060"
  },
  {
    "text": "additional and additional delay in 10% of all the requests so 10% of all the",
    "start": "2300060",
    "end": "2305580"
  },
  {
    "text": "requests see at this extra delay of five seconds and then you see how your client on the service a site is behaving and",
    "start": "2305580",
    "end": "2312150"
  },
  {
    "text": "that's something that would be hard to do otherwise without changing your application and there's a whole lot of",
    "start": "2312150",
    "end": "2317580"
  },
  {
    "text": "things that you can do with just applying a little bit of Yama file so",
    "start": "2317580",
    "end": "2324660"
  },
  {
    "text": "it's two things that work together it's the service mesh that is for example is - that's one example and then it's the",
    "start": "2324660",
    "end": "2332040"
  },
  {
    "text": "proxy that is a layer seven proxy that understands HTTP HTTP - it actually even",
    "start": "2332040",
    "end": "2338910"
  },
  {
    "text": "understands in an alpha version the the DynamoDB protocol it understands MongoDB",
    "start": "2338910",
    "end": "2344580"
  },
  {
    "text": "and it's a small c++ binary that is automatically installed for you in these",
    "start": "2344580",
    "end": "2350130"
  },
  {
    "text": "pots they both work together this is typically what we consider service mesh but they're not tightly coupled they are",
    "start": "2350130",
    "end": "2356460"
  },
  {
    "text": "not married together you could replace the issue Service mesh and use something else together with this NY proxy and",
    "start": "2356460",
    "end": "2363600"
  },
  {
    "text": "this NY proxy is actually very cool piece of engineering in my opinion and I'm pretty sure that we will talk about",
    "start": "2363600",
    "end": "2370500"
  },
  {
    "text": "this more often if you install the service mesh you can install it with the",
    "start": "2370500",
    "end": "2376320"
  },
  {
    "start": "2371000",
    "end": "2456000"
  },
  {
    "text": "helm chart it's one command line helm is like a package manager like the yum that",
    "start": "2376320",
    "end": "2381360"
  },
  {
    "text": "you know underlay knocks it's just called helm for kubernetes that's actually another thing",
    "start": "2381360",
    "end": "2386869"
  },
  {
    "text": "that is giving additional benefits to kubernetes we have this package manager called helm so basically what you say is",
    "start": "2386869",
    "end": "2393920"
  },
  {
    "text": "helm install is to you you get all the is to benefits and then you give it three more switches and the first one is",
    "start": "2393920",
    "end": "2401269"
  },
  {
    "text": "enabling the open source project which is called Jaeger which is giving you",
    "start": "2401269",
    "end": "2406579"
  },
  {
    "text": "flame grafts if you turn those grafts upside down and you color them red they look like flames this is why",
    "start": "2406579",
    "end": "2412699"
  },
  {
    "text": "they're called flame grafts and they give you a lot of observability into your micro services remember the video",
    "start": "2412699",
    "end": "2419029"
  },
  {
    "text": "that I was showing you at the beginning where Adrian Cockroft was talking about all those services interacting how do",
    "start": "2419029",
    "end": "2425630"
  },
  {
    "text": "you still know what they're doing how can you visualize this how can you trace them and this is one answer this is the",
    "start": "2425630",
    "end": "2431359"
  },
  {
    "text": "open source answer there is the AWS service called x-ray that is doing similar things so again you have to",
    "start": "2431359",
    "end": "2438140"
  },
  {
    "text": "compare do you want to go the open source way that is possible because we support it because we run unfort",
    "start": "2438140",
    "end": "2444499"
  },
  {
    "text": "standard kubernetes on SE KS and then you can have those additional tools",
    "start": "2444499",
    "end": "2451189"
  },
  {
    "text": "another one is the I think very popular katana that a lot of people use to",
    "start": "2451189",
    "end": "2456469"
  },
  {
    "start": "2456000",
    "end": "2491000"
  },
  {
    "text": "display time series and then there's some smaller things this is a real",
    "start": "2456469",
    "end": "2461479"
  },
  {
    "text": "example from from a demo application that shows you the interactions between those microservices and that's another",
    "start": "2461479",
    "end": "2467869"
  },
  {
    "text": "thing that would be otherwise hard to get if you stay within AWS you could go",
    "start": "2467869",
    "end": "2473209"
  },
  {
    "text": "for AWS x-ray that's the cloud equivalent but sometimes people want to have the same thing on premises and go",
    "start": "2473209",
    "end": "2480410"
  },
  {
    "text": "for the open source solution and I think it's important that we support this so I was running this on a eks cluster just",
    "start": "2480410",
    "end": "2487130"
  },
  {
    "text": "10 days ago right do we have customers doing this does it sound like this is",
    "start": "2487130",
    "end": "2494269"
  },
  {
    "start": "2491000",
    "end": "2536000"
  },
  {
    "text": "very far off and nobody's doing it no we had snap on stage talking at summit in",
    "start": "2494269",
    "end": "2501949"
  },
  {
    "text": "New York and they were presenting actually exactly this you can have all the slides if you let us scan your",
    "start": "2501949",
    "end": "2509179"
  },
  {
    "text": "batches you can get access to the slides then just click on the link and you will see the technical director of snap actually",
    "start": "2509179",
    "end": "2515870"
  },
  {
    "text": "talking about well how cool kubernetes is that this is software that you couldn't buy just a few years ago for",
    "start": "2515870",
    "end": "2523130"
  },
  {
    "text": "all the money that you wanted to spend on it and then he's explaining why those service meshes in particular is -",
    "start": "2523130",
    "end": "2530360"
  },
  {
    "text": "together with NY helped them a lot - well to shape their traffic and to do",
    "start": "2530360",
    "end": "2535460"
  },
  {
    "text": "the versioning and so on now to conclude and we're in time that's good to",
    "start": "2535460",
    "end": "2544460"
  },
  {
    "start": "2536000",
    "end": "2661000"
  },
  {
    "text": "conclude I think you should architect wisely choose between ECS which might be",
    "start": "2544460",
    "end": "2551300"
  },
  {
    "text": "the easiest solution to run containers at scale or kubernetes if you do",
    "start": "2551300",
    "end": "2556580"
  },
  {
    "text": "kubernetes trust me it's super hard to do it yourself I was trying this I built a Raspberry Pi cluster with four nodes",
    "start": "2556580",
    "end": "2563510"
  },
  {
    "text": "and I was practicing everything and I failed terribly very very often and it took me a lot of time to get this up and",
    "start": "2563510",
    "end": "2570500"
  },
  {
    "text": "running so if you go for kubernetes in my opinion you should definitely go for a managed kubernetes service like",
    "start": "2570500",
    "end": "2576890"
  },
  {
    "text": "AWS eks it's important to understand that this is unfort upstream kubernetes",
    "start": "2576890",
    "end": "2582800"
  },
  {
    "text": "we don't want to well we want to integrate it to the AWS cloud but we don't want to change it in a way that",
    "start": "2582800",
    "end": "2589490"
  },
  {
    "text": "makes it non compatible and actually that's quite a challenge I think for our service teams and they they do really",
    "start": "2589490",
    "end": "2595490"
  },
  {
    "text": "well the CN CF project this is just a nice add-on that you get if you go to",
    "start": "2595490",
    "end": "2600680"
  },
  {
    "text": "kubernetes waste a lot of people start I don't want to say playing with this but start exploring this in my opinion this",
    "start": "2600680",
    "end": "2609110"
  },
  {
    "text": "is a little bit like kubernetes was in the early days it's there it's working",
    "start": "2609110",
    "end": "2614600"
  },
  {
    "text": "you don't really know how stable it is a lot of people actually questioned kubernetes in the early days and said",
    "start": "2614600",
    "end": "2621620"
  },
  {
    "text": "well will this ever take over will this ever take off and it did now the whole industry now wants to do kubernetes and",
    "start": "2621620",
    "end": "2628520"
  },
  {
    "text": "maybe we can expect the same from these CN CF projects if you install it you can",
    "start": "2628520",
    "end": "2634880"
  },
  {
    "text": "simply install it using this helm chart and this let's just ice you into these",
    "start": "2634880",
    "end": "2641330"
  },
  {
    "text": "other kubernetes projects with just one additional or ammeter into yoga and Griffin ah so",
    "start": "2641330",
    "end": "2648160"
  },
  {
    "text": "the conclusion of my conclusion is that I think you should run your containers",
    "start": "2648160",
    "end": "2653210"
  },
  {
    "text": "in the cloud hopefully I could I could convince you about this we have a",
    "start": "2653210",
    "end": "2659119"
  },
  {
    "text": "workshop about eks it's done by Brandon he's around here somewhere I can't see",
    "start": "2659119",
    "end": "2664790"
  },
  {
    "start": "2661000",
    "end": "2676000"
  },
  {
    "text": "him from here it's something that I recommend to get started you have some really good instructions that tell you",
    "start": "2664790",
    "end": "2671390"
  },
  {
    "text": "how to get started with eks on the Amazon Cloud if we didn't scan your",
    "start": "2671390",
    "end": "2677270"
  },
  {
    "start": "2676000",
    "end": "2710000"
  },
  {
    "text": "batches yet considered to let us scan your batches it will give you my slides",
    "start": "2677270",
    "end": "2682400"
  },
  {
    "text": "and all the other slides it also gives you $200 in credits for the AWS cloud",
    "start": "2682400",
    "end": "2688930"
  },
  {
    "text": "remember that this was the last prescient presentation but only for today we will have more tomorrow and a",
    "start": "2688930",
    "end": "2695420"
  },
  {
    "text": "day after tomorrow I'm Frank moon's on Twitter feel free to talk to me I'm not running away you've",
    "start": "2695420",
    "end": "2702650"
  },
  {
    "text": "been a great audience thank you for being here and have a nice evening [Applause]",
    "start": "2702650",
    "end": "2712440"
  }
]