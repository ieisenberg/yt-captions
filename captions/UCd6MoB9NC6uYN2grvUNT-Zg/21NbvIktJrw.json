[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "so this is going to be the last session on the application modernization stack my name is Sri Ando Tanaka so as a",
    "start": "30",
    "end": "7440"
  },
  {
    "text": "partner solution architect focusing around Microsoft technologies at Amazon",
    "start": "7440",
    "end": "12509"
  },
  {
    "text": "my daily job is to help a lot of our customers to run Microsoft workloads",
    "start": "12509",
    "end": "18029"
  },
  {
    "text": "great on AWS so in this session we are going to learn how you can easily integrate Microsoft develops",
    "start": "18029",
    "end": "25230"
  },
  {
    "text": "technologies like Team Foundation server oh I sure do Bob services are with AWS",
    "start": "25230",
    "end": "32720"
  },
  {
    "text": "so they're going to learn how we are going to create a infrastructure as cord",
    "start": "34190",
    "end": "39329"
  },
  {
    "text": "with AWS CloudFormation we are going to deploy an asp.net core web application into our manage web",
    "start": "39329",
    "end": "46440"
  },
  {
    "text": "server environment with elastic Beanstalk we're also going to do hybrid deployments with AWS core deploy and",
    "start": "46440",
    "end": "53789"
  },
  {
    "text": "then finally touch how you can do container deployments at scale and we",
    "start": "53789",
    "end": "59460"
  },
  {
    "text": "are going to do all of these with the help of assured you of services so AWS",
    "start": "59460",
    "end": "65880"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "provides a lot of tooling and integration for Microsoft shops or Microsoft developers and we provide SDKs",
    "start": "65880",
    "end": "74250"
  },
  {
    "text": "for dotnet framework you can program with the help of PowerShell or command line interfaces you have to lean",
    "start": "74250",
    "end": "81030"
  },
  {
    "text": "available for Visual Studio in Visual Studio code if you like to program using them but in this session we are going to",
    "start": "81030",
    "end": "87659"
  },
  {
    "text": "focus mainly around AWS tools for power shell and also AWS extensions available",
    "start": "87659",
    "end": "95340"
  },
  {
    "text": "in assurity warps marketplace so what is a surety WAP services assured you",
    "start": "95340",
    "end": "102060"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "observe is a set of tools that allows developers to program and then release the software easily so that includes",
    "start": "102060",
    "end": "108720"
  },
  {
    "text": "Ashura repositories AWS equivalent is AWS quad commit which is a JIT",
    "start": "108720",
    "end": "114899"
  },
  {
    "text": "repository then you have a shrew pipelines which allows you to run a set of steps in your deployment lifecycle",
    "start": "114899",
    "end": "121460"
  },
  {
    "text": "ewc clone for that one is it obvious called pipeline and then there are some other services like Ashura boards and",
    "start": "121460",
    "end": "128580"
  },
  {
    "text": "also test plans to manage your test cases but in this session we are going to focus",
    "start": "128580",
    "end": "133800"
  },
  {
    "text": "how you can use our repositories assure pipelines and also the extension",
    "start": "133800",
    "end": "139230"
  },
  {
    "text": "marketplace to easily integrate with AWS so in the first session now let's go",
    "start": "139230",
    "end": "146370"
  },
  {
    "text": "through how you can do an integration with AWS CloudFormation with R&D ops and",
    "start": "146370",
    "end": "151560"
  },
  {
    "text": "then manage your infrastructure has called what is an obvious conformation",
    "start": "151560",
    "end": "156590"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "AWS CloudFormation is a Jason or m/l formatted document where you can specify the databases you",
    "start": "156590",
    "end": "163920"
  },
  {
    "text": "want the ec2 instances you want or the auto scaling that you won't have as code so once you write all the resources that",
    "start": "163920",
    "end": "171480"
  },
  {
    "text": "you want to have on AWS as a cord you handle it into a AWS CloudFormation",
    "start": "171480",
    "end": "176880"
  },
  {
    "text": "engine that will read that understand it and then orchestrate it on behalf of you",
    "start": "176880",
    "end": "182660"
  },
  {
    "text": "if you have a very complex solution let's say you want to deploy an ace SQL server stack with a queue direct",
    "start": "182660",
    "end": "189330"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "integration you can divide it into small stacks for example you can have",
    "start": "189330",
    "end": "194720"
  },
  {
    "text": "Enterprise wide network stack where you standardize how your network should be",
    "start": "194720",
    "end": "199860"
  },
  {
    "text": "then you can have on top of that how your Active Directory stock is going to look like you can then deploy your SQL",
    "start": "199860",
    "end": "206160"
  },
  {
    "text": "server stack on top of it so a complex solution you can organize into small stacks so if you want to know the depth",
    "start": "206160",
    "end": "214410"
  },
  {
    "text": "and breadth that the cloud formation can provide when you are provision on your infrastructure good place to look at is",
    "start": "214410",
    "end": "219989"
  },
  {
    "text": "a double use quick start where you can go deep and then understand what kind of complex infrastructure that you can",
    "start": "219989",
    "end": "226020"
  },
  {
    "text": "provision with the help of AWS CloudFormation so what we are going to build now is we are going to create a",
    "start": "226020",
    "end": "232230"
  },
  {
    "text": "very simple network stack with the visual studio code put it into our repository click start and our show",
    "start": "232230",
    "end": "238800"
  },
  {
    "text": "pipeline and with the help of Ashura build agent running on an ec2 instance we are going to invoke AWS",
    "start": "238800",
    "end": "245489"
  },
  {
    "text": "CloudFormation engine and then orchestrate a simple virtual private cloud and a submit inside that so the",
    "start": "245489",
    "end": "253680"
  },
  {
    "text": "application is called my cat application for the best interest of time because we have a very limited amount of time I",
    "start": "253680",
    "end": "259590"
  },
  {
    "text": "have recorded everything as a video so that you can quickly go through what is essential so here I have a simple called",
    "start": "259590",
    "end": "267060"
  },
  {
    "text": "formation or written in JSON document so you have your network stack where I have defined the slider block that you want to have",
    "start": "267060",
    "end": "273570"
  },
  {
    "text": "and inside that also I have specified the subnet that you won't have so in",
    "start": "273570",
    "end": "278700"
  },
  {
    "text": "this case I have one via PC and a subnet that specify assigned a block of 10 0 1",
    "start": "278700",
    "end": "283860"
  },
  {
    "text": "0 24 so this is the conformation so back in my assured you of spy plane I have",
    "start": "283860",
    "end": "290070"
  },
  {
    "text": "created a pipeline added a cloud formation deployment task now this",
    "start": "290070",
    "end": "295140"
  },
  {
    "text": "conformation deployment task came as part of an extension that I install from",
    "start": "295140",
    "end": "300420"
  },
  {
    "text": "usher devups marketplace so if you go into a assurity Bob's marketplace you",
    "start": "300420",
    "end": "305970"
  },
  {
    "text": "will find some extensions available for you to easily integrate with AWS so that includes if you search AWS you will find",
    "start": "305970",
    "end": "313770"
  },
  {
    "text": "an extension that you can install in either TFS wash ready verbs so once you",
    "start": "313770",
    "end": "318900"
  },
  {
    "text": "install this plug-in it's just a matter of clicking install button or you can create a connection into AWS so what you",
    "start": "318900",
    "end": "326910"
  },
  {
    "text": "do is you would go there and create a I am user get the secret key an access key and then you have access to all their",
    "start": "326910",
    "end": "335490"
  },
  {
    "text": "elbows API if you want temporary credentials you can also assume a certain role and then use those",
    "start": "335490",
    "end": "341790"
  },
  {
    "text": "temporary credentials so once you create this connection so in this case I'm",
    "start": "341790",
    "end": "347310"
  },
  {
    "text": "going to create my test connection this is available in your pipeline to easily",
    "start": "347310",
    "end": "352350"
  },
  {
    "text": "integrate with AWS so back in my pipeline in the past you can see in the",
    "start": "352350",
    "end": "357720"
  },
  {
    "text": "drop down I have my app connection already available so in this case I'm",
    "start": "357720",
    "end": "362910"
  },
  {
    "text": "not going to specify this connection because I'm going to give the permissions to my built agent running on",
    "start": "362910",
    "end": "368310"
  },
  {
    "text": "ec2 so let's see how we can do that so of course I need to select which cloud formation template I want to deploy so I",
    "start": "368310",
    "end": "375419"
  },
  {
    "text": "select it from my Asha repository also the network template I already selected so the next thing I want to do is to",
    "start": "375419",
    "end": "382160"
  },
  {
    "text": "save this pipeline and then click started but before that let's go into my",
    "start": "382160",
    "end": "387419"
  },
  {
    "text": "built agent for Milt agent is now running on ec2 instance so remember we I didn't define a connection for this so",
    "start": "387419",
    "end": "394290"
  },
  {
    "text": "in this case I'm going to provision the permission needed for this provisioning of the cloud formation template with the",
    "start": "394290",
    "end": "400860"
  },
  {
    "text": "help of an that I attached into ec2 instance so I have this do ops build machine draw that",
    "start": "400860",
    "end": "406650"
  },
  {
    "text": "I have setup so I'm going to use this role and then going to specify the permissions that I want to have so if",
    "start": "406650",
    "end": "413580"
  },
  {
    "text": "you look at that my cut that policy that I have define I can define a fine-grained permissions over here so",
    "start": "413580",
    "end": "419819"
  },
  {
    "text": "that includes for example if you look at the permission that I have defined you can find that it has cloud formation",
    "start": "419819",
    "end": "426389"
  },
  {
    "text": "describe cloud formation get list a permission that I have specified you can go into fine-grained principles for",
    "start": "426389",
    "end": "432840"
  },
  {
    "text": "example if you look at create delete update stack that is available only for a cat home stack so when you are",
    "start": "432840",
    "end": "440909"
  },
  {
    "text": "provision in this it's not going to affect for example any other cloud formation that you have deployed so",
    "start": "440909",
    "end": "446610"
  },
  {
    "text": "maybe you want to make sure that this pipeline effect only the cat home so on top of that I have specified some extra",
    "start": "446610",
    "end": "452849"
  },
  {
    "text": "permissions that I want to provision this stack into a SS environment so it's",
    "start": "452849",
    "end": "458610"
  },
  {
    "text": "always recommended to give the minimum permissions that is needed so the next step is to of course kickstart this",
    "start": "458610",
    "end": "464129"
  },
  {
    "text": "pipeline so I key when you build I have my end of this build pool already registered my built agent is already",
    "start": "464129",
    "end": "470460"
  },
  {
    "text": "registered under this built bull so let's queue and you build so when you queue and you build it's going to",
    "start": "470460",
    "end": "477029"
  },
  {
    "text": "execute all those steps that I have defined in my pipeline and obviously",
    "start": "477029",
    "end": "482099"
  },
  {
    "text": "it's going to take the cloud formation template run it and then deploy it with the help of cloud formation task I have",
    "start": "482099",
    "end": "487500"
  },
  {
    "text": "added so this kickstart a new formation deployment if you go to the cloud formation section of AWS you can find",
    "start": "487500",
    "end": "493740"
  },
  {
    "text": "that a create is all in in progress so this is going to create the cloud formation and then going to orchestrate",
    "start": "493740",
    "end": "499080"
  },
  {
    "text": "that simple VPC and the network's stuck in that so far so good so if you go to",
    "start": "499080",
    "end": "504360"
  },
  {
    "text": "the disk at home you can investigate what resources that it orchestrate so it includes the V PC and subnet that I have",
    "start": "504360",
    "end": "511440"
  },
  {
    "text": "created so back in my V PC section of the AWS console if you search for cat home the V PC is already available and",
    "start": "511440",
    "end": "518430"
  },
  {
    "text": "how do you know that it came as part of cloud formation look at the tags and it gives you the ID",
    "start": "518430",
    "end": "523979"
  },
  {
    "text": "of the cloud formation execution so the next thing is to look at where with our subnet is created so let's go to the",
    "start": "523979",
    "end": "530730"
  },
  {
    "text": "subnet section and if you search for the cat form you will find a one subnet provision with that now this",
    "start": "530730",
    "end": "538500"
  },
  {
    "text": "is easy what if you want to make another modification so of course chair requirements changes let's say I want to",
    "start": "538500",
    "end": "544470"
  },
  {
    "text": "add the new subnet the best practice of tall formation is that you always maintain your chord as infrastructure",
    "start": "544470",
    "end": "550920"
  },
  {
    "text": "infrastructure is code and any modification also you do it with the table formation so I need a new subnet",
    "start": "550920",
    "end": "556350"
  },
  {
    "text": "called subnet two I changed the cider block for that and this is also I'm going to maintain in my repository as a",
    "start": "556350",
    "end": "562890"
  },
  {
    "text": "version control infrastructure so I save it and then of course I'm going to give a message saying hey I added a new cloud",
    "start": "562890",
    "end": "569550"
  },
  {
    "text": "formation template submit into this and then I'm going to save it and I'm going",
    "start": "569550",
    "end": "574620"
  },
  {
    "text": "to then push this one into the remote repository on in on our show repositories so from the time I push it",
    "start": "574620",
    "end": "580350"
  },
  {
    "text": "there's an automatic triggered setup that you automatically kickstart the pipeline and it will again deploy that",
    "start": "580350",
    "end": "586290"
  },
  {
    "text": "so here I simulated a developer making a change and then starting the pipeline automatically so it's going to run the",
    "start": "586290",
    "end": "591990"
  },
  {
    "text": "same steps that we have defined before and what will happen now is it's going to provision the stack but this time",
    "start": "591990",
    "end": "598410"
  },
  {
    "text": "it's going to be an update so it knows how to do Delta changes so it's not going to delete the existing me PC or",
    "start": "598410",
    "end": "605160"
  },
  {
    "text": "the subnet the first subnet we added it's going to only add the extra subnet we add so you can do Delta changes push",
    "start": "605160",
    "end": "612150"
  },
  {
    "text": "the Delta changes with the help of cloud formation so with the magic of video editing update is complete you can find",
    "start": "612150",
    "end": "618240"
  },
  {
    "text": "those two subnets is now already available and if you go to the subnets section you can find that extra subnet",
    "start": "618240",
    "end": "624090"
  },
  {
    "text": "is already added so what we discover",
    "start": "624090",
    "end": "629940"
  },
  {
    "text": "here is that there are extensions available in the marketplace so this is managed by AWS which will allow you to",
    "start": "629940",
    "end": "635730"
  },
  {
    "text": "easily integrate with AWS s3 you can integrate with lambda functions you lost a beanstalk so there are a lot of",
    "start": "635730",
    "end": "642240"
  },
  {
    "text": "plugins available for you to integrate if you use in any other system like",
    "start": "642240",
    "end": "647280"
  },
  {
    "text": "Jenkins Travis CI or team city you may not have plugins so still you can easily",
    "start": "647280",
    "end": "653130"
  },
  {
    "text": "integrate with AWS command-line interface or PowerShell so all of these CI CD systems allows you to integrate",
    "start": "653130",
    "end": "659550"
  },
  {
    "text": "easily with command line or powershell so in this section we are going to learn",
    "start": "659550",
    "end": "666660"
  },
  {
    "text": "how to integrate elastic Beanstalk with Usher divorce so elastic Beanstalk is managed web server and batches of",
    "start": "666660",
    "end": "675180"
  },
  {
    "text": "environment so we provide the infrastructure so auto-scaling the",
    "start": "675180",
    "end": "680820"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "patching the maintenance of is taken care for you so you only focus on your code so in this case I'm going to focus",
    "start": "680820",
    "end": "686850"
  },
  {
    "text": "only around my asp.net core web application you have it available for",
    "start": "686850",
    "end": "691970"
  },
  {
    "text": "java.net PHP Ruby Python docker and if you want to have another custom",
    "start": "691970",
    "end": "697710"
  },
  {
    "text": "application let's say you want to have your own web server environment or different graphic library you can",
    "start": "697710",
    "end": "703170"
  },
  {
    "text": "customize an image and then provide for that and we will still function well so",
    "start": "703170",
    "end": "714150"
  },
  {
    "text": "what we are going to build today we are going to create a very simple asp.net core web application push it into our",
    "start": "714150",
    "end": "719640"
  },
  {
    "text": "repository kickstart us your pipeline and with the help of built age and I'm going to create the web deployment",
    "start": "719640",
    "end": "725400"
  },
  {
    "text": "package and then push it into an s3 bucket so zip file I'm going to create and put it into s3 bucket then in mock",
    "start": "725400",
    "end": "732210"
  },
  {
    "text": "elastic Beanstalk API and then say last it means okay I have a new zip file in",
    "start": "732210",
    "end": "737700"
  },
  {
    "text": "my stream bucket take it and then deploy so let's see how we can do that the",
    "start": "737700",
    "end": "743670"
  },
  {
    "text": "application is called my tag application like before I edited this video so that we can quickly run through this demo so",
    "start": "743670",
    "end": "753630"
  },
  {
    "text": "I have my elastic beanstalk environment my tri gap environment you can have multiple environments for that you can",
    "start": "753630",
    "end": "759660"
  },
  {
    "text": "have development testing any number of pre production environments so I have my development and production environment",
    "start": "759660",
    "end": "765780"
  },
  {
    "text": "they are all green healthy state so if you go into your development environment you can find that my web application is",
    "start": "765780",
    "end": "772020"
  },
  {
    "text": "running if you start look at it it's a very simple asp.net core web application right these are already deployed it's",
    "start": "772020",
    "end": "778380"
  },
  {
    "text": "running the version 1 of the application so what we want to do is to publish a new version into this so back in my",
    "start": "778380",
    "end": "785310"
  },
  {
    "text": "assured you of spy plane I have the normal build steps to build this web application so this is a dotnet core web",
    "start": "785310",
    "end": "790980"
  },
  {
    "text": "application so I'm going to take the new cut packages build it test it and then publish it to the staging directory so",
    "start": "790980",
    "end": "799650"
  },
  {
    "text": "once I publish that I'm going to create a manifest file and then copy into the root of that",
    "start": "799650",
    "end": "804660"
  },
  {
    "text": "staging directory so this manifest file is a very simple user document that",
    "start": "804660",
    "end": "809940"
  },
  {
    "text": "describes where on the is location that",
    "start": "809940",
    "end": "814980"
  },
  {
    "text": "you want to publish this web application so in this case I want to publish to the default web site you can have multiple",
    "start": "814980",
    "end": "820170"
  },
  {
    "text": "web application publish with the single package if you want so I you specify this JSON document and once I specify it",
    "start": "820170",
    "end": "827580"
  },
  {
    "text": "it will be on the root directory of that staging directory and then I'm going to create a zip file in the next stage",
    "start": "827580",
    "end": "833970"
  },
  {
    "text": "under elastic Beanstalk deployment zip file I'm going to zip everything together and then I'm going to upload",
    "start": "833970",
    "end": "840120"
  },
  {
    "text": "that con into s3 bucket all the zip file and finally in work elastic Beanstalk API to publish this whip file to the",
    "start": "840120",
    "end": "847710"
  },
  {
    "text": "elastic Beanstalk environment so I specify what's the region what's the elastic Beanstalk application what's the",
    "start": "847710",
    "end": "853080"
  },
  {
    "text": "environment I want to publish and we have to take that deployment after artifact from so my pipeline is good",
    "start": "853080",
    "end": "859530"
  },
  {
    "text": "shape so what I'm going to do now is to do the same thing but with the",
    "start": "859530",
    "end": "864780"
  },
  {
    "text": "PowerShell so we already know that you have extensions what if you don't have extensions so the previous steps are the",
    "start": "864780",
    "end": "870990"
  },
  {
    "text": "same so you have the build steps creating of the zip files they are the same but instead of using extensions I'm",
    "start": "870990",
    "end": "877170"
  },
  {
    "text": "going to do it with the PowerShell or most of our api's are exposed in PowerShell and command line so instead",
    "start": "877170",
    "end": "884490"
  },
  {
    "text": "of upload into s3 bucket choose in an extension I'm going to use a PowerShell to do that so if you look at the",
    "start": "884490",
    "end": "890970"
  },
  {
    "text": "PowerShell window here you can find that here I have specified write s3 object so",
    "start": "890970",
    "end": "898560"
  },
  {
    "text": "here you can find that instead of using the iteration I'm used in working the it obvious powers powershell commandlets to",
    "start": "898560",
    "end": "905640"
  },
  {
    "text": "publish that zip file into s3 and then of course I'm going to use elastic Beanstalk deploy PowerShell script to",
    "start": "905640",
    "end": "912900"
  },
  {
    "text": "kick-start a new elastic Beanstalk deployment so here I specify what's the application I want to deploy what's the",
    "start": "912900",
    "end": "917910"
  },
  {
    "text": "environment I want to touch so once you have this PowerShell script so let's make a simple modification to the home",
    "start": "917910",
    "end": "924150"
  },
  {
    "text": "page of my web application and then get it working so in this case I'm going to change it to the version to full",
    "start": "924150",
    "end": "930180"
  },
  {
    "text": "pipeline is done but I'm going to do it with the PowerShell right so I'd give a message like PowerShell",
    "start": "930180",
    "end": "935610"
  },
  {
    "text": "so once done I'm going to like like before going to save it give it a message because this is I'm going to",
    "start": "935610",
    "end": "941279"
  },
  {
    "text": "maintain in my repository so I have a track record of what changes I made so you save it and then you are going to",
    "start": "941279",
    "end": "947550"
  },
  {
    "text": "publish into our repository so like before I have a trigger setup whenever there's a new change it will kick start",
    "start": "947550",
    "end": "953220"
  },
  {
    "text": "now is your pipeline so the pipeline is already running so if you look at that it's going to execute those steps that",
    "start": "953220",
    "end": "959130"
  },
  {
    "text": "are defined before so it's got the package downloaded into staging directory or into a build directory it's",
    "start": "959130",
    "end": "965399"
  },
  {
    "text": "going to get the new catback atures and then uploading into that build artifacts into s3 folder and then it's going to",
    "start": "965399",
    "end": "972630"
  },
  {
    "text": "run in elastic Beanstalk deployment and there's a while loop I keep checking with the elastic beanstalk environment",
    "start": "972630",
    "end": "978540"
  },
  {
    "text": "is live so what will happen is that from the time that you publish it it's going to wait until that environments become",
    "start": "978540",
    "end": "984570"
  },
  {
    "text": "healthy and become live so if you go into your elastic Beanstalk environment at this moment you will find that it's",
    "start": "984570",
    "end": "990959"
  },
  {
    "text": "in grey state because the deployment is happening behind the scene if you want you can do role in deployment so that",
    "start": "990959",
    "end": "996660"
  },
  {
    "text": "the end users will see minimal downtime but in this case I'm using normal deployment and it takes some a few",
    "start": "996660",
    "end": "1004339"
  },
  {
    "text": "minutes to do this deployment you need to copy the files restart the web server so with the magic of fast-forwarding",
    "start": "1004339",
    "end": "1009950"
  },
  {
    "text": "I've got it working so if you go into your web application you will find that the welcome version",
    "start": "1009950",
    "end": "1015560"
  },
  {
    "text": "to full pipeline is done using PowerShell messages appearing nassim instruct also provides some other",
    "start": "1015560",
    "end": "1022010"
  },
  {
    "text": "mechanisms to manage your environment for example you can clone your environment you can swap the URLs so",
    "start": "1022010",
    "end": "1028188"
  },
  {
    "text": "maybe that you want to publish this environment into pre-production and then you want to swap the URLs after you have",
    "start": "1028189",
    "end": "1033829"
  },
  {
    "text": "done the testing so the swapping of the urs you can do very easily it's a matter",
    "start": "1033829",
    "end": "1039020"
  },
  {
    "text": "of going here and then just check in this one and then click and swap so that will swap the URLs we can also clone the",
    "start": "1039020",
    "end": "1046579"
  },
  {
    "text": "environment for example let's say you want to have a copy of your development environment for testing purpose so it's",
    "start": "1046579",
    "end": "1052040"
  },
  {
    "text": "a matter of selecting that environment and then you can select there's a action button and then click",
    "start": "1052040",
    "end": "1058130"
  },
  {
    "text": "clone which will create a copy of that environment so if maybe when you get a bug in your production environment you",
    "start": "1058130",
    "end": "1064010"
  },
  {
    "text": "want to test it this is easy where to clone it you give a name and then click corn",
    "start": "1064010",
    "end": "1069590"
  },
  {
    "text": "we'll clone the environment and you will have another similar environment available for you so we learned about",
    "start": "1069590",
    "end": "1078230"
  },
  {
    "text": "elastic Beanstalk and how to do the cord deployment what if you want to do hybrid",
    "start": "1078230",
    "end": "1083270"
  },
  {
    "text": "deployments let's say you want to do a deployment to your on-premise environment to assure to Google and also",
    "start": "1083270",
    "end": "1088730"
  },
  {
    "text": "to an AWS environment so if you want to do such hybrid deployments you can use AWS called deploy and ushered devups so",
    "start": "1088730",
    "end": "1096919"
  },
  {
    "text": "what we are going to build now is a very special pipeline I'm going to have two ec2 instance running on AWS and I'm also",
    "start": "1096919",
    "end": "1103429"
  },
  {
    "text": "going to have my laptop so we are going to install an agent in these environments which is the core deploy",
    "start": "1103429",
    "end": "1110600"
  },
  {
    "text": "agent and then you are going to create a deployment group called pre-production so you categorize them into a one group",
    "start": "1110600",
    "end": "1117190"
  },
  {
    "text": "then like before I'm going to make a gap Legation of simple console application you chose to do cord put it into our",
    "start": "1117190",
    "end": "1123529"
  },
  {
    "text": "repository Kickstarter's your pipeline and then even with the help of a built agent I'm going to create a simple zip",
    "start": "1123529",
    "end": "1130279"
  },
  {
    "text": "file upload into s3 bucket and then invoke it abuse cord deploy API saying",
    "start": "1130279",
    "end": "1135679"
  },
  {
    "text": "that hair core deploy take this s3 artifact and then publish so core deploy",
    "start": "1135679",
    "end": "1140960"
  },
  {
    "text": "will communicate with the agent and agent will pull that s3 out if I can deploy on the machine you can do role in",
    "start": "1140960",
    "end": "1147500"
  },
  {
    "start": "1146000",
    "end": "1146000"
  },
  {
    "text": "deployments if you want you can do one at a time deployment so if you want to have a minimal downtime how it works",
    "start": "1147500",
    "end": "1153649"
  },
  {
    "start": "1153000",
    "end": "1153000"
  },
  {
    "text": "behind the scene is that you have something called a Pacific files so this application manifest tells things like",
    "start": "1153649",
    "end": "1160610"
  },
  {
    "text": "what are the files you want to copy to the destination and what lifecycle events that you want to program for for",
    "start": "1160610",
    "end": "1166340"
  },
  {
    "text": "example here I can copy some files from source to destination and there are different life cycle events that I",
    "start": "1166340",
    "end": "1171529"
  },
  {
    "text": "program for you also have different life cycle events for example application start validate before install after",
    "start": "1171529",
    "end": "1177919"
  },
  {
    "text": "install if you can copy a file from source to the destination and execute",
    "start": "1177919",
    "end": "1184279"
  },
  {
    "text": "step scripts at different stages sky is the limit for deployment you can deploy a missile packages exe applications",
    "start": "1184279",
    "end": "1192169"
  },
  {
    "text": "SSIS packages lot of things you can deploy with this mechanism so what we",
    "start": "1192169",
    "end": "1197480"
  },
  {
    "text": "are going to learn here is this my donkey application so you see them out the team write the zoo of applications",
    "start": "1197480",
    "end": "1202730"
  },
  {
    "text": "that I'm create so this might on key application here a simple exe application let's see how we can do that so I have my AWS environment",
    "start": "1202730",
    "end": "1211010"
  },
  {
    "text": "there are two machines or easy - instance machine one and machine - I tagged them with the environment key",
    "start": "1211010",
    "end": "1217610"
  },
  {
    "text": "equal to pre production so the mode machine I have tagged the key as pre",
    "start": "1217610",
    "end": "1223160"
  },
  {
    "text": "production so this is how you identify different machines so once you are tanked these machines back in my core",
    "start": "1223160",
    "end": "1229850"
  },
  {
    "text": "deploy what how done these are I have specified in the application my tag application test so you specify an",
    "start": "1229850",
    "end": "1236540"
  },
  {
    "text": "application and inside this application I have define very simple two different",
    "start": "1236540",
    "end": "1243110"
  },
  {
    "text": "deployment groups so one of the deployment group is called my hybrid environment so if you're going to do a",
    "start": "1243110",
    "end": "1249290"
  },
  {
    "text": "hybrid environment you can find that which ec2 instance that it selects so here I have defined Amazon ec2 instances",
    "start": "1249290",
    "end": "1256790"
  },
  {
    "text": "one is called pre-production so anything any green star star gas production will",
    "start": "1256790",
    "end": "1262430"
  },
  {
    "text": "be all available and also on-premise instance also selected based on that tag but if you go into the on-premise",
    "start": "1262430",
    "end": "1269120"
  },
  {
    "text": "instance as of now I don't have any on-premise instance registered with Amazon you can register them with a",
    "start": "1269120",
    "end": "1274970"
  },
  {
    "text": "execution of very simple PowerShell commands so this is my laptop so it could be your on-premise server I'm",
    "start": "1274970",
    "end": "1280700"
  },
  {
    "text": "running my core deploy agent behind the scene it's running as administrator",
    "start": "1280700",
    "end": "1286640"
  },
  {
    "text": "account you can find that it's running as a local administrator and what you do",
    "start": "1286640",
    "end": "1292160"
  },
  {
    "text": "is you open the PowerShell and then if you look at this is my laptop you check",
    "start": "1292160",
    "end": "1297740"
  },
  {
    "text": "the battery level so it gets us 92 percent that you fool so if you search AWS credentials list",
    "start": "1297740",
    "end": "1304190"
  },
  {
    "text": "profiles I have created a profile called called deploy setup so this code deploy",
    "start": "1304190",
    "end": "1309470"
  },
  {
    "text": "setup profile allows me to register my local instance with AWS it has the right",
    "start": "1309470",
    "end": "1314660"
  },
  {
    "text": "permissions so I set the credentials of this PowerShell session to that core deploy setup credentials",
    "start": "1314660",
    "end": "1320780"
  },
  {
    "text": "I said the default region as up southeast which is Sydney region so this local instance get registered in Sydney",
    "start": "1320780",
    "end": "1327380"
  },
  {
    "text": "region when I registered then I invoke a PowerShell command call register CD on-premise instance I give it instance",
    "start": "1327380",
    "end": "1334280"
  },
  {
    "text": "name maybe my laptop my Lenovo laptop the identification you want to have then",
    "start": "1334280",
    "end": "1339550"
  },
  {
    "text": "I want to specify a permissions allowed on this laptop so I already created a high M music all my on-premise machine",
    "start": "1339550",
    "end": "1346090"
  },
  {
    "text": "user and I specify Emerson s3 read-only access because what I'm going to do is",
    "start": "1346090",
    "end": "1351460"
  },
  {
    "text": "to download the software from Emerson to deploy so I need to have a three axis right so I specify the permissions",
    "start": "1351460",
    "end": "1358480"
  },
  {
    "text": "allowed one Emerson for this laptop and then I'm from the time I press it enter it get registered under on-premise",
    "start": "1358480",
    "end": "1364870"
  },
  {
    "text": "instance so if you go into on-premise instance you can find that my laptop is already registered so and you select",
    "start": "1364870",
    "end": "1371320"
  },
  {
    "text": "that we of course need to tag this so we need to tell that this is a pre-production environment so I give the",
    "start": "1371320",
    "end": "1377890"
  },
  {
    "text": "environment key and then tag it as pre-production and from that time onwards it becomes part of the",
    "start": "1377890",
    "end": "1383410"
  },
  {
    "text": "pre-production environment right so all the tagging and registration of on premise is done so the next step is",
    "start": "1383410",
    "end": "1389380"
  },
  {
    "text": "to of course make some modification and then publish this application so this is a very simple hello world console",
    "start": "1389380",
    "end": "1394570"
  },
  {
    "text": "application it just prints a message called donkey at an angle so let's look at the app SPECT ml file so in the app",
    "start": "1394570",
    "end": "1401230"
  },
  {
    "text": "spec the ML file it says what is the source and the destination for the files and also it has the scripts that are",
    "start": "1401230",
    "end": "1408070"
  },
  {
    "text": "programmed for different life cycle events so that includes a before install and after install maybe you want to stop",
    "start": "1408070",
    "end": "1414760"
  },
  {
    "text": "an instance or maybe you want to restart instance or you want to stop your iOS web server before deploying",
    "start": "1414760",
    "end": "1420010"
  },
  {
    "text": "so this PowerShell script is a very simple one it just creates some files on the local folder it's going to create a",
    "start": "1420010",
    "end": "1425110"
  },
  {
    "text": "folder and then create some files but you can add any thing that you want to have in these powershell scripts so",
    "start": "1425110",
    "end": "1431140"
  },
  {
    "text": "these are just life cycle events so I have this app SPECT files which I is part of that zip file I'm going to",
    "start": "1431140",
    "end": "1437020"
  },
  {
    "text": "create so back in the my pipeline I have the Shabbir pipe an already created",
    "start": "1437020",
    "end": "1442960"
  },
  {
    "text": "you have the restauration of NuGet packages building and testing phases as normal artifacts and then of course I'm",
    "start": "1442960",
    "end": "1450340"
  },
  {
    "text": "going to copy that manifest file into the staging directory so this is that",
    "start": "1450340",
    "end": "1456580"
  },
  {
    "text": "step all the artifacts that I want to copy and then I'm going to create after",
    "start": "1456580",
    "end": "1461770"
  },
  {
    "text": "I copy all these files I'm going to create a zip file out of all these artifacts so once the zip file is",
    "start": "1461770",
    "end": "1468250"
  },
  {
    "text": "created of course I'm going to upload into s3 bucket so use that extension to do that I give the",
    "start": "1468250",
    "end": "1473470"
  },
  {
    "text": "bucket name which folder that you want to orchestrate that and then I invoke a chord deploy pipeline called deploy and",
    "start": "1473470",
    "end": "1480790"
  },
  {
    "text": "then say hey Corps deploy refresh your application with this new artifact that",
    "start": "1480790",
    "end": "1486250"
  },
  {
    "text": "I publish into history so I tell what is my hybrid environment and the deployment group that I want to",
    "start": "1486250",
    "end": "1491740"
  },
  {
    "text": "publish where to take the history artifact from so from the time that I do that the next step is to execute the",
    "start": "1491740",
    "end": "1498190"
  },
  {
    "text": "pipeline of course so let's change this message so instead of saying donkey ate a mango let's say a donkey ate an apple",
    "start": "1498190",
    "end": "1504520"
  },
  {
    "text": "right so I say this and like before I'm going to so I maintain my repository changes so change the message save the",
    "start": "1504520",
    "end": "1513300"
  },
  {
    "text": "code and then publish that run with the help of push button right so again this",
    "start": "1513300",
    "end": "1518770"
  },
  {
    "text": "is going to kick start a national plan it's triggered by this any change that it's encounter so this will execute the",
    "start": "1518770",
    "end": "1526180"
  },
  {
    "text": "pipeline that I showed you a moment ago so the pipeline is running you can find",
    "start": "1526180",
    "end": "1531220"
  },
  {
    "text": "that it's executing some steps I have fast Ford this this video so what will",
    "start": "1531220",
    "end": "1537430"
  },
  {
    "text": "happen is it's going to build your exe application run some tests if you have it publish industry and then invoke or",
    "start": "1537430",
    "end": "1544060"
  },
  {
    "text": "deploy API to publish this to your service so behind the scene you can find",
    "start": "1544060",
    "end": "1549730"
  },
  {
    "text": "that the ice this deployment is in progress and you can find that to",
    "start": "1549730",
    "end": "1555460"
  },
  {
    "text": "instance has already been deployed so these are the ec2 instances and if you",
    "start": "1555460",
    "end": "1560500"
  },
  {
    "text": "go back you can see what is the progress of your deployment so if you have like hundred servers or you can deploy an",
    "start": "1560500",
    "end": "1565870"
  },
  {
    "text": "application easy like this it takes a moment to publish into your laptop you",
    "start": "1565870",
    "end": "1573460"
  },
  {
    "text": "can find that which instance has successfully so my laptop is still in progress after a few minutes the files",
    "start": "1573460",
    "end": "1579490"
  },
  {
    "text": "will be get copied and the lifecycle events will happen so all the three instance have been successfully deployed",
    "start": "1579490",
    "end": "1586770"
  },
  {
    "text": "so if you go into the events you can get the logs output if there's an error you",
    "start": "1586770",
    "end": "1592270"
  },
  {
    "text": "can see that those errors over here but in this case all the steps successfully ran so back in my laptop so these are",
    "start": "1592270",
    "end": "1599950"
  },
  {
    "text": "not net application so if I type dotnet my donkey Abdullah it will print the message that I change",
    "start": "1599950",
    "end": "1606659"
  },
  {
    "text": "so the next section we are going to learn how you can do contain a",
    "start": "1609510",
    "end": "1614679"
  },
  {
    "text": "deployment at scale with the help of Amazon Elastic container services and you're going to integrate this one with",
    "start": "1614679",
    "end": "1621460"
  },
  {
    "text": "ashraddha verbs so in abuse provides a lot of content orchestration services so",
    "start": "1621460",
    "end": "1628870"
  },
  {
    "start": "1624000",
    "end": "1624000"
  },
  {
    "text": "if you are a fan of kubernetes we provide Cubana manage kubernetes clusters so you focus on your",
    "start": "1628870",
    "end": "1635080"
  },
  {
    "text": "application and build in your containers instead of worrying about how you go dot or scale for example if you want to have",
    "start": "1635080",
    "end": "1642010"
  },
  {
    "text": "unmanaged experience and if you want for example remote login check what is happening inside the containers you can",
    "start": "1642010",
    "end": "1647620"
  },
  {
    "text": "have something like Amazon Elastic container service you can run Windows containers on that if you want if you",
    "start": "1647620",
    "end": "1653020"
  },
  {
    "text": "want to have manage experience of container orchestration and you won't have an obvious specific service which",
    "start": "1653020",
    "end": "1659410"
  },
  {
    "text": "is tightly integrated with AWS services a is a good example and if you",
    "start": "1659410",
    "end": "1665559"
  },
  {
    "text": "want to keep your images we have Amazon Elastic container registry which is like a docker hub or sugar container registry",
    "start": "1665559",
    "end": "1672809"
  },
  {
    "text": "the only difference is that this is tightly integrated with AWS identity access management so that you can easily",
    "start": "1672809",
    "end": "1679620"
  },
  {
    "text": "provision images and then say hey this is my production environment that environment should take images only from",
    "start": "1679620",
    "end": "1685900"
  },
  {
    "text": "production repositories so we will focus on and elastic container registry in this demo so what we are going to",
    "start": "1685900",
    "end": "1693340"
  },
  {
    "start": "1692000",
    "end": "1692000"
  },
  {
    "text": "build we are going to have a custom there going to be a service running which represent your website",
    "start": "1693340",
    "end": "1700200"
  },
  {
    "text": "they're going to be two containers running version one it's running behind a load balancer and the users will",
    "start": "1700200",
    "end": "1706510"
  },
  {
    "text": "connect to these containers or using that load balancer so of course application changes developers want to",
    "start": "1706510",
    "end": "1713140"
  },
  {
    "text": "make some changes they change asp.net web application push it in console repository kickstart or pipeline or with",
    "start": "1713140",
    "end": "1720880"
  },
  {
    "text": "the help of a built agent we are going to create an image so if it's a Linux",
    "start": "1720880",
    "end": "1725950"
  },
  {
    "text": "agent or you can create a Linux image or if it is a window surgeon you can create a window surgeon and then I'm going to",
    "start": "1725950",
    "end": "1732490"
  },
  {
    "text": "publish this image into a mess and easier and once I publish I'm going to invoke",
    "start": "1732490",
    "end": "1740080"
  },
  {
    "text": "the service and then say hey service there's a new image take that image and then orchestrate these containers so the",
    "start": "1740080",
    "end": "1745809"
  },
  {
    "text": "version two of the containers will become live elastic load balancing will direct the traffic into the new",
    "start": "1745809",
    "end": "1750900"
  },
  {
    "text": "containers and then it will take the traffic off from the oil containers and all containers will automatically drain",
    "start": "1750900",
    "end": "1757600"
  },
  {
    "text": "after a moment and they after that or the contents will vanish and you will have your website running on the new",
    "start": "1757600",
    "end": "1763419"
  },
  {
    "text": "containers so this application going into the team of two of application that",
    "start": "1763419",
    "end": "1768789"
  },
  {
    "text": "I'm creating is called my wolf application again I recorded it because for the best interest of time so let's",
    "start": "1768789",
    "end": "1774549"
  },
  {
    "text": "see how we can do that so I have my customer no there's one service running and two tasks task",
    "start": "1774549",
    "end": "1780640"
  },
  {
    "text": "is pretty much the container set of containers that I'm running so if you're going to disgusto you can find that my",
    "start": "1780640",
    "end": "1785740"
  },
  {
    "text": "wolf at web site is already set up right so this represent maybe your web the application maybe it's an API endpoint",
    "start": "1785740",
    "end": "1792039"
  },
  {
    "text": "maybe it's your batch jobs that you want to run so in the past you can find that there are two containers running they",
    "start": "1792039",
    "end": "1799030"
  },
  {
    "text": "are all in healthy state so if I go into my service my wolf app you can find that",
    "start": "1799030",
    "end": "1804280"
  },
  {
    "text": "it's in healthy state I won't have two tasks running and it's running two tasks",
    "start": "1804280",
    "end": "1809590"
  },
  {
    "text": "so it's in the desired State so it's in running state and seen a good help so",
    "start": "1809590",
    "end": "1815830"
  },
  {
    "text": "what we are going to do is a new deployment if you look at you a lot balanced so you can find that behind the",
    "start": "1815830",
    "end": "1821110"
  },
  {
    "text": "load balancer there are two containers running with these two IP addresses they all port 80 running and they are healthy",
    "start": "1821110",
    "end": "1827230"
  },
  {
    "text": "State so these are the containers that is running and then these containers are what is behind this load balancer right",
    "start": "1827230",
    "end": "1833530"
  },
  {
    "text": "so keep track of these IP addresses so I have my web application if you go into that elastic load balancing URL you have",
    "start": "1833530",
    "end": "1840789"
  },
  {
    "text": "this my wolf app if you refresh it especially with the for Mozilla Firefox Chrome browser you'll see that the",
    "start": "1840789",
    "end": "1847090"
  },
  {
    "text": "round-robin load balancing right this container ID is actually the IP address of the stew containers that is printing",
    "start": "1847090",
    "end": "1853200"
  },
  {
    "text": "so it's round-robin between those two containers so what I want to do is to publish a new image into this container",
    "start": "1853200",
    "end": "1860140"
  },
  {
    "text": "registry alright so right now I have set up my service in a way here service take",
    "start": "1860140",
    "end": "1865870"
  },
  {
    "text": "the latest image from my container repository and then use it as a",
    "start": "1865870",
    "end": "1871240"
  },
  {
    "text": "the image for your service so the image is already there so back in my pipeline I have set up all the normal build steps",
    "start": "1871240",
    "end": "1878920"
  },
  {
    "text": "or you have not net core build steps which is create the web application and then I'm going to use the typical docker",
    "start": "1878920",
    "end": "1885820"
  },
  {
    "text": "commands so see my all pipeline here is just a set of commands right so I use",
    "start": "1885820",
    "end": "1890920"
  },
  {
    "text": "the docker build command to build that docker image so that will get built inside that built agent then I'm going",
    "start": "1890920",
    "end": "1898300"
  },
  {
    "text": "to login into my elastic container registry I'm going to tag the images in the proper URLs and then I'm going to",
    "start": "1898300",
    "end": "1905650"
  },
  {
    "text": "call Daka push and then push that image into Amazon ECR alright so once the",
    "start": "1905650",
    "end": "1911440"
  },
  {
    "text": "image is there I tag it already has latest image I'm going to invoke so see I'm using a double use command line",
    "start": "1911440",
    "end": "1917950"
  },
  {
    "text": "interface I'm going to say hey WCC yes there's a new image on the repository go",
    "start": "1917950",
    "end": "1923290"
  },
  {
    "text": "there and then orchestrate that on target so like before if you want to make some modification into the web",
    "start": "1923290",
    "end": "1929260"
  },
  {
    "text": "application so let's check instead of saying welcome to fog it so let's say welcome to fog it and let's change the",
    "start": "1929260",
    "end": "1935650"
  },
  {
    "text": "version of this front page message into version two so I change it so next thing",
    "start": "1935650",
    "end": "1942460"
  },
  {
    "text": "obviously is to save these changes committed so let's put a message to keep",
    "start": "1942460",
    "end": "1947590"
  },
  {
    "text": "track of what went in this application and then what I'm going to do is to save it and they like before publish into our",
    "start": "1947590",
    "end": "1954460"
  },
  {
    "text": "repository because I'm using a Linux instance here so I'm programming on Linux here alright don't encode is",
    "start": "1954460",
    "end": "1959500"
  },
  {
    "text": "running on Linux I haven't set up the Active Directory Integration properly here so I put my credentials to login",
    "start": "1959500",
    "end": "1965470"
  },
  {
    "text": "into Amazon ECR and after that it got published so you can find that the",
    "start": "1965470",
    "end": "1970630"
  },
  {
    "text": "pipeline automatically kick-started and it's going to now take the image like",
    "start": "1970630",
    "end": "1976090"
  },
  {
    "text": "build the application create the image and the beauty of amazon NCR is that you don't want to always publish the full",
    "start": "1976090",
    "end": "1982179"
  },
  {
    "text": "image right so if you have Delta changes and you imagine 10 gigabyte only the Delta changes are publishing to easier",
    "start": "1982179",
    "end": "1988990"
  },
  {
    "text": "so if you have a large image it won't take a long time to upload into ECR so here you can find that at some stage",
    "start": "1988990",
    "end": "1995080"
  },
  {
    "text": "when during the publication state it will say there are some darker layers",
    "start": "1995080",
    "end": "2001020"
  },
  {
    "text": "already existing so I'm only going to publish the Delta changes maybe it does layers only contains your web",
    "start": "2001020",
    "end": "2007110"
  },
  {
    "text": "application changes or the pages right so it's going to publish these Delta",
    "start": "2007110",
    "end": "2012120"
  },
  {
    "text": "layers into your local repository and once it publish is going to invoke Amazon so this and then say they",
    "start": "2012120",
    "end": "2020010"
  },
  {
    "text": "are going to be a new deployment so if you look at here from the time i refresh it's going to get a new deployment so",
    "start": "2020010",
    "end": "2025740"
  },
  {
    "text": "you can find that the oil deployment is already in place so it's still running so there's a new deployment that came",
    "start": "2025740",
    "end": "2031590"
  },
  {
    "text": "into place so what will happen now is that the new deployment has to download that image to the container host it's",
    "start": "2031590",
    "end": "2038940"
  },
  {
    "text": "going to start it so behind the scene the application is still version one right so what will happen is that it's",
    "start": "2038940",
    "end": "2044429"
  },
  {
    "text": "going to download the image start the containers so while those tasks are",
    "start": "2044429",
    "end": "2049589"
  },
  {
    "text": "happening still it's running the the version right so the old deployment is",
    "start": "2049589",
    "end": "2056730"
  },
  {
    "text": "now done what will happen is the deployment is completed and then the",
    "start": "2056730",
    "end": "2062820"
  },
  {
    "text": "deployment is ready and after a moment the new containers will become live and",
    "start": "2062820",
    "end": "2068700"
  },
  {
    "text": "you can find from the time that you refresh the old container images are",
    "start": "2068700",
    "end": "2074669"
  },
  {
    "text": "still healthy and the initial ones are the old the new containers that I",
    "start": "2074669",
    "end": "2080010"
  },
  {
    "text": "publish an initial state so they need to still pass through the health checks of",
    "start": "2080010",
    "end": "2085980"
  },
  {
    "text": "the load balancer and from the time they passed the launch our health checks you can find that the version 1 and version",
    "start": "2085980",
    "end": "2092520"
  },
  {
    "text": "2 are interchangeable right so you can sit how this is going to work for example you can check the set the time",
    "start": "2092520",
    "end": "2099329"
  },
  {
    "text": "for these containers to become live but from the time they all container start",
    "start": "2099329",
    "end": "2105270"
  },
  {
    "text": "draining right the new containers will become the the live one so we can find",
    "start": "2105270",
    "end": "2110550"
  },
  {
    "text": "that all containers are now training and the new containers are the healthy one and if you refresh your page you will",
    "start": "2110550",
    "end": "2117000"
  },
  {
    "text": "find that the whole application is now embedded into version 2 so you can find that now it's doing the round-robin",
    "start": "2117000",
    "end": "2123030"
  },
  {
    "text": "between the two new containers so a very common question that is asked is how to",
    "start": "2123030",
    "end": "2129810"
  },
  {
    "text": "manage the secrets right so maybe you want to keep the database connection strings or the passwords the way to do",
    "start": "2129810",
    "end": "2137190"
  },
  {
    "start": "2137000",
    "end": "2137000"
  },
  {
    "text": "that is to use a parameter stole you can define the scope that you want to have you can say this is my",
    "start": "2137190",
    "end": "2142770"
  },
  {
    "text": "production finance application password so once you define these parameters you",
    "start": "2142770",
    "end": "2148920"
  },
  {
    "text": "can keep this super-secret password here you can attach a permission saying that hey I do have I don't have access to",
    "start": "2148920",
    "end": "2156810"
  },
  {
    "start": "2152000",
    "end": "2152000"
  },
  {
    "text": "production passwords but I do have access to a development password so you do that one with I am permissions once",
    "start": "2156810",
    "end": "2162930"
  },
  {
    "text": "you have that permission you attach into either your PowerShell script to your I am user or the instance profile that is",
    "start": "2162930",
    "end": "2169470"
  },
  {
    "text": "running this development machine and once that you can access them with the",
    "start": "2169470",
    "end": "2175410"
  },
  {
    "start": "2174000",
    "end": "2174000"
  },
  {
    "text": "help of PowerShell you can also access it with help of cord if you want",
    "start": "2175410",
    "end": "2180860"
  },
  {
    "text": "so we already studied like how to manage your secret how to do all these nice",
    "start": "2180860",
    "end": "2186090"
  },
  {
    "text": "deployment if you are interest to get your hands dirty and then learn them how to do this we are going to run some boot",
    "start": "2186090",
    "end": "2192930"
  },
  {
    "text": "camps it's about 13 hours of hands-on labs and we will keep in touch with you and you will get a mail from us please",
    "start": "2192930",
    "end": "2199710"
  },
  {
    "text": "feel to attend to this boot camp and everything that I discuss here we are going to do her hands-on labs and they",
    "start": "2199710",
    "end": "2205620"
  },
  {
    "text": "learn how to do that hope you enjoyed this session thank you for your time and this is my contact details a simple",
    "start": "2205620",
    "end": "2214290"
  },
  {
    "text": "clean touch",
    "start": "2214290",
    "end": "2216800"
  }
]