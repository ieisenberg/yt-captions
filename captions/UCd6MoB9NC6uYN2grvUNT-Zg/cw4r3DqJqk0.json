[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "hello can you guys hear me yeah okay",
    "start": "800",
    "end": "5810"
  },
  {
    "text": "well thanks for joining us guys today",
    "start": "5810",
    "end": "8460"
  },
  {
    "text": "we're going to talk about casually",
    "start": "8460",
    "end": "9809"
  },
  {
    "text": "executing arbitrary code using AWS",
    "start": "9809",
    "end": "12150"
  },
  {
    "text": "services more specifically we're going",
    "start": "12150",
    "end": "14849"
  },
  {
    "text": "to be talking about how we used AWS",
    "start": "14849",
    "end": "18900"
  },
  {
    "text": "services to help add some functionality",
    "start": "18900",
    "end": "21750"
  },
  {
    "text": "to our platform that enabled our",
    "start": "21750",
    "end": "23250"
  },
  {
    "text": "students to execute code while they were",
    "start": "23250",
    "end": "25980"
  },
  {
    "text": "learning lessons in their browsers so",
    "start": "25980",
    "end": "30990"
  },
  {
    "text": "before we get into the the good stuff",
    "start": "30990",
    "end": "33059"
  },
  {
    "text": "just a little bit about general assembly",
    "start": "33059",
    "end": "35450"
  },
  {
    "text": "we're establishing in 2011 and we like",
    "start": "35450",
    "end": "39540"
  },
  {
    "text": "to consider ourselves an education",
    "start": "39540",
    "end": "41790"
  },
  {
    "text": "company for the 21st century we offer a",
    "start": "41790",
    "end": "44910"
  },
  {
    "text": "variety of courses in data design and",
    "start": "44910",
    "end": "47340"
  },
  {
    "text": "technology we have 25 campuses over 25",
    "start": "47340",
    "end": "54030"
  },
  {
    "text": "campuses worldwide we have over 40,000",
    "start": "54030",
    "end": "57539"
  },
  {
    "text": "student alumni and we work with a",
    "start": "57539",
    "end": "59399"
  },
  {
    "text": "hundred different business partners",
    "start": "59399",
    "end": "63829"
  },
  {
    "start": "65000",
    "end": "203000"
  },
  {
    "text": "so the the courses that we offer we have",
    "start": "66220",
    "end": "69880"
  },
  {
    "text": "a few different formats we have formats",
    "start": "69880",
    "end": "73180"
  },
  {
    "text": "that range from weekend workshops that",
    "start": "73180",
    "end": "76900"
  },
  {
    "text": "are like just one to day events all the",
    "start": "76900",
    "end": "79210"
  },
  {
    "text": "way up to our most popular 12-week",
    "start": "79210",
    "end": "82090"
  },
  {
    "text": "immersive programs so we also offer",
    "start": "82090",
    "end": "86290"
  },
  {
    "text": "these courses to our enterprise",
    "start": "86290",
    "end": "88180"
  },
  {
    "text": "customers who want to sort of retrain",
    "start": "88180",
    "end": "91270"
  },
  {
    "text": "their their workforces in instead of",
    "start": "91270",
    "end": "94030"
  },
  {
    "text": "using our curriculums and so that's kind",
    "start": "94030",
    "end": "97390"
  },
  {
    "text": "of where our story starts more",
    "start": "97390",
    "end": "100150"
  },
  {
    "text": "specifically it starts around mid q2",
    "start": "100150",
    "end": "103090"
  },
  {
    "text": "this year one of our enterprise",
    "start": "103090",
    "end": "105430"
  },
  {
    "text": "customers came to us and they wanted to",
    "start": "105430",
    "end": "107350"
  },
  {
    "text": "retrain some of their students using our",
    "start": "107350",
    "end": "110110"
  },
  {
    "text": "data science curriculum and so at the",
    "start": "110110",
    "end": "113979"
  },
  {
    "text": "same time our content team wanted to",
    "start": "113979",
    "end": "117130"
  },
  {
    "text": "refresh the pre-work content that our",
    "start": "117130",
    "end": "120220"
  },
  {
    "text": "students take on platform before they",
    "start": "120220",
    "end": "122500"
  },
  {
    "text": "get into the course and so in order to",
    "start": "122500",
    "end": "124870"
  },
  {
    "text": "do this one of the the requirements was",
    "start": "124870",
    "end": "129130"
  },
  {
    "text": "that the students are able to execute",
    "start": "129130",
    "end": "130780"
  },
  {
    "text": "code while they're in lesson we have",
    "start": "130780",
    "end": "134290"
  },
  {
    "text": "found through our our sort of previous",
    "start": "134290",
    "end": "136930"
  },
  {
    "text": "platforms and courses that students who",
    "start": "136930",
    "end": "139180"
  },
  {
    "text": "are able to execute code rather students",
    "start": "139180",
    "end": "141850"
  },
  {
    "text": "are able to practice what they're",
    "start": "141850",
    "end": "143140"
  },
  {
    "text": "learning while they're learning it just",
    "start": "143140",
    "end": "145660"
  },
  {
    "text": "retain that information better and so we",
    "start": "145660",
    "end": "147820"
  },
  {
    "text": "wanted to give them the functionality so",
    "start": "147820",
    "end": "149620"
  },
  {
    "text": "that while they're in the browser they",
    "start": "149620",
    "end": "150790"
  },
  {
    "text": "can execute sequel statements Python",
    "start": "150790",
    "end": "152680"
  },
  {
    "text": "statements and actually you know do that",
    "start": "152680",
    "end": "155440"
  },
  {
    "text": "without having to stand up a whole",
    "start": "155440",
    "end": "156640"
  },
  {
    "text": "environment right this was also not a",
    "start": "156640",
    "end": "160840"
  },
  {
    "text": "new feature that we wanted to roll out",
    "start": "160840",
    "end": "163120"
  },
  {
    "text": "this was something that we had kind of",
    "start": "163120",
    "end": "164350"
  },
  {
    "text": "planned to do but was just kind of",
    "start": "164350",
    "end": "166660"
  },
  {
    "text": "reship the priorities so we knew it",
    "start": "166660",
    "end": "168430"
  },
  {
    "text": "needed to support our future content so",
    "start": "168430",
    "end": "171160"
  },
  {
    "text": "this is also important the other",
    "start": "171160",
    "end": "174040"
  },
  {
    "text": "requirement that we had was that we",
    "start": "174040",
    "end": "175480"
  },
  {
    "text": "couldn't actually use our legacy",
    "start": "175480",
    "end": "176890"
  },
  {
    "text": "platform so we do have an existing",
    "start": "176890",
    "end": "179080"
  },
  {
    "text": "platform that allows students to to do",
    "start": "179080",
    "end": "181480"
  },
  {
    "text": "this that to execute code for example we",
    "start": "181480",
    "end": "183400"
  },
  {
    "text": "have sequel courses and JavaScript",
    "start": "183400",
    "end": "185260"
  },
  {
    "text": "courses and you can kind",
    "start": "185260",
    "end": "186290"
  },
  {
    "text": "on platform now but because we were",
    "start": "186290",
    "end": "188360"
  },
  {
    "text": "refreshing this content we couldn't",
    "start": "188360",
    "end": "189799"
  },
  {
    "text": "actually use the legacy platform and",
    "start": "189799",
    "end": "194900"
  },
  {
    "text": "finally this functionality had to be",
    "start": "194900",
    "end": "196969"
  },
  {
    "text": "ready in a few weeks or QA so obviously",
    "start": "196969",
    "end": "200659"
  },
  {
    "text": "we went back to the content team and we",
    "start": "200659",
    "end": "202340"
  },
  {
    "text": "said sure no problem we'll take care of",
    "start": "202340",
    "end": "205280"
  },
  {
    "start": "203000",
    "end": "390000"
  },
  {
    "text": "that it's actually not what we said we",
    "start": "205280",
    "end": "207470"
  },
  {
    "text": "said you're blowing up our roadmap and",
    "start": "207470",
    "end": "209500"
  },
  {
    "text": "we're gonna we're gonna push up push off",
    "start": "209500",
    "end": "212329"
  },
  {
    "text": "things that we'd really like to be",
    "start": "212329",
    "end": "213349"
  },
  {
    "text": "working on and they said yes we know",
    "start": "213349",
    "end": "215209"
  },
  {
    "text": "we're sorry please do it anyway it's",
    "start": "215209",
    "end": "216980"
  },
  {
    "text": "always said sure so from an engineering",
    "start": "216980",
    "end": "220819"
  },
  {
    "text": "standpoint we also had a few",
    "start": "220819",
    "end": "222439"
  },
  {
    "text": "requirements of our own in order to",
    "start": "222439",
    "end": "224540"
  },
  {
    "text": "casually execute arbitrary code first",
    "start": "224540",
    "end": "227209"
  },
  {
    "text": "and foremost it has to be secure right",
    "start": "227209",
    "end": "229639"
  },
  {
    "text": "the last thing you want is students to",
    "start": "229639",
    "end": "231829"
  },
  {
    "text": "be able to you know execute code on the",
    "start": "231829",
    "end": "234169"
  },
  {
    "text": "platform that you know does Bitcoin",
    "start": "234169",
    "end": "236000"
  },
  {
    "text": "mining or you know can hack into other",
    "start": "236000",
    "end": "238220"
  },
  {
    "text": "services so this is our top priority",
    "start": "238220",
    "end": "241750"
  },
  {
    "text": "again you know as we pointed out earlier",
    "start": "241750",
    "end": "244329"
  },
  {
    "text": "because we knew we were going to be",
    "start": "244329",
    "end": "246049"
  },
  {
    "text": "migrating other lesson content onto this",
    "start": "246049",
    "end": "248209"
  },
  {
    "text": "platform in the future we had to support",
    "start": "248209",
    "end": "250430"
  },
  {
    "text": "things like Ruby Java Android",
    "start": "250430",
    "end": "255709"
  },
  {
    "text": "development iOS development things other",
    "start": "255709",
    "end": "257630"
  },
  {
    "text": "courses that we offer we knew we would",
    "start": "257630",
    "end": "258949"
  },
  {
    "text": "want to be able to support that",
    "start": "258949",
    "end": "259849"
  },
  {
    "text": "functionality and so we want to make",
    "start": "259849",
    "end": "261590"
  },
  {
    "text": "sure that whenever we built today would",
    "start": "261590",
    "end": "263630"
  },
  {
    "text": "be future proof we also wanted this the",
    "start": "263630",
    "end": "267740"
  },
  {
    "text": "scale easily we're not a very large",
    "start": "267740",
    "end": "269330"
  },
  {
    "text": "engineering team we have no operations",
    "start": "269330",
    "end": "271849"
  },
  {
    "text": "team whatsoever right now and in fact we",
    "start": "271849",
    "end": "273620"
  },
  {
    "text": "we rely on a service like Heroku for",
    "start": "273620",
    "end": "277460"
  },
  {
    "text": "most of our other applications so",
    "start": "277460",
    "end": "278630"
  },
  {
    "text": "whenever we stood up we wanted to be we",
    "start": "278630",
    "end": "280789"
  },
  {
    "text": "wanted to not have to worry about",
    "start": "280789",
    "end": "282169"
  },
  {
    "text": "scaling up we also naturally wanted this",
    "start": "282169",
    "end": "285949"
  },
  {
    "text": "thing to be cost-effective we didn't",
    "start": "285949",
    "end": "287810"
  },
  {
    "text": "want to have to worry about you know how",
    "start": "287810",
    "end": "290150"
  },
  {
    "text": "often our students were executing code",
    "start": "290150",
    "end": "291680"
  },
  {
    "text": "we didn't want to have to worry about",
    "start": "291680",
    "end": "293349"
  },
  {
    "text": "you know limiting that at all so",
    "start": "293349",
    "end": "295729"
  },
  {
    "text": "whenever we stood up we wanted to make",
    "start": "295729",
    "end": "297080"
  },
  {
    "text": "sure that it was cheap to run and last",
    "start": "297080",
    "end": "301639"
  },
  {
    "text": "but definitely not least we we wanted",
    "start": "301639",
    "end": "303620"
  },
  {
    "text": "the service to be fast from a user",
    "start": "303620",
    "end": "305900"
  },
  {
    "text": "experience perspective having your",
    "start": "305900",
    "end": "308720"
  },
  {
    "text": "students you know press run and see the",
    "start": "308720",
    "end": "311060"
  },
  {
    "text": "results back instantly it's just way",
    "start": "311060",
    "end": "313430"
  },
  {
    "text": "more gratifying for",
    "start": "313430",
    "end": "314660"
  },
  {
    "text": "while they're learning we wanted to try",
    "start": "314660",
    "end": "316490"
  },
  {
    "text": "to get it to feel like they were",
    "start": "316490",
    "end": "317930"
  },
  {
    "text": "executing it on their local machine or",
    "start": "317930",
    "end": "320240"
  },
  {
    "text": "at least as close to that speed as",
    "start": "320240",
    "end": "321530"
  },
  {
    "text": "possible so we we looked at a few",
    "start": "321530",
    "end": "326210"
  },
  {
    "text": "different options for this we started",
    "start": "326210",
    "end": "327980"
  },
  {
    "text": "with Bill diverses by and we kind of",
    "start": "327980",
    "end": "329300"
  },
  {
    "text": "very quickly ruled that out so we went",
    "start": "329300",
    "end": "332060"
  },
  {
    "text": "to we went down the build route and one",
    "start": "332060",
    "end": "334760"
  },
  {
    "text": "of the things that that we knew from a",
    "start": "334760",
    "end": "337070"
  },
  {
    "text": "security perspective was that we wanted",
    "start": "337070",
    "end": "339950"
  },
  {
    "text": "to kind of avoid sandbox",
    "start": "339950",
    "end": "341330"
  },
  {
    "text": "language-specific sand boxes they have",
    "start": "341330",
    "end": "344210"
  },
  {
    "text": "proven in the past to not be a hundred",
    "start": "344210",
    "end": "346040"
  },
  {
    "text": "percent effective and they're also a",
    "start": "346040",
    "end": "347750"
  },
  {
    "text": "little tedious to set up every time you",
    "start": "347750",
    "end": "349700"
  },
  {
    "text": "want to add support for a new language",
    "start": "349700",
    "end": "351230"
  },
  {
    "text": "you have to make sure that you're able",
    "start": "351230",
    "end": "352580"
  },
  {
    "text": "to sandbox that code so we were kind of",
    "start": "352580",
    "end": "354740"
  },
  {
    "text": "leaning towards containers for executing",
    "start": "354740",
    "end": "356870"
  },
  {
    "text": "the code something immutable something",
    "start": "356870",
    "end": "360170"
  },
  {
    "text": "that we can kind of stand up easily but",
    "start": "360170",
    "end": "362060"
  },
  {
    "text": "we knew that if we went down this build",
    "start": "362060",
    "end": "363860"
  },
  {
    "text": "route with containers even leveraging",
    "start": "363860",
    "end": "366110"
  },
  {
    "text": "some AWS services we probably have to",
    "start": "366110",
    "end": "367850"
  },
  {
    "text": "put something in place to kind of",
    "start": "367850",
    "end": "368900"
  },
  {
    "text": "orchestrate everything and again being a",
    "start": "368900",
    "end": "371000"
  },
  {
    "text": "small engineering team we wanted to try",
    "start": "371000",
    "end": "373100"
  },
  {
    "text": "to avoid having to wear anything like",
    "start": "373100",
    "end": "374450"
  },
  {
    "text": "you know pagers and make sure the",
    "start": "374450",
    "end": "376190"
  },
  {
    "text": "application was up so we want to try to",
    "start": "376190",
    "end": "378200"
  },
  {
    "text": "avoid that if we could fortunately",
    "start": "378200",
    "end": "382630"
  },
  {
    "text": "exploring some of our options we came",
    "start": "382630",
    "end": "385130"
  },
  {
    "text": "across lamda and in actually fit all of",
    "start": "385130",
    "end": "387680"
  },
  {
    "text": "our needs really well and so we were",
    "start": "387680",
    "end": "389990"
  },
  {
    "text": "able to avoid having to do anything from",
    "start": "389990",
    "end": "392120"
  },
  {
    "start": "390000",
    "end": "557000"
  },
  {
    "text": "an Operations perspective we're gonna",
    "start": "392120",
    "end": "393500"
  },
  {
    "text": "explain why so from a security",
    "start": "393500",
    "end": "397220"
  },
  {
    "text": "standpoint lambda gives you read-only",
    "start": "397220",
    "end": "399080"
  },
  {
    "text": "containers out of the box so when your",
    "start": "399080",
    "end": "401300"
  },
  {
    "text": "lambda function executes it's in a",
    "start": "401300",
    "end": "403340"
  },
  {
    "text": "read-only container with the exception",
    "start": "403340",
    "end": "404780"
  },
  {
    "text": "of temp and if you couple that with V",
    "start": "404780",
    "end": "407960"
  },
  {
    "text": "pcs you're able to lock down the lambda",
    "start": "407960",
    "end": "410930"
  },
  {
    "text": "that the students code is running in so",
    "start": "410930",
    "end": "413090"
  },
  {
    "text": "that can actually reach out to other",
    "start": "413090",
    "end": "414380"
  },
  {
    "text": "network services so you basically give",
    "start": "414380",
    "end": "416630"
  },
  {
    "text": "them an environment that they can do",
    "start": "416630",
    "end": "418100"
  },
  {
    "text": "whatever they want in and you don't",
    "start": "418100",
    "end": "419330"
  },
  {
    "text": "actually have to worry about what it's",
    "start": "419330",
    "end": "421040"
  },
  {
    "text": "reaching out to it can't reach any other",
    "start": "421040",
    "end": "422570"
  },
  {
    "text": "network services can't reach anything",
    "start": "422570",
    "end": "423919"
  },
  {
    "text": "inside your network and so it just it",
    "start": "423919",
    "end": "427610"
  },
  {
    "text": "kind of eliminates that problem together",
    "start": "427610",
    "end": "430900"
  },
  {
    "text": "lambda officially supports a few",
    "start": "431160",
    "end": "433980"
  },
  {
    "text": "languages right now they have a couple",
    "start": "433980",
    "end": "435750"
  },
  {
    "text": "more languages on their roadmap for this",
    "start": "435750",
    "end": "437160"
  },
  {
    "text": "year but essentially using a technique",
    "start": "437160",
    "end": "439680"
  },
  {
    "text": "called shimming you're able to execute",
    "start": "439680",
    "end": "441930"
  },
  {
    "text": "any binary that you can compile on Linux",
    "start": "441930",
    "end": "444780"
  },
  {
    "text": "so you package that binary with your",
    "start": "444780",
    "end": "446580"
  },
  {
    "text": "service and you can run whatever you",
    "start": "446580",
    "end": "448410"
  },
  {
    "text": "want and so you could find examples of",
    "start": "448410",
    "end": "450660"
  },
  {
    "text": "this online you can run go",
    "start": "450660",
    "end": "452130"
  },
  {
    "text": "you can run Ruby you can run Swift even",
    "start": "452130",
    "end": "454380"
  },
  {
    "text": "though they're not natively supported",
    "start": "454380",
    "end": "455690"
  },
  {
    "text": "and as I mentioned they're also planning",
    "start": "455690",
    "end": "457770"
  },
  {
    "text": "on adding native support for go and I",
    "start": "457770",
    "end": "460260"
  },
  {
    "text": "believe go PHP and Ruby slated for this",
    "start": "460260",
    "end": "462630"
  },
  {
    "text": "year I'm getting some nods in the back",
    "start": "462630",
    "end": "464040"
  },
  {
    "text": "so cool scaling this is actually one of",
    "start": "464040",
    "end": "469140"
  },
  {
    "text": "my favorite parts going server lists",
    "start": "469140",
    "end": "472110"
  },
  {
    "text": "essentially gives you opaque",
    "start": "472110",
    "end": "473160"
  },
  {
    "text": "infrastructure you don't care about the",
    "start": "473160",
    "end": "474900"
  },
  {
    "text": "hardware at all there are of course",
    "start": "474900",
    "end": "476400"
  },
  {
    "text": "servers somewhere but you don't have to",
    "start": "476400",
    "end": "478410"
  },
  {
    "text": "worry about it so we wound up using API",
    "start": "478410",
    "end": "481710"
  },
  {
    "text": "gateway in front of lamda and that gives",
    "start": "481710",
    "end": "484680"
  },
  {
    "text": "you the full server list stack so you",
    "start": "484680",
    "end": "486480"
  },
  {
    "text": "don't have to actually deploy any",
    "start": "486480",
    "end": "487680"
  },
  {
    "text": "applications it's on it's all on AWS",
    "start": "487680",
    "end": "490650"
  },
  {
    "text": "using BPI gateway in lamda no scaling no",
    "start": "490650",
    "end": "494130"
  },
  {
    "text": "worrying about how many serves it runs",
    "start": "494130",
    "end": "495450"
  },
  {
    "text": "on doesn't matter how much load you",
    "start": "495450",
    "end": "497250"
  },
  {
    "text": "throw at it",
    "start": "497250",
    "end": "498030"
  },
  {
    "text": "AWS is going to take care of it from a",
    "start": "498030",
    "end": "501780"
  },
  {
    "text": "cost perspective for our use case lambda",
    "start": "501780",
    "end": "504510"
  },
  {
    "text": "specifically we get a million free",
    "start": "504510",
    "end": "507090"
  },
  {
    "text": "requests per month this is just part of",
    "start": "507090",
    "end": "509160"
  },
  {
    "text": "their free tier it changes based on how",
    "start": "509160",
    "end": "511560"
  },
  {
    "text": "much memory uses you're using but out of",
    "start": "511560",
    "end": "513750"
  },
  {
    "text": "the box for our use case the majority of",
    "start": "513750",
    "end": "516419"
  },
  {
    "text": "our requests are free and beyond that",
    "start": "516419",
    "end": "519419"
  },
  {
    "text": "it's incredibly cheap I think it's",
    "start": "519419",
    "end": "521190"
  },
  {
    "text": "something like 20 cents per million",
    "start": "521190",
    "end": "523050"
  },
  {
    "text": "executions for our memories so it worked",
    "start": "523050",
    "end": "526140"
  },
  {
    "text": "out really well here and then finally",
    "start": "526140",
    "end": "530640"
  },
  {
    "text": "our speed we were pleasantly surprised",
    "start": "530640",
    "end": "533070"
  },
  {
    "text": "to see lambda not only lambda but going",
    "start": "533070",
    "end": "537480"
  },
  {
    "text": "through the API gateway round-trip",
    "start": "537480",
    "end": "539520"
  },
  {
    "text": "requests were turning in 50 to 100",
    "start": "539520",
    "end": "541589"
  },
  {
    "text": "milliseconds on average and from a",
    "start": "541589",
    "end": "543780"
  },
  {
    "text": "student experience perspective they",
    "start": "543780",
    "end": "546330"
  },
  {
    "text": "press the Run button and they get",
    "start": "546330",
    "end": "547560"
  },
  {
    "text": "instant results back which is great we",
    "start": "547560",
    "end": "549510"
  },
  {
    "text": "were really really surprised to see this",
    "start": "549510",
    "end": "551220"
  },
  {
    "text": "I was actually expecting a lot more",
    "start": "551220",
    "end": "553200"
  },
  {
    "text": "overhead from from the containers",
    "start": "553200",
    "end": "556959"
  },
  {
    "text": "and so this is sort of the the kind of",
    "start": "556959",
    "end": "562040"
  },
  {
    "start": "557000",
    "end": "590000"
  },
  {
    "text": "final product here this is our MVP I'm",
    "start": "562040",
    "end": "565850"
  },
  {
    "text": "happy to say that using AWS services we",
    "start": "565850",
    "end": "568399"
  },
  {
    "text": "were able to get from from concept to a",
    "start": "568399",
    "end": "571009"
  },
  {
    "text": "functioning prototype in under two weeks",
    "start": "571009",
    "end": "573069"
  },
  {
    "text": "and this itself I think the whole build",
    "start": "573069",
    "end": "575989"
  },
  {
    "text": "time was something like five weeks and",
    "start": "575989",
    "end": "577670"
  },
  {
    "text": "very little that was actually writing",
    "start": "577670",
    "end": "579589"
  },
  {
    "text": "code so with that said I'm gonna hand it",
    "start": "579589",
    "end": "583279"
  },
  {
    "text": "off to Graham and Graham is going to",
    "start": "583279",
    "end": "584779"
  },
  {
    "text": "explain some of the fun stuff about how",
    "start": "584779",
    "end": "586970"
  },
  {
    "text": "this actually works Thanks",
    "start": "586970",
    "end": "592540"
  },
  {
    "text": "so this is the implementation we came up",
    "start": "592540",
    "end": "595910"
  },
  {
    "text": "with as Nick said we spent a lot of time",
    "start": "595910",
    "end": "597649"
  },
  {
    "text": "thinking about this probably as much",
    "start": "597649",
    "end": "599749"
  },
  {
    "text": "time thinking about coming up with this",
    "start": "599749",
    "end": "601639"
  },
  {
    "text": "diagram as we spent actually",
    "start": "601639",
    "end": "603199"
  },
  {
    "text": "implementing it the blue arrows are the",
    "start": "603199",
    "end": "607819"
  },
  {
    "text": "flow of data through the app oh yeah so",
    "start": "607819",
    "end": "612379"
  },
  {
    "text": "we focused really on making this as",
    "start": "612379",
    "end": "614119"
  },
  {
    "text": "simple as we possibly could and",
    "start": "614119",
    "end": "616899"
  },
  {
    "text": "leveraging as much of Amazon services as",
    "start": "616899",
    "end": "620509"
  },
  {
    "text": "we could so really has three main",
    "start": "620509",
    "end": "625160"
  },
  {
    "text": "components the client which we just",
    "start": "625160",
    "end": "628129"
  },
  {
    "text": "showed the API gateway which is a W",
    "start": "628129",
    "end": "632689"
  },
  {
    "text": "service and then our execution API which",
    "start": "632689",
    "end": "635480"
  },
  {
    "text": "is composed of three lambdas so the",
    "start": "635480",
    "end": "639350"
  },
  {
    "text": "react client is our existing app we",
    "start": "639350",
    "end": "642919"
  },
  {
    "text": "wanted to encode as little information",
    "start": "642919",
    "end": "647089"
  },
  {
    "text": "about code execution into the app as",
    "start": "647089",
    "end": "650139"
  },
  {
    "text": "possible",
    "start": "650139",
    "end": "651739"
  },
  {
    "text": "we just wanted it to send out code get a",
    "start": "651739",
    "end": "654470"
  },
  {
    "text": "response continue on today the other",
    "start": "654470",
    "end": "658069"
  },
  {
    "text": "thing it does is record all the code",
    "start": "658069",
    "end": "660499"
  },
  {
    "text": "submissions and results in a tin can",
    "start": "660499",
    "end": "664160"
  },
  {
    "text": "learning record store I don't know if",
    "start": "664160",
    "end": "665869"
  },
  {
    "text": "you're right with that but it's real fun",
    "start": "665869",
    "end": "668509"
  },
  {
    "text": "anything I to work with",
    "start": "668509",
    "end": "671350"
  },
  {
    "text": "so then the next part is the API gateway",
    "start": "672870",
    "end": "675990"
  },
  {
    "text": "which super easy to configure especially",
    "start": "675990",
    "end": "680459"
  },
  {
    "text": "with authorization which going into this",
    "start": "680459",
    "end": "683459"
  },
  {
    "text": "we thought it was going to be a pretty",
    "start": "683459",
    "end": "684689"
  },
  {
    "text": "big headache turns out you're just",
    "start": "684689",
    "end": "686610"
  },
  {
    "text": "pointing it at a lambda that does the",
    "start": "686610",
    "end": "688459"
  },
  {
    "text": "authorization for you you get a result",
    "start": "688459",
    "end": "690959"
  },
  {
    "text": "and proxies it on to the lambda that you",
    "start": "690959",
    "end": "694829"
  },
  {
    "text": "want to call so the execution API lambda",
    "start": "694829",
    "end": "701209"
  },
  {
    "text": "it's made up of three parts so this",
    "start": "701209",
    "end": "706829"
  },
  {
    "text": "receives the students code along with",
    "start": "706829",
    "end": "708509"
  },
  {
    "text": "some metadata",
    "start": "708509",
    "end": "709259"
  },
  {
    "text": "about what it needs to execute as this",
    "start": "709259",
    "end": "713490"
  },
  {
    "text": "is in the context of teaching all of the",
    "start": "713490",
    "end": "717389"
  },
  {
    "text": "code that we execute runs against unit",
    "start": "717389",
    "end": "720089"
  },
  {
    "text": "tests in Python or expected results set",
    "start": "720089",
    "end": "723209"
  },
  {
    "text": "in sequel so the fetch instruction step",
    "start": "723209",
    "end": "727110"
  },
  {
    "text": "calls out to our instruction store and",
    "start": "727110",
    "end": "731250"
  },
  {
    "text": "then builds the execution plan and hands",
    "start": "731250",
    "end": "733709"
  },
  {
    "text": "off to whichever lambda is necessary and",
    "start": "733709",
    "end": "738540"
  },
  {
    "text": "the language lambdas as Nick mentioned",
    "start": "738540",
    "end": "739769"
  },
  {
    "text": "run inside a secure vpz that has no",
    "start": "739769",
    "end": "742829"
  },
  {
    "text": "outside internet access so it can only",
    "start": "742829",
    "end": "745769"
  },
  {
    "text": "receive data from the API lambda and",
    "start": "745769",
    "end": "750750"
  },
  {
    "text": "then pass back its result so then yeah",
    "start": "750750",
    "end": "756540"
  },
  {
    "text": "the API lambda passes its result back up",
    "start": "756540",
    "end": "760500"
  },
  {
    "text": "through the proxy back out to the react",
    "start": "760500",
    "end": "762839"
  },
  {
    "text": "client and the results get rendered so a",
    "start": "762839",
    "end": "768839"
  },
  {
    "text": "couple of best practices that we figured",
    "start": "768839",
    "end": "771569"
  },
  {
    "text": "out most of the demos that I've seen are",
    "start": "771569",
    "end": "775160"
  },
  {
    "text": "full of code in the handlers which",
    "start": "775160",
    "end": "780500"
  },
  {
    "text": "didn't really work for us so this is",
    "start": "780500",
    "end": "784079"
  },
  {
    "text": "literally our Python lambda handler",
    "start": "784079",
    "end": "788209"
  },
  {
    "text": "yeah so it calls out to a very easily",
    "start": "788990",
    "end": "791720"
  },
  {
    "text": "testable service object which so the",
    "start": "791720",
    "end": "797890"
  },
  {
    "text": "part of the reason why we went with",
    "start": "797890",
    "end": "800180"
  },
  {
    "text": "service objects is because we're big 12",
    "start": "800180",
    "end": "802370"
  },
  {
    "text": "factor fans and the handler runs in an",
    "start": "802370",
    "end": "806720"
  },
  {
    "text": "environment that we couldn't immediately",
    "start": "806720",
    "end": "807980"
  },
  {
    "text": "replicate although we just saw a cool",
    "start": "807980",
    "end": "812420"
  },
  {
    "text": "talk about Sam local which will allow us",
    "start": "812420",
    "end": "815900"
  },
  {
    "text": "to replicate the lambda stack much more",
    "start": "815900",
    "end": "819350"
  },
  {
    "text": "closely but yeah so service objects",
    "start": "819350",
    "end": "823430"
  },
  {
    "text": "super easy to test configuration wise",
    "start": "823430",
    "end": "829270"
  },
  {
    "text": "really worked out with our development",
    "start": "829270",
    "end": "832160"
  },
  {
    "text": "strategy yeah and sorry",
    "start": "832160",
    "end": "834950"
  },
  {
    "text": "our whole app is pretty small its 378",
    "start": "834950",
    "end": "837890"
  },
  {
    "text": "lines of code including the tests for",
    "start": "837890",
    "end": "840380"
  },
  {
    "text": "all three lambdas including the servlet",
    "start": "840380",
    "end": "844070"
  },
  {
    "text": "CLI configuration so it makes it really",
    "start": "844070",
    "end": "849560"
  },
  {
    "text": "easy to work on like comparing this to",
    "start": "849560",
    "end": "852500"
  },
  {
    "text": "even a reasonably sized go",
    "start": "852500",
    "end": "856120"
  },
  {
    "text": "implementation is just yeah it's named a",
    "start": "856120",
    "end": "862990"
  },
  {
    "text": "yeah",
    "start": "876860",
    "end": "879519"
  },
  {
    "text": "so the question was how do we map from",
    "start": "881100",
    "end": "884740"
  },
  {
    "text": "the Student Code to the tests that are",
    "start": "884740",
    "end": "888250"
  },
  {
    "text": "getting run so in the request we include",
    "start": "888250",
    "end": "891910"
  },
  {
    "text": "some metadata that then is processed by",
    "start": "891910",
    "end": "894430"
  },
  {
    "text": "the API lamda to fetch the unit tests",
    "start": "894430",
    "end": "899370"
  },
  {
    "text": "okay so yeah so our workflow right now",
    "start": "904760",
    "end": "909620"
  },
  {
    "text": "is we're using serverless CLI which",
    "start": "909620",
    "end": "912199"
  },
  {
    "text": "gives us configuration in version",
    "start": "912199",
    "end": "915800"
  },
  {
    "text": "control which is really nice it also",
    "start": "915800",
    "end": "918680"
  },
  {
    "text": "gives us per branch environments it's",
    "start": "918680",
    "end": "921350"
  },
  {
    "text": "really easy with simplicity line to",
    "start": "921350",
    "end": "923360"
  },
  {
    "text": "stand up a new environment either for",
    "start": "923360",
    "end": "926779"
  },
  {
    "text": "the entire Gateway or just a single",
    "start": "926779",
    "end": "928339"
  },
  {
    "text": "lambda if you wanted to test that so we",
    "start": "928339",
    "end": "932899"
  },
  {
    "text": "have sandbox environment staging",
    "start": "932899",
    "end": "934519"
  },
  {
    "text": "environment and production environment",
    "start": "934519",
    "end": "936610"
  },
  {
    "text": "and also branch environments to run",
    "start": "936610",
    "end": "942230"
  },
  {
    "text": "against branch environments of the react",
    "start": "942230",
    "end": "945410"
  },
  {
    "text": "app yeah and then once something goes to",
    "start": "945410",
    "end": "949519"
  },
  {
    "text": "master we have CI hooks that pick it up",
    "start": "949519",
    "end": "951529"
  },
  {
    "text": "and as soon as it's green it gets",
    "start": "951529",
    "end": "953839"
  },
  {
    "text": "deployed out to our staging branch and",
    "start": "953839",
    "end": "959260"
  },
  {
    "text": "yeah that flow would find a B mmm just",
    "start": "959260",
    "end": "965510"
  },
  {
    "text": "really really good for our productivity",
    "start": "965510",
    "end": "969190"
  },
  {
    "text": "so next things that we're thinking about",
    "start": "970480",
    "end": "974690"
  },
  {
    "text": "for this product definitely need a",
    "start": "974690",
    "end": "977209"
  },
  {
    "text": "better end in testing with some sort of",
    "start": "977209",
    "end": "979579"
  },
  {
    "text": "local environment so a couple of a",
    "start": "979579",
    "end": "984319"
  },
  {
    "text": "couple of options for that but Sam",
    "start": "984319",
    "end": "986360"
  },
  {
    "text": "locals looking up top of our list at",
    "start": "986360",
    "end": "988850"
  },
  {
    "text": "this point the current implementation",
    "start": "988850",
    "end": "991699"
  },
  {
    "text": "has the API lambda calling the language",
    "start": "991699",
    "end": "996589"
  },
  {
    "text": "specific lambdas and that lambda is",
    "start": "996589",
    "end": "1000130"
  },
  {
    "text": "executing the entire time that the",
    "start": "1000130",
    "end": "1002050"
  },
  {
    "text": "language specific lambdas are executing",
    "start": "1002050",
    "end": "1003639"
  },
  {
    "text": "so essentially we're being billed for",
    "start": "1003639",
    "end": "1005860"
  },
  {
    "text": "double the time which is an ideal so",
    "start": "1005860",
    "end": "1008410"
  },
  {
    "text": "we're probably going to move out to a",
    "start": "1008410",
    "end": "1010540"
  },
  {
    "text": "message queue which definitely gives us",
    "start": "1010540",
    "end": "1014949"
  },
  {
    "text": "some more parallelization options the",
    "start": "1014949",
    "end": "1019000"
  },
  {
    "text": "content that we have right now is really",
    "start": "1019000",
    "end": "1021389"
  },
  {
    "text": "pretty simple but we're definitely going",
    "start": "1021389",
    "end": "1024400"
  },
  {
    "text": "to be moving into things that have",
    "start": "1024400",
    "end": "1026168"
  },
  {
    "text": "longer running test suites and it would",
    "start": "1026169",
    "end": "1028209"
  },
  {
    "text": "be really nice to be able to put all",
    "start": "1028209",
    "end": "1029970"
  },
  {
    "text": "tests on the 1q I have them get picked",
    "start": "1029970",
    "end": "1032459"
  },
  {
    "text": "up by different test runners and execute",
    "start": "1032459",
    "end": "1035520"
  },
  {
    "text": "simultaneously and then after that",
    "start": "1035520",
    "end": "1039740"
  },
  {
    "text": "currently everything is written in",
    "start": "1039740",
    "end": "1041520"
  },
  {
    "text": "Python which is not the primary language",
    "start": "1041520",
    "end": "1044909"
  },
  {
    "text": "for anyone on our team but it is one of",
    "start": "1044909",
    "end": "1049440"
  },
  {
    "text": "the fastest start up as far as lambdas",
    "start": "1049440",
    "end": "1052230"
  },
  {
    "text": "go but yeah so depending on what it",
    "start": "1052230",
    "end": "1056280"
  },
  {
    "text": "looks like with the go support I think",
    "start": "1056280",
    "end": "1057720"
  },
  {
    "text": "that's where we're headed next",
    "start": "1057720",
    "end": "1058950"
  },
  {
    "text": "[Applause]",
    "start": "1058950",
    "end": "1062409"
  }
]