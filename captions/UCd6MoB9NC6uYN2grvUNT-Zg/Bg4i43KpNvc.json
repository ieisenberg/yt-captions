[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "all righty welcome everyone thanks for stopping by",
    "start": "110",
    "end": "6170"
  },
  {
    "text": "so today the theme we're going to be talking about is visibility into your network traffic within the Amazon",
    "start": "7099",
    "end": "12660"
  },
  {
    "text": "environment but first things first we actually really take your feedback to",
    "start": "12660",
    "end": "17850"
  },
  {
    "text": "heart and one thing that we implemented this time is you'll see a little green dot at the bottom right corner of every slide so those people who take pictures",
    "start": "17850",
    "end": "23789"
  },
  {
    "text": "of the build-out slides we have that's your cue to take a picture so that with",
    "start": "23789",
    "end": "29939"
  },
  {
    "text": "that my name is Miguel I'm a partner solution architect here at AWS",
    "start": "29939",
    "end": "35660"
  },
  {
    "text": "specializing networking and we're looking to have a new Kewanee Senior Product Manager for ec2 networking",
    "start": "35660",
    "end": "42620"
  },
  {
    "text": "awesome so let's just jump into it so",
    "start": "42620",
    "end": "47760"
  },
  {
    "text": "like like most of us when we first started during in AWS one of the first things we do is we launch an ec2",
    "start": "47760",
    "end": "53309"
  },
  {
    "text": "instance right now maybe we will launch an RDS instance as well right because we",
    "start": "53309",
    "end": "58949"
  },
  {
    "text": "have a database maybe eventually that database gets big enough to where we need EMR to get some more insight into",
    "start": "58949",
    "end": "64320"
  },
  {
    "text": "it and then other things right but let's take a closer look so we're gonna set the scene here Before we jump into the",
    "start": "64320",
    "end": "70939"
  },
  {
    "text": "nitty-gritty of network visibility so we have Amazon ec2 or the V PC let's start",
    "start": "70939",
    "end": "77970"
  },
  {
    "text": "out book with the region we're gonna dive into the VP see here I've got a PPC cider of 10.1 you can expand it as well",
    "start": "77970",
    "end": "85590"
  },
  {
    "text": "and you know you can assign ipv6 addresses within that as well a couple availability zones some subnets here",
    "start": "85590",
    "end": "92250"
  },
  {
    "text": "with some instances of public subnets or or public because they have a elastic IP",
    "start": "92250",
    "end": "98040"
  },
  {
    "text": "address assigned to them so probably all everyone on the Internet can go and talk to them right so we also have regional",
    "start": "98040",
    "end": "104909"
  },
  {
    "text": "level services as well that live outside of your V PC but within the Amazon region now if we take a little deeper",
    "start": "104909",
    "end": "111570"
  },
  {
    "text": "look here right so the Amazon V PC they have route tables attached to the subnets or a couple couple routes in",
    "start": "111570",
    "end": "118259"
  },
  {
    "text": "here local routes to all these instances and this V PC can talk to each other then we have all these different",
    "start": "118259",
    "end": "123780"
  },
  {
    "text": "regional services again and we have an Internet gateway and era gateway it's just one to one NAT device that you",
    "start": "123780",
    "end": "129209"
  },
  {
    "text": "attach to your V PC and essentially that all that does it says I want my instance to be able talk out the internet I'm gonna sign",
    "start": "129209",
    "end": "135090"
  },
  {
    "text": "that instance 10 1001 0 11 with the 54 dot something IP right and that'll be",
    "start": "135090",
    "end": "141840"
  },
  {
    "text": "able to access all regional services and also anything out on the Internet great then maybe some instances in the",
    "start": "141840",
    "end": "148290"
  },
  {
    "text": "Pope and the private subnet need to go and talk to you as and get some updates so they'll also go be in that instance",
    "start": "148290",
    "end": "154560"
  },
  {
    "text": "they're really sure you should be using a NAT gateway it's built into the V PC fabric so and it's a scalable not it",
    "start": "154560",
    "end": "159990"
  },
  {
    "text": "device that you can use awesome we also have V PC endpoints so if you don't want",
    "start": "159990",
    "end": "165180"
  },
  {
    "text": "to have an Internet gateway attached to your V PC you can also talk to things privately like Amazon s3 or DynamoDB via",
    "start": "165180",
    "end": "171570"
  },
  {
    "text": "the BBC endpoints so you don't have to use publicly addressable IP addresses to then at talk to these services talk to",
    "start": "171570",
    "end": "177300"
  },
  {
    "text": "him privately via your V PC that maybe you have an on-premise right we have a v GW a VPN connection into that V PC maybe",
    "start": "177300",
    "end": "186600"
  },
  {
    "text": "Direct Connect maybe some of you guys are using that just building out our route table here",
    "start": "186600",
    "end": "191670"
  },
  {
    "text": "BBC peering maybe you start start off with one V PC and as you start to add more we have more V pcs into the mix",
    "start": "191670",
    "end": "197300"
  },
  {
    "text": "connect those together then maybe you have hundreds of you pcs one day and that's when you start to look at things like transit gateway we connect all of",
    "start": "197300",
    "end": "203640"
  },
  {
    "text": "those your central hub to interconnect thousands of V pcs and have a central point also for you know connections from",
    "start": "203640",
    "end": "209790"
  },
  {
    "text": "on-premises view whether it be a Direct Connect or a VPN as well awesome we also private link for those of you",
    "start": "209790",
    "end": "216030"
  },
  {
    "text": "who have interested in private link that little V PC up there would be like a service provider of e PC where you're",
    "start": "216030",
    "end": "221460"
  },
  {
    "text": "fronting a service with a network load balancer and then from there the V PC your PC has private access to that",
    "start": "221460",
    "end": "227430"
  },
  {
    "text": "without ever having to go to you through the public space it's all private so directly PC communication in this case",
    "start": "227430",
    "end": "232880"
  },
  {
    "text": "awesome we also have bill bookseller our ant cast service as well and BBC full",
    "start": "232880",
    "end": "240180"
  },
  {
    "text": "logs which are going to jump into here and the reason I kind of level status here is we have all these different components that can be used to talk in",
    "start": "240180",
    "end": "248820"
  },
  {
    "text": "and out of a vb c and you as an operator you as a customer want to get visibility",
    "start": "248820",
    "end": "253950"
  },
  {
    "text": "into what's going on right to me this is like you know what what words what what",
    "start": "253950",
    "end": "259650"
  },
  {
    "text": "is happening where and we want to understand where those flows are happening and this is your cue to take a picture",
    "start": "259650",
    "end": "265810"
  },
  {
    "text": "if you guys would not so how do I get visibility and smile it'll be us network",
    "start": "265810",
    "end": "272200"
  },
  {
    "start": "269000",
    "end": "430000"
  },
  {
    "text": "traffic so Amazon VPC flow logs flow books have been out for a while",
    "start": "272200",
    "end": "278740"
  },
  {
    "text": "it's what customers have been using to understand what are the flows that are happening in my Amazon environment and",
    "start": "278740",
    "end": "284580"
  },
  {
    "text": "the full log is essentially just a five tuple that gives you metadata about what happened when with the specific flow",
    "start": "284580",
    "end": "290860"
  },
  {
    "text": "whether the traffic came in to the PPC or out of the VPC and you can actually",
    "start": "290860",
    "end": "297790"
  },
  {
    "text": "turn on flow logs on three different places so you can have the VPC be a source the subnet or the ec2 instance",
    "start": "297790",
    "end": "306640"
  },
  {
    "text": "itself so the eni and then we can send those over to either cloud watch or",
    "start": "306640",
    "end": "312220"
  },
  {
    "text": "Amazon s3 and we're gonna jump into those in a second here what does the photog look like maybe some of you",
    "start": "312220",
    "end": "318340"
  },
  {
    "text": "haven't checked that out before but essentially the contents of a faux log are pretty simple here we're gonna build this out so we'll all have a little",
    "start": "318340",
    "end": "324730"
  },
  {
    "text": "green dot for you guys in a second here so the full logs version so that's the version of flow logs that we have so",
    "start": "324730",
    "end": "330370"
  },
  {
    "text": "that's currently version two the account ID so understanding what account generated that flow log also the",
    "start": "330370",
    "end": "337060"
  },
  {
    "text": "interface ID so that's basically the en eyes ID so understanding what a and I generated that the source and",
    "start": "337060",
    "end": "344260"
  },
  {
    "text": "destination address of course also source in desparate so understanding that flow there the protocol so let's",
    "start": "344260",
    "end": "350920"
  },
  {
    "text": "say was a TCP connection UDP something like that the amount of packets that were process and also how big data",
    "start": "350920",
    "end": "358120"
  },
  {
    "text": "transfer happened during that flow right so the amount of bytes that were transferred also this the capture start",
    "start": "358120",
    "end": "363430"
  },
  {
    "text": "and end window so understanding how long that transfer actually took and this",
    "start": "363430",
    "end": "368890"
  },
  {
    "text": "one's pretty important ajob into this one this is where you actually get the business value of why you should usually",
    "start": "368890",
    "end": "374380"
  },
  {
    "text": "use flow logs is on top of understanding what happened is you can see whether the actual flow was accepted or rejected",
    "start": "374380",
    "end": "381210"
  },
  {
    "text": "based on secured groups or network ACLs that you assign in your V PC and the log",
    "start": "381210",
    "end": "387880"
  },
  {
    "text": "status as well that's your cue so V PC",
    "start": "387880",
    "end": "393880"
  },
  {
    "text": "flow logs are really a building block so they don't tell the full story but really what happens is basically",
    "start": "393880",
    "end": "399440"
  },
  {
    "text": "their metadata for things for use cases like capturing IP traffic going to and from interfaces in your V PC and also",
    "start": "399440",
    "end": "407030"
  },
  {
    "text": "debugging secure group in network ACL so for those of you who have to deal with this where developers are saying well I",
    "start": "407030",
    "end": "412610"
  },
  {
    "text": "have these two instances but they can't talk to each other can you help me - you bug this you you as an operator to go",
    "start": "412610",
    "end": "418370"
  },
  {
    "text": "turn on bbc4 logs understand what's going on and then you can look for those reject statements and then that'll help",
    "start": "418370",
    "end": "425120"
  },
  {
    "text": "you decipher oh we need to open this thing up in the seeker group and then that'll allow the communication we're",
    "start": "425120",
    "end": "430700"
  },
  {
    "start": "430000",
    "end": "625000"
  },
  {
    "text": "actually gonna jump into an example here for that so let's keep it simple let's just say we have two instances we have V",
    "start": "430700",
    "end": "436550"
  },
  {
    "text": "PC two subnets a couple couple ec2 instances here both have being eyes and",
    "start": "436550",
    "end": "442790"
  },
  {
    "text": "two different subnets and we're gonna wrap them in secured groups so left side",
    "start": "442790",
    "end": "447890"
  },
  {
    "text": "is secure group ABC and right side is d EF and these are just the explanations",
    "start": "447890",
    "end": "453650"
  },
  {
    "text": "of what's going on and that's accurate group but basically what's happening is we're allowing all traffic between these",
    "start": "453650",
    "end": "458720"
  },
  {
    "text": "instances so we're allowing that flow and we can send those two full logs and",
    "start": "458720",
    "end": "464540"
  },
  {
    "text": "we'll jump into the destinations but we can send it to both of those the question is do we have full connectivity",
    "start": "464540",
    "end": "469820"
  },
  {
    "text": "yes we do and here's what it's going to look like it when you look at a flow log so when traffic is being sent from",
    "start": "469820",
    "end": "475250"
  },
  {
    "text": "instance a and since B you'll see that accept statement so when traffic was",
    "start": "475250",
    "end": "480950"
  },
  {
    "text": "generated from a and going to be you're gonna get accept statement when traffic is generate from B to a you're also",
    "start": "480950",
    "end": "486440"
  },
  {
    "text": "getting accept statement so we're good to go here now let's have the example where someone misconfigured a secure",
    "start": "486440",
    "end": "491630"
  },
  {
    "text": "group okay so we have a view PC a couple of minutes again two instances we have",
    "start": "491630",
    "end": "498229"
  },
  {
    "text": "Annie and I and then we have a couple secure groups so ABC and D F so we have",
    "start": "498229",
    "end": "504380"
  },
  {
    "text": "both of the secured groups right and essentially what's going on here is instance a can talk to you instance B but B can't do the other way around",
    "start": "504380",
    "end": "510740"
  },
  {
    "text": "kenja initiate traffic back to a so we have those red boxes there awesome so we",
    "start": "510740",
    "end": "519110"
  },
  {
    "text": "don't have full connectivity here and here's what that looks like so instance A to B we have that accepts",
    "start": "519110",
    "end": "525560"
  },
  {
    "text": "in it because it was allowed but now from B to a we're gonna reject statement so when you go and look through fro logs",
    "start": "525560",
    "end": "531620"
  },
  {
    "text": "when the developer asks you hey you know can you help me debug what happened why is my connectivity not working there's a",
    "start": "531620",
    "end": "537320"
  },
  {
    "text": "good place to start and more flows so some of the destinations we can send",
    "start": "537320",
    "end": "542990"
  },
  {
    "text": "photos to cloud watch so cloud watch you can send them natively there and then",
    "start": "542990",
    "end": "548330"
  },
  {
    "text": "you can build alarms and alerts based on things right so you can say based on the C and I why is it that if I see ssh",
    "start": "548330",
    "end": "555140"
  },
  {
    "text": "traffic tell me about it and why is it getting ssh traffic when it's just a normal web server right all its supposed to be",
    "start": "555140",
    "end": "560540"
  },
  {
    "text": "doing is port 80 things like that we can also send it to s 3 and this helps you archive what's",
    "start": "560540",
    "end": "565580"
  },
  {
    "text": "actually going on so you can archive those BBC fill locks and then on top of that what's nice is in our documentation",
    "start": "565580",
    "end": "572450"
  },
  {
    "text": "feel free to take a picture this link you can actually use amazon athena to then go and query all those logs",
    "start": "572450",
    "end": "577690"
  },
  {
    "text": "natively and then understand you know filter by an elastic network interface understand what flow has happened over",
    "start": "577690",
    "end": "584030"
  },
  {
    "text": "that interface and it's pretty simple to set up it's actually really nice so you don't have to go instead of infrastructure to do this you can go and",
    "start": "584030",
    "end": "589880"
  },
  {
    "text": "query millions and billions of logs with amazon athena awesome and there's also a",
    "start": "589880",
    "end": "597560"
  },
  {
    "text": "use case where we had a customer who did customer and risk fo BBC full logs so",
    "start": "597560",
    "end": "603440"
  },
  {
    "text": "this was actually done by a netflix about two years ago and 2017 agreement you can watch the full video here i'd",
    "start": "603440",
    "end": "609860"
  },
  {
    "text": "love to talk about it today would that be an hour talk on its own and then it's also the case study here where you guys can check that out so feel free to take",
    "start": "609860",
    "end": "615950"
  },
  {
    "text": "a picture that i'm it's really good talk by the engineers over facebook that netflix awesome but hold on a second did",
    "start": "615950",
    "end": "626870"
  },
  {
    "start": "625000",
    "end": "860000"
  },
  {
    "text": "we launch something couple weeks ago open it once were laid out in the audience but before we get into that",
    "start": "626870",
    "end": "632810"
  },
  {
    "text": "right remember BBC four logs are still pretty much useful it tells you the metadata about the flows but let's say",
    "start": "632810",
    "end": "639140"
  },
  {
    "text": "you want to actually capture the actual packet itself look into what's going on in there and so we launched BBC traffic",
    "start": "639140",
    "end": "645080"
  },
  {
    "text": "rearing and we're gonna have a new give you pretty much an intro traffic query thanks me give hi everyone my name is",
    "start": "645080",
    "end": "651620"
  },
  {
    "text": "luke Diwani i'm part of BBC product management team I've been working on this feature for",
    "start": "651620",
    "end": "658230"
  },
  {
    "text": "some time and we launched this feature called PPC traffic mirroring two weeks ago at AWS reinforce and the goal of",
    "start": "658230",
    "end": "666660"
  },
  {
    "text": "this feature is to let you monitor your VPC traffic with the monitoring tools of",
    "start": "666660",
    "end": "673230"
  },
  {
    "text": "your choice for use cases like thread detection content inspection and things",
    "start": "673230",
    "end": "678240"
  },
  {
    "text": "like that so in this next the entirety",
    "start": "678240",
    "end": "683279"
  },
  {
    "text": "of the session we will actually cover this feature in depth how you set up traffic mirroring what you can do with a",
    "start": "683279",
    "end": "690170"
  },
  {
    "text": "mirrored packet and things like that so let's get started so what is VPC traffic",
    "start": "690170",
    "end": "696300"
  },
  {
    "text": "mirroring in very short it's it's like a",
    "start": "696300",
    "end": "701820"
  },
  {
    "text": "fiber tap in cloud just like in your on-prem data center when you have a",
    "start": "701820",
    "end": "707460"
  },
  {
    "text": "fiber tap you know you you you you actually take the you know the light on",
    "start": "707460",
    "end": "714180"
  },
  {
    "text": "the fiber going and you kind of tap it and actually make a copy of it very similar to that so if the light travels",
    "start": "714180",
    "end": "720330"
  },
  {
    "text": "in two different mediums you know you have an incident ray you a part of the Ray gets reflected and a part of that",
    "start": "720330",
    "end": "727260"
  },
  {
    "text": "get refracted traffic mirroring works very similar to that you know you have packets coming over a network interface",
    "start": "727260",
    "end": "733140"
  },
  {
    "text": "of your ec2 instance and you can choose to mirror some sum or some part of the",
    "start": "733140",
    "end": "740190"
  },
  {
    "text": "packet and we'll get into details how you can choose to mirror what what kind of package you are now monitored so at",
    "start": "740190",
    "end": "746279"
  },
  {
    "text": "its core let's take a quick example you have an ec2 instance running in your V PC and you have an Internet gateway",
    "start": "746279",
    "end": "755040"
  },
  {
    "text": "where where you have traffic coming in and out so this green traffic coming in and the purple traffic going out and you",
    "start": "755040",
    "end": "761279"
  },
  {
    "text": "decide to monitor this instance because this happens to be a very critical workload in your environment and what",
    "start": "761279",
    "end": "768209"
  },
  {
    "text": "you do is you create a traffic mirroring session up until two weeks ago there was",
    "start": "768209",
    "end": "773459"
  },
  {
    "text": "up there was no option to create a thing like that but now you can from your V PC",
    "start": "773459",
    "end": "778560"
  },
  {
    "text": "console or using API or CLI in order to create traffic mirroring session the first thing you want to do is have a",
    "start": "778560",
    "end": "785940"
  },
  {
    "text": "monitoring instance deployed and you can deploy it in different places we'll talk about that but you need a",
    "start": "785940",
    "end": "791920"
  },
  {
    "text": "monitoring instance and appliance in your B PC across V PC but you need",
    "start": "791920",
    "end": "798100"
  },
  {
    "text": "something to actually send this packet to then you create your traffic mirroring session and at a very high",
    "start": "798100",
    "end": "804879"
  },
  {
    "text": "level let's say that you have created a traffic murmuring session what it's going to do is it will enable traffic",
    "start": "804879",
    "end": "811209"
  },
  {
    "text": "mirroring on the E and I of that ec2 instance that you want to monitor and once that's created traffic that's",
    "start": "811209",
    "end": "819370"
  },
  {
    "text": "coming in and out now you can choose what type of traffic you want to monitor and send it to mirror in instant the",
    "start": "819370",
    "end": "825579"
  },
  {
    "text": "target which is the monitoring instance so this is how traffic mirroring work at a high level now what kind of monitoring",
    "start": "825579",
    "end": "834430"
  },
  {
    "text": "instance you can use there are few things we'll we'll cover all of these but you can build your own traffic",
    "start": "834430",
    "end": "840310"
  },
  {
    "text": "analyzer you can use open source tools or you can use one of the several partners our partners from AWS",
    "start": "840310",
    "end": "848769"
  },
  {
    "text": "marketplace we have around you know Miguel will get into details but we have around 20 plus partners at this time",
    "start": "848769",
    "end": "854199"
  },
  {
    "text": "which can provide you a solution for monitoring your traffic so why did we",
    "start": "854199",
    "end": "861399"
  },
  {
    "start": "860000",
    "end": "942000"
  },
  {
    "text": "build traffic mirroring right well our customers have been asking for this",
    "start": "861399",
    "end": "866500"
  },
  {
    "text": "feature for a long time and the reason they want to actually use traffic",
    "start": "866500",
    "end": "871930"
  },
  {
    "text": "mirroring is for the the primary use case here is detection of network or",
    "start": "871930",
    "end": "877120"
  },
  {
    "text": "security and normally customers want to keep an eye on that unusual traffic",
    "start": "877120",
    "end": "882370"
  },
  {
    "text": "pattern so that you can figure out if there is any attack in your infrastructure or you want to monitor",
    "start": "882370",
    "end": "889750"
  },
  {
    "text": "the content of the packets which will help you derive if there is any workload that in your environment has been",
    "start": "889750",
    "end": "895300"
  },
  {
    "text": "compromised all of that stuff needs you to look into the packets you need to do the deep packet inspection and and this",
    "start": "895300",
    "end": "902439"
  },
  {
    "text": "is what this feature is all about the second important use case for traffic mirroring is troubleshooting and",
    "start": "902439",
    "end": "909309"
  },
  {
    "text": "visibility a lot of times our customers who have pretty sophisticated",
    "start": "909309",
    "end": "914519"
  },
  {
    "text": "applications deployed in their VPC they want to monitor traffic between their",
    "start": "914519",
    "end": "919630"
  },
  {
    "text": "micro services or application tiers to figure out those blind spot or choke points so that they can you know",
    "start": "919630",
    "end": "927310"
  },
  {
    "text": "remediate that all or if there is an issue that's happening in production you",
    "start": "927310",
    "end": "932630"
  },
  {
    "text": "want to look at how the packet captures between between the applications are so that you can actually figure out what",
    "start": "932630",
    "end": "938870"
  },
  {
    "text": "exactly going is going on between the applications so what are the key",
    "start": "938870",
    "end": "944420"
  },
  {
    "start": "942000",
    "end": "1078000"
  },
  {
    "text": "benefits of traffic meaning there are obviously customers our customers have been using traffic where you know are",
    "start": "944420",
    "end": "950870"
  },
  {
    "text": "capturing traffic from ec2 instance what they what they do today is they actually run a third-party agent on ec2 instance",
    "start": "950870",
    "end": "959600"
  },
  {
    "text": "which runs in the user space and this agent allows them to mirror the packet",
    "start": "959600",
    "end": "965120"
  },
  {
    "text": "or capture the packet as it goes in and out of an in-network interface but the problem is that that's a third-party",
    "start": "965120",
    "end": "972890"
  },
  {
    "text": "agent that's actually you have to install you have to manage it takes CPU penalty and things like that the benefit",
    "start": "972890",
    "end": "980870"
  },
  {
    "text": "of traffic meaning is it's a native feature that you don't have to run any",
    "start": "980870",
    "end": "986390"
  },
  {
    "text": "third-party agents for that you actually are not you know there is no CPU penalty",
    "start": "986390",
    "end": "991700"
  },
  {
    "text": "nothing you just enable traffic mirroring on on a specific interface on ec2 and that's it the very important",
    "start": "991700",
    "end": "1000010"
  },
  {
    "text": "aspect of this feature is that this helps you improve the security posture as well when you run you agent in user",
    "start": "1000010",
    "end": "1008620"
  },
  {
    "text": "space what's happening is you're copying packet from the user space and if most of our security conscious customers",
    "start": "1008620",
    "end": "1015160"
  },
  {
    "text": "don't really want to accept traffic coming from a user space especially if",
    "start": "1015160",
    "end": "1020620"
  },
  {
    "text": "that that that instance or workload is already compromised what traffic mirroring does is it actually we copy",
    "start": "1020620",
    "end": "1028569"
  },
  {
    "text": "the packet of the network interface of the ec2 instance before it enters the",
    "start": "1028569",
    "end": "1034000"
  },
  {
    "text": "user space which means you can be rest assured that you are actually looking at the packet which was really hitting your",
    "start": "1034000",
    "end": "1040660"
  },
  {
    "text": "workload so there is no chance of tampering with this mirror traffic so that that's a that's a big benefit over",
    "start": "1040660",
    "end": "1049180"
  },
  {
    "text": "running a third-party agent and lastly customers have expressed that they want",
    "start": "1049180",
    "end": "1056440"
  },
  {
    "text": "to monitor traffic using multiple tools when you run an agent you're kind of locked into one tool but there are use",
    "start": "1056440",
    "end": "1063310"
  },
  {
    "text": "cases where our customers want to have subset of traffic sent to a tool one tool and the other traffic to another",
    "start": "1063310",
    "end": "1070090"
  },
  {
    "text": "tool so that is possible with traffic mirroring now because there is no agent required it's a native feature you",
    "start": "1070090",
    "end": "1075610"
  },
  {
    "text": "specify the destination of the mirrored packet so now let's take a look at you",
    "start": "1075610",
    "end": "1080710"
  },
  {
    "start": "1078000",
    "end": "1117000"
  },
  {
    "text": "know how do you configure traffic mirroring there are essentially three components of traffic mirroring it's a",
    "start": "1080710",
    "end": "1086110"
  },
  {
    "text": "very simple concept very easy to set up and you just need to know three things",
    "start": "1086110",
    "end": "1092250"
  },
  {
    "text": "you need to create a target which is your monitoring instance which will be the destination for your mirror traffic",
    "start": "1092250",
    "end": "1097600"
  },
  {
    "text": "you need to create filters that allows you to express your desire to monitor",
    "start": "1097600",
    "end": "1103060"
  },
  {
    "text": "the kind of traffic you want to monitor and then you need to create a session which binds the source target and things",
    "start": "1103060",
    "end": "1110650"
  },
  {
    "text": "so let's let's take a quick look and at each of this component in detail let's",
    "start": "1110650",
    "end": "1116410"
  },
  {
    "text": "start with target so target as I mentioned is the destination of your mirror traffic at this point they can be",
    "start": "1116410",
    "end": "1123100"
  },
  {
    "start": "1117000",
    "end": "1261000"
  },
  {
    "text": "two targets that you can have one is the elastic network interface of a monitoring instance so it's an en I of a",
    "start": "1123100",
    "end": "1130390"
  },
  {
    "text": "at our monitoring appliance that you just deployed what it could be a network",
    "start": "1130390",
    "end": "1136060"
  },
  {
    "text": "load balancer which is what we recommend actually so you can run your appliances",
    "start": "1136060",
    "end": "1141340"
  },
  {
    "text": "behind a network load balancer an auto scaling growth and have the this is the",
    "start": "1141340",
    "end": "1147190"
  },
  {
    "text": "real elastic solution in the cloud where you're an al analyzers or appliances can scale up and down based on the mirror",
    "start": "1147190",
    "end": "1153760"
  },
  {
    "text": "traffic so a few things here a target",
    "start": "1153760",
    "end": "1160360"
  },
  {
    "text": "can be used or by multiple sources which means you can point or mirror the",
    "start": "1160360",
    "end": "1165850"
  },
  {
    "text": "traffic from multiple source and send it to a single target you need to be careful that you do not overload your",
    "start": "1165850",
    "end": "1172420"
  },
  {
    "text": "target by sending more traffic than what its capacity is but there are also some",
    "start": "1172420",
    "end": "1177880"
  },
  {
    "text": "limits here when you have network load balancer you can there is no limit you can send as many mirrored traffic from",
    "start": "1177880",
    "end": "1184480"
  },
  {
    "text": "as many sources as you want and and essentially Network load balancer will handle that you could run",
    "start": "1184480",
    "end": "1191520"
  },
  {
    "text": "dedicated instance as a mirror appliance or monitoring appliance and you can actually send up 200 traffic from",
    "start": "1191520",
    "end": "1198570"
  },
  {
    "text": "hundred source to that dedicated instance other instance types if you are using for monitoring appliance you can",
    "start": "1198570",
    "end": "1205200"
  },
  {
    "text": "choose to send up to traffic from up to ten sources to those instance another",
    "start": "1205200",
    "end": "1211410"
  },
  {
    "text": "very important aspect is that you need to allow on your mirror appliance in",
    "start": "1211410",
    "end": "1218250"
  },
  {
    "text": "your security group you need to enable or allow traffic on port destination port four eight seven nine the reason it",
    "start": "1218250",
    "end": "1225720"
  },
  {
    "text": "is this is required as when we mirror the packet we encapsulate that packet with UDP excellent making it a UDP",
    "start": "1225720",
    "end": "1233190"
  },
  {
    "text": "packet and it's a V excellent encapsulated traffic that your appliances will be able to decap select",
    "start": "1233190",
    "end": "1239970"
  },
  {
    "text": "it most of our APN partners that we are working on they already have capability",
    "start": "1239970",
    "end": "1245340"
  },
  {
    "text": "to either D capsulate or Parts v excellent header so that they can look at the mirrored packet after D capsule",
    "start": "1245340",
    "end": "1250950"
  },
  {
    "text": "ating it many open source tools like z conserve cotta have been build capability to actually decap bx9 header",
    "start": "1250950",
    "end": "1259230"
  },
  {
    "text": "as well so this was about target now let's take a look at the filters filters",
    "start": "1259230",
    "end": "1266700"
  },
  {
    "start": "1261000",
    "end": "1464000"
  },
  {
    "text": "come in handy when you want to extract the traffic of interest so let's take a",
    "start": "1266700",
    "end": "1272940"
  },
  {
    "text": "quick example you have a again coming back to the same example you have traffic coming over instance on an ec2",
    "start": "1272940",
    "end": "1279270"
  },
  {
    "text": "instance where your traffic mirroring is enabled and you decide to only mirror only inbound traffic you trust any",
    "start": "1279270",
    "end": "1285330"
  },
  {
    "text": "traffic that is going out of your instance is clean traffic all you have to do is enable the filter just say you",
    "start": "1285330",
    "end": "1291900"
  },
  {
    "text": "want to monitor only inbound packet and you are good to go so before we look",
    "start": "1291900",
    "end": "1297090"
  },
  {
    "text": "into filters I want to actually talk about the encapsulated packet right how",
    "start": "1297090",
    "end": "1302160"
  },
  {
    "text": "does this packet look like when it is received on the destination as I mentioned we encapsulate this packet",
    "start": "1302160",
    "end": "1307830"
  },
  {
    "text": "with the excellent header making it a UDP packet and and by the way after you decap the packet you are actually going",
    "start": "1307830",
    "end": "1314730"
  },
  {
    "text": "to get the layer 2 packet right out of the interface so you will be able to actually even see the",
    "start": "1314730",
    "end": "1320280"
  },
  {
    "text": "two headers that were that were on the en I when we captured the packet so how",
    "start": "1320280",
    "end": "1326250"
  },
  {
    "text": "does this mirrored packet look like the outer IP header will have the source IP",
    "start": "1326250",
    "end": "1331260"
  },
  {
    "text": "of the the mirror source that you're mirroring the destination IP will be the",
    "start": "1331260",
    "end": "1336360"
  },
  {
    "text": "IP address of the target which is if it's an en I we will derive the IP address figure out the IP address of",
    "start": "1336360",
    "end": "1342300"
  },
  {
    "text": "that en I and actually assign that if it's an N lb will actually figure the IP",
    "start": "1342300",
    "end": "1348030"
  },
  {
    "text": "address of an lb as well the for the UDP you the only thing you",
    "start": "1348030",
    "end": "1353520"
  },
  {
    "text": "need to keep in mind is that the destination port has to be four seven eight nine which is a standard vehicle and traffic port and then on the VX nine",
    "start": "1353520",
    "end": "1361350"
  },
  {
    "text": "header you have capability to set VX line ID so this is him this comes in",
    "start": "1361350",
    "end": "1366930"
  },
  {
    "text": "handy when you have a lot of traffic coming from a lot of sources a lot of VP sees you can at the time of creating",
    "start": "1366930",
    "end": "1373680"
  },
  {
    "text": "mirror session you can give a unique ID or we assign a unique be excellent ID",
    "start": "1373680",
    "end": "1379380"
  },
  {
    "text": "for each kind of source and have your own logic so that on the receiving end you can easily figure out where this",
    "start": "1379380",
    "end": "1386250"
  },
  {
    "text": "traffic was really coming from so now let's get back to the filters the filters are very similar to a network",
    "start": "1386250",
    "end": "1392280"
  },
  {
    "text": "ACL this is you know as simple as it can get you you create the there are seven",
    "start": "1392280",
    "end": "1398580"
  },
  {
    "text": "options very similar to network ACL plus you know flow direction and truncation so let's take a quick exercise do the",
    "start": "1398580",
    "end": "1405810"
  },
  {
    "text": "quick exercise and create a filter let's say that I want to create a filter for all the traffic that's coming into my",
    "start": "1405810",
    "end": "1412260"
  },
  {
    "text": "ec2 instance on port 80 I want to monitor that HTTP traffic so I",
    "start": "1412260",
    "end": "1417480"
  },
  {
    "text": "choose the flow direction as ingress the protocol will be TCP obviously the",
    "start": "1417480",
    "end": "1423390"
  },
  {
    "text": "source IP can be anything so the traffic can come from anywhere on any source port the destination IP would be my IP",
    "start": "1423390",
    "end": "1430080"
  },
  {
    "text": "of the ec2 instance and the destination port will be 80 that's all there's",
    "start": "1430080",
    "end": "1435270"
  },
  {
    "text": "another one more option here is do you want to truncate the packet by default",
    "start": "1435270",
    "end": "1442110"
  },
  {
    "text": "we mirrored the whole packet but you have option to essentially specify if you want to just mirror first 200 bytes",
    "start": "1442110",
    "end": "1448890"
  },
  {
    "text": "first thousand bytes whatever you want to mirror we will actually truncate the packet and knew that length from the start of the",
    "start": "1448890",
    "end": "1455520"
  },
  {
    "text": "packet so in this case I want to mirror the entire packet so I will just skip that field and this is how you create a",
    "start": "1455520",
    "end": "1461370"
  },
  {
    "text": "filter as easy Atkin as it can get so this was filters now quick thing about",
    "start": "1461370",
    "end": "1467070"
  },
  {
    "start": "1464000",
    "end": "1532000"
  },
  {
    "text": "session session is the entity that binds this source target and filters session",
    "start": "1467070",
    "end": "1474210"
  },
  {
    "text": "has three components have also source target filter as I mentioned and you can have up to three session parts per",
    "start": "1474210",
    "end": "1480720"
  },
  {
    "text": "source and this comes in handy because even though we mirrored the packet only once we you can assign up to three",
    "start": "1480720",
    "end": "1488490"
  },
  {
    "text": "sessions and the session number is the priority lower the session number higher priority that session has and you could",
    "start": "1488490",
    "end": "1497100"
  },
  {
    "text": "have for example if you want to say I want a mirror HTTP traffic and send it to my HTTP analyzer and then mirror the",
    "start": "1497100",
    "end": "1504360"
  },
  {
    "text": "rest of the traffic in send it to another tool you can create a lower session number that says session number one which will be higher priority only",
    "start": "1504360",
    "end": "1511350"
  },
  {
    "text": "capture HTTP traffic and send it to your SMTP analyzer and then you can have",
    "start": "1511350",
    "end": "1516860"
  },
  {
    "text": "other traffic where other session where you capture all the traffic and send it",
    "start": "1516860",
    "end": "1522180"
  },
  {
    "text": "to another tool so this is this is this is why you can have up to three sessions and create this logic of sending subsets",
    "start": "1522180",
    "end": "1528720"
  },
  {
    "text": "of traffic to one tool and other another subset of traffic to another tool there are more advanced topic I'll invite",
    "start": "1528720",
    "end": "1534690"
  },
  {
    "start": "1532000",
    "end": "1604000"
  },
  {
    "text": "Miguel again to to go over those topics",
    "start": "1534690",
    "end": "1539330"
  },
  {
    "text": "awesome thanks to Nick for that an overview of PPC traffic Mary so let's cover some advanced topics here but",
    "start": "1542240",
    "end": "1549150"
  },
  {
    "text": "before we get too far right we just learned about VPC traffic Marian let's do a quick comparison about what the differences are between VP see Phil logs",
    "start": "1549150",
    "end": "1555810"
  },
  {
    "text": "and BBC traffic Mary so with flow logs you get logs of network flows right it's",
    "start": "1555810",
    "end": "1561390"
  },
  {
    "text": "just the metadata that tells you what happened we would within the flows bit with traffic mirroring you get the real",
    "start": "1561390",
    "end": "1566940"
  },
  {
    "text": "network packet that was sent originally to that destination and with vbc foe",
    "start": "1566940",
    "end": "1572550"
  },
  {
    "text": "logs we can send traffic load logs directly to s3 or Amazon CloudWatch logs",
    "start": "1572550",
    "end": "1577880"
  },
  {
    "text": "with BBC traffic theory and we send it directly to an mirroring instance or a",
    "start": "1577880",
    "end": "1584220"
  },
  {
    "text": "network load balancer and BBC faux logs like I said earlier you can get a five tuple of the actual",
    "start": "1584220",
    "end": "1591759"
  },
  {
    "text": "network flow for that specific capture window and with traffic marry and get",
    "start": "1591759",
    "end": "1597009"
  },
  {
    "text": "the real network packet if you guys want take a picture that great so how does",
    "start": "1597009",
    "end": "1605109"
  },
  {
    "start": "1604000",
    "end": "1676000"
  },
  {
    "text": "traffic mirroring affect the performance of my ec2 instance so there's something to keep in mind here and let's dive into an example of what that looks like so we",
    "start": "1605109",
    "end": "1612340"
  },
  {
    "text": "have network traffic flowing in through an instance and is being mirrored to the other instance let's say we had so we're",
    "start": "1612340",
    "end": "1620529"
  },
  {
    "text": "so in the instance traffic instance and mirror traffic both count towards your overall instance performance and this",
    "start": "1620529",
    "end": "1628029"
  },
  {
    "text": "the slides can explain it for you so let's say you had one gigabit inbound you had one gigabits per second outbound",
    "start": "1628029",
    "end": "1633210"
  },
  {
    "text": "that means that the ec2 instance on the left side needs to support two gigabits",
    "start": "1633210",
    "end": "1638739"
  },
  {
    "text": "of traffic right and so let's say we create we want to mirror that traffic",
    "start": "1638739",
    "end": "1645369"
  },
  {
    "text": "that means that the instance itself has to be able to support four gigabits of traffic so that means that mirroring",
    "start": "1645369",
    "end": "1652330"
  },
  {
    "text": "instance on the on the right side needs to be able to accept two gigs of traffic so it's a simple math equation if you",
    "start": "1652330",
    "end": "1658330"
  },
  {
    "text": "send five gigs of traffic into that left instance that means that that instance has to support ten gigs of traffic",
    "start": "1658330",
    "end": "1665259"
  },
  {
    "text": "traffic so you need a ten gig you need an instance that could support a 10 gig interface on it and then you know you",
    "start": "1665259",
    "end": "1671229"
  },
  {
    "text": "can only mirror up to five gigs of traffic let's see so instance right",
    "start": "1671229",
    "end": "1677769"
  },
  {
    "start": "1676000",
    "end": "1721000"
  },
  {
    "text": "sizing so this is very important here so we want to that basically explains what I was saying earlier you want to be able",
    "start": "1677769",
    "end": "1683470"
  },
  {
    "text": "to make sure that the amount of traffic that you're actually sending into an ec2 instance you're you have that enough",
    "start": "1683470",
    "end": "1688539"
  },
  {
    "text": "buffer to be able to send the exact amount of traffic that's coming in to that destination instance but one thing",
    "start": "1688539",
    "end": "1696070"
  },
  {
    "text": "note here is production traffic takes a higher priority over the mirror traffic so let's say you are sending five gigs but all of a sudden you get six seven",
    "start": "1696070",
    "end": "1702369"
  },
  {
    "text": "gigs into that instance that's generating or serving your production traffic we're actually gonna start",
    "start": "1702369",
    "end": "1707649"
  },
  {
    "text": "dropping the will drop the mirror traffic in prioritized production traffic so it doesn't affect production workloads so that way if you turn on",
    "start": "1707649",
    "end": "1714070"
  },
  {
    "text": "mirroring a Mearing session on an incidence you don't have to worry about it take effect your production traffic let's talk about",
    "start": "1714070",
    "end": "1722329"
  },
  {
    "start": "1721000",
    "end": "1804000"
  },
  {
    "text": "scale so auto scaling right where does auto scaling come into play here let's say we have an instance getting traffic",
    "start": "1722329",
    "end": "1728629"
  },
  {
    "text": "from the outside world we also have an instance within the VPC sending traffic to it as well we enable traffic",
    "start": "1728629",
    "end": "1734809"
  },
  {
    "text": "mirroring let's say we have a network load balancer right we're gonna send all or in our VP seatrout a BBC traffic burying",
    "start": "1734809",
    "end": "1742519"
  },
  {
    "text": "traffic to the network load balancer turn on the session on that eni now we",
    "start": "1742519",
    "end": "1747529"
  },
  {
    "text": "have traffic flowing into the network load balancer and as being a load balance across multiple instances and",
    "start": "1747529",
    "end": "1752869"
  },
  {
    "text": "we're gonna talk about how that hashing actually works in a second here you can almost get up to more instances right we",
    "start": "1752869",
    "end": "1759079"
  },
  {
    "text": "started off with two you can scale up to four and many more so in this case let's",
    "start": "1759079",
    "end": "1765769"
  },
  {
    "text": "say we start getting more traffic right those are the represented by the different colored rap boxes here so as",
    "start": "1765769",
    "end": "1771829"
  },
  {
    "text": "we continue to scale out and we get different types of traffic and more load we can Auto scale up behind the network",
    "start": "1771829",
    "end": "1778129"
  },
  {
    "text": "load balancer to handle that mirror traffic awesome in the flow hashing so",
    "start": "1778129",
    "end": "1784129"
  },
  {
    "text": "what happens is all these different instances are all listening on port of 479 UDP port and that's how we're",
    "start": "1784129",
    "end": "1790339"
  },
  {
    "text": "encapsulating the traffic and being sent to those destination instances that will process that mirek traffic the other network load balancer so the traffic is",
    "start": "1790339",
    "end": "1799159"
  },
  {
    "text": "you do P only and also UDP the network load balancer now support TTP so that's great the way the Aisling algorithm",
    "start": "1799159",
    "end": "1806690"
  },
  {
    "start": "1804000",
    "end": "1838000"
  },
  {
    "text": "actually works is it's a five tuple and since the destination port is always the same the entropy comes from the",
    "start": "1806690",
    "end": "1813289"
  },
  {
    "text": "destination the source port the source IP and the destination IP address and also the protocol so if you have traffic",
    "start": "1813289",
    "end": "1821179"
  },
  {
    "text": "coming in into the network load balancer that's being aired it could be hitting at one instance behind the network load",
    "start": "1821179",
    "end": "1826909"
  },
  {
    "text": "balancer but depending on the new flow and the new source port it could be sent",
    "start": "1826909",
    "end": "1832190"
  },
  {
    "text": "to a different instance right so that's how we get our load balancing behind the scenes that's what gives us the entropy in this case for the flow hashing and we",
    "start": "1832190",
    "end": "1839479"
  },
  {
    "start": "1838000",
    "end": "1880000"
  },
  {
    "text": "can also decentralize it this is our X are really cool from day one you're able to actually mirror traffic over a VPC",
    "start": "1839479",
    "end": "1845539"
  },
  {
    "text": "pier in connection to a different V PC so so long as you have layer 3 connectivity you're able to mirror",
    "start": "1845539",
    "end": "1851340"
  },
  {
    "text": "not only a VPC peering connection but also transit gateway this is gonna get",
    "start": "1851340",
    "end": "1856740"
  },
  {
    "text": "into so you can have like a centralized InfoSec PPC off little spoke off a transit gateway and you mirror all the",
    "start": "1856740",
    "end": "1863490"
  },
  {
    "text": "traffic's long is full layer three connectivity is there will mirror the traffic over that over that VPC and that",
    "start": "1863490",
    "end": "1870419"
  },
  {
    "text": "could have the network load balancer or ec2 instance as well that could be multi account as well so that's also great so let's check it",
    "start": "1870419",
    "end": "1880110"
  },
  {
    "start": "1880000",
    "end": "2015000"
  },
  {
    "text": "out in the console let's you know we've been talking a lot about V PC traffic Mir and let's see what it looks like when we actually set it up so walk you",
    "start": "1880110",
    "end": "1885659"
  },
  {
    "text": "through this your console for you guys it might be a little different but in this case let's say we had V PC and our",
    "start": "1885659",
    "end": "1892470"
  },
  {
    "text": "recently visited services we go over the V PC console here click on that let's",
    "start": "1892470",
    "end": "1900570"
  },
  {
    "text": "scroll down down a mirror it would so this is the section we want to look at here you're gonna go over to sessions in",
    "start": "1900570",
    "end": "1909149"
  },
  {
    "text": "a create a session it's just pretty",
    "start": "1909149",
    "end": "1915119"
  },
  {
    "text": "simple here so there's a couple fields we have to fill out we're just gonna give it a tag so just call it like",
    "start": "1915119",
    "end": "1920190"
  },
  {
    "text": "traffic bearing session give it a description as well we'll just keep it the same traffic learning session and",
    "start": "1920190",
    "end": "1926690"
  },
  {
    "text": "then we'll pick a last look network interface out of the list so choose that one and then we'll choose a target so we",
    "start": "1926690",
    "end": "1935610"
  },
  {
    "text": "have to set up a target instance that we're gonna mirror all our traffic to you awesome and so we'll scroll down",
    "start": "1935610",
    "end": "1942269"
  },
  {
    "text": "here so you can give it a session number",
    "start": "1942269",
    "end": "1948480"
  },
  {
    "text": "session of 1 is fine for now you can also specify the VX line ID and this and",
    "start": "1948480",
    "end": "1953639"
  },
  {
    "text": "we're gonna jump into that in a second here but if you don't specify them we'll",
    "start": "1953639",
    "end": "1959009"
  },
  {
    "text": "pick a random one here also the packet length so you can actually truncate the packet and tell us how much of the",
    "start": "1959009",
    "end": "1964139"
  },
  {
    "text": "packet you actually want us to mirror so if you only want the let's say HTTP traffic and you want to just truncate",
    "start": "1964139",
    "end": "1969480"
  },
  {
    "text": "enough to capture headers specify the amount of bytes you actually want and you could do that okay so in this case",
    "start": "1969480",
    "end": "1975419"
  },
  {
    "text": "we're just gonna leave it blank and it's gonna give this the entire packet here we could create a filter so the filter this is what noop was talking about",
    "start": "1975419",
    "end": "1981179"
  },
  {
    "text": "earlier is you can actually say I want traffic from port 8080 its tcp-based so",
    "start": "1981179",
    "end": "1988370"
  },
  {
    "text": "I want the TCP session at TCP and also give me all the traffic that's accepted",
    "start": "1988370",
    "end": "1994250"
  },
  {
    "text": "so it still same concepts from BBC photo logs right we still have that same concept here and giving it from any",
    "start": "1994250",
    "end": "1999590"
  },
  {
    "text": "destination as well great so we create it I'm just expand this kind of small but I",
    "start": "1999590",
    "end": "2007260"
  },
  {
    "text": "try to blow this up for you guys essentially this is what you end up getting there and that's all the metadata that tells you about that",
    "start": "2007260",
    "end": "2013390"
  },
  {
    "text": "specific viewing session so what do you actually do with the packets okay we're talking about traffic mirroring okay",
    "start": "2013390",
    "end": "2018580"
  },
  {
    "start": "2015000",
    "end": "2085000"
  },
  {
    "text": "that's great right but what do you actually end up doing with the packets well we have our AP and Partners can",
    "start": "2018580",
    "end": "2025240"
  },
  {
    "text": "actually come come and rescue you here essentially we launched with 20 partners on day one so that's actually pretty",
    "start": "2025240",
    "end": "2030910"
  },
  {
    "text": "solid here all these different partners that you see on the screen they got new Bev you got Cisco net scale all these",
    "start": "2030910",
    "end": "2037510"
  },
  {
    "text": "people are ready to help you with PPC traffic mirroring today and also this",
    "start": "2037510",
    "end": "2042790"
  },
  {
    "text": "slide too we got people like Symantec Big Switch fire I know okay so those are",
    "start": "2042790",
    "end": "2050050"
  },
  {
    "text": "the APM partners and that's absolutely the route to go if you want a solution that's already built for you and you",
    "start": "2050050",
    "end": "2055899"
  },
  {
    "text": "just send your traffic to them they give you single pane of glass great but another thing we thought about me and a",
    "start": "2055900",
    "end": "2061030"
  },
  {
    "text": "colleague put this together what if you wanted to build your own analyzer for all those DIY people out there let's",
    "start": "2061030",
    "end": "2066580"
  },
  {
    "text": "jump into some code here and check out what how you can do this so let's have a simple example here let's say we have a",
    "start": "2066580",
    "end": "2072970"
  },
  {
    "text": "web browser users making an HTTP request on to 3.25 for port 8080 we're going to",
    "start": "2072970",
    "end": "2080530"
  },
  {
    "text": "capture those HTTP requests so what does that look like we're going to capture both in and out so let's build the",
    "start": "2080530",
    "end": "2086440"
  },
  {
    "start": "2085000",
    "end": "2113000"
  },
  {
    "text": "analyzer so got a terminal window here I'm gonna spin up of in session for",
    "start": "2086440",
    "end": "2092110"
  },
  {
    "text": "other vim fans out there so this is written go and really the simple thing here is we're just importing a couple",
    "start": "2092110",
    "end": "2098200"
  },
  {
    "text": "libraries that's going to allow us to do a peek app capture for all the traffic that we're getting mirrored to us we're",
    "start": "2098200",
    "end": "2103510"
  },
  {
    "text": "gonna actually process this year so these are the libraries that we're gonna use here now we're going to jump into that inside of the function man we're",
    "start": "2103510",
    "end": "2109270"
  },
  {
    "text": "going to look into the agent code itself so let's define the identity so what",
    "start": "2109270",
    "end": "2115780"
  },
  {
    "start": "2113000",
    "end": "2156000"
  },
  {
    "text": "happens is we create we bind herself to face right so ENS five is like a easy to",
    "start": "2115780",
    "end": "2121829"
  },
  {
    "text": "network interface main with this video and I have config you'll see the names so that's we're gonna bind to we end up",
    "start": "2121829",
    "end": "2128500"
  },
  {
    "text": "getting a handle and what that handle we can actually set some filters so what",
    "start": "2128500",
    "end": "2133780"
  },
  {
    "text": "we're gonna do is instead of getting anything we're gonna look for UDP traffic cuz that's where we're going to end up gonna get right so traffic",
    "start": "2133780",
    "end": "2140710"
  },
  {
    "text": "mirroring packets are gonna be encapsulated in a UDP packet that has VX land inside cool so we set a filter",
    "start": "2140710",
    "end": "2147849"
  },
  {
    "text": "there and now we have a packet source now we can actually look for packets",
    "start": "2147849",
    "end": "2152640"
  },
  {
    "text": "this one take picture so let's grab them your packet next up here so we're just",
    "start": "2153240",
    "end": "2160000"
  },
  {
    "start": "2156000",
    "end": "2183000"
  },
  {
    "text": "gonna do a loop we're gonna live forever and we're gonna get the overlay packets so every packet that comes in we're gonna process it first thing we're gonna",
    "start": "2160000",
    "end": "2166150"
  },
  {
    "text": "do is see if there's a vehicle and header in there at all right you don't want to process things that we don't want to process right so if there is a",
    "start": "2166150",
    "end": "2172750"
  },
  {
    "text": "pet VX line packet great we're gonna grab the packet inside of that encapsulated package so that original",
    "start": "2172750",
    "end": "2178119"
  },
  {
    "text": "packet that was mirrored we're gonna grab that packet and in this case we're just going to dump it to the screen",
    "start": "2178119",
    "end": "2183599"
  },
  {
    "start": "2183000",
    "end": "2199000"
  },
  {
    "text": "right so if we build this let me run it we're just gonna get a big peak app dump",
    "start": "2183599",
    "end": "2190690"
  },
  {
    "text": "right so all the all the layers and basically all the output of what that packet was originally but many of you're",
    "start": "2190690",
    "end": "2196900"
  },
  {
    "text": "probably thinking of cave so what is all this right so let's capture the HTTP traffic so we just got a full packet in",
    "start": "2196900",
    "end": "2204039"
  },
  {
    "start": "2199000",
    "end": "2241000"
  },
  {
    "text": "that case with that simple little like little script you wrote there now we can actually look for specifically what",
    "start": "2204039",
    "end": "2210579"
  },
  {
    "text": "we're looking for you so now we have that same piece of code up top right we",
    "start": "2210579",
    "end": "2216039"
  },
  {
    "text": "had that original packet now we were writing some code to go deep into the actual application layer the library",
    "start": "2216039",
    "end": "2221140"
  },
  {
    "text": "provides a nice little handler here that allows us to just grab it we're gonna look for HTTP in the payload see if it's",
    "start": "2221140",
    "end": "2227770"
  },
  {
    "text": "there great so there's probably HTTP requests in here and then we did some other fancy things here to show you the",
    "start": "2227770",
    "end": "2233200"
  },
  {
    "text": "actual flow back and forth right so this code will give you that and all we're doing is describing HTTP requests right",
    "start": "2233200",
    "end": "2239650"
  },
  {
    "text": "so that's the sealed you are there so let's build it again and see what output we get so we have the traffic where your",
    "start": "2239650",
    "end": "2244900"
  },
  {
    "start": "2241000",
    "end": "2297000"
  },
  {
    "text": "destination so that's the instance target that you set up the traffic moving target we're gonna build a code there have it run in the background",
    "start": "2244900",
    "end": "2251440"
  },
  {
    "text": "we're also gonna have the traffic resource so this is that each HTTP server we're gonna run and that's facing out to the internet with the port of",
    "start": "2251440",
    "end": "2258279"
  },
  {
    "text": "8080 and it's listening on port port 8080 waiting for requests get a web",
    "start": "2258279",
    "end": "2263799"
  },
  {
    "text": "browser I go to I go to that URL the IP address port 80 boom and so now we're now the",
    "start": "2263799",
    "end": "2273630"
  },
  {
    "text": "HTTP server responded to me but also that traffic nearing destination target instance got that entire flow that",
    "start": "2273630",
    "end": "2279819"
  },
  {
    "text": "happened both the HTTP request in and all the responses back so as you can see I mean this is a pretty powerful model",
    "start": "2279819",
    "end": "2286509"
  },
  {
    "text": "for those of you who want to build specific workflows around this with a few lines of code we can actually get",
    "start": "2286509",
    "end": "2292420"
  },
  {
    "text": "something going here right so it works",
    "start": "2292420",
    "end": "2297869"
  },
  {
    "start": "2297000",
    "end": "2370000"
  },
  {
    "text": "so done right but what can we do from here so we can send these things",
    "start": "2298049",
    "end": "2303190"
  },
  {
    "text": "ourselves to s3 we can send it to Kinesis also to cloud watch some things",
    "start": "2303190",
    "end": "2309910"
  },
  {
    "text": "to consider here given that you're building your own you want to think about scale as well get to have some like buffering techniques on the",
    "start": "2309910",
    "end": "2315579"
  },
  {
    "text": "instance because if too much traffic is going in you can only send things to s3 so fast right there's only a certain",
    "start": "2315579",
    "end": "2321640"
  },
  {
    "text": "amount of F requests per second you have to implement some sort of buffering here keep on the lookout I think we're gonna",
    "start": "2321640",
    "end": "2328000"
  },
  {
    "text": "write a blog on this pretty soon here and put this public so we'll have more information about how you guys can jump in here and do this yourself but if you",
    "start": "2328000",
    "end": "2334660"
  },
  {
    "text": "also are interested in the code shoot me an email I'm gonna have my email at the end and I'll send you the snippet I have no awesome so we talked about building",
    "start": "2334660",
    "end": "2342759"
  },
  {
    "text": "your own analyzer we also talked about APM partners there's also open source tools we actually have a centered documentation Zeke is terracotta we had",
    "start": "2342759",
    "end": "2350829"
  },
  {
    "text": "we have two documentation on those guys if you want to check those out some open source tools that'll get you going give",
    "start": "2350829",
    "end": "2356859"
  },
  {
    "text": "you that happy medium between building your own analyzer and using an API and partner",
    "start": "2356859",
    "end": "2362190"
  },
  {
    "text": "and also here's a link for you guys if you want to check those out",
    "start": "2362559",
    "end": "2367049"
  },
  {
    "start": "2370000",
    "end": "2697000"
  },
  {
    "text": "so any other any other considerations nope do you want to thanks Miguel",
    "start": "2370140",
    "end": "2375970"
  },
  {
    "text": "so we covered a lot of things I want to reiterate that you know there are a",
    "start": "2375970",
    "end": "2382180"
  },
  {
    "text": "bunch of webinars that we are doing with our APN partners there's a lot more you can do you can actually figure out the",
    "start": "2382180",
    "end": "2389530"
  },
  {
    "text": "sophisticated attack if you have an alert coming in you can actually really dig deep and these tools can allow you",
    "start": "2389530",
    "end": "2395050"
  },
  {
    "text": "to figure out what exactly is happening in your environment so you know I just",
    "start": "2395050",
    "end": "2400960"
  },
  {
    "text": "want to make sure that you know if you have a partner of your choice that you don't see in the list give us a shoot us",
    "start": "2400960",
    "end": "2406869"
  },
  {
    "text": "an email or look out for the webinar for these partners right but coming back to",
    "start": "2406869",
    "end": "2413050"
  },
  {
    "text": "traffic meaning there are a few things that you should be aware of one is that mirror traffic on the source is not",
    "start": "2413050",
    "end": "2420400"
  },
  {
    "text": "subject to outbound security growth this is important for our security conscious",
    "start": "2420400",
    "end": "2426280"
  },
  {
    "text": "customers because if they want to mirror traffic you know they want to make sure that they're keeping an eye out on every",
    "start": "2426280",
    "end": "2433599"
  },
  {
    "text": "single critical workload you don't want the developer or anybody else to actually just block the mirror traffic",
    "start": "2433599",
    "end": "2439810"
  },
  {
    "text": "by installing a egress security group to to just block the bx9 traffic so that is",
    "start": "2439810",
    "end": "2446320"
  },
  {
    "text": "the reason we we made this conscious decision where mirror traffic will",
    "start": "2446320",
    "end": "2451630"
  },
  {
    "text": "bypass the ingress egress security group and for the same reason mirror traffic",
    "start": "2451630",
    "end": "2456970"
  },
  {
    "text": "will not be captured in the flow log so it is it is for the administrator you",
    "start": "2456970",
    "end": "2462490"
  },
  {
    "text": "know the feature is primarily for the security team where they can choose to",
    "start": "2462490",
    "end": "2468460"
  },
  {
    "text": "enable mirroring on certain workloads where they want to monitor or they want to do incidence response if they have",
    "start": "2468460",
    "end": "2474250"
  },
  {
    "text": "figured or found out an alert that's been generated on cloud watch or guard duty or things like that",
    "start": "2474250",
    "end": "2481349"
  },
  {
    "text": "another aspect the the package that will be mirrored are the only packets that were passed or allowed by security group",
    "start": "2481589",
    "end": "2489700"
  },
  {
    "text": "and network ACL on the source so the traffic which will enter the ec2",
    "start": "2489700",
    "end": "2495640"
  },
  {
    "text": "instance on or the source is the traffic that will actually be will matter so in",
    "start": "2495640",
    "end": "2501520"
  },
  {
    "text": "other words if if on the so it's a packet has dropped because of security group that won't be mirror",
    "start": "2501520",
    "end": "2507900"
  },
  {
    "text": "mirror traffic is considered as a standard traffic so all the internet'",
    "start": "2508260",
    "end": "2515080"
  },
  {
    "text": "see data transfer and other things do apply so but you have a bunch of options you can actually have an appliance",
    "start": "2515080",
    "end": "2521200"
  },
  {
    "text": "within an AZ and and essentially send all your traffic from source to a",
    "start": "2521200",
    "end": "2526240"
  },
  {
    "text": "destination and have them all in the same AZ but want to clarify that mirror",
    "start": "2526240",
    "end": "2531250"
  },
  {
    "text": "traffic is a standard traffic standard UDP traffic which means you need to make sure that you have the routing",
    "start": "2531250",
    "end": "2537340"
  },
  {
    "text": "configured correctly as well you need to have connectivity between the source and destination now the destination as",
    "start": "2537340",
    "end": "2544150"
  },
  {
    "text": "Miguel talked about can be in another V PC another account connected to our",
    "start": "2544150",
    "end": "2550210"
  },
  {
    "text": "transit gateway or wire V PC peering but for make for that to make it work you want to make sure that you have routing",
    "start": "2550210",
    "end": "2557109"
  },
  {
    "text": "configured correctly and Miguel already mentioned that we will prioritize production traffic over mirror traffic",
    "start": "2557109",
    "end": "2564490"
  },
  {
    "text": "again we don't want to get into a scenario where you you start dropping",
    "start": "2564490",
    "end": "2570640"
  },
  {
    "text": "packets on the production application because you enable traffic moorings and",
    "start": "2570640",
    "end": "2575760"
  },
  {
    "text": "be careful of the MTU size since the packet is encapsulated there is a 56",
    "start": "2575760",
    "end": "2582190"
  },
  {
    "text": "bytes of overhead so if you if your target is configured with an MT of 9000",
    "start": "2582190",
    "end": "2589240"
  },
  {
    "text": "and you're trying to actually send 9000 bytes of packet from source to destination we will truncate the packet",
    "start": "2589240",
    "end": "2595150"
  },
  {
    "text": "at 8000 946 bytes so a quick workaround there is that you can set your source to",
    "start": "2595150",
    "end": "2601600"
  },
  {
    "text": "have no more than MTU size of 8000 946 bytes so that all the packets that are",
    "start": "2601600",
    "end": "2607390"
  },
  {
    "text": "mirrored will be within the MTU budget of the target and that is that were some",
    "start": "2607390",
    "end": "2613930"
  },
  {
    "text": "of the considerations right now let's take a quick look at how our customers are planning to use traffic mirroring",
    "start": "2613930",
    "end": "2619359"
  },
  {
    "text": "right we talked about all this thing but in a very short span of time what we",
    "start": "2619359",
    "end": "2624580"
  },
  {
    "text": "have seen so it's been two weeks that we launched this feature in 15 regions but we are seeing some cool stuff here that",
    "start": "2624580",
    "end": "2631420"
  },
  {
    "text": "our customers are trying to do and a lot of use cases are getting unblocked you know",
    "start": "2631420",
    "end": "2636700"
  },
  {
    "text": "streamers are now trying to use traffic murdering to continuously monitor sensitive workloads which they want to",
    "start": "2636700",
    "end": "2642849"
  },
  {
    "text": "keep an eye on second is when when you have acquisition when you have you know",
    "start": "2642849",
    "end": "2649839"
  },
  {
    "text": "when you're merging environment this feature comes in handy you can enable",
    "start": "2649839",
    "end": "2656619"
  },
  {
    "text": "work traffic mirroring on the workloads of the newer environment that's merging in and really figure out what actually",
    "start": "2656619",
    "end": "2663310"
  },
  {
    "text": "traffic is going in and out of those workloads as opposed to what you have been told by other administrators right",
    "start": "2663310",
    "end": "2668920"
  },
  {
    "text": "so you can have a lot more data about the new infrastructure that's merging",
    "start": "2668920",
    "end": "2674530"
  },
  {
    "text": "into your environment and then this is actually really cool feature for",
    "start": "2674530",
    "end": "2679869"
  },
  {
    "text": "on-demand incident responses right so I will go through some of the workflows in",
    "start": "2679869",
    "end": "2685450"
  },
  {
    "text": "the next couple slides but this totally unlocks this feature totally and blocks how you go and dig deep into into",
    "start": "2685450",
    "end": "2694450"
  },
  {
    "text": "traffic when you have seen some alerts some security alerts so the automation",
    "start": "2694450",
    "end": "2701440"
  },
  {
    "start": "2697000",
    "end": "2710000"
  },
  {
    "text": "here is key there is a there's a small typo here it's so the key here is that automation workflows are the key here",
    "start": "2701440",
    "end": "2708130"
  },
  {
    "text": "with traffic mirroring so let's take a look at how our customers are actually using this so I have last couple of",
    "start": "2708130",
    "end": "2714819"
  },
  {
    "start": "2710000",
    "end": "3065000"
  },
  {
    "text": "slides here which will you know give you an idea about how you can build this whole workflow and we will actually",
    "start": "2714819",
    "end": "2722349"
  },
  {
    "text": "opposed this code on github so that you can leverage it as well so you have ec2",
    "start": "2722349",
    "end": "2727750"
  },
  {
    "text": "instance that you have you have in your environment and you have let's say some",
    "start": "2727750",
    "end": "2733089"
  },
  {
    "text": "good trap green traffic which is a good traffic which comes in and out of your environment everything is fine but for",
    "start": "2733089",
    "end": "2738880"
  },
  {
    "text": "some reason you see this purple or blue traffic which is bad traffic that is",
    "start": "2738880",
    "end": "2744640"
  },
  {
    "text": "coming in now and what happens is that God Duty comes in and it generates an",
    "start": "2744640",
    "end": "2750099"
  },
  {
    "text": "alert that you know something is wrong but until until two weeks ago you would",
    "start": "2750099",
    "end": "2756490"
  },
  {
    "text": "actually just stop there right you will actually have to have human dig into it but now you can actually take alert",
    "start": "2756490",
    "end": "2763650"
  },
  {
    "text": "enable and lambda event triggered the event",
    "start": "2763650",
    "end": "2769540"
  },
  {
    "text": "and lambda can actually now go and figure out why where this alert was generated and on which en I this there",
    "start": "2769540",
    "end": "2778090"
  },
  {
    "text": "is a potential problem and now what it can do is it can automatically spin up a monitoring appliance for you so for",
    "start": "2778090",
    "end": "2785650"
  },
  {
    "text": "example you have a monitoring appliance where you you it's in the same V PC in this case it can be in a different",
    "start": "2785650",
    "end": "2791470"
  },
  {
    "text": "central InfoSec V PC to it will now then go and enable traffic mirroring for you",
    "start": "2791470",
    "end": "2796630"
  },
  {
    "text": "on that DNI and once that's enabled you have automatically all the packets that",
    "start": "2796630",
    "end": "2802000"
  },
  {
    "text": "were coming in and out can go to your monitoring appliance so that you can now really look at what was this alert about",
    "start": "2802000",
    "end": "2807640"
  },
  {
    "text": "was it smoking gun what what was really happening here that can be done",
    "start": "2807640",
    "end": "2813030"
  },
  {
    "text": "automatically you can actually also once so some of our customers are using open",
    "start": "2813030",
    "end": "2819640"
  },
  {
    "text": "source tool like Zeke and sir cata which can monitor the traffic for you tell you what's happening and also generate logs",
    "start": "2819640",
    "end": "2826390"
  },
  {
    "text": "that logs can then be sent to s3 for archival purposes for record-keeping you",
    "start": "2826390",
    "end": "2831490"
  },
  {
    "text": "know or for whatever other use cases you want to have also that locks can now be",
    "start": "2831490",
    "end": "2837040"
  },
  {
    "text": "queried through amazon athena so that you can actually provide these locks to",
    "start": "2837040",
    "end": "2843430"
  },
  {
    "text": "humans who can do a high judgment call right whether to install a new security",
    "start": "2843430",
    "end": "2849040"
  },
  {
    "text": "group whether to terminate this workload do whatever you want to remediate that right so this entire workflow has been",
    "start": "2849040",
    "end": "2856570"
  },
  {
    "text": "you know we have customers who are already trying to use this and and what",
    "start": "2856570",
    "end": "2861640"
  },
  {
    "text": "we'll do is over a period of time will actually try to post this workload on our github repository so that you can",
    "start": "2861640",
    "end": "2867970"
  },
  {
    "text": "just use it in your environment so that was one thing the other yes so the other",
    "start": "2867970",
    "end": "2876580"
  },
  {
    "text": "bill sorry the slide has more build-out so then you can actually use once the things are done you you have remediate",
    "start": "2876580",
    "end": "2883060"
  },
  {
    "text": "that a problem you can actually clean up this environment too so lambda can actually go terminate the monitoring instance if",
    "start": "2883060",
    "end": "2888820"
  },
  {
    "text": "you want it can disable the traffic mirroring and that's how you can have the incidence response going for a",
    "start": "2888820",
    "end": "2894970"
  },
  {
    "text": "particular alert that was generated by either your tools using flow logs or guard duty the second thing is pretty",
    "start": "2894970",
    "end": "2902650"
  },
  {
    "text": "similar thing that our customer is using is instead of god duty they are actually there's a human that engine generates a",
    "start": "2902650",
    "end": "2909460"
  },
  {
    "text": "request for incident response so that you know it it has in it the request goes through api gateway and then the",
    "start": "2909460",
    "end": "2916480"
  },
  {
    "text": "rest of the stuff is exactly the same you know lambda script come in monitoring a planned concern deployed",
    "start": "2916480",
    "end": "2922060"
  },
  {
    "text": "traffic marian getz enabled and then you start getting the mirrored packet and then obviously the",
    "start": "2922060",
    "end": "2928840"
  },
  {
    "text": "logs can be sent to s3 and some human can actually read the logs there's one",
    "start": "2928840",
    "end": "2934780"
  },
  {
    "text": "last thing that is also our customers are doing i want to actually make sure that you are aware about that is let's",
    "start": "2934780",
    "end": "2941680"
  },
  {
    "text": "say that you have a environment where you have traffic marrying on and everything is working you send it to",
    "start": "2941680",
    "end": "2947710"
  },
  {
    "text": "network load balancer as a target which is what we recommend by the way because you don't know how much traffic you're",
    "start": "2947710",
    "end": "2953080"
  },
  {
    "text": "going to mirror send it to network load balancer let network load balancer take care of the high availability and scalability aspect and you have",
    "start": "2953080",
    "end": "2959860"
  },
  {
    "text": "everything working that we were talking about in the slides where logs are shipping to s/3 s/3 and then somebody",
    "start": "2959860",
    "end": "2966160"
  },
  {
    "text": "can query through amazon athena what you could do is you can actually tag your application so every you know there are",
    "start": "2966160",
    "end": "2972340"
  },
  {
    "text": "use cases for our customers where they want to enable traffic mirroring on every single eni in a particular environment for",
    "start": "2972340",
    "end": "2978670"
  },
  {
    "text": "example if it has a tag XYZ which is a critical workload they just want to enable traffic murmuring so what you",
    "start": "2978670",
    "end": "2984820"
  },
  {
    "text": "could do is in such case for example here I have another monitoring instance that that was deployed and I want to",
    "start": "2984820",
    "end": "2990790"
  },
  {
    "text": "make sure that I don't go and enable or traffic mirroring on every instance because that's not scalable what you",
    "start": "2990790",
    "end": "2997000"
  },
  {
    "text": "could do is you could have cloud trail where crowd trail can tell you what instance was deployed or instantiated",
    "start": "2997000",
    "end": "3004080"
  },
  {
    "text": "and a lambda script or lambda event can be generated lambda can figure out what was the en I of this instance which has",
    "start": "3004080",
    "end": "3010910"
  },
  {
    "text": "tag XYZ which happens to be a very important workload in my environment and then I can that lambda can actually go",
    "start": "3010910",
    "end": "3018150"
  },
  {
    "text": "and enable traffic mirroring on this en I as well and send it to network load",
    "start": "3018150",
    "end": "3023190"
  },
  {
    "text": "balancer so that you have a continuous monitoring of your workload without you",
    "start": "3023190",
    "end": "3028740"
  },
  {
    "text": "actually babysitting every workload that's coming in up and down in your environment so all of these things are",
    "start": "3028740",
    "end": "3035180"
  },
  {
    "text": "happening our customers are doing it very large customers some you know even",
    "start": "3035180",
    "end": "3040270"
  },
  {
    "text": "essentially even the large-scale customers are small-scale customers they are actually trying to do this",
    "start": "3040270",
    "end": "3046160"
  },
  {
    "text": "automated workflow and and we actually hired a compiled a highly recommend using these workflows so that you have",
    "start": "3046160",
    "end": "3052819"
  },
  {
    "text": "automation you can scale with this feature and have keep an eye out on your",
    "start": "3052819",
    "end": "3057829"
  },
  {
    "text": "environment so that you know you you you have peace of mind and you know that",
    "start": "3057829",
    "end": "3063650"
  },
  {
    "text": "your environment is safe Miguel do you have any final thoughts so that was my part we go yeah well first of all thanks",
    "start": "3063650",
    "end": "3072290"
  },
  {
    "start": "3065000",
    "end": "3164000"
  },
  {
    "text": "everyone who stuck around that's we talked about a lot of stuff right talked about VPC Phil logs talk about traffic",
    "start": "3072290",
    "end": "3077930"
  },
  {
    "text": "mirroring and really with flow logs right we when we turn those on we get the metadata of what's actually happening with flows right and that was",
    "start": "3077930",
    "end": "3084650"
  },
  {
    "text": "what customers have been doing and it's been really helpful for all of you guys who've wanted troubleshoot network ACLs and secure groups and what's going on",
    "start": "3084650",
    "end": "3090740"
  },
  {
    "text": "and also with traffic here and we saw some use cases where we can use APN partners Amazon partner network user",
    "start": "3090740",
    "end": "3096490"
  },
  {
    "text": "solutions to be able to get a single pane of glass and understand what's going on in the environment we talked",
    "start": "3096490",
    "end": "3102470"
  },
  {
    "text": "about some of the DIY stuff right so you can build your own analyzer and we also looked at some of the open source tools",
    "start": "3102470",
    "end": "3108349"
  },
  {
    "text": "right the traffic being is you know we're starting to get more use case especially from you guys we love the",
    "start": "3108349",
    "end": "3114500"
  },
  {
    "text": "feedback from customers we're looking at things like live traffic like you",
    "start": "3114500",
    "end": "3120079"
  },
  {
    "text": "basically can mirror the live traffic and test your workloads things like that we're looking at some things like that so it's just beyond just not even just",
    "start": "3120079",
    "end": "3127940"
  },
  {
    "text": "mirroring traffic right there's workloads beyond that that can be attached to it and so I'm gonna leave",
    "start": "3127940",
    "end": "3134569"
  },
  {
    "text": "you guys with the quirky quote here so Confucius once said to practice five things under all the circumstances constitutes perfect virtue these five",
    "start": "3134569",
    "end": "3142010"
  },
  {
    "text": "are gravity generosity of soul sincerity earnestness and kindness and with that",
    "start": "3142010",
    "end": "3147670"
  },
  {
    "text": "you know we'd love your feedback so if you and please leave some session",
    "start": "3147670",
    "end": "3153619"
  },
  {
    "text": "feedback we really appreciate it we take your feedback to heart and you know really appreciate guys coming out here",
    "start": "3153619",
    "end": "3158780"
  },
  {
    "text": "today thank you if you want the slides that's my email",
    "start": "3158780",
    "end": "3163540"
  }
]