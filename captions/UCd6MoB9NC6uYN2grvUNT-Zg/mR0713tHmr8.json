[
  {
    "text": "[Music]",
    "start": "1020",
    "end": "8160"
  },
  {
    "text": "hi my name is leowski and I'm a",
    "start": "9480",
    "end": "11280"
  },
  {
    "text": "principal Solutions architect at Amazon",
    "start": "11280",
    "end": "13080"
  },
  {
    "text": "web services I'm going to talk to you",
    "start": "13080",
    "end": "14960"
  },
  {
    "text": "today about how to deploy your code on",
    "start": "14960",
    "end": "17600"
  },
  {
    "text": "AWS so there's several options to do",
    "start": "17600",
    "end": "20080"
  },
  {
    "text": "that but first let's take a look at the",
    "start": "20080",
    "end": "21760"
  },
  {
    "text": "proposed uh architecture here so we've",
    "start": "21760",
    "end": "24480"
  },
  {
    "text": "got a web application U and it's the",
    "start": "24480",
    "end": "27039"
  },
  {
    "text": "code for it is going to be stored in S3",
    "start": "27039",
    "end": "28880"
  },
  {
    "text": "or git",
    "start": "28880",
    "end": "30519"
  },
  {
    "text": "we've got a load balancer so internet",
    "start": "30519",
    "end": "32920"
  },
  {
    "text": "traffic is going to hit the load",
    "start": "32920",
    "end": "33920"
  },
  {
    "text": "balancer which is going to be an elb and",
    "start": "33920",
    "end": "36200"
  },
  {
    "text": "then we've got an auto scaling group",
    "start": "36200",
    "end": "38360"
  },
  {
    "text": "behind the load balancer so the Autos",
    "start": "38360",
    "end": "40160"
  },
  {
    "text": "scaling group is going to have anywhere",
    "start": "40160",
    "end": "42200"
  },
  {
    "text": "from one to you know say 100 instances",
    "start": "42200",
    "end": "45399"
  },
  {
    "text": "depending on load um and then there's",
    "start": "45399",
    "end": "47800"
  },
  {
    "text": "going to be a multiz RDS uh database",
    "start": "47800",
    "end": "51199"
  },
  {
    "text": "behind the uh ec2 instances so uh that",
    "start": "51199",
    "end": "55600"
  },
  {
    "text": "can be Oracle postgres uh Aurora my SQL",
    "start": "55600",
    "end": "59399"
  },
  {
    "text": "or equal server it doesn't really matter",
    "start": "59399",
    "end": "61440"
  },
  {
    "text": "in this example so how do we actually",
    "start": "61440",
    "end": "64040"
  },
  {
    "text": "deploy our code you know onto these",
    "start": "64040",
    "end": "65720"
  },
  {
    "text": "instances here well there's three",
    "start": "65720",
    "end": "67600"
  },
  {
    "text": "options the first option is elastic bean",
    "start": "67600",
    "end": "70640"
  },
  {
    "text": "[Music]",
    "start": "70640",
    "end": "74510"
  },
  {
    "text": "stock so AWS elastic beant stock will",
    "start": "79600",
    "end": "83079"
  },
  {
    "text": "allow you to actually not only just",
    "start": "83079",
    "end": "85079"
  },
  {
    "text": "deploy code but provision all of this",
    "start": "85079",
    "end": "87680"
  },
  {
    "text": "infrastructure so it's going to set up",
    "start": "87680",
    "end": "89000"
  },
  {
    "text": "your elb it's going to set up your auto",
    "start": "89000",
    "end": "91000"
  },
  {
    "text": "scaling group of your ec2 instances and",
    "start": "91000",
    "end": "93079"
  },
  {
    "text": "it's going to set up your multi- RDS",
    "start": "93079",
    "end": "95000"
  },
  {
    "text": "instance now uh elastic beanock supports",
    "start": "95000",
    "end": "98479"
  },
  {
    "text": "several containers among which are Ruby",
    "start": "98479",
    "end": "101320"
  },
  {
    "text": "PHP python node.js",
    "start": "101320",
    "end": "104439"
  },
  {
    "text": "net Docker containers and several others",
    "start": "104439",
    "end": "107840"
  },
  {
    "text": "so assuming that your code fits into one",
    "start": "107840",
    "end": "110000"
  },
  {
    "text": "of those containers elastic beanock is a",
    "start": "110000",
    "end": "112079"
  },
  {
    "text": "really good fit it's also a very simple",
    "start": "112079",
    "end": "113920"
  },
  {
    "text": "service to use so if you don't want to",
    "start": "113920",
    "end": "115960"
  },
  {
    "text": "have to worry about provisioning your",
    "start": "115960",
    "end": "117680"
  },
  {
    "text": "own uh infrastructure here elastic beant",
    "start": "117680",
    "end": "120560"
  },
  {
    "text": "stock will handle all the",
    "start": "120560",
    "end": "121600"
  },
  {
    "text": "undifferentiated heavy lifting of that",
    "start": "121600",
    "end": "123200"
  },
  {
    "text": "for you the second option is AWS opsw",
    "start": "123200",
    "end": "127720"
  },
  {
    "text": "[Music]",
    "start": "127720",
    "end": "130930"
  },
  {
    "text": "works so opsworks is great for those who",
    "start": "132160",
    "end": "135280"
  },
  {
    "text": "are familiar with a chef configuration",
    "start": "135280",
    "end": "136920"
  },
  {
    "text": "management system um so what opsworks",
    "start": "136920",
    "end": "139720"
  },
  {
    "text": "will do is it can actually um use Chef",
    "start": "139720",
    "end": "143879"
  },
  {
    "text": "recipes and those Chef recipes could be",
    "start": "143879",
    "end": "145720"
  },
  {
    "text": "ones that you write yourself or uh it",
    "start": "145720",
    "end": "148360"
  },
  {
    "text": "could be something you get from the",
    "start": "148360",
    "end": "150080"
  },
  {
    "text": "internet from you know existing",
    "start": "150080",
    "end": "151480"
  },
  {
    "text": "repositories of recipes and it's going",
    "start": "151480",
    "end": "153319"
  },
  {
    "text": "to deploy uh whatever the recipes tell",
    "start": "153319",
    "end": "155519"
  },
  {
    "text": "it to so that could be code that could",
    "start": "155519",
    "end": "157200"
  },
  {
    "text": "be applications that could be depencies",
    "start": "157200",
    "end": "158879"
  },
  {
    "text": "for those applications so it can be",
    "start": "158879",
    "end": "160640"
  },
  {
    "text": "pretty flexible and then you can you",
    "start": "160640",
    "end": "162239"
  },
  {
    "text": "know break up your application into",
    "start": "162239",
    "end": "163720"
  },
  {
    "text": "tiers so let's say you have a web tier",
    "start": "163720",
    "end": "165920"
  },
  {
    "text": "and an app tier uh you can deploy",
    "start": "165920",
    "end": "168159"
  },
  {
    "text": "different uh recipes to different uh",
    "start": "168159",
    "end": "171080"
  },
  {
    "text": "parts of your application um lastly uh",
    "start": "171080",
    "end": "174959"
  },
  {
    "text": "the third option is going to be our",
    "start": "174959",
    "end": "176680"
  },
  {
    "text": "suite of code services so it's going to",
    "start": "176680",
    "end": "178480"
  },
  {
    "text": "be code commit",
    "start": "178480",
    "end": "180090"
  },
  {
    "text": "[Music]",
    "start": "180090",
    "end": "185360"
  },
  {
    "text": "code",
    "start": "185360",
    "end": "187760"
  },
  {
    "text": "deploy and code",
    "start": "189440",
    "end": "193080"
  },
  {
    "text": "[Music]",
    "start": "193880",
    "end": "195799"
  },
  {
    "text": "pipeline so AWS Cod commit is our fully",
    "start": "195799",
    "end": "198720"
  },
  {
    "text": "managed uh G uh Version Control System",
    "start": "198720",
    "end": "202440"
  },
  {
    "text": "uh so it's fully compatible with Git you",
    "start": "202440",
    "end": "205239"
  },
  {
    "text": "can use the same git command line uh",
    "start": "205239",
    "end": "207400"
  },
  {
    "text": "tools that you're typically used to it's",
    "start": "207400",
    "end": "209120"
  },
  {
    "text": "got a web interface as well it's got",
    "start": "209120",
    "end": "211239"
  },
  {
    "text": "integration with our identity and access",
    "start": "211239",
    "end": "212920"
  },
  {
    "text": "management system and it supports large",
    "start": "212920",
    "end": "215879"
  },
  {
    "text": "objects and there's no limits on the",
    "start": "215879",
    "end": "217599"
  },
  {
    "text": "size of the repositories uh so it's a",
    "start": "217599",
    "end": "219799"
  },
  {
    "text": "great service and it'll allow you to not",
    "start": "219799",
    "end": "222439"
  },
  {
    "text": "have to manage your own G repository",
    "start": "222439",
    "end": "224120"
  },
  {
    "text": "essentially uh then there's code deploy",
    "start": "224120",
    "end": "226439"
  },
  {
    "text": "so code deploy is our code deployment",
    "start": "226439",
    "end": "228159"
  },
  {
    "text": "service and code deploy allows you to",
    "start": "228159",
    "end": "230879"
  },
  {
    "text": "run an agent on your instances and also",
    "start": "230879",
    "end": "233159"
  },
  {
    "text": "on on premise servers and it breaks up",
    "start": "233159",
    "end": "235840"
  },
  {
    "text": "your deployments into different life",
    "start": "235840",
    "end": "237439"
  },
  {
    "text": "cycle stages so for example when your",
    "start": "237439",
    "end": "240159"
  },
  {
    "text": "starts when your application stops when",
    "start": "240159",
    "end": "242400"
  },
  {
    "text": "you have to validate if the service on",
    "start": "242400",
    "end": "244439"
  },
  {
    "text": "the instance is running when you have to",
    "start": "244439",
    "end": "246280"
  },
  {
    "text": "install the actual application so on so",
    "start": "246280",
    "end": "248640"
  },
  {
    "text": "forth and you can Define what happens in",
    "start": "248640",
    "end": "251120"
  },
  {
    "text": "those life cycle uh stages based on",
    "start": "251120",
    "end": "254560"
  },
  {
    "text": "custom scripts so that could be a shell",
    "start": "254560",
    "end": "256160"
  },
  {
    "text": "script it could be a PHP executable it",
    "start": "256160",
    "end": "258880"
  },
  {
    "text": "could be uh really anything you can you",
    "start": "258880",
    "end": "261519"
  },
  {
    "text": "can either have code deploy handle your",
    "start": "261519",
    "end": "264040"
  },
  {
    "text": "deploy from end to end or you can have",
    "start": "264040",
    "end": "265880"
  },
  {
    "text": "Cod deploy initiate your puppet or",
    "start": "265880",
    "end": "268160"
  },
  {
    "text": "anible or other configuration man M",
    "start": "268160",
    "end": "270039"
  },
  {
    "text": "system um and so in this example we'd",
    "start": "270039",
    "end": "273759"
  },
  {
    "text": "have code deploy agents running on each",
    "start": "273759",
    "end": "275880"
  },
  {
    "text": "of our instances and our Auto scaling",
    "start": "275880",
    "end": "277720"
  },
  {
    "text": "group and they'd be basically talking to",
    "start": "277720",
    "end": "279800"
  },
  {
    "text": "the code deploy service and waiting for",
    "start": "279800",
    "end": "282840"
  },
  {
    "text": "uh to initiate a deployment and then",
    "start": "282840",
    "end": "285400"
  },
  {
    "text": "we'd have code pipeline so code pipeline",
    "start": "285400",
    "end": "287919"
  },
  {
    "text": "is our continuous delivery service and",
    "start": "287919",
    "end": "289720"
  },
  {
    "text": "so code pipeline kind of puts everything",
    "start": "289720",
    "end": "291400"
  },
  {
    "text": "together here in our scenario so code",
    "start": "291400",
    "end": "293400"
  },
  {
    "text": "pipeline is going to monitor our S3",
    "start": "293400",
    "end": "295479"
  },
  {
    "text": "buckets or get repository and as soon as",
    "start": "295479",
    "end": "298000"
  },
  {
    "text": "there's a change deployed to it it's",
    "start": "298000",
    "end": "299840"
  },
  {
    "text": "going to initiate a code deploy so it's",
    "start": "299840",
    "end": "301600"
  },
  {
    "text": "going to tell uh code deploy hey install",
    "start": "301600",
    "end": "304120"
  },
  {
    "text": "my or deploy my new code on my ec2",
    "start": "304120",
    "end": "306880"
  },
  {
    "text": "instances and how you deploy that code",
    "start": "306880",
    "end": "308960"
  },
  {
    "text": "could be very flexible so let's say this",
    "start": "308960",
    "end": "310880"
  },
  {
    "text": "is a production environment and you want",
    "start": "310880",
    "end": "312639"
  },
  {
    "text": "to be safe and so if the deploy fails",
    "start": "312639",
    "end": "314600"
  },
  {
    "text": "you want to stop you can have it",
    "start": "314600",
    "end": "316160"
  },
  {
    "text": "deployed to one instance at a time uh",
    "start": "316160",
    "end": "318720"
  },
  {
    "text": "let's say it's a staging environment you",
    "start": "318720",
    "end": "320520"
  },
  {
    "text": "just want to deploy it as fast as",
    "start": "320520",
    "end": "321880"
  },
  {
    "text": "possible you can have it deployed to all",
    "start": "321880",
    "end": "323759"
  },
  {
    "text": "your instances at a time there's also",
    "start": "323759",
    "end": "325720"
  },
  {
    "text": "custom deployment schedules so you can",
    "start": "325720",
    "end": "328120"
  },
  {
    "text": "deploy based on percentage of your your",
    "start": "328120",
    "end": "329840"
  },
  {
    "text": "Fleet that's healthy or you can deploy",
    "start": "329840",
    "end": "331520"
  },
  {
    "text": "based on the number of instances that",
    "start": "331520",
    "end": "332880"
  },
  {
    "text": "are healthy uh so you can be very",
    "start": "332880",
    "end": "334960"
  },
  {
    "text": "flexible you can also have different",
    "start": "334960",
    "end": "336600"
  },
  {
    "text": "deployment groups so you can have a",
    "start": "336600",
    "end": "338840"
  },
  {
    "text": "production Autos scaling group and a",
    "start": "338840",
    "end": "340520"
  },
  {
    "text": "staging Auto scaling group and you can",
    "start": "340520",
    "end": "341960"
  },
  {
    "text": "have code pipeline deploy to staging and",
    "start": "341960",
    "end": "343960"
  },
  {
    "text": "then that succeeds you can have a deploy",
    "start": "343960",
    "end": "346000"
  },
  {
    "text": "a production uh so it's super flexible",
    "start": "346000",
    "end": "350000"
  },
  {
    "text": "these are the three options elastic",
    "start": "350000",
    "end": "351479"
  },
  {
    "text": "beanock opsworks and uh our code",
    "start": "351479",
    "end": "353960"
  },
  {
    "text": "Services which are code commit code",
    "start": "353960",
    "end": "355400"
  },
  {
    "text": "deploy and code Pipeline and if you'd",
    "start": "355400",
    "end": "357639"
  },
  {
    "text": "like to find out more you should go to",
    "start": "357639",
    "end": "359199"
  },
  {
    "text": "our website ite which is aws.amazon.com",
    "start": "359199",
    "end": "361360"
  },
  {
    "text": "uh and you should also check out our",
    "start": "361360",
    "end": "363479"
  },
  {
    "text": "YouTube channel which has all of our",
    "start": "363479",
    "end": "365520"
  },
  {
    "text": "videos from our Summits and our reinvent",
    "start": "365520",
    "end": "368080"
  },
  {
    "text": "conferences including several deep Dives",
    "start": "368080",
    "end": "370240"
  },
  {
    "text": "on these uh services",
    "start": "370240",
    "end": "372550"
  },
  {
    "text": "[Music]",
    "start": "372550",
    "end": "379698"
  }
]