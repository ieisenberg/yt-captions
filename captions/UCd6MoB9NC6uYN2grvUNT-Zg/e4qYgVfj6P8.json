[
  {
    "start": "0",
    "end": "111000"
  },
  {
    "text": "hi I'm Ben from delivery we are trying",
    "start": "30",
    "end": "5250"
  },
  {
    "text": "to be the definitive food company so when you think food we want you to think about us we will we'll give you great",
    "start": "5250",
    "end": "13980"
  },
  {
    "text": "tasting foods to your door to your home to your office we're a really fast",
    "start": "13980",
    "end": "21330"
  },
  {
    "text": "growing startup is a one you could use for it but this year we've just been",
    "start": "21330",
    "end": "28109"
  },
  {
    "text": "declared Deloitte's fastest growing tech startup",
    "start": "28109",
    "end": "33149"
  },
  {
    "text": "in the UK for the second year running so but the growth curve is just phenomenal",
    "start": "33149",
    "end": "38450"
  },
  {
    "text": "and I want to talk about one of our primary engineering priorities and",
    "start": "38450",
    "end": "44700"
  },
  {
    "text": "that's how we just deploy code create changes to our product every single day",
    "start": "44700",
    "end": "53190"
  },
  {
    "text": "you want to maximize the amount of time your engineers are creating changes",
    "start": "53190",
    "end": "59329"
  },
  {
    "text": "deploying to the Internet's going to production and that's the key that the",
    "start": "59329",
    "end": "66840"
  },
  {
    "text": "applications are what make you money the infrastructure layer is everything else",
    "start": "66840",
    "end": "72840"
  },
  {
    "text": "that supports the applications so if you maximize the number of people and writing your applications that's that's",
    "start": "72840",
    "end": "79530"
  },
  {
    "text": "really how you make your money and the the goal of the platform is to let",
    "start": "79530",
    "end": "84720"
  },
  {
    "text": "people just deploy code quickly and safely and I'll talk about how we scale",
    "start": "84720",
    "end": "93000"
  },
  {
    "text": "to process so my team is about seven people I think eight people as of this",
    "start": "93000",
    "end": "98400"
  },
  {
    "text": "week and we support you know a couple of hundred of Engineers and we'll we we",
    "start": "98400",
    "end": "107310"
  },
  {
    "text": "have some techniques that we use to scale this process okay so I'm gonna talk about these",
    "start": "107310",
    "end": "115230"
  },
  {
    "start": "111000",
    "end": "111000"
  },
  {
    "text": "points here how we create new applications we can go from an idea to",
    "start": "115230",
    "end": "122490"
  },
  {
    "text": "the Internet in a matter of hours like a fresh idea how we can go from PR to",
    "start": "122490",
    "end": "130080"
  },
  {
    "text": "production in minutes we optimize for new people we're all growing startup so",
    "start": "130080",
    "end": "138350"
  },
  {
    "text": "not everyone knows how the system works so optimizing for new people means",
    "start": "138350",
    "end": "144120"
  },
  {
    "text": "writing the documentation creating templates setting the conventions you need the basics are really easy to pick",
    "start": "144120",
    "end": "152130"
  },
  {
    "text": "up and we designed for scale growing growing quickly means that you try to",
    "start": "152130",
    "end": "161940"
  },
  {
    "text": "produce the friction it takes to to just get your job done ultimately CI means",
    "start": "161940",
    "end": "171150"
  },
  {
    "text": "that humans get out get out of the way you want the computers to do the checking for you when you click the",
    "start": "171150",
    "end": "178290"
  },
  {
    "text": "green merge button in github the pipeline should just take you the rest of the way down so we separate",
    "start": "178290",
    "end": "187340"
  },
  {
    "text": "application changes from the infrastructure they run on isolating the",
    "start": "187340",
    "end": "194519"
  },
  {
    "text": "work from one team to another this Letarte teams work independently of each",
    "start": "194519",
    "end": "199530"
  },
  {
    "text": "other they're not stepping on each other's toes you reduce you reduce the need to synchronize between teams but",
    "start": "199530",
    "end": "207420"
  },
  {
    "text": "that's where the more that's where you can start getting bogged down in process",
    "start": "207420",
    "end": "212810"
  },
  {
    "text": "so you need to do whatever you need to do to scale this ability for hundreds of",
    "start": "212810",
    "end": "220260"
  },
  {
    "text": "people operating your products make let them make changes with autonomy and we",
    "start": "220260",
    "end": "228660"
  },
  {
    "text": "we actually measure ourselves on this this metric this ability to to make changes so for instance our auto scaling",
    "start": "228660",
    "end": "236280"
  },
  {
    "text": "strategy is based on how many containers who do we spin up like that how how could we make the next",
    "start": "236280",
    "end": "246960"
  },
  {
    "text": "change and do we have enough capacity to do that wherever possible avoid the need",
    "start": "246960",
    "end": "255600"
  },
  {
    "text": "for people to interact with the platform and with each other we have hundreds of",
    "start": "255600",
    "end": "264060"
  },
  {
    "text": "servers no one's going to log into a production server run some batch scripts",
    "start": "264060",
    "end": "269670"
  },
  {
    "text": "from the laptop we try to keep the interaction at the human level to a",
    "start": "269670",
    "end": "275940"
  },
  {
    "text": "minimum we don't even give people credentials to the clusters they don't need to know the",
    "start": "275940",
    "end": "282330"
  },
  {
    "text": "secrets specifically that's that's what the computers are for in our case",
    "start": "282330",
    "end": "287930"
  },
  {
    "text": "developers build docker containers we run on ECL pcs we've actually only been",
    "start": "287930",
    "end": "296250"
  },
  {
    "text": "using docker for a little over a year this is really useful for us because it",
    "start": "296250",
    "end": "301950"
  },
  {
    "text": "means that we have a fairly Greenfield way to deploy applications using a",
    "start": "301950",
    "end": "309240"
  },
  {
    "text": "variety of languages frameworks where well quite polly glad this moment we",
    "start": "309240",
    "end": "314370"
  },
  {
    "text": "support four main languages and frameworks but from the platform point",
    "start": "314370",
    "end": "320820"
  },
  {
    "text": "of view I don't need to restrict the choices that developers use if there's a",
    "start": "320820",
    "end": "325830"
  },
  {
    "text": "good framework in a completely new language where a rail shop but if",
    "start": "325830",
    "end": "331169"
  },
  {
    "text": "someone wants to spin up tensorflow which is a Python based framework then nothing that we build stops them or",
    "start": "331169",
    "end": "338430"
  },
  {
    "text": "locked them into a particular way of thinking",
    "start": "338430",
    "end": "342139"
  },
  {
    "text": "I want to talk about creating new applications how often do you create new",
    "start": "344320",
    "end": "350740"
  },
  {
    "text": "applications for us we're spinning up a new a new service once or twice a week",
    "start": "350740",
    "end": "355980"
  },
  {
    "text": "sometimes even faster than that we use infrastructure as code as a way to just",
    "start": "355980",
    "end": "365590"
  },
  {
    "text": "decoratively create new applications as they come along write a full line",
    "start": "365590",
    "end": "372450"
  },
  {
    "text": "terraform script and we've got a new instance of a new application add a few",
    "start": "372450",
    "end": "377650"
  },
  {
    "text": "more lines of terraform and there's your database there's also a good talk that's going on in session here",
    "start": "377650",
    "end": "384400"
  },
  {
    "text": "Amazon has got a new SDK a new CD care cloud development kits come out and and",
    "start": "384400",
    "end": "391450"
  },
  {
    "text": "that's more infrastructure as code but using an imperative style instead we",
    "start": "391450",
    "end": "396700"
  },
  {
    "text": "still use terraform which is a decorative way of creating new infrastructure we heavily rely on",
    "start": "396700",
    "end": "405750"
  },
  {
    "text": "curated templates and that's what my team is primarily responsible for creating best practices consistent way",
    "start": "405750",
    "end": "413290"
  },
  {
    "text": "of spinning up tens of thousands of resources both within Amazon and forward",
    "start": "413290",
    "end": "420910"
  },
  {
    "text": "third-party services as well we can split these definitions across multiple",
    "start": "420910",
    "end": "428850"
  },
  {
    "text": "multiple teams whilst the templates are centrally managed and curated we can",
    "start": "428850",
    "end": "434980"
  },
  {
    "text": "give individual teams the domain the",
    "start": "434980",
    "end": "440140"
  },
  {
    "text": "responsibility to just spin up new web service just for their own use cases and",
    "start": "440140",
    "end": "445210"
  },
  {
    "text": "that again can be independently managed in their own repo from from other teams",
    "start": "445210",
    "end": "453210"
  },
  {
    "text": "with a with a template system we can propagate good practices that you learn",
    "start": "453210",
    "end": "459430"
  },
  {
    "text": "from your biggest application your monoliths and just stamp out the good",
    "start": "459430",
    "end": "466450"
  },
  {
    "text": "operational practices everywhere else so everyone wins and everyone gets to share knowledge",
    "start": "466450",
    "end": "473460"
  },
  {
    "text": "changing applications is a higher",
    "start": "474319",
    "end": "481499"
  },
  {
    "text": "frequency change so what I call here is things like deploying new versions of",
    "start": "481499",
    "end": "487020"
  },
  {
    "text": "code changing environment variables scaling up or down these are changes",
    "start": "487020",
    "end": "493469"
  },
  {
    "text": "that happen very frequently throughout the day either automated through through",
    "start": "493469",
    "end": "499409"
  },
  {
    "text": "through scripts or when humans make active decisions to turn on feature",
    "start": "499409",
    "end": "504900"
  },
  {
    "text": "flags or change the configuration other changes that happen frequently",
    "start": "504900",
    "end": "510719"
  },
  {
    "text": "throughout the day would also be database migrations for that we use a",
    "start": "510719",
    "end": "517349"
  },
  {
    "text": "service called hopper and we built it ourselves and it lets everyone it's a",
    "start": "517349",
    "end": "524490"
  },
  {
    "text": "web UI that lets everyone see the current state of of the system is of course all of our applications anyone to",
    "start": "524490",
    "end": "532500"
  },
  {
    "text": "make changes to the system with a central interface we can reduce",
    "start": "532500",
    "end": "538740"
  },
  {
    "text": "conflicts we can provide a high-level and audited orchestration of our",
    "start": "538740",
    "end": "545850"
  },
  {
    "text": "production clusters so there's a definition I need to make here and what",
    "start": "545850",
    "end": "552360"
  },
  {
    "text": "do we mean when I say an app specifically an app for us is a code",
    "start": "552360",
    "end": "559110"
  },
  {
    "text": "repository owned by a single team that we build into a docker image an",
    "start": "559110",
    "end": "565410"
  },
  {
    "text": "application can contain multiple services for instance web services",
    "start": "565410",
    "end": "571380"
  },
  {
    "text": "background services our abstraction is on top of ICS so that there's a",
    "start": "571380",
    "end": "576990"
  },
  {
    "text": "one-to-one mapping between a hopper service and an ICS service services can",
    "start": "576990",
    "end": "583140"
  },
  {
    "text": "be scaled independently of each other for instance your background hues don't need to be scaled at the same level as",
    "start": "583140",
    "end": "589110"
  },
  {
    "text": "your web workers we also release services atomically",
    "start": "589110",
    "end": "595260"
  },
  {
    "text": "together so the same code will be either",
    "start": "595260",
    "end": "600660"
  },
  {
    "text": "version 1 or version 2 or but you won't have version 1 2 & 3 at the same time",
    "start": "600660",
    "end": "606830"
  },
  {
    "text": "we'll also roll them back together if there are any of the issues and one of",
    "start": "606830",
    "end": "612180"
  },
  {
    "text": "the primary features with hopper is this is automatic rollback if we detect any",
    "start": "612180",
    "end": "619470"
  },
  {
    "text": "problems services for us share the same",
    "start": "619470",
    "end": "625970"
  },
  {
    "text": "configuration so an application is where the configuration lives but that doesn't",
    "start": "625970",
    "end": "631440"
  },
  {
    "text": "stop you from deploying multiple applications from the same codebase for instance I'm on a repo with different",
    "start": "631440",
    "end": "638310"
  },
  {
    "text": "configurations as well this is a very good pattern for for go programs we're",
    "start": "638310",
    "end": "643440"
  },
  {
    "text": "finding right now this is how we create new applications it's terraform you will",
    "start": "643440",
    "end": "651120"
  },
  {
    "start": "646000",
    "end": "646000"
  },
  {
    "text": "learn absolutely nothing from just looking at that about how we build the platform underneath it but there's some",
    "start": "651120",
    "end": "658410"
  },
  {
    "text": "key things I should call out here we use a module system where we just store our",
    "start": "658410",
    "end": "664650"
  },
  {
    "text": "curated terraform templates in s3 we can pass in constants that are global to",
    "start": "664650",
    "end": "672020"
  },
  {
    "text": "that cluster we actually treat this as react but for infrastructure it's it's",
    "start": "672020",
    "end": "679080"
  },
  {
    "text": "props that you pass in to all of your applications and then after this you",
    "start": "679080",
    "end": "685710"
  },
  {
    "text": "just have the the specific details for your application so in this case the the",
    "start": "685710",
    "end": "690810"
  },
  {
    "text": "my app repository and will create I am credentials circle CI configuration",
    "start": "690810",
    "end": "697530"
  },
  {
    "text": "other build configurations that everyone receives we setup ECR doc image",
    "start": "697530",
    "end": "704850"
  },
  {
    "text": "repository is everyone gets s3 buckets for configuration and secret management",
    "start": "704850",
    "end": "710070"
  },
  {
    "text": "and also we have a custom provider that registers the new application in hopper",
    "start": "710070",
    "end": "716040"
  },
  {
    "text": "itself I'll talk about that in a bit more later in this example I'm",
    "start": "716040",
    "end": "722760"
  },
  {
    "text": "setting up a new web service so we will use our public web service template this",
    "start": "722760",
    "end": "729570"
  },
  {
    "text": "one will will attach a public load balancer to the easiest service create a",
    "start": "729570",
    "end": "736530"
  },
  {
    "text": "placeholder task definition as well it's just a simple web application that just",
    "start": "736530",
    "end": "743040"
  },
  {
    "text": "returns 200 okay's we'll set up the elby's and the security groups",
    "start": "743040",
    "end": "748560"
  },
  {
    "text": "appropriately add in route 53 for DNS service discovery and that's all done",
    "start": "748560",
    "end": "754290"
  },
  {
    "text": "just by declaring these lines so a new team or a new person joining us can just",
    "start": "754290",
    "end": "760740"
  },
  {
    "text": "copy and paste something like this change the name of the application and they inherit all of our best practices",
    "start": "760740",
    "end": "768320"
  },
  {
    "start": "768000",
    "end": "768000"
  },
  {
    "text": "additional features that we do are really to just enhance the production",
    "start": "768500",
    "end": "775320"
  },
  {
    "text": "and runtime our and servers ability of the service for instance you can tag off",
    "start": "775320",
    "end": "781860"
  },
  {
    "text": "of daily dog alerts or ping off the slack channels you can include links to",
    "start": "781860",
    "end": "789030"
  },
  {
    "text": "your playbooks or feature flags and just attach ownership information so when one",
    "start": "789030",
    "end": "796320"
  },
  {
    "text": "of your many hundreds of services has a problem you know immediately who to go",
    "start": "796320",
    "end": "801720"
  },
  {
    "text": "to we also expose this through hopper and you'll see that later in in the UI one",
    "start": "801720",
    "end": "808950"
  },
  {
    "text": "thing I should also note here is that declaring applications in terraform",
    "start": "808950",
    "end": "814820"
  },
  {
    "text": "changes nothing immediately in the production system our defaults are to",
    "start": "814820",
    "end": "820830"
  },
  {
    "text": "scale the service to zero we don't enable auto scaling we don't enable auto deploy so just creating the terraform",
    "start": "820830",
    "end": "829200"
  },
  {
    "text": "itself is an OA terraform doesn't track versions of code",
    "start": "829200",
    "end": "835630"
  },
  {
    "text": "either for that we use hopper hopper is",
    "start": "835630",
    "end": "840880"
  },
  {
    "text": "our release management system it manages the really high frequency changes the",
    "start": "840880",
    "end": "846010"
  },
  {
    "text": "stuff that you don't need to write a PR for every single day it's a central place to make changes you can do it",
    "start": "846010",
    "end": "853089"
  },
  {
    "text": "quickly and safely hopper itself can be thought of as a templating system for",
    "start": "853089",
    "end": "860020"
  },
  {
    "text": "ECS tasks definitions you write a quick template saying I want this docker image",
    "start": "860020",
    "end": "865930"
  },
  {
    "text": "to run this command and listen on this port and then hopper will flesh out the",
    "start": "865930",
    "end": "872110"
  },
  {
    "text": "more.the the cluster specific information the the region it's in it",
    "start": "872110",
    "end": "878529"
  },
  {
    "text": "will update the current ECS deployment do the rolling release you can mix in",
    "start": "878529",
    "end": "884830"
  },
  {
    "text": "with configuration from environment variables and just get a synchronized rollout all of your application across",
    "start": "884830",
    "end": "892570"
  },
  {
    "text": "all of those services and synchronize the automatic rollback if anything goes",
    "start": "892570",
    "end": "899140"
  },
  {
    "text": "wrong you fail a health check or you forgot to actually listen on the correct port for the for the really generic",
    "start": "899140",
    "end": "905560"
  },
  {
    "text": "kinds of problems that you can find if you can write a health check for it you",
    "start": "905560",
    "end": "911230"
  },
  {
    "text": "can make it's safe to deploy that application even if you do make mistakes and your CI pipelines",
    "start": "911230",
    "end": "919290"
  },
  {
    "text": "sorry for the SPR I'm terrible at diagramming but you get the idea you",
    "start": "919500",
    "end": "925540"
  },
  {
    "text": "write a pull request it goes through your CI your build system and ends up as a docker image somewhere you mix that in",
    "start": "925540",
    "end": "932380"
  },
  {
    "text": "with some configuration environment variables feature flags pass it off the",
    "start": "932380",
    "end": "937450"
  },
  {
    "text": "hopper hopper hands it over to ECS and then doctor takes over we have a little",
    "start": "937450",
    "end": "945040"
  },
  {
    "text": "custom a little go binary that we use as the entry point I call top araña",
    "start": "945040",
    "end": "950890"
  },
  {
    "text": "and this is where we linchpin all of our semantics our conventions it gives all",
    "start": "950890",
    "end": "958300"
  },
  {
    "text": "of our application all of our application developers a consistent environment and a consistent way to",
    "start": "958300",
    "end": "963730"
  },
  {
    "text": "interact with the platform for us it's one of the ways that we can defeat lock",
    "start": "963730",
    "end": "969670"
  },
  {
    "text": "into a specific system if we wanted to change to eks later on as long as we",
    "start": "969670",
    "end": "977410"
  },
  {
    "text": "maintain the the aspects that the hopper runner gives us inside the container we",
    "start": "977410",
    "end": "982510"
  },
  {
    "text": "can change out the implementation of the platform without making any application changes at all and this is what hopper",
    "start": "982510",
    "end": "989860"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "looks like it's an audited log of recently recent releases they'll show",
    "start": "989860",
    "end": "996910"
  },
  {
    "text": "you what's currently in production you get quick links to logs service metrics",
    "start": "996910",
    "end": "1003779"
  },
  {
    "text": "we've got buttons for rollback in case the automatic stuff didn't work or",
    "start": "1003779",
    "end": "1008940"
  },
  {
    "text": "retries if it's just a transient issue that blocks you we've got links to all",
    "start": "1008940",
    "end": "1014310"
  },
  {
    "text": "of the ownership information that you programmed in terraform slack alerts",
    "start": "1014310",
    "end": "1019380"
  },
  {
    "text": "playbooks documentation even the code repositories what's really nice about",
    "start": "1019380",
    "end": "1026250"
  },
  {
    "text": "this system is that it can detect the common problems that you have when you're making a release this is part of",
    "start": "1026250",
    "end": "1032400"
  },
  {
    "text": "a safety aspect it gives you helpful suggestions to remedy the issue you can",
    "start": "1032400",
    "end": "1037770"
  },
  {
    "text": "toggle or to deploy off fix the issue in another PR while hopper has rolled back",
    "start": "1037770",
    "end": "1044490"
  },
  {
    "text": "to the known-good version and then when you're ready roll out the new fixes",
    "start": "1044490",
    "end": "1052270"
  },
  {
    "text": "and fixed master branches again all of our releases are versioned since your",
    "start": "1052270",
    "end": "1058750"
  },
  {
    "text": "code is versioned and therefore all of your doctor images have versions as well we also version the environment which is",
    "start": "1058750",
    "end": "1064690"
  },
  {
    "text": "very useful for rollbacks it means that you can have a very safe way of determining what is safe to be",
    "start": "1064690",
    "end": "1072520"
  },
  {
    "text": "released what what where are the bad configurations and where are the good ones and always make sure that the the",
    "start": "1072520",
    "end": "1078250"
  },
  {
    "text": "live service itself is is in a healthy state we have a services tab in here",
    "start": "1078250",
    "end": "1086740"
  },
  {
    "text": "where you can track the individual breakdown of the application so the different workloads for the same code",
    "start": "1086740",
    "end": "1092590"
  },
  {
    "text": "base services can include web services it doesn't it doesn't have to be a",
    "start": "1092590",
    "end": "1098919"
  },
  {
    "text": "single web service for some of our larger applications we actually deploy multiple web services for them you can",
    "start": "1098919",
    "end": "1105429"
  },
  {
    "text": "then scale those web processes independently of each other you can then",
    "start": "1105429",
    "end": "1110460"
  },
  {
    "text": "isolate them to their database connections in other ways",
    "start": "1110460",
    "end": "1116290"
  },
  {
    "text": "background workers if you're reading off the queue or it could be a metrics base",
    "start": "1116290",
    "end": "1123010"
  },
  {
    "text": "gatherer that then submits something to a cloud watch for auto scaling you can",
    "start": "1123010",
    "end": "1129040"
  },
  {
    "text": "set auto deployments or normal scaling here we also now support auto scaling",
    "start": "1129040",
    "end": "1136990"
  },
  {
    "text": "and a recent predictive autoscaler from for ec2 if it ever comes to ECS would",
    "start": "1136990",
    "end": "1144340"
  },
  {
    "text": "also be very interesting for us imagine if you could just click a button and everything that will be scaled",
    "start": "1144340",
    "end": "1151000"
  },
  {
    "text": "appropriately it's it's the drink from the service dashboards we link out to",
    "start": "1151000",
    "end": "1159000"
  },
  {
    "text": "metrics where we can track ECS lifecycle of the containers whilst you roll out",
    "start": "1159000",
    "end": "1166290"
  },
  {
    "text": "you can see simple generic metrics like the docker CPU or the RAM usage if",
    "start": "1166290",
    "end": "1173350"
  },
  {
    "text": "there's if it's a web service we'll get automatic alb health rates and",
    "start": "1173350",
    "end": "1179260"
  },
  {
    "text": "errors another trick that we also add to the service metrics to just stick a number in about the AWS",
    "start": "1179260",
    "end": "1186160"
  },
  {
    "text": "costs that an individual service will be using it lets teams you know stay honest",
    "start": "1186160",
    "end": "1191470"
  },
  {
    "text": "they're not just scale themselves way too far hopper is also where you go to make",
    "start": "1191470",
    "end": "1198520"
  },
  {
    "text": "application changes you can make environment variable changes directly",
    "start": "1198520",
    "end": "1203710"
  },
  {
    "text": "from the hopper UI we also have a terraform provider so you can create",
    "start": "1203710",
    "end": "1209230"
  },
  {
    "text": "environment variables for your applications but based off of other resources for instance RDS databases we",
    "start": "1209230",
    "end": "1216850"
  },
  {
    "text": "can generate a password for RDS inject it into the application and humans never",
    "start": "1216850",
    "end": "1222610"
  },
  {
    "text": "need to know what the password is it goes straight into the application we support will star out the the actual",
    "start": "1222610",
    "end": "1231159"
  },
  {
    "text": "credentials and UI just so that you don't accidentally expose them to humans",
    "start": "1231159",
    "end": "1238559"
  },
  {
    "text": "hopper for us is also the place for one-off specific commands we can do this",
    "start": "1239669",
    "end": "1248289"
  },
  {
    "text": "for database migrations data backfilling simple debugging what's really cool",
    "start": "1248289",
    "end": "1255100"
  },
  {
    "text": "about this is because hopper already knows the configuration and all the secrets for running the app normally you",
    "start": "1255100",
    "end": "1262120"
  },
  {
    "text": "can mix it in with extra I am task roles and just run your database commands",
    "start": "1262120",
    "end": "1269950"
  },
  {
    "text": "without having to you know pull out the secrets or or interacting with any other",
    "start": "1269950",
    "end": "1275919"
  },
  {
    "text": "secret stores that the application needs to in its lifetime we also support like",
    "start": "1275919",
    "end": "1282240"
  },
  {
    "text": "lifecycle hooks which are little commands that can be run at certain stages of the application life cycle",
    "start": "1282240",
    "end": "1288159"
  },
  {
    "text": "itself for instance the slack notifications to say that a deploy has",
    "start": "1288159",
    "end": "1293169"
  },
  {
    "text": "six successfully gone on or did the release complete maybe it went into",
    "start": "1293169",
    "end": "1298630"
  },
  {
    "text": "rollback and you need to notify your developers that hey by the way you're not on the latest version you've rolled",
    "start": "1298630",
    "end": "1304900"
  },
  {
    "text": "back to a safe one you might want to write some more code and fix the issues",
    "start": "1304900",
    "end": "1310740"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "we as an engineering organization like to solve problems using conventions",
    "start": "1312760",
    "end": "1319789"
  },
  {
    "text": "that's one of the only ways to scale out all of our applications interact with",
    "start": "1319789",
    "end": "1325940"
  },
  {
    "text": "the platform in the same way this means that people can also be portable between",
    "start": "1325940",
    "end": "1332360"
  },
  {
    "text": "teams as well which is a really useful feature of an engineering organization",
    "start": "1332360",
    "end": "1338390"
  },
  {
    "text": "where you might need to quickly redeploy resources infrastructure itself can add",
    "start": "1338390",
    "end": "1347440"
  },
  {
    "text": "seatbelts or safety nets when you're creating new services you'll always have",
    "start": "1347440",
    "end": "1353990"
  },
  {
    "text": "new people in your in your team's not everyone will have the full domain",
    "start": "1353990",
    "end": "1359900"
  },
  {
    "text": "knowledge so if we can make as much of the platform safe to use as possible",
    "start": "1359900",
    "end": "1365679"
  },
  {
    "text": "that's really where we want to go to solve generic problems that everyone",
    "start": "1365679",
    "end": "1371330"
  },
  {
    "text": "will have such as logging such as metrics such as service discovery of",
    "start": "1371330",
    "end": "1380330"
  },
  {
    "text": "course that also means that if we're using conventions any discrepancies we",
    "start": "1380330",
    "end": "1385429"
  },
  {
    "text": "can immediately highlight them track the anomalous behavior and fix those on an",
    "start": "1385429",
    "end": "1392780"
  },
  {
    "text": "individual basis on the application side",
    "start": "1392780",
    "end": "1397809"
  },
  {
    "start": "1395000",
    "end": "1395000"
  },
  {
    "text": "we also encourage a consistent way to write your applications we don't declare",
    "start": "1397809",
    "end": "1404140"
  },
  {
    "text": "specific frameworks that people have to use that is a complete choice up to that",
    "start": "1404140",
    "end": "1411260"
  },
  {
    "text": "individual team and they have the full context and awareness over how to build",
    "start": "1411260",
    "end": "1416419"
  },
  {
    "text": "their own applications how to solve their own problems that said we do use",
    "start": "1416419",
    "end": "1423550"
  },
  {
    "text": "conventional configuration files that most people can onboard on to eataly",
    "start": "1423550",
    "end": "1429820"
  },
  {
    "text": "circle CI configs for building hopper config is a template that we use for",
    "start": "1429820",
    "end": "1435220"
  },
  {
    "text": "running Florence is our feature flagging system and again they're just all of",
    "start": "1435220",
    "end": "1440440"
  },
  {
    "text": "your feature flags can just be kept with the repository that includes the codebase we can then draw them all in",
    "start": "1440440",
    "end": "1446290"
  },
  {
    "text": "centrally and then give everyone a you know a central UI for making those live",
    "start": "1446290",
    "end": "1451780"
  },
  {
    "text": "configuration changes to a production system another convention that we have along with readme x' is playbooks as",
    "start": "1451780",
    "end": "1459640"
  },
  {
    "text": "well so do you know what to do when that pager goes off in the pager alert itself",
    "start": "1459640",
    "end": "1467440"
  },
  {
    "text": "it will link you over to our documentation website and then from there we can gather all of the playbooks",
    "start": "1467440",
    "end": "1473920"
  },
  {
    "text": "for all of our other services index them and search them centrally on a internal",
    "start": "1473920",
    "end": "1480970"
  },
  {
    "text": "documentation website super useful and",
    "start": "1480970",
    "end": "1486870"
  },
  {
    "start": "1485000",
    "end": "1485000"
  },
  {
    "text": "what is our documentation we just went down the route of having an entire git",
    "start": "1486870",
    "end": "1492790"
  },
  {
    "text": "repository just full of markdown we render it with git book it's searchable",
    "start": "1492790",
    "end": "1498520"
  },
  {
    "text": "it's got play books in there so you can actually you don't have to have all of",
    "start": "1498520",
    "end": "1504550"
  },
  {
    "text": "your documentation in a single location to to write it but it is rendered in a",
    "start": "1504550",
    "end": "1510550"
  },
  {
    "text": "central place that everyone can find from here you can link off to your",
    "start": "1510550",
    "end": "1515920"
  },
  {
    "text": "dashboards your metrics we can even link you off to hopper hopper itself where",
    "start": "1515920",
    "end": "1522310"
  },
  {
    "text": "you can then take further actions like scaling a service art for just turning off if it's being problematic",
    "start": "1522310",
    "end": "1529470"
  },
  {
    "text": "so that's compute and running applications other resources as well so",
    "start": "1530040",
    "end": "1536610"
  },
  {
    "text": "we have a curated set of templates for",
    "start": "1536610",
    "end": "1541710"
  },
  {
    "text": "databases caches and queues lambda here",
    "start": "1541710",
    "end": "1546940"
  },
  {
    "text": "is crossed out we used to have a set templates for lambdas",
    "start": "1546940",
    "end": "1552600"
  },
  {
    "text": "but we've now realized that lambdas can also they did just another deployment",
    "start": "1552600",
    "end": "1558360"
  },
  {
    "text": "artifact instead of using docker containers you can you can build zip files instead give those two hopper and",
    "start": "1558360",
    "end": "1564900"
  },
  {
    "text": "then lambdas will get automatic roll backs or audited release processes and",
    "start": "1564900",
    "end": "1573260"
  },
  {
    "text": "configurations through hopper itself we maintain terraform templates for Amazon",
    "start": "1573260",
    "end": "1581970"
  },
  {
    "text": "services but we also maintain a series of terraform providers for third-party",
    "start": "1581970",
    "end": "1587970"
  },
  {
    "text": "services as well Kafka is a very good example of this but we've taken the the third-party provider",
    "start": "1587970",
    "end": "1595470"
  },
  {
    "text": "from confluent and we've even submitted back our patches to some bugs that we",
    "start": "1595470",
    "end": "1603210"
  },
  {
    "text": "found when using that so using that CD ends CloudFlare fastly or ns3 they will",
    "start": "1603210",
    "end": "1613620"
  },
  {
    "text": "have you can all terraform those up the same way for instance services that are",
    "start": "1613620",
    "end": "1620700"
  },
  {
    "text": "just static assets where they you don't need a dynamic back-end you don't need a",
    "start": "1620700",
    "end": "1627690"
  },
  {
    "text": "service through hopper you just spin them up that way so here's our databases",
    "start": "1627690",
    "end": "1633140"
  },
  {
    "start": "1631000",
    "end": "1631000"
  },
  {
    "text": "here we go I want a database a little bit more complex than our applications",
    "start": "1633140",
    "end": "1638960"
  },
  {
    "text": "but it's the same idea a curated templates with all of our best practices",
    "start": "1638960",
    "end": "1645000"
  },
  {
    "text": "in it pass in our subnets or security groups those go into the constants",
    "start": "1645000",
    "end": "1651720"
  },
  {
    "text": "they're the same for everyone but they're specific to the deployment so",
    "start": "1651720",
    "end": "1657450"
  },
  {
    "text": "they'll change between production and staging but they're constant for all the applications or all of our databases we",
    "start": "1657450",
    "end": "1665880"
  },
  {
    "text": "can add in references back to the applications that own the database",
    "start": "1665880",
    "end": "1671539"
  },
  {
    "text": "and we can even link the passwords the",
    "start": "1671539",
    "end": "1677869"
  },
  {
    "text": "sequence that then application needs to use the database directly from terraform",
    "start": "1677869",
    "end": "1684139"
  },
  {
    "text": "and we can do that with our own custom",
    "start": "1684139",
    "end": "1689179"
  },
  {
    "text": "provider to our to our hopper itself in",
    "start": "1689179",
    "end": "1695809"
  },
  {
    "text": "hopper because we can make that relationship between an applications",
    "start": "1695809",
    "end": "1700820"
  },
  {
    "text": "resources such as its database and its compute you can just link straight off",
    "start": "1700820",
    "end": "1706249"
  },
  {
    "text": "into the service dashboards for the database as well or the Redis queues or",
    "start": "1706249",
    "end": "1712879"
  },
  {
    "text": "any of the other related resources that an application can use in an on call",
    "start": "1712879",
    "end": "1718700"
  },
  {
    "text": "situation you don't want to be digging around big lists of dashboards or trying to hunt down the link you can just find",
    "start": "1718700",
    "end": "1725539"
  },
  {
    "text": "it straight from the application that's having the problem another good use of",
    "start": "1725539",
    "end": "1732940"
  },
  {
    "text": "templating modules is the ability to just stamp out common good practices for",
    "start": "1732940",
    "end": "1740330"
  },
  {
    "text": "everyone for instance with dynamodb you can create new tables easily enough",
    "start": "1740330",
    "end": "1746599"
  },
  {
    "text": "we don't even template the equation of dynamodb tables itself the provider is",
    "start": "1746599",
    "end": "1753220"
  },
  {
    "text": "usually good enough for all about what we do template however is our water scaling strategy we developed just a",
    "start": "1753220",
    "end": "1760999"
  },
  {
    "text": "good way to just give a very simple conservative auto scaling strategy so",
    "start": "1760999",
    "end": "1766879"
  },
  {
    "text": "that most dynamodb tables will have enough provisioned throughput for them",
    "start": "1766879",
    "end": "1773019"
  },
  {
    "text": "set a minimum set of target utilization and that's where the algorithm needs to",
    "start": "1773019",
    "end": "1778220"
  },
  {
    "text": "know the implementation details are inside the module I don't need to expose that to everyone we've just stamped out across how many",
    "start": "1778220",
    "end": "1785239"
  },
  {
    "text": "tables we use finally I want to talk about actually",
    "start": "1785239",
    "end": "1791580"
  },
  {
    "start": "1788000",
    "end": "1788000"
  },
  {
    "text": "going to production standardization is the key here we standardize everything",
    "start": "1791580",
    "end": "1798620"
  },
  {
    "text": "as much as we can including service readiness",
    "start": "1798620",
    "end": "1804179"
  },
  {
    "text": "do you have known failures are they in the play books do you have monitoring in place are",
    "start": "1804179",
    "end": "1809940"
  },
  {
    "text": "there links to all of your dashboards all of your actions that you could take",
    "start": "1809940",
    "end": "1815669"
  },
  {
    "text": "in a normal situation we'd like for them to be able to be done through hopper it's a central place that you can go to",
    "start": "1815669",
    "end": "1822080"
  },
  {
    "text": "immediately and fix a problem in production with ownership information in",
    "start": "1822080",
    "end": "1830250"
  },
  {
    "text": "hopper as well we can also ensure that the correct team to make a call is there",
    "start": "1830250",
    "end": "1836340"
  },
  {
    "text": "and that you know how to contact them most of all it's important to remember",
    "start": "1836340",
    "end": "1843090"
  },
  {
    "text": "that hopper and all of the tooling it's just a helper it doesn't it doesn't mean",
    "start": "1843090",
    "end": "1849929"
  },
  {
    "text": "that you don't have to talk to each other tooling is there it helps but",
    "start": "1849929",
    "end": "1857100"
  },
  {
    "text": "communication and keeping yourself fully aware of the context that your",
    "start": "1857100",
    "end": "1863760"
  },
  {
    "text": "application and it's and the way that it contributes to the overall ecosystem of",
    "start": "1863760",
    "end": "1869190"
  },
  {
    "text": "the service that's that's key and that's how you scale out so thank you I'm Ben",
    "start": "1869190",
    "end": "1876980"
  },
  {
    "text": "we also have an engineering blog if you want to learn more about how we build",
    "start": "1876980",
    "end": "1883980"
  },
  {
    "text": "software and on the software that we build and so I want to know first of all",
    "start": "1883980",
    "end": "1890279"
  },
  {
    "text": "round of applause for Ben thank you for give us an insight I want to know who asked the first question on this list",
    "start": "1890279",
    "end": "1896279"
  },
  {
    "text": "because that is phenomenal nobody alright first question how do you",
    "start": "1896279",
    "end": "1901830"
  },
  {
    "text": "guys just not eat all day having access to all these great restaurants I mean we're a food company we test our",
    "start": "1901830",
    "end": "1909450"
  },
  {
    "text": "application very extensively we all day don't worry about it and what",
    "start": "1909450",
    "end": "1914880"
  },
  {
    "text": "are the food perks at delivery I mean where do you guys get as employees I mean this is also something I'm very interested knowing right we have a",
    "start": "1914880",
    "end": "1922920"
  },
  {
    "text": "product called delivery bus which is just free delivery on all your food so you can just order from wherever you",
    "start": "1922920",
    "end": "1930210"
  },
  {
    "text": "like you don't have to bunch up your food delivery and just get from one",
    "start": "1930210",
    "end": "1935340"
  },
  {
    "text": "place why you know you could get the drink from one restaurant and you know a burger from somewhere else we also as a",
    "start": "1935340",
    "end": "1942990"
  },
  {
    "text": "company we just love food as well I mean it's a great place to to just work and",
    "start": "1942990",
    "end": "1949290"
  },
  {
    "text": "socialize over over lunch we have regular we call them call them Hunger",
    "start": "1949290",
    "end": "1955410"
  },
  {
    "text": "Games where we'll just order a lot of food and just socialize as an entire company I've been one of the officers",
    "start": "1955410",
    "end": "1961800"
  },
  {
    "text": "during lunch hour and I just love the community feel of it everyone puts their keyboards away everywhere together the",
    "start": "1961800",
    "end": "1966960"
  },
  {
    "text": "main central area yeah our kitchen area is a significant chunk of our of our main offices it's it's just a big open",
    "start": "1966960",
    "end": "1974490"
  },
  {
    "text": "area to just learn what other people in the company are up to really and so you",
    "start": "1974490",
    "end": "1981180"
  },
  {
    "text": "have a lot of Engineers everywhere and so Ross is wondering is your team primarily based at UK distributed what",
    "start": "1981180",
    "end": "1986910"
  },
  {
    "text": "does that look like right we are a global team engineering efforts are",
    "start": "1986910",
    "end": "1992940"
  },
  {
    "text": "mostly in headquarters in London but we",
    "start": "1992940",
    "end": "1998040"
  },
  {
    "text": "support remote work just fine and there are people in my team who 100% remote",
    "start": "1998040",
    "end": "2004160"
  },
  {
    "text": "and that's that's absolutely fine there's no requirement to be in a single location what are some tips or tricks",
    "start": "2004160",
    "end": "2010700"
  },
  {
    "text": "recommendations for working with remote team members from your experience so all",
    "start": "2010700",
    "end": "2016550"
  },
  {
    "text": "of the applications that we use to run the software they're all web services no",
    "start": "2016550",
    "end": "2022970"
  },
  {
    "text": "one runs specific programs locally on their laptops you don't have to make changes from a specific geographical",
    "start": "2022970",
    "end": "2030050"
  },
  {
    "text": "location you don't need to be in the office when you're debugging an application on the cloud there's no need for it so using just",
    "start": "2030050",
    "end": "2038900"
  },
  {
    "text": "services now how do you how do you onboard a new remote engineer within deliverable all",
    "start": "2038900",
    "end": "2046890"
  },
  {
    "text": "of our material again wiki's and meetings they can all happen through Web",
    "start": "2046890",
    "end": "2053128"
  },
  {
    "text": "Services onboarding new engine is most of our engineering right now is uk-based",
    "start": "2053129",
    "end": "2059638"
  },
  {
    "text": "so it's usually just fine to get people in for the introductory weeks meet the",
    "start": "2059639",
    "end": "2066179"
  },
  {
    "text": "team and that's fine how much time does hopper save your organization each",
    "start": "2066179",
    "end": "2071460"
  },
  {
    "text": "however you want to quantify a day week month hopper means that we can just not",
    "start": "2071460",
    "end": "2077790"
  },
  {
    "text": "think about the deployment process well I have to think about it my team us to",
    "start": "2077790",
    "end": "2083220"
  },
  {
    "text": "think about it but the other hundreds of engineers they can just get on with their day design your applications",
    "start": "2083220",
    "end": "2089940"
  },
  {
    "text": "writing the code creating PRS merging them we don't have to worry until there",
    "start": "2089940",
    "end": "2096030"
  },
  {
    "text": "is a problem hopper gives us that safety net that an automatic rollback will",
    "start": "2096030",
    "end": "2101070"
  },
  {
    "text": "bring us back into a good place we don't have to we don't have to follow all of",
    "start": "2101070",
    "end": "2106800"
  },
  {
    "text": "the changes that they go out there were just so many changes going out someone will turn on a feature flag and that's completely not related to code and that",
    "start": "2106800",
    "end": "2113130"
  },
  {
    "text": "could break you but the safety net that the system will try and keep you safe",
    "start": "2113130",
    "end": "2120020"
  },
  {
    "text": "that's the the peace of mind that that you you win back I might have missed",
    "start": "2120020",
    "end": "2126090"
  },
  {
    "text": "this one piece but how do you handle like data schema changes with an app so you have to modify a table somewhere how",
    "start": "2126090",
    "end": "2132330"
  },
  {
    "text": "do you integrate that with Harper what does that deploy look like we have two ways to do that if your development",
    "start": "2132330",
    "end": "2139470"
  },
  {
    "text": "cycle has the capability and the safety nets in place you can use the life cycle",
    "start": "2139470",
    "end": "2144690"
  },
  {
    "text": "hook so the height the lifecycle hooks are super generic they're not even they're not even web hooks they are",
    "start": "2144690",
    "end": "2151730"
  },
  {
    "text": "shell scripts that get spawned off inside your application code so you can",
    "start": "2151730",
    "end": "2157440"
  },
  {
    "text": "create just scripts like in a programming",
    "start": "2157440",
    "end": "2162580"
  },
  {
    "text": "language that yeah it's fully Turing complete you can create either slack",
    "start": "2162580",
    "end": "2168940"
  },
  {
    "text": "messages but you can also just run database migrations or the checks for the database migrations automatically we",
    "start": "2168940",
    "end": "2176020"
  },
  {
    "text": "also support one-off tasks as well so if you do know the command that you want to use to run a database migration or if",
    "start": "2176020",
    "end": "2182320"
  },
  {
    "text": "you want to roll it back you can do that through hopper you just put the command",
    "start": "2182320",
    "end": "2187450"
  },
  {
    "text": "into the text box in hopper and you get all of your logs you get all of your auditing you can see what time that",
    "start": "2187450",
    "end": "2195280"
  },
  {
    "text": "happened in in case you need to do some post-mortem analysis later on it's all that and oh I'm gonna jump this third",
    "start": "2195280",
    "end": "2204040"
  },
  {
    "text": "question because my next question is an open source if yes where is the github link and if no why why show us this and",
    "start": "2204040",
    "end": "2212410"
  },
  {
    "text": "then say you can't have it Papa is not currently open source at the moment it",
    "start": "2212410",
    "end": "2218770"
  },
  {
    "text": "is just a rails app and by showing you this right now I want to just talk about",
    "start": "2218770",
    "end": "2225130"
  },
  {
    "text": "the principles that we used to design it some of the team are also here as well",
    "start": "2225130",
    "end": "2230170"
  },
  {
    "text": "and we we do want to open source some aspects of hopper we probably won't",
    "start": "2230170",
    "end": "2237340"
  },
  {
    "text": "release it as it is right now what we can probably do is over the past year",
    "start": "2237340",
    "end": "2243250"
  },
  {
    "text": "we've learned how to use the cloud more directly so a lot of the functions that",
    "start": "2243250",
    "end": "2249610"
  },
  {
    "text": "hopper does we can probably rewrite the entire thing as four or five lambdas and then we'll open source those instead",
    "start": "2249610",
    "end": "2255760"
  },
  {
    "text": "will you go back to the slide we had lambda cross now and uncross it then no",
    "start": "2255760",
    "end": "2261580"
  },
  {
    "text": "because you could then use hopper to tour lambdas hopper also runs hopper so",
    "start": "2261580",
    "end": "2268500"
  },
  {
    "text": "next question is does your team include operations or all the release management",
    "start": "2268500",
    "end": "2273610"
  },
  {
    "text": "all of our teams including my team and all of our application teams they are",
    "start": "2273610",
    "end": "2279640"
  },
  {
    "text": "all dev and they're all ops everyone is responsible for the",
    "start": "2279640",
    "end": "2284770"
  },
  {
    "text": "that they write that responsibility that ownership is really the key my team is",
    "start": "2284770",
    "end": "2291400"
  },
  {
    "text": "responsible for the clusters the load balancers we are also driving the",
    "start": "2291400",
    "end": "2298980"
  },
  {
    "text": "incident management process and our third-party vendors as well so we can't",
    "start": "2298980",
    "end": "2304390"
  },
  {
    "text": "just be pure ops or pure release management that's not the way to get skin in the game and this is beautiful",
    "start": "2304390",
    "end": "2313720"
  },
  {
    "text": "but how long did it take to write Harper okay we started this journey about",
    "start": "2313720",
    "end": "2318730"
  },
  {
    "text": "eighteen months ago we had a proof of concept within a couple of months and",
    "start": "2318730",
    "end": "2325480"
  },
  {
    "text": "then from hello world running on hopper we had our first production users this",
    "start": "2325480",
    "end": "2333370"
  },
  {
    "text": "January now we're running our entire workloads hundreds of services in hopper",
    "start": "2333370",
    "end": "2341040"
  },
  {
    "text": "right now that's a great name for a product too I love it well please run applause for",
    "start": "2341040",
    "end": "2348280"
  },
  {
    "text": "Ben thank you for giving us an insight",
    "start": "2348280",
    "end": "2351870"
  }
]