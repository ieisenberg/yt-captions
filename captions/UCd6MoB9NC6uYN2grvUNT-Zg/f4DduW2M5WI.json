[
  {
    "text": "in this demo i'm going to show you how",
    "start": "560",
    "end": "2639"
  },
  {
    "text": "you can start using gateway load",
    "start": "2639",
    "end": "4000"
  },
  {
    "text": "balancer in minutes",
    "start": "4000",
    "end": "6480"
  },
  {
    "text": "we'll do this in five steps the first",
    "start": "6480",
    "end": "9519"
  },
  {
    "text": "one being locating a partner's virtual",
    "start": "9519",
    "end": "11360"
  },
  {
    "text": "appliance in the aws marketplace",
    "start": "11360",
    "end": "13920"
  },
  {
    "text": "and deploying it into a vpc",
    "start": "13920",
    "end": "16960"
  },
  {
    "text": "wherein all of your appliances live",
    "start": "16960",
    "end": "20720"
  },
  {
    "text": "we're going to simulate a security based",
    "start": "20720",
    "end": "24080"
  },
  {
    "text": "use case so i'm going to call this",
    "start": "24080",
    "end": "25760"
  },
  {
    "text": "particular vpc the security vpc",
    "start": "25760",
    "end": "28880"
  },
  {
    "text": "will then create the gateway load",
    "start": "28880",
    "end": "30480"
  },
  {
    "text": "balancer in that security vpc",
    "start": "30480",
    "end": "32960"
  },
  {
    "text": "along with a target group and register",
    "start": "32960",
    "end": "35600"
  },
  {
    "text": "the appliance instances",
    "start": "35600",
    "end": "37280"
  },
  {
    "text": "to be targets for the gateway load",
    "start": "37280",
    "end": "38960"
  },
  {
    "text": "balancer",
    "start": "38960",
    "end": "41280"
  },
  {
    "text": "for traffic that needs to be inspected",
    "start": "41280",
    "end": "42960"
  },
  {
    "text": "from a spoke vpc where",
    "start": "42960",
    "end": "45120"
  },
  {
    "text": "a application instance is reside we will",
    "start": "45120",
    "end": "48079"
  },
  {
    "text": "create the load balancer endpoint in",
    "start": "48079",
    "end": "49680"
  },
  {
    "text": "that vpc",
    "start": "49680",
    "end": "51199"
  },
  {
    "text": "and to get traffic to be inspected we'll",
    "start": "51199",
    "end": "53360"
  },
  {
    "text": "update the route table",
    "start": "53360",
    "end": "54719"
  },
  {
    "text": "to send all traffic to the cable load",
    "start": "54719",
    "end": "56480"
  },
  {
    "text": "balance endpoint before",
    "start": "56480",
    "end": "58000"
  },
  {
    "text": "it egresses out to the internet",
    "start": "58000",
    "end": "61440"
  },
  {
    "text": "the architecture looks something like",
    "start": "61840",
    "end": "63280"
  },
  {
    "text": "this wherein you have",
    "start": "63280",
    "end": "65439"
  },
  {
    "text": "a spoke vpc in which your application",
    "start": "65439",
    "end": "67920"
  },
  {
    "text": "instances reside",
    "start": "67920",
    "end": "70080"
  },
  {
    "text": "the ec2 instances need to talk to a",
    "start": "70080",
    "end": "72080"
  },
  {
    "text": "resource out of the internet",
    "start": "72080",
    "end": "74080"
  },
  {
    "text": "but we want this traffic to be inspected",
    "start": "74080",
    "end": "76640"
  },
  {
    "text": "by a fleet of instances that sit",
    "start": "76640",
    "end": "78799"
  },
  {
    "text": "in the security vpc and",
    "start": "78799",
    "end": "82880"
  },
  {
    "text": "have that traffic inspected as it comes",
    "start": "82880",
    "end": "84960"
  },
  {
    "text": "inbound as well",
    "start": "84960",
    "end": "87680"
  },
  {
    "text": "now as the ec2 instance tries to egress",
    "start": "87680",
    "end": "91040"
  },
  {
    "text": "out to the internet",
    "start": "91040",
    "end": "92000"
  },
  {
    "text": "we route all traffic to the gateway load",
    "start": "92000",
    "end": "93680"
  },
  {
    "text": "balance endpoint",
    "start": "93680",
    "end": "95200"
  },
  {
    "text": "which sends traffic to the gateway load",
    "start": "95200",
    "end": "96799"
  },
  {
    "text": "balancer the application",
    "start": "96799",
    "end": "98960"
  },
  {
    "text": "or appliance instances inspect this send",
    "start": "98960",
    "end": "102159"
  },
  {
    "text": "it back to the gateway load balancer",
    "start": "102159",
    "end": "104000"
  },
  {
    "text": "out to the internet gateway and follows",
    "start": "104000",
    "end": "106320"
  },
  {
    "text": "a similar path back",
    "start": "106320",
    "end": "107840"
  },
  {
    "text": "where ingress routing enables traffic",
    "start": "107840",
    "end": "110640"
  },
  {
    "text": "hit the gable or balance endpoint",
    "start": "110640",
    "end": "112720"
  },
  {
    "text": "before it makes its way back to the",
    "start": "112720",
    "end": "114880"
  },
  {
    "text": "application instance",
    "start": "114880",
    "end": "118078"
  },
  {
    "text": "now let's start figuring out how to",
    "start": "119439",
    "end": "121119"
  },
  {
    "text": "deploy this and we'll consolidate the",
    "start": "121119",
    "end": "122960"
  },
  {
    "text": "first two steps",
    "start": "122960",
    "end": "124000"
  },
  {
    "text": "to locate the partners virtual appliance",
    "start": "124000",
    "end": "126399"
  },
  {
    "text": "in the aws marketplace",
    "start": "126399",
    "end": "128319"
  },
  {
    "text": "as well as launch it into that security",
    "start": "128319",
    "end": "130160"
  },
  {
    "text": "vpc",
    "start": "130160",
    "end": "131760"
  },
  {
    "text": "so let's head to the aws console and",
    "start": "131760",
    "end": "135200"
  },
  {
    "text": "launch the instance that will act as our",
    "start": "135200",
    "end": "138400"
  },
  {
    "text": "appliance",
    "start": "138400",
    "end": "139840"
  },
  {
    "text": "so in this case i'm going to choose a",
    "start": "139840",
    "end": "142400"
  },
  {
    "text": "c5n",
    "start": "142400",
    "end": "143120"
  },
  {
    "text": "instance deployed in",
    "start": "143120",
    "end": "147120"
  },
  {
    "text": "to the security vpc this can be in",
    "start": "147120",
    "end": "151120"
  },
  {
    "text": "a private subnet but if you choose to",
    "start": "151120",
    "end": "154239"
  },
  {
    "text": "have a secondary eni",
    "start": "154239",
    "end": "156160"
  },
  {
    "text": "or you want to enable magic management",
    "start": "156160",
    "end": "158400"
  },
  {
    "text": "through",
    "start": "158400",
    "end": "159200"
  },
  {
    "text": "a public interface you can choose to",
    "start": "159200",
    "end": "161200"
  },
  {
    "text": "assign a public ip to it as well",
    "start": "161200",
    "end": "164879"
  },
  {
    "text": "i'll now name this particular instance",
    "start": "166080",
    "end": "168319"
  },
  {
    "text": "so i can easily identify it",
    "start": "168319",
    "end": "172000"
  },
  {
    "text": "and create a security group that has",
    "start": "179920",
    "end": "183440"
  },
  {
    "text": "rules to allow traffic for http which is",
    "start": "183440",
    "end": "187200"
  },
  {
    "text": "tcp",
    "start": "187200",
    "end": "187840"
  },
  {
    "text": "port 80 this enables health checks to",
    "start": "187840",
    "end": "190720"
  },
  {
    "text": "come in from the gateway load balancer",
    "start": "190720",
    "end": "193280"
  },
  {
    "text": "we allow traffic over udp port 6081",
    "start": "193280",
    "end": "196720"
  },
  {
    "text": "this is encapsulated traffic we will",
    "start": "196720",
    "end": "198480"
  },
  {
    "text": "receive from the gateway load balancer",
    "start": "198480",
    "end": "200400"
  },
  {
    "text": "that's the actual data plane traffic and",
    "start": "200400",
    "end": "203200"
  },
  {
    "text": "i've allowed ssh port 22",
    "start": "203200",
    "end": "204959"
  },
  {
    "text": "in case i want to go ahead and configure",
    "start": "204959",
    "end": "207040"
  },
  {
    "text": "this amazon linux instance",
    "start": "207040",
    "end": "213840"
  },
  {
    "text": "great so now i have an appliance running",
    "start": "218879",
    "end": "221280"
  },
  {
    "text": "that's going to simulate",
    "start": "221280",
    "end": "222879"
  },
  {
    "text": "or act as the appliance behind the",
    "start": "222879",
    "end": "225040"
  },
  {
    "text": "gateway load balancer",
    "start": "225040",
    "end": "227840"
  },
  {
    "text": "our next step is to go create the",
    "start": "228000",
    "end": "230000"
  },
  {
    "text": "gateway load balancer",
    "start": "230000",
    "end": "231440"
  },
  {
    "text": "the target group and associate it to the",
    "start": "231440",
    "end": "234319"
  },
  {
    "text": "appliance instances that we just",
    "start": "234319",
    "end": "236080"
  },
  {
    "text": "deployed",
    "start": "236080",
    "end": "237599"
  },
  {
    "text": "so going back to the aws console",
    "start": "237599",
    "end": "240799"
  },
  {
    "text": "i can go to ec2 click on load balancers",
    "start": "240799",
    "end": "245120"
  },
  {
    "text": "and create load balancer",
    "start": "245120",
    "end": "248560"
  },
  {
    "text": "i can then hit the new option that i",
    "start": "248640",
    "end": "251200"
  },
  {
    "text": "have in this page which is the kpa load",
    "start": "251200",
    "end": "253040"
  },
  {
    "text": "balancer",
    "start": "253040",
    "end": "254560"
  },
  {
    "text": "and give it a name",
    "start": "254560",
    "end": "257599"
  },
  {
    "text": "the giveaway load balancer will live in",
    "start": "265040",
    "end": "267280"
  },
  {
    "text": "the same vpc that",
    "start": "267280",
    "end": "270000"
  },
  {
    "text": "the appliances that we deployed are in",
    "start": "270000",
    "end": "272400"
  },
  {
    "text": "which is the security vpc",
    "start": "272400",
    "end": "275120"
  },
  {
    "text": "i'll choose to deploy it across two",
    "start": "275120",
    "end": "276639"
  },
  {
    "text": "availability zones and thereby two",
    "start": "276639",
    "end": "278400"
  },
  {
    "text": "subnets",
    "start": "278400",
    "end": "280960"
  },
  {
    "text": "and then create the target group that",
    "start": "280960",
    "end": "283840"
  },
  {
    "text": "i'll use to associate my appliances",
    "start": "283840",
    "end": "286400"
  },
  {
    "text": "to the gable load balancer i'll give",
    "start": "286400",
    "end": "289199"
  },
  {
    "text": "this",
    "start": "289199",
    "end": "289680"
  },
  {
    "text": "a new name",
    "start": "289680",
    "end": "296639"
  },
  {
    "text": "the health checks will be over tcp port",
    "start": "296639",
    "end": "298560"
  },
  {
    "text": "80",
    "start": "298560",
    "end": "300400"
  },
  {
    "text": "and i now have the two",
    "start": "300400",
    "end": "303440"
  },
  {
    "text": "instances that i can associate as",
    "start": "303440",
    "end": "305919"
  },
  {
    "text": "appliances behind",
    "start": "305919",
    "end": "307039"
  },
  {
    "text": "the cable load balancer let's look at",
    "start": "307039",
    "end": "310240"
  },
  {
    "text": "our final configuration for the load",
    "start": "310240",
    "end": "311759"
  },
  {
    "text": "balancer itself so we have",
    "start": "311759",
    "end": "313759"
  },
  {
    "text": "a kva load balancer that's going to be",
    "start": "313759",
    "end": "315440"
  },
  {
    "text": "in the security vpc",
    "start": "315440",
    "end": "317199"
  },
  {
    "text": "deployed across two subnets doing health",
    "start": "317199",
    "end": "320240"
  },
  {
    "text": "checks over port 80",
    "start": "320240",
    "end": "321759"
  },
  {
    "text": "and we have the two instances that are",
    "start": "321759",
    "end": "323919"
  },
  {
    "text": "security appliances",
    "start": "323919",
    "end": "325440"
  },
  {
    "text": "that are registered as targets to it",
    "start": "325440",
    "end": "329199"
  },
  {
    "text": "you now created a gave a load balancer",
    "start": "330400",
    "end": "332960"
  },
  {
    "text": "along with the target groups",
    "start": "332960",
    "end": "334560"
  },
  {
    "text": "and you associated it to the appliances",
    "start": "334560",
    "end": "338240"
  },
  {
    "text": "as the targets",
    "start": "338240",
    "end": "341039"
  },
  {
    "text": "now that you created your gateway load",
    "start": "344960",
    "end": "346639"
  },
  {
    "text": "balancer your target group and",
    "start": "346639",
    "end": "348479"
  },
  {
    "text": "registered your appliances as targets",
    "start": "348479",
    "end": "350400"
  },
  {
    "text": "for this",
    "start": "350400",
    "end": "351039"
  },
  {
    "text": "gateway load balancer let's now go",
    "start": "351039",
    "end": "354000"
  },
  {
    "text": "create the gateway load balance endpoint",
    "start": "354000",
    "end": "356000"
  },
  {
    "text": "in the vpc in which the traffic needs to",
    "start": "356000",
    "end": "359280"
  },
  {
    "text": "be inspected as it egresses out to the",
    "start": "359280",
    "end": "361360"
  },
  {
    "text": "internet",
    "start": "361360",
    "end": "363759"
  },
  {
    "text": "let's head back to the aws console",
    "start": "363759",
    "end": "367840"
  },
  {
    "text": "you now have uk way load balancer that's",
    "start": "368160",
    "end": "370479"
  },
  {
    "text": "available",
    "start": "370479",
    "end": "371759"
  },
  {
    "text": "and to generate the giveaway load",
    "start": "371759",
    "end": "373280"
  },
  {
    "text": "balancer endpoint",
    "start": "373280",
    "end": "374800"
  },
  {
    "text": "the first step is to create an endpoint",
    "start": "374800",
    "end": "376639"
  },
  {
    "text": "service which is very similar to what",
    "start": "376639",
    "end": "378400"
  },
  {
    "text": "you might have done",
    "start": "378400",
    "end": "379520"
  },
  {
    "text": "with sort of private link-based",
    "start": "379520",
    "end": "381039"
  },
  {
    "text": "deployments i choose the giveaway load",
    "start": "381039",
    "end": "383440"
  },
  {
    "text": "balancer",
    "start": "383440",
    "end": "385120"
  },
  {
    "text": "for the purpose of the demo i'm not",
    "start": "385120",
    "end": "386479"
  },
  {
    "text": "going to require acceptance for the",
    "start": "386479",
    "end": "387919"
  },
  {
    "text": "endpoints that i'm creating",
    "start": "387919",
    "end": "390479"
  },
  {
    "text": "hit on create service and i have",
    "start": "390479",
    "end": "394160"
  },
  {
    "text": "a service that i can use that to",
    "start": "394160",
    "end": "396240"
  },
  {
    "text": "associate my endpoints to",
    "start": "396240",
    "end": "398240"
  },
  {
    "text": "and make sure that i copy the service",
    "start": "398240",
    "end": "399919"
  },
  {
    "text": "name over",
    "start": "399919",
    "end": "401280"
  },
  {
    "text": "in order to create my endpoints go to",
    "start": "401280",
    "end": "403919"
  },
  {
    "text": "endpoints",
    "start": "403919",
    "end": "406000"
  },
  {
    "text": "and create endpoint and find the service",
    "start": "406000",
    "end": "409120"
  },
  {
    "text": "by name",
    "start": "409120",
    "end": "411599"
  },
  {
    "text": "now that i have found the giveaway load",
    "start": "414479",
    "end": "415919"
  },
  {
    "text": "balancer service endpoints",
    "start": "415919",
    "end": "418240"
  },
  {
    "text": "i will go ahead and deploy it in the",
    "start": "418240",
    "end": "420479"
  },
  {
    "text": "spoke vpc",
    "start": "420479",
    "end": "422000"
  },
  {
    "text": "that i want traffic to be inspected in",
    "start": "422000",
    "end": "425919"
  },
  {
    "text": "i'll deploy it in the public subnet so",
    "start": "425919",
    "end": "428080"
  },
  {
    "text": "that when traffic",
    "start": "428080",
    "end": "429360"
  },
  {
    "text": "comes back to the giveaway load balance",
    "start": "429360",
    "end": "430880"
  },
  {
    "text": "endpoint it can go out the internet",
    "start": "430880",
    "end": "434400"
  },
  {
    "text": "gateway",
    "start": "434840",
    "end": "437840"
  },
  {
    "text": "you now have the giveaway advanced",
    "start": "440319",
    "end": "442000"
  },
  {
    "text": "endpoint available to be used",
    "start": "442000",
    "end": "444240"
  },
  {
    "text": "in the spoke vpc",
    "start": "444240",
    "end": "447360"
  },
  {
    "text": "now that you have the giveaway",
    "start": "448639",
    "end": "449759"
  },
  {
    "text": "loadband's endpoint ready",
    "start": "449759",
    "end": "452160"
  },
  {
    "text": "let's make the final change which is to",
    "start": "452160",
    "end": "454479"
  },
  {
    "text": "update the route table",
    "start": "454479",
    "end": "455919"
  },
  {
    "text": "to send traffic to this newly created",
    "start": "455919",
    "end": "457759"
  },
  {
    "text": "gabriel loadband's endpoint",
    "start": "457759",
    "end": "459599"
  },
  {
    "text": "in the spoke vpc let's head back to the",
    "start": "459599",
    "end": "462960"
  },
  {
    "text": "aws console",
    "start": "462960",
    "end": "465199"
  },
  {
    "text": "i have three route tables in the spoke",
    "start": "465199",
    "end": "466800"
  },
  {
    "text": "vbc the private subnet route table which",
    "start": "466800",
    "end": "469759"
  },
  {
    "text": "is associated to the application",
    "start": "469759",
    "end": "471280"
  },
  {
    "text": "instances",
    "start": "471280",
    "end": "472879"
  },
  {
    "text": "the public subnet route table which i",
    "start": "472879",
    "end": "474479"
  },
  {
    "text": "use to route traffic out to the internet",
    "start": "474479",
    "end": "477759"
  },
  {
    "text": "and then the ingress route table which",
    "start": "477759",
    "end": "479840"
  },
  {
    "text": "is associated with the internet gateway",
    "start": "479840",
    "end": "481680"
  },
  {
    "text": "in the spoke vpc and i'll use this",
    "start": "481680",
    "end": "485039"
  },
  {
    "text": "to route traffic or return traffic",
    "start": "485039",
    "end": "487039"
  },
  {
    "text": "rather back",
    "start": "487039",
    "end": "488639"
  },
  {
    "text": "to the gateway load band's end point",
    "start": "488639",
    "end": "490879"
  },
  {
    "text": "before it makes its way back to the",
    "start": "490879",
    "end": "492319"
  },
  {
    "text": "application instance",
    "start": "492319",
    "end": "494000"
  },
  {
    "text": "so let's go ahead and make the first",
    "start": "494000",
    "end": "495280"
  },
  {
    "text": "change which is to default all traffic",
    "start": "495280",
    "end": "497120"
  },
  {
    "text": "to the giveaway load balancer endpoint",
    "start": "497120",
    "end": "499599"
  },
  {
    "text": "you can do this by pointing to the",
    "start": "499599",
    "end": "502160"
  },
  {
    "text": "giveaway load band's endpoint which is",
    "start": "502160",
    "end": "503840"
  },
  {
    "text": "actually a new type of target we've",
    "start": "503840",
    "end": "505919"
  },
  {
    "text": "enabled",
    "start": "505919",
    "end": "507120"
  },
  {
    "text": "on the subnet route tables so once you",
    "start": "507120",
    "end": "509759"
  },
  {
    "text": "click on giveaway load balance endpoint",
    "start": "509759",
    "end": "511440"
  },
  {
    "text": "you'll see the endpoint id which you can",
    "start": "511440",
    "end": "513680"
  },
  {
    "text": "choose from",
    "start": "513680",
    "end": "514719"
  },
  {
    "text": "hit save routes and you now have equals",
    "start": "514719",
    "end": "517680"
  },
  {
    "text": "traffic pointed",
    "start": "517680",
    "end": "518959"
  },
  {
    "text": "to the gateway load balance endpoint now",
    "start": "518959",
    "end": "521760"
  },
  {
    "text": "to ensure return traffic is inspected",
    "start": "521760",
    "end": "524399"
  },
  {
    "text": "through that fleet of security instances",
    "start": "524399",
    "end": "526480"
  },
  {
    "text": "as well",
    "start": "526480",
    "end": "527440"
  },
  {
    "text": "i'll go back to my ingress route table",
    "start": "527440",
    "end": "530480"
  },
  {
    "text": "and point the application subnet",
    "start": "530480",
    "end": "534000"
  },
  {
    "text": "to route through the giveaway load",
    "start": "534000",
    "end": "536480"
  },
  {
    "text": "balance endpoint",
    "start": "536480",
    "end": "539279"
  },
  {
    "text": "similarly i just have a drop down entry",
    "start": "539600",
    "end": "541600"
  },
  {
    "text": "for the gable load balance endpoint",
    "start": "541600",
    "end": "543360"
  },
  {
    "text": "choose the id save routes as our final",
    "start": "543360",
    "end": "548800"
  },
  {
    "text": "step",
    "start": "548800",
    "end": "549920"
  },
  {
    "text": "let's go ahead and verify",
    "start": "549920",
    "end": "553040"
  },
  {
    "text": "if i actually have traffic working",
    "start": "553040",
    "end": "556240"
  },
  {
    "text": "now as our final step let's make sure",
    "start": "556240",
    "end": "559040"
  },
  {
    "text": "that we have traffic passing from",
    "start": "559040",
    "end": "560959"
  },
  {
    "text": "the application instance out to the",
    "start": "560959",
    "end": "562640"
  },
  {
    "text": "internet and to ensure that it's passing",
    "start": "562640",
    "end": "565040"
  },
  {
    "text": "through the security appliance",
    "start": "565040",
    "end": "567839"
  },
  {
    "text": "i'm going to do this by first logging on",
    "start": "567839",
    "end": "569440"
  },
  {
    "text": "to a bastion host i have",
    "start": "569440",
    "end": "571120"
  },
  {
    "text": "in that particular ppc log on",
    "start": "571120",
    "end": "574839"
  },
  {
    "text": "to my application instance",
    "start": "574839",
    "end": "580399"
  },
  {
    "text": "now just to confirm that i go back to my",
    "start": "583360",
    "end": "585600"
  },
  {
    "text": "instances",
    "start": "585600",
    "end": "587120"
  },
  {
    "text": "this is my application instance and it",
    "start": "587120",
    "end": "589600"
  },
  {
    "text": "says 10070",
    "start": "589600",
    "end": "593199"
  },
  {
    "text": "i'm logged into the specific instance",
    "start": "593600",
    "end": "596240"
  },
  {
    "text": "and let's see if it works",
    "start": "596240",
    "end": "599760"
  },
  {
    "text": "so you'll see traffic is now flowing",
    "start": "602959",
    "end": "604560"
  },
  {
    "text": "through and",
    "start": "604560",
    "end": "606000"
  },
  {
    "text": "to double check if the applic the",
    "start": "606000",
    "end": "608640"
  },
  {
    "text": "appliance instance that sits behind the",
    "start": "608640",
    "end": "610320"
  },
  {
    "text": "security vpc or",
    "start": "610320",
    "end": "611680"
  },
  {
    "text": "this the cable load balance is receiving",
    "start": "611680",
    "end": "613600"
  },
  {
    "text": "this traffic",
    "start": "613600",
    "end": "614880"
  },
  {
    "text": "let's go to the appliance itself let's",
    "start": "614880",
    "end": "617519"
  },
  {
    "text": "log into",
    "start": "617519",
    "end": "618000"
  },
  {
    "text": "the appliance and do a tcp dump",
    "start": "618000",
    "end": "621600"
  },
  {
    "text": "on port 6081 which is where all traffic",
    "start": "621600",
    "end": "624880"
  },
  {
    "text": "is being routed to",
    "start": "624880",
    "end": "626959"
  },
  {
    "text": "from the giveaway load balancer",
    "start": "626959",
    "end": "630240"
  },
  {
    "text": "you'll see that i can actually see the",
    "start": "630959",
    "end": "633440"
  },
  {
    "text": "icmp request and reply",
    "start": "633440",
    "end": "635600"
  },
  {
    "text": "going through this particular instance",
    "start": "635600",
    "end": "638000"
  },
  {
    "text": "just to confirm it",
    "start": "638000",
    "end": "639519"
  },
  {
    "text": "the ip address is 192.168.0.75",
    "start": "639519",
    "end": "643760"
  },
  {
    "text": "and the appliance that it's going",
    "start": "643760",
    "end": "645600"
  },
  {
    "text": "through is",
    "start": "645600",
    "end": "646959"
  },
  {
    "text": "appliance one which is 190 to 168 0.7",
    "start": "646959",
    "end": "652160"
  },
  {
    "text": "so really we took a few minutes to set",
    "start": "652160",
    "end": "654320"
  },
  {
    "text": "this all up",
    "start": "654320",
    "end": "655519"
  },
  {
    "text": "and we hope that you are able to use",
    "start": "655519",
    "end": "657279"
  },
  {
    "text": "cable load balancer to scale your",
    "start": "657279",
    "end": "659200"
  },
  {
    "text": "appliance fleets as well",
    "start": "659200",
    "end": "660959"
  },
  {
    "text": "thank you for taking the time to watch",
    "start": "660959",
    "end": "662320"
  },
  {
    "text": "this demo and we'll see you soon",
    "start": "662320",
    "end": "667839"
  }
]