[
  {
    "text": "right good afternoon and thank you for coming along to a few milliseconds in",
    "start": "560",
    "end": "7080"
  },
  {
    "text": "the life of an HTTP request today every one of you expect web requests to serve",
    "start": "7080",
    "end": "13950"
  },
  {
    "text": "you instantly who want to wait for page load times anyway right if your",
    "start": "13950",
    "end": "19920"
  },
  {
    "text": "application or your website that you're accessing involved in page load time what would you do you go somewhere else",
    "start": "19920",
    "end": "28039"
  },
  {
    "text": "regardless whether you are traveling accessing the site from app or mobile connection or wherever you are in the",
    "start": "28039",
    "end": "36149"
  },
  {
    "text": "world you expect highly performant online experience and the performance of",
    "start": "36149",
    "end": "43980"
  },
  {
    "text": "your website or your application help you to convert from that anonymous user",
    "start": "43980",
    "end": "49379"
  },
  {
    "text": "to a subscriber I am really passionate about the technology that helps to move",
    "start": "49379",
    "end": "58070"
  },
  {
    "text": "packets in just a few milliseconds my name is Chung caprara I'm a Solutions",
    "start": "58070",
    "end": "64978"
  },
  {
    "text": "Architect here in London working predominantly with the customers with a",
    "start": "64979",
    "end": "70159"
  },
  {
    "text": "media telco and entertainment segment on with AWS little longer than three years",
    "start": "70159",
    "end": "76229"
  },
  {
    "text": "now but before joining AWS off as a customer forget five years I'm also part",
    "start": "76229",
    "end": "82920"
  },
  {
    "text": "of the SME group which is predominantly working with the edge services and each",
    "start": "82920",
    "end": "89340"
  },
  {
    "text": "platform portfolio I am here with a breezier photo Neto a front end ahead of",
    "start": "89340",
    "end": "97470"
  },
  {
    "text": "front end from Ryanair labs to he share their story of migrating their applications to clout front and wider",
    "start": "97470",
    "end": "104759"
  },
  {
    "text": "edge portfolio we will be available after the session outside this theater",
    "start": "104759",
    "end": "110490"
  },
  {
    "text": "room to answer any questions that you may have and also just a reminder that this is a 300 level session so I would",
    "start": "110490",
    "end": "117570"
  },
  {
    "text": "expect you to have some background in networking and got some understanding of our each portfolio already so without",
    "start": "117570",
    "end": "126390"
  },
  {
    "text": "further ado let's get started so let me start with an quick",
    "start": "126390",
    "end": "133020"
  },
  {
    "text": "overview of the massive infrastructure behind cloud from today we have around",
    "start": "133020",
    "end": "139069"
  },
  {
    "text": "169 point of presence which we call them pops worldwide and each one of these",
    "start": "139069",
    "end": "146100"
  },
  {
    "text": "cops would able to ingress hundreds of gigabits to local ISPs and tier-one",
    "start": "146100",
    "end": "151739"
  },
  {
    "text": "Korea Network majority of these pops are using AWS backbone a privately managed",
    "start": "151739",
    "end": "159300"
  },
  {
    "text": "network which is provide our customers better resiliency and quality than the",
    "start": "159300",
    "end": "165450"
  },
  {
    "text": "public Internet and today CloudFront being used by millions of cost of AWS",
    "start": "165450",
    "end": "172110"
  },
  {
    "text": "customers and to host some of the largest events across the globe I'm here",
    "start": "172110",
    "end": "179970"
  },
  {
    "text": "talking about tens and millions of requests per second and our edge",
    "start": "179970",
    "end": "186600"
  },
  {
    "text": "portfolio has been grown rapidly over the last three years last 12 months",
    "start": "186600",
    "end": "192330"
  },
  {
    "text": "itself we have added more than 40 to 50 point of presence to our platform this",
    "start": "192330",
    "end": "199260"
  },
  {
    "text": "is on top of upgrading the existing infrastructure if you are interested about our global network infrastructure",
    "start": "199260",
    "end": "205680"
  },
  {
    "text": "I would recommend going to the infrastructure of AWS which has an interactive map showing you our region's",
    "start": "205680",
    "end": "211590"
  },
  {
    "text": "availability zones point of presence and the connectivity across them and also talk to you about our future development",
    "start": "211590",
    "end": "218640"
  },
  {
    "text": "and where we are going to launch next regions so let's have a quick look at",
    "start": "218640",
    "end": "227370"
  },
  {
    "text": "the requests inside cloud front imagine that you host a website called London",
    "start": "227370",
    "end": "233340"
  },
  {
    "text": "comm and that contains images and you want to accelerate the delivery of these",
    "start": "233340",
    "end": "238859"
  },
  {
    "text": "images images and let's have a look at how our edge portfolio helps you to do",
    "start": "238859",
    "end": "246269"
  },
  {
    "text": "that so first you create a cloud front distribution which generates a unique",
    "start": "246269",
    "end": "253200"
  },
  {
    "text": "domain name ending with dot cloud front or net then you create a DNS record",
    "start": "253200",
    "end": "259430"
  },
  {
    "text": "which is pointed to your domain name that you created in our case we use route 53 and I would recommend using",
    "start": "259430",
    "end": "266039"
  },
  {
    "text": "alias record because it is a cheaper and faster way to resolve and allow us to",
    "start": "266039",
    "end": "271469"
  },
  {
    "text": "resolve a pax domain which is in our case so then when the when the user",
    "start": "271469",
    "end": "278550"
  },
  {
    "text": "resource the London comm it the domain using the DNS resolver query been",
    "start": "278550",
    "end": "285210"
  },
  {
    "text": "handled by cloud from DNS service and grab the IP address of the best server or the top that would that would able to",
    "start": "285210",
    "end": "293789"
  },
  {
    "text": "serve your request then the user established a TCP and TLS connection",
    "start": "293789",
    "end": "301460"
  },
  {
    "text": "which then makes an HTTP request and serve you the images and this is image",
    "start": "301879",
    "end": "308729"
  },
  {
    "text": "that I've taken walk into a tower bridge because I had to walk across Tower Bridge for good three years every day",
    "start": "308729",
    "end": "315300"
  },
  {
    "text": "every workday and this is Isaiah 6 four five six years ago in a in in December",
    "start": "315300",
    "end": "320909"
  },
  {
    "text": "so like myself you taking pictures and you got pictures in your web sites that you need to accelerate why not use cloud",
    "start": "320909",
    "end": "328439"
  },
  {
    "text": "from let's zoom into the first step which is the DNS resolution segment so",
    "start": "328439",
    "end": "335490"
  },
  {
    "text": "actually so part of the DNS resolution we have a big data problem to solve to",
    "start": "335490",
    "end": "340800"
  },
  {
    "text": "deal with the scale of AWS operating yet because we need to figure it out what is",
    "start": "340800",
    "end": "347219"
  },
  {
    "text": "the best server to serve user request while optimizing performance and",
    "start": "347219",
    "end": "353580"
  },
  {
    "text": "availability and for a challenge we need to do this in real time because if",
    "start": "353580",
    "end": "360210"
  },
  {
    "text": "there's the congestion or a server failure we need to route the traffic around and make it transparent to the",
    "start": "360210",
    "end": "366000"
  },
  {
    "text": "inducer to protect the customer experience for that we need to create",
    "start": "366000",
    "end": "371159"
  },
  {
    "text": "feedback loops we are doing this by ingesting information in real time from multiple",
    "start": "371159",
    "end": "377189"
  },
  {
    "text": "sources and constantly update in the routing table and presenting back to cloud front pops every time a user",
    "start": "377189",
    "end": "384449"
  },
  {
    "text": "requests TCP connection we capture and measure the round-trip time taken for",
    "start": "384449",
    "end": "391439"
  },
  {
    "text": "that three-way handshake we take this information and we processes through Croesus stream we use Kinesis consumer",
    "start": "391439",
    "end": "400139"
  },
  {
    "text": "library and we built a table of pop for latency",
    "start": "400139",
    "end": "405449"
  },
  {
    "text": "to the user Network and using another system we create a table of pop latency",
    "start": "405449",
    "end": "411840"
  },
  {
    "text": "to a resolver we measure the pop health using cloud watch matrix and we use the",
    "start": "411840",
    "end": "420060"
  },
  {
    "text": "cloud watch API to extract the information and put it into our control pain and of obviously there are other",
    "start": "420060",
    "end": "430409"
  },
  {
    "text": "things that we measure like server capacity or network utilization to dive",
    "start": "430409",
    "end": "436050"
  },
  {
    "text": "deep about how we handle this I would highly recommend you watch 2017 reinvent",
    "start": "436050",
    "end": "443009"
  },
  {
    "text": "video measuring the Internet in real time CDT 406 so now we make HTTP",
    "start": "443009",
    "end": "448949"
  },
  {
    "text": "requests to the selected pop the amazing journey of HTTP requests begins in cloud trunk let's have a look at how it looks",
    "start": "448949",
    "end": "456330"
  },
  {
    "text": "like but before teen that you may have",
    "start": "456330",
    "end": "461340"
  },
  {
    "text": "probably heard during other sessions today security is our job zero before",
    "start": "461340",
    "end": "467009"
  },
  {
    "text": "using or sending any packets to cloud front we scrub it in layer 3 and layer 4",
    "start": "467009",
    "end": "472620"
  },
  {
    "text": "and look for leaders attacks using internal technology that we built to cope with this with the scale of AWS we",
    "start": "472620",
    "end": "480300"
  },
  {
    "text": "only allow traffic that is intended for cloud front which is 480 and 443 HTTP",
    "start": "480300",
    "end": "485699"
  },
  {
    "text": "and HTTPS traffic we also use syn flood mitigation techniques and proxy all the",
    "start": "485699",
    "end": "492000"
  },
  {
    "text": "incoming connections and verify them we also look for suspicious activities",
    "start": "492000",
    "end": "498419"
  },
  {
    "text": "during traffic shaping we score traffic based on multiple dimensions and to",
    "start": "498419",
    "end": "505379"
  },
  {
    "text": "understand the with its legitimate traffic where there is a DDoS attack for example we look for abnormal soap",
    "start": "505379",
    "end": "511800"
  },
  {
    "text": "sources or cache busting and based on that we prioritize our traffic while",
    "start": "511800",
    "end": "517409"
  },
  {
    "text": "reducing the false positive we we call this built-in protection shield AWS",
    "start": "517409",
    "end": "524399"
  },
  {
    "text": "shield and if your customers who who needs access to all the leaders attacks",
    "start": "524399",
    "end": "533010"
  },
  {
    "text": "happening cross the word or need help or support from a MIDI",
    "start": "533010",
    "end": "538530"
  },
  {
    "text": "dose-response team we would encourage them to sign up for shield advance let's",
    "start": "538530",
    "end": "548430"
  },
  {
    "text": "go back to our cloud front layers now when the HTTP request lands on our pop",
    "start": "548430",
    "end": "555510"
  },
  {
    "text": "router we pass after pass in the details mitigation we will forward that into a random server in layer 1 this is the",
    "start": "555510",
    "end": "564180"
  },
  {
    "text": "user facing layer which is responsible for making that TCP and TLS session",
    "start": "564180",
    "end": "570770"
  },
  {
    "text": "session with the users and there's a small cache to deal with very high",
    "start": "570770",
    "end": "575850"
  },
  {
    "text": "popular content that which we need to get it back to the user quietly instantly if the context not in layer 1",
    "start": "575850",
    "end": "582960"
  },
  {
    "text": "cache will hash the URL we accept the encoding headers and any other values",
    "start": "582960",
    "end": "588060"
  },
  {
    "text": "that you've been forward part of your CloudFront distribution and based on that hash value we find the correct",
    "start": "588060",
    "end": "594000"
  },
  {
    "text": "server from the layer 2 and again if the contents not there in the layer 2 cache",
    "start": "594000",
    "end": "600030"
  },
  {
    "text": "we constantly hash the or deny P and based on that hash we selected from layer 3 layer 3 is responsible for",
    "start": "600030",
    "end": "607080"
  },
  {
    "text": "maintaining that persistent connection to the origin avoid new connections happening at every cache miss",
    "start": "607080",
    "end": "614870"
  },
  {
    "text": "but it also depends on the content type as you well aware your packet will be",
    "start": "618199",
    "end": "625800"
  },
  {
    "text": "routed to most relevant layer based on your content type if it's frequently if",
    "start": "625800",
    "end": "634079"
  },
  {
    "text": "the content need to be frequently served and if it's popular we keep it in layer",
    "start": "634079",
    "end": "639990"
  },
  {
    "text": "one and we directly serve it from the layer one cache if the content is not that popular l1 identifies that it",
    "start": "639990",
    "end": "647009"
  },
  {
    "text": "doesn't need to go to layer one and it's fetching from layer two and now if you",
    "start": "647009",
    "end": "652920"
  },
  {
    "text": "configured your CloudFront distribution as a proxy to forward for a dynamic content forwarding all the headers club",
    "start": "652920",
    "end": "660149"
  },
  {
    "text": "in your cloud front behavior we once keep layer two and make a faster connection to layer three and actually",
    "start": "660149",
    "end": "667529"
  },
  {
    "text": "if the dynamic contents get very popular and frequently requested we even skip",
    "start": "667529",
    "end": "672869"
  },
  {
    "text": "layer three because we know the amount of traffic will keep the connection from",
    "start": "672869",
    "end": "678149"
  },
  {
    "text": "layer one persistent to the origin so idea behind this layering mechanism is",
    "start": "678149",
    "end": "684029"
  },
  {
    "text": "to keep the open connection and reuse the open connections as much as possible",
    "start": "684029",
    "end": "689790"
  },
  {
    "text": "rather than making a new connection for every cache miss we also have a regional",
    "start": "689790",
    "end": "699299"
  },
  {
    "text": "edge caches in in our cloud current",
    "start": "699299",
    "end": "705259"
  },
  {
    "text": "global infrastructure in Europe we have regional edge caches in here in London",
    "start": "705259",
    "end": "711149"
  },
  {
    "text": "as well as in front route so instead of pop requests in dynamic content directly from the origin through layer three it",
    "start": "711149",
    "end": "718110"
  },
  {
    "text": "will fetch from the regional education this is particularly useful for content",
    "start": "718110",
    "end": "724139"
  },
  {
    "text": "that's are not that popular which we call them long tail content and we have",
    "start": "724139",
    "end": "730379"
  },
  {
    "text": "11 regional edge caches across the globe and there is no charges for using regional edge caches let's dive deeper",
    "start": "730379",
    "end": "737939"
  },
  {
    "text": "into the services provided by these layers",
    "start": "737939",
    "end": "742970"
  },
  {
    "text": "I assumed that most of you are familiar with the TCP three-way handshake so",
    "start": "743199",
    "end": "752049"
  },
  {
    "text": "first we establish a TCP connection which is important for reliable communication then we do a TLS session",
    "start": "752049",
    "end": "759669"
  },
  {
    "text": "which is important for confidentiality authentication and integrating the the",
    "start": "759669",
    "end": "766600"
  },
  {
    "text": "challenge with these protocols are the latency that they caused because TCP",
    "start": "766600",
    "end": "773470"
  },
  {
    "text": "requires one round-trip time for the for the three-way handshake and then TLS",
    "start": "773470",
    "end": "778809"
  },
  {
    "text": "requires two two round-trip for verification cyber capabilities and key",
    "start": "778809",
    "end": "783910"
  },
  {
    "text": "exchange so we already spend three round-trips in total before we make an actual HTTP",
    "start": "783910",
    "end": "790029"
  },
  {
    "text": "connection CloudFront use a protocol called TCP false open and TLS resumption to send cookies",
    "start": "790029",
    "end": "796600"
  },
  {
    "text": "and it will contain the information that we already ago she ate it with the parameters to the connection this way",
    "start": "796600",
    "end": "802839"
  },
  {
    "text": "when the next time the user comes to the same server here we send the cookies and",
    "start": "802839",
    "end": "807999"
  },
  {
    "text": "establish and establish a connection using a one round-trip time of course",
    "start": "807999",
    "end": "815129"
  },
  {
    "text": "security is a shared responsibility we responsible for the infrastructure and",
    "start": "815129",
    "end": "821019"
  },
  {
    "text": "you are responsible for your application code you are assigning fee level",
    "start": "821019",
    "end": "829869"
  },
  {
    "text": "encryption geo blocking HTTP to HTTPS three directions are some of the measurements that we have taken in layer",
    "start": "829869",
    "end": "835809"
  },
  {
    "text": "1 to improve the security posture and then we got AWS wrath the Web",
    "start": "835809",
    "end": "841839"
  },
  {
    "text": "Application Firewall a good web",
    "start": "841839",
    "end": "846850"
  },
  {
    "text": "application forward should label to help you quickly set fundamental protections and customize your applications",
    "start": "846850",
    "end": "853379"
  },
  {
    "text": "customers can simply enable roles in valve and protect them against any kind of different kinds of application level",
    "start": "853379",
    "end": "861129"
  },
  {
    "text": "attacks like HTTP floods cross-site scripting sequin injections to name a few but what makes AWS Raph stands out",
    "start": "861129",
    "end": "868749"
  },
  {
    "text": "as a service because it helps customers to innovate quickly and innovate fast",
    "start": "868749",
    "end": "874940"
  },
  {
    "text": "as majority of AWS services AWS RAF has an API and also changes propagate quite",
    "start": "874940",
    "end": "880850"
  },
  {
    "text": "fast in less than a minute so you can use these mechanisms and the features to",
    "start": "880850",
    "end": "886310"
  },
  {
    "text": "build a failed feedback loops and automate security aspects using services",
    "start": "886310",
    "end": "891710"
  },
  {
    "text": "like using the wider AWS ecosystem and services like AWS lambda Athena cloud",
    "start": "891710",
    "end": "898880"
  },
  {
    "text": "watch s3 to name a few Aniplex lambda lambda is a service compute function",
    "start": "898880",
    "end": "905840"
  },
  {
    "text": "which we can execute on per request base and you only pay for the function execution time so this isn't a solution",
    "start": "905840",
    "end": "915920"
  },
  {
    "text": "that we have in our answers page and it is being written as infrastructure as a code and the get a git repository being",
    "start": "915920",
    "end": "923420"
  },
  {
    "text": "shared as well so you can actually deploy this solution using a couple of clicks but because the source code is",
    "start": "923420",
    "end": "929990"
  },
  {
    "text": "already available and and including the cloud formation templates you can customize that for your needs it's",
    "start": "929990",
    "end": "935990"
  },
  {
    "text": "mainly handled in a sub top ten but let's go through a few automation pieces",
    "start": "935990",
    "end": "942080"
  },
  {
    "text": "that you have part of the solution so the first one it executes the lambda",
    "start": "942080",
    "end": "948200"
  },
  {
    "text": "lambda function based on the cloud watch event and take the IPS from open source",
    "start": "948200",
    "end": "955070"
  },
  {
    "text": "lists and IP reputation lists and frequently update the IP reputation",
    "start": "955070",
    "end": "961040"
  },
  {
    "text": "lists to block the bad actors the second one it when the logs getting landed from",
    "start": "961040",
    "end": "968330"
  },
  {
    "text": "the RAF logs as well as CloudFront logs and and we use the athena which is the",
    "start": "968330",
    "end": "973730"
  },
  {
    "text": "querying mechanism to the data that is landed on s3 and look for look for",
    "start": "973730",
    "end": "982100"
  },
  {
    "text": "suspicious activities look for rate at $400 look for anomalies and based on",
    "start": "982100",
    "end": "987500"
  },
  {
    "text": "that we can we can we have built at automation processes to capture those",
    "start": "987500",
    "end": "993110"
  },
  {
    "text": "source IPS and put them into a block list and the third one is is a honeypot",
    "start": "993110",
    "end": "999860"
  },
  {
    "text": "that we created using AWS lambda and API",
    "start": "999860",
    "end": "1005050"
  },
  {
    "text": "gateway and in robot or text file we ask the do not to make a request for the",
    "start": "1005050",
    "end": "1010240"
  },
  {
    "text": "honeypot but the bad actors would do and will capture it and will block it and",
    "start": "1010240",
    "end": "1016000"
  },
  {
    "text": "all these kind of automation being built in around this solution means with",
    "start": "1016000",
    "end": "1021490"
  },
  {
    "text": "couple of clicks you would able to deploy it and enhance it and and improve",
    "start": "1021490",
    "end": "1026560"
  },
  {
    "text": "it as infrastructure as a code another",
    "start": "1026560",
    "end": "1031930"
  },
  {
    "text": "service that would help you to help customers innovate fast is AWS lambda the edge lambda the edge is an extension",
    "start": "1031930",
    "end": "1039459"
  },
  {
    "text": "to a lambda function which you can execute it closer to your Weaver using",
    "start": "1039460",
    "end": "1044520"
  },
  {
    "text": "while attaching to cloud front requests and responses lambda th useful",
    "start": "1044520",
    "end": "1050440"
  },
  {
    "text": "programming language no js' so you can do advanced things like making external Network calls or using external",
    "start": "1050440",
    "end": "1058180"
  },
  {
    "text": "libraries customers can trick the lambda the edge functions in four different event triggers Weaver request Weaver",
    "start": "1058180",
    "end": "1065470"
  },
  {
    "text": "response origin request and origin response in the Weaver events we typically see customers implementing",
    "start": "1065470",
    "end": "1072220"
  },
  {
    "text": "like customer authentication mechanisms security solutions such as what mitigations let's have a look at the",
    "start": "1072220",
    "end": "1081880"
  },
  {
    "text": "caching layer which is a layer two so",
    "start": "1081880",
    "end": "1086950"
  },
  {
    "text": "the main goal of this layer is to improve the cache hit ratio by increasing the passage ratio you can",
    "start": "1086950",
    "end": "1093550"
  },
  {
    "text": "serve requests faster to your users rather than traffic goes to origin you",
    "start": "1093550",
    "end": "1099130"
  },
  {
    "text": "can also reduce the origin capacity I've",
    "start": "1099130",
    "end": "1104710"
  },
  {
    "text": "already talked about how we leverage the consistent hashing to shard the content that placed in layer 2 and layer 3 and",
    "start": "1104710",
    "end": "1110920"
  },
  {
    "text": "then nice spoke about the regional edge caches how it works as a CDN for out",
    "start": "1110920",
    "end": "1116230"
  },
  {
    "text": "front and reduce the number of requests that's going back to the origin and then",
    "start": "1116230",
    "end": "1121920"
  },
  {
    "text": "we use a technology called response framing so when the object is not in the",
    "start": "1121920",
    "end": "1128500"
  },
  {
    "text": "cache we need to take that from the origin but we will we will serve the request as soon as the as soon as we",
    "start": "1128500",
    "end": "1136990"
  },
  {
    "text": "receive from the origin this technique reduce the latency for the first byte",
    "start": "1136990",
    "end": "1142570"
  },
  {
    "text": "when finally we do request collapsing this happens when the objects become",
    "start": "1142570",
    "end": "1148090"
  },
  {
    "text": "very popular and suddenly everyone requesting for the same object a good example is a big sporting events and",
    "start": "1148090",
    "end": "1154510"
  },
  {
    "text": "when you try to watch it from a live web stream so this is where the first user",
    "start": "1154510",
    "end": "1160480"
  },
  {
    "text": "requests for the first this scream and then you got another user requesting for",
    "start": "1160480",
    "end": "1165700"
  },
  {
    "text": "the same stream CloudFront collapse these two requests go to the origin get",
    "start": "1165700",
    "end": "1171910"
  },
  {
    "text": "the response back and once you get the response it will send the response back to the both users in fact it's about how",
    "start": "1171910",
    "end": "1181450"
  },
  {
    "text": "you set your cache control strategy I would highly recommend that you spend a lot of time and looking at the",
    "start": "1181450",
    "end": "1188410"
  },
  {
    "text": "architectures of your application stack and look at how we improve your cache control strategy because not all the",
    "start": "1188410",
    "end": "1195220"
  },
  {
    "text": "contents are the same some are frequently get updated some one or some are private content and some are",
    "start": "1195220",
    "end": "1201490"
  },
  {
    "text": "shareable some might have variants than others don't so you need to set your",
    "start": "1201490",
    "end": "1207010"
  },
  {
    "text": "cache control strategy in a granular basis and crowdfund allows you to do that let's take a simple example looking",
    "start": "1207010",
    "end": "1214420"
  },
  {
    "text": "at ecommerce website for your HTML content which is changed quite rapidly",
    "start": "1214420",
    "end": "1221440"
  },
  {
    "text": "you want to make sure all your users get the latest version so you can do that using e tag values and set minimum TTL",
    "start": "1221440",
    "end": "1228610"
  },
  {
    "text": "values on a corresponding behavior for the API like the past your shopping",
    "start": "1228610",
    "end": "1235390"
  },
  {
    "text": "bucket or baskets and you've proxy all your all your proxy and forward all your",
    "start": "1235390",
    "end": "1243190"
  },
  {
    "text": "headers skips the caching layer so you don't set caching for these these items",
    "start": "1243190",
    "end": "1248800"
  },
  {
    "text": "and take the request from the origin but for your for your static contents you",
    "start": "1248800",
    "end": "1255130"
  },
  {
    "text": "will set the long TTL values and you can use the URL versioning to update these",
    "start": "1255130",
    "end": "1260530"
  },
  {
    "text": "contents but what if they have to take the",
    "start": "1260530",
    "end": "1268610"
  },
  {
    "text": "content from the origin after doing all that so layer three we establish a",
    "start": "1268610",
    "end": "1276320"
  },
  {
    "text": "connection to the origin and we maintain a pool of persistent connection to the",
    "start": "1276320",
    "end": "1281450"
  },
  {
    "text": "origin by reducing the overhead of establishing a new connection at every cache miss this would avoid tcp",
    "start": "1281450",
    "end": "1288560"
  },
  {
    "text": "slow-start for every new connection in general CloudFront is a stub in general",
    "start": "1288560",
    "end": "1295460"
  },
  {
    "text": "cloud front when the connection is established cloud front send the request and wait for the configured origin",
    "start": "1295460",
    "end": "1301970"
  },
  {
    "text": "response timeout values and if the response is received it would make a not read Christ",
    "start": "1301970",
    "end": "1307220"
  },
  {
    "text": "before it fails so initially it will make a 3-ring tries to establish a connection and after that you would wait",
    "start": "1307220",
    "end": "1314720"
  },
  {
    "text": "for your timeout values that you've been set into application and make another to rate rise before it fails as a",
    "start": "1314720",
    "end": "1321590"
  },
  {
    "text": "customer's you can consider these caching timeout values so but what",
    "start": "1321590",
    "end": "1327380"
  },
  {
    "text": "happens if the origin fails you can configure the origin statically for a",
    "start": "1327380",
    "end": "1334310"
  },
  {
    "text": "specific crowd front behavior you can also select it dynamically using lambda at the edge origin requests in fact in",
    "start": "1334310",
    "end": "1343400"
  },
  {
    "text": "this layer cloud front triggers lambda the edge functions only when there's a cache miss this is an opportunity to you",
    "start": "1343400",
    "end": "1350660"
  },
  {
    "text": "to modify that so basically you can do things like based on your cache miss you",
    "start": "1350660",
    "end": "1356120"
  },
  {
    "text": "can set some cookies and based on the cookie values of your users you can route the traffic that is best served",
    "start": "1356120",
    "end": "1364040"
  },
  {
    "text": "for your your customers at this stage you can also generate content",
    "start": "1364040",
    "end": "1369110"
  },
  {
    "text": "dynamically without needing to have origin at all origin response events being triggered",
    "start": "1369110",
    "end": "1375470"
  },
  {
    "text": "when you receive the response from the origin and it is chance to modify that request before it caching in the cloud",
    "start": "1375470",
    "end": "1382280"
  },
  {
    "text": "front and then we look at how we can",
    "start": "1382280",
    "end": "1391219"
  },
  {
    "text": "gracefully failover as a customer you can configure the origin failover using",
    "start": "1391219",
    "end": "1397519"
  },
  {
    "text": "cloud front to route the request to your backup origin upon failure please note that the failure happens after three",
    "start": "1397519",
    "end": "1405259"
  },
  {
    "text": "retries from the main origin and by default if the origin request is fail",
    "start": "1405259",
    "end": "1411019"
  },
  {
    "text": "crowd front will serve the stale content even if the cache is expired it will",
    "start": "1411019",
    "end": "1416239"
  },
  {
    "text": "still serve the stale stale content to avoid degrading user experience and of",
    "start": "1416239",
    "end": "1423109"
  },
  {
    "text": "course if they're not the content is not in the cache cloud front will send the error message like the dogs of Amazon",
    "start": "1423109",
    "end": "1429919"
  },
  {
    "text": "but you can use you can also configure",
    "start": "1429919",
    "end": "1435229"
  },
  {
    "text": "the custom error pages or route your traffic into a static page or even use lambda at the edge to do custom error",
    "start": "1435229",
    "end": "1443089"
  },
  {
    "text": "build up a custom error handling logic so that's it from me today I will now",
    "start": "1443089",
    "end": "1451279"
  },
  {
    "text": "invite Fabrizio to talk to you about flying in the cloud",
    "start": "1451279",
    "end": "1457059"
  },
  {
    "text": "hello no can everybody hear me yeah great okay thank you okay hi everyone so",
    "start": "1463860",
    "end": "1477010"
  },
  {
    "text": "thanks Janka and thanks AWS for having me here today let me introduce myself my",
    "start": "1477010",
    "end": "1483670"
  },
  {
    "text": "name is Fabrizio fortunado I'm head of front adrenal labs and Ryanair lab is",
    "start": "1483670",
    "end": "1490960"
  },
  {
    "text": "what we like to call tech company with the nerve line attached now this is my",
    "start": "1490960",
    "end": "1495970"
  },
  {
    "text": "Twitter and github handle easy fortune and that's also my blog where I generally blog about front-end and",
    "start": "1495970",
    "end": "1502090"
  },
  {
    "text": "server less stuff now I've been working around their labs for the past four years and today I'm here to talk about",
    "start": "1502090",
    "end": "1509260"
  },
  {
    "text": "the adoption that we had of the WS services specifically CloudFront and lambda edge so I want to",
    "start": "1509260",
    "end": "1518140"
  },
  {
    "text": "start by giving you a little bit of a context on how everything started our history a brief history of our migration",
    "start": "1518140",
    "end": "1525460"
  },
  {
    "text": "this two years ago in renard was the decision to jump into the cloud so this",
    "start": "1525460",
    "end": "1531220"
  },
  {
    "text": "is where we started moving services from our on-premise data center into the",
    "start": "1531220",
    "end": "1536320"
  },
  {
    "text": "cloud specifically starting first with new services and then slowly also",
    "start": "1536320",
    "end": "1541780"
  },
  {
    "text": "replacing the the old one right so to",
    "start": "1541780",
    "end": "1546910"
  },
  {
    "text": "just have an idea our website is operating here's an overview of on premise website infrastructure in our",
    "start": "1546910",
    "end": "1554050"
  },
  {
    "text": "data centers we will have different servers for the CMS in the angular application or single page application",
    "start": "1554050",
    "end": "1560320"
  },
  {
    "text": "and then also different servers for the API is as well what I would like to be",
    "start": "1560320",
    "end": "1565420"
  },
  {
    "text": "focused focusing on this talk is these CMS block D CMS servers and now we",
    "start": "1565420",
    "end": "1571660"
  },
  {
    "text": "managed to split the single page application from the CMS and use it as",
    "start": "1571660",
    "end": "1577690"
  },
  {
    "text": "any other API so basically as a Atlas CMS to understand why this separation",
    "start": "1577690",
    "end": "1584530"
  },
  {
    "text": "was necessary the two main advantage that we gained we're responsibilities and scalability",
    "start": "1584530",
    "end": "1591180"
  },
  {
    "text": "so first off responsibility that's because in Ryanair there are different",
    "start": "1591180",
    "end": "1596550"
  },
  {
    "text": "teams that actually look after CCMS and another team my team they look after the",
    "start": "1596550",
    "end": "1601610"
  },
  {
    "text": "single page application and so this way actually the front-end team can start be",
    "start": "1601610",
    "end": "1607380"
  },
  {
    "text": "responsible for for his own infrastructure and scalability because single page application in general are",
    "start": "1607380",
    "end": "1614340"
  },
  {
    "text": "just a collection of static assets which can be easily cash through Presidium so",
    "start": "1614340",
    "end": "1622410"
  },
  {
    "text": "what we basically build is the foundation for several s website and today I want to answer the following",
    "start": "1622410",
    "end": "1629760"
  },
  {
    "text": "question for you what why and how so",
    "start": "1629760",
    "end": "1634770"
  },
  {
    "text": "what is the self Alice Webb said put it simple like I consider it several s website any website that doesn't run on",
    "start": "1634770",
    "end": "1642000"
  },
  {
    "text": "a classic classical web servers but rather uses all the wide ranges of AWS",
    "start": "1642000",
    "end": "1649830"
  },
  {
    "text": "server less services such as cloud front to use it as a CDN to take advantage of",
    "start": "1649830",
    "end": "1657420"
  },
  {
    "text": "the edge caching to have a secure connection also for the origin s3 also",
    "start": "1657420",
    "end": "1663630"
  },
  {
    "text": "to store the P assets your pages at your single page application assets and",
    "start": "1663630",
    "end": "1669810"
  },
  {
    "text": "finally land at the edge where it basically sits in the middle you can add",
    "start": "1669810",
    "end": "1675000"
  },
  {
    "text": "your business logic between your edge and your origins and it's acting as a",
    "start": "1675000",
    "end": "1680490"
  },
  {
    "text": "glue between the two but why we should look at a service website well any",
    "start": "1680490",
    "end": "1687120"
  },
  {
    "text": "front-end team I would say has very little knowledge what it takes to manage a server and to be honest this is not",
    "start": "1687120",
    "end": "1693810"
  },
  {
    "text": "part of the responsibility of a front-end developer front-end developers should be looking at user interact with",
    "start": "1693810",
    "end": "1701370"
  },
  {
    "text": "the page rather than looking at how much CPU the server is using so using server",
    "start": "1701370",
    "end": "1707310"
  },
  {
    "text": "less technologies front-end developers themselves can be responsible for the whole infrastructure since part of this",
    "start": "1707310",
    "end": "1714030"
  },
  {
    "text": "complexity is offloaded to AWS and now we're going to look at outer and",
    "start": "1714030",
    "end": "1719809"
  },
  {
    "text": "surveillance website through a series of use cases and now we implemented in render so the first one that I'm going",
    "start": "1719809",
    "end": "1727289"
  },
  {
    "text": "to analyze is ultimately a basic functionality of our server what I'm",
    "start": "1727289",
    "end": "1735210"
  },
  {
    "text": "talking about is the ability to create rewrites and redirects between the user",
    "start": "1735210",
    "end": "1740909"
  },
  {
    "text": "request and the actual resources so if we take a closer look at life of an HTTP",
    "start": "1740909",
    "end": "1746999"
  },
  {
    "text": "request we what we not is in here is that we have a request that goes to",
    "start": "1746999",
    "end": "1752549"
  },
  {
    "text": "render calm slash a slash again it will go through CloudFront platform then we'll have an Origin server as an s3 in",
    "start": "1752549",
    "end": "1759809"
  },
  {
    "text": "this case and a behavior to forward the traffic from the platform - yes sweetie",
    "start": "1759809",
    "end": "1765119"
  },
  {
    "text": "right so what what happened here is - will forward these URI slash a slash Ian",
    "start": "1765119",
    "end": "1771690"
  },
  {
    "text": "to the origin - yes trip now in our case we don't have a single page application",
    "start": "1771690",
    "end": "1778129"
  },
  {
    "text": "per each language we just a rather have one that serves all the languages that",
    "start": "1778129",
    "end": "1783450"
  },
  {
    "text": "we support so what will happen is that cloud from request is this file",
    "start": "1783450",
    "end": "1791359"
  },
  {
    "text": "en in the folder /e and in not gonna be",
    "start": "1791359",
    "end": "1796590"
  },
  {
    "text": "there so this is where you can actually use alarmed at the edge and specifically",
    "start": "1796590",
    "end": "1802019"
  },
  {
    "text": "an original request so that when the request is going from cloud from to the",
    "start": "1802019",
    "end": "1807599"
  },
  {
    "text": "st origin the lambda will intercept it and rewrite it to the actual file that",
    "start": "1807599",
    "end": "1814559"
  },
  {
    "text": "is needed for that request so the request then will be returned to plot front and then to the user and that's it",
    "start": "1814559",
    "end": "1821909"
  },
  {
    "text": "you basically have any rights similar to any other apache or nginx server with",
    "start": "1821909",
    "end": "1830669"
  },
  {
    "text": "the difference that this is completely cervelas and the great thing it just takes three lines of code actually to",
    "start": "1830669",
    "end": "1836669"
  },
  {
    "text": "implement it you see you can just take the request from a front rewrite the URI",
    "start": "1836669",
    "end": "1842489"
  },
  {
    "text": "change the URI arataura use it now while standard rights are good good to start",
    "start": "1842489",
    "end": "1849509"
  },
  {
    "text": "off when the single page application start growing it may become harder to maintain",
    "start": "1849509",
    "end": "1855360"
  },
  {
    "text": "the rana website started growing in parallel with our offices so we started in 2014 with the Dublin office then 2016",
    "start": "1855360",
    "end": "1863920"
  },
  {
    "text": "in Bratislava and finally in 2017 in Madrid and a single page application was",
    "start": "1863920",
    "end": "1870910"
  },
  {
    "text": "actually becoming unmentionable especially with all these different teams in different locations so this is",
    "start": "1870910",
    "end": "1877870"
  },
  {
    "text": "why we started exploring the concept of micro pages what we call a micro page is",
    "start": "1877870",
    "end": "1883360"
  },
  {
    "text": "an independent developed and deployed page on the website it is loosely coupled with other pages which means it",
    "start": "1883360",
    "end": "1890620"
  },
  {
    "text": "Allah knows what is the previous page what is the next page and it is a single page application per",
    "start": "1890620",
    "end": "1896110"
  },
  {
    "text": "page still and allow these allow us to reduce the technical depth surface of",
    "start": "1896110",
    "end": "1902920"
  },
  {
    "text": "the overall application and we apply a strict performance budget to monitor the",
    "start": "1902920",
    "end": "1908230"
  },
  {
    "text": "per page performance now if we have a look at the micro page architecture this",
    "start": "1908230",
    "end": "1918370"
  },
  {
    "text": "architecture breaks down the website into individual pages which are managed",
    "start": "1918370",
    "end": "1923710"
  },
  {
    "text": "by different teams also the pipeline's of order these pages are actually",
    "start": "1923710",
    "end": "1928980"
  },
  {
    "text": "separated and managed by the team itself the pages are then connected to each",
    "start": "1928980",
    "end": "1934510"
  },
  {
    "text": "other via rotor who is responsible to direct the request to the specific micro",
    "start": "1934510",
    "end": "1940300"
  },
  {
    "text": "page so in this way we are actually a clear separation of the team and his own",
    "start": "1940300",
    "end": "1948130"
  },
  {
    "text": "and his own page and pipelines on the overall website this concept this",
    "start": "1948130",
    "end": "1954370"
  },
  {
    "text": "concept architecture translate very easy actually the NWS think about it CloudFront can act as a router for a for",
    "start": "1954370",
    "end": "1963309"
  },
  {
    "text": "your request you can define the different behaviors and this is this is where you want to start doing your",
    "start": "1963309",
    "end": "1970210"
  },
  {
    "text": "routing so we follow one request for example for",
    "start": "1970210",
    "end": "1976410"
  },
  {
    "text": "on our website Coughlin will act as a Rooter then we will specify some",
    "start": "1976410",
    "end": "1982560"
  },
  {
    "text": "behaviors for a micro page specifically two behaviors Burrage micro page one",
    "start": "1982560",
    "end": "1987690"
  },
  {
    "text": "which is necessary to cut back the index.html similar to what we seen",
    "start": "1987690",
    "end": "1994080"
  },
  {
    "text": "before which is doing the rewrites and the second behavior which is the just",
    "start": "1994080",
    "end": "2000740"
  },
  {
    "text": "for returning the static assets of your single page application or of your page",
    "start": "2000740",
    "end": "2006670"
  },
  {
    "text": "both the behaviors are actually connected to the same s3 and of course",
    "start": "2006670",
    "end": "2013580"
  },
  {
    "text": "in different parts of these s3 and at the end we are also using for the",
    "start": "2013580",
    "end": "2019520"
  },
  {
    "text": "pipeline AWS called pipeline which is populated in ds3 based upon the latest changes that you have on your repository",
    "start": "2019520",
    "end": "2027700"
  },
  {
    "text": "and this setup is basically replicated per each micro page what we notice is",
    "start": "2027700",
    "end": "2036050"
  },
  {
    "text": "that the result of this architecture on especially on the first micro pages that we released it's quite impressive",
    "start": "2036050",
    "end": "2043340"
  },
  {
    "text": "so if we take the flight select page the previous version was actually a data",
    "start": "2043340",
    "end": "2050540"
  },
  {
    "text": "that was actually having a data transfer of 1.1 megabyte and the current version",
    "start": "2050540",
    "end": "2055730"
  },
  {
    "text": "is that if you can navigate to the world website in mobile we can actually see it",
    "start": "2055730",
    "end": "2060830"
  },
  {
    "text": "as only 372 kilobyte of data transfer so by reducing the overall size of the",
    "start": "2060830",
    "end": "2066740"
  },
  {
    "text": "application and applying strict performance budget we managed to reduce the size of the website of around 66% so",
    "start": "2066740",
    "end": "2076850"
  },
  {
    "text": "this size reduction is also connected to a strict diet that we are following for",
    "start": "2076850",
    "end": "2082310"
  },
  {
    "text": "our micro pages and I can surely works miracles it is a debate on broadly and",
    "start": "2082310",
    "end": "2089470"
  },
  {
    "text": "broadly for we don't know is a compression algorithm which performs better than gzip it is also a good",
    "start": "2089470",
    "end": "2097760"
  },
  {
    "text": "modern browser support as you can see here but not every browser supports it so in order to be transparent for the",
    "start": "2097760",
    "end": "2105350"
  },
  {
    "text": "application we developed another function which takes care of serving roughly compressed",
    "start": "2105350",
    "end": "2111890"
  },
  {
    "text": "file only to the browsers that supports it so let's assume that the request is",
    "start": "2111890",
    "end": "2117440"
  },
  {
    "text": "coming for a JavaScript file in this case food ojs then in cloud frog we will",
    "start": "2117440",
    "end": "2123290"
  },
  {
    "text": "define behavior which for any javascript file this behavior we will attach an",
    "start": "2123290",
    "end": "2130040"
  },
  {
    "text": "original request lambda and this lambda lambda is checking the accept-encoding",
    "start": "2130040",
    "end": "2135710"
  },
  {
    "text": "header from the browser and serve the specific the correct file to the browser",
    "start": "2135710",
    "end": "2141170"
  },
  {
    "text": "so as you can see here we're actually storing now two files one for Bradley one for gzip and if you have a quick",
    "start": "2141170",
    "end": "2148940"
  },
  {
    "text": "look at the code it also shows how simple it is so we take the request and",
    "start": "2148940",
    "end": "2155060"
  },
  {
    "text": "the headers we check if Bradley is an accepted encoding and then we just",
    "start": "2155060",
    "end": "2161119"
  },
  {
    "text": "obtained either Bradley or cheesy in our URI every turn the request with this",
    "start": "2161119",
    "end": "2168560"
  },
  {
    "text": "simple simple lambda deployed not only these transparent for the application",
    "start": "2168560",
    "end": "2173720"
  },
  {
    "text": "but what we notice is an overall reduction up to 23% between a gzip",
    "start": "2173720",
    "end": "2180800"
  },
  {
    "text": "compressed file and a broadly compressed file if you think about disease you're making your website faster of overall",
    "start": "2180800",
    "end": "2187780"
  },
  {
    "text": "23% just by adding few lines of code basic now oops too much all the teams",
    "start": "2187780",
    "end": "2196430"
  },
  {
    "text": "working on micro pages are constantly releasing new features and you have to",
    "start": "2196430",
    "end": "2202430"
  },
  {
    "text": "face the fact that there's gonna be problems bug will arise especially while",
    "start": "2202430",
    "end": "2207470"
  },
  {
    "text": "developing new features own complex system to try to elevate this issue what",
    "start": "2207470",
    "end": "2212750"
  },
  {
    "text": "we wanted to build we want to build the tools to let the team feel comfortable",
    "start": "2212750",
    "end": "2219530"
  },
  {
    "text": "releasing to production as quickly as possible and at the same time do not impact a lot number of user a huge",
    "start": "2219530",
    "end": "2227480"
  },
  {
    "text": "number of user so this is why we build canary deployment for web pages and",
    "start": "2227480",
    "end": "2233000"
  },
  {
    "text": "micro pages on AWS so when a requesting coming is coming for a specific page the",
    "start": "2233000",
    "end": "2239930"
  },
  {
    "text": "origin request lambda that was seen before is not directly getting the grab in the index.html but rather calling an",
    "start": "2239930",
    "end": "2248840"
  },
  {
    "text": "external service in this case launched our click lunch turkey is a service which store allow us to store feature",
    "start": "2248840",
    "end": "2256550"
  },
  {
    "text": "flag and you can as a nice interface to configure is this feature flags now each",
    "start": "2256550",
    "end": "2264380"
  },
  {
    "text": "feature flag can also have a percentage roll out attached to it which is basically defining the weight and the",
    "start": "2264380",
    "end": "2270620"
  },
  {
    "text": "number of users that you want these these feature flag to be served in the",
    "start": "2270620",
    "end": "2275990"
  },
  {
    "text": "future flag we store the version of our page and then once Wednesday launched",
    "start": "2275990",
    "end": "2283580"
  },
  {
    "text": "our key request comes back the lambda takes care of grabbing the correct",
    "start": "2283580",
    "end": "2289660"
  },
  {
    "text": "index.html file that the store I said we just created you see canary deployment",
    "start": "2289660",
    "end": "2295610"
  },
  {
    "text": "for a several s website what we noticed though was that by adding these external",
    "start": "2295610",
    "end": "2301280"
  },
  {
    "text": "calls our our lambda the edge duration actually increased up to 500",
    "start": "2301280",
    "end": "2307190"
  },
  {
    "text": "milliseconds this is when we started looking how to reduce this duration and",
    "start": "2307190",
    "end": "2313070"
  },
  {
    "text": "how to improve the experience for our users and also to reduce your bill to be",
    "start": "2313070",
    "end": "2318530"
  },
  {
    "text": "honest and so we improved this solution",
    "start": "2318530",
    "end": "2323650"
  },
  {
    "text": "rather than calling an external website web server we are calling",
    "start": "2323650",
    "end": "2331040"
  },
  {
    "text": "ah DynamoDB table and this table will be able stores the up-to-date all the",
    "start": "2331040",
    "end": "2338210"
  },
  {
    "text": "up-to-date feature flags from launched darkly exacting basically as a caches relay the changes that we did on latched",
    "start": "2338210",
    "end": "2345230"
  },
  {
    "text": "our key was to add a web book in this web book there's listening an api gateway were alarmed our seats which is",
    "start": "2345230",
    "end": "2352670"
  },
  {
    "text": "writing all the updates on the DynamoDB the rest of the application stays",
    "start": "2352670",
    "end": "2358550"
  },
  {
    "text": "exactly the same and with this change we reduce the",
    "start": "2358550",
    "end": "2366920"
  },
  {
    "text": "lambda at the edge duration of 350 milliseconds so we went from 500 to 150",
    "start": "2366920",
    "end": "2374420"
  },
  {
    "text": "millisecond and what we notice also the impact on the user is the p90 of page",
    "start": "2374420",
    "end": "2380750"
  },
  {
    "text": "load for our users it went from 3.5 to actually 3 seconds that's 500 milliseconds improved an",
    "start": "2380750",
    "end": "2387829"
  },
  {
    "text": "experience for our use our users while creating your server less website on AWS",
    "start": "2387829",
    "end": "2394070"
  },
  {
    "text": "another important aspect that you need to take care of is security in",
    "start": "2394070",
    "end": "2399380"
  },
  {
    "text": "particularly while serving web page you need to implement a specific set of",
    "start": "2399380",
    "end": "2404480"
  },
  {
    "text": "errors that helps you out increasing the security for your user this is a list of",
    "start": "2404480",
    "end": "2410569"
  },
  {
    "text": "all the generally the security user that you can implement you're going from X",
    "start": "2410569",
    "end": "2415579"
  },
  {
    "text": "XSS protection that helps you out alleviating XSS finally to content",
    "start": "2415579",
    "end": "2422030"
  },
  {
    "text": "security policy CSP at the end which define your security policy for for your page now when you first starting when",
    "start": "2422030",
    "end": "2430369"
  },
  {
    "text": "you first starting creating a several as website on AWS this is the headers are",
    "start": "2430369",
    "end": "2437119"
  },
  {
    "text": "not gonna be there and this can be exploited by malicious attackers and if",
    "start": "2437119",
    "end": "2442310"
  },
  {
    "text": "you haven't seen it before this is there's a website security headers which basically gives you a",
    "start": "2442310",
    "end": "2448010"
  },
  {
    "text": "grade of your website so how can you start from a very bad F grade and go to",
    "start": "2448010",
    "end": "2454730"
  },
  {
    "text": "a a grade still maintaining a server less infrastructure if you haven't",
    "start": "2454730",
    "end": "2461900"
  },
  {
    "text": "figured out it involves another lambda the edge this time though it's not an original",
    "start": "2461900",
    "end": "2467730"
  },
  {
    "text": "request is rather than a viewer response so what you're looking to to do is",
    "start": "2467730",
    "end": "2473450"
  },
  {
    "text": "before the required before the response is actually going back to the user inject their security headers and if we",
    "start": "2473450",
    "end": "2482130"
  },
  {
    "text": "have a sneak peek into the code it reveals how easy it is to set it up we",
    "start": "2482130",
    "end": "2487650"
  },
  {
    "text": "take the response from a cloud front basically it's the first line we then",
    "start": "2487650",
    "end": "2492779"
  },
  {
    "text": "check if the response actually is a HTML page we'd only need these headers on",
    "start": "2492779",
    "end": "2499680"
  },
  {
    "text": "HTML pages so we are checking the content type of the response and then we",
    "start": "2499680",
    "end": "2506130"
  },
  {
    "text": "append the headers and return the response so while all the previous use",
    "start": "2506130",
    "end": "2512010"
  },
  {
    "text": "cases were specific to a specific request and response for our",
    "start": "2512010",
    "end": "2517049"
  },
  {
    "text": "infrastructure what happened when a user select render calm without having selected any language or country now",
    "start": "2517049",
    "end": "2524700"
  },
  {
    "text": "this is a this is a map of all the different bases and routes where we operate in European and non-european",
    "start": "2524700",
    "end": "2531779"
  },
  {
    "text": "cities what this translate to is an extremely big combination of languages",
    "start": "2531779",
    "end": "2537660"
  },
  {
    "text": "and countries that we support on our website when a request is coming to render calm without any language or",
    "start": "2537660",
    "end": "2545130"
  },
  {
    "text": "country selected then we created a function that takes care of it so inside",
    "start": "2545130",
    "end": "2553170"
  },
  {
    "text": "CloudFront there is a behavior just with the slash in which we attach a",
    "start": "2553170",
    "end": "2560460"
  },
  {
    "text": "viewer-request lambda which is basically applying or all algorithm this algorithm",
    "start": "2560460",
    "end": "2566400"
  },
  {
    "text": "taking takes in consideration multiple things and amongst them there's for",
    "start": "2566400",
    "end": "2572490"
  },
  {
    "text": "example the accept language request header from your browser and also Clough reviewer country which is a header that",
    "start": "2572490",
    "end": "2579480"
  },
  {
    "text": "CloudFront injects and contains the country of the request where it's coming",
    "start": "2579480",
    "end": "2585359"
  },
  {
    "text": "from so based upon these different parameters we then redirect to a specific country and language path and",
    "start": "2585359",
    "end": "2593609"
  },
  {
    "text": "to create a redirect role and at the edge you just to specify a status code for the",
    "start": "2593609",
    "end": "2599300"
  },
  {
    "text": "response and then the location header in the object that you are returning to",
    "start": "2599300",
    "end": "2604690"
  },
  {
    "text": "close out I would like to leave you with some takeaways from our journey and migration into a WS service services",
    "start": "2604690",
    "end": "2612380"
  },
  {
    "text": "first considering that we are easiest travel website in Europe with more than",
    "start": "2612380",
    "end": "2620510"
  },
  {
    "text": "1 billion visits per year what you're seeing here is that it's possible to run",
    "start": "2620510",
    "end": "2626270"
  },
  {
    "text": "a service website on a big scale but what I will suggest is always to check the limits that you have in your account",
    "start": "2626270",
    "end": "2633560"
  },
  {
    "text": "and monitor those so that your that you know if there are your inform if there",
    "start": "2633560",
    "end": "2639710"
  },
  {
    "text": "are any problems then I encourage everyone to actually take in consideration your team skills and the",
    "start": "2639710",
    "end": "2646220"
  },
  {
    "text": "business requirements while building your infrastructure on your architecture like you shouldn't build an",
    "start": "2646220",
    "end": "2654080"
  },
  {
    "text": "infrastructure are key that you just on a new technology just because it's called I mean server less it is a cool",
    "start": "2654080",
    "end": "2659870"
  },
  {
    "text": "technologies but we had so many needs ourselves as well and finally see you",
    "start": "2659870",
    "end": "2666020"
  },
  {
    "text": "see now to land at the edge simple and flexible interface you can really focus",
    "start": "2666020",
    "end": "2671090"
  },
  {
    "text": "on delivering features to your users thank you and now I give back to Janka",
    "start": "2671090",
    "end": "2680290"
  },
  {
    "text": "[Applause]",
    "start": "2680290",
    "end": "2690969"
  },
  {
    "text": "yeah thank you for Brazil right yeah",
    "start": "2690969",
    "end": "2700789"
  },
  {
    "text": "thank you very much for coming to our session today and I hope you enjoy the",
    "start": "2700789",
    "end": "2706190"
  },
  {
    "text": "rest of your afternoon and most importantly please complete the survey",
    "start": "2706190",
    "end": "2711289"
  },
  {
    "text": "of our session because your feedback is important to us to improve the more",
    "start": "2711289",
    "end": "2718460"
  },
  {
    "text": "sessions like this in future and and the events and for the future events thank",
    "start": "2718460",
    "end": "2724219"
  },
  {
    "text": "you [Applause]",
    "start": "2724219",
    "end": "2728339"
  }
]