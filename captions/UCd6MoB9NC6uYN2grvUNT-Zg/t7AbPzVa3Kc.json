[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "good morning everyone welcome welcome again to - dev danny Stockholm it's a",
    "start": "120",
    "end": "7020"
  },
  {
    "text": "it's a pleasure to be here and there is actually a bit of sunlight today so that's amazing so my name is Julien I'm",
    "start": "7020",
    "end": "14969"
  },
  {
    "text": "the AI evangelist for MEA and I have the",
    "start": "14969",
    "end": "20340"
  },
  {
    "text": "pleasure of doing three talks today so busy day and you will get tired of me",
    "start": "20340",
    "end": "26039"
  },
  {
    "text": "before the end I can promise that my first talk today is about deep learning",
    "start": "26039",
    "end": "32398"
  },
  {
    "text": "for developers and this is what we're going to cover so very quickly we're",
    "start": "32399",
    "end": "39510"
  },
  {
    "start": "36000",
    "end": "122000"
  },
  {
    "text": "going to show why deep learning is just not for PhDs and and world expert",
    "start": "39510",
    "end": "46649"
  },
  {
    "text": "everybody in the room can do it who's the developer in the room all right everybody okay who can read and write 50",
    "start": "46649",
    "end": "54420"
  },
  {
    "text": "lines of Python come on everybody come on it's Python right okay so the good",
    "start": "54420",
    "end": "60960"
  },
  {
    "text": "news is all of you can do deep learning right but stay around I will show you how we will talk about we'll talk really",
    "start": "60960",
    "end": "69479"
  },
  {
    "text": "quick about infrastructure because obviously we need to have infrastructure",
    "start": "69479",
    "end": "74520"
  },
  {
    "text": "to train the models and there are some options I want to discuss then we're going to look at some common neural",
    "start": "74520",
    "end": "81030"
  },
  {
    "text": "network architectures and they all have weird names and some use cases and some",
    "start": "81030",
    "end": "87060"
  },
  {
    "text": "get up projects that you can use out of the box to do some pretty fancy stuff",
    "start": "87060",
    "end": "92900"
  },
  {
    "text": "then we're going to talk about Apache MX net which is a deep learning library",
    "start": "92900",
    "end": "98570"
  },
  {
    "text": "that AWS likes to use to build their own project and we're going to talk about it",
    "start": "98570",
    "end": "106250"
  },
  {
    "text": "and of course we'll do some demos and hopefully the demo god will be with me",
    "start": "106250",
    "end": "111630"
  },
  {
    "text": "today and at the end I will share some resources to to help you speed up your",
    "start": "111630",
    "end": "117990"
  },
  {
    "text": "learning and and really get involved with this stuff so if you if you listen to some people",
    "start": "117990",
    "end": "126110"
  },
  {
    "text": "they will tell you AI is really really very complicated right it's it's you",
    "start": "126110",
    "end": "131430"
  },
  {
    "text": "know it's too complicated for us for you and me okay I'm not a genius far from it",
    "start": "131430",
    "end": "137250"
  },
  {
    "text": "so no I cannot do AI right and when they when that when they say that I want to",
    "start": "137250",
    "end": "143760"
  },
  {
    "text": "say oh it's very complicated it's you know it's dark magic and so so weird",
    "start": "143760",
    "end": "148860"
  },
  {
    "text": "what they really mean is usually is you're not very smart and I am so I'll do it for you but you have to pay me a",
    "start": "148860",
    "end": "154769"
  },
  {
    "text": "lot of money and as you know that's not the AWS way the AWS way is you do stuff",
    "start": "154769",
    "end": "162450"
  },
  {
    "text": "right we build building blocks will build services we build api's and we try",
    "start": "162450",
    "end": "169950"
  },
  {
    "text": "to make them simple and you use them okay so I want all of you to do this stuff not just some experts so the fact",
    "start": "169950",
    "end": "178140"
  },
  {
    "start": "176000",
    "end": "245000"
  },
  {
    "text": "is that AI is just math code and chips",
    "start": "178140",
    "end": "184830"
  },
  {
    "text": "so it is a bit of science sure if you especially if you want to work at a low",
    "start": "184830",
    "end": "190079"
  },
  {
    "text": "level if you want to build deep learning frameworks if you want to invent new",
    "start": "190079",
    "end": "195810"
  },
  {
    "text": "deep learning models sure you need to have a math background and some computer science and statistics etc but as a",
    "start": "195810",
    "end": "203820"
  },
  {
    "text": "matter of fact a lot of people log already do that right although all the research teams in the world are building",
    "start": "203820",
    "end": "210269"
  },
  {
    "text": "those models that so they're taking care of that part and we can actually build",
    "start": "210269",
    "end": "216720"
  },
  {
    "text": "on top of that so for 99 percent huge cases even 99.9 percent we don't have to",
    "start": "216720",
    "end": "223890"
  },
  {
    "text": "invent new models we have to find the model that's gonna work for our business case and we have to adapt it so in that",
    "start": "223890",
    "end": "230250"
  },
  {
    "text": "context AI and deep learning are really a lot of code right and some",
    "start": "230250",
    "end": "237570"
  },
  {
    "text": "infrastructure work and some cloud work to get it done so while we're on the",
    "start": "237570",
    "end": "242910"
  },
  {
    "text": "subject our infrastructure basically you have two options when you want to run",
    "start": "242910",
    "end": "249269"
  },
  {
    "start": "245000",
    "end": "535000"
  },
  {
    "text": "deep learning workloads okay the one I'm sure you know about is obviously to use",
    "start": "249269",
    "end": "254370"
  },
  {
    "text": "GPUs okay and we support the latest Nvidia",
    "start": "254370",
    "end": "260650"
  },
  {
    "text": "generation of GPUs which is called Tesla and those are super powerful we used to",
    "start": "260650",
    "end": "268669"
  },
  {
    "text": "have GPU instances before they were called the p2 family now we have the p3 family with that Newt and video chip and",
    "start": "268669",
    "end": "275120"
  },
  {
    "text": "yes they are extremely powerful and you can have from one to eight GPUs in the",
    "start": "275120",
    "end": "281000"
  },
  {
    "text": "same instance okay and they have crazy statistics and performance numbers and for massive data sets they are pretty",
    "start": "281000",
    "end": "289760"
  },
  {
    "text": "much mandatory okay in the training phase if you have tons of data GPUs still win ok but there is a second",
    "start": "289760",
    "end": "299660"
  },
  {
    "text": "option and we like you to save money as you know and I would hate that you know",
    "start": "299660",
    "end": "307520"
  },
  {
    "text": "you use GPUs when GPUs could actually do the trick and we have another option",
    "start": "307520",
    "end": "314270"
  },
  {
    "text": "which is using the C 5 instance family with the skylake architecture this came",
    "start": "314270",
    "end": "320930"
  },
  {
    "text": "out a few months ago and compared to the previous C 4 family you know well it's",
    "start": "320930",
    "end": "326750"
  },
  {
    "text": "more of everything more cores faster EBS throughput more memory and",
    "start": "326750",
    "end": "332590"
  },
  {
    "text": "especially the new skylake architecture which supports avx-512 so vectorized",
    "start": "332590",
    "end": "340720"
  },
  {
    "text": "instructions that are super useful when you do machine learning and deep learning so you get a really really nice",
    "start": "340720",
    "end": "346849"
  },
  {
    "text": "speed-up not only because these are faster instances but also because of that instruction set so another",
    "start": "346849",
    "end": "355130"
  },
  {
    "text": "important factor is how they compare in pricing right so if you look at the c5 pricing compared to p2 and p3 well you",
    "start": "355130",
    "end": "363530"
  },
  {
    "text": "can see there's a big difference okay so sure you know like everybody else I",
    "start": "363530",
    "end": "369500"
  },
  {
    "text": "love to play with the p3 60 in Excel especially since I don't pay my edible use bills but you do right so I want you",
    "start": "369500",
    "end": "377810"
  },
  {
    "text": "to be aware of those differences so you know you don't always need a p3 16 Excel",
    "start": "377810",
    "end": "383469"
  },
  {
    "text": "maybe one of the c5 is more than enough to do the job and as you can see there",
    "start": "383469",
    "end": "389300"
  },
  {
    "text": "is a massive price difference okay so again for very large jobs for training at very",
    "start": "389300",
    "end": "396800"
  },
  {
    "text": "large scale yes you will need GPUs and and the the p2",
    "start": "396800",
    "end": "402800"
  },
  {
    "text": "and p3 families are probably what you need here but if you want to train on smaller datasets small to mid-size",
    "start": "402800",
    "end": "410240"
  },
  {
    "text": "datasets and if you want to do prediction then actually the c5 family is a much better deal okay you will not",
    "start": "410240",
    "end": "418670"
  },
  {
    "text": "get a huge performance increase by doing prediction on GPUs especially if you",
    "start": "418670",
    "end": "423860"
  },
  {
    "text": "predict let's say image per image and so sea-fight becomes a much better option if you throw spot instances into the mix",
    "start": "423860",
    "end": "432170"
  },
  {
    "text": "then here's an example well this becomes even more apparent and obvious as a",
    "start": "432170",
    "end": "438620"
  },
  {
    "text": "matter of fact today it is very difficult to grab p3 instances in the spot market right so there is a lot of",
    "start": "438620",
    "end": "445520"
  },
  {
    "text": "competition so as you can see you know the basically the spot price market is the on-demand price so that's not a very",
    "start": "445520",
    "end": "451910"
  },
  {
    "text": "good deal but if you look at the c5 example you can get very very large",
    "start": "451910",
    "end": "458510"
  },
  {
    "text": "discounts on c5 in the spot market okay so what that means is here in this",
    "start": "458510",
    "end": "463970"
  },
  {
    "text": "example as you can see c5 would be 20 times cheaper than then the one single",
    "start": "463970",
    "end": "470420"
  },
  {
    "text": "p3 so for the same budget you could have 20 c5 instances and these are big ones",
    "start": "470420",
    "end": "475760"
  },
  {
    "text": "right c5 18 XL so you could have 20 servers running prediction instead of",
    "start": "475760",
    "end": "482390"
  },
  {
    "text": "just one GPU instance so I can guarantee that no matter how many cores and handle mode no matter how powerful that GPU is",
    "start": "482390",
    "end": "489830"
  },
  {
    "text": "you will get better performance and better scalability by using c5 s ok so",
    "start": "489830",
    "end": "495740"
  },
  {
    "text": "keep that in mind the the really the the rule of thumb here is if you need to train on large data sets use GPUs if you",
    "start": "495740",
    "end": "504290"
  },
  {
    "text": "need to train on small to mid-size data sets you could actually get a good result with c5 especially if you if you",
    "start": "504290",
    "end": "512479"
  },
  {
    "text": "had a lot of C files if you do distributed training over those instances",
    "start": "512479",
    "end": "517669"
  },
  {
    "text": "and for prediction in most cases CPUs",
    "start": "517669",
    "end": "522810"
  },
  {
    "text": "are going to be the better choice if from a performance point of view and a cost point of view okay so I love GPUs",
    "start": "522810",
    "end": "530250"
  },
  {
    "text": "but they're not always the best choice okay that's my message here okay so",
    "start": "530250",
    "end": "536250"
  },
  {
    "start": "535000",
    "end": "641000"
  },
  {
    "text": "enough about infrastructure let's talk about models actually and how we can use them so probably you've seen this before",
    "start": "536250",
    "end": "546120"
  },
  {
    "text": "right if you this is probably the most popular type of architecture today it's",
    "start": "546120",
    "end": "554040"
  },
  {
    "text": "called the convolutional neural network architecture of CNN it was invented a while ago by Ian Luca French guy I was",
    "start": "554040",
    "end": "563130"
  },
  {
    "text": "running the Facebook AI lab now in Paris and basically these types of network are",
    "start": "563130",
    "end": "569970"
  },
  {
    "text": "extremely good are detecting classifying working with images okay and the reason",
    "start": "569970",
    "end": "578100"
  },
  {
    "text": "for this is because of this convolution operation which is it's a mathematical",
    "start": "578100",
    "end": "583290"
  },
  {
    "text": "operation that helps you extract features from images as you can see from that example on the right we start with",
    "start": "583290",
    "end": "590640"
  },
  {
    "text": "a we start with an image and gradually we shrink it to smaller images but",
    "start": "590640",
    "end": "598529"
  },
  {
    "text": "keeping important features okay I'm not going into the details of convolution",
    "start": "598529",
    "end": "603779"
  },
  {
    "text": "today but ask me questions at the end if you want and we're reducing dimensions",
    "start": "603779",
    "end": "609920"
  },
  {
    "text": "keeping features so literally squeezing the image into something smaller but",
    "start": "609920",
    "end": "616410"
  },
  {
    "text": "something that has still vital information about what the images and we",
    "start": "616410",
    "end": "621540"
  },
  {
    "text": "shrink it again and again and again until we get to something pretty small that we can classify using a standard",
    "start": "621540",
    "end": "628019"
  },
  {
    "text": "fully connected Network and this architecture this is really the most",
    "start": "628019",
    "end": "633990"
  },
  {
    "text": "basic architecture but as we you will see we can extend that to do much more clever things here's an example of a",
    "start": "633990",
    "end": "643199"
  },
  {
    "start": "641000",
    "end": "820000"
  },
  {
    "text": "customer using CNN's for a real life purpose so the customers Expedia right",
    "start": "643199",
    "end": "649079"
  },
  {
    "text": "major travel website and their problem is pretty simple they",
    "start": "649079",
    "end": "655029"
  },
  {
    "text": "have a ton of images a ton of hotels and they want to automatically pick the best",
    "start": "655029",
    "end": "661329"
  },
  {
    "text": "image for a hotel page right because of course if you show nice images this",
    "start": "661329",
    "end": "669519"
  },
  {
    "text": "helps boost conversion people are likely to book hotel rooms so some images are",
    "start": "669519",
    "end": "675130"
  },
  {
    "text": "really good like these for example right they don't they look nice then they give",
    "start": "675130",
    "end": "680170"
  },
  {
    "text": "you a positive image on but not intended on the hotel some other images are not",
    "start": "680170",
    "end": "686709"
  },
  {
    "text": "so great right and you have to keep in mind that some images are user-provided",
    "start": "686709",
    "end": "691810"
  },
  {
    "text": "right people go to the hotels and they take pictures and they upload them so that's how you end up having 10 million",
    "start": "691810",
    "end": "698589"
  },
  {
    "text": "images so which one do you pick right so I'm it's very nice to know there is actually a toilet in the room and that",
    "start": "698589",
    "end": "705100"
  },
  {
    "text": "is useful information but I'm not sure that's actually what I want to see and the nuclear reactor if your nuclear",
    "start": "705100",
    "end": "710980"
  },
  {
    "text": "physicist that's interesting but you know for the rest of us not so much okay so how do you pick automatically the",
    "start": "710980",
    "end": "718300"
  },
  {
    "text": "best image right and the data set is growing all the time as you can see so what they did is they they took a pre",
    "start": "718300",
    "end": "725079"
  },
  {
    "text": "train Network okay so they took a pre trained CNN Network a CNN pretend CNN",
    "start": "725079",
    "end": "731350"
  },
  {
    "text": "train on a very large image data set right and the interest in taking a pre",
    "start": "731350",
    "end": "737019"
  },
  {
    "text": "train network I'll show you an example when in the demos is that well it's pre",
    "start": "737019",
    "end": "742630"
  },
  {
    "text": "trained so you don't have to Train it so you save time and money right expert did",
    "start": "742630",
    "end": "748480"
  },
  {
    "text": "train it so you can just reuse that work and as we call it fine tune it adapt it",
    "start": "748480",
    "end": "755079"
  },
  {
    "text": "with a relatively small number of images to your own business problem it's a very powerful technique",
    "start": "755079",
    "end": "760449"
  },
  {
    "text": "so they took 100k images from their data set so that's 1% they label them so it's",
    "start": "760449",
    "end": "768370"
  },
  {
    "text": "still a bit of work to label 100k images but it's doable right 10 million is not",
    "start": "768370",
    "end": "773410"
  },
  {
    "text": "really doable and they retrained that network using the GPU instances and the",
    "start": "773410",
    "end": "779290"
  },
  {
    "text": "deep learning library called Kara's they retrained in the network on those 100k images right and they were able to",
    "start": "779290",
    "end": "786830"
  },
  {
    "text": "obtain really good results and they put this in production and now automatically the images that are displayed on the",
    "start": "786830",
    "end": "793370"
  },
  {
    "text": "hotel pages are selected by this model okay if you want to know more this link has the full video from one of their",
    "start": "793370",
    "end": "800690"
  },
  {
    "text": "developers that at a tech conference and it goes into all the details of how they did it and it's it's a surprisingly",
    "start": "800690",
    "end": "806450"
  },
  {
    "text": "small project we're not talking six months now just it's just a few weeks because we're using a pre trained",
    "start": "806450",
    "end": "812090"
  },
  {
    "text": "network obviously saves you a lot of time okay here's another example",
    "start": "812090",
    "end": "823010"
  },
  {
    "start": "820000",
    "end": "1048000"
  },
  {
    "text": "it's called object detection so object detection is going one step further than classification detection really wants to",
    "start": "823010",
    "end": "829250"
  },
  {
    "text": "figure out what's in the picture and where okay so as you can see we have bounding boxes around the objects and we",
    "start": "829250",
    "end": "836450"
  },
  {
    "text": "have labels and you have confidence scores okay so it's probably a little tiny here but yeah it's a motorcycle",
    "start": "836450",
    "end": "843640"
  },
  {
    "text": "point nine nine seven percent okay here and as you can see we can figure out a",
    "start": "843640",
    "end": "849680"
  },
  {
    "text": "whole lot of different objects and everything so object detection and well",
    "start": "849680",
    "end": "856220"
  },
  {
    "text": "as you guessed those two samples here they are based on get up projects which",
    "start": "856220",
    "end": "865640"
  },
  {
    "text": "are M X net based projects and these are actually M X net implementations or of",
    "start": "865640",
    "end": "873650"
  },
  {
    "text": "state-of-the-art detection networks that are called our CNN and Yolo and yellow",
    "start": "873650",
    "end": "880160"
  },
  {
    "text": "means you only look once which is a really cool name and that's the real",
    "start": "880160",
    "end": "885500"
  },
  {
    "text": "name of the research paper to write so who said they had no humor so you can",
    "start": "885500",
    "end": "891410"
  },
  {
    "text": "literally go to those get up projects grab the models and use them they give",
    "start": "891410",
    "end": "896570"
  },
  {
    "text": "you the pre trained models to use directly okay so if you have that kind of detection business problem you can",
    "start": "896570",
    "end": "903770"
  },
  {
    "text": "solve it very easily right so long as the objects that you want to detect are",
    "start": "903770",
    "end": "908870"
  },
  {
    "text": "present in the data set that they use for training right here on to detect",
    "start": "908870",
    "end": "915339"
  },
  {
    "text": "icebergs and moose right just a guess you know maybe they're not in the data",
    "start": "915339",
    "end": "922009"
  },
  {
    "text": "set so you have to check right you have to check so object detection going one step",
    "start": "922009",
    "end": "927589"
  },
  {
    "text": "further we have object segmentation which is detection plus finding the",
    "start": "927589",
    "end": "933230"
  },
  {
    "text": "outlines okay and here this is a project by it's an open source project by a company called",
    "start": "933230",
    "end": "938899"
  },
  {
    "text": "too simple they built autonomous driving systems and so it's quite important to",
    "start": "938899",
    "end": "944600"
  },
  {
    "text": "them to figure out where cars are and where pedestrians are and they actually",
    "start": "944600",
    "end": "949699"
  },
  {
    "text": "open sourced their implementation which is again MX that based and it's the",
    "start": "949699",
    "end": "955040"
  },
  {
    "text": "called the mask or CNN network and it's it's a really really",
    "start": "955040",
    "end": "961069"
  },
  {
    "text": "fancy architecture and again you can just grab this and run it in an afternoon on your own system okay so",
    "start": "961069",
    "end": "968629"
  },
  {
    "text": "this is you know this is really cool if you attended Adrienne's talk earlier I'm",
    "start": "968629",
    "end": "975649"
  },
  {
    "text": "sure most of you did he talked about high level services right Amazon recognition etc etc and recognition in",
    "start": "975649",
    "end": "983930"
  },
  {
    "text": "great is great but sometimes you have specific problems like this that recognition cannot handle maybe one day",
    "start": "983930",
    "end": "990139"
  },
  {
    "text": "but not today and you have to go a level deeper and build that's that thing yourself",
    "start": "990139",
    "end": "995149"
  },
  {
    "text": "but it doesn't mean you have to build everything from scratch right because the community has been implementing",
    "start": "995149",
    "end": "1001389"
  },
  {
    "text": "those network in MX net and providing you with pre-trained networks so you can actually save a lot of time so it's a",
    "start": "1001389",
    "end": "1007779"
  },
  {
    "text": "good middle ground between using recognition or trying to do everything from scratch which is a big project and",
    "start": "1007779",
    "end": "1014610"
  },
  {
    "text": "talking about too simple like I said they built autonomous driving systems",
    "start": "1014610",
    "end": "1020199"
  },
  {
    "text": "and last summer they drove the truck or I should say the truck drove itself",
    "start": "1020199",
    "end": "1027209"
  },
  {
    "text": "autonomously for 300 kilometers in in the southwest of the US ok and this is",
    "start": "1027209",
    "end": "1033610"
  },
  {
    "text": "based on MX net on the next at model okay so it's not science fiction it's",
    "start": "1033610",
    "end": "1039250"
  },
  {
    "text": "not just you know geeks having fun on github and releasing stuff it's you know real companies using this stuff to solve",
    "start": "1039250",
    "end": "1045490"
  },
  {
    "text": "real problems here's another example phase detection right again recognition Amazon",
    "start": "1045490",
    "end": "1053520"
  },
  {
    "start": "1048000",
    "end": "1193000"
  },
  {
    "text": "recognition can do phase detection but if you want to build it yourself or add",
    "start": "1053520",
    "end": "1059160"
  },
  {
    "text": "new attributes that are not present in recognition or customize it in any way",
    "start": "1059160",
    "end": "1065250"
  },
  {
    "text": "well you could do that there's this MX net phase project that uses an CNN",
    "start": "1065250",
    "end": "1071940"
  },
  {
    "text": "architecture to do phase detection so not only detecting where phases are but",
    "start": "1071940",
    "end": "1077520"
  },
  {
    "text": "for every single phase providing you with a ton of attributes right and it's",
    "start": "1077520",
    "end": "1082710"
  },
  {
    "text": "fair to say there are more attributes than in recognition so you know good for them interesting interesting project",
    "start": "1082710",
    "end": "1090860"
  },
  {
    "text": "here's an example of using this to do serious stuff it's it's an organization",
    "start": "1090860",
    "end": "1097290"
  },
  {
    "text": "called soaring and well what they do is pretty serious work their mission is to",
    "start": "1097290",
    "end": "1103679"
  },
  {
    "text": "find missing kids right and specifically missing kids that are abused and",
    "start": "1103679",
    "end": "1110220"
  },
  {
    "text": "sexually exploited so that's pretty grim stuff and they're there the way they do",
    "start": "1110220",
    "end": "1116610"
  },
  {
    "text": "that is they go and they build a database of missing kids first of all they try to age the kids because if the",
    "start": "1116610",
    "end": "1125640"
  },
  {
    "text": "kids disappeared when he was 10 let's say you know maybe now it would be 15 so you know kids don't look the same right",
    "start": "1125640",
    "end": "1131940"
  },
  {
    "text": "at 10 and 15 so they're modifying the picture to try to have a realistic picture of the of the kid today and they",
    "start": "1131940",
    "end": "1138870"
  },
  {
    "text": "look for for that face on the darkest spots of the Internet",
    "start": "1138870",
    "end": "1144120"
  },
  {
    "text": "okay and they do this with one of our partners which is called a member sequel",
    "start": "1144120",
    "end": "1150420"
  },
  {
    "text": "and Men sequel builds using AWS infrastructure and and services they",
    "start": "1150420",
    "end": "1157380"
  },
  {
    "text": "built a platform to do this to do this that analysis the aging process and the",
    "start": "1157380",
    "end": "1163230"
  },
  {
    "text": "analysis process between the the pictures and the pictures you would find",
    "start": "1163230",
    "end": "1169350"
  },
  {
    "text": "on the Internet and well you know it's successful because they write another",
    "start": "1169350",
    "end": "1175020"
  },
  {
    "text": "e-stat but I mean it's positive and negative that they find five kids every day right",
    "start": "1175020",
    "end": "1180260"
  },
  {
    "text": "so then they can hopefully send the cops and rescue them so it's an example of again using AI to do serious stuff it's",
    "start": "1180260",
    "end": "1187400"
  },
  {
    "text": "not just again geeks right it's in this case live critical stuff here's another",
    "start": "1187400",
    "end": "1194000"
  },
  {
    "start": "1193000",
    "end": "1263000"
  },
  {
    "text": "project this one is this one is silly and geeky I'll give you that let's go real-time pose estimation so",
    "start": "1194000",
    "end": "1200870"
  },
  {
    "text": "you look at the video feed and and you try to identify the position of your the",
    "start": "1200870",
    "end": "1208730"
  },
  {
    "text": "human body okay so you know shoulders and knees as you can see and you can do",
    "start": "1208730",
    "end": "1213860"
  },
  {
    "text": "this in real time on the video feed okay it's not tracking it's really looking at",
    "start": "1213860",
    "end": "1219350"
  },
  {
    "text": "every single picture okay once again this is based on MX net you can grab and",
    "start": "1219350",
    "end": "1225559"
  },
  {
    "text": "run that model this afternoon if you want okay it's available so as you can",
    "start": "1225559",
    "end": "1230600"
  },
  {
    "text": "see CNN's are you know they're not just to detect dogs and cats okay that's fun",
    "start": "1230600",
    "end": "1237770"
  },
  {
    "text": "it's a good good first tutorial to run but you can go with more much more",
    "start": "1237770",
    "end": "1244010"
  },
  {
    "text": "complicated architectures and and we have a lot of customers we use this for",
    "start": "1244010",
    "end": "1250400"
  },
  {
    "text": "a real purposes right I give you a few example thorn and too simple and and you",
    "start": "1250400",
    "end": "1257600"
  },
  {
    "text": "know we have many more in in many different industries so this is really production stuff another architecture",
    "start": "1257600",
    "end": "1264980"
  },
  {
    "start": "1263000",
    "end": "1434000"
  },
  {
    "text": "that you've run into quite often is called El STM and that means long",
    "start": "1264980",
    "end": "1270400"
  },
  {
    "text": "short-term memory networks that's a very confusing name because that could it be long and short at the same time so",
    "start": "1270400",
    "end": "1277070"
  },
  {
    "text": "they're long yeah that's a weird name and I keep calling an LTS em anyway but",
    "start": "1277070",
    "end": "1283309"
  },
  {
    "text": "so it was the real name is LST M I need to get married around that so they're",
    "start": "1283309",
    "end": "1288860"
  },
  {
    "text": "long because they're very very deep they have many cells linked to one another and they have short-term memory which",
    "start": "1288860",
    "end": "1296150"
  },
  {
    "text": "means when a neuron is predicting it's not just predicting on the input it's",
    "start": "1296150",
    "end": "1301700"
  },
  {
    "text": "predicting on the input and a previous state so they have memory of the",
    "start": "1301700",
    "end": "1307400"
  },
  {
    "text": "previous inputs right but not the thousand previous inputs that's why it's",
    "start": "1307400",
    "end": "1313130"
  },
  {
    "text": "short-term memory so that's a neuron right there I'm not going to go into that today you can",
    "start": "1313130",
    "end": "1319259"
  },
  {
    "text": "thank me the only thing you need to remember is they are good at predicting",
    "start": "1319259",
    "end": "1324980"
  },
  {
    "text": "sequences okay because they have memory so if you want to do if you want to do",
    "start": "1324980",
    "end": "1332490"
  },
  {
    "text": "machine translation right it's important to work on sequences because some words",
    "start": "1332490",
    "end": "1338580"
  },
  {
    "text": "are more likely to follow a given word than any other word right that's - the",
    "start": "1338580",
    "end": "1344909"
  },
  {
    "text": "way our language works so if you remember quote-unquote what the previous word was and what the word before that",
    "start": "1344909",
    "end": "1351600"
  },
  {
    "text": "was then you're likely to make a better prediction for that given word okay and",
    "start": "1351600",
    "end": "1358950"
  },
  {
    "text": "as a matter of fact this architecture is used in an open-source project called",
    "start": "1358950",
    "end": "1364350"
  },
  {
    "text": "Sakai which is an AWS project implemented by our machine learning team in Germany and it's it's a machine",
    "start": "1364350",
    "end": "1371370"
  },
  {
    "text": "translation tool so the model is is the build and you just give a data set so",
    "start": "1371370",
    "end": "1377970"
  },
  {
    "text": "you could provide a Swedish data set and English data set and and you could train",
    "start": "1377970",
    "end": "1384419"
  },
  {
    "text": "Sakai to translate from Swedish to English for example okay just run this on the GPU instance",
    "start": "1384419",
    "end": "1391379"
  },
  {
    "text": "for a few hours or a couple of maybe one days and and you would have a good model okay and this is an example of German -",
    "start": "1391379",
    "end": "1399840"
  },
  {
    "text": "- English okay it's it's there to grab you could also use Amazon Translate I",
    "start": "1399840",
    "end": "1405480"
  },
  {
    "text": "guess Adrien mentioned it earlier right which we release that we invent and the",
    "start": "1405480",
    "end": "1410669"
  },
  {
    "text": "Translate is based on this actually it's a service built on top of this technology okay so if you're looking for",
    "start": "1410669",
    "end": "1416820"
  },
  {
    "text": "a language there that is not available in Translate and typically Swedish isn't available now well you could use Sakai",
    "start": "1416820",
    "end": "1424230"
  },
  {
    "text": "and have get to the same accuracy just by training for maybe one day on a GPU",
    "start": "1424230",
    "end": "1430529"
  },
  {
    "text": "instance okay pretty cool project and the last one I want to touch upon is crazy",
    "start": "1430529",
    "end": "1435840"
  },
  {
    "start": "1434000",
    "end": "1675000"
  },
  {
    "text": "they're called ganz generative adversarial networks and all the",
    "start": "1435840",
    "end": "1441929"
  },
  {
    "text": "networks we've seen so far they try to make sense of the real world right we look at images we look",
    "start": "1441929",
    "end": "1447730"
  },
  {
    "text": "texts and we try to figure out what that is okay ganz are something else",
    "start": "1447730",
    "end": "1453010"
  },
  {
    "text": "ganz are generating new data right such as this so you have to convince yourself",
    "start": "1453010",
    "end": "1460360"
  },
  {
    "text": "that these people do not exist okay these faces have been generated",
    "start": "1460360",
    "end": "1465990"
  },
  {
    "text": "using a data set called the celebrity data set okay and they do not exist",
    "start": "1465990",
    "end": "1471389"
  },
  {
    "text": "these are not real people right which you know would fool literally everyone I",
    "start": "1471389",
    "end": "1478510"
  },
  {
    "text": "think right these are pretty high res pictures okay so this is not an MX net",
    "start": "1478510",
    "end": "1484059"
  },
  {
    "text": "project but it's a gun architecture and what about this one",
    "start": "1484059",
    "end": "1489240"
  },
  {
    "text": "so if you look at the bottom left corner you see sorry if it's a bit small you",
    "start": "1489240",
    "end": "1495190"
  },
  {
    "text": "see what we call a semantic map so a semantic map is the equivalent of what a",
    "start": "1495190",
    "end": "1500799"
  },
  {
    "text": "five-year-old kid will draw right if you told that kid draw me a road and a tree",
    "start": "1500799",
    "end": "1505840"
  },
  {
    "text": "and a car and you can color everything right so they would say okay well I have",
    "start": "1505840",
    "end": "1512500"
  },
  {
    "text": "some trees and I have some people here and have the the sidewalk here and",
    "start": "1512500",
    "end": "1518620"
  },
  {
    "text": "here's the front of the car and that's the road okay so no detail at all just",
    "start": "1518620",
    "end": "1523659"
  },
  {
    "text": "outlines and different colors to show the of course there's the limits okay so you could draw that in paintbrush or on",
    "start": "1523659",
    "end": "1530110"
  },
  {
    "text": "a piece of paper scan it run it through that Peaks to Peaks model and you",
    "start": "1530110",
    "end": "1537669"
  },
  {
    "text": "generate this okay and this is high-res so just go to that page you can zoom on",
    "start": "1537669",
    "end": "1544779"
  },
  {
    "text": "that picture you can read the license plate it's all it's fake obviously but",
    "start": "1544779",
    "end": "1549850"
  },
  {
    "text": "these are proper numbers you can zoom on everything and it looks very realistic and this is generated right so once we",
    "start": "1549850",
    "end": "1559570"
  },
  {
    "text": "learn how to do this on video fake news are going to be very very interesting right",
    "start": "1559570",
    "end": "1566340"
  },
  {
    "text": "but at reinvent our technical conference and in Las Vegas we had a customer",
    "start": "1566340",
    "end": "1574080"
  },
  {
    "text": "Autodesk I'm probably familiar with those guys right they do CAD applications",
    "start": "1574080",
    "end": "1580600"
  },
  {
    "text": "and they do generative what they called generative design so instead of",
    "start": "1580600",
    "end": "1587370"
  },
  {
    "text": "designing let's say car parts or motorcycle parts or mechanical parts",
    "start": "1587370",
    "end": "1593680"
  },
  {
    "text": "like they would do traditionally right they just give the constraints so they say okay the piece should be this size",
    "start": "1593680",
    "end": "1600430"
  },
  {
    "text": "it should have this weight should have this volume should have this mechanical strength bla bla bla",
    "start": "1600430",
    "end": "1606550"
  },
  {
    "text": "just write the equivalent of the semantic map right just mechanical and",
    "start": "1606550",
    "end": "1612760"
  },
  {
    "text": "physical properties okay and the system will actually generate the piece right",
    "start": "1612760",
    "end": "1619600"
  },
  {
    "text": "you can you can find that video on youtubes called generative design just look for reinvent generative design and",
    "start": "1619600",
    "end": "1625690"
  },
  {
    "text": "you'll find it if not ping me I'll send it to you and the system comes up I think they showed an example of a",
    "start": "1625690",
    "end": "1631480"
  },
  {
    "text": "motorcycle part you know the swing arm from the motorcycle the",
    "start": "1631480",
    "end": "1636700"
  },
  {
    "text": "part that you know ties the chassis to to the to the rear wheel if you're if",
    "start": "1636700",
    "end": "1642550"
  },
  {
    "text": "you're a biker you know what I mean if not that's okay it's a fairly large mechanical part and they design it that",
    "start": "1642550",
    "end": "1648670"
  },
  {
    "text": "way and it looks it looks crazy you know it's because the system came with the she came up with a shape that's probably",
    "start": "1648670",
    "end": "1655270"
  },
  {
    "text": "no designer would have ever invented and yet it's lighter and stronger and",
    "start": "1655270",
    "end": "1660390"
  },
  {
    "text": "probably you know less expensive to manufacture than anything they could",
    "start": "1660390",
    "end": "1665440"
  },
  {
    "text": "have designed so now we have we use this kind of technology to actually generate mechanical parts right pretty crazy so",
    "start": "1665440",
    "end": "1674980"
  },
  {
    "text": "this is a quick run-through this is a quick run-through what you can do with",
    "start": "1674980",
    "end": "1682810"
  },
  {
    "start": "1675000",
    "end": "1850000"
  },
  {
    "text": "the with the neural networks and CNN's in particular so let's look at MX net so",
    "start": "1682810",
    "end": "1689080"
  },
  {
    "text": "what is MX net MX net is a deep learning library it's available for multiple",
    "start": "1689080",
    "end": "1694390"
  },
  {
    "text": "languages which tends to be an advantage compared to other libraries so you could do Python Scala C++ Julia R and probably",
    "start": "1694390",
    "end": "1706990"
  },
  {
    "text": "more that I don't know about it's an Apache project so it's not owned by anybody just driven by the",
    "start": "1706990",
    "end": "1713760"
  },
  {
    "text": "she committee it's portable so it really runs obviously well in the cloud but it",
    "start": "1713760",
    "end": "1719700"
  },
  {
    "text": "runs well on smaller devices like a Raspberry Pi and if the demo gods are",
    "start": "1719700",
    "end": "1724980"
  },
  {
    "text": "with me I can show you this and it scales very well so if you have very large datasets if you need to train for",
    "start": "1724980",
    "end": "1731460"
  },
  {
    "text": "a longer period of time you can actually throw more GPUs at the problem on M X",
    "start": "1731460",
    "end": "1737190"
  },
  {
    "text": "net and have linear scaling right so if your problem takes 16 days with one GPU",
    "start": "1737190",
    "end": "1743280"
  },
  {
    "text": "if you use 16 GPUs you'll get pretty close to one day right which again is a",
    "start": "1743280",
    "end": "1748350"
  },
  {
    "text": "major benefit compared to other libraries so MX Net the MX net API",
    "start": "1748350",
    "end": "1754320"
  },
  {
    "text": "supports all the typical building blocks that you would need to build all the",
    "start": "1754320",
    "end": "1761250"
  },
  {
    "text": "kinds of networks that I showed you right so we can do obviously image recognition we can do machine",
    "start": "1761250",
    "end": "1768240"
  },
  {
    "text": "translation text processing etc so you have high level symbols that you can use to build complex networks that look like",
    "start": "1768240",
    "end": "1775770"
  },
  {
    "text": "the ones I showed you just a couple of recent features now you can serve",
    "start": "1775770",
    "end": "1783050"
  },
  {
    "text": "predictions from MX nets so it's not just training and building models you can iver easily deploy them behind a web",
    "start": "1783050",
    "end": "1790980"
  },
  {
    "text": "app and serve predictions from an HTTP endpoint okay so I don't know if I would",
    "start": "1790980",
    "end": "1796380"
  },
  {
    "text": "use this in production I don't know about the scalability but forward for testing for integration environments",
    "start": "1796380",
    "end": "1802230"
  },
  {
    "text": "this is really great because just with one API call you can deploy the model",
    "start": "1802230",
    "end": "1807240"
  },
  {
    "text": "with on and behind and nginx web server",
    "start": "1807240",
    "end": "1812310"
  },
  {
    "text": "and start serving requests another cool feature is called onn X basically it's",
    "start": "1812310",
    "end": "1818820"
  },
  {
    "text": "being able to exchange models between different libraries so that used to be a big problem you know somebody would do",
    "start": "1818820",
    "end": "1824640"
  },
  {
    "text": "something really cool in cafe and well if you wanted to use it in MX net you would have to recode the network and",
    "start": "1824640",
    "end": "1831180"
  },
  {
    "text": "retrain it etc and now using onn X you can import and export models to and from",
    "start": "1831180",
    "end": "1837570"
  },
  {
    "text": "MX net and to a cafe the Microsoft toolkit and another one that I'm that",
    "start": "1837570",
    "end": "1844320"
  },
  {
    "text": "I'm missing ok so it's good for everybody to be able to use the work so obviously we're not",
    "start": "1844320",
    "end": "1851760"
  },
  {
    "start": "1850000",
    "end": "1932000"
  },
  {
    "text": "going to go through the full API but I want to talk about four objects that are really important deep learning always",
    "start": "1851760",
    "end": "1859260"
  },
  {
    "text": "starts with storing data right so once it has been prepared and clean you need",
    "start": "1859260",
    "end": "1864450"
  },
  {
    "text": "to load it into multi-dimensional arrays to to serve it to the model okay so",
    "start": "1864450",
    "end": "1871740"
  },
  {
    "text": "we're going to see that nd array object which means n dimension array okay just",
    "start": "1871740",
    "end": "1877320"
  },
  {
    "text": "all the data to build the models the layers and except the way it's etc we're",
    "start": "1877320",
    "end": "1884040"
  },
  {
    "text": "going to use the symbol API right and we'll use some of those building blocks that you saw in the previous slide to",
    "start": "1884040",
    "end": "1889650"
  },
  {
    "text": "build networks then we need to during training we need to serve the data batch",
    "start": "1889650",
    "end": "1897720"
  },
  {
    "text": "by batch right we're not pushing the whole data set through the network at once we're slicing it in two batches and",
    "start": "1897720",
    "end": "1904490"
  },
  {
    "text": "training batch by batch until the end of the data set okay and we have very",
    "start": "1904490",
    "end": "1910290"
  },
  {
    "text": "useful objects called iterators to do this in other libraries you have to do this manually and finally when we want",
    "start": "1910290",
    "end": "1918420"
  },
  {
    "text": "to put everything together and when we want to train and use models we're going",
    "start": "1918420",
    "end": "1923640"
  },
  {
    "text": "to use the module API okay so ng arrays symbols iterators and modules is what",
    "start": "1923640",
    "end": "1929100"
  },
  {
    "text": "you're going to see in every single example so let's let's go through those for demos right so the first one is",
    "start": "1929100",
    "end": "1937980"
  },
  {
    "start": "1932000",
    "end": "1979000"
  },
  {
    "text": "hello world we're going to build a synthetic data set and learn it and see",
    "start": "1937980",
    "end": "1943260"
  },
  {
    "text": "what happens the second one we're going to classify images with pre-trained models of no training at all just grab a",
    "start": "1943260",
    "end": "1949800"
  },
  {
    "text": "model push some images through see what happens then we're going to train two",
    "start": "1949800",
    "end": "1956160"
  },
  {
    "text": "different networks on the amnesty data set which is very popular it's a it's a",
    "start": "1956160",
    "end": "1961590"
  },
  {
    "text": "good toy data set to work with its handwritten digits from 0 to 9 and we try to classify the images and time",
    "start": "1961590",
    "end": "1969240"
  },
  {
    "text": "permitting I will run the same example on cara's and tensorflow to give you a sense of the differences between those",
    "start": "1969240",
    "end": "1975840"
  },
  {
    "text": "libraries okay so let's get going",
    "start": "1975840",
    "end": "1980240"
  },
  {
    "text": "okay so I'm using a Jupiter notebook to do this so what I'm gonna do here is really pretty basic I'm going to create",
    "start": "1986960",
    "end": "1993750"
  },
  {
    "text": "a matrix right with 10,000 samples okay",
    "start": "1993750",
    "end": "1998940"
  },
  {
    "text": "I'm gonna use 8,000 for training and 2004 testing and each sample is a vector",
    "start": "1998940",
    "end": "2007460"
  },
  {
    "text": "with 100 random floating-point values okay so 10,000 lines 100 columns okay",
    "start": "2007460",
    "end": "2015890"
  },
  {
    "text": "and each sample belongs to one of ten categories and again it's a random",
    "start": "2015890",
    "end": "2020900"
  },
  {
    "text": "category between 0 and 9 I suppose okay so it's fully random data sorry so here",
    "start": "2020900",
    "end": "2028850"
  },
  {
    "text": "are my parameters here okay let's run this stuff okay so like I said 10,000",
    "start": "2028850",
    "end": "2037850"
  },
  {
    "text": "samples 100 features per sample 10 categories all right so here I'm just",
    "start": "2037850",
    "end": "2045830"
  },
  {
    "text": "initializing that matrix which I call X okay so 10,000 by 100 with floating point",
    "start": "2045830",
    "end": "2052490"
  },
  {
    "text": "values between 0 & 1 and I'm initializing the Y vector which",
    "start": "2052490",
    "end": "2058639"
  },
  {
    "text": "is the labels the label for each sample with a random integer between 0 & 9",
    "start": "2058640",
    "end": "2063980"
  },
  {
    "text": "okay so fully random stuff okay then I'm",
    "start": "2063980",
    "end": "2069080"
  },
  {
    "text": "splitting my data set for training and validation okay so 8,000 for training mm",
    "start": "2069080",
    "end": "2076580"
  },
  {
    "text": "right so you can see 8,000 for training mm for",
    "start": "2076580",
    "end": "2081800"
  },
  {
    "text": "testing then I'm going to define a very simple Network okay so I have an input",
    "start": "2081800",
    "end": "2087830"
  },
  {
    "text": "layer that I called data right I'm not specifying any shape right now I'm just",
    "start": "2087830",
    "end": "2093620"
  },
  {
    "text": "saying hey that's the input data I have a first fully connected layer with 1024",
    "start": "2093620",
    "end": "2100280"
  },
  {
    "text": "neurons right and the rel you activate function and I have a second fully",
    "start": "2100280",
    "end": "2106700"
  },
  {
    "text": "connected layer with 10 categories 10 neurons okay and that's it okay so that's the",
    "start": "2106700",
    "end": "2114730"
  },
  {
    "text": "super simple neural network input data one Hinda hidden layer 1024 neurons and",
    "start": "2114730",
    "end": "2120400"
  },
  {
    "text": "then the output layer with the ten categories okay and each neuron on the",
    "start": "2120400",
    "end": "2126160"
  },
  {
    "text": "output layer which will store the probability that this sample belongs to",
    "start": "2126160",
    "end": "2131859"
  },
  {
    "text": "this category okay so this is the simple API I was talking about just need to",
    "start": "2131859",
    "end": "2139599"
  },
  {
    "text": "build an iterator to serve my data set batch by batch okay and then I'm binding",
    "start": "2139599",
    "end": "2147420"
  },
  {
    "text": "the model that I defined to the iterator initializing some parameters and now I",
    "start": "2147420",
    "end": "2154450"
  },
  {
    "text": "can train so now I'm ready to let my model learn my dataset okay so I can see",
    "start": "2154450",
    "end": "2163869"
  },
  {
    "text": "and I'm training for 50 epochs so I'm going 50 times through the data set to",
    "start": "2163869",
    "end": "2170170"
  },
  {
    "text": "let the network learn okay so obviously this is pretty fast here because it's a smallish dataset very small and I can",
    "start": "2170170",
    "end": "2177880"
  },
  {
    "text": "see the training accuracy going up and up and up so my network is properly learning and I even get to one which is",
    "start": "2177880",
    "end": "2183940"
  },
  {
    "text": "machines I perfectly learned it and I get to 450 a pox",
    "start": "2183940",
    "end": "2189609"
  },
  {
    "text": "and yes I learned perfectly so that's fantastic right you can have a fully",
    "start": "2189609",
    "end": "2194790"
  },
  {
    "text": "crappy data set and the network runs it okay mm-hmm what's the catch well the",
    "start": "2194790",
    "end": "2202690"
  },
  {
    "text": "catch is if I want to use now my test data set to do some predictions accuracy",
    "start": "2202690",
    "end": "2209200"
  },
  {
    "text": "is 10% which which makes sense right because there is no structure at all in my data so if you need to randomly",
    "start": "2209200",
    "end": "2217650"
  },
  {
    "text": "classify objects in ten categories well you'll be right ten percent of the time",
    "start": "2217650",
    "end": "2224079"
  },
  {
    "text": "okay so that's the lesson here a neural network can learn anything okay but",
    "start": "2224079",
    "end": "2229390"
  },
  {
    "text": "training accuracy only tells part of the story okay if your data you know garbage",
    "start": "2229390",
    "end": "2235359"
  },
  {
    "text": "in garbage out it was true for a code 20 years ago it's still true for deep learning so if your data set is not",
    "start": "2235359",
    "end": "2242020"
  },
  {
    "text": "formatted correctly or if it has no structure well there's nothing to learn right so",
    "start": "2242020",
    "end": "2247369"
  },
  {
    "text": "be careful of training accuracy validation accuracy is what you want okay so that's the big big lesson to",
    "start": "2247369",
    "end": "2256759"
  },
  {
    "text": "understand so let's move on to classifying pictures just want to show",
    "start": "2256759",
    "end": "2262189"
  },
  {
    "text": "you maybe here I want to run it on a Raspberry Pi but yeah I want to show you the picture first so I'm on the",
    "start": "2262189",
    "end": "2270619"
  },
  {
    "start": "2269000",
    "end": "2617000"
  },
  {
    "text": "Raspberry Pi here so this is what I want",
    "start": "2270619",
    "end": "2276349"
  },
  {
    "text": "to do basically I want to load two different deep learning models I'll show",
    "start": "2276349",
    "end": "2282439"
  },
  {
    "text": "you the code after that just through you the the overview first just you know",
    "start": "2282439",
    "end": "2287529"
  },
  {
    "text": "load a couple of pre train models and predict and the image passed as an",
    "start": "2287529",
    "end": "2297469"
  },
  {
    "text": "argument with those two networks okay all right so basically what I need to do",
    "start": "2297469",
    "end": "2304579"
  },
  {
    "text": "is load the model okay all this code you will all this code is on github and I'm not going to explain every single line",
    "start": "2304579",
    "end": "2310579"
  },
  {
    "text": "just want to point you to the important part so loading a model is actually as simple as this right you download the",
    "start": "2310579",
    "end": "2317329"
  },
  {
    "text": "model file from github or wherever it is okay and you call that load Check Point",
    "start": "2317329",
    "end": "2324849"
  },
  {
    "text": "API with the model name okay and that's it you have a model and you bind it okay",
    "start": "2324849",
    "end": "2332380"
  },
  {
    "text": "like we did before and you have a model ready to serve okay so no training just",
    "start": "2332380",
    "end": "2338359"
  },
  {
    "text": "grab a pre train model and load it okay I need to load the categories I need to",
    "start": "2338359",
    "end": "2345499"
  },
  {
    "text": "have the category names on which that model has been trained and then",
    "start": "2345499",
    "end": "2351499"
  },
  {
    "text": "obviously I need to load my JPEG image into an ende array okay so I use OpenCV",
    "start": "2351499",
    "end": "2359839"
  },
  {
    "text": "to do this load it resize it make sure the red green and blue channels are in the right order etc and",
    "start": "2359839",
    "end": "2367420"
  },
  {
    "text": "then the prediction is really this right I call the forward API on that image",
    "start": "2367420",
    "end": "2374150"
  },
  {
    "text": "that I put in an ND array I read the outputs on the output layer so this model has",
    "start": "2374150",
    "end": "2381890"
  },
  {
    "text": "been trained on the image net data set which has a thousand categories so I will have a thousand probabilities once",
    "start": "2381890",
    "end": "2388730"
  },
  {
    "text": "one for each class so I read them and basically I sort them and I return the",
    "start": "2388730",
    "end": "2396950"
  },
  {
    "text": "top five ones I think right okay I don't want a thousand probabilities I want the",
    "start": "2396950",
    "end": "2402230"
  },
  {
    "text": "top five probabilities okay and that's about it and how much code is this 60",
    "start": "2402230",
    "end": "2410119"
  },
  {
    "text": "lines right and I have two models so okay when I said fifty I was about close so if you can read and write fifty lines",
    "start": "2410119",
    "end": "2416720"
  },
  {
    "text": "of Python you can use pre-trained models and be ready to do this in literally one",
    "start": "2416720",
    "end": "2422030"
  },
  {
    "text": "hour okay even less okay so and don't remember I'm",
    "start": "2422030",
    "end": "2429470"
  },
  {
    "text": "on the Raspberry Pi here right so let's run this okay so just to show",
    "start": "2429470",
    "end": "2437960"
  },
  {
    "text": "you the picture okay here's the picture I'm using okay okay so I need to load",
    "start": "2437960",
    "end": "2445670"
  },
  {
    "text": "the models and these are pretty complex models one of them I think is 50",
    "start": "2445670",
    "end": "2452839"
  },
  {
    "text": "megabytes and the other one is about two hundred megabytes so it takes a while to load but you would need to load them",
    "start": "2452839",
    "end": "2458630"
  },
  {
    "text": "only once okay and then I'm predicting and it's a Raspberry Pi so I need 4.5",
    "start": "2458630",
    "end": "2466700"
  },
  {
    "text": "seconds to do this right so yeah it's not super powerful and I get the top 5",
    "start": "2466700",
    "end": "2471890"
  },
  {
    "text": "probabilities okay so 96.9% you know there's a violin",
    "start": "2471890",
    "end": "2479240"
  },
  {
    "text": "in there which which there is and are we dead here oh nice alright so we won't",
    "start": "2479240",
    "end": "2488810"
  },
  {
    "text": "get the other one is that Wi-Fi dying on me no come on No",
    "start": "2488810",
    "end": "2498600"
  },
  {
    "text": "all right then it's a Raspberry Pi dying on me fine good timing okay",
    "start": "2498600",
    "end": "2505460"
  },
  {
    "text": "but you get the idea okay so you can those are yeah obviously my shell is",
    "start": "2507060",
    "end": "2512820"
  },
  {
    "text": "dead here so you can copy those models obviously no one would ever train",
    "start": "2512820",
    "end": "2518520"
  },
  {
    "text": "anything on on the Raspberry Pi come on",
    "start": "2518520",
    "end": "2531410"
  },
  {
    "text": "but yeah come on boot",
    "start": "2531410",
    "end": "2536569"
  },
  {
    "text": "alright let's try that again okay but you could have your Raspberry",
    "start": "2543070",
    "end": "2549890"
  },
  {
    "text": "Pi or your device just reuse a pre-trained model and and predict stuff",
    "start": "2549890",
    "end": "2556010"
  },
  {
    "text": "okay and there are ways to speed up prediction with the open source libraries etc but of course it is a",
    "start": "2556010",
    "end": "2561710"
  },
  {
    "text": "Raspberry Pi so you're not going to predict at ten images per second or you know it's gonna be it's gonna be a few",
    "start": "2561710",
    "end": "2568700"
  },
  {
    "text": "seconds per image with those Advanced Network but the prediction is really very correct right it's uh here we go",
    "start": "2568700",
    "end": "2575869"
  },
  {
    "text": "all right okay so ResNet six second inception which is faster and shorter 1.7 second",
    "start": "2575869",
    "end": "2583369"
  },
  {
    "text": "with still a very good probability okay so that's MX net running in embedded in",
    "start": "2583369",
    "end": "2588920"
  },
  {
    "text": "the embedded world okay and as you can see the models are here so inception is",
    "start": "2588920",
    "end": "2595160"
  },
  {
    "text": "44 Meg's and ResNet is two hundred and thirty minutes it's a very big network okay so if you can load them in RAM they",
    "start": "2595160",
    "end": "2603980"
  },
  {
    "text": "should work okay so obviously same exact code I would run somewhere else okay",
    "start": "2603980",
    "end": "2611570"
  },
  {
    "text": "let's move on where's that window here okay so here",
    "start": "2611570",
    "end": "2621440"
  },
  {
    "text": "I'm going to yeah I'm going to do this one so I'm going that network that I showed you the the lunette network the",
    "start": "2621440",
    "end": "2630020"
  },
  {
    "text": "first CNN I showed you with the traffic sign that it's that one actually with a few modifications so it's a it's a basic",
    "start": "2630020",
    "end": "2636530"
  },
  {
    "text": "network but it does work very well so what do I need to do here well I'm",
    "start": "2636530",
    "end": "2643070"
  },
  {
    "text": "loading my data set we have a pre-existing iterator for reminisce so that's very convenient just give them",
    "start": "2643070",
    "end": "2648950"
  },
  {
    "text": "the file names and it builds the iterator here's the lunette network okay so we can see an input layer and then a",
    "start": "2648950",
    "end": "2657070"
  },
  {
    "text": "succession of convolution and pooling layers to CRO to squeeze the image and",
    "start": "2657070",
    "end": "2662200"
  },
  {
    "text": "then a fully connected layer to classify it into ten categories okay pretty basic",
    "start": "2662200",
    "end": "2669740"
  },
  {
    "text": "architecture very fast to train still pretty efficient okay so yeah we need to do this we need to",
    "start": "2669740",
    "end": "2677700"
  },
  {
    "text": "bind the model to the to the iterator and then we can train and as you can see it's very similar code right it's you",
    "start": "2677700",
    "end": "2685230"
  },
  {
    "text": "will see this in MX now it's always the same steps right so you know it's defined a network bind train and here",
    "start": "2685230",
    "end": "2693240"
  },
  {
    "text": "I'm training for is it 25 a box I think okay so I'm training on a on an ec2",
    "start": "2693240",
    "end": "2700349"
  },
  {
    "text": "instance I can see my training accuracy going up right it takes about two",
    "start": "2700349",
    "end": "2711300"
  },
  {
    "text": "seconds for a talk all right so we'll get to 25 in a few seconds and then I'm",
    "start": "2711300",
    "end": "2721230"
  },
  {
    "text": "going to save the model okay that's all it takes and I'm gonna reuse it to",
    "start": "2721230",
    "end": "2727260"
  },
  {
    "text": "predict some digits are we there are we",
    "start": "2727260",
    "end": "2739740"
  },
  {
    "text": "done yeah looks like it okay so we get",
    "start": "2739740",
    "end": "2745260"
  },
  {
    "text": "to the 25 F box save the morale measure",
    "start": "2745260",
    "end": "2750690"
  },
  {
    "text": "its accuracy using the validation it the validation data set okay so 99% that's",
    "start": "2750690",
    "end": "2756540"
  },
  {
    "text": "that's quite good and now I can predict some samples so these are real samples",
    "start": "2756540",
    "end": "2763950"
  },
  {
    "text": "that I drew you know with paintbrush because that's what real life looks like it's ugly you need to test with real",
    "start": "2763950",
    "end": "2770700"
  },
  {
    "text": "life samples okay so again I need a small function to load my image into an",
    "start": "2770700",
    "end": "2776339"
  },
  {
    "text": "ND array the predicted code is exactly the one you saw before right just call forward okay I need to load that Lynette",
    "start": "2776339",
    "end": "2785880"
  },
  {
    "text": "model here we go and then I can I need to predict my images so here's my zero",
    "start": "2785880",
    "end": "2791880"
  },
  {
    "text": "and well it is really predicted as a zero right that vector you see is the",
    "start": "2791880",
    "end": "2797940"
  },
  {
    "text": "ten probabilities for each class right so it's actually zero nine nine nine nine nine but I think I stopped at four",
    "start": "2797940",
    "end": "2804869"
  },
  {
    "text": "decimal so it's rounded up to one okay okay well one is good yeah pretty",
    "start": "2804869",
    "end": "2814210"
  },
  {
    "text": "good two is pretty true it's very good three is great four five so this is a",
    "start": "2814210",
    "end": "2821590"
  },
  {
    "text": "very good model as you can see it's simple but it's very good at this and I have a notably ugly nine yep so as you",
    "start": "2821590",
    "end": "2831460"
  },
  {
    "text": "can see even though it's very ugly nine and it's a lower probability but there",
    "start": "2831460",
    "end": "2836950"
  },
  {
    "text": "is no doubt right that's really the highest one okay so here's an example five minutes of",
    "start": "2836950",
    "end": "2842800"
  },
  {
    "text": "training on a very small data set and small images these are 32 by 32 pixels you can build a solid solution right if",
    "start": "2842800",
    "end": "2850390"
  },
  {
    "text": "you could do this with a hand right for to recognize the handwriting etc etc okay all right so just a really very",
    "start": "2850390",
    "end": "2858700"
  },
  {
    "text": "quick look I'm not gonna run it but I'm gonna show you what it would look like in this other library called chaos okay",
    "start": "2858700",
    "end": "2868750"
  },
  {
    "text": "so chaos is an open source project and you can use different backends so you",
    "start": "2868750",
    "end": "2874120"
  },
  {
    "text": "can use it with tensorflow you can use it with MX net you can use it with a piano so it's a high level API that's",
    "start": "2874120",
    "end": "2881770"
  },
  {
    "text": "very popular with developers and as you can see okay this is how you define a",
    "start": "2881770",
    "end": "2888460"
  },
  {
    "text": "network in Carris and again you have the link to the notebooks so you can replay that you know it's pretty similar it's",
    "start": "2888460",
    "end": "2895210"
  },
  {
    "text": "pretty high level and this is how you defined this is how you define that it's",
    "start": "2895210",
    "end": "2901090"
  },
  {
    "text": "pretty much the lunette Network again just a few API is just combining layers",
    "start": "2901090",
    "end": "2906840"
  },
  {
    "text": "and then okay compiling it okay it's not",
    "start": "2906840",
    "end": "2915460"
  },
  {
    "text": "called bind it's called compiled in Carris and then you call fit to train it okay it's very",
    "start": "2915460",
    "end": "2921970"
  },
  {
    "text": "similar so you have a choice of libraries you know a table it's like some x net for the reason I mentioned",
    "start": "2921970",
    "end": "2927430"
  },
  {
    "text": "but Carris is a popular choice some other people use Caffe some other people use pi torch etc they will all run well",
    "start": "2927430",
    "end": "2934540"
  },
  {
    "text": "on the GPU instances okay all right okay so now yeah maybe this one before so how",
    "start": "2934540",
    "end": "2943540"
  },
  {
    "text": "do you get started with this stuff this is just a very fast overview just to show you what's possible and show you",
    "start": "2943540",
    "end": "2949030"
  },
  {
    "start": "2945000",
    "end": "3071000"
  },
  {
    "text": "that my 50 lines of Python promise is not fake all right you know I'm not deep",
    "start": "2949030",
    "end": "2956440"
  },
  {
    "text": "learning scientist I'm software engineer I learn this stuff and I guess I could read 50 lines of Python and now I can",
    "start": "2956440",
    "end": "2963370"
  },
  {
    "text": "read a little more and do a little more but anyone in this room can do this so if you want proper steps to get started",
    "start": "2963370",
    "end": "2969880"
  },
  {
    "text": "with this you can go to my blog on medium and I'll give you the URL in a",
    "start": "2969880",
    "end": "2975940"
  },
  {
    "text": "second I just wrote days ago a two-part post which I call the 10 steps on the",
    "start": "2975940",
    "end": "2981190"
  },
  {
    "text": "road to deep running which are okay what what should you learn in what order and how should you learn and this is how I",
    "start": "2981190",
    "end": "2987820"
  },
  {
    "text": "did it so you know it worked for me hopefully it's gonna work for a lot of people and you know I'm happy to get",
    "start": "2987820",
    "end": "2993820"
  },
  {
    "text": "your feedback on this so some additional resources so the top level machine",
    "start": "2993820",
    "end": "3000780"
  },
  {
    "text": "learning page at WS the AI blog which",
    "start": "3000780",
    "end": "3006150"
  },
  {
    "text": "has the very cool content and my posts I got a post yesterday yes so it is very",
    "start": "3006150",
    "end": "3011430"
  },
  {
    "text": "cool content the MX net website dmx light sources and now an api which is",
    "start": "3011430",
    "end": "3018360"
  },
  {
    "text": "called gluon which is part of MX net which is high level had a lot of pre",
    "start": "3018360",
    "end": "3025230"
  },
  {
    "text": "trained models so you should look at glue on and the glue on documentation is really really great it's a great",
    "start": "3025230",
    "end": "3031050"
  },
  {
    "text": "introduction to deep learning too so my blog on medium and that post that I just",
    "start": "3031050",
    "end": "3036600"
  },
  {
    "text": "mentioned that should help you get started okay do not be afraid you can all do it all",
    "start": "3036600",
    "end": "3045150"
  },
  {
    "text": "right well I'm done thank you very much if you have questions I think we maybe",
    "start": "3045150",
    "end": "3051090"
  },
  {
    "text": "have a few minutes for questions if I'm not too late and and then I think we have a talk yang",
    "start": "3051090",
    "end": "3058410"
  },
  {
    "text": "I saw a news over there yeah Andy's doing a talk on chat BOTS and then I",
    "start": "3058410",
    "end": "3064170"
  },
  {
    "text": "will be back with more deep learning more notebooks and more more examples thank you very much",
    "start": "3064170",
    "end": "3070280"
  },
  {
    "text": "[Applause]",
    "start": "3070280",
    "end": "3073469"
  }
]