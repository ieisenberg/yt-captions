[
  {
    "text": "- [Michael] Hello, my\nname is Michael Chess",
    "start": "870",
    "end": "3030"
  },
  {
    "text": "and I'm a technical product manager",
    "start": "3030",
    "end": "5100"
  },
  {
    "text": "on the AWS Glue Data Catalog\nand AWS Lake Formation.",
    "start": "5100",
    "end": "9210"
  },
  {
    "text": "Today I'll be talking about",
    "start": "9210",
    "end": "10440"
  },
  {
    "text": "how to create Glue Data Catalog views",
    "start": "10440",
    "end": "13200"
  },
  {
    "text": "and query them from Amazon\nAthena and an Amazon Redshift.",
    "start": "13200",
    "end": "16713"
  },
  {
    "text": "AWS Glue Data Catalog views\nallow you to do a few things",
    "start": "22650",
    "end": "25710"
  },
  {
    "text": "that are extremely\nuseful in the data lake.",
    "start": "25710",
    "end": "28529"
  },
  {
    "text": "First, you can create one view schema",
    "start": "28530",
    "end": "30960"
  },
  {
    "text": "and query that same view\nfrom multiple engines",
    "start": "30960",
    "end": "34590"
  },
  {
    "text": "by creating a separate\ndialect for each engine",
    "start": "34590",
    "end": "38070"
  },
  {
    "text": "that you want to query,",
    "start": "38070",
    "end": "39270"
  },
  {
    "text": "and I'll show how to do\nthat a little bit later.",
    "start": "39270",
    "end": "41490"
  },
  {
    "text": "Additionally, you can\ngrant permissions on a view",
    "start": "41490",
    "end": "44280"
  },
  {
    "text": "using AWS Lake Formation permissions,",
    "start": "44280",
    "end": "46620"
  },
  {
    "text": "and when you do so, you only\nneed to grant on the view",
    "start": "46620",
    "end": "49739"
  },
  {
    "text": "and not the tables referenced in the view.",
    "start": "49740",
    "end": "52680"
  },
  {
    "text": "This means that consumers\ncan query the view",
    "start": "52680",
    "end": "54570"
  },
  {
    "text": "without having access\nto the underlying data.",
    "start": "54570",
    "end": "57630"
  },
  {
    "text": "Additionally, you can\nshare views across accounts",
    "start": "57630",
    "end": "59910"
  },
  {
    "text": "and link across regions the same way",
    "start": "59910",
    "end": "61890"
  },
  {
    "text": "that you would with tables.",
    "start": "61890",
    "end": "64110"
  },
  {
    "text": "Now I'll show a demo of how to\nuse views in the AWS Console.",
    "start": "64110",
    "end": "69110"
  },
  {
    "text": "Here in the AWS Lake Formation Console,",
    "start": "69180",
    "end": "72090"
  },
  {
    "text": "we have a demo database containing tables",
    "start": "72090",
    "end": "75000"
  },
  {
    "text": "with the highest earning eSports teams,",
    "start": "75000",
    "end": "77700"
  },
  {
    "text": "the highest earning eSports players,",
    "start": "77700",
    "end": "79530"
  },
  {
    "text": "and a helper table with\ninformation about countries",
    "start": "79530",
    "end": "81990"
  },
  {
    "text": "and continents and their codes.",
    "start": "81990",
    "end": "84123"
  },
  {
    "text": "If we take a look at the\nhighest_earning_players list,",
    "start": "84960",
    "end": "87870"
  },
  {
    "text": "we can see that it contains\ninformation about the players",
    "start": "87870",
    "end": "90720"
  },
  {
    "text": "and a code indicating\nwhat country they play in.",
    "start": "91950",
    "end": "95759"
  },
  {
    "text": "If I navigate",
    "start": "95760",
    "end": "96593"
  },
  {
    "text": "to the Amazon Redshift\nQuery Editor v2 Console,",
    "start": "96593",
    "end": "100020"
  },
  {
    "text": "you can see a CREATE EXTERNAL\nPROTECTED VIEW statement",
    "start": "100020",
    "end": "102750"
  },
  {
    "text": "called europe_players.",
    "start": "102750",
    "end": "104543"
  },
  {
    "text": "This view filters out all of\nthe players who play in Europe.",
    "start": "105390",
    "end": "109713"
  },
  {
    "text": "We can see that this is accomplished",
    "start": "110640",
    "end": "112080"
  },
  {
    "text": "by matching the player's country code",
    "start": "112080",
    "end": "113530"
  },
  {
    "text": "with the two-letter country code",
    "start": "113530",
    "end": "115530"
  },
  {
    "text": "in the country's helper table,",
    "start": "115530",
    "end": "117390"
  },
  {
    "text": "and then validating that\nthat country's continent code",
    "start": "117390",
    "end": "120390"
  },
  {
    "text": "is Europe.",
    "start": "120390",
    "end": "121353"
  },
  {
    "text": "If I click the Run button,\nI will now create a view.",
    "start": "122400",
    "end": "125643"
  },
  {
    "text": "If I navigate to this query,",
    "start": "130830",
    "end": "132900"
  },
  {
    "text": "you can see a select * statement",
    "start": "132900",
    "end": "134640"
  },
  {
    "text": "from the view I just created,",
    "start": "134640",
    "end": "136503"
  },
  {
    "text": "and you can see that only\ncountries in Europe are selected.",
    "start": "139650",
    "end": "143523"
  },
  {
    "text": "If I now navigate to the\nAWS Lake Formation Console",
    "start": "145890",
    "end": "148650"
  },
  {
    "text": "to our New Views tab in the left nav,",
    "start": "148650",
    "end": "151590"
  },
  {
    "text": "you can see that I have two views,",
    "start": "151590",
    "end": "154110"
  },
  {
    "text": "one filtering out Europe players",
    "start": "154110",
    "end": "156030"
  },
  {
    "text": "and the other filtering out US players.",
    "start": "156030",
    "end": "158073"
  },
  {
    "text": "If I take a look at the\nview we just created,",
    "start": "159300",
    "end": "161940"
  },
  {
    "text": "we can see that it has the\ncolumns that I specified.",
    "start": "161940",
    "end": "166050"
  },
  {
    "text": "Additionally, you can\nsee a SQL Definitions tab",
    "start": "166050",
    "end": "169560"
  },
  {
    "text": "containing a Redshift SQL definition.",
    "start": "169560",
    "end": "171752"
  },
  {
    "text": "If I navigate to the\nAmazon Athena Console,",
    "start": "176310",
    "end": "179340"
  },
  {
    "text": "I can now alter the view I just created",
    "start": "179340",
    "end": "181950"
  },
  {
    "text": "to add a dialect for Amazon Athena.",
    "start": "181950",
    "end": "184920"
  },
  {
    "text": "Here you can see an ALTER VIEW\nstatement, ADD DIALECT AS,",
    "start": "184920",
    "end": "188790"
  },
  {
    "text": "and then a query.",
    "start": "188790",
    "end": "190140"
  },
  {
    "text": "This will add a dialect for Amazon Athena",
    "start": "190140",
    "end": "192420"
  },
  {
    "text": "to the view I just created,",
    "start": "192420",
    "end": "194670"
  },
  {
    "text": "which will be used when\nthat view is queried",
    "start": "194670",
    "end": "196980"
  },
  {
    "text": "from Amazon Athena.",
    "start": "196980",
    "end": "198333"
  },
  {
    "text": "Here you can see the same logic",
    "start": "199770",
    "end": "201900"
  },
  {
    "text": "that I included in the Redshift view.",
    "start": "201900",
    "end": "203913"
  },
  {
    "text": "If I execute this alter,",
    "start": "208230",
    "end": "210420"
  },
  {
    "text": "a new dialect will be added to the view.",
    "start": "210420",
    "end": "213063"
  },
  {
    "text": "I can now navigate to a\nquery against that view",
    "start": "214110",
    "end": "217470"
  },
  {
    "text": "and query it from Amazon Athena,",
    "start": "217470",
    "end": "219363"
  },
  {
    "text": "and you'll see that I get the same results",
    "start": "220410",
    "end": "222630"
  },
  {
    "text": "that I got from Amazon Redshift,",
    "start": "222630",
    "end": "225150"
  },
  {
    "text": "only countries that are in Europe.",
    "start": "225150",
    "end": "226862"
  },
  {
    "text": "If I navigate back to my view",
    "start": "229050",
    "end": "230550"
  },
  {
    "text": "in the AWS Lake Formation Console,",
    "start": "230550",
    "end": "232623"
  },
  {
    "text": "we can see that in the\nSQL Definitions list,",
    "start": "237390",
    "end": "240420"
  },
  {
    "text": "a definition for Amazon\nAthena has been added.",
    "start": "240420",
    "end": "242972"
  },
  {
    "text": "If I now want to grant access to this view",
    "start": "244800",
    "end": "246750"
  },
  {
    "text": "to a different principle",
    "start": "246750",
    "end": "247650"
  },
  {
    "text": "who doesn't have access\nto the underlying tables,",
    "start": "247650",
    "end": "250680"
  },
  {
    "text": "I can do so from the Actions\ntab in the upper right,",
    "start": "250680",
    "end": "254069"
  },
  {
    "text": "the same way that I would for a table.",
    "start": "254070",
    "end": "255970"
  },
  {
    "text": "Here I select Grant",
    "start": "257190",
    "end": "259320"
  },
  {
    "text": "and we can see that in Named\nData Catalog Resources,",
    "start": "259320",
    "end": "262800"
  },
  {
    "text": "the view has already been selected.",
    "start": "262800",
    "end": "264573"
  },
  {
    "text": "Now I can navigate down to the bottom",
    "start": "266460",
    "end": "269400"
  },
  {
    "text": "and choose the Select permission to grant.",
    "start": "269400",
    "end": "272193"
  },
  {
    "text": "Up above, I will pick a\nnon-ad admin principle",
    "start": "275310",
    "end": "277530"
  },
  {
    "text": "to whom I would like to grant permissions.",
    "start": "277530",
    "end": "279630"
  },
  {
    "text": "If I now navigate to the\nAmazon Athena Console",
    "start": "282660",
    "end": "285720"
  },
  {
    "text": "on behalf of the non-ad admin principle",
    "start": "285720",
    "end": "287640"
  },
  {
    "text": "to whom I just granted privileges,",
    "start": "287640",
    "end": "289680"
  },
  {
    "text": "we can see that this principle",
    "start": "289680",
    "end": "291060"
  },
  {
    "text": "can only see the europe_players' view",
    "start": "291060",
    "end": "293190"
  },
  {
    "text": "and cannot see any of\nthe underlying tables.",
    "start": "293190",
    "end": "295863"
  },
  {
    "text": "Despite not being able to\nsee the underlying tables,",
    "start": "296940",
    "end": "299850"
  },
  {
    "text": "I can still query this view\non behalf of this principle,",
    "start": "299850",
    "end": "303423"
  },
  {
    "text": "And we can see that the same results",
    "start": "308505",
    "end": "310140"
  },
  {
    "text": "that the admin principle saw",
    "start": "310140",
    "end": "312150"
  },
  {
    "text": "are seen from this non-ad admin principle.",
    "start": "312150",
    "end": "314823"
  },
  {
    "text": "If I navigate to this query\nagainst the base table,",
    "start": "317010",
    "end": "320043"
  },
  {
    "text": "I can see that this principle\ncannot query the base table.",
    "start": "321000",
    "end": "324123"
  },
  {
    "text": "Here we have a demonstration",
    "start": "327150",
    "end": "328650"
  },
  {
    "text": "of how this principle can query the view,",
    "start": "328650",
    "end": "330840"
  },
  {
    "text": "but not the base table.",
    "start": "330840",
    "end": "332313"
  },
  {
    "text": "Thank you for watching this demo",
    "start": "333600",
    "end": "334830"
  },
  {
    "text": "on how AWS Glue Data Catalog views work.",
    "start": "334830",
    "end": "337680"
  },
  {
    "text": "For more information,\nplease see our documentation",
    "start": "337680",
    "end": "340110"
  },
  {
    "text": "at docs.aws.amazon.com in our\nWorking With Views section",
    "start": "340110",
    "end": "344729"
  },
  {
    "text": "or in the documentation of\none of our compatible engines,",
    "start": "344730",
    "end": "347400"
  },
  {
    "text": "Amazon EMR, Amazon Athena,\nor Amazon Redshift.",
    "start": "347400",
    "end": "350970"
  },
  {
    "text": "Thank you.",
    "start": "350970",
    "end": "351803"
  }
]