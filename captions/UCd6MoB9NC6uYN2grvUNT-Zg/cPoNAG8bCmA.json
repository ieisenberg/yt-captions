[
  {
    "text": "Security is the cornerstone of modern organizations and a crucial part ",
    "start": "5733",
    "end": "9813"
  },
  {
    "text": "of protecting their applications, data and reputation. ",
    "start": "9813",
    "end": "13120"
  },
  {
    "text": "It was not that difficult when their applications hosted in on-premises ",
    "start": "13421",
    "end": "17467"
  },
  {
    "text": "data centers and accessed from the corporate buildings. As enterprises moved ",
    "start": "17468",
    "end": "22782"
  },
  {
    "text": "their workload to cloud and employees started working remotely, ",
    "start": "22783",
    "end": "26018"
  },
  {
    "text": "it's a big challenge for the organizations to securely grant access to their applications.",
    "start": "26524",
    "end": "31838"
  },
  {
    "text": "Employees need to access applications by VPN. ",
    "start": "32252",
    "end": "35554"
  },
  {
    "text": "Organizations need to add security policy at multiple levels to secure their ",
    "start": "36089",
    "end": "40423"
  },
  {
    "text": "applications, like VPN policy, device policy, and application policy. ",
    "start": "40423",
    "end": "45772"
  },
  {
    "text": "These policies are managed by different teams and potentially creating overlaps, ",
    "start": "46155",
    "end": "51182"
  },
  {
    "text": "making it difficult to diagnose any application access issues. ",
    "start": "51183",
    "end": "55432"
  },
  {
    "text": "It takes months and a lot of coordination between different teams ",
    "start": "55567",
    "end": "58870"
  },
  {
    "text": "to roll out any policy update. ",
    "start": "58870",
    "end": "60870"
  },
  {
    "text": "AWS’ new product, AWS Verified Access will help you to overcome these challenges, ",
    "start": "61121",
    "end": "66554"
  },
  {
    "text": "and makes your applications secure. ",
    "start": "66554",
    "end": "68419"
  },
  {
    "text": "Hi, my name is Ankush Goyal, and I'm a Senior Technical Account Manager at AWS,",
    "start": "68729",
    "end": "73503"
  },
  {
    "text": "and in this video I will talk about a new service, AWS Verified Access, ",
    "start": "73643",
    "end": "77808"
  },
  {
    "text": "also known as AVA.",
    "start": "77809",
    "end": "79386"
  },
  {
    "text": "AVA helps employees access the corporate applications over the Internet ",
    "start": "79588",
    "end": "83802"
  },
  {
    "text": "without requiring a VPN, and helps organizations to manage ",
    "start": "83804",
    "end": "87816"
  },
  {
    "text": "policy at a single place.",
    "start": "87816",
    "end": "89545"
  },
  {
    "text": "AVA is built using Zero Trust security principles.  ",
    "start": "89666",
    "end": "93239"
  },
  {
    "text": "Zero Trust is a security model based on the principle of maintaining ",
    "start": "93239",
    "end": "97962"
  },
  {
    "text": "strict access controls and not trusting any entity by default.",
    "start": "97963",
    "end": "102000"
  },
  {
    "text": "AVA helps organizations to improve their security posture by leveraging multiple ",
    "start": "102956",
    "end": "107782"
  },
  {
    "text": "security inputs and grants access to applications when user and their device ",
    "start": "107782",
    "end": "113215"
  },
  {
    "text": "meet the specified security requirements.",
    "start": "113215",
    "end": "115807"
  },
  {
    "text": "It validates each access request regardless of user, network, or location",
    "start": "116162",
    "end": "121426"
  },
  {
    "text": "before granting the access.",
    "start": "121426",
    "end": "123426"
  },
  {
    "text": "AVA helps organizations to manage policy at a central place instead of managing",
    "start": "124238",
    "end": "129164"
  },
  {
    "text": "at different levels.",
    "start": "129164",
    "end": "130623"
  },
  {
    "text": "It also integrates with AWS Web Application Firewall, also known as WAF.",
    "start": "130624",
    "end": "135601"
  },
  {
    "text": "WAF helps customers to filter out common exploits, such as ",
    "start": "136007",
    "end": "140104"
  },
  {
    "text": "SQL injection and cross-site scripting.",
    "start": "140104",
    "end": "143457"
  },
  {
    "text": "Now let’s see this in action, and see how you can create AVA in your console. ",
    "start": "144015",
    "end": "149278"
  },
  {
    "text": "In this demo, first we will see how you can control access ",
    "start": "150001",
    "end": "153556"
  },
  {
    "text": "to your corporate applications",
    "start": "153556",
    "end": "155370"
  },
  {
    "text": "by using AWS Verified Access policies.",
    "start": "155370",
    "end": "158232"
  },
  {
    "text": "And then we will see how you can integrate WAF with AWS Verified Access.",
    "start": "158436",
    "end": "163379"
  },
  {
    "text": "For this demo, I've already created a Verified Access instance",
    "start": "164242",
    "end": "167663"
  },
  {
    "text": "where I will be using IAM Identity Center as my trust provider.",
    "start": "167663",
    "end": "172014"
  },
  {
    "text": "I also created a Verified Access group for my HR application where I have a policy ",
    "start": "172521",
    "end": "178411"
  },
  {
    "text": "saying that any user who belonged to my HR user group",
    "start": "178411",
    "end": "182457"
  },
  {
    "text": "and has an email address of Amazon dot com should be able ",
    "start": "182457",
    "end": "186994"
  },
  {
    "text": "to access this application.",
    "start": "186995",
    "end": "188894"
  },
  {
    "text": "I have also created an end point for my HR application which we will use ",
    "start": "189143",
    "end": "192767"
  },
  {
    "text": "to access this application. ",
    "start": "192767",
    "end": "194767"
  },
  {
    "text": "On the IAM Identity Center site, I've created a HR group which has two users, ",
    "start": "195337",
    "end": "200094"
  },
  {
    "text": "HR underscore Amazon underscore user. And HR underscore AWS underscore user.",
    "start": "200095",
    "end": "205004"
  },
  {
    "text": "One of the users has an email address ending with Amazon dot com. ",
    "start": "205410",
    "end": "208797"
  },
  {
    "text": "Other user has an email address ending with the AWS dot com.",
    "start": "209034",
    "end": "212594"
  },
  {
    "text": "So based on our AWS Verified Access policy, my user with an email address ",
    "start": "212595",
    "end": "218197"
  },
  {
    "text": "ending in Amazon dot com should be able to access that corporate application,",
    "start": "218198",
    "end": "223005"
  },
  {
    "text": "where the other user should not be able to access the corporate application.",
    "start": "223031",
    "end": "227027"
  },
  {
    "text": "Next we will go to a separate browser where we will try to access this application ",
    "start": "227331",
    "end": "231698"
  },
  {
    "text": "by using our AWS Verified Access endpoint.",
    "start": "231699",
    "end": "234612"
  },
  {
    "text": "I’ve opened a separate private browser where I will try to access this application",
    "start": "235965",
    "end": "240487"
  },
  {
    "text": "by using my Verified Access endpoint.",
    "start": "240488",
    "end": "242555"
  },
  {
    "text": "I will enter the user name of the user which is Amazon dot com as an email address.",
    "start": "246965",
    "end": "252077"
  },
  {
    "text": "Now we see this user is able to access the HR application because the email address",
    "start": "261317",
    "end": "265955"
  },
  {
    "text": "for this user is Amazon dot com,",
    "start": "265955",
    "end": "267853"
  },
  {
    "text": "and the user belongs to the HR group which satisfies the condition we have ",
    "start": "267854",
    "end": "271579"
  },
  {
    "text": "written out in the AWS Verified Access policy.",
    "start": "271579",
    "end": "274577"
  },
  {
    "text": "Next, we will try to log in by using the other user which is AWS dot com ",
    "start": "274797",
    "end": "278539"
  },
  {
    "text": "as the email address.",
    "start": "278539",
    "end": "280421"
  },
  {
    "text": "I have again opened a private browser. We will try to access this application ",
    "start": "280422",
    "end": "284654"
  },
  {
    "text": "by using the AWS Verified Access endpoint.",
    "start": "284654",
    "end": "287160"
  },
  {
    "text": "I will enter the username of the user which is AWS dot com as the email address.",
    "start": "291000",
    "end": "296281"
  },
  {
    "text": "As you see, this user has AWS dot com as an email address is not able to",
    "start": "302737",
    "end": "307392"
  },
  {
    "text": "access this application and we're getting 403 Unauthorized error message.",
    "start": "307393",
    "end": "312116"
  },
  {
    "text": "Next, let's see how you can integrate AWS WAF with AWS Verified Access instance.",
    "start": "312793",
    "end": "318074"
  },
  {
    "text": "For that go to Verify Access instance console and click on Integrations tab.",
    "start": "318767",
    "end": "323473"
  },
  {
    "text": "Here you have two options, either you can create a new Web ACL, ",
    "start": "324183",
    "end": "327299"
  },
  {
    "text": "but if you've already created an ACL,",
    "start": "327299",
    "end": "329654"
  },
  {
    "text": "then you can click on Action and Associate Web ACL.",
    "start": "329654",
    "end": "333193"
  },
  {
    "text": "Select the Web ACL you have created and click on Associate Web ACL.",
    "start": "333193",
    "end": "338608"
  },
  {
    "text": "You can also integrate AWS WAF with AWS Verified Access instance from AWS WAF web console.",
    "start": "341865",
    "end": "347754"
  },
  {
    "text": "For that, go to AWS WAF web console and open the Web ACL you want to integrate.",
    "start": "347754",
    "end": "352189"
  },
  {
    "text": "Open the Web ACL, click on Associated AWS resources, and click on ",
    "start": "352190",
    "end": "357200"
  },
  {
    "text": "Add AWS resources.",
    "start": "357200",
    "end": "359082"
  },
  {
    "text": "Here select AWS Verified Access and then click the Verified Access instance ",
    "start": "359356",
    "end": "363960"
  },
  {
    "text": "and click on Add.",
    "start": "363960",
    "end": "365960"
  },
  {
    "text": "Under this Web ACL I have block any SQL injection related queries.",
    "start": "367116",
    "end": "372481"
  },
  {
    "text": "Next, we'll try to log in to our Sales application, and we'll see how ",
    "start": "372658",
    "end": "377093"
  },
  {
    "text": "WAF can help us to block any SQL injection attempts.",
    "start": "377093",
    "end": "380899"
  },
  {
    "text": "I open a private browser where I'm trying to access my Sales application, ",
    "start": "381643",
    "end": "385825"
  },
  {
    "text": "by passing the parameter customer ID.",
    "start": "385826",
    "end": "388249"
  },
  {
    "text": "And I'm trying to access all the customer data from the database. ",
    "start": "388249",
    "end": "391483"
  },
  {
    "text": "It should be identified as a SQL injection attack by WAF and should be blocked.",
    "start": "391485",
    "end": "396309"
  },
  {
    "text": "You can see this request has been blocked by WAF and not even going to your",
    "start": "398072",
    "end": "403082"
  },
  {
    "text": " IAM Identity Center for any authentication. ",
    "start": "403083",
    "end": "406047"
  },
  {
    "text": "You can find more details about this blocked request under CloudWatch logs for this WAF.",
    "start": "406571",
    "end": "412613"
  },
  {
    "text": "For that go to CloudWatch logs and open WAF logs and go to the Log stream.",
    "start": "412613",
    "end": "417725"
  },
  {
    "text": "You will find details like terminatingRuleID and RuleMatchDetails,",
    "start": "417979",
    "end": "424072"
  },
  {
    "text": "like for in our case it was a SQL injection and what parameters was sent in the URL.",
    "start": "424072",
    "end": "429522"
  },
  {
    "text": "Now let's change the customer ID a valid customer ID and see what happens.",
    "start": "429867",
    "end": "433863"
  },
  {
    "text": "Now I'm using a valid customer ID here. ",
    "start": "433863",
    "end": "436320"
  },
  {
    "text": "So the one where I use a valid customer ID, it's getting allowed by WAF because it's not",
    "start": "441000",
    "end": "445672"
  },
  {
    "text": "a SQL injection and it's going to my IAM Identity Center to enter",
    "start": "445672",
    "end": "449651"
  },
  {
    "text": " my ID and password.",
    "start": "449651",
    "end": "451651"
  },
  {
    "text": "And you will see you got those results by using the valid customer ID.",
    "start": "458855",
    "end": "462867"
  },
  {
    "text": "In this video, we explained the challenges customers often face ",
    "start": "463869",
    "end": "467543"
  },
  {
    "text": "when working remotely.",
    "start": "467543",
    "end": "469205"
  },
  {
    "text": "And how AVA can help by providing secure access to your applications ",
    "start": "469205",
    "end": "474164"
  },
  {
    "text": "without requiring a VPN.",
    "start": "474165",
    "end": "476300"
  },
  {
    "text": "We covered how AWS WAF can enhance security for you and applications,",
    "start": "476300",
    "end": "481496"
  },
  {
    "text": "and block any malicious requests before it reaches to your application.",
    "start": "481496",
    "end": "485593"
  },
  {
    "text": "In this demo, we saw how AVA policies can be used to control access ",
    "start": "486000",
    "end": "491923"
  },
  {
    "text": "for your corporate applications and how easy it is to integrate AWS WAF with AVA.",
    "start": "491923",
    "end": "498303"
  },
  {
    "text": "Please check the links in the description below ",
    "start": "498912",
    "end": "501672"
  },
  {
    "text": "to learn more about AWS Verified Access. ",
    "start": "501673",
    "end": "504535"
  },
  {
    "text": "Thank you so much for watching.",
    "start": "504535",
    "end": "506670"
  }
]