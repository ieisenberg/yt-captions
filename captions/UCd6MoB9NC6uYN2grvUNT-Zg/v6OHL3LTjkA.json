[
  {
    "start": "0",
    "end": "9000"
  },
  {
    "text": "hi i'm david and today i would like to",
    "start": "0",
    "end": "2080"
  },
  {
    "text": "walk you through a demonstration of how",
    "start": "2080",
    "end": "3919"
  },
  {
    "text": "you can run industrial defect detection",
    "start": "3919",
    "end": "5600"
  },
  {
    "text": "at the edge using amazon sagemaker",
    "start": "5600",
    "end": "8880"
  },
  {
    "text": "first why is this important why are we",
    "start": "8880",
    "end": "11200"
  },
  {
    "start": "9000",
    "end": "58000"
  },
  {
    "text": "discussing different detection at the",
    "start": "11200",
    "end": "12559"
  },
  {
    "text": "edge with machine learning well for",
    "start": "12559",
    "end": "15120"
  },
  {
    "text": "discrete manufacturing processes we",
    "start": "15120",
    "end": "16640"
  },
  {
    "text": "typically see a high volume of products",
    "start": "16640",
    "end": "18880"
  },
  {
    "text": "produced with very short cycle times",
    "start": "18880",
    "end": "21039"
  },
  {
    "text": "ranging from",
    "start": "21039",
    "end": "22320"
  },
  {
    "text": "seconds to maybe even milliseconds",
    "start": "22320",
    "end": "24480"
  },
  {
    "text": "and for a defect detection system",
    "start": "24480",
    "end": "26480"
  },
  {
    "text": "something like a end-of-line inspection",
    "start": "26480",
    "end": "28800"
  },
  {
    "text": "this requires low latency to identify",
    "start": "28800",
    "end": "31359"
  },
  {
    "text": "defects with the same kind of throughput",
    "start": "31359",
    "end": "34399"
  },
  {
    "text": "often we also see customers having",
    "start": "34399",
    "end": "36719"
  },
  {
    "text": "requirements for data privacy so",
    "start": "36719",
    "end": "39520"
  },
  {
    "text": "sensitive quality data may",
    "start": "39520",
    "end": "41840"
  },
  {
    "text": "may not be permitted to leave the",
    "start": "41840",
    "end": "43760"
  },
  {
    "text": "on-premises or even regulatory",
    "start": "43760",
    "end": "46000"
  },
  {
    "text": "requirements for this",
    "start": "46000",
    "end": "47760"
  },
  {
    "text": "now i would like to show you an example",
    "start": "47760",
    "end": "49200"
  },
  {
    "text": "application that we use in the course of",
    "start": "49200",
    "end": "50800"
  },
  {
    "text": "this demo that actually runs on an edge",
    "start": "50800",
    "end": "52800"
  },
  {
    "text": "device",
    "start": "52800",
    "end": "53920"
  },
  {
    "text": "and we will see later in this video how",
    "start": "53920",
    "end": "56000"
  },
  {
    "text": "this is actually built behind the scenes",
    "start": "56000",
    "end": "58960"
  },
  {
    "text": "for this example that we showed today in",
    "start": "58960",
    "end": "60480"
  },
  {
    "text": "the demonstration we are using the",
    "start": "60480",
    "end": "62000"
  },
  {
    "text": "collector std2 surface detection dataset",
    "start": "62000",
    "end": "65360"
  },
  {
    "text": "that",
    "start": "65360",
    "end": "66240"
  },
  {
    "text": "provides a very a great example for how",
    "start": "66240",
    "end": "69040"
  },
  {
    "text": "you can run defect detection on",
    "start": "69040",
    "end": "70640"
  },
  {
    "text": "industrial parts so in this case this",
    "start": "70640",
    "end": "72720"
  },
  {
    "text": "data set comes with different types of",
    "start": "72720",
    "end": "74960"
  },
  {
    "text": "surface defects that we can see here in",
    "start": "74960",
    "end": "76960"
  },
  {
    "text": "on the left side and we are also",
    "start": "76960",
    "end": "79360"
  },
  {
    "text": "provided with segmentation masks that we",
    "start": "79360",
    "end": "81520"
  },
  {
    "text": "can use to train a",
    "start": "81520",
    "end": "83439"
  },
  {
    "text": "image segmentation model",
    "start": "83439",
    "end": "86400"
  },
  {
    "text": "so let's jump to the edge application to",
    "start": "86400",
    "end": "88000"
  },
  {
    "text": "see this in action",
    "start": "88000",
    "end": "89360"
  },
  {
    "text": "for this let me pull up my browser",
    "start": "89360",
    "end": "91520"
  },
  {
    "text": "window",
    "start": "91520",
    "end": "92400"
  },
  {
    "start": "92000",
    "end": "163000"
  },
  {
    "text": "and here we can see a simple web",
    "start": "92400",
    "end": "94400"
  },
  {
    "text": "application that could run on an edge",
    "start": "94400",
    "end": "96479"
  },
  {
    "text": "device",
    "start": "96479",
    "end": "97600"
  },
  {
    "text": "and we can see a camera stream of",
    "start": "97600",
    "end": "100479"
  },
  {
    "text": "surface images",
    "start": "100479",
    "end": "101920"
  },
  {
    "text": "that are captured",
    "start": "101920",
    "end": "104079"
  },
  {
    "text": "within a",
    "start": "104079",
    "end": "105680"
  },
  {
    "text": "production line that produces for",
    "start": "105680",
    "end": "108000"
  },
  {
    "text": "example parts every five seconds in this",
    "start": "108000",
    "end": "110079"
  },
  {
    "text": "case",
    "start": "110079",
    "end": "111119"
  },
  {
    "text": "and those new images are coming in all",
    "start": "111119",
    "end": "112560"
  },
  {
    "text": "the time and we all can also see that",
    "start": "112560",
    "end": "114640"
  },
  {
    "text": "this edge application is running two",
    "start": "114640",
    "end": "116399"
  },
  {
    "text": "machine learning models one image",
    "start": "116399",
    "end": "118000"
  },
  {
    "text": "classification model and one semantic",
    "start": "118000",
    "end": "119840"
  },
  {
    "text": "segmentation model and we see the",
    "start": "119840",
    "end": "121680"
  },
  {
    "text": "predictions of those models here on the",
    "start": "121680",
    "end": "123360"
  },
  {
    "text": "bottom",
    "start": "123360",
    "end": "124560"
  },
  {
    "text": "and as we can see the image",
    "start": "124560",
    "end": "125680"
  },
  {
    "text": "classification model is able to spot",
    "start": "125680",
    "end": "127520"
  },
  {
    "text": "whether a",
    "start": "127520",
    "end": "128879"
  },
  {
    "text": "surface",
    "start": "128879",
    "end": "130000"
  },
  {
    "text": "image here is",
    "start": "130000",
    "end": "131520"
  },
  {
    "text": "normal or whether it has a anomaly and",
    "start": "131520",
    "end": "134400"
  },
  {
    "text": "we can also see that the semantic",
    "start": "134400",
    "end": "135760"
  },
  {
    "text": "segmentation model tells us where",
    "start": "135760",
    "end": "137840"
  },
  {
    "text": "exactly this animal is located on the",
    "start": "137840",
    "end": "140160"
  },
  {
    "text": "image",
    "start": "140160",
    "end": "141360"
  },
  {
    "text": "and then the worker could use this",
    "start": "141360",
    "end": "142640"
  },
  {
    "text": "information to",
    "start": "142640",
    "end": "145120"
  },
  {
    "text": "further do additional tests on this on",
    "start": "145120",
    "end": "148080"
  },
  {
    "text": "this product or even",
    "start": "148080",
    "end": "150239"
  },
  {
    "text": "sort it out and",
    "start": "150239",
    "end": "152400"
  },
  {
    "text": "throw it away something like that right",
    "start": "152400",
    "end": "155360"
  },
  {
    "text": "so um now let's have a look at how this",
    "start": "155360",
    "end": "157360"
  },
  {
    "text": "is built behind the scenes so let's have",
    "start": "157360",
    "end": "159040"
  },
  {
    "text": "a look at the architecture of the",
    "start": "159040",
    "end": "160480"
  },
  {
    "text": "solution that i'm going to show today",
    "start": "160480",
    "end": "163280"
  },
  {
    "start": "163000",
    "end": "303000"
  },
  {
    "text": "and the architecture since it's a cloud",
    "start": "163280",
    "end": "165280"
  },
  {
    "text": "or a hybrid solution consists of two",
    "start": "165280",
    "end": "167200"
  },
  {
    "text": "parts on the left side we see the aws",
    "start": "167200",
    "end": "169360"
  },
  {
    "text": "cloud and the right side we see the edge",
    "start": "169360",
    "end": "171519"
  },
  {
    "text": "location and on the edge location there",
    "start": "171519",
    "end": "173920"
  },
  {
    "text": "is a edge device running that",
    "start": "173920",
    "end": "176640"
  },
  {
    "text": "is actually",
    "start": "176640",
    "end": "177760"
  },
  {
    "text": "running the application together with",
    "start": "177760",
    "end": "180080"
  },
  {
    "text": "the sagemaker edge manager edge agent",
    "start": "180080",
    "end": "182720"
  },
  {
    "text": "which is a agent process that is running",
    "start": "182720",
    "end": "185200"
  },
  {
    "text": "on the edge device and provides",
    "start": "185200",
    "end": "186959"
  },
  {
    "text": "capabilities to manage the life cycle of",
    "start": "186959",
    "end": "189599"
  },
  {
    "text": "machine learning models deployed from",
    "start": "189599",
    "end": "191040"
  },
  {
    "text": "the aws cloud on the edge device",
    "start": "191040",
    "end": "194800"
  },
  {
    "text": "so now when a data scientist would to be",
    "start": "194800",
    "end": "198000"
  },
  {
    "text": "would be developing a new model for the",
    "start": "198000",
    "end": "200800"
  },
  {
    "text": "edge device",
    "start": "200800",
    "end": "202800"
  },
  {
    "text": "he would for example work on a notebook",
    "start": "202800",
    "end": "205519"
  },
  {
    "text": "and in our case we use",
    "start": "205519",
    "end": "208239"
  },
  {
    "text": "sagemaker pipelines to automate the",
    "start": "208239",
    "end": "210400"
  },
  {
    "text": "process of building those models by",
    "start": "210400",
    "end": "212400"
  },
  {
    "text": "chaining together processing training",
    "start": "212400",
    "end": "214560"
  },
  {
    "text": "and evaluation",
    "start": "214560",
    "end": "216720"
  },
  {
    "text": "a newly produced version of this model",
    "start": "216720",
    "end": "218799"
  },
  {
    "text": "will then be registered in the sagemaker",
    "start": "218799",
    "end": "220400"
  },
  {
    "text": "model registry",
    "start": "220400",
    "end": "222319"
  },
  {
    "text": "and from there we are able to",
    "start": "222319",
    "end": "224560"
  },
  {
    "text": "automatically deploy those models to the",
    "start": "224560",
    "end": "226879"
  },
  {
    "text": "edge device",
    "start": "226879",
    "end": "228560"
  },
  {
    "text": "so",
    "start": "228560",
    "end": "229360"
  },
  {
    "text": "once now",
    "start": "229360",
    "end": "230720"
  },
  {
    "text": "a",
    "start": "230720",
    "end": "231519"
  },
  {
    "text": "a persona or actor on the system",
    "start": "231519",
    "end": "233920"
  },
  {
    "text": "approves a new model version in this",
    "start": "233920",
    "end": "235920"
  },
  {
    "text": "hmac model registry we kick off a",
    "start": "235920",
    "end": "238159"
  },
  {
    "text": "deployment workflow",
    "start": "238159",
    "end": "239760"
  },
  {
    "text": "that",
    "start": "239760",
    "end": "240640"
  },
  {
    "text": "compiles the model using sagemaker new",
    "start": "240640",
    "end": "243360"
  },
  {
    "text": "and using sagemaker edge packaging job",
    "start": "243360",
    "end": "245760"
  },
  {
    "text": "it packages this model and prepares it",
    "start": "245760",
    "end": "247519"
  },
  {
    "text": "for deployment onto the edge device",
    "start": "247519",
    "end": "249519"
  },
  {
    "text": "we are then using aws iot by submitting",
    "start": "249519",
    "end": "252159"
  },
  {
    "text": "an aws iot job",
    "start": "252159",
    "end": "254400"
  },
  {
    "text": "to instruct the edge device to download",
    "start": "254400",
    "end": "256239"
  },
  {
    "text": "the new model version",
    "start": "256239",
    "end": "258720"
  },
  {
    "text": "from there the edge device will as i",
    "start": "258720",
    "end": "260560"
  },
  {
    "text": "said download the new model package from",
    "start": "260560",
    "end": "263600"
  },
  {
    "text": "the cloud",
    "start": "263600",
    "end": "264720"
  },
  {
    "text": "and makes it available to the",
    "start": "264720",
    "end": "267440"
  },
  {
    "text": "application",
    "start": "267440",
    "end": "269120"
  },
  {
    "text": "to to run predictions and get those",
    "start": "269120",
    "end": "271520"
  },
  {
    "text": "prediction results as we've seen right",
    "start": "271520",
    "end": "273280"
  },
  {
    "text": "now in the application",
    "start": "273280",
    "end": "275600"
  },
  {
    "text": "once this model is running in production",
    "start": "275600",
    "end": "277040"
  },
  {
    "text": "we can use sagemaker edge fleets to",
    "start": "277040",
    "end": "280240"
  },
  {
    "text": "receive heartbeats and additional",
    "start": "280240",
    "end": "281840"
  },
  {
    "text": "information over a large number of edge",
    "start": "281840",
    "end": "283840"
  },
  {
    "text": "devices that are connected to this fleet",
    "start": "283840",
    "end": "286479"
  },
  {
    "text": "and we can also use the capture data api",
    "start": "286479",
    "end": "289199"
  },
  {
    "text": "of edge agent to capture or sample",
    "start": "289199",
    "end": "291840"
  },
  {
    "text": "inference results that could be possibly",
    "start": "291840",
    "end": "293919"
  },
  {
    "text": "used to retrain the model",
    "start": "293919",
    "end": "296560"
  },
  {
    "text": "so now that we've seen the architecture",
    "start": "296560",
    "end": "297840"
  },
  {
    "text": "let's have a closer look into how this",
    "start": "297840",
    "end": "300080"
  },
  {
    "text": "looks like hands-on",
    "start": "300080",
    "end": "303039"
  },
  {
    "start": "303000",
    "end": "382000"
  },
  {
    "text": "we are going to start with the model",
    "start": "303360",
    "end": "304720"
  },
  {
    "text": "building part of the architecture here",
    "start": "304720",
    "end": "306720"
  },
  {
    "text": "on the left side",
    "start": "306720",
    "end": "309039"
  },
  {
    "text": "so to start building our first model i'm",
    "start": "309039",
    "end": "310800"
  },
  {
    "text": "going to go into sage maker studio which",
    "start": "310800",
    "end": "313120"
  },
  {
    "text": "is our integrated development",
    "start": "313120",
    "end": "314400"
  },
  {
    "text": "environment for building custom machine",
    "start": "314400",
    "end": "316240"
  },
  {
    "text": "learning models",
    "start": "316240",
    "end": "317440"
  },
  {
    "text": "i'm going to click on open studio for my",
    "start": "317440",
    "end": "319280"
  },
  {
    "text": "user",
    "start": "319280",
    "end": "321440"
  },
  {
    "text": "and we are being redirected into the",
    "start": "321440",
    "end": "323520"
  },
  {
    "text": "sagemaker studio environment",
    "start": "323520",
    "end": "326879"
  },
  {
    "text": "so when we now go to the bottom left tab",
    "start": "328560",
    "end": "330240"
  },
  {
    "text": "here we can see all the different",
    "start": "330240",
    "end": "332080"
  },
  {
    "text": "pipelines associated with this aws",
    "start": "332080",
    "end": "334240"
  },
  {
    "text": "account",
    "start": "334240",
    "end": "335520"
  },
  {
    "text": "in this region and we can see that i",
    "start": "335520",
    "end": "337199"
  },
  {
    "text": "already started a the execution of this",
    "start": "337199",
    "end": "339120"
  },
  {
    "text": "pipeline for image classification so",
    "start": "339120",
    "end": "340960"
  },
  {
    "text": "let's um so let's evaluate that a little",
    "start": "340960",
    "end": "342800"
  },
  {
    "text": "bit",
    "start": "342800",
    "end": "343759"
  },
  {
    "text": "the",
    "start": "343759",
    "end": "344720"
  },
  {
    "text": "execution could be the trigger through a",
    "start": "344720",
    "end": "346320"
  },
  {
    "text": "csd pipeline or even manually through a",
    "start": "346320",
    "end": "348880"
  },
  {
    "text": "code execution",
    "start": "348880",
    "end": "350639"
  },
  {
    "text": "and we can see here we have a closer",
    "start": "350639",
    "end": "352639"
  },
  {
    "text": "look at the pre-processing step in the",
    "start": "352639",
    "end": "354720"
  },
  {
    "text": "beginning we then have a training job",
    "start": "354720",
    "end": "357360"
  },
  {
    "text": "for image classification we then",
    "start": "357360",
    "end": "359360"
  },
  {
    "text": "evaluate the model against the test data",
    "start": "359360",
    "end": "361600"
  },
  {
    "text": "set and finally if this accuracy score",
    "start": "361600",
    "end": "364960"
  },
  {
    "text": "on the test data is over eighty percent",
    "start": "364960",
    "end": "367759"
  },
  {
    "text": "so this is this accuracy condition here",
    "start": "367759",
    "end": "369919"
  },
  {
    "text": "the model will be registered in the",
    "start": "369919",
    "end": "371840"
  },
  {
    "text": "sagemaker model registry",
    "start": "371840",
    "end": "375199"
  },
  {
    "text": "so i will give this pipeline a few",
    "start": "375680",
    "end": "377759"
  },
  {
    "text": "minutes to complete and come back once",
    "start": "377759",
    "end": "380240"
  },
  {
    "text": "this is finished successfully",
    "start": "380240",
    "end": "382720"
  },
  {
    "start": "382000",
    "end": "494000"
  },
  {
    "text": "we're now going to have a look at the",
    "start": "382720",
    "end": "383919"
  },
  {
    "text": "second part of the architecture which is",
    "start": "383919",
    "end": "385759"
  },
  {
    "text": "model deployment",
    "start": "385759",
    "end": "388479"
  },
  {
    "text": "all right the training run has",
    "start": "388479",
    "end": "390319"
  },
  {
    "text": "successfully completed and we can see",
    "start": "390319",
    "end": "392080"
  },
  {
    "text": "that all of the different steps in the",
    "start": "392080",
    "end": "393680"
  },
  {
    "text": "pipeline have executed successfully",
    "start": "393680",
    "end": "396720"
  },
  {
    "text": "apparently the accuracy condition was",
    "start": "396720",
    "end": "398880"
  },
  {
    "text": "met so we have achieved over 80 accuracy",
    "start": "398880",
    "end": "401600"
  },
  {
    "text": "and the new",
    "start": "401600",
    "end": "403600"
  },
  {
    "text": "model has been registered in this hmaker",
    "start": "403600",
    "end": "405280"
  },
  {
    "text": "model registry so now let's go ahead go",
    "start": "405280",
    "end": "408319"
  },
  {
    "text": "here on the left to model registry we",
    "start": "408319",
    "end": "411280"
  },
  {
    "text": "will select the one",
    "start": "411280",
    "end": "413199"
  },
  {
    "text": "model package group for image",
    "start": "413199",
    "end": "415120"
  },
  {
    "text": "classification and we can see a new",
    "start": "415120",
    "end": "416960"
  },
  {
    "text": "version here being registered just from",
    "start": "416960",
    "end": "419039"
  },
  {
    "text": "the from the previous pipeline run",
    "start": "419039",
    "end": "421199"
  },
  {
    "text": "if i click on that i can investigate",
    "start": "421199",
    "end": "422720"
  },
  {
    "text": "things like metrics here",
    "start": "422720",
    "end": "424400"
  },
  {
    "text": "and we can see we actually have a",
    "start": "424400",
    "end": "426560"
  },
  {
    "text": "accuracy on the test set of 99.6 percent",
    "start": "426560",
    "end": "430319"
  },
  {
    "text": "and i think that is pretty sufficient",
    "start": "430319",
    "end": "432080"
  },
  {
    "text": "for right now",
    "start": "432080",
    "end": "433440"
  },
  {
    "text": "you can also investigate things like the",
    "start": "433440",
    "end": "436080"
  },
  {
    "text": "model location of the actual model",
    "start": "436080",
    "end": "438880"
  },
  {
    "text": "artifact that has been saved from the",
    "start": "438880",
    "end": "441520"
  },
  {
    "text": "training run",
    "start": "441520",
    "end": "444080"
  },
  {
    "text": "once i'm happy with the outcome here i",
    "start": "444080",
    "end": "445680"
  },
  {
    "text": "can go ahead and update model status to",
    "start": "445680",
    "end": "448080"
  },
  {
    "text": "approved",
    "start": "448080",
    "end": "449440"
  },
  {
    "text": "you can add a comment here",
    "start": "449440",
    "end": "452479"
  },
  {
    "text": "so now that the model has been approved",
    "start": "459360",
    "end": "460960"
  },
  {
    "text": "it should kick off automatically our",
    "start": "460960",
    "end": "462720"
  },
  {
    "text": "automated deployment workflow",
    "start": "462720",
    "end": "464879"
  },
  {
    "text": "so now let's go to step functions",
    "start": "464879",
    "end": "468319"
  },
  {
    "text": "to actually see this execution running",
    "start": "468319",
    "end": "471120"
  },
  {
    "text": "and in this execution what is happening",
    "start": "471120",
    "end": "473280"
  },
  {
    "text": "is we are creating a new compilation job",
    "start": "473280",
    "end": "476560"
  },
  {
    "text": "and once this is finished we are",
    "start": "476560",
    "end": "477840"
  },
  {
    "text": "creating a edge packaging job and this",
    "start": "477840",
    "end": "479759"
  },
  {
    "text": "will then trigger a um iot job that will",
    "start": "479759",
    "end": "483280"
  },
  {
    "text": "instruct the edge device to download the",
    "start": "483280",
    "end": "484800"
  },
  {
    "text": "new um",
    "start": "484800",
    "end": "486479"
  },
  {
    "text": "packaged model version right so i'm",
    "start": "486479",
    "end": "489680"
  },
  {
    "text": "going to give this another few minutes",
    "start": "489680",
    "end": "491120"
  },
  {
    "text": "to finish and complete and come back",
    "start": "491120",
    "end": "492879"
  },
  {
    "text": "once this is done",
    "start": "492879",
    "end": "494319"
  },
  {
    "start": "494000",
    "end": "650000"
  },
  {
    "text": "so now once the deployment is finished",
    "start": "494319",
    "end": "496080"
  },
  {
    "text": "we are going to have a look at the last",
    "start": "496080",
    "end": "497360"
  },
  {
    "text": "part of the architecture which is",
    "start": "497360",
    "end": "499280"
  },
  {
    "text": "inference on the edge",
    "start": "499280",
    "end": "501360"
  },
  {
    "text": "okay the deployment workflow is",
    "start": "501360",
    "end": "503360"
  },
  {
    "text": "completed successfully and let's jump to",
    "start": "503360",
    "end": "505520"
  },
  {
    "text": "the edge application so we we have the",
    "start": "505520",
    "end": "507680"
  },
  {
    "text": "web application that is running on the",
    "start": "507680",
    "end": "509039"
  },
  {
    "text": "edge device and another browser tab here",
    "start": "509039",
    "end": "511039"
  },
  {
    "text": "and as you can see",
    "start": "511039",
    "end": "512719"
  },
  {
    "text": "when we look at the list here on the on",
    "start": "512719",
    "end": "514080"
  },
  {
    "text": "the top we can see all the different",
    "start": "514080",
    "end": "515680"
  },
  {
    "text": "models loaded into shmaker edge agent",
    "start": "515680",
    "end": "517680"
  },
  {
    "text": "here here we have the image",
    "start": "517680",
    "end": "518959"
  },
  {
    "text": "classification model",
    "start": "518959",
    "end": "520399"
  },
  {
    "text": "version two so this seems to have worked",
    "start": "520399",
    "end": "523279"
  },
  {
    "text": "accordingly",
    "start": "523279",
    "end": "524399"
  },
  {
    "text": "and as we can see it is already running",
    "start": "524399",
    "end": "526240"
  },
  {
    "text": "inference on the images that come in",
    "start": "526240",
    "end": "528720"
  },
  {
    "text": "from the camera stream and we can see",
    "start": "528720",
    "end": "530720"
  },
  {
    "text": "the classifications on the bottom",
    "start": "530720",
    "end": "532640"
  },
  {
    "text": "of the images being classified as",
    "start": "532640",
    "end": "534240"
  },
  {
    "text": "anomalous or as normal",
    "start": "534240",
    "end": "536560"
  },
  {
    "text": "so we'll now do exactly the same steps",
    "start": "536560",
    "end": "538399"
  },
  {
    "text": "for the semantic segmentation models",
    "start": "538399",
    "end": "539920"
  },
  {
    "text": "also rerunning the pipeline for semantic",
    "start": "539920",
    "end": "542320"
  },
  {
    "text": "segmentation and then deploying this to",
    "start": "542320",
    "end": "544480"
  },
  {
    "text": "the edge device to see the whole",
    "start": "544480",
    "end": "546000"
  },
  {
    "text": "application in action",
    "start": "546000",
    "end": "549440"
  },
  {
    "text": "all right so now i also deployed the",
    "start": "549440",
    "end": "551760"
  },
  {
    "text": "semantic segmentation model which we can",
    "start": "551760",
    "end": "553519"
  },
  {
    "text": "see here",
    "start": "553519",
    "end": "554800"
  },
  {
    "text": "in the list",
    "start": "554800",
    "end": "556000"
  },
  {
    "text": "of the models that are loaded into the",
    "start": "556000",
    "end": "557680"
  },
  {
    "text": "edge agent we have semantic segmentation",
    "start": "557680",
    "end": "559519"
  },
  {
    "text": "model version one",
    "start": "559519",
    "end": "561120"
  },
  {
    "text": "and we can see it already running in",
    "start": "561120",
    "end": "563040"
  },
  {
    "text": "action when we scroll down here to the",
    "start": "563040",
    "end": "564880"
  },
  {
    "text": "model predictions and it seems to work",
    "start": "564880",
    "end": "566880"
  },
  {
    "text": "quite well",
    "start": "566880",
    "end": "568080"
  },
  {
    "text": "giving us an indication where the defect",
    "start": "568080",
    "end": "570080"
  },
  {
    "text": "is located on the image that is coming",
    "start": "570080",
    "end": "572880"
  },
  {
    "text": "through in",
    "start": "572880",
    "end": "574320"
  },
  {
    "text": "the camera stream",
    "start": "574320",
    "end": "575680"
  },
  {
    "text": "so for the normal images we won't have",
    "start": "575680",
    "end": "577279"
  },
  {
    "text": "any um indications of course because",
    "start": "577279",
    "end": "579600"
  },
  {
    "text": "there's no defect but once we have a",
    "start": "579600",
    "end": "581680"
  },
  {
    "text": "anomalous image here we can see the",
    "start": "581680",
    "end": "583920"
  },
  {
    "text": "white spots are indicating where this",
    "start": "583920",
    "end": "586399"
  },
  {
    "text": "location is and it's actually working",
    "start": "586399",
    "end": "588160"
  },
  {
    "text": "quite well",
    "start": "588160",
    "end": "589120"
  },
  {
    "text": "from what i see at the moment",
    "start": "589120",
    "end": "590800"
  },
  {
    "text": "so now let's um",
    "start": "590800",
    "end": "592399"
  },
  {
    "text": "see the",
    "start": "592399",
    "end": "594959"
  },
  {
    "text": "edge agent actually sending inference",
    "start": "594959",
    "end": "597680"
  },
  {
    "text": "data to the cloud and we can see this",
    "start": "597680",
    "end": "599279"
  },
  {
    "text": "when we go to the bucket for this",
    "start": "599279",
    "end": "601360"
  },
  {
    "text": "project",
    "start": "601360",
    "end": "602320"
  },
  {
    "text": "which is here named hml and demo west",
    "start": "602320",
    "end": "604880"
  },
  {
    "text": "one and um if i go into this prefix",
    "start": "604880",
    "end": "608560"
  },
  {
    "text": "called edge agent inference data capture",
    "start": "608560",
    "end": "610160"
  },
  {
    "text": "which i can",
    "start": "610160",
    "end": "611760"
  },
  {
    "text": "define in the configuration of the edge",
    "start": "611760",
    "end": "613920"
  },
  {
    "text": "agent",
    "start": "613920",
    "end": "615680"
  },
  {
    "text": "i can select by model here and by",
    "start": "615680",
    "end": "619279"
  },
  {
    "text": "version so let's see the inference",
    "start": "619279",
    "end": "622399"
  },
  {
    "text": "results for example for image",
    "start": "622399",
    "end": "623839"
  },
  {
    "text": "classification this is partitioned by",
    "start": "623839",
    "end": "626320"
  },
  {
    "text": "day and time",
    "start": "626320",
    "end": "629279"
  },
  {
    "text": "and we can see that these json l files",
    "start": "629839",
    "end": "633360"
  },
  {
    "text": "are dropped here and if i were to open",
    "start": "633360",
    "end": "635200"
  },
  {
    "text": "that one",
    "start": "635200",
    "end": "636240"
  },
  {
    "text": "it would",
    "start": "636240",
    "end": "637279"
  },
  {
    "text": "tell me um or give me information about",
    "start": "637279",
    "end": "640240"
  },
  {
    "text": "the input tensors and the prediction",
    "start": "640240",
    "end": "642399"
  },
  {
    "text": "output and i can use this information",
    "start": "642399",
    "end": "644560"
  },
  {
    "text": "then to feed this back into the training",
    "start": "644560",
    "end": "646880"
  },
  {
    "text": "process and further improve my model",
    "start": "646880",
    "end": "648959"
  },
  {
    "text": "performance",
    "start": "648959",
    "end": "651519"
  },
  {
    "start": "650000",
    "end": "679000"
  },
  {
    "text": "yeah this concludes the demo of the day",
    "start": "651519",
    "end": "653600"
  },
  {
    "text": "i really hope you enjoyed it thanks for",
    "start": "653600",
    "end": "655040"
  },
  {
    "text": "watching and if you want to try this out",
    "start": "655040",
    "end": "657040"
  },
  {
    "text": "yourself i encourage you to go to our",
    "start": "657040",
    "end": "659120"
  },
  {
    "text": "public github repository that is",
    "start": "659120",
    "end": "661279"
  },
  {
    "text": "accompanying this this demo",
    "start": "661279",
    "end": "663760"
  },
  {
    "text": "here on youtube",
    "start": "663760",
    "end": "665279"
  },
  {
    "text": "and you can try this out on your own",
    "start": "665279",
    "end": "666800"
  },
  {
    "text": "edge device on something like a jetson",
    "start": "666800",
    "end": "668480"
  },
  {
    "text": "nano or simulate this in an ec2 instance",
    "start": "668480",
    "end": "671200"
  },
  {
    "text": "as well",
    "start": "671200",
    "end": "672160"
  },
  {
    "text": "thanks for watching",
    "start": "672160",
    "end": "675480"
  }
]