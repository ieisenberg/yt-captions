[
  {
    "text": "hi everyone",
    "start": "2480",
    "end": "3360"
  },
  {
    "text": "welcome to this short presentation where",
    "start": "3360",
    "end": "5279"
  },
  {
    "text": "i will demonstrate cross database",
    "start": "5279",
    "end": "7120"
  },
  {
    "text": "queries",
    "start": "7120",
    "end": "8000"
  },
  {
    "text": "a new amazon retrieve capability that is",
    "start": "8000",
    "end": "10160"
  },
  {
    "text": "available to preview now",
    "start": "10160",
    "end": "12000"
  },
  {
    "text": "my name is vaidy and i'm a specialist on",
    "start": "12000",
    "end": "13840"
  },
  {
    "text": "the amazon redshift team here at aws",
    "start": "13840",
    "end": "17920"
  },
  {
    "text": "before introducing the feature i wanted",
    "start": "18400",
    "end": "20080"
  },
  {
    "text": "to describe some of the key",
    "start": "20080",
    "end": "22000"
  },
  {
    "text": "customer pain points that led us to",
    "start": "22000",
    "end": "23920"
  },
  {
    "text": "build this feature",
    "start": "23920",
    "end": "25279"
  },
  {
    "text": "first off customers wanted to do",
    "start": "25279",
    "end": "27439"
  },
  {
    "text": "cross-functional analysis",
    "start": "27439",
    "end": "29359"
  },
  {
    "text": "they told us that they were organizing",
    "start": "29359",
    "end": "30880"
  },
  {
    "text": "data into multiple databases by function",
    "start": "30880",
    "end": "33440"
  },
  {
    "text": "and oftentimes they needed to query",
    "start": "33440",
    "end": "35280"
  },
  {
    "text": "across a two",
    "start": "35280",
    "end": "36559"
  },
  {
    "text": "for example a marketing database may",
    "start": "36559",
    "end": "38399"
  },
  {
    "text": "contain tables for clicks",
    "start": "38399",
    "end": "40320"
  },
  {
    "text": "and events and webinars and various",
    "start": "40320",
    "end": "42719"
  },
  {
    "text": "marketing touch points",
    "start": "42719",
    "end": "44399"
  },
  {
    "text": "and a sales database will have tables",
    "start": "44399",
    "end": "46160"
  },
  {
    "text": "for customer and deal info",
    "start": "46160",
    "end": "47920"
  },
  {
    "text": "and you often want to ask which events",
    "start": "47920",
    "end": "49840"
  },
  {
    "text": "contributed the most",
    "start": "49840",
    "end": "51120"
  },
  {
    "text": "to revenue in a certain sales segment",
    "start": "51120",
    "end": "53760"
  },
  {
    "text": "now that",
    "start": "53760",
    "end": "54640"
  },
  {
    "text": "is a cross-functional analysis which",
    "start": "54640",
    "end": "56719"
  },
  {
    "text": "needs a cross database query",
    "start": "56719",
    "end": "58160"
  },
  {
    "text": "and in the absence of this feature",
    "start": "58160",
    "end": "60160"
  },
  {
    "text": "customers were creating",
    "start": "60160",
    "end": "62160"
  },
  {
    "text": "copies of their data leading to",
    "start": "62160",
    "end": "63680"
  },
  {
    "text": "complexity",
    "start": "63680",
    "end": "65760"
  },
  {
    "text": "second customers wanted to perform",
    "start": "65760",
    "end": "68080"
  },
  {
    "text": "common etl and staging and processing",
    "start": "68080",
    "end": "70560"
  },
  {
    "text": "all in one place while their raw data",
    "start": "70560",
    "end": "72960"
  },
  {
    "text": "was spread across multiple databases",
    "start": "72960",
    "end": "75200"
  },
  {
    "text": "so they needed to touch multiple",
    "start": "75200",
    "end": "76720"
  },
  {
    "text": "databases with that single etl script or",
    "start": "76720",
    "end": "79360"
  },
  {
    "text": "stored procedure",
    "start": "79360",
    "end": "80880"
  },
  {
    "text": "third organizing data in multiple",
    "start": "80880",
    "end": "83119"
  },
  {
    "text": "redshift databases is also",
    "start": "83119",
    "end": "84799"
  },
  {
    "text": "a common scenario when migrating from",
    "start": "84799",
    "end": "87360"
  },
  {
    "text": "traditional",
    "start": "87360",
    "end": "88000"
  },
  {
    "text": "data warehouses and without being able",
    "start": "88000",
    "end": "90400"
  },
  {
    "text": "to query across databases",
    "start": "90400",
    "end": "92479"
  },
  {
    "text": "customers were having to refactor their",
    "start": "92479",
    "end": "94320"
  },
  {
    "text": "data models which added heavy lifting",
    "start": "94320",
    "end": "96400"
  },
  {
    "text": "and maintenance work",
    "start": "96400",
    "end": "97680"
  },
  {
    "text": "and finally customers wanted to ensure",
    "start": "97680",
    "end": "99920"
  },
  {
    "text": "that users could only see",
    "start": "99920",
    "end": "101759"
  },
  {
    "text": "the relevant subsets of the data they",
    "start": "101759",
    "end": "103520"
  },
  {
    "text": "had permissions for down to the metadata",
    "start": "103520",
    "end": "105759"
  },
  {
    "text": "level",
    "start": "105759",
    "end": "106720"
  },
  {
    "text": "granular access control is possible",
    "start": "106720",
    "end": "108960"
  },
  {
    "text": "today however",
    "start": "108960",
    "end": "110720"
  },
  {
    "text": "the problem is that you still see all",
    "start": "110720",
    "end": "112560"
  },
  {
    "text": "the metadata in a database",
    "start": "112560",
    "end": "115840"
  },
  {
    "text": "with cross database queries you can",
    "start": "116640",
    "end": "118479"
  },
  {
    "text": "seamlessly query data from any database",
    "start": "118479",
    "end": "120560"
  },
  {
    "text": "in your redshift cluster",
    "start": "120560",
    "end": "122000"
  },
  {
    "text": "regardless of which database you're",
    "start": "122000",
    "end": "123520"
  },
  {
    "text": "connected to cross database queries",
    "start": "123520",
    "end": "126000"
  },
  {
    "text": "eliminate",
    "start": "126000",
    "end": "126560"
  },
  {
    "text": "data copies and simplify your data",
    "start": "126560",
    "end": "128319"
  },
  {
    "text": "organization to support multiple",
    "start": "128319",
    "end": "130239"
  },
  {
    "text": "functions on the same cluster",
    "start": "130239",
    "end": "133520"
  },
  {
    "text": "a few other things to remember since you",
    "start": "133520",
    "end": "135520"
  },
  {
    "text": "can now access data from",
    "start": "135520",
    "end": "137200"
  },
  {
    "text": "any database on the cluster without",
    "start": "137200",
    "end": "138959"
  },
  {
    "text": "having to connect to the specific",
    "start": "138959",
    "end": "140400"
  },
  {
    "text": "database",
    "start": "140400",
    "end": "141440"
  },
  {
    "text": "effectively that means you can join",
    "start": "141440",
    "end": "143760"
  },
  {
    "text": "datasets from multiple databases in a",
    "start": "143760",
    "end": "145520"
  },
  {
    "text": "single query",
    "start": "145520",
    "end": "147120"
  },
  {
    "text": "database objects can be queried with a",
    "start": "147120",
    "end": "149200"
  },
  {
    "text": "simple three-part notation",
    "start": "149200",
    "end": "150720"
  },
  {
    "text": "of database.schema.object which i'll",
    "start": "150720",
    "end": "154560"
  },
  {
    "text": "demonstrate in a little bit we support",
    "start": "154560",
    "end": "157040"
  },
  {
    "text": "various database objects including",
    "start": "157040",
    "end": "158800"
  },
  {
    "text": "tables",
    "start": "158800",
    "end": "159840"
  },
  {
    "text": "and views both regular and late binding",
    "start": "159840",
    "end": "163120"
  },
  {
    "text": "as well as materialized views",
    "start": "163120",
    "end": "165680"
  },
  {
    "text": "cross database queries integrate",
    "start": "165680",
    "end": "167360"
  },
  {
    "text": "seamlessly with",
    "start": "167360",
    "end": "169040"
  },
  {
    "text": "your business intelligence or analytics",
    "start": "169040",
    "end": "170800"
  },
  {
    "text": "tool of choice",
    "start": "170800",
    "end": "172560"
  },
  {
    "text": "you can continue to set up granular",
    "start": "172560",
    "end": "174239"
  },
  {
    "text": "access controls for users with standard",
    "start": "174239",
    "end": "176319"
  },
  {
    "text": "redshift sql commands",
    "start": "176319",
    "end": "177760"
  },
  {
    "text": "and ensure that users only see the",
    "start": "177760",
    "end": "180640"
  },
  {
    "text": "relevant subsets of the data they have",
    "start": "180640",
    "end": "182319"
  },
  {
    "text": "permissions for",
    "start": "182319",
    "end": "183840"
  },
  {
    "text": "and finally support for cross database",
    "start": "183840",
    "end": "186319"
  },
  {
    "text": "queries is available only on the amazon",
    "start": "186319",
    "end": "188640"
  },
  {
    "text": "redshift ra3 nodetype",
    "start": "188640",
    "end": "190560"
  },
  {
    "text": "as this feature is built on top of",
    "start": "190560",
    "end": "192879"
  },
  {
    "text": "redshift managed storage which",
    "start": "192879",
    "end": "194560"
  },
  {
    "text": "which was an innovation be shipped as",
    "start": "194560",
    "end": "196000"
  },
  {
    "text": "part of the r3 instance",
    "start": "196000",
    "end": "198800"
  },
  {
    "text": "with that let's do a quick demonstration",
    "start": "198800",
    "end": "202640"
  },
  {
    "text": "i'm going to show you from a couple of",
    "start": "204799",
    "end": "206000"
  },
  {
    "text": "different perspectives how you can use",
    "start": "206000",
    "end": "207599"
  },
  {
    "text": "and benefit from this capability",
    "start": "207599",
    "end": "209680"
  },
  {
    "text": "from the standpoint of an analyst and",
    "start": "209680",
    "end": "211760"
  },
  {
    "text": "from the standpoint of a security admin",
    "start": "211760",
    "end": "214239"
  },
  {
    "text": "first as an analyst i'm logged in to the",
    "start": "214239",
    "end": "216879"
  },
  {
    "text": "consumer database in redshift",
    "start": "216879",
    "end": "218640"
  },
  {
    "text": "with my sql editor i'm analyzing some",
    "start": "218640",
    "end": "221120"
  },
  {
    "text": "customer data for my business trying to",
    "start": "221120",
    "end": "223040"
  },
  {
    "text": "understand",
    "start": "223040",
    "end": "224000"
  },
  {
    "text": "the top orders with the associated",
    "start": "224000",
    "end": "226400"
  },
  {
    "text": "customer info",
    "start": "226400",
    "end": "228000"
  },
  {
    "text": "that had more than 300 units of a",
    "start": "228000",
    "end": "231120"
  },
  {
    "text": "certain product",
    "start": "231120",
    "end": "232239"
  },
  {
    "text": "maybe 300 is a threshold we have",
    "start": "232239",
    "end": "233760"
  },
  {
    "text": "internally defined to qualify that",
    "start": "233760",
    "end": "235519"
  },
  {
    "text": "customer",
    "start": "235519",
    "end": "236239"
  },
  {
    "text": "as a high touch enterprise customer so",
    "start": "236239",
    "end": "238879"
  },
  {
    "text": "i'm going to go ahead",
    "start": "238879",
    "end": "240640"
  },
  {
    "text": "and run this query and i see that",
    "start": "240640",
    "end": "244080"
  },
  {
    "text": "there's about",
    "start": "244080",
    "end": "244720"
  },
  {
    "text": "6 000 orders that quer this query",
    "start": "244720",
    "end": "247040"
  },
  {
    "text": "returns",
    "start": "247040",
    "end": "248080"
  },
  {
    "text": "and this peaks my curiosity so now",
    "start": "248080",
    "end": "251360"
  },
  {
    "text": "i'm interested in knowing which",
    "start": "251360",
    "end": "252840"
  },
  {
    "text": "suppliers are responsible for some of my",
    "start": "252840",
    "end": "255519"
  },
  {
    "text": "top orders",
    "start": "255519",
    "end": "256639"
  },
  {
    "text": "and in what nations so i'm going to go",
    "start": "256639",
    "end": "258959"
  },
  {
    "text": "ahead",
    "start": "258959",
    "end": "260239"
  },
  {
    "text": "and look for which",
    "start": "260239",
    "end": "263600"
  },
  {
    "text": "table constitutes suppliers and it turns",
    "start": "263600",
    "end": "267440"
  },
  {
    "text": "out",
    "start": "267440",
    "end": "268160"
  },
  {
    "text": "that the supplier table is not in the",
    "start": "268160",
    "end": "270800"
  },
  {
    "text": "database",
    "start": "270800",
    "end": "271759"
  },
  {
    "text": "or not in the specific consumer database",
    "start": "271759",
    "end": "273840"
  },
  {
    "text": "that have access to",
    "start": "273840",
    "end": "275440"
  },
  {
    "text": "the supplier table sits in a separate",
    "start": "275440",
    "end": "277680"
  },
  {
    "text": "database",
    "start": "277680",
    "end": "279040"
  },
  {
    "text": "now with cross database querying solving",
    "start": "279040",
    "end": "281840"
  },
  {
    "text": "this problem",
    "start": "281840",
    "end": "282800"
  },
  {
    "text": "becomes really simple i could now log in",
    "start": "282800",
    "end": "286960"
  },
  {
    "text": "as an",
    "start": "286960",
    "end": "287360"
  },
  {
    "text": "administrator to the tpch",
    "start": "287360",
    "end": "290720"
  },
  {
    "text": "database this is the database that has a",
    "start": "290720",
    "end": "292639"
  },
  {
    "text": "supplier table",
    "start": "292639",
    "end": "294160"
  },
  {
    "text": "and i can grant the analyst demo user",
    "start": "294160",
    "end": "297759"
  },
  {
    "text": "one",
    "start": "297759",
    "end": "299919"
  },
  {
    "text": "select access to",
    "start": "299919",
    "end": "303199"
  },
  {
    "text": "the supplier tables essentially this is",
    "start": "303199",
    "end": "306000"
  },
  {
    "text": "how you can govern",
    "start": "306000",
    "end": "307440"
  },
  {
    "text": "self-service analytics and i can go",
    "start": "307440",
    "end": "309199"
  },
  {
    "text": "ahead",
    "start": "309199",
    "end": "311039"
  },
  {
    "text": "and run this query",
    "start": "311039",
    "end": "314400"
  },
  {
    "text": "and now i'm going to go back and log",
    "start": "314400",
    "end": "317520"
  },
  {
    "text": "back in as an",
    "start": "317520",
    "end": "318400"
  },
  {
    "text": "analyst into this consumer database",
    "start": "318400",
    "end": "321840"
  },
  {
    "text": "and run that same cross database query i",
    "start": "321840",
    "end": "324880"
  },
  {
    "text": "had in mind",
    "start": "324880",
    "end": "325840"
  },
  {
    "text": "that joins the customer data",
    "start": "325840",
    "end": "329600"
  },
  {
    "text": "with the supplier data and the nation",
    "start": "329600",
    "end": "332560"
  },
  {
    "text": "data which are in a separate",
    "start": "332560",
    "end": "336400"
  },
  {
    "text": "database",
    "start": "336840",
    "end": "338000"
  },
  {
    "text": "and i can see now that my top suppliers",
    "start": "338000",
    "end": "343520"
  },
  {
    "text": "are in indonesia and vietnam",
    "start": "343520",
    "end": "346960"
  },
  {
    "text": "but what if i wanted to give my analysts",
    "start": "346960",
    "end": "350400"
  },
  {
    "text": "a window into",
    "start": "350400",
    "end": "351440"
  },
  {
    "text": "everything they have access to so they",
    "start": "351440",
    "end": "353759"
  },
  {
    "text": "can see all the tables they can query in",
    "start": "353759",
    "end": "356000"
  },
  {
    "text": "one place regardless of what databases",
    "start": "356000",
    "end": "358240"
  },
  {
    "text": "these tables come from",
    "start": "358240",
    "end": "360240"
  },
  {
    "text": "you can do that via external schemas",
    "start": "360240",
    "end": "364400"
  },
  {
    "text": "essentially you're creating an alias",
    "start": "364400",
    "end": "365919"
  },
  {
    "text": "from one database to schemas in any",
    "start": "365919",
    "end": "367840"
  },
  {
    "text": "other database on the redshift cluster",
    "start": "367840",
    "end": "370000"
  },
  {
    "text": "for example here as an admin",
    "start": "370000",
    "end": "373759"
  },
  {
    "text": "i have connected to the consumer",
    "start": "373759",
    "end": "375680"
  },
  {
    "text": "database and exposed",
    "start": "375680",
    "end": "378000"
  },
  {
    "text": "the public schema in the tpc 800",
    "start": "378000",
    "end": "381600"
  },
  {
    "text": "g database which if you remember was the",
    "start": "381600",
    "end": "384160"
  },
  {
    "text": "database that had the supplier tables in",
    "start": "384160",
    "end": "385919"
  },
  {
    "text": "them",
    "start": "385919",
    "end": "387120"
  },
  {
    "text": "to the analyst demo user",
    "start": "387120",
    "end": "391360"
  },
  {
    "text": "so let's go ahead and create that schema",
    "start": "391360",
    "end": "393919"
  },
  {
    "text": "and expose demo user",
    "start": "393919",
    "end": "396240"
  },
  {
    "text": "to all the tables he needs to have",
    "start": "396240",
    "end": "399600"
  },
  {
    "text": "access to",
    "start": "399600",
    "end": "402160"
  },
  {
    "text": "now if i log in as demo user and i",
    "start": "402160",
    "end": "405280"
  },
  {
    "text": "refresh",
    "start": "405280",
    "end": "406880"
  },
  {
    "text": "my consumer database i see",
    "start": "406880",
    "end": "410639"
  },
  {
    "text": "a new external schema",
    "start": "410639",
    "end": "413919"
  },
  {
    "text": "and the object hierarchy only has a",
    "start": "413919",
    "end": "416319"
  },
  {
    "text": "relevant object",
    "start": "416319",
    "end": "417599"
  },
  {
    "text": "in this case nation and supplier only",
    "start": "417599",
    "end": "420240"
  },
  {
    "text": "those two tables",
    "start": "420240",
    "end": "421520"
  },
  {
    "text": "that demo user was granted permissions",
    "start": "421520",
    "end": "424160"
  },
  {
    "text": "to",
    "start": "424160",
    "end": "424880"
  },
  {
    "text": "in other words grant usage",
    "start": "424880",
    "end": "428400"
  },
  {
    "text": "to schema is simply exposing the cma",
    "start": "428400",
    "end": "431199"
  },
  {
    "text": "schema",
    "start": "431199",
    "end": "431840"
  },
  {
    "text": "it does not also enforce permissions to",
    "start": "431840",
    "end": "434240"
  },
  {
    "text": "all the objects in the schema",
    "start": "434240",
    "end": "435759"
  },
  {
    "text": "that has to be done separately so now",
    "start": "435759",
    "end": "438160"
  },
  {
    "text": "that i have access to those tables",
    "start": "438160",
    "end": "440960"
  },
  {
    "text": "via that schema i can just",
    "start": "440960",
    "end": "444080"
  },
  {
    "text": "run a simple query and just like that",
    "start": "444080",
    "end": "447599"
  },
  {
    "text": "i have demonstrated how with the power",
    "start": "447599",
    "end": "451120"
  },
  {
    "text": "of cross database querying",
    "start": "451120",
    "end": "453199"
  },
  {
    "text": "you can expose data across multiple",
    "start": "453199",
    "end": "456800"
  },
  {
    "text": "databases",
    "start": "456800",
    "end": "458000"
  },
  {
    "text": "to an analyst",
    "start": "458000",
    "end": "465840"
  },
  {
    "text": "before ending i wanted to direct your",
    "start": "466800",
    "end": "469039"
  },
  {
    "text": "attention to the amazon redshift",
    "start": "469039",
    "end": "470800"
  },
  {
    "text": "documentation",
    "start": "470800",
    "end": "471919"
  },
  {
    "text": "and a new post we published on the aws",
    "start": "471919",
    "end": "474479"
  },
  {
    "text": "big data blog",
    "start": "474479",
    "end": "475680"
  },
  {
    "text": "that details how to set up cross",
    "start": "475680",
    "end": "478080"
  },
  {
    "text": "database query",
    "start": "478080",
    "end": "479680"
  },
  {
    "text": "good luck previewing this feature and as",
    "start": "479680",
    "end": "481440"
  },
  {
    "text": "always we look forward to your feedback",
    "start": "481440",
    "end": "487680"
  }
]