[
  {
    "text": "hi everyone my name is Kunal Batra and",
    "start": "30",
    "end": "2070"
  },
  {
    "text": "I'm a senior technical evangelist here",
    "start": "2070",
    "end": "3870"
  },
  {
    "text": "at AWS and we're joined by some pretty",
    "start": "3870",
    "end": "6120"
  },
  {
    "text": "special guests from the service team for",
    "start": "6120",
    "end": "8730"
  },
  {
    "text": "a cloud watch and container insights so",
    "start": "8730",
    "end": "12599"
  },
  {
    "text": "why don't you guys introduce yourselves",
    "start": "12599",
    "end": "13559"
  },
  {
    "text": "all right Thank You Kenard my name is",
    "start": "13559",
    "end": "15570"
  },
  {
    "text": "Mark Shanee I'm a principal product",
    "start": "15570",
    "end": "17100"
  },
  {
    "text": "manager for a cloud watch hey guys my",
    "start": "17100",
    "end": "19619"
  },
  {
    "text": "name is mahir I'm a senior manager for",
    "start": "19619",
    "end": "21630"
  },
  {
    "text": "the cloud watch my name is Akshay I'm a",
    "start": "21630",
    "end": "24060"
  },
  {
    "text": "product manager with AWS container",
    "start": "24060",
    "end": "25949"
  },
  {
    "text": "services so let's get to the the first",
    "start": "25949",
    "end": "28529"
  },
  {
    "text": "question here and kind of table set for",
    "start": "28529",
    "end": "30269"
  },
  {
    "text": "our audience at home what is cloud watch",
    "start": "30269",
    "end": "32610"
  },
  {
    "text": "let start from there it's a great",
    "start": "32610",
    "end": "34020"
  },
  {
    "text": "question so cloud watch is a fully",
    "start": "34020",
    "end": "35550"
  },
  {
    "text": "managed observability service that gives",
    "start": "35550",
    "end": "37800"
  },
  {
    "text": "you complete visibility into health",
    "start": "37800",
    "end": "39450"
  },
  {
    "text": "performance and availability of cloud",
    "start": "39450",
    "end": "41370"
  },
  {
    "text": "and on-premise sources and applications",
    "start": "41370",
    "end": "43260"
  },
  {
    "text": "and it helps customers measure diagnose",
    "start": "43260",
    "end": "46079"
  },
  {
    "text": "understand and improve how the services",
    "start": "46079",
    "end": "48329"
  },
  {
    "text": "and resources are operating customers do",
    "start": "48329",
    "end": "50640"
  },
  {
    "text": "four things with cloud wars today",
    "start": "50640",
    "end": "52399"
  },
  {
    "text": "collect monitor act and analyze so they",
    "start": "52399",
    "end": "56610"
  },
  {
    "text": "collect telemetry from structure and",
    "start": "56610",
    "end": "58590"
  },
  {
    "text": "unstructured data sources monitor using",
    "start": "58590",
    "end": "61140"
  },
  {
    "text": "dashboards up to one second resolution",
    "start": "61140",
    "end": "63589"
  },
  {
    "text": "act using alarms and events and they do",
    "start": "63589",
    "end": "66600"
  },
  {
    "text": "things like terminate ec2 instances that",
    "start": "66600",
    "end": "69420"
  },
  {
    "text": "are gone bad or restart a broken",
    "start": "69420",
    "end": "71790"
  },
  {
    "text": "instance and things like that and then",
    "start": "71790",
    "end": "73439"
  },
  {
    "text": "analyze using our metric math function",
    "start": "73439",
    "end": "75450"
  },
  {
    "text": "to analyze time series data as well as",
    "start": "75450",
    "end": "77640"
  },
  {
    "text": "log analytics and using cloud wars logs",
    "start": "77640",
    "end": "80640"
  },
  {
    "text": "insights queries and so I took us that I",
    "start": "80640",
    "end": "83640"
  },
  {
    "text": "was looking at this last night and it's",
    "start": "83640",
    "end": "85380"
  },
  {
    "text": "blew my mind but I'll say it for the",
    "start": "85380",
    "end": "86909"
  },
  {
    "text": "audience as well",
    "start": "86909",
    "end": "87829"
  },
  {
    "text": "cloud watch monitors more than a",
    "start": "87829",
    "end": "90840"
  },
  {
    "text": "quadrillion metric observations that's a",
    "start": "90840",
    "end": "94619"
  },
  {
    "text": "large number what is a quadrillion what",
    "start": "94619",
    "end": "98490"
  },
  {
    "text": "does that mean right triggers more than",
    "start": "98490",
    "end": "101490"
  },
  {
    "text": "three point nine trillion events and",
    "start": "101490",
    "end": "103520"
  },
  {
    "text": "ingest more than 100 petabytes of logs",
    "start": "103520",
    "end": "106710"
  },
  {
    "text": "per month so this is crazy this is",
    "start": "106710",
    "end": "109470"
  },
  {
    "text": "massive I guess the first question is is",
    "start": "109470",
    "end": "112170"
  },
  {
    "text": "this for every service the majority of",
    "start": "112170",
    "end": "114030"
  },
  {
    "text": "services how does that work I think that",
    "start": "114030",
    "end": "115770"
  },
  {
    "text": "the important thing is just not about",
    "start": "115770",
    "end": "116850"
  },
  {
    "text": "just the the numbers that you've shared",
    "start": "116850",
    "end": "118259"
  },
  {
    "text": "but more about the the scale the ability",
    "start": "118259",
    "end": "120630"
  },
  {
    "text": "for the platform for cloud watch in",
    "start": "120630",
    "end": "122219"
  },
  {
    "text": "itself to be able to scale to meet the",
    "start": "122219",
    "end": "124200"
  },
  {
    "text": "demands of our customers and I think",
    "start": "124200",
    "end": "125399"
  },
  {
    "text": "that's really what it's all about right",
    "start": "125399",
    "end": "127049"
  },
  {
    "text": "right and then the second part of the",
    "start": "127049",
    "end": "129360"
  },
  {
    "text": "service name container insights",
    "start": "129360",
    "end": "130920"
  },
  {
    "text": "what's container insights what is",
    "start": "130920",
    "end": "132870"
  },
  {
    "text": "container insight",
    "start": "132870",
    "end": "133819"
  },
  {
    "text": "while container incites a fully managed",
    "start": "133819",
    "end": "135799"
  },
  {
    "text": "service from monitoring and",
    "start": "135799",
    "end": "137360"
  },
  {
    "text": "troubleshooting your container",
    "start": "137360",
    "end": "138650"
  },
  {
    "text": "environment and most importantly be able",
    "start": "138650",
    "end": "140000"
  },
  {
    "text": "to alarm on some of these metrics so",
    "start": "140000",
    "end": "141950"
  },
  {
    "text": "provides pre-built visualization and",
    "start": "141950",
    "end": "143689"
  },
  {
    "text": "automated aggregation based on tasks",
    "start": "143689",
    "end": "146239"
  },
  {
    "text": "pods your clusters and services and",
    "start": "146239",
    "end": "149750"
  },
  {
    "text": "namespace for kubernetes in your",
    "start": "149750",
    "end": "151519"
  },
  {
    "text": "environments most importantly from a use",
    "start": "151519",
    "end": "153530"
  },
  {
    "text": "case standpoint it's all about",
    "start": "153530",
    "end": "154579"
  },
  {
    "text": "monitoring and troubleshooting and also",
    "start": "154579",
    "end": "157310"
  },
  {
    "text": "health and performance monitoring and",
    "start": "157310",
    "end": "158720"
  },
  {
    "text": "also tasks and pod optimization and",
    "start": "158720",
    "end": "162319"
  },
  {
    "text": "again for our audience just want to",
    "start": "162319",
    "end": "163640"
  },
  {
    "text": "again table set we mentioned a lot of",
    "start": "163640",
    "end": "165769"
  },
  {
    "text": "terminology over there ECS kubernetes",
    "start": "165769",
    "end": "169060"
  },
  {
    "text": "containers why don't we just step back a",
    "start": "169060",
    "end": "171470"
  },
  {
    "text": "bit and just talk about what some of",
    "start": "171470",
    "end": "173000"
  },
  {
    "text": "these terminologies are what's a",
    "start": "173000",
    "end": "174170"
  },
  {
    "text": "container I guess I'll start off with",
    "start": "174170",
    "end": "175250"
  },
  {
    "text": "that yes essentially a way for",
    "start": "175250",
    "end": "178129"
  },
  {
    "text": "application developers to package their",
    "start": "178129",
    "end": "180099"
  },
  {
    "text": "applications and their dependencies",
    "start": "180099",
    "end": "181940"
  },
  {
    "text": "internet across computer environments",
    "start": "181940",
    "end": "183560"
  },
  {
    "text": "and the fundamental benefit of",
    "start": "183560",
    "end": "185389"
  },
  {
    "text": "containers is it decouples operations",
    "start": "185389",
    "end": "187670"
  },
  {
    "text": "from application development it just in",
    "start": "187670",
    "end": "189769"
  },
  {
    "text": "double sound and agility",
    "start": "189769",
    "end": "191150"
  },
  {
    "text": "there many ways to run containers are a",
    "start": "191150",
    "end": "192799"
  },
  {
    "text": "double yes you can use ECS and ets and",
    "start": "192799",
    "end": "194750"
  },
  {
    "text": "that's the high level where customers",
    "start": "194750",
    "end": "196579"
  },
  {
    "text": "usually start and that's the",
    "start": "196579",
    "end": "197629"
  },
  {
    "text": "orchestration and the orchestration",
    "start": "197629",
    "end": "198919"
  },
  {
    "text": "essentially makes it easy to schedule",
    "start": "198919",
    "end": "200900"
  },
  {
    "text": "containers they have integrations with c",
    "start": "200900",
    "end": "202910"
  },
  {
    "text": "SED they have the ability to schedule",
    "start": "202910",
    "end": "205280"
  },
  {
    "text": "and bin pack and optimize running",
    "start": "205280",
    "end": "207379"
  },
  {
    "text": "containers and for cost efficiency and",
    "start": "207379",
    "end": "209810"
  },
  {
    "text": "finally there's eight of us for it which",
    "start": "209810",
    "end": "211760"
  },
  {
    "text": "essentially doubles down on the agility",
    "start": "211760",
    "end": "213919"
  },
  {
    "text": "and simplicity mission by removing the",
    "start": "213919",
    "end": "216440"
  },
  {
    "text": "need for customers didn't think about",
    "start": "216440",
    "end": "217849"
  },
  {
    "text": "infrastructure that makes sense so why",
    "start": "217849",
    "end": "221989"
  },
  {
    "text": "should our customers care then about",
    "start": "221989",
    "end": "223760"
  },
  {
    "text": "container insights can you a little bit",
    "start": "223760",
    "end": "225049"
  },
  {
    "text": "about that yeah so first of all people",
    "start": "225049",
    "end": "227569"
  },
  {
    "text": "want to be able to monitor their",
    "start": "227569",
    "end": "228680"
  },
  {
    "text": "containers and the performance of their",
    "start": "228680",
    "end": "229849"
  },
  {
    "text": "containers in this ephemeral world of",
    "start": "229849",
    "end": "232099"
  },
  {
    "text": "containers things come up and down and",
    "start": "232099",
    "end": "233720"
  },
  {
    "text": "have to be able to adapt to this growing",
    "start": "233720",
    "end": "235430"
  },
  {
    "text": "workloads that customers have we",
    "start": "235430",
    "end": "237319"
  },
  {
    "text": "recently launched the ek support for EPS",
    "start": "237319",
    "end": "239690"
  },
  {
    "text": "and kubernetes back in May 20 May 20th",
    "start": "239690",
    "end": "242060"
  },
  {
    "text": "that cube con and Barcelona and now",
    "start": "242060",
    "end": "244040"
  },
  {
    "text": "we've also added ECS support in an open",
    "start": "244040",
    "end": "245840"
  },
  {
    "text": "preview this gives us the ability to",
    "start": "245840",
    "end": "247790"
  },
  {
    "text": "natively collect metrics from VCS on ec2",
    "start": "247790",
    "end": "250639"
  },
  {
    "text": "and AWS for gate from any running",
    "start": "250639",
    "end": "253430"
  },
  {
    "text": "containers",
    "start": "253430",
    "end": "254209"
  },
  {
    "text": "tasks services running in your",
    "start": "254209",
    "end": "255799"
  },
  {
    "text": "environment awesome and and then how do",
    "start": "255799",
    "end": "259430"
  },
  {
    "text": "customers get started with container",
    "start": "259430",
    "end": "261409"
  },
  {
    "text": "insights so far ECS we collaborated with",
    "start": "261409",
    "end": "264800"
  },
  {
    "text": "the ECS team and it's a simple checkbox",
    "start": "264800",
    "end": "267050"
  },
  {
    "text": "you just go",
    "start": "267050",
    "end": "267590"
  },
  {
    "text": "the ECS management console click a box",
    "start": "267590",
    "end": "269660"
  },
  {
    "text": "and you're done",
    "start": "269660",
    "end": "270919"
  },
  {
    "text": "it's already pre-built into the ECS",
    "start": "270919",
    "end": "272870"
  },
  {
    "text": "agent the latest version of the agent",
    "start": "272870",
    "end": "274970"
  },
  {
    "text": "has the better has the benefits that you",
    "start": "274970",
    "end": "277639"
  },
  {
    "text": "get from container inside so you may",
    "start": "277639",
    "end": "278960"
  },
  {
    "text": "need to update the agent but there is no",
    "start": "278960",
    "end": "280370"
  },
  {
    "text": "new software to install and for e KS and",
    "start": "280370",
    "end": "283400"
  },
  {
    "text": "kubernetes you have a three-step process",
    "start": "283400",
    "end": "285979"
  },
  {
    "text": "very simple so you update an IM role",
    "start": "285979",
    "end": "288169"
  },
  {
    "text": "policy you deploy a containerized agent",
    "start": "288169",
    "end": "291440"
  },
  {
    "text": "with a few Yambol files and then you",
    "start": "291440",
    "end": "293330"
  },
  {
    "text": "deploy fluent the agent using one yeah",
    "start": "293330",
    "end": "295220"
  },
  {
    "text": "Mel file and you're done awesome and and",
    "start": "295220",
    "end": "298160"
  },
  {
    "text": "then I so we talked about this how to",
    "start": "298160",
    "end": "301430"
  },
  {
    "text": "customers now troubleshoot and debug",
    "start": "301430",
    "end": "303050"
  },
  {
    "text": "application failures yeah that's a good",
    "start": "303050",
    "end": "305419"
  },
  {
    "text": "question I think the important thing is",
    "start": "305419",
    "end": "306979"
  },
  {
    "text": "is that container insights not only",
    "start": "306979",
    "end": "308840"
  },
  {
    "text": "focuses on one element right it's all",
    "start": "308840",
    "end": "310460"
  },
  {
    "text": "about the observable stack bringing in",
    "start": "310460",
    "end": "312380"
  },
  {
    "text": "metrics logs and traces all together so",
    "start": "312380",
    "end": "314570"
  },
  {
    "text": "you can create a full end-to-end",
    "start": "314570",
    "end": "315710"
  },
  {
    "text": "experience so ultimately how do you",
    "start": "315710",
    "end": "317960"
  },
  {
    "text": "collect the metric to be able to isolate",
    "start": "317960",
    "end": "319820"
  },
  {
    "text": "spikes that you're happening in your",
    "start": "319820",
    "end": "321380"
  },
  {
    "text": "environment whether it's compute related",
    "start": "321380",
    "end": "323090"
  },
  {
    "text": "with its CPU memory disk or network",
    "start": "323090",
    "end": "325460"
  },
  {
    "text": "related and then be able to drill down",
    "start": "325460",
    "end": "327500"
  },
  {
    "text": "into specific running application logs",
    "start": "327500",
    "end": "329840"
  },
  {
    "text": "or distributed traces coming from AWS",
    "start": "329840",
    "end": "331910"
  },
  {
    "text": "x-ray and that's what makes the whole",
    "start": "331910",
    "end": "333620"
  },
  {
    "text": "difference between other solutions is",
    "start": "333620",
    "end": "336080"
  },
  {
    "text": "that everything is built within one",
    "start": "336080",
    "end": "337190"
  },
  {
    "text": "platform and how this pricing look like",
    "start": "337190",
    "end": "339470"
  },
  {
    "text": "for this so a good question as well so",
    "start": "339470",
    "end": "341720"
  },
  {
    "text": "pricing is not new for a cloud watch",
    "start": "341720",
    "end": "343580"
  },
  {
    "text": "it's all using existing dimensions so",
    "start": "343580",
    "end": "345470"
  },
  {
    "text": "we're looking at cloud watch metrics for",
    "start": "345470",
    "end": "347150"
  },
  {
    "text": "the metrics being collected from your",
    "start": "347150",
    "end": "348530"
  },
  {
    "text": "environment and that varies pretty",
    "start": "348530",
    "end": "350780"
  },
  {
    "text": "metric that are pre aggregated by tasker",
    "start": "350780",
    "end": "352760"
  },
  {
    "text": "pods or by services or by clusters and",
    "start": "352760",
    "end": "354950"
  },
  {
    "text": "then you have the logs ingestion bits so",
    "start": "354950",
    "end": "357440"
  },
  {
    "text": "as part of application logs that are",
    "start": "357440",
    "end": "358820"
  },
  {
    "text": "coming in performance logs these are",
    "start": "358820",
    "end": "360889"
  },
  {
    "text": "existing dimensions so this is the",
    "start": "360889",
    "end": "362210"
  },
  {
    "text": "ingestion cost and then the storage",
    "start": "362210",
    "end": "363650"
  },
  {
    "text": "costs I would recommend to look at our",
    "start": "363650",
    "end": "365450"
  },
  {
    "text": "pricing page for more details about",
    "start": "365450",
    "end": "366740"
  },
  {
    "text": "pricing across different regions perfect",
    "start": "366740",
    "end": "369260"
  },
  {
    "text": "and then some of the top use cases that",
    "start": "369260",
    "end": "371000"
  },
  {
    "text": "come to your mind for container insights",
    "start": "371000",
    "end": "373760"
  },
  {
    "text": "so yeah we talked a little bit about the",
    "start": "373760",
    "end": "375500"
  },
  {
    "text": "use cases in the first answer so",
    "start": "375500",
    "end": "377570"
  },
  {
    "text": "ultimately monitoring and",
    "start": "377570",
    "end": "378650"
  },
  {
    "text": "troubleshooting is an important aspect",
    "start": "378650",
    "end": "379789"
  },
  {
    "text": "the ability to understand out-of-the-box",
    "start": "379789",
    "end": "381889"
  },
  {
    "text": "right with automated dashboards what's",
    "start": "381889",
    "end": "383720"
  },
  {
    "text": "going on in your environment be able to",
    "start": "383720",
    "end": "385639"
  },
  {
    "text": "drill down very quickly so that you",
    "start": "385639",
    "end": "387229"
  },
  {
    "text": "don't have to figure out contextually",
    "start": "387229",
    "end": "388729"
  },
  {
    "text": "deep link into application problems",
    "start": "388729",
    "end": "391370"
  },
  {
    "text": "through your application logs your",
    "start": "391370",
    "end": "392840"
  },
  {
    "text": "traces so that's the monitoring and",
    "start": "392840",
    "end": "394940"
  },
  {
    "text": "troubleshooting helton performance right",
    "start": "394940",
    "end": "396409"
  },
  {
    "text": "you want to make sure that when people",
    "start": "396409",
    "end": "397460"
  },
  {
    "text": "reserve the capacity for these",
    "start": "397460",
    "end": "399169"
  },
  {
    "text": "containers these tasks",
    "start": "399169",
    "end": "401020"
  },
  {
    "text": "or these pods that they're actually",
    "start": "401020",
    "end": "402639"
  },
  {
    "text": "making use of these these resources if",
    "start": "402639",
    "end": "404500"
  },
  {
    "text": "they're not making use you're just",
    "start": "404500",
    "end": "405460"
  },
  {
    "text": "wasting compute capacity so ultimately",
    "start": "405460",
    "end": "408490"
  },
  {
    "text": "you want to be able to alarm and be able",
    "start": "408490",
    "end": "409599"
  },
  {
    "text": "to educate create awareness within your",
    "start": "409599",
    "end": "411310"
  },
  {
    "text": "teams to be able to optimize these these",
    "start": "411310",
    "end": "414099"
  },
  {
    "text": "these constraints right these compute",
    "start": "414099",
    "end": "416979"
  },
  {
    "text": "capacity can chains that are imposed on",
    "start": "416979",
    "end": "418210"
  },
  {
    "text": "your containers make sure that you're",
    "start": "418210",
    "end": "419319"
  },
  {
    "text": "reserving the right amount based on what",
    "start": "419319",
    "end": "421030"
  },
  {
    "text": "you're using and then last sorry last",
    "start": "421030",
    "end": "423370"
  },
  {
    "text": "but not least tasking about tasks and",
    "start": "423370",
    "end": "424810"
  },
  {
    "text": "pod cluster performance optimization",
    "start": "424810",
    "end": "426789"
  },
  {
    "text": "which I think covers a little bit about",
    "start": "426789",
    "end": "427930"
  },
  {
    "text": "yeah I was mentioning sounds good so I'm",
    "start": "427930",
    "end": "430990"
  },
  {
    "text": "excited let's let's see a little more",
    "start": "430990",
    "end": "432490"
  },
  {
    "text": "let's switch over to a demo and then see",
    "start": "432490",
    "end": "434830"
  },
  {
    "text": "how this works all right sounds good",
    "start": "434830",
    "end": "436949"
  },
  {
    "text": "all right good so we're starting off",
    "start": "436949",
    "end": "439360"
  },
  {
    "text": "with the ECS cluster here so I think",
    "start": "439360",
    "end": "441009"
  },
  {
    "text": "what may here mention is that it's the",
    "start": "441009",
    "end": "443020"
  },
  {
    "text": "ease of use and the native integration",
    "start": "443020",
    "end": "444669"
  },
  {
    "text": "with UCS that's a beauty over here so",
    "start": "444669",
    "end": "446590"
  },
  {
    "text": "ultimately what you do is when you",
    "start": "446590",
    "end": "447970"
  },
  {
    "text": "create there's a couple different ways",
    "start": "447970",
    "end": "449710"
  },
  {
    "text": "you can do it directly through the",
    "start": "449710",
    "end": "450759"
  },
  {
    "text": "console or using our API CL is account",
    "start": "450759",
    "end": "453789"
  },
  {
    "text": "settings allows you to be able to enable",
    "start": "453789",
    "end": "455740"
  },
  {
    "text": "container insights directly through a",
    "start": "455740",
    "end": "457419"
  },
  {
    "text": "check box so whenever you're creating",
    "start": "457419",
    "end": "459400"
  },
  {
    "text": "new clusters in your environment it will",
    "start": "459400",
    "end": "461560"
  },
  {
    "text": "automatically be enable container",
    "start": "461560",
    "end": "462970"
  },
  {
    "text": "insights pretty simple and then",
    "start": "462970",
    "end": "465669"
  },
  {
    "text": "ultimately from a cluster standpoint if",
    "start": "465669",
    "end": "467530"
  },
  {
    "text": "you create a new cluster you also have",
    "start": "467530",
    "end": "468970"
  },
  {
    "text": "the ability to do this at a cluster",
    "start": "468970",
    "end": "470169"
  },
  {
    "text": "level so when you're creating a cluster",
    "start": "470169",
    "end": "472030"
  },
  {
    "text": "you have again the check box because",
    "start": "472030",
    "end": "473409"
  },
  {
    "text": "it's set up at the Kentucky the account",
    "start": "473409",
    "end": "475599"
  },
  {
    "text": "level it allow them a Phoebe check but",
    "start": "475599",
    "end": "477460"
  },
  {
    "text": "you can enable or disable it on a",
    "start": "477460",
    "end": "478690"
  },
  {
    "text": "cluster level so pretty simple to get",
    "start": "478690",
    "end": "480250"
  },
  {
    "text": "going let me show you the results I",
    "start": "480250",
    "end": "481750"
  },
  {
    "text": "think that's the most important thing so",
    "start": "481750",
    "end": "483520"
  },
  {
    "text": "once this is enabled ultimately you're",
    "start": "483520",
    "end": "485050"
  },
  {
    "text": "going to get visibility into your",
    "start": "485050",
    "end": "486280"
  },
  {
    "text": "container environments what I'm going to",
    "start": "486280",
    "end": "489400"
  },
  {
    "text": "do here is under the cloud watch land",
    "start": "489400",
    "end": "490960"
  },
  {
    "text": "landing page you're going to see a new",
    "start": "490960",
    "end": "492340"
  },
  {
    "text": "container insights icon so when you",
    "start": "492340",
    "end": "495130"
  },
  {
    "text": "click on the container insights menu",
    "start": "495130",
    "end": "496539"
  },
  {
    "text": "this automated dashboards will",
    "start": "496539",
    "end": "497770"
  },
  {
    "text": "automatically give you visibility across",
    "start": "497770",
    "end": "499090"
  },
  {
    "text": "all the different clusters in your",
    "start": "499090",
    "end": "500530"
  },
  {
    "text": "environment so I have ECS clusters in",
    "start": "500530",
    "end": "502690"
  },
  {
    "text": "this case since we were talking about",
    "start": "502690",
    "end": "504070"
  },
  {
    "text": "ECS let's go ahead and see the clusters",
    "start": "504070",
    "end": "506490"
  },
  {
    "text": "so in this case I have visibility across",
    "start": "506490",
    "end": "508659"
  },
  {
    "text": "my ECS on ec2 I have visibility across",
    "start": "508659",
    "end": "511719"
  },
  {
    "text": "my target clusters and I also have",
    "start": "511719",
    "end": "513729"
  },
  {
    "text": "visibility across my windows clusters so",
    "start": "513729",
    "end": "515979"
  },
  {
    "text": "this gives me full visibility to Marmot",
    "start": "515979",
    "end": "517570"
  },
  {
    "text": "compute utilization CPU memory also",
    "start": "517570",
    "end": "521289"
  },
  {
    "text": "around container instances of specific",
    "start": "521289",
    "end": "523390"
  },
  {
    "text": "ec2 instances that are being launched so",
    "start": "523390",
    "end": "525100"
  },
  {
    "text": "this is applicable to my ec2 instance",
    "start": "525100",
    "end": "527560"
  },
  {
    "text": "cluster as well as task counts and",
    "start": "527560",
    "end": "530290"
  },
  {
    "text": "services running in my environment at",
    "start": "530290",
    "end": "532300"
  },
  {
    "text": "any point in time you can drill into",
    "start": "532300",
    "end": "533589"
  },
  {
    "text": "more of these",
    "start": "533589",
    "end": "534290"
  },
  {
    "text": "performance is high cardinality data",
    "start": "534290",
    "end": "535790"
  },
  {
    "text": "that we collect around containers",
    "start": "535790",
    "end": "537709"
  },
  {
    "text": "directly by clicking on actions and view",
    "start": "537709",
    "end": "539600"
  },
  {
    "text": "performance logs if I go into a specific",
    "start": "539600",
    "end": "541970"
  },
  {
    "text": "detail into a forget cluster as an",
    "start": "541970",
    "end": "543740"
  },
  {
    "text": "example I get more visibility into the",
    "start": "543740",
    "end": "545660"
  },
  {
    "text": "tasks level to be able to understand and",
    "start": "545660",
    "end": "547820"
  },
  {
    "text": "be able to quickly drill into specific",
    "start": "547820",
    "end": "549889"
  },
  {
    "text": "areas of your clusters be able to apply",
    "start": "549889",
    "end": "552259"
  },
  {
    "text": "these time ranges that you have and be",
    "start": "552259",
    "end": "555740"
  },
  {
    "text": "able to debug any specific containers",
    "start": "555740",
    "end": "558050"
  },
  {
    "text": "that come up for these specific tasks",
    "start": "558050",
    "end": "559639"
  },
  {
    "text": "that have been isolated you get to",
    "start": "559639",
    "end": "561139"
  },
  {
    "text": "quickly see CPU memory usage for the",
    "start": "561139",
    "end": "563240"
  },
  {
    "text": "given tasks I do that are running able",
    "start": "563240",
    "end": "565370"
  },
  {
    "text": "to see the storage compute capacity as",
    "start": "565370",
    "end": "567290"
  },
  {
    "text": "well as a storage rights memory and",
    "start": "567290",
    "end": "569480"
  },
  {
    "text": "network let me go ahead and switch over",
    "start": "569480",
    "end": "571190"
  },
  {
    "text": "to an EPS cluster in another region that",
    "start": "571190",
    "end": "573290"
  },
  {
    "text": "I have here you mentioned one term there",
    "start": "573290",
    "end": "578660"
  },
  {
    "text": "I wanted to find for the audience you",
    "start": "578660",
    "end": "579740"
  },
  {
    "text": "mentioned it's great for high esteem",
    "start": "579740",
    "end": "580940"
  },
  {
    "text": "high cardinality data yes that's just a",
    "start": "580940",
    "end": "583040"
  },
  {
    "text": "database term right a large number of",
    "start": "583040",
    "end": "585139"
  },
  {
    "text": "unique data in a certain dimension",
    "start": "585139",
    "end": "586819"
  },
  {
    "text": "correct you need unique number of",
    "start": "586819",
    "end": "588620"
  },
  {
    "text": "instances that we have for a given",
    "start": "588620",
    "end": "589790"
  },
  {
    "text": "service so as suffer as an example the",
    "start": "589790",
    "end": "592100"
  },
  {
    "text": "container ID is a very high cardinality",
    "start": "592100",
    "end": "593600"
  },
  {
    "text": "because there's many of them that are",
    "start": "593600",
    "end": "594649"
  },
  {
    "text": "very ephemeral in nature a lot of them",
    "start": "594649",
    "end": "596360"
  },
  {
    "text": "can come up so this is where you want to",
    "start": "596360",
    "end": "598819"
  },
  {
    "text": "be able to make sure that your system",
    "start": "598819",
    "end": "601069"
  },
  {
    "text": "can handle all these types of scenarios",
    "start": "601069",
    "end": "603290"
  },
  {
    "text": "another high cardinality data somewhat",
    "start": "603290",
    "end": "605480"
  },
  {
    "text": "high cardinality are the number of hosts",
    "start": "605480",
    "end": "607069"
  },
  {
    "text": "as an example so here you get to see the",
    "start": "607069",
    "end": "608930"
  },
  {
    "text": "monitoring of all your hosts you'll also",
    "start": "608930",
    "end": "610790"
  },
  {
    "text": "notice that this is actually an EPS the",
    "start": "610790",
    "end": "613130"
  },
  {
    "text": "cluster nodes you can easily create",
    "start": "613130",
    "end": "615319"
  },
  {
    "text": "alarms on any one of these metrics",
    "start": "615319",
    "end": "616940"
  },
  {
    "text": "either at the node level or a cluster",
    "start": "616940",
    "end": "619459"
  },
  {
    "text": "level I think most most importantly",
    "start": "619459",
    "end": "621230"
  },
  {
    "text": "people are always interested in the pod",
    "start": "621230",
    "end": "623300"
  },
  {
    "text": "level so let's go ahead and you'll see",
    "start": "623300",
    "end": "626389"
  },
  {
    "text": "here this was at the know level you also",
    "start": "626389",
    "end": "628310"
  },
  {
    "text": "have the name space so if you have",
    "start": "628310",
    "end": "629750"
  },
  {
    "text": "multiple teams developing in separate",
    "start": "629750",
    "end": "631339"
  },
  {
    "text": "name space",
    "start": "631339",
    "end": "631940"
  },
  {
    "text": "this will automatically aggregate the",
    "start": "631940",
    "end": "633380"
  },
  {
    "text": "compute capacity across your your",
    "start": "633380",
    "end": "635329"
  },
  {
    "text": "compute utilization by those services so",
    "start": "635329",
    "end": "637160"
  },
  {
    "text": "exactly what's using that compute",
    "start": "637160",
    "end": "638750"
  },
  {
    "text": "capacity so if you're trying to educate",
    "start": "638750",
    "end": "640370"
  },
  {
    "text": "your teams how they can better optimize",
    "start": "640370",
    "end": "642230"
  },
  {
    "text": "compute capacity or if they've just made",
    "start": "642230",
    "end": "644029"
  },
  {
    "text": "a change they've deployed a new version",
    "start": "644029",
    "end": "646160"
  },
  {
    "text": "of a pod or a task or anything else",
    "start": "646160",
    "end": "648260"
  },
  {
    "text": "you'll know how much more compute",
    "start": "648260",
    "end": "649610"
  },
  {
    "text": "capacity do you need so you can actually",
    "start": "649610",
    "end": "650870"
  },
  {
    "text": "project and deploy the right compute",
    "start": "650870",
    "end": "653300"
  },
  {
    "text": "capacity of your cluster unless you're",
    "start": "653300",
    "end": "654949"
  },
  {
    "text": "using fergie which you don't have to",
    "start": "654949",
    "end": "655970"
  },
  {
    "text": "really worry about that but you may be",
    "start": "655970",
    "end": "657290"
  },
  {
    "text": "more concerned about costs in that case",
    "start": "657290",
    "end": "658790"
  },
  {
    "text": "so let's go ahead and drill into a",
    "start": "658790",
    "end": "660589"
  },
  {
    "text": "specific pod and show you what you can",
    "start": "660589",
    "end": "662689"
  },
  {
    "text": "do from a pod standpoint",
    "start": "662689",
    "end": "665649"
  },
  {
    "text": "go to way down on pods so in a pod",
    "start": "666410",
    "end": "670610"
  },
  {
    "text": "scenario here what I want to be able to",
    "start": "670610",
    "end": "671990"
  },
  {
    "text": "do is you may want to be able to isolate",
    "start": "671990",
    "end": "673370"
  },
  {
    "text": "a specific service you can easily search",
    "start": "673370",
    "end": "675529"
  },
  {
    "text": "for these services loegen not interested",
    "start": "675529",
    "end": "677779"
  },
  {
    "text": "this is a demo app so this makes sense",
    "start": "677779",
    "end": "679190"
  },
  {
    "text": "you get fluent II you know there's no",
    "start": "679190",
    "end": "680930"
  },
  {
    "text": "hiding here every container that are",
    "start": "680930",
    "end": "682370"
  },
  {
    "text": "running in your environment you'll get",
    "start": "682370",
    "end": "683360"
  },
  {
    "text": "to see more visibility but most",
    "start": "683360",
    "end": "684980"
  },
  {
    "text": "importantly if I take a specific service",
    "start": "684980",
    "end": "686509"
  },
  {
    "text": "tree I'm gonna go ahead and filter an",
    "start": "686509",
    "end": "687860"
  },
  {
    "text": "image service as an example",
    "start": "687860",
    "end": "689439"
  },
  {
    "text": "go ahead and apply that this will help",
    "start": "689439",
    "end": "692180"
  },
  {
    "text": "me correlate the data that I have for a",
    "start": "692180",
    "end": "694879"
  },
  {
    "text": "couple of different nodes here be able",
    "start": "694879",
    "end": "696740"
  },
  {
    "text": "to quickly look at what's going on and",
    "start": "696740",
    "end": "698180"
  },
  {
    "text": "correlate this across all my metrics but",
    "start": "698180",
    "end": "700250"
  },
  {
    "text": "most importantly be able to look at the",
    "start": "700250",
    "end": "701660"
  },
  {
    "text": "application logs so as me as mahir was",
    "start": "701660",
    "end": "703939"
  },
  {
    "text": "mentioning we're using fluent D fluent D",
    "start": "703939",
    "end": "705589"
  },
  {
    "text": "is an open source project adopted by the",
    "start": "705589",
    "end": "707300"
  },
  {
    "text": "cloud watch started by the club native",
    "start": "707300",
    "end": "709730"
  },
  {
    "text": "computing foundation and that is one of",
    "start": "709730",
    "end": "711769"
  },
  {
    "text": "the most adopted ways of collecting logs",
    "start": "711769",
    "end": "713480"
  },
  {
    "text": "we wanted to make sure that we support",
    "start": "713480",
    "end": "714529"
  },
  {
    "text": "this open source project and ultimately",
    "start": "714529",
    "end": "716750"
  },
  {
    "text": "this gives you the ability to drill into",
    "start": "716750",
    "end": "718279"
  },
  {
    "text": "these logs in context to the container",
    "start": "718279",
    "end": "720949"
  },
  {
    "text": "that you're on and as well as the time",
    "start": "720949",
    "end": "723199"
  },
  {
    "text": "window that you're in so you can",
    "start": "723199",
    "end": "725000"
  },
  {
    "text": "actually go and quickly look at the logs",
    "start": "725000",
    "end": "726680"
  },
  {
    "text": "that you have you make this a little bit",
    "start": "726680",
    "end": "728959"
  },
  {
    "text": "bigger and be able to look at all the",
    "start": "728959",
    "end": "730970"
  },
  {
    "text": "metadata that we're decorating all of",
    "start": "730970",
    "end": "732560"
  },
  {
    "text": "these long lines with so this includes",
    "start": "732560",
    "end": "734389"
  },
  {
    "text": "things like the labels that you have so",
    "start": "734389",
    "end": "736430"
  },
  {
    "text": "you can usually slice and dice based on",
    "start": "736430",
    "end": "737959"
  },
  {
    "text": "labels by name space by pod ad pod name",
    "start": "737959",
    "end": "741230"
  },
  {
    "text": "and even a container name if container",
    "start": "741230",
    "end": "743870"
  },
  {
    "text": "an image name if you want so it gives",
    "start": "743870",
    "end": "745279"
  },
  {
    "text": "you a lot of flexibility in how you you",
    "start": "745279",
    "end": "746899"
  },
  {
    "text": "diagnose some of these application so",
    "start": "746899",
    "end": "748759"
  },
  {
    "text": "let me give you an example of some of",
    "start": "748759",
    "end": "749779"
  },
  {
    "text": "the pre-built dashboards that I also did",
    "start": "749779",
    "end": "751540"
  },
  {
    "text": "in this environment so if I go into",
    "start": "751540",
    "end": "753860"
  },
  {
    "text": "let's do cluster overview this cluster",
    "start": "753860",
    "end": "758350"
  },
  {
    "text": "this is an example cloud wash logs in",
    "start": "758350",
    "end": "761000"
  },
  {
    "text": "sites quarries CloudWatch logs in sides",
    "start": "761000",
    "end": "762500"
  },
  {
    "text": "as here again mention is the ability to",
    "start": "762500",
    "end": "764420"
  },
  {
    "text": "analyze all of this rich metadata coming",
    "start": "764420",
    "end": "766519"
  },
  {
    "text": "from from logs from these performance",
    "start": "766519",
    "end": "768560"
  },
  {
    "text": "events these high cardinality events",
    "start": "768560",
    "end": "769939"
  },
  {
    "text": "that I was mentioning and bring that",
    "start": "769939",
    "end": "771410"
  },
  {
    "text": "data all together and be able to",
    "start": "771410",
    "end": "772910"
  },
  {
    "text": "summarize that for your team so that you",
    "start": "772910",
    "end": "774259"
  },
  {
    "text": "understand exactly what's going on in",
    "start": "774259",
    "end": "775579"
  },
  {
    "text": "your environment so in this case here by",
    "start": "775579",
    "end": "777230"
  },
  {
    "text": "pod damn it get to see all of my",
    "start": "777230",
    "end": "778399"
  },
  {
    "text": "containers that are running the instance",
    "start": "778399",
    "end": "779750"
  },
  {
    "text": "of my containers the number of requested",
    "start": "779750",
    "end": "781100"
  },
  {
    "text": "versus running the ability of pod",
    "start": "781100",
    "end": "782990"
  },
  {
    "text": "restarts getting good and metric that",
    "start": "782990",
    "end": "784730"
  },
  {
    "text": "you maybe want to be able to look at",
    "start": "784730",
    "end": "785899"
  },
  {
    "text": "alarm yourself on I've seen a lot of",
    "start": "785899",
    "end": "787309"
  },
  {
    "text": "restarts in your environment and others",
    "start": "787309",
    "end": "789079"
  },
  {
    "text": "good metrics like failure metrics that",
    "start": "789079",
    "end": "791089"
  },
  {
    "text": "you have so these are all examples how",
    "start": "791089",
    "end": "792680"
  },
  {
    "text": "you can use rich analytics to be able to",
    "start": "792680",
    "end": "794449"
  },
  {
    "text": "better analyze and troubleshoot and",
    "start": "794449",
    "end": "796649"
  },
  {
    "text": "using your environment alright can you",
    "start": "796649",
    "end": "802230"
  },
  {
    "text": "go back to that previous screen where",
    "start": "802230",
    "end": "803639"
  },
  {
    "text": "you were kind of showcasing the logs",
    "start": "803639",
    "end": "805379"
  },
  {
    "text": "right there and you're able to search",
    "start": "805379",
    "end": "806550"
  },
  {
    "text": "for that that ability the search is that",
    "start": "806550",
    "end": "809699"
  },
  {
    "text": "new as well that it's a good question",
    "start": "809699",
    "end": "812100"
  },
  {
    "text": "call martial arts insight was actually",
    "start": "812100",
    "end": "813540"
  },
  {
    "text": "introduced back in at reinvent last year",
    "start": "813540",
    "end": "815730"
  },
  {
    "text": "okay a lot of people are still trying to",
    "start": "815730",
    "end": "817410"
  },
  {
    "text": "figure out what that is it's it's a rich",
    "start": "817410",
    "end": "818790"
  },
  {
    "text": "I'll actually let me let me you actually",
    "start": "818790",
    "end": "820350"
  },
  {
    "text": "go through a log and let me show you",
    "start": "820350",
    "end": "821579"
  },
  {
    "text": "some of the examples of what we can do",
    "start": "821579",
    "end": "822839"
  },
  {
    "text": "with these logs they could perform its",
    "start": "822839",
    "end": "825929"
  },
  {
    "text": "logs as an example so here's let me tell",
    "start": "825929",
    "end": "830819"
  },
  {
    "text": "you a little bit more about cloud wash",
    "start": "830819",
    "end": "831899"
  },
  {
    "text": "logs insight so Claude wash logs insight",
    "start": "831899",
    "end": "833429"
  },
  {
    "text": "is they simply advanced query language",
    "start": "833429",
    "end": "835199"
  },
  {
    "text": "that helps you analyze all of the logs",
    "start": "835199",
    "end": "836699"
  },
  {
    "text": "that you have in your environment so",
    "start": "836699",
    "end": "837929"
  },
  {
    "text": "what I'm going to do here it allows you",
    "start": "837929",
    "end": "839279"
  },
  {
    "text": "to put filters limits in your",
    "start": "839279",
    "end": "842519"
  },
  {
    "text": "environment ultimately you have the",
    "start": "842519",
    "end": "844319"
  },
  {
    "text": "commands here on the left the ability to",
    "start": "844319",
    "end": "845699"
  },
  {
    "text": "add fields filters stats command there's",
    "start": "845699",
    "end": "848519"
  },
  {
    "text": "obviously a documentation that explains",
    "start": "848519",
    "end": "849689"
  },
  {
    "text": "all of this for you source limit parcel",
    "start": "849689",
    "end": "851999"
  },
  {
    "text": "Parcells pew with unstructured logs",
    "start": "851999",
    "end": "854209"
  },
  {
    "text": "one-liners like nginx Apache logs where",
    "start": "854209",
    "end": "857699"
  },
  {
    "text": "you can actually extract any of the",
    "start": "857699",
    "end": "858869"
  },
  {
    "text": "elements in the fields and be able to",
    "start": "858869",
    "end": "860459"
  },
  {
    "text": "make these discoverable fields these are",
    "start": "860459",
    "end": "862949"
  },
  {
    "text": "discoverable fields here this is what we",
    "start": "862949",
    "end": "864360"
  },
  {
    "text": "automatically detected so for our",
    "start": "864360",
    "end": "866490"
  },
  {
    "text": "performance events or application logs",
    "start": "866490",
    "end": "868350"
  },
  {
    "text": "coming from containers these are all",
    "start": "868350",
    "end": "870059"
  },
  {
    "text": "JSON formatted so we automatically",
    "start": "870059",
    "end": "871620"
  },
  {
    "text": "detect JSON and can automatically",
    "start": "871620",
    "end": "873569"
  },
  {
    "text": "extract the field names or attribute",
    "start": "873569",
    "end": "876389"
  },
  {
    "text": "names to be able to add to your search",
    "start": "876389",
    "end": "878790"
  },
  {
    "text": "expressions so in this case here if I",
    "start": "878790",
    "end": "880559"
  },
  {
    "text": "want to be able to learn more about",
    "start": "880559",
    "end": "881579"
  },
  {
    "text": "image service and what's going on my",
    "start": "881579",
    "end": "883199"
  },
  {
    "text": "image service I can do simple queries",
    "start": "883199",
    "end": "885240"
  },
  {
    "text": "live stats let's do a count of log",
    "start": "885240",
    "end": "891089"
  },
  {
    "text": "stream by stream equal standard error as",
    "start": "891089",
    "end": "895559"
  },
  {
    "text": "an example so there's two types of",
    "start": "895559",
    "end": "896730"
  },
  {
    "text": "streams standard and the standard error",
    "start": "896730",
    "end": "897990"
  },
  {
    "text": "standard out what's probably more",
    "start": "897990",
    "end": "899670"
  },
  {
    "text": "interested interesting to look at times",
    "start": "899670",
    "end": "901470"
  },
  {
    "text": "is looking at your your standard out",
    "start": "901470",
    "end": "902670"
  },
  {
    "text": "streams and let's also do that because I",
    "start": "902670",
    "end": "904799"
  },
  {
    "text": "want to do that by by stream actually",
    "start": "904799",
    "end": "909179"
  },
  {
    "text": "with certify stream here run query this",
    "start": "909179",
    "end": "914670"
  },
  {
    "text": "will give me a count of all of these",
    "start": "914670",
    "end": "916860"
  },
  {
    "text": "streams by streams error and if I would",
    "start": "916860",
    "end": "919980"
  },
  {
    "text": "have done that right count",
    "start": "919980",
    "end": "926509"
  },
  {
    "text": "stream just doing this live is always",
    "start": "926509",
    "end": "931850"
  },
  {
    "text": "the first thing I'm noticing right away",
    "start": "931850",
    "end": "933870"
  },
  {
    "text": "is this is so much better than regex",
    "start": "933870",
    "end": "935250"
  },
  {
    "text": "right yeah have you the ability to have",
    "start": "935250",
    "end": "937319"
  },
  {
    "text": "a search link we go through that nobody",
    "start": "937319",
    "end": "939420"
  },
  {
    "text": "wants to do regex",
    "start": "939420",
    "end": "940319"
  },
  {
    "text": "yeah well let me do another one by",
    "start": "940319",
    "end": "941790"
  },
  {
    "text": "container name as an example",
    "start": "941790",
    "end": "943470"
  },
  {
    "text": "that'll be maybe easier but just gives",
    "start": "943470",
    "end": "945899"
  },
  {
    "text": "me the logs the count logs of errors by",
    "start": "945899",
    "end": "948750"
  },
  {
    "text": "container name so it gives you an",
    "start": "948750",
    "end": "950160"
  },
  {
    "text": "examples container name or kubernetes",
    "start": "950160",
    "end": "952740"
  },
  {
    "text": "actually this is a different logs of you",
    "start": "952740",
    "end": "954360"
  },
  {
    "text": "buy containers kubernetes post something",
    "start": "954360",
    "end": "960389"
  },
  {
    "text": "that actually exists but this gives you",
    "start": "960389",
    "end": "964589"
  },
  {
    "text": "an example of what what types of council",
    "start": "964589",
    "end": "966329"
  },
  {
    "text": "of different performance events coming",
    "start": "966329",
    "end": "967620"
  },
  {
    "text": "from different hosts you can go ahead",
    "start": "967620",
    "end": "968970"
  },
  {
    "text": "and do all kinds of rich analytics save",
    "start": "968970",
    "end": "970800"
  },
  {
    "text": "that to your own dashboards any of the",
    "start": "970800",
    "end": "972810"
  },
  {
    "text": "automatic dashboards that you saw before",
    "start": "972810",
    "end": "974129"
  },
  {
    "text": "it can also be saved to your own custom",
    "start": "974129",
    "end": "975600"
  },
  {
    "text": "dashboard so you can decide what what's",
    "start": "975600",
    "end": "977879"
  },
  {
    "text": "important to you and how you want to",
    "start": "977879",
    "end": "978930"
  },
  {
    "text": "learn about these metrics perfect",
    "start": "978930",
    "end": "980399"
  },
  {
    "text": "perfect so if oneis could get some",
    "start": "980399",
    "end": "982889"
  },
  {
    "text": "takeaways for the service I guess when",
    "start": "982889",
    "end": "985949"
  },
  {
    "text": "you're running containers at scale",
    "start": "985949",
    "end": "987709"
  },
  {
    "text": "monitoring is hard right there are lots",
    "start": "987709",
    "end": "990060"
  },
  {
    "text": "of moving parts and that's really rare",
    "start": "990060",
    "end": "992279"
  },
  {
    "text": "container inside is the the value right",
    "start": "992279",
    "end": "994410"
  },
  {
    "text": "there right seeing what's wrong",
    "start": "994410",
    "end": "996089"
  },
  {
    "text": "not letting pressure happening from your",
    "start": "996089",
    "end": "999839"
  },
  {
    "text": "resources not letting something get",
    "start": "999839",
    "end": "1001819"
  },
  {
    "text": "evicted containers get evicted having",
    "start": "1001819",
    "end": "1004490"
  },
  {
    "text": "monitors for that I think it's also what",
    "start": "1004490",
    "end": "1006589"
  },
  {
    "text": "do you select right in these",
    "start": "1006589",
    "end": "1007759"
  },
  {
    "text": "environments if you're new to containers",
    "start": "1007759",
    "end": "1009259"
  },
  {
    "text": "or even if you're you're very mature in",
    "start": "1009259",
    "end": "1011000"
  },
  {
    "text": "containers right there's always certain",
    "start": "1011000",
    "end": "1012680"
  },
  {
    "text": "metrics that are more important than",
    "start": "1012680",
    "end": "1013850"
  },
  {
    "text": "others same thing as logs right which",
    "start": "1013850",
    "end": "1015709"
  },
  {
    "text": "logs do you need from a host standpoint",
    "start": "1015709",
    "end": "1017720"
  },
  {
    "text": "what are the logs that you need from a",
    "start": "1017720",
    "end": "1019810"
  },
  {
    "text": "theater playing standpoint what are the",
    "start": "1019810",
    "end": "1021709"
  },
  {
    "text": "logs that you need so we've already",
    "start": "1021709",
    "end": "1022579"
  },
  {
    "text": "helped you with that because we've pre",
    "start": "1022579",
    "end": "1023930"
  },
  {
    "text": "curated collected selected the metrics",
    "start": "1023930",
    "end": "1026089"
  },
  {
    "text": "and logs that you need to be able to get",
    "start": "1026089",
    "end": "1027319"
  },
  {
    "text": "started awesome",
    "start": "1027319",
    "end": "1029089"
  },
  {
    "text": "and then some other questions here for",
    "start": "1029089",
    "end": "1031788"
  },
  {
    "text": "you guys first where can our customers",
    "start": "1031789",
    "end": "1034520"
  },
  {
    "text": "go to find out more there's a couple of",
    "start": "1034520",
    "end": "1037220"
  },
  {
    "text": "things coming up first there's a what's",
    "start": "1037220",
    "end": "1038630"
  },
  {
    "text": "new posts for both ECS and eks a",
    "start": "1038630",
    "end": "1040909"
  },
  {
    "text": "container insights for UCS and eks if",
    "start": "1040909",
    "end": "1042709"
  },
  {
    "text": "you also go to the cloud watch page you",
    "start": "1042709",
    "end": "1046730"
  },
  {
    "text": "have a getting started link that you can",
    "start": "1046730",
    "end": "1048380"
  },
  {
    "text": "go to to learn more about what's going",
    "start": "1048380",
    "end": "1049669"
  },
  {
    "text": "on which will also link you to the",
    "start": "1049669",
    "end": "1051140"
  },
  {
    "text": "documentation",
    "start": "1051140",
    "end": "1051890"
  },
  {
    "text": "look for two blogs that are coming up",
    "start": "1051890",
    "end": "1054230"
  },
  {
    "text": "shortly as well for both for container",
    "start": "1054230",
    "end": "1055940"
  },
  {
    "text": "insights 3cs and container insights free",
    "start": "1055940",
    "end": "1057710"
  },
  {
    "text": "chaos",
    "start": "1057710",
    "end": "1058260"
  },
  {
    "text": "help you get started in that analyzing",
    "start": "1058260",
    "end": "1060300"
  },
  {
    "text": "monitoring troubleshooting your",
    "start": "1060300",
    "end": "1061260"
  },
  {
    "text": "environments",
    "start": "1061260",
    "end": "1061860"
  },
  {
    "text": "perfect perfect and then are any of you",
    "start": "1061860",
    "end": "1064560"
  },
  {
    "text": "guys are all three of you are gonna be",
    "start": "1064560",
    "end": "1065730"
  },
  {
    "text": "doing sessions here at AWS that our",
    "start": "1065730",
    "end": "1067860"
  },
  {
    "text": "audience can tune into to watch live",
    "start": "1067860",
    "end": "1069390"
  },
  {
    "text": "yeah absolutely I think from from an",
    "start": "1069390",
    "end": "1072150"
  },
  {
    "text": "observability standpoint we have a",
    "start": "1072150",
    "end": "1073440"
  },
  {
    "text": "container and anomaly detection from",
    "start": "1073440",
    "end": "1075270"
  },
  {
    "text": "cloud wash that's happening at five",
    "start": "1075270",
    "end": "1076380"
  },
  {
    "text": "o'clock today it's recommend you",
    "start": "1076380",
    "end": "1077970"
  },
  {
    "text": "checking that out and I think we got",
    "start": "1077970",
    "end": "1079800"
  },
  {
    "text": "some new things going on and logs show",
    "start": "1079800",
    "end": "1081180"
  },
  {
    "text": "that I flew in plugin for AWS okay and",
    "start": "1081180",
    "end": "1085650"
  },
  {
    "text": "that's essentially a partner's",
    "start": "1085650",
    "end": "1096620"
  },
  {
    "text": "integrated services Karen that's gonna",
    "start": "1096620",
    "end": "1098970"
  },
  {
    "text": "coming up right after this I believe",
    "start": "1098970",
    "end": "1100800"
  },
  {
    "text": "right so great our audience is something",
    "start": "1100800",
    "end": "1102600"
  },
  {
    "text": "to look forward to and we also have a",
    "start": "1102600",
    "end": "1103920"
  },
  {
    "text": "launch pad as well for anomaly detection",
    "start": "1103920",
    "end": "1105450"
  },
  {
    "text": "so my colleague Helen Lin will be",
    "start": "1105450",
    "end": "1108150"
  },
  {
    "text": "presenting at 3:45 I believe so if you",
    "start": "1108150",
    "end": "1110220"
  },
  {
    "text": "want to learn more about anomaly",
    "start": "1110220",
    "end": "1111180"
  },
  {
    "text": "detection and how you can actually apply",
    "start": "1111180",
    "end": "1112710"
  },
  {
    "text": "anomaly detection alarms to be able to",
    "start": "1112710",
    "end": "1114990"
  },
  {
    "text": "improve or eliminate the alarm fatigue",
    "start": "1114990",
    "end": "1118020"
  },
  {
    "text": "and Static creating static alarms I'd",
    "start": "1118020",
    "end": "1120060"
  },
  {
    "text": "recommend you checking out the launch",
    "start": "1120060",
    "end": "1121950"
  },
  {
    "text": "pad that's happening next awesome",
    "start": "1121950",
    "end": "1123330"
  },
  {
    "text": "and then we have a little bit more time",
    "start": "1123330",
    "end": "1124920"
  },
  {
    "text": "left so it's much more question for you",
    "start": "1124920",
    "end": "1126210"
  },
  {
    "text": "guys how can the partner ecosystem take",
    "start": "1126210",
    "end": "1129120"
  },
  {
    "text": "advantage of customer insights yeah",
    "start": "1129120",
    "end": "1131280"
  },
  {
    "text": "great great question I think the partner",
    "start": "1131280",
    "end": "1133170"
  },
  {
    "text": "ecosystem can always take advantage",
    "start": "1133170",
    "end": "1134250"
  },
  {
    "text": "using our API s that we have right so",
    "start": "1134250",
    "end": "1137070"
  },
  {
    "text": "all the metrics that we enable either",
    "start": "1137070",
    "end": "1138480"
  },
  {
    "text": "from e CS or e KS you can actually use",
    "start": "1138480",
    "end": "1141240"
  },
  {
    "text": "our get metric data API is using our get",
    "start": "1141240",
    "end": "1143400"
  },
  {
    "text": "may check the data API our get metric",
    "start": "1143400",
    "end": "1144600"
  },
  {
    "text": "statistic API to be able to query those",
    "start": "1144600",
    "end": "1146640"
  },
  {
    "text": "metrics and bring this into their their",
    "start": "1146640",
    "end": "1147960"
  },
  {
    "text": "solutions same thing for cloud watch",
    "start": "1147960",
    "end": "1150660"
  },
  {
    "text": "logs if you don't have a logging",
    "start": "1150660",
    "end": "1152310"
  },
  {
    "text": "solution and you want to bring in those",
    "start": "1152310",
    "end": "1153330"
  },
  {
    "text": "logs in correlation to other metrics",
    "start": "1153330",
    "end": "1154890"
  },
  {
    "text": "that you're collecting you can actually",
    "start": "1154890",
    "end": "1156540"
  },
  {
    "text": "do CloudWatch logs in sites query using",
    "start": "1156540",
    "end": "1158550"
  },
  {
    "text": "our API as well perfect",
    "start": "1158550",
    "end": "1161100"
  },
  {
    "text": "all right well thank you everyone it was",
    "start": "1161100",
    "end": "1164040"
  },
  {
    "text": "great having you here hopefully our",
    "start": "1164040",
    "end": "1165090"
  },
  {
    "text": "audience loved it",
    "start": "1165090",
    "end": "1166650"
  },
  {
    "text": "Thanks",
    "start": "1166650",
    "end": "1169250"
  }
]