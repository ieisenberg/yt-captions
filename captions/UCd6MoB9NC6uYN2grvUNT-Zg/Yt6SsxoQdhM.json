[
  {
    "text": "hello ladies and gentlemen and welcome to the amazon web services partner webinar series",
    "start": "240",
    "end": "5839"
  },
  {
    "text": "our topic today will demonstrate how to leverage the aws cloud for event transcoding and",
    "start": "5839",
    "end": "12799"
  },
  {
    "text": "distribution i'm your host maya capaci with the",
    "start": "12799",
    "end": "17920"
  },
  {
    "text": "partner marketing team here in seattle i'd like to start with a couple of",
    "start": "17920",
    "end": "23279"
  },
  {
    "text": "housekeeping items we are recording today's webinar and while lines are muted you can submit questions any time",
    "start": "23279",
    "end": "29679"
  },
  {
    "text": "during your presentation use the q a widget in your browser to do so we'll take time for questions at the",
    "start": "29679",
    "end": "35600"
  },
  {
    "text": "close of the webcast in addition this presentation will be available for on-demand you may find our",
    "start": "35600",
    "end": "41920"
  },
  {
    "text": "webinar recording and materials available on aws youtube channels",
    "start": "41920",
    "end": "48399"
  },
  {
    "text": "i am pleased to be joined by matthew mcclure the encoder developer evangelist with brightcove and john mancuso",
    "start": "50079",
    "end": "56320"
  },
  {
    "text": "solutions architect with amazon web services",
    "start": "56320",
    "end": "60960"
  },
  {
    "text": "on the agenda",
    "start": "63039",
    "end": "66359"
  },
  {
    "text": "introduction to amazon web services and overview of amazon cloud front for content delivery",
    "start": "73520",
    "end": "79680"
  },
  {
    "text": "and then an overview of the encoder and how to leverage the cloud to scale live stream transcoding",
    "start": "79680",
    "end": "86920"
  },
  {
    "text": "we will begin today with uh john mancuso who will talk about amazon cloudfront",
    "start": "90000",
    "end": "96079"
  },
  {
    "text": "then we'll pass the mic to matthew mcclure who will show a demo presentation of the encoder we'll wrap",
    "start": "96079",
    "end": "101200"
  },
  {
    "text": "up with a q a so without further delay let me turn it over to john mancuso solutions architect",
    "start": "101200",
    "end": "106880"
  },
  {
    "text": "with amazon web services take it away john thank you maya hi i'm john mancuso uh solutions",
    "start": "106880",
    "end": "114640"
  },
  {
    "text": "architect with with amazon web services as maya said uh and what what i'm going to talk about",
    "start": "114640",
    "end": "120320"
  },
  {
    "text": "a little bit today is how you can how you can",
    "start": "120320",
    "end": "125439"
  },
  {
    "text": "leverage aws for your live event distribution um so i'm going to give you a little bit",
    "start": "125439",
    "end": "130800"
  },
  {
    "text": "of a preview premier primer on what aws actually is",
    "start": "130800",
    "end": "136160"
  },
  {
    "text": "and then talk about some of the specific services that you would leverage to do your live",
    "start": "136160",
    "end": "142000"
  },
  {
    "text": "event trans uh transcoding distribution and pass it over to matt so",
    "start": "142000",
    "end": "147920"
  },
  {
    "text": "uh one of the first questions that we always get one of the first questions that we always get whenever we talk about",
    "start": "147920",
    "end": "154080"
  },
  {
    "text": "amazon web services is how did amazon get into the get into cloud computing",
    "start": "154080",
    "end": "159440"
  },
  {
    "text": "so the the short story is that uh approximately 10 years ago",
    "start": "159440",
    "end": "166680"
  },
  {
    "text": "amazon.com the retail business started embracing service-oriented architectures",
    "start": "166680",
    "end": "173360"
  },
  {
    "text": "and in doing so uh we developed uh separate product teams to release uh",
    "start": "173360",
    "end": "179680"
  },
  {
    "text": "to to deliver new features and enhancements to to amazon.com's retail",
    "start": "179680",
    "end": "184720"
  },
  {
    "text": "site each of these separate product teams would",
    "start": "184720",
    "end": "190560"
  },
  {
    "text": "it turned out that each of these separate product teams would have common common needs and asks many of them would",
    "start": "190560",
    "end": "196159"
  },
  {
    "text": "ask for things like compute and storage and uh and other i.t related services",
    "start": "196159",
    "end": "203440"
  },
  {
    "text": "and so what amazon uh decided to do was build a a set of shared services to",
    "start": "203440",
    "end": "209360"
  },
  {
    "text": "deliver these types of things so uh once we did that it made it much more",
    "start": "209360",
    "end": "215680"
  },
  {
    "text": "efficient for these product teams to be able to roll out their their own services",
    "start": "215680",
    "end": "222159"
  },
  {
    "text": "and in doing so we asked ourselves if this was useful for amazon",
    "start": "222159",
    "end": "227280"
  },
  {
    "text": "as a whole wouldn't it would it be possible that other customers would also be interested in in",
    "start": "227280",
    "end": "233760"
  },
  {
    "text": "this type of thing so that really was the birth of amazon web services the ability to provide",
    "start": "233760",
    "end": "239760"
  },
  {
    "text": "service i.t related services to uh consumers on demand",
    "start": "239760",
    "end": "245920"
  },
  {
    "text": "so what is uh amazon web services well uh",
    "start": "245920",
    "end": "251439"
  },
  {
    "text": "you you can think of it as as two things first a global a set of global infrastructure uh",
    "start": "251439",
    "end": "258479"
  },
  {
    "text": "and within that set of global infrastructure uh are a number of different services that",
    "start": "258479",
    "end": "263520"
  },
  {
    "text": "you can consume to meet your your i.t needs so our global infrastructure is made up",
    "start": "263520",
    "end": "269840"
  },
  {
    "text": "of a number of what we call regions availability zones and edge locations",
    "start": "269840",
    "end": "276240"
  },
  {
    "text": "if you look at if you look at this map you'll see that the large boxes",
    "start": "276240",
    "end": "281440"
  },
  {
    "text": "represent our regions the small boxes are availability zones and the stars are edge locations",
    "start": "281440",
    "end": "288720"
  },
  {
    "text": "so what a what a region is is a collection of data centers",
    "start": "288720",
    "end": "294639"
  },
  {
    "text": "and we refer to those data centers as availability zones and so if you uh consume services that",
    "start": "294639",
    "end": "301919"
  },
  {
    "text": "are in multiple availability zones you'll know that you're putting things into isolated data centers within uh within",
    "start": "301919",
    "end": "308960"
  },
  {
    "text": "one of these regions and in terms of the edge locations we'll",
    "start": "308960",
    "end": "314800"
  },
  {
    "text": "talk about that a little later when we look specifically at cloudfront our content delivery network",
    "start": "314800",
    "end": "321840"
  },
  {
    "text": "so what is what is available in some of these regions well like i said it's a",
    "start": "321840",
    "end": "327600"
  },
  {
    "text": "collection of services that you can uh leverage to to deploy your applications to",
    "start": "327600",
    "end": "333199"
  },
  {
    "text": "um so examples of of these services are uh",
    "start": "333199",
    "end": "339840"
  },
  {
    "text": "things like compute which is amazon ec2 and for storage we have amazon s3 simple",
    "start": "339840",
    "end": "345039"
  },
  {
    "text": "storage service and glacier and a little bit further up the stack we have",
    "start": "345039",
    "end": "350880"
  },
  {
    "text": "our content delivery network cloudfront so the the specific services that i'm going to focus on today related to uh",
    "start": "350880",
    "end": "358319"
  },
  {
    "text": "live event transcoding and distribution is amazon s3 for storage amazon glacier",
    "start": "358319",
    "end": "363600"
  },
  {
    "text": "also for storage and content delivery with cloudfront",
    "start": "363600",
    "end": "368960"
  },
  {
    "text": "so what is uh what is amazon s3 simple storage service",
    "start": "370240",
    "end": "376319"
  },
  {
    "text": "it's what we refer to as object storage and an object is really uh",
    "start": "376319",
    "end": "382880"
  },
  {
    "text": "a what we call a a is made up of a key and a value and the key is you could think",
    "start": "382880",
    "end": "388400"
  },
  {
    "text": "of as a file name and the value is the collection of bits that make up",
    "start": "388400",
    "end": "393440"
  },
  {
    "text": "the file so in in this in this use case that we're going to be",
    "start": "393440",
    "end": "398800"
  },
  {
    "text": "showing you today for live event transcoding and distribution what zen coder",
    "start": "398800",
    "end": "403840"
  },
  {
    "text": "is going to be doing our partner on this call is going to be taking in",
    "start": "403840",
    "end": "409199"
  },
  {
    "text": "your your live stream during the transcoding and storing the chunks that",
    "start": "409199",
    "end": "414479"
  },
  {
    "text": "are generated uh via their transcode process on amazon s3 for delivery",
    "start": "414479",
    "end": "421280"
  },
  {
    "text": "uh and one of the reasons why the uh why they leverage s3 is because it's",
    "start": "421280",
    "end": "426880"
  },
  {
    "text": "highly scalable reliable fast and durable and it's natively online on the internet",
    "start": "426880",
    "end": "432639"
  },
  {
    "text": "so there's nothing that you need to do to um to to publish a file other than make it",
    "start": "432639",
    "end": "438800"
  },
  {
    "text": "uh make sure that the permissions are set appropriately uh so why you know why do you care about",
    "start": "438800",
    "end": "446400"
  },
  {
    "text": "the scalability reliability and durability well one uh when you're when you're doing your live streaming uh you",
    "start": "446400",
    "end": "452960"
  },
  {
    "text": "want to make sure that uh that that the the stream is going to be available to",
    "start": "452960",
    "end": "458479"
  },
  {
    "text": "all the viewers uh you want to so so you don't by use leveraging s3 you won't have to consider",
    "start": "458479",
    "end": "464560"
  },
  {
    "text": "things like a disk failure um in terms of",
    "start": "464560",
    "end": "470319"
  },
  {
    "text": "you know being highly scalable if you if your live event is let's say broadcasted to you know tens of",
    "start": "470960",
    "end": "477360"
  },
  {
    "text": "thousands or hundreds of thousands of viewers you want to make sure that it the storage subsystem that you're using",
    "start": "477360",
    "end": "482879"
  },
  {
    "text": "is capable of scaling that way and with s3 you get all those things",
    "start": "482879",
    "end": "489039"
  },
  {
    "text": "so once once your event is uh completed what you'll end up with in is a number",
    "start": "491039",
    "end": "498000"
  },
  {
    "text": "of uh of of these segments of the video segments usually uh you know it can add",
    "start": "498000",
    "end": "504960"
  },
  {
    "text": "the numbers can it can add up quite large uh depending on the duration of the event",
    "start": "504960",
    "end": "510080"
  },
  {
    "text": "and uh oftentimes uh you you you won't need those chunks but maybe you'd like to",
    "start": "510080",
    "end": "516159"
  },
  {
    "text": "preserve them for some reason and if you do maybe you want to show uh show a webinar uh or show a",
    "start": "516159",
    "end": "524640"
  },
  {
    "text": "replay your live event you know months down the road uh and you'd like to use the the segmented format that",
    "start": "524640",
    "end": "531120"
  },
  {
    "text": "was originally used uh you could archive to amazon glacier and what what amazon glacier is an",
    "start": "531120",
    "end": "537680"
  },
  {
    "text": "extremely low cost uh version storage and one of the reasons that we can make",
    "start": "537680",
    "end": "543120"
  },
  {
    "text": "it uh so low cost is is because there's a",
    "start": "543120",
    "end": "548480"
  },
  {
    "text": "uh there's a longer time to get the the file",
    "start": "548480",
    "end": "553839"
  },
  {
    "text": "any files that you're requesting so with s3 when you make a request for a file it's available immediately there's no",
    "start": "553839",
    "end": "559920"
  },
  {
    "text": "delays with amazon glacier you'd have to wait three to four hours to get the file back so",
    "start": "559920",
    "end": "565440"
  },
  {
    "text": "uh for archival it's a perfect storage solution uh and the price point is",
    "start": "565440",
    "end": "571040"
  },
  {
    "text": "in the order of or is typically one cent per gig per month",
    "start": "571040",
    "end": "576720"
  },
  {
    "text": "which is uh you know extremely low for for the type of storage that you're getting with glacier",
    "start": "576720",
    "end": "583759"
  },
  {
    "text": "so now that you know that you'll store your uh video fragments in s3",
    "start": "587279",
    "end": "593760"
  },
  {
    "text": "and archive them in glacier you want to think about how to deliver uh the video",
    "start": "593760",
    "end": "599440"
  },
  {
    "text": "to your to your end viewers and in or one of the ways that we would",
    "start": "599440",
    "end": "605839"
  },
  {
    "text": "recommend that you do that is to leverage a cdn so uh what is a cdn you might ask first",
    "start": "605839",
    "end": "613519"
  },
  {
    "text": "well a cdn is a content delivery network and it uses a network of geographically dispersed servers also referred to as",
    "start": "613519",
    "end": "620399"
  },
  {
    "text": "edge locations or pops cache copies of content close to nurse users lowering latency when they",
    "start": "620399",
    "end": "626000"
  },
  {
    "text": "download or stream objects so just to pick out a few key terms in that definition",
    "start": "626000",
    "end": "632800"
  },
  {
    "text": "geographically dispersed uh so if if you remember back from that originally original slide those stars",
    "start": "632800",
    "end": "639760"
  },
  {
    "text": "that you saw for our edge locations are are located around the globe and the reason that uh that you'd want",
    "start": "639760",
    "end": "646640"
  },
  {
    "text": "that is whenever a uh viewer of your content or of your live stream",
    "start": "646640",
    "end": "652720"
  },
  {
    "text": "is uh requesting uh requesting the stream uh you'll wanna have it",
    "start": "652720",
    "end": "658160"
  },
  {
    "text": "have the server that responds to that request be as close to the end user as possible and so that's why we",
    "start": "658160",
    "end": "664240"
  },
  {
    "text": "have a number of these educations around the goal and what those servers are doing in these edge locations are",
    "start": "664240",
    "end": "669440"
  },
  {
    "text": "caching copies of the content so as the stream is progressing",
    "start": "669440",
    "end": "675120"
  },
  {
    "text": "uh the fragments can live uh temporarily anyway on the uh on the edge servers",
    "start": "675120",
    "end": "681200"
  },
  {
    "text": "that are closest to the to this to the viewer and the end result of this is that when somebody is watching a video",
    "start": "681200",
    "end": "687680"
  },
  {
    "text": "they'll get less jitter uh or uh you know be able to see the videos uh",
    "start": "687680",
    "end": "693680"
  },
  {
    "text": "see the stream uh in closer to real time than if they were going directly to s3 or any other uh of origin",
    "start": "693680",
    "end": "703839"
  },
  {
    "text": "so uh a couple to dig a little bit further into what cloudfront is and we'll see uh",
    "start": "706240",
    "end": "712720"
  },
  {
    "text": "matt will be doing a demo of how to configure cloudfront distribution a little later uh but",
    "start": "712720",
    "end": "719519"
  },
  {
    "text": "uh for for uh for reference there's a couple of terms that we'll want to define for you",
    "start": "719519",
    "end": "725200"
  },
  {
    "text": "and in amazon cloudfront uh the two terms that you want to be aware",
    "start": "725200",
    "end": "730480"
  },
  {
    "text": "of uh are distribution and origin and so what a distribution is is basically a set of rules that determines",
    "start": "730480",
    "end": "737839"
  },
  {
    "text": "how cloudfront will access your content in this case the live stream uh output",
    "start": "737839",
    "end": "745279"
  },
  {
    "text": "uh and uh and in the origin will be the actual source of",
    "start": "745279",
    "end": "750560"
  },
  {
    "text": "of that content so that's where you'll specify your s3 location",
    "start": "750560",
    "end": "757720"
  },
  {
    "text": "and uh just take a quick run through of how how this actually works",
    "start": "758079",
    "end": "763680"
  },
  {
    "text": "imagine that you have a site viewer uh somewhere um far away from your origin",
    "start": "763680",
    "end": "769200"
  },
  {
    "text": "so let's say you're running this stream i think matt is running the stream out",
    "start": "769200",
    "end": "774240"
  },
  {
    "text": "of his san francisco office or thereabouts and he'll be published publishing that",
    "start": "774240",
    "end": "780880"
  },
  {
    "text": "to our s3 region in northern california so imagine a site",
    "start": "780880",
    "end": "786880"
  },
  {
    "text": "viewers coming to that um is requesting the stream from from let's",
    "start": "786880",
    "end": "792639"
  },
  {
    "text": "say uh uh sydney uh australia um what they'll do",
    "start": "792639",
    "end": "798800"
  },
  {
    "text": "and what that person would do if they're uh if they're going through cloud front is to hit our",
    "start": "798800",
    "end": "804560"
  },
  {
    "text": "uh crawford edge location uh and we will automatically route that person to the nearest edge location based on latency",
    "start": "804560",
    "end": "811120"
  },
  {
    "text": "uh and so that would likely be in in sydney uh",
    "start": "811120",
    "end": "816720"
  },
  {
    "text": "if that edge location has not determined that it has a copy of the the content what we'll do it will",
    "start": "816720",
    "end": "823040"
  },
  {
    "text": "make a request back to uh to norman to our region in northern",
    "start": "823040",
    "end": "828720"
  },
  {
    "text": "california uh in s3 get the object uh and as it's storing the object in the",
    "start": "828720",
    "end": "835680"
  },
  {
    "text": "cache locally it'll also start delivering it to that person now another person",
    "start": "835680",
    "end": "840959"
  },
  {
    "text": "let's say who's coming online from from from sydney also viewing the stream it could be a fraction of a second later",
    "start": "840959",
    "end": "848320"
  },
  {
    "text": "or or or you know or a minute later even but in a live streaming example",
    "start": "848320",
    "end": "855040"
  },
  {
    "text": "most likely would be just a few fractions of a second later uh and in that case",
    "start": "855040",
    "end": "860160"
  },
  {
    "text": "cloudfront will not have to go back to s3 to get the object it'll simply serve it right out of the edge location that's",
    "start": "860160",
    "end": "865839"
  },
  {
    "text": "local and give the best performance for that end user",
    "start": "865839",
    "end": "871839"
  },
  {
    "text": "so how what are the common ways that customers leverage uh amazon cloudfront uh oftentimes it's for",
    "start": "873279",
    "end": "880320"
  },
  {
    "text": "media delivery things like video and audio also large file",
    "start": "880320",
    "end": "885680"
  },
  {
    "text": "delivery software downloads and just any kinds of web assets like",
    "start": "885680",
    "end": "891120"
  },
  {
    "text": "images css files and javascript files it's useful for all these things because it can lower latency of delivery",
    "start": "891120",
    "end": "898160"
  },
  {
    "text": "uh also gaining a lot of popularity is uh customers wanting to leverage cloudfront",
    "start": "898160",
    "end": "903839"
  },
  {
    "text": "for for dynamic content uh because of optimizations that we'll talk about in a minute",
    "start": "903839",
    "end": "909040"
  },
  {
    "text": "uh and then lastly what we're talking about today is uh really live streaming so things like sporting events corporate",
    "start": "909040",
    "end": "914720"
  },
  {
    "text": "events corporate meetings and and events um so matt will uh be",
    "start": "914720",
    "end": "922480"
  },
  {
    "text": "taking us through the whole process of how to set up a live stream with cloudfront and s3",
    "start": "922480",
    "end": "928959"
  },
  {
    "text": "uh so i what are some of the some of the benefits",
    "start": "931040",
    "end": "936240"
  },
  {
    "text": "of using cloudfront definitely faster we've talked about that because it's uh closer to your end users and",
    "start": "936240",
    "end": "944000"
  },
  {
    "text": "so it's simply uh you know long distance plus a poor network equals slow load times",
    "start": "944000",
    "end": "949839"
  },
  {
    "text": "but if you leverage cloud front you're getting really short distance and an optimized network which will give you",
    "start": "949839",
    "end": "954959"
  },
  {
    "text": "the fast load times so if we just take another look at what the map looked like",
    "start": "954959",
    "end": "961440"
  },
  {
    "text": "you'll see lots of edge locations in north america lots in europe and asia as",
    "start": "961440",
    "end": "966839"
  },
  {
    "text": "well uh and uh also south america and australia so we feel",
    "start": "966839",
    "end": "972720"
  },
  {
    "text": "like we have the globe pretty well covered into many of the areas that uh people are requesting",
    "start": "972720",
    "end": "978560"
  },
  {
    "text": "content from and we're constantly expanding this network as well so if you have a need to be somewhere",
    "start": "978560",
    "end": "984639"
  },
  {
    "text": "that we're not please let us know and very briefly",
    "start": "984639",
    "end": "991040"
  },
  {
    "text": "in addition to just being closer to the end users we're also doing things like optimizing window sizes",
    "start": "991040",
    "end": "997519"
  },
  {
    "text": "uh for tcp connections and we're maintaining persistent connections between cloud front and the",
    "start": "997519",
    "end": "1003199"
  },
  {
    "text": "origin to minimize cpu that the",
    "start": "1003199",
    "end": "1008240"
  },
  {
    "text": "the cpu needs from the origin to maintain multiple connections",
    "start": "1008240",
    "end": "1013199"
  },
  {
    "text": "from a scalability perspective classrooms can definitely give you a lot of benefits as well",
    "start": "1016320",
    "end": "1022959"
  },
  {
    "text": "and i think i'm actually going to skip past a few a few of the slides here just to give matt time that he means",
    "start": "1023680",
    "end": "1030079"
  },
  {
    "text": "uh so bear with me one second uh from a scalability perspective that the main things to understand",
    "start": "1030079",
    "end": "1036319"
  },
  {
    "text": "is that uh cloudfront really can absorb a lot of the traffic that would otherwise hit your origin",
    "start": "1036319",
    "end": "1041760"
  },
  {
    "text": "um for for today's uh session it's not as important because s3 can scale",
    "start": "1041760",
    "end": "1048000"
  },
  {
    "text": "tremendously on its own uh but but it's still uh still does provide",
    "start": "1048000",
    "end": "1053600"
  },
  {
    "text": "certain many benefits there uh cloudfront's also extremely easy to manage especially as compared to a",
    "start": "1053600",
    "end": "1059200"
  },
  {
    "text": "number of other cdns uh because it's completely self-service it's up to you",
    "start": "1059200",
    "end": "1065520"
  },
  {
    "text": "to to configure it entirely on your own you don't have to call anybody to do that",
    "start": "1065520",
    "end": "1072960"
  },
  {
    "text": "and lastly it can also make your applications cost less because",
    "start": "1072960",
    "end": "1079200"
  },
  {
    "text": "there are special um uh pricing benefits uh if you're if you're",
    "start": "1079200",
    "end": "1085440"
  },
  {
    "text": "using a lot of data transfer through cloudfront you can get lower data transfer rates than if you were going directly let's",
    "start": "1085440",
    "end": "1091760"
  },
  {
    "text": "say out of ec2 so to jump ahead just a little bit here to",
    "start": "1091760",
    "end": "1099039"
  },
  {
    "text": "you know how customers typically do live streaming or in the past they've done live",
    "start": "1099039",
    "end": "1105039"
  },
  {
    "text": "streaming with aws what they what they would do is deploy",
    "start": "1105039",
    "end": "1111360"
  },
  {
    "text": "what we call a media server stack and that would be something like adobe",
    "start": "1111360",
    "end": "1116559"
  },
  {
    "text": "media server or wowza media server and they would deploy that on ec on",
    "start": "1116559",
    "end": "1123440"
  },
  {
    "text": "amazon ec2 and to do that would require knowledge of",
    "start": "1123440",
    "end": "1128960"
  },
  {
    "text": "both that product let's say those products either adobe media server or browser media server and knowledge of",
    "start": "1128960",
    "end": "1136640"
  },
  {
    "text": "ec2 and knowledge of uh you know let's say whatever operating system that was",
    "start": "1136640",
    "end": "1142160"
  },
  {
    "text": "running on maybe possibly linux uh and and so on and so",
    "start": "1142160",
    "end": "1147840"
  },
  {
    "text": "uh what what we found is that uh this this may uh been a great option for companies",
    "start": "1147840",
    "end": "1154320"
  },
  {
    "text": "who have lots of experience doing those types of things but many people in the media space know about",
    "start": "1154320",
    "end": "1161039"
  },
  {
    "text": "video and uh so they would they would prefer to have a fully managed solution",
    "start": "1161039",
    "end": "1167679"
  },
  {
    "text": "one where they don't have to think about those things about linux and adobe media server and how to make their stack",
    "start": "1167679",
    "end": "1173919"
  },
  {
    "text": "highly available and scalable and so uh that's what what zencoder really is",
    "start": "1173919",
    "end": "1179360"
  },
  {
    "text": "bringing to the table um their model is quite simply take uh",
    "start": "1179360",
    "end": "1185520"
  },
  {
    "text": "take an input stream publish it to their uh to their endpoints",
    "start": "1185520",
    "end": "1190559"
  },
  {
    "text": "do a little bit of configuration via via their api or or uh",
    "start": "1190559",
    "end": "1196480"
  },
  {
    "text": "via their api and and in the end you'll get an output stream that you can put a cdn like uh like amazon cloud front in",
    "start": "1196480",
    "end": "1203039"
  },
  {
    "text": "front of for delivery so with that uh let me pass it over to matt",
    "start": "1203039",
    "end": "1209919"
  },
  {
    "text": "thanks john uh so as you said i'm matt mcclure",
    "start": "1209919",
    "end": "1215280"
  },
  {
    "text": "i'm with uh brightcove specifically on the encoder team um but so before we",
    "start": "1215280",
    "end": "1221280"
  },
  {
    "text": "before we get started uh because cloudfront distributions can take a few minutes to propagate um",
    "start": "1221280",
    "end": "1226960"
  },
  {
    "text": "we'll go ahead and set one up now uh and and actually full disclosure i've already uh",
    "start": "1226960",
    "end": "1233600"
  },
  {
    "text": "pretty much set one up and that's the one i'm going to be using but just to talk about the process real quick um so",
    "start": "1233600",
    "end": "1240159"
  },
  {
    "text": "if you do if you go to your aws management console",
    "start": "1240159",
    "end": "1245919"
  },
  {
    "text": "and then you see this cloudfront distributions right so uh",
    "start": "1246240",
    "end": "1251520"
  },
  {
    "text": "this is the one i already have this is what i'll be using today um but if you were to create a new",
    "start": "1251520",
    "end": "1258400"
  },
  {
    "text": "distribution um you'd see these two options uh download and streaming uh you",
    "start": "1258400",
    "end": "1264000"
  },
  {
    "text": "might be tempted to select streaming uh but this is going to be used more for uh",
    "start": "1264000",
    "end": "1269120"
  },
  {
    "text": "rtmp streams which is not what we want here so download is what we want because these",
    "start": "1269120",
    "end": "1274960"
  },
  {
    "text": "are actually just files transferred over http so there's no need for anything special",
    "start": "1274960",
    "end": "1281440"
  },
  {
    "text": "there so once you are actually setting up your origin",
    "start": "1281440",
    "end": "1288159"
  },
  {
    "text": "you'll see a list of your s3 buckets you have available um so i've already got one set up as i said",
    "start": "1288159",
    "end": "1295679"
  },
  {
    "text": "but so if i were to set this uh it's already gonna set my origin id",
    "start": "1295679",
    "end": "1301760"
  },
  {
    "text": "you can set restrict bucket access which means your users will only be able to access the contents of that bucket",
    "start": "1301760",
    "end": "1307360"
  },
  {
    "text": "through your cloudfront url so you know we'll say no because we want to access it from both",
    "start": "1307360",
    "end": "1315120"
  },
  {
    "text": "how you want them to view it most of these can stay the default settings",
    "start": "1315120",
    "end": "1320559"
  },
  {
    "text": "the other ones that you might find useful setting up something like this would be what price class you want to use so for",
    "start": "1320559",
    "end": "1326240"
  },
  {
    "text": "instance we're probably only going to be having u.s and europe viewers for our",
    "start": "1326240",
    "end": "1331679"
  },
  {
    "text": "instance so we select something like that um and then we could say",
    "start": "1331679",
    "end": "1339120"
  },
  {
    "text": "set up an alternate domain name so instead of some string generated by cloudfront you could point",
    "start": "1339600",
    "end": "1346320"
  },
  {
    "text": "your users to a stream coming from your uh domain uh which can be cool um and",
    "start": "1346320",
    "end": "1352320"
  },
  {
    "text": "then a root object so say you have an index.html file uh this is what will get",
    "start": "1352320",
    "end": "1357679"
  },
  {
    "text": "served to your viewers first if they don't specify any paths",
    "start": "1357679",
    "end": "1363520"
  },
  {
    "text": "so then once you're ready to go then you could just say leave the distribution of state is enabled",
    "start": "1363520",
    "end": "1368799"
  },
  {
    "text": "and create distribution and usually i've seen it in about 15 minutes um that",
    "start": "1368799",
    "end": "1374080"
  },
  {
    "text": "distribution will be ready so as i said we're not going to actually create one now because we've already got one ready",
    "start": "1374080",
    "end": "1380000"
  },
  {
    "text": "for us um but it's that those are the steps that i took in creating uh",
    "start": "1380000",
    "end": "1386960"
  },
  {
    "text": "this distribution",
    "start": "1386960",
    "end": "1389840"
  },
  {
    "text": "so just a little background about uh myself",
    "start": "1392080",
    "end": "1397360"
  },
  {
    "text": "and brightcove uh so once again i work for cove specifically on this encoder team",
    "start": "1397360",
    "end": "1403520"
  },
  {
    "text": "and brianco pretty much does everything you could want around the distribution and monetization of video",
    "start": "1403520",
    "end": "1410320"
  },
  {
    "text": "particularly on the web so i'm specifically on the zencoder team",
    "start": "1410320",
    "end": "1415360"
  },
  {
    "text": "which is one of the suite of products that writecode provides and we do just video transcoding via api um so live and",
    "start": "1415360",
    "end": "1423520"
  },
  {
    "text": "vod assets um so but the live product is what we'll be talking about today",
    "start": "1423520",
    "end": "1430480"
  },
  {
    "text": "uh so just a little background about these streaming protocols that we're talking about here um you might have you",
    "start": "1430480",
    "end": "1435520"
  },
  {
    "text": "might have noticed that i i mentioned rtmp before as the streaming protocol when you're",
    "start": "1435520",
    "end": "1442640"
  },
  {
    "text": "setting up these things so rtmp is is the other way of streaming at this point",
    "start": "1442640",
    "end": "1447679"
  },
  {
    "text": "um hls and rtmp are kind of the big dogs in the fight at the moment",
    "start": "1447679",
    "end": "1453840"
  },
  {
    "text": "and rtmp is originally developed by macromedia so now it's an adobe product",
    "start": "1453840",
    "end": "1459919"
  },
  {
    "text": "and it was intended for playback and flash but the the kicker here is it requires special rtmp",
    "start": "1459919",
    "end": "1466400"
  },
  {
    "text": "server endpoints so this could be something like flash media server wowza red5",
    "start": "1466400",
    "end": "1474480"
  },
  {
    "text": "and as john said uh this is kind of that crazy stack that he was showing where",
    "start": "1474480",
    "end": "1480159"
  },
  {
    "text": "you'd need to set up these scaling ec2 instances that would take up that would take in an rtmp endpoint uh",
    "start": "1480159",
    "end": "1488080"
  },
  {
    "text": "and then transcode that to maybe other uh",
    "start": "1488080",
    "end": "1493360"
  },
  {
    "text": "it could possibly transmit that to other uh formats and renditions and then your viewers would access those wowza",
    "start": "1493360",
    "end": "1499919"
  },
  {
    "text": "instances directly or with the cdna from but either way",
    "start": "1499919",
    "end": "1504960"
  },
  {
    "text": "it's difficult to scale and it requires all the special server software so uh hls is kind of a much",
    "start": "1504960",
    "end": "1512720"
  },
  {
    "text": "easier quicker way to get started and so this is http live streaming uh",
    "start": "1512720",
    "end": "1518320"
  },
  {
    "text": "and it was most recently implemented by apple as part of quicktime and their ios products",
    "start": "1518320",
    "end": "1524080"
  },
  {
    "text": "uh and so as i said the the really awesome thing about getting started live streaming in hls",
    "start": "1524080",
    "end": "1530480"
  },
  {
    "text": "is that no special surfer no special server software is required",
    "start": "1530480",
    "end": "1535600"
  },
  {
    "text": "so all that hls consists of is is a bunch of very small segments of video um",
    "start": "1535600",
    "end": "1542400"
  },
  {
    "text": "and then a manifest file this is just an m3u8 if you if you ever used say like winamp um",
    "start": "1542400",
    "end": "1549200"
  },
  {
    "text": "and you had a playlist of audio files it was an m3u8 so that says all this is is just",
    "start": "1549200",
    "end": "1554559"
  },
  {
    "text": "an m3a playlist with live events we just append new items to that playlist and those all point to",
    "start": "1554559",
    "end": "1560960"
  },
  {
    "text": "uh a file so um file1.ts file2.ts uh so those are in",
    "start": "1560960",
    "end": "1567919"
  },
  {
    "text": "the player downloads that segment or downloads the manifest and then plays each segment as",
    "start": "1567919",
    "end": "1574080"
  },
  {
    "text": "uh it comes to that point in the manifest file so here's an example",
    "start": "1574080",
    "end": "1580159"
  },
  {
    "text": "of a manifest as i said it's actually really awesome uh when it comes to",
    "start": "1580159",
    "end": "1585600"
  },
  {
    "text": "modification because you don't actually have to modify anything about the video itself you can modify your live stream by or modify any",
    "start": "1585600",
    "end": "1593760"
  },
  {
    "text": "uh hls assets by just modifying this manifest file and so as i said it's just",
    "start": "1593760",
    "end": "1599360"
  },
  {
    "text": "the playlist type on the target duration of each segment um and then you have",
    "start": "1599360",
    "end": "1605039"
  },
  {
    "text": "the x x inf uh that you see there is the duration of that segment",
    "start": "1605039",
    "end": "1610080"
  },
  {
    "text": "and then the segment name so super easy uh in terms of a plain text format um",
    "start": "1610080",
    "end": "1616559"
  },
  {
    "text": "but it's really it's really great to start so this is what the client would download like say",
    "start": "1616559",
    "end": "1621840"
  },
  {
    "text": "an iphone or quicktime uh this is the actual file that they would download um and then",
    "start": "1621840",
    "end": "1628480"
  },
  {
    "text": "uh as it goes through the file it will just playback the segment listed there",
    "start": "1628480",
    "end": "1633600"
  },
  {
    "text": "so uh the the live streaming to s3 setup um yeah once again for for a little bit",
    "start": "1634640",
    "end": "1640559"
  },
  {
    "text": "of background uh you could publish well i'll get to that second so we've got um a camera so",
    "start": "1640559",
    "end": "1648799"
  },
  {
    "text": "anything anything will do but a webcam would be nice in our use case you'll need encoding software",
    "start": "1648799",
    "end": "1655679"
  },
  {
    "text": "so we'll be using flash media live encoder but there are other great options such as",
    "start": "1655679",
    "end": "1660720"
  },
  {
    "text": "obs or wirecast",
    "start": "1660720",
    "end": "1666639"
  },
  {
    "text": "xsplit is one that's used a lot for like um gaming streaming",
    "start": "1666880",
    "end": "1672240"
  },
  {
    "text": "um but so we'll we'll be using smle um and so you'll also need an aws account for",
    "start": "1672240",
    "end": "1678640"
  },
  {
    "text": "the f3 and cloudfront aspects uh and then you'll need a zenko account with a",
    "start": "1678640",
    "end": "1683840"
  },
  {
    "text": "live subscription for something like this so",
    "start": "1683840",
    "end": "1689279"
  },
  {
    "text": "this is what i was referring to a second ago the overall process looks a little bit like this you would",
    "start": "1689279",
    "end": "1694720"
  },
  {
    "text": "send an api request to zen coder um zencoder will respond to that request with a",
    "start": "1694720",
    "end": "1700720"
  },
  {
    "text": "stream uh url and name um and so you start publishing rtmp",
    "start": "1700720",
    "end": "1706320"
  },
  {
    "text": "stream to that uh and then we uh on our side will automatically scale",
    "start": "1706320",
    "end": "1711679"
  },
  {
    "text": "to whatever we need to um transcode those into that input file or that input",
    "start": "1711679",
    "end": "1717039"
  },
  {
    "text": "stream into all the different renditions you selected so up to 20 rtmp and hls",
    "start": "1717039",
    "end": "1722240"
  },
  {
    "text": "output um and uh static assets we'll get to that in a second but um",
    "start": "1722240",
    "end": "1728320"
  },
  {
    "text": "so we'll start publishing or we'll start transcoding those streams live and then publishing them to the output",
    "start": "1728320",
    "end": "1733760"
  },
  {
    "text": "you specified which can be any cdn in this case we're publishing to s3",
    "start": "1733760",
    "end": "1740000"
  },
  {
    "text": "and then we have a cloud front a distribution in front of that and so then that's whatever you output",
    "start": "1740000",
    "end": "1746720"
  },
  {
    "text": "to that's the that's the url you would give to your users to actually view",
    "start": "1746720",
    "end": "1753600"
  },
  {
    "text": "um so let's let's go through a quick demo",
    "start": "1753600",
    "end": "1759840"
  },
  {
    "text": "of how of how this process would look",
    "start": "1759840",
    "end": "1763600"
  },
  {
    "text": "so we have our cloudfront distribution already set up um and i've already got this s3 uh bucket set up as well so",
    "start": "1765440",
    "end": "1775600"
  },
  {
    "text": "uh what i have what i've done is just set up a basic script so we have integration",
    "start": "1775679",
    "end": "1780880"
  },
  {
    "text": "library for ruby node php",
    "start": "1780880",
    "end": "1786080"
  },
  {
    "text": "and a few others but so i i personally i'm a big node fan so i",
    "start": "1786159",
    "end": "1791360"
  },
  {
    "text": "just wrote a simple little script that uses our integration library and then does some stuff like set up a",
    "start": "1791360",
    "end": "1798320"
  },
  {
    "text": "folder name if one isn't passed in um and then an output url so we're using the three buckets that we set up already",
    "start": "1798320",
    "end": "1806240"
  },
  {
    "text": "and then it just creates uh this is this is the api request so essentially it's a really thin wrapper",
    "start": "1806240",
    "end": "1812320"
  },
  {
    "text": "around actually sending a post request to the zencoder api",
    "start": "1812320",
    "end": "1817840"
  },
  {
    "text": "so this is how a live api uh request looks we have live stream true um",
    "start": "1817919",
    "end": "1824559"
  },
  {
    "text": "normally in our in our vod uh uh for vod files as traditionally um",
    "start": "1824559",
    "end": "1831840"
  },
  {
    "text": "uses the encoder you would specify an input url and then we would download that url and transcode it into the output specified",
    "start": "1831840",
    "end": "1838799"
  },
  {
    "text": "in this outputs array um so for live jobs uh you just specify live stream",
    "start": "1838799",
    "end": "1844000"
  },
  {
    "text": "true and then just like before you set up this array of outputs so here we just have uh three",
    "start": "1844000",
    "end": "1851440"
  },
  {
    "text": "different hls outputs um a 300 uh",
    "start": "1851440",
    "end": "1856640"
  },
  {
    "text": "600 1200 bit rate rendition and so then",
    "start": "1856640",
    "end": "1862399"
  },
  {
    "text": "at the bottom of this we have this master um and that's the that's the",
    "start": "1862399",
    "end": "1867600"
  },
  {
    "text": "master manifest so each one of these outputs produces its own m3u8 manifest file uh and this master playlist puts",
    "start": "1867600",
    "end": "1875679"
  },
  {
    "text": "them all together and provides adapted bit rate streaming so the user",
    "start": "1875679",
    "end": "1880880"
  },
  {
    "text": "from there from their mobile device or desktop would download this master manifest",
    "start": "1880880",
    "end": "1886960"
  },
  {
    "text": "and then based on their available bandwidth would select the appropriate",
    "start": "1886960",
    "end": "1892720"
  },
  {
    "text": "renditions from above so if they're on a really low low",
    "start": "1892720",
    "end": "1898640"
  },
  {
    "text": "quality connection they'll probably use the 300 kilobits but if they're on a",
    "start": "1898640",
    "end": "1904960"
  },
  {
    "text": "broadband connection they could use the highest or the 1200 so",
    "start": "1904960",
    "end": "1910640"
  },
  {
    "text": "um these headers we'll get into those in a second but these these are pretty important for uh when you're using a cdn",
    "start": "1910640",
    "end": "1917120"
  },
  {
    "text": "with hls particularly with cloud for us f3 so",
    "start": "1917120",
    "end": "1922640"
  },
  {
    "text": "public reads says that right when i upload this file to s3 i want it to be publicly available",
    "start": "1922640",
    "end": "1929840"
  },
  {
    "text": "and then this cache control just says i only want the max age of this thing to",
    "start": "1929840",
    "end": "1936000"
  },
  {
    "text": "be this long so for we have it set really small here because we don't we don't want the manifest file uh to be",
    "start": "1936000",
    "end": "1943279"
  },
  {
    "text": "cached for too long it needs to be available as soon as new segments are available",
    "start": "1943279",
    "end": "1949519"
  },
  {
    "text": "because the clients are just going to keep querying for this manifest file so before i said this what i was noticing is",
    "start": "1949519",
    "end": "1955679"
  },
  {
    "text": "clients would just keep getting this old manifest and it would never update so just just a little heads up there if you",
    "start": "1955679",
    "end": "1961679"
  },
  {
    "text": "want to start doing something like this so",
    "start": "1961679",
    "end": "1967440"
  },
  {
    "text": "we'll just run this script and in the background we're sending a",
    "start": "1967440",
    "end": "1972880"
  },
  {
    "text": "post request to the encoder with that information as i said i've just printed this stuff out a little prettier but we",
    "start": "1972880",
    "end": "1979120"
  },
  {
    "text": "have the rtmp stream url uh the rtmp stream name so that's what we'll actually stream to and then we have this",
    "start": "1979120",
    "end": "1985919"
  },
  {
    "text": "list of hls outputs so these are the three renditions um",
    "start": "1985919",
    "end": "1991600"
  },
  {
    "text": "and then this is the master manifest that actually uh the user downloads to choose one of those renditions from",
    "start": "1991600",
    "end": "1997679"
  },
  {
    "text": "above uh so we'll go ahead and take this rtmp stream url",
    "start": "1997679",
    "end": "2005840"
  },
  {
    "text": "and then we'll take the stream name",
    "start": "2010480",
    "end": "2015720"
  },
  {
    "text": "let me just connect they're already connected uh and then we can click start",
    "start": "2018559",
    "end": "2025840"
  },
  {
    "text": "and we're pushing so we're pushing a live stream uh to the encoder um in the background",
    "start": "2028159",
    "end": "2035760"
  },
  {
    "text": "zenko is transcoding this live stream uh we've scaled up the appropriate workers",
    "start": "2035760",
    "end": "2042320"
  },
  {
    "text": "to do that and then we would publish those to uh the cdn of your choice so f3 at this",
    "start": "2042320",
    "end": "2049358"
  },
  {
    "text": "time um so just give me a little bit longer to go",
    "start": "2049359",
    "end": "2055520"
  },
  {
    "text": "ahead and get started but what what we typically see is about uh especially two s3s about 20 seconds of",
    "start": "2055520",
    "end": "2062720"
  },
  {
    "text": "latency give or take so sometimes it can be as low as 15 or 16 but that's kind of on the on the much",
    "start": "2062720",
    "end": "2069440"
  },
  {
    "text": "lower side generally it's around 22 to 23 seconds of latency",
    "start": "2069440",
    "end": "2075839"
  },
  {
    "text": "so what you would give your users as i said",
    "start": "2075919",
    "end": "2081440"
  },
  {
    "text": "is this master playlist which includes the other three",
    "start": "2081440",
    "end": "2087800"
  },
  {
    "text": "so there you go uh now we've got this live stream uh it's been transcoded through zen coder",
    "start": "2088720",
    "end": "2095358"
  },
  {
    "text": "published to s3 uh wow i'm very animated when i talk and i",
    "start": "2095359",
    "end": "2100800"
  },
  {
    "text": "just know that uh so yeah so it's the transferred live vs encoder um",
    "start": "2100800",
    "end": "2108240"
  },
  {
    "text": "published to s3 and then so far we haven't touched cloud front yet uh",
    "start": "2108240",
    "end": "2114960"
  },
  {
    "text": "so all right",
    "start": "2114960",
    "end": "2118078"
  },
  {
    "text": "okay so if we wanted to add cloudfront to the mix um then you could optionally create",
    "start": "2126160",
    "end": "2132960"
  },
  {
    "text": "a new cname subdomain uh for your events um as i said that's when we were walking",
    "start": "2132960",
    "end": "2138000"
  },
  {
    "text": "through the setup process and you see this um and you see this",
    "start": "2138000",
    "end": "2144480"
  },
  {
    "text": "uh cname there you could specify your own url um instead of a c name to your",
    "start": "2144480",
    "end": "2150960"
  },
  {
    "text": "cloudfront distribution and then users could go there instead of some dynamically generated cloudfront url uh",
    "start": "2150960",
    "end": "2157680"
  },
  {
    "text": "which can really help experience um but we create this new cloudfront distribution",
    "start": "2157680",
    "end": "2163440"
  },
  {
    "text": "optionally using that cname and then you follow the previous uh stream setup as",
    "start": "2163440",
    "end": "2168480"
  },
  {
    "text": "before and then the only difference in the workflow is that you point users to this",
    "start": "2168480",
    "end": "2173520"
  },
  {
    "text": "new cloudfront location um it's it's awesomely easy and straightforward so",
    "start": "2173520",
    "end": "2181200"
  },
  {
    "text": "just uh just to prove the point um we're still streaming to this url right",
    "start": "2181200",
    "end": "2187920"
  },
  {
    "text": "now all we're doing is publishing to this f3 bucket so the same url works but what we can do",
    "start": "2187920",
    "end": "2194160"
  },
  {
    "text": "um",
    "start": "2194160",
    "end": "2197160"
  },
  {
    "text": "is instead of giving them that f3 bucket like you see here um i set up a c name",
    "start": "2202240",
    "end": "2209440"
  },
  {
    "text": "uh for just a personal domain that i have lying around hdbx.net live.htbx.com",
    "start": "2209440",
    "end": "2215599"
  },
  {
    "text": "so i can say live.hdbx.net and then paste in um",
    "start": "2215599",
    "end": "2221200"
  },
  {
    "text": "the stream name so instead of the f3 bucket uh as the big url it's just a teammate",
    "start": "2221200",
    "end": "2227680"
  },
  {
    "text": "location",
    "start": "2227680",
    "end": "2230240"
  },
  {
    "text": "and voila uh we're publishing a live stream uh 2s3 and then actually right now we're",
    "start": "2232880",
    "end": "2239920"
  },
  {
    "text": "getting that from uh from cloud front instead of directly from s3",
    "start": "2239920",
    "end": "2247200"
  },
  {
    "text": "so sorry i don't know you but i call that a a",
    "start": "2248720",
    "end": "2255599"
  },
  {
    "text": "huge success um it's it's incredibly simple to get started so the hard part the hardest",
    "start": "2255599",
    "end": "2263040"
  },
  {
    "text": "part is actually getting started with s3 once you get there adding cloudfront to the mix is",
    "start": "2263040",
    "end": "2269119"
  },
  {
    "text": "incredibly easy uh and then you have this awesome uh distribution network at your fingertips",
    "start": "2269119",
    "end": "2275200"
  },
  {
    "text": "um so if we wanted to add a vod asset uh so",
    "start": "2275200",
    "end": "2280960"
  },
  {
    "text": "as as john said there's this great glacier this idea of glacier so",
    "start": "2280960",
    "end": "2288079"
  },
  {
    "text": "you do a live stream maybe provide that you you create a vod asset off of the",
    "start": "2288079",
    "end": "2293839"
  },
  {
    "text": "live stream and then you can provide that to your users say like the next month or something but then after a month it's kind of old",
    "start": "2293839",
    "end": "2300240"
  },
  {
    "text": "content probably nobody's going to watch it but you might want to show it next year around the same time say like a christmas special",
    "start": "2300240",
    "end": "2306240"
  },
  {
    "text": "then you know you pull that out of glacier and you can use that beauty asset again so setting up that vod asset",
    "start": "2306240",
    "end": "2313680"
  },
  {
    "text": "is is pretty straightforward as well so you have this array of outputs",
    "start": "2313680",
    "end": "2319359"
  },
  {
    "text": "as before to add a vod asset to that you just create a new output i'll just go ahead and copy this to make things a",
    "start": "2319359",
    "end": "2325680"
  },
  {
    "text": "little bit easier",
    "start": "2325680",
    "end": "2329000"
  },
  {
    "text": "and that's it oh let's go ahead and validate the json so oh no i just realized wasn't live",
    "start": "2340800",
    "end": "2346320"
  },
  {
    "text": "streaming that whole time uh so sorry this is what i was doing the only",
    "start": "2346320",
    "end": "2353520"
  },
  {
    "text": "difference from what before what was before this is the original api request",
    "start": "2353520",
    "end": "2360240"
  },
  {
    "text": "this is an api request a live api request with a vod asset so as soon as the live stream is done what we'll do is",
    "start": "2362720",
    "end": "2370160"
  },
  {
    "text": "uh take that stream that we're working on uh and then we'll just transcode that",
    "start": "2370160",
    "end": "2375200"
  },
  {
    "text": "to whatever output you want so um if you wanted the raw flv file like the exact live stream",
    "start": "2375200",
    "end": "2383280"
  },
  {
    "text": "that we had with no transcoding then you could just do a transfer only job and we'll provide you that slv directly",
    "start": "2383280",
    "end": "2389520"
  },
  {
    "text": "that would literally be the exact input that we received but in this case this will create a um",
    "start": "2389520",
    "end": "2397520"
  },
  {
    "text": "h.264 uh with aac audio um and an mp4 wrapper uh container so",
    "start": "2397520",
    "end": "2404160"
  },
  {
    "text": "uh yeah and then we'll upload this to the same location we uploaded live streams",
    "start": "2404160",
    "end": "2409599"
  },
  {
    "text": "so in that same bucket you would just see awesome archives at mp4",
    "start": "2409599",
    "end": "2415520"
  },
  {
    "text": "so as i said this is what you saw before um we just have live stream true the outputs if you",
    "start": "2421440",
    "end": "2428079"
  },
  {
    "text": "want a archived asset um just include that as one of those outputs just as you",
    "start": "2428079",
    "end": "2433119"
  },
  {
    "text": "normally would um and when the stream is done uh we'll create this",
    "start": "2433119",
    "end": "2438800"
  },
  {
    "text": "will transcode the stream into that asset for you and transfer it to the location specified",
    "start": "2438800",
    "end": "2446240"
  },
  {
    "text": "so if you wanted to get started and play with this the easiest way and you don't want to deal with making that",
    "start": "2446720",
    "end": "2453599"
  },
  {
    "text": "node script or whatever then you can just go to our request builder so once you create an account",
    "start": "2453599",
    "end": "2461200"
  },
  {
    "text": "under the api tab you'll you can find this request builder which will just let you paste and request bodies",
    "start": "2461200",
    "end": "2467839"
  },
  {
    "text": "and execute them right there from the browser which can be a really easy great way to",
    "start": "2467839",
    "end": "2473280"
  },
  {
    "text": "get started we even have a live stream to f3",
    "start": "2473280",
    "end": "2478880"
  },
  {
    "text": "preset right in there uh so you could just select that from the drop down menu of job templates um",
    "start": "2478880",
    "end": "2485680"
  },
  {
    "text": "replace uh the url three bucket instances with your own s3 bucket um",
    "start": "2485680",
    "end": "2491520"
  },
  {
    "text": "and you can just do this exact same process uh so that's that's all i have for you",
    "start": "2491520",
    "end": "2496720"
  },
  {
    "text": "guys today um uh i think i'm gonna pass it back over to maya and then we can possibly go over",
    "start": "2496720",
    "end": "2502720"
  },
  {
    "text": "some questions so uh thanks all right matt thank you and thank you",
    "start": "2502720",
    "end": "2509359"
  },
  {
    "text": "all for demonstrating how to leverage the aws cloud for event transcoding and",
    "start": "2509359",
    "end": "2514720"
  },
  {
    "text": "distribution let's open it up uh frequent q a but and i already said that",
    "start": "2514720",
    "end": "2519760"
  },
  {
    "text": "we have plenty of questions if we don't get to answer them all you will hear back from matt",
    "start": "2519760",
    "end": "2527040"
  },
  {
    "text": "via email mostly and your questions will be answered so um",
    "start": "2527040",
    "end": "2532319"
  },
  {
    "text": "let's start with does encoder live transcoding support live hds http",
    "start": "2532319",
    "end": "2541119"
  },
  {
    "text": "streaming output in addition to hls and matt uh i would like to point this",
    "start": "2541119",
    "end": "2546800"
  },
  {
    "text": "question to you um so no at this time we don't support hds um",
    "start": "2546800",
    "end": "2554880"
  },
  {
    "text": "it's on our roadmap uh i can't give any specifics for this time but it's definitely something that we'd like to",
    "start": "2554880",
    "end": "2560560"
  },
  {
    "text": "add as an output shortly thank you matt",
    "start": "2560560",
    "end": "2565839"
  },
  {
    "text": "and moving on to another question um",
    "start": "2565839",
    "end": "2570880"
  },
  {
    "text": "how about android streaming does it work too",
    "start": "2571040",
    "end": "2576160"
  },
  {
    "text": "uh sure so um you would just publish the same um",
    "start": "2576880",
    "end": "2583599"
  },
  {
    "text": "rtp and hls streams uh and then how you consume those is kind of up to you so we",
    "start": "2583599",
    "end": "2589520"
  },
  {
    "text": "have uh we have these native player sdks um",
    "start": "2589520",
    "end": "2595119"
  },
  {
    "text": "uh i think they're under the video cloud uh title so you need to go to uh branco's",
    "start": "2595119",
    "end": "2602240"
  },
  {
    "text": "main website um but we have these native video sdks uh that will allow you to build native applications and consume",
    "start": "2602240",
    "end": "2608800"
  },
  {
    "text": "video uh that includes um hls um and rtmd is pretty easy to do too in",
    "start": "2608800",
    "end": "2615520"
  },
  {
    "text": "uh native applications for for uh browser um",
    "start": "2615520",
    "end": "2620880"
  },
  {
    "text": "for viewing live streams in the browser on android that gets a little bit stickier",
    "start": "2620880",
    "end": "2626560"
  },
  {
    "text": "on older devices that support flash you could do it you could use rtmp in a flash",
    "start": "2626560",
    "end": "2633040"
  },
  {
    "text": "player for newer devices there's kind of this",
    "start": "2633040",
    "end": "2638960"
  },
  {
    "text": "weird tango with hls that android's been doing where",
    "start": "2638960",
    "end": "2645200"
  },
  {
    "text": "they officially announce support in the android platform for hls and 3.2",
    "start": "2645680",
    "end": "2651040"
  },
  {
    "text": "but it was really spotty uh in terms of which device you were on",
    "start": "2651040",
    "end": "2656560"
  },
  {
    "text": "um and so then they it's officially been dropped in 4.2 but uh",
    "start": "2656560",
    "end": "2662560"
  },
  {
    "text": "has it they've added it actually in the chrome uh like the hls player is now available in",
    "start": "2662560",
    "end": "2668800"
  },
  {
    "text": "chrome itself on android uh i have not been able to test this myself uh because i don't have an android device",
    "start": "2668800",
    "end": "2675280"
  },
  {
    "text": "personally but i've heard from other people that it works works quite well so um",
    "start": "2675280",
    "end": "2680800"
  },
  {
    "text": "i think hls is an awesome uh format especially because how malleable that manifest file is so i'd",
    "start": "2680800",
    "end": "2687040"
  },
  {
    "text": "love to see more people using it i think dash is probably going to uh",
    "start": "2687040",
    "end": "2692319"
  },
  {
    "text": "make waves further down the road in terms of the android world and dash is something else we're really interested",
    "start": "2692319",
    "end": "2697440"
  },
  {
    "text": "in there's just not a terrible amount of need for it at this time so",
    "start": "2697440",
    "end": "2702560"
  },
  {
    "text": "but yes the same stream to use that was a really long way of saying the stream same stream that you use for android and",
    "start": "2702560",
    "end": "2709280"
  },
  {
    "text": "desktop or ios and desktop can work just fine on android as well",
    "start": "2709280",
    "end": "2716079"
  },
  {
    "text": "if you if you put a little work into it essentially",
    "start": "2717599",
    "end": "2721838"
  },
  {
    "text": "thank you matt let's look at one more question if i have a live conference event and i need to broadcast several",
    "start": "2724960",
    "end": "2730240"
  },
  {
    "text": "lectures starting and stopping the live rtmp uplink about every hour",
    "start": "2730240",
    "end": "2735440"
  },
  {
    "text": "do i have to make a news encoder api request for each lecture can i just create one api request",
    "start": "2735440",
    "end": "2743760"
  },
  {
    "text": "so it kind of depends on your use case here um if you have a live conference event um",
    "start": "2745200",
    "end": "2752240"
  },
  {
    "text": "and you don't mind just having that go uh having one continuous stream uh you",
    "start": "2752240",
    "end": "2758560"
  },
  {
    "text": "can stream for up to 12 uh up to 12 hours um and a little bit more if necessary but",
    "start": "2758560",
    "end": "2764960"
  },
  {
    "text": "uh we officially support up to 12 hour events um",
    "start": "2764960",
    "end": "2771280"
  },
  {
    "text": "so yeah you could just create one live event uh and then reconnect and disconnect from that as",
    "start": "2771280",
    "end": "2777599"
  },
  {
    "text": "necessary so there's some there's some stream are there some api",
    "start": "2777599",
    "end": "2783119"
  },
  {
    "text": "settings such as event link and reconnect time uh so say you your",
    "start": "2783680",
    "end": "2789839"
  },
  {
    "text": "conference was six hours long and you knew for a fact you're going to be streaming for six hours um then you could set event length to six hours um",
    "start": "2789839",
    "end": "2797280"
  },
  {
    "text": "and then disconnect and reconnect as many times as you want for as long as you want uh during that six-hour time",
    "start": "2797280",
    "end": "2802880"
  },
  {
    "text": "period and it would it would be just fine well we'll hold open that uh that stream url",
    "start": "2802880",
    "end": "2809200"
  },
  {
    "text": "and name for you for the entire six hours um the other option you could do is if",
    "start": "2809200",
    "end": "2814240"
  },
  {
    "text": "you know that there's a 30-minute break between each one then you could set a reconnect time of 30 minutes and then",
    "start": "2814240",
    "end": "2819920"
  },
  {
    "text": "you have 30 minutes to reconnect to that stream endpoint before we end the event",
    "start": "2819920",
    "end": "2825359"
  },
  {
    "text": "if you wanted to actually give a unique url for each uh like a unique stream url",
    "start": "2825520",
    "end": "2832480"
  },
  {
    "text": "for each event um then you would need to actually submit a",
    "start": "2832480",
    "end": "2837520"
  },
  {
    "text": "new api request for each one of those streams",
    "start": "2837520",
    "end": "2842720"
  },
  {
    "text": "all right uh these questions are mostly to you matt can you provide vod assets",
    "start": "2843520",
    "end": "2848800"
  },
  {
    "text": "for all selected output qualities uh yes absolutely uh so",
    "start": "2848800",
    "end": "2856000"
  },
  {
    "text": "uh by the way what we're going to do is just take the input stream so what we always suggest um is the highest quality",
    "start": "2856000",
    "end": "2864640"
  },
  {
    "text": "uh input stream you can send so the bandwidth that you have available to you um send us the highest quality input",
    "start": "2864640",
    "end": "2871599"
  },
  {
    "text": "stream um at least the highest quality and that quality needs to be at least",
    "start": "2871599",
    "end": "2876800"
  },
  {
    "text": "that of the highest quality output you have for obvious reasons so",
    "start": "2876800",
    "end": "2882480"
  },
  {
    "text": "what we'll do is take that input stream and transcode it but if you wanted different quality renditions from that",
    "start": "2882480",
    "end": "2888079"
  },
  {
    "text": "then you could just do from that point it's just a standard zen code or api request",
    "start": "2888079",
    "end": "2893920"
  },
  {
    "text": "with that input stream flb as the input file so you could specify",
    "start": "2893920",
    "end": "2901520"
  },
  {
    "text": "uh the the first one with no settings and that's just going to essentially uh transmux that are not transmitted but",
    "start": "2901520",
    "end": "2907760"
  },
  {
    "text": "it's essentially going to use the same quality as the input stream and give you an mp4 uh and then you",
    "start": "2907760",
    "end": "2914319"
  },
  {
    "text": "could create other vod assets um the same exact way but at different resolutions or whatever else you wanted",
    "start": "2914319",
    "end": "2921680"
  },
  {
    "text": "um but yeah so the think of it like just a normal file based transcode at that point",
    "start": "2921680",
    "end": "2929839"
  },
  {
    "text": "but the input is the raw live stream so you can create as many",
    "start": "2929839",
    "end": "2935520"
  },
  {
    "text": "as many different quality renditions off of that as you would like all right thanks matt and uh can we",
    "start": "2935520",
    "end": "2942160"
  },
  {
    "text": "create the stream api request in advance to a live event and how long does the live event drop stay active on the",
    "start": "2942160",
    "end": "2948559"
  },
  {
    "text": "encoder so this this goes back to what i was um",
    "start": "2948559",
    "end": "2954960"
  },
  {
    "text": "how i answered the uh conference event um so",
    "start": "2954960",
    "end": "2960400"
  },
  {
    "text": "there's two big things or two big settings that you can use to for this by default um you've got",
    "start": "2960400",
    "end": "2969839"
  },
  {
    "text": "shoot i think it's 30 seconds 45 seconds i'll have to",
    "start": "2969839",
    "end": "2975440"
  },
  {
    "text": "double check on that but um you can set uh an event length",
    "start": "2975440",
    "end": "2982960"
  },
  {
    "text": "which means you could say i want my event to last for an hour um",
    "start": "2982960",
    "end": "2989680"
  },
  {
    "text": "and then you could start streaming at any point so you could send your api request as",
    "start": "2989680",
    "end": "2994960"
  },
  {
    "text": "long as you start streaming at any point within that hour uh then you're fine so",
    "start": "2994960",
    "end": "3000079"
  },
  {
    "text": "we have a lot of customers that do just that they know they're going to have a two-hour event um once you start",
    "start": "3000079",
    "end": "3005760"
  },
  {
    "text": "streaming the event links doesn't matter anymore that's literally just like the amount of time will hold open the stream",
    "start": "3005760",
    "end": "3012480"
  },
  {
    "text": "um the stream endpoint uh so it really has to do with more with connecting than it",
    "start": "3012480",
    "end": "3018720"
  },
  {
    "text": "does with like the actual event links because we won't close an event uh while you're still publishing a stream to it",
    "start": "3018720",
    "end": "3024400"
  },
  {
    "text": "so uh what we have is a lot of customers set that event links to the setup time they want so they want to set up an",
    "start": "3024400",
    "end": "3030160"
  },
  {
    "text": "event 30 minutes before so they'll set their event links to say 45 minutes um",
    "start": "3030160",
    "end": "3035280"
  },
  {
    "text": "so they can get their events 30 minutes before uh set everything up test it disconnect and",
    "start": "3035280",
    "end": "3041280"
  },
  {
    "text": "then just reconnect 30 minutes later uh to start their live stream so um or you can set reconnect time um",
    "start": "3041280",
    "end": "3048240"
  },
  {
    "text": "which is similar but that's every time you disconnect you have the amount of time specified in your reconnect time to",
    "start": "3048240",
    "end": "3055119"
  },
  {
    "text": "reconnect so say you knew you would be disconnecting for two minutes at a time",
    "start": "3055119",
    "end": "3060880"
  },
  {
    "text": "by default after 30 seconds will close the stream so that you have two minutes every time",
    "start": "3060880",
    "end": "3066000"
  },
  {
    "text": "so you can go either way generally i suggest the event link just because it's a little bit more like set in stone i guess you could",
    "start": "3066000",
    "end": "3072079"
  },
  {
    "text": "say thanks matt we have a very engaged crowd",
    "start": "3072079",
    "end": "3077520"
  },
  {
    "text": "today so i have a few more questions for you do the raw tf segments persist on our s3",
    "start": "3077520",
    "end": "3084160"
  },
  {
    "text": "bucket after the streaming event uh yes um and actually this is this is",
    "start": "3084160",
    "end": "3089839"
  },
  {
    "text": "something we were thinking about going into um and we didn't for concentrate but um generally what i suggest doing is",
    "start": "3089839",
    "end": "3098240"
  },
  {
    "text": "taking that archive and pushing it to so essentially you'd have two buckets set up um a live event bucket and then like",
    "start": "3098240",
    "end": "3105359"
  },
  {
    "text": "an archival bucket so specify your archives assets to go",
    "start": "3105359",
    "end": "3110800"
  },
  {
    "text": "directly to that archive bucket and then just set up a bucket policy on your uh live events",
    "start": "3110800",
    "end": "3118000"
  },
  {
    "text": "bucket that clears everything out every you know day or something like that or you know",
    "start": "3118000",
    "end": "3124400"
  },
  {
    "text": "however long after the event you want um and that way you don't just end up persisting these ts segments for forever",
    "start": "3124400",
    "end": "3131200"
  },
  {
    "text": "um and i generally i would suggest providing like the static asset for archival purposes but yes the ts",
    "start": "3131200",
    "end": "3138880"
  },
  {
    "text": "segments will persist for as long as you leave them there",
    "start": "3138880",
    "end": "3144720"
  },
  {
    "text": "thank you very much matt and um we do have questions coming in so",
    "start": "3145119",
    "end": "3152880"
  },
  {
    "text": "i think it's time for us to um wrap up and answer all remaining questions um",
    "start": "3152880",
    "end": "3159760"
  },
  {
    "text": "via email uh everybody will hear back from uh brightpearl with the answers to the questions",
    "start": "3159760",
    "end": "3166559"
  },
  {
    "text": "and at this point i would like to thank everybody for attending this webinar thanks to our presenters matthew from",
    "start": "3166559",
    "end": "3173040"
  },
  {
    "text": "the encoder as encoder developer evangelist with bright clothes and john mancusel with the aws",
    "start": "3173040",
    "end": "3178800"
  },
  {
    "text": "and our attendees thank you very much for taking the time i hope the information was useful and",
    "start": "3178800",
    "end": "3185040"
  },
  {
    "text": "before you log off we have a very brief survey for you that",
    "start": "3185040",
    "end": "3190720"
  },
  {
    "text": "we appreciate if you thought out just so we can improve ourselves and again thank you for attending and",
    "start": "3190720",
    "end": "3197359"
  },
  {
    "text": "this concludes today's amazon web services partner webcast",
    "start": "3197359",
    "end": "3204040"
  }
]