[
  {
    "start": "0",
    "end": "123000"
  },
  {
    "text": "[Music] hi my name is clint wyckoff and i'm an",
    "start": "400",
    "end": "7120"
  },
  {
    "text": "enterprise support manager at aws based out of pittsburgh pennsylvania thanks for joining us today and welcome to aws",
    "start": "7120",
    "end": "13280"
  },
  {
    "text": "support you where we share best practices and troubleshoot troubleshooting tips from aws support",
    "start": "13280",
    "end": "19760"
  },
  {
    "text": "joining me today is mike wells and ayden mecharoth from aws support guys can you give us a quick",
    "start": "19760",
    "end": "25599"
  },
  {
    "text": "introduction yeah sure i'm mike wells a senior technical account manager with aws and i",
    "start": "25599",
    "end": "32640"
  },
  {
    "text": "support customers with operations cost optimization and navigating the aws ecosphere i've had several customers",
    "start": "32640",
    "end": "39360"
  },
  {
    "text": "make the switch to graviton too and i'm excited to talk to you about it today i",
    "start": "39360",
    "end": "44640"
  },
  {
    "text": "hey i'm iden i'm an enterprise support lead based in california and always glad",
    "start": "44640",
    "end": "49680"
  },
  {
    "text": "to share ways to help customers improve costs performance security on the cloud and graviton 2 has been a big part of",
    "start": "49680",
    "end": "55760"
  },
  {
    "text": "that lately so yeah happy to dive in perfect guys thanks for being here today and as you mentioned we're going to be",
    "start": "55760",
    "end": "61600"
  },
  {
    "text": "talking about graviton to specifically move moving your databases over to graviton 2. and we're going to",
    "start": "61600",
    "end": "67520"
  },
  {
    "text": "specifically focus on performance and the cost related to that move right and before we get into the details a quick",
    "start": "67520",
    "end": "74320"
  },
  {
    "text": "note to our attendees online feel free to use the chat window on the right hand side of the screen and also let us know",
    "start": "74320",
    "end": "80159"
  },
  {
    "text": "where you're joining us from today and share your thoughts and questions throughout the episode we look forward",
    "start": "80159",
    "end": "85439"
  },
  {
    "text": "to hearing from you ayden let's kick it off and can you walk us through what we're going to be talking about today",
    "start": "85439",
    "end": "91119"
  },
  {
    "text": "yeah clint so we'll go over some background on graviton 2 and just how straightforward it is to to migrate and",
    "start": "91119",
    "end": "97439"
  },
  {
    "text": "adopt it and we'll also cover the exact benefits and steps to migrate",
    "start": "97439",
    "end": "104000"
  },
  {
    "text": "you know amazon rds and aurora to graviton to and get those benefits and",
    "start": "104000",
    "end": "109439"
  },
  {
    "text": "lastly we'll have a demo of actually migrating cutting over and benchmarking",
    "start": "109439",
    "end": "115040"
  },
  {
    "text": "the differences between previous generation instances and current graviton 2 instances from rds",
    "start": "115040",
    "end": "122560"
  },
  {
    "text": "yeah so you know what what is graviton two processors what are we dealing with here",
    "start": "122560",
    "end": "128879"
  },
  {
    "start": "123000",
    "end": "511000"
  },
  {
    "text": "so graviton family of processors our own custom built and designed silicon and",
    "start": "128879",
    "end": "136560"
  },
  {
    "text": "we designed them to push the price performance benefits of a broad range of cloud workloads for our",
    "start": "136560",
    "end": "142319"
  },
  {
    "text": "customers so we now have thousands and thousands of customers who have significant price performance",
    "start": "142319",
    "end": "148239"
  },
  {
    "text": "benefits for because of the graviton two-based instances and in turn can build and",
    "start": "148239",
    "end": "154160"
  },
  {
    "text": "innovate faster and more cost effectively to delight delight their own customers",
    "start": "154160",
    "end": "159440"
  },
  {
    "text": "so you know what exactly are the components of the graviton 2 processor",
    "start": "159440",
    "end": "166000"
  },
  {
    "text": "let's jump in and take a look first and foremost we have the actual processor itself",
    "start": "166000",
    "end": "173120"
  },
  {
    "text": "right which is built on seven nanometer custom silicon and offers just exceptional performance",
    "start": "173120",
    "end": "178720"
  },
  {
    "text": "we you know however graviton two is not the first um nor the only piece of custom silicon",
    "start": "178720",
    "end": "184720"
  },
  {
    "text": "powering you know amazon ec2 uh we have the nitrous security chip that's integrated into into the",
    "start": "184720",
    "end": "190800"
  },
  {
    "text": "motherboards and that protects and monitors hardware resources we also have the nitro card itself which",
    "start": "190800",
    "end": "198080"
  },
  {
    "text": "unloads many of the traditional needs of the hypervisor into bespoke hardware",
    "start": "198080",
    "end": "203519"
  },
  {
    "text": "like you know essentially allowing much better performance with a lighter footprint",
    "start": "203519",
    "end": "208959"
  },
  {
    "text": "and the nitro card handles interfacing with devices like amazon ebs or amazon ena",
    "start": "208959",
    "end": "216400"
  },
  {
    "text": "their network attachments and also provides additional monitoring and security for those interfaces and you",
    "start": "216400",
    "end": "222879"
  },
  {
    "text": "know finally because of the nitrous security chip and the nitro card the nitro hypervisor itself is a very is",
    "start": "222879",
    "end": "230319"
  },
  {
    "text": "very lightweight you know it handles memory and cpu allocation like with bare metal like performance",
    "start": "230319",
    "end": "236799"
  },
  {
    "text": "so these purpose built in modular building blocks you know give graviton to base",
    "start": "236799",
    "end": "242319"
  },
  {
    "text": "instances like tremendous performance and um yeah if if you're if you're interested",
    "start": "242319",
    "end": "248080"
  },
  {
    "text": "more in nitro we can drop a really cool re invent talk from 2019",
    "start": "248080",
    "end": "253680"
  },
  {
    "text": "diving deep into nitro there but yeah",
    "start": "253680",
    "end": "258720"
  },
  {
    "text": "any questions at this point",
    "start": "258720",
    "end": "262560"
  },
  {
    "text": "all right let's let's jump in then to you know the managed services side of it we're going",
    "start": "263840",
    "end": "269600"
  },
  {
    "text": "to be focusing a little more on that and this talk today so here's 12 different services already",
    "start": "269600",
    "end": "275919"
  },
  {
    "text": "that are supporting managed services and we can drop a link of you know more details on how to get",
    "start": "275919",
    "end": "282320"
  },
  {
    "text": "going on on get diving into some of these services here and you know",
    "start": "282320",
    "end": "287919"
  },
  {
    "text": "essentially we've extended the price performance benefits of graviton 2 into",
    "start": "287919",
    "end": "292960"
  },
  {
    "text": "these managed services you know important ones we'll be talking about today will be amazon aurora and rds but",
    "start": "292960",
    "end": "298800"
  },
  {
    "text": "there's also document db elasticash memory db open search etc and um you",
    "start": "298800",
    "end": "305039"
  },
  {
    "text": "know we're announcing more and more all the time we've got you know four new ones here just from um the last few months",
    "start": "305039",
    "end": "311840"
  },
  {
    "text": "and you know in addition many more services like eks and ecs also support",
    "start": "311840",
    "end": "318400"
  },
  {
    "text": "graviton two based instances so um yeah and we're happy to keep",
    "start": "318400",
    "end": "323759"
  },
  {
    "text": "supporting them and growing and the capabilities that that's supported here",
    "start": "323759",
    "end": "329680"
  },
  {
    "text": "so yeah clint do we have any [Music]",
    "start": "329680",
    "end": "335280"
  },
  {
    "text": "any questions on on that that's it's 12 different services there so um different capabilities",
    "start": "335280",
    "end": "343120"
  },
  {
    "text": "uh no no questions so far i'm looking good all right well",
    "start": "343120",
    "end": "348800"
  },
  {
    "text": "you know just some background here is you know with the success of the graviton one the a1 instance families",
    "start": "348800",
    "end": "357039"
  },
  {
    "text": "that we launched in re invent 2018 we wanted to which was great really for for",
    "start": "357039",
    "end": "363280"
  },
  {
    "text": "web and gaming service for example we wanted to broaden the workloads and target many different applications for graviton",
    "start": "363280",
    "end": "370639"
  },
  {
    "text": "right and especially in workloads like you know high performance computing",
    "start": "370639",
    "end": "376479"
  },
  {
    "text": "um you know media encoding in-memory caches eda that's electronic design automation",
    "start": "376479",
    "end": "384000"
  },
  {
    "text": "that we ourselves use to design the processors that's where you know the growing",
    "start": "384000",
    "end": "390240"
  },
  {
    "text": "spectrum of workloads has really helped us so um in 20 in re-invent 2019 we launched",
    "start": "390240",
    "end": "396400"
  },
  {
    "text": "graviton 2 that improved performance and and opened up the playing field for a lot of different extra workloads and",
    "start": "396400",
    "end": "403120"
  },
  {
    "text": "today we're going to be focusing on critical workloads run on you know open source databases like mysql postgres and",
    "start": "403120",
    "end": "411039"
  },
  {
    "text": "mariadb so just a quick refresher uh amazon rds is our managed relational database service",
    "start": "411039",
    "end": "418560"
  },
  {
    "text": "and it makes it easy to set up operate scale a relational database in the cloud and you know automating time consuming",
    "start": "418560",
    "end": "425599"
  },
  {
    "text": "admin tasks like hardware provisioning database setups patching and backups and",
    "start": "425599",
    "end": "430960"
  },
  {
    "text": "aurora very similar benefits but it takes it allows for even greater scaling by",
    "start": "430960",
    "end": "436160"
  },
  {
    "text": "decoupling compute and storage um you know way higher limits for read replicas and",
    "start": "436160",
    "end": "441919"
  },
  {
    "text": "and total databases size so um yeah just a bit of background there um",
    "start": "441919",
    "end": "447759"
  },
  {
    "text": "good stuff well let me pause there and uh",
    "start": "447759",
    "end": "453440"
  },
  {
    "text": "just make sure we got no questions yeah hey this is so we did get a",
    "start": "453440",
    "end": "460080"
  },
  {
    "text": "question from jibjab06 and his question was earlier you had mentioned nitro uh",
    "start": "460080",
    "end": "465520"
  },
  {
    "text": "we're unfamiliar with that so can you uh explain to the audience what is nitro",
    "start": "465520",
    "end": "471120"
  },
  {
    "text": "yes totally so nitro is our purpose-built system um",
    "start": "471120",
    "end": "477599"
  },
  {
    "text": "that handles this whole ecosystem of the you know the all of our new generation",
    "start": "477599",
    "end": "482720"
  },
  {
    "text": "instances are you know on the built on the nitro platform that means we're going to have like the nitrous security",
    "start": "482720",
    "end": "488240"
  },
  {
    "text": "chip the nitro card in the nitro hypervisor itself so this is what enables this is what",
    "start": "488240",
    "end": "494639"
  },
  {
    "text": "you'll find on newer generation instances and um for a really cool deep dive um there's that re invent 2019 talk",
    "start": "494639",
    "end": "502000"
  },
  {
    "text": "on the whole nitro system if you're interested in digging into that yep and i did drop a link to uh to",
    "start": "502000",
    "end": "508080"
  },
  {
    "text": "that in the chat there cool so mike",
    "start": "508080",
    "end": "513919"
  },
  {
    "start": "511000",
    "end": "934000"
  },
  {
    "text": "why and how should we upgrade our totally good rds and aurora instances",
    "start": "513919",
    "end": "520000"
  },
  {
    "text": "glad you asked aidan um these uh graviton 2 instances for rds and aurora",
    "start": "520000",
    "end": "525920"
  },
  {
    "text": "for rds specifically give 52 better price performance against the previous generation of instances in rds",
    "start": "525920",
    "end": "532560"
  },
  {
    "text": "um and for aurora you're you can expect around 35 percent better price",
    "start": "532560",
    "end": "537920"
  },
  {
    "text": "performance um upgrading allows uh allows customers to get higher ebs and network bandwidth",
    "start": "537920",
    "end": "544800"
  },
  {
    "text": "with just a few clicks in the console to be able to do this upgrade the path to upgrade is really really",
    "start": "544800",
    "end": "550560"
  },
  {
    "text": "simple and we'll show it in our demo today and all the existing rds features are supported in graviton as well you",
    "start": "550560",
    "end": "557519"
  },
  {
    "text": "can mix and match in aurora and be able to um be able to use different classes",
    "start": "557519",
    "end": "564160"
  },
  {
    "text": "in in aurora and this is available for aurora my sequel aurora postgres sequel",
    "start": "564160",
    "end": "569600"
  },
  {
    "text": "rds post postgres sequel rds massive and rds maria db",
    "start": "569600",
    "end": "576399"
  },
  {
    "text": "a little bit about how this works graviton 2 is actually able to achieve greater greater performance at lower",
    "start": "576399",
    "end": "582800"
  },
  {
    "text": "cost on the on the top left in this slide you can see the new r6g graviton cpu and",
    "start": "582800",
    "end": "589839"
  },
  {
    "text": "because each graviton 2 vcu pu is actually a physical core not a shared hyper thread like the vpcu on the right",
    "start": "589839",
    "end": "597279"
  },
  {
    "text": "you have access to the full resources and at the bottom for graviton 2 there's only one socket on each graviton 2",
    "start": "597279",
    "end": "604560"
  },
  {
    "text": "motherboard and all memory access is local as compared to non-graviton instances such as r5",
    "start": "604560",
    "end": "610880"
  },
  {
    "text": "where there are two sockets and in many cases the memory is accessed from the second socket which creates a",
    "start": "610880",
    "end": "616800"
  },
  {
    "text": "non-uniform memory access which may create a little delay in a small performance hit",
    "start": "616800",
    "end": "622160"
  },
  {
    "text": "these architectural improvements result in a real performance advantage in managed database workloads",
    "start": "622160",
    "end": "629360"
  },
  {
    "text": "another oft overlooked aspect of this is the cpu power efficiency and um and the performance",
    "start": "629360",
    "end": "637040"
  },
  {
    "text": "per watt uh is something that we look for for better stability better sustainability",
    "start": "637040",
    "end": "643360"
  },
  {
    "text": "a higher performance to watt ratio means higher density it means less cooling needs and smaller space needs and that",
    "start": "643360",
    "end": "650160"
  },
  {
    "text": "results in cost that we pass through and all this translates into a lower carbon footprint as well and greater",
    "start": "650160",
    "end": "656880"
  },
  {
    "text": "sustainability as we all know or maybe you've have or have not seen uh we introduced the new",
    "start": "656880",
    "end": "663600"
  },
  {
    "text": "uh sustainability uh tier to the well as a well architected uh well architected",
    "start": "663600",
    "end": "670079"
  },
  {
    "text": "uh pillar and uh we launched this re invent in 2021 and you should definitely check it",
    "start": "670079",
    "end": "676079"
  },
  {
    "text": "out and consider it for your new workloads this new uh new sustainability",
    "start": "676079",
    "end": "681279"
  },
  {
    "text": "pillar the types of instances that we support um",
    "start": "681279",
    "end": "687200"
  },
  {
    "text": "here is a list um these are the instance details supported today and these are the largest instance",
    "start": "687200",
    "end": "692720"
  },
  {
    "text": "sizes below for each instance family and i'll explain what workloads suit best",
    "start": "692720",
    "end": "698079"
  },
  {
    "text": "for each of these in just a minute on some call outs you'll see that rds has an extra instance family supported the",
    "start": "698079",
    "end": "704079"
  },
  {
    "text": "m6g and also that uh also that the x2g has over one",
    "start": "704079",
    "end": "710160"
  },
  {
    "text": "terabyte with a t of memory that's 19 gigabytes uh per second throughput on",
    "start": "710160",
    "end": "715600"
  },
  {
    "text": "the m r and x families and compute power is the same with 64 vcpu for the mr and x2 but you'll",
    "start": "715600",
    "end": "724560"
  },
  {
    "text": "notice more memory uh you'll notice that the memory increases over four times for workloads with higher in-memory",
    "start": "724560",
    "end": "730560"
  },
  {
    "text": "requirements um any questions in the chat currently about",
    "start": "730560",
    "end": "736720"
  },
  {
    "text": "about these so hey mike so there hasn't been any questions in the chat but one did pop",
    "start": "736720",
    "end": "743760"
  },
  {
    "text": "into my mind if i may you know is aws users and builders are looking to",
    "start": "743760",
    "end": "750320"
  },
  {
    "text": "adopt graviton how easy is it them to refactor applications to support the new",
    "start": "750320",
    "end": "756079"
  },
  {
    "text": "platform since it is a different cpu type yeah so with um with rds it's a it's a",
    "start": "756079",
    "end": "763680"
  },
  {
    "text": "pretty much they have parity between the two of them so um all the tools that you typically use are supported in um in",
    "start": "763680",
    "end": "770839"
  },
  {
    "text": "graviton um such as insights performance insights um for other managed services",
    "start": "770839",
    "end": "777120"
  },
  {
    "text": "that we have um for the most part managed services move over one to one as well we have um for things where a third",
    "start": "777120",
    "end": "784959"
  },
  {
    "text": "party applications are used um it depends on if they've been compiled for this architecture or not um",
    "start": "784959",
    "end": "792160"
  },
  {
    "text": "so um that you know it's pretty pretty easy to pretty easy to move and we're",
    "start": "792160",
    "end": "797519"
  },
  {
    "text": "gonna go through a demo here shortly to show that as well right so the big thing though from like an application perspective is you always want to test",
    "start": "797519",
    "end": "804160"
  },
  {
    "text": "first and don't just uh totally assume that that it worked on intel or amd that it's",
    "start": "804160",
    "end": "809360"
  },
  {
    "text": "going to work on graviton right we highly recommend doing both performance and just sanity checks to be",
    "start": "809360",
    "end": "815440"
  },
  {
    "text": "sure after you've moved that that things are working correctly perfect and stay on the latest versions wherever",
    "start": "815440",
    "end": "822320"
  },
  {
    "text": "possible latest operating systems and that generally the newer your",
    "start": "822320",
    "end": "828639"
  },
  {
    "text": "you're working with the better results you'll get even if it is compatible in an older version you may get better",
    "start": "828639",
    "end": "834000"
  },
  {
    "text": "performance on a newer version so yeah stay up to date",
    "start": "834000",
    "end": "839360"
  },
  {
    "text": "good tips yeah so a bit about which um which instance types are best for um",
    "start": "839360",
    "end": "846399"
  },
  {
    "text": "best for what uh what use cases um and also uh graviton uh just i wanna highlight this",
    "start": "846399",
    "end": "854000"
  },
  {
    "text": "once more graviton 2 instances can result in 35 better price performance for aurora and",
    "start": "854000",
    "end": "859680"
  },
  {
    "text": "52 price performance uh ratio improvement for rds open source databases depending on the database",
    "start": "859680",
    "end": "866160"
  },
  {
    "text": "engine version and workload the best use case for these instance families um",
    "start": "866160",
    "end": "872480"
  },
  {
    "text": "m6g which is only available on rds and not in aurora today is best for general",
    "start": "872480",
    "end": "877760"
  },
  {
    "text": "purpose workloads it's got just enough memory not too much not too little r6gs",
    "start": "877760",
    "end": "883120"
  },
  {
    "text": "double the memory to 512 gigabytes and t4s are best suited for dev tests and",
    "start": "883120",
    "end": "889120"
  },
  {
    "text": "generally burstable workloads and lastly the x2g is purpose built for the memory",
    "start": "889120",
    "end": "894399"
  },
  {
    "text": "heavy workloads with a terabyte of memory at the bottom here there's a number of",
    "start": "894399",
    "end": "899600"
  },
  {
    "text": "workshops to explore the differences further and hopefully we can drop these into the link i highly recommend going",
    "start": "899600",
    "end": "905040"
  },
  {
    "text": "through these workshops and checking out how graviton can work for you",
    "start": "905040",
    "end": "911279"
  },
  {
    "text": "uh all right ayden you want to take over here and show us a little demo",
    "start": "911279",
    "end": "917600"
  },
  {
    "text": "yeah um you know clint unless we got any questions we could",
    "start": "917600",
    "end": "922720"
  },
  {
    "text": "we could kick off here um and drop a link as well for for anybody to",
    "start": "922720",
    "end": "929120"
  },
  {
    "text": "follow this this workshop so all right",
    "start": "929120",
    "end": "935040"
  },
  {
    "start": "934000",
    "end": "1903000"
  },
  {
    "text": "let's jump into it then so first and foremost we're going to be benchmarking moving um rds postgres",
    "start": "935040",
    "end": "943360"
  },
  {
    "text": "from the previous from the previous generation m5 instance type to the m6g instance types",
    "start": "943360",
    "end": "951759"
  },
  {
    "text": "and here we're going to be benchmarking actually with um hammer db",
    "start": "951759",
    "end": "957279"
  },
  {
    "text": "and running um right heavy and read heavy workloads and and having a look at the performance differences and and",
    "start": "957279",
    "end": "963519"
  },
  {
    "text": "comparing what our end results are going to be and this is we're going to be running this",
    "start": "963519",
    "end": "971199"
  },
  {
    "text": "um you know visually in the console here but also in a ide so we'll be using the cloud9 id",
    "start": "971199",
    "end": "979040"
  },
  {
    "text": "that we set up in our prerequisites and there's a an easy cloud formation",
    "start": "979040",
    "end": "985600"
  },
  {
    "text": "template you can run and just get going um deploy the the vpc settings and",
    "start": "985600",
    "end": "991920"
  },
  {
    "text": "deploy um a generic i think it's a t3 instance type",
    "start": "991920",
    "end": "997199"
  },
  {
    "text": "what you'll want to do is upgrade that to a larger instance type",
    "start": "997199",
    "end": "1002480"
  },
  {
    "text": "i upgraded it to from a t3 to a m5 it's just a much larger instance",
    "start": "1002480",
    "end": "1008880"
  },
  {
    "text": "there to to make sure that when we're benchmarking it we can give it the thousands of iops it needs to stress",
    "start": "1008880",
    "end": "1014800"
  },
  {
    "text": "test it so with that being said jumping to you know the",
    "start": "1014800",
    "end": "1021759"
  },
  {
    "text": "intermediate level workshop part here you have um you know some bit of background on what hammerdb is going to",
    "start": "1021759",
    "end": "1028319"
  },
  {
    "text": "be giving us how to actually go and you know what steps to run what what",
    "start": "1028319",
    "end": "1034558"
  },
  {
    "text": "scripts to download there's about eight different shell scripts you're going to want you're going to want to download",
    "start": "1034559",
    "end": "1040240"
  },
  {
    "text": "and prep your cloud9 ide with and",
    "start": "1040240",
    "end": "1045438"
  },
  {
    "text": "there's a snapshot you can also copy over which we'll get to to save you some time instead of building the schemas",
    "start": "1045439",
    "end": "1051120"
  },
  {
    "text": "yourself so i've gone ahead and already deployed a x86 based postgres database in in us",
    "start": "1051120",
    "end": "1058880"
  },
  {
    "text": "west 2b um you can see it's running the m5",
    "start": "1058880",
    "end": "1064320"
  },
  {
    "text": "dot large size and jumping over to my cloud 9 ide right it's just running on",
    "start": "1064320",
    "end": "1071440"
  },
  {
    "text": "an ec2 instance um we can double check we're going to be hitting",
    "start": "1071440",
    "end": "1076480"
  },
  {
    "text": "the right the right database yep we're definitely targeting the x86 instance first",
    "start": "1076480",
    "end": "1082400"
  },
  {
    "text": "i've already gone ahead and run the started the benchmarking from hammerdb",
    "start": "1082400",
    "end": "1088240"
  },
  {
    "text": "because it runs for like 25 minutes um in the default for the workshop i'm",
    "start": "1088240",
    "end": "1093520"
  },
  {
    "text": "going to be doing some some video magic here to make sure that we can see the results um instead of waiting 20 plus",
    "start": "1093520",
    "end": "1100080"
  },
  {
    "text": "minutes for each each database but we'll let it run and there's our there's a number of",
    "start": "1100080",
    "end": "1106320"
  },
  {
    "text": "different shell scripts on the left to you know the various versions of",
    "start": "1106320",
    "end": "1111600"
  },
  {
    "text": "what we're looking at here we're targeting the x86 database at the top the second line",
    "start": "1111600",
    "end": "1118400"
  },
  {
    "text": "there and we've got the right right settings there with um",
    "start": "1118400",
    "end": "1124160"
  },
  {
    "text": "aws secrets manager so we're not you know showing you um username and passwords and other database secrets",
    "start": "1124160",
    "end": "1131679"
  },
  {
    "text": "and we'll let this run as you can see it's cpus at",
    "start": "1131679",
    "end": "1137320"
  },
  {
    "text": "99.87 percent and if we look at some of the",
    "start": "1137320",
    "end": "1144000"
  },
  {
    "text": "monitoring for this we can make sure definitely it's it is taking a lot of load right now so we're benchmarking",
    "start": "1144000",
    "end": "1149679"
  },
  {
    "text": "this um this is for olap um analytics processing workloads",
    "start": "1149679",
    "end": "1155440"
  },
  {
    "text": "so uh excuse me yeah this one is the olap workload so we're we're gonna make sure",
    "start": "1155440",
    "end": "1162480"
  },
  {
    "text": "we're gonna get get a lot of traffic on this instance and",
    "start": "1162480",
    "end": "1167760"
  },
  {
    "text": "we can refresh and have a look make sure it's still so reading it okay",
    "start": "1167760",
    "end": "1173440"
  },
  {
    "text": "so we should jump to the end here",
    "start": "1173440",
    "end": "1179200"
  },
  {
    "text": "and make sure okay so our benchmark for the x86 instances is complete we're",
    "start": "1179200",
    "end": "1184880"
  },
  {
    "text": "going to harvest the from the logs the results a little bit in a little bit and and compare them but",
    "start": "1184880",
    "end": "1191120"
  },
  {
    "text": "in the meantime let's go ahead and actually go ahead and create a read",
    "start": "1191120",
    "end": "1196880"
  },
  {
    "text": "replica of this x86 instance and i'm actually go ahead and show you how",
    "start": "1196880",
    "end": "1203280"
  },
  {
    "text": "you how you can move to a different instance type we're going to choose the same size but",
    "start": "1203280",
    "end": "1209679"
  },
  {
    "text": "from the m6g the graviton to based instance we're going to use the the same",
    "start": "1209679",
    "end": "1215120"
  },
  {
    "text": "settings 5000 provisioned iops same network and security settings",
    "start": "1215120",
    "end": "1220880"
  },
  {
    "text": "and you know make sure everything's in in the same configurations",
    "start": "1220880",
    "end": "1227600"
  },
  {
    "text": "and yep perfect same subnet groups",
    "start": "1227600",
    "end": "1233440"
  },
  {
    "text": "no changes here all good we're going to have to rename to give it a diff a unique",
    "start": "1233440",
    "end": "1239440"
  },
  {
    "text": "database identifier instance name and we'll do dash graviton",
    "start": "1239440",
    "end": "1245919"
  },
  {
    "text": "and no changes for database ports let's enable enhanced monitoring with one",
    "start": "1245919",
    "end": "1251679"
  },
  {
    "text": "second granularity just to have a deep look while we're running the benchmark",
    "start": "1251679",
    "end": "1256880"
  },
  {
    "text": "and very good use the same monitoring iem role",
    "start": "1256880",
    "end": "1263679"
  },
  {
    "text": "all right logs look good perfect so",
    "start": "1263679",
    "end": "1268720"
  },
  {
    "text": "let's go ahead and create the read replica of this and there's no need to run",
    "start": "1268720",
    "end": "1275200"
  },
  {
    "text": "minor version upgrades right now as we're just benchmarking so we'll let this",
    "start": "1275200",
    "end": "1281440"
  },
  {
    "text": "let this create refresh the page",
    "start": "1281440",
    "end": "1285760"
  },
  {
    "text": "and great now it's going to take a few moments and we'll see it's modifying",
    "start": "1287679",
    "end": "1293679"
  },
  {
    "text": "our primary database and creating our replica database",
    "start": "1293679",
    "end": "1300480"
  },
  {
    "text": "let's let's just jump ahead it's they're both now available and you'll see the role is primary and replica",
    "start": "1300480",
    "end": "1306480"
  },
  {
    "text": "and at this point we're going to want to promote our graviton",
    "start": "1306480",
    "end": "1311520"
  },
  {
    "text": "read replica currently and we'll go ahead and click",
    "start": "1311520",
    "end": "1316840"
  },
  {
    "text": "continue and uh this is a double check it's it's warning us there's it will result in a",
    "start": "1316840",
    "end": "1323600"
  },
  {
    "text": "reboot and your database identifier name will you'll have to you'll have a new",
    "start": "1323600",
    "end": "1328960"
  },
  {
    "text": "identifier name and um and it's saying reduce traffic or cut off traffic before",
    "start": "1328960",
    "end": "1335360"
  },
  {
    "text": "you do this as a warning and so take some some uh precautions here right if this was a",
    "start": "1335360",
    "end": "1341679"
  },
  {
    "text": "production database that's what it's warning us and we'll just promote our read replica and",
    "start": "1341679",
    "end": "1347679"
  },
  {
    "text": "again give it about a few moments refresh the page",
    "start": "1347679",
    "end": "1352720"
  },
  {
    "text": "and currently okay so it's modifying great",
    "start": "1352720",
    "end": "1358080"
  },
  {
    "text": "the replica is now modifying and we'll jump back when it's available",
    "start": "1358080",
    "end": "1364400"
  },
  {
    "text": "awesome so now we see at the top uh that the m6g.large",
    "start": "1364400",
    "end": "1372159"
  },
  {
    "text": "has been promoted as a primary replica and let's go ahead and kick off the same",
    "start": "1372159",
    "end": "1379120"
  },
  {
    "text": "um the exact same benchmarking from hammerdb",
    "start": "1379120",
    "end": "1384159"
  },
  {
    "text": "and just really briefly i'm grabbing from the workshop i'm grabbing the",
    "start": "1384159",
    "end": "1390320"
  },
  {
    "text": "benchmarkings configuration and pasting that in",
    "start": "1390320",
    "end": "1395919"
  },
  {
    "text": "on my cloud9 instance this is the data warehouse workload",
    "start": "1395919",
    "end": "1403120"
  },
  {
    "text": "uh decision support tree workload and that looks good to me let's go ahead and",
    "start": "1403120",
    "end": "1409039"
  },
  {
    "text": "copy paste this and we're gonna have to um you know i'll leave the same",
    "start": "1409039",
    "end": "1414559"
  },
  {
    "text": "configuration here you know 1500 seconds is going to be about 20-25 minutes",
    "start": "1414559",
    "end": "1420000"
  },
  {
    "text": "um you know 50 threads 50 virtual users so same load that we'll be putting on it",
    "start": "1420000",
    "end": "1427919"
  },
  {
    "text": "as the previous x86 database and just make sure we change the name to",
    "start": "1427919",
    "end": "1433600"
  },
  {
    "text": "whatever we named that database to perfect graviton",
    "start": "1433600",
    "end": "1441519"
  },
  {
    "text": "and yep that's the right name let's let's go ahead and save this and",
    "start": "1442080",
    "end": "1448720"
  },
  {
    "text": "uh run this run this script kick off this benchmark",
    "start": "1448720",
    "end": "1456679"
  },
  {
    "text": "okay cool so we'll let this run for um",
    "start": "1458960",
    "end": "1464159"
  },
  {
    "text": "about 20 25 minutes 1500 seconds and double check that definitely we are",
    "start": "1464159",
    "end": "1470159"
  },
  {
    "text": "getting load on this instance",
    "start": "1470159",
    "end": "1474640"
  },
  {
    "text": "great we can see the cpu ramping up current activity 50 plus sessions",
    "start": "1476400",
    "end": "1482559"
  },
  {
    "text": "just jumping into the the monitoring we if you remember we enabled enhanced monitoring",
    "start": "1482559",
    "end": "1488720"
  },
  {
    "text": "so we can have a quick look at what enhanced monitoring looks like in",
    "start": "1488720",
    "end": "1494080"
  },
  {
    "text": "under the monitoring drop down menu here so we're seeing a lot of load a lot of",
    "start": "1494080",
    "end": "1500400"
  },
  {
    "text": "details this is per second granularity 100 bcp usage",
    "start": "1500400",
    "end": "1506240"
  },
  {
    "text": "and um load times average load times 5 15 minutes",
    "start": "1506240",
    "end": "1511520"
  },
  {
    "text": "um super yeah definitely hammering the database here",
    "start": "1511520",
    "end": "1518799"
  },
  {
    "text": "and yeah this it's kicking off so",
    "start": "1520159",
    "end": "1525200"
  },
  {
    "text": "let's also have a look at the another really cool",
    "start": "1525200",
    "end": "1530240"
  },
  {
    "text": "insights performance insights from in your rds console this will tell you a lot of different",
    "start": "1530240",
    "end": "1536640"
  },
  {
    "text": "details about exactly what your your database is for example the",
    "start": "1536640",
    "end": "1542880"
  },
  {
    "text": "right ahead logs we're seeing here um you know our top our top activities for",
    "start": "1542880",
    "end": "1548720"
  },
  {
    "text": "this database are top sql um queries and",
    "start": "1548720",
    "end": "1553840"
  },
  {
    "text": "um so this can be a lot of insight right now it's very busy",
    "start": "1553840",
    "end": "1558880"
  },
  {
    "text": "and and we're seeing a lot of activity from uh on this database so",
    "start": "1558880",
    "end": "1565440"
  },
  {
    "text": "we'll let that run it's constantly updating per second or per um you know",
    "start": "1565440",
    "end": "1570880"
  },
  {
    "text": "this five minute window so cool we'll let that let that run",
    "start": "1570880",
    "end": "1576880"
  },
  {
    "text": "and jump back until it's done so just jumping ahead we've completed",
    "start": "1576880",
    "end": "1582720"
  },
  {
    "text": "the benchmark here on the graviton instance and",
    "start": "1582720",
    "end": "1588159"
  },
  {
    "text": "double check we're not we're not hitting it with much load yep so back to",
    "start": "1588159",
    "end": "1594799"
  },
  {
    "text": "to idle four percent cpu usage on on all of them no more benchmarks running",
    "start": "1594799",
    "end": "1600240"
  },
  {
    "text": "and once we harvest the the results uh from the logs you know",
    "start": "1600240",
    "end": "1605520"
  },
  {
    "text": "these are just the number of operations per minute is a is a good benchmark figure to",
    "start": "1605520",
    "end": "1611039"
  },
  {
    "text": "focus on and you know we see um x86 gave us 11 700 number of operations",
    "start": "1611039",
    "end": "1618720"
  },
  {
    "text": "per minute and on the m5 and on the m6g we saw 12 200",
    "start": "1618720",
    "end": "1625760"
  },
  {
    "text": "on the graviton instance so as well transactions per minutes that's 27 000 versus you know 28 000 and what",
    "start": "1625760",
    "end": "1634080"
  },
  {
    "text": "we're seeing is a 4.6 percent difference between improvements on the graviton 2",
    "start": "1634080",
    "end": "1639679"
  },
  {
    "text": "instances so this is quite this is a minor improvement yep it's it's a good",
    "start": "1639679",
    "end": "1645600"
  },
  {
    "text": "improvement there's been no optimization or tuning or digging in and",
    "start": "1645600",
    "end": "1651679"
  },
  {
    "text": "changing parameters here this is the same benchmark run on both of them and when we compare our hourly costs and",
    "start": "1651679",
    "end": "1658960"
  },
  {
    "text": "our monthly costs it's 11.9 percent lower costs on the graviton instances",
    "start": "1658960",
    "end": "1666600"
  },
  {
    "text": "m6g.large and you know for this extra 4.4 percent better performance",
    "start": "1666600",
    "end": "1673440"
  },
  {
    "text": "we're getting in the range of like 15 to 17 percent cost performance better price performance increases here",
    "start": "1673440",
    "end": "1680320"
  },
  {
    "text": "with just a few moments of um you know of work so this is a great you",
    "start": "1680320",
    "end": "1687360"
  },
  {
    "text": "know win for just a very minimal amount of work um no extra tuning needed for these databases",
    "start": "1687360",
    "end": "1693600"
  },
  {
    "text": "and and you know you can you can squeeze out and i'll i'll show some other examples where you can squeeze out even",
    "start": "1693600",
    "end": "1699520"
  },
  {
    "text": "more if you do do some um performance tuning but this is just a straightforward um jump right",
    "start": "1699520",
    "end": "1707360"
  },
  {
    "text": "to you know the the latest instance types so yeah perfect so that's the that's the",
    "start": "1707360",
    "end": "1713919"
  },
  {
    "text": "quick demo here of jumping over to graviton two instances and benchmarking it um we recommend benchmarking with",
    "start": "1713919",
    "end": "1722159"
  },
  {
    "text": "your own real workloads and and see what your",
    "start": "1722159",
    "end": "1727679"
  },
  {
    "text": "you know performance looks like but yeah happy to take some questions here and jump into some other",
    "start": "1727679",
    "end": "1733360"
  },
  {
    "text": "performance graphs yeah that's a that's a great demo guys",
    "start": "1733360",
    "end": "1738559"
  },
  {
    "text": "we did have a few questions that came along in the chat there i think the first one will go over to mike because you were talking about um the different",
    "start": "1738559",
    "end": "1745039"
  },
  {
    "text": "instance types and memory optimization and things um so can you clarify what",
    "start": "1745039",
    "end": "1750159"
  },
  {
    "text": "the difference is between memory intensive and memory optimized",
    "start": "1750159",
    "end": "1755759"
  },
  {
    "text": "um i would say uh you know i didn't do do you have a good",
    "start": "1757919",
    "end": "1763039"
  },
  {
    "text": "answer for that yeah there we use them interchangeably i would say when your memory requirements",
    "start": "1763039",
    "end": "1768720"
  },
  {
    "text": "are are very high that's where you you must move up to the r6g or the x2g",
    "start": "1768720",
    "end": "1776320"
  },
  {
    "text": "um you know yeah that that would be the straightforward answer there um they're",
    "start": "1776320",
    "end": "1782880"
  },
  {
    "text": "used interchangeably um you know we have a whole slew of",
    "start": "1782880",
    "end": "1788000"
  },
  {
    "text": "products for in-memory performance like um memcached you know for",
    "start": "1788000",
    "end": "1793120"
  },
  {
    "text": "uh for redis support or elastic support but you know this is focusing on when your database",
    "start": "1793120",
    "end": "1798799"
  },
  {
    "text": "requirements like you you get much better performance with much more memory so some workloads do demand",
    "start": "1798799",
    "end": "1804960"
  },
  {
    "text": "a lot more memory than um you know than others so yeah i think it may also be",
    "start": "1804960",
    "end": "1812000"
  },
  {
    "text": "like the application that you run may be memory intensive therefore it requires a",
    "start": "1812000",
    "end": "1817440"
  },
  {
    "text": "memory optimized instance type the actual if you go and look at the ec2 instances page which i'm going to drop a",
    "start": "1817440",
    "end": "1823120"
  },
  {
    "text": "link to here in the chat in a second it is memory optimized",
    "start": "1823120",
    "end": "1829200"
  },
  {
    "text": "where the workload that runs on there may be memory intensive i think that's another way to",
    "start": "1829200",
    "end": "1835120"
  },
  {
    "text": "also explain it based on how it was covered a little bit earlier um there was another question",
    "start": "1835120",
    "end": "1842080"
  },
  {
    "text": "that came through the chat here is um are there any other hardware related",
    "start": "1842080",
    "end": "1847279"
  },
  {
    "text": "differences for example clock speed or ram megahertz the actual clock speed",
    "start": "1847279",
    "end": "1852480"
  },
  {
    "text": "itself uh between the cpu and ram for mem for optimized instances besides the",
    "start": "1852480",
    "end": "1857760"
  },
  {
    "text": "ratio of cpu cores and ram are you guys able to answer that are you familiar",
    "start": "1857760",
    "end": "1863440"
  },
  {
    "text": "yeah i could grab this one so the the there are some differences there in clock speed for example but the biggest",
    "start": "1863440",
    "end": "1869840"
  },
  {
    "text": "difference is the fact that each vcpu is a physical core and that's really where you're seeing um",
    "start": "1869840",
    "end": "1876880"
  },
  {
    "text": "you know as as threads increase as workload increases you're not dealing with hyper threading and the non-uniform",
    "start": "1876880",
    "end": "1884159"
  },
  {
    "text": "memory access so yes there are improvements to clock speeds and um you",
    "start": "1884159",
    "end": "1890240"
  },
  {
    "text": "know newer memories but the real the real bump here is the extra v cpus um",
    "start": "1890240",
    "end": "1895919"
  },
  {
    "text": "really physical cores you're you're getting the benefit of so",
    "start": "1895919",
    "end": "1901039"
  },
  {
    "text": "um yeah just to because we only tested this this",
    "start": "1901039",
    "end": "1906399"
  },
  {
    "start": "1903000",
    "end": "2180000"
  },
  {
    "text": "demo was only on one instance size and uh on one thread right uh the other",
    "start": "1906399",
    "end": "1913440"
  },
  {
    "text": "50 threads we had 50 virtual virtual users created um you",
    "start": "1913440",
    "end": "1918640"
  },
  {
    "text": "know if we actually look at the largest instance sizes this is the",
    "start": "1918640",
    "end": "1924640"
  },
  {
    "text": "um the m6g16xl um we're seeing we can see even better performance here this is related to that",
    "start": "1924640",
    "end": "1931440"
  },
  {
    "text": "we have the full um full cores not you know not virtualized cores that",
    "start": "1931440",
    "end": "1937039"
  },
  {
    "text": "not be cpus there um or shared vcpus so what we're seeing on the left right as",
    "start": "1937039",
    "end": "1943440"
  },
  {
    "text": "thread count goes up 2048 threads the 16xl instance is",
    "start": "1943440",
    "end": "1951039"
  },
  {
    "text": "is giving us you know 81 000 versus 60 000 new orders",
    "start": "1951039",
    "end": "1956159"
  },
  {
    "text": "per minute this is one another hammer db benchmark that's been run and um you",
    "start": "1956159",
    "end": "1961279"
  },
  {
    "text": "know as orders ramp up you can see how we consume more threads and how effective graviton 2 is at higher threat",
    "start": "1961279",
    "end": "1967760"
  },
  {
    "text": "counts right so that's this is a 35 performance increase to 81 000 to 60 thousands",
    "start": "1967760",
    "end": "1974000"
  },
  {
    "text": "and this is one case where you're getting um you know significant performance improvements as well at the",
    "start": "1974000",
    "end": "1980240"
  },
  {
    "text": "very high end of databases so um on the right you know this is very",
    "start": "1980240",
    "end": "1986240"
  },
  {
    "text": "similar to what we saw this is a much much smaller in the demo a much smaller instance like the smallest instance",
    "start": "1986240",
    "end": "1991519"
  },
  {
    "text": "types and here we're seeing you know 17 000 versus like 14 800 um",
    "start": "1991519",
    "end": "1999120"
  },
  {
    "text": "you know 15 000 you know new orders per minute so we're seeing closer to like 15",
    "start": "1999120",
    "end": "2004480"
  },
  {
    "text": "improvements you know as we have 12 threads um and my workload was was was",
    "start": "2004480",
    "end": "2009919"
  },
  {
    "text": "50 threads so um just another uh you know varying",
    "start": "2009919",
    "end": "2015440"
  },
  {
    "text": "instance sizes matters right um if we jump to the next slide",
    "start": "2015440",
    "end": "2020880"
  },
  {
    "text": "here we are we are actually looking at aurora on mysql so very similar scenario right",
    "start": "2020880",
    "end": "2027840"
  },
  {
    "text": "we're comparing the r6g dot x large and the r5 dot x large so",
    "start": "2027840",
    "end": "2034640"
  },
  {
    "text": "these are the the memory um memory instance types here right more memory and some more memory for the",
    "start": "2034640",
    "end": "2040720"
  },
  {
    "text": "instances and we're load testing again with hammer db looking at orders per minute we're",
    "start": "2040720",
    "end": "2046080"
  },
  {
    "text": "getting a 15 1.15 x bump here as you know we increase to the",
    "start": "2046080",
    "end": "2053200"
  },
  {
    "text": "50 virtual users as we add more virtual users um and next slide at the highest end",
    "start": "2053200",
    "end": "2060320"
  },
  {
    "text": "scales here this is looking at the r6g 16xl right as",
    "start": "2060320",
    "end": "2066480"
  },
  {
    "text": "a graviton instance in light blue and with the direct",
    "start": "2066480",
    "end": "2073358"
  },
  {
    "text": "previous generation instance comparison the 16xl there's a 1.5 x increase once you",
    "start": "2073359",
    "end": "2079839"
  },
  {
    "text": "go past 64 connections right that's those um you",
    "start": "2079839",
    "end": "2084878"
  },
  {
    "text": "know and and if we compare with a much much larger instance family the uh instance",
    "start": "2084879",
    "end": "2090560"
  },
  {
    "text": "type the r5.24 xl which even has 96 vcpus um you're seeing even even still",
    "start": "2090560",
    "end": "2098400"
  },
  {
    "text": "the r62 16xl is beating the instance type with way more vcpus",
    "start": "2098400",
    "end": "2104560"
  },
  {
    "text": "so that's 96 vcps versus 64 vcps so",
    "start": "2104560",
    "end": "2110640"
  },
  {
    "text": "you know significant improvements here and this is running a thousand and thousand row in memory range scan with a",
    "start": "2110640",
    "end": "2116480"
  },
  {
    "text": "nested uh three level nested loop so um you know just",
    "start": "2116480",
    "end": "2122240"
  },
  {
    "text": "driving at home basically you your total cost of ownership drops",
    "start": "2122240",
    "end": "2127359"
  },
  {
    "text": "with the graviton two instances you're getting the highest performance for the instance families",
    "start": "2127359",
    "end": "2133839"
  },
  {
    "text": "you know if you're looking at the identical sizes between instance the lower cost",
    "start": "2133839",
    "end": "2139359"
  },
  {
    "text": "immediately right there even if you see if your workload doesn't see any improvements",
    "start": "2139359",
    "end": "2144880"
  },
  {
    "text": "um you know as you might you should definitely test with your workloads even still 11 lower cost",
    "start": "2144880",
    "end": "2151520"
  },
  {
    "text": "is a significant improvement and you can get up to 52 better price performance um you know",
    "start": "2151520",
    "end": "2158720"
  },
  {
    "text": "with these with these differences here so really that's the best price performances within the instance",
    "start": "2158720",
    "end": "2163839"
  },
  {
    "text": "families um by moving to the graviton two instances so um",
    "start": "2163839",
    "end": "2169520"
  },
  {
    "text": "yeah awesome thanks aidan that that demo was fantastic and uh and i i'm really",
    "start": "2169520",
    "end": "2175599"
  },
  {
    "text": "excited to see folks starting to use these um new graviton instances um we have sort of a link page here for",
    "start": "2175599",
    "end": "2182240"
  },
  {
    "start": "2180000",
    "end": "2405000"
  },
  {
    "text": "all the different links uh to start digging deeper into these um into these topics",
    "start": "2182240",
    "end": "2187920"
  },
  {
    "text": "and um looking forward to hearing from you guys clint you want to wrap us up",
    "start": "2187920",
    "end": "2193040"
  },
  {
    "text": "yeah totally we did have a another question popped through from liquid surya and he's here they are curious",
    "start": "2193040",
    "end": "2198960"
  },
  {
    "text": "what workloads see the most improvement by use of graviton to",
    "start": "2198960",
    "end": "2204079"
  },
  {
    "text": "i could take this yeah so the specifically with rds and aurora the higher",
    "start": "2204079",
    "end": "2209440"
  },
  {
    "text": "uh your thread usage like the the larger the um",
    "start": "2209440",
    "end": "2214880"
  },
  {
    "text": "you know as you increase the threads way past 64 threads you're going to see the a lot more benefits there um",
    "start": "2214880",
    "end": "2222320"
  },
  {
    "text": "in more broadly what you know generally what workloads see the best improvements",
    "start": "2222320",
    "end": "2228480"
  },
  {
    "text": "you know we covered like you know web and and gaming servers right that's a great use case for it",
    "start": "2228480",
    "end": "2234240"
  },
  {
    "text": "um high performance computing can also benefit from this in memory caches",
    "start": "2234240",
    "end": "2240240"
  },
  {
    "text": "you know have significant improvements as well so that's like your memcached and and redis workloads um",
    "start": "2240240",
    "end": "2247760"
  },
  {
    "text": "you know microservices are also a great great workload for this um off the",
    "start": "2247760",
    "end": "2252800"
  },
  {
    "text": "i would say database like the managed services are are going to be the the most straightforward lift and the least",
    "start": "2252800",
    "end": "2259839"
  },
  {
    "text": "amount of work to get started on um and you know some work some of your",
    "start": "2259839",
    "end": "2265359"
  },
  {
    "text": "workloads may be easily like they may already have arm",
    "start": "2265359",
    "end": "2270800"
  },
  {
    "text": "you know arm additions right available armor architecture support off the bat so that's really where",
    "start": "2270800",
    "end": "2277599"
  },
  {
    "text": "minimal effort can be you know expended for the maximum benefit right managed services are a great place to to",
    "start": "2277599",
    "end": "2284640"
  },
  {
    "text": "start with like the low-hanging fruit and um that's why we chose rds and and",
    "start": "2284640",
    "end": "2290000"
  },
  {
    "text": "aurora to to focus on today and if you wanted to learn more about",
    "start": "2290000",
    "end": "2295200"
  },
  {
    "text": "graviton 2 in general for other things other than rds aidan and i did another",
    "start": "2295200",
    "end": "2300240"
  },
  {
    "text": "broadcast on graviton 2 and just sort of an overview and we did some deep dive into some",
    "start": "2300240",
    "end": "2306079"
  },
  {
    "text": "application specific things um you can find it on our youtube channel and i'm sure we'll be doing more graviton things",
    "start": "2306079",
    "end": "2311760"
  },
  {
    "text": "in the future too so please give us some feedback and let us know what you'd like to see next",
    "start": "2311760",
    "end": "2317760"
  },
  {
    "text": "perfect so i think we're in the clear now to to wrap things up for the day i don't see",
    "start": "2317760",
    "end": "2323839"
  },
  {
    "text": "any other questions that have came through the uh through the chat so i think we're good",
    "start": "2323839",
    "end": "2329440"
  },
  {
    "text": "to go there so in quick closing here for everybody and the viewers online today first of all thanks so much for joining",
    "start": "2329440",
    "end": "2335200"
  },
  {
    "text": "in on the amazon supports you uh twitch stream we appreciate it uh today we talked about graviton 2 provided some",
    "start": "2335200",
    "end": "2341359"
  },
  {
    "text": "background discuss the ease of adoption as well as operation uh dove deep into",
    "start": "2341359",
    "end": "2346400"
  },
  {
    "text": "amazon rds aurora on graviton as well as some of the benefits that you're going to get there and aiden gave us a really",
    "start": "2346400",
    "end": "2352880"
  },
  {
    "text": "good demo of migrating and benchmarking m5 to m6g amazon rds instances um if",
    "start": "2352880",
    "end": "2359520"
  },
  {
    "text": "there are any questions not answered today you can post your questions on repost.aw",
    "start": "2359520",
    "end": "2365119"
  },
  {
    "text": "aws or email us any feedback to aws supports you at amazon.com we want to",
    "start": "2365119",
    "end": "2370720"
  },
  {
    "text": "hear from you so tell us what you would like to see on the show also be sure to tune in next week where we're going to",
    "start": "2370720",
    "end": "2376079"
  },
  {
    "text": "be discussing testing infrastructure reliability with amazon fault injector simulation so thanks for joining us it",
    "start": "2376079",
    "end": "2383920"
  },
  {
    "text": "amazon supports you aws supports you and happy cloud computing",
    "start": "2383920",
    "end": "2390050"
  },
  {
    "text": "[Music]",
    "start": "2390050",
    "end": "2402010"
  },
  {
    "text": "you",
    "start": "2403599",
    "end": "2405920"
  }
]