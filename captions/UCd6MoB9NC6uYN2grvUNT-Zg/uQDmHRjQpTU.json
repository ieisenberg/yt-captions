[
  {
    "text": " ",
    "start": "0",
    "end": "140"
  },
  {
    "text": "AWS Proton is a fully-managed application\ndelivery service that enables platform operations",
    "start": "140",
    "end": "5120"
  },
  {
    "text": "teams to provide consistent architecture across an\norganization, and enables developers to deliver",
    "start": "5120",
    "end": "10180"
  },
  {
    "text": "their applications on approved infrastructure using\na self-service interface. In this demo, we’ll see",
    "start": "10180",
    "end": "16139"
  },
  {
    "text": "how to set up all the different tools our\ndevelopment teams need for infrastructure",
    "start": "16140",
    "end": "19180"
  },
  {
    "text": "provisioning, code deployments, monitoring, and\nupdates. Let’s begin by opening the AWS Proton",
    "start": "19180",
    "end": "26200"
  },
  {
    "text": "service page in the AWS Console and clicking\n“Get started”. Before development teams can use",
    "start": "26200",
    "end": "31120"
  },
  {
    "text": "Proton to deploy services, we’ll need to create a\nservice template for them to use and a",
    "start": "31120",
    "end": "35180"
  },
  {
    "text": "standardized environment where they can deploy\ntheir services. To create that environment, we first",
    "start": "35180",
    "end": "40100"
  },
  {
    "text": "need to create an environment template. Let’s go\nahead and do that now. A Proton environment",
    "start": "40100",
    "end": "45140"
  },
  {
    "text": "template is a re-usable bundle of configuration\nfiles that define the metadata and infrastructure",
    "start": "45140",
    "end": "50100"
  },
  {
    "text": "resources needed to create a given environment.\nFor this demo, we’ll be creating a template to",
    "start": "50100",
    "end": "55100"
  },
  {
    "text": "provision a new environment using one of the\nsample template bundles provided by the AWS",
    "start": "55100",
    "end": "59100"
  },
  {
    "text": "Proton team. The sample template bundle consists of: \na manifest.yaml file, which lists the",
    "start": "59100",
    "end": "65799"
  },
  {
    "text": "files used to define an environment’s\ninfrastructure, a schema.yaml file, which defines",
    "start": "65800",
    "end": "70140"
  },
  {
    "text": "the input parameters used in the infrastructure\ntemplates, and a cloudformation.yaml",
    "start": "70140",
    "end": "75200"
  },
  {
    "text": "infrastructure file, which defines the infrastructure\nitself. We also have the option of providing our",
    "start": "75200",
    "end": "80600"
  },
  {
    "text": "own template bundle, which will build a custom\nenvironment according to our organization’s best",
    "start": "80600",
    "end": "84400"
  },
  {
    "text": "practices, or we could tell Proton to use some\nexisting provisioned infrastructure that we manage",
    "start": "84400",
    "end": "89600"
  },
  {
    "text": "on our own. Let’s select the “fargate-environment”\nsample template bundle, fill in a template name",
    "start": "89600",
    "end": "95799"
  },
  {
    "text": "and description, and leave the rest of the options\nalone. Next, we’ll create a service template.",
    "start": "95800",
    "end": "101600"
  },
  {
    "text": "A service template, similar to an environment\ntemplate, is a re-usable bundle of configuration",
    "start": "101600",
    "end": "106100"
  },
  {
    "text": "files that define a complete set of resources. The\nsample “fargate-service” template bundle, like the",
    "start": "106100",
    "end": "112100"
  },
  {
    "text": "“fargate-environment” template bundle we just\nsaw, also consists of manifest, schema, and",
    "start": "112100",
    "end": "117140"
  },
  {
    "text": "cloudformation YAML files to define the\ninfrastructure, but also contains an additional",
    "start": "117140",
    "end": "122200"
  },
  {
    "text": "cloudformation.yaml and manifest.yaml file to\ndefine a deployment pipeline for the service.",
    "start": "122200",
    "end": "127159"
  },
  {
    "text": "We’ll fill in the service template name and description,\nand leave the rest of the options alone like before",
    "start": "127160",
    "end": "133000"
  },
  {
    "text": "except for the compatible environment templates.\nHere, we’ll make sure to select our “proton-demo”",
    "start": "133000",
    "end": "138160"
  },
  {
    "text": "environment template from earlier. This will ensure\nthat anybody using Proton to deploy this service",
    "start": "138160",
    "end": "143800"
  },
  {
    "text": "will deploy it to a compatible environment. After\nclicking “Create service template”, we’re asked to",
    "start": "143800",
    "end": "149400"
  },
  {
    "text": "configure an account role. This is the IAM Role\nthat Proton will use to make API calls to other",
    "start": "149400",
    "end": "154400"
  },
  {
    "text": "services, such as CloudFormation, on our behalf.\nFor this demo, we’ll have Proton create a new",
    "start": "154400",
    "end": "159099"
  },
  {
    "text": "service role for us; however, we strongly advise\nplatform administrators to read more on Proton’s",
    "start": "159100",
    "end": "165400"
  },
  {
    "text": "access control and scope this role down to the minimal set \nof privileges required by the templates they intend to use.",
    "start": "165400",
    "end": "171400"
  },
  {
    "text": "Before our developer teams can deploy their own \n“fargate-service” with Proton,",
    "start": "171400",
    "end": "175099"
  },
  {
    "text": "our last step as the platform operators is to actually\nbuild the environment they would be deploying to.",
    "start": "175100",
    "end": "180140"
  },
  {
    "text": "Let’s use the environment template we created\nearlier to do that now. We’ll choose our",
    "start": "180140",
    "end": "185800"
  },
  {
    "text": "“Proton Demo” environment template, call this a\n“staging” environment, choose the default service",
    "start": "185800",
    "end": "191000"
  },
  {
    "text": "role we created, and click “Next”. It’s now asking\nus for some VPC and subnet CIDR ranges",
    "start": "191000",
    "end": "197120"
  },
  {
    "text": "because the schema.yaml file in the sample\ntemplate bundle said to expect some.",
    "start": "197120",
    "end": "201120"
  },
  {
    "text": "These values are optional, though, so let’s leave these\nfields blank to accept the defaults.",
    "start": "201120",
    "end": "206799"
  },
  {
    "text": "The deployment was created and is now in progress.\nWhile that’s running, let’s repeat the process to",
    "start": "206800",
    "end": "212200"
  },
  {
    "text": "create a “production” environment too, and let’s\nspecify some CIDR ranges this time as well.",
    "start": "212200",
    "end": "220400"
  },
  {
    "text": "Creation of the sample environments should only\ntake a few minutes to complete, but for longer",
    "start": "220400",
    "end": "224140"
  },
  {
    "text": "deployments, we can switch over to the CloudFormation \nconsole to follow its progress in more detail.",
    "start": "224140",
    "end": "230000"
  },
  {
    "text": "Great! The environment is ready and now just needs a \nservice to run in it. Our work as platform operators is",
    "start": "230000",
    "end": "235120"
  },
  {
    "text": "complete for now, so let’s see how the next steps look \nfrom the perspective of our developer team.",
    "start": "235120",
    "end": "240120"
  },
  {
    "text": "We’re now logged in with a separate AWS Proton \nDeveloper role, which has the default",
    "start": "240120",
    "end": "245400"
  },
  {
    "text": "AWSProtonDeveloperAccess IAM policy applied to it, \nas well as read-only access to AWS CloudFormation",
    "start": "245400",
    "end": "251159"
  },
  {
    "text": "AWS CodePipeline, and a variety of services consumed \nby our sample application, such as Amazon ECS.",
    "start": "251160",
    "end": "257180"
  },
  {
    "text": "Let’s create our first service! First, we go to Services in \nthe Proton service page and click “Create service”.",
    "start": "257180",
    "end": "265199"
  },
  {
    "text": "Next, we select the “Proton Demo” service \ntemplate and click “Configure”. ",
    "start": "265200",
    "end": "269160"
  },
  {
    "text": "We’ll give it a name and description, then \nconfigure the repository settings.",
    "start": "269160",
    "end": "274160"
  },
  {
    "text": "For this demo, we already have a GitHub repository connection \nestablished that allows us to detect source changes.",
    "start": "274160",
    "end": "281200"
  },
  {
    "text": "To configure your own, click “Create connection”, and \nfollow the steps.",
    "start": "281200",
    "end": "286200"
  },
  {
    "text": "In this case, we’ll have it deploy from the \"main\" branch \nof our forked \"aws-proton-sample-fargate-service\"",
    "start": "286200",
    "end": "292400"
  },
  {
    "text": "repository using the existing AWS Proton Demo \nrepository connection.",
    "start": "292400",
    "end": "297000"
  },
  {
    "text": "Next, we’ll configure two service instances - one \nfor each environment that we created earlier.",
    "start": "297000",
    "end": "302100"
  },
  {
    "text": "First, we’ll create a “staging” service instance \nthat will deploy to the staging environment ",
    "start": "302100",
    "end": "306160"
  },
  {
    "text": "using whichever defaults are specified in the service \ntemplate, and then, we’ll add a “production” service",
    "start": "306160",
    "end": "312000"
  },
  {
    "text": "instance for the production environment. This time, since \nit’s for a production environment,",
    "start": "312000",
    "end": "316120"
  },
  {
    "text": "let’s have it create 3 medium-sized Fargate tasks instead.\nFinally, we’ll leave the container image and Pipeline Inputs",
    "start": "316120",
    "end": "323600"
  },
  {
    "text": "at their defaults for this demo, as the pipeline configuration\nwithin the sample Fargate service template template bundle",
    "start": "323600",
    "end": "328200"
  },
  {
    "text": "for AWS Proton takes care of building the container image, and \nconfiguring our Fargate task definitions accordingly to use it.",
    "start": "328200",
    "end": "334100"
  },
  {
    "text": "Proton will create the service and service\ndeployment pipeline, and we can follow the",
    "start": "334100",
    "end": "339200"
  },
  {
    "text": "progress using the CloudFormation stack events\nlog. Then, we can watch the deployment pipeline",
    "start": "339200",
    "end": "344100"
  },
  {
    "text": "itself deploy our sample application to each \nenvironment. Now that our application is",
    "start": "344100",
    "end": "349400"
  },
  {
    "text": "deployed, making changes is just a matter of\npushing new commits to our repository, which will",
    "start": "349400",
    "end": "353100"
  },
  {
    "text": "be detected by CodePipeline and begin a new\ndeployment cycle. Since all this infrastructure is in",
    "start": "353100",
    "end": "359000"
  },
  {
    "text": "our account, we have full capacity to manage,\nupdate, and troubleshoot as required.",
    "start": "359000",
    "end": "363160"
  },
  {
    "text": "For example, platform operators can review CloudFormation \nstack events for issues when deploying environments,",
    "start": "363160",
    "end": "369800"
  },
  {
    "text": "developers can see details on code deployments within \nCodeBuild and CodePipeline,",
    "start": "369800",
    "end": "373159"
  },
  {
    "text": "and we can make changes to the underlying environments \nor services by creating a new minor or major version of the",
    "start": "373160",
    "end": "379160"
  },
  {
    "text": "corresponding template, providing an updated template \nbundle, and then updating the environments or service",
    "start": "379160",
    "end": "385120"
  },
  {
    "text": "instances to use the latest versions. AWS Proton, gives you \nright blend of control and flexibility so everyone can focus",
    "start": "385120",
    "end": "392180"
  },
  {
    "text": "on innovating for your business. If you'd like to try these \nexamples for yourself, check out the sample templates",
    "start": "392180",
    "end": "398199"
  },
  {
    "text": "repositories linked in the video description, or visit \naws.amazon.com/proton to get started today.",
    "start": "398200",
    "end": "405300"
  }
]