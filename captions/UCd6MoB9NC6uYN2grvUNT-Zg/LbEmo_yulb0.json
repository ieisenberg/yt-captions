[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "hello my name is vaibhav bhardwaj and",
    "start": "2060",
    "end": "5700"
  },
  {
    "text": "today we'll discuss how to implement",
    "start": "5700",
    "end": "7880"
  },
  {
    "text": "fine-grained Access Control in dynamodb",
    "start": "7880",
    "end": "10440"
  },
  {
    "text": "using IM policy conditions",
    "start": "10440",
    "end": "13500"
  },
  {
    "text": "I am a senior dynamodb specialist",
    "start": "13500",
    "end": "15719"
  },
  {
    "text": "Solutions architect at Amazon web",
    "start": "15719",
    "end": "17460"
  },
  {
    "text": "services and in this role I get the",
    "start": "17460",
    "end": "20520"
  },
  {
    "text": "opportunity to work with customers",
    "start": "20520",
    "end": "22199"
  },
  {
    "text": "having various types of workloads on",
    "start": "22199",
    "end": "24900"
  },
  {
    "text": "dynamodb",
    "start": "24900",
    "end": "26820"
  },
  {
    "text": "many of my customers often ask me how",
    "start": "26820",
    "end": "30060"
  },
  {
    "text": "they can Implement fine-grained Access",
    "start": "30060",
    "end": "32040"
  },
  {
    "text": "Control in dynamodb",
    "start": "32040",
    "end": "34020"
  },
  {
    "text": "at AWS we embrace the culture that",
    "start": "34020",
    "end": "37079"
  },
  {
    "text": "security is job Zero by which we mean",
    "start": "37079",
    "end": "40200"
  },
  {
    "text": "it's even more important than any number",
    "start": "40200",
    "end": "42540"
  },
  {
    "text": "one priority",
    "start": "42540",
    "end": "44040"
  },
  {
    "text": "let's see what options we have to",
    "start": "44040",
    "end": "46320"
  },
  {
    "text": "implement fine-grained Access Control in",
    "start": "46320",
    "end": "48660"
  },
  {
    "text": "dynamodb",
    "start": "48660",
    "end": "50520"
  },
  {
    "text": "dynamodb supports identity based",
    "start": "50520",
    "end": "53280"
  },
  {
    "text": "policies often called IAM policies for",
    "start": "53280",
    "end": "56280"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "Access Control",
    "start": "56280",
    "end": "57600"
  },
  {
    "text": "unlike other service like S3 dynamodb",
    "start": "57600",
    "end": "61020"
  },
  {
    "text": "does not support role-based policies",
    "start": "61020",
    "end": "64500"
  },
  {
    "text": "as a refresher an IM policy has below",
    "start": "64500",
    "end": "67860"
  },
  {
    "text": "components",
    "start": "67860",
    "end": "69180"
  },
  {
    "text": "first one is Amazon resource name or Arn",
    "start": "69180",
    "end": "72960"
  },
  {
    "text": "to identify the resource that the policy",
    "start": "72960",
    "end": "75960"
  },
  {
    "text": "applies to",
    "start": "75960",
    "end": "77880"
  },
  {
    "text": "second is an action to identify",
    "start": "77880",
    "end": "80280"
  },
  {
    "text": "operations that you want to allow or",
    "start": "80280",
    "end": "82500"
  },
  {
    "text": "deny",
    "start": "82500",
    "end": "83880"
  },
  {
    "text": "third component is the effect which can",
    "start": "83880",
    "end": "86520"
  },
  {
    "text": "either allow or deny the specific action",
    "start": "86520",
    "end": "89400"
  },
  {
    "text": "and the last one is principle that",
    "start": "89400",
    "end": "92040"
  },
  {
    "text": "identifies the user or role this policy",
    "start": "92040",
    "end": "94799"
  },
  {
    "text": "is attached to",
    "start": "94799",
    "end": "97520"
  },
  {
    "text": "with this background in mind let's see a",
    "start": "98040",
    "end": "100500"
  },
  {
    "text": "sample IAM policy",
    "start": "100500",
    "end": "103020"
  },
  {
    "start": "102000",
    "end": "102000"
  },
  {
    "text": "when this policy is applied to a user or",
    "start": "103020",
    "end": "105540"
  },
  {
    "text": "a rule it allows all dynamodb actions on",
    "start": "105540",
    "end": "108479"
  },
  {
    "text": "the table with the specified Arn name",
    "start": "108479",
    "end": "112259"
  },
  {
    "text": "you can create a policy like this in",
    "start": "112259",
    "end": "114360"
  },
  {
    "text": "seconds and allow your users to access",
    "start": "114360",
    "end": "116759"
  },
  {
    "text": "dynamodb",
    "start": "116759",
    "end": "118079"
  },
  {
    "text": "But please understand an overly",
    "start": "118079",
    "end": "120240"
  },
  {
    "text": "permissive policy like this is a",
    "start": "120240",
    "end": "122100"
  },
  {
    "text": "security threat as it allows too many",
    "start": "122100",
    "end": "124799"
  },
  {
    "text": "actions then a normal user or a role",
    "start": "124799",
    "end": "127439"
  },
  {
    "text": "might need",
    "start": "127439",
    "end": "129300"
  },
  {
    "text": "can you guess what does the action",
    "start": "129300",
    "end": "131599"
  },
  {
    "text": "dynamodb star means here or what all",
    "start": "131599",
    "end": "135599"
  },
  {
    "text": "actions are allowed with this policy",
    "start": "135599",
    "end": "139520"
  },
  {
    "text": "this policy allows 60 plus actions on a",
    "start": "139739",
    "end": "143640"
  },
  {
    "start": "142000",
    "end": "142000"
  },
  {
    "text": "given dynamodb table this includes",
    "start": "143640",
    "end": "145980"
  },
  {
    "text": "action like delete item delete backup",
    "start": "145980",
    "end": "148560"
  },
  {
    "start": "148000",
    "end": "148000"
  },
  {
    "text": "delete table replica or even delete",
    "start": "148560",
    "end": "151080"
  },
  {
    "text": "table",
    "start": "151080",
    "end": "152280"
  },
  {
    "text": "would you want to have a policy like",
    "start": "152280",
    "end": "154080"
  },
  {
    "text": "this in your production application",
    "start": "154080",
    "end": "156020"
  },
  {
    "text": "where all you needed was access to run",
    "start": "156020",
    "end": "159120"
  },
  {
    "text": "read queries on your dynamodivity table",
    "start": "159120",
    "end": "162060"
  },
  {
    "text": "definitely not",
    "start": "162060",
    "end": "163560"
  },
  {
    "text": "can we make it better absolutely yes",
    "start": "163560",
    "end": "167780"
  },
  {
    "text": "let's have a look at this optimized",
    "start": "169140",
    "end": "171660"
  },
  {
    "start": "170000",
    "end": "170000"
  },
  {
    "text": "sample policy this policy grants read",
    "start": "171660",
    "end": "174780"
  },
  {
    "text": "only permission on items in a dynamodb",
    "start": "174780",
    "end": "178019"
  },
  {
    "text": "table",
    "start": "178019",
    "end": "179160"
  },
  {
    "text": "this is achieved by explicitly including",
    "start": "179160",
    "end": "181980"
  },
  {
    "text": "the actions like dynamodb get item",
    "start": "181980",
    "end": "184280"
  },
  {
    "text": "dynamodb batch director dynamodb query",
    "start": "184280",
    "end": "187920"
  },
  {
    "text": "Etc in the action list of the policy",
    "start": "187920",
    "end": "190920"
  },
  {
    "text": "when this policy is applied to any user",
    "start": "190920",
    "end": "193739"
  },
  {
    "text": "or role they will not be able to do any",
    "start": "193739",
    "end": "197280"
  },
  {
    "text": "other dynamodb action like right item",
    "start": "197280",
    "end": "199379"
  },
  {
    "text": "delete item or delete table Etc as this",
    "start": "199379",
    "end": "202800"
  },
  {
    "text": "policy only allows the five mentioned",
    "start": "202800",
    "end": "205260"
  },
  {
    "text": "actions on the stable",
    "start": "205260",
    "end": "207180"
  },
  {
    "text": "now we are definitely in a much secure",
    "start": "207180",
    "end": "209400"
  },
  {
    "text": "State than the previous policy",
    "start": "209400",
    "end": "211800"
  },
  {
    "text": "can we optimize it further",
    "start": "211800",
    "end": "215060"
  },
  {
    "text": "following the concept of lease privilege",
    "start": "215220",
    "end": "217200"
  },
  {
    "text": "fine grain Access Control can be",
    "start": "217200",
    "end": "219300"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "implemented for dynamodb this means you",
    "start": "219300",
    "end": "222000"
  },
  {
    "text": "can have both item level and attribute",
    "start": "222000",
    "end": "224280"
  },
  {
    "text": "level Access Control using IM policies",
    "start": "224280",
    "end": "227280"
  },
  {
    "text": "item level Access Control lets you grant",
    "start": "227280",
    "end": "229799"
  },
  {
    "text": "permissions on a table but restrict",
    "start": "229799",
    "end": "232200"
  },
  {
    "text": "access to specific items in the table",
    "start": "232200",
    "end": "234299"
  },
  {
    "text": "based on certain primary key values",
    "start": "234299",
    "end": "236819"
  },
  {
    "text": "an example might be a social networking",
    "start": "236819",
    "end": "239580"
  },
  {
    "text": "app for games where all users saved game",
    "start": "239580",
    "end": "242700"
  },
  {
    "text": "data is stored in a single table but a",
    "start": "242700",
    "end": "245940"
  },
  {
    "text": "user can access only the data items that",
    "start": "245940",
    "end": "248220"
  },
  {
    "text": "they own",
    "start": "248220",
    "end": "249299"
  },
  {
    "text": "attribute level Access Control let's you",
    "start": "249299",
    "end": "252659"
  },
  {
    "text": "make only a subset of attributes visible",
    "start": "252659",
    "end": "255299"
  },
  {
    "text": "to the user an example might be an app",
    "start": "255299",
    "end": "258959"
  },
  {
    "text": "that displays flight data based on the",
    "start": "258959",
    "end": "261120"
  },
  {
    "text": "user's location",
    "start": "261120",
    "end": "262740"
  },
  {
    "text": "attributes like Airline name arrival",
    "start": "262740",
    "end": "265320"
  },
  {
    "text": "time departure time and flight numbers",
    "start": "265320",
    "end": "267240"
  },
  {
    "text": "are all displayed to all passenger",
    "start": "267240",
    "end": "269780"
  },
  {
    "text": "however attributes such as pilot names",
    "start": "269780",
    "end": "273240"
  },
  {
    "text": "or the number of passengers are hidden",
    "start": "273240",
    "end": "276300"
  },
  {
    "text": "from passengers and are shown only to",
    "start": "276300",
    "end": "278520"
  },
  {
    "text": "the airline staff users the good thing",
    "start": "278520",
    "end": "280919"
  },
  {
    "text": "is you can exercise item level and",
    "start": "280919",
    "end": "283620"
  },
  {
    "text": "attribute level controls in the same",
    "start": "283620",
    "end": "285720"
  },
  {
    "text": "policy",
    "start": "285720",
    "end": "287520"
  },
  {
    "text": "let's see some examples of fine-grained",
    "start": "287520",
    "end": "290340"
  },
  {
    "text": "Access Control using IAM policies",
    "start": "290340",
    "end": "294660"
  },
  {
    "text": "as an example consider a mobile gaming",
    "start": "294660",
    "end": "297960"
  },
  {
    "text": "app that lets players play a variety of",
    "start": "297960",
    "end": "300720"
  },
  {
    "start": "298000",
    "end": "298000"
  },
  {
    "text": "different games",
    "start": "300720",
    "end": "301979"
  },
  {
    "text": "the app uses a dynamodb table named game",
    "start": "301979",
    "end": "305040"
  },
  {
    "text": "score to keep track of high scores and",
    "start": "305040",
    "end": "307919"
  },
  {
    "text": "other users data",
    "start": "307919",
    "end": "310080"
  },
  {
    "text": "each item in the table is uniquely",
    "start": "310080",
    "end": "312300"
  },
  {
    "text": "identified by a user ID which is its",
    "start": "312300",
    "end": "315120"
  },
  {
    "text": "partition key",
    "start": "315120",
    "end": "316380"
  },
  {
    "text": "let's assume there is a requirement to",
    "start": "316380",
    "end": "318479"
  },
  {
    "text": "allow users access only their own game",
    "start": "318479",
    "end": "321180"
  },
  {
    "text": "data",
    "start": "321180",
    "end": "322740"
  },
  {
    "text": "you use the IM condition element to",
    "start": "322740",
    "end": "324960"
  },
  {
    "text": "implement a fine-grained Access Control",
    "start": "324960",
    "end": "326639"
  },
  {
    "text": "policy for such requirement",
    "start": "326639",
    "end": "328740"
  },
  {
    "text": "pay attention to dynamodb Leading keys",
    "start": "328740",
    "end": "332100"
  },
  {
    "text": "this condition key allows user to access",
    "start": "332100",
    "end": "334860"
  },
  {
    "text": "only the items where the partition key",
    "start": "334860",
    "end": "337440"
  },
  {
    "text": "value matches their user ID",
    "start": "337440",
    "end": "339900"
  },
  {
    "text": "the ID dollar",
    "start": "339900",
    "end": "342199"
  },
  {
    "text": "www.amazon.com user ID is a substitution",
    "start": "342199",
    "end": "345180"
  },
  {
    "text": "variable in web identity Federation",
    "start": "345180",
    "end": "348960"
  },
  {
    "text": "when a user logs in using a web identity",
    "start": "348960",
    "end": "351600"
  },
  {
    "text": "Federation like Amazon key will be",
    "start": "351600",
    "end": "354120"
  },
  {
    "text": "assigned an IAM role",
    "start": "354120",
    "end": "356400"
  },
  {
    "text": "that will have this security policy",
    "start": "356400",
    "end": "358560"
  },
  {
    "text": "attached to it this way we ensure a user",
    "start": "358560",
    "end": "362340"
  },
  {
    "text": "has access to its own record only and",
    "start": "362340",
    "end": "365460"
  },
  {
    "text": "can't access any other user's record",
    "start": "365460",
    "end": "369500"
  },
  {
    "text": "this permission policy allows access to",
    "start": "370440",
    "end": "373080"
  },
  {
    "start": "373000",
    "end": "373000"
  },
  {
    "text": "only two specific attributes user ID and",
    "start": "373080",
    "end": "376020"
  },
  {
    "text": "top score in a table by adding the",
    "start": "376020",
    "end": "378300"
  },
  {
    "text": "dynamolib attributes condition key",
    "start": "378300",
    "end": "381479"
  },
  {
    "text": "you might have noticed string equals if",
    "start": "381479",
    "end": "385080"
  },
  {
    "text": "exist Clause as well",
    "start": "385080",
    "end": "386940"
  },
  {
    "text": "the string equals if exist clause in the",
    "start": "386940",
    "end": "390060"
  },
  {
    "text": "permissions policy ensures if the user",
    "start": "390060",
    "end": "393000"
  },
  {
    "text": "specifies the select parameter then its",
    "start": "393000",
    "end": "395759"
  },
  {
    "text": "value must be specific attributes",
    "start": "395759",
    "end": "398340"
  },
  {
    "text": "this requirement prevents the API action",
    "start": "398340",
    "end": "400800"
  },
  {
    "text": "from returning any attributes that are",
    "start": "400800",
    "end": "403259"
  },
  {
    "text": "not allowed",
    "start": "403259",
    "end": "404580"
  },
  {
    "text": "if the user specifies the return value",
    "start": "404580",
    "end": "406860"
  },
  {
    "text": "parameter then its value must be none",
    "start": "406860",
    "end": "409580"
  },
  {
    "text": "updated old or updated new",
    "start": "409580",
    "end": "412800"
  },
  {
    "text": "this is required because the update item",
    "start": "412800",
    "end": "416039"
  },
  {
    "text": "action also performs implicit read",
    "start": "416039",
    "end": "418080"
  },
  {
    "text": "operation to check whether an item",
    "start": "418080",
    "end": "420360"
  },
  {
    "text": "exists before replacing it and so that",
    "start": "420360",
    "end": "423060"
  },
  {
    "text": "previous attribute values can be",
    "start": "423060",
    "end": "424800"
  },
  {
    "text": "returned if requested",
    "start": "424800",
    "end": "427080"
  },
  {
    "text": "restricting return values in this way",
    "start": "427080",
    "end": "429479"
  },
  {
    "text": "ensures that users can only read or",
    "start": "429479",
    "end": "432120"
  },
  {
    "text": "write the allowed attributes",
    "start": "432120",
    "end": "435620"
  },
  {
    "text": "earlier example allowed access to only",
    "start": "435660",
    "end": "438479"
  },
  {
    "text": "two specific attributes if you are",
    "start": "438479",
    "end": "440940"
  },
  {
    "text": "wondering if it is possible to",
    "start": "440940",
    "end": "443280"
  },
  {
    "start": "441000",
    "end": "441000"
  },
  {
    "text": "explicitly deny access to specific",
    "start": "443280",
    "end": "445139"
  },
  {
    "text": "attributes then the answer is yes",
    "start": "445139",
    "end": "448199"
  },
  {
    "text": "this permission policy limits user",
    "start": "448199",
    "end": "451139"
  },
  {
    "text": "access to updating only the specific",
    "start": "451139",
    "end": "453780"
  },
  {
    "text": "attributes identified by dynamodb",
    "start": "453780",
    "end": "456120"
  },
  {
    "text": "attributes condition key",
    "start": "456120",
    "end": "458759"
  },
  {
    "text": "the string not like condition prevents",
    "start": "458759",
    "end": "461280"
  },
  {
    "text": "an application from updating the",
    "start": "461280",
    "end": "462960"
  },
  {
    "text": "attribute specified using the dynamodb",
    "start": "462960",
    "end": "464880"
  },
  {
    "text": "attributes condition",
    "start": "464880",
    "end": "467720"
  },
  {
    "text": "we can extend this functionality even on",
    "start": "469560",
    "end": "472500"
  },
  {
    "text": "GSI attributes",
    "start": "472500",
    "end": "474419"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "this permission policy allows a query to",
    "start": "474419",
    "end": "477660"
  },
  {
    "text": "only read five attributes top score date",
    "start": "477660",
    "end": "480419"
  },
  {
    "text": "time game title wins losses and attempts",
    "start": "480419",
    "end": "484139"
  },
  {
    "text": "on a secondary index",
    "start": "484139",
    "end": "486240"
  },
  {
    "text": "this is achieved by using the dynamodb",
    "start": "486240",
    "end": "489599"
  },
  {
    "text": "attributes condition key",
    "start": "489599",
    "end": "492120"
  },
  {
    "text": "the policy also limits queries to",
    "start": "492120",
    "end": "494880"
  },
  {
    "text": "requesting only specific attributes that",
    "start": "494880",
    "end": "497699"
  },
  {
    "text": "have been projected in the index",
    "start": "497699",
    "end": "500039"
  },
  {
    "text": "to require the application to specify a",
    "start": "500039",
    "end": "502680"
  },
  {
    "text": "list of attributes in the query the",
    "start": "502680",
    "end": "504780"
  },
  {
    "text": "policy also specifies dynodb select",
    "start": "504780",
    "end": "507240"
  },
  {
    "text": "condition key to require that the select",
    "start": "507240",
    "end": "509940"
  },
  {
    "text": "parameter of the dynamod V query action",
    "start": "509940",
    "end": "512339"
  },
  {
    "text": "is specific attributes",
    "start": "512339",
    "end": "515159"
  },
  {
    "text": "this is a comprehensive example of a",
    "start": "515159",
    "end": "517919"
  },
  {
    "text": "policy that shows how condition elements",
    "start": "517919",
    "end": "521459"
  },
  {
    "start": "521000",
    "end": "521000"
  },
  {
    "text": "can be used to define the fine-grained",
    "start": "521459",
    "end": "523860"
  },
  {
    "text": "access at item level and attribute level",
    "start": "523860",
    "end": "526260"
  },
  {
    "text": "for both the table and GSI",
    "start": "526260",
    "end": "528660"
  },
  {
    "text": "this permissions policy allows specific",
    "start": "528660",
    "end": "531120"
  },
  {
    "text": "dynodb action that are specified in the",
    "start": "531120",
    "end": "533459"
  },
  {
    "text": "action element of a table and the table",
    "start": "533459",
    "end": "535620"
  },
  {
    "text": "index in the resource element",
    "start": "535620",
    "end": "538200"
  },
  {
    "text": "the policy uses the dynodev leading Keys",
    "start": "538200",
    "end": "540839"
  },
  {
    "text": "condition to restrict permissions to",
    "start": "540839",
    "end": "542940"
  },
  {
    "text": "only the items whose partition key value",
    "start": "542940",
    "end": "545399"
  },
  {
    "text": "matches the user's Facebook ID",
    "start": "545399",
    "end": "547800"
  },
  {
    "text": "the user can only access attribute a and",
    "start": "547800",
    "end": "551459"
  },
  {
    "text": "attribute B",
    "start": "551459",
    "end": "554180"
  },
  {
    "text": "to learn more about intd and access",
    "start": "554940",
    "end": "556920"
  },
  {
    "text": "management for Amazon dynodb you can",
    "start": "556920",
    "end": "559260"
  },
  {
    "text": "refer to our documentation it explains",
    "start": "559260",
    "end": "562140"
  },
  {
    "start": "561000",
    "end": "561000"
  },
  {
    "text": "in detail how you can authenticate with",
    "start": "562140",
    "end": "564899"
  },
  {
    "text": "various identities like web identity",
    "start": "564899",
    "end": "566940"
  },
  {
    "text": "Federation using Google Amazon and",
    "start": "566940",
    "end": "569040"
  },
  {
    "text": "Facebook Implement fine-grained Access",
    "start": "569040",
    "end": "571500"
  },
  {
    "text": "Control policies using IM conditions",
    "start": "571500",
    "end": "573899"
  },
  {
    "text": "please scan the QR code on your screen",
    "start": "573899",
    "end": "575940"
  },
  {
    "text": "to access the same",
    "start": "575940",
    "end": "579019"
  },
  {
    "text": "to learn more about dynamodb security",
    "start": "579060",
    "end": "581220"
  },
  {
    "start": "581000",
    "end": "581000"
  },
  {
    "text": "please watch my video on YouTube for",
    "start": "581220",
    "end": "584820"
  },
  {
    "text": "security pillar of well architect lens",
    "start": "584820",
    "end": "587100"
  },
  {
    "text": "for dynamodb",
    "start": "587100",
    "end": "589500"
  },
  {
    "text": "in this video I have discussed what",
    "start": "589500",
    "end": "592080"
  },
  {
    "text": "options are available to help you store",
    "start": "592080",
    "end": "594420"
  },
  {
    "text": "your data securely in dynamodb while",
    "start": "594420",
    "end": "597060"
  },
  {
    "text": "maintaining confidentiality and",
    "start": "597060",
    "end": "599399"
  },
  {
    "text": "integrity",
    "start": "599399",
    "end": "601880"
  },
  {
    "text": "to summarize dynodb supports",
    "start": "604740",
    "end": "607380"
  },
  {
    "text": "fine-grained Access Control using IAM",
    "start": "607380",
    "end": "609600"
  },
  {
    "text": "policy conditions you should always look",
    "start": "609600",
    "end": "612540"
  },
  {
    "text": "at your business requirements and allow",
    "start": "612540",
    "end": "615300"
  },
  {
    "text": "only required actions at table level",
    "start": "615300",
    "end": "618180"
  },
  {
    "text": "you should also Implement item level",
    "start": "618180",
    "end": "620580"
  },
  {
    "text": "access to make sure a user can access",
    "start": "620580",
    "end": "623339"
  },
  {
    "text": "its own data to make it more secure you",
    "start": "623339",
    "end": "625680"
  },
  {
    "text": "can Implement attribute level access or",
    "start": "625680",
    "end": "627959"
  },
  {
    "text": "deny list",
    "start": "627959",
    "end": "629339"
  },
  {
    "text": "also don't forget you can also make your",
    "start": "629339",
    "end": "632040"
  },
  {
    "text": "GSI secure using the same IM policy",
    "start": "632040",
    "end": "635220"
  },
  {
    "text": "I hope you found the session useful and",
    "start": "635220",
    "end": "637800"
  },
  {
    "text": "will Implement these learnings in your",
    "start": "637800",
    "end": "639720"
  },
  {
    "text": "applications",
    "start": "639720",
    "end": "640740"
  },
  {
    "text": "do check out the other videos in this",
    "start": "640740",
    "end": "642959"
  },
  {
    "text": "playlist to learn more about dynamodb",
    "start": "642959",
    "end": "645420"
  },
  {
    "text": "thank you",
    "start": "645420",
    "end": "648440"
  }
]