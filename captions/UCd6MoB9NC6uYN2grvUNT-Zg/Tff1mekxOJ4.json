[
  {
    "start": "0",
    "end": "167000"
  },
  {
    "text": "hi everybody welcome to reinvent welcome to creating your virtual data center in",
    "start": "0",
    "end": "6420"
  },
  {
    "text": "the cloud my name is Gina Morris I'm an engineering manager I work on an ec2",
    "start": "6420",
    "end": "11670"
  },
  {
    "text": "networking and I have been building features for you since 2010 on AWS so no",
    "start": "11670",
    "end": "21060"
  },
  {
    "text": "matter what you do in AWS there are two things that are going to be in the background of everything you do the one",
    "start": "21060",
    "end": "29429"
  },
  {
    "text": "is identity and access management so it's a good idea to go out and learn a little bit about that the second thing",
    "start": "29429",
    "end": "37200"
  },
  {
    "text": "is VPC virtual private cloud it's how you do networking in AWS so what does it",
    "start": "37200",
    "end": "47430"
  },
  {
    "text": "mean what is virtual private cloud well it's virtual it's your virtual network",
    "start": "47430",
    "end": "52710"
  },
  {
    "text": "your virtual infrastructure is running in a virtual network peers for private",
    "start": "52710",
    "end": "58859"
  },
  {
    "text": "it's private it's entirely under your control so you get to choose how it",
    "start": "58859",
    "end": "64110"
  },
  {
    "text": "looks you get to control what can and can't talk to what and then see it's",
    "start": "64110",
    "end": "69150"
  },
  {
    "text": "your cloud it's in the cloud it's your cloud it's your virtual private cloud so",
    "start": "69150",
    "end": "75830"
  },
  {
    "text": "show of hands who here is a networking expert yeah there we go be brave there",
    "start": "75830",
    "end": "83880"
  },
  {
    "text": "we go so you guys are going to see a lot of stuff that's familiar a lot of concepts that you're going to recognize",
    "start": "83880",
    "end": "90020"
  },
  {
    "text": "but in pretty much every case you're going to find that it's more flexible you get better visibility and it",
    "start": "90020",
    "end": "97140"
  },
  {
    "text": "requires significantly less maintenance than what you're used to everyone else",
    "start": "97140",
    "end": "102960"
  },
  {
    "text": "who isn't a networking expert maybe you don't want to become a networking expert you want to use your time to get really",
    "start": "102960",
    "end": "110640"
  },
  {
    "text": "deep in other areas you want to work on building applications to deliver value to your customers you don't want to",
    "start": "110640",
    "end": "117090"
  },
  {
    "text": "worry about the network and I've got good news for you VPC is easy to use",
    "start": "117090",
    "end": "122310"
  },
  {
    "text": "you're going to be able to get up get set and get going while and being secure",
    "start": "122310",
    "end": "128060"
  },
  {
    "text": "pretty quickly in fact I think in about the first 2025",
    "start": "128060",
    "end": "133380"
  },
  {
    "text": "it's of this talk I'll give you everything you need to know to get started now there are a lot of you here",
    "start": "133380",
    "end": "141300"
  },
  {
    "text": "this is an introductory level session 200 is the lowest this is 201 it's an",
    "start": "141300",
    "end": "148320"
  },
  {
    "text": "intro session so if you are already an expert and VPC you're pretty familiar",
    "start": "148320",
    "end": "153900"
  },
  {
    "text": "with how things work this may not be the session for you so letting you know ahead of time what to expect those of",
    "start": "153900",
    "end": "161340"
  },
  {
    "text": "you who really want to learn about VPC you've come to the right place I got the",
    "start": "161340",
    "end": "168480"
  },
  {
    "text": "second part which is using the clicker correct okay this is an ec2 instance",
    "start": "168480",
    "end": "173850"
  },
  {
    "text": "it's a virtual server and it's running an AWS and the e is for elastic you want",
    "start": "173850",
    "end": "182280"
  },
  {
    "text": "to scale this up you want to scale down you want more of them you want less of them so you're gonna have a lot of change you're gonna have this dynamic",
    "start": "182280",
    "end": "188700"
  },
  {
    "text": "set of servers and it's running in our network it's running in the AWS network",
    "start": "188700",
    "end": "196550"
  },
  {
    "text": "but because it's your infrastructure we're gonna let you run it in your",
    "start": "196550",
    "end": "202590"
  },
  {
    "text": "network your virtual private cloud and you have control so you're gonna pick",
    "start": "202590",
    "end": "209820"
  },
  {
    "text": "the IP ranges you're gonna pick specific IPS or specific things you're going to",
    "start": "209820",
    "end": "215490"
  },
  {
    "text": "divide this network up into sub networks and we'll talk a little bit about how",
    "start": "215490",
    "end": "220650"
  },
  {
    "text": "you use these sub networks for higher availability and you can also choose",
    "start": "220650",
    "end": "227250"
  },
  {
    "text": "what parts of your network or your whole network what connectivity you give that",
    "start": "227250",
    "end": "232650"
  },
  {
    "text": "network so what are we doing today what's the agenda so firstly we're gonna",
    "start": "232650",
    "end": "241410"
  },
  {
    "start": "234000",
    "end": "285000"
  },
  {
    "text": "get you familiar with the basic anatomy of a V PC what are the pieces how do they do how do they work what are they",
    "start": "241410",
    "end": "248040"
  },
  {
    "text": "for secondly I'll walk you through a basic example and the simplest example is an",
    "start": "248040",
    "end": "255600"
  },
  {
    "text": "internet-connected V PC because that's gonna pretty much solve most of your initial use cases and that's going to be",
    "start": "255600",
    "end": "264660"
  },
  {
    "text": "the first half of the the second half of the talk we're going to focus on different connectivity",
    "start": "264660",
    "end": "270210"
  },
  {
    "text": "options other than just Internet access for everyone we'll also take a look at",
    "start": "270210",
    "end": "276840"
  },
  {
    "text": "different AWS services and how they interact with your V PC so more than",
    "start": "276840",
    "end": "282930"
  },
  {
    "text": "just ec2 so the simplest V PC I said is",
    "start": "282930",
    "end": "288300"
  },
  {
    "start": "285000",
    "end": "321000"
  },
  {
    "text": "an internet-connected v PCL V PC with internet access and many of you in your",
    "start": "288300",
    "end": "294479"
  },
  {
    "text": "AWS accounts will already have a V PC just like this it's called your default",
    "start": "294479",
    "end": "300750"
  },
  {
    "text": "V PC and if it suits your needs and that's all you need you are welcome to",
    "start": "300750",
    "end": "306270"
  },
  {
    "text": "use it that's totally fine but it still believes you to understand how V PC",
    "start": "306270",
    "end": "311880"
  },
  {
    "text": "works so that you can make changes or you can you know do different things later and you can make sure that you're",
    "start": "311880",
    "end": "317940"
  },
  {
    "text": "not gonna run into any issues later on so let's get started what do we what are",
    "start": "317940",
    "end": "323819"
  },
  {
    "start": "321000",
    "end": "360000"
  },
  {
    "text": "we going to have to do to create this V PC first thing we're gonna choose an IP",
    "start": "323819",
    "end": "329250"
  },
  {
    "text": "address range right we control it we pick it next thing we'll divide our",
    "start": "329250",
    "end": "335400"
  },
  {
    "text": "network into sub networks or subnets and I'll talk about how you use these to build higher availability applications",
    "start": "335400",
    "end": "342469"
  },
  {
    "text": "we're gonna add routing so that our network is reachable from the Internet",
    "start": "342469",
    "end": "348060"
  },
  {
    "text": "and once it's reachable from the internet we're gonna talk about how do",
    "start": "348060",
    "end": "354029"
  },
  {
    "text": "we make it only accessible to the traffic that we actually wanted to be accessible to so choosing an IP address",
    "start": "354029",
    "end": "362580"
  },
  {
    "start": "360000",
    "end": "432000"
  },
  {
    "text": "range this is my network I get to pick it it's a private network so I want to pick a private range of IP addresses",
    "start": "362580",
    "end": "370699"
  },
  {
    "text": "some of you are going to recognize this so I'll go through it pretty quickly we use this notation a lot in V PC and I'm",
    "start": "370699",
    "end": "378539"
  },
  {
    "text": "going to be using it in this talk this is cider notation that's classless",
    "start": "378539",
    "end": "383639"
  },
  {
    "text": "inter-domain routing and it's an ipv4 address followed by a slash followed by",
    "start": "383639",
    "end": "390960"
  },
  {
    "text": "a number and the way it works is you write the ipv4 address out in binary so",
    "start": "390960",
    "end": "397080"
  },
  {
    "text": "you get a 32-bit number and then the slash sixteen means you hold the high 16-bit steady and the low",
    "start": "397080",
    "end": "405060"
  },
  {
    "text": "16-bit can vary so this gives us the IP range 1 7 2 dot 3 1 dot something dot",
    "start": "405060",
    "end": "412950"
  },
  {
    "text": "something all of those IPs are in this IP range now this was an ipv4 example",
    "start": "412950",
    "end": "420120"
  },
  {
    "text": "I'm gonna use a lot of ipv4 examples in this session VPC does support ipv6 and",
    "start": "420120",
    "end": "426510"
  },
  {
    "text": "there is a session later today that focuses specifically on ipv6 so this is",
    "start": "426510",
    "end": "434520"
  },
  {
    "start": "432000",
    "end": "524000"
  },
  {
    "text": "the range I'm choosing 1:7 2.3 1 dot something dot something so the question",
    "start": "434520",
    "end": "439680"
  },
  {
    "text": "is why it's the first thing you want to think about is following convention RFC",
    "start": "439680",
    "end": "446910"
  },
  {
    "text": "1918 is an RFC for private networks so to make it easier when other people have",
    "start": "446910",
    "end": "453180"
  },
  {
    "text": "a look at my IP addresses they understand what they are I'm gonna follow a convention the second thing",
    "start": "453180",
    "end": "460050"
  },
  {
    "text": "we've done is pick a slash 16 it's big it gives us over 65,000 IP addresses to",
    "start": "460050",
    "end": "467040"
  },
  {
    "text": "use now you may not really need that much space on day one that's totally",
    "start": "467040",
    "end": "473310"
  },
  {
    "text": "fine it doesn't cost you anything and it gives you so much room to grow to move",
    "start": "473310",
    "end": "478920"
  },
  {
    "text": "things around so you might as well just go with a slash 16 now one other thing",
    "start": "478920",
    "end": "485280"
  },
  {
    "text": "to bear in mind is do you have other networks that you may want to connect",
    "start": "485280",
    "end": "491220"
  },
  {
    "text": "your VPC to do you have an unprecedented do you have other VP C's either in York",
    "start": "491220",
    "end": "498750"
  },
  {
    "text": "or your account or another account take a look at what those IP ranges are and",
    "start": "498750",
    "end": "504960"
  },
  {
    "text": "try and pick a range that doesn't overlap because that'll prevent conflicts later on and if you're not",
    "start": "504960",
    "end": "512820"
  },
  {
    "text": "sure you can start with a smaller IP range because you can come back later and add additional non contiguous IP",
    "start": "512820",
    "end": "520979"
  },
  {
    "text": "ranges to your V PC right so we've got",
    "start": "520979",
    "end": "526020"
  },
  {
    "start": "524000",
    "end": "628000"
  },
  {
    "text": "IPs let's talk about subnets subnetworks they're basically a sub",
    "start": "526020",
    "end": "531550"
  },
  {
    "text": "range of that IP address space that we made for the V PC and they are how you",
    "start": "531550",
    "end": "537460"
  },
  {
    "text": "use V PC to deploy high availability applications so AWS has 16 regions and",
    "start": "537460",
    "end": "546060"
  },
  {
    "text": "AV PC is within a region right so in this example I'm going to use our Dublin",
    "start": "546060",
    "end": "552340"
  },
  {
    "text": "region EU West one and an availability zone is - I mean a region is divided",
    "start": "552340",
    "end": "560050"
  },
  {
    "text": "into availability zones so we've got a u.s. 1a 1b and 1c an availability zone",
    "start": "560050",
    "end": "569200"
  },
  {
    "text": "for those who don't know is kind of like a data center it's got redundant power",
    "start": "569200",
    "end": "575460"
  },
  {
    "text": "redundant networking it's designed to have completely separate failure",
    "start": "575460",
    "end": "581020"
  },
  {
    "text": "characteristics from any other availability zone so you can see how you",
    "start": "581020",
    "end": "586120"
  },
  {
    "text": "would want to build your applications across multiple availability zones so",
    "start": "586120",
    "end": "592120"
  },
  {
    "text": "when you create a subnet a subnet is within an availability zone and you need",
    "start": "592120",
    "end": "598390"
  },
  {
    "text": "subnets because when you run an instance when you create certain AWS resources you're going to be specifying the subnet",
    "start": "598390",
    "end": "605980"
  },
  {
    "text": "that you want those resources to be in so having subnets is how you get your resources into a",
    "start": "605980",
    "end": "612640"
  },
  {
    "text": "specific availability zone so we pick ranges just like we did for the VP c-17",
    "start": "612640",
    "end": "619780"
  },
  {
    "text": "2.31 dot 0 dot something 172 3 1.1 dot something same thing for us 1c",
    "start": "619780",
    "end": "628380"
  },
  {
    "start": "628000",
    "end": "673000"
  },
  {
    "text": "so to recap subnets V PC sizing / 16 a",
    "start": "628380",
    "end": "634390"
  },
  {
    "text": "really nice big V PC for your subnets we",
    "start": "634390",
    "end": "639670"
  },
  {
    "text": "recommend a / 20 for those of you who are good at math we'll be saying a has an error on the slide it should be 256",
    "start": "639670",
    "end": "647320"
  },
  {
    "text": "it actually should be 251 because we reserved 5 IPS and then we also",
    "start": "647320",
    "end": "653650"
  },
  {
    "text": "recommend that you create a subnet in each and every availability zone",
    "start": "653650",
    "end": "659030"
  },
  {
    "text": "so that you can launch instances into every availability zone now you can add",
    "start": "659030",
    "end": "664640"
  },
  {
    "text": "and remove subnets you can have more than one don't worry too much about it remember we've got the slash 16 so we",
    "start": "664640",
    "end": "670910"
  },
  {
    "text": "have a little light subspace right so it kind of brings us to the point of a",
    "start": "670910",
    "end": "677180"
  },
  {
    "start": "673000",
    "end": "720000"
  },
  {
    "text": "network which is sending traffic routing so how do we send traffic to the",
    "start": "677180",
    "end": "684530"
  },
  {
    "text": "internet so routing in your V PC is done with wrap tables and route tables are a",
    "start": "684530",
    "end": "692150"
  },
  {
    "text": "simple easy to read list of rules that say traffic destined for this",
    "start": "692150",
    "end": "697730"
  },
  {
    "text": "destination should be sent to this gateway when you create a V PC you get a",
    "start": "697730",
    "end": "705290"
  },
  {
    "text": "default route table and that applies to everything inside of your V PC but you",
    "start": "705290",
    "end": "711860"
  },
  {
    "text": "can override routing on a subnet by subnet basis and we'll go into that in a",
    "start": "711860",
    "end": "717260"
  },
  {
    "text": "bit more detail shortly so this is a look at the console route tables here is",
    "start": "717260",
    "end": "725210"
  },
  {
    "start": "720000",
    "end": "819000"
  },
  {
    "text": "the rule so the default the rule that's created by default in every every route",
    "start": "725210",
    "end": "730730"
  },
  {
    "text": "table says traffic destined for the IP address range of this V PC should be",
    "start": "730730",
    "end": "737960"
  },
  {
    "text": "routed local it should stay within the V PC and if it's routed in if it's if",
    "start": "737960",
    "end": "745760"
  },
  {
    "text": "you're trying to send traffic anywhere else there's no rule so it's gonna go",
    "start": "745760",
    "end": "751430"
  },
  {
    "text": "nowhere the traffic will get dropped and sometimes that's what you want but not",
    "start": "751430",
    "end": "756530"
  },
  {
    "text": "in this case in this case we actually want to send traffic to the internet so to send traffic to the internet you",
    "start": "756530",
    "end": "763580"
  },
  {
    "text": "create an Internet gateway and you attach this to your V PC and it's pretty",
    "start": "763580",
    "end": "770810"
  },
  {
    "text": "simple it's a gateway that sends traffic to the Internet so we go back to our",
    "start": "770810",
    "end": "777620"
  },
  {
    "text": "route table and we add a route and the route says everything that matches 0.0",
    "start": "777620",
    "end": "783890"
  },
  {
    "text": "0.0 0.0 tation for match everything it's",
    "start": "783890",
    "end": "789770"
  },
  {
    "text": "a default route everything that matches that should be sent to the Internet gateway to the",
    "start": "789770",
    "end": "796160"
  },
  {
    "text": "Internet now the order doesn't matter of the rules it's doing most specific route",
    "start": "796160",
    "end": "802550"
  },
  {
    "text": "so you don't need to worry about that the other thing to think about here is I",
    "start": "802550",
    "end": "808700"
  },
  {
    "text": "know it says internet gateway it's not a single point of failure this is an",
    "start": "808700",
    "end": "815030"
  },
  {
    "text": "abstraction backed by something highly available so now we're sending traffic",
    "start": "815030",
    "end": "821450"
  },
  {
    "start": "819000",
    "end": "902000"
  },
  {
    "text": "to the Internet but we don't really want to get traffic from just anywhere right",
    "start": "821450",
    "end": "829210"
  },
  {
    "text": "so that brings us to network security and EWS VPC has some pretty powerful yet",
    "start": "829210",
    "end": "838190"
  },
  {
    "text": "simple tools that allow you to do network security and and this is the",
    "start": "838190",
    "end": "843590"
  },
  {
    "text": "kind of thing that you would in a traditional data center do with firewalls so here's an example we've got",
    "start": "843590",
    "end": "851270"
  },
  {
    "text": "some web servers and our web servers accept requests from the internet and in",
    "start": "851270",
    "end": "858440"
  },
  {
    "text": "the course of handling one of these requests they turn around and they make a request to some back-end servers right",
    "start": "858440",
    "end": "866090"
  },
  {
    "text": "so we've got our yellow web servers and our blue back-end servers and they share",
    "start": "866090",
    "end": "871190"
  },
  {
    "text": "each group of instances shares a common use a common purpose so different rules",
    "start": "871190",
    "end": "876470"
  },
  {
    "text": "apply to them they're in different groups different security groups so we",
    "start": "876470",
    "end": "882770"
  },
  {
    "text": "can create these security groups put the appropriate instances in them and we can say allow web traffic from everywhere to",
    "start": "882770",
    "end": "891380"
  },
  {
    "text": "my web servers but for my backends only",
    "start": "891380",
    "end": "896480"
  },
  {
    "text": "allow traffic from my web servers from instances in my web service group this",
    "start": "896480",
    "end": "903650"
  },
  {
    "start": "902000",
    "end": "1045000"
  },
  {
    "text": "is how this looks in the ec2 console you create a security group and your",
    "start": "903650",
    "end": "911300"
  },
  {
    "text": "security group has a rule that says allow all HTTP traffic right so you",
    "start": "911300",
    "end": "917030"
  },
  {
    "text": "control the protocol you control the port and you control the source from everywhere you'll also see here I've got an IP",
    "start": "917030",
    "end": "925070"
  },
  {
    "text": "six example just to show you that it works exactly the same it's pretty simple second thing I wanted to call out",
    "start": "925070",
    "end": "933440"
  },
  {
    "text": "because this is new since last year is that you can add a rule on each you can",
    "start": "933440",
    "end": "939800"
  },
  {
    "text": "add a description on each and every rule which makes it so much simpler when",
    "start": "939800",
    "end": "945050"
  },
  {
    "text": "you're maintaining these groups when multiple people are looking at them when you want to remember why did I create",
    "start": "945050",
    "end": "950930"
  },
  {
    "text": "this what you know what does it do so let's look at the back ends these are",
    "start": "950930",
    "end": "959270"
  },
  {
    "text": "a little bit more interesting because they're not just allowing everything so in this case you'll notice that the",
    "start": "959270",
    "end": "966050"
  },
  {
    "text": "source is not a range of ips it's another security group this is so",
    "start": "966050",
    "end": "972830"
  },
  {
    "text": "flexible you're basically saying allow traffic on port 2 3 4 5 from any",
    "start": "972830",
    "end": "979790"
  },
  {
    "text": "instance in this other security group in the web servers security good that is a",
    "start": "979790",
    "end": "986330"
  },
  {
    "text": "zero maintenance way of keeping the the principle of least privilege of keeping",
    "start": "986330",
    "end": "992030"
  },
  {
    "text": "all of these things up-to-date without you having to do anything you can add",
    "start": "992030",
    "end": "998000"
  },
  {
    "text": "and remove IPs right because in a traditional data center you would have to go in and change the config time you",
    "start": "998000",
    "end": "1004270"
  },
  {
    "text": "created a new server you remove a server you got to go in change the configure the things are only talking to the right",
    "start": "1004270",
    "end": "1010720"
  },
  {
    "text": "thing carrot just works it just works automatically and an ec2 we want you to be elastic so this is super super",
    "start": "1010720",
    "end": "1017650"
  },
  {
    "text": "powerful so security groups follow the",
    "start": "1017650",
    "end": "1022780"
  },
  {
    "text": "principle of least privilege only allow things to talk to things that they should be able to talk to and don't",
    "start": "1022780",
    "end": "1029920"
  },
  {
    "text": "allow anything else both of those examples were for ingress rules incoming",
    "start": "1029920",
    "end": "1036040"
  },
  {
    "text": "traffic you can create rules for outgoing traffic as well but by default they just allow all outgoing traffic",
    "start": "1036040",
    "end": "1045270"
  },
  {
    "text": "right so remember at the beginning I said that I would give you everything",
    "start": "1045329",
    "end": "1050800"
  },
  {
    "text": "you need to create a V PC get productive and secure in hey see - this is the point",
    "start": "1050800",
    "end": "1058450"
  },
  {
    "text": "basically this is everything you really really need to know this is the basics",
    "start": "1058450",
    "end": "1063490"
  },
  {
    "text": "and you can now be productive and secure very important so we got this Internet",
    "start": "1063490",
    "end": "1071350"
  },
  {
    "text": "connected V PC so what other options are there for connectivity so the first one",
    "start": "1071350",
    "end": "1080230"
  },
  {
    "start": "1077000",
    "end": "1122000"
  },
  {
    "text": "is restricting internet access maybe you don't want your entire V PC to be",
    "start": "1080230",
    "end": "1086020"
  },
  {
    "text": "accessible from the internet the second is if you have an architecture that has",
    "start": "1086020",
    "end": "1091900"
  },
  {
    "text": "multiple V pcs either in your own account or maybe you have multiple",
    "start": "1091900",
    "end": "1097750"
  },
  {
    "text": "accounts each with a V PC and you want to pair those together we'll talk about V PC peering which allows you to achieve",
    "start": "1097750",
    "end": "1104710"
  },
  {
    "text": "that and then last but definitely not least if you are migrating to AWS or you",
    "start": "1104710",
    "end": "1113350"
  },
  {
    "text": "want to run a hybrid infrastructure there are a couple of ways of connecting your V PC to your on-premise data center",
    "start": "1113350",
    "end": "1122640"
  },
  {
    "start": "1122000",
    "end": "1228000"
  },
  {
    "text": "so restricting access we spoke about how the default route table applied to the",
    "start": "1122640",
    "end": "1129309"
  },
  {
    "text": "entire V PC you can also route by subnet so let's have a look at our webserver",
    "start": "1129309",
    "end": "1136059"
  },
  {
    "text": "example this doesn't replace security groups you still want to use the",
    "start": "1136059",
    "end": "1141190"
  },
  {
    "text": "security groups you created I'm not putting them in the diagram just kind of simplify things but remember we have our",
    "start": "1141190",
    "end": "1147909"
  },
  {
    "text": "yellow web servers they're getting traffic from the internet when our blue back ends they're only getting traffic from our web servers so you can put each",
    "start": "1147909",
    "end": "1158350"
  },
  {
    "text": "group into their own subnet because the subnet is the unit that we're doing",
    "start": "1158350",
    "end": "1163360"
  },
  {
    "text": "routing on and we can say the web servers have a route table that has a",
    "start": "1163360",
    "end": "1168970"
  },
  {
    "text": "route to an Internet gateway but the backend servers don't they can't route",
    "start": "1168970",
    "end": "1176500"
  },
  {
    "text": "to the Internet and one reason you might want to do this is if you have any kind",
    "start": "1176500",
    "end": "1183039"
  },
  {
    "text": "of compliance or auditing requirements that do to show that your servers are not",
    "start": "1183039",
    "end": "1188760"
  },
  {
    "text": "routable from the internet this is one way the other reason people do this is",
    "start": "1188760",
    "end": "1194789"
  },
  {
    "text": "just to take a real belt-and-suspenders approach to security having security groups and just not allowing anything",
    "start": "1194789",
    "end": "1201510"
  },
  {
    "text": "through that shouldn't come through in our documentation and in the rest of",
    "start": "1201510",
    "end": "1207330"
  },
  {
    "text": "this presentation I'm going to refer to a subnet that has a route to the internet or to an Internet gateway as a",
    "start": "1207330",
    "end": "1214190"
  },
  {
    "text": "public subnet I remember this because you need a public IP to talk to the",
    "start": "1214190",
    "end": "1219929"
  },
  {
    "text": "Internet sort of public subnet and then one that has no route to the internet gateway is a private subnet so let's",
    "start": "1219929",
    "end": "1229230"
  },
  {
    "text": "look at another example here so if you have a private subnet you've got some very important stuff it's running in a",
    "start": "1229230",
    "end": "1236730"
  },
  {
    "text": "private subnet and you need to maybe reach out from those instances to a",
    "start": "1236730",
    "end": "1243149"
  },
  {
    "text": "young repo to get updated software you",
    "start": "1243149",
    "end": "1248850"
  },
  {
    "text": "can't do that you have no route to the Internet and what you usually do is in",
    "start": "1248850",
    "end": "1255899"
  },
  {
    "text": "this case is your dues network address translation so you could run an instance in the public subnet let's click on one",
    "start": "1255899",
    "end": "1262440"
  },
  {
    "text": "you could run an instance in the public subnet and basically proxy traffic",
    "start": "1262440",
    "end": "1268110"
  },
  {
    "text": "through that network address translation it takes the private IP that you were",
    "start": "1268110",
    "end": "1273840"
  },
  {
    "text": "coming from write your source is a private IP and it rewrites it to a public IP sends it to the Internet and",
    "start": "1273840",
    "end": "1279419"
  },
  {
    "text": "when the response comes sends it back that's fine you can do that",
    "start": "1279419",
    "end": "1284610"
  },
  {
    "text": "we even provide amis so that you can go and and launch a NAT instance pretty",
    "start": "1284610",
    "end": "1291419"
  },
  {
    "text": "easily but it's much easier if you use a NAT and Gateway and that gateway is a",
    "start": "1291419",
    "end": "1298380"
  },
  {
    "text": "gateway that you send traffic to when you want that traffic to be NAT it to",
    "start": "1298380",
    "end": "1303570"
  },
  {
    "text": "have network address translation so you create this an ec2 in the console using",
    "start": "1303570",
    "end": "1308700"
  },
  {
    "text": "the api's you specify an elastic IP address that's a public IP that you",
    "start": "1308700",
    "end": "1314520"
  },
  {
    "text": "control and then all traffic coming from your private subnet that you wrote to",
    "start": "1314520",
    "end": "1320980"
  },
  {
    "text": "that that gateway is going to appear on the internet as if it were coming from that public IP and it works exactly like",
    "start": "1320980",
    "end": "1329440"
  },
  {
    "text": "the Internet gateway in terms of routing in your route table you add a rule that says everything destined for the",
    "start": "1329440",
    "end": "1336549"
  },
  {
    "text": "internet everything destined for everywhere send to the nat gateway and it just works and again this is not a",
    "start": "1336549",
    "end": "1344799"
  },
  {
    "text": "single point of failure this is something highly available and it's a virtual device for your purposes so this",
    "start": "1344799",
    "end": "1354580"
  },
  {
    "text": "last example on this topic is using both security groups and subnets we've got",
    "start": "1354580",
    "end": "1361570"
  },
  {
    "text": "our private subnet we've got a bunch of instances there we've got a public subnet nothing really important runs",
    "start": "1361570",
    "end": "1368080"
  },
  {
    "text": "there we really really want to isolate stuff but we want to SSH in we want to",
    "start": "1368080",
    "end": "1374710"
  },
  {
    "text": "be able to SSH in and troubleshoot and see what's going on but we can't get there because we have no route to the",
    "start": "1374710",
    "end": "1382029"
  },
  {
    "text": "internet so what we can do is we can create an instance that's an SSH Bastion",
    "start": "1382029",
    "end": "1388600"
  },
  {
    "text": "that's kind of like a proxy for your SSH connections and this SSH Bastion is",
    "start": "1388600",
    "end": "1395460"
  },
  {
    "text": "going to be in a security group right so I can SSH to that Bastion because it's",
    "start": "1395460",
    "end": "1401109"
  },
  {
    "text": "got access to the internet it's got a route to the internet but I'm going to put it in a security group and say only",
    "start": "1401109",
    "end": "1407440"
  },
  {
    "text": "allow SSH connections right 4:22 from a known IP range I don't want just anyone",
    "start": "1407440",
    "end": "1414580"
  },
  {
    "text": "being able to SSH to my bastion instance I want to say when people are in my data",
    "start": "1414580",
    "end": "1421749"
  },
  {
    "text": "center they can SSH to my Bastion instance and from the bastion you can",
    "start": "1421749",
    "end": "1428049"
  },
  {
    "text": "SSH into your into your remaining fleet right anything coming from the bastion",
    "start": "1428049",
    "end": "1435129"
  },
  {
    "text": "is allowed anything coming from your corporate IP or your known IP range is allowed so the subnet would have just",
    "start": "1435129",
    "end": "1442359"
  },
  {
    "text": "been a big yes no the security groups allow you some finer grained control on",
    "start": "1442359",
    "end": "1447429"
  },
  {
    "text": "on port on source on protocol right who here is thinking of an",
    "start": "1447429",
    "end": "1455450"
  },
  {
    "start": "1451000",
    "end": "1607000"
  },
  {
    "text": "architecture that maybe has more than one VPC in it or more than one accountant it's pretty common yeah I see",
    "start": "1455450",
    "end": "1463070"
  },
  {
    "text": "a lot of hands there we go so when you have multiple VP sees and you want to",
    "start": "1463070",
    "end": "1469250"
  },
  {
    "text": "share either some resources some services across those you have one",
    "start": "1469250",
    "end": "1474560"
  },
  {
    "text": "option which is you can connect both of those VP C's to the Internet and you can send traffic out of one across the",
    "start": "1474560",
    "end": "1480140"
  },
  {
    "text": "internet into the other but as we've just discussed you have many reasons why",
    "start": "1480140",
    "end": "1485450"
  },
  {
    "text": "you don't want to just be opening things up to the Internet so that's where VPC peering comes in VPC",
    "start": "1485450",
    "end": "1492680"
  },
  {
    "text": "peering gives you private IP connectivity between two non-overlapping",
    "start": "1492680",
    "end": "1499300"
  },
  {
    "text": "VP sees right this is where that IP range selection is important this kind",
    "start": "1499300",
    "end": "1507350"
  },
  {
    "text": "of allows you to build as in the picture a hub-and-spoke architecture you've got one connecting to another one so VPC",
    "start": "1507350",
    "end": "1519080"
  },
  {
    "text": "peering non-overlapping IP ranges gives you full private IP connectivity and one",
    "start": "1519080",
    "end": "1527120"
  },
  {
    "text": "of the things that's really cool is your tools of least privilege your security groups just work here they work exactly",
    "start": "1527120",
    "end": "1533750"
  },
  {
    "text": "the same so you can continue to be secure even though you've gone and joined these two networks now you don't",
    "start": "1533750",
    "end": "1542450"
  },
  {
    "text": "want an appearing connection just to be created because one side said so so the",
    "start": "1542450",
    "end": "1547940"
  },
  {
    "text": "process to actually create appearing is the our English side would in this case",
    "start": "1547940",
    "end": "1553280"
  },
  {
    "text": "the orange side would initiate the request say I want to appear with the blue DBC the blue VPC would accept that",
    "start": "1553280",
    "end": "1561500"
  },
  {
    "text": "peering request if they also want that connection to be opened at that point",
    "start": "1561500",
    "end": "1568640"
  },
  {
    "text": "you have a peering connection but no traffic is going to be sent until you do",
    "start": "1568640",
    "end": "1575960"
  },
  {
    "text": "yes add a route so the peering connection PC it behaves just like a gateway you say",
    "start": "1575960",
    "end": "1584020"
  },
  {
    "text": "traffic that looks like it's destined for that other VPC over there send that to the peering connection and it's just",
    "start": "1584020",
    "end": "1592240"
  },
  {
    "text": "going to work now those of you looking closely at the slide will see that",
    "start": "1592240",
    "end": "1598330"
  },
  {
    "text": "there's a a gateway or a target type that we haven't discussed yet the vgw that's a virtual private gateway and",
    "start": "1598330",
    "end": "1606550"
  },
  {
    "text": "that's what we're going to talk about next so as I said if you're migrating to",
    "start": "1606550",
    "end": "1612070"
  },
  {
    "start": "1607000",
    "end": "1699000"
  },
  {
    "text": "AWS or if you have a hybrid deployment it's very very useful to be able to",
    "start": "1612070",
    "end": "1618520"
  },
  {
    "text": "connect with privately connect your unpromoted a center with your V PC I'm",
    "start": "1618520",
    "end": "1626140"
  },
  {
    "text": "gonna take a brief segue here this is kind of the genesis in some ways of V PC",
    "start": "1626140",
    "end": "1631680"
  },
  {
    "text": "because back when ec2 launched initially there was no V PC so when you launched",
    "start": "1631680",
    "end": "1639490"
  },
  {
    "text": "an instance you ran your instance in the ec2 Network and it was a 10.8 range and",
    "start": "1639490",
    "end": "1646980"
  },
  {
    "text": "you got given the choice between Internet connectivity and Internet",
    "start": "1646980",
    "end": "1652330"
  },
  {
    "text": "connectivity so you got Internet connectivity and you know you had",
    "start": "1652330",
    "end": "1657880"
  },
  {
    "text": "security group so you could be secure like it was pretty good and this this is the ec2 classic network it still exists",
    "start": "1657880",
    "end": "1663790"
  },
  {
    "text": "today but we started having customers who wanted to connect their own data",
    "start": "1663790",
    "end": "1669520"
  },
  {
    "text": "centers to their resources in ec2 but",
    "start": "1669520",
    "end": "1674590"
  },
  {
    "text": "they were running in a tender type e range and we were running in a tender P range and those two things did not mix",
    "start": "1674590",
    "end": "1681400"
  },
  {
    "text": "and so that's kind of where V PC was born we realized that customers really",
    "start": "1681400",
    "end": "1686470"
  },
  {
    "text": "want to be able to control the network on both sides of that connection so V PC",
    "start": "1686470",
    "end": "1692260"
  },
  {
    "text": "is exactly that it's allowing you control of your network in ec2 so there",
    "start": "1692260",
    "end": "1700900"
  },
  {
    "start": "1699000",
    "end": "1862000"
  },
  {
    "text": "are two technologies for doing connections between your on-premise network and your V PC the first is VPN",
    "start": "1700900",
    "end": "1709900"
  },
  {
    "text": "virtual private network and the second is AWS Direct Connect I'm",
    "start": "1709900",
    "end": "1717570"
  },
  {
    "text": "gonna explain these at a very high level when you might want to use each but they're massive topics all on their own",
    "start": "1717570",
    "end": "1724649"
  },
  {
    "text": "and so if this is something that is useful to you or interesting to you you should definitely learn much more about",
    "start": "1724649",
    "end": "1730860"
  },
  {
    "text": "them and go to some of the sessions they are awesome and super useful okay",
    "start": "1730860",
    "end": "1738299"
  },
  {
    "text": "so high level overview of VPN in your own data center you will configure one",
    "start": "1738299",
    "end": "1745260"
  },
  {
    "text": "of your own devices say a router and you will use we've got some step-by-step",
    "start": "1745260",
    "end": "1751470"
  },
  {
    "text": "instructions in our documentation we support a wide variety of vendors each multiple devices for each and so you'll",
    "start": "1751470",
    "end": "1759480"
  },
  {
    "text": "set up this router to be your customer gateway once you've set that up you give us the statically routable IP address",
    "start": "1759480",
    "end": "1767210"
  },
  {
    "text": "then on the V PC side you create your virtual private gateway your vgw and if",
    "start": "1767210",
    "end": "1776700"
  },
  {
    "text": "you've done this correctly and everything is lining up you're gonna get to IPSec tunnels so that you can send",
    "start": "1776700",
    "end": "1784020"
  },
  {
    "text": "encrypted traffic from your on-premise data center to your V PC of the Internet",
    "start": "1784020",
    "end": "1789890"
  },
  {
    "text": "now we recommend that you go and configure and set both of these tunnels",
    "start": "1789890",
    "end": "1795480"
  },
  {
    "text": "up because they terminate in two separate availability zones allowing you",
    "start": "1795480",
    "end": "1800880"
  },
  {
    "text": "to take advantage of AWS as global infrastructure the last thing to do here",
    "start": "1800880",
    "end": "1808250"
  },
  {
    "text": "is add a route to your route table that says traffic that looks like it's",
    "start": "1808250",
    "end": "1813480"
  },
  {
    "text": "destined for the IP range of my on-premise network send it to my virtual",
    "start": "1813480",
    "end": "1818490"
  },
  {
    "text": "private gateway and that's all there is to it works pretty similarly from the V",
    "start": "1818490",
    "end": "1824700"
  },
  {
    "text": "PC side for Direct Connect however instead of it being encrypted traffic",
    "start": "1824700",
    "end": "1829830"
  },
  {
    "text": "over the Internet as it is with VPN Direct Connect is literally plugging a",
    "start": "1829830",
    "end": "1835770"
  },
  {
    "text": "cable from your equipment into our equipment in one of our many colocation",
    "start": "1835770",
    "end": "1841529"
  },
  {
    "text": "centers around the world which one you use depends on your data transfer needs so",
    "start": "1841529",
    "end": "1848350"
  },
  {
    "text": "if you have really high data transfer needs Direct Connect is going to be the best bet and we do have customers who",
    "start": "1848350",
    "end": "1856480"
  },
  {
    "text": "use both sides is for highest availability right so that's V PC that's",
    "start": "1856480",
    "end": "1866020"
  },
  {
    "start": "1862000",
    "end": "1953000"
  },
  {
    "text": "a bunch of different connectivity options for getting between your V pcs getting to the Internet",
    "start": "1866020",
    "end": "1873220"
  },
  {
    "text": "now I want to talk a bit about how V PC relates to the rest of AWS now",
    "start": "1873220",
    "end": "1881289"
  },
  {
    "text": "hurts my feelings a little bit but I suspect you aren't here reinvent and you",
    "start": "1881289",
    "end": "1888010"
  },
  {
    "text": "aren't interested in AWS purely because of networking purely because of EPC I",
    "start": "1888010",
    "end": "1893770"
  },
  {
    "text": "suspect you're really here because of the wide variety of services that we offer and and all of the exciting new",
    "start": "1893770",
    "end": "1900549"
  },
  {
    "text": "stuff that's coming out so I'm going to talk a little bit about how V PC and all",
    "start": "1900549",
    "end": "1907030"
  },
  {
    "text": "of those other services interact we're going to talk about DNS you can do some",
    "start": "1907030",
    "end": "1912190"
  },
  {
    "text": "cool stuff in your V PC with DNS we're going to look at some services that",
    "start": "1912190",
    "end": "1917950"
  },
  {
    "text": "actually run inside of your V PC and I'll talk about a pretty cool set up we",
    "start": "1917950",
    "end": "1924250"
  },
  {
    "text": "have for getting private access to AWS endpoints from within your V PC and then",
    "start": "1924250",
    "end": "1931179"
  },
  {
    "text": "lastly I'll show you how to get visibility into all the stuff we've discussed and really understand what is",
    "start": "1931179",
    "end": "1937030"
  },
  {
    "text": "going on so one very basic service of a",
    "start": "1937030",
    "end": "1942850"
  },
  {
    "text": "network is DNS which allows you to do domain name resolution and in V PC you",
    "start": "1942850",
    "end": "1950020"
  },
  {
    "text": "can do split horizon DNS so this is a",
    "start": "1950020",
    "end": "1955690"
  },
  {
    "start": "1953000",
    "end": "2060000"
  },
  {
    "text": "look at the V PC console and there are two DNS options here and you want to say",
    "start": "1955690",
    "end": "1962200"
  },
  {
    "text": "yes to both of them because it gives you some some cool stuff and we'll touch on some of those things in a moment",
    "start": "1962200",
    "end": "1968320"
  },
  {
    "text": "the first is dns resolution do you want Amazon to take care of dns for you you",
    "start": "1968320",
    "end": "1975280"
  },
  {
    "text": "can run your own DNS server but most of you probably don't want to",
    "start": "1975280",
    "end": "1980340"
  },
  {
    "text": "or need to the second one is DNS host names DNS host names means that every",
    "start": "1980340",
    "end": "1986910"
  },
  {
    "text": "time you launch an ec2 instance you'll get a host name and you get all of this",
    "start": "1986910",
    "end": "1992520"
  },
  {
    "text": "without having to operate any machinery yourself so this is a look at Amazon",
    "start": "1992520",
    "end": "1998970"
  },
  {
    "text": "route 53 this is Amazon's managed DNS service and most of the time people use",
    "start": "1998970",
    "end": "2005870"
  },
  {
    "text": "this for public facing DNS but you can also use something called a private",
    "start": "2005870",
    "end": "2012770"
  },
  {
    "text": "hosted zone which allows you to take over a zone inside of your V PC so for",
    "start": "2012770",
    "end": "2020660"
  },
  {
    "text": "example I have taken over demo hosted zone org I don't own that but in my V PC",
    "start": "2020660",
    "end": "2028910"
  },
  {
    "text": "I control what DNS does I can make demo hosted zone dot-org do whatever I want",
    "start": "2028910",
    "end": "2034610"
  },
  {
    "text": "so in this example I've set up example dot demo hosted zone dot org to 0.217",
    "start": "2034610",
    "end": "2041690"
  },
  {
    "text": "2.3 one 0.99 that's a private IP in my V",
    "start": "2041690",
    "end": "2046820"
  },
  {
    "text": "PC so anyone any server inside my V PC tries to access that DNS name it's gonna",
    "start": "2046820",
    "end": "2053179"
  },
  {
    "text": "behave differently than it would if we were outside in the internet that's pretty cool so lots and lots and lots of",
    "start": "2053179",
    "end": "2064070"
  },
  {
    "start": "2060000",
    "end": "2106000"
  },
  {
    "text": "AWS services are running infrastructure on your behalf so it's your infrastructure and because",
    "start": "2064070",
    "end": "2072830"
  },
  {
    "text": "it's yours we're gonna give you the choice to run it inside your own network in your V PC",
    "start": "2072830",
    "end": "2079450"
  },
  {
    "text": "now there are quite a lot of services that quite a lot of examples of this so",
    "start": "2079450",
    "end": "2086210"
  },
  {
    "text": "I'm not going to go through every single service that does this but I will go over to patterns that you're going to",
    "start": "2086210",
    "end": "2092870"
  },
  {
    "text": "see repeated over and over again and specifically these patterns exist to",
    "start": "2092870",
    "end": "2098840"
  },
  {
    "text": "take advantage of the high availability infrastructure and multiple availability",
    "start": "2098840",
    "end": "2105110"
  },
  {
    "text": "zones so first example is with Amazon RDS",
    "start": "2105110",
    "end": "2111750"
  },
  {
    "start": "2106000",
    "end": "2247000"
  },
  {
    "text": "database when you create an Amazon RDS database you're given the option to run the database in your V PC and the first",
    "start": "2111750",
    "end": "2121020"
  },
  {
    "text": "thing you're asked about is security groups your tools of least privilege and these work just the same as they do with",
    "start": "2121020",
    "end": "2128220"
  },
  {
    "text": "instances you specify what can and can't talk to what and they just work the",
    "start": "2128220",
    "end": "2133890"
  },
  {
    "text": "second thing you're going to be asked about is subnets and when we ask you",
    "start": "2133890",
    "end": "2140039"
  },
  {
    "text": "about subnets what we're really asking you about is availability zones and so",
    "start": "2140039",
    "end": "2145609"
  },
  {
    "text": "it's a good idea to specify more than one availability zone so that you can be",
    "start": "2145609",
    "end": "2151440"
  },
  {
    "text": "distributed over multiple availability zones for higher availability so with",
    "start": "2151440",
    "end": "2157020"
  },
  {
    "text": "the IDS example if you specified multiple subnets in different availability zones you'd get a master",
    "start": "2157020",
    "end": "2163859"
  },
  {
    "text": "database in one zone in one subnet and you'd get a failover candidate standby",
    "start": "2163859",
    "end": "2170190"
  },
  {
    "text": "in a second zone and this I call the act of standby pattern right specified",
    "start": "2170190",
    "end": "2178200"
  },
  {
    "text": "multiple availability zones one active resource and one standby resource ready to come along if anything else anything",
    "start": "2178200",
    "end": "2185069"
  },
  {
    "text": "happens to the first the other thing to call out share is you get a DNS name that's always going to point to the",
    "start": "2185069",
    "end": "2191849"
  },
  {
    "text": "active database so the second example is",
    "start": "2191849",
    "end": "2198650"
  },
  {
    "text": "application load balancer this is a layer 7 or an HTTP load balancer run by",
    "start": "2198650",
    "end": "2204450"
  },
  {
    "text": "l.b elastic load balancing same thing security groups they work the same and",
    "start": "2204450",
    "end": "2210829"
  },
  {
    "text": "again you're asked about subnets but what you're really being asked about is",
    "start": "2210829",
    "end": "2216059"
  },
  {
    "text": "availability zones except in this case when you specify multiple availability",
    "start": "2216059",
    "end": "2222510"
  },
  {
    "text": "zones that your application load balancer is actually going to create",
    "start": "2222510",
    "end": "2227640"
  },
  {
    "text": "nodes in multiple availability zones so that it's constantly load balancing",
    "start": "2227640",
    "end": "2233160"
  },
  {
    "text": "across multiple availability zones for higher availability and you're going to",
    "start": "2233160",
    "end": "2238619"
  },
  {
    "text": "see these patterns or eat over and over again for various different services so VPC endpoints V PC",
    "start": "2238619",
    "end": "2252069"
  },
  {
    "start": "2247000",
    "end": "2426000"
  },
  {
    "text": "endpoints give a direct private connection to AWS services from within",
    "start": "2252069",
    "end": "2258130"
  },
  {
    "text": "your V PC it allows you to continue to practice the principle of least",
    "start": "2258130",
    "end": "2264010"
  },
  {
    "text": "privilege also in some cases you get some pretty interesting tools for access",
    "start": "2264010",
    "end": "2270190"
  },
  {
    "text": "management so I'll go into that in a little bit more detail as well so this",
    "start": "2270190",
    "end": "2275770"
  },
  {
    "text": "is how the world works today I'm gonna use s3 as the example here you have your",
    "start": "2275770",
    "end": "2281800"
  },
  {
    "text": "application it's running in V PC happy days you've got your data your data is",
    "start": "2281800",
    "end": "2289059"
  },
  {
    "text": "in your s3 bucket and your data is kind of a part of your application now when",
    "start": "2289059",
    "end": "2296050"
  },
  {
    "text": "you resolve the the s3 buckets dns name you're going to get a public IP address",
    "start": "2296050",
    "end": "2301470"
  },
  {
    "text": "so if you want to access your data in s3 you're gonna have to create a way of",
    "start": "2301470",
    "end": "2308319"
  },
  {
    "text": "going over the Internet either an Internet gateway or maybe in that gateway something like that and when you",
    "start": "2308319",
    "end": "2315670"
  },
  {
    "text": "make the request you're going over the Internet to s3 to get your data and bring it back to your application and",
    "start": "2315670",
    "end": "2323260"
  },
  {
    "text": "VPC endpoints exists to solve this so there are two types of VPC endpoint the",
    "start": "2323260",
    "end": "2329260"
  },
  {
    "text": "first type is a gateway VPC endpoint gateway VPC endpoints are supported for",
    "start": "2329260",
    "end": "2337240"
  },
  {
    "text": "Amazon s3 and DynamoDB and the way they work is you create a VPC endpoint and",
    "start": "2337240",
    "end": "2349049"
  },
  {
    "text": "you put a route in your route table they behave just like all the other gateways",
    "start": "2349049",
    "end": "2354190"
  },
  {
    "text": "you put a route in your route table that says traffic that is destined for this service s3 in this example will be sent",
    "start": "2354190",
    "end": "2361809"
  },
  {
    "text": "to this VPC endpoint again not a single point of failure something highly",
    "start": "2361809",
    "end": "2368170"
  },
  {
    "text": "available backed by AWS and that's really all there is to it it",
    "start": "2368170",
    "end": "2374510"
  },
  {
    "text": "just works you don't have to change your code you're not pointing at something specific it just works",
    "start": "2374510",
    "end": "2382568"
  },
  {
    "text": "another thing that you get with a gateway V PC endpoint is the ability to",
    "start": "2383440",
    "end": "2388880"
  },
  {
    "text": "add Identity and Access Management policies on the VP's V PC endpoint and",
    "start": "2388880",
    "end": "2395500"
  },
  {
    "text": "this applies directly to the endpoint so you can say exactly what the V PC can do",
    "start": "2395500",
    "end": "2402560"
  },
  {
    "text": "and cannot do in each service that it's talking to with s3 you also have the",
    "start": "2402560",
    "end": "2410990"
  },
  {
    "text": "ability to add a policy on the s3 bucket which means you can actually lock down that back and say this bucket is only",
    "start": "2410990",
    "end": "2417740"
  },
  {
    "text": "accessible from traffic coming through that V PC endpoint it's really really",
    "start": "2417740",
    "end": "2423589"
  },
  {
    "text": "cool if you want to lock things down so the second type of V PC endpoint this is",
    "start": "2423589",
    "end": "2431119"
  },
  {
    "start": "2426000",
    "end": "2544000"
  },
  {
    "text": "pretty recent this a couple of weeks ago we launched this is an interface vp v pc",
    "start": "2431119",
    "end": "2436339"
  },
  {
    "text": "endpoint and you'll also hear this spoken about as AWS private link for AWS",
    "start": "2436339",
    "end": "2443150"
  },
  {
    "text": "services so this works very differently",
    "start": "2443150",
    "end": "2449480"
  },
  {
    "text": "it is a V PC endpoint so you create a V PC endpoint and when you create a V PC",
    "start": "2449480",
    "end": "2455660"
  },
  {
    "text": "endpoint you specify subnets and it creates an elastic network interface in",
    "start": "2455660",
    "end": "2462740"
  },
  {
    "text": "each of the subnets that you specified now that elastic network interface has a",
    "start": "2462740",
    "end": "2468560"
  },
  {
    "text": "private IP and when you send traffic to that private IP it goes to the V PC",
    "start": "2468560",
    "end": "2475339"
  },
  {
    "text": "endpoint and directly to the service so you have private IP connectivity to AWS",
    "start": "2475339",
    "end": "2482060"
  },
  {
    "text": "services from within your V PC now because this isn't a gateway you don't",
    "start": "2482060",
    "end": "2488810"
  },
  {
    "text": "use a route table to send traffic to it you get given some DNS names you get one",
    "start": "2488810",
    "end": "2495230"
  },
  {
    "text": "DNS name that'll have all of the IPs and then you also get given a zonal DNS name",
    "start": "2495230",
    "end": "2500569"
  },
  {
    "text": "for each specific IP so the if you do want to keep traffic within a zone you can but this is you know these",
    "start": "2500569",
    "end": "2510040"
  },
  {
    "text": "are IP I'm DNS names and they're lots of them and you would have to change your code so you can also choose to let us",
    "start": "2510040",
    "end": "2516760"
  },
  {
    "text": "manage a DNS name in your V PC that looks exactly like the DNS name of the",
    "start": "2516760",
    "end": "2523990"
  },
  {
    "text": "service outside of your V PC so when you resolve that DNS inside your V PC you'll",
    "start": "2523990",
    "end": "2530440"
  },
  {
    "text": "go to your IPS your V PC endpoint and if you were outside you'd go to the public",
    "start": "2530440",
    "end": "2536260"
  },
  {
    "text": "endpoint so again you don't have to change your code you don't have to do anything it's just going to work so",
    "start": "2536260",
    "end": "2546119"
  },
  {
    "start": "2544000",
    "end": "2670000"
  },
  {
    "text": "there's a lot of stuff going on in your V PC you've got security groups maybe stuff isn't working as you expect how do",
    "start": "2546119",
    "end": "2553780"
  },
  {
    "text": "you get visibility into your V PC into your V PC so you do this with V PC flow",
    "start": "2553780",
    "end": "2561340"
  },
  {
    "text": "logs V PC flow logs get aggregated metadata about accepted and rejected",
    "start": "2561340",
    "end": "2568020"
  },
  {
    "text": "traffic and allow you to easily go and look at that they really help you tell",
    "start": "2568020",
    "end": "2574720"
  },
  {
    "text": "what your security groups are doing you don't have to manage any infrastructure for this either this just works and it's",
    "start": "2574720",
    "end": "2582940"
  },
  {
    "text": "pretty simple to set up to you go to the VPN C console to the flow logs tab and",
    "start": "2582940",
    "end": "2588670"
  },
  {
    "text": "there's a button you fill in some stuff and then you'll start getting your V PC",
    "start": "2588670",
    "end": "2596200"
  },
  {
    "text": "flow logs pushed to Amazon CloudWatch logs and that looks like this so let me",
    "start": "2596200",
    "end": "2603460"
  },
  {
    "text": "draw your attention to this entry over here this is a reject so it's a bit more interesting than most of what's going on",
    "start": "2603460",
    "end": "2610270"
  },
  {
    "text": "on the rest of that page so we can see that this was some rejected traffic and",
    "start": "2610270",
    "end": "2616600"
  },
  {
    "text": "we can see that it was UDP port 53 which some of you may know is DNS so someone",
    "start": "2616600",
    "end": "2623830"
  },
  {
    "text": "was scanning my instance trying to see if I was running a DNS server and my",
    "start": "2623830",
    "end": "2629800"
  },
  {
    "text": "security groups don't allow this kind of traffic so this got rejected it dropped but you know who is doing that",
    "start": "2629800",
    "end": "2638670"
  },
  {
    "text": "why were they scanning it well we can do a reverse look-up on the IP address and",
    "start": "2638670",
    "end": "2644070"
  },
  {
    "text": "we can see that internet police dot Columbia were scanning for DNS servers and they happen to hit one of my",
    "start": "2644070",
    "end": "2650190"
  },
  {
    "text": "instances cool I guess I can live with that all of the except traffic anyone who's",
    "start": "2650190",
    "end": "2656550"
  },
  {
    "text": "wondering we expect that we've got a load balancer running where load balancing traffic on port 8080 we want",
    "start": "2656550",
    "end": "2663240"
  },
  {
    "text": "to see some accepted traffic we want to know that our traffic is getting through successfully cool right so to wrap up",
    "start": "2663240",
    "end": "2673970"
  },
  {
    "start": "2670000",
    "end": "2792000"
  },
  {
    "text": "what have we talked about what have we learned today so we learnt about your network and your",
    "start": "2673970",
    "end": "2681390"
  },
  {
    "text": "VPC is your network and we spoke a bit about your resources and AWS your",
    "start": "2681390",
    "end": "2686940"
  },
  {
    "text": "instances and your other types of infrastructure we spoke about how to do networking in ec2 and how to use subnets",
    "start": "2686940",
    "end": "2695910"
  },
  {
    "text": "for higher availability applications we spoke about security very important how",
    "start": "2695910",
    "end": "2703770"
  },
  {
    "text": "to control who can talk to whom in a low maintenance way and following the",
    "start": "2703770",
    "end": "2710220"
  },
  {
    "text": "principle of least privilege we spoke about running AWS services inside of",
    "start": "2710220",
    "end": "2715800"
  },
  {
    "text": "your V PC and we spoke about getting visibility with AWS flirt with V PC flow",
    "start": "2715800",
    "end": "2722130"
  },
  {
    "text": "logs we also discussed a bunch of connectivity options connectivity to the",
    "start": "2722130",
    "end": "2728070"
  },
  {
    "text": "Internet with Internet gateways to your on-premise networks with VPN and direct",
    "start": "2728070",
    "end": "2733260"
  },
  {
    "text": "connect to other V pcs using V PC peering and then to various AWS services",
    "start": "2733260",
    "end": "2740580"
  },
  {
    "text": "using two different types of V PC endpoints all of this gives you",
    "start": "2740580",
    "end": "2746340"
  },
  {
    "text": "visibility gives you a flexible and zero maintenance network and it's entirely",
    "start": "2746340",
    "end": "2752400"
  },
  {
    "text": "under your control now there are a bunch of other sessions I mentioned a couple",
    "start": "2752400",
    "end": "2758760"
  },
  {
    "text": "couple of them during this talk but many of them will give you a deeper look and",
    "start": "2758760",
    "end": "2764010"
  },
  {
    "text": "some cases actually explain to you how some of the stuff works when you look a",
    "start": "2764010",
    "end": "2769050"
  },
  {
    "text": "little bit deeper thank you very much at this point if I've done my job if",
    "start": "2769050",
    "end": "2781890"
  },
  {
    "text": "I've done my job this this year I won't see you back here next year but you will come back to reinvent cool we'll be",
    "start": "2781890",
    "end": "2788880"
  },
  {
    "text": "upfront for questions if anyone has thanked you",
    "start": "2788880",
    "end": "2793580"
  }
]