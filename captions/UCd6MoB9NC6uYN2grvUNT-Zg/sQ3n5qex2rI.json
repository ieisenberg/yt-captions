[
  {
    "text": "[Music]",
    "start": "130",
    "end": "4190"
  },
  {
    "text": "hello i'm padma maligarjanan i am an enterprise support manager at aws",
    "start": "5520",
    "end": "11519"
  },
  {
    "text": "and i'm based out of austin texas welcome to aws supports you where we share best",
    "start": "11519",
    "end": "17440"
  },
  {
    "text": "practices and troubleshooting tips from aws support in today's episode aws supports you",
    "start": "17440",
    "end": "24480"
  },
  {
    "text": "leveraging aws identity and access management joining me today is rob aguerreta from",
    "start": "24480",
    "end": "30960"
  },
  {
    "text": "aws support can you give us a quick introduction rob absolutely thanks padma uh yeah my name",
    "start": "30960",
    "end": "36880"
  },
  {
    "text": "is rob mcgregor and i am an enterprise support lead located in austin texas as well and excited to bring some new content to",
    "start": "36880",
    "end": "42800"
  },
  {
    "text": "you today thank you our topic today aws identity and access management or iam",
    "start": "42800",
    "end": "50879"
  },
  {
    "text": "trust relationships we will specifically focus on using iam roles for your cross",
    "start": "50879",
    "end": "56640"
  },
  {
    "text": "account access and also discuss using iam roles across other aws services before we get started",
    "start": "56640",
    "end": "63680"
  },
  {
    "text": "a quick note to our attendees online please use the chat window on the right hand side of your screen",
    "start": "63680",
    "end": "69520"
  },
  {
    "text": "to ask your questions and share your thoughts throughout the episode we look forward to hearing from you rob",
    "start": "69520",
    "end": "76000"
  },
  {
    "text": "can you walk us through what we're going to be talking about today absolutely thank you um so i'm going to",
    "start": "76000",
    "end": "81119"
  },
  {
    "text": "share my screen here and go over some content with you all about how you can leverage identity and access management trust",
    "start": "81119",
    "end": "86479"
  },
  {
    "text": "relationships for your aws organizations so today's agenda we're going to cover",
    "start": "86479",
    "end": "91680"
  },
  {
    "text": "essentially the benefits of just using an im role and trust relationships for getting access across",
    "start": "91680",
    "end": "96720"
  },
  {
    "text": "accounts in your aws accounts and organizations and then using i am roles as well and the benefits for",
    "start": "96720",
    "end": "102640"
  },
  {
    "text": "access to other aws services so if you're new to aws and identity and",
    "start": "102640",
    "end": "109040"
  },
  {
    "text": "access management aws just a real quick brief on what it is right so i",
    "start": "109040",
    "end": "114159"
  },
  {
    "text": "am for us is an access management service that enables you to manage access to aws services and resources",
    "start": "114159",
    "end": "120000"
  },
  {
    "text": "um securely so you can give access to your aws account to another account to",
    "start": "120000",
    "end": "125600"
  },
  {
    "text": "other users you can give granule permissions to those users that coming into your account",
    "start": "125600",
    "end": "130640"
  },
  {
    "text": "and you can also allow applications to make aws api calls so you can set your application up",
    "start": "130640",
    "end": "135840"
  },
  {
    "text": "to be able to access uh you know your aws services in your account programmatically uh",
    "start": "135840",
    "end": "142319"
  },
  {
    "text": "helps you increase security by being able to leverage things like multi-factor authentication on your",
    "start": "142319",
    "end": "147440"
  },
  {
    "text": "account so you can set up your little you know hardware token or software token to give you another factor into",
    "start": "147440",
    "end": "152640"
  },
  {
    "text": "your aws account you can also leverage identity and access management with federated access meaning that you could",
    "start": "152640",
    "end": "159280"
  },
  {
    "text": "leverage like your octo or maybe your microsoft active directory integration to",
    "start": "159280",
    "end": "164480"
  },
  {
    "text": "access the aws console and give access to your resources as well",
    "start": "164480",
    "end": "169680"
  },
  {
    "text": "and another nice thing about im is it's all audited in cloudtrail so you can see the actions that are taking place in",
    "start": "169680",
    "end": "175680"
  },
  {
    "text": "your account as well this overall helps you with some different compliance requirements uh like i said it's",
    "start": "175680",
    "end": "181280"
  },
  {
    "text": "integrated into our services so really easy to be able to manage those and there's no additional charge for you",
    "start": "181280",
    "end": "187200"
  },
  {
    "text": "to use identity and access management there are a few components that we're",
    "start": "187200",
    "end": "192560"
  },
  {
    "text": "going to be talking about today and so i want to make sure that we cover those as well for anyone who's new to aws",
    "start": "192560",
    "end": "197599"
  },
  {
    "text": "identity and access management primary one being a user that's going to be what you're going to",
    "start": "197599",
    "end": "203120"
  },
  {
    "text": "give an individual entity essentially access into your account whether that be for a user that logs",
    "start": "203120",
    "end": "208720"
  },
  {
    "text": "into the console and accesses or whether you're using access keys or secret access keys to give access to",
    "start": "208720",
    "end": "214080"
  },
  {
    "text": "your environment as well with an imuser there's long term credentials that go with it",
    "start": "214080",
    "end": "219840"
  },
  {
    "text": "and that might be a username and password or those access keys and secret access keys those users can give you know",
    "start": "219840",
    "end": "225920"
  },
  {
    "text": "permissions by themselves with a linear policy or added to a group uh and those get",
    "start": "225920",
    "end": "231599"
  },
  {
    "text": "kind of decided on cumulatively for those different policies that are assigned to whether it be the user or the group",
    "start": "231599",
    "end": "237120"
  },
  {
    "text": "and you can have up to 5000 individual users in your single aws account",
    "start": "237120",
    "end": "242319"
  },
  {
    "text": "so these aren't individual aws accounts right these are just users that live inside of an aws account",
    "start": "242319",
    "end": "247760"
  },
  {
    "text": "that you're allowed to give permissions to",
    "start": "247760",
    "end": "251280"
  },
  {
    "text": "what we're going to focus on primarily today is going to be our i am roles so a role is an entity that can",
    "start": "253280",
    "end": "259120"
  },
  {
    "text": "be assumed in your aws account so instead of having a user that you log in and give that user permissions to everything",
    "start": "259120",
    "end": "266240"
  },
  {
    "text": "instead we recommend that you create your users have permissions that don't really exist so much on the user and you",
    "start": "266240",
    "end": "271600"
  },
  {
    "text": "leverage these roles that you assume into to get that and you assign policies to these roles",
    "start": "271600",
    "end": "277520"
  },
  {
    "text": "that help determine what permissions you're given access to and those benefits to being able to use",
    "start": "277520",
    "end": "282560"
  },
  {
    "text": "these roles is that you don't have a long-term credential uh assigned to these i am roles",
    "start": "282560",
    "end": "287919"
  },
  {
    "text": "you have short-term credentials that get assumed and give access to your users",
    "start": "287919",
    "end": "293280"
  },
  {
    "text": "and then we also have an additional component that we're going to focus on today as well called the trust policy and that helps us determine who can",
    "start": "293280",
    "end": "299759"
  },
  {
    "text": "actually access that i am role so you have your user you have your role and then you have a trust policy or",
    "start": "299759",
    "end": "305280"
  },
  {
    "text": "trust relationship that you assign and those kind of cumulatively helps you to give that granule access and",
    "start": "305280",
    "end": "310479"
  },
  {
    "text": "permission into your aws account so i mentioned policies um so again if",
    "start": "310479",
    "end": "317600"
  },
  {
    "text": "you're new probably need to understand what our policies look like and what they actually do and the policies provide that",
    "start": "317600",
    "end": "323280"
  },
  {
    "text": "authorization so i mentioned they get cumulatively evaluated based on the user group role missions and such um but",
    "start": "323280",
    "end": "330240"
  },
  {
    "text": "really you're going to define these on each one of the things that you're going to be limiting access to in your environment",
    "start": "330240",
    "end": "336000"
  },
  {
    "text": "and you're going to have uh specifications and you're gonna have enforcements that go with those and you're gonna define the access",
    "start": "336000",
    "end": "341840"
  },
  {
    "text": "policy and then you're gonna have that evaluation of that policy that happens you can kind of see here a little short",
    "start": "341840",
    "end": "346880"
  },
  {
    "text": "blurb of what a policy looks like and the fact that we say we're giving an allow that allow action",
    "start": "346880",
    "end": "352800"
  },
  {
    "text": "is given to s3 get an s3 list for all the resources um so when you define these access",
    "start": "352800",
    "end": "358960"
  },
  {
    "text": "policies you specify you know which ion principles are allowed to do things and what actions they're allowed to be",
    "start": "358960",
    "end": "365039"
  },
  {
    "text": "doing within that account so that's kind of a little bit on our policies before i move forward pam i just want to",
    "start": "365039",
    "end": "371120"
  },
  {
    "text": "check and see if there's any questions a little bit more on policies but want to take a break here",
    "start": "371120",
    "end": "376639"
  },
  {
    "text": "thank you rob a lot of good information i do not see any questions posted online everyone",
    "start": "376639",
    "end": "382800"
  },
  {
    "text": "please post your questions here rob is our expert on this topic and we are here to answer your questions",
    "start": "382800",
    "end": "388319"
  },
  {
    "text": "for you rob in the meantime let me ask you a question uh how can i",
    "start": "388319",
    "end": "394000"
  },
  {
    "text": "shorten some of the iam policies uh that i maintain to just make it easier for me to manage",
    "start": "394000",
    "end": "401039"
  },
  {
    "text": "yeah so all the structure looks like we have here a little demo with the effect allow and then you can see we have these",
    "start": "401039",
    "end": "407039"
  },
  {
    "text": "actions that say s3 get s3 list and if you start to add those up per servers your policy can get a little",
    "start": "407039",
    "end": "413280"
  },
  {
    "text": "long we have two different statements that you can kind of leverage within your im policies to help shorten that",
    "start": "413280",
    "end": "419840"
  },
  {
    "text": "and one of them is going to be a not action and a not resource so instead of having to give these",
    "start": "419840",
    "end": "424880"
  },
  {
    "text": "individual items you could say allow star not action",
    "start": "424880",
    "end": "430400"
  },
  {
    "text": "delete s3 bucket or something like that that way you don't have to list all the individual actions",
    "start": "430400",
    "end": "435680"
  },
  {
    "text": "and you know not give them access to delete you can just say they can have access to everything except the ability to delete um same",
    "start": "435680",
    "end": "442160"
  },
  {
    "text": "thing goes for the not resource where you could say they have access to all these buckets except for this specific resource to",
    "start": "442160",
    "end": "448160"
  },
  {
    "text": "help you shorten those got it thank you rob and i'll share links to those",
    "start": "448160",
    "end": "453199"
  },
  {
    "text": "policy elements on our chat window as well back to you thanks all right so i mentioned we have",
    "start": "453199",
    "end": "460400"
  },
  {
    "text": "policies we have also a different variety of policy types that exist out there as well at the organization's level we have what",
    "start": "460400",
    "end": "467039"
  },
  {
    "text": "we call service control policies or scps and those are going to be kind of your",
    "start": "467039",
    "end": "472800"
  },
  {
    "text": "main policy that you can use on an organization to block anything from being assigned even",
    "start": "472800",
    "end": "478000"
  },
  {
    "text": "by roles inside of the accounts so your scp kind of just overall has that guard rail",
    "start": "478000",
    "end": "483680"
  },
  {
    "text": "that set for your organization we have other ones for just the permission policies and permission boundaries that",
    "start": "483680",
    "end": "489039"
  },
  {
    "text": "go with that but specifically today we're going to be looking at just the policies that go into your security token services",
    "start": "489039",
    "end": "495520"
  },
  {
    "text": "or your sts and that just kind of reduced the general shared permissions further and then our specific aws service",
    "start": "495520",
    "end": "502240"
  },
  {
    "text": "resource-based policies it's really just looking at that account access and saying account a can",
    "start": "502240",
    "end": "508319"
  },
  {
    "text": "access account b and we'll look to see kind of what that looks like in a demo as well",
    "start": "508319",
    "end": "513680"
  },
  {
    "text": "we also have bbc endpoint policies so quite a few different variety of policies the nice thing for each one of these",
    "start": "513680",
    "end": "520080"
  },
  {
    "text": "different types while there's many they all use the same policy language um so what we saw before for that",
    "start": "520080",
    "end": "525760"
  },
  {
    "text": "action allow and then the resources and such they all follow the same structure so you don't have to learn a new one for",
    "start": "525760",
    "end": "532480"
  },
  {
    "text": "each and every different type of these",
    "start": "532480",
    "end": "535839"
  },
  {
    "text": "so why use roles and trust relationships right why not just give my users access in my",
    "start": "537519",
    "end": "542640"
  },
  {
    "text": "account or each and every account if you have a single aws account it may be easy for you to administer and manage",
    "start": "542640",
    "end": "549360"
  },
  {
    "text": "that way as you grow into aws organizations and you start to follow kind of our multiple account strategy that we have for these",
    "start": "549360",
    "end": "556240"
  },
  {
    "text": "you'll see that we have a number of different accounts that get created one might be for your security where you",
    "start": "556240",
    "end": "561680"
  },
  {
    "text": "have things like security hub and guard duty and maybe your cloudtrail audit logs and stuff going there",
    "start": "561680",
    "end": "567200"
  },
  {
    "text": "or you have a log archive account well you're probably not going to want to create individual users",
    "start": "567200",
    "end": "572560"
  },
  {
    "text": "in each one of these accounts because that way each one of your users has to have you know 10 15 different",
    "start": "572560",
    "end": "578320"
  },
  {
    "text": "usernames and passwords that to remember that change you as an administrator have",
    "start": "578320",
    "end": "583360"
  },
  {
    "text": "to assign permissions and policies to each one of those for each individual account for each user and it's a lot of additional",
    "start": "583360",
    "end": "589519"
  },
  {
    "text": "overhead for you uh it also means that if you have to remove access you have to do it",
    "start": "589519",
    "end": "594880"
  },
  {
    "text": "all the individual accounts instead of just you know one i am user in your centralized kind of im account",
    "start": "594880",
    "end": "601600"
  },
  {
    "text": "so if we use roles we can basically create a single imuser in an account and then we can say it has access to",
    "start": "601600",
    "end": "607680"
  },
  {
    "text": "permissions to be able to assume into different accounts so we can say i have a user my user",
    "start": "607680",
    "end": "614399"
  },
  {
    "text": "account gets its user and password there they log into that and maybe that's using you know as i",
    "start": "614399",
    "end": "620240"
  },
  {
    "text": "mentioned before a federated access through active directory so they're really just using their active directory credentials to log into",
    "start": "620240",
    "end": "626000"
  },
  {
    "text": "the console and then they assume roles into things like a dev account where they then have access to all the",
    "start": "626000",
    "end": "632079"
  },
  {
    "text": "developer you know area that they need for some of their infrastructure and then",
    "start": "632079",
    "end": "637440"
  },
  {
    "text": "they go back to their regular account and then they switch back into the product account where they have access to",
    "start": "637440",
    "end": "642640"
  },
  {
    "text": "production environment and between those with the different roles maybe they have admin access in",
    "start": "642640",
    "end": "647839"
  },
  {
    "text": "the dev account and they can do everything and anything in that account because you need to be able to test different services",
    "start": "647839",
    "end": "652959"
  },
  {
    "text": "start stop instances do whatever but maybe in production they have a scope down set of permissions where",
    "start": "652959",
    "end": "658959"
  },
  {
    "text": "they're only allowed to maybe you know read some stuff and other items are not allowed to launch services because they have to be tested",
    "start": "658959",
    "end": "665519"
  },
  {
    "text": "first before they're whitelisted into uh being able to be used",
    "start": "665519",
    "end": "671120"
  },
  {
    "text": "and the other nice thing is that these don't come across the two so we have this little red line kind of separating",
    "start": "671120",
    "end": "676240"
  },
  {
    "text": "things that says you know these don't actually have access across from account to account",
    "start": "676240",
    "end": "681279"
  },
  {
    "text": "you could allow that but typically we'd see that you know you'd want them to go back to their main user so they don't accidentally assume a roll into",
    "start": "681279",
    "end": "687440"
  },
  {
    "text": "production and do stuff that they're not supposed to be",
    "start": "687440",
    "end": "691279"
  },
  {
    "text": "so the trust relationship portion is a nice component that we allow that we can scope down",
    "start": "692720",
    "end": "698000"
  },
  {
    "text": "who can actually use a role to a set of accounts um to a user or to a role",
    "start": "698000",
    "end": "703760"
  },
  {
    "text": "itself and so our i am role is going to define what the rule can do and it's going to be as in this policy it just says allow",
    "start": "703760",
    "end": "710000"
  },
  {
    "text": "star and star uh that we're giving access to everything for that account it's an admin one but we're saying only people in this",
    "start": "710000",
    "end": "717040"
  },
  {
    "text": "trust relationship those are the ones who can actually use this role is you know users in account 99999 root or",
    "start": "717040",
    "end": "725600"
  },
  {
    "text": "the role people who actually can use this role slash dev role in that account um",
    "start": "725600",
    "end": "730800"
  },
  {
    "text": "they're ones that are allowed to actually go in and do those things and to switch a role we're going to see",
    "start": "730800",
    "end": "737360"
  },
  {
    "text": "in the console here in our first demo it's pretty simple process and that's what's really nice about it and you can",
    "start": "737360",
    "end": "743040"
  },
  {
    "text": "do it two different ways through the console here where you're going to put in your account number or the account name that you've given to",
    "start": "743040",
    "end": "749279"
  },
  {
    "text": "your account and then your role name there as well and you can define a color and such we'll show you that so we go to the demo",
    "start": "749279",
    "end": "755680"
  },
  {
    "text": "or you can leverage it programmatically if you have users that use the aws cli uh where they can assume a role into an",
    "start": "755680",
    "end": "762639"
  },
  {
    "text": "account from the cli to do their typical actions um if you've been working with aws sometimes it's a lot easier to",
    "start": "762639",
    "end": "769360"
  },
  {
    "text": "have a one-liner that you can usually run in your aws cli rather than clicking to the console",
    "start": "769360",
    "end": "774639"
  },
  {
    "text": "so it's a good benefit there a nice continued thing about being able",
    "start": "774639",
    "end": "781040"
  },
  {
    "text": "to leverage the roles themselves too is that you have access analyzer that's available in the identity and access",
    "start": "781040",
    "end": "787440"
  },
  {
    "text": "management dashboard and what access analyzer is going to do is it's going to allow you to see",
    "start": "787440",
    "end": "792880"
  },
  {
    "text": "the roles that you have in your account the resources that they have access to and then also show you in this next",
    "start": "792880",
    "end": "798800"
  },
  {
    "text": "column here right the external um accounts that have access to",
    "start": "798800",
    "end": "804160"
  },
  {
    "text": "and this way you can go through and you can see you know what accounts have access to these roles you can help to audit that one central",
    "start": "804160",
    "end": "810720"
  },
  {
    "text": "location to see i can see all these different accounts have access to my roles you know what access level they actually",
    "start": "810720",
    "end": "816639"
  },
  {
    "text": "have to it when this role was last updated or accessed gives you a nice little view in order to",
    "start": "816639",
    "end": "822720"
  },
  {
    "text": "be able to see this information so definitely handy to have the access analyzer one of the other benefits on",
    "start": "822720",
    "end": "828399"
  },
  {
    "text": "why we recommend leveraging the roles over an individual user access for everything",
    "start": "828399",
    "end": "833440"
  },
  {
    "text": "and take a break here pat i just want to double check to see if there's any questions from the audience",
    "start": "833440",
    "end": "839120"
  },
  {
    "text": "yesterday we do have a couple of questions here from our audience uh so let's go look at our first",
    "start": "839199",
    "end": "845199"
  },
  {
    "text": "question our first question is from y'all 1982.",
    "start": "845199",
    "end": "850560"
  },
  {
    "text": "thank you for your question the question is do you have a good list of all the",
    "start": "850560",
    "end": "856320"
  },
  {
    "text": "aws i am actions i will be posting a link here on a chat window that lists",
    "start": "856320",
    "end": "862880"
  },
  {
    "text": "all our actions and as you go through that it will walk you through the general",
    "start": "862880",
    "end": "867920"
  },
  {
    "text": "document of what a policy would look like and there will be also some specific",
    "start": "867920",
    "end": "873440"
  },
  {
    "text": "types of commands and elements you can use on a per aws service basis and uh that link that i'll share will",
    "start": "873440",
    "end": "880160"
  },
  {
    "text": "point you to the specific aws service that you can follow as well um anything you want to",
    "start": "880160",
    "end": "885440"
  },
  {
    "text": "add to that rob before we move to the next question uh nope that's the best place to see all those lists of action",
    "start": "885440",
    "end": "890639"
  },
  {
    "text": "it's a long list um so yeah definitely best to share it there to go through and review perfect so this",
    "start": "890639",
    "end": "896160"
  },
  {
    "text": "next question for you uh rob thank you for your question tommy 242",
    "start": "896160",
    "end": "901279"
  },
  {
    "text": "the question is what do you mean by a group uh the iam group does this indicate a group of users",
    "start": "901279",
    "end": "909040"
  },
  {
    "text": "yes um so not covering a lot on groups today but in i am we have users groups and roles",
    "start": "909040",
    "end": "914720"
  },
  {
    "text": "and so groups are yes you could assign users into a group and you could assign permissions to those groups uh primary reason why we're",
    "start": "914720",
    "end": "922000"
  },
  {
    "text": "covering it terribly today is you can't specify groups in a trust relationship across accounts",
    "start": "922000",
    "end": "927279"
  },
  {
    "text": "so you either use a user or another role so but yes groups are just a combination of users got it",
    "start": "927279",
    "end": "933360"
  },
  {
    "text": "so i'll also post a link to talk that describes all the different iam identities",
    "start": "933360",
    "end": "938720"
  },
  {
    "text": "users versus groups versus rules for your reference um please feel free to post no questions",
    "start": "938720",
    "end": "944480"
  },
  {
    "text": "on the chat window uh rob back to you all right great thanks donna um so just mentioning access analyzer to",
    "start": "944480",
    "end": "951279"
  },
  {
    "text": "help uh mentioned a little bit about seeing you know how easy it is to switch roles once you have them set up in the console",
    "start": "951279",
    "end": "956880"
  },
  {
    "text": "and that's what i'm going to move to and demo next is going to be essentially just showing you how to",
    "start": "956880",
    "end": "962079"
  },
  {
    "text": "leverage an item role in the console uh to be able to go through and do this so i'm going to pull up a little",
    "start": "962079",
    "end": "970240"
  },
  {
    "text": "demo here that we can show through here on how to leverage and do this in your aws account",
    "start": "970240",
    "end": "977279"
  },
  {
    "text": "all right so here we're going to be in the aws management console and we're going to see that i'm logged",
    "start": "977360",
    "end": "982880"
  },
  {
    "text": "in as demo user at aws supports you demo i'm logged in as an i am user at this",
    "start": "982880",
    "end": "988399"
  },
  {
    "text": "point so i've used my username and password to get into my console and we're going to see",
    "start": "988399",
    "end": "994240"
  },
  {
    "text": "here that in this account i only have one imuser because it's just a demo account but this is where i would",
    "start": "994240",
    "end": "999680"
  },
  {
    "text": "say create all the users from my organization or set up my identity provider from my other say",
    "start": "999680",
    "end": "1006480"
  },
  {
    "text": "active directory or something to tie into this and that way i'm not going to create users in all of my other accounts i'm",
    "start": "1006480",
    "end": "1012560"
  },
  {
    "text": "going to have my user accounts in here i might have some roles in here that i can use to assign access to other roles and other accounts",
    "start": "1012560",
    "end": "1019680"
  },
  {
    "text": "but primarily we can see that i just got you know one user logged in here in these roles i've made",
    "start": "1019680",
    "end": "1025839"
  },
  {
    "text": "it easier on myself and i've given myself my sign in url a custom url",
    "start": "1025839",
    "end": "1030959"
  },
  {
    "text": "you can customize your im login so that way when you go you don't have to memorize your account",
    "start": "1030959",
    "end": "1036160"
  },
  {
    "text": "number for this one i've just given it you know aws sports cute demo and it just gives you that nice sign in",
    "start": "1036160",
    "end": "1042079"
  },
  {
    "text": "aws or amazon.com console link that you can use um i did that just to make it easier for the demo",
    "start": "1042079",
    "end": "1048640"
  },
  {
    "text": "and it's also just in general nice and easy for you to have a nice naming context to your accounts that you're going to be sharing roles",
    "start": "1048640",
    "end": "1054799"
  },
  {
    "text": "into so to switch roles i'm just going to come into the console and check the switch role and it's going to",
    "start": "1054799",
    "end": "1061039"
  },
  {
    "text": "bring me into this area here and so if i had named my account something that was easy to remember",
    "start": "1061039",
    "end": "1066960"
  },
  {
    "text": "i'd have to memorize the account number if you're like me i'm not going to memorize my account numbers if i have 10 15 accounts",
    "start": "1066960",
    "end": "1074160"
  },
  {
    "text": "and what they actually belong to um so instead i gave it a nice short name for the account that i'm going to go into",
    "start": "1074160",
    "end": "1080400"
  },
  {
    "text": "and it's just called aws supports you i am the next column here is kind of",
    "start": "1080400",
    "end": "1085679"
  },
  {
    "text": "important to remember the role that you're going to try and assume this is case sensitive right so",
    "start": "1085679",
    "end": "1092720"
  },
  {
    "text": "you're going to have to either just copy and paste it from anything like i'm doing here because it's easy for me to",
    "start": "1092720",
    "end": "1097760"
  },
  {
    "text": "copy and paste it uh but if i were to type into this lowercase aws sy",
    "start": "1097760",
    "end": "1103120"
  },
  {
    "text": "i am you know capital admin um i would get back an error because it",
    "start": "1103120",
    "end": "1108880"
  },
  {
    "text": "doesn't actually follow the exact name that's in this other account so just know if you're going through",
    "start": "1108880",
    "end": "1114480"
  },
  {
    "text": "uh we're gonna post a link to a tutorial on how you can go through and do this yourself eventually um if you go in and you start just you",
    "start": "1114480",
    "end": "1121120"
  },
  {
    "text": "know typing in your role name and it gives you an error go back and check case uh because it may be something that you",
    "start": "1121120",
    "end": "1127679"
  },
  {
    "text": "missed there for the different roles you assume you can choose a color so for this one i'm",
    "start": "1127679",
    "end": "1132799"
  },
  {
    "text": "just going to choose a different color here so that we can easily see when i switch roles into the account that i now have",
    "start": "1132799",
    "end": "1138720"
  },
  {
    "text": "up in the upper right hand corner a blue area that says that i'm in a different account",
    "start": "1138720",
    "end": "1144240"
  },
  {
    "text": "we can also see on this screen in my identity and access management dashboard that i have zero users in this account so i'm not",
    "start": "1144240",
    "end": "1150400"
  },
  {
    "text": "going to manage any usernames or passwords from this account all i'm going to do is have roles that exist here and so you can see in my",
    "start": "1150400",
    "end": "1156640"
  },
  {
    "text": "other account i had 51 roles in this count i have 76 roles just roles that are created for",
    "start": "1156640",
    "end": "1162160"
  },
  {
    "text": "different testing purposes and such we can also see that the name is up there this aws supports you i am dash",
    "start": "1162160",
    "end": "1168960"
  },
  {
    "text": "admin at aws supports you i am account so",
    "start": "1168960",
    "end": "1174080"
  },
  {
    "text": "no longer logged in as demo user at my other account with this one i just have admin access",
    "start": "1174080",
    "end": "1181039"
  },
  {
    "text": "to things so i can bounce around and look at users roles i can come into the ec2 console here",
    "start": "1181039",
    "end": "1186320"
  },
  {
    "text": "that i'm going to show and do you know anything in this account because i'm currently logged as an",
    "start": "1186320",
    "end": "1191760"
  },
  {
    "text": "administrator so if i want to quickly launch an instance i can jump through and come in and say amazon linux2 you",
    "start": "1191760",
    "end": "1199120"
  },
  {
    "text": "know i'm not going to configure anything because i'm immediately going to delete this instance i'm just going to launch it wait for it",
    "start": "1199120",
    "end": "1205360"
  },
  {
    "text": "to say it's going to launch and then we'll just come into that console actually i have to click the box",
    "start": "1205360",
    "end": "1210880"
  },
  {
    "text": "here and then we're going to click terminate instance so we can see really easy i was",
    "start": "1210880",
    "end": "1216880"
  },
  {
    "text": "able to come into this account switch into this role launch an instance and terminate it",
    "start": "1216880",
    "end": "1222080"
  },
  {
    "text": "now you also might be able to see how that's a bit of a problem that you might not want all of your users to be able to do that",
    "start": "1222080",
    "end": "1227760"
  },
  {
    "text": "in your organization so i'm going to switch back into my im console and then next",
    "start": "1227760",
    "end": "1233120"
  },
  {
    "text": "i'm going to create a role that has limited scope before i get into that pattern i just want to check to see if there's any",
    "start": "1233120",
    "end": "1238799"
  },
  {
    "text": "questions from the audience before i go for kind of the next steps of things yes perfect timing we do have a couple",
    "start": "1238799",
    "end": "1244000"
  },
  {
    "text": "of questions here from our audience for the first question thank you to sheriff",
    "start": "1244000",
    "end": "1250320"
  },
  {
    "text": "five for your question so the question is what does root mean in a policy",
    "start": "1250320",
    "end": "1256080"
  },
  {
    "text": "principle orin so i'm going to post a quick link here that walks you through what an aws",
    "start": "1256080",
    "end": "1262320"
  },
  {
    "text": "account root user is um so rob do you want to add anything more on the route yeah i'll actually show you",
    "start": "1262320",
    "end": "1269039"
  },
  {
    "text": "here in just a little bit because i'm going to edit my trust policy because yes that's something we may want to scope down a little bit but i'll",
    "start": "1269039",
    "end": "1274960"
  },
  {
    "text": "definitely cover that because we're definitely going to show you know what that looks like to have that what it actually means to have",
    "start": "1274960",
    "end": "1280080"
  },
  {
    "text": "root in there perfect yep so in rob's demo you'll be able to see that when you create an aws account",
    "start": "1280080",
    "end": "1287440"
  },
  {
    "text": "you begin with that single sign-in identity which gives you initial access to all services and resources in their",
    "start": "1287440",
    "end": "1293039"
  },
  {
    "text": "account and rob will walk you through that and also share a link about best practices",
    "start": "1293039",
    "end": "1298400"
  },
  {
    "text": "that are associated with aws root users okay so i have another question here",
    "start": "1298400",
    "end": "1304640"
  },
  {
    "text": "this question is about using tags uh in our policies so thank you for your question",
    "start": "1304640",
    "end": "1311120"
  },
  {
    "text": "more type trb the question is is it possible to give access to",
    "start": "1311120",
    "end": "1316159"
  },
  {
    "text": "resources based on specific tags yeah so we actually recently announced",
    "start": "1316159",
    "end": "1321440"
  },
  {
    "text": "uh our recently released uh access-based access controls that leverage tags in order to be able to assign",
    "start": "1321440",
    "end": "1327679"
  },
  {
    "text": "access to permissions um that's another way that you can kind of also additionally help to scope down some of",
    "start": "1327679",
    "end": "1332880"
  },
  {
    "text": "your policies like the number of policies you have because you can do things based on tidying as well",
    "start": "1332880",
    "end": "1338880"
  },
  {
    "text": "there is some good documentation out there that we can provide as well that goes over access-based",
    "start": "1338880",
    "end": "1343919"
  },
  {
    "text": "access control and how to use tags to give permissions to things perfect i'll post a link to tag based",
    "start": "1343919",
    "end": "1350320"
  },
  {
    "text": "access controls here and it'll also walk you through uh the list of services and some examples on how you",
    "start": "1350320",
    "end": "1357919"
  },
  {
    "text": "can use tag-based access controls another question here",
    "start": "1357919",
    "end": "1363120"
  },
  {
    "text": "thank you tommy242 for your follow-up question so the question is can i define",
    "start": "1363120",
    "end": "1370080"
  },
  {
    "text": "axes by aws region um so before i turn this to rob i will",
    "start": "1370080",
    "end": "1376400"
  },
  {
    "text": "post a link to an aws blog that walks you through how you can easily control access to",
    "start": "1376400",
    "end": "1382559"
  },
  {
    "text": "aws regions using iam policies for example you can specify the region",
    "start": "1382559",
    "end": "1388400"
  },
  {
    "text": "to which your iem principal like a user or a role can make apa calls for example",
    "start": "1388400",
    "end": "1394559"
  },
  {
    "text": "uh rob anything else you want to add to that question no yeah yeah the conditions that you have on i am policies you can specify a lot of",
    "start": "1394559",
    "end": "1400559"
  },
  {
    "text": "different conditions and there's a list of those that are in the documentation as well but yeah from region",
    "start": "1400559",
    "end": "1406240"
  },
  {
    "text": "additionally using the service control policies and aws organizations will allow you to kind of help limit some of the access as well so",
    "start": "1406240",
    "end": "1413520"
  },
  {
    "text": "you can use those as your guard rails for limiting where your users can do things at",
    "start": "1413520",
    "end": "1418960"
  },
  {
    "text": "right thank you and all great questions keep the questions coming in uh back to you rob all right um",
    "start": "1418960",
    "end": "1427120"
  },
  {
    "text": "so as i mentioned right having everyone be able to assume this admin role that can do anything in your",
    "start": "1427120",
    "end": "1432159"
  },
  {
    "text": "account might not be the best practice that you want to follow because they'd be able to launch instances terminate",
    "start": "1432159",
    "end": "1437440"
  },
  {
    "text": "them do whatever so what we can do is we can create these different roles and we can scope them",
    "start": "1437440",
    "end": "1442640"
  },
  {
    "text": "down so we go into the console we click create role and we get a few options here we can say allow access to an aws",
    "start": "1442640",
    "end": "1449279"
  },
  {
    "text": "service that we'll talk about a little bit later access to another aws account to a web identity order samuel 2.0 federation",
    "start": "1449279",
    "end": "1456880"
  },
  {
    "text": "and that could be like your active directory or if you use cognito or open id provider you can allow access to",
    "start": "1456880",
    "end": "1462720"
  },
  {
    "text": "those as well here for today's demo uh we're going to be looking at just another aws account so",
    "start": "1462720",
    "end": "1467760"
  },
  {
    "text": "we're going to let my aws demo account access my im account here and that's how we're going to specify",
    "start": "1467760",
    "end": "1473279"
  },
  {
    "text": "kind of allowing access across so when i do this and i click another aws account i do have to have that other",
    "start": "1473279",
    "end": "1479200"
  },
  {
    "text": "account number and i'm going to put that other account number into this to say this account id has access to my account",
    "start": "1479200",
    "end": "1487200"
  },
  {
    "text": "we're not going to use this require external id today in this demo because we're actually using it in the console",
    "start": "1487200",
    "end": "1492880"
  },
  {
    "text": "but the require external id is great if you're going to have a third party that's going to be leveraging your",
    "start": "1492880",
    "end": "1497919"
  },
  {
    "text": "account and you want to make sure that it's actually them you can provide not only the",
    "start": "1497919",
    "end": "1503120"
  },
  {
    "text": "account uh and the role that they can assume into but have to provide a specific external",
    "start": "1503120",
    "end": "1508480"
  },
  {
    "text": "id that's kind of a little you know third bit of knowledge that they have to have other than your account name and the",
    "start": "1508480",
    "end": "1514000"
  },
  {
    "text": "role that you're going to assume and this is basically just use that you can make sure that you know you don't have somebody accidentally",
    "start": "1514000",
    "end": "1519840"
  },
  {
    "text": "assuming a role they should be programmatically into your account by leveraging this as i mentioned this",
    "start": "1519840",
    "end": "1526640"
  },
  {
    "text": "isn't really supported in the console so we're not going to use it today since this demo shows you just kind of easily through the console how to do it",
    "start": "1526640",
    "end": "1533279"
  },
  {
    "text": "um but if you were going to be doing things through the cli or through another programmatic method you could enable",
    "start": "1533279",
    "end": "1538720"
  },
  {
    "text": "that i'm not going to enable mfa today just so i don't have to type in the token while we're going through the demo",
    "start": "1538720",
    "end": "1544000"
  },
  {
    "text": "um but definitely wherever you can we recommend using mfa so um definitely get that set up on your",
    "start": "1544000",
    "end": "1550159"
  },
  {
    "text": "account not only for your other access to accounts especially privileged ones",
    "start": "1550159",
    "end": "1555279"
  },
  {
    "text": "once we start to create our role we have to choose what permissions it has so say this role is going to be used by",
    "start": "1555279",
    "end": "1560880"
  },
  {
    "text": "your it operation center and all they need to do is be able to correlate say errors that show up from their",
    "start": "1560880",
    "end": "1566880"
  },
  {
    "text": "monitoring system into the actual ec2 instances or they need to be able to go in and check cloud watch metrics for",
    "start": "1566880",
    "end": "1572320"
  },
  {
    "text": "individual ec2 instances maybe validate some information in an auto scaling group or on an elastic load",
    "start": "1572320",
    "end": "1577840"
  },
  {
    "text": "balancer so you're going to scope down the level access they have to only ec2 read only and that's going to",
    "start": "1577840",
    "end": "1584880"
  },
  {
    "text": "just say that they only have access to that policy if you're seeing here there's a bunch of different policies that exist",
    "start": "1584880",
    "end": "1591520"
  },
  {
    "text": "and a lot of these policies are all aws managed policies so they're not policies that were created by a user",
    "start": "1591520",
    "end": "1597440"
  },
  {
    "text": "the ones that aws is predefined for you to be able to use that should give you access to those things that it says and will tell you so",
    "start": "1597440",
    "end": "1604720"
  },
  {
    "text": "you can add tags to this as well but for today we're just going to give it a name of this tag",
    "start": "1604720",
    "end": "1610799"
  },
  {
    "text": "and we're just going to name this one for aws supports you i am easy to read and then we're just",
    "start": "1610799",
    "end": "1617039"
  },
  {
    "text": "going to give a little description to this that says hey it's used for read-only access to ec2 we can see that i've specified",
    "start": "1617039",
    "end": "1624159"
  },
  {
    "text": "the account that's going to have access to it so that's my trusted entity that goes in my trust relationship",
    "start": "1624159",
    "end": "1629919"
  },
  {
    "text": "and then we see the policy that i've assigned to this role which is just amazon ec2 read only access",
    "start": "1629919",
    "end": "1635440"
  },
  {
    "text": "so that's all they have access to i'm going to go ahead and click on create role",
    "start": "1635440",
    "end": "1641039"
  },
  {
    "text": "and that's going to finish my create process and we can see that it exists there and",
    "start": "1641039",
    "end": "1647360"
  },
  {
    "text": "i have the role on so this roll r is going to be something that you're going to need to provide to a user if they were using this to assume",
    "start": "1647360",
    "end": "1653440"
  },
  {
    "text": "a role from the cli they're going to need that arm to put in in order to be able to do that assumption",
    "start": "1653440",
    "end": "1659279"
  },
  {
    "text": "you can see if i have my role description the path you know last activity since i just",
    "start": "1659279",
    "end": "1664320"
  },
  {
    "text": "created this obviously it doesn't have any activity you can provide your user with that link",
    "start": "1664320",
    "end": "1669360"
  },
  {
    "text": "that users can use to access that role directly so if they just want to bookmark that role",
    "start": "1669360",
    "end": "1674640"
  },
  {
    "text": "they can bookmark that role and it will take them directly in as long as they're signed into an imuse or an account that",
    "start": "1674640",
    "end": "1679679"
  },
  {
    "text": "has access to assume that role we can see the policy that's there and we can go into our trust",
    "start": "1679679",
    "end": "1685840"
  },
  {
    "text": "relationship and we can see in the trust relationship that we've got a trusted entity of this account and the account",
    "start": "1685840",
    "end": "1691679"
  },
  {
    "text": "number so this is where we're going to specifically go in and we'll take a look at uh",
    "start": "1691679",
    "end": "1696720"
  },
  {
    "text": "what mentioned before is giving root access to this right so we see we've got our policy and my",
    "start": "1696720",
    "end": "1702000"
  },
  {
    "text": "policy says that i have an allow to this aws arn of our aws im 68175 account called root",
    "start": "1702000",
    "end": "1710000"
  },
  {
    "text": "and it says this is allowed to assume role now when i put written there that basically means everything in that account can access",
    "start": "1710000",
    "end": "1716880"
  },
  {
    "text": "this role and so that's where you may want to change this overall so that you're not giving an entire account",
    "start": "1716880",
    "end": "1722559"
  },
  {
    "text": "access to this role maybe you only want to allow another role from that account access so",
    "start": "1722559",
    "end": "1729279"
  },
  {
    "text": "first within that role your user logs in and they have to assume say their dev",
    "start": "1729279",
    "end": "1734559"
  },
  {
    "text": "role and now the dev role is actually given access to this one to be able to do things or a user logs in and they assume a role",
    "start": "1734559",
    "end": "1740799"
  },
  {
    "text": "into the it operations role that they have in your original im count and then they use that to access this",
    "start": "1740799",
    "end": "1747919"
  },
  {
    "text": "and this allows us again to make sure that your actual user principles that exist i am have no permissions assigned to them",
    "start": "1747919",
    "end": "1754399"
  },
  {
    "text": "other than to be able to assume roles and that way you don't have to worry about individual users having you know",
    "start": "1754399",
    "end": "1759760"
  },
  {
    "text": "policies that you have to administer and manage and everything is done through a role if",
    "start": "1759760",
    "end": "1764960"
  },
  {
    "text": "you wanted to say only allow a specific user you can do the same thing and we would just change this from",
    "start": "1764960",
    "end": "1770480"
  },
  {
    "text": "role to user slash username and that would basically scope it so only the user that is in that 68175 account",
    "start": "1770480",
    "end": "1777600"
  },
  {
    "text": "could access this role so definitely something you'd want to take a look at you may not want to allow your entire",
    "start": "1777600",
    "end": "1783840"
  },
  {
    "text": "other account access here you may just want specific roles to be able to helps you get a little bit more granular",
    "start": "1783840",
    "end": "1788960"
  },
  {
    "text": "into permissions you always want to practice write these permissions where you can so definitely take advantage of using this",
    "start": "1788960",
    "end": "1795120"
  },
  {
    "text": "feature as well in the trust relationship again we have our conditions here that we were just really quickly touching on",
    "start": "1795120",
    "end": "1801039"
  },
  {
    "text": "uh there's a long list of conditions that you can put into here whether it be they can only assign this role from a",
    "start": "1801039",
    "end": "1806080"
  },
  {
    "text": "specific ip space or based on a region that the call is coming from different items that you can",
    "start": "1806080",
    "end": "1811279"
  },
  {
    "text": "kind of throw into im policy conditions long list in the long list on which ones work with which but that's all in the",
    "start": "1811279",
    "end": "1817279"
  },
  {
    "text": "documentation as well so we're not going to add any conditions we're just going to leave it back to the",
    "start": "1817279",
    "end": "1823520"
  },
  {
    "text": "root of this one so my account just access this and now we see that i've got my new role",
    "start": "1823520",
    "end": "1829600"
  },
  {
    "text": "created we've got some other options that are available on rules as well",
    "start": "1829600",
    "end": "1835440"
  },
  {
    "text": "access advisor is a nice one where we can see again that we saw on overall roles what roles had access or",
    "start": "1835440",
    "end": "1841279"
  },
  {
    "text": "what accounts had access to assume roles in access advisor we can take a look and see what this actually this role has",
    "start": "1841279",
    "end": "1848000"
  },
  {
    "text": "access to so we can see this has access to amazon ec2 auto scaling cloud watch",
    "start": "1848000",
    "end": "1853200"
  },
  {
    "text": "amazon ec2 and elastic load balancing as well since we haven't used this role this",
    "start": "1853200",
    "end": "1858399"
  },
  {
    "text": "last access is not there another nice thing about roles",
    "start": "1858399",
    "end": "1863919"
  },
  {
    "text": "that we have availability to you is we're going to take a look at is this revoke session as well and the revoked session is basically a",
    "start": "1863919",
    "end": "1870159"
  },
  {
    "text": "way that you can revoke all temporary credentials that exist for a rule say someone was in",
    "start": "1870159",
    "end": "1876080"
  },
  {
    "text": "your iq operation center and they move teams from the it operation center and they should no longer have access to",
    "start": "1876080",
    "end": "1881840"
  },
  {
    "text": "this role or they've left the company and you want to make sure that everyone that has access to this role currently",
    "start": "1881840",
    "end": "1887519"
  },
  {
    "text": "is authorized users you can click this revoke action section uh active sessions button and it will",
    "start": "1887519",
    "end": "1894399"
  },
  {
    "text": "attach a policy that will basically revoke all temporary credentials for people that have those roles assumed",
    "start": "1894399",
    "end": "1900240"
  },
  {
    "text": "and basically essentially make them re-authenticate that way you can validate they have an actual valid user and such a great way if you ever",
    "start": "1900240",
    "end": "1907519"
  },
  {
    "text": "have like a even like you're using it you have a user that has their access keys compromised",
    "start": "1907519",
    "end": "1913039"
  },
  {
    "text": "uh you could use this to revoke sessions to make sure that anyone that had their access keys compromised you've rotated their keys you want to",
    "start": "1913039",
    "end": "1919519"
  },
  {
    "text": "make sure that they have a valid session that's with the proper authentication um you can use it for most active",
    "start": "1919519",
    "end": "1924640"
  },
  {
    "text": "sessions as well there so kind of another nice feature that's built into roles that you can leverage",
    "start": "1924640",
    "end": "1930640"
  },
  {
    "text": "to help keep your environment a little bit more secure so now we're basically going to go back",
    "start": "1930640",
    "end": "1936240"
  },
  {
    "text": "we've seen everything that we have in permissions trust relationships access advisor ability to revoke sessions and such and",
    "start": "1936240",
    "end": "1943440"
  },
  {
    "text": "we're going to end up looking to see what happens if we go and use this role uh in our account since we now just have our ec2 read-only",
    "start": "1943440",
    "end": "1951200"
  },
  {
    "text": "access to it so i'm going to switch back into my demo user account that i have that's",
    "start": "1951200",
    "end": "1958720"
  },
  {
    "text": "not in this account go back to demo user",
    "start": "1958720",
    "end": "1964080"
  },
  {
    "text": "and i'm going to assume a role back into my other account using that ec2",
    "start": "1964080",
    "end": "1969679"
  },
  {
    "text": "read-only role here so let me switch back again i'm going to put in my account name",
    "start": "1969679",
    "end": "1976159"
  },
  {
    "text": "to copy and paste my role name so i have the case um correct on this one and put this into my role name field and",
    "start": "1976159",
    "end": "1983200"
  },
  {
    "text": "i'm going to choose a different color just for illustrator purposes that were in a different role we can see that now i'm",
    "start": "1983200",
    "end": "1988880"
  },
  {
    "text": "in this aws supports you ec2 read role at this account and even if i try say i'm in identity",
    "start": "1988880",
    "end": "1995039"
  },
  {
    "text": "and access management here if i try and go to the dashboard for identity access management i don't have access to do all the things",
    "start": "1995039",
    "end": "2001360"
  },
  {
    "text": "that i did with my other account therefore it gives me some errors same as if i try and come into",
    "start": "2001360",
    "end": "2006880"
  },
  {
    "text": "ec2 and i see the instances that are running and i've got this instance that we're going to use later for our demo if i try and terminate this",
    "start": "2006880",
    "end": "2014880"
  },
  {
    "text": "it gives me an error and says no you're not allowed to terminate this instance um and that's because right as we gave",
    "start": "2014880",
    "end": "2020640"
  },
  {
    "text": "this one ec2 read only we only want that it operation center to be able to come in and look at the ec2",
    "start": "2020640",
    "end": "2026320"
  },
  {
    "text": "instances tell me is it in running state have any of my health checks passed you know",
    "start": "2026320",
    "end": "2031600"
  },
  {
    "text": "all my cloud watch monitoring metrics you know coming in am i seeing anything that's going on for that instance at all",
    "start": "2031600",
    "end": "2037440"
  },
  {
    "text": "and use that so that's all i have for the demo for that one right now padma so",
    "start": "2037440",
    "end": "2042480"
  },
  {
    "text": "i'll go back to you see if we have any questions from the audience as well thank you europe",
    "start": "2042480",
    "end": "2048079"
  },
  {
    "text": "yes we do we did have a couple of questions that came in right during the last few minutes of your demo",
    "start": "2048079",
    "end": "2054240"
  },
  {
    "text": "so related to that question from tushar five thank you again for your question",
    "start": "2054240",
    "end": "2060720"
  },
  {
    "text": "um would would all roles and users in an account be allowed to assume",
    "start": "2060720",
    "end": "2066158"
  },
  {
    "text": "the role so that depends on your trust policy and that trust relationship that you",
    "start": "2066159",
    "end": "2071280"
  },
  {
    "text": "define so you would want to scope that to how you actually want that rule to be used and who you want it to be used by",
    "start": "2071280",
    "end": "2077919"
  },
  {
    "text": "so as you kind of looked the demo where you had the whole entire role on that was allowed and said cole and root",
    "start": "2077919",
    "end": "2084079"
  },
  {
    "text": "that's the part that you would change that not everyone can use that role so you can scope it down and say",
    "start": "2084079",
    "end": "2089440"
  },
  {
    "text": "only role slash role name composite got it um and this next question also",
    "start": "2089440",
    "end": "2096480"
  },
  {
    "text": "related to the last part of your demo the question is from ray db2 db222",
    "start": "2096480",
    "end": "2102240"
  },
  {
    "text": "thank you for your question uh can i remove permissions that i don't really need",
    "start": "2102240",
    "end": "2109760"
  },
  {
    "text": "uh you should so we always recommend starting with lease permissions right so our least privilege on your im policies so as you define the",
    "start": "2109839",
    "end": "2117920"
  },
  {
    "text": "different roles you're going to want to make sure you understand what you're really allowing them access to and make sure that you have those set up",
    "start": "2117920",
    "end": "2124000"
  },
  {
    "text": "and you can customize your actual json policy itself so as i showed",
    "start": "2124000",
    "end": "2129119"
  },
  {
    "text": "we have a bunch of aws managed policies but in real life in realism right you can go through and you",
    "start": "2129119",
    "end": "2134960"
  },
  {
    "text": "can either use those as they are or you can use them as a base for kind of your own use case where",
    "start": "2134960",
    "end": "2140320"
  },
  {
    "text": "you say yes i want people to be able to use this easy to read only but i actually want to scope it down they can't see auto scaling you might",
    "start": "2140320",
    "end": "2148160"
  },
  {
    "text": "just start by copying the existing json and then going and pasting that into your own policy and configuring it to what you want to",
    "start": "2148160",
    "end": "2154000"
  },
  {
    "text": "do so you can either use the managed ones or create your own customer thanks for the drop and everyone please",
    "start": "2154000",
    "end": "2160400"
  },
  {
    "text": "keep those questions coming in we are here to answer those for you and back to you rob",
    "start": "2160400",
    "end": "2166240"
  },
  {
    "text": "all right um so as i was mentioning originally we have the users and those have access keys and secret access keys it's",
    "start": "2166240",
    "end": "2172800"
  },
  {
    "text": "actually kind of one of the reasons why we recommend that you use roles so you don't have those long-lived access keys",
    "start": "2172800",
    "end": "2178000"
  },
  {
    "text": "if you're in an organization that currently uses those access keys and secret access keys you can leverage aws trusted advisor to",
    "start": "2178000",
    "end": "2185200"
  },
  {
    "text": "find aged access keys and so that's just what i wanted to show here real quick uh was that basically in",
    "start": "2185200",
    "end": "2190880"
  },
  {
    "text": "the aws trusted advisor you can do a check under the security uh and it's going to tell you the access",
    "start": "2190880",
    "end": "2196480"
  },
  {
    "text": "keys that are long lived and the reason for why they're being flagged is it green or yellow or red",
    "start": "2196480",
    "end": "2202079"
  },
  {
    "text": "so as we can see here our recommendation is every 90 days you should be rotating those keys",
    "start": "2202079",
    "end": "2208480"
  },
  {
    "text": "you're not alone if you're out there you have more than 90 days you have two years for the fax's keys that are out",
    "start": "2208480",
    "end": "2213680"
  },
  {
    "text": "there that haven't been rotated sometimes you do work with vendors it's really hard to get those keys rotated",
    "start": "2213680",
    "end": "2219119"
  },
  {
    "text": "but if you have that case and you're not sure the age of those you can take advantage of trusted advisor to be able to find those aged",
    "start": "2219119",
    "end": "2226079"
  },
  {
    "text": "access keys so you can maybe start your process of converting users from user access keys to roles",
    "start": "2226079",
    "end": "2233040"
  },
  {
    "text": "and there's some additional tools that you can use as well with the cli to help you manage those profiles",
    "start": "2233040",
    "end": "2238320"
  },
  {
    "text": "and really make it really easy for you to be able to leverage the roles from cli rather than embedding your access",
    "start": "2238320",
    "end": "2244560"
  },
  {
    "text": "keys so we're going to switch gears just a",
    "start": "2244560",
    "end": "2249599"
  },
  {
    "text": "little bit we talked about how you can use from your account itself from one account to another account to access an aws",
    "start": "2249599",
    "end": "2256079"
  },
  {
    "text": "account but maybe you're inside of your account and you've got your ec2 instances that need access to s3 to dynamodb to rds",
    "start": "2256079",
    "end": "2264640"
  },
  {
    "text": "uh whatever other service they're going to need access to right and we want to be able to not have to",
    "start": "2264640",
    "end": "2271359"
  },
  {
    "text": "embed access keys so one way you can do that to allow access programmatically from an ec2",
    "start": "2271359",
    "end": "2277359"
  },
  {
    "text": "instance to something like simple storage service or s3 you can embed an access key into your",
    "start": "2277359",
    "end": "2283359"
  },
  {
    "text": "application so you would create a im user you would create a set of access key and",
    "start": "2283359",
    "end": "2288400"
  },
  {
    "text": "secret access keys and you would embed that into your application to be able to make calls to things like",
    "start": "2288400",
    "end": "2293760"
  },
  {
    "text": "s3 or mysql benefits to it right set it and forget it you create",
    "start": "2293760",
    "end": "2299119"
  },
  {
    "text": "that user key and password or secret access key you embed it in your application you never rotate the credential",
    "start": "2299119",
    "end": "2305200"
  },
  {
    "text": "it just always works and has access to it but that's also the downfall to it you have those long live credentials",
    "start": "2305200",
    "end": "2311280"
  },
  {
    "text": "where if someone is working on the code um this key is embedded into and they accidentally publish it to a",
    "start": "2311280",
    "end": "2316720"
  },
  {
    "text": "big public git repo they store it on their laptop and their laptops get stolen now somebody has",
    "start": "2316720",
    "end": "2322320"
  },
  {
    "text": "access to that access key in the application can do different things you have to manually go in and actually",
    "start": "2322320",
    "end": "2328320"
  },
  {
    "text": "rotate those keys if you embed them right as a better practice so it kind of you know",
    "start": "2328320",
    "end": "2334880"
  },
  {
    "text": "has a bigger risk of inadvertent exposure there overall with it",
    "start": "2334880",
    "end": "2340079"
  },
  {
    "text": "or you can leverage much like we do with a user in going across account to a role leveraging an aws i am role on an ec2",
    "start": "2340079",
    "end": "2348400"
  },
  {
    "text": "instance that will give you access to s3 via that i am role and this does the same thing much like",
    "start": "2348400",
    "end": "2354560"
  },
  {
    "text": "we saw in the actual cli sample where a user says i'm going to",
    "start": "2354560",
    "end": "2360079"
  },
  {
    "text": "assume a role and get a temporary set of token credentials and those token credentials are going to say",
    "start": "2360079",
    "end": "2365680"
  },
  {
    "text": "i have access to you know put resources in s3 whether it be create bucket you",
    "start": "2365680",
    "end": "2371359"
  },
  {
    "text": "know say they just have access to everything in s3 because an application you wrote does image",
    "start": "2371359",
    "end": "2376960"
  },
  {
    "text": "stores and per user it needs to be able to create a bucket upload images for that user and kind of categorize those",
    "start": "2376960",
    "end": "2383280"
  },
  {
    "text": "it also needs access to my sql to store their information about what they put into s3 and such",
    "start": "2383280",
    "end": "2389040"
  },
  {
    "text": "and so the nice advantages to being able to leverage this is you have automated token access so it just uses",
    "start": "2389040",
    "end": "2394240"
  },
  {
    "text": "an identity metadata service that exists on ec2 to assume basically that role get its",
    "start": "2394240",
    "end": "2399280"
  },
  {
    "text": "temporary credentials and then use that to access your application so those tokens are short-lived so you",
    "start": "2399280",
    "end": "2405200"
  },
  {
    "text": "don't have to worry about manually going in and rotating access keys you also don't have to worry about these",
    "start": "2405200",
    "end": "2410640"
  },
  {
    "text": "being embedded into your application and having an accidental or inadvertent key exposure from publishing it to a git",
    "start": "2410640",
    "end": "2416480"
  },
  {
    "text": "repo so those are kind of the advantages of being able to use an ec2",
    "start": "2416480",
    "end": "2422640"
  },
  {
    "text": "instance with an im role to be able to grant access to s3 and mysql i'm going to pause real",
    "start": "2422640",
    "end": "2428880"
  },
  {
    "text": "quickly there pavement just to see if we have any questions hi rob thank you for that",
    "start": "2428880",
    "end": "2435760"
  },
  {
    "text": "we have one question here from ren korbrow thank you for your question the",
    "start": "2435760",
    "end": "2441599"
  },
  {
    "text": "question is how do you provide cross account access to an kms encrypted s3",
    "start": "2441599",
    "end": "2449119"
  },
  {
    "text": "bucket from a different account um i will share a a list here a documentation here",
    "start": "2449119",
    "end": "2456319"
  },
  {
    "text": "that gives you and walks you through a description and walks you through the best practices of you how you can enable that",
    "start": "2456319",
    "end": "2462000"
  },
  {
    "text": "uh rob do you want to talk through that uh i don't honestly remember exactly how to",
    "start": "2462000",
    "end": "2467520"
  },
  {
    "text": "do that so the documentation probably could be the best way to to refresh and how to do that so got it yeah the documentation walks you through",
    "start": "2467520",
    "end": "2474319"
  },
  {
    "text": "a step-by-step way to set this up so you can grant access to an aws",
    "start": "2474319",
    "end": "2479359"
  },
  {
    "text": "kms encrypted bucket in an account a to another user on account b uh let me share that with you on the",
    "start": "2479359",
    "end": "2485359"
  },
  {
    "text": "chat window and everyone please let me know if you have any other questions here for rob so",
    "start": "2485359",
    "end": "2491680"
  },
  {
    "text": "rob do you want to tell us a little bit more about using iam roles on an ec2 instance yeah so i'm",
    "start": "2491680",
    "end": "2498640"
  },
  {
    "text": "going to show really quickly here i'll kind of just demo what it looks like in order to be able to use an ec2",
    "start": "2498640",
    "end": "2504000"
  },
  {
    "text": "instance with a role in order to give access to you know aws resources here",
    "start": "2504000",
    "end": "2512240"
  },
  {
    "text": "so i had my demo instance that i have running in my account and it's just called my aws supports you s3 instance and i'm going",
    "start": "2512240",
    "end": "2520240"
  },
  {
    "text": "to leverage right now i just have a role and i enrolled that gives me access to leverage the ssm agent on this instance",
    "start": "2520240",
    "end": "2527599"
  },
  {
    "text": "to get access to the console um so not a lot of permissions to this thing it's just called amazon ssn roll for instance quick setup",
    "start": "2527599",
    "end": "2534640"
  },
  {
    "text": "just a little plug for that if you're not using the ssm roll for instance uh actu like getting into your instances",
    "start": "2534640",
    "end": "2540720"
  },
  {
    "text": "it's a really nice way to be able to leverage it without having to allow ssh or rdp into your instances you can",
    "start": "2540720",
    "end": "2546560"
  },
  {
    "text": "just use the asset page and ssm agent to get in and i'll show you what that looks like but if you were to create an ec2 instance",
    "start": "2546560",
    "end": "2553440"
  },
  {
    "text": "in order to attach a role when you create one you have the option to",
    "start": "2553440",
    "end": "2558560"
  },
  {
    "text": "add a role to it and that rule gives it permissions onto what it can actually do in your account whether it's be that",
    "start": "2558560",
    "end": "2564560"
  },
  {
    "text": "you're allowed to access it for ssm so you're saying ssm can access this instance um or i have another i am policy that",
    "start": "2564560",
    "end": "2571839"
  },
  {
    "text": "i'm going to assign eventually to this that'll be part of the demo as well but when you launch your instance you can assign an",
    "start": "2571839",
    "end": "2577520"
  },
  {
    "text": "im a role to it after you launch it you can go back and do the same thing so as i mentioned here i have this",
    "start": "2577520",
    "end": "2583680"
  },
  {
    "text": "instance quick setup role that's assigned to it that just lets me use the ssm agent so here i'm just going to",
    "start": "2583680",
    "end": "2589440"
  },
  {
    "text": "click from within my browser and beta redirected to my terminal which i love for ssm",
    "start": "2589440",
    "end": "2595440"
  },
  {
    "text": "so let me do that to get in and now say i try and do something",
    "start": "2595440",
    "end": "2600480"
  },
  {
    "text": "in ec2 just to describe the volumes that i have in ec2 we can see that because my ion policy",
    "start": "2600480",
    "end": "2606960"
  },
  {
    "text": "only has access to allow me ssm basically to use the agent i get denied",
    "start": "2606960",
    "end": "2612960"
  },
  {
    "text": "so you can see it's because i have this role here so even if i launch it i'll show you what that looks like we",
    "start": "2612960",
    "end": "2618240"
  },
  {
    "text": "just have ssm manage instance core and this is just going to give us very limited permissions",
    "start": "2618240",
    "end": "2624000"
  },
  {
    "text": "we can leverage that access advisor that we looked at before to see what exactly it gives me access to right",
    "start": "2624000",
    "end": "2629440"
  },
  {
    "text": "we can see that it doesn't specify anything for ec2 and that's why i got the error message",
    "start": "2629440",
    "end": "2634720"
  },
  {
    "text": "that essentially says you know sorry you can't actually launch or describe your volumes at ec2",
    "start": "2634720",
    "end": "2641040"
  },
  {
    "text": "i could attach additional policies to this one but i'm going to use my other policy or the role that i created and the nice",
    "start": "2641040",
    "end": "2647920"
  },
  {
    "text": "thing like i said is you can switch your instances roles after they've been launched so you can change the access to them",
    "start": "2647920",
    "end": "2653520"
  },
  {
    "text": "i'm going to come to security and i'm going to say modify my i am role and i already have a pre-created role",
    "start": "2653520",
    "end": "2659760"
  },
  {
    "text": "this aws supports you easy to read and i'm going to switch that one and click save and now when i go back to",
    "start": "2659760",
    "end": "2668560"
  },
  {
    "text": "my instance i can see i've got to refresh this really quick before i have this instance assigned to it or this role",
    "start": "2668560",
    "end": "2675440"
  },
  {
    "text": "and now i have a new role assigned to it that's my aws support cbc2 read role",
    "start": "2675440",
    "end": "2681119"
  },
  {
    "text": "and if i go back to my console and i do the same thing that i just tried to do with describe volumes we'll see that now i have access to ec2",
    "start": "2681119",
    "end": "2687760"
  },
  {
    "text": "to be able to do things i didn't have to reboot my instance didn't have to embed user credentials or anything like that into it",
    "start": "2687760",
    "end": "2693839"
  },
  {
    "text": "just by assigning the role permissions i was able to now describe my volumes that i have in ec2",
    "start": "2693839",
    "end": "2700960"
  },
  {
    "text": "so you may use it for something as simple as administration but really you can use it programmatically for things like s3",
    "start": "2700960",
    "end": "2707520"
  },
  {
    "text": "so if i wanted to create an s3 bucket obviously the permissions that i assigned so far were easy to read",
    "start": "2707520",
    "end": "2713599"
  },
  {
    "text": "so i'm not going to be able to actually do anything or should not be able to right based on what we looked at so if i try and hit the s3 api and say",
    "start": "2713599",
    "end": "2720319"
  },
  {
    "text": "create bucket again i'm going to get expected access denied because i haven't actually allowed access into that",
    "start": "2720319",
    "end": "2729359"
  },
  {
    "text": "but say i just want to use this policy um obviously you want to update the name of it to something that made more sense or",
    "start": "2729359",
    "end": "2735440"
  },
  {
    "text": "create a separate policy for this quickly for today i'm just going to attach another policy to this",
    "start": "2735440",
    "end": "2741920"
  },
  {
    "text": "if you mentioned before could i you know limit permissions that are in a policy uh for this one like i could choose the",
    "start": "2741920",
    "end": "2747680"
  },
  {
    "text": "amazon s3 full access or read only access or i can create a policy on my own and",
    "start": "2747680",
    "end": "2754480"
  },
  {
    "text": "specify my own policy actions so if i click on create policy i'm brought to the visual editor",
    "start": "2754480",
    "end": "2761119"
  },
  {
    "text": "if you have existing json documents for your policies you could do this in the json editor",
    "start": "2761119",
    "end": "2766160"
  },
  {
    "text": "if you're like me when you're creating policies sometimes you just like like additional peace of mind of using the visual editor",
    "start": "2766160",
    "end": "2772160"
  },
  {
    "text": "this is our visual editor where you can choose a service uh add information say i'm going to do s3",
    "start": "2772160",
    "end": "2777599"
  },
  {
    "text": "say we only need to allow access to write for this so we're just going to use all these actions to put items create jobs whatever",
    "start": "2777599",
    "end": "2784240"
  },
  {
    "text": "um we could just limit it if we wanted to and say all they can do is create bucket maybe delete bucket or maybe we don't",
    "start": "2784240",
    "end": "2790800"
  },
  {
    "text": "want them to be able to delete bucket and just create buckets so whenever it gets rid of stuff and have them put objects we can save this ec2",
    "start": "2790800",
    "end": "2797520"
  },
  {
    "text": "instance can create a bucket and put objects in that bucket and so that's how you can remove",
    "start": "2797520",
    "end": "2803359"
  },
  {
    "text": "permissions or start from that lease privilege that we were talking about before a little bit and kind of help you to not have to use",
    "start": "2803359",
    "end": "2809839"
  },
  {
    "text": "the aws managed policies if you don't want to and you can define exactly what you want permissions for today i'm just going to",
    "start": "2809839",
    "end": "2816079"
  },
  {
    "text": "go back and use our aws s3 full access i'm going to cancel this and say go back to my s3 full access",
    "start": "2816079",
    "end": "2824000"
  },
  {
    "text": "policy and attach that policy to this role as well just to illustrate you know how we can",
    "start": "2824000",
    "end": "2829839"
  },
  {
    "text": "use an ec2 instance to do this so now i have three policies attached to this one roll my s3 full access",
    "start": "2829839",
    "end": "2836000"
  },
  {
    "text": "my ec2 read only and my ssm so i can continue to access my instance for the ssm",
    "start": "2836000",
    "end": "2841040"
  },
  {
    "text": "console but when we go back over into my instance again i don't have to",
    "start": "2841040",
    "end": "2848160"
  },
  {
    "text": "reboot i don't have to do anything my role already exists on there i've already changed it to this aws",
    "start": "2848160",
    "end": "2853680"
  },
  {
    "text": "supports you ec2 read role and we're all set there that now when i try and create a bucket",
    "start": "2853680",
    "end": "2860000"
  },
  {
    "text": "we can see that my bucket creates successfully i don't get any errors back and so that's kind of how you can",
    "start": "2860000",
    "end": "2865440"
  },
  {
    "text": "leverage an aws ec2 instance with the role in order to be able to give it access to",
    "start": "2865440",
    "end": "2871200"
  },
  {
    "text": "do things with aws services without having to embed the access keys into your application or anything",
    "start": "2871200",
    "end": "2877920"
  },
  {
    "text": "and help you kind of keep your environment a little bit more secure with those short-lived access credentials",
    "start": "2877920",
    "end": "2884559"
  },
  {
    "text": "so back to you pavement see if we have any questions about any of that leveraging the ec2 instances and roles",
    "start": "2884559",
    "end": "2890800"
  },
  {
    "text": "no further questions on the chat window thank you for sharing all that information with us today rob",
    "start": "2890800",
    "end": "2897599"
  },
  {
    "text": "everyone today we looked at iam trust relationships with a focus on cross account access and",
    "start": "2897599",
    "end": "2904000"
  },
  {
    "text": "using the rules across other aws services if there are any questions that were not answered today",
    "start": "2904000",
    "end": "2910240"
  },
  {
    "text": "please post them on forums.aws.amazon.com and email us any feedback aws supports",
    "start": "2910240",
    "end": "2917520"
  },
  {
    "text": "you at amazon.com we want to hear from you and tell us what else you would like to",
    "start": "2917520",
    "end": "2922640"
  },
  {
    "text": "see on this show and also a special thank you to our moderators for posting the registration",
    "start": "2922640",
    "end": "2928160"
  },
  {
    "text": "page for our upcoming episodes aws supports you dot splashthat.com",
    "start": "2928160",
    "end": "2934160"
  },
  {
    "text": "please bookmark this page and we hope you can join us next time thank you for joining us today at aws",
    "start": "2934160",
    "end": "2940160"
  },
  {
    "text": "supports you and happy cloud computing happy calculating everyone",
    "start": "2940160",
    "end": "2947440"
  }
]