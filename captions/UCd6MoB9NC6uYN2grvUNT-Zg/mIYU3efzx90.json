[
  {
    "text": "- Welcome back to this",
    "start": "690",
    "end": "1933"
  },
  {
    "text": "\"AWS TechShift: Migrate to\nModernize\" video miniseries.",
    "start": "1933",
    "end": "5890"
  },
  {
    "text": "These videos are aimed at\nindependent software vendors",
    "start": "5890",
    "end": "8360"
  },
  {
    "text": "who are currently running on premise",
    "start": "8360",
    "end": "9849"
  },
  {
    "text": "and looking to migrate to AWS.",
    "start": "9850",
    "end": "12350"
  },
  {
    "text": "It's also aimed at those that are looking",
    "start": "12350",
    "end": "13940"
  },
  {
    "text": "to modernize an existing architecture",
    "start": "13940",
    "end": "16350"
  },
  {
    "text": "to become more cloud native.",
    "start": "16350",
    "end": "18133"
  },
  {
    "text": "In the last video, we\nintroduced AWS Control Tower",
    "start": "18979",
    "end": "22260"
  },
  {
    "text": "as our landing zone, and\nwe improved the VPC design",
    "start": "22260",
    "end": "25570"
  },
  {
    "text": "by adding more subnets",
    "start": "25570",
    "end": "26940"
  },
  {
    "text": "that spanned multiple availability zones.",
    "start": "26940",
    "end": "30250"
  },
  {
    "text": "In this video, we are going to look",
    "start": "30250",
    "end": "31740"
  },
  {
    "text": "at moving the database\naway from the EC2 instance",
    "start": "31740",
    "end": "34800"
  },
  {
    "text": "and onto a managed service.",
    "start": "34800",
    "end": "37500"
  },
  {
    "text": "We will then look at a better\nway to manage our photos",
    "start": "37500",
    "end": "41110"
  },
  {
    "text": "and our static image content",
    "start": "41110",
    "end": "42870"
  },
  {
    "text": "by using a content delivery network.",
    "start": "42870",
    "end": "45142"
  },
  {
    "text": "(upbeat music)",
    "start": "46013",
    "end": "48350"
  },
  {
    "text": "Our photo gallery application\nallows users to upload,",
    "start": "48350",
    "end": "51500"
  },
  {
    "text": "tag and search for photos.",
    "start": "51500",
    "end": "53810"
  },
  {
    "text": "It is a monolithic and everything\nruns on a single server,",
    "start": "53810",
    "end": "57990"
  },
  {
    "text": "including the MySQL database.",
    "start": "57990",
    "end": "60163"
  },
  {
    "text": "At the moment, the photo\ngallery is all running",
    "start": "62720",
    "end": "65290"
  },
  {
    "text": "on a single EC2 instance inside\none AZ in a public subnet.",
    "start": "65290",
    "end": "70290"
  },
  {
    "text": "In the last video, we\nadded private subnets",
    "start": "70520",
    "end": "72759"
  },
  {
    "text": "across multiple availability zones.",
    "start": "72760",
    "end": "75560"
  },
  {
    "text": "It would be more secure\nfor the database layer",
    "start": "75560",
    "end": "77880"
  },
  {
    "text": "to run in one of these private subnets",
    "start": "77880",
    "end": "80399"
  },
  {
    "text": "so that it cannot be accessed",
    "start": "80400",
    "end": "81780"
  },
  {
    "text": "by a public IP on the internet.",
    "start": "81780",
    "end": "84022"
  },
  {
    "text": "Moving the database away from the web tier",
    "start": "84910",
    "end": "87010"
  },
  {
    "text": "would also allow for the web tier",
    "start": "87010",
    "end": "88510"
  },
  {
    "text": "to scale independently,\nallowing us to add more nodes.",
    "start": "88510",
    "end": "92123"
  },
  {
    "text": "To ensure high availability",
    "start": "93870",
    "end": "95650"
  },
  {
    "text": "and protect against a loss of an instance",
    "start": "95650",
    "end": "97830"
  },
  {
    "text": "or availability zone, we\nshould replicate the database",
    "start": "97830",
    "end": "101110"
  },
  {
    "text": "to another availability zone.",
    "start": "101110",
    "end": "102683"
  },
  {
    "text": "We can build this new architecture",
    "start": "105150",
    "end": "106970"
  },
  {
    "text": "with more EC2 instances.",
    "start": "106970",
    "end": "108960"
  },
  {
    "text": "However, we would have\nto install, configure",
    "start": "108960",
    "end": "111000"
  },
  {
    "text": "and manage the database engine ourself.",
    "start": "111000",
    "end": "113710"
  },
  {
    "text": "To take away this\nundifferentiated heavy lifting.",
    "start": "113710",
    "end": "116930"
  },
  {
    "text": "we will instead use an AWS\nmanaged database service.",
    "start": "116930",
    "end": "120493"
  },
  {
    "text": "Amazon Aurora is MySQL",
    "start": "122270",
    "end": "124407"
  },
  {
    "text": "and PostgreSQL compatible\nrelational database",
    "start": "124407",
    "end": "128020"
  },
  {
    "text": "built for the cloud that\ncombines this performance",
    "start": "128020",
    "end": "131340"
  },
  {
    "text": "and availability of traditional\nenterprise databases",
    "start": "131340",
    "end": "134959"
  },
  {
    "text": "with the simplicity and cost effectiveness",
    "start": "134960",
    "end": "137320"
  },
  {
    "text": "of open source databases.",
    "start": "137320",
    "end": "139033"
  },
  {
    "text": "What benefits do you get\nfrom using Amazon Aurora?",
    "start": "140660",
    "end": "144090"
  },
  {
    "text": "It's fully managed, so there's\nno servers to provision,",
    "start": "144090",
    "end": "147629"
  },
  {
    "text": "software to patch, no\nsetup, no configurations",
    "start": "147630",
    "end": "150870"
  },
  {
    "text": "or backups to manage.",
    "start": "150870",
    "end": "152222"
  },
  {
    "text": "It's fault tolerant, it's self-healing",
    "start": "153650",
    "end": "156129"
  },
  {
    "text": "and you get six copies of data",
    "start": "156130",
    "end": "158080"
  },
  {
    "text": "across free availability zones,",
    "start": "158080",
    "end": "160210"
  },
  {
    "text": "as well as continuous\nbackups to Amazon S3.",
    "start": "160210",
    "end": "163313"
  },
  {
    "text": "It's highly secure.",
    "start": "164300",
    "end": "165350"
  },
  {
    "text": "There's network isolation.",
    "start": "165350",
    "end": "167130"
  },
  {
    "text": "You can provide encryption\nat rest and in transit,",
    "start": "167130",
    "end": "170050"
  },
  {
    "text": "and it complies with a number",
    "start": "170050",
    "end": "171460"
  },
  {
    "text": "of compliance and insurance programs.",
    "start": "171460",
    "end": "173973"
  },
  {
    "text": "Performance and scalability\ndoes five times a throughput",
    "start": "176220",
    "end": "179420"
  },
  {
    "text": "of standard MySQL",
    "start": "179420",
    "end": "180900"
  },
  {
    "text": "and three times the throughput\nof standard Postgres.",
    "start": "180900",
    "end": "184040"
  },
  {
    "text": "You can also scale out by\nadding up to 15 read replicas.",
    "start": "184040",
    "end": "187763"
  },
  {
    "text": "One of the key features of Amazon Aurora",
    "start": "189730",
    "end": "191860"
  },
  {
    "text": "is a separation of storage and compute.",
    "start": "191860",
    "end": "194690"
  },
  {
    "text": "When you create an Aurora cluster,",
    "start": "194690",
    "end": "196670"
  },
  {
    "text": "it creates a storage volume\nthat is automatically replicated",
    "start": "196670",
    "end": "200069"
  },
  {
    "text": "across multiple availability zones.",
    "start": "200070",
    "end": "202740"
  },
  {
    "text": "This means when data is written",
    "start": "202740",
    "end": "204350"
  },
  {
    "text": "to the primary database instance",
    "start": "204350",
    "end": "206550"
  },
  {
    "text": "Aurora synchronously replicates the data",
    "start": "206550",
    "end": "209240"
  },
  {
    "text": "to six storage nodes across\nthose availability zones.",
    "start": "209240",
    "end": "214200"
  },
  {
    "text": "This provides redundancy and\nprotects against failures.",
    "start": "214200",
    "end": "217532"
  },
  {
    "text": "Compute nodes can be added or removed",
    "start": "218480",
    "end": "220409"
  },
  {
    "text": "from the storage volume as required.",
    "start": "220410",
    "end": "222733"
  },
  {
    "text": "We can easily migrate the\nexisting MySQL database",
    "start": "225060",
    "end": "228310"
  },
  {
    "text": "to Amazon Aurora MySQL and\nchange the connection string",
    "start": "228310",
    "end": "231700"
  },
  {
    "text": "within our application server\nwithout other code changes.",
    "start": "231700",
    "end": "235213"
  },
  {
    "text": "We now have a database in a private subnet",
    "start": "236270",
    "end": "238880"
  },
  {
    "text": "with data replicated across\nmultiple availability zones.",
    "start": "238880",
    "end": "242810"
  },
  {
    "text": "We can also scale out the\nweb tier independently.",
    "start": "242810",
    "end": "246193"
  },
  {
    "text": "Now let's focus on users accessing content",
    "start": "248410",
    "end": "251160"
  },
  {
    "text": "from the web tier.",
    "start": "251160",
    "end": "252060"
  },
  {
    "text": "Currently photos are stored\nand served by the EC2 instance.",
    "start": "254000",
    "end": "258579"
  },
  {
    "text": "This is okay, but if we\nneed to add more instances",
    "start": "258580",
    "end": "261769"
  },
  {
    "text": "to scale the application,",
    "start": "261770",
    "end": "263460"
  },
  {
    "text": "we need to ensure the\nphotos are accessible",
    "start": "263460",
    "end": "265500"
  },
  {
    "text": "by all servers through\nsome form of shared storage",
    "start": "265500",
    "end": "268880"
  },
  {
    "text": "or replicated storage.",
    "start": "268880",
    "end": "270403"
  },
  {
    "text": "We also need to ensure\nthat photos are protected",
    "start": "271290",
    "end": "274040"
  },
  {
    "text": "from the loss of a single\ninstance or an availability zone.",
    "start": "274040",
    "end": "277323"
  },
  {
    "text": "Amazon Simple Storage Service, or S3,",
    "start": "279580",
    "end": "282599"
  },
  {
    "text": "is an ideal place for storing",
    "start": "282600",
    "end": "284430"
  },
  {
    "text": "and serving the photo gallery images.",
    "start": "284430",
    "end": "287139"
  },
  {
    "text": "S3 provides 11 lines of durability",
    "start": "287140",
    "end": "290130"
  },
  {
    "text": "and objects are automatically replicated",
    "start": "290130",
    "end": "292470"
  },
  {
    "text": "across multiple availability zones.",
    "start": "292470",
    "end": "295040"
  },
  {
    "text": "Storage capacity is virtually unlimited",
    "start": "295040",
    "end": "297730"
  },
  {
    "text": "as well as being cost effective,",
    "start": "297730",
    "end": "299630"
  },
  {
    "text": "allowing the volume of the images to grow",
    "start": "299630",
    "end": "301930"
  },
  {
    "text": "with usage increases over time.",
    "start": "301930",
    "end": "304242"
  },
  {
    "text": "Amazon S3 can be accessed\nvia HTTP requests,",
    "start": "305370",
    "end": "308850"
  },
  {
    "text": "meaning the application\ncode can be tweaked",
    "start": "308850",
    "end": "311260"
  },
  {
    "text": "to point image upload and\ndownload requests directly to S3,",
    "start": "311260",
    "end": "315510"
  },
  {
    "text": "reducing the demand on the EC2 web server",
    "start": "315510",
    "end": "318350"
  },
  {
    "text": "and improving scalability.",
    "start": "318350",
    "end": "320133"
  },
  {
    "text": "We're going to make one final improvement",
    "start": "321860",
    "end": "323740"
  },
  {
    "text": "to the architecture in this video,",
    "start": "323740",
    "end": "325729"
  },
  {
    "text": "and that's to introduce a caching layer.",
    "start": "325730",
    "end": "328443"
  },
  {
    "text": "Currently the photo application\nis running in an AWS region.",
    "start": "330760",
    "end": "335140"
  },
  {
    "text": "AWS has regions across the world.",
    "start": "335140",
    "end": "338080"
  },
  {
    "text": "However, users may not\nbe geographically close",
    "start": "338080",
    "end": "340949"
  },
  {
    "text": "to the serving region.",
    "start": "340950",
    "end": "342640"
  },
  {
    "text": "This can introduce latency",
    "start": "342640",
    "end": "344570"
  },
  {
    "text": "and is not optimal for user experience.",
    "start": "344570",
    "end": "347703"
  },
  {
    "text": "In addition to regions,",
    "start": "349690",
    "end": "351310"
  },
  {
    "text": "AWS has hundreds of points\nof presence, edge locations,",
    "start": "351310",
    "end": "355290"
  },
  {
    "text": "in 90-plus cities across the world.",
    "start": "355290",
    "end": "358340"
  },
  {
    "text": "Amazon CloudFront is a web service",
    "start": "358340",
    "end": "360860"
  },
  {
    "text": "that speeds up the\ndistribution of your static",
    "start": "360860",
    "end": "363349"
  },
  {
    "text": "and dynamic web content,\nsuch as HTML, CSS,",
    "start": "363350",
    "end": "367580"
  },
  {
    "text": "JavaScript and image files, to the users.",
    "start": "367580",
    "end": "370883"
  },
  {
    "text": "CloudFront delivers content\nthrough these edge locations,",
    "start": "372017",
    "end": "375350"
  },
  {
    "text": "which are often much\ncloser to your end users,",
    "start": "375350",
    "end": "378130"
  },
  {
    "text": "reducing the latency",
    "start": "378130",
    "end": "379700"
  },
  {
    "text": "and improving their\napplication performance.",
    "start": "379700",
    "end": "382003"
  },
  {
    "text": "Back to our architecture diagram.",
    "start": "384030",
    "end": "386870"
  },
  {
    "text": "Let's add in the Amazon CloudFront\ncontent delivery network.",
    "start": "386870",
    "end": "390363"
  },
  {
    "text": "Now end users will be\ndirected to CloudFront.",
    "start": "392300",
    "end": "395720"
  },
  {
    "text": "If content, such as images, is\nalready in the edge location,",
    "start": "395720",
    "end": "399830"
  },
  {
    "text": "it'll be served to the end\nusers with the lowest latency.",
    "start": "399830",
    "end": "403202"
  },
  {
    "text": "This will also reduce the requests",
    "start": "404230",
    "end": "405970"
  },
  {
    "text": "to the EC2 instance and the S3 bucket,",
    "start": "405970",
    "end": "409180"
  },
  {
    "text": "helping improve scalability\nand performance.",
    "start": "409180",
    "end": "412483"
  },
  {
    "text": "Join us in the next video",
    "start": "414310",
    "end": "415940"
  },
  {
    "text": "where we'll look at automatically\nscaling the EC3 instances",
    "start": "415940",
    "end": "419340"
  },
  {
    "text": "and defining the AWS\ninfrastructure resources as code.",
    "start": "419340",
    "end": "423628"
  },
  {
    "text": "(upbeat music continues)",
    "start": "423628",
    "end": "427044"
  }
]