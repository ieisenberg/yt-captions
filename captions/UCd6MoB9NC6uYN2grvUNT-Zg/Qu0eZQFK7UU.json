[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hello my name is Simon Goldberg and I am",
    "start": "240",
    "end": "2879"
  },
  {
    "text": "a blockchain specialist Solutions",
    "start": "2879",
    "end": "4960"
  },
  {
    "text": "architect at",
    "start": "4960",
    "end": "6399"
  },
  {
    "text": "AWS in this video I will show you how to",
    "start": "6399",
    "end": "9639"
  },
  {
    "text": "retrieve a list of event details as the",
    "start": "9639",
    "end": "12120"
  },
  {
    "text": "result of a giving transaction on",
    "start": "12120",
    "end": "14559"
  },
  {
    "text": "blockchain networks such as Bitcoin and",
    "start": "14559",
    "end": "17560"
  },
  {
    "text": "ethereum I will be utilizing Amazon",
    "start": "17560",
    "end": "20119"
  },
  {
    "text": "managed blockchain queries list",
    "start": "20119",
    "end": "22039"
  },
  {
    "text": "transaction events API let's get started",
    "start": "22039",
    "end": "26039"
  },
  {
    "start": "25000",
    "end": "57000"
  },
  {
    "text": "Amazon managed blockchain query also",
    "start": "26039",
    "end": "28679"
  },
  {
    "text": "known as am query quy provide serverless",
    "start": "28679",
    "end": "31679"
  },
  {
    "text": "access to multiple blockchain data sets",
    "start": "31679",
    "end": "34320"
  },
  {
    "text": "through developer friendly apis with amb",
    "start": "34320",
    "end": "37719"
  },
  {
    "text": "query you can more quickly build",
    "start": "37719",
    "end": "39920"
  },
  {
    "text": "applications that need data from various",
    "start": "39920",
    "end": "42320"
  },
  {
    "text": "public blockchains this eliminates the",
    "start": "42320",
    "end": "44840"
  },
  {
    "text": "need for parsing data tracing smart",
    "start": "44840",
    "end": "47559"
  },
  {
    "text": "contracts and managing indexing",
    "start": "47559",
    "end": "50120"
  },
  {
    "text": "infrastructure am query simplifies and",
    "start": "50120",
    "end": "53160"
  },
  {
    "text": "streamlines the process ofing blockchain",
    "start": "53160",
    "end": "56640"
  },
  {
    "text": "information the list transaction events",
    "start": "56640",
    "end": "59440"
  },
  {
    "start": "57000",
    "end": "92000"
  },
  {
    "text": "API",
    "start": "59440",
    "end": "60440"
  },
  {
    "text": "allows you to retrieve transaction",
    "start": "60440",
    "end": "62359"
  },
  {
    "text": "details and event emissions from a given",
    "start": "62359",
    "end": "65320"
  },
  {
    "text": "transaction hash it enables several use",
    "start": "65320",
    "end": "68600"
  },
  {
    "text": "cases such as retrieving events from a",
    "start": "68600",
    "end": "71119"
  },
  {
    "text": "transaction that interacts with an erc20",
    "start": "71119",
    "end": "74000"
  },
  {
    "text": "token contract such as a transfer or a",
    "start": "74000",
    "end": "77240"
  },
  {
    "text": "withdrawal event for example you can",
    "start": "77240",
    "end": "80360"
  },
  {
    "text": "showcase a transaction status like a",
    "start": "80360",
    "end": "82840"
  },
  {
    "text": "deposit or burn event on the user",
    "start": "82840",
    "end": "85240"
  },
  {
    "text": "interface of your application before we",
    "start": "85240",
    "end": "88040"
  },
  {
    "text": "go over a code example let's first go",
    "start": "88040",
    "end": "90720"
  },
  {
    "text": "over to PR resqu steps if you would like",
    "start": "90720",
    "end": "94079"
  },
  {
    "start": "92000",
    "end": "125000"
  },
  {
    "text": "to follow along with this code example",
    "start": "94079",
    "end": "96799"
  },
  {
    "text": "make sure that you have python installed",
    "start": "96799",
    "end": "98680"
  },
  {
    "text": "on your machine additionally install the",
    "start": "98680",
    "end": "101799"
  },
  {
    "text": "latest b23 release via pip you will also",
    "start": "101799",
    "end": "105719"
  },
  {
    "text": "need to install the AWS command line",
    "start": "105719",
    "end": "108799"
  },
  {
    "text": "interface once it is installed you can",
    "start": "108799",
    "end": "111479"
  },
  {
    "text": "run the AWS configure command to set",
    "start": "111479",
    "end": "114680"
  },
  {
    "text": "your region and IM users",
    "start": "114680",
    "end": "117439"
  },
  {
    "text": "credentials make sure that this IM user",
    "start": "117439",
    "end": "120200"
  },
  {
    "text": "has the proper permissions to interact",
    "start": "120200",
    "end": "122520"
  },
  {
    "text": "with the Amazon managed blockchain query",
    "start": "122520",
    "end": "125479"
  },
  {
    "start": "125000",
    "end": "189000"
  },
  {
    "text": "service this python example uses b23 to",
    "start": "125479",
    "end": "129440"
  },
  {
    "text": "send requests to the amb query list",
    "start": "129440",
    "end": "132080"
  },
  {
    "text": "transaction events API this example",
    "start": "132080",
    "end": "135080"
  },
  {
    "text": "retrieves event details for a giving",
    "start": "135080",
    "end": "137280"
  },
  {
    "text": "transaction on the ethereum mainnet to",
    "start": "137280",
    "end": "140200"
  },
  {
    "text": "use v23 you must first import it and",
    "start": "140200",
    "end": "143239"
  },
  {
    "text": "indicate what service you're going to",
    "start": "143239",
    "end": "145280"
  },
  {
    "text": "use after you have created a managed",
    "start": "145280",
    "end": "148040"
  },
  {
    "text": "blockchain query resource you can",
    "start": "148040",
    "end": "150360"
  },
  {
    "text": "specify the API to call and pass in the",
    "start": "150360",
    "end": "153519"
  },
  {
    "text": "relevant parameters in this case a",
    "start": "153519",
    "end": "156360"
  },
  {
    "text": "transaction hash and the network I have",
    "start": "156360",
    "end": "160000"
  },
  {
    "text": "parsed a response from this API into a",
    "start": "160000",
    "end": "162720"
  },
  {
    "text": "more easyto read format let's take a",
    "start": "162720",
    "end": "165720"
  },
  {
    "text": "look at what happens when I run this",
    "start": "165720",
    "end": "167640"
  },
  {
    "text": "code as you can see this event type was",
    "start": "167640",
    "end": "170760"
  },
  {
    "text": "an erc721",
    "start": "170760",
    "end": "172920"
  },
  {
    "text": "transfer and the value was one",
    "start": "172920",
    "end": "175440"
  },
  {
    "text": "indicating that a single nft was",
    "start": "175440",
    "end": "177800"
  },
  {
    "text": "transferred to this specific wallet",
    "start": "177800",
    "end": "180440"
  },
  {
    "text": "address this nft has this contract",
    "start": "180440",
    "end": "183760"
  },
  {
    "text": "address and the ID was",
    "start": "183760",
    "end": "186799"
  },
  {
    "text": "48,000",
    "start": "186799",
    "end": "188959"
  },
  {
    "text": "312 in this second code example I am",
    "start": "188959",
    "end": "192519"
  },
  {
    "start": "189000",
    "end": "209000"
  },
  {
    "text": "retrieving a list of transaction events",
    "start": "192519",
    "end": "194959"
  },
  {
    "text": "for a giving transaction on the Bitcoin",
    "start": "194959",
    "end": "197640"
  },
  {
    "text": "main net like the previous example I am",
    "start": "197640",
    "end": "201080"
  },
  {
    "text": "parsing the output from query's API into",
    "start": "201080",
    "end": "204000"
  },
  {
    "text": "a more easyto read format let's take a",
    "start": "204000",
    "end": "206959"
  },
  {
    "text": "look at what happens when we run this",
    "start": "206959",
    "end": "208599"
  },
  {
    "text": "Cod I as you can see various details",
    "start": "208599",
    "end": "211560"
  },
  {
    "text": "about the transaction events are",
    "start": "211560",
    "end": "213439"
  },
  {
    "text": "returned such as the event type this was",
    "start": "213439",
    "end": "216720"
  },
  {
    "text": "the output of a Bitcoin transaction the",
    "start": "216720",
    "end": "219840"
  },
  {
    "text": "receiving address the value that was",
    "start": "219840",
    "end": "222799"
  },
  {
    "text": "received along with the transaction ID",
    "start": "222799",
    "end": "225560"
  },
  {
    "text": "and the V out",
    "start": "225560",
    "end": "227239"
  },
  {
    "start": "227000",
    "end": "281000"
  },
  {
    "text": "index in conclusion am queries list",
    "start": "227239",
    "end": "231159"
  },
  {
    "text": "transaction events is a powerful API for",
    "start": "231159",
    "end": "234319"
  },
  {
    "text": "any developer working with blockchain",
    "start": "234319",
    "end": "236319"
  },
  {
    "text": "data amb query handles the extricate",
    "start": "236319",
    "end": "239400"
  },
  {
    "text": "process Necessities required to retrieve",
    "start": "239400",
    "end": "241519"
  },
  {
    "text": "blockchain data such as standard events",
    "start": "241519",
    "end": "243920"
  },
  {
    "text": "from networks like Bitcoin and ethereum",
    "start": "243920",
    "end": "246640"
  },
  {
    "text": "that is all for today's video thank you",
    "start": "246640",
    "end": "249159"
  },
  {
    "text": "very much for joining me in this",
    "start": "249159",
    "end": "250760"
  },
  {
    "text": "exploration of amb queries list",
    "start": "250760",
    "end": "253079"
  },
  {
    "text": "transaction events API and how it can be",
    "start": "253079",
    "end": "256120"
  },
  {
    "text": "utilized to retrieve the resulting",
    "start": "256120",
    "end": "258079"
  },
  {
    "text": "events of a giving transaction if there",
    "start": "258079",
    "end": "260799"
  },
  {
    "text": "is a specific event type that you would",
    "start": "260799",
    "end": "262800"
  },
  {
    "text": "like to see supported please let us know",
    "start": "262800",
    "end": "265240"
  },
  {
    "text": "in the comment section below if you are",
    "start": "265240",
    "end": "267759"
  },
  {
    "text": "interested in learning more about am",
    "start": "267759",
    "end": "269720"
  },
  {
    "text": "query please refer to the links in the",
    "start": "269720",
    "end": "272199"
  },
  {
    "text": "description thank you once again and",
    "start": "272199",
    "end": "274639"
  },
  {
    "text": "happy development",
    "start": "274639",
    "end": "278000"
  }
]