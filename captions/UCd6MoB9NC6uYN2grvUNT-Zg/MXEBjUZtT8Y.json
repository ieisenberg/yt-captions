[
  {
    "text": "okay hi good morning everybody welcome this is session IOT 206",
    "start": "2689",
    "end": "9230"
  },
  {
    "text": "computing at the edge with AWS IOT Greengrass my name is Scott Allison I'm a senior technical product manager on",
    "start": "9230",
    "end": "16230"
  },
  {
    "text": "the green grass team and with me is taught to have a cook another senior technical product manager on the green grass team so we'll be covering kind of",
    "start": "16230",
    "end": "22980"
  },
  {
    "text": "at a broad high-level edge computing and how you can do that using AWS IOT green grass just as kind of a side note I",
    "start": "22980",
    "end": "29789"
  },
  {
    "text": "apologize with my voice is a little bit hoarse this morning it is definitely not because I went to reap that last night but I heard it was very nice and I hope",
    "start": "29789",
    "end": "36149"
  },
  {
    "text": "you all had a nice time so let's go ahead and get started so we'll begin by",
    "start": "36149",
    "end": "43290"
  },
  {
    "text": "coming an overview of edge compute and at AWS IOT Greengrass and then we'll get into some of the new features that were",
    "start": "43290",
    "end": "48989"
  },
  {
    "text": "releasing with one-point-seven around simplified deployments enhanced security and greater flexibility so to begin why",
    "start": "48989",
    "end": "59160"
  },
  {
    "text": "do we need edge compute well we talk about it in terms of what we call the three laws there's the law of physics",
    "start": "59160",
    "end": "65158"
  },
  {
    "text": "the speed of light only goes so fast in response time and latency are very important for a lot of mission-critical",
    "start": "65159",
    "end": "71549"
  },
  {
    "text": "applications at the edge self-driving cars manufacturing automation and",
    "start": "71549",
    "end": "77520"
  },
  {
    "text": "monitoring and issue remediation so in industrial environments or oil and gas environments the time between detecting",
    "start": "77520",
    "end": "86009"
  },
  {
    "text": "an anomaly and equipment failure could be seconds and while getting to the cloud is generally pretty fast you want",
    "start": "86009",
    "end": "91650"
  },
  {
    "text": "to have immediate response on-site without having to make a round trip across the internet so we also talk",
    "start": "91650",
    "end": "96960"
  },
  {
    "text": "about the law of economics there's a lot of data that you can collect for my ot sensors and devices gigabytes petabytes",
    "start": "96960",
    "end": "102390"
  },
  {
    "text": "even and moving that stuff to the cloud can be expensive and so you might want to do some processing at the edge gather",
    "start": "102390",
    "end": "109320"
  },
  {
    "text": "things up summarize them filter them or just generate KPIs to send back to the cloud to minimize the amount you spend",
    "start": "109320",
    "end": "114990"
  },
  {
    "text": "transiting data to and from the edge and then there are regulatory requirements the law of the land we talk about things",
    "start": "114990",
    "end": "121110"
  },
  {
    "text": "like HIPAA or FERPA or GPR if you're in the EU and there may be compelling legal",
    "start": "121110",
    "end": "126329"
  },
  {
    "text": "reasons that you want to keep the data on site without transiting it to the cloud so knowing",
    "start": "126329",
    "end": "133720"
  },
  {
    "text": "those things we want to help you enable those edge scenarios to help you get around these three things so what's a",
    "start": "133720",
    "end": "140230"
  },
  {
    "text": "common edge scenario look like well it's pretty straightforward actually you can collect some data from on-premises",
    "start": "140230",
    "end": "146260"
  },
  {
    "text": "devices at the edge temperature sensors or automated devices or home security",
    "start": "146260",
    "end": "152250"
  },
  {
    "text": "appliances you can cache and analyze the data at the edge so for example if",
    "start": "152250",
    "end": "157300"
  },
  {
    "text": "you're monitoring a temperature sensor for days at a time and you only really care when the temperature goes above or below a certain point you can simply",
    "start": "157300",
    "end": "164260"
  },
  {
    "text": "write some logic at the edge to analyze the data and only send data up when it is over or under a certain value and",
    "start": "164260",
    "end": "171870"
  },
  {
    "text": "then finally once you have that data you can perform actions transfer data to cloud services connect to on-premises or",
    "start": "171870",
    "end": "180070"
  },
  {
    "text": "in cloud app or applications and perform actions so a good example of that might be you know I'm collecting that",
    "start": "180070",
    "end": "186610"
  },
  {
    "text": "information from the temperature sensors and when it goes above or below a certain threshold I want to be notified of that so I could connect to SNS using",
    "start": "186610",
    "end": "193360"
  },
  {
    "text": "a device at the edge and send a notification via an SNS topic so I'm alerted when temperatures go above or",
    "start": "193360",
    "end": "199000"
  },
  {
    "text": "below a certain threshold so that's an edge scenario and when we talk about the",
    "start": "199000",
    "end": "204519"
  },
  {
    "text": "edge you're probably thinking yeah that's great edge sounds really nice but isn't that just on-premises computing",
    "start": "204519",
    "end": "209640"
  },
  {
    "text": "decentralized versus centralized computing and that's true and the pendulum kind of swings back and forth",
    "start": "209640",
    "end": "214930"
  },
  {
    "text": "every 10 years but it doesn't necessarily have to be all or nothing you don't have to always be on premises",
    "start": "214930",
    "end": "220209"
  },
  {
    "text": "you don't always have to be in the cloud you can have the best of both worlds and so we try to help that be a possibility",
    "start": "220209",
    "end": "227080"
  },
  {
    "text": "with AWS IOT core you can manage IOT devices from the cloud and transit data",
    "start": "227080",
    "end": "232989"
  },
  {
    "text": "from IOT devices into other AWS services for processing in the cloud but again",
    "start": "232989",
    "end": "238330"
  },
  {
    "text": "we're talking about the edge so what if you don't necessarily want to send everything to the core all the time or you have issues intermittent",
    "start": "238330",
    "end": "244660"
  },
  {
    "text": "connectivity or regulatory requirements that we talked about before things like that let's dive a little bit deeper",
    "start": "244660",
    "end": "250140"
  },
  {
    "text": "right so we'll talk about the edge scenarios here if you only want to",
    "start": "250140",
    "end": "256329"
  },
  {
    "text": "perform that analysis and data data caching at the edge then you might build",
    "start": "256330",
    "end": "261940"
  },
  {
    "text": "yourself a gateway so this cloud with the door in the middle here is a device that could act as a gate the transits data from gateways",
    "start": "261940",
    "end": "268659"
  },
  {
    "text": "on-premises to AWS services so you might be using sage maker to generate machine",
    "start": "268659",
    "end": "274000"
  },
  {
    "text": "learning models and you might be refining that with data that you collect at the edge or you might be using sage maker models pulled down to the edge to",
    "start": "274000",
    "end": "280300"
  },
  {
    "text": "perform image identification or video analysis you might be using i/o to core",
    "start": "280300",
    "end": "285520"
  },
  {
    "text": "for analytics or transiting data to other AWS services you might be using AWS device Defender to ensure that your",
    "start": "285520",
    "end": "291759"
  },
  {
    "text": "devices are properly secured monitor those things over time and you might also be using a to be a",
    "start": "291759",
    "end": "297250"
  },
  {
    "text": "secrets manager to manage the secrets that connect you to your on-premises and third-party applications so the way that",
    "start": "297250",
    "end": "305680"
  },
  {
    "text": "we enable that for you is with AWS IOT Greengrass it's an extension of the AWS",
    "start": "305680",
    "end": "310810"
  },
  {
    "text": "cloud to the edge for IOT applications now we provide a lot of things with the Greengrass platform so local messes",
    "start": "310810",
    "end": "316960"
  },
  {
    "text": "isn't triggers we provide a local MQTT broker that can actually manage MQTT",
    "start": "316960",
    "end": "322419"
  },
  {
    "text": "messages from local devices and into the cloud local actions we talked about that a little bit it's an extension of the",
    "start": "322419",
    "end": "329050"
  },
  {
    "text": "lam to runtime to the edge so that you can write applications in lambda store them in the cloud and deploy them to",
    "start": "329050",
    "end": "334870"
  },
  {
    "text": "edge devices and a format that you're already familiar with data and state sync you can manage IOT device shadows",
    "start": "334870",
    "end": "341830"
  },
  {
    "text": "locally from what on the Greengrass core device security we allow you to encrypt",
    "start": "341830",
    "end": "347289"
  },
  {
    "text": "things with hardware secure elements and ensure that the data you store on the edge devices is secured with AWS grade",
    "start": "347289",
    "end": "353139"
  },
  {
    "text": "security local resource access if you have cameras or temperature sensors industrial devices we allow you to",
    "start": "353139",
    "end": "359710"
  },
  {
    "text": "manage and access those devices from a green graph score for data collection and management and machine learning",
    "start": "359710",
    "end": "364990"
  },
  {
    "text": "inference mentioned this one a little bit before as well you can pull sage maker models down on to the devices and perform ml inference at the edge without",
    "start": "364990",
    "end": "372639"
  },
  {
    "text": "having to go back to the cloud we just announced recently support for sage maker neo you may have seen that as well",
    "start": "372639",
    "end": "377770"
  },
  {
    "text": "and then AWS Greengrass connectors these are prepackaged pieces of functionality",
    "start": "377770",
    "end": "384159"
  },
  {
    "text": "for common edge use cases that you can install without writing code over-the-air updates we allow you to",
    "start": "384159",
    "end": "389740"
  },
  {
    "text": "keep your device up-to-date and current and the severe secure credential storage",
    "start": "389740",
    "end": "394750"
  },
  {
    "text": "if you're using AWS secrets manager it allows you to extend AWS secrets manager to the edge",
    "start": "394750",
    "end": "399880"
  },
  {
    "text": "secure storage and encryption in transit and at rest of Secrets so that's AWS Greengrass at a high level",
    "start": "399880",
    "end": "407140"
  },
  {
    "text": "so why don't we build it well it's gonna be very familiar as I talk through these points because we're talking about local",
    "start": "407140",
    "end": "414220"
  },
  {
    "text": "code execution we want you to be able to perform actions with the edge rapidly to help you with those laws of physics so",
    "start": "414220",
    "end": "420010"
  },
  {
    "text": "you can execute lammed at the edge and perform those actions locally secure connectivity and we just mentioned this",
    "start": "420010",
    "end": "426640"
  },
  {
    "text": "as well we want you to be able to trust that your data is encrypted and stored at with AWS standard security at the",
    "start": "426640",
    "end": "433240"
  },
  {
    "text": "edge ml inference like I said we want you to be able to pull non computationally intensive ml inference",
    "start": "433240",
    "end": "440080"
  },
  {
    "text": "tasks down to the edge so that you can do the work without having to go back to the cloud and local actions and",
    "start": "440080",
    "end": "445180"
  },
  {
    "text": "resources so you can access the file system or cameras to build applications that access the hardware you have",
    "start": "445180",
    "end": "450190"
  },
  {
    "text": "available on-site so local actions so",
    "start": "450190",
    "end": "455560"
  },
  {
    "text": "Greengrass as I said before extends lambda to the edge so that you can build a lambda store it in AWS lambda and",
    "start": "455560",
    "end": "461920"
  },
  {
    "text": "deploy it to the edge by attaching it to a green grass group they run Python 2.7",
    "start": "461920",
    "end": "467700"
  },
  {
    "text": "nodejs or Java and we're looking to expand those runtimes in 2019 and you can invoke lambda functions with",
    "start": "467700",
    "end": "473620"
  },
  {
    "text": "messaging and shadow updates and again we've given some examples of what you might use that for at the edge but you can perform actions that are triggered",
    "start": "473620",
    "end": "480460"
  },
  {
    "text": "by certain scenarios that might occur at the edge we'll talk about local resource",
    "start": "480460",
    "end": "485680"
  },
  {
    "text": "access now like I said you can access local resources on device the file system the cameras you can use things",
    "start": "485680",
    "end": "492160"
  },
  {
    "text": "like GPIO to communicate with other devices and then you can use the local file system to access any data that you",
    "start": "492160",
    "end": "499060"
  },
  {
    "text": "might want to store at the edge and in hardware or in machine learning scenarios you can access GPUs for",
    "start": "499060",
    "end": "504580"
  },
  {
    "text": "hardware acceleration and machine learning tasks so to make all of these",
    "start": "504580",
    "end": "510190"
  },
  {
    "text": "things easier we've released Greengrass version 1.7 and along the way when we",
    "start": "510190",
    "end": "516130"
  },
  {
    "text": "talk about what you do with the edge we're talking about building lambdas securing your environment making sure",
    "start": "516130",
    "end": "521440"
  },
  {
    "text": "that it deploys correctly and build an application that's flexible enough to do the things that you need to do at the edge and with that in mind we're",
    "start": "521440",
    "end": "527680"
  },
  {
    "text": "simplifying deployments with Greengrass connectors which I mentioned before and we'll get a little into in a little more detail in a second",
    "start": "527680",
    "end": "534029"
  },
  {
    "text": "enhanced security AWS IOT Greengrass secrets manager which extends the cloud",
    "start": "534029",
    "end": "539170"
  },
  {
    "text": "version of AWS secrets manager to the edge AWS IOT Greengrass hardware security integration which allows hardware secure",
    "start": "539170",
    "end": "545500"
  },
  {
    "text": "elements to be used on Greengrass devices and greater flexibility so we're talking about per lambda isolation and",
    "start": "545500",
    "end": "552100"
  },
  {
    "text": "permission configurations my colleague talked to you on I will talk about that as well so there's some things that we",
    "start": "552100",
    "end": "558759"
  },
  {
    "text": "won't cover in the session but I want to mention here that are part of 1.7 we've added the ability to perform bulk",
    "start": "558759",
    "end": "563949"
  },
  {
    "text": "deployments via API so if you have multiple Greengrass groups you can perform deployments to multiple of them",
    "start": "563949",
    "end": "569560"
  },
  {
    "text": "at once with a single API call a LPN and proxy support if you have limited network availability or you have IT",
    "start": "569560",
    "end": "577029"
  },
  {
    "text": "requirements that require you to operate behind a firewall or use a proxy we have support for that in Greengrass now and",
    "start": "577029",
    "end": "582610"
  },
  {
    "text": "mo inference as I mentioned before we've added support for stage maker neo and the mo inference connectors available in",
    "start": "582610",
    "end": "589600"
  },
  {
    "text": "green grass as well so now I've kind of given the little overview of 1.7 let's talk about the simplified deployments",
    "start": "589600",
    "end": "595810"
  },
  {
    "text": "piece AWS IOT Greengrass connectors what are they so as I mentioned before when",
    "start": "595810",
    "end": "602620"
  },
  {
    "text": "we talk to customers what we heard was that there are a lot of common use cases that people did over and over again",
    "start": "602620",
    "end": "607870"
  },
  {
    "text": "communicating to cloud services for building things like notification through SNS like I mentioned earlier or aggregating data or connecting to",
    "start": "607870",
    "end": "614110"
  },
  {
    "text": "on-premises applications or even talking to things that use specific industrial protocols like Modbus so we want we",
    "start": "614110",
    "end": "621069"
  },
  {
    "text": "wanted to do there was to give you a way to build those applications at the edge without having to write the same lambda functions over and over again and so",
    "start": "621069",
    "end": "628569"
  },
  {
    "text": "what we built was a set of 11 connectors that connect to 8 popular AWS services",
    "start": "628569",
    "end": "633610"
  },
  {
    "text": "and three popular third-party offerings so we've had things like konista state a",
    "start": "633610",
    "end": "638949"
  },
  {
    "text": "fire hose for doing data analytics IOT device defender so you can secure your devices easily and the mo inference",
    "start": "638949",
    "end": "646600"
  },
  {
    "text": "connectors that I mentioned earlier we also have Raspberry Pi GPIO and the protocol adapter for Modbus and if",
    "start": "646600",
    "end": "653319"
  },
  {
    "text": "you're using Twilio Splunk or service now's metric base we provide connectors to all of those applications as well so",
    "start": "653319",
    "end": "659139"
  },
  {
    "text": "that you can work with them we're not done xi is not a lot of connectors to start with I know but in 2019 we're",
    "start": "659139",
    "end": "665559"
  },
  {
    "text": "going to to work with our partners to add more of them we're gonna be working with Intel to integrate with our open vino toolkit",
    "start": "665559",
    "end": "671390"
  },
  {
    "text": "for machine learning on x86 devices I'll be working with Nvidia on their deep stream SDK if you're using the Jetson",
    "start": "671390",
    "end": "677450"
  },
  {
    "text": "platform that should help you there in OSI if you're using an industrial historian from them we'll be working",
    "start": "677450",
    "end": "683030"
  },
  {
    "text": "with them to provide a connector that allows you to use green grass to work directly with OSI is offering and in",
    "start": "683030",
    "end": "688040"
  },
  {
    "text": "addition to that and it's not on this slide we want to talk a little bit about how we're going to allow you to modify",
    "start": "688040",
    "end": "693170"
  },
  {
    "text": "the connectors in case they don't necessarily suit your use case we'll be adding that capability in 2019 as well",
    "start": "693170",
    "end": "698960"
  },
  {
    "text": "and finally if you want to build your own connectors then you should be able to we know that the customer use cases",
    "start": "698960",
    "end": "706250"
  },
  {
    "text": "we'll see we can't know everything you guys are the true source of truth about that so we want you to be able to build your own",
    "start": "706250",
    "end": "711500"
  },
  {
    "text": "connectors and we'll provide that capacity in 2019 as well so that's the",
    "start": "711500",
    "end": "717290"
  },
  {
    "text": "overview how does it work luckily it's pretty straightforward and I only really need one slide to explain that you go",
    "start": "717290",
    "end": "723650"
  },
  {
    "text": "into green grass in the console you'll see a new section called connectors when you look at that section you'll see a",
    "start": "723650",
    "end": "729080"
  },
  {
    "text": "list of all the available connectors that you can install you can click one of them hit next it'll take you to a",
    "start": "729080",
    "end": "734930"
  },
  {
    "text": "configuration screen where you'll configure the connector by filling out some parameters without writing any code attach that to a green grass group and",
    "start": "734930",
    "end": "741620"
  },
  {
    "text": "deploy it so let's look at a couple of examples really quickly just to give you",
    "start": "741620",
    "end": "747890"
  },
  {
    "text": "an idea of what that might look like so Amazon SNS I've mentioned this a couple of times now it's pretty straightforward",
    "start": "747890",
    "end": "753920"
  },
  {
    "text": "to configure this all you have to do is go into SNS and create a new topic once you've created that new topic get",
    "start": "753920",
    "end": "759860"
  },
  {
    "text": "the AR n for that topic come back to green grass try to install this connector and when it asks you for the",
    "start": "759860",
    "end": "765380"
  },
  {
    "text": "air and paste it in when you hit when you deploy it to the group it creates an mqtt topic of its own and you can talk",
    "start": "765380",
    "end": "772610"
  },
  {
    "text": "to that connector directly via mqtt anything you send to that topic will be emitted to the SNS topic we'll send you",
    "start": "772610",
    "end": "778460"
  },
  {
    "text": "a notification you can do all of that without writing any code at all but let's say for example you don't use SNS",
    "start": "778460",
    "end": "784550"
  },
  {
    "text": "you use pull here for notifications okay that's fine you can use Twilio as well we have a connector for that so it's",
    "start": "784550",
    "end": "790640"
  },
  {
    "text": "much the same configuration experience that you would have using SNS just a few extra steps so you're going to have to",
    "start": "790640",
    "end": "797360"
  },
  {
    "text": "add a secret which would be your auth token for Twilio two secrets manager and then once",
    "start": "797360",
    "end": "802809"
  },
  {
    "text": "you've added it two secrets manager it's a configurable parameter here you'll attach that to this particular",
    "start": "802809",
    "end": "808329"
  },
  {
    "text": "connector then specify the phone number and account s ID for the Twilio account you're using and deploy and then it",
    "start": "808329",
    "end": "814359"
  },
  {
    "text": "creates the mqtt topic as well sending a message to it on that MQTT topic sends you a notification via Twilio so that's",
    "start": "814359",
    "end": "821649"
  },
  {
    "text": "it it's straightforward you just configure and install you can do it via the console or the API or CLI and",
    "start": "821649",
    "end": "827169"
  },
  {
    "text": "they're all available today for you to try out so we'll talk a little bit about enhanced security now I mentioned before",
    "start": "827169",
    "end": "835509"
  },
  {
    "text": "that we are extending secrets manager to the edge on green grass and so we're got what we call a ws IOT green grass",
    "start": "835509",
    "end": "841809"
  },
  {
    "text": "secrets manager now it manifests itself in a fairly simple way if you're already using AWS secrets manager to maintain or",
    "start": "841809",
    "end": "848859"
  },
  {
    "text": "manage your secrets you know passwords keys credentials configurations endpoints things like",
    "start": "848859",
    "end": "853929"
  },
  {
    "text": "that those secrets that you're managing will just show up as available resources",
    "start": "853929",
    "end": "859029"
  },
  {
    "text": "inside green grass that you can attach to a group lambdas and connectors can both use these secret type resources and",
    "start": "859029",
    "end": "865149"
  },
  {
    "text": "once they're deployed they're encrypted in transit and at rest you can also use this and configure it in conjunction",
    "start": "865149",
    "end": "870669"
  },
  {
    "text": "with a hardware secure element to keep that encrypted using your own hardware",
    "start": "870669",
    "end": "877829"
  },
  {
    "text": "so how does that actually work well like I said it's pretty straightforward",
    "start": "877829",
    "end": "882999"
  },
  {
    "text": "you go into the console open up the resources pane a new resource type secret is available it'll ask you which",
    "start": "882999",
    "end": "889269"
  },
  {
    "text": "secret you want to attach you attach it deploy and it's now available for use by lambdas and connectors so that's the",
    "start": "889269",
    "end": "897429"
  },
  {
    "text": "first part of security and we've heard a little bit about the simplified deployments now to talk about some of the other security features we're adding",
    "start": "897429",
    "end": "902649"
  },
  {
    "text": "in 1.7 I want to invite Tatiana Cooke to the stage to tell you about them thanks",
    "start": "902649",
    "end": "908128"
  },
  {
    "text": "great and thanks to Scott for providing an overview of a lot of the capabilities that AWS Greengrass allows you to bring",
    "start": "914879",
    "end": "922059"
  },
  {
    "text": "from the cloud to your edge device of course when you do that you probably",
    "start": "922059",
    "end": "927129"
  },
  {
    "text": "have questions about how Greengrass can also ensure the security of whatever IOT ed use case you have so I'll talk first",
    "start": "927129",
    "end": "933249"
  },
  {
    "text": "about our existing security model and then a little bit about the hardware security integration feature that we",
    "start": "933249",
    "end": "938529"
  },
  {
    "text": "just announced that will help make your security architecture at the edge even more secure Greengrass now provides",
    "start": "938529",
    "end": "945459"
  },
  {
    "text": "several tools that allow you to keep the messages and data that you're capturing at the edge private and inaccessible to",
    "start": "945459",
    "end": "951790"
  },
  {
    "text": "any rogue agents who might want to interfere with it we provide MQTT messaging between the",
    "start": "951790",
    "end": "957459"
  },
  {
    "text": "core in the cloud that uses TLS encryption so private public key pair is",
    "start": "957459",
    "end": "962589"
  },
  {
    "text": "provided to your Greengrass core device that it uses to encrypt and decrypt messages we also use iam roles in the",
    "start": "962589",
    "end": "970209"
  },
  {
    "text": "cloud identity and access management roles to make sure that when you do connect to the cloud your Greengrass core device only has access to the",
    "start": "970209",
    "end": "976689"
  },
  {
    "text": "lambdas and resources in the cloud that you want to give it access to as part of",
    "start": "976689",
    "end": "981790"
  },
  {
    "text": "this our customers use certificates both on their Greengrass score device and on",
    "start": "981790",
    "end": "986949"
  },
  {
    "text": "devices at the edge so this capability is great because it not only provides protection for information that you're",
    "start": "986949",
    "end": "992559"
  },
  {
    "text": "sending between your Greengrass core running locally in the cloud but also between the Greengrass core and any edge devices that you're connecting with so",
    "start": "992559",
    "end": "999429"
  },
  {
    "text": "even in an offline environment where you don't have a connection between the core and the cloud the messages sent between",
    "start": "999429",
    "end": "1004559"
  },
  {
    "text": "your core and local edge devices are kept secure and the acts 509 certificates that you have present on",
    "start": "1004559",
    "end": "1010319"
  },
  {
    "text": "the core and edge device are used for authentication to make sure that when you're establishing connections each",
    "start": "1010319",
    "end": "1015420"
  },
  {
    "text": "device is identified and authorized correctly however we also hear from many",
    "start": "1015420",
    "end": "1020759"
  },
  {
    "text": "customers that they want to have a Greengrass core device that's running on the edge in a physically unsecured",
    "start": "1020759",
    "end": "1025980"
  },
  {
    "text": "location for example they might want to put a Greengrass core device on a smart cart that's free and driving around in",
    "start": "1025980",
    "end": "1032370"
  },
  {
    "text": "the world and you would have different customers using the car but you want to have some sort of gateway running there locally with green grass on it you might",
    "start": "1032370",
    "end": "1040409"
  },
  {
    "text": "want to install a smart HVAC system in an office building a hoss or another location and well you put",
    "start": "1040409",
    "end": "1047240"
  },
  {
    "text": "your Greengrass gateway device in a closet a lot of different people who are running around at that location might be",
    "start": "1047240",
    "end": "1053090"
  },
  {
    "text": "able to get access to it finally you could want to do image processing at the",
    "start": "1053090",
    "end": "1058100"
  },
  {
    "text": "edge for example at a large conference like this one where you have more than 50,000 people present and while you may",
    "start": "1058100",
    "end": "1064190"
  },
  {
    "text": "have great security in place it can be difficult to guarantee that no one will be able to access physical Hardware at",
    "start": "1064190",
    "end": "1069470"
  },
  {
    "text": "the edge and interfere with that in some way so I'll talk more specifically about how Greengrass hardware security",
    "start": "1069470",
    "end": "1074690"
  },
  {
    "text": "integration is helping customers with two of these use cases what we've done",
    "start": "1074690",
    "end": "1080809"
  },
  {
    "text": "is introduced an integration using the pkcs 11 API interface that allows the",
    "start": "1080809",
    "end": "1086929"
  },
  {
    "text": "green grass court to make calls down to a hardware secure element designed by one of our several large partners this",
    "start": "1086929",
    "end": "1093530"
  },
  {
    "text": "secure element is tamper proof so that means that if you have someone who's trying to interfere with the element and",
    "start": "1093530",
    "end": "1098540"
  },
  {
    "text": "access information on it it will prevent that information from being shared and",
    "start": "1098540",
    "end": "1104020"
  },
  {
    "text": "ensure that if you have a private key that's stored on that secure element even if someone has physical access to",
    "start": "1104020",
    "end": "1109580"
  },
  {
    "text": "the device and can get into the file system they can't access the private key that's being used for encryption and decryption itself this is great because",
    "start": "1109580",
    "end": "1117800"
  },
  {
    "text": "it works with many different kinds of secure element hardware and I'll dig into that a little bit later but for you",
    "start": "1117800",
    "end": "1123740"
  },
  {
    "text": "to take advantage of this if you already have something like an intel TPM 2.0 a sim key that you might be using with",
    "start": "1123740",
    "end": "1129620"
  },
  {
    "text": "your raspberry pi by deploying a firmware update you'll be able to make calls down to a private key that is",
    "start": "1129620",
    "end": "1134720"
  },
  {
    "text": "generated and stored on that element so it never has to leave that elements environment as I was saying earlier",
    "start": "1134720",
    "end": "1142929"
  },
  {
    "text": "building automation for HVAC systems brings many risks and some of you may",
    "start": "1142929",
    "end": "1148580"
  },
  {
    "text": "know that the source of the target data security breach was actually an HVAC system so in many cases whether that's",
    "start": "1148580",
    "end": "1154040"
  },
  {
    "text": "for a building where a lot of people are moving around or in this illustration a hospital there are several different",
    "start": "1154040",
    "end": "1159320"
  },
  {
    "text": "points of entry that could put your entire system at risk if you're using IOT there's spoofing where you might",
    "start": "1159320",
    "end": "1165740"
  },
  {
    "text": "want to mimic the identity of a valid device that is allowed to make connections to your network man-in-the-middle attacks where",
    "start": "1165740",
    "end": "1171140"
  },
  {
    "text": "information is intercepted and manipulated in some way or denial of service attacks where you overload your",
    "start": "1171140",
    "end": "1177110"
  },
  {
    "text": "cloud system sending a very high volume of traffic Greengrass is great because as you build",
    "start": "1177110",
    "end": "1182660"
  },
  {
    "text": "out your IOT use case our team has developed features that help mitigate the risks associated with each of these",
    "start": "1182660",
    "end": "1188420"
  },
  {
    "text": "types of attacks specifically with hardware security integration we use",
    "start": "1188420",
    "end": "1194480"
  },
  {
    "text": "Hardware root of trust identity for Greengrass core devices by integrating with those two care elements and that",
    "start": "1194480",
    "end": "1199520"
  },
  {
    "text": "means that even if someone gains physical control of your gateway device they can't access a private key in the file system because that private key has",
    "start": "1199520",
    "end": "1206420"
  },
  {
    "text": "been generated and is only accessible in the secure element itself for the man-in-the-middle attacks using",
    "start": "1206420",
    "end": "1212929"
  },
  {
    "text": "transport layer security for communication between the court and the cloud means that even if somebody can",
    "start": "1212929",
    "end": "1218000"
  },
  {
    "text": "intercept a message it's encrypted in such a way that they won't be able to access information being sent finally for denial of service as I",
    "start": "1218000",
    "end": "1225080"
  },
  {
    "text": "mentioned earlier only registered devices can connect to the Greengrass IOT core so only devices that you've",
    "start": "1225080",
    "end": "1231440"
  },
  {
    "text": "given access to and that have the right certificate present are able to establish that connection all now",
    "start": "1231440",
    "end": "1238760"
  },
  {
    "text": "unpacking use case that will be salient for many of you I have gone back and",
    "start": "1238760",
    "end": "1243860"
  },
  {
    "text": "forth between the Venetian and the Aria so many times over the course of this week and every time I go to leave and",
    "start": "1243860",
    "end": "1249049"
  },
  {
    "text": "I'm running a little bit late for a meeting don't tell my boss I have to decide whether I'm gonna power walk down",
    "start": "1249049",
    "end": "1254330"
  },
  {
    "text": "the strip or grab one of the shuttles and this new transportation service was",
    "start": "1254330",
    "end": "1259490"
  },
  {
    "text": "introduced last year at AWS so coming into this year we knew that it was really important for us to be able to",
    "start": "1259490",
    "end": "1264500"
  },
  {
    "text": "tell attendees how long a shuttle might take and we started talking with the",
    "start": "1264500",
    "end": "1270110"
  },
  {
    "text": "Protective Services team because they were interested interested in introducing a feature that would allow",
    "start": "1270110",
    "end": "1275210"
  },
  {
    "text": "customers to know how long it would take for a shuttle to get from point A to point B one of the things that we're",
    "start": "1275210",
    "end": "1281690"
  },
  {
    "text": "really excited about as a team is that by working with Protective Services we gave them access to our hardware",
    "start": "1281690",
    "end": "1287030"
  },
  {
    "text": "security integration capability to help make sure that information they were capturing to inform their shuttle information their shuttle time",
    "start": "1287030",
    "end": "1293450"
  },
  {
    "text": "productions stayed secure the way their team is doing this is by measuring shuttle queues so many of you might have",
    "start": "1293450",
    "end": "1300410"
  },
  {
    "text": "kind of walked down the arrow paths as you were getting onto shuttles at reinvent and part of the reason that we",
    "start": "1300410",
    "end": "1306080"
  },
  {
    "text": "had that physical infrastructure in place was to guide you such that we could count how many people",
    "start": "1306080",
    "end": "1311180"
  },
  {
    "text": "we're entering and exiting shuttle lines and combining that information with how long it was taking buses to get from A",
    "start": "1311180",
    "end": "1316310"
  },
  {
    "text": "to B we were able to accurately predict how long your transportation might take now there are a few things that come",
    "start": "1316310",
    "end": "1322250"
  },
  {
    "text": "with that first of all we wanted to make sure that we weren't saving the beautiful shots of the back of your head",
    "start": "1322250",
    "end": "1328040"
  },
  {
    "text": "we were capturing for privacy reasons and because we didn't necessarily need to store all of that information so the",
    "start": "1328040",
    "end": "1333470"
  },
  {
    "text": "edge cameras themselves were actually doing some processing and just providing in and out data that in and out data was",
    "start": "1333470",
    "end": "1339920"
  },
  {
    "text": "streamed to a logic supply box that was running greengrass and that logic supply was box was hardware that this team had",
    "start": "1339920",
    "end": "1347060"
  },
  {
    "text": "already had that had an Intel TPM 2.0 trusted platform module secure element",
    "start": "1347060",
    "end": "1352250"
  },
  {
    "text": "we worked with their team to integrate with their green graphs at the edge to",
    "start": "1352250",
    "end": "1358670"
  },
  {
    "text": "make sure that they could use the TPM equipment that they already had for the private storage of that key once that",
    "start": "1358670",
    "end": "1364820"
  },
  {
    "text": "private key was stored in the secret element their team felt confident about sending that encrypted data from those",
    "start": "1364820",
    "end": "1370550"
  },
  {
    "text": "edge supply logical logic supply boxes which are really small so it would be easy for someone to grab and put in",
    "start": "1370550",
    "end": "1375620"
  },
  {
    "text": "their pocket up to the IOT core in the cloud and to an API gateway that gateway",
    "start": "1375620",
    "end": "1381140"
  },
  {
    "text": "was then used to generate the times that you saw on your app we're really excited about this use case because we think",
    "start": "1381140",
    "end": "1386570"
  },
  {
    "text": "that it highlights a lot of the great capabilities of green grass you can aggregate information at the edge and",
    "start": "1386570",
    "end": "1392060"
  },
  {
    "text": "pre process that for example understanding how many people are moving in and out of lines then take advantage",
    "start": "1392060",
    "end": "1397160"
  },
  {
    "text": "of security capabilities our team has already built to got that information safely up to the cloud to drive",
    "start": "1397160",
    "end": "1402770"
  },
  {
    "text": "applications that deliver real values for real value for customers so I was able to get here in time for this",
    "start": "1402770",
    "end": "1408230"
  },
  {
    "text": "session because I knew how long the shuttle was would take and felt confident taking that method of transportation now that you're amped up",
    "start": "1408230",
    "end": "1417770"
  },
  {
    "text": "about hardware security integration I'll tell you a little bit about how to get started first of all you can work with",
    "start": "1417770",
    "end": "1425630"
  },
  {
    "text": "many of the secure element vendors that we've integrated with and follow their directions for generating a private key",
    "start": "1425630",
    "end": "1430850"
  },
  {
    "text": "on your secure element like I said earlier this works with existing equipment that you have already so if",
    "start": "1430850",
    "end": "1436340"
  },
  {
    "text": "you're sitting out there thinking about secure elements who have sitting in the field maybe unused on your green green",
    "start": "1436340",
    "end": "1441950"
  },
  {
    "text": "grass Gateway device please generate your pride key using their protocols and then",
    "start": "1441950",
    "end": "1447020"
  },
  {
    "text": "update your AWS IOT Greengrass configurations this is a fairly simple change to your config JSON file to point",
    "start": "1447020",
    "end": "1453950"
  },
  {
    "text": "towards the private key rather in the secure element rather than in the file system where you might have pointed",
    "start": "1453950",
    "end": "1459410"
  },
  {
    "text": "towards it in the past you'll need to make sure that your certificates are authenticated correctly but once this is",
    "start": "1459410",
    "end": "1464870"
  },
  {
    "text": "in place we've taken care of all of the API integration so it's easy to communicate down and make calls to access that private key finally as Scott",
    "start": "1464870",
    "end": "1473510"
  },
  {
    "text": "mentioned we have an integration with our new Greengrass secrets manager capability I'm sure that once you bring",
    "start": "1473510",
    "end": "1479330"
  },
  {
    "text": "your secrets down to the edge for use in other applications and connectors you'll want to make sure that those are secure",
    "start": "1479330",
    "end": "1484550"
  },
  {
    "text": "as secure as possible and we support pkcs 11 encryption and decryption of those secrets again taking advantage of",
    "start": "1484550",
    "end": "1491450"
  },
  {
    "text": "the secure element present on your hardware so we've done the heavy lifting to make sure that you're able to use the",
    "start": "1491450",
    "end": "1496790"
  },
  {
    "text": "best hardware possible for this capability we're excited to be launching",
    "start": "1496790",
    "end": "1503180"
  },
  {
    "text": "this in collaboration with a series of partners who we've worked with to have the integration available already so",
    "start": "1503180",
    "end": "1509380"
  },
  {
    "text": "we're glad to say that we worked with Intel Logic supply microchip Infineon",
    "start": "1509380",
    "end": "1514550"
  },
  {
    "text": "and XP stmicroelectronics Sora comm vitro yubico and zimba so if you have",
    "start": "1514550",
    "end": "1521330"
  },
  {
    "text": "equipment from any of these vendors they're all posting information about how their side of the integration works",
    "start": "1521330",
    "end": "1526520"
  },
  {
    "text": "and that is going to be accessible to our new partner device catalog so if you",
    "start": "1526520",
    "end": "1533390"
  },
  {
    "text": "are excited to add more security to your existing IOT architecture you can search for HSI and find a series of qualified",
    "start": "1533390",
    "end": "1541280"
  },
  {
    "text": "devices that our team has worked on to ensure that they'll work correctly at the edge each of these device pages will",
    "start": "1541280",
    "end": "1547070"
  },
  {
    "text": "also include information about what the vendors recommend in terms of this security integration piece how to",
    "start": "1547070",
    "end": "1552650"
  },
  {
    "text": "generate private keys a bunch of partners have engineers who are writing blog posts about their experience going",
    "start": "1552650",
    "end": "1558500"
  },
  {
    "text": "through the integration so there's a lot of documentation that's already available about this of course we're",
    "start": "1558500",
    "end": "1565430"
  },
  {
    "text": "always interested in working with new partners so if you're a partner in the audience and you're hearing about this",
    "start": "1565430",
    "end": "1571040"
  },
  {
    "text": "and think that you'd like to do an integration as well we encourage you to check out our AWS IOT device tester",
    "start": "1571040",
    "end": "1577370"
  },
  {
    "text": "tooling if you're a customer and you also want to start testing your devices to figure out if they're Greengrass compatible",
    "start": "1577370",
    "end": "1582899"
  },
  {
    "text": "this tool is publicly available and again there's documentation that will help you work through that process there",
    "start": "1582899",
    "end": "1590129"
  },
  {
    "text": "is a lot packed in here so happy to answer questions and please do reach out if you're a partner and you'd like to get your hardware qualified for this new",
    "start": "1590129",
    "end": "1596820"
  },
  {
    "text": "capability great so we've talked about a lot so far and I'll end with a quick",
    "start": "1596820",
    "end": "1604259"
  },
  {
    "text": "note about greater flexibility that we're introducing for Greengrass today",
    "start": "1604259",
    "end": "1609590"
  },
  {
    "text": "since we developed Greengrass we've heard from customers who want to take advantage of Greengrass in many",
    "start": "1609590",
    "end": "1614970"
  },
  {
    "text": "different kinds of environments for example they might be interested in running green grass in a docker",
    "start": "1614970",
    "end": "1620519"
  },
  {
    "text": "container they might want to run green grass in an environment where there are fewer dependencies and they don't have",
    "start": "1620519",
    "end": "1627000"
  },
  {
    "text": "to make kernel-level changes to get green grass up and running finally customers might be running on devices",
    "start": "1627000",
    "end": "1632789"
  },
  {
    "text": "where they want access to different kinds of local resources like Bluetooth Low Energy devices or USB devices that",
    "start": "1632789",
    "end": "1638580"
  },
  {
    "text": "don't have a fixed file path we're excited to announce today that we're",
    "start": "1638580",
    "end": "1643830"
  },
  {
    "text": "making it much easier for you to get up and started with green graphs by introducing new permission and isolation",
    "start": "1643830",
    "end": "1650100"
  },
  {
    "text": "configurations so that if you have a bunch of applications running side by side and docker containers on whatever",
    "start": "1650100",
    "end": "1656039"
  },
  {
    "text": "on-premise device you're using you can simply to put to play green grass to run alongside of all of those in its own",
    "start": "1656039",
    "end": "1662009"
  },
  {
    "text": "docker container we're making this possible by introducing two new modes",
    "start": "1662009",
    "end": "1667320"
  },
  {
    "text": "that you can use to run your Greengrass software today AWS IOT Greengrass provides the benefits",
    "start": "1667320",
    "end": "1673889"
  },
  {
    "text": "of security and isolation that come with running each Greengrass lambda in its own container and customers really like",
    "start": "1673889",
    "end": "1680879"
  },
  {
    "text": "this it makes it easy for you to run a lot of lambdas side by side develop those independently you can set memory",
    "start": "1680879",
    "end": "1686789"
  },
  {
    "text": "limits at a per lambda level so that you're not consuming too many resources as Scott mentioned we also have device",
    "start": "1686789",
    "end": "1692940"
  },
  {
    "text": "resource access through device resources that you can access through local resource access and we solve a lot of",
    "start": "1692940",
    "end": "1698700"
  },
  {
    "text": "the difficulties of communicating from an application inside a containerized environment to a local resource with",
    "start": "1698700",
    "end": "1704610"
  },
  {
    "text": "that capability however we're all about giving customers the flexibility to try different things",
    "start": "1704610",
    "end": "1710150"
  },
  {
    "text": "we have two new modes you can test the first one is the ability to run green grass as an OS process so that lambdas",
    "start": "1710150",
    "end": "1717560"
  },
  {
    "text": "and the green grass group itself where you have underlying system lambdas doing some functions no longer have isolation",
    "start": "1717560",
    "end": "1724070"
  },
  {
    "text": "that means that they can directly access devices vise resources and your underlying operating system and hardware",
    "start": "1724070",
    "end": "1729620"
  },
  {
    "text": "so this is what allows you to run green graphs inside of a docker container or another containerized environment we've kind of",
    "start": "1729620",
    "end": "1735170"
  },
  {
    "text": "stripped that layer out and you can choose whether you want to bring that to the edge the second option you'll have is what we",
    "start": "1735170",
    "end": "1742400"
  },
  {
    "text": "call hybrid mode where you can mix isolated lambdas and lambdas running as OS processes this is great because maybe",
    "start": "1742400",
    "end": "1749360"
  },
  {
    "text": "for the vast majority of the functions that you want to pull down to the edge you want to keep those isolated and you want to have the benefits of the green",
    "start": "1749360",
    "end": "1755990"
  },
  {
    "text": "grass provided containerized environment however for one or two of your lambdas you might want to communicate with a",
    "start": "1755990",
    "end": "1762020"
  },
  {
    "text": "local ble device or have some other capability that requires you to access underlying resources that you can't get",
    "start": "1762020",
    "end": "1768350"
  },
  {
    "text": "to with local resource access so we're excited to give you the perl lambda",
    "start": "1768350",
    "end": "1773740"
  },
  {
    "text": "configuration to choose whether or not you want container isolation for your lambdas this is easy to do you can flip",
    "start": "1773740",
    "end": "1782960"
  },
  {
    "text": "this capability on and off at the group level and here I've shown a shot of where you're able to do that in the",
    "start": "1782960",
    "end": "1788090"
  },
  {
    "text": "console you can also go in and have the granularity on a per lambda level to make a decision about what kind of",
    "start": "1788090",
    "end": "1793850"
  },
  {
    "text": "environment you want your lambdas to run in we've also introduced new permission",
    "start": "1793850",
    "end": "1801170"
  },
  {
    "text": "capabilities so for those of you who are familiar with Greengrass prior to this week we provided one user and group ID",
    "start": "1801170",
    "end": "1808130"
  },
  {
    "text": "that you could run with GGC user and GGC group now on a per lambda basis you can choose to run lambdas with different",
    "start": "1808130",
    "end": "1814490"
  },
  {
    "text": "permissions perhaps you have a function that you want to run with more restrictive permissions or you want to",
    "start": "1814490",
    "end": "1819860"
  },
  {
    "text": "give one or two different functions the ability to run this route be careful with this one but we also",
    "start": "1819860",
    "end": "1824900"
  },
  {
    "text": "trust you is very intelligent customers so kind of used with caution but what's",
    "start": "1824900",
    "end": "1831710"
  },
  {
    "text": "great about this is again you're going to have more granular control over the way that your different lambda functions",
    "start": "1831710",
    "end": "1836750"
  },
  {
    "text": "on the edge interact with each other and the underlying operating system and hardware that you have in place",
    "start": "1836750",
    "end": "1843559"
  },
  {
    "text": "as a quick note actually going back to this slide one other note here we don't",
    "start": "1843559",
    "end": "1848749"
  },
  {
    "text": "currently support machine learning and connectors to run in no container mode so just be aware of that when you're",
    "start": "1848749",
    "end": "1854029"
  },
  {
    "text": "getting started but that's something that we're going to be working on in 2019 finally and to end on like a high",
    "start": "1854029",
    "end": "1861139"
  },
  {
    "text": "energy note hopefully a lot of people who've tried Greengrass will be excited about this because you can run Greengrass inside of docker you can now",
    "start": "1861139",
    "end": "1868549"
  },
  {
    "text": "run green grass in a docker container on Mac OS 10 or on Windows 10 so our team's",
    "start": "1868549",
    "end": "1874730"
  },
  {
    "text": "really excited about this we think it's going to make it way easier for you to get started with green grass and as part",
    "start": "1874730",
    "end": "1880639"
  },
  {
    "text": "of this we have released a green grass docker image and docker file with information about how to create your own",
    "start": "1880639",
    "end": "1886399"
  },
  {
    "text": "docker image on our page so if you have questions about that please let me know",
    "start": "1886399",
    "end": "1891409"
  },
  {
    "text": "but we're excited to see what people can do with that really really easy to get from start to having green grass running",
    "start": "1891409",
    "end": "1897110"
  },
  {
    "text": "a container now I'll quickly recap what we've talked about for this specific",
    "start": "1897110",
    "end": "1903529"
  },
  {
    "text": "release and then Scott and I will hopefully get some great questions from you guys about green grasses existing and new capabilities to get started with",
    "start": "1903529",
    "end": "1911509"
  },
  {
    "text": "simplified deployments using green grass connectors you can try it from the console so for the 11 connectors that",
    "start": "1911509",
    "end": "1917360"
  },
  {
    "text": "Scott mentioned we have documentation available and it's really easy with no coding required to get these connectors",
    "start": "1917360",
    "end": "1922789"
  },
  {
    "text": "running in your green grass core environment we have these enhanced security features if you want to use",
    "start": "1922789",
    "end": "1929119"
  },
  {
    "text": "secrets manager you can attach secrets to your green grass group as a resource from the console before deploying and we",
    "start": "1929119",
    "end": "1936710"
  },
  {
    "text": "encourage you to check out our device qualification portal to learn more about Hardware where you can introduce root of",
    "start": "1936710",
    "end": "1942320"
  },
  {
    "text": "trust security for green grass finally given this Nupur lambda isolation and",
    "start": "1942320",
    "end": "1948799"
  },
  {
    "text": "permission capability we would love for you to try our docker file we have documentation about how to get started",
    "start": "1948799",
    "end": "1955369"
  },
  {
    "text": "with that so test it out let us know what you think and hopefully a lot of you will be running green grass in all different",
    "start": "1955369",
    "end": "1961100"
  },
  {
    "text": "kinds of environment whether that's your laptop or a Raspberry Pi or a huge server you have on the edge to take",
    "start": "1961100",
    "end": "1966679"
  },
  {
    "text": "advantage of the capabilities that we provide thank you all for your time and",
    "start": "1966679",
    "end": "1972200"
  },
  {
    "text": "attention we know that it's been a long week and many of you might be thinking about lunch but we appreciate",
    "start": "1972200",
    "end": "1977510"
  },
  {
    "text": "you coming to learn more about green grass and are happy to answer any questions that you have so please go to",
    "start": "1977510",
    "end": "1982670"
  },
  {
    "text": "the mics and shoot [Applause]",
    "start": "1982670",
    "end": "1994589"
  }
]