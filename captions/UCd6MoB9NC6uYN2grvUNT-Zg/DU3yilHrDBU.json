[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "text": "hello and welcome to today's aws webinar entitled journey through the cloud today we're going to be focusing",
    "start": "640",
    "end": "7919"
  },
  {
    "text": "on development and test and how aws is a perfect place for performing those functions in your business my",
    "start": "7919",
    "end": "14960"
  },
  {
    "text": "name's ryan and i'm a technical evangelist and i'll be taking you through that journey today",
    "start": "14960",
    "end": "20880"
  },
  {
    "text": "this is the second in our journey through the cloud series and the idea behind this series is that",
    "start": "20880",
    "end": "26560"
  },
  {
    "text": "we talk about common use cases that are stepping stones into the aws cloud",
    "start": "26560",
    "end": "32320"
  },
  {
    "text": "enable you to bridge into using cloud services in a way and a pace that suits yourselves",
    "start": "32320",
    "end": "37840"
  },
  {
    "text": "enables you to learn from customer journeys so these are experiences technical aspects of aws that are we",
    "start": "37840",
    "end": "45440"
  },
  {
    "text": "listen to in our customer base our solutions architecture teams working with customers bring these learnings",
    "start": "45440",
    "end": "50879"
  },
  {
    "text": "back to enable you to learn from those best practices and to bootstrap your projects",
    "start": "50879",
    "end": "56640"
  },
  {
    "text": "so with that in mind today's agenda is development and test and development and test within aws is a",
    "start": "56640",
    "end": "63359"
  },
  {
    "text": "great place to start consuming cloud services it's a great place to explore the benefits of aws",
    "start": "63359",
    "end": "69119"
  },
  {
    "text": "with a truly non-production use case it's a use case that's out of band of your front office or your transactional",
    "start": "69119",
    "end": "75280"
  },
  {
    "text": "platforms and enables you to explore the cloud whilst also",
    "start": "75280",
    "end": "80479"
  },
  {
    "text": "getting some benefits from it namely creating agility in your development and test cycles whilst learning cloud along the",
    "start": "80479",
    "end": "86960"
  },
  {
    "text": "way and enables you to exercise things like elasticity and automation to real advantage as well",
    "start": "86960",
    "end": "93680"
  },
  {
    "text": "you can create some serious agility within your organization by using cloud services as part of dev",
    "start": "93680",
    "end": "99119"
  },
  {
    "text": "test cycles so today's agenda is going to talk about",
    "start": "99119",
    "end": "104799"
  },
  {
    "text": "why aws is such a good place for development test we're going to talk around services that can be employed and we're",
    "start": "104799",
    "end": "111119"
  },
  {
    "text": "going to build some patterns in the dev test scenario in terms of the applications that can be deployed",
    "start": "111119",
    "end": "116320"
  },
  {
    "text": "the processes that go on within dev test cycles and how they're married to the aws services",
    "start": "116320",
    "end": "121600"
  },
  {
    "text": "and we'll give you some ideas of where to go next to find out more information so let's crack on so why aws",
    "start": "121600",
    "end": "129679"
  },
  {
    "start": "128000",
    "end": "293000"
  },
  {
    "text": "for development and test now i could have put dozens more words",
    "start": "129679",
    "end": "135440"
  },
  {
    "text": "on this slide here but the idea being is that there are many different types of applications",
    "start": "135440",
    "end": "140800"
  },
  {
    "text": "that people are deploying there are many different development cycles or methodologies that people",
    "start": "140800",
    "end": "145840"
  },
  {
    "text": "use and there are many different testing regimes or testing approaches that people employ to ensure their applications have",
    "start": "145840",
    "end": "152319"
  },
  {
    "text": "integrity or work at scale and so on um i'm not going to tell you how to do",
    "start": "152319",
    "end": "157519"
  },
  {
    "text": "dev test in this webinar but certainly what i want to do is draw some commonality between all of these",
    "start": "157519",
    "end": "162959"
  },
  {
    "text": "different things whether you're talking about deploying sas applications you're dealing with packaged business applications you're",
    "start": "162959",
    "end": "169200"
  },
  {
    "text": "trying to do certain performance or load testings there's some commonality between development and test environments and namely those common",
    "start": "169200",
    "end": "176879"
  },
  {
    "text": "traits are that these environments are typically disposable and they're very numerous in the",
    "start": "176879",
    "end": "183680"
  },
  {
    "text": "quantity that you have in your environments so what i mean by that so disposable",
    "start": "183680",
    "end": "189280"
  },
  {
    "text": "environments typically projects start and stop frequently or development cycles start",
    "start": "189280",
    "end": "195519"
  },
  {
    "text": "and stop frequently and that those environments that you create to support that",
    "start": "195519",
    "end": "201040"
  },
  {
    "text": "are required for a short period of time so that you throw them away ideally afterwards because when you recreate an",
    "start": "201040",
    "end": "207680"
  },
  {
    "text": "environment you're looking to do something from a known starting point or a golden master so disposability of an environment is a",
    "start": "207680",
    "end": "214640"
  },
  {
    "text": "key aspect or the cleaning of an environment prior to you starting another cycle is a key aspect of doing",
    "start": "214640",
    "end": "220560"
  },
  {
    "text": "rapid development cycles and numerous because typically there are",
    "start": "220560",
    "end": "226959"
  },
  {
    "text": "many environments that support an application so take an application that is in production somewhere or in production",
    "start": "226959",
    "end": "232480"
  },
  {
    "text": "release you will have many development environments potentially you will have staging environments different types of",
    "start": "232480",
    "end": "239360"
  },
  {
    "text": "test environments and you may have a number of development cycles that are ongoing and that are",
    "start": "239360",
    "end": "244640"
  },
  {
    "text": "overlapping and as such the the multiplier effect from a single application in production",
    "start": "244640",
    "end": "250319"
  },
  {
    "text": "means that you could have dozens of associated dev test environments supporting the development",
    "start": "250319",
    "end": "255439"
  },
  {
    "text": "cycle behind that application the other thing that makes them sort of numerous is that you often need to",
    "start": "255439",
    "end": "260959"
  },
  {
    "text": "preserve sort of known configurations of applications so when you are having overlapping development cycles",
    "start": "260959",
    "end": "267360"
  },
  {
    "text": "you will want to create entire sets of environments that replicate a particular version set that might mean associated libraries",
    "start": "267360",
    "end": "274320"
  },
  {
    "text": "associated containers and so on so they're very numerous and we like to be able to throw them away they're",
    "start": "274320",
    "end": "280160"
  },
  {
    "text": "disposable they're not something that lived for many years typically so development and",
    "start": "280160",
    "end": "285520"
  },
  {
    "text": "test in the cloud i'd like to summarize that then in three aspects and we'll talk through these",
    "start": "285520",
    "end": "290800"
  },
  {
    "text": "aspects throughout the presentation so the first reason the aws and devtest",
    "start": "290800",
    "end": "296400"
  },
  {
    "start": "293000",
    "end": "386000"
  },
  {
    "text": "are such great friends if you like is that you can take lots of it when you need it there is unlimited elastic capacity in",
    "start": "296400",
    "end": "303600"
  },
  {
    "text": "aws so supporting that numerous side of dev test environments you can take as many",
    "start": "303600",
    "end": "309440"
  },
  {
    "text": "environments as you like the other aspect of elastic computing",
    "start": "309440",
    "end": "315440"
  },
  {
    "text": "and aws in the cloud is that you can throw it away when you're done so you can achieve some pretty",
    "start": "315440",
    "end": "321440"
  },
  {
    "text": "significant cost optimizations in development and tests by simply turning stuff off when you don't need them",
    "start": "321440",
    "end": "326880"
  },
  {
    "text": "now that may be on a daily basis every evening or simply when you're done with an environment just throw it away as soon as possible",
    "start": "326880",
    "end": "333440"
  },
  {
    "text": "and we'll talk about some of that as well in this webinar and then lastly preserving it for future",
    "start": "333440",
    "end": "339840"
  },
  {
    "text": "reference an under some aspect of devtest in the cloud really is the fact that we have",
    "start": "339840",
    "end": "345360"
  },
  {
    "text": "extremely durable storage for storing data and images of machines",
    "start": "345360",
    "end": "351039"
  },
  {
    "text": "so you can take environments and turn them off dispose of them but at the same time you can save them",
    "start": "351039",
    "end": "357520"
  },
  {
    "text": "as if you like freeze-dried copies so that you can recreate them in the future and it's particularly useful if you need",
    "start": "357520",
    "end": "362560"
  },
  {
    "text": "to roll back particular to a particular version maybe to solve a particular problem that's occurred in the field or fix a",
    "start": "362560",
    "end": "368880"
  },
  {
    "text": "particular type of bug you can create an environment that is exactly as your customers may have it",
    "start": "368880",
    "end": "375199"
  },
  {
    "text": "for example in the cloud and recreate an issue by using durable imaging of machines",
    "start": "375199",
    "end": "380720"
  },
  {
    "text": "and the storage of those images in highly durable storage so let's talk through some of those in",
    "start": "380720",
    "end": "386319"
  },
  {
    "start": "386000",
    "end": "641000"
  },
  {
    "text": "turn so take lots of it when you need it i'm going to take you through a number",
    "start": "386319",
    "end": "391440"
  },
  {
    "text": "of steps here shown on this slide so starting with the elastic data center if you like the",
    "start": "391440",
    "end": "396479"
  },
  {
    "text": "fundamentals of aws and devtest take you through spinning up environments as you need them some of",
    "start": "396479",
    "end": "403280"
  },
  {
    "text": "the methods that people employ to do that some of the packaged applications that you can deploy in aws",
    "start": "403280",
    "end": "409199"
  },
  {
    "text": "which often are are very large cumbersome type applications and when",
    "start": "409199",
    "end": "414479"
  },
  {
    "text": "you make changes in your enterprises to those applications you need to test those changes or when you need to upgrade those applications",
    "start": "414479",
    "end": "420880"
  },
  {
    "text": "we'll look at deploying development and test frameworks in aws uh some of the things you can do to aid",
    "start": "420880",
    "end": "426319"
  },
  {
    "text": "testing at scale and some of the tips and tricks that we have for rolling things out in production using some of the unique",
    "start": "426319",
    "end": "432479"
  },
  {
    "text": "properties of cloud services so first off the elastic data center",
    "start": "432479",
    "end": "439840"
  },
  {
    "text": "this is really uh an essential part of understanding how to build environments in aws",
    "start": "440720",
    "end": "446720"
  },
  {
    "text": "and it starts with something called an amazon machine image down there at the bottom left a typical process for somebody to",
    "start": "446720",
    "end": "453120"
  },
  {
    "text": "create a like a custom building block from which to build an environment to support a",
    "start": "453120",
    "end": "458400"
  },
  {
    "text": "development environment or a test environment is to take a generic image our ami that could be a windows",
    "start": "458400",
    "end": "464160"
  },
  {
    "text": "or a linux image to constitute that as an instance in ec2 to then customize that",
    "start": "464160",
    "end": "471039"
  },
  {
    "text": "instance loading things like custom application stacks might be custom libraries",
    "start": "471039",
    "end": "476400"
  },
  {
    "text": "a custom runtime environments to support a particular application type and then to create an ami a customized",
    "start": "476400",
    "end": "483759"
  },
  {
    "text": "ami from that that becomes if you like your freeze-dried essential building block for an environment",
    "start": "483759",
    "end": "491360"
  },
  {
    "text": "and then using that in the elastic data center customers will typically have a number",
    "start": "491440",
    "end": "497520"
  },
  {
    "text": "of assets on premise so they're looking to use aws to extend their on-premise",
    "start": "497520",
    "end": "503680"
  },
  {
    "text": "infrastructure for the support of development and test cycles so taking the on-premise infrastructure",
    "start": "503680",
    "end": "508879"
  },
  {
    "text": "what they're generally doing is then creating an amazon vpc so a private section of the aws cloud so",
    "start": "508879",
    "end": "514880"
  },
  {
    "text": "all resources launched in here by default are not public and this is useful because a dev test environment is",
    "start": "514880",
    "end": "521599"
  },
  {
    "text": "typically an extension of your internal systems extension of wind tunnel work extensions it might be an extension of",
    "start": "521599",
    "end": "526880"
  },
  {
    "text": "an internal laboratory data center environment within that vpc you then populate those",
    "start": "526880",
    "end": "534000"
  },
  {
    "text": "with instances based upon your customized amis that i've just created in the previous slides",
    "start": "534000",
    "end": "539760"
  },
  {
    "text": "so you can create environments within the vpc which you then connect to your premises over",
    "start": "539760",
    "end": "546000"
  },
  {
    "text": "things like our dedicated connections or over a vpn connection and this enables you to burst or to",
    "start": "546000",
    "end": "551680"
  },
  {
    "text": "create the environments in aws as if it was a second data center",
    "start": "551680",
    "end": "557200"
  },
  {
    "text": "that you owned and managed and when you're done with those resources you turn them off so back to our three",
    "start": "557200",
    "end": "564399"
  },
  {
    "text": "points about take lots of it when you need it throw it away when you don't and preserve a future reference at a very high level what we've just",
    "start": "564399",
    "end": "571519"
  },
  {
    "text": "seen in those diagrams is the fact that you can provision resources based upon some freeze-dried images and",
    "start": "571519",
    "end": "577839"
  },
  {
    "text": "then when you're finished with using you can throw them away and it's those concepts that then apply to all the different types of",
    "start": "577839",
    "end": "584560"
  },
  {
    "text": "parts of the dev test cycle that we'll go through next",
    "start": "584560",
    "end": "590080"
  },
  {
    "text": "so spinning up environments as you need them how do people do that",
    "start": "590080",
    "end": "595120"
  },
  {
    "text": "well let's look at a a customer for to start with and how they talk about aws um we've all probably heard of little",
    "start": "595120",
    "end": "601760"
  },
  {
    "text": "big planet a little character there on there the medium molecule part of sony computer entertainment use aws",
    "start": "601760",
    "end": "607920"
  },
  {
    "text": "to uh to run their production uh platform behind the game so the massively multiplayer on player",
    "start": "607920",
    "end": "613839"
  },
  {
    "text": "online game the sharing of goods and and stickers and things like that within that game and one thing i want to draw",
    "start": "613839",
    "end": "619680"
  },
  {
    "text": "your attention there was that uh alex evans their cto talks here about loving the flexibility of aws that",
    "start": "619680",
    "end": "625600"
  },
  {
    "text": "allowed them to spin up smaller test environments for beta trials qa localization and during development and",
    "start": "625600",
    "end": "631600"
  },
  {
    "text": "to spin those up on demand as he needed them at a low initial cost that enabled them to really revolutionize",
    "start": "631600",
    "end": "637920"
  },
  {
    "text": "the the quality of the games they produced it so what sort of techniques does he use",
    "start": "637920",
    "end": "646079"
  },
  {
    "text": "there are three main methods that people employ to spin up an environment in aws the first",
    "start": "646079",
    "end": "651360"
  },
  {
    "text": "is based upon amis snapshots and bootstrapping so that previous image where you create a custom",
    "start": "651360",
    "end": "657279"
  },
  {
    "text": "ami and then you reconstitute images of servers from those amis so you're using core aws",
    "start": "657279",
    "end": "664320"
  },
  {
    "text": "features to set up an environment to meet your needs and typically this is if you like the starting end of the spectrum so people",
    "start": "664320",
    "end": "670399"
  },
  {
    "text": "will do this through the console using the web interface on aws and then maybe they'll move on to enacting that",
    "start": "670399",
    "end": "676399"
  },
  {
    "text": "through some simple scripting where they might have bootstrapping scripts on their ami which configure an",
    "start": "676399",
    "end": "682079"
  },
  {
    "text": "instance to be a particular type of environment so they might use the console and then using something called user metadata",
    "start": "682079",
    "end": "688079"
  },
  {
    "text": "type in this is a development environment for application x and that that that data will then drive",
    "start": "688079",
    "end": "695440"
  },
  {
    "text": "a bootstrapping script on that box to download the appropriate assets and set it up as that environment and you can have an environment ready",
    "start": "695440",
    "end": "701519"
  },
  {
    "text": "for a developer on the back of a request in a few minutes using that approach a second approach",
    "start": "701519",
    "end": "708720"
  },
  {
    "text": "that people use is using something called beanstalk essentially these are managed standardized containers",
    "start": "708720",
    "end": "715279"
  },
  {
    "text": "for developing different types of applications whether it be php java python and so on and these give",
    "start": "715279",
    "end": "721680"
  },
  {
    "text": "developers a test development and ultimately test environment direct from an ide if",
    "start": "721680",
    "end": "726800"
  },
  {
    "text": "required so you can download a plugin for eclipse or visual studio and allow your developers to deploy",
    "start": "726800",
    "end": "733279"
  },
  {
    "text": "into a standardized architecture including load balancing including",
    "start": "733279",
    "end": "738560"
  },
  {
    "text": "auto scaling and databases that you know that each developer will",
    "start": "738560",
    "end": "743680"
  },
  {
    "text": "get exactly the same thing and you can configure those containers to meet your needs based upon properties or amis",
    "start": "743680",
    "end": "750639"
  },
  {
    "text": "then lastly customers using cloud formation where they have large and complex environments that",
    "start": "750639",
    "end": "756959"
  },
  {
    "text": "might have many different third-party aspects to them as well as software architectural frameworks and so on and",
    "start": "756959",
    "end": "763519"
  },
  {
    "text": "they take advantage of our cloud formation templating language where they generate environment",
    "start": "763519",
    "end": "768560"
  },
  {
    "text": "specifications essentially as they build software and when they need to deploy that particular version of the software",
    "start": "768560",
    "end": "774480"
  },
  {
    "text": "the entire environment can be built declaratively from the template so let's have a look at",
    "start": "774480",
    "end": "781200"
  },
  {
    "text": "beanstalk because we've already had a quick look at amis and how beanstalk works",
    "start": "781200",
    "end": "786560"
  },
  {
    "text": "so beanstalk essentially allows you to take an application version and marry it with an application",
    "start": "786560",
    "end": "793120"
  },
  {
    "text": "environment all managed within the beanstalk framework so you can deploy an app a version of an",
    "start": "793120",
    "end": "798639"
  },
  {
    "text": "app from source control into say a test environment that's specified with small instances",
    "start": "798639",
    "end": "804480"
  },
  {
    "text": "a particular type of auto scaling and that lives in a single availability zone and ultimately you can move the",
    "start": "804480",
    "end": "811200"
  },
  {
    "text": "application through environments to a production grade environment so beanstalk is a great way",
    "start": "811200",
    "end": "816639"
  },
  {
    "text": "in which people start at a dev move to test and then can deploy into production using one single framework",
    "start": "816639",
    "end": "824800"
  },
  {
    "text": "beanstalk supports currently.net java php and python and there are more containers",
    "start": "824800",
    "end": "830480"
  },
  {
    "text": "coming soon so do subscribe to our blog aws.typepad.com",
    "start": "830480",
    "end": "835839"
  },
  {
    "text": "to find out as they they're released and a container essentially is somewhere where our",
    "start": "835839",
    "end": "840959"
  },
  {
    "text": "web application package runs inside the beanstalk and exploding that we have essentially our user application",
    "start": "840959",
    "end": "846800"
  },
  {
    "text": "that deploys into an instance and on that instance we install an application service",
    "start": "846800",
    "end": "853360"
  },
  {
    "text": "an http service such as apache language interpreters so if this is a php these",
    "start": "853360",
    "end": "858720"
  },
  {
    "text": "are mod php modules an operating system and then a host that we deploy within the aws environment and",
    "start": "858720",
    "end": "866000"
  },
  {
    "text": "depending upon the language the container you choose as part of beanstalk you'll get different aspects of each of those layers",
    "start": "866000",
    "end": "872560"
  },
  {
    "text": "but what it does behind the scenes is when you've deployed an application to beanstalk say from your visual studio environment",
    "start": "872560",
    "end": "879040"
  },
  {
    "text": "will create an elastic load balancer will create an auto scaling group will create some windows instances",
    "start": "879040",
    "end": "885600"
  },
  {
    "text": "or linux instances based upon the container and launch them into ec2 containing your code we'll wire those",
    "start": "885600",
    "end": "892880"
  },
  {
    "text": "things up onto the beanstalk framework and then we'll publish them under a cname so you can then start testing a",
    "start": "892880",
    "end": "898880"
  },
  {
    "text": "classic web application for example now we store all the different versions",
    "start": "898880",
    "end": "904320"
  },
  {
    "text": "of applications in s3 and we consolidate all the logs across those machines into a single",
    "start": "904320",
    "end": "909600"
  },
  {
    "text": "view in s3 and available through the console um and indeed through things like our visual studio plug-in or eclipse plug-in",
    "start": "909600",
    "end": "916079"
  },
  {
    "text": "so you can see all this stuff going on direct from the dev workbench the benefits of this is that a developer",
    "start": "916079",
    "end": "921760"
  },
  {
    "text": "doesn't need to configure an environment because you can specify this environment in terms of the base containers the",
    "start": "921760",
    "end": "927040"
  },
  {
    "text": "machine images being used or indeed the configuration of those boxes in terms of modules that might be",
    "start": "927040",
    "end": "932160"
  },
  {
    "text": "installed to support an application",
    "start": "932160",
    "end": "935759"
  },
  {
    "text": "moving on to the other end of the spectrum if you like in terms of declarative control creating",
    "start": "937279",
    "end": "943920"
  },
  {
    "text": "environments for development and test people use cloud formation and cloud formation",
    "start": "943920",
    "end": "949120"
  },
  {
    "text": "is a a framework that is based around the idea of a template on the left",
    "start": "949120",
    "end": "955199"
  },
  {
    "text": "that is loaded into the cloud formation framework that then generates something called a stack on the right",
    "start": "955199",
    "end": "961839"
  },
  {
    "text": "so a template is simply a json formatted file that allows you to define parameters that you might get for user",
    "start": "961839",
    "end": "967440"
  },
  {
    "text": "input when you create a stack device that the creation of resources within aws such as load balancers",
    "start": "967440",
    "end": "974320"
  },
  {
    "text": "security groups ec2 instances databases queues and so on",
    "start": "974320",
    "end": "979759"
  },
  {
    "text": "and then apply configuration actions to those resources that are created such as download software and install it",
    "start": "979759",
    "end": "986639"
  },
  {
    "text": "on ect the cloud formation framework itself deals with the creation of the stack how",
    "start": "986639",
    "end": "992240"
  },
  {
    "text": "you update the stack when you update the template and detecting any problems in deployment and rollback",
    "start": "992240",
    "end": "997519"
  },
  {
    "text": "and the stack itself is a running collection of services so think of this as your it could be",
    "start": "997519",
    "end": "1002959"
  },
  {
    "text": "your development environment a load test environment or indeed a production environment",
    "start": "1002959",
    "end": "1008639"
  },
  {
    "text": "now there's some benefits of templated environments and the first is that you can actually create these things",
    "start": "1008639",
    "end": "1013839"
  },
  {
    "text": "programmatically and if you think about the aws environment as a programmable data",
    "start": "1013839",
    "end": "1019279"
  },
  {
    "text": "center creating the specification of the resources that are required to run a",
    "start": "1019279",
    "end": "1024640"
  },
  {
    "text": "particular application at the time of creating the code has certain benefits well the first is",
    "start": "1024640",
    "end": "1029760"
  },
  {
    "text": "there's no human involvement the second is that you can source control these things so it's a known configuration",
    "start": "1029760",
    "end": "1035760"
  },
  {
    "text": "so each time you produce a version of the app just as you would source control and be able to do diffs on code and",
    "start": "1035760",
    "end": "1041360"
  },
  {
    "text": "modules you can do the same with the infrastructure specification required to run it",
    "start": "1041360",
    "end": "1047199"
  },
  {
    "text": "another thing is that parameter driven so you can create these things as dynamic and user driven templates so you might have a standardized template",
    "start": "1047199",
    "end": "1054000"
  },
  {
    "text": "that when it's fed with the parameter this is a dev environment for example in the drop-down list within the console",
    "start": "1054000",
    "end": "1060720"
  },
  {
    "text": "that might drive a certain configuration of resources so it might drive a single instance",
    "start": "1060720",
    "end": "1066160"
  },
  {
    "text": "configured to run an environment whereas if you dropped in a parameter of test this may then",
    "start": "1066160",
    "end": "1071679"
  },
  {
    "text": "generate multiple instances and be a more production-like platform that you deploy under the template",
    "start": "1071679",
    "end": "1078160"
  },
  {
    "text": "and you can also collaborate so you can share these templates where you've got large distributed teams you might be able to share",
    "start": "1078160",
    "end": "1083200"
  },
  {
    "text": "snippets share whole templates and allow different parts of your organization to create a replica environment",
    "start": "1083200",
    "end": "1090960"
  },
  {
    "text": "and this is a a basic snippet of a a template that starts with a number of",
    "start": "1091679",
    "end": "1097120"
  },
  {
    "text": "headers you can fire in parameters at the top which are used for user input do some",
    "start": "1097120",
    "end": "1102240"
  },
  {
    "text": "mappings of things like drop down lists to actual specifications behind the scenes in this case machine images the resources you create",
    "start": "1102240",
    "end": "1109440"
  },
  {
    "text": "and outputs that might come back in the console as the stack has been created",
    "start": "1109440",
    "end": "1115039"
  },
  {
    "start": "1115000",
    "end": "1246000"
  },
  {
    "text": "okay so that's bootstrapping environments that would be tuned to your particular requirement whether it be a beanstalk",
    "start": "1115919",
    "end": "1122559"
  },
  {
    "text": "php environment whether it be something highly customized using cloud formation whether it simply be a collection of",
    "start": "1122559",
    "end": "1128480"
  },
  {
    "text": "software that you bundle into an ami which enables you to create a workstation environment maybe for developers",
    "start": "1128480",
    "end": "1135600"
  },
  {
    "text": "but often we're tasked in an enterprise environment of dealing with packaged applications",
    "start": "1135600",
    "end": "1142080"
  },
  {
    "text": "and how do we test our modifications to those packaged applications or test how a new upgrade to that application would behave",
    "start": "1142080",
    "end": "1149600"
  },
  {
    "text": "in an environment where it's highly integrated for example so there's a number of packaged",
    "start": "1149600",
    "end": "1155360"
  },
  {
    "text": "applications that you can run in aws from different vendors sap oracle microsoft and ibm for example",
    "start": "1155360",
    "end": "1162480"
  },
  {
    "text": "and just looking at a couple of those sap for example we have certifications to",
    "start": "1162480",
    "end": "1168559"
  },
  {
    "text": "run a whole range of sap environments within aws fully supported and certified by sap",
    "start": "1168559",
    "end": "1176080"
  },
  {
    "text": "so if you think about the complexity behind running user acceptance environments for",
    "start": "1176080",
    "end": "1182000"
  },
  {
    "text": "sap running test environments for sap typically they require quite a significant",
    "start": "1182000",
    "end": "1187919"
  },
  {
    "text": "infrastructure investment to run the databases to run the application servers and so on moving those into aws allows you to",
    "start": "1187919",
    "end": "1194799"
  },
  {
    "text": "benefit from all that disposability and the numerous natures of environments you can create based",
    "start": "1194799",
    "end": "1200640"
  },
  {
    "text": "upon template at the same time is you know reducing your overall costs",
    "start": "1200640",
    "end": "1205760"
  },
  {
    "text": "if you look at oracle if you go to the oracle page on the aws.amazon.com website you can",
    "start": "1205760",
    "end": "1213280"
  },
  {
    "text": "launch amis here shown in this screenshot of popular oracle apps so if you want to launch peoplesoft elm",
    "start": "1213280",
    "end": "1219600"
  },
  {
    "text": "you can click launch ami and it will launch into your account and create an instance pre-configured with",
    "start": "1219600",
    "end": "1224799"
  },
  {
    "text": "that version of that software this enables you to to bootstrap those",
    "start": "1224799",
    "end": "1230640"
  },
  {
    "text": "devtest projects that are requiring you to customize your internal applications or to test the integration of new",
    "start": "1230640",
    "end": "1236480"
  },
  {
    "text": "versions of applications that normally come with a significant investment of time and effort to build",
    "start": "1236480",
    "end": "1242240"
  },
  {
    "text": "that infrastructure third thing about taking lots of stuff",
    "start": "1242240",
    "end": "1248960"
  },
  {
    "text": "from aws when you need it is that you can run pretty much anything whether it be a packaged application if i just discussed",
    "start": "1248960",
    "end": "1254640"
  },
  {
    "text": "whether it be your own application containers for your own web facing or mobile apps",
    "start": "1254640",
    "end": "1259919"
  },
  {
    "text": "but you can also run all the software and frameworks that you need to support the devtest",
    "start": "1259919",
    "end": "1265120"
  },
  {
    "text": "cycle in aws so development test frameworks in aws",
    "start": "1265120",
    "end": "1270320"
  },
  {
    "text": "because aws is open and flexible enables you to run things like source control",
    "start": "1270320",
    "end": "1276720"
  },
  {
    "text": "so you can leverage ec2 to run popular source control systems and have those relying on things",
    "start": "1276720",
    "end": "1283440"
  },
  {
    "text": "like our snapshotting and time snapshotting into s3 for backup and recovery",
    "start": "1283440",
    "end": "1289039"
  },
  {
    "text": "you can obviously add project management software an issue tracking software popular software that you can download",
    "start": "1289039",
    "end": "1294480"
  },
  {
    "text": "and install you can also deal with some of the complexities around things like dependency management so one of the",
    "start": "1294480",
    "end": "1300159"
  },
  {
    "text": "challenges in in development is that a particular workstation environment to support",
    "start": "1300159",
    "end": "1305200"
  },
  {
    "text": "particular aspect of a project might be configured differently from another and that you end up with dependency",
    "start": "1305200",
    "end": "1310480"
  },
  {
    "text": "problems on workstations and you can build workstations for developers within aws",
    "start": "1310480",
    "end": "1317200"
  },
  {
    "text": "that are standardized and you can spin these up and use them and allow remote desktoping into them for example",
    "start": "1317200",
    "end": "1323360"
  },
  {
    "text": "to use a known configuration of workstation or user environment and of course ec2",
    "start": "1323360",
    "end": "1331520"
  },
  {
    "text": "a significant amount of horsepower behind it should you choose to use it and build servers running things like",
    "start": "1331520",
    "end": "1338480"
  },
  {
    "text": "your unit and regression tests you can significantly reduce the overall time to",
    "start": "1338480",
    "end": "1344000"
  },
  {
    "text": "to build to test and do it achieve continuous integration using elasticity of ect",
    "start": "1344000",
    "end": "1351360"
  },
  {
    "text": "so let's have a look at a a common pattern or a common environment technically of how people string things",
    "start": "1351360",
    "end": "1357039"
  },
  {
    "text": "together within aws so on the left here we have local on-premise development team um",
    "start": "1357039",
    "end": "1363840"
  },
  {
    "text": "connecting to aws through a vpn and the vpn in aws can run across the",
    "start": "1363840",
    "end": "1369200"
  },
  {
    "text": "public internet and we provide the hardware endpoints within aws that you configure your local",
    "start": "1369200",
    "end": "1376080"
  },
  {
    "text": "customer gateway to talk to or it could be over a dedicated bandwidth connection using direct connect",
    "start": "1376080",
    "end": "1381520"
  },
  {
    "text": "but either way you're then running within a vpc that we saw earlier and a vpc essentially means that all",
    "start": "1381520",
    "end": "1387600"
  },
  {
    "text": "these resources are only available through that vpn gateway and less explicitly publish the outside world",
    "start": "1387600",
    "end": "1394080"
  },
  {
    "text": "and within that vpc we can see here we've got a source control repository",
    "start": "1394080",
    "end": "1399360"
  },
  {
    "text": "running on ec2 and published under an elastic ip so a known endpoint address and that source control",
    "start": "1399360",
    "end": "1406400"
  },
  {
    "text": "repository is backed by ebs storage volumes and those storage volumes can then benefit",
    "start": "1406400",
    "end": "1412080"
  },
  {
    "text": "from being snapshotted into s3 for backup and recovery we've also got project management tools",
    "start": "1412080",
    "end": "1418320"
  },
  {
    "text": "same pattern but here we've got it backed upon a an amazon rds",
    "start": "1418320",
    "end": "1423600"
  },
  {
    "text": "a relational database service so a classic project management framework running against something like microsoft",
    "start": "1423600",
    "end": "1429840"
  },
  {
    "text": "sql server this could be tfs in the microsoft world or it could be a red mine running against a mysql",
    "start": "1429840",
    "end": "1437360"
  },
  {
    "text": "database and then we've also got developers remote workstations there at the bottom",
    "start": "1437360",
    "end": "1442480"
  },
  {
    "text": "so these could be configured environments such as windows environments linux environments different linux",
    "start": "1442480",
    "end": "1448320"
  },
  {
    "text": "desktops with different configurations might be for testing different types of browsers to interact with our",
    "start": "1448320",
    "end": "1453600"
  },
  {
    "text": "applications or simply different developer environments configured with different libraries to avoid",
    "start": "1453600",
    "end": "1458880"
  },
  {
    "text": "complexities of dependencies and resolving those on a developer workstation and that's a classic pattern of",
    "start": "1458880",
    "end": "1465760"
  },
  {
    "text": "performing or installing the software to support the development test cycle within aws",
    "start": "1465760",
    "end": "1473840"
  },
  {
    "text": "talking about things like redmine and in this case also screenshot here perforce",
    "start": "1474799",
    "end": "1480000"
  },
  {
    "text": "you can use the amazon marketplace to launch pre-configured applications to support your dev cycle",
    "start": "1480000",
    "end": "1486320"
  },
  {
    "text": "so rather than having to download and install and configure an instance yourself you can simply click um in aws marketplace and launch into",
    "start": "1486320",
    "end": "1494080"
  },
  {
    "text": "your account so this is a great way to bootstrap a particular project environment so you",
    "start": "1494080",
    "end": "1499360"
  },
  {
    "text": "might in a significantly large environment have localized project management and issue tracking software for a team and",
    "start": "1499360",
    "end": "1505919"
  },
  {
    "text": "you can create those within aws with ease another pattern i mentioned around",
    "start": "1505919",
    "end": "1512799"
  },
  {
    "text": "building previously is that people use a combination of sqs",
    "start": "1512799",
    "end": "1517919"
  },
  {
    "text": "our simple queuing systems shown here in the middle as a build queue and auto scaling groups to support",
    "start": "1517919",
    "end": "1526000"
  },
  {
    "text": "a paralyzed view of building software so here we've got a a build queue",
    "start": "1526000",
    "end": "1531279"
  },
  {
    "text": "where our project management tool might drop a message on that queue to say i've got a build ready to do",
    "start": "1531279",
    "end": "1536320"
  },
  {
    "text": "and the builder instances pick up that trigger from the queue and pull source code from the repository",
    "start": "1536320",
    "end": "1542559"
  },
  {
    "text": "and then they'll run things like their unit tests the regression test packs and then build output um dropped into s3",
    "start": "1542559",
    "end": "1550000"
  },
  {
    "text": "so here connect compiled binaries might be documentation reporting or what have you that",
    "start": "1550000",
    "end": "1555279"
  },
  {
    "text": "everything that comes as part of a build process you can do in parallel based upon auto",
    "start": "1555279",
    "end": "1560480"
  },
  {
    "text": "scaling within aws and make that nicely asynchronous using build cues built upon amazon sqs so again a very",
    "start": "1560480",
    "end": "1568400"
  },
  {
    "text": "common pattern for parallelizing the build process and shortening the time to get to a result",
    "start": "1568400",
    "end": "1575120"
  },
  {
    "start": "1575000",
    "end": "1783000"
  },
  {
    "text": "so last part of or the penultimate part story of taking lots of it when you need it from aws is testing at scale",
    "start": "1575919",
    "end": "1582000"
  },
  {
    "text": "so how does aws help the test cycle again there are many different types of",
    "start": "1582000",
    "end": "1587679"
  },
  {
    "text": "testing but some of the common things that people use aws to perform are unit regression testing load and",
    "start": "1587679",
    "end": "1594000"
  },
  {
    "text": "performance a b scenario testing and security testing so with unit and regression testing",
    "start": "1594000",
    "end": "1599840"
  },
  {
    "text": "quite often these things can take some time to run a large",
    "start": "1599840",
    "end": "1604960"
  },
  {
    "text": "pack of unit tests and the ability to scale up and run in parallel allows you to achieve the end result in",
    "start": "1604960",
    "end": "1611600"
  },
  {
    "text": "a fraction of the time and we saw that in the previous pattern load and performance testing we",
    "start": "1611600",
    "end": "1619039"
  },
  {
    "text": "have customers and indeed there are uh partners on the platform that develop software themselves and sell it for",
    "start": "1619039",
    "end": "1624400"
  },
  {
    "text": "third parties like yourselves like browser mob that utilize things like the spot market",
    "start": "1624400",
    "end": "1630480"
  },
  {
    "text": "for generating load tests against a a web application and testing how that performs",
    "start": "1630480",
    "end": "1636400"
  },
  {
    "text": "also customers using that sort of process internally to check how their applications respond",
    "start": "1636400",
    "end": "1642559"
  },
  {
    "text": "using things like auto scaling so to generate enough load on something that they can check their application",
    "start": "1642559",
    "end": "1647760"
  },
  {
    "text": "scales in a way that they predict we have other customers and that would",
    "start": "1647760",
    "end": "1653039"
  },
  {
    "text": "do a b testing so running a different scenario testing with replica stacks is something you can do with ease",
    "start": "1653039",
    "end": "1660480"
  },
  {
    "text": "within aws because you can simply create a carbon copy environment load a different version of the application and root traffic differently",
    "start": "1660480",
    "end": "1666960"
  },
  {
    "text": "between those versions and then lastly security so being able to create a",
    "start": "1666960",
    "end": "1672080"
  },
  {
    "text": "sandbox environment a real copy of production environments that you can target penetration testing",
    "start": "1672080",
    "end": "1679919"
  },
  {
    "text": "or aggressive security testing against without disrupting your production systems",
    "start": "1679919",
    "end": "1685600"
  },
  {
    "text": "so thinking parallel the first of those things and the build servers an interesting equation to bear in mind",
    "start": "1686480",
    "end": "1692559"
  },
  {
    "text": "is that one instance for 100 hours will cost you the same as 100 instances",
    "start": "1692559",
    "end": "1697679"
  },
  {
    "text": "for one hour and if you took our small instances that will cost you eight dollars so you can achieve significant",
    "start": "1697679",
    "end": "1704960"
  },
  {
    "text": "parallelism at no extra real cost using aws resources if you can achieve a parallel",
    "start": "1704960",
    "end": "1711200"
  },
  {
    "text": "process a b testing that i mentioned before is the idea here that we have in",
    "start": "1711200",
    "end": "1718720"
  },
  {
    "text": "the side that's labeled a in availability zone a we have an application stack with some",
    "start": "1718720",
    "end": "1724080"
  },
  {
    "text": "application servers running in an auto scaling group backed by a master rds database and some a read",
    "start": "1724080",
    "end": "1731919"
  },
  {
    "text": "replica there with logs being shipped into s3 into a bucket",
    "start": "1731919",
    "end": "1737440"
  },
  {
    "text": "and the whole thing fronted by an elastic load balancer now with a b testing customers will",
    "start": "1737440",
    "end": "1743760"
  },
  {
    "text": "create a carbon copy of that environment and launch into a different availability zone",
    "start": "1743760",
    "end": "1749760"
  },
  {
    "text": "exactly the replica auto scanning groups they'll be using a read replica of the master",
    "start": "1749760",
    "end": "1755039"
  },
  {
    "text": "database there shown as the the database r logs shipped into a different bucket in s3",
    "start": "1755039",
    "end": "1760880"
  },
  {
    "text": "but the application version or the ami used to bootstrap those instances and",
    "start": "1760880",
    "end": "1766480"
  },
  {
    "text": "that auto-scaling group will be different and they were able to then use the load balancing to share the",
    "start": "1766480",
    "end": "1771840"
  },
  {
    "text": "load between them and to check how things perform how users accept those",
    "start": "1771840",
    "end": "1777440"
  },
  {
    "text": "changes what works what doesn't that's one way of performing a b testing",
    "start": "1777440",
    "end": "1783760"
  },
  {
    "start": "1783000",
    "end": "1921000"
  },
  {
    "text": "rolling out to production there are some pretty neat tricks you can play with aws",
    "start": "1784559",
    "end": "1790320"
  },
  {
    "text": "resources to make this quite easy and to have zero downtime deployments the first of those is based upon a",
    "start": "1790320",
    "end": "1796960"
  },
  {
    "text": "similar concept of you just see than that a b testing so using elastic load balancer",
    "start": "1796960",
    "end": "1803360"
  },
  {
    "text": "to in this case a load balance across a version one application running against an rds so a classic app",
    "start": "1803360",
    "end": "1809919"
  },
  {
    "text": "running against the database using an auto scaling group there my production system",
    "start": "1809919",
    "end": "1815520"
  },
  {
    "text": "what you can do is you can bring on a new version of an application v2 in this case",
    "start": "1815520",
    "end": "1822080"
  },
  {
    "text": "bring it into service with the elastic load balancer and then take out once you're happy that",
    "start": "1822080",
    "end": "1827200"
  },
  {
    "text": "v2 is running well take out the instances running v1 from",
    "start": "1827200",
    "end": "1832399"
  },
  {
    "text": "service behind the load balancer using the console or a command line and then you can when you're completely",
    "start": "1832399",
    "end": "1838080"
  },
  {
    "text": "satisfied the v2 is running after a period of time completely turn off or or terminate the instances running v1",
    "start": "1838080",
    "end": "1844559"
  },
  {
    "text": "and now you're running on v2 application and because we're using a load balancer the load would have been distributed smoothly across",
    "start": "1844559",
    "end": "1851200"
  },
  {
    "text": "those resources now another way of performing rollouts and indeed of",
    "start": "1851200",
    "end": "1857919"
  },
  {
    "text": "performing a b testing is to use our service called route 53 so route 53 shown here is the the badge",
    "start": "1857919",
    "end": "1865279"
  },
  {
    "text": "on the left enables you to do weighted routing of requests",
    "start": "1865279",
    "end": "1871039"
  },
  {
    "text": "so shown here i have two application stacks v1 and v2 each of these behind their own load",
    "start": "1871039",
    "end": "1877200"
  },
  {
    "text": "balancer and they're fronted by the dns service such that in this case v1 is receiving 90 percent of traffic",
    "start": "1877200",
    "end": "1884960"
  },
  {
    "text": "and v2 is receiving 10 of traffic now i can change those weightings and",
    "start": "1884960",
    "end": "1890320"
  },
  {
    "text": "they could be 99 one that could be 50 50 there could be a hundred and zero and i can slowly move traffic from one",
    "start": "1890320",
    "end": "1897919"
  },
  {
    "text": "application version to another or back again if something's gone wrong with ease using the control i have in",
    "start": "1897919",
    "end": "1905360"
  },
  {
    "text": "route 53 as a dns provider within aws so a very similar way that you can do a",
    "start": "1905360",
    "end": "1911039"
  },
  {
    "text": "b testing is that you may send a five percent proportion of traffic to your new version so that five percent of",
    "start": "1911039",
    "end": "1916320"
  },
  {
    "text": "users see something different",
    "start": "1916320",
    "end": "1921840"
  },
  {
    "start": "1921000",
    "end": "2205000"
  },
  {
    "text": "okay so back to my three points we had take lots of it when you need it throw it away when you don't and preserve it",
    "start": "1922320",
    "end": "1928640"
  },
  {
    "text": "for future reference we've just talked about taking lots of it when you need it so let's talk a little bit about",
    "start": "1928640",
    "end": "1934399"
  },
  {
    "text": "throwing it away when you don't it has been a something that we've discussed in the previous slides but let's draw it",
    "start": "1934399",
    "end": "1940080"
  },
  {
    "text": "out explicitly so the first thing to to really understand in aws is there are different",
    "start": "1940080",
    "end": "1946320"
  },
  {
    "text": "types of instances so there are on-demand instances where you pay a given rate per hour and that you can",
    "start": "1946320",
    "end": "1954240"
  },
  {
    "text": "request them you'll receive that instance you'll start being charged and when you turn it off you won't there are reserved instances where if",
    "start": "1954240",
    "end": "1961519"
  },
  {
    "text": "you're running an instance for a significant proportion of time you can pre-pay",
    "start": "1961519",
    "end": "1967279"
  },
  {
    "text": "for that instance type and receive a reduced hourly rate so you might have project management",
    "start": "1967279",
    "end": "1974480"
  },
  {
    "text": "software for example that would benefit from running in a reserved instance because it's on all the time",
    "start": "1974480",
    "end": "1980960"
  },
  {
    "text": "versus something like an app server as part of a development environment that may be thrown away",
    "start": "1980960",
    "end": "1986080"
  },
  {
    "text": "regularly that would benefit from being on demand but at the other end of the spectrum we have spot instances and spot instances",
    "start": "1986080",
    "end": "1993519"
  },
  {
    "text": "allow you to bid on unused ec2 capacity and you'll have a particular market price for that",
    "start": "1993519",
    "end": "2000080"
  },
  {
    "text": "that is normally significantly lower than the on-demand price so this is useful for what things that",
    "start": "2000080",
    "end": "2005840"
  },
  {
    "text": "you have a flexible start and stop time around the processing or the you know you um can tolerate some sort",
    "start": "2005840",
    "end": "2012799"
  },
  {
    "text": "of breakage in that that process if we reclaim that resource so it could be used for very large scale",
    "start": "2012799",
    "end": "2019039"
  },
  {
    "text": "load testing where you might spin up hundreds of spot instances running scripts",
    "start": "2019039",
    "end": "2024559"
  },
  {
    "text": "to generate load on your web application it could be used as build server excess",
    "start": "2024559",
    "end": "2030000"
  },
  {
    "text": "capacity so where you have particularly heavy build loads you might use spot instances to fill the gap at a reduced price",
    "start": "2030000",
    "end": "2037518"
  },
  {
    "text": "but the primary thing really is to consider turning stuff off when it's not in use so a traditional development or test",
    "start": "2037600",
    "end": "2044399"
  },
  {
    "text": "environment will be on all the time and we'll be incurring the cost of running that stuff",
    "start": "2044399",
    "end": "2049839"
  },
  {
    "text": "and it will also be meaning that you can't use it for anything else at that given time and the real basics",
    "start": "2049839",
    "end": "2055599"
  },
  {
    "text": "here with an aws is turn it off when you're not using it so if you look at this particular load on an environment if i were to reduce it",
    "start": "2055599",
    "end": "2062878"
  },
  {
    "text": "by half during the times to the left and the right of this chart i would save 25 on my costs",
    "start": "2062879",
    "end": "2071280"
  },
  {
    "text": "now looking at another wave i have a development team that works from nine to five or ten to four with a two",
    "start": "2071280",
    "end": "2078320"
  },
  {
    "text": "hour lunch break depending on what sort of work environment you're in um if you simply turn things off entirely",
    "start": "2078320",
    "end": "2084480"
  },
  {
    "text": "overnight and turning things off in aws means that they're stopped you're not",
    "start": "2084480",
    "end": "2089839"
  },
  {
    "text": "paying for them but they can be started again when required is that you would save",
    "start": "2089839",
    "end": "2094960"
  },
  {
    "text": "let's say 50 or more of your costs of running a dev test environment that could mean for the same budget you",
    "start": "2094960",
    "end": "2101359"
  },
  {
    "text": "can run twice as much and get twice as much done or try twice as many different approaches to solving",
    "start": "2101359",
    "end": "2107760"
  },
  {
    "text": "a particular problem or innovating on behalf of your customers",
    "start": "2107760",
    "end": "2113520"
  },
  {
    "text": "so auto scaling is a method you can do this so you can use auto scaling to set a schedule and you",
    "start": "2114079",
    "end": "2120480"
  },
  {
    "text": "might set that schedule to turn off at seven turn on here at 7 30 in the morning and turn off at 7 30",
    "start": "2120480",
    "end": "2127440"
  },
  {
    "text": "at night a bunch of resources whether it be a proportion of the resources or all of the resources now it can yield",
    "start": "2127440",
    "end": "2134720"
  },
  {
    "text": "you significant cost savings now you can create quite a lot of things",
    "start": "2134720",
    "end": "2141760"
  },
  {
    "text": "in aws so you can take as much as you like and you truly can and one of the biggest sort of learnings",
    "start": "2141760",
    "end": "2147520"
  },
  {
    "text": "is that aws creates a huge amount of agility for development teams and when you empower them to create environments",
    "start": "2147520",
    "end": "2154320"
  },
  {
    "text": "to try new things and deploy new software they will but typically they won't turn it off so",
    "start": "2154320",
    "end": "2160000"
  },
  {
    "text": "as a reminder you know imposing some sort of strategy around making sure environments are",
    "start": "2160000",
    "end": "2165200"
  },
  {
    "text": "cleaned up will be an important part of your cost containment so you'll get agility and cost",
    "start": "2165200",
    "end": "2170800"
  },
  {
    "text": "optimizations at the same time so you can truly create a supercomputer in the cloud",
    "start": "2170800",
    "end": "2176079"
  },
  {
    "text": "whether it be in one single click of a deployment or over time as you build it up so do remember to turn it off at the",
    "start": "2176079",
    "end": "2181440"
  },
  {
    "text": "end of the day some of our customers indeed have dashboards within their development",
    "start": "2181440",
    "end": "2186800"
  },
  {
    "text": "environments that is using the aws apis to pool a number of running instances",
    "start": "2186800",
    "end": "2192079"
  },
  {
    "text": "and they're they're targeted on the fact that when they go home they should be turning off environments or stopping",
    "start": "2192079",
    "end": "2197839"
  },
  {
    "text": "environments to keep that instant count low because that directly results in the cost savings",
    "start": "2197839",
    "end": "2204640"
  },
  {
    "text": "okay so take lots of it when you need it talk through that and how you create environments throwing it away when you",
    "start": "2205200",
    "end": "2210960"
  },
  {
    "text": "don't and cost optimization so a quick thoughts on different types of instances that you might use for",
    "start": "2210960",
    "end": "2216640"
  },
  {
    "text": "different types of jobs and the fact that turning things off is your fundamental lever in in maintaining your cost and",
    "start": "2216640",
    "end": "2223520"
  },
  {
    "text": "agility ratios but a last point which i mentioned up front is about preserving things for",
    "start": "2223520",
    "end": "2229119"
  },
  {
    "text": "future reference and this is is quite unique to the cloud because you can do this extremely easily",
    "start": "2229119",
    "end": "2234480"
  },
  {
    "text": "within aws so disposable environments that we just talked about",
    "start": "2234480",
    "end": "2240079"
  },
  {
    "text": "can be recreated if you think about the way that you save those environments for future use",
    "start": "2240079",
    "end": "2246640"
  },
  {
    "text": "and we've touched upon different mechanisms for doing that but it's worth drawing these back together at this point in time",
    "start": "2246640",
    "end": "2252560"
  },
  {
    "text": "so you dispose for them for cost optimization reasons that you just want to get rid of them when you're done",
    "start": "2252560",
    "end": "2257680"
  },
  {
    "text": "but you can preserve them or preserve critical points in time along your development cycle so you can recreate",
    "start": "2257680",
    "end": "2263359"
  },
  {
    "text": "them and the first tool in that armory is amis so customers will recommend creating a",
    "start": "2263359",
    "end": "2270320"
  },
  {
    "text": "catalog of amis for each iteration of an application and storing those in s3 the storage cost",
    "start": "2270320",
    "end": "2276880"
  },
  {
    "text": "of an ami is relatively small compared to the benefit of being able to go back to any particular point in time",
    "start": "2276880",
    "end": "2283760"
  },
  {
    "text": "and recreate that exact environment on the machine running within aws",
    "start": "2283760",
    "end": "2290560"
  },
  {
    "text": "likewise you can do the same with data or disk images associated with your applications their environments and",
    "start": "2291200",
    "end": "2297839"
  },
  {
    "text": "their deployments so ebs the elastic block store allows you to save an image into s3 which is",
    "start": "2297839",
    "end": "2304000"
  },
  {
    "text": "essentially a frozen data set and then you can reconstitute a volume from that snapshot and attach it to an",
    "start": "2304000",
    "end": "2311200"
  },
  {
    "text": "instance when needed so this might be particular test data sets that you might have in a catalog",
    "start": "2311200",
    "end": "2317280"
  },
  {
    "text": "that enable you to go to a particular test case any particular point of time and see how that's evolved or",
    "start": "2317280",
    "end": "2322560"
  },
  {
    "text": "re-run that test case to find a particular problem and then lastly templating so using",
    "start": "2322560",
    "end": "2330160"
  },
  {
    "text": "cloud formation i've mentioned this before that you can source control the infrastructure",
    "start": "2330160",
    "end": "2335280"
  },
  {
    "text": "specification that comes with a particular application version and if your programmatically generating",
    "start": "2335280",
    "end": "2340800"
  },
  {
    "text": "a cloud formation template um that will come part and parcel in the build process so that for every application version",
    "start": "2340800",
    "end": "2346480"
  },
  {
    "text": "you deploy um it will be every miner or every major there is a specification so that a year down the track if you",
    "start": "2346480",
    "end": "2352800"
  },
  {
    "text": "need to recreate that environment you can simply pull the template and launch stack of a single click in the console",
    "start": "2352800",
    "end": "2358400"
  },
  {
    "text": "and have that built an application running with all the specification that",
    "start": "2358400",
    "end": "2363520"
  },
  {
    "text": "you require so you can essentially roll back and recreate",
    "start": "2363520",
    "end": "2369280"
  },
  {
    "text": "an environment for any of given application version any given point in time and that has benefits for whether you're",
    "start": "2369280",
    "end": "2376000"
  },
  {
    "text": "looking at recreating a problem a sas application whether it be a packaged application or some back-end service",
    "start": "2376000",
    "end": "2382960"
  },
  {
    "text": "the the benefits from a supportability point of view are quite obvious",
    "start": "2382960",
    "end": "2388720"
  },
  {
    "start": "2389000",
    "end": "2674000"
  },
  {
    "text": "so another company that's using aws significantly across the board but but",
    "start": "2390079",
    "end": "2395760"
  },
  {
    "text": "primarily in their development and test environments as their starting point for using aws",
    "start": "2395760",
    "end": "2400800"
  },
  {
    "text": "is shell so shell started using aws in 2010 they've gone through the process of",
    "start": "2400800",
    "end": "2408079"
  },
  {
    "text": "what they call operationalizing their cloud strategy so not only having a strategy of using cloud but internalizing it into all the",
    "start": "2408079",
    "end": "2414800"
  },
  {
    "text": "processes the controls the ticketing systems in order to generate environments upon demand",
    "start": "2414800",
    "end": "2420319"
  },
  {
    "text": "and it's part of their shell foundation platform which is a framework so aws is an approved part of that foundation",
    "start": "2420319",
    "end": "2426480"
  },
  {
    "text": "platform so not only have they got core operational applications running in production on aws",
    "start": "2426480",
    "end": "2432640"
  },
  {
    "text": "but they have dev test environments so they've the ability for them to um create an",
    "start": "2432640",
    "end": "2439280"
  },
  {
    "text": "environment on demand based upon some business requirement and flush it through their ticketing system such that",
    "start": "2439280",
    "end": "2444640"
  },
  {
    "text": "out pops an environment as needed by a particular team to achieve a particular goal",
    "start": "2444640",
    "end": "2450240"
  },
  {
    "text": "has been really um systematically built in using aws apis and integrated into their",
    "start": "2450240",
    "end": "2455520"
  },
  {
    "text": "internal platforms so they got pretty slick on creating environments and then destroying them when they're done and also preserving",
    "start": "2455520",
    "end": "2462000"
  },
  {
    "text": "them the three aspects that i've talked about now obviously the benefits that they talk around here are fast provisioning",
    "start": "2462000",
    "end": "2468640"
  },
  {
    "text": "primarily so it can be within minutes for most applications and needs and it's elastic so they're able to",
    "start": "2468640",
    "end": "2474400"
  },
  {
    "text": "create it on demand as they require it it's always there and they can get rid of it when they're done so they talk about an organization",
    "start": "2474400",
    "end": "2481359"
  },
  {
    "text": "size a shell gaining real business agility because of this so they're able to deploy services",
    "start": "2481359",
    "end": "2486800"
  },
  {
    "text": "more quickly they're able to say yes to development teams or to build development teams are able to say yes to businesses",
    "start": "2486800",
    "end": "2492880"
  },
  {
    "text": "when they require some sort of environment to do work rather than maybe having to wait for resources to be freed upon internal",
    "start": "2492880",
    "end": "2499599"
  },
  {
    "text": "platforms or the procurement and provisioning of a server to run a particular environment",
    "start": "2499599",
    "end": "2505680"
  },
  {
    "text": "come about okay so we're drawing to a close on",
    "start": "2505680",
    "end": "2511440"
  },
  {
    "text": "today's webinar so where can you go next for more information so first",
    "start": "2511440",
    "end": "2516640"
  },
  {
    "text": "i mentioned previously was our typepad blog so aws.typebad.com",
    "start": "2516640",
    "end": "2522480"
  },
  {
    "text": "you can go here and you can subscribe using rss and you will receive notifications in your inbox of all the",
    "start": "2522480",
    "end": "2528480"
  },
  {
    "text": "new features and services as they come so whether you're looking to find out when new containers for beanstalk are",
    "start": "2528480",
    "end": "2534079"
  },
  {
    "text": "coming when new features in cloud formation a particular type of application might be available in the marketplace you'll find",
    "start": "2534079",
    "end": "2540560"
  },
  {
    "text": "it on this blog the other place to look is aws.amazon.com white papers there is a host of",
    "start": "2540560",
    "end": "2547520"
  },
  {
    "text": "information here of whether you're looking to run a packaged oracle application on aws",
    "start": "2547520",
    "end": "2553200"
  },
  {
    "text": "and that might be part of your test or strategy that you're looking to achieve whether you want to spin up a sharepoint",
    "start": "2553200",
    "end": "2559760"
  },
  {
    "text": "environment for testing that in your infrastructure or you're looking for best practices on architecture and",
    "start": "2559760",
    "end": "2565040"
  },
  {
    "text": "automation it's a whole host of white papers there and do go back to that page regularly",
    "start": "2565040",
    "end": "2570640"
  },
  {
    "text": "because there are white papers being added all the time",
    "start": "2570640",
    "end": "2575200"
  },
  {
    "text": "so summary of today's discussion really is that cloud makes development and test easy",
    "start": "2575760",
    "end": "2582160"
  },
  {
    "text": "you can leverage the elasticity of cloud to make extensive savings",
    "start": "2582160",
    "end": "2587680"
  },
  {
    "text": "in terms of cost of running infrastructure within aws as opposed to traditional",
    "start": "2587680",
    "end": "2593200"
  },
  {
    "text": "environments um it also provides some unique tool sets to help you manage and create environments so whether it be",
    "start": "2593200",
    "end": "2599760"
  },
  {
    "text": "being store could it be cloud formation whether it be amazon machine images or the snapshotting you can do it enables",
    "start": "2599760",
    "end": "2606319"
  },
  {
    "text": "you to reconstitute environments really quickly at the click of a button and that lets you perform",
    "start": "2606319",
    "end": "2612240"
  },
  {
    "text": "a scale of operations in terms of parallel operations and also agility beyond the things that",
    "start": "2612240",
    "end": "2617760"
  },
  {
    "text": "you could do with traditional physical environments simply because in a busy development environment",
    "start": "2617760",
    "end": "2623119"
  },
  {
    "text": "your resources are contended for that physical equipment you only have so much capacity for running dev workstations",
    "start": "2623119",
    "end": "2629599"
  },
  {
    "text": "in a virtualized environment or only so much capacity to spin up a number of parallel environments for a",
    "start": "2629599",
    "end": "2636400"
  },
  {
    "text": "number of parallel sprints that you might be performing around an application for example",
    "start": "2636400",
    "end": "2642480"
  },
  {
    "text": "lastly you can get started with amazon for free so if you want to try any of these",
    "start": "2644400",
    "end": "2649760"
  },
  {
    "text": "or spin up a container to try testing an application in the cloud you can do so",
    "start": "2649760",
    "end": "2655440"
  },
  {
    "text": "on instances sizes under our free tier you can use database service relational database",
    "start": "2655440",
    "end": "2660800"
  },
  {
    "text": "service you can use storage and s3 there's quite a significant list of services that you can use for free for one year",
    "start": "2660800",
    "end": "2667359"
  },
  {
    "text": "so if you don't have account already sign up at aws.amazon.com free and get going",
    "start": "2667359",
    "end": "2676480"
  }
]