[
  {
    "text": "all right well thanks for coming out this morning i know that uh 9 a.m wake up after a party last night",
    "start": "320",
    "end": "6399"
  },
  {
    "text": "was probably a little rough for some um but thanks a lot for coming out my name is bob kinney this is",
    "start": "6399",
    "end": "12639"
  },
  {
    "text": "sebastian stormack we're going to be talking today about building ios apps with aws services excuse me",
    "start": "12639",
    "end": "22080"
  },
  {
    "text": "there we go so this is going to be a little this is",
    "start": "22080",
    "end": "28320"
  },
  {
    "text": "kind of a new format for us so it's we're going to do a workshop in three parts it's going to be some live",
    "start": "28320",
    "end": "33360"
  },
  {
    "text": "coding unfortunately the demo is not available for you to play along and code along but we'll make that available after re",
    "start": "33360",
    "end": "40160"
  },
  {
    "text": "invent we'll take a break after each part to allow you to ask any questions about the",
    "start": "40160",
    "end": "46719"
  },
  {
    "text": "the content in that section um so let's actually take a look at what we're going to actually do today so in part one we'll just review",
    "start": "46719",
    "end": "55840"
  },
  {
    "text": "overview the actual mobile services and sdks the offerings that we actually have then we'll talk about managing users in",
    "start": "55840",
    "end": "63280"
  },
  {
    "text": "authentication with cognito the identity solution as well as im and then we'll talk about synchronization",
    "start": "63280",
    "end": "69760"
  },
  {
    "text": "data with cognito and then we'll talk about how you the scalability concerns and the costs",
    "start": "69760",
    "end": "75439"
  },
  {
    "text": "associated with those services in part two we'll talk about understanding the usage of your app",
    "start": "75439",
    "end": "81840"
  },
  {
    "text": "and understanding engagement metrics with mobile analytics we'll talk about how you can transfer",
    "start": "81840",
    "end": "87759"
  },
  {
    "text": "and manage content in your app with amazon s3 and the transfer manager and we'll talk about how you can also",
    "start": "87759",
    "end": "94000"
  },
  {
    "text": "share and store content with dynamodb with our object mapper then we'll also talk about scalability",
    "start": "94000",
    "end": "99840"
  },
  {
    "text": "and cost concerns with those solutions finally in part three we'll be a little",
    "start": "99840",
    "end": "104880"
  },
  {
    "text": "bit more hypothetical but we'll talk about um sns push our kinesis recorder",
    "start": "104880",
    "end": "111600"
  },
  {
    "text": "elastic beanstalk and some additional advanced topics of extensions to the application we're going to show and again we'll talk about",
    "start": "111600",
    "end": "118079"
  },
  {
    "text": "scalability and costs um so",
    "start": "118079",
    "end": "123119"
  },
  {
    "text": "we're going to actually do some functionality inside of an app and this app is called a we're calling a notes app and the app is",
    "start": "123119",
    "end": "129599"
  },
  {
    "text": "intended to allow you to take pictures and take assign a note to them synchronize that data and also geolocate",
    "start": "129599",
    "end": "136879"
  },
  {
    "text": "it you can make those photos public or private and share them with your friends",
    "start": "136879",
    "end": "144560"
  },
  {
    "text": "so we're going to have login and identity so we're going to have and we're going to enforce a login",
    "start": "144879",
    "end": "150000"
  },
  {
    "text": "inside of this application we're going to take pictures upload them and then",
    "start": "150000",
    "end": "155440"
  },
  {
    "text": "track usage of the app",
    "start": "155440",
    "end": "158560"
  },
  {
    "text": "so when you're building an application you're going to have to do a lot of different things and these are things",
    "start": "160800",
    "end": "165840"
  },
  {
    "text": "that you kind of have to do every single time you build a mobile app the first thing is obviously you want to authenticate",
    "start": "165840",
    "end": "172000"
  },
  {
    "text": "your users so you understand whether or not you're who your users are when they're out they have um",
    "start": "172000",
    "end": "177599"
  },
  {
    "text": "access to the resources that you that you define you want to be able to synchronize data",
    "start": "177599",
    "end": "183200"
  },
  {
    "text": "so that if your user logs in they can access it wherever they log in you want to analyze the user's behavior",
    "start": "183200",
    "end": "189040"
  },
  {
    "text": "you want to see excuse me when your users are coming back and how often they're coming back",
    "start": "189040",
    "end": "194560"
  },
  {
    "text": "you want to so track retention you also want to be able to store and share media for those users and allow them to access",
    "start": "194560",
    "end": "201440"
  },
  {
    "text": "that data you want to deliver it back to them in a fast and easy way you want to be able to engage with your",
    "start": "201440",
    "end": "207599"
  },
  {
    "text": "users and if they're not coming back push notifications to them so that you can get them to come back",
    "start": "207599",
    "end": "212879"
  },
  {
    "text": "and then you also want to be able to allow you to store shared data that can be accessed by any user in the system",
    "start": "212879",
    "end": "218640"
  },
  {
    "text": "and then finally you also want to be able to store and uh track real-time data from from your",
    "start": "218640",
    "end": "224480"
  },
  {
    "text": "mobile device so aws mobile",
    "start": "224480",
    "end": "232640"
  },
  {
    "text": "has a bunch of offerings that actually solve a lot of these problems so the top portion here is our mobile",
    "start": "232640",
    "end": "239439"
  },
  {
    "text": "specific services so amazon cognito which is a product that i work on mobile analytics and amazon sns are",
    "start": "239439",
    "end": "246640"
  },
  {
    "text": "mobile focused services so these were built with the mobile developer in mind but",
    "start": "246640",
    "end": "252000"
  },
  {
    "text": "then we also have our mobile sdks ios which we're talking about today android is next door which has specific",
    "start": "252000",
    "end": "259359"
  },
  {
    "text": "connectors for other services such as kinesis s3 dynamodb ses and sqs",
    "start": "259359",
    "end": "267040"
  },
  {
    "text": "so with the the mobile services and the sdk we can actually solve all of these",
    "start": "267440",
    "end": "272720"
  },
  {
    "text": "common problems the the undifferentiated heavy lifting as we call it",
    "start": "272720",
    "end": "278240"
  },
  {
    "text": "so first up let's talk about how we can authenticate users with amazon cognito",
    "start": "279680",
    "end": "285280"
  },
  {
    "text": "cognito is again a product i work on it's got three main components first is the identity component so we",
    "start": "285680",
    "end": "292000"
  },
  {
    "text": "allow users to log in with any public provider as well as your own authentication system",
    "start": "292000",
    "end": "298000"
  },
  {
    "text": "the system also supports unauthenticated guest access as well as transitioning from authenticated to or unauthenticated to",
    "start": "298000",
    "end": "304800"
  },
  {
    "text": "authenticated access because it's built on top of web identity federation we get secure access",
    "start": "304800",
    "end": "311120"
  },
  {
    "text": "so we can have credentials that are pinned to specific users and we can limit their their access to only the resources for them",
    "start": "311120",
    "end": "318560"
  },
  {
    "text": "finally we also have a data synchronization component as part of cognito so once the user has an identity inside",
    "start": "318560",
    "end": "323919"
  },
  {
    "text": "of the system we give them a small amount of key value pair storage that can synchronize across their devices",
    "start": "323919",
    "end": "331039"
  },
  {
    "text": "as i mentioned so cognito supports multiple login providers facebook google amazon open id connect",
    "start": "333360",
    "end": "339280"
  },
  {
    "text": "plus custom providers via developer authenticated identities",
    "start": "339280",
    "end": "344320"
  },
  {
    "text": "and it helps you manage the best practices so you no longer have to embed credentials inside of your mobile applications",
    "start": "344639",
    "end": "350320"
  },
  {
    "text": "in order to access other aws services",
    "start": "350320",
    "end": "354880"
  },
  {
    "text": "one of the best features at least i think of the of cognito is this unauthenticated guest access",
    "start": "357440",
    "end": "362880"
  },
  {
    "text": "so if you want to have a read only access or a guest user access for your",
    "start": "362880",
    "end": "368800"
  },
  {
    "text": "users and access a subset of resources you can do that with the service",
    "start": "368800",
    "end": "374800"
  },
  {
    "text": "you can save data in the sync service you can access files in s3 and then when the user actually",
    "start": "374800",
    "end": "380319"
  },
  {
    "text": "decides to log in they can actually continue to keep that same identity and keep all their same data",
    "start": "380319",
    "end": "387840"
  },
  {
    "text": "again it's uh we're recommending amazon cognito as a best practice for mobile apps now",
    "start": "390720",
    "end": "397039"
  },
  {
    "text": "it allows you to actually get credentials to the device without embedding them in we can give you short term credentials",
    "start": "397039",
    "end": "403120"
  },
  {
    "text": "that refresh and are pinned to the individual user",
    "start": "403120",
    "end": "409520"
  },
  {
    "text": "so let's talk a little bit about the identity data model at the top level we have your aws account",
    "start": "409520",
    "end": "415199"
  },
  {
    "text": "inside of that you can create any number excuse me up to 60 identity pools and the easiest way to",
    "start": "415199",
    "end": "421919"
  },
  {
    "text": "think about an identity pool is a is a relationship to an app that's not to say",
    "start": "421919",
    "end": "427520"
  },
  {
    "text": "that you are restricted to using an identity pool per app but it's the easiest way to think about it",
    "start": "427520",
    "end": "434080"
  },
  {
    "text": "inside of the application you can have any number of identities and that represents an individual user",
    "start": "434080",
    "end": "439280"
  },
  {
    "text": "inside of the system and then each identity can have zero or",
    "start": "439280",
    "end": "446240"
  },
  {
    "text": "more logins associated with it and if the identity does not have any logins associated with it",
    "start": "446240",
    "end": "451440"
  },
  {
    "text": "it is a guest or unauthenticated user and if it does have and the instant it does have a login it",
    "start": "451440",
    "end": "457120"
  },
  {
    "text": "becomes an authenticated user so getting started with cognito is",
    "start": "457120",
    "end": "463520"
  },
  {
    "text": "actually really easy we just have to log into the console create an identity pool walk through the",
    "start": "463520",
    "end": "469120"
  },
  {
    "text": "wizard and it will actually set up and give you some starter code that you can integrate into your app",
    "start": "469120",
    "end": "476840"
  },
  {
    "text": "immediately that's actually what we're going to do right now inside of our app",
    "start": "476840",
    "end": "493840"
  },
  {
    "text": "i'm sorry i'm sorry many apps in what sense so you",
    "start": "496879",
    "end": "504000"
  },
  {
    "text": "can definitely use the same identity pool across multiple apps",
    "start": "504000",
    "end": "521839"
  },
  {
    "text": "all right so i've gone to the console and i've opened up the cognito getting started so",
    "start": "530320",
    "end": "535920"
  },
  {
    "text": "i'm just going to go ahead and click get started i'm going to give my identity pool a name",
    "start": "535920",
    "end": "542320"
  },
  {
    "text": "and then i'm actually going to use logging with amazon later so i'm actually just going to go ahead",
    "start": "542800",
    "end": "548000"
  },
  {
    "text": "and pre-populate that now i'm just going to grab that app id from my cheat sheet",
    "start": "548000",
    "end": "554560"
  },
  {
    "text": "and then i'm also going to enable unauthenticated guest access just so that i can test some stuff out while",
    "start": "557600",
    "end": "562800"
  },
  {
    "text": "we're building",
    "start": "562800",
    "end": "565360"
  },
  {
    "text": "so what will happen when we get to the next step is is that i'm going to be able to create or the the cons console is going to",
    "start": "572000",
    "end": "578000"
  },
  {
    "text": "prompt me to create two roles uh one for my authenticated users and one for my unauthenticated users",
    "start": "578000",
    "end": "583360"
  },
  {
    "text": "we recommend that you actually split uh the two permission sets so that you actually restrict your unauthenticated",
    "start": "583360",
    "end": "590320"
  },
  {
    "text": "guests to a more limited set of permissions because there's fewer",
    "start": "590320",
    "end": "597120"
  },
  {
    "text": "fewer verifications of of those unauthenticated users so i'll just click update rules",
    "start": "597440",
    "end": "605760"
  },
  {
    "text": "and then now i've i've come to the final step where i've actually got some starter code that i can include inside",
    "start": "605760",
    "end": "611279"
  },
  {
    "text": "of my app um so here uh i'm just going to copy this credentials",
    "start": "611279",
    "end": "618160"
  },
  {
    "text": "provider i'm going to bring it over to my app",
    "start": "618160",
    "end": "623519"
  },
  {
    "text": "i'm going to create my credentials provider inside of my app and then i'll go back here and just take",
    "start": "623519",
    "end": "630079"
  },
  {
    "text": "a look at this so that we also have this concept inside of the mobile sdk of the service configuration",
    "start": "630079",
    "end": "636240"
  },
  {
    "text": "and um this provides a default configuration set so which",
    "start": "636240",
    "end": "641839"
  },
  {
    "text": "region we want to use as well as what credential provider we want to use and because we just created",
    "start": "641839",
    "end": "647040"
  },
  {
    "text": "our cognito credentials provider we want to use that so i'll go ahead and set our default",
    "start": "647040",
    "end": "657200"
  },
  {
    "text": "configuration and it's important to note that in the ios sdk once you set the default configuration",
    "start": "658839",
    "end": "665279"
  },
  {
    "text": "you can't be overridden again but that does not mean that you can't use a different configuration on different service clients you just have",
    "start": "665279",
    "end": "671200"
  },
  {
    "text": "to create a different instance of a configuration to then instantiate that client",
    "start": "671200",
    "end": "677360"
  },
  {
    "text": "so my class needs to keep a a reference to our",
    "start": "678720",
    "end": "685200"
  },
  {
    "text": "our credentials provider what's that called again",
    "start": "686079",
    "end": "693680"
  },
  {
    "text": "it's called crunches of course it is",
    "start": "695279",
    "end": "703839"
  },
  {
    "text": "um",
    "start": "704480",
    "end": "706720"
  },
  {
    "text": "so now that i have my credentials provider and i have initialized it let's uh we want to make sure that we're",
    "start": "709920",
    "end": "715120"
  },
  {
    "text": "actually getting an identity so what i'm going to do is i'm actually going to",
    "start": "715120",
    "end": "720240"
  },
  {
    "text": "call a method called get identity id and this method is actually returns a bf",
    "start": "720240",
    "end": "727120"
  },
  {
    "text": "task which is from the boltz framework which is what the ios sdk is built on top of",
    "start": "727120",
    "end": "732959"
  },
  {
    "text": "and this method ensures that i have a local cached identity id for this user and because it's a bf task",
    "start": "732959",
    "end": "740480"
  },
  {
    "text": "i can actually i can do continue with block and then i",
    "start": "740480",
    "end": "746240"
  },
  {
    "text": "can actually log the identity id on my credentials",
    "start": "746240",
    "end": "752000"
  },
  {
    "text": "provider",
    "start": "756839",
    "end": "759839"
  },
  {
    "text": "and then the identity id itself gets returned either in the results or it's stored",
    "start": "763680",
    "end": "769600"
  },
  {
    "text": "inside of the credentials provider on the identity id property",
    "start": "769600",
    "end": "774480"
  },
  {
    "text": "so now that i have that i'm going to go ahead and start my simulator",
    "start": "783920",
    "end": "793760"
  },
  {
    "text": "i think i tried to start it on my phone instead",
    "start": "799200",
    "end": "802959"
  },
  {
    "text": "where'd you go xcode",
    "start": "805839",
    "end": "815839"
  },
  {
    "text": "power of live demos",
    "start": "849519",
    "end": "857839"
  },
  {
    "text": "um so what i'm hoping to actually show here while i'm waiting for xcode to actually restart is that we can create a new identity",
    "start": "863199",
    "end": "871199"
  },
  {
    "text": "get credentials and then it will actually show up in the console so hopefully we can get this going again",
    "start": "871199",
    "end": "885839"
  },
  {
    "text": "where did you go xcode",
    "start": "904560",
    "end": "913839"
  },
  {
    "text": "so there we go",
    "start": "924839",
    "end": "930800"
  },
  {
    "text": "full screen load fail okay sorry about that folks",
    "start": "938079",
    "end": "955839"
  },
  {
    "text": "um",
    "start": "966839",
    "end": "969839"
  },
  {
    "text": "so",
    "start": "980839",
    "end": "983839"
  },
  {
    "text": "okay so click allow here yes",
    "start": "987279",
    "end": "997839"
  },
  {
    "text": "okay all right so this new version of the app unfortunately doesn't call this of course it does so i'll actually move",
    "start": "1004720",
    "end": "1011680"
  },
  {
    "text": "on to the authentication piece um so now we'll actually try to actually",
    "start": "1011680",
    "end": "1017680"
  },
  {
    "text": "integrate our login with amazon sdk so we're going to use login with amazon and",
    "start": "1017680",
    "end": "1024880"
  },
  {
    "text": "when it comes back we're going to get an access token and we need to actually assign that access token to our credentials provider",
    "start": "1024880",
    "end": "1030640"
  },
  {
    "text": "so that we can associate our identity to uh to the login with amazon user",
    "start": "1030640",
    "end": "1038000"
  },
  {
    "text": "so the way we do that is is that we have on the credentials provider we have a",
    "start": "1038000",
    "end": "1043678"
  },
  {
    "text": "logins map and that's an ns dictionary",
    "start": "1043679",
    "end": "1053840"
  },
  {
    "text": "does not want to behave today",
    "start": "1061760",
    "end": "1067840"
  },
  {
    "text": "okay and what we do is we set that logins map with the the key of the domain of the",
    "start": "1068880",
    "end": "1075280"
  },
  {
    "text": "provider that we're using and then the values are the the tokens that we get back from those providers",
    "start": "1075280",
    "end": "1082000"
  },
  {
    "text": "so in this case our provider is www.amazon.com",
    "start": "1082000",
    "end": "1090960"
  },
  {
    "text": "and our token is actually going to be this token that comes back from the api result of the login with amazon sdk i'm not",
    "start": "1090960",
    "end": "1098320"
  },
  {
    "text": "going to show integration with that today but um there's excuse me plenty of examples",
    "start": "1098320",
    "end": "1103360"
  },
  {
    "text": "online of how to integrate with that",
    "start": "1103360",
    "end": "1109840"
  },
  {
    "text": "all right so now that i've got that i'll go ahead and restart my app",
    "start": "1112320",
    "end": "1123840"
  },
  {
    "text": "oh actually before we do that also um sorry uh what we'll want to do is",
    "start": "1130080",
    "end": "1136400"
  },
  {
    "text": "actually want to make sure that we assign that token um and assign that identity to that",
    "start": "1136400",
    "end": "1142720"
  },
  {
    "text": "the token to that identity and the way that we can do that and we can force that because the credentials provider is",
    "start": "1142720",
    "end": "1148080"
  },
  {
    "text": "lazy loaded we can actually force a refresh on the credentials provider and the refresh method it also returns a",
    "start": "1148080",
    "end": "1154880"
  },
  {
    "text": "bf task and its job is to actually make sure that the credentials are fresh so it",
    "start": "1154880",
    "end": "1160240"
  },
  {
    "text": "goes out to cognito and sts and i'll go over the flow in a bit to actually make sure that the",
    "start": "1160240",
    "end": "1166160"
  },
  {
    "text": "credentials are are there so again it's a bf task so",
    "start": "1166160",
    "end": "1171919"
  },
  {
    "text": "i'll do continue with block and then i can actually um",
    "start": "1171919",
    "end": "1179679"
  },
  {
    "text": "once again i'll just log our identity id to prove that we got credentials",
    "start": "1179679",
    "end": "1193840"
  },
  {
    "text": "always return nil from your bf tasks",
    "start": "1204480",
    "end": "1209200"
  },
  {
    "text": "okay so let's try that again",
    "start": "1212000",
    "end": "1221200"
  },
  {
    "text": "so now when i click the login with amazon it's going to redirect me to the um the browser where i will be able to",
    "start": "1221200",
    "end": "1228000"
  },
  {
    "text": "log in with amazon",
    "start": "1228000",
    "end": "1235840"
  },
  {
    "text": "oh that was dumb",
    "start": "1241440",
    "end": "1249840"
  },
  {
    "text": "now i'm going to get redirected back to the app",
    "start": "1274159",
    "end": "1277840"
  },
  {
    "text": "why aren't my logs coming up there they",
    "start": "1282159",
    "end": "1286320"
  },
  {
    "text": "are and so now i can see in my logs that i have an identity id",
    "start": "1288840",
    "end": "1294880"
  },
  {
    "text": "and if i go back to the console and look at my identity pool again",
    "start": "1294880",
    "end": "1301200"
  },
  {
    "text": "i can see that i now have one identity and that identity is a login with amazon identity",
    "start": "1301200",
    "end": "1307440"
  },
  {
    "text": "so after a few hiccups you can see that we were able to get get authentication integrated",
    "start": "1308480",
    "end": "1319840"
  },
  {
    "text": "uh so let's just review some of the code that we actually put in um so we created our credentials provider and the credentials provider has",
    "start": "1323440",
    "end": "1329760"
  },
  {
    "text": "uh five properties that we assigned to it when we create it the first is the region so cognito is",
    "start": "1329760",
    "end": "1336880"
  },
  {
    "text": "available in u.s east one and eu west one currently",
    "start": "1336880",
    "end": "1342480"
  },
  {
    "text": "and then so that will actually decide which region we hit and where our identity pool is second is",
    "start": "1342480",
    "end": "1348880"
  },
  {
    "text": "our account id and that's your aws account id for your that would be associated with your identity pool",
    "start": "1348880",
    "end": "1354720"
  },
  {
    "text": "then we have your identity pool id which you can get from the console and then the final two things are our",
    "start": "1354720",
    "end": "1359919"
  },
  {
    "text": "two roll arms our unauth roll arm and our author alarm um and we'll use the unauthorized when",
    "start": "1359919",
    "end": "1366480"
  },
  {
    "text": "we're a guest user so we don't have any logins associated with the credentials provider and as soon as we actually add anything",
    "start": "1366480",
    "end": "1373039"
  },
  {
    "text": "to the logins map we'll use the author will provide the auth role to to get the credentials",
    "start": "1373039",
    "end": "1380320"
  },
  {
    "text": "so then we after we created our credentials provider we set our configuration for our purposes we are setting our",
    "start": "1382480",
    "end": "1387600"
  },
  {
    "text": "default region for other service clients to be us east even though cognito is only available in",
    "start": "1387600",
    "end": "1392880"
  },
  {
    "text": "u.s east you can set your credentials for excuse me you can set the credentials provider to use",
    "start": "1392880",
    "end": "1398000"
  },
  {
    "text": "us east or eus-1 but then you can set your default configuration for other service",
    "start": "1398000",
    "end": "1404320"
  },
  {
    "text": "clients to be another region um so then we set our default configuration so that we can use that",
    "start": "1404320",
    "end": "1410559"
  },
  {
    "text": "for other service clients then once we have a a token from a",
    "start": "1410559",
    "end": "1417520"
  },
  {
    "text": "provider we can assign it to our logins map and what you see up on the screen is actually our enum",
    "start": "1417520",
    "end": "1423039"
  },
  {
    "text": "form of the credentials provider map and so we have constants for logging",
    "start": "1423039",
    "end": "1428159"
  },
  {
    "text": "with amazon facebook and google but you can also just as i did in my example use the",
    "start": "1428159",
    "end": "1433760"
  },
  {
    "text": "the bare domains so i mentioned that the credentials",
    "start": "1433760",
    "end": "1440080"
  },
  {
    "text": "provider handles the off flow so let's walk through that really quickly so the first thing that happens in the",
    "start": "1440080",
    "end": "1445520"
  },
  {
    "text": "authenticated flow is is that you log in with your provider in our case log in with amazon",
    "start": "1445520",
    "end": "1451679"
  },
  {
    "text": "what you get back is a provider token so in the case of facebook and logging with",
    "start": "1451679",
    "end": "1458080"
  },
  {
    "text": "amazon that's an oauth token an oauth access token in the case of google or another open id",
    "start": "1458080",
    "end": "1463279"
  },
  {
    "text": "connect provider it's a id token openid connect id token then we",
    "start": "1463279",
    "end": "1471520"
  },
  {
    "text": "we pass that to cognito as part of a get id call and if this is the first time we've ever",
    "start": "1471520",
    "end": "1477840"
  },
  {
    "text": "seen it we will create a new identity for it if it's a returning user we will retrieve that identity",
    "start": "1477840",
    "end": "1483600"
  },
  {
    "text": "and we will after we validate that the token is valid we will return that identity id back to",
    "start": "1483600",
    "end": "1489679"
  },
  {
    "text": "the device the i the credentials provider will actually cache that identity id",
    "start": "1489679",
    "end": "1495440"
  },
  {
    "text": "for you in the keychain and then once it has that information it",
    "start": "1495440",
    "end": "1500559"
  },
  {
    "text": "will pass the token again along with the identity id as part of a get open id token call",
    "start": "1500559",
    "end": "1507200"
  },
  {
    "text": "and then well cognito will once again validate that token with the identity provider and assuming",
    "start": "1507200",
    "end": "1512799"
  },
  {
    "text": "it's valid it will return an open id connect token for cognito",
    "start": "1512799",
    "end": "1518400"
  },
  {
    "text": "for that identity finally the credentials provider will call sts",
    "start": "1518400",
    "end": "1524240"
  },
  {
    "text": "or secure token service with that id open id token and sts will validate it with cognito",
    "start": "1524240",
    "end": "1532960"
  },
  {
    "text": "and assuming that it is valid it will return aws credentials",
    "start": "1532960",
    "end": "1538000"
  },
  {
    "text": "so all of the stuff under the gray box is quite is handled by the credentials provider so the only thing you actually have to implement yourself",
    "start": "1540640",
    "end": "1546799"
  },
  {
    "text": "is the uh the login flow excuse me for the for the provider",
    "start": "1546799",
    "end": "1553278"
  },
  {
    "text": "um so now that we have our login and our authentication handled let's talk about",
    "start": "1555520",
    "end": "1560640"
  },
  {
    "text": "how we can actually authorize access and restrict restrict",
    "start": "1560640",
    "end": "1566640"
  },
  {
    "text": "access um so the way we do that is actually via imrolls and web identity federation",
    "start": "1568840",
    "end": "1574559"
  },
  {
    "text": "um if you're not familiar with imrolls it's actually the the way that we deliver temporary credentials",
    "start": "1574559",
    "end": "1579840"
  },
  {
    "text": "in a various number of ways there are two policies associated with the role one is the trust policy which",
    "start": "1579840",
    "end": "1586080"
  },
  {
    "text": "defines who can assume that role and the second is the access policy which defines what resources that user",
    "start": "1586080",
    "end": "1592320"
  },
  {
    "text": "has access to after they have assumed the role there are three main types of rules aws",
    "start": "1592320",
    "end": "1598960"
  },
  {
    "text": "service roles such as for ec2 or any number of other services",
    "start": "1598960",
    "end": "1605440"
  },
  {
    "text": "cross-account access which allows other users to access resources in your account",
    "start": "1605440",
    "end": "1610720"
  },
  {
    "text": "and then finally identity provider access which is what what cognito uses",
    "start": "1610720",
    "end": "1617200"
  },
  {
    "text": "so i mentioned that we create two roles by default unauthenticated and authenticated",
    "start": "1618720",
    "end": "1624000"
  },
  {
    "text": "if you don't enable one of those those features so if you don't provide uh authentication access when you create",
    "start": "1624000",
    "end": "1630480"
  },
  {
    "text": "your pool or you don't enable on authenticated guest access one of those two roles won't get created for you",
    "start": "1630480",
    "end": "1636240"
  },
  {
    "text": "but in the case where where i did where i created both an app id from amazon and on",
    "start": "1636240",
    "end": "1642559"
  },
  {
    "text": "authenticated access i got both roles by default we give you access to cognito sync",
    "start": "1642559",
    "end": "1648399"
  },
  {
    "text": "and the analytics service but you can extend it to add any other services you you care to",
    "start": "1648399",
    "end": "1656080"
  },
  {
    "text": "and the best part is is that we support fine grain access control with policy variables so you can actually limit access to your",
    "start": "1656080",
    "end": "1662640"
  },
  {
    "text": "individual users so what you see up here is our default trust policy for an unauthenticated",
    "start": "1662640",
    "end": "1669600"
  },
  {
    "text": "guest on on-off role this this part up here the principle um defines that we're trusting cognito",
    "start": "1669600",
    "end": "1677360"
  },
  {
    "text": "specifically the second component the this condition on the odd",
    "start": "1677360",
    "end": "1683600"
  },
  {
    "text": "field is trusting our identity pool because cognito uses openid connect",
    "start": "1683600",
    "end": "1691600"
  },
  {
    "text": "we actually have we follow the openid connect specs so this is the audience field of that",
    "start": "1691600",
    "end": "1696640"
  },
  {
    "text": "of that token that we vent finally we also use the amr field to to define uh what kind of",
    "start": "1696640",
    "end": "1703120"
  },
  {
    "text": "authentication was used so in the case of guest users it's set to unauthenticated for authenticated users it's set to",
    "start": "1703120",
    "end": "1709520"
  },
  {
    "text": "authenticated but it also includes a list of any authentication methods used so",
    "start": "1709520",
    "end": "1715200"
  },
  {
    "text": "in the case of uh in the case of our example we would also have",
    "start": "1715200",
    "end": "1721679"
  },
  {
    "text": "www.amazon.com so this is the default access policy that we give you from the console",
    "start": "1722840",
    "end": "1731120"
  },
  {
    "text": "by default like i said we give you access to mobile analytics to put events and then also access to the cognitosync",
    "start": "1731120",
    "end": "1736840"
  },
  {
    "text": "service excuse me you'll notice here that we",
    "start": "1736840",
    "end": "1741919"
  },
  {
    "text": "have a star policy it may seem too permissive but cognitosync actually has some additional protections to limit",
    "start": "1741919",
    "end": "1748960"
  },
  {
    "text": "access across identities so this is actually okay",
    "start": "1748960",
    "end": "1754559"
  },
  {
    "text": "so let's talk about a use case where we might want to use policy variables um so we have we want to have",
    "start": "1755120",
    "end": "1762080"
  },
  {
    "text": "our users upload photos and then we also want to have them uh be",
    "start": "1762080",
    "end": "1768080"
  },
  {
    "text": "able to index them in dynamodb and we want to allow them to be able to create modify and update",
    "start": "1768080",
    "end": "1773840"
  },
  {
    "text": "but we don't want to allow any other users to have access so what you see here is actually an",
    "start": "1773840",
    "end": "1780000"
  },
  {
    "text": "effective policy for s3 that will allow you the top part would allow you to write read and delete",
    "start": "1780000",
    "end": "1786159"
  },
  {
    "text": "and the bottom part would allow you to list those files based on a prefix and the magic part is this variable here",
    "start": "1786159",
    "end": "1792799"
  },
  {
    "text": "cognito cognito-identity.amazonaws.com colon sub and this will be replaced with the",
    "start": "1792799",
    "end": "1798720"
  },
  {
    "text": "identity id which was that good that i was showing you after we got our credentials",
    "start": "1798720",
    "end": "1806000"
  },
  {
    "text": "same thing works with dynamodb you can use the identity you can use the policy",
    "start": "1806559",
    "end": "1812000"
  },
  {
    "text": "variable with the leading keys to actually restrict access to a to a",
    "start": "1812000",
    "end": "1818159"
  },
  {
    "text": "particular hash key",
    "start": "1818159",
    "end": "1823360"
  },
  {
    "text": "so now i'd like to talk about synchronization with cognito",
    "start": "1823360",
    "end": "1829039"
  },
  {
    "text": "so when we were building the service we talked to a lot of customers and they told us that they were",
    "start": "1830960",
    "end": "1838799"
  },
  {
    "text": "not they were interested in implementing sync but they didn't necessarily want to",
    "start": "1838799",
    "end": "1844240"
  },
  {
    "text": "spend a lot of time to doing it managing offline access managing synchronization across",
    "start": "1844240",
    "end": "1850000"
  },
  {
    "text": "platforms it was a lot of heavy lifting and they didn't necessarily want to have to",
    "start": "1850000",
    "end": "1855919"
  },
  {
    "text": "do it themselves so that's kind of why we built cognito",
    "start": "1855919",
    "end": "1860960"
  },
  {
    "text": "sync so you can think about a news outlet who",
    "start": "1860960",
    "end": "1866240"
  },
  {
    "text": "might be interested in in making the same data available from both their mobile versions of their",
    "start": "1866240",
    "end": "1872720"
  },
  {
    "text": "applications as well as their website we can actually synchronize that data as long as the user logs in",
    "start": "1872720",
    "end": "1879039"
  },
  {
    "text": "and they can have access in all their devices additionally we've also seen a lot of",
    "start": "1879039",
    "end": "1884480"
  },
  {
    "text": "developers using cognitosync for gamestate so users can excuse me",
    "start": "1884480",
    "end": "1890799"
  },
  {
    "text": "use their tablet and play the game and then if they go on the run and they want to continue to play on their phone",
    "start": "1890799",
    "end": "1896320"
  },
  {
    "text": "they can do so",
    "start": "1896320",
    "end": "1899039"
  },
  {
    "text": "so sync has a few different nice features so we can store a",
    "start": "1901440",
    "end": "1908559"
  },
  {
    "text": "reasonable amount of data we have and i'll get to the limits in a second",
    "start": "1908559",
    "end": "1913760"
  },
  {
    "text": "we also have offline access so all of the data is cached locally and then synced when changed and you",
    "start": "1913760",
    "end": "1919840"
  },
  {
    "text": "don't have to write a back end to actually manage all of this so the sync model extends the the",
    "start": "1919840",
    "end": "1926720"
  },
  {
    "text": "identity model so again we have our aws account at the top our identity pools one to up to 60",
    "start": "1926720",
    "end": "1934240"
  },
  {
    "text": "unlimited number of identities and then inside of an identity each identity can have 20 data sets",
    "start": "1934240",
    "end": "1940480"
  },
  {
    "text": "which is a collection of records and the records can be up to uh where the data sets can be up to one",
    "start": "1940480",
    "end": "1946399"
  },
  {
    "text": "megabyte in size so effectively you have 20 megabytes of storage per user",
    "start": "1946399",
    "end": "1952960"
  },
  {
    "text": "so i'll actually go ahead and add data sync to my app now",
    "start": "1953600",
    "end": "1963840"
  },
  {
    "text": "no switch",
    "start": "1967679",
    "end": "1977840"
  },
  {
    "text": "all right um so i'm going to fill in some code here in this the sync manager basic sync manager client that",
    "start": "1989600",
    "end": "1995360"
  },
  {
    "text": "i've uh i've created here inside of my application um to actually manage all the interactions with the",
    "start": "1995360",
    "end": "2000480"
  },
  {
    "text": "cognitosync service um so the first thing that i want to do is um",
    "start": "2000480",
    "end": "2005600"
  },
  {
    "text": "uh get a handle to one of my data sets and that's actually quite easy",
    "start": "2005600",
    "end": "2011679"
  },
  {
    "text": "i just get a handle to the data set by calling by getting first a handle to my default",
    "start": "2012559",
    "end": "2020559"
  },
  {
    "text": "cognito client",
    "start": "2020559",
    "end": "2033840"
  },
  {
    "text": "what's going on",
    "start": "2036480",
    "end": "2047840"
  },
  {
    "text": "early morning coding",
    "start": "2058639",
    "end": "2061838"
  },
  {
    "text": "um so again so i get a handle to my aws cognito data set by getting first a",
    "start": "2074639",
    "end": "2079839"
  },
  {
    "text": "handle to my default cognito client and because i'm using the default",
    "start": "2079839",
    "end": "2085679"
  },
  {
    "text": "configuration set with my credentials provider i can always just call aws cognito default",
    "start": "2085679",
    "end": "2091118"
  },
  {
    "text": "cognito and that will have the default region and the default credentials provider already set for me",
    "start": "2091119",
    "end": "2096720"
  },
  {
    "text": "then i call open or create dataset which will either create or open as the name suggests the data",
    "start": "2096720",
    "end": "2102160"
  },
  {
    "text": "set that i've given as a name and here i'm just going to use this cognitodemo.locations which is going to",
    "start": "2102160",
    "end": "2108480"
  },
  {
    "text": "be a common dataset that i'll use throughout the throughout the sample now that i have a",
    "start": "2108480",
    "end": "2113680"
  },
  {
    "text": "handle to my dataset i can call synchronize on it",
    "start": "2113680",
    "end": "2119119"
  },
  {
    "text": "and as with most methods in the ios sdk it returns a bf tasks so i can do a continuous block to handle",
    "start": "2120320",
    "end": "2127760"
  },
  {
    "text": "any returns if the task has an error then it failed",
    "start": "2127760",
    "end": "2134880"
  },
  {
    "text": "and i can log that and handle it if i need to",
    "start": "2134880",
    "end": "2145838"
  },
  {
    "text": "log that error",
    "start": "2154320",
    "end": "2159839"
  },
  {
    "text": "um",
    "start": "2162240",
    "end": "2164560"
  },
  {
    "text": "otherwise my my it succeeded and i can just also log that as well",
    "start": "2168880",
    "end": "2175119"
  },
  {
    "text": "just as an informational message",
    "start": "2175119",
    "end": "2187838"
  },
  {
    "text": "um so that that allows us to actually synchronize the the data so um",
    "start": "2193680",
    "end": "2201839"
  },
  {
    "text": "synchronization itself doesn't actually return any data it just makes sure that your local cache is in sync with the",
    "start": "2201839",
    "end": "2207040"
  },
  {
    "text": "cloud the sync actually does a pull down from the cloud for any",
    "start": "2207040",
    "end": "2212800"
  },
  {
    "text": "updated changes handles any conflicts locally and then pushes any changes back up to the cloud as basically as a single",
    "start": "2212800",
    "end": "2219359"
  },
  {
    "text": "operation all the synchronization happens as a single",
    "start": "2219359",
    "end": "2225119"
  },
  {
    "text": "can be considered atomic operation we don't actually mark the data as clean",
    "start": "2225119",
    "end": "2231040"
  },
  {
    "text": "until we've actually ensured that all the data is pulled and pushed",
    "start": "2231040",
    "end": "2237839"
  },
  {
    "text": "my app is going to expect to be able to pull data out of my data set so i'm",
    "start": "2238320",
    "end": "2244640"
  },
  {
    "text": "going to also in this cognitosync initialize method do the same thing so i'm just going to actually go ahead and copy",
    "start": "2244640",
    "end": "2251200"
  },
  {
    "text": "this part",
    "start": "2251200",
    "end": "2256960"
  },
  {
    "text": "but in my return method rather than simply just returning nil from my task i",
    "start": "2256960",
    "end": "2263040"
  },
  {
    "text": "have a callback method that i'm going to call and what it's expecting",
    "start": "2263040",
    "end": "2268880"
  },
  {
    "text": "is the array of objects inside of the inside of my inside of my data set and that's easily",
    "start": "2268880",
    "end": "2275119"
  },
  {
    "text": "accessed by just calling data set",
    "start": "2275119",
    "end": "2279599"
  },
  {
    "text": "get all and then it's specifically looking for the values not the keys um so i can just call uh all values",
    "start": "2280560",
    "end": "2289119"
  },
  {
    "text": "on that array or dictionary excuse me um so get all will return a dictionary",
    "start": "2289119",
    "end": "2295520"
  },
  {
    "text": "of all the key value pairs you can also do get all records if you're interested in actually seeing the",
    "start": "2295520",
    "end": "2301520"
  },
  {
    "text": "metadata associated with those records but in most cases get all will will handle most of your use cases",
    "start": "2301520",
    "end": "2309040"
  },
  {
    "text": "okay so then also if i want to be able to clear all my data so if the user wants to say wipe out all of my",
    "start": "2309280",
    "end": "2315440"
  },
  {
    "text": "wipe all of my data um that again is easy so we just need to get a handle to my",
    "start": "2315440",
    "end": "2321359"
  },
  {
    "text": "data set and then call dataset",
    "start": "2321359",
    "end": "2327520"
  },
  {
    "text": "clear so that clears all the data locally in order to actually persist that to the cloud and delete it all",
    "start": "2327599",
    "end": "2333359"
  },
  {
    "text": "locally i still have to synchronize it i don't need to wait for that to",
    "start": "2333359",
    "end": "2339359"
  },
  {
    "text": "complete so i won't use a continuous block here",
    "start": "2339359",
    "end": "2343760"
  },
  {
    "text": "now if the user logs out but doesn't want to wipe their data so that it's a shared device and they want to allow somebody else to log in",
    "start": "2344800",
    "end": "2351440"
  },
  {
    "text": "you can wipe all the local data by using the aws cognito default cognito",
    "start": "2351440",
    "end": "2359119"
  },
  {
    "text": "wipe method and that will make sure that all the cached local data",
    "start": "2359119",
    "end": "2364240"
  },
  {
    "text": "for that user is deleted from the local cache all right so we've talked about how we",
    "start": "2364240",
    "end": "2370000"
  },
  {
    "text": "can synchronize remove and wipe data so let's actually get to actually adding and removing data",
    "start": "2370000",
    "end": "2378079"
  },
  {
    "text": "so again we just need to get a handle on my data set then i can call",
    "start": "2379760",
    "end": "2386000"
  },
  {
    "text": "sorry brain fart today",
    "start": "2388480",
    "end": "2391599"
  },
  {
    "text": "um so the dataset has set string for key which allows you to set the the value",
    "start": "2394839",
    "end": "2402960"
  },
  {
    "text": "basically as if it was a ns dictionary so then i have my passed in data item",
    "start": "2402960",
    "end": "2411280"
  },
  {
    "text": "and my key",
    "start": "2411280",
    "end": "2414079"
  },
  {
    "text": "and because this is operating on the local data set it's uh doesn't use a bf task it's not asynchronous it actually hits the local",
    "start": "2416560",
    "end": "2423520"
  },
  {
    "text": "cache rights and then immediately returns",
    "start": "2423520",
    "end": "2427359"
  },
  {
    "text": "and then the same thing for our remove data set we can actually",
    "start": "2429440",
    "end": "2439838"
  },
  {
    "text": "which is room call remove object for key",
    "start": "2440319",
    "end": "2453839"
  },
  {
    "text": "okay",
    "start": "2464839",
    "end": "2467839"
  },
  {
    "text": "um so then also the one last thing that i'm going to show as well is actually push synchronization",
    "start": "2470000",
    "end": "2476000"
  },
  {
    "text": "so by default all synchronization is polling and",
    "start": "2476000",
    "end": "2484079"
  },
  {
    "text": "this means that you have to constantly check to see whether or not there's any new data but we actually integrate with sns so",
    "start": "2484079",
    "end": "2491200"
  },
  {
    "text": "that you can actually subscribe to receive updates when other devices",
    "start": "2491200",
    "end": "2496240"
  },
  {
    "text": "change your data set and then you can pull the data on demand",
    "start": "2496240",
    "end": "2502800"
  },
  {
    "text": "so the first thing i need to do is actually on the default cognito client i need to",
    "start": "2502800",
    "end": "2510319"
  },
  {
    "text": "register my device that actually takes the raw device token that's returned from our",
    "start": "2510319",
    "end": "2516640"
  },
  {
    "text": "registration from the ios sdk from the apple um and then we also want",
    "start": "2516640",
    "end": "2522480"
  },
  {
    "text": "to subscribe to receive updates so uh subscriptions are are based on data sets so you can either",
    "start": "2522480",
    "end": "2528400"
  },
  {
    "text": "opt in to receive uh partial updates uh for single data sets or all",
    "start": "2528400",
    "end": "2533599"
  },
  {
    "text": "all data sets so i'm actually going to",
    "start": "2533599",
    "end": "2538960"
  },
  {
    "text": "subscribe just to my data set if you want to subscribe to all of your",
    "start": "2538960",
    "end": "2544960"
  },
  {
    "text": "data sets you can actually do that through the default cognito client there's a subscribe all there's",
    "start": "2544960",
    "end": "2550079"
  },
  {
    "text": "also an unsubscribe all to stop receiving notifications",
    "start": "2550079",
    "end": "2555760"
  },
  {
    "text": "and that's it so the first thing before i do try to test push sync is i'm going to go",
    "start": "2556079",
    "end": "2561760"
  },
  {
    "text": "back to my console and edit my identity pool to add the support",
    "start": "2561760",
    "end": "2568799"
  },
  {
    "text": "so this is only available after you create your identity pool you can go in and add the support later",
    "start": "2577200",
    "end": "2582880"
  },
  {
    "text": "so i'm going to go ahead and i don't have a role already created we need to give cognitosync access to",
    "start": "2582880",
    "end": "2590079"
  },
  {
    "text": "push messages through my already configured sns topic or sns application rather so i'm going",
    "start": "2590079",
    "end": "2598400"
  },
  {
    "text": "to allow the console to create a new one for me",
    "start": "2598400",
    "end": "2603039"
  },
  {
    "text": "at which point it's available in this drop down uh and then again i already configured a platform application so i'm",
    "start": "2604960",
    "end": "2610240"
  },
  {
    "text": "just going to go ahead and select that that's already configured for this uh for this application",
    "start": "2610240",
    "end": "2616160"
  },
  {
    "text": "okay great so first things first let's go ahead and",
    "start": "2618960",
    "end": "2624720"
  },
  {
    "text": "start this up",
    "start": "2624720",
    "end": "2627519"
  },
  {
    "text": "on the simulator oh did i think it's missing xcode again",
    "start": "2633200",
    "end": "2649838"
  },
  {
    "text": "god that is frustrating",
    "start": "2674839",
    "end": "2691838"
  },
  {
    "text": "oh come on apple does anyone know the hotkeys to get back to the full screen",
    "start": "2709119",
    "end": "2715838"
  },
  {
    "text": "view",
    "start": "2716839",
    "end": "2719839"
  },
  {
    "text": "that's for xcode i'm sorry you're absolutely right",
    "start": "2723839",
    "end": "2728079"
  },
  {
    "text": "okay",
    "start": "2730839",
    "end": "2733839"
  },
  {
    "text": "this is what i'm saying it says did i close the window by accident",
    "start": "2737280",
    "end": "2747520"
  },
  {
    "text": "that's embarrassing",
    "start": "2747520",
    "end": "2761839"
  },
  {
    "text": "all right so i'm going to deploy this app both on the simulator and on my physical device",
    "start": "2778400",
    "end": "2784480"
  },
  {
    "text": "because i need to be able to actually demonstrate the push notifications so first we'll try to get it running",
    "start": "2784480",
    "end": "2791119"
  },
  {
    "text": "here",
    "start": "2800839",
    "end": "2803839"
  },
  {
    "text": "all right so if i try to click on plus and i can add a note here",
    "start": "2807920",
    "end": "2817838"
  },
  {
    "text": "um so then this gets put into the local store uh pulled to refresh will synchronize",
    "start": "2818880",
    "end": "2825200"
  },
  {
    "text": "and then i can do that um so now let's try to launch this on",
    "start": "2825200",
    "end": "2830240"
  },
  {
    "text": "my device",
    "start": "2830240",
    "end": "2845839"
  },
  {
    "text": "did it close again the play not",
    "start": "2850400",
    "end": "2859838"
  },
  {
    "text": "all right let's relaunch it here",
    "start": "2882880",
    "end": "2887838"
  },
  {
    "text": "sure absolutely while we're waiting might as well",
    "start": "2918720",
    "end": "2928559"
  },
  {
    "text": "yes",
    "start": "2928559",
    "end": "2930800"
  },
  {
    "text": "you you cannot so uh so the with the exception of cognitosync every other service",
    "start": "2941599",
    "end": "2947359"
  },
  {
    "text": "client you can use across the services with a different identity pool uh an identity pool in a different region um because it's a bundled service uh um",
    "start": "2947359",
    "end": "2956160"
  },
  {
    "text": "the cognito identity pool uh needs to be in the region that you're actually using the sync service so if you want to",
    "start": "2956160",
    "end": "2961760"
  },
  {
    "text": "um uh if you want to use sync in in you eus-1 your identity pool needs to be any",
    "start": "2961760",
    "end": "2967280"
  },
  {
    "text": "u.s one correct yep",
    "start": "2967280",
    "end": "2974960"
  },
  {
    "text": "yep absolutely um so uh just to repeat the question uh so the the question was about",
    "start": "2981520",
    "end": "2986640"
  },
  {
    "text": "um uh whether or not you can use the default uh um or whether or not you can override",
    "start": "2986640",
    "end": "2992800"
  },
  {
    "text": "the client uh region for uh cognitosync and as i said because",
    "start": "2992800",
    "end": "2998160"
  },
  {
    "text": "the the services are bundled together the identity pool needs to be available in the region you're trying to",
    "start": "2998160",
    "end": "3003680"
  },
  {
    "text": "sync to so now i have uh the app running on",
    "start": "3003680",
    "end": "3009920"
  },
  {
    "text": "my my physical device and my simulator and hopefully as long as we've done our",
    "start": "3009920",
    "end": "3016480"
  },
  {
    "text": "jobs right we should be able to do a push sync from from here",
    "start": "3016480",
    "end": "3026000"
  },
  {
    "text": "if i add a new note",
    "start": "3026000",
    "end": "3029119"
  },
  {
    "text": "and then synchronize",
    "start": "3034480",
    "end": "3040079"
  },
  {
    "text": "hopefully what i should see on the other end um is that we actually get the sink",
    "start": "3040079",
    "end": "3048240"
  },
  {
    "text": "or maybe not all right uh so let's uh just try actually just",
    "start": "3049440",
    "end": "3054559"
  },
  {
    "text": "restarting the app real quick registration might not have gone through correctly the first time",
    "start": "3054559",
    "end": "3060880"
  },
  {
    "text": "this is part of the reason that the sample is not going is not available today we're still working out some of these uh some of these little kinks so apologize",
    "start": "3061520",
    "end": "3070240"
  },
  {
    "text": "okay all right so let's try this again",
    "start": "3077599",
    "end": "3083838"
  },
  {
    "text": "so actually great way that you can see whether or not the registration has succeeded because we're using sns under the hood",
    "start": "3085920",
    "end": "3092559"
  },
  {
    "text": "and we're using the s resources in my account i can actually go and see whether or not the user is actually registered already",
    "start": "3092559",
    "end": "3099280"
  },
  {
    "text": "so i can quickly go to the sns console",
    "start": "3099280",
    "end": "3103920"
  },
  {
    "text": "check my app and i have an endpoint so it's",
    "start": "3106960",
    "end": "3112559"
  },
  {
    "text": "successfully registered this time so hopefully our second test will work",
    "start": "3112559",
    "end": "3119040"
  },
  {
    "text": "so this time i'll actually delete an object and sink",
    "start": "3119040",
    "end": "3126240"
  },
  {
    "text": "oh come on",
    "start": "3132160",
    "end": "3139838"
  },
  {
    "text": "of course the live demo doesn't want to work um so you'll have to trust me uh",
    "start": "3141040",
    "end": "3148079"
  },
  {
    "text": "if you saw my my cohorts demo uh two days ago the feature does in fact",
    "start": "3148079",
    "end": "3153440"
  },
  {
    "text": "work if you quote it correctly um so but uh the",
    "start": "3153440",
    "end": "3158559"
  },
  {
    "text": "the idea is that we send a silent push notification um that can be handled by the client and",
    "start": "3158559",
    "end": "3163680"
  },
  {
    "text": "then you can initialize the synchronization live and you would be able to update",
    "start": "3163680",
    "end": "3169440"
  },
  {
    "text": "unfortunately fortunately i can't update it um well oh yeah",
    "start": "3169440",
    "end": "3176559"
  },
  {
    "text": "no no so the um uh the we only need the one our gestation endpoint because you actually can't send push notifications",
    "start": "3177920",
    "end": "3183839"
  },
  {
    "text": "to the simulator um uh so the question was do i need two endpoints um and again uh we only need one uh so",
    "start": "3183839",
    "end": "3190880"
  },
  {
    "text": "basically what should happen is is that because i've registered with the physical device and then i push an update from the",
    "start": "3190880",
    "end": "3196319"
  },
  {
    "text": "simulator this physical device should be able to get the update um same is true for mobile and uh or for",
    "start": "3196319",
    "end": "3201920"
  },
  {
    "text": "web um so the demo that my cohorts actually showed the other day they actually updated the data set from",
    "start": "3201920",
    "end": "3207760"
  },
  {
    "text": "a browser application and the device actually received the update um so that's data sync",
    "start": "3207760",
    "end": "3216240"
  },
  {
    "text": "so the um the it should be milliseconds um obviously there are the vagaries uh um",
    "start": "3219359",
    "end": "3225680"
  },
  {
    "text": "and the question was how long should it take um uh",
    "start": "3225680",
    "end": "3230720"
  },
  {
    "text": "so there's the vagaries of delivery of notifications by the by the push to provider apple in this",
    "start": "3230720",
    "end": "3235760"
  },
  {
    "text": "case um whether or not your device can actually connect to the push endpoint but it",
    "start": "3235760",
    "end": "3240960"
  },
  {
    "text": "should be reasonably fast um the synchronization itself might be a little bit longer um but the the delivery of the",
    "start": "3240960",
    "end": "3248240"
  },
  {
    "text": "notification should be pretty quick",
    "start": "3248240",
    "end": "3251839"
  },
  {
    "text": "so this uh the question was what was the size the the limit of the size of the data it's one megabyte per",
    "start": "3255200",
    "end": "3262079"
  },
  {
    "text": "data set up to 20 data sets per user",
    "start": "3262079",
    "end": "3266480"
  },
  {
    "text": "um so we'll actually ha and the question was do we do retries and we're going to have a section on sns specifically a",
    "start": "3270079",
    "end": "3275599"
  },
  {
    "text": "little bit later in the section and we'll go over that but um there are retries on that",
    "start": "3275599",
    "end": "3281280"
  },
  {
    "text": "um so just review the sync code again we everything's kind of pivoted off of the our cognito client our",
    "start": "3281280",
    "end": "3288559"
  },
  {
    "text": "and our data sets so we get our handle to our cognito client by calling default cognito we get a handle to our",
    "start": "3288559",
    "end": "3295599"
  },
  {
    "text": "data set by calling open or create data set we synchronize our data set by calling synchronize which returns a bf task so",
    "start": "3295599",
    "end": "3302319"
  },
  {
    "text": "we can continue with block and handle callbacks when we want to update data we do set",
    "start": "3302319",
    "end": "3310319"
  },
  {
    "text": "string when we want to remove we do remove object clear data we can clear data sets",
    "start": "3310319",
    "end": "3316319"
  },
  {
    "text": "but we have to synchronize afterwards and then we also can wipe all the local data",
    "start": "3316319",
    "end": "3323119"
  },
  {
    "text": "uh so so talking about the scalability and costs we've already kind of mentioned some of the limits uh no no no limit on the number of",
    "start": "3323599",
    "end": "3330960"
  },
  {
    "text": "identities and the other important thing to note is is that because we are recommending it as a best practice for mobile",
    "start": "3330960",
    "end": "3336960"
  },
  {
    "text": "for mobile applications all of the access uh um the login and uh identity management",
    "start": "3336960",
    "end": "3343920"
  },
  {
    "text": "stuff is all offered free of charge uh is you know if you don't use any of the synchronization features of cognito you",
    "start": "3343920",
    "end": "3349599"
  },
  {
    "text": "don't have to pay anything um then inside of the identity itself",
    "start": "3349599",
    "end": "3354960"
  },
  {
    "text": "uh 20 data sets one megabyte a piece uh and then uh the actual um",
    "start": "3354960",
    "end": "3362400"
  },
  {
    "text": "so free tier for for cognito is uh 10 gigabytes of space 1 million synchronizations per",
    "start": "3362400",
    "end": "3370079"
  },
  {
    "text": "month and then after that it's 15 cents per gigabyte and 15 cents per",
    "start": "3370079",
    "end": "3376240"
  },
  {
    "text": "uh one million sinks i believe per hundred thousand six",
    "start": "3376240",
    "end": "3382079"
  },
  {
    "text": "yeah sorry ten thousand six excuse me ten thousand sinks fifteen cents every ten thousand six",
    "start": "3385680",
    "end": "3391280"
  },
  {
    "text": "um so that's actually the end of our first section um we've obviously been taking questions as we've been going along but",
    "start": "3391280",
    "end": "3396880"
  },
  {
    "text": "does anybody else have any other questions about this first section yes",
    "start": "3396880",
    "end": "3405839"
  },
  {
    "text": "uh yes so uh most most application logins uh login with amazon included uses sort of",
    "start": "3417040",
    "end": "3422319"
  },
  {
    "text": "a all auth single sign-in flow where it redirects to a single sign-on app um in the amazon case it redirects to",
    "start": "3422319",
    "end": "3429119"
  },
  {
    "text": "the browser but um in facebook you could redirect it redirects to the facebook app then it redirects back you get it and",
    "start": "3429119",
    "end": "3434799"
  },
  {
    "text": "then when you get redirected back you get that token",
    "start": "3434799",
    "end": "3446799"
  },
  {
    "text": "if you wanted to write your own authentication system um you can certainly do that inside of the app",
    "start": "3446799",
    "end": "3451839"
  },
  {
    "text": "uh unless it is actually an open id connect flow you will have to follow a different flow",
    "start": "3451839",
    "end": "3458000"
  },
  {
    "text": "what we call developer authenticated identities for for doing that so you would actually then have to",
    "start": "3458000",
    "end": "3464160"
  },
  {
    "text": "manage the authentication flow on the back end to call cognito",
    "start": "3464160",
    "end": "3470079"
  },
  {
    "text": "any other questions about cognito sync or identity",
    "start": "3470240",
    "end": "3475838"
  },
  {
    "text": "yeah so the yeah so the question was uh what about android and web um so we have an android sdk we have a",
    "start": "3488079",
    "end": "3495040"
  },
  {
    "text": "javascript sdk that we actually just launched last week all of these uh work with the same back",
    "start": "3495040",
    "end": "3500319"
  },
  {
    "text": "end same authentication infrastructure so you can get same data access on all three",
    "start": "3500319",
    "end": "3506079"
  },
  {
    "text": "all three platforms yes",
    "start": "3506079",
    "end": "3511680"
  },
  {
    "text": "the question was whether or not we have any concept of grouping of users not currently",
    "start": "3512960",
    "end": "3518640"
  },
  {
    "text": "any other questions okay so let's go ahead and move on to",
    "start": "3519520",
    "end": "3527280"
  },
  {
    "text": "part two",
    "start": "3527280",
    "end": "3531839"
  },
  {
    "text": "um so let's talk a little bit about analyzing user behavior with mobile analytics um",
    "start": "3532720",
    "end": "3541359"
  },
  {
    "text": "so as developers we use a lot of different kinds of tools obviously some of the most popular ones",
    "start": "3541359",
    "end": "3548240"
  },
  {
    "text": "are cloud computing which obviously you all know because you're here as well as analytics tools",
    "start": "3548240",
    "end": "3555680"
  },
  {
    "text": "so analytics and cloud computing are among the 10 most popular tools that developers use today",
    "start": "3555680",
    "end": "3562799"
  },
  {
    "text": "so when we were actually going out and building our analytics service we talked to a lot of customers as we do",
    "start": "3563920",
    "end": "3569520"
  },
  {
    "text": "and they told us that they wanted to be able to get their metrics and their analytics in a timely manner and they wanted to own that data",
    "start": "3569520",
    "end": "3577200"
  },
  {
    "text": "just as with as with any other service so we have we have our mobile analytics",
    "start": "3577200",
    "end": "3583760"
  },
  {
    "text": "platform um it uh it has an sla of uh within 60",
    "start": "3583760",
    "end": "3589040"
  },
  {
    "text": "minutes the data um that you send up from the device um will be available on the dashboard uh",
    "start": "3589040",
    "end": "3595599"
  },
  {
    "text": "so the sla is 60 minutes currently it's actually much the actual effective speed is actually",
    "start": "3595599",
    "end": "3600640"
  },
  {
    "text": "much faster you can expand and scale so we obviously we're",
    "start": "3600640",
    "end": "3605680"
  },
  {
    "text": "just like any other aws service we can scale up uh and uh the data is collected and",
    "start": "3605680",
    "end": "3611599"
  },
  {
    "text": "anonymized so there's no potential leak of information for for your customers",
    "start": "3611599",
    "end": "3618480"
  },
  {
    "text": "uh so here you see a default dashboard and these are a bunch of the basic key",
    "start": "3618799",
    "end": "3623839"
  },
  {
    "text": "metrics that you get sort of out of the box uh with mobile analytics platform standard m-a-u-d-a-u",
    "start": "3623839",
    "end": "3630400"
  },
  {
    "text": "new users sessions etc",
    "start": "3630400",
    "end": "3634798"
  },
  {
    "text": "so additionally we also have retention metrics so you can track to see whether or not your users",
    "start": "3638799",
    "end": "3644559"
  },
  {
    "text": "are coming back and best of all we actually have custom events so you can actually",
    "start": "3644559",
    "end": "3650640"
  },
  {
    "text": "add additional events that you might be interested in tracking whether or not it's a you're",
    "start": "3650640",
    "end": "3657200"
  },
  {
    "text": "testing whether or not someone's using a new feature et cetera yes",
    "start": "3657200",
    "end": "3671839"
  },
  {
    "text": "uh not currently um so the uh the analytics platform uses the uh mau model that a lot of other",
    "start": "3675200",
    "end": "3681119"
  },
  {
    "text": "analytics platforms use which is basically actually the device installation not a",
    "start": "3681119",
    "end": "3686240"
  },
  {
    "text": "individual user identified user um so getting started with analytics uh is",
    "start": "3686240",
    "end": "3692960"
  },
  {
    "text": "is also pretty easy go to the console it uses cognito as the",
    "start": "3692960",
    "end": "3698400"
  },
  {
    "text": "the mechanism for getting credentials to the service it's available inside of the sdk and",
    "start": "3698400",
    "end": "3704799"
  },
  {
    "text": "then you can immediately start engaging and adding metrics",
    "start": "3704799",
    "end": "3711200"
  },
  {
    "text": "um so i'm not going to do a live demonstration of recording events but here's an example of how you would actually create a",
    "start": "3711359",
    "end": "3718480"
  },
  {
    "text": "a custom event with our sdk so the first thing what we do is we get",
    "start": "3718480",
    "end": "3723520"
  },
  {
    "text": "our analytics client and the analytics client is defined by our app id which you create inside of",
    "start": "3723520",
    "end": "3729039"
  },
  {
    "text": "the console um and then we uh create an event client from that um then once we have our event",
    "start": "3729039",
    "end": "3737039"
  },
  {
    "text": "client we create our event type which is our specific event we're trying to track",
    "start": "3737039",
    "end": "3742640"
  },
  {
    "text": "then we can add specific attributes to that and we can add any number of attributes",
    "start": "3742640",
    "end": "3747680"
  },
  {
    "text": "and then we record the event so the nice thing about the analytics client is actually it does batching",
    "start": "3747680",
    "end": "3753119"
  },
  {
    "text": "so you can emit any number of metrics and then once it reads a certain threshold or",
    "start": "3753119",
    "end": "3758799"
  },
  {
    "text": "in terms of size or time it will batch those up and send them as a single",
    "start": "3758799",
    "end": "3766160"
  },
  {
    "text": "request all right so let's move on to uh to s3 for storing and accessing data",
    "start": "3766839",
    "end": "3774720"
  },
  {
    "text": "uh so the way we do that um with our ios sdk is that we actually have a nice feature called the transfer",
    "start": "3775599",
    "end": "3781280"
  },
  {
    "text": "manager and for larger uploads it will actually break apart and do multi-part uploads",
    "start": "3781280",
    "end": "3788079"
  },
  {
    "text": "um it will retry parts uh unfortunately we're at the mercy of s3 so the smallest part that we",
    "start": "3788079",
    "end": "3794720"
  },
  {
    "text": "can do is five megs so anything smaller than that will be do a will be a single upload",
    "start": "3794720",
    "end": "3800079"
  },
  {
    "text": "um it is fault tolerant so if it fails um for any reason because the network",
    "start": "3800079",
    "end": "3805680"
  },
  {
    "text": "the network dropped it will retry um we can pause and resume uh again uh for",
    "start": "3805680",
    "end": "3813359"
  },
  {
    "text": "uploads we can only do that on five meg uh blocks for downloads we can uh pause and resume",
    "start": "3813359",
    "end": "3818799"
  },
  {
    "text": "uh at any point and it's been obviously optimized for uh for the platform",
    "start": "3818799",
    "end": "3825839"
  },
  {
    "text": "so what i'm going to do now is actually integrate the s3 transfer manager into my app now",
    "start": "3826319",
    "end": "3839838"
  },
  {
    "text": "okay",
    "start": "3850839",
    "end": "3853839"
  },
  {
    "text": "all right so the first thing that we need to do is we need to create a request for an upload um and so the",
    "start": "3857599",
    "end": "3867838"
  },
  {
    "text": "the s3 transfer manager includes a number of uh request objects including",
    "start": "3870880",
    "end": "3878880"
  },
  {
    "text": "upload request so i create my request",
    "start": "3878880",
    "end": "3885119"
  },
  {
    "text": "and then we need to give it the information that we need to actually upload and so the first thing that we'll",
    "start": "3888079",
    "end": "3894079"
  },
  {
    "text": "need is i actually need to give a variable name",
    "start": "3894079",
    "end": "3908160"
  },
  {
    "text": "so the first thing we need is a bucket so this is the s3 bucket that we actually want to upload to",
    "start": "3908160",
    "end": "3914640"
  },
  {
    "text": "and this is the bucket that i've already pre-created for this purpose then we also need a key i have a little",
    "start": "3918960",
    "end": "3925280"
  },
  {
    "text": "helper method here that will actually give me the key for the the file that i",
    "start": "3925280",
    "end": "3931599"
  },
  {
    "text": "want to do",
    "start": "3931599",
    "end": "3937839"
  },
  {
    "text": "and that is going to be based on the",
    "start": "3942160",
    "end": "3947200"
  },
  {
    "text": "url which i of course removed okay i'm gonna have to go back",
    "start": "3947200",
    "end": "3952559"
  },
  {
    "text": "and get that for my cheat sheet um okay and then uh so this also just allows me to do visible to all so",
    "start": "3952559",
    "end": "3958400"
  },
  {
    "text": "uh when we do public photos we need to separate those out from the rest of them so we can make",
    "start": "3958400",
    "end": "3964640"
  },
  {
    "text": "sure that our private photos are private and our public photos are actually",
    "start": "3964640",
    "end": "3969359"
  },
  {
    "text": "public",
    "start": "3976839",
    "end": "3979839"
  },
  {
    "text": "okay that's just the url",
    "start": "3986559",
    "end": "3993839"
  },
  {
    "text": "sloppy all right so now that we have our key",
    "start": "3999280",
    "end": "4007839"
  },
  {
    "text": "and our bucket we also obviously need the payload of the data that we're actually",
    "start": "4007839",
    "end": "4014000"
  },
  {
    "text": "trying to upload um and the transfer manager can actually",
    "start": "4014000",
    "end": "4019520"
  },
  {
    "text": "read that from a file directly from disk",
    "start": "4019520",
    "end": "4034000"
  },
  {
    "text": "fix that first okay",
    "start": "4034000",
    "end": "4041119"
  },
  {
    "text": "uh so then we set our body to be the um",
    "start": "4042640",
    "end": "4048559"
  },
  {
    "text": "a url that uh is represented by the url that file that we're um uh local on disk um",
    "start": "4048559",
    "end": "4055680"
  },
  {
    "text": "and then the ns3 transfer manager will actually open it manage the the stream associated with it read the",
    "start": "4055680",
    "end": "4061119"
  },
  {
    "text": "bytes and send them up so those are the three things that we",
    "start": "4061119",
    "end": "4066720"
  },
  {
    "text": "actually need to do in order for our for our request now we need to get our handle to our transfer manager",
    "start": "4066720",
    "end": "4077839"
  },
  {
    "text": "and as with the cognito client we can get a default instance of this transfer",
    "start": "4082960",
    "end": "4089520"
  },
  {
    "text": "manager which uses the default configuration so to go back to one of the earlier questions if i wanted to use",
    "start": "4089520",
    "end": "4095839"
  },
  {
    "text": "an upload to a different region i can initialize it with a different configuration with a different region and upload",
    "start": "4095839",
    "end": "4102480"
  },
  {
    "text": "photos to any region that s3 supported which is all of them",
    "start": "4102480",
    "end": "4108158"
  },
  {
    "text": "so then actually now that i have my request in my transfer manager all i have to do is actually call",
    "start": "4110319",
    "end": "4116000"
  },
  {
    "text": "upload with the request and uh so a message you'll hear me say a",
    "start": "4116000",
    "end": "4122400"
  },
  {
    "text": "lot is is this returns a bf task so i can say that i can continue with block",
    "start": "4122400",
    "end": "4133520"
  },
  {
    "text": "um so uh as an example um i can say that if i do aws configuration",
    "start": "4133520",
    "end": "4141359"
  },
  {
    "text": "or service configuration i could create a config here",
    "start": "4141359",
    "end": "4148960"
  },
  {
    "text": "and then you can specify a region here and then i can specify any region and any credentials provider from there",
    "start": "4153040",
    "end": "4160080"
  },
  {
    "text": "then after i have that i could then instead of calling default",
    "start": "4160080",
    "end": "4166159"
  },
  {
    "text": "transfer manager i can call",
    "start": "4166159",
    "end": "4170000"
  },
  {
    "text": "transfer manager",
    "start": "4171600",
    "end": "4175838"
  },
  {
    "text": "okay let's just put that one and then you can emit it with the",
    "start": "4178880",
    "end": "4184400"
  },
  {
    "text": "configuration and then you can give it an identifier so that's how you would do that",
    "start": "4184400",
    "end": "4190560"
  },
  {
    "text": "so again i'll put in some basic error handling here",
    "start": "4196960",
    "end": "4203840"
  },
  {
    "text": "and then assuming that it exceeds i have an on success handler that's",
    "start": "4230480",
    "end": "4236320"
  },
  {
    "text": "going to just uh handle some ui components inside of my app",
    "start": "4236320",
    "end": "4241600"
  },
  {
    "text": "and the on success expects to get back the key that i uploaded so i'll just pass that back",
    "start": "4241600",
    "end": "4248960"
  },
  {
    "text": "always make sure you return nil",
    "start": "4257120",
    "end": "4260560"
  },
  {
    "text": "and then i'll actually just move this deletion of my file temporary file into my success",
    "start": "4264320",
    "end": "4271520"
  },
  {
    "text": "handler",
    "start": "4271520",
    "end": "4273840"
  },
  {
    "text": "make sure we turn the key okay so that will be upload the file and so then that will",
    "start": "4276640",
    "end": "4282159"
  },
  {
    "text": "put the object in s3 i will get back a key path that i've assigned to it but then how do i want to get it back",
    "start": "4282159",
    "end": "4290239"
  },
  {
    "text": "so the transfer manager is good for for downloading files i would highly recommend it for",
    "start": "4290239",
    "end": "4295520"
  },
  {
    "text": "downloading large files but if you want to support background transfers unfortunately this",
    "start": "4295520",
    "end": "4301280"
  },
  {
    "text": "the transfer manager does not work with apple's background downloads um so we'll actually uh we'll",
    "start": "4301280",
    "end": "4306800"
  },
  {
    "text": "actually walk through how you can use our pre-signed urls uh to actually get a",
    "start": "4306800",
    "end": "4312159"
  },
  {
    "text": "url that you could then hand to a url session which then could be used inside of a background download",
    "start": "4312159",
    "end": "4320800"
  },
  {
    "text": "so um so much like the transfer manager we have a special class a special class that handles our",
    "start": "4326840",
    "end": "4333920"
  },
  {
    "text": "pre-sign urls which is the s3 pc pre-signed url builder so i'm going to get an instance of that",
    "start": "4333920",
    "end": "4343840"
  },
  {
    "text": "and then i need to construct a request for that",
    "start": "4348719",
    "end": "4353760"
  },
  {
    "text": "for the pre-signed url",
    "start": "4353840",
    "end": "4357840"
  },
  {
    "text": "brain fart too many of those this morning",
    "start": "4366960",
    "end": "4371840"
  },
  {
    "text": "again of course",
    "start": "4372560",
    "end": "4376560"
  },
  {
    "text": "all right so our request is called s3 aws s3 get pre-signed url request",
    "start": "4378000",
    "end": "4385600"
  },
  {
    "text": "create that",
    "start": "4385600",
    "end": "4388239"
  },
  {
    "text": "and then the request our pre-sign url request much like our",
    "start": "4395199",
    "end": "4403280"
  },
  {
    "text": "our upload request we'll need a bucket",
    "start": "4403760",
    "end": "4413840"
  },
  {
    "text": "it will need a key",
    "start": "4418080",
    "end": "4427840"
  },
  {
    "text": "which is just our key but unlike uh unlike the um unlike the upload",
    "start": "4428719",
    "end": "4436719"
  },
  {
    "text": "we don't have to supply a stream so we because we're just building the url request what we're going to get back is a url",
    "start": "4436719",
    "end": "4442800"
  },
  {
    "text": "that we can then fetch content back for so that's really all we need is a bucket",
    "start": "4442800",
    "end": "4448159"
  },
  {
    "text": "and key for this request so then on our builder we call git",
    "start": "4448159",
    "end": "4456480"
  },
  {
    "text": "pre-sign url with the request this returns a bf object",
    "start": "4456480",
    "end": "4463199"
  },
  {
    "text": "bf task rather so we can continue with block and then what comes back inside of the",
    "start": "4463199",
    "end": "4469520"
  },
  {
    "text": "task is actually the the url um that we can actually use to fetch",
    "start": "4469520",
    "end": "4475199"
  },
  {
    "text": "from remember correctly um yep",
    "start": "4475199",
    "end": "4479840"
  },
  {
    "text": "okay uh so so i'll put in some",
    "start": "4480239",
    "end": "4485360"
  },
  {
    "text": "uh so i'll put in some basic error handling again",
    "start": "4486719",
    "end": "4497840"
  },
  {
    "text": "and then if we don't fail then we actually have the url and then we can actually get that data",
    "start": "4514960",
    "end": "4525840"
  },
  {
    "text": "um i've actually uh i don't know if anybody noticed but i'm actually doing this isn't a a dis obviously an ace asynchronous dispatch",
    "start": "4541199",
    "end": "4548080"
  },
  {
    "text": "request with gcd um obviously don't want to be doing this fetch on the main thread",
    "start": "4548080",
    "end": "4554640"
  },
  {
    "text": "you could also do it with a bf task but we just decided to use gcd here",
    "start": "4555040",
    "end": "4560800"
  },
  {
    "text": "so my my client is expecting to",
    "start": "4560800",
    "end": "4568080"
  },
  {
    "text": "get the um the contents of this and store it uh we're also storing it in a cache at a",
    "start": "4568080",
    "end": "4573520"
  },
  {
    "text": "local cache so that i don't need to fetch the contents um every single time",
    "start": "4573520",
    "end": "4580880"
  },
  {
    "text": "so i need to make sure that i actually store that data inside of",
    "start": "4580880",
    "end": "4586080"
  },
  {
    "text": "my cache and i'm just going to go ahead and get this from here um",
    "start": "4586080",
    "end": "4595120"
  },
  {
    "text": "so i fetch my data with my url which i got from my pre-signed url request",
    "start": "4595120",
    "end": "4600320"
  },
  {
    "text": "i'm going to turn that into a image and store it in an image cache so that i can get it later",
    "start": "4600320",
    "end": "4606320"
  },
  {
    "text": "um and then i just need to call our on",
    "start": "4607520",
    "end": "4612560"
  },
  {
    "text": "success handler when i'm done so that i can actually proceed with my ui",
    "start": "4612560",
    "end": "4620239"
  },
  {
    "text": "so while we're here we'll also do some other s3 functionality um so if we want to actually delete",
    "start": "4620320",
    "end": "4626480"
  },
  {
    "text": "files so transfer manager handles uploads and downloads if we want to do any sort of",
    "start": "4626480",
    "end": "4631840"
  },
  {
    "text": "low-level operations with the objects in our s3 bucket we'll have to drop down to our low level",
    "start": "4631840",
    "end": "4637840"
  },
  {
    "text": "interface so that's what i'm going to do now i'm going to get a handle to my s3 client which is just aws s3",
    "start": "4637840",
    "end": "4651840"
  },
  {
    "text": "and then my delete request is going to be aws s3 delete",
    "start": "4657679",
    "end": "4665600"
  },
  {
    "text": "object request",
    "start": "4665600",
    "end": "4668960"
  },
  {
    "text": "like our pre-sown url over again all we need is a bucket",
    "start": "4677520",
    "end": "4682239"
  },
  {
    "text": "and a key",
    "start": "4688400",
    "end": "4693840"
  },
  {
    "text": "and our brackets actually passed in for us so then after after i've created my",
    "start": "4696400",
    "end": "4703120"
  },
  {
    "text": "request and i have a handle to my client once again all i have to do is call the appropriate method",
    "start": "4703120",
    "end": "4709120"
  },
  {
    "text": "on our service client with the request this returns a bf task so i can call",
    "start": "4709120",
    "end": "4715360"
  },
  {
    "text": "continue with block and do some basic error handling",
    "start": "4715360",
    "end": "4721840"
  },
  {
    "text": "oh thank you thank you",
    "start": "4732320",
    "end": "4738560"
  },
  {
    "text": "would have actually gotten a validation error if i had tried to actually do that with the the key included inside of it so it's",
    "start": "4744480",
    "end": "4751040"
  },
  {
    "text": "fine anyway all right so let's get that let's get this rest of this coded up",
    "start": "4751040",
    "end": "4757678"
  },
  {
    "text": "all right um if we succeed we'll remove our object from the cache",
    "start": "4760159",
    "end": "4767360"
  },
  {
    "text": "always return nil when we're done with our bf task",
    "start": "4770640",
    "end": "4777840"
  },
  {
    "text": "okay so now we've got get put delete and that's pretty much all we",
    "start": "4783679",
    "end": "4789679"
  },
  {
    "text": "need to do with s3 for this particular application so let's go ahead and see if we can give it a try",
    "start": "4789679",
    "end": "4805840"
  },
  {
    "text": "uh any questions while we're waiting so far yes",
    "start": "4812639",
    "end": "4819840"
  },
  {
    "text": "uh so this is a um the framework is the ios sdk uh it's uh built on top of the",
    "start": "4821040",
    "end": "4827040"
  },
  {
    "text": "boltz framework which actually is from parson facebook um it's a really nice",
    "start": "4827040",
    "end": "4833840"
  },
  {
    "text": "asynchronous library that allows us to kind of do this chaining that i've been doing in a lot of the different service",
    "start": "4834320",
    "end": "4840719"
  },
  {
    "text": "requests",
    "start": "4844840",
    "end": "4847840"
  },
  {
    "text": "i should also mention that the sdk also is used as cocoapods so you can actually pull down the sdk",
    "start": "4850480",
    "end": "4858719"
  },
  {
    "text": "and all of its dependencies uh via that via cocoapods we also have binary builds",
    "start": "4858719",
    "end": "4863760"
  },
  {
    "text": "um but we actually recommend cocoapods particularly if you're going to start integrating with other sdks because that way it'll manage the",
    "start": "4863760",
    "end": "4870960"
  },
  {
    "text": "dependencies a little bit better all right so let's go ahead and see if try we can add a photo",
    "start": "4870960",
    "end": "4889360"
  },
  {
    "text": "um so that that's actually a bug in the um the the app it's trying to it's trying",
    "start": "4889360",
    "end": "4894639"
  },
  {
    "text": "to load the photo that doesn't exist on the the note that doesn't exist",
    "start": "4894639",
    "end": "4903840"
  },
  {
    "text": "oh lovely",
    "start": "4905040",
    "end": "4908080"
  },
  {
    "text": "let's try that again",
    "start": "4911120",
    "end": "4917840"
  },
  {
    "text": "all right so let's select one of these pre-stock photos make sure that we say add a note",
    "start": "4937679",
    "end": "4958400"
  },
  {
    "text": "oh well so our upload failed um",
    "start": "4958400",
    "end": "4963920"
  },
  {
    "text": "someone i wonder why that would be um so i'm gonna harken back to what i was talking about earlier where we said that",
    "start": "4965199",
    "end": "4971760"
  },
  {
    "text": "by default our roles only have access to um cognitosync and the mobile analytics client",
    "start": "4971760",
    "end": "4978239"
  },
  {
    "text": "so we actually don't have permissions to actually upload to our bucket so what i'm going to do is go",
    "start": "4978239",
    "end": "4986480"
  },
  {
    "text": "and go to my console all of this is managed through the i am",
    "start": "4986480",
    "end": "4992000"
  },
  {
    "text": "console i can go to the roles tab i can select my workshop role",
    "start": "4992000",
    "end": "4997440"
  },
  {
    "text": "i'm going to be looking at my auth role and i could update the existing policy personally i",
    "start": "4997440",
    "end": "5003520"
  },
  {
    "text": "actually like to attach new policies when i find when i need to add new functionality that way i can",
    "start": "5003520",
    "end": "5008639"
  },
  {
    "text": "delete and remove functionality a little bit easier so i'm going to go ahead and click attach new policy",
    "start": "5008639",
    "end": "5015040"
  },
  {
    "text": "select a custom policy",
    "start": "5015040",
    "end": "5018320"
  },
  {
    "text": "i'm going to grab that from my cheat sheet",
    "start": "5020880",
    "end": "5024560"
  },
  {
    "text": "no sir i'm not going to change i'm not going to code that by hand",
    "start": "5027120",
    "end": "5032080"
  },
  {
    "text": "um and so you can see here what i'm allowing to do uh i'm not actually going to ever list",
    "start": "5033040",
    "end": "5038719"
  },
  {
    "text": "files for directly from s3 so i'm only ever putting getting and deleting objects and then i'm giving it specifically to",
    "start": "5038719",
    "end": "5045760"
  },
  {
    "text": "my bucket to the pictures and public and private prefix so private photos that i don't share",
    "start": "5045760",
    "end": "5051920"
  },
  {
    "text": "publicly will go into the private folder public photos that i want to share with other people will go in the public",
    "start": "5051920",
    "end": "5057040"
  },
  {
    "text": "folder",
    "start": "5057040",
    "end": "5059360"
  },
  {
    "text": "so folders don't actually exist in s3 so they they just exist as prefixes the console",
    "start": "5062159",
    "end": "5068000"
  },
  {
    "text": "kind of gives you this this notion that folders actually exist but they don't it's just a special prefix so",
    "start": "5068000",
    "end": "5075840"
  },
  {
    "text": "the only thing that needs to be recreated in this case is the bucket and then the prefixes will just work out",
    "start": "5075840",
    "end": "5082840"
  },
  {
    "text": "afterwards okay so now that i've attached that",
    "start": "5082840",
    "end": "5088000"
  },
  {
    "text": "policy i'm going to go ahead and restart my app",
    "start": "5088000",
    "end": "5093840"
  },
  {
    "text": "so i can reforce credentials to be refreshed because i've got cache credentials for the role as it existed previously i",
    "start": "5093840",
    "end": "5100560"
  },
  {
    "text": "still wouldn't be able to upload so i'm going to go ahead and stop it on the simulator and restart it",
    "start": "5100560",
    "end": "5106719"
  },
  {
    "text": "because i had that refresh in the in the beginning of the client so that i will force a refresh so it'll pick up the new policy",
    "start": "5106719",
    "end": "5127840"
  },
  {
    "text": "okay again let's select a photo",
    "start": "5130639",
    "end": "5134960"
  },
  {
    "text": "make sure we give it a note",
    "start": "5138639",
    "end": "5141840"
  },
  {
    "text": "so the picture is uploaded and i've got a preset url aha okay so my mistake",
    "start": "5149920",
    "end": "5156080"
  },
  {
    "text": "so our pre-signed url has one additional piece of information that i forgot to include which is our expiration",
    "start": "5156080",
    "end": "5162320"
  },
  {
    "text": "um so obviously if i didn't have an expiration our pre-signed url would be basically make our public our photos",
    "start": "5162320",
    "end": "5168000"
  },
  {
    "text": "public so we actually want to add an expiration date to our our pre-sign url so let's go down to our",
    "start": "5168000",
    "end": "5175760"
  },
  {
    "text": "pre-sign url i am just for the sake of time i'm going to grab my",
    "start": "5175760",
    "end": "5183199"
  },
  {
    "text": "expiration code from here",
    "start": "5183199",
    "end": "5196719"
  },
  {
    "text": "so our expiration um will be uh 10 minutes um so that's a reasonable amount of time",
    "start": "5196719",
    "end": "5202480"
  },
  {
    "text": "to actually allow the upload to or the download to complete um but you",
    "start": "5202480",
    "end": "5208000"
  },
  {
    "text": "could certainly tune it to whatever you wanted let me just set the expires field on the",
    "start": "5208000",
    "end": "5214080"
  },
  {
    "text": "request to be the expiration",
    "start": "5214080",
    "end": "5219040"
  },
  {
    "text": "restart our app and then hopefully when it comes up it will download that photo and put it in that cache",
    "start": "5220639",
    "end": "5239840"
  },
  {
    "text": "any other questions again while we're waiting for for xcode to do its thing",
    "start": "5250159",
    "end": "5256000"
  },
  {
    "text": "uh so if you don't return neil from the bf task you actually uh um it'll cause an execution failure um",
    "start": "5259280",
    "end": "5266000"
  },
  {
    "text": "so depending on how nested your bf tax bf task is um",
    "start": "5266000",
    "end": "5272000"
  },
  {
    "text": "the uh xcode may or may not be able to um be able to show you that uh and um so",
    "start": "5272000",
    "end": "5278719"
  },
  {
    "text": "in the base case where you just have one continue with block you'll actually see a warning or an",
    "start": "5278719",
    "end": "5284400"
  },
  {
    "text": "error and it won't compile but if you have a lot of nested tasks so you can continue to do that continue with block forever basically",
    "start": "5284400",
    "end": "5291120"
  },
  {
    "text": "as long as you return another bf task xcode will will eventually get confused",
    "start": "5291120",
    "end": "5297600"
  },
  {
    "text": "and not be able to to figure that out anymore",
    "start": "5297600",
    "end": "5301920"
  },
  {
    "text": "the problems with live coding so i did forget one other thing with my pre-signed url request which is the hdp",
    "start": "5305520",
    "end": "5310560"
  },
  {
    "text": "method so obviously we're doing a download",
    "start": "5310560",
    "end": "5323840"
  },
  {
    "text": "hopefully that will take less time to link this time",
    "start": "5325040",
    "end": "5337840"
  },
  {
    "text": "all right great so now we've got our images finally loaded",
    "start": "5345440",
    "end": "5350719"
  },
  {
    "text": "so again you know we can download photos we can get pre-signed urls to put them in the",
    "start": "5350800",
    "end": "5356639"
  },
  {
    "text": "background and we can upload them with the transfer manager to manage our uploads",
    "start": "5356639",
    "end": "5365840"
  },
  {
    "text": "so let's just review some of the code again for our transfer manager we can create",
    "start": "5371040",
    "end": "5376320"
  },
  {
    "text": "upload requests there are also download requests but again if you want to support background transfers",
    "start": "5376320",
    "end": "5381920"
  },
  {
    "text": "the transfer manager is probably not the best solution for that well it's definitely not the best solution for that",
    "start": "5381920",
    "end": "5388400"
  },
  {
    "text": "so then when we create our upload we need a bucket a key and content which is our data our file",
    "start": "5388639",
    "end": "5396480"
  },
  {
    "text": "when we want to actually upload we get a handle for our transfer manager we call upload on it and handle the bf",
    "start": "5396480",
    "end": "5401600"
  },
  {
    "text": "task when we want to download again we'll recommend using pre-signed urls",
    "start": "5401600",
    "end": "5408320"
  },
  {
    "text": "so we create our pre-sign url builder we need a bucket a key an expiration and the http method",
    "start": "5408320",
    "end": "5416719"
  },
  {
    "text": "and then when we want to download the image we get our signer we create a sign request and send it to",
    "start": "5419280",
    "end": "5426000"
  },
  {
    "text": "the signer and handle it with the bf task when we want to delete images or delete",
    "start": "5426000",
    "end": "5433600"
  },
  {
    "text": "files from s3 we need to drop down to our low-level client what we call our low-level client um so we create our delete object",
    "start": "5433600",
    "end": "5439920"
  },
  {
    "text": "request give it a bucket and key get a handle to that default s3 client and then call delete object",
    "start": "5439920",
    "end": "5448639"
  },
  {
    "text": "um so uh so we talked about s3 um and certainly you can use",
    "start": "5448639",
    "end": "5455760"
  },
  {
    "text": "s3 for all of your delivery of files um but if you want to make those files",
    "start": "5455760",
    "end": "5461679"
  },
  {
    "text": "available closer to your users we can actually use amazon cloudfront so cloudfront is a cdn",
    "start": "5461679",
    "end": "5470639"
  },
  {
    "text": "content distribution network we have multitude of pops across the globe so all you have to",
    "start": "5470639",
    "end": "5477679"
  },
  {
    "text": "do is basically set up a cloudfront distribution in front of your bucket and then you can access those files through the cloud front",
    "start": "5477679",
    "end": "5484719"
  },
  {
    "text": "and that'll speed up your downloads quite a bit",
    "start": "5484719",
    "end": "5490400"
  },
  {
    "text": "um so we all have a bunch of different uh uh features uh additional features uh on",
    "start": "5490400",
    "end": "5496800"
  },
  {
    "text": "top of um just basically uh basic cdn um including mobile device tech",
    "start": "5496800",
    "end": "5502800"
  },
  {
    "text": "detection geo targeting and course so again",
    "start": "5502800",
    "end": "5507840"
  },
  {
    "text": "all we have to do is we stick a cloud front distribution in front of our what we call origin and that origin can either be an s3",
    "start": "5507840",
    "end": "5514480"
  },
  {
    "text": "bucket or it can be a back-end server so if you want to cache data from from",
    "start": "5514480",
    "end": "5519840"
  },
  {
    "text": "your system you can certainly do that with cloudfront as well",
    "start": "5519840",
    "end": "5524800"
  },
  {
    "text": "we have edge locations literally all across the globe i think the only countries two",
    "start": "5525040",
    "end": "5532560"
  },
  {
    "text": "continents we don't have pops on now um so but uh we have pops",
    "start": "5532560",
    "end": "5537679"
  },
  {
    "text": "all across the globe so that this makes your data um more available to uh closer to your users",
    "start": "5537679",
    "end": "5546080"
  },
  {
    "text": "um so the recent enhancements uh we added additional mobile device detection geo-targeting",
    "start": "5546080",
    "end": "5551120"
  },
  {
    "text": "the cores so if you have uh if you want to serve javascript apps from cloudfront you can do that and use cores we also",
    "start": "5551120",
    "end": "5558800"
  },
  {
    "text": "have protocol detection and then some really great and enhanced ssl features if you're",
    "start": "5558800",
    "end": "5564000"
  },
  {
    "text": "uh if you're worried about security um so that's cloudfront so that allows",
    "start": "5564000",
    "end": "5570000"
  },
  {
    "text": "you again to speed up your delivery of files so now let's talk about how we can store",
    "start": "5570000",
    "end": "5575679"
  },
  {
    "text": "shared data so cognitosync is great for for storing",
    "start": "5575679",
    "end": "5581679"
  },
  {
    "text": "individual users identity currently right now we don't have any shared data so if you want to actually share global",
    "start": "5581679",
    "end": "5588560"
  },
  {
    "text": "user data we'll have to use a different solution for our application",
    "start": "5588560",
    "end": "5594000"
  },
  {
    "text": "um so we have a dyno omodb object mapper and this basically allows you to uh",
    "start": "5594000",
    "end": "5601360"
  },
  {
    "text": "map individual items in dynamodb and give them to individual users",
    "start": "5601360",
    "end": "5607679"
  },
  {
    "text": "so it simplifies the access to dynamodb you don't have to necessarily understand how to write",
    "start": "5608239",
    "end": "5614159"
  },
  {
    "text": "query and scan operations um or understand hash keys uh you might you'll",
    "start": "5614159",
    "end": "5619760"
  },
  {
    "text": "have to understand at least at a basic level hash keys and range keys but it does simplify quite a bit you",
    "start": "5619760",
    "end": "5625520"
  },
  {
    "text": "basically just map you basically just map uh",
    "start": "5625520",
    "end": "5631360"
  },
  {
    "text": "your objects inside of your objective-c or swift classes um to",
    "start": "5631360",
    "end": "5637600"
  },
  {
    "text": "fields inside of dynamodb and then you just have to specify which one of those is your um your range key",
    "start": "5637600",
    "end": "5645040"
  },
  {
    "text": "your hash can range key and then you can query and load objects by that method additionally we also have",
    "start": "5645040",
    "end": "5652719"
  },
  {
    "text": "a geo library for dynamodb this allows you to store geographic data inside of",
    "start": "5652719",
    "end": "5658560"
  },
  {
    "text": "inside of a dynamodb table query it and get results for nearby data points",
    "start": "5658560",
    "end": "5665440"
  },
  {
    "text": "unfortunately the the the logic for for querying is pretty heavyweight so we actually put together a sample",
    "start": "5665440",
    "end": "5673199"
  },
  {
    "text": "java server application that actually handles all of the the queries um and accessing dynamo and",
    "start": "5673199",
    "end": "5678960"
  },
  {
    "text": "then you can access it directly from your mobile device uh through that server it's just a little bit too",
    "start": "5678960",
    "end": "5685040"
  },
  {
    "text": "heavyweight uh to kind of do on the device uh so that we so that we so we have that server",
    "start": "5685040",
    "end": "5690400"
  },
  {
    "text": "um uh available and that's available on github it's open source you can extend it to do whatever you want with it",
    "start": "5690400",
    "end": "5698480"
  },
  {
    "text": "all right so that's going to be the end of our section two um so let me go look at my talking",
    "start": "5698880",
    "end": "5706000"
  },
  {
    "text": "points here um uh again uh so our mobile analytics service has a free tier",
    "start": "5706000",
    "end": "5711840"
  },
  {
    "text": "um so you can do uh uh analytics is built on events um so you get a hundred million free",
    "start": "5711840",
    "end": "5718159"
  },
  {
    "text": "events a month uh and then after that after the free tier it's a one dollar per million",
    "start": "5718159",
    "end": "5723600"
  },
  {
    "text": "events after that um s3 pricing um it starts at uh in at least in us",
    "start": "5723600",
    "end": "5731600"
  },
  {
    "text": "east at around point three cents a gigabyte um so it's great uh",
    "start": "5731600",
    "end": "5737040"
  },
  {
    "text": "pretty cheap storage and then a half a cent for a thousand put requests so updates uh",
    "start": "5737040",
    "end": "5743520"
  },
  {
    "text": "and then um uh four tenths of a cent for every ten thousand gets um so uh it's much more cost effective",
    "start": "5743520",
    "end": "5750880"
  },
  {
    "text": "to to get files than it is to to post an update um and dynamodb's dynamodb's pricing",
    "start": "5750880",
    "end": "5758960"
  },
  {
    "text": "um is a little bit more complicated than i'd like to get into here but if you have questions about that or anything",
    "start": "5758960",
    "end": "5764639"
  },
  {
    "text": "else before we move on to our last section how's your opportunity",
    "start": "5764639",
    "end": "5770400"
  },
  {
    "text": "yes yes",
    "start": "5770400",
    "end": "5776560"
  },
  {
    "text": "yes so the question was about the geo server and uh yes so you um the the server that we have right now",
    "start": "5780960",
    "end": "5787760"
  },
  {
    "text": "um is a standalone application that you could run inside of elastic bean stock for instance",
    "start": "5787760",
    "end": "5792880"
  },
  {
    "text": "um and we'll talk a little bit about that in the last section um and then you can run that standalone or you could run",
    "start": "5792880",
    "end": "5797920"
  },
  {
    "text": "it you could add on you could add on additional functionality if you wanted to but then you would call that from your mobile app",
    "start": "5797920",
    "end": "5803280"
  },
  {
    "text": "directly any other questions",
    "start": "5803280",
    "end": "5813840"
  },
  {
    "text": "um so unfortunately the mobile sdks don't currently support the document storage uh apis that's something that i know",
    "start": "5816400",
    "end": "5822239"
  },
  {
    "text": "that we want to work on to add support for but currently it's not in the mobile sdks it is available in the javascript sdk",
    "start": "5822239",
    "end": "5830000"
  },
  {
    "text": "and most of the other server side sdks it just hasn't made its way into the mobile sdks yet",
    "start": "5830000",
    "end": "5835199"
  },
  {
    "text": "and that was about the json support sorry repeating that for the recording any other questions",
    "start": "5835199",
    "end": "5843600"
  },
  {
    "text": "okay i'm actually going to hand it off to sebastian for our last part he's going to handle our part 3 for me",
    "start": "5844159",
    "end": "5855840"
  },
  {
    "text": "red okay so good morning everyone",
    "start": "5890480",
    "end": "5899119"
  },
  {
    "text": "switching speakers switching different accents to try to keep you awake for this uh last part of reinvent",
    "start": "5899119",
    "end": "5907280"
  },
  {
    "text": "my name is sebastian stormak i'm a technical trainer i'm based in in europe so my job is to",
    "start": "5907280",
    "end": "5912480"
  },
  {
    "text": "deliver trainings architect developer trainings and sysops training across customers in",
    "start": "5912480",
    "end": "5917840"
  },
  {
    "text": "europe middle east and africa and yes i usually do speak french as you might have already noticed with a",
    "start": "5917840",
    "end": "5923520"
  },
  {
    "text": "slight touch of french accent highest so bob went through the hardcore",
    "start": "5923520",
    "end": "5930320"
  },
  {
    "text": "part of copito identity cognito thing in this last part of this workshop",
    "start": "5930320",
    "end": "5938000"
  },
  {
    "text": "we'll revisit a bit the sns push notification i'll try to explain you how it works i'll show you a demo",
    "start": "5938000",
    "end": "5945280"
  },
  {
    "text": "i will not do live coding i'll let that for bob's specialties um",
    "start": "5945280",
    "end": "5952719"
  },
  {
    "text": "and then we are going to talk we had a question about the jo hash library and how we can wrap that on the server side",
    "start": "5952719",
    "end": "5959920"
  },
  {
    "text": "so i will explain how we did for for this application how we how we deployed that and i will briefly",
    "start": "5959920",
    "end": "5965040"
  },
  {
    "text": "talk about a service called uh elastic installs that help you to deploy your server side application very very easily",
    "start": "5965040",
    "end": "5972480"
  },
  {
    "text": "without having to take care of the underlying infrastructure for that and we'll finish and wrap up a bit",
    "start": "5972480",
    "end": "5978480"
  },
  {
    "text": "talking about another service we use in in this application it's called kinesis it's a service that helps you to stream",
    "start": "5978480",
    "end": "5985840"
  },
  {
    "text": "uh flow of data a lot of data to do any type of real-time or close to real-time",
    "start": "5985840",
    "end": "5991199"
  },
  {
    "text": "analytics on this on this data so that's the structure of this third part of of the workshop so let's",
    "start": "5991199",
    "end": "5998800"
  },
  {
    "text": "first start with a push notification push notification are made through a service called sns",
    "start": "5998800",
    "end": "6006719"
  },
  {
    "text": "it's a quite old service within the aws platform it's a publish and subscribe service at the origin so",
    "start": "6006719",
    "end": "6013280"
  },
  {
    "text": "a service that you can use to broadcast message to multiple subscribers the core concept",
    "start": "6013280",
    "end": "6019679"
  },
  {
    "text": "of sns is a topic you create a topic and then you have applications that subscribe to",
    "start": "6019679",
    "end": "6024960"
  },
  {
    "text": "that topic and we have multiple ways to deliver the message from the topic",
    "start": "6024960",
    "end": "6030159"
  },
  {
    "text": "to the application you can register using http so sns can call a web service for you",
    "start": "6030159",
    "end": "6035440"
  },
  {
    "text": "you can register using email sns can send an email for you for your notification about your infrastructure",
    "start": "6035440",
    "end": "6041520"
  },
  {
    "text": "for example you can register using a sms text message on your phone",
    "start": "6041520",
    "end": "6047119"
  },
  {
    "text": "only for you guys having a phone number starting with plus one so american phone",
    "start": "6047119",
    "end": "6052239"
  },
  {
    "text": "number only doesn't work in europe so http um email sms",
    "start": "6052239",
    "end": "6059920"
  },
  {
    "text": "queueing you can also post a message to a queue so where an application can fetch a message and the last one that we",
    "start": "6059920",
    "end": "6066480"
  },
  {
    "text": "did introduced roughly one year ago one year and a half ago is push message for mobile so you can",
    "start": "6066480",
    "end": "6072239"
  },
  {
    "text": "register a mobile device to an sns application or an sns topic to",
    "start": "6072239",
    "end": "6077840"
  },
  {
    "text": "send a very large scale push message to your mobile user so how does it work",
    "start": "6077840",
    "end": "6085040"
  },
  {
    "text": "sns will take care of the low-level communication with your push provider in the case of apple",
    "start": "6085040",
    "end": "6092560"
  },
  {
    "text": "with the apple apn so the first thing you have to do to do is to go to apple's websites and create",
    "start": "6092560",
    "end": "6099360"
  },
  {
    "text": "a certificate to enable the communication between sns and the the server from apple once you have",
    "start": "6099360",
    "end": "6106719"
  },
  {
    "text": "that certificate you go back to the sns console and you create an application at the application level you will give",
    "start": "6106719",
    "end": "6113600"
  },
  {
    "text": "the details of your certificate so the private key and the certificate this will enable sns",
    "start": "6113600",
    "end": "6120159"
  },
  {
    "text": "to use the apple api to talk and to send push message to your to your",
    "start": "6120159",
    "end": "6125920"
  },
  {
    "text": "user to your device that's the first step of setting up the communication this is something you have to do only once obviously you don't have to do that",
    "start": "6125920",
    "end": "6132880"
  },
  {
    "text": "multiple times i'm talking about apple here because it's an ios talk but we also support google",
    "start": "6132880",
    "end": "6138719"
  },
  {
    "text": "we also support amazon for the kindle fire we also support it's not on the slide it",
    "start": "6138719",
    "end": "6144400"
  },
  {
    "text": "has been very it has been added very recently we also support",
    "start": "6144400",
    "end": "6149440"
  },
  {
    "text": "windows and we do support baidu for the chinese market so baidu is the android version of",
    "start": "6149440",
    "end": "6157199"
  },
  {
    "text": "for for the chinese market so first step is to set up that communication between sns",
    "start": "6157199",
    "end": "6162960"
  },
  {
    "text": "and apple in our case the second step is actually on your device so inside your",
    "start": "6162960",
    "end": "6168560"
  },
  {
    "text": "code you have to register for mobile application you have to write call on the application object the",
    "start": "6168560",
    "end": "6175280"
  },
  {
    "text": "register for remote notification api from apple and your application delegate object",
    "start": "6175280",
    "end": "6180480"
  },
  {
    "text": "will receive a call dit register and that call will receive a device token so for every single",
    "start": "6180480",
    "end": "6186880"
  },
  {
    "text": "device you will receive from apollo device token so the second step for you as a developer is to associate",
    "start": "6186880",
    "end": "6193360"
  },
  {
    "text": "that device token with sns sns will create an endpoint we call that",
    "start": "6193360",
    "end": "6199679"
  },
  {
    "text": "an endpoint for every single device the endpoint will be authenticated or will be",
    "start": "6199679",
    "end": "6204960"
  },
  {
    "text": "identified sorry will be identified with an amazon resource name you know this",
    "start": "6204960",
    "end": "6210639"
  },
  {
    "text": "long internal id that we use to refer to any object within amazon",
    "start": "6210639",
    "end": "6215679"
  },
  {
    "text": "the amazon resource name will be stable across the time so if the user ever delete the",
    "start": "6215679",
    "end": "6222080"
  },
  {
    "text": "application from the device and research we install the application later the token might change",
    "start": "6222080",
    "end": "6227760"
  },
  {
    "text": "but the aren on the sns side stays consistent stay identical so you can",
    "start": "6227760",
    "end": "6233760"
  },
  {
    "text": "track your user over the long term using the stable a rn name that we do provide you at the sns level",
    "start": "6233760",
    "end": "6240880"
  },
  {
    "text": "how do you register the token from the device to sns we leave you the choice for that",
    "start": "6240880",
    "end": "6247199"
  },
  {
    "text": "you have multiple options the one we choose for the demo application is the device itself directly called the sns api so it's a",
    "start": "6247199",
    "end": "6254560"
  },
  {
    "text": "very simple httpi call and the device itself calls the snss api to register the device token to",
    "start": "6254560",
    "end": "6262400"
  },
  {
    "text": "sns of course you don't have to care to take care of the low level http communication and the signature and",
    "start": "6262400",
    "end": "6269040"
  },
  {
    "text": "the authentication for the api itself we wrap that at the sdk level",
    "start": "6269040",
    "end": "6274960"
  },
  {
    "text": "and on the slide i have a code sample to show you how to do that with the uh sdk the other option if you",
    "start": "6274960",
    "end": "6282880"
  },
  {
    "text": "want to do some clever stuff with the arrand like associate with a with an identity maybe associate that to",
    "start": "6282880",
    "end": "6288480"
  },
  {
    "text": "your user profile on your backend systems the other option that you have is actually to call your own backend your",
    "start": "6288480",
    "end": "6294480"
  },
  {
    "text": "own api and from your backend make the sns call make the sns api",
    "start": "6294480",
    "end": "6299520"
  },
  {
    "text": "to associate the device token with the aren",
    "start": "6299520",
    "end": "6304639"
  },
  {
    "text": "once you have that sns will take care of all the load level details for you so sns will take",
    "start": "6305119",
    "end": "6310320"
  },
  {
    "text": "care of the communication with apple sns will also consume the feedback from from apple you know that on the apn one",
    "start": "6310320",
    "end": "6317920"
  },
  {
    "text": "of the services that apple is providing it's a feedback services it's uh the feedback services give you the list",
    "start": "6317920",
    "end": "6323920"
  },
  {
    "text": "of uh message that cannot be delivered maybe because the application was deleted from from the device",
    "start": "6323920",
    "end": "6329760"
  },
  {
    "text": "so sns will consume that automatically for you and will adjust the list of endpoint automatically on",
    "start": "6329760",
    "end": "6336880"
  },
  {
    "text": "your side your next logical step is just to use the sns api to send a message to the device",
    "start": "6336880",
    "end": "6344560"
  },
  {
    "text": "so it's just a very simple http put to post the message to the device your",
    "start": "6344560",
    "end": "6349679"
  },
  {
    "text": "application your backend application post the message to sns and sns will post the message",
    "start": "6349679",
    "end": "6354719"
  },
  {
    "text": "to the device you can choose to explain that that the",
    "start": "6354719",
    "end": "6361520"
  },
  {
    "text": "token might change but the drain name on sns stays consistent so you can choose to send a",
    "start": "6361520",
    "end": "6368239"
  },
  {
    "text": "message to individual device because every device has an endpoint on sns so you can choose",
    "start": "6368239",
    "end": "6373679"
  },
  {
    "text": "to send to one specific device for one specific user think about a mail application for",
    "start": "6373679",
    "end": "6378719"
  },
  {
    "text": "example or game application where you want to notify the user that something happened in the game or the",
    "start": "6378719",
    "end": "6384560"
  },
  {
    "text": "new mail message is there you can also broadcast message to multiple users remember sns at the very heart of sns",
    "start": "6384560",
    "end": "6391920"
  },
  {
    "text": "it's a publish subscribe mechanism so you can create a topic and link multiple device to one single topic",
    "start": "6391920",
    "end": "6398560"
  },
  {
    "text": "so when you will post a message to the topic sns will fan out the message will come will broadcast the message to all",
    "start": "6398560",
    "end": "6405040"
  },
  {
    "text": "device registered to that topic so if you want to communicate something to many of your",
    "start": "6405040",
    "end": "6410080"
  },
  {
    "text": "user in one single message example new skills that we see from our customers",
    "start": "6410080",
    "end": "6415360"
  },
  {
    "text": "doing that is to group device maybe per country per geography per",
    "start": "6415360",
    "end": "6420560"
  },
  {
    "text": "type of customer like my silver customer my gold customer my free customer or by my product that",
    "start": "6420560",
    "end": "6427199"
  },
  {
    "text": "you're selling all the user of that specific game and so if you create several topics like",
    "start": "6427199",
    "end": "6432239"
  },
  {
    "text": "that just by sending one message one of the topic the message will be push to all device register to that topic and",
    "start": "6432239",
    "end": "6438480"
  },
  {
    "text": "of course you can associate the same device to multiple topics",
    "start": "6438480",
    "end": "6443600"
  },
  {
    "text": "this device can be associated to one single product a given geography and a tier of user for example does that",
    "start": "6443600",
    "end": "6450400"
  },
  {
    "text": "make sense are there yep is there any grouping of",
    "start": "6450400",
    "end": "6458159"
  },
  {
    "text": "topics and subtopics no not at the api level but this is something you can work out",
    "start": "6458159",
    "end": "6463199"
  },
  {
    "text": "by by yourself by writing code for example naming that would be one id or having a topic delivered to queue",
    "start": "6463199",
    "end": "6469679"
  },
  {
    "text": "that will fan out to multiple topics um you have to write a bit and you have to write code for that it's not",
    "start": "6469679",
    "end": "6475520"
  },
  {
    "text": "built into the api right now so how does it work at the code level",
    "start": "6475520",
    "end": "6481840"
  },
  {
    "text": "this is a code sample that you have to process on the the client device when you do",
    "start": "6481840",
    "end": "6490320"
  },
  {
    "text": "receive the device token so typically it's in the application delegate",
    "start": "6490320",
    "end": "6495600"
  },
  {
    "text": "this is in the did receive i forgot the name but did receive token",
    "start": "6495600",
    "end": "6501440"
  },
  {
    "text": "registration something that's one of the delegate method that is called after you register your device for push notification",
    "start": "6501440",
    "end": "6508560"
  },
  {
    "text": "first line here is to get the sns client then you want it's similar to ds3 api",
    "start": "6508560",
    "end": "6516400"
  },
  {
    "text": "you have to create a request object give the request object to the client and the client gives you back",
    "start": "6516400",
    "end": "6521679"
  },
  {
    "text": "a response so the request object here are just two properties one of them is the",
    "start": "6521679",
    "end": "6527040"
  },
  {
    "text": "application within sns so the identifier of the application on the sns platform and the other one is",
    "start": "6527040",
    "end": "6533119"
  },
  {
    "text": "the device token that you have just received from that function call so once you have",
    "start": "6533119",
    "end": "6538639"
  },
  {
    "text": "that request you call the create platform endpoint api on the sns client and it will",
    "start": "6538639",
    "end": "6545760"
  },
  {
    "text": "asynchronously call you back with a response in the the bf task in the bolt",
    "start": "6545760",
    "end": "6551679"
  },
  {
    "text": "task the that result contains the rents the response and the response contain",
    "start": "6551679",
    "end": "6556880"
  },
  {
    "text": "the internal aws identifier for that device to open so the endpoint here and amazon resource",
    "start": "6556880",
    "end": "6563920"
  },
  {
    "text": "name so let's see if it works helps",
    "start": "6563920",
    "end": "6571440"
  },
  {
    "text": "switching screen yes i'm going to my sns console here",
    "start": "6571440",
    "end": "6579119"
  },
  {
    "text": "and as you can see i have one application defined in the sns console and i have two device",
    "start": "6579119",
    "end": "6585520"
  },
  {
    "text": "registers so two different endpoints this is the stable name i was talking about the endpoint arm and this is the device",
    "start": "6585520",
    "end": "6593840"
  },
  {
    "text": "token as it has been received by the apn from from apple the first one is my ipad the",
    "start": "6593840",
    "end": "6599840"
  },
  {
    "text": "second one is my iphone the ios simulator cannot work with push notifications so you have to test that",
    "start": "6599840",
    "end": "6605440"
  },
  {
    "text": "really on physical devices so let's open my application on the ipad it",
    "start": "6605440",
    "end": "6613920"
  },
  {
    "text": "should be there yes it's there let's start the application",
    "start": "6613920",
    "end": "6620320"
  },
  {
    "text": "hopefully it should get all my notes public and private yes",
    "start": "6620320",
    "end": "6628960"
  },
  {
    "text": "let's zoom that a bit okay",
    "start": "6628960",
    "end": "6634638"
  },
  {
    "text": "and now let's publish a message just to test if it works uh so i'm using the console for for that",
    "start": "6635920",
    "end": "6643040"
  },
  {
    "text": "but obviously you can do that from any any type of application so you can most of the time it will be from your",
    "start": "6643040",
    "end": "6648719"
  },
  {
    "text": "backend application you will have some kind of java code on the backend or python code on the backend",
    "start": "6648719",
    "end": "6654320"
  },
  {
    "text": "where you will push notification hello ios workshop let's take the two screen",
    "start": "6654320",
    "end": "6661360"
  },
  {
    "text": "together and let's just publish the message and",
    "start": "6661360",
    "end": "6666400"
  },
  {
    "text": "the application received a message from apple and for this very simple demo",
    "start": "6666400",
    "end": "6671520"
  },
  {
    "text": "application i'm just popping up an alert message to show you that we have received the notification these",
    "start": "6671520",
    "end": "6679840"
  },
  {
    "text": "systems oh no yeah i always want to click from there but no it's just i have to touch",
    "start": "6679840",
    "end": "6684960"
  },
  {
    "text": "the screen the physical screen um this is the system that we are using also to make",
    "start": "6684960",
    "end": "6690719"
  },
  {
    "text": "the cognito synchronization the push synchronization between device so i was hacking a bit while bob was",
    "start": "6690719",
    "end": "6698239"
  },
  {
    "text": "talking and managed to have it working or in there so i have on the right side",
    "start": "6698239",
    "end": "6703840"
  },
  {
    "text": "the application running on the simulator on the on the mac on the left side it's",
    "start": "6703840",
    "end": "6709280"
  },
  {
    "text": "my real physical device it's the ipod which is there i don't have the same",
    "start": "6709280",
    "end": "6714960"
  },
  {
    "text": "public nodes in the two applications because the the ios simulator simulates a geo",
    "start": "6714960",
    "end": "6720719"
  },
  {
    "text": "location in the bay area close to san francisco the the ipad here is physically in vegas so it only",
    "start": "6720719",
    "end": "6727280"
  },
  {
    "text": "takes the nodes that are close to where we are and i will talk about the geolocation service",
    "start": "6727280",
    "end": "6733280"
  },
  {
    "text": "in a moment but that's why we don't have the same public notes on the two device so if i create a note here test",
    "start": "6733280",
    "end": "6741360"
  },
  {
    "text": "push sync and take a picture",
    "start": "6741360",
    "end": "6747599"
  },
  {
    "text": "up it's like a different one choose",
    "start": "6748159",
    "end": "6753040"
  },
  {
    "text": "so this will trigger a synchronization and because push sync is is set up",
    "start": "6753520",
    "end": "6760719"
  },
  {
    "text": "the ipad just receive a notification this type this time sorry it didn't display the message it's a",
    "start": "6760719",
    "end": "6767040"
  },
  {
    "text": "technical json message but it initiates a synchronization to get the data from",
    "start": "6767040",
    "end": "6772719"
  },
  {
    "text": "cognito and it refreshed the ui so now i have the push sync with my localization",
    "start": "6772719",
    "end": "6780159"
  },
  {
    "text": "somewhere in san francisco because this is how the the simulator is working it simulates a notification",
    "start": "6780159",
    "end": "6787920"
  },
  {
    "text": "on on the bay area",
    "start": "6789440",
    "end": "6794159"
  },
  {
    "text": "so let's switch back there",
    "start": "6794560",
    "end": "6798159"
  },
  {
    "text": "yep",
    "start": "6804840",
    "end": "6807840"
  },
  {
    "text": "yeah the last part of the demo was using cognito synchronization and cognitosynchronization is based on push",
    "start": "6810800",
    "end": "6816320"
  },
  {
    "text": "notifications this is why i combined the two right now so whenever you think on one device",
    "start": "6816320",
    "end": "6821760"
  },
  {
    "text": "a push notification is sent by cognito not by me not by code that i wrote cognito will",
    "start": "6821760",
    "end": "6828480"
  },
  {
    "text": "send a push notification to to the device and it's up to you as a developer to capture that notification and to do",
    "start": "6828480",
    "end": "6834080"
  },
  {
    "text": "something useful like to refresh your user interface yep any other question",
    "start": "6834080",
    "end": "6841118"
  },
  {
    "text": "it's a silent push that happens so can you make it silent",
    "start": "6841760",
    "end": "6849840"
  },
  {
    "text": "do you understand the question so my question was like in the first demo you had an actual",
    "start": "6854400",
    "end": "6860880"
  },
  {
    "text": "uh",
    "start": "6860880",
    "end": "6863840"
  },
  {
    "text": "correct so you would have to manually code for a push notification that shows an",
    "start": "6868239",
    "end": "6874800"
  },
  {
    "text": "alert",
    "start": "6874800",
    "end": "6877118"
  },
  {
    "text": "correct so repeat the question or try to summarize it for the recording in the first demo the push notification",
    "start": "6879840",
    "end": "6888320"
  },
  {
    "text": "trigger a visual dialogue on the user interface on the second demo with the",
    "start": "6888320",
    "end": "6893679"
  },
  {
    "text": "synchronization the push synchronization it was a silent notification there was no visible user interface for",
    "start": "6893679",
    "end": "6898960"
  },
  {
    "text": "that that's actually an implementation choice in both case you receive an sns push message and",
    "start": "6898960",
    "end": "6905199"
  },
  {
    "text": "it's up to you as a developer of the mobile application to decide what you want to do with with that in my first case i wrote code to pop up",
    "start": "6905199",
    "end": "6912400"
  },
  {
    "text": "the dialogue in the second case i'm just triggering a sync and redisplaying refreshing the data on the screen but",
    "start": "6912400",
    "end": "6919119"
  },
  {
    "text": "that's an implementation choice you do whatever you want with the with the push notification",
    "start": "6919119",
    "end": "6925119"
  },
  {
    "text": "so what if you want to do things that are quite difficult to do on a mobile device itself what if you want to do like",
    "start": "6926880",
    "end": "6933119"
  },
  {
    "text": "a searching for public nodes that are close to the physical area where you are the",
    "start": "6933119",
    "end": "6938400"
  },
  {
    "text": "geographic area where you were or what if you want to do some things which is too heavy to do on the mobile side most of the time you",
    "start": "6938400",
    "end": "6945199"
  },
  {
    "text": "will delegate this type of workload to the back end so you will need for most applications you will need some",
    "start": "6945199",
    "end": "6951199"
  },
  {
    "text": "some kind of back-end infrastructure maybe with an api running there with java code python code you choose",
    "start": "6951199",
    "end": "6957840"
  },
  {
    "text": "one of the examples for this application is the geographic library that helps you to find all the public",
    "start": "6957840",
    "end": "6963920"
  },
  {
    "text": "nodes that were entered in the proximity from from where",
    "start": "6963920",
    "end": "6968960"
  },
  {
    "text": "we are like bob explain we we implement that as a java library so that's the first",
    "start": "6968960",
    "end": "6975920"
  },
  {
    "text": "reason why i cannot put that on the on the device we cannot send java code",
    "start": "6975920",
    "end": "6981119"
  },
  {
    "text": "on on ios and it's quite it's quite heavyweight as well so that's another reason to push",
    "start": "6981119",
    "end": "6987040"
  },
  {
    "text": "that code back to the server so what we did is just to wrap that library in a servlet",
    "start": "6987040",
    "end": "6992400"
  },
  {
    "text": "and expose that through a very simple api so the device calls the api to get the list of all",
    "start": "6992400",
    "end": "6997840"
  },
  {
    "text": "nodes close to the place where we currently are so how can you as a",
    "start": "6997840",
    "end": "7006000"
  },
  {
    "text": "developer deploy such a very simple api that one without having",
    "start": "7006000",
    "end": "7012159"
  },
  {
    "text": "to take care of all the low-level infrastructure for that because if you deploy an api",
    "start": "7012159",
    "end": "7017599"
  },
  {
    "text": "you need virtual machines you need ec2 instance to do that you need to install let's pretend we are",
    "start": "7017599",
    "end": "7023199"
  },
  {
    "text": "talking about java here you need to install tomcats you probably need a load balancer in front of that if your",
    "start": "7023199",
    "end": "7029199"
  },
  {
    "text": "application is extremely successful which i wish for you you might need several ec2 instance and",
    "start": "7029199",
    "end": "7035520"
  },
  {
    "text": "maybe some auto scaling to ensure that your fleet of tomcat server will scale depending on the traffic that you wear so these are",
    "start": "7035520",
    "end": "7042159"
  },
  {
    "text": "all low level infrastructure details that you as a developer don't want to take care about",
    "start": "7042159",
    "end": "7047599"
  },
  {
    "text": "and we have a service to help you to do that it's called elastic bins talk elastic binstalk is a service that we",
    "start": "7047599",
    "end": "7053440"
  },
  {
    "text": "provide you that help you to deploy code so it's service that most of the developer loves because",
    "start": "7053440",
    "end": "7060080"
  },
  {
    "text": "it really focus on the application and on your code it helps you to deploy code and behind",
    "start": "7060080",
    "end": "7065920"
  },
  {
    "text": "the scene automatically elastic install will create all the infrastructure required to run that code so it will create dc2",
    "start": "7065920",
    "end": "7073760"
  },
  {
    "text": "instance for you it will install tomcat for you it will deploy your code inside tomcat for you",
    "start": "7073760",
    "end": "7079440"
  },
  {
    "text": "it will create the autoscaling group it will create the load balancer it will create some monitoring alerts",
    "start": "7079440",
    "end": "7085599"
  },
  {
    "text": "with a plot watch so that you as a developer don't have to take care of all these low level details but the infrastructure",
    "start": "7085599",
    "end": "7093280"
  },
  {
    "text": "it creates are total it's a normal ec2 infrastructure it's a normal",
    "start": "7093280",
    "end": "7098880"
  },
  {
    "text": "load balancer there is no magical with elastic be installed so you can get access to the ec2 instance if you",
    "start": "7098880",
    "end": "7105520"
  },
  {
    "text": "need to debug for example you can ssh connect to that you will see the load balancer",
    "start": "7105520",
    "end": "7110639"
  },
  {
    "text": "in your console elastic bin stock is a free service you only pay for the resource that are created by elastic",
    "start": "7110639",
    "end": "7117199"
  },
  {
    "text": "being sold for you so you pay for the ec2 instance or for the load balancer that elastic bins talk will create for",
    "start": "7117199",
    "end": "7124880"
  },
  {
    "text": "you it integrates with development tools so if you are developing your java backend using",
    "start": "7124880",
    "end": "7131280"
  },
  {
    "text": "eclipse or if you are using a.net backend with a visual studio with a plugin that installed inside eclipse or inside",
    "start": "7131280",
    "end": "7138159"
  },
  {
    "text": "visual studio to help you to manage your environment directly from your development tool so you don't have to switch",
    "start": "7138159",
    "end": "7143920"
  },
  {
    "text": "between the console and your development tool and my favorite feature of elastic install is the git integration",
    "start": "7143920",
    "end": "7150400"
  },
  {
    "text": "if you are using git a source code control you can push your change directly from your laptop",
    "start": "7150400",
    "end": "7156800"
  },
  {
    "text": "to elastic be installed so you can just type git aws push and we have a small plugin to get that",
    "start": "7156800",
    "end": "7164560"
  },
  {
    "text": "will push the latest change to the the running environment on the",
    "start": "7164560",
    "end": "7170080"
  },
  {
    "text": "elastic bins talk this obviously only works in a programming language where",
    "start": "7170080",
    "end": "7175920"
  },
  {
    "text": "no compilation is required if you have a build server if you for java for example you need to compile",
    "start": "7175920",
    "end": "7181599"
  },
  {
    "text": "first so the git integration will not work with java but we do support not only java we do",
    "start": "7181599",
    "end": "7186880"
  },
  {
    "text": "support uh five six different platforms we do support",
    "start": "7186880",
    "end": "7192000"
  },
  {
    "text": "windows.net we do support java we do support php python ruby tomcat with java",
    "start": "7192000",
    "end": "7200159"
  },
  {
    "text": "and docker so if your preferred programming language or platform is not",
    "start": "7200159",
    "end": "7205360"
  },
  {
    "text": "there you can always fall back to docker you prepare or you deploy your service inside docker",
    "start": "7205360",
    "end": "7211440"
  },
  {
    "text": "and you just deploy the docker container to elastic beanstalk that's an option that we had a couple of",
    "start": "7211440",
    "end": "7217599"
  },
  {
    "text": "months ago elastic binstalk will deploy your application it will",
    "start": "7217599",
    "end": "7223280"
  },
  {
    "text": "also keep track of the version of your application so every time you deploy a new version of the application",
    "start": "7223280",
    "end": "7229679"
  },
  {
    "text": "elastic install will put a version number on top of that and will keep the previous version available so if something goes",
    "start": "7229679",
    "end": "7236239"
  },
  {
    "text": "wrong in your deployment if you have a major bug and you need to do a rollback elastic install will help you to do that",
    "start": "7236239",
    "end": "7242239"
  },
  {
    "text": "because at any time you could can go back to the console or use a cli script to redeploy the previous version or",
    "start": "7242239",
    "end": "7249360"
  },
  {
    "text": "actually any previous version of your application",
    "start": "7249360",
    "end": "7254960"
  },
  {
    "text": "any question about elastic beanstalk anyone have already used elastic",
    "start": "7254960",
    "end": "7261679"
  },
  {
    "text": "beanstalk also not too bad",
    "start": "7261679",
    "end": "7268639"
  },
  {
    "text": "so in this demo application we use the elastic bin stock to deploy the java",
    "start": "7268639",
    "end": "7274159"
  },
  {
    "text": "geo hash library for dynamodb and the servlet the api wrapper on top of that to",
    "start": "7274159",
    "end": "7280000"
  },
  {
    "text": "provide a back-end service for the demo application",
    "start": "7280000",
    "end": "7284960"
  },
  {
    "text": "last service we would like to talk to you today is kinesis kinesis is a service that has",
    "start": "7285040",
    "end": "7290960"
  },
  {
    "text": "been introduced a few months ago it was last year last okay one year",
    "start": "7290960",
    "end": "7296080"
  },
  {
    "text": "at rangeland last year it's a streaming service most of the time",
    "start": "7296080",
    "end": "7301119"
  },
  {
    "text": "for many different applications you have a requirement which is to ingest",
    "start": "7301119",
    "end": "7306480"
  },
  {
    "text": "a lot of data from many different source a source might be a mobile device if you have",
    "start": "7306480",
    "end": "7312239"
  },
  {
    "text": "millions of device this device might stream real-time data about",
    "start": "7312239",
    "end": "7317520"
  },
  {
    "text": "application usage or user usage you can also think of few skills like internet of things you are deploying",
    "start": "7317520",
    "end": "7323920"
  },
  {
    "text": "sensors and all these sensors hundreds of thousands or millions of sensors are sending data to to your back end",
    "start": "7323920",
    "end": "7332320"
  },
  {
    "text": "another use case of streaming would be log collection let's imagine that you have very large fleet of ec2 instance",
    "start": "7332320",
    "end": "7338960"
  },
  {
    "text": "hundreds thousands of ec2 instances and every of these are publishing logs you need some backend infrastructure to",
    "start": "7338960",
    "end": "7345520"
  },
  {
    "text": "actually receive ingest the logs and doing that reliably and doing that at scale it's a",
    "start": "7345520",
    "end": "7352159"
  },
  {
    "text": "quite difficult problem to solve because you need to scale your ingestion platform depending on the size of the volume of",
    "start": "7352159",
    "end": "7359760"
  },
  {
    "text": "the data that you are receiving and this is a problem that kinesis tries to to help",
    "start": "7359760",
    "end": "7365360"
  },
  {
    "text": "to solve so kinesis is a stream injection system so it's a service that",
    "start": "7365360",
    "end": "7371119"
  },
  {
    "text": "runs on our site where you can publish information any type of information so we have a very",
    "start": "7371119",
    "end": "7377199"
  },
  {
    "text": "simple put api to let your device or your sensors or your ec2 instance",
    "start": "7377199",
    "end": "7382960"
  },
  {
    "text": "whatever to push information to kinesis and kinesis will scale to receive",
    "start": "7382960",
    "end": "7389440"
  },
  {
    "text": "all this information coming from all your different device and we have currently many different streams um",
    "start": "7389440",
    "end": "7397040"
  },
  {
    "text": "thousands probably more than that streams running on on kinesis that ingest a large",
    "start": "7397040",
    "end": "7403840"
  },
  {
    "text": "volume of data every day so kinesis will receive that and will store that for 24",
    "start": "7403840",
    "end": "7409679"
  },
  {
    "text": "hours and then it's your job as a developer to write a kinesis client application",
    "start": "7409679",
    "end": "7415360"
  },
  {
    "text": "the client application is actually the server side application that will consume the data from kinesis",
    "start": "7415360",
    "end": "7421040"
  },
  {
    "text": "and do whatever you want to do what you need to do on this data so typically you will receive this data",
    "start": "7421040",
    "end": "7428079"
  },
  {
    "text": "and you will run some kind of real-time analytics or fraud detection or whatever your business require on the",
    "start": "7428079",
    "end": "7434880"
  },
  {
    "text": "data ingested by kinesis that's actually the hard part of",
    "start": "7434880",
    "end": "7440719"
  },
  {
    "text": "programming it's the the application that will consume the data so we did for that demo for this demo",
    "start": "7440719",
    "end": "7447119"
  },
  {
    "text": "the easy part which is push data to kinesis from the mobile application",
    "start": "7447119",
    "end": "7454880"
  },
  {
    "text": "so the mobile application um push all its log all the application",
    "start": "7455040",
    "end": "7462719"
  },
  {
    "text": "logs to kinesis so later we can write a kinesis client application that can consume that",
    "start": "7462719",
    "end": "7468480"
  },
  {
    "text": "and extract information based on on this log so the the kinesis communication is",
    "start": "7468480",
    "end": "7474000"
  },
  {
    "text": "wrapped in the sdk as well with a kinetic connector and the kinesis connector will actually",
    "start": "7474000",
    "end": "7479679"
  },
  {
    "text": "batch the request for you automatically so we have an api that lets you insert data to the connector the",
    "start": "7479679",
    "end": "7486079"
  },
  {
    "text": "connector will not immediately send the data to kinesis it will collect a few of the data and once the the",
    "start": "7486079",
    "end": "7492480"
  },
  {
    "text": "buffer is complete or when you want to trigger the the the the the push um the connector the client",
    "start": "7492480",
    "end": "7500880"
  },
  {
    "text": "connector will push the the data how does it work you create a kinesis recorder class",
    "start": "7500880",
    "end": "7509360"
  },
  {
    "text": "and you can fine tune the behavior of the of the recorder you can give us the size of the cache or",
    "start": "7509360",
    "end": "7516800"
  },
  {
    "text": "the maximum edge of the data in the cache before pushing the data to kinesis",
    "start": "7516800",
    "end": "7522560"
  },
  {
    "text": "your application will receive a notification when the cache is full so you can register to",
    "start": "7522560",
    "end": "7528719"
  },
  {
    "text": "listen for that notification and react to that notification how do you send an individual item to",
    "start": "7528719",
    "end": "7537599"
  },
  {
    "text": "the cache you create your data using an nsdata class so it can be any",
    "start": "7537599",
    "end": "7542960"
  },
  {
    "text": "type of data might be text file or binary and then you call the save record api on",
    "start": "7542960",
    "end": "7548079"
  },
  {
    "text": "the kinesis recorder with just one or two parameter of course your nsdata",
    "start": "7548079",
    "end": "7553119"
  },
  {
    "text": "and the name of the stream you might have multiple streams in kinesis when you have when your cache local",
    "start": "7553119",
    "end": "7559840"
  },
  {
    "text": "cache is is full or when you decide it's time to submit the records to kinesis you just",
    "start": "7559840",
    "end": "7564960"
  },
  {
    "text": "have to submit all records to the kinesis recorder client application so from a",
    "start": "7564960",
    "end": "7570719"
  },
  {
    "text": "client perspective it's extremely easy to interact with with kinesis just three or four lines of code and you",
    "start": "7570719",
    "end": "7576880"
  },
  {
    "text": "can send any type of data to kinesis",
    "start": "7576880",
    "end": "7582960"
  },
  {
    "text": "for the server side programming of kinesis we have libraries that help you to do that",
    "start": "7583040",
    "end": "7588239"
  },
  {
    "text": "with kinesis connector sorry client library one in",
    "start": "7588239",
    "end": "7593360"
  },
  {
    "text": "java in java one in python so these are libraries that handles all the low-level details of",
    "start": "7593360",
    "end": "7600239"
  },
  {
    "text": "reading the stream data from from your kinesis stream this library can scale to",
    "start": "7600239",
    "end": "7605360"
  },
  {
    "text": "multiple ec2 instances it will automatically scale depending on the number of data",
    "start": "7605360",
    "end": "7610639"
  },
  {
    "text": "available in your stream and this library will take care for the low level",
    "start": "7610639",
    "end": "7616079"
  },
  {
    "text": "multi-threading programming to ensure that multiple threads are spawned to read the data from the kinesis stream",
    "start": "7616079",
    "end": "7624960"
  },
  {
    "text": "if you want to move data from kinesis to another system like s3 or like a",
    "start": "7624960",
    "end": "7630719"
  },
  {
    "text": "dynamodb or redshift we also have a kinesis connector library so beware of the name we have kinesis",
    "start": "7630719",
    "end": "7637599"
  },
  {
    "text": "client library kcl and kinesis connector library kcl as well",
    "start": "7637599",
    "end": "7643119"
  },
  {
    "text": "and the connector library it's like a like a workflow actually it's a it's a",
    "start": "7643119",
    "end": "7648159"
  },
  {
    "text": "library that structure the reading from kinesis the transformation of data",
    "start": "7648159",
    "end": "7653679"
  },
  {
    "text": "the filtering of data and pushing the data to another system so it's a set of interface and you have to implement each",
    "start": "7653679",
    "end": "7660079"
  },
  {
    "text": "of these interface you have a filter interface you have a client interface you have a filter",
    "start": "7660079",
    "end": "7665360"
  },
  {
    "text": "interface you have a push interface you you as a developer needs to",
    "start": "7665360",
    "end": "7670880"
  },
  {
    "text": "implement all these interface to create a kind of workflow that will read filter transform and push",
    "start": "7670880",
    "end": "7678079"
  },
  {
    "text": "the data to another systems once again dynamodb s3 redshifts are the likely candidate",
    "start": "7678079",
    "end": "7683440"
  },
  {
    "text": "where you want to store the information coming from from kinesis and if you are using storm we have also",
    "start": "7683440",
    "end": "7689920"
  },
  {
    "text": "a connector for storm they call that a spot that's the pronunciation in english",
    "start": "7689920",
    "end": "7695280"
  },
  {
    "text": "a storm spoilt it's not easy to pronounce for me so if you are using storm you can also",
    "start": "7695280",
    "end": "7700320"
  },
  {
    "text": "integrate storm with kinesis",
    "start": "7700320",
    "end": "7705040"
  },
  {
    "text": "any question about kinesis",
    "start": "7705920",
    "end": "7709280"
  },
  {
    "text": "yep",
    "start": "7714840",
    "end": "7717840"
  },
  {
    "text": "so the question is what is the difference between sns and kinesis sns is a pub sub service",
    "start": "7723520",
    "end": "7730320"
  },
  {
    "text": "it's designed to send a message between application or to human being with the push",
    "start": "7730320",
    "end": "7736239"
  },
  {
    "text": "notification kinesis is more streaming system that handles",
    "start": "7736239",
    "end": "7741760"
  },
  {
    "text": "extremely large scale stream of data so the the size of it or the scalability of the",
    "start": "7741760",
    "end": "7747520"
  },
  {
    "text": "two services very different with sns you will send occasional message in a one-to-many",
    "start": "7747520",
    "end": "7755119"
  },
  {
    "text": "way so one message sends to multiple mobile device with kinesis is the other way around you",
    "start": "7755679",
    "end": "7761119"
  },
  {
    "text": "have multiple device that are sending message to kinesis and then you have one application that will",
    "start": "7761119",
    "end": "7766159"
  },
  {
    "text": "collect aggregate all this message to do some kind of analytics on on the stream of message that you receive from the",
    "start": "7766159",
    "end": "7771520"
  },
  {
    "text": "devices so it's the other way it's the other way around yeah so sort of a standard best practice",
    "start": "7771520",
    "end": "7779199"
  },
  {
    "text": "using mobile analytics do stuff like how long does it take to send the images off what's my average",
    "start": "7779199",
    "end": "7786000"
  },
  {
    "text": "latency how many times the user clicked this etc and then you use something like nisa to do the entire device logs",
    "start": "7786000",
    "end": "7794880"
  },
  {
    "text": "that would be one use case so i repeat the question mobile analytics will will also collect even from from",
    "start": "7794880",
    "end": "7801599"
  },
  {
    "text": "your from your devices and actually you can implement something like a mobile analytics yourself on top of",
    "start": "7801599",
    "end": "7807840"
  },
  {
    "text": "kinesis for example um yeah kinesis can be used for for roughly anything not only in the",
    "start": "7807840",
    "end": "7814560"
  },
  {
    "text": "mobile context might be for the internet of things context it might be for just log collection you",
    "start": "7814560",
    "end": "7820639"
  },
  {
    "text": "define the the use case mobile analytics is a higher level application that really analyze the user behavior",
    "start": "7820639",
    "end": "7826800"
  },
  {
    "text": "and yes we can feel that behind the scenes mobile analytics also receive a huge stream of events from multiple devices",
    "start": "7826800",
    "end": "7835840"
  },
  {
    "text": "when you push data to kinesis is there any metadata capture let me think i'm trying to remember the",
    "start": "7840079",
    "end": "7846159"
  },
  {
    "text": "low level api there is certainly there is a kinesis record id which is generated on the",
    "start": "7846159",
    "end": "7852560"
  },
  {
    "text": "server side which is guaranteed to be increasing order so the order of the message is preserved",
    "start": "7852560",
    "end": "7858800"
  },
  {
    "text": "uh for the timestamp i'm not sure if you have to add that or if we do add that do you know",
    "start": "7858800",
    "end": "7863920"
  },
  {
    "text": "i'm sorry no i think you have to add the timestamp by yourself we can have a look at the the low level",
    "start": "7863920",
    "end": "7870320"
  },
  {
    "text": "detailed api for kinesis to see what type of of data we add the order of the message",
    "start": "7870320",
    "end": "7876320"
  },
  {
    "text": "the message id that's for sure that's something we take care about yes that's one of the the advantage of kinesis as well we can",
    "start": "7876320",
    "end": "7883760"
  },
  {
    "text": "give you an increasing number so you can be sure about the order of the message",
    "start": "7883760",
    "end": "7888880"
  },
  {
    "text": "and you can collect the message in the right order let's go back to cognito and an advanced",
    "start": "7888880",
    "end": "7896880"
  },
  {
    "text": "scenario for cognito identity identification bob told you about cognitoid and how you",
    "start": "7896880",
    "end": "7903520"
  },
  {
    "text": "can use cognitoid to authenticate your user and to assign permission to your user",
    "start": "7903520",
    "end": "7909360"
  },
  {
    "text": "authenticated user or an authenticated user and we show you the example of login with",
    "start": "7909360",
    "end": "7916159"
  },
  {
    "text": "amazon we also support login with facebook and login with google but a very",
    "start": "7916159",
    "end": "7922000"
  },
  {
    "text": "frequent customer request that we add is what if you have already your own authentication system you have already",
    "start": "7922000",
    "end": "7928159"
  },
  {
    "text": "owned backend to authenticate your user and for many different excellent reasons",
    "start": "7928159",
    "end": "7933679"
  },
  {
    "text": "you don't want to send your user to google facebook or amazon for user authentication",
    "start": "7933679",
    "end": "7938880"
  },
  {
    "text": "you want to do the authentication yourself so we recently added that capacity to cognito as well and let's",
    "start": "7938880",
    "end": "7945679"
  },
  {
    "text": "see how it works we call that developer authenticator.identities because obviously",
    "start": "7945679",
    "end": "7951360"
  },
  {
    "text": "you the developer are the one responsible than to authenticate your user so we have",
    "start": "7951360",
    "end": "7957599"
  },
  {
    "text": "on the left side we have the mobile device we have your identification server so that's a server that runs on",
    "start": "7957599",
    "end": "7964560"
  },
  {
    "text": "your site and the purpose of that server is to authenticate your user on the right side we have the cognito",
    "start": "7964560",
    "end": "7970639"
  },
  {
    "text": "service and we have the security token service on aws that's the service which is responsible about",
    "start": "7970639",
    "end": "7977679"
  },
  {
    "text": "generating an access key and secret key the credentials that you know that you need to",
    "start": "7977679",
    "end": "7982800"
  },
  {
    "text": "to make an api call how does it work from the mobile application you",
    "start": "7982800",
    "end": "7988320"
  },
  {
    "text": "implement your login functionality how do you implement it i don't want to know",
    "start": "7988320",
    "end": "7993520"
  },
  {
    "text": "that's your implementation details you authenticate the user with a username password with a certificate with",
    "start": "7993520",
    "end": "8000159"
  },
  {
    "text": "biometric facial recognition i don't want to know you just authenticate the user",
    "start": "8000159",
    "end": "8006400"
  },
  {
    "text": "once the user is authenticated on the server side you need to make an api call to cognito",
    "start": "8006400",
    "end": "8013760"
  },
  {
    "text": "and that api code is get open id token for developers identity so to that call you will give your user",
    "start": "8013760",
    "end": "8020960"
  },
  {
    "text": "id your server side generated user id for the user that you have just authenticated",
    "start": "8020960",
    "end": "8027119"
  },
  {
    "text": "cognito will answer you with the cognito id so the stable identity or generated by",
    "start": "8027119",
    "end": "8033040"
  },
  {
    "text": "cognito and an open id connect token so you respond to your mobile user with",
    "start": "8033040",
    "end": "8040880"
  },
  {
    "text": "the cognito identity and the token that you have received from",
    "start": "8040880",
    "end": "8045920"
  },
  {
    "text": "cognito then using the sdk and using the credentials provider class",
    "start": "8045920",
    "end": "8051440"
  },
  {
    "text": "that you saw during the live coding earlier today you call sts and basically you ask scs",
    "start": "8051440",
    "end": "8059520"
  },
  {
    "text": "to receive an access key secret key in exchange of the open identity connect token that",
    "start": "8059520",
    "end": "8065440"
  },
  {
    "text": "you have just received so basically you tell scs hey i have an open id connect token here please exchange that",
    "start": "8065440",
    "end": "8071920"
  },
  {
    "text": "against an access key secret key this is one single api call assume role with web identity",
    "start": "8071920",
    "end": "8078239"
  },
  {
    "text": "and the sdk is doing that for you when you are adding the token to the credential provider class",
    "start": "8078239",
    "end": "8083920"
  },
  {
    "text": "that call will happen behind the scene automatically for you so sts will receive and consume",
    "start": "8083920",
    "end": "8088960"
  },
  {
    "text": "the open id connect token will verify of course that the token is valid that you",
    "start": "8088960",
    "end": "8094480"
  },
  {
    "text": "didn't try to to to do something nasty on that token and if everything is okay it will get you",
    "start": "8094480",
    "end": "8101520"
  },
  {
    "text": "back an aws access key and secret key and once again that access key and secret key",
    "start": "8101520",
    "end": "8107679"
  },
  {
    "text": "is encapsulated in the credential provider object provided by the sdk so you don't have to really",
    "start": "8107679",
    "end": "8115679"
  },
  {
    "text": "get access to the the string representation of the access key secret key that access key secret key will be",
    "start": "8115679",
    "end": "8121520"
  },
  {
    "text": "used to sign all the other api calls that you will do for example to fetch your picture on s3",
    "start": "8121520",
    "end": "8127840"
  },
  {
    "text": "or if you want to make a dynamodb call directly from the device that access key secret key will be consumed by the sdk",
    "start": "8127840",
    "end": "8134960"
  },
  {
    "text": "by the client services of the sdk to talk any ap to to call any api on the server side",
    "start": "8134960",
    "end": "8142560"
  },
  {
    "text": "is it clear sometimes you have a developer server a",
    "start": "8142560",
    "end": "8149840"
  },
  {
    "text": "developer now you service you have a server to to provide",
    "start": "8149840",
    "end": "8155360"
  },
  {
    "text": "user identities on your side but you still want to delegate user authentication to third",
    "start": "8155520",
    "end": "8161360"
  },
  {
    "text": "party service and one example might be linkedin as we don't support natively linkedin",
    "start": "8161360",
    "end": "8167119"
  },
  {
    "text": "how would would it work if you want to authenticate your user with a",
    "start": "8167119",
    "end": "8172560"
  },
  {
    "text": "service that we do not support incognito you have to let your user go to the third party",
    "start": "8172560",
    "end": "8179280"
  },
  {
    "text": "service to make user authentication how they authenticate over there that's their problem we don't want to know",
    "start": "8179280",
    "end": "8185040"
  },
  {
    "text": "but anyway if the authentication is successful linkedin in this case will return",
    "start": "8185040",
    "end": "8190800"
  },
  {
    "text": "a token to the device then the device needs to talk to your server so to make a call to your",
    "start": "8190800",
    "end": "8196800"
  },
  {
    "text": "user identity server and give the access token it just received from linkedin",
    "start": "8196800",
    "end": "8202399"
  },
  {
    "text": "your server will then check the validity of that token with the identity provider so it will",
    "start": "8202400",
    "end": "8208000"
  },
  {
    "text": "make an api call to linkedin to say hey is the token that i just received is it a valid one",
    "start": "8208000",
    "end": "8213518"
  },
  {
    "text": "and if it is a valid one you can once again call to get open to get open id token for developer",
    "start": "8213519",
    "end": "8219920"
  },
  {
    "text": "developer identity theory on cognito and you give us a parameter the token that you have received",
    "start": "8219920",
    "end": "8226160"
  },
  {
    "text": "from from linkedin and just like in my previous example",
    "start": "8226160",
    "end": "8232399"
  },
  {
    "text": "cognito will answer you with the stable cognito identity id and an open id connect",
    "start": "8232400",
    "end": "8238478"
  },
  {
    "text": "token your server will give back that cognito identity id",
    "start": "8238479",
    "end": "8245598"
  },
  {
    "text": "to the mobile application and the token and whenever a client sdk class the s3 client the sns client",
    "start": "8245599",
    "end": "8253040"
  },
  {
    "text": "the dynamodb client on the sdk we need to to access one of the service",
    "start": "8253040",
    "end": "8260240"
  },
  {
    "text": "we will have a call to get an access key secret key and the the class will give the open id",
    "start": "8260240",
    "end": "8266080"
  },
  {
    "text": "connect token to sts sds will validate that with cognito",
    "start": "8266080",
    "end": "8271200"
  },
  {
    "text": "and will answer with an access key secret key so basically you can integrate any type",
    "start": "8271200",
    "end": "8276638"
  },
  {
    "text": "of identity provider by using that mechanism and the server side on",
    "start": "8276639",
    "end": "8281840"
  },
  {
    "text": "on your side and that cognito api gets open id i always forget the name",
    "start": "8281840",
    "end": "8288638"
  },
  {
    "text": "it's too long for me get open id for developer identities",
    "start": "8288639",
    "end": "8295519"
  },
  {
    "text": "questions wow",
    "start": "8297281",
    "end": "8305840"
  },
  {
    "text": "so the question is if we do support samuel s-a-m-l a single sign-on and i have a mixed",
    "start": "8312000",
    "end": "8319439"
  },
  {
    "text": "answer here at sts level so the green service on the bottom right side of the slide",
    "start": "8319440",
    "end": "8325678"
  },
  {
    "text": "yes this service has an api to consume samuel token and usually we see our customer using",
    "start": "8325679",
    "end": "8331439"
  },
  {
    "text": "that in an enterprise identity federation single sign-on scenario",
    "start": "8331440",
    "end": "8336478"
  },
  {
    "text": "so you authenticate your user on your your desktop user for example with your",
    "start": "8336479",
    "end": "8341920"
  },
  {
    "text": "active directory the active directory generates a samuel token and you can consume that samuel token in",
    "start": "8341920",
    "end": "8349040"
  },
  {
    "text": "exchange of and receiving exchange and access key secret key on the cognito part we do not support",
    "start": "8349040",
    "end": "8355200"
  },
  {
    "text": "samuel yet but we are always listening to customer feedback so if it is important for you if you have a use case",
    "start": "8355200",
    "end": "8361280"
  },
  {
    "text": "for that let's talk about that and let's see",
    "start": "8361281",
    "end": "8365841"
  },
  {
    "text": "so that was a quite hardcore session identities questions are always hard and a single sign-on scenario it's",
    "start": "8372000",
    "end": "8378800"
  },
  {
    "text": "always hard yep",
    "start": "8378800",
    "end": "8382080"
  },
  {
    "text": "yes the the the code of the of the application will be eventually available on github so we",
    "start": "8385200",
    "end": "8392319"
  },
  {
    "text": "have a github repository with all the aws sdk samples and it will be there",
    "start": "8392319",
    "end": "8397359"
  },
  {
    "text": "uh i cannot give you a date as soon as we can we have to clear out first some bugs in",
    "start": "8397359",
    "end": "8403439"
  },
  {
    "text": "the code and get legal approval and all the internal approval to get that code out",
    "start": "8403439",
    "end": "8410160"
  },
  {
    "text": "but yes the intent is to publish the code",
    "start": "8410160",
    "end": "8414160"
  },
  {
    "text": "so let's recap about all the things we talk about today",
    "start": "8415439",
    "end": "8420479"
  },
  {
    "text": "when you are developing your application your job is to make sure that you provide your user the best user",
    "start": "8420479",
    "end": "8425840"
  },
  {
    "text": "experience and the best application and not to focus on all the undifferentiated heavy lifting",
    "start": "8425840",
    "end": "8433280"
  },
  {
    "text": "all the things that i call the plumbry all the low level stuff that all applications have to handle correctly",
    "start": "8433280",
    "end": "8440399"
  },
  {
    "text": "and we try to help you for that by providing different services and wrap these services in a",
    "start": "8440399",
    "end": "8447280"
  },
  {
    "text": "mobile sdk one of the service and we talked in length about that one is cognito because",
    "start": "8447280",
    "end": "8453520"
  },
  {
    "text": "it has two parts one of them is the user authentication to help you to authenticate your user",
    "start": "8453520",
    "end": "8460640"
  },
  {
    "text": "and and to to manage the authorization that the user will have to consume other aws",
    "start": "8460640",
    "end": "8467359"
  },
  {
    "text": "service by using the iem policies so you can restrict what an authenticated user will be able",
    "start": "8467359",
    "end": "8474000"
  },
  {
    "text": "to do on the aws services and the other side of cognito is the synchronization",
    "start": "8474000",
    "end": "8479680"
  },
  {
    "text": "with cognito you can synchronize up to one megabyte of user profile data between multiple",
    "start": "8479680",
    "end": "8485680"
  },
  {
    "text": "device like a tablet a smartphone or even a website and keep a consistent user experience across",
    "start": "8485680",
    "end": "8492080"
  },
  {
    "text": "these multiple devices or these multiple applications another thing is that most of the mobile",
    "start": "8492080",
    "end": "8499200"
  },
  {
    "text": "application is doing is to collect behavior user behavior to track user",
    "start": "8499200",
    "end": "8505120"
  },
  {
    "text": "retention and to analyze the user flow within your application so we have a service",
    "start": "8505120",
    "end": "8510720"
  },
  {
    "text": "that helps you to do that it's called mobile analytics it's extremely simple to use as bob demonstrated you just",
    "start": "8510720",
    "end": "8516720"
  },
  {
    "text": "instantiate the class and it will automatically automatically track when your users are starting the",
    "start": "8516720",
    "end": "8522720"
  },
  {
    "text": "application leaving the application coming back and you can also generate custom events if you want to track",
    "start": "8522720",
    "end": "8528640"
  },
  {
    "text": "some purchase within your application for example you can add custom events inside your",
    "start": "8528640",
    "end": "8534080"
  },
  {
    "text": "application to do that on the back inside we have services",
    "start": "8534080",
    "end": "8541439"
  },
  {
    "text": "that help you to to store state on aws we thought having you to rely on",
    "start": "8541439",
    "end": "8548800"
  },
  {
    "text": "a server-side infrastructure to do that or your server-side infrastructure to do that with s3 the file storage service the",
    "start": "8548800",
    "end": "8556720"
  },
  {
    "text": "object storage services where your application can upload content and download content",
    "start": "8556720",
    "end": "8562560"
  },
  {
    "text": "typically picture video but it can be any type of content and if you have large scale access to s3",
    "start": "8562560",
    "end": "8570720"
  },
  {
    "text": "we have cloudfront the content delivery network services that will cache this content on one of",
    "start": "8570720",
    "end": "8577040"
  },
  {
    "text": "the 52 edge locations we have on this planet so the content will be served by a",
    "start": "8577040",
    "end": "8583200"
  },
  {
    "text": "network location which is physically close to the location of the user instead of sending your user request",
    "start": "8583200",
    "end": "8589680"
  },
  {
    "text": "back to your backend infrastructure if you need to send push notification",
    "start": "8589680",
    "end": "8595040"
  },
  {
    "text": "to your user you can use sns to do that either to an individual device or to multiple",
    "start": "8595040",
    "end": "8601520"
  },
  {
    "text": "device by using topx and you also have direct access to dynamodb the nosql",
    "start": "8601520",
    "end": "8608319"
  },
  {
    "text": "database from from amazon so your mobile application can",
    "start": "8608319",
    "end": "8613359"
  },
  {
    "text": "use the dynamodb api to interact with server-side content",
    "start": "8613359",
    "end": "8619600"
  },
  {
    "text": "and you can restrict access to that content to specific keys so for example you can",
    "start": "8619600",
    "end": "8626800"
  },
  {
    "text": "you can create policies to ensure that user will be only able to write items with their user id as a key",
    "start": "8626800",
    "end": "8634160"
  },
  {
    "text": "and to not write items with someone else's user id and last but not least if you need to",
    "start": "8634160",
    "end": "8640800"
  },
  {
    "text": "stream large amount of data from a large volume of device you can use amazon kinesis to stream the",
    "start": "8640800",
    "end": "8647760"
  },
  {
    "text": "data up to you then to write a client application which is actually a server-side application that will",
    "start": "8647760",
    "end": "8653200"
  },
  {
    "text": "consume these data and compute some analytics or some user behavior",
    "start": "8653200",
    "end": "8658960"
  },
  {
    "text": "some fraud detection whatever type of information you want to extract from that stream of",
    "start": "8658960",
    "end": "8666840"
  },
  {
    "text": "data if you are serious about mobile development on aws",
    "start": "8666840",
    "end": "8673520"
  },
  {
    "text": "subscribe to the aws mobile blog we have an rss feed for that there are weekly updates on that blog",
    "start": "8673520",
    "end": "8679840"
  },
  {
    "text": "with very good articles and best practice about how to use the client side sdk and",
    "start": "8679840",
    "end": "8685120"
  },
  {
    "text": "also subscribe to our twitter handle aws for mobile if you have specific",
    "start": "8685120",
    "end": "8691520"
  },
  {
    "text": "questions we have the forums you can ask your question with many",
    "start": "8691520",
    "end": "8696640"
  },
  {
    "text": "people from amazon that are monitoring this forum the engineering team you do",
    "start": "8696640",
    "end": "8702640"
  },
  {
    "text": "yes thank you the support team the training team so you can get an",
    "start": "8702640",
    "end": "8707840"
  },
  {
    "text": "answer quite quickly and stack overflow is always a very good community also to ask a question or to",
    "start": "8707840",
    "end": "8714960"
  },
  {
    "text": "get questions to get answer when you are looking for specific answers and we also monitor",
    "start": "8714960",
    "end": "8721439"
  },
  {
    "text": "stack overflow we also answer a question on on stack overflow that's correct thank you",
    "start": "8721439",
    "end": "8726960"
  },
  {
    "text": "and the two github repositories it's a slash aws and slash aws lab the sdks are",
    "start": "8726960",
    "end": "8732640"
  },
  {
    "text": "open source you can download the source code from the sdk sometimes it's interesting to have a look at the code to see how",
    "start": "8732640",
    "end": "8738720"
  },
  {
    "text": "things are working if you want to understand internal behavior of the sdk",
    "start": "8738720",
    "end": "8744800"
  },
  {
    "text": "and we do publish more and more and hopefully even more in the future a code sample",
    "start": "8744800",
    "end": "8750240"
  },
  {
    "text": "for these sdk on github as well and",
    "start": "8750240",
    "end": "8755520"
  },
  {
    "text": "that's it for bob and myself today if you have more questions we are happy to take them otherwise we wish you",
    "start": "8755520",
    "end": "8763520"
  },
  {
    "text": "a very happy hand of the conference and a safe travel back home thank you",
    "start": "8763520",
    "end": "8775040"
  }
]