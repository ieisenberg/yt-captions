[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hey everybody thank you for coming over here at coalition 2019 and I'm here with",
    "start": "6569",
    "end": "11710"
  },
  {
    "text": "dr. Frank Muntz he's actually gonna talk to us about service meshes so Frank take it away thank you anaconda can you",
    "start": "11710",
    "end": "19060"
  },
  {
    "text": "all hear me yeah fantastic great so welcome good morning cool you",
    "start": "19060",
    "end": "24759"
  },
  {
    "text": "made it to this presentation it's actually a very technical presentation I think that this doesn't make any sense",
    "start": "24759",
    "end": "30340"
  },
  {
    "text": "to have a non-technical presentation about service measures so it is technical I try to make it as easy as",
    "start": "30340",
    "end": "38740"
  },
  {
    "text": "possible so there is a easy gentle start but I'm gonna put many things together so please pay attention as it gets",
    "start": "38740",
    "end": "45040"
  },
  {
    "text": "increasingly difficult during the talk but I think we are gonna make it so my",
    "start": "45040",
    "end": "51250"
  },
  {
    "text": "name is Frank moons I work for the german-speaking countries Germany Austria Switzerland as a Technical",
    "start": "51250",
    "end": "57940"
  },
  {
    "text": "Evangelist and the talk is about service",
    "start": "57940",
    "end": "63520"
  },
  {
    "start": "60000",
    "end": "270000"
  },
  {
    "text": "measures and we dive deep into technology right now so the first question is if you do a modern micro",
    "start": "63520",
    "end": "70659"
  },
  {
    "text": "services architecture what components would you use and feel free to just",
    "start": "70659",
    "end": "76569"
  },
  {
    "text": "shout anything it comes to your mind",
    "start": "76569",
    "end": "81999"
  },
  {
    "text": "easy to you say yeah yeah so ec2 is this one solution how about something more",
    "start": "81999",
    "end": "89560"
  },
  {
    "text": "lightweight how we deploy lambda is a",
    "start": "89560",
    "end": "95829"
  },
  {
    "text": "good point anything else eks call what is e KS",
    "start": "95829",
    "end": "105250"
  },
  {
    "text": "based on what you running e KS yeah docker containers so I we got two points",
    "start": "105250",
    "end": "112299"
  },
  {
    "text": "already so I wanted to list two building blocks first of all that we use and the first one I highlighted in it's actually",
    "start": "112299",
    "end": "118450"
  },
  {
    "text": "orange I'm not sure if he's always shows yellow here but it's orange containers",
    "start": "118450",
    "end": "123759"
  },
  {
    "text": "that's the most important part for this presentation so containers then the second one I you mention it surveillance",
    "start": "123759",
    "end": "130810"
  },
  {
    "text": "AWS lambda higher abstraction layer easier to build with a few more",
    "start": "130810",
    "end": "137290"
  },
  {
    "text": "limitations so containers are more general lambdas bring you this higher abstraction layer that make it so",
    "start": "137290",
    "end": "143470"
  },
  {
    "text": "popular now and then one point you didn't mention is we have 165 services",
    "start": "143470",
    "end": "150459"
  },
  {
    "text": "in the AWS universe and you can use any of them to build your application and",
    "start": "150459",
    "end": "156280"
  },
  {
    "text": "very often we have this discussion about people know about docker containers they know about what you mentioned about eks",
    "start": "156280",
    "end": "163419"
  },
  {
    "text": "and then the question comes up should you run your let's say MySQL database in",
    "start": "163419",
    "end": "169389"
  },
  {
    "text": "a docker container yourself or not and people come and ask me and the question",
    "start": "169389",
    "end": "174819"
  },
  {
    "text": "that the answer typically is if it's a small scale problem and if you if you",
    "start": "174819",
    "end": "179980"
  },
  {
    "text": "know what you're doing there's no reason why you should not do that if you're trying to build something that is",
    "start": "179980",
    "end": "185769"
  },
  {
    "text": "working across different regions in the world so let's say from Sydney to San",
    "start": "185769",
    "end": "191230"
  },
  {
    "text": "Paulo and maybe across different availability zones and you want it highly available and you plan for like",
    "start": "191230",
    "end": "198609"
  },
  {
    "text": "64 terabyte of memory for the database then I would recommend you not to try",
    "start": "198609",
    "end": "206169"
  },
  {
    "text": "this yourself so if there is a cloud service available use the cloud service now and then your problems are solved",
    "start": "206169",
    "end": "212400"
  },
  {
    "text": "and that's an important thing to remember now there is always this option of using cloud services if there is a",
    "start": "212400",
    "end": "218549"
  },
  {
    "text": "cloud service that's the best solution or so we have containers we have surveillance we have all the other cloud",
    "start": "218549",
    "end": "225689"
  },
  {
    "text": "services and something which is the most fundamental is easy to it's still around",
    "start": "225689",
    "end": "230939"
  },
  {
    "text": "we will have it for a while and a lot of people still use it today and it's actually your job as an architect to",
    "start": "230939",
    "end": "238470"
  },
  {
    "text": "take this decision and to select the best possible solution and don't trust the people that tell you everything is B",
    "start": "238470",
    "end": "245099"
  },
  {
    "text": "server less that's not true there will be containers and also don't trust the people like they tell you everything will be containers because there is a",
    "start": "245099",
    "end": "251670"
  },
  {
    "text": "space for server less and there is even a space for ec2 and that's an important",
    "start": "251670",
    "end": "257190"
  },
  {
    "text": "decision you have to take no there is no rule of thumb it depends on your use case it depends on your situation it",
    "start": "257190",
    "end": "263220"
  },
  {
    "text": "depends on quite a lot of factors now containers are highlighted I want to",
    "start": "263220",
    "end": "268289"
  },
  {
    "text": "focus on containers and containers helped us a lot no they help us to get from development to production they also",
    "start": "268289",
    "end": "275520"
  },
  {
    "start": "270000",
    "end": "468000"
  },
  {
    "text": "help us to get from on-premises to the cloud because it's this fantastic packaging unit but they also bring some",
    "start": "275520",
    "end": "282240"
  },
  {
    "text": "new challenges so we have challenges if we have containers at scale and one thing is super you see like starting a",
    "start": "282240",
    "end": "288510"
  },
  {
    "text": "lot of containers and and I pled guilty I did this many times in presentations like here you do a for loop and even on",
    "start": "288510",
    "end": "294900"
  },
  {
    "text": "my small laptop I can start you like 300 containers and then you tell people look at scales and it's like very convincing",
    "start": "294900",
    "end": "303360"
  },
  {
    "text": "no but it's not the whole story I mean it's it's more difficult to run containers in production one reason is",
    "start": "303360",
    "end": "309659"
  },
  {
    "text": "they are transient they come and go and it's it's sometimes quite hard to keep track of them and to see what they're",
    "start": "309659",
    "end": "315240"
  },
  {
    "text": "doing you need to monitor them you want their lock files the other thing is",
    "start": "315240",
    "end": "320479"
  },
  {
    "text": "starting 100 or 300 on my little laptop is easy and it kind of shows that it's a",
    "start": "320479",
    "end": "327240"
  },
  {
    "text": "it's a very interesting technology know that works in a small scale on a laptop but it also works in a hyper scale for",
    "start": "327240",
    "end": "334080"
  },
  {
    "text": "companies like Amazon and Google and they all they all use containers so that's just convincing but running 300",
    "start": "334080",
    "end": "342029"
  },
  {
    "text": "containers on a laptop is one thing in duction the question will be different the question will be if you have a",
    "start": "342029",
    "end": "347650"
  },
  {
    "text": "thousand containers running already and you need to start three more how do you start them across availability zones and",
    "start": "347650",
    "end": "354760"
  },
  {
    "text": "hook them up to a load balancer so this question is different and then the other",
    "start": "354760",
    "end": "360250"
  },
  {
    "text": "thing that we tend to forget these days because those containers seem to be so convenient is that those containers they",
    "start": "360250",
    "end": "367000"
  },
  {
    "text": "are not virtualization no for some people they still look like a virtual image but they're not no it's just a",
    "start": "367000",
    "end": "373450"
  },
  {
    "text": "little bit of Linux tricks with their C names with the C groups the namespaces that make it look like virtualized but",
    "start": "373450",
    "end": "380620"
  },
  {
    "text": "there's just isolated so it's processes running on the House Linux system and you have to ask the question what",
    "start": "380620",
    "end": "387010"
  },
  {
    "text": "happens if this host Linux system goes down or the CPU goes into flames or if",
    "start": "387010",
    "end": "392500"
  },
  {
    "text": "it needs to be patched and you need to move those containers to other to another host and so on so there's a lot",
    "start": "392500",
    "end": "398320"
  },
  {
    "text": "of questions that basically have an answer and the answer is you need more tooling so the first story we told you",
    "start": "398320",
    "end": "405040"
  },
  {
    "text": "like five six years ago is go for containers and then in the in the coming",
    "start": "405040",
    "end": "410050"
  },
  {
    "text": "two years we learned like containers it's not good enough you need something more that it's an orchestration layer and so we have",
    "start": "410050",
    "end": "416290"
  },
  {
    "text": "tooling we need to link like an orchestration layer and the orchestration layer that is more",
    "start": "416290",
    "end": "423190"
  },
  {
    "text": "suitable that is the easiest to get started with in the AWS services world",
    "start": "423190",
    "end": "428530"
  },
  {
    "text": "is ECS it's elastic container service and it's the easiest to get started with",
    "start": "428530",
    "end": "435730"
  },
  {
    "text": "because it brings a nice integration with the whole entire AWS platform it also scales almost unlimited so we have",
    "start": "435730",
    "end": "443950"
  },
  {
    "text": "very very large clusters running on ECS these days and the last point is you get",
    "start": "443950",
    "end": "449290"
  },
  {
    "text": "service integration at the container level so if you start today and you have no other requirements the first thing",
    "start": "449290",
    "end": "456340"
  },
  {
    "text": "you should look at is you think you see as for running your containers so that's maybe the kind of rule of thumb so this",
    "start": "456340",
    "end": "463420"
  },
  {
    "text": "could be the end of the talk regarding containers in orchestration but then something else happened like a few years",
    "start": "463420",
    "end": "470080"
  },
  {
    "start": "468000",
    "end": "725000"
  },
  {
    "text": "ago three years ago four years ago depending on when you think this kubernetes thing",
    "start": "470080",
    "end": "475449"
  },
  {
    "text": "became mature but like a few years ago developers told us look we want to use",
    "start": "475449",
    "end": "481599"
  },
  {
    "text": "kubernetes does this open source orchestration and framework kubernetes and we want to use it so imagine this we",
    "start": "481599",
    "end": "489309"
  },
  {
    "text": "add as a company we had ECS as a service running and thousands of customers use",
    "start": "489309",
    "end": "495009"
  },
  {
    "text": "it very successfully and then the input is yeah but we want to use the open source and of course we carefully listen",
    "start": "495009",
    "end": "501969"
  },
  {
    "text": "to customers actually like over 90% of our of our roadmap is driven by customer",
    "start": "501969",
    "end": "508089"
  },
  {
    "text": "feedback by customer and requirements so we thought about this idea of you know",
    "start": "508089",
    "end": "513610"
  },
  {
    "text": "offering kubernetes as well for customers now some customers they they",
    "start": "513610",
    "end": "520360"
  },
  {
    "text": "ran kubernetes on ec2 which is possible but the learning was it's super hard to",
    "start": "520360",
    "end": "525459"
  },
  {
    "text": "do it yourself so I try it once myself it was like two years ago for Christmas I bought like",
    "start": "525459",
    "end": "531339"
  },
  {
    "text": "four raspberry pies and I put them together to a cluster and I have a quite",
    "start": "531339",
    "end": "536769"
  },
  {
    "text": "good talker background and I know about distributed systems and I thought I'm gonna run on this mini cluster and when",
    "start": "536769",
    "end": "542500"
  },
  {
    "text": "I run kubernetes for myself just to explore it a little bit and I terribly",
    "start": "542500",
    "end": "547839"
  },
  {
    "text": "failed no I was it was like so hard to get it up and running it's not that you take the newest version of kubernetes",
    "start": "547839",
    "end": "554079"
  },
  {
    "text": "and install the newest version of docker because no kubernetes has some opinion what version of docker it works with and",
    "start": "554079",
    "end": "561459"
  },
  {
    "text": "if you don't know all this if you don't have this operational knowledge it's like super hard to get this up and",
    "start": "561459",
    "end": "567939"
  },
  {
    "text": "running a colleague of mine who's a very experienced kubernetes administrator he",
    "start": "567939",
    "end": "573009"
  },
  {
    "text": "always says kubernetes has the potential that it brings grown-up men to cry no I",
    "start": "573009",
    "end": "578769"
  },
  {
    "text": "think it's not that bad but what I'm trying to say is if you want to do it yourself you have to have this",
    "start": "578769",
    "end": "583899"
  },
  {
    "text": "operational knowledge and you have to have enough people to run this 24 hours a day seven days a week and you should",
    "start": "583899",
    "end": "590649"
  },
  {
    "text": "have somebody that you can call it you know Saturday night at 3 o'clock if things go wrong and it's not working",
    "start": "590649",
    "end": "596889"
  },
  {
    "text": "with a simple simple restart so there are challenges and because they are those challenges",
    "start": "596889",
    "end": "604090"
  },
  {
    "text": "very often our customers say can't you run kubernetes for us you know can you not do the operational thing and we just",
    "start": "604090",
    "end": "611650"
  },
  {
    "text": "you know we want to use the standard tools and run our containers and this is",
    "start": "611650",
    "end": "616900"
  },
  {
    "text": "why we build eks it's the managed service for running kubernetes and it's",
    "start": "616900",
    "end": "622990"
  },
  {
    "text": "actually it's open source kubernetes and what we do is we provide the backplane which is the difficult part in the",
    "start": "622990",
    "end": "629980"
  },
  {
    "text": "backplane there is this HCD process that contains the state of whatever you do",
    "start": "629980",
    "end": "635650"
  },
  {
    "text": "with with kubernetes the configuration state and this configuration state of course it stayed it has to be highly",
    "start": "635650",
    "end": "642130"
  },
  {
    "text": "available so it needs to be replicated so we replicate this HCD process we give",
    "start": "642130",
    "end": "647200"
  },
  {
    "text": "it provisioned IAP so it's fast enough we back it up regularly so we create",
    "start": "647200",
    "end": "652780"
  },
  {
    "text": "snapshots if something goes wrong we wreak we restore those snapshots so we do all the hard work basically for you",
    "start": "652780",
    "end": "659410"
  },
  {
    "text": "and what you get is not sure if we see this year what you get here is this DNS",
    "start": "659410",
    "end": "665860"
  },
  {
    "text": "name that you connect to and you bring the worker nodes that you see here on the on the bottom layer and you",
    "start": "665860",
    "end": "671860"
  },
  {
    "text": "distribute them across the availability zones now the good news is the worker nodes they can be any kind of of ec2",
    "start": "671860",
    "end": "679180"
  },
  {
    "text": "worker nodes you can use spot instances that makes it very cheap you save like 80% of the costs you can put them in",
    "start": "679180",
    "end": "686020"
  },
  {
    "text": "auto scaling groups you can have worker nodes that use GPUs some people say why",
    "start": "686020",
    "end": "692440"
  },
  {
    "text": "would you use GPUs for kubernetes the answer is a lot of people are doing machine learning these days on",
    "start": "692440",
    "end": "698410"
  },
  {
    "text": "kubernetes so it makes sense to have worker nodes even with GPUs and then you connect your",
    "start": "698410",
    "end": "704230"
  },
  {
    "text": "worker nodes to the to the managed end point and what you can do is use the standard tools like the cube cuddle or",
    "start": "704230",
    "end": "709930"
  },
  {
    "text": "whatever tools you want to use which is important for customers so they tell us don't change it don't put bells and",
    "start": "709930",
    "end": "716620"
  },
  {
    "text": "whistles that make it incompatible just forgive us manage open-source kubernetes",
    "start": "716620",
    "end": "722050"
  },
  {
    "text": "and that is this is what we are trying to do with this so now things",
    "start": "722050",
    "end": "728110"
  },
  {
    "text": "getting more interesting now the questions if we have coup Benitez and it kind of solves the question how we",
    "start": "728110",
    "end": "734860"
  },
  {
    "text": "abstract a number of computers and just have to cube cuddle command-line and we",
    "start": "734860",
    "end": "739959"
  },
  {
    "text": "say you know cube cuddle apply and we deploy a new part with a new application why do we still need a service mesh and",
    "start": "739959",
    "end": "747100"
  },
  {
    "text": "shouldn't this be a part of kubernetes and this is what I'm trying to explain in the main part of this of this",
    "start": "747100",
    "end": "754360"
  },
  {
    "text": "presentation and to better explain this I want to talk I want to take you a",
    "start": "754360",
    "end": "759459"
  },
  {
    "text": "little bit back in history like 10 years back in history who was already around",
    "start": "759459",
    "end": "765100"
  },
  {
    "text": "in IT like 10 years ago that's wow that's cool I always thought it's not a fair",
    "start": "765100",
    "end": "770769"
  },
  {
    "text": "political correct question but I was around and ten years ago honestly I did",
    "start": "770769",
    "end": "777339"
  },
  {
    "start": "775000",
    "end": "1178000"
  },
  {
    "text": "a lot of these service first projects or ESB projects when the core idea is we",
    "start": "777339",
    "end": "784000"
  },
  {
    "text": "had services we had back-end systems in those back-end systems they were kind of monolithic now they were like big",
    "start": "784000",
    "end": "789430"
  },
  {
    "text": "systems written in Java Enterprise Edition or written in some other language it could be an S AP system with",
    "start": "789430",
    "end": "797199"
  },
  {
    "text": "an API and we had to connect them now if you need to connect your systems and you make - you need to make these services",
    "start": "797199",
    "end": "803829"
  },
  {
    "text": "talk to each other what you do there is two ways to do it one is you just connect them and you have this",
    "start": "803829",
    "end": "809709"
  },
  {
    "text": "point-to-point connections which is not good now because you have a squared number of connections and always squared",
    "start": "809709",
    "end": "816579"
  },
  {
    "text": "in complexity is like super bad in IT you should never do this if you can avoid it so instead of connecting them",
    "start": "816579",
    "end": "823930"
  },
  {
    "text": "directly what we did is we put this ESP layer in the middle and it's a it's a service bus it's called Enterprise",
    "start": "823930",
    "end": "829690"
  },
  {
    "text": "Service bus and the trick is once you introduce the service bus you're squared number of connection goes down to a",
    "start": "829690",
    "end": "836050"
  },
  {
    "text": "linear number of connections if you count the services here you will see like n services and there is just n",
    "start": "836050",
    "end": "842410"
  },
  {
    "text": "connections to the ESB so this ESB is helpful and the ESP is also helpful",
    "start": "842410",
    "end": "847690"
  },
  {
    "text": "because the ESP exposes the API from a service and you talk to the API on the",
    "start": "847690",
    "end": "855820"
  },
  {
    "text": "ESB and the ESB is forwarding the request to the real service so the ESP is working",
    "start": "855820",
    "end": "861940"
  },
  {
    "text": "like a proxy you talk to the ESB and the ESP is proxying or forwarding the",
    "start": "861940",
    "end": "867010"
  },
  {
    "text": "request to the real service that's the function of the ESB and the benefit of",
    "start": "867010",
    "end": "872860"
  },
  {
    "text": "using this is if all your calls go through the ESB guess what ESP is a supercool point to",
    "start": "872860",
    "end": "879100"
  },
  {
    "text": "collect metrics for monitoring the ESB is also an interesting point where you can say if I get a request based on the",
    "start": "879100",
    "end": "887560"
  },
  {
    "text": "header based on the payload based on some condition it could be the day of the week you decide to route the request",
    "start": "887560",
    "end": "893800"
  },
  {
    "text": "to a service version a 1 or 2 a service version a 2 so you could do some",
    "start": "893800",
    "end": "899020"
  },
  {
    "text": "versioning or even traffic shaping with this ESP the other benefit from the ESP",
    "start": "899020",
    "end": "905050"
  },
  {
    "text": "is the ESB is working on a on a network layer it doesn't really care if your service is implemented in Scala or go or",
    "start": "905050",
    "end": "912490"
  },
  {
    "text": "rust or Java or Python or whatever so it was a very versatile thing the drawback",
    "start": "912490",
    "end": "918430"
  },
  {
    "text": "of this ESP approach was it's a big monolithic thing and then what happened in the next coming year sisters",
    "start": "918430",
    "end": "924850"
  },
  {
    "text": "monolithic endpoints they were kind of replaced by micro services so instead of",
    "start": "924850",
    "end": "930340"
  },
  {
    "text": "one monolithic endpoint you had like Dawson's or maybe a hundred micro services and the question is is this",
    "start": "930340",
    "end": "937030"
  },
  {
    "text": "still a good thing to have this big monolithic ESP in the middle and hundreds of micro services as endpoints",
    "start": "937030",
    "end": "944170"
  },
  {
    "text": "and the answer is well just because it's monolithic doesn't make it really bad but there is more issues to it like",
    "start": "944170",
    "end": "950470"
  },
  {
    "text": "typically such an ESB is configuration driven that means if you change something you don't have to restart it",
    "start": "950470",
    "end": "956800"
  },
  {
    "text": "you just change the configuration and it's applied immediately and this is mostly working trust me I was doing",
    "start": "956800",
    "end": "962860"
  },
  {
    "text": "project and it's mostly working now if you talk to ops people and you tell them",
    "start": "962860",
    "end": "968530"
  },
  {
    "text": "it's mostly working what will they do well they will tell you well if it's mostly working in production then I will",
    "start": "968530",
    "end": "974710"
  },
  {
    "text": "restart it every single time because I don't can I cannot count with mostly working now so they restarted this ESB",
    "start": "974710",
    "end": "982360"
  },
  {
    "text": "every single time now I imagine you change your micro services you change the configuration and every time you",
    "start": "982360",
    "end": "988180"
  },
  {
    "text": "restart at your speed that's not a good solution you know if you have hundreds of micro-services this actually gets much",
    "start": "988180",
    "end": "994029"
  },
  {
    "text": "worse than having a few monolithic endpoints so there's a big question mark if this espe should be continued to use",
    "start": "994029",
    "end": "1001320"
  },
  {
    "text": "for micro-services architecture today and then like going advancing five years",
    "start": "1001320",
    "end": "1008279"
  },
  {
    "text": "or going back five years we had another solution and this came from the Netflix people um it's called open source",
    "start": "1008279",
    "end": "1015060"
  },
  {
    "text": "software Center it's a bunch of libraries that implemented patterns like",
    "start": "1015060",
    "end": "1020220"
  },
  {
    "text": "similar patterns that try to improve the quality of the communication they try to",
    "start": "1020220",
    "end": "1026308"
  },
  {
    "text": "deal with what I like to call cross-cutting concerns because they're not really business logic it's more it's",
    "start": "1026309",
    "end": "1033209"
  },
  {
    "text": "more how those services communicate and one of those libraries is the library",
    "start": "1033209",
    "end": "1038370"
  },
  {
    "text": "called hystrix which implemented a circuit circuit breaker pattern and so",
    "start": "1038370",
    "end": "1044640"
  },
  {
    "text": "the idea is that all of a sudden what was in the ESB in the middle now goes to the micro service and is part of the",
    "start": "1044640",
    "end": "1051179"
  },
  {
    "text": "micro service disadvantage is if you need to use this this library from the",
    "start": "1051179",
    "end": "1056700"
  },
  {
    "text": "OSS C project is if you use a library in a programming language you know what you do you need to import a library and then",
    "start": "1056700",
    "end": "1062669"
  },
  {
    "text": "you need to make your code use the functions in the library so you change your code now imagine this for a minute",
    "start": "1062669",
    "end": "1069150"
  },
  {
    "text": "somebody tells you we go to the cloud we take we take this approach and then we",
    "start": "1069150",
    "end": "1075390"
  },
  {
    "text": "change the software to make it run in the cloud is this what you expect from running software in the cloud the answer",
    "start": "1075390",
    "end": "1081690"
  },
  {
    "text": "is for most people not really no so it's nice to have those libraries but then",
    "start": "1081690",
    "end": "1087120"
  },
  {
    "text": "you have to for one programming language only and then the other thing is is this really the way to to to migrate software",
    "start": "1087120",
    "end": "1095280"
  },
  {
    "text": "to the cloud and the answer is it's not a perfect way because you need to change the source code so the real question is",
    "start": "1095280",
    "end": "1102300"
  },
  {
    "text": "and you see there's some white space on the on the right hand side is couldn't we take the best of both worlds no",
    "start": "1102300",
    "end": "1108120"
  },
  {
    "text": "couldn't we have something that is language independent and that is",
    "start": "1108120",
    "end": "1113660"
  },
  {
    "text": "decentralized that is small-scale and working for micro services and the",
    "start": "1113660",
    "end": "1118919"
  },
  {
    "text": "answer is or guess what that's the service mesh so this service mesh approach",
    "start": "1118919",
    "end": "1124330"
  },
  {
    "text": "we kind of take the logic and put the logic in front of the micro service but",
    "start": "1124330",
    "end": "1130210"
  },
  {
    "text": "not into the micro service and that's the important thing we have this logic running in a proxy now you see a lot of",
    "start": "1130210",
    "end": "1136120"
  },
  {
    "text": "proxies running and I will address this this question like does it really make sense to have so many proxies running",
    "start": "1136120",
    "end": "1142690"
  },
  {
    "text": "but the poor important thing is we have those proxies we have the micro services and all this is running in containers",
    "start": "1142690",
    "end": "1149050"
  },
  {
    "text": "all this is running for example on top of kubernetes that's why I gave you this introduction to e CS and containers and",
    "start": "1149050",
    "end": "1156040"
  },
  {
    "text": "kubernetes it's this central language agnostic works for any language and it's",
    "start": "1156040",
    "end": "1161890"
  },
  {
    "text": "lightweight so there's no problem of restarting a big monolithic layer in the middle so it's not it's it's it's a very",
    "start": "1161890",
    "end": "1168670"
  },
  {
    "text": "good approach actually and now we need to talk about how do you get to those proxies and how does this relate to all",
    "start": "1168670",
    "end": "1175059"
  },
  {
    "text": "the other AWS services that you already know now you know in all programming",
    "start": "1175059",
    "end": "1181660"
  },
  {
    "text": "languages we have this hello world example and if you developer you've seen",
    "start": "1181660",
    "end": "1186940"
  },
  {
    "text": "like dozens of hello worlds now we have hello worlds for Java we have hello worlds for big data where we count words",
    "start": "1186940",
    "end": "1193300"
  },
  {
    "text": "and we have hello worlds for machine learning where we train dogs and cats and here we have the dog that is",
    "start": "1193300",
    "end": "1199900"
  },
  {
    "text": "sleeping now and hello world for this service message example is a book in for",
    "start": "1199900",
    "end": "1204970"
  },
  {
    "text": "example and you see it's polyglot so we have Java here and we actually have a",
    "start": "1204970",
    "end": "1210160"
  },
  {
    "text": "site that is doing a product page for books it's written in Python and we have reviews which are written in Java those",
    "start": "1210160",
    "end": "1217450"
  },
  {
    "text": "reviews come with different versions version 1 2 3 and we have a ruby pod which is giving you details and then",
    "start": "1217450",
    "end": "1225670"
  },
  {
    "text": "there's the backend creating the ratings with no chairs and if we take this demo application and we look at it from a",
    "start": "1225670",
    "end": "1233320"
  },
  {
    "start": "1231000",
    "end": "1439000"
  },
  {
    "text": "more architectural view you will see that there is two big boxes on the left",
    "start": "1233320",
    "end": "1238870"
  },
  {
    "text": "hand on the right hand side and those are the pots in kubernetes so kubernetes part is like the smallest deployment",
    "start": "1238870",
    "end": "1246010"
  },
  {
    "text": "unit that we have typically you have a container running in a pot but you can also have more than one containers",
    "start": "1246010",
    "end": "1252490"
  },
  {
    "text": "running in a pot so the pot is the the surrounding entity for running a container it comes with an IP address",
    "start": "1252490",
    "end": "1259440"
  },
  {
    "text": "but the IP address is not stable so typically in kubernetes we also create a service but let's talk about this spot",
    "start": "1259440",
    "end": "1266160"
  },
  {
    "text": "the interesting thing is in this part where we have two product page running here we also have to proxy running and",
    "start": "1266160",
    "end": "1273000"
  },
  {
    "text": "then the communication from the product page to the reviews is through the proxy",
    "start": "1273000",
    "end": "1278280"
  },
  {
    "text": "through the proxy on the other side and then to the reviews so whenever those services those micro services want to",
    "start": "1278280",
    "end": "1284550"
  },
  {
    "text": "communicate they communicate through the proxy now this proxy first of all you",
    "start": "1284550",
    "end": "1290190"
  },
  {
    "text": "can inject it yourself you can put it there yourself or it could be automatically injected",
    "start": "1290190",
    "end": "1295680"
  },
  {
    "text": "and kubernetes can do this for you and I'm tell you in a minute how this is working so if you don't want to deal",
    "start": "1295680",
    "end": "1301350"
  },
  {
    "text": "with these proxies it's very easy to get them injected automatically into every port that you're running and then you",
    "start": "1301350",
    "end": "1308280"
  },
  {
    "text": "have the functionality in this proxy those proxies they live in the same pot",
    "start": "1308280",
    "end": "1314940"
  },
  {
    "text": "as the original service so it's two containers sharing one part if they live",
    "start": "1314940",
    "end": "1320220"
  },
  {
    "text": "in the same part they share the same network namespace and this is why the proxy can't do its magic and Interceptor",
    "start": "1320220",
    "end": "1326400"
  },
  {
    "text": "calls so the proxy is always intercepting the cost and that's the important part it's like the motor of",
    "start": "1326400",
    "end": "1331680"
  },
  {
    "text": "the service national and in an open source world and that's the most typical",
    "start": "1331680",
    "end": "1336840"
  },
  {
    "text": "implementations that we see these days this is called envoi it's the open source project called envoi and I'll",
    "start": "1336840",
    "end": "1342600"
  },
  {
    "text": "give you more details in the middle now these proxies they need to be configured and this is what we do with the control",
    "start": "1342600",
    "end": "1349920"
  },
  {
    "text": "plane and the control plane it's another open source project which is called SEO so very often we see is you working",
    "start": "1349920",
    "end": "1357060"
  },
  {
    "text": "together with NY and that's the that's the big thing that we see so SEO is",
    "start": "1357060",
    "end": "1362070"
  },
  {
    "text": "having different parts it's steering it's configuring the proxies and why proxies it's also collecting telemetry",
    "start": "1362070",
    "end": "1369810"
  },
  {
    "text": "data like monitoring data from those NY proxies and you can also use it to deploy certificates automatically to",
    "start": "1369810",
    "end": "1377550"
  },
  {
    "text": "automatically create a TLS connection",
    "start": "1377550",
    "end": "1382750"
  },
  {
    "text": "just check now if you have this in place what you could do for example is you",
    "start": "1382750",
    "end": "1388240"
  },
  {
    "text": "could have a small Yama file that looks like this and in this yellow file you'll see I have communication going to",
    "start": "1388240",
    "end": "1394750"
  },
  {
    "text": "reviews which is the site now this review site it's addressed with HTTP we",
    "start": "1394750",
    "end": "1401289"
  },
  {
    "text": "want to talk to this host and 80% of the requests should go to a version 2 which",
    "start": "1401289",
    "end": "1407110"
  },
  {
    "text": "is it's not shown the version here but 80% go to version 2 and like 20% go to",
    "start": "1407110",
    "end": "1412780"
  },
  {
    "text": "version 3 remember when I told you we could use a service bus for this versioning or for this traffic shaping",
    "start": "1412780",
    "end": "1418900"
  },
  {
    "text": "here we do exactly the same thing and it's a small UML file and what you do is cube cut' will apply - F and this Yama",
    "start": "1418900",
    "end": "1426669"
  },
  {
    "text": "file and it's like I took this I wrote it myself you don't need more and this is how you slowly shift traffic from one",
    "start": "1426669",
    "end": "1433120"
  },
  {
    "text": "version to another and I'll give you more details why this is really important and this is - and envoi",
    "start": "1433120",
    "end": "1442330"
  },
  {
    "start": "1439000",
    "end": "1494000"
  },
  {
    "text": "basically gets you interest in this in this world of CN CF the cloud native compute foundation there's a number of",
    "start": "1442330",
    "end": "1450130"
  },
  {
    "text": "graduated projects one of them is kubernetes another one is Prometheus then we have n",
    "start": "1450130",
    "end": "1455620"
  },
  {
    "text": "boy and some more and then we have a list of incubating projects that are kind of waiting to be graduated now this",
    "start": "1455620",
    "end": "1463870"
  },
  {
    "text": "whole CN CF is like a safety net a little bit no it's like a safety blanket that tells you from those hundreds of",
    "start": "1463870",
    "end": "1471100"
  },
  {
    "text": "open-source projects that exist today which ones are used in productions by a certain number of companies so to get",
    "start": "1471100",
    "end": "1478510"
  },
  {
    "text": "into this graduated category you have to have users that use it in production and",
    "start": "1478510",
    "end": "1483909"
  },
  {
    "text": "you see NY is is in this and actually AWS is a platinum member of the CNC F or",
    "start": "1483909",
    "end": "1490450"
  },
  {
    "text": "so so we support this and we want to grow we want to see in CF to grow now",
    "start": "1490450",
    "end": "1496360"
  },
  {
    "start": "1494000",
    "end": "1548000"
  },
  {
    "text": "the service mesh the East your service mesh to take away from SEO is it's open source it helps you to connect secure",
    "start": "1496360",
    "end": "1503650"
  },
  {
    "text": "and observe services and it's actually a shift in where we put this functionality",
    "start": "1503650",
    "end": "1508659"
  },
  {
    "text": "in a shift in where we put those cross-cutting concerns or this well service to",
    "start": "1508659",
    "end": "1513980"
  },
  {
    "text": "service communication and the thing is we have the control plane that is easier",
    "start": "1513980",
    "end": "1519260"
  },
  {
    "text": "and we have the data plane that are all those involved proxies together that's",
    "start": "1519260",
    "end": "1524660"
  },
  {
    "text": "maybe the takeaway from here and those ny proxies they live in a sidecar that's",
    "start": "1524660",
    "end": "1530059"
  },
  {
    "text": "the pattern that's the kubernetes pattern that we apply we want to make those proxies running in a sidecar in",
    "start": "1530059",
    "end": "1536450"
  },
  {
    "text": "the same part s the service implementation in carbonated and this sidecar this proxy can be injected",
    "start": "1536450",
    "end": "1543440"
  },
  {
    "text": "automatically or you can do it yourself if you want so that's the open-source story and looking more into envoi anyway",
    "start": "1543440",
    "end": "1551720"
  },
  {
    "start": "1548000",
    "end": "1678000"
  },
  {
    "text": "it's a great piece of engineering you should really if you have time you should read up about NY there's great",
    "start": "1551720",
    "end": "1556820"
  },
  {
    "text": "blog posts about it it's a level 7 proxy so a level 7 networking means it",
    "start": "1556820",
    "end": "1562600"
  },
  {
    "text": "understands your HTTP protocol it understands HTTP 2 it understands GRP",
    "start": "1562600",
    "end": "1568429"
  },
  {
    "text": "see it even understands DynamoDB if you talk to dynamo DB at left they use the",
    "start": "1568429",
    "end": "1574669"
  },
  {
    "text": "NY proxies to get information per table per petition per operation because it",
    "start": "1574669",
    "end": "1580880"
  },
  {
    "text": "understands what you're talking to DynamoDB and also understands MongoDB it's written in C++ it's 8 megabyte of",
    "start": "1580880",
    "end": "1588559"
  },
  {
    "text": "size that's not a lot do you know how much JDK download is these days it's",
    "start": "1588559",
    "end": "1594890"
  },
  {
    "text": "like almost 200 I guess 160 to 200 so those 8 megabyte it's like one twentieth",
    "start": "1594890",
    "end": "1603080"
  },
  {
    "text": "of the size if you run if you download one JDK depends on the runtime of course of the heap settings but this will be a",
    "start": "1603080",
    "end": "1609860"
  },
  {
    "text": "single service that runs in Java might be up to 20 times bigger than the proxy so for one let's say for this for 20",
    "start": "1609860",
    "end": "1617210"
  },
  {
    "text": "proxies you could have one small service so the overhead in RAM is like almost",
    "start": "1617210",
    "end": "1622400"
  },
  {
    "text": "zero it's not very not very dramatic no language no framework dependencies no",
    "start": "1622400",
    "end": "1629870"
  },
  {
    "text": "code changes its production proven so lift is using it like in in thousands of",
    "start": "1629870",
    "end": "1636919"
  },
  {
    "text": "applications so they they run it all the time and we have a customer story from",
    "start": "1636919",
    "end": "1642290"
  },
  {
    "text": "snapchat it was presented at the summit in New York and they also talked about",
    "start": "1642290",
    "end": "1647600"
  },
  {
    "text": "using live I'm sorry you sing NY and easier so it is used in production",
    "start": "1647600",
    "end": "1652879"
  },
  {
    "text": "that's very important for you to understand if this makes sense or not and the other thing is and it gets us",
    "start": "1652879",
    "end": "1659059"
  },
  {
    "text": "more to the world of aw asses this issue is not tightly married or coupled to NY",
    "start": "1659059",
    "end": "1665570"
  },
  {
    "text": "they usually come together in an open source world that's the most popular service mesh that I see these days but",
    "start": "1665570",
    "end": "1671840"
  },
  {
    "text": "you can separate them now you could use just NY if you wanted and actually",
    "start": "1671840",
    "end": "1678409"
  },
  {
    "start": "1678000",
    "end": "1714000"
  },
  {
    "text": "something really surprising happened last week so last week if you know this net craft studied so net craft is the",
    "start": "1678409",
    "end": "1686359"
  },
  {
    "text": "company that tries to find out what are the 10 most used web servers and as you",
    "start": "1686359",
    "end": "1692179"
  },
  {
    "text": "see here it's typically Apache which goes up and down over the years but now",
    "start": "1692179",
    "end": "1697249"
  },
  {
    "text": "last week in May May 20 19 at sorry 29",
    "start": "1697249",
    "end": "1702529"
  },
  {
    "text": "tinea and NY appeared in this list so the usage of NY increased by a factor of",
    "start": "1702529",
    "end": "1709070"
  },
  {
    "text": "500 and for the first time this NY proxy appeared in this list now I want to talk",
    "start": "1709070",
    "end": "1719119"
  },
  {
    "text": "you quickly explain a little bit more about why NY makes sense and I always",
    "start": "1719119",
    "end": "1724669"
  },
  {
    "text": "call these kind of projects and I did a few of them like crystal ball projects so many times in my previous career",
    "start": "1724669",
    "end": "1732379"
  },
  {
    "text": "before I joined AWS I had projects with with big European companies and they",
    "start": "1732379",
    "end": "1737570"
  },
  {
    "text": "basically said hey Frank can you help us we want to upgrade from a version let's say 2 to a version 3 and we need to find",
    "start": "1737570",
    "end": "1745309"
  },
  {
    "text": "out what will be the hardware requirement and the way to do it to get from vision to to version 3 so basically",
    "start": "1745309",
    "end": "1752389"
  },
  {
    "text": "it's what you see here that's the diagram I took from Martin Fowler where he says you know this is this blue grain",
    "start": "1752389",
    "end": "1758809"
  },
  {
    "text": "deployment but to be able to deploy the green version you need to have the",
    "start": "1758809",
    "end": "1763909"
  },
  {
    "text": "hardware so if the hardware for the blue version costs a million dollars you need to duplicate the hardware provided for",
    "start": "1763909",
    "end": "1770239"
  },
  {
    "text": "the green version install the green version test the green version and then switch over to the green version now",
    "start": "1770239",
    "end": "1776620"
  },
  {
    "text": "and that's a lot of money that's a lot of work and if you do this on premises like it's super expensive if you do this",
    "start": "1776620",
    "end": "1783860"
  },
  {
    "text": "in the cloud things get easier in the cloud you can just have the second set of hardware for as long as you need it",
    "start": "1783860",
    "end": "1790580"
  },
  {
    "start": "1784000",
    "end": "1818000"
  },
  {
    "text": "and then you pay for it as long as you use it like per second exact and then if",
    "start": "1790580",
    "end": "1795710"
  },
  {
    "text": "you don't use it anymore you return it and you stop paying for it so that's a big benefit and that would probably have",
    "start": "1795710",
    "end": "1801980"
  },
  {
    "text": "solved all these crystal ball projects where I was asked really to spend weeks in predicting things that are not really",
    "start": "1801980",
    "end": "1808370"
  },
  {
    "text": "predictable because you get some load estimates and it's super hard to say what kind of",
    "start": "1808370",
    "end": "1813980"
  },
  {
    "text": "hardware you will need in one year to cover more load",
    "start": "1813980",
    "end": "1818680"
  },
  {
    "start": "1818000",
    "end": "1966000"
  },
  {
    "text": "that's a rhetoric question I have for you I checked the temperature for the lake",
    "start": "1819310",
    "end": "1824330"
  },
  {
    "text": "here do you know how cold it is anyone anyone local it's less than five degrees",
    "start": "1824330",
    "end": "1830480"
  },
  {
    "text": "it's like three to five degrees Lake Ontario nobody likes cold water no it's a",
    "start": "1830480",
    "end": "1837380"
  },
  {
    "text": "rhetoric question and still if you do this Bluegreen deployment you have this big switch and you switch from blue to",
    "start": "1837380",
    "end": "1844400"
  },
  {
    "text": "green now you put all your customers into ice-cold water like all of them if you have 10,000 you take the switch",
    "start": "1844400",
    "end": "1850640"
  },
  {
    "text": "after careful testing I admit but then they all run in green and they all swim",
    "start": "1850640",
    "end": "1856070"
  },
  {
    "text": "in cold water if it's good or not but you probably need a good fallback strategy if the green version is not",
    "start": "1856070",
    "end": "1862160"
  },
  {
    "text": "working as expected you want to go back quickly to the blue version so this switch I think still is not the best",
    "start": "1862160",
    "end": "1867980"
  },
  {
    "text": "thing we can do still a lot of people talk about those Bluegreen deployments so Bluegreen is like 100 percent of your",
    "start": "1867980",
    "end": "1874340"
  },
  {
    "text": "customers in a big sea of cold water now usually people say if you do kubernetes",
    "start": "1874340",
    "end": "1880670"
  },
  {
    "text": "we have those pots if you have a service running across four different parts you can do a rolling update now remember I",
    "start": "1880670",
    "end": "1887810"
  },
  {
    "text": "told you about my raspberry pi cluster even with this raspberry pi cluster with docker I could do a rolling upgrade and",
    "start": "1887810",
    "end": "1894410"
  },
  {
    "text": "a service running across four parts I could upgrade like the first part and",
    "start": "1894410",
    "end": "1899710"
  },
  {
    "text": "then I was going to the second part so I was going from 25% to 50 to 75 to 100",
    "start": "1899710",
    "end": "1907190"
  },
  {
    "text": "and that's much smoother now it's just not like you see if called water it's just like a bathtub of cold water still if you have",
    "start": "1907190",
    "end": "1913970"
  },
  {
    "text": "10,000 customers you throw two and a half thousand of them into cold water then five thousand seven thousand five",
    "start": "1913970",
    "end": "1920540"
  },
  {
    "text": "hundred it's still a lot No but this is what you could do these days with darkus warm or with kubernetes now",
    "start": "1920540",
    "end": "1927710"
  },
  {
    "text": "the question is couldn't it be much smoother now couldn't you have 1% 2% 3% the answer is not if you look into these",
    "start": "1927710",
    "end": "1935300"
  },
  {
    "text": "parts no because it's like one part or not one part and the thing is you could do it with traffic shaping if you",
    "start": "1935300",
    "end": "1941750"
  },
  {
    "text": "redirect the traffic and that's what you can do with a service mash and it's",
    "start": "1941750",
    "end": "1947780"
  },
  {
    "text": "basically what I already showed you you already saw the llaman fire that you need to apply to the co and then you",
    "start": "1947780",
    "end": "1954200"
  },
  {
    "text": "have this traffic shifting of twenty eighty percent or three percent nineteen ninety seven percent and that's the",
    "start": "1954200",
    "end": "1961370"
  },
  {
    "text": "reason why we have to service meshes for traffic shifting and this is where they make a lot of sense so a lot of people",
    "start": "1961370",
    "end": "1968060"
  },
  {
    "text": "say well I can do this with docker swarm or kubernetes the answer is yes you can",
    "start": "1968060",
    "end": "1973610"
  },
  {
    "text": "you can do rolling upgrades but you cannot really change this traffic flow and for changing the traffic flow that's",
    "start": "1973610",
    "end": "1980600"
  },
  {
    "text": "not the concern of kubernetes no this is why we have to service mesh on top this is one of the reasons why we have to",
    "start": "1980600",
    "end": "1987020"
  },
  {
    "text": "service mesh on top and the other reasons is we have increased observability and I come to this so this",
    "start": "1987020",
    "end": "1994400"
  },
  {
    "text": "could be the end of the talk if you want to go for is to and envoi you can run it today on eks but it is if I have more",
    "start": "1994400",
    "end": "2001630"
  },
  {
    "text": "time now I have a lot of time it is not the end of the talk so if you want take SEO take NY remember those CN CF open",
    "start": "2001630",
    "end": "2010120"
  },
  {
    "text": "source projects you have all this world for you where you can play what you can use in production and it's amazing tools",
    "start": "2010120",
    "end": "2016810"
  },
  {
    "text": "that you get but there is more so you asked us for more basically so I told",
    "start": "2016810",
    "end": "2023110"
  },
  {
    "start": "2020000",
    "end": "2056000"
  },
  {
    "text": "you that a lot of our again is driven by customer requests so our customers said yeah we understand we want we see the",
    "start": "2023110",
    "end": "2030760"
  },
  {
    "text": "the appealing factor of this is to uny world but what we really want is the",
    "start": "2030760",
    "end": "2035950"
  },
  {
    "text": "service mesh for all the compute services now probably when I started his talk you",
    "start": "2035950",
    "end": "2042350"
  },
  {
    "text": "thought like why is he talking about the components that we can use for micro services and you helped me a lot now you",
    "start": "2042350",
    "end": "2048080"
  },
  {
    "text": "said easy - you said eks I dropped in ECS so we had different options and the",
    "start": "2048080",
    "end": "2056960"
  },
  {
    "start": "2056000",
    "end": "2162000"
  },
  {
    "text": "thing is with app mesh we can do exactly this we have a service mesh that is working across all the compute options",
    "start": "2056960",
    "end": "2063950"
  },
  {
    "text": "that we offer so it's ECS it's actually also UCS with fog aid which is a surveillance way of running ecs",
    "start": "2063950",
    "end": "2070429"
  },
  {
    "text": "containers where you don't bring or provision the worker nodes you just define the resources for a container and",
    "start": "2070429",
    "end": "2077720"
  },
  {
    "text": "then you run the container so it's a surveillance way of running containers you see as with Fargate it can ask ec2",
    "start": "2077720",
    "end": "2083929"
  },
  {
    "text": "actually ec2 it doesn't even have to be in a container and then self hosted or",
    "start": "2083929",
    "end": "2089570"
  },
  {
    "text": "self managed kubernetes on ec2 and for all of them we have a service mesh that",
    "start": "2089570",
    "end": "2095120"
  },
  {
    "text": "is working across those compute services now you probably say we spend a lot of",
    "start": "2095120",
    "end": "2100610"
  },
  {
    "text": "time talking about East you in NY and that was very appealing now what what I told you and the answer is that our",
    "start": "2100610",
    "end": "2107450"
  },
  {
    "text": "version is called app mesh and this app mesh is using NY it's using the NY proxy",
    "start": "2107450",
    "end": "2112970"
  },
  {
    "text": "which is the core of the of the most popular service mesh that people know",
    "start": "2112970",
    "end": "2118250"
  },
  {
    "text": "from open source anyway so that's a good choice in my opinion and so app mesh is",
    "start": "2118250",
    "end": "2124340"
  },
  {
    "text": "based on the end by proxy which is a fantastic choice because it's used a lot no it'sit's battle-proven it's used in",
    "start": "2124340",
    "end": "2131000"
  },
  {
    "text": "production if you want to start with AB mesh you can do it from the AWS console",
    "start": "2131000",
    "end": "2136850"
  },
  {
    "text": "that you might know you can do it from the command line there is an SDK for it obviously good news is there is no",
    "start": "2136850",
    "end": "2143120"
  },
  {
    "text": "charge you can run it you can explore it there is no additional cost for you and it supports all the third-party tools",
    "start": "2143120",
    "end": "2150230"
  },
  {
    "text": "that you know from NY so we use NY which i think is the core message and then we",
    "start": "2150230",
    "end": "2156230"
  },
  {
    "text": "build our own control plane around it because we want it to work across the",
    "start": "2156230",
    "end": "2161270"
  },
  {
    "text": "different compute options now a lot of people tell me can you explain me how to",
    "start": "2161270",
    "end": "2167360"
  },
  {
    "start": "2162000",
    "end": "2204000"
  },
  {
    "text": "get started and to be honest like first of all you have to have it is running then you need to get your",
    "start": "2167360",
    "end": "2173010"
  },
  {
    "text": "app mesh running and then you have to have some demo application that you want to play with and even if you go to open",
    "start": "2173010",
    "end": "2179340"
  },
  {
    "text": "source way it's sometimes not so easy it's well-documented we have our version well-documented so if you go to AWS",
    "start": "2179340",
    "end": "2186990"
  },
  {
    "text": "documentation you see how to get app mesh started for ec2 for ECS for eks but",
    "start": "2186990",
    "end": "2193770"
  },
  {
    "text": "now since last week actually we have a shorter like a shortcut that helps a lot",
    "start": "2193770",
    "end": "2198930"
  },
  {
    "text": "if you just want to play with it a little bit and that's what I want to show you here introduce you here so the",
    "start": "2198930",
    "end": "2204510"
  },
  {
    "start": "2204000",
    "end": "2269000"
  },
  {
    "text": "first step is you have to have a kubernetes cluster and to get a kubernetes cluster up and running I",
    "start": "2204510",
    "end": "2210900"
  },
  {
    "text": "think the easiest way is to use a open source tool it's called eks control so",
    "start": "2210900",
    "end": "2216450"
  },
  {
    "text": "it's a great tool and basically what you do is you say eks control create cluster",
    "start": "2216450",
    "end": "2221580"
  },
  {
    "text": "if you want a standard kubernetes cluster that's all you need to do eks control create cluster and then what it",
    "start": "2221580",
    "end": "2228420"
  },
  {
    "text": "does it picks a funny name for your cluster so my cluster now is have as the",
    "start": "2228420",
    "end": "2233610"
  },
  {
    "text": "name like beautiful paintings if you don't want the beautiful paintings name for your cluster you specify the name",
    "start": "2233610",
    "end": "2240150"
  },
  {
    "text": "and then what you can do is you can specify app mesh access that already",
    "start": "2240150",
    "end": "2245370"
  },
  {
    "text": "allows app mesh to access the resources that that you wanted to talk to that",
    "start": "2245370",
    "end": "2252090"
  },
  {
    "text": "makes your life much easier so that's the single line that you need to create a kubernetes cluster assuming that you",
    "start": "2252090",
    "end": "2260460"
  },
  {
    "text": "have eks control installed but this is really nicely documented and this takes you a couple of minutes to install it",
    "start": "2260460",
    "end": "2266970"
  },
  {
    "text": "and any wait until the cluster is provisioned and then you have two kubernetes duster and now this is the",
    "start": "2266970",
    "end": "2273330"
  },
  {
    "start": "2269000",
    "end": "2399000"
  },
  {
    "text": "shortcut did I want you to show you this is like the secret tip that I recommend to use if you do it for the very first",
    "start": "2273330",
    "end": "2279000"
  },
  {
    "text": "time if you don't care about details if you don't care about I am rolls if you don't care about",
    "start": "2279000",
    "end": "2286020"
  },
  {
    "text": "single deployments and setting up everything so there is something called helm helm is like yum or",
    "start": "2286020",
    "end": "2293579"
  },
  {
    "text": "or any Linux packet manager that you might know we distribute the slides by",
    "start": "2293579",
    "end": "2299429"
  },
  {
    "text": "the way I have them on speaker dank and AWS will sent them to you so you don't",
    "start": "2299429",
    "end": "2305789"
  },
  {
    "text": "have to take photos but you're welcome to take photos so helm is like a package manager and with one single helm install",
    "start": "2305789",
    "end": "2313380"
  },
  {
    "text": "you can install the whole AWS app mesh which brings you the invoice proxy and",
    "start": "2313380",
    "end": "2319199"
  },
  {
    "text": "it actually brings you a lot of other side cards that allow you to talk to other systems that some of them I",
    "start": "2319199",
    "end": "2325679"
  },
  {
    "text": "already mentioned and some of them are kind of new and different AWS armed services so one single in",
    "start": "2325679",
    "end": "2331979"
  },
  {
    "text": "installation brings you the world of app mesh and another single installation installs a demo application now for this",
    "start": "2331979",
    "end": "2340079"
  },
  {
    "text": "demo application I want you to have a quick look here what we do here so we create a namespace",
    "start": "2340079",
    "end": "2346079"
  },
  {
    "text": "it's a namespace which is called app mesh which is the namespace for the app mesh demo and then we do something that",
    "start": "2346079",
    "end": "2352919"
  },
  {
    "text": "is very kubernetes like now we label this namespace so it's just a tag that",
    "start": "2352919",
    "end": "2358859"
  },
  {
    "text": "we put in the namespace so we label the namespace app mesh and we give it a label which basically says in chapter",
    "start": "2358859",
    "end": "2365759"
  },
  {
    "text": "where poke enabled which means the namespace is labeled with this injector we're put enabled and basically if app",
    "start": "2365759",
    "end": "2373380"
  },
  {
    "text": "mesh is running it will create these proxies the site casts for everything",
    "start": "2373380",
    "end": "2378899"
  },
  {
    "text": "that is running in this in this name space so this is how you turn on this",
    "start": "2378899",
    "end": "2384380"
  },
  {
    "text": "proxy Auto injection if you want on how you get your proxies in the pot that's the magic line you have a namespace you",
    "start": "2384380",
    "end": "2391349"
  },
  {
    "text": "name label the namespace because of the label that is detected by the app mesh you will have to the proxies inject it",
    "start": "2391349",
    "end": "2398189"
  },
  {
    "text": "and then if we have two O's proxies injected we can go back to what we have",
    "start": "2398189",
    "end": "2404849"
  },
  {
    "text": "already in a double in AWS and we can",
    "start": "2404849",
    "end": "2410399"
  },
  {
    "text": "use AWS x-ray to get more detailed information about the services that we have deployed the service we deploy with",
    "start": "2410399",
    "end": "2417689"
  },
  {
    "text": "the hound chart is a very simple service it's basically a load generator that you see here that is talking to nginx so",
    "start": "2417689",
    "end": "2424319"
  },
  {
    "text": "it's very simple load generator talking to nginx you see the services you see the invocation times on the",
    "start": "2424319",
    "end": "2431640"
  },
  {
    "text": "right hand side here you also see the distribution of the times you need to to",
    "start": "2431640",
    "end": "2437730"
  },
  {
    "text": "call these services with the milliseconds and the percentages x-ray",
    "start": "2437730",
    "end": "2443550"
  },
  {
    "start": "2443000",
    "end": "2479000"
  },
  {
    "text": "also gives you traces so you see the an execution that looks a bit like those",
    "start": "2443550",
    "end": "2449220"
  },
  {
    "text": "flame graphs if you turn it around and color it red it's it's a flame graph so you see the load generator and you see",
    "start": "2449220",
    "end": "2456450"
  },
  {
    "text": "the nginx and you see which part of the total execution time is is done by which",
    "start": "2456450",
    "end": "2462540"
  },
  {
    "text": "service so let's standard AWS x-ray that you could also use for AWS lambda if you",
    "start": "2462540",
    "end": "2468300"
  },
  {
    "text": "want so that's the integration we give you and all of this you already have in the help chart that you deployed you see",
    "start": "2468300",
    "end": "2475470"
  },
  {
    "text": "response time percentiles if you're interested in this and it also takes you",
    "start": "2475470",
    "end": "2480930"
  },
  {
    "start": "2479000",
    "end": "2564000"
  },
  {
    "text": "to the open source world because we are also deployed prometheus which is the time series open source database and",
    "start": "2480930",
    "end": "2487710"
  },
  {
    "text": "qivana so at the same time you have graph on ax and Prometheus running and in graph on ax you get the at mesh",
    "start": "2487710",
    "end": "2494190"
  },
  {
    "text": "overview that basically tells you the the top five services regarding requests",
    "start": "2494190",
    "end": "2500910"
  },
  {
    "text": "and the worst five services regarding requests regarding americo's regarding",
    "start": "2500910",
    "end": "2506910"
  },
  {
    "text": "HTTP 400 and 500 so you have both so for a long time people always ask me should",
    "start": "2506910",
    "end": "2513390"
  },
  {
    "text": "we go this CNC F open source path or should we go to a dub and use the AWS services in this little demo we show you",
    "start": "2513390",
    "end": "2520740"
  },
  {
    "text": "that you can use both no it's up to you to choose and that's what we want to do basically we want to give you choice and",
    "start": "2520740",
    "end": "2526980"
  },
  {
    "text": "you should pick the best one typically most customers will go for the AWS services because they provide better",
    "start": "2526980",
    "end": "2533400"
  },
  {
    "text": "integration and and we actively support them but that's another option that you have with graph on Angra fana is very",
    "start": "2533400",
    "end": "2539579"
  },
  {
    "text": "popular i used it myself in many projects it's fantastic if you do load testing and you can just go back like",
    "start": "2539579",
    "end": "2546750"
  },
  {
    "text": "one week in time and see what happened like one week in time regarding CPU memory your database your threads",
    "start": "2546750",
    "end": "2552960"
  },
  {
    "text": "whatever so that's a really nice demo that I think and that's the second view where you see",
    "start": "2552960",
    "end": "2560240"
  },
  {
    "text": "the services like the load balancer and the nginx if you do app mesh I told you",
    "start": "2560240",
    "end": "2568010"
  },
  {
    "start": "2564000",
    "end": "2616000"
  },
  {
    "text": "it's a it's a different service mesh it's not is still that's important to take away because we need to make it",
    "start": "2568010",
    "end": "2575869"
  },
  {
    "text": "work across all the compute services we have different constructs so there's a construct that is called mesh then we",
    "start": "2575869",
    "end": "2582350"
  },
  {
    "text": "have virtual nodes they front-end the real service implementation we have routers and routes and then we have",
    "start": "2582350",
    "end": "2589040"
  },
  {
    "text": "virtual services which have virtual service names to talk to the services so these are the constructs that you will",
    "start": "2589040",
    "end": "2595130"
  },
  {
    "text": "find in the ml files and then you run your services you auto in check the proxies and as I said with those two ham",
    "start": "2595130",
    "end": "2602810"
  },
  {
    "text": "charts that are written by a colleague of mine so all the credit for this goes to poor medics that's very important to",
    "start": "2602810",
    "end": "2609080"
  },
  {
    "text": "mention the people that do the hard work you can you can play with this and see",
    "start": "2609080",
    "end": "2614240"
  },
  {
    "text": "if you like Rafa now more x-ray more this is the console the AWS console",
    "start": "2614240",
    "end": "2621320"
  },
  {
    "start": "2616000",
    "end": "2625000"
  },
  {
    "text": "where you see the virtual services the routers and the nodes and the roadmap is",
    "start": "2621320",
    "end": "2626780"
  },
  {
    "start": "2625000",
    "end": "2642000"
  },
  {
    "text": "public it's on github super nice if you want us to change something you can open",
    "start": "2626780",
    "end": "2633320"
  },
  {
    "text": "an issue and tell us what you want to be changed and we look at this and this is I already told you this is how we",
    "start": "2633320",
    "end": "2639770"
  },
  {
    "text": "prioritize the change requests we have partners some of them are here you",
    "start": "2639770",
    "end": "2645560"
  },
  {
    "start": "2642000",
    "end": "2649000"
  },
  {
    "text": "should go and see them and visit their booth and with this I want to conclude",
    "start": "2645560",
    "end": "2651470"
  },
  {
    "start": "2649000",
    "end": "2816000"
  },
  {
    "text": "that's the summary architect wisely that sounds like a very generic advice but",
    "start": "2651470",
    "end": "2657710"
  },
  {
    "text": "that was the first slide remember when I told you it's your responsibility to decide if you want to go server less if",
    "start": "2657710",
    "end": "2664640"
  },
  {
    "text": "you want containers ECS eks nobody else can take this away from you so take a",
    "start": "2664640",
    "end": "2670420"
  },
  {
    "text": "good decision make it based on facts and documented because otherwise you will",
    "start": "2670420",
    "end": "2675710"
  },
  {
    "text": "have somebody coming half a year later and questioning questioning it again so architect wisely that's the most",
    "start": "2675710",
    "end": "2681859"
  },
  {
    "text": "important thing running kubernetes is hard believe me if you don't believe me",
    "start": "2681859",
    "end": "2686930"
  },
  {
    "text": "try it yourself if you are this super tech company that has to kubernetes operational knowledge",
    "start": "2686930",
    "end": "2693150"
  },
  {
    "text": "and enough people you can do it I think for most other companies the better way to go is for a managed kubernetes",
    "start": "2693150",
    "end": "2699540"
  },
  {
    "text": "service like he cares or if you don't want kubernetes you go for ECS you can",
    "start": "2699540",
    "end": "2706620"
  },
  {
    "text": "ask that's the other message it's open source kubernetes if you want you can use it you can use it together with",
    "start": "2706620",
    "end": "2712470"
  },
  {
    "text": "other CN CF projects you can have eks with is to an NY that could be one way",
    "start": "2712470",
    "end": "2718560"
  },
  {
    "text": "to go a service smash that was what I was trying to explain in this",
    "start": "2718560",
    "end": "2724290"
  },
  {
    "text": "presentation is it extends kubernetes it's not something that was forgotten in kubernetes it's really an extra layer",
    "start": "2724290",
    "end": "2731160"
  },
  {
    "text": "that gives you extra quality of service for your network communication",
    "start": "2731160",
    "end": "2736410"
  },
  {
    "text": "it adds observability you've seen the screenshots I have it here running life but we have a very spotty Wi-Fi that's",
    "start": "2736410",
    "end": "2742710"
  },
  {
    "text": "why I was not showing you life I'm happy to show you a graph on running live for X ray running life I'm later for a",
    "start": "2742710",
    "end": "2749280"
  },
  {
    "text": "coffee and remember it also works for ec2 so the service mash is not something",
    "start": "2749280",
    "end": "2755400"
  },
  {
    "text": "that you can do after you started with micro services you can also have a service mash first you see to talk to",
    "start": "2755400",
    "end": "2762090"
  },
  {
    "text": "your monolith and then slowly cut out pieces from your monolid move them to micro services and make the service mesh",
    "start": "2762090",
    "end": "2769020"
  },
  {
    "text": "basically redirect you from the monolid to the micro service implementation so it's a way to get into micro services",
    "start": "2769020",
    "end": "2776610"
  },
  {
    "text": "and it's not that you have to have micro services first and then go to the service mesh that was one of the core",
    "start": "2776610",
    "end": "2784050"
  },
  {
    "text": "things we wanted to have when we provided the service mesh across different compute options and it's free",
    "start": "2784050",
    "end": "2792300"
  },
  {
    "text": "it works across different compute options there's no reason why you should not try today if you're not a super",
    "start": "2792300",
    "end": "2799740"
  },
  {
    "text": "expert in eks and service meshes take those two ham charts I'm super happy that we have them it's not how you will",
    "start": "2799740",
    "end": "2806850"
  },
  {
    "text": "install your production but it's something that gets you up and running you play with Pro fauna you play with",
    "start": "2806850",
    "end": "2812280"
  },
  {
    "text": "x-ray you see the differences and this is how you start with this I want to",
    "start": "2812280",
    "end": "2817920"
  },
  {
    "start": "2816000",
    "end": "2841000"
  },
  {
    "text": "conclude I've done another presentation talking more about SEO and envoi",
    "start": "2817920",
    "end": "2823390"
  },
  {
    "text": "eks it was last year at the code conference in San Francisco so if you want to check this it's a little bit",
    "start": "2823390",
    "end": "2829690"
  },
  {
    "text": "more details about the open source component that was before we announced at mesh but it's still valid today",
    "start": "2829690",
    "end": "2835510"
  },
  {
    "text": "because some people want to stay on this open source path and that's issue in envoi and with this I want to say thank",
    "start": "2835510",
    "end": "2842920"
  },
  {
    "start": "2841000",
    "end": "3104000"
  },
  {
    "text": "you for being here if you have any questions I'll be around there might be",
    "start": "2842920",
    "end": "2848140"
  },
  {
    "text": "questions from twitch I guess you will read them to me so your talk was pretty",
    "start": "2848140",
    "end": "2854710"
  },
  {
    "text": "popular you were getting a lot of questions already yes it's a popular topic now so first question would it",
    "start": "2854710",
    "end": "2864280"
  },
  {
    "text": "ever be alright tried together would it ever be possible",
    "start": "2864280",
    "end": "2870100"
  },
  {
    "text": "to use the alpha version of resources in aks in future sorry I didn't get the",
    "start": "2870100",
    "end": "2875170"
  },
  {
    "text": "first one would it ever be possible to use the alpha version of resources in",
    "start": "2875170",
    "end": "2880180"
  },
  {
    "text": "eks in the future which version",
    "start": "2880180",
    "end": "2885839"
  },
  {
    "text": "the alpha version of resources in eks in the future I don't really know what's",
    "start": "2899900",
    "end": "2907760"
  },
  {
    "text": "meant with this question I think we have to defer this in and answer later okay",
    "start": "2907760",
    "end": "2913160"
  },
  {
    "text": "pleasure of humans if you're still watching the stream feel free to add clarifying details for that yeah I'll",
    "start": "2913160",
    "end": "2918920"
  },
  {
    "text": "move on to the next question which is also from a pleasure of humans he's asking can we add or change something to",
    "start": "2918920",
    "end": "2926750"
  },
  {
    "text": "the master configuration of eks for instance I would like to audit API calls",
    "start": "2926750",
    "end": "2933610"
  },
  {
    "text": "it depends so basically the backend is you know it's run by us that's the whole",
    "start": "2933610",
    "end": "2939230"
  },
  {
    "text": "point and there are some degrees of freedom it actually took a while for us to make it possible that you can auto",
    "start": "2939230",
    "end": "2947300"
  },
  {
    "text": "inject those proxies that we need for the service mesh and for this we had",
    "start": "2947300",
    "end": "2953510"
  },
  {
    "text": "basically had we had to solve the security questions now to allow you to do this so it's not everything is",
    "start": "2953510",
    "end": "2959690"
  },
  {
    "text": "possible that you can theoretically do in kubernetes if you run it yourself but what we try to do is give you",
    "start": "2959690",
    "end": "2966650"
  },
  {
    "text": "everything that you need to do while we are still in control of running the service of running this managed back-end",
    "start": "2966650",
    "end": "2973880"
  },
  {
    "text": "and then again what I already told you applies if you need something and we",
    "start": "2973880",
    "end": "2979130"
  },
  {
    "text": "don't know about it we can't implement it so the road mat is the road map is public go to github open an issue and",
    "start": "2979130",
    "end": "2985780"
  },
  {
    "text": "explain us why what do you need and why you needed and we carefully look into this and prioritize it sure all right",
    "start": "2985780",
    "end": "2993860"
  },
  {
    "text": "next question sure Joseph Ireland and he was really involved in your talk okay he has a couple of questions first one is",
    "start": "2993860",
    "end": "3000760"
  },
  {
    "text": "there a private AWS helm like there's a private AWS docker registry ECR at",
    "start": "3000760",
    "end": "3007450"
  },
  {
    "text": "private AWS docker registry is there a private AWS helm like the private AWS",
    "start": "3007450",
    "end": "3014980"
  },
  {
    "text": "registry not that I know of at the moment but again it's something that you",
    "start": "3014980",
    "end": "3022420"
  },
  {
    "text": "can you can tell us and let us know if this is important for you so we have ECR which is the private",
    "start": "3022420",
    "end": "3030339"
  },
  {
    "text": "container registry that's what he is mentioning but for helm I think we don't have one right now yeah",
    "start": "3030339",
    "end": "3037089"
  },
  {
    "text": "and I think there was one last question but it was a again I'm not sure if the",
    "start": "3037089",
    "end": "3042710"
  },
  {
    "text": "context will be enough Joseph Ireland is asking if there are plans to support a hybrid solution for",
    "start": "3042710",
    "end": "3049670"
  },
  {
    "text": "both on premises and in cloud worker notes that's a very difficult question I",
    "start": "3049670",
    "end": "3056210"
  },
  {
    "text": "think this is something that you should discuss with your solution architect it",
    "start": "3056210",
    "end": "3061609"
  },
  {
    "text": "depends on the networking it depends on many things and it's the question is really what is your use case why are you",
    "start": "3061609",
    "end": "3067849"
  },
  {
    "text": "trying to do this and what we see a lot is that eks is used for people that want",
    "start": "3067849",
    "end": "3074480"
  },
  {
    "text": "to migrate away from on premises and then they they migrate to eks this is",
    "start": "3074480",
    "end": "3079819"
  },
  {
    "text": "why they want to stay on open source kubernetes and then it depends a lot on",
    "start": "3079819",
    "end": "3084829"
  },
  {
    "text": "what you're trying to achieve and technically I think it is possible the question is if this is really what you",
    "start": "3084829",
    "end": "3090200"
  },
  {
    "text": "want to do more questions that's the last question on twitch and we're running on so is it ok thank you again",
    "start": "3090200",
    "end": "3097790"
  },
  {
    "text": "for being here you've been a great audience talk to me later I'll be around for a chat thank you thank you bye",
    "start": "3097790",
    "end": "3105460"
  }
]