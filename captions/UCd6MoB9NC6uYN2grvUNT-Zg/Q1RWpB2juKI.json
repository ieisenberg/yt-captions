[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2300"
  },
  {
    "text": "hi my name is Amaya Kamara",
    "start": "2300",
    "end": "5160"
  },
  {
    "text": "I'm a senior Solutions Architect with a",
    "start": "5160",
    "end": "6930"
  },
  {
    "text": "double ace team and in this video I'm",
    "start": "6930",
    "end": "9030"
  },
  {
    "text": "going to show you how to create a dotnet",
    "start": "9030",
    "end": "10620"
  },
  {
    "text": "based service application to perform",
    "start": "10620",
    "end": "12599"
  },
  {
    "text": "sentiment analysis on a given text using",
    "start": "12599",
    "end": "15389"
  },
  {
    "text": "Amazon campaign service let's get",
    "start": "15389",
    "end": "17220"
  },
  {
    "text": "started",
    "start": "17220",
    "end": "18619"
  },
  {
    "text": "alright so this is the lambda function",
    "start": "18619",
    "end": "21210"
  },
  {
    "start": "19000",
    "end": "339000"
  },
  {
    "text": "that does the sentiment analysis let's",
    "start": "21210",
    "end": "24480"
  },
  {
    "text": "take a look at the new get back edges",
    "start": "24480",
    "end": "26689"
  },
  {
    "text": "here in addition to the default ones I'm",
    "start": "26689",
    "end": "29400"
  },
  {
    "text": "using Amazon comprehend and Amazon",
    "start": "29400",
    "end": "31650"
  },
  {
    "text": "simple notification service NuGet",
    "start": "31650",
    "end": "33090"
  },
  {
    "text": "packages other packages that you see",
    "start": "33090",
    "end": "36510"
  },
  {
    "text": "here come as default as part of the",
    "start": "36510",
    "end": "38489"
  },
  {
    "text": "service template the way you create a",
    "start": "38489",
    "end": "40290"
  },
  {
    "text": "service template is through file new",
    "start": "40290",
    "end": "42960"
  },
  {
    "text": "project and you can go to a SS lambda",
    "start": "42960",
    "end": "49410"
  },
  {
    "text": "and create a W server this application",
    "start": "49410",
    "end": "51989"
  },
  {
    "text": "you will get these templates when you",
    "start": "51989",
    "end": "53610"
  },
  {
    "text": "install a SS toolkit for visual studio",
    "start": "53610",
    "end": "57770"
  },
  {
    "text": "now let's take a look at the controller",
    "start": "57770",
    "end": "60059"
  },
  {
    "text": "class which has one single post method",
    "start": "60059",
    "end": "62969"
  },
  {
    "text": "that does all the job it has a input",
    "start": "62969",
    "end": "67740"
  },
  {
    "text": "parameter called common text which will",
    "start": "67740",
    "end": "70110"
  },
  {
    "text": "be passed through the request body we",
    "start": "70110",
    "end": "74729"
  },
  {
    "text": "are invoking the detect sentiment async",
    "start": "74729",
    "end": "77130"
  },
  {
    "text": "method on the Amazon comprehend client",
    "start": "77130",
    "end": "80670"
  },
  {
    "text": "class by passing in the detect sentiment",
    "start": "80670",
    "end": "83040"
  },
  {
    "text": "request object which has text and",
    "start": "83040",
    "end": "85710"
  },
  {
    "text": "language code as input parameters the",
    "start": "85710",
    "end": "87930"
  },
  {
    "text": "text has the common text that got passed",
    "start": "87930",
    "end": "90420"
  },
  {
    "text": "in through the request body and we are",
    "start": "90420",
    "end": "92790"
  },
  {
    "text": "here saying what language the textured",
    "start": "92790",
    "end": "96210"
  },
  {
    "text": "surface in this case we are saying",
    "start": "96210",
    "end": "97439"
  },
  {
    "text": "language code dot the yin which denotes",
    "start": "97439",
    "end": "99990"
  },
  {
    "text": "English language and once the sentiment",
    "start": "99990",
    "end": "102810"
  },
  {
    "text": "result comes back we are checking",
    "start": "102810",
    "end": "104670"
  },
  {
    "text": "whether the sentiment value is negative",
    "start": "104670",
    "end": "106590"
  },
  {
    "text": "the sentiment is negative we are",
    "start": "106590",
    "end": "109590"
  },
  {
    "text": "invoking the publish async method of the",
    "start": "109590",
    "end": "113040"
  },
  {
    "text": "Amazon simple notification service",
    "start": "113040",
    "end": "115020"
  },
  {
    "text": "client class by passing in the published",
    "start": "115020",
    "end": "117899"
  },
  {
    "text": "request object which has a subject this",
    "start": "117899",
    "end": "120689"
  },
  {
    "text": "subject will be displayed as in the",
    "start": "120689",
    "end": "124890"
  },
  {
    "text": "subject field if it's an email",
    "start": "124890",
    "end": "127220"
  },
  {
    "text": "subscriber and the message will be the",
    "start": "127220",
    "end": "130170"
  },
  {
    "text": "message body and target er n is the",
    "start": "130170",
    "end": "133980"
  },
  {
    "text": "name of the SNS service that the request",
    "start": "133980",
    "end": "139500"
  },
  {
    "text": "is supposed to talk to and that's it",
    "start": "139500",
    "end": "141720"
  },
  {
    "text": "that's the code now let's go to and the",
    "start": "141720",
    "end": "146040"
  },
  {
    "text": "server list our template file which is a",
    "start": "146040",
    "end": "148860"
  },
  {
    "text": "service application model template file",
    "start": "148860",
    "end": "151110"
  },
  {
    "text": "which we use to create the resources and",
    "start": "151110",
    "end": "154080"
  },
  {
    "text": "and we use to deploy at the function",
    "start": "154080",
    "end": "157040"
  },
  {
    "text": "here I want to emphasize on four",
    "start": "157040",
    "end": "161250"
  },
  {
    "text": "important important parts of the of the",
    "start": "161250",
    "end": "166590"
  },
  {
    "text": "template one of the parameters",
    "start": "166590",
    "end": "167760"
  },
  {
    "text": "conditions resources and outputs",
    "start": "167760",
    "end": "169940"
  },
  {
    "text": "parameters takes in this in this",
    "start": "169940",
    "end": "173160"
  },
  {
    "text": "template I have added should create SMS",
    "start": "173160",
    "end": "175950"
  },
  {
    "text": "topic as a parameter this is a type",
    "start": "175950",
    "end": "178590"
  },
  {
    "text": "string and it allows true or false as",
    "start": "178590",
    "end": "181049"
  },
  {
    "text": "possible values and this I'm using to to",
    "start": "181049",
    "end": "185879"
  },
  {
    "text": "confirm whether the user wants the SNS",
    "start": "185879",
    "end": "189569"
  },
  {
    "text": "topic to be created or not this is being",
    "start": "189569",
    "end": "192180"
  },
  {
    "text": "done by using this condition the",
    "start": "192180",
    "end": "194579"
  },
  {
    "text": "conditions I am to rename this great SMS",
    "start": "194579",
    "end": "198299"
  },
  {
    "text": "topic and we are using an intrinsic",
    "start": "198299",
    "end": "200130"
  },
  {
    "text": "function called equals and you are",
    "start": "200130",
    "end": "202049"
  },
  {
    "text": "checking whether the input value should",
    "start": "202049",
    "end": "204060"
  },
  {
    "text": "create SNS drop topic is true or not if",
    "start": "204060",
    "end": "206730"
  },
  {
    "text": "it's true the condition evaluates to",
    "start": "206730",
    "end": "209900"
  },
  {
    "text": "evaluates to true and under resources we",
    "start": "209900",
    "end": "214319"
  },
  {
    "text": "are creating two resources one is the",
    "start": "214319",
    "end": "216500"
  },
  {
    "text": "function itself which is the lambda",
    "start": "216500",
    "end": "218639"
  },
  {
    "text": "function and we are saying this is a",
    "start": "218639",
    "end": "221609"
  },
  {
    "text": "serverless aw a service function and we",
    "start": "221609",
    "end": "226440"
  },
  {
    "text": "are mentioning what the handler is and",
    "start": "226440",
    "end": "228389"
  },
  {
    "text": "we're giving the runtime type and these",
    "start": "228389",
    "end": "230970"
  },
  {
    "text": "are all default values have not changed",
    "start": "230970",
    "end": "232530"
  },
  {
    "text": "anything the memory size and timeout and",
    "start": "232530",
    "end": "234630"
  },
  {
    "text": "you also need to mention the resource",
    "start": "234630",
    "end": "237299"
  },
  {
    "text": "sorry the I am role the service function",
    "start": "237299",
    "end": "241079"
  },
  {
    "text": "needs to assume it can be invoked",
    "start": "241079",
    "end": "244980"
  },
  {
    "text": "through an API and this is the path that",
    "start": "244980",
    "end": "248459"
  },
  {
    "text": "the invocation is allowed and the only",
    "start": "248459",
    "end": "250560"
  },
  {
    "text": "method that is allowed is post and we",
    "start": "250560",
    "end": "251970"
  },
  {
    "text": "only have one post method let's say if",
    "start": "251970",
    "end": "254010"
  },
  {
    "text": "the if there is a get request the",
    "start": "254010",
    "end": "256199"
  },
  {
    "text": "request will be rejected by the API",
    "start": "256199",
    "end": "258570"
  },
  {
    "text": "gateway",
    "start": "258570",
    "end": "259519"
  },
  {
    "text": "and then the other resource that we",
    "start": "259519",
    "end": "262310"
  },
  {
    "text": "create is obviously the SNS topic and",
    "start": "262310",
    "end": "264259"
  },
  {
    "text": "what's interesting here is we have a",
    "start": "264259",
    "end": "266599"
  },
  {
    "text": "condition map to this the same condition",
    "start": "266599",
    "end": "268580"
  },
  {
    "text": "that we had earlier so this map to",
    "start": "268580",
    "end": "271250"
  },
  {
    "text": "create s and s topic condition this SNS",
    "start": "271250",
    "end": "274009"
  },
  {
    "text": "topic this resource will only be created",
    "start": "274009",
    "end": "276530"
  },
  {
    "text": "if this condition evaluates to true if I",
    "start": "276530",
    "end": "279610"
  },
  {
    "text": "if when I deploy this if I give the",
    "start": "279610",
    "end": "282470"
  },
  {
    "text": "value as false the the SNS topic will",
    "start": "282470",
    "end": "285949"
  },
  {
    "text": "not be created so here other properties",
    "start": "285949",
    "end": "288740"
  },
  {
    "text": "is we also give the topic name as comma",
    "start": "288740",
    "end": "291919"
  },
  {
    "text": "notifier this is the name of the topic",
    "start": "291919",
    "end": "294169"
  },
  {
    "text": "and the display name is this calm note",
    "start": "294169",
    "end": "297199"
  },
  {
    "text": "if this is there is a restriction of",
    "start": "297199",
    "end": "299319"
  },
  {
    "text": "maximum length so we have I've made it",
    "start": "299319",
    "end": "303470"
  },
  {
    "text": "shorter so this is the subject at the",
    "start": "303470",
    "end": "305930"
  },
  {
    "text": "sender name that you will see if that is",
    "start": "305930",
    "end": "307580"
  },
  {
    "text": "an email subscriber the last is the",
    "start": "307580",
    "end": "310849"
  },
  {
    "text": "outputs this will return the name of the",
    "start": "310849",
    "end": "312710"
  },
  {
    "text": "application that was created the way",
    "start": "312710",
    "end": "314870"
  },
  {
    "text": "you'd apply this is go to solution",
    "start": "314870",
    "end": "316520"
  },
  {
    "text": "Explorer right click publish to WS",
    "start": "316520",
    "end": "320030"
  },
  {
    "text": "lambda and click on next and here you",
    "start": "320030",
    "end": "323419"
  },
  {
    "text": "can see that the input is showing up",
    "start": "323419",
    "end": "327620"
  },
  {
    "text": "here in this template and I can say",
    "start": "327620",
    "end": "329240"
  },
  {
    "text": "either true or false I'm going to say",
    "start": "329240",
    "end": "330620"
  },
  {
    "text": "false because I already have the SMS",
    "start": "330620",
    "end": "332780"
  },
  {
    "text": "topic created I click on publish and",
    "start": "332780",
    "end": "334870"
  },
  {
    "text": "that's it the application is on its way",
    "start": "334870",
    "end": "337370"
  },
  {
    "text": "to deployment all right so we are on the",
    "start": "337370",
    "end": "341120"
  },
  {
    "start": "339000",
    "end": "513000"
  },
  {
    "text": "AWS console and we are inside the",
    "start": "341120",
    "end": "343130"
  },
  {
    "text": "comments APA function that we just",
    "start": "343130",
    "end": "344570"
  },
  {
    "text": "deployed the comments APA function has",
    "start": "344570",
    "end": "347960"
  },
  {
    "text": "an API gateway configured so the API can",
    "start": "347960",
    "end": "351259"
  },
  {
    "text": "be the function can be invoked through",
    "start": "351259",
    "end": "352849"
  },
  {
    "text": "an API gateway as you can see the method",
    "start": "352849",
    "end": "356719"
  },
  {
    "text": "is paused that's the only type of method",
    "start": "356719",
    "end": "359360"
  },
  {
    "text": "that is allowed there is no",
    "start": "359360",
    "end": "360530"
  },
  {
    "text": "authorization here and also the URL is",
    "start": "360530",
    "end": "363319"
  },
  {
    "text": "slash API slash comments I also want to",
    "start": "363319",
    "end": "367159"
  },
  {
    "text": "so show before I get into the API",
    "start": "367159",
    "end": "368780"
  },
  {
    "text": "gateway I also want to show how the SNS",
    "start": "368780",
    "end": "371930"
  },
  {
    "text": "our simple notification service is also",
    "start": "371930",
    "end": "374360"
  },
  {
    "text": "set up other services when you type SNS",
    "start": "374360",
    "end": "377840"
  },
  {
    "text": "[Music]",
    "start": "377840",
    "end": "382389"
  },
  {
    "text": "clicking topics and the topics you can",
    "start": "382389",
    "end": "385189"
  },
  {
    "text": "see that comment notifier is already",
    "start": "385189",
    "end": "388429"
  },
  {
    "text": "created I'm going to click on this and",
    "start": "388429",
    "end": "390919"
  },
  {
    "text": "you can see that there is a subscription",
    "start": "390919",
    "end": "393889"
  },
  {
    "text": "to my personal email address you can",
    "start": "393889",
    "end": "396379"
  },
  {
    "text": "create a new subscription by clicking on",
    "start": "396379",
    "end": "398929"
  },
  {
    "text": "create subscription and mentioning the",
    "start": "398929",
    "end": "402379"
  },
  {
    "text": "selecting the protocol that you want in",
    "start": "402379",
    "end": "403999"
  },
  {
    "text": "this case it would be email and then",
    "start": "403999",
    "end": "405739"
  },
  {
    "text": "typing in an email address that you want",
    "start": "405739",
    "end": "407179"
  },
  {
    "text": "the email to go to let's get back to the",
    "start": "407179",
    "end": "412909"
  },
  {
    "text": "API and see the API gateway I'm clicking",
    "start": "412909",
    "end": "422599"
  },
  {
    "text": "on the API gateway the API gateway",
    "start": "422599",
    "end": "428779"
  },
  {
    "text": "interface will show all the integrations",
    "start": "428779",
    "end": "433339"
  },
  {
    "text": "between the a gateway and the lambda",
    "start": "433339",
    "end": "434779"
  },
  {
    "text": "function you can see that it's a pretty",
    "start": "434779",
    "end": "437419"
  },
  {
    "text": "straightforward a lambda proxy type and",
    "start": "437419",
    "end": "439549"
  },
  {
    "text": "here you can see the actual lambda",
    "start": "439549",
    "end": "441409"
  },
  {
    "text": "function that will be invoked as well",
    "start": "441409",
    "end": "442639"
  },
  {
    "text": "and the response is pretty",
    "start": "442639",
    "end": "443809"
  },
  {
    "text": "straightforward we are not doing any",
    "start": "443809",
    "end": "445249"
  },
  {
    "text": "transformation here so one of the cool",
    "start": "445249",
    "end": "448009"
  },
  {
    "text": "things that I really like about API",
    "start": "448009",
    "end": "449389"
  },
  {
    "text": "gateway is the fact that you can just",
    "start": "449389",
    "end": "450769"
  },
  {
    "text": "say API right on the AWS console to do",
    "start": "450769",
    "end": "453979"
  },
  {
    "text": "that I'm going to click click on test",
    "start": "453979",
    "end": "455749"
  },
  {
    "text": "I'm going to paste the content type and",
    "start": "455749",
    "end": "459219"
  },
  {
    "text": "also say comment text equal to just I'm",
    "start": "459219",
    "end": "468860"
  },
  {
    "text": "using this sentence so that it creates a",
    "start": "468860",
    "end": "472519"
  },
  {
    "text": "negative sentiment and you can click on",
    "start": "472519",
    "end": "474979"
  },
  {
    "text": "test here and there you go you have a",
    "start": "474979",
    "end": "478159"
  },
  {
    "text": "HTTP 200 response that means there is",
    "start": "478159",
    "end": "480469"
  },
  {
    "text": "post has been successful you actually",
    "start": "480469",
    "end": "482659"
  },
  {
    "text": "you have the actual just response from",
    "start": "482659",
    "end": "484369"
  },
  {
    "text": "the from the lambda function as well",
    "start": "484369",
    "end": "486889"
  },
  {
    "text": "alright so now I can already see my",
    "start": "486889",
    "end": "489619"
  },
  {
    "text": "email coming in with a notification on",
    "start": "489619",
    "end": "493459"
  },
  {
    "text": "the browser clicking on it I can I'm",
    "start": "493459",
    "end": "496129"
  },
  {
    "text": "clicking on the email and see the same",
    "start": "496129",
    "end": "498139"
  },
  {
    "text": "text that I just posted great so in this",
    "start": "498139",
    "end": "501619"
  },
  {
    "text": "video we covered how to use dotnet to",
    "start": "501619",
    "end": "504289"
  },
  {
    "text": "perform sentiment analysis on a text",
    "start": "504289",
    "end": "506149"
  },
  {
    "text": "through Amazon comprehend service hope",
    "start": "506149",
    "end": "508159"
  },
  {
    "text": "you found it useful thanks for watching",
    "start": "508159",
    "end": "510370"
  },
  {
    "text": "[Music]",
    "start": "510370",
    "end": "514960"
  }
]