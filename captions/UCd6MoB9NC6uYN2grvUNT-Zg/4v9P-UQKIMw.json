[
  {
    "text": "hello i'm yuri de cavani solutions",
    "start": "320",
    "end": "2399"
  },
  {
    "text": "architect with",
    "start": "2399",
    "end": "3280"
  },
  {
    "text": "aws today i will show how you can",
    "start": "3280",
    "end": "6240"
  },
  {
    "text": "implement",
    "start": "6240",
    "end": "6879"
  },
  {
    "text": "attribute based access control model in",
    "start": "6879",
    "end": "9599"
  },
  {
    "text": "aws",
    "start": "9599",
    "end": "10719"
  },
  {
    "text": "using identity federation with octa",
    "start": "10719",
    "end": "13040"
  },
  {
    "text": "universal directory",
    "start": "13040",
    "end": "14400"
  },
  {
    "text": "and aws sso to understand the benefits",
    "start": "14400",
    "end": "18240"
  },
  {
    "text": "of the attribute based access control or",
    "start": "18240",
    "end": "20560"
  },
  {
    "text": "abac for short",
    "start": "20560",
    "end": "21920"
  },
  {
    "text": "let's first take a look how it compares",
    "start": "21920",
    "end": "24480"
  },
  {
    "text": "with a role-based access model",
    "start": "24480",
    "end": "26720"
  },
  {
    "text": "that many companies use today in the",
    "start": "26720",
    "end": "29599"
  },
  {
    "text": "role-based",
    "start": "29599",
    "end": "30320"
  },
  {
    "text": "access control model or arbuck you are",
    "start": "30320",
    "end": "33360"
  },
  {
    "text": "assigning specific permissions to the",
    "start": "33360",
    "end": "35360"
  },
  {
    "text": "users and groups at the role level",
    "start": "35360",
    "end": "38000"
  },
  {
    "text": "which allow all the users with the same",
    "start": "38000",
    "end": "40239"
  },
  {
    "text": "job role",
    "start": "40239",
    "end": "41040"
  },
  {
    "text": "to have exactly the same level of access",
    "start": "41040",
    "end": "45120"
  },
  {
    "text": "as your organization grows you may want",
    "start": "45120",
    "end": "47600"
  },
  {
    "text": "to have more flexibility in your access",
    "start": "47600",
    "end": "49920"
  },
  {
    "text": "model",
    "start": "49920",
    "end": "50480"
  },
  {
    "text": "than the arbuck typically allows for",
    "start": "50480",
    "end": "53280"
  },
  {
    "text": "example",
    "start": "53280",
    "end": "54239"
  },
  {
    "text": "you may want the devops engineers having",
    "start": "54239",
    "end": "57039"
  },
  {
    "text": "a project-based",
    "start": "57039",
    "end": "58000"
  },
  {
    "text": "access where an engineer from one team",
    "start": "58000",
    "end": "61199"
  },
  {
    "text": "can access only day project specific",
    "start": "61199",
    "end": "63920"
  },
  {
    "text": "resources",
    "start": "63920",
    "end": "64720"
  },
  {
    "text": "but denied access to the resources on",
    "start": "64720",
    "end": "67280"
  },
  {
    "text": "another project",
    "start": "67280",
    "end": "68880"
  },
  {
    "text": "while role-based access control can",
    "start": "68880",
    "end": "70880"
  },
  {
    "text": "support such scenario",
    "start": "70880",
    "end": "72720"
  },
  {
    "text": "it often leads to creating and",
    "start": "72720",
    "end": "74720"
  },
  {
    "text": "maintaining multiple versions of",
    "start": "74720",
    "end": "76640"
  },
  {
    "text": "essentially",
    "start": "76640",
    "end": "77360"
  },
  {
    "text": "almost identical cookie-cutter security",
    "start": "77360",
    "end": "80400"
  },
  {
    "text": "policies for different teams",
    "start": "80400",
    "end": "82400"
  },
  {
    "text": "with only slight modifications in",
    "start": "82400",
    "end": "85439"
  },
  {
    "text": "addition to",
    "start": "85439",
    "end": "86000"
  },
  {
    "text": "that changing access level in role-based",
    "start": "86000",
    "end": "89040"
  },
  {
    "text": "model",
    "start": "89040",
    "end": "89520"
  },
  {
    "text": "usually involves two personas an",
    "start": "89520",
    "end": "92479"
  },
  {
    "text": "identity administrator",
    "start": "92479",
    "end": "94320"
  },
  {
    "text": "that manages the user identities data on",
    "start": "94320",
    "end": "96960"
  },
  {
    "text": "your identity provider's side",
    "start": "96960",
    "end": "99200"
  },
  {
    "text": "or user directory and a policy",
    "start": "99200",
    "end": "102079"
  },
  {
    "text": "administrator",
    "start": "102079",
    "end": "103360"
  },
  {
    "text": "who manages access permissions on the",
    "start": "103360",
    "end": "105840"
  },
  {
    "text": "aws",
    "start": "105840",
    "end": "106720"
  },
  {
    "text": "side so for every policy change you have",
    "start": "106720",
    "end": "110079"
  },
  {
    "text": "two different touch points",
    "start": "110079",
    "end": "112880"
  },
  {
    "text": "you are now going to see how abac can",
    "start": "112880",
    "end": "115360"
  },
  {
    "text": "help you address these challenges",
    "start": "115360",
    "end": "117759"
  },
  {
    "text": "first in a buck model you define",
    "start": "117759",
    "end": "120000"
  },
  {
    "text": "permissions based on users attributes",
    "start": "120000",
    "end": "122719"
  },
  {
    "text": "not based on roles this means that with",
    "start": "122719",
    "end": "126079"
  },
  {
    "text": "a bachelor policies have conditions",
    "start": "126079",
    "end": "128319"
  },
  {
    "text": "that compare the value of users",
    "start": "128319",
    "end": "130080"
  },
  {
    "text": "attributes such as steam",
    "start": "130080",
    "end": "132000"
  },
  {
    "text": "project with the value of the same",
    "start": "132000",
    "end": "134080"
  },
  {
    "text": "attributes on the resources",
    "start": "134080",
    "end": "135920"
  },
  {
    "text": "user is accessing the user attributes in",
    "start": "135920",
    "end": "139840"
  },
  {
    "text": "this approach",
    "start": "139840",
    "end": "140879"
  },
  {
    "text": "serve as variables that you can change",
    "start": "140879",
    "end": "143360"
  },
  {
    "text": "at any time",
    "start": "143360",
    "end": "144319"
  },
  {
    "text": "in your identity store so you can now",
    "start": "144319",
    "end": "147200"
  },
  {
    "text": "give people in different",
    "start": "147200",
    "end": "148560"
  },
  {
    "text": "roles access to the same resources much",
    "start": "148560",
    "end": "151440"
  },
  {
    "text": "faster",
    "start": "151440",
    "end": "152239"
  },
  {
    "text": "on as needed basis second",
    "start": "152239",
    "end": "155440"
  },
  {
    "text": "the abac approach also helps you to",
    "start": "155440",
    "end": "158000"
  },
  {
    "text": "scale your permission system",
    "start": "158000",
    "end": "159840"
  },
  {
    "text": "as you no longer need to update or",
    "start": "159840",
    "end": "162080"
  },
  {
    "text": "create a new policies when you add new",
    "start": "162080",
    "end": "164560"
  },
  {
    "text": "resources or new people to the project",
    "start": "164560",
    "end": "167840"
  },
  {
    "text": "instead you assign attributes to your",
    "start": "167840",
    "end": "170879"
  },
  {
    "text": "users in your identity store",
    "start": "170879",
    "end": "173519"
  },
  {
    "text": "and then ensure that resources have the",
    "start": "173519",
    "end": "176640"
  },
  {
    "text": "matching attributes",
    "start": "176640",
    "end": "178720"
  },
  {
    "text": "you can change the behavior of your",
    "start": "178720",
    "end": "180480"
  },
  {
    "text": "access controls",
    "start": "180480",
    "end": "181760"
  },
  {
    "text": "without having to change the control",
    "start": "181760",
    "end": "184000"
  },
  {
    "text": "itself",
    "start": "184000",
    "end": "185200"
  },
  {
    "text": "you can also manage fewer policies with",
    "start": "185200",
    "end": "187840"
  },
  {
    "text": "less administration time",
    "start": "187840",
    "end": "189760"
  },
  {
    "text": "since now your system is more flexible",
    "start": "189760",
    "end": "192319"
  },
  {
    "text": "and you not long a need to create a",
    "start": "192319",
    "end": "194400"
  },
  {
    "text": "special policies per each group of",
    "start": "194400",
    "end": "196560"
  },
  {
    "text": "resources",
    "start": "196560",
    "end": "197599"
  },
  {
    "text": "or each job role you can use the same",
    "start": "197599",
    "end": "200720"
  },
  {
    "text": "policy",
    "start": "200720",
    "end": "201440"
  },
  {
    "text": "applied to many resources or resource",
    "start": "201440",
    "end": "203519"
  },
  {
    "text": "group and it will be decoupled from the",
    "start": "203519",
    "end": "205840"
  },
  {
    "text": "user's job roles",
    "start": "205840",
    "end": "208239"
  },
  {
    "text": "and today aws sso enables you to",
    "start": "208239",
    "end": "211599"
  },
  {
    "text": "implement",
    "start": "211599",
    "end": "212239"
  },
  {
    "text": "attribute based access control",
    "start": "212239",
    "end": "214400"
  },
  {
    "text": "benefiting from managing your access to",
    "start": "214400",
    "end": "216799"
  },
  {
    "text": "aws accounts and services",
    "start": "216799",
    "end": "219200"
  },
  {
    "text": "centrally with aws sso",
    "start": "219200",
    "end": "222319"
  },
  {
    "text": "let's see this in action i'll start from",
    "start": "222319",
    "end": "224720"
  },
  {
    "text": "the user's experience accessing aws",
    "start": "224720",
    "end": "227200"
  },
  {
    "text": "accounts using octa identity",
    "start": "227200",
    "end": "229519"
  },
  {
    "text": "and aws sso with attribute based access",
    "start": "229519",
    "end": "233280"
  },
  {
    "text": "control",
    "start": "233280",
    "end": "234480"
  },
  {
    "text": "in my demo i will be using octa",
    "start": "234480",
    "end": "236720"
  },
  {
    "text": "universal directory as my identity",
    "start": "236720",
    "end": "239040"
  },
  {
    "text": "source",
    "start": "239040",
    "end": "239519"
  },
  {
    "text": "for aws sso let's imagine",
    "start": "239519",
    "end": "243120"
  },
  {
    "text": "alice is the developer building a new",
    "start": "243120",
    "end": "245519"
  },
  {
    "text": "application",
    "start": "245519",
    "end": "246319"
  },
  {
    "text": "in aws which is part of the project",
    "start": "246319",
    "end": "249599"
  },
  {
    "text": "orange alice needs to store a username",
    "start": "249599",
    "end": "252480"
  },
  {
    "text": "and password",
    "start": "252480",
    "end": "253439"
  },
  {
    "text": "which application will use to access an",
    "start": "253439",
    "end": "256160"
  },
  {
    "text": "amazon aurora relational database",
    "start": "256160",
    "end": "258400"
  },
  {
    "text": "service for mysql",
    "start": "258400",
    "end": "259919"
  },
  {
    "text": "instance she uses aws secrets manager to",
    "start": "259919",
    "end": "263759"
  },
  {
    "text": "store her keys",
    "start": "263759",
    "end": "265520"
  },
  {
    "text": "alice navigates to her octa idp and",
    "start": "265520",
    "end": "269040"
  },
  {
    "text": "signs in with her octa credentials",
    "start": "269040",
    "end": "272479"
  },
  {
    "text": "here she has aws sso application",
    "start": "272479",
    "end": "275360"
  },
  {
    "text": "configured by her octa admin",
    "start": "275360",
    "end": "277680"
  },
  {
    "text": "so alice clicks on it and gets",
    "start": "277680",
    "end": "279919"
  },
  {
    "text": "redirected to the aws sso",
    "start": "279919",
    "end": "282960"
  },
  {
    "text": "where she can see the list of aws",
    "start": "282960",
    "end": "285520"
  },
  {
    "text": "accounts and roles",
    "start": "285520",
    "end": "286800"
  },
  {
    "text": "assigned to her by the aws sso admin",
    "start": "286800",
    "end": "290800"
  },
  {
    "text": "alice chooses her development account",
    "start": "290800",
    "end": "293040"
  },
  {
    "text": "and gets redirected to the aws",
    "start": "293040",
    "end": "295680"
  },
  {
    "text": "management console she goes to the",
    "start": "295680",
    "end": "298160"
  },
  {
    "text": "secrets manager service",
    "start": "298160",
    "end": "299919"
  },
  {
    "text": "then to her secrets first she wants to",
    "start": "299919",
    "end": "303199"
  },
  {
    "text": "quickly take a look at another secret",
    "start": "303199",
    "end": "305440"
  },
  {
    "text": "she created a couple of days ago",
    "start": "305440",
    "end": "307759"
  },
  {
    "text": "for another application that is also",
    "start": "307759",
    "end": "311199"
  },
  {
    "text": "part of the project orange she clicks on",
    "start": "311199",
    "end": "314479"
  },
  {
    "text": "that secret",
    "start": "314479",
    "end": "315280"
  },
  {
    "text": "and checks its rotation configuration",
    "start": "315280",
    "end": "318320"
  },
  {
    "text": "now she sees that her colleague bob who",
    "start": "318320",
    "end": "321440"
  },
  {
    "text": "works",
    "start": "321440",
    "end": "322000"
  },
  {
    "text": "on another project called project green",
    "start": "322000",
    "end": "324800"
  },
  {
    "text": "also created a secret here",
    "start": "324800",
    "end": "327120"
  },
  {
    "text": "and she wants to view its rotation",
    "start": "327120",
    "end": "329440"
  },
  {
    "text": "configuration",
    "start": "329440",
    "end": "330720"
  },
  {
    "text": "when alice clicks on the bob's secrets",
    "start": "330720",
    "end": "333520"
  },
  {
    "text": "her",
    "start": "333520",
    "end": "333840"
  },
  {
    "text": "access is denied because she is not",
    "start": "333840",
    "end": "336240"
  },
  {
    "text": "assigned to the project green",
    "start": "336240",
    "end": "338080"
  },
  {
    "text": "by her auto administrator now",
    "start": "338080",
    "end": "341520"
  },
  {
    "text": "alice goes ahead and starts creating a",
    "start": "341520",
    "end": "344160"
  },
  {
    "text": "new secret",
    "start": "344160",
    "end": "345759"
  },
  {
    "text": "she chooses credentials for rds secret",
    "start": "345759",
    "end": "348479"
  },
  {
    "text": "type",
    "start": "348479",
    "end": "349280"
  },
  {
    "text": "enters her initial username and password",
    "start": "349280",
    "end": "352320"
  },
  {
    "text": "leaves default encryption key unchanged",
    "start": "352320",
    "end": "355360"
  },
  {
    "text": "and chooses the aurora rds instance she",
    "start": "355360",
    "end": "358479"
  },
  {
    "text": "is planning to",
    "start": "358479",
    "end": "359440"
  },
  {
    "text": "access from her application on the next",
    "start": "359440",
    "end": "362560"
  },
  {
    "text": "page",
    "start": "362560",
    "end": "363120"
  },
  {
    "text": "alice enters the secret's name skips the",
    "start": "363120",
    "end": "366319"
  },
  {
    "text": "tags here",
    "start": "366319",
    "end": "367440"
  },
  {
    "text": "and clicks next she uses the same lambda",
    "start": "367440",
    "end": "371199"
  },
  {
    "text": "function which her",
    "start": "371199",
    "end": "372240"
  },
  {
    "text": "other secret uses to rotate this secret",
    "start": "372240",
    "end": "375440"
  },
  {
    "text": "clicks next and then store note",
    "start": "375440",
    "end": "379039"
  },
  {
    "text": "that alice is getting an error while",
    "start": "379039",
    "end": "381360"
  },
  {
    "text": "trying to store the secret",
    "start": "381360",
    "end": "383120"
  },
  {
    "text": "since she forgot to tag and to name her",
    "start": "383120",
    "end": "385440"
  },
  {
    "text": "secret according to",
    "start": "385440",
    "end": "386960"
  },
  {
    "text": "her organization tagging policy",
    "start": "386960",
    "end": "390479"
  },
  {
    "text": "to correct that alice goes back adds",
    "start": "390479",
    "end": "393280"
  },
  {
    "text": "orange dash prefix to the secret's name",
    "start": "393280",
    "end": "396400"
  },
  {
    "text": "then adds two tags that are enforced by",
    "start": "396400",
    "end": "399520"
  },
  {
    "text": "the aws",
    "start": "399520",
    "end": "400560"
  },
  {
    "text": "i am she has to add the tag name with",
    "start": "400560",
    "end": "403919"
  },
  {
    "text": "the secret's name",
    "start": "403919",
    "end": "405600"
  },
  {
    "text": "and the project tag orange she is",
    "start": "405600",
    "end": "408240"
  },
  {
    "text": "working on now",
    "start": "408240",
    "end": "410479"
  },
  {
    "text": "if she violates these rules by mistake",
    "start": "410479",
    "end": "413840"
  },
  {
    "text": "she is not able to store a new secret",
    "start": "413840",
    "end": "417199"
  },
  {
    "text": "after making these changes ellie stores",
    "start": "417199",
    "end": "420000"
  },
  {
    "text": "the secret successfully",
    "start": "420000",
    "end": "422000"
  },
  {
    "text": "to see a different example let's now",
    "start": "422000",
    "end": "424319"
  },
  {
    "text": "sign in to octa idp",
    "start": "424319",
    "end": "426319"
  },
  {
    "text": "as bob who is working on the project",
    "start": "426319",
    "end": "428639"
  },
  {
    "text": "green",
    "start": "428639",
    "end": "429840"
  },
  {
    "text": "bob navigates to the octa idp signs in",
    "start": "429840",
    "end": "432960"
  },
  {
    "text": "with his octa credentials",
    "start": "432960",
    "end": "435039"
  },
  {
    "text": "chooses aws sso application and",
    "start": "435039",
    "end": "438080"
  },
  {
    "text": "signs into the same development account",
    "start": "438080",
    "end": "440639"
  },
  {
    "text": "with the same",
    "start": "440639",
    "end": "441599"
  },
  {
    "text": "aws developers role alice was using",
    "start": "441599",
    "end": "445599"
  },
  {
    "text": "he goes to the aws secrets manager and",
    "start": "445599",
    "end": "448479"
  },
  {
    "text": "looks at his secrets here",
    "start": "448479",
    "end": "451280"
  },
  {
    "text": "you can see bob can access his secret",
    "start": "451280",
    "end": "454000"
  },
  {
    "text": "why",
    "start": "454000",
    "end": "454319"
  },
  {
    "text": "alice couldn't now let's take a look",
    "start": "454319",
    "end": "457360"
  },
  {
    "text": "at this scenario from an administrator",
    "start": "457360",
    "end": "459599"
  },
  {
    "text": "perspective",
    "start": "459599",
    "end": "461440"
  },
  {
    "text": "as aws sso admin i go to my aws",
    "start": "461440",
    "end": "465280"
  },
  {
    "text": "sso management console then to the",
    "start": "465280",
    "end": "467680"
  },
  {
    "text": "groups menu and you can see",
    "start": "467680",
    "end": "469520"
  },
  {
    "text": "that both alice and bob belong to the",
    "start": "469520",
    "end": "472479"
  },
  {
    "text": "same aws developers group",
    "start": "472479",
    "end": "475599"
  },
  {
    "text": "alice's and bob's identities including",
    "start": "475599",
    "end": "478720"
  },
  {
    "text": "group membership",
    "start": "478720",
    "end": "479919"
  },
  {
    "text": "are synchronized from my octa idp using",
    "start": "479919",
    "end": "483360"
  },
  {
    "text": "system",
    "start": "483360",
    "end": "483919"
  },
  {
    "text": "cross domain identity management or",
    "start": "483919",
    "end": "486400"
  },
  {
    "text": "scheme",
    "start": "486400",
    "end": "488160"
  },
  {
    "text": "and when i go to the accounts menu and",
    "start": "488160",
    "end": "490720"
  },
  {
    "text": "choose the development",
    "start": "490720",
    "end": "492080"
  },
  {
    "text": "account i see that it has aws developers",
    "start": "492080",
    "end": "495759"
  },
  {
    "text": "permission set provisioned here",
    "start": "495759",
    "end": "498160"
  },
  {
    "text": "and assigned to my aws developers octa",
    "start": "498160",
    "end": "501599"
  },
  {
    "text": "group",
    "start": "501599",
    "end": "502479"
  },
  {
    "text": "when alice and bob are signing into the",
    "start": "502479",
    "end": "505120"
  },
  {
    "text": "development account",
    "start": "505120",
    "end": "506639"
  },
  {
    "text": "they both assume the same aws im role",
    "start": "506639",
    "end": "510319"
  },
  {
    "text": "although as we've seen in the demo they",
    "start": "510319",
    "end": "512959"
  },
  {
    "text": "can only access the resources that",
    "start": "512959",
    "end": "515039"
  },
  {
    "text": "belong to their",
    "start": "515039",
    "end": "516000"
  },
  {
    "text": "projects to understand how it works",
    "start": "516000",
    "end": "519200"
  },
  {
    "text": "let's talk about implementing attribute",
    "start": "519200",
    "end": "521440"
  },
  {
    "text": "based access control in",
    "start": "521440",
    "end": "523039"
  },
  {
    "text": "aws in aws attributes are called",
    "start": "523039",
    "end": "526800"
  },
  {
    "text": "tags so you use them among other things",
    "start": "526800",
    "end": "529920"
  },
  {
    "text": "to",
    "start": "529920",
    "end": "530240"
  },
  {
    "text": "implement abac you tag your resources",
    "start": "530240",
    "end": "532640"
  },
  {
    "text": "with a specific tag values",
    "start": "532640",
    "end": "534560"
  },
  {
    "text": "and you build your access policies using",
    "start": "534560",
    "end": "536560"
  },
  {
    "text": "conditions",
    "start": "536560",
    "end": "537600"
  },
  {
    "text": "where you compare the tag value on the",
    "start": "537600",
    "end": "539920"
  },
  {
    "text": "principal",
    "start": "539920",
    "end": "540880"
  },
  {
    "text": "imuser role or im session",
    "start": "540880",
    "end": "544080"
  },
  {
    "text": "to the tag value on the resource this",
    "start": "544080",
    "end": "546320"
  },
  {
    "text": "principle is",
    "start": "546320",
    "end": "547440"
  },
  {
    "text": "accessing when aws iam checks",
    "start": "547440",
    "end": "551040"
  },
  {
    "text": "permissions for this specific",
    "start": "551040",
    "end": "552640"
  },
  {
    "text": "action it evaluates these policy",
    "start": "552640",
    "end": "555040"
  },
  {
    "text": "conditions",
    "start": "555040",
    "end": "556000"
  },
  {
    "text": "and allows ordinary's access accordingly",
    "start": "556000",
    "end": "559279"
  },
  {
    "text": "the i am role that both alice and bob",
    "start": "559279",
    "end": "562080"
  },
  {
    "text": "assumed",
    "start": "562080",
    "end": "563120"
  },
  {
    "text": "while accessing the developers account",
    "start": "563120",
    "end": "565760"
  },
  {
    "text": "has been created by",
    "start": "565760",
    "end": "567279"
  },
  {
    "text": "the aws sso from the aws developers",
    "start": "567279",
    "end": "571120"
  },
  {
    "text": "permission set",
    "start": "571120",
    "end": "572399"
  },
  {
    "text": "now let's take a look at this permission",
    "start": "572399",
    "end": "574720"
  },
  {
    "text": "set",
    "start": "574720",
    "end": "575440"
  },
  {
    "text": "you can see that it allows access to aws",
    "start": "575440",
    "end": "578240"
  },
  {
    "text": "secrets manager's resources",
    "start": "578240",
    "end": "580320"
  },
  {
    "text": "if the research stack project value on",
    "start": "580320",
    "end": "582480"
  },
  {
    "text": "the resource",
    "start": "582480",
    "end": "583519"
  },
  {
    "text": "is equal to the principal tag value it",
    "start": "583519",
    "end": "586320"
  },
  {
    "text": "also enforces tagging and naming policy",
    "start": "586320",
    "end": "589360"
  },
  {
    "text": "and this is why in the demo alice was",
    "start": "589360",
    "end": "592080"
  },
  {
    "text": "required to tag her new resources",
    "start": "592080",
    "end": "594560"
  },
  {
    "text": "using the project name orange she's",
    "start": "594560",
    "end": "596800"
  },
  {
    "text": "working on",
    "start": "596800",
    "end": "597839"
  },
  {
    "text": "based on what we've seen so far you",
    "start": "597839",
    "end": "600000"
  },
  {
    "text": "probably can guess",
    "start": "600000",
    "end": "601200"
  },
  {
    "text": "that in our demo alice and bob have",
    "start": "601200",
    "end": "604320"
  },
  {
    "text": "different",
    "start": "604320",
    "end": "604880"
  },
  {
    "text": "principal tag project values and that",
    "start": "604880",
    "end": "607360"
  },
  {
    "text": "guess would be correct",
    "start": "607360",
    "end": "608959"
  },
  {
    "text": "in general while user uses temporary aws",
    "start": "608959",
    "end": "612320"
  },
  {
    "text": "credentials",
    "start": "612320",
    "end": "613440"
  },
  {
    "text": "assuming awsim role on logging",
    "start": "613440",
    "end": "616480"
  },
  {
    "text": "in with federated identity the value of",
    "start": "616480",
    "end": "619279"
  },
  {
    "text": "the principal tag may come",
    "start": "619279",
    "end": "621120"
  },
  {
    "text": "from an iem roll when your i am roll",
    "start": "621120",
    "end": "624240"
  },
  {
    "text": "tagged with a static tag value",
    "start": "624240",
    "end": "626800"
  },
  {
    "text": "a session tag when tag passed when you",
    "start": "626800",
    "end": "629519"
  },
  {
    "text": "assume role",
    "start": "629519",
    "end": "630480"
  },
  {
    "text": "or transitive session tag when the tag",
    "start": "630480",
    "end": "633200"
  },
  {
    "text": "is inherited from the previous session",
    "start": "633200",
    "end": "635600"
  },
  {
    "text": "in the role chain and today you can",
    "start": "635600",
    "end": "638240"
  },
  {
    "text": "configure aws",
    "start": "638240",
    "end": "639440"
  },
  {
    "text": "sso to pass users attributes to aws sts",
    "start": "639440",
    "end": "643920"
  },
  {
    "text": "when you are signing in to aws account",
    "start": "643920",
    "end": "646800"
  },
  {
    "text": "with",
    "start": "646800",
    "end": "647120"
  },
  {
    "text": "aws management console or cli and these",
    "start": "647120",
    "end": "650560"
  },
  {
    "text": "attributes become session tags on that",
    "start": "650560",
    "end": "653040"
  },
  {
    "text": "im",
    "start": "653040",
    "end": "653600"
  },
  {
    "text": "session now let's take a look at my aws",
    "start": "653600",
    "end": "657680"
  },
  {
    "text": "sso identity source configuration",
    "start": "657680",
    "end": "661200"
  },
  {
    "text": "if i go to the settings tab you can see",
    "start": "661200",
    "end": "663839"
  },
  {
    "text": "that i configured octa universal",
    "start": "663839",
    "end": "665920"
  },
  {
    "text": "directory as my identity provider",
    "start": "665920",
    "end": "668640"
  },
  {
    "text": "using saml and schem i also enabled",
    "start": "668640",
    "end": "671920"
  },
  {
    "text": "attributes for access control here",
    "start": "671920",
    "end": "674959"
  },
  {
    "text": "when you use active directory or aws sso",
    "start": "674959",
    "end": "678320"
  },
  {
    "text": "native identity store as your identity",
    "start": "678320",
    "end": "680880"
  },
  {
    "text": "source",
    "start": "680880",
    "end": "681839"
  },
  {
    "text": "you can define your session tags by",
    "start": "681839",
    "end": "684079"
  },
  {
    "text": "clicking on the view details here",
    "start": "684079",
    "end": "686240"
  },
  {
    "text": "and entering the attribute name and",
    "start": "686240",
    "end": "689279"
  },
  {
    "text": "mapping it to the supported attributes",
    "start": "689279",
    "end": "692480"
  },
  {
    "text": "when you are using an external identity",
    "start": "692480",
    "end": "694880"
  },
  {
    "text": "provider as your aws sso identity source",
    "start": "694880",
    "end": "698560"
  },
  {
    "text": "you can also define your session tags",
    "start": "698560",
    "end": "701040"
  },
  {
    "text": "here",
    "start": "701040",
    "end": "701680"
  },
  {
    "text": "for example you can configure session",
    "start": "701680",
    "end": "703839"
  },
  {
    "text": "tag cost",
    "start": "703839",
    "end": "704880"
  },
  {
    "text": "center mapping it to the idp attribute",
    "start": "704880",
    "end": "707839"
  },
  {
    "text": "cost",
    "start": "707839",
    "end": "708399"
  },
  {
    "text": "center the value of this attribute",
    "start": "708399",
    "end": "711040"
  },
  {
    "text": "should be pushed by",
    "start": "711040",
    "end": "712160"
  },
  {
    "text": "scheme from the idp to aws sso",
    "start": "712160",
    "end": "716320"
  },
  {
    "text": "alternatively you can use aws sso",
    "start": "716320",
    "end": "719680"
  },
  {
    "text": "in pass through mode for abac then you",
    "start": "719680",
    "end": "722639"
  },
  {
    "text": "configure your identity provider",
    "start": "722639",
    "end": "724800"
  },
  {
    "text": "to pass its directory attributes for",
    "start": "724800",
    "end": "727360"
  },
  {
    "text": "access control",
    "start": "727360",
    "end": "728639"
  },
  {
    "text": "with the saml assertion to aws sso",
    "start": "728639",
    "end": "732399"
  },
  {
    "text": "if the saml assertion from the identity",
    "start": "732399",
    "end": "734800"
  },
  {
    "text": "provider contains",
    "start": "734800",
    "end": "736000"
  },
  {
    "text": "access control attributes then aws sso",
    "start": "736000",
    "end": "739519"
  },
  {
    "text": "will pass these attributes to aws",
    "start": "739519",
    "end": "742240"
  },
  {
    "text": "sts if you defined the same attribute",
    "start": "742240",
    "end": "746240"
  },
  {
    "text": "in aws sso taking it from the user's",
    "start": "746240",
    "end": "749839"
  },
  {
    "text": "attributes pushed by scheme",
    "start": "749839",
    "end": "751519"
  },
  {
    "text": "and your idp passes the same attribute",
    "start": "751519",
    "end": "754480"
  },
  {
    "text": "in the saml assertion",
    "start": "754480",
    "end": "756320"
  },
  {
    "text": "then aws sso mapping will take",
    "start": "756320",
    "end": "759040"
  },
  {
    "text": "precedence",
    "start": "759040",
    "end": "760560"
  },
  {
    "text": "as far as you can see i don't have any",
    "start": "760560",
    "end": "762880"
  },
  {
    "text": "attributes configured",
    "start": "762880",
    "end": "764160"
  },
  {
    "text": "in aws sso and if we look",
    "start": "764160",
    "end": "767279"
  },
  {
    "text": "at the alice's thumbnail assertion from",
    "start": "767279",
    "end": "769600"
  },
  {
    "text": "octa to the aws",
    "start": "769600",
    "end": "771200"
  },
  {
    "text": "sso we see that it contains project tag",
    "start": "771200",
    "end": "775120"
  },
  {
    "text": "orange so let's take a look at the octa",
    "start": "775120",
    "end": "778320"
  },
  {
    "text": "universal directory configuration",
    "start": "778320",
    "end": "781040"
  },
  {
    "text": "now as oct administrator i am going to",
    "start": "781040",
    "end": "784160"
  },
  {
    "text": "the octa admin portal then to the sso",
    "start": "784160",
    "end": "787120"
  },
  {
    "text": "application i configured here",
    "start": "787120",
    "end": "789600"
  },
  {
    "text": "i configured saml federation with aws",
    "start": "789600",
    "end": "792480"
  },
  {
    "text": "sso",
    "start": "792480",
    "end": "793519"
  },
  {
    "text": "as well as enable scheme provisioning",
    "start": "793519",
    "end": "797040"
  },
  {
    "text": "i have the aws sso application assigned",
    "start": "797040",
    "end": "800240"
  },
  {
    "text": "to the aws cloud access group",
    "start": "800240",
    "end": "803360"
  },
  {
    "text": "and also configured that it synchronizes",
    "start": "803360",
    "end": "806320"
  },
  {
    "text": "all my groups if the group name starts",
    "start": "806320",
    "end": "808800"
  },
  {
    "text": "with",
    "start": "808800",
    "end": "809200"
  },
  {
    "text": "aws now if i add",
    "start": "809200",
    "end": "812639"
  },
  {
    "text": "or delete users from these groups update",
    "start": "812639",
    "end": "815760"
  },
  {
    "text": "users attributes",
    "start": "815760",
    "end": "817200"
  },
  {
    "text": "for the users that belong to these",
    "start": "817200",
    "end": "819040"
  },
  {
    "text": "groups these changes will be",
    "start": "819040",
    "end": "820800"
  },
  {
    "text": "synchronized with",
    "start": "820800",
    "end": "822079"
  },
  {
    "text": "aws sso now let's take a look at the",
    "start": "822079",
    "end": "825760"
  },
  {
    "text": "alice's user profile",
    "start": "825760",
    "end": "828480"
  },
  {
    "text": "you can see that alice has a custom",
    "start": "828480",
    "end": "830959"
  },
  {
    "text": "attribute project set to orange",
    "start": "830959",
    "end": "833760"
  },
  {
    "text": "if i look at the bob's user profile the",
    "start": "833760",
    "end": "836880"
  },
  {
    "text": "project attribute value is green",
    "start": "836880",
    "end": "839600"
  },
  {
    "text": "i also can use a standard attribute here",
    "start": "839600",
    "end": "842480"
  },
  {
    "text": "such as group for example",
    "start": "842480",
    "end": "844880"
  },
  {
    "text": "now let's go back to the aws sso",
    "start": "844880",
    "end": "847440"
  },
  {
    "text": "application",
    "start": "847440",
    "end": "848480"
  },
  {
    "text": "then to the saml configuration this is",
    "start": "848480",
    "end": "851360"
  },
  {
    "text": "where i configured",
    "start": "851360",
    "end": "852720"
  },
  {
    "text": "a project attribute to be added to the",
    "start": "852720",
    "end": "855199"
  },
  {
    "text": "saml assertion",
    "start": "855199",
    "end": "856240"
  },
  {
    "text": "from the octa users directory",
    "start": "856240",
    "end": "859680"
  },
  {
    "text": "to complete this demo let's take a look",
    "start": "859680",
    "end": "862000"
  },
  {
    "text": "at the administrator tasks",
    "start": "862000",
    "end": "863920"
  },
  {
    "text": "managing users access on a daily basis",
    "start": "863920",
    "end": "867120"
  },
  {
    "text": "let's imagine my organization started a",
    "start": "867120",
    "end": "869440"
  },
  {
    "text": "new project called purple",
    "start": "869440",
    "end": "871519"
  },
  {
    "text": "and jenny is the new developer who just",
    "start": "871519",
    "end": "874000"
  },
  {
    "text": "joined the team",
    "start": "874000",
    "end": "875199"
  },
  {
    "text": "and is going to work on the project",
    "start": "875199",
    "end": "877279"
  },
  {
    "text": "purple",
    "start": "877279",
    "end": "878480"
  },
  {
    "text": "first i need to grant jenny access to",
    "start": "878480",
    "end": "880959"
  },
  {
    "text": "the aws",
    "start": "880959",
    "end": "881839"
  },
  {
    "text": "environment by adding janey to the cloud",
    "start": "881839",
    "end": "884560"
  },
  {
    "text": "aws",
    "start": "884560",
    "end": "885279"
  },
  {
    "text": "access group this essentially assigns",
    "start": "885279",
    "end": "888480"
  },
  {
    "text": "the aws",
    "start": "888480",
    "end": "889440"
  },
  {
    "text": "sso application to jenny in the",
    "start": "889440",
    "end": "891680"
  },
  {
    "text": "octa-user portal",
    "start": "891680",
    "end": "893600"
  },
  {
    "text": "next i add jenny to the aws developers",
    "start": "893600",
    "end": "896560"
  },
  {
    "text": "group",
    "start": "896560",
    "end": "897199"
  },
  {
    "text": "this group has been synchronized by",
    "start": "897199",
    "end": "899199"
  },
  {
    "text": "scheme with aws",
    "start": "899199",
    "end": "900880"
  },
  {
    "text": "sso so if i go to the aws sso",
    "start": "900880",
    "end": "905360"
  },
  {
    "text": "then to the users menu i can see user",
    "start": "905360",
    "end": "908560"
  },
  {
    "text": "jenny been pushed from",
    "start": "908560",
    "end": "910240"
  },
  {
    "text": "octa i go back to the octa admin portal",
    "start": "910240",
    "end": "914000"
  },
  {
    "text": "and edit jenny's user's profile in the",
    "start": "914000",
    "end": "916959"
  },
  {
    "text": "octa directory",
    "start": "916959",
    "end": "919040"
  },
  {
    "text": "i set the project attribute ingenius",
    "start": "919040",
    "end": "921519"
  },
  {
    "text": "profile to purple",
    "start": "921519",
    "end": "924639"
  },
  {
    "text": "now jenny signs in to octa user portal",
    "start": "924800",
    "end": "928480"
  },
  {
    "text": "and clicks on the aws sso application",
    "start": "928480",
    "end": "932399"
  },
  {
    "text": "she is redirected to the aws sso user",
    "start": "932399",
    "end": "935440"
  },
  {
    "text": "portal",
    "start": "935440",
    "end": "936000"
  },
  {
    "text": "and signs into the same development",
    "start": "936000",
    "end": "938320"
  },
  {
    "text": "account",
    "start": "938320",
    "end": "939120"
  },
  {
    "text": "that alice and bob are working on",
    "start": "939120",
    "end": "942240"
  },
  {
    "text": "jenny goes to the secrets manager and if",
    "start": "942240",
    "end": "945279"
  },
  {
    "text": "jenny tries",
    "start": "945279",
    "end": "946240"
  },
  {
    "text": "accessing alice's or bob's secrets she's",
    "start": "946240",
    "end": "949440"
  },
  {
    "text": "getting access denied",
    "start": "949440",
    "end": "951120"
  },
  {
    "text": "error but she can store",
    "start": "951120",
    "end": "954720"
  },
  {
    "text": "a new secret in the secrets manager",
    "start": "954720",
    "end": "957360"
  },
  {
    "text": "naming it and tagging",
    "start": "957360",
    "end": "958959"
  },
  {
    "text": "it appropriately with the project purple",
    "start": "958959",
    "end": "963360"
  },
  {
    "text": "as far as you can see it's very easy to",
    "start": "966639",
    "end": "969120"
  },
  {
    "text": "manage your workforce aws permissions at",
    "start": "969120",
    "end": "971920"
  },
  {
    "text": "scale",
    "start": "971920",
    "end": "972720"
  },
  {
    "text": "with octa universal directory and aws",
    "start": "972720",
    "end": "975759"
  },
  {
    "text": "sso using attribute based access control",
    "start": "975759",
    "end": "979040"
  },
  {
    "text": "model",
    "start": "979040",
    "end": "979920"
  },
  {
    "text": "thank you for watching it was yuri the",
    "start": "979920",
    "end": "981920"
  },
  {
    "text": "company with aws solutions architecture",
    "start": "981920",
    "end": "986639"
  }
]