[
  {
    "text": "Do you want to build an IoT app without compromising security?",
    "start": "0",
    "end": "3740"
  },
  {
    "text": "Sit back and get comfortable,\nas I show you the services you need ",
    "start": "3740",
    "end": "6980"
  },
  {
    "text": "to build an IoT app that's ready to scale.",
    "start": "6980",
    "end": "10242"
  },
  {
    "text": "Today's episode comes from Javier from Costa Rica.",
    "start": "17631",
    "end": "20752"
  },
  {
    "text": "When Javier isn't deep into all things tech, he's snowboarding,",
    "start": "20752",
    "end": "24199"
  },
  {
    "text": "or at least dreaming of it since there isn't any snow in Costa Rica.",
    "start": "24199",
    "end": "27953"
  },
  {
    "text": "Let's hear from Javier. ",
    "start": "27954",
    "end": "30323"
  },
  {
    "text": "Hello, I'm Javier, and I'm trying to make\nan application of a shopping list app ",
    "start": "30323",
    "end": "35174"
  },
  {
    "text": "that helps people with the process of shopping in person",
    "start": "35174",
    "end": "38268"
  },
  {
    "text": "from the moment they started their list at home to the moment they're in the store making the purchase.",
    "start": "38268",
    "end": "43123"
  },
  {
    "text": "It will have various functionalities, like a catalog of products, size,",
    "start": "43123",
    "end": "47814"
  },
  {
    "text": "user shopping lists, costs and budgets, and many more functionalities ",
    "start": "47814",
    "end": "51975"
  },
  {
    "text": "that will simplify the whole process for the user.",
    "start": "51975",
    "end": "54701"
  },
  {
    "text": "The app includes several features that will improve a lot of the \ncustomer's experience inside the store",
    "start": "54701",
    "end": "60975"
  },
  {
    "text": "with beacons, Bluetooth\nand Wi-Fi nodes.",
    "start": "60975",
    "end": "63815"
  },
  {
    "text": "The three main functionalities that we are looking with this technology are:",
    "start": "63815",
    "end": "67269"
  },
  {
    "text": "first, proximity and contextual marketing\nwhere we can send push notifications to users.",
    "start": "67269",
    "end": "73048"
  },
  {
    "text": "Second, indoor guidance where we can guide the user\nto get their products rapidly. inside the store.",
    "start": "73048",
    "end": "79075"
  },
  {
    "text": "And third, analytics where we can know\neverything the user did inside the store when they were there.",
    "start": "79075",
    "end": "84950"
  },
  {
    "text": "Javier wants these IoT devices to help grocery shoppers\nfind the items they need while inside a store.",
    "start": "84950",
    "end": "91300"
  },
  {
    "text": "I'll also show you where you can purchase hardware",
    "start": "91301",
    "end": "93842"
  },
  {
    "text": "that's designed for IoT applications and optimized for communication with the cloud.",
    "start": "93842",
    "end": "99774"
  },
  {
    "text": "Every IoT app needs the right hardware.",
    "start": "100842",
    "end": "103497"
  },
  {
    "text": "I suggest checking out the AWS Partner Device Catalog ",
    "start": "103497",
    "end": "107186"
  },
  {
    "text": "to find hardware that's designed for the cloud and has the features that you need.",
    "start": "107186",
    "end": "112019"
  },
  {
    "text": " Javier will search for Bluetooth Low Energy Beacons.",
    "start": "112019",
    "end": "115759"
  },
  {
    "text": "The device catalog has a search bar and filters that you can select.",
    "start": "115760",
    "end": "119458"
  },
  {
    "text": "Make sure you select FreeRTOS in the filter.",
    "start": "119458",
    "end": "122230"
  },
  {
    "text": "FreeRTOS is a real-time\noperating system for microcontrollers.",
    "start": "122230",
    "end": "126862"
  },
  {
    "text": " Amazon has built an extension to FreeRTOS,",
    "start": "126862",
    "end": "129936"
  },
  {
    "text": "which includes support\nfor AWS Services including AWS IoT Core.",
    "start": "129936",
    "end": "135715"
  },
  {
    "text": "IoT Core lets you connect IoT devices to the cloud without needing to deal with servers.",
    "start": "135715",
    "end": "141976"
  },
  {
    "text": "A key ingredient to building useful IoT apps",
    "start": "141977",
    "end": "145490"
  },
  {
    "text": "is their ability to ingest data from the environment and respond to that data.",
    "start": "145490",
    "end": "151125"
  },
  {
    "text": "This might require some information from the user through a web or mobile app ",
    "start": "151125",
    "end": "156114"
  },
  {
    "text": "in order to determine which metrics to look for in the actual environment.",
    "start": "156114",
    "end": "160868"
  },
  {
    "text": "Let's look at an example of this pattern in Javier's grocery app.",
    "start": "160868",
    "end": "165172"
  },
  {
    "text": " I'm assuming most people prepare their shopping lists when they are at home,",
    "start": "165813",
    "end": "169894"
  },
  {
    "text": "before they leave for the store.",
    "start": "169894",
    "end": "171805"
  },
  {
    "text": "The optimal route to navigate the grocery store based on the customer's shopping list",
    "start": "171805",
    "end": "177271"
  },
  {
    "text": "will appear as soon\nas the customer selects the grocery store",
    "start": "177271",
    "end": "181176"
  },
  {
    "text": "and saves their shopping list for that store.",
    "start": "181176",
    "end": "184594"
  },
  {
    "text": " The app will hit Amazon API Gateway,",
    "start": "184594",
    "end": "187771"
  },
  {
    "text": "which will forward the request to a DynamoDB endpoint to save the shopping list to a table. ",
    "start": "187772",
    "end": "194190"
  },
  {
    "text": "API Gateway makes it easy to develop and secure APIs for scale.",
    "start": "194190",
    "end": "199305"
  },
  {
    "text": "DynamoDB is a fast and flexible no-SQL database.",
    "start": "199305",
    "end": "203877"
  },
  {
    "text": "Every app needs secure user authentication and authorization.",
    "start": "203877",
    "end": "208742"
  },
  {
    "text": "Amazon Cognito lets you add user signup,\nsign in, and access control",
    "start": "208742",
    "end": "213487"
  },
  {
    "text": "to your web and mobile apps quickly and easily.",
    "start": "213487",
    "end": "216903"
  },
  {
    "text": "With Cognito, users can sign in using their existing Amazon, Facebook, Google or Apple credentials. ",
    "start": "216903",
    "end": "224681"
  },
  {
    "text": "You can use an Amazon Cognito user pool to control who can access your API in Amazon API Gateway. ",
    "start": "224681",
    "end": "232162"
  },
  {
    "text": "You'll use a feature of DynamoDB called DynamoDB Streams",
    "start": "233077",
    "end": "237341"
  },
  {
    "text": "which captures information about every modification to data in the table.",
    "start": "237341",
    "end": "243582"
  },
  {
    "text": "DynamoDB can be integrated with AWS Lambda,",
    "start": "243582",
    "end": "247239"
  },
  {
    "text": "so you can create triggers, which are pieces of code",
    "start": "247239",
    "end": "250225"
  },
  {
    "text": "that automatically respond to events in DynamoDB Streams.",
    "start": "250225",
    "end": "255147"
  },
  {
    "text": "For Javier's app,\nwhen the shopping list is updated,",
    "start": "255147",
    "end": "258295"
  },
  {
    "text": "a Lambda function will read data from the stream,",
    "start": "258296",
    "end": "262018"
  },
  {
    "text": "calculate the optimal route to shop for items in the grocery store,",
    "start": "262019",
    "end": "266719"
  },
  {
    "text": " and return the response to the frontend.",
    "start": "266719",
    "end": "269179"
  },
  {
    "text": " Lambda allows you to run code without managing servers.",
    "start": "270356",
    "end": "274097"
  },
  {
    "text": "For Javier's use case, he'll set up beacons at points along the grocery aisle,",
    "start": "274763",
    "end": "279297"
  },
  {
    "text": "each beacon will store its X and Y coordinates in the store ",
    "start": "279297",
    "end": "283283"
  },
  {
    "text": "and the items in the same radius of that beacon.",
    "start": "283283",
    "end": "286570"
  },
  {
    "text": "Now you can imagine that having to parse\nall of your devices' data that's coming in,",
    "start": "286571",
    "end": "291258"
  },
  {
    "text": "figuring out which data points are meaningful,\nand how to respond to them",
    "start": "291258",
    "end": "295733"
  },
  {
    "text": "can be painful if you don't have a good process in place.",
    "start": "295733",
    "end": "299739"
  },
  {
    "text": "This is where IoT Rules for MQTT Topics can help.",
    "start": "299739",
    "end": "304781"
  },
  {
    "text": "MQTT Topics identify IoT messages.",
    "start": "304781",
    "end": "308871"
  },
  {
    "text": "Rules for AWS IoT allow you to filter\nthrough the data coming in from the device.",
    "start": "308871",
    "end": "314842"
  },
  {
    "text": "IoT rule actions allow you to take action from the data in the message broker.",
    "start": "314842",
    "end": "320905"
  },
  {
    "text": "You're going to use these features a lot ",
    "start": "320905",
    "end": "323182"
  },
  {
    "text": "as a way for your devices to respond to the environment in real-time.",
    "start": "323182",
    "end": "328068"
  },
  {
    "text": "In Javier's app, he will have a Topic\nthat's for the items in the aisle.",
    "start": "328068",
    "end": "332621"
  },
  {
    "text": "The payload of this topic will contain a Boolean variable",
    "start": "332621",
    "end": "336124"
  },
  {
    "text": "to indicate if new items\nhave been added to the aisle.",
    "start": "336124",
    "end": "339443"
  },
  {
    "text": "If this variable is set to true, then the IoT rule action\nwill update the grocery store items in the database. ",
    "start": "339443",
    "end": "347203"
  },
  {
    "text": "I've left a link at the bottom of the video\non how to choose a database for your use case. ",
    "start": "347203",
    "end": "352423"
  },
  {
    "text": "No-SQL databases are a solid choice for IoT data,",
    "start": "352423",
    "end": "356262"
  },
  {
    "text": "so I'm going to recommend DynamoDB\nto receive the data from Javier's devices. ",
    "start": "356262",
    "end": "361359"
  },
  {
    "text": "Another feature you might be thinking about building for your app",
    "start": "362491",
    "end": "365791"
  },
  {
    "text": "is sending your customer a notification based on the data coming from the IoT device.",
    "start": "365857",
    "end": "371745"
  },
  {
    "text": "This is another use case\nwhere an IoT rule can trigger an IoT rule action",
    "start": "371745",
    "end": "377292"
  },
  {
    "text": "that sends a message over SNS.",
    "start": "377292",
    "end": "379987"
  },
  {
    "text": "Let's look at Javier's app as an example.",
    "start": "379987",
    "end": "382553"
  },
  {
    "text": "As a customer navigates the grocery store, the position of their phone",
    "start": "382553",
    "end": "387002"
  },
  {
    "text": "and the next item to pick up in the shopping list will be sent to the IoT devices in the grocery store.",
    "start": "387002",
    "end": "393305"
  },
  {
    "text": "The device will compare\nthe GPS position of the phone",
    "start": "394224",
    "end": "397587"
  },
  {
    "text": "to the radius where that item is located in the store.",
    "start": "397587",
    "end": "401714"
  },
  {
    "text": "If the customer passes the area where the item on the shopping list is located",
    "start": "401714",
    "end": "406182"
  },
  {
    "text": "without checking the item off,",
    "start": "406183",
    "end": "408816"
  },
  {
    "text": "then the IoT rule action will trigger Amazon Simple Notification Service.",
    "start": "408816",
    "end": "414266"
  },
  {
    "text": "Simple Notification Service is a fully managed\nmessaging service",
    "start": "415266",
    "end": "419245"
  },
  {
    "text": "that you can use to send messages\ndirectly to your users.",
    "start": "419245",
    "end": "423533"
  },
  {
    "text": "Now, before you run off to build your IoT app,",
    "start": "423533",
    "end": "426547"
  },
  {
    "text": "make sure you do these two things.",
    "start": "426547",
    "end": "429652"
  },
  {
    "text": "In IoT Core, make sure you use the IoT Device Registry.",
    "start": "429652",
    "end": "434378"
  },
  {
    "text": "This feature allows you to store information about all of your devices in JSON.",
    "start": "434378",
    "end": "439320"
  },
  {
    "text": "So in Javier's use case,\nthe Device Registry would contain metadata",
    "start": "439321",
    "end": "443273"
  },
  {
    "text": "like the grocery store ID, the X & Y location\nof the beacon in the grocery store,",
    "start": "443273",
    "end": "448662"
  },
  {
    "text": "and the foods that can be found in that aisle.",
    "start": "448662",
    "end": "452568"
  },
  {
    "text": "It's technically optional, but it'll make your life a lot easier",
    "start": "452568",
    "end": "456596"
  },
  {
    "text": "trying to find out if one of your devices needs to be fixed.",
    "start": "456596",
    "end": "460038"
  },
  {
    "text": "You'll thank me later.",
    "start": "460038",
    "end": "461577"
  },
  {
    "text": "The second is secure your devices.",
    "start": "462152",
    "end": "464946"
  },
  {
    "text": "I know it's tempting to say I don't have time for security,",
    "start": "464946",
    "end": "468076"
  },
  {
    "text": "I need to get my app out.",
    "start": "468076",
    "end": "469710"
  },
  {
    "text": "That my friend,\nis a mistake.",
    "start": "469710",
    "end": "472317"
  },
  {
    "text": "The good thing is there are security mechanisms built into IoT Core",
    "start": "472317",
    "end": "476955"
  },
  {
    "text": "You'll use X.509 certificates to provide IoT core with the ability",
    "start": "476955",
    "end": "481875"
  },
  {
    "text": "to authenticate and device connections.",
    "start": "481875",
    "end": "485212"
  },
  {
    "text": "Make sure you create\none unique certificate per device.",
    "start": "485212",
    "end": "489113"
  },
  {
    "text": "You can generate certificates in the AWS console, CLI or programmatically.",
    "start": "489113",
    "end": "494337"
  },
  {
    "text": " I know, I covered a lot.",
    "start": "494337",
    "end": "496394"
  },
  {
    "text": "I'll recap what I went over",
    "start": "496394",
    "end": "498611"
  },
  {
    "text": "Purchase hardware that's designed for the cloud in the AWS Partner Device Catalog.",
    "start": "498611",
    "end": "503744"
  },
  {
    "text": "Use AWS IoT Core to build your IoT app.",
    "start": "503744",
    "end": "507261"
  },
  {
    "text": "Create an IoT rule action to trigger an Amazon SNS push notification to your customers.",
    "start": "507261",
    "end": "513476"
  },
  {
    "text": "Need an API that connects to a No-SQL database?",
    "start": "513476",
    "end": "516689"
  },
  {
    "text": "Use Amazon API Gateway with Amazon Dynamo DB.",
    "start": "516689",
    "end": "520715"
  },
  {
    "text": "Use AWS Lambda to react to changes\nin DynamoDB in real time.",
    "start": "520715",
    "end": "525892"
  },
  {
    "text": "With an IoT app like this, you'll be bringing home the bacon in no time.",
    "start": "525892",
    "end": "530893"
  },
  {
    "text": "It doesn't matter when you start\nas long as you just get started.",
    "start": "530893",
    "end": "534563"
  },
  {
    "text": "Don't forget to check out the links that I've left for you below this video.",
    "start": "534563",
    "end": "538899"
  },
  {
    "text": "Thanks for hanging out with me, see you soon.",
    "start": "539184",
    "end": "541747"
  }
]