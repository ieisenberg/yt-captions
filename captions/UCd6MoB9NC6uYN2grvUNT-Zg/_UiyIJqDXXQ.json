[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "all of you are having an amazing time here a dream went I certainly am been here in 2016-2017 in",
    "start": "4549",
    "end": "11940"
  },
  {
    "text": "the audience and this year coming and presenting here super excited about it my name is Ramon chodri Raju I'm the",
    "start": "11940",
    "end": "19260"
  },
  {
    "text": "lead Digital Solutions Architect I'm from the London office in the UK and",
    "start": "19260",
    "end": "24420"
  },
  {
    "text": "I'll be joined by Santiago from AWS hi everyone Santiago Freitas on a principle Solutions Architect with AWS supporting",
    "start": "24420",
    "end": "32419"
  },
  {
    "text": "HSBC delighted to be here with Fremont and sharing some of the lessons learned",
    "start": "32420",
    "end": "37739"
  },
  {
    "text": "that we learned while building this platform to enable HSBC to better communicate with their customers so",
    "start": "37739",
    "end": "46370"
  },
  {
    "text": "what's the objective the objective is to provide a reference architecture to",
    "start": "46370",
    "end": "51930"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "actually build a distributed system leveraging serverless technologies and to share some of the lessons learnt that",
    "start": "51930",
    "end": "58859"
  },
  {
    "text": "we have been through so you don't you know following the same pitfalls but instead you make new ones come here and",
    "start": "58859",
    "end": "65338"
  },
  {
    "text": "present in the next reinvent yeah let's have a quick overview of the agenda and",
    "start": "65339",
    "end": "71549"
  },
  {
    "text": "I'll give a quick overview on how all HSBC is and we look at a business problem you're trying to solve and then",
    "start": "71549",
    "end": "77810"
  },
  {
    "text": "we look in the solution on how we are trying to solve a business problem and then as part of that the design",
    "start": "77810",
    "end": "84390"
  },
  {
    "text": "considerations and the lessons learnt and then have a quick look on the monitoring and scaling at scale and then",
    "start": "84390",
    "end": "90750"
  },
  {
    "text": "some of the key tip takeaways when you design such a solution so hit just bc",
    "start": "90750",
    "end": "96659"
  },
  {
    "text": "right it just bc is one of the world's leading international banks is the seventh largest in terms of assets and market",
    "start": "96659",
    "end": "103350"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "market capitalization and it's primarily split in four business units private",
    "start": "103350",
    "end": "110759"
  },
  {
    "text": "banking commercial banking investment banking and retail banking established",
    "start": "110759",
    "end": "116340"
  },
  {
    "text": "in March 1865 and been in operation for 153 years since so what does it actually",
    "start": "116340",
    "end": "124409"
  },
  {
    "text": "mean the size of the bank right it has its own complex problems we have multiple source systems and legacy",
    "start": "124409",
    "end": "130679"
  },
  {
    "text": "systems it's very similar to a lot of people from different countries they speak",
    "start": "130679",
    "end": "135810"
  },
  {
    "text": "different languages right you can't talk to each other or legacy systems are like that so it has a lot of",
    "start": "135810",
    "end": "141420"
  },
  {
    "text": "problems and geographically dispersed systems as well highly regulated industry the last I",
    "start": "141420",
    "end": "147599"
  },
  {
    "text": "know that we were interfacing with about 500 regulators that's massive right and today's world is all about",
    "start": "147599",
    "end": "154709"
  },
  {
    "text": "digital transformation and more and more digital which means there's immense pressure on our source systems and back-end systems so how do we actually",
    "start": "154709",
    "end": "161790"
  },
  {
    "text": "come out of that to give a better digital experience for people for tomorrow's world right so what we have",
    "start": "161790",
    "end": "168930"
  },
  {
    "start": "168000",
    "end": "168000"
  },
  {
    "text": "done is this whole problem initially we have created organization within HSBC called HSBC digital a couple of years",
    "start": "168930",
    "end": "174659"
  },
  {
    "text": "ago and with a view to simplified technology provide better innovation and",
    "start": "174659",
    "end": "181889"
  },
  {
    "text": "deliver better customer experiences and as part of our HSBC digital right we",
    "start": "181889",
    "end": "187799"
  },
  {
    "text": "have embraced AWS as a key partner and delivering our strategies what does it",
    "start": "187799",
    "end": "193530"
  },
  {
    "text": "actually give us it give gives us mainframe abstraction and we can deliver faster routes market driver a",
    "start": "193530",
    "end": "201840"
  },
  {
    "text": "personalization gives us increased agility security performance on all the",
    "start": "201840",
    "end": "207359"
  },
  {
    "text": "yarra out of clouds right so in HSBC so we embrace AWS ok all of this is well",
    "start": "207359",
    "end": "213720"
  },
  {
    "text": "and good but what's the business problem that we are trying to solve right so",
    "start": "213720",
    "end": "219299"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "traditionally within a banking industry if you see anyone moves actually using their apps they check their accounts",
    "start": "219299",
    "end": "226079"
  },
  {
    "text": "once or twice a day sorry a week you check it you're okay some people lazy",
    "start": "226079",
    "end": "231180"
  },
  {
    "text": "enough they check it once a month some people don't even care right yeah whatever is happening right today's",
    "start": "231180",
    "end": "237510"
  },
  {
    "text": "generation if you see that keep checking their accounts right and it's a constant",
    "start": "237510",
    "end": "243599"
  },
  {
    "text": "habit and it's not only with a banking well I'm pretty sure look so many of you",
    "start": "243599",
    "end": "249389"
  },
  {
    "text": "have already been checking your mobile phones right and we're not even five minutes into the presentation it's you",
    "start": "249389",
    "end": "255659"
  },
  {
    "text": "want to have your fingertips at your you know information at your fingertips right what does what does that actually",
    "start": "255659",
    "end": "261150"
  },
  {
    "text": "lead to let me actually alleviate with an example I'm a dad of two and like I'm driving on",
    "start": "261150",
    "end": "267440"
  },
  {
    "text": "a holiday with my two kids the back ok a mile into the holiday they start saying Papa are we there yet are we there yet",
    "start": "267440",
    "end": "275150"
  },
  {
    "text": "right not even a mile can you imagine that right nothing's actually changed",
    "start": "275150",
    "end": "280370"
  },
  {
    "text": "they keep constantly nagging you are we there yet Davide yet right I am the mainframe my kids are",
    "start": "280370",
    "end": "286370"
  },
  {
    "text": "additional consumers nothing's changed there's the same pressure right so so",
    "start": "286370",
    "end": "295610"
  },
  {
    "text": "even chilly it's like it's a big business problem for every finance industry right lots and lots of digital customers are coming and hammering you",
    "start": "295610",
    "end": "302060"
  },
  {
    "text": "nothing you can do so from HSBC digital what we said is ok let's turn it around what do we do we said hang on let's",
    "start": "302060",
    "end": "310850"
  },
  {
    "text": "inform the customers in real time rather than them coming to us for information right what does this give you it gives",
    "start": "310850",
    "end": "317450"
  },
  {
    "text": "us two things one it drives better digital experiences and 2 it actually reduces our loads on",
    "start": "317450",
    "end": "324320"
  },
  {
    "text": "the mainframes and the back-end systems ok so I'll go into the solution now so",
    "start": "324320",
    "end": "330050"
  },
  {
    "text": "what does actually what we did with regard solution ok so if you can see the",
    "start": "330050",
    "end": "339260"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "screens is a very animated screen so you can follow the screens and first of all we actually created micro services",
    "start": "339260",
    "end": "347060"
  },
  {
    "text": "architecture completely and the first step that we took was what does the customer actually need right we need to",
    "start": "347060",
    "end": "353120"
  },
  {
    "text": "give them customer preferences so as part of that we build a simple customer preferences solution which gathers what",
    "start": "353120",
    "end": "360110"
  },
  {
    "text": "the customer wants in terms of consent preferences what they want to be notified on I'll walk you through a",
    "start": "360110",
    "end": "366410"
  },
  {
    "text": "simple use case a real-time credit notification all right something comes into your account you want to be",
    "start": "366410",
    "end": "371720"
  },
  {
    "text": "notified in real time let's take that news case so in that as part of the use",
    "start": "371720",
    "end": "376760"
  },
  {
    "text": "case in your preferences you go and say oh I want to be notified you say yes or no and then they want push notifications",
    "start": "376760",
    "end": "383030"
  },
  {
    "text": "yes sir no and then we provided threshold I don't want to be notified for any petty change right I want to be",
    "start": "383030",
    "end": "389120"
  },
  {
    "text": "notified for anything over $100 or something but if you set it to 0 you get notified for everything let's say",
    "start": "389120",
    "end": "395210"
  },
  {
    "text": "Santiago is actually a customer and he opens his app and he sets the preferences okay all",
    "start": "395210",
    "end": "400550"
  },
  {
    "text": "done shot it up and then he's walking along the strip and then withdraws finder tones from the cash machine okay",
    "start": "400550",
    "end": "407650"
  },
  {
    "text": "so that record goes into the mainframe from mainframe what we do is we extract",
    "start": "407650",
    "end": "413900"
  },
  {
    "text": "the data in real time onto our own Prem katha clusters okay from on Prem Kafka",
    "start": "413900",
    "end": "420229"
  },
  {
    "text": "clusters we use a patch in my thigh to move it to the cloud what is knife I Apache knife is nothing",
    "start": "420229",
    "end": "427190"
  },
  {
    "text": "but a simple software tool it's a data workflow tool that moves data from point A to point B and Kafka and knife I are",
    "start": "427190",
    "end": "434360"
  },
  {
    "text": "part of our Haughton works on from data suite of products so once the data is",
    "start": "434360",
    "end": "439430"
  },
  {
    "text": "picked up by knife I it actually moves to a first micro service called in map our service right what happens in the",
    "start": "439430",
    "end": "446449"
  },
  {
    "text": "mapper service is that it does data transformation data minimization and all of the data cleansing because the",
    "start": "446449",
    "end": "453349"
  },
  {
    "text": "mainframe format is actually absurd ik and it's an avro format Avro is a data type of format right but for digital we",
    "start": "453349",
    "end": "461599"
  },
  {
    "text": "need ASCII and JSON right so through the ranks it's actually converted through JSON asking once it reached the mapper",
    "start": "461599",
    "end": "469370"
  },
  {
    "text": "the mapper service then actually converts all of this source data into real proper data format and sends it to",
    "start": "469370",
    "end": "476090"
  },
  {
    "text": "a data service the data service is a combination of Aurora and DynamoDB and",
    "start": "476090",
    "end": "481940"
  },
  {
    "text": "we provide data as a service to the rest of the digital platform once the data",
    "start": "481940",
    "end": "487580"
  },
  {
    "text": "goes and lands in the data service then onwards it's an event-driven architecture within our platform so the",
    "start": "487580",
    "end": "494719"
  },
  {
    "text": "data service then emits route events as in this case we withdrew some money from the cash machine that record has no",
    "start": "494719",
    "end": "500509"
  },
  {
    "text": "traffic Kafka knife I onto mapper service and now sitting in the data service the data service would then",
    "start": "500509",
    "end": "506630"
  },
  {
    "text": "ejects a base route trunk sorry a route event called credit event once it",
    "start": "506630",
    "end": "513560"
  },
  {
    "text": "injects a credit event then we have built an event engine the event engine picks up the credit event",
    "start": "513560",
    "end": "520270"
  },
  {
    "text": "checks who it is for and checks has a customer actually signed up to this notification",
    "start": "520270",
    "end": "525410"
  },
  {
    "text": "yes/no and all of that checks is preferences and checks everything else on the event engine then decides",
    "start": "525410",
    "end": "531470"
  },
  {
    "text": "oh yes this customer actually needs to be sent a notification then the event",
    "start": "531470",
    "end": "536900"
  },
  {
    "text": "engine then takes up prepares a full-fledged and in-app message rich in",
    "start": "536900",
    "end": "543230"
  },
  {
    "text": "that message and sends it to a message service for it to be consumed later and then also tells message service whether",
    "start": "543230",
    "end": "550490"
  },
  {
    "text": "a push notification should be sent or not once the message service has actually formatted the message rich",
    "start": "550490",
    "end": "556250"
  },
  {
    "text": "message it then notifies the notification service saying hey send a",
    "start": "556250",
    "end": "561710"
  },
  {
    "text": "push notification to the customer okay so the notification service sends a push so you're all somewhere outside then you",
    "start": "561710",
    "end": "568340"
  },
  {
    "text": "get a push notification service on your phone you actually swipe on the push notification and then that mobile app",
    "start": "568340",
    "end": "575030"
  },
  {
    "text": "authenticates and goes to the message service and then gets the rich in-app message in your mobile so we are",
    "start": "575030",
    "end": "581840"
  },
  {
    "text": "providing a much more digital digitally rich experience many people have actually asked me hey",
    "start": "581840",
    "end": "587810"
  },
  {
    "text": "hang on a lot of people do this yes but they do it through SMS and through other technologies here you're driving",
    "start": "587810",
    "end": "593930"
  },
  {
    "text": "your own notifications so it's a big difference each of these services if you see is",
    "start": "593930",
    "end": "599540"
  },
  {
    "text": "actually a micro service engulfed in its own know Microsoft's can talk to each other other than through API gateways",
    "start": "599540",
    "end": "606500"
  },
  {
    "text": "and all of that which we dig a little deeper into that and all of the micro",
    "start": "606500",
    "end": "611870"
  },
  {
    "text": "services have some common services and dead letter kills right I'm going to pause here for two minutes or two",
    "start": "611870",
    "end": "617690"
  },
  {
    "text": "seconds sorry because I see a lot of paparazzi so fire away right now let me",
    "start": "617690",
    "end": "628700"
  },
  {
    "text": "focus your attention on the color of the arrows right because when you are actually designing your systems for data flow is very important if you see the",
    "start": "628700",
    "end": "635840"
  },
  {
    "text": "red arrows they're all our own Prem traffic which is BAU standard right you",
    "start": "635840",
    "end": "640910"
  },
  {
    "text": "see the white white line traffic that is from HSBC to AWS so that is one pattern",
    "start": "640910",
    "end": "646490"
  },
  {
    "text": "of communication and then if you see the purple arrows that's within your AWS services",
    "start": "646490",
    "end": "651740"
  },
  {
    "text": "that's pattern number two but the purple arrows don't go out to the internet it's still within the box and pattern number",
    "start": "651740",
    "end": "658190"
  },
  {
    "text": "three is the green arrows wearing from HSBC it goes to the Internet to the devices or any other",
    "start": "658190",
    "end": "664550"
  },
  {
    "text": "aggression third-party providers okay which we which we'll talk about more detail later so what are the design",
    "start": "664550",
    "end": "673279"
  },
  {
    "text": "considerations and lessons learned as the saying goes the devil is in the details right now Santiago will go",
    "start": "673279",
    "end": "680330"
  },
  {
    "text": "through a power-packed crash course on lambda and kindnesses and their integration patterns thanks format so as",
    "start": "680330",
    "end": "690470"
  },
  {
    "start": "689000",
    "end": "689000"
  },
  {
    "text": "you saw the solution on the architecture diagram Kinesis is heavily used it on",
    "start": "690470",
    "end": "695750"
  },
  {
    "text": "this architecture and the reason is that it enables a service to service communication a loosely coupled",
    "start": "695750",
    "end": "701260"
  },
  {
    "text": "event-driven way whenever I say Kinesis whenever we say Canisius on this",
    "start": "701260",
    "end": "707360"
  },
  {
    "text": "presentation we are really referring to Amazon Canada's data stream it's pretty long name so just gonna say Kinesis you",
    "start": "707360",
    "end": "714200"
  },
  {
    "text": "know we are referring to specifically to Canada's data stream so some of the key",
    "start": "714200",
    "end": "719570"
  },
  {
    "text": "concepts that are relevant for in particular the integration between Kinesis and lambda is that in Kinesis",
    "start": "719570",
    "end": "727640"
  },
  {
    "text": "data streams where the data is actually stored is actually on a shard so shard is the base unit of throughput",
    "start": "727640",
    "end": "734690"
  },
  {
    "text": "it's actually contains an ordered sequence of records arranged by the",
    "start": "734690",
    "end": "739730"
  },
  {
    "text": "arrival time so the other key concepts and terminologies string so when we",
    "start": "739730",
    "end": "746720"
  },
  {
    "text": "refer to a can easy string it's really a logical grouping of shards so when you actually configure Kinesis data streams",
    "start": "746720",
    "end": "754190"
  },
  {
    "text": "into the console through the API you create a stream you have to define the number of shards which is where your",
    "start": "754190",
    "end": "759980"
  },
  {
    "text": "accurate data is actually stored there are the important concept here it's a",
    "start": "759980",
    "end": "766820"
  },
  {
    "text": "partition key so a partition key which is imposed by the data producer is",
    "start": "766820",
    "end": "773270"
  },
  {
    "text": "actually an identifier that is used by by the service by Canisius data stream",
    "start": "773270",
    "end": "779480"
  },
  {
    "text": "to route your data records into shards so the important part here is that data",
    "start": "779480",
    "end": "786260"
  },
  {
    "text": "with the same partition key is stored into the same shard so that you see why",
    "start": "786260",
    "end": "793100"
  },
  {
    "text": "that becomes relevant when Srimati is explained in implementation at HSBC the data producer it's the",
    "start": "793100",
    "end": "801839"
  },
  {
    "text": "systems that are sending the records that's producing the data itself they",
    "start": "801839",
    "end": "807900"
  },
  {
    "text": "are responsible for tagging the data records with the correct partition key",
    "start": "807900",
    "end": "813720"
  },
  {
    "text": "which is then used into the system to route the records into the Associated shard the data records itself is the",
    "start": "813720",
    "end": "822660"
  },
  {
    "text": "unit of data it's the it made of a sequence number the partition key and",
    "start": "822660",
    "end": "827790"
  },
  {
    "text": "the actual data blob itself and the consumers is what's reading data of the",
    "start": "827790",
    "end": "833310"
  },
  {
    "text": "stream and then you know processing the data so in the case of this architecture",
    "start": "833310",
    "end": "838460"
  },
  {
    "text": "lambda is predominantly the consumer that's utilize it so let's dive a little",
    "start": "838460",
    "end": "844740"
  },
  {
    "text": "bit deeper into the integration between Kinesis data streams and lambda first",
    "start": "844740",
    "end": "850170"
  },
  {
    "start": "845000",
    "end": "845000"
  },
  {
    "text": "from a scaling behavior point of view so the first point here where it's shown",
    "start": "850170",
    "end": "855930"
  },
  {
    "text": "into the diagram is that for each shard into your kinesio streams the lambda",
    "start": "855930",
    "end": "861600"
  },
  {
    "text": "service when you configure lambda using Canisius data stream as the event source",
    "start": "861600",
    "end": "866900"
  },
  {
    "text": "what's actually happening is that for each of the shards that you have into",
    "start": "866900",
    "end": "872640"
  },
  {
    "text": "your stream the lambda service automatically creates in a one-to-one",
    "start": "872640",
    "end": "878190"
  },
  {
    "text": "mapping along the container so a lambda execution environment for your function",
    "start": "878190",
    "end": "884279"
  },
  {
    "text": "so what's important to note here is that the number of Kinesis streams shards is",
    "start": "884279",
    "end": "891930"
  },
  {
    "text": "the unit of concurrence for your lambda functions that are reading there are configured to use Kinesis streams as the",
    "start": "891930",
    "end": "899339"
  },
  {
    "text": "event source so regardless of the number of masses or records that's put on the",
    "start": "899339",
    "end": "905459"
  },
  {
    "text": "string that's not going to trigger more lambda concurrent execution it's",
    "start": "905459",
    "end": "911250"
  },
  {
    "text": "actually the number of shards define it on the stream that dictates how many",
    "start": "911250",
    "end": "916820"
  },
  {
    "text": "lambda concurrent you're going to have concurrently executing so as an example here if you create a stream if ten",
    "start": "916820",
    "end": "923370"
  },
  {
    "text": "shards are going to have them containers effectively executing the other point",
    "start": "923370",
    "end": "928770"
  },
  {
    "text": "that important to understand into these integration is that the first thing",
    "start": "928770",
    "end": "933850"
  },
  {
    "text": "first out behavior is on a poor short basis so as the diagram is showing what",
    "start": "933850",
    "end": "939160"
  },
  {
    "text": "you have is each one of the lambda execution environment it's only reading",
    "start": "939160",
    "end": "945820"
  },
  {
    "text": "from one specific chart that ensures that from that short point of view any",
    "start": "945820",
    "end": "951790"
  },
  {
    "text": "the records of process and a first-in first-out behavior forcing force out a",
    "start": "951790",
    "end": "958090"
  },
  {
    "text": "manner the other point that is relevant to to understand it to this integration",
    "start": "958090",
    "end": "964020"
  },
  {
    "text": "is that as you may know a lambda function when you trigger along the",
    "start": "964020",
    "end": "970630"
  },
  {
    "text": "execution environment along the container if it's not trigger if it's not processing after a period of time",
    "start": "970630",
    "end": "976990"
  },
  {
    "text": "that container may go code may be terminated so if you want your system in",
    "start": "976990",
    "end": "983620"
  },
  {
    "text": "this case you have a consistent Leighton's it's important that when you are inject in sending data into the",
    "start": "983620",
    "end": "991090"
  },
  {
    "text": "stream that you are evenly distributing how the data is actually arriving to the",
    "start": "991090",
    "end": "996280"
  },
  {
    "text": "string so that you have a continuous flow of records into all of the shards which means that you know all of your",
    "start": "996280",
    "end": "1002640"
  },
  {
    "text": "lambda concurrent execution environments are continuously hot continuously no processing data but that's a one thing",
    "start": "1002640",
    "end": "1010920"
  },
  {
    "text": "that you need to consider and Shri Mata will explain how in the case of HSBC what was the strategy use it their terms",
    "start": "1010920",
    "end": "1017610"
  },
  {
    "text": "of implementing the partition key to ensure that that behavior is executed",
    "start": "1017610",
    "end": "1023089"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "the other point that is is relevant to dive a little bit deeper when thinking",
    "start": "1023089",
    "end": "1029790"
  },
  {
    "text": "about the integration between lambda and Connie's streams is that when you set up",
    "start": "1029790",
    "end": "1036060"
  },
  {
    "text": "your lambda function to use achenes stream as the event source what's happening is that that lambda function",
    "start": "1036060",
    "end": "1042569"
  },
  {
    "text": "basically subscribes to that specific string and start pulling records off the",
    "start": "1042570",
    "end": "1048900"
  },
  {
    "text": "string one of the most important one of the configuration parameters that you have to choose is the bad-sized so how",
    "start": "1048900",
    "end": "1057120"
  },
  {
    "text": "many records had any given at each interaction the the service is going to read and pull",
    "start": "1057120",
    "end": "1063630"
  },
  {
    "text": "from the stream one thing that is somewhat tempting to perhaps to do is to set that bad-size to",
    "start": "1063630",
    "end": "1071520"
  },
  {
    "text": "just one because in that way as you know Shri Mata who explained in the",
    "start": "1071520",
    "end": "1077570"
  },
  {
    "text": "implementation you could potentially avoid some of the some of the",
    "start": "1077570",
    "end": "1082650"
  },
  {
    "text": "complications of this integration particularly know you could potentially avoid having to build that letter q but",
    "start": "1082650",
    "end": "1089070"
  },
  {
    "text": "it's important to realize from the experience we had that if you choose your bad size should be just one",
    "start": "1089070",
    "end": "1095700"
  },
  {
    "text": "actually the overall throughput of the system goes down you know it's it's it's it's badly impacted because there is",
    "start": "1095700",
    "end": "1102900"
  },
  {
    "text": "just too much overhead so it's important to set a much higher batch size but that",
    "start": "1102900",
    "end": "1109830"
  },
  {
    "text": "leads to an interesting situation which is when you learn the function read a",
    "start": "1109830",
    "end": "1116370"
  },
  {
    "text": "particular batch size from the kinesio streams start processing that you know",
    "start": "1116370",
    "end": "1122310"
  },
  {
    "text": "all of the records it's not a matter of if it's a matter of when you're going to",
    "start": "1122310",
    "end": "1128400"
  },
  {
    "text": "run into a situation where the lambda function may fail or may try to connect to them they you know the remote",
    "start": "1128400",
    "end": "1134790"
  },
  {
    "text": "endpoint and for whatever reason maybe it's a network failure it's not able to to connect you so what you run into a",
    "start": "1134790",
    "end": "1143490"
  },
  {
    "text": "situation here is that if for whatever reason that lambda execution environment",
    "start": "1143490",
    "end": "1149250"
  },
  {
    "text": "cannot process a successful in the batch of records it actually the day it's",
    "start": "1149250",
    "end": "1156540"
  },
  {
    "text": "actually goes into what's known as a blocking mode which means that it continuously try to process the same bet",
    "start": "1156540",
    "end": "1163230"
  },
  {
    "text": "of Records until that particular batch of records actually expires out of the",
    "start": "1163230",
    "end": "1168630"
  },
  {
    "text": "can is a stream and by default it takes 24 hours for a particular records to",
    "start": "1168630",
    "end": "1174900"
  },
  {
    "text": "expired and get out the portion of the stream what it means that if you don't",
    "start": "1174900",
    "end": "1181140"
  },
  {
    "text": "consider that if you don't take that into your design considerations what",
    "start": "1181140",
    "end": "1187290"
  },
  {
    "text": "could happen is that a particular malformed word record for example that for whatever reason your lumber",
    "start": "1187290",
    "end": "1193980"
  },
  {
    "text": "you know has not been coded to to handle could actually cause that particular shard to go into blocking mode and then",
    "start": "1193980",
    "end": "1201029"
  },
  {
    "text": "y'all under function you know basically just going to be accumulating more and more records instead of no processing",
    "start": "1201029",
    "end": "1206610"
  },
  {
    "text": "that so you need to make a design choice on how to handle that scenario",
    "start": "1206610",
    "end": "1213720"
  },
  {
    "text": "srimant oh we explained what we did in the case of HSBC which is effectively to",
    "start": "1213720",
    "end": "1219630"
  },
  {
    "text": "create a dead letter Q so that the shard doesn't go blocking and effectively even",
    "start": "1219630",
    "end": "1225240"
  },
  {
    "text": "a failure scenario we can continue to process a message today we are Mazon",
    "start": "1225240",
    "end": "1231720"
  },
  {
    "text": "where the rest we don't offer a dead letter Q by GF o when you have the integration between when you configure",
    "start": "1231720",
    "end": "1238649"
  },
  {
    "text": "the integration between lambda and n Kinesis but we'll go in srimad or go",
    "start": "1238649",
    "end": "1243870"
  },
  {
    "text": "into details on how we architect around that at HSBC srimant Thank You Santiago",
    "start": "1243870",
    "end": "1249750"
  },
  {
    "start": "1249000",
    "end": "1249000"
  },
  {
    "text": "and before we get into the actual dlq mechanism there's an important design",
    "start": "1249750",
    "end": "1255059"
  },
  {
    "text": "concept that I want to walk you through because that is what ties the entire platform together the DNA of the",
    "start": "1255059",
    "end": "1261000"
  },
  {
    "text": "platform so when as I said in the mainframes right when a record is",
    "start": "1261000",
    "end": "1266309"
  },
  {
    "text": "emitted what we do is we actually try to take that record and move through Kafka right when the payload comes what we do",
    "start": "1266309",
    "end": "1273390"
  },
  {
    "text": "is we generate a repeatable unique correlation ID at the source and target",
    "start": "1273390",
    "end": "1278700"
  },
  {
    "text": "along with a payload what is the repeatable unique ID mean hang on it's unique and you're saying repeatable one",
    "start": "1278700",
    "end": "1285809"
  },
  {
    "text": "of the biggest problems that we faced is that when we were testing we just replayed the same records and because we",
    "start": "1285809",
    "end": "1292890"
  },
  {
    "text": "generated a new unique ID we ended up with two records same records but different IDs so we started processing a",
    "start": "1292890",
    "end": "1299429"
  },
  {
    "text": "hang on that's the same so you need to come up with a mechanism so that if the record is replayed you generate the same",
    "start": "1299429",
    "end": "1305760"
  },
  {
    "text": "idea again so which means even if it's come through it comes as duplicate so you know that okay then from Kafka again",
    "start": "1305760",
    "end": "1312840"
  },
  {
    "text": "it goes through an i-5 and at this point as Santiago said right you guys need to",
    "start": "1312840",
    "end": "1319470"
  },
  {
    "text": "be very careful that you said the partition keep properly because you write to the stream but the producer is",
    "start": "1319470",
    "end": "1325320"
  },
  {
    "text": "the one that determines the partition key that the shard has to go through Genesis won't decide for itself okay so what",
    "start": "1325320",
    "end": "1332670"
  },
  {
    "text": "does it mean and let's take a simple example account numbers okay so you say account number zero can go into shot",
    "start": "1332670",
    "end": "1339240"
  },
  {
    "text": "zero account number 1 goes into shard 1 and similarly account number 9 goes to shard",
    "start": "1339240",
    "end": "1344400"
  },
  {
    "text": "9 it's a problem there imagine all of your customers are like say from some",
    "start": "1344400",
    "end": "1350670"
  },
  {
    "text": "buttered particular generation that they like only the number 8 so which means your shard 8 is stuffed up right 1 2 7 &",
    "start": "1350670",
    "end": "1357870"
  },
  {
    "text": "9 are empty so you need to work out a pattern that the volume is distributed across the shots so you have uniform",
    "start": "1357870",
    "end": "1364830"
  },
  {
    "text": "processing through okay so here the knife I put puts the record into kindnesses stream using the ID that we",
    "start": "1364830",
    "end": "1373320"
  },
  {
    "text": "generated as a partition key which gives some kind of a load distribution between the chance okay then the lambda picks it",
    "start": "1373320",
    "end": "1380910"
  },
  {
    "text": "up and then processes it the distinct advantage of this UUID it's operations",
    "start": "1380910",
    "end": "1388760"
  },
  {
    "text": "imagine someone says hey I have a problem and we tie the transaction and",
    "start": "1388760",
    "end": "1393780"
  },
  {
    "text": "what time once we find the UUID we can trace it back all the way to the source system because it's the same UUID going",
    "start": "1393780",
    "end": "1400500"
  },
  {
    "text": "through and as part of that we can actually tell which kind of stream it has gone through which lambda has been",
    "start": "1400500",
    "end": "1408030"
  },
  {
    "text": "picked up which microservice has processed that and all of that okay so it's effectively gives you an input and",
    "start": "1408030",
    "end": "1415350"
  },
  {
    "text": "lineage also to track a transaction through and through it's effectively you're finding a needle in a haystack for operationally they'll come and love",
    "start": "1415350",
    "end": "1422549"
  },
  {
    "text": "you guys if you do this so now let's go",
    "start": "1422549",
    "end": "1428040"
  },
  {
    "text": "back to what Santiago was saying about the dlq right because there's no existing deal key out of the box how",
    "start": "1428040",
    "end": "1433770"
  },
  {
    "text": "would you do this BC okay so a Santiago saying let me actually explain simple analogy right you you",
    "start": "1433770",
    "end": "1441030"
  },
  {
    "text": "know the freeways so once you enter a freeway you're stuck in that freeway you cannot change lanes",
    "start": "1441030",
    "end": "1446160"
  },
  {
    "text": "okay the freeway is a stream the lens is the number of shots until your freeway with ten lanes so there's ten shots in",
    "start": "1446160",
    "end": "1452940"
  },
  {
    "text": "the lane correct at the end of that is something actually that is taking over the cars if the lane is blocked you're",
    "start": "1452940",
    "end": "1458370"
  },
  {
    "text": "blocked other lanes go through so you could be very careful in how you design a system so that you implement an",
    "start": "1458370",
    "end": "1464120"
  },
  {
    "text": "amazing dlq mechanism by which you remove the records of problematic records all the information still trial",
    "start": "1464120",
    "end": "1470570"
  },
  {
    "text": "records are actually processed through ok here based on our performance tests",
    "start": "1470570",
    "end": "1476540"
  },
  {
    "text": "and all that our current shard size is 20 and a batch size is 500 so first",
    "start": "1476540",
    "end": "1482480"
  },
  {
    "text": "lambda D lambda container pulls from kindnesses saying give me the records 500 records are in the lambdas memory",
    "start": "1482480",
    "end": "1489440"
  },
  {
    "text": "and it starts processing that's how we actually do at most once what it does is that when the lambda starts processing",
    "start": "1489440",
    "end": "1497030"
  },
  {
    "text": "successfully 1 record once it's successfully processed it writes to the next system which is in our scenario",
    "start": "1497030",
    "end": "1504490"
  },
  {
    "text": "kindnesses queue and then writes to a DynamoDB state table saying I've acknowledged and I've processed this",
    "start": "1504490",
    "end": "1510920"
  },
  {
    "text": "UUID ok then it goes to second record and so on and so forth let's say that at",
    "start": "1510920",
    "end": "1517280"
  },
  {
    "text": "100th record it basically encountered a problem ok it cannot process we have configured it",
    "start": "1517280",
    "end": "1524240"
  },
  {
    "text": "to retry retry three times and once it fails what it does is it removes the",
    "start": "1524240",
    "end": "1530450"
  },
  {
    "text": "record writes it to SNS and then the topic is actually going to SNS and it stays there ok which means we have to",
    "start": "1530450",
    "end": "1536660"
  },
  {
    "text": "remove the problematic record from the batches of 500 and then start processing it through again and as you're",
    "start": "1536660",
    "end": "1543440"
  },
  {
    "text": "processing it through we keep writing updating the state table but if you see the fifty-first problem record it didn't",
    "start": "1543440",
    "end": "1549680"
  },
  {
    "text": "actually finish processing so it does not write into the state table so effectively we know that that's actually",
    "start": "1549680",
    "end": "1555560"
  },
  {
    "text": "not processed so we do at at least what most once now let's consider the",
    "start": "1555560",
    "end": "1560630"
  },
  {
    "text": "scenario where the lambda container itself is gone which means it's actually processed 50 records and the other 450",
    "start": "1560630",
    "end": "1567110"
  },
  {
    "text": "under memory is just gone when the lambda container boots up again and goes",
    "start": "1567110",
    "end": "1572780"
  },
  {
    "text": "to kindness and says give me 500 cards kindnesses will give the same batch because lambda hasn't acknowledged that",
    "start": "1572780",
    "end": "1579860"
  },
  {
    "text": "entire batch but this time what lambda does is when the record comes through it",
    "start": "1579860",
    "end": "1585440"
  },
  {
    "text": "actually checks with the state table have I actually processed this record because it's actually updated the state",
    "start": "1585440",
    "end": "1590840"
  },
  {
    "text": "table it'll not process the record and just dump the track so at this point say first 50 records",
    "start": "1590840",
    "end": "1596240"
  },
  {
    "text": "were processed it's gonna dump that and then 50 first record ah I haven't processed it there's no record of me",
    "start": "1596240",
    "end": "1601730"
  },
  {
    "text": "there's no entry in the state table so it starts processing that so it goes through the entire record once the batch choice is done then it does that and",
    "start": "1601730",
    "end": "1608870"
  },
  {
    "text": "eventually what we do is in the sqs we look at all the problem records we studied we identify the problems update",
    "start": "1608870",
    "end": "1616340"
  },
  {
    "text": "a lambda functions and then so in future what happens is lambda functions automatically know how to deal with that",
    "start": "1616340",
    "end": "1621950"
  },
  {
    "text": "records over time right the excuse will be smaller and smaller and smaller because we know the patterns of problems",
    "start": "1621950",
    "end": "1628759"
  },
  {
    "text": "that happen so what are the lessons learnt right um increases in um",
    "start": "1628759",
    "end": "1636259"
  },
  {
    "start": "1631000",
    "end": "1631000"
  },
  {
    "text": "increasing the number of shots does not necessarily increase result in better performance initially we should be said",
    "start": "1636259",
    "end": "1644600"
  },
  {
    "text": "the shard sizes mm and bat says as one right Amazon support engineers came and",
    "start": "1644600",
    "end": "1650120"
  },
  {
    "text": "said they were like you know they were looking at increase like guys what are you doing I said why not I mean you you",
    "start": "1650120",
    "end": "1656570"
  },
  {
    "text": "haven't set the limit so I'm gonna set it right what we realize is that the performance was even more bad the i/o",
    "start": "1656570",
    "end": "1661940"
  },
  {
    "text": "performance of the container writing tool of kindnesses back and forth and then writing it is detrimental",
    "start": "1661940",
    "end": "1667970"
  },
  {
    "text": "so instead then we started working with them and did some tuning and then we realized that for us for 20 shots and",
    "start": "1667970",
    "end": "1674690"
  },
  {
    "text": "500 bad sales was pretty good so work it out right consider the impact of language on the V PC use right on Monday",
    "start": "1674690",
    "end": "1682399"
  },
  {
    "text": "there was another session ad reinvent where one of the product managers of LOM actually gave a brilliant session and",
    "start": "1682399",
    "end": "1688519"
  },
  {
    "text": "what actually happens or the cold boots right and how Java actually does that so",
    "start": "1688519",
    "end": "1693769"
  },
  {
    "text": "there's it downloads the code then boots the runtime and then runs it and alright so with in Java when you do within the",
    "start": "1693769",
    "end": "1700940"
  },
  {
    "text": "VPC there's certain cold time for en I reuse right so you need to consider the",
    "start": "1700940",
    "end": "1707299"
  },
  {
    "text": "language on how you're going to do that was just note was this fightin because different languages have different boot",
    "start": "1707299",
    "end": "1712580"
  },
  {
    "text": "times but Java once booted is we found that is the fastest and try and to",
    "start": "1712580",
    "end": "1719690"
  },
  {
    "text": "alleviate the problem of that cold sauce you can always pre-warm your lambda so you can achieve your designed SLS",
    "start": "1719690",
    "end": "1726560"
  },
  {
    "text": "and one important thing is the size of the lambda the size of the container is you can set it up to max of 3 GB that",
    "start": "1726560",
    "end": "1734210"
  },
  {
    "text": "does not necessarily mean that basically it's the fastest and the most performant right through testing we realized",
    "start": "1734210",
    "end": "1740540"
  },
  {
    "text": "through en i3 use we found 1gb to be the optimum size which means we reuse Ian's",
    "start": "1740540",
    "end": "1746030"
  },
  {
    "text": "eyes so then we actually reduce the boot time problems ok and on all of this if",
    "start": "1746030",
    "end": "1756200"
  },
  {
    "text": "you see go back to the architecture slide we actually build micro services now Santiago will walk you through on",
    "start": "1756200",
    "end": "1762170"
  },
  {
    "text": "some of the security considerations and how we have built literally a private cloud within a public cloud so let me go",
    "start": "1762170",
    "end": "1774320"
  },
  {
    "start": "1771000",
    "end": "1771000"
  },
  {
    "text": "through some of the challenge that and how we address it in particularly here in this just this part of the",
    "start": "1774320",
    "end": "1780710"
  },
  {
    "text": "architecture one of the requirements that we had from hedges BC was how could",
    "start": "1780710",
    "end": "1786440"
  },
  {
    "text": "we provide internet access to some of the functions that lambda functions the",
    "start": "1786440",
    "end": "1793490"
  },
  {
    "text": "need but in a highly controlled way as you probably know you can run you along",
    "start": "1793490",
    "end": "1799550"
  },
  {
    "text": "the function outside of e PC or you can choose to attach along the functions to",
    "start": "1799550",
    "end": "1804860"
  },
  {
    "text": "V pcs in the case of HSBC all of their lambda functions are attached to a V PC",
    "start": "1804860",
    "end": "1810320"
  },
  {
    "text": "and there is a number of reasons for that one of the reasons is that allows them to set up a security group",
    "start": "1810320",
    "end": "1815510"
  },
  {
    "text": "particularly the egress rules so that you know allows to control what those",
    "start": "1815510",
    "end": "1820730"
  },
  {
    "text": "longer functions can connect you but also allows them to look at V PC flow",
    "start": "1820730",
    "end": "1826100"
  },
  {
    "text": "logs for example so our premise here our architecture all of the London functions",
    "start": "1826100",
    "end": "1832850"
  },
  {
    "text": "that we are talking about they are attached to a V PC and then that becomes the question which is ok some of those",
    "start": "1832850",
    "end": "1840500"
  },
  {
    "text": "longer functions they may need to connect to the outside world specifically to public reachable",
    "start": "1840500",
    "end": "1847520"
  },
  {
    "text": "endpoints in this case I loved that notification services and notification micro service actually needs to talk to",
    "start": "1847520",
    "end": "1854660"
  },
  {
    "text": "the outside world to communicate with the provider of notifications so what we came up with",
    "start": "1854660",
    "end": "1861740"
  },
  {
    "text": "was with an architecture that we believe allows that but provides that external",
    "start": "1861740",
    "end": "1868010"
  },
  {
    "text": "access in a highly controlled way so what we did is if you look here on the right hand side we created a second V PC",
    "start": "1868010",
    "end": "1875559"
  },
  {
    "text": "that V PC is the only V PC that has an internet gateway a passion to that on",
    "start": "1875559",
    "end": "1881840"
  },
  {
    "text": "there V PC the HSBC security team so separation of concerns here so the HSBC",
    "start": "1881840",
    "end": "1889220"
  },
  {
    "text": "security team could create and manage basically a fleet of proxy servers where",
    "start": "1889220",
    "end": "1895520"
  },
  {
    "text": "they control the the domains they have the who controls and configure the",
    "start": "1895520",
    "end": "1902299"
  },
  {
    "text": "domains to which those proxy servers allow connection to the outside world and what agency has done by leveraging",
    "start": "1902299",
    "end": "1910150"
  },
  {
    "text": "AWS VPC endpoints in fact will encapsulate that fleet of proxy servers",
    "start": "1910150",
    "end": "1917659"
  },
  {
    "text": "into a V PC endpoint service so that V PC that that those proxy servers",
    "start": "1917659",
    "end": "1923330"
  },
  {
    "text": "encapsulated on a V PC endpoint service is then exposed into the V PC in the",
    "start": "1923330",
    "end": "1929419"
  },
  {
    "text": "middle of V PC on the Left which is the application V PC if you like that is the",
    "start": "1929419",
    "end": "1935210"
  },
  {
    "text": "V PC where all of the actual work all of the lambda functions actually attach to",
    "start": "1935210",
    "end": "1941350"
  },
  {
    "text": "so in that way the only way that the only path the only network path that",
    "start": "1941350",
    "end": "1947600"
  },
  {
    "text": "those longer functions running on the networks notification service CPC have to go to the Internet is by connecting",
    "start": "1947600",
    "end": "1955070"
  },
  {
    "text": "to that V PC endpoint that is locally created on the notification services V",
    "start": "1955070",
    "end": "1961039"
  },
  {
    "text": "PC and that is factually encapsulating a seat a set of proxy servers that are",
    "start": "1961039",
    "end": "1966710"
  },
  {
    "text": "owned and managed by HSBC security so a few advantages of that architecture of",
    "start": "1966710",
    "end": "1973760"
  },
  {
    "text": "problems that it addressed the first thing is that it limits the blast radius so if for whatever reason and clearly",
    "start": "1973760",
    "end": "1981679"
  },
  {
    "text": "HSBC has several checks and balances to ensure that this doesn't happen but in the unlikely extremely unlikely event",
    "start": "1981679",
    "end": "1988399"
  },
  {
    "text": "that any bad code would land into those lumber functions that is",
    "start": "1988399",
    "end": "1993510"
  },
  {
    "text": "attempting to communicate to an outside domain that's not approval by hey Jessie",
    "start": "1993510",
    "end": "1999270"
  },
  {
    "text": "this architecture will prevent that problem because when the lumber function if it tries to initiate the connection",
    "start": "1999270",
    "end": "2005000"
  },
  {
    "text": "to no approval destination guess what's going to be blocked by the you know the",
    "start": "2005000",
    "end": "2011450"
  },
  {
    "text": "proxy servers that's gonna be logged and then it's gonna trigger an investigation",
    "start": "2011450",
    "end": "2017350"
  },
  {
    "start": "2018000",
    "end": "2018000"
  },
  {
    "text": "the other problem that we had to solve from network architecture point of view",
    "start": "2018190",
    "end": "2024770"
  },
  {
    "text": "and I highly encourage you guys to think about this problem early on because",
    "start": "2024770",
    "end": "2030830"
  },
  {
    "text": "otherwise if you are testing playing with lambda specifically not talking",
    "start": "2030830",
    "end": "2035990"
  },
  {
    "text": "about lambda - its Ravi PC so if you're playing a testing lambda Tashia VPC at small scale later on when you try to",
    "start": "2035990",
    "end": "2044080"
  },
  {
    "text": "choose scale and running into production particularly if your production happens to be thousands of tens of thousands of",
    "start": "2044080",
    "end": "2051379"
  },
  {
    "text": "concurrent executions you may run into into some problems and that may cause",
    "start": "2051380",
    "end": "2056780"
  },
  {
    "text": "you to have to retrofit and redesign your V PC which is not a good thing so",
    "start": "2056780",
    "end": "2062350"
  },
  {
    "text": "what we encourage you to think about this problem early on so what we did here is as you see we have this platform",
    "start": "2062350",
    "end": "2068990"
  },
  {
    "text": "V PC there is a V PC where all of the work actually happens that's where all",
    "start": "2068990",
    "end": "2074810"
  },
  {
    "text": "of the lambda functions are actually attached to and extramental referred to",
    "start": "2074810",
    "end": "2080210"
  },
  {
    "text": "here we talking about thousands and tens of thousands of concurrent executions",
    "start": "2080210",
    "end": "2085370"
  },
  {
    "text": "and what it means for a network point of view is that those lambda functions will",
    "start": "2085370",
    "end": "2091520"
  },
  {
    "text": "consume when the attacker V PC thousands or even tens of thousands of IP addresses so when working with HSBC we",
    "start": "2091520",
    "end": "2100460"
  },
  {
    "text": "went back to the agency networking team and said hey could you give me I P range",
    "start": "2100460",
    "end": "2105890"
  },
  {
    "text": "a CIDR block for me to put on that V PC but by the way we need about 15,000 IP",
    "start": "2105890",
    "end": "2111320"
  },
  {
    "text": "addresses the highly encourage us to look a little bit deeper and say well how can you actually solve that in",
    "start": "2111320",
    "end": "2118580"
  },
  {
    "text": "another way that's why we we came out how we came up with that architecture",
    "start": "2118580",
    "end": "2123780"
  },
  {
    "text": "so what we do here is somewhat similar to that other pattern that you saw in",
    "start": "2123780",
    "end": "2129960"
  },
  {
    "text": "the previous life we created a second V PC that V PC also has a set of proxy",
    "start": "2129960",
    "end": "2136200"
  },
  {
    "text": "servers those proxy servers on that second V PC on the left hand side it's the V PC that has a direct connector",
    "start": "2136200",
    "end": "2143610"
  },
  {
    "text": "passion to it so has connectivity back to actual premise is a V PC with a much",
    "start": "2143610",
    "end": "2149640"
  },
  {
    "text": "smaller CIDR range so and it's a see it's an IP range that is route about",
    "start": "2149640",
    "end": "2155810"
  },
  {
    "text": "reachable I should say from the HSBC on premise network but also from that V PC",
    "start": "2155810",
    "end": "2161460"
  },
  {
    "text": "you can reach back at you on premise and what we did is again using V PC",
    "start": "2161460",
    "end": "2167100"
  },
  {
    "text": "endpoints encapsulated those proxies into a V PC endpoint service expose that",
    "start": "2167100",
    "end": "2172950"
  },
  {
    "text": "into the platform V PC which is where all of the work is actually happening now the lambda functions sitting on the",
    "start": "2172950",
    "end": "2181560"
  },
  {
    "text": "platform V PC if they need to connect back to on-premise they would talk to",
    "start": "2181560",
    "end": "2186630"
  },
  {
    "text": "that local V PC endpoint that dance to the proxies on the Left which are the ones that actually have the connectivity",
    "start": "2186630",
    "end": "2193920"
  },
  {
    "text": "back to on-premise so what their architecture allowed us to achieve is that on that platform V PC it just BC",
    "start": "2193920",
    "end": "2201900"
  },
  {
    "text": "could a chance to configure that with a very large CIDR range CIDR block / 16",
    "start": "2201900",
    "end": "2208820"
  },
  {
    "text": "65,000 IP addresses it's using an IP range that is independent from the on",
    "start": "2208820",
    "end": "2215940"
  },
  {
    "text": "premise range so the key value of this architecture is on that platform V PC we",
    "start": "2215940",
    "end": "2222660"
  },
  {
    "text": "can scale unlimited really IP address space IP address is no longer a",
    "start": "2222660",
    "end": "2229500"
  },
  {
    "text": "constraint so you know can scale for as much as we need to so and did that",
    "start": "2229500",
    "end": "2237150"
  },
  {
    "text": "without exhausting without you know consuming a large number of IP addresses from their own premise range so some of",
    "start": "2237150",
    "end": "2247560"
  },
  {
    "start": "2247000",
    "end": "2247000"
  },
  {
    "text": "the lessons learned from a networking architecture point of view we felt that",
    "start": "2247560",
    "end": "2252870"
  },
  {
    "text": "having a resource with a good knowledge of networking to the cross-functional team",
    "start": "2252870",
    "end": "2258150"
  },
  {
    "text": "that was building this platform savored time allowed us to collaborate closely and build his architecture we as we",
    "start": "2258150",
    "end": "2266400"
  },
  {
    "text": "spoke on the second point consider isolating your functions within a VP C",
    "start": "2266400",
    "end": "2271860"
  },
  {
    "text": "that has a very large CIDR because although lambda you know amazing in",
    "start": "2271860",
    "end": "2277830"
  },
  {
    "text": "terms of you know scaling dynamically if for whatever reason if your configure",
    "start": "2277830",
    "end": "2283230"
  },
  {
    "text": "your lambda function to attach to a VP C and when the service trying to create a container and execution environment",
    "start": "2283230",
    "end": "2289650"
  },
  {
    "text": "cannot receive an IP address you know from the vp c service actually a lambda",
    "start": "2289650",
    "end": "2295140"
  },
  {
    "text": "function can't scale so running out of IP address in your vp c act will have a",
    "start": "2295140",
    "end": "2300240"
  },
  {
    "text": "direct impact on the ability of a lambda functions to true scale attached in your",
    "start": "2300240",
    "end": "2305940"
  },
  {
    "text": "function to actually pc from security point of view that is tremendous value the use of security groups flow logs and",
    "start": "2305940",
    "end": "2313380"
  },
  {
    "text": "ability no tightly control what does that function can actually communicate you so let me now ask you Tremonti to",
    "start": "2313380",
    "end": "2323820"
  },
  {
    "text": "dive a little bit deeper and another aspects of the of the system which is around in monitoring and alerting and",
    "start": "2323820",
    "end": "2334860"
  },
  {
    "text": "traditional monitoring and alerting and there are three things that usually on Prem server guy is actually monitor",
    "start": "2334860",
    "end": "2341190"
  },
  {
    "text": "right amount of RAM CPU and disk usage based on that you do scaling and all of",
    "start": "2341190",
    "end": "2347100"
  },
  {
    "text": "that imagine you turning up haveá-- going server let's not doesn't matter anymore right it's a different world so what do",
    "start": "2347100",
    "end": "2353550"
  },
  {
    "start": "2353000",
    "end": "2353000"
  },
  {
    "text": "you actually do to monitor right instead of the traditional what are you monitor",
    "start": "2353550",
    "end": "2358800"
  },
  {
    "text": "you go into different it's a mind shift change what are you monitoring and it just this",
    "start": "2358800",
    "end": "2364230"
  },
  {
    "text": "year we are monitoring throughput latency errors and system health a lot of other metrics specifically our",
    "start": "2364230",
    "end": "2370530"
  },
  {
    "text": "end-to-end latency because you got to tell that to the business right so the challenges in calculating and into in",
    "start": "2370530",
    "end": "2377640"
  },
  {
    "text": "latency is that this kindnesses lambda Kinesis lambda in individual you can't track it through if you remember I told",
    "start": "2377640",
    "end": "2384300"
  },
  {
    "text": "you guys that the correlation ID the so what do you do here at the source when the correlation idea is generated",
    "start": "2384300",
    "end": "2390690"
  },
  {
    "text": "there's a time stamp at the end it is time stamped again and the difference gives you the into and latency does not",
    "start": "2390690",
    "end": "2397230"
  },
  {
    "text": "matter how many points it has gone through but that's the end to in latency claim so are lambdas actually right",
    "start": "2397230",
    "end": "2404250"
  },
  {
    "text": "custom metrics in the cloud watch and we have all of the metrics out-of-the-box metrics for AWS services they're all",
    "start": "2404250",
    "end": "2411300"
  },
  {
    "text": "collated in cloud watch and then from there it's actually pull through data",
    "start": "2411300",
    "end": "2416580"
  },
  {
    "text": "dog our monitoring solution and then from there it actually we produce our",
    "start": "2416580",
    "end": "2421619"
  },
  {
    "text": "dashboards and then we do our alerting solution as part of that but in lambdas",
    "start": "2421619",
    "end": "2426630"
  },
  {
    "text": "we write certain tags into cloud watch so you can actually accumulate all your graphs through the tanks and all of our",
    "start": "2426630",
    "end": "2434040"
  },
  {
    "text": "money alerts and logs and monitors are all actually set up hierarchically so we",
    "start": "2434040",
    "end": "2439710"
  },
  {
    "text": "have a platform level dashboards you click on the dashboard then you can go to the micro services level as in the",
    "start": "2439710",
    "end": "2445770"
  },
  {
    "text": "micro services the previous slide I showed you the microsensors architecture as in the data service the mapper",
    "start": "2445770",
    "end": "2451980"
  },
  {
    "text": "service message service or so so then you go into the micro services and then it goes to the component level so you",
    "start": "2451980",
    "end": "2457950"
  },
  {
    "text": "can actually dig both and everything is aggregated upwards okay so our",
    "start": "2457950",
    "end": "2465600"
  },
  {
    "start": "2465000",
    "end": "2465000"
  },
  {
    "text": "dashboards are actually automatically configured as in configured and then deployed through code so nothing is",
    "start": "2465600",
    "end": "2471030"
  },
  {
    "text": "actually built in the production system that gives us a distinct advantage that it's configuration driven you configure",
    "start": "2471030",
    "end": "2477810"
  },
  {
    "text": "it in dev and you promote it through your environments which means it's deployed actually alongside the code so",
    "start": "2477810",
    "end": "2483119"
  },
  {
    "text": "they are deployed together what this gives us a benefit is that we can quickly change and use it for different environs because it's all configuration",
    "start": "2483119",
    "end": "2489840"
  },
  {
    "text": "based either logically group right and one interesting thing that we actually",
    "start": "2489840",
    "end": "2494869"
  },
  {
    "text": "it enabled is anomaly detection if I can get your focus on the graph on the",
    "start": "2494869",
    "end": "2501600"
  },
  {
    "text": "middle right hand side graph you see the gray area right based on the volumes",
    "start": "2501600",
    "end": "2506869"
  },
  {
    "text": "that is our actual pattern of usage okay and today's pattern is the red line",
    "start": "2506869",
    "end": "2515210"
  },
  {
    "text": "which means hey we are well within our operational limit so there is no problem at all",
    "start": "2515210",
    "end": "2520800"
  },
  {
    "text": "and if you focus on the left-hand-side middle graph I don't know if you can see it clearly but a gray area but if you",
    "start": "2520800",
    "end": "2526740"
  },
  {
    "text": "can see the gray area that's based on usage you see the blue line right that's outside of our regular usage patterns so",
    "start": "2526740",
    "end": "2534600"
  },
  {
    "text": "then which means that we know that that's an anomaly something is happening so we automatically trigger an alert and",
    "start": "2534600",
    "end": "2540930"
  },
  {
    "text": "write it to SNS which sends an email to our production operations support and they have a look as to what is happening",
    "start": "2540930",
    "end": "2547340"
  },
  {
    "text": "so you guys need to be proactive because it's server list so you need to be aware of what is happening as a simple example",
    "start": "2547340",
    "end": "2553070"
  },
  {
    "text": "say the lambda took any this connection is broken or something happens right suddenly you start your line going which",
    "start": "2553070",
    "end": "2559260"
  },
  {
    "text": "means then they can go in and see what the problem is and you know fix it straight up so what are the key",
    "start": "2559260",
    "end": "2567990"
  },
  {
    "text": "takeaways that does the entire session we have been talking about right we walk through a lot of business problems",
    "start": "2567990",
    "end": "2573510"
  },
  {
    "text": "solution and all of that right follow the principle of extract once and reuse",
    "start": "2573510",
    "end": "2580530"
  },
  {
    "start": "2575000",
    "end": "2575000"
  },
  {
    "text": "multiple times because you don't want to be hammering the mainframes right extract the data from mainframes process",
    "start": "2580530",
    "end": "2586350"
  },
  {
    "text": "it elsewhere do whatever you need to do think about the other day it's scenario ok have it separately I keep processing",
    "start": "2586350",
    "end": "2593730"
  },
  {
    "text": "it separately ok generating a repeatable correlation ID right this gives you",
    "start": "2593730",
    "end": "2598920"
  },
  {
    "text": "distinct advantage doesn't you can do into an lineage you can do data lineage operations support and your deal key",
    "start": "2598920",
    "end": "2606840"
  },
  {
    "text": "mechanism as well ok then perform load test and identify choke points we did a",
    "start": "2606840",
    "end": "2613290"
  },
  {
    "text": "performance test as initially as I said we did thousands thousand cards and one bad size we performed really poorly even",
    "start": "2613290",
    "end": "2620580"
  },
  {
    "text": "than a normal dev system right so you need to perform lots of load tests severe choke points are no da SS soft",
    "start": "2620580",
    "end": "2629250"
  },
  {
    "text": "limits and hard limits right if for example in your documentation it says the number of shards is 500 as an",
    "start": "2629250",
    "end": "2636210"
  },
  {
    "text": "example find out if it's a soft limit or a hard limit if it's a soft limit you can change it at the account level but",
    "start": "2636210",
    "end": "2643200"
  },
  {
    "text": "if it's a hard limit you can't go beyond that so play around with your soft limits don't play around with your hard",
    "start": "2643200",
    "end": "2648690"
  },
  {
    "text": "limits because you will end towards your end of the system you can't scale upwards",
    "start": "2648690",
    "end": "2653869"
  },
  {
    "text": "plan your network architecture so that you isolate everything within micro-services and effectively you're",
    "start": "2653869",
    "end": "2660809"
  },
  {
    "text": "building your own private club within a public cloud so there is no outside interference writing and you're locked down and effectively it gives you",
    "start": "2660809",
    "end": "2667799"
  },
  {
    "text": "amazing scaling parameters like how scientific explain so you can scale thousands of lambdas without affecting",
    "start": "2667799",
    "end": "2673950"
  },
  {
    "text": "your on-prem IPS as well and the most important thing that we spent the most",
    "start": "2673950",
    "end": "2680630"
  },
  {
    "text": "was how did we actually integrate our own Prem logging to our cloud logging we",
    "start": "2680630",
    "end": "2686130"
  },
  {
    "text": "went away a file and started building a cloud monitoring solution and then when it came to on Prem Singh hey you gotta monitor this I said it's not working",
    "start": "2686130",
    "end": "2692760"
  },
  {
    "text": "right so then we had to integrate in such a way that all of the cloud monitor cloud logging and statistics we had to",
    "start": "2692760",
    "end": "2699180"
  },
  {
    "text": "stream it on Prem so even they got a view of the dashboard of course they go to cloud to actually fix problem but",
    "start": "2699180",
    "end": "2705299"
  },
  {
    "text": "then you have to have a unified operating model so that they can actually look at both so with that I",
    "start": "2705299",
    "end": "2711750"
  },
  {
    "text": "thank you very much for the session and it's been brilliant presenting this platform and hope you got some value out",
    "start": "2711750",
    "end": "2718740"
  },
  {
    "text": "of this session and if you can [Applause]",
    "start": "2718740",
    "end": "2730249"
  }
]