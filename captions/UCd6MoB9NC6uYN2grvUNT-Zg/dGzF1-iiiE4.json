[
  {
    "text": "- Welcome to \"Back To Basics\".",
    "start": "6150",
    "end": "7590"
  },
  {
    "text": "Today, we will discuss how to use",
    "start": "7590",
    "end": "9450"
  },
  {
    "text": "a hybrid database architecture",
    "start": "9450",
    "end": "10950"
  },
  {
    "text": "to modernize legacy applications",
    "start": "10950",
    "end": "12780"
  },
  {
    "text": "to increase performance and availability.",
    "start": "12780",
    "end": "15523"
  },
  {
    "text": "AWS Enterprise customers, like consumer",
    "start": "15523",
    "end": "18240"
  },
  {
    "text": "packaged goods and retail companies,",
    "start": "18240",
    "end": "20250"
  },
  {
    "text": "have loyalty and coupon discount programs",
    "start": "20250",
    "end": "22410"
  },
  {
    "text": "that started years, even decades,",
    "start": "22410",
    "end": "24390"
  },
  {
    "text": "before cloud technologies were created",
    "start": "24390",
    "end": "26699"
  },
  {
    "text": "and sometimes are supported",
    "start": "26700",
    "end": "28470"
  },
  {
    "text": "by business-specific applications",
    "start": "28470",
    "end": "30300"
  },
  {
    "text": "that can't match the growth rate",
    "start": "30300",
    "end": "32040"
  },
  {
    "text": "and global expansion\nrequirements of today.",
    "start": "32040",
    "end": "34473"
  },
  {
    "text": "During my work as an\nAWS solution architect,",
    "start": "35760",
    "end": "38489"
  },
  {
    "text": "I've worked in the modernization\nof coupons applications",
    "start": "38490",
    "end": "40920"
  },
  {
    "text": "in two different countries.",
    "start": "40920",
    "end": "42690"
  },
  {
    "text": "The technical stack was\nsimilar in both cases,",
    "start": "42690",
    "end": "45329"
  },
  {
    "text": "a web application deployed\nin virtual machines",
    "start": "45330",
    "end": "47730"
  },
  {
    "text": "behind a load balancer firewall",
    "start": "47730",
    "end": "49530"
  },
  {
    "text": "and supported by a relational database.",
    "start": "49530",
    "end": "51750"
  },
  {
    "text": "In both cases, the reasons\nto modernize were the same:",
    "start": "51750",
    "end": "54870"
  },
  {
    "text": "one, system is experiencing downtime;",
    "start": "54870",
    "end": "57780"
  },
  {
    "text": "two, business function\nimportance outweighing",
    "start": "57780",
    "end": "60690"
  },
  {
    "text": "the current architecture resilience;",
    "start": "60690",
    "end": "62879"
  },
  {
    "text": "three, application not scaling\nto meet current demand.",
    "start": "62880",
    "end": "66720"
  },
  {
    "text": "Technology has evolved very rapidly",
    "start": "66720",
    "end": "68640"
  },
  {
    "text": "and design decisions that\nwere sound 15 years ago",
    "start": "68640",
    "end": "71880"
  },
  {
    "text": "won't provide the best results today.",
    "start": "71880",
    "end": "74280"
  },
  {
    "text": "However, you can argue that\ndeploying the application",
    "start": "74280",
    "end": "77070"
  },
  {
    "text": "at the web layer in an\nAmazon EC2 instances",
    "start": "77070",
    "end": "80220"
  },
  {
    "text": "with an auto scaling configuration",
    "start": "80220",
    "end": "82440"
  },
  {
    "text": "behind an application load balancer",
    "start": "82440",
    "end": "84810"
  },
  {
    "text": "will provide horizontal\nscaling capabilities",
    "start": "84810",
    "end": "87210"
  },
  {
    "text": "as well as multi-availability\nzone resilience.",
    "start": "87210",
    "end": "90570"
  },
  {
    "text": "Same thing could be\naccomplished by re-platforming",
    "start": "90570",
    "end": "93390"
  },
  {
    "text": "the application layer into\nany container-based service,",
    "start": "93390",
    "end": "96750"
  },
  {
    "text": "like Amazon Elastic Container Service",
    "start": "96750",
    "end": "99390"
  },
  {
    "text": "or Amazon Elastic Kubernetes Service",
    "start": "99390",
    "end": "102030"
  },
  {
    "text": "with minimal changes to the source code.",
    "start": "102030",
    "end": "104580"
  },
  {
    "text": "Now, the database layer is\na little bit more complex.",
    "start": "104580",
    "end": "107850"
  },
  {
    "text": "You can add more CPUs, memory,\nand faster storage volumes.",
    "start": "107850",
    "end": "111780"
  },
  {
    "text": "However, vertical scaling has limitations",
    "start": "111780",
    "end": "114540"
  },
  {
    "text": "when you need global or\nmulti-regional presence.",
    "start": "114540",
    "end": "117750"
  },
  {
    "text": "With replicas and caching are techniques",
    "start": "117750",
    "end": "120180"
  },
  {
    "text": "that can help to reduce the database load",
    "start": "120180",
    "end": "122040"
  },
  {
    "text": "in read-intensive applications.",
    "start": "122040",
    "end": "124140"
  },
  {
    "text": "But in write-intensive applications,",
    "start": "124140",
    "end": "126270"
  },
  {
    "text": "like redeeming viral promotion\ncodes at global scale,",
    "start": "126270",
    "end": "129810"
  },
  {
    "text": "you will need to find alternatives.",
    "start": "129810",
    "end": "131880"
  },
  {
    "text": "With AWS, you can use DynamoDB\nas an intermediate database",
    "start": "131880",
    "end": "135720"
  },
  {
    "text": "to help with this load.",
    "start": "135720",
    "end": "137340"
  },
  {
    "text": "DynamoDB automatically scales\ntables to adjust for capacity",
    "start": "137340",
    "end": "141090"
  },
  {
    "text": "and maintains performance\nwith zero administration.",
    "start": "141090",
    "end": "144330"
  },
  {
    "text": "It scales globally to\nsupport petabytes of data",
    "start": "144330",
    "end": "146970"
  },
  {
    "text": "and tens of millions of read\nand write requests per second.",
    "start": "146970",
    "end": "150630"
  },
  {
    "text": "With that in mind, you\ncan confidently move",
    "start": "150630",
    "end": "153150"
  },
  {
    "text": "the heavy write load and the\napplication session state",
    "start": "153150",
    "end": "156000"
  },
  {
    "text": "to DynamoDB tables and\nmake use of features,",
    "start": "156000",
    "end": "158850"
  },
  {
    "text": "like composite partition keys,\nsort keys and write sharding",
    "start": "158850",
    "end": "162360"
  },
  {
    "text": "to distribute the load\ninto different partitions.",
    "start": "162360",
    "end": "165330"
  },
  {
    "text": "This doesn't mean that\nyou will be dropping",
    "start": "165330",
    "end": "167340"
  },
  {
    "text": "the relational database.",
    "start": "167340",
    "end": "168660"
  },
  {
    "text": "You can easily migrate it to Amazon Aurora",
    "start": "168660",
    "end": "171180"
  },
  {
    "text": "if the source is MySQL or PostgreSQL.",
    "start": "171180",
    "end": "173913"
  },
  {
    "text": "If keeping the data in the\nrelational database is a must",
    "start": "175020",
    "end": "177810"
  },
  {
    "text": "for auditing or reporting purposes,",
    "start": "177810",
    "end": "180300"
  },
  {
    "text": "you can leverage DynamoDB\nStreams and AWS Lambda Functions",
    "start": "180300",
    "end": "183870"
  },
  {
    "text": "to reproduce the behavior\nof the write-through cache",
    "start": "183870",
    "end": "186629"
  },
  {
    "text": "and then store them in Aurora instances",
    "start": "186630",
    "end": "188700"
  },
  {
    "text": "without affecting the end user experience.",
    "start": "188700",
    "end": "191250"
  },
  {
    "text": "This pattern is what we call\na hybrid database system.",
    "start": "191250",
    "end": "195300"
  },
  {
    "text": "This is the right moment",
    "start": "195300",
    "end": "196440"
  },
  {
    "text": "to revisit the resiliency requirement.",
    "start": "196440",
    "end": "198540"
  },
  {
    "text": "DynamoDB has regional availability",
    "start": "198540",
    "end": "200670"
  },
  {
    "text": "and fault tolerance built in.",
    "start": "200670",
    "end": "202530"
  },
  {
    "text": "And Aurora clusters can span",
    "start": "202530",
    "end": "203940"
  },
  {
    "text": "across multiple availability zones,",
    "start": "203940",
    "end": "205740"
  },
  {
    "text": "protecting the application\nagainst downtime",
    "start": "205740",
    "end": "208080"
  },
  {
    "text": "caused by infrastructure failures.",
    "start": "208080",
    "end": "210480"
  },
  {
    "text": "If multi-regional disaster\nrecovery is a requirement,",
    "start": "210480",
    "end": "213720"
  },
  {
    "text": "DynamoDB Global Tables\nprovide a fully managed",
    "start": "213720",
    "end": "216510"
  },
  {
    "text": "multi-region and multi-active database.",
    "start": "216510",
    "end": "219239"
  },
  {
    "text": "With global tables, your\ndata replicates automatically",
    "start": "219240",
    "end": "222390"
  },
  {
    "text": "across your selected regions,",
    "start": "222390",
    "end": "223860"
  },
  {
    "text": "and you can deploy several\ncopies of your application",
    "start": "223860",
    "end": "226530"
  },
  {
    "text": "without code changes.",
    "start": "226530",
    "end": "228180"
  },
  {
    "text": "A similar approach can be used\nfrom the relational database",
    "start": "228180",
    "end": "231150"
  },
  {
    "text": "with Amazon Aurora Global Database",
    "start": "231150",
    "end": "233250"
  },
  {
    "text": "with the caveat that the replicas\ndeployed by these services",
    "start": "233250",
    "end": "236430"
  },
  {
    "text": "only support read capability.",
    "start": "236430",
    "end": "238709"
  },
  {
    "text": "In this episode, we\ndiscussed how to modernize",
    "start": "238710",
    "end": "241200"
  },
  {
    "text": "legacy applications using a\nhybrid database architecture",
    "start": "241200",
    "end": "244230"
  },
  {
    "text": "that leverages DynamoDB\nand Aurora databases.",
    "start": "244230",
    "end": "247086"
  },
  {
    "text": "Check out the links\nbelow for more details.",
    "start": "247087",
    "end": "249810"
  },
  {
    "text": "Thanks for watching \"Back to Basics\".",
    "start": "249810",
    "end": "251370"
  },
  {
    "text": "See you next time.",
    "start": "251370",
    "end": "252870"
  }
]