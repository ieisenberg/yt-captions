[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "hello welcome to one of the final sessions of reinvent this year I'm Greg Roth I'm with the identity and access",
    "start": "2320",
    "end": "8719"
  },
  {
    "text": "team I'm one of the engineers that designed large parts of the AWS Key Management Service and I'd like to talk",
    "start": "8719",
    "end": "14879"
  },
  {
    "text": "to you about using it in some of your applications today I'll be answering questions down",
    "start": "14879",
    "end": "21560"
  },
  {
    "text": "at the end I also see Todd STI from cloud HSM is over there and Ken beer should be somewhere so there should be",
    "start": "21560",
    "end": "28560"
  },
  {
    "text": "several of us to take your questions",
    "start": "28560",
    "end": "31960"
  },
  {
    "start": "33000",
    "end": "72000"
  },
  {
    "text": "we're going to start with a brief background and overview of encryption I promise I will only spend 5 minutes on",
    "start": "34000",
    "end": "40719"
  },
  {
    "text": "it and if you want a more in-depth treatment there are references at the end we'll go over what the AWS Key",
    "start": "40719",
    "end": "49000"
  },
  {
    "text": "Management Service is how it works what it can do for you walk through an integration of an example",
    "start": "49000",
    "end": "55760"
  },
  {
    "text": "application and then go into some depth on encryption cont context and the policies that you can write about it",
    "start": "55760",
    "end": "63600"
  },
  {
    "text": "look at some code samples using the Java SDK and then we'll look at",
    "start": "63600",
    "end": "69880"
  },
  {
    "text": "Grants I assume that you have some amount of experience using the AWS SDK",
    "start": "72880",
    "end": "78000"
  },
  {
    "text": "in some language that you have some data that you'd like to protect will a background un applied",
    "start": "78000",
    "end": "84560"
  },
  {
    "text": "cryptography is helpful it is not expected and the final thing that I is",
    "start": "84560",
    "end": "90200"
  },
  {
    "text": "that you have current client libraries in order to better protect your data the Key Management Service",
    "start": "90200",
    "end": "97079"
  },
  {
    "text": "requires that you connect using TLS sessions for forward secrecy and we have",
    "start": "97079",
    "end": "103079"
  },
  {
    "text": "seen reports that very old client libraries especially things like Java 5 Java 6 have problems connecting and",
    "start": "103079",
    "end": "110000"
  },
  {
    "text": "negotiating reasonable Cipher Suites you'll you will have the least problems getting started if you were using",
    "start": "110000",
    "end": "115240"
  },
  {
    "text": "upto-date software so",
    "start": "115240",
    "end": "120399"
  },
  {
    "start": "118000",
    "end": "155000"
  },
  {
    "text": "let's start with a brief overview of symmetric encryption the goal here is not to turn you into cryptographer but",
    "start": "120399",
    "end": "126920"
  },
  {
    "text": "to provide some background information symmetric encryption is where you are using the same key to encrypt and to",
    "start": "126920",
    "end": "134040"
  },
  {
    "text": "decrypt it is typically employed to achieve two security properties",
    "start": "134040",
    "end": "139280"
  },
  {
    "text": "confidentiality which is data cannot be read by parties other than those that",
    "start": "139280",
    "end": "144800"
  },
  {
    "text": "you expect and integrity which is that the data is protected from modification",
    "start": "144800",
    "end": "150680"
  },
  {
    "text": "there is some suggested reading in the",
    "start": "150680",
    "end": "154239"
  },
  {
    "start": "155000",
    "end": "317000"
  },
  {
    "text": "appendix at a very high level encryption is the process of combining a key with",
    "start": "156000",
    "end": "161519"
  },
  {
    "text": "some plain Text data to produce a cipher text for the types of encryption that we're talking about today the key will",
    "start": "161519",
    "end": "168519"
  },
  {
    "text": "typically be a 128 to 256bit random bit string the cipher text should have the",
    "start": "168519",
    "end": "175879"
  },
  {
    "text": "property that it is useless without the key or more formally it doesn't reveal any information about the plain text to",
    "start": "175879",
    "end": "182360"
  },
  {
    "text": "someone who does not have access to the key often with a caveat about length",
    "start": "182360",
    "end": "187440"
  },
  {
    "text": "typically you will learn something about the length of the plain text decryption is the reverse of the encryption op",
    "start": "187440",
    "end": "194120"
  },
  {
    "text": "operation so given a cipher text in a key you can produce a plain text it's",
    "start": "194120",
    "end": "199360"
  },
  {
    "text": "important to recognize that classic symmetric encryption provides only confidentiality and no Integrity so",
    "start": "199360",
    "end": "205799"
  },
  {
    "text": "modes like CBC or CTR of something like AES you are only",
    "start": "205799",
    "end": "211799"
  },
  {
    "text": "getting confidentiality it's actually hard to use confidentiality only encryption in",
    "start": "211799",
    "end": "219959"
  },
  {
    "text": "real systems and for those of you trying to take pictures of the slides these will all be posted later",
    "start": "219959",
    "end": "227120"
  },
  {
    "text": "so it's hard to use confidentiality only encryption in real systems most",
    "start": "227120",
    "end": "232439"
  },
  {
    "text": "developers expect that when they successfully decrypt an encrypted message the plain text that they get",
    "start": "232439",
    "end": "237760"
  },
  {
    "text": "back is unmodified and cannot have been tampered with to actually get that property you need something called",
    "start": "237760",
    "end": "243720"
  },
  {
    "text": "authenticated encryption examples include things like AES",
    "start": "243720",
    "end": "249640"
  },
  {
    "text": "GCM modern authenticated encryption schemes often we'll take something",
    "start": "251560",
    "end": "256919"
  },
  {
    "text": "called additional authenticated data this is some more data that isn't being encrypted but",
    "start": "256919",
    "end": "263639"
  },
  {
    "text": "is included in the cryptographic tag that is part of the authenticated encryption you can think of it as data",
    "start": "263639",
    "end": "270639"
  },
  {
    "text": "that will be signed but not necessarily included in the cipher text and so for",
    "start": "270639",
    "end": "276360"
  },
  {
    "text": "authenticated encryption with additional authenticated data the cipher text is the result of encrypting using a key and",
    "start": "276360",
    "end": "284320"
  },
  {
    "text": "specifying an aad some plain text and then decryption is the reverse and",
    "start": "284320",
    "end": "289720"
  },
  {
    "text": "decryption will only succeed if both the cipher text and the aad were not",
    "start": "289720",
    "end": "295479"
  },
  {
    "text": "modified one example that's used where this is commonly used is is Packet",
    "start": "295479",
    "end": "300639"
  },
  {
    "text": "headers where for example the packet headers may need to be in a particular location in the packet for Network gear",
    "start": "300639",
    "end": "306000"
  },
  {
    "text": "to process it but you still may want to Integrity protect them so you may encrypt the payload and use the packet",
    "start": "306000",
    "end": "312720"
  },
  {
    "text": "headers as additional authenticated data sending large objects over a",
    "start": "312720",
    "end": "320160"
  },
  {
    "start": "317000",
    "end": "377000"
  },
  {
    "text": "network is expensive it adds latency and",
    "start": "320160",
    "end": "325360"
  },
  {
    "text": "often you will want to instead use something called velope encryption where you will send off a key",
    "start": "325360",
    "end": "333199"
  },
  {
    "text": "to be encrypted and then locally encrypt bul data with the key um if you did not",
    "start": "333199",
    "end": "339680"
  },
  {
    "text": "catch SEC 301 which was an overview of an encryption that talk had a much",
    "start": "339680",
    "end": "345000"
  },
  {
    "text": "longer treatment of envelope encryption and I would suggest looking at it the overall idea is you use a master",
    "start": "345000",
    "end": "352759"
  },
  {
    "text": "key K1 to encrypt a data key K2 you then sender store the",
    "start": "352759",
    "end": "360160"
  },
  {
    "text": "data key encrypted with the master key and the intext encrypted with the data key someone who has that pair of values",
    "start": "360160",
    "end": "367479"
  },
  {
    "text": "can access the message by first decrypting the data key and then using the data key to decrypt the",
    "start": "367479",
    "end": "374960"
  },
  {
    "start": "377000",
    "end": "426000"
  },
  {
    "text": "message so why are you encrypting it all well the purpose of encryption is",
    "start": "377240",
    "end": "382280"
  },
  {
    "text": "typically to render data inaccessible without a key yes you are trying to",
    "start": "382280",
    "end": "387599"
  },
  {
    "text": "reduce the durability and the availab of your data in order to ensure that only",
    "start": "387599",
    "end": "392639"
  },
  {
    "text": "people with a key can read it authenticated encryption will also protect the data from",
    "start": "392639",
    "end": "397759"
  },
  {
    "text": "modification and you might do this because it's easier to tightly control access to a key than the data or because",
    "start": "397759",
    "end": "405160"
  },
  {
    "text": "you're trying to achieve independent controls for your key and your data you might also be encrypting",
    "start": "405160",
    "end": "411759"
  },
  {
    "text": "because your compliance people told you you had to if that is the only reason you're encrypting you might want to look",
    "start": "411759",
    "end": "418479"
  },
  {
    "text": "into using server site encryption where we've done most of this work for",
    "start": "418479",
    "end": "424120"
  },
  {
    "start": "426000",
    "end": "599000"
  },
  {
    "text": "you so until now a typical application running either on AWS or in your data",
    "start": "426240",
    "end": "433400"
  },
  {
    "text": "center would either store encryption keys in a config file in some locally",
    "start": "433400",
    "end": "440680"
  },
  {
    "text": "maintained Key Management infrastructure or in a Hardware security module the easiest way to get started is",
    "start": "440680",
    "end": "448120"
  },
  {
    "text": "of course to put your keys in config file and that's very commonly done and",
    "start": "448120",
    "end": "453520"
  },
  {
    "text": "the about the only good thing about it is it's easy and it's cheap key that live in a config file are",
    "start": "453520",
    "end": "460120"
  },
  {
    "text": "reasonably exposed they are exposed to vulnerabilities in your application so",
    "start": "460120",
    "end": "466680"
  },
  {
    "text": "something as common as a path traversal vulnerability in the application that allows files to be read off disk will",
    "start": "466680",
    "end": "473759"
  },
  {
    "text": "allow the keys to be read if you use this approach anything wrong with your oper",
    "start": "473759",
    "end": "479280"
  },
  {
    "text": "operating system or any other piece of software can often allow keys to be read off the host if you use this approach",
    "start": "479280",
    "end": "486919"
  },
  {
    "text": "and if you have changes in the set of parties that are authorized to log into",
    "start": "486919",
    "end": "491960"
  },
  {
    "text": "a host you don't get very good audit logs and so your audit logs will probably tell you that someone read the",
    "start": "491960",
    "end": "498479"
  },
  {
    "text": "key and you don't know what they did with it you don't know whether they made a copy of it and so when you have that",
    "start": "498479",
    "end": "505919"
  },
  {
    "text": "scenario you often will want to rotate the keys which will result in you often",
    "start": "505919",
    "end": "511280"
  },
  {
    "text": "needing to reencrypt bul data which is very expensive Hardware security modules are",
    "start": "511280",
    "end": "519839"
  },
  {
    "text": "great for security they are hardened devices that are purpose-built to hold",
    "start": "519839",
    "end": "525080"
  },
  {
    "text": "keys and perform operations under them and not let you extract the",
    "start": "525080",
    "end": "531440"
  },
  {
    "text": "keys there are where you need them they are a great solution they take a lot of work to",
    "start": "531640",
    "end": "538680"
  },
  {
    "text": "integrate with they're hard to get started with we also have Cloud HSM that makes it very easy for you to provision",
    "start": "538680",
    "end": "544399"
  },
  {
    "text": "a Hardware security module which is a great way to get a fips 140 device for your use the thing to be aware of there",
    "start": "544399",
    "end": "552399"
  },
  {
    "text": "is that redundancy is your responsibility and capacity is provisioned in units of whole hsms so",
    "start": "552399",
    "end": "560360"
  },
  {
    "text": "you buy one or two hsms they run around 1,300 a month unless the price has",
    "start": "560360",
    "end": "566920"
  },
  {
    "text": "changed and you start with two for redundancy as you add capacity you add",
    "start": "566920",
    "end": "572959"
  },
  {
    "text": "it in units of whole hsms and again redundancy availability is all your",
    "start": "572959",
    "end": "578839"
  },
  {
    "text": "responsibility if you're looking for something that's easier to get started with the AWS Key Management Service",
    "start": "578839",
    "end": "585920"
  },
  {
    "text": "is integrated into the AWS SDK and is a lower friction path to getting up and",
    "start": "585920",
    "end": "592279"
  },
  {
    "text": "running on something significantly better than a config",
    "start": "592279",
    "end": "598000"
  },
  {
    "text": "file so let's jump into an overview of the service",
    "start": "598120",
    "end": "604600"
  },
  {
    "start": "599000",
    "end": "605000"
  },
  {
    "text": "the Key Management Service will create a new resource type called the customer",
    "start": "604600",
    "end": "611079"
  },
  {
    "start": "605000",
    "end": "664000"
  },
  {
    "text": "master key or cmk this is a regional resource it will",
    "start": "611079",
    "end": "617360"
  },
  {
    "text": "perform cryptographic operations for you using customer master keys for every operation that it does it",
    "start": "617360",
    "end": "624959"
  },
  {
    "text": "will enforce policy on that operation so if if you're familiar with S3 bucket",
    "start": "624959",
    "end": "630920"
  },
  {
    "text": "policies customer master keys within the Key Management Service have an analogous policy called a key policy that applies",
    "start": "630920",
    "end": "638399"
  },
  {
    "text": "to all operations it also will provide you with audit records through cloud trail of every operation that ever",
    "start": "638399",
    "end": "644600"
  },
  {
    "text": "happened under your customer master key it automates durability scalability and",
    "start": "644600",
    "end": "649880"
  },
  {
    "text": "rotation and you get HSM grade security for your applications in about an hour",
    "start": "649880",
    "end": "655839"
  },
  {
    "text": "starting at about a dollar a month plus I think three cents per 10,000",
    "start": "655839",
    "end": "662240"
  },
  {
    "start": "664000",
    "end": "720000"
  },
  {
    "text": "operations but it's important to realize that there are things it won't do for",
    "start": "664160",
    "end": "669360"
  },
  {
    "text": "you so you can't sprinkle crypto fairy dust on your applications and magically",
    "start": "669360",
    "end": "674600"
  },
  {
    "text": "render them secure another thing to bear in mind is that keys in the Key Management Service are Regional",
    "start": "674600",
    "end": "680880"
  },
  {
    "text": "resources they do not leave the region in which they were created this means that if you're backing up encrypted data",
    "start": "680880",
    "end": "688240"
  },
  {
    "text": "you will want to reencrypt typically the envelope key to the Target region to ensure that your data that you intend to",
    "start": "688240",
    "end": "695079"
  },
  {
    "text": "replicate somewhere else can actually be read somewhere else and direct encryption using the Key",
    "start": "695079",
    "end": "701440"
  },
  {
    "text": "Management Service is limited to 4K of data this is to optimize for latency",
    "start": "701440",
    "end": "707160"
  },
  {
    "text": "again you can use envelope encryption the normal use case is to encrypt as",
    "start": "707160",
    "end": "713160"
  },
  {
    "text": "Keys although small messages can also make sense in some applications",
    "start": "713160",
    "end": "720959"
  },
  {
    "start": "720000",
    "end": "750000"
  },
  {
    "text": "so the customer master key is the resource type managed by the Key Management Service it is a",
    "start": "721079",
    "end": "726800"
  },
  {
    "text": "non-exportable key so it is created within the Key Management Service all",
    "start": "726800",
    "end": "731959"
  },
  {
    "text": "the operations under it are performed within the Key Management Service which means that you have audit",
    "start": "731959",
    "end": "738199"
  },
  {
    "text": "trails and they're subject to policy controls the policy controls are either through the AWS policy language or",
    "start": "738199",
    "end": "744320"
  },
  {
    "text": "something called grants that we'll discuss at the end",
    "start": "744320",
    "end": "750880"
  },
  {
    "start": "750000",
    "end": "773000"
  },
  {
    "text": "so to actually get started using the Key Management Service you create a key for use in your application you can do this",
    "start": "751000",
    "end": "758160"
  },
  {
    "text": "through the console the API or the CLI as part of that key creation you",
    "start": "758160",
    "end": "763279"
  },
  {
    "text": "will apply a policy to the key that actually lets your application perform encryption and decryption using the key",
    "start": "763279",
    "end": "770480"
  },
  {
    "text": "and then you'll write some code so this is what the Key Management",
    "start": "770480",
    "end": "776320"
  },
  {
    "start": "773000",
    "end": "838000"
  },
  {
    "text": "Service console looks like it's actually integrated into the identity and access Management",
    "start": "776320",
    "end": "781519"
  },
  {
    "text": "console you can see here that there's an encryption key section down at the bottom and if you've",
    "start": "781519",
    "end": "789399"
  },
  {
    "text": "already been using encryption within EBS you'll discover that you",
    "start": "789399",
    "end": "794959"
  },
  {
    "text": "already have an AWS EBS key EBS encryption has actually been built on",
    "start": "794959",
    "end": "800680"
  },
  {
    "text": "top of the Key Management Service since it was released and what we're giving you now is the ability to create your",
    "start": "800680",
    "end": "806800"
  },
  {
    "text": "own Keys use this in your own applications as well as set policy on",
    "start": "806800",
    "end": "812800"
  },
  {
    "text": "your keys and get the audit Trails so you can use custom keys where you set the policy either through AWS services",
    "start": "812800",
    "end": "820880"
  },
  {
    "text": "or in your own application so you'll click create key here and you might note that there's a",
    "start": "820880",
    "end": "827320"
  },
  {
    "text": "region selector right at the filter box you want to select the region where",
    "start": "827320",
    "end": "832360"
  },
  {
    "text": "you want the key created Keys cannot be moved between regions once you create",
    "start": "832360",
    "end": "837759"
  },
  {
    "text": "them you'll be prompted for an alias which is",
    "start": "837759",
    "end": "843000"
  },
  {
    "start": "838000",
    "end": "867000"
  },
  {
    "text": "a human readable name there are some more advanced features where you can",
    "start": "843000",
    "end": "848079"
  },
  {
    "text": "point you can repoint aliases at different keys if you want to automically switch between backing Keys",
    "start": "848079",
    "end": "854320"
  },
  {
    "text": "either for rotation or other use cases like that there's also a description the",
    "start": "854320",
    "end": "859600"
  },
  {
    "text": "description is just instructions for your developers as to what types of data to protect with this",
    "start": "859600",
    "end": "866560"
  },
  {
    "start": "867000",
    "end": "890000"
  },
  {
    "text": "key you're prompted for key administrators these are the people who are given policy access to actually edit",
    "start": "867680",
    "end": "876000"
  },
  {
    "text": "the policy on the key and then key usage permissions which are the",
    "start": "876000",
    "end": "882079"
  },
  {
    "text": "users that are allowed to perform operations using the",
    "start": "882079",
    "end": "888600"
  },
  {
    "text": "key so to illustrate the major Concepts in the AWS Key Management",
    "start": "890240",
    "end": "895480"
  },
  {
    "text": "Service and how they're used in practice I'm going to walk you through through the integration of KMS into a small",
    "start": "895480",
    "end": "901880"
  },
  {
    "text": "sample application that you may already be familiar with the Amazon simple storage service",
    "start": "901880",
    "end": "909440"
  },
  {
    "text": "was one of the first applications that we integrated with the Key Management Service and so let's walk through what",
    "start": "909440",
    "end": "917199"
  },
  {
    "start": "916000",
    "end": "1015000"
  },
  {
    "text": "storing an object looks like in S3 without the key Management Service being",
    "start": "917199",
    "end": "922560"
  },
  {
    "text": "involved so you'll have a",
    "start": "922560",
    "end": "927519"
  },
  {
    "text": "client or not you have a client at the top that sends requests to an S3 web",
    "start": "927600",
    "end": "933839"
  },
  {
    "text": "server these are typically signed requests and include some object that you want to",
    "start": "933839",
    "end": "939600"
  },
  {
    "text": "put the S3 web server will extract some metadata from the request including the",
    "start": "939600",
    "end": "944800"
  },
  {
    "text": "signature send it off to an authentication component the authentication component will figure",
    "start": "944800",
    "end": "951759"
  },
  {
    "text": "out who the request is from any policies that should apply such as I am user",
    "start": "951759",
    "end": "957839"
  },
  {
    "text": "policies and then we'll return some identity and policy information back to",
    "start": "957839",
    "end": "964120"
  },
  {
    "text": "S3 S3 will pull in bucket policies that may apply to your bucket and make an",
    "start": "964120",
    "end": "969560"
  },
  {
    "text": "authorization decision about whether the request should or should not be processed if S3 decides to process the",
    "start": "969560",
    "end": "977000"
  },
  {
    "text": "request S3 will then take the object cause it to be stored such that it can",
    "start": "977000",
    "end": "982680"
  },
  {
    "text": "be retrieved later and details of that are not particularly relevant to",
    "start": "982680",
    "end": "988120"
  },
  {
    "text": "encryption and to actually read data Works largely",
    "start": "988120",
    "end": "994959"
  },
  {
    "text": "the same way a signed request comes in metadata including the signature is",
    "start": "994959",
    "end": "1000319"
  },
  {
    "text": "extracted identity and policy is determined authorization check is",
    "start": "1000319",
    "end": "1005440"
  },
  {
    "text": "performed and if you have access to the object then S3 will reconstruct it for",
    "start": "1005440",
    "end": "1011360"
  },
  {
    "text": "you and hand it back now let's add in the Key Management",
    "start": "1011360",
    "end": "1017199"
  },
  {
    "start": "1015000",
    "end": "1175000"
  },
  {
    "text": "Service so so again let's start with the right path S3 performs the same authorization",
    "start": "1017199",
    "end": "1025520"
  },
  {
    "text": "that it does when it gets a request this time the request can choose",
    "start": "1025520",
    "end": "1030798"
  },
  {
    "text": "to specify the ID for a key in the Key Management Service or it can specify to",
    "start": "1030799",
    "end": "1036280"
  },
  {
    "text": "use a default key again request goes off",
    "start": "1036280",
    "end": "1042760"
  },
  {
    "text": "policy and identity for the request is determined this time S3 also get some",
    "start": "1042760",
    "end": "1048199"
  },
  {
    "text": "inform information that it can use to prove that it has a request from you and that's sent off to the Key",
    "start": "1048199",
    "end": "1055039"
  },
  {
    "text": "Management Service S3 requests that the Key Management Service generate a unique per",
    "start": "1055039",
    "end": "1061679"
  },
  {
    "text": "object encryption key and encrypt that key using the specified master",
    "start": "1061679",
    "end": "1067840"
  },
  {
    "text": "key that is returned from the Key Management Service to S3 again that is a",
    "start": "1068600",
    "end": "1074760"
  },
  {
    "text": "unique per object key and the per object key encrypted using your master",
    "start": "1074760",
    "end": "1081120"
  },
  {
    "text": "key S3 encrypts your data using the unique per object key and then it stores",
    "start": "1081120",
    "end": "1088840"
  },
  {
    "text": "the data encrypted using the unique per object key along with the per object key",
    "start": "1088840",
    "end": "1095559"
  },
  {
    "text": "that is encrypted using your master key to actually retrieve your data",
    "start": "1095559",
    "end": "1103760"
  },
  {
    "text": "similar process request comes into S3 to retrieve the data",
    "start": "1103760",
    "end": "1110320"
  },
  {
    "text": "S3 pulls out the encrypted object and the per object key that was encrypted",
    "start": "1111720",
    "end": "1117360"
  },
  {
    "text": "using your master key sends it to the Key Management Service along with proof that it has a request from you the key",
    "start": "1117360",
    "end": "1124240"
  },
  {
    "text": "Management Service independently enforces policy looks at the policy that is on the master key and determines",
    "start": "1124240",
    "end": "1131720"
  },
  {
    "text": "whether the requestor that made the original request to S3 is or is not",
    "start": "1131720",
    "end": "1136919"
  },
  {
    "text": "authorized to actually have S3 decrypt this data for",
    "start": "1136919",
    "end": "1142360"
  },
  {
    "text": "them if that checks out the Key Management Service decrypts the pro object key it also emits some audit",
    "start": "1142360",
    "end": "1149880"
  },
  {
    "text": "records to cloud trail at this point that give you independent audits of access to the data and as we'll see",
    "start": "1149880",
    "end": "1155360"
  },
  {
    "text": "later those audit records even tell you which object is being accessed S3 uses the local copy of the",
    "start": "1155360",
    "end": "1165120"
  },
  {
    "text": "decrypted key uses it to decrypt your data and sends it back to",
    "start": "1165120",
    "end": "1171559"
  },
  {
    "text": "you one of the key benefits of using the Key Management Service in your",
    "start": "1174799",
    "end": "1179880"
  },
  {
    "start": "1175000",
    "end": "1226000"
  },
  {
    "text": "application is that you get highly flexible policy controls and highly flexible",
    "start": "1179880",
    "end": "1186280"
  },
  {
    "text": "audit the audit logs that you get out of the Key Management Service wouldn't be terribly useful to you if all they told",
    "start": "1186280",
    "end": "1192120"
  },
  {
    "text": "you was someone encrypted something or even Bob decrypted something at 10:00",
    "start": "1192120",
    "end": "1197960"
  },
  {
    "text": "a.m. and so to help you understand exactly what data was accessed we have a feature",
    "start": "1197960",
    "end": "1205120"
  },
  {
    "text": "called encryption context similarly well you can get a lot of policy granularity at the key level",
    "start": "1205120",
    "end": "1212000"
  },
  {
    "text": "for example Bob May decrypt things that were encrypted using key3 you get even more flexibility",
    "start": "1212000",
    "end": "1219120"
  },
  {
    "text": "if you use encryption context to give us metadata about what is being encrypted and",
    "start": "1219120",
    "end": "1225360"
  },
  {
    "start": "1226000",
    "end": "1351000"
  },
  {
    "text": "decrypted so encryption context is our structured interface to additional",
    "start": "1226600",
    "end": "1231919"
  },
  {
    "text": "authenticated data which is it is a string string map",
    "start": "1231919",
    "end": "1237320"
  },
  {
    "text": "of name value pairs so it's a set of encryption context name like data",
    "start": "1237320",
    "end": "1242440"
  },
  {
    "text": "classification and encryption context value like critical or encryption context name customer ID in value 1 2 3",
    "start": "1242440",
    "end": "1251320"
  },
  {
    "text": "4 5 and encryption context can be used on",
    "start": "1251320",
    "end": "1256840"
  },
  {
    "text": "several different API calls within the Key Management Service so when you're",
    "start": "1256840",
    "end": "1262880"
  },
  {
    "text": "performing encryption or key generation the encryption context can be whatever",
    "start": "1262880",
    "end": "1268960"
  },
  {
    "text": "value is allowed by your policy so if the policy says that Bob May specify a",
    "start": "1268960",
    "end": "1274799"
  },
  {
    "text": "customer ID in his encryption context and may only encrypt things where the data classification is critical then",
    "start": "1274799",
    "end": "1282720"
  },
  {
    "text": "that is the policy that is enforced decryption in addition to being subject to Poli policy has an additional",
    "start": "1282720",
    "end": "1289480"
  },
  {
    "text": "constraint the encryption context that you specify when you encrypt must be",
    "start": "1289480",
    "end": "1294880"
  },
  {
    "text": "exactly the same as the encryption context that you specify when you decrypt so when you encrypt the",
    "start": "1294880",
    "end": "1301080"
  },
  {
    "text": "encryption context is logged to cloud tril and is available for",
    "start": "1301080",
    "end": "1307120"
  },
  {
    "text": "policy and when you decrypt it is again available for policy loged to cloud",
    "start": "1307120",
    "end": "1313240"
  },
  {
    "text": "trail and must be the same this way you can ensure that when you're encrypting a",
    "start": "1313240",
    "end": "1319200"
  },
  {
    "text": "piece of data that you say is a credit card number the first time around that when someone decrypts it they also have",
    "start": "1319200",
    "end": "1324760"
  },
  {
    "text": "to say that it's a credit card number and you may choose to store the encryption context deex to the cipher",
    "start": "1324760",
    "end": "1330640"
  },
  {
    "text": "text or it may be information that you already have available from other sources for example a row ID in a",
    "start": "1330640",
    "end": "1338880"
  },
  {
    "text": "database or a file name and so whether you choose to store it or reconstruct it",
    "start": "1338880",
    "end": "1344760"
  },
  {
    "text": "is up to you but you do need to be able to reconstruct the exact same",
    "start": "1344760",
    "end": "1349960"
  },
  {
    "text": "value again logged in cloud trail do not include sensitive data a good encryption",
    "start": "1351559",
    "end": "1357240"
  },
  {
    "text": "context is this is Bob's credit card a bad encryption context is this is the credit card and then the full",
    "start": "1357240",
    "end": "1365760"
  },
  {
    "text": "number you you will want information that will tell you what data is being",
    "start": "1365919",
    "end": "1371120"
  },
  {
    "text": "accessed so that when you're going back and looking at your logs you can tell whose data was accessed when and where",
    "start": "1371120",
    "end": "1377960"
  },
  {
    "text": "or information that you want to write policy controls about things like data classifications project names to scope",
    "start": "1377960",
    "end": "1384799"
  },
  {
    "text": "down what types of data or which data can be handled in a given",
    "start": "1384799",
    "end": "1390679"
  },
  {
    "start": "1391000",
    "end": "1498000"
  },
  {
    "text": "application some examples just to put the slide up so within Amazon S3 the",
    "start": "1391240",
    "end": "1397360"
  },
  {
    "text": "encryption context is AWS S3 RN and then",
    "start": "1397360",
    "end": "1402520"
  },
  {
    "text": "the full AR of your object this way when S3 encrypt through the Key Management",
    "start": "1402520",
    "end": "1409080"
  },
  {
    "text": "Service is used you can tell from the key management logs which data was accessed you can write policy to it if",
    "start": "1409080",
    "end": "1416200"
  },
  {
    "text": "you want and I'll get into that in a minute within EBS it is the AWS EBS ID",
    "start": "1416200",
    "end": "1424400"
  },
  {
    "text": "and then a volume ID so vol 1 2 3 4 5 would be this is the key that is used",
    "start": "1424400",
    "end": "1432360"
  },
  {
    "text": "to encrypt the volume vol 1 2 3 4 5 so this way you can tell if you use",
    "start": "1432360",
    "end": "1438400"
  },
  {
    "text": "ABS encryption and look at the cloud trail logs which volume was mounted to which instance and you could write",
    "start": "1438400",
    "end": "1444520"
  },
  {
    "text": "policy controls to it if you wanted within your applications data",
    "start": "1444520",
    "end": "1449799"
  },
  {
    "text": "classifications project names customer IDs departments are all good examples of",
    "start": "1449799",
    "end": "1455880"
  },
  {
    "text": "encryption context let's jump into an example of a",
    "start": "1455880",
    "end": "1463640"
  },
  {
    "text": "policy so this and again these slides will be posted don't feel like you have",
    "start": "1463640",
    "end": "1468960"
  },
  {
    "text": "to write these down encryption context policies use something called conditions",
    "start": "1468960",
    "end": "1475440"
  },
  {
    "text": "within the policy language and so this policy allows the principal gram to",
    "start": "1475440",
    "end": "1481840"
  },
  {
    "text": "decrypt as long as the encryption context value project or the encryption",
    "start": "1481840",
    "end": "1488039"
  },
  {
    "text": "context named project has the value green",
    "start": "1488039",
    "end": "1493080"
  },
  {
    "text": "Jupiter this one is a similar policy although it",
    "start": "1496760",
    "end": "1503200"
  },
  {
    "start": "1498000",
    "end": "1571000"
  },
  {
    "text": "merely says that a data classification must be set so going back for a moment",
    "start": "1503200",
    "end": "1510320"
  },
  {
    "text": "for this example we used KMS encryption context project where project was the",
    "start": "1510320",
    "end": "1515600"
  },
  {
    "text": "encryption context name as the left side and then the value is the",
    "start": "1515600",
    "end": "1524080"
  },
  {
    "text": "right side here we're using encryption content text key which is the name and",
    "start": "1524080",
    "end": "1532039"
  },
  {
    "text": "then the value here is the name that was specified so for the encryption",
    "start": "1532039",
    "end": "1538320"
  },
  {
    "text": "context of classification critical in Project green",
    "start": "1538320",
    "end": "1543480"
  },
  {
    "text": "Jupiter if I want to require a particular value I use this this syntax",
    "start": "1543480",
    "end": "1549919"
  },
  {
    "text": "KMS encryption context and then the encryption context key and then the value and if I want",
    "start": "1549919",
    "end": "1556679"
  },
  {
    "text": "to instead just require that it be present I can use this syntax encryption",
    "start": "1556679",
    "end": "1562240"
  },
  {
    "text": "context key which is the set of encryption context Keys present on the",
    "start": "1562240",
    "end": "1568960"
  },
  {
    "start": "1571000",
    "end": "1608000"
  },
  {
    "text": "request and we'll build more on this in a minute but let's jump into the SDK so",
    "start": "1571360",
    "end": "1576760"
  },
  {
    "text": "while there are many apis available in the Key Management Service you'll find that creation of master keys is",
    "start": "1576760",
    "end": "1583159"
  },
  {
    "text": "something that you might be perfectly happy doing infrequently through the console and so I'm only going to talk",
    "start": "1583159",
    "end": "1588960"
  },
  {
    "text": "about the apis that you would use in your application to directly encrypt and decrypt",
    "start": "1588960",
    "end": "1596080"
  },
  {
    "text": "data there are three that I expect you to use heavily there is encrypt decrypt",
    "start": "1597000",
    "end": "1604240"
  },
  {
    "text": "and generate data key so to actually set up a KMS client",
    "start": "1604240",
    "end": "1611360"
  },
  {
    "start": "1608000",
    "end": "1661000"
  },
  {
    "text": "and this is Java example you just instantiate a new KMS client you set the",
    "start": "1611360",
    "end": "1616640"
  },
  {
    "text": "region that you want to talk to and you might note here that I am not setting up credentials in any way if you're running",
    "start": "1616640",
    "end": "1623760"
  },
  {
    "text": "on ec2 the sdks will automatically find credentials for you as long as you use rols for",
    "start": "1623760",
    "end": "1630000"
  },
  {
    "text": "ec2 that helps you avoid part of our goal here is to help you avoid the pain",
    "start": "1630000",
    "end": "1635320"
  },
  {
    "text": "of managing keys and by using rules for ec2 you don't have to manage the credentials that you use to talk to KMS",
    "start": "1635320",
    "end": "1642760"
  },
  {
    "text": "those are distributed for you using rules for ec2 we rotate them every few hours",
    "start": "1642760",
    "end": "1649120"
  },
  {
    "text": "if you're running not in ec2 you can use a properties file or whatever other SDK",
    "start": "1649120",
    "end": "1654600"
  },
  {
    "text": "specific configuration is used to set credentials please don't put them in your source",
    "start": "1654600",
    "end": "1661159"
  },
  {
    "start": "1661000",
    "end": "1765000"
  },
  {
    "text": "code and if you do put them in your source code please don't post it",
    "start": "1661159",
    "end": "1666600"
  },
  {
    "text": "publicly and so let's jump into the encrypt call and again these slides are",
    "start": "1666679",
    "end": "1672640"
  },
  {
    "text": "available please don't copy them encrypt takes a key ID",
    "start": "1672640",
    "end": "1678080"
  },
  {
    "text": "which is a non-secret identifier for the key that is used in the Key Management",
    "start": "1678080",
    "end": "1684559"
  },
  {
    "text": "Service an encryption context which is a map of encryption context key to",
    "start": "1684559",
    "end": "1690480"
  },
  {
    "text": "encryption context value and then the plain text that you want to encrypt and so here I have a key ID of",
    "start": "1690480",
    "end": "1697799"
  },
  {
    "text": "Alias my application key in a real system i' probably put this in a config",
    "start": "1697799",
    "end": "1703880"
  },
  {
    "text": "file but by using an alias here rather than the absolute key ID I have the",
    "start": "1703880",
    "end": "1709159"
  },
  {
    "text": "flexibility of repointing it to a different key later I also won't have to update this if I move it between regions",
    "start": "1709159",
    "end": "1715519"
  },
  {
    "text": "or between accounts plain text and an encryption",
    "start": "1715519",
    "end": "1721000"
  },
  {
    "text": "context here I'm just using a Singleton map to set the department to finance and",
    "start": "1721000",
    "end": "1726679"
  },
  {
    "text": "that's mostly because anything else wouldn't fit on one line on the slide you can set a map with multiple",
    "start": "1726679",
    "end": "1733240"
  },
  {
    "text": "values in the encryption context the limit is documented I believe it somewhere around 8K of encryption",
    "start": "1733240",
    "end": "1740519"
  },
  {
    "text": "context and then build a request which is just an encryption request where you specify a key ID and an encryption",
    "start": "1740519",
    "end": "1747720"
  },
  {
    "text": "context and a plain text you get back a result the cipher text blob on the",
    "start": "1747720",
    "end": "1753039"
  },
  {
    "text": "result is your encrypted data you can store that encrypted data wherever you want in order to actually access that",
    "start": "1753039",
    "end": "1759840"
  },
  {
    "text": "encrypted data you have to make a decrypt call through the Key Management Service let's look at a decrypt call so",
    "start": "1759840",
    "end": "1767960"
  },
  {
    "start": "1765000",
    "end": "1835000"
  },
  {
    "text": "decrypt again similar setup note that I have to have exactly the same encryption",
    "start": "1767960",
    "end": "1774120"
  },
  {
    "text": "context and you also might note that on a decrypt request I am not specifying",
    "start": "1774120",
    "end": "1779320"
  },
  {
    "text": "the key ID the cipher texts that are produced by the Key Management Service",
    "start": "1779320",
    "end": "1785640"
  },
  {
    "text": "encode information that specifically identifies the key and the version of the key so that you don't have to track",
    "start": "1785640",
    "end": "1792279"
  },
  {
    "text": "that piece we do return a ky ID during decryption to help you find",
    "start": "1792279",
    "end": "1798480"
  },
  {
    "text": "to help you determine whether this is a key that you wanted to decrypt under you can also completely control that through",
    "start": "1798480",
    "end": "1804919"
  },
  {
    "text": "policy so you can give your server access to decrypt under a specific key",
    "start": "1804919",
    "end": "1810279"
  },
  {
    "text": "and no other key and then decrypt will return unauthorized if you get a cipher text that was encrypted under someone",
    "start": "1810279",
    "end": "1816720"
  },
  {
    "text": "else's key and I'll come back to that at the end if we have time",
    "start": "1816720",
    "end": "1824720"
  },
  {
    "text": "so ah yes where's my key ID again you do not specify a key ID on",
    "start": "1826240",
    "end": "1834440"
  },
  {
    "text": "decrypt the third call that I expect to see have a use of and actually you'll probably use this more often than you",
    "start": "1834679",
    "end": "1840960"
  },
  {
    "start": "1835000",
    "end": "1890000"
  },
  {
    "text": "use encrypt is generate data key so generate data key is equivalent to",
    "start": "1840960",
    "end": "1847679"
  },
  {
    "text": "either you generating random numbers locally or you asking us to Generate random numbers and yes there is a",
    "start": "1847679",
    "end": "1854840"
  },
  {
    "text": "Generate random API and yes you may want to use it at least to seed your local random number generator if unless you",
    "start": "1854840",
    "end": "1861720"
  },
  {
    "text": "have another good source of entropy and then encrypting that random data key and so this is primarily to save you",
    "start": "1861720",
    "end": "1869360"
  },
  {
    "text": "some latency in that otherwise you'd have to make two calls here you can get one call and it's a little clearer from",
    "start": "1869360",
    "end": "1875279"
  },
  {
    "text": "the audit logs what you did and so you call generate data key you pass in a key ID an encryption context and you get",
    "start": "1875279",
    "end": "1883120"
  },
  {
    "text": "back a pair of a cipher text that is encrypted copy of the data key and the",
    "start": "1883120",
    "end": "1889120"
  },
  {
    "text": "data key and so here's some sample code I'll go through it a little more slowly",
    "start": "1889120",
    "end": "1895559"
  },
  {
    "start": "1890000",
    "end": "2011000"
  },
  {
    "text": "you set up a key ID encryption context make a generate data key request tell us",
    "start": "1895559",
    "end": "1902559"
  },
  {
    "text": "that you're looking for an aes256 key specify the key ID of the master key",
    "start": "1902559",
    "end": "1909519"
  },
  {
    "text": "within the Key Management Service that you want to use the encryption context and then what",
    "start": "1909519",
    "end": "1915880"
  },
  {
    "text": "you get back has two properties that you care about it has a plain text that",
    "start": "1915880",
    "end": "1921159"
  },
  {
    "text": "plain text is the generated data key that you would use with something like bouncy castle to locally encrypt your",
    "start": "1921159",
    "end": "1928240"
  },
  {
    "text": "bulk data and then a cipher text blob the cipher text blob is just the data",
    "start": "1928240",
    "end": "1934120"
  },
  {
    "text": "key encrypted under your master key so you will locally encrypt using the plain",
    "start": "1934120",
    "end": "1940440"
  },
  {
    "text": "text value as your key you will then erase that you'll store the result of",
    "start": "1940440",
    "end": "1946399"
  },
  {
    "text": "your local encrytion along with the cipher text that was produced by generate data key and you may or may not",
    "start": "1946399",
    "end": "1953200"
  },
  {
    "text": "need to store your encryption context depending on whether it's something you can reconstruct or something that you need to store and then when you're",
    "start": "1953200",
    "end": "1960559"
  },
  {
    "text": "trying to access that data you'll take the KMS Cipher text send it back to KMS",
    "start": "1960559",
    "end": "1966399"
  },
  {
    "text": "decrypt that'll give you the per object key you use that to decrypt your local",
    "start": "1966399",
    "end": "1971480"
  },
  {
    "text": "value it's important to note that the key management service is not a storage service and will not store data keys for",
    "start": "1971480",
    "end": "1977960"
  },
  {
    "text": "you you it's perfectly safe to store the encrypted data key right next to the",
    "start": "1977960",
    "end": "1984279"
  },
  {
    "text": "data encrypted with that key because again it is an encrypted copy of the data key and it can only be accessed by",
    "start": "1984279",
    "end": "1990039"
  },
  {
    "text": "sending it back to kmsd Crypt please do not store the pl Text",
    "start": "1990039",
    "end": "1996360"
  },
  {
    "text": "data key right next to the data that was encrypted with the data key that's a lot less",
    "start": "1996360",
    "end": "2002600"
  },
  {
    "text": "useful if you're going to do that just don't encrypt or use something that doesn't need a key like rot 13 or the",
    "start": "2002679",
    "end": "2008960"
  },
  {
    "text": "null Cipher so let's talk about grants for a couple",
    "start": "2008960",
    "end": "2015639"
  },
  {
    "start": "2011000",
    "end": "2188000"
  },
  {
    "text": "minutes so show of hands who has used S3 bucket policies or is familiar with them",
    "start": "2015639",
    "end": "2021440"
  },
  {
    "text": "at all okay so within the AWS policy",
    "start": "2021440",
    "end": "2028360"
  },
  {
    "text": "ecosystem there are two primary types of policy there are policies that are set",
    "start": "2028360",
    "end": "2034880"
  },
  {
    "text": "on users or groups and and then there are resource policies S3 bucket policies",
    "start": "2034880",
    "end": "2040399"
  },
  {
    "text": "are an example of a resource policy and the way policy evaluation works is when",
    "start": "2040399",
    "end": "2046240"
  },
  {
    "text": "a request comes in the all of the policy that's relevant",
    "start": "2046240",
    "end": "2051560"
  },
  {
    "text": "which is both policy on the user and policy on the resource is pulled in and",
    "start": "2051560",
    "end": "2056760"
  },
  {
    "text": "is evaluated to determine whether access is allowed and So within the Key Management",
    "start": "2056760",
    "end": "2062560"
  },
  {
    "text": "Service we actually support two different types of resource policy we support key policies which use the",
    "start": "2062560",
    "end": "2070560"
  },
  {
    "text": "policy language which is the normal Json Syntax for policies that you're familiar with we also support grants it's not",
    "start": "2070560",
    "end": "2078398"
  },
  {
    "text": "quite the same as an S3 object tle but it's somewhat similar so with S3 you",
    "start": "2078399",
    "end": "2084158"
  },
  {
    "text": "have both bucket policies which are fully flexible and then but you get only",
    "start": "2084159",
    "end": "2089440"
  },
  {
    "text": "get 20K of within KMS it's the same story key policies are limited to 20K of",
    "start": "2089440",
    "end": "2095240"
  },
  {
    "text": "policy grants are are a secondary type of policy they're less expressive in",
    "start": "2095240",
    "end": "2101440"
  },
  {
    "text": "that you don't have the full condition syntax you only have a couple of condition types",
    "start": "2101440",
    "end": "2107560"
  },
  {
    "text": "but what they what you get from them is more granular management of the ability",
    "start": "2107560",
    "end": "2113359"
  },
  {
    "text": "to manage permissions so policy management in AWS has always been",
    "start": "2113359",
    "end": "2119440"
  },
  {
    "text": "somewhat binary either a user has permission to replace a particular policy by given by being given access to",
    "start": "2119440",
    "end": "2127119"
  },
  {
    "text": "the put policy API or they don't have that access and it's very hard to",
    "start": "2127119",
    "end": "2132880"
  },
  {
    "text": "control what policy they can author grants give you the flexibility to more",
    "start": "2132880",
    "end": "2138359"
  },
  {
    "text": "finely tune delegation and allow Dynamic management of permissions and so a grant is a five",
    "start": "2138359",
    "end": "2145680"
  },
  {
    "text": "tupal it is a key and that's Grant a grant always applies to exactly one key",
    "start": "2145680",
    "end": "2152839"
  },
  {
    "text": "a grantee principle the grantee principle is the principle that the grant applies",
    "start": "2152839",
    "end": "2158480"
  },
  {
    "text": "to a set of operations there is a documented list of supported operations",
    "start": "2158480",
    "end": "2163760"
  },
  {
    "text": "that are things like encrypt decrypt generate data key create Grant to",
    "start": "2163760",
    "end": "2169520"
  },
  {
    "text": "supported operation which means you can use this to chain the ability to Grant",
    "start": "2169520",
    "end": "2174680"
  },
  {
    "text": "specific access a grant constraint which is optional and I'll get to that in a",
    "start": "2174680",
    "end": "2179880"
  },
  {
    "text": "minute and a retiring principle also optional this is the principle that's allowed to make the grant go away",
    "start": "2179880",
    "end": "2188680"
  },
  {
    "start": "2188000",
    "end": "2270000"
  },
  {
    "text": "so let's recap the difference between a policy and a grant policies are fully",
    "start": "2188680",
    "end": "2194400"
  },
  {
    "text": "expressive Limited in size the policy itself gives you finer",
    "start": "2194400",
    "end": "2200319"
  },
  {
    "text": "granularity control but policy management is either you can modify the",
    "start": "2200319",
    "end": "2206200"
  },
  {
    "text": "policy or you can't and if you can modify the policy you can do whatever you want and concurrent modification",
    "start": "2206200",
    "end": "2213599"
  },
  {
    "text": "policies is hard so if you have many running processes that are trying to dynamically manage access to your data",
    "start": "2213599",
    "end": "2221520"
  },
  {
    "text": "then it's possible to get into scenarios where you inadvertently overwrite someone else's changes to the policy",
    "start": "2221520",
    "end": "2227960"
  },
  {
    "text": "grants are managed individually so a key can have up to 250 grants on it and each",
    "start": "2227960",
    "end": "2234760"
  },
  {
    "text": "Grant can be independently added revoked or modified you get limited support for",
    "start": "2234760",
    "end": "2241760"
  },
  {
    "text": "conditions but you can set very fine controls on which grants someone can create whether they are required to set",
    "start": "2241760",
    "end": "2248760"
  },
  {
    "text": "certain constraints on it or not concurrent modifications a lot easier",
    "start": "2248760",
    "end": "2253960"
  },
  {
    "text": "and the semantics around grants that allow Grant creation are fairly natural",
    "start": "2253960",
    "end": "2260240"
  },
  {
    "text": "if you have a grant that allows you to create grants you can only create grants that allow access to things that you",
    "start": "2260240",
    "end": "2266839"
  },
  {
    "text": "could do yourself through that Grant so Grant",
    "start": "2266839",
    "end": "2273160"
  },
  {
    "text": "constraints again it uses encryption context there are two supported Grant",
    "start": "2273160",
    "end": "2278680"
  },
  {
    "text": "constraints at the moment one is called encryption context subset and it takes an encryption",
    "start": "2278680",
    "end": "2286319"
  },
  {
    "text": "context and it enforces that the grant only applies to requests that contain at",
    "start": "2286319",
    "end": "2292960"
  },
  {
    "text": "least every key value pair in the constraints encryption",
    "start": "2292960",
    "end": "2298040"
  },
  {
    "text": "context so if I have an encryption context subset",
    "start": "2298040",
    "end": "2304520"
  },
  {
    "text": "constraint of project green jup classification critical then that Grant applies to a",
    "start": "2304520",
    "end": "2312359"
  },
  {
    "text": "request that says green Jupiter or project green Jupiter classification critical customer 1 2 3 45 because it",
    "start": "2312359",
    "end": "2320240"
  },
  {
    "text": "contains every element that was in the encryption context subset constraint however a request that only",
    "start": "2320240",
    "end": "2326680"
  },
  {
    "text": "specifies the project and doesn't specify classification will not be matched by this",
    "start": "2326680",
    "end": "2333960"
  },
  {
    "text": "grant and then encryption context",
    "start": "2335520",
    "end": "2341400"
  },
  {
    "text": "equals is a more restrictive constraint it says",
    "start": "2341400",
    "end": "2346920"
  },
  {
    "text": "that it applies only to requests that have this exact encryption context and",
    "start": "2346920",
    "end": "2352880"
  },
  {
    "text": "it does not apply to requests that include additional",
    "start": "2352880",
    "end": "2357440"
  },
  {
    "text": "information so as I mentioned earlier create Grant is a valid Grant",
    "start": "2359200",
    "end": "2365200"
  },
  {
    "text": "operation when you have a grant that includes create Grant in the set of",
    "start": "2365200",
    "end": "2370680"
  },
  {
    "text": "Grant operations it allows only the creation of grants that are no more permissive",
    "start": "2370680",
    "end": "2376760"
  },
  {
    "text": "than the original Grant and this applies to all dimensions of the grant so grants",
    "start": "2376760",
    "end": "2382720"
  },
  {
    "text": "have an operation set if you're creating a grant using the",
    "start": "2382720",
    "end": "2387880"
  },
  {
    "text": "permissions given to you by an existing Grant it automatically enforces that you may only create grants from that grant",
    "start": "2387880",
    "end": "2395480"
  },
  {
    "text": "that have a strict subset of the operations that were in the original Grant so if you have a grant that allows",
    "start": "2395480",
    "end": "2401640"
  },
  {
    "text": "create Grant encrypt and decrypt it can be used to create a grant that allows",
    "start": "2401640",
    "end": "2407000"
  },
  {
    "text": "create Grant and encrypt and removes decrypt it can be used to set up the original ones but you can't add new",
    "start": "2407000",
    "end": "2413079"
  },
  {
    "text": "operations using that Grant similarly the encryption context",
    "start": "2413079",
    "end": "2419680"
  },
  {
    "text": "constraints are applied so if Bob has a grant that specifies an encryption",
    "start": "2419680",
    "end": "2425720"
  },
  {
    "text": "contact Subs constraint of green Jupiter and critical he can create a new Grant specifying green",
    "start": "2425720",
    "end": "2433200"
  },
  {
    "text": "Jupiter and there's a typo on this slide that should be classification critical and add a customer",
    "start": "2433200",
    "end": "2440800"
  },
  {
    "text": "ID but he can't create one that removes the classification constraint and he",
    "start": "2440839",
    "end": "2446680"
  },
  {
    "text": "can't create one that changes the values of project or classification so actually",
    "start": "2446680",
    "end": "2452839"
  },
  {
    "text": "the example on this slide would not be allowed because I changed the classific a from critical to",
    "start": "2452839",
    "end": "2459520"
  },
  {
    "text": "Orange grants are actually used within AWS in several places so for keys where",
    "start": "2460319",
    "end": "2467720"
  },
  {
    "start": "2461000",
    "end": "2600000"
  },
  {
    "text": "you for customer managed keys where you create the policy we never change that",
    "start": "2467720",
    "end": "2474800"
  },
  {
    "text": "policy however there are asynchronous workflows where we do need to allow",
    "start": "2474800",
    "end": "2480920"
  },
  {
    "text": "asynchronous decryption a good example of this is within EBS so so when you call into EBS",
    "start": "2480920",
    "end": "2489200"
  },
  {
    "text": "and ask it to mount a volume to one of your instances EBS will with proof of the",
    "start": "2489200",
    "end": "2496040"
  },
  {
    "text": "request from the original user create a grant that says that the instance to",
    "start": "2496040",
    "end": "2501160"
  },
  {
    "text": "which the volume is being attached has permission to decrypt as long as the",
    "start": "2501160",
    "end": "2506760"
  },
  {
    "text": "encryption context is for the volume ID and so if you actually go call the",
    "start": "2506760",
    "end": "2513119"
  },
  {
    "text": "create Grant API or use the CLI to list Grant on one of the keys that is used by",
    "start": "2513119",
    "end": "2519119"
  },
  {
    "text": "EBS you'll see grants that correspond to running instances and their ability to",
    "start": "2519119",
    "end": "2525319"
  },
  {
    "text": "decrypt and if you look at the cloud trail logs for abs encryption you'll see",
    "start": "2525319",
    "end": "2530560"
  },
  {
    "text": "the decryption actually happens from the host running your instance rather than",
    "start": "2530560",
    "end": "2535920"
  },
  {
    "text": "from the control plan when you detach a volume the grant",
    "start": "2535920",
    "end": "2542000"
  },
  {
    "text": "is retired so that host no longer has permission to decrypt data corresponding to the",
    "start": "2542000",
    "end": "2548559"
  },
  {
    "text": "volume and another thing that you may have noticed is it's possible to",
    "start": "2550520",
    "end": "2556960"
  },
  {
    "text": "use Keys managed within the Key Management Service in Cross account",
    "start": "2556960",
    "end": "2562319"
  },
  {
    "text": "scenarios so just as S3 buckets can be explicitly shared with other accounts",
    "start": "2562319",
    "end": "2568760"
  },
  {
    "text": "you may share KMS keys with other accounts by putting a policy on them that grants access to particular",
    "start": "2568760",
    "end": "2574760"
  },
  {
    "text": "operations or some other account this can be useful in sort of partner",
    "start": "2574760",
    "end": "2579800"
  },
  {
    "text": "scenarios where you want to use a key that someone else has controlled of the",
    "start": "2579800",
    "end": "2584839"
  },
  {
    "text": "policy for and someone else gets the audit logs for and that that enables them to have great visibility into what",
    "start": "2584839",
    "end": "2592119"
  },
  {
    "text": "you're doing with their data and the ability to turn off your access if they so",
    "start": "2592119",
    "end": "2597960"
  },
  {
    "text": "choose I've got some resources over here so I spent about",
    "start": "2597960",
    "end": "2603839"
  },
  {
    "start": "2600000",
    "end": "2653000"
  },
  {
    "text": "five minutes at the beginning talking about a crypto primer there is a much better",
    "start": "2603839",
    "end": "2609520"
  },
  {
    "text": "crypto primer um it's the Stanford crypto course it is one of the better",
    "start": "2609520",
    "end": "2615480"
  },
  {
    "text": "introductions out there highly recommend it and also the Bouncy Castle Docks are",
    "start": "2615480",
    "end": "2621760"
  },
  {
    "text": "if you're writing Java code probably where you'll have to start for any local encryption that you want to do I think",
    "start": "2621760",
    "end": "2628200"
  },
  {
    "text": "we're just about out of time so I will take questions at the end Ken are you here yes so Ken beer is one of the",
    "start": "2628200",
    "end": "2636160"
  },
  {
    "text": "product managers for the service he's in the back of the room Todd STI is also there he's with Cloud HSM and we're all",
    "start": "2636160",
    "end": "2644160"
  },
  {
    "text": "here to answer your questions and I don't have anywhere I have to go after",
    "start": "2644160",
    "end": "2649280"
  },
  {
    "text": "this",
    "start": "2652480",
    "end": "2655480"
  }
]