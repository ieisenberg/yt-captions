[
  {
    "text": "In this video, you’ll learn about scaling Kinesis \nData Streams for high throughput and low latency.",
    "start": "0",
    "end": "4859"
  },
  {
    "text": "Real-time stream processing with high throughput \nand low latency has a wide variety of use cases.",
    "start": "6072",
    "end": "10759"
  },
  {
    "text": "One important use case is anomaly \nand fraud detection in real time.",
    "start": "11338",
    "end": "14868"
  },
  {
    "text": "Within financial services, organizations \nneed to identify security breaches,",
    "start": "15239",
    "end": "19190"
  },
  {
    "text": "network outages, or machine \nfailures within milliseconds.",
    "start": "19190",
    "end": "22159"
  },
  {
    "text": "They must also respond to potentially \nfraudulent credit card transactions",
    "start": "22593",
    "end": "25892"
  },
  {
    "text": "or sign-in attempts in near-real time \nby checking live activity streams against",
    "start": "25892",
    "end": "29725"
  },
  {
    "text": "historic account usage data.",
    "start": "29725",
    "end": "31402"
  },
  {
    "text": "Another use case is tailoring \ncustomer experiences in real time.",
    "start": "31764",
    "end": "35237"
  },
  {
    "text": "Media and entertainment companies, \nfor instance, use website visitors’",
    "start": "35717",
    "end": "39282"
  },
  {
    "text": "clickstream data to gain immediate \ninsights and personalize users’ online",
    "start": "39283",
    "end": "43145"
  },
  {
    "text": "experiences with curated content.",
    "start": "43145",
    "end": "45199"
  },
  {
    "text": "Real-time stream processing with high \nthroughput and low latency is also used",
    "start": "45597",
    "end": "49114"
  },
  {
    "text": "to empower IoT analytics, facilitate \npredictive maintenance, nourish",
    "start": "49114",
    "end": "53232"
  },
  {
    "text": "marketing campaigns, and support \nhealthcare and emergency services.",
    "start": "53233",
    "end": "56991"
  },
  {
    "text": "Amazon Kinesis Data Streams is a \nserverless data streaming service that",
    "start": "58140",
    "end": "61585"
  },
  {
    "text": "allows any organization to ingest, store, \nand process large data volumes at scale.",
    "start": "61585",
    "end": "66392"
  },
  {
    "text": "A Kinesis data stream is a set of shards, \neach containing a sequence of data records.",
    "start": "66908",
    "end": "71281"
  },
  {
    "text": "Producers put data records into shards,",
    "start": "71625",
    "end": "73901"
  },
  {
    "text": "and then consumers get data records \nfrom shards and process them.",
    "start": "73901",
    "end": "77040"
  },
  {
    "text": "Kinesis Data Streams allows you to \nchoose between two capacity modes",
    "start": "77547",
    "end": "80697"
  },
  {
    "text": "that determine how capacity is managed and \nhow you are charged for data stream usage.",
    "start": "80697",
    "end": "84923"
  },
  {
    "text": "Provisioned mode is best suited for consistent \ntraffic with predictable capacity requirements.",
    "start": "86037",
    "end": "90487"
  },
  {
    "text": "You specify the number of shards for \nthe data stream to match the expected data",
    "start": "90895",
    "end": "94271"
  },
  {
    "text": "traffic and pay for charges at an hourly rate.",
    "start": "94271",
    "end": "96841"
  },
  {
    "text": "Each shard ingests up to 1 megabyte \nand 1,000 records per second,",
    "start": "97293",
    "end": "100890"
  },
  {
    "text": "and emits up to 2 megabytes per second.",
    "start": "100890",
    "end": "102764"
  },
  {
    "text": "If  capacity is exceeded, the \napplication will be throttled.",
    "start": "103107",
    "end": "106000"
  },
  {
    "text": "If you require an increase in the shard \nlimit for a stream, you can contact",
    "start": "106489",
    "end": "109790"
  },
  {
    "text": "AWS Support Center to request this.",
    "start": "109790",
    "end": "112000"
  },
  {
    "text": "On-demand mode is best suited \nwhen the data stream’s throughput",
    "start": "113158",
    "end": "115843"
  },
  {
    "text": "requirements are unpredictable and variable.",
    "start": "115844",
    "end": "118076"
  },
  {
    "text": "In on-demand mode, data streams \nautomatically scale to handle gigabytes",
    "start": "118510",
    "end": "121992"
  },
  {
    "text": "of write and read throughput per minute.",
    "start": "121992",
    "end": "123812"
  },
  {
    "text": "You pay only for the actual throughput use.",
    "start": "124066",
    "end": "126268"
  },
  {
    "text": "Streams with an on-demand capacity \nmode can scale up to 200 megabytes of",
    "start": "126811",
    "end": "130319"
  },
  {
    "text": "write and 400 megabytes of read throughput.",
    "start": "130320",
    "end": "132638"
  },
  {
    "text": "If you require an increase in capacity, you can \ncontact AWS Support Center to request this.",
    "start": "133064",
    "end": "137746"
  },
  {
    "text": "Overall, if your data volume is \npredictable, use provisioned streams.",
    "start": "138226",
    "end": "142000"
  },
  {
    "text": "If your data volume can spike unpredictably",
    "start": "142181",
    "end": "144300"
  },
  {
    "text": "or if you don't want to manage the \nnumber of shards, use On-demand streams.",
    "start": "144300",
    "end": "147730"
  },
  {
    "text": "An Amazon Kinesis Data Streams \nproducer is an application that puts user",
    "start": "148918",
    "end": "152558"
  },
  {
    "text": "data records into a Kinesis data stream.",
    "start": "152558",
    "end": "154672"
  },
  {
    "text": "Data from tens of thousands of data sources \ncan be collected and ingested in real time.",
    "start": "155124",
    "end": "159267"
  },
  {
    "text": "There are three ways for \ncustomers to build data producers.",
    "start": "159575",
    "end": "162242"
  },
  {
    "text": "First, Amazon service integrations \nenable you to build streaming-data use",
    "start": "163410",
    "end": "166869"
  },
  {
    "text": "cases across a variety of data source types.",
    "start": "166869",
    "end": "169548"
  },
  {
    "text": "Second, some third-party applications \nhave native integrations for producing",
    "start": "170652",
    "end": "174191"
  },
  {
    "text": "data into Kinesis Data Streams.",
    "start": "174192",
    "end": "176083"
  },
  {
    "text": "Third, AWS toolkits and libraries allow \nyou to build custom data producers.",
    "start": "177187",
    "end": "181698"
  },
  {
    "text": "More details can be found in our documentation.",
    "start": "182087",
    "end": "184338"
  },
  {
    "text": "A consumer is an application that \nprocesses all data from a Kinesis data stream.",
    "start": "185523",
    "end": "189394"
  },
  {
    "text": "Records are read in ingested order to \nenable real-time analytics or streaming ETL.",
    "start": "189794",
    "end": "194202"
  },
  {
    "text": "You can use AWS services, \nthird party applications,",
    "start": "194619",
    "end": "197754"
  },
  {
    "text": "or build your own data consumer with \nthe Kinesis Client Library or the AWS SDK.",
    "start": "197754",
    "end": "202476"
  },
  {
    "text": "The type of consumer you’ll build will depend \non whether you need dedicated throughput.",
    "start": "203625",
    "end": "207278"
  },
  {
    "text": "Standard consumers share \nthroughput when reading from a shard.",
    "start": "207821",
    "end": "210600"
  },
  {
    "text": "Every shard in a stream provides up to 2 \nmegabytes per second of read throughput",
    "start": "210944",
    "end": "214524"
  },
  {
    "text": "and is limited to five transactions per second.",
    "start": "214524",
    "end": "216695"
  },
  {
    "text": "If multiple applications consume \nmessages from a shard, then 2",
    "start": "216976",
    "end": "219965"
  },
  {
    "text": "megabytes per second of read \nthroughput are shared among them.",
    "start": "219965",
    "end": "222629"
  },
  {
    "text": "Consider using standard consumers if you \nhave fewer than three consuming applications,",
    "start": "223155",
    "end": "227024"
  },
  {
    "text": "you can tolerate around 200 milliseconds \nof latency, and you want to minimize cost.",
    "start": "227024",
    "end": "231148"
  },
  {
    "text": "Enhanced Fan-Out consumers get dedicated \nthroughput of 2 megabytes per second.",
    "start": "232198",
    "end": "236045"
  },
  {
    "text": "This allows you to scale the number of \nconsumers reading from a data stream",
    "start": "236615",
    "end": "239471"
  },
  {
    "text": "in parallel while maintaining \nhigh throughput and low latency.",
    "start": "239471",
    "end": "242484"
  },
  {
    "text": "You can register up to 20 consumers \nper stream to use Enhanced Fan-Out.",
    "start": "243381",
    "end": "246913"
  },
  {
    "text": "If you need to increase this limit, you can contact \nAWS Support Center with a service request.",
    "start": "247211",
    "end": "251792"
  },
  {
    "text": "Consider using Enhanced Fan-Out when\nyou have multiple consumer applications",
    "start": "252480",
    "end": "255840"
  },
  {
    "text": "reading from the same stream, \nor you require latency of around",
    "start": "255840",
    "end": "258768"
  },
  {
    "text": "70 milliseconds or better for \nmessage delivery to consumers.",
    "start": "258769",
    "end": "261897"
  },
  {
    "text": "Additional charges will apply.",
    "start": "261897",
    "end": "263453"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "264394",
    "end": "267438"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "267728",
    "end": "269774"
  }
]