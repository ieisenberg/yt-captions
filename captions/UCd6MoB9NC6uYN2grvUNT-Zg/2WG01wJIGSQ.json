[
  {
    "text": "all right welcome to reinvent and welcome to our session on what's new on",
    "start": "50",
    "end": "6060"
  },
  {
    "text": "Amazon or Ora I'm D'banj and Saha around the relational database services in AWS and",
    "start": "6060",
    "end": "13139"
  },
  {
    "text": "Aurora is one of the databases that we support now before I start on what's new",
    "start": "13139",
    "end": "20789"
  },
  {
    "text": "on Aurora how many of you are hard about Aurora alright quite a few of you and",
    "start": "20789",
    "end": "26880"
  },
  {
    "text": "how many of you are using Aurora ok all right that's good to hear and good to",
    "start": "26880",
    "end": "32969"
  },
  {
    "text": "know so before I get into Aurora let me actually say a few things about relational database services in AWS you",
    "start": "32969",
    "end": "41820"
  },
  {
    "text": "know as you know that we support a number of relational databases or Ora being one of them and three things that",
    "start": "41820",
    "end": "48510"
  },
  {
    "text": "we focus on and different talks on different relational database services that you'll hear you'll hear about three",
    "start": "48510",
    "end": "54870"
  },
  {
    "text": "things choice value and innovation and let me double-click a little bit on what we mean by that if you look at RDS we",
    "start": "54870",
    "end": "62039"
  },
  {
    "text": "support seven different databases right we support open source databases like my",
    "start": "62039",
    "end": "67439"
  },
  {
    "text": "sequel Postgres sequel MariaDB we support commercial databases like sequel",
    "start": "67439",
    "end": "72450"
  },
  {
    "text": "server and oracle and we also support or Ora which is our own cloud optimized",
    "start": "72450",
    "end": "77610"
  },
  {
    "text": "database that's what I'm going to spend most of our time on and they all run on a managed services platform meaning lot",
    "start": "77610",
    "end": "84780"
  },
  {
    "text": "of management of databases that DB's do we make it easier for them to execute",
    "start": "84780",
    "end": "91170"
  },
  {
    "text": "right so for example high availability security management disaster recovery",
    "start": "91170",
    "end": "96479"
  },
  {
    "text": "these are all automated in the RDS management platform which if you are using RDS and all the databases that we",
    "start": "96479",
    "end": "103799"
  },
  {
    "text": "support you can use them you know as you go so when you talk about value let me",
    "start": "103799",
    "end": "112590"
  },
  {
    "text": "explain that in terms of Aurora this started probably about five years back",
    "start": "112590",
    "end": "118890"
  },
  {
    "text": "maybe about six years back now when we first started working on Aurora we had customers who are using commercial",
    "start": "118890",
    "end": "124740"
  },
  {
    "text": "databases and you know they like the speed and availability of commercial databases but they're expensive and",
    "start": "124740",
    "end": "131280"
  },
  {
    "text": "there complicated license management that he had to do and we also supported open-source databases my sequel and",
    "start": "131280",
    "end": "138090"
  },
  {
    "text": "Postgres at the time and you know they are of course simple and cost-effective but they are not as performing and as",
    "start": "138090",
    "end": "145620"
  },
  {
    "text": "highly available and as scalable as commercial databases so our customers wanted us to build a database which is",
    "start": "145620",
    "end": "152610"
  },
  {
    "text": "optimized for cloud and which is as simple and cost-effective as open source",
    "start": "152610",
    "end": "157620"
  },
  {
    "text": "databases but gives the performance and availability of commercial databases and",
    "start": "157620",
    "end": "162989"
  },
  {
    "text": "that's what Aurora is it's a managed service the manage database it has speed",
    "start": "162989",
    "end": "169650"
  },
  {
    "text": "and availability of high-end commercial databases but at the price point of",
    "start": "169650",
    "end": "174810"
  },
  {
    "text": "open-source databases that's the value that we bring and that's what we are going to get into the details of today",
    "start": "174810",
    "end": "181500"
  },
  {
    "text": "and by the way it we have two flavors of Aurora we have a my sequel compatible",
    "start": "181500",
    "end": "187799"
  },
  {
    "text": "version which is compatible fully compatible with my sequel five six and five seven we also have a postgrads",
    "start": "187799",
    "end": "195780"
  },
  {
    "text": "version of the database available which is compatible with different versions of Postgres so if you have for example",
    "start": "195780",
    "end": "201600"
  },
  {
    "text": "application written to my sequel and Postgres they can move without any change to the application",
    "start": "201600",
    "end": "208940"
  },
  {
    "text": "so in thumbs-up you know when you talk about innovation there or aura is we are",
    "start": "212510",
    "end": "218420"
  },
  {
    "text": "innovating very very rapidly as you will see in terms of new feature function that we are coming up with there are",
    "start": "218420",
    "end": "224750"
  },
  {
    "text": "three things I want to point out in terms of where these innovations are one",
    "start": "224750",
    "end": "230120"
  },
  {
    "text": "is in terms of the architecture it's a scale out distributed architecture which we take advantage of in doing various",
    "start": "230120",
    "end": "237440"
  },
  {
    "text": "different feature functions and I'm going to give some examples of that the second thing that we do is it's also a",
    "start": "237440",
    "end": "244129"
  },
  {
    "text": "service oriented implementation meaning we take advantage of lot of web services",
    "start": "244129",
    "end": "249980"
  },
  {
    "text": "that we have in AWS in both building the data base as well as integrating those",
    "start": "249980",
    "end": "256190"
  },
  {
    "text": "services so that people building applications on top of per aura can build applications quickly by taking",
    "start": "256190",
    "end": "262490"
  },
  {
    "text": "advantage of those integrations and third thing that you already kind of talked about a little bit is it's a",
    "start": "262490",
    "end": "269330"
  },
  {
    "text": "fully managed service so a lot of things that people otherwise have to do is all automated in our aura",
    "start": "269330",
    "end": "275479"
  },
  {
    "text": "so let's double-click a little bit on each one of this so scale out distributed architecture if you look at",
    "start": "275479",
    "end": "281710"
  },
  {
    "text": "you know the relational databases they have been around for a long time and really not much has changed it's a",
    "start": "281710",
    "end": "287960"
  },
  {
    "text": "monolithic architecture you have different layers of the stack you have a sequel layer a transaction processing",
    "start": "287960",
    "end": "293539"
  },
  {
    "text": "layer a caching layer a logging layer and a storage layer so what we did in",
    "start": "293539",
    "end": "299330"
  },
  {
    "text": "order we have taken the logging layer and the storage layer and created a",
    "start": "299330",
    "end": "305840"
  },
  {
    "text": "distributed log structure storage architecture which is purpose-built for the database so if you look at the",
    "start": "305840",
    "end": "312470"
  },
  {
    "text": "storage layer of Aurora it is spread across three different availability zones which are essentially data centers",
    "start": "312470",
    "end": "318950"
  },
  {
    "text": "within the same region in the same metro area and we do why charting of that data",
    "start": "318950",
    "end": "326690"
  },
  {
    "text": "meaning that we you know slice it up into multiple pieces and then spread it",
    "start": "326690",
    "end": "332270"
  },
  {
    "text": "across hundreds of sometimes thousands of storage nodes and these are the small boxes that you see there and we make six",
    "start": "332270",
    "end": "340280"
  },
  {
    "text": "copies of each data element in order to get high ability and I'm going to get you the",
    "start": "340280",
    "end": "345849"
  },
  {
    "text": "details of that and by the way the interface that he have between rest of the stack and storage layer is not",
    "start": "345849",
    "end": "352259"
  },
  {
    "text": "traditional storage protocol like I scuzzy fiber channel or in FS it is",
    "start": "352259",
    "end": "357599"
  },
  {
    "text": "purpose-built interface that we are build which is essentially based on redo log and as a",
    "start": "357599",
    "end": "364269"
  },
  {
    "text": "result we send very little data in terms of total volume and network packets from",
    "start": "364269",
    "end": "370689"
  },
  {
    "text": "the engine to the storage layer one of the reasons our performance is so much better now how do we leverage AWS",
    "start": "370689",
    "end": "380109"
  },
  {
    "text": "services some quick examples of that for example lambda lambda is integrated",
    "start": "380109",
    "end": "385629"
  },
  {
    "text": "into Ora you can actually issue a lambda function from stored procedures sort of",
    "start": "385629",
    "end": "390939"
  },
  {
    "text": "triggers in Aurora and that makes it very easy to for example if for every",
    "start": "390939",
    "end": "396879"
  },
  {
    "text": "new update you want to execute a function you can actually use a lambda function for that a lot of people do",
    "start": "396879",
    "end": "402279"
  },
  {
    "text": "that and there are a couple of other examples I'm going to provide now it's three for example we use that for backup",
    "start": "402279",
    "end": "408909"
  },
  {
    "text": "you don't have to schedule any backup in Aurora we continuously backup all the",
    "start": "408909",
    "end": "413949"
  },
  {
    "text": "time and you can actually make use of that and that was actually quite simple to implement similarly we are integrated",
    "start": "413949",
    "end": "420429"
  },
  {
    "text": "with I am identity and authentication services so bub various levels of",
    "start": "420429",
    "end": "425889"
  },
  {
    "text": "database access is made easy through that integration and all kinds of logs we upload into cloud watch logs so you",
    "start": "425889",
    "end": "434109"
  },
  {
    "text": "can do various different types of processing on them so there are many other examples these are some quick example of what a lot of people use in",
    "start": "434109",
    "end": "441249"
  },
  {
    "text": "Aurora so moving on in terms of automated",
    "start": "441249",
    "end": "446409"
  },
  {
    "text": "administrative tasks all the things that you see on the right hand side is all done by RDS platform and order of course",
    "start": "446409",
    "end": "454839"
  },
  {
    "text": "as a part of that platform so for example automatic monitoring and high availability and failover that is taken",
    "start": "454839",
    "end": "462039"
  },
  {
    "text": "care of if you want to do security management lot of that function including patching and various different",
    "start": "462039",
    "end": "468699"
  },
  {
    "text": "types of compliance and auditing we take care of that various different types of",
    "start": "468699",
    "end": "474929"
  },
  {
    "text": "advanced monitoring and maintenance function for example there is hardware maintenance or scaling up your storage",
    "start": "474929",
    "end": "483850"
  },
  {
    "text": "or your sulfur that is also API driven sometime automated depending on what",
    "start": "483850",
    "end": "490060"
  },
  {
    "text": "type of scale up or scale down you want so because of that lot of boring things",
    "start": "490060",
    "end": "497229"
  },
  {
    "text": "that developers and DBAs have to do you don't have to do that anymore so that you can focus on your business focus on",
    "start": "497229",
    "end": "504069"
  },
  {
    "text": "what really matters schema design query construction query optimization etc so",
    "start": "504069",
    "end": "511570"
  },
  {
    "text": "how we are doing now thanks to all of you or aura is still the fastest growing service in the history of AWS a lot of",
    "start": "511570",
    "end": "519250"
  },
  {
    "text": "enterprise customers you know some are shown here these are essentially a subset of them that are public",
    "start": "519250",
    "end": "527020"
  },
  {
    "text": "references that are using order today and if you look at why people are using",
    "start": "527020",
    "end": "532060"
  },
  {
    "text": "our aura there are actually two types of customers or users who are using aurora one are people who used to use open",
    "start": "532060",
    "end": "539110"
  },
  {
    "text": "source databases they use aurora because it's much faster it's 5x faster than my",
    "start": "539110",
    "end": "545440"
  },
  {
    "text": "sequel 3x faster than Postgres it has better availability and durability and believe it or not it's actually cheaper",
    "start": "545440",
    "end": "552010"
  },
  {
    "text": "than what you can get through open source databases because it is so much faster you can use a smaller database",
    "start": "552010",
    "end": "559750"
  },
  {
    "text": "node which saves you money and I'm also going to give example of server less which makes it very very efficient and",
    "start": "559750",
    "end": "565630"
  },
  {
    "text": "saving money and further migration of course is very easy if you are already running on my Sakura Postgres a couple",
    "start": "565630",
    "end": "572079"
  },
  {
    "text": "of clicks you can move to Rolla if you look at commercial database users they",
    "start": "572079",
    "end": "577120"
  },
  {
    "text": "are moving for a slightly different set of reasons or Ora is literally one tenth of the cost of some of the commercial",
    "start": "577120",
    "end": "583149"
  },
  {
    "text": "engines you don't have any licenses to manage it is integrated with cloud ecosystem it's comparable in terms of",
    "start": "583149",
    "end": "590110"
  },
  {
    "text": "performance and costs and getting better every day and migration and tooling although not as simple as moving from my",
    "start": "590110",
    "end": "595990"
  },
  {
    "text": "sequel and Postgres we provide lot of tools and help so that people can move from commercial databases to Ora so",
    "start": "595990",
    "end": "604120"
  },
  {
    "text": "let's get into various different technical aspect of what we have been doing and some of the new things we have",
    "start": "604120",
    "end": "610150"
  },
  {
    "text": "done past one year in order to make sure we have everyone on the same page I'm also going to talk about some of the things",
    "start": "610150",
    "end": "616490"
  },
  {
    "text": "you already have and some of the new things you have done right so that there is some context so as I said it's 5x",
    "start": "616490",
    "end": "623180"
  },
  {
    "text": "faster than my sequel and 3x faster than Postgres sequel this is of course based on you know various different benchmarks",
    "start": "623180",
    "end": "629780"
  },
  {
    "text": "that you do this is using suspense and as you can see we have compared with five six five seven five five or a toe",
    "start": "629780",
    "end": "637910"
  },
  {
    "text": "of my sequel and we have two versions of Aurora which is compatible with my",
    "start": "637910",
    "end": "643880"
  },
  {
    "text": "sequel five six and five seven both in terms of read and write we do much much",
    "start": "643880",
    "end": "648890"
  },
  {
    "text": "better and we continue to maintain the advantage that we have now if you not",
    "start": "648890",
    "end": "654650"
  },
  {
    "text": "only just throughput if you look at for example data loading performance this is by the way from Postgres and Postgres",
    "start": "654650",
    "end": "662330"
  },
  {
    "text": "loads data this includes both loading the data as well as doing the vacuuming and building the index that can be up to",
    "start": "662330",
    "end": "669710"
  },
  {
    "text": "2x faster if you look at the same number for my sequel it is 2.5 X faster right",
    "start": "669710",
    "end": "679220"
  },
  {
    "text": "so you know it becomes a lot lot easier to load data and then process it one",
    "start": "679220",
    "end": "685760"
  },
  {
    "text": "thing which is really interesting is not only that throughput but also the consistency of throughput this is Aurora",
    "start": "685760",
    "end": "693440"
  },
  {
    "text": "Postgres under heavy load and what I have shown there the bottom graph in purple that you see that's essentially",
    "start": "693440",
    "end": "700580"
  },
  {
    "text": "the variability and performance that you see in or or Postgres as it is working under heavy load and the one in blue on",
    "start": "700580",
    "end": "707720"
  },
  {
    "text": "top is what you see in community Postgres and it is in terms of if you",
    "start": "707720",
    "end": "713870"
  },
  {
    "text": "look at the variance you compared that the standard deviation it is 10x better a 10x more consistent than what we have",
    "start": "713870",
    "end": "720650"
  },
  {
    "text": "in vanilla Postgres and by the way similar thing for my sequel here also",
    "start": "720650",
    "end": "728590"
  },
  {
    "text": "over up my sequel performs much better than community my sequel now we of",
    "start": "728590",
    "end": "735740"
  },
  {
    "text": "course have not been standing still besides all the software improvement we",
    "start": "735740",
    "end": "741230"
  },
  {
    "text": "have done we have also provided new hardware so is with 8xl as the largest instance which",
    "start": "741230",
    "end": "748010"
  },
  {
    "text": "has 16 V CPUs and 250 s or 32 V CPUs and",
    "start": "748010",
    "end": "754220"
  },
  {
    "text": "256 cores up 56 gigabyte of memory so that is what gave us hundred thousand",
    "start": "754220",
    "end": "761030"
  },
  {
    "text": "rights per second we now support 16 excels which has 64 cores and almost",
    "start": "761030",
    "end": "767060"
  },
  {
    "text": "half a terabyte of memory in terms of writes per second we get 200,000 lives",
    "start": "767060",
    "end": "772310"
  },
  {
    "text": "per second which is about 2x improvement of what you know we started off with and",
    "start": "772310",
    "end": "779140"
  },
  {
    "text": "we are going to go to 24 Excel very soon so you are going to have even more",
    "start": "779140",
    "end": "784280"
  },
  {
    "text": "Headroom in terms of the performance that you are going to see if you look at read performance read performances we",
    "start": "784280",
    "end": "790430"
  },
  {
    "text": "started with 500k and we are now at 700,000 reads per second the performance",
    "start": "790430",
    "end": "796400"
  },
  {
    "text": "growth has not been that dramatic because we are now Network limited we with 24 Excel you are going to have",
    "start": "796400",
    "end": "803720"
  },
  {
    "text": "faster Network and you can expect to see much better improvement in terms of read",
    "start": "803720",
    "end": "811100"
  },
  {
    "text": "performance just raw throughput let's talk a little bit about how do we get",
    "start": "811100",
    "end": "817010"
  },
  {
    "text": "that I mean of course there are a lot of trickeries we played the main thing that",
    "start": "817010",
    "end": "823460"
  },
  {
    "text": "you see the difference between Postgres and aurora Postgres and my sequel and",
    "start": "823460",
    "end": "829220"
  },
  {
    "text": "order my sequel is that we do less work and we do it more efficiently right by",
    "start": "829220",
    "end": "835250"
  },
  {
    "text": "less work I mean that we do fewer i/o and few our IO means we do lower number",
    "start": "835250",
    "end": "842330"
  },
  {
    "text": "of network transmission we also cache prior results we offload a lot of things",
    "start": "842330",
    "end": "847910"
  },
  {
    "text": "from the database engine to the storage nodes and by more efficient you mean we do lot of things as synchronously we",
    "start": "847910",
    "end": "854870"
  },
  {
    "text": "reduce latency on the path just by pure engineering we also use lot of lock-free",
    "start": "854870",
    "end": "860780"
  },
  {
    "text": "data structures which reduces the amount of contention we have in the code path",
    "start": "860780",
    "end": "866150"
  },
  {
    "text": "and we do a lot of things in terms of batch processing so just a quick example",
    "start": "866150",
    "end": "871340"
  },
  {
    "text": "of the i/o profile or over says this is order my sequel",
    "start": "871340",
    "end": "877540"
  },
  {
    "text": "versus my sequel using EBS volume or any other storage volume for that matter if",
    "start": "877540",
    "end": "883149"
  },
  {
    "text": "you see on the left hand side there are a lot of different types of Rights that are going on there is log rides there is",
    "start": "883149",
    "end": "889930"
  },
  {
    "text": "bin log rides there are data rides double buffer rights and also frm files",
    "start": "889930",
    "end": "896170"
  },
  {
    "text": "that we have to write on the aura side on the right hand side you know there is only one type of light that you do this",
    "start": "896170",
    "end": "902680"
  },
  {
    "text": "is because of the architecture that you have only thing we do we stream redo log records from the engine to the storage",
    "start": "902680",
    "end": "909220"
  },
  {
    "text": "node and rest of the things have processed in the storage node itself and because of that although you know in",
    "start": "909220",
    "end": "915880"
  },
  {
    "text": "case of Aurora we do six copies so we have to do write six times as opposed to",
    "start": "915880",
    "end": "921610"
  },
  {
    "text": "ones that we need to do under my sequel side we still reduce the number of",
    "start": "921610",
    "end": "927339"
  },
  {
    "text": "writes per second for the same amount of data that we process so if you look at left hand side we have you know over a",
    "start": "927339",
    "end": "934569"
  },
  {
    "text": "thirty minute period we then actually see spent over a thirty minute period we had seven hundred and eighty K",
    "start": "934569",
    "end": "940269"
  },
  {
    "text": "transactions processed by community my sequel and we had almost roughly about",
    "start": "940269",
    "end": "947130"
  },
  {
    "text": "seven million i/o but million transactions average about 7.4 IOT's per",
    "start": "947130",
    "end": "953470"
  },
  {
    "text": "transaction and that number on the right hand side for Aurora even after six copies that you have to do is 0.5 iOS",
    "start": "953470",
    "end": "962079"
  },
  {
    "text": "per transaction even after six amplification which is 7.7 X less than",
    "start": "962079",
    "end": "968170"
  },
  {
    "text": "what we have the my sequel side and because of the smaller number of i/o and the network transmission that you need",
    "start": "968170",
    "end": "974199"
  },
  {
    "text": "to do it actually helps you the performance the numbers I was talking about now there are other things we have",
    "start": "974199",
    "end": "980139"
  },
  {
    "text": "done for example this is what we have done with our lock management if you look at vanilla my sequel there is a big",
    "start": "980139",
    "end": "988810"
  },
  {
    "text": "mutex the big log that you see on the left hand side in front of the lock managers so every transaction that has",
    "start": "988810",
    "end": "994600"
  },
  {
    "text": "to go and get a lock from the lock manager is getting serialized by that mutex if you look at the right hand side",
    "start": "994600",
    "end": "1000480"
  },
  {
    "text": "what we do is that we have completely rewritten the lock manager as a lock",
    "start": "1000480",
    "end": "1005490"
  },
  {
    "text": "free implementation and as a result there are multiple transaction who can me in the lab manager at the same time",
    "start": "1005490",
    "end": "1012070"
  },
  {
    "text": "increasing the concurrency and parallelism Aurora my sequel which is",
    "start": "1012070",
    "end": "1017290"
  },
  {
    "text": "you know something that leads to 5x performance improvement now we talked",
    "start": "1017290",
    "end": "1024640"
  },
  {
    "text": "about throughput the things that also matter is latency and we started working",
    "start": "1024640",
    "end": "1031209"
  },
  {
    "text": "on latency year back so last year we did a synchronous key based prefetch where",
    "start": "1031209",
    "end": "1038530"
  },
  {
    "text": "we are actually prefetching in the background lot of data based on the keys that we know we are going to access and",
    "start": "1038530",
    "end": "1044980"
  },
  {
    "text": "if you see on the right hand side the as synchronous key based prefetch actually",
    "start": "1044980",
    "end": "1050320"
  },
  {
    "text": "has a pretty dramatic improvement in terms of the latency numbers for a",
    "start": "1050320",
    "end": "1056260"
  },
  {
    "text": "decision support benchmark this is similar to TPC TPC H benchmark that we have and if you look at the numbers",
    "start": "1056260",
    "end": "1063340"
  },
  {
    "text": "those are essentially the improvement that we have seen for various different queries square you want to query 22 and",
    "start": "1063340",
    "end": "1069730"
  },
  {
    "text": "the biggest improvement we saw was 14.5 X and of course something which is close",
    "start": "1069730",
    "end": "1076000"
  },
  {
    "text": "to 1 is you know we didn't see much improvement and there are many where we have seen significant improvement the",
    "start": "1076000",
    "end": "1084100"
  },
  {
    "text": "other thing that we did is bad scans so in my sequel for example queries are",
    "start": "1084100",
    "end": "1090520"
  },
  {
    "text": "always processed or all the features are done one at a time and because of that",
    "start": "1090520",
    "end": "1095679"
  },
  {
    "text": "there are lot of i/o that is going on disk access and the network access that's going on there a lot of",
    "start": "1095679",
    "end": "1100990"
  },
  {
    "text": "contention that happens in our case what we do is that we do bat scans inside the",
    "start": "1100990",
    "end": "1107490"
  },
  {
    "text": "memory buffer and as a result we have another pretty big improvement in thumbs",
    "start": "1107490",
    "end": "1114520"
  },
  {
    "text": "up what do you see in terms of query latency right and here also we used the same decision support system and you",
    "start": "1114520",
    "end": "1122200"
  },
  {
    "text": "know we have seen a significant amount of improvement using batch scans now",
    "start": "1122200",
    "end": "1127500"
  },
  {
    "text": "what we realized yes those are good improvement but we probably need to do better and we can do actually much",
    "start": "1127500",
    "end": "1134200"
  },
  {
    "text": "better again taking advantage of the architecture that we have so last year we started working on what we call",
    "start": "1134200",
    "end": "1140919"
  },
  {
    "text": "parallel query processing now a lot of databases claim that they do parallel",
    "start": "1140919",
    "end": "1146149"
  },
  {
    "text": "query processing what they really mean is that they are actually processing query in a multi-threaded way in the",
    "start": "1146149",
    "end": "1152960"
  },
  {
    "text": "database engine itself what we really do is that push down the query processing",
    "start": "1152960",
    "end": "1158630"
  },
  {
    "text": "to the storage node remember I told you that we have you know hundreds of storage node behind its storage volume",
    "start": "1158630",
    "end": "1165440"
  },
  {
    "text": "each of this storage node really are very powerful servers with SSDs in them and they have thousands of cores in the",
    "start": "1165440",
    "end": "1172850"
  },
  {
    "text": "storage layer so if we could push down query processing to the storage layer we can take advantage of this massive",
    "start": "1172850",
    "end": "1179840"
  },
  {
    "text": "parallelism that we have to get really really impressive performance improvement and that's what we did in or",
    "start": "1179840",
    "end": "1186500"
  },
  {
    "text": "a parallel query we released that couple of months back and if you look at the",
    "start": "1186500",
    "end": "1191600"
  },
  {
    "text": "performance number this is really really interesting so you know this is again",
    "start": "1191600",
    "end": "1198889"
  },
  {
    "text": "the same decision support system benchmark that we use the other two that I saw showed you the peak speed up for",
    "start": "1198889",
    "end": "1206899"
  },
  {
    "text": "some of the queries is hundred and twenty X by the way that's one hundred and twenty times not one hundred and",
    "start": "1206899",
    "end": "1212570"
  },
  {
    "text": "twenty percent right and you know the only way you can get that is that if you paralyze in a massive scale and that's",
    "start": "1212570",
    "end": "1219769"
  },
  {
    "text": "what you have done now eight of the twenty two queries in that benchmark we",
    "start": "1219769",
    "end": "1227090"
  },
  {
    "text": "get more than 10x performance improvement and a lot of customers have been using this this is a quote my",
    "start": "1227090",
    "end": "1233299"
  },
  {
    "text": "favorite quote from Netflix were using this in one of their queries which was",
    "start": "1233299",
    "end": "1239809"
  },
  {
    "text": "doing lot of full table scans right so what they really did is that by using",
    "start": "1239809",
    "end": "1245899"
  },
  {
    "text": "parallel query they could reduce the scan time or the query processing query",
    "start": "1245899",
    "end": "1252019"
  },
  {
    "text": "time from thirty two minutes to three minutes and while doing that because you",
    "start": "1252019",
    "end": "1258289"
  },
  {
    "text": "are pushing down all the processing to the storage layer they reduce the size of the instance where they are running",
    "start": "1258289",
    "end": "1264620"
  },
  {
    "text": "that from eight X large to 2x large which is 1/4 the size in terms of you",
    "start": "1264620",
    "end": "1271100"
  },
  {
    "text": "know the number of course memory as well as the price of that processor so you",
    "start": "1271100",
    "end": "1276649"
  },
  {
    "text": "are getting 10 X per immense improvement by paying one-fourth of what you are paying without parallel",
    "start": "1276649",
    "end": "1282380"
  },
  {
    "text": "query okay so let's kind of transition to next thing I want to talk about you",
    "start": "1282380",
    "end": "1290150"
  },
  {
    "text": "know your performance only matters if your database is up okay so you know",
    "start": "1290150",
    "end": "1295340"
  },
  {
    "text": "this is one area where we spend a lot of time just for context you might have",
    "start": "1295340",
    "end": "1302420"
  },
  {
    "text": "seen me talking about this thing before is that we have a three six hour",
    "start": "1302420",
    "end": "1309140"
  },
  {
    "text": "distributed storage layer meaning that every piece of data we copy six time and",
    "start": "1309140",
    "end": "1315020"
  },
  {
    "text": "we put two copies in each availability zone right now each availability zone is",
    "start": "1315020",
    "end": "1320810"
  },
  {
    "text": "really a data center in a metro area now we do a quorum based read and quorum",
    "start": "1320810",
    "end": "1327320"
  },
  {
    "text": "base right meaning that when we write we lie to all six copies but we say that",
    "start": "1327320",
    "end": "1333770"
  },
  {
    "text": "right it's stable when four of the six copies are written to the SSD right when",
    "start": "1333770",
    "end": "1340190"
  },
  {
    "text": "you read we do three out of six quorum although we don't really need to do that",
    "start": "1340190",
    "end": "1345530"
  },
  {
    "text": "we typically read only one because we know where is the latest copy only time",
    "start": "1345530",
    "end": "1351230"
  },
  {
    "text": "we do three out of six reads that when you are recovering from a failure we also do peer-to-peer communication in",
    "start": "1351230",
    "end": "1358580"
  },
  {
    "text": "the background between storage node for example if a storage node dies or if it is slow it can catch up by doing",
    "start": "1358580",
    "end": "1365270"
  },
  {
    "text": "peer-to-peer application with other storage nodes and the volumes are striped across multiple volumes are",
    "start": "1365270",
    "end": "1373700"
  },
  {
    "text": "striped across hundreds of storage node that's for performance now the advantage of doing that is that you know if there",
    "start": "1373700",
    "end": "1380570"
  },
  {
    "text": "is a data center failure which rarely happens but can happen you still have",
    "start": "1380570",
    "end": "1386390"
  },
  {
    "text": "full read/write availability nothing really shows up in terms of user experiencing any issues with that now",
    "start": "1386390",
    "end": "1395030"
  },
  {
    "text": "you know in my almost four years running Aurora only once I have seen that but",
    "start": "1395030",
    "end": "1402050"
  },
  {
    "text": "still it's a good thing to have and that was in a typhoon I think in Australia we",
    "start": "1402050",
    "end": "1407360"
  },
  {
    "text": "lost power in one of the data centers and within one minute all Aurora instances in Sydney are all up",
    "start": "1407360",
    "end": "1413840"
  },
  {
    "text": "and running right and in fact you know if you didn't have head node or the",
    "start": "1413840",
    "end": "1421880"
  },
  {
    "text": "engine node in the affected availability zone nothing happened to the database because storage layer was completely",
    "start": "1421880",
    "end": "1428870"
  },
  {
    "text": "transparent to that failure now what do we do also that on the shared storage",
    "start": "1428870",
    "end": "1434600"
  },
  {
    "text": "layer we offer a master and up to fifteen read replicas each of the read",
    "start": "1434600",
    "end": "1440270"
  },
  {
    "text": "replicas are promotable to a master meaning that if one of them fail if the master fails we automatically switch",
    "start": "1440270",
    "end": "1447860"
  },
  {
    "text": "over to one of the read replicas by the way you can specify in which order we should pick the read replicas because",
    "start": "1447860",
    "end": "1455360"
  },
  {
    "text": "sometimes what happens is that if we have a read replica in the same availability zone and that is still up",
    "start": "1455360",
    "end": "1461210"
  },
  {
    "text": "and running you are better off using that read replica because your application may be in the same availability zone one new feature we",
    "start": "1461210",
    "end": "1468620"
  },
  {
    "text": "have added is that we have we used to have a reader endpoint through which you could load balanced across the read",
    "start": "1468620",
    "end": "1475010"
  },
  {
    "text": "replicas now you can have multiple reader endpoints and you can associate different groups of read replicas behind",
    "start": "1475010",
    "end": "1482690"
  },
  {
    "text": "a reader endpoint and the advantage of doing that if you have for example different applications and for each",
    "start": "1482690",
    "end": "1489110"
  },
  {
    "text": "applications you want to associate a group of read replicas you now have the flexibility to do that the other",
    "start": "1489110",
    "end": "1495800"
  },
  {
    "text": "interesting thing about read replicas is that we don't use logical bin log based",
    "start": "1495800",
    "end": "1501260"
  },
  {
    "text": "replication or wall based replication in Postgres we use our redo log based replication which is a very lightweight",
    "start": "1501260",
    "end": "1508130"
  },
  {
    "text": "protocol and as a result read replicas are only lagging behind by roughly about",
    "start": "1508130",
    "end": "1513230"
  },
  {
    "text": "10 millisecond or so now the advantage",
    "start": "1513230",
    "end": "1518420"
  },
  {
    "text": "another advantage of our architecture or log structured storage architecture is",
    "start": "1518420",
    "end": "1524960"
  },
  {
    "text": "that the crash recovery is nearly instantaneous if you have used molecular database either commercial and open",
    "start": "1524960",
    "end": "1531290"
  },
  {
    "text": "source database you know that you know we need to do checkpointing typically",
    "start": "1531290",
    "end": "1537020"
  },
  {
    "text": "checkpointing happens every minute so every 5 minutes and when you have a failure you",
    "start": "1537020",
    "end": "1542600"
  },
  {
    "text": "essentially have to apply all the logs since the Check Point in order to recover now even",
    "start": "1542600",
    "end": "1548240"
  },
  {
    "text": "if you check point every five minutes you have logged for five minutes worth of data typically log applications",
    "start": "1548240",
    "end": "1557600"
  },
  {
    "text": "especially in my sequel for example is single threaded right so it takes much more than five minutes to actually apply",
    "start": "1557600",
    "end": "1563570"
  },
  {
    "text": "all the logs that you have accumulated and you know if that is the case then your recovery time could be minutes",
    "start": "1563570",
    "end": "1570050"
  },
  {
    "text": "sometime ten sub minutes in our case you know the data is really stored in pages",
    "start": "1570050",
    "end": "1575720"
  },
  {
    "text": "where we have all the logs associated with that page in the page itself",
    "start": "1575720",
    "end": "1582110"
  },
  {
    "text": "and all we need to do is after a crash we need to just reset the pointer to",
    "start": "1582110",
    "end": "1587510"
  },
  {
    "text": "figure out what the last consistent point was and you don't really need to do any other actions like application of",
    "start": "1587510",
    "end": "1593810"
  },
  {
    "text": "the logs logs are applied on demand when that particular page is read and due to",
    "start": "1593810",
    "end": "1599450"
  },
  {
    "text": "that recovery time is very very fast now we are going a step beyond that we are",
    "start": "1599450",
    "end": "1606260"
  },
  {
    "text": "working on multi master this is something we are by the way doing a preview up so if you haven't tested it",
    "start": "1606260",
    "end": "1613070"
  },
  {
    "text": "out and want to try it out you should try that hopefully you should be able to make it available as as production",
    "start": "1613070",
    "end": "1620390"
  },
  {
    "text": "sometime very soon the idea here is that instead of one master and multiple",
    "start": "1620390",
    "end": "1625970"
  },
  {
    "text": "readers you are going to have multiple masters and in that case if one of the",
    "start": "1625970",
    "end": "1631760"
  },
  {
    "text": "masters fail you still have other masters providing readwrite availability and you will have continuous",
    "start": "1631760",
    "end": "1638000"
  },
  {
    "text": "availability now other advantage multi",
    "start": "1638000",
    "end": "1644300"
  },
  {
    "text": "master is that you also do write scaling and this is one area where we actually",
    "start": "1644300",
    "end": "1649870"
  },
  {
    "text": "are doing pretty interesting stuff that if you look at the aura architecture the",
    "start": "1649870",
    "end": "1656060"
  },
  {
    "text": "consistency management unlike other multi master systems like rack or",
    "start": "1656060",
    "end": "1661460"
  },
  {
    "text": "spanner etc there are many of them you know we do a optimistic contention",
    "start": "1661460",
    "end": "1668930"
  },
  {
    "text": "resolution we assume that there is no or low contention and we proceed that way",
    "start": "1668930",
    "end": "1674210"
  },
  {
    "text": "and if there is a contention we recognize that as a conflict and we roll back one of",
    "start": "1674210",
    "end": "1680900"
  },
  {
    "text": "the offending queries right so how do you do that I mean you know this is a",
    "start": "1680900",
    "end": "1685960"
  },
  {
    "text": "quick illustration of what happens there are different ways of consistency within",
    "start": "1685960",
    "end": "1692750"
  },
  {
    "text": "Aurora if the transactions are originating from the same head node the head node actually cannot be tripped",
    "start": "1692750",
    "end": "1698720"
  },
  {
    "text": "if the transactions are committed on the same storage node the storage node can arbitrate and if you have transactions",
    "start": "1698720",
    "end": "1705710"
  },
  {
    "text": "which are coming from two different head nodes and involves more than one storage node in that case you need an external",
    "start": "1705710",
    "end": "1712670"
  },
  {
    "text": "arbitrator so in this particular case what you have here a blue master and a",
    "start": "1712670",
    "end": "1718310"
  },
  {
    "text": "purple master they are writing to two different tables table 1 and table 2 they happen to be on two different pages",
    "start": "1718310",
    "end": "1725240"
  },
  {
    "text": "on two different storage nodes there is no conflict in this case there is nothing to worry about and you know it",
    "start": "1725240",
    "end": "1731990"
  },
  {
    "text": "proceeds as if you have a completely shot at completely partitioned workload if you have a situation like this where",
    "start": "1731990",
    "end": "1739880"
  },
  {
    "text": "for example you have again the two masters blue and purple and you are writing to the same table table one",
    "start": "1739880",
    "end": "1746030"
  },
  {
    "text": "which is on page one on storage node one say then there will be a conflict and",
    "start": "1746030",
    "end": "1751400"
  },
  {
    "text": "one of them we do a quorum based system and one of them is going to win the conflict in this particular case the",
    "start": "1751400",
    "end": "1757610"
  },
  {
    "text": "blue master wins the conflict okay so as a result the transaction t1 from blue",
    "start": "1757610",
    "end": "1768500"
  },
  {
    "text": "master is successful and transaction t2 from the purple master is rollback okay",
    "start": "1768500",
    "end": "1776030"
  },
  {
    "text": "so this is also pretty simple because you are taking advantage of storage node to do the arbitration this is a more",
    "start": "1776030",
    "end": "1783770"
  },
  {
    "text": "complicated one here you have two transactions t1 and t2 they are both writing to page 1 and page",
    "start": "1783770",
    "end": "1790490"
  },
  {
    "text": "2 writing to both tables now transaction 1 wins on page 1 and transaction 2 wins",
    "start": "1790490",
    "end": "1798200"
  },
  {
    "text": "on page 2 in this case there is no easy way there are two different masters involved two different storage not",
    "start": "1798200",
    "end": "1804290"
  },
  {
    "text": "involved and we have a designated tie breaker who will break the tie in situations like this of course your",
    "start": "1804290",
    "end": "1810740"
  },
  {
    "text": "commit latency you go up and if you have workload where this situation is very common then",
    "start": "1810740",
    "end": "1817519"
  },
  {
    "text": "performance of course is going to suffer but in most cases what we have seen that that's not a problem most of the multi",
    "start": "1817519",
    "end": "1824599"
  },
  {
    "text": "master worker or what load we have seen has nor low degrees of conflict now if",
    "start": "1824599",
    "end": "1831949"
  },
  {
    "text": "you this is by the way from our test system you can try it out if you are in",
    "start": "1831949",
    "end": "1837229"
  },
  {
    "text": "the preview is that there are four nodes in the system as you know the first node",
    "start": "1837229",
    "end": "1844249"
  },
  {
    "text": "and we are running actually sees bench on this cluster so but when you have one",
    "start": "1844249",
    "end": "1849259"
  },
  {
    "text": "node up to five minutes you have roughly about twelve or fifteen thousand right",
    "start": "1849259",
    "end": "1854629"
  },
  {
    "text": "transaction per second after that you add at fifth minute the second node the",
    "start": "1854629",
    "end": "1860539"
  },
  {
    "text": "number of transactions you can handle kind of roughly doubles because you know there is limited amount of conflict",
    "start": "1860539",
    "end": "1866929"
  },
  {
    "text": "after that you add the third one by the way the scaling factor here was roughly",
    "start": "1866929",
    "end": "1871969"
  },
  {
    "text": "about 0.85 for 0.9 meaning that every time you add a new node you are",
    "start": "1871969",
    "end": "1877699"
  },
  {
    "text": "essentially adding 0.9 or nine point nine X and the capacity of the each node",
    "start": "1877699",
    "end": "1883699"
  },
  {
    "text": "as if they're a single master system and then what happens at I think at the 12",
    "start": "1883699",
    "end": "1888919"
  },
  {
    "text": "minute there was a node failure and the performance goes down but it recovers",
    "start": "1888919",
    "end": "1896419"
  },
  {
    "text": "very quickly because what you do is that we are constantly monitoring what happened and then we recovered that node",
    "start": "1896419",
    "end": "1902269"
  },
  {
    "text": "quickly either through a software reset or in some cases in this case it or the software reset either replacing the node",
    "start": "1902269",
    "end": "1910369"
  },
  {
    "text": "the hardware itself moving to another",
    "start": "1910369",
    "end": "1918619"
  },
  {
    "text": "interesting feature that we recently released couple of months back is backtrack right so you can think of this",
    "start": "1918619",
    "end": "1926389"
  },
  {
    "text": "as a time machine for databases you know many times people say oh my god I",
    "start": "1926389",
    "end": "1931449"
  },
  {
    "text": "accidentally deleted something or did something which I would like to undo so this is really the undo function for",
    "start": "1931449",
    "end": "1937909"
  },
  {
    "text": "databases very very useful it's much faster than the traditional ways of doing undo which is so far has been",
    "start": "1937909",
    "end": "1945740"
  },
  {
    "text": "point-in-time recovery so it takes roughly about a minute couple of minutes to do the backtrack and quite popular",
    "start": "1945740",
    "end": "1953120"
  },
  {
    "text": "with lot of our customers let's move to the other aspect of our order which",
    "start": "1953120",
    "end": "1959920"
  },
  {
    "text": "people really like is ease-of-use and",
    "start": "1959920",
    "end": "1965410"
  },
  {
    "text": "there are a number of features that we have worked on which has been quite",
    "start": "1965410",
    "end": "1971870"
  },
  {
    "text": "popular one of them is performance insight right so you know using",
    "start": "1971870",
    "end": "1977870"
  },
  {
    "text": "performance inside you can actually drill down into the performance of",
    "start": "1977870",
    "end": "1984170"
  },
  {
    "text": "various different queries you can rank for example the queries in terms of how",
    "start": "1984170",
    "end": "1991790"
  },
  {
    "text": "much of CPU they are taking how much of wait time they are facing and you can",
    "start": "1991790",
    "end": "1997160"
  },
  {
    "text": "actually store the data by hour by day by week you can have historical data",
    "start": "1997160",
    "end": "2002380"
  },
  {
    "text": "stored for two years so that you can go back and do the performance analysis I believe seven days are free and this is",
    "start": "2002380",
    "end": "2010270"
  },
  {
    "text": "something which is very very useful in terms of monitoring your system right in",
    "start": "2010270",
    "end": "2015640"
  },
  {
    "text": "this particular example for example you see you can set a target what is the Maxie PU that you want to tolerate you",
    "start": "2015640",
    "end": "2022150"
  },
  {
    "text": "can set an alert on that so that you can get an alert when you're above that limit if you look at that bump they're",
    "start": "2022150",
    "end": "2029650"
  },
  {
    "text": "looking at the shading you know that this is actually a CPU bound contention",
    "start": "2029650",
    "end": "2037690"
  },
  {
    "text": "that you are seeing you can actually figure out which particular query is",
    "start": "2037690",
    "end": "2042730"
  },
  {
    "text": "responsible for that so very very powerful tool and we have this available for not only Aurora but also for my",
    "start": "2042730",
    "end": "2050050"
  },
  {
    "text": "sequel and Postgres and sequel server I believe in Oracle is coming soon so one tool can help you monitor performance of",
    "start": "2050050",
    "end": "2057760"
  },
  {
    "text": "all the databases that you have in RDS now this is one of our partners Shalom",
    "start": "2057760",
    "end": "2064898"
  },
  {
    "text": "they integrated performance insight with API is with Alexa so that you can talk",
    "start": "2064899",
    "end": "2072158"
  },
  {
    "text": "to your database and you can go to their booth and see a demo I think there is",
    "start": "2072159",
    "end": "2078679"
  },
  {
    "text": "a video that I have and let me see if that works",
    "start": "2078680",
    "end": "2083619"
  },
  {
    "text": "[Music]",
    "start": "2090000",
    "end": "2095409"
  },
  {
    "text": "Alexa open performance insights how are",
    "start": "2095410",
    "end": "2106940"
  },
  {
    "text": "the databases doing in Ohio performance insights reported no issues in your",
    "start": "2106940",
    "end": "2113690"
  },
  {
    "text": "databases in Ohio check the database performance in Northern California for",
    "start": "2113690",
    "end": "2119510"
  },
  {
    "text": "the past two days on Wednesday November",
    "start": "2119510",
    "end": "2124940"
  },
  {
    "text": "14th the average active sessions on AMS 5/6 was 8.7 more than the allocated for",
    "start": "2124940",
    "end": "2131570"
  },
  {
    "text": "these CPUs what would you like to know about this incident what's causing the",
    "start": "2131570",
    "end": "2137360"
  },
  {
    "text": "load 94.4% of the load on ems 5 6 was",
    "start": "2137360",
    "end": "2143120"
  },
  {
    "text": "coming from cpu load from the other weight types is low who was responsible",
    "start": "2143120",
    "end": "2150230"
  },
  {
    "text": "for the load user kyl e.l.f is causing 91.9% of the load on ems 5 6",
    "start": "2150230",
    "end": "2158630"
  },
  {
    "text": "would you like to notify the user yes would you like me to email or send the",
    "start": "2158630",
    "end": "2164900"
  },
  {
    "text": "user a text message email him email has",
    "start": "2164900",
    "end": "2169910"
  },
  {
    "text": "been sent stop good bye",
    "start": "2169910",
    "end": "2175150"
  },
  {
    "text": "alright so you know for full disclosure",
    "start": "2175150",
    "end": "2180230"
  },
  {
    "text": "I'm not using this you might find it useful when you are driving and want to find out how your database is doing so",
    "start": "2180230",
    "end": "2189790"
  },
  {
    "text": "now moving on to other thing that you do security management is one thing that a",
    "start": "2189790",
    "end": "2195440"
  },
  {
    "text": "lot of people find very very bit useful right so we do encryption at rest we do",
    "start": "2195440",
    "end": "2201320"
  },
  {
    "text": "encryption in transit we support V pcs which are kind of like a firewall and we",
    "start": "2201320",
    "end": "2209090"
  },
  {
    "text": "do lot of compliance which people find very very useful because that's one thing that everybody has to do in terms of keeping",
    "start": "2209090",
    "end": "2217290"
  },
  {
    "text": "their data up and compliant and and recent new thing that you have added is",
    "start": "2217290",
    "end": "2223590"
  },
  {
    "text": "database activity monitoring which is in preview which is going to available soon so these are some of the compliance",
    "start": "2223590",
    "end": "2230160"
  },
  {
    "text": "regimes that we support as you can see some of them are new they we have three",
    "start": "2230160",
    "end": "2236700"
  },
  {
    "text": "different types of databases we have or my sequel or a post-credits and also now or a server less and we support various",
    "start": "2236700",
    "end": "2244110"
  },
  {
    "text": "different types of compliance for all of them moving on this is a new thing that we are doing so the idea here by the way",
    "start": "2244110",
    "end": "2251130"
  },
  {
    "text": "is that you know there are a lot of different types of audit logs that you collect and we put those audit logs on a",
    "start": "2251130",
    "end": "2258120"
  },
  {
    "text": "Kinesis stream and then you can send it to either cloud watch or you can have",
    "start": "2258120",
    "end": "2264420"
  },
  {
    "text": "third party providers who can then ingest that logs and provide various",
    "start": "2264420",
    "end": "2270120"
  },
  {
    "text": "different types of database activity monitoring reports right the partners",
    "start": "2270120",
    "end": "2275550"
  },
  {
    "text": "that we are working on are McAfee IBM Guardium and Imperva I think some of",
    "start": "2275550",
    "end": "2280770"
  },
  {
    "text": "them might actually be here providing demos of this you can also for example use Amazon CloudWatch and once you put",
    "start": "2280770",
    "end": "2288120"
  },
  {
    "text": "your data on cloud watch there are various different kinds of things that you can do for example you can search",
    "start": "2288120",
    "end": "2294210"
  },
  {
    "text": "for specific events you can you know monitor various different kinds of metrics using your favorite dashboard",
    "start": "2294210",
    "end": "2300870"
  },
  {
    "text": "you can do it visualization you can set alarms etc it's quite useful now you",
    "start": "2300870",
    "end": "2309540"
  },
  {
    "text": "know we also support various different ways of migrating data into Ora right if",
    "start": "2309540",
    "end": "2314760"
  },
  {
    "text": "you are using my sequel or Postgres sequel in RDS it's actually very very simple we automatically ingest a",
    "start": "2314760",
    "end": "2322350"
  },
  {
    "text": "snapshot and hydrate and Aurora database with that data if you are using my",
    "start": "2322350",
    "end": "2327780"
  },
  {
    "text": "sequel percona Postgres mariadb etc on ec2 or on-premises",
    "start": "2327780",
    "end": "2332820"
  },
  {
    "text": "there is an easy way of doing that you can take a snapshot put that snapshot in s3 and we can ingest that directly into",
    "start": "2332820",
    "end": "2339660"
  },
  {
    "text": "our Ora if you are using oracle sequel server and recently we have added db2",
    "start": "2339660",
    "end": "2345900"
  },
  {
    "text": "DB & Cassandra then you can use our DMS and SCT tool DMS stands for data",
    "start": "2345900",
    "end": "2352320"
  },
  {
    "text": "migration service and SCD for schema conversion tool which are quite useful in moving that data into Ora these are",
    "start": "2352320",
    "end": "2360210"
  },
  {
    "text": "some of the new things that we have added to our DMS and SCT for example we",
    "start": "2360210",
    "end": "2366390"
  },
  {
    "text": "have step by step instruction for migration from Oracle and sequel server",
    "start": "2366390",
    "end": "2371640"
  },
  {
    "text": "a lot of people find it very useful in fact this was because of various different feedback that we got from our",
    "start": "2371640",
    "end": "2378240"
  },
  {
    "text": "customers other thing which is also quite useful is our workload qualification so if you have a workload",
    "start": "2378240",
    "end": "2384240"
  },
  {
    "text": "and you want to figure out how much work it is to move them to Aurora from Oracle and sequel server we provide that",
    "start": "2384240",
    "end": "2390900"
  },
  {
    "text": "estimate using these tools schema conversion so if you are you know if you are using Oracle and sequel server they",
    "start": "2390900",
    "end": "2397560"
  },
  {
    "text": "are not exactly same as my sequel and Postgres we do lot of automatic",
    "start": "2397560",
    "end": "2402930"
  },
  {
    "text": "conversion of schemas and our accuracy now has improved to 90 percent for both of them",
    "start": "2402930",
    "end": "2407940"
  },
  {
    "text": "and the native start point is another thing that you have added where we can",
    "start": "2407940",
    "end": "2413280"
  },
  {
    "text": "use engine native utilities for example PG dump and load in order to seed your",
    "start": "2413280",
    "end": "2418890"
  },
  {
    "text": "database and then use DMS to actually catch catch on the additional part using",
    "start": "2418890",
    "end": "2425790"
  },
  {
    "text": "CDC change data capture most exciting thing that we have done in terms of",
    "start": "2425790",
    "end": "2433140"
  },
  {
    "text": "management is or a server less right this is something that we released a few",
    "start": "2433140",
    "end": "2439800"
  },
  {
    "text": "months back for Ora my sequel the idea here is that you have applications which",
    "start": "2439800",
    "end": "2446160"
  },
  {
    "text": "are intermittent in terms of their workload they are on some time off sometime or at least their workload is",
    "start": "2446160",
    "end": "2453150"
  },
  {
    "text": "going up and down right but those kind of applications you want to make your",
    "start": "2453150",
    "end": "2458580"
  },
  {
    "text": "database follow the workload curve without an impact on the application",
    "start": "2458580",
    "end": "2464310"
  },
  {
    "text": "itself of course we can do that by auto scaling but when you Auto scale your application gets impacted because",
    "start": "2464310",
    "end": "2470960"
  },
  {
    "text": "application sessions get terminated with server less you have completely eliminated that so what we do is that",
    "start": "2470960",
    "end": "2477820"
  },
  {
    "text": "do you have your application that connect to a set of requests router the database instance is not really there",
    "start": "2477820",
    "end": "2484150"
  },
  {
    "text": "when you do that now when you send your first query we have a warm pool up",
    "start": "2484150",
    "end": "2489340"
  },
  {
    "text": "instances we spin up an instance from the warm pool and attach it to the request router endpoint and then we",
    "start": "2489340",
    "end": "2496300"
  },
  {
    "text": "automatically scale it up and down as the workload is changing and taking it",
    "start": "2496300",
    "end": "2501580"
  },
  {
    "text": "down all the way to zero sometime when there is no workload and customers pay by minute and you know a lot of people",
    "start": "2501580",
    "end": "2510190"
  },
  {
    "text": "actually save a lot of money in fact one of them posted after we launched this or",
    "start": "2510190",
    "end": "2519700"
  },
  {
    "text": "a server less is that I was paying some $8 30 cents this was on Twitter $8 30",
    "start": "2519700",
    "end": "2526540"
  },
  {
    "text": "cents per day for my or my sequel and now I am paying 38 cents from for my",
    "start": "2526540",
    "end": "2532030"
  },
  {
    "text": "Aurora that was of course great news for customers although my boss was a little bit worried that this might have a",
    "start": "2532030",
    "end": "2538480"
  },
  {
    "text": "revenue impact now if you look at you",
    "start": "2538480",
    "end": "2544540"
  },
  {
    "text": "know how it works so if you look at the Purple Line that is actually the workload and if you look at the blue",
    "start": "2544540",
    "end": "2550420"
  },
  {
    "text": "line this is how we are automatically scaling things up and while we are scaling these database sessions are",
    "start": "2550420",
    "end": "2556030"
  },
  {
    "text": "still active and as a result the application kind of sees this really a",
    "start": "2556030",
    "end": "2561220"
  },
  {
    "text": "bump on the web and as you notice that you know on the way up we actually scale very very quickly on the way down we are",
    "start": "2561220",
    "end": "2568600"
  },
  {
    "text": "little slower want to make sure that we are not thrashing because sometimes you know there will be temporary change in",
    "start": "2568600",
    "end": "2574330"
  },
  {
    "text": "workload and you don't want to go too fast on that if you so here so these are",
    "start": "2574330",
    "end": "2584950"
  },
  {
    "text": "some of the new things we have done for our server list it's now compliant to it FedRAMP a PowerPC is OSI a sock I saw an",
    "start": "2584950",
    "end": "2593410"
  },
  {
    "text": "hi trust there's a whole bunch of new regions that we are launched so it's currently available almost all",
    "start": "2593410",
    "end": "2600190"
  },
  {
    "text": "commercial regions now we are just announced in the reinvent that we are",
    "start": "2600190",
    "end": "2606640"
  },
  {
    "text": "now supporting the preview up or a Postgres several so if you are in order Postgres users go",
    "start": "2606640",
    "end": "2613680"
  },
  {
    "text": "and try that out and we also are supporting what we call a rest data API",
    "start": "2613680",
    "end": "2619140"
  },
  {
    "text": "so this was a big ass for a lot of customers with serverless of course you can scale up and down very",
    "start": "2619140",
    "end": "2626130"
  },
  {
    "text": "quickly right but people also wanted an HTTP endpoint so if you have a lambda app or a mobile app or an app sink or",
    "start": "2626130",
    "end": "2633599"
  },
  {
    "text": "something like that you don't have to go through JDBC connection you can use an HTTP endpoint in order to connect to it",
    "start": "2633599",
    "end": "2640529"
  },
  {
    "text": "so we just announce an RDS data API which will provide an HTTP based",
    "start": "2640529",
    "end": "2646279"
  },
  {
    "text": "interface to order a server less and that is really useful for lambda app",
    "start": "2646279",
    "end": "2651930"
  },
  {
    "text": "sync has already integrated with that if you have a lot of mobile application I think you will really find it useful",
    "start": "2651930",
    "end": "2658940"
  },
  {
    "text": "these are some of the other sessions if you are if you like this session these are some of the other session that you",
    "start": "2658940",
    "end": "2665250"
  },
  {
    "text": "might enjoy so we have dat 305 which is a deep dive on or a Postgres sequel we",
    "start": "2665250",
    "end": "2672180"
  },
  {
    "text": "have d-o-t 304 which is a deep dive on Aurora my sequel and also there is a",
    "start": "2672180",
    "end": "2678180"
  },
  {
    "text": "session on how to migrate from other databases into rora so those are some of the things that you",
    "start": "2678180",
    "end": "2685289"
  },
  {
    "text": "can go and check out that's all that I had and as you see Aurora is ready for",
    "start": "2685289",
    "end": "2690930"
  },
  {
    "text": "you are you ready for Aurora [Applause]",
    "start": "2690930",
    "end": "2702549"
  }
]