[
  {
    "text": "hello everyone",
    "start": "420",
    "end": "2159"
  },
  {
    "text": "today I'm excited to introduce Amazon",
    "start": "2159",
    "end": "4140"
  },
  {
    "text": "verified permissions a new service that",
    "start": "4140",
    "end": "6600"
  },
  {
    "text": "simplifies your authorization strategy",
    "start": "6600",
    "end": "8580"
  },
  {
    "text": "through centralized policy storage and",
    "start": "8580",
    "end": "10740"
  },
  {
    "text": "by decoupling authorization as code my",
    "start": "10740",
    "end": "13139"
  },
  {
    "text": "name is Jeremy Ware and I'm a security",
    "start": "13139",
    "end": "14759"
  },
  {
    "text": "specialist Solutions architect at AWS",
    "start": "14759",
    "end": "18380"
  },
  {
    "text": "fine-grained authorization models are",
    "start": "18380",
    "end": "21119"
  },
  {
    "text": "often implemented in code today this",
    "start": "21119",
    "end": "23820"
  },
  {
    "text": "presents a number of challenges one",
    "start": "23820",
    "end": "26100"
  },
  {
    "text": "developers are required to understand",
    "start": "26100",
    "end": "28199"
  },
  {
    "text": "the permissions to changing the rules",
    "start": "28199",
    "end": "30840"
  },
  {
    "text": "means changing the code and rebuilding",
    "start": "30840",
    "end": "32820"
  },
  {
    "text": "the application or the app and three",
    "start": "32820",
    "end": "34980"
  },
  {
    "text": "audits are challenging and at risk for",
    "start": "34980",
    "end": "38640"
  },
  {
    "text": "accurate audit findings",
    "start": "38640",
    "end": "41700"
  },
  {
    "text": "you can use verified permissions as an",
    "start": "41700",
    "end": "44700"
  },
  {
    "text": "authorization as a service tool instead",
    "start": "44700",
    "end": "47700"
  },
  {
    "text": "of building your own app specific",
    "start": "47700",
    "end": "49920"
  },
  {
    "text": "authorization mechanism you can add",
    "start": "49920",
    "end": "52020"
  },
  {
    "text": "granular permissions into your",
    "start": "52020",
    "end": "53879"
  },
  {
    "text": "application with verified permissions",
    "start": "53879",
    "end": "55379"
  },
  {
    "text": "using the console or AWS CLI you can",
    "start": "55379",
    "end": "58800"
  },
  {
    "text": "create policy stores manage app policies",
    "start": "58800",
    "end": "62399"
  },
  {
    "text": "and test those policies independent of",
    "start": "62399",
    "end": "65040"
  },
  {
    "text": "any app deployment your app will",
    "start": "65040",
    "end": "67140"
  },
  {
    "text": "Implement a call to the is authorized",
    "start": "67140",
    "end": "69479"
  },
  {
    "text": "API and this responds with a simple",
    "start": "69479",
    "end": "71820"
  },
  {
    "text": "allow or deny decision from verified",
    "start": "71820",
    "end": "74280"
  },
  {
    "text": "permissions as the policy evaluation",
    "start": "74280",
    "end": "76200"
  },
  {
    "text": "point in addition your app may make",
    "start": "76200",
    "end": "78840"
  },
  {
    "text": "calls to modify a user's permissions on",
    "start": "78840",
    "end": "81000"
  },
  {
    "text": "their behalf",
    "start": "81000",
    "end": "82259"
  },
  {
    "text": "there are several benefits to verified",
    "start": "82259",
    "end": "84299"
  },
  {
    "text": "permissions for both developers and",
    "start": "84299",
    "end": "86340"
  },
  {
    "text": "security and operations teams for",
    "start": "86340",
    "end": "88320"
  },
  {
    "text": "developers extracting authorization",
    "start": "88320",
    "end": "90180"
  },
  {
    "text": "logic from functional source code and",
    "start": "90180",
    "end": "92880"
  },
  {
    "text": "reusing authorization logic from a",
    "start": "92880",
    "end": "94979"
  },
  {
    "text": "centralized policy store for similar",
    "start": "94979",
    "end": "96780"
  },
  {
    "text": "applications really frees developers to",
    "start": "96780",
    "end": "100020"
  },
  {
    "text": "focus their attention on feature",
    "start": "100020",
    "end": "101759"
  },
  {
    "text": "development and improving time to Market",
    "start": "101759",
    "end": "105020"
  },
  {
    "text": "authorization is a service architectures",
    "start": "105020",
    "end": "107640"
  },
  {
    "text": "lend themselves to Modern agile",
    "start": "107640",
    "end": "110579"
  },
  {
    "text": "application development with",
    "start": "110579",
    "end": "111960"
  },
  {
    "text": "microservices",
    "start": "111960",
    "end": "113640"
  },
  {
    "text": "and for security and operational teams",
    "start": "113640",
    "end": "116340"
  },
  {
    "text": "teams are increasingly moving away from",
    "start": "116340",
    "end": "118439"
  },
  {
    "text": "having numerous Administration consoles",
    "start": "118439",
    "end": "120540"
  },
  {
    "text": "a centralized console aligns with",
    "start": "120540",
    "end": "123479"
  },
  {
    "text": "centralized Administration and",
    "start": "123479",
    "end": "125399"
  },
  {
    "text": "governance",
    "start": "125399",
    "end": "126719"
  },
  {
    "text": "we're trying to simplify compliance",
    "start": "126719",
    "end": "128640"
  },
  {
    "text": "Audits and centrally log access requests",
    "start": "128640",
    "end": "131520"
  },
  {
    "text": "as well with Amazon verified permissions",
    "start": "131520",
    "end": "133560"
  },
  {
    "text": "once permissions have been externalized",
    "start": "133560",
    "end": "135900"
  },
  {
    "text": "from application code you can also test",
    "start": "135900",
    "end": "138120"
  },
  {
    "text": "and iterate on least privilege without",
    "start": "138120",
    "end": "140520"
  },
  {
    "text": "changing source code",
    "start": "140520",
    "end": "143040"
  },
  {
    "text": "this is a big win for both security",
    "start": "143040",
    "end": "145080"
  },
  {
    "text": "operations teams and developers alike",
    "start": "145080",
    "end": "148920"
  },
  {
    "text": "in a nutshell what is verified",
    "start": "148920",
    "end": "151560"
  },
  {
    "text": "permissions",
    "start": "151560",
    "end": "152940"
  },
  {
    "text": "well it's a policy Administration point",
    "start": "152940",
    "end": "155220"
  },
  {
    "text": "and a policy decision Point as a policy",
    "start": "155220",
    "end": "157920"
  },
  {
    "text": "Administration Point administrators can",
    "start": "157920",
    "end": "160319"
  },
  {
    "text": "create policy stores create and update",
    "start": "160319",
    "end": "163140"
  },
  {
    "text": "policy schemas and centrally manage",
    "start": "163140",
    "end": "165180"
  },
  {
    "text": "application policies as a policy",
    "start": "165180",
    "end": "167760"
  },
  {
    "text": "decision point a client application can",
    "start": "167760",
    "end": "170819"
  },
  {
    "text": "call Amazon verified permissions to get",
    "start": "170819",
    "end": "173400"
  },
  {
    "text": "a decision on whether a principal is",
    "start": "173400",
    "end": "175140"
  },
  {
    "text": "permitted to take an action on a",
    "start": "175140",
    "end": "177120"
  },
  {
    "text": "resource given a set of contexts",
    "start": "177120",
    "end": "181620"
  },
  {
    "text": "let's take a closer look at how policies",
    "start": "181620",
    "end": "183959"
  },
  {
    "text": "are created",
    "start": "183959",
    "end": "185459"
  },
  {
    "text": "we create policies in a new open source",
    "start": "185459",
    "end": "188220"
  },
  {
    "text": "language called Cedar the language",
    "start": "188220",
    "end": "190080"
  },
  {
    "text": "enables fine-grained policy-based access",
    "start": "190080",
    "end": "192420"
  },
  {
    "text": "decisions the language is structured to",
    "start": "192420",
    "end": "195000"
  },
  {
    "text": "be both human readable and provide low",
    "start": "195000",
    "end": "197220"
  },
  {
    "text": "latency access decisions based on the",
    "start": "197220",
    "end": "199800"
  },
  {
    "text": "current attribute values of principles",
    "start": "199800",
    "end": "201840"
  },
  {
    "text": "and resources in the screenshot we're",
    "start": "201840",
    "end": "205379"
  },
  {
    "text": "able to see an example policy structure",
    "start": "205379",
    "end": "208340"
  },
  {
    "text": "which combines both role-based access",
    "start": "208340",
    "end": "211440"
  },
  {
    "text": "control and attribute based Access",
    "start": "211440",
    "end": "214319"
  },
  {
    "text": "Control in order to provide fine-grained",
    "start": "214319",
    "end": "217260"
  },
  {
    "text": "permissions",
    "start": "217260",
    "end": "218220"
  },
  {
    "text": "now let's take a look at how this works",
    "start": "218220",
    "end": "221340"
  },
  {
    "text": "in practice by managing policies in a",
    "start": "221340",
    "end": "223799"
  },
  {
    "text": "policy store with verified permissions",
    "start": "223799",
    "end": "225599"
  },
  {
    "text": "to manage authorization decisions for an",
    "start": "225599",
    "end": "228120"
  },
  {
    "text": "AWS sample application if you would like",
    "start": "228120",
    "end": "231180"
  },
  {
    "text": "to test and demo this process an",
    "start": "231180",
    "end": "232920"
  },
  {
    "text": "application yourself you can find it",
    "start": "232920",
    "end": "235019"
  },
  {
    "text": "linked on the final slide of this",
    "start": "235019",
    "end": "237239"
  },
  {
    "text": "presentation",
    "start": "237239",
    "end": "238739"
  },
  {
    "text": "verified permissions can be deployed",
    "start": "238739",
    "end": "241620"
  },
  {
    "text": "with any identity provider deploying the",
    "start": "241620",
    "end": "244319"
  },
  {
    "text": "application in this case automatically",
    "start": "244319",
    "end": "246299"
  },
  {
    "text": "created an Amazon Cognito user pool to",
    "start": "246299",
    "end": "249599"
  },
  {
    "text": "manage and authenticate our users so",
    "start": "249599",
    "end": "251640"
  },
  {
    "text": "before we can log into the app we'll",
    "start": "251640",
    "end": "253680"
  },
  {
    "text": "need to review the identity provider as",
    "start": "253680",
    "end": "257100"
  },
  {
    "text": "we go into the user pool created by",
    "start": "257100",
    "end": "259440"
  },
  {
    "text": "Cognito we're going to be able to see",
    "start": "259440",
    "end": "261600"
  },
  {
    "text": "our three users identified in this case",
    "start": "261600",
    "end": "263940"
  },
  {
    "text": "Abby Bob and Eve",
    "start": "263940",
    "end": "266160"
  },
  {
    "text": "our users would normally be able to log",
    "start": "266160",
    "end": "268919"
  },
  {
    "text": "in",
    "start": "268919",
    "end": "269820"
  },
  {
    "text": "and execute certain functions or actions",
    "start": "269820",
    "end": "273660"
  },
  {
    "text": "within our application but as you can",
    "start": "273660",
    "end": "276180"
  },
  {
    "text": "see none of our users have been provided",
    "start": "276180",
    "end": "278400"
  },
  {
    "text": "any roles which means they haven't",
    "start": "278400",
    "end": "280320"
  },
  {
    "text": "inherited any entitlements to take",
    "start": "280320",
    "end": "283199"
  },
  {
    "text": "action in our application",
    "start": "283199",
    "end": "286020"
  },
  {
    "text": "we want to make sure that our users can",
    "start": "286020",
    "end": "288120"
  },
  {
    "text": "now log into the application and take",
    "start": "288120",
    "end": "289860"
  },
  {
    "text": "certain actions so we're going to create",
    "start": "289860",
    "end": "292199"
  },
  {
    "text": "a customer group once we've created this",
    "start": "292199",
    "end": "295919"
  },
  {
    "text": "group Incognito we're going to go ahead",
    "start": "295919",
    "end": "297479"
  },
  {
    "text": "and add ABI and then add Bob to that",
    "start": "297479",
    "end": "300720"
  },
  {
    "text": "customer group",
    "start": "300720",
    "end": "303380"
  },
  {
    "text": "next what we really need to do is create",
    "start": "303620",
    "end": "307500"
  },
  {
    "text": "a verified permissions policy store",
    "start": "307500",
    "end": "311940"
  },
  {
    "text": "so once we configure the application to",
    "start": "311940",
    "end": "314460"
  },
  {
    "text": "reference this policy store when making",
    "start": "314460",
    "end": "316500"
  },
  {
    "text": "authorization decisions our users will",
    "start": "316500",
    "end": "319259"
  },
  {
    "text": "be able to take action",
    "start": "319259",
    "end": "320759"
  },
  {
    "text": "so navigating to verified permissions",
    "start": "320759",
    "end": "322740"
  },
  {
    "text": "will click create policy store and in",
    "start": "322740",
    "end": "325020"
  },
  {
    "text": "our example we're going to create an",
    "start": "325020",
    "end": "326639"
  },
  {
    "text": "empty policy store",
    "start": "326639",
    "end": "329600"
  },
  {
    "text": "let's go ahead and make sure that we can",
    "start": "329880",
    "end": "332340"
  },
  {
    "text": "jump in and copy the policy store ID and",
    "start": "332340",
    "end": "335820"
  },
  {
    "text": "we're going to update the Lambda",
    "start": "335820",
    "end": "337380"
  },
  {
    "text": "function for the custom authorizer that",
    "start": "337380",
    "end": "340139"
  },
  {
    "text": "was created as a part of the application",
    "start": "340139",
    "end": "342000"
  },
  {
    "text": "deployment by going into configuration",
    "start": "342000",
    "end": "344639"
  },
  {
    "text": "and updating the policy store ID which",
    "start": "344639",
    "end": "347100"
  },
  {
    "text": "says enter here with our newly created",
    "start": "347100",
    "end": "349800"
  },
  {
    "text": "Amazon verified permissions policy store",
    "start": "349800",
    "end": "352199"
  },
  {
    "text": "ID",
    "start": "352199",
    "end": "353280"
  },
  {
    "text": "our authorizer will now reference the",
    "start": "353280",
    "end": "355440"
  },
  {
    "text": "policies stored in this policy store and",
    "start": "355440",
    "end": "357960"
  },
  {
    "text": "enforce authorization decisions based on",
    "start": "357960",
    "end": "360600"
  },
  {
    "text": "the policies we create",
    "start": "360600",
    "end": "362580"
  },
  {
    "text": "as we go into create a policy let's make",
    "start": "362580",
    "end": "365220"
  },
  {
    "text": "sure that we're making a permit policy",
    "start": "365220",
    "end": "367259"
  },
  {
    "text": "based on the customer role",
    "start": "367259",
    "end": "370919"
  },
  {
    "text": "this policy will Define what anyone who",
    "start": "370919",
    "end": "373500"
  },
  {
    "text": "has this role is able to do within our",
    "start": "373500",
    "end": "375419"
  },
  {
    "text": "application in this case customers will",
    "start": "375419",
    "end": "378600"
  },
  {
    "text": "be able to execute two different",
    "start": "378600",
    "end": "380699"
  },
  {
    "text": "functions they will be able to search",
    "start": "380699",
    "end": "382500"
  },
  {
    "text": "pets and place orders within our",
    "start": "382500",
    "end": "385080"
  },
  {
    "text": "application",
    "start": "385080",
    "end": "387479"
  },
  {
    "text": "let's go ahead and give this policy a",
    "start": "387479",
    "end": "389340"
  },
  {
    "text": "simple title based on customer role",
    "start": "389340",
    "end": "392039"
  },
  {
    "text": "and now as you can see our policy has",
    "start": "392039",
    "end": "394139"
  },
  {
    "text": "been created",
    "start": "394139",
    "end": "395580"
  },
  {
    "text": "if we go back into the application and",
    "start": "395580",
    "end": "398580"
  },
  {
    "text": "sign in as Bob who was added to the",
    "start": "398580",
    "end": "401759"
  },
  {
    "text": "customer role Incognito and now has a",
    "start": "401759",
    "end": "405000"
  },
  {
    "text": "corresponding permissions and verified",
    "start": "405000",
    "end": "407280"
  },
  {
    "text": "permissions policy store we see that he",
    "start": "407280",
    "end": "409919"
  },
  {
    "text": "is able to take certain actions which",
    "start": "409919",
    "end": "412500"
  },
  {
    "text": "includes searching pets which results in",
    "start": "412500",
    "end": "414840"
  },
  {
    "text": "an allow because of the policy the ID",
    "start": "414840",
    "end": "416880"
  },
  {
    "text": "that matches the policy ID and verified",
    "start": "416880",
    "end": "418919"
  },
  {
    "text": "permissions as well as Place orders",
    "start": "418919",
    "end": "421080"
  },
  {
    "text": "which also references the same policy ID",
    "start": "421080",
    "end": "426138"
  },
  {
    "text": "let's go ahead and sign back out and go",
    "start": "426960",
    "end": "430319"
  },
  {
    "text": "back to our policy store so we've",
    "start": "430319",
    "end": "432720"
  },
  {
    "text": "created this and demonstrated the",
    "start": "432720",
    "end": "434819"
  },
  {
    "text": "simplest of all policies all customers",
    "start": "434819",
    "end": "436800"
  },
  {
    "text": "can search for pets in place orders now",
    "start": "436800",
    "end": "439139"
  },
  {
    "text": "let's define a policy that's a little",
    "start": "439139",
    "end": "440639"
  },
  {
    "text": "more specific or",
    "start": "440639",
    "end": "442500"
  },
  {
    "text": "or fine-grained",
    "start": "442500",
    "end": "444240"
  },
  {
    "text": "you can see that one of the actions that",
    "start": "444240",
    "end": "446340"
  },
  {
    "text": "was displayed in our app was view in",
    "start": "446340",
    "end": "448860"
  },
  {
    "text": "order not unreasonably we'd want to",
    "start": "448860",
    "end": "451680"
  },
  {
    "text": "limit that action such that customers",
    "start": "451680",
    "end": "453780"
  },
  {
    "text": "can only view their own orders",
    "start": "453780",
    "end": "456180"
  },
  {
    "text": "so let's create another policy in our",
    "start": "456180",
    "end": "458580"
  },
  {
    "text": "policy store",
    "start": "458580",
    "end": "460919"
  },
  {
    "text": "the policy that we're pasting in now is",
    "start": "460919",
    "end": "463800"
  },
  {
    "text": "a permit policy that specifically states",
    "start": "463800",
    "end": "466319"
  },
  {
    "text": "that a principle in the customer's role",
    "start": "466319",
    "end": "469740"
  },
  {
    "text": "is allowed to get an order under the",
    "start": "469740",
    "end": "472560"
  },
  {
    "text": "condition that the principal is the",
    "start": "472560",
    "end": "475440"
  },
  {
    "text": "resource owner in this case what we've",
    "start": "475440",
    "end": "478020"
  },
  {
    "text": "been enabled to do is expand on the r",
    "start": "478020",
    "end": "480599"
  },
  {
    "text": "back or role-based Access Control policy",
    "start": "480599",
    "end": "482880"
  },
  {
    "text": "to include an ABAC or an attribute-based",
    "start": "482880",
    "end": "486060"
  },
  {
    "text": "access control policy",
    "start": "486060",
    "end": "487800"
  },
  {
    "text": "let's head back to the app and have",
    "start": "487800",
    "end": "490259"
  },
  {
    "text": "another go",
    "start": "490259",
    "end": "491400"
  },
  {
    "text": "first let's sign in as Bob",
    "start": "491400",
    "end": "495360"
  },
  {
    "text": "the policy that we've defined here",
    "start": "495360",
    "end": "498000"
  },
  {
    "text": "should allow any resource owner to view",
    "start": "498000",
    "end": "501660"
  },
  {
    "text": "orders",
    "start": "501660",
    "end": "502860"
  },
  {
    "text": "but hard coded into our application Avi",
    "start": "502860",
    "end": "505680"
  },
  {
    "text": "is the order owner for order one",
    "start": "505680",
    "end": "509460"
  },
  {
    "text": "when we go ahead and select view orders",
    "start": "509460",
    "end": "511979"
  },
  {
    "text": "as Bob we should expect to result in a",
    "start": "511979",
    "end": "515159"
  },
  {
    "text": "deny that's correct the reason we're",
    "start": "515159",
    "end": "517860"
  },
  {
    "text": "getting a deny is because again Bob is",
    "start": "517860",
    "end": "520200"
  },
  {
    "text": "not the resource owner but if we sign",
    "start": "520200",
    "end": "522899"
  },
  {
    "text": "out and sign back in as ABI knowing that",
    "start": "522899",
    "end": "525420"
  },
  {
    "text": "Avi is the listed owner of order one",
    "start": "525420",
    "end": "528660"
  },
  {
    "text": "what we should expect to see when",
    "start": "528660",
    "end": "530580"
  },
  {
    "text": "clicking view order is an allow and",
    "start": "530580",
    "end": "533459"
  },
  {
    "text": "again now we're resulting back with a",
    "start": "533459",
    "end": "535320"
  },
  {
    "text": "tie to the policy ID of the new policy",
    "start": "535320",
    "end": "537600"
  },
  {
    "text": "we created in verified permissions the",
    "start": "537600",
    "end": "540060"
  },
  {
    "text": "policies that we've looked at thus far",
    "start": "540060",
    "end": "541920"
  },
  {
    "text": "have been either very broad like the",
    "start": "541920",
    "end": "544380"
  },
  {
    "text": "example of any authenticated user can",
    "start": "544380",
    "end": "546660"
  },
  {
    "text": "add a pet or based on attributes of a",
    "start": "546660",
    "end": "550140"
  },
  {
    "text": "Target resource example users can view",
    "start": "550140",
    "end": "553200"
  },
  {
    "text": "their specific orders but a lot of times",
    "start": "553200",
    "end": "556200"
  },
  {
    "text": "we want to Grant permissions based on",
    "start": "556200",
    "end": "558540"
  },
  {
    "text": "roles it's particularly prominent in",
    "start": "558540",
    "end": "560940"
  },
  {
    "text": "Workforce oriented applications where",
    "start": "560940",
    "end": "563459"
  },
  {
    "text": "the workforce is organized into a",
    "start": "563459",
    "end": "566220"
  },
  {
    "text": "structured hierarchy with roles assigned",
    "start": "566220",
    "end": "568620"
  },
  {
    "text": "based on a user's position in that",
    "start": "568620",
    "end": "570839"
  },
  {
    "text": "hierarchy so let's take a look at how we",
    "start": "570839",
    "end": "573420"
  },
  {
    "text": "implement this element of authorization",
    "start": "573420",
    "end": "575220"
  },
  {
    "text": "model in verified permissions using",
    "start": "575220",
    "end": "577980"
  },
  {
    "text": "Cedar policy language",
    "start": "577980",
    "end": "580260"
  },
  {
    "text": "this example is going to illustrate the",
    "start": "580260",
    "end": "583560"
  },
  {
    "text": "division of responsibilities between the",
    "start": "583560",
    "end": "585360"
  },
  {
    "text": "identity provider and the permissions",
    "start": "585360",
    "end": "587100"
  },
  {
    "text": "management system",
    "start": "587100",
    "end": "588839"
  },
  {
    "text": "role assignment is best managed in the",
    "start": "588839",
    "end": "591420"
  },
  {
    "text": "identity provider so let's show how this",
    "start": "591420",
    "end": "593459"
  },
  {
    "text": "works by creating a group Incognito to",
    "start": "593459",
    "end": "595620"
  },
  {
    "text": "represent the store owner and assign Eve",
    "start": "595620",
    "end": "598440"
  },
  {
    "text": "to that role so we're using the identity",
    "start": "598440",
    "end": "601140"
  },
  {
    "text": "provider to keep track of who's assigned",
    "start": "601140",
    "end": "602760"
  },
  {
    "text": "to which role",
    "start": "602760",
    "end": "604140"
  },
  {
    "text": "we've already assigned Eve to the store",
    "start": "604140",
    "end": "606480"
  },
  {
    "text": "owner role but that doesn't address the",
    "start": "606480",
    "end": "608580"
  },
  {
    "text": "question of what's the store owner role",
    "start": "608580",
    "end": "610860"
  },
  {
    "text": "permitted or entitled to do and that's",
    "start": "610860",
    "end": "613560"
  },
  {
    "text": "where verified permissions comes in",
    "start": "613560",
    "end": "615899"
  },
  {
    "text": "within verified permissions we're going",
    "start": "615899",
    "end": "618060"
  },
  {
    "text": "to write a third policy that defines",
    "start": "618060",
    "end": "620040"
  },
  {
    "text": "What A store owner is permitted to do",
    "start": "620040",
    "end": "622320"
  },
  {
    "text": "so inside the verified permissions",
    "start": "622320",
    "end": "624240"
  },
  {
    "text": "console we've added another policy and",
    "start": "624240",
    "end": "626700"
  },
  {
    "text": "in the store we're going to paste in",
    "start": "626700",
    "end": "628140"
  },
  {
    "text": "what A store owner role is permitted to",
    "start": "628140",
    "end": "630600"
  },
  {
    "text": "do in this case they can execute the",
    "start": "630600",
    "end": "633720"
  },
  {
    "text": "actions of get store inventory and list",
    "start": "633720",
    "end": "636360"
  },
  {
    "text": "orders",
    "start": "636360",
    "end": "637680"
  },
  {
    "text": "now that we've created this policy",
    "start": "637680",
    "end": "641399"
  },
  {
    "text": "let's go ahead and jump back into our",
    "start": "641399",
    "end": "644399"
  },
  {
    "text": "application",
    "start": "644399",
    "end": "645899"
  },
  {
    "text": "as we sign in with Eve the expectations",
    "start": "645899",
    "end": "649079"
  },
  {
    "text": "that based on that policy we now see the",
    "start": "649079",
    "end": "651720"
  },
  {
    "text": "ability to list all orders",
    "start": "651720",
    "end": "654420"
  },
  {
    "text": "as we execute that action we do get an",
    "start": "654420",
    "end": "656760"
  },
  {
    "text": "allow because of the corresponding",
    "start": "656760",
    "end": "658320"
  },
  {
    "text": "policy outlined by the policy ID there",
    "start": "658320",
    "end": "661500"
  },
  {
    "text": "in our policy store that we just created",
    "start": "661500",
    "end": "664200"
  },
  {
    "text": "what we do not see is any of the",
    "start": "664200",
    "end": "667019"
  },
  {
    "text": "customer actions because while Eve is",
    "start": "667019",
    "end": "669720"
  },
  {
    "text": "listed in the store owner group in our",
    "start": "669720",
    "end": "671700"
  },
  {
    "text": "identity provider she is not listed in",
    "start": "671700",
    "end": "674160"
  },
  {
    "text": "the customers group and as such has not",
    "start": "674160",
    "end": "676800"
  },
  {
    "text": "inherited any of those actions roles are",
    "start": "676800",
    "end": "680040"
  },
  {
    "text": "a very intuitive way to think about",
    "start": "680040",
    "end": "681420"
  },
  {
    "text": "permissions especially in the work",
    "start": "681420",
    "end": "683100"
  },
  {
    "text": "environment and the simplest example",
    "start": "683100",
    "end": "685140"
  },
  {
    "text": "they map directly to your job function",
    "start": "685140",
    "end": "687120"
  },
  {
    "text": "and your job is to manage the store",
    "start": "687120",
    "end": "689519"
  },
  {
    "text": "we will therefore assign you a role as",
    "start": "689519",
    "end": "692100"
  },
  {
    "text": "store manager and that will permit you",
    "start": "692100",
    "end": "694079"
  },
  {
    "text": "to do everything necessary to manage the",
    "start": "694079",
    "end": "695940"
  },
  {
    "text": "store including listing inventories so",
    "start": "695940",
    "end": "698220"
  },
  {
    "text": "why do so many customers struggle with",
    "start": "698220",
    "end": "699660"
  },
  {
    "text": "role explosion where the number of roles",
    "start": "699660",
    "end": "701519"
  },
  {
    "text": "in their authorization model just get so",
    "start": "701519",
    "end": "703440"
  },
  {
    "text": "large well attempting to gain",
    "start": "703440",
    "end": "705839"
  },
  {
    "text": "fine-grained permissions through our",
    "start": "705839",
    "end": "707399"
  },
  {
    "text": "back leads to hundreds of roles being",
    "start": "707399",
    "end": "709620"
  },
  {
    "text": "created if not more this is difficult to",
    "start": "709620",
    "end": "711899"
  },
  {
    "text": "manage an audit let alone pass to a",
    "start": "711899",
    "end": "714060"
  },
  {
    "text": "policy decision point or PDP for",
    "start": "714060",
    "end": "715860"
  },
  {
    "text": "enforcement especially if these roles",
    "start": "715860",
    "end": "717720"
  },
  {
    "text": "need to be stepped into a small oadc",
    "start": "717720",
    "end": "719640"
  },
  {
    "text": "token so why does this happen well",
    "start": "719640",
    "end": "722040"
  },
  {
    "text": "there's a few different reasons but one",
    "start": "722040",
    "end": "723660"
  },
  {
    "text": "of which is that we start defining roles",
    "start": "723660",
    "end": "725579"
  },
  {
    "text": "at every level of restriction to provide",
    "start": "725579",
    "end": "729600"
  },
  {
    "text": "fine-grained permissions",
    "start": "729600",
    "end": "732420"
  },
  {
    "text": "so let's expand on the example we have",
    "start": "732420",
    "end": "734519"
  },
  {
    "text": "here Eve wants to expand her application",
    "start": "734519",
    "end": "737220"
  },
  {
    "text": "to be used by hundreds of pet stores",
    "start": "737220",
    "end": "738959"
  },
  {
    "text": "around the world with the current",
    "start": "738959",
    "end": "740820"
  },
  {
    "text": "permissions model any one of the store",
    "start": "740820",
    "end": "742500"
  },
  {
    "text": "manager role can list any order for any",
    "start": "742500",
    "end": "745440"
  },
  {
    "text": "store her first inclination was to",
    "start": "745440",
    "end": "747720"
  },
  {
    "text": "create a separate role for each store a",
    "start": "747720",
    "end": "749700"
  },
  {
    "text": "San Jose store a Boise store owner a",
    "start": "749700",
    "end": "752760"
  },
  {
    "text": "more Cobra store owner etc etc but you",
    "start": "752760",
    "end": "755820"
  },
  {
    "text": "quickly realized that this wasn't going",
    "start": "755820",
    "end": "757260"
  },
  {
    "text": "to work she needs a separate Cognito",
    "start": "757260",
    "end": "759420"
  },
  {
    "text": "group for every policy for each role",
    "start": "759420",
    "end": "762120"
  },
  {
    "text": "which would never scale a better",
    "start": "762120",
    "end": "763920"
  },
  {
    "text": "approach would be to constrain the store",
    "start": "763920",
    "end": "766139"
  },
  {
    "text": "manager policy in some way that an owner",
    "start": "766139",
    "end": "768839"
  },
  {
    "text": "can only list inventory for their store",
    "start": "768839",
    "end": "771360"
  },
  {
    "text": "luckily",
    "start": "771360",
    "end": "773820"
  },
  {
    "text": "Eve has thought ahead and in her design",
    "start": "773820",
    "end": "775860"
  },
  {
    "text": "she included a custom attribute",
    "start": "775860",
    "end": "778800"
  },
  {
    "text": "in the user profile called Employee",
    "start": "778800",
    "end": "781260"
  },
  {
    "text": "Store code",
    "start": "781260",
    "end": "783060"
  },
  {
    "text": "by defining the employee's stower code",
    "start": "783060",
    "end": "785700"
  },
  {
    "text": "attribute as London we have set Eve's",
    "start": "785700",
    "end": "789240"
  },
  {
    "text": "store ownership to the London store",
    "start": "789240",
    "end": "793920"
  },
  {
    "text": "this attribute is going to be injected",
    "start": "793920",
    "end": "796200"
  },
  {
    "text": "into the oidc token that Cognito",
    "start": "796200",
    "end": "798240"
  },
  {
    "text": "generates and passes to the application",
    "start": "798240",
    "end": "800579"
  },
  {
    "text": "because that attribute is in the token",
    "start": "800579",
    "end": "803040"
  },
  {
    "text": "it is already being passed to verified",
    "start": "803040",
    "end": "805079"
  },
  {
    "text": "permissions as an attribute that we can",
    "start": "805079",
    "end": "806820"
  },
  {
    "text": "reference in our policy so the great",
    "start": "806820",
    "end": "809399"
  },
  {
    "text": "news is that Eve doesn't even need to",
    "start": "809399",
    "end": "811260"
  },
  {
    "text": "touch her code all she needs to do is",
    "start": "811260",
    "end": "813480"
  },
  {
    "text": "update her store manager policy to",
    "start": "813480",
    "end": "815820"
  },
  {
    "text": "reference this attribute",
    "start": "815820",
    "end": "818880"
  },
  {
    "text": "so jumping into the policy we're going",
    "start": "818880",
    "end": "822000"
  },
  {
    "text": "to update the policy to include a",
    "start": "822000",
    "end": "824100"
  },
  {
    "text": "condition where the principal Employee",
    "start": "824100",
    "end": "826620"
  },
  {
    "text": "Store code must also equal the",
    "start": "826620",
    "end": "828920"
  },
  {
    "text": "resource.store ID in order to list those",
    "start": "828920",
    "end": "831420"
  },
  {
    "text": "orders",
    "start": "831420",
    "end": "833100"
  },
  {
    "text": "as we jump back into our application and",
    "start": "833100",
    "end": "835260"
  },
  {
    "text": "sign in as Eve",
    "start": "835260",
    "end": "837120"
  },
  {
    "text": "we can go ahead and list orders for",
    "start": "837120",
    "end": "840480"
  },
  {
    "text": "another store location let's pick Boise",
    "start": "840480",
    "end": "843300"
  },
  {
    "text": "in this case",
    "start": "843300",
    "end": "845160"
  },
  {
    "text": "what we see here is that while Eve is a",
    "start": "845160",
    "end": "847500"
  },
  {
    "text": "store owner the policy listed in",
    "start": "847500",
    "end": "849480"
  },
  {
    "text": "verified permissions now only grants",
    "start": "849480",
    "end": "851160"
  },
  {
    "text": "access under the condition that the",
    "start": "851160",
    "end": "852720"
  },
  {
    "text": "calling principle is both in the role of",
    "start": "852720",
    "end": "855360"
  },
  {
    "text": "store owner but also has the same",
    "start": "855360",
    "end": "858540"
  },
  {
    "text": "attribute for employee store code which",
    "start": "858540",
    "end": "861600"
  },
  {
    "text": "manages access to orders from a single",
    "start": "861600",
    "end": "864240"
  },
  {
    "text": "store location",
    "start": "864240",
    "end": "865740"
  },
  {
    "text": "so we get a deny for Boise and we get an",
    "start": "865740",
    "end": "869399"
  },
  {
    "text": "allow for London which matches that",
    "start": "869399",
    "end": "871680"
  },
  {
    "text": "attribute on Eve's profile",
    "start": "871680",
    "end": "874320"
  },
  {
    "text": "and that's it",
    "start": "874320",
    "end": "876060"
  },
  {
    "text": "today we introduced Amazon verified",
    "start": "876060",
    "end": "878399"
  },
  {
    "text": "permissions and I showed you an example",
    "start": "878399",
    "end": "880500"
  },
  {
    "text": "application where we leverage verified",
    "start": "880500",
    "end": "882300"
  },
  {
    "text": "permissions for authorization decisions",
    "start": "882300",
    "end": "885180"
  },
  {
    "text": "verified permissions is available today",
    "start": "885180",
    "end": "888360"
  },
  {
    "text": "in all commercial regions excluding",
    "start": "888360",
    "end": "890519"
  },
  {
    "text": "those based in China for detailed",
    "start": "890519",
    "end": "892980"
  },
  {
    "text": "information see the Amazon verified",
    "start": "892980",
    "end": "895320"
  },
  {
    "text": "permissions user guide and review the",
    "start": "895320",
    "end": "897600"
  },
  {
    "text": "provided information on the verified",
    "start": "897600",
    "end": "899160"
  },
  {
    "text": "permissions resource pages I have linked",
    "start": "899160",
    "end": "902459"
  },
  {
    "text": "and added QR codes to both of those here",
    "start": "902459",
    "end": "904980"
  },
  {
    "text": "in the thank you as well as the AWS",
    "start": "904980",
    "end": "907079"
  },
  {
    "text": "sample pet store app as promised so that",
    "start": "907079",
    "end": "910079"
  },
  {
    "text": "you can run through the demo yourself",
    "start": "910079",
    "end": "912660"
  },
  {
    "text": "thank you",
    "start": "912660",
    "end": "915440"
  }
]