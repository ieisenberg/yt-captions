[
  {
    "text": "hello everyone welcome um I was actually talking to a few people last night and the",
    "start": "2000",
    "end": "9160"
  },
  {
    "text": "conversation was about how interact ability is so important for today's",
    "start": "9160",
    "end": "14320"
  },
  {
    "text": "modern web applications and quite quickly the conversation translated into well what",
    "start": "14320",
    "end": "20039"
  },
  {
    "text": "does it mean in terms of response times for web applications and are those response times even",
    "start": "20039",
    "end": "25679"
  },
  {
    "text": "achievable uh there's obviously quite a bit of research that has happened in this area and um it's generally accepted that uh",
    "start": "25679",
    "end": "35559"
  },
  {
    "text": "anytime when your response times are more than 100 milliseconds um your users start getting",
    "start": "35559",
    "end": "43280"
  },
  {
    "text": "disengaged um if you look at the speed of light on glass fibers um if you had to go around the",
    "start": "43280",
    "end": "51320"
  },
  {
    "text": "globe it's going to take you about 220 milliseconds so it's well within the realm of possibility that's good that's",
    "start": "51320",
    "end": "57079"
  },
  {
    "text": "a good sign um if you look at today's modern day applications they",
    "start": "57079",
    "end": "63000"
  },
  {
    "text": "have about 50 to 100 objects in each of their web pages which means that uh for you to",
    "start": "63000",
    "end": "70600"
  },
  {
    "text": "actually give a performance that's acceptable U you have to continuously invest in making your applications fast",
    "start": "70600",
    "end": "78439"
  },
  {
    "text": "right uh in 2006 Forester research released an article which said that at",
    "start": "78439",
    "end": "85520"
  },
  {
    "text": "about 4 second response times your customers start abandoning your web",
    "start": "85520",
    "end": "92360"
  },
  {
    "text": "pages just about 3 years later they published another article which said",
    "start": "92360",
    "end": "98159"
  },
  {
    "text": "that time has shrunk to about 3 seconds so in three years 1 second reduction in",
    "start": "98159",
    "end": "104079"
  },
  {
    "text": "how fast your applications have to be um generally today it's an acceptable",
    "start": "104079",
    "end": "110840"
  },
  {
    "text": "rule that uh you need response times well below 2C in fact many human",
    "start": "110840",
    "end": "117119"
  },
  {
    "text": "computer interaction experts say that uh a 2C response time is such a low bar and you need to go",
    "start": "117119",
    "end": "122640"
  },
  {
    "text": "faster um now we all have great applications uh we have competitors who",
    "start": "122640",
    "end": "128119"
  },
  {
    "text": "actually have good applications as well and uh you don't have a choice but to",
    "start": "128119",
    "end": "133920"
  },
  {
    "text": "continuously invest in making your web applications faster because you know what your customers are going to come",
    "start": "133920",
    "end": "139200"
  },
  {
    "text": "and tell you uh your applications are great I love it but they're never going to come and tell you I just wish You'",
    "start": "139200",
    "end": "145000"
  },
  {
    "text": "made it a little bit slower you're never going to hear that comment right on that note folks um my name is kand R Prasad",
    "start": "145000",
    "end": "152680"
  },
  {
    "text": "uh I run the edge services department at AWS um I'm going to be doing a presentation on building Lightning Fast",
    "start": "152680",
    "end": "159000"
  },
  {
    "text": "applications with cloudfront and rout 53 I'm going to be doing it with Peres who my colleague here um and let's get",
    "start": "159000",
    "end": "166920"
  },
  {
    "text": "started so what are the the main fundamental facts that you need to take into account when you build we web",
    "start": "167040",
    "end": "173280"
  },
  {
    "text": "applications but the first and foremost one is tight security um your customers expect that",
    "start": "173280",
    "end": "179879"
  },
  {
    "text": "that off you okay you you can provide them nothing less than airtight security",
    "start": "179879",
    "end": "184920"
  },
  {
    "text": "right the next one is availability okay um you have to make",
    "start": "184920",
    "end": "190080"
  },
  {
    "text": "your applications statistically indistinguishable from near",
    "start": "190080",
    "end": "195720"
  },
  {
    "text": "perfect and finally unmatched performance well uh if your applications",
    "start": "195720",
    "end": "203200"
  },
  {
    "text": "are not available it does not matter how good your performance is so availability",
    "start": "203200",
    "end": "208720"
  },
  {
    "text": "is super key okay now how does AWS help and uh PVS will go into a lot more",
    "start": "208720",
    "end": "216360"
  },
  {
    "text": "depths here but I'll give you four practical suggestions the first one is",
    "start": "216360",
    "end": "221680"
  },
  {
    "text": "uh using Amazon's Route 53 DNS layer um it's called the DNS failover capability",
    "start": "221680",
    "end": "228360"
  },
  {
    "text": "what this lets you do is it actually has a paradigm shift in how you can actually design for high availability what we",
    "start": "228360",
    "end": "235599"
  },
  {
    "text": "expect the customers to set up um with the NSF [Music]",
    "start": "235599",
    "end": "242360"
  },
  {
    "text": "sorry is that um you actually pre-configure your",
    "start": "242360",
    "end": "248120"
  },
  {
    "text": "applications whether it's hot hot standby hot cold standby you pre-configure applications right at the",
    "start": "248120",
    "end": "253480"
  },
  {
    "text": "time of setup which means um when you do have a failure in your application later layer you're not actually going and",
    "start": "253480",
    "end": "260440"
  },
  {
    "text": "addressing it by changing the control plane either at DNS or your application layer right the DNS system",
    "start": "260440",
    "end": "267639"
  },
  {
    "text": "automatically moves your your assets or your um your end users to performing",
    "start": "267639",
    "end": "275080"
  },
  {
    "text": "applications the next one is the use of um of uh cloudfront with custom error",
    "start": "275080",
    "end": "283080"
  },
  {
    "text": "Pages this is a feature that we released fairly recently what this lets you do is",
    "start": "283080",
    "end": "288360"
  },
  {
    "text": "it lets you configure your web application such that you get the illusion of Highly available site that",
    "start": "288360",
    "end": "294440"
  },
  {
    "text": "means even if your site is down and your your applications in the back end are down uh you can give the illusion that",
    "start": "294440",
    "end": "301120"
  },
  {
    "text": "the sites are still functional okay and this gives you a little bit more time to go and uh",
    "start": "301120",
    "end": "306160"
  },
  {
    "text": "troubleshoot your applications the last suggestion I would have is um the fact that cloudfront is",
    "start": "306160",
    "end": "314080"
  },
  {
    "text": "essentially a cache which means that if your Origins are down we are going to be St serving stale content to your end",
    "start": "314080",
    "end": "321479"
  },
  {
    "text": "users so your end users still see that your websites are still functioning",
    "start": "321479",
    "end": "329400"
  },
  {
    "text": "well why does performance matter um your applications are now global which means",
    "start": "330600",
    "end": "336520"
  },
  {
    "text": "that uh your end users are not in specific geog geographies you need your end users to be accessing your",
    "start": "336520",
    "end": "342800"
  },
  {
    "text": "application from throughout the globe right and uh customer engagement is",
    "start": "342800",
    "end": "349039"
  },
  {
    "text": "key A Better Faster highly available application increases your customer",
    "start": "349039",
    "end": "354560"
  },
  {
    "text": "adoption increases your engagement increases the page views that you actually see",
    "start": "354560",
    "end": "360400"
  },
  {
    "text": "uh in fact one statistic puts it as a second delay in your web application",
    "start": "360400",
    "end": "365479"
  },
  {
    "text": "layer uh translates to about 7% loss in Revenue okay so if your site is doing",
    "start": "365479",
    "end": "371039"
  },
  {
    "text": "about $100,000 every single day that's about $37 million a year $2.5 million is",
    "start": "371039",
    "end": "376479"
  },
  {
    "text": "the potential Revenue loss when your applications are not performing at the web application",
    "start": "376479",
    "end": "382400"
  },
  {
    "text": "layer so uh how do developers actually address this most developers um spend a",
    "start": "383599",
    "end": "389960"
  },
  {
    "text": "lot of time and energy going and optimizing the service side components",
    "start": "389960",
    "end": "395400"
  },
  {
    "text": "for improving performance now uh that's a good thing you have to continue to do that uh there",
    "start": "395400",
    "end": "401520"
  },
  {
    "text": "are reasons why developers do that and it's because your server side uh application layer is always better",
    "start": "401520",
    "end": "407840"
  },
  {
    "text": "instrumented than your web application layer right so when it's better instrumented you know exactly where your",
    "start": "407840",
    "end": "413720"
  },
  {
    "text": "bottlenecks are uh it's easier to actually work through it it's easier to know exactly where you need to spend",
    "start": "413720",
    "end": "418800"
  },
  {
    "text": "your efforts on okay but 80% of a user's perceived",
    "start": "418800",
    "end": "425879"
  },
  {
    "text": "latency actually comes from the web tier okay so um you have to continuously",
    "start": "425879",
    "end": "432599"
  },
  {
    "text": "invest in making the web tier perform because that is something that's",
    "start": "432599",
    "end": "438160"
  },
  {
    "text": "the face of your entire offering that you give to your",
    "start": "438160",
    "end": "443080"
  },
  {
    "text": "customers so how do we improve performance well before we get to that uh let's talk about the typical anatomy",
    "start": "443360",
    "end": "449240"
  },
  {
    "text": "of of a web application it has two major categories there static content that's Dynamic content static content is",
    "start": "449240",
    "end": "456639"
  },
  {
    "text": "something that most people are familiar with uh this content typically has high ttls you also have some form of static",
    "start": "456639",
    "end": "463840"
  },
  {
    "text": "content that has low ttls and then there is dynamic content which is typically um",
    "start": "463840",
    "end": "470039"
  },
  {
    "text": "objects which have zero TTL that means it's not cachable um here are some examples High",
    "start": "470039",
    "end": "477759"
  },
  {
    "text": "TTL objects images CSS JavaScript um and low TTL objects and",
    "start": "477759",
    "end": "484639"
  },
  {
    "text": "this is an amazon.com website and what that uh that section down below talks",
    "start": "484639",
    "end": "489759"
  },
  {
    "text": "about it talks about uh recommendations based on your browsing history if you",
    "start": "489759",
    "end": "494879"
  },
  {
    "text": "think about it that really does not have to be real time uh you can cach that",
    "start": "494879",
    "end": "499960"
  },
  {
    "text": "information although for a smaller period of time of the order of a few seconds uh it's still",
    "start": "499960",
    "end": "506560"
  },
  {
    "text": "cachable not going to go into too much of detail this architecture but this is something that's very common people put",
    "start": "507000",
    "end": "512560"
  },
  {
    "text": "a CDN like Cloud front in front of static assets static assets are stored",
    "start": "512560",
    "end": "517839"
  },
  {
    "text": "in S3 or a custom origin uh you serve your website um through cloudfront for",
    "start": "517839",
    "end": "523320"
  },
  {
    "text": "the static assets and the low TTL objects for dynamic objects uh you directly go to either ec2 instances elb",
    "start": "523320",
    "end": "529959"
  },
  {
    "text": "instances or your custom",
    "start": "529959",
    "end": "533839"
  },
  {
    "text": "Origins Dynamic content cannot be cached okay um it's something that has zero",
    "start": "535279",
    "end": "542160"
  },
  {
    "text": "TTL but if you look at what this content is it's personalized information it's",
    "start": "542160",
    "end": "548000"
  },
  {
    "text": "account information it's shopping cart information it's personalized pokes it's something that your your customers",
    "start": "548000",
    "end": "553480"
  },
  {
    "text": "really care about in fact I don't think I can think of any web application today that does not have a component of static",
    "start": "553480",
    "end": "561519"
  },
  {
    "text": "and dynamic content you rarely build web pages which are just purely static content okay so your end users care",
    "start": "561519",
    "end": "569800"
  },
  {
    "text": "about this content it actually affects 100% of your pages and it's something that you need to spend time improving at",
    "start": "569800",
    "end": "577480"
  },
  {
    "text": "the web tier as well so the question that we should be",
    "start": "577480",
    "end": "583440"
  },
  {
    "text": "asking is why wouldn't we put a CDN like cloudfront both in front of your Dynamic",
    "start": "583440",
    "end": "590880"
  },
  {
    "text": "and your static pages and when we propose this to many of our customers um we actually get",
    "start": "590880",
    "end": "598160"
  },
  {
    "text": "three distinct answers why don't customers use a CDN for dynamic",
    "start": "598160",
    "end": "604880"
  },
  {
    "text": "content and by far the largest reason why customers don't use a CDN for",
    "start": "604880",
    "end": "611120"
  },
  {
    "text": "dynamic content is because they're not sure what the value of a CDN is okay",
    "start": "611120",
    "end": "616200"
  },
  {
    "text": "you're going back to your Origins for every single request CDN are typically supposed to be cashes so what value does",
    "start": "616200",
    "end": "622240"
  },
  {
    "text": "it give you that's that's a common um expectation that customers have that's a",
    "start": "622240",
    "end": "627720"
  },
  {
    "text": "common reason that they provide as to why they don't use a CDN okay the second reason they give us is the small set of",
    "start": "627720",
    "end": "633600"
  },
  {
    "text": "customers who come and tell us we see the value of it but you know what um",
    "start": "633600",
    "end": "638680"
  },
  {
    "text": "Dynamic content acceleration is a premium product okay it requires",
    "start": "638680",
    "end": "643800"
  },
  {
    "text": "expensive Professional Services it's not something that's available for the masses okay it's not something that's",
    "start": "643800",
    "end": "649240"
  },
  {
    "text": "common to use it's not something that's easy to use and they come back and say that's why we don't use a CDN for",
    "start": "649240",
    "end": "654360"
  },
  {
    "text": "dynamic content well let me tell you what the benefits are I'm going to quickly go",
    "start": "654360",
    "end": "660839"
  },
  {
    "text": "through what the benefits are and hand it off to per to go into the depths of this of these reasons why you need a CDM",
    "start": "660839",
    "end": "667279"
  },
  {
    "text": "for dynamic content the first one the first two of them actually are TCP",
    "start": "667279",
    "end": "673399"
  },
  {
    "text": "optimizations so if you look at it your end users are connecting to Edge servers distributed throughout the world okay",
    "start": "673399",
    "end": "680519"
  },
  {
    "text": "those Edge servers connect back to the origins um using highly optimized TCP",
    "start": "680519",
    "end": "685680"
  },
  {
    "text": "connections that means the window sizes are already scaled it's persistent connect it already gives you a benefit in terms",
    "start": "685680",
    "end": "691600"
  },
  {
    "text": "of reducing your roundt trip time okay the third reason here is SSL termination",
    "start": "691600",
    "end": "697880"
  },
  {
    "text": "um if you look at the trend for where web applications are going um almost all web applications are",
    "start": "697880",
    "end": "705560"
  },
  {
    "text": "requiring that you secure the delivery to your end users okay so one of the",
    "start": "705560",
    "end": "711800"
  },
  {
    "text": "biggest benefits that you get by having a CDN in front of dynamic content is",
    "start": "711800",
    "end": "717519"
  },
  {
    "text": "termination of s SSL right at the edge which means that the long connections that you have from your end users back",
    "start": "717519",
    "end": "723920"
  },
  {
    "text": "to the origins are reduced down to Shorter connections to the edge locations right uh recently we uh",
    "start": "723920",
    "end": "732040"
  },
  {
    "text": "released put and post support in fact it's broader HTP support put post patch",
    "start": "732040",
    "end": "737199"
  },
  {
    "text": "delete and options and the same benefits of SSL termination uh TCP window",
    "start": "737199",
    "end": "743120"
  },
  {
    "text": "optimizations back to the origin are actually available as part of um these broad HTTP web support in",
    "start": "743120",
    "end": "750480"
  },
  {
    "text": "cloudfront the next one is latency based routing and latency based routing is uh",
    "start": "750480",
    "end": "756199"
  },
  {
    "text": "the concept of using um a service like Route 53 that picks the right origin",
    "start": "756199",
    "end": "762079"
  },
  {
    "text": "that you need to go to so imagine your end users are connecting to Ed servers which are distributed through the world",
    "start": "762079",
    "end": "767680"
  },
  {
    "text": "and you have multiple Origins for high availability um once you use rout 3 and cloudfront in conjunction uh cloudfront",
    "start": "767680",
    "end": "774440"
  },
  {
    "text": "can connect to the right origin based on Route 53's answers okay uh that's actually a pretty intense topic that and",
    "start": "774440",
    "end": "780800"
  },
  {
    "text": "the DNS failover we actually have a separate session on this I encourage you to go see that session it's on Friday at",
    "start": "780800",
    "end": "786600"
  },
  {
    "text": "1:30 it's called architecting for high availability using elb and R 53 uh pretty interesting session we figured",
    "start": "786600",
    "end": "793320"
  },
  {
    "text": "it's important enough that we need to have a dedicated session for it and the last one is uh low prices okay our",
    "start": "793320",
    "end": "801360"
  },
  {
    "text": "Dynamic content feature in cloudfront does not cost you anything more than your static content feature okay that's",
    "start": "801360",
    "end": "808000"
  },
  {
    "text": "actually a huge benefit because uh the first reason that customers gave was a technical reason we're going to go into",
    "start": "808000",
    "end": "813440"
  },
  {
    "text": "the depths of it the next two reasons were economical reasons and we've addressed it automatically okay we don't",
    "start": "813440",
    "end": "819120"
  },
  {
    "text": "see a reason why we need to spend more money or you guys need to spend more money accelerating Dynamic content by",
    "start": "819120",
    "end": "824920"
  },
  {
    "text": "using a CDN Cloud firm with that I'm going to hand it off",
    "start": "824920",
    "end": "830360"
  },
  {
    "text": "to perise we'll give you more details about all those topics I talked about thank you per thank you",
    "start": "830360",
    "end": "837600"
  },
  {
    "text": "pad hello every",
    "start": "837600",
    "end": "841040"
  },
  {
    "text": "everyone all right well hope you guys are ready for ton of technical stuff tcpip optimization latency based routing",
    "start": "842920",
    "end": "850240"
  },
  {
    "text": "packet optimization everything that you can think of uh it's always hard to go after Andy's keynote uh I'd actually",
    "start": "850240",
    "end": "857440"
  },
  {
    "text": "have two options after Andy's keynote or after Thursday's party so I wasn't sure which one is best so I picked this one",
    "start": "857440",
    "end": "865480"
  },
  {
    "text": "uh so again I'm going to go through a lot of uh technical discuss questions lot of technical details before I get",
    "start": "865480",
    "end": "871880"
  },
  {
    "text": "into that I want to get into talking about reusable static or uh static",
    "start": "871880",
    "end": "877680"
  },
  {
    "text": "Contents I think it's really important for us to Define that uh and let me actually first Define it uh the way I",
    "start": "877680",
    "end": "884600"
  },
  {
    "text": "define static or reusable content is given a Content where state of the content doesn't change for a specific",
    "start": "884600",
    "end": "891000"
  },
  {
    "text": "period of time I want to focus on that specific period of time it's really important I don't know if you guys",
    "start": "891000",
    "end": "896120"
  },
  {
    "text": "noticed I didn't say images I didn't say CSS I didn't say ja javascripts I don't want to confine myself to a specific",
    "start": "896120",
    "end": "902320"
  },
  {
    "text": "content type that's what a lot of customers uh get into trouble I I'm a solution architect I've worked with a",
    "start": "902320",
    "end": "908000"
  },
  {
    "text": "lot of customers and uh we get into architecting their infrastructure we get into diagrams and I see a pattern emerge",
    "start": "908000",
    "end": "914399"
  },
  {
    "text": "and I see how are you using cloudfront for this pattern uh and they typically say no I don't have images I don't have",
    "start": "914399",
    "end": "920639"
  },
  {
    "text": "CSS I don't have JavaScript and that that actually kills me because that's not what cloud font only good for cloud",
    "start": "920639",
    "end": "925880"
  },
  {
    "text": "font can do a ton of things and if you start not to Define yourself just for images of JavaScript and not to use a",
    "start": "925880",
    "end": "932959"
  },
  {
    "text": "cloud from just for that you open yourself up to a lot of optimizations and the next content would",
    "start": "932959",
    "end": "940000"
  },
  {
    "text": "be a type of content would be unique or dynamic content that's a Content where where you create it as soon as you",
    "start": "940000",
    "end": "946120"
  },
  {
    "text": "create it the state of that object changes meaning there something in that object changes so it doesn't stay the",
    "start": "946120",
    "end": "951360"
  },
  {
    "text": "same and uh as P was mentioning uh it is probably not a good thing to cash you",
    "start": "951360",
    "end": "956600"
  },
  {
    "text": "have to proxy that back to your infrastructure and we'll talk about how what kind of optimization you can do on",
    "start": "956600",
    "end": "961759"
  },
  {
    "text": "this content so I have an example site that I want to use today it's I've seen the",
    "start": "961759",
    "end": "969240"
  },
  {
    "text": "site before I'm not sure if you guys seen it but I've seen it before but it's an example website",
    "start": "969240",
    "end": "975160"
  },
  {
    "text": "uh and uh Dynamic content in this case would be index JSP so just the wrapper",
    "start": "975160",
    "end": "980519"
  },
  {
    "text": "around the site the first thing that comes and the embedded content would be the static content so JavaScript CSS or",
    "start": "980519",
    "end": "988240"
  },
  {
    "text": "anything else and we'll get into the the other types of content so if I do my performances and",
    "start": "988240",
    "end": "994480"
  },
  {
    "text": "I've actually done this uh it's it's it's not a fake number uh it this page takes one and a half second to download",
    "start": "994480",
    "end": "1000680"
  },
  {
    "text": "or to to render well I don't know if you guys pay attention pad was talking about this",
    "start": "1000680",
    "end": "1007399"
  },
  {
    "text": "research and if every second of delay you can be losing about two and a half",
    "start": "1007399",
    "end": "1012680"
  },
  {
    "text": "million dollars of sales and imagine PAD as my boss comes up to me and says heyv we have one and a half second Lo page",
    "start": "1012680",
    "end": "1019839"
  },
  {
    "text": "load time I've seen this research if you shave off a second of this page load time we could we could be gaining about",
    "start": "1019839",
    "end": "1026400"
  },
  {
    "text": "two and a half million dollar in sales so that would be my goal for rest of the",
    "start": "1026400",
    "end": "1032079"
  },
  {
    "text": "session so that's me I'm going on whiteboard doing a lot of brainstorming and I come up with two very genius ideas",
    "start": "1032079",
    "end": "1038319"
  },
  {
    "text": "accelerating static contents and accelerating Dynamic",
    "start": "1038319",
    "end": "1043600"
  },
  {
    "text": "contents so before I get into uh acceleration discussion and I'll",
    "start": "1043600",
    "end": "1049120"
  },
  {
    "text": "technical details of that I want to introduce you guys to my uh favorite tool which is waterfall",
    "start": "1049120",
    "end": "1054960"
  },
  {
    "text": "graphs uh waterfall graphs is by far the most important web performance measurement tool most browsers have it",
    "start": "1054960",
    "end": "1061640"
  },
  {
    "text": "as a plug-in so uh you can think of Firefox uh Chrome Safari they all have",
    "start": "1061640",
    "end": "1068960"
  },
  {
    "text": "it and the reason I want to have or want to go through waterfall graphs is that",
    "start": "1068960",
    "end": "1074000"
  },
  {
    "text": "it gives me a clue as to what happens between the time when you guys type something in the browser and when the",
    "start": "1074000",
    "end": "1079559"
  },
  {
    "text": "actual browser renders the page and you actually see the content so it's really important for me to understand what",
    "start": "1079559",
    "end": "1084799"
  },
  {
    "text": "happens and if I can understand what happens I can start optimizing my content it typically looks something",
    "start": "1084799",
    "end": "1091720"
  },
  {
    "text": "like this uh the first bar would be the first thing that gets loaded uh so index JSP or anything else",
    "start": "1091720",
    "end": "1098440"
  },
  {
    "text": "just a wrapper everything proceeding that would be anything embedded within that uh page and the Order of that again",
    "start": "1098440",
    "end": "1105559"
  },
  {
    "text": "the first thing comes and everything else and how long how how uh large or how the length of the bar would be how",
    "start": "1105559",
    "end": "1111720"
  },
  {
    "text": "long that content took to download or to to render in browser each bar consists",
    "start": "1111720",
    "end": "1117679"
  },
  {
    "text": "of multiple uh uh components DNS lookup time TCP connection time and the TCP",
    "start": "1117679",
    "end": "1123520"
  },
  {
    "text": "connection time is the hand check that happens between the end user and the web server the time to First buy this is an",
    "start": "1123520",
    "end": "1129840"
  },
  {
    "text": "interesting uh uh component it tells you how uh busy your server is this is the",
    "start": "1129840",
    "end": "1135159"
  },
  {
    "text": "time that when you send a request and and and web server sends at the first packet back so if the server is really",
    "start": "1135159",
    "end": "1141640"
  },
  {
    "text": "busy this first time bite would be a little bit larger and the content download time this is after the first",
    "start": "1141640",
    "end": "1146960"
  },
  {
    "text": "bite time and the actual content gets to the browser so how long that",
    "start": "1146960",
    "end": "1152039"
  },
  {
    "text": "takes again to give you an example uh the first bar would be index JSP would be the the wrap around all my content",
    "start": "1152039",
    "end": "1159080"
  },
  {
    "text": "proceeding content would be anything within that page so all the images index images CSS",
    "start": "1159080",
    "end": "1166200"
  },
  {
    "text": "JavaScript all right so so let's get into optimizing my static contents and I promise you this is not going to be just",
    "start": "1167360",
    "end": "1172400"
  },
  {
    "text": "boring caching stuff it's going to be a lot of cool stuff we're going to talk about here but I do have to start with image and CSS and JavaScript that's the",
    "start": "1172400",
    "end": "1178960"
  },
  {
    "text": "easiest thing I can do I'm just going to Cache that on cloudfront optimize it and speed up the",
    "start": "1178960",
    "end": "1185080"
  },
  {
    "text": "delivery of the page easy I'm not going to spend too much time in this but I'm going to give you a demonstration how it",
    "start": "1185080",
    "end": "1191039"
  },
  {
    "text": "works just if if you're not familiar with it the end user goes to cloudfront location Cloud closest cloudfront",
    "start": "1191039",
    "end": "1197120"
  },
  {
    "text": "location uh uh CL goes back to the origin to get the content because it doesn't have the content at the given",
    "start": "1197120",
    "end": "1203200"
  },
  {
    "text": "time the origin responds back uh with the content now Edge location has that",
    "start": "1203200",
    "end": "1208960"
  },
  {
    "text": "content content gets delivered to the end user now when the second user comes well",
    "start": "1208960",
    "end": "1214880"
  },
  {
    "text": "I'm not sure what that is but uh the content is there uh The Edge location",
    "start": "1214880",
    "end": "1220799"
  },
  {
    "text": "the cloud location responds back with the with the with the image now the benefits of that is",
    "start": "1220799",
    "end": "1227080"
  },
  {
    "text": "content is closer to the end user and obviously there anything that closer to the end user gives you better impr",
    "start": "1227080",
    "end": "1233120"
  },
  {
    "text": "better performance and better user experience and also offloads your infrastructure from serving the same",
    "start": "1233120",
    "end": "1239919"
  },
  {
    "text": "content multiple times you if if it's the same content why do you have to serve it multiple times offload that to",
    "start": "1239919",
    "end": "1247240"
  },
  {
    "text": "cloudfront now again remember this was the example page that I was uh showing you guys one and a half second actually",
    "start": "1247240",
    "end": "1253480"
  },
  {
    "text": "it was 1.4 seconds but let's just round that up to one and a half second the page load time",
    "start": "1253480",
    "end": "1259360"
  },
  {
    "text": "this is the actual test I've done I started caching with cloudfront uh and after caching the",
    "start": "1259360",
    "end": "1266400"
  },
  {
    "text": "content JavaScript CSS and very simple stuff my performance is at 770",
    "start": "1266400",
    "end": "1271760"
  },
  {
    "text": "milliseconds now that's almost 90% of improvement just simply by caching and I",
    "start": "1271760",
    "end": "1277279"
  },
  {
    "text": "haven't done all the other optimization that I want to do so I still have 200 milliseconds left so again am I done yet",
    "start": "1277279",
    "end": "1284679"
  },
  {
    "text": "I'm not I'm not I'm not completely done yet I still have the goal of half a second to",
    "start": "1284679",
    "end": "1290679"
  },
  {
    "text": "meet so the way I want to do that is cach as much as I can now remember I",
    "start": "1290679",
    "end": "1296039"
  },
  {
    "text": "talked about uh so caching as much as I can and what what else would I cach I mean I'm",
    "start": "1296039",
    "end": "1302320"
  },
  {
    "text": "already caching images I'm already caching JavaScript and CSS what else can I cach uh now one thing I could do is I",
    "start": "1302320",
    "end": "1310880"
  },
  {
    "text": "can go back and look at my w3c logs the web server logs that I have and find uh anything else that's getting hit on my",
    "start": "1310880",
    "end": "1317600"
  },
  {
    "text": "web server so this is a simple report that tell report that tells me that all the stuff that you're serving and and I",
    "start": "1317600",
    "end": "1324320"
  },
  {
    "text": "can order that and I can run a simple query if you guys are SQL familiar with SQL this would be the simple query that",
    "start": "1324320",
    "end": "1330000"
  },
  {
    "text": "you can run run it on RDS EMR elastic map reduce you can run that on Amazon",
    "start": "1330000",
    "end": "1335559"
  },
  {
    "text": "red shift or anything that you may have doesn't have to be those Solutions uh so I can run that and get a",
    "start": "1335559",
    "end": "1341919"
  },
  {
    "text": "report similar to this which would be an ordered list of content that I'm serving starts with index JSP uh all the",
    "start": "1341919",
    "end": "1348840"
  },
  {
    "text": "JavaScript CSS GIF and everything that I have and a few other things that looks a little bit you know I guess strange it",
    "start": "1348840",
    "end": "1356200"
  },
  {
    "text": "doesn't look like GIF JavaScript or anything else looks like an API calls so I'm not sure what to do with those so",
    "start": "1356200",
    "end": "1362520"
  },
  {
    "text": "I'm caching everything else GIF CSS and JavaScript but remember that's one the",
    "start": "1362520",
    "end": "1368240"
  },
  {
    "text": "first thing I've started this conversation with is anything that the state any content that the state doesn't",
    "start": "1368240",
    "end": "1375159"
  },
  {
    "text": "change for a given period of time it's static it's reusable able with that",
    "start": "1375159",
    "end": "1380279"
  },
  {
    "text": "definition I want to get into uh so with that definition that opens me up to a lot of different",
    "start": "1380279",
    "end": "1386559"
  },
  {
    "text": "choices I can I can cash anything at this point it doesn't have to be gift G JavaScript or css it can be anything it",
    "start": "1386559",
    "end": "1393360"
  },
  {
    "text": "can be API calls it can be almost any content type and cloudfront can do that for you",
    "start": "1393360",
    "end": "1400200"
  },
  {
    "text": "cloudfront can cash for days for hours for minutes and seconds doesn't matter",
    "start": "1400200",
    "end": "1405919"
  },
  {
    "text": "you just put a cash control head on top of it for a second or two seconds and I talk about why even a second P second",
    "start": "1405919",
    "end": "1412760"
  },
  {
    "text": "TTL is important to you guys I'll talk about that later but how about this content let's look at it it it looks",
    "start": "1412760",
    "end": "1418480"
  },
  {
    "text": "strange right I mean it's Factor create image it will create an image called name book one and a size time 10 by1",
    "start": "1418480",
    "end": "1426559"
  },
  {
    "text": "some uh I don't know if you guys know this but cloudfront can cach this content it's getting hit 110 times why",
    "start": "1426559",
    "end": "1432960"
  },
  {
    "text": "not cash it cloudfront can cash anything with cury string if it has a cury string it can be cach don't be afraid of",
    "start": "1432960",
    "end": "1439400"
  },
  {
    "text": "caching stuff that has Cy string in it the only difference is that if the Cy string changes for example the book One",
    "start": "1439400",
    "end": "1444919"
  },
  {
    "text": "becomes book two or the size changes it creates a new object in Cache but you can cach that don't be afraid of caching",
    "start": "1444919",
    "end": "1451200"
  },
  {
    "text": "anything with Cory string how about this content I mean it has an API in it I mean a lot of people would be scared of",
    "start": "1451200",
    "end": "1457240"
  },
  {
    "text": "caching this content because it's an API call but there's a concept of read heavy and write heavy apis if you have a read",
    "start": "1457240",
    "end": "1463679"
  },
  {
    "text": "heavy API and the API is getting head multiple times don't be afraid of cashing it this this API call is getting",
    "start": "1463679",
    "end": "1470080"
  },
  {
    "text": "get hit 100 times I can cat this for five minutes for two seconds for an hour",
    "start": "1470080",
    "end": "1475279"
  },
  {
    "text": "uh you guys decide how long you want to cash it but it can be cached same thing here U I'm getting and",
    "start": "1475279",
    "end": "1481760"
  },
  {
    "text": "this would be maybe a different API call a different API call and gives me the top 10 popular books that I've been",
    "start": "1481760",
    "end": "1488000"
  },
  {
    "text": "selling and this could be that's that can't change every second this can't change every minute uh but again doesn't",
    "start": "1488000",
    "end": "1494559"
  },
  {
    "text": "matter what it is as long as the state of the object doesn't change you can't cash that",
    "start": "1494559",
    "end": "1500200"
  },
  {
    "text": "content so this is my favorite topic I don't know if you guys think it's cashing for a second helps like I talk",
    "start": "1500200",
    "end": "1506440"
  },
  {
    "text": "to a lot of customers and they don't think and it just doesn't come to their mind that you can cash content for even",
    "start": "1506440",
    "end": "1512000"
  },
  {
    "text": "a second so if you have something that's getting hit thousands of requests per second uh that's thousand requests per",
    "start": "1512000",
    "end": "1518600"
  },
  {
    "text": "second but what if you can't cash it even for a second what happens is that all the users that will get to this to",
    "start": "1518600",
    "end": "1524480"
  },
  {
    "text": "that content first will wait for the first uh user to to respond back and they will share the same object what if",
    "start": "1524480",
    "end": "1530880"
  },
  {
    "text": "you increase that to 2 second that's thousands requests per two seconds that would be 500 requests per second back to",
    "start": "1530880",
    "end": "1537399"
  },
  {
    "text": "your infrastructure continue doing that thousands thousand requests per second cash that for three seconds that would",
    "start": "1537399",
    "end": "1544039"
  },
  {
    "text": "be 300 requests per second on your infrastructure on backend infrastructure you continue doing that and you're getting to a a very interesting design",
    "start": "1544039",
    "end": "1551039"
  },
  {
    "text": "pattern where if you have a hard hit API you don't have to send that directly to elb cash that on on on on cloudfront for",
    "start": "1551039",
    "end": "1558000"
  },
  {
    "text": "even second or two seconds and I don't know how many you guys you've done elb pre-warming it's maybe not a fun thing",
    "start": "1558000",
    "end": "1563559"
  },
  {
    "text": "to do but if if you have a Content that you going to hit elb too often just put it in front of cloudfront and you don't",
    "start": "1563559",
    "end": "1570600"
  },
  {
    "text": "have to go through the elb pre-warming anymore and the last piece that we",
    "start": "1570600",
    "end": "1577240"
  },
  {
    "text": "talked about index JSP this is the first thing that comes the first HTML page or JSP page that comes it's a dynamic",
    "start": "1577240",
    "end": "1584320"
  },
  {
    "text": "content it's not cachable what do we do with that so we talked about all the caching stuff now let's get into",
    "start": "1584320",
    "end": "1589440"
  },
  {
    "text": "optimizing Dynamic contents so and again we we gone through",
    "start": "1589440",
    "end": "1596120"
  },
  {
    "text": "this images CSS anything preceding the first bar we already optimized now we have index JSP what can we do with that",
    "start": "1596120",
    "end": "1604240"
  },
  {
    "text": "content well as prad mentioned Dynamic contents are not cashable they're so unique that even if you cach it for a",
    "start": "1604240",
    "end": "1609679"
  },
  {
    "text": "second or two second the next second content changes and because of that cloud front or any other CDN has to",
    "start": "1609679",
    "end": "1616279"
  },
  {
    "text": "proxy that back to your infrastructure and and proxy the content back to the end user so you know arguably it's",
    "start": "1616279",
    "end": "1623720"
  },
  {
    "text": "uh so arguably I'm not sure if that adds an latency because you're now putting a CDN or or proxy in between and you have",
    "start": "1623720",
    "end": "1630480"
  },
  {
    "text": "to go back and forth does that add latency and this is how it's going to look like the first user goes to Edge",
    "start": "1630480",
    "end": "1636320"
  },
  {
    "text": "location Edge location obviously doesn't have the content it's it's it's a dynamic uh content goes back to origin",
    "start": "1636320",
    "end": "1642720"
  },
  {
    "text": "gets the content back gives it to the end user now the next user comes well",
    "start": "1642720",
    "end": "1648960"
  },
  {
    "text": "it's it's not cached has to go back to the origin come back get back to the end",
    "start": "1648960",
    "end": "1655320"
  },
  {
    "text": "user and again does that add latency I'm I'm sure I mean it's it's not complicated it does add latency if you",
    "start": "1655320",
    "end": "1661760"
  },
  {
    "text": "don't add optimization on top of it it has to go back and for to origin multiple times you're incurred",
    "start": "1661760",
    "end": "1667679"
  },
  {
    "text": "latency so how do we how do we improve that now we're proing that back and forth so we we see some latency if we",
    "start": "1667679",
    "end": "1673799"
  },
  {
    "text": "don't do anything with it so let's let me actually go back to the waterfall graph if this is the water graph and",
    "start": "1673799",
    "end": "1678960"
  },
  {
    "text": "this is if this is index JSP the they're and it composes of multiple components right DNS lookup time how long it takes",
    "start": "1678960",
    "end": "1685640"
  },
  {
    "text": "to do a DNS lookup time to get to to your infrastructure or resolve to to an IP how long it takes to do a TCP",
    "start": "1685640",
    "end": "1691919"
  },
  {
    "text": "connection to your web server the first bite uh time to first bite and also content download time so arguably if I",
    "start": "1691919",
    "end": "1699600"
  },
  {
    "text": "want to increase or or get a better response time for my Dynamic content I have to do either of these things either",
    "start": "1699600",
    "end": "1706720"
  },
  {
    "text": "reduce my DNS time and or reduce my connection time and or",
    "start": "1706720",
    "end": "1712799"
  },
  {
    "text": "reduce first bite time and or reduce content download time I have to either",
    "start": "1712799",
    "end": "1718039"
  },
  {
    "text": "do one multiple ones and all of them if I can do all of them perfect if I can't I have to do at least one or two of",
    "start": "1718039",
    "end": "1723919"
  },
  {
    "text": "these components so how do I do that reduce reducing DNS time super easy you",
    "start": "1723919",
    "end": "1729480"
  },
  {
    "text": "can do it with Amazon ra3 and we'll talk about it reduce connection time this is",
    "start": "1729480",
    "end": "1734760"
  },
  {
    "text": "the handshake that has to happen how do you reduce that you can do that with uh",
    "start": "1734760",
    "end": "1740440"
  },
  {
    "text": "Cloud front keep Life Connections and SSL termination if you have SSL content uh reduce first bite time how do",
    "start": "1740440",
    "end": "1748080"
  },
  {
    "text": "you do that with cloudfront keep Life Connections again and we'll get into the details of that and reduce content",
    "start": "1748080",
    "end": "1754720"
  },
  {
    "text": "download time you can do that with TCP IP optimizations that cloudfront provides and also rout 53 and we'll get",
    "start": "1754720",
    "end": "1761600"
  },
  {
    "text": "into it so just a reminder I'm 770 milliseconds U my goal is half a",
    "start": "1761600",
    "end": "1770200"
  },
  {
    "text": "second so DNS improving DNS time this is the easiest thing you can do and and it's only a couple of slides I'll get go",
    "start": "1770200",
    "end": "1776600"
  },
  {
    "text": "through this you can do this with Amazon rap 53 Amazon rft 53 is a managed DNS",
    "start": "1776600",
    "end": "1782440"
  },
  {
    "text": "offering it was designed to be fast super fast and uh low latency DNS",
    "start": "1782440",
    "end": "1787840"
  },
  {
    "text": "resolution and has a Global Network of DNS servers around the world and the way it's fast and it's quick is because you",
    "start": "1787840",
    "end": "1794440"
  },
  {
    "text": "get routed to the nearest and and the closest DNS server",
    "start": "1794440",
    "end": "1799960"
  },
  {
    "text": "to give you an illustration of this if this is what you're doing today you may be do using a DNS provider that has a",
    "start": "1799960",
    "end": "1805360"
  },
  {
    "text": "limited DNS locations and what your end users have to go is they have to Traverse all the way to to that DNS",
    "start": "1805360",
    "end": "1812159"
  },
  {
    "text": "server uh now so if you have international locations or users further away from DNS their DNS resolution will",
    "start": "1812159",
    "end": "1818480"
  },
  {
    "text": "take a bit of a time as compared if you point your uh your uh your host name or",
    "start": "1818480",
    "end": "1824000"
  },
  {
    "text": "your uh your origin host name to uh Cloud to ra three we have multiple",
    "start": "1824000",
    "end": "1829120"
  },
  {
    "text": "locations and you get arounded to the closest location so your DNS resolution time will definitely reduce so that was",
    "start": "1829120",
    "end": "1835799"
  },
  {
    "text": "it for R 53 simple just point your host name or domain to Amazon R 53 and that's",
    "start": "1835799",
    "end": "1841519"
  },
  {
    "text": "it we do every every magic behind the scene so how do we improve TCP",
    "start": "1841519",
    "end": "1849000"
  },
  {
    "text": "connections and a first bite download time we can do that with Cloud fronts",
    "start": "1849000",
    "end": "1854240"
  },
  {
    "text": "keep alive connections so let me let me give you a little bit of overview of of tcpip",
    "start": "1854240",
    "end": "1860240"
  },
  {
    "text": "handshakes and all that and that makes it a little bit clear as to what are the drawbacks are what are the penalties",
    "start": "1860240",
    "end": "1865960"
  },
  {
    "text": "that you incur where running on tcpip how to how how to improve that every tcpip connection that has to happen has",
    "start": "1865960",
    "end": "1873039"
  },
  {
    "text": "to go through the first handshake which would be sin syac and act back and then",
    "start": "1873039",
    "end": "1880039"
  },
  {
    "text": "uh the request can go through now so that has to happen on every connection and uh this TCP IP handshake",
    "start": "1880039",
    "end": "1887519"
  },
  {
    "text": "uh process can penalize Dynamic contents and this Dynamic contents are small so",
    "start": "1887519",
    "end": "1892960"
  },
  {
    "text": "if you have to make a connection multiple times this handshake is just a waste of time to give you illustration of that uh",
    "start": "1892960",
    "end": "1901639"
  },
  {
    "text": "if the user wants to connect to your infrastructure the user sends a send send act back sends another act and user",
    "start": "1901639",
    "end": "1909960"
  },
  {
    "text": "sends another act now at that point only at that point you can send get index jsv",
    "start": "1909960",
    "end": "1916639"
  },
  {
    "text": "back to your infrastructure remember you've done four round trips and only on the fourth one you can say hey give me",
    "start": "1916639",
    "end": "1921679"
  },
  {
    "text": "get index jsb and you still haven't got the content you you're just making the",
    "start": "1921679",
    "end": "1926919"
  },
  {
    "text": "request so if the if the latency between in user and your infrastructure is 90 millisecond let's just take that take",
    "start": "1926919",
    "end": "1932440"
  },
  {
    "text": "that as an example that's 360 milliseconds that user has to wait before it can even send a request back",
    "start": "1932440",
    "end": "1938039"
  },
  {
    "text": "to your web server now the second user comes send same thing s act act back get",
    "start": "1938039",
    "end": "1947679"
  },
  {
    "text": "in index JSP another 360 milliseconds and the more users you have",
    "start": "1947679",
    "end": "1953880"
  },
  {
    "text": "every one of them have to go through this so again every new user is a new connection and every new connection has",
    "start": "1953880",
    "end": "1960320"
  },
  {
    "text": "to go through this and you have to do this all day with every end user and what happens with that is that",
    "start": "1960320",
    "end": "1967799"
  },
  {
    "text": "if you have ton of users and hopefully you do you put too much load on your",
    "start": "1967799",
    "end": "1973480"
  },
  {
    "text": "infrastructure memory CP utilization all that will go up",
    "start": "1973480",
    "end": "1979399"
  },
  {
    "text": "and put again puts a load load on your web server and what happens is that when you put a load on your web server the",
    "start": "1979399",
    "end": "1984799"
  },
  {
    "text": "first time time to First Bite increases and remember I I talked talked about this being a really interesting metric",
    "start": "1984799",
    "end": "1991039"
  },
  {
    "text": "which tells you how busy your server is this is server getting the request going to do some sort of lookup to get the",
    "start": "1991039",
    "end": "1997320"
  },
  {
    "text": "index JSP back and the first bite that comes and it gives you indication how busy your server is so the the the more",
    "start": "1997320",
    "end": "2004720"
  },
  {
    "text": "load you put on your infrastructure more TCP IP connection you have to handle this",
    "start": "2004720",
    "end": "2011240"
  },
  {
    "text": "increases now keep alive connections can help us a lot and the concept of keep Life Connections are really simple uh if",
    "start": "2011919",
    "end": "2018480"
  },
  {
    "text": "I'm making the first connection tcpip connection I'll keep that tcpip connection open I will never close it",
    "start": "2018480",
    "end": "2023960"
  },
  {
    "text": "again maybe after some timeout after 10 minutes five minutes you guys can configure that in your web server but",
    "start": "2023960",
    "end": "2029159"
  },
  {
    "text": "once I keep that connection open I will use that for every other subsequent request give you an",
    "start": "2029159",
    "end": "2035320"
  },
  {
    "text": "example same thing send senak act data",
    "start": "2035320",
    "end": "2041000"
  },
  {
    "text": "flows now if the second user comes I don't have to go through this handshake again because my connection is already",
    "start": "2041000",
    "end": "2047600"
  },
  {
    "text": "TCP IP connection IP connection is already open I haven't closed that so I'll send the request true and I don't",
    "start": "2047600",
    "end": "2054599"
  },
  {
    "text": "have to go through the syak act all that kind of stuff again so that's the keep Al Life Connections how do this how does",
    "start": "2054599",
    "end": "2060240"
  },
  {
    "text": "that involve cloudfront so let's go through an example if the end user and again in",
    "start": "2060240",
    "end": "2065720"
  },
  {
    "text": "this example the end user is getting connected to the closest Cloud front location with 30 milliseconds and then",
    "start": "2065720",
    "end": "2071480"
  },
  {
    "text": "cloudfront has 60 milliseconds back to your infrastructure so again the aggregate is still 90 milliseconds we",
    "start": "2071480",
    "end": "2076919"
  },
  {
    "text": "haven't changed anything but the end user will get get connected to Cloud front at 30 millisecond he'll do sin syac act get",
    "start": "2076919",
    "end": "2086240"
  },
  {
    "text": "index JSP this is dynamic content it's not cach so cloudfront has to do the same thing sin syac act get index JSP",
    "start": "2086240",
    "end": "2095679"
  },
  {
    "text": "back to your infrastructure and data goes back to the user so our latency is still the same 360",
    "start": "2095679",
    "end": "2101240"
  },
  {
    "text": "milliseconds so that's four round trips times 30 1220 milliseconds and another four time four round trips of 60",
    "start": "2101240",
    "end": "2108440"
  },
  {
    "text": "milliseconds for each round trip 240 milliseconds that's about 360 milliseconds for the first",
    "start": "2108440",
    "end": "2114520"
  },
  {
    "text": "user now what happens when the second user comes sin syac",
    "start": "2114520",
    "end": "2120720"
  },
  {
    "text": "a get index JSP well guess what we already have a connection open from",
    "start": "2120720",
    "end": "2125920"
  },
  {
    "text": "cloudfront to your infrastructure so we don't have to do this tcpip handshake again we simply send get index JSP back",
    "start": "2125920",
    "end": "2133599"
  },
  {
    "text": "to your infrastructure the second user instead of having 360 millisecond experience will have 180 millisecond",
    "start": "2133599",
    "end": "2142400"
  },
  {
    "text": "that's simple simple idea but it works 180 milliseconds for your uh Dynamic",
    "start": "2142400",
    "end": "2147920"
  },
  {
    "text": "content when you make a request to",
    "start": "2147920",
    "end": "2151640"
  },
  {
    "text": "cloudfront so just to summarize more users and with with this pattern with this keep a life connection more users",
    "start": "2154720",
    "end": "2159960"
  },
  {
    "text": "doesn't mean more uh uh connections so two users will be two connections and",
    "start": "2159960",
    "end": "2165040"
  },
  {
    "text": "what cloud front uh again with Cloud front so without cloud front you will would be two connections with Cloud",
    "start": "2165040",
    "end": "2170520"
  },
  {
    "text": "front you will have one connection because that we keep the connection open and that off flows your infrastructure",
    "start": "2170520",
    "end": "2175760"
  },
  {
    "text": "and also improves the latency time so two users uh aggregated two users had 720 MC response time what cloudfront the",
    "start": "2175760",
    "end": "2184560"
  },
  {
    "text": "aggregate of of two users had 540 m so 360 milliseconds plus 180",
    "start": "2184560",
    "end": "2192160"
  },
  {
    "text": "milliseconds I've done a test so I'll go through this quickly because I'm short of time but I've done a test I've done a",
    "start": "2192160",
    "end": "2198040"
  },
  {
    "text": "test where they I've I've done a load test send thousands of requests HTTP requests to an instance uh sitting uh in",
    "start": "2198040",
    "end": "2205920"
  },
  {
    "text": "AWS without cloud funding between I send thousands of HTTP requests and also do a",
    "start": "2205920",
    "end": "2211160"
  },
  {
    "text": "second Tas with test with Cloud Fund in between the difference is huge with Cloud Fund in between uh without cloud",
    "start": "2211160",
    "end": "2217280"
  },
  {
    "text": "fund between my CP utilization on that instance is about 20% when I put cloud",
    "start": "2217280",
    "end": "2222599"
  },
  {
    "text": "Fund in between I get 6% CP utilization that's all because I don't have to handle thousands of connection with end",
    "start": "2222599",
    "end": "2229079"
  },
  {
    "text": "users I only have to handle the keep Life Connections for from cloudfront to my infastructure",
    "start": "2229079",
    "end": "2234839"
  },
  {
    "text": "all right what happens if you have SSL connections we everything we talked about was HTTP what if you have https",
    "start": "2234839",
    "end": "2241800"
  },
  {
    "text": "connections uh cloudfront can terminate your SSL connections at the edge and you can do that with cloudfront shirt",
    "start": "2241800",
    "end": "2248440"
  },
  {
    "text": "certificates or you can bring your own certificates and upload that through I am to cloudfront Identity access",
    "start": "2248440",
    "end": "2254560"
  },
  {
    "text": "management to cloudfront and the benefit of that is that SSL traffic gets terminated at cloudfront not only gives",
    "start": "2254560",
    "end": "2261440"
  },
  {
    "text": "you better performance but also gives you an offload that you have you need from your infrastructure very very",
    "start": "2261440",
    "end": "2267200"
  },
  {
    "text": "similar to concept of elb SSL termination so if you're using for if you're using elb for SSL termination",
    "start": "2267200",
    "end": "2272319"
  },
  {
    "text": "this is the similar concept and again the benefits huge",
    "start": "2272319",
    "end": "2277920"
  },
  {
    "text": "benefit of having SSL termination on cloudfront is again going back to the keep alive connections not only SSL has",
    "start": "2277920",
    "end": "2284040"
  },
  {
    "text": "to do the same tcpip uh IP handshakes it has to do even more because of the certification exchange that has to",
    "start": "2284040",
    "end": "2290280"
  },
  {
    "text": "happen between those two between uh uh between uh the end user and your infrastructure so to eliminate that you",
    "start": "2290280",
    "end": "2297200"
  },
  {
    "text": "can have keep Life Connections stay open so you don't have to exchange certificates anymore and send the request back to your uh back through",
    "start": "2297200",
    "end": "2304119"
  },
  {
    "text": "cloudfront to your infrastructure there are two patterns here you can leverage halfbridge SSL termination and",
    "start": "2304119",
    "end": "2311400"
  },
  {
    "text": "full Bridge SSL termination halfbridge SSL termination as end users connect to cloudfront with",
    "start": "2311400",
    "end": "2317560"
  },
  {
    "text": "SSL cloudfront will downgrade to http and connects to your infrastructure over",
    "start": "2317560",
    "end": "2322680"
  },
  {
    "text": "HTTP uh so it's obviously not a full endtoend encryption it's really useful for cases where you have websites that",
    "start": "2322680",
    "end": "2329560"
  },
  {
    "text": "are uh the base page index JSP the card the whatever the page you have is on SSL",
    "start": "2329560",
    "end": "2335599"
  },
  {
    "text": "and the embedded content like let's just say images has to be on SSL tooo because if you don't the browser gives you a",
    "start": "2335599",
    "end": "2340680"
  },
  {
    "text": "warning message that says hey the embedded contants are not in SSL so to get around that I mean images are not",
    "start": "2340680",
    "end": "2347400"
  },
  {
    "text": "doesn't have to be secure so to get around that you can use this pattern just put everything on SSL in your page",
    "start": "2347400",
    "end": "2354040"
  },
  {
    "text": "have cloudfront terminate the SSL but then when we go back to your infrastructure we go over HTTP and the",
    "start": "2354040",
    "end": "2359920"
  },
  {
    "text": "big benefit of that is performance if you do a performance test on this it's it's great it gives you great",
    "start": "2359920",
    "end": "2365280"
  },
  {
    "text": "performance because we're downgrading to http it's just not a big magic you know instead of going over HTP as we go over",
    "start": "2365280",
    "end": "2370960"
  },
  {
    "text": "HTTP that gives you a better performance but the next pattern would be complete full Bridge SSL termination",
    "start": "2370960",
    "end": "2377560"
  },
  {
    "text": "and we we can we can definitely do that you connect to cloudfront through https we'll send the request back over HTTP",
    "start": "2377560",
    "end": "2383720"
  },
  {
    "text": "htps back to your infrastructure how do we improve content download time we talked about DNS DNS",
    "start": "2383720",
    "end": "2390800"
  },
  {
    "text": "resolution TCP connection how do we do and also first bite time uh and but how do we do content download time how do we",
    "start": "2390800",
    "end": "2397119"
  },
  {
    "text": "improve prove that time for you all right so this is uh we we do",
    "start": "2397119",
    "end": "2402599"
  },
  {
    "text": "that with with with slow start optimization and and again this is going to be a complicated topic I've I've",
    "start": "2402599",
    "end": "2408480"
  },
  {
    "text": "simplified a little bit uh but uh so let's go through that uh slow start what",
    "start": "2408480",
    "end": "2413960"
  },
  {
    "text": "is slow start slow start is a tcpip optimization where it limits what two",
    "start": "2413960",
    "end": "2419920"
  },
  {
    "text": "users can do at a given time so for example if everyone in this room wants to talk all at the same time it it' be a",
    "start": "2419920",
    "end": "2426720"
  },
  {
    "text": "Mayhem no one can understand each other same thing goes over the internet if all the hosts on the internet wants to talk",
    "start": "2426720",
    "end": "2432319"
  },
  {
    "text": "to each other if they all talk at the same time at full force that full bandwidth they have the internet will go",
    "start": "2432319",
    "end": "2438200"
  },
  {
    "text": "down it will be a complete meltdown to avoid that there was a they put in TCP",
    "start": "2438200",
    "end": "2443960"
  },
  {
    "text": "uh slow start optimization TCP slow start optimization is a way for Two Hosts to talk to each other at the",
    "start": "2443960",
    "end": "2450440"
  },
  {
    "text": "slower Pace they start slow and then they go much faster so this is how it works if your infrastructure if your web",
    "start": "2450440",
    "end": "2457839"
  },
  {
    "text": "tier wants to send something to cloudfront so index JSP give me index JSP you want to send bytes or or",
    "start": "2457839",
    "end": "2463160"
  },
  {
    "text": "requests back every all the data back to cloudfront so cloudfront can send it back to end user what your uh web server",
    "start": "2463160",
    "end": "2470040"
  },
  {
    "text": "will do is we'll send the first packet to cloudfront and waits for an act to come back if it doesn't come back on an act",
    "start": "2470040",
    "end": "2476839"
  },
  {
    "text": "it will never send the next packet but soon as it gets the first act for the",
    "start": "2476839",
    "end": "2482079"
  },
  {
    "text": "first packet it will send two packets now it we'll wait for an act from",
    "start": "2482079",
    "end": "2487440"
  },
  {
    "text": "cloudfront means that cloudfront is day I've received I've received the the packet now I'm ready to get more now",
    "start": "2487440",
    "end": "2494119"
  },
  {
    "text": "Cloud now your infrastructure sends four packets at the same time notice that it doesn't start with four it starts with",
    "start": "2494119",
    "end": "2499400"
  },
  {
    "text": "one goes to two and then goes to four so there's a gradual warmup to this to this",
    "start": "2499400",
    "end": "2505599"
  },
  {
    "text": "pattern that you send one two and four and you keep going and if you get a packet loss or you get anything else now",
    "start": "2505599",
    "end": "2511560"
  },
  {
    "text": "you start again from beginning but the point is that you never start with sending full packets you send limited",
    "start": "2511560",
    "end": "2516640"
  },
  {
    "text": "packets and then you increase the number of packets that you send",
    "start": "2516640",
    "end": "2521400"
  },
  {
    "text": "back well as you as you guys saw it's a gradual optimization it doesn't start with full force and it's a waste of time",
    "start": "2523200",
    "end": "2529800"
  },
  {
    "text": "especially if you have enough bandwidth between you and cloudfront and you do you get connected to the closest",
    "start": "2529800",
    "end": "2535240"
  },
  {
    "text": "cloudfront location so your bfit is great but what do you have to do to slow start optimization all the time so the",
    "start": "2535240",
    "end": "2541720"
  },
  {
    "text": "good thing is cloudfront can optimize that for you again as as you guys noticed we do have keep life connection",
    "start": "2541720",
    "end": "2547559"
  },
  {
    "text": "and one trick with TCP uh slow start is that TCP slow start only gets applied to",
    "start": "2547559",
    "end": "2554400"
  },
  {
    "text": "uh to new connections not the existing connections so by having keep alive connections back to your infrastructure",
    "start": "2554400",
    "end": "2560280"
  },
  {
    "text": "cloudfront can now even skip tcpip uh TCP uh slow start optimization can skip",
    "start": "2560280",
    "end": "2567599"
  },
  {
    "text": "slow start process by having the keep Life Connections already open let me give you an example your user gets",
    "start": "2567599",
    "end": "2574559"
  },
  {
    "text": "connected to cloudfront cloudfront goes to cloudfront goes back to your infrastructure infrastructure have to",
    "start": "2574559",
    "end": "2580800"
  },
  {
    "text": "send back data to to cloudfront First packet Act of that",
    "start": "2580800",
    "end": "2586280"
  },
  {
    "text": "packet two packets gets back to Cloud front another act for the last two",
    "start": "2586280",
    "end": "2591599"
  },
  {
    "text": "packets and now you send four packets this is the first user now we have a",
    "start": "2591599",
    "end": "2597000"
  },
  {
    "text": "keep life connection back open to your infrastructure now when the second user comes and needs a request for makes a",
    "start": "2597000",
    "end": "2603800"
  },
  {
    "text": "request for dynamic content right way we can send four packets and act and again we can go to",
    "start": "2603800",
    "end": "2611400"
  },
  {
    "text": "eight packets so as you noticed our first user has to go through the uh slow start uh process but a second user can",
    "start": "2611400",
    "end": "2619400"
  },
  {
    "text": "be much more optimized it doesn't have to go through all the slow start op slow start",
    "start": "2619400",
    "end": "2625640"
  },
  {
    "text": "process I've done a test Virginia to Oregon location making a request just",
    "start": "2625640",
    "end": "2631400"
  },
  {
    "text": "directly second request going through cloudfront uh and compare the results",
    "start": "2631400",
    "end": "2637319"
  },
  {
    "text": "and let it speak for itself without cloud funing between the number of packets I'm saying is much higher each",
    "start": "2637319",
    "end": "2643640"
  },
  {
    "text": "request is about 170 milliseconds the aggregate of all requests putting it sequentially is about 33 milliseconds",
    "start": "2643640",
    "end": "2650640"
  },
  {
    "text": "same thing if if I do that with do it with cloudfront I'm only send sending 896 packets each request is about 96",
    "start": "2650640",
    "end": "2658800"
  },
  {
    "text": "milliseconds and this uh the aggregate of all requests sequentially the time it takes to do all the requests about 90 19",
    "start": "2658800",
    "end": "2666040"
  },
  {
    "text": "milliseconds 19 seconds and 24 millisecond to speak for",
    "start": "2666040",
    "end": "2672200"
  },
  {
    "text": "itself everything we talked about apply to get uh to get requests but what about",
    "start": "2672280",
    "end": "2677599"
  },
  {
    "text": "your put and post requests what can we do about that what if you want to upload something what if you have form post",
    "start": "2677599",
    "end": "2683480"
  },
  {
    "text": "Cloud fund can optimize that cloud fund supports put post delete option patch we",
    "start": "2683480",
    "end": "2690119"
  },
  {
    "text": "have all that we just announced it about a month ago I believe the uh the trick with this is",
    "start": "2690119",
    "end": "2695599"
  },
  {
    "text": "that we don't cash the data so you know makes sense it's a form post for everyone's unique against it's Dynamic",
    "start": "2695599",
    "end": "2701119"
  },
  {
    "text": "request uh so we don't cach the content cloudform proxies the data back to your",
    "start": "2701119",
    "end": "2706880"
  },
  {
    "text": "infrastructure and we take advantage of everything else that we talked about today keep alive connections TCP slow",
    "start": "2706880",
    "end": "2712440"
  },
  {
    "text": "start optimizations for for put and post and also the fact that you're uploading to the closest cloudfront location that",
    "start": "2712440",
    "end": "2718680"
  },
  {
    "text": "gives you the huge benefit for upload uploading large content and again the the biggest kicker here is tcpu slow",
    "start": "2718680",
    "end": "2724680"
  },
  {
    "text": "start optimization because we don't have to do this window sizing and and and you know doing the gradual up warmup of the",
    "start": "2724680",
    "end": "2731760"
  },
  {
    "text": "connection uploads can be can happen much faster use cases for this would be form",
    "start": "2731760",
    "end": "2738680"
  },
  {
    "text": "post if you have any form post if if you're doing any post through your through forms Ajax post requests can",
    "start": "2738680",
    "end": "2744839"
  },
  {
    "text": "benefit a lot from this and also you can upload to S3 through cloudfront",
    "start": "2744839",
    "end": "2750960"
  },
  {
    "text": "now again I'm going to let the performance test speaked for itself I've done two tests upload directly from an",
    "start": "2750960",
    "end": "2757480"
  },
  {
    "text": "instance sitting in Virginia to an instance sitting in Oregon directly without going through cloudfront and",
    "start": "2757480",
    "end": "2763359"
  },
  {
    "text": "another test a same test with same FAL size going through cloudfront uploading 10 megabytes of",
    "start": "2763359",
    "end": "2770839"
  },
  {
    "text": "data average results for going directly is about 5 seconds so each each upload",
    "start": "2770839",
    "end": "2776160"
  },
  {
    "text": "of 10 megabyte data TS takes about 5 seconds it's about three and a half",
    "start": "2776160",
    "end": "2781720"
  },
  {
    "text": "seconds if if I'm going through Cloud front it's a huge difference",
    "start": "2781720",
    "end": "2787800"
  },
  {
    "text": "how do I even uh reduce the download uh content time even further how do I even",
    "start": "2789359",
    "end": "2794640"
  },
  {
    "text": "optimize us even further we can do that with rout 53 and P talked about latency base routing let me give you a quick",
    "start": "2794640",
    "end": "2800880"
  },
  {
    "text": "overview of latency base routing uh you deploy your infrastructure in two different locations you tag it with",
    "start": "2800880",
    "end": "2806079"
  },
  {
    "text": "geographical location East and West and what we do is we measure the latency between the DNS resolver of your users",
    "start": "2806079",
    "end": "2813800"
  },
  {
    "text": "to those two locations so the closest location will always win so when we do a DNS resolution we send an IP back to",
    "start": "2813800",
    "end": "2820280"
  },
  {
    "text": "your end users that is closest to the infrastructure it gives you better",
    "start": "2820280",
    "end": "2826480"
  },
  {
    "text": "performance because now your end users are getting uh connected to the closest location and also gives you better",
    "start": "2826480",
    "end": "2832359"
  },
  {
    "text": "reliability and it's really easy to implement and cost much lower than any other DNS",
    "start": "2832359",
    "end": "2838359"
  },
  {
    "text": "provider this would be an end user perspective and I'm going to marry that with with cloudfront so this is end user",
    "start": "2838359",
    "end": "2843520"
  },
  {
    "text": "will go to cloudfront you have two AWS regions uh ask for DNS resolution resolve me to",
    "start": "2843520",
    "end": "2850640"
  },
  {
    "text": "the closest region Ralph 53 has done the the test between those two regions and",
    "start": "2850640",
    "end": "2855720"
  },
  {
    "text": "know which and knows which one is closest will resolve to the closest AWS",
    "start": "2855720",
    "end": "2862079"
  },
  {
    "text": "region how does that R how does that impact cloudfront now what you can do is",
    "start": "2862079",
    "end": "2867160"
  },
  {
    "text": "you can use cloudfront to get connected to the closest location but there is the origin host name that you use for or for",
    "start": "2867160",
    "end": "2874280"
  },
  {
    "text": "cloudfront go to go back to your infrastructure so now what you can do is you can use that origin host name and",
    "start": "2874280",
    "end": "2879960"
  },
  {
    "text": "point that to uh Amazon rap 53 and if you have two infrastructures in two different locations the origin hosting",
    "start": "2879960",
    "end": "2886880"
  },
  {
    "text": "will resol resolve to the closest uh infrastructure let me give you an",
    "start": "2886880",
    "end": "2892960"
  },
  {
    "text": "example so any user will get connected to cloudfront so cloudfront location cloudfront says hey I need to go back to",
    "start": "2893319",
    "end": "2899440"
  },
  {
    "text": "infrastructure I need to go back to your origin to get the content which infrastructure is the best to go to now",
    "start": "2899440",
    "end": "2905640"
  },
  {
    "text": "rout 53 will resolve you to the closest infrastructure so instead of going all",
    "start": "2905640",
    "end": "2910960"
  },
  {
    "text": "the way back to the to the to the further one we'll go to the closest one to give you another example is just a",
    "start": "2910960",
    "end": "2916640"
  },
  {
    "text": "better illustration of that if you have a your region is going to be Virginia if you're deployed in Virginia a user comes",
    "start": "2916640",
    "end": "2924280"
  },
  {
    "text": "and it's us user in us gets uh goes to cloudfront cloudfront wants to go back",
    "start": "2924280",
    "end": "2929559"
  },
  {
    "text": "to the infrastructure uh goes to Virginia so gets the content from Virginia and responds back to the end",
    "start": "2929559",
    "end": "2935839"
  },
  {
    "text": "user now if you have a user in Europe user in Europe gets uh connected to cloudfront cloudfront goes to Virginia",
    "start": "2935839",
    "end": "2942599"
  },
  {
    "text": "again so it's a long haul that has to go and and an encouraged latency to improve that what you could do is you can have",
    "start": "2942599",
    "end": "2949240"
  },
  {
    "text": "two AWS regions one in Virginia and one in Dublin same pattern again end user in",
    "start": "2949240",
    "end": "2954960"
  },
  {
    "text": "US goes to uh yeah the guy jumps up a little bit but yeah it goes to cloudfront cloudfront goes to R 53 and",
    "start": "2954960",
    "end": "2962400"
  },
  {
    "text": "then instead of and and then R 53 says yeah the closest location to you is us so you would connect it to Virginia in",
    "start": "2962400",
    "end": "2969040"
  },
  {
    "text": "this case so this is optimized what what happens to this guy this guy goes to",
    "start": "2969040",
    "end": "2974200"
  },
  {
    "text": "cloudfront cloudfront goes to Ralph 53 and says give me the closest location now instead of going all the way all the",
    "start": "2974200",
    "end": "2980440"
  },
  {
    "text": "way back to Virginia the user gets connected or cloudfront will get connected to AWS region in Dublin now",
    "start": "2980440",
    "end": "2987119"
  },
  {
    "text": "you have much lower latency between you with cloudfront and your",
    "start": "2987119",
    "end": "2992480"
  },
  {
    "text": "infrastructure all right so I think we're almost at the end what cloudfront Dynamic content optimization I've done",
    "start": "2993200",
    "end": "2998720"
  },
  {
    "text": "everything that we talk about today I'm at 555 milliseconds almost not a half a",
    "start": "2998720",
    "end": "3004040"
  },
  {
    "text": "second but let's shave that off and say half a second now so we're there we've",
    "start": "3004040",
    "end": "3009280"
  },
  {
    "text": "done it we're at half a second hopefully I get a raise two and a half million dollar in sales",
    "start": "3009280",
    "end": "3016640"
  },
  {
    "text": "ask thank you uh couple of things to talk about design for failures we talk",
    "start": "3021599",
    "end": "3026960"
  },
  {
    "text": "about this a lot uh so make sure you design for failure uh one thing you can do is you can design you can have ra F 3",
    "start": "3026960",
    "end": "3034880"
  },
  {
    "text": "uh do a health check to your infrastructure so if you have an infrastructure built uh you can have cloudfront to do R to do health check",
    "start": "3034880",
    "end": "3042240"
  },
  {
    "text": "between multiple components of your infrastructure if that infrastructure fails for example if let's just say elb",
    "start": "3042240",
    "end": "3047640"
  },
  {
    "text": "fails what CL what ra3 can do is can shift the traffic to to the healthy elb",
    "start": "3047640",
    "end": "3053040"
  },
  {
    "text": "instance and you can marry that with latency",
    "start": "3053040",
    "end": "3058359"
  },
  {
    "text": "based routing you don't have to pick and choose you can have latency based routing send you to the closest AWS region and if that region or elb or",
    "start": "3058359",
    "end": "3065760"
  },
  {
    "text": "anything fails traffic can shift to the healthy",
    "start": "3065760",
    "end": "3072319"
  },
  {
    "text": "region and this this may not be uh apparent to you guys but uh caching can",
    "start": "3072319",
    "end": "3077920"
  },
  {
    "text": "be a way for highly available sites you can cash as much as you can and what happens is that if there's a failure",
    "start": "3077920",
    "end": "3083200"
  },
  {
    "text": "that happens I'm going to skip through sorry I'm running out of time uh but but if there's a failure happens let's just",
    "start": "3083200",
    "end": "3088559"
  },
  {
    "text": "say uh the user asks for an image image gets served gets cached all that is reputable now the second user comes the",
    "start": "3088559",
    "end": "3095920"
  },
  {
    "text": "content is still we have to go back to infrastructure and get it the content is not the origin is not available we can't",
    "start": "3095920",
    "end": "3102359"
  },
  {
    "text": "respond back we have the object in Cache it's still but it's something in the cach we'll respond back with the stale",
    "start": "3102359",
    "end": "3108160"
  },
  {
    "text": "content so instead of getting error message you get a stale content which is not that bad this is the summary I'm",
    "start": "3108160",
    "end": "3114280"
  },
  {
    "text": "going to skip through the summary but again uh thanks everyone for being here thanks for staying all the way to the end want to let P talk about use cases",
    "start": "3114280",
    "end": "3121200"
  },
  {
    "text": "but thanks",
    "start": "3121200",
    "end": "3124359"
  }
]