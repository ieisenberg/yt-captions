[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "in this video you'll see how to",
    "start": "440",
    "end": "1839"
  },
  {
    "text": "configure attribute-based access control",
    "start": "1839",
    "end": "4040"
  },
  {
    "text": "or ABAC permissions to Federate users",
    "start": "4040",
    "end": "6359"
  },
  {
    "text": "into AWS systems manager session manager",
    "start": "6359",
    "end": "9800"
  },
  {
    "text": "with this solution you can use",
    "start": "9800",
    "end": "11120"
  },
  {
    "text": "attributes defined in external identity",
    "start": "11120",
    "end": "13080"
  },
  {
    "text": "systems and Sample session tags to Grant",
    "start": "13080",
    "end": "15320"
  },
  {
    "text": "users access to session manager over",
    "start": "15320",
    "end": "17320"
  },
  {
    "text": "specific managed",
    "start": "17320",
    "end": "18800"
  },
  {
    "text": "instances an alternative to role-based",
    "start": "18800",
    "end": "21039"
  },
  {
    "text": "access control ABAC lets you grant",
    "start": "21039",
    "end": "23560"
  },
  {
    "text": "access permissions dynamically based on",
    "start": "23560",
    "end": "25599"
  },
  {
    "text": "individual user resource and environment",
    "start": "25599",
    "end": "28160"
  },
  {
    "text": "attributes this provides you with more",
    "start": "28160",
    "end": "30119"
  },
  {
    "text": "granular control over what users can do",
    "start": "30119",
    "end": "32279"
  },
  {
    "text": "while simplifying permissions management",
    "start": "32279",
    "end": "35000"
  },
  {
    "start": "35000",
    "end": "98000"
  },
  {
    "text": "to implement ABAC you must create a",
    "start": "35000",
    "end": "36840"
  },
  {
    "text": "policy for it in identity and access",
    "start": "36840",
    "end": "38640"
  },
  {
    "text": "management or",
    "start": "38640",
    "end": "41718"
  },
  {
    "text": "am for this example we'll look at an",
    "start": "43000",
    "end": "45440"
  },
  {
    "text": "existing aback policy that was created",
    "start": "45440",
    "end": "47199"
  },
  {
    "text": "for session",
    "start": "47199",
    "end": "49680"
  },
  {
    "text": "manager let's open the policy's Json",
    "start": "50160",
    "end": "52640"
  },
  {
    "text": "code and review",
    "start": "52640",
    "end": "55359"
  },
  {
    "text": "it this policy allows Federated user",
    "start": "55440",
    "end": "58320"
  },
  {
    "text": "access to specific ec2 instances using",
    "start": "58320",
    "end": "60800"
  },
  {
    "text": "session manager based on the user's",
    "start": "60800",
    "end": "62519"
  },
  {
    "text": "Department membership the first",
    "start": "62519",
    "end": "64680"
  },
  {
    "text": "statement block allows Federated users",
    "start": "64680",
    "end": "66360"
  },
  {
    "text": "to navigate into the AWS session manager",
    "start": "66360",
    "end": "68600"
  },
  {
    "text": "console to specific ec2 and hybrid",
    "start": "68600",
    "end": "70960"
  },
  {
    "text": "managed instances that are available to",
    "start": "70960",
    "end": "74680"
  },
  {
    "text": "connect the second statement makes the",
    "start": "75600",
    "end": "77799"
  },
  {
    "text": "session manager start session available",
    "start": "77799",
    "end": "79560"
  },
  {
    "text": "to all resources only when the value of",
    "start": "79560",
    "end": "81799"
  },
  {
    "text": "the resources department tag matches the",
    "start": "81799",
    "end": "83720"
  },
  {
    "text": "value of the principal Department",
    "start": "83720",
    "end": "87159"
  },
  {
    "text": "tag the Third statement restricts",
    "start": "88520",
    "end": "90880"
  },
  {
    "text": "session manager terminate session to",
    "start": "90880",
    "end": "92600"
  },
  {
    "text": "session resources created by the same",
    "start": "92600",
    "end": "94360"
  },
  {
    "text": "Federated",
    "start": "94360",
    "end": "96920"
  },
  {
    "text": "user next let's navigate to our IAM role",
    "start": "97680",
    "end": "100680"
  },
  {
    "start": "98000",
    "end": "141000"
  },
  {
    "text": "for session",
    "start": "100680",
    "end": "102040"
  },
  {
    "text": "manager this role uses security",
    "start": "102040",
    "end": "104280"
  },
  {
    "text": "assertion markup language or SLE based",
    "start": "104280",
    "end": "106560"
  },
  {
    "text": "Federation with OCTA an external",
    "start": "106560",
    "end": "108719"
  },
  {
    "text": "identity provider before we attach our",
    "start": "108719",
    "end": "111439"
  },
  {
    "text": "ABAC policy to this role we'll need to",
    "start": "111439",
    "end": "113479"
  },
  {
    "text": "modify the trust policy generated by",
    "start": "113479",
    "end": "117200"
  },
  {
    "text": "OCTA we'll edit the trust relationship",
    "start": "117200",
    "end": "119560"
  },
  {
    "text": "to the AWS secure token service or STS",
    "start": "119560",
    "end": "122759"
  },
  {
    "text": "tag session action which allows us to",
    "start": "122759",
    "end": "124880"
  },
  {
    "text": "pass session",
    "start": "124880",
    "end": "126039"
  },
  {
    "text": "tags we want our Federated users to",
    "start": "126039",
    "end": "128479"
  },
  {
    "text": "connect as specific local operating",
    "start": "128479",
    "end": "130319"
  },
  {
    "text": "system or Os accounts when establishing",
    "start": "130319",
    "end": "132560"
  },
  {
    "text": "sessions in session manager so let's add",
    "start": "132560",
    "end": "134879"
  },
  {
    "text": "the SSM session run as string-like",
    "start": "134879",
    "end": "137680"
  },
  {
    "text": "condition update the trust",
    "start": "137680",
    "end": "141519"
  },
  {
    "text": "policy now let's attach our ABAC policy",
    "start": "141640",
    "end": "146959"
  },
  {
    "text": "with our I am rooll properly configured",
    "start": "153720",
    "end": "155959"
  },
  {
    "text": "let's open a new tab and sign in the",
    "start": "155959",
    "end": "157680"
  },
  {
    "text": "OCTA",
    "start": "157680",
    "end": "160079"
  },
  {
    "text": "console let's navigate to our AWS",
    "start": "162400",
    "end": "165120"
  },
  {
    "text": "account Federation",
    "start": "165120",
    "end": "168080"
  },
  {
    "text": "dashboard we already have two Federated",
    "start": "168840",
    "end": "171239"
  },
  {
    "start": "169000",
    "end": "216000"
  },
  {
    "text": "users who can access session manager",
    "start": "171239",
    "end": "173519"
  },
  {
    "text": "let's go to the sign on Tab to configure",
    "start": "173519",
    "end": "175640"
  },
  {
    "text": "user attributes in saml",
    "start": "175640",
    "end": "179599"
  },
  {
    "text": "we already have two attributes",
    "start": "181800",
    "end": "183159"
  },
  {
    "text": "configured login and Department let's",
    "start": "183159",
    "end": "185640"
  },
  {
    "text": "add a third attribute for our policy's",
    "start": "185640",
    "end": "187480"
  },
  {
    "text": "SSM session run as",
    "start": "187480",
    "end": "191040"
  },
  {
    "text": "condition we'll enter the attributes",
    "start": "191159",
    "end": "193360"
  },
  {
    "text": "name format and",
    "start": "193360",
    "end": "196400"
  },
  {
    "text": "value let's save our",
    "start": "202480",
    "end": "206080"
  },
  {
    "text": "changes next let's modify our OCTA user",
    "start": "208400",
    "end": "211439"
  },
  {
    "text": "profile template attributes to do that",
    "start": "211439",
    "end": "213720"
  },
  {
    "text": "we'll use the profile",
    "start": "213720",
    "end": "216080"
  },
  {
    "start": "216000",
    "end": "252000"
  },
  {
    "text": "editor select the OCTA user edit profile",
    "start": "216080",
    "end": "221159"
  },
  {
    "text": "action the login and Department",
    "start": "221400",
    "end": "223480"
  },
  {
    "text": "attributes are already configured so we",
    "start": "223480",
    "end": "225480"
  },
  {
    "text": "just need to add an SSM session run as",
    "start": "225480",
    "end": "229840"
  },
  {
    "text": "attribute we'll save this attribute and",
    "start": "234000",
    "end": "236200"
  },
  {
    "text": "then check to see that it's been added",
    "start": "236200",
    "end": "237560"
  },
  {
    "text": "to the OCTA user profile template",
    "start": "237560",
    "end": "241720"
  },
  {
    "text": "next let's navigate to the people",
    "start": "245159",
    "end": "246760"
  },
  {
    "text": "directory to look at a user",
    "start": "246760",
    "end": "250079"
  },
  {
    "start": "252000",
    "end": "272000"
  },
  {
    "text": "profile by default the username or login",
    "start": "252120",
    "end": "255120"
  },
  {
    "text": "attribute is set to the user's email",
    "start": "255120",
    "end": "258958"
  },
  {
    "text": "address for this user the department",
    "start": "261360",
    "end": "263840"
  },
  {
    "text": "attribute is set to Amber and the SSM",
    "start": "263840",
    "end": "266360"
  },
  {
    "text": "session run as attribute is set to Alice",
    "start": "266360",
    "end": "268960"
  },
  {
    "text": "which is the user operating system",
    "start": "268960",
    "end": "270720"
  },
  {
    "text": "account",
    "start": "270720",
    "end": "271759"
  },
  {
    "text": "name now that our OCTA users are",
    "start": "271759",
    "end": "273960"
  },
  {
    "start": "272000",
    "end": "301000"
  },
  {
    "text": "configured let's return to the I am",
    "start": "273960",
    "end": "277880"
  },
  {
    "text": "console next we'll navigate to ec2 and",
    "start": "278320",
    "end": "281160"
  },
  {
    "text": "make sure our ec2 instances are properly",
    "start": "281160",
    "end": "285400"
  },
  {
    "text": "tagged let's check the tags on our Amber",
    "start": "286759",
    "end": "291199"
  },
  {
    "text": "instance the instance name and",
    "start": "291199",
    "end": "293039"
  },
  {
    "text": "Department key are tagged correctly",
    "start": "293039",
    "end": "295400"
  },
  {
    "text": "let's navigate to AWS systems manager",
    "start": "295400",
    "end": "297600"
  },
  {
    "text": "for the final step in the configuration",
    "start": "297600",
    "end": "299360"
  },
  {
    "text": "process",
    "start": "299360",
    "end": "301638"
  },
  {
    "start": "301000",
    "end": "346000"
  },
  {
    "text": "in the navigation pane select session",
    "start": "302400",
    "end": "306160"
  },
  {
    "text": "manager here we'll edit our general",
    "start": "306160",
    "end": "308360"
  },
  {
    "text": "preferences to specify the operating",
    "start": "308360",
    "end": "310199"
  },
  {
    "text": "system username to start sessions with",
    "start": "310199",
    "end": "313400"
  },
  {
    "text": "select the checkbox to enable run as",
    "start": "313400",
    "end": "315400"
  },
  {
    "text": "support for Linux",
    "start": "315400",
    "end": "318440"
  },
  {
    "text": "instances defining an operating system",
    "start": "318880",
    "end": "321360"
  },
  {
    "text": "username is optional for our purposes",
    "start": "321360",
    "end": "323759"
  },
  {
    "text": "let's leave it blank and save the",
    "start": "323759",
    "end": "325039"
  },
  {
    "text": "changes",
    "start": "325039",
    "end": "328039"
  },
  {
    "text": "now to test our configuration let's log",
    "start": "333639",
    "end": "335800"
  },
  {
    "text": "into OCTA as Federated user",
    "start": "335800",
    "end": "339120"
  },
  {
    "text": "Allis select AWS account Federation to",
    "start": "339120",
    "end": "342280"
  },
  {
    "text": "sign into the AWS Management",
    "start": "342280",
    "end": "346039"
  },
  {
    "start": "346000",
    "end": "433000"
  },
  {
    "text": "console navigate to AWS systems manager",
    "start": "346400",
    "end": "349479"
  },
  {
    "text": "session",
    "start": "349479",
    "end": "351840"
  },
  {
    "text": "manager let's start a session",
    "start": "355600",
    "end": "360240"
  },
  {
    "text": "Alice is assigned to the Amber",
    "start": "360440",
    "end": "361880"
  },
  {
    "text": "department so we'll select the Amber",
    "start": "361880",
    "end": "363919"
  },
  {
    "text": "instance and start the",
    "start": "363919",
    "end": "366960"
  },
  {
    "text": "session let's verify that we're logged",
    "start": "367680",
    "end": "369919"
  },
  {
    "text": "in as",
    "start": "369919",
    "end": "371000"
  },
  {
    "text": "Alice let's also test a few",
    "start": "371000",
    "end": "375000"
  },
  {
    "text": "commands now let's terminate the",
    "start": "376360",
    "end": "380439"
  },
  {
    "text": "session our session terminated",
    "start": "380759",
    "end": "383000"
  },
  {
    "text": "successfully now let's see what happens",
    "start": "383000",
    "end": "385000"
  },
  {
    "text": "if Alice tries to start a blue instance",
    "start": "385000",
    "end": "387000"
  },
  {
    "text": "session",
    "start": "387000",
    "end": "389919"
  },
  {
    "text": "as expected we get a message saying the",
    "start": "389919",
    "end": "391880"
  },
  {
    "text": "user Alice is not authorized this holds",
    "start": "391880",
    "end": "394560"
  },
  {
    "text": "true for terminating sessions as well",
    "start": "394560",
    "end": "396800"
  },
  {
    "text": "Federated users can only terminate",
    "start": "396800",
    "end": "398720"
  },
  {
    "text": "sessions that they have",
    "start": "398720",
    "end": "401520"
  },
  {
    "text": "started let's try to terminate Bob's",
    "start": "401919",
    "end": "406199"
  },
  {
    "text": "session as expected we received a",
    "start": "408280",
    "end": "410840"
  },
  {
    "text": "message saying we're not authorized",
    "start": "410840",
    "end": "412440"
  },
  {
    "text": "because the session ID contains Bob's",
    "start": "412440",
    "end": "414360"
  },
  {
    "text": "principal tag login value and doesn't",
    "start": "414360",
    "end": "416560"
  },
  {
    "text": "match the ABAC policy resource to allow",
    "start": "416560",
    "end": "418680"
  },
  {
    "text": "this action",
    "start": "418680",
    "end": "420759"
  },
  {
    "text": "you've just seen how to configure",
    "start": "420759",
    "end": "422120"
  },
  {
    "text": "attribute-based Access Control",
    "start": "422120",
    "end": "423680"
  },
  {
    "text": "permissions to Grant Federated user",
    "start": "423680",
    "end": "425479"
  },
  {
    "text": "access to AWS systems manager session",
    "start": "425479",
    "end": "428599"
  },
  {
    "text": "manager thanks for watching now it's",
    "start": "428599",
    "end": "430879"
  },
  {
    "text": "your turn to try",
    "start": "430879",
    "end": "434400"
  }
]