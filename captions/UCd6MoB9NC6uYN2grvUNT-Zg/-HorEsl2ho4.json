[
  {
    "text": "greetings my name is Ryan Niche I am a",
    "start": "659",
    "end": "3480"
  },
  {
    "text": "principal Solutions architect with",
    "start": "3480",
    "end": "5339"
  },
  {
    "text": "Amazon web services joining me here",
    "start": "5339",
    "end": "8340"
  },
  {
    "text": "today is Paul who is from Red Hat and he",
    "start": "8340",
    "end": "11880"
  },
  {
    "text": "is a managed openshift black belt",
    "start": "11880",
    "end": "14280"
  },
  {
    "text": "service member Paul say hi and give us a",
    "start": "14280",
    "end": "17520"
  },
  {
    "text": "very brief description of your role at",
    "start": "17520",
    "end": "19619"
  },
  {
    "text": "Red Hat hi yeah my name is Paul",
    "start": "19619",
    "end": "21720"
  },
  {
    "text": "Tchaikovsky I focus on helping our",
    "start": "21720",
    "end": "24600"
  },
  {
    "text": "customers with cloud services",
    "start": "24600",
    "end": "26660"
  },
  {
    "text": "specifically in this case Red Hat",
    "start": "26660",
    "end": "29400"
  },
  {
    "text": "openshift service on AWS or Rosa now",
    "start": "29400",
    "end": "33260"
  },
  {
    "text": "Rosa is managed openshift so it's it's",
    "start": "33260",
    "end": "36780"
  },
  {
    "text": "everyday normal open shift but there is",
    "start": "36780",
    "end": "39360"
  },
  {
    "text": "a sret managing it for the customer",
    "start": "39360",
    "end": "41960"
  },
  {
    "text": "typically when we deploy Rosa it caters",
    "start": "41960",
    "end": "45420"
  },
  {
    "text": "for Ingress from a customer perspective",
    "start": "45420",
    "end": "49079"
  },
  {
    "text": "to the API the control plane your",
    "start": "49079",
    "end": "52020"
  },
  {
    "text": "application workloads what if I had a",
    "start": "52020",
    "end": "55559"
  },
  {
    "text": "customer who wanted to use something",
    "start": "55559",
    "end": "57780"
  },
  {
    "text": "like a customer domain name or wanted to",
    "start": "57780",
    "end": "60000"
  },
  {
    "text": "facilitate something like a a security",
    "start": "60000",
    "end": "63660"
  },
  {
    "text": "or a caching layer in front of that how",
    "start": "63660",
    "end": "66900"
  },
  {
    "text": "would they go about facilitating the",
    "start": "66900",
    "end": "69479"
  },
  {
    "text": "integration with other AWS Services got",
    "start": "69479",
    "end": "72000"
  },
  {
    "text": "it so let's draw up a couple of AWS",
    "start": "72000",
    "end": "74280"
  },
  {
    "text": "services so we will do uh we'll do AWS",
    "start": "74280",
    "end": "80060"
  },
  {
    "text": "cloudfront and",
    "start": "80060",
    "end": "83700"
  },
  {
    "text": "AWS Waf okay so cloudfront being our CDN",
    "start": "83700",
    "end": "88860"
  },
  {
    "text": "sort of caching surface anything that's",
    "start": "88860",
    "end": "91520"
  },
  {
    "text": "uh hidden from the cloudfront gets",
    "start": "91520",
    "end": "93900"
  },
  {
    "text": "cached there so customers get a",
    "start": "93900",
    "end": "95400"
  },
  {
    "text": "performance benefit except for those",
    "start": "95400",
    "end": "97560"
  },
  {
    "text": "objects that can be cached weft being a",
    "start": "97560",
    "end": "101100"
  },
  {
    "text": "you know a typical web application",
    "start": "101100",
    "end": "103079"
  },
  {
    "text": "firewall so really just adding an",
    "start": "103079",
    "end": "104759"
  },
  {
    "text": "additional layer of security that's",
    "start": "104759",
    "end": "106320"
  },
  {
    "text": "right over and above what they're",
    "start": "106320",
    "end": "107579"
  },
  {
    "text": "getting from openshift in itself exactly",
    "start": "107579",
    "end": "109500"
  },
  {
    "text": "all right",
    "start": "109500",
    "end": "111720"
  },
  {
    "text": "um these Services you deploy them into",
    "start": "111720",
    "end": "114000"
  },
  {
    "text": "AWS but they're going to require a",
    "start": "114000",
    "end": "117479"
  },
  {
    "text": "different set of load balances and a",
    "start": "117479",
    "end": "120840"
  },
  {
    "text": "different set of naming conventions how",
    "start": "120840",
    "end": "122579"
  },
  {
    "text": "do you create a custom domain is there",
    "start": "122579",
    "end": "124200"
  },
  {
    "text": "anything we need to add to the openshift",
    "start": "124200",
    "end": "125700"
  },
  {
    "text": "cluster to facilitate that yeah that's",
    "start": "125700",
    "end": "127979"
  },
  {
    "text": "that's a great question so we have a uh",
    "start": "127979",
    "end": "130500"
  },
  {
    "text": "aptly name",
    "start": "130500",
    "end": "132300"
  },
  {
    "text": "custom domain operator",
    "start": "132300",
    "end": "134940"
  },
  {
    "text": "right here and so you've beat it a few",
    "start": "134940",
    "end": "137459"
  },
  {
    "text": "things that's an add-on into open ships",
    "start": "137459",
    "end": "140160"
  },
  {
    "text": "that's assuming from within openshift it",
    "start": "140160",
    "end": "141959"
  },
  {
    "text": "was going into add-ons select operator",
    "start": "141959",
    "end": "144000"
  },
  {
    "text": "so it's actually part of uh Roser itself",
    "start": "144000",
    "end": "147000"
  },
  {
    "text": "so you don't have to add this in it's in",
    "start": "147000",
    "end": "148920"
  },
  {
    "text": "there by default oh okay great great and",
    "start": "148920",
    "end": "151440"
  },
  {
    "text": "what do we need to pass that I'm",
    "start": "151440",
    "end": "153060"
  },
  {
    "text": "assuming at the very least some",
    "start": "153060",
    "end": "154680"
  },
  {
    "text": "certificates and a scope of sorts yeah",
    "start": "154680",
    "end": "157980"
  },
  {
    "text": "exactly there's three things you have a",
    "start": "157980",
    "end": "160620"
  },
  {
    "text": "a wild card DNS",
    "start": "160620",
    "end": "163200"
  },
  {
    "text": "so we'll just",
    "start": "163200",
    "end": "164700"
  },
  {
    "text": "show that and you usually configure that",
    "start": "164700",
    "end": "167280"
  },
  {
    "text": "in you know Route 53 you have a",
    "start": "167280",
    "end": "171720"
  },
  {
    "text": "TLS certificate that",
    "start": "171720",
    "end": "173819"
  },
  {
    "text": "secures that wildcard DNS and then you",
    "start": "173819",
    "end": "177480"
  },
  {
    "text": "do have a scope so you have a scope",
    "start": "177480",
    "end": "180060"
  },
  {
    "text": "which can either be internal or external",
    "start": "180060",
    "end": "182400"
  },
  {
    "text": "because we're exposing this to the",
    "start": "182400",
    "end": "184739"
  },
  {
    "text": "internet you would do external and that",
    "start": "184739",
    "end": "187680"
  },
  {
    "text": "assuming that's going to generate",
    "start": "187680",
    "end": "188940"
  },
  {
    "text": "another load balance exactly right so",
    "start": "188940",
    "end": "191340"
  },
  {
    "text": "this is part of openshifts integration",
    "start": "191340",
    "end": "193260"
  },
  {
    "text": "with AWS you don't have to manually",
    "start": "193260",
    "end": "195780"
  },
  {
    "text": "create the load balances the openshift",
    "start": "195780",
    "end": "198120"
  },
  {
    "text": "API machine sets installers in the",
    "start": "198120",
    "end": "200519"
  },
  {
    "text": "background they'll create those objects",
    "start": "200519",
    "end": "202080"
  },
  {
    "text": "for you yeah and and then these",
    "start": "202080",
    "end": "204480"
  },
  {
    "text": "certificates and things are already",
    "start": "204480",
    "end": "206900"
  },
  {
    "text": "added to that AWS elastic load balance",
    "start": "206900",
    "end": "210420"
  },
  {
    "text": "so you don't have to manually import",
    "start": "210420",
    "end": "211620"
  },
  {
    "text": "exactly okay right so now what we need",
    "start": "211620",
    "end": "214379"
  },
  {
    "text": "to do is we need to wire everything",
    "start": "214379",
    "end": "215940"
  },
  {
    "text": "together so this here will have a",
    "start": "215940",
    "end": "217680"
  },
  {
    "text": "hostname right and so in",
    "start": "217680",
    "end": "220680"
  },
  {
    "text": "cloudfront here you use that hostname as",
    "start": "220680",
    "end": "223799"
  },
  {
    "text": "the destination endpoint that's right",
    "start": "223799",
    "end": "225659"
  },
  {
    "text": "Cloud front origin over here and you",
    "start": "225659",
    "end": "227760"
  },
  {
    "text": "have to fill in all of those elements",
    "start": "227760",
    "end": "229379"
  },
  {
    "text": "exactly there's a few things you have to",
    "start": "229379",
    "end": "231180"
  },
  {
    "text": "make sure you pass host headers through",
    "start": "231180",
    "end": "232799"
  },
  {
    "text": "a few other things to make sure that",
    "start": "232799",
    "end": "234420"
  },
  {
    "text": "that the DNS name that you're going to",
    "start": "234420",
    "end": "235980"
  },
  {
    "text": "use to access your apps is sort of",
    "start": "235980",
    "end": "237360"
  },
  {
    "text": "preserved the whole way through",
    "start": "237360",
    "end": "238980"
  },
  {
    "text": "and then you also tell cloudfront that",
    "start": "238980",
    "end": "241680"
  },
  {
    "text": "it wants to use the AWS Waf so this is",
    "start": "241680",
    "end": "244260"
  },
  {
    "text": "interesting because there's multiple",
    "start": "244260",
    "end": "245940"
  },
  {
    "text": "layers of security here I'm assuming",
    "start": "245940",
    "end": "248159"
  },
  {
    "text": "here that the end connections or",
    "start": "248159",
    "end": "249780"
  },
  {
    "text": "customers are not going to go directly",
    "start": "249780",
    "end": "251280"
  },
  {
    "text": "to the load balancer they're going to be",
    "start": "251280",
    "end": "252659"
  },
  {
    "text": "forced to go through these different",
    "start": "252659",
    "end": "254580"
  },
  {
    "text": "layers they'll only be able to talk to",
    "start": "254580",
    "end": "256560"
  },
  {
    "text": "where where will only be able to hit",
    "start": "256560",
    "end": "258120"
  },
  {
    "text": "cloudfront and only cloudfront will be",
    "start": "258120",
    "end": "260160"
  },
  {
    "text": "able to interact with that load balancer",
    "start": "260160",
    "end": "261720"
  },
  {
    "text": "as as Degrees of Separation that's right",
    "start": "261720",
    "end": "263759"
  },
  {
    "text": "that's right so you take the TLs",
    "start": "263759",
    "end": "265860"
  },
  {
    "text": "certificate you provided here and you",
    "start": "265860",
    "end": "267660"
  },
  {
    "text": "also provide it to uh cloudfront and you",
    "start": "267660",
    "end": "270360"
  },
  {
    "text": "use the Amazon",
    "start": "270360",
    "end": "272220"
  },
  {
    "text": "certificate manager to do that okay so",
    "start": "272220",
    "end": "274620"
  },
  {
    "text": "we've got we've got Amazon certificate",
    "start": "274620",
    "end": "276300"
  },
  {
    "text": "manager or ACM here not to be confused",
    "start": "276300",
    "end": "278639"
  },
  {
    "text": "with red Hat's Advanced cluster manager",
    "start": "278639",
    "end": "281479"
  },
  {
    "text": "and we are adding that as a TLS endpoint",
    "start": "281479",
    "end": "286020"
  },
  {
    "text": "so now that that has that we can start",
    "start": "286020",
    "end": "288060"
  },
  {
    "text": "actually wiring things together and so",
    "start": "288060",
    "end": "290220"
  },
  {
    "text": "we have in you did mention Route 53 as",
    "start": "290220",
    "end": "293940"
  },
  {
    "text": "well for the DNS records so I think it",
    "start": "293940",
    "end": "297000"
  },
  {
    "text": "makes sense to add in so we added the",
    "start": "297000",
    "end": "299220"
  },
  {
    "text": "Route 53 hosted Zone",
    "start": "299220",
    "end": "302100"
  },
  {
    "text": "there's technically two hosted zones",
    "start": "302100",
    "end": "304320"
  },
  {
    "text": "here there's the hosted Zone that Rosa",
    "start": "304320",
    "end": "306780"
  },
  {
    "text": "creates itself when you provision row",
    "start": "306780",
    "end": "309000"
  },
  {
    "text": "settings this is the customer's own",
    "start": "309000",
    "end": "311580"
  },
  {
    "text": "company domain correct we're talking",
    "start": "311580",
    "end": "313560"
  },
  {
    "text": "about a custom domain here right and",
    "start": "313560",
    "end": "316440"
  },
  {
    "text": "um we've got the AWS uh certificate",
    "start": "316440",
    "end": "321060"
  },
  {
    "text": "manager potentially coming into the",
    "start": "321060",
    "end": "322620"
  },
  {
    "text": "picture but I don't think customers are",
    "start": "322620",
    "end": "324060"
  },
  {
    "text": "strictly needing to use AWS as",
    "start": "324060",
    "end": "327180"
  },
  {
    "text": "certificate manager they're good options",
    "start": "327180",
    "end": "328440"
  },
  {
    "text": "that's right they can create",
    "start": "328440",
    "end": "329520"
  },
  {
    "text": "certificates using whatever certificate",
    "start": "329520",
    "end": "332160"
  },
  {
    "text": "system they like to use they just need",
    "start": "332160",
    "end": "334080"
  },
  {
    "text": "to make sure they put it in here and",
    "start": "334080",
    "end": "335940"
  },
  {
    "text": "then also here and you put it in here by",
    "start": "335940",
    "end": "337860"
  },
  {
    "text": "adding it to ACM okay so this could be",
    "start": "337860",
    "end": "341639"
  },
  {
    "text": "Amazon's certificate manager they could",
    "start": "341639",
    "end": "344699"
  },
  {
    "text": "use their own sort of public key",
    "start": "344699",
    "end": "347639"
  },
  {
    "text": "infrastructure if they've got something",
    "start": "347639",
    "end": "349139"
  },
  {
    "text": "like a Microsoft active directory right",
    "start": "349139",
    "end": "351419"
  },
  {
    "text": "exactly certificate driven platform",
    "start": "351419",
    "end": "354660"
  },
  {
    "text": "um third party let's encrypt is one I",
    "start": "354660",
    "end": "357240"
  },
  {
    "text": "use a lot just because it's really easy",
    "start": "357240",
    "end": "358560"
  },
  {
    "text": "to do and you still get the like Secure",
    "start": "358560",
    "end": "360960"
  },
  {
    "text": "Public",
    "start": "360960",
    "end": "361919"
  },
  {
    "text": "um certificates one thing with ACM to",
    "start": "361919",
    "end": "365039"
  },
  {
    "text": "note you are needing to export the",
    "start": "365039",
    "end": "367620"
  },
  {
    "text": "public and private certificate for",
    "start": "367620",
    "end": "370380"
  },
  {
    "text": "import to this operator so ACM tends to",
    "start": "370380",
    "end": "374880"
  },
  {
    "text": "work better for external or public",
    "start": "374880",
    "end": "377880"
  },
  {
    "text": "facing implementations exact private",
    "start": "377880",
    "end": "381120"
  },
  {
    "text": "environments you're more likely going to",
    "start": "381120",
    "end": "383400"
  },
  {
    "text": "see a election crypto or pki that's",
    "start": "383400",
    "end": "385860"
  },
  {
    "text": "right",
    "start": "385860",
    "end": "386520"
  },
  {
    "text": "um what is the flow for a end user going",
    "start": "386520",
    "end": "390000"
  },
  {
    "text": "through all of this to get into their",
    "start": "390000",
    "end": "392940"
  },
  {
    "text": "application workload inside openshift",
    "start": "392940",
    "end": "395220"
  },
  {
    "text": "right so let's let's just kind of show",
    "start": "395220",
    "end": "396960"
  },
  {
    "text": "that so you have your end user here who",
    "start": "396960",
    "end": "399600"
  },
  {
    "text": "is the splitting splitting image of you",
    "start": "399600",
    "end": "402020"
  },
  {
    "text": "and they'll try to access something via",
    "start": "402020",
    "end": "405300"
  },
  {
    "text": "their web browser so it'll make a a",
    "start": "405300",
    "end": "407460"
  },
  {
    "text": "request to DNS and that DNS has a cname",
    "start": "407460",
    "end": "411780"
  },
  {
    "text": "pointing to the cloud front so they'll",
    "start": "411780",
    "end": "414840"
  },
  {
    "text": "then send their traffic over to",
    "start": "414840",
    "end": "416220"
  },
  {
    "text": "cloudfront cloudfront knows to send it",
    "start": "416220",
    "end": "419340"
  },
  {
    "text": "to Waf so it will send it to Waf the AWS",
    "start": "419340",
    "end": "422220"
  },
  {
    "text": "graph will inspect it and if everything",
    "start": "422220",
    "end": "424259"
  },
  {
    "text": "is okay it will then send it back and",
    "start": "424259",
    "end": "427560"
  },
  {
    "text": "then cloudfront will send it down to the",
    "start": "427560",
    "end": "430139"
  },
  {
    "text": "elf down here and this is now where it's",
    "start": "430139",
    "end": "432960"
  },
  {
    "text": "starting to hit your Rosa cluster itself",
    "start": "432960",
    "end": "435300"
  },
  {
    "text": "that's a whole new Ingress controller",
    "start": "435300",
    "end": "437340"
  },
  {
    "text": "inside openshift so that's right this",
    "start": "437340",
    "end": "439080"
  },
  {
    "text": "AWS load balance is forwarding to a",
    "start": "439080",
    "end": "441479"
  },
  {
    "text": "router layer inside openshift itself and",
    "start": "441479",
    "end": "444300"
  },
  {
    "text": "correct internal supporting to the",
    "start": "444300",
    "end": "445919"
  },
  {
    "text": "actual policies of the workload so in",
    "start": "445919",
    "end": "447840"
  },
  {
    "text": "the cluster you'll have a um like a",
    "start": "447840",
    "end": "450000"
  },
  {
    "text": "service",
    "start": "450000",
    "end": "451860"
  },
  {
    "text": "and that service will route for a set of",
    "start": "451860",
    "end": "454500"
  },
  {
    "text": "PODS that are set up for your",
    "start": "454500",
    "end": "455819"
  },
  {
    "text": "application essentially that's building",
    "start": "455819",
    "end": "457680"
  },
  {
    "text": "a bridge between the the networking",
    "start": "457680",
    "end": "460560"
  },
  {
    "text": "inside AWS the VPC itself and the sdn",
    "start": "460560",
    "end": "464699"
  },
  {
    "text": "the software defined Network internally",
    "start": "464699",
    "end": "466380"
  },
  {
    "text": "and openshot that's exactly right yes",
    "start": "466380",
    "end": "468180"
  },
  {
    "text": "okay",
    "start": "468180",
    "end": "470300"
  },
  {
    "text": "um do we need to facilitate any sort of",
    "start": "470340",
    "end": "472800"
  },
  {
    "text": "return here it's essentially the same",
    "start": "472800",
    "end": "475259"
  },
  {
    "text": "path anything that's actually there goes",
    "start": "475259",
    "end": "477419"
  },
  {
    "text": "here gets cached in Cloud front and then",
    "start": "477419",
    "end": "480800"
  },
  {
    "text": "if a customer had to request the same",
    "start": "480800",
    "end": "483599"
  },
  {
    "text": "information again they would just feed",
    "start": "483599",
    "end": "485400"
  },
  {
    "text": "from that cache exactly so the next",
    "start": "485400",
    "end": "488220"
  },
  {
    "text": "request if it's the same is just that",
    "start": "488220",
    "end": "490440"
  },
  {
    "text": "yeah so we get a performance break here",
    "start": "490440",
    "end": "492539"
  },
  {
    "text": "we get additional security and we are",
    "start": "492539",
    "end": "495419"
  },
  {
    "text": "stitching together a lot of the benefits",
    "start": "495419",
    "end": "497039"
  },
  {
    "text": "of AWS with uh openshift we're talking",
    "start": "497039",
    "end": "500460"
  },
  {
    "text": "about rows here so this is managed",
    "start": "500460",
    "end": "502319"
  },
  {
    "text": "openshift is this significantly",
    "start": "502319",
    "end": "504419"
  },
  {
    "text": "different from other openshift",
    "start": "504419",
    "end": "506699"
  },
  {
    "text": "implementations such as self-managed ocp",
    "start": "506699",
    "end": "509280"
  },
  {
    "text": "for argument's sake it's it's roughly",
    "start": "509280",
    "end": "512159"
  },
  {
    "text": "the same you don't get the custom domain",
    "start": "512159",
    "end": "514020"
  },
  {
    "text": "operator in a self-managed openshift so",
    "start": "514020",
    "end": "516539"
  },
  {
    "text": "you would create an Ingress controller",
    "start": "516539",
    "end": "519120"
  },
  {
    "text": "directly but because openshift wants",
    "start": "519120",
    "end": "522360"
  },
  {
    "text": "because Rosa wants to help you uh have a",
    "start": "522360",
    "end": "526080"
  },
  {
    "text": "have your uptime have your resilience",
    "start": "526080",
    "end": "528019"
  },
  {
    "text": "the uh the open shift the Rosa tooling",
    "start": "528019",
    "end": "531360"
  },
  {
    "text": "manages the Ingress via the custom",
    "start": "531360",
    "end": "534540"
  },
  {
    "text": "domain Operator just so that then the",
    "start": "534540",
    "end": "537000"
  },
  {
    "text": "SRE and the Automation Services can keep",
    "start": "537000",
    "end": "539459"
  },
  {
    "text": "that Ingress healthy okay so same",
    "start": "539459",
    "end": "542279"
  },
  {
    "text": "building blocks just a little bit more",
    "start": "542279",
    "end": "543959"
  },
  {
    "text": "of a manual process to get there right",
    "start": "543959",
    "end": "546240"
  },
  {
    "text": "it's not changing the requirements of",
    "start": "546240",
    "end": "549480"
  },
  {
    "text": "what needs to be that's right to it",
    "start": "549480",
    "end": "551339"
  },
  {
    "text": "that's right from an SRE perspective uh",
    "start": "551339",
    "end": "554459"
  },
  {
    "text": "none of this really touches the sres",
    "start": "554459",
    "end": "558360"
  },
  {
    "text": "managing it because they're not",
    "start": "558360",
    "end": "560040"
  },
  {
    "text": "accessing the applications they're",
    "start": "560040",
    "end": "562740"
  },
  {
    "text": "they're still coming in and hitting the",
    "start": "562740",
    "end": "566040"
  },
  {
    "text": "API endpoint of that cluster for their",
    "start": "566040",
    "end": "568320"
  },
  {
    "text": "day to operational aspects their",
    "start": "568320",
    "end": "570720"
  },
  {
    "text": "monitoring all of those brake fixed",
    "start": "570720",
    "end": "573300"
  },
  {
    "text": "elements exactly that's right",
    "start": "573300",
    "end": "574980"
  },
  {
    "text": "uh Paul thank you very much for this uh",
    "start": "574980",
    "end": "577860"
  },
  {
    "text": "as always it is great having you here",
    "start": "577860",
    "end": "580339"
  },
  {
    "text": "and thank you for joining us thanks a",
    "start": "580339",
    "end": "583500"
  },
  {
    "text": "lot",
    "start": "583500",
    "end": "585560"
  }
]