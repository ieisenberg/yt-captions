[
  {
    "text": "In this video, you’ll see how you can monitor \nWindows desktops on Amazon WorkSpaces",
    "start": "0",
    "end": "4254"
  },
  {
    "text": "using Amazon Managed Service for \nPrometheus and Amazon Managed Grafana.",
    "start": "4254",
    "end": "8109"
  },
  {
    "text": "With this solution, service desk teams \ncan quickly identify issues that need",
    "start": "8769",
    "end": "12472"
  },
  {
    "text": "investigation, obtain current and \nhistorical data without having to",
    "start": "12472",
    "end": "15768"
  },
  {
    "text": "contact business users, and \nsave troubleshooting time.",
    "start": "15768",
    "end": "18282"
  },
  {
    "text": "This solution deploys a Prometheus \nserver on an Amazon EC2 instance",
    "start": "19473",
    "end": "23295"
  },
  {
    "text": "which polls Prometheus agents on \nAmazon Workspaces Windows 10",
    "start": "23295",
    "end": "26808"
  },
  {
    "text": "instances periodically, and remote \nwrites metrics to Amazon Managed",
    "start": "26808",
    "end": "30591"
  },
  {
    "text": "Service for Prometheus.",
    "start": "30591",
    "end": "31888"
  },
  {
    "text": "We’ll be using Amazon Managed Grafana",
    "start": "32477",
    "end": "34371"
  },
  {
    "text": "to query and visualize metrics on the \nAmazon Workspaces infrastructure.",
    "start": "34371",
    "end": "38314"
  },
  {
    "text": "For the purposes of this example, we’ve \nalready taken care of some prerequisites.",
    "start": "40518",
    "end": "43945"
  },
  {
    "text": "For the Amazon CLI, we’ll \nbe using AWS CloudShell.",
    "start": "44700",
    "end": "48000"
  },
  {
    "text": "We also have an empty Amazon \nWorkSpaces environment,",
    "start": "49297",
    "end": "52313"
  },
  {
    "text": "and an AWS Directory Service for \nMicrosoft Active Directory account",
    "start": "52313",
    "end": "56159"
  },
  {
    "text": "with administrator permissions.",
    "start": "56159",
    "end": "57586"
  },
  {
    "text": "We’ll be creating a user in this \ndirectory for our first Workspace,",
    "start": "58729",
    "end": "61750"
  },
  {
    "text": "which we’ll create in a moment.",
    "start": "61750",
    "end": "63018"
  },
  {
    "text": "We also have a couple of \nvirtual private clouds (VPCs).",
    "start": "64810",
    "end": "68078"
  },
  {
    "text": "To get started, we’ll run a script to create the \nAWS resources needed for this demonstration.",
    "start": "69917",
    "end": "74353"
  },
  {
    "text": "All the scripts we’ll use are \navailable in the links for this video.",
    "start": "74978",
    "end": "77782"
  },
  {
    "text": "Now that the script is finished, \nlet’s see what was created.",
    "start": "78913",
    "end": "81475"
  },
  {
    "text": "We now have an Amazon Workspace \nrunning Windows 10, which is still “pending.”",
    "start": "83372",
    "end": "87368"
  },
  {
    "text": "Let’s look for the EC2 instance.",
    "start": "88429",
    "end": "90249"
  },
  {
    "text": "The Prometheus forwarder \nserver is up and running.",
    "start": "91345",
    "end": "93718"
  },
  {
    "text": "We also have a new IAM role that allows for \nremote write access to the Prometheus server.",
    "start": "96511",
    "end": "100829"
  },
  {
    "text": "There are also new security groups.",
    "start": "101960",
    "end": "103844"
  },
  {
    "text": "There’s a new VPC hosting \nthe Prometheus server.",
    "start": "106685",
    "end": "109152"
  },
  {
    "text": "Along with the VPC, a public subnet and \nroute table were built for sending the data",
    "start": "110802",
    "end": "114929"
  },
  {
    "text": "from the server to our Amazon Managed\n Service for Prometheus workspace.",
    "start": "114929",
    "end": "118555"
  },
  {
    "text": "Let’s take a quick look at \nthe route table configuration.",
    "start": "119715",
    "end": "122060"
  },
  {
    "text": "The script also created an Internet \nGateway and a peering connection",
    "start": "127811",
    "end": "130836"
  },
  {
    "text": "with the Workspaces VPC.",
    "start": "130836",
    "end": "132526"
  },
  {
    "text": "Let’s look at the WorkSpace again.",
    "start": "133552",
    "end": "135075"
  },
  {
    "text": "It’s reached an available \nstatus, so we can move on.",
    "start": "138269",
    "end": "140955"
  },
  {
    "text": "Next, we’ll return to AWS CloudShell \nto define the solution’s variables.",
    "start": "142133",
    "end": "146080"
  },
  {
    "text": "First we’ll obtain the WorkSpace ID.",
    "start": "146858",
    "end": "148941"
  },
  {
    "text": "Now we’ll supply the WorkSpace IP address.",
    "start": "151311",
    "end": "153578"
  },
  {
    "text": "Now we’ll change the format so it works \nwith the YAML file we’re going to configure",
    "start": "154638",
    "end": "158143"
  },
  {
    "text": "on the Prometheus forwarder server.",
    "start": "158143",
    "end": "160000"
  },
  {
    "text": "Let’s do the same for the WorkSpace ID.",
    "start": "161073",
    "end": "163000"
  },
  {
    "text": "Let’s move on to the server shell for our \nEC2 instance running the Prometheus server.",
    "start": "164085",
    "end": "168000"
  },
  {
    "text": "In our instance, we’ll first run \nthe sudo command to access",
    "start": "169084",
    "end": "171929"
  },
  {
    "text": "the required root privileges.",
    "start": "171929",
    "end": "173616"
  },
  {
    "text": "Now let’s check the directory.",
    "start": "174712",
    "end": "176084"
  },
  {
    "text": "It’s empty, so we’ll need to create a \nconfiguration file so it will write metrics",
    "start": "178276",
    "end": "181924"
  },
  {
    "text": "from the Windows 10 Workspace to the\nAmazon Managed Service for Prometheus.",
    "start": "181924",
    "end": "185620"
  },
  {
    "text": "Let’s define its variables.",
    "start": "186126",
    "end": "187529"
  },
  {
    "text": "We’ll supply the Region for the instance.",
    "start": "188614",
    "end": "190452"
  },
  {
    "text": "Let’s copy the WorkSpace ID \nfrom our other CloudShell session.",
    "start": "191513",
    "end": "194446"
  },
  {
    "text": "We’ll do the same for the WorkSpace IP address.",
    "start": "202220",
    "end": "204469"
  },
  {
    "text": "Now we can paste the script for the file.",
    "start": "212354",
    "end": "214266"
  },
  {
    "text": "We’ll check the library again to confirm.",
    "start": "216211",
    "end": "218148"
  },
  {
    "text": "Let’s review the file’s contents.",
    "start": "219303",
    "end": "220894"
  },
  {
    "text": "Now, we’ll enable Prometheus on the \nserver to start forwarding data automatically.",
    "start": "222000",
    "end": "225948"
  },
  {
    "text": "Let’s restart the instance.",
    "start": "227586",
    "end": "228934"
  },
  {
    "text": "We can check its status.",
    "start": "230526",
    "end": "231856"
  },
  {
    "text": "It’s actively running, so we can proceed\n with building the monitoring solution.",
    "start": "233353",
    "end": "236746"
  },
  {
    "text": "For the next steps, we’ll work \nin Windows Active Directory",
    "start": "239586",
    "end": "242347"
  },
  {
    "text": "to create a group policy object.",
    "start": "242348",
    "end": "244092"
  },
  {
    "text": "This GPO installs the Windows \nExporter software on every",
    "start": "244552",
    "end": "247590"
  },
  {
    "text": "Windows 10 WorkSpace in our OU.",
    "start": "247590",
    "end": "249523"
  },
  {
    "text": "From the CLI, let’s paste the code \nto download Windows Exporter.",
    "start": "250808",
    "end": "254188"
  },
  {
    "text": "Let’s switch to the Group \nPolicy Management Editor.",
    "start": "255296",
    "end": "257681"
  },
  {
    "text": "Here’s where we configured the \npolicy’s software installation.",
    "start": "259708",
    "end": "262381"
  },
  {
    "text": "Let’s review its Control Panel \nSettings to see the service we set up.",
    "start": "266129",
    "end": "269126"
  },
  {
    "text": "The policy includes a service to \nautomatically delay the start of the",
    "start": "271255",
    "end": "274206"
  },
  {
    "text": "data forwarding from the Windows 10 \nWorkSpaces to the Prometheus server.",
    "start": "274206",
    "end": "277684"
  },
  {
    "text": "The delay allows time for all the \nresources in the WorkSpaces to start up.",
    "start": "278802",
    "end": "282473"
  },
  {
    "text": "Finally, let’s see how our Active Directory is organized.",
    "start": "284335",
    "end": "287328"
  },
  {
    "text": "The Computers OU hosts the WorkSpaces \nthat were assigned by the script we ran,",
    "start": "288978",
    "end": "292865"
  },
  {
    "text": "and is where the group policy is assigned.",
    "start": "292865",
    "end": "294845"
  },
  {
    "text": "Back in the Group Policy Management \npage, we can see that the policy is",
    "start": "295988",
    "end": "299303"
  },
  {
    "text": "assigned to the Prometheus agent, \nwhich can be viewed in the domain.",
    "start": "299303",
    "end": "302333"
  },
  {
    "text": "Now, from one of the WorkSpace \ninstances, let’s confirm it has the",
    "start": "304584",
    "end": "307797"
  },
  {
    "text": "correct resources before we \ncontinue with the monitoring solution.",
    "start": "307797",
    "end": "310921"
  },
  {
    "text": "We’ll go to the Services page.",
    "start": "311781",
    "end": "313354"
  },
  {
    "text": "Let’s search for the Windows \nExporter service, which sends",
    "start": "317420",
    "end": "320000"
  },
  {
    "text": "out its Prometheus metrics.",
    "start": "320000",
    "end": "321579"
  },
  {
    "text": "Here it’s in a running status and \non an automatic delayed start,",
    "start": "322357",
    "end": "325548"
  },
  {
    "text": "as defined by the group policy object.",
    "start": "325549",
    "end": "327458"
  },
  {
    "text": "We’re now ready to build an \nAmazon Managed Grafana dashboard",
    "start": "330486",
    "end": "333474"
  },
  {
    "text": "for monitoring the WorkSpaces.",
    "start": "333474",
    "end": "335051"
  },
  {
    "text": "In the Amazon Managed Grafana \nconsole, we’ve built a Grafana",
    "start": "335746",
    "end": "338619"
  },
  {
    "text": "workspace for this purpose \nand have a URL to access it.",
    "start": "338619",
    "end": "341608"
  },
  {
    "text": "We’ve got the workspace \nopen in another tab.",
    "start": "342000",
    "end": "344201"
  },
  {
    "text": "First, we’ll add a data source.",
    "start": "345167",
    "end": "346781"
  },
  {
    "text": "We’re adding an Amazon Managed \nService for Prometheus service.",
    "start": "349740",
    "end": "352655"
  },
  {
    "text": "Let’s find its Region.",
    "start": "354894",
    "end": "356000"
  },
  {
    "text": "We’ll select and add the data source.",
    "start": "361386",
    "end": "363110"
  },
  {
    "text": "Next, we’ll import a dashboard.",
    "start": "366080",
    "end": "367646"
  },
  {
    "text": "We’ll assign the dashboard to \nour Prometheus data source.",
    "start": "374861",
    "end": "377491"
  },
  {
    "text": "Let’s import it.",
    "start": "379436",
    "end": "380294"
  },
  {
    "text": "The dashboard visualizes many kinds \nof useful data, including CPU load,",
    "start": "382298",
    "end": "385991"
  },
  {
    "text": "system threads, network data,\nhard drive disk space, and memory.",
    "start": "385991",
    "end": "389715"
  },
  {
    "text": "The data is captured historically, \nso we change the view to see what",
    "start": "392674",
    "end": "395812"
  },
  {
    "text": "happened in custom time \nframes, such as the last 24 hours.",
    "start": "395812",
    "end": "399145"
  },
  {
    "text": "Now we can see some idle time from \nwhen we recently rebooted the Workspaces.",
    "start": "402634",
    "end": "406249"
  },
  {
    "text": "If we had many Workspaces, we could \nchange the IP address of the Windows 10",
    "start": "407360",
    "end": "410926"
  },
  {
    "text": "WorkSpace to see their performance metrics.",
    "start": "410926",
    "end": "413004"
  },
  {
    "text": "When finished with the solution, we can \nclean up the resources using a cleanup script.",
    "start": "415941",
    "end": "419875"
  },
  {
    "text": "As it’s running, we’ll see \nthe resources cleaned up.",
    "start": "420945",
    "end": "423289"
  },
  {
    "text": "Let’s check the EC2 console.",
    "start": "423289",
    "end": "424956"
  },
  {
    "text": "The forwarder server is stopping, \nand eventually will be deleted.",
    "start": "428764",
    "end": "431683"
  },
  {
    "text": "Once the script completes, all \nresources will be torn down except for",
    "start": "432944",
    "end": "436128"
  },
  {
    "text": "the Amazon WorkSpaces and directory.",
    "start": "436128",
    "end": "438251"
  },
  {
    "text": "You’ve just seen how you can monitor\nWindows desktops on Amazon WorkSpaces",
    "start": "441222",
    "end": "445224"
  },
  {
    "text": "using Amazon Managed Service for \nPrometheus and Amazon Managed Grafana.",
    "start": "445224",
    "end": "449282"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "450319",
    "end": "453525"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "453666",
    "end": "455866"
  }
]