[
  {
    "text": "everybody good wonderful okay hi everybody my name is Randall hunt I'm a software engineer at Amazon Web Services",
    "start": "60",
    "end": "5250"
  },
  {
    "text": "I'm a Technical Evangelist there - the term Technical Evangelist all it really means is that they pay me to fly around",
    "start": "5250",
    "end": "10290"
  },
  {
    "text": "the world and have fun I strongly suggest it as a career as a job if you're interested we are hiring in",
    "start": "10290",
    "end": "15389"
  },
  {
    "text": "Germany and you're welcome to reach out to me after this this is my contact info I respond rather promptly unless you ask",
    "start": "15389",
    "end": "22949"
  },
  {
    "text": "a complicated question and then I may never respond no I'm teasing I will respond as best I can to every single",
    "start": "22949",
    "end": "28710"
  },
  {
    "text": "email I get this presentation and the work here that you see today is actually mostly the work of my colleagues I have",
    "start": "28710",
    "end": "35520"
  },
  {
    "text": "other sessions that I'm doing in other cities that data is my work that said anything that you see wrong with this",
    "start": "35520",
    "end": "42180"
  },
  {
    "text": "presentation is my fault anything that you see correct is danilo fault",
    "start": "42180",
    "end": "47610"
  },
  {
    "text": "so I made all the mistakes Danilo made everything good I strongly encourage you to tweet at me if for nothing else and",
    "start": "47610",
    "end": "54719"
  },
  {
    "text": "it's really funny and just I apologize one moment I'm just gonna fix my my little remote here or maybe I want",
    "start": "54719",
    "end": "69119"
  },
  {
    "text": "whatever it doesn't matter we don't need it okay so tweet at me a share hunt is",
    "start": "69119",
    "end": "75030"
  },
  {
    "text": "do people use Twitter in Germany yeah okay there are lots of lambda functions",
    "start": "75030",
    "end": "81330"
  },
  {
    "text": "that back my my Twitter account so also my text messages and also the majority of my familial interactions at this",
    "start": "81330",
    "end": "87930"
  },
  {
    "text": "point I don't think I've actually sent my mother a text message in like four years it's all lambda so and then I also",
    "start": "87930",
    "end": "94979"
  },
  {
    "text": "live code on twitch.tv slash AWS most Tuesdays and Thursdays and you can watch us build a lot of service applications",
    "start": "94979",
    "end": "101220"
  },
  {
    "text": "they're cool so this is Danilo spook he wrote lambda in action it's been translated into several languages I'm",
    "start": "101220",
    "end": "106649"
  },
  {
    "text": "not sure if German is among them but I think the English language comprehension here is quite good so you may be able to",
    "start": "106649",
    "end": "111689"
  },
  {
    "text": "read the English version and benefit did I mention that he wrote a book yeah all",
    "start": "111689",
    "end": "117509"
  },
  {
    "text": "right so you guys how many people were here in the first session and how many people",
    "start": "117509",
    "end": "125460"
  },
  {
    "text": "here have some experience with lambda so I'm gonna ask for those of you who are",
    "start": "125460",
    "end": "131220"
  },
  {
    "text": "experts in lambda to put your hands up okay what about medium medium okay what",
    "start": "131220",
    "end": "138540"
  },
  {
    "text": "about learning great so for the purposes of any video it was about 20% expert 20%",
    "start": "138540",
    "end": "147360"
  },
  {
    "text": "learning and then I'm really bad at math for the other part so what I want to",
    "start": "147360",
    "end": "153750"
  },
  {
    "text": "talk about is the developer experience within lambda and this involves not just coding lambda functions but also",
    "start": "153750",
    "end": "159090"
  },
  {
    "text": "modifying existing lambda functions so what is your continuous integration and continuous deployment strategy there and",
    "start": "159090",
    "end": "164819"
  },
  {
    "text": "there are a couple tools that are really important in the development of lambda functions that I'm gonna call out today",
    "start": "164819",
    "end": "170930"
  },
  {
    "text": "but first let's look at what a lambda function is this is kind of the core of",
    "start": "170930",
    "end": "177269"
  },
  {
    "text": "most of our service applications a function is essentially a piece of code",
    "start": "177269",
    "end": "182370"
  },
  {
    "text": "that is running a handler it can be in nodejs Python Java c-sharp go whatever language",
    "start": "182370",
    "end": "189540"
  },
  {
    "text": "you want and there it can respond either synchronously or asynchronously to to",
    "start": "189540",
    "end": "196019"
  },
  {
    "text": "changes in data state streaming data whatever kind of event that you use to invoke this function this could be an",
    "start": "196019",
    "end": "201180"
  },
  {
    "text": "HTTP call through API gateway it could be a Kinesis stream making a call for a record all of these things are possible",
    "start": "201180",
    "end": "207510"
  },
  {
    "text": "among many other event sources and then it can do anything right it's just code",
    "start": "207510",
    "end": "213180"
  },
  {
    "text": "so anything that you can do in in your mind that you can get into code you can do in a lambda function there are a few",
    "start": "213180",
    "end": "220319"
  },
  {
    "text": "caveats to lambda functions you can run between 128 megabytes of RAM and 3",
    "start": "220319",
    "end": "225599"
  },
  {
    "text": "gigabytes of RAM and your built-in Ram seconds memory seconds gigabyte seconds that's very analogous to a hill",
    "start": "225599",
    "end": "231479"
  },
  {
    "text": "watt-hour so the way that a kilowatt-hour works is if you're the way that a gigabyte second",
    "start": "231479",
    "end": "237720"
  },
  {
    "text": "works even is if you use 128 megabytes of ram for 10 seconds that's one",
    "start": "237720",
    "end": "242729"
  },
  {
    "text": "gigabyte second so we build one gigabyte second for those 10 seconds of 128 Meg's of RAM if you use three gigs for 0.33 3",
    "start": "242729",
    "end": "252750"
  },
  {
    "text": "4 seconds that's almost a gigabyte second and then you're billed for one gigabyte second I've used 1 gigabyte of",
    "start": "252750",
    "end": "258840"
  },
  {
    "text": "RAM for one second that's one gigabyte second and that's how you're built now the other important thing to keep in mind with functions is that the amount",
    "start": "258840",
    "end": "265590"
  },
  {
    "text": "of RAM that you provision also Gayle's your cpu so as you add more RAM you also get more CPU and that's",
    "start": "265590",
    "end": "270870"
  },
  {
    "text": "important and I'll talk a little bit more about that later but your assumption may be that the cheapest thing to do is to run with the",
    "start": "270870",
    "end": "277020"
  },
  {
    "text": "lowest amount of RAM but if your function completes in a shorter amount of time given more CPU that may not always be the case and it's important to",
    "start": "277020",
    "end": "283349"
  },
  {
    "text": "identify that and there tools that we've built and actually something that the community built that I think is even better than what we built called lambda",
    "start": "283349",
    "end": "290250"
  },
  {
    "text": "power tuning which creates a step function which creates a bunch of different aliases and versions of your lambda function across all kinds of",
    "start": "290250",
    "end": "296910"
  },
  {
    "text": "different memory profiles and figures out what's the cheapest or what's the fastest way for you to run this function it's a very powerful tool and I'll talk",
    "start": "296910",
    "end": "302789"
  },
  {
    "text": "about that a little bit more later so there are a lot of common service web",
    "start": "302789",
    "end": "308009"
  },
  {
    "text": "cases server lists use cases the the thing that I most often build is a",
    "start": "308009",
    "end": "313380"
  },
  {
    "text": "simple web app I've also built lex chat bots I've built data processing even",
    "start": "313380",
    "end": "319050"
  },
  {
    "text": "analytics machine learning even large MapReduce jobs there's a framework called PI R in and you can actually get",
    "start": "319050",
    "end": "324870"
  },
  {
    "text": "almost 20 terabytes of throughput to s3 you can do hundreds of teraflops of",
    "start": "324870",
    "end": "330270"
  },
  {
    "text": "compute using lambda that may be a little expensive but again lambda is quite cheap and it can also be a great",
    "start": "330270",
    "end": "336449"
  },
  {
    "text": "way to scale out tremendously horizontally and this is a very powerful paradigm I think this paradigm III was in the",
    "start": "336449",
    "end": "344159"
  },
  {
    "text": "audience at reinvent reinvent is this conference that we have in Las Vegas every year where we we make a lot of",
    "start": "344159",
    "end": "350280"
  },
  {
    "text": "announcements and we have a bunch of the AWS developer community and and partners come out and and you know share their",
    "start": "350280",
    "end": "356460"
  },
  {
    "text": "story share their experiences and I remember when Verner was on stage announcing lamda there was a portion of",
    "start": "356460",
    "end": "362669"
  },
  {
    "text": "the audience that immediately got it and thought this was gonna be game-changing you know this is gonna be one of the greatest things ever and then there was",
    "start": "362669",
    "end": "369150"
  },
  {
    "text": "another portion of the audience that was just what the hell is this I don't care",
    "start": "369150",
    "end": "375240"
  },
  {
    "text": "and that was mostly the press but one thing that I noticed about reinventing",
    "start": "375240",
    "end": "380460"
  },
  {
    "text": "2017 is no one was asking you know what is service how does this work everyone",
    "start": "380460",
    "end": "386159"
  },
  {
    "text": "was asking how can I use this and I think that's a drastic fundamental change that's happened in just three",
    "start": "386159",
    "end": "392099"
  },
  {
    "text": "years and I don't know how long people have been involved in the tech industry but we've been around for a few paradigm",
    "start": "392099",
    "end": "398580"
  },
  {
    "text": "shifts now we've been through the shift from from relational databases to non-relational databases back to",
    "start": "398580",
    "end": "405630"
  },
  {
    "text": "relational databases and we've been through a number of other shifts to where where we've kind of changed from",
    "start": "405630",
    "end": "411390"
  },
  {
    "text": "monoliths to micro services or distributed monoliths and we we find in",
    "start": "411390",
    "end": "417300"
  },
  {
    "text": "these these paradigm shifts a tremendous amount of opportunity to drive business value and that's the core takeaway from",
    "start": "417300",
    "end": "423630"
  },
  {
    "text": "this presentation is regardless of how much time you invest into tinkering and",
    "start": "423630",
    "end": "428670"
  },
  {
    "text": "building and doing stuff the core part of service is that it allows you to differentiate your business so it allows",
    "start": "428670",
    "end": "435630"
  },
  {
    "text": "you to focus only on the parts of your code that allow you to differentiate your business that's a very powerful",
    "start": "435630",
    "end": "440820"
  },
  {
    "text": "concept I'd never have to sit there and like patch Engine X again right I never have to be you know knee-deep in an",
    "start": "440820",
    "end": "446700"
  },
  {
    "text": "Apache config you know figuring out how many micro whisky containers I need to be spinning up in order to serve this",
    "start": "446700",
    "end": "452340"
  },
  {
    "text": "number of requests am i speaking English too quickly there's no great it's gonna get faster",
    "start": "452340",
    "end": "460440"
  },
  {
    "text": "so the other core component of serverless technologies is that you",
    "start": "460440",
    "end": "466140"
  },
  {
    "text": "never pay for idle this is one of the really cool components and this is true of all of the things that we release",
    "start": "466140",
    "end": "471780"
  },
  {
    "text": "under this kind of service moniker you are not paying for time where you're not",
    "start": "471780",
    "end": "477240"
  },
  {
    "text": "executing so I'm curious if I were to ask those of you who map utilization within your existing compute clusters",
    "start": "477240",
    "end": "483660"
  },
  {
    "text": "how many would say your utilization is above 50% there that for the purposes of",
    "start": "483660",
    "end": "489810"
  },
  {
    "text": "any video that was no hands how about how about above 10% there's a fake binary search okay above 25% good above",
    "start": "489810",
    "end": "500640"
  },
  {
    "text": "30 okay so we've got two people left in the room so I've been in a couple of",
    "start": "500640",
    "end": "507360"
  },
  {
    "text": "jobs where I've been brought in and they've said hey my utilization is it is it three percent and we want to get we want to get better and I was like okay",
    "start": "507360",
    "end": "513300"
  },
  {
    "text": "so I just do kind of select all of the ec2 instances and then I go delete and",
    "start": "513300",
    "end": "518370"
  },
  {
    "text": "then I rewrite most of that functionality and lambda function and suddenly we're at a hundred percent utilization Oh in our AWS bill went away",
    "start": "518370",
    "end": "524370"
  },
  {
    "text": "because the entire app runs within the free tier and this is actually happened to me with a number of customers and",
    "start": "524370",
    "end": "529710"
  },
  {
    "text": "I've seen another customers be incredibly successful with this kind of a paradigm so again the the pricing is very cheap I",
    "start": "529710",
    "end": "536910"
  },
  {
    "text": "believe this is for us East one but the the actual pricing doesn't matter when it's in micro sense you know you can you",
    "start": "536910",
    "end": "543329"
  },
  {
    "text": "can figure out how exactly your app is going to run and what your performance is gonna be but that's not really part",
    "start": "543329",
    "end": "548370"
  },
  {
    "text": "of the developer experience which is what I would love to focus on so these",
    "start": "548370",
    "end": "553439"
  },
  {
    "text": "are the event sources that you have among many others there are a couple of management tools chief among those and",
    "start": "553439",
    "end": "559589"
  },
  {
    "text": "and and not listed here is something called AWS x-ray so or Amazon x-ray",
    "start": "559589",
    "end": "564720"
  },
  {
    "text": "x-ray is a code instrumentation tool and I'll talk a little bit more about it later but does this work yeah it's",
    "start": "564720",
    "end": "571800"
  },
  {
    "text": "working now cool so you have cloud formation which is typically how you're going to be deploying and updating your",
    "start": "571800",
    "end": "578370"
  },
  {
    "text": "apps right so you'll write these these dsls cloud formation is a DSL it's um a",
    "start": "578370",
    "end": "584279"
  },
  {
    "text": "domain-specific language or if you'll pardon my language a damn specific language and you have to be very precise",
    "start": "584279",
    "end": "591720"
  },
  {
    "text": "with cloud formation and kind of go out and say this is what I want this is the thing that I want to provision and writing it by hand is a mind-numbing",
    "start": "591720",
    "end": "598350"
  },
  {
    "text": "exercise that no one should ever undertake so we have a number of tools that make that much easier for you and",
    "start": "598350",
    "end": "604019"
  },
  {
    "text": "then we have cloud trail cloud trail is how you kind of audit the activity within your your your account you can",
    "start": "604019",
    "end": "610379"
  },
  {
    "text": "see lambda functions you can see other API calls modification stuff like that",
    "start": "610379",
    "end": "615839"
  },
  {
    "text": "you have code commit this is just a repo you could use github as well it's totally fine and then cloud watch cloud",
    "start": "615839",
    "end": "621179"
  },
  {
    "text": "watch is where all of your logs for your lambda functions go we have a number of partners if you don't like cloud watch that allow you to stream your logs there",
    "start": "621179",
    "end": "627360"
  },
  {
    "text": "as well something like IO pipe or even data dog they both have integrations within lambda that can provide a lot of",
    "start": "627360",
    "end": "632490"
  },
  {
    "text": "rich context and I strongly suggest checking those out if you already have existing stuff on those those partners",
    "start": "632490",
    "end": "638160"
  },
  {
    "text": "if you don't Cloud watch will probably serve you just fine um and then we have",
    "start": "638160",
    "end": "643589"
  },
  {
    "text": "kind of endpoints this could be Alexa this could be step functions IOT API gateway and we can send things with SES",
    "start": "643589",
    "end": "649529"
  },
  {
    "text": "in fact if you are interested in receiving a small AWS credit you can email credits at random and comm and a",
    "start": "649529",
    "end": "656009"
  },
  {
    "text": "lambda function will respond to you after doing a little bit of fraud validation and send out a small credit",
    "start": "656009",
    "end": "661679"
  },
  {
    "text": "code to you so that's an example of a lambda function that we can show today and we also have SNS",
    "start": "661679",
    "end": "667860"
  },
  {
    "text": "then we can do cron jobs cron jobs can run in one-minute intervals their cloud watch offenses cool",
    "start": "667860",
    "end": "674490"
  },
  {
    "text": "so the lamda execution model works something like this where you have an API gateway for instance coming in and",
    "start": "674490",
    "end": "681810"
  },
  {
    "text": "it's hitting an endpoint let's say this in point is you know HTTP my API comm slash order and that's invoking a lambda",
    "start": "681810",
    "end": "689519"
  },
  {
    "text": "function what you don't see in this step is that I could have a couple of different things here I could have a custom authorizer that could be",
    "start": "689519",
    "end": "695730"
  },
  {
    "text": "something that's going as its own lambda function looking at the headers looking at the the given API key and diving deep",
    "start": "695730",
    "end": "701610"
  },
  {
    "text": "and saying hey is this API key you know valid have they exceeded their quota I can do a number of other different kind",
    "start": "701610",
    "end": "706980"
  },
  {
    "text": "of authorization things one thing to keep in mind with the custom authorizers is that you don't have access to the request body you only have access to the",
    "start": "706980",
    "end": "713190"
  },
  {
    "text": "request headers so you have to make sure that you architect your application in such a way that you are making use only",
    "start": "713190",
    "end": "719760"
  },
  {
    "text": "of the request headers in that custom authorizer if you do need access to the whole request and you don't want to write any kind of custom transforms or",
    "start": "719760",
    "end": "726390"
  },
  {
    "text": "integrations there's something called a proxy invocation and I'll talk a little bit more about that later let's look at",
    "start": "726390",
    "end": "732029"
  },
  {
    "text": "the second kind of invocation model which is asynchronous the asynchronous",
    "start": "732029",
    "end": "737550"
  },
  {
    "text": "invocation model works with things like SNS or s3 where let's say I upload a",
    "start": "737550",
    "end": "743100"
  },
  {
    "text": "picture to s3 and I want to resize this picture or a much more fun use case is I",
    "start": "743100",
    "end": "748170"
  },
  {
    "text": "want to replace all the faces in this picture with moustaches or ninja masks or later hosen and this is this is quite",
    "start": "748170",
    "end": "757230"
  },
  {
    "text": "easily done basically when s3 receives an upload I can subscribe my lambda",
    "start": "757230",
    "end": "762329"
  },
  {
    "text": "function to respond to all put events or all delete events or all kinds of events on that s3 bucket it will be invoked it",
    "start": "762329",
    "end": "769980"
  },
  {
    "text": "will be able to get the event data and perform some action and this is an example of a synchronous then we have",
    "start": "769980",
    "end": "777420"
  },
  {
    "text": "stream based the stream based invocation model has a number of strange and",
    "start": "777420",
    "end": "783209"
  },
  {
    "text": "interesting caveat so DynamoDB streams are essentially the same as Kinesis streams a Kinesis stream is is not dissimilar from Kafka Apache",
    "start": "783209",
    "end": "790620"
  },
  {
    "text": "Kafka if you've ever worked with it and the idea is that you have these these small granular records going into a",
    "start": "790620",
    "end": "796020"
  },
  {
    "text": "stream however many megabytes per second you want there's a model called sharding that'll",
    "start": "796020",
    "end": "801300"
  },
  {
    "text": "due to partition where we're in the stream that's going and then lambda also has a concurrency model that's built on",
    "start": "801300",
    "end": "807899"
  },
  {
    "text": "top of those shards so the more shards you have the more concurrency you can have within your lambda function for that Kinesis stream then the Kinesis",
    "start": "807899",
    "end": "814529"
  },
  {
    "text": "stream can actually the the lambda function can actually read from different places in the Kinesis stream it can read from the last record that",
    "start": "814529",
    "end": "821130"
  },
  {
    "text": "was sent it can read from the beginning of the stream from whatever last success successfully processed record was there",
    "start": "821130",
    "end": "828450"
  },
  {
    "text": "all kinds of different optimizations and changes that you can make there within dynamodb streams you have the option of",
    "start": "828450",
    "end": "833820"
  },
  {
    "text": "getting the old document the new document or just the new document or just the old document this allows you to do things like multi region replication",
    "start": "833820",
    "end": "840180"
  },
  {
    "text": "except you don't have to do that anymore because we release that and it's just easy to do it's like a checkbox now okay",
    "start": "840180",
    "end": "848339"
  },
  {
    "text": "so how does the permission model work have you guys used Identity and Access Management yeah I think this is probably",
    "start": "848339",
    "end": "854579"
  },
  {
    "text": "one of the first services that people encounter when they come to AWS is I am it's one of our core services there's a",
    "start": "854579",
    "end": "860519"
  },
  {
    "text": "lot of like features and innovation and a lot of really hard people a lot of like really hard work being done by",
    "start": "860519",
    "end": "865649"
  },
  {
    "text": "really talented people in the service to make it better and easier for people to use all the time and the way that this",
    "start": "865649",
    "end": "870930"
  },
  {
    "text": "works is you have two kind of policies you have the execution policy the execution policy is you know what can",
    "start": "870930",
    "end": "877320"
  },
  {
    "text": "invoke this what what what does it have access to when it's invoked and the function policy is almost like you you",
    "start": "877320",
    "end": "886470"
  },
  {
    "text": "know actions on bucket X are able to invoke lambda function Z so they're they're the lambda function essentially",
    "start": "886470",
    "end": "893910"
  },
  {
    "text": "under the covers is using something called STS simple token service to assume a role and perform actions as that role that you give the function and",
    "start": "893910",
    "end": "901350"
  },
  {
    "text": "if that doesn't make sense don't worry about it it's not important until it is so let you know we have we have our",
    "start": "901350",
    "end": "909510"
  },
  {
    "text": "example app here right we have you know a mobile app or a web site or various services accessing over the Internet",
    "start": "909510",
    "end": "916140"
  },
  {
    "text": "our CloudFront distribution which is talking to our api gateway or even talking directly past the CloudFront",
    "start": "916140",
    "end": "922470"
  },
  {
    "text": "distribution cloud front by the way is a CDN so it just distributes and caches things at EDD nodes all around the world",
    "start": "922470",
    "end": "929370"
  },
  {
    "text": "there more than 100 points of presence for the this CDN it's very powerful and it has a lot",
    "start": "929370",
    "end": "934680"
  },
  {
    "text": "features you can even run lambda functions at the edge on your cloud front nodes so there there's something",
    "start": "934680",
    "end": "941010"
  },
  {
    "text": "called lambda at edge which has a smaller execution time so instead of five minutes execution time you are",
    "start": "941010",
    "end": "946470"
  },
  {
    "text": "limited to 30 seconds but you can run 1.5 gig functions at the edge and there",
    "start": "946470",
    "end": "952230"
  },
  {
    "text": "are plenty of people that I've spoken to a lot of customers who are now running their entire application on lambda at edge saving a tremendous amount of money",
    "start": "952230",
    "end": "958260"
  },
  {
    "text": "never having to go back to their origin pretty powerful stuff and you can even call out like databases",
    "start": "958260",
    "end": "965160"
  },
  {
    "text": "and other api's from that edge location so you go to your API gateway here and",
    "start": "965160",
    "end": "970800"
  },
  {
    "text": "then maybe your API gateway is starting off some sort of manual process or starting off some sort of stage tiered",
    "start": "970800",
    "end": "976500"
  },
  {
    "text": "process and this would be the step functions API gateway is logging everything into cloud watch pardon me",
    "start": "976500",
    "end": "982940"
  },
  {
    "text": "and then we have n points for communicating with all of our our",
    "start": "982940",
    "end": "988980"
  },
  {
    "text": "infrastructure now we can also provision our lambda functions within a V PC but the way this works is you get an e and I",
    "start": "988980",
    "end": "996240"
  },
  {
    "text": "within your V PC and eni is an elastic network interface and that E and I consumes an IP address within that",
    "start": "996240",
    "end": "1002120"
  },
  {
    "text": "subnet and now you have access from your lambda function to all of your stuff",
    "start": "1002120",
    "end": "1008000"
  },
  {
    "text": "within your V PC this is pretty powerful there are a couple caveats to keep in mind with that though provisioning in",
    "start": "1008000",
    "end": "1014540"
  },
  {
    "text": "eni is not instantaneous releasing an e and is not instantaneous so the scale of lambda that you get when not running in",
    "start": "1014540",
    "end": "1020570"
  },
  {
    "text": "a V PC the scale can go much faster so you can go from zero functions to a",
    "start": "1020570",
    "end": "1025910"
  },
  {
    "text": "thousand concurrent indications to 10,000 concurrent invitations to a hundred thousand concurrent implications with very little effort there's some",
    "start": "1025910",
    "end": "1033350"
  },
  {
    "text": "default limits in place I believe those are like three thousand functions concurrently but those limits are not in",
    "start": "1033350",
    "end": "1039709"
  },
  {
    "text": "any way you know hard they're just there to protect you from getting an",
    "start": "1039709",
    "end": "1044870"
  },
  {
    "text": "unexpected bill so a simple support case two AWS should be automatically approved and it should automatically increase",
    "start": "1044870",
    "end": "1050480"
  },
  {
    "text": "your limit if you needed a substantial increase in concurrency you know on the order of you know hundreds of thousands",
    "start": "1050480",
    "end": "1056990"
  },
  {
    "text": "or even millions of executions per second or concurrent executions per second then you do need to have a little",
    "start": "1056990",
    "end": "1063350"
  },
  {
    "text": "bit more than just that that auto approve step but within our V PC when we provision these additional addresses we",
    "start": "1063350",
    "end": "1069780"
  },
  {
    "text": "have a bunch of things that we need to think about for instance we can run out of IP addresses in a subnet and then we",
    "start": "1069780",
    "end": "1075630"
  },
  {
    "text": "are limited in our concurrency within our subnet by that so you have to make sure when you're creating your subnet free lambda functions to run in that you",
    "start": "1075630",
    "end": "1081990"
  },
  {
    "text": "have enough IP addresses available that you can support the concurrency that you want good things to keep in mind this is",
    "start": "1081990",
    "end": "1087960"
  },
  {
    "text": "going to be covered a little bit more in the architectural patterns and global multi-region active active service",
    "start": "1087960",
    "end": "1094080"
  },
  {
    "text": "backends talks but moving along API gateway is a great way to kind of do a",
    "start": "1094080",
    "end": "1099570"
  },
  {
    "text": "giant reverse proxy into whatever service you want it is extremely full-featured you write transforms for",
    "start": "1099570",
    "end": "1106920"
  },
  {
    "text": "the incoming content and the outgoing content with something called velocity templates so has anybody worked with",
    "start": "1106920",
    "end": "1113010"
  },
  {
    "text": "Java before yeah it is Germany and I understand that there are a lot of",
    "start": "1113010",
    "end": "1118290"
  },
  {
    "text": "legacy applications is that did I just",
    "start": "1118290",
    "end": "1123720"
  },
  {
    "text": "make a lot of enemies I'm sorry so there's there's this old templating",
    "start": "1123720",
    "end": "1129570"
  },
  {
    "text": "language called velocity and I say old but it's actually still updated and it's an Apache project that is used in",
    "start": "1129570",
    "end": "1136230"
  },
  {
    "text": "everything from JIRA to tomcat to to you know whatever kind of java system you",
    "start": "1136230",
    "end": "1141990"
  },
  {
    "text": "have it's a templating language and these templating language this this velocity templating language is used in api gateway to allow you to transform",
    "start": "1141990",
    "end": "1149070"
  },
  {
    "text": "your your request that's coming into your lambda function as well as the data",
    "start": "1149070",
    "end": "1154080"
  },
  {
    "text": "coming out of your lambda function so you can add things remove things as needed in those templates and I think",
    "start": "1154080",
    "end": "1159900"
  },
  {
    "text": "there's a maximum size of the templates can be but I've done some pretty absurd stuff like calculating CRC's based on",
    "start": "1159900",
    "end": "1167190"
  },
  {
    "text": "the response and then do it base64 encoding it and then sha-256 hashing it",
    "start": "1167190",
    "end": "1172740"
  },
  {
    "text": "like I've done all of that in a template and it's basically like free compute so use it it has built-in DDoS protection",
    "start": "1172740",
    "end": "1180930"
  },
  {
    "text": "and throttling and again it has custom authorizers and you can you know add in",
    "start": "1180930",
    "end": "1186540"
  },
  {
    "text": "whatever quota systems you want cool so I told you earlier about proxy",
    "start": "1186540",
    "end": "1192180"
  },
  {
    "text": "integrations I think proxy integrations are the easiest way to take existing applications and move them quickly into",
    "start": "1192180",
    "end": "1198660"
  },
  {
    "text": "lambda the way that a proxy invocation works is you essentially saying I don't want API",
    "start": "1198660",
    "end": "1204059"
  },
  {
    "text": "gateway to be responsible for any kind of method transform or any kind of request transform I only want it to be",
    "start": "1204059",
    "end": "1210630"
  },
  {
    "text": "responsible for taking the incoming message and forwarding it to my lament function and then it'll populate these",
    "start": "1210630",
    "end": "1216510"
  },
  {
    "text": "fields so you'll get the resource which is going to be the path or yeah the the path that it was requested the path of",
    "start": "1216510",
    "end": "1222840"
  },
  {
    "text": "the actual request then the HTTP method this will be something like get or post",
    "start": "1222840",
    "end": "1228660"
  },
  {
    "text": "or options or any no no and then you'll have the headers you'll have the query",
    "start": "1228660",
    "end": "1235080"
  },
  {
    "text": "string parameters all kinds of stuff I'll talk a little bit more about stage variables a little bit later but you go",
    "start": "1235080",
    "end": "1241770"
  },
  {
    "text": "into this request context and you can have whatever kind of custom author authorize or stuff you wanted to populate with then you have the body of",
    "start": "1241770",
    "end": "1248160"
  },
  {
    "text": "the request and then because we killed we added is base64 encoded true or false",
    "start": "1248160",
    "end": "1253970"
  },
  {
    "text": "then you have to respond in a particular fashion when you have a proxy integration so you need to respond with",
    "start": "1253970",
    "end": "1259650"
  },
  {
    "text": "the status code this is gonna be 200 401 405 666 who knows and then is basic ste",
    "start": "1259650",
    "end": "1268650"
  },
  {
    "text": "4 encoded true or false yet again this few headers and the body if you have an",
    "start": "1268650",
    "end": "1274290"
  },
  {
    "text": "existing does anybody use flask Python flask okay if you have an existing flask",
    "start": "1274290",
    "end": "1280710"
  },
  {
    "text": "service or even an existing django service there's a framework called zappa that is particularly powerful in just",
    "start": "1280710",
    "end": "1287700"
  },
  {
    "text": "with zero code changes taking that and deploying it on an api gateway and a lambda function and it will manage",
    "start": "1287700",
    "end": "1293429"
  },
  {
    "text": "everything for you literally you go into your your existing flask application your type zappa an it is a PI deploy you",
    "start": "1293429",
    "end": "1300870"
  },
  {
    "text": "now have a service version of your flask application it will take care of packaging all the libraries it will take",
    "start": "1300870",
    "end": "1306690"
  },
  {
    "text": "care of everything for you I'm a Python guy so I spend quite a bit of time playing around with Zappa there",
    "start": "1306690",
    "end": "1312419"
  },
  {
    "text": "are a couple of other frameworks as well there's things like chalice and I'll cover all the other frameworks later but I think Zappa is probably one of my",
    "start": "1312419",
    "end": "1320040"
  },
  {
    "text": "favorite tools to use in terms of simplicity because I have a lot of applications that I built over the past",
    "start": "1320040",
    "end": "1325230"
  },
  {
    "text": "10 years that I'm bringing now into serverless and it's extremely easy like",
    "start": "1325230",
    "end": "1330300"
  },
  {
    "text": "I don't I don't know I don't even have to think about it I just zap an it zap a deploy and it works pretty powerful",
    "start": "1330300",
    "end": "1335770"
  },
  {
    "text": "so let's take a look at the lambda console so one of the things that I want",
    "start": "1335770",
    "end": "1342400"
  },
  {
    "text": "to point out about the lambda console is back in 20 some years ago we acquired",
    "start": "1342400",
    "end": "1348580"
  },
  {
    "text": "this company what year is it is it 2018 Wow time is going like super fast is that",
    "start": "1348580",
    "end": "1355540"
  },
  {
    "text": "happening for everybody else as time just getting faster and faster okay maybe it's the compound there's no",
    "start": "1355540",
    "end": "1360940"
  },
  {
    "text": "compression algorithm for experience this is called the AWS bingo section we what are the other words that I need",
    "start": "1360940",
    "end": "1366820"
  },
  {
    "text": "undifferentiated heavy lifting okay I've hit all the bingo words so a few years",
    "start": "1366820",
    "end": "1372640"
  },
  {
    "text": "ago we acquired a company called cloud 9 in Amsterdam so we we met there",
    "start": "1372640",
    "end": "1377679"
  },
  {
    "text": "developers and we thought hey you guys have kind of the same core principles that we do and you have a really cool service and we're really interested in",
    "start": "1377679",
    "end": "1384610"
  },
  {
    "text": "continuing to work more with you they maintain an open source project called the ACE editor which is still open source still maintained and they also",
    "start": "1384610",
    "end": "1392170"
  },
  {
    "text": "had kind of a more full-featured version of that ace editor which was put into an",
    "start": "1392170",
    "end": "1397570"
  },
  {
    "text": "integrated development environment an IDE called cloud 9 and so we acquired this and we released",
    "start": "1397570",
    "end": "1402850"
  },
  {
    "text": "this service at reinvent some year I my",
    "start": "1402850",
    "end": "1408040"
  },
  {
    "text": "perception of time is totally off so I don't remember if it was last year the year before that we released it and it",
    "start": "1408040",
    "end": "1414220"
  },
  {
    "text": "has native integration with lambda so if I want to edit an existing lambda function all I need to do is just double",
    "start": "1414220",
    "end": "1421240"
  },
  {
    "text": "click on that lambda function its imported and I can use it but the best part the best most important part here",
    "start": "1421240",
    "end": "1427030"
  },
  {
    "text": "is that it has vim key bindings does anybody use Emacs great oh well the",
    "start": "1427030",
    "end": "1433929"
  },
  {
    "text": "exits over there no it has vim key bindings so you can be tremendously",
    "start": "1433929",
    "end": "1439360"
  },
  {
    "text": "productive even just in the console so let's take a look really fast at the lambda console this is kind of our first",
    "start": "1439360",
    "end": "1445300"
  },
  {
    "text": "view into the server list developer experience",
    "start": "1445300",
    "end": "1452309"
  },
  {
    "text": "so we're gonna go all the way to the west coast now so I thought we might",
    "start": "1454570",
    "end": "1460760"
  },
  {
    "text": "build a simple function so earlier today I asked everybody what's what's a simple",
    "start": "1460760",
    "end": "1466400"
  },
  {
    "text": "idea that you would like to implement and serverless so does anybody have any ideas don't everybody shout at once",
    "start": "1466400",
    "end": "1475510"
  },
  {
    "text": "anything at all an AP an application for api gateway",
    "start": "1475510",
    "end": "1481880"
  },
  {
    "text": "will definitely do that something specific anything at all I promise I",
    "start": "1481880",
    "end": "1486920"
  },
  {
    "text": "should be able to code it unless it's you know crazy",
    "start": "1486920",
    "end": "1490840"
  },
  {
    "text": "so CSV to like JSON or something all right let's do it okay so the the",
    "start": "1492220",
    "end": "1498380"
  },
  {
    "text": "typical way that you would start is you would just go to the service application repo and you would type CSV and you",
    "start": "1498380",
    "end": "1503900"
  },
  {
    "text": "would see if there's anything that already does that for you and it doesn't look like there is but",
    "start": "1503900",
    "end": "1509690"
  },
  {
    "text": "the service application repo SAR is a great way to get started with almost any application you can find applications",
    "start": "1509690",
    "end": "1515600"
  },
  {
    "text": "created by the community you can even publish your own applications there and eventually monetize them so you can actually earn",
    "start": "1515600",
    "end": "1521150"
  },
  {
    "text": "some money from publishing your applications and when they're used you have this opportunity to turn a little",
    "start": "1521150",
    "end": "1526430"
  },
  {
    "text": "bit of money and you can also use it as an onboarding platform for your existing services so if you're a partner of AWS",
    "start": "1526430",
    "end": "1532760"
  },
  {
    "text": "but it doesn't look like we have one of those so I'm going to start from scratch I'm going to say Python 3.6 because",
    "start": "1532760",
    "end": "1538940"
  },
  {
    "text": "that's the greatest language ever and we're gonna say hello Munich and we're",
    "start": "1538940",
    "end": "1544580"
  },
  {
    "text": "just gonna use a roll that I created randomly how doesn't it doesn't matter",
    "start": "1544580",
    "end": "1549800"
  },
  {
    "text": "what role I choose because it doesn't look like we're gonna be accessing any other services the first thing that I want to point out is if you see on the",
    "start": "1549800",
    "end": "1556100"
  },
  {
    "text": "left side here you can see what the triggers are so right now I don't have any triggers we would pass in a trigger",
    "start": "1556100",
    "end": "1561140"
  },
  {
    "text": "of a type like API gateway or a type like s3 where when somebody uploads an",
    "start": "1561140",
    "end": "1566690"
  },
  {
    "text": "s3 CSV we're gonna transform it into JSON then we have over here the things that I",
    "start": "1566690",
    "end": "1573920"
  },
  {
    "text": "have provided access to and in my infinite developer wisdom I have not followed one of the best practices and",
    "start": "1573920",
    "end": "1579140"
  },
  {
    "text": "I've done let's provide access to everything and then I've given access to aid abuse x-ray since I've already given",
    "start": "1579140",
    "end": "1585740"
  },
  {
    "text": "access to everything I don't really need to give access to any thing else but I manually specified a bunch of this stuff this brings us to",
    "start": "1585740",
    "end": "1592019"
  },
  {
    "text": "the ACE editor so this is part of the cloud9 IDE the very first thing that you should do is go to keyboard and enable",
    "start": "1592019",
    "end": "1598739"
  },
  {
    "text": "them whatever keyboard is yeah so now",
    "start": "1598739",
    "end": "1603869"
  },
  {
    "text": "you can actually write code so oh yeah I should make it a lot bigger shouldn't I",
    "start": "1603869",
    "end": "1610279"
  },
  {
    "text": "so we're gonna import CSV we're gonna import JSON and then we're gonna say for",
    "start": "1610279",
    "end": "1619320"
  },
  {
    "text": "event and event records CSV load I don't",
    "start": "1619320",
    "end": "1626789"
  },
  {
    "text": "remember so does anybody else do this they just go Python CSV read string",
    "start": "1626789",
    "end": "1632419"
  },
  {
    "text": "nobody else does this okay because III program with stack overflow I'm not",
    "start": "1632419",
    "end": "1638279"
  },
  {
    "text": "ashamed to admit it this is like my everyday so we go and we say CSV reader",
    "start": "1638279",
    "end": "1644549"
  },
  {
    "text": "oh I'm gonna have to create a bytes IO object that's fine import io io equals",
    "start": "1644549",
    "end": "1652519"
  },
  {
    "text": "IO dot buffered here you know this would",
    "start": "1652519",
    "end": "1658889"
  },
  {
    "text": "be a lot easier if we just hopped over into a cloud IDE where I could manage",
    "start": "1658889",
    "end": "1664049"
  },
  {
    "text": "all of this so let's go into the real cloud9 IDE I'll provision it now create",
    "start": "1664049",
    "end": "1669450"
  },
  {
    "text": "environment let's say hello Minik and",
    "start": "1669450",
    "end": "1677909"
  },
  {
    "text": "because I don't pay my AWS bill will go with 256 K this will go with 256 gigs",
    "start": "1677909",
    "end": "1685499"
  },
  {
    "text": "ram and 64 v cpus and this will take just a moment to provision maybe three",
    "start": "1685499",
    "end": "1691830"
  },
  {
    "text": "four minutes total but in the meantime we can continue just playing around here import IO IO dot string IO buffer equals",
    "start": "1691830",
    "end": "1705659"
  },
  {
    "text": "sorry I'll make this bigger again I apologize buffer equals string IO and then we'll",
    "start": "1705659",
    "end": "1713519"
  },
  {
    "text": "say buffer and let's uh",
    "start": "1713519",
    "end": "1719240"
  },
  {
    "text": "here what uh what do we want to pass in so name date people and then a new line",
    "start": "1719240",
    "end": "1730080"
  },
  {
    "text": "and then we'll say Randall today how",
    "start": "1730080",
    "end": "1737880"
  },
  {
    "text": "many of you are there let's say 1000 million and then we'll say CSV so import",
    "start": "1737880",
    "end": "1747480"
  },
  {
    "text": "CSV CSV dot reader buffer delimiter I",
    "start": "1747480",
    "end": "1754890"
  },
  {
    "text": "don't think I need to pass in the delimiter actually because it should be auto inferred and then sorry",
    "start": "1754890",
    "end": "1763250"
  },
  {
    "text": "then for row in a print row great cool",
    "start": "1763250",
    "end": "1772440"
  },
  {
    "text": "so that's sort of working that's the basis of our code there we could hop back over here and we could say string",
    "start": "1772440",
    "end": "1778770"
  },
  {
    "text": "i/o equals so we'll say buffer it's",
    "start": "1778770",
    "end": "1785700"
  },
  {
    "text": "going to be string i/o equal to event this is not right we'll say record record and then we'll",
    "start": "1785700",
    "end": "1795030"
  },
  {
    "text": "say for what we want to transform this into JSON so what if we just do stuff",
    "start": "1795030",
    "end": "1806400"
  },
  {
    "text": "equals puffs CSV dot read how did I do",
    "start": "1806400",
    "end": "1811440"
  },
  {
    "text": "this earlier I've already forgotten reader buffer dot read great coding a",
    "start": "1811440",
    "end": "1821030"
  },
  {
    "text": "plus work here and then and I'm teasing this is the worst code that I have ever",
    "start": "1821030",
    "end": "1827130"
  },
  {
    "text": "written and I apologize for all of you being forced to struggle along here with me so then we will say let me just make",
    "start": "1827130",
    "end": "1833970"
  },
  {
    "text": "sure that this works so I owed string IO named eight people",
    "start": "1833970",
    "end": "1848420"
  },
  {
    "text": "[Music] and I should probably close that this is",
    "start": "1848420",
    "end": "1855160"
  },
  {
    "text": "when the vim key bindings come in handy but I don't have them enabled here so we'll say IO touch string IO whoops ah",
    "start": "1855160",
    "end": "1862890"
  },
  {
    "text": "and then open quote name date people and",
    "start": "1862890",
    "end": "1868650"
  },
  {
    "text": "then I get all that and then a equals yeah um read sorry let's see what things",
    "start": "1868650",
    "end": "1879430"
  },
  {
    "text": "it does have no so it's I have to iterate over it so I think if I just go",
    "start": "1879430",
    "end": "1886050"
  },
  {
    "text": "list that should work yeah okay",
    "start": "1886050",
    "end": "1891430"
  },
  {
    "text": "so we'll just call a list on this I like the newb that I am and we will say",
    "start": "1891430",
    "end": "1900510"
  },
  {
    "text": "return JSON dumps stuff or maybe we need",
    "start": "1900540",
    "end": "1909040"
  },
  {
    "text": "to create like a bigger thing big stuff equals and then big stuff dot append",
    "start": "1909040",
    "end": "1918000"
  },
  {
    "text": "stuff and then we do big stuff yeah so",
    "start": "1918000",
    "end": "1923260"
  },
  {
    "text": "that should work for our simple function and then we'll save it and I never really left the lambda console right",
    "start": "1923260",
    "end": "1929620"
  },
  {
    "text": "like everybody agrees that I never left the lambda console I didn't have to think about how any of this work I didn't have to go to stack overflow but",
    "start": "1929620",
    "end": "1937120"
  },
  {
    "text": "one of the cool things here is that now that I've written this function here and I've gone save oh and let me let me just",
    "start": "1937120",
    "end": "1944050"
  },
  {
    "text": "because again I don't pay for my bill and I'll just set this to be like five",
    "start": "1944050",
    "end": "1950020"
  },
  {
    "text": "minutes save and then I want to enable active tracing yes and enable active tracing",
    "start": "1950020",
    "end": "1956710"
  },
  {
    "text": "will actually enable me to see in x-ray the the functions that are being invoked which is a pretty powerful thing and I",
    "start": "1956710",
    "end": "1964330"
  },
  {
    "text": "can put in any tags I want on the function I can put in any environment variables I can add this to a V PC quite easily just go in and put in my subnets",
    "start": "1964330",
    "end": "1971650"
  },
  {
    "text": "but I don't care about that so I'm not going to do it and now if I want to import this I can",
    "start": "1971650",
    "end": "1978430"
  },
  {
    "text": "hop over into the cloud9 IDE and you can see all these remote functions here maybe you can't in the",
    "start": "1978430",
    "end": "1984370"
  },
  {
    "text": "of the room but what I want to do is say import hello Munich which I think is",
    "start": "1984370",
    "end": "1990550"
  },
  {
    "text": "this one and also say yep import and of",
    "start": "1990550",
    "end": "1996460"
  },
  {
    "text": "course the best way to edit functions now is to close the editor and open vim and I'm teasing but we have a really",
    "start": "1996460",
    "end": "2002550"
  },
  {
    "text": "cool tool there's there's a tool called Oh make it bigger sorry there's a tool",
    "start": "2002550",
    "end": "2010200"
  },
  {
    "text": "called Sam local before I even get into that there's another really cool feature of cloud 9 that I always forget to",
    "start": "2010200",
    "end": "2016620"
  },
  {
    "text": "demonstrate which is the ability to invite people and if anybody were an IM user in my account i would invite them",
    "start": "2016620",
    "end": "2021960"
  },
  {
    "text": "right now and we could edit live together on stage there's also this opportunity to kind of even do federated",
    "start": "2021960",
    "end": "2027809"
  },
  {
    "text": "authentication you do have to build all of that functionality yourself to create the IM user deregister the IM user and",
    "start": "2027809",
    "end": "2033030"
  },
  {
    "text": "stuff like that but you can bring in users to actually edit in line with you",
    "start": "2033030",
    "end": "2038270"
  },
  {
    "text": "so i could invite you know whoever I wanted to this instance and they would",
    "start": "2038270",
    "end": "2044190"
  },
  {
    "text": "be able to join me in write code or even just read and follow along and they would see my terminal they would see my",
    "start": "2044190",
    "end": "2050730"
  },
  {
    "text": "editor they would be able to see everything in collaborate so let me make the terminal bigger too oh I guess I",
    "start": "2050730",
    "end": "2056669"
  },
  {
    "text": "can't so I've imported this function but now I",
    "start": "2056669",
    "end": "2062520"
  },
  {
    "text": "need to generate a test event right like I need to know exactly how this event is going to be trimmer generated so I don't",
    "start": "2062520",
    "end": "2068398"
  },
  {
    "text": "know how to make this font bigger I apologize go big so we can do it like",
    "start": "2068399",
    "end": "2079080"
  },
  {
    "text": "this so there's something called Sam local and what I'm going to do is I'm",
    "start": "2079080",
    "end": "2084179"
  },
  {
    "text": "going to say generate event s3 and Sam",
    "start": "2084179",
    "end": "2089820"
  },
  {
    "text": "local works by running a docker container or even a series of docker containers on your machine to actually",
    "start": "2089820",
    "end": "2097350"
  },
  {
    "text": "allow you to invoke lambda functions locally just as if they were running out in API gateway just as if they were",
    "start": "2097350",
    "end": "2102570"
  },
  {
    "text": "running out on lambda and you were invoking them with the Kinesis stream and you can also generate these sample",
    "start": "2102570",
    "end": "2108750"
  },
  {
    "text": "events so I could even pass in you know a sample event like bucket is going to",
    "start": "2108750",
    "end": "2117120"
  },
  {
    "text": "be randal stuff and then key is gonna be",
    "start": "2117120",
    "end": "2122960"
  },
  {
    "text": "stuff dot CSV and it would actually populate that event for me and give me",
    "start": "2122960",
    "end": "2127970"
  },
  {
    "text": "all of the example put so you can see stuff dot CSV here all good stuff so",
    "start": "2127970",
    "end": "2133730"
  },
  {
    "text": "that's an example of how you can use lambda functions to get going rather quickly this was actually built so I",
    "start": "2133730",
    "end": "2140180"
  },
  {
    "text": "couldn't you know call out from an s3 uploaded file and see what happens there I don't remember what the exact record",
    "start": "2140180",
    "end": "2147559"
  },
  {
    "text": "looks like so it's good that I have this record here so it looks like if we go event records for record and event",
    "start": "2147559",
    "end": "2153890"
  },
  {
    "text": "records we get the stuff dot CSV all",
    "start": "2153890",
    "end": "2159109"
  },
  {
    "text": "that is pretty good but you wanted an API gateway integration so let's change our function around a little bit and just see if we can return something from",
    "start": "2159109",
    "end": "2171319"
  },
  {
    "text": "the event like this so we'll change this",
    "start": "2171319",
    "end": "2179180"
  },
  {
    "text": "record into event body and then if I need to see what the event body looks like we can go and say trying to",
    "start": "2179180",
    "end": "2185210"
  },
  {
    "text": "generate event it no more yet big stuff",
    "start": "2185210",
    "end": "2190549"
  },
  {
    "text": "I set it's the best I can do sorry I got",
    "start": "2190549",
    "end": "2201500"
  },
  {
    "text": "a I live in Los Angeles where we're very vain so I've had lots of plastic surgeries now I'm teasing but I did get",
    "start": "2201500",
    "end": "2207109"
  },
  {
    "text": "laser eye surgery and I feel like a mutant now I feel like I have super vision I should have been a pilot you",
    "start": "2207109",
    "end": "2212119"
  },
  {
    "text": "know I can see everything like I don't even have to zoom in it's it's awesome so if you have the opportunity to get",
    "start": "2212119",
    "end": "2217190"
  },
  {
    "text": "laser eye surgery I strongly recommend it it was extremely painful for me but",
    "start": "2217190",
    "end": "2224359"
  },
  {
    "text": "that was because the doctor forgot to put the anesthetic in and normally normally it's not painful at all but",
    "start": "2224359",
    "end": "2231770"
  },
  {
    "text": "that's not important and then I forgot what the possible events are so API",
    "start": "2231770",
    "end": "2239690"
  },
  {
    "text": "gotcha so we can get an API oh and this is a proxy on vacation so it'll still",
    "start": "2239690",
    "end": "2245990"
  },
  {
    "text": "just be body so what I'm going to do is I'm just going to rely on my probably",
    "start": "2245990",
    "end": "2251510"
  },
  {
    "text": "completely wrong memory to see if this works all",
    "start": "2251510",
    "end": "2257210"
  },
  {
    "text": "right so we can save that and then I could even run it you know I can run it locally and test it all doesn't matter",
    "start": "2257210",
    "end": "2263170"
  },
  {
    "text": "but what we really want to do is we want to create an API so we hop over API gateway hop over into the console to do",
    "start": "2263170",
    "end": "2272060"
  },
  {
    "text": "to do we'll create a quick API I'll call",
    "start": "2272060",
    "end": "2279620"
  },
  {
    "text": "this Randal Munich delete me later and",
    "start": "2279620",
    "end": "2285500"
  },
  {
    "text": "we'll make this edge optimized will create the API all good stuff we'll",
    "start": "2285500",
    "end": "2290630"
  },
  {
    "text": "create a method yeah and we'll just make this a post and we'll say call out to a",
    "start": "2290630",
    "end": "2300140"
  },
  {
    "text": "lambda function hello Munich save that okay we could have made this a proxy",
    "start": "2300140",
    "end": "2309320"
  },
  {
    "text": "invocation as well and this should just work you know there shouldn't be any issues I need to deploy it and since I'm",
    "start": "2309320",
    "end": "2316820"
  },
  {
    "text": "a developer and not an ops person we'll just deploy directly to prod I'm glad",
    "start": "2316820",
    "end": "2323570"
  },
  {
    "text": "you guys are laughing and then this is what we can do is we can say curl dash D",
    "start": "2323570",
    "end": "2335080"
  },
  {
    "text": "name date people I think I still have that for loop there don't I it's not",
    "start": "2335080",
    "end": "2341480"
  },
  {
    "text": "gonna work is it so let's hop back to our function so that it'll work the first time I invoke it probably we won't",
    "start": "2341480",
    "end": "2349040"
  },
  {
    "text": "that's fine and remove that silly for loop that I made unless I already did",
    "start": "2349040",
    "end": "2356540"
  },
  {
    "text": "that the reason this is taking so long is that I'm running it in uswest too",
    "start": "2356540",
    "end": "2362870"
  },
  {
    "text": "which is very far from here I think it's technically like 9,000 miles from here which is where my house",
    "start": "2362870",
    "end": "2368300"
  },
  {
    "text": "is so I'm excited to go back yeah did",
    "start": "2368300",
    "end": "2374630"
  },
  {
    "text": "that wrong oh so I see my function didn't actually save that's why so now",
    "start": "2374630",
    "end": "2381740"
  },
  {
    "text": "if I want to put this back I kind of close this out I hop back over to AWS resources and then I hey deploy and then if i refresh this",
    "start": "2381740",
    "end": "2389030"
  },
  {
    "text": "page should be updated should be yeah so",
    "start": "2389030",
    "end": "2396260"
  },
  {
    "text": "it's updated now so all you all I did there was I just clicked this function and then I clicked deploy and it was",
    "start": "2396260",
    "end": "2401750"
  },
  {
    "text": "back in my regular IDE so we'll say curl - D this URL and then I don't think we",
    "start": "2401750",
    "end": "2412610"
  },
  {
    "text": "need anything else and could not parse request body into JSON on rice donor",
    "start": "2412610",
    "end": "2418880"
  },
  {
    "text": "eyes unrecognized token name yeah that's because I'm telling it to",
    "start": "2418880",
    "end": "2425780"
  },
  {
    "text": "expect JSON but you get the idea this stuff is easy to build except when I'm doing it let's hop back",
    "start": "2425780",
    "end": "2434570"
  },
  {
    "text": "over to the presentation really quickly and I'll go through a couple other things and maybe we'll come back and I'll show you some more demos cool there",
    "start": "2434570",
    "end": "2442430"
  },
  {
    "text": "are a lot of really cool little keyboard shortcuts that are super useful within that ace editor the one that I think is",
    "start": "2442430",
    "end": "2448820"
  },
  {
    "text": "most useful is actually the the fullscreen I don't know how the rest of you program but I typically program with",
    "start": "2448820",
    "end": "2455090"
  },
  {
    "text": "just my editor and nothing else except Stack Overflow and then you can",
    "start": "2455090",
    "end": "2460190"
  },
  {
    "text": "configure your text test events with command J the test events are kind of saved in cache so you can use them on",
    "start": "2460190",
    "end": "2466220"
  },
  {
    "text": "the function so you saw that was like a lot of manual work right like that was a",
    "start": "2466220",
    "end": "2472850"
  },
  {
    "text": "lot of stuff to be tinkering around with in the console and also locally it just kind of moving a bunch of different",
    "start": "2472850",
    "end": "2478340"
  },
  {
    "text": "pieces around and you don't necessarily want to do that so we built something within cloud formation that allows you",
    "start": "2478340",
    "end": "2486350"
  },
  {
    "text": "to provision all of this but even within cloud formation it was still overly verbose you were having to specify every",
    "start": "2486350",
    "end": "2492470"
  },
  {
    "text": "single little thing when there are a lot of sensible defaults that are provided for you in the console and one of the",
    "start": "2492470",
    "end": "2497540"
  },
  {
    "text": "ways that we got around that was we created something called Sam and we gave it this really beautiful cute little mascot so that you wouldn't hate the",
    "start": "2497540",
    "end": "2504350"
  },
  {
    "text": "fact that you're writing JSON or yamo so this is Sam and Sam stands for service",
    "start": "2504350",
    "end": "2510260"
  },
  {
    "text": "application model and what it does is it applies a transform on an existing cloud",
    "start": "2510260",
    "end": "2517100"
  },
  {
    "text": "formation trance a cloud for template and it just makes it a lot",
    "start": "2517100",
    "end": "2523310"
  },
  {
    "text": "easier to provision things so it adds a couple of new resources for you things like function service or a simple table",
    "start": "2523310",
    "end": "2528950"
  },
  {
    "text": "not to be confused with simple DB for those of you who remember those days and",
    "start": "2528950",
    "end": "2534650"
  },
  {
    "text": "it's an open specification it's it's on github all of the code is open source you could implement this yourself for",
    "start": "2534650",
    "end": "2541490"
  },
  {
    "text": "your functions or GCP functions like it's not specific to AWS although I",
    "start": "2541490",
    "end": "2546910"
  },
  {
    "text": "guess by default it is and this is what a Sam template looks like so at the top",
    "start": "2546910",
    "end": "2553369"
  },
  {
    "text": "we have kind of this this version that's saying you know this is the the CloudFormation template version and then",
    "start": "2553369",
    "end": "2558560"
  },
  {
    "text": "the important part is this transform that we're loading in this AWS server list transform and then we could define",
    "start": "2558560",
    "end": "2564410"
  },
  {
    "text": "a function which is called get HTML and this function is going to be loaded from this location this is a file it's gonna",
    "start": "2564410",
    "end": "2570859"
  },
  {
    "text": "have a runtime of 6.1 now 8.1 is available and then it's gonna have a",
    "start": "2570859",
    "end": "2577130"
  },
  {
    "text": "policy of Amazon DynamoDB read-only access and we're gonna define an event of type get HTML type named get HTML of",
    "start": "2577130",
    "end": "2584599"
  },
  {
    "text": "type API with the properties that it's a proxy invocation so it'll pass all methods into that pretty cool pretty",
    "start": "2584599",
    "end": "2591710"
  },
  {
    "text": "useful previously in order to do all this it would have been much harder so",
    "start": "2591710",
    "end": "2598940"
  },
  {
    "text": "all of these resources that you see here are actually being transformed into an iamb role and I in policy a function and",
    "start": "2598940",
    "end": "2604640"
  },
  {
    "text": "a REST API a stage a deployment of permission all this stuff that you don't really want to deal with right like there's no reason for you to write this",
    "start": "2604640",
    "end": "2610520"
  },
  {
    "text": "if you're using simple stuff that said I will say that as you move into production or as you move in town of a",
    "start": "2610520",
    "end": "2616849"
  },
  {
    "text": "defensive coding posture you're gonna want to change this permission section and you're gonna want to change this I am role in policy section and kind of",
    "start": "2616849",
    "end": "2623180"
  },
  {
    "text": "override it with with some sensible defaults for your application for development it's not important just go",
    "start": "2623180",
    "end": "2629000"
  },
  {
    "text": "with like the stuff that kind of works best for you but when you get into you know a production deployment that you're",
    "start": "2629000",
    "end": "2634760"
  },
  {
    "text": "doing continuous integration on make sure that those policies are locked down specifically do the resources that you're going to be accessing the all of",
    "start": "2634760",
    "end": "2642260"
  },
  {
    "text": "that turns into this and even with my laser eye vision I can't tell what the hell is going on I have no idea what",
    "start": "2642260",
    "end": "2649250"
  },
  {
    "text": "this is just too much stuff for somebody to have to go through and that's why we made salmon so you - so the really easy way did you see",
    "start": "2649250",
    "end": "2655400"
  },
  {
    "text": "them is to just call a cloud formation package or even there's an alias for it so Sam package and then Sam deploy and",
    "start": "2655400",
    "end": "2662540"
  },
  {
    "text": "you just pass in the the template and it will deploy it all for you but even that",
    "start": "2662540",
    "end": "2669380"
  },
  {
    "text": "is too complex I like visuals I don't I spend all my",
    "start": "2669380",
    "end": "2674480"
  },
  {
    "text": "time on the command line but let's imagine that I like visuals it would be really really powerful if we could just",
    "start": "2674480",
    "end": "2680450"
  },
  {
    "text": "point and click and say what we wanted to build right uh I thought I was way",
    "start": "2680450",
    "end": "2686810"
  },
  {
    "text": "over time when you came in sorry so it would be really really fun and powerful if we could just point at things and",
    "start": "2686810",
    "end": "2693260"
  },
  {
    "text": "make them then suddenly turn into functions so my colleague Danilo who is",
    "start": "2693260",
    "end": "2698270"
  },
  {
    "text": "the expert on serverless he wrote a book about it did I mention that yeah just a few times so I want to show you Danilo",
    "start": "2698270",
    "end": "2705650"
  },
  {
    "text": "is project which is called serverless by design basically I can go in if my thing",
    "start": "2705650",
    "end": "2712520"
  },
  {
    "text": "loads I can go in to this and I can say I want to add a node so let me add a",
    "start": "2712520",
    "end": "2719030"
  },
  {
    "text": "node of type dynamodb table and I'm gonna call this table delete me later",
    "start": "2719030",
    "end": "2726070"
  },
  {
    "text": "and then I want to connect this lambda function to that table and give it",
    "start": "2726070",
    "end": "2731570"
  },
  {
    "text": "permissions so I just drag it and drop it and it has all kinds of animations",
    "start": "2731570",
    "end": "2737020"
  },
  {
    "text": "and you can change the physics it's a lot of fun that's the most fun part and",
    "start": "2737440",
    "end": "2744050"
  },
  {
    "text": "then you can click build and it'll give you the information to call it out you can go and you can say export and you",
    "start": "2744050",
    "end": "2749720"
  },
  {
    "text": "can export all the data it'll download you'll get this little zip file the zip",
    "start": "2749720",
    "end": "2755150"
  },
  {
    "text": "file will contain a sample function it will contain your template and it will have all the stuff built together for",
    "start": "2755150",
    "end": "2761270"
  },
  {
    "text": "you so this is called SPD serve list by design at millipede net I strongly recommend checking it out it can save",
    "start": "2761270",
    "end": "2766760"
  },
  {
    "text": "you a lot of time what I will say is I wouldn't use the templates that it generates as the de facto standard for",
    "start": "2766760",
    "end": "2773210"
  },
  {
    "text": "what you should do I would use them as starting points I would use them as a means to to build out the rough design",
    "start": "2773210",
    "end": "2780290"
  },
  {
    "text": "and then you go in and manually edit it and build out all the components that your you need to so that's pretty",
    "start": "2780290",
    "end": "2786560"
  },
  {
    "text": "powerful and then we covered cloud 9 cloud 9 is very powerful the really cool part of",
    "start": "2786560",
    "end": "2792800"
  },
  {
    "text": "cloud 9 too is that it actually uses a lot of local caching so after it's loaded once it will load up very quickly",
    "start": "2792800",
    "end": "2799010"
  },
  {
    "text": "even on very back poor connections very very very poor connections like an airplane or Deutsche Bahn train and you",
    "start": "2799010",
    "end": "2808910"
  },
  {
    "text": "can you can edit code with this massive machine backing you right you know I had I had 60 what was it a hundred fifty six",
    "start": "2808910",
    "end": "2816530"
  },
  {
    "text": "gigs of ram in 64 V CPUs and that came up in less than two or three minutes and",
    "start": "2816530",
    "end": "2821840"
  },
  {
    "text": "I suddenly had access to it and the other benefit of it is again you're trying to get towards that point of not",
    "start": "2821840",
    "end": "2826970"
  },
  {
    "text": "paying for idle so if you don't use the machine for thirty thirty minutes or you can customize this you can make it for",
    "start": "2826970",
    "end": "2832640"
  },
  {
    "text": "hours you can make it several days if the machine is not running and you're not accessing it for a certain period of time it will shut down but then it comes",
    "start": "2832640",
    "end": "2840410"
  },
  {
    "text": "back quite quickly and it preserves everything it's just where you left off so again when it comes into testing we",
    "start": "2840410",
    "end": "2847760"
  },
  {
    "text": "talked a little bit about Sam local already but you you do have to think about testing a little differently with",
    "start": "2847760",
    "end": "2852950"
  },
  {
    "text": "serverless applications because you are limited in the resources that you have on your lambda function whether it's a lambda at edge function or a regular",
    "start": "2852950",
    "end": "2859520"
  },
  {
    "text": "lambda function again am i speaking too quickly slow it down a bit okay there",
    "start": "2859520",
    "end": "2865220"
  },
  {
    "text": "seems to be mild consistent consensus and the audience that I am speaking too quickly it's a common problem for D New York New Yorkers so when we go into",
    "start": "2865220",
    "end": "2874910"
  },
  {
    "text": "testing things we have to take into account the fact that the RAM that I have on my local laptop is not the same",
    "start": "2874910",
    "end": "2881210"
  },
  {
    "text": "as the RAM that I'm going to have on my lambda function the CPU that I have on my local laptop is not the same as the",
    "start": "2881210",
    "end": "2887240"
  },
  {
    "text": "CPU that I will have on my my lambda function so I need to make sure that the",
    "start": "2887240",
    "end": "2894020"
  },
  {
    "text": "docker container that I'm running is right size to whatever kind of lambda function I do intend on running and even",
    "start": "2894020",
    "end": "2899390"
  },
  {
    "text": "then the instruction sets won't match it'll be a slightly different environment so the best way to test is actually on a lambda function itself and",
    "start": "2899390",
    "end": "2906260"
  },
  {
    "text": "there's a really really cool tool that I mentioned earlier on in this presentation called lambda power tuning this by alx kasib Loney",
    "start": "2906260",
    "end": "2913510"
  },
  {
    "text": "this is strange whoa how do I that was weird",
    "start": "2913510",
    "end": "2922079"
  },
  {
    "text": "so this is called lambda power turning and this allows you to take an existing",
    "start": "2922079",
    "end": "2927990"
  },
  {
    "text": "lambda function and create a bunch of different versions and aliases of it and it will tell you which one is gonna run",
    "start": "2927990",
    "end": "2933990"
  },
  {
    "text": "fastest or which one is going to run most cheaply and counter to your intuition sometimes a larger function will",
    "start": "2933990",
    "end": "2940650"
  },
  {
    "text": "actually be cheaper than then a smaller function so your intuition may lead you to believe that 128 makes a rim smallest",
    "start": "2940650",
    "end": "2947190"
  },
  {
    "text": "function so long as it completes is actually the cheapest way of running but that's not true sometimes the 3 gig function with the",
    "start": "2947190",
    "end": "2954030"
  },
  {
    "text": "two V CPUs if your CPU bound is the fastest way of running and you can see",
    "start": "2954030",
    "end": "2959819"
  },
  {
    "text": "what it's doing here it's basically defining a step function that goes through and sends all of your executions to a bunch of different ones and then it",
    "start": "2959819",
    "end": "2966450"
  },
  {
    "text": "will give you some output and you can use that output to right-size your function I think that's one of the best ways to kind of deal with right sizing",
    "start": "2966450",
    "end": "2972510"
  },
  {
    "text": "and again we covered Sam local already so I'm gonna skip past some of that you",
    "start": "2972510",
    "end": "2979049"
  },
  {
    "text": "saw me generating events earlier and same local again is open source so",
    "start": "2979049",
    "end": "2984270"
  },
  {
    "text": "you're welcome to contribute to it there are a number of other tools besides Sam local that interact with Sam local so",
    "start": "2984270",
    "end": "2989789"
  },
  {
    "text": "you can actually emulate many of the existing AWS services things like Kinesis or DynamoDB Atlassian released a",
    "start": "2989789",
    "end": "2995789"
  },
  {
    "text": "tool that i can't remember the name of right now that emulates all of those",
    "start": "2995789",
    "end": "3000849"
  },
  {
    "text": "service components things like Kinesis streams yeah people are taking pictures",
    "start": "3000849",
    "end": "3007010"
  },
  {
    "text": "so I'll leave that for a second ok so it has a great man page and I always I",
    "start": "3007010",
    "end": "3013250"
  },
  {
    "text": "always value my tools by how good the main pages except for set so you can",
    "start": "3013250",
    "end": "3020569"
  },
  {
    "text": "start your API you can run your API locally you can generate events you can invoke your function locally all that",
    "start": "3020569",
    "end": "3025789"
  },
  {
    "text": "good stuff and it's available in cloud 9 out of the box so when it comes to deploying service applications and this",
    "start": "3025789",
    "end": "3031819"
  },
  {
    "text": "is the last part of my presentation because I can tell that people are starting to fall asleep so I'll up the energy a little bit we can talk about",
    "start": "3031819",
    "end": "3039130"
  },
  {
    "text": "continuous integration and continuous deployment isn't that so exciting no I",
    "start": "3039130",
    "end": "3044450"
  },
  {
    "text": "understand the the goal here is to be as boring as possible and to be as",
    "start": "3044450",
    "end": "3050720"
  },
  {
    "text": "easy as possible so if you don't want to have to deal with setting any of this up you know you can set up your own source",
    "start": "3050720",
    "end": "3056660"
  },
  {
    "text": "you can use github you can use code commit you can set up your own build Jenkins code build you can set up your",
    "start": "3056660",
    "end": "3062390"
  },
  {
    "text": "own testing you know circle CI Travis CI whatever kind of components you want to use or even even you know our our code",
    "start": "3062390",
    "end": "3068930"
  },
  {
    "text": "build service and in code pipeline service and then you deploy it all with CloudFormation I this is the only step",
    "start": "3068930",
    "end": "3074210"
  },
  {
    "text": "that I actually kind of stick by people use tools like terraform and and other tools to to kind of provision these",
    "start": "3074210",
    "end": "3081020"
  },
  {
    "text": "things having worked with terraform extensively I will say that I think CloudFormation offers a better more",
    "start": "3081020",
    "end": "3087230"
  },
  {
    "text": "constructive set of primitives for you to build things from although terraform is a little prettier to look at so if",
    "start": "3087230",
    "end": "3096710"
  },
  {
    "text": "you don't want to set any of this up there's something called code star which will set it all up for you again I",
    "start": "3096710",
    "end": "3102500"
  },
  {
    "text": "strongly recommend checking the service out if you're just looking for somewhere to start and you want to iterate you can",
    "start": "3102500",
    "end": "3107720"
  },
  {
    "text": "go and you can say I want a Python web service built on lambda or I want a Python service built on elastic",
    "start": "3107720",
    "end": "3115910"
  },
  {
    "text": "Beanstalk it's not just for service but it is one of the easiest ways to get started with server lists and this",
    "start": "3115910",
    "end": "3121580"
  },
  {
    "text": "integrates somewhat with those existing service application repo services that I showed you earlier so you can have",
    "start": "3121580",
    "end": "3131230"
  },
  {
    "text": "within service application model access to a couple of deployment primitives now these deployment primitives are",
    "start": "3131230",
    "end": "3138190"
  },
  {
    "text": "allowing you to shift traffic between two versions of an API so let's say I you guys I'm sure I've heard of",
    "start": "3138190",
    "end": "3145010"
  },
  {
    "text": "Bluegreen deployments right where you cut over the DNS so you have like an entire separate copy of the infrastructure and then you cut over the",
    "start": "3145010",
    "end": "3150080"
  },
  {
    "text": "DNS at one point that is a great method of deploying and that's supported but",
    "start": "3150080",
    "end": "3155480"
  },
  {
    "text": "one of the really cool things to do is to actually shift traffic grab gradually between them that way you can see if something's starting to fail when it",
    "start": "3155480",
    "end": "3161480"
  },
  {
    "text": "hits a production load so you can start out and you can say let me take 10% of my traffic's in it to my new API I'll",
    "start": "3161480",
    "end": "3166609"
  },
  {
    "text": "leave the rest of the traffic running to the old API okay let me switch 20% of my traffic over 30% and then typically",
    "start": "3166609",
    "end": "3172220"
  },
  {
    "text": "after things hit 50% I just call it and like push everything over because I again prod and so I could take that",
    "start": "3172220",
    "end": "3181670"
  },
  {
    "text": "application that we built earlier right and if I wanted to add a safe deployment to this all I need to do is declare",
    "start": "3181670",
    "end": "3188330"
  },
  {
    "text": "global which is a function it's gonna have a auto publish and I'm gonna have a type of canary ten percent every ten",
    "start": "3188330",
    "end": "3195650"
  },
  {
    "text": "minutes to do and then I can add some hooks to so I could have hooks that",
    "start": "3195650",
    "end": "3201620"
  },
  {
    "text": "would roll back the web deployment I could have hooks that would would roll it forward it would change things from",
    "start": "3201620",
    "end": "3206780"
  },
  {
    "text": "Canaries into two production deployments I don't think I've mentioned canary deployments yet so let me take a moment",
    "start": "3206780",
    "end": "3212480"
  },
  {
    "text": "to tell you how awesome these are Canaries are it's a common term named after coal miners they would send a",
    "start": "3212480",
    "end": "3220040"
  },
  {
    "text": "canary into the mine and if the canary survived the mine was safe and if the canary unfortunately did not survive",
    "start": "3220040",
    "end": "3225620"
  },
  {
    "text": "then they sent the miners in anyway and they all got lung cancer this is the story of West Virginia in the United",
    "start": "3225620",
    "end": "3231200"
  },
  {
    "text": "States if anybody's ever been there and you can set all these alarms that'll go off and tell you you know okay the",
    "start": "3231200",
    "end": "3238070"
  },
  {
    "text": "the Canaries not working but who here writes Java again this one hundred",
    "start": "3238070",
    "end": "3243320"
  },
  {
    "text": "percent of the audience we are in Germany so I'm teasing I'm teasing and I",
    "start": "3243320",
    "end": "3248360"
  },
  {
    "text": "guess it's mostly a c-sharp so we we have in Java these these I charge called",
    "start": "3248360",
    "end": "3256040"
  },
  {
    "text": "stack traces and looking at one of these makes your eyes bleed literally I mean",
    "start": "3256040",
    "end": "3262790"
  },
  {
    "text": "you're just kind of like how far down do I have to scroll to get to the relevant part of the stack trace to know what",
    "start": "3262790",
    "end": "3268490"
  },
  {
    "text": "went wrong it's a lot of data and Java stack traces will produce this stuff endlessly and happily hum along",
    "start": "3268490",
    "end": "3274730"
  },
  {
    "text": "endlessly until something goes you know horribly wrong and you run out of memory you run out of space and with CloudWatch",
    "start": "3274730",
    "end": "3280700"
  },
  {
    "text": "logs you won't run out of space so it'll just keep filling everything up that information is not useful in production",
    "start": "3280700",
    "end": "3286760"
  },
  {
    "text": "that is information that's really only useful when you're developing and debugging hopefully so with a canary",
    "start": "3286760",
    "end": "3292460"
  },
  {
    "text": "deployment you can set a bunch of variables that say okay I want you to turn on exception logging I want it I want you to turn on tracing I want you",
    "start": "3292460",
    "end": "3299000"
  },
  {
    "text": "to turn on debug level stuff and I want to find out everything that I can and in the second",
    "start": "3299000",
    "end": "3305060"
  },
  {
    "text": "that I promote that canary deployment into a production deployment I can change all those variables I can turn it off I can say okay I no longer need",
    "start": "3305060",
    "end": "3312440"
  },
  {
    "text": "access to that level of information I only want you to do info logging so think about all the variables that you set in your develop",
    "start": "3312440",
    "end": "3317630"
  },
  {
    "text": "or in your test cycles that you would love to not have to do another deployment just to change those variables around that's really easy to",
    "start": "3317630",
    "end": "3324290"
  },
  {
    "text": "do with Canaries these are really good animations so this is what the code",
    "start": "3324290",
    "end": "3330410"
  },
  {
    "text": "deploy console looks like when you when you do one of these kind of not canary",
    "start": "3330410",
    "end": "3336590"
  },
  {
    "text": "but traffic shifting deployments so you can start out you can say okay I'm gonna start sending 40% of my traffic to the",
    "start": "3336590",
    "end": "3344150"
  },
  {
    "text": "new version and 60% of my traffic to the old version and then we already demoed cloud 9 and Sam local so we're gonna",
    "start": "3344150",
    "end": "3351440"
  },
  {
    "text": "skip ahead to the takeaways because hopefully oh no you have one more session before lunch well that's",
    "start": "3351440",
    "end": "3357740"
  },
  {
    "text": "unfortunate well I was gonna help to",
    "start": "3357740",
    "end": "3363320"
  },
  {
    "text": "release everybody for lunch but instead I'm just gonna skip ahead really fast which in say if you take nothing else",
    "start": "3363320",
    "end": "3368870"
  },
  {
    "text": "away from this take away the fact that it is quite easy to get started with developing serverless functions and the",
    "start": "3368870",
    "end": "3374660"
  },
  {
    "text": "experience is rather pleasant compared to some of the existing development paradigms if you use something like",
    "start": "3374660",
    "end": "3381500"
  },
  {
    "text": "Visual Studio code you have native integration with lambdas so you can you can just open up visual studio code install the lambda plug in and saw the",
    "start": "3381500",
    "end": "3387740"
  },
  {
    "text": "same local plugin and all of a sudden you have all these great features for working with c-sharp and lambda the.net",
    "start": "3387740",
    "end": "3393380"
  },
  {
    "text": "performance in lambda is quite good and the C ICD capabilities of lambda are far",
    "start": "3393380",
    "end": "3400040"
  },
  {
    "text": "and away one of the best things that I've ever gotten for free I don't",
    "start": "3400040",
    "end": "3405830"
  },
  {
    "text": "actually have to do any setup or any kind of you know thinking about getting this stuff going to be able to use it so",
    "start": "3405830",
    "end": "3412040"
  },
  {
    "text": "if you're gonna take anything else away take that and if you're gonna take nothing at all away from this presentation",
    "start": "3412040",
    "end": "3417080"
  },
  {
    "text": "just remember to buy Danilo sook so thank you all so much for attending this talk they're gonna be more talks later",
    "start": "3417080",
    "end": "3423430"
  },
  {
    "text": "and I strongly suggest sticking around for those I have a little bit of time for questions so thanks again",
    "start": "3423430",
    "end": "3429390"
  },
  {
    "text": "[Applause]",
    "start": "3429390",
    "end": "3435690"
  },
  {
    "text": "are there any questions great I'm gonna go to lunch",
    "start": "3435690",
    "end": "3442380"
  }
]