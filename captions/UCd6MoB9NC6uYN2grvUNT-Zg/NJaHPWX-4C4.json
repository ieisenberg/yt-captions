[
  {
    "text": "In this video you’ll see how to use \nAmazon CodeWhisperer in JupyterLab.",
    "start": "0",
    "end": "4707"
  },
  {
    "text": "With this AI-powered tool, you can \nincrease developer productivity by",
    "start": "5391",
    "end": "9450"
  },
  {
    "text": "accelerating any coding task, reduce \nrisk with built-in security scanning,",
    "start": "9450",
    "end": "14125"
  },
  {
    "text": "and work with familiar JupyterLab tools \nfor data science and machine learning tasks.",
    "start": "14126",
    "end": "19080"
  },
  {
    "text": "We’ll begin in a command-line terminal window, \nwhere we’ll install JupyterLab Version 3.6.3.",
    "start": "20932",
    "end": "26168"
  },
  {
    "text": "For demonstration purposes, we have a computer with \nboth Python version 2 and Python version 3 installed.",
    "start": "32651",
    "end": "38766"
  },
  {
    "text": "To install JupyterLab, we’ll use the \ncommand “pip3 install jupyterlab.”",
    "start": "39185",
    "end": "44124"
  },
  {
    "text": "Next, we’ll run a command to \nstart the JupyterLab server.",
    "start": "52723",
    "end": "55831"
  },
  {
    "text": "This opens the JupyterLab interface in\na new browser window, where the local",
    "start": "61388",
    "end": "65697"
  },
  {
    "text": "working directory appears \non the left side of the page.",
    "start": "65697",
    "end": "68872"
  },
  {
    "text": "The directory contains a few data files and \nPython files that we'll be working with shortly.",
    "start": "69622",
    "end": "74880"
  },
  {
    "text": "Next, let’s navigate to the extension manager to view\n the extensions that have been installed for JupyterLab.",
    "start": "75762",
    "end": "80966"
  },
  {
    "text": "Currently, only the Pygments extension is installed.",
    "start": "83523",
    "end": "86191"
  },
  {
    "text": "Let’s return to the command-line terminal and install \nthe CodeWhisperer Amazon JupyterLab extension.",
    "start": "86544",
    "end": "92144"
  },
  {
    "text": "Next, we’ll enter a command to update \nJupyterLab with the newly installed extension.",
    "start": "98715",
    "end": "103797"
  },
  {
    "text": "Next, we’ll shut down the JupyterLab server in the \nJupyterLab command window by pressing Control C.",
    "start": "107082",
    "end": "112230"
  },
  {
    "text": "We’ll confirm the shutdown.",
    "start": "112848",
    "end": "114369"
  },
  {
    "text": "Next, we’ll restart the server with \nthe same command we used earlier.",
    "start": "125000",
    "end": "128800"
  },
  {
    "text": "The Amazon CodeWhisperer \nJupyterLab extension has been installed.",
    "start": "135679",
    "end": "139416"
  },
  {
    "text": "Let’s start the extension.",
    "start": "139637",
    "end": "141114"
  },
  {
    "text": "To use CodeWhisperer, we need \nto sign in using an AWS Builder ID.",
    "start": "144642",
    "end": "149228"
  },
  {
    "text": "Let’s copy the access request code and proceed.",
    "start": "149404",
    "end": "152006"
  },
  {
    "text": "We’ll paste the code and sign \nin using our AWS Builder ID.",
    "start": "154718",
    "end": "158753"
  },
  {
    "text": "We’ll allow CodeWhisperer for \nJupyterLab to access our data.",
    "start": "174562",
    "end": "178000"
  },
  {
    "text": "Now, let’s return to the JupyterLab interface.",
    "start": "179081",
    "end": "181485"
  },
  {
    "text": "The checkmark next to CodeWhisperer indicates that \nwe can begin hands-on coding with CodeWhisperer.",
    "start": "184042",
    "end": "190000"
  },
  {
    "text": "Let’s open a Python file to test some \nof CodeWhisperer’s core functionality.",
    "start": "190926",
    "end": "195496"
  },
  {
    "text": "In this Python file, we’ll use CodeWhisperer \nto create AWS Lambda functions.",
    "start": "196489",
    "end": "201449"
  },
  {
    "text": "First, let’s enter a comment to tell \nCodeWhisperer to create an AWS",
    "start": "202023",
    "end": "205823"
  },
  {
    "text": "Lambda function that retrieves a file from a URL.",
    "start": "205823",
    "end": "209508"
  },
  {
    "text": "CodeWhisperer suggested multiple \nfunctions, which we can cycle through",
    "start": "212176",
    "end": "215948"
  },
  {
    "text": "using the arrow keys on our keyboard.",
    "start": "215949",
    "end": "218195"
  },
  {
    "text": "Let’s accept the first suggestion \nby pressing the Tab key.",
    "start": "219165",
    "end": "222159"
  },
  {
    "text": "We can press Enter to receive \nsuggestions for the rest of this function.",
    "start": "223196",
    "end": "226702"
  },
  {
    "text": "Next, we’ll create a function \nto upload an image to S3.",
    "start": "228003",
    "end": "231817"
  },
  {
    "text": "CodeWhisperer provides us with \nsuggestions that include the API",
    "start": "232435",
    "end": "236259"
  },
  {
    "text": "definition for uploading images to S3, so we don’t \nneed to spend time looking through documentation.",
    "start": "236259",
    "end": "242177"
  },
  {
    "text": "Let’s view some additional examples \nof CodeWhisperer in action.",
    "start": "243522",
    "end": "247083"
  },
  {
    "text": "In this Python file, we can create a function to \nperform a well-known algorithm for binary search.",
    "start": "249641",
    "end": "255153"
  },
  {
    "text": "CodeWhisperer quickly provides relevant \nrecommendations to implement this algorithm.",
    "start": "257776",
    "end": "262274"
  },
  {
    "text": "We’ll accept the suggestions.",
    "start": "262870",
    "end": "264678"
  },
  {
    "text": "Our binary search function is now \ncomplete using an iterative methodology.",
    "start": "266398",
    "end": "270774"
  },
  {
    "text": "We can add more context to our comment to \nspecify the algorithm methodology we want to use.",
    "start": "271435",
    "end": "276992"
  },
  {
    "text": "Next, let’s create a binary search \nalgorithm that uses a recursive search method.",
    "start": "279593",
    "end": "284301"
  },
  {
    "text": "We’ll accept CodeWhisperer’s suggestions.",
    "start": "285315",
    "end": "287817"
  },
  {
    "text": "Next, let’s use CodeWhisperer to create\na function that verifies email addresses",
    "start": "291852",
    "end": "296633"
  },
  {
    "text": "using an imported Regular \nExpression (RegEx) package.",
    "start": "296633",
    "end": "300527"
  },
  {
    "text": "CodeWhisperer recommended code that \nuses the imported RegEx match function,",
    "start": "306062",
    "end": "310890"
  },
  {
    "text": "which saves us from needing to go to a separate RegEx \ntesting website to validate the regular expression.",
    "start": "310890",
    "end": "317020"
  },
  {
    "text": "Next, let's look at an example of how \nwe can provide CodeWhisperer with",
    "start": "317483",
    "end": "321427"
  },
  {
    "text": "additional context to get \nmore relevant code suggestions.",
    "start": "321427",
    "end": "325310"
  },
  {
    "text": "We’ll use the same comment as earlier,",
    "start": "328000",
    "end": "330171"
  },
  {
    "text": "along with some additional code to \nprovide context to CodeWhisperer.",
    "start": "330171",
    "end": "334224"
  },
  {
    "text": "In this case, we imported the Boto3 \nPython package and created an",
    "start": "334599",
    "end": "339052"
  },
  {
    "text": "Amazon Simple Email Service \n(Amazon SES) client in Boto3.",
    "start": "339052",
    "end": "345231"
  },
  {
    "text": "CodeWhisperer accounts for the \nimported Boto3 Python package",
    "start": "346774",
    "end": "350801"
  },
  {
    "text": "and provides a recommendation to use the \nverify_email_identity API from Amazon SES.",
    "start": "350801",
    "end": "357306"
  },
  {
    "text": "This simplifies email validation through an\nAPI call rather than using a RegEx package.",
    "start": "357747",
    "end": "363634"
  },
  {
    "text": "Now let's open a JupyterLab notebook\nto see how we can use CodeWhisperer",
    "start": "365663",
    "end": "369309"
  },
  {
    "text": "for data science and machine \nlearning-related use cases.",
    "start": "369309",
    "end": "372685"
  },
  {
    "text": "We’ll type a comment that tells \nCodeWhisperer to generate some fake user data.",
    "start": "375309",
    "end": "379409"
  },
  {
    "text": "Let’s accept the suggestions for some\nadditional users by pressing the Tab key.",
    "start": "380534",
    "end": "384701"
  },
  {
    "text": "Next, let’s use CodeWhisperer to save \nthis fake user data into a CSV file.",
    "start": "391735",
    "end": "396442"
  },
  {
    "text": "We’ll accept the suggestion.",
    "start": "400234",
    "end": "401800"
  },
  {
    "text": "Next, let’s prompt CodeWhisperer \nto save the file into an S3 bucket.",
    "start": "402814",
    "end": "407334"
  },
  {
    "text": "CodeWhisperer creates suggestions \nthat utilize the best APIs for the job.",
    "start": "409274",
    "end": "414169"
  },
  {
    "text": "In this case, it suggests \nwe import the Boto3 library.",
    "start": "414368",
    "end": "418425"
  },
  {
    "text": "Let’s accept the suggestions.",
    "start": "418668",
    "end": "420530"
  },
  {
    "text": "Now let's create a new Python 3 notebook to \nimplement linear regression using CodeWhisperer.",
    "start": "422095",
    "end": "427244"
  },
  {
    "text": "We’ll begin by typing a comment.",
    "start": "427662",
    "end": "429404"
  },
  {
    "text": "CodeWhisperer suggests the libraries to import.",
    "start": "435000",
    "end": "437926"
  },
  {
    "text": "Next, we’ll add a comment that tells CodeWhisperer \nto read the data.csv file as a pandas dataframe.",
    "start": "439315",
    "end": "445423"
  },
  {
    "text": "Next, we’ll add comments to print the \ndataframe and get more information about it.",
    "start": "446415",
    "end": "450648"
  },
  {
    "text": "Let’s save and execute this code block.",
    "start": "459777",
    "end": "461926"
  },
  {
    "text": "Using our CodeWhisperer-generated code, we can \nsee the data.csv file contains housing information.",
    "start": "470349",
    "end": "476875"
  },
  {
    "text": "Next, let's plot the data on a graph where \nthe x values are from the square feet column,",
    "start": "478066",
    "end": "482883"
  },
  {
    "text": "and the y values are from the price column.",
    "start": "482883",
    "end": "485220"
  },
  {
    "text": "We’ll write comments to get the values,\n and use CodeWhisperer’s suggestions.",
    "start": "485816",
    "end": "490000"
  },
  {
    "text": "We can change the code if \nneeded to match our table data.",
    "start": "492844",
    "end": "495737"
  },
  {
    "text": "In this case, we’ll capitalize “price.”",
    "start": "496002",
    "end": "498626"
  },
  {
    "text": "Next, let’s plot the values.",
    "start": "499618",
    "end": "501404"
  },
  {
    "text": "We’ll label the graph using \nCodeWhisperer’s suggestions.",
    "start": "507071",
    "end": "510000"
  },
  {
    "text": "Let's save and run this code block.",
    "start": "518952",
    "end": "520906"
  },
  {
    "text": "The code generates a scatter plot populated \nwith the pricing and square footage values.",
    "start": "522890",
    "end": "527774"
  },
  {
    "text": "Now let’s create a linear regression \nmodel using the sklearn library.",
    "start": "528986",
    "end": "533110"
  },
  {
    "text": "CodeWhisperer has suggested a function that \nfits the housing data into a linear regression",
    "start": "544818",
    "end": "549419"
  },
  {
    "text": "model and then returns the model.",
    "start": "549419",
    "end": "551871"
  },
  {
    "text": "Let’s accept the suggestion.",
    "start": "552466",
    "end": "554299"
  },
  {
    "text": "Next, we’ll begin writing a \ncomment to call the function.",
    "start": "557320",
    "end": "560139"
  },
  {
    "text": "CodeWhisperer suggests \nthe rest of the comment.",
    "start": "560822",
    "end": "563093"
  },
  {
    "text": "We’ll accept the suggestion.",
    "start": "563292",
    "end": "564791"
  },
  {
    "text": "Finally, let's plot the regression \nline with x and y values.",
    "start": "568473",
    "end": "572431"
  },
  {
    "text": "CodeWhisperer suggests code to plot \nthe linear regression line for our data.",
    "start": "575430",
    "end": "579707"
  },
  {
    "text": "Let's save the notebook and run this code block.",
    "start": "585881",
    "end": "588383"
  },
  {
    "text": "The graph contains the original data points as a \nscatter plot, and now includes the line of best fit.",
    "start": "589221",
    "end": "595410"
  },
  {
    "text": "Now let's create another Python \nnotebook to implement KMeans clustering.",
    "start": "596182",
    "end": "601037"
  },
  {
    "text": "We'll name this notebook kmeans.",
    "start": "603528",
    "end": "605601"
  },
  {
    "text": "Let’s begin by manually importing \nthe libraries we want to use.",
    "start": "609261",
    "end": "613252"
  },
  {
    "text": "CodeWhisperer knows we will need \nmatplotlib to create a scatter plot,",
    "start": "618103",
    "end": "621862"
  },
  {
    "text": "so we‘ll accept the suggestion.",
    "start": "621862",
    "end": "623472"
  },
  {
    "text": "Lastly, we’ll import the KMeans \nmodule from the sklearn library.",
    "start": "625279",
    "end": "629490"
  },
  {
    "text": "We’ll write a comment to load the \ndata.json file into a pandas dataframe.",
    "start": "630615",
    "end": "635000"
  },
  {
    "text": "Next, we'll get information about the dataframe.",
    "start": "638969",
    "end": "641397"
  },
  {
    "text": "Let's run this code block to preview the data.",
    "start": "646887",
    "end": "649334"
  },
  {
    "text": "The columns include data on miles, \npace, heart rate, and elevation.",
    "start": "650392",
    "end": "654420"
  },
  {
    "text": "Let's create a scatter plot to visualize \nthe heart rate and elevation columns.",
    "start": "654596",
    "end": "658825"
  },
  {
    "text": "We’ll accept the suggestions.",
    "start": "675615",
    "end": "677378"
  },
  {
    "text": "Now, let’s execute this code \nblock to generate the scatter plot.",
    "start": "680422",
    "end": "683773"
  },
  {
    "text": "Here is the scatter plot, where heart\nrate is represented on the x-axis,",
    "start": "688932",
    "end": "692857"
  },
  {
    "text": "and the elevation is represented on the y-axis.",
    "start": "692857",
    "end": "695768"
  },
  {
    "text": "Next, we’ll implement KMeans \nclustering to group the data.",
    "start": "696274",
    "end": "700122"
  },
  {
    "text": "First, we'll turn the dataset into a set of coordinates.",
    "start": "702349",
    "end": "705391"
  },
  {
    "text": "By visually inspecting the scatter plot, \nwe can estimate three sets of clusters.",
    "start": "711543",
    "end": "716142"
  },
  {
    "text": "Let's create a kmeans object with three clusters.",
    "start": "716318",
    "end": "719535"
  },
  {
    "text": "We’ll accept CodeWhisperer’s suggestion.",
    "start": "720616",
    "end": "722920"
  },
  {
    "text": "Next, let’s fit the kmeans \nobject to the data coordinates.",
    "start": "727683",
    "end": "731232"
  },
  {
    "text": "CodeWhisperer created some suggestions for us.",
    "start": "732092",
    "end": "734694"
  },
  {
    "text": "The second option includes the next \nstep, which is to get the cluster labels.",
    "start": "735774",
    "end": "739256"
  },
  {
    "text": "We’ll accept this suggestion.",
    "start": "739366",
    "end": "740954"
  },
  {
    "text": "Next, we’ll get the cluster centers and plot them.",
    "start": "745275",
    "end": "747899"
  },
  {
    "text": "Finally, we'll plot the x and y coordinates with labels.",
    "start": "761988",
    "end": "765261"
  },
  {
    "text": "Let's save the notebook and run the code block.",
    "start": "775895",
    "end": "778144"
  },
  {
    "text": "Each cluster is displayed in a unique \ncolor, and the central point of each",
    "start": "779797",
    "end": "783309"
  },
  {
    "text": "cluster is represented with a red dot.",
    "start": "783309",
    "end": "785629"
  },
  {
    "text": "You’ve just seen how to use Amazon \nCodeWhisperer in JupyterLab.",
    "start": "789091",
    "end": "792728"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "793764",
    "end": "797513"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "798020",
    "end": "801275"
  }
]