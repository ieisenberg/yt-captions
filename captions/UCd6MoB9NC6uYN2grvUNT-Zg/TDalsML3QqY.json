[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "as folks are coming in uh I think we'll just get started good afternoon folks first of",
    "start": "3280",
    "end": "9800"
  },
  {
    "text": "all welcome to reinvent I hope you folks are enjoying your time here in Vegas",
    "start": "9800",
    "end": "15199"
  },
  {
    "text": "um my name is Anil Kumar and I'm joined by my colleague Dominic divakaruni we both are product managers",
    "start": "15199",
    "end": "22560"
  },
  {
    "text": "for AWS cloud formation at AWS we are really excited to be here and",
    "start": "22560",
    "end": "28880"
  },
  {
    "start": "26000",
    "end": "115000"
  },
  {
    "text": "together we'll take the next hour and focus more on how and",
    "start": "28880",
    "end": "34160"
  },
  {
    "text": "a little bit on why and what we'll show you how to architect your infrastructure",
    "start": "34160",
    "end": "40360"
  },
  {
    "text": "using AWS cloud formation we'll also show you how to use cloud formation and set up a AWS code",
    "start": "40360",
    "end": "47960"
  },
  {
    "text": "pipeline we'll also show you how to continuously deliver changes to stack as",
    "start": "47960",
    "end": "53039"
  },
  {
    "text": "you make changes to your template we'll show all this using a demo that Dominic",
    "start": "53039",
    "end": "58640"
  },
  {
    "text": "will run through but before doing all this I would like to sorry but before doing all this I",
    "start": "58640",
    "end": "65760"
  },
  {
    "text": "would like to take an opportunity to actually show you some of the software release processes and the phases involved in software release processes",
    "start": "65760",
    "end": "73400"
  },
  {
    "text": "uh mostly enjoyed by mostly enjoyed by our software application delivery folks",
    "start": "73400",
    "end": "79080"
  },
  {
    "text": "and and we'll see how we can take some of those best practices and processes and bring to our infrastructure world",
    "start": "79080",
    "end": "85000"
  },
  {
    "text": "and continuously deliver infrastructure uh if you have any",
    "start": "85000",
    "end": "90240"
  },
  {
    "text": "questions uh we we will take them after our session Dominic and I will hang",
    "start": "90240",
    "end": "95439"
  },
  {
    "text": "around a bit uh after the session so please come and find us if you want to interact with us further you can come",
    "start": "95439",
    "end": "101799"
  },
  {
    "text": "and visit our management tools booth in the Expo",
    "start": "101799",
    "end": "106600"
  },
  {
    "text": "area awesome so kind of let's take a step back and see what are some of the software release",
    "start": "107079",
    "end": "114718"
  },
  {
    "text": "processes at AWS we believe that we have fa four major phases Source build test",
    "start": "114920",
    "end": "121399"
  },
  {
    "start": "115000",
    "end": "180000"
  },
  {
    "text": "and production in the source phase you basically write your code potentially",
    "start": "121399",
    "end": "127000"
  },
  {
    "text": "getting it reviewed and want to keep somewhere in the Version Control tool the next phase is the build phase",
    "start": "127000",
    "end": "133680"
  },
  {
    "text": "depending on your platform you kind of compile your code run some kind of unit tests maybe you're building container",
    "start": "133680",
    "end": "139680"
  },
  {
    "text": "images Etc this is uh typically an important phase in the software application",
    "start": "139680",
    "end": "145599"
  },
  {
    "text": "delivery taking a step further is the testing phase suppose you building your",
    "start": "145599",
    "end": "151239"
  },
  {
    "text": "system that involves a lot of tiers you can integrate all those tiers run integration testing you can run other",
    "start": "151239",
    "end": "157680"
  },
  {
    "text": "kinds of tests load testing UI test testing and penetration testing just to make sure that your system is not",
    "start": "157680",
    "end": "163879"
  },
  {
    "text": "vulnerable to outside attacks and then we have this last phase",
    "start": "163879",
    "end": "169360"
  },
  {
    "text": "uh production where your code is ready to be deployed in a production environment basically you want to get",
    "start": "169360",
    "end": "174959"
  },
  {
    "text": "your application out uh in front of customers",
    "start": "174959",
    "end": "180319"
  },
  {
    "start": "180000",
    "end": "272000"
  },
  {
    "text": "we also think about how you work through these phases in terms of level if you will the one that is most many people",
    "start": "181239",
    "end": "188760"
  },
  {
    "text": "are familiar with is the concept of continuous integration where on every commit your code is going to a central",
    "start": "188760",
    "end": "195200"
  },
  {
    "text": "repository probably getting tested and built depending on the setup that you have taking one step further is the",
    "start": "195200",
    "end": "202239"
  },
  {
    "text": "concept of continuous delivery where you have the idea of your your code is built",
    "start": "202239",
    "end": "207280"
  },
  {
    "text": "and tested and now it's it's ready for deployment it can be deployed in a production server or a pre-production",
    "start": "207280",
    "end": "213840"
  },
  {
    "text": "server or an integration server typically continuous delivery involves uh gating process for the last mile um",
    "start": "213840",
    "end": "221360"
  },
  {
    "text": "before deploying into your code into the production environment um then there is this Con concept of",
    "start": "221360",
    "end": "228920"
  },
  {
    "text": "continuous deployment the moment you check in your code it's getting deployed to a production environment this",
    "start": "228920",
    "end": "234760"
  },
  {
    "text": "continuous deployment doesn't involve any manual or gating process",
    "start": "234760",
    "end": "240799"
  },
  {
    "text": "our Focus uh for today's topic is continuous delivery of infrastructure",
    "start": "240799",
    "end": "246040"
  },
  {
    "text": "now at this point we have seen what are the software release phases and different levels that bind those",
    "start": "246040",
    "end": "251599"
  },
  {
    "text": "different phases now the question for us is definitely we want to take some of",
    "start": "251599",
    "end": "257560"
  },
  {
    "text": "the concepts from software application world and bring to our infrastructure world uh the big question at this point",
    "start": "257560",
    "end": "264320"
  },
  {
    "text": "is okay what are some of the tools or processes that we can actually use to implement continuous delivery for",
    "start": "264320",
    "end": "272000"
  },
  {
    "start": "272000",
    "end": "291000"
  },
  {
    "text": "infrastructure there are actually three things you can start with the first one",
    "start": "272160",
    "end": "278120"
  },
  {
    "text": "is you have to treat your infrastructure as code I'm sure many of you are already familiar with cloud formation and many",
    "start": "278120",
    "end": "284080"
  },
  {
    "text": "of you are already using cloud formation but this is one of the most crucial steps you have to start treating your",
    "start": "284080",
    "end": "289560"
  },
  {
    "text": "infrastructure as code the second thing that you want to do is to find a tool that can manage the",
    "start": "289560",
    "end": "296160"
  },
  {
    "start": "291000",
    "end": "331000"
  },
  {
    "text": "workflow that can bind all the different release phases that that we have seen",
    "start": "296160",
    "end": "303000"
  },
  {
    "text": "earlier and lastly you need to find a tool or a feature that can be part of a of the service infrastructure as code",
    "start": "303000",
    "end": "309680"
  },
  {
    "text": "service or part of the workflow that can actually conduct some kind of test or inspect your changes before you roll out",
    "start": "309680",
    "end": "315880"
  },
  {
    "text": "your stuff into production uh in few minutes Dominic will show you actually how you can use a cloud formation feature to preview",
    "start": "315880",
    "end": "322600"
  },
  {
    "text": "changes before rolling out those changes into production so these things are at very",
    "start": "322600",
    "end": "329120"
  },
  {
    "text": "high level let's distill this further you definitely need infrastructure as code the moment you have a codified",
    "start": "329120",
    "end": "336080"
  },
  {
    "start": "331000",
    "end": "363000"
  },
  {
    "text": "format you enjoy several benefits the first one is you can version it you can",
    "start": "336080",
    "end": "341120"
  },
  {
    "text": "second one is you can share it with your colleagues for review third one is you can keep it a you can actually share",
    "start": "341120",
    "end": "348560"
  },
  {
    "text": "with your folks uh that can they can reuse to replicate environments and the second one is you",
    "start": "348560",
    "end": "355319"
  },
  {
    "text": "need a workflow so that on every commit your code is getting built test and",
    "start": "355319",
    "end": "361840"
  },
  {
    "start": "363000",
    "end": "433000"
  },
  {
    "text": "deployed you can do all this thing using these two AWS Services a AWS cloud",
    "start": "364120",
    "end": "370560"
  },
  {
    "text": "formation our infrastructure at code service and our workflow service AWS code PIP",
    "start": "370560",
    "end": "377680"
  },
  {
    "text": "plan I'm sure you folks are kind of familiar with AWS cloud formation but let's let's take a moment and talk uh",
    "start": "380080",
    "end": "387479"
  },
  {
    "text": "about AWS cloud formation so this is our infrastructure ased code service in a declarative fashion you can declare",
    "start": "387479",
    "end": "394160"
  },
  {
    "text": "whatever you want in in a Json format or a yaml format and cloud formation will take care of the provisioning and",
    "start": "394160",
    "end": "400240"
  },
  {
    "text": "configuring part furthermore cloud formation will also take care of the dependency needs and the execution order",
    "start": "400240",
    "end": "406199"
  },
  {
    "text": "of those resources so you don't have to worry about those resources now now these things are in qualified format you",
    "start": "406199",
    "end": "412720"
  },
  {
    "text": "enjoy several benefits you can Version Control it you can incrementally update those uh Source codes you can share with",
    "start": "412720",
    "end": "418280"
  },
  {
    "text": "your colleagues for review cloud formation also integrates with",
    "start": "418280",
    "end": "423840"
  },
  {
    "text": "development other cicd and development tools including AWS code Pipeline and of",
    "start": "423840",
    "end": "429560"
  },
  {
    "text": "course you don't pay uh for using AWS cloud",
    "start": "429560",
    "end": "434160"
  },
  {
    "start": "433000",
    "end": "452000"
  },
  {
    "text": "formation so this year we released some of the key features I would like take uh would like to take an opportunity to run",
    "start": "436120",
    "end": "442479"
  },
  {
    "text": "through these key features that's kind of uh beneficial for you to uh recap these features so that uh Dominic uh",
    "start": "442479",
    "end": "449520"
  },
  {
    "text": "will have an easy time explaining you folks the first one is the authoring we we are on a mission to improve the",
    "start": "449520",
    "end": "455879"
  },
  {
    "start": "452000",
    "end": "467000"
  },
  {
    "text": "authoring experience in cloud formation so one of the crucial things that we did is uh provide you another option for",
    "start": "455879",
    "end": "463199"
  },
  {
    "text": "authoring that is yaml I'll talk in a bit about these things the second was ability to preview",
    "start": "463199",
    "end": "470080"
  },
  {
    "start": "467000",
    "end": "494000"
  },
  {
    "text": "changes before you actually deploy your changes we launched um earlier this year we launched a feature called chain",
    "start": "470080",
    "end": "477840"
  },
  {
    "text": "sets couple of months ago we launched a feature called cross stack references it allows you to flow your configuration",
    "start": "477840",
    "end": "484479"
  },
  {
    "text": "value from one independent stack to another independent stack without uh worrying about nesting or without",
    "start": "484479",
    "end": "490680"
  },
  {
    "text": "writing custom resources we natively integrated with",
    "start": "490680",
    "end": "496479"
  },
  {
    "start": "494000",
    "end": "592000"
  },
  {
    "text": "AWS code pipeline so that you can uh enable continuous delivery workflows for your",
    "start": "496479",
    "end": "502960"
  },
  {
    "text": "infrastructure and lastly we kind of built a new abstraction called transforms using this transform you can",
    "start": "502960",
    "end": "509680"
  },
  {
    "text": "model architect and model your serverless uh uh systems using AWS cloud",
    "start": "509680",
    "end": "515760"
  },
  {
    "text": "formation last piece is little bit out of scope for this session uh Dominic will talk a bit about continuous",
    "start": "515760",
    "end": "522399"
  },
  {
    "text": "delivery I'll just touch upon the first three ones so you got a lot of feedback from",
    "start": "522399",
    "end": "527680"
  },
  {
    "text": "our customers uh how we can further improve the offering experience we launched support for yaml version",
    "start": "527680",
    "end": "535560"
  },
  {
    "text": "1.1 as you can see yaml uh is more concise and readable uh with a lot less",
    "start": "536680",
    "end": "541959"
  },
  {
    "text": "punctuation compared to Json it allows you to add common blocks so that uh your code becomes a little bit more",
    "start": "541959",
    "end": "547920"
  },
  {
    "text": "maintainable and lastly whatever we support in Json is supported in yaml so",
    "start": "547920",
    "end": "553200"
  },
  {
    "text": "you do not have to uh worry much it's totally up to you uh depending on your preference whether you want to use Json",
    "start": "553200",
    "end": "559240"
  },
  {
    "text": "or yaml apart from supporting plain Pila",
    "start": "559240",
    "end": "565399"
  },
  {
    "text": "yaml we actually did two more things we introduced something called",
    "start": "565399",
    "end": "570760"
  },
  {
    "text": "Shand notation so that you can express all the cloud formation intrinsic functions in yaml in a much more concise",
    "start": "570760",
    "end": "576760"
  },
  {
    "text": "way and readable way second we launched a new intrinsic function called FN sub",
    "start": "576760",
    "end": "582680"
  },
  {
    "text": "using FN sub you can actually do basic string interpolation within the template so FN sub will let you substitute values",
    "start": "582680",
    "end": "589680"
  },
  {
    "text": "in a variable within the template let's take an example to recap",
    "start": "589680",
    "end": "595920"
  },
  {
    "text": "all this so this is an arbitrary user data that you would write in a Json",
    "start": "595920",
    "end": "603839"
  },
  {
    "text": "template the same thing you can express in yaml using all the",
    "start": "603839",
    "end": "609959"
  },
  {
    "text": "enhancements like this as you can see the code is much",
    "start": "612079",
    "end": "618240"
  },
  {
    "text": "more concise you can use FN sub to actually replace value for the pseudo",
    "start": "618240",
    "end": "623680"
  },
  {
    "text": "parameter in this case you can also use the shorthand notation to express base 64 intrinsic function function so as you",
    "start": "623680",
    "end": "630240"
  },
  {
    "text": "can see it's much more concise and much more",
    "start": "630240",
    "end": "634360"
  },
  {
    "start": "633000",
    "end": "706000"
  },
  {
    "text": "readable customers were asking for a feature that would allow them to do preview of changes before actually",
    "start": "635800",
    "end": "642320"
  },
  {
    "text": "executing the changes we launched a fe feature called chain sets earlier this year chain sets allows you to preview uh",
    "start": "642320",
    "end": "649360"
  },
  {
    "text": "steps cloud formation would take when you're updating a stack or creating a stack I'm showing you a basic workflow",
    "start": "649360",
    "end": "655720"
  },
  {
    "text": "of updating a stack including chain sets so you start with your original stack and suppose you want to update this",
    "start": "655720",
    "end": "661639"
  },
  {
    "text": "original stack so you update your template you use this updated template to create",
    "start": "661639",
    "end": "667360"
  },
  {
    "text": "chain sets chain sets will be generated and will present you blow-by-blow information of what is going to be",
    "start": "667360",
    "end": "673800"
  },
  {
    "text": "created what is going to be modified and what is going to be deleted depending on",
    "start": "673800",
    "end": "678920"
  },
  {
    "text": "the contents of chain sets you can make sure that those changes are in line with your",
    "start": "678920",
    "end": "684000"
  },
  {
    "text": "expectation and if you happy about your chain set the contents of the chain set you can go go ahead and execute the",
    "start": "684000",
    "end": "690279"
  },
  {
    "text": "chain set this will help you update the cloud peration",
    "start": "690279",
    "end": "695480"
  },
  {
    "text": "stack so again chains sets show you what resources will be created updated or",
    "start": "695480",
    "end": "701000"
  },
  {
    "text": "replaced when you're trying to update your stack or create your",
    "start": "701000",
    "end": "705880"
  },
  {
    "start": "706000",
    "end": "760000"
  },
  {
    "text": "stack we launched a feature called cross stack references allows you to share information between independent Stacks",
    "start": "706720",
    "end": "713680"
  },
  {
    "text": "you can flow your configuration value from one stack to another so basically you suppose you have a stack you can",
    "start": "713680",
    "end": "720399"
  },
  {
    "text": "support uh I'll give you example here that will be much more easier to understand you start with a network stack suppose you want to convey this",
    "start": "720399",
    "end": "727440"
  },
  {
    "text": "VPC information you want to relay this VPC information you can use the syntax export colon Name colon prod VPC you can",
    "start": "727440",
    "end": "734920"
  },
  {
    "text": "export uh this particular information and you have abstack that would like to",
    "start": "734920",
    "end": "740079"
  },
  {
    "text": "consume this piece of information you can use import value intrinsic function to consume this",
    "start": "740079",
    "end": "746920"
  },
  {
    "text": "information so as you can see it's it's much more you know concise and neat way to export values uh from one stack one",
    "start": "746920",
    "end": "754600"
  },
  {
    "text": "invent stack to another without writing any custom resources",
    "start": "754600",
    "end": "760040"
  },
  {
    "text": "Etc now since we are on the topic of cross stack references I would like to touch upon the concept of nested Stacks",
    "start": "760639",
    "end": "768760"
  },
  {
    "text": "actually it's not a new feature launched couple of years ago um lot of customers",
    "start": "768760",
    "end": "774079"
  },
  {
    "text": "are using nested Stacks to enable modularity so so the concept is you start with your parent stack suppose",
    "start": "774079",
    "end": "780320"
  },
  {
    "text": "application stack is your parent stack and using the resource type AWS colon colon Cloud information colon colon",
    "start": "780320",
    "end": "786160"
  },
  {
    "text": "stack you can have your child Stacks in this case network resources and ECS service suppose you don't want to have",
    "start": "786160",
    "end": "793040"
  },
  {
    "text": "everything in one template but you would like to have one stack so you can use this concept to break your template into",
    "start": "793040",
    "end": "799440"
  },
  {
    "text": "multiple pieces and still manage it as one stack so it enables uh it improves",
    "start": "799440",
    "end": "805160"
  },
  {
    "text": "composability and reuse of templates so after launching cross stack",
    "start": "805160",
    "end": "811079"
  },
  {
    "start": "808000",
    "end": "864000"
  },
  {
    "text": "references we were getting a lot of uh questions from our customers that okay um what should I use this is the",
    "start": "811079",
    "end": "816279"
  },
  {
    "text": "scenario should I use Nest tack or should I should I use cross tack references I would like to point out at",
    "start": "816279",
    "end": "821680"
  },
  {
    "text": "this point is that it's important to remember that these are not Alternatives um of one another you can use uh either",
    "start": "821680",
    "end": "828959"
  },
  {
    "text": "neest Stacks or cross stack references or you can have hybrid of both the features totally depends on your architecture how Loosely coupled you",
    "start": "828959",
    "end": "835680"
  },
  {
    "text": "want uh it to be how tightly linked or tightly coupled you want it to be so we",
    "start": "835680",
    "end": "841639"
  },
  {
    "text": "thought we'll we share some of the recommended use cases um advantages and considerations of uh considerations",
    "start": "841639",
    "end": "847800"
  },
  {
    "text": "related to using nested stack and cross stack reference it'll see where uh these feature fits in your",
    "start": "847800",
    "end": "854519"
  },
  {
    "text": "scenario definitely if you want to reuse your template you don't want to put everything in one template you want to break it up uh it's a it's a good uh",
    "start": "854519",
    "end": "861720"
  },
  {
    "text": "feature to use kind of convenient uh to manage you",
    "start": "861720",
    "end": "867279"
  },
  {
    "start": "864000",
    "end": "880000"
  },
  {
    "text": "want to have only one stack uh um so it's kind of convenient uh in that way and and it also uh that cloud formation",
    "start": "867279",
    "end": "874639"
  },
  {
    "text": "takes care of all the dependencies and creation order of these Stacks",
    "start": "874639",
    "end": "879959"
  },
  {
    "text": "involved uh couple of considerations here um the moment you use nested stack",
    "start": "879959",
    "end": "886160"
  },
  {
    "start": "880000",
    "end": "935000"
  },
  {
    "text": "you you kind of increased your roll back surface area and even update surface area so so if you have a child stack and",
    "start": "886160",
    "end": "893480"
  },
  {
    "text": "you kind of uh feeling the Tremors of roll back then it can U flow into your other Stacks parents stack so you have",
    "start": "893480",
    "end": "900360"
  },
  {
    "text": "to understand before using nesting that the roll back surface area is wider in this",
    "start": "900360",
    "end": "906639"
  },
  {
    "text": "case so so in case if you have a system that requires a lot of updates then you",
    "start": "907040",
    "end": "912279"
  },
  {
    "text": "have to reconsider whether you want to use nested Sack or cross stack references and of course if you are",
    "start": "912279",
    "end": "917800"
  },
  {
    "text": "thinking of reusing template you have to make sure that all those uh child templates are kind of module in nature",
    "start": "917800",
    "end": "924360"
  },
  {
    "text": "kind of generic in nature that can be used across other systems if you C cize",
    "start": "924360",
    "end": "929399"
  },
  {
    "text": "it then you will only use for one system the the the whole concept of reusability uh might be",
    "start": "929399",
    "end": "935279"
  },
  {
    "start": "935000",
    "end": "1087000"
  },
  {
    "text": "missed in case of cross stack references um you can use it to share common",
    "start": "935279",
    "end": "941160"
  },
  {
    "text": "resources as we saw in the previous example you want to flow your VPC information and you have your abstack",
    "start": "941160",
    "end": "947560"
  },
  {
    "text": "that consumes that VPC information if you have that kind of use case scenario cross stack references is a very good",
    "start": "947560",
    "end": "954040"
  },
  {
    "text": "place uh to start with uh you can also observe separation of concerns and separation of",
    "start": "954040",
    "end": "960319"
  },
  {
    "text": "responsibility U using cross stack references Network folks are taking care of network stack app folks are taking",
    "start": "960319",
    "end": "965920"
  },
  {
    "text": "care of application stack uh the biggest Advantage is that you when you start",
    "start": "965920",
    "end": "971519"
  },
  {
    "text": "using cross you are kind of limiting your blast radius uh from rback standpoint even from update standpoint",
    "start": "971519",
    "end": "977120"
  },
  {
    "text": "so you you have these independent stack if uh if you if you have a stack that is in a roll back situation then it's just",
    "start": "977120",
    "end": "983680"
  },
  {
    "text": "only that stack it's not there's is no concept of parent stack or roll back flowing to your parents stack",
    "start": "983680",
    "end": "990920"
  },
  {
    "text": "couple of things to consider uh you have to actually take care of some kind of a",
    "start": "993319",
    "end": "998440"
  },
  {
    "text": "um creation order you have to create you have to export the value before that value starts to get consumed so that",
    "start": "998440",
    "end": "1005360"
  },
  {
    "text": "thing you have to take care of the other thing is that U if you you you cannot",
    "start": "1005360",
    "end": "1010440"
  },
  {
    "text": "delete a stack that is exporting values and that values are getting consumed somewhere through import so you have to",
    "start": "1010440",
    "end": "1017360"
  },
  {
    "text": "make sure that uh before deleting that all the references are deleted rather",
    "start": "1017360",
    "end": "1023040"
  },
  {
    "text": "and then you can go ahead and delete so these are the things that you have to take uh into consideration before choosing nested stack or cross stacker",
    "start": "1023040",
    "end": "1029640"
  },
  {
    "text": "and I'm sure when you're designing your new system you will be at a point uh where you have to decide whether you",
    "start": "1029640",
    "end": "1034880"
  },
  {
    "text": "want to go for nest stack or cross stack references so feel free to dive deep and and understand uh the benefits um and",
    "start": "1034880",
    "end": "1041880"
  },
  {
    "text": "the considerations that you would like to um carry it couple of things I would like to",
    "start": "1041880",
    "end": "1049000"
  },
  {
    "text": "highlight here uh cross",
    "start": "1049000",
    "end": "1053120"
  },
  {
    "text": "um you can uh see all the values that are getting exported on Console now we",
    "start": "1059919",
    "end": "1065160"
  },
  {
    "text": "have enabled that functionality uh you can use API and CLI also to uh see what is getting exported we'll also launch in",
    "start": "1065160",
    "end": "1072320"
  },
  {
    "text": "a couple of days a feature where you can see what are what are the stacks and which are the stacks importing values so",
    "start": "1072320",
    "end": "1078000"
  },
  {
    "text": "you'll have that nice mapping so so that information will provide you a lot of visibility into what you can delete what",
    "start": "1078000",
    "end": "1084919"
  },
  {
    "text": "you cannot at this point I would like to invite Dominic uh he will take you",
    "start": "1084919",
    "end": "1090520"
  },
  {
    "start": "1087000",
    "end": "1117000"
  },
  {
    "text": "through from this point hello folks hope you're having a",
    "start": "1090520",
    "end": "1095960"
  },
  {
    "text": "good day so far let's um apply some of uh what we",
    "start": "1095960",
    "end": "1101559"
  },
  {
    "text": "talked about in the way of continuous delivery and the importance of infrastructures code and and uh needing",
    "start": "1101559",
    "end": "1109640"
  },
  {
    "text": "a platform to manage your workflow and let's examine a use case and how you",
    "start": "1109640",
    "end": "1115080"
  },
  {
    "text": "would apply both of those things let's look at a sample",
    "start": "1115080",
    "end": "1120760"
  },
  {
    "start": "1117000",
    "end": "1226000"
  },
  {
    "text": "application uh what we're going to look at is a microservices based application uh let's deconstruct the application",
    "start": "1120760",
    "end": "1127440"
  },
  {
    "text": "into the necessary AWS resources or cloud formations AWS resource",
    "start": "1127440",
    "end": "1133280"
  },
  {
    "text": "types let's create Cloud information templates based on your management needs based on on how you would like to group",
    "start": "1133280",
    "end": "1140880"
  },
  {
    "text": "resources how you'd like to reuse templates and um and if different teams",
    "start": "1140880",
    "end": "1146600"
  },
  {
    "text": "are going to manage these templates you you may decide you want nested Stacks as opposed to cross stack references if the",
    "start": "1146600",
    "end": "1153200"
  },
  {
    "text": "application is managed entirely by one group versus a couple um so we'll look",
    "start": "1153200",
    "end": "1158520"
  },
  {
    "text": "at some of that let's then look at modeling your continuous delivery pipeline uh for your",
    "start": "1158520",
    "end": "1167600"
  },
  {
    "text": "application uh the different stages of the pipeline and how you would like to",
    "start": "1167600",
    "end": "1173120"
  },
  {
    "text": "um how how you would like your changes as you iterate on changes to infrastructure how would you like that",
    "start": "1173120",
    "end": "1179880"
  },
  {
    "text": "to flow into your various",
    "start": "1179880",
    "end": "1183240"
  },
  {
    "text": "environment and then lastly you can use you can codify your workflow you can codify the",
    "start": "1185440",
    "end": "1195000"
  },
  {
    "text": "way you set up your pipeline the way you set up your stages all all cloud formation so essentially you can use",
    "start": "1195000",
    "end": "1200880"
  },
  {
    "text": "cloud formation to set up your continuous delivery pipeline that manages the roll out of your",
    "start": "1200880",
    "end": "1206440"
  },
  {
    "text": "applications and your infrastructure so let's kind of look at all of those",
    "start": "1206440",
    "end": "1212039"
  },
  {
    "text": "together the application we've choose we've chosen to um to talk about is uh",
    "start": "1212440",
    "end": "1218440"
  },
  {
    "text": "is available at GitHub at um AWS laabs at ec. graph.",
    "start": "1218440",
    "end": "1226120"
  },
  {
    "start": "1226000",
    "end": "1256000"
  },
  {
    "text": "cloudformation it consists of two interconnecting microservices deployed as ECS Services a very simple app a a",
    "start": "1226120",
    "end": "1233919"
  },
  {
    "text": "front end service and a backend service the application runs on a highly",
    "start": "1233919",
    "end": "1240240"
  },
  {
    "text": "available ECS cluster uh deployed across availability zones with",
    "start": "1240240",
    "end": "1246360"
  },
  {
    "text": "autoscaling so it's it's a nice package of of different AWS services and and",
    "start": "1246360",
    "end": "1251799"
  },
  {
    "text": "let's let's look at that architecture and look at deconstructing it here's kind of a reference archit",
    "start": "1251799",
    "end": "1259120"
  },
  {
    "start": "1256000",
    "end": "1339000"
  },
  {
    "text": "Ure it's a a VPC across one region uh deployed with public and",
    "start": "1259120",
    "end": "1266400"
  },
  {
    "text": "private subnets deployed in separate availability zones you have a highly",
    "start": "1266400",
    "end": "1271799"
  },
  {
    "text": "available ECS cluster uh managed by an autoscaling group an application load balancer to",
    "start": "1271799",
    "end": "1279360"
  },
  {
    "text": "serve up incoming traffic to your ECS host the application load balancer",
    "start": "1279360",
    "end": "1285720"
  },
  {
    "text": "path-based routes for each ECS service the front end and the backend",
    "start": "1285720",
    "end": "1291559"
  },
  {
    "text": "service and you have Knack gateways and an internet gateway to serve outbound",
    "start": "1291559",
    "end": "1297400"
  },
  {
    "text": "traffic from your ECS host to your internet gateway this is a um this is a very",
    "start": "1297400",
    "end": "1304720"
  },
  {
    "text": "handy um reference architecture that's on git and um we're going to we're going",
    "start": "1304720",
    "end": "1310480"
  },
  {
    "text": "to use this to study there's there's templates uh on git that um show you",
    "start": "1310480",
    "end": "1316159"
  },
  {
    "text": "this applicationa framework um in a in a nested Stacks approach we'll",
    "start": "1316159",
    "end": "1322159"
  },
  {
    "text": "take a slightly different approach here and look at how you construct this via cross stack references and then deploy",
    "start": "1322159",
    "end": "1328440"
  },
  {
    "text": "that into your pipeline one last thing that I missed is",
    "start": "1328440",
    "end": "1333600"
  },
  {
    "text": "um there are cloudwatch logs to uh for centralized container",
    "start": "1333600",
    "end": "1340039"
  },
  {
    "start": "1339000",
    "end": "1456000"
  },
  {
    "text": "logging let's look at decomposing this into the AWS resources we looked at the high level architecture now what is this",
    "start": "1340039",
    "end": "1346000"
  },
  {
    "text": "what is this made up of what is this composed of right so in in your network you",
    "start": "1346000",
    "end": "1352200"
  },
  {
    "text": "have now this breaks down into a ton of uh AWS resource types for cloud",
    "start": "1352200",
    "end": "1357960"
  },
  {
    "text": "information right you have a VPC you have a pair of public and private",
    "start": "1357960",
    "end": "1364279"
  },
  {
    "text": "subnets um you have in your private subnets you have a private route table and a default route uh that that have an",
    "start": "1364279",
    "end": "1372000"
  },
  {
    "text": "association to tie them together in your public subnets you have your Knack Gateway and um elastic",
    "start": "1372000",
    "end": "1379600"
  },
  {
    "text": "IPS and you have internet gateways as well for your security element we've",
    "start": "1379600",
    "end": "1387360"
  },
  {
    "text": "defined two security groups one to handle um the logic for inbound traffic",
    "start": "1387360",
    "end": "1396400"
  },
  {
    "text": "to the ECS host or rather outbound traffic from the ECS host and want to",
    "start": "1396400",
    "end": "1401480"
  },
  {
    "text": "handle inbound traffic from to the load balancer you'll also need a load",
    "start": "1401480",
    "end": "1407799"
  },
  {
    "text": "balancer in this in case we picked an application load balancer a listener and the default Target group that's",
    "start": "1407799",
    "end": "1414520"
  },
  {
    "text": "necessary you'll need your ECS cluster itself with autoscaling um I think the the original",
    "start": "1414520",
    "end": "1421840"
  },
  {
    "text": "templates use about uh four host in your ECS cluster we can as we look at the",
    "start": "1421840",
    "end": "1428720"
  },
  {
    "text": "workflow we can look to change those number of hosts and uh and see how that flows through your pipeline it also",
    "start": "1428720",
    "end": "1434919"
  },
  {
    "text": "consists of a front- end service um that handles web traffic and a back-end",
    "start": "1434919",
    "end": "1440279"
  },
  {
    "text": "service that uh performs the computations each of the front- end and",
    "start": "1440279",
    "end": "1446000"
  },
  {
    "text": "backend service has a task definition and a Target group and and the role um to register and",
    "start": "1446000",
    "end": "1452240"
  },
  {
    "text": "deregister um the tasks know breaking this down into",
    "start": "1452240",
    "end": "1459039"
  },
  {
    "start": "1456000",
    "end": "1483000"
  },
  {
    "text": "separate Cloud information templates you'll have a a network template like you saw on the left there with all your",
    "start": "1459039",
    "end": "1465000"
  },
  {
    "text": "networking resources you'll have a security group template for your security groups so that can be managed independently you'll have your load",
    "start": "1465000",
    "end": "1471200"
  },
  {
    "text": "balancers in um in its own template your ECS cluster and your fun and backend",
    "start": "1471200",
    "end": "1477760"
  },
  {
    "text": "service nice modular separation so they can be they can be managed",
    "start": "1477760",
    "end": "1483600"
  },
  {
    "text": "independently you'll need to set up your templates to flow configuration to one another so",
    "start": "1484559",
    "end": "1490320"
  },
  {
    "text": "your um your ECS components your load balancer can be deployed in your uh into",
    "start": "1490320",
    "end": "1497120"
  },
  {
    "text": "your VPC so essentially you have six templates that we talked",
    "start": "1497120",
    "end": "1502679"
  },
  {
    "text": "about um what you will need to flow configuration between one another is",
    "start": "1502679",
    "end": "1507840"
  },
  {
    "text": "outputs from each template you'll need a VPC that's that's",
    "start": "1507840",
    "end": "1512880"
  },
  {
    "text": "part of an output of the first template and all the other templates will refer to that VPC ID so you'll need the VPC",
    "start": "1512880",
    "end": "1520440"
  },
  {
    "text": "you'll need public subnets and the load balancer is created and deployed into",
    "start": "1520440",
    "end": "1526320"
  },
  {
    "text": "the public subnet so it will the load balancing template will need that value you'll need private subnets where",
    "start": "1526320",
    "end": "1534000"
  },
  {
    "text": "your ECS hosts are deployed private subnets will need the value of I'm sorry the ECS cluster will need the value of",
    "start": "1534000",
    "end": "1541600"
  },
  {
    "text": "the private subnets themselves your your security",
    "start": "1541600",
    "end": "1548679"
  },
  {
    "text": "groups load load balancer listener is is needed by the front end template and uh",
    "start": "1549880",
    "end": "1556480"
  },
  {
    "text": "the DNS name for the back end template so let's let's look at how you",
    "start": "1556480",
    "end": "1562279"
  },
  {
    "start": "1560000",
    "end": "1660000"
  },
  {
    "text": "would potentially structure all of this you can lump everything into one template you can create one one gigantic",
    "start": "1562279",
    "end": "1567480"
  },
  {
    "text": "stack but that tends to be a little bit of a management nightmare so you'd want to either use nested Stacks where you",
    "start": "1567480",
    "end": "1574440"
  },
  {
    "text": "structure one parent template and uh as Anil pointed out use the AWS colon colon",
    "start": "1574440",
    "end": "1581360"
  },
  {
    "text": "cloud formation colon colon stack resource type and um State each one of",
    "start": "1581360",
    "end": "1586440"
  },
  {
    "text": "these templates the networks security load balancing cluster Etc as subtemplates and create one microservice",
    "start": "1586440",
    "end": "1593840"
  },
  {
    "text": "stack it's important to to handle a parent stack in and all of it",
    "start": "1593840",
    "end": "1599440"
  },
  {
    "text": "neted Stacks as one grouped component and not treat them individually uh you'll want to manage updates at that",
    "start": "1599440",
    "end": "1605960"
  },
  {
    "text": "parent level so what nested tax allow you allows you to do is have modularity",
    "start": "1605960",
    "end": "1611080"
  },
  {
    "text": "and separate your templates but yet at treat the whole thing as one",
    "start": "1611080",
    "end": "1617240"
  },
  {
    "text": "application or you could use cross stack references you could create individual",
    "start": "1617240",
    "end": "1624320"
  },
  {
    "text": "stacks and then export values and use the function import value to import um",
    "start": "1624320",
    "end": "1630840"
  },
  {
    "text": "to flow that configuration between those templates like you saw on the slide",
    "start": "1630840",
    "end": "1636440"
  },
  {
    "text": "before the the difference with cross stack references is that you'll need to manage the dependency of the the",
    "start": "1636440",
    "end": "1643799"
  },
  {
    "text": "creation order and the dependency of how these are these are created with a pipeline that setup really that",
    "start": "1643799",
    "end": "1650760"
  },
  {
    "text": "that setup is much much simpler because you can you can set up your pipeline to",
    "start": "1650760",
    "end": "1656200"
  },
  {
    "text": "um provision your Stacks in order and and the order in which they're created let's look at applying continuous",
    "start": "1656200",
    "end": "1662640"
  },
  {
    "start": "1660000",
    "end": "1691000"
  },
  {
    "text": "delivery uh to this setup let's look at modeling a pipeline for this this",
    "start": "1662640",
    "end": "1668240"
  },
  {
    "text": "application now this is just a sample uh this all this will all be posted on our docs page and and feel free to to work",
    "start": "1668240",
    "end": "1675399"
  },
  {
    "text": "off this sample you can automate the P out of your infrastructure as you iterate on various components of your",
    "start": "1675399",
    "end": "1682320"
  },
  {
    "text": "application various components of infrastructure that supports your application your pipeline will trigger",
    "start": "1682320",
    "end": "1687600"
  },
  {
    "text": "deployments and push changes through the various stages what we",
    "start": "1687600",
    "end": "1693600"
  },
  {
    "start": "1691000",
    "end": "1752000"
  },
  {
    "text": "have to enable the workflow and flowing of infrastructure as code through the",
    "start": "1693600",
    "end": "1699640"
  },
  {
    "text": "various stages is code pipeline Cloud information launched a recent integration with code",
    "start": "1699640",
    "end": "1706080"
  },
  {
    "text": "pipeline code pipeline line itself enables continuous delivery for fast and",
    "start": "1706519",
    "end": "1712519"
  },
  {
    "text": "reliable application and infrastructure updates code pipeline builds tests and",
    "start": "1712519",
    "end": "1719679"
  },
  {
    "text": "deploys your code each time there is a code change based on release processes you",
    "start": "1719679",
    "end": "1726360"
  },
  {
    "text": "define we've added built-in actions into code pipeline to deploy Cloud",
    "start": "1726360",
    "end": "1731519"
  },
  {
    "text": "information Stacks to update Stacks delete stacks and also use change",
    "start": "1731519",
    "end": "1736799"
  },
  {
    "text": "sets so we'll take a look at that this is this is a really neat",
    "start": "1736799",
    "end": "1742279"
  },
  {
    "text": "integration that that allows you to manage your workflow as code and then",
    "start": "1742279",
    "end": "1750000"
  },
  {
    "text": "flow changes through your pipeline let's look at let's take a step",
    "start": "1750000",
    "end": "1755760"
  },
  {
    "text": "back look at how this aligns the release phases Anil talked about the source phase The Source um phase the build test",
    "start": "1755760",
    "end": "1763760"
  },
  {
    "text": "and deploy with cloud formation in code pipeline you have have really Source",
    "start": "1763760",
    "end": "1769279"
  },
  {
    "text": "test and deploy and the way we're looking at this is you have your templates in S3 git or uh code",
    "start": "1769279",
    "end": "1778559"
  },
  {
    "text": "commit and you check in templates as you make changes to them you use cloud",
    "start": "1778559",
    "end": "1783840"
  },
  {
    "text": "formation to verify what impacts those changes are",
    "start": "1783840",
    "end": "1789279"
  },
  {
    "text": "going to have as they go through your various uh stages using change sets and",
    "start": "1789279",
    "end": "1794960"
  },
  {
    "text": "finally you deploy those changes either using just creating a stack updating a stack or using change sets to verify",
    "start": "1794960",
    "end": "1802399"
  },
  {
    "text": "those changes before you make them let's look at I I took a shot of",
    "start": "1802399",
    "end": "1810000"
  },
  {
    "start": "1805000",
    "end": "1949000"
  },
  {
    "text": "modeling a pipeline that um that customers typically have in their",
    "start": "1810000",
    "end": "1815080"
  },
  {
    "text": "environment right so in in a lot of customer conversations we've heard hey",
    "start": "1815080",
    "end": "1820120"
  },
  {
    "text": "Network Team sets standards and manages the networking components the application teams then use those",
    "start": "1820120",
    "end": "1826200"
  },
  {
    "text": "networking components and deploys into those VPS PES Etc that may not be the case for everybody but uh We've set up",
    "start": "1826200",
    "end": "1833080"
  },
  {
    "text": "I've taken that um uh that kind of approach to modeling two separate",
    "start": "1833080",
    "end": "1839000"
  },
  {
    "text": "pipelines one's a network resource pipeline that can be managed at its own Cadence um and uh in within this",
    "start": "1839000",
    "end": "1847200"
  },
  {
    "text": "pipeline I've set up a Sandbox environment and a production environment both with its own VPC Security Group and",
    "start": "1847200",
    "end": "1854200"
  },
  {
    "text": "and load balancing so applications can be deployed in each envir enironment",
    "start": "1854200",
    "end": "1860200"
  },
  {
    "text": "separately also model an application pipeline slightly different but here it",
    "start": "1860200",
    "end": "1865279"
  },
  {
    "text": "allows you to iterate on your application code more often separate than your networking components you may",
    "start": "1865279",
    "end": "1870519"
  },
  {
    "text": "want to make changes very rarely to your networking uh to your networking setup you want your application pipeline to",
    "start": "1870519",
    "end": "1875600"
  },
  {
    "text": "trigger more often so you set up set that up as a separate Pipeline with Dev and",
    "start": "1875600",
    "end": "1881559"
  },
  {
    "text": "production um a little bit of an ey chart but I'll um I will go to the",
    "start": "1882720",
    "end": "1888279"
  },
  {
    "text": "pipeline itself at code Pipeline and uh and allow you to see this in a little",
    "start": "1888279",
    "end": "1893480"
  },
  {
    "text": "bigger in in a uh a little bit higher resolution uh but essentially what this",
    "start": "1893480",
    "end": "1899080"
  },
  {
    "text": "is is um a the network resource Pipeline with a source",
    "start": "1899080",
    "end": "1905080"
  },
  {
    "text": "stage uh in this case we picked S3 we've picked a Dev environment that",
    "start": "1905080",
    "end": "1911919"
  },
  {
    "text": "um creates your vpcs your security groups and load balancers in order as",
    "start": "1911919",
    "end": "1918080"
  },
  {
    "text": "those values from the VPC are used in the other two change sets then to preview changes",
    "start": "1918080",
    "end": "1926799"
  },
  {
    "text": "before you push any of those changes to prod a manual approval step that um",
    "start": "1926799",
    "end": "1933320"
  },
  {
    "text": "allows you to review and then approve any changes before it gets pushed to prod and finally an execution phase",
    "start": "1933320",
    "end": "1941720"
  },
  {
    "text": "where the change sets are then applied to your prod um environment",
    "start": "1941720",
    "end": "1949200"
  },
  {
    "start": "1949000",
    "end": "2046000"
  },
  {
    "text": "similarly for your application but slightly tweaked is um your Source stage",
    "start": "1951039",
    "end": "1956639"
  },
  {
    "text": "and and and always with even with S3 git of course and code commit um code",
    "start": "1956639",
    "end": "1963360"
  },
  {
    "text": "pipeline watches for changes as they're checked in um to these repos and",
    "start": "1963360",
    "end": "1971000"
  },
  {
    "text": "triggers your pipeline each time there's a change I've set up a Dev environment but",
    "start": "1971000",
    "end": "1977440"
  },
  {
    "text": "I've also set up to um run tests once your Dev is set up",
    "start": "1977440",
    "end": "1983919"
  },
  {
    "text": "your Dev environment is set up and then this pipe particular pipeline is modeled",
    "start": "1983919",
    "end": "1989080"
  },
  {
    "text": "to clean up your Dev environment once you're done with it so you aren't charged for the for the resources or instances you",
    "start": "1989080",
    "end": "1995399"
  },
  {
    "text": "provision and once you clean up you can then push those changes to production um",
    "start": "1995399",
    "end": "2000919"
  },
  {
    "text": "similar to what we did on the network side you can create a change set um and",
    "start": "2000919",
    "end": "2006399"
  },
  {
    "text": "go uh verify the details of the change set approve it and push it to push it to",
    "start": "2006399",
    "end": "2011679"
  },
  {
    "text": "prod the details tab on on on the slide there on the page and code pipelines",
    "start": "2011679",
    "end": "2017679"
  },
  {
    "text": "allows you to takes you to Cloud information to see the details of the change set it'll tell you what resources are getting modified or replaced so only",
    "start": "2017679",
    "end": "2026600"
  },
  {
    "text": "expected actions are executed and finally changes are pushed",
    "start": "2026600",
    "end": "2033639"
  },
  {
    "text": "to prod as as soon as you make that manual approval manual approval manual approvals are optional obviously but",
    "start": "2033639",
    "end": "2040679"
  },
  {
    "text": "highly recommended as it allows you to ensure that only expected actions are carried",
    "start": "2040679",
    "end": "2046440"
  },
  {
    "start": "2046000",
    "end": "2131000"
  },
  {
    "text": "out um now this is where it gets a little meta let's structure",
    "start": "2046440",
    "end": "2051560"
  },
  {
    "text": "your workflow using Cloud information so use cloud information to structure your",
    "start": "2051560",
    "end": "2056599"
  },
  {
    "text": "workflow manage your workflow as code and uh make changes to it and and check",
    "start": "2056599",
    "end": "2063200"
  },
  {
    "text": "that in as well and and manage your um manage your pipeline is code so so for",
    "start": "2063200",
    "end": "2068440"
  },
  {
    "text": "the in for this case uh Cloud information template to set up your pipeline we have a an S3 bucket um to",
    "start": "2068440",
    "end": "2076398"
  },
  {
    "text": "store the artifacts of the pipeline itself so all the input and output artifacts are stored in this",
    "start": "2076399",
    "end": "2082320"
  },
  {
    "text": "bucket um a s a um I'm sorry SNS topic",
    "start": "2082320",
    "end": "2087599"
  },
  {
    "text": "to receive notifications email notifications when there are changes to be approved on your",
    "start": "2087599",
    "end": "2093200"
  },
  {
    "text": "pipeline the pipeline itself and the various stages defined in your cloud fromation",
    "start": "2093200",
    "end": "2098760"
  },
  {
    "text": "template and any I roles that that you may need um you need two I IM roles one",
    "start": "2098760",
    "end": "2107000"
  },
  {
    "text": "is to allow code pipeline to call cloud formation on your behalf and the other",
    "start": "2107000",
    "end": "2113720"
  },
  {
    "text": "one is to allow Cloud information to call the other services on your behalf",
    "start": "2113720",
    "end": "2119960"
  },
  {
    "text": "um ideally you'd provision these roles in its own separate stack and have have",
    "start": "2119960",
    "end": "2125280"
  },
  {
    "text": "it managed independently but but for this example I included all",
    "start": "2125280",
    "end": "2130560"
  },
  {
    "text": "one um kind of an ey chart look at uh let's look at a particular stage the",
    "start": "2130560",
    "end": "2137359"
  },
  {
    "start": "2131000",
    "end": "2247000"
  },
  {
    "text": "construction of a stage in your cloud formation template this is a code pipeline stage for your Dev environment",
    "start": "2137359",
    "end": "2144079"
  },
  {
    "text": "where you're creating a VPC where it's being set up to create a VPC so you give it a stage",
    "start": "2144079",
    "end": "2152160"
  },
  {
    "text": "name the action is to create your Dev VPC",
    "start": "2152160",
    "end": "2158000"
  },
  {
    "text": "and then you have a number of um a number of properties there that describe",
    "start": "2158000",
    "end": "2163680"
  },
  {
    "text": "the action configuration itself you use uh in code pipeline you",
    "start": "2163680",
    "end": "2169760"
  },
  {
    "text": "choose the deploy action and cloud formation as a provider uh We've enabled several action",
    "start": "2169760",
    "end": "2176960"
  },
  {
    "text": "modes replace on failure is the action mode I've picked here it's pretty versatile it uh creates a stack if one",
    "start": "2176960",
    "end": "2184160"
  },
  {
    "text": "doesn't exist it updates it if it does or if it's in a failed state it just",
    "start": "2184160",
    "end": "2190079"
  },
  {
    "text": "replaces it the the name of your cloud formation",
    "start": "2190079",
    "end": "2195359"
  },
  {
    "text": "template within your repo and um there's two options for configurations for parameters you can",
    "start": "2195359",
    "end": "2202599"
  },
  {
    "text": "either use a a",
    "start": "2202599",
    "end": "2206280"
  },
  {
    "text": "template wow this works you can either use a template configuration file that",
    "start": "2208319",
    "end": "2213560"
  },
  {
    "text": "has a Json list of key value pairs for your parameters or you can state",
    "start": "2213560",
    "end": "2219520"
  },
  {
    "text": "overrides with all the with any parameter that you want to explicitly",
    "start": "2219520",
    "end": "2224720"
  },
  {
    "text": "set for your stack that's been created in this case I I showed you all the",
    "start": "2224720",
    "end": "2229839"
  },
  {
    "text": "parameters here just as a as a reference but what I really what what was essential for me to set for this Dev",
    "start": "2229839",
    "end": "2235960"
  },
  {
    "text": "stage was a Dev environment and uh environment name which I will use to tag",
    "start": "2235960",
    "end": "2242200"
  },
  {
    "text": "to all my exports like you will like I'll show you in a minute so that's a a sample",
    "start": "2242200",
    "end": "2249520"
  },
  {
    "start": "2247000",
    "end": "2544000"
  },
  {
    "text": "snippet let's take a moment now and walk through uh the actual templates",
    "start": "2249839",
    "end": "2255280"
  },
  {
    "text": "themselves and then take a look at um the",
    "start": "2255280",
    "end": "2260279"
  },
  {
    "text": "pipeline love these pretty window screens each time um what you're able to see now is a",
    "start": "2268720",
    "end": "2277200"
  },
  {
    "text": "temp templ that configures your network pipeline I've sort of Consolidated to uh",
    "start": "2277200",
    "end": "2282920"
  },
  {
    "text": "and and I'll expand it as we go along um parameters what I'm basically sending",
    "start": "2282920",
    "end": "2288680"
  },
  {
    "text": "this template is um a name for the pipeline a bucket where um all my",
    "start": "2288680",
    "end": "2294160"
  },
  {
    "text": "artifacts are are stored and um and uh the the key for uh the the",
    "start": "2294160",
    "end": "2303440"
  },
  {
    "text": "actual artifact itself and an an email address for to for to allow the pipeline",
    "start": "2303440",
    "end": "2310760"
  },
  {
    "text": "to send you notifications when uh there are actions to be",
    "start": "2310760",
    "end": "2316000"
  },
  {
    "text": "taken as as far as resources go this template sets up an artifact store bucket a which is a simple S3 bucket",
    "start": "2317280",
    "end": "2326319"
  },
  {
    "text": "your code pipeline um SNS topic with email protocol your pipeline",
    "start": "2326319",
    "end": "2334240"
  },
  {
    "text": "itself for the pipeline you have your um artifact store bucket and you",
    "start": "2334240",
    "end": "2341359"
  },
  {
    "text": "have your various stages and the role that the pipeline will use for the various stages I have a",
    "start": "2341359",
    "end": "2348000"
  },
  {
    "text": "source stage as you saw in the the slide before a Dev environment stage and a prod environment",
    "start": "2348000",
    "end": "2354440"
  },
  {
    "text": "stage Source stage points to the S3 bucket that you passed",
    "start": "2354440",
    "end": "2361040"
  },
  {
    "text": "in the dev environment does three things it creates the dev VPC the dev Security",
    "start": "2361040",
    "end": "2366680"
  },
  {
    "text": "Group and load balancer you saw a snippet of the dev VPC before so let's look at the security",
    "start": "2366680",
    "end": "2372920"
  },
  {
    "text": "group same as before deploy Cloud information as a provider uh your template path I don't have any parameter",
    "start": "2372920",
    "end": "2381079"
  },
  {
    "text": "um configs here the only parameter that this template needs is an environment name so I'm passing in Dev",
    "start": "2381079",
    "end": "2387480"
  },
  {
    "text": "environment and I set a a run order for this particular action is run order 2 so",
    "start": "2387480",
    "end": "2394200"
  },
  {
    "text": "it's it goes after your VPC I do the same for the load",
    "start": "2394200",
    "end": "2400200"
  },
  {
    "text": "balancers run order three then I have a a stage for production I have several",
    "start": "2400200",
    "end": "2407640"
  },
  {
    "text": "actions to create change sets for each of um for",
    "start": "2407640",
    "end": "2413440"
  },
  {
    "text": "each of the components for each of the templates uh a step to approve those change sets and and then execute so",
    "start": "2413440",
    "end": "2419800"
  },
  {
    "text": "let's look at create create gets you set up",
    "start": "2419800",
    "end": "2425000"
  },
  {
    "text": "with um the action mode here here is change set replace which creates a",
    "start": "2425000",
    "end": "2430440"
  },
  {
    "text": "change set or replaces one that exists already and",
    "start": "2430440",
    "end": "2436720"
  },
  {
    "text": "um you have your configuration file and your template",
    "start": "2436720",
    "end": "2441640"
  },
  {
    "text": "path the approval stage is a a manual approval that Co AWS code pipeline has",
    "start": "2441800",
    "end": "2448280"
  },
  {
    "text": "set up and then an execution phase that uh",
    "start": "2448280",
    "end": "2453560"
  },
  {
    "text": "has an action mode of chain set execute that essentially creates your um that",
    "start": "2453560",
    "end": "2458880"
  },
  {
    "text": "pushes your changes or executes your change set the role that cloud fromation will",
    "start": "2458880",
    "end": "2466440"
  },
  {
    "text": "use uh to execute actions on your behalf in",
    "start": "2466440",
    "end": "2471720"
  },
  {
    "text": "this case we have a star um permissions policy you'd want to scope that down of",
    "start": "2471720",
    "end": "2478359"
  },
  {
    "text": "course and your pipelines role itself where that you would provide code",
    "start": "2478359",
    "end": "2485319"
  },
  {
    "text": "pipeline to call Cloud information on your behalf",
    "start": "2485319",
    "end": "2489240"
  },
  {
    "text": "the application pipeline is similar I'm not going to go into this in",
    "start": "2490839",
    "end": "2496240"
  },
  {
    "text": "gory detail but what I do have set up here is four stages your Source your Dev",
    "start": "2496240",
    "end": "2502480"
  },
  {
    "text": "environment uh a cleanup and promote environment I'm done with my",
    "start": "2502480",
    "end": "2508040"
  },
  {
    "text": "testing in a in a real in a uh in a true um a scenario where you're making",
    "start": "2508040",
    "end": "2514200"
  },
  {
    "text": "changes to the application code as well you'll have uh steps in here to either build or uh test your application as",
    "start": "2514200",
    "end": "2521480"
  },
  {
    "text": "well in addition to your infrastructure uh so your workflow is set up that handles both infrastructure and",
    "start": "2521480",
    "end": "2527319"
  },
  {
    "text": "application changes um which really saves your",
    "start": "2527319",
    "end": "2533040"
  },
  {
    "text": "time clean up and promote stage as I mentioned and then uh push to prod with",
    "start": "2533040",
    "end": "2538480"
  },
  {
    "text": "uh an an action here to approve change sets before they're executed so now let's look at the",
    "start": "2538480",
    "end": "2544760"
  },
  {
    "start": "2544000",
    "end": "2972000"
  },
  {
    "text": "pipeline itself um two of the pipelines are are set up",
    "start": "2544760",
    "end": "2550240"
  },
  {
    "text": "again just to show you a larger view of of what you've seen before your app",
    "start": "2550240",
    "end": "2557359"
  },
  {
    "text": "pipeline has the um um templates being created in order of",
    "start": "2557440",
    "end": "2564160"
  },
  {
    "text": "execution and a clean up and promote stage and and finally uh push to",
    "start": "2564160",
    "end": "2571480"
  },
  {
    "text": "prod let me um at this point take a um a minute to switch over to a video here",
    "start": "2574720",
    "end": "2581800"
  },
  {
    "text": "that will show you how I make changes to uh my templates and allow those changes",
    "start": "2581800",
    "end": "2587520"
  },
  {
    "text": "to flow through your pipeline so give me one second",
    "start": "2587520",
    "end": "2592640"
  },
  {
    "text": "so this is the initials once the pipeline is set up and you've checked in your templates into the S3",
    "start": "2618960",
    "end": "2625880"
  },
  {
    "text": "repo or the S3 bucket rather the pipeline gets going with uh creating",
    "start": "2625880",
    "end": "2632240"
  },
  {
    "text": "your VPC Security Group and load balancers obviously I've I've sped through the video it takes a little bit",
    "start": "2632240",
    "end": "2638200"
  },
  {
    "text": "longer than um than 5 Seconds you can actually see the clock counter on on",
    "start": "2638200",
    "end": "2643920"
  },
  {
    "text": "each one of those steps so",
    "start": "2643920",
    "end": "2647799"
  },
  {
    "text": "um this is not as as quick as this video shows that it is uh your change sets are",
    "start": "2649520",
    "end": "2658359"
  },
  {
    "text": "created and it prompts you for a manual approval in this case I got an email saying that hey your your pipeline um",
    "start": "2658359",
    "end": "2665839"
  },
  {
    "text": "you have an action to be taken and with at this point you can go verify um your changes and and approve",
    "start": "2665839",
    "end": "2674558"
  },
  {
    "text": "them I I wanted to to take a look at what",
    "start": "2685000",
    "end": "2690319"
  },
  {
    "text": "my so once my network pipeline gets set up I wanted to look at what exports are",
    "start": "2690319",
    "end": "2696440"
  },
  {
    "text": "um what what exports are available that the application pipeline application Stacks can consume you have a number of",
    "start": "2696440",
    "end": "2703359"
  },
  {
    "text": "exports here all are Nam spaced with um the en the the environment and the name",
    "start": "2703359",
    "end": "2710079"
  },
  {
    "text": "of the export itself and um you have your exports for",
    "start": "2710079",
    "end": "2715480"
  },
  {
    "text": "Dev and prod",
    "start": "2715480",
    "end": "2718880"
  },
  {
    "text": "going back through the application pipeline looking at um the actions that are taken once your templates are",
    "start": "2728880",
    "end": "2734680"
  },
  {
    "text": "checked in for your",
    "start": "2734680",
    "end": "2738280"
  },
  {
    "text": "app at at that at that point once your Dev environment is set up you you",
    "start": "2751680",
    "end": "2756720"
  },
  {
    "text": "obvious L have other actions to um deploy your application test your application ensure that it it is working",
    "start": "2756720",
    "end": "2763319"
  },
  {
    "text": "the way you want it to before you say okay I'm I'm ready to push this to PR and clean up kind of spread through that here and",
    "start": "2763319",
    "end": "2771400"
  },
  {
    "text": "moving through that approval step of clean up",
    "start": "2771400",
    "end": "2776119"
  },
  {
    "text": "chain sets are being created for prod with a notification for manual",
    "start": "2788920",
    "end": "2795240"
  },
  {
    "text": "approval in this case I want to go make sure that only expected actions are being carried out so I go to my cloud",
    "start": "2796920",
    "end": "2804119"
  },
  {
    "text": "formation stacks for my prod stacks and I look up the I look up the change set",
    "start": "2804119",
    "end": "2813240"
  },
  {
    "text": "and I can see the resources that are going to be created as part of this action in this case we're we're adding",
    "start": "2818280",
    "end": "2823839"
  },
  {
    "text": "five resources and that's okay with",
    "start": "2823839",
    "end": "2827680"
  },
  {
    "text": "me same with the other change sets that are created for the front end and the backend",
    "start": "2831359",
    "end": "2837400"
  },
  {
    "text": "service I'm happy with it now I'm going to approve it and it's going to move to the next phase which is to execute those",
    "start": "2842480",
    "end": "2847559"
  },
  {
    "text": "change sets and once this completes let's look",
    "start": "2847559",
    "end": "2854720"
  },
  {
    "text": "at making a change to your infrastructure configuration and and see",
    "start": "2854720",
    "end": "2859880"
  },
  {
    "text": "those changes flow through your your",
    "start": "2859880",
    "end": "2863838"
  },
  {
    "text": "pipeline I have a configuration file uh for my ECS cluster I'm going to change",
    "start": "2870400",
    "end": "2877520"
  },
  {
    "text": "the cluster size to six I'm going to change this is a very simple basic change but just to show you how these",
    "start": "2877520",
    "end": "2883960"
  },
  {
    "text": "get pushed through the pipeline I'm going to change the desired count of my task",
    "start": "2883960",
    "end": "2890240"
  },
  {
    "text": "staff and for my front end and backend service save those templates put them",
    "start": "2891440",
    "end": "2898200"
  },
  {
    "text": "back in my",
    "start": "2898200",
    "end": "2900558"
  },
  {
    "text": "repo and look at the changes Cascade through my pipeline",
    "start": "2903319",
    "end": "2908760"
  },
  {
    "text": "in this case I didn't want to clean up",
    "start": "2913000",
    "end": "2917079"
  },
  {
    "text": "my I apologize just wanted to verify that those changes were",
    "start": "2920359",
    "end": "2927599"
  },
  {
    "text": "made in this case I didn't want to um to clean up my environment just yet I",
    "start": "2928520",
    "end": "2933599"
  },
  {
    "text": "wanted to run my application tests make sure everything's working right so um so I kind of stopped there didn't",
    "start": "2933599",
    "end": "2940920"
  },
  {
    "text": "push it to prod I I go to my ECS console just to verify that everything is working as as expected I do have my",
    "start": "2940920",
    "end": "2948040"
  },
  {
    "text": "right number of um desire tasks and um",
    "start": "2948040",
    "end": "2953160"
  },
  {
    "text": "registered um container instances so everything appears to be fine and all my",
    "start": "2953160",
    "end": "2958640"
  },
  {
    "text": "changes have been pushed so that's got of a demo of how you push changes through your your workflow set up your",
    "start": "2958640",
    "end": "2965480"
  },
  {
    "text": "workflow and push changes through your workflow as you iterate on your",
    "start": "2965480",
    "end": "2970480"
  },
  {
    "start": "2972000",
    "end": "3003000"
  },
  {
    "text": "infrastructure so in summary here just to close out we've seen a way to handle infrastructures",
    "start": "2974599",
    "end": "2982040"
  },
  {
    "text": "code how to set up your workflow for your infrastructure different ways to",
    "start": "2982040",
    "end": "2987240"
  },
  {
    "text": "compose your infrastructure with cloud formation using Cossack references and or nested",
    "start": "2987240",
    "end": "2994319"
  },
  {
    "text": "Stacks how to provision your your pipeline and deliver changes as you make",
    "start": "2994319",
    "end": "2999799"
  },
  {
    "text": "uh as you make changes to your your environment your templates rather there are more sessions where you can gather",
    "start": "2999799",
    "end": "3006520"
  },
  {
    "start": "3003000",
    "end": "3061000"
  },
  {
    "text": "more info on what we presented um Dev 403 in particular is is",
    "start": "3006520",
    "end": "3013440"
  },
  {
    "text": "a um a more advanced session on um code",
    "start": "3013440",
    "end": "3018480"
  },
  {
    "text": "pipeline that includes an example application and making changes to application code that's pushed through and that's tomorrow",
    "start": "3018480",
    "end": "3026798"
  },
  {
    "text": "the cloud cloud formation documentation page has several links that uh will give",
    "start": "3027839",
    "end": "3033400"
  },
  {
    "text": "you more info about our code pipeline set up and um and and how you can take",
    "start": "3033400",
    "end": "3038520"
  },
  {
    "text": "advantage of the various features that we've built into our Cloud information",
    "start": "3038520",
    "end": "3044520"
  },
  {
    "text": "integration so there's some links for you to consume and that's it folks that's that's what we have here for this this",
    "start": "3045200",
    "end": "3051839"
  },
  {
    "text": "presentation um thank you very much for for listening to this and and please remember to hope you",
    "start": "3051839",
    "end": "3059838"
  }
]