[
  {
    "text": "good morning you can't see if you're on Twitter watching on the stream but I'd get this really interesting countdown",
    "start": "30",
    "end": "5879"
  },
  {
    "text": "which comes from this disembodied voice which is what I'm smiling right now no idea where those numbers came from good",
    "start": "5879",
    "end": "11309"
  },
  {
    "text": "morning my name is Ian in massing ham I work in technology evangelism AWS",
    "start": "11309",
    "end": "17190"
  },
  {
    "text": "welcome to the AWS loft quite a few of you were here last week correct now it's quite a few people who were here last",
    "start": "17190",
    "end": "22680"
  },
  {
    "text": "week so thanks for rejoining us and if you're on the stream hi we're taking questions this morning on twitch so if",
    "start": "22680",
    "end": "27990"
  },
  {
    "text": "you do have any questions during the session please submit them using the chat that you can see and ABI to my",
    "start": "27990",
    "end": "34309"
  },
  {
    "text": "right here will get the questions to me and we'll try and answer some of those live on the stream so don't be shy focus",
    "start": "34309",
    "end": "40920"
  },
  {
    "text": "for this session is AWS developer tools going to cover a few different things",
    "start": "40920",
    "end": "46200"
  },
  {
    "text": "here first of all we're going to talk a little bit about Amazon's own journey in changing the way in which we do software",
    "start": "46200",
    "end": "52320"
  },
  {
    "text": "development at Amazon then we'll talk a little bit about DevOps principles and how customers are using this",
    "start": "52320",
    "end": "60289"
  },
  {
    "text": "organizational model combined with tools to improve the speed at which they",
    "start": "60289",
    "end": "65309"
  },
  {
    "text": "deliver software speed in terms of cycle time and speed in terms of getting to the end product that they want to build",
    "start": "65309",
    "end": "70619"
  },
  {
    "text": "more quickly as well then we'll dive into the AWS website by way of a quick demo and just show you a few resources",
    "start": "70619",
    "end": "77280"
  },
  {
    "text": "that we have available for software developers that want to build on the platform and then we're going to talk for the rest of the session about a",
    "start": "77280",
    "end": "83189"
  },
  {
    "text": "relatively new AWS service called AWS code star which is a tool for establishing the tools framework that",
    "start": "83189",
    "end": "90750"
  },
  {
    "text": "developers need in order to implement continuous integration and continuous delivery on AWS so we'll dive into that",
    "start": "90750",
    "end": "97439"
  },
  {
    "text": "have a look at setting up projects have a look at some of the template projects that were available and we'll also run",
    "start": "97439",
    "end": "103110"
  },
  {
    "text": "the CI CD pipeline a couple of times as well and show you how that works integrating with with CLI tools in my",
    "start": "103110",
    "end": "109799"
  },
  {
    "text": "case and then we'll wrap up okay how's that sound good okay so amazon.com it's",
    "start": "109799",
    "end": "117869"
  },
  {
    "text": "kind of stating the obvious really but Amazon is of course it's hot we're in technology company you know we started",
    "start": "117869",
    "end": "123420"
  },
  {
    "text": "as a retailer but we wanted to really change the way in which we delivered the",
    "start": "123420",
    "end": "128459"
  },
  {
    "text": "retail experience to customers by using technology early features like search and product recommendations well",
    "start": "128459",
    "end": "136680"
  },
  {
    "text": "we all take them for granted today but when we started to deliver these features to the online retail experience",
    "start": "136680",
    "end": "144389"
  },
  {
    "text": "back in the mid to late 90s actually pretty revolutionary things like one-click purchasing as well of course",
    "start": "144389",
    "end": "150420"
  },
  {
    "text": "had a really big impact on the way in which customers chose to use the Amazon retail website and in maintaining that",
    "start": "150420",
    "end": "158129"
  },
  {
    "text": "level of innovation that pace of innovation we've actually changed a lot at Amazon in terms of the way in which",
    "start": "158129",
    "end": "165480"
  },
  {
    "text": "we work so like many organizations we started with a large monolithic software",
    "start": "165480",
    "end": "170579"
  },
  {
    "text": "product which had all functionality for the Amazon retail experience embedded",
    "start": "170579",
    "end": "175980"
  },
  {
    "text": "within cought one code based and managed within one codebase rather and managed as one monolithic deployment so a new",
    "start": "175980",
    "end": "183480"
  },
  {
    "text": "version of the website meant pushing out a huge mostly C and C++ based monolith",
    "start": "183480",
    "end": "192150"
  },
  {
    "text": "ok and we realized that this was inhibiting our ability to do new things and it was inhibiting our ability to",
    "start": "192150",
    "end": "199379"
  },
  {
    "text": "maintain the velocity with which he wanted to move the speed with which we wanted to innovate and invent on behalf",
    "start": "199379",
    "end": "204689"
  },
  {
    "text": "of customers so in trying to solve that we started to break up our application",
    "start": "204689",
    "end": "210349"
  },
  {
    "text": "into sub services into smaller services components the first thing that we took",
    "start": "210349",
    "end": "215729"
  },
  {
    "text": "out was the authentication service for the retail website realizing that this",
    "start": "215729",
    "end": "222299"
  },
  {
    "text": "could become a bottleneck wasn't becoming a bottleneck and we thought if we took it out and ran it separately it",
    "start": "222299",
    "end": "227400"
  },
  {
    "text": "would enable us to scale it independently of the rest of the website and that would be beneficial for",
    "start": "227400",
    "end": "232859"
  },
  {
    "text": "customers what we discovered is we'd quickly created two monoliths which were more or less of equal size in terms of",
    "start": "232859",
    "end": "238409"
  },
  {
    "text": "resource consumption pretty much every page on the website at that point was using that authentication service to",
    "start": "238409",
    "end": "244290"
  },
  {
    "text": "personalize the content that was being delivered for the visitor for the customer at that particular point in",
    "start": "244290",
    "end": "249810"
  },
  {
    "text": "time so we ended up with two big monoliths really duplicating the problem then we realized we needed to go further",
    "start": "249810",
    "end": "254849"
  },
  {
    "text": "we needed to really start breaking up these services into many many more sub components and today if you hit the",
    "start": "254849",
    "end": "261180"
  },
  {
    "text": "Amazon code at UK retail website there's hundreds or maybe even thousands of",
    "start": "261180",
    "end": "266340"
  },
  {
    "text": "being activated each time you make a pageview complicated web of interdependent services and that kind of",
    "start": "266340",
    "end": "274260"
  },
  {
    "text": "complexity it evolves okay so it's extremely difficult as you'll know to",
    "start": "274260",
    "end": "279720"
  },
  {
    "text": "design and successfully implement a complex system but there are actually",
    "start": "279720",
    "end": "284940"
  },
  {
    "text": "complex systems all around us it's just that that complexity has evolved over",
    "start": "284940",
    "end": "290550"
  },
  {
    "text": "time and if anybody here works in a you know a big company with a long technology history I used to working in telecoms before I before I came to cloud",
    "start": "290550",
    "end": "297330"
  },
  {
    "text": "computing and we had hundreds and hundreds of applications are very complicated web of integrations it's",
    "start": "297330",
    "end": "304169"
  },
  {
    "text": "actually very difficult for us to unpick that now the same thing develops over",
    "start": "304169",
    "end": "310440"
  },
  {
    "text": "time inside any large or moderately large company one of the things that you're able to do with this kind of",
    "start": "310440",
    "end": "315630"
  },
  {
    "text": "approach this kind of services based approach is decouple that complexity and",
    "start": "315630",
    "end": "320880"
  },
  {
    "text": "allow individual teams to work on relatively relatively simple domain",
    "start": "320880",
    "end": "327300"
  },
  {
    "text": "areas with singular focus and with responsibility for a small part of the",
    "start": "327300",
    "end": "332430"
  },
  {
    "text": "system where they can develop deep knowledge of that particular system component without having to have",
    "start": "332430",
    "end": "337919"
  },
  {
    "text": "overarching knowledge of the entire system architecture so your individual",
    "start": "337919",
    "end": "343020"
  },
  {
    "text": "teams are able to focus down on the things that are important to them and that are important to their customers",
    "start": "343020",
    "end": "348750"
  },
  {
    "text": "whether those are internal or external customers now one of the side effects of having large numbers of teams working",
    "start": "348750",
    "end": "355740"
  },
  {
    "text": "independently of one another of course is and you want them to work independently for speed is that those",
    "start": "355740",
    "end": "361470"
  },
  {
    "text": "teams might be using similar services they might be using similar components",
    "start": "361470",
    "end": "366840"
  },
  {
    "text": "to build their own products and this is a challenge that Amazon was facing",
    "start": "366840",
    "end": "371849"
  },
  {
    "text": "around the 2003 2004 2005 time frame",
    "start": "371849",
    "end": "377310"
  },
  {
    "text": "where our teams were using independently sourced but similar components and we",
    "start": "377310",
    "end": "384930"
  },
  {
    "text": "realized this was making as inefficient okay we were having a large application duplication in the supply chain",
    "start": "384930",
    "end": "391580"
  },
  {
    "text": "duplication in effort where teams were building the same substrate upon which where they would build their apps and",
    "start": "391580",
    "end": "397080"
  },
  {
    "text": "this realization was the reason that AWS was created it was the genesis of Amazon Web Services our",
    "start": "397080",
    "end": "404370"
  },
  {
    "text": "own desire to create a set of services that our own teams could reuse to enable",
    "start": "404370",
    "end": "410580"
  },
  {
    "text": "them to move more quickly without having to reinvent the wheel every time they wanted a relational database or a",
    "start": "410580",
    "end": "416370"
  },
  {
    "text": "virtual machine or a queuing system okay so that's where where AWS came from of course we tested the idea with external",
    "start": "416370",
    "end": "423150"
  },
  {
    "text": "customers and found that a lot of customers were facing the kit the same kinds of challenges and we're looking",
    "start": "423150",
    "end": "428189"
  },
  {
    "text": "for the same kind of solutions and this is where we took the decision that we would turn AWS into a service that our",
    "start": "428189",
    "end": "433860"
  },
  {
    "text": "own builders could consume our own teams could consume but so could could external customers which is why of",
    "start": "433860",
    "end": "439530"
  },
  {
    "text": "course we're all sitting here today so that's where where AWS came from and",
    "start": "439530",
    "end": "444629"
  },
  {
    "text": "what we've done there inside our our own business is to adopt was to adopt",
    "start": "444629",
    "end": "450629"
  },
  {
    "text": "something which is later become known as DevOps so I don't know if anyone's ever heard this phrase before you build it",
    "start": "450629",
    "end": "456330"
  },
  {
    "text": "you run it anyone ever heard that it's our CTO of Werner Vogel's that coined that phrase back in 2000 it was 2004",
    "start": "456330",
    "end": "463800"
  },
  {
    "text": "that he first said that this predates the term DevOps it predates a lot of the",
    "start": "463800",
    "end": "469349"
  },
  {
    "text": "established thinking that we see today about this relatively new way of delivering and operating software",
    "start": "469349",
    "end": "475889"
  },
  {
    "text": "products but it was all about unifying software development and operations and",
    "start": "475889",
    "end": "481729"
  },
  {
    "text": "gendering a culture of service ownership of complete ownership for specific services so that individual teams would",
    "start": "481729",
    "end": "488699"
  },
  {
    "text": "write code ship code and operate code in the production environment which oddly",
    "start": "488699",
    "end": "494190"
  },
  {
    "text": "enough is a good forcing function for developing higher quality software if you write it you ship it and then you",
    "start": "494190",
    "end": "500849"
  },
  {
    "text": "get woken up in the morning when it doesn't work at 2:00 a.m. what sort of behavior does that force it encourages",
    "start": "500849",
    "end": "506900"
  },
  {
    "text": "quality mindset that way let's let's say it encourages builders to create systems",
    "start": "506900",
    "end": "512459"
  },
  {
    "text": "that are robust and that fail gracefully and that recover gracefully because nobody wants to be dragged out of bed in",
    "start": "512459",
    "end": "518760"
  },
  {
    "text": "the middle of the night to fix an issue in production right so this model delivers benefits that come from",
    "start": "518760",
    "end": "525240"
  },
  {
    "text": "behavioral change ok what we've done of course is to create further tooling the",
    "start": "525240",
    "end": "531960"
  },
  {
    "text": "our builders can use to just say give",
    "start": "531960",
    "end": "537720"
  },
  {
    "text": "easy defaults for the software development the pipeline's process and",
    "start": "537720",
    "end": "543000"
  },
  {
    "text": "the deployment process and we tend to see I'm sure you tend to see that if you",
    "start": "543000",
    "end": "548130"
  },
  {
    "text": "provide developers with easy robust defaults that help them get their job done more quickly they're very prone to",
    "start": "548130",
    "end": "554730"
  },
  {
    "text": "adopt those you know it's quite unusual for them to to resist that and say now I want to build something completely from",
    "start": "554730",
    "end": "559980"
  },
  {
    "text": "scratch so we've equipped our own teams with a set of tools to help them achieve these things to ship quality product",
    "start": "559980",
    "end": "567209"
  },
  {
    "text": "more quickly with a really high degree of automation okay there's actually a",
    "start": "567209",
    "end": "572640"
  },
  {
    "text": "few different components to this does anybody visit at this page on the AWS website maybe not I'm going to just",
    "start": "572640",
    "end": "579450"
  },
  {
    "text": "quickly show you this because there's some really interesting resources collected together in one location that",
    "start": "579450",
    "end": "586440"
  },
  {
    "text": "I think it's worth while you knowing about and worth while you you taking a look at",
    "start": "586440",
    "end": "592160"
  },
  {
    "text": "okay now we're going to be focusing later on the session in the session on these developer tools AWS code commit",
    "start": "600930",
    "end": "608050"
  },
  {
    "text": "AWS code pipeline AWS code build and AWS code deploy and these are the",
    "start": "608050",
    "end": "613959"
  },
  {
    "text": "foundational layer that you can use to create and operate continuous",
    "start": "613959",
    "end": "620199"
  },
  {
    "text": "integration and continuous delivery environments that are integrated with other AWS services we've added another",
    "start": "620199",
    "end": "626680"
  },
  {
    "text": "abstraction layer called AWS code star which automates the process of setting",
    "start": "626680",
    "end": "633070"
  },
  {
    "text": "up these different services and integrating them together into one coherent pipeline okay so we'll return",
    "start": "633070",
    "end": "638980"
  },
  {
    "text": "to that a little bit later in the session there are also other resources on here which you really need to be familiar",
    "start": "638980",
    "end": "644800"
  },
  {
    "text": "with as users of the AWS platform the first thing is a set of software",
    "start": "644800",
    "end": "650649"
  },
  {
    "text": "development kits and for those that come from infrastructure backgrounds we often",
    "start": "650649",
    "end": "656079"
  },
  {
    "text": "think about using the cloud as a set of replacements for components that were",
    "start": "656079",
    "end": "662560"
  },
  {
    "text": "already familiar with so we think about virtual machines we think about networks",
    "start": "662560",
    "end": "667690"
  },
  {
    "text": "that we might build within a V PC we think about security groups we think about users inside the iam namespace",
    "start": "667690",
    "end": "674230"
  },
  {
    "text": "these are all analogs for things that we've always had in the traditional infrastructure environment where we used",
    "start": "674230",
    "end": "679630"
  },
  {
    "text": "to construct everything out of these low-level building blocks okay you can use the vast majority of these SDKs to",
    "start": "679630",
    "end": "686019"
  },
  {
    "text": "automate the creation of those components of those AWS services via the",
    "start": "686019",
    "end": "692709"
  },
  {
    "text": "control plane that is represented via by our AWS API endpoints so what I'm",
    "start": "692709",
    "end": "698620"
  },
  {
    "text": "talking about here is hitting something like the ec2 API endpoint with a run",
    "start": "698620",
    "end": "704079"
  },
  {
    "text": "instances command passing in a fixed format document to that API which causes",
    "start": "704079",
    "end": "710920"
  },
  {
    "text": "the control plane to initiate an action on your behalf in that case we'd be creating a set of virtual machines and",
    "start": "710920",
    "end": "717069"
  },
  {
    "text": "those virtual machines would have a set of attributes so that's control plane interaction where I'm using one of our SDKs to",
    "start": "717069",
    "end": "724480"
  },
  {
    "text": "interact with the control plane to create resources that are analogues to things that we've always used machines",
    "start": "724480",
    "end": "729940"
  },
  {
    "text": "networks I am users etc etc okay volumes in storage whatever those might be you can",
    "start": "729940",
    "end": "736360"
  },
  {
    "text": "also use these SDKs to integrate an interface with a data plane is",
    "start": "736360",
    "end": "741790"
  },
  {
    "text": "represented by many AWS services these are abstracted services that are not building blocks in the way that we've",
    "start": "741790",
    "end": "748480"
  },
  {
    "text": "always known them they're not virtual machines they're not networks they're not I am users they are abstracted",
    "start": "748480",
    "end": "754330"
  },
  {
    "text": "service endpoints that you can use to deliver functionality into applications or deliver important reusable services",
    "start": "754330",
    "end": "761680"
  },
  {
    "text": "that you might use as a component of your overall architecture so we're talking here about things like message queues we're talking here about things",
    "start": "761680",
    "end": "769149"
  },
  {
    "text": "like data streams in Amazon Kinesis tables in dynamodb credential issuance",
    "start": "769149",
    "end": "776920"
  },
  {
    "text": "services like STS or Amazon kognito that we use to get back credentials from AWS",
    "start": "776920",
    "end": "782440"
  },
  {
    "text": "that we can then use to operate on other services in a principle of least privilege and with time limited",
    "start": "782440",
    "end": "788740"
  },
  {
    "text": "credential characteristics so there are lots of other services that are not analogues for services that we've used",
    "start": "788740",
    "end": "794589"
  },
  {
    "text": "historically as infrastructure users but are replacements for components that",
    "start": "794589",
    "end": "800140"
  },
  {
    "text": "application builders might use when creating software ok you can also use",
    "start": "800140",
    "end": "805270"
  },
  {
    "text": "these SDKs to interface with those services this really removes a lot more",
    "start": "805270",
    "end": "810430"
  },
  {
    "text": "heavy lifting and allows developers to focus on building functionality directly into their applications and if you have",
    "start": "810430",
    "end": "816100"
  },
  {
    "text": "not used AWS in this way and I encounter a lot of developers that have not used AWS in this way I'd really like you to",
    "start": "816100",
    "end": "822910"
  },
  {
    "text": "think about that think about how you can build applications where you don't have to think about infrastructure you're",
    "start": "822910",
    "end": "828490"
  },
  {
    "text": "thinking about much higher level components that you can integrate into into apps enabling you to remove and",
    "start": "828490",
    "end": "835750"
  },
  {
    "text": "forget about whole artifacts whole service components that you might normally use when building apps ok who",
    "start": "835750",
    "end": "843850"
  },
  {
    "text": "would regard themselves as coming predominantly from an infrastructure background in here yeah there's a few of",
    "start": "843850",
    "end": "849070"
  },
  {
    "text": "you those of you that are putting your hands up take note okay now the SDKs here you'll notice have a few different",
    "start": "849070",
    "end": "854709"
  },
  {
    "text": "characteristics the top line they are client-side SDKs for Android browser and",
    "start": "854709",
    "end": "861400"
  },
  {
    "text": "iOS developers so if I'm building a mobile I'll say I'm building you know a game",
    "start": "861400",
    "end": "866710"
  },
  {
    "text": "where I have to cut up fruit with my finger okay I think it's been done before say I'm building that on iOS okay and I need",
    "start": "866710",
    "end": "872830"
  },
  {
    "text": "something like a high score table so that all of my users globally can see how effective they are at slicing melons",
    "start": "872830",
    "end": "878740"
  },
  {
    "text": "or cutting up bananas okay I could write a web service to do that representing it",
    "start": "878740",
    "end": "885040"
  },
  {
    "text": "as a REST API and behind that web service I could put a relational database which stores that data it's",
    "start": "885040",
    "end": "890800"
  },
  {
    "text": "actually a terrible use case for a relational database it's a very simple data model that doesn't have relational",
    "start": "890800",
    "end": "896590"
  },
  {
    "text": "characteristics okay all I want is a table that stores user names and scores it's actually a key",
    "start": "896590",
    "end": "902530"
  },
  {
    "text": "value table okay so for that I could use our iOS SDK I could use a service we've got called dynamo DB I could use Amazon",
    "start": "902530",
    "end": "909940"
  },
  {
    "text": "kognito for credential issuance I can interface my application directly with the dynamo DB endpoint so I've got a",
    "start": "909940",
    "end": "916030"
  },
  {
    "text": "table in AWS which stores my data my key value pairs I have no ec2 instances and I have",
    "start": "916030",
    "end": "922630"
  },
  {
    "text": "nothing to deploy at the back end all I do is write code which interfaces my iOS app directly with an API endpoint in a",
    "start": "922630",
    "end": "929530"
  },
  {
    "text": "secure manner okay so that's a use case for this iOS SDK same thing in a browser with our client-side JavaScript SDK same",
    "start": "929530",
    "end": "937510"
  },
  {
    "text": "thing in Android in Java on Android with our Android SDK we have a service",
    "start": "937510",
    "end": "943630"
  },
  {
    "text": "component called the mobile hub that enables mobile developers to build",
    "start": "943630",
    "end": "949590"
  },
  {
    "text": "specific versions of these SDKs for their application packaging up the",
    "start": "949590",
    "end": "955720"
  },
  {
    "text": "particular service libraries that they need for access only to the services",
    "start": "955720",
    "end": "961960"
  },
  {
    "text": "that are required for their particular app and you can do that with a wizard-based code builder which will",
    "start": "961960",
    "end": "967000"
  },
  {
    "text": "spit out a package ready for you to import into your iOS or Android IDE okay so you can quickly select the",
    "start": "967000",
    "end": "973150"
  },
  {
    "text": "features you want and we'll build you a template application that includes those features download that into your SDK and",
    "start": "973150",
    "end": "978730"
  },
  {
    "text": "you can get started writing your own custom code so that's the top line which is mostly client-side SDKs the rest of",
    "start": "978730",
    "end": "985060"
  },
  {
    "text": "it you'll notice is more traditionally running the server environment java.net node PHP Python Ruby Go C++ okay and",
    "start": "985060",
    "end": "993520"
  },
  {
    "text": "what we're talking about here sdks that enable you to interface your",
    "start": "993520",
    "end": "1001390"
  },
  {
    "text": "applications and software directly with those same abstracted service endpoints",
    "start": "1001390",
    "end": "1007060"
  },
  {
    "text": "and also with our infrastructure components so you can use these SDKs to automate things like creating ec2",
    "start": "1007060",
    "end": "1013630"
  },
  {
    "text": "instances you can also directly integrate your PHP application with dynamo DB with Cognito and with these",
    "start": "1013630",
    "end": "1020230"
  },
  {
    "text": "other services that I'm talking about as well so there's a lot of richness there in the SDKs if there's something you see",
    "start": "1020230",
    "end": "1026829"
  },
  {
    "text": "that we don't have here that you feel we should have first thing I would say is check github there are third-party SDKs",
    "start": "1026829",
    "end": "1032709"
  },
  {
    "text": "that have been developed independently of AWS that we don't support we haven't yet adopted but deliver a lot of good",
    "start": "1032709",
    "end": "1039550"
  },
  {
    "text": "functionality for developers to use so you can look at those and of course if you feel really strongly that we should",
    "start": "1039550",
    "end": "1045400"
  },
  {
    "text": "be adopting an SDK or developing another SDK then please talk to us and let us know about that we really want to get",
    "start": "1045400",
    "end": "1051970"
  },
  {
    "text": "feedback and make sure that we've got coverage for the programming languages that our customers are using today and",
    "start": "1051970",
    "end": "1057310"
  },
  {
    "text": "also thinking about using in the future so please talk to us if you feel you in that category then we have IDE toolkits",
    "start": "1057310",
    "end": "1065310"
  },
  {
    "text": "Eclipse Visual Studio and visual studio team services these two obviously are",
    "start": "1065310",
    "end": "1071770"
  },
  {
    "text": "for your client IDE that you will run on your machine enabling you to do things",
    "start": "1071770",
    "end": "1077680"
  },
  {
    "text": "like C inline documentation and have code completion for AWS SDK methods so",
    "start": "1077680",
    "end": "1086260"
  },
  {
    "text": "you can see documentation in your IDE for each one of the functions that our SDKs provide you'll have code completion",
    "start": "1086260",
    "end": "1091420"
  },
  {
    "text": "features with visual studio team server we have a set of integrations there that",
    "start": "1091420",
    "end": "1096820"
  },
  {
    "text": "work natively with Microsoft's on CI CD tooling framework so you can integrate",
    "start": "1096820",
    "end": "1103000"
  },
  {
    "text": "visual studio team server with for example deployment into elastic Beanstalk or deployment via code deploy",
    "start": "1103000",
    "end": "1109930"
  },
  {
    "text": "and push from the end of your Microsoft based pipeline directly into AWS services that's relatively new but it is",
    "start": "1109930",
    "end": "1117340"
  },
  {
    "text": "being used in production by quite a few customers and once again we'd love to get feedback on that as well if you're using VST and then we have CLI tools",
    "start": "1117340",
    "end": "1126040"
  },
  {
    "text": "these are standalone tools for developers and technical end-users to you that allow you to interface directly",
    "start": "1126040",
    "end": "1131950"
  },
  {
    "text": "with AWS from the command line environment you can script within that command line environment you can use",
    "start": "1131950",
    "end": "1137679"
  },
  {
    "text": "these CLI tools in your own scripting as well if you're not writing fully fledged applications but you do want to build",
    "start": "1137679",
    "end": "1143379"
  },
  {
    "text": "some automation our CLI interface on the Linux and UNIX derivative platforms it's",
    "start": "1143379",
    "end": "1149830"
  },
  {
    "text": "written on top of our Python SDK boto 3 so these feature power has feature parity with the Python SDK it's open",
    "start": "1149830",
    "end": "1157659"
  },
  {
    "text": "source maintained on github I use it a lot pretty much everybody on the AWS team will use it",
    "start": "1157659",
    "end": "1162779"
  },
  {
    "text": "PowerShell very similar but for the Windows environment for the interactive use or for PowerShell scripting can also",
    "start": "1162779",
    "end": "1171309"
  },
  {
    "text": "build the command line interface on Windows as well and have a compatible command line interface natively on the",
    "start": "1171309",
    "end": "1177190"
  },
  {
    "text": "windows command line and then we have something called Sam Local which was covered in Paul Maddox's talk about service build building processes",
    "start": "1177190",
    "end": "1184049"
  },
  {
    "text": "yesterday which allows you to operate lambda and API gateway applications",
    "start": "1184049",
    "end": "1190619"
  },
  {
    "text": "locally on your workstation we provide an entire environment that we boost up inside docker containers to enable you",
    "start": "1190619",
    "end": "1197229"
  },
  {
    "text": "to build deploy test and debug service applications locally on your local",
    "start": "1197229",
    "end": "1202419"
  },
  {
    "text": "machine disconnected from the AWS cloud in fact independent of any networking construct at all you can run it locally",
    "start": "1202419",
    "end": "1208989"
  },
  {
    "text": "on your laptop on a train on a flight on a train elsewhere in Europe you probably have what I Phi by the way but in here",
    "start": "1208989",
    "end": "1214779"
  },
  {
    "text": "in the UK as I know very well you probably need something like that and then we have EC tool tools ec2 tools",
    "start": "1214779",
    "end": "1222159"
  },
  {
    "text": "elastic Beanstalk CLI which is stand-alone to your life elastic Beanstalk and standalone command-line",
    "start": "1222159",
    "end": "1227829"
  },
  {
    "text": "tools for the ec2 container service as well ok so giving developers lightweight",
    "start": "1227829",
    "end": "1232989"
  },
  {
    "text": "scope down packages that allow them to work with the specific services that they want to control using using",
    "start": "1232989",
    "end": "1238089"
  },
  {
    "text": "command-line tools and then on the server list development side of stuff again this is something that Paul",
    "start": "1238089",
    "end": "1243489"
  },
  {
    "text": "covered covered yesterday we also have this service application model which is",
    "start": "1243489",
    "end": "1248709"
  },
  {
    "text": "a declarative templating language for defining serverless applications running them on",
    "start": "1248709",
    "end": "1254619"
  },
  {
    "text": "some local or pushing them via cloud formation to two AWS for scaling and",
    "start": "1254619",
    "end": "1260799"
  },
  {
    "text": "deployment operations on AWS so there's a lot of stuff on there AWS amazon.com slash tools it's something",
    "start": "1260799",
    "end": "1268080"
  },
  {
    "text": "that not as many customers know about as they should in my view there's a lot of resources there so take a look at it",
    "start": "1268080",
    "end": "1273090"
  },
  {
    "text": "offline make sure that you're familiar with the tools that fit with your particular skills the programming",
    "start": "1273090",
    "end": "1278460"
  },
  {
    "text": "language the environment that you want to you want to work in okay don't forget there's a lot of stuff outside of AWS",
    "start": "1278460",
    "end": "1283470"
  },
  {
    "text": "that is developed open-source by the community as well okay any questions in",
    "start": "1283470",
    "end": "1289500"
  },
  {
    "text": "the room on that before we move on and talk a little bit more about code star and some of these other services okay",
    "start": "1289500",
    "end": "1297120"
  },
  {
    "text": "good stuff let's get on so the services that I talked about earlier Co commit Co",
    "start": "1297120",
    "end": "1303630"
  },
  {
    "text": "build Co pipelines and code deploy they map into the four major phases of a",
    "start": "1303630",
    "end": "1309179"
  },
  {
    "text": "typical DevOps release pipeline code committee is about source control and version history code build well you can",
    "start": "1309179",
    "end": "1315270"
  },
  {
    "text": "guess it's about building code pipelines well what you really want to do with pipelines is have logic gates where you",
    "start": "1315270",
    "end": "1321600"
  },
  {
    "text": "can run your build and then modify the invocation flow of your pipeline on the basis of what happens during your build",
    "start": "1321600",
    "end": "1328110"
  },
  {
    "text": "so you can consider it a build test integration framework actually and then deployment now in production is what we",
    "start": "1328110",
    "end": "1334529"
  },
  {
    "text": "can do with AWS code deploy and also with some other services that we have as",
    "start": "1334529",
    "end": "1339570"
  },
  {
    "text": "well okay and what we enable you to do is modify the pipelines to establish whatever",
    "start": "1339570",
    "end": "1346409"
  },
  {
    "text": "degree of automation is right for the environment that you're working in right the way through from continuous delivery",
    "start": "1346409",
    "end": "1352020"
  },
  {
    "text": "which is the default config for some of the demos that I'm going to show you in a second through to manually gated",
    "start": "1352020",
    "end": "1358559"
  },
  {
    "text": "processes where you will notify teams or individuals about releases achieving",
    "start": "1358559",
    "end": "1363840"
  },
  {
    "text": "certain stages within the pipeline and then have the opportunity to manually validate and continue the pipeline after",
    "start": "1363840",
    "end": "1370350"
  },
  {
    "text": "a manual verification step so you can essentially model your release process your release governance inside the",
    "start": "1370350",
    "end": "1378539"
  },
  {
    "text": "services that we provide and build something that allows you to let's say reflect your risk appetite and also",
    "start": "1378539",
    "end": "1385260"
  },
  {
    "text": "reflect your appetite for moving quickly you know there's a trade-off there the more manual steps you have in theory the",
    "start": "1385260",
    "end": "1392429"
  },
  {
    "text": "more control you will be the more verification you can have by human beings but if human beings go for coffee they go on",
    "start": "1392429",
    "end": "1399000"
  },
  {
    "text": "holiday that gets sick and if that happens you need to think about how you're managing your pipeline so that",
    "start": "1399000",
    "end": "1404250"
  },
  {
    "text": "you don't inhibit the productivity of your developers so you can choose a balance which is right for you we have a",
    "start": "1404250",
    "end": "1410159"
  },
  {
    "text": "lot of services in this area actually most of what we're talking about today in this session is these codes that are services but we also have the suite of",
    "start": "1410159",
    "end": "1416880"
  },
  {
    "text": "services for infrastructure as code and we have a set of services for monitoring and login I just want to say at this",
    "start": "1416880",
    "end": "1422130"
  },
  {
    "text": "stage it's not going to cover monitoring and logging here but there are certain considerations around monitoring and",
    "start": "1422130",
    "end": "1427409"
  },
  {
    "text": "logging in highly elastic environments which make the cloud quite a different place to more traditional environments",
    "start": "1427409",
    "end": "1432809"
  },
  {
    "text": "you know it's critically important if we want to benefit from from elasticity if we want to benefit from using these",
    "start": "1432809",
    "end": "1439440"
  },
  {
    "text": "abstracted services that we don't compromise our ability to instrument our applications and have observability",
    "start": "1439440",
    "end": "1445590"
  },
  {
    "text": "about what's happening in the environment as a result of wanting to drive towards towards those different operating models it's where tools like",
    "start": "1445590",
    "end": "1452039"
  },
  {
    "text": "x-ray come in for observability of mesh services and where tools like cloud",
    "start": "1452039",
    "end": "1457200"
  },
  {
    "text": "watch and cloud watch logs come in in the sense that they allow you to consolidate and centralize logs allowing",
    "start": "1457200",
    "end": "1462659"
  },
  {
    "text": "you to maintain access to application instrumentation even for systems that might have been scaled down in these",
    "start": "1462659",
    "end": "1468750"
  },
  {
    "text": "elastic environments that we're trying to create here for the cost optimization so just think about that it's not really",
    "start": "1468750",
    "end": "1474510"
  },
  {
    "text": "acceptable or a great idea to have a traditional on the hosts logging environment in the cloud you do need",
    "start": "1474510",
    "end": "1479730"
  },
  {
    "text": "something which allows you to centralize search and instrument your logs if you're going to use use this kind of",
    "start": "1479730",
    "end": "1485549"
  },
  {
    "text": "platform to its most effective extent okay so tell you what we're going to do",
    "start": "1485549",
    "end": "1490770"
  },
  {
    "text": "actually we're going to jump out of this presentation I'm going to show you some things on the console I think that's a better way to do this actually when it",
    "start": "1490770",
    "end": "1497130"
  },
  {
    "text": "comes to talking about about code star and about these other services and I do have a project in production on code",
    "start": "1497130",
    "end": "1506490"
  },
  {
    "text": "star right now which is something that I'm working on actually showed this last week in a demo to do with Amazon Lex and",
    "start": "1506490",
    "end": "1512460"
  },
  {
    "text": "building service chat box in the cloud and I have my lambda functions for my Amazon Lex project running in production",
    "start": "1512460",
    "end": "1520919"
  },
  {
    "text": "for myself inside code star was the C ICD platform using the version control the source code repository using the",
    "start": "1520919",
    "end": "1527880"
  },
  {
    "text": "build pipeline and using deployment and you can see that just like well just like me I ship a lot of stuff",
    "start": "1527880",
    "end": "1534690"
  },
  {
    "text": "that doesn't deploy because it fails due to my own inability to write Python and accurately construct Yama",
    "start": "1534690",
    "end": "1540419"
  },
  {
    "text": "okay so we'll come to that later but before I ask you for some debugging tips let's jump back out and take a look at",
    "start": "1540419",
    "end": "1548370"
  },
  {
    "text": "the code start console and we'll instantiate a new project and I'll show you how that looks okay so I've got my",
    "start": "1548370",
    "end": "1554159"
  },
  {
    "text": "rating bot which is working progress to create another project I just hit create a new project and you'll see here that I",
    "start": "1554159",
    "end": "1561720"
  },
  {
    "text": "am presented with a lot of template options okay and these are canned",
    "start": "1561720",
    "end": "1567570"
  },
  {
    "text": "pre-written example applications that you can directly deploy using code star you can filter okay so I talked about",
    "start": "1567570",
    "end": "1574980"
  },
  {
    "text": "AWS lambda before and maybe you know deploying something in node or Python so",
    "start": "1574980",
    "end": "1580830"
  },
  {
    "text": "we can filter down and look at the different service options that are available for us there's a node.js web",
    "start": "1580830",
    "end": "1587250"
  },
  {
    "text": "application there that uses AWS lambda and run service okay as an example but",
    "start": "1587250",
    "end": "1592830"
  },
  {
    "text": "there are also a lot of other options so depending on what you want to build or what deployment environment you're",
    "start": "1592830",
    "end": "1598919"
  },
  {
    "text": "interested in the project templates that we have here will deploy different resources build different pipelines and",
    "start": "1598919",
    "end": "1606419"
  },
  {
    "text": "use different deployment models okay but you should be able to find something that you can get started with it gives",
    "start": "1606419",
    "end": "1611610"
  },
  {
    "text": "you some familiarity with kind of applications that you're typically working on and use that as a starting point to familiarize yourself with the",
    "start": "1611610",
    "end": "1619379"
  },
  {
    "text": "service ok I'm going to go for that example I've talked about which was that node.js web application mostly because",
    "start": "1619379",
    "end": "1625529"
  },
  {
    "text": "it's really simple to work with and you'll get a good feel for how the application is constructed and get gets",
    "start": "1625529",
    "end": "1631019"
  },
  {
    "text": "deployed so we want to deploy to lambda so if I select that and then ask for a",
    "start": "1631019",
    "end": "1636450"
  },
  {
    "text": "project name so I'll go for a London loft demo and",
    "start": "1636450",
    "end": "1643169"
  },
  {
    "text": "you can see here make this little bit bigger you can see here the resources that are going to be deployed for this",
    "start": "1643169",
    "end": "1649860"
  },
  {
    "text": "particular project those will vary by template type that I select okay so here I'll have code commit Co build",
    "start": "1649860",
    "end": "1655590"
  },
  {
    "text": "CloudFormation from my deployment and Amazon Cloud works for my monitoring and I have to grin a I am role here which",
    "start": "1655590",
    "end": "1663840"
  },
  {
    "text": "gives code star the capability to create resources in these different services using a grant of trust within I am and",
    "start": "1663840",
    "end": "1673139"
  },
  {
    "text": "then once that's done code star will maintain this project rather will maintain the capability to modify",
    "start": "1673139",
    "end": "1680029"
  },
  {
    "text": "destroy and add resources to the specific instances that have been created for this project so each project",
    "start": "1680029",
    "end": "1686519"
  },
  {
    "text": "that I create gets a standalone I am policy with its own restricted set",
    "start": "1686519",
    "end": "1691799"
  },
  {
    "text": "of permissions and abling it to work only on the resources associated with that project of course you can modify that if you need to but but you can also",
    "start": "1691799",
    "end": "1699210"
  },
  {
    "text": "see it within the console which gives a nice element of transparency about the security and Trust setup actually so the",
    "start": "1699210",
    "end": "1706620"
  },
  {
    "text": "first thing that's happening here is my repo is getting created where my source code is going to be stored and you'll",
    "start": "1706620",
    "end": "1711960"
  },
  {
    "text": "see that that will be ready soon what's going to happen here is a git compatible endpoint is going to be",
    "start": "1711960",
    "end": "1717509"
  },
  {
    "text": "created for me to store my source code in and in order to access that get compatible endpoint I need some",
    "start": "1717509",
    "end": "1724409"
  },
  {
    "text": "credentials okay so I'm going to create some credentials to enable me to do this right now there's a guide here which",
    "start": "1724409",
    "end": "1733500"
  },
  {
    "text": "explains how to do that okay essentially what I need is an I am user",
    "start": "1733500",
    "end": "1739980"
  },
  {
    "text": "in my account that has a set of credentials for Kok commit associated",
    "start": "1739980",
    "end": "1745470"
  },
  {
    "text": "with it",
    "start": "1745470",
    "end": "1747799"
  },
  {
    "text": "you don't hit the right finger yeah let's go back in",
    "start": "1750970",
    "end": "1757120"
  },
  {
    "text": "so you can see my end points being created now in here I need a user that has access permissions to work with AWS",
    "start": "1762190",
    "end": "1771260"
  },
  {
    "text": "code commit so a set of get credentials and I'm going to use this well if they",
    "start": "1771260",
    "end": "1776690"
  },
  {
    "text": "put in embarrassment warnings about how poorly I'm managing my access keys and I",
    "start": "1776690",
    "end": "1782510"
  },
  {
    "text": "can say now those red exclamation marks are there it's really not appealing to me I think I'm gonna have to do",
    "start": "1782510",
    "end": "1787760"
  },
  {
    "text": "something about that a little bit later so ya rotate my access keys so I want to create a set of security credentials for",
    "start": "1787760",
    "end": "1794690"
  },
  {
    "text": "this user to work with get via our HTTP",
    "start": "1794690",
    "end": "1799730"
  },
  {
    "text": "endpoint so I'll generate some creds for that okay I can download those credentials and just store them in a",
    "start": "1799730",
    "end": "1806090"
  },
  {
    "text": "file you see I get a customized username and a specific password I can have multiple sets of credentials associated",
    "start": "1806090",
    "end": "1813559"
  },
  {
    "text": "with a specific users have now got two sets that are associated with this user and those credentials are here and it's",
    "start": "1813559",
    "end": "1821090"
  },
  {
    "text": "going to open them in sublime so you can see them okay so those are my my get credentials over here I now have my",
    "start": "1821090",
    "end": "1830029"
  },
  {
    "text": "endpoint so the first thing that I'm going to do is I'm gonna get clone that",
    "start": "1830029",
    "end": "1836779"
  },
  {
    "text": "endpoint and you'll see that I'm now asked for my creds so I need to copy and paste in the credentials that just got",
    "start": "1836779",
    "end": "1844100"
  },
  {
    "text": "created for me by the way if you're thinking about copying these credentials I just like to let you know that I'm",
    "start": "1844100",
    "end": "1850190"
  },
  {
    "text": "going to delete them immediately after the session so if you're watching on twitch okay so I'm connected to my",
    "start": "1850190",
    "end": "1858679"
  },
  {
    "text": "remote and I'm pulling down the objects associated with the template project I can CD into that directory now and",
    "start": "1858679",
    "end": "1867409"
  },
  {
    "text": "you'll see I've got a set of assets here let's make this a little bit bigger okay so this is a very very simple",
    "start": "1867409",
    "end": "1874490"
  },
  {
    "text": "application if you look at index j/s you'll see what's happening I'm going to",
    "start": "1874490",
    "end": "1879769"
  },
  {
    "text": "open a file called public / index.html I'm going to print some headers and then",
    "start": "1879769",
    "end": "1886820"
  },
  {
    "text": "I'm going to write that file out on the",
    "start": "1886820",
    "end": "1892279"
  },
  {
    "text": "default port for this application so you connect to it you just get the contents of that file streamed back",
    "start": "1892279",
    "end": "1897470"
  },
  {
    "text": "to you it's about as simple as you can get with a node.js web app and if we jump into the public directory and I'll",
    "start": "1897470",
    "end": "1903620"
  },
  {
    "text": "just edit this index dot HTML here you'll see that this is a regular pieces",
    "start": "1903620",
    "end": "1909770"
  },
  {
    "text": "of HTML I just want you to pay attention to the bottom here where it says designed and developed with love in",
    "start": "1909770",
    "end": "1915080"
  },
  {
    "text": "Seattle okay so we're going to return to that a little bit later and push a change to this application there so",
    "start": "1915080",
    "end": "1920600"
  },
  {
    "text": "we'll skip on I have my creds and hopefully in showing you that I'll have given enough time for my application to",
    "start": "1920600",
    "end": "1928880"
  },
  {
    "text": "deploy or it's in the process of building right now so I've done that already so this is the code start",
    "start": "1928880",
    "end": "1935840"
  },
  {
    "text": "dashboard that I showed you before in its fresh day and you can see there's a few different panels on here a few",
    "start": "1935840",
    "end": "1942110"
  },
  {
    "text": "different widgets okay there's a wiki which it will be editable by individuals that are working on this project there's",
    "start": "1942110",
    "end": "1948410"
  },
  {
    "text": "a commit history which pulls in the commit history from the commit repo associated with this project and I've",
    "start": "1948410",
    "end": "1955010"
  },
  {
    "text": "got my first commit there there's the pipeline which you can see over here that's currently in the process of",
    "start": "1955010",
    "end": "1961070"
  },
  {
    "text": "building my package for export okay and I've already done my commit so the",
    "start": "1961070",
    "end": "1966650"
  },
  {
    "text": "pipeline is triggered by commit operation Xin code commit each time I make a new commit to the master branch my pipeline will get initiated and on",
    "start": "1966650",
    "end": "1973850"
  },
  {
    "text": "the next pole which is normally a minute or so later and that will start my build and push through and ultimately that",
    "start": "1973850",
    "end": "1978980"
  },
  {
    "text": "will end up getting deployed and then I can also create on the side over here I",
    "start": "1978980",
    "end": "1985549"
  },
  {
    "text": "can create team members so I can create additional iam users and Alec a set of I",
    "start": "1985549",
    "end": "1991790"
  },
  {
    "text": "am I am credentials that are limited only to this code star project to those users and that facilitates collaboration",
    "start": "1991790",
    "end": "1999110"
  },
  {
    "text": "obviously allowing users to push to my git repo and also allowing them to log",
    "start": "1999110",
    "end": "2004510"
  },
  {
    "text": "into the dashboard themselves see the status of their own builds and edit these edit things like the wiki see the",
    "start": "2004510",
    "end": "2011980"
  },
  {
    "text": "commit history for different branches etc so the service provides a collaboration environment for the team",
    "start": "2011980",
    "end": "2017830"
  },
  {
    "text": "that are working on this particular application as well ok and then I have",
    "start": "2017830",
    "end": "2022960"
  },
  {
    "text": "my metrics from cloud watch that are pulled in here these are customized by application type so",
    "start": "2022960",
    "end": "2029010"
  },
  {
    "text": "in the case of surveillance applications I'm going to get metrics from my lambda function here telling me how many times",
    "start": "2029010",
    "end": "2034620"
  },
  {
    "text": "my lambda function has been invoked and also showing me my error rate as well okay so I'll get some pertinent metrics",
    "start": "2034620",
    "end": "2040169"
  },
  {
    "text": "there and you can also connect this tool to JIRA for issue tracking as well I'm",
    "start": "2040169",
    "end": "2045630"
  },
  {
    "text": "not going to do that in the demo actually takes a little bit of time but there is integration there with JIRA and your JIRA issues log history will appear",
    "start": "2045630",
    "end": "2052530"
  },
  {
    "text": "in this panel once you've made that integration as well right let's just jump out of this while we allow the",
    "start": "2052530",
    "end": "2058169"
  },
  {
    "text": "allow the build to complete and talk about some of the services that are getting created here in a little bit",
    "start": "2058169",
    "end": "2063540"
  },
  {
    "text": "more detail",
    "start": "2063540",
    "end": "2066830"
  },
  {
    "text": "actually well I'll show you this in the console as well it's probably a better way to do it and looking at slides actually so as I said before I'm",
    "start": "2084030",
    "end": "2090899"
  },
  {
    "text": "creating instances of these other AWS services but I can still access the",
    "start": "2090900",
    "end": "2096149"
  },
  {
    "text": "consoles for those service instances that I'm creating so here is the code commit repo for the simple sample",
    "start": "2096150",
    "end": "2103830"
  },
  {
    "text": "project that I've just deployed okay and you've got features here like the ability to see the commit history pretty",
    "start": "2103830",
    "end": "2111510"
  },
  {
    "text": "sparse at the moment to visualize and compare commits to work with branches",
    "start": "2111510",
    "end": "2118740"
  },
  {
    "text": "and to do other operations that you would typically do inside this kind of",
    "start": "2118740",
    "end": "2124500"
  },
  {
    "text": "source control environment so that's the first thing that gets built the second thing that gets built is the build",
    "start": "2124500",
    "end": "2129720"
  },
  {
    "text": "pipeline and in the cases of these node.js applications this is really",
    "start": "2129720",
    "end": "2135090"
  },
  {
    "text": "really simple what we are going to do as a component of our build is packaged up",
    "start": "2135090",
    "end": "2140610"
  },
  {
    "text": "a zip file that contains the deployable that will then be pushed out into AWS lambda so the build process is as simple",
    "start": "2140610",
    "end": "2147150"
  },
  {
    "text": "as packaging up the source together with any dependencies that are required",
    "start": "2147150",
    "end": "2152390"
  },
  {
    "text": "constructing the zip file and depositing it on on Amazon s3 ready for deployment",
    "start": "2152390",
    "end": "2160170"
  },
  {
    "text": "to AWS lambda but we can drill down into the whole process using this console so",
    "start": "2160170",
    "end": "2166680"
  },
  {
    "text": "we can actually look at where our builds have been deposited we have a build history so this is our most recent build",
    "start": "2166680",
    "end": "2174720"
  },
  {
    "text": "here we can see the exact artifact that's being created by our build",
    "start": "2174720",
    "end": "2179880"
  },
  {
    "text": "process and we can grab it if we need to do so so I'm just illustrating here that you have access to these underlying",
    "start": "2179880",
    "end": "2185340"
  },
  {
    "text": "service components in deployment the",
    "start": "2185340",
    "end": "2191820"
  },
  {
    "text": "same thing so we can see the create history for the cloud formation stack which is being used to deploy this",
    "start": "2191820",
    "end": "2198660"
  },
  {
    "text": "particular application once again we can dig into that and maybe I'll show you on my own project how we can use that for",
    "start": "2198660",
    "end": "2204090"
  },
  {
    "text": "debugging as well in a second and then you've got your pipeline which is the",
    "start": "2204090",
    "end": "2210270"
  },
  {
    "text": "steps that are required to go from the committed source commit through the",
    "start": "2210270",
    "end": "2216120"
  },
  {
    "text": "build process and into Klieman you can modify this of course you can make changes to this introducing",
    "start": "2216120",
    "end": "2221950"
  },
  {
    "text": "notification steps into introducing manual verification processes as you see so all the services are exposed to you",
    "start": "2221950",
    "end": "2229750"
  },
  {
    "text": "underneath underneath the hood once you've done the initial project initialization okay we've got our",
    "start": "2229750",
    "end": "2235510"
  },
  {
    "text": "endpoint now so our applications fully deployed and if you hit that endpoint",
    "start": "2235510",
    "end": "2242880"
  },
  {
    "text": "you'll see that's our app so we've got our SVG which draws our space needle",
    "start": "2242880",
    "end": "2249190"
  },
  {
    "text": "profile and then we've got the rest of the content that was in that HTML template that I showed you earlier and",
    "start": "2249190",
    "end": "2255490"
  },
  {
    "text": "I'm gonna make it commit now to that repo and just show you how the CI CD pipeline gets automatically initiated so",
    "start": "2255490",
    "end": "2263590"
  },
  {
    "text": "let's edit this index dot HTML file let's just change this yeah",
    "start": "2263590",
    "end": "2276120"
  },
  {
    "text": "sorry the question is do we support yeah",
    "start": "2278730",
    "end": "2283950"
  },
  {
    "text": "we don't have supporting the GUI for merging and pull requests today so that's something that needs to be done via the CLI okay I'm sure it will come",
    "start": "2283950",
    "end": "2291510"
  },
  {
    "text": "but it's not there today what we do have is comparisons of versions so you can",
    "start": "2291510",
    "end": "2297270"
  },
  {
    "text": "DIF with in the console but we don't sort currently support merging in the console so again you can have that yes",
    "start": "2297270",
    "end": "2305040"
  },
  {
    "text": "yeah you can't have that you could have different branches deployed to different environments actually that's a very common use case where your betta betta",
    "start": "2305040",
    "end": "2313230"
  },
  {
    "text": "branch obviously gets deployed to separate endpoints for testing yeah it's a very common use case so that's how a",
    "start": "2313230",
    "end": "2318380"
  },
  {
    "text": "modification will add that",
    "start": "2318380",
    "end": "2323539"
  },
  {
    "text": "okay so changed and committed that file and if you jump back into the console now and quickly reload see a couple of",
    "start": "2337630",
    "end": "2345310"
  },
  {
    "text": "things",
    "start": "2345310",
    "end": "2347490"
  },
  {
    "text": "first thing is we've got our commit you see we haven't actually kicked off the build pipeline the X we've got this regular polling that takes place but in",
    "start": "2355900",
    "end": "2363039"
  },
  {
    "text": "a second that will initiate and I can show you the comparison feature now so in that most recent commit you can see",
    "start": "2363039",
    "end": "2370990"
  },
  {
    "text": "as you would expect the diff between that file and the and the prior version if we did have multiple commits within",
    "start": "2370990",
    "end": "2377529"
  },
  {
    "text": "that branch you can obviously diff between selected commits as well if you like me and you have to wind back a long way so let's jump back over into my",
    "start": "2377529",
    "end": "2384670"
  },
  {
    "text": "other project while that pipeline runs you can see that's initiated now and I'll just show you some of the debugging",
    "start": "2384670",
    "end": "2390250"
  },
  {
    "text": "features that exist if you have multiple if you have a more complex project so over here in rating bar we've currently",
    "start": "2390250",
    "end": "2398140"
  },
  {
    "text": "got a failure so I've deployed a version of my UML template here actually it doesn't work",
    "start": "2398140",
    "end": "2403809"
  },
  {
    "text": "did that this morning and you'll see that we have deploy history that we can dive into here and this will show a",
    "start": "2403809",
    "end": "2412049"
  },
  {
    "text": "history of deployments via the pipeline depending on which tool you're using you'll get different error output here",
    "start": "2412049",
    "end": "2417910"
  },
  {
    "text": "in this particular case you can see that I've introduced an error into my",
    "start": "2417910",
    "end": "2424170"
  },
  {
    "text": "template and we're getting debugging data there which comes back okay so that will not actually have been deployed out",
    "start": "2424170",
    "end": "2430660"
  },
  {
    "text": "into production and the prior version of my application will still be active so it essentially halts the pipeline with a",
    "start": "2430660",
    "end": "2436839"
  },
  {
    "text": "with the deployment failure at that point and you've got all of the familiar detail that you would expect within",
    "start": "2436839",
    "end": "2444490"
  },
  {
    "text": "within CloudFormation here including your original in this case it's a Sam template with extensions that's been",
    "start": "2444490",
    "end": "2450579"
  },
  {
    "text": "used for deployments and I'm being told that I've got a null value which is not allowed within my template in my policy",
    "start": "2450579",
    "end": "2458500"
  },
  {
    "text": "documents so somewhere here somewhere here I've got a issue in my template",
    "start": "2458500",
    "end": "2464859"
  },
  {
    "text": "that I'm in to debug a little bit later on so that's the kind of debugging that you get and then on the metrics side of",
    "start": "2464859",
    "end": "2471490"
  },
  {
    "text": "stuff should also have some usage in here yeah you can you can jump out as",
    "start": "2471490",
    "end": "2477760"
  },
  {
    "text": "well into the metrics console there is usage on this application but I think it's from over the weekend",
    "start": "2477760",
    "end": "2485190"
  },
  {
    "text": "there we go okay so you can there's a 24-hour period shown directly within the console then you can jump out and",
    "start": "2489349",
    "end": "2496200"
  },
  {
    "text": "observe the instrumentation that comes in from a longer time period if you wish to do so this is invocation counter",
    "start": "2496200",
    "end": "2507119"
  },
  {
    "text": "lambda function that is deployed by that particular pipeline",
    "start": "2507119",
    "end": "2511700"
  },
  {
    "text": "question-is doesn't do rollbacks yeah so",
    "start": "2519980",
    "end": "2526290"
  },
  {
    "text": "that's a really good question I'll just the question is do we support rollbacks depending on what kind of deployment",
    "start": "2526290",
    "end": "2532560"
  },
  {
    "text": "you're doing you may or may not have a requirement for that with one of the service components which is called code",
    "start": "2532560",
    "end": "2540180"
  },
  {
    "text": "deploy maybe it's worthwhile just talking about these different options actually because I kind of skimmed over that in my rush to get to the demo so",
    "start": "2540180",
    "end": "2547080"
  },
  {
    "text": "we'll talk about these different deployment options it is something that is worth digging into so what are the",
    "start": "2547080",
    "end": "2553170"
  },
  {
    "text": "differences between these three different options maybe is a good question to answer in response to that so lambda obviously I've got an elastic",
    "start": "2553170",
    "end": "2559890"
  },
  {
    "text": "fleet of ec2 instances which are hidden away from me the the lambda function is",
    "start": "2559890",
    "end": "2565890"
  },
  {
    "text": "the unit of deployment and the abstraction level okay and I pushed the new version of my lambda function in via",
    "start": "2565890",
    "end": "2572580"
  },
  {
    "text": "our control plane via the AWS lambda API endpoint that results in the containers",
    "start": "2572580",
    "end": "2577770"
  },
  {
    "text": "that represent that lambda function being refreshed and a new version gets deployed out into my fleet okay it's a",
    "start": "2577770",
    "end": "2583200"
  },
  {
    "text": "atomic operation it's either successful or it's not if it's successful then all",
    "start": "2583200",
    "end": "2588240"
  },
  {
    "text": "subsequent launches of my lambda function will be the new version if it's not successful then I'm still going to",
    "start": "2588240",
    "end": "2594570"
  },
  {
    "text": "be running on the prior version I had because I'm going to get a error back from my deployment endpoint saying I",
    "start": "2594570",
    "end": "2599940"
  },
  {
    "text": "can't deploy that version of the function so that's that you're not going to have it at a partial deployment in that case it does it does it does but we",
    "start": "2599940",
    "end": "2612180"
  },
  {
    "text": "don't currently support deployment to Greengrass fire this service okay so that would be a very different console the elastic Beanstalk it's a management",
    "start": "2612180",
    "end": "2619050"
  },
  {
    "text": "runtime container for with applications or API endpoints okay runtime container means dotnet",
    "start": "2619050",
    "end": "2625980"
  },
  {
    "text": "docker containers Java PHP Ruby Python there could be others as well okay so",
    "start": "2625980",
    "end": "2631800"
  },
  {
    "text": "there what you're doing is packaging up a code base for deployment in a",
    "start": "2631800",
    "end": "2638460"
  },
  {
    "text": "specified format with some metadata you ship that over to our elastic Beanstalk endpoint as a zip file okay we evaluate",
    "start": "2638460",
    "end": "2646470"
  },
  {
    "text": "via the elastic Beanstalk service and we deployed the infrastructure resources that are required",
    "start": "2646470",
    "end": "2651480"
  },
  {
    "text": "to run the application automatically for you you can specify things in the metadata like the instance type you want",
    "start": "2651480",
    "end": "2657180"
  },
  {
    "text": "to use and other attributes okay and that will result in your resources",
    "start": "2657180",
    "end": "2662640"
  },
  {
    "text": "getting deployed here what we do is Bluegreen deployment so when you deploy a new application via elastic beanstalk",
    "start": "2662640",
    "end": "2668670"
  },
  {
    "text": "we deploy it onto a new set of resources we health check it and once it pass health check then we cut over the",
    "start": "2668670",
    "end": "2675210"
  },
  {
    "text": "endpoint to the new version of the application using a DNS update so there we don't have the partial deployment if",
    "start": "2675210",
    "end": "2680520"
  },
  {
    "text": "issue either it's a binary transition from one version of the app to another ok subject to the TTL and registration",
    "start": "2680520",
    "end": "2688650"
  },
  {
    "text": "with load balancers potentially code deploy is different this allows you to deploy to a pre-existing fleet of ec2",
    "start": "2688650",
    "end": "2699240"
  },
  {
    "text": "instances okay you can create new instances deploy the code deploy agent",
    "start": "2699240",
    "end": "2704250"
  },
  {
    "text": "onto them and then subsequently deploy software onto those instances or you can install the code deploy agent onto an",
    "start": "2704250",
    "end": "2710970"
  },
  {
    "text": "existing fleet of ec2 instances and then start to deploy software using it it's your choice what's happening here is the",
    "start": "2710970",
    "end": "2717390"
  },
  {
    "text": "code deploy agent it's communicating with our control plane regularly to check whether there are new software",
    "start": "2717390",
    "end": "2723570"
  },
  {
    "text": "versions available for deployment uses an iam role for that so it has to be authorized to do so if there are new",
    "start": "2723570",
    "end": "2729570"
  },
  {
    "text": "versions it will click the artifact it will use yam old scripts or yam well definition files that are deployed",
    "start": "2729570",
    "end": "2736190"
  },
  {
    "text": "within code deploy which contain a kind of metadata specification of how the",
    "start": "2736190",
    "end": "2742530"
  },
  {
    "text": "application is to be installed you can have pre installation scripts or",
    "start": "2742530",
    "end": "2747810"
  },
  {
    "text": "executables post installation scripts or executables customized health checking etc and this is a situation where you",
    "start": "2747810",
    "end": "2754980"
  },
  {
    "text": "could get a partially failed deployment you know you could get midway through the deployment and some of the machines could start to fail this for this reason",
    "start": "2754980",
    "end": "2763790"
  },
  {
    "text": "code deploy is tunable ok so I can specify what percentage of my fleet do I",
    "start": "2763790",
    "end": "2770340"
  },
  {
    "text": "wish to deploy to concurrently in terms of a percentage or a number of machines ok so if I've got a fleet of 30 machines",
    "start": "2770340",
    "end": "2778080"
  },
  {
    "text": "that are running this particular component I could say deploy to 10% concurrently that would",
    "start": "2778080",
    "end": "2784590"
  },
  {
    "text": "take 10% of the machines out of service deploy the new software to that 10% of",
    "start": "2784590",
    "end": "2790050"
  },
  {
    "text": "machines and then health check and if that health check was successful then it would move on to the next 10% of",
    "start": "2790050",
    "end": "2796500"
  },
  {
    "text": "machines and the next and the next so it's not so much rollback as preventing cascading effects where large amounts of",
    "start": "2796500",
    "end": "2803520"
  },
  {
    "text": "the fleet are taken down came to roll back to rollback you'd actually roll forward to a prior version of your app",
    "start": "2803520",
    "end": "2809430"
  },
  {
    "text": "essentially so redeploy what you had before one thing to be aware of with",
    "start": "2809430",
    "end": "2814770"
  },
  {
    "text": "code deploy is it is aware of availability zones so it will minimize the impact of a concurrent large",
    "start": "2814770",
    "end": "2821160"
  },
  {
    "text": "deployment event and availability zone failure my three machines that I took down for example we'd make sure they",
    "start": "2821160",
    "end": "2827550"
  },
  {
    "text": "were one from availability zone a one from B and one from C so we try to distribute the deployment operation",
    "start": "2827550",
    "end": "2834210"
  },
  {
    "text": "across the availability zones in any specific region okay so how are we doing",
    "start": "2834210",
    "end": "2842190"
  },
  {
    "text": "for time you know pretty much out of time let's just jump over and take a quick look at that redeployment okay so you can see",
    "start": "2842190",
    "end": "2849810"
  },
  {
    "text": "that the pipeline has run if I hit the application endpoint again now you see",
    "start": "2849810",
    "end": "2858900"
  },
  {
    "text": "that I've got the latest version of my app deployed that I've got hands-off deployment into production just by",
    "start": "2858900",
    "end": "2864660"
  },
  {
    "text": "committing into my by committing into my repo okay so there's a couple of questions on twitch which I must confess",
    "start": "2864660",
    "end": "2872010"
  },
  {
    "text": "before getting to them that I don't know the answer to but I'm going to read them out anyway just to prove that we are taking live",
    "start": "2872010",
    "end": "2877110"
  },
  {
    "text": "questions so first question is from M fieldhouse who asks how you use code star with chalice",
    "start": "2877110",
    "end": "2883200"
  },
  {
    "text": "so chalice is a service deployment framework for python based web apps with",
    "start": "2883200",
    "end": "2891720"
  },
  {
    "text": "AWS lambda so I would imagine the way that you would do it would be to modify",
    "start": "2891720",
    "end": "2896940"
  },
  {
    "text": "the assets that you're building form to use that as an input but it's something",
    "start": "2896940",
    "end": "2902880"
  },
  {
    "text": "that I'd want to experiment with actually and I will take a look at that after this session and I'll put",
    "start": "2902880",
    "end": "2908850"
  },
  {
    "text": "something on my Twitter Twitter when I discover how to do it so find me on Twitter or enm with 4ms and I will make",
    "start": "2908850",
    "end": "2914760"
  },
  {
    "text": "sure that I post that later on today once a bit of research on it the second question is about federated users so an",
    "start": "2914760",
    "end": "2924349"
  },
  {
    "text": "average just answered this for me very kindly and prompted me with the answers so it comes from six corners it says if you're logged in as a federated user",
    "start": "2924349",
    "end": "2930589"
  },
  {
    "text": "code star reports an error message saying that it doesn't support federated access which is correct you need an I am",
    "start": "2930589",
    "end": "2937220"
  },
  {
    "text": "user in the account to use code star today so it doesn't support federated access and also you can't use an account",
    "start": "2937220",
    "end": "2943519"
  },
  {
    "text": "that has root privileges you have to have a user in the I am namespace in order to use code star within that",
    "start": "2943519",
    "end": "2949640"
  },
  {
    "text": "account and I guess that's a dependency because we're allowing the console to create these additional users that",
    "start": "2949640",
    "end": "2955609"
  },
  {
    "text": "represent members of your team so if you do really need federated access I would suggest visiting the service forum for",
    "start": "2955609",
    "end": "2962180"
  },
  {
    "text": "code star on the WS service forums and raising that as a use case requirement that you have and the team will see it",
    "start": "2962180",
    "end": "2968000"
  },
  {
    "text": "and be able to to act upon it okay so that's all the questions I have from the stream does anybody in the room have any questions quite a few so go ahead start",
    "start": "2968000",
    "end": "2975260"
  },
  {
    "text": "front so the question is is the build",
    "start": "2975260",
    "end": "2982970"
  },
  {
    "text": "artifact deployed behind the public as to the endpoint and the answer today is yes it is so it would end up behind a",
    "start": "2982970",
    "end": "2989420"
  },
  {
    "text": "public s to the endpoint at this stage again if you have a requirement to change that I would suggest raising it",
    "start": "2989420",
    "end": "2994670"
  },
  {
    "text": "with your seat with your team I know what your county from so I'd suggest raising it with your SA next car back",
    "start": "2994670",
    "end": "3002430"
  },
  {
    "text": "yes",
    "start": "3004319",
    "end": "3007319"
  },
  {
    "text": "so the question is the code deploy so I coached our project deploys its own",
    "start": "3012270",
    "end": "3018310"
  },
  {
    "text": "cloud formation stack what if the systems that we're building within our project have a dependency on something",
    "start": "3018310",
    "end": "3025000"
  },
  {
    "text": "outside well there's actually a good answer to that question which is there are two cloud formation stacks created",
    "start": "3025000",
    "end": "3031210"
  },
  {
    "text": "by the service okay there's one which is kind of the meta stack the instantiates",
    "start": "3031210",
    "end": "3036820"
  },
  {
    "text": "the resources that are required for the pipeline and then there's another cloud formation stack which is managed within",
    "start": "3036820",
    "end": "3042220"
  },
  {
    "text": "the pipeline where you put your dependencies for your application okay and I'll show you that in the console",
    "start": "3042220",
    "end": "3047680"
  },
  {
    "text": "console now so if you see these two things you'll see one of them is this is",
    "start": "3047680",
    "end": "3054220"
  },
  {
    "text": "the stack for the pipeline okay and this is the stack for the application that",
    "start": "3054220",
    "end": "3060520"
  },
  {
    "text": "the pipeline is managing so if I needed to connect my nodejs web application to",
    "start": "3060520",
    "end": "3066070"
  },
  {
    "text": "let's say dynamo DB I would modify this template here which is actually under",
    "start": "3066070",
    "end": "3074200"
  },
  {
    "text": "source control inside the repository so",
    "start": "3074200",
    "end": "3082690"
  },
  {
    "text": "if I want to add more resources to my application I can modify template Yamal here by extending this with additional",
    "start": "3082690",
    "end": "3090490"
  },
  {
    "text": "resources this is a sound template but you can use regular cloud formation resources within a Sam template okay so",
    "start": "3090490",
    "end": "3096760"
  },
  {
    "text": "what what Sam does is it provides higher level abstractions for the service function type for the dynamodb table",
    "start": "3096760",
    "end": "3103720"
  },
  {
    "text": "type and for the API endpoint type but I can still include regular CloudFormation resources as well so just extend this",
    "start": "3103720",
    "end": "3109570"
  },
  {
    "text": "template with my other resources okay and in fact if I jump over into my other project I can show you an example of",
    "start": "3109570",
    "end": "3118510"
  },
  {
    "text": "that very quickly",
    "start": "3118510",
    "end": "3121050"
  },
  {
    "text": "so have the source of my rating bought here which is my Lex conversational bot that I'm working on at the moment and",
    "start": "3133690",
    "end": "3139390"
  },
  {
    "text": "there's a template here and you'll recall that template was throwing out an error because of the syntax issue with",
    "start": "3139390",
    "end": "3145630"
  },
  {
    "text": "with one of these other resources but you can see here I'm defining additional iam roles at this stage within my",
    "start": "3145630",
    "end": "3153430"
  },
  {
    "text": "template so that is not a resource that was created by the template project this",
    "start": "3153430",
    "end": "3160780"
  },
  {
    "text": "is a resource that I've created myself and you'll note that it's got a Kinesis access policy embedded within it so I'm",
    "start": "3160780",
    "end": "3166210"
  },
  {
    "text": "setting up my lambda function to communicate with the Kinesis stream which is where I'm going to send the",
    "start": "3166210",
    "end": "3172329"
  },
  {
    "text": "validated intents that come from users that are using the service I'm going to stream them via Kinesis to elasticsearch",
    "start": "3172329",
    "end": "3178150"
  },
  {
    "text": "for Vaes visualization so you can see how you can just extend that template each time the CIC CD process runs",
    "start": "3178150",
    "end": "3184750"
  },
  {
    "text": "template is reevaluated and resources will be added or changed as appropriate okay so you have two levels of",
    "start": "3184750",
    "end": "3190869"
  },
  {
    "text": "CloudFormation stat last question",
    "start": "3190869",
    "end": "3194640"
  },
  {
    "text": "yep yeah so the question is can you modify the services that are being used",
    "start": "3205179",
    "end": "3211160"
  },
  {
    "text": "within the pipeline the answer is let is yes as long as the service integrations that you need is",
    "start": "3211160",
    "end": "3216229"
  },
  {
    "text": "supported so for example with code pipeline you can integrate it with github via github web hooks so when you",
    "start": "3216229",
    "end": "3222890"
  },
  {
    "text": "make a commit to a branch github can hit an AWS endpoint with a web hook we can",
    "start": "3222890",
    "end": "3228469"
  },
  {
    "text": "then pull down the branch using a trust relationship that's established initiate the pipeline that's actually supported",
    "start": "3228469",
    "end": "3234529"
  },
  {
    "text": "natively within the code pipeline console setting up that integration so",
    "start": "3234529",
    "end": "3239599"
  },
  {
    "text": "you can do that as long as the relevant service integrations are supported if the relevant service integrations are",
    "start": "3239599",
    "end": "3246319"
  },
  {
    "text": "not supported slightly more complex but you can implement custom actions within pipelines using AWS lambda so you could",
    "start": "3246319",
    "end": "3253819"
  },
  {
    "text": "write glue code within AWS lambda for custom integration if necessary it's an advanced use case it's certainly",
    "start": "3253819",
    "end": "3259699"
  },
  {
    "text": "possible to do that okay we're out of time I think it's now 5:00 - which I think is coming up to the end of this",
    "start": "3259699",
    "end": "3266329"
  },
  {
    "text": "session so I'll thank you for joining us today thanks for participating on the stream and we'll see you soon for the",
    "start": "3266329",
    "end": "3272479"
  },
  {
    "text": "next session Thanks",
    "start": "3272479",
    "end": "3275349"
  }
]