[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "good evening my name is colum and I'm really excited to get this talked so I'm",
    "start": "60",
    "end": "7830"
  },
  {
    "text": "a principal engineer I worked at Amazon Web Services I've been there just over 10 years and at Amazon we have a series",
    "start": "7830",
    "end": "16049"
  },
  {
    "text": "of talks called principle of Amazon talks where every week somebody from our principle community or senior engineer",
    "start": "16049",
    "end": "22189"
  },
  {
    "text": "always an engineer we try never to let managers do it give a technical talk internally and just talk about cool",
    "start": "22189",
    "end": "30090"
  },
  {
    "text": "interesting topics and almost everything in this talk is adapted from Pia way talks that either I've given or others",
    "start": "30090",
    "end": "36600"
  },
  {
    "text": "have given that at AWS I'm what I'm gonna talk about today is just one things I'm like super passionate about",
    "start": "36600",
    "end": "43110"
  },
  {
    "text": "and think is really awesome and it's like one of the secrets to how we build",
    "start": "43110",
    "end": "49140"
  },
  {
    "text": "stable and reliable systems and it's how we build control systems so everybody's",
    "start": "49140",
    "end": "55850"
  },
  {
    "start": "55000",
    "end": "170000"
  },
  {
    "text": "probably familiar with some control systems right a really simple example is just like a remote control right and so",
    "start": "55850",
    "end": "63120"
  },
  {
    "text": "it's a device and you give it some indication of some state you would like to achieve where you press play and you",
    "start": "63120",
    "end": "68939"
  },
  {
    "text": "expect a video to play and the controller's job is to make the universe reflect that intent right it's meant to",
    "start": "68939",
    "end": "75299"
  },
  {
    "text": "you know turn your TV on and the videos supposed to start playing and you know",
    "start": "75299",
    "end": "81420"
  },
  {
    "text": "controllers have been around a very very very long time but they can get really really complicated really quickly like a",
    "start": "81420",
    "end": "87360"
  },
  {
    "text": "really simple example is you know when I'm at home and when I have my TV and I",
    "start": "87360",
    "end": "93689"
  },
  {
    "text": "have my audio system and I press play on a remote sometimes you know the signal",
    "start": "93689",
    "end": "99720"
  },
  {
    "text": "gets to the TV and I see the video playing but it does not get to the you",
    "start": "99720",
    "end": "104850"
  },
  {
    "text": "know - um and I can't hear the audio right that it probably happened to you if you've got any kind of universe room",
    "start": "104850",
    "end": "111119"
  },
  {
    "text": "oh it's a really really common situation in distributed systems land you know",
    "start": "111119",
    "end": "116579"
  },
  {
    "text": "where we study distributed systems on networks and so on we would call this a network partition you know we would say",
    "start": "116579",
    "end": "123630"
  },
  {
    "text": "that the controller in this case can see the TV and obviously the TV can see it but you",
    "start": "123630",
    "end": "129239"
  },
  {
    "text": "know the controller can't see the hi-fi system and so we don't get it perfect control system I don't get my nice",
    "start": "129239",
    "end": "135840"
  },
  {
    "text": "playing video and I don't get to hear it right but at a higher level right besides like the details of okay the",
    "start": "135840",
    "end": "142980"
  },
  {
    "text": "signal didn't quite get there and we have some kind of network partition going on there's a bigger problem with this control system which is just a",
    "start": "142980",
    "end": "149489"
  },
  {
    "text": "lacks of feedback loop right I'm pressing a button and I'm telling it what to do but it has no idea whether",
    "start": "149489",
    "end": "155730"
  },
  {
    "text": "that actually happened or not right it's got no feedback mechanism from the TV or",
    "start": "155730",
    "end": "161250"
  },
  {
    "text": "or the audio system just trollin signals out there and hoping for the best it's what's called an open-loop controller",
    "start": "161250",
    "end": "167010"
  },
  {
    "text": "because just has no feedback loop actually earlier this year you know my",
    "start": "167010",
    "end": "172019"
  },
  {
    "start": "170000",
    "end": "215000"
  },
  {
    "text": "colleagues and other parts of Amazon came out with a new fire TV cube that attempts to fix this in that you know",
    "start": "172019",
    "end": "179250"
  },
  {
    "text": "it's it actually does have a feedback loop it's got a special signal and the on the HDMI cable that it can tell what",
    "start": "179250",
    "end": "186030"
  },
  {
    "text": "state the TV is in and it's got a microphone because it's got a lacks ability and so the microphone can tell whether the audio is playing or not and",
    "start": "186030",
    "end": "192480"
  },
  {
    "text": "so if it detects that things aren't in the state they should be you can kind of drive it to that behavior it's actually",
    "start": "192480",
    "end": "198389"
  },
  {
    "text": "some pretty complex control stuff going on and this is just for a remote control in a living room right something we've",
    "start": "198389",
    "end": "205079"
  },
  {
    "text": "been doing for like 80 years there's been TV remotes and we're still working",
    "start": "205079",
    "end": "210900"
  },
  {
    "text": "on them it's a really really simple example and the point of this talk rate is to take cases like that and solutions",
    "start": "210900",
    "end": "219540"
  },
  {
    "start": "215000",
    "end": "270000"
  },
  {
    "text": "like that and kind of answer the questions like how do we build simple and stable control systems right how do",
    "start": "219540",
    "end": "226409"
  },
  {
    "text": "we control systems as large as say Amazon s3 right a really really big system with stability and reliability",
    "start": "226409",
    "end": "234229"
  },
  {
    "text": "and hopefully this talk is gonna be kind of a little mind-opening as well I'm gonna give a few stories of things that",
    "start": "234229",
    "end": "241680"
  },
  {
    "text": "have happened at Amazon and what we learned from them and how those feed into our design review processes and I'm",
    "start": "241680",
    "end": "246780"
  },
  {
    "text": "also gonna give you ten patterns that hopefully you haven't seen all of them hopefully there's at least you know one",
    "start": "246780",
    "end": "253590"
  },
  {
    "text": "new one in there something that you can take away and then go deep on in your own time if you'd like to but goes to",
    "start": "253590",
    "end": "259169"
  },
  {
    "text": "give you these jumping off points into all aspects of controlling systems and on things you probably haven't seen",
    "start": "259169",
    "end": "265260"
  },
  {
    "text": "before so how would it be really like that so I'm gonna copy it all this I'm gonna put one like asterisks on",
    "start": "265260",
    "end": "271820"
  },
  {
    "start": "270000",
    "end": "325000"
  },
  {
    "text": "everything which is one of my favorite quotes it's very very old quote from",
    "start": "271820",
    "end": "277490"
  },
  {
    "text": "Aristotle you know two and a half thousand years ago that emphasizes if",
    "start": "277490",
    "end": "283130"
  },
  {
    "text": "we're trying to build high quality systems right if we're trying to control things with high quality achieve high reliability I don't I'm gonna give you",
    "start": "283130",
    "end": "290960"
  },
  {
    "text": "these patterns I'm gonna tell you these stories I'm gonna give you these lessons but I don't really have any secret sauce",
    "start": "290960",
    "end": "296360"
  },
  {
    "text": "right there's no you know do these things and you'll have a perfectly stable reliable system the real",
    "start": "296360",
    "end": "303380"
  },
  {
    "text": "properties that achieve you know high quality and what we build I think are all habitual you know when I see the",
    "start": "303380",
    "end": "309500"
  },
  {
    "text": "really high quality systems we build it's all because the teams were paying a lot of attention to detail and they had",
    "start": "309500",
    "end": "315560"
  },
  {
    "text": "really good habits they were constantly writing test cases they were constantly paranoid about what could go wrong I'm",
    "start": "315560",
    "end": "320900"
  },
  {
    "text": "building those habits is hard I'll give you just one example of that so actually 10 years ago when I joined ADA West my",
    "start": "320900",
    "end": "327530"
  },
  {
    "start": "325000",
    "end": "480000"
  },
  {
    "text": "first job was helping to build Amazon CloudFront our content distribution network so that is essentially a",
    "start": "327530",
    "end": "335330"
  },
  {
    "text": "distributed HTTP cache you know we're now at over a hundred sites globally where we've got these servers running",
    "start": "335330",
    "end": "341300"
  },
  {
    "text": "and they accept HTTP requests and they serve them from the cache if they're in cache and if they're not in cache they",
    "start": "341300",
    "end": "346880"
  },
  {
    "text": "go to the origin and that's the data plane right that's what CloudFront does but it also has a control plane some",
    "start": "346880",
    "end": "353750"
  },
  {
    "text": "aspects to that control plane are like launching new sites adding servers doing things like that scaling a bit but the",
    "start": "353750",
    "end": "360950"
  },
  {
    "text": "most important aspect of the control plane is actually figuring out you know for a given time of the day for a given",
    "start": "360950",
    "end": "366350"
  },
  {
    "text": "amount of load and so on where should we be sending user requests right so if I'm at my desk in Seattle my request should",
    "start": "366350",
    "end": "373970"
  },
  {
    "text": "be served from the local Seattle location or if that's not available maybe the next closest one in Portland",
    "start": "373970",
    "end": "379640"
  },
  {
    "text": "say and at the center of that you know we have this geo coordinate system",
    "start": "379640",
    "end": "385220"
  },
  {
    "text": "actually when we launched we later iterated and added it you know under the system based on real time latency",
    "start": "385220",
    "end": "391370"
  },
  {
    "text": "measurements which is really hard to build but but when we launched it was it was more or less just based on geo",
    "start": "391370",
    "end": "396680"
  },
  {
    "text": "coordinates so we'd look at where the user was and we'd figure out what was closest to them that's where we would send them and our",
    "start": "396680",
    "end": "402810"
  },
  {
    "text": "geo coordinate system that we were building in the center of this control system you know had a representation for",
    "start": "402810",
    "end": "409910"
  },
  {
    "text": "latitudes and longitudes it's actually a little bit unconventional it used a positive value for Western for Western",
    "start": "409910",
    "end": "418530"
  },
  {
    "text": "latitudes which is not the convention but the people who wrote this library live in America and so obviously America",
    "start": "418530",
    "end": "425190"
  },
  {
    "text": "has to be you know plus plus we don't have any negative signs covering America that would be terrible and it turned out",
    "start": "425190",
    "end": "432900"
  },
  {
    "text": "there was a bug in our parser that was handling all these formats where I was discarding negative signs just getting",
    "start": "432900",
    "end": "440220"
  },
  {
    "text": "rid of them entirely right and so we you know we caught this well before launch we got this in our beta period but it",
    "start": "440220",
    "end": "447090"
  },
  {
    "text": "just amazed me that like despite all the testing everything we done we'd like this closed loop control system",
    "start": "447090",
    "end": "452790"
  },
  {
    "text": "everything to control where traffic was going we were actually standing about 75% of the earth right to the wrong",
    "start": "452790",
    "end": "461160"
  },
  {
    "text": "place we were mapping them into the wrong coordinates just a really really simple thing that could go wrong and",
    "start": "461160",
    "end": "466230"
  },
  {
    "text": "this was caught by team just like looking at log files and noticing right",
    "start": "466230",
    "end": "471410"
  },
  {
    "text": "if they hadn't been scrutinizing that they you know we wouldn't we wouldn't",
    "start": "471410",
    "end": "477120"
  },
  {
    "text": "have caught it and I can think of you know hundreds of more cases of things like that where that's what really goes",
    "start": "477120",
    "end": "482430"
  },
  {
    "start": "480000",
    "end": "525000"
  },
  {
    "text": "into high quality designs right not just that but you know like diverse creative",
    "start": "482430",
    "end": "487590"
  },
  {
    "text": "minds like a really healthy you know fear free no blame atmosphere where people can just thrive and really dig",
    "start": "487590",
    "end": "495330"
  },
  {
    "text": "deep into these things then we try to use well-worn patterns those are what I'm gonna share and we would love some",
    "start": "495330",
    "end": "501450"
  },
  {
    "text": "not to testing and that's the real secret sauce right it's hard to replicate that just takes a lot of",
    "start": "501450",
    "end": "506460"
  },
  {
    "text": "diligence but you know we'll get a head start with the patterns of these from this time hopefully another thing to",
    "start": "506460",
    "end": "514020"
  },
  {
    "text": "think about is is as we approach designs we often have to make trade-offs in the",
    "start": "514020",
    "end": "519690"
  },
  {
    "text": "designs we can't achieve like perfection on every single axis and so it's useful",
    "start": "519690",
    "end": "525450"
  },
  {
    "text": "to have some guidelines for how to make those trade-offs and you'll see those reflected in some of the patterns this",
    "start": "525450",
    "end": "531030"
  },
  {
    "text": "is a picture literally my office wall this is a permanently these are the my order of",
    "start": "531030",
    "end": "537839"
  },
  {
    "text": "priorities that I've held to be true and inform the designs and the design",
    "start": "537839",
    "end": "542970"
  },
  {
    "text": "reviews I go to which in general will never compromise on security right if we know about a security issue or anything",
    "start": "542970",
    "end": "549749"
  },
  {
    "text": "that could lead to one we just have no tolerance for that the next thing is durability or sometimes they also call",
    "start": "549749",
    "end": "556499"
  },
  {
    "text": "that correctness that just means if we build a system that accepts user data and says we have it you know we really",
    "start": "556499",
    "end": "563339"
  },
  {
    "text": "mean it we don't want them to think we have it if we don't because then they'll delete their copy and it might be gone",
    "start": "563339",
    "end": "568739"
  },
  {
    "text": "forever and that's actually more important kind of other classes of availability like you'd you'd almost prefer downtime to",
    "start": "568739",
    "end": "575549"
  },
  {
    "text": "you know taking data and throwing it away because that's not really old time right then availability is super",
    "start": "575549",
    "end": "581879"
  },
  {
    "text": "important and then speed is really really important but it actually doesn't show up the others like we really do want fast systems but we're not gonna",
    "start": "581879",
    "end": "588179"
  },
  {
    "text": "we're not gonna trade-off availability for speed we're not gonna trade-off durability for speed right that would be",
    "start": "588179",
    "end": "594720"
  },
  {
    "text": "easy right just like hey take a file write it to one you know disk or piece",
    "start": "594720",
    "end": "599999"
  },
  {
    "text": "of memory but not two or three you have a fast system but it wouldn't be reliable or durable and so when we apply",
    "start": "599999",
    "end": "606959"
  },
  {
    "start": "605000",
    "end": "710000"
  },
  {
    "text": "these trade-offs we applied them to control planes and data planes but today we're talking about control planes and",
    "start": "606959",
    "end": "614100"
  },
  {
    "text": "we find that you know control these are really really hard they're often a",
    "start": "614100",
    "end": "619829"
  },
  {
    "text": "bigger design challenge than the data planes that port you know if you if you",
    "start": "619829",
    "end": "626819"
  },
  {
    "text": "get a control plane wrong it has the capacity to cause massive outages or",
    "start": "626819",
    "end": "631980"
  },
  {
    "text": "even you know miss configure or corrupt large volumes of data because it's right there in the middle of systems and it",
    "start": "631980",
    "end": "637470"
  },
  {
    "text": "generally has access to everything right so they take a lot of attention to detail a good example of that you know a",
    "start": "637470",
    "end": "644189"
  },
  {
    "text": "team I work with the elastic load balancing team so we've data playing team and a control plane team control",
    "start": "644189",
    "end": "650939"
  },
  {
    "text": "point teams larger than the data plane team by quite a bit right and so if you don't approach these tasks with that",
    "start": "650939",
    "end": "657480"
  },
  {
    "text": "kind of base assumption that actually these things are a lot of effort they're not just afterthoughts you know just",
    "start": "657480",
    "end": "662519"
  },
  {
    "text": "build a data plane and then bolt on a control plane it's like the a big may piece of effort you know you can really",
    "start": "662519",
    "end": "668750"
  },
  {
    "text": "set yourself up for failure and that's kind of at a management level right you really want to approach it with the",
    "start": "668750",
    "end": "674300"
  },
  {
    "text": "right levels of investment expectations and what the control brains do right so",
    "start": "674300",
    "end": "681110"
  },
  {
    "text": "in general all right the control planes that we build do the same kind of things that",
    "start": "681110",
    "end": "686300"
  },
  {
    "text": "you're probably familiar with control systems that you may have built reuse yourselves we use control planes to",
    "start": "686300",
    "end": "693680"
  },
  {
    "text": "manage the lifecycle of resources things like spinning up easy to instances just getting them down right or spinning up a",
    "start": "693680",
    "end": "700540"
  },
  {
    "text": "dynamo table right things like that we use control planes to provision software",
    "start": "700540",
    "end": "707000"
  },
  {
    "text": "and provision service configuration and to provision user configuration right",
    "start": "707000",
    "end": "712130"
  },
  {
    "start": "710000",
    "end": "820000"
  },
  {
    "text": "an Amazon we actually merge two of those so it's something we're very opinionated on is we we merge the provisioning of",
    "start": "712130",
    "end": "721220"
  },
  {
    "text": "software and the provisioning service configuration into just one big deployment process right so we have a",
    "start": "721220",
    "end": "727460"
  },
  {
    "text": "deployment system internally call Apollo that we use a lot you can see its design",
    "start": "727460",
    "end": "732530"
  },
  {
    "text": "features are affected in many of our public deployment services like code deploy and our pipelines and so on and",
    "start": "732530",
    "end": "740330"
  },
  {
    "text": "we figure well since we went to all this trouble to really carefully tediously manage how we deploy software you know",
    "start": "740330",
    "end": "747920"
  },
  {
    "text": "we deploy it you know and on one box for awhile and then we make sure it's okay then we go to one availability zone to",
    "start": "747920",
    "end": "753680"
  },
  {
    "text": "make sure that's okay then we go and get a little bit bigger each time until it's all over the world and then it's got all",
    "start": "753680",
    "end": "759500"
  },
  {
    "text": "these you know phasing considerations and ways of handling how we get to you know as many regions as we have quickly",
    "start": "759500",
    "end": "767090"
  },
  {
    "text": "enough since we built that and it's got you know all that cool support and rollback and testing and all sorts of",
    "start": "767090",
    "end": "773780"
  },
  {
    "text": "things I'm forgetting to mention we figured well we should use that for service configuration too if we have a service configuration file that says you",
    "start": "773780",
    "end": "780740"
  },
  {
    "text": "know enable feature why like a feature flag right we don't just like half",
    "start": "780740",
    "end": "787220"
  },
  {
    "text": "system that logs into all the boxes and sets that flag to true that would be very dangerous you're effectively just",
    "start": "787220",
    "end": "793960"
  },
  {
    "text": "enabling huge amounts of code that have never really run in that environment for without the same amount apparently",
    "start": "793960",
    "end": "800040"
  },
  {
    "text": "that EVs were provisioning his software so we merged those two and do them as one I'm not going to talk too much about",
    "start": "800040",
    "end": "806310"
  },
  {
    "text": "deployment systems if you just you can use our public deployment systems or read our documentation of those to see",
    "start": "806310",
    "end": "811920"
  },
  {
    "text": "how those work and we've other talks I've reinvented that I've covered that but I'm going to talk about the other",
    "start": "811920",
    "end": "817950"
  },
  {
    "text": "two what we deal with them and so for solving these problems there's a whole",
    "start": "817950",
    "end": "823650"
  },
  {
    "start": "820000",
    "end": "1000000"
  },
  {
    "text": "branch of engineering called control theory control theories a pretty old",
    "start": "823650",
    "end": "830040"
  },
  {
    "text": "branch of science now it's coming up on about a hundred years old it was independently discovered in that",
    "start": "830040",
    "end": "836550"
  },
  {
    "text": "bunch of different fields who was you know discovered by chemical engineers when they were studying how chemical",
    "start": "836550",
    "end": "842340"
  },
  {
    "text": "reactions happen and then it was discovered by physicists when they were looking at some other processes and then",
    "start": "842340",
    "end": "847350"
  },
  {
    "text": "eventually a community realized oh these equations are all the same this is just one big branch of mathematics or",
    "start": "847350",
    "end": "854160"
  },
  {
    "text": "engineering and these books and courses and an unbelievable wealth of material",
    "start": "854160",
    "end": "860970"
  },
  {
    "text": "and control theory and it gets really hard and really deep really quickly and we're not gonna cover basically any of",
    "start": "860970",
    "end": "867810"
  },
  {
    "text": "that but it exists as a science and it's worth learning for them so I'm gonna give you just a one on one just that the",
    "start": "867810",
    "end": "874410"
  },
  {
    "text": "tiniest snippets of water truly useful with what will help you catch errors and",
    "start": "874410",
    "end": "879480"
  },
  {
    "text": "design so what helps me for sure so the first thing is there's a really strong",
    "start": "879480",
    "end": "885270"
  },
  {
    "text": "theory around what makes stable control systems and those generally resemble the",
    "start": "885270",
    "end": "891900"
  },
  {
    "text": "following right they have some kind of measurement process right they have a way of measuring the universe and",
    "start": "891900",
    "end": "899280"
  },
  {
    "text": "telling what state it's in right so there's kind of three classic examples of control systems in control theory one",
    "start": "899280",
    "end": "905940"
  },
  {
    "text": "is a furnace you're trying to heat like a boiler to a certain temperature how do you do that now there is a cruise",
    "start": "905940",
    "end": "911310"
  },
  {
    "text": "control right you're trying to make a car go at a certain speed even though there's hills and bumps and whatnot up",
    "start": "911310",
    "end": "917910"
  },
  {
    "text": "and down hill and what is the third example Oh an inverted pendulum right so",
    "start": "917910",
    "end": "923670"
  },
  {
    "text": "you got a long stick you're just trying to balance it right that's those are the three classic examples I'm gonna use",
    "start": "923670",
    "end": "928680"
  },
  {
    "text": "auto-scaling as an example because we're cloud people I'm not so much better so auto-scaling",
    "start": "928680",
    "end": "933820"
  },
  {
    "text": "is a simple control system right imagine you you've got a set of hosts like ec2",
    "start": "933820",
    "end": "940420"
  },
  {
    "text": "instances and you want to say okay I never want the CPU to go above 70% or",
    "start": "940420",
    "end": "946959"
  },
  {
    "text": "50% because if I go above that then I know things go bad pretty quickly you",
    "start": "946959",
    "end": "952209"
  },
  {
    "text": "know my requests start slowing down my users don't get once they want so always add hosts so that my load is at or below",
    "start": "952209",
    "end": "961300"
  },
  {
    "text": "70% and if I start going below 70% then you know you can start killing hosts and",
    "start": "961300",
    "end": "967060"
  },
  {
    "text": "basically what auto scaling does it's a really nice dynamic control system and",
    "start": "967060",
    "end": "973209"
  },
  {
    "text": "so in its case what we're measuring I just defined it we're measuring the CPU load say right so we look at the hosts",
    "start": "973209",
    "end": "980470"
  },
  {
    "text": "we say okay look at the CPU across them and maybe we've got an average function or if we're doing better we've got",
    "start": "980470",
    "end": "985720"
  },
  {
    "text": "something to max function and we're like you know pick the worst box and that's that's what I'm gonna try to make manage",
    "start": "985720",
    "end": "991240"
  },
  {
    "text": "and so we've got that measurement and straightaway we're doing better than that controller we saw at the very beginning right the remote control that",
    "start": "991240",
    "end": "998079"
  },
  {
    "text": "had no measurement was just drawing instructions out there in the world and then the next thing it does it's got",
    "start": "998079",
    "end": "1005370"
  },
  {
    "start": "1000000",
    "end": "1025000"
  },
  {
    "text": "some kind of central controller or some kind of software or algorithm that is",
    "start": "1005370",
    "end": "1011190"
  },
  {
    "text": "taking the measurement and saying okay you're not in a desired state right and it's producing corrections to to get us",
    "start": "1011190",
    "end": "1019410"
  },
  {
    "text": "into that state right that's that's the central controller so it has that component in the case of auto scaling",
    "start": "1019410",
    "end": "1025020"
  },
  {
    "start": "1025000",
    "end": "1140000"
  },
  {
    "text": "that's what the auto scaling service does right and then it's got something called an actuator it just means like it",
    "start": "1025020",
    "end": "1031530"
  },
  {
    "text": "does things right and in this case we launched a you see two instances and",
    "start": "1031530",
    "end": "1037260"
  },
  {
    "text": "that is you know you need all of those things to have a stable control system there's other things too you need to",
    "start": "1037260",
    "end": "1044220"
  },
  {
    "text": "have a stable control system but you need those things at a minimum and it is staggering",
    "start": "1044220",
    "end": "1049260"
  },
  {
    "text": "how many designs you can go to you know part of my job if there's a lot of customer sites and help with",
    "start": "1049260",
    "end": "1054620"
  },
  {
    "text": "architecture reviews and figuring out how they're gonna build a native grass and it is staggering how many control",
    "start": "1054620",
    "end": "1061409"
  },
  {
    "text": "systems you can come across where you just look at it so it has system has no idea what state it is achieving it cannot possibly be stable",
    "start": "1061409",
    "end": "1068320"
  },
  {
    "text": "right the system is like taking user input and say you know push this config out or do this thing but has no idea",
    "start": "1068320",
    "end": "1075490"
  },
  {
    "text": "where it got there and that works with a certain amount of reliability you know",
    "start": "1075490",
    "end": "1081340"
  },
  {
    "text": "you can probably have you know two or maybe even three nines of reliability",
    "start": "1081340",
    "end": "1087130"
  },
  {
    "text": "with a system like that so that just means if we've got two nines of availability that means we can tolerate you know three days of downtime and year",
    "start": "1087130",
    "end": "1094299"
  },
  {
    "text": "which it's not very good three nines is a few hours and you can probably achieve",
    "start": "1094299",
    "end": "1101380"
  },
  {
    "text": "those levels but you know if the network is unreliable for some reason or some application has stalled for some reason",
    "start": "1101380",
    "end": "1107409"
  },
  {
    "text": "and your update just doesn't get there you're kind of outlook and I've visited a lot of sites that have this problem",
    "start": "1107409",
    "end": "1114309"
  },
  {
    "text": "and their solution is well the user calls support and tech support pushes a",
    "start": "1114309",
    "end": "1119649"
  },
  {
    "text": "button and the button makes everything go out there again and maybe it goes there this time and it is kind of crazy",
    "start": "1119649",
    "end": "1128019"
  },
  {
    "text": "making right that's a very very unstable system or the other classic solution you",
    "start": "1128019",
    "end": "1133929"
  },
  {
    "text": "know turn it off and turn it on again and usually when you turn it on again just some kind of full sync it gets all",
    "start": "1133929",
    "end": "1139360"
  },
  {
    "text": "the data again and everything's okay so if you don't have these three things you're at a look right and the most",
    "start": "1139360",
    "end": "1144639"
  },
  {
    "start": "1140000",
    "end": "1205000"
  },
  {
    "text": "common thing that's missing is that measurement factor and then the other part of it is it's doing all this in the loop right so it's constantly measuring",
    "start": "1144639",
    "end": "1152159"
  },
  {
    "text": "constantly deciding are constantly actuated right and if you have a system",
    "start": "1152159",
    "end": "1157659"
  },
  {
    "text": "like that it's called a closed loop system right closed loop controllers are our friends now the next thing to know",
    "start": "1157659",
    "end": "1163630"
  },
  {
    "text": "about control theory um is that systems like this are tremendously sensitive to",
    "start": "1163630",
    "end": "1170470"
  },
  {
    "text": "lag right if they're not fast they they can they can become harmful like it's",
    "start": "1170470",
    "end": "1177039"
  },
  {
    "text": "Majan if auto-scaling took hours to launcher instances it would be useless like imagine measuring the load you know",
    "start": "1177039",
    "end": "1184690"
  },
  {
    "text": "one in the day and deciding to scale up and then it doesn't happen for like three hours and by the time it's 4 p.m.",
    "start": "1184690",
    "end": "1191679"
  },
  {
    "text": "you don't even need that machine anymore and you know the system's just start it's uncontrollable it's crazy so that's the",
    "start": "1191679",
    "end": "1198779"
  },
  {
    "text": "next thing right we want these systems to be to be nice and responsive and fast and then the last thing I'm just gonna",
    "start": "1198779",
    "end": "1204450"
  },
  {
    "text": "mention about control theory and not explain too much is that there's a fundamental theorem in control theory in",
    "start": "1204450",
    "end": "1211470"
  },
  {
    "start": "1205000",
    "end": "1275000"
  },
  {
    "text": "control theory that says the only kind of stable control system involves",
    "start": "1211470",
    "end": "1216899"
  },
  {
    "text": "something called a pit loop like a PID controller and that's proportional",
    "start": "1216899",
    "end": "1223140"
  },
  {
    "text": "integral durand derivative it just means that your control equation has to have fancy mathematical components that",
    "start": "1223140",
    "end": "1230399"
  },
  {
    "text": "contain all those elements and the only reason I put this light there is to try",
    "start": "1230399",
    "end": "1237480"
  },
  {
    "text": "it just to encourage you to go a little deeper on this topic if it's something you want to get into you and understand",
    "start": "1237480",
    "end": "1243210"
  },
  {
    "text": "what that statement means if you can understand that what that statement means and develop an understanding of",
    "start": "1243210",
    "end": "1248850"
  },
  {
    "text": "like looking at systems and recognizing hey it has a proportional component it has an integral component it has a",
    "start": "1248850",
    "end": "1254760"
  },
  {
    "text": "derivative component then it might be stable or no it's missing at least one",
    "start": "1254760",
    "end": "1260549"
  },
  {
    "text": "of those who it's not stable it is a superpower like you can spot in designs in seconds that they are provably",
    "start": "1260549",
    "end": "1268139"
  },
  {
    "text": "unstable or at best by stable which means it can oscillate between states if",
    "start": "1268139",
    "end": "1274049"
  },
  {
    "text": "you do want to go deeper on this topic right my favorite books that a little to recommend is this book came out last",
    "start": "1274049",
    "end": "1280230"
  },
  {
    "text": "year it's got a ton of patterns on control systems and in distributed environments",
    "start": "1280230",
    "end": "1286950"
  },
  {
    "text": "so that's like what we operate you know where you've got devices or networks they may or may not be reachable",
    "start": "1286950",
    "end": "1292190"
  },
  {
    "text": "everything has to be coordinated so I'm gonna take a cue from this book and the",
    "start": "1292190",
    "end": "1297690"
  },
  {
    "text": "rest of my talk is gonna be all about patterns it's gonna be patterns that we've encountered and used that Amazon",
    "start": "1297690",
    "end": "1303510"
  },
  {
    "text": "over and over and things we recommend and espouse at our design reviews that",
    "start": "1303510",
    "end": "1308639"
  },
  {
    "text": "hopefully you'll find useful none of them are in this book and they're all specific to the cloud so we'll we'll see",
    "start": "1308639",
    "end": "1315389"
  },
  {
    "start": "1315000",
    "end": "1450000"
  },
  {
    "text": "how we go so our first pattern harks back to an",
    "start": "1315389",
    "end": "1322309"
  },
  {
    "text": "outage that we had normally we don't like to talk about our Judas but we're going to have at this one and this one's",
    "start": "1322309",
    "end": "1329359"
  },
  {
    "text": "from 2008 actually just as I was joining Amazon Web Services this happened it was",
    "start": "1329359",
    "end": "1335359"
  },
  {
    "text": "like the hottest news of the day where s 3 we we only had one region at the time",
    "start": "1335359",
    "end": "1341289"
  },
  {
    "text": "us east one I totally good was even called US East one at the time because we only had one region and and s tree",
    "start": "1341289",
    "end": "1349820"
  },
  {
    "text": "had an outage and the real cars turned out to be well we had this system that",
    "start": "1349820",
    "end": "1356090"
  },
  {
    "text": "was distributing you know some live state as as part of how s tree nodes",
    "start": "1356090",
    "end": "1361700"
  },
  {
    "text": "discover each other and you know one box in this system and it was a gossip",
    "start": "1361700",
    "end": "1367429"
  },
  {
    "text": "system so they're all kind of sharing sharing some state just one box had a network controller that was corrupting",
    "start": "1367429",
    "end": "1373609"
  },
  {
    "text": "corrupting one bit just one bit and because this was an open-loop controller",
    "start": "1373609",
    "end": "1380419"
  },
  {
    "text": "that didn't really have a measure of read it was achieving success or not that single bit error propagated and",
    "start": "1380419",
    "end": "1387139"
  },
  {
    "text": "went everywhere right and it was enough so that none of the nodes could talk to each other and we had this outage",
    "start": "1387139",
    "end": "1393460"
  },
  {
    "text": "restoring service basically meant cold starting everything and finding the network card and killing it and doing",
    "start": "1393460",
    "end": "1399919"
  },
  {
    "text": "all those kind of things you can still read this full you know outage report still on our website just you know",
    "start": "1399919",
    "end": "1406159"
  },
  {
    "text": "search for it if you want to want to read the full details but you know single that's a simple lesson and",
    "start": "1406159",
    "end": "1412519"
  },
  {
    "text": "something you'll hear at every Amazon design review to this day is you know are you check summing everything right",
    "start": "1412519",
    "end": "1420440"
  },
  {
    "text": "like everything like Esther you has a lot of checksums that had a lot of checksums at that time especially for",
    "start": "1420440",
    "end": "1426019"
  },
  {
    "text": "the data like for the user data so much check something like you you just crazy",
    "start": "1426019",
    "end": "1432350"
  },
  {
    "text": "numbers of Jackson's going on at different layers but this layer in a metadata system that was off to the side",
    "start": "1432350",
    "end": "1438320"
  },
  {
    "text": "it wasn't really thought of as something that needed that amount of integrity jacking but it did right so we checked",
    "start": "1438320",
    "end": "1444919"
  },
  {
    "text": "some everything right I always do that another way files become corrupt and",
    "start": "1444919",
    "end": "1451759"
  },
  {
    "text": "made favorite example that I've seen and I regularly see people report this on",
    "start": "1451759",
    "end": "1457010"
  },
  {
    "text": "Twitter too and there's also a great website called no Yama org which covers",
    "start": "1457010",
    "end": "1462440"
  },
  {
    "text": "it which is how corruption can leak in because of you know intermediate formats so my favorite example of this is is",
    "start": "1462440",
    "end": "1469940"
  },
  {
    "text": "Yama so a lot of people push configuration stayed around in Yama true control control planes right like here's",
    "start": "1469940",
    "end": "1476270"
  },
  {
    "text": "my list of live servers here's my list of configure options and y'all most terrible at this",
    "start": "1476270",
    "end": "1481340"
  },
  {
    "text": "it's terrible at this because its trunk a table you can truncate a Yama file at almost any arbitrary point and it is",
    "start": "1481340",
    "end": "1487940"
  },
  {
    "text": "still a valid Yama file and so if your system just falls back on implicit defaults it's now misconfigured and that",
    "start": "1487940",
    "end": "1495590"
  },
  {
    "text": "can happen just because the file transfer was interrupted because the disk was almost full and so some of the",
    "start": "1495590",
    "end": "1500780"
  },
  {
    "text": "file made it or even just because like some component crashed along the way right so we didn't get the full file and",
    "start": "1500780",
    "end": "1506750"
  },
  {
    "text": "so again like if you not check something today if you don't have some complete check of where that whole thing is in",
    "start": "1506750",
    "end": "1512660"
  },
  {
    "text": "the right state you can have a really bad day another reason to check some other things or also maybe another reason not",
    "start": "1512660",
    "end": "1519050"
  },
  {
    "text": "to you animal and I use a use a file format that can that can you know be",
    "start": "1519050",
    "end": "1524270"
  },
  {
    "text": "terminated so the next pattern something we do in all of our systems that I don't",
    "start": "1524270",
    "end": "1530690"
  },
  {
    "text": "see you know to all too commonly out there right is that control planes are",
    "start": "1530690",
    "end": "1535910"
  },
  {
    "text": "really sensitive systems like we mentioned right there they're connected to everything they can cause a huge",
    "start": "1535910",
    "end": "1541940"
  },
  {
    "text": "amount of damage and that makes them you know sensitive security systems - right if somebody were to compromise your",
    "start": "1541940",
    "end": "1547880"
  },
  {
    "text": "control plane oh my god like that's well very dangerous so we",
    "start": "1547880",
    "end": "1554900"
  },
  {
    "start": "1550000",
    "end": "1715000"
  },
  {
    "text": "have to have really pervasive cryptographic authentication everywhere",
    "start": "1554900",
    "end": "1560390"
  },
  {
    "text": "right so when we build a control plane and it's controlling say in the",
    "start": "1560390",
    "end": "1565460"
  },
  {
    "text": "substrate of ec2 where we're launching instances and connecting things to network and so on like those calls have",
    "start": "1565460",
    "end": "1572870"
  },
  {
    "text": "to be authenticated we have to be sure they're coming from the right control systems that nobody's inserted something",
    "start": "1572870",
    "end": "1578870"
  },
  {
    "text": "malicious and so on right so you know we have you're probably familiar with you",
    "start": "1578870",
    "end": "1584630"
  },
  {
    "text": "know how address regular web requests we've got the sig v4 protocol that includes you know hash",
    "start": "1584630",
    "end": "1590690"
  },
  {
    "text": "hash based H Mac based cryptographic signatures we use that internally to",
    "start": "1590690",
    "end": "1596330"
  },
  {
    "text": "where we can which is almost everywhere there's some places where we can't do the circular dependencies and so we we",
    "start": "1596330",
    "end": "1603470"
  },
  {
    "text": "can't use our own stuff if we if we would be circularly dependent on it and so we have to do some other things like we'll just use like TLS mutual auth",
    "start": "1603470",
    "end": "1610280"
  },
  {
    "text": "we're worst case something like that if we have to but we really try to make",
    "start": "1610280",
    "end": "1615440"
  },
  {
    "text": "sure that everything that's talking everything else has a really strong sense of identity and has a really strong sense of authenticity right that",
    "start": "1615440",
    "end": "1622640"
  },
  {
    "text": "it's all the right things and it's not just about you know preventing malicious",
    "start": "1622640",
    "end": "1629240"
  },
  {
    "text": "security events it's also a really good operational health right so when you do",
    "start": "1629240",
    "end": "1634400"
  },
  {
    "text": "this when you bake a system that's based on credentials and then you also insist that you know have to be able to revoke",
    "start": "1634400",
    "end": "1640670"
  },
  {
    "text": "and rotate these credentials regularly you know like we try to rotate them multiple times a year and so on and in a",
    "start": "1640670",
    "end": "1646010"
  },
  {
    "text": "lot of cases it becomes easier to mechanize and build a system where you",
    "start": "1646010",
    "end": "1652610"
  },
  {
    "text": "can say well humans shouldn't have access to any of this stuff and we've done that you know we have systems that",
    "start": "1652610",
    "end": "1658310"
  },
  {
    "text": "store our credentials and won't export them we'll give them to me and my desktop right and if we were ever to end",
    "start": "1658310",
    "end": "1663410"
  },
  {
    "text": "up with my desktop you know some alarms will go off if they see that credential being used from the wrong place and its",
    "start": "1663410",
    "end": "1668690"
  },
  {
    "text": "really good for operational health it means you know you never get into a state where you know some teams some operators somewhere is just managing",
    "start": "1668690",
    "end": "1674780"
  },
  {
    "text": "things directly from their desktop rather than going through the the right control systems and so you can always",
    "start": "1674780",
    "end": "1681470"
  },
  {
    "text": "enforce the right level of safety mechanisms and then another simple thing right this you can do when you've got a",
    "start": "1681470",
    "end": "1687080"
  },
  {
    "text": "strong identity you make sure the right domains are talking to each other right",
    "start": "1687080",
    "end": "1693170"
  },
  {
    "text": "so never ever let a pre-production control plane like a gamma or a testing",
    "start": "1693170",
    "end": "1698210"
  },
  {
    "text": "stack talk to your production data plane like that's a disaster right it will almost certainly miss configure it",
    "start": "1698210",
    "end": "1704030"
  },
  {
    "text": "through the way around is occasionally okay like if you're if you're testing a new data plane you might um you might",
    "start": "1704030",
    "end": "1710330"
  },
  {
    "text": "plug that in but you never ever want to do it that way around so that's one that's that's - pattern -",
    "start": "1710330",
    "end": "1716240"
  },
  {
    "start": "1715000",
    "end": "1840000"
  },
  {
    "text": "pattern three right it's kind of all about concept we call blast radius so we",
    "start": "1716240",
    "end": "1721770"
  },
  {
    "text": "always try to limit the scope of damage that any error could cause right we try to put a best effort all over thinking",
    "start": "1721770",
    "end": "1728880"
  },
  {
    "text": "we code of you everything we test it as much as we can and then we still assume",
    "start": "1728880",
    "end": "1734040"
  },
  {
    "text": "it's gonna fail due to some reason we haven't thought of and that humility pays off a lot right",
    "start": "1734040",
    "end": "1739860"
  },
  {
    "text": "and we we try to contain how big the blast can be we call that blast radius my colleague peter voss gave a talk",
    "start": "1739860",
    "end": "1746160"
  },
  {
    "text": "earlier today all about that if you weren't there look at the video when it goes up in YouTube it's great we've got",
    "start": "1746160",
    "end": "1751650"
  },
  {
    "text": "a few ways of doing this that are common in our control systems you know we divide our control planes horizontally where we can right so all",
    "start": "1751650",
    "end": "1758370"
  },
  {
    "text": "of our regions are totally autonomous you know the control plane for s3 and us East one doesn't even know about s tree",
    "start": "1758370",
    "end": "1764760"
  },
  {
    "text": "in like us West - right they're just not even capable of infecting one another",
    "start": "1764760",
    "end": "1770570"
  },
  {
    "text": "for some of our bigger services we even do that at the ability zone levels so if you launch an ec2 instance for example",
    "start": "1770570",
    "end": "1776670"
  },
  {
    "text": "it goes to this kind of stubby front end control plane that then just immediately goes into his own old control plane and",
    "start": "1776670",
    "end": "1783120"
  },
  {
    "text": "the majority of their work happens inside the zone which again stops things for spreading we go even further again",
    "start": "1783120",
    "end": "1789180"
  },
  {
    "text": "and have sales for some of our biggest services particularly on the network side it's great we also tried to",
    "start": "1789180",
    "end": "1796170"
  },
  {
    "text": "compartmentalize in in that kind of a vertical direction so kind of front to back so I think of like when from the",
    "start": "1796170",
    "end": "1802320"
  },
  {
    "text": "user input so I'm like you know somebody calling one of our api's today I can actually taking effect in the data plane",
    "start": "1802320",
    "end": "1808290"
  },
  {
    "text": "we put you know some bulkheads in there two simple examples are you know we",
    "start": "1808290",
    "end": "1813420"
  },
  {
    "text": "tried to have these poison tasters which just means like when we when we get an user input put it true as much of what",
    "start": "1813420",
    "end": "1821400"
  },
  {
    "text": "the data plane is gonna do as possible like any serialization or D serialization or anything like that",
    "start": "1821400",
    "end": "1826710"
  },
  {
    "text": "anything that could go wrong before you even accept the request like ideally don't give them a 200 ok without having",
    "start": "1826710",
    "end": "1833760"
  },
  {
    "text": "done that rather than like taking it propagating into the data plane and then having the data plane crash that's not",
    "start": "1833760",
    "end": "1839400"
  },
  {
    "text": "good so we try to build bulkhead like that now we're starting to see an example there a 4/4 pattern which is we",
    "start": "1839400",
    "end": "1847260"
  },
  {
    "start": "1840000",
    "end": "1985000"
  },
  {
    "text": "try to couple our systems in turn asynchronously right so I'll explain",
    "start": "1847260",
    "end": "1852340"
  },
  {
    "text": "what that means so if you have you take a web request right and while you take",
    "start": "1852340",
    "end": "1858970"
  },
  {
    "text": "that web request you reach out to another dependent web service and that web service has to succeed before you",
    "start": "1858970",
    "end": "1865360"
  },
  {
    "text": "can make any progress that's a synchronous call right that's just a standard like synchronous call when you",
    "start": "1865360",
    "end": "1872110"
  },
  {
    "text": "have two systems that are synchronously calling one another they're really just one system right they're not you there's",
    "start": "1872110",
    "end": "1878799"
  },
  {
    "text": "really no separation there because if you have a problem in the dependent service you've also got a problem in the",
    "start": "1878799",
    "end": "1885340"
  },
  {
    "text": "caller service there's no insulation and even worse you know if you've got retries built in and things like that",
    "start": "1885340",
    "end": "1891159"
  },
  {
    "text": "you can get these amplification factors where like if you're one or two or three services deep you've got retries built",
    "start": "1891159",
    "end": "1897669"
  },
  {
    "text": "in at these let each layer well if the bottom service fails well then you get three tries from this layer and another",
    "start": "1897669",
    "end": "1903610"
  },
  {
    "text": "tree from there and another three from there and all of a sudden you put this like 12 X multiplication factor and",
    "start": "1903610",
    "end": "1909580"
  },
  {
    "text": "things go crazy so we tried it a couple our systems asynchronously where we can",
    "start": "1909580",
    "end": "1915070"
  },
  {
    "text": "which is much more forgiving right so that's where we'll we'll take the user's intent and we'll make some partial",
    "start": "1915070",
    "end": "1922389"
  },
  {
    "text": "progress you know we'll make a record of that but then we'll drive the next layer asynchronously so we'll put it on a workflow or a queue and even if it's a",
    "start": "1922389",
    "end": "1928779"
  },
  {
    "text": "tiny duration you know milliseconds in time that can make the system much more deterministic",
    "start": "1928779",
    "end": "1934210"
  },
  {
    "text": "because workflows and queues and so on they just retry it like these simple periodic frequencies you don't have to",
    "start": "1934210",
    "end": "1940929"
  },
  {
    "text": "worry about it being amplified as much they're just easier to get your head around and they tend to be more reliable",
    "start": "1940929",
    "end": "1946480"
  },
  {
    "text": "they're more forgiving for all of our cross region systems that we built they're all asynchronous right so we",
    "start": "1946480",
    "end": "1952629"
  },
  {
    "text": "replicate data from like DynamoDB tables for a DynamoDB you know to be globally",
    "start": "1952629",
    "end": "1958330"
  },
  {
    "text": "or s3 for cross region replication that's happening asynchronously so that it if we do have a problem in one region",
    "start": "1958330",
    "end": "1965110"
  },
  {
    "text": "you know we still can insulate the other regions from that v pattern we've seen already but I'm gonna mention it again",
    "start": "1965110",
    "end": "1971409"
  },
  {
    "text": "which is you have to have closed feedback loops if you're not measuring the state of your system you have a hope",
    "start": "1971409",
    "end": "1977289"
  },
  {
    "text": "of achieving stability probably the most common error which is why it's why it's mentioned",
    "start": "1977289",
    "end": "1982799"
  },
  {
    "text": "again so the next pattern is all about like a really frequently asked question",
    "start": "1982799",
    "end": "1987989"
  },
  {
    "start": "1985000",
    "end": "2065000"
  },
  {
    "text": "that comes up in design reviews is okay so I've got this control system I need",
    "start": "1987989",
    "end": "1993239"
  },
  {
    "text": "to get config from my control system to my data plane do I push it or do I pull it right so should the data plan hosts",
    "start": "1993239",
    "end": "2000079"
  },
  {
    "text": "connect to the control plane or should the control plane connect to the data plane is essentially the question right",
    "start": "2000079",
    "end": "2006199"
  },
  {
    "text": "and it's the wrong question it's not a useful way to think about it right there's a better different way of",
    "start": "2006199",
    "end": "2012439"
  },
  {
    "text": "thinking about it which is to think about the relative size of the fleet's right you don't want big fleets",
    "start": "2012439",
    "end": "2019039"
  },
  {
    "text": "connecting two small fleets because you can never cold-start those right because",
    "start": "2019039",
    "end": "2024439"
  },
  {
    "text": "what happens is you start the whole system and the big flea shows up as this thundering herd hammering the small",
    "start": "2024439",
    "end": "2030169"
  },
  {
    "text": "suite then won't recover and against in this stuck state and the end up doing you know medieval level bloodletting",
    "start": "2030169",
    "end": "2035599"
  },
  {
    "text": "operations to try to get it to recover it's not a good pattern so you know",
    "start": "2035599",
    "end": "2041559"
  },
  {
    "text": "connections can support data in either direction it doesn't really matter which direction you know the connection was",
    "start": "2041559",
    "end": "2048529"
  },
  {
    "text": "initiated for the data flow so choose the direction that's got the best tolerance for this thundering herd or",
    "start": "2048529",
    "end": "2055940"
  },
  {
    "text": "retry behavior that's what's gonna help us out most so we just tell people look at the relative size of the feets and",
    "start": "2055940",
    "end": "2061460"
  },
  {
    "text": "that's how to go okay nice simple pattern pattern seven related to",
    "start": "2061460",
    "end": "2068179"
  },
  {
    "text": "thundering herd's again right it's really common to see systems where okay well I've got a data plane and the data",
    "start": "2068179",
    "end": "2075378"
  },
  {
    "text": "plane is much bigger than the control plane I'm matching s3 your EBS huge numbers of servers storing your data",
    "start": "2075379",
    "end": "2081648"
  },
  {
    "text": "huge huge numbers control planes are relatively modest you know just doesn't take that much you know that amount of",
    "start": "2081649",
    "end": "2088220"
  },
  {
    "text": "boxes to really keep everything running and if you're not careful you know",
    "start": "2088220",
    "end": "2093559"
  },
  {
    "text": "caches can build into these systems right because you know when the control plane you want to keep it small and efficient so the you want but it needs",
    "start": "2093559",
    "end": "2102500"
  },
  {
    "text": "to service this huge number of data plane nodes so we just put a little caching there in it there you know standard optimization completely normal",
    "start": "2102500",
    "end": "2109519"
  },
  {
    "text": "thing to do that's what we always do that data planes right well you can go you know if you if you have a problem if",
    "start": "2109519",
    "end": "2116360"
  },
  {
    "text": "your control playing goes down for a while or if you need to coal start the system it cannot just not recover right",
    "start": "2116360",
    "end": "2121970"
  },
  {
    "text": "because the cache is so cold that I can't serve anything from cache anymore everything has to go to the origin I'm",
    "start": "2121970",
    "end": "2127910"
  },
  {
    "text": "not going to just be too expensive during recovery and then things we try even harder they hit you even harder",
    "start": "2127910",
    "end": "2134180"
  },
  {
    "text": "when you're having your worst day right so the awful pattern so we just try not to have caches if at all possible if we",
    "start": "2134180",
    "end": "2142490"
  },
  {
    "text": "do have caches because sometimes you do need them for like cost-effectiveness reasons sometimes it would just be like",
    "start": "2142490",
    "end": "2148070"
  },
  {
    "text": "ridiculous not to use a cache we try to have it be one that is self warming so",
    "start": "2148070",
    "end": "2153440"
  },
  {
    "text": "when it starts it warms itself Prime's the cache before accepting any requests nicer recovery pattern another nice",
    "start": "2153440",
    "end": "2160910"
  },
  {
    "text": "pattern is if you have a cache that's willing to serve stale entries right so if the thing it's caching for just goes",
    "start": "2160910",
    "end": "2166640"
  },
  {
    "text": "down you know okay yeah the TTL is expired but like is it really better to",
    "start": "2166640",
    "end": "2171740"
  },
  {
    "text": "say you know 500 then like what the state was almost always what the state was is what the state is and so just",
    "start": "2171740",
    "end": "2179090"
  },
  {
    "text": "being willing to serve stale cache entries it's much better drives me crazy that DNS resolvers do not do this the",
    "start": "2179090",
    "end": "2185540"
  },
  {
    "text": "internet would be ten times more stable if DNS resolvers served from stale",
    "start": "2185540",
    "end": "2190550"
  },
  {
    "text": "caches DNS rarely changes there's no need to be so aggressive about it so oh",
    "start": "2190550",
    "end": "2198520"
  },
  {
    "start": "2195000",
    "end": "2335000"
  },
  {
    "text": "pretty warming because our eight pattern is throttling right so you've got these",
    "start": "2198520",
    "end": "2204860"
  },
  {
    "text": "cold start problems you've got these retry problems you've got systems that",
    "start": "2204860",
    "end": "2209990"
  },
  {
    "text": "can get hammered what do we do about it well we have travels and rate limits right there often often needed in these",
    "start": "2209990",
    "end": "2216800"
  },
  {
    "text": "large systems you need to have some mechanism where you can travel the",
    "start": "2216800",
    "end": "2222260"
  },
  {
    "text": "incoming rate of requests at least so that you can recover right sometimes it's just it's just there to have a",
    "start": "2222260",
    "end": "2229010"
  },
  {
    "text": "mechanism so the you dampen incoming load to the point that you can recover at all now that's not a great design",
    "start": "2229010",
    "end": "2235760"
  },
  {
    "text": "pattern because really customers are still having a bad day if you do that but it's it's better than a really",
    "start": "2235760",
    "end": "2240980"
  },
  {
    "text": "extended outage but we're really we don't like travelling is where I use it as like really smart priorities",
    "start": "2240980",
    "end": "2246450"
  },
  {
    "text": "it's a good example of that is how we do it for Amazon Elastic low bouncer so lb",
    "start": "2246450",
    "end": "2251790"
  },
  {
    "text": "is our low bouncing product actually is just built using AC 2 instances lots and lots of them it's one of the biggest",
    "start": "2251790",
    "end": "2257690"
  },
  {
    "text": "consumers of ec2 instances unsurprisingly right because we've got a lot of customers who use our low",
    "start": "2257690",
    "end": "2262799"
  },
  {
    "text": "bouncers and so when we have a zone fail say judith power right and then we you",
    "start": "2262799",
    "end": "2269490"
  },
  {
    "text": "know power recovers zone comes back we deliberately travel elby's recovery",
    "start": "2269490",
    "end": "2274829"
  },
  {
    "text": "right we deliberately quite aggressively traveled its ability to launch instances and that's for you know two reasons one",
    "start": "2274829",
    "end": "2283290"
  },
  {
    "text": "is for EOP it doesn't matter we've provision deal be so they can always withstand the loss of an availability zone it's always got enough",
    "start": "2283290",
    "end": "2290010"
  },
  {
    "text": "capacity it's got DNS how checks running constantly so if the zone fails it really doesn't care and your you should",
    "start": "2290010",
    "end": "2296970"
  },
  {
    "text": "not notice like the low bonds will just carry on we had enough capacity great so it's not",
    "start": "2296970",
    "end": "2302640"
  },
  {
    "text": "really critical that that come back so then the second reason kicks in right we just give everybody else priority all",
    "start": "2302640",
    "end": "2308549"
  },
  {
    "text": "right this is we know there's a lot of customers now scrambling to launch instances right they want to get back up in that zone so we're gonna hold back",
    "start": "2308549",
    "end": "2315960"
  },
  {
    "text": "right this is a really good example of where troubles can be really key and if you use them intelligently can be are",
    "start": "2315960",
    "end": "2322410"
  },
  {
    "text": "awesome alright so my last two patterns I'm just gonna warn you a little",
    "start": "2322410",
    "end": "2328380"
  },
  {
    "text": "contrary to each other a little and that's okay we'll see how so the the",
    "start": "2328380",
    "end": "2335579"
  },
  {
    "start": "2335000",
    "end": "2485000"
  },
  {
    "text": "ninth pattern is about Delta's and these are super common right so you know we're",
    "start": "2335579",
    "end": "2340710"
  },
  {
    "text": "often trying to take user intent like say the metadata for like every s3 bucket right or like something that's",
    "start": "2340710",
    "end": "2349440"
  },
  {
    "text": "configurable like an RDS database and you know the user can change some dial",
    "start": "2349440",
    "end": "2356760"
  },
  {
    "text": "or knob weave to propagate that stayed out there right and a lot of cases that's all added up it's a lot of state",
    "start": "2356760",
    "end": "2363660"
  },
  {
    "text": "you know maybe terabytes of state in some cases and we can't just push it all around all the time so we have to",
    "start": "2363660",
    "end": "2369809"
  },
  {
    "text": "compute deltas and distribute the deltas and then merge patches right really",
    "start": "2369809",
    "end": "2374880"
  },
  {
    "text": "really common pattern but it's surprising like how many different solutions I've seen",
    "start": "2374880",
    "end": "2379980"
  },
  {
    "text": "this versus the easiest one right so like you know you often just start out I've got a simple key value right some",
    "start": "2379980",
    "end": "2387000"
  },
  {
    "text": "configuration knob foo that's equal to bar well the easiest way to generate deltas is just have a versioned data",
    "start": "2387000",
    "end": "2393570"
  },
  {
    "text": "scheme right just add a version column to your table and essentially make these",
    "start": "2393570",
    "end": "2399510"
  },
  {
    "text": "append-only immutable schemas that just record every version of the value right",
    "start": "2399510",
    "end": "2406080"
  },
  {
    "text": "so start it out a few equals bar and then the next version was bars and then it changed back to bar and these simple",
    "start": "2406080",
    "end": "2413040"
  },
  {
    "text": "simple tables right not only can produce deltas you can always tell what the difference is between any two versions",
    "start": "2413040",
    "end": "2419040"
  },
  {
    "text": "you can also query the current value so we can emulate our previous table very easily and we can also optimize out",
    "start": "2419040",
    "end": "2425100"
  },
  {
    "text": "changes right for data plane is still at version 1 and the customer made like two",
    "start": "2425100",
    "end": "2430380"
  },
  {
    "text": "changes one you know rolling back deal there we know we don't have to propagate anything at all all right we can detect",
    "start": "2430380",
    "end": "2436619"
  },
  {
    "text": "that there's actually no real Delta and that need optimization helps but then",
    "start": "2436619",
    "end": "2442080"
  },
  {
    "text": "you got to be careful about how you merge patches you gotta be paranoid about how the system integrates the",
    "start": "2442080",
    "end": "2447090"
  },
  {
    "text": "actual best thing to do is not do that at all and actually just keep a versioned data structure right there in",
    "start": "2447090",
    "end": "2454650"
  },
  {
    "text": "your data plane if possible right so you've got some versions some recent versions of your user configuration data",
    "start": "2454650",
    "end": "2460619"
  },
  {
    "text": "out there also makes it really easy to implement snapshots and rollback and stuff like that if you ever really want",
    "start": "2460619",
    "end": "2466290"
  },
  {
    "text": "to which are nice you know customer features we do have systems that can you know automatically roll back to previous",
    "start": "2466290",
    "end": "2472140"
  },
  {
    "text": "states if they detect large problems assuming that you know it was the result of a mis configuration and we would be",
    "start": "2472140",
    "end": "2477960"
  },
  {
    "text": "able to build those without these patterns this is a really common pattern but this is also an example of an",
    "start": "2477960",
    "end": "2484920"
  },
  {
    "text": "immortality and so this is where we get to my tan pattern and the way to really",
    "start": "2484920",
    "end": "2490680"
  },
  {
    "start": "2485000",
    "end": "2640000"
  },
  {
    "text": "think about stable and simple systems is you you want to minimize the number of",
    "start": "2490680",
    "end": "2497490"
  },
  {
    "text": "modes of operation right you want to minimize the number of branches of code",
    "start": "2497490",
    "end": "2502710"
  },
  {
    "text": "that can be executed because anytime you were going down new modes or new",
    "start": "2502710",
    "end": "2509070"
  },
  {
    "text": "branches that have never been executed before combinations of code that have never occurred",
    "start": "2509070",
    "end": "2514110"
  },
  {
    "text": "before in the universe you're crossing your fingers a little bit right and if",
    "start": "2514110",
    "end": "2519210"
  },
  {
    "text": "you have a lot of modes and a lot of branches in your code right if there's a",
    "start": "2519210",
    "end": "2524250"
  },
  {
    "text": "lot of pots things can take if there's a lot of states system can be in you get these combinatorial explosions very",
    "start": "2524250",
    "end": "2530760"
  },
  {
    "text": "quickly that are completely untestable and make it very very hard to build",
    "start": "2530760",
    "end": "2535920"
  },
  {
    "text": "stable systems so too high kind of macro level what our job is right it's just to",
    "start": "2535920",
    "end": "2541230"
  },
  {
    "text": "minimize that number of modes of operation minimize the number of different states can be and so like",
    "start": "2541230",
    "end": "2547980"
  },
  {
    "text": "what's the dumbest simplest way we can do that right you know and so we have",
    "start": "2547980",
    "end": "2555000"
  },
  {
    "text": "this pattern and this pattern came about from answering a really simple question right like okay we have say an ec2 event",
    "start": "2555000",
    "end": "2564060"
  },
  {
    "text": "and power goes down and all of a sudden a lot of net a lot of our health checks fail they say hey that instance is down",
    "start": "2564060",
    "end": "2570210"
  },
  {
    "text": "great and take it out of DNS or whatever right that's basically how our DNS helped I'll check system works that's",
    "start": "2570210",
    "end": "2576780"
  },
  {
    "text": "what's supposed to do well if you build a system like we've been talking about using all these patterns with",
    "start": "2576780",
    "end": "2581880"
  },
  {
    "text": "asynchronous coupling and workflows and queues it's gonna go really badly right it's gonna build up this huge backlog",
    "start": "2581880",
    "end": "2589140"
  },
  {
    "text": "and queue of actions right at the worst possible time because on a day to day",
    "start": "2589140",
    "end": "2594810"
  },
  {
    "text": "basis like a few health checks are failing now and then but for them all to fail at once that's a huge event way",
    "start": "2594810",
    "end": "2601680"
  },
  {
    "text": "more load than the system ever normally operates with or test away and they you could you know be very diligent and",
    "start": "2601680",
    "end": "2607290"
  },
  {
    "text": "constantly strive to make sure it's provisioned for that event but that's really hard to do so and we don't want",
    "start": "2607290",
    "end": "2614850"
  },
  {
    "text": "lag like I said earlier that's the worst enemy in all of this so we we came up",
    "start": "2614850",
    "end": "2620070"
  },
  {
    "text": "with a different design pattern which is well why don't we just like push all the",
    "start": "2620070",
    "end": "2628590"
  },
  {
    "text": "state all the time I'll get to that in a minute and we have another anti pattern where this all kind of came about too",
    "start": "2628590",
    "end": "2635220"
  },
  {
    "text": "which is another example of a modality that we've learned to fear which is",
    "start": "2635220",
    "end": "2641040"
  },
  {
    "start": "2640000",
    "end": "2750000"
  },
  {
    "text": "actually relational databases right so relational databases are awesome if you",
    "start": "2641040",
    "end": "2647160"
  },
  {
    "text": "want to model like business structure data if you want to do a query that says you know select",
    "start": "2647160",
    "end": "2652680"
  },
  {
    "text": "all the customers who have a yellow car who lived in the following zip code right they're great at that they're really awesome they are terrible",
    "start": "2652680",
    "end": "2659190"
  },
  {
    "text": "terrible terrible for control Blaine's to the point that we basically hardbound them you essentially one of the few",
    "start": "2659190",
    "end": "2667800"
  },
  {
    "text": "things you are not allowed to do as a team burning an ADA web service is to use a relational database in your",
    "start": "2667800",
    "end": "2673860"
  },
  {
    "text": "control plane and that is because we have found that relational databases have a lot of these modes right they've",
    "start": "2673860",
    "end": "2681000"
  },
  {
    "text": "got a lot of hidden optimizations they've got these you know very sophisticated you know emergent query",
    "start": "2681000",
    "end": "2687720"
  },
  {
    "text": "plan optimization and optimizers that are constantly looking at your data access patterns and deciding which type",
    "start": "2687720",
    "end": "2693900"
  },
  {
    "text": "of indexes to use and they can suddenly change their minds about how a query should be executed and your performance",
    "start": "2693900",
    "end": "2699600"
  },
  {
    "text": "can just radically change in an instant even though you didn't really do anything right and that mode can be",
    "start": "2699600",
    "end": "2705060"
  },
  {
    "text": "catastrophic so we've you know we've learnt to use no sequel databases like dynamo DB where the performance",
    "start": "2705060",
    "end": "2711570"
  },
  {
    "text": "characteristics what the code is doing how how joins are happening how merges are occurring all is very obvious to the",
    "start": "2711570",
    "end": "2718560"
  },
  {
    "text": "programmer much easier to reason about and builds much much fire saber systems",
    "start": "2718560",
    "end": "2725040"
  },
  {
    "text": "and so what's going on right in this case is we're taking something where we can have all these modes and",
    "start": "2725040",
    "end": "2730730"
  },
  {
    "text": "optimizations behind the scenes we're turning them off and we're saying do it the dumb way every time you know always",
    "start": "2730730",
    "end": "2736590"
  },
  {
    "text": "do a full table scan always do a full joint right or if you're doing any optimizations totally obvious to the",
    "start": "2736590",
    "end": "2743220"
  },
  {
    "text": "programmer and we're always doing them and that's how we solve the database case well how do we solve that for the",
    "start": "2743220",
    "end": "2748290"
  },
  {
    "text": "Haldex case - we do like something really really dumb right imagine if",
    "start": "2748290",
    "end": "2753810"
  },
  {
    "start": "2750000",
    "end": "2885000"
  },
  {
    "text": "instead of like computing deltas instead of tracking like what's changed and pushing that out right imagine if we",
    "start": "2753810",
    "end": "2761970"
  },
  {
    "text": "just put some config in a file and s3 right so like user makes a change that",
    "start": "2761970",
    "end": "2766980"
  },
  {
    "text": "just changes a file on s3 and then there's no real queues or word flow or anything pushing data to the data plane",
    "start": "2766980",
    "end": "2774300"
  },
  {
    "text": "and instead the data plane is just in a loop like every 10 seconds just getting that file in a stirry whether it changed",
    "start": "2774300",
    "end": "2780990"
  },
  {
    "text": "or not right this is unbelievably reliable and robust it is incredibly resilient",
    "start": "2780990",
    "end": "2788069"
  },
  {
    "text": "it won't build a backlogs it won't build up queues it'll just work and the system",
    "start": "2788069",
    "end": "2794519"
  },
  {
    "text": "does not care how much changes right if every single file change is fine every",
    "start": "2794519",
    "end": "2800220"
  },
  {
    "text": "entry change is fine because it's doing the same thing every time and this is actually how we ended",
    "start": "2800220",
    "end": "2805470"
  },
  {
    "text": "the building our network hell checks this is what rule 53 hull checks are doing got these distributed he'll check",
    "start": "2805470",
    "end": "2811230"
  },
  {
    "text": "fleets all over the world checking your service in real time health checking it and those aggregate",
    "start": "2811230",
    "end": "2816390"
  },
  {
    "text": "to a bitmap right that bitmap has like two bits per per hell check status to",
    "start": "2816390",
    "end": "2823079"
  },
  {
    "text": "just indicate whether it's healthy and whether it's stale and and it pushes",
    "start": "2823079",
    "end": "2830400"
  },
  {
    "text": "those bits no matter what those bits are always going to every single one of our DNS servers right and the DNS server is",
    "start": "2830400",
    "end": "2836700"
  },
  {
    "text": "when they get a request they're looking at that mipmap and if the bitmaps one well you you serve that IP and if it's",
    "start": "2836700",
    "end": "2842609"
  },
  {
    "text": "zero you don't and it doesn't really care if it's a one or a zero it actually runs to all the code every time and",
    "start": "2842609",
    "end": "2849109"
  },
  {
    "text": "literally every he'll check could fail in a whole zone a region or whatever the",
    "start": "2849109",
    "end": "2854640"
  },
  {
    "text": "system doesn't even know does not care and it's incredibly reliable and it is",
    "start": "2854640",
    "end": "2860640"
  },
  {
    "text": "it is what when those events do happen it is what takes like every lb node in",
    "start": "2860640",
    "end": "2866069"
  },
  {
    "text": "the zone out of service super super reliably it's and it's incredibly simple pattern if you want to",
    "start": "2866069",
    "end": "2872700"
  },
  {
    "text": "apply it to your own services it's also like surprisingly cheap right like if you've got a hundred nodes which is",
    "start": "2872700",
    "end": "2878789"
  },
  {
    "text": "quite a big service doing something and they're like just fetching a config every 10 seconds that costs twelve",
    "start": "2878789",
    "end": "2885930"
  },
  {
    "text": "hundred year in s tree request costs it's nothing right like you really have",
    "start": "2885930",
    "end": "2890940"
  },
  {
    "text": "to ask yourself like how much developer time is it worth spending on a system that figures out deltas and pushes out",
    "start": "2890940",
    "end": "2897269"
  },
  {
    "text": "workflows and does all this stuff when you could just be fetching the file every time anyway for you know a few",
    "start": "2897269",
    "end": "2902730"
  },
  {
    "text": "hundred dollars in a year what are you really optimizing for at that point but surprisingly few systems work like this",
    "start": "2902730",
    "end": "2908819"
  },
  {
    "text": "even though like we can go into design sometimes and suggested and do the map and it's fine",
    "start": "2908819",
    "end": "2914960"
  },
  {
    "text": "and then we get a simple system stable reliable awesome that's my last pattern hopefully one of",
    "start": "2914960",
    "end": "2921950"
  },
  {
    "text": "those tan was new to everybody in this room I would love it if that's the case and and it'll give us some jumping-off",
    "start": "2921950",
    "end": "2928610"
  },
  {
    "text": "points into like cool new areas things you can throw into an internet search and go really deep in deep on if you",
    "start": "2928610",
    "end": "2934490"
  },
  {
    "text": "want but the key things you know if you take nothing else away please remember",
    "start": "2934490",
    "end": "2941330"
  },
  {
    "start": "2935000",
    "end": "3043000"
  },
  {
    "text": "that you know if you spot a control system that isn't measuring state that doesn't have some kind of polar a probe",
    "start": "2941330",
    "end": "2947780"
  },
  {
    "text": "ER or system that's actually checking like it's actually thing as it should be you need to fix that you don't have a",
    "start": "2947780",
    "end": "2956330"
  },
  {
    "text": "closed loop that's the the simplest error right next big thing is she can",
    "start": "2956330",
    "end": "2961430"
  },
  {
    "text": "couple systems asynchronously give yourself some slack you can have systems that aren't you know quite as rigid and",
    "start": "2961430",
    "end": "2969290"
  },
  {
    "text": "I'm just gonna like collapse there's one big thing you're building some looseness into the system which is nice and then",
    "start": "2969290",
    "end": "2976370"
  },
  {
    "text": "try to develop a mentality of like thinking about modalities and state space and combinations and like how many",
    "start": "2976370",
    "end": "2983120"
  },
  {
    "text": "different modes this thing might be operating in and we're really trying to pare that down like that's our core",
    "start": "2983120",
    "end": "2988670"
  },
  {
    "text": "mission if we want to build simple stable systems right and it's a skill that you get better at with practice",
    "start": "2988670",
    "end": "2993860"
  },
  {
    "text": "like anything else a lot of these lessons are things we are baking into",
    "start": "2993860",
    "end": "2998960"
  },
  {
    "text": "our own services you know if you build a control plane on Amazon API gateway with",
    "start": "2998960",
    "end": "3004030"
  },
  {
    "text": "like lambda as the backend like we're doing a lot of this for you you know we've got the throttling engines we've",
    "start": "3004030",
    "end": "3009880"
  },
  {
    "text": "got the moderators there's a bid and the a PID loop as part of it you know I hope",
    "start": "3009880",
    "end": "3017020"
  },
  {
    "text": "over time we'll be able to make it easier and easier and easier to build you know just automatically stable",
    "start": "3017020",
    "end": "3023080"
  },
  {
    "text": "control systems if you want more detail on this anything I've covered here you",
    "start": "3023080",
    "end": "3029170"
  },
  {
    "text": "know feel free to approach me at the conference or find me on Twitter or send me an email whatever you want I'm happy",
    "start": "3029170",
    "end": "3035710"
  },
  {
    "text": "to talk about this stuff at all all of this stuff at any time I can go crazy deep on a lot of it and thank you all",
    "start": "3035710",
    "end": "3043210"
  },
  {
    "start": "3043000",
    "end": "3518000"
  },
  {
    "text": "for coming it's great",
    "start": "3043210",
    "end": "3047160"
  },
  {
    "text": "we do have nine minutes for questions if anybody has any from the floor it's kind",
    "start": "3050740",
    "end": "3057320"
  },
  {
    "text": "of hard for me to see though oh there's",
    "start": "3057320",
    "end": "3063140"
  },
  {
    "text": "a question to my right",
    "start": "3063140",
    "end": "3065950"
  },
  {
    "text": "I didn't catch the start of your question sorry",
    "start": "3080500",
    "end": "3084869"
  },
  {
    "text": "so the question was what are really common examples of control systems that I see outside of like our low level of",
    "start": "3089680",
    "end": "3094809"
  },
  {
    "text": "infrastructure so in a weird way almost every amazon web service is a control",
    "start": "3094809",
    "end": "3100599"
  },
  {
    "text": "plane right it's what our customers are using as their control planes right like",
    "start": "3100599",
    "end": "3106119"
  },
  {
    "text": "they're calling the ec2 API and it's really just a control plane for them it's gonna launch an instance and we",
    "start": "3106119",
    "end": "3112720"
  },
  {
    "text": "take care of you know a lot of the hard work I a lot of customers have the most",
    "start": "3112720",
    "end": "3120670"
  },
  {
    "text": "common ones that I've seen are a lot of customers have systems that essentially take feature flags or settings and then",
    "start": "3120670",
    "end": "3128200"
  },
  {
    "text": "distribute those or sync those to a large fleet right a lot of customers will have some kind of config file that",
    "start": "3128200",
    "end": "3135069"
  },
  {
    "text": "controls what their service can do and sometimes it's even got like per user feature flags you know they've the",
    "start": "3135069",
    "end": "3140470"
  },
  {
    "text": "ability to enable a feature for select customers who are in a beta or select customers or may be experiencing a",
    "start": "3140470",
    "end": "3146260"
  },
  {
    "text": "problem or whatever and they will have built some control plane for taking that",
    "start": "3146260",
    "end": "3152829"
  },
  {
    "text": "state and distributing it that's probably the most the most common example that I can think of any other",
    "start": "3152829",
    "end": "3161349"
  },
  {
    "text": "questions oh we've got another question",
    "start": "3161349",
    "end": "3164940"
  },
  {
    "text": "so the question was do we have her butt heads with like product managers how do we how do we basically prioritize this",
    "start": "3175930",
    "end": "3182210"
  },
  {
    "text": "work and and do we butt heads and all I guess F that is a very fair question and",
    "start": "3182210",
    "end": "3189470"
  },
  {
    "text": "is it a constant struggle everywhere I think you you could you could spend an infinite amount of time making every",
    "start": "3189470",
    "end": "3196880"
  },
  {
    "text": "control system perfect and you would have not have a viable business right you wouldn't have paying customers and",
    "start": "3196880",
    "end": "3202989"
  },
  {
    "text": "you would all you know find yourselves unemployed very soon and it would not be",
    "start": "3202989",
    "end": "3208160"
  },
  {
    "text": "good right so how do you know when enough is enough",
    "start": "3208160",
    "end": "3213759"
  },
  {
    "text": "from our experience you know of 12 plus years at this now I would say it is more",
    "start": "3213759",
    "end": "3219739"
  },
  {
    "text": "than you think and it's you know we invest a tremendous",
    "start": "3219739",
    "end": "3227960"
  },
  {
    "text": "amount of behind-the-scenes effort on things that never really reflect in in product features that are all just about",
    "start": "3227960",
    "end": "3234769"
  },
  {
    "text": "stability and resilience got major initiatives like when Peter talked about today about blast radius reduction that",
    "start": "3234769",
    "end": "3240769"
  },
  {
    "text": "across the whole and every team knows about and we're doing huge amounts of work because we know that you know if we",
    "start": "3240769",
    "end": "3247400"
  },
  {
    "text": "didn't have a stable reliable system our core business would be down and no",
    "start": "3247400",
    "end": "3253009"
  },
  {
    "text": "customer wants that and so that's how we prioritize it we turn it in back into",
    "start": "3253009",
    "end": "3259249"
  },
  {
    "text": "customer impact and business impact and then we've got really strong support from you know all the way up to our CEO",
    "start": "3259249",
    "end": "3266150"
  },
  {
    "text": "on that front you know there will always prioritize realistic credible you know",
    "start": "3266150",
    "end": "3271160"
  },
  {
    "text": "safety concerns and make sure that we're addressing those but I don't know how to do it any other way then you need that",
    "start": "3271160",
    "end": "3277729"
  },
  {
    "text": "support to and there was another question over here or maybe not",
    "start": "3277729",
    "end": "3284979"
  },
  {
    "text": "so the question was how do we institutionalize these kind of learnings so in Amazon what we do is we have",
    "start": "3292460",
    "end": "3298349"
  },
  {
    "text": "things like the POA Talk series like I mentioned where we give a Tech Talk every week and we cover topics just like this we have design review process where",
    "start": "3298349",
    "end": "3304830"
  },
  {
    "text": "teams can ask for a principle design review and some principle engineers will show up and give them their best advice",
    "start": "3304830",
    "end": "3310590"
  },
  {
    "text": "we have an operational readiness review process where before any system goes live you know we do these deep turret",
    "start": "3310590",
    "end": "3317130"
  },
  {
    "text": "operational readiness assessments with the teams and check that they have like a lot of these things applied and help",
    "start": "3317130",
    "end": "3322680"
  },
  {
    "text": "them understand and then we obviously try to codify a lot of these practices",
    "start": "3322680",
    "end": "3328109"
  },
  {
    "text": "and make them the defaults in our internal software so like our internal you know stack that you know the kind of",
    "start": "3328109",
    "end": "3335460"
  },
  {
    "text": "default stock you use for building a web service just has a lot of this baked in person you have my favorite way to do it",
    "start": "3335460",
    "end": "3341430"
  },
  {
    "text": "because you like you just write it in code and the code remembers and you don't just have to rely on good intentions and asking everybody to",
    "start": "3341430",
    "end": "3348180"
  },
  {
    "text": "remember got a question over here",
    "start": "3348180",
    "end": "3353030"
  },
  {
    "text": "so the question was how do we phase all this if we're say building a new service how do we how do we do all this work it",
    "start": "3365810",
    "end": "3372710"
  },
  {
    "text": "is a mix so if you've got an experienced team of veterans you know they'll just",
    "start": "3372710",
    "end": "3377960"
  },
  {
    "text": "they'll just do this automatically without even thinking about it it'll be like a second nature to them",
    "start": "3377960",
    "end": "3383030"
  },
  {
    "text": "and it'll be hyper efficient we'll just come right out and it's it's amazing to experience and you know for that team",
    "start": "3383030",
    "end": "3389930"
  },
  {
    "text": "it's you know like 10 steps forward one step back in general like well as you progress for a more junior novice team",
    "start": "3389930",
    "end": "3397400"
  },
  {
    "text": "who for whom all these patterns are new it can be like three step forward one step back you know you do three steps of work and",
    "start": "3397400",
    "end": "3405350"
  },
  {
    "text": "then someone steps in and says well you missed these things and then they have to go one back and fix it right",
    "start": "3405350",
    "end": "3411230"
  },
  {
    "text": "we we we try to mechanize and systemize it into just how we do all these reviews",
    "start": "3411230",
    "end": "3416840"
  },
  {
    "text": "right so that we we catch them and then we just say well you know you can't not",
    "start": "3416840",
    "end": "3422990"
  },
  {
    "text": "have that like you can't not have Jack's on me so you'll you know your launch is gonna be delayed or whatever yeah if you have",
    "start": "3422990",
    "end": "3430070"
  },
  {
    "text": "to implement that that doesn't really come up too much thankfully because we've you know systemically mechanized a",
    "start": "3430070",
    "end": "3436220"
  },
  {
    "text": "lot of all this but that's I mean that's the key if if you're making difficult",
    "start": "3436220",
    "end": "3442760"
  },
  {
    "text": "more difficult priorities like whether or not to do something at all just to be able to launch more quickly we tend not",
    "start": "3442760",
    "end": "3450110"
  },
  {
    "text": "to do that so I don't really have any experience",
    "start": "3450110",
    "end": "3454600"
  },
  {
    "text": "so the question was there are any considerations to be given because distribute systems don't have a common",
    "start": "3464529",
    "end": "3470480"
  },
  {
    "text": "clock and yes so what I guess one of our anti patterns is like using system",
    "start": "3470480",
    "end": "3476720"
  },
  {
    "text": "clocks we discourage that like don't rely on wall clock time it's generally",
    "start": "3476720",
    "end": "3482660"
  },
  {
    "text": "not accurate enough to resolve tight race conditions and so the versioning",
    "start": "3482660",
    "end": "3489380"
  },
  {
    "text": "scheme that I had up in the slides is an example of a logical clock rate which we use instead so we have logical clocks",
    "start": "3489380",
    "end": "3496249"
  },
  {
    "text": "for a lot of our control planes where you to make a change that'll progress the logical clock to the next value and",
    "start": "3496249",
    "end": "3501920"
  },
  {
    "text": "we check if the data plane has a logical clock value and that's dead that's all",
    "start": "3501920",
    "end": "3508970"
  },
  {
    "text": "the time we have for questions but I'll take more of the floor if people have them thanks again for coming",
    "start": "3508970",
    "end": "3515080"
  },
  {
    "text": "[Applause]",
    "start": "3515080",
    "end": "3520679"
  }
]