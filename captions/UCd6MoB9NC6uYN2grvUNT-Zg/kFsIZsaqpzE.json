[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "good evening guys thank you very much for attending this session today this is",
    "start": "230",
    "end": "6180"
  },
  {
    "text": "deaf 204 debugging modern applications I know the monitor outside said monitoring",
    "start": "6180",
    "end": "13790"
  },
  {
    "text": "modern applications so we're going to switch this up a little bit on you guys and as Alan was telling me earlier we're",
    "start": "13790",
    "end": "21359"
  },
  {
    "text": "competing against free beer and snacks so we create you guys being here all",
    "start": "21359",
    "end": "27570"
  },
  {
    "text": "right so let's get started with what to expect from this session I'll quickly",
    "start": "27570",
    "end": "33840"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "introduce myself my name is Abhishek Singh I'm the senior manager for product",
    "start": "33840",
    "end": "39000"
  },
  {
    "text": "management for AWS x-ray and AWS elastic Beanstalk and I'll let Alan quickly",
    "start": "39000",
    "end": "44670"
  },
  {
    "text": "introduce himself Alan Nicola with chick-fil-a a my enterprise architect from Atlanta",
    "start": "44670",
    "end": "51539"
  },
  {
    "text": "Georgia so today what we're gonna cover in this session is give you guys a quick",
    "start": "51539",
    "end": "57120"
  },
  {
    "text": "overview of X ray talk a little bit about the history why we built the product we launched X ray last year at",
    "start": "57120",
    "end": "64378"
  },
  {
    "text": "reinvent so it's been about 12 months since we launched it we'll talk about concepts just so that you guys have a",
    "start": "64379",
    "end": "71490"
  },
  {
    "text": "good overview of what the terminology is what you should be going and searching for if you want to learn more about X",
    "start": "71490",
    "end": "78150"
  },
  {
    "text": "ray since this is an introductory session I will not go into a lot of details we have a deep dive session",
    "start": "78150",
    "end": "84600"
  },
  {
    "text": "that's scheduled for Thursday that will go into much more detail so if you guys are interested in a deep dive we're",
    "start": "84600",
    "end": "90479"
  },
  {
    "text": "gonna cover that on Thursday we're also going to look at the use cases for X ray",
    "start": "90479",
    "end": "96240"
  },
  {
    "text": "why you should be using X ray we'll talk about getting started so that you can",
    "start": "96240",
    "end": "101340"
  },
  {
    "text": "quickly you know after the session maybe tomorrow maybe on your flight back home try a few sample apps get your own apps",
    "start": "101340",
    "end": "109020"
  },
  {
    "text": "instrumented with x-ray we'll talk about chick-fil-a story of how they started",
    "start": "109020",
    "end": "114630"
  },
  {
    "text": "using X ray right after we invent last year and how it's helped them and what",
    "start": "114630",
    "end": "120030"
  },
  {
    "text": "they've learned along the way and then finally we'll do a Q&A so that we can answer any questions that we may not",
    "start": "120030",
    "end": "126600"
  },
  {
    "text": "have answered as part of the presentation so as I mentioned we switch",
    "start": "126600",
    "end": "132660"
  },
  {
    "text": "this a little bit from monitoring to debugging anybody who's done debugging of applications",
    "start": "132660",
    "end": "139819"
  },
  {
    "text": "specifically applications that use service-oriented architectures or operate on multiple fleets if you will",
    "start": "139819",
    "end": "148340"
  },
  {
    "text": "you've known that it's essentially not the same as traditional debugging so in",
    "start": "148340",
    "end": "153660"
  },
  {
    "start": "150000",
    "end": "150000"
  },
  {
    "text": "traditional debugging you know the developer starts with writing some local tests you've got data that goes into",
    "start": "153660",
    "end": "160230"
  },
  {
    "text": "logs then the developer searches through those logs to find any issues going back",
    "start": "160230",
    "end": "165630"
  },
  {
    "text": "again to adding breakpoints when you're debugging and then essentially we adding",
    "start": "165630",
    "end": "171660"
  },
  {
    "text": "log points so what you're doing as part of this process or the cycle is essentially as you find issues you add",
    "start": "171660",
    "end": "178530"
  },
  {
    "text": "additional log statements that essentially enable you to find those issues if they ever happen in the future",
    "start": "178530",
    "end": "183840"
  },
  {
    "text": "so the process of using logs for debugging essentially implies that the",
    "start": "183840",
    "end": "189390"
  },
  {
    "text": "issues that you're logging are issues that you already know about so how do you find issues that you don't know",
    "start": "189390",
    "end": "195540"
  },
  {
    "text": "about all of this I should say is further complicated by the shift from",
    "start": "195540",
    "end": "202320"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "monolithic architectures to service-oriented architectures so previously you had something that had",
    "start": "202320",
    "end": "208380"
  },
  {
    "text": "logs on a single machine maybe a set of machines going into a single place much easier to search and find now you've got",
    "start": "208380",
    "end": "215790"
  },
  {
    "text": "micro services server less service-oriented architectures where",
    "start": "215790",
    "end": "220860"
  },
  {
    "text": "you've got you know possibly hundreds even thousands of different pieces sending logs individually to different",
    "start": "220860",
    "end": "226769"
  },
  {
    "text": "places and now you don't have a mechanism to go and collate all of this and really understand an end-to-end view",
    "start": "226769",
    "end": "233820"
  },
  {
    "text": "of what's going on so I said that I would talk about a little bit about the",
    "start": "233820",
    "end": "239250"
  },
  {
    "text": "history of why we built X ray so when I started with AWS in 2013 I led product",
    "start": "239250",
    "end": "246750"
  },
  {
    "text": "for elastic Beanstalk which is our platform as a service offering after a couple of years about 2015 we started",
    "start": "246750",
    "end": "253620"
  },
  {
    "text": "getting a lot of feedback from our customers who are using service-oriented architectures that it's really difficult",
    "start": "253620",
    "end": "259620"
  },
  {
    "text": "to understand what's going on in this mesh of applications or services and the",
    "start": "259620",
    "end": "265409"
  },
  {
    "text": "feedback really was clear that the traditional process of debugging didn't scale well for these",
    "start": "265409",
    "end": "270750"
  },
  {
    "text": "type of applications and customers kept telling me that it was very tedious he",
    "start": "270750",
    "end": "276060"
  },
  {
    "text": "was repetitive to a certain extent developers found it boring and it took a lot of times it was time-consuming and",
    "start": "276060",
    "end": "283880"
  },
  {
    "text": "so in addition to deploying and managing service-oriented applications or",
    "start": "283880",
    "end": "289919"
  },
  {
    "start": "284000",
    "end": "284000"
  },
  {
    "text": "micro-services applications some of that which is solved by AWS services such as",
    "start": "289919",
    "end": "295470"
  },
  {
    "text": "Beanstalk lambda for server less ec2 container service for containers cloud",
    "start": "295470",
    "end": "300780"
  },
  {
    "text": "formation for managing infrastructure as code it was still difficult prior to x-ray to really understand your cross",
    "start": "300780",
    "end": "307710"
  },
  {
    "text": "service interactions the varying log formats across different services so essentially developers writing services",
    "start": "307710",
    "end": "314460"
  },
  {
    "text": "and different programming languages using different formats for logs made it even harder additionally collecting",
    "start": "314460",
    "end": "321389"
  },
  {
    "text": "aggregating and collating logs at large scale was very difficult and a challenge",
    "start": "321389",
    "end": "327710"
  },
  {
    "text": "so that's part of the reason why we took today's log centric approach where you",
    "start": "327710",
    "end": "333030"
  },
  {
    "start": "329000",
    "end": "329000"
  },
  {
    "text": "essentially have a user talking to a host of services individual services logging to individual log storage",
    "start": "333030",
    "end": "340260"
  },
  {
    "text": "systems if you will to switch it to a user centric approach the whole purpose",
    "start": "340260",
    "end": "346680"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "of xray was really to give developers a user centric view and enable them to",
    "start": "346680",
    "end": "351900"
  },
  {
    "text": "answer questions without actually instrumenting or without actually writing logs or metrics for them prior",
    "start": "351900",
    "end": "358860"
  },
  {
    "text": "to the application being run in production so what x-ray really helps with is",
    "start": "358860",
    "end": "367070"
  },
  {
    "start": "364000",
    "end": "364000"
  },
  {
    "text": "identifying performance bottlenecks in your application so once you've instrumented your application actually",
    "start": "367070",
    "end": "372840"
  },
  {
    "text": "automatically collects metadata about remote calls and you can see which calls are in essence causing bottlenecks so",
    "start": "372840",
    "end": "379830"
  },
  {
    "text": "for example slow database queries you can very easily identify those if you've instrumented your application with x-ray",
    "start": "379830",
    "end": "386330"
  },
  {
    "text": "the second point that x-ray helps with is pinpointing issues to specific",
    "start": "386330",
    "end": "391470"
  },
  {
    "text": "services in your application additionally x-ray also logs errors",
    "start": "391470",
    "end": "397010"
  },
  {
    "text": "including the full stack trace so that you can actually go when you have exceptions see the exact",
    "start": "397010",
    "end": "403889"
  },
  {
    "text": "line of code where you ran or where that exception was thrown and finally I would",
    "start": "403889",
    "end": "409379"
  },
  {
    "text": "say the most important point about x-ray is that everything is duh it does is",
    "start": "409379",
    "end": "414870"
  },
  {
    "text": "very focused on enabling the developer to identify the user impact of any issue",
    "start": "414870",
    "end": "420090"
  },
  {
    "text": "in your system so for example if you were a developer and somebody came up to",
    "start": "420090",
    "end": "425939"
  },
  {
    "text": "you and said hey I'm running you know this metric is at 90% with x-ray you can",
    "start": "425939",
    "end": "431099"
  },
  {
    "text": "go back and say none of my users are impacted so I'm doing a great job on utilization right so a metric being at",
    "start": "431099",
    "end": "437669"
  },
  {
    "text": "90% does not necessarily mean it's a bad thing it's only a bad thing if your users are impacted and x-ray really lets",
    "start": "437669",
    "end": "444300"
  },
  {
    "text": "you answer those questions so before we dive into sort of the details of x-ray I",
    "start": "444300",
    "end": "451680"
  },
  {
    "text": "want to cover a few concepts so that we're on the same page in terms of terminology so with x-ray we've got in",
    "start": "451680",
    "end": "459960"
  },
  {
    "start": "458000",
    "end": "458000"
  },
  {
    "text": "essence what I have here is a three-tier service if you will so there's a front-end and API I have dynamo as the backend or the",
    "start": "459960",
    "end": "466289"
  },
  {
    "text": "database and I'm using a queue and what x-ray does is it starts with this notion",
    "start": "466289",
    "end": "471960"
  },
  {
    "text": "of a trace a trace represents an end to end transaction as seen from the users",
    "start": "471960",
    "end": "477419"
  },
  {
    "text": "point of view the next concept in x-ray is a notion of segments what segments",
    "start": "477419",
    "end": "484379"
  },
  {
    "text": "represent is the entire set of data that's collected as part of a single",
    "start": "484379",
    "end": "489839"
  },
  {
    "text": "service so in this case I have a segment from my front end and I have a segment from my API the third thing is a notion",
    "start": "489839",
    "end": "498629"
  },
  {
    "text": "of sub segments what sub segments represent is remote calls or in process",
    "start": "498629",
    "end": "504199"
  },
  {
    "text": "profiling if you will so if you wrap a function with x-ray which you want a time so assume you have a function that",
    "start": "504199",
    "end": "510569"
  },
  {
    "text": "generates a random number for example and you want to time that function you can wrap an x-ray call around it and",
    "start": "510569",
    "end": "517320"
  },
  {
    "text": "essentially get that timing information and that timing information is captured in x-ray as a sub segment in this case I",
    "start": "517320",
    "end": "524670"
  },
  {
    "text": "have a remote call from the front end to the API which is a sub segment and then",
    "start": "524670",
    "end": "530100"
  },
  {
    "text": "I have two remote calls that go from my API to the dynamodb table as well as the Amazon s qsq they are both",
    "start": "530100",
    "end": "537329"
  },
  {
    "text": "representing sub segments so the easiest way to remember is sub segments is the smallest in essence unit of time that is",
    "start": "537329",
    "end": "545399"
  },
  {
    "text": "being captured by x-ray that then becomes collated or stitched together into segments and then segments get",
    "start": "545399",
    "end": "552509"
  },
  {
    "text": "stitched together into traces so I've covered the top three concepts here I'm",
    "start": "552509",
    "end": "559949"
  },
  {
    "text": "going to talk about a few others x-ray has a notion of annotations now",
    "start": "559949",
    "end": "565680"
  },
  {
    "text": "annotations are really important in that annotations allow you to add business",
    "start": "565680",
    "end": "571079"
  },
  {
    "text": "data to traces a good use case for annotation is imagine your Amazon video",
    "start": "571079",
    "end": "579660"
  },
  {
    "text": "and when a user logs in you essentially attach the user ID to the trace now",
    "start": "579660",
    "end": "586259"
  },
  {
    "text": "you're launching let's assume a new channel let's call it HBO when you",
    "start": "586259",
    "end": "591540"
  },
  {
    "text": "launch that channel you start getting a bunch of customer feedback where customers are complaining hey I've got",
    "start": "591540",
    "end": "597269"
  },
  {
    "text": "problems going and viewing HBO since you have the annotations with the user ID",
    "start": "597269",
    "end": "602639"
  },
  {
    "text": "you can actually go into x-ray and say for all users that have channel as HBO",
    "start": "602639",
    "end": "608910"
  },
  {
    "text": "show me the user IDs and you can actually track that and you can get a top k list of all your users that are",
    "start": "608910",
    "end": "615930"
  },
  {
    "text": "being impacted and what the impact on each individual user is so you're essentially getting high cardinality",
    "start": "615930",
    "end": "622350"
  },
  {
    "text": "metrics if you will to simplify it a little bit by using annotations and",
    "start": "622350",
    "end": "627720"
  },
  {
    "text": "attaching business data to x-ray metadata on the other hand is similar to",
    "start": "627720",
    "end": "633209"
  },
  {
    "text": "annotation except that it cannot be used for filtering or searching for traces so",
    "start": "633209",
    "end": "638279"
  },
  {
    "text": "meta data is more about capturing if you will small snippets of code it might be",
    "start": "638279",
    "end": "643649"
  },
  {
    "text": "the output of an API things that you want to look at to get additional context on a trace the next concept is",
    "start": "643649",
    "end": "652980"
  },
  {
    "text": "that of errors so as I mentioned x-ray captures exceptions today including the stock trace so that you know exactly",
    "start": "652980",
    "end": "659160"
  },
  {
    "text": "where the exception happened so that's where eric comes in and then the final notion we have is that of sampling in",
    "start": "659160",
    "end": "666420"
  },
  {
    "text": "x-ray sampling is optional sampling is done in two ways you have a rate based sampling so you can go in and",
    "start": "666420",
    "end": "673050"
  },
  {
    "text": "say I want to sample everything at X percentage or you can set a minimum rate",
    "start": "673050",
    "end": "678750"
  },
  {
    "text": "and say I want to capture at least one transaction per second and above that I want to sample at 5% now why is it",
    "start": "678750",
    "end": "685709"
  },
  {
    "text": "important to have both a rate as well as a fixed sampling rate if you will so",
    "start": "685709",
    "end": "693779"
  },
  {
    "text": "imagine you've got a system where you've got you know a million transactions that come in from us and you've got five",
    "start": "693779",
    "end": "701250"
  },
  {
    "text": "transactions that come in from let's assume Central Asia now if you were to",
    "start": "701250",
    "end": "708449"
  },
  {
    "text": "example both of those at 5% what you would get is the American transactions",
    "start": "708449",
    "end": "713730"
  },
  {
    "text": "would completely swamp out the transactions from Central Asia because in x-ray you can set that minimal rate",
    "start": "713730",
    "end": "719759"
  },
  {
    "text": "and you can do it at a per URL or a per endpoint or per service basis you can",
    "start": "719759",
    "end": "725430"
  },
  {
    "text": "actually say that I wanted sample transactions from Central Asia at a hundred percent versus the American transactions at five percent",
    "start": "725430",
    "end": "731819"
  },
  {
    "text": "similarly you can go in and say hey my payments API is really important and I want to capture everything from there at",
    "start": "731819",
    "end": "738180"
  },
  {
    "text": "100 percent versus my gets on my front end is not really that important I can",
    "start": "738180",
    "end": "743639"
  },
  {
    "text": "sample that much more aggressively so there's a whole bunch of different configuration options that you can do",
    "start": "743639",
    "end": "749399"
  },
  {
    "text": "with sampling in x-ray so we're quickly going to hop into use cases and I'm gonna try to be brave here",
    "start": "749399",
    "end": "756600"
  },
  {
    "text": "and actually do this live as a demo instead of my slides so let's see if I can pull this off",
    "start": "756600",
    "end": "764120"
  },
  {
    "text": "alright let's switch it over",
    "start": "770710",
    "end": "774960"
  },
  {
    "text": "let me see if I can this",
    "start": "780540",
    "end": "788410"
  },
  {
    "text": "but I tried yeah",
    "start": "797149",
    "end": "800498"
  },
  {
    "text": "thank you very much",
    "start": "807220",
    "end": "810180"
  },
  {
    "text": "all right perfect so what I have here is a very simple application this is a three-tier",
    "start": "823490",
    "end": "829920"
  },
  {
    "text": "application it's our sample application actually available on github if you want to go run it it does something very simple you",
    "start": "829920",
    "end": "837750"
  },
  {
    "text": "can go sign up you can put in a name email address and then choose if you're interested in a preview you can click",
    "start": "837750",
    "end": "844080"
  },
  {
    "text": "sign up and what that does is essentially store the email address and this data in a DynamoDB table and then",
    "start": "844080",
    "end": "851580"
  },
  {
    "text": "uses SNS to send notifications now this application is instrumented with x-ray",
    "start": "851580",
    "end": "857460"
  },
  {
    "text": "so let's go look at what it looks like in x-ray so what you're seeing here",
    "start": "857460",
    "end": "862710"
  },
  {
    "text": "essentially in x-ray is what we refer to as a service graph and what the service",
    "start": "862710",
    "end": "868230"
  },
  {
    "text": "graph enables you to do is really understand the architecture of your application right so I've got a service",
    "start": "868230",
    "end": "873750"
  },
  {
    "text": "here called front-end that's talking to my API which is then talking to DynamoDB",
    "start": "873750",
    "end": "879780"
  },
  {
    "text": "and talking to SNS so essentially I get to understand what services are",
    "start": "879780",
    "end": "884820"
  },
  {
    "text": "depending on which services what are my up streams my down streams for example the other thing that you do from the",
    "start": "884820",
    "end": "891330"
  },
  {
    "text": "service graph is essentially you get a notion of health if you will of each individual service so as you can see on",
    "start": "891330",
    "end": "899250"
  },
  {
    "text": "the service graph my front-end has a little bit of orange and red so I've got",
    "start": "899250",
    "end": "905160"
  },
  {
    "text": "some errors and issues going on there my API seems to have a larger percentage",
    "start": "905160",
    "end": "910760"
  },
  {
    "text": "seems to follow what Dynamo is showing me so in dynamo I've got some purple which is throttling and then I've got",
    "start": "910760",
    "end": "917760"
  },
  {
    "text": "some orange which is client-side errors so I'll pull up this map legend so that",
    "start": "917760",
    "end": "923400"
  },
  {
    "text": "you guys can see this so Green is essentially success or okay purple is",
    "start": "923400",
    "end": "928740"
  },
  {
    "text": "throttling errors are four hundred HTTP four hundred status codes so client-side",
    "start": "928740",
    "end": "934920"
  },
  {
    "text": "errors and then faults are 500s so in this case the first use cases I",
    "start": "934920",
    "end": "941250"
  },
  {
    "text": "mentioned of x-ray is really understanding what your service or your application looks like the second use case is diving in either from a",
    "start": "941250",
    "end": "948960"
  },
  {
    "text": "performance perspective or diving in from errors or user impact perspective so what's actually goes",
    "start": "948960",
    "end": "955139"
  },
  {
    "text": "see the user impact perspective so I'm just gonna go and do V traces and what",
    "start": "955139",
    "end": "960269"
  },
  {
    "text": "x-ray just did for me was essentially go in and find all the transactions or",
    "start": "960269",
    "end": "965609"
  },
  {
    "text": "traces that I've captured for that particular front-end I'm gonna switch",
    "start": "965609",
    "end": "970829"
  },
  {
    "text": "this to status code and what you can see here very quickly is that I've got about",
    "start": "970829",
    "end": "977639"
  },
  {
    "text": "you know a little over four percent of my users impacted by four hundreds and",
    "start": "977639",
    "end": "983579"
  },
  {
    "text": "then almost one percent of my impact users impacted by five hundreds so again",
    "start": "983579",
    "end": "989129"
  },
  {
    "text": "very quickly I know what the user impact is of these issues in my application now",
    "start": "989129",
    "end": "995819"
  },
  {
    "text": "once I know that I have these errors let's actually start debugging these errors and see what's going on and get",
    "start": "995819",
    "end": "1001790"
  },
  {
    "text": "to the root cause and actually figure it out so what I can do is just click on 500 and what that did was essentially",
    "start": "1001790",
    "end": "1008779"
  },
  {
    "text": "it's updating this filter expression that I've highlighted over there and I'll pull up the screen here just to",
    "start": "1008779",
    "end": "1014929"
  },
  {
    "text": "give you guys a quick overview of the things you can filter by so in x-ray you can do things like you can search for",
    "start": "1014929",
    "end": "1021350"
  },
  {
    "text": "the global response time so you can say show me all transactions or all requests that took longer than a certain amount",
    "start": "1021350",
    "end": "1028279"
  },
  {
    "text": "of time we have a notion of response time and duration to enable you to encode both synchronous and asynchronous",
    "start": "1028279",
    "end": "1035589"
  },
  {
    "text": "requests similarly we have the ability to search through the graph if you will",
    "start": "1035589",
    "end": "1042168"
  },
  {
    "text": "so you can run queries by saying show me all requests that went through a",
    "start": "1042169",
    "end": "1048260"
  },
  {
    "text": "particular service in this case API example.com that had a fault on that",
    "start": "1048260",
    "end": "1056059"
  },
  {
    "text": "particular remote call and had a response time of greater than 2.5 seconds just for that service this is",
    "start": "1056059",
    "end": "1063019"
  },
  {
    "text": "not the end to end transaction it's just on that service additionally you can search by annotations which I mentioned",
    "start": "1063019",
    "end": "1070429"
  },
  {
    "text": "earlier you can similarly similar similarly excuse me run queries on edges",
    "start": "1070429",
    "end": "1077779"
  },
  {
    "text": "so these are directional connections between services in this case I've got API talking to my back-end and then I'm",
    "start": "1077779",
    "end": "1085580"
  },
  {
    "text": "saying show me all requests where the API talk the back end and that particular remote",
    "start": "1085580",
    "end": "1091740"
  },
  {
    "text": "call had a fault in them I can additionally filter by different properties of the HTTP",
    "start": "1091740",
    "end": "1098970"
  },
  {
    "text": "response or transaction I have some short hands and then I have a full list of different properties I can search by",
    "start": "1098970",
    "end": "1106320"
  },
  {
    "text": "so I'm not going to go into each one of these I'll let you guys do a little bit of reading if you're interested to get",
    "start": "1106320",
    "end": "1113730"
  },
  {
    "text": "more information here so now that I've found all my requests that ended up in",
    "start": "1113730",
    "end": "1120240"
  },
  {
    "text": "500s let's actually go figure out why I'm getting those 500s so I'm actually going to click on one of these",
    "start": "1120240",
    "end": "1126059"
  },
  {
    "text": "transactions and when I click on this can everybody see this at the back or",
    "start": "1126059",
    "end": "1132269"
  },
  {
    "text": "should I make this a little bigger okay better awesome alright so what I have",
    "start": "1132269",
    "end": "1139740"
  },
  {
    "text": "here essentially is I have a request that went from my front end which was a post then it went to the API so it we",
    "start": "1139740",
    "end": "1148649"
  },
  {
    "text": "hop over to a different environment so it could be a different container it could be a different lambda function it",
    "start": "1148649",
    "end": "1154230"
  },
  {
    "text": "could be a micro service that's running you know in your data center for example it could be something that's running on",
    "start": "1154230",
    "end": "1160049"
  },
  {
    "text": "a developer desktop we don't really care as long as the context is maintained you",
    "start": "1160049",
    "end": "1165120"
  },
  {
    "text": "can actually track that through x-ray and then as part of the post on the API I made a call to dynamo DB and as I can",
    "start": "1165120",
    "end": "1173129"
  },
  {
    "text": "see here that's where the error happens and essentially propagates up the stack so if I hover over the error it's",
    "start": "1173129",
    "end": "1180029"
  },
  {
    "text": "telling me that it's a remote fault caused by provision throughput exceeded exception so basically it's telling me I",
    "start": "1180029",
    "end": "1186929"
  },
  {
    "text": "do not have my DynamoDB table configured appropriately specifically the right",
    "start": "1186929",
    "end": "1192840"
  },
  {
    "text": "capacity here so I can actually click on this I get the full exception as I",
    "start": "1192840",
    "end": "1198840"
  },
  {
    "text": "mentioned so there's the full message here and then I have a full stack trace",
    "start": "1198840",
    "end": "1204419"
  },
  {
    "text": "which actually tells me the exact line of code where this happened now in this case it's not really a application or a",
    "start": "1204419",
    "end": "1211769"
  },
  {
    "text": "code issue it's really an issue with me provisioning my dynamodb table so I can",
    "start": "1211769",
    "end": "1217289"
  },
  {
    "text": "simply ignore this and I can look at resources and the resources tab",
    "start": "1217289",
    "end": "1222740"
  },
  {
    "text": "what we're showing you essentially is the table name the region the number of",
    "start": "1222740",
    "end": "1228830"
  },
  {
    "text": "retries in this case the sdks actually retried ten times before they failed so",
    "start": "1228830",
    "end": "1235220"
  },
  {
    "text": "you can actually copy this table name into dynamodb the console and increase",
    "start": "1235220",
    "end": "1240710"
  },
  {
    "text": "the provision throughput for this and fix this issue so very quickly I know",
    "start": "1240710",
    "end": "1247070"
  },
  {
    "text": "that okay that 500 happened because of DynamoDB I can go in here and say that happened because the DynamoDB and very",
    "start": "1247070",
    "end": "1255590"
  },
  {
    "text": "quickly sorry I'll hop back in here it's just as",
    "start": "1255590",
    "end": "1262850"
  },
  {
    "text": "code 500 and so very quickly if I go through a few of these I realize that it's a dynamodb provision throughput",
    "start": "1262850",
    "end": "1269750"
  },
  {
    "text": "issue I go provision my table make it a little larger everything starts working just fine",
    "start": "1269750",
    "end": "1275870"
  },
  {
    "text": "the second issue that I had was a 404 so I'm just gonna type in a 404 since these",
    "start": "1275870",
    "end": "1282080"
  },
  {
    "text": "are URL based I'm just gonna switch the URL and very quickly what I see is a",
    "start": "1282080",
    "end": "1287480"
  },
  {
    "text": "hundred percent of my transactions or requests that failed were because of my",
    "start": "1287480",
    "end": "1293540"
  },
  {
    "text": "blog URL not working so let's actually go prove that very quickly so my blog",
    "start": "1293540",
    "end": "1303770"
  },
  {
    "text": "URL is broken right so I can go fix that very quickly the next thing was a 409 so",
    "start": "1303770",
    "end": "1310640"
  },
  {
    "text": "let's go look at that and so from a 409 perspective let's hop into one of these",
    "start": "1310640",
    "end": "1317179"
  },
  {
    "text": "and see what's going on here so similarly I seem to have something going on on DynamoDB in this case it's a",
    "start": "1317179",
    "end": "1323990"
  },
  {
    "text": "remote fault caused by conditional check failure so if I hop on this I know",
    "start": "1323990",
    "end": "1329660"
  },
  {
    "text": "exactly what line of code my issue happened so having written this code I",
    "start": "1329660",
    "end": "1334700"
  },
  {
    "text": "know if I go look at that line of code it's essentially a conditional right to dynamodb that is checking for the email",
    "start": "1334700",
    "end": "1341150"
  },
  {
    "text": "address and if the email address is duplicated that's when you get this error so having said that I have a",
    "start": "1341150",
    "end": "1348410"
  },
  {
    "text": "hypotheses of why I'm getting these errors and the issue is my hypotheses is",
    "start": "1348410",
    "end": "1354050"
  },
  {
    "text": "someone sending the invalid input which is trying to sign up with the same email address over and over again so let's",
    "start": "1354050",
    "end": "1360860"
  },
  {
    "text": "actually go see what the email address is because I was smart enough to annotate these so I can go look at the",
    "start": "1360860",
    "end": "1366950"
  },
  {
    "text": "annotation and the email address in this case is demo at example.com so let's go",
    "start": "1366950",
    "end": "1374450"
  },
  {
    "text": "back to traces I can go through each one of these traces individually to ensure",
    "start": "1374450",
    "end": "1379760"
  },
  {
    "text": "that each one of them have the annotation demo at example.com or I can",
    "start": "1379760",
    "end": "1385160"
  },
  {
    "text": "do something interesting by going to group by and what group by automatically",
    "start": "1385160",
    "end": "1390800"
  },
  {
    "text": "does is it collects all the annotations that you have and it puts them here so I can get a top k list so if I click on",
    "start": "1390800",
    "end": "1398000"
  },
  {
    "text": "this and my hypotheses is correct I should see a set of email addresses that",
    "start": "1398000",
    "end": "1403040"
  },
  {
    "text": "represent a hundred percent of these transactions and so there you go very",
    "start": "1403040",
    "end": "1408440"
  },
  {
    "text": "quickly I've gone from looking at my code looking at the error that happened to having a hypotheses as to why that's",
    "start": "1408440",
    "end": "1415250"
  },
  {
    "text": "happening and then proving that this is a valid client-side error or a client-side issue and I don't need to",
    "start": "1415250",
    "end": "1422090"
  },
  {
    "text": "worry about this so that's essentially a",
    "start": "1422090",
    "end": "1427370"
  },
  {
    "text": "quick overview of what actually enables you to do one of the things I do want to highlight is this response distribution",
    "start": "1427370",
    "end": "1435590"
  },
  {
    "text": "area that you're seeing here so if I click on this I see that my service has",
    "start": "1435590",
    "end": "1441140"
  },
  {
    "text": "a really good response distribution but I have a bunch of outliers right and so",
    "start": "1441140",
    "end": "1446750"
  },
  {
    "text": "this happens all the time when you have slow database queries for example where you've got cache misses when you don't",
    "start": "1446750",
    "end": "1453290"
  },
  {
    "text": "expect them so I can actually just click on that and do view traces and what",
    "start": "1453290",
    "end": "1459350"
  },
  {
    "text": "x-ray does is automatically generates the filter expression for you so that you get a list of transactions down here",
    "start": "1459350",
    "end": "1466280"
  },
  {
    "text": "that meet that criteria right so these are all my slow transactions and I can",
    "start": "1466280",
    "end": "1471890"
  },
  {
    "text": "sort them and go through them and very quickly have hypotheses or even go back to root cause of why these requests are",
    "start": "1471890",
    "end": "1479000"
  },
  {
    "text": "slow so just wanted to give you guys that last bit before I switch back over to my deck alright so let's hop back",
    "start": "1479000",
    "end": "1487920"
  },
  {
    "text": "here perfect so we talked through the",
    "start": "1487920",
    "end": "1494070"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "visualized service call graph we talked through identifying impact we talked",
    "start": "1494070",
    "end": "1500640"
  },
  {
    "text": "through pinpointing issues which is the 500s we looked at the actual exceptions",
    "start": "1500640",
    "end": "1506640"
  },
  {
    "text": "and the stack traces so that you can go back to code we talked about identifying",
    "start": "1506640",
    "end": "1513090"
  },
  {
    "start": "1512000",
    "end": "1512000"
  },
  {
    "text": "performance bottlenecks so the last",
    "start": "1513090",
    "end": "1520290"
  },
  {
    "start": "1519000",
    "end": "1519000"
  },
  {
    "text": "thing I want to cover here that was not in my demo is x-ray essentially is",
    "start": "1520290",
    "end": "1525590"
  },
  {
    "text": "already available for lambda so for those of you that are working with server or less or lambda x-rays",
    "start": "1525590",
    "end": "1532740"
  },
  {
    "text": "automatically in essence enabled for your lambda functions the value of using",
    "start": "1532740",
    "end": "1539760"
  },
  {
    "text": "x-ray for lambda functions is that it does a few different things for you so what you're seeing on the screen here",
    "start": "1539760",
    "end": "1546060"
  },
  {
    "text": "the two highlighted if you will lines the first line is the actual lambda",
    "start": "1546060",
    "end": "1552180"
  },
  {
    "text": "service so this is something that you cannot get today besides from x-ray and",
    "start": "1552180",
    "end": "1557190"
  },
  {
    "text": "it's telling you how long it took and the difference between the first line and the start of the first line I should",
    "start": "1557190",
    "end": "1563760"
  },
  {
    "text": "say in the start of the second highlighted line is essentially your cold start time or the amount of time it",
    "start": "1563760",
    "end": "1568890"
  },
  {
    "text": "takes for lambda to bring up a container the first time a request hits the second",
    "start": "1568890",
    "end": "1574110"
  },
  {
    "text": "highlighted line is the initialization time so this is the amount of time spent",
    "start": "1574110",
    "end": "1579120"
  },
  {
    "text": "in your init function that you've provided for your function so again for lambda you can very quickly understand",
    "start": "1579120",
    "end": "1585270"
  },
  {
    "text": "the performance characteristics by using x-ray similarly if we look at an",
    "start": "1585270",
    "end": "1590730"
  },
  {
    "text": "existing container you see that it's much faster and you don't incur either the cold start time or the",
    "start": "1590730",
    "end": "1596880"
  },
  {
    "text": "initialization time because of container reuse you also have the same",
    "start": "1596880",
    "end": "1602660"
  },
  {
    "start": "1601000",
    "end": "1601000"
  },
  {
    "text": "capabilities as long as far as it goes two exceptions so in this case I have a",
    "start": "1602660",
    "end": "1609270"
  },
  {
    "text": "exception on s3 and if I hover over it and click on it I can actually see the",
    "start": "1609270",
    "end": "1614280"
  },
  {
    "start": "1611000",
    "end": "1611000"
  },
  {
    "text": "real exception along with the stock trace again so now that I've covered",
    "start": "1614280",
    "end": "1619830"
  },
  {
    "start": "1618000",
    "end": "1618000"
  },
  {
    "text": "that I'm going to hop into some advanced use cases so the first use case",
    "start": "1619830",
    "end": "1625650"
  },
  {
    "text": "of x-ray that not a lot of people know about is that you can use x-ray offcloud what I mean by that is you can use x-ray",
    "start": "1625650",
    "end": "1633150"
  },
  {
    "text": "to instrument applications on on premises you can do it in development on",
    "start": "1633150",
    "end": "1638520"
  },
  {
    "text": "your developer desktop you can do it on other clouds doesn't really matter where",
    "start": "1638520",
    "end": "1643950"
  },
  {
    "text": "you run x-ray as long as the machine that's running x-ray or the application",
    "start": "1643950",
    "end": "1649260"
  },
  {
    "text": "can talk to the extra endpoint and it has the credentials to authenticate with",
    "start": "1649260",
    "end": "1654450"
  },
  {
    "text": "that endpoint the next use case is custom payloads so today we have a bunch",
    "start": "1654450",
    "end": "1660630"
  },
  {
    "text": "of SDKs that allow you to send data into x-ray however we also document our api's",
    "start": "1660630",
    "end": "1666180"
  },
  {
    "text": "and we document the actual data format that you need to send data in to actuary",
    "start": "1666180",
    "end": "1671490"
  },
  {
    "text": "width so for example if you have a workflow that you want a time you can",
    "start": "1671490",
    "end": "1676890"
  },
  {
    "text": "use x-ray at a time that it's not just for applications you can really time anything with x-ray as long as you have",
    "start": "1676890",
    "end": "1683130"
  },
  {
    "text": "the context being propagated and the correlations between different",
    "start": "1683130",
    "end": "1688710"
  },
  {
    "text": "activities being maintained the next advanced use case is deep linking so all",
    "start": "1688710",
    "end": "1695310"
  },
  {
    "text": "the views in the x-ray console are deep linkable what that means is if you're using a tool like Cubana where you've",
    "start": "1695310",
    "end": "1703440"
  },
  {
    "text": "got logs that you're logging your trace IDs into you can actually create hyperlinks directly into x-ray in your",
    "start": "1703440",
    "end": "1710370"
  },
  {
    "text": "Cabana dashboard so that makes it super easy for developers to look at metrics or log lines and then go back and jump",
    "start": "1710370",
    "end": "1718110"
  },
  {
    "text": "into x-ray and look at those request ideas very quickly I covered filter expressions in the",
    "start": "1718110",
    "end": "1724320"
  },
  {
    "text": "quick demo that I did but essentially the ability to quickly filter and find",
    "start": "1724320",
    "end": "1729630"
  },
  {
    "text": "the needles in the haystack if you will is another use case another thing that",
    "start": "1729630",
    "end": "1735180"
  },
  {
    "text": "you can do using the API and filter expressions is that you can build custom dashboards you can do custom alerting",
    "start": "1735180",
    "end": "1741120"
  },
  {
    "text": "that is very specific to your use case so those are some of the things that I",
    "start": "1741120",
    "end": "1746700"
  },
  {
    "text": "didn't cover previously but it's in advance to use case that you can code yourself and finally you can write",
    "start": "1746700",
    "end": "1754200"
  },
  {
    "text": "custom applique so everything that I showed you today with the web console is all using our",
    "start": "1754200",
    "end": "1760530"
  },
  {
    "text": "public API s so you can actually build the service map yourself if you wanted",
    "start": "1760530",
    "end": "1765540"
  },
  {
    "text": "to use a different visualization you can build a timeline x-ray gives you the raw data for all of that so that you can",
    "start": "1765540",
    "end": "1772470"
  },
  {
    "text": "build custom apps custom dashboards for those of you that are interested in",
    "start": "1772470",
    "end": "1778440"
  },
  {
    "text": "custom applications or learning more about x-ray we do have a deep dive session that's coming up on Thursday I",
    "start": "1778440",
    "end": "1785280"
  },
  {
    "text": "have the information there so feel free to attend that David Nunnally our senior",
    "start": "1785280",
    "end": "1790920"
  },
  {
    "text": "manager for software development will be presenting let's quickly hop into how",
    "start": "1790920",
    "end": "1797820"
  },
  {
    "text": "x-ray works so I'll cover the different components of x-ray the first component of x-ray that developers interact with",
    "start": "1797820",
    "end": "1804900"
  },
  {
    "start": "1800000",
    "end": "1800000"
  },
  {
    "text": "is the SDK the SDK is available for java.net Python go and nodejs all the",
    "start": "1804900",
    "end": "1813090"
  },
  {
    "text": "SDK is except for dotnet are open sourced so the code is available on github we're going to open source the",
    "start": "1813090",
    "end": "1819810"
  },
  {
    "text": "dotnet one fairly shortly what the SDKs do essentially is add filters to",
    "start": "1819810",
    "end": "1825870"
  },
  {
    "text": "automatically capture metadata for calls that your application is making or remote calls so things like calls to AWS",
    "start": "1825870",
    "end": "1832320"
  },
  {
    "text": "services not AWS services over HTTP or HTTPS one of the other use cases I",
    "start": "1832320",
    "end": "1838380"
  },
  {
    "text": "should mention about x-ray is that you can actually use it to get response timing or SLA information for third",
    "start": "1838380",
    "end": "1845730"
  },
  {
    "text": "party API is that you're using right so if you're talking to the API is over HTTP or HTTPS you can get a really nice",
    "start": "1845730",
    "end": "1852150"
  },
  {
    "text": "response distribution and then talk to that vendor and hold them to the SLA is that they say that they're providing to",
    "start": "1852150",
    "end": "1858660"
  },
  {
    "text": "you same thing goes for AWS services by the way we have filters available for",
    "start": "1858660",
    "end": "1864630"
  },
  {
    "text": "databases so my sequel Postgres and dynamo DB and then queues in amazon sqs",
    "start": "1864630",
    "end": "1871670"
  },
  {
    "text": "the second piece of the x-ray service is the x-ray daemon the x-ray daemon is",
    "start": "1871670",
    "end": "1877590"
  },
  {
    "start": "1872000",
    "end": "1872000"
  },
  {
    "text": "something that's optional we highly recommend it because it goes in concert",
    "start": "1877590",
    "end": "1882900"
  },
  {
    "text": "with our SDKs and it does a few different things for you one is it",
    "start": "1882900",
    "end": "1888630"
  },
  {
    "text": "takes care of all the authentication with the AWS service back-end it takes",
    "start": "1888630",
    "end": "1893880"
  },
  {
    "text": "care of buffering the data for you and then it takes care of sending all of that data to the backend in an",
    "start": "1893880",
    "end": "1899520"
  },
  {
    "text": "asynchronous way so that your applications latencies are not impacted by running x-ray in production the demon",
    "start": "1899520",
    "end": "1907140"
  },
  {
    "text": "itself is available for various operating systems its pre-installed on lamda and as I mentioned previously it",
    "start": "1907140",
    "end": "1914040"
  },
  {
    "text": "can be run anywhere as long as you have access to the API endpoint and the",
    "start": "1914040",
    "end": "1919050"
  },
  {
    "text": "credentials for AWS and the final piece or the third piece I should say is the",
    "start": "1919050",
    "end": "1926130"
  },
  {
    "start": "1922000",
    "end": "1922000"
  },
  {
    "text": "service itself the way the service works is it collects data from all the various",
    "start": "1926130",
    "end": "1931800"
  },
  {
    "text": "micro services that are sending data to the backend it in essence acts as a",
    "start": "1931800",
    "end": "1937050"
  },
  {
    "text": "funnel collecting all of that data and then it stitches individual transactions into what we call traces so what's going",
    "start": "1937050",
    "end": "1944700"
  },
  {
    "text": "on essentially if I were to use the terminology we talked about earlier is essentially services are sending",
    "start": "1944700",
    "end": "1950820"
  },
  {
    "text": "segments and sub segments to the backend the backend then looks across all the segments and sub segments that have been",
    "start": "1950820",
    "end": "1956850"
  },
  {
    "text": "sent and then it starts stitching them together into traces finally what it",
    "start": "1956850",
    "end": "1962400"
  },
  {
    "text": "does is it outputs the service map what the service map is is an aggregation over a period of time of all your",
    "start": "1962400",
    "end": "1969360"
  },
  {
    "text": "transactions so the way we figured out that the front-end is talking to the API it's talking to dynamo and SNS is",
    "start": "1969360",
    "end": "1976640"
  },
  {
    "text": "essentially by looking at your transactions in an automated fashion and then aggregating them over time so that",
    "start": "1976640",
    "end": "1983790"
  },
  {
    "text": "we can give you this quick visualization enabling you to again dive deeper and find those needles in the haystack",
    "start": "1983790",
    "end": "1990450"
  },
  {
    "text": "that you're looking for the last piece I want to talk about is trace ID and",
    "start": "1990450",
    "end": "1996810"
  },
  {
    "start": "1993000",
    "end": "1993000"
  },
  {
    "text": "propagation now this is important because this is what enables x-ray to",
    "start": "1996810",
    "end": "2002330"
  },
  {
    "text": "actually create the end-to-end view so this is the application that we saw so what I have here is a front-end and API",
    "start": "2002330",
    "end": "2008270"
  },
  {
    "text": "I've got a database of god a third party API and then I've got a worker which is",
    "start": "2008270",
    "end": "2014480"
  },
  {
    "text": "talking or essentially picking up work from a queue so what happens is the sdk",
    "start": "2014480",
    "end": "2021110"
  },
  {
    "text": "starts off by gender a segment and it creates an ID it then",
    "start": "2021110",
    "end": "2026690"
  },
  {
    "text": "propagates that data over the wire to your API with some additional",
    "start": "2026690",
    "end": "2032420"
  },
  {
    "text": "information the API then generates a segment for itself it propagates some",
    "start": "2032420",
    "end": "2039290"
  },
  {
    "text": "data downstream in this case the blue circles or the blue items are not",
    "start": "2039290",
    "end": "2044450"
  },
  {
    "text": "instrumented by x-ray so these are inferred again I have a transaction",
    "start": "2044450",
    "end": "2050600"
  },
  {
    "text": "that's going to a third party API which is not instrumented however that information is sent over the wire so",
    "start": "2050600",
    "end": "2056360"
  },
  {
    "text": "that if at some point in the future the third party API or the database becomes instrumented it can start participating",
    "start": "2056360",
    "end": "2063080"
  },
  {
    "text": "in the tracing and then finally I have that call to the queue then my worker",
    "start": "2063080",
    "end": "2069560"
  },
  {
    "text": "picks up the message from the queue so it's acting up and sending a segment and finally we get that query if you will to",
    "start": "2069560",
    "end": "2076669"
  },
  {
    "text": "the queue so that propagation essentially is what enables us to build a singular trace by using the",
    "start": "2076669",
    "end": "2084378"
  },
  {
    "text": "transaction IDs and the correlation or the parent IDs that you have there here's a quick workflow just to give you",
    "start": "2084379",
    "end": "2092780"
  },
  {
    "start": "2089000",
    "end": "2089000"
  },
  {
    "text": "a sense of how x-ray works so you see the application and the extra SDK you",
    "start": "2092780",
    "end": "2098540"
  },
  {
    "text": "see the ec2 role that's used to authenticate there's the daemon that sending data into the API over HTTP",
    "start": "2098540",
    "end": "2106010"
  },
  {
    "text": "similarly you've got the notion of AWS and then off cloud and then the DevOps",
    "start": "2106010",
    "end": "2111920"
  },
  {
    "text": "team where the developers access this through the x-ray console so I talked",
    "start": "2111920",
    "end": "2117590"
  },
  {
    "start": "2116000",
    "end": "2116000"
  },
  {
    "text": "about sampling here's just an example of the configuration so I'm going to quickly hop over this will quickly jump",
    "start": "2117590",
    "end": "2124280"
  },
  {
    "text": "into the api's so the API is essentially provide you the capabilities to do",
    "start": "2124280",
    "end": "2130190"
  },
  {
    "text": "everything that we've talked about thus far so send data filter data retrieve data all the raw data that's stored in X",
    "start": "2130190",
    "end": "2137300"
  },
  {
    "text": "ray is available through the API additionally the API is enable you to build your own analysis or data analysis",
    "start": "2137300",
    "end": "2143870"
  },
  {
    "text": "applications we have four different api's I won't get into the details here",
    "start": "2143870",
    "end": "2150140"
  },
  {
    "text": "you guys can attend the deep dive session if you want to get into the details but essentially there's a put",
    "start": "2150140",
    "end": "2155960"
  },
  {
    "text": "get for the traces and I get for the service graph and then we have get trace",
    "start": "2155960",
    "end": "2161960"
  },
  {
    "text": "summaries which enables you to do the filtering here's an example of the raw",
    "start": "2161960",
    "end": "2167569"
  },
  {
    "text": "data that's sent to the x-ray service so you can think of this as a structured log and we'll hop into getting started",
    "start": "2167569",
    "end": "2175069"
  },
  {
    "start": "2175000",
    "end": "2175000"
  },
  {
    "text": "so again I will not stay on this a lot long because you guys can read this in",
    "start": "2175069",
    "end": "2182510"
  },
  {
    "text": "the documentation but you can install the agent on ec2 similarly you can",
    "start": "2182510",
    "end": "2187700"
  },
  {
    "start": "2187000",
    "end": "2187000"
  },
  {
    "text": "install it on Windows using a shell script or PowerShell script you can do this on containers by using our binary",
    "start": "2187700",
    "end": "2195279"
  },
  {
    "text": "in terms of instrumentation I want to cover this slide so all the lines in",
    "start": "2195279",
    "end": "2201380"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "blue are essentially what you have to write to instrument your application to get started with x-ray what I have there",
    "start": "2201380",
    "end": "2207470"
  },
  {
    "text": "is essentially pulling in the SDK for x-ray initializing a few things setting",
    "start": "2207470",
    "end": "2213920"
  },
  {
    "text": "a few optional configurations and then starting and ending my Express handler if you will and this is roughly what you",
    "start": "2213920",
    "end": "2221119"
  },
  {
    "text": "need to do regardless of the size of your application for Java for example you load in a servlet filter",
    "start": "2221119",
    "end": "2226400"
  },
  {
    "text": "I know Allen's going to talk about that a little bit so I'll hand it over to",
    "start": "2226400",
    "end": "2231470"
  },
  {
    "text": "Allen",
    "start": "2231470",
    "end": "2233799"
  },
  {
    "text": "and sound effect so my name is Alan and I work for chick-fil-a and and yes that",
    "start": "2237750",
    "end": "2246600"
  },
  {
    "start": "2245000",
    "end": "2245000"
  },
  {
    "text": "that Cal is wearing extra glasses just for this presentation though so if",
    "start": "2246600",
    "end": "2252420"
  },
  {
    "text": "you're not familiar with chick-fil-a we're a quick service restaurant we sell a lot of chicken and we have about 2,000",
    "start": "2252420",
    "end": "2259680"
  },
  {
    "text": "locations and the our locations are a little bit different than a normal franchise chick-fil-a bills out the",
    "start": "2259680",
    "end": "2266430"
  },
  {
    "text": "restaurant puts all the IT and the technology and the restaurants then we get what we call an operator to run that",
    "start": "2266430",
    "end": "2272040"
  },
  {
    "text": "chick-fil-a and and it's really a small business maybe about 120 employees that",
    "start": "2272040",
    "end": "2277440"
  },
  {
    "text": "are running each one of those chicken place and almost all of our operators run one chick-fil-a so they were there",
    "start": "2277440",
    "end": "2282510"
  },
  {
    "text": "on out a very you know typically daily basis and a very small number of them what can run up to three three",
    "start": "2282510",
    "end": "2288960"
  },
  {
    "text": "chick-fil-a's but that's kind of a little bit of how chick-fil-a works and",
    "start": "2288960",
    "end": "2294630"
  },
  {
    "text": "so I'll tell you a little bit about kind of a journey we started about a year and a half ago and really around starting to",
    "start": "2294630",
    "end": "2302130"
  },
  {
    "start": "2296000",
    "end": "2296000"
  },
  {
    "text": "use cloud change in our organization a little bit to use DevOps so we created a project there was our",
    "start": "2302130",
    "end": "2308010"
  },
  {
    "text": "first DevOps team um that we created and also really come from an architecture perspective embracing micro services so",
    "start": "2308010",
    "end": "2315300"
  },
  {
    "text": "three huge buzz buzz words check check check and from a use-case perspective um for",
    "start": "2315300",
    "end": "2324090"
  },
  {
    "text": "our operators we're creating a mobile app for Android and iOS that we call chick-fil-a now and so it shows",
    "start": "2324090",
    "end": "2330090"
  },
  {
    "text": "operators and their management team what's going on in their restaurant right now from a data perspective so for",
    "start": "2330090",
    "end": "2335220"
  },
  {
    "text": "example you can look and see your sales down to the minute right now but also compare them to the same day last week",
    "start": "2335220",
    "end": "2340950"
  },
  {
    "text": "or compare them to the same day last year um see how are we doing not just raw data but data that's kind of",
    "start": "2340950",
    "end": "2346500"
  },
  {
    "text": "actionable labor data maybe truck tracking data hey your trucks 30 minutes away",
    "start": "2346500",
    "end": "2352560"
  },
  {
    "text": "maybe data around your all your different employees all the contact information so kind of fits really well",
    "start": "2352560",
    "end": "2358770"
  },
  {
    "text": "with micro services because it's it's a whole bunch of different kind of unique data sets and some of those data sets",
    "start": "2358770",
    "end": "2365340"
  },
  {
    "text": "are nice cloud native api's some of them hit legacy systems some of them reached all the way back across",
    "start": "2365340",
    "end": "2371190"
  },
  {
    "text": "a bunch of awful networks into our store and pull data out and so there's the potential for all kinds of fun",
    "start": "2371190",
    "end": "2378240"
  },
  {
    "text": "performance problems to debug across there and so from a technology perspective and just kind of tied to the",
    "start": "2378240",
    "end": "2384630"
  },
  {
    "text": "skill set of the team but Java and spring boot deployed on top of elastic Beanstalk and a lot of our back-end data",
    "start": "2384630",
    "end": "2391410"
  },
  {
    "text": "stored in DynamoDB and we also use quite a bit of lambda and so we jumped in with",
    "start": "2391410",
    "end": "2397470"
  },
  {
    "text": "that one kind a lot of fun and the results we had a lot of success I mean success where it",
    "start": "2397470",
    "end": "2404460"
  },
  {
    "text": "really matters we impacted our operators is very positively received we got an instant massive pipeline of new features",
    "start": "2404460",
    "end": "2411359"
  },
  {
    "text": "which always as a gauge of success definitely DevOps from our perspective",
    "start": "2411359",
    "end": "2417150"
  },
  {
    "text": "we got out of our cubes we got out of our offices co-located in the same space worked really around two-week Sprint's",
    "start": "2417150",
    "end": "2423650"
  },
  {
    "text": "that was actually a whole lot of fun and something more propagating through our organization obviously the cloud is I'm",
    "start": "2423650",
    "end": "2430589"
  },
  {
    "text": "pretty impactful and micro services were definitely awesome from our our set of things but while they solve a lot of",
    "start": "2430589",
    "end": "2437339"
  },
  {
    "text": "problems didn't break up the monolith they add extra complexity to especially",
    "start": "2437339",
    "end": "2442380"
  },
  {
    "text": "around debugging we did a lot of log base debugging really that he described",
    "start": "2442380",
    "end": "2447410"
  },
  {
    "text": "especially with micro services spread across multiple accounts even reaching back into our datacenter it was kind of",
    "start": "2447410",
    "end": "2453540"
  },
  {
    "text": "annoying kind of slow not very much fun on that part and so it really kind of",
    "start": "2453540",
    "end": "2458640"
  },
  {
    "text": "after we delivered this we really said we need we need this application level tracing we need this application",
    "start": "2458640",
    "end": "2463710"
  },
  {
    "text": "performance monitoring um and so we we kind of started digging in and looking at a lot of different options and we",
    "start": "2463710",
    "end": "2470369"
  },
  {
    "text": "were looking at different options right around when x-ray I came out at reinvent last year and said you know what they have the core feature set that we're",
    "start": "2470369",
    "end": "2476339"
  },
  {
    "text": "looking for we jumped on their beta and we've been using it for a year and and",
    "start": "2476339",
    "end": "2481380"
  },
  {
    "text": "so from one of the questions that kind of spawned for us was think about kind",
    "start": "2481380",
    "end": "2486480"
  },
  {
    "start": "2482000",
    "end": "2482000"
  },
  {
    "text": "of standards and even enterprise excellence in the organization of you would you couldn't imagine not",
    "start": "2486480",
    "end": "2493339"
  },
  {
    "text": "monitoring your CPU for ec2 instances or that sort of stuff but it's tracing your application should that we had is",
    "start": "2493339",
    "end": "2499710"
  },
  {
    "text": "something that you have as a standard within your organization and after that last year it's definitely obvious that",
    "start": "2499710",
    "end": "2507330"
  },
  {
    "text": "we want anything we build anything we deploy whether it be one little lambda",
    "start": "2507330",
    "end": "2512720"
  },
  {
    "text": "or an API there's no reason not to turn it on and so we're looking saying why",
    "start": "2512720",
    "end": "2519210"
  },
  {
    "text": "wouldn't we make this our standard what would we need to make it a standard it really comes to three things as you know one is pricing and it's kind of a big",
    "start": "2519210",
    "end": "2526859"
  },
  {
    "text": "deal because before x-ray when we were looking at a lot of different options it was costing more to monitor the app than",
    "start": "2526859",
    "end": "2534300"
  },
  {
    "text": "the underlying ec2 computer which just drives me nuts and so I want to be able",
    "start": "2534300",
    "end": "2540480"
  },
  {
    "text": "to I want cloud pricing I wanna be able to pay for what I use tracing as a service through these small DevOps teams",
    "start": "2540480",
    "end": "2546540"
  },
  {
    "text": "and we we don't want them to deal with infrastructure I want to service to provide this is a",
    "start": "2546540",
    "end": "2552420"
  },
  {
    "text": "big deal check check on both of those for for x-ray but also the other one is",
    "start": "2552420",
    "end": "2558960"
  },
  {
    "text": "ease of integration if I want something to be a standard a we have to be able to afford it has to preferably be a service",
    "start": "2558960",
    "end": "2565740"
  },
  {
    "text": "and it has to be able to be really easy and great and for especially spring it was really easy I mean you're and",
    "start": "2565740",
    "end": "2571109"
  },
  {
    "text": "Bienstock you're effectively checking a checkbox and adding a config to each palm and have some basic interceptors",
    "start": "2571109",
    "end": "2578550"
  },
  {
    "text": "for traffic coming in that you can set your annotations and decorate and then you have a pretty easy way of adding",
    "start": "2578550",
    "end": "2585000"
  },
  {
    "text": "your custom measurements and so for us it was it was really straightforward it",
    "start": "2585000",
    "end": "2590160"
  },
  {
    "text": "met our needs and and that's really why we're using x-ray there and but the",
    "start": "2590160",
    "end": "2595920"
  },
  {
    "start": "2595000",
    "end": "2595000"
  },
  {
    "text": "other one is just kind of some of the bigger impact so you know changes to our team there's a lot of times I don't know",
    "start": "2595920",
    "end": "2602550"
  },
  {
    "text": "if you guys ever do this where you know there's a little bit of ugly code back there and you have a little bit of",
    "start": "2602550",
    "end": "2607560"
  },
  {
    "text": "performance problem you know like I'm gonna go fix that I've been meaning to refactor that you might spend even an hour cleaning something up that's been",
    "start": "2607560",
    "end": "2613950"
  },
  {
    "text": "bothering you it turns out ugly code performs really well sometimes compilers do a great job of optimizing some ugly",
    "start": "2613950",
    "end": "2621869"
  },
  {
    "text": "code that you have and so sometimes you just really need to be able to get in there like you're always looking to take two minutes and see what's really my",
    "start": "2621869",
    "end": "2627900"
  },
  {
    "text": "source of the problem and for us where we have some api's that reach all the way back to a restaurant maybe over a",
    "start": "2627900",
    "end": "2633540"
  },
  {
    "text": "slower Network if you have an API performing slowly it's easy the",
    "start": "2633540",
    "end": "2638890"
  },
  {
    "text": "also to blame it on it must be the call back to the restaurant like that one doesn't even hit the restaurant you know",
    "start": "2638890",
    "end": "2644200"
  },
  {
    "text": "we can't we can't blame it on that one but a lot of times two minutes saves hours of debugging kind of boring time",
    "start": "2644200",
    "end": "2654550"
  },
  {
    "text": "there I'm the other one that's this is kind of weird but it encourages curiosity I like to be able to explore that data if it's",
    "start": "2654550",
    "end": "2662470"
  },
  {
    "text": "log based nobody's curious about log base data unless there's somebody",
    "start": "2662470",
    "end": "2667480"
  },
  {
    "text": "calling in a helpdesk ticket saying hey this is we're having performance problems um you're not gonna really",
    "start": "2667480",
    "end": "2673750"
  },
  {
    "text": "explore log base base data um and so the URI allows just to dig around and and",
    "start": "2673750",
    "end": "2679810"
  },
  {
    "text": "it's good enough that it's not just an architect or a developer a product owner can also get in there and look and see",
    "start": "2679810",
    "end": "2686500"
  },
  {
    "text": "hey what's going on and we'll dig in to have a little demo afterwards and I just got a little curious and want to see",
    "start": "2686500",
    "end": "2693130"
  },
  {
    "text": "what I can find and found some kind of interesting stuff I love my graphical peer review just to see what services",
    "start": "2693130",
    "end": "2698710"
  },
  {
    "text": "are using if that graph looks horribly messy you want to blame it on x-ray and",
    "start": "2698710",
    "end": "2705850"
  },
  {
    "text": "go x-ray you made a terrible graph but usually it's more of an architectural problem um and just more data-driven",
    "start": "2705850",
    "end": "2711460"
  },
  {
    "text": "decision-making which kind of jumps over to kind of the enables analytics if",
    "start": "2711460",
    "end": "2717250"
  },
  {
    "text": "we're running in two-week sprints from an agile perspective um the the push is always forgetting new features and new",
    "start": "2717250",
    "end": "2724270"
  },
  {
    "text": "functionality out and so there's always this a little bit of a battle when do you say and we need to go fix them some",
    "start": "2724270",
    "end": "2730480"
  },
  {
    "text": "cracks in the foundation and if I can have data to show hey we have this performance problem here it's affecting",
    "start": "2730480",
    "end": "2736530"
  },
  {
    "text": "5% of our users that's real data that you can use to drive changes and and that work getting",
    "start": "2736530",
    "end": "2744850"
  },
  {
    "text": "actually put into a sprint and don't want for us is we're kind of moving to a kind of an SRE kind of modeling and",
    "start": "2744850",
    "end": "2751330"
  },
  {
    "text": "looking and say how do I measure performance on our API and averages can",
    "start": "2751330",
    "end": "2758530"
  },
  {
    "text": "be really deceptive sometimes you look at averages and the averages might include your health check it's returning",
    "start": "2758530",
    "end": "2765070"
  },
  {
    "text": "in one millisecond every single time or you may have a ton of endpoint calls on this micro circle on this micro service",
    "start": "2765070",
    "end": "2771730"
  },
  {
    "text": "that are really fast and 5% of them are kind of slow and it just gets lost in the average and so we want to be able to say",
    "start": "2771730",
    "end": "2777460"
  },
  {
    "text": "on a per endpoint basis what's the performance we expect and be able to actually measure those track those over",
    "start": "2777460",
    "end": "2783790"
  },
  {
    "text": "time and be able to say hey I want to have this much of my traffic underneath this certain threshold not on just a",
    "start": "2783790",
    "end": "2790450"
  },
  {
    "text": "whole server level but on a specific endpoint level I think that's a pretty",
    "start": "2790450",
    "end": "2796090"
  },
  {
    "text": "important piece there and so aleena actually I wasn't as brave as him I'm",
    "start": "2796090",
    "end": "2802360"
  },
  {
    "text": "not going to do that the real the real one I'm going to do my slides I have a use case here so this is our kind of big",
    "start": "2802360",
    "end": "2811900"
  },
  {
    "text": "a big piece the squares are microservices the pink ovals are",
    "start": "2811900",
    "end": "2817440"
  },
  {
    "text": "external calls external some of them are hitting other abs accounts some of them",
    "start": "2817440",
    "end": "2824140"
  },
  {
    "text": "are hitting our manage data center and a lot of the other green circles are DynamoDB but i want to jump in we're",
    "start": "2824140",
    "end": "2829630"
  },
  {
    "text": "going to drill down on one of them here and it's our contacts API and so number one is the main API on the top right it",
    "start": "2829630",
    "end": "2836770"
  },
  {
    "text": "hits context is kind of interesting because a store will have about 120",
    "start": "2836770",
    "end": "2841890"
  },
  {
    "text": "contacts and they there's a certain amount of churn that's always happening",
    "start": "2841890",
    "end": "2847540"
  },
  {
    "text": "and so before this the operators would all and their management team they get a new team member they'd add them to their phone they want to call somebody or text",
    "start": "2847540",
    "end": "2854140"
  },
  {
    "text": "somebody had to keep it there and so by having contacts here we're reaching out to a legacy system to be able to pull",
    "start": "2854140",
    "end": "2859960"
  },
  {
    "text": "those contacts information we actually allow them in the app to take pictures of their their team member so it'll show",
    "start": "2859960",
    "end": "2865720"
  },
  {
    "text": "up in the contact we store those as an s3 which is the upper right-hand circle and we also allow like a little bit of",
    "start": "2865720",
    "end": "2872530"
  },
  {
    "text": "metadata related to those contacts like what's your preference you prefer to be texted or emailed or or called",
    "start": "2872530",
    "end": "2878260"
  },
  {
    "text": "and and so number two on this list is our that external call and that's going",
    "start": "2878260",
    "end": "2885280"
  },
  {
    "text": "back to a legacy system it's a lot slower so when we kind of moved fast initially with this what happened",
    "start": "2885280",
    "end": "2890530"
  },
  {
    "text": "sometimes is we'd be able to put an API in front of a legacy system knowing six",
    "start": "2890530",
    "end": "2896650"
  },
  {
    "text": "months from later six months from now we want to maybe have that data streaming",
    "start": "2896650",
    "end": "2902290"
  },
  {
    "text": "up to the cloud maybe the Dynamo and then it gets a whole lot faster so right now it might be a little bit",
    "start": "2902290",
    "end": "2909069"
  },
  {
    "text": "slower but I'm knowing it's gonna get faster it's better to provide the data a little bit slower now and make it faster",
    "start": "2909069",
    "end": "2914589"
  },
  {
    "text": "later but if you look at number three on that graph the vast majority of those are really fast but if I select the ones",
    "start": "2914589",
    "end": "2922240"
  },
  {
    "text": "that are slow and click the button on view traces with number four I drill down as some of them that are slow and",
    "start": "2922240",
    "end": "2928480"
  },
  {
    "text": "if you looked earlier all those circles were green everything is looking great and so there's a when you drill down to",
    "start": "2928480",
    "end": "2936069"
  },
  {
    "text": "the details you'll see sometimes even though it's green there's it's not really great so you look at the green",
    "start": "2936069",
    "end": "2941980"
  },
  {
    "text": "circle I have on here the average for these calls is about three or four seconds not great for most things but",
    "start": "2941980",
    "end": "2950170"
  },
  {
    "text": "for this specific call I'm knowing we're gonna optimize it later once we get the data streaming out of our data center",
    "start": "2950170",
    "end": "2955800"
  },
  {
    "text": "that's fine but in the red circle you see some of them are taking over ten seconds which is definitely not good and",
    "start": "2955800",
    "end": "2963369"
  },
  {
    "text": "so I drill down on that trace and it's really interesting to see the the green",
    "start": "2963369",
    "end": "2969040"
  },
  {
    "text": "rectangle here all millisecond calls a bunch of calls out to other api's and",
    "start": "2969040",
    "end": "2975700"
  },
  {
    "text": "other accounts some dynamo calls that are all milliseconds but then in the the red rectangle you can really quickly say",
    "start": "2975700",
    "end": "2981579"
  },
  {
    "text": "hey this is what's taking all our time and notice it all kind of looks the same all three of them there and so when I",
    "start": "2981579",
    "end": "2989049"
  },
  {
    "text": "actually drill down on those or hover over that mark I realize we're making the same call three times but each",
    "start": "2989049",
    "end": "2996579"
  },
  {
    "text": "restaurant has a different restaurant location number and by looking at the metadata there I can see there's a",
    "start": "2996579",
    "end": "3002760"
  },
  {
    "text": "different location number with each one of those calls the first I looked at this and I was just exploring around while making this presentation and I",
    "start": "3002760",
    "end": "3008880"
  },
  {
    "text": "found this and I thought now what in the world there what's going on here see the data and realize ah almost all of our",
    "start": "3008880",
    "end": "3016980"
  },
  {
    "text": "chick-fil-a operators have one restaurant but a very small percentage of them out of 2,000 probably less than",
    "start": "3016980",
    "end": "3022319"
  },
  {
    "text": "50 have three restaurants and I'm betting when they tested all of this",
    "start": "3022319",
    "end": "3027450"
  },
  {
    "text": "they tested with one restaurant and never tested the performance on all three and so I went and talked to the",
    "start": "3027450",
    "end": "3033960"
  },
  {
    "text": "developer afterwards he looked at and said ah we had this in a few of our api's we must have missed this one it's",
    "start": "3033960",
    "end": "3039089"
  },
  {
    "text": "a really easy fix either we're gonna look at the API and see if we can pass it three restaurants at once or we'll multi-thread this and",
    "start": "3039089",
    "end": "3045780"
  },
  {
    "text": "and hit all three at once and we're fine and but then I led the further discussion on well how do we miss this",
    "start": "3045780",
    "end": "3053340"
  },
  {
    "text": "in testing do we not have any integration tests or performance tests that use three restaurants and knowing",
    "start": "3053340",
    "end": "3060240"
  },
  {
    "text": "that but this is taking you know 10 or 12 seconds here for our operators that run three restaurants these guys are",
    "start": "3060240",
    "end": "3066060"
  },
  {
    "text": "like the busiest operators of anybody these are the guys I really don't want to slow down and so how did we miss that",
    "start": "3066060",
    "end": "3072270"
  },
  {
    "text": "did we not think about those those guys in our test data so not only is it going to get fixed but it's also going to",
    "start": "3072270",
    "end": "3078540"
  },
  {
    "text": "change how we test and the cool thing on this is that it's a no time to drill",
    "start": "3078540",
    "end": "3083640"
  },
  {
    "text": "down and find that these operators are really busy and they're most of the times I'm not going to call the helpdesk",
    "start": "3083640",
    "end": "3089700"
  },
  {
    "text": "and go hit this one page load slow they're just gonna like okay it loaded",
    "start": "3089700",
    "end": "3095910"
  },
  {
    "text": "and and move along so this kind of proactively being able to be curious and",
    "start": "3095910",
    "end": "3101280"
  },
  {
    "text": "dig into your data and find it is really valuable because a lot of times the fix this is really really simple and I threw",
    "start": "3101280",
    "end": "3109590"
  },
  {
    "text": "one here in the end that's what it looks like when there's only one an operator",
    "start": "3109590",
    "end": "3116010"
  },
  {
    "text": "that only has one restaurant um it's only making one call it's fine but but it also kind of one of the fun things I",
    "start": "3116010",
    "end": "3121800"
  },
  {
    "text": "like about x-ray here is being able to see the the speed of some of the the other services in AWS and so if you look",
    "start": "3121800",
    "end": "3127950"
  },
  {
    "text": "next to my little heart there DynamoDB took five milliseconds to return and so",
    "start": "3127950",
    "end": "3133170"
  },
  {
    "text": "it's kind of interesting when you start seeing how long things are really taking five milliseconds you might from a code",
    "start": "3133170",
    "end": "3139290"
  },
  {
    "text": "perspective might go you know what I can make a couple database calls enough and as part of my my transaction that's not",
    "start": "3139290",
    "end": "3145470"
  },
  {
    "text": "a big deal because they're taking five milliseconds and so I just thought it was kind of ridiculous that dinamo got",
    "start": "3145470",
    "end": "3151200"
  },
  {
    "text": "it down to five milliseconds it's a single record yet but did you say DynamoDB developer give them a hug today",
    "start": "3151200",
    "end": "3156980"
  },
  {
    "text": "so well that my last slide here I always",
    "start": "3156980",
    "end": "3162030"
  },
  {
    "text": "like to end with a short Kathy was originally founder or the founder of chick-fil-a and he has I don't miss the",
    "start": "3162030",
    "end": "3167730"
  },
  {
    "text": "importance of making fun a priority as a quote of his and we have we have a lot of fun at",
    "start": "3167730",
    "end": "3175130"
  },
  {
    "text": "chick-fil-a building creating infecting people impacting the business and",
    "start": "3175130",
    "end": "3180730"
  },
  {
    "text": "especially an IT we look and say we want to want to focus on that building and",
    "start": "3180730",
    "end": "3185779"
  },
  {
    "text": "creating not on a lot of the other boring things and so if I if I spend a lot of times debugging that's not it's",
    "start": "3185779",
    "end": "3192950"
  },
  {
    "text": "not gonna be as fun I'm from a DevOps perspective you're gonna have to do ops how small can I make it how efficient",
    "start": "3192950",
    "end": "3198440"
  },
  {
    "text": "can I make it I'm over this thing I always say how do you how do you feel at the end of the day when you're leaving",
    "start": "3198440",
    "end": "3203509"
  },
  {
    "text": "on a normal day a 5 o'clock how many times are you leaving going ah that that",
    "start": "3203509",
    "end": "3208910"
  },
  {
    "text": "was a good day that that was a lot of fun if you spend your day going through",
    "start": "3208910",
    "end": "3214309"
  },
  {
    "text": "logs and digging through a performance problem you're probably not going to say that if you had a performance problem",
    "start": "3214309",
    "end": "3221059"
  },
  {
    "text": "but in a half-hour identified it got to the source of it and fixed it and you",
    "start": "3221059",
    "end": "3226759"
  },
  {
    "text": "did that a couple times and got on to something else that was far more interesting or impactful you can easily",
    "start": "3226759",
    "end": "3231859"
  },
  {
    "text": "say out a good day that was a lot of fun um and so we're trying to have fun especially an IT DevOps was a cool part",
    "start": "3231859",
    "end": "3240680"
  },
  {
    "text": "of that well saw together and had a great time and created and developed and and the",
    "start": "3240680",
    "end": "3246230"
  },
  {
    "text": "higher level services in the cloud like Beanstalk and like dynamodb and like",
    "start": "3246230",
    "end": "3251630"
  },
  {
    "text": "x-ray lava hole a lot more fun and a bigger impact um so if you're ever passing through Atlanta or you live",
    "start": "3251630",
    "end": "3257569"
  },
  {
    "text": "there my LinkedIn is on here poke me I'm always up for a good conversation thank you",
    "start": "3257569",
    "end": "3263799"
  },
  {
    "text": "perfect so I'm going to cover a few piece of additional information for",
    "start": "3268610",
    "end": "3274110"
  },
  {
    "text": "those that have stayed till now we have some t-shirts up front at the end so if",
    "start": "3274110",
    "end": "3279570"
  },
  {
    "text": "you want some t-shirts you may want to hang around otherwise I know beer is more interesting of a choice than",
    "start": "3279570",
    "end": "3286860"
  },
  {
    "text": "t-shirts so let's quickly cover pricing I wanted to make sure we covered this so",
    "start": "3286860",
    "end": "3293630"
  },
  {
    "start": "3290000",
    "end": "3290000"
  },
  {
    "text": "xr8 does have a free tier the first hundred thousand traces that you record are free so that essentially allows you",
    "start": "3293630",
    "end": "3300480"
  },
  {
    "text": "to record about one request a little over one request a minute for free forever the first million transactions",
    "start": "3300480",
    "end": "3308250"
  },
  {
    "text": "or traces that you search or retrieve are free beyond that it's fairly nominal",
    "start": "3308250",
    "end": "3314160"
  },
  {
    "text": "so it's $5 for every million transactions that you record and fifty",
    "start": "3314160",
    "end": "3319890"
  },
  {
    "text": "cents for every million transactions that you retrieve or you search for in the system want to leave you guys with",
    "start": "3319890",
    "end": "3328290"
  },
  {
    "start": "3326000",
    "end": "3326000"
  },
  {
    "text": "this slide it's got a bunch of helpful links to our documentation to our samples so feel free to take any",
    "start": "3328290",
    "end": "3334500"
  },
  {
    "text": "pictures that you guys want after this I have the QA slide so I'm not going to go",
    "start": "3334500",
    "end": "3340620"
  },
  {
    "text": "to that I will just hop into Q&A we've got about five minutes here so if",
    "start": "3340620",
    "end": "3345690"
  },
  {
    "text": "anybody has any questions we've got a couple of microphones up here if you come and ask any questions you'll get",
    "start": "3345690",
    "end": "3352020"
  },
  {
    "text": "the t-shirts before everybody else does so we'll try and incentivize you to ask questions so happy to take any questions",
    "start": "3352020",
    "end": "3358230"
  },
  {
    "text": "you may have right now go ahead",
    "start": "3358230",
    "end": "3365000"
  },
  {
    "text": "so the question was is x-ray HIPAA eligible so today x-ray is not certified",
    "start": "3367370",
    "end": "3373380"
  },
  {
    "text": "for HIPPA we are working on that so if you follow our Jeff bars blog post you",
    "start": "3373380",
    "end": "3381540"
  },
  {
    "text": "should see that coming up in the next few months go ahead so the question was are you",
    "start": "3381540",
    "end": "3390840"
  },
  {
    "text": "considering PHP support the answer is absolutely yes that also should be",
    "start": "3390840",
    "end": "3395940"
  },
  {
    "text": "available in the next few months go ahead is this available in gov cloud",
    "start": "3395940",
    "end": "3402500"
  },
  {
    "text": "x-ray today is not available in cough cloud that is also on our roadmap so",
    "start": "3402500",
    "end": "3408210"
  },
  {
    "text": "again thank you for the question guys as you're asking questions feel free to",
    "start": "3408210",
    "end": "3414390"
  },
  {
    "text": "grab a t-shirt from up here but this is applicable to Allen as well so did you guys replace any of your logging or",
    "start": "3414390",
    "end": "3421350"
  },
  {
    "text": "reduce your logging after going to x-ray because maybe it was redundant so what",
    "start": "3421350",
    "end": "3427200"
  },
  {
    "text": "are some of the practices between the logging that you have to do application level as well as making use of x-ray we",
    "start": "3427200",
    "end": "3434490"
  },
  {
    "text": "did reduce logging sometimes when you're debugging a performance problem you end",
    "start": "3434490",
    "end": "3439770"
  },
  {
    "text": "up creating a lot of a lot of extra logging that's sometimes a little bit of noise and so we're kind of leery of",
    "start": "3439770",
    "end": "3445110"
  },
  {
    "text": "creating a lot of noise in our logs and so there's specific spots where we log",
    "start": "3445110",
    "end": "3450330"
  },
  {
    "text": "but weep if I'm if I'm not going to the logs right away and adding a bunch of",
    "start": "3450330",
    "end": "3456630"
  },
  {
    "text": "extra noise then it definitely reduces the logging I was gonna add one more",
    "start": "3456630",
    "end": "3461700"
  },
  {
    "text": "thing to it one thing you should keep in mind is since x-ray does sample you",
    "start": "3461700",
    "end": "3467220"
  },
  {
    "text": "should keep that in mind for things where you have logging that's necessary for compliance reasons or other things",
    "start": "3467220",
    "end": "3473160"
  },
  {
    "text": "so it's not necessarily a replacement there but as Alan mentioned if you've just got operational logging that you're",
    "start": "3473160",
    "end": "3479550"
  },
  {
    "text": "doing you can definitely see use cases or I can definitely see use cases where you could replace one for the other it",
    "start": "3479550",
    "end": "3486330"
  },
  {
    "text": "definitely doesn't totally replace logging we still yeah big thumbs up to you guys because it causes probably ten",
    "start": "3486330",
    "end": "3495180"
  },
  {
    "text": "times more to maintain our stack on AWS so this",
    "start": "3495180",
    "end": "3501480"
  },
  {
    "text": "will definitely help thank you very much all right I'll take our that you're just",
    "start": "3501480",
    "end": "3508080"
  },
  {
    "text": "going to say understood something can",
    "start": "3508080",
    "end": "3513330"
  },
  {
    "text": "you from PHP or one of these other kind of things like Ruby or whatever can you say hey X ray I'm doing this now yeah so",
    "start": "3513330",
    "end": "3520470"
  },
  {
    "text": "since we don't have PHP or Ruby SDK today you can actually directly send",
    "start": "3520470",
    "end": "3525870"
  },
  {
    "text": "data using our API so the AWS SDKs have language specific if you will api's so",
    "start": "3525870",
    "end": "3534270"
  },
  {
    "text": "you can use the PHP SDK for AWS and send data into X ray using the raw data format that we support the SDK is just",
    "start": "3534270",
    "end": "3541410"
  },
  {
    "text": "make it easier in SDK the ones they do UDP so the X ray SDK is do UDP the AWS",
    "start": "3541410",
    "end": "3550590"
  },
  {
    "text": "SDK is talk over HTTP directly to the backend so in that case you don't have to use the daemon okay perfect thank you",
    "start": "3550590",
    "end": "3557250"
  },
  {
    "text": "I'll go on that side so I think I saw a slide if I let me know if I did saying that you can get some utility from x-ray",
    "start": "3557250",
    "end": "3564060"
  },
  {
    "text": "without instrumenting any code and if so what what so that is holds true for lambda",
    "start": "3564060",
    "end": "3570990"
  },
  {
    "text": "specifically so in lambda without doing anything by simply checking a checkbox",
    "start": "3570990",
    "end": "3576060"
  },
  {
    "text": "in the console or setting the active tracing configuration you can get the",
    "start": "3576060",
    "end": "3581130"
  },
  {
    "text": "wrapper timing around your function what you have to do to get the outbound calls that your function makes is integrate",
    "start": "3581130",
    "end": "3587700"
  },
  {
    "text": "the SDK into your application so without any changes in lambda you get the lambda service portion as well as the wrapper",
    "start": "3587700",
    "end": "3594240"
  },
  {
    "text": "portion for the function all right I'll hop over here I have two questions are we getting built for traffic which",
    "start": "3594240",
    "end": "3603180"
  },
  {
    "text": "is going to which is sent to x-ray service so the same data transfer",
    "start": "3603180",
    "end": "3610170"
  },
  {
    "text": "charges apply so when you're within a region you're not so because it's going from ec2 but if you're doing cross region then it's everything is the same",
    "start": "3610170",
    "end": "3616650"
  },
  {
    "text": "and second question other any performance penalties if any from a performance perspective we've done our",
    "start": "3616650",
    "end": "3623970"
  },
  {
    "text": "best everything that actually does happens asynchronously so the logged structured logs that are collected",
    "start": "3623970",
    "end": "3630150"
  },
  {
    "text": "by the SDK happen on a separate thread the SDK talks to the daemon over UDP and",
    "start": "3630150",
    "end": "3636660"
  },
  {
    "text": "then the demon does the processing where you can control in essence the memory that you allocate in practice we've seen",
    "start": "3636660",
    "end": "3642960"
  },
  {
    "text": "a tape between three to five percent memory and CPU however if you wanted to",
    "start": "3642960",
    "end": "3648180"
  },
  {
    "text": "do you know if I wrote an app that just returned 200 okay you can see a 200 or 300 percent overhead but there really",
    "start": "3648180",
    "end": "3655470"
  },
  {
    "text": "I've had zero customers in the year that we've been out complain about performance so I'm fairly confident that",
    "start": "3655470",
    "end": "3661289"
  },
  {
    "text": "you're not going to run into it great thank you thank you alright welcome how hard is it to instrument like third",
    "start": "3661289",
    "end": "3668250"
  },
  {
    "text": "party like Model View controller stuff like the x-ray so I would say that if",
    "start": "3668250",
    "end": "3676980"
  },
  {
    "text": "you don't have the source code it's fairly difficult today because we don't do byte code rewriting or use the",
    "start": "3676980",
    "end": "3682710"
  },
  {
    "text": "profilers for the various languages or profiling api's but it is something that",
    "start": "3682710",
    "end": "3688799"
  },
  {
    "text": "we're looking into so we're hoping that you know in the next year year and a half we can make that easier all right",
    "start": "3688799",
    "end": "3695900"
  },
  {
    "text": "actually I have two question here so for the gentleman he just said that after",
    "start": "3695900",
    "end": "3701849"
  },
  {
    "text": "using the x-ray the the total cost get a degree lower right so the compare",
    "start": "3701849",
    "end": "3708270"
  },
  {
    "text": "comparing is remained between x-ring and what that's a first question the second",
    "start": "3708270",
    "end": "3714270"
  },
  {
    "text": "question is that this gentleman speaker speaker that I noticed that now for most",
    "start": "3714270",
    "end": "3721500"
  },
  {
    "text": "of the instrumentation measure that we just showed we have to do some code",
    "start": "3721500",
    "end": "3726990"
  },
  {
    "text": "modification and a compared to will some existing APM products like you know I'll",
    "start": "3726990",
    "end": "3732150"
  },
  {
    "text": "sort of party like a TB dynamic or Tanner trees basically they don't need to user to do any modification so we",
    "start": "3732150",
    "end": "3740910"
  },
  {
    "text": "have improvement the planet on them so Alan take the first question say the performance question again",
    "start": "3740910",
    "end": "3747280"
  },
  {
    "text": "you know usually that after implement implementing x-raying the cost gets get",
    "start": "3747280",
    "end": "3754510"
  },
  {
    "text": "a lower right the cost get a lower so the cost for us of comparing different",
    "start": "3754510",
    "end": "3760930"
  },
  {
    "text": "APM vendors to x-ray it was definitely a lot lower than the cost of compute versus three to ten times the cost of",
    "start": "3760930",
    "end": "3767860"
  },
  {
    "text": "compute and for us there's also a cost associated with how much time you spend debugging",
    "start": "3767860",
    "end": "3774100"
  },
  {
    "text": "an issue versus you know finding a lot quicker so those are the two costs that",
    "start": "3774100",
    "end": "3780520"
  },
  {
    "text": "I kind of talked about there does that make sense so that's a labor clause right there's a labor cost but there's also just we decided we wanted",
    "start": "3780520",
    "end": "3786760"
  },
  {
    "text": "application performance monitoring but with the cost thing a lot lower with car based pricing it allowed us to",
    "start": "3786760",
    "end": "3793060"
  },
  {
    "text": "effectively put it everywhere um so we we didn't have to think as much about cost at that point okay all right guys",
    "start": "3793060",
    "end": "3799690"
  },
  {
    "text": "on the second piece so today yes you have to make code changes part of the",
    "start": "3799690",
    "end": "3805000"
  },
  {
    "text": "reason we took that approach is we see x-ray as a developer tool we don't focus",
    "start": "3805000",
    "end": "3811150"
  },
  {
    "text": "as much and on the ops side of things we really think that the value of x-ray really shines when developers are",
    "start": "3811150",
    "end": "3818590"
  },
  {
    "text": "annotating data they're adding additional in essence business data into",
    "start": "3818590",
    "end": "3823720"
  },
  {
    "text": "the traces so that's part of the reason why we've taken that approach in the future you can definitely expect that we",
    "start": "3823720",
    "end": "3830290"
  },
  {
    "text": "will do agent based instrumentation which is the automated instrumentation that you're talking about but that's not",
    "start": "3830290",
    "end": "3835810"
  },
  {
    "text": "something that's been our focus so far so you know today you have to do the instrumentation manually I'm gonna take",
    "start": "3835810",
    "end": "3842320"
  },
  {
    "text": "one more question and then I'm just gonna walk out and hang out so anybody who has a question I promise I will stay",
    "start": "3842320",
    "end": "3849220"
  },
  {
    "text": "as long as I need to to answer those questions but because we have to turn the room for the next session I'm going",
    "start": "3849220",
    "end": "3856450"
  },
  {
    "text": "to take one more here and then hop outside",
    "start": "3856450",
    "end": "3860580"
  },
  {
    "text": "all right how do different services know that they're part of the same trace so",
    "start": "3863130",
    "end": "3871540"
  },
  {
    "text": "if you looked at the or on the presentation I talked about trace",
    "start": "3871540",
    "end": "3876820"
  },
  {
    "text": "context and propagation so what the SDK is essentially do is they generate a request ID and then they propagate that",
    "start": "3876820",
    "end": "3883810"
  },
  {
    "text": "over HTTP or if you're in a queue over the queue of message metadata if you will and that's how we connect the",
    "start": "3883810",
    "end": "3890950"
  },
  {
    "text": "traces so we're essentially propagating a specific ID as long as well as parent",
    "start": "3890950",
    "end": "3896230"
  },
  {
    "text": "information so that we can build the graph for you gotcha perfect all right so with that thank you",
    "start": "3896230",
    "end": "3903849"
  },
  {
    "text": "guys very much I greatly appreciate you guys hanging around and letting us win over beer so thank you guys and I want",
    "start": "3903849",
    "end": "3911020"
  },
  {
    "text": "to give a round of applause to you guys [Applause]",
    "start": "3911020",
    "end": "3917190"
  }
]