[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "okay so let's start welcome everybody my name is Jonathan I manage some of our a",
    "start": "30",
    "end": "6390"
  },
  {
    "text": "device management tools like eight ways off verbs and recess groups and I'm here to talk to you about how you can use our",
    "start": "6390",
    "end": "12990"
  },
  {
    "text": "management tool speed together to manage your applications and resources on a de base so today I want to give you a brief",
    "start": "12990",
    "end": "21539"
  },
  {
    "text": "introduction into what are these management tools what are their purposes what is maybe this the life cycle that",
    "start": "21539",
    "end": "26849"
  },
  {
    "text": "you have to go through when you manage an application resources and then I want to dive deep a little bit into some of",
    "start": "26849",
    "end": "32340"
  },
  {
    "text": "these and hopefully bring it back with a very practical example of how we can",
    "start": "32340",
    "end": "37739"
  },
  {
    "text": "take an example like java application and manage it completely through this life cycle and take it and build some",
    "start": "37739",
    "end": "43890"
  },
  {
    "text": "automated pipelines to completely automate and codify the application",
    "start": "43890",
    "end": "50160"
  },
  {
    "text": "through provisioning monitoring configuration and remediation so let's",
    "start": "50160",
    "end": "57180"
  },
  {
    "text": "start with with maybe a brief note if you're interested in these topics there",
    "start": "57180",
    "end": "62430"
  },
  {
    "text": "are two sessions on Thursday that you might want to have a look at so first",
    "start": "62430",
    "end": "67439"
  },
  {
    "text": "there is a session that goes into a little bit more in depth in terms of building this pipeline has a nice demo",
    "start": "67439",
    "end": "74250"
  },
  {
    "text": "of how you actually create these these pipelines and then we also have a workshop on Thursday afternoon where you",
    "start": "74250",
    "end": "81659"
  },
  {
    "text": "can leverage some of the tools that are present here together with the presenters and with some of our",
    "start": "81659",
    "end": "87180"
  },
  {
    "text": "engineers to actually get a hands-on example of this and build some of these example to yourself now if I say",
    "start": "87180",
    "end": "94680"
  },
  {
    "text": "management tools what do I mean by that so if you look at the different services",
    "start": "94680",
    "end": "103049"
  },
  {
    "text": "that we offer a database we think of them as different tools that help you to",
    "start": "103049",
    "end": "109549"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "handle the different stages of the the application lifecycle infrastructure",
    "start": "109549",
    "end": "114720"
  },
  {
    "text": "management lifecycle right so first you need to provision the resources that you need in order to run your application",
    "start": "114720",
    "end": "120229"
  },
  {
    "text": "there we have cloud formation and Service Catalog that help you with that then if we're talking at least instance",
    "start": "120229",
    "end": "126240"
  },
  {
    "text": "based workloads you need to somehow configure these machines so configuration management a nativist off",
    "start": "126240",
    "end": "132660"
  },
  {
    "text": "source is something that to here and then you want to monitor these resources and applications you",
    "start": "132660",
    "end": "138120"
  },
  {
    "text": "want to feet use that feedback loop to drive any necessary changes and then you",
    "start": "138120",
    "end": "143160"
  },
  {
    "text": "also want to be able to act on any and for any of these insights that you got from the monitoring you want to be able",
    "start": "143160",
    "end": "149700"
  },
  {
    "text": "to have audit information you want to check compliance of these resources and you want to remediate ultimately",
    "start": "149700",
    "end": "154800"
  },
  {
    "text": "potentially right now you can see the different tools and we will we will have",
    "start": "154800",
    "end": "160470"
  },
  {
    "text": "a look at each of them in a minute there dear here's and and that's a little bit the purpose of my talk is to show you how you can integrate them and how you",
    "start": "160470",
    "end": "166110"
  },
  {
    "text": "can make them interoperable so that when you actually manage your application your resources when you start with",
    "start": "166110",
    "end": "171150"
  },
  {
    "text": "provisioning you can kind of maintain the same contacts throughout this workflow and able to integrate all of",
    "start": "171150",
    "end": "178620"
  },
  {
    "text": "these together now so let's have a look at the first one cloud formation how",
    "start": "178620",
    "end": "184080"
  },
  {
    "text": "many people here are familiar with cloud formation I using cloud formation already today so maybe maybe half of the",
    "start": "184080",
    "end": "189480"
  },
  {
    "text": "room so cloud formation for those who are not familiar with it is our main service and all it's for you to",
    "start": "189480",
    "end": "195950"
  },
  {
    "text": "provision resources and what we mean with provision is to launch them a nativist as soon as you have kind of a",
    "start": "195950",
    "end": "201299"
  },
  {
    "text": "non-trivial use case right like you more than just like let me go to the console and and launch something to try it out I",
    "start": "201299",
    "end": "207900"
  },
  {
    "text": "recommend that you have a look at cloud formation because there you can codify you can define in a template right as",
    "start": "207900",
    "end": "213930"
  },
  {
    "text": "infrastructure and as infrastructure is code you can define here are the resource that I want to have right like",
    "start": "213930",
    "end": "220080"
  },
  {
    "text": "let's say a load balancer and auto scaling group with some instances in it and a database and cloud formation then",
    "start": "220080",
    "end": "227730"
  },
  {
    "text": "takes this template this configuration file if you like and handles all the provisioning and bootstrapping of these",
    "start": "227730",
    "end": "234630"
  },
  {
    "text": "resources for you and all the necessary dependencies most importantly it also handles all the the various error errors",
    "start": "234630",
    "end": "241350"
  },
  {
    "text": "that could occur and if if any of them do it handles the rollback for you so it's a very robust way of provisioning",
    "start": "241350",
    "end": "247110"
  },
  {
    "text": "resources so let's say you're requesting to run a thousand ec2 instances but your",
    "start": "247110",
    "end": "252750"
  },
  {
    "text": "account actually only has the limit of another 100 then this state transition",
    "start": "252750",
    "end": "258299"
  },
  {
    "text": "will fail and CloudFormation will do a rollback to revert any other changes that it made necessarily so cloud",
    "start": "258299",
    "end": "264330"
  },
  {
    "text": "formation is a very core piece of automating the info turn provisioning the necessary",
    "start": "264330",
    "end": "269630"
  },
  {
    "text": "resources to run your application on it supports like a very large number of resource over 250 the goal is to",
    "start": "269630",
    "end": "277550"
  },
  {
    "text": "ultimately support all of them right so that's kind of our core service to provision the resources and allows you",
    "start": "277550",
    "end": "283310"
  },
  {
    "text": "to most importantly store all of this in encode in source control and we'll have a later look at how we can leverage that",
    "start": "283310",
    "end": "289340"
  },
  {
    "text": "to deploy our example application now next is service catalog Service Catalog",
    "start": "289340",
    "end": "295640"
  },
  {
    "start": "293000",
    "end": "293000"
  },
  {
    "text": "is probably a little bit less known it is if you try to simplify it a bit an abstraction layer on top of cloud",
    "start": "295640",
    "end": "302270"
  },
  {
    "text": "formation right it's the idea that if I take these cloud formation templates and I build predefined sets of products that",
    "start": "302270",
    "end": "309170"
  },
  {
    "text": "we call them in Service Catalog where I define already like a standard use case for me let's say you're a",
    "start": "309170",
    "end": "315710"
  },
  {
    "text": "larger enterprise company and you have like a standard installation how of how you like like your standard web servers",
    "start": "315710",
    "end": "323210"
  },
  {
    "text": "and database servers to look like and let's say Apache my sequel you can define a CloudFormation template that",
    "start": "323210",
    "end": "328280"
  },
  {
    "text": "provisions that these resources and then you can make this available in the catalog to your teams so that they can",
    "start": "328280",
    "end": "334880"
  },
  {
    "text": "launch this and already use the standard configuration and then you can centrally update this and your teams will see that",
    "start": "334880",
    "end": "339950"
  },
  {
    "text": "there is a new version of that it also allows it to restrict access to individual services so that certain",
    "start": "339950",
    "end": "346640"
  },
  {
    "text": "organizations have only access to the products and service catalog so it is it is a way to define predefined starter",
    "start": "346640",
    "end": "354620"
  },
  {
    "text": "kits or applications or products if you like that then your teams can leverage we will use cloud formation for example",
    "start": "354620",
    "end": "362120"
  },
  {
    "text": "going forward but this is another way especially if you're if you have like a large organization where you want to maintain like standard installations",
    "start": "362120",
    "end": "368210"
  },
  {
    "text": "Service Catalog is something worth having a look at now once we launch our instances or our resources we now need",
    "start": "368210",
    "end": "377810"
  },
  {
    "text": "to ensure that the right software is running on them right so I need to ensure it's using the right version of",
    "start": "377810",
    "end": "382850"
  },
  {
    "text": "let's say Apache or Tomcat or Ruby your job of whatever you want to use there in general two ways to achieve this if your",
    "start": "382850",
    "end": "389540"
  },
  {
    "text": "if you simplify right like one way is to have golden a.m. eyes or immutable",
    "start": "389540",
    "end": "394550"
  },
  {
    "text": "service where you you prepackaged everything that you need on an on an ami and then you launch that through cloud formation or the the",
    "start": "394550",
    "end": "400670"
  },
  {
    "text": "gee the other way if especially if you need more dynamic random changes to to",
    "start": "400670",
    "end": "406550"
  },
  {
    "text": "the configuration is to use configuration management in the",
    "start": "406550",
    "end": "411620"
  },
  {
    "text": "configuration management space we have a device ops works that vents you managed versions of chef automate and puppet",
    "start": "411620",
    "end": "417890"
  },
  {
    "text": "enterprise the two of the most popular configuration management solutions were you can get your own puppet or chef",
    "start": "417890",
    "end": "425330"
  },
  {
    "text": "server that allows you to then define the on instance configuration right you can use the domain-specific language",
    "start": "425330",
    "end": "432080"
  },
  {
    "text": "that these tools offer to exactly define basically every bit on the machine right like you can say I need this particular",
    "start": "432080",
    "end": "438530"
  },
  {
    "text": "version of Apache this particular version of a certain package this is how exactly I want it to be configured let's",
    "start": "438530",
    "end": "443900"
  },
  {
    "text": "say you want to always send a certain header with Apache like you can define this using a DSL that is much more",
    "start": "443900",
    "end": "451070"
  },
  {
    "text": "powerful than if you would write all very long shell script and it's compatible across operating systems and and so forth objects in this case is",
    "start": "451070",
    "end": "459080"
  },
  {
    "text": "handling all the provisioning and management and operations of the actual chef or puppet server so that means",
    "start": "459080",
    "end": "464840"
  },
  {
    "text": "installation version management upgrades backup restores and integration into the rest of the ecosystem of a diverse in",
    "start": "464840",
    "end": "470150"
  },
  {
    "text": "terms of cloud fair and configure integration that we will talk about in a second so off switch is a great solution if you",
    "start": "470150",
    "end": "475400"
  },
  {
    "text": "want to be able to control the the definition of what is actually running",
    "start": "475400",
    "end": "480590"
  },
  {
    "text": "inside a machine and will leverage that in our example to exactly control like",
    "start": "480590",
    "end": "486410"
  },
  {
    "text": "the installation of Apache for example now once I have so my infrastructure provisioned I have the software that I",
    "start": "486410",
    "end": "492470"
  },
  {
    "text": "need running on it I need to monitor it so cloud watch is our tool of choice in",
    "start": "492470",
    "end": "499190"
  },
  {
    "text": "order to do monitoring in terms of defining metrics looking at standard",
    "start": "499190",
    "end": "504800"
  },
  {
    "text": "metrics that come with a lot of the Airways services in terms of defining my own custom metrics defining alarms",
    "start": "504800",
    "end": "509960"
  },
  {
    "text": "defining logs the clock watch logs provides with the ability to stream logs",
    "start": "509960",
    "end": "515150"
  },
  {
    "text": "and define law groups or you can use the clock which agent on ec2 instances to upload let's say the Apache log or",
    "start": "515150",
    "end": "521150"
  },
  {
    "text": "Tomcat log or any log file that you care about and then define searches and",
    "start": "521150",
    "end": "527270"
  },
  {
    "text": "alerts on these so that when and define additional metrics you can also use clock which events to fire off",
    "start": "527270",
    "end": "534440"
  },
  {
    "text": "like let's say lambda functions or other services whenever a certain event is fired we will talk about this in the in",
    "start": "534440",
    "end": "541130"
  },
  {
    "text": "a second when we look at config and config rules and it also allows it to create standard dashboards and and",
    "start": "541130",
    "end": "548180"
  },
  {
    "text": "graphs for all of these metrics so that's kind of our standard tool to do resource level monitoring in particular",
    "start": "548180",
    "end": "553459"
  },
  {
    "text": "but also in general to build your operational dashboard operational console if you like if you actually then",
    "start": "553459",
    "end": "558800"
  },
  {
    "text": "you need to monitor your resources another product that we have in the monitoring space is x-ray so x-ray is",
    "start": "558800",
    "end": "568269"
  },
  {
    "start": "566000",
    "end": "566000"
  },
  {
    "text": "tailored a lot more towards the the application that you're running on eight of this right so imagine you have a",
    "start": "568269",
    "end": "574910"
  },
  {
    "text": "lambda function well you have your your custom web application that user uses DynamoDB or it uses s3 ores and so forth",
    "start": "574910",
    "end": "582800"
  },
  {
    "text": "and you now want to understand okay which calls am i actually doing how long do they take and if there are any error",
    "start": "582800",
    "end": "589519"
  },
  {
    "text": "sense of what so what x-ray is doing it will take a sample of the requests that are hitting your application and will",
    "start": "589519",
    "end": "595579"
  },
  {
    "text": "then trace all of the dependencies all the calls the various dependent database services they're using and will will provide it with a service map where you",
    "start": "595579",
    "end": "601850"
  },
  {
    "text": "can see oh this API call of mine is actually talking to dynamo to these",
    "start": "601850",
    "end": "607670"
  },
  {
    "text": "three Dynamo tables the calls are taking so long this call actually failed 10",
    "start": "607670",
    "end": "612680"
  },
  {
    "text": "percent of the time for certain reasons and so forth so it's a great tool for you to debug your application to figure",
    "start": "612680",
    "end": "618470"
  },
  {
    "text": "out what's going on what is the performance characteristics of my application and so that's a very",
    "start": "618470",
    "end": "624829"
  },
  {
    "text": "important tool in your in your application level monitoring if you like it kind of comes pre-installed if you",
    "start": "624829",
    "end": "632269"
  },
  {
    "text": "use lambda and if you use any other application framework if you like you",
    "start": "632269",
    "end": "638420"
  },
  {
    "text": "and then you then you can integrate it via the SDK or you can install the the H and the extra agent on your box to push",
    "start": "638420",
    "end": "644180"
  },
  {
    "text": "these metrics to the x-ray service so with these tools we now have also an idea how our application is doing in",
    "start": "644180",
    "end": "650300"
  },
  {
    "text": "terms of the the performance metrics in terms of the availability metrics the latency metrics and so forth what we",
    "start": "650300",
    "end": "656600"
  },
  {
    "text": "don't know yet is if it's compliant with our particular rules and policies that",
    "start": "656600",
    "end": "661790"
  },
  {
    "text": "we in our company right so what you can use for that is a device config and config",
    "start": "661790",
    "end": "666850"
  },
  {
    "text": "rules so config is a service that tracks basically every single change to the",
    "start": "666850",
    "end": "672699"
  },
  {
    "text": "resources that config supports in terms of what are the state changes or",
    "start": "672699",
    "end": "678550"
  },
  {
    "text": "attribute changes that they that happen to them and what are the values if you like so a good example is let's say you",
    "start": "678550",
    "end": "684490"
  },
  {
    "text": "have an ec2 instance with configure able to tell when did the IP address of that instance change what was the develop",
    "start": "684490",
    "end": "690970"
  },
  {
    "text": "before the change and after or maybe you you're changing the provision die offs of an EBS volume those are things that",
    "start": "690970",
    "end": "697899"
  },
  {
    "text": "you would be able to trace in in config and config rules and then config will record all of these changes we'll",
    "start": "697899",
    "end": "703149"
  },
  {
    "text": "provide you with an history of these changes for every resource and will also allow you to define rules on these and",
    "start": "703149",
    "end": "710879"
  },
  {
    "text": "most importantly it will allow you to dynamically fire events whenever these rules change in that sense that they're",
    "start": "710879",
    "end": "717639"
  },
  {
    "text": "no longer compliant so to give you a very practical example let's say you wanna you want to ensure that there is",
    "start": "717639",
    "end": "723430"
  },
  {
    "text": "no single security group in your account that opens port 80 to the world so you",
    "start": "723430",
    "end": "730600"
  },
  {
    "text": "would be able to define a config rule that says exactly that and whenever somebody changes a security group right",
    "start": "730600",
    "end": "739180"
  },
  {
    "text": "like whenever there is an API call that changes the state of the attributes of the security group this will be recorded",
    "start": "739180",
    "end": "744309"
  },
  {
    "text": "by config config will reevaluate the security route sorry the config rules and then when now a certain security",
    "start": "744309",
    "end": "751990"
  },
  {
    "text": "group is no longer compliant it will fire notification that you can then receive with clubs events and then act",
    "start": "751990",
    "end": "757360"
  },
  {
    "text": "on it what it means may be alarm that means maybe just graph it or like as we",
    "start": "757360",
    "end": "763480"
  },
  {
    "text": "will see now examples later on you can also automatically remediate it right you might then trigger an automation",
    "start": "763480",
    "end": "769360"
  },
  {
    "text": "document that then terminates that instance or maybe that that remove this",
    "start": "769360",
    "end": "774490"
  },
  {
    "text": "security group from all the running instances for example so you're also able to automatically respond to it and remediate the other service that we have",
    "start": "774490",
    "end": "783009"
  },
  {
    "text": "in that space is called claw trail claw trail is simply set a record of all API",
    "start": "783009",
    "end": "789309"
  },
  {
    "text": "activity in your account and it actually also allows you to aggregate this across accounts so the idea is every time",
    "start": "789309",
    "end": "795820"
  },
  {
    "text": "anything that means somebody in your account like somebody that is using a",
    "start": "795820",
    "end": "800860"
  },
  {
    "text": "roll or the also other ADA based services that are that are doing things on your behalf in your account anytime an API call is made in a diverse and in",
    "start": "800860",
    "end": "807910"
  },
  {
    "text": "a certain account this is recorded and that information includes the caller information the API call information the",
    "start": "807910",
    "end": "814360"
  },
  {
    "text": "response information and so forth and then you can inspect this at any point in time in order to debug or audit or",
    "start": "814360",
    "end": "821710"
  },
  {
    "text": "like have some security investigation right so you're able to say who called who terminated that instance last week",
    "start": "821710",
    "end": "828400"
  },
  {
    "text": "that's an information that you would be able to get out of claw trail clutch will also fire Club which events notifications for these things so that",
    "start": "828400",
    "end": "835660"
  },
  {
    "text": "you're also able to define to a sense similar policies like within config",
    "start": "835660",
    "end": "841480"
  },
  {
    "text": "rules so you could for example get a notification every time somebody tries to terminate an instance because that",
    "start": "841480",
    "end": "847420"
  },
  {
    "text": "might be something that you don't want to do that you don't want to allow manually in your in your and your team",
    "start": "847420",
    "end": "854080"
  },
  {
    "text": "we say only CloudFormation should be able to terminate instances so you can get a notification every time an on",
    "start": "854080",
    "end": "860320"
  },
  {
    "text": "cloud formation actor is is trying to do that and then again alert on it just log",
    "start": "860320",
    "end": "866020"
  },
  {
    "text": "it or graph it or maybe even automatically if we mediate and run run",
    "start": "866020",
    "end": "871180"
  },
  {
    "text": "a lambda function or automation document as a response now the last service that I want to give you a high-level overview",
    "start": "871180",
    "end": "877890"
  },
  {
    "text": "of is a Systems Manager so Systems Manager has a broad set of capabilities",
    "start": "877890",
    "end": "883540"
  },
  {
    "start": "881000",
    "end": "881000"
  },
  {
    "text": "that we will leverage for our example let's start with resource groups so",
    "start": "883540",
    "end": "888940"
  },
  {
    "text": "resource groups technically speaking it's actually its own service so resource groups is the glue code that we",
    "start": "888940",
    "end": "894880"
  },
  {
    "text": "will use in our example to actually maintain this context as we go from service to service because it allows it",
    "start": "894880",
    "end": "901210"
  },
  {
    "text": "to define as a name suggest groups of resources you can define hierarchy you can you can define tech rates that allow",
    "start": "901210",
    "end": "907300"
  },
  {
    "text": "you to define what what research should be in this group and so you can use that to define here's my production",
    "start": "907300",
    "end": "912760"
  },
  {
    "text": "application here's my staging application here the web servers within the production application and then you",
    "start": "912760",
    "end": "918070"
  },
  {
    "text": "will be able to address these groups of resources and other services so we will use that too as a target and as a filter",
    "start": "918070",
    "end": "924400"
  },
  {
    "text": "in some of our examples later on patch manager allows you to to find patch baselines and patch",
    "start": "924400",
    "end": "930760"
  },
  {
    "text": "automatically windows and linux instances allows you to see what a what our outstanding patch is what a critical",
    "start": "930760",
    "end": "936100"
  },
  {
    "text": "patches and so forth run committed automation are the the probably the two critical capabilities",
    "start": "936100",
    "end": "942340"
  },
  {
    "text": "here that allow you to execute scripts PowerShell scripts shell scripts inside",
    "start": "942340",
    "end": "948070"
  },
  {
    "text": "your your ec2 instance or on a non print instance and so this is what run command",
    "start": "948070",
    "end": "953890"
  },
  {
    "text": "provides you you can you can trigger these based on your schedule this is essentially what state manager allows you to do it you can execute them ad hoc",
    "start": "953890",
    "end": "960580"
  },
  {
    "text": "or you can also execute them based on an event with session manager you can now also get a critic kind of a live shell",
    "start": "960580",
    "end": "967600"
  },
  {
    "text": "into your instance without the need to to open any ports or have SSH and solve anything like that and then automation",
    "start": "967600",
    "end": "973480"
  },
  {
    "text": "this is what we will use for example either on automation is allows you to chain executions of run commands scripts",
    "start": "973480",
    "end": "980740"
  },
  {
    "text": "and interactions with with other services to define essentially run books",
    "start": "980740",
    "end": "985810"
  },
  {
    "text": "or standard operating procedures right a good example is here maybe let's say you have some form of a legacy application",
    "start": "985810",
    "end": "992740"
  },
  {
    "text": "that you inherited from another team that is using Tomcat and for whatever reason every now and then Tomcat hogs up",
    "start": "992740",
    "end": "1000300"
  },
  {
    "text": "too much memory and it needs to be restarted so that will be like something that maybe today you define in a wiki",
    "start": "1000300",
    "end": "1006270"
  },
  {
    "text": "for your own call engineer to say oh if this happens is what you need to do with something like automation you can actually fully automate that you could",
    "start": "1006270",
    "end": "1012750"
  },
  {
    "text": "have let's say you use the clot which agent to monitor the the memory consumption of the machine that creates",
    "start": "1012750",
    "end": "1018690"
  },
  {
    "text": "a cloud alarm whenever the available memory is too low which fires off a cloud which event notification that you",
    "start": "1018690",
    "end": "1023970"
  },
  {
    "text": "can tie on to automation and then executed an automation document that first takes on takes this machine out of",
    "start": "1023970",
    "end": "1030810"
  },
  {
    "text": "the load balancer using using run command actually on the instance itself restarts Tomcat and once that is up and",
    "start": "1030810",
    "end": "1037560"
  },
  {
    "text": "running breaks the machine back into the load balancer so this automation is something you could execute manually or it also",
    "start": "1037560",
    "end": "1043439"
  },
  {
    "text": "something that you could fully automate with clutch events to run automatically every time the memory consumption is is",
    "start": "1043440",
    "end": "1048870"
  },
  {
    "text": "too high for example a maintenance window is the capability that allows you",
    "start": "1048870",
    "end": "1053940"
  },
  {
    "text": "to also execute some of these things like patch manager or uncommitted automation as the name suggests in a",
    "start": "1053940",
    "end": "1059490"
  },
  {
    "text": "certain defined maintenance window we're and contrast the state manager it will abort the execution if it takes longer",
    "start": "1059490",
    "end": "1064540"
  },
  {
    "text": "than the defined window and then inventory is a capability where you can",
    "start": "1064540",
    "end": "1070660"
  },
  {
    "text": "store information collected by the systems manager agent from the from the instance like let's say the installed packages the network configuration the",
    "start": "1070660",
    "end": "1076930"
  },
  {
    "text": "drivers and so forth and carry them to and and push them also into config to then to then execute configure rules",
    "start": "1076930",
    "end": "1083770"
  },
  {
    "text": "against parameter store allows you to store certain values key key yeah key",
    "start": "1083770",
    "end": "1091120"
  },
  {
    "text": "value pairs that the key then reference in the execution of documents but also uses configuration for your applications",
    "start": "1091120",
    "end": "1098170"
  },
  {
    "text": "and in last but not least distribute as a capability we just recently launched that allows you to roll out agents or",
    "start": "1098170",
    "end": "1104890"
  },
  {
    "text": "consume ADA best managed agents on your own agents on ec2 instances or an on-prem machines for from from these we",
    "start": "1104890",
    "end": "1112120"
  },
  {
    "text": "will use automation as our example to how you can create this complete remediation automate that and also have",
    "start": "1112120",
    "end": "1117730"
  },
  {
    "text": "this automated pipeline so with this very high-level overview let's try to",
    "start": "1117730",
    "end": "1122800"
  },
  {
    "text": "make this a little more concrete and create what I would call kind of enterprises code this is I think",
    "start": "1122800",
    "end": "1130090"
  },
  {
    "text": "ultimately what a lot of people want to achieve is how can I fully automate and",
    "start": "1130090",
    "end": "1137070"
  },
  {
    "text": "fully codify my infrastructure my configuration my operations my compliance and my application delivery",
    "start": "1137070",
    "end": "1143620"
  },
  {
    "text": "right that's ultimately the goal that you won't want to get to how can I fully create automation for these things so",
    "start": "1143620",
    "end": "1151330"
  },
  {
    "text": "that there is no manual interaction necessary as long as least we're speaking about the good path obviously and a human can can intervene at any",
    "start": "1151330",
    "end": "1158140"
  },
  {
    "text": "time but at least for making changes and for for storing this everything is in",
    "start": "1158140",
    "end": "1163929"
  },
  {
    "text": "code and all of these changes are rolling out completely that's basically what I want to arrive at at the end of this presentation so that you have an",
    "start": "1163929",
    "end": "1169990"
  },
  {
    "text": "idea of how do I achieve this with the management tools now in order to do this",
    "start": "1169990",
    "end": "1175570"
  },
  {
    "text": "let me first define what I mean if I talk about application infrastructure and automation and pipelines for these so when we talk about applications what",
    "start": "1175570",
    "end": "1183429"
  },
  {
    "start": "1177000",
    "end": "1177000"
  },
  {
    "text": "I mean here is ultimately the business application you care about this might be an application you've wrote this is an",
    "start": "1183429",
    "end": "1188679"
  },
  {
    "text": "application maybe you consume from a third party or a vendor but that's basically the the business value of the",
    "start": "1188679",
    "end": "1194800"
  },
  {
    "text": "business reason why what you want to run on a to this and then the underlying infrastructure is what you need in order",
    "start": "1194800",
    "end": "1200330"
  },
  {
    "text": "to actually and run it right so this is the those are the services that you consume from a vendor like like Amazon",
    "start": "1200330",
    "end": "1205880"
  },
  {
    "text": "or from others the ec2 instances the lambda functions there are yes instances dynamodb all of these services that you",
    "start": "1205880",
    "end": "1213740"
  },
  {
    "text": "actually then need in order to run your business application now most of the",
    "start": "1213740",
    "end": "1219049"
  },
  {
    "text": "time if you want to fully automate this what you need are two pipelines in order to control this right you need you need",
    "start": "1219049",
    "end": "1225620"
  },
  {
    "start": "1225000",
    "end": "1225000"
  },
  {
    "text": "kind of one application pipeline that automatically releases and pushes out the changes to your application and then",
    "start": "1225620",
    "end": "1233000"
  },
  {
    "text": "you need something similar for your infrastructure and and you might argue them you might want to also need like a like a third one for your tools and the",
    "start": "1233000",
    "end": "1239419"
  },
  {
    "text": "operational tools right I will focus today mostly on the infrastructure pipeline but everything applies the same",
    "start": "1239419",
    "end": "1245330"
  },
  {
    "text": "way for the for the application pipeline if you look at what is it actually that you need to do there if you look first",
    "start": "1245330",
    "end": "1251600"
  },
  {
    "text": "at the application pipeline right I first need to develop my code right then",
    "start": "1251600",
    "end": "1257029"
  },
  {
    "text": "I wanted to build it and run tests like integration test unit tests and so forth then I deploy it to my infrastructure",
    "start": "1257029",
    "end": "1264710"
  },
  {
    "text": "and then I monitor it and see if there are any issues right on of the application of the monitoring infrastructure level monitoring and so",
    "start": "1264710",
    "end": "1270590"
  },
  {
    "text": "forth and ultimately right I have my running application and kind of then the circle can starts again any time I make",
    "start": "1270590",
    "end": "1277159"
  },
  {
    "text": "changes pretty much similarly right and you will recognize kind of the the",
    "start": "1277159",
    "end": "1282559"
  },
  {
    "text": "topics here is what you need to do an infrastructure level you need to provision the necessary resources you need to configure them then your monitor",
    "start": "1282559",
    "end": "1289279"
  },
  {
    "text": "if everything works accordingly and you also audit and remediate if necessary and you do this kind of an incircle if",
    "start": "1289279",
    "end": "1296419"
  },
  {
    "text": "you want to make this happen today in a database you can use a variety of services together and and like I said",
    "start": "1296419",
    "end": "1302960"
  },
  {
    "text": "mostly I want to focus on how you actually achieve this with the underlying layer for the infrastructure",
    "start": "1302960",
    "end": "1308350"
  },
  {
    "text": "so the examples I use are eight ways services but you can also imagine using",
    "start": "1308350",
    "end": "1314090"
  },
  {
    "text": "open source of third-party tools here you can for most of these examples you can plug something in that that is a",
    "start": "1314090",
    "end": "1320389"
  },
  {
    "text": "third party obviously we want to give you like something that works out of the box but you can imagine I don't know",
    "start": "1320389",
    "end": "1326809"
  },
  {
    "text": "using Jenkins for the build and test part using obviously different editor or different source control repository and",
    "start": "1326809",
    "end": "1332720"
  },
  {
    "text": "so forth so the the standard tools that you could use here for developing",
    "start": "1332720",
    "end": "1337790"
  },
  {
    "text": "application let's say use clot 9 for editing and testing it you use code commit to actually store your your",
    "start": "1337790",
    "end": "1343760"
  },
  {
    "text": "changes and your your code repository and then use code build to build and test the application and deploy it",
    "start": "1343760",
    "end": "1350930"
  },
  {
    "text": "through code apply to your to your infrastructure and then you use Amazon Cloud watch an x-ray to monitor any",
    "start": "1350930",
    "end": "1357410"
  },
  {
    "text": "changes and respond to them for the infrastructure we will use cloud formation to provision ops works that",
    "start": "1357410",
    "end": "1363950"
  },
  {
    "text": "are the configuration changes then we will use clot watch to build dashboards that are tailored to this resources that",
    "start": "1363950",
    "end": "1369890"
  },
  {
    "text": "we just deployed and and then config clot rail systems manager for the",
    "start": "1369890",
    "end": "1374960"
  },
  {
    "text": "remediation you notice that that I also brought here resource groups because that's kind of the glue code that as I",
    "start": "1374960",
    "end": "1381230"
  },
  {
    "text": "said earlier that connects all of these pieces so at the end of the day you can represent the application it can present the infrastructure as resource groups",
    "start": "1381230",
    "end": "1387740"
  },
  {
    "text": "and that's what allows you to maintain that context throughout this this journey because you will be able to",
    "start": "1387740",
    "end": "1393020"
  },
  {
    "text": "address the the resources and and the the that your provision with cloud formation later on with through research",
    "start": "1393020",
    "end": "1400760"
  },
  {
    "text": "groups and the other services now to make this very concrete because up until this point this is very very theoretical",
    "start": "1400760",
    "end": "1407240"
  },
  {
    "text": "right like let's let's pick a simple example of an application that we want to run here so let's say we have we have",
    "start": "1407240",
    "end": "1414200"
  },
  {
    "start": "1412000",
    "end": "1412000"
  },
  {
    "text": "a very traditional kind of instance based java application right i think this is a very common stack that you",
    "start": "1414200",
    "end": "1419810"
  },
  {
    "text": "will find it uses maybe ec2 and a load balancer and an RDS instance to run you",
    "start": "1419810",
    "end": "1426050"
  },
  {
    "text": "have the code somewhere and get and then you want to run like a certain version of apache tomcat open JDK and so forth how would you",
    "start": "1426050",
    "end": "1432500"
  },
  {
    "text": "actually make this work in with the management tools for the for the whole",
    "start": "1432500",
    "end": "1437660"
  },
  {
    "text": "deployment story so the first thing that we need is we need to provision the",
    "start": "1437660",
    "end": "1444140"
  },
  {
    "text": "necessary infrastructure right so that's what I want to use CloudFormation for right so obviously in confirmation then",
    "start": "1444140",
    "end": "1450920"
  },
  {
    "start": "1448000",
    "end": "1448000"
  },
  {
    "text": "I would define these pieces of the infrastructure that I need the application load balancer the auto",
    "start": "1450920",
    "end": "1456590"
  },
  {
    "text": "scaling group that holds up my instances the RDS database I",
    "start": "1456590",
    "end": "1462790"
  },
  {
    "text": "kind of the obvious ones but you can actually also package in there the other pieces that you need like the the clot which dashboards and alarms the",
    "start": "1462790",
    "end": "1469750"
  },
  {
    "text": "config rules the documents that you need you can actually define the pipelines themselves that we will use later on in",
    "start": "1469750",
    "end": "1475030"
  },
  {
    "text": "the clock which template yes or in the cloud formation template so at the end of the day you will you will have a very long template that looks like this",
    "start": "1475030",
    "end": "1482410"
  },
  {
    "start": "1480000",
    "end": "1480000"
  },
  {
    "text": "this one here has just a short snippet that defines the outer scaling group with your load balancer and and the",
    "start": "1482410",
    "end": "1488680"
  },
  {
    "text": "instances but you can find a lot of examples online of how those cloud",
    "start": "1488680",
    "end": "1494200"
  },
  {
    "text": "formation templates should look like we also have a well architected framework a lot of examples that we've bent for four",
    "start": "1494200",
    "end": "1500560"
  },
  {
    "text": "standard examples the important thing here is that all of this is in source control right the definition of the",
    "start": "1500560",
    "end": "1506680"
  },
  {
    "text": "infrastructure and the resources I need is in source control I have it in my git repository code commit github whatever",
    "start": "1506680",
    "end": "1512350"
  },
  {
    "text": "you want to use and I can now every time I want to make a change to it I can make a like a code review request to my to my",
    "start": "1512350",
    "end": "1520570"
  },
  {
    "text": "colleague ease colleagues they approve it and then I push it and promote it and and we will see in a second how this",
    "start": "1520570",
    "end": "1525670"
  },
  {
    "text": "then gets pushed up to the production infrastructure now with this I actually now have my web",
    "start": "1525670",
    "end": "1531910"
  },
  {
    "text": "servers my load balance from a database server running and so forth but how do I actually define later on which version",
    "start": "1531910",
    "end": "1538990"
  },
  {
    "text": "of software I need right like that's ultimately what we want to get to to the next step before we do that we also need",
    "start": "1538990",
    "end": "1545350"
  },
  {
    "text": "to create the the matching resource groups so I said research group will be the glue code that will all the that the",
    "start": "1545350",
    "end": "1551590"
  },
  {
    "start": "1546000",
    "end": "1546000"
  },
  {
    "text": "glue object that we will kind of carry forward throughout this journey and and use any other services so with research",
    "start": "1551590",
    "end": "1558070"
  },
  {
    "text": "groups you can define hierarchical groups of resources that you can then address and other services in this",
    "start": "1558070",
    "end": "1564280"
  },
  {
    "text": "example I use the CLI but obviously you can use the SDK and API to do the same thing so I define a resource group here",
    "start": "1564280",
    "end": "1571750"
  },
  {
    "text": "that proxies if you like or kind of acts as a as a representation of the cloud",
    "start": "1571750",
    "end": "1578830"
  },
  {
    "text": "formation stack so in a research group you define a query how to look to find the members in this example here we're",
    "start": "1578830",
    "end": "1585490"
  },
  {
    "text": "defining a cloud formation based group that looks up the members by saying everything in this group is actually",
    "start": "1585490",
    "end": "1591640"
  },
  {
    "text": "everything that is in this cloud formation stack over alright and once I have this group I can now references in the other places so",
    "start": "1591640",
    "end": "1600190"
  },
  {
    "text": "once we have that we can now get on with the actual configuration so how do we",
    "start": "1600190",
    "end": "1606640"
  },
  {
    "text": "get to the actual on instance configuration how do we define what we actually need so for that we set",
    "start": "1606640",
    "end": "1612950"
  },
  {
    "start": "1612000",
    "end": "1612000"
  },
  {
    "text": "configuration management configuration management might be a good approach so let's say we pick chef or puppet in our",
    "start": "1612950",
    "end": "1618890"
  },
  {
    "text": "example to define the own instance configuration all right so we can now define in a fine girl away how do we",
    "start": "1618890",
    "end": "1624770"
  },
  {
    "text": "actually get Apache 2.4 3 7 running how do we get a certain version of Tomcat and OpenJDK and all the dependencies",
    "start": "1624770",
    "end": "1630920"
  },
  {
    "text": "that we need how do we get the necessary users and permissions and everything that you want to have on your machine you can define that in the in the chef",
    "start": "1630920",
    "end": "1638390"
  },
  {
    "text": "cookbook of puppet Diaz or puppet manifest in this very powerful very easy to read DSL where again there is a broad",
    "start": "1638390",
    "end": "1645950"
  },
  {
    "text": "community that publishes standard scripts for a lot of these things so you",
    "start": "1645950",
    "end": "1652220"
  },
  {
    "text": "don't have to start from scratch and you have a nice abstraction for doing all of this so to have a look at an example",
    "start": "1652220",
    "end": "1659480"
  },
  {
    "text": "here so this is a snippet from the Apache 2 community cookbook that you can",
    "start": "1659480",
    "end": "1665930"
  },
  {
    "start": "1662000",
    "end": "1662000"
  },
  {
    "text": "find on the chef supermarket which is the chef way to discover and share these open-source standard cookbooks that a",
    "start": "1665930",
    "end": "1674120"
  },
  {
    "text": "lot of people use right and what I can do here is I can define like my parts of",
    "start": "1674120",
    "end": "1681500"
  },
  {
    "text": "my Apache con if I can enable SSL I can define a certain virtual host that runs",
    "start": "1681500",
    "end": "1687590"
  },
  {
    "text": "off a certain template and so forth right so if you know even if you're not familiar with with the chef DSL you get",
    "start": "1687590",
    "end": "1693770"
  },
  {
    "text": "a feeling for ok how can i define this on instance configuration obviously there there other examples for Tomcat",
    "start": "1693770",
    "end": "1700340"
  },
  {
    "text": "and so forth the important part is again this is all code this is all things that I would have in my get repository and",
    "start": "1700340",
    "end": "1707150"
  },
  {
    "text": "that my developers or engineers could then make changes to that are that are in source control that a trace that I",
    "start": "1707150",
    "end": "1713360"
  },
  {
    "text": "can roll back and roll and roll forward and the trigger that promote to get promoted through the pipeline",
    "start": "1713360",
    "end": "1718430"
  },
  {
    "text": "automatically without any manual intervention by me so once we have that",
    "start": "1718430",
    "end": "1725540"
  },
  {
    "text": "set up and obviously you need you need a lot more of these configurations to actually define all",
    "start": "1725540",
    "end": "1731130"
  },
  {
    "text": "the necessary pieces but hopefully you can you can find most of them on the supermarket too and be base your",
    "start": "1731130",
    "end": "1737370"
  },
  {
    "text": "configuration based on these then I I can go to the next step right like once so now we have our instances provisioned",
    "start": "1737370",
    "end": "1744810"
  },
  {
    "text": "we have them configured with the necessary software that we want to have running on it now we want to see how can we actually monitor this so for that",
    "start": "1744810",
    "end": "1752430"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "we're going to use clot watch and use a clock watch feature that was regional recently launched which is the ability",
    "start": "1752430",
    "end": "1759180"
  },
  {
    "text": "to create automated dashboards based on your on your recess group so you might not be able to to see that very well",
    "start": "1759180",
    "end": "1765000"
  },
  {
    "text": "right but this drop down here lists the resource groups in my account so I can select the the research group here for",
    "start": "1765000",
    "end": "1770820"
  },
  {
    "text": "example that we created for our matching CloudFormation stack and clot watch will generate automatically dashboards for",
    "start": "1770820",
    "end": "1777960"
  },
  {
    "text": "this so here's like how the - what could look like were based on the resources",
    "start": "1777960",
    "end": "1783420"
  },
  {
    "text": "that are in this particular group it will generate the the matching graphs and dashboards so let's say you have an",
    "start": "1783420",
    "end": "1789900"
  },
  {
    "text": "a load balancer in a bunch of instances in there so you will see by default like a graph for the requests per second for",
    "start": "1789900",
    "end": "1795480"
  },
  {
    "text": "the multiple and so the errors the latency and so forth you will see the standard infrastructure host level",
    "start": "1795480",
    "end": "1801300"
  },
  {
    "text": "metrics for your ec2 instances you will find like AI ops per second consumed or so for EBS volumes so the Senate metrics",
    "start": "1801300",
    "end": "1807960"
  },
  {
    "text": "you would expect for all of these resources obviously you can you can make changes to these you can create your own",
    "start": "1807960",
    "end": "1813000"
  },
  {
    "text": "dashboards you can you can override all of this but it's a pretty nice kind of default experience that you get for",
    "start": "1813000",
    "end": "1819870"
  },
  {
    "text": "existing resource groups so that's a very neat feature that allows you again to maintain context on that resource",
    "start": "1819870",
    "end": "1826290"
  },
  {
    "text": "group and you like I said you can have hierarchies there so you could have like a separate one for your phone and web servers and your back-end web servers",
    "start": "1826290",
    "end": "1832140"
  },
  {
    "text": "and whatever you your you're using for running your particular application now",
    "start": "1832140",
    "end": "1838170"
  },
  {
    "text": "once we did this we're able ready to get like a nice operational dashboard for the infrastructure that I've provisioned",
    "start": "1838170",
    "end": "1844400"
  },
  {
    "text": "the next step is now how do I actually get some insight with the in terms of",
    "start": "1844400",
    "end": "1851610"
  },
  {
    "text": "the audit status of the compliance status of my of my running infrastructure right so this is",
    "start": "1851610",
    "end": "1859230"
  },
  {
    "start": "1858000",
    "end": "1858000"
  },
  {
    "text": "something we can do with configured config rules we will look at an example config rule in a second but what I can do here is if",
    "start": "1859230",
    "end": "1867749"
  },
  {
    "text": "you go to the systems manager console you were able to here in the inside section to also look at research group",
    "start": "1867749",
    "end": "1874470"
  },
  {
    "text": "scoped violations against your yo defined config rules or you can see the",
    "start": "1874470",
    "end": "1879989"
  },
  {
    "text": "claw trail events that are only particular for this resource group right so that means by default I'm now able to",
    "start": "1879989",
    "end": "1886379"
  },
  {
    "text": "get a dashboard that tells me here the the non-compliant resources in this resource group obviously again you can",
    "start": "1886379",
    "end": "1892409"
  },
  {
    "text": "you can respond to this with automation you can fire clockwork events for all of",
    "start": "1892409",
    "end": "1897419"
  },
  {
    "text": "this but it's also nice to have like a visual dashboard in the console that will give you some some insight into",
    "start": "1897419",
    "end": "1903600"
  },
  {
    "text": "this so here's an example config rule we",
    "start": "1903600",
    "end": "1908609"
  },
  {
    "start": "1907000",
    "end": "1907000"
  },
  {
    "text": "have also an example repository with these this is also only a snippet of it",
    "start": "1908609",
    "end": "1913950"
  },
  {
    "text": "but what it does is it essentially the important line is is the last one here",
    "start": "1913950",
    "end": "1919259"
  },
  {
    "text": "that checks if a host if an ec2 instance is like in this case provisioned as a",
    "start": "1919259",
    "end": "1924480"
  },
  {
    "text": "dedicated host or not right like so for whatever reason for my team I created this policy that says all the hosts need",
    "start": "1924480",
    "end": "1930090"
  },
  {
    "text": "to be undead ik ated Hardware because we don't want to have we don't want to share with any with any other accounts",
    "start": "1930090",
    "end": "1935879"
  },
  {
    "text": "or neighbors so if you would have that rule defined you would now be able to see what are all the ec2 instances that",
    "start": "1935879",
    "end": "1942359"
  },
  {
    "text": "don't comply with this policy like I said you could have your obviously your own policy you can you can look at some",
    "start": "1942359",
    "end": "1947489"
  },
  {
    "text": "of the community policies I think a good example is the security one that I that I explained earlier with a security",
    "start": "1947489",
    "end": "1953639"
  },
  {
    "text": "group in port 80 and then once you have these configure walls defined you can",
    "start": "1953639",
    "end": "1960509"
  },
  {
    "text": "now automatically or manually respond to to any resources that are not that are",
    "start": "1960509",
    "end": "1966269"
  },
  {
    "text": "not compliant with these and like I said you can actually see them then in the in the dashboard that we looked at earlier",
    "start": "1966269",
    "end": "1973129"
  },
  {
    "text": "so the next piece is remediation I want to be able to run any of my run books",
    "start": "1973129",
    "end": "1979019"
  },
  {
    "text": "that we were like automation documents essentially against my resources in a particular resource group so here I'm",
    "start": "1979019",
    "end": "1987600"
  },
  {
    "start": "1985000",
    "end": "1985000"
  },
  {
    "text": "looking at the research group dashboard in an in the systems manager console and what you can see here on the right",
    "start": "1987600",
    "end": "1993789"
  },
  {
    "text": "is a drop-down that lists me all my automation documents right so I can basically say for this resource group",
    "start": "1993789",
    "end": "1999759"
  },
  {
    "text": "now let me run a particular automation document that execute whatever logic I",
    "start": "1999759",
    "end": "2005580"
  },
  {
    "text": "want to have in my run book right like said an automation document can either include a run command document which",
    "start": "2005580",
    "end": "2011789"
  },
  {
    "text": "means it can run inside your instance or it can run outside of your instance by executing interactions with certain",
    "start": "2011789",
    "end": "2017999"
  },
  {
    "text": "other services so here's a part of the snippet of an automation document that that launches and terminates instances",
    "start": "2017999",
    "end": "2027119"
  },
  {
    "text": "where you define for the for a certain instance or resource type what are the",
    "start": "2027119",
    "end": "2032879"
  },
  {
    "text": "desired changes you want to make to to certain attributes and then it's able to execute these for you a good example I",
    "start": "2032879",
    "end": "2041279"
  },
  {
    "text": "think is is this Tomcat one that we were talking about were you need to actually combine changes that are happening",
    "start": "2041279",
    "end": "2047369"
  },
  {
    "text": "outside of the context of an instance let's say interaction with last elastic",
    "start": "2047369",
    "end": "2054210"
  },
  {
    "text": "or application load balancers or interactions with RDS let's say and changes the need to happen inside your",
    "start": "2054210",
    "end": "2059520"
  },
  {
    "text": "instance that's maybe a good reason to show you where would you want to use an automation document versus a lambda",
    "start": "2059520",
    "end": "2065010"
  },
  {
    "text": "function so everything that I say you could also use lambdas as a as the execution for for a college event like",
    "start": "2065010",
    "end": "2071970"
  },
  {
    "text": "say the violation against the config rule but with automation you're actually able to run them inside the instance so",
    "start": "2071970",
    "end": "2077520"
  },
  {
    "text": "another example might be for whatever reason every now and then your application gets stuck and you need to",
    "start": "2077520",
    "end": "2082648"
  },
  {
    "text": "restart the process this is not something you could easily do from with lambda because it's not doesn't have",
    "start": "2082649",
    "end": "2088500"
  },
  {
    "text": "access inside the or your instances where automation can do that so you could have a standard automation SOP",
    "start": "2088500",
    "end": "2093960"
  },
  {
    "text": "script that you share with your developers so that they can select it in",
    "start": "2093960",
    "end": "2099240"
  },
  {
    "text": "this list right so they no longer need to kind of copy paste code from the wiki page but instead they can just look at",
    "start": "2099240",
    "end": "2105930"
  },
  {
    "text": "select for a certain application essentially write a certain resource group here's my standard script URI",
    "start": "2105930",
    "end": "2111809"
  },
  {
    "text": "trigger the restart of my application server and then you can do this manually or you can fully automate this again",
    "start": "2111809",
    "end": "2117059"
  },
  {
    "text": "right where you use a any claw which event as a trigger for running this clutch sorry for running this automation",
    "start": "2117059",
    "end": "2123390"
  },
  {
    "text": "documents so with that right like we we pretty much have the individual",
    "start": "2123390",
    "end": "2128820"
  },
  {
    "text": "pieces of that story covered right we have now infrastructures code through",
    "start": "2128820",
    "end": "2134400"
  },
  {
    "text": "CloudFormation we have configuration as code through opsworks and pappad or chef",
    "start": "2134400",
    "end": "2139980"
  },
  {
    "text": "we have monitoring with with clot watch that we also can define in code for",
    "start": "2139980",
    "end": "2146400"
  },
  {
    "text": "example in the CloudFormation template itself and then we have automation documents as our s of piece how do we",
    "start": "2146400",
    "end": "2151980"
  },
  {
    "text": "now tie all of this together and get actually this pipeline going and how do we actually make it happen that these things are promoted step by step so this",
    "start": "2151980",
    "end": "2160080"
  },
  {
    "text": "is where we're code pipeline and code build come in so code pipeline is a fully managed continuous deliver deliver",
    "start": "2160080",
    "end": "2166349"
  },
  {
    "text": "delivery service by ADA base right where I can model this release process and I",
    "start": "2166349",
    "end": "2171780"
  },
  {
    "text": "can define the individual step that I need for my infrastructure pipeline for my configuration pipeline for more a",
    "start": "2171780",
    "end": "2177900"
  },
  {
    "text": "tools pipeline right for basically each of those pieces and make sure that they",
    "start": "2177900",
    "end": "2183000"
  },
  {
    "text": "get applied automatically without any manual intervention I can define tests up and build steps and so forth as the",
    "start": "2183000",
    "end": "2188849"
  },
  {
    "text": "individual steps so let's say in this example here we want to deploy an application so the first thing we have",
    "start": "2188849",
    "end": "2195570"
  },
  {
    "text": "is this step here which is the source step so this monitor is my my git",
    "start": "2195570",
    "end": "2200849"
  },
  {
    "text": "repository and every time somebody checks into that git repository a transition will happen into the next",
    "start": "2200849",
    "end": "2207210"
  },
  {
    "text": "step so in this case a build test step with code build like I said this could also be like a Jenkins step if you like",
    "start": "2207210",
    "end": "2214490"
  },
  {
    "text": "or any other custom step were in this case the the code will be checked out",
    "start": "2214490",
    "end": "2220109"
  },
  {
    "text": "and we'll the test will run on code build and then if the tests succeed it will promote to the next step were in",
    "start": "2220109",
    "end": "2228570"
  },
  {
    "text": "this case it will be uploaded to s3 so that then the next step could be like deployment of code deploy for example",
    "start": "2228570",
    "end": "2235230"
  },
  {
    "text": "now this doesn't have to be only your application code right like you could define a very similar pipeline for your",
    "start": "2235230",
    "end": "2242060"
  },
  {
    "text": "configuration code with with chef or puppet so for example I'm as engineer",
    "start": "2242060",
    "end": "2247589"
  },
  {
    "text": "I'm making a change to the Apache definition I want to roll out I want to update the version of Apache that we're using so I make this change in the chef",
    "start": "2247589",
    "end": "2254820"
  },
  {
    "text": "cookbook I commit this change push it to to our git repository code pipeline pick",
    "start": "2254820",
    "end": "2261360"
  },
  {
    "text": "it up runs any validation or linting that needs to run and then it uploads it to the chef server and then the chef",
    "start": "2261360",
    "end": "2267690"
  },
  {
    "text": "store distributes it and applies it to all the nodes so that all my instances that are connected to chef sir will automatically apply this configuration",
    "start": "2267690",
    "end": "2273630"
  },
  {
    "text": "change this is actually exactly what what the the sessions on Thursday will",
    "start": "2273630",
    "end": "2279690"
  },
  {
    "text": "walk you through in a lot more details of how we can build this completely with the CloudFormation provisioning the",
    "start": "2279690",
    "end": "2285510"
  },
  {
    "text": "applying the configuration changes and automating all of this and and you will have a much more hands-on session into",
    "start": "2285510",
    "end": "2291450"
  },
  {
    "text": "these details so with with that all right I can now automatic promote and release any changes to my application to",
    "start": "2291450",
    "end": "2299190"
  },
  {
    "text": "my infrastructure to my like to my to my provisioning of the of the monitoring to",
    "start": "2299190",
    "end": "2307050"
  },
  {
    "text": "my remediation scripts that I have with with Systems Manager and you can do the",
    "start": "2307050",
    "end": "2315180"
  },
  {
    "text": "same thing for your config rules right so that every time somebody makes changes they get automatically promoted and released so that essentially you're",
    "start": "2315180",
    "end": "2321900"
  },
  {
    "text": "right that we're now fully automated this creation in this process so that",
    "start": "2321900",
    "end": "2327510"
  },
  {
    "text": "there is no manual interaction necessary right so if we if we think back to this pipeline picture I now created all of",
    "start": "2327510",
    "end": "2335670"
  },
  {
    "text": "these individual steps and are able to ultimately end up in this world were that we have for infrastructure",
    "start": "2335670",
    "end": "2342720"
  },
  {
    "start": "2338000",
    "end": "2338000"
  },
  {
    "text": "automation we have cloud formation we have configurations code through ops works and chef or puppet for operations",
    "start": "2342720",
    "end": "2349890"
  },
  {
    "text": "as code we use Systems Manager and clot watch in my example here for the compliance pieces we use config and",
    "start": "2349890",
    "end": "2356190"
  },
  {
    "text": "config rules and then for the actual application delivery we use code pipeline and code deploy and then",
    "start": "2356190",
    "end": "2363390"
  },
  {
    "text": "essentially there is the the glue code around it which is resource groups and the pipelining so that I'm able now to",
    "start": "2363390",
    "end": "2370280"
  },
  {
    "text": "make any changes to these pieces in my source control system and have them be automatically released and promoted to",
    "start": "2370280",
    "end": "2376830"
  },
  {
    "text": "my production systems without any human having to verify that of course if I",
    "start": "2376830",
    "end": "2382350"
  },
  {
    "text": "want to I can add human verifications to this so I might not be comfortable like",
    "start": "2382350",
    "end": "2387780"
  },
  {
    "text": "in the very beginning to have all of this run automatically like the our Tomcat restart examples maybe this is not something you want to execute fully",
    "start": "2387780",
    "end": "2394650"
  },
  {
    "text": "automated on all your machines just because memory is low so you can add for example manual",
    "start": "2394650",
    "end": "2400410"
  },
  {
    "text": "approval steps in there you can also maybe not execute these SOPs",
    "start": "2400410",
    "end": "2405720"
  },
  {
    "text": "automatically but this is up to you right like the the tooling supports all of this so that ultimately you end up in",
    "start": "2405720",
    "end": "2411150"
  },
  {
    "text": "a world were as a developer I can make changes in my sauce control system for",
    "start": "2411150",
    "end": "2416609"
  },
  {
    "text": "my infrastructure pieces that defined through cloud formation what resources do I deploy on a device right like how",
    "start": "2416609",
    "end": "2422940"
  },
  {
    "text": "many instances do I have right like you can say let's say you have four instances in your application and you",
    "start": "2422940",
    "end": "2428670"
  },
  {
    "text": "want to now change that to 10 because the load increased so you make a change to your CloudFormation template you",
    "start": "2428670",
    "end": "2435029"
  },
  {
    "text": "commit that code pipeline will now take this change push it to confirmation",
    "start": "2435029",
    "end": "2440369"
  },
  {
    "text": "cloth which will now update your running infrastructure stack and launch additional servers if there is a problem",
    "start": "2440369",
    "end": "2445890"
  },
  {
    "text": "let's say your account doesn't support more instances it will it will abort and that not promote this change to the next",
    "start": "2445890",
    "end": "2451259"
  },
  {
    "text": "level but let's say it went through so now you have six additional servers running this service will will register",
    "start": "2451259",
    "end": "2456749"
  },
  {
    "text": "with the in our example the chef server through through opsworks will install all the necessary software",
    "start": "2456749",
    "end": "2462749"
  },
  {
    "text": "that you defined let's say apache tomcat and so forth in our example and we'll register themselves with a load balancer",
    "start": "2462749",
    "end": "2469289"
  },
  {
    "text": "that opens our verify that they're able to serve traffic normally then they will",
    "start": "2469289",
    "end": "2475230"
  },
  {
    "text": "start pushing the metrics to clot watch in here so you will you will see all of that happening in your in your",
    "start": "2475230",
    "end": "2480630"
  },
  {
    "text": "dashboards and metrics because there will be part of the resource group so there will automatically be part of that - quote that we created and then because",
    "start": "2480630",
    "end": "2489359"
  },
  {
    "text": "they're now new resources the the new the config rules will run against these so I'm able to confirm that all of their",
    "start": "2489359",
    "end": "2496559"
  },
  {
    "text": "configuration is valid with my desired state and and then if you register the",
    "start": "2496559",
    "end": "2501720"
  },
  {
    "text": "HG with Co deploy they will also ought to be automatically deployed right so this is like full automation for all of",
    "start": "2501720",
    "end": "2507900"
  },
  {
    "text": "these pieces without any manual interaction apart from obviously making the code change and committing it and",
    "start": "2507900",
    "end": "2514289"
  },
  {
    "text": "the same will also be true for any of the other examples right like let's say I change a certain policy in my company",
    "start": "2514289",
    "end": "2520980"
  },
  {
    "text": "where I now want to make sure that certain software is installed are not",
    "start": "2520980",
    "end": "2526140"
  },
  {
    "text": "installed in a certain version as soon as I commit this and watch this and I have pipelines configured to also update config rules",
    "start": "2526140",
    "end": "2532640"
  },
  {
    "text": "based on these right called pipelines will promote these changes through my",
    "start": "2532640",
    "end": "2538010"
  },
  {
    "text": "through my infrastructure and then as soon as it runs against my production environment I will be able to verify that all of them are my resources apply",
    "start": "2538010",
    "end": "2545329"
  },
  {
    "text": "now to the compliant with this new policy right so I might depending and",
    "start": "2545329",
    "end": "2550700"
  },
  {
    "text": "then how you configure the remediation right this might only trigger alarms for",
    "start": "2550700",
    "end": "2555710"
  },
  {
    "text": "you or it will only figure Club which events that you then know maybe these just notify you or maybe these automatically through the integration of",
    "start": "2555710",
    "end": "2562070"
  },
  {
    "text": "club events and automation or Landa act on these violations like they terminate",
    "start": "2562070",
    "end": "2568460"
  },
  {
    "text": "the resource that are no long and compliant or they configure them that they cannot be used from the from the",
    "start": "2568460",
    "end": "2574010"
  },
  {
    "text": "internet or whatever makes sense for you and in your company you can you can again fully automate this and fully yeah",
    "start": "2574010",
    "end": "2581900"
  },
  {
    "text": "codify this so that you can verify any changes to that you can see who did what",
    "start": "2581900",
    "end": "2587570"
  },
  {
    "text": "change and when and you can roll back all of this so code pipeline will also handle that for you and will not promote",
    "start": "2587570",
    "end": "2593930"
  },
  {
    "text": "any changes to production yeah and with that my very brief and high-level",
    "start": "2593930",
    "end": "2600109"
  },
  {
    "text": "journey through through how you can leverage the management tools comes to an end and we have a few minutes to go",
    "start": "2600109",
    "end": "2606920"
  },
  {
    "text": "over any questions if you have some so any any questions",
    "start": "2606920",
    "end": "2615369"
  },
  {
    "text": "yeah the slides will be available online usually takes a few days until until you can get them on the from the session",
    "start": "2615460",
    "end": "2623810"
  },
  {
    "text": "catalog website and then all the talks are recorded so they will be available on YouTube over the next few days yes",
    "start": "2623810",
    "end": "2631339"
  },
  {
    "text": "please",
    "start": "2631339",
    "end": "2633550"
  },
  {
    "text": "yeah so the question is if the tools support phased rollouts so you can slowly promote them so some",
    "start": "2640030",
    "end": "2646630"
  },
  {
    "text": "of these tools support this natively like let's say code deploy you can define a velocity you can do the same",
    "start": "2646630",
    "end": "2652540"
  },
  {
    "text": "with the run command so you can you can define only run the script at five instances at a time and when it fails",
    "start": "2652540",
    "end": "2657730"
  },
  {
    "text": "like stop you can also reproduce that with code",
    "start": "2657730",
    "end": "2663760"
  },
  {
    "text": "pipeline by the way you that you define the stages right so you can you can do",
    "start": "2663760",
    "end": "2670150"
  },
  {
    "text": "you can either say okay one deployment stages or one update stages my whole clot formation stack or all the",
    "start": "2670150",
    "end": "2676720"
  },
  {
    "text": "resources that I have in my account for example right but you can also define units of that where you say let's say",
    "start": "2676720",
    "end": "2684730"
  },
  {
    "text": "this this application target is only a subset of my account and you define them",
    "start": "2684730",
    "end": "2690310"
  },
  {
    "text": "as individual stages this is this is definitely best practice that we recommend this is how also most teams",
    "start": "2690310",
    "end": "2696250"
  },
  {
    "text": "that Amazon internally roll out software where we we've rolled out to what we call a one box like a single machine in",
    "start": "2696250",
    "end": "2702190"
  },
  {
    "text": "an availability zone then we roll to the whole availability zone and then to we",
    "start": "2702190",
    "end": "2707350"
  },
  {
    "text": "would progress to the next one before we like complete a region and then we would start like with another single machine in the next region and so forth",
    "start": "2707350",
    "end": "2713890"
  },
  {
    "text": "so you can model that with some of the tools they have this velocity control built in and with some of the other",
    "start": "2713890",
    "end": "2719380"
  },
  {
    "text": "tools you need to do this when you define like what is in a resource group of what is my deployment target you you",
    "start": "2719380",
    "end": "2725470"
  },
  {
    "text": "need to define the units that make sense for you were like me to say for first the staging environment maybe for the",
    "start": "2725470",
    "end": "2731710"
  },
  {
    "text": "staging environment you're fine deploying it immediately but for production you probably want to use these smaller increments until you hit",
    "start": "2731710",
    "end": "2738580"
  },
  {
    "text": "the full-blown production workload any other questions yes please in the first",
    "start": "2738580",
    "end": "2744820"
  },
  {
    "text": "row yeah",
    "start": "2744820",
    "end": "2749370"
  },
  {
    "text": "so the the the question was when we're talking about monitoring can we also monitor the database services themselves",
    "start": "2752740",
    "end": "2760700"
  },
  {
    "text": "so with clot watch the answer without which no so clot which only provides with metrics about kind of the built in",
    "start": "2760700",
    "end": "2768619"
  },
  {
    "text": "metrics that the services report let's say for you see - what is the CPU consumption and then you can define your own metrics you can get this information",
    "start": "2768619",
    "end": "2775819"
  },
  {
    "text": "through the personal health dashboards in your account that will tell you if there are major events and for services",
    "start": "2775819",
    "end": "2781339"
  },
  {
    "text": "that you consume but through cloud directly not yet as I believe I think",
    "start": "2781339",
    "end": "2786560"
  },
  {
    "text": "there was another question over here",
    "start": "2786560",
    "end": "2789640"
  },
  {
    "text": "so the question was that my examples I mentioned puppet and chef and if we also",
    "start": "2800740",
    "end": "2805880"
  },
  {
    "text": "see ansible the answer is yes of course like everything that I showed you here is also possible with ansible I spoke",
    "start": "2805880",
    "end": "2812510"
  },
  {
    "text": "mostly about chef and puppet because these are the the surfaces for which we have a managed service where you can get",
    "start": "2812510",
    "end": "2819380"
  },
  {
    "text": "your own chef automate a puppet enterprise server that is managed by the ves but you can use also ansible for these examples right like you can have",
    "start": "2819380",
    "end": "2825350"
  },
  {
    "text": "ansible play books that then define the",
    "start": "2825350",
    "end": "2830450"
  },
  {
    "text": "configuration on the instances themselves and then you trigger these maybe through the user data or maybe",
    "start": "2830450",
    "end": "2836930"
  },
  {
    "text": "through club which event and so forth or maybe you use ansible tower so at the end of the day like for every for most",
    "start": "2836930",
    "end": "2843350"
  },
  {
    "text": "of the pieces that I showed you here you can replace them with something else right like you can replace cloud formation with terraform if that works",
    "start": "2843350",
    "end": "2850340"
  },
  {
    "text": "better for you you can replace the code build a quote pipeline with some tool",
    "start": "2850340",
    "end": "2856610"
  },
  {
    "text": "like Jenkins and in that sense right like the the ultimately you can you can achieve like an automation pipeline like",
    "start": "2856610",
    "end": "2862550"
  },
  {
    "text": "we were describing with many different tools it's just that these tools of course come build in and they work well",
    "start": "2862550",
    "end": "2868310"
  },
  {
    "text": "together but at the end of the day we're very happy for you to use different tools if that fits your workflow better",
    "start": "2868310",
    "end": "2874490"
  },
  {
    "text": "I think there was another question in the back there yeah so the question was",
    "start": "2874490",
    "end": "2883790"
  },
  {
    "text": "if Systems Manager has no cost associated with it this is true for most",
    "start": "2883790",
    "end": "2890720"
  },
  {
    "text": "of Systems Manager like with released some features are very recently like the distributor and cross account automation",
    "start": "2890720",
    "end": "2897860"
  },
  {
    "text": "execution like and cross region execution these actually have a price but the the basic capabilities like run",
    "start": "2897860",
    "end": "2905360"
  },
  {
    "text": "command automation patch and and so forth they're they're all free so so if",
    "start": "2905360",
    "end": "2911390"
  },
  {
    "text": "you go to the Systems Manager page the public website it will list the pricing like I said that only applies to the",
    "start": "2911390",
    "end": "2918020"
  },
  {
    "text": "distributor use case and cross account cross region execution of automation documents",
    "start": "2918020",
    "end": "2924880"
  },
  {
    "text": "[Music]",
    "start": "2928190",
    "end": "2931280"
  },
  {
    "text": "so the question was that the the claw trail cost for for your use case seems",
    "start": "2937820",
    "end": "2943560"
  },
  {
    "text": "high and if we're able to lower it so I cannot speak for the claw trail team but",
    "start": "2943560",
    "end": "2950160"
  },
  {
    "text": "I'm sure that they're looking regularly into how we can reduce costs so at Amazon if we've we're very eager to find",
    "start": "2950160",
    "end": "2956580"
  },
  {
    "text": "ways to make all of this cheaper for customers so we we just launched today the feature for s3 were you can we will",
    "start": "2956580",
    "end": "2964290"
  },
  {
    "text": "automatically put keys that are not being accessed very frequently into like",
    "start": "2964290",
    "end": "2969510"
  },
  {
    "text": "the cheaper frequently infrequent use storage case so I'm sure the clock trail",
    "start": "2969510",
    "end": "2975840"
  },
  {
    "text": "team is looking into similar improvements how we can make this cheaper but the best thing is is if",
    "start": "2975840",
    "end": "2981450"
  },
  {
    "text": "you're interested in that is maybe maybe find one of the claw trail team members that are running around here today and",
    "start": "2981450",
    "end": "2987390"
  },
  {
    "text": "speak to them but yeah like ultimately yes like our goal is to make this as",
    "start": "2987390",
    "end": "2992400"
  },
  {
    "text": "cheap as possible because we think like something like cloud trail is essential to actually have like a proper audit",
    "start": "2992400",
    "end": "2997710"
  },
  {
    "text": "capabilities for your account one last question maybe looks like no",
    "start": "2997710",
    "end": "3008060"
  },
  {
    "text": "questions oh here please",
    "start": "3008060",
    "end": "3011170"
  },
  {
    "text": "so the question is if you can get access to the club which dashboards also via the CLI or API or yeah",
    "start": "3021340",
    "end": "3034880"
  },
  {
    "text": "so I think today you need to log into the console to in order to get access to",
    "start": "3034880",
    "end": "3040880"
  },
  {
    "text": "the actual dashboards but you have access by API and SDK to the data itself so you can you can yeah you can you can",
    "start": "3040880",
    "end": "3049150"
  },
  {
    "text": "graph this data with other tools so I think there is a graph on ax like open",
    "start": "3049150",
    "end": "3055970"
  },
  {
    "text": "source plugin or so that you can use Ravana to display clash data for example so you can build your own dashboards",
    "start": "3055970",
    "end": "3062530"
  },
  {
    "text": "based on all the data that we saw here right like ultimately it's just the matter of yeah how do you display the",
    "start": "3062530",
    "end": "3068720"
  },
  {
    "text": "what is important is the data itself which you will get through an API access cool yeah so thank you very much",
    "start": "3068720",
    "end": "3075170"
  },
  {
    "text": "everybody and enjoy the rest of the conference",
    "start": "3075170",
    "end": "3079630"
  }
]