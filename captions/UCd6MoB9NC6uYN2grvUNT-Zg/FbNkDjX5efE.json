[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello in this short demo of AWS single",
    "start": "30",
    "end": "3030"
  },
  {
    "text": "sign-on otherwise known as AWS SSO I'll",
    "start": "3030",
    "end": "5549"
  },
  {
    "text": "show you the seamless experience for an",
    "start": "5549",
    "end": "7649"
  },
  {
    "text": "azure active directory end-user signing",
    "start": "7649",
    "end": "10380"
  },
  {
    "text": "in to access all their assigned AWS",
    "start": "10380",
    "end": "12300"
  },
  {
    "text": "accounts roles and business applications",
    "start": "12300",
    "end": "13880"
  },
  {
    "text": "from one place I'll also explain the",
    "start": "13880",
    "end": "16980"
  },
  {
    "text": "configuration that connects a sure ad to",
    "start": "16980",
    "end": "18960"
  },
  {
    "text": "AWS to enable access centrally across an",
    "start": "18960",
    "end": "22109"
  },
  {
    "text": "AWS organization and to third-party",
    "start": "22109",
    "end": "24240"
  },
  {
    "text": "sam'l applications you'll see how the",
    "start": "24240",
    "end": "26670"
  },
  {
    "text": "users credentials can remain in Azure ad",
    "start": "26670",
    "end": "28650"
  },
  {
    "text": "and no passwords or other credentials",
    "start": "28650",
    "end": "30929"
  },
  {
    "text": "need to be stored anywhere in AWS ok I'm",
    "start": "30929",
    "end": "35250"
  },
  {
    "start": "34000",
    "end": "88000"
  },
  {
    "text": "going to represent a fictitious person",
    "start": "35250",
    "end": "37350"
  },
  {
    "text": "named Jaime Jenkins who is already in",
    "start": "37350",
    "end": "39210"
  },
  {
    "text": "office 365 user Jaime comes to work in",
    "start": "39210",
    "end": "42120"
  },
  {
    "text": "the morning and signs in to my apps",
    "start": "42120",
    "end": "43680"
  },
  {
    "text": "microsoft.com using our adder ad",
    "start": "43680",
    "end": "46230"
  },
  {
    "text": "username and password Jaime's portal",
    "start": "46230",
    "end": "49350"
  },
  {
    "text": "opens and you can see tiles for Jaime to",
    "start": "49350",
    "end": "51300"
  },
  {
    "text": "access office 365 tools including",
    "start": "51300",
    "end": "53699"
  },
  {
    "text": "outlook tasks and calendar you can also",
    "start": "53699",
    "end": "56070"
  },
  {
    "text": "see that as Radia administrator granted",
    "start": "56070",
    "end": "58260"
  },
  {
    "text": "Jaime access to the AWS SSO user portal",
    "start": "58260",
    "end": "60840"
  },
  {
    "text": "Jaime opens the portal now you see that",
    "start": "60840",
    "end": "63960"
  },
  {
    "text": "Jaime does not have to re-enter",
    "start": "63960",
    "end": "65518"
  },
  {
    "text": "credentials to access AWS this is",
    "start": "65519",
    "end": "67799"
  },
  {
    "text": "because the administrator configured AWS",
    "start": "67799",
    "end": "69840"
  },
  {
    "text": "SSO to use Azure ad as an external",
    "start": "69840",
    "end": "72060"
  },
  {
    "text": "identity source this is why AWS SSO can",
    "start": "72060",
    "end": "75509"
  },
  {
    "text": "authenticate Jaime using sam'l to",
    "start": "75509",
    "end": "77220"
  },
  {
    "text": "confirm Jaime's identity with Azure ad",
    "start": "77220",
    "end": "79520"
  },
  {
    "text": "now Jaime's identity is verified an AWS",
    "start": "79520",
    "end": "82799"
  },
  {
    "text": "SSO now presents her with a dynamically",
    "start": "82799",
    "end": "84990"
  },
  {
    "text": "generated user portal that she would",
    "start": "84990",
    "end": "86610"
  },
  {
    "text": "have seen by logging in directly let's",
    "start": "86610",
    "end": "89009"
  },
  {
    "start": "88000",
    "end": "167000"
  },
  {
    "text": "first explore the AWS account tile the",
    "start": "89009",
    "end": "91650"
  },
  {
    "text": "admin gave Jaime access to two different",
    "start": "91650",
    "end": "93329"
  },
  {
    "text": "AWS accounts a production account and a",
    "start": "93329",
    "end": "95579"
  },
  {
    "text": "staging account opening the tile we can",
    "start": "95579",
    "end": "97979"
  },
  {
    "text": "save Jaime has access to an ec2 admin",
    "start": "97979",
    "end": "100439"
  },
  {
    "text": "role and a storage admin role in the",
    "start": "100439",
    "end": "102450"
  },
  {
    "text": "production account in the staging",
    "start": "102450",
    "end": "104280"
  },
  {
    "text": "account Jaime is access to the DB admin",
    "start": "104280",
    "end": "106530"
  },
  {
    "text": "role and ec2 admin role Jaime clicks on",
    "start": "106530",
    "end": "109560"
  },
  {
    "text": "the ec2 admin role in the production",
    "start": "109560",
    "end": "111360"
  },
  {
    "text": "account and that takes Jaime into the",
    "start": "111360",
    "end": "113520"
  },
  {
    "text": "AWS console in the production account",
    "start": "113520",
    "end": "115409"
  },
  {
    "text": "while assuming the ec2 admin role Jaime",
    "start": "115409",
    "end": "118350"
  },
  {
    "text": "then chooses ec2 once again Jamie does",
    "start": "118350",
    "end": "121560"
  },
  {
    "text": "not have to enter username and password",
    "start": "121560",
    "end": "122969"
  },
  {
    "text": "any more",
    "start": "122969",
    "end": "124020"
  },
  {
    "text": "she just signs in once to Azure ad and",
    "start": "124020",
    "end": "126270"
  },
  {
    "text": "can access everything she needed in AWS",
    "start": "126270",
    "end": "130099"
  },
  {
    "text": "Jaime is now in the ec2 console where",
    "start": "130099",
    "end": "132900"
  },
  {
    "text": "she can launch an",
    "start": "132900",
    "end": "133750"
  },
  {
    "text": "two instances importantly you can see",
    "start": "133750",
    "end": "136810"
  },
  {
    "text": "that the console status bar in the upper",
    "start": "136810",
    "end": "138430"
  },
  {
    "text": "right shows that Jamie is using the ACE",
    "start": "138430",
    "end": "140290"
  },
  {
    "text": "ec2 admin role",
    "start": "140290",
    "end": "141730"
  },
  {
    "text": "it also shows Jamie's username from",
    "start": "141730",
    "end": "143650"
  },
  {
    "text": "Azure ad as the user who assumed that",
    "start": "143650",
    "end": "145420"
  },
  {
    "text": "role now note that Jamie could have a",
    "start": "145420",
    "end": "147670"
  },
  {
    "text": "similar experience using the new AWS",
    "start": "147670",
    "end": "149590"
  },
  {
    "text": "command-line interface version 2 that",
    "start": "149590",
    "end": "151690"
  },
  {
    "text": "integrates with AWS SSO although I'm not",
    "start": "151690",
    "end": "154390"
  },
  {
    "text": "showing it here it is also noteworthy",
    "start": "154390",
    "end": "156130"
  },
  {
    "text": "that if Jamie goes to the AWS SSO user",
    "start": "156130",
    "end": "158770"
  },
  {
    "text": "portal or to the CLI v2 before signing",
    "start": "158770",
    "end": "161800"
  },
  {
    "text": "into Azure ad AWS SSO will redirect",
    "start": "161800",
    "end": "164680"
  },
  {
    "text": "Jamie to Azure ID to sign in first going",
    "start": "164680",
    "end": "168489"
  },
  {
    "text": "back to the AWS SSO user portal note",
    "start": "168489",
    "end": "170739"
  },
  {
    "text": "that Jamie's AWS SSO admin also set her",
    "start": "170739",
    "end": "173380"
  },
  {
    "text": "up to use some other third-party",
    "start": "173380",
    "end": "174730"
  },
  {
    "text": "applications including J frog",
    "start": "174730",
    "end": "176340"
  },
  {
    "text": "GoToMeeting slack and others from here",
    "start": "176340",
    "end": "179709"
  },
  {
    "text": "Jamie opens data dog and again data dog",
    "start": "179709",
    "end": "182530"
  },
  {
    "text": "authenticates jamie using sam'l - AWS",
    "start": "182530",
    "end": "185560"
  },
  {
    "text": "SSO which verifies Jamie against Azure",
    "start": "185560",
    "end": "187870"
  },
  {
    "text": "ad with data dog open you'll notice in",
    "start": "187870",
    "end": "192220"
  },
  {
    "text": "the lower left corner that it is Jay",
    "start": "192220",
    "end": "193780"
  },
  {
    "text": "Jenkins that is accessing data dog Jamie",
    "start": "193780",
    "end": "196270"
  },
  {
    "start": "196000",
    "end": "352000"
  },
  {
    "text": "didn't have to sign in separately and",
    "start": "196270",
    "end": "197799"
  },
  {
    "text": "the data dog access came from the AWS",
    "start": "197799",
    "end": "200019"
  },
  {
    "text": "SSO user portal this is a very seamless",
    "start": "200019",
    "end": "203170"
  },
  {
    "text": "and simple experience for the end user",
    "start": "203170",
    "end": "205060"
  },
  {
    "text": "let's take a look at how Jamie's",
    "start": "205060",
    "end": "206830"
  },
  {
    "text": "administrator set this up I'm signing in",
    "start": "206830",
    "end": "209320"
  },
  {
    "text": "to the AWS management console directly",
    "start": "209320",
    "end": "211239"
  },
  {
    "text": "using the AWS admin credentials to get",
    "start": "211239",
    "end": "213519"
  },
  {
    "text": "into the AWS SSO console this is how I",
    "start": "213519",
    "end": "216489"
  },
  {
    "text": "would bootstrap the sam'l configuration",
    "start": "216489",
    "end": "217750"
  },
  {
    "text": "after which I could sign in to manage",
    "start": "217750",
    "end": "220750"
  },
  {
    "text": "AWS SSO using an azure ad identity I",
    "start": "220750",
    "end": "223709"
  },
  {
    "text": "select the AWS SSO console then I select",
    "start": "223709",
    "end": "227320"
  },
  {
    "text": "settings here you can see a new identity",
    "start": "227320",
    "end": "229810"
  },
  {
    "text": "source setting that shows I'm using an",
    "start": "229810",
    "end": "231880"
  },
  {
    "text": "external identity provider if I select",
    "start": "231880",
    "end": "234670"
  },
  {
    "text": "change I could choose to manage",
    "start": "234670",
    "end": "236470"
  },
  {
    "text": "identities in AWS SSO or use Active",
    "start": "236470",
    "end": "239590"
  },
  {
    "text": "Directory identities and now I have the",
    "start": "239590",
    "end": "241660"
  },
  {
    "text": "option to use an external sam'l identity",
    "start": "241660",
    "end": "243310"
  },
  {
    "text": "provider if this was my initial",
    "start": "243310",
    "end": "245799"
  },
  {
    "text": "configuration the lower section is where",
    "start": "245799",
    "end": "247900"
  },
  {
    "text": "I would get and set sam'l metadata",
    "start": "247900",
    "end": "249940"
  },
  {
    "text": "between AWS SSO and the IDP backing out",
    "start": "249940",
    "end": "253870"
  },
  {
    "text": "to the settings page you see that I have",
    "start": "253870",
    "end": "255760"
  },
  {
    "text": "to setup authentication via the open",
    "start": "255760",
    "end": "257769"
  },
  {
    "text": "sam'l standard here I can select view",
    "start": "257769",
    "end": "261729"
  },
  {
    "text": "details to see and modify the sam'l",
    "start": "261729",
    "end": "263650"
  },
  {
    "text": "configuration for AWS SSO and the",
    "start": "263650",
    "end": "266260"
  },
  {
    "text": "identity provider",
    "start": "266260",
    "end": "267220"
  },
  {
    "text": "going back to settings again you can see",
    "start": "267220",
    "end": "269770"
  },
  {
    "text": "provisioning is done via the open",
    "start": "269770",
    "end": "271330"
  },
  {
    "text": "standard skin protocol selecting view",
    "start": "271330",
    "end": "274030"
  },
  {
    "text": "details you see the skin endpoint URL",
    "start": "274030",
    "end": "276160"
  },
  {
    "text": "and the bearer token that I provide to",
    "start": "276160",
    "end": "278110"
  },
  {
    "text": "Azure ad this enables azure ad to",
    "start": "278110",
    "end": "281050"
  },
  {
    "text": "automatically provision information into",
    "start": "281050",
    "end": "283300"
  },
  {
    "text": "AWS SSO so that a to W SSO knows about",
    "start": "283300",
    "end": "286720"
  },
  {
    "text": "azure ad users and groups",
    "start": "286720",
    "end": "288460"
  },
  {
    "text": "this enables a W SSO to configure access",
    "start": "288460",
    "end": "291340"
  },
  {
    "text": "to AWS accounts roles and third-party",
    "start": "291340",
    "end": "293650"
  },
  {
    "text": "applications before users sign in not",
    "start": "293650",
    "end": "296950"
  },
  {
    "text": "shown in this demo I used as your ad to",
    "start": "296950",
    "end": "299290"
  },
  {
    "text": "setup the AWS SSO user portal as an on",
    "start": "299290",
    "end": "302050"
  },
  {
    "text": "gallery application configured the sam'l",
    "start": "302050",
    "end": "304510"
  },
  {
    "text": "and skim settings and then granted a",
    "start": "304510",
    "end": "306430"
  },
  {
    "text": "subset of my azure ad users and groups",
    "start": "306430",
    "end": "308590"
  },
  {
    "text": "access to the AWS s so user portal going",
    "start": "308590",
    "end": "312490"
  },
  {
    "text": "to the AWS SSO users tab I can see the",
    "start": "312490",
    "end": "314800"
  },
  {
    "text": "list of users that I configured azure ad",
    "start": "314800",
    "end": "316780"
  },
  {
    "text": "to synchronize into AWS s so these users",
    "start": "316780",
    "end": "320830"
  },
  {
    "text": "credentials are still in Azure ad which",
    "start": "320830",
    "end": "323440"
  },
  {
    "text": "keeps them updated over time importantly",
    "start": "323440",
    "end": "326140"
  },
  {
    "text": "there are no passwords or other",
    "start": "326140",
    "end": "327400"
  },
  {
    "text": "credentials anywhere in AWS these remain",
    "start": "327400",
    "end": "330820"
  },
  {
    "text": "in Azure ad and AWS SSO redirects the",
    "start": "330820",
    "end": "333910"
  },
  {
    "text": "users to Azure ad for authentication",
    "start": "333910",
    "end": "335650"
  },
  {
    "text": "with this single Federation",
    "start": "335650",
    "end": "337690"
  },
  {
    "text": "configuration in place and the users",
    "start": "337690",
    "end": "339760"
  },
  {
    "text": "provisioned I can then use AWS SSO to",
    "start": "339760",
    "end": "342400"
  },
  {
    "text": "grant these azure ad users and groups",
    "start": "342400",
    "end": "344560"
  },
  {
    "text": "access centrally to any of my AWS",
    "start": "344560",
    "end": "347410"
  },
  {
    "text": "accounts and any third-party",
    "start": "347410",
    "end": "349150"
  },
  {
    "text": "applications that I want to control as",
    "start": "349150",
    "end": "350830"
  },
  {
    "text": "an AWS administrator in this video I",
    "start": "350830",
    "end": "354610"
  },
  {
    "start": "352000",
    "end": "387000"
  },
  {
    "text": "just demonstrated the seamless",
    "start": "354610",
    "end": "356200"
  },
  {
    "text": "experience of an end-user signing into",
    "start": "356200",
    "end": "358150"
  },
  {
    "text": "AWS using their existing azure ad",
    "start": "358150",
    "end": "360430"
  },
  {
    "text": "identity and the configuration of AWS",
    "start": "360430",
    "end": "362919"
  },
  {
    "text": "SSO that enables this experience I also",
    "start": "362919",
    "end": "366010"
  },
  {
    "text": "showed how leveraging open standards",
    "start": "366010",
    "end": "367780"
  },
  {
    "text": "allows you to do that if you'd like to",
    "start": "367780",
    "end": "370240"
  },
  {
    "text": "learn more about AWS SSO and give it a",
    "start": "370240",
    "end": "372640"
  },
  {
    "text": "try",
    "start": "372640",
    "end": "373150"
  },
  {
    "text": "you can visit the service page online at",
    "start": "373150",
    "end": "375580"
  },
  {
    "text": "aws.amazon.com whacked single - signed -",
    "start": "375580",
    "end": "379960"
  },
  {
    "text": "on thanks for watching",
    "start": "379960",
    "end": "383789"
  }
]