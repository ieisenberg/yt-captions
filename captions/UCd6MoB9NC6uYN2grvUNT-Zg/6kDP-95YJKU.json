[
  {
    "text": "so my name is Mark Porter and I'm very excited to be here today I am the general manager of Aurora Postgres",
    "start": "30",
    "end": "6270"
  },
  {
    "text": "artiest Postgres the RTS platform which is all that stuff that works across all",
    "start": "6270",
    "end": "11730"
  },
  {
    "text": "the engines in RTS and RTS operations so how many of you know about RDS I love it",
    "start": "11730",
    "end": "18330"
  },
  {
    "text": "how many of you use RDS when it's broken you'll see my email at the end of the",
    "start": "18330",
    "end": "23760"
  },
  {
    "text": "presentation and I mean that we take operations and ownership very seriously at AWS so we operate the largest fleet",
    "start": "23760",
    "end": "30990"
  },
  {
    "text": "of databases in the world and we do it for all of you and we try to do it in the best way possible so today I'm here",
    "start": "30990",
    "end": "38309"
  },
  {
    "text": "with my friend mr. Tatsu Ishii son who is going to tell you about a bunch of",
    "start": "38309",
    "end": "43680"
  },
  {
    "text": "things that he encountered using aurora Postgres and he is president of SRA OSS",
    "start": "43680",
    "end": "49950"
  },
  {
    "text": "which is an open source company based in japan they are a leading provider of Postgres innovations such as power grass",
    "start": "49950",
    "end": "58140"
  },
  {
    "text": "a fork of Postgres that supplies high availability more durable replication built-in encryption and easy to use",
    "start": "58140",
    "end": "64080"
  },
  {
    "text": "installation on both Windows and Linux SRA OSS was founded on the belief that",
    "start": "64080",
    "end": "70110"
  },
  {
    "text": "open-source software is very important and that building innovations on it while maintaining core openness and",
    "start": "70110",
    "end": "76680"
  },
  {
    "text": "compatibility is the right way to go we believe the same thing at Amazon we offer RDS Postgres which is the",
    "start": "76680",
    "end": "83549"
  },
  {
    "text": "absolute community version that you expect we offer ec2 Postgres which were very very excited about and we offer a roar",
    "start": "83549",
    "end": "90509"
  },
  {
    "text": "Postgres which is our own fork so we have kind of compatible cultures here in",
    "start": "90509",
    "end": "95909"
  },
  {
    "text": "additionally I would like to I'm very proud that mr. Ishii song has been a Postgres contributor for 18 years",
    "start": "95909",
    "end": "102390"
  },
  {
    "text": "so mr. Ishii saw yeah good to see there you go I feel the same",
    "start": "102390",
    "end": "107439"
  },
  {
    "text": "so honest I'm gonna start off talking a little bit about Aurora and then we're",
    "start": "107439",
    "end": "112869"
  },
  {
    "text": "gonna go on and issue issues on is going to come up and talk about what he's done with it so we're gonna do an",
    "start": "112869",
    "end": "120369"
  },
  {
    "text": "introduction we're gonna have some performance results we're gonna make a couple fun announcements with a video",
    "start": "120369",
    "end": "126490"
  },
  {
    "text": "and a demo for those of you who are thinking of leaving and then where you do questions clicker got a little bit",
    "start": "126490",
    "end": "136150"
  },
  {
    "text": "ahead of me there so the first off what if you were imagining the database today I have been in databases since 1988 which is a",
    "start": "136150",
    "end": "143950"
  },
  {
    "text": "really long time ago and what if you were to reimagine Codd and dates vision",
    "start": "143950",
    "end": "149290"
  },
  {
    "text": "forty years later you'd break apart the stack you'd build something that can scale out is self-healing and leverages",
    "start": "149290",
    "end": "155950"
  },
  {
    "text": "distributed services and you'd use open source software the world has changed the time for commercial databases and",
    "start": "155950",
    "end": "162400"
  },
  {
    "text": "proprietary api's is over you'd build a service-oriented architecture applied to",
    "start": "162400",
    "end": "169840"
  },
  {
    "text": "the database and the easiest thing that we found to do and we started Aurora seven years ago believe it or not I'm",
    "start": "169840",
    "end": "175599"
  },
  {
    "text": "still dizzy when I say that is moving the logging and the storage layer out to a separate service not only that you",
    "start": "175599",
    "end": "182230"
  },
  {
    "text": "take an SOA architecture point of view and you'd integrate with other services like ec2 like V PC like Dynamo for key",
    "start": "182230",
    "end": "188950"
  },
  {
    "text": "value store and management route 53 etc and then you'd make it a managed service",
    "start": "188950",
    "end": "194590"
  },
  {
    "text": "and if there's one thing I'd love you to take away from this conference this week not just my session AWS is about the",
    "start": "194590",
    "end": "202569"
  },
  {
    "text": "software you write having everything it needs on the other side of an API no",
    "start": "202569",
    "end": "207669"
  },
  {
    "text": "humans involved our job is to teach software as developers to call other software and that's the core power of",
    "start": "207669",
    "end": "214060"
  },
  {
    "text": "AWS and Amazon Aurora is built on that premise so why did we choose Postgres",
    "start": "214060",
    "end": "221919"
  },
  {
    "text": "well there's all these reasons up there and I'm not going to insult you by reading you a slide but it's an",
    "start": "221919",
    "end": "227079"
  },
  {
    "text": "open-source database it's an enthusiastically open-source database and it actually has a higher speed of",
    "start": "227079",
    "end": "233319"
  },
  {
    "text": "innovation than commercial databases now I love my friends at Oracle I worked there for 14 years but the speed of",
    "start": "233319",
    "end": "240100"
  },
  {
    "text": "innovation and the excitement I see on the PG hackers list every day far exceeds that",
    "start": "240100",
    "end": "246190"
  },
  {
    "text": "which I saw at Oracle when I was there the open source community supports a diversity of opinion trying things",
    "start": "246190",
    "end": "253030"
  },
  {
    "text": "failing at things and moving ahead not only that as you can see here Postgres is by far the single most open",
    "start": "253030",
    "end": "261489"
  },
  {
    "text": "source Oracle compatible database out there it's the most Enterprise compatible database and you'll notice at",
    "start": "261489",
    "end": "267100"
  },
  {
    "text": "the bottom it has the highest AWS schema conversion tool rates from Oracle to Postgres of any of the engines so in",
    "start": "267100",
    "end": "275680"
  },
  {
    "text": "about 2011 we started working on Aurora in 2014 we launched Aurora my sequel and",
    "start": "275680",
    "end": "281590"
  },
  {
    "text": "just five weeks ago we launched Aurora Postgres and I am pleased to announce that after five weeks of data have come",
    "start": "281590",
    "end": "287650"
  },
  {
    "text": "in it is the fastest growing database service in AWS history and that's not about me and it's not about revenue it's",
    "start": "287650",
    "end": "293920"
  },
  {
    "text": "not about the size of my service it's about customers taking service and being delighted with it so you can now choose it you can now use",
    "start": "293920",
    "end": "301450"
  },
  {
    "text": "it all you want and we've been working with ishii saw now for something like nine months and he's been an",
    "start": "301450",
    "end": "306970"
  },
  {
    "text": "enthusiastic supporter of the product and now I'd like to hand over the podium for him to tell you about his use of it",
    "start": "306970",
    "end": "314220"
  },
  {
    "text": "my clicker is no longer working so I will go here there you okay and if I",
    "start": "314220",
    "end": "322780"
  },
  {
    "text": "need to be your clicker I will be Thank You Marc okay and now it's my time I'm",
    "start": "322780",
    "end": "330520"
  },
  {
    "text": "going to talk about performance tests made by my company microwaves",
    "start": "330520",
    "end": "338770"
  },
  {
    "text": "so could you proceed okay here is environment I chose the",
    "start": "338770",
    "end": "354730"
  },
  {
    "text": "architecture of the configuration and now and also I have opposed the",
    "start": "354730",
    "end": "362620"
  },
  {
    "text": "comparison each has exactly the same CPU spec in DB r3",
    "start": "362620",
    "end": "371430"
  },
  {
    "text": "and also all this has the same and they will have badger city started killed and",
    "start": "371699",
    "end": "379919"
  },
  {
    "text": "we also have a two hundred forty four gigabytes memory and our this is same as",
    "start": "379919",
    "end": "385520"
  },
  {
    "text": "and we have each configuration to",
    "start": "385520",
    "end": "391409"
  },
  {
    "text": "availability zones one availability zone one for lighter and two is for reader",
    "start": "391409",
    "end": "401000"
  },
  {
    "text": "something you can be seeing and you can see our release master and replica I",
    "start": "401000",
    "end": "409139"
  },
  {
    "text": "know in this case backup and radar and we configured this as a stone in",
    "start": "409139",
    "end": "416490"
  },
  {
    "text": "replication replica anyway so and this is a machine Sabra which is dedicated",
    "start": "416490",
    "end": "424680"
  },
  {
    "text": "for transaction generator we call it PG bench maybe all of you are already",
    "start": "424680",
    "end": "433199"
  },
  {
    "text": "familiar with this machine has a larger number of batch of CPUs and also",
    "start": "433199",
    "end": "441289"
  },
  {
    "text": "appropriate a number of amount of the memory not to saturate transaction",
    "start": "441289",
    "end": "448339"
  },
  {
    "text": "generator load by the way PG paint is a standard benchmarking - I'm coming with",
    "start": "448339",
    "end": "456690"
  },
  {
    "text": "the standard Postgres reputation and I mean by the way I am the original also I",
    "start": "456690",
    "end": "463800"
  },
  {
    "text": "was a small tool anyway the intention of",
    "start": "463800",
    "end": "469949"
  },
  {
    "text": "the configuration is of course we needed to test Amazon aura but to make apple to",
    "start": "469949",
    "end": "479189"
  },
  {
    "text": "Apple comparison I could set up the configuration with same statistic as",
    "start": "479189",
    "end": "488550"
  },
  {
    "text": "well as I will provision 10,000 this",
    "start": "488550",
    "end": "493560"
  },
  {
    "text": "number is coming from from the",
    "start": "493560",
    "end": "499319"
  },
  {
    "text": "not purely technical reason but rather than cost we want to compare",
    "start": "499319",
    "end": "505990"
  },
  {
    "text": "the geometry same cost configuration is Alaura and our days and at a time a post",
    "start": "505990",
    "end": "514630"
  },
  {
    "text": "with 9.62 is the version they are same",
    "start": "514630",
    "end": "522909"
  },
  {
    "text": "on the most complication next prize piece as as I said and so the",
    "start": "522910",
    "end": "531720"
  },
  {
    "text": "benchmarking is performed by using treatment we employ concurrent users 250",
    "start": "531720",
    "end": "543120"
  },
  {
    "text": "500 celebrity and hence 1000 and each a",
    "start": "543120",
    "end": "550870"
  },
  {
    "text": "concurrent number of connections we perform loading data creating index",
    "start": "550870",
    "end": "559320"
  },
  {
    "text": "executing vacuum for each test this is because we needed not to remember the",
    "start": "559320",
    "end": "565780"
  },
  {
    "text": "previous tests memorized by the tester and the database i trace 30 gigabytes",
    "start": "565780",
    "end": "575250"
  },
  {
    "text": "and in the configuration the rajah suitable in the largest table there are",
    "start": "575250",
    "end": "582540"
  },
  {
    "text": "200 millions of rows and as you can see",
    "start": "582540",
    "end": "592410"
  },
  {
    "text": "okay here this is the loading phase of the PG bench call - I means initialize",
    "start": "593820",
    "end": "603910"
  },
  {
    "text": "the database and this one is actual transaction generation we are progress",
    "start": "603910",
    "end": "612540"
  },
  {
    "text": "equal 1 this is needed to take each",
    "start": "612540",
    "end": "618150"
  },
  {
    "text": "response time for each transaction and which is protocol or prepared this means",
    "start": "618150",
    "end": "623770"
  },
  {
    "text": "that we use",
    "start": "623770",
    "end": "627600"
  },
  {
    "text": "we use extended Kure which is very popular in these days and - large T 3600",
    "start": "630490",
    "end": "659750"
  },
  {
    "text": "means that the transaction we keep on for such 3600 seconds and also we have -",
    "start": "659750",
    "end": "672500"
  },
  {
    "text": "Agyei option which involves reading okay",
    "start": "672500",
    "end": "678410"
  },
  {
    "text": "next slide please first graph is for loading data I'm",
    "start": "678410",
    "end": "686449"
  },
  {
    "text": "going to explain the light most bar in the bar all the bar lead one is RDS and",
    "start": "686449",
    "end": "694399"
  },
  {
    "text": "the blue one is Aurora and y-axis is Arab scarf so of course",
    "start": "694399",
    "end": "703190"
  },
  {
    "text": "shota is spirit in the total time elapsed time our DS takes three times",
    "start": "703190",
    "end": "711050"
  },
  {
    "text": "longer than over and and the next we are",
    "start": "711050",
    "end": "717050"
  },
  {
    "text": "going to look through the each face of rodent data actually this one is",
    "start": "717050",
    "end": "724040"
  },
  {
    "text": "consists of copy vacuumed and indexing",
    "start": "724040",
    "end": "730029"
  },
  {
    "text": "look at right leftmost graph this is a copy this paja was basically a",
    "start": "730029",
    "end": "736760"
  },
  {
    "text": "transmission of data into the table in this case Ora is action are actually",
    "start": "736760",
    "end": "744350"
  },
  {
    "text": "balanced at double speed the reason why",
    "start": "744350",
    "end": "749779"
  },
  {
    "text": "this is just that two times faster than",
    "start": "749779",
    "end": "755269"
  },
  {
    "text": "RDS is that the nature of the copy protocol requires",
    "start": "755269",
    "end": "761180"
  },
  {
    "text": "it's non solution for each load so the network overhead is possible in this",
    "start": "761180",
    "end": "768950"
  },
  {
    "text": "case and the bottom you can see extreme",
    "start": "768950",
    "end": "774760"
  },
  {
    "text": "good result for Allah you can see the",
    "start": "774760",
    "end": "780350"
  },
  {
    "text": "reasons of why is this is vacuum is just only one scale command but learns many",
    "start": "780350",
    "end": "787760"
  },
  {
    "text": "many i/o insides of Saba that's why we get a very good desire from this and in",
    "start": "787760",
    "end": "795140"
  },
  {
    "text": "Dixon is is not very good or because it's it's like more CPU mutation in",
    "start": "795140",
    "end": "804140"
  },
  {
    "text": "tested a load x-ray please here is the",
    "start": "804140",
    "end": "810620"
  },
  {
    "text": "after the loading phase we runs transaction Lord we don't return load",
    "start": "810620",
    "end": "818570"
  },
  {
    "text": "the y-axis is a transaction per second that means higher is durable and x-axis",
    "start": "818570",
    "end": "825740"
  },
  {
    "text": "is the number of concurrent two transactions we can see the right Aurora",
    "start": "825740",
    "end": "831740"
  },
  {
    "text": "is getting better and better with increasing option concretely another",
    "start": "831740",
    "end": "837680"
  },
  {
    "text": "transaction until we reach our unit it's about 750 on the other hand are these",
    "start": "837680",
    "end": "845770"
  },
  {
    "text": "degrees keep on decreasing performance with larger concurrent recent",
    "start": "845770",
    "end": "853070"
  },
  {
    "text": "transactions so we we can conclude that our Aurora is better than our DS from",
    "start": "853070",
    "end": "862420"
  },
  {
    "text": "1.7 times - three times okay",
    "start": "862420",
    "end": "868389"
  },
  {
    "text": "this graph is somewhat interesting this is a summary sorry details of the wait",
    "start": "870100",
    "end": "879740"
  },
  {
    "text": "time this was time for each system or as you can see very very low wait time",
    "start": "879740",
    "end": "887930"
  },
  {
    "text": "while continuously keeping a stable state on the other hand",
    "start": "887930",
    "end": "895899"
  },
  {
    "text": "are they yes you can see a large number of non appeals that means the wait time",
    "start": "895899",
    "end": "905860"
  },
  {
    "text": "is not so stable and if we look at this",
    "start": "905860",
    "end": "911680"
  },
  {
    "text": "point as you can see for each transaction there are a variation of",
    "start": "911680",
    "end": "916980"
  },
  {
    "text": "response time and this also indicates that the response time or this is not so",
    "start": "916980",
    "end": "924399"
  },
  {
    "text": "stable a next time please this is the",
    "start": "924399",
    "end": "929560"
  },
  {
    "text": "conclusion all right if much more stable general ideas okay here is another data",
    "start": "929560",
    "end": "940360"
  },
  {
    "text": "of the benchmarking the website shows the Orioles CPU utilization please note",
    "start": "940360",
    "end": "948670"
  },
  {
    "text": "that the y axis is different from always y r-d is his body",
    "start": "948670",
    "end": "957430"
  },
  {
    "text": "so actually Ora is very good at a consumer CPS that means there's zero",
    "start": "957430",
    "end": "966930"
  },
  {
    "text": "there will be less looking overhead in",
    "start": "966930",
    "end": "972130"
  },
  {
    "text": "Aurora I think we can expect a detailed",
    "start": "972130",
    "end": "978399"
  },
  {
    "text": "explanation later on my mark okay okay next this is the IOPS your left Sun and",
    "start": "978399",
    "end": "994269"
  },
  {
    "text": "the y axis it's a little bit different form this one is different",
    "start": "994269",
    "end": "1008339"
  },
  {
    "text": "anyway Aurora consuming consumes lower",
    "start": "1008339",
    "end": "1015740"
  },
  {
    "text": "IOPS jeong RDS this means that this does",
    "start": "1015740",
    "end": "1021569"
  },
  {
    "text": "not mean or it's not good at i/o but has very",
    "start": "1021569",
    "end": "1027308"
  },
  {
    "text": "different architecture for accessing iOS okay I think this is very important for",
    "start": "1027309",
    "end": "1037740"
  },
  {
    "text": "production in production this is a comparison of replication lag delay",
    "start": "1037740",
    "end": "1044678"
  },
  {
    "text": "between writer and the reader the you can see left hand side or as the first",
    "start": "1044679",
    "end": "1055840"
  },
  {
    "text": "time starting that benchmarking the latency is high of course it radically",
    "start": "1055840",
    "end": "1066070"
  },
  {
    "text": "decrease in his account latency and then keep on the roll rate a/c until the end",
    "start": "1066070",
    "end": "1071530"
  },
  {
    "text": "of the transaction about the under forty",
    "start": "1071530",
    "end": "1076929"
  },
  {
    "text": "milliseconds they roll on the other hand are these keep on increasing the latency",
    "start": "1076929",
    "end": "1084370"
  },
  {
    "text": "and never leads to the consistent state that means the particular load of the",
    "start": "1084370",
    "end": "1093790"
  },
  {
    "text": "transaction it's too high for our DS in this case okay next slide please",
    "start": "1093790",
    "end": "1103230"
  },
  {
    "text": "finally I'm going to give a show summary of the benchmarking in Somali I can say",
    "start": "1103650",
    "end": "1113169"
  },
  {
    "text": "that all is a little is faster than RDS this is very good news for puskás users",
    "start": "1113169",
    "end": "1120549"
  },
  {
    "text": "I think because for my long experience with process web development I know that",
    "start": "1120549",
    "end": "1128169"
  },
  {
    "text": "increase increasing the writing speed is",
    "start": "1128169",
    "end": "1134200"
  },
  {
    "text": "very very difficult in the relational databases system so I was really",
    "start": "1134200",
    "end": "1142660"
  },
  {
    "text": "surprised by the number after finishing our benchmarking and also circuit is",
    "start": "1142660",
    "end": "1151090"
  },
  {
    "text": "certain spyridon RDS and this is a very very important we got",
    "start": "1151090",
    "end": "1158220"
  },
  {
    "text": "very stable response time during the benchmarking with Aurora and I I need to",
    "start": "1158220",
    "end": "1171450"
  },
  {
    "text": "talk of as the tendency with increasing",
    "start": "1171450",
    "end": "1177799"
  },
  {
    "text": "concurrent transactions all right it's very good at handling large number of",
    "start": "1177799",
    "end": "1185399"
  },
  {
    "text": "the concurrent transactions and the finally I I have to say that Allah is",
    "start": "1185399",
    "end": "1193830"
  },
  {
    "text": "very good at decreasing the replication delay lag this is very important in the",
    "start": "1193830",
    "end": "1200850"
  },
  {
    "text": "production system so also in overall I got very satisfied impression with",
    "start": "1200850",
    "end": "1207840"
  },
  {
    "text": "Aurora thank you",
    "start": "1207840",
    "end": "1211789"
  },
  {
    "text": "my clicker is back so there's some big questions that come out of that first",
    "start": "1215680",
    "end": "1222200"
  },
  {
    "text": "off you know how real are those numbers well she saw Han is one of the Postgres committers ran these numbers for months",
    "start": "1222200",
    "end": "1228890"
  },
  {
    "text": "and kept getting consistent results there's a presentation at this session where we're giving a war Postgres",
    "start": "1228890",
    "end": "1234560"
  },
  {
    "text": "numbers and you'll notice those numbers are lower than the numbers that Ichi saw and just shared with you I can tell you",
    "start": "1234560",
    "end": "1241190"
  },
  {
    "text": "why when we run benchmarks for publishing at a conference like this I take the absolute worst numbers that are",
    "start": "1241190",
    "end": "1247370"
  },
  {
    "text": "opposed to our skits and the absolute best numbers that RTS Postgres gets and that's the multiples you'll see on our",
    "start": "1247370",
    "end": "1253730"
  },
  {
    "text": "slides at the same time you know these are awesome numbers and we're really",
    "start": "1253730",
    "end": "1258860"
  },
  {
    "text": "happy with EC song for running them so now the question is can you get this kind of performance how do you get this",
    "start": "1258860",
    "end": "1265490"
  },
  {
    "text": "kind of performance and can you get it while getting high durability and availability so let's first talk a",
    "start": "1265490",
    "end": "1271490"
  },
  {
    "text": "little bit about performance how do we achieve high performance well",
    "start": "1271490",
    "end": "1276590"
  },
  {
    "text": "fundamentally the best way to achieve high performance in computers is to do nothing and say you're done and so that",
    "start": "1276590",
    "end": "1282680"
  },
  {
    "text": "means do less work minimize network packets offload the database engine that",
    "start": "1282680",
    "end": "1288530"
  },
  {
    "text": "was one of the things that he she saw and showed about the database engine actually running less instructions / PG",
    "start": "1288530",
    "end": "1295250"
  },
  {
    "text": "vents transaction than RDS Postgres did the actual CPU was higher but if you did",
    "start": "1295250",
    "end": "1301400"
  },
  {
    "text": "cpu per transaction it was significantly lower next databases are all about i/o",
    "start": "1301400",
    "end": "1307070"
  },
  {
    "text": "so optimized i/o and I'll get into that in a bit next make sure that you do things",
    "start": "1307070",
    "end": "1312530"
  },
  {
    "text": "asynchronously in every single way so how does I Oh happen in an Amazon or a",
    "start": "1312530",
    "end": "1319640"
  },
  {
    "text": "database node well the storage system is that separate storage system I told you about it's actually spread across three",
    "start": "1319640",
    "end": "1326450"
  },
  {
    "text": "AZ's with six copies and it writes to all six copies now you may say to me oh",
    "start": "1326450",
    "end": "1332330"
  },
  {
    "text": "my god mark that's six times the writes but there are no blocks written from Aurora Postgres none of those 8k data",
    "start": "1332330",
    "end": "1339380"
  },
  {
    "text": "blocks are written at all what might be written are 100 by 8 or 40 by 8 or 250",
    "start": "1339380",
    "end": "1344690"
  },
  {
    "text": "byte sing all records the storage system takes care and is absolutely aware of exactly",
    "start": "1344690",
    "end": "1351200"
  },
  {
    "text": "how Postgres works and applies those log records to the blocks on the database system on the storage system so there's",
    "start": "1351200",
    "end": "1359540"
  },
  {
    "text": "9x less network traffic on most of the workloads we've looked at to tell you the truth this is another Amazon",
    "start": "1359540",
    "end": "1364970"
  },
  {
    "text": "conservative number it's actually better than that on many of our customer workloads so one of the things that you",
    "start": "1364970",
    "end": "1373400"
  },
  {
    "text": "saw and talked about was read replicas why do they have higher reliability lower lag etc well the reason is because",
    "start": "1373400",
    "end": "1382190"
  },
  {
    "text": "in Postgres on the left you'll see that we do you know normal wall apply we",
    "start": "1382190",
    "end": "1387410"
  },
  {
    "text": "stream the data over it gets applied so if there's a wall record that needs to be applied it actually has to go read",
    "start": "1387410",
    "end": "1393200"
  },
  {
    "text": "the block from disk it has to apply the wall record it has to do all the checkpoints in many ways the replicas in",
    "start": "1393200",
    "end": "1399380"
  },
  {
    "text": "Postgres is doing exactly the same work for all rights as the master obviously it's doing different reads or why do you",
    "start": "1399380",
    "end": "1405830"
  },
  {
    "text": "have it in a Loris scaling system because their shared storage you'll",
    "start": "1405830",
    "end": "1411290"
  },
  {
    "text": "notice that the aurora master is doing fundamentally the same thing but the",
    "start": "1411290",
    "end": "1416320"
  },
  {
    "text": "replicas isn't the replicas is getting the page cache updates coming across and",
    "start": "1416320",
    "end": "1421670"
  },
  {
    "text": "when it finds a page cache update for a block that has not been modified on the replicas it tosses it away it doesn't do",
    "start": "1421670",
    "end": "1427610"
  },
  {
    "text": "anything with it it doesn't care that's the vast majority of Rights that come across which means",
    "start": "1427610",
    "end": "1433970"
  },
  {
    "text": "that that Aurora replicas can actually process many many more reads for you and be more efficient in addition the second",
    "start": "1433970",
    "end": "1441890"
  },
  {
    "text": "really fun part about it is that because that page cache update is a very simple protocol that's how we get to sub 20",
    "start": "1441890",
    "end": "1448700"
  },
  {
    "text": "millisecond lag times and an averaging around 10 to 12 millisecond lag times",
    "start": "1448700",
    "end": "1453740"
  },
  {
    "text": "between Aurora masters in Aurora replicas and I'll point out that that lag time stays almost consistent even",
    "start": "1453740",
    "end": "1460160"
  },
  {
    "text": "with up to 15 replicas it might go up to like 30 40 milliseconds even with 15",
    "start": "1460160",
    "end": "1465260"
  },
  {
    "text": "read replicas running at the same time so what's the core of the innovation the",
    "start": "1465260",
    "end": "1471050"
  },
  {
    "text": "core of the innovation was parceling out storage system into a set No and as a database guy do you know",
    "start": "1471050",
    "end": "1477560"
  },
  {
    "text": "what I want I want my database to just keep doing transactions so one of the",
    "start": "1477560",
    "end": "1482900"
  },
  {
    "text": "ways we keep doing transactions quickly is it the only thing which the head node waits for is items 1 & 2 on this sheet",
    "start": "1482900",
    "end": "1489560"
  },
  {
    "text": "it only weights for the redo log to come in and be persisted to SSD that's it all",
    "start": "1489560",
    "end": "1495950"
  },
  {
    "text": "the other things you see going on in the storage node happen completely asynchronously and take no cpu time from",
    "start": "1495950",
    "end": "1502340"
  },
  {
    "text": "the head node ie your database node which includes identifying gaps in the law gossiping with peers to fill in",
    "start": "1502340",
    "end": "1509150"
  },
  {
    "text": "holes for durability coalescing into data blocks because data blocks do exist",
    "start": "1509150",
    "end": "1514280"
  },
  {
    "text": "in Aurora they just exist out on the storage system garbage collecting old versions running 24/7 see Archie checks",
    "start": "1514280",
    "end": "1521240"
  },
  {
    "text": "and validation checks on the system these are all done with leftover CPU time and there's another thing happening",
    "start": "1521240",
    "end": "1527720"
  },
  {
    "text": "in the storage system all backups are done from the storage system there is no backup that occurs on the head node",
    "start": "1527720",
    "end": "1534170"
  },
  {
    "text": "which means that your head node wait for it just keeps doing transactions so now",
    "start": "1534170",
    "end": "1541760"
  },
  {
    "text": "now that you've done all this how do we keep it durable and available I've talked a little bit about it being",
    "start": "1541760",
    "end": "1547310"
  },
  {
    "text": "replicated six times across three availability zones the data is backed up as it comes in directly to s3 it's",
    "start": "1547310",
    "end": "1555890"
  },
  {
    "text": "backed up into ten gigabytes segments for repair and they're just going to talk about why we chose ten I won't get into that now it was a pretty careful",
    "start": "1555890",
    "end": "1563090"
  },
  {
    "text": "balance we chose it has to do with network i/o speeds and mean time to repair and all those it actually has",
    "start": "1563090",
    "end": "1569660"
  },
  {
    "text": "something pretty cool I'll get into in the next slide which is it uses a core on a system for reads and writes and",
    "start": "1569660",
    "end": "1575320"
  },
  {
    "text": "again when the core membership changes it doesn't stall reads or writes and",
    "start": "1575320",
    "end": "1580880"
  },
  {
    "text": "I'll get into that and it supports up to 64 terabytes so this is just a quick",
    "start": "1580880",
    "end": "1587300"
  },
  {
    "text": "slide that shows the the architecture again you can have a primary database node you can have read replicas in your",
    "start": "1587300",
    "end": "1594080"
  },
  {
    "text": "own AZ that's fine you can have them in other AZ's if you want up to 15 of them and all those blocks are scattered",
    "start": "1594080",
    "end": "1600590"
  },
  {
    "text": "across all those availability zones well the reality of the world is things break",
    "start": "1600590",
    "end": "1606220"
  },
  {
    "text": "and at the scale we run AWS no matter how hard we try things break pretty regularly while I'm standing here",
    "start": "1606220",
    "end": "1614270"
  },
  {
    "text": "running RDS and giving this presentation we've had nodes failover in the fleet and my phone has not gone off and that's",
    "start": "1614270",
    "end": "1620720"
  },
  {
    "text": "important I get paged when a failover fails so what can happen",
    "start": "1620720",
    "end": "1625750"
  },
  {
    "text": "you could lose a disk that's the little baby X's you could lose a node that's an",
    "start": "1625750",
    "end": "1630890"
  },
  {
    "text": "entire machine or god forbid you could lose an entire rasie we've never done that but it could happen when the head",
    "start": "1630890",
    "end": "1638750"
  },
  {
    "text": "node does its rights it only waits for four of the six to come back and then it",
    "start": "1638750",
    "end": "1644540"
  },
  {
    "text": "tells the head node it's good you can go ahead with your transaction two key features number one you can actually",
    "start": "1644540",
    "end": "1651320"
  },
  {
    "text": "lose all those things I talked about and when they come back the system will go and repair itself all those errors you",
    "start": "1651320",
    "end": "1657410"
  },
  {
    "text": "see between the purple boxes are the system repairing itself if it missed a read or a fitness to write or if let's",
    "start": "1657410",
    "end": "1663710"
  },
  {
    "text": "say an AZ went away for 10 minutes next what is the single largest cause of",
    "start": "1663710",
    "end": "1670750"
  },
  {
    "text": "performance problems on databases that can be attributed to hardware it's actually jitter applications perform",
    "start": "1670750",
    "end": "1679400"
  },
  {
    "text": "very poorly in the face of jitter they get all queued up they start asking for more connections they ran out of memory",
    "start": "1679400",
    "end": "1685429"
  },
  {
    "text": "they do all sorts of stupid stuff well if you take away 6 writes and you take",
    "start": "1685429",
    "end": "1691340"
  },
  {
    "text": "away the sixth one which is the slowest one and you take away the fifth one which is the second slowest one jitter",
    "start": "1691340",
    "end": "1696380"
  },
  {
    "text": "on RDS Postgres sorry on Aurora Postgres is thirteen point six standard",
    "start": "1696380",
    "end": "1701390"
  },
  {
    "text": "deviations less than jitter on RDS Postgres our community Postgres and we have data that backs that up in another",
    "start": "1701390",
    "end": "1707240"
  },
  {
    "text": "presentation here's another way of looking at replicas the replicas can be",
    "start": "1707240",
    "end": "1713179"
  },
  {
    "text": "across AZ's they can even be in your own AZ and they automatically are promoted to the master you don't have to do",
    "start": "1713179",
    "end": "1718940"
  },
  {
    "text": "anything they're promoted to the master the DNS end point is moved over because",
    "start": "1718940",
    "end": "1725360"
  },
  {
    "text": "we own the database engine we actually have been able to make changes in the database engine and in the in the RDS",
    "start": "1725360",
    "end": "1733010"
  },
  {
    "text": "control plane that actually means that our failover times are about half as long as yes Postgres and we're working very hard",
    "start": "1733010",
    "end": "1741309"
  },
  {
    "text": "to make them less in fact in Aurora my sequel our sister product they have regular fail overs that take less than",
    "start": "1741309",
    "end": "1747549"
  },
  {
    "text": "10 seconds and if I was writing a commercial database multi-node product potentially called rack which I did I",
    "start": "1747549",
    "end": "1754360"
  },
  {
    "text": "was one of the architects on rack customers have told me for 30 years if you can get fail overs to less than 10",
    "start": "1754360",
    "end": "1760179"
  },
  {
    "text": "seconds I pretty much don't need rack now we're not there yet but that's what we're working on",
    "start": "1760179",
    "end": "1766440"
  },
  {
    "text": "so now I'd like to hand it back to a she's on to talk about PG pool thank you",
    "start": "1766440",
    "end": "1777039"
  },
  {
    "text": "oh now I'm going to talk about the PG pool to which is maybe new for most of",
    "start": "1777039",
    "end": "1786519"
  },
  {
    "text": "us the audiences is there anybody know about PG puto Wow amazing thank you very",
    "start": "1786519",
    "end": "1795399"
  },
  {
    "text": "much",
    "start": "1795399",
    "end": "1797549"
  },
  {
    "text": "for those of you are not familiar with specific to I'm going to give a brief",
    "start": "1800549",
    "end": "1806700"
  },
  {
    "text": "architecture of people - we have cry and of course our soul so maybe your slide",
    "start": "1806700",
    "end": "1815409"
  },
  {
    "text": "again oh sorry yes here and also we have",
    "start": "1815409",
    "end": "1830789"
  },
  {
    "text": "database like si and in between them we",
    "start": "1830789",
    "end": "1835809"
  },
  {
    "text": "have a PG pool - so people - is kind of a proxy between database cry intended",
    "start": "1835809",
    "end": "1841779"
  },
  {
    "text": "the database servers this architecture can be also applied to or I thought so I",
    "start": "1841779",
    "end": "1850200"
  },
  {
    "text": "made on expect an experiment I did some experimenting the test with or across",
    "start": "1850200",
    "end": "1858429"
  },
  {
    "text": "people - anyway in this case a people",
    "start": "1858429",
    "end": "1863769"
  },
  {
    "text": "will behave like query dispatcher I mean light query must",
    "start": "1863769",
    "end": "1872880"
  },
  {
    "text": "go to the writer who I read a clear it can be duty to either lighter or leader",
    "start": "1872880",
    "end": "1881000"
  },
  {
    "text": "this is this is kind of load balancing",
    "start": "1881000",
    "end": "1886340"
  },
  {
    "text": "so in this case there are two medical database users one is they don't need to",
    "start": "1886340",
    "end": "1897240"
  },
  {
    "text": "care about the distinction between light fury and leader queries and the next one",
    "start": "1897240",
    "end": "1904200"
  },
  {
    "text": "is a load balancing if they are not",
    "start": "1904200",
    "end": "1909600"
  },
  {
    "text": "satisfied with data query performance they can they could add reader replicas",
    "start": "1909600",
    "end": "1916920"
  },
  {
    "text": "as much as possible to get a higher performance and at the time we are",
    "start": "1916920",
    "end": "1925410"
  },
  {
    "text": "giving we are doing the test we also in",
    "start": "1925410",
    "end": "1932640"
  },
  {
    "text": "the face of developing a new approach of people to and I decided to make the new",
    "start": "1932640",
    "end": "1940920"
  },
  {
    "text": "about not be feasible to deal with aura",
    "start": "1940920",
    "end": "1948200"
  },
  {
    "text": "so I'm going to announce that new at pajama PG 23.7 is available or this",
    "start": "1948200",
    "end": "1956970"
  },
  {
    "text": "month actually that was 22nd we have we",
    "start": "1956970",
    "end": "1966030"
  },
  {
    "text": "can do by Elizabeth 3.7 with Paul Rudd",
    "start": "1966030",
    "end": "1971780"
  },
  {
    "text": "including automatic distribution of Fury's like I said and we also did we",
    "start": "1971780",
    "end": "1982500"
  },
  {
    "text": "could deal with aura by doing some configurations we also include details",
    "start": "1982500",
    "end": "1990300"
  },
  {
    "text": "step how to set up people to for in the documentation and at the usual",
    "start": "1990300",
    "end": "1997270"
  },
  {
    "text": "pitiful to come provide functionality such as connection pooling and query",
    "start": "1997270",
    "end": "2004500"
  },
  {
    "text": "caching for aura as well so please enjoy PGP to Andorra with a newer version of",
    "start": "2004500",
    "end": "2012630"
  },
  {
    "text": "PGP - thank you",
    "start": "2012630",
    "end": "2017480"
  },
  {
    "text": "we're very very excited about PG pool - we're excited about the support for aurora obviously it already supports RDS",
    "start": "2020390",
    "end": "2027900"
  },
  {
    "text": "Postgres and ec2 Postgres if you choose to do that and I'd love to see more hands up next year so now I'm going to",
    "start": "2027900",
    "end": "2036090"
  },
  {
    "text": "talk about performance insights so for all of you who raised her hands for RDS",
    "start": "2036090",
    "end": "2041490"
  },
  {
    "text": "if you've used it before 2016 it was hard to see what was going on inside RDS",
    "start": "2041490",
    "end": "2047010"
  },
  {
    "text": "so we released enhanced monitoring enhanced monitoring let you see on the console or through the API 53 OS",
    "start": "2047010",
    "end": "2054179"
  },
  {
    "text": "statistics such as the things you'd see in top vmstat io stat etc down to",
    "start": "2054180",
    "end": "2059700"
  },
  {
    "text": "granularity of one second and you could actually look at them back in time something you can't do with vmstat and",
    "start": "2059700",
    "end": "2064860"
  },
  {
    "text": "io stat so you could for example determine that something went wrong three hours ago and see what it was",
    "start": "2064860",
    "end": "2070610"
  },
  {
    "text": "well customers loved that but then what they wanted to do was they wanted to see inside their databases so now we're",
    "start": "2070610",
    "end": "2078780"
  },
  {
    "text": "offering performance insights and this went in to preview on October 24th at the same time Aurora Postgres went into",
    "start": "2078780",
    "end": "2085710"
  },
  {
    "text": "GA so this was the enhanced monitoring I told you about and performance insights",
    "start": "2085710",
    "end": "2093179"
  },
  {
    "text": "basically is trying to help you understand in a gooey way out on your",
    "start": "2093180",
    "end": "2098850"
  },
  {
    "text": "screen what's going on inside your database and we're gonna release it over the next year next six months rather",
    "start": "2098850",
    "end": "2104670"
  },
  {
    "text": "it's coming out on a roar of Postgres now it's on a roar my sequel real soon",
    "start": "2104670",
    "end": "2109770"
  },
  {
    "text": "now and then it's gonna be on the other databases that RDS supports through the",
    "start": "2109770",
    "end": "2114900"
  },
  {
    "text": "next through the first half of 2018 all RDS databases will support performance",
    "start": "2114900",
    "end": "2120540"
  },
  {
    "text": "insights obviously some of them will support it better than others for example Oracle which has a",
    "start": "2120540",
    "end": "2125670"
  },
  {
    "text": "truly amazing set of statistics that can be got in real time will have a really good support for performance insights so",
    "start": "2125670",
    "end": "2134609"
  },
  {
    "text": "what is database load well if you think about what's loading a database fundamentally there's two things you can",
    "start": "2134609",
    "end": "2140849"
  },
  {
    "text": "have everyone doing work and run out of something or you can have everyone not able to do work and wait for something",
    "start": "2140849",
    "end": "2146849"
  },
  {
    "text": "and so every second we sample what sequel is going on what the state of that process is and what host it's",
    "start": "2146849",
    "end": "2154740"
  },
  {
    "text": "coming from and what user it's logged in from and this is what the dashboard",
    "start": "2154740",
    "end": "2160530"
  },
  {
    "text": "looks like except I don't really like dashboards I'd rather actually give you a video so let me switch here to giving",
    "start": "2160530",
    "end": "2167670"
  },
  {
    "text": "you a video today I'll walk you through",
    "start": "2167670",
    "end": "2175740"
  },
  {
    "text": "how to access performed insights click",
    "start": "2175740",
    "end": "2181650"
  },
  {
    "text": "on instances in the top left what I want to bring your attention to is a new column called current activity in this",
    "start": "2181650",
    "end": "2187950"
  },
  {
    "text": "case we have one database with high load part of that load is in the red state so let's click on that bar and it will take",
    "start": "2187950",
    "end": "2194220"
  },
  {
    "text": "us to the performance incites dashboard in foriegn senseiess dashboard is",
    "start": "2194220",
    "end": "2199349"
  },
  {
    "text": "divided in two parts the top part shows a load on the database over time and the",
    "start": "2199349",
    "end": "2205410"
  },
  {
    "text": "bottom half shows the top sequel ranked by the amount of load they're putting on the database and in this case we can see",
    "start": "2205410",
    "end": "2211950"
  },
  {
    "text": "that some load has spiked up in the past few minutes and it says color yellow now",
    "start": "2211950",
    "end": "2217950"
  },
  {
    "text": "what is yellow we can look at the legend to the right I see yellow is CPU so it looks like we're having CPU starvation",
    "start": "2217950",
    "end": "2224190"
  },
  {
    "text": "now how do I identify the bottleneck well identify the bottleneck by looking at this dashed black line and that",
    "start": "2224190",
    "end": "2230280"
  },
  {
    "text": "represents the number of cores on the machine we can only have as many sessions running on the database as",
    "start": "2230280",
    "end": "2235589"
  },
  {
    "text": "there are cores on the machine and if the load goes above the - black line the number of cores then we know that we're",
    "start": "2235589",
    "end": "2241140"
  },
  {
    "text": "waiting for something now that could be CPU or three other resources such as locks IO commit rights or others now",
    "start": "2241140",
    "end": "2248640"
  },
  {
    "text": "where is that load coming from we can look at the top sequel in the bottom and in this case our load saturation is",
    "start": "2248640",
    "end": "2255240"
  },
  {
    "text": "coming from CPU so we want to find the sequel statements that are consuming the CPU in this case the only one that looks",
    "start": "2255240",
    "end": "2261630"
  },
  {
    "text": "like it's consuming much CPU is the third line down all in yellow it's a select two three now I know as DBA",
    "start": "2261630",
    "end": "2267840"
  },
  {
    "text": "that'd be worth my while spend a day cheating that single statement in this case it's a procedure to cut down on the",
    "start": "2267840",
    "end": "2274530"
  },
  {
    "text": "amount of CP it's using and eliminate the cpu saturation on this instance now",
    "start": "2274530",
    "end": "2280650"
  },
  {
    "text": "I can zoom out to larger timeframes I click on 6h that's six hours and in this case I see that there are spikes earlier",
    "start": "2280650",
    "end": "2286920"
  },
  {
    "text": "now I can select a spike by clicking my mouse and dragging across the spike and",
    "start": "2286920",
    "end": "2293280"
  },
  {
    "text": "now zoom into that load period in this case I no longer see CPU saturation I see some other way to vent so we're",
    "start": "2293280",
    "end": "2299790"
  },
  {
    "text": "waiting for something now I can look into the legend and I see the top wait event blue is IO con X AC T sync now we",
    "start": "2299790",
    "end": "2309390"
  },
  {
    "text": "can look up the definition for this weight event and it turns out this weight event is waiting for writing",
    "start": "2309390",
    "end": "2314580"
  },
  {
    "text": "changes to the database to stable storage now what sequel statements are waiting for this I look in the top Seco",
    "start": "2314580",
    "end": "2321270"
  },
  {
    "text": "and I see the first two statements the one spending almost all the time waiting for this now what are those sequel",
    "start": "2321270",
    "end": "2327330"
  },
  {
    "text": "statements those are insert statements which makes sense because we're waiting for changes to be written out the stable storage in",
    "start": "2327330",
    "end": "2333300"
  },
  {
    "text": "this case I see that the insert statements are inserting the first one inserts one row into the table at a time",
    "start": "2333300",
    "end": "2339870"
  },
  {
    "text": "and what happens is by default we have implicit commits so after every insert",
    "start": "2339870",
    "end": "2344970"
  },
  {
    "text": "statement we have to wait for a commit and guaranteeing the changes are written to disk now if I want to optimize my",
    "start": "2344970",
    "end": "2351510"
  },
  {
    "text": "application now if I want to optimize the application what I could do is have insert statements that do mini rows in",
    "start": "2351510",
    "end": "2357000"
  },
  {
    "text": "one single insert statement now we can look at the data with other dimensions so by default this weights on top and",
    "start": "2357000",
    "end": "2363060"
  },
  {
    "text": "tops equal on the bottom but on the bottom I can also choose to look at the top weights which is the first one and",
    "start": "2363060",
    "end": "2368670"
  },
  {
    "text": "see which weights I've spent the most time on we've already seen sequel I can also see it by hosts and in this case I",
    "start": "2368670",
    "end": "2374730"
  },
  {
    "text": "have two hosts and I can see that the load is well balanced across those hosts now if I had an application server that",
    "start": "2374730",
    "end": "2381900"
  },
  {
    "text": "might have had the wrong version of the code on it it might be taking up higher load and I could see immediately across",
    "start": "2381900",
    "end": "2387540"
  },
  {
    "text": "my application fleet if any of those instances are generating higher load on my data I can also click on users and see which",
    "start": "2387540",
    "end": "2395560"
  },
  {
    "text": "users are putting the most load on the database in this case my application is running all as one single user we've",
    "start": "2395560",
    "end": "2401380"
  },
  {
    "text": "looked at the top table and on the bottom half of the dashboard by different dimensions we can also use",
    "start": "2401380",
    "end": "2407170"
  },
  {
    "text": "those same dimensions on the load chart on the top so if you look at the legend to the top right of the legend there's a",
    "start": "2407170",
    "end": "2413440"
  },
  {
    "text": "line that says slice by by default it's weights I can click on it see other",
    "start": "2413440",
    "end": "2418450"
  },
  {
    "text": "dimensions I can group by so I can instead of weights choose sequel now they load on the database is exactly the",
    "start": "2418450",
    "end": "2424930"
  },
  {
    "text": "same in the chart what we're changing is the stacked colored areas so a stack",
    "start": "2424930",
    "end": "2430030"
  },
  {
    "text": "colored areas were weights and now they're sequel so I can see the load by sequel over time so for example those",
    "start": "2430030",
    "end": "2437260"
  },
  {
    "text": "sequel waiting for the rights to staple storage were not a steady state that",
    "start": "2437260",
    "end": "2442990"
  },
  {
    "text": "came and went whereas some other sequel statements had a very stable load on the database I can",
    "start": "2442990",
    "end": "2449920"
  },
  {
    "text": "also do it by hosts now we saw that we have two hosts that look like that we're",
    "start": "2449920",
    "end": "2454960"
  },
  {
    "text": "putting on similar load onto the instance in this case we can see one host had a steady state and the other",
    "start": "2454960",
    "end": "2462190"
  },
  {
    "text": "host put on a heavier load during a certain period of time and finally we can see the load by users over time in",
    "start": "2462190",
    "end": "2468580"
  },
  {
    "text": "this case we just have one single user so we've seen how performance insights",
    "start": "2468580",
    "end": "2473890"
  },
  {
    "text": "makes it easy to see the load on an RDS database and to both identify when there",
    "start": "2473890",
    "end": "2479950"
  },
  {
    "text": "are bottlenecks and where to act if there is a bottleneck thank you for watching so what do people think it's",
    "start": "2479950",
    "end": "2489790"
  },
  {
    "text": "not pretty cool something I've wanted to write for 30 years in databases because",
    "start": "2489790",
    "end": "2495280"
  },
  {
    "text": "at Oracle I spent a lot of my time having customers telling me their database was slow and it's like well is",
    "start": "2495280",
    "end": "2501010"
  },
  {
    "text": "it slow now no no but it was slow on Tuesday well well is it slow now well",
    "start": "2501010",
    "end": "2506710"
  },
  {
    "text": "yes well when did it start getting slow I don't know with this you can go back and you can say hey guys it started",
    "start": "2506710",
    "end": "2514570"
  },
  {
    "text": "getting slow Monday at 12 can you guys please look at your git log because I bet you deployed something Monday at 12",
    "start": "2514570",
    "end": "2520510"
  },
  {
    "text": "you can just in the preview when we had 4,000 customers using or Postgres",
    "start": "2520510",
    "end": "2525790"
  },
  {
    "text": "about a thousand of them use performance insights and were very quickly able to",
    "start": "2525790",
    "end": "2531160"
  },
  {
    "text": "come up with what was going on in their database and I won't tell you what the previous name in the project was but they kept using the word insight when",
    "start": "2531160",
    "end": "2538060"
  },
  {
    "text": "they were using the product so we renamed it when we launched it to be performance insights so I'm going to",
    "start": "2538060",
    "end": "2543400"
  },
  {
    "text": "spend one or two minutes just diving a little bit into the methodology so the first part is that it samples every",
    "start": "2543400",
    "end": "2550930"
  },
  {
    "text": "second and so if you think about a fast query which is run rarely we're probably not going to catch it I mean that's the",
    "start": "2550930",
    "end": "2557050"
  },
  {
    "text": "reality we might catch it we might not if you think about a query that's run pretty often we'll catch it and if you",
    "start": "2557050",
    "end": "2562690"
  },
  {
    "text": "think about a slow carry query well of course we'll catch that because we'll catch it doing things so sampling is",
    "start": "2562690",
    "end": "2569170"
  },
  {
    "text": "like film it's awesome because you can see exactly what's going on but you can only see exactly what's going on every",
    "start": "2569170",
    "end": "2575200"
  },
  {
    "text": "time you do a frame so let's look at how it might stack up your active sessions your sessions your users might be",
    "start": "2575200",
    "end": "2582100"
  },
  {
    "text": "waiting on things or loading things and it stacks it up into this active sessions graph because at the end of the",
    "start": "2582100",
    "end": "2587770"
  },
  {
    "text": "day in databases what you really care about is finding out who the bad guy is it's not about all the good guys and",
    "start": "2587770",
    "end": "2594580"
  },
  {
    "text": "that's why when you saw that video the drilling in was always to find out what was different and so here's an",
    "start": "2594580",
    "end": "2603130"
  },
  {
    "text": "example where there's different queries going on over time doing different things and then this is an example of",
    "start": "2603130",
    "end": "2608260"
  },
  {
    "text": "how the system stacks those up now here's kind of a fun thing we believe in eating our own dog food remember I told",
    "start": "2608260",
    "end": "2614470"
  },
  {
    "text": "you how the beauty of AWS is that everything lives on the other side of an API performance insights uses 13 AWS",
    "start": "2614470",
    "end": "2621520"
  },
  {
    "text": "services in its use as internal services the last cash dynamo redshift all these",
    "start": "2621520",
    "end": "2628570"
  },
  {
    "text": "other services all of those aggregations you saw there was no speed-up of that video that's in real time and we can do",
    "start": "2628570",
    "end": "2635530"
  },
  {
    "text": "this across the RDS fleet and it is turned on by default when we launched it into GA for every single user so you can",
    "start": "2635530",
    "end": "2642850"
  },
  {
    "text": "go back and look at this by default if you want to will have options we're not",
    "start": "2642850",
    "end": "2647860"
  },
  {
    "text": "quite sure how yet we'll have options where you can go back farther and farther in time and take a look at what",
    "start": "2647860",
    "end": "2653470"
  },
  {
    "text": "happened 30 days 60 days 6 months ago you can look at what happened at last quarter",
    "start": "2653470",
    "end": "2659170"
  },
  {
    "text": "in her financial database cuz hey it wasn't bad as it wasn't bad like this one is so we've already shown you how",
    "start": "2659170",
    "end": "2665380"
  },
  {
    "text": "you access performance insights you just go right there on the console it's available it shows you databases right",
    "start": "2665380",
    "end": "2672520"
  },
  {
    "text": "there with that new column called database load you just click through and all of a sudden you're there so in",
    "start": "2672520",
    "end": "2678910"
  },
  {
    "text": "another part of a presentation I gave earlier today I gave out the email address of Aurora and I forgot to put it",
    "start": "2678910",
    "end": "2685300"
  },
  {
    "text": "in this presentation it's a roar aah - p.m. at amazon.com for PII its RDS - PID amazon.com and if any",
    "start": "2685300",
    "end": "2693760"
  },
  {
    "text": "of you have comments questions feature requests etc feel free to reach out directly to that email address so now",
    "start": "2693760",
    "end": "2702100"
  },
  {
    "text": "I'd like to move on to questions from the audience does anyone have any",
    "start": "2702100",
    "end": "2711070"
  },
  {
    "text": "questions I don't think we ever think about mics",
    "start": "2711070",
    "end": "2715320"
  },
  {
    "text": "with John okay okay",
    "start": "2732069",
    "end": "2742660"
  },
  {
    "text": "as I as I can say as I can see copy is",
    "start": "2742660",
    "end": "2749609"
  },
  {
    "text": "that comes from nature observe each operation copy consists of actually",
    "start": "2749609",
    "end": "2756670"
  },
  {
    "text": "number of networks transmission actually",
    "start": "2756670",
    "end": "2761859"
  },
  {
    "text": "each one transmission for each role so if we have two hundred mediums rows to",
    "start": "2761859",
    "end": "2769750"
  },
  {
    "text": "be filled you need to send out two hundred medium packets to the Sabha the",
    "start": "2769750",
    "end": "2776940"
  },
  {
    "text": "reason why is not so good at that point because all right is not now does not",
    "start": "2776940",
    "end": "2783819"
  },
  {
    "text": "make any announcement for Network hundred in the database system and on",
    "start": "2783819",
    "end": "2791440"
  },
  {
    "text": "the other hand vacuum is consists of just a single SQL query just means it",
    "start": "2791440",
    "end": "2801190"
  },
  {
    "text": "only requires one packet transmission from the client to the server and as",
    "start": "2801190",
    "end": "2808210"
  },
  {
    "text": "soon as the packet arrives to the server asada how to do the very heavy i/o",
    "start": "2808210",
    "end": "2814030"
  },
  {
    "text": "intensive job of which is vacuum inside so if era is very good at i/o then you",
    "start": "2814030",
    "end": "2822069"
  },
  {
    "text": "can see the very much different from RDS between Ora and RDS so you can battery",
    "start": "2822069",
    "end": "2830290"
  },
  {
    "text": "Aaron eliminates overhead of network transmission and the finally create",
    "start": "2830290",
    "end": "2837910"
  },
  {
    "text": "index is very very intensive job because",
    "start": "2837910",
    "end": "2844000"
  },
  {
    "text": "it needs a large number of sorting those inside that is in this case you as I",
    "start": "2844000",
    "end": "2854020"
  },
  {
    "text": "said before this particular server has much much memory that was 200 over 200",
    "start": "2854020",
    "end": "2862480"
  },
  {
    "text": "gigabytes which much larger than the actual database size which is only sati",
    "start": "2862480",
    "end": "2867730"
  },
  {
    "text": "device so all of the operation is a parameter in size in memory and that",
    "start": "2867730",
    "end": "2875980"
  },
  {
    "text": "does not consume any iwell so which is a",
    "start": "2875980",
    "end": "2881530"
  },
  {
    "text": "purely CPU intensive job that means all right is not so we not",
    "start": "2881530",
    "end": "2889840"
  },
  {
    "text": "show better performance in this case so is this answer to your question so we",
    "start": "2889840",
    "end": "2899800"
  },
  {
    "text": "also have our grant McAllister can you stand up grant McCallister's founder of RDS and our senior principal engineer",
    "start": "2899800",
    "end": "2907230"
  },
  {
    "text": "okay I wasn't actually going for applause but but he does founded so",
    "start": "2907230",
    "end": "2913930"
  },
  {
    "text": "grant has been with Amazon for almost 20 years and lived on the retail side and decided to take all the learnings I mean",
    "start": "2913930",
    "end": "2919330"
  },
  {
    "text": "pain I mean learnings from the retail side and brought it over to AWS to write already yes so great",
    "start": "2919330",
    "end": "2926190"
  },
  {
    "text": "[Music]",
    "start": "2934900",
    "end": "2937959"
  },
  {
    "text": "other questions I will point out one thing before you ask other questions that I brought stickers as kind of bait",
    "start": "2951070",
    "end": "2958520"
  },
  {
    "text": "to come up and ask questions afterwards so they're all here on the on the podium",
    "start": "2958520",
    "end": "2963650"
  },
  {
    "text": "are there other questions yes yes so so",
    "start": "2963650",
    "end": "2976790"
  },
  {
    "text": "the question is will performance insights require any changes to RTS and the answer is no no no no now it may",
    "start": "2976790",
    "end": "2984380"
  },
  {
    "text": "make you want to make some changes but that's a different that's a different thing okay other questions right here if",
    "start": "2984380",
    "end": "2992870"
  },
  {
    "text": "we could turn the house lights up that'd be great if not that's okay too yes third row so that's a great question",
    "start": "2992870",
    "end": "3001180"
  },
  {
    "text": "we learned a lot with our enhanced monitoring product in 2015 and 2016 and right now the performance overhead at",
    "start": "3001180",
    "end": "3007840"
  },
  {
    "text": "least on Aurora is running around one to two percent to do the sampling it's a",
    "start": "3007840",
    "end": "3013060"
  },
  {
    "text": "great question by the way I should put that in my presentation back in the back in the maroonish shirt or dark shirt",
    "start": "3013060",
    "end": "3018310"
  },
  {
    "text": "yeah yeah you're lined up",
    "start": "3018310",
    "end": "3024060"
  },
  {
    "text": "so the question is what extensions are supported for a rural post craft so I'm going to give you a number of answers",
    "start": "3028630",
    "end": "3034280"
  },
  {
    "text": "the first answer is Aurora Post Crescent RDS Postgres will have the same extensions we will keep extensions",
    "start": "3034280",
    "end": "3040190"
  },
  {
    "text": "parity between the two releases the second question between the two products the second answer to your question is",
    "start": "3040190",
    "end": "3046880"
  },
  {
    "text": "that they're all documented on the RDS website and I think grant we have probably 25 right now okay see there you",
    "start": "3046880",
    "end": "3055460"
  },
  {
    "text": "go that's why I bring him that's why I bring him okay so now be clear typically",
    "start": "3055460",
    "end": "3063080"
  },
  {
    "text": "as the GM I'd say 112 and he'd say 57 so I speed that one okay and so it's a long",
    "start": "3063080",
    "end": "3068870"
  },
  {
    "text": "list now remember I told you about Aurora - p.m. we are very very excited",
    "start": "3068870",
    "end": "3074300"
  },
  {
    "text": "about adding new extensions to both RDS and or or Postgres and if you need an extension that's not there reach out to",
    "start": "3074300",
    "end": "3081290"
  },
  {
    "text": "us because we have so much work to do to add extensions in the right safe performant way that we have to make some",
    "start": "3081290",
    "end": "3087710"
  },
  {
    "text": "Hobson's choices sometimes and so when we hear more customers want one than another that literally affects our",
    "start": "3087710",
    "end": "3093380"
  },
  {
    "text": "choices more questions there fifth row yes",
    "start": "3093380",
    "end": "3101500"
  },
  {
    "text": "so do you want to answer that so the",
    "start": "3123320",
    "end": "3129030"
  },
  {
    "text": "question is using PG pool would it make sense to not use PG pool and have more connections or would it here's what",
    "start": "3129030",
    "end": "3135600"
  },
  {
    "text": "we've seen is that most applications kind of have a sweet spot in the number of connections and one of the things you",
    "start": "3135600",
    "end": "3143130"
  },
  {
    "text": "really want to avoid is connection storms or something gets slow and you slam in your database so we think that",
    "start": "3143130",
    "end": "3148440"
  },
  {
    "text": "PG pool is a great tool to control the number of connections to your database yes and and you know so what we've seen",
    "start": "3148440",
    "end": "3156330"
  },
  {
    "text": "people do is kind of dial in the right number of connections for their application now that being said an awful",
    "start": "3156330",
    "end": "3161369"
  },
  {
    "text": "lot of people just run raw connections direct from their client into their database however some of the other things that you saw and talked about",
    "start": "3161369",
    "end": "3167820"
  },
  {
    "text": "about PG pool are compelling reasons to think about using it as well so I want",
    "start": "3167820",
    "end": "3174030"
  },
  {
    "text": "to kind of be fair there any on the sides I've been always middle yes",
    "start": "3174030",
    "end": "3180050"
  },
  {
    "text": "so by the way I will point out that the asker is a member of the Postgres community and has very biased reasons",
    "start": "3192170",
    "end": "3198600"
  },
  {
    "text": "for asking the question thank you [Laughter]",
    "start": "3198600",
    "end": "3205220"
  },
  {
    "text": "exactly and thank you for asking so and I did not plant the question so the answer to that question is we are trying",
    "start": "3205220",
    "end": "3211440"
  },
  {
    "text": "to get our x for releasing our lag behind the community down to 30 days right now that's aspirational and we're",
    "start": "3211440",
    "end": "3218760"
  },
  {
    "text": "not there yet our preview was a little bit longer for GA than we thought but you can see us trying to bring that",
    "start": "3218760",
    "end": "3224190"
  },
  {
    "text": "closer and closer we have Postgres 10 compiling with Aurora right now we actually pulled some",
    "start": "3224190",
    "end": "3230280"
  },
  {
    "text": "of Postgres 10 back into Aurora Postgres 9 6 and loved it",
    "start": "3230280",
    "end": "3236100"
  },
  {
    "text": "so we're gonna be looking to make it as quick as possible at this point we're looking to probably skip 10 Oh which I",
    "start": "3236100",
    "end": "3242040"
  },
  {
    "text": "bet most of you are probably going to do the same thing and release 10 one and and stay tuned on the there's an Aurora",
    "start": "3242040",
    "end": "3248160"
  },
  {
    "text": "Postgres forum stay tuned on that forum for more dates",
    "start": "3248160",
    "end": "3253130"
  },
  {
    "text": "so the question was are there any plans to contribute back and the answer is we already are two years ago Amazon was not",
    "start": "3261030",
    "end": "3267930"
  },
  {
    "text": "as vibrant a member of the open-source community as we liked we're changing that we now have Adrienne Cockcroft",
    "start": "3267930",
    "end": "3274230"
  },
  {
    "text": "who's come and joined us he's VP of open source and he he came from Netflix we actually two to three weeks ago I",
    "start": "3274230",
    "end": "3280590"
  },
  {
    "text": "believe launched open sourced aws.amazon.com go check it out it's got a lot of resources it talks",
    "start": "3280590",
    "end": "3286500"
  },
  {
    "text": "about what communities we're in it talks about where we're putting our energy that's the wide or AWS answer the narrow",
    "start": "3286500",
    "end": "3292470"
  },
  {
    "text": "answer from my team is as of a couple months ago I now have people on my team who are spending their time building",
    "start": "3292470",
    "end": "3298830"
  },
  {
    "text": "things to contribute back to the community we are changing in that regard and stay tuned for more and more and",
    "start": "3298830",
    "end": "3305010"
  },
  {
    "text": "more we are deeply passionate about the Postgres community and deeply passionate about contributing to it question god do",
    "start": "3305010",
    "end": "3314520"
  },
  {
    "text": "decide sorry",
    "start": "3314520",
    "end": "3317210"
  },
  {
    "text": "so you're not the first customer to ask that we're talking and that's the answer",
    "start": "3326260",
    "end": "3337210"
  },
  {
    "text": "[Laughter]",
    "start": "3337210",
    "end": "3342550"
  },
  {
    "text": "yes actually there is a configuration apartment which handles Hammad's",
    "start": "3353890",
    "end": "3359680"
  },
  {
    "text": "replication delay between masa and Cerebus if that carried too much then",
    "start": "3359680",
    "end": "3366529"
  },
  {
    "text": "people will automatically deduce a query to the master to avoid a replication",
    "start": "3366529",
    "end": "3372890"
  },
  {
    "text": "trail I think that depends on the",
    "start": "3372890",
    "end": "3386299"
  },
  {
    "text": "application if applications is has been developed and single database",
    "start": "3386299",
    "end": "3393250"
  },
  {
    "text": "environment probably its application does not suppose that there is delay",
    "start": "3393250",
    "end": "3400279"
  },
  {
    "text": "between appeared and searched in that case replication the delay will be a",
    "start": "3400279",
    "end": "3406309"
  },
  {
    "text": "serious problem for the application so in this case I'll say the application",
    "start": "3406309",
    "end": "3413930"
  },
  {
    "text": "lab is very important okay there's a question here in the centre with the",
    "start": "3413930",
    "end": "3420140"
  },
  {
    "text": "glasses I think yeah",
    "start": "3420140",
    "end": "3423220"
  },
  {
    "text": "so the question is why would I use RDS Postgres I will avoid repeating the word",
    "start": "3430440",
    "end": "3435460"
  },
  {
    "text": "classic oh and what I'd like to say",
    "start": "3435460",
    "end": "3440680"
  },
  {
    "text": "there is there's a lot of good reasons to use RDS Postgres it's a great platform it's the community code it's",
    "start": "3440680",
    "end": "3447520"
  },
  {
    "text": "it's a great piece of software you might not need the all the durability availability and there's another thing",
    "start": "3447520",
    "end": "3453640"
  },
  {
    "text": "to realize there are many many apps out there which are not highly concurrent everything I've talked about on the",
    "start": "3453640",
    "end": "3459940"
  },
  {
    "text": "performance side has been about highly concurrent applications you might have an application where you're running a",
    "start": "3459940",
    "end": "3465580"
  },
  {
    "text": "wordpress blog I don't think I'd really go to the effort to stay in the upper or Postgres versus RDS Postgres it does",
    "start": "3465580",
    "end": "3473320"
  },
  {
    "text": "cost more slightly more on the console though we believe it is more price performant because you get far more",
    "start": "3473320",
    "end": "3478780"
  },
  {
    "text": "transactions as you saw but there's a lot of use of reasons to use RDS Postgres remember I told you that aurora",
    "start": "3478780",
    "end": "3486010"
  },
  {
    "text": "Postgres was our fastest growing database product what do you think our second fastest growing database product is it's already yes Postgres and there's",
    "start": "3486010",
    "end": "3493240"
  },
  {
    "text": "no sign of that slowing down other questions there",
    "start": "3493240",
    "end": "3499650"
  },
  {
    "text": "I didn't pay him either so about two years ago I was the general manager of the database migration service and the",
    "start": "3513319",
    "end": "3519259"
  },
  {
    "text": "schema conversion tool and the schema conversion tool is tool which will scan your database often Oracle though not",
    "start": "3519259",
    "end": "3526339"
  },
  {
    "text": "all the time by any means and it will look at your triggers constraint schema indices sequences and Peele sequel and",
    "start": "3526339",
    "end": "3534079"
  },
  {
    "text": "it will give you an assessment report right there of what will convert and won't convert what happens from that",
    "start": "3534079",
    "end": "3539900"
  },
  {
    "text": "assessment report and by the way Postgres is the one engine which converts best from Oracle to use an",
    "start": "3539900",
    "end": "3545690"
  },
  {
    "text": "example what happens with that Assessment Report is you can use it to figure out what work needs to be done",
    "start": "3545690",
    "end": "3551329"
  },
  {
    "text": "we've seen databases get as high as a hundred percent if they use simple things and don't overuse Peele sequel",
    "start": "3551329",
    "end": "3557719"
  },
  {
    "text": "we've seen databases get as low as 50% it's all based on your usage but what",
    "start": "3557719",
    "end": "3563809"
  },
  {
    "text": "you do get is you get someone to tell you how much work there is at least at a high level now the other thing to notice",
    "start": "3563809",
    "end": "3569719"
  },
  {
    "text": "is that that tool actually anonymously records what things failed like say a",
    "start": "3569719",
    "end": "3575599"
  },
  {
    "text": "sequence couldn't be converted as an example those sequences can now be converted it reports it back to the dev",
    "start": "3575599",
    "end": "3581089"
  },
  {
    "text": "team and I'll give you exactly one guess as to what the dev team uses as their largest input to their backlog for the",
    "start": "3581089",
    "end": "3587869"
  },
  {
    "text": "next sprint they use what things are currently not being converted well in the fleet so there's a product that's",
    "start": "3587869",
    "end": "3594229"
  },
  {
    "text": "there now I'd advise you to go look at it and realize that over time that product will get better and better I will also say that there is nothing",
    "start": "3594229",
    "end": "3600589"
  },
  {
    "text": "about database migration that is easy it is hard and we will be here to help you with it but it's a hard journey we all",
    "start": "3600589",
    "end": "3607099"
  },
  {
    "text": "need to make together and that's from any platform to any platform white shirt",
    "start": "3607099",
    "end": "3612109"
  },
  {
    "text": "and then I actually think we're gonna take this last question and then we're gonna move offstage to down here and",
    "start": "3612109",
    "end": "3617690"
  },
  {
    "text": "that's where the sticker bait is right on the on the podium so last question",
    "start": "3617690",
    "end": "3623440"
  },
  {
    "text": "so right now grant you need to migrate up to nine six in RDS Postgres using",
    "start": "3631510",
    "end": "3637550"
  },
  {
    "text": "major version upgrade feature and then you can rep you can move directly into a",
    "start": "3637550",
    "end": "3643610"
  },
  {
    "text": "rural Postgres from there so yes okay thank you so very much please fill out",
    "start": "3643610",
    "end": "3651580"
  },
  {
    "text": "please fill out your session rating so we can know what to do better next year we really appreciate it and for those of",
    "start": "3653380",
    "end": "3659630"
  },
  {
    "text": "you who want stickers come to the side of the stage",
    "start": "3659630",
    "end": "3663339"
  }
]