[
  {
    "start": "0",
    "end": "109000"
  },
  {
    "text": "[Music] hello my name is rob hicarita and i'm a",
    "start": "400",
    "end": "6799"
  },
  {
    "text": "principal technical account manager at aws and i'm based out of austin texas welcome to aws supports you where we",
    "start": "6799",
    "end": "12719"
  },
  {
    "text": "share best practices and troubleshooting tips from aws support here aws support we practically help you optimize",
    "start": "12719",
    "end": "19039"
  },
  {
    "text": "performance lower cost and innovate on the aws cloud joining me today is clinton mike from",
    "start": "19039",
    "end": "24960"
  },
  {
    "text": "aws sport can you give us a quick introduction clint and then mike yeah hey robin hey everyone thanks for",
    "start": "24960",
    "end": "30160"
  },
  {
    "text": "taking a few minutes out of your day to uh to join the stream my name is clint wyckoff and i'm an enterprise support",
    "start": "30160",
    "end": "35840"
  },
  {
    "text": "manager based in pittsburgh pennsylvania so i lead a team of technical account managers and uh basically focus on you",
    "start": "35840",
    "end": "43360"
  },
  {
    "text": "know customer objectives in helping you in your journey on the cloud",
    "start": "43360",
    "end": "49120"
  },
  {
    "text": "hey i'm mike walls i'm a technical account manager based out of boulder colorado where it's snowing heavily",
    "start": "49280",
    "end": "55039"
  },
  {
    "text": "right now i enjoy supporting customers from an operations and cost optimization",
    "start": "55039",
    "end": "60320"
  },
  {
    "text": "standpoint and today i'm going to dig in a little bit on api gateway and caching but first i'm going to let clinton rob",
    "start": "60320",
    "end": "66880"
  },
  {
    "text": "answer a couple of questions glad to be here great thanks for the intro both of you and so today we'll be answering some of",
    "start": "66880",
    "end": "73280"
  },
  {
    "text": "your questions you have posted on repost.aws specifically today we'll be covering questions surrounding serverless but",
    "start": "73280",
    "end": "79520"
  },
  {
    "text": "before we get started a quick note to the attendees online please feel free to use the chat window on the right hand",
    "start": "79520",
    "end": "84640"
  },
  {
    "text": "side of your screen to let us know where you're joining us from today and then share your thoughts and questions throughout the episode we do really look",
    "start": "84640",
    "end": "90560"
  },
  {
    "text": "forward to hearing from you all throughout today's episode so and additionally if you'd like to see us",
    "start": "90560",
    "end": "95600"
  },
  {
    "text": "dive deep into a specific topic head over to repost.aws and submit your questions there it may just be a",
    "start": "95600",
    "end": "101439"
  },
  {
    "text": "featured episode in the future on aws supports you um so with all the introductions i'm going to turn over to",
    "start": "101439",
    "end": "107119"
  },
  {
    "text": "you clint to answer our first question for today fantastic thanks rob so as we had said",
    "start": "107119",
    "end": "112399"
  },
  {
    "start": "109000",
    "end": "1002000"
  },
  {
    "text": "there a little bit earlier we're going to be focusing on some questions that were posted over on the",
    "start": "112399",
    "end": "117560"
  },
  {
    "text": "repost.aws it's much like a forums where you can go and ask questions and in the",
    "start": "117560",
    "end": "123040"
  },
  {
    "text": "community will chime in and answer them where appropriate so uh the first question that we're going to be focusing on here is in the",
    "start": "123040",
    "end": "130319"
  },
  {
    "text": "first topic specifically is in the realm of serverless so serverless is one of the most popular topics over on repost",
    "start": "130319",
    "end": "137120"
  },
  {
    "text": "and there was a few lingering outstanding questions that we have decided to to take on so the first",
    "start": "137120",
    "end": "143920"
  },
  {
    "text": "one here focusing around network load balancers and how they or how they do not uh forward traffic along to aws",
    "start": "143920",
    "end": "150800"
  },
  {
    "text": "fargate uh which is a component of ecs elastic container service um and uh yeah",
    "start": "150800",
    "end": "156720"
  },
  {
    "text": "so we're gonna be focusing there first if we zoom along here we sort of take a",
    "start": "156720",
    "end": "162000"
  },
  {
    "text": "a step back for for a moment and understand like why serverless is such a",
    "start": "162000",
    "end": "167200"
  },
  {
    "text": "popular topic over on repost and there is really been over the last you know",
    "start": "167200",
    "end": "172640"
  },
  {
    "text": "several years in the it world there is been a paradigm shift in",
    "start": "172640",
    "end": "178239"
  },
  {
    "text": "you know running physical machines on premises and aws does have a solution there we can help reduce latency",
    "start": "178239",
    "end": "185440"
  },
  {
    "text": "and pull the compute power close as close to the application as possible with outposts and that sort of ramps up",
    "start": "185440",
    "end": "192800"
  },
  {
    "text": "the the scale there where the the level of abstraction goes away from the the services and into uh to lambda and all",
    "start": "192800",
    "end": "201440"
  },
  {
    "text": "the way up the into the to the serverless landscape here where you focus on the actual business logic and",
    "start": "201440",
    "end": "206959"
  },
  {
    "text": "writing code and you're not worrying about managing servers and things like that under the hood right so basically",
    "start": "206959",
    "end": "212400"
  },
  {
    "text": "what we can do here with lambda or fargate for example it's a serverless offering where you don't have to worry",
    "start": "212400",
    "end": "217440"
  },
  {
    "text": "about managing any of the servers or anything uh like that as i mentioned there briefly you know the paradigm",
    "start": "217440",
    "end": "223920"
  },
  {
    "text": "shift from managing servers and going more towards a serverless approach which allows you to or business focus on",
    "start": "223920",
    "end": "230799"
  },
  {
    "text": "the business logic and writing the code you know and like lan uh python for example or node.js or",
    "start": "230799",
    "end": "238400"
  },
  {
    "text": "php for example whichever the development team is most familiar with right but as that operational model",
    "start": "238400",
    "end": "244720"
  },
  {
    "text": "shifts so does the level of responsibility that you as a customer",
    "start": "244720",
    "end": "249920"
  },
  {
    "text": "own right so at the the bottom here you have ec2 which is basically virtual machines in the clouds",
    "start": "249920",
    "end": "256799"
  },
  {
    "text": "you have instances where you need to worry about managing patching um sizing uh making sure that it's kept up to date",
    "start": "256799",
    "end": "263680"
  },
  {
    "text": "operating system um creating a custom amis worry about virus antivirus all",
    "start": "263680",
    "end": "269680"
  },
  {
    "text": "that type of stuff that goes with managing virtual machines right as you sort of shift up the the scale there you",
    "start": "269680",
    "end": "275440"
  },
  {
    "text": "get into the realm of managed services like ecs and eks where you still own some level of the responsibility with",
    "start": "275440",
    "end": "282240"
  },
  {
    "text": "versions that are being run for example with eks or elastic kubernetes service which version of kubernetes do you want",
    "start": "282240",
    "end": "288720"
  },
  {
    "text": "to be running um all the way up to fargate which is a serverless offering uh it is a containerized approach where",
    "start": "288720",
    "end": "295280"
  },
  {
    "text": "you containerize your application you store that in a repository ecr for example elastic container repository but",
    "start": "295280",
    "end": "301840"
  },
  {
    "text": "it's serverless meaning that auto scale so once you write the code for your application you know run that through",
    "start": "301840",
    "end": "307600"
  },
  {
    "text": "docker containerize it then you can publish it out to your container registry and consume it through fargate and then to take it one step further",
    "start": "307600",
    "end": "314160"
  },
  {
    "text": "we're literally the only thing you need to do is worry about writing code is lambda so that's the the serverless",
    "start": "314160",
    "end": "320479"
  },
  {
    "text": "event-driven architecture that rob's actually going to be talking about here in a few minutes so a little quick sort",
    "start": "320479",
    "end": "328160"
  },
  {
    "text": "of update on fargate specifically this completely 100 managed by aws",
    "start": "328160",
    "end": "335520"
  },
  {
    "text": "so there's no specific ec2 instances or anything that you as a customer need to worry about deploying or patching um it",
    "start": "335520",
    "end": "342320"
  },
  {
    "text": "is 100 serverless which the nice part of that is when you choose the fargate launch type uh through the ecs service",
    "start": "342320",
    "end": "349840"
  },
  {
    "text": "um it will auto scale out and in back again um but then the nice thing is it's fully integrated with many of the",
    "start": "349840",
    "end": "356240"
  },
  {
    "text": "existing aws services uh so as you'll see as i bring up the demo here in a minute it works directly with",
    "start": "356240",
    "end": "362560"
  },
  {
    "text": "application load balancers alds at the layer 7 level as well as layer 4 network",
    "start": "362560",
    "end": "367759"
  },
  {
    "text": "load balancers as well which really focuses on you know your individual use case and what you're looking for there",
    "start": "367759",
    "end": "374720"
  },
  {
    "text": "so what i put together here is just a quick diagram that illustrates sort of what a typical environment would",
    "start": "374720",
    "end": "381520"
  },
  {
    "text": "look like where you have the aws environment az-1 az2 and how you would route traffic across those",
    "start": "381520",
    "end": "387440"
  },
  {
    "text": "so whenever you create your fargate environment your forget cluster basically here you have task definitions",
    "start": "387440",
    "end": "394080"
  },
  {
    "text": "and as part of that setup and configuration you choose you choose how many subnets vpc subnets you want that",
    "start": "394080",
    "end": "400720"
  },
  {
    "text": "to span across which is the different availability zones you want to definitely take advantage of a high",
    "start": "400720",
    "end": "406000"
  },
  {
    "text": "availability component there so that you can route traffic um accordingly right so let's switch over",
    "start": "406000",
    "end": "413440"
  },
  {
    "text": "to the demo here and um first you will see here that i have my",
    "start": "413440",
    "end": "419120"
  },
  {
    "text": "test cluster and inside of my test fire gate cluster that i've deployed here i have two services right the first one",
    "start": "419120",
    "end": "426160"
  },
  {
    "text": "that we're going to take a look at here is focused around the uh the application the network load balancer as well as the",
    "start": "426160",
    "end": "432160"
  },
  {
    "text": "application load bouncer so each one of those is this has a separate configuration one has an alb",
    "start": "432160",
    "end": "437360"
  },
  {
    "text": "this is front of thing and one has a network load balancer that is running it just to show you the different behavior",
    "start": "437360",
    "end": "442960"
  },
  {
    "text": "and uh what that would look like so here you can see the individual tasks that we have running",
    "start": "442960",
    "end": "449520"
  },
  {
    "text": "monitoring is very important so the overall health in the environments these are cloudwatch metrics inside of the",
    "start": "449520",
    "end": "455680"
  },
  {
    "text": "fargate cluster utilizes ecs agent um to to monitor cpu and memory utilization of",
    "start": "455680",
    "end": "462080"
  },
  {
    "text": "the given tasks and the services underneath there as we switch over to the networking tab",
    "start": "462080",
    "end": "467199"
  },
  {
    "text": "here you can see that it does directly integrate with the load balancer",
    "start": "467199",
    "end": "473759"
  },
  {
    "text": "so here we can see that we have my test load balancer and we are going to",
    "start": "473759",
    "end": "478879"
  },
  {
    "text": "open the ec2 console up to take a look at our load balancer as well as the target group so all the fargate tasks",
    "start": "478879",
    "end": "485120"
  },
  {
    "text": "which are the individual worker nodes that are going to be responding to our web request here in a second uh these",
    "start": "485120",
    "end": "491520"
  },
  {
    "text": "are um behind the load balancer in the target group and we can see here that it is of",
    "start": "491520",
    "end": "497520"
  },
  {
    "text": "the application or the load balancer is an application load balancer so it operates at the layer seven level as",
    "start": "497520",
    "end": "503039"
  },
  {
    "text": "opposed to a network load balancer which operates layer four so keep this moving along here and we'll",
    "start": "503039",
    "end": "509599"
  },
  {
    "text": "open the fqdn the fully qualified dns name of my webpage and we'll just do a",
    "start": "509599",
    "end": "515680"
  },
  {
    "text": "couple of quick refreshes here and the thing that i do want to call out here is the ipv4 address",
    "start": "515680",
    "end": "521919"
  },
  {
    "text": "of the target instance see down here 172 31 8450.137 right you have a different",
    "start": "521919",
    "end": "529760"
  },
  {
    "text": "node or task responding to each individual quest right so it's different every single",
    "start": "529760",
    "end": "535600"
  },
  {
    "text": "time and if we take a look here and double click into the actual load balancer it's utilizing the round robin",
    "start": "535600",
    "end": "543680"
  },
  {
    "text": "load balancing algorithm as well as stickiness is disabled so each one of those individual requests that are",
    "start": "543680",
    "end": "550080"
  },
  {
    "text": "coming through they're being routed to a different task okay whereas the original question that the",
    "start": "550080",
    "end": "555440"
  },
  {
    "text": "user had asked was around network load balancer so let's take a look at what that looks like here",
    "start": "555440",
    "end": "560640"
  },
  {
    "text": "so if we now pivot back our view within the fargate console over to our ecs",
    "start": "560640",
    "end": "567120"
  },
  {
    "text": "cluster that we built that has a network load balancer fronting it here",
    "start": "567120",
    "end": "572959"
  },
  {
    "text": "switch over we here here in this individual group we have five um tasks which are going to",
    "start": "572959",
    "end": "579040"
  },
  {
    "text": "get registered behind the the network load balancer um in the target group there just taking a look here at the uh",
    "start": "579040",
    "end": "586080"
  },
  {
    "text": "the configuration you can see that they are a fargate um launch type and the other thing that i would call",
    "start": "586080",
    "end": "591839"
  },
  {
    "text": "out here is the cpu and memory that does get allocated so this is defined in the",
    "start": "591839",
    "end": "597519"
  },
  {
    "text": "in the in the task definition json document that you would write taking a look here at the network as i",
    "start": "597519",
    "end": "603600"
  },
  {
    "text": "mentioned earlier um just want to call out here on the left hand side that you do have all of the uh the subnet so in",
    "start": "603600",
    "end": "610240"
  },
  {
    "text": "us east one i'm i've deployed this across six azs to make it highly available",
    "start": "610240",
    "end": "616839"
  },
  {
    "text": "um keep this moving along and then we'll switch over to the ec2 console so we can",
    "start": "616839",
    "end": "622800"
  },
  {
    "text": "grab our fully qualified dns name now whenever we do that same refresh whereas before with the application load",
    "start": "622800",
    "end": "628399"
  },
  {
    "text": "balancer uh we have um each one of the individual",
    "start": "628399",
    "end": "633839"
  },
  {
    "text": "targets was responding right this with tcp connection you're going to have the",
    "start": "633839",
    "end": "639440"
  },
  {
    "text": "same target respond for the duration of that connection request as long as it's out",
    "start": "639440",
    "end": "644880"
  },
  {
    "text": "there so each one of these refreshes that i'm doing the same target behind my application my network load balancer is",
    "start": "644880",
    "end": "651120"
  },
  {
    "text": "going to continually respond so even though i have new healthy um",
    "start": "651120",
    "end": "656560"
  },
  {
    "text": "healthy tasks getting launched as part of my auto scaling group the individual connections they're going to still be",
    "start": "656560",
    "end": "662640"
  },
  {
    "text": "routed to uh the the same task as it was previously as long as the",
    "start": "662640",
    "end": "669040"
  },
  {
    "text": "through the duration of that request so just flipping over here to the documentation and this is uh",
    "start": "669040",
    "end": "676800"
  },
  {
    "text": "basically called out here um in the in the documentation as part of the network load balancer behavior um so typically",
    "start": "676800",
    "end": "684800"
  },
  {
    "text": "you know the if you go through this and if we look at questions we normally get from from folks in the field is around",
    "start": "684800",
    "end": "690959"
  },
  {
    "text": "you know hey how do you monitor what does monitoring look like from fargate or ecs perspective um so we do want to",
    "start": "690959",
    "end": "697519"
  },
  {
    "text": "take a minute here and take a look at that and within the actual ui and console i",
    "start": "697519",
    "end": "703600"
  },
  {
    "text": "touched on this a second ago was the native cloudwatch capability within",
    "start": "703600",
    "end": "709680"
  },
  {
    "text": "um the the fargate ui right so here you can see cpu and memory statistics very",
    "start": "709680",
    "end": "715200"
  },
  {
    "text": "high level sort of information well if we do have a capability within",
    "start": "715200",
    "end": "721839"
  },
  {
    "text": "uh within cloudwatch called cloudwatch container insights so what this does is it can be enabled for new clusters i'll",
    "start": "721839",
    "end": "728880"
  },
  {
    "text": "show you how to set that up here in a second but it also can be enabled for existing ecs clusters that you've",
    "start": "728880",
    "end": "735360"
  },
  {
    "text": "deployed so both of those options are able to be leveraged via a cli",
    "start": "735360",
    "end": "741120"
  },
  {
    "text": "command here so the first one on the top of the screen we'll go ahead and configure this for anything new that you",
    "start": "741120",
    "end": "746160"
  },
  {
    "text": "create in the future but the the second aws cli command that's on the screen",
    "start": "746160",
    "end": "751360"
  },
  {
    "text": "will go ahead and it will enable the cloudwatch container insights for any existing cluster so we're going to do",
    "start": "751360",
    "end": "757920"
  },
  {
    "text": "here is we're going to leverage aws cloud shell which is a native cli capability that we have that'll pop a",
    "start": "757920",
    "end": "764079"
  },
  {
    "text": "browser tab here and allow you to interact directly with your aws account and not have to worry about like visual",
    "start": "764079",
    "end": "770399"
  },
  {
    "text": "studio code configuration or any local terminal set up so i am utilizing cloud shell here and i've basically just run",
    "start": "770399",
    "end": "777680"
  },
  {
    "text": "that that single command and um and i've now got cloudwatch container",
    "start": "777680",
    "end": "784240"
  },
  {
    "text": "insights enabled right so what does this look like for any new clusters that we",
    "start": "784240",
    "end": "789600"
  },
  {
    "text": "create or deploy in the future fantastic question you should ask so we will pivot back over here to the fargate ui within",
    "start": "789600",
    "end": "796639"
  },
  {
    "text": "the settings area you are able to um configure the uh the the cloudwatch",
    "start": "796639",
    "end": "803360"
  },
  {
    "text": "container insights for any future instances or clusters that do get deployed",
    "start": "803360",
    "end": "809519"
  },
  {
    "text": "it's just a checkbox so any of the new clusters that would come online from here moving forward would have um",
    "start": "809519",
    "end": "816720"
  },
  {
    "text": "cloudwatch container insights enabled so if we pivot the view and switch the services along the tops you would just",
    "start": "816720",
    "end": "822720"
  },
  {
    "text": "type in cloudwatch along the top to open the cloudwatch console and down on the bottom left here under",
    "start": "822720",
    "end": "829120"
  },
  {
    "text": "insights there's a container insights option the first thing that we will do here is switch it",
    "start": "829120",
    "end": "835760"
  },
  {
    "text": "over to performance metrics a second here get on to uh to",
    "start": "835760",
    "end": "843040"
  },
  {
    "text": "performance metrics and then within the the performance metrics here we're able to see the different services that we",
    "start": "843040",
    "end": "849120"
  },
  {
    "text": "have available to us choose ecs and there's a list of ecs metrics that you can monitor for",
    "start": "849120",
    "end": "855519"
  },
  {
    "text": "clusters instances services tasks for example and then on the right hand side you see the test cluster that i deployed",
    "start": "855519",
    "end": "862079"
  },
  {
    "text": "in all of the different metrics and cpu utilization memory network bandwidth being utilized",
    "start": "862079",
    "end": "867920"
  },
  {
    "text": "bytes per second network transmit network receive tasks right so there's a lot of really good insights if we look",
    "start": "867920",
    "end": "874720"
  },
  {
    "text": "at the individual tasks we can keep it to keep track of how things are scaling and then down on the bottom there is",
    "start": "874720",
    "end": "880720"
  },
  {
    "text": "individual task and proof container performance insights that you can get at an individual task level um since this",
    "start": "880720",
    "end": "887360"
  },
  {
    "text": "was utilizing amazon linux 2 it is running the httpd container name that is a",
    "start": "887360",
    "end": "893120"
  },
  {
    "text": "default container that we do have available for running test pscs and things like that",
    "start": "893120",
    "end": "899760"
  },
  {
    "text": "so that basically wraps up what we had shared for the session today so",
    "start": "899760",
    "end": "905120"
  },
  {
    "text": "basically the ant to wrap it up and bring it full circle back to the question that we were asked we believe that what the user was seeing was in",
    "start": "905120",
    "end": "912240"
  },
  {
    "text": "fact an expected behavior and how the tasks um were being forwarded through the network load balancer one",
    "start": "912240",
    "end": "919440"
  },
  {
    "text": "sort of caveat that i would challenge is you know is network about load balancer nlb the appropriate type of load",
    "start": "919440",
    "end": "925360"
  },
  {
    "text": "balancer or should they be using an application load balancer that provides more intelligence",
    "start": "925360",
    "end": "930480"
  },
  {
    "text": "being able to operate http https level as opposed to the network load balancer which is layer 4 and just standard tcp",
    "start": "930480",
    "end": "937440"
  },
  {
    "text": "connection so that wraps that section up for today and uh rob did we have any questions",
    "start": "937440",
    "end": "944639"
  },
  {
    "text": "from the from the crew online come in hey clint thanks uh for all that information there on nlb and fargate so",
    "start": "944639",
    "end": "951440"
  },
  {
    "text": "we did have a question that came in from the audience from jibjab06 uh jibjab zero six was wondering does",
    "start": "951440",
    "end": "957440"
  },
  {
    "text": "cloudwatch container insights also work for ecs uh clusters that aren't fargate",
    "start": "957440",
    "end": "962560"
  },
  {
    "text": "or even on eks as well uh yeah so the answer to the question is yes so with uh",
    "start": "962560",
    "end": "968560"
  },
  {
    "text": "ecs you just need to make sure that the ecs agent is present um and then it also",
    "start": "968560",
    "end": "973680"
  },
  {
    "text": "works with eks also yes that is 100 supported configuration",
    "start": "973680",
    "end": "979199"
  },
  {
    "text": "great thanks lynn appreciate that so that was the only question that we had coming so far from the audience so",
    "start": "979199",
    "end": "984320"
  },
  {
    "text": "again if you do have additional questions please feel free to put them into the chat and we'll get them answered here today throughout the",
    "start": "984320",
    "end": "989440"
  },
  {
    "text": "episode uh mike i believe you are going to be next and you had some api gateway topics that you uh that",
    "start": "989440",
    "end": "996720"
  },
  {
    "text": "you wanted to uh to talk about today yeah absolutely um so we had a question",
    "start": "996720",
    "end": "1003440"
  },
  {
    "start": "1002000",
    "end": "1454000"
  },
  {
    "text": "come in from repost about how the cache encrypt encryption mechanism works for api gateway um i'm going to jump in and",
    "start": "1003440",
    "end": "1010800"
  },
  {
    "text": "talk a little bit about kind of lay some groundwork about what um what api gateway is and what you might need it",
    "start": "1010800",
    "end": "1016959"
  },
  {
    "text": "for first um so first of all let's talk about what an api is and",
    "start": "1016959",
    "end": "1022959"
  },
  {
    "text": "just breaking down the question to give some background and those who might not be familiar and an api is a way for developers to interact with data from",
    "start": "1022959",
    "end": "1030000"
  },
  {
    "text": "from another source or to another source um for instance uh sites like facebook or twitter might",
    "start": "1030000",
    "end": "1036640"
  },
  {
    "text": "have a an api to be able to um to be able to interface with uh with with the",
    "start": "1036640",
    "end": "1042240"
  },
  {
    "text": "social network in that way just a basically a a catalog of functions to be",
    "start": "1042240",
    "end": "1047600"
  },
  {
    "text": "able to interact with a um with a product or service um and what we",
    "start": "1047600",
    "end": "1054080"
  },
  {
    "text": "have and at aws to support you with this is uh amazon api gateway and an api",
    "start": "1054080",
    "end": "1062240"
  },
  {
    "text": "kind of acts as a front door for applications to access data or business logic or functionality from your backend",
    "start": "1062240",
    "end": "1067600"
  },
  {
    "text": "services and using api gateway you can create restful apis and websocket apis",
    "start": "1067600",
    "end": "1073679"
  },
  {
    "text": "and enable real-time two-way communication for applications an api gateway supports containerized and",
    "start": "1073679",
    "end": "1079600"
  },
  {
    "text": "serverless workloads as well as web applications uh api gateway handles all the tasks involved in accepting and",
    "start": "1079600",
    "end": "1086320"
  },
  {
    "text": "processing up to hundreds and thousands of concurrent api calls including like traffic management cross origin resource",
    "start": "1086320",
    "end": "1093280"
  },
  {
    "text": "sharing um authorization access control throttling monitoring api version",
    "start": "1093280",
    "end": "1098480"
  },
  {
    "text": "management and api gateway also has no minimum fees for startup call",
    "start": "1098480",
    "end": "1103679"
  },
  {
    "text": "and uh you only pay for api calls you receive an amount of data transferred out",
    "start": "1103679",
    "end": "1108799"
  },
  {
    "text": "and with the api gateway tiered pricing model you can reduce your cost as api usage scales",
    "start": "1108799",
    "end": "1116080"
  },
  {
    "text": "next up i have sort of a typical api structure how how an api might look um so an api",
    "start": "1116080",
    "end": "1125039"
  },
  {
    "text": "is sort of a front door to all the different things all the different distributed systems you might have in the background so in this case we have",
    "start": "1125039",
    "end": "1132400"
  },
  {
    "text": "even services that come in through um all these websites or mobile clients come in through https run through a",
    "start": "1132400",
    "end": "1140000"
  },
  {
    "text": "cloudfront distribution and then hit the api gateway and then from the api gateway that could",
    "start": "1140000",
    "end": "1147039"
  },
  {
    "text": "fan out into lambda functions public endpoints on amazon ec2 it could even go back to your",
    "start": "1147039",
    "end": "1153200"
  },
  {
    "text": "own premise data center to pull data from there and in doing this some of these operations are quite",
    "start": "1153200",
    "end": "1159200"
  },
  {
    "text": "costly as they have a bunch of hops to go through behind api gateway to be able to reach into",
    "start": "1159200",
    "end": "1165039"
  },
  {
    "text": "wherever they're accessing the data or putting the data to um so we created something called apa api",
    "start": "1165039",
    "end": "1171760"
  },
  {
    "text": "gateway cache and caching is just for those who don't know caching is just a way to be able to",
    "start": "1171760",
    "end": "1177360"
  },
  {
    "text": "store data um as calls come in uh to be able to have that data handy for",
    "start": "1177360",
    "end": "1183679"
  },
  {
    "text": "if the same call comes again to be able to respond back with the same information um so uh this caching mechanism that",
    "start": "1183679",
    "end": "1192000"
  },
  {
    "text": "that aws provides to the api gateway is",
    "start": "1192000",
    "end": "1197679"
  },
  {
    "text": "when when this cache is enabled all the get methods have cache enabled by default and you can override",
    "start": "1197679",
    "end": "1205280"
  },
  {
    "text": "and enable cache on individual methods and special specify parameters to be included in the cache key but but um",
    "start": "1205280",
    "end": "1212400"
  },
  {
    "text": "by default uh the cache key is built up of a namespace which is a customer configurable",
    "start": "1212400",
    "end": "1218480"
  },
  {
    "text": "field that is usually the resource id um also the http method so this would be either get",
    "start": "1218480",
    "end": "1225440"
  },
  {
    "text": "or put or post and uh cache key parameters which is a like a combination of the method and",
    "start": "1225440",
    "end": "1232799"
  },
  {
    "text": "integration header query string path parameter and a version number the api",
    "start": "1232799",
    "end": "1238159"
  },
  {
    "text": "so what this results in is whenever a customer or whomever reaches into your api gateway",
    "start": "1238159",
    "end": "1245039"
  },
  {
    "text": "and makes a call to be able to get some particular piece of data um this key is",
    "start": "1245039",
    "end": "1250159"
  },
  {
    "text": "built to be able to provide that data directly back to the um to the caller so",
    "start": "1250159",
    "end": "1255200"
  },
  {
    "text": "it speeds up uh response time to your customer so it looks best to your customer to be able to have these quick",
    "start": "1255200",
    "end": "1261200"
  },
  {
    "text": "responses and also it eliminates as much traffic on your system",
    "start": "1261200",
    "end": "1267200"
  },
  {
    "text": "so as i mentioned if you had data that was stored in your own prim data center",
    "start": "1267200",
    "end": "1273200"
  },
  {
    "text": "then this data this data wouldn't have to be fetched all the way through all those hops to get back there",
    "start": "1273200",
    "end": "1278640"
  },
  {
    "text": "um so this cache is also uh hipaa compliant um so this these data",
    "start": "1278640",
    "end": "1285520"
  },
  {
    "text": "that are stored in here are are compliant with um with for uh to allow",
    "start": "1285520",
    "end": "1290559"
  },
  {
    "text": "you to store policy holder information um the next i wanted to talk about how the",
    "start": "1290559",
    "end": "1296480"
  },
  {
    "text": "caching actually works um so uh you can override single stage cache level",
    "start": "1296480",
    "end": "1303440"
  },
  {
    "text": "settings by enabling or disabling cash for a specific method or you can increa increase or decrease ttl",
    "start": "1303440",
    "end": "1310320"
  },
  {
    "text": "periods uh time to live periods for each of these cash things by by turning encryption on or off for uh cash",
    "start": "1310320",
    "end": "1317840"
  },
  {
    "text": "um so api gateway caching is encrypted uh or is implemented by using client-side",
    "start": "1317840",
    "end": "1324480"
  },
  {
    "text": "encryption with kms and uh when encryption is able to all the cache data are encrypted using aes 256 keys from",
    "start": "1324480",
    "end": "1331919"
  },
  {
    "text": "kms before being passed on to the caching service a new kms key is received every 15",
    "start": "1331919",
    "end": "1338240"
  },
  {
    "text": "minutes to encrypt the data prior to storing it so",
    "start": "1338240",
    "end": "1343600"
  },
  {
    "text": "as you can see there's a workflow that goes through how uh cache encryption works um",
    "start": "1343600",
    "end": "1350320"
  },
  {
    "text": "request comes in from the customer if it comes into the api gateway it looks if it's a cache hit it goes and gets a",
    "start": "1350320",
    "end": "1356880"
  },
  {
    "text": "result with the cache key decrypts that data sends the decrypted data back to the customer and if it's a cache miss uh",
    "start": "1356880",
    "end": "1364640"
  },
  {
    "text": "it goes in encrypts that data with the cache key that i mentioned earlier encrypts that data stores it in the",
    "start": "1364640",
    "end": "1371600"
  },
  {
    "text": "in the cache and then returns that data back to the customer um so that's how uh that's how encryption",
    "start": "1371600",
    "end": "1378240"
  },
  {
    "text": "works with api gateway any any questions from the field about uh about this",
    "start": "1378240",
    "end": "1384640"
  },
  {
    "text": "hey mike thanks uh for covering that and thanks everyone for bearing with the uh technical difficulties i had were kind",
    "start": "1386640",
    "end": "1393039"
  },
  {
    "text": "of dropped off the uh face to planet for a second there so uh no current questions that came in from the audience so please if you do",
    "start": "1393039",
    "end": "1399760"
  },
  {
    "text": "have questions feel free to post them here in the chat and we'll be happy to uh get to those so",
    "start": "1399760",
    "end": "1405600"
  },
  {
    "text": "um well we uh right rob well we do wait for questions i do have one are the",
    "start": "1405600",
    "end": "1410799"
  },
  {
    "text": "mike are the cash keys themselves like are they encrypted or how does how does that work to keep that secure",
    "start": "1410799",
    "end": "1418080"
  },
  {
    "text": "yeah that's a great question the cash keys are not encrypted um just because these are just a combination of the data",
    "start": "1418080",
    "end": "1424240"
  },
  {
    "text": "that have come in from uh from outside this is just that if we were to encrypt it we wouldn't be",
    "start": "1424240",
    "end": "1430559"
  },
  {
    "text": "able to get the cash out with the key so um so that's uh so the cash keys are not",
    "start": "1430559",
    "end": "1435840"
  },
  {
    "text": "encrypted yeah gotcha so again if you do have additional",
    "start": "1435840",
    "end": "1441200"
  },
  {
    "text": "questions please feel free to put them into the chat and we'll get them answered here today throughout the episode um but i'm going to take over",
    "start": "1441200",
    "end": "1446960"
  },
  {
    "text": "for clint and cover our next question that we had uh come in on repost which was about uh using some lambda for",
    "start": "1446960",
    "end": "1453600"
  },
  {
    "text": "automation so we had a question that was submitted uh for lambda automation here",
    "start": "1453600",
    "end": "1459360"
  },
  {
    "start": "1454000",
    "end": "2393000"
  },
  {
    "text": "and uh looking at it it's i'm working on some pocs to migrate applications from on-premise to aws they wanted to know",
    "start": "1459360",
    "end": "1465520"
  },
  {
    "text": "what can i automate using lambda if i deploy and manage workloads from say an amazon eks cluster resources like eobs",
    "start": "1465520",
    "end": "1472240"
  },
  {
    "text": "ecr rds just kind of thinking of some different use cases so as we're kind of looking at going through it um overall",
    "start": "1472240",
    "end": "1479120"
  },
  {
    "text": "really kind of an ambiguous question of things so i'm going to cover a little bit on aws lambda and servless in",
    "start": "1479120",
    "end": "1484559"
  },
  {
    "text": "general and then also kind of talk a little bit about how you can use lambdo specifically in a eks scenario on how",
    "start": "1484559",
    "end": "1491919"
  },
  {
    "text": "you can update and do things here so um we will get back in and i'll walk",
    "start": "1491919",
    "end": "1497039"
  },
  {
    "text": "through and show in the actual presentation a little bit about you know on aws lambda and how it's been around",
    "start": "1497039",
    "end": "1503520"
  },
  {
    "text": "for years uh it has thousands of customers that are implementing and using it uh and that has kind of led to",
    "start": "1503520",
    "end": "1509760"
  },
  {
    "text": "uh trillions of landlords executions per month right so as we get going through here",
    "start": "1509760",
    "end": "1515360"
  },
  {
    "text": "we're going to talk a lot about you know automating tasks and doing different things here right and in the iterations of customers adopting",
    "start": "1515360",
    "end": "1522080"
  },
  {
    "text": "aws lambda and having these different iterations it's led to you know some different design patterns on ways that",
    "start": "1522080",
    "end": "1527919"
  },
  {
    "text": "people bring workloads to aws i want to kind of touch on this because it will help a little bit on the overall",
    "start": "1527919",
    "end": "1535120"
  },
  {
    "text": "uh you know automating those tasks with vks or ec2 ebs rds and a lot of",
    "start": "1535120",
    "end": "1540640"
  },
  {
    "text": "different things so one main reason why you can adopt and use and why this person's kind of looking to add this is",
    "start": "1540640",
    "end": "1547200"
  },
  {
    "text": "reduce the amount of do-it-yourself that you have to do within your aws environment so uh where you may be able to retire",
    "start": "1547200",
    "end": "1554320"
  },
  {
    "text": "things that you have to manually log into the console to do react to ec2 instances that high cpu instead you",
    "start": "1554320",
    "end": "1560640"
  },
  {
    "text": "could have automated tasks you do as a move towards uh really using things that are available to you to",
    "start": "1560640",
    "end": "1567440"
  },
  {
    "text": "free up time to actually develop your application uh you know with aws support a lot of things we try and help our",
    "start": "1567440",
    "end": "1573120"
  },
  {
    "text": "customers with as tams is to be operationally efficient and deliver and so when you maybe migrate your",
    "start": "1573120",
    "end": "1579279"
  },
  {
    "text": "environment into aws it may have started as a lift and shift and you may want to modernize that right whether you're",
    "start": "1579279",
    "end": "1584559"
  },
  {
    "text": "looking at re-platforming it or refactoring it layering in these automation tasks and being able to remove the overall",
    "start": "1584559",
    "end": "1592000"
  },
  {
    "text": "manual interaction is you know kind of key and so as we go through looking at this we move",
    "start": "1592000",
    "end": "1597039"
  },
  {
    "text": "from people doing things in your environment to services and automation basically doing things in your",
    "start": "1597039",
    "end": "1603600"
  },
  {
    "text": "environment for you and we do that by having a lot of small pieces loosely joined together where we kind of have a",
    "start": "1603600",
    "end": "1609120"
  },
  {
    "text": "decoupled architecture where we can align what we call an event driven setup instead of uh you know you having to be",
    "start": "1609120",
    "end": "1616080"
  },
  {
    "text": "people driven on it right so we have a number of different aws services clint touched on ecs fargate",
    "start": "1616080",
    "end": "1622559"
  },
  {
    "text": "which is a serverless containers orchestration platform that we have we've got other ones that you may not",
    "start": "1622559",
    "end": "1627679"
  },
  {
    "text": "think as serverless but things like s3 sqs dynamodb",
    "start": "1627679",
    "end": "1633440"
  },
  {
    "text": "the simple workflows a lot of different items and these will allow you to contribute to this event driven",
    "start": "1633440",
    "end": "1638799"
  },
  {
    "text": "architecture so you can use events to automate things in your account so instead of having um",
    "start": "1638799",
    "end": "1645200"
  },
  {
    "text": "to create say you know new snapshots of things in your environment and go into the console and",
    "start": "1645200",
    "end": "1650240"
  },
  {
    "text": "do that or have somebody actually type a command that does this and install tools locally on your machine you can have it",
    "start": "1650240",
    "end": "1655760"
  },
  {
    "text": "kind of automate in fashion for you and so that's what we really want to kind of cover today is we're answering",
    "start": "1655760",
    "end": "1660960"
  },
  {
    "text": "the question towards the eks you know automated tasks is leveraging it automation in response to infrastructure",
    "start": "1660960",
    "end": "1666799"
  },
  {
    "text": "events in your aws account so again responding to a disruption you can leverage aws lambda to do so using",
    "start": "1666799",
    "end": "1673600"
  },
  {
    "text": "things like event bridge where an event may trigger inside of your account that sells lambda to",
    "start": "1673600",
    "end": "1679520"
  },
  {
    "text": "do something for you this could be i had a use case for a customer this looks into",
    "start": "1679520",
    "end": "1684799"
  },
  {
    "text": "auto scaling as well with ec2 so within auto scaling uh in ec2 we have instance",
    "start": "1684799",
    "end": "1690480"
  },
  {
    "text": "life cycles and the life cycle components essentially when a instance transitions from you know starting to",
    "start": "1690480",
    "end": "1696559"
  },
  {
    "text": "being available to actually use for you you may leverage a life cycle hook to implement something uh you may like to",
    "start": "1696559",
    "end": "1703360"
  },
  {
    "text": "use a lifecycle hook when instance terminates as well so in my customers use case they had a bunch of windows",
    "start": "1703360",
    "end": "1709919"
  },
  {
    "text": "servers that they use and they used the seamless 80 domain join feature with an ec2 to get the instances into active",
    "start": "1709919",
    "end": "1716720"
  },
  {
    "text": "directory but every time they had auto scaling events where an ec2 instance would be removed they had to go in and manually",
    "start": "1716720",
    "end": "1723679"
  },
  {
    "text": "uh clean up the domain object from active directory because so if you just shut off an instance uh or shut off a",
    "start": "1723679",
    "end": "1729840"
  },
  {
    "text": "server even an active directory outside of aws you will just be left with a computer object that is there in",
    "start": "1729840",
    "end": "1736880"
  },
  {
    "text": "the background um and you may kind of have you know thousands of those in the long run and you may not want to keep those",
    "start": "1736880",
    "end": "1743279"
  },
  {
    "text": "so before using it automation and events to drive this they had to set up this",
    "start": "1743279",
    "end": "1748799"
  },
  {
    "text": "script essentially that would monitor for last password change on uh their windows servers",
    "start": "1748799",
    "end": "1754399"
  },
  {
    "text": "and it would move it to a specific organizational unit and their active directory to disable it they'd have to",
    "start": "1754399",
    "end": "1759520"
  },
  {
    "text": "verify that have somebody actually go back out and then clean up those servers that had been out there for say 90 days",
    "start": "1759520",
    "end": "1765760"
  },
  {
    "text": "or 180 days without you know being changed after that and it really required time in order to",
    "start": "1765760",
    "end": "1771279"
  },
  {
    "text": "be able to do this by leveraging lifecycle hooks and lambdas into that instead they can",
    "start": "1771279",
    "end": "1776720"
  },
  {
    "text": "actually have it feed the instance id to the lambda and say hey run this",
    "start": "1776720",
    "end": "1782320"
  },
  {
    "text": "powershell command on that using um the remote connectivity to the instance to do a domain disk join and that way it",
    "start": "1782320",
    "end": "1788720"
  },
  {
    "text": "would clean up the object for them so you can use it to you know help automate a number of different",
    "start": "1788720",
    "end": "1795279"
  },
  {
    "text": "activities inside of your aws account um we have a bunch of additional services for security like guard duty and",
    "start": "1795279",
    "end": "1801360"
  },
  {
    "text": "security hub there's automatic remediation actions that you can set up that are again event driven from say a",
    "start": "1801360",
    "end": "1807520"
  },
  {
    "text": "finding that generates in guard duty allowing you to again have a lambda function run that",
    "start": "1807520",
    "end": "1813840"
  },
  {
    "text": "will take an action to say remove a rule from a security group or add a rule to security group or even just change a",
    "start": "1813840",
    "end": "1819919"
  },
  {
    "text": "security group on an ec2 instance to help you protect your environment quicker without having to rely on somebody logging into",
    "start": "1819919",
    "end": "1826880"
  },
  {
    "text": "your aws account to do so so a lot of additional items that you can kind of implement and use there as",
    "start": "1826880",
    "end": "1832880"
  },
  {
    "text": "well today specifically though to get back to how you can use this with um eks and",
    "start": "1832880",
    "end": "1839600"
  },
  {
    "text": "kind of automating some of the tasks that you might have in eks uh we're going to talk to us about one specific",
    "start": "1839600",
    "end": "1845039"
  },
  {
    "text": "use case and we'll provide a couple links into the chat as well uh for how this uh actually works and we'll take a",
    "start": "1845039",
    "end": "1851120"
  },
  {
    "text": "look here in just a second at a um blog article that we have out there that will walk you through how you can",
    "start": "1851120",
    "end": "1856799"
  },
  {
    "text": "implement using lambda with your eks cluster to take care of uh updates and stuff so",
    "start": "1856799",
    "end": "1862240"
  },
  {
    "text": "uh and so main thing really just showing a little architectural diagram here and you can review the um the blog online",
    "start": "1862240",
    "end": "1868240"
  },
  {
    "text": "with this uh we want to be able to leverage lambda here to remove uh and this goes back to the whole iot",
    "start": "1868240",
    "end": "1874320"
  },
  {
    "text": "automation moving do it yourself right uh as we get into this it's basically being able to leverage a uh lambda in",
    "start": "1874320",
    "end": "1881679"
  },
  {
    "text": "order to be able to update your eks clusters for you traditionally as we would be looking at a administration of",
    "start": "1881679",
    "end": "1888559"
  },
  {
    "text": "an eks cluster or communities in general you'll use tools like eksctl or cubectl",
    "start": "1888559",
    "end": "1895279"
  },
  {
    "text": "in order to update or make configuration changes to your elastic kubernetes services clusters",
    "start": "1895279",
    "end": "1901600"
  },
  {
    "text": "right within aws and so with that you have to then also give permissions to each individual user",
    "start": "1901600",
    "end": "1908159"
  },
  {
    "text": "that's going to be uh implementing these changes hope that they don't make any uh misconfigurations within the environment",
    "start": "1908159",
    "end": "1915200"
  },
  {
    "text": "doing that and kind of you know have to add that additional trust as people come into the company leave a company uh",
    "start": "1915200",
    "end": "1921679"
  },
  {
    "text": "in order to administer this so by leveraging aws lambda in the blog if you take a look at that one uh it's going to",
    "start": "1921679",
    "end": "1927600"
  },
  {
    "text": "help you to be able to set up and implement a fashion where you can remove the manual steps of creating a new user",
    "start": "1927600",
    "end": "1933840"
  },
  {
    "text": "creating configuration for them having them install tools like cube pedal and eks etl locally on their machine and",
    "start": "1933840",
    "end": "1939440"
  },
  {
    "text": "instead what it's going to be able to do is be able to leverage a versioned uh container that's going to live in our",
    "start": "1939440",
    "end": "1945039"
  },
  {
    "text": "elastic container registry service or ecr in aws where you're going to be able to keep a copy of that that's going to",
    "start": "1945039",
    "end": "1950320"
  },
  {
    "text": "get used to run on your lambda so as you make a config map that you're going to want to use to update your kubernetes",
    "start": "1950320",
    "end": "1957039"
  },
  {
    "text": "clusters instead of having to have your users install those tools locally they can instead just invoke a lambda",
    "start": "1957039",
    "end": "1962480"
  },
  {
    "text": "function that's going to have that container running on it to make those updates and changes to your kubernetes clusters for you so this",
    "start": "1962480",
    "end": "1969679"
  },
  {
    "text": "is going to free you up from having to administer users create different im roles uh within your account for maybe",
    "start": "1969679",
    "end": "1975679"
  },
  {
    "text": "each person uh and instead have one central policy that you can govern and control that has access to your various",
    "start": "1975679",
    "end": "1981279"
  },
  {
    "text": "eks clusters as well and help you just kind of reduce some of the overall um",
    "start": "1981279",
    "end": "1986720"
  },
  {
    "text": "administration steps that you're going to have in your environment so we'll essentially just be able to",
    "start": "1986720",
    "end": "1991840"
  },
  {
    "text": "have our json docs keep those in a repository as well that way you can keep versioning on",
    "start": "1991840",
    "end": "1997120"
  },
  {
    "text": "those so as we make a push for all of our customers we like to have them do everything as infrastructure as code",
    "start": "1997120",
    "end": "2003519"
  },
  {
    "text": "where possible and again that just helps you to remove uh you know people going into the class into the actual aws",
    "start": "2003519",
    "end": "2010080"
  },
  {
    "text": "console to make changes to your environment um freeing yourself from being able to have all those manual interactions that um as i mentioned",
    "start": "2010080",
    "end": "2017120"
  },
  {
    "text": "before uh you know having you do those should normally do and really move towards event driven infrastructure as",
    "start": "2017120",
    "end": "2023360"
  },
  {
    "text": "code uh and serverless where possible so that you can free up your administration so",
    "start": "2023360",
    "end": "2028480"
  },
  {
    "text": "um that uh covers kind of a recap of everything i wanted to cover in the",
    "start": "2028480",
    "end": "2033840"
  },
  {
    "text": "overall items before we got into uh a little technical difficulties there so",
    "start": "2033840",
    "end": "2039519"
  },
  {
    "text": "uh stop there just to see if we have any questions from the audience uh bring back mike",
    "start": "2039519",
    "end": "2044559"
  },
  {
    "text": "and clint as well yeah hey rob thanks for for circling circling back on that and welcome back",
    "start": "2044559",
    "end": "2050878"
  },
  {
    "text": "to the to the face of the planet it's good to have you here uh so we did have a question come in but",
    "start": "2050879",
    "end": "2057599"
  },
  {
    "text": "it was unrelated to really the the topic of the day being serverless but i do think it is a very good question and",
    "start": "2057599",
    "end": "2065280"
  },
  {
    "text": "valid question as users look to migrate you know workloads and things of that nature to the cloud so this one comes",
    "start": "2065280",
    "end": "2071679"
  },
  {
    "text": "from cloud guru 2053 and they say hi thank you for a very imp uh thank you",
    "start": "2071679",
    "end": "2077280"
  },
  {
    "text": "for very informative details uh quick unrelated question as they say what would be the mess the best approach to",
    "start": "2077280",
    "end": "2083919"
  },
  {
    "text": "dmz migration and i think the the best way to",
    "start": "2083919",
    "end": "2089520"
  },
  {
    "text": "answer that is we have a vast array of services that can help you actually migrate",
    "start": "2089520",
    "end": "2095358"
  },
  {
    "text": "the services or computers you know virtual machines databases things of that nature running on in your",
    "start": "2095359",
    "end": "2101040"
  },
  {
    "text": "on-premises environment that can help you with that um but coming up with like a secure",
    "start": "2101040",
    "end": "2106800"
  },
  {
    "text": "multi-account strategy and being able to to segregate out you know the the environment that's dmz",
    "start": "2106800",
    "end": "2114480"
  },
  {
    "text": "specific because that's chances are that's very very critical sort of information external facing you want to",
    "start": "2114480",
    "end": "2120640"
  },
  {
    "text": "make sure that you have a very small blast radius there so i would create a separate recommend creating a separate",
    "start": "2120640",
    "end": "2126160"
  },
  {
    "text": "aws account to handle that information and then you know create um peering or transit",
    "start": "2126160",
    "end": "2133040"
  },
  {
    "text": "gateway connections to other accounts that it might need to connect to i can throw a link to multiple account",
    "start": "2133040",
    "end": "2140480"
  },
  {
    "text": "strategy white paper that we have here into the chat but uh mike rob is there any maybe alternate approaches or you",
    "start": "2140480",
    "end": "2147520"
  },
  {
    "text": "know different thoughts that you might have on that topic oh yeah i can add a little bit to that",
    "start": "2147520",
    "end": "2153200"
  },
  {
    "text": "right you mentioned yeah multi-account strategy is good as far as like if you're talking about them primarily your web services or your front end um it",
    "start": "2153200",
    "end": "2160560"
  },
  {
    "text": "kind of depends right uh if you want to move it over just as a straight you know i'll kind of",
    "start": "2160560",
    "end": "2165920"
  },
  {
    "text": "re-platform you taking it from on premises into aws keep it all as ec2 instances",
    "start": "2165920",
    "end": "2171359"
  },
  {
    "text": "you can do that approach as well uh you know leverage things like nlbs albs in order to really kind of sit on the",
    "start": "2171359",
    "end": "2177200"
  },
  {
    "text": "public edge of your environment uh and then have you know a few different design consideration changes potentially",
    "start": "2177200",
    "end": "2182720"
  },
  {
    "text": "in aws than maybe what you would do on premise with your web services so um you definitely have a lot of resources",
    "start": "2182720",
    "end": "2189200"
  },
  {
    "text": "uh it's also a great question if you want to post it on repost.aws um we can you know you'll definitely get some good",
    "start": "2189200",
    "end": "2194800"
  },
  {
    "text": "answers there on migration strategies we do as i mentioned we have application migration services we've got",
    "start": "2194800",
    "end": "2201440"
  },
  {
    "text": "what was previous brandeis cloud endure for that to help you be able to easily replicate your on-premises environments into aws",
    "start": "2201440",
    "end": "2208400"
  },
  {
    "text": "we've got several migration tools lots of additional assistant resources to move things to aws",
    "start": "2208400",
    "end": "2215440"
  },
  {
    "text": "hopefully that helps says yeah there was they were saying here as in lift and shift so basically there if it's running",
    "start": "2215440",
    "end": "2221200"
  },
  {
    "text": "as like a virtual machine on premises you could utilize the server migration service to uh to shift that over but any",
    "start": "2221200",
    "end": "2228240"
  },
  {
    "text": "other ancillary services downstream that it connects to so if you had a database or things of that nature you're going to",
    "start": "2228240",
    "end": "2233359"
  },
  {
    "text": "make sure you want to make sure that you replicate those or migrate those out to the cloud as well",
    "start": "2233359",
    "end": "2241240"
  },
  {
    "text": "perfect uh we will uh pause here for a minute or so um gentlemen did you have",
    "start": "2242480",
    "end": "2247839"
  },
  {
    "text": "any closing comments for today um will we see if any other questions come through",
    "start": "2247839",
    "end": "2254400"
  },
  {
    "text": "it just to circle back what i was talking about overall as we were talking on my section for using lambda for eks as i touched on",
    "start": "2255119",
    "end": "2262640"
  },
  {
    "text": "before just overall event driven uh makes life easier i think for i.t administrators so um posted a couple",
    "start": "2262640",
    "end": "2269599"
  },
  {
    "text": "different uh uh links to different blogs and stuff today to take a look at as well as some",
    "start": "2269599",
    "end": "2275599"
  },
  {
    "text": "different resources for getting started with leveraging it automation in general with lambda but there's a lot",
    "start": "2275599",
    "end": "2281040"
  },
  {
    "text": "of additional resources definitely take a look at those mike anything you wanted to add as well",
    "start": "2281040",
    "end": "2288480"
  },
  {
    "text": "no i don't think so yeah yeah the the follow-up question from",
    "start": "2288480",
    "end": "2293599"
  },
  {
    "text": "cloud guru 2053 can we use cloudender well it's no longer known as cloud",
    "start": "2293599",
    "end": "2299119"
  },
  {
    "text": "indoor they renamed the product to aws elastic disaster recovery um so just",
    "start": "2299119",
    "end": "2305280"
  },
  {
    "text": "so you're looking for the the correct service in the console um or product documentation uh can we use that for for",
    "start": "2305280",
    "end": "2311760"
  },
  {
    "text": "dmz services and that i think the the important thing there is making sure that you read the the product",
    "start": "2311760",
    "end": "2317040"
  },
  {
    "text": "documentation to make sure you have like the correct ports open and communication from on-premises up to the cloud that",
    "start": "2317040",
    "end": "2322720"
  },
  {
    "text": "way you can establish connectivity and those jobs that you create the tasks that you",
    "start": "2322720",
    "end": "2328160"
  },
  {
    "text": "create flow as expected yeah great point",
    "start": "2328160",
    "end": "2333920"
  },
  {
    "text": "all right so yeah we don't have any other questions so everyone today we looked at and answered some of your",
    "start": "2333920",
    "end": "2338960"
  },
  {
    "text": "questions from aws repost uh specifically focus on serverless technology such as aws fargate lambda",
    "start": "2338960",
    "end": "2344800"
  },
  {
    "text": "and api gateway but if there are any questions that were not answered today you can post your questions over there on repost.aws",
    "start": "2344800",
    "end": "2352079"
  },
  {
    "text": "to receive answers from our community of aws experts and maybe have your question featured on a later show please email us",
    "start": "2352079",
    "end": "2358800"
  },
  {
    "text": "any feedback to aws supports you at amazon.com we want to hear from you let us know what else you'd like to see on",
    "start": "2358800",
    "end": "2364160"
  },
  {
    "text": "the show be sure to join us on monday march 14th at 8 a.m pacific we'll be talking about",
    "start": "2364160",
    "end": "2369760"
  },
  {
    "text": "securing your quantum development environment with amazon bracket thanks for joining us aws supports you",
    "start": "2369760",
    "end": "2375440"
  },
  {
    "text": "and happy cloud computing [Music]",
    "start": "2375440",
    "end": "2389749"
  },
  {
    "text": "you",
    "start": "2392160",
    "end": "2394240"
  }
]