[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "all right how is everyone doing today awesome an audience that responds I love",
    "start": "4430",
    "end": "11639"
  },
  {
    "text": "that so do any of these statements sound familiar",
    "start": "11639",
    "end": "18859"
  },
  {
    "text": "does the idea of emailing database credentials to developers does that make you cringe do you the",
    "start": "19220",
    "end": "28560"
  },
  {
    "text": "idea that you have to take down applications to rotate secrets does that sound wrong if that is true then you are",
    "start": "28560",
    "end": "37290"
  },
  {
    "text": "in the right session this is SEC 304 my name is apoorva Vashti I am the product manager for AWS",
    "start": "37290",
    "end": "44460"
  },
  {
    "text": "secrets manager and in the session I'll show how you can use secrets manager to",
    "start": "44460",
    "end": "50460"
  },
  {
    "text": "manage the lifecycle of your secrets and address these issues that are not great",
    "start": "50460",
    "end": "57980"
  },
  {
    "start": "59000",
    "end": "81000"
  },
  {
    "text": "now for those of you who are unfamiliar with secrets manager this is a service",
    "start": "59390",
    "end": "64470"
  },
  {
    "text": "we launched in April of this year the service makes it really easy to manage the lifecycle of your secrets service",
    "start": "64470",
    "end": "72060"
  },
  {
    "text": "also enables you to follow best practices such as rotating secrets and",
    "start": "72060",
    "end": "77460"
  },
  {
    "text": "encrypting your secrets so if you're an",
    "start": "77460",
    "end": "83189"
  },
  {
    "start": "81000",
    "end": "140000"
  },
  {
    "text": "IT admin who's responsible for storing and managing secrets now you can do all",
    "start": "83189",
    "end": "88740"
  },
  {
    "text": "of that from this one location do we have any idea admins in the crowd nice",
    "start": "88740",
    "end": "95460"
  },
  {
    "text": "we have a few security admins if you're a security admin who's this nice I see a",
    "start": "95460",
    "end": "102210"
  },
  {
    "text": "few hands that's really nice so if you're responsible for meeting the regulatory and compliance requirements",
    "start": "102210",
    "end": "108720"
  },
  {
    "text": "well secrets manager makes it really easy to do that with capabilities such",
    "start": "108720",
    "end": "113850"
  },
  {
    "text": "as rotating secrets automatically as well as encrypting secrets by default and finally developers any developers in",
    "start": "113850",
    "end": "122490"
  },
  {
    "text": "the house oh so many please as a developer you can convert the secrets",
    "start": "122490",
    "end": "129030"
  },
  {
    "text": "manager so that you don't have to worry about managing secrets AWS will do that for you while you focus on building",
    "start": "129030",
    "end": "136320"
  },
  {
    "text": "fantastic applications so over the next",
    "start": "136320",
    "end": "142590"
  },
  {
    "text": "20 minutes I'll introduce you to the capabilities of secrets manager I'll give you a peek behind the curtains to",
    "start": "142590",
    "end": "149550"
  },
  {
    "text": "help you understand how the service functions so that you have more you have a better understanding of the service as",
    "start": "149550",
    "end": "155970"
  },
  {
    "text": "well as more confidence in using the service next I'll use another 20 minutes",
    "start": "155970",
    "end": "162870"
  },
  {
    "text": "to introduce you to things that you should be thinking about as you adopt secrets manager I will include pro tips",
    "start": "162870",
    "end": "170550"
  },
  {
    "text": "that help you see around the corner and set up good practices so that you can manage your secrets at scale finally we",
    "start": "170550",
    "end": "178290"
  },
  {
    "text": "close with a demo so does this sound like a good use of your time all right",
    "start": "178290",
    "end": "184650"
  },
  {
    "text": "nice I do have a bunch of yes/no questions in the second half of the presentation so I hope you continue this",
    "start": "184650",
    "end": "191730"
  },
  {
    "text": "enthusiasm now before I dive into the",
    "start": "191730",
    "end": "197730"
  },
  {
    "start": "194000",
    "end": "290000"
  },
  {
    "text": "the capabilities of secrets manager let me give you a brief overview of why we launched this service as with any other",
    "start": "197730",
    "end": "205650"
  },
  {
    "text": "AWS service our story begins with customer feedback we heard from customers that managing secrets is",
    "start": "205650",
    "end": "212160"
  },
  {
    "text": "really important but it's really really hard does that sound familiar",
    "start": "212160",
    "end": "218660"
  },
  {
    "text": "our customers also said that they like I am roles right I am roles are fantastic",
    "start": "218780",
    "end": "224910"
  },
  {
    "text": "because they give you temporary AWS credentials automatically so if you",
    "start": "224910",
    "end": "230100"
  },
  {
    "text": "attach an I am role to any see to instance as the application owner you can focus on building a fantastic",
    "start": "230100",
    "end": "236310"
  },
  {
    "text": "application without worrying about how the application will communicate with",
    "start": "236310",
    "end": "241350"
  },
  {
    "text": "all the other AWS resources the role will automatically create short-term AWS",
    "start": "241350",
    "end": "247950"
  },
  {
    "text": "credentials deliver it to your ec2 instance and then rotate these credentials multiple times every day so",
    "start": "247950",
    "end": "255680"
  },
  {
    "text": "sorry the secrets management is taken off the table you don't have to worry",
    "start": "255680",
    "end": "262200"
  },
  {
    "text": "about it AWS does it for you so with this feedback in mind we figured",
    "start": "262200",
    "end": "267889"
  },
  {
    "text": "let's build secrets manager which will enable customers to manage the lifecycle of all other secrets",
    "start": "267889",
    "end": "273949"
  },
  {
    "text": "so database credentials SSH keys or tokens any of these credentials you",
    "start": "273949",
    "end": "280999"
  },
  {
    "text": "should be able to use secrets manager to store distribute and rotate automatically in terms of capabilities",
    "start": "280999",
    "end": "292939"
  },
  {
    "start": "290000",
    "end": "332000"
  },
  {
    "text": "I'll call out four key capabilities the first is secrets manager ensures that your secrets are secured second it",
    "start": "292939",
    "end": "301490"
  },
  {
    "text": "also enables you to tightly control who can do what with your secrets third it",
    "start": "301490",
    "end": "307490"
  },
  {
    "text": "enables you to rotate your secrets without impacting applications or developers and finally as with all of it",
    "start": "307490",
    "end": "316219"
  },
  {
    "text": "loud services this is a pay-as-you-go model so there are no long-term contracts licensing fees operational",
    "start": "316219",
    "end": "324169"
  },
  {
    "text": "costs things like that now I have a slide for each of these capabilities so",
    "start": "324169",
    "end": "329360"
  },
  {
    "text": "I'll go through that now the underlying",
    "start": "329360",
    "end": "337550"
  },
  {
    "start": "332000",
    "end": "425000"
  },
  {
    "text": "storage fabric for secrets manager offers an availability as a layer of",
    "start": "337550",
    "end": "343569"
  },
  {
    "text": "99.999% so what this means is you can be assured that your secrets will always be",
    "start": "343569",
    "end": "349099"
  },
  {
    "text": "available secrets manager encrypts your secrets by default so you'll never end",
    "start": "349099",
    "end": "354469"
  },
  {
    "text": "up in a situation where a secret was left unencrypted accidentally these",
    "start": "354469",
    "end": "359659"
  },
  {
    "text": "encryption keys live in your account and you have full control over them once",
    "start": "359659",
    "end": "364969"
  },
  {
    "text": "encrypted you can retrieve these secrets either through a publicly accessible endpoint or through a VPC endpoint",
    "start": "364969",
    "end": "372800"
  },
  {
    "text": "that's specific to only your organization secrets manager also",
    "start": "372800",
    "end": "379310"
  },
  {
    "text": "provides client-side caching libraries so you can cache your secrets locally and securely so that you're not impacted",
    "start": "379310",
    "end": "387080"
  },
  {
    "text": "by transient and network issues and things like that the see the service is",
    "start": "387080",
    "end": "394009"
  },
  {
    "text": "compliant with HIPAA and I'm happy to announce as of today the service is also",
    "start": "394009",
    "end": "399620"
  },
  {
    "text": "compliant with PCI and ISO",
    "start": "399620",
    "end": "403509"
  },
  {
    "text": "so the big take away with the storage story here is once you store your",
    "start": "404900",
    "end": "410009"
  },
  {
    "text": "secrets and secrets manager you don't have to worry about your developers viewing on managing secrets you have the",
    "start": "410009",
    "end": "417449"
  },
  {
    "text": "tools to ensure that your secrets are not visible to your developers now",
    "start": "417449",
    "end": "426840"
  },
  {
    "start": "425000",
    "end": "451000"
  },
  {
    "text": "storing secrets is really easy in a demo later on I'll show how you can store the secret and retrieve a secret from the",
    "start": "426840",
    "end": "433379"
  },
  {
    "text": "console but if you were using the CLI or the SDK you simply call the create",
    "start": "433379",
    "end": "439050"
  },
  {
    "text": "secret command to call the secret sorry to create the secret and to retrieve the",
    "start": "439050",
    "end": "444960"
  },
  {
    "text": "secret it's as simple as calling the get secret value command so we hope he spoke",
    "start": "444960",
    "end": "454199"
  },
  {
    "start": "451000",
    "end": "699000"
  },
  {
    "text": "about storage let me now speak about access control secrets manager offers a",
    "start": "454199",
    "end": "460110"
  },
  {
    "text": "variety of tools that enable you to tightly control who can do what with your secrets of course we offer",
    "start": "460110",
    "end": "467219"
  },
  {
    "text": "I am policies now I'm sure you're already familiar I am policies are super fine-grained so",
    "start": "467219",
    "end": "475349"
  },
  {
    "text": "you can write a policy that's employee Bob did data the test database whenever",
    "start": "475349",
    "end": "485189"
  },
  {
    "text": "he can't but he wants the but if he wants the database credentials for the production database he must come in from",
    "start": "485189",
    "end": "492779"
  },
  {
    "text": "the corporate IT network and he must provide a second factor of authentication so those are the kinds of",
    "start": "492779",
    "end": "499560"
  },
  {
    "text": "details that you can add in an iam policy to get very fine-grained access",
    "start": "499560",
    "end": "505800"
  },
  {
    "text": "control to your secrets the other interesting piece around access control",
    "start": "505800",
    "end": "512010"
  },
  {
    "text": "is resource based policies are you guys familiar with the concept of resource",
    "start": "512010",
    "end": "517260"
  },
  {
    "text": "based policies can I get a show of hands all right so about half the audience so",
    "start": "517260",
    "end": "523890"
  },
  {
    "text": "resource based policies are they are similar to keep all the season kms or as",
    "start": "523890",
    "end": "531420"
  },
  {
    "text": "the or bucket policies in s3 they act another mechanism to control access to",
    "start": "531420",
    "end": "537860"
  },
  {
    "text": "your secrets the the prototypical use case here would be cross account access",
    "start": "537860",
    "end": "543130"
  },
  {
    "text": "so let's consider this scenario let's say a business partner requires SSH",
    "start": "543130",
    "end": "551660"
  },
  {
    "text": "access to an ec2 instance to help troubleshoot well you could email them",
    "start": "551660",
    "end": "557660"
  },
  {
    "text": "the private key but the private SSH key but then you wouldn't have any control",
    "start": "557660",
    "end": "562790"
  },
  {
    "text": "on who that key is for would it do on the other hand you could store that key in secrets manager attach a resource",
    "start": "562790",
    "end": "570470"
  },
  {
    "text": "based policy that allows a role in the business partners account to retrieve the secret and then when the task is",
    "start": "570470",
    "end": "577610"
  },
  {
    "text": "over you can rotate your SSH key so the",
    "start": "577610",
    "end": "586190"
  },
  {
    "text": "next thing I will call out on this slide is tag based access control so secrets",
    "start": "586190",
    "end": "592370"
  },
  {
    "text": "managers supports the ability to tag secrets and this makes it really easy to organize your secrets and and use them",
    "start": "592370",
    "end": "601930"
  },
  {
    "text": "okay let me give you an example to make this more relatable let's say you have a",
    "start": "601930",
    "end": "607100"
  },
  {
    "text": "team called team equals Orden this team needs a variety of secrets you know SSH",
    "start": "607100",
    "end": "613910"
  },
  {
    "text": "keys or tokens database credentials stuff like that well you can store all",
    "start": "613910",
    "end": "620690"
  },
  {
    "text": "of these in secrets manager and for each secret add the tag team equals Odin",
    "start": "620690",
    "end": "627279"
  },
  {
    "text": "after that you can write one iam policy that grants access to all secrets tagged",
    "start": "627279",
    "end": "633350"
  },
  {
    "text": "team equals audible and now with this one policy all the team members can get",
    "start": "633350",
    "end": "640220"
  },
  {
    "text": "access to all the secrets required by the team now in the future if the team",
    "start": "640220",
    "end": "645319"
  },
  {
    "text": "adds more databases and has more database credentials well store them in secrets manager and",
    "start": "645319",
    "end": "651709"
  },
  {
    "text": "give the appropriate tag and that's it you do not need to worry about updating iam policies anymore because the",
    "start": "651709",
    "end": "659329"
  },
  {
    "text": "policies based off a tag that has already been put in place similarly if a",
    "start": "659329",
    "end": "664760"
  },
  {
    "text": "new employee joins the team you simply attach this one policy to them and they are good to go",
    "start": "664760",
    "end": "671459"
  },
  {
    "text": "there they have access to all the secrets that they need to perform their job without you spending a lot of time",
    "start": "671459",
    "end": "677309"
  },
  {
    "text": "figuring out the access control mechanisms and things like that so with",
    "start": "677309",
    "end": "685589"
  },
  {
    "text": "all of these tools it becomes really easier to prevent your employees from",
    "start": "685589",
    "end": "691050"
  },
  {
    "text": "using secrets that they shouldn't be using basically this helps you reduce secret sprawl now here's what a sample",
    "start": "691050",
    "end": "701910"
  },
  {
    "start": "699000",
    "end": "809000"
  },
  {
    "text": "iam policy could look like this policy grants the ability to read in the action",
    "start": "701910",
    "end": "709110"
  },
  {
    "text": "statement in the action section it ranch the ability to retrieve the value of the",
    "start": "709110",
    "end": "714629"
  },
  {
    "text": "secret so the value is the actual SSH key or the actual username and password",
    "start": "714629",
    "end": "720540"
  },
  {
    "text": "that you that you've stored in secrets manager in the accent in the action",
    "start": "720540",
    "end": "727709"
  },
  {
    "text": "section you'll notice that I also grant the the permissions to describe secret",
    "start": "727709",
    "end": "732740"
  },
  {
    "text": "this is this is powerful because you can use describe secret to read the metadata",
    "start": "732740",
    "end": "739529"
  },
  {
    "text": "of the secret metadata such as what's the description of the secret is this",
    "start": "739529",
    "end": "745559"
  },
  {
    "text": "secret set up for rotation are there any tags associated with the secret if yes",
    "start": "745559",
    "end": "751019"
  },
  {
    "text": "what those tags are so you can describe the secret to really understand what the",
    "start": "751019",
    "end": "756629"
  },
  {
    "text": "secret is for and how it should be used in the resource element you'll notice",
    "start": "756629",
    "end": "762809"
  },
  {
    "text": "that I restrict these permissions to a particular secret that's important right",
    "start": "762809",
    "end": "768240"
  },
  {
    "text": "you don't really want employees to have access to all your secrets so you can go",
    "start": "768240",
    "end": "773459"
  },
  {
    "text": "really fine-grained and define exactly which secrets they should be able to use",
    "start": "773459",
    "end": "778799"
  },
  {
    "text": "and describe later on in this presentation I talked about tag based access control and I show a sample",
    "start": "778799",
    "end": "785040"
  },
  {
    "text": "policy that will enable you to grant these permissions but at scale if you're",
    "start": "785040",
    "end": "793049"
  },
  {
    "text": "curious about iam policies I highly recommend session three one six one",
    "start": "793049",
    "end": "798509"
  },
  {
    "text": "Tuesday it's called I am see mastered and that'll be super helpful in making in figuring out how to",
    "start": "798509",
    "end": "805830"
  },
  {
    "text": "make the most of I am policies okay so",
    "start": "805830",
    "end": "811710"
  },
  {
    "start": "809000",
    "end": "918000"
  },
  {
    "text": "we spoke we spoke about storing secrets and we Stoke spoke about access control",
    "start": "811710",
    "end": "816930"
  },
  {
    "text": "the next key capability is the ability to rotate secrets now with secrets",
    "start": "816930",
    "end": "822570"
  },
  {
    "text": "manager we offer built-in integration for rotating credentials for databases that are hosted on RDS but if you have other",
    "start": "822570",
    "end": "831300"
  },
  {
    "text": "kinds of secrets you can store and rotate them to you simply go to secrets",
    "start": "831300",
    "end": "837360"
  },
  {
    "text": "manager add the secret and then write a custom lambda function to meet whatever",
    "start": "837360",
    "end": "843270"
  },
  {
    "text": "your rotation need is later on in the best practices section of this",
    "start": "843270",
    "end": "848400"
  },
  {
    "text": "presentation I will talk about things to keep in mind when when you setup rotation the key point here is once",
    "start": "848400",
    "end": "861720"
  },
  {
    "text": "you've setup once you've store the secret and secrets manager and you've set up automatic and safe rotation",
    "start": "861720",
    "end": "867680"
  },
  {
    "text": "you've essentially transformed a long-term secret into a short-term",
    "start": "867680",
    "end": "873060"
  },
  {
    "text": "secret so the database credential that used to live for years now becomes a",
    "start": "873060",
    "end": "878640"
  },
  {
    "text": "credential that's rotated let's say every 30 days or every seven days or even every day transforming this",
    "start": "878640",
    "end": "885540"
  },
  {
    "text": "long-term credential in to effectively a short-term credential and the base",
    "start": "885540",
    "end": "898370"
  },
  {
    "text": "manager makes all of this work is by using lambda functions and supporting",
    "start": "898370",
    "end": "903680"
  },
  {
    "text": "this concept called versions of secrets so in the next few slides I'll give you",
    "start": "903680",
    "end": "910040"
  },
  {
    "text": "a peek behind the curtains and I'll help you understand how secrets manager actually executes these rotations safely",
    "start": "910040",
    "end": "919300"
  },
  {
    "start": "918000",
    "end": "1045000"
  },
  {
    "text": "in a typical scenario if an application needs to retrieve data from a database",
    "start": "920350",
    "end": "926200"
  },
  {
    "text": "the application reaches out to secrets manager first it retrieves the database",
    "start": "926200",
    "end": "933200"
  },
  {
    "text": "credentials and then uses these credentials to retrieve data right pretty straightforward but now if you",
    "start": "933200",
    "end": "942290"
  },
  {
    "text": "choose to configure rotation secrets manager will create a lambda function in",
    "start": "942290",
    "end": "947420"
  },
  {
    "text": "the same vbc as your target database now based on the rotation frequency that you",
    "start": "947420",
    "end": "953720"
  },
  {
    "text": "define this rotation function will trigger a rotation what this means is it",
    "start": "953720",
    "end": "960560"
  },
  {
    "text": "will create a new credential benefit it will give this credential pair a label",
    "start": "960560",
    "end": "965959"
  },
  {
    "text": "called AWS pending it will then store this credential pair in the database and",
    "start": "965959",
    "end": "972260"
  },
  {
    "text": "run a variety of checks to ensure that this credential pair functions the way",
    "start": "972260",
    "end": "977390"
  },
  {
    "text": "it should function now throughout this entire process if the application",
    "start": "977390",
    "end": "982700"
  },
  {
    "text": "requires access to your secret or access to your database the label that's the",
    "start": "982700",
    "end": "989480"
  },
  {
    "text": "version of the secret that's labeled AWS current is still functional so your application is not impacted your",
    "start": "989480",
    "end": "995600"
  },
  {
    "text": "application continues to function the way it should function now one secrets",
    "start": "995600",
    "end": "1001510"
  },
  {
    "text": "manager ensures that the new credential is behaving appropriately it updates the",
    "start": "1001510",
    "end": "1008170"
  },
  {
    "text": "version on this new credential to AWS current and the previous version of the",
    "start": "1008170",
    "end": "1013959"
  },
  {
    "text": "credential is labeled AWS previous from this point onwards if the application",
    "start": "1013959",
    "end": "1020290"
  },
  {
    "text": "wants to retrieve a data from the database it reaches out the secrets manager and ends up getting the newer",
    "start": "1020290",
    "end": "1027520"
  },
  {
    "text": "credential so the previous version the one that's now",
    "start": "1027520",
    "end": "1033310"
  },
  {
    "text": "labeled AWS previous that will become invalidated either immediately or at the",
    "start": "1033310",
    "end": "1039010"
  },
  {
    "text": "next rotation it depends on how you've chosen to rotate your secret",
    "start": "1039010",
    "end": "1045060"
  },
  {
    "start": "1045000",
    "end": "1134000"
  },
  {
    "text": "the last key capability that I'd like to call out today is the payment model with",
    "start": "1046920",
    "end": "1054610"
  },
  {
    "text": "secrets manager there are no long-term contacts licensing fees operational expenses things like that it's all about",
    "start": "1054610",
    "end": "1061650"
  },
  {
    "text": "paying for what you use as far as policing is concerned there are two key",
    "start": "1061650",
    "end": "1067690"
  },
  {
    "text": "attributes that I'd like to call out right here the first is when you rotate",
    "start": "1067690",
    "end": "1073390"
  },
  {
    "text": "the secret you pay for calling the rotation API you don't pay for creating",
    "start": "1073390",
    "end": "1079810"
  },
  {
    "text": "a new secret because as I showed you previously you haven't created a new secret you just created a new version so",
    "start": "1079810",
    "end": "1087360"
  },
  {
    "text": "you are not paying an extra 40 cents for this new secret second we support",
    "start": "1087360",
    "end": "1096040"
  },
  {
    "text": "client-side cache in libraries in launch client-side caching for Java and JDBC",
    "start": "1096040",
    "end": "1102190"
  },
  {
    "text": "drivers last week and you can use these caching libraries to cache your secrets locally so that you make fewer API calls",
    "start": "1102190",
    "end": "1110110"
  },
  {
    "text": "to secrets manager so that's another mechanism to control the amount of API calls that are metered and built by",
    "start": "1110110",
    "end": "1116530"
  },
  {
    "text": "secrets manager later in this presentation I'll talk about practical",
    "start": "1116530",
    "end": "1121870"
  },
  {
    "text": "considerations that you should keep in mind when you decide how frequently you should rotate a secret or how frequently",
    "start": "1121870",
    "end": "1128980"
  },
  {
    "text": "you should rotate this retrieve a secret from secrets manager okay now that I've",
    "start": "1128980",
    "end": "1137010"
  },
  {
    "start": "1134000",
    "end": "1495000"
  },
  {
    "text": "described the key capabilities of secrets manager I'll run through a quick demo the code will be available at this",
    "start": "1137010",
    "end": "1144580"
  },
  {
    "text": "bitly link starting Thursday at 10 a.m.",
    "start": "1144580",
    "end": "1149970"
  },
  {
    "text": "so in this demo I use a CloudFormation template to create a public subnet where",
    "start": "1150840",
    "end": "1157030"
  },
  {
    "text": "I place a bastion host and a private subnet where I keep my my database",
    "start": "1157030",
    "end": "1164140"
  },
  {
    "text": "well as my ec2 hosts when I created the database I also provided it a username",
    "start": "1164140",
    "end": "1171610"
  },
  {
    "text": "and a password for the master credentials and I also opted to set up",
    "start": "1171610",
    "end": "1176710"
  },
  {
    "text": "rotation so the rotation lambda function lives in the same V PC as the database",
    "start": "1176710",
    "end": "1184050"
  },
  {
    "text": "so now I'll quickly switch gears and I'll show you what what all of this",
    "start": "1184050",
    "end": "1189880"
  },
  {
    "text": "looks like from the console",
    "start": "1189880",
    "end": "1193110"
  },
  {
    "text": "all right as I mentioned previously I have created this database in a private",
    "start": "1217410",
    "end": "1224280"
  },
  {
    "text": "subnet so this database does not have sorry this this database does does not",
    "start": "1224280",
    "end": "1232650"
  },
  {
    "text": "have internet connectivity there is an endpoint but it's not publicly accessible I've also created a bastion",
    "start": "1232650",
    "end": "1246090"
  },
  {
    "text": "host in a publicly accessible subnet so you see her this is the IP address for",
    "start": "1246090",
    "end": "1252660"
  },
  {
    "text": "this subnet IP address for this host and",
    "start": "1252660",
    "end": "1257930"
  },
  {
    "text": "I have ec2 instances in the in the private subnet that are not accessible",
    "start": "1257930",
    "end": "1264270"
  },
  {
    "text": "directly from from from the outside world okay now what I will do is I'll go",
    "start": "1264270",
    "end": "1272700"
  },
  {
    "text": "to the secrets manager console I'll store the credentials for this database in secrets manager and then I'll trigger",
    "start": "1272700",
    "end": "1281400"
  },
  {
    "text": "a rotation to to programmatically rotate",
    "start": "1281400",
    "end": "1286500"
  },
  {
    "text": "this credential so to get started I log into the into the secrets manager",
    "start": "1286500",
    "end": "1293760"
  },
  {
    "text": "console so here's what the flow looks",
    "start": "1293760",
    "end": "1303750"
  },
  {
    "text": "like I first select what type of secret this is well this is for an IDs database",
    "start": "1303750",
    "end": "1309150"
  },
  {
    "text": "why select the first option I provide the username and the password",
    "start": "1309150",
    "end": "1315150"
  },
  {
    "text": "I choose to encrypt using the default",
    "start": "1315150",
    "end": "1320280"
  },
  {
    "text": "encryption key later on I'll talk about how to make the decision to use either the default key or or C&K",
    "start": "1320280",
    "end": "1328760"
  },
  {
    "text": "next I select which database this credential is for I'll provide the",
    "start": "1328760",
    "end": "1336480"
  },
  {
    "text": "secret easy to remember name and a meaningful name so",
    "start": "1336480",
    "end": "1342380"
  },
  {
    "text": "and a description",
    "start": "1352950",
    "end": "1356940"
  },
  {
    "text": "I can also add tags so let's stick with",
    "start": "1375170",
    "end": "1381980"
  },
  {
    "text": "the example of the team name next I",
    "start": "1381980",
    "end": "1390740"
  },
  {
    "text": "choose how frequently I want to rotate this this credential so I can set up on",
    "start": "1390740",
    "end": "1397070"
  },
  {
    "text": "automatic rotation I choose the frequency since this is the master",
    "start": "1397070",
    "end": "1404660"
  },
  {
    "text": "credential for the database I choose the first option so and now I just have to",
    "start": "1404660",
    "end": "1422000"
  },
  {
    "text": "press the store button I ended up storing this credential previously because this triggers a cloud completing",
    "start": "1422000",
    "end": "1431090"
  },
  {
    "text": "with the rotation process triggers a CloudFormation template which creates the rotation lambda in the same VPC as",
    "start": "1431090",
    "end": "1437390"
  },
  {
    "text": "your resource and uses this rotation lambda to execute the rotation I can",
    "start": "1437390",
    "end": "1442640"
  },
  {
    "text": "show you what all of that looks like right here",
    "start": "1442640",
    "end": "1447279"
  },
  {
    "text": "and so these are all the steps that it had to take place for for this process",
    "start": "1463440",
    "end": "1468720"
  },
  {
    "text": "to work the years have so I just showed",
    "start": "1468720",
    "end": "1488519"
  },
  {
    "text": "you how to store a database credential and set up rotation and what happens behind the scene for the next few slides",
    "start": "1488519",
    "end": "1497490"
  },
  {
    "start": "1495000",
    "end": "1595000"
  },
  {
    "text": "I'm going to switch gears and talk about some practical considerations that you should keep in mind when you decide to",
    "start": "1497490",
    "end": "1504600"
  },
  {
    "text": "use secrets manager I'll also recommend best practices that will help you that will help set you up",
    "start": "1504600",
    "end": "1510570"
  },
  {
    "text": "for success as you use secrets manager at scale so there are six things that",
    "start": "1510570",
    "end": "1517830"
  },
  {
    "text": "you need to keep in mind as you get started first how will you identify",
    "start": "1517830",
    "end": "1524429"
  },
  {
    "text": "where your secrets are being used today and what's your strategy for migrating",
    "start": "1524429",
    "end": "1529799"
  },
  {
    "text": "them to secrets manager second based on your security and compliance",
    "start": "1529799",
    "end": "1535679"
  },
  {
    "text": "requirements define how frequently you need to rotate your secrets third once",
    "start": "1535679",
    "end": "1542460"
  },
  {
    "text": "you've stored your secrets centrally how do you retrieve them and how frequently and this will depend on your network",
    "start": "1542460",
    "end": "1549809"
  },
  {
    "text": "configuration as well as your application setup fourth decide how will",
    "start": "1549809",
    "end": "1558809"
  },
  {
    "text": "you manage permissions to store retrieve and rotate secrets fifth plan on using",
    "start": "1558809",
    "end": "1565320"
  },
  {
    "text": "unique secrets in every region and in a very environment and finally decide how",
    "start": "1565320",
    "end": "1572340"
  },
  {
    "text": "you will audit the use of secrets as well as what are what is the type of activity that you want to monitor so",
    "start": "1572340",
    "end": "1584190"
  },
  {
    "text": "let's just walk through each of these I do notice people taking pictures from all of these slides will be available at",
    "start": "1584190",
    "end": "1590879"
  },
  {
    "text": "the end of this session so probably by by tomorrow morning",
    "start": "1590879",
    "end": "1596148"
  },
  {
    "start": "1595000",
    "end": "1779000"
  },
  {
    "text": "so I've already spoken about the benefits of you of removing plain text secrets so let's just focus on how to",
    "start": "1597099",
    "end": "1603889"
  },
  {
    "text": "get started the first big decision is your account strategy do you store all",
    "start": "1603889",
    "end": "1611029"
  },
  {
    "text": "secrets in one account or do you store secrets in multiple accounts after that",
    "start": "1611029",
    "end": "1619399"
  },
  {
    "text": "you need to work with your application owners and administrators to identify where your secrets are being used today",
    "start": "1619399",
    "end": "1625369"
  },
  {
    "text": "this will be a nitrated process you will gradually find your all your secrets but",
    "start": "1625369",
    "end": "1631039"
  },
  {
    "text": "one thing to sort of haste in this process is you can build tooling that",
    "start": "1631039",
    "end": "1636379"
  },
  {
    "text": "helps migrate these secrets so as soon as they're found if you have the appropriate tooling such as",
    "start": "1636379",
    "end": "1642259"
  },
  {
    "text": "CloudFormation templates or just regular scripts you can move these two secrets manager to speed up the process now here",
    "start": "1642259",
    "end": "1652369"
  },
  {
    "text": "are some things to to help you get started with moving your secrets over",
    "start": "1652369",
    "end": "1658719"
  },
  {
    "text": "operate secrets manager in each AWS account so don't choose to consolidate",
    "start": "1658839",
    "end": "1664309"
  },
  {
    "text": "in a single account instead for each application manage the secrets in the",
    "start": "1664309",
    "end": "1670099"
  },
  {
    "text": "same AWS account and there are a couple of benefits to this approach first",
    "start": "1670099",
    "end": "1675229"
  },
  {
    "text": "placing secrets in the same account as the resource helps you logically group everything that you need to make an",
    "start": "1675229",
    "end": "1681709"
  },
  {
    "text": "application work second accounts act as natural boundaries so that reduces the",
    "start": "1681709",
    "end": "1690169"
  },
  {
    "text": "risk of that reduces the blast radius should a secret be compromised and",
    "start": "1690169",
    "end": "1695619"
  },
  {
    "text": "finally this makes it really easy to manage secrets at scale because now what",
    "start": "1695619",
    "end": "1702529"
  },
  {
    "text": "you can do is you can give the application owner full access to secrets manager within their AWS account so that",
    "start": "1702529",
    "end": "1709639"
  },
  {
    "text": "they can quickly create and manage secrets while you have the right monitoring and enforcement tools that",
    "start": "1709639",
    "end": "1717499"
  },
  {
    "text": "ensure that these secrets are managed in accordance with your security policies",
    "start": "1717499",
    "end": "1724309"
  },
  {
    "text": "and your compliance policies next as you get",
    "start": "1724309",
    "end": "1732080"
  },
  {
    "text": "started set up conventions set up conventions for how secret should be named set up",
    "start": "1732080",
    "end": "1737810"
  },
  {
    "text": "conventions for when a secret should be rotated define upfront what the",
    "start": "1737810",
    "end": "1743450"
  },
  {
    "text": "encryption encryption mechanism should be in the next few slides I'll talk",
    "start": "1743450",
    "end": "1749330"
  },
  {
    "text": "about I'll give you a few options about these these conventions and how and what",
    "start": "1749330",
    "end": "1756980"
  },
  {
    "text": "the recommended practices and finally sanity check the number of Secrets if",
    "start": "1756980",
    "end": "1763190"
  },
  {
    "text": "you think you have a hundred thousand secrets I bet you were overestimating you need",
    "start": "1763190",
    "end": "1768890"
  },
  {
    "text": "to rethink your idea of secrets for a typical Enterprise I would expect a few",
    "start": "1768890",
    "end": "1774320"
  },
  {
    "text": "thousand secrets a startup would have a few dozen secrets",
    "start": "1774320",
    "end": "1779680"
  },
  {
    "start": "1779000",
    "end": "1920000"
  },
  {
    "text": "okay so let's consider this scenario I created a database I provided the master",
    "start": "1779680",
    "end": "1787280"
  },
  {
    "text": "user and password I stored that in secrets manager and when I stored the secret I use the name test secrets",
    "start": "1787280",
    "end": "1794630"
  },
  {
    "text": "manager what do you guys think is this a good practice or a poor practice oh yeah",
    "start": "1794630",
    "end": "1801320"
  },
  {
    "text": "that was an easy one right so use names that are meaningful use names that are",
    "start": "1801320",
    "end": "1808250"
  },
  {
    "text": "hierarchical and use descriptions use descriptions generously in the",
    "start": "1808250",
    "end": "1815060"
  },
  {
    "text": "description add information such as who owns the secret what is the secret for",
    "start": "1815060",
    "end": "1820330"
  },
  {
    "text": "who is responsible for managing the secret in the long run getting the",
    "start": "1820330",
    "end": "1826670"
  },
  {
    "text": "description right and setting in place good naming practices will make it really easy to manage secrets at scale",
    "start": "1826670",
    "end": "1833720"
  },
  {
    "text": "so for example a developer can now look at the description of the secrets to",
    "start": "1833720",
    "end": "1840110"
  },
  {
    "text": "identify which secret they need to make the application work they can also now look at trypsin to identify who they",
    "start": "1840110",
    "end": "1847580"
  },
  {
    "text": "should reach out to to get access to that secret so using the right description can go a very long way in",
    "start": "1847580",
    "end": "1854420"
  },
  {
    "text": "building transparency and enabling management at scale",
    "start": "1854420",
    "end": "1860020"
  },
  {
    "text": "okay so for this example I use a hierarchical name and a description",
    "start": "1860259",
    "end": "1865669"
  },
  {
    "text": "would you all think good idea poor idea well I'm gonna disagree on this one use",
    "start": "1865669",
    "end": "1874700"
  },
  {
    "text": "tags tags are super valuable especially when you want to manage secrets at scale",
    "start": "1874700",
    "end": "1880159"
  },
  {
    "text": "if you have 10 secrets sure you can work without tags but as soon as you get to a",
    "start": "1880159",
    "end": "1885470"
  },
  {
    "text": "few hundred secrets tags will be invaluable and here is how you enforce",
    "start": "1885470",
    "end": "1892429"
  },
  {
    "text": "the practice of using tagging you can add this statement to your sample to",
    "start": "1892429",
    "end": "1898639"
  },
  {
    "text": "your I am policy and what this statement does is it says if you're creating a",
    "start": "1898639",
    "end": "1904490"
  },
  {
    "text": "secret you must provide a tag and the tag should provide the team so you can",
    "start": "1904490",
    "end": "1911330"
  },
  {
    "text": "use various versions of this this condition to meet your unique tagging",
    "start": "1911330",
    "end": "1917090"
  },
  {
    "text": "requirements ok let's talk about",
    "start": "1917090",
    "end": "1922850"
  },
  {
    "start": "1920000",
    "end": "2002000"
  },
  {
    "text": "encryption in this screenshot I choose to encrypt using the encryption key what",
    "start": "1922850",
    "end": "1930259"
  },
  {
    "text": "do you all think good idea not so good idea but all right I heard",
    "start": "1930259",
    "end": "1936320"
  },
  {
    "text": "that a couple of places it depends the default key is great because you don't",
    "start": "1936320",
    "end": "1944690"
  },
  {
    "text": "have to manage additional AWS kms permissions plus secrets manager creates",
    "start": "1944690",
    "end": "1950149"
  },
  {
    "text": "a unique encryption key for every account and for every region so if you",
    "start": "1950149",
    "end": "1955639"
  },
  {
    "text": "have secrets across accounts and across regions they are all encrypted using their own encryption key but you may",
    "start": "1955639",
    "end": "1963499"
  },
  {
    "text": "have scenarios where you are required to you see encase you know you may have compliance needs that insist that you",
    "start": "1963499",
    "end": "1971090"
  },
  {
    "text": "have cm KS c m KS are also valuable for cross account access so if you have",
    "start": "1971090",
    "end": "1977710"
  },
  {
    "text": "secrets of that that have to be retrieved across accounts you have to use CM case finally",
    "start": "1977710",
    "end": "1986300"
  },
  {
    "text": "see MKS act as another set of access control so you can put policies on the",
    "start": "1986300",
    "end": "1993030"
  },
  {
    "text": "cmk to control who can use the C&K to decrypt the secret so it's another",
    "start": "1993030",
    "end": "1998970"
  },
  {
    "text": "mechanism for controlling access okay",
    "start": "1998970",
    "end": "2004220"
  },
  {
    "start": "2002000",
    "end": "2174000"
  },
  {
    "text": "the next big thing that you need to think about is how do you rotate your secrets and when do you do that as I",
    "start": "2004220",
    "end": "2011150"
  },
  {
    "text": "mentioned previously this will depend on your security and compliance requirements but here are a few things",
    "start": "2011150",
    "end": "2018800"
  },
  {
    "text": "to get you started for existing applications move their secrets over",
    "start": "2018800",
    "end": "2024830"
  },
  {
    "text": "first and worry about rotations second but if you're building newer",
    "start": "2024830",
    "end": "2031520"
  },
  {
    "text": "applications store the secret and setup rotation right from the get-go",
    "start": "2031520",
    "end": "2038440"
  },
  {
    "text": "there are a few shortcuts to help you get or to help you figure out your rotation strategy the default frequency",
    "start": "2038860",
    "end": "2046670"
  },
  {
    "text": "is 30 days on the console it should work for most people but check your",
    "start": "2046670",
    "end": "2052158"
  },
  {
    "text": "compliance and security requirements to find out what this number should be as I",
    "start": "2052159",
    "end": "2058460"
  },
  {
    "text": "mentioned previously when you rotate a secret you're only paying for the rotation API and for the lambda you're",
    "start": "2058460",
    "end": "2064850"
  },
  {
    "text": "not paying for a newer secret so wrote use so rotate your secrets actively you",
    "start": "2064850",
    "end": "2071658"
  },
  {
    "text": "don't have to be stingy about that because of cost as I showed in the demo",
    "start": "2071659",
    "end": "2078290"
  },
  {
    "text": "pre-op or as I showed previously to execute rotation secrets manager creates",
    "start": "2078290",
    "end": "2084200"
  },
  {
    "text": "lambda functions now these lambda functions require the ability to",
    "start": "2084200",
    "end": "2089388"
  },
  {
    "text": "communicate with the target resource so the database as well as secrets manager",
    "start": "2089389",
    "end": "2095990"
  },
  {
    "text": "so make sure you've set up the appropriate gateways and you can make",
    "start": "2095990",
    "end": "2101000"
  },
  {
    "text": "that easier by using VPC endpoints vbc endpoints is the recommended practice",
    "start": "2101000",
    "end": "2106730"
  },
  {
    "text": "because now your application as well as the lambda can talk to the secrets manager without going through the",
    "start": "2106730",
    "end": "2113330"
  },
  {
    "text": "publicly accessible internet this rotation lambda is also responsible",
    "start": "2113330",
    "end": "2120390"
  },
  {
    "text": "for creating the new credential bear it does this by calling the getter and a password API now by default secrets",
    "start": "2120390",
    "end": "2129720"
  },
  {
    "text": "manager will create the most complex password possible but you may have you may have scenarios where you want to use",
    "start": "2129720",
    "end": "2136140"
  },
  {
    "text": "simpler passwords so for example you may have a legacy application that does not",
    "start": "2136140",
    "end": "2141480"
  },
  {
    "text": "support special characters in the in the password field well in those scenarios",
    "start": "2141480",
    "end": "2146700"
  },
  {
    "text": "you can update the lambda function to provide a parameter to exclude special",
    "start": "2146700",
    "end": "2151740"
  },
  {
    "text": "characters when the get random password API is called so think about your",
    "start": "2151740",
    "end": "2157530"
  },
  {
    "text": "downstream applications and keep their requirements in mind as you define your",
    "start": "2157530",
    "end": "2162660"
  },
  {
    "text": "lambda functions and finally instead of creating a unique lambda for rotating",
    "start": "2162660",
    "end": "2168570"
  },
  {
    "text": "every secret try to reuse lambdas that's just more scalable all right we quickly",
    "start": "2168570",
    "end": "2176820"
  },
  {
    "start": "2174000",
    "end": "2301000"
  },
  {
    "text": "go through a few screenshots and talk about if this is a good practice or not so I created a database brand new",
    "start": "2176820",
    "end": "2183990"
  },
  {
    "text": "database I'm storing the database credentials I choose to disable automatic rotation good practice poor",
    "start": "2183990",
    "end": "2191369"
  },
  {
    "text": "practice all right set up rotation ASAP",
    "start": "2191369",
    "end": "2198319"
  },
  {
    "text": "so I decide to set up rotation I said the frequency of 30 days I choose to",
    "start": "2199340",
    "end": "2205590"
  },
  {
    "text": "create a new lambda versus reusing an existing land now this one is a trick",
    "start": "2205590",
    "end": "2211950"
  },
  {
    "text": "question so I'll not pose this as a question your decision depends on what",
    "start": "2211950",
    "end": "2218430"
  },
  {
    "text": "what the use case is in general it's easier to reuse existing lambdas and",
    "start": "2218430",
    "end": "2225720"
  },
  {
    "text": "here's why when you create a rotation lambda you also have to create an I am",
    "start": "2225720",
    "end": "2232830"
  },
  {
    "text": "role that's associated with the lambda so rotating requires certain I am",
    "start": "2232830",
    "end": "2238590"
  },
  {
    "text": "permissions also in generally should be very very stingy with your iam",
    "start": "2238590",
    "end": "2245400"
  },
  {
    "text": "permissions so one path forward is a very small",
    "start": "2245400",
    "end": "2250680"
  },
  {
    "text": "of employees have the ability to create these rotation lambdas as well as the I am roles while a much larger group of",
    "start": "2250680",
    "end": "2258930"
  },
  {
    "text": "employees gets the permissions to store secrets as well as call these existing",
    "start": "2258930",
    "end": "2263970"
  },
  {
    "text": "lambdas to rotate secrets does that make sense also it's just easier to manage a",
    "start": "2263970",
    "end": "2272040"
  },
  {
    "text": "smaller number of lambda functions now",
    "start": "2272040",
    "end": "2278490"
  },
  {
    "text": "when you configure rotation you have two options you can choose to use this secret to rotate or you can choose to",
    "start": "2278490",
    "end": "2285870"
  },
  {
    "text": "use a previously stored secret to rotate your decision would depend on what",
    "start": "2285870",
    "end": "2291000"
  },
  {
    "text": "secret your story if you're storing the master credentials for a database use",
    "start": "2291000",
    "end": "2296010"
  },
  {
    "text": "option 1 for any other credential use option 2 all right so once you've stored",
    "start": "2296010",
    "end": "2304230"
  },
  {
    "start": "2301000",
    "end": "2469000"
  },
  {
    "text": "your secrets and you've set up rotation you have to decide how you will retrieve",
    "start": "2304230",
    "end": "2309270"
  },
  {
    "text": "these secrets now retrieving secrets is",
    "start": "2309270",
    "end": "2315830"
  },
  {
    "text": "just like accessing any other AWS resource you require IEM permissions so",
    "start": "2315830",
    "end": "2321660"
  },
  {
    "text": "to get started create iam roles for your applications and give these roles",
    "start": "2321660",
    "end": "2327540"
  },
  {
    "text": "appropriate permissions in most",
    "start": "2327540",
    "end": "2333690"
  },
  {
    "text": "scenarios retrieving a secret once an hour is fine you can also use the client-side caching libraries to just",
    "start": "2333690",
    "end": "2340590"
  },
  {
    "text": "offload all of this management if you use these liabilities these libraries will retrieve ticket for you they'll",
    "start": "2340590",
    "end": "2348840"
  },
  {
    "text": "refresh the cache every hour and if there are authentication failures it will reach out to secrets manager again",
    "start": "2348840",
    "end": "2355140"
  },
  {
    "text": "and refresh the crash so retrieving secrets becomes really easy if you're using one of these",
    "start": "2355140",
    "end": "2361470"
  },
  {
    "text": "client-side cache in libraries we launched client sites caching support for Java and JDBC drivers last week in",
    "start": "2361470",
    "end": "2369150"
  },
  {
    "text": "future releases will consider supporting client-side caching for Ruby go and",
    "start": "2369150",
    "end": "2374520"
  },
  {
    "text": "Python if that's something of interest to you just let me know that'll help us",
    "start": "2374520",
    "end": "2379680"
  },
  {
    "text": "prioritize a road map for folks who build on serverless this",
    "start": "2379680",
    "end": "2387000"
  },
  {
    "text": "is really important you should retrieve the cook you should leave secrets man you should retrieve the secret outside",
    "start": "2387000",
    "end": "2394650"
  },
  {
    "text": "the lambda handler when you do this it allows you to cache the secret within",
    "start": "2394650",
    "end": "2400140"
  },
  {
    "text": "the lambda container which in turn reduces the number of API calls that you",
    "start": "2400140",
    "end": "2405180"
  },
  {
    "text": "have to make the secrets manager so if you're using serverless retrieve the",
    "start": "2405180",
    "end": "2410760"
  },
  {
    "text": "secret outside the handler and finally",
    "start": "2410760",
    "end": "2417360"
  },
  {
    "text": "if you decide that you do not need a secret anymore I would recommend",
    "start": "2417360",
    "end": "2422850"
  },
  {
    "text": "scheduling it for deletion instead of deleting it immediately the rationale here is if it turns out",
    "start": "2422850",
    "end": "2430110"
  },
  {
    "text": "that someone did need access to the secret you can quickly go back and restore the secret and get the",
    "start": "2430110",
    "end": "2437790"
  },
  {
    "text": "application or employee working again quickly now this is a sample which shows",
    "start": "2437790",
    "end": "2444600"
  },
  {
    "text": "how easy it is to use the client-side cache in library so if you if you're using c3po connection pooling with",
    "start": "2444600",
    "end": "2451110"
  },
  {
    "text": "spring moving over to the client-side cache in liabilities really is as simple as making a few changes and really",
    "start": "2451110",
    "end": "2457890"
  },
  {
    "text": "deploying your application all right the",
    "start": "2457890",
    "end": "2464340"
  },
  {
    "text": "next step is locking down permissions so",
    "start": "2464340",
    "end": "2472050"
  },
  {
    "start": "2469000",
    "end": "2576000"
  },
  {
    "text": "start by identifying who needs what access I think that's obvious then define the IAM policies and",
    "start": "2472050",
    "end": "2479660"
  },
  {
    "text": "wherever required he used resource based policies that's typically four-cross",
    "start": "2479660",
    "end": "2484860"
  },
  {
    "text": "account access so here are a few pro tips very very few people should have",
    "start": "2484860",
    "end": "2493260"
  },
  {
    "text": "full access to secrets manager it should be super stringent with that you can be",
    "start": "2493260",
    "end": "2499440"
  },
  {
    "text": "very more liberal with list secrets and describe secrets as I mentioned previously if you grant these abilities",
    "start": "2499440",
    "end": "2506430"
  },
  {
    "text": "to your employees it makes it easier for them to go find the right secret and then ask access to that secret it makes",
    "start": "2506430",
    "end": "2513930"
  },
  {
    "text": "it easier for your employees to be agile and operate quickly remember as I",
    "start": "2513930",
    "end": "2521160"
  },
  {
    "text": "mentioned previously configuring rotation requires I am permissions so be",
    "start": "2521160",
    "end": "2529020"
  },
  {
    "text": "very careful with who to configure rotation one way to mitigate or one way",
    "start": "2529020",
    "end": "2535680"
  },
  {
    "text": "to address this would be to separate responsibilities if a section of",
    "start": "2535680",
    "end": "2540750"
  },
  {
    "text": "employees the permissions to store a secret and retrieve a secret while give",
    "start": "2540750",
    "end": "2545910"
  },
  {
    "text": "a smaller section of employees the ability to configure rotation also",
    "start": "2545910",
    "end": "2553950"
  },
  {
    "text": "consider using tags as I mentioned previously tagging is super valuable when you are managing a larger number of",
    "start": "2553950",
    "end": "2560580"
  },
  {
    "text": "Secrets and finally cross account access requires the use of CM KS so that helps",
    "start": "2560580",
    "end": "2568230"
  },
  {
    "text": "you decide if you should if you need to grant additional permissions to create and decrypt using CM K's alright next",
    "start": "2568230",
    "end": "2579360"
  },
  {
    "start": "2576000",
    "end": "2674000"
  },
  {
    "text": "time use unique secrets within Amazon we",
    "start": "2579360",
    "end": "2585840"
  },
  {
    "text": "we require our teams to create and use unique secrets in every environment in",
    "start": "2585840",
    "end": "2591690"
  },
  {
    "text": "every AZ in every region in every account right the the benefits of",
    "start": "2591690",
    "end": "2598140"
  },
  {
    "text": "minimizing the blast radius are massive this also actually makes it easier to",
    "start": "2598140",
    "end": "2603600"
  },
  {
    "text": "recover and restart in the our scenarios and it reduces the overhead of",
    "start": "2603600",
    "end": "2608700"
  },
  {
    "text": "synchronizing secrets across multiple regions so to get started use",
    "start": "2608700",
    "end": "2617130"
  },
  {
    "text": "CloudFormation or other tooling to provision secrets the more you rely on automation the easier it will be to",
    "start": "2617130",
    "end": "2623760"
  },
  {
    "text": "follow consistent practices across accounts and to follow best practices",
    "start": "2623760",
    "end": "2629550"
  },
  {
    "text": "such as creating unique secrets and then once you've created unique secrets",
    "start": "2629550",
    "end": "2637070"
  },
  {
    "text": "require your applications to reach out to secrets manager from the from",
    "start": "2637070",
    "end": "2642480"
  },
  {
    "text": "whichever regional endpoint the application is using",
    "start": "2642480",
    "end": "2647000"
  },
  {
    "text": "I often hear customers that we replicate our applications across regions for dr",
    "start": "2648040",
    "end": "2655810"
  },
  {
    "text": "so we want to replicate secrets in the next slide",
    "start": "2655810",
    "end": "2661090"
  },
  {
    "text": "i'll show how you can replicate applications without the need to replicate secrets right you can still",
    "start": "2661090",
    "end": "2668200"
  },
  {
    "text": "use unique secrets even if you are the applique ting applications and data across regions so consider a typical",
    "start": "2668200",
    "end": "2676330"
  },
  {
    "start": "2674000",
    "end": "2771000"
  },
  {
    "text": "scenario let's say you have an application that requires access to a database well you can use cloud",
    "start": "2676330",
    "end": "2683650"
  },
  {
    "text": "formation along with secrets manager to create the database credentials that will allow your applications to talk to",
    "start": "2683650",
    "end": "2691270"
  },
  {
    "text": "the database that's step one from this point onwards if the application",
    "start": "2691270",
    "end": "2697810"
  },
  {
    "text": "requires access it simply reaches out the secrets manager uses the get secret",
    "start": "2697810",
    "end": "2703600"
  },
  {
    "text": "value command and receives the database credential which is in turn used to get",
    "start": "2703600",
    "end": "2710950"
  },
  {
    "text": "whatever data the application needs I this is easy and let's say you want to",
    "start": "2710950",
    "end": "2718420"
  },
  {
    "text": "replicate your application as well as your data well you can go ahead and do",
    "start": "2718420",
    "end": "2724510"
  },
  {
    "text": "that but in the new region just run your automated cloud formation script again",
    "start": "2724510",
    "end": "2729910"
  },
  {
    "text": "run this script to create a new credential and store this credential in",
    "start": "2729910",
    "end": "2735040"
  },
  {
    "text": "secrets manager now in this new region in the ohio region when the application",
    "start": "2735040",
    "end": "2740980"
  },
  {
    "text": "needs access to to the database it reaches out to the regional endpoint of",
    "start": "2740980",
    "end": "2746050"
  },
  {
    "text": "secrets manager it will receive a credential that's unique and that's",
    "start": "2746050",
    "end": "2751150"
  },
  {
    "text": "valid only in this region and it will then use this credential to collect data",
    "start": "2751150",
    "end": "2756490"
  },
  {
    "text": "so you can replicate applications you can copy data over but you do not need",
    "start": "2756490",
    "end": "2762310"
  },
  {
    "text": "to copy secrets over just use cloud formation and and other automation tools",
    "start": "2762310",
    "end": "2767350"
  },
  {
    "text": "to create unique secrets",
    "start": "2767350",
    "end": "2771570"
  },
  {
    "start": "2771000",
    "end": "2896000"
  },
  {
    "text": "right finally I'm talking about auditing and monitoring the use of your secrets",
    "start": "2773329",
    "end": "2781059"
  },
  {
    "text": "if you want a quick glance at who's using secrets manager you can simply use",
    "start": "2785079",
    "end": "2790940"
  },
  {
    "text": "I am access advisor if you want more detailed records of who went in and who",
    "start": "2790940",
    "end": "2796910"
  },
  {
    "text": "did what its secrets manager well use Cloud Train now because cloud trail",
    "start": "2796910",
    "end": "2802039"
  },
  {
    "text": "integrates with the entire AWS ecosystem it also gives you the ability to see how",
    "start": "2802039",
    "end": "2808249"
  },
  {
    "text": "your secret was used once it was retrieved from secrets manager so you can build an entire story you can say",
    "start": "2808249",
    "end": "2815680"
  },
  {
    "text": "Bob logged in to the log in to Bob retrieve the database credential from",
    "start": "2815680",
    "end": "2821119"
  },
  {
    "text": "secrets manager and then he went to the RDS instance and use this credential at",
    "start": "2821119",
    "end": "2826549"
  },
  {
    "text": "dine X and next if you want to monitor the use of your secrets well use cloud",
    "start": "2826549",
    "end": "2834019"
  },
  {
    "text": "watch events here are a few pro tips to",
    "start": "2834019",
    "end": "2839029"
  },
  {
    "text": "keep in mind I'll encourage you to monitor attempts to retrieve secrets",
    "start": "2839029",
    "end": "2846079"
  },
  {
    "text": "that are scheduled for deletion this is really important because if you've accidentally deleted something that and",
    "start": "2846079",
    "end": "2852829"
  },
  {
    "text": "an application is still calling that secret or attempting to call that secret then that means you have a broken",
    "start": "2852829",
    "end": "2858650"
  },
  {
    "text": "application so once you detect this you can quickly restore the secret and get",
    "start": "2858650",
    "end": "2864529"
  },
  {
    "text": "the application working again you should also value you should also",
    "start": "2864529",
    "end": "2869569"
  },
  {
    "text": "monitor access to high value secrets so production database credentials the SSH",
    "start": "2869569",
    "end": "2876559"
  },
  {
    "text": "key is for your production instances things like that and remember clout rail rack records all",
    "start": "2876559",
    "end": "2885440"
  },
  {
    "text": "secrets manager API cons right so expect an increase in the size of your trails",
    "start": "2885440",
    "end": "2891799"
  },
  {
    "text": "or once you start using sequence manager I figured I'll include some screen grabs",
    "start": "2891799",
    "end": "2900499"
  },
  {
    "text": "to show what a typical cloud health record would look like as well as how",
    "start": "2900499",
    "end": "2905730"
  },
  {
    "text": "can set up a monitoring alarm with cloud watch events okay so I introduced you to",
    "start": "2905730",
    "end": "2917550"
  },
  {
    "text": "the capabilities of secrets manager I walked you through the practical considerations of using secrets manager",
    "start": "2917550",
    "end": "2924119"
  },
  {
    "text": "and I included some pro tips that help you set up good practices finally I will",
    "start": "2924119",
    "end": "2931230"
  },
  {
    "text": "run a demo which which applies all of these good practices so here's what I'm",
    "start": "2931230",
    "end": "2938670"
  },
  {
    "start": "2936000",
    "end": "3056000"
  },
  {
    "text": "doing in this demo I am using a cloud formation template to create this this",
    "start": "2938670",
    "end": "2944540"
  },
  {
    "text": "infrastructure I have public subnets that are accessible through the internet I host",
    "start": "2944540",
    "end": "2953070"
  },
  {
    "text": "bastian hosts in these public subnets I have private subnets where I stored my",
    "start": "2953070",
    "end": "2958980"
  },
  {
    "text": "databases my operational ec2 instances things like that for private subnet one",
    "start": "2958980",
    "end": "2966950"
  },
  {
    "text": "example host one has an I am role that enables the host to retrieve a secret",
    "start": "2966950",
    "end": "2973650"
  },
  {
    "text": "from Secrets manager and use the secret to access the my sequel instance in",
    "start": "2973650",
    "end": "2979430"
  },
  {
    "text": "private subnet to the example host has permissions to list and described",
    "start": "2979430",
    "end": "2985770"
  },
  {
    "text": "secrets but it does not have permissions to retrieve the secret value and through",
    "start": "2985770",
    "end": "2993000"
  },
  {
    "text": "all of this I've set up a lambda function which rotates the secret so what I'll do next is I'll show you these",
    "start": "2993000",
    "end": "2999480"
  },
  {
    "text": "resources and then I'll run a few commands from the AWS CLI to show how to",
    "start": "2999480",
    "end": "3007760"
  },
  {
    "text": "show what this looks like if you are in within one of these hosts and retrieving",
    "start": "3007760",
    "end": "3013280"
  },
  {
    "text": "the secret",
    "start": "3013280",
    "end": "3015790"
  },
  {
    "text": "you you",
    "start": "3037950",
    "end": "3042540"
  },
  {
    "text": "yeah this is just a vacation that we have on a corporate network okay so here is your Rd here is",
    "start": "3047380",
    "end": "3062069"
  },
  {
    "start": "3056000",
    "end": "3126000"
  },
  {
    "text": "the infrastructure that I've created for this demo as I mentioned we have a",
    "start": "3062069",
    "end": "3068819"
  },
  {
    "text": "bastion host that's this one right here",
    "start": "3068819",
    "end": "3074630"
  },
  {
    "text": "then I have two example ec2 hosts the",
    "start": "3074630",
    "end": "3080640"
  },
  {
    "text": "first one has permissions to retrieve secrets while the second one only has permissions to lists and lists list",
    "start": "3080640",
    "end": "3088710"
  },
  {
    "text": "secrets and view details of Secrets I also have this CloudFormation template",
    "start": "3088710",
    "end": "3096990"
  },
  {
    "text": "also creates a my sequel instance and it calls secrets manager API is to generate",
    "start": "3096990",
    "end": "3102780"
  },
  {
    "text": "the instance as well as generate the username and password for this instance",
    "start": "3102780",
    "end": "3109430"
  },
  {
    "text": "this username and password is automatically stored in secrets manager under this name and it's also configured",
    "start": "3109430",
    "end": "3118530"
  },
  {
    "text": "for rotation so let me show you what all",
    "start": "3118530",
    "end": "3124380"
  },
  {
    "text": "of this looks like",
    "start": "3124380",
    "end": "3127130"
  },
  {
    "start": "3126000",
    "end": "3266000"
  },
  {
    "text": "here's the database it's not accessible the credentials for this",
    "start": "3155200",
    "end": "3160480"
  },
  {
    "text": "database are available in secrets manager right here so here's the name",
    "start": "3160480",
    "end": "3169018"
  },
  {
    "text": "here are the details of the secret such as how it was created what tags to use",
    "start": "3169349",
    "end": "3178779"
  },
  {
    "text": "things like that scrolling down is the rotation",
    "start": "3178779",
    "end": "3183970"
  },
  {
    "text": "configuration and right here is the",
    "start": "3183970",
    "end": "3190000"
  },
  {
    "text": "secret value and I don't mind retrieving this value and showing it to you all",
    "start": "3190000",
    "end": "3195190"
  },
  {
    "text": "right here because as soon as this is done I will trigger the rotation lambda",
    "start": "3195190",
    "end": "3202269"
  },
  {
    "text": "to rotate the secret immediately so as you can see this uses this points to the",
    "start": "3202269",
    "end": "3208599"
  },
  {
    "text": "host that I showed you previously and this uses the most complex password that",
    "start": "3208599",
    "end": "3214599"
  },
  {
    "text": "this type of host supports the rotation is triggered using this lambda function",
    "start": "3214599",
    "end": "3221319"
  },
  {
    "text": "which is also created using the CloudFormation template and the code will be available on Thursday and here",
    "start": "3221319",
    "end": "3234400"
  },
  {
    "text": "here are the details of what this code does okay so let me copy this password",
    "start": "3234400",
    "end": "3245769"
  },
  {
    "text": "badly over and now I will close this",
    "start": "3245769",
    "end": "3259579"
  },
  {
    "text": "and rotate the secret immediately",
    "start": "3259579",
    "end": "3265809"
  },
  {
    "text": "now what this rotation does is it triggers this lambda function to create",
    "start": "3265809",
    "end": "3272209"
  },
  {
    "text": "a new credential pair verify that the credential pair operates the way it should operate and then update the label",
    "start": "3272209",
    "end": "3278869"
  },
  {
    "text": "on this new credential pair to a WS current so that that's the new secret that you see now so let me connect to my",
    "start": "3278869",
    "end": "3289849"
  },
  {
    "text": "EC to host and from the host I'll retrieve the secret and then I'll use this new rotated secret to connect to",
    "start": "3289849",
    "end": "3296749"
  },
  {
    "text": "the my sequel instance all right I'll",
    "start": "3296749",
    "end": "3309859"
  },
  {
    "text": "open putty I'll set up agent forwarding I'm also using pageant to provide the",
    "start": "3309859",
    "end": "3316369"
  },
  {
    "text": "SSH key so that I don't have to provide it I don't have to add it to putty I'll",
    "start": "3316369",
    "end": "3328309"
  },
  {
    "text": "begin by SSH into the bastion host from",
    "start": "3328309",
    "end": "3345229"
  },
  {
    "text": "the bastion host I'll connect to the host in the pub in the private subnet",
    "start": "3345229",
    "end": "3351640"
  },
  {
    "text": "I've only set up my sequel on the source as well as configured the AWS CLI as I mentioned",
    "start": "3359499",
    "end": "3372100"
  },
  {
    "text": "previously I have attached a role to this instance and the role has permissions to retrieve also I didn't",
    "start": "3372100",
    "end": "3379750"
  },
  {
    "text": "leave this particular secret so I'll use the from the aww I'll use the secrets",
    "start": "3379750",
    "end": "3387280"
  },
  {
    "text": "manager get secret value command to retrieve the secret all right now to",
    "start": "3387280",
    "end": "3394720"
  },
  {
    "text": "make all of this a little more manageable let me just call out what the password is now so as you can see the",
    "start": "3394720",
    "end": "3416110"
  },
  {
    "text": "password value right here is different from the password value that I had",
    "start": "3416110",
    "end": "3422980"
  },
  {
    "text": "stored previously so the rotation is now complete and there is a new password that's available you can also verify",
    "start": "3422980",
    "end": "3429850"
  },
  {
    "text": "this from the console so if I scroll down to secret value I observed that the",
    "start": "3429850",
    "end": "3440290"
  },
  {
    "start": "3436000",
    "end": "3569000"
  },
  {
    "text": "new password that this is a new password this is not the same as the previous",
    "start": "3440290",
    "end": "3447340"
  },
  {
    "text": "password that was used here okay now",
    "start": "3447340",
    "end": "3454510"
  },
  {
    "text": "I'll set up a few parameters so that",
    "start": "3454510",
    "end": "3460080"
  },
  {
    "text": "it's easy for me to retrieve the the host name the user name and the password",
    "start": "3460080",
    "end": "3467350"
  },
  {
    "text": "from from the entire secret so",
    "start": "3467350",
    "end": "3482220"
  },
  {
    "text": "kid over the password to this parameter max I'll copy you know what let me just",
    "start": "3482220",
    "end": "3488790"
  },
  {
    "text": "echo and make sure this works all right",
    "start": "3488790",
    "end": "3496670"
  },
  {
    "text": "next I copy over the username and",
    "start": "3496670",
    "end": "3506330"
  },
  {
    "text": "finally I copy over the host and now",
    "start": "3506330",
    "end": "3515570"
  },
  {
    "text": "with all of all the information that was retrieved fragra matically I can connect",
    "start": "3515570",
    "end": "3521010"
  },
  {
    "text": "to the my sequel instance using the username the password and the host",
    "start": "3521010",
    "end": "3526680"
  },
  {
    "text": "information that was stored in secrets manager so this would be a good starting point for you to test how to use secrets",
    "start": "3526680",
    "end": "3534270"
  },
  {
    "text": "manager and then and then you can",
    "start": "3534270",
    "end": "3540390"
  },
  {
    "text": "configure this CloudFormation template to meet your own needs so for example use different types of database",
    "start": "3540390",
    "end": "3547050"
  },
  {
    "text": "instances use different kinds of tags things like that alright so that's it",
    "start": "3547050",
    "end": "3554820"
  },
  {
    "text": "this I hope this session was useful I hope you learned how to use secrets manager and things to keep in mind so",
    "start": "3554820",
    "end": "3561540"
  },
  {
    "text": "that you can manage your secrets at scale thank you",
    "start": "3561540",
    "end": "3567530"
  }
]