[
  {
    "text": "this was interesting right we started",
    "start": "560",
    "end": "2080"
  },
  {
    "text": "like laying out the",
    "start": "2080",
    "end": "3679"
  },
  {
    "text": "kind of like the storyline of how",
    "start": "3679",
    "end": "5440"
  },
  {
    "text": "startups go from",
    "start": "5440",
    "end": "7680"
  },
  {
    "text": "idea to minimum viable products and",
    "start": "7680",
    "end": "9599"
  },
  {
    "text": "we've seen live on with beanstalk how",
    "start": "9599",
    "end": "11759"
  },
  {
    "text": "you can actually launch and go into",
    "start": "11759",
    "end": "13360"
  },
  {
    "text": "production really quickly we then had",
    "start": "13360",
    "end": "15200"
  },
  {
    "text": "kind of like a break with some some very",
    "start": "15200",
    "end": "17039"
  },
  {
    "text": "good customers speaking about aws and um",
    "start": "17039",
    "end": "21279"
  },
  {
    "text": "shekar from from excel giving a very",
    "start": "21279",
    "end": "23039"
  },
  {
    "text": "exciting story about not just how we",
    "start": "23039",
    "end": "25039"
  },
  {
    "text": "helped",
    "start": "25039",
    "end": "25920"
  },
  {
    "text": "uh",
    "start": "25920",
    "end": "27039"
  },
  {
    "text": "excel in its companies but also how",
    "start": "27039",
    "end": "28480"
  },
  {
    "text": "excel sees the opportunity for the",
    "start": "28480",
    "end": "30720"
  },
  {
    "text": "entrepreneurs in this part of the world",
    "start": "30720",
    "end": "32719"
  },
  {
    "text": "so now we go back to the storyline so",
    "start": "32719",
    "end": "34960"
  },
  {
    "text": "now you've got your minimum viable",
    "start": "34960",
    "end": "36480"
  },
  {
    "text": "product in the market now it's all about",
    "start": "36480",
    "end": "38879"
  },
  {
    "text": "scaling seamlessly and and going global",
    "start": "38879",
    "end": "42160"
  },
  {
    "text": "so what you don't want if all these",
    "start": "42160",
    "end": "44079"
  },
  {
    "text": "people get come when you get your",
    "start": "44079",
    "end": "46320"
  },
  {
    "text": "storied or tech crunched or giga owned",
    "start": "46320",
    "end": "48320"
  },
  {
    "text": "or whatever and suddenly everyone comes",
    "start": "48320",
    "end": "50160"
  },
  {
    "text": "you don't want to see this right",
    "start": "50160",
    "end": "52160"
  },
  {
    "text": "with aws none of that you can actually",
    "start": "52160",
    "end": "55120"
  },
  {
    "text": "skill",
    "start": "55120",
    "end": "56480"
  },
  {
    "text": "seamlessly from one to thousands of",
    "start": "56480",
    "end": "59039"
  },
  {
    "text": "instances and fully automate that so the",
    "start": "59039",
    "end": "62000"
  },
  {
    "text": "key question that i that i hear from a",
    "start": "62000",
    "end": "63760"
  },
  {
    "text": "lot of customers is all right i have all",
    "start": "63760",
    "end": "65280"
  },
  {
    "text": "these great building blocks vita s3 and",
    "start": "65280",
    "end": "67600"
  },
  {
    "text": "beanstalk and all these",
    "start": "67600",
    "end": "69600"
  },
  {
    "text": "beautiful acronyms but how do i scale my",
    "start": "69600",
    "end": "72080"
  },
  {
    "text": "architecture to support let's say my",
    "start": "72080",
    "end": "74000"
  },
  {
    "text": "first 10 million users right",
    "start": "74000",
    "end": "76799"
  },
  {
    "text": "so",
    "start": "76799",
    "end": "77759"
  },
  {
    "text": "um",
    "start": "77759",
    "end": "78560"
  },
  {
    "text": "let's let's think a bit about that and",
    "start": "78560",
    "end": "80479"
  },
  {
    "text": "again it was just mentioned two minutes",
    "start": "80479",
    "end": "82240"
  },
  {
    "text": "before as if they've seen my slide but",
    "start": "82240",
    "end": "83680"
  },
  {
    "text": "it's all about thinking big",
    "start": "83680",
    "end": "85360"
  },
  {
    "text": "but then starting small start with your",
    "start": "85360",
    "end": "87439"
  },
  {
    "text": "your small little architecture",
    "start": "87439",
    "end": "89759"
  },
  {
    "text": "that we've seen before",
    "start": "89759",
    "end": "92799"
  },
  {
    "text": "your small architecture for your test",
    "start": "92799",
    "end": "94320"
  },
  {
    "text": "dev",
    "start": "94320",
    "end": "95280"
  },
  {
    "text": "scale it out a bit for your alpha",
    "start": "95280",
    "end": "96640"
  },
  {
    "text": "release",
    "start": "96640",
    "end": "97600"
  },
  {
    "text": "then go to your better release but",
    "start": "97600",
    "end": "99280"
  },
  {
    "text": "ultimately you want to go into",
    "start": "99280",
    "end": "100400"
  },
  {
    "text": "production so this architecture that you",
    "start": "100400",
    "end": "102560"
  },
  {
    "text": "can see here",
    "start": "102560",
    "end": "104000"
  },
  {
    "text": "seamlessly scales to",
    "start": "104000",
    "end": "106720"
  },
  {
    "text": "what we refer to today as your",
    "start": "106720",
    "end": "108079"
  },
  {
    "text": "production 1.0 architecture which is",
    "start": "108079",
    "end": "110240"
  },
  {
    "text": "very similar",
    "start": "110240",
    "end": "111600"
  },
  {
    "text": "as the previous one with the only",
    "start": "111600",
    "end": "113439"
  },
  {
    "text": "difference is it is now much more highly",
    "start": "113439",
    "end": "115759"
  },
  {
    "text": "available because it's in multiple",
    "start": "115759",
    "end": "117040"
  },
  {
    "text": "availability zones we've explained the",
    "start": "117040",
    "end": "118960"
  },
  {
    "text": "concept of multiple availability zones",
    "start": "118960",
    "end": "120719"
  },
  {
    "text": "before and when you go into production",
    "start": "120719",
    "end": "122719"
  },
  {
    "text": "we always advise to to create high",
    "start": "122719",
    "end": "124960"
  },
  {
    "text": "available applications and go multi-az",
    "start": "124960",
    "end": "127520"
  },
  {
    "text": "now let's",
    "start": "127520",
    "end": "128800"
  },
  {
    "text": "explore some of these concepts in here",
    "start": "128800",
    "end": "130399"
  },
  {
    "text": "that we haven't touched upon right we've",
    "start": "130399",
    "end": "132239"
  },
  {
    "text": "touched upon dns already we've touched",
    "start": "132239",
    "end": "133840"
  },
  {
    "text": "upon the load balancer we've not really",
    "start": "133840",
    "end": "136000"
  },
  {
    "text": "touched upon the database side of things",
    "start": "136000",
    "end": "138080"
  },
  {
    "text": "and let's look a bit more into auto",
    "start": "138080",
    "end": "139920"
  },
  {
    "text": "scaling because it's really powerful",
    "start": "139920",
    "end": "142480"
  },
  {
    "text": "first of all database options right now",
    "start": "142480",
    "end": "145360"
  },
  {
    "text": "with aws you have multiple database",
    "start": "145360",
    "end": "147520"
  },
  {
    "text": "options first of all you can self-manage",
    "start": "147520",
    "end": "149599"
  },
  {
    "text": "options you can run",
    "start": "149599",
    "end": "152400"
  },
  {
    "text": " or cassandra or postgres or",
    "start": "152400",
    "end": "154400"
  },
  {
    "text": "whatever on aws there's white papers",
    "start": "154400",
    "end": "156720"
  },
  {
    "text": "available about best practice about how",
    "start": "156720",
    "end": "158319"
  },
  {
    "text": "you can do that and we really welcome",
    "start": "158319",
    "end": "160239"
  },
  {
    "text": "any type of database on aws on ec2 at",
    "start": "160239",
    "end": "163840"
  },
  {
    "text": "the same time",
    "start": "163840",
    "end": "165040"
  },
  {
    "text": "there's managed databases that we offer",
    "start": "165040",
    "end": "167440"
  },
  {
    "text": "amazon rds from a",
    "start": "167440",
    "end": "169440"
  },
  {
    "text": "sql point of view and dynamodb from a",
    "start": "169440",
    "end": "171920"
  },
  {
    "text": "nosql point of view and i'll speak about",
    "start": "171920",
    "end": "174239"
  },
  {
    "text": "both of those in a bit more detail later",
    "start": "174239",
    "end": "175840"
  },
  {
    "text": "on but the question we often get is how",
    "start": "175840",
    "end": "178239"
  },
  {
    "text": "do i choose what database technology i",
    "start": "178239",
    "end": "180080"
  },
  {
    "text": "need",
    "start": "180080",
    "end": "181040"
  },
  {
    "text": "sql or nosql",
    "start": "181040",
    "end": "183760"
  },
  {
    "text": "and what you see nowadays is that",
    "start": "183760",
    "end": "185040"
  },
  {
    "text": "there's a lot of discussion around like",
    "start": "185040",
    "end": "187040"
  },
  {
    "text": "our dynamodb or cassandra or or",
    "start": "187040",
    "end": "190000"
  },
  {
    "text": "any of the nosql so some folks won't",
    "start": "190000",
    "end": "192080"
  },
  {
    "text": "like what i'm going to say now but our",
    "start": "192080",
    "end": "194000"
  },
  {
    "text": "advice is actually to start with sql",
    "start": "194000",
    "end": "196239"
  },
  {
    "text": "databases and when you say that normally",
    "start": "196239",
    "end": "198560"
  },
  {
    "text": "you get people going like but but but",
    "start": "198560",
    "end": "201200"
  },
  {
    "text": "no seriously it's best to start with sql",
    "start": "201200",
    "end": "204239"
  },
  {
    "text": "and there's a couple of reasons for that",
    "start": "204239",
    "end": "205519"
  },
  {
    "text": "right it's a really established and well",
    "start": "205519",
    "end": "207040"
  },
  {
    "text": "worn technology um there's a lot of",
    "start": "207040",
    "end": "210080"
  },
  {
    "text": "existing",
    "start": "210080",
    "end": "211440"
  },
  {
    "text": "books available code toolsets and all",
    "start": "211440",
    "end": "213920"
  },
  {
    "text": "that and a very very clear path to to",
    "start": "213920",
    "end": "216799"
  },
  {
    "text": "scalability",
    "start": "216799",
    "end": "218159"
  },
  {
    "text": "what's more important is that there's",
    "start": "218159",
    "end": "219519"
  },
  {
    "text": "normally unless there's like a really",
    "start": "219519",
    "end": "221680"
  },
  {
    "text": "unique use case that's maybe true for",
    "start": "221680",
    "end": "224400"
  },
  {
    "text": "like five percent of you guys or ten",
    "start": "224400",
    "end": "225840"
  },
  {
    "text": "percent of you guys but normally you're",
    "start": "225840",
    "end": "227519"
  },
  {
    "text": "not going to break your sql database in",
    "start": "227519",
    "end": "229760"
  },
  {
    "text": "your first let's say 10 million users",
    "start": "229760",
    "end": "233040"
  },
  {
    "text": "so if you start with sql then one of the",
    "start": "233040",
    "end": "235519"
  },
  {
    "text": "things we offer that's really powerful",
    "start": "235519",
    "end": "236959"
  },
  {
    "text": "is amazon rds um which is kind of like",
    "start": "236959",
    "end": "239840"
  },
  {
    "text": "database as a server it's without the",
    "start": "239840",
    "end": "241599"
  },
  {
    "text": "need for all sorts of installation",
    "start": "241599",
    "end": "244080"
  },
  {
    "text": "database administration very very",
    "start": "244080",
    "end": "246400"
  },
  {
    "text": "scalable and full tolerant",
    "start": "246400",
    "end": "248799"
  },
  {
    "text": "again you can bring your own license or",
    "start": "248799",
    "end": "250480"
  },
  {
    "text": "you can leverage sql server or mysql or",
    "start": "250480",
    "end": "253120"
  },
  {
    "text": "oracle that we i that we we offer as",
    "start": "253120",
    "end": "255439"
  },
  {
    "text": "part of as part of the service it also",
    "start": "255439",
    "end": "257519"
  },
  {
    "text": "offers all sorts of um built-in uh",
    "start": "257519",
    "end": "260239"
  },
  {
    "text": "features when it comes to backups",
    "start": "260239",
    "end": "262160"
  },
  {
    "text": "failover and replication and so on",
    "start": "262160",
    "end": "265280"
  },
  {
    "text": "now the other thing is auto scaling",
    "start": "265280",
    "end": "267280"
  },
  {
    "text": "and auto scaling again i think in a way",
    "start": "267280",
    "end": "269360"
  },
  {
    "text": "is the essence of what the cloud can do",
    "start": "269360",
    "end": "271040"
  },
  {
    "text": "in terms of its elastic nature now",
    "start": "271040",
    "end": "273040"
  },
  {
    "text": "werner fogel's this morning showed about",
    "start": "273040",
    "end": "275040"
  },
  {
    "text": "how that worked uh for amazon",
    "start": "275040",
    "end": "277759"
  },
  {
    "text": "um and he showed the peaks per day and i",
    "start": "277759",
    "end": "280400"
  },
  {
    "text": "think he showed the peaks uh in in",
    "start": "280400",
    "end": "282400"
  },
  {
    "text": "november when there's black monday and",
    "start": "282400",
    "end": "283840"
  },
  {
    "text": "black friday and so on",
    "start": "283840",
    "end": "286000"
  },
  {
    "text": "um and the the importance of auto",
    "start": "286000",
    "end": "287680"
  },
  {
    "text": "scaling so so let's look a bit at how",
    "start": "287680",
    "end": "289440"
  },
  {
    "text": "that works right let's look at this",
    "start": "289440",
    "end": "290639"
  },
  {
    "text": "architecture that we've seen before you",
    "start": "290639",
    "end": "293040"
  },
  {
    "text": "got your",
    "start": "293040",
    "end": "294320"
  },
  {
    "text": "your dns your load balancer in multiple",
    "start": "294320",
    "end": "296720"
  },
  {
    "text": "availability zones you have your",
    "start": "296720",
    "end": "298400"
  },
  {
    "text": "instances set up and you create an auto",
    "start": "298400",
    "end": "300479"
  },
  {
    "text": "scaling group",
    "start": "300479",
    "end": "301680"
  },
  {
    "text": "now you have that auto scaling group and",
    "start": "301680",
    "end": "303680"
  },
  {
    "text": "let's say at some stage",
    "start": "303680",
    "end": "305600"
  },
  {
    "text": "your cpu utilization reaches about 80",
    "start": "305600",
    "end": "309600"
  },
  {
    "text": "let's say that that's the parameter that",
    "start": "309600",
    "end": "310880"
  },
  {
    "text": "you've set",
    "start": "310880",
    "end": "312320"
  },
  {
    "text": "your your um your virtual servers your",
    "start": "312320",
    "end": "314560"
  },
  {
    "text": "ec2 instances",
    "start": "314560",
    "end": "315919"
  },
  {
    "text": "go red",
    "start": "315919",
    "end": "316960"
  },
  {
    "text": "and it automatically invokes your your",
    "start": "316960",
    "end": "318960"
  },
  {
    "text": "auto scaling policy that you can build",
    "start": "318960",
    "end": "320880"
  },
  {
    "text": "into your ami and where you actually",
    "start": "320880",
    "end": "322720"
  },
  {
    "text": "indicate what parameters need what",
    "start": "322720",
    "end": "324639"
  },
  {
    "text": "action we've seen before we can do",
    "start": "324639",
    "end": "326560"
  },
  {
    "text": "monitoring",
    "start": "326560",
    "end": "327759"
  },
  {
    "text": "alarms on that and then set actions and",
    "start": "327759",
    "end": "329440"
  },
  {
    "text": "one of them actions is to say when i hit",
    "start": "329440",
    "end": "332000"
  },
  {
    "text": "x in terms of a parameter",
    "start": "332000",
    "end": "334400"
  },
  {
    "text": "what automatically happens is",
    "start": "334400",
    "end": "336880"
  },
  {
    "text": "i build up additional instances and i",
    "start": "336880",
    "end": "339120"
  },
  {
    "text": "auto scale up",
    "start": "339120",
    "end": "340560"
  },
  {
    "text": "so i ought to scale up",
    "start": "340560",
    "end": "342400"
  },
  {
    "text": "right now i've got multiple instances",
    "start": "342400",
    "end": "345120"
  },
  {
    "text": "that have come up i can better deal with",
    "start": "345120",
    "end": "347280"
  },
  {
    "text": "the load that i'm that i'm carrying",
    "start": "347280",
    "end": "350160"
  },
  {
    "text": "and if at some stage they cool off the",
    "start": "350160",
    "end": "352800"
  },
  {
    "text": "users go it's late at night or whatever",
    "start": "352800",
    "end": "355600"
  },
  {
    "text": "it automatically",
    "start": "355600",
    "end": "357039"
  },
  {
    "text": "scales down as well again that has a",
    "start": "357039",
    "end": "358960"
  },
  {
    "text": "massive impact on your scaling also on",
    "start": "358960",
    "end": "361039"
  },
  {
    "text": "your costs and we'll talk about that",
    "start": "361039",
    "end": "362319"
  },
  {
    "text": "later on",
    "start": "362319",
    "end": "363520"
  },
  {
    "text": "so",
    "start": "363520",
    "end": "365039"
  },
  {
    "text": "with that we now have kind of like",
    "start": "365039",
    "end": "366800"
  },
  {
    "text": "tackled all the elements of this",
    "start": "366800",
    "end": "368800"
  },
  {
    "text": "production 1.0 architecture",
    "start": "368800",
    "end": "371759"
  },
  {
    "text": "if you describe it it's kind of like a",
    "start": "371759",
    "end": "373280"
  },
  {
    "text": "best practice well-designed two-tier",
    "start": "373280",
    "end": "375039"
  },
  {
    "text": "architecture it's highly available",
    "start": "375039",
    "end": "376639"
  },
  {
    "text": "because it has multiple availability",
    "start": "376639",
    "end": "378000"
  },
  {
    "text": "zones",
    "start": "378000",
    "end": "378960"
  },
  {
    "text": "load balancing is there auto scaling is",
    "start": "378960",
    "end": "380720"
  },
  {
    "text": "there so you're very scalable by nature",
    "start": "380720",
    "end": "383039"
  },
  {
    "text": "fully managed database included and",
    "start": "383039",
    "end": "385280"
  },
  {
    "text": "obviously it depends on your",
    "start": "385280",
    "end": "387199"
  },
  {
    "text": "applications and a lot of other factors",
    "start": "387199",
    "end": "389280"
  },
  {
    "text": "but typically for a web app a setup like",
    "start": "389280",
    "end": "391919"
  },
  {
    "text": "this should be able to serve",
    "start": "391919",
    "end": "393680"
  },
  {
    "text": "ten thousands hundred thousands of users",
    "start": "393680",
    "end": "397039"
  },
  {
    "text": "all good",
    "start": "397039",
    "end": "398240"
  },
  {
    "text": "but",
    "start": "398240",
    "end": "400000"
  },
  {
    "text": "as you start scaling",
    "start": "400000",
    "end": "401840"
  },
  {
    "text": "um you can actually start making",
    "start": "401840",
    "end": "403440"
  },
  {
    "text": "improvements at this with the",
    "start": "403440",
    "end": "405199"
  },
  {
    "text": "architecture we've just shown you have",
    "start": "405199",
    "end": "406400"
  },
  {
    "text": "some wasted server capacity if all your",
    "start": "406400",
    "end": "408479"
  },
  {
    "text": "static content is basically on your",
    "start": "408479",
    "end": "410720"
  },
  {
    "text": "instances then",
    "start": "410720",
    "end": "412720"
  },
  {
    "text": "that impacts the reliability and",
    "start": "412720",
    "end": "414319"
  },
  {
    "text": "durability",
    "start": "414319",
    "end": "415680"
  },
  {
    "text": "of that static content there's also this",
    "start": "415680",
    "end": "417840"
  },
  {
    "text": "concept in engineering called dry don't",
    "start": "417840",
    "end": "419680"
  },
  {
    "text": "repeat yourself you don't want to repeat",
    "start": "419680",
    "end": "421440"
  },
  {
    "text": "your static content on multiple",
    "start": "421440",
    "end": "422720"
  },
  {
    "text": "instances but rather you have one source",
    "start": "422720",
    "end": "426800"
  },
  {
    "text": "and finally",
    "start": "426800",
    "end": "427919"
  },
  {
    "text": "within this architecture there's",
    "start": "427919",
    "end": "429199"
  },
  {
    "text": "opportunities for actually",
    "start": "429199",
    "end": "430880"
  },
  {
    "text": "improve the end user experience",
    "start": "430880",
    "end": "433120"
  },
  {
    "text": "so what do we do",
    "start": "433120",
    "end": "435120"
  },
  {
    "text": "we add a couple of services we add",
    "start": "435120",
    "end": "436639"
  },
  {
    "text": "simple storage servers and i won't talk",
    "start": "436639",
    "end": "438800"
  },
  {
    "text": "in more detail about it because it was",
    "start": "438800",
    "end": "440000"
  },
  {
    "text": "addressed earlier in in one of the demos",
    "start": "440000",
    "end": "442400"
  },
  {
    "text": "and we had cloudfront to basically",
    "start": "442400",
    "end": "443919"
  },
  {
    "text": "optimize the end user experience",
    "start": "443919",
    "end": "445919"
  },
  {
    "text": "so cloudfront was mentioned earlier but",
    "start": "445919",
    "end": "447680"
  },
  {
    "text": "it's our worldwide content distribution",
    "start": "447680",
    "end": "449360"
  },
  {
    "text": "network it's really",
    "start": "449360",
    "end": "451599"
  },
  {
    "text": "cdn the amazon way where there's no",
    "start": "451599",
    "end": "453840"
  },
  {
    "text": "upfront cost where there's fast",
    "start": "453840",
    "end": "455199"
  },
  {
    "text": "integration kind of like cdns code if",
    "start": "455199",
    "end": "457759"
  },
  {
    "text": "you like",
    "start": "457759",
    "end": "459120"
  },
  {
    "text": "and very good for both static as well as",
    "start": "459120",
    "end": "460800"
  },
  {
    "text": "dynamic content",
    "start": "460800",
    "end": "463039"
  },
  {
    "text": "if we put those into our architecture",
    "start": "463039",
    "end": "464879"
  },
  {
    "text": "you now see the same architecture as we",
    "start": "464879",
    "end": "467199"
  },
  {
    "text": "have before but at the right top corner",
    "start": "467199",
    "end": "469120"
  },
  {
    "text": "there you see s3 in front of it and you",
    "start": "469120",
    "end": "471360"
  },
  {
    "text": "see cloudfront as well so let's call",
    "start": "471360",
    "end": "473360"
  },
  {
    "text": "that our production 1.2 architecture it",
    "start": "473360",
    "end": "475599"
  },
  {
    "text": "has the same good things that the",
    "start": "475599",
    "end": "477280"
  },
  {
    "text": "previous version had but now my static",
    "start": "477280",
    "end": "479759"
  },
  {
    "text": "content is stored in a very durable and",
    "start": "479759",
    "end": "481440"
  },
  {
    "text": "consistent way",
    "start": "481440",
    "end": "483280"
  },
  {
    "text": "and i've improved end user experiments",
    "start": "483280",
    "end": "485120"
  },
  {
    "text": "through the cdn one thing to note here",
    "start": "485120",
    "end": "487120"
  },
  {
    "text": "as well is what you can start doing now",
    "start": "487120",
    "end": "489039"
  },
  {
    "text": "is",
    "start": "489039",
    "end": "489919"
  },
  {
    "text": "save your logs",
    "start": "489919",
    "end": "491360"
  },
  {
    "text": "when you do cloud fund always save your",
    "start": "491360",
    "end": "493199"
  },
  {
    "text": "logs from a database point of view save",
    "start": "493199",
    "end": "494800"
  },
  {
    "text": "your logs you have s3",
    "start": "494800",
    "end": "496639"
  },
  {
    "text": "i get a lot of startups that ask me hey",
    "start": "496639",
    "end": "498080"
  },
  {
    "text": "peter at what stage should we start like",
    "start": "498080",
    "end": "500000"
  },
  {
    "text": "saving data and my answer is always like",
    "start": "500000",
    "end": "502000"
  },
  {
    "text": "yesterday or last year or 10 years back",
    "start": "502000",
    "end": "505360"
  },
  {
    "text": "the cost of storing stuff right now is",
    "start": "505360",
    "end": "507199"
  },
  {
    "text": "so incredibly small",
    "start": "507199",
    "end": "509039"
  },
  {
    "text": "that we always advise",
    "start": "509039",
    "end": "510560"
  },
  {
    "text": "to store everything now even if you",
    "start": "510560",
    "end": "512320"
  },
  {
    "text": "don't have the means yet to analyze it",
    "start": "512320",
    "end": "514320"
  },
  {
    "text": "but later on i'll talk about the",
    "start": "514320",
    "end": "515760"
  },
  {
    "text": "importance of actually analytics",
    "start": "515760",
    "end": "518000"
  },
  {
    "text": "so start storing it now again this",
    "start": "518000",
    "end": "520000"
  },
  {
    "text": "architecture",
    "start": "520000",
    "end": "521200"
  },
  {
    "text": "is",
    "start": "521200",
    "end": "522000"
  },
  {
    "text": "really solid and should be able to scale",
    "start": "522000",
    "end": "523760"
  },
  {
    "text": "up even further maybe up to a million",
    "start": "523760",
    "end": "525600"
  },
  {
    "text": "users",
    "start": "525600",
    "end": "527360"
  },
  {
    "text": "but",
    "start": "527360",
    "end": "528800"
  },
  {
    "text": "again you start scaling further right",
    "start": "528800",
    "end": "530240"
  },
  {
    "text": "you grow your startups your first 10",
    "start": "530240",
    "end": "531600"
  },
  {
    "text": "million users so now you are at skill",
    "start": "531600",
    "end": "533839"
  },
  {
    "text": "you'll have lots of data",
    "start": "533839",
    "end": "535600"
  },
  {
    "text": "you constantly need to optimize",
    "start": "535600",
    "end": "537760"
  },
  {
    "text": "so how do you optimize and where do you",
    "start": "537760",
    "end": "539839"
  },
  {
    "text": "optimize and where do you improve the",
    "start": "539839",
    "end": "541279"
  },
  {
    "text": "end user experience",
    "start": "541279",
    "end": "543040"
  },
  {
    "text": "so",
    "start": "543040",
    "end": "543760"
  },
  {
    "text": "what we'll do",
    "start": "543760",
    "end": "545040"
  },
  {
    "text": "is we'll add big data for analytics of",
    "start": "545040",
    "end": "547920"
  },
  {
    "text": "web mobile gaming",
    "start": "547920",
    "end": "550640"
  },
  {
    "text": "log data as i just mentioned now",
    "start": "550640",
    "end": "554000"
  },
  {
    "text": "werner this morning already showed that",
    "start": "554000",
    "end": "555600"
  },
  {
    "text": "we have a range of services",
    "start": "555600",
    "end": "557600"
  },
  {
    "text": "emr",
    "start": "557600",
    "end": "558800"
  },
  {
    "text": "redshift dynamodb a number of them and",
    "start": "558800",
    "end": "562000"
  },
  {
    "text": "let's zoom into uh two of them first of",
    "start": "562000",
    "end": "564720"
  },
  {
    "text": "all dynamodb i just mentioned that it's",
    "start": "564720",
    "end": "567200"
  },
  {
    "text": "always good to start with um with sql",
    "start": "567200",
    "end": "570399"
  },
  {
    "text": "but what we see more and more it's not",
    "start": "570399",
    "end": "572000"
  },
  {
    "text": "like sql or nosql",
    "start": "572000",
    "end": "574880"
  },
  {
    "text": "it is all sorts of hybrid models so we",
    "start": "574880",
    "end": "577040"
  },
  {
    "text": "see a lot of gaming companies that have",
    "start": "577040",
    "end": "579680"
  },
  {
    "text": "user credentials and so on in",
    "start": "579680",
    "end": "583040"
  },
  {
    "text": "in rds but session state data and",
    "start": "583040",
    "end": "585839"
  },
  {
    "text": "certain other data in dynamodb",
    "start": "585839",
    "end": "588399"
  },
  {
    "text": "or at this stage when you really get the",
    "start": "588399",
    "end": "591040"
  },
  {
    "text": "skill you might start really think about",
    "start": "591040",
    "end": "593200"
  },
  {
    "text": "storing",
    "start": "593200",
    "end": "594160"
  },
  {
    "text": "more data",
    "start": "594160",
    "end": "595519"
  },
  {
    "text": "in in dynamodb which is",
    "start": "595519",
    "end": "598000"
  },
  {
    "text": "basically a provision throughput nosql",
    "start": "598000",
    "end": "599920"
  },
  {
    "text": "database",
    "start": "599920",
    "end": "600959"
  },
  {
    "text": "xero admin as we like to say you can",
    "start": "600959",
    "end": "602560"
  },
  {
    "text": "basically turn a switch and say how much",
    "start": "602560",
    "end": "604160"
  },
  {
    "text": "iops you want from a read write point of",
    "start": "604160",
    "end": "605680"
  },
  {
    "text": "view and it takes care of everything",
    "start": "605680",
    "end": "608560"
  },
  {
    "text": "dhruva was mentioned earlier",
    "start": "608560",
    "end": "610399"
  },
  {
    "text": "and druva is actually a very uh good",
    "start": "610399",
    "end": "612880"
  },
  {
    "text": "customer from",
    "start": "612880",
    "end": "615519"
  },
  {
    "text": "from a dynamo point of view so they do a",
    "start": "615519",
    "end": "617920"
  },
  {
    "text": "lot of storage now they store the data",
    "start": "617920",
    "end": "619920"
  },
  {
    "text": "in s3 but the metadata per customer is",
    "start": "619920",
    "end": "623120"
  },
  {
    "text": "actually going into dynamo so they move",
    "start": "623120",
    "end": "625279"
  },
  {
    "text": "from cassandra to",
    "start": "625279",
    "end": "627760"
  },
  {
    "text": "dynamodb",
    "start": "627760",
    "end": "629200"
  },
  {
    "text": "because they needed an engine that could",
    "start": "629200",
    "end": "630720"
  },
  {
    "text": "do like 12 000 reads or writes per",
    "start": "630720",
    "end": "632560"
  },
  {
    "text": "second which is quite significant right",
    "start": "632560",
    "end": "635360"
  },
  {
    "text": "and we've helped them again it was",
    "start": "635360",
    "end": "637120"
  },
  {
    "text": "mentioned earlier by excel partners how",
    "start": "637120",
    "end": "638959"
  },
  {
    "text": "we help customers with their",
    "start": "638959",
    "end": "640079"
  },
  {
    "text": "architecture to save cost we did that",
    "start": "640079",
    "end": "642079"
  },
  {
    "text": "and helped them save a lot of cost and",
    "start": "642079",
    "end": "643279"
  },
  {
    "text": "improve their performance as well",
    "start": "643279",
    "end": "645680"
  },
  {
    "text": "now the other thing is elastic mapreduce",
    "start": "645680",
    "end": "647920"
  },
  {
    "text": "so again it was referred to earlier but",
    "start": "647920",
    "end": "650079"
  },
  {
    "text": "this is a really really powerful service",
    "start": "650079",
    "end": "651920"
  },
  {
    "text": "when it comes to providing analytics",
    "start": "651920",
    "end": "654160"
  },
  {
    "text": "through a managed elastic hadoop cluster",
    "start": "654160",
    "end": "657680"
  },
  {
    "text": "there's a lot of people like running",
    "start": "657680",
    "end": "658800"
  },
  {
    "text": "hadoop on ec2 which you can do as well",
    "start": "658800",
    "end": "662160"
  },
  {
    "text": "but there's a lot of implementation",
    "start": "662160",
    "end": "663760"
  },
  {
    "text": "deployment installation and that's all",
    "start": "663760",
    "end": "665519"
  },
  {
    "text": "complexity so we offer that as a managed",
    "start": "665519",
    "end": "667600"
  },
  {
    "text": "service that's really powerful where you",
    "start": "667600",
    "end": "668959"
  },
  {
    "text": "can still leverage your hive and big",
    "start": "668959",
    "end": "670240"
  },
  {
    "text": "scripts if you want",
    "start": "670240",
    "end": "673120"
  },
  {
    "text": "anyone heard of foursquare",
    "start": "673440",
    "end": "676160"
  },
  {
    "text": "yeah so foursquare are very successful",
    "start": "676160",
    "end": "678000"
  },
  {
    "text": "startups in the states right they",
    "start": "678000",
    "end": "679040"
  },
  {
    "text": "founded in 2009",
    "start": "679040",
    "end": "680880"
  },
  {
    "text": "um 112 million dollars raised in venture",
    "start": "680880",
    "end": "683360"
  },
  {
    "text": "capital they have over 33 million users",
    "start": "683360",
    "end": "686240"
  },
  {
    "text": "a lot of businesses that use their",
    "start": "686240",
    "end": "687519"
  },
  {
    "text": "services and as you can imagine they",
    "start": "687519",
    "end": "690000"
  },
  {
    "text": "generate a lot of data",
    "start": "690000",
    "end": "692079"
  },
  {
    "text": "3.5 billion check-ins",
    "start": "692079",
    "end": "694720"
  },
  {
    "text": "over 15 million venues and terabytes of",
    "start": "694720",
    "end": "697440"
  },
  {
    "text": "log data",
    "start": "697440",
    "end": "698640"
  },
  {
    "text": "they use emr heavily",
    "start": "698640",
    "end": "701360"
  },
  {
    "text": "they evaluate new features",
    "start": "701360",
    "end": "703440"
  },
  {
    "text": "they have machine learning exploratory",
    "start": "703440",
    "end": "706000"
  },
  {
    "text": "analysis",
    "start": "706000",
    "end": "707120"
  },
  {
    "text": "more long-term trend analysis a lot of",
    "start": "707120",
    "end": "708800"
  },
  {
    "text": "things that they use emr for",
    "start": "708800",
    "end": "710800"
  },
  {
    "text": "again they use it on data that they've",
    "start": "710800",
    "end": "712480"
  },
  {
    "text": "stored earlier so they store everything",
    "start": "712480",
    "end": "714320"
  },
  {
    "text": "that happens on their site they store",
    "start": "714320",
    "end": "715600"
  },
  {
    "text": "everything in the database they store",
    "start": "715600",
    "end": "717680"
  },
  {
    "text": "everything that happens from a cloud",
    "start": "717680",
    "end": "718800"
  },
  {
    "text": "from point of view and start analyzing",
    "start": "718800",
    "end": "720800"
  },
  {
    "text": "that and they generate clear benefits",
    "start": "720800",
    "end": "722720"
  },
  {
    "text": "from that ease of use right again before",
    "start": "722720",
    "end": "726240"
  },
  {
    "text": "you can do it all yourself with",
    "start": "726240",
    "end": "727519"
  },
  {
    "text": "different building blocks and open",
    "start": "727519",
    "end": "728720"
  },
  {
    "text": "source tools and so on but with emr",
    "start": "728720",
    "end": "731279"
  },
  {
    "text": "they've basically decreased the",
    "start": "731279",
    "end": "733200"
  },
  {
    "text": "processing time for really urgent",
    "start": "733200",
    "end": "734639"
  },
  {
    "text": "analytics flexibility is another thing",
    "start": "734639",
    "end": "737600"
  },
  {
    "text": "it's not like you just have to do like",
    "start": "737600",
    "end": "739680"
  },
  {
    "text": "every let's say every friday or every",
    "start": "739680",
    "end": "741519"
  },
  {
    "text": "saturday run a job",
    "start": "741519",
    "end": "743440"
  },
  {
    "text": "what often happens is you need to do",
    "start": "743440",
    "end": "744880"
  },
  {
    "text": "quick analytics for troubleshooting or",
    "start": "744880",
    "end": "747279"
  },
  {
    "text": "for whatever reason and you need to be",
    "start": "747279",
    "end": "749440"
  },
  {
    "text": "flexible in terms of how you manage",
    "start": "749440",
    "end": "751680"
  },
  {
    "text": "those analytics and you don't want to",
    "start": "751680",
    "end": "753120"
  },
  {
    "text": "worry about",
    "start": "753120",
    "end": "754480"
  },
  {
    "text": "having fixed costs for that but you want",
    "start": "754480",
    "end": "755920"
  },
  {
    "text": "to just like with your ec2 instances you",
    "start": "755920",
    "end": "757600"
  },
  {
    "text": "want to be able to be scalable when it",
    "start": "757600",
    "end": "759920"
  },
  {
    "text": "comes to managing your cluster another",
    "start": "759920",
    "end": "762000"
  },
  {
    "text": "thing is cost obviously",
    "start": "762000",
    "end": "763680"
  },
  {
    "text": "they've reduced their analytics cost by",
    "start": "763680",
    "end": "765040"
  },
  {
    "text": "about 50",
    "start": "765040",
    "end": "766639"
  },
  {
    "text": "by using",
    "start": "766639",
    "end": "768240"
  },
  {
    "text": "emr",
    "start": "768240",
    "end": "769600"
  },
  {
    "text": "so",
    "start": "769600",
    "end": "770959"
  },
  {
    "text": "let's add that to our uh production",
    "start": "770959",
    "end": "773920"
  },
  {
    "text": "environment um as you can see now we",
    "start": "773920",
    "end": "776800"
  },
  {
    "text": "still have the the great environment",
    "start": "776800",
    "end": "778079"
  },
  {
    "text": "that we had but we've now added",
    "start": "778079",
    "end": "780480"
  },
  {
    "text": "um emr right at the top so i'm not sure",
    "start": "780480",
    "end": "783040"
  },
  {
    "text": "whether you can re read it but within",
    "start": "783040",
    "end": "785279"
  },
  {
    "text": "within s3 there's two types of buckets",
    "start": "785279",
    "end": "787200"
  },
  {
    "text": "now that you can see one has the logs as",
    "start": "787200",
    "end": "789680"
  },
  {
    "text": "you can see they come from the database",
    "start": "789680",
    "end": "791680"
  },
  {
    "text": "where they can come from cloudfront",
    "start": "791680",
    "end": "794160"
  },
  {
    "text": "it goes into emr",
    "start": "794160",
    "end": "796800"
  },
  {
    "text": "gets analyzed and the results get stored",
    "start": "796800",
    "end": "798720"
  },
  {
    "text": "in another bucket so that's really",
    "start": "798720",
    "end": "800480"
  },
  {
    "text": "powerful",
    "start": "800480",
    "end": "802720"
  },
  {
    "text": "so that kind of like gives us brings us",
    "start": "802720",
    "end": "804800"
  },
  {
    "text": "to our production 1.3 architecture still",
    "start": "804800",
    "end": "807680"
  },
  {
    "text": "all the benefits we talked about before",
    "start": "807680",
    "end": "809120"
  },
  {
    "text": "but now we also have big data analytics",
    "start": "809120",
    "end": "810880"
  },
  {
    "text": "built in for continuous",
    "start": "810880",
    "end": "812880"
  },
  {
    "text": "optimization so with an architecture",
    "start": "812880",
    "end": "814959"
  },
  {
    "text": "like this you should be able to serve",
    "start": "814959",
    "end": "816320"
  },
  {
    "text": "millions and millions of users it's",
    "start": "816320",
    "end": "818160"
  },
  {
    "text": "really powerful now obviously there's a",
    "start": "818160",
    "end": "819920"
  },
  {
    "text": "lot more you can do",
    "start": "819920",
    "end": "821440"
  },
  {
    "text": "there's more you can do on your database",
    "start": "821440",
    "end": "823040"
  },
  {
    "text": "side leveraging our for example elastic",
    "start": "823040",
    "end": "825360"
  },
  {
    "text": "ash or hosted memcached offering or you",
    "start": "825360",
    "end": "828000"
  },
  {
    "text": "can start looking at more",
    "start": "828000",
    "end": "830320"
  },
  {
    "text": "service oriented architecture type",
    "start": "830320",
    "end": "832000"
  },
  {
    "text": "features and look at loose coupling by",
    "start": "832000",
    "end": "834639"
  },
  {
    "text": "leveraging other services from aws like",
    "start": "834639",
    "end": "836560"
  },
  {
    "text": "simple workflow or sqs or simple",
    "start": "836560",
    "end": "839199"
  },
  {
    "text": "notification servers or a whole lot of",
    "start": "839199",
    "end": "840800"
  },
  {
    "text": "other things that you can do to further",
    "start": "840800",
    "end": "843360"
  },
  {
    "text": "optimize but for now um",
    "start": "843360",
    "end": "846880"
  },
  {
    "text": "enough talk let's let's do a bit more of",
    "start": "846880",
    "end": "848959"
  },
  {
    "text": "a demo uh we're going to ask ganesh to",
    "start": "848959",
    "end": "851120"
  },
  {
    "text": "come on stage again one more time",
    "start": "851120",
    "end": "853279"
  },
  {
    "text": "and specifically look at",
    "start": "853279",
    "end": "855120"
  },
  {
    "text": "the auto scaling as well as going global",
    "start": "855120",
    "end": "857600"
  },
  {
    "text": "and cloud front so i'm going to hand",
    "start": "857600",
    "end": "859120"
  },
  {
    "text": "over to ganesh",
    "start": "859120",
    "end": "862160"
  },
  {
    "text": "so i'm going to log in",
    "start": "862800",
    "end": "867240"
  },
  {
    "text": "okay",
    "start": "870240",
    "end": "872240"
  },
  {
    "text": "and",
    "start": "872240",
    "end": "874480"
  },
  {
    "text": "okay",
    "start": "878560",
    "end": "881560"
  },
  {
    "text": "how do you like to scale this",
    "start": "884480",
    "end": "885519"
  },
  {
    "text": "application that we developed",
    "start": "885519",
    "end": "887839"
  },
  {
    "text": "in the afternoon",
    "start": "887839",
    "end": "889199"
  },
  {
    "text": "the application that we developed in 15",
    "start": "889199",
    "end": "891040"
  },
  {
    "text": "minutes",
    "start": "891040",
    "end": "892240"
  },
  {
    "text": "how do you think that's going to scale",
    "start": "892240",
    "end": "894639"
  },
  {
    "text": "to handle",
    "start": "894639",
    "end": "895839"
  },
  {
    "text": "the millions of users that peter talked",
    "start": "895839",
    "end": "897760"
  },
  {
    "text": "about",
    "start": "897760",
    "end": "898560"
  },
  {
    "text": "will elastic bean stock allow you to do",
    "start": "898560",
    "end": "900160"
  },
  {
    "text": "that",
    "start": "900160",
    "end": "902399"
  },
  {
    "text": "will it allow you to do that",
    "start": "904959",
    "end": "907600"
  },
  {
    "text": "we do have auto scaling there right so",
    "start": "907600",
    "end": "909519"
  },
  {
    "text": "let us see that in action so the two",
    "start": "909519",
    "end": "911519"
  },
  {
    "text": "ways that i can scale this application i",
    "start": "911519",
    "end": "913920"
  },
  {
    "text": "can either",
    "start": "913920",
    "end": "915120"
  },
  {
    "text": "go and say hey",
    "start": "915120",
    "end": "916639"
  },
  {
    "text": "i'll give my url to like a bunch of",
    "start": "916639",
    "end": "918720"
  },
  {
    "text": "friends and say hey you give it to a",
    "start": "918720",
    "end": "920320"
  },
  {
    "text": "bunch of friends and let us see how much",
    "start": "920320",
    "end": "922079"
  },
  {
    "text": "my applications can scale",
    "start": "922079",
    "end": "923920"
  },
  {
    "text": "or use a pet project of chicago tribune",
    "start": "923920",
    "end": "927519"
  },
  {
    "text": "they wanted to test their scalability of",
    "start": "927519",
    "end": "929519"
  },
  {
    "text": "their application so they developed this",
    "start": "929519",
    "end": "931440"
  },
  {
    "text": "product called bees with mission guns on",
    "start": "931440",
    "end": "934720"
  },
  {
    "text": "aws",
    "start": "934720",
    "end": "936320"
  },
  {
    "text": "so",
    "start": "936320",
    "end": "937120"
  },
  {
    "text": "they create",
    "start": "937120",
    "end": "938320"
  },
  {
    "text": "multiple ec2 instances and",
    "start": "938320",
    "end": "941279"
  },
  {
    "text": "give these ec2 instances mission guns so",
    "start": "941279",
    "end": "943519"
  },
  {
    "text": "that they can go and hit your web server",
    "start": "943519",
    "end": "947600"
  },
  {
    "text": "does it sound like attack",
    "start": "948079",
    "end": "950480"
  },
  {
    "text": "it is an attack",
    "start": "950480",
    "end": "951920"
  },
  {
    "text": "so",
    "start": "951920",
    "end": "952639"
  },
  {
    "text": "please don't start tweeting saying that",
    "start": "952639",
    "end": "954800"
  },
  {
    "text": "hey ganesh has taught us how to do a",
    "start": "954800",
    "end": "956240"
  },
  {
    "text": "ddos it is",
    "start": "956240",
    "end": "958320"
  },
  {
    "text": "against",
    "start": "958320",
    "end": "959680"
  },
  {
    "text": "a lot of",
    "start": "959680",
    "end": "960880"
  },
  {
    "text": "policies a lot of countries laws to do",
    "start": "960880",
    "end": "964160"
  },
  {
    "text": "an attack on a website",
    "start": "964160",
    "end": "966000"
  },
  {
    "text": "okay so let us use that to see how my",
    "start": "966000",
    "end": "968480"
  },
  {
    "text": "scale",
    "start": "968480",
    "end": "970720"
  },
  {
    "text": "how my application is going to scale",
    "start": "970720",
    "end": "973120"
  },
  {
    "text": "as the user traffic increases",
    "start": "973120",
    "end": "976079"
  },
  {
    "text": "so what i've done is i've taken the",
    "start": "976079",
    "end": "977360"
  },
  {
    "text": "liberty of",
    "start": "977360",
    "end": "979920"
  },
  {
    "text": "okay i need you to raise your hands if",
    "start": "980639",
    "end": "982560"
  },
  {
    "text": "you're able to see this",
    "start": "982560",
    "end": "985519"
  },
  {
    "text": "okay",
    "start": "986240",
    "end": "988480"
  },
  {
    "text": "okay great",
    "start": "990320",
    "end": "992160"
  },
  {
    "text": "so i've taken the liberty of actually",
    "start": "992160",
    "end": "994399"
  },
  {
    "text": "creating uh the beast",
    "start": "994399",
    "end": "997199"
  },
  {
    "text": "so i've already started the beast i did",
    "start": "997199",
    "end": "998959"
  },
  {
    "text": "not have much time here on the stage so",
    "start": "998959",
    "end": "1001519"
  },
  {
    "text": "i started the beast so let me show you",
    "start": "1001519",
    "end": "1003360"
  },
  {
    "text": "the beast the bees are running on",
    "start": "1003360",
    "end": "1005920"
  },
  {
    "text": "in the u.s east region",
    "start": "1005920",
    "end": "1009199"
  },
  {
    "text": "so",
    "start": "1009199",
    "end": "1011839"
  },
  {
    "text": "so i've got 10 b's running there",
    "start": "1018880",
    "end": "1022160"
  },
  {
    "text": "so each of these bees are going to hit",
    "start": "1022160",
    "end": "1024798"
  },
  {
    "text": "my website",
    "start": "1024799",
    "end": "1027360"
  },
  {
    "text": "10 times",
    "start": "1027360",
    "end": "1030000"
  },
  {
    "text": "for till they hit 100 000 times so each",
    "start": "1030000",
    "end": "1033038"
  },
  {
    "text": "of them is going to go on hitting my web",
    "start": "1033039",
    "end": "1034959"
  },
  {
    "text": "server so i'm creating a load on my web",
    "start": "1034959",
    "end": "1037280"
  },
  {
    "text": "server so",
    "start": "1037280",
    "end": "1038880"
  },
  {
    "text": "the other thing what i've done is i've",
    "start": "1038880",
    "end": "1040558"
  },
  {
    "text": "also taken the",
    "start": "1040559",
    "end": "1042558"
  },
  {
    "text": "liberty of creating a",
    "start": "1042559",
    "end": "1045600"
  },
  {
    "text": "another beanstalk environment for this",
    "start": "1045600",
    "end": "1047280"
  },
  {
    "text": "demo",
    "start": "1047280",
    "end": "1049600"
  },
  {
    "text": "which is",
    "start": "1050720",
    "end": "1051679"
  },
  {
    "text": "right here",
    "start": "1051679",
    "end": "1054080"
  },
  {
    "text": "and",
    "start": "1054080",
    "end": "1056320"
  },
  {
    "text": "that is my version the same application",
    "start": "1056880",
    "end": "1060559"
  },
  {
    "text": "just running on a different application",
    "start": "1060559",
    "end": "1063039"
  },
  {
    "text": "container",
    "start": "1063039",
    "end": "1065440"
  },
  {
    "text": "so",
    "start": "1065440",
    "end": "1066799"
  },
  {
    "text": "what else have i made modifications here",
    "start": "1066799",
    "end": "1069600"
  },
  {
    "text": "i have also reduced my auto scaling",
    "start": "1069600",
    "end": "1071760"
  },
  {
    "text": "properties",
    "start": "1071760",
    "end": "1073520"
  },
  {
    "text": "to really low values so that we can",
    "start": "1073520",
    "end": "1075440"
  },
  {
    "text": "quickly see this demo",
    "start": "1075440",
    "end": "1077120"
  },
  {
    "text": "either i can keep it at optimal values",
    "start": "1077120",
    "end": "1079760"
  },
  {
    "text": "and let it run through and we can wait",
    "start": "1079760",
    "end": "1081679"
  },
  {
    "text": "here for like another 10-15 minutes for",
    "start": "1081679",
    "end": "1083360"
  },
  {
    "text": "the entire beast to come up and start",
    "start": "1083360",
    "end": "1085039"
  },
  {
    "text": "hitting the instance or",
    "start": "1085039",
    "end": "1087840"
  },
  {
    "text": "reduce it and quickly see how the scale",
    "start": "1087840",
    "end": "1090240"
  },
  {
    "text": "happens so i have taken the later",
    "start": "1090240",
    "end": "1092320"
  },
  {
    "text": "approach and",
    "start": "1092320",
    "end": "1095840"
  },
  {
    "text": "you don't want to do this in your",
    "start": "1096880",
    "end": "1098640"
  },
  {
    "text": "production environment or even in your",
    "start": "1098640",
    "end": "1100640"
  },
  {
    "text": "dev environment",
    "start": "1100640",
    "end": "1102000"
  },
  {
    "text": "so my auto scaling looks like this",
    "start": "1102000",
    "end": "1104559"
  },
  {
    "text": "so i've got 40 instances i say from 1 to",
    "start": "1104559",
    "end": "1108000"
  },
  {
    "text": "40 scale from one instance all the way",
    "start": "1108000",
    "end": "1110320"
  },
  {
    "text": "up to 40 instances",
    "start": "1110320",
    "end": "1113360"
  },
  {
    "text": "have a cool down of 30 seconds",
    "start": "1113760",
    "end": "1116080"
  },
  {
    "text": "if i have already scaled up",
    "start": "1116080",
    "end": "1118000"
  },
  {
    "text": "don't scale up or scale down for 30",
    "start": "1118000",
    "end": "1119919"
  },
  {
    "text": "seconds wait",
    "start": "1119919",
    "end": "1121440"
  },
  {
    "text": "and watch what happens before you scale",
    "start": "1121440",
    "end": "1123280"
  },
  {
    "text": "up or scale down again",
    "start": "1123280",
    "end": "1125280"
  },
  {
    "text": "i'm using the cpu utilization",
    "start": "1125280",
    "end": "1127760"
  },
  {
    "text": "with an average",
    "start": "1127760",
    "end": "1130000"
  },
  {
    "text": "threshold of greater than 25 percent",
    "start": "1130000",
    "end": "1132799"
  },
  {
    "text": "if my cpu utilization is over 25",
    "start": "1132799",
    "end": "1135280"
  },
  {
    "text": "i will spin instances",
    "start": "1135280",
    "end": "1137280"
  },
  {
    "text": "when my cpu utilization comes below 10",
    "start": "1137280",
    "end": "1139600"
  },
  {
    "text": "percent",
    "start": "1139600",
    "end": "1140880"
  },
  {
    "text": "i will remove the instances",
    "start": "1140880",
    "end": "1144640"
  },
  {
    "text": "so let us quickly",
    "start": "1145039",
    "end": "1146640"
  },
  {
    "text": "attack this web application the web",
    "start": "1146640",
    "end": "1148160"
  },
  {
    "text": "application apart from running here it",
    "start": "1148160",
    "end": "1149600"
  },
  {
    "text": "is also running on my",
    "start": "1149600",
    "end": "1152720"
  },
  {
    "text": "sorry",
    "start": "1153360",
    "end": "1155600"
  },
  {
    "text": "route 53 url demo dot southpaw in",
    "start": "1159120",
    "end": "1163760"
  },
  {
    "text": "i'm going to",
    "start": "1163760",
    "end": "1166320"
  },
  {
    "text": "go to my instance",
    "start": "1167360",
    "end": "1170160"
  },
  {
    "text": "and then i'm going to attack",
    "start": "1171280",
    "end": "1172720"
  },
  {
    "text": "demo.southpaws.in",
    "start": "1172720",
    "end": "1175720"
  },
  {
    "text": "100 000 times",
    "start": "1175840",
    "end": "1179280"
  },
  {
    "text": "ten times",
    "start": "1179280",
    "end": "1181280"
  },
  {
    "text": "in parallel",
    "start": "1181280",
    "end": "1183360"
  },
  {
    "text": "so",
    "start": "1183360",
    "end": "1185200"
  },
  {
    "text": "they'll be reading ten bees from the",
    "start": "1185200",
    "end": "1186960"
  },
  {
    "text": "rooster",
    "start": "1186960",
    "end": "1188720"
  },
  {
    "text": "they're joining the swamp there we go",
    "start": "1188720",
    "end": "1190799"
  },
  {
    "text": "bang bang",
    "start": "1190799",
    "end": "1193200"
  },
  {
    "text": "we are firing away",
    "start": "1193200",
    "end": "1195200"
  },
  {
    "text": "so",
    "start": "1195200",
    "end": "1195919"
  },
  {
    "text": "we are firing away at the rate of",
    "start": "1195919",
    "end": "1198880"
  },
  {
    "text": "10 000 rounds one at a time so i'm only",
    "start": "1198880",
    "end": "1201919"
  },
  {
    "text": "using 10",
    "start": "1201919",
    "end": "1203520"
  },
  {
    "text": "requests at a time so concurrently 10",
    "start": "1203520",
    "end": "1205840"
  },
  {
    "text": "requests at a time you can modify this",
    "start": "1205840",
    "end": "1208480"
  },
  {
    "text": "to suit your needs you can say hey where",
    "start": "1208480",
    "end": "1210559"
  },
  {
    "text": "does my actual application break",
    "start": "1210559",
    "end": "1213440"
  },
  {
    "text": "even even before it scales can it break",
    "start": "1213440",
    "end": "1216080"
  },
  {
    "text": "okay there is a time to scale the",
    "start": "1216080",
    "end": "1217520"
  },
  {
    "text": "application so can it break even before",
    "start": "1217520",
    "end": "1220159"
  },
  {
    "text": "it scales",
    "start": "1220159",
    "end": "1221600"
  },
  {
    "text": "so",
    "start": "1221600",
    "end": "1222320"
  },
  {
    "text": "this gives you the ability to tweak this",
    "start": "1222320",
    "end": "1225679"
  },
  {
    "text": "and find the breaking point of your",
    "start": "1225679",
    "end": "1227600"
  },
  {
    "text": "application",
    "start": "1227600",
    "end": "1228720"
  },
  {
    "text": "so let us quickly go back to our",
    "start": "1228720",
    "end": "1231520"
  },
  {
    "text": "beanstalk",
    "start": "1231520",
    "end": "1232640"
  },
  {
    "text": "application",
    "start": "1232640",
    "end": "1235640"
  },
  {
    "text": "and see",
    "start": "1237039",
    "end": "1239440"
  },
  {
    "text": "how the cpu is going to respond",
    "start": "1240080",
    "end": "1243360"
  },
  {
    "text": "so it's going to take some time it's",
    "start": "1243360",
    "end": "1244720"
  },
  {
    "text": "going to really",
    "start": "1244720",
    "end": "1246960"
  },
  {
    "text": "realize that hey the load is increasing",
    "start": "1246960",
    "end": "1249200"
  },
  {
    "text": "and the cloud watch alarm kicks in and",
    "start": "1249200",
    "end": "1251280"
  },
  {
    "text": "then an auto scaling policy is triggered",
    "start": "1251280",
    "end": "1253840"
  },
  {
    "text": "which actually instantiates your",
    "start": "1253840",
    "end": "1256000"
  },
  {
    "text": "instances and attaches them to the",
    "start": "1256000",
    "end": "1257919"
  },
  {
    "text": "elastic load balancer i'm going to show",
    "start": "1257919",
    "end": "1259840"
  },
  {
    "text": "you all these pieces but before that",
    "start": "1259840",
    "end": "1263840"
  },
  {
    "text": "let us see how we can take this",
    "start": "1264080",
    "end": "1265520"
  },
  {
    "text": "application global",
    "start": "1265520",
    "end": "1267600"
  },
  {
    "text": "so we have this application this is",
    "start": "1267600",
    "end": "1269120"
  },
  {
    "text": "hosted out of the u.s west oregon region",
    "start": "1269120",
    "end": "1272080"
  },
  {
    "text": "i have people in sydney accessing this",
    "start": "1272080",
    "end": "1273840"
  },
  {
    "text": "application as well",
    "start": "1273840",
    "end": "1275360"
  },
  {
    "text": "so how do i take this application to",
    "start": "1275360",
    "end": "1277120"
  },
  {
    "text": "people in sydney",
    "start": "1277120",
    "end": "1279760"
  },
  {
    "text": "so",
    "start": "1279760",
    "end": "1282000"
  },
  {
    "text": "i already have a s3 bucket",
    "start": "1283120",
    "end": "1285520"
  },
  {
    "text": "where i have stored my",
    "start": "1285520",
    "end": "1289400"
  },
  {
    "text": "my static image bangalore.png i've",
    "start": "1299919",
    "end": "1302559"
  },
  {
    "text": "already stored this in",
    "start": "1302559",
    "end": "1304640"
  },
  {
    "text": "an s3 bucket so i need to make this",
    "start": "1304640",
    "end": "1307039"
  },
  {
    "text": "available to my users in sydney in",
    "start": "1307039",
    "end": "1309200"
  },
  {
    "text": "europe at a lower latency",
    "start": "1309200",
    "end": "1312320"
  },
  {
    "text": "than what they would experience if they",
    "start": "1312320",
    "end": "1314000"
  },
  {
    "text": "directly access this from",
    "start": "1314000",
    "end": "1318039"
  },
  {
    "text": "oregon",
    "start": "1318880",
    "end": "1319919"
  },
  {
    "text": "correct so i need to go across the world",
    "start": "1319919",
    "end": "1322159"
  },
  {
    "text": "to serve this file to them if i make",
    "start": "1322159",
    "end": "1324480"
  },
  {
    "text": "this file available at a closer location",
    "start": "1324480",
    "end": "1326960"
  },
  {
    "text": "then",
    "start": "1326960",
    "end": "1327760"
  },
  {
    "text": "the end user experience will be",
    "start": "1327760",
    "end": "1330840"
  },
  {
    "text": "better your users will be thrilled",
    "start": "1330840",
    "end": "1335039"
  },
  {
    "text": "to achieve that we are going to use",
    "start": "1335039",
    "end": "1336960"
  },
  {
    "text": "cloudfront which is our",
    "start": "1336960",
    "end": "1339600"
  },
  {
    "text": "content delivery network with over 40",
    "start": "1339600",
    "end": "1343440"
  },
  {
    "text": "point of presence across the world",
    "start": "1343440",
    "end": "1346880"
  },
  {
    "text": "what i've done is",
    "start": "1346880",
    "end": "1349280"
  },
  {
    "text": "i have created a cloud front",
    "start": "1349280",
    "end": "1350640"
  },
  {
    "text": "distribution",
    "start": "1350640",
    "end": "1353640"
  },
  {
    "text": "are you able to see it",
    "start": "1371200",
    "end": "1373200"
  },
  {
    "text": "great",
    "start": "1373200",
    "end": "1374720"
  },
  {
    "text": "so that's the distribution the origin is",
    "start": "1374720",
    "end": "1377360"
  },
  {
    "text": "my s3 bucket",
    "start": "1377360",
    "end": "1379679"
  },
  {
    "text": "so i'm telling cloud front",
    "start": "1379679",
    "end": "1381679"
  },
  {
    "text": "whenever somebody comes and asks for",
    "start": "1381679",
    "end": "1383280"
  },
  {
    "text": "files go to this s3 bucket and case it",
    "start": "1383280",
    "end": "1386480"
  },
  {
    "text": "at a location closer to the user and",
    "start": "1386480",
    "end": "1388880"
  },
  {
    "text": "serve it from there",
    "start": "1388880",
    "end": "1390880"
  },
  {
    "text": "okay so now let us what we'll do is",
    "start": "1390880",
    "end": "1393360"
  },
  {
    "text": "we'll go back to our application that we",
    "start": "1393360",
    "end": "1394960"
  },
  {
    "text": "created",
    "start": "1394960",
    "end": "1396159"
  },
  {
    "text": "in elastic bean stock",
    "start": "1396159",
    "end": "1399960"
  },
  {
    "text": "you remember our summit 2013 application",
    "start": "1406640",
    "end": "1410240"
  },
  {
    "text": "so",
    "start": "1410240",
    "end": "1411919"
  },
  {
    "text": "this application had",
    "start": "1411919",
    "end": "1414159"
  },
  {
    "text": "s3 bucket as the image source",
    "start": "1414159",
    "end": "1416799"
  },
  {
    "text": "what i'm going to do now is i'm going to",
    "start": "1416799",
    "end": "1418159"
  },
  {
    "text": "change the s3 bucket to",
    "start": "1418159",
    "end": "1421679"
  },
  {
    "text": "the domain name of the cloudfront",
    "start": "1422000",
    "end": "1423600"
  },
  {
    "text": "distribution i have created",
    "start": "1423600",
    "end": "1426720"
  },
  {
    "text": "okay",
    "start": "1427600",
    "end": "1428720"
  },
  {
    "text": "so we go back to the",
    "start": "1428720",
    "end": "1432320"
  },
  {
    "text": "index.php",
    "start": "1436080",
    "end": "1438400"
  },
  {
    "text": "update the image source",
    "start": "1438400",
    "end": "1442279"
  },
  {
    "text": "made the change",
    "start": "1455360",
    "end": "1458000"
  },
  {
    "text": "commit",
    "start": "1460880",
    "end": "1463360"
  },
  {
    "text": "ford",
    "start": "1465360",
    "end": "1466320"
  },
  {
    "text": "cloud front",
    "start": "1466320",
    "end": "1468960"
  },
  {
    "text": "and",
    "start": "1469679",
    "end": "1470799"
  },
  {
    "text": "jet aws.push",
    "start": "1470799",
    "end": "1474360"
  },
  {
    "text": "and",
    "start": "1475840",
    "end": "1478080"
  },
  {
    "text": "my application is getting deployed",
    "start": "1478080",
    "end": "1480720"
  },
  {
    "text": "there we go",
    "start": "1480720",
    "end": "1482640"
  },
  {
    "text": "so environment update is starting it is",
    "start": "1482640",
    "end": "1485039"
  },
  {
    "text": "deploying the application",
    "start": "1485039",
    "end": "1486880"
  },
  {
    "text": "i have already got my version",
    "start": "1486880",
    "end": "1490159"
  },
  {
    "text": "here",
    "start": "1491679",
    "end": "1493919"
  },
  {
    "text": "cloud front 0.4",
    "start": "1494080",
    "end": "1497760"
  },
  {
    "text": "now",
    "start": "1499279",
    "end": "1501279"
  },
  {
    "text": "i'm going to go back to my",
    "start": "1501279",
    "end": "1503360"
  },
  {
    "text": "demo bees application to see what's",
    "start": "1503360",
    "end": "1505039"
  },
  {
    "text": "happening to my cpu utilization on that",
    "start": "1505039",
    "end": "1507279"
  },
  {
    "text": "instance",
    "start": "1507279",
    "end": "1509679"
  },
  {
    "text": "here we",
    "start": "1511919",
    "end": "1512840"
  },
  {
    "text": "go so these are starting to attack that",
    "start": "1512840",
    "end": "1516480"
  },
  {
    "text": "instance i've taken a t1 micro it's a",
    "start": "1516480",
    "end": "1518480"
  },
  {
    "text": "very small instance type and",
    "start": "1518480",
    "end": "1521919"
  },
  {
    "text": "it's already touched android cpu 100 cpu",
    "start": "1521919",
    "end": "1525039"
  },
  {
    "text": "mark",
    "start": "1525039",
    "end": "1526159"
  },
  {
    "text": "so now let us go and see what is",
    "start": "1526159",
    "end": "1527520"
  },
  {
    "text": "happening behind the scenes",
    "start": "1527520",
    "end": "1530159"
  },
  {
    "text": "if you look at the events",
    "start": "1530159",
    "end": "1533200"
  },
  {
    "text": "do you see that",
    "start": "1533440",
    "end": "1536080"
  },
  {
    "text": "it's added a new instance for me",
    "start": "1538400",
    "end": "1541679"
  },
  {
    "text": "where has this instance been added",
    "start": "1541679",
    "end": "1545120"
  },
  {
    "text": "in the oregon region",
    "start": "1545600",
    "end": "1547760"
  },
  {
    "text": "i have an instance now",
    "start": "1547760",
    "end": "1551720"
  },
  {
    "text": "see that coming up",
    "start": "1567279",
    "end": "1570799"
  },
  {
    "text": "so i have instances coming up so these",
    "start": "1570799",
    "end": "1573039"
  },
  {
    "text": "instances as they come up",
    "start": "1573039",
    "end": "1575440"
  },
  {
    "text": "they have to clear the health check of",
    "start": "1575440",
    "end": "1577760"
  },
  {
    "text": "the load balancer the load balancer has",
    "start": "1577760",
    "end": "1580000"
  },
  {
    "text": "to do a health check",
    "start": "1580000",
    "end": "1582400"
  },
  {
    "text": "and if they pass the health check then",
    "start": "1582400",
    "end": "1584559"
  },
  {
    "text": "they get attached to the load balancer",
    "start": "1584559",
    "end": "1586720"
  },
  {
    "text": "so i've got a load balancer here",
    "start": "1586720",
    "end": "1590919"
  },
  {
    "text": "this may not be my instance load",
    "start": "1601039",
    "end": "1603200"
  },
  {
    "text": "balancer",
    "start": "1603200",
    "end": "1605440"
  },
  {
    "text": "okay there we go",
    "start": "1605440",
    "end": "1608559"
  },
  {
    "text": "you see those instances coming up",
    "start": "1610240",
    "end": "1613520"
  },
  {
    "text": "you see them in service out of service",
    "start": "1613520",
    "end": "1617760"
  },
  {
    "text": "so as they clear the health check",
    "start": "1617760",
    "end": "1621200"
  },
  {
    "text": "the health check is basically defined",
    "start": "1621200",
    "end": "1622799"
  },
  {
    "text": "here",
    "start": "1622799",
    "end": "1624000"
  },
  {
    "text": "as",
    "start": "1624000",
    "end": "1625279"
  },
  {
    "text": "a tcp 80",
    "start": "1625279",
    "end": "1627440"
  },
  {
    "text": "a ping target of tcp 80 i pinged the tcp",
    "start": "1627440",
    "end": "1630159"
  },
  {
    "text": "80 port",
    "start": "1630159",
    "end": "1632799"
  },
  {
    "text": "every five seconds",
    "start": "1633039",
    "end": "1634880"
  },
  {
    "text": "at an interval of",
    "start": "1634880",
    "end": "1636640"
  },
  {
    "text": "so every 30 seconds sorry at a time out",
    "start": "1636640",
    "end": "1639039"
  },
  {
    "text": "of five seconds if i don't receive a",
    "start": "1639039",
    "end": "1640399"
  },
  {
    "text": "response back in five seconds i mark the",
    "start": "1640399",
    "end": "1642640"
  },
  {
    "text": "instance healthy if",
    "start": "1642640",
    "end": "1644640"
  },
  {
    "text": "it consecutively fails for five times",
    "start": "1644640",
    "end": "1648080"
  },
  {
    "text": "and i mark the instance healthy if it",
    "start": "1648080",
    "end": "1650399"
  },
  {
    "text": "consecutively passes for three times",
    "start": "1650399",
    "end": "1652880"
  },
  {
    "text": "so as the instance come up",
    "start": "1652880",
    "end": "1655039"
  },
  {
    "text": "they get attached to the load balancer",
    "start": "1655039",
    "end": "1657520"
  },
  {
    "text": "and the load balancer starts serving the",
    "start": "1657520",
    "end": "1659679"
  },
  {
    "text": "traffic to these instances as well like",
    "start": "1659679",
    "end": "1661520"
  },
  {
    "text": "what peter told",
    "start": "1661520",
    "end": "1663919"
  },
  {
    "text": "your instances are running hot as they",
    "start": "1663919",
    "end": "1666320"
  },
  {
    "text": "become hotter auto scaling will kick in",
    "start": "1666320",
    "end": "1668399"
  },
  {
    "text": "and add more instances so that your",
    "start": "1668399",
    "end": "1670399"
  },
  {
    "text": "instance can run cooler so let us go",
    "start": "1670399",
    "end": "1673120"
  },
  {
    "text": "back and look at our",
    "start": "1673120",
    "end": "1675919"
  },
  {
    "text": "cpu utilization graph",
    "start": "1675919",
    "end": "1677919"
  },
  {
    "text": "are you able to see that",
    "start": "1677919",
    "end": "1680080"
  },
  {
    "text": "as we keep adding instances are you able",
    "start": "1680080",
    "end": "1682480"
  },
  {
    "text": "to see the",
    "start": "1682480",
    "end": "1684960"
  },
  {
    "text": "the drop",
    "start": "1685039",
    "end": "1686159"
  },
  {
    "text": "in cpu utilization",
    "start": "1686159",
    "end": "1688640"
  },
  {
    "text": "as we keep adding instances the fleet",
    "start": "1688640",
    "end": "1691360"
  },
  {
    "text": "that is running",
    "start": "1691360",
    "end": "1692799"
  },
  {
    "text": "is reducing their cpu they're running",
    "start": "1692799",
    "end": "1694480"
  },
  {
    "text": "colder now they're running warmer maybe",
    "start": "1694480",
    "end": "1697600"
  },
  {
    "text": "and as more instances are added you will",
    "start": "1697600",
    "end": "1699760"
  },
  {
    "text": "see that the cpu utilization comes down",
    "start": "1699760",
    "end": "1701440"
  },
  {
    "text": "to 25 percent",
    "start": "1701440",
    "end": "1703279"
  },
  {
    "text": "and then once the b stop working",
    "start": "1703279",
    "end": "1705679"
  },
  {
    "text": "the cpu utilization goes back to",
    "start": "1705679",
    "end": "1710000"
  },
  {
    "text": "sorry your instances go back to the",
    "start": "1710000",
    "end": "1711919"
  },
  {
    "text": "number of instances that you have",
    "start": "1711919",
    "end": "1713200"
  },
  {
    "text": "defined as the minimum",
    "start": "1713200",
    "end": "1715760"
  },
  {
    "text": "so let us go back and see our cloudfront",
    "start": "1715760",
    "end": "1720240"
  },
  {
    "text": "application summit 2013.",
    "start": "1721279",
    "end": "1724720"
  },
  {
    "text": "so what is happening there wow the",
    "start": "1724720",
    "end": "1727039"
  },
  {
    "text": "application is up and running",
    "start": "1727039",
    "end": "1729200"
  },
  {
    "text": "my",
    "start": "1729200",
    "end": "1731440"
  },
  {
    "text": "there we go",
    "start": "1733279",
    "end": "1735039"
  },
  {
    "text": "this is now being served from the",
    "start": "1735039",
    "end": "1740080"
  },
  {
    "text": "cloud front edge in singapore",
    "start": "1740240",
    "end": "1742720"
  },
  {
    "text": "so let us go and see actually what",
    "start": "1742720",
    "end": "1744480"
  },
  {
    "text": "happens here so let us quickly open our",
    "start": "1744480",
    "end": "1748559"
  },
  {
    "text": "incognito window",
    "start": "1751120",
    "end": "1752880"
  },
  {
    "text": "go to the developer tab",
    "start": "1752880",
    "end": "1756000"
  },
  {
    "text": "same like what we did last time go to",
    "start": "1756000",
    "end": "1758080"
  },
  {
    "text": "the network",
    "start": "1758080",
    "end": "1759520"
  },
  {
    "text": "and",
    "start": "1759520",
    "end": "1761360"
  },
  {
    "text": "call this so that's getting served from",
    "start": "1761360",
    "end": "1763360"
  },
  {
    "text": "a play from a",
    "start": "1763360",
    "end": "1764880"
  },
  {
    "text": "location closer to me",
    "start": "1764880",
    "end": "1768159"
  },
  {
    "text": "this way",
    "start": "1769919",
    "end": "1771440"
  },
  {
    "text": "you can take your",
    "start": "1771440",
    "end": "1772960"
  },
  {
    "text": "application global",
    "start": "1772960",
    "end": "1774720"
  },
  {
    "text": "and scale your application that you have",
    "start": "1774720",
    "end": "1776880"
  },
  {
    "text": "built in 15 minutes",
    "start": "1776880",
    "end": "1780320"
  },
  {
    "text": "and make it available to a global",
    "start": "1780320",
    "end": "1782159"
  },
  {
    "text": "audience at scale",
    "start": "1782159",
    "end": "1786000"
  }
]