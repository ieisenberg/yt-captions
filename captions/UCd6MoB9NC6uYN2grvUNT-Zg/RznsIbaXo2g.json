[
  {
    "text": "[Music]",
    "start": "3090",
    "end": "6319"
  },
  {
    "text": "to the Amazon web service [Music]",
    "start": "8360",
    "end": "14839"
  },
  {
    "text": "Cloud I'm Julian I'm a technical evangelist with the Ws and uh I'm based",
    "start": "14839",
    "end": "20680"
  },
  {
    "text": "in the Paris office and sorry I don't really speak German um I could try but",
    "start": "20680",
    "end": "26880"
  },
  {
    "text": "I'm afraid you wouldn't understand a word of what I'm saying and that's not quite the point so uh",
    "start": "26880",
    "end": "34200"
  },
  {
    "text": "thank you so much for uh for visiting us in in the Loft uh it's a it's a pleasure",
    "start": "34200",
    "end": "39280"
  },
  {
    "text": "to see you guys and today uh it's a it's a fun session I hope um I'm going to to",
    "start": "39280",
    "end": "47680"
  },
  {
    "text": "walk you through uh the different ways uh of deploying code and applications to a us",
    "start": "47680",
    "end": "56520"
  },
  {
    "text": "okay and so hopefully it will last 60 minutes and I won't I won't be too long but if you have",
    "start": "56520",
    "end": "63039"
  },
  {
    "text": "questions please ask your questions uh I'll be around after the session I'm also here tomorrow so you know we have",
    "start": "63039",
    "end": "70520"
  },
  {
    "text": "plenty of time uh after the session as well to to talk and answer all your questions okay uh so before we start",
    "start": "70520",
    "end": "77640"
  },
  {
    "text": "just to make sure uh and understand who's uh who's in the room who has never used thews",
    "start": "77640",
    "end": "83759"
  },
  {
    "text": "before all right welcome guys so this is the session for you uh who has used ec2",
    "start": "83759",
    "end": "89920"
  },
  {
    "text": "two started virtual machines all right a couple of people yeah a few more uh elastic bin",
    "start": "89920",
    "end": "96040"
  },
  {
    "text": "stock all right good ECS Docker no all right and",
    "start": "96040",
    "end": "103159"
  },
  {
    "text": "Lambda H more people have tried Lambda than e ECS that's interesting okay all",
    "start": "103159",
    "end": "108520"
  },
  {
    "text": "right so you're in the right session okay uh we're going to go through all four uh do a lot of",
    "start": "108520",
    "end": "114880"
  },
  {
    "text": "demos and uh and hopefully answer many questions okay so let's get started",
    "start": "114880",
    "end": "121640"
  },
  {
    "text": "so we have four ways of deploying code four different Technologies uh to do",
    "start": "123159",
    "end": "128599"
  },
  {
    "text": "this on AWS so the first one is ec2 deploying virtual machines second one is",
    "start": "128599",
    "end": "135080"
  },
  {
    "text": "elastic bean stock it's a path a pass platform as a service uh product uh",
    "start": "135080",
    "end": "141440"
  },
  {
    "text": "where you will only deploy your app and not manage the underlying infrastructure we have ECS which allows you to manage",
    "start": "141440",
    "end": "148879"
  },
  {
    "text": "uh Docker clusters and last but definitely not least you have Lambda which is a new way of",
    "start": "148879",
    "end": "154319"
  },
  {
    "text": "deploying code by deploying only functions stateless functions okay so we're going to study all four and we",
    "start": "154319",
    "end": "161280"
  },
  {
    "text": "have a Blog dedicated to compute Technologies uh so it's updated all the",
    "start": "161280",
    "end": "166560"
  },
  {
    "text": "time so I strongly advise that you keep an eye on this to know about the latest features latest examples Etc it's a",
    "start": "166560",
    "end": "173360"
  },
  {
    "text": "really really good way of staying in touch so let's start and we'll go in",
    "start": "173360",
    "end": "179400"
  },
  {
    "text": "chronolog logical order you know I think that makes sense to see the progression of computing so the first one um I'm",
    "start": "179400",
    "end": "187560"
  },
  {
    "text": "sure you've at least heard the name is it's it's ec2 okay ec2 is the virtual",
    "start": "187560",
    "end": "194239"
  },
  {
    "text": "machine technology of the AWS Cloud um it it was launched in",
    "start": "194239",
    "end": "201200"
  },
  {
    "text": "2006 so you know it's been there for a while it's been there for 10 years now",
    "start": "201200",
    "end": "206319"
  },
  {
    "text": "extremely solid and it's really one of the foundations of the AWS cloud and",
    "start": "206319",
    "end": "212599"
  },
  {
    "text": "this is really a lower level service right if you want to call that infrastructure out service well why not",
    "start": "212599",
    "end": "219680"
  },
  {
    "text": "okay so basically what you're going to do is you're going to select a machine",
    "start": "219680",
    "end": "225319"
  },
  {
    "text": "image we call that an Ami Amazon machine image that could be a",
    "start": "225319",
    "end": "230480"
  },
  {
    "text": "Linux image a Windows image your own image that you created all kinds of",
    "start": "230480",
    "end": "237239"
  },
  {
    "text": "different images you're going to select an instant size okay and the size will",
    "start": "237239",
    "end": "243120"
  },
  {
    "text": "drive the CPU power the amount of memory and a few other things Network IO Etc",
    "start": "243120",
    "end": "250079"
  },
  {
    "text": "okay and you're going to start your virtual machine right um and that's it",
    "start": "250079",
    "end": "255920"
  },
  {
    "text": "really it's it's a very simple Service uh and once the server is up when the virtual machine is running then you can",
    "start": "255920",
    "end": "262280"
  },
  {
    "text": "connect to it and manage it like you would manage a normal server okay so",
    "start": "262280",
    "end": "268400"
  },
  {
    "text": "nothing extraordinary pretty basic uh and the good thing about ec2 is that of",
    "start": "268400",
    "end": "276639"
  },
  {
    "text": "course you get the virtual machines but you get a whole new a whole different set of services that work with ec2 so",
    "start": "276639",
    "end": "284759"
  },
  {
    "text": "you get for example load balancing you get uh monitoring you get Auto",
    "start": "284759",
    "end": "291080"
  },
  {
    "text": "scaling uh you get uh network storage EBS etc etc okay so it's not just okay",
    "start": "291080",
    "end": "299080"
  },
  {
    "text": "let's start a virtual machine in the middle of nowhere and then H what can I really do with it here you start virtual",
    "start": "299080",
    "end": "305440"
  },
  {
    "text": "machines you can lo load balance them you can scale them you can uh monitor",
    "start": "305440",
    "end": "310639"
  },
  {
    "text": "them etc etc etc okay so it's really very very it's a basic service it's infrastructure a service but it's really",
    "start": "310639",
    "end": "317039"
  },
  {
    "text": "powerful and you know a lot of customers are using this uh to to build that platforms okay how much does it",
    "start": "317039",
    "end": "324919"
  },
  {
    "text": "cost well quite simple too uh you pay by the hour depending on the instance size",
    "start": "324919",
    "end": "332280"
  },
  {
    "text": "obviously the more powerful the instance is the more expensive it is um and that's it okay so you start an",
    "start": "332280",
    "end": "341560"
  },
  {
    "text": "instance and as soon as as it starts you start you start to pay by the hour okay",
    "start": "341560",
    "end": "347000"
  },
  {
    "text": "it doesn't matter if the instance is actually used or not right starting it means you have to",
    "start": "347000",
    "end": "353319"
  },
  {
    "text": "pay for it okay we'll get back to that because that's a huge difference with Lambda that I'm going to cover later on",
    "start": "353319",
    "end": "360080"
  },
  {
    "text": "uh in some cases let's say you um uh you you man you started an instance uh that",
    "start": "360080",
    "end": "367319"
  },
  {
    "text": "you took from the AWS Marketplace which is where uh software vendors will package and and uh and offer their",
    "start": "367319",
    "end": "375360"
  },
  {
    "text": "software for you guys to use and some of this uh some of this software is free",
    "start": "375360",
    "end": "382520"
  },
  {
    "text": "some of it you have to pay for it right so sometimes there's the instance price and then there's a also an hourly fee",
    "start": "382520",
    "end": "389880"
  },
  {
    "text": "that the vendor will add on top of the VM fee okay so you have to be careful",
    "start": "389880",
    "end": "395599"
  },
  {
    "text": "there so when would you like when when should you use in my opinion um ec2 well",
    "start": "395599",
    "end": "401319"
  },
  {
    "text": "you should use it when you really need full power full administrative power on",
    "start": "401319",
    "end": "406599"
  },
  {
    "text": "your infrastructure okay when you want to be fully in charge of the server managing it completely then fine ec2 is",
    "start": "406599",
    "end": "414360"
  },
  {
    "text": "the way to go okay but you know remember you have with great powers come great",
    "start": "414360",
    "end": "420759"
  },
  {
    "text": "responsibility so if you decide to do this you really have to manage your",
    "start": "420759",
    "end": "426000"
  },
  {
    "text": "instance you're in charge of security you're in charge of patching you're you're in charge of backups etc etc okay",
    "start": "426000",
    "end": "434080"
  },
  {
    "text": "so keep that in mind because again this will be a big difference with the the other Technologies um there are two other",
    "start": "434080",
    "end": "441720"
  },
  {
    "text": "things I want to mention because they they allow M massive savings it's reserved instances and spot instances",
    "start": "441720",
    "end": "448879"
  },
  {
    "text": "reserved in instances is basically a way of saying well I've got this 25 30 50",
    "start": "448879",
    "end": "457199"
  },
  {
    "text": "instances and yes they really run 24/7 right I'm never stopping them um they",
    "start": "457199",
    "end": "463960"
  },
  {
    "text": "really you know they're really needed in my infrastructure maybe there are database servers you know something that you don't want to power off at night",
    "start": "463960",
    "end": "470800"
  },
  {
    "text": "then you can contact the AWS team and you can sign this reserved instance deal",
    "start": "470800",
    "end": "476919"
  },
  {
    "text": "where by prepaying a certain amount over one year or three years you get uh a",
    "start": "476919",
    "end": "483280"
  },
  {
    "text": "large discount okay that can go from let's say 20% to probably 60 and 65%",
    "start": "483280",
    "end": "490360"
  },
  {
    "text": "okay just by saying okay I'm committing to use this for one year let's say or or three years and I'm prepaying a certain",
    "start": "490360",
    "end": "497479"
  },
  {
    "text": "amount so immediately you save up to 60% so that's pretty cool if you really need",
    "start": "497479",
    "end": "502960"
  },
  {
    "text": "those instances to be up all the time and spot instances are completely different um there's a market place for",
    "start": "502960",
    "end": "510919"
  },
  {
    "text": "unused ec2 capacity right at any given time we have unused ec2 capacity and you",
    "start": "510919",
    "end": "516640"
  },
  {
    "text": "can buy this extra capacity that no one uses with a beading mechanism right so",
    "start": "516640",
    "end": "522880"
  },
  {
    "text": "it's it's like bidding so there's a market price and you bid for a certain",
    "start": "522880",
    "end": "528760"
  },
  {
    "text": "instance size if your price is above the bidding price then you get your instance",
    "start": "528760",
    "end": "534959"
  },
  {
    "text": "okay and you can get the the instances at up to 90% less",
    "start": "534959",
    "end": "540079"
  },
  {
    "text": "right so that's divided by 10 okay so it's a huge discount you can get the",
    "start": "540079",
    "end": "545920"
  },
  {
    "text": "same instance size 10 times cheaper so what's the catch okay the catch right",
    "start": "545920",
    "end": "553399"
  },
  {
    "text": "because there is one but I'm telling you so it's not really a catch the catch is",
    "start": "553399",
    "end": "558480"
  },
  {
    "text": "that um if the market price exceeds the pay the price you're paying for the",
    "start": "558480",
    "end": "564399"
  },
  {
    "text": "instance then you're going to lose the instance in two minutes you get a notification and two minutes later the",
    "start": "564399",
    "end": "570600"
  },
  {
    "text": "instance is gone okay so a couple of consequences do not run all your",
    "start": "570600",
    "end": "576680"
  },
  {
    "text": "infrastructure with spot instances right do not put",
    "start": "576680",
    "end": "582320"
  },
  {
    "text": "anything that is that should be long lasting in spot instances database",
    "start": "582320",
    "end": "588920"
  },
  {
    "text": "servers come to mind okay web servers fine stateless stuff fine database",
    "start": "588920",
    "end": "595079"
  },
  {
    "text": "servers going down in two minutes M no okay and the the the last consequence is",
    "start": "595079",
    "end": "601800"
  },
  {
    "text": "of course if you bid a fraction of a scent above market price there's more",
    "start": "601800",
    "end": "607360"
  },
  {
    "text": "risk then you're going to lose the instances that if you bid at let's say",
    "start": "607360",
    "end": "612800"
  },
  {
    "text": "uh you know 15% or 20% above market price okay so you can manage the risk versus the savings okay you can look it",
    "start": "612800",
    "end": "620880"
  },
  {
    "text": "up on our website you you have some examples there but you know bottom line ec2 is great you get a proper server you",
    "start": "620880",
    "end": "627920"
  },
  {
    "text": "can manage it completely and we're going to start one in 5 seconds but you have work to do you have",
    "start": "627920",
    "end": "634200"
  },
  {
    "text": "security to do you have backups to to take care of etc etc and you pay by the hour right so hourly price times 24 time",
    "start": "634200",
    "end": "643519"
  },
  {
    "text": "365 it always comes up to a significant amount right so if you really need",
    "start": "643519",
    "end": "649880"
  },
  {
    "text": "instances to be up all the time try to study reserved instances or try to work with spot instances and you will save a",
    "start": "649880",
    "end": "656399"
  },
  {
    "text": "ton of money right and we want you to save money believe it or not so how",
    "start": "656399",
    "end": "661920"
  },
  {
    "text": "would you start an2 instance well of course you could go in the console and click everywhere okay uh",
    "start": "661920",
    "end": "669800"
  },
  {
    "text": "but you know serious people like you you know they want scripts right they want to do this",
    "start": "669800",
    "end": "675040"
  },
  {
    "text": "automatically so this is how you would do it with a the AWS CLI okay so AWS is the actual tool ec2",
    "start": "675040",
    "end": "683480"
  },
  {
    "text": "is the name of the service run instances you know to start a new instance uh I'm also mentioning the uh",
    "start": "683480",
    "end": "692839"
  },
  {
    "text": "uh the image uh ID right the Ami so in this case it's our Amazon Linux",
    "start": "692839",
    "end": "699360"
  },
  {
    "text": "distribution the instance type T2 micro that's really small",
    "start": "699360",
    "end": "704440"
  },
  {
    "text": "okay really unexpensive uh an SSH key because I want to SSH to that server a",
    "start": "704440",
    "end": "710959"
  },
  {
    "text": "security group ID security groups are uh it's the manag firewall uh feature of",
    "start": "710959",
    "end": "716600"
  },
  {
    "text": "AWS so this is where you're opening and opening ports and allowing access to",
    "start": "716600",
    "end": "721680"
  },
  {
    "text": "your instance and the region where I want to start it so EU West which is the Irish region okay so let's try to do",
    "start": "721680",
    "end": "731399"
  },
  {
    "text": "this so I did prepare a little bit because you don't want to see me typing",
    "start": "735440",
    "end": "741720"
  },
  {
    "text": "okay so that's the exact same command that you saw",
    "start": "741720",
    "end": "746040"
  },
  {
    "text": "right is that the M aws2 sorry is that the",
    "start": "748160",
    "end": "755240"
  },
  {
    "text": "aws2 into which you try uh no that's uh so this is here I'm",
    "start": "755240",
    "end": "761360"
  },
  {
    "text": "working locally on my Mac okay I'm work I'm doing everything locally from my Mac and sending commands to to a WS okay so",
    "start": "761360",
    "end": "769560"
  },
  {
    "text": "it started and and it sent me way more information than I really wanted but",
    "start": "769560",
    "end": "776040"
  },
  {
    "text": "that's how it works okay so you can see whoops you can see that the instance has been",
    "start": "776040",
    "end": "783399"
  },
  {
    "text": "started and I see a lot of information on uh you know what subnet it has been",
    "start": "783399",
    "end": "789240"
  },
  {
    "text": "started in and the IP address Etc okay so now if I'm looking at the AWS",
    "start": "789240",
    "end": "796079"
  },
  {
    "text": "console I should see yeah it's in there okay it's this one actually as you can",
    "start": "798680",
    "end": "804800"
  },
  {
    "text": "see it's initializing here okay so that's the console if you've never seen it before this is",
    "start": "804800",
    "end": "810279"
  },
  {
    "text": "where I'm seeing all my ec2 instances right for the uh for the Irish region",
    "start": "810279",
    "end": "816199"
  },
  {
    "text": "okay if I want to start stuff somewhere else I could choose any of those right",
    "start": "816199",
    "end": "822320"
  },
  {
    "text": "Sydney seal Frankfurt select that and I would work with that part of my of our",
    "start": "822320",
    "end": "828120"
  },
  {
    "text": "infrastructure okay okay so it started it has a public",
    "start": "828120",
    "end": "834519"
  },
  {
    "text": "DNS name so why don't we try to connect",
    "start": "834519",
    "end": "841040"
  },
  {
    "text": "hopefully it's ready yes all right nothing",
    "start": "845720",
    "end": "852639"
  },
  {
    "text": "spectacular SSH but okay that's my server",
    "start": "852639",
    "end": "857759"
  },
  {
    "text": "right um and it would be exactly the same way if you started a Windows Server of course you would not SSH you would",
    "start": "857759",
    "end": "864720"
  },
  {
    "text": "probably RDP into the instance but it's a similar thing okay if you want to",
    "start": "864720",
    "end": "870279"
  },
  {
    "text": "build your own Ami with your favorite deban or whatever distribution you can",
    "start": "870279",
    "end": "876240"
  },
  {
    "text": "do that too you know that's how you do it right so",
    "start": "876240",
    "end": "882440"
  },
  {
    "text": "now let's say I now I need a server in Frankfurt right sorry we don't",
    "start": "883519",
    "end": "892079"
  },
  {
    "text": "have munic yet okay so all I'm all I need to do is",
    "start": "892079",
    "end": "898560"
  },
  {
    "text": "to change the region and that doesn't work because my",
    "start": "898560",
    "end": "905399"
  },
  {
    "text": "security group does not exist in that region okay so I okay I don't have the time to do it but this is what you would",
    "start": "905399",
    "end": "911839"
  },
  {
    "text": "do okay uh you would just start sorry you would just change the region uh put",
    "start": "911839",
    "end": "918480"
  },
  {
    "text": "the right Security Group reference uh for that region and you would start it",
    "start": "918480",
    "end": "924040"
  },
  {
    "text": "okay and from the console you would just like I said uh",
    "start": "924040",
    "end": "929839"
  },
  {
    "text": "let's probably I have some stuff running in the US let's take a",
    "start": "929839",
    "end": "934880"
  },
  {
    "text": "look yep and I could do things manually as",
    "start": "938240",
    "end": "943480"
  },
  {
    "text": "well just click the big blue button select my",
    "start": "943480",
    "end": "949800"
  },
  {
    "text": "Ami select an instant size give some Network preferences etc",
    "start": "952199",
    "end": "958360"
  },
  {
    "text": "etc and I would launch it okay but again clicking in the console is nice when you",
    "start": "958360",
    "end": "963440"
  },
  {
    "text": "want to experiment and learn but for production you want to script and automate obviously",
    "start": "963440",
    "end": "970839"
  },
  {
    "text": "okay okay so this is really the most important command for ec2 that's the one",
    "start": "976319",
    "end": "982279"
  },
  {
    "text": "that start starts instances uh there are quite a few more actually uh ec2 has 200",
    "start": "982279",
    "end": "990800"
  },
  {
    "text": "apis so uh it's very granular so don't worry you don't have to learn the",
    "start": "990800",
    "end": "995880"
  },
  {
    "text": "2011 but uh there's quite a few right starting instances stopping instances",
    "start": "995880",
    "end": "1001440"
  },
  {
    "text": "managing uh security groups etc etc etc okay so it's it's a pretty rich API here",
    "start": "1001440",
    "end": "1008199"
  },
  {
    "text": "okay so that's what that's how you do ec2 right fairly simple full power full",
    "start": "1008199",
    "end": "1015120"
  },
  {
    "text": "administrative power on the instance but you have to work with it right",
    "start": "1015120",
    "end": "1020839"
  },
  {
    "text": "so now let's look at the second product which is elastic bean stock and as you will see it's quite different so it was",
    "start": "1021199",
    "end": "1028000"
  },
  {
    "text": "launched five years ago and ec2 was",
    "start": "1028000",
    "end": "1033038"
  },
  {
    "text": "infrastructure as a service right you started infrastructure and you had to manage it elastic beIN stock is platform",
    "start": "1033039",
    "end": "1039839"
  },
  {
    "text": "as a service because in this case we will provide uh a a full platform for you to",
    "start": "1039839",
    "end": "1045918"
  },
  {
    "text": "work with so we support a number of platforms PHP java. net Etc I will show",
    "start": "1045919",
    "end": "1053160"
  },
  {
    "text": "you the full list on the next slide it's it's quite long and this is really a a product for",
    "start": "1053160",
    "end": "1060080"
  },
  {
    "text": "developers okay because typically developers do not want uh to manage infrastructure right you don't want to",
    "start": "1060080",
    "end": "1066360"
  },
  {
    "text": "worry about starting instances and managing subnets and firewall rules and Etc you just want your PHP environment",
    "start": "1066360",
    "end": "1073440"
  },
  {
    "text": "or your Java environment or your Ruby environment where you can drop your code and test it and and hack it and and just",
    "start": "1073440",
    "end": "1080480"
  },
  {
    "text": "work do some useful work instead of managing infrastructure okay so there's a specific command line for elastic bin",
    "start": "1080480",
    "end": "1087400"
  },
  {
    "text": "stock which I'm going to use called EB right and it's it's really easy it doesn't you know it doesn't have a lot",
    "start": "1087400",
    "end": "1094120"
  },
  {
    "text": "of commands it's as you will see you create environments and you deploy your code and it's really really easy to",
    "start": "1094120",
    "end": "1099880"
  },
  {
    "text": "learn um this is uh you have built-in monitoring built-in networking",
    "start": "1099880",
    "end": "1107360"
  },
  {
    "text": "Etc uh and again I think this is the simplest way",
    "start": "1107360",
    "end": "1113559"
  },
  {
    "text": "and this should be the default way of deploying code usually people rush to",
    "start": "1113559",
    "end": "1119120"
  },
  {
    "text": "ec2 you know because they want that server right give me a server okay here it is but then they have to manage they",
    "start": "1119120",
    "end": "1125760"
  },
  {
    "text": "have to install their PHP environment and or whatever and you know they have to take care of everything and that that",
    "start": "1125760",
    "end": "1132360"
  },
  {
    "text": "is a problem okay so elastic beIN stock will provide all that stuff for you and",
    "start": "1132360",
    "end": "1138080"
  },
  {
    "text": "all you have to do is deploy your code okay so let's look at the platforms so that's the full list okay and it's",
    "start": "1138080",
    "end": "1145159"
  },
  {
    "text": "constantly updated with the latest revisions so you can deploy uh Docker containers you can deploy Java Tomcat",
    "start": "1145159",
    "end": "1153640"
  },
  {
    "text": "goang python Ruby PHP nodejs in all with all different versions right and you",
    "start": "1153640",
    "end": "1160440"
  },
  {
    "text": "know keeps it keeps getting updated so when there's a new PHP version you know",
    "start": "1160440",
    "end": "1165640"
  },
  {
    "text": "PHP 7 is there and whenever 7.1 7 do2 7.3 show up they will be added",
    "start": "1165640",
    "end": "1171919"
  },
  {
    "text": "right so lots of different platforms so let's dive a little deeper so when I'm",
    "start": "1171919",
    "end": "1179000"
  },
  {
    "text": "saying it's platform as a service right it's because all you have to",
    "start": "1179000",
    "end": "1184039"
  },
  {
    "text": "provide is that green thing your code okay everything else will be delivered",
    "start": "1184039",
    "end": "1192039"
  },
  {
    "text": "by elastic bin stock okay so contrast this with using ec2 if you use EC",
    "start": "1192039",
    "end": "1199240"
  },
  {
    "text": "to you have to select an operating system right and you have to patch it",
    "start": "1199240",
    "end": "1206360"
  },
  {
    "text": "and take care of it in the long run you need to have an application server so you need to install your engine X or",
    "start": "1206360",
    "end": "1213360"
  },
  {
    "text": "Tomcat or whatever you need you need your language environment so your PHP distribution your GDK your Ruby platform",
    "start": "1213360",
    "end": "1221240"
  },
  {
    "text": "etc etc and God knows there's a lot of work involved in maintaining that in the long run right security problem",
    "start": "1221240",
    "end": "1229280"
  },
  {
    "text": "patches etc etc okay so here we're all the gray and all the",
    "start": "1229280",
    "end": "1235960"
  },
  {
    "text": "gray stuff is what the beIN stock environment is going to build automatically for you okay just add your",
    "start": "1235960",
    "end": "1243360"
  },
  {
    "text": "code so let's let's do a small demo so we don't have much time so I'm going to",
    "start": "1243360",
    "end": "1249520"
  },
  {
    "text": "keep it really simple so what I'm going to do I'm going to create a very simple rails",
    "start": "1249520",
    "end": "1255600"
  },
  {
    "text": "application it's a Blog application because I think the word world needs another blog application especially mine",
    "start": "1255600",
    "end": "1262520"
  },
  {
    "text": "um you know you can never have too many blogs um I'm going to create that",
    "start": "1262520",
    "end": "1269600"
  },
  {
    "text": "application I'm going to deploy it to be stock and change a page somewhere and",
    "start": "1269600",
    "end": "1276240"
  },
  {
    "text": "redeploy okay so to save some time I did prepare the the demo but I'm going to",
    "start": "1276240",
    "end": "1282799"
  },
  {
    "text": "show you the steps uh so the first important thing is that you need to use git because bin",
    "start": "1282799",
    "end": "1289159"
  },
  {
    "text": "stock is going to deploy from your uh from your",
    "start": "1289159",
    "end": "1294440"
  },
  {
    "text": "committed uh code in git okay so you can have multiple branches of course Etc but",
    "start": "1294440",
    "end": "1302360"
  },
  {
    "text": "bin stock is going to deploy from the committed code okay there's an option to",
    "start": "1302360",
    "end": "1307919"
  },
  {
    "text": "to to deploy from the staged code but by default we deploy from committed code so",
    "start": "1307919",
    "end": "1313919"
  },
  {
    "text": "I'm creating a new app a new rails app which I'm calling blog right",
    "start": "1313919",
    "end": "1319320"
  },
  {
    "text": "I'm adding all the stuff that rails created to git and that's my first version okay so so far so",
    "start": "1319320",
    "end": "1327480"
  },
  {
    "text": "good then it's a Blog right so a Blog needs posts so I need to add a post post",
    "start": "1327480",
    "end": "1333919"
  },
  {
    "text": "resource to rails okay so a post will have a title which is a string and uh a",
    "start": "1333919",
    "end": "1341159"
  },
  {
    "text": "body which is text okay so I'm asking rails to generate all the all the all",
    "start": "1341159",
    "end": "1347400"
  },
  {
    "text": "the templates all the code code for this post resource then I'm applying this to the DB adding everything to git right",
    "start": "1347400",
    "end": "1357000"
  },
  {
    "text": "and at this stage you know I should be able to start locally my rails app and",
    "start": "1357000",
    "end": "1362240"
  },
  {
    "text": "open it so let's try that make sure that it actually",
    "start": "1362240",
    "end": "1368200"
  },
  {
    "text": "works okay so that's everything that rails created with those few commands",
    "start": "1370440",
    "end": "1376440"
  },
  {
    "text": "Okay so let's",
    "start": "1376440",
    "end": "1381679"
  },
  {
    "text": "try to start this okay and let's open it",
    "start": "1381679",
    "end": "1390919"
  },
  {
    "text": "locally okay so rails is running and yeah okay so that's my code",
    "start": "1392840",
    "end": "1401600"
  },
  {
    "text": "okay locally so let's try it",
    "start": "1401600",
    "end": "1406960"
  },
  {
    "text": "yeah okay so this seems to work right I'm on my way to becoming a a",
    "start": "1418760",
    "end": "1424760"
  },
  {
    "text": "billionaire with this application um but this is all local right so now I want to bring that code",
    "start": "1424760",
    "end": "1433440"
  },
  {
    "text": "to binstock okay how do I do this",
    "start": "1433440",
    "end": "1440440"
  },
  {
    "text": "so the first EB command that you need to learn is EB init where you're going to",
    "start": "1444200",
    "end": "1451200"
  },
  {
    "text": "create a new array a new elastic bin stock application okay the two",
    "start": "1451200",
    "end": "1457840"
  },
  {
    "text": "parameters that you need to give here are what platform you're going to use and in what region do you want to start",
    "start": "1457840",
    "end": "1464559"
  },
  {
    "text": "this new application so in my case I'm going to use Ruby that's a shortcut for",
    "start": "1464559",
    "end": "1470679"
  },
  {
    "text": "shortcut name pointing to the latest version but if you needed Ruby 20 patch",
    "start": "1470679",
    "end": "1476120"
  },
  {
    "text": "level whatever you could also use that okay that full list that I showed you before that's where you you would use",
    "start": "1476120",
    "end": "1482679"
  },
  {
    "text": "those names and I'm starting uh that app in EU West one",
    "start": "1482679",
    "end": "1489279"
  },
  {
    "text": "okay um and the only thing that it does really is uh it doesn't deploy any code",
    "start": "1489279",
    "end": "1496399"
  },
  {
    "text": "it just creates that application in elastic bean stock okay uh so let's",
    "start": "1496399",
    "end": "1502399"
  },
  {
    "text": "run this",
    "start": "1502399",
    "end": "1504799"
  },
  {
    "text": "command Okay so it was very fast so it didn't do much right obviously uh maybe",
    "start": "1523679",
    "end": "1529880"
  },
  {
    "text": "if we take a look at the B the bin stock console we can see some more",
    "start": "1529880",
    "end": "1535320"
  },
  {
    "text": "stuff okay that's the binol console and I see okay there's a Blog applic",
    "start": "1537559",
    "end": "1542760"
  },
  {
    "text": "application that is created but you know no code yet so this is just initializing",
    "start": "1542760",
    "end": "1549080"
  },
  {
    "text": "say hey I'm about to create Ruby stuff in EU West one now",
    "start": "1549080",
    "end": "1555520"
  },
  {
    "text": "what so I need to ignore the files for binstock but the really important thing",
    "start": "1555520",
    "end": "1561919"
  },
  {
    "text": "is this is now I want to create the one envir I want to create an",
    "start": "1561919",
    "end": "1568080"
  },
  {
    "text": "environment okay um so the difference between",
    "start": "1568080",
    "end": "1573120"
  },
  {
    "text": "application and environment is the application is the overall thing right it's Ruby it's a ruby app running in EU",
    "start": "1573120",
    "end": "1581039"
  },
  {
    "text": "West one and I can create multiple environments and usually that's what people do they create one from",
    "start": "1581039",
    "end": "1586880"
  },
  {
    "text": "development uh maybe one environment for each developer right that's because as",
    "start": "1586880",
    "end": "1592120"
  },
  {
    "text": "you can see it's really easy to do and then they will have environment for pre-production and production etc etc so",
    "start": "1592120",
    "end": "1597240"
  },
  {
    "text": "how do you create that so here I'm I'm assuming I want a simple development environment I just want a single",
    "start": "1597240",
    "end": "1603120"
  },
  {
    "text": "instance I don't need autoscaling I don't need node balancing I don't need anything fancy okay so I'm going to call",
    "start": "1603120",
    "end": "1610720"
  },
  {
    "text": "EB create blog Dev which is the name of the environment single which says this",
    "start": "1610720",
    "end": "1617159"
  },
  {
    "text": "is a single instance right just start me just one server uh an SSH key to connect to that",
    "start": "1617159",
    "end": "1624679"
  },
  {
    "text": "instance if I need to and this is uh rails stuff but uh rails apps need U uh",
    "start": "1624679",
    "end": "1633840"
  },
  {
    "text": "uh need a a secret token to encrypt cookies so you don't want to know okay",
    "start": "1633840",
    "end": "1639520"
  },
  {
    "text": "but this just shows you that you can also pass environment variables to your uh to your deployment okay so let's do",
    "start": "1639520",
    "end": "1646960"
  },
  {
    "text": "this see what",
    "start": "1646960",
    "end": "1651600"
  },
  {
    "text": "happens so if you remember that slide I showed you with the green code and everything else okay that takes care of",
    "start": "1663320",
    "end": "1670760"
  },
  {
    "text": "the everything else all right so yeah lots of details",
    "start": "1670760",
    "end": "1676159"
  },
  {
    "text": "here so what do we learn so EU West one good",
    "start": "1676159",
    "end": "1683159"
  },
  {
    "text": "um platform is Amazon Linux running Ruby 23 uh blah blah blah blah blah",
    "start": "1683159",
    "end": "1691799"
  },
  {
    "text": "okay and what it's going to do as well is look in that directory",
    "start": "1691799",
    "end": "1699399"
  },
  {
    "text": "where I run the command uh get the the committed code from the git repo zip it",
    "start": "1699399",
    "end": "1707559"
  },
  {
    "text": "copy it to 2 S3 or our object storage and and deploy that code okay so that's",
    "start": "1707559",
    "end": "1713559"
  },
  {
    "text": "what you see here deployed version right that's the internal version name for that that app okay and as you can",
    "start": "1713559",
    "end": "1722278"
  },
  {
    "text": "see it's creating all the infrastructure resources that I need so it's creating",
    "start": "1724159",
    "end": "1730960"
  },
  {
    "text": "uh a security group right to manage ports it's creating an IP",
    "start": "1730960",
    "end": "1736720"
  },
  {
    "text": "address uh and it's going to create the instance etc etc okay so how does that",
    "start": "1736720",
    "end": "1742760"
  },
  {
    "text": "work actually right let's look under the hood while it's doing",
    "start": "1742760",
    "end": "1748158"
  },
  {
    "text": "this has anybody heard of cloud formation one two yeah come on three",
    "start": "1748640",
    "end": "1755760"
  },
  {
    "text": "yeah four all",
    "start": "1755760",
    "end": "1759679"
  },
  {
    "text": "right so cloud formation is here and it's infrastructure as code",
    "start": "1761240",
    "end": "1769919"
  },
  {
    "text": "technology where you describe the infrastructure that you want to build in a",
    "start": "1769919",
    "end": "1777559"
  },
  {
    "text": "template yep uh that's either written in Jon or yaml right we support yaml",
    "start": "1777559",
    "end": "1784399"
  },
  {
    "text": "now and in this template in this case we would create uh an ec2 instance a",
    "start": "1784399",
    "end": "1790480"
  },
  {
    "text": "security group an IP address uh we would install the Ruby",
    "start": "1790480",
    "end": "1796080"
  },
  {
    "text": "environment blah blah blah blah blah blah blah okay and elastic bin stock is is all obviously building those",
    "start": "1796080",
    "end": "1801960"
  },
  {
    "text": "templates automatically and this is what you see here",
    "start": "1801960",
    "end": "1807360"
  },
  {
    "text": "okay so if I'm yeah if I'm zooming out a little bit we should so don't worry",
    "start": "1808080",
    "end": "1814039"
  },
  {
    "text": "about here right this is just the template it's generated automatically by VIN sto so it is pretty difficult to",
    "start": "1814039",
    "end": "1820519"
  },
  {
    "text": "read okay but this is the magic of combining",
    "start": "1820519",
    "end": "1827000"
  },
  {
    "text": "platform as a service with infrastructure as code right one command one click and you start all that",
    "start": "1827000",
    "end": "1835080"
  },
  {
    "text": "stuff automatically and if I want a second environment blog Dev two I can",
    "start": "1835080",
    "end": "1840399"
  },
  {
    "text": "just create it immediately and if I need 10 I can create 10 with the same Command right just changing the environment name",
    "start": "1840399",
    "end": "1846880"
  },
  {
    "text": "because it's all automated in the background okay if I'm looking at the events here",
    "start": "1846880",
    "end": "1853440"
  },
  {
    "text": "well actually it's done so we can take a look right so so I can see all the events all the",
    "start": "1853440",
    "end": "1859960"
  },
  {
    "text": "all the entities that uh Bin stock has created okay so let's go back",
    "start": "1859960",
    "end": "1868919"
  },
  {
    "text": "to my blog Dev here",
    "start": "1871360",
    "end": "1877240"
  },
  {
    "text": "okay right so in the bin stock console you can see a summary of those events",
    "start": "1878279",
    "end": "1884120"
  },
  {
    "text": "okay and I see that the the ec2 instance is starting so if I'm going back",
    "start": "1884120",
    "end": "1890559"
  },
  {
    "text": "to the2 console I should see",
    "start": "1890559",
    "end": "1895919"
  },
  {
    "text": "something but I need to go back to Ireland of",
    "start": "1901320",
    "end": "1906080"
  },
  {
    "text": "course here it is okay block Dev okay so you get you",
    "start": "1907720",
    "end": "1914760"
  },
  {
    "text": "see it's always I mean all how this uh product relate to one another yes at the",
    "start": "1914760",
    "end": "1920480"
  },
  {
    "text": "end of the day you're always creating E2 instances but you know in a much more",
    "start": "1920480",
    "end": "1925679"
  },
  {
    "text": "automated and much easier way if you ask me",
    "start": "1925679",
    "end": "1931120"
  },
  {
    "text": "okay so is this ready yet I want to see that code",
    "start": "1931120",
    "end": "1939200"
  },
  {
    "text": "running if not we will'll just move on and I'll get back to that in a minute okay so let's just wait for the",
    "start": "1941440",
    "end": "1947480"
  },
  {
    "text": "environment to start you know takes five six minutes and uh then we'll we'll go back",
    "start": "1947480",
    "end": "1954799"
  },
  {
    "text": "to that and I'll show you how to deploy code okay so let's move on to the Third Way",
    "start": "1954799",
    "end": "1961679"
  },
  {
    "text": "of deploying code uh CS ec2 container service so any Docker fans in the",
    "start": "1961679",
    "end": "1970519"
  },
  {
    "text": "audience just one oh wow usually it's like 60 hands okay all right um so so",
    "start": "1970519",
    "end": "1978799"
  },
  {
    "text": "ECS is is not just about running Docker on AWS it's about running Docker",
    "start": "1978799",
    "end": "1985000"
  },
  {
    "text": "clusters in AWS so let me explain the difference um it's very easy to start",
    "start": "1985000",
    "end": "1990960"
  },
  {
    "text": "Docker on your own machine and start your containers and and you know everybody does that today but when you",
    "start": "1990960",
    "end": "1998039"
  },
  {
    "text": "Mo when you move to production and you need to run you know hundreds of containers on large number of servers",
    "start": "1998039",
    "end": "2004519"
  },
  {
    "text": "that's where the real problems start right because what happens if uh one of your servers goes down and you know all",
    "start": "2004519",
    "end": "2012279"
  },
  {
    "text": "the containers running in there dies you know uh you have to restart them in a way hopefully not",
    "start": "2012279",
    "end": "2019039"
  },
  {
    "text": "manually uh so at at a certain scale you need to have a piece of software that",
    "start": "2019039",
    "end": "2025440"
  },
  {
    "text": "manages your clusters uh takes care of scheduling takes care of uh High",
    "start": "2025440",
    "end": "2030480"
  },
  {
    "text": "availability etc etc and this is what ECS does okay this is what ECS does so",
    "start": "2030480",
    "end": "2036039"
  },
  {
    "text": "it it manages uh a a cluster of ec2 hosts with Docker installed and where",
    "start": "2036039",
    "end": "2042760"
  },
  {
    "text": "you're going to start your instance your containers not your instances okay uh we have another product call uh ECR um",
    "start": "2042760",
    "end": "2051358"
  },
  {
    "text": "which is a Docker registry hosted in AWS very secure highly available Etc where",
    "start": "2051359",
    "end": "2058000"
  },
  {
    "text": "you can put your Docker images um and deploy them real close to your infrastructure right you can also use",
    "start": "2058000",
    "end": "2064679"
  },
  {
    "text": "the docker Hub but unfortunately the availability of the docker Hub is not",
    "start": "2064679",
    "end": "2070919"
  },
  {
    "text": "awesome uh and you know you don't want your deployments to be stopped because uh the docker Hub is down so ECR is a",
    "start": "2070919",
    "end": "2078440"
  },
  {
    "text": "good alternative so here as well we have a friendly CLI which is called ECS CLI",
    "start": "2078440",
    "end": "2084320"
  },
  {
    "text": "we also use cloud formation to build everything um and this is what it looks",
    "start": "2084320",
    "end": "2090398"
  },
  {
    "text": "like okay uh so we have a number of instances here we have three right um so",
    "start": "2090399",
    "end": "2098320"
  },
  {
    "text": "they are ec2 instances with Docker installed we provide a specific Ami for",
    "start": "2098320",
    "end": "2103760"
  },
  {
    "text": "this but you could use also your own Ami and in Docker you're going to deploy",
    "start": "2103760",
    "end": "2109400"
  },
  {
    "text": "your containers right so these are really standard ec2 instances the only",
    "start": "2109400",
    "end": "2115000"
  },
  {
    "text": "addition is the ECS agent which is uh a small piece of software that is going to",
    "start": "2115000",
    "end": "2121800"
  },
  {
    "text": "communicate with the ECS backend and so basically when you're going to say hey please start",
    "start": "2121800",
    "end": "2128280"
  },
  {
    "text": "uh five copies of container a um the back end is going to",
    "start": "2128280",
    "end": "2133960"
  },
  {
    "text": "communicate with the agents to find where it can start this this container",
    "start": "2133960",
    "end": "2139839"
  },
  {
    "text": "what instance has enough resources to do it etc etc okay if if if an instance",
    "start": "2139839",
    "end": "2146280"
  },
  {
    "text": "dies or if some containers die then the back end will start a new instance if",
    "start": "2146280",
    "end": "2152800"
  },
  {
    "text": "needed restart the right number of containers etc etc right I can't go into",
    "start": "2152800",
    "end": "2158560"
  },
  {
    "text": "too many details because I don't have time today I have a a dedicated session",
    "start": "2158560",
    "end": "2163720"
  },
  {
    "text": "on Docker tomorrow I believe at the same time so if you want to learn everything about Docker come back",
    "start": "2163720",
    "end": "2170400"
  },
  {
    "text": "tomorrow okay so that's the basic ID and again this is what um the ECS CLI calls",
    "start": "2170400",
    "end": "2177520"
  },
  {
    "text": "are going to build okay so before we do thiss demo let's go",
    "start": "2177520",
    "end": "2183599"
  },
  {
    "text": "back to bin stock for a second it's probably ready yes so my environment is green which is",
    "start": "2183599",
    "end": "2190880"
  },
  {
    "text": "good and I've got a a URL",
    "start": "2190880",
    "end": "2195920"
  },
  {
    "text": "here so let's try this of course I need the post resource",
    "start": "2199040",
    "end": "2206520"
  },
  {
    "text": "here yep so looks the same",
    "start": "2206520",
    "end": "2213079"
  },
  {
    "text": "okay same app okay same app how did I do this one EB init command one create",
    "start": "2223960",
    "end": "2233359"
  },
  {
    "text": "environment command that's it now",
    "start": "2233359",
    "end": "2238920"
  },
  {
    "text": "let's change something here real quick",
    "start": "2238920",
    "end": "2245880"
  },
  {
    "text": "okay so if I'm reloading the local",
    "start": "2258400",
    "end": "2264400"
  },
  {
    "text": "version okay I see okay locally obviously I've got the change now I need",
    "start": "2264400",
    "end": "2270240"
  },
  {
    "text": "to commit this change um",
    "start": "2270240",
    "end": "2278560"
  },
  {
    "text": "okay okay so now it's committed and if I'm calling EB",
    "start": "2286319",
    "end": "2293119"
  },
  {
    "text": "deploy okay I'm zipping the committed version copying to S3 deploying it on my",
    "start": "2294000",
    "end": "2301400"
  },
  {
    "text": "instance okay and if I go back to this uh",
    "start": "2301400",
    "end": "2307880"
  },
  {
    "text": "where is it it's here okay so I'm",
    "start": "2307880",
    "end": "2313520"
  },
  {
    "text": "updating my environment right deploying new version to instance and that should be reasonably",
    "start": "2313520",
    "end": "2322400"
  },
  {
    "text": "fast so if I'm reloading yeah that's the uh AWS version",
    "start": "2322599",
    "end": "2327800"
  },
  {
    "text": "here all right you have uh you have lost you have",
    "start": "2327800",
    "end": "2334319"
  },
  {
    "text": "lost your first block ome yes because uh I'm using SQL light as my database and",
    "start": "2334319",
    "end": "2341560"
  },
  {
    "text": "it's uh it's redeployed all the time okay so the proper way of doing this is to use a proper database uh like",
    "start": "2341560",
    "end": "2349040"
  },
  {
    "text": "postgress for example and uh elastic bin stock allows you to use to interface",
    "start": "2349040",
    "end": "2354720"
  },
  {
    "text": "with RDS relational database service which manages uh which is the manage",
    "start": "2354720",
    "end": "2361319"
  },
  {
    "text": "service for Mario DB MySQL pogress Oracle SQL Server orora which is our",
    "start": "2361319",
    "end": "2368640"
  },
  {
    "text": "in-house MySQL okay I've got a deep dive on RDS",
    "start": "2368640",
    "end": "2374079"
  },
  {
    "text": "sometime two weeks or something I I have I have the reference at the end of my presentation okay so if",
    "start": "2374079",
    "end": "2380720"
  },
  {
    "text": "you use a real proper database of course you would keep all the state okay but it's four services in one hour and you",
    "start": "2380720",
    "end": "2387280"
  },
  {
    "text": "know it's a short it's a challenge okay so this is how you would do uh elastic beIN stock and you could do much more",
    "start": "2387280",
    "end": "2394680"
  },
  {
    "text": "you can get the logs for your",
    "start": "2394680",
    "end": "2399318"
  },
  {
    "text": "application is it Wi-Fi fooling with me EB",
    "start": "2406720",
    "end": "2411960"
  },
  {
    "text": "SSH okay so you can connect the instance if you want to but you should not do it right that's",
    "start": "2413839",
    "end": "2422079"
  },
  {
    "text": "what this message says this is a manage instance so any change that you perform here",
    "start": "2422079",
    "end": "2428000"
  },
  {
    "text": "is going to be overwritten by the the automatic deployments right so it's only",
    "start": "2428000",
    "end": "2433800"
  },
  {
    "text": "maybe for debugging that you want to do that okay let me try the logs again come on I",
    "start": "2433800",
    "end": "2439200"
  },
  {
    "text": "want the logs should not be long like",
    "start": "2439200",
    "end": "2444839"
  },
  {
    "text": "this all right they will come eventually so okay oh yeah did they show",
    "start": "2449079",
    "end": "2456359"
  },
  {
    "text": "up no not yet all right okay forget it I",
    "start": "2456359",
    "end": "2462800"
  },
  {
    "text": "think my Wi-Fi is a little slow today oh no here they are okay so I can get all my Ruby logs all my app logs etc",
    "start": "2462800",
    "end": "2470319"
  },
  {
    "text": "etc okay and and I can do this without logging to the instance that's my point",
    "start": "2470319",
    "end": "2475920"
  },
  {
    "text": "okay so all the uh all the the arror logs are available so that's for be",
    "start": "2475920",
    "end": "2482560"
  },
  {
    "text": "stock so now let's look at ECS so the first thing",
    "start": "2482560",
    "end": "2488880"
  },
  {
    "text": "I'm going to do is I'm going to configure a new cluster which is similar to creating an application in binog just",
    "start": "2488880",
    "end": "2495560"
  },
  {
    "text": "declaring it and then I'm going to start the cluster so this takes a few minutes so let me do it quickly and I can",
    "start": "2495560",
    "end": "2501720"
  },
  {
    "text": "explain while it",
    "start": "2501720",
    "end": "2504480"
  },
  {
    "text": "runs okay so configuration here is just okay hey I want NCS cluster I want to",
    "start": "2511800",
    "end": "2517240"
  },
  {
    "text": "call it my cluster doesn't do much and this is the really important",
    "start": "2517240",
    "end": "2524800"
  },
  {
    "text": "one so this one is going to create and notice I'm using the ECS CLI command",
    "start": "2524800",
    "end": "2531200"
  },
  {
    "text": "okay which is specific to ECS uh so I'm creating a new cluster",
    "start": "2531200",
    "end": "2536960"
  },
  {
    "text": "with the up command I'm giving an SSH key because I want to connect to the",
    "start": "2536960",
    "end": "2542160"
  },
  {
    "text": "instances um capability I am is just to allow ECS to create I am roles and I am",
    "start": "2542160",
    "end": "2549720"
  },
  {
    "text": "is identity and authentication management uh um which is the permission",
    "start": "2549720",
    "end": "2555920"
  },
  {
    "text": "framework for AWS what's the size of the cluster when it's one node so it's not a big cluster",
    "start": "2555920",
    "end": "2562119"
  },
  {
    "text": "but we'll scale it later on and instance type is T2 micro I don't need to have large nodes okay so again as you can see",
    "start": "2562119",
    "end": "2570359"
  },
  {
    "text": "here it's not even hiding the fact that it's using cloud formation I'm going to create my cluster and should see",
    "start": "2570359",
    "end": "2579280"
  },
  {
    "text": "that here yeah see same story",
    "start": "2579280",
    "end": "2586920"
  },
  {
    "text": "template right automation at work okay and I can",
    "start": "2586920",
    "end": "2594200"
  },
  {
    "text": "see it's still within the ec2 container service what do you mean we're now",
    "start": "2594200",
    "end": "2601800"
  },
  {
    "text": "building a container with in doer in easy no we're we're building a cluster",
    "start": "2601800",
    "end": "2608040"
  },
  {
    "text": "right of one instance and this instance this instance sorry is an ec2 instance running",
    "start": "2608040",
    "end": "2614720"
  },
  {
    "text": "Docker and the ECS agent which will be driven by the ECS backend",
    "start": "2614720",
    "end": "2621680"
  },
  {
    "text": "okay so it takes a few minutes again but let's you know I like live",
    "start": "2621680",
    "end": "2628880"
  },
  {
    "text": "demos so let me explain what we're going to do next while this",
    "start": "2628880",
    "end": "2634200"
  },
  {
    "text": "builds so once the cluster is up okay we're going to deploy an",
    "start": "2634200",
    "end": "2640559"
  },
  {
    "text": "application to it so it's a small PHP application and I'm going to deploy it",
    "start": "2640559",
    "end": "2646880"
  },
  {
    "text": "using a composed file so if you're familiar with Docker you know that you can write composed files Docker composed",
    "start": "2646880",
    "end": "2653160"
  },
  {
    "text": "files with certain properties you know environment variables uh uh volumes",
    "start": "2653160",
    "end": "2659480"
  },
  {
    "text": "storage volumes uh linking between containers etc etc okay so I've got that",
    "start": "2659480",
    "end": "2666000"
  },
  {
    "text": "small file written I'm want to show it to you I'm going to deploy it and once this has run that's it my",
    "start": "2666000",
    "end": "2673160"
  },
  {
    "text": "Docker app right my PHP app which is hosted in ECR by the way uh is going to",
    "start": "2673160",
    "end": "2680880"
  },
  {
    "text": "be deployed on that cluster okay one single command okay and every time I I'm",
    "start": "2680880",
    "end": "2687079"
  },
  {
    "text": "fixing stuff on that image and I want to redeploy it I can just run I can just run service up again and uh and deploy",
    "start": "2687079",
    "end": "2694599"
  },
  {
    "text": "the new version okay then I'm going to scale the cluster to three nodes three",
    "start": "2694599",
    "end": "2701359"
  },
  {
    "text": "instances right with the scale command and I'm going to scale the service as",
    "start": "2701359",
    "end": "2707359"
  },
  {
    "text": "well because now I have three nodes I could have three copies of that container running on the cluster and",
    "start": "2707359",
    "end": "2713960"
  },
  {
    "text": "then of course I could delete uh my cluster okay as you can see everything",
    "start": "2713960",
    "end": "2720960"
  },
  {
    "text": "is hidden from you the only thing that you have to do is create the cluster write the compos file which you probably",
    "start": "2720960",
    "end": "2727200"
  },
  {
    "text": "have any way because you're working with Docker locally on your uh on your PC and",
    "start": "2727200",
    "end": "2732520"
  },
  {
    "text": "and just deploy it",
    "start": "2732520",
    "end": "2735960"
  },
  {
    "text": "right so where do we where are we oh create complete okay that's good news so",
    "start": "2738680",
    "end": "2744880"
  },
  {
    "text": "let's go to the ECS console here so I see my cluster",
    "start": "2744880",
    "end": "2752040"
  },
  {
    "text": "here and probably the instance is still starting let's look at the ec2",
    "start": "2752040",
    "end": "2759599"
  },
  {
    "text": "console that's the one here okay so that's an ec2 instance with the Amazon",
    "start": "2765640",
    "end": "2771599"
  },
  {
    "text": "Linux image and Docker installed and the ECS agent okay so just need to",
    "start": "2771599",
    "end": "2778040"
  },
  {
    "text": "start and it should join very soon",
    "start": "2778040",
    "end": "2785559"
  },
  {
    "text": "come on instance don't let me",
    "start": "2787760",
    "end": "2791480"
  },
  {
    "text": "down but that's a good I mean I'm going to show you Lambda in five five minutes",
    "start": "2794079",
    "end": "2799599"
  },
  {
    "text": "right um ec2 you see you know you see you know",
    "start": "2799599",
    "end": "2805240"
  },
  {
    "text": "it's not a problem of ec2 it's working with ec2 nothing takes one second",
    "start": "2805240",
    "end": "2812280"
  },
  {
    "text": "right nothing takes one second starting an instance is always one two minutes",
    "start": "2812280",
    "end": "2817800"
  },
  {
    "text": "right and here they need to join the cluster so you know takes a little time",
    "start": "2817800",
    "end": "2823599"
  },
  {
    "text": "and well probably that's something we can fix okay here it is okay so I see my",
    "start": "2823599",
    "end": "2830520"
  },
  {
    "text": "instance my ec2 instance here right ah it's running a pretty old version of",
    "start": "2830520",
    "end": "2835760"
  },
  {
    "text": "Docker but okay I need to change my configuration but that's okay that's enough for what we do here and nothing",
    "start": "2835760",
    "end": "2844079"
  },
  {
    "text": "is running in here right so it's a one node cluster okay",
    "start": "2844079",
    "end": "2850359"
  },
  {
    "text": "so time to deploy stuff oh yeah I need to show you the",
    "start": "2850359",
    "end": "2855880"
  },
  {
    "text": "compost file okay so that's the compost file okay so my service is called PHP",
    "start": "2855880",
    "end": "2863160"
  },
  {
    "text": "demo the image is located in ECR repository in the",
    "start": "2863160",
    "end": "2868559"
  },
  {
    "text": "US I'm opening Port 80 because that's the web app the entry point for the",
    "start": "2868559",
    "end": "2873920"
  },
  {
    "text": "container is running Apache because that's the web app app and the CPU shares and M limit so I will explain",
    "start": "2873920",
    "end": "2880880"
  },
  {
    "text": "that in detail tomorrow if you want to know but just in 5 seconds this is a hint that we're giving to the to the",
    "start": "2880880",
    "end": "2887880"
  },
  {
    "text": "Schuler to the ECS Schuler to say this is how heavy this this container is",
    "start": "2887880",
    "end": "2894200"
  },
  {
    "text": "regarding CPU usage and memory usage right and what these points",
    "start": "2894200",
    "end": "2900559"
  },
  {
    "text": "mean as maybe you saw that here",
    "start": "2900559",
    "end": "2905720"
  },
  {
    "text": "okay for this instance size I've got 1024 CPU points available so I don't",
    "start": "2906960",
    "end": "2915280"
  },
  {
    "text": "have 10 24 CPUs that would be awesome but no it's just that I can fraction the",
    "start": "2915280",
    "end": "2922400"
  },
  {
    "text": "CPU power of that instance in 10 24 points okay so for my PHP app say hey",
    "start": "2922400",
    "end": "2927520"
  },
  {
    "text": "give it 100 points okay if I wanted my PHP app to run all alone at that instance I would give it 10 10 10 24",
    "start": "2927520",
    "end": "2935040"
  },
  {
    "text": "points and the Schuler would find an instance that is fully available for this okay so it's just a way to give",
    "start": "2935040",
    "end": "2941480"
  },
  {
    "text": "some hints to uh to ECS so okay let's start the service",
    "start": "2941480",
    "end": "2948520"
  },
  {
    "text": "now so what ECS does here it's going to grab that compost file send it to the",
    "start": "2951920",
    "end": "2957480"
  },
  {
    "text": "cluster that becomes what we call a task definition okay and it's going to start",
    "start": "2957480",
    "end": "2964720"
  },
  {
    "text": "since I did not give any any any counter any number of services by default it's",
    "start": "2964720",
    "end": "2970000"
  },
  {
    "text": "going to create one container right desired count is one running count is",
    "start": "2970000",
    "end": "2975640"
  },
  {
    "text": "zero okay so it's going to find an instance where it has sufficient power to to start the container and it's going",
    "start": "2975640",
    "end": "2981960"
  },
  {
    "text": "to start it okay so let's take a quick look at the console here so I see my",
    "start": "2981960",
    "end": "2989920"
  },
  {
    "text": "service has been uh defined right so it's going to download the",
    "start": "2989920",
    "end": "2997520"
  },
  {
    "text": "image from ECR it's going to start it somewhere right see it's it's pending",
    "start": "2997520",
    "end": "3004359"
  },
  {
    "text": "I've got one task pending and pretty quickly it should be running right so that's it my container has been",
    "start": "3004359",
    "end": "3010920"
  },
  {
    "text": "started okay so I want to see that containers running",
    "start": "3010920",
    "end": "3017640"
  },
  {
    "text": "so that's the IP address of my",
    "start": "3017920",
    "end": "3023400"
  },
  {
    "text": "ECS instance all",
    "start": "3024160",
    "end": "3029440"
  },
  {
    "text": "right that one is going to make me a double billionaire right I'm sure okay",
    "start": "3029440",
    "end": "3036040"
  },
  {
    "text": "so that's how you deploy containers okay so of course this is a bit of a silly",
    "start": "3036040",
    "end": "3042160"
  },
  {
    "text": "example because I've got just one node and I've got uh only one container so let's scale",
    "start": "3042160",
    "end": "3049040"
  },
  {
    "text": "things okay so let's add two more instances to the cluster okay so we have",
    "start": "3049040",
    "end": "3055000"
  },
  {
    "text": "three nodes and let's have three containers running right so let's continue while it's doing this and we'll",
    "start": "3055000",
    "end": "3061520"
  },
  {
    "text": "get back to that okay but what I should see is three ECS instances and one",
    "start": "3061520",
    "end": "3066559"
  },
  {
    "text": "container one PHP app running on each right and you know all I'm saying is",
    "start": "3066559",
    "end": "3072359"
  },
  {
    "text": "give me three give me three nodes and give me three containers you figure it out",
    "start": "3072359",
    "end": "3079119"
  },
  {
    "text": "okay all right the last one Lambda completely",
    "start": "3083240",
    "end": "3090200"
  },
  {
    "text": "different so there's no good name for it uh so people are starting to call it",
    "start": "3093000",
    "end": "3100160"
  },
  {
    "text": "function as a service so let's stick with that and it's exactly what it means",
    "start": "3100160",
    "end": "3105440"
  },
  {
    "text": "so we saw ec2 is infrastructure as a service um ECS and Bin stock our",
    "start": "3105440",
    "end": "3111160"
  },
  {
    "text": "platform as a service right all the crazy stuff is created for you automatically",
    "start": "3111160",
    "end": "3117400"
  },
  {
    "text": "and Lambda well you only need to provide your function not even your application",
    "start": "3117400",
    "end": "3122599"
  },
  {
    "text": "just your function and you can do this with Java Python and nodejs so we're going to look at some",
    "start": "3122599",
    "end": "3129640"
  },
  {
    "text": "examples um there are two main use cases for this the first one is building event",
    "start": "3129640",
    "end": "3135160"
  },
  {
    "text": "driven applications because as you know within the AWS Cloud you have tons of events happening all the time instances",
    "start": "3135160",
    "end": "3142119"
  },
  {
    "text": "starting uh files being dropped in S3 uh items being written to Dynamo",
    "start": "3142119",
    "end": "3149400"
  },
  {
    "text": "DB uh monitoring notifications happening blah blah blah lots of stuff happening",
    "start": "3149400",
    "end": "3155920"
  },
  {
    "text": "and actually Lambda is heavily used to uh act as a glue between all those",
    "start": "3155920",
    "end": "3161040"
  },
  {
    "text": "services so for automation it's great you can build complex applications by",
    "start": "3161040",
    "end": "3167400"
  },
  {
    "text": "simply automating with Lambda right automating stuff that is happening inside your platform a new file is",
    "start": "3167400",
    "end": "3174240"
  },
  {
    "text": "dropped in S3 okay run Lambda function that takes the file compresses it uh",
    "start": "3174240",
    "end": "3181000"
  },
  {
    "text": "loads its content to uh RDS blah blah blah blah blah right it's I call it Lego",
    "start": "3181000",
    "end": "3187520"
  },
  {
    "text": "infrastructure right which is a better name that function as a service the Second Use case is to build",
    "start": "3187520",
    "end": "3194480"
  },
  {
    "text": "apis right usually apis are smaller pieces of code that are independent right",
    "start": "3194480",
    "end": "3200240"
  },
  {
    "text": "self-contained and that fits the Lambda model pretty well so we're going to combine a Lambda function with the API",
    "start": "3200240",
    "end": "3207280"
  },
  {
    "text": "Gateway which I'm going to show you to build apis and this is really cool for web services obviously it's really cool",
    "start": "3207280",
    "end": "3214119"
  },
  {
    "text": "for backends mobile backends uh people who want to build restful apis without messing with any",
    "start": "3214119",
    "end": "3221880"
  },
  {
    "text": "infrastructure right which is the right way to do it I mentioned that Lambda had",
    "start": "3221880",
    "end": "3227280"
  },
  {
    "text": "a different pricing model uh remember ec2 you pay by the hour right Lambda you",
    "start": "3227280",
    "end": "3234440"
  },
  {
    "text": "only pay when the function is called right so it's a combination of number of requests and execution",
    "start": "3234440",
    "end": "3241000"
  },
  {
    "text": "time by 100 millisecond slots not by the hour of course because Lambda functions",
    "start": "3241000",
    "end": "3247440"
  },
  {
    "text": "are supposed to be very very short there's a five minute Timeout on Lambda functions um so imagine you have apis",
    "start": "3247440",
    "end": "3255520"
  },
  {
    "text": "implemented with Lambda and you have no traffic at night right no traffic no API",
    "start": "3255520",
    "end": "3261760"
  },
  {
    "text": "calls no Lambda calls no money spent right if you used",
    "start": "3261760",
    "end": "3267720"
  },
  {
    "text": "ec2 instances you would still need to have maybe a couple of web servers to be running at night even if there's no",
    "start": "3267720",
    "end": "3273720"
  },
  {
    "text": "traffic and you would pay by the hour so Lambda is super efficient from a from a",
    "start": "3273720",
    "end": "3279240"
  },
  {
    "text": "spend point of view right no traffic no cost and this is what we call serverless",
    "start": "3279240",
    "end": "3284520"
  },
  {
    "text": "I'm sure you've heard that a million times right the serverless architecture that's the combination of Lambda and",
    "start": "3284520",
    "end": "3290559"
  },
  {
    "text": "manage services so let's do this so what I'm going to do I'm going to write a simple function",
    "start": "3290559",
    "end": "3297119"
  },
  {
    "text": "I'm going to create an API with the API Gateway I'm going to deploy it and I'm going to invoke it with curl right",
    "start": "3297119",
    "end": "3304480"
  },
  {
    "text": "before we do this let's conclude our ECS",
    "start": "3304480",
    "end": "3311960"
  },
  {
    "text": "demo so I should have three instances here yes",
    "start": "3314240",
    "end": "3319839"
  },
  {
    "text": "okay as you can see right 1 two",
    "start": "3319839",
    "end": "3324240"
  },
  {
    "text": "three and and I have one okay uh yeah please did I say three",
    "start": "3325039",
    "end": "3332799"
  },
  {
    "text": "yeah okay so desired count for my PHP app is now three running count is one so",
    "start": "3332799",
    "end": "3338599"
  },
  {
    "text": "it's going to create two",
    "start": "3338599",
    "end": "3341880"
  },
  {
    "text": "more right so you can see two are pending and really quick they should be",
    "start": "3344319",
    "end": "3352400"
  },
  {
    "text": "running okay and I could connect to specific one or probably what I want to",
    "start": "3352559",
    "end": "3359520"
  },
  {
    "text": "do is to have a load balancer in front of the three with a single entry point okay that's what I'm going to do",
    "start": "3359520",
    "end": "3365520"
  },
  {
    "text": "tomorrow okay all right here's the second one running and the third one will be",
    "start": "3365520",
    "end": "3370720"
  },
  {
    "text": "running in a few seconds okay you get the point",
    "start": "3370720",
    "end": "3376160"
  },
  {
    "text": "right okay so uh that's my Lambda function it's very complicated",
    "start": "3378440",
    "end": "3386520"
  },
  {
    "text": "it's in Python okay uh it receives a Jon document with two integers and the",
    "start": "3386520",
    "end": "3393039"
  },
  {
    "text": "function just sums the two integers and Returns the result",
    "start": "3393039",
    "end": "3398440"
  },
  {
    "text": "okay so let's do",
    "start": "3398440",
    "end": "3402280"
  },
  {
    "text": "this so here's my code right so I'm going to go to Lambda console create a",
    "start": "3403960",
    "end": "3411119"
  },
  {
    "text": "Lambda function so the functions are given I'm",
    "start": "3411119",
    "end": "3416680"
  },
  {
    "text": "using them I'm a consumer of them is it correct yes yep so I'm going to write yes a blank",
    "start": "3416680",
    "end": "3425599"
  },
  {
    "text": "function I'm going to call it",
    "start": "3427359",
    "end": "3431318"
  },
  {
    "text": "add it's a python function here it is",
    "start": "3432720",
    "end": "3441720"
  },
  {
    "text": "[Music] uh yeah simple roll because I don't need",
    "start": "3447120",
    "end": "3452559"
  },
  {
    "text": "a lot of permissions we can leave this thing as",
    "start": "3452559",
    "end": "3457960"
  },
  {
    "text": "is did I click it yeah next create",
    "start": "3459319",
    "end": "3464680"
  },
  {
    "text": "function okay so my function is now created so I could test it locally",
    "start": "3464680",
    "end": "3471000"
  },
  {
    "text": "um but I'm sure it works so let's add an API in front of",
    "start": "3471000",
    "end": "3477200"
  },
  {
    "text": "that so let's create a new API let's call it",
    "start": "3477200",
    "end": "3485520"
  },
  {
    "text": "add I'm going to create um a post",
    "start": "3491640",
    "end": "3500039"
  },
  {
    "text": "method right so whenever I post on this AP II I'm going to call a Lambda",
    "start": "3502799",
    "end": "3510160"
  },
  {
    "text": "function which is called add http means I could use rest controller from yep",
    "start": "3514039",
    "end": "3522280"
  },
  {
    "text": "yeah you could sure yeah here I'm integrating the Gateway of Lambda but as you can see you could you could invoke",
    "start": "3522280",
    "end": "3528640"
  },
  {
    "text": "you could have like a public facing API calling internal apis on your on your",
    "start": "3528640",
    "end": "3533920"
  },
  {
    "text": "platform okay so as you can see here whenever I'm posting to that uh API I'm",
    "start": "3533920",
    "end": "3541640"
  },
  {
    "text": "calling that Lambda function I could set up authorizations and tokens Etc if I wanted to but I don't need it",
    "start": "3541640",
    "end": "3550519"
  },
  {
    "text": "today um and then all I need to do is deploy",
    "start": "3550839",
    "end": "3557558"
  },
  {
    "text": "it so I'm going to deploy to production of course",
    "start": "3557640",
    "end": "3563119"
  },
  {
    "text": "because because it works right",
    "start": "3563119",
    "end": "3568038"
  },
  {
    "text": "come on Gateway and here's my end point",
    "start": "3575480",
    "end": "3583119"
  },
  {
    "text": "okay so now what did I do I've got a public API calling a Lambda function so",
    "start": "3584640",
    "end": "3591119"
  },
  {
    "text": "now I should call it",
    "start": "3591119",
    "end": "3594760"
  },
  {
    "text": "with these API uh player can I also",
    "start": "3598039",
    "end": "3603640"
  },
  {
    "text": "integrate services that I'm not running on AWS uh yeah you can call external stuff",
    "start": "3603640",
    "end": "3609599"
  },
  {
    "text": "sure yeah that works okay so what am I doing here I'm calling using curl posting ajacent document with value one",
    "start": "3609599",
    "end": "3616760"
  },
  {
    "text": "a five value two seven to my endpoint 5 + 7",
    "start": "3616760",
    "end": "3622960"
  },
  {
    "text": "12 yeah hey I can still fure all right",
    "start": "3622960",
    "end": "3628680"
  },
  {
    "text": "okay so again I'm almost out of time but keep in mind if you had to do this with",
    "start": "3628680",
    "end": "3634039"
  },
  {
    "text": "an ec2 server would that be faster imagine you had to deploy all",
    "start": "3634039",
    "end": "3640319"
  },
  {
    "text": "your API framework and blah blah blah blah blah could you do this in two minutes probably not okay so so it's",
    "start": "3640319",
    "end": "3648920"
  },
  {
    "text": "time to conclude of course you don't have to code in the console right don't worry you can use uh uh there's a Eclipse",
    "start": "3648920",
    "end": "3656319"
  },
  {
    "text": "plug-in for Java there's uh a number of Frameworks that um allow you to create",
    "start": "3656319",
    "end": "3661680"
  },
  {
    "text": "apis and deploy your functions pretty quickly uh the most well-known is one called serverless it's available on",
    "start": "3661680",
    "end": "3668520"
  },
  {
    "text": "GitHub and you can automate a lot of things very quickly very nicely and you have other Frameworks like chalis Zappa",
    "start": "3668520",
    "end": "3675440"
  },
  {
    "text": "Apex if you want to do goang which is not supported by Lambda uh you could use Apex and they",
    "start": "3675440",
    "end": "3682400"
  },
  {
    "text": "manage to run Goan code okay",
    "start": "3682400",
    "end": "3687640"
  },
  {
    "text": "so I'm done well 64 minutes that's not too bad uh and now it's uh it's your time",
    "start": "3687640",
    "end": "3697039"
  },
  {
    "text": "not to explode right but to explore hopefully you will not",
    "start": "3697039",
    "end": "3702760"
  },
  {
    "text": "explode uh there's much more to read on ECS which you know I really uh was just",
    "start": "3702760",
    "end": "3708799"
  },
  {
    "text": "an ECS flyby today um uh you can look up all those references you will get the",
    "start": "3708799",
    "end": "3714720"
  },
  {
    "text": "slides don't worry uh so some articles from the CTO of Amazon some ECS videos from",
    "start": "3714720",
    "end": "3720400"
  },
  {
    "text": "reinvent uh there's a again a whole lot more to learn about Lambda lots of videos from reinvent and",
    "start": "3720400",
    "end": "3728359"
  },
  {
    "text": "if you want to read books I'm sure you guys like that my colleague Danilo is",
    "start": "3728359",
    "end": "3733480"
  },
  {
    "text": "writing a book on Lambda it's almost done you can already buy it from Manning it's an early release so you buy the PDF",
    "start": "3733480",
    "end": "3740400"
  },
  {
    "text": "and you get the updated versions I'm sure you've done this before uh I think he's it only has one chapter to go so um",
    "start": "3740400",
    "end": "3747400"
  },
  {
    "text": "it's really uh it's really ready I strongly strongly strongly recommend it not because he's a nice guy and he's my",
    "start": "3747400",
    "end": "3753720"
  },
  {
    "text": "colleague because you know it's a great book it's the only Lambda book that you need to read enjoy the rest of your day",
    "start": "3753720",
    "end": "3759799"
  },
  {
    "text": "thank you [Applause]",
    "start": "3759799",
    "end": "3764920"
  },
  {
    "text": "[Music]",
    "start": "3764920",
    "end": "3775239"
  }
]