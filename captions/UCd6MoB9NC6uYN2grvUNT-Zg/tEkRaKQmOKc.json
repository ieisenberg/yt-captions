[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "In this video, you will see how to use\n CodeWhisperer with Amazon SageMaker Studio.",
    "start": "0",
    "end": "5144"
  },
  {
    "text": "With the CodeWhisperer AI coding companion, \nyou can efficiently prepare your datasets, train and",
    "start": "6309",
    "end": "12146"
  },
  {
    "text": "deploy machine learning models, \nand monitor model performance.",
    "start": "12146",
    "end": "16027"
  },
  {
    "text": "Before we begin, let’s quickly go over \nwhat we’ll complete in this demo.",
    "start": "16816",
    "end": "20650"
  },
  {
    "text": "First, we’ll set up CodeWhisperer \nwith Amazon SageMaker Studio.",
    "start": "21206",
    "end": "25404"
  },
  {
    "text": "Next, we’ll load and process a dataset, which \nwe’ll then use to train a machine learning model.",
    "start": "25601",
    "end": "31057"
  },
  {
    "text": "We’ll deploy the model to a SageMaker \nreal-time endpoint, and finally, we’ll evaluate",
    "start": "31381",
    "end": "36344"
  },
  {
    "text": "it and use it to perform real-time predictions.",
    "start": "36344",
    "end": "38846"
  },
  {
    "text": "Although CodeWhisperer supports many\nprogramming languages, Python is the",
    "start": "39832",
    "end": "43901"
  },
  {
    "text": "only programming language that CodeWhisperer \nsupports in Amazon SageMaker Studio.",
    "start": "43901",
    "end": "48700"
  },
  {
    "start": "50000",
    "end": "106000"
  },
  {
    "text": "Now let’s begin our demo.",
    "start": "50708",
    "end": "52424"
  },
  {
    "text": "This is the AWS Identity and Access \nManagement (IAM) console, where we’ll",
    "start": "52998",
    "end": "57151"
  },
  {
    "text": "ensure CodeWhisperer permissions have\n been added to the SageMaker execution",
    "start": "57151",
    "end": "60987"
  },
  {
    "text": "role associated with our user profile.",
    "start": "60987",
    "end": "63438"
  },
  {
    "text": "The CodeWhisperer permissions \npolicy has been added, which will allow",
    "start": "64370",
    "end": "68001"
  },
  {
    "text": "CodeWhisperer to generate \ncode recommendations.",
    "start": "68001",
    "end": "70817"
  },
  {
    "text": "Now let’s navigate to SageMaker \nStudio and open the system terminal.",
    "start": "71588",
    "end": "75101"
  },
  {
    "text": "We’ll run a few commands to install the \nCodeWhisperer extension and enable it.",
    "start": "79905",
    "end": "83892"
  },
  {
    "text": "This will restart the Jupyter server\nand close the system terminal.",
    "start": "85757",
    "end": "88855"
  },
  {
    "text": "Let’s refresh our browser.",
    "start": "90593",
    "end": "91935"
  },
  {
    "text": "We’re now ready to code with \nCodeWhisperer in SageMaker Studio.",
    "start": "94856",
    "end": "98663"
  },
  {
    "text": "For demonstration purposes, we’ve \nalready created a notebook that has",
    "start": "99416",
    "end": "102391"
  },
  {
    "text": "a data science kernel up and running.",
    "start": "102391",
    "end": "104306"
  },
  {
    "text": "Let’s open it.",
    "start": "104557",
    "end": "105362"
  },
  {
    "start": "106000",
    "end": "225000"
  },
  {
    "text": "We’ll build a machine learning model \nthat can predict if a customer will enroll",
    "start": "106527",
    "end": "110033"
  },
  {
    "text": "for a term deposit at a bank \nafter one or more phone calls.",
    "start": "110033",
    "end": "113914"
  },
  {
    "text": "First, let’s prepare the data that we’ll\n use to deploy and train our model.",
    "start": "114809",
    "end": "118972"
  },
  {
    "text": "We’ll set up an Amazon S3 bucket and \nprefix, and define the IAM role that will",
    "start": "119850",
    "end": "124636"
  },
  {
    "text": "give training and hosting access to our data.",
    "start": "124636",
    "end": "127196"
  },
  {
    "text": "Next, we’ll import the Python libraries \nthat we’ll use throughout this demo.",
    "start": "127895",
    "end": "132260"
  },
  {
    "text": "Next, we’ll write a comment to tell CodeWhisperer \nto add code that checks the pandas version.",
    "start": "133030",
    "end": "138097"
  },
  {
    "text": "To accept CodeWhisperer’s suggestion, \nwe’ll press the Tab key on our keyboard.",
    "start": "138887",
    "end": "143008"
  },
  {
    "text": "Let’s run the cell.",
    "start": "143797",
    "end": "144871"
  },
  {
    "text": "Next, we’ll download the direct marketing \ndataset using the requests library,",
    "start": "145767",
    "end": "150341"
  },
  {
    "text": "save it to the current \ndirectory, and unzip the archive.",
    "start": "150341",
    "end": "153899"
  },
  {
    "text": "Based on our comment, CodeWhisperer\n suggests downloading the data.",
    "start": "154849",
    "end": "158859"
  },
  {
    "text": "We can reject the suggestion \nby pressing our Esc key.",
    "start": "159182",
    "end": "162084"
  },
  {
    "text": "We can also browse through CodeWhisperer’s \nsuggestions using our arrow keys.",
    "start": "162963",
    "end": "166841"
  },
  {
    "text": "We’ll accept this suggestion.",
    "start": "167737",
    "end": "169422"
  },
  {
    "text": "Let’s continue accepting \nCodeWhisperer’s suggested code.",
    "start": "170336",
    "end": "173487"
  },
  {
    "text": "Now let’s run the cell.",
    "start": "177593",
    "end": "178743"
  },
  {
    "text": "The dataset has been \ndownloaded and the file is unzipped.",
    "start": "179621",
    "end": "182561"
  },
  {
    "text": "Let's load the dataset CSV file called \n\"bank-additional-full\" to a pandas DataFrame.",
    "start": "183440",
    "end": "188617"
  },
  {
    "text": "We’ll accept CodeWhisperer’s suggestions.",
    "start": "189549",
    "end": "191760"
  },
  {
    "text": "Let’s make a slight modification,\nand then run the cell.",
    "start": "192656",
    "end": "195414"
  },
  {
    "text": "The dataset has been loaded to the DataFrame.",
    "start": "198121",
    "end": "200341"
  },
  {
    "text": "Let’s view the pandas table that was generated.",
    "start": "201219",
    "end": "203512"
  },
  {
    "text": "Now let's look at how features in \nthe dataset relate to one another.",
    "start": "205448",
    "end": "208554"
  },
  {
    "text": "We’ll tell CodeWhisperer to call the \nheatmap and pairplot functions.",
    "start": "210508",
    "end": "213914"
  },
  {
    "text": "Let’s run the cell to generate the plots.",
    "start": "222378",
    "end": "224471"
  },
  {
    "start": "225000",
    "end": "358000"
  },
  {
    "text": "The heat map shows that the features\n vary widely in relation to one another,",
    "start": "226264",
    "end": "230292"
  },
  {
    "text": "and includes highly negative \nand highly positive correlations.",
    "start": "230292",
    "end": "234000"
  },
  {
    "text": "The pair plot provides additional insights\ninto the relationships between variables.",
    "start": "235291",
    "end": "239840"
  },
  {
    "text": "Now let’s use CodeWhisperer to perform\n some transformations on our data.",
    "start": "241740",
    "end": "245879"
  },
  {
    "text": "First, we’ll create a new DataFrame with\n a column called \"no_previous_contact\"",
    "start": "246847",
    "end": "251427"
  },
  {
    "text": "and populate it with data from our \nexisting DataFrame column called “pdays.”",
    "start": "251427",
    "end": "255912"
  },
  {
    "text": "Let’s run the cell and quickly \nview the resulting pandas table.",
    "start": "256845",
    "end": "259995"
  },
  {
    "text": "Similarly, we’ll create a new DataFrame \nwith a column called “not_working”",
    "start": "262181",
    "end": "266754"
  },
  {
    "text": "and populate it with individuals from our existing \nDataFrame who are not actively employed.",
    "start": "266754",
    "end": "271925"
  },
  {
    "text": "Let’s run the cell and view the pandas table.",
    "start": "272893",
    "end": "274960"
  },
  {
    "text": "Next, we’ll perform one hot encoding \non our initial DataFrame to convert",
    "start": "278168",
    "end": "282538"
  },
  {
    "text": "categorical variables to numeric variables.",
    "start": "282538",
    "end": "285350"
  },
  {
    "text": "The variable format has been converted.",
    "start": "288076",
    "end": "290509"
  },
  {
    "text": "Next, to enhance our model’s precision,",
    "start": "291351",
    "end": "294000"
  },
  {
    "text": "we’ll remove features from the dataset \nthat are not relevant to our use case.",
    "start": "294000",
    "end": "298115"
  },
  {
    "text": "We’ll then store the modified data in a \nnew DataFrame called “model_data.”",
    "start": "298456",
    "end": "302771"
  },
  {
    "text": "Next, we'll randomly split \nthe data into three groups.",
    "start": "303738",
    "end": "307157"
  },
  {
    "text": "Seventy percent of the data \nwill be used to train the model,",
    "start": "307426",
    "end": "310514"
  },
  {
    "text": "20 percent will be used to \nestimate the accuracy of the model,",
    "start": "310514",
    "end": "314063"
  },
  {
    "text": "and 10 percent will be used for final testing.",
    "start": "314063",
    "end": "317003"
  },
  {
    "text": "We’ll make a slight modification to \nCodeWhisperer’s suggested code.",
    "start": "317899",
    "end": "321620"
  },
  {
    "text": "The Amazon SageMaker XGBoost algorithm \nexpects data to be in LIBSVM or CSV format,",
    "start": "323252",
    "end": "330000"
  },
  {
    "text": "and the first column must be the target variable.",
    "start": "330000",
    "end": "332665"
  },
  {
    "text": "We'll transform our data accordingly.",
    "start": "333418",
    "end": "335483"
  },
  {
    "text": "We’ll upload the final training and \nvalidation data into our S3 bucket.",
    "start": "336397",
    "end": "340454"
  },
  {
    "text": "Now let’s verify that our data \nhas been successfully uploaded.",
    "start": "343412",
    "end": "346564"
  },
  {
    "text": "The train.csv and validation.csv \nfiles are now in our S3 bucket.",
    "start": "349270",
    "end": "354097"
  },
  {
    "start": "358000",
    "end": "444000"
  },
  {
    "text": "Now that we have successfully prepared the \ndata, let's train our machine learning model.",
    "start": "358901",
    "end": "363073"
  },
  {
    "text": "First, we'll retrieve the \nSageMaker XGBoost image URI.",
    "start": "363414",
    "end": "367085"
  },
  {
    "text": "Next, we'll use CodeWhisperer to generate code that \nspecifies the training and validation dataset locations.",
    "start": "368142",
    "end": "374064"
  },
  {
    "text": "Let’s quickly modify the folder \nnames and add an S3 data type.",
    "start": "375121",
    "end": "378750"
  },
  {
    "text": "We’ll use a SageMaker \nestimator to run a training job.",
    "start": "382604",
    "end": "385494"
  },
  {
    "text": "Using CodeWhisperer, let’s provide the \nestimator with training parameters and",
    "start": "386444",
    "end": "390951"
  },
  {
    "text": "call a .fit() function to train the model.",
    "start": "390951",
    "end": "393371"
  },
  {
    "text": "We’ll accept CodeWhisperer’s suggestions \nand make modifications as needed.",
    "start": "394554",
    "end": "398490"
  },
  {
    "text": "In this case, we’ll adjust the \nhyperparameter values.",
    "start": "399601",
    "end": "402667"
  },
  {
    "text": "Let’s run the cell.",
    "start": "408833",
    "end": "409868"
  },
  {
    "text": "The training job is complete.",
    "start": "418255",
    "end": "419765"
  },
  {
    "text": "We’re now ready to deploy our model \nbehind a real-time SageMaker endpoint",
    "start": "420106",
    "end": "424185"
  },
  {
    "text": "so we can use it to make predictions.",
    "start": "424186",
    "end": "426197"
  },
  {
    "text": "Let’s start with a comment.",
    "start": "427093",
    "end": "428526"
  },
  {
    "text": "We'll accept the suggestion \nprovided by CodeWhisperer.",
    "start": "430194",
    "end": "432960"
  },
  {
    "text": "Now let’s navigate to the SageMaker console \nto view the endpoint that is being created.",
    "start": "433856",
    "end": "438270"
  },
  {
    "start": "444000",
    "end": "532000"
  },
  {
    "text": "For demonstration purposes, we’ll skip \nahead to when the endpoint has been created",
    "start": "444186",
    "end": "448353"
  },
  {
    "text": "and our model has been deployed to it.",
    "start": "448353",
    "end": "450587"
  },
  {
    "text": "Now let’s evaluate the performance \nof our machine learning model.",
    "start": "451449",
    "end": "454494"
  },
  {
    "text": "First, we need to define how we pass data \nto and receive data from our endpoint.",
    "start": "454978",
    "end": "460378"
  },
  {
    "text": "Our data is currently stored in NumPy arrays \nin the memory of our notebook instance.",
    "start": "461167",
    "end": "466535"
  },
  {
    "text": "To send data in an XGBoost request,",
    "start": "466841",
    "end": "469398"
  },
  {
    "text": "we’ll serialize it as a CSV string \nand then decode the resulting CSV.",
    "start": "469398",
    "end": "474812"
  },
  {
    "text": "Next, we'll loop over the test dataset in mini \nbatches, convert those to CSV payloads,",
    "start": "475619",
    "end": "481548"
  },
  {
    "text": "retrieve predictions from the XGBoost endpoint, \nand convert the CSV output to a NumPy array.",
    "start": "481549",
    "end": "487931"
  },
  {
    "text": "Next, we’ll create a confusion matrix to\n compare the actual and predicted values.",
    "start": "488773",
    "end": "493458"
  },
  {
    "text": "Out of 4,119 potential customers, the \nmodel predicted 152 would subscribe,",
    "start": "495501",
    "end": "502454"
  },
  {
    "text": "and 101 of them actually did.",
    "start": "502454",
    "end": "505103"
  },
  {
    "text": "Additionally, 383 subscribers subscribed\n that the model did not predict would.",
    "start": "505569",
    "end": "511596"
  },
  {
    "text": "Finally, we’ll delete the resources that we created.",
    "start": "512474",
    "end": "515502"
  },
  {
    "text": "You’ve just seen how to use CodeWhisperer \nwith Amazon SageMaker Studio.",
    "start": "519000",
    "end": "522909"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "523627",
    "end": "527473"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "528334",
    "end": "531250"
  }
]