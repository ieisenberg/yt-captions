[
  {
    "text": "hear me all right welcome to one more of our broadcast sessions today I'll be",
    "start": "199",
    "end": "6279"
  },
  {
    "text": "speaking with you about serverless authentication and we're going to talk a lot about user security authentication",
    "start": "6279",
    "end": "15440"
  },
  {
    "text": "authorization and all those kinds of things so without further Ado let us",
    "start": "15440",
    "end": "21320"
  },
  {
    "text": "just review for a bit what um are we doing here today and I'd like to",
    "start": "21320",
    "end": "28640"
  },
  {
    "text": "start just by making sure that you guys have the link for today and I'll paste",
    "start": "28640",
    "end": "36040"
  },
  {
    "text": "here in the chat the link for our guest um chat so just a second while I bring",
    "start": "36040",
    "end": "44640"
  },
  {
    "text": "that up",
    "start": "44640",
    "end": "47840"
  },
  {
    "text": "and everything that we built and the code that I want to share with you guys",
    "start": "50199",
    "end": "56079"
  },
  {
    "text": "and everything that's going to be in place today I'll we will be updating on",
    "start": "56079",
    "end": "61559"
  },
  {
    "text": "a Guist as we've been doing every episode and here it is",
    "start": "61559",
    "end": "67759"
  },
  {
    "text": "so um every let's use this as our shared text",
    "start": "67759",
    "end": "73880"
  },
  {
    "text": "buffer and just to review what we've been doing we've been creating um an app",
    "start": "73880",
    "end": "81079"
  },
  {
    "text": "from scratch from the very file new and trying to go over the basics of",
    "start": "81079",
    "end": "87360"
  },
  {
    "text": "developing um application for a s and today we're going to improve this by",
    "start": "87360",
    "end": "93920"
  },
  {
    "text": "adding authentication so far we've been handling public requests things that doesn't require user authentication I",
    "start": "93920",
    "end": "101360"
  },
  {
    "text": "hope that by the end of today we're going to have a much more interesting app that will be able to uh perform",
    "start": "101360",
    "end": "109439"
  },
  {
    "text": "authenticated calls manage user identities and so and so forth all right",
    "start": "109439",
    "end": "116240"
  },
  {
    "text": "so let me just switch to my desktop for a sec",
    "start": "116240",
    "end": "123439"
  },
  {
    "text": "and I hope you guys can see my desktop now let me just check if",
    "start": "123439",
    "end": "131720"
  },
  {
    "text": "everything's all right okay so and as always this is very driven by",
    "start": "131720",
    "end": "140480"
  },
  {
    "text": "your opinion and what you guys would like to see so please do share I'm JM",
    "start": "140480",
    "end": "146000"
  },
  {
    "text": "Ferman on Twitter or just here on Twitch chat just feel welcome to send your",
    "start": "146000",
    "end": "152239"
  },
  {
    "text": "opinion and what you would like to see built here so for start let's get this",
    "start": "152239",
    "end": "159400"
  },
  {
    "text": "um the services that we've been using and what we have been creating so in the",
    "start": "159400",
    "end": "167239"
  },
  {
    "text": "first I'll paste that gft link here so you know what I'm talking",
    "start": "167239",
    "end": "172800"
  },
  {
    "text": "about and here on the first episode we've we've made um a static web app we",
    "start": "172800",
    "end": "181360"
  },
  {
    "text": "just created an app and here are all the steps that we performed if you would",
    "start": "181360",
    "end": "186680"
  },
  {
    "text": "like to replay that or yourself and most importantly our GitHub repo which",
    "start": "186680",
    "end": "193040"
  },
  {
    "text": "is this app GitHub J fman breakless it's",
    "start": "193040",
    "end": "198080"
  },
  {
    "text": "not uh anything useful right now it's just the the code that I've been",
    "start": "198080",
    "end": "203120"
  },
  {
    "text": "committing and everything else will be committed here so all the examples if",
    "start": "203120",
    "end": "209400"
  },
  {
    "text": "you'd like to share and the things that we built here will be committed in this Ripple and we we're going to reference",
    "start": "209400",
    "end": "215799"
  },
  {
    "text": "many many others within the days to come all right and to serve our application",
    "start": "215799",
    "end": "222599"
  },
  {
    "text": "we are using two very important services cloudfront and S3 just so you guys",
    "start": "222599",
    "end": "229720"
  },
  {
    "text": "remember in AWS amazon.com products there's a list of AWS products if",
    "start": "229720",
    "end": "236760"
  },
  {
    "text": "there's any product that I mention here and you don't know exactly what it is this is the place to look it up so we",
    "start": "236760",
    "end": "244720"
  },
  {
    "text": "have the set here and uh a very important detail on this page is this",
    "start": "244720",
    "end": "250200"
  },
  {
    "text": "map of AWS regions and Edge locations when we store content on S3 we are",
    "start": "250200",
    "end": "257600"
  },
  {
    "text": "storing content in one of those yellow dots called regions in several facilities within geographically",
    "start": "257600",
    "end": "264759"
  },
  {
    "text": "distributed within those um places but yet it's just one of those regions when",
    "start": "264759",
    "end": "271120"
  },
  {
    "text": "we use cloudfront we take advantage of all those blue dots that are distributed",
    "start": "271120",
    "end": "278199"
  },
  {
    "text": "worldwide and they are selected automatically for your distribution and",
    "start": "278199",
    "end": "283400"
  },
  {
    "text": "you of course that you can restrict which ones you want to use but if you choose to answer it all with them all um",
    "start": "283400",
    "end": "292160"
  },
  {
    "text": "you have a much better chance to have your content or your application delivered with less latency as we so we",
    "start": "292160",
    "end": "300479"
  },
  {
    "text": "probably have one of those closer to the user than the origin of the content you",
    "start": "300479",
    "end": "305840"
  },
  {
    "text": "have um better cost efficiency as those requests are answered from cash you",
    "start": "305840",
    "end": "311880"
  },
  {
    "text": "don't spend load balancer bandwidth ec2 CPU or resources and even more secure",
    "start": "311880",
    "end": "319199"
  },
  {
    "text": "because it's not your instance against the internet but an attacker will have",
    "start": "319199",
    "end": "324560"
  },
  {
    "text": "to pass through this content distribution Network to even reach your code so this is a very good idea and",
    "start": "324560",
    "end": "331919"
  },
  {
    "text": "that's how we are working with static content and then for dynamic content",
    "start": "331919",
    "end": "338199"
  },
  {
    "text": "we've been using this Lambda and API Gateway so they have two uh very",
    "start": "338199",
    "end": "345319"
  },
  {
    "text": "different feature sets but they work very well together so let's uh move in",
    "start": "345319",
    "end": "351680"
  },
  {
    "text": "advance and see what we can do with it so here is a few Lambda functions that I",
    "start": "351680",
    "end": "358880"
  },
  {
    "text": "have once that I can safely delete I will do this afterwards but",
    "start": "358880",
    "end": "366280"
  },
  {
    "text": "and this the one that we built on the last um episode was this list featured",
    "start": "366280",
    "end": "373319"
  },
  {
    "text": "items function and if we open that we can see the the code so we create a",
    "start": "373319",
    "end": "379720"
  },
  {
    "text": "result value and we pass a response mapping status code and headers to API",
    "start": "379720",
    "end": "386000"
  },
  {
    "text": "Gateway that will deliver this response to the user and then in in API Gateway",
    "start": "386000",
    "end": "393120"
  },
  {
    "text": "we map this breakless API featured items resource this get call is MPP it",
    "start": "393120",
    "end": "401319"
  },
  {
    "text": "directly to this method request and this is what we built so far and we're let's",
    "start": "401319",
    "end": "410759"
  },
  {
    "text": "try to get uh a very similar example working a very minimal example but with",
    "start": "410759",
    "end": "417120"
  },
  {
    "text": "an authenticated call instead and understanding how um user authentication",
    "start": "417120",
    "end": "423720"
  },
  {
    "text": "Works within AWS okay and as always",
    "start": "423720",
    "end": "429120"
  },
  {
    "text": "please do stop me anytime and ask questions and make sure that you're",
    "start": "429120",
    "end": "434560"
  },
  {
    "text": "following this is very special in the sense that we are beginners friendly and",
    "start": "434560",
    "end": "442400"
  },
  {
    "text": "I'd always like to take the time to explain and take any doubts that you guys may have so if any code or anything",
    "start": "442400",
    "end": "450560"
  },
  {
    "text": "I say doesn't make too much sense just send word on Twitch chat and we're going",
    "start": "450560",
    "end": "457039"
  },
  {
    "text": "to to talk and develop this together all right so",
    "start": "457039",
    "end": "462160"
  },
  {
    "text": "now before we dive into the coding I'd like to show you guys our some resources",
    "start": "462160",
    "end": "469159"
  },
  {
    "text": "that are going to be very important for us today in our Guist file the link is in the chat or I can twe it again if if",
    "start": "469159",
    "end": "478360"
  },
  {
    "text": "anybody is going to to find it useful but here's what I I have in agenda for",
    "start": "478360",
    "end": "484360"
  },
  {
    "text": "for us today we should understand a bit of our architecture and this is what we've done so far and then talk about",
    "start": "484360",
    "end": "491960"
  },
  {
    "text": "Cognito and its features and how to integrate that with your with your",
    "start": "491960",
    "end": "497120"
  },
  {
    "text": "applications all that I'm going to talk with you guys here is based on AWS",
    "start": "497120",
    "end": "503680"
  },
  {
    "text": "resources and and documentation that I'd like to share and one thing that I'd",
    "start": "503680",
    "end": "509800"
  },
  {
    "text": "like to make clear with you is that those Services have been evolving a lot",
    "start": "509800",
    "end": "514959"
  },
  {
    "text": "in the past so be very aware that when you look at code examples and blog posts",
    "start": "514959",
    "end": "522880"
  },
  {
    "text": "make sure that those are updated and if there is something that looks weird or",
    "start": "522880",
    "end": "529040"
  },
  {
    "text": "that you don't expect to be like that make sure that you're looking to an updated resource because many features",
    "start": "529040",
    "end": "536720"
  },
  {
    "text": "have been added to the service to make them and simpler and easy to use and we're going to talk a lot about that",
    "start": "536720",
    "end": "543160"
  },
  {
    "text": "today and that's why uh I have this reference talk M MBL 306 from reinvent",
    "start": "543160",
    "end": "551399"
  },
  {
    "text": "where my colleagues gin tram and Justin they present serverless authentication",
    "start": "551399",
    "end": "557600"
  },
  {
    "text": "and authorization so other than this broadcast today they",
    "start": "557600",
    "end": "562800"
  },
  {
    "text": "go very in in a lot of detail within this talk if you'd like a further reference please refer to to this one",
    "start": "562800",
    "end": "570760"
  },
  {
    "text": "that's where I draw most ideas that we're going to use today and there is",
    "start": "570760",
    "end": "576079"
  },
  {
    "text": "also this um other talk featuring a customer case and a lot of other further",
    "start": "576079",
    "end": "584920"
  },
  {
    "text": "details into Cognito for mobile and user",
    "start": "584920",
    "end": "590079"
  },
  {
    "text": "synchronization and a lot of advanced Cognito features that we may not have",
    "start": "590079",
    "end": "595200"
  },
  {
    "text": "the time to see today but I highly recommend you guys take a look at this one too and also there is one app this",
    "start": "595200",
    "end": "603519"
  },
  {
    "text": "spacefinder reference app that may help us today and this is a from AWS Labs uh",
    "start": "603519",
    "end": "611160"
  },
  {
    "text": "AWS is uh repositories of Open Source",
    "start": "611160",
    "end": "616800"
  },
  {
    "text": "applications and code with lots of examples and tools that we use and this",
    "start": "616800",
    "end": "623399"
  },
  {
    "text": "is supposed to be the uh standard uh reference for serverless authentication",
    "start": "623399",
    "end": "630600"
  },
  {
    "text": "it's a full featured uh app it's a a conference room finder that uses all the",
    "start": "630600",
    "end": "638639"
  },
  {
    "text": "resources that we're going to see today uh one uh special difference is the web",
    "start": "638639",
    "end": "645000"
  },
  {
    "text": "framework and the mobile app they were built using the ionic chew framework",
    "start": "645000",
    "end": "650560"
  },
  {
    "text": "which is based on angular Che and typescript and should be pretty much",
    "start": "650560",
    "end": "656399"
  },
  {
    "text": "similar to our architecture using react but we can uh we can",
    "start": "656399",
    "end": "663440"
  },
  {
    "text": "see through this quick start guide and perhaps get it up and running just just",
    "start": "663440",
    "end": "670560"
  },
  {
    "text": "a bit later okay so here's uh here's how it",
    "start": "670560",
    "end": "677279"
  },
  {
    "text": "goes and now let's talk a bit about the services that we're going to to use",
    "start": "677279",
    "end": "683279"
  },
  {
    "text": "today so we're we're talking today about mostly about Cognito but we have to",
    "start": "683279",
    "end": "690160"
  },
  {
    "text": "understand IM am and a few other services to work uh with this and let's",
    "start": "690160",
    "end": "696399"
  },
  {
    "text": "let me just show you the the first part of gim and Justin's presentation and the",
    "start": "696399",
    "end": "705680"
  },
  {
    "text": "idea is that for the this app they built there is this lot of content they need",
    "start": "705680",
    "end": "714279"
  },
  {
    "text": "to uh to generate lots of screens just for authentication just to get new users",
    "start": "714279",
    "end": "721720"
  },
  {
    "text": "sign in and you and I'm sure you all understand that this is a very uh",
    "start": "721720",
    "end": "727680"
  },
  {
    "text": "complicated and and a very tedious task of most web development and Cognito is",
    "start": "727680",
    "end": "734120"
  },
  {
    "text": "the service to help you guys with that the idea is that user sign in uh just",
    "start": "734120",
    "end": "739600"
  },
  {
    "text": "considering user sign in you have to store user passwords you know that storing user passwords in plain text is",
    "start": "739600",
    "end": "747120"
  },
  {
    "text": "not as especially a good idea and then you learn that hashed passwords",
    "start": "747120",
    "end": "752800"
  },
  {
    "text": "are better but they're still not perfect you have to select the better hashing",
    "start": "752800",
    "end": "758360"
  },
  {
    "text": "algorithm and they're still subject to lot of attacks so we have sorted hashes",
    "start": "758360",
    "end": "764360"
  },
  {
    "text": "for even better Solutions and being a bit more safe where you add a per user",
    "start": "764360",
    "end": "771480"
  },
  {
    "text": "hash uh together with your password hash and this would be uh much more more",
    "start": "771480",
    "end": "779399"
  },
  {
    "text": "secure and harder to break but it's not still the golden standard we have things",
    "start": "779399",
    "end": "785040"
  },
  {
    "text": "such as as SRP very fire functions that never pass passwords over the wire so",
    "start": "785040",
    "end": "791760"
  },
  {
    "text": "they're resistance to several attacks and have this thing called perfect",
    "start": "791760",
    "end": "796959"
  },
  {
    "text": "forward secrecy where your data is protected against future attacks because",
    "start": "796959",
    "end": "802880"
  },
  {
    "text": "it never travels through the network so even if an attacker manages to capture",
    "start": "802880",
    "end": "808279"
  },
  {
    "text": "all the network Network traffic the the data in itself is never it's never there",
    "start": "808279",
    "end": "814079"
  },
  {
    "text": "so this would be currently the most secure way to do the things and this",
    "start": "814079",
    "end": "819480"
  },
  {
    "text": "just for password management think that you still need to encrypt data on the",
    "start": "819480",
    "end": "824720"
  },
  {
    "text": "server side enforce policies make token based authentications care",
    "start": "824720",
    "end": "830279"
  },
  {
    "text": "for uh captures and personalizing these users and you still have all those user",
    "start": "830279",
    "end": "837639"
  },
  {
    "text": "this is just for registration you still need to verify uh credentials and verify email",
    "start": "837639",
    "end": "844880"
  },
  {
    "text": "and phone number verify make the forgot username and make",
    "start": "844880",
    "end": "850639"
  },
  {
    "text": "sure that uh everything is is pretty safe right um and many companies have",
    "start": "850639",
    "end": "858079"
  },
  {
    "text": "this skill and understand enough about security to implement this all securely",
    "start": "858079",
    "end": "865279"
  },
  {
    "text": "but this is very uh this is not true for many many of our customers and this is",
    "start": "865279",
    "end": "871399"
  },
  {
    "text": "something that pretty much every application out there needs right like",
    "start": "871399",
    "end": "876680"
  },
  {
    "text": "literally everybody who does not need authentication right",
    "start": "876680",
    "end": "883199"
  },
  {
    "text": "so this is the the value of Cognito and in specifically let's talk about Cognito",
    "start": "883240",
    "end": "891000"
  },
  {
    "text": "user post that is um the first Cognito component that we need to use um we can",
    "start": "891000",
    "end": "897680"
  },
  {
    "text": "use that to R register users verify their email confirm their registration",
    "start": "897680",
    "end": "904279"
  },
  {
    "text": "authenticate and get J JWT tokens and this is how you sign in with uh Cognito",
    "start": "904279",
    "end": "912240"
  },
  {
    "text": "user pools and this is what we are going to implement today the the other part of",
    "start": "912240",
    "end": "919600"
  },
  {
    "text": "Cognito is around Federation and of course that you can have Lambda",
    "start": "919600",
    "end": "925120"
  },
  {
    "text": "functions to customize all steps and you can hook the functions into this process",
    "start": "925120",
    "end": "931120"
  },
  {
    "text": "as much as you can until you finally get your JWT token that has all data in all data about your",
    "start": "931120",
    "end": "940600"
  },
  {
    "text": "authenticated user and this is um we have actually three tokens when you",
    "start": "940600",
    "end": "947120"
  },
  {
    "text": "authenticate from Cognito we're going to talk more about that and I just would",
    "start": "947120",
    "end": "952720"
  },
  {
    "text": "like to mention this other component called uh Cognito Federated Federated",
    "start": "952720",
    "end": "958199"
  },
  {
    "text": "identities because your identities can be from several providers we can",
    "start": "958199",
    "end": "965480"
  },
  {
    "text": "use uh Facebook Amazon login Twitter login or any ol provider to login and",
    "start": "965480",
    "end": "974600"
  },
  {
    "text": "Cognito can manage and and be a middle ground for those Federated identities",
    "start": "974600",
    "end": "981880"
  },
  {
    "text": "and give you AWS credentials according to uh what you allow and uh with with",
    "start": "981880",
    "end": "989079"
  },
  {
    "text": "the policies that you arrange right so this is the two components that we're",
    "start": "989079",
    "end": "994759"
  },
  {
    "text": "going to use today we have Amazon Cognito user pools to register and be",
    "start": "994759",
    "end": "1000880"
  },
  {
    "text": "one identity provider you could use many other identity providers but we're going",
    "start": "1000880",
    "end": "1007279"
  },
  {
    "text": "to use uh Cito user pools today and Federated because many apps can many",
    "start": "1007279",
    "end": "1013319"
  },
  {
    "text": "apps need their own user register registry they can relate to social media",
    "start": "1013319",
    "end": "1018600"
  },
  {
    "text": "and things like this and Cognito is fine for that and if we need",
    "start": "1018600",
    "end": "1025480"
  },
  {
    "text": "to pass uh and get credentials for AWS resources we can do that with Cognito",
    "start": "1025480",
    "end": "1032038"
  },
  {
    "text": "fed identities and this is the the the the app and if you'd like to see this",
    "start": "1032039",
    "end": "1039678"
  },
  {
    "text": "app live again it's on it's called spacefinder the serverless a reference",
    "start": "1039679",
    "end": "1045839"
  },
  {
    "text": "app that I'm going to try to do something quite similar today instead instead of",
    "start": "1045839",
    "end": "1052600"
  },
  {
    "text": "using ionic 2 and this quick start guide let's go through through it step by step",
    "start": "1052600",
    "end": "1060039"
  },
  {
    "text": "and see what it takes what do you think what you guys",
    "start": "1060039",
    "end": "1065880"
  },
  {
    "text": "think all right and again any questions anything just let me",
    "start": "1065960",
    "end": "1071720"
  },
  {
    "text": "know so let's bring up the our app into break the break list Direct",
    "start": "1071720",
    "end": "1079919"
  },
  {
    "text": "and it is the breakless react app and we",
    "start": "1079919",
    "end": "1086400"
  },
  {
    "text": "can npm start oh let's open in the text",
    "start": "1086400",
    "end": "1092360"
  },
  {
    "text": "editor first so we have a view of what is",
    "start": "1092360",
    "end": "1097640"
  },
  {
    "text": "here and last time we've been playing with this appjs a very simple uh react app let's",
    "start": "1097640",
    "end": "1107080"
  },
  {
    "text": "start the the app",
    "start": "1107080",
    "end": "1110760"
  },
  {
    "text": "so here is our app so it's not not too much fun yet right just shows this this",
    "start": "1131120",
    "end": "1138880"
  },
  {
    "text": "L but there is something going on here that may be interesting to see that we",
    "start": "1138880",
    "end": "1145799"
  },
  {
    "text": "are already calling our API Gateway we are invoking that that function and just",
    "start": "1145799",
    "end": "1152120"
  },
  {
    "text": "to reveiew how that is done when our component is m is mounted I call the API",
    "start": "1152120",
    "end": "1159720"
  },
  {
    "text": "Gateway client this is a client that was generated automatically for us here",
    "start": "1159720",
    "end": "1166200"
  },
  {
    "text": "using this API Gateway feature on on our stages it's deployed to a stage",
    "start": "1166200",
    "end": "1172400"
  },
  {
    "text": "named prod and we can generate sdks that's our library for Android",
    "start": "1172400",
    "end": "1179039"
  },
  {
    "text": "JavaScript iOS or using the Java SDK and this will generate clients that the have",
    "start": "1179039",
    "end": "1187640"
  },
  {
    "text": "automatic retries with exponential back off and many facilities to make your API",
    "start": "1187640",
    "end": "1195640"
  },
  {
    "text": "easier to consume if your client is is written in one of those languages or if",
    "start": "1195640",
    "end": "1202120"
  },
  {
    "text": "you would like to make this API available to third parties but um it's",
    "start": "1202120",
    "end": "1207840"
  },
  {
    "text": "also up to you to invoke directly this URL if you don't want to use the",
    "start": "1207840",
    "end": "1214760"
  },
  {
    "text": "JavaScript SDK and you would rather send HTTP requests straight to your stage uh",
    "start": "1214760",
    "end": "1224240"
  },
  {
    "text": "end point that's all right but you will have to manage things such as um retries",
    "start": "1224240",
    "end": "1233480"
  },
  {
    "text": "authentication and all those things yourself so we're going to try to do both ways and see the difference as I've",
    "start": "1233480",
    "end": "1241240"
  },
  {
    "text": "seen people do it um both ways and I just wouldn't recommend uh executing the",
    "start": "1241240",
    "end": "1248919"
  },
  {
    "text": "Lambda functions directly from the JavaScript SDK while that is possible",
    "start": "1248919",
    "end": "1255280"
  },
  {
    "text": "it's it's quite um useful to have API Gateway in front managing things such as",
    "start": "1255280",
    "end": "1262840"
  },
  {
    "text": "throttling and make sure that nobody is abusing or your API or even enabling",
    "start": "1262840",
    "end": "1270080"
  },
  {
    "text": "cash and getting faster responses as it is behind uh cloudfront effectively so",
    "start": "1270080",
    "end": "1277760"
  },
  {
    "text": "this uh is a different kind of content a different kind of distribution it's very",
    "start": "1277760",
    "end": "1284880"
  },
  {
    "text": "specific to API Gateway but you can think of of it as an application",
    "start": "1284880",
    "end": "1291120"
  },
  {
    "text": "distribution that you should use to make your API safer and more performance and",
    "start": "1291120",
    "end": "1298360"
  },
  {
    "text": "in the more the same sense that we Ed Cloud front to make our static content U",
    "start": "1298360",
    "end": "1306799"
  },
  {
    "text": "we have the same the same properties all right I hope this makes sense and now",
    "start": "1306799",
    "end": "1315080"
  },
  {
    "text": "let's try to make uh an authenticated resource and create another LDA function",
    "start": "1315080",
    "end": "1322080"
  },
  {
    "text": "that's going to be subject to those to",
    "start": "1322080",
    "end": "1327200"
  },
  {
    "text": "authentication but before we do that and the way we're going to do that let me",
    "start": "1327200",
    "end": "1332480"
  },
  {
    "text": "show you here on our resources definition when we have this method",
    "start": "1332480",
    "end": "1338559"
  },
  {
    "text": "request we have this authorization criteria and this",
    "start": "1338559",
    "end": "1345000"
  },
  {
    "text": "API key required and many apis use API",
    "start": "1345000",
    "end": "1350400"
  },
  {
    "text": "static API keys to identify users but it's important to make sure that those",
    "start": "1350400",
    "end": "1356840"
  },
  {
    "text": "are used only for metering so for throttling and for seeing how many",
    "start": "1356840",
    "end": "1362080"
  },
  {
    "text": "requests you're hitting and things like this API ke may be useful but um you",
    "start": "1362080",
    "end": "1368480"
  },
  {
    "text": "should sign the requests and make a a more strong authentication than just API",
    "start": "1368480",
    "end": "1376520"
  },
  {
    "text": "keys and cognito does is a service that does exactly that so here we have this",
    "start": "1376520",
    "end": "1384039"
  },
  {
    "text": "option to use um no credentials or I aim",
    "start": "1384039",
    "end": "1389600"
  },
  {
    "text": "credentials and we have the also the opportunity to use custom authentication",
    "start": "1389600",
    "end": "1396640"
  },
  {
    "text": "providers and create new authorizers that can be either a custom auor",
    "start": "1396640",
    "end": "1402320"
  },
  {
    "text": "authorizer that will make Lambda invoke Lambda functions to make to check if",
    "start": "1402320",
    "end": "1409799"
  },
  {
    "text": "user should be authenticated or not or you can bind that to a Cognito user pool",
    "start": "1409799",
    "end": "1415919"
  },
  {
    "text": "authorizer that is already bound to a Cognito user pool all right so let's do",
    "start": "1415919",
    "end": "1423000"
  },
  {
    "text": "just that so let's move to the",
    "start": "1423000",
    "end": "1429200"
  },
  {
    "text": "Cognito",
    "start": "1429200",
    "end": "1432200"
  },
  {
    "text": "service and here here we have those two Cognito resources that we were talking",
    "start": "1436919",
    "end": "1442120"
  },
  {
    "text": "about first managing user pools and then managing Federated identities let's go",
    "start": "1442120",
    "end": "1448080"
  },
  {
    "text": "to manage user pools and create a user pool for our breakless",
    "start": "1448080",
    "end": "1455240"
  },
  {
    "text": "app breakless user pool I will uh I like to",
    "start": "1455240",
    "end": "1463039"
  },
  {
    "text": "remind me of what this is about or else we just create meaningless names and end",
    "start": "1463039",
    "end": "1468679"
  },
  {
    "text": "up a bit lost so we can review the fs or step through settings let's just step",
    "start": "1468679",
    "end": "1475440"
  },
  {
    "text": "through every setting and the first thing we need to Define is which attributes do we want so those",
    "start": "1475440",
    "end": "1483039"
  },
  {
    "text": "attributes are going to be managed by Cognito and you can say which ones are",
    "start": "1483039",
    "end": "1490279"
  },
  {
    "text": "required for sign up and which ones are usable as an alias for the for the",
    "start": "1490279",
    "end": "1497720"
  },
  {
    "text": "username so if they can sign in with either their email or their preferred",
    "start": "1497720",
    "end": "1505000"
  },
  {
    "text": "username and things like that so yeah let's choose to register by",
    "start": "1505000",
    "end": "1512520"
  },
  {
    "text": "email by phone number and I don't know preferred",
    "start": "1512520",
    "end": "1520320"
  },
  {
    "text": "username so we can sign in by either username or",
    "start": "1520320",
    "end": "1525799"
  },
  {
    "text": "email and we can well we can work with any kind of details that you guys may be",
    "start": "1525799",
    "end": "1533000"
  },
  {
    "text": "interested the important thing is that Cognito will store this information and",
    "start": "1533000",
    "end": "1540320"
  },
  {
    "text": "you may have to update or read this information to Cognito and or sync it",
    "start": "1540320",
    "end": "1548640"
  },
  {
    "text": "with your database but you have an API for doing that easily",
    "start": "1548640",
    "end": "1555200"
  },
  {
    "text": "so you can also add a custom attribute so this could be a string or a number",
    "start": "1555200",
    "end": "1562200"
  },
  {
    "text": "that can be required or not have you have control of how this attribute works",
    "start": "1562200",
    "end": "1568080"
  },
  {
    "text": "if you would like for for example in Brazil we have a cpf document uh for",
    "start": "1568080",
    "end": "1575000"
  },
  {
    "text": "example um yeah I'm now talking with you guys from s Paulo Brazil and in",
    "start": "1575000",
    "end": "1580039"
  },
  {
    "text": "Brazilian application sometimes this may be required for example okay let's just",
    "start": "1580039",
    "end": "1585640"
  },
  {
    "text": "go with this standard attributes and kick to the next step oh uh referred",
    "start": "1585640",
    "end": "1593039"
  },
  {
    "text": "username cannot be both required as an alas so let's set just as an alias",
    "start": "1593039",
    "end": "1601399"
  },
  {
    "text": "and minimum passwords minimum password length so eight characters require",
    "start": "1601399",
    "end": "1608000"
  },
  {
    "text": "numbers require special characters no if you want uppercase and lowercase letters",
    "start": "1608000",
    "end": "1614760"
  },
  {
    "text": "I I'll say just numbers and uppercase and lower case mix is all right that's",
    "start": "1614760",
    "end": "1621320"
  },
  {
    "text": "uh or I can say that 10 passwords is minimum or six I don't know depends on",
    "start": "1621320",
    "end": "1628080"
  },
  {
    "text": "the password while properties you consider secure and of course you are more than welcome to improve this on",
    "start": "1628080",
    "end": "1635039"
  },
  {
    "text": "your app and and make a better UI for those things but this is what Cognito",
    "start": "1635039",
    "end": "1641640"
  },
  {
    "text": "will accept on the back end and if you want to allow users to sign themselves",
    "start": "1641640",
    "end": "1648320"
  },
  {
    "text": "up such as a public website you can do that or for some kind of apps for",
    "start": "1648320",
    "end": "1655000"
  },
  {
    "text": "internal apps or for Enterprises it may be the case that you want to you don't",
    "start": "1655000",
    "end": "1662240"
  },
  {
    "text": "have public sign up you only want your admins to create users they must file a",
    "start": "1662240",
    "end": "1668320"
  },
  {
    "text": "request or something like that then how quickly should user accounts be created",
    "start": "1668320",
    "end": "1675480"
  },
  {
    "text": "if should be uh expired if they're not use it if someone",
    "start": "1675480",
    "end": "1681120"
  },
  {
    "text": "creates an account and nobody claims that account it's deleted within the",
    "start": "1681120",
    "end": "1686360"
  },
  {
    "text": "week okay and for verifications",
    "start": "1686360",
    "end": "1693440"
  },
  {
    "text": "uh yeah this for phone verifications SNS uses a telepone network and this have a",
    "start": "1693440",
    "end": "1701480"
  },
  {
    "text": "spend on SNS Motif Factor authentication if you",
    "start": "1701480",
    "end": "1706679"
  },
  {
    "text": "want to enable those hardare tokens or phone tokens to to generate and to be",
    "start": "1706679",
    "end": "1714760"
  },
  {
    "text": "more secure and have an additional authentication criteria let's not do that",
    "start": "1714760",
    "end": "1720960"
  },
  {
    "text": "today do you want if you want verification of emails or phone numbers",
    "start": "1720960",
    "end": "1727679"
  },
  {
    "text": "and this is just to this will send the code for your email that the user must",
    "start": "1727679",
    "end": "1734720"
  },
  {
    "text": "provide to make sure they are who they say they are and you can use one or both",
    "start": "1734720",
    "end": "1743240"
  },
  {
    "text": "and as a you can any app have different",
    "start": "1743240",
    "end": "1749559"
  },
  {
    "text": "criterias for selecting this I'm going for email as that's going to be easier to show it to you guys and a role to",
    "start": "1749559",
    "end": "1758840"
  },
  {
    "text": "allow Cognito to send SMS and I can call",
    "start": "1758840",
    "end": "1763880"
  },
  {
    "text": "that R created this role was created let's take a look at that in a minute and",
    "start": "1763880",
    "end": "1771559"
  },
  {
    "text": "create the next step so here you can customize the the",
    "start": "1771559",
    "end": "1778000"
  },
  {
    "text": "messages and there is there are ways to further customize this messages and how",
    "start": "1778000",
    "end": "1783799"
  },
  {
    "text": "they work we can do this using Lambda functions but this is all right for now",
    "start": "1783799",
    "end": "1790840"
  },
  {
    "text": "and you can say this this message came from a different domain or from a",
    "start": "1790840",
    "end": "1797200"
  },
  {
    "text": "different address uh if you have SCS verified identity",
    "start": "1797200",
    "end": "1803159"
  },
  {
    "text": "yeah does if you have your email sending from SES configured what is something we",
    "start": "1803159",
    "end": "1810679"
  },
  {
    "text": "currently do not if we want to tag users for this pool this is probably a good idea and I",
    "start": "1810679",
    "end": "1819720"
  },
  {
    "text": "can say that this user origin is from the break class app for",
    "start": "1819720",
    "end": "1828039"
  },
  {
    "text": "example this can be any key or anything at all any pair of values that will make",
    "start": "1828039",
    "end": "1833840"
  },
  {
    "text": "sure you know where this user came from or how is it associated with your",
    "start": "1833840",
    "end": "1840919"
  },
  {
    "text": "environment and if you want to remember your user devices so that they don't",
    "start": "1840919",
    "end": "1847039"
  },
  {
    "text": "need to to log in again this may be uh",
    "start": "1847039",
    "end": "1853360"
  },
  {
    "text": "subject to again your policy and how do you want uh",
    "start": "1853360",
    "end": "1859039"
  },
  {
    "text": "your application to behave let's not uh manage hardware and devices for now we",
    "start": "1859039",
    "end": "1865720"
  },
  {
    "text": "can take on that a bit later and which apps will have access to this user pool",
    "start": "1865720",
    "end": "1872559"
  },
  {
    "text": "and this is very very important because you can have several apps running in a",
    "start": "1872559",
    "end": "1879360"
  },
  {
    "text": "single Cognito user pool so if you have more than say you have uh enter",
    "start": "1879360",
    "end": "1887919"
  },
  {
    "text": "Enterprise CRM and you have your Enterprise desktops and you have your",
    "start": "1887919",
    "end": "1893639"
  },
  {
    "text": "ticketing system and your e-commerce they can all be different apps around",
    "start": "1893639",
    "end": "1899240"
  },
  {
    "text": "the same user pools and using the same user so I will call this",
    "start": "1899240",
    "end": "1905840"
  },
  {
    "text": "breakless react as this is the name of",
    "start": "1905840",
    "end": "1911039"
  },
  {
    "text": "our beautiful app today let's let me just make sure if it's better to use",
    "start": "1911039",
    "end": "1918840"
  },
  {
    "text": "slashes or underlines I'll use the the slash I think this is I'm never sure",
    "start": "1918840",
    "end": "1925360"
  },
  {
    "text": "about those naming standards but let's try to keep the same same names so react",
    "start": "1925360",
    "end": "1931600"
  },
  {
    "text": "breakless app and how long the token can last and",
    "start": "1931600",
    "end": "1939159"
  },
  {
    "text": "this meaning after how much time the user will be completely forgotten",
    "start": "1939159",
    "end": "1944880"
  },
  {
    "text": "because up to 30 days in this case you can use the refresh token to renew",
    "start": "1944880",
    "end": "1951399"
  },
  {
    "text": "credentials and we're generating this client secret for this guy and enabling",
    "start": "1951399",
    "end": "1957799"
  },
  {
    "text": "an API for this for the server based authentication uh we don't need that for",
    "start": "1957799",
    "end": "1964639"
  },
  {
    "text": "today we can talk about no srpf later and not we're not going with custom",
    "start": "1964639",
    "end": "1971440"
  },
  {
    "text": "authentication today but we could have all personalized using using Lambda",
    "start": "1971440",
    "end": "1980200"
  },
  {
    "text": "functions with the app created here is the is the life cycle hooks the the",
    "start": "1980519",
    "end": "1986799"
  },
  {
    "text": "Lambda functions that you can set before your user sign up after your user sign",
    "start": "1986799",
    "end": "1993440"
  },
  {
    "text": "up how to create a custom message before making a verification be before",
    "start": "1993440",
    "end": "1999840"
  },
  {
    "text": "authentication and after authentication and one that is particularly important is this Define OD Challenge and very y",
    "start": "1999840",
    "end": "2008320"
  },
  {
    "text": "all response challenge this is how you can say that well this user in this",
    "start": "2008320",
    "end": "2014559"
  },
  {
    "text": "condition they need a capture they need an MFA they need uh a custom a biometric",
    "start": "2014559",
    "end": "2022679"
  },
  {
    "text": "authentication I don't know whatever off challenge you would like to impose your users you can customize with the with",
    "start": "2022679",
    "end": "2030679"
  },
  {
    "text": "the Lambda functions I'm going with the fals so far and here is our user",
    "start": "2030679",
    "end": "2039720"
  },
  {
    "text": "cool so why Cognito is considered on the mobile service pack if it's ready for",
    "start": "2041639",
    "end": "2047440"
  },
  {
    "text": "desktops as the same as mobile devices well um this is a hard one for me I",
    "start": "2047440",
    "end": "2054240"
  },
  {
    "text": "don't have a very exact answer for that but one detail that is important is that",
    "start": "2054240",
    "end": "2061358"
  },
  {
    "text": "Cognito um also have the data synchronization aspect so in",
    "start": "2061359",
    "end": "2070599"
  },
  {
    "text": "aws.amazon.com cognito uh it has those two sets of",
    "start": "2070599",
    "end": "2077919"
  },
  {
    "text": "features the the set the user sign in and this store and sync data across",
    "start": "2077919",
    "end": "2085560"
  },
  {
    "text": "devices if you have for example a web store and a user sets um one specific",
    "start": "2085560",
    "end": "2093960"
  },
  {
    "text": "item as a favorite in the in the web page without even creating an user and",
    "start": "2093960",
    "end": "2101320"
  },
  {
    "text": "then create a user and then switch devices Cognito syncs this information",
    "start": "2101320",
    "end": "2106960"
  },
  {
    "text": "across devices across accounts um giving your user U integrated experience on",
    "start": "2106960",
    "end": "2113920"
  },
  {
    "text": "your app and this may be the case um this is of course very important for",
    "start": "2113920",
    "end": "2120760"
  },
  {
    "text": "mobile devices and this is why Cognito is very very important for mobile even",
    "start": "2120760",
    "end": "2128280"
  },
  {
    "text": "though it also has sign up and Federated identities all right and if you can use",
    "start": "2128280",
    "end": "2135119"
  },
  {
    "text": "Cognito as a standard open IP provider for other applications well you can although it's",
    "start": "2135119",
    "end": "2143920"
  },
  {
    "text": "not uh built in directly it's you would have to write a bit of that yourself ve",
    "start": "2143920",
    "end": "2152560"
  },
  {
    "text": "Master uh but there is one example from the evangelist list",
    "start": "2152560",
    "end": "2159040"
  },
  {
    "text": "Danilo and let me show you guys this",
    "start": "2159040",
    "end": "2165800"
  },
  {
    "text": "out [Music] serverless he written the sample",
    "start": "2165800",
    "end": "2172079"
  },
  {
    "text": "authentication Service he wrote a full uh",
    "start": "2172079",
    "end": "2178880"
  },
  {
    "text": "authentication provider using uh only Lambda functions and API Gateway so this",
    "start": "2178880",
    "end": "2185720"
  },
  {
    "text": "would be probably the way to go about about this so take if you're",
    "start": "2185720",
    "end": "2191359"
  },
  {
    "text": "interested in writing this code this kind of code take a look at this this",
    "start": "2191359",
    "end": "2196440"
  },
  {
    "text": "repository it's that it's basically another out identity provider but",
    "start": "2196440",
    "end": "2202560"
  },
  {
    "text": "exposing through Lambda functions and you could do the same to expose",
    "start": "2202560",
    "end": "2209119"
  },
  {
    "text": "uh using other other protocols but there's not one ready to expose uh",
    "start": "2209119",
    "end": "2216319"
  },
  {
    "text": "Cognito directly as open ID not that I know of okay",
    "start": "2216319",
    "end": "2224119"
  },
  {
    "text": "and let's move let's then use this user pool that that we created so H now how",
    "start": "2224240",
    "end": "2232079"
  },
  {
    "text": "do we integrate this some data in this in this screen is really important so",
    "start": "2232079",
    "end": "2240040"
  },
  {
    "text": "I'll take note of them so this is my bu ID this is how I can get authentication",
    "start": "2240040",
    "end": "2249319"
  },
  {
    "text": "to this to my authentication client to reference which pool ID I'm considering",
    "start": "2249319",
    "end": "2256680"
  },
  {
    "text": "so let's go to that text file and I will",
    "start": "2256680",
    "end": "2261960"
  },
  {
    "text": "add it to",
    "start": "2261960",
    "end": "2269599"
  },
  {
    "text": "AWS stuff. text so this is my P ID",
    "start": "2270040",
    "end": "2279440"
  },
  {
    "text": "this is the Amazon resource name of our pool so this is what we need to",
    "start": "2281839",
    "end": "2287000"
  },
  {
    "text": "reference if we need to to create this and",
    "start": "2287000",
    "end": "2293480"
  },
  {
    "text": "then it's the app our",
    "start": "2293480",
    "end": "2299560"
  },
  {
    "text": "apps we have this client ID so we have this app client ID right here",
    "start": "2299560",
    "end": "2308200"
  },
  {
    "text": "so we probably needing this this data to authenticate with this user pool and",
    "start": "2308200",
    "end": "2316000"
  },
  {
    "text": "this is what we'll try to do all right and next we need to authenticate users",
    "start": "2316000",
    "end": "2324400"
  },
  {
    "text": "and this is uh we can almost code this app already",
    "start": "2324400",
    "end": "2329800"
  },
  {
    "text": "so here in the documentation page let me",
    "start": "2329800",
    "end": "2337720"
  },
  {
    "text": "show you what we we are going to follow today so there is",
    "start": "2337720",
    "end": "2345200"
  },
  {
    "text": "this let me get the a link to this",
    "start": "2345480",
    "end": "2351040"
  },
  {
    "text": "tutorial and the from the do from AWS",
    "start": "2351040",
    "end": "2356079"
  },
  {
    "text": "documentation let me just edit this and add a",
    "start": "2356079",
    "end": "2363800"
  },
  {
    "text": "link here so",
    "start": "2363800",
    "end": "2369359"
  },
  {
    "text": "so oh here it is it it was here",
    "start": "2370160",
    "end": "2375680"
  },
  {
    "text": "already so I can delete this oops it was",
    "start": "2375960",
    "end": "2381400"
  },
  {
    "text": "all right so integrating user PO with",
    "start": "2381400",
    "end": "2392079"
  },
  {
    "text": "JavaScript",
    "start": "2392079",
    "end": "2395079"
  },
  {
    "text": "so this uh this is the documentation page for creating the the things uh for",
    "start": "2405560",
    "end": "2412720"
  },
  {
    "text": "integrating with Javascript app so if uh you would rather follow the the steps",
    "start": "2412720",
    "end": "2420640"
  },
  {
    "text": "than watching this again this is what you guys can use and here is the Amazon",
    "start": "2420640",
    "end": "2428400"
  },
  {
    "text": "in the in the end of this page there's a very important resource that's the Amazon Cognito identity Force JavaScript",
    "start": "2428400",
    "end": "2436680"
  },
  {
    "text": "repo so this repo is where all the code",
    "start": "2436680",
    "end": "2442400"
  },
  {
    "text": "for the identity SDK for Cognito is stored and here's all you need to use",
    "start": "2442400",
    "end": "2451160"
  },
  {
    "text": "this authentication Service and this is very important because",
    "start": "2451160",
    "end": "2458319"
  },
  {
    "text": "this is separate from the AWS SDK so there is the AWS JavaScript SDK and",
    "start": "2458319",
    "end": "2465680"
  },
  {
    "text": "we've been talking um a lot about it and we are going to use this also but it is",
    "start": "2465680",
    "end": "2473000"
  },
  {
    "text": "a separate SDK because you may not need everything you don't need uh s you it",
    "start": "2473000",
    "end": "2480760"
  },
  {
    "text": "may be the case that your application wants to use just Cognito and not even",
    "start": "2480760",
    "end": "2486800"
  },
  {
    "text": "touch any other AWS service only um",
    "start": "2486800",
    "end": "2491920"
  },
  {
    "text": "authentication right only Cognito user pools and here is how it",
    "start": "2491920",
    "end": "2499720"
  },
  {
    "text": "works let's uh let's",
    "start": "2499720",
    "end": "2504319"
  },
  {
    "text": "um install it the Amazon Cognito SDK for",
    "start": "2504760",
    "end": "2510079"
  },
  {
    "text": "JavaScript it's there set up instructions for everyone we are using",
    "start": "2510079",
    "end": "2516960"
  },
  {
    "text": "re react this means mpm and web pack so we are going to install this files",
    "start": "2516960",
    "end": "2525560"
  },
  {
    "text": "in our react app so I'll stop the the",
    "start": "2525560",
    "end": "2531599"
  },
  {
    "text": "application and create install the web back and Json",
    "start": "2531599",
    "end": "2538000"
  },
  {
    "text": "loer and save it to to my setup also we are going to install",
    "start": "2538000",
    "end": "2546160"
  },
  {
    "text": "Amazon cognito I",
    "start": "2546160",
    "end": "2549838"
  },
  {
    "text": "chjs all right now for the jdk itself and this",
    "start": "2556400",
    "end": "2564079"
  },
  {
    "text": "should touch our package.json file so we see that it's changed and added with the",
    "start": "2564079",
    "end": "2573119"
  },
  {
    "text": "Json loader web pack and right",
    "start": "2573119",
    "end": "2578440"
  },
  {
    "text": "now the Amazon Cognito identity for JavaScript and this is all we need to",
    "start": "2578440",
    "end": "2584200"
  },
  {
    "text": "set this up and now we can you reference this package within",
    "start": "2584200",
    "end": "2591359"
  },
  {
    "text": "our codes so of course we also need this uh user pool ID and the app client ID",
    "start": "2591359",
    "end": "2599240"
  },
  {
    "text": "we're going to need that for this code that follows and let's go through the the usage so on",
    "start": "2599240",
    "end": "2607720"
  },
  {
    "text": "the you the way you use this code really depends on what kind of JavaScript framework that you have so if it's plain",
    "start": "2607720",
    "end": "2615960"
  },
  {
    "text": "JavaScript or under the original name or if you're using web pack and nodejs or",
    "start": "2615960",
    "end": "2623280"
  },
  {
    "text": "using es6 models and transpiling with bab that's our case using react",
    "start": "2623280",
    "end": "2629559"
  },
  {
    "text": "so our proper declaration in our",
    "start": "2629559",
    "end": "2634599"
  },
  {
    "text": "appjs this is going we we probably need to structure this component a bit better",
    "start": "2634599",
    "end": "2640720"
  },
  {
    "text": "it's going to have a lot of stuff soon but let's uh keep doing this here for a",
    "start": "2640720",
    "end": "2646720"
  },
  {
    "text": "while then we can refactor it into something more interesting but important",
    "start": "2646720",
    "end": "2653280"
  },
  {
    "text": "Cognito user from Cognito identity JS must be this",
    "start": "2653280",
    "end": "2659720"
  },
  {
    "text": "and I will just comment this uh that we did earlier today",
    "start": "2659720",
    "end": "2667839"
  },
  {
    "text": "in the last just in the last um episode just so that this doesn't bother us",
    "start": "2667839",
    "end": "2673720"
  },
  {
    "text": "today and we again let's move that to a different place as soon as we can",
    "start": "2673720",
    "end": "2682839"
  },
  {
    "text": "and now we should be ready to instantiate and use our Cognito objects",
    "start": "2685079",
    "end": "2694000"
  },
  {
    "text": "so the first case the first use case that we have on this page and let's go through this it's registering a user",
    "start": "2694000",
    "end": "2701680"
  },
  {
    "text": "with the app so when registering a user with the application we need to create a",
    "start": "2701680",
    "end": "2707480"
  },
  {
    "text": "user pool by providing the user pool ID and signing up with the username",
    "start": "2707480",
    "end": "2713000"
  },
  {
    "text": "password attribute list and validation data so this is the code that we should",
    "start": "2713000",
    "end": "2720000"
  },
  {
    "text": "be using to authenticate to create this this user so let's go and copy this",
    "start": "2720000",
    "end": "2727640"
  },
  {
    "text": "and see if we can implement this step by step okay so I will",
    "start": "2727640",
    "end": "2734480"
  },
  {
    "text": "go and copy this on to Let's create uh let's create a method first before we",
    "start": "2734480",
    "end": "2741599"
  },
  {
    "text": "paste this here anywhere let's start to structure this a a little bit better before you uh shout out to me that this",
    "start": "2741599",
    "end": "2750240"
  },
  {
    "text": "sucks too much to watch and let's let's then get um a form running",
    "start": "2750240",
    "end": "2757680"
  },
  {
    "text": "a set of buttons I don't know uh just let's start with just a button a very",
    "start": "2757680",
    "end": "2765960"
  },
  {
    "text": "simple thing and have this be a reference and I I have this",
    "start": "2765960",
    "end": "2772800"
  },
  {
    "text": "code here because I I always forget it and uh the code to create a react button",
    "start": "2772800",
    "end": "2781079"
  },
  {
    "text": "properly so this is it and I can where",
    "start": "2781079",
    "end": "2786559"
  },
  {
    "text": "what we are trying to do is register uh user so this button will say register",
    "start": "2786559",
    "end": "2795400"
  },
  {
    "text": "and before it we're going to have it's going to call me a method",
    "start": "2795400",
    "end": "2801599"
  },
  {
    "text": "called do register and the do register",
    "start": "2801599",
    "end": "2809200"
  },
  {
    "text": "for a given event is going to cons just",
    "start": "2809200",
    "end": "2818440"
  },
  {
    "text": "log the register",
    "start": "2818440",
    "end": "2825680"
  },
  {
    "text": "[Music] user all right so just make sure that",
    "start": "2825680",
    "end": "2831200"
  },
  {
    "text": "our app is working let's start up",
    "start": "2831200",
    "end": "2839480"
  },
  {
    "text": "the react server again and got",
    "start": "2839480",
    "end": "2847800"
  },
  {
    "text": "get that rolling so it failed compile",
    "start": "2851559",
    "end": "2857079"
  },
  {
    "text": "and this is a very um a very this is a common problem and this type error read",
    "start": "2857079",
    "end": "2864880"
  },
  {
    "text": "zero cannot read properly from react this is actually a known bug and here on",
    "start": "2864880",
    "end": "2874000"
  },
  {
    "text": "HTML web pack this is the issue where I found the the solution",
    "start": "2874000",
    "end": "2881359"
  },
  {
    "text": "and very nice that we found this I'm going to add this glitch to our",
    "start": "2881359",
    "end": "2888359"
  },
  {
    "text": "documentation page today so on that's on Firefox",
    "start": "2888359",
    "end": "2894680"
  },
  {
    "text": "and our guest let me get that on the",
    "start": "2894680",
    "end": "2903119"
  },
  {
    "text": "twitch chat and",
    "start": "2903280",
    "end": "2908760"
  },
  {
    "text": "so H yes you are right uh V Master about",
    "start": "2921319",
    "end": "2928520"
  },
  {
    "text": "unticking the the secret when setting up the pool it may be the case let's see",
    "start": "2928520",
    "end": "2934760"
  },
  {
    "text": "how that that works maybe we can change this setting if it doesn't work and or",
    "start": "2934760",
    "end": "2940480"
  },
  {
    "text": "create it again let's let's see how it goes just let me paste this for you guys",
    "start": "2940480",
    "end": "2946240"
  },
  {
    "text": "on the on our document so there's",
    "start": "2946240",
    "end": "2952520"
  },
  {
    "text": "this fix",
    "start": "2952520",
    "end": "2958799"
  },
  {
    "text": "uh HTML web ping",
    "start": "2959319",
    "end": "2964480"
  },
  {
    "text": "I don't know if there is if there is a better solution for this perhaps someone",
    "start": "2967680",
    "end": "2974319"
  },
  {
    "text": "can point me to it but right now the the thing I found that works is to downgrade",
    "start": "2974319",
    "end": "2981440"
  },
  {
    "text": "react scripts to this version and",
    "start": "2981440",
    "end": "2987319"
  },
  {
    "text": "070 so on our package.json let's move",
    "start": "2987319",
    "end": "2992440"
  },
  {
    "text": "react script to 070",
    "start": "2992440",
    "end": "2997200"
  },
  {
    "text": "and let's hope this",
    "start": "2997480",
    "end": "3001280"
  },
  {
    "text": "works and ta",
    "start": "3004240",
    "end": "3008960"
  },
  {
    "text": "voila oops no not today",
    "start": "3010160",
    "end": "3016280"
  },
  {
    "text": "h Target",
    "start": "3017480",
    "end": "3021000"
  },
  {
    "text": "container we have something something else here there's actually two different",
    "start": "3024599",
    "end": "3031359"
  },
  {
    "text": "errors the first one is that the target container is not a done element and",
    "start": "3031359",
    "end": "3038319"
  },
  {
    "text": "let's see what's going on here so in our",
    "start": "3038319",
    "end": "3046119"
  },
  {
    "text": "index.html we have this root ID and our",
    "start": "3046920",
    "end": "3052799"
  },
  {
    "text": "app is registered in the root element so",
    "start": "3052799",
    "end": "3058079"
  },
  {
    "text": "the the ID is there let me just let's roll back this appjs to its initial",
    "start": "3058079",
    "end": "3065040"
  },
  {
    "text": "State without importing Cognito and all this let's see if this still",
    "start": "3065040",
    "end": "3073119"
  },
  {
    "text": "works H not yet let",
    "start": "3073720",
    "end": "3080480"
  },
  {
    "text": "me just restart this",
    "start": "3080480",
    "end": "3085880"
  },
  {
    "text": "and oh I think I may need to npm",
    "start": "3098720",
    "end": "3104280"
  },
  {
    "text": "install and make sure it reinstall this in the exact versions",
    "start": "3104280",
    "end": "3113079"
  },
  {
    "text": "let's see if this",
    "start": "3119440",
    "end": "3122280"
  },
  {
    "text": "fixes I hope this uh it may be the case that I need to to clean everything and",
    "start": "3126359",
    "end": "3133040"
  },
  {
    "text": "install web back again or I don't know perhap did something else but I had this",
    "start": "3133040",
    "end": "3139119"
  },
  {
    "text": "error before and it was just this matter of downgrading the the web back plugin",
    "start": "3139119",
    "end": "3146119"
  },
  {
    "text": "and it's exactly the same message as you can see so that's why I'm assuming this",
    "start": "3146119",
    "end": "3152960"
  },
  {
    "text": "is it but let's see how it goes so it's still installing and loading all",
    "start": "3152960",
    "end": "3162160"
  },
  {
    "text": "apps on the tree uh while that goes on uh if you have any questions at all or",
    "start": "3162160",
    "end": "3169000"
  },
  {
    "text": "anything that You' like to to see a scode today just let me know",
    "start": "3169000",
    "end": "3175079"
  },
  {
    "text": "and we can and we can move this to all sorts of directions next we uh the plan",
    "start": "3175079",
    "end": "3182480"
  },
  {
    "text": "so far is to keep building this into a data oriented app and have more uh",
    "start": "3182480",
    "end": "3189960"
  },
  {
    "text": "content for for us around this and on on",
    "start": "3189960",
    "end": "3196160"
  },
  {
    "text": "twitch.tv/ AWS right right now on the there's a schedule with the next",
    "start": "3196160",
    "end": "3202640"
  },
  {
    "text": "programs let me I think I have it and downloaded and this is something I'd",
    "start": "3202640",
    "end": "3208680"
  },
  {
    "text": "like to share with you guys while this is downloading so make sure you stay tuned",
    "start": "3208680",
    "end": "3216520"
  },
  {
    "text": "to AWS on Twitch and today this is what we are doing API authentication with",
    "start": "3216520",
    "end": "3224319"
  },
  {
    "text": "Cognito um tomorrow Abby is going to be starting uh Docker broadcast and all",
    "start": "3224319",
    "end": "3232200"
  },
  {
    "text": "things Docker and I can't wait to see that myself I don't have that that much",
    "start": "3232200",
    "end": "3237480"
  },
  {
    "text": "experience dockerizing stuff and it will be a nice opportunity to dockerize our",
    "start": "3237480",
    "end": "3243960"
  },
  {
    "text": "breakless app perhaps and then next week I'm back talking about no SQL back end",
    "start": "3243960",
    "end": "3250839"
  },
  {
    "text": "so now that we have API we will have API working I hope it's time to store data",
    "start": "3250839",
    "end": "3257319"
  },
  {
    "text": "and we are going to do that in the next two episodes with no SQL back ends and",
    "start": "3257319",
    "end": "3262680"
  },
  {
    "text": "with SQL back ends right after that and then we can move on to any sort of data",
    "start": "3262680",
    "end": "3269160"
  },
  {
    "text": "analytics machine learning whatever you guys want to see on this channel while",
    "start": "3269160",
    "end": "3274960"
  },
  {
    "text": "uh we learn more about Docker with Abby and I hope you guys stay tuned on",
    "start": "3274960",
    "end": "3280760"
  },
  {
    "text": "twitch.tv AWS thank you for this small commercial and this were this was enough",
    "start": "3280760",
    "end": "3286960"
  },
  {
    "text": "to get um our software downloaded and hopefully let's um I is it npm clean to",
    "start": "3286960",
    "end": "3295640"
  },
  {
    "text": "get uh",
    "start": "3295640",
    "end": "3298318"
  },
  {
    "text": "uh a clean object I don't know this is probably a different command I'm not too",
    "start": "3300680",
    "end": "3306640"
  },
  {
    "text": "much into the mpm scripts of react that react creates so let's hope that if this",
    "start": "3306640",
    "end": "3315599"
  },
  {
    "text": "doesn't work we can move on to refreshing it a bit deeper luckily it",
    "start": "3315599",
    "end": "3322000"
  },
  {
    "text": "worked so really this is the correct solution to this problem just downgrade",
    "start": "3322000",
    "end": "3328359"
  },
  {
    "text": "your react scripts if you see that ugly message and it will work I don't I hope",
    "start": "3328359",
    "end": "3337440"
  },
  {
    "text": "uh someone that understands more JavaScript than I do fix this soon but",
    "start": "3337440",
    "end": "3344240"
  },
  {
    "text": "till then the the fix is on our public",
    "start": "3344240",
    "end": "3349680"
  },
  {
    "text": "guest okay and when we click here here we have",
    "start": "3349680",
    "end": "3357480"
  },
  {
    "text": "our our react event running perfectly",
    "start": "3357480",
    "end": "3365039"
  },
  {
    "text": "so we import our data and let's move on to the to the",
    "start": "3366799",
    "end": "3375200"
  },
  {
    "text": "documented code so first thing we need the user pull data and then the user",
    "start": "3375200",
    "end": "3382680"
  },
  {
    "text": "pull list so in that code in our do do",
    "start": "3382680",
    "end": "3388000"
  },
  {
    "text": "register method we have the pool data and client ID and those",
    "start": "3388000",
    "end": "3396240"
  },
  {
    "text": "are in that AWS stuff document so the pool ID should be this",
    "start": "3396240",
    "end": "3405160"
  },
  {
    "text": "one and the",
    "start": "3410599",
    "end": "3415760"
  },
  {
    "text": "app client ID should it be this one all",
    "start": "3416559",
    "end": "3424599"
  },
  {
    "text": "right and as we import Cognito user pool directly here we don't need this fully",
    "start": "3424599",
    "end": "3431480"
  },
  {
    "text": "qualified name and so this should be all right and in the end we can console do",
    "start": "3431480",
    "end": "3441280"
  },
  {
    "text": "thebug this user pool just to see what",
    "start": "3441280",
    "end": "3446400"
  },
  {
    "text": "we are getting and oops I'm",
    "start": "3446400",
    "end": "3453520"
  },
  {
    "text": "still fighting that keyboard that new keyboard and now let's check if",
    "start": "3453520",
    "end": "3460240"
  },
  {
    "text": "everything still works and I know it might be tedious uh to watch me code I",
    "start": "3460240",
    "end": "3466079"
  },
  {
    "text": "promise I'll code faster in the next episodes I just want to make sure that",
    "start": "3466079",
    "end": "3471480"
  },
  {
    "text": "we go step by step and everything makes sense uh from from the start or else we",
    "start": "3471480",
    "end": "3478559"
  },
  {
    "text": "don't know where we can debug and yay we have the we have the object that we",
    "start": "3478559",
    "end": "3485240"
  },
  {
    "text": "expected it it has our correct user pull and client ID so everything looks good",
    "start": "3485240",
    "end": "3492640"
  },
  {
    "text": "we are ready to move forward so next we should set the attribute list and have",
    "start": "3492640",
    "end": "3500240"
  },
  {
    "text": "all the all this attributes set up and before we create the the actual ual user",
    "start": "3500240",
    "end": "3508559"
  },
  {
    "text": "so uh what what attributes did we have we have phone number email and password",
    "start": "3508559",
    "end": "3516880"
  },
  {
    "text": "right so let's create three three Fields uh text Fields so we",
    "start": "3516880",
    "end": "3524599"
  },
  {
    "text": "have",
    "start": "3524599",
    "end": "3527079"
  },
  {
    "text": "this I will have to glue here do uh input text",
    "start": "3532000",
    "end": "3538720"
  },
  {
    "text": "placeholder with the username or email",
    "start": "3538720",
    "end": "3544119"
  },
  {
    "text": "address and this on email is going to be this input",
    "start": "3544119",
    "end": "3551680"
  },
  {
    "text": "and so um also we have the",
    "start": "3551680",
    "end": "3559319"
  },
  {
    "text": "username and also so the",
    "start": "3564280",
    "end": "3569400"
  },
  {
    "text": "[Music] password so I think this is the correct",
    "start": "3576770",
    "end": "3583319"
  },
  {
    "text": "I don't know if there's a better way to do this in react again I'm learning react as we go and just to make uh to be",
    "start": "3583319",
    "end": "3591920"
  },
  {
    "text": "completely transparent I'm learning a lot of stuff as I go here with you we're learning this together and I hope you",
    "start": "3591920",
    "end": "3599680"
  },
  {
    "text": "don't mind me making silly reac mistakes and even AWS is a huge realm for us to",
    "start": "3599680",
    "end": "3607720"
  },
  {
    "text": "explore and I hope you enjoy doing this by code and together here on Twitch so",
    "start": "3607720",
    "end": "3614920"
  },
  {
    "text": "here we should have email user password we are forgetting the phone number so",
    "start": "3614920",
    "end": "3622280"
  },
  {
    "text": "right now we also need a phone",
    "start": "3622280",
    "end": "3627960"
  },
  {
    "text": "um yeah looks all right so let's get this this information",
    "start": "3629960",
    "end": "3638400"
  },
  {
    "text": "here so",
    "start": "3638400",
    "end": "3642558"
  },
  {
    "text": "form",
    "start": "3644000",
    "end": "3647000"
  },
  {
    "text": "email we have username we have phone we have",
    "start": "3649319",
    "end": "3659000"
  },
  {
    "text": "password and this equals",
    "start": "3661960",
    "end": "3667079"
  },
  {
    "text": "this. email. value and this is the same here with",
    "start": "3667079",
    "end": "3678240"
  },
  {
    "text": "username the same with with phone I hope I had wbos skills with this editors if",
    "start": "3678240",
    "end": "3685680"
  },
  {
    "text": "you don't don't know West BOS and if you'd like to learn more about react",
    "start": "3685680",
    "end": "3691280"
  },
  {
    "text": "this is what I'm using uh for react JavaScript I've been most of my career a",
    "start": "3691280",
    "end": "3698000"
  },
  {
    "text": "Java guy so you mean I promise you my Eclipse skills are much better than atom",
    "start": "3698000",
    "end": "3705960"
  },
  {
    "text": "but as I said I'm learning this and I'd like to make a huge mention to wbos",
    "start": "3705960",
    "end": "3714000"
  },
  {
    "text": "and at Twitter so this is the guy who's been teaching",
    "start": "3714000",
    "end": "3720279"
  },
  {
    "text": "me everything I know about JavaScript and react it's not a lot currently",
    "start": "3720279",
    "end": "3727559"
  },
  {
    "text": "but uh I really shout out do make sure you check those uh videos and their",
    "start": "3727559",
    "end": "3735039"
  },
  {
    "text": "courses are really really awesome thank you westos you've been a great teacher",
    "start": "3735039",
    "end": "3740160"
  },
  {
    "text": "although we never met uh but he does have a nice slack channel for questions",
    "start": "3740160",
    "end": "3746520"
  },
  {
    "text": "and I really recommend you guys check that out back to code uh let's see if he taught me my",
    "start": "3746520",
    "end": "3753599"
  },
  {
    "text": "react correctly we can now register the",
    "start": "3753599",
    "end": "3758880"
  },
  {
    "text": "user and we can even let's start to be fancy and using some template strings",
    "start": "3758880",
    "end": "3766160"
  },
  {
    "text": "from yes6 and the user",
    "start": "3766160",
    "end": "3771480"
  },
  {
    "text": "is username and",
    "start": "3771480",
    "end": "3776559"
  },
  {
    "text": "and let's go with the phone",
    "start": "3776559",
    "end": "3784240"
  },
  {
    "text": "number and email just to check if this is all",
    "start": "3784240",
    "end": "3796038"
  },
  {
    "text": "right and again Refresh on Chrome",
    "start": "3796200",
    "end": "3805160"
  },
  {
    "text": "and we have here our so my email",
    "start": "3806000",
    "end": "3814440"
  },
  {
    "text": "maybe firman at or firman or J",
    "start": "3814440",
    "end": "3821240"
  },
  {
    "text": "firman at amazon.com for example let's say my username is Julio my",
    "start": "3821240",
    "end": "3829079"
  },
  {
    "text": "phone is I think I have it here this is",
    "start": "3829079",
    "end": "3837039"
  },
  {
    "text": "it and I will set just uh random as a password let's see",
    "start": "3837039",
    "end": "3845359"
  },
  {
    "text": "it's anything at all",
    "start": "3845359",
    "end": "3852079"
  },
  {
    "text": "right so user Julio uh with this phone and email",
    "start": "3852079",
    "end": "3860880"
  },
  {
    "text": "things are looking good so I got the email username phone and password values",
    "start": "3860880",
    "end": "3867160"
  },
  {
    "text": "just right email username phone and password so ready to move on with user",
    "start": "3867160",
    "end": "3873559"
  },
  {
    "text": "registration so oh uh thank you AC sorry AC I don't I'm not trying to",
    "start": "3873559",
    "end": "3883000"
  },
  {
    "text": "read usernames but yeah password Fields can be input type",
    "start": "3883000",
    "end": "3889720"
  },
  {
    "text": "password and any react and here uh you can use material you",
    "start": "3889720",
    "end": "3896160"
  },
  {
    "text": "you can use any set of react components that are much better than one I can do",
    "start": "3896160",
    "end": "3901680"
  },
  {
    "text": "here and I did not cover Lambda out with Cognito yet we're going to make this",
    "start": "3901680",
    "end": "3910440"
  },
  {
    "text": "authenticated request right after we register the user because without a",
    "start": "3910440",
    "end": "3915880"
  },
  {
    "text": "registered user there's nothing not much we can do so we are registering the user",
    "start": "3915880",
    "end": "3921799"
  },
  {
    "text": "first my dear b g day TF 83 and then we are going to make the the Cognito part",
    "start": "3921799",
    "end": "3930079"
  },
  {
    "text": "so stay tuned we're getting there so now the next step uh IS F this attribute",
    "start": "3930079",
    "end": "3938119"
  },
  {
    "text": "list where we need the data the email and the phone pushed so",
    "start": "3938119",
    "end": "3944640"
  },
  {
    "text": "here is how we're going to do that so the value of the field email is",
    "start": "3944640",
    "end": "3952359"
  },
  {
    "text": "the email that we just created the phone number is this phone",
    "start": "3952359",
    "end": "3958760"
  },
  {
    "text": "number and this phone and the attributes we can just again just import",
    "start": "3958760",
    "end": "3967680"
  },
  {
    "text": "Cognito user attribute and I think we should be fine",
    "start": "3967680",
    "end": "3973720"
  },
  {
    "text": "just let's just make sure that it is here it is imported",
    "start": "3973720",
    "end": "3978760"
  },
  {
    "text": "perfectly and we pushed those attributes to the user object and now we can make",
    "start": "3978760",
    "end": "3985200"
  },
  {
    "text": "final the user pull invocation so this is how we we add and if there is an",
    "start": "3985200",
    "end": "3996960"
  },
  {
    "text": "error we are going to console. error and return or",
    "start": "3996960",
    "end": "4004920"
  },
  {
    "text": "else uh let's write this okay I get",
    "start": "4004920",
    "end": "4010039"
  },
  {
    "text": "the this is just a matter of coding style don't know which you guys prefer",
    "start": "4010039",
    "end": "4017200"
  },
  {
    "text": "but uh here's a very simple call back so if there is uh again here we",
    "start": "4017200",
    "end": "4026160"
  },
  {
    "text": "need the username right as a variable and the",
    "start": "4026160",
    "end": "4032079"
  },
  {
    "text": "password to register",
    "start": "4032079",
    "end": "4037200"
  },
  {
    "text": "and this looks all right so user",
    "start": "4037200",
    "end": "4042880"
  },
  {
    "text": "registered as so the result. user and well let's look",
    "start": "4043200",
    "end": "4053640"
  },
  {
    "text": "just like it let's go to Chrome and refresh",
    "start": "4053640",
    "end": "4065400"
  },
  {
    "text": "Cognito user user is defined but never use it Cognito user so",
    "start": "4065400",
    "end": "4073799"
  },
  {
    "text": "this is where I made my mistake",
    "start": "4073799",
    "end": "4078960"
  },
  {
    "text": "uh it's it should be VAR Cognito",
    "start": "4078960",
    "end": "4084200"
  },
  {
    "text": "user yep and Cognito user is defined but",
    "start": "4087400",
    "end": "4092880"
  },
  {
    "text": "never use it online",
    "start": "4092880",
    "end": "4096520"
  },
  {
    "text": "49 isn't isn't that it online four oh yeah I'm not using this import",
    "start": "4099560",
    "end": "4107359"
  },
  {
    "text": "yet okay so now if we go there again",
    "start": "4107359",
    "end": "4114960"
  },
  {
    "text": "and yeah on on the on the app and we need let's register a user we",
    "start": "4114960",
    "end": "4125400"
  },
  {
    "text": "need an email so I we will create a new Gua",
    "start": "4125400",
    "end": "4131798"
  },
  {
    "text": "email so let me create uh um a random a",
    "start": "4131799",
    "end": "4137278"
  },
  {
    "text": "random twitch one uh user at twitch one at sharks and",
    "start": "4137279",
    "end": "4144238"
  },
  {
    "text": "lasers.com and this is the the same thing I can",
    "start": "4144239",
    "end": "4149960"
  },
  {
    "text": "just copy this to the clipboard and fire an email to that",
    "start": "4149960",
    "end": "4156318"
  },
  {
    "text": "address and it's going to be twitch one and the phone it's plus 55 and my",
    "start": "4156319",
    "end": "4165560"
  },
  {
    "text": "phone number that's just not use my real phone number for now but well anything",
    "start": "4165560",
    "end": "4171960"
  },
  {
    "text": "at all this I have as to fill it right away and",
    "start": "4171960",
    "end": "4179880"
  },
  {
    "text": "the password I will use twitch one two times and let's let's just call it",
    "start": "4179880",
    "end": "4185719"
  },
  {
    "text": "twitch one with um uppercase so it validates against the",
    "start": "4185719",
    "end": "4192359"
  },
  {
    "text": "password rules we've set and oh oops what was in the console so I",
    "start": "4192359",
    "end": "4199760"
  },
  {
    "text": "have a bad request unable to verify hash secret hash for",
    "start": "4199760",
    "end": "4206560"
  },
  {
    "text": "client huh so there is something something wrong that's that's double",
    "start": "4206560",
    "end": "4213480"
  },
  {
    "text": "check",
    "start": "4214159",
    "end": "4217159"
  },
  {
    "text": "so register the user with that phone attribute list",
    "start": "4219960",
    "end": "4226560"
  },
  {
    "text": "and H unable to verify secret hash for",
    "start": "4226560",
    "end": "4234719"
  },
  {
    "text": "client oh this is probably our client ID that may be wrong so that 1 a",
    "start": "4234719",
    "end": "4242520"
  },
  {
    "text": "and so let's double check this and it may be really the case",
    "start": "4242520",
    "end": "4248400"
  },
  {
    "text": "as [Music] uh VG Master 21 was cleverly warning us",
    "start": "4248400",
    "end": "4255520"
  },
  {
    "text": "about that this may not work with our client hat so let's change this in our",
    "start": "4255520",
    "end": "4262040"
  },
  {
    "text": "Cognito configuration because we can't have on a user pool if we have this app",
    "start": "4262040",
    "end": "4272239"
  },
  {
    "text": "and with the app client secret this won't work because we would need to pass",
    "start": "4272239",
    "end": "4277640"
  },
  {
    "text": "this and let's just save this app changes and create a",
    "start": "4277640",
    "end": "4284880"
  },
  {
    "text": "new one so I will delete this app add another one",
    "start": "4284880",
    "end": "4293880"
  },
  {
    "text": "breakless app two and just not generate",
    "start": "4294880",
    "end": "4300000"
  },
  {
    "text": "the client secret and create this app and now the correct ID is this",
    "start": "4300000",
    "end": "4309760"
  },
  {
    "text": "one and on the appjs we put the correct",
    "start": "4309760",
    "end": "4315800"
  },
  {
    "text": "app client ID and this should bypass this",
    "start": "4315800",
    "end": "4321800"
  },
  {
    "text": "problem so now on the on the twitch on the react app oops again let's get that",
    "start": "4321800",
    "end": "4330560"
  },
  {
    "text": "email copyed it's twitch",
    "start": "4330560",
    "end": "4338440"
  },
  {
    "text": "one with some number and T",
    "start": "4338440",
    "end": "4343600"
  },
  {
    "text": "one invalid phone number format so this would need to be plus 55",
    "start": "4343719",
    "end": "4350880"
  },
  {
    "text": "like this and invalid mail address",
    "start": "4350880",
    "end": "4356320"
  },
  {
    "text": "format which one was the email oh I guess it's is it the first",
    "start": "4356320",
    "end": "4363560"
  },
  {
    "text": "one yeah the first one is email and it wasn't this this is the this is the key",
    "start": "4363560",
    "end": "4371520"
  },
  {
    "text": "so copy to clipboard and now this is the correct",
    "start": "4371520",
    "end": "4377000"
  },
  {
    "text": "email and register and voila user registered as Twi one if we go",
    "start": "4377000",
    "end": "4385600"
  },
  {
    "text": "to our a our user pool we can see that in the breakless US",
    "start": "4385600",
    "end": "4394400"
  },
  {
    "text": "Pool on users and groups we have the twitch one username created but not",
    "start": "4394400",
    "end": "4401120"
  },
  {
    "text": "enabled or not not confirmed so we need to enable that so here on the AWS",
    "start": "4401120",
    "end": "4409800"
  },
  {
    "text": "Management console oh the on",
    "start": "4409800",
    "end": "4416079"
  },
  {
    "text": "our user flows the second flow that we need is the the authentication flow the",
    "start": "4417239",
    "end": "4425400"
  },
  {
    "text": "confirmation flow because now as we specified in the user pull we're going to get a request and the where is that",
    "start": "4425400",
    "end": "4434320"
  },
  {
    "text": "code if should have been sent by email and here in gorilla mail here gorilla",
    "start": "4434320",
    "end": "4441000"
  },
  {
    "text": "mayil here is our verification code at 33 we now just have to implement the",
    "start": "4441000",
    "end": "4447560"
  },
  {
    "text": "feature to verify the code we could do this in several ways let's just do with",
    "start": "4447560",
    "end": "4453480"
  },
  {
    "text": "the same same way we've been doing so far with inputs and buttons I'm not",
    "start": "4453480",
    "end": "4459840"
  },
  {
    "text": "going to be diving too much into proper uh react we can as I wouldn't be even be",
    "start": "4459840",
    "end": "4466800"
  },
  {
    "text": "able to do this and I'm just going to uh break the lines and add new component",
    "start": "4466800",
    "end": "4474199"
  },
  {
    "text": "I'm not the most enthusiastic web artist I hope that I you guys can get better",
    "start": "4474199",
    "end": "4480880"
  },
  {
    "text": "visuals for this and but all the all the API and um the heart and the coding",
    "start": "4480880",
    "end": "4489840"
  },
  {
    "text": "behind the scenes everything that's not web design we we are going to feature here all",
    "start": "4489840",
    "end": "4496360"
  },
  {
    "text": "right and I'm I'm trying I will learn as much react as possible and perhaps if",
    "start": "4496360",
    "end": "4503000"
  },
  {
    "text": "one of you guys know your react you can uh get get us here",
    "start": "4503000",
    "end": "4509760"
  },
  {
    "text": "yeah and thanks a lot venge Master 21 I would debug that forever as well I and",
    "start": "4509760",
    "end": "4516679"
  },
  {
    "text": "I'm pretty sure there must be a way to pass that that credential safely",
    "start": "4516679",
    "end": "4522120"
  },
  {
    "text": "somewhere but let's not just dig into that that right now okay and now for the",
    "start": "4522120",
    "end": "4529360"
  },
  {
    "text": "confirmation flow we can just add another input for the",
    "start": "4529360",
    "end": "4536440"
  },
  {
    "text": "confirmation",
    "start": "4536440",
    "end": "4539198"
  },
  {
    "text": "code and get it on the code and another button oops this button goes here and",
    "start": "4542159",
    "end": "4551280"
  },
  {
    "text": "there the nlets and a confirm button and this will do",
    "start": "4551280",
    "end": "4559520"
  },
  {
    "text": "confirm and",
    "start": "4559920",
    "end": "4563520"
  },
  {
    "text": "confirm I'm not typing anymore The Last Broadcast we had severe problems for",
    "start": "4575679",
    "end": "4581560"
  },
  {
    "text": "typing things let's not let's learn this lesson and never type anything at all again and um now for the do confirm we",
    "start": "4581560",
    "end": "4591560"
  },
  {
    "text": "need that code in the second in the second flow so here is it",
    "start": "4591560",
    "end": "4600400"
  },
  {
    "text": "and oops so on the pool data we should have",
    "start": "4600400",
    "end": "4607199"
  },
  {
    "text": "the very same object so I will just extract this to a separate part and I",
    "start": "4607199",
    "end": "4615880"
  },
  {
    "text": "hope I can do this I'm not sure um and keep it keep it separate right or is",
    "start": "4615880",
    "end": "4624520"
  },
  {
    "text": "this something that is not the right syntax H uh let's see how how it",
    "start": "4624520",
    "end": "4631760"
  },
  {
    "text": "goes um he6 classes well let's",
    "start": "4631760",
    "end": "4637719"
  },
  {
    "text": "see so this should handle that let's see if it still works and the con the",
    "start": "4637719",
    "end": "4645440"
  },
  {
    "text": "browser so this is not how you do this he has six classes and properties I",
    "start": "4645440",
    "end": "4653360"
  },
  {
    "text": "guess I don't know how to declare this um oh and uh perhaps even before as",
    "start": "4653360",
    "end": "4660000"
  },
  {
    "text": "this is completely static I can get it even um out of the class something like",
    "start": "4660000",
    "end": "4667199"
  },
  {
    "text": "this or perhaps in the properties of the class let's see which one",
    "start": "4667199",
    "end": "4673520"
  },
  {
    "text": "is uh less ugly",
    "start": "4673520",
    "end": "4680199"
  },
  {
    "text": "so what is it complaining about oh again this is not let's do this Step by by",
    "start": "4682679",
    "end": "4691120"
  },
  {
    "text": "step so let's comment this for a while",
    "start": "4691120",
    "end": "4696159"
  },
  {
    "text": "and okay pull data is not defined so this would go our pool data",
    "start": "4696159",
    "end": "4705560"
  },
  {
    "text": "yay all right so",
    "start": "4706239",
    "end": "4713080"
  },
  {
    "text": "and our email our P data is there so we",
    "start": "4713080",
    "end": "4721040"
  },
  {
    "text": "next we can proceed going with this code",
    "start": "4721040",
    "end": "4726600"
  },
  {
    "text": "okay so the user pool is again the Cognito user pool for for this the",
    "start": "4726600",
    "end": "4733719"
  },
  {
    "text": "username is this do username do",
    "start": "4733719",
    "end": "4740239"
  },
  {
    "text": "value and the Cognito user",
    "start": "4740880",
    "end": "4746960"
  },
  {
    "text": "and here we have that user and the finally the confirm registration method",
    "start": "4747719",
    "end": "4754960"
  },
  {
    "text": "and with the code so this",
    "start": "4754960",
    "end": "4759560"
  },
  {
    "text": "dot code. value and the the the result right so this",
    "start": "4762000",
    "end": "4772840"
  },
  {
    "text": "should this should",
    "start": "4772840",
    "end": "4776280"
  },
  {
    "text": "confirm and this one no semicolon",
    "start": "4780360",
    "end": "4788080"
  },
  {
    "text": "here and um right now if we get that",
    "start": "4788080",
    "end": "4795600"
  },
  {
    "text": "email and the username was twitch it's",
    "start": "4797239",
    "end": "4802880"
  },
  {
    "text": "by username right yeah sorry it's by username so username is Twitch one and",
    "start": "4802880",
    "end": "4808840"
  },
  {
    "text": "the code is 39",
    "start": "4808840",
    "end": "4813678"
  },
  {
    "text": "468 H cannot read property of undefined so this Cognito user is",
    "start": "4816639",
    "end": "4826638"
  },
  {
    "text": "find H",
    "start": "4827000",
    "end": "4831639"
  },
  {
    "text": "so",
    "start": "4832159",
    "end": "4835159"
  },
  {
    "text": "let's comment this and just understand what's going on goingo user",
    "start": "4839800",
    "end": "4847480"
  },
  {
    "text": "pool why it's S I will just uh",
    "start": "4848719",
    "end": "4856639"
  },
  {
    "text": "add it to Twitch one and the",
    "start": "4856960",
    "end": "4863560"
  },
  {
    "text": "code cannot read property make authentication request of",
    "start": "4863560",
    "end": "4870280"
  },
  {
    "text": "undefined where is that",
    "start": "4872400",
    "end": "4877280"
  },
  {
    "text": "make make unauthenticated request from under",
    "start": "4883320",
    "end": "4889719"
  },
  {
    "text": "f h let's see what is this going on let's see",
    "start": "4889719",
    "end": "4896199"
  },
  {
    "text": "username oh oh yes of course this is user pool",
    "start": "4896199",
    "end": "4903199"
  },
  {
    "text": "yeah this is completely wrong thank you news mind that's that's it really and",
    "start": "4903199",
    "end": "4913320"
  },
  {
    "text": "uh the user pool needs to be the the user pool right of",
    "start": "4913320",
    "end": "4920960"
  },
  {
    "text": "course this is the",
    "start": "4920960",
    "end": "4925639"
  },
  {
    "text": "username thank thankfully you are paying attention yay this should be right",
    "start": "4926080",
    "end": "4934760"
  },
  {
    "text": "now and on refresh we you get that twitch",
    "start": "4936000",
    "end": "4943880"
  },
  {
    "text": "one user with that verification",
    "start": "4943880",
    "end": "4950760"
  },
  {
    "text": "code we should success",
    "start": "4950760",
    "end": "4956679"
  },
  {
    "text": "yay thanks a lot news mind one save the save the day this is now our user and if",
    "start": "4956679",
    "end": "4965280"
  },
  {
    "text": "we take a look at",
    "start": "4965280",
    "end": "4970679"
  },
  {
    "text": "uh Cognito we should see that it is now",
    "start": "4970679",
    "end": "4975719"
  },
  {
    "text": "confirmed so we can uh use it to log in",
    "start": "4975719",
    "end": "4980760"
  },
  {
    "text": "so the following user the following code that we should",
    "start": "4980760",
    "end": "4985880"
  },
  {
    "text": "investigate is oh here is the case that if you would like to resend and I will",
    "start": "4985880",
    "end": "4992880"
  },
  {
    "text": "leave this button as um exercise for you guys if you'd like to implement that",
    "start": "4992880",
    "end": "4999360"
  },
  {
    "text": "let's move on to authenticating an user and establishing a user session with the",
    "start": "4999360",
    "end": "5005440"
  },
  {
    "text": "Cognito identity service so here is the code for",
    "start": "5005440",
    "end": "5011800"
  },
  {
    "text": "that and we are now going to do",
    "start": "5013440",
    "end": "5021360"
  },
  {
    "text": "login so our do login",
    "start": "5022239",
    "end": "5029239"
  },
  {
    "text": "method will be exactly that and let's add a button besides",
    "start": "5030440",
    "end": "5038320"
  },
  {
    "text": "register just to login",
    "start": "5038320",
    "end": "5044920"
  },
  {
    "text": "and username is this",
    "start": "5046320",
    "end": "5051360"
  },
  {
    "text": "username value password is this password",
    "start": "5051360",
    "end": "5059760"
  },
  {
    "text": "value and user",
    "start": "5061560",
    "end": "5066639"
  },
  {
    "text": "is authentication details for the user is this imported not yet that's probably",
    "start": "5066639",
    "end": "5073880"
  },
  {
    "text": "going to complain right and Cognito user",
    "start": "5073880",
    "end": "5080679"
  },
  {
    "text": "pool and the same for this Cognito user and here",
    "start": "5080679",
    "end": "5088360"
  },
  {
    "text": "we again the the username oops",
    "start": "5088360",
    "end": "5095920"
  },
  {
    "text": "bu data is already defined so we don't need this",
    "start": "5096199",
    "end": "5102400"
  },
  {
    "text": "and again this is the username for this",
    "start": "5102400",
    "end": "5108600"
  },
  {
    "text": "guy I think this is it and if we do it correctly we get an",
    "start": "5108600",
    "end": "5116400"
  },
  {
    "text": "access token and we can talk about this part",
    "start": "5116400",
    "end": "5122639"
  },
  {
    "text": "later so we'll either get an error or a",
    "start": "5123320",
    "end": "5128440"
  },
  {
    "text": "failure console. error this error and all right it seems that we are",
    "start": "5128440",
    "end": "5137080"
  },
  {
    "text": "good to",
    "start": "5137080",
    "end": "5139440"
  },
  {
    "text": "go okay so here let's refresh this",
    "start": "5146280",
    "end": "5155080"
  },
  {
    "text": "uh there is an eror here this is where the colum should be",
    "start": "5155080",
    "end": "5163400"
  },
  {
    "text": "and authentication details is not defined we import that as",
    "start": "5164119",
    "end": "5169750"
  },
  {
    "text": "[Music] well and good to go so now we already",
    "start": "5169750",
    "end": "5177639"
  },
  {
    "text": "have that username twitch one the password is two times that it's",
    "start": "5177639",
    "end": "5184480"
  },
  {
    "text": "confirmed so we should be able to log in huh oh I boun the the method incorrectly",
    "start": "5184480",
    "end": "5192679"
  },
  {
    "text": "right this is do register it's do loging so right now if I twitch one",
    "start": "5192679",
    "end": "5201280"
  },
  {
    "text": "password twitch one twitch One login and yay we have an access token and if",
    "start": "5201280",
    "end": "5211360"
  },
  {
    "text": "we if you see this this is one of of the tokens that we have and right now we",
    "start": "5211360",
    "end": "5217800"
  },
  {
    "text": "have a lot of information going on here let's dig a bit into this token and see",
    "start": "5217800",
    "end": "5225000"
  },
  {
    "text": "what it provides so here we have this result",
    "start": "5225000",
    "end": "5231000"
  },
  {
    "text": "object from our authenticated user and let's console. log this one this guy and",
    "start": "5231000",
    "end": "5240480"
  },
  {
    "text": "see what it what it is and what what does it have",
    "start": "5240480",
    "end": "5246760"
  },
  {
    "text": "inside so again to which one I",
    "start": "5247119",
    "end": "5255000"
  },
  {
    "text": "should have that to memory and when we log in we have this",
    "start": "5255000",
    "end": "5262119"
  },
  {
    "text": "we have this three tokens this is what uh the result of authentication looks",
    "start": "5262119",
    "end": "5270360"
  },
  {
    "text": "like so these tokens have distinct purposes and it's important that you",
    "start": "5270360",
    "end": "5277000"
  },
  {
    "text": "understand them so there is a nice documentation page about that that I'm",
    "start": "5277000",
    "end": "5282520"
  },
  {
    "text": "going to add to our to our buffer and so you have you guys have it",
    "start": "5282520",
    "end": "5290560"
  },
  {
    "text": "easy so where let me just find this",
    "start": "5290560",
    "end": "5299920"
  },
  {
    "text": "it's h",
    "start": "5300360",
    "end": "5304360"
  },
  {
    "text": "a tokens we find this easy as it's visited",
    "start": "5307600",
    "end": "5315000"
  },
  {
    "text": "and here it is using tokens with user pools so if you ever uh forget what",
    "start": "5315000",
    "end": "5322760"
  },
  {
    "text": "those tokens are all about let me just make sure that they are on our guest our",
    "start": "5322760",
    "end": "5329920"
  },
  {
    "text": "shared guest okay and it's here on our",
    "start": "5329920",
    "end": "5335560"
  },
  {
    "text": "Ry and I'll add the link and we can update it then I add",
    "start": "5335560",
    "end": "5343080"
  },
  {
    "text": "then I will add a better description so here is the thing this",
    "start": "5343080",
    "end": "5348679"
  },
  {
    "text": "all all those tokens are in this JWT encoding this is a Json web token it's a",
    "start": "5348679",
    "end": "5356000"
  },
  {
    "text": "standard encoding for security tokens and you have three of those you have the",
    "start": "5356000",
    "end": "5362719"
  },
  {
    "text": "identity token and this is just um a representation of",
    "start": "5362719",
    "end": "5368239"
  },
  {
    "text": "your identity and it contain claims about uh you so it will contain data",
    "start": "5368239",
    "end": "5375159"
  },
  {
    "text": "such as name phone number everything that was passed this is your identity",
    "start": "5375159",
    "end": "5381360"
  },
  {
    "text": "and this this token expire after 1 hour",
    "start": "5381360",
    "end": "5387000"
  },
  {
    "text": "so you should uh you should not ship this token and there are many ways to",
    "start": "5387000",
    "end": "5393320"
  },
  {
    "text": "care for token expiration but you must be aware that these tokens are temporary",
    "start": "5393320",
    "end": "5399960"
  },
  {
    "text": "credentials but the identity token should not be used um it's just",
    "start": "5399960",
    "end": "5405960"
  },
  {
    "text": "um uh it contains more data the access token it's also",
    "start": "5405960",
    "end": "5412520"
  },
  {
    "text": "uh an exact a very similar token but it does not include your user information",
    "start": "5412520",
    "end": "5420040"
  },
  {
    "text": "so you can use this token to access uh AWS services",
    "start": "5420040",
    "end": "5427400"
  },
  {
    "text": "so and it will have uh one hour also of",
    "start": "5427400",
    "end": "5433880"
  },
  {
    "text": "expiration and it should not be processed after expired but from this",
    "start": "5433880",
    "end": "5439239"
  },
  {
    "text": "token you can retrieve some some basic information about the user identity but",
    "start": "5439239",
    "end": "5445440"
  },
  {
    "text": "not the user details and the refresh token is us it to create to get new",
    "start": "5445440",
    "end": "5452679"
  },
  {
    "text": "access or ID tokens after those expired so while you keep the refresh token you",
    "start": "5452679",
    "end": "5459400"
  },
  {
    "text": "can get uh tokens again and again so um",
    "start": "5459400",
    "end": "5464800"
  },
  {
    "text": "this is how the whole thing works and this to this tokens have a specific ID",
    "start": "5464800",
    "end": "5471639"
  },
  {
    "text": "so there are libraries you can use to decode this and there is a a standard",
    "start": "5471639",
    "end": "5476960"
  },
  {
    "text": "specification for those and here's how they look like in the in the",
    "start": "5476960",
    "end": "5482920"
  },
  {
    "text": "presentation I was referencing you guys it has the fields headers and body and",
    "start": "5482920",
    "end": "5489920"
  },
  {
    "text": "signature separated by header payload and signature separated by dots and the",
    "start": "5489920",
    "end": "5496360"
  },
  {
    "text": "header will contain the algorithm and the ID of the token and then payload",
    "start": "5496360",
    "end": "5502880"
  },
  {
    "text": "will have the decoded details and the signature will be just the the the",
    "start": "5502880",
    "end": "5509400"
  },
  {
    "text": "digital signat so you can verify the the token and and here is their instructions",
    "start": "5509400",
    "end": "5516719"
  },
  {
    "text": "if you'd like to decode and understand better this what this is on the on the",
    "start": "5516719",
    "end": "5523760"
  },
  {
    "text": "server side and we are going to do that a bit afterwards but we have it here",
    "start": "5523760",
    "end": "5530159"
  },
  {
    "text": "do on this line a successful token and more than that we can use this token to",
    "start": "5530159",
    "end": "5538840"
  },
  {
    "text": "create and use AWS services but before that let's",
    "start": "5538840",
    "end": "5544440"
  },
  {
    "text": "uh we don't want to uh authenticate our user again and",
    "start": "5544440",
    "end": "5550560"
  },
  {
    "text": "again every time so we should Implement at least one order flow before we can",
    "start": "5550560",
    "end": "5558400"
  },
  {
    "text": "move on uh with this and this is",
    "start": "5558400",
    "end": "5563840"
  },
  {
    "text": "the authenticate user restore credentials flow so next here we could",
    "start": "5567119",
    "end": "5573920"
  },
  {
    "text": "retrieve attributes for the user so once authenticated if you'd like to get the",
    "start": "5573920",
    "end": "5579280"
  },
  {
    "text": "name or the value of the phone number and all those attributes you can retrieve it like this uh this is",
    "start": "5579280",
    "end": "5586679"
  },
  {
    "text": "important on your profile editing page and things like this the user attribute",
    "start": "5586679",
    "end": "5593560"
  },
  {
    "text": "for the authenticated user can be verified and you can delete attributes",
    "start": "5593560",
    "end": "5600000"
  },
  {
    "text": "or update attributes so this is like um it is kind of up to you what you want to",
    "start": "5600000",
    "end": "5607960"
  },
  {
    "text": "keep in your database what to keep in cognito what to keep in both but please",
    "start": "5607960",
    "end": "5614239"
  },
  {
    "text": "mind that this is the code to addit those users to enable MFA and disable",
    "start": "5614239",
    "end": "5620400"
  },
  {
    "text": "MFA we're not using mfas today uh changing the password you also want we",
    "start": "5620400",
    "end": "5626679"
  },
  {
    "text": "can keep adding fields and buttons for that but I believe you got them the idea",
    "start": "5626679",
    "end": "5632679"
  },
  {
    "text": "of how cognito works and how to integrate it with your app so we can go",
    "start": "5632679",
    "end": "5637920"
  },
  {
    "text": "to the more interesting apps forgot password delete user this would be the",
    "start": "5637920",
    "end": "5644600"
  },
  {
    "text": "same way uh one very important is sign out so if sign out you can sign out of",
    "start": "5644600",
    "end": "5651639"
  },
  {
    "text": "your application and log in again or with global sound sign out it do will",
    "start": "5651639",
    "end": "5658000"
  },
  {
    "text": "invalidate all tokens on all all devices and you're going to be signed out uh of",
    "start": "5658000",
    "end": "5665800"
  },
  {
    "text": "everything and finally the use case of retrieving data from local storage so",
    "start": "5665800",
    "end": "5672440"
  },
  {
    "text": "this is probably the most important one and this is the one that will say if the",
    "start": "5672440",
    "end": "5680440"
  },
  {
    "text": "user is logged in or not so this is something that we probably",
    "start": "5680440",
    "end": "5686600"
  },
  {
    "text": "want to do on on load so uh",
    "start": "5686600",
    "end": "5692639"
  },
  {
    "text": "when our component Mount let's just show",
    "start": "5692639",
    "end": "5698280"
  },
  {
    "text": "username uh or try to find the the username if that's shown I don't know",
    "start": "5698280",
    "end": "5704199"
  },
  {
    "text": "retrieve something from the from the user and say if it's logged in or or not",
    "start": "5704199",
    "end": "5713800"
  },
  {
    "text": "so let's load let's call it load uh",
    "start": "5713800",
    "end": "5721000"
  },
  {
    "text": "authenticated user this will be uh more descriptive I",
    "start": "5721000",
    "end": "5726880"
  },
  {
    "text": "guess",
    "start": "5726880",
    "end": "5729880"
  },
  {
    "text": "and load descriptive user is like",
    "start": "5732360",
    "end": "5739280"
  },
  {
    "text": "this",
    "start": "5739840",
    "end": "5742840"
  },
  {
    "text": "um let's see who is logged in",
    "start": "5747119",
    "end": "5752760"
  },
  {
    "text": "just make sure this is working fine",
    "start": "5755719",
    "end": "5760320"
  },
  {
    "text": "and what did I did I do wrong here this",
    "start": "5762000",
    "end": "5767280"
  },
  {
    "text": "should be a method like anyone else oh I know this should be this dot okay all",
    "start": "5767280",
    "end": "5774880"
  },
  {
    "text": "right so we're loading the the authenticated user and the code for that",
    "start": "5774880",
    "end": "5781040"
  },
  {
    "text": "is right here",
    "start": "5781040",
    "end": "5784760"
  },
  {
    "text": "I will beautify this be this editor so",
    "start": "5787920",
    "end": "5793440"
  },
  {
    "text": "that pasting looks fine the user pull looks good we have",
    "start": "5793440",
    "end": "5800199"
  },
  {
    "text": "this pool data defined the user pull is instantiated the Cognito user is",
    "start": "5800199",
    "end": "5810239"
  },
  {
    "text": "retrieved and if it's not no we are going going to get a session for it and",
    "start": "5810239",
    "end": "5816159"
  },
  {
    "text": "see if it's valid and I don't want to get user attributes now we're just want",
    "start": "5816159",
    "end": "5822880"
  },
  {
    "text": "to we're just wanting to see this that the session is valid and we are going to",
    "start": "5822880",
    "end": "5830400"
  },
  {
    "text": "comment this uh this part for a while and just check if we have a valid user",
    "start": "5830400",
    "end": "5838080"
  },
  {
    "text": "session and if we do we can move on so",
    "start": "5838080",
    "end": "5844639"
  },
  {
    "text": "yeah we have um a valid session and just",
    "start": "5844639",
    "end": "5850040"
  },
  {
    "text": "let's console dolog this object and see what's in",
    "start": "5850040",
    "end": "5857320"
  },
  {
    "text": "[Music] here all right so we we do have the that",
    "start": "5858050",
    "end": "5866199"
  },
  {
    "text": "session and one thing that we can do is pass this this tokens",
    "start": "5866199",
    "end": "5875239"
  },
  {
    "text": "to pass your ident pass this identity token in the authentication header",
    "start": "5875239",
    "end": "5882159"
  },
  {
    "text": "for for um user",
    "start": "5882159",
    "end": "5888760"
  },
  {
    "text": "authentication but it's not the most uh recommended way to do this so we can um",
    "start": "5888760",
    "end": "5895480"
  },
  {
    "text": "use the get credentials for for for other services like this we can uh we",
    "start": "5895480",
    "end": "5903080"
  },
  {
    "text": "can the idea here what I I mean is if you want you can stop here and already",
    "start": "5903080",
    "end": "5910440"
  },
  {
    "text": "have your users interacting with AWS and executing commands but let's um move on",
    "start": "5910440",
    "end": "5918080"
  },
  {
    "text": "and see a bit more of how Cognito identity credentials can can can work",
    "start": "5918080",
    "end": "5924440"
  },
  {
    "text": "for you guys so here is how you authenticate",
    "start": "5924440",
    "end": "5932000"
  },
  {
    "text": "um authen at this I'm looking for better ways to to describe this and here is the",
    "start": "5932000",
    "end": "5940040"
  },
  {
    "text": "part that we can move on to Cognito or we can there are some options we can",
    "start": "5940040",
    "end": "5947360"
  },
  {
    "text": "create Lambda fun a Lambda function that takes this directly and invocate it from",
    "start": "5947360",
    "end": "5954520"
  },
  {
    "text": "the console there is well lots of um we can ship this",
    "start": "5954520",
    "end": "5961000"
  },
  {
    "text": "tokens directly from API Gateway or we can generate the client and authenticate",
    "start": "5961000",
    "end": "5968560"
  },
  {
    "text": "there's um uh several different ways we can interact with this so let's just",
    "start": "5968560",
    "end": "5975560"
  },
  {
    "text": "pick one of them is through Cognito uh I'll follow the the examples",
    "start": "5975560",
    "end": "5981760"
  },
  {
    "text": "just so you can uh see and understand what Cognito credentials look like and",
    "start": "5981760",
    "end": "5989000"
  },
  {
    "text": "the different ways to set those credentials and we did we've done a lot so far so let me",
    "start": "5989000",
    "end": "5996800"
  },
  {
    "text": "take the time to review what we have done we're nearly in two hours into our",
    "start": "5996800",
    "end": "6002360"
  },
  {
    "text": "broadcast and I'd like to make sure you guys understand uh what's being done so",
    "start": "6002360",
    "end": "6007440"
  },
  {
    "text": "far so if there is any any part of this that you guys didn't get please don't um",
    "start": "6007440",
    "end": "6014560"
  },
  {
    "text": "don't hesitate all right and I thank you very much for standing in so far and",
    "start": "6014560",
    "end": "6020520"
  },
  {
    "text": "helping me coding this you have been more most uh useful I I would debug this this forever",
    "start": "6020520",
    "end": "6030239"
  },
  {
    "text": "so um V Master you you shouldn't store those tokens those um um are already",
    "start": "6030239",
    "end": "6037719"
  },
  {
    "text": "stored for you so VG Master 21 asks what's the secure way to store these",
    "start": "6037719",
    "end": "6042800"
  },
  {
    "text": "tokens and I would suggest that you don't that you use them in memory when",
    "start": "6042800",
    "end": "6048880"
  },
  {
    "text": "you get them and because they are stored um automatically l in local",
    "start": "6048880",
    "end": "6054840"
  },
  {
    "text": "storage and the Cognito SDK SDK is uh",
    "start": "6054840",
    "end": "6060280"
  },
  {
    "text": "does that for you and MCS mic yes I do read the the chat constantly and sometimes I speak uh",
    "start": "6060280",
    "end": "6069360"
  },
  {
    "text": "about the coding before getting to so we can finish one step before fting another",
    "start": "6069360",
    "end": "6075320"
  },
  {
    "text": "but please do uh ask and comment and anything you guys would like we are cing",
    "start": "6075320",
    "end": "6082360"
  },
  {
    "text": "here so uh right now we're the the thing that we did now we just created an user pool a",
    "start": "6082360",
    "end": "6090560"
  },
  {
    "text": "Cognito user pool using the Cognito service and the Cognito user pool will",
    "start": "6090560",
    "end": "6096159"
  },
  {
    "text": "handle password and attributes storage for our users and how they log in and",
    "start": "6096159",
    "end": "6103159"
  },
  {
    "text": "log out from which devices and which apps can access those resources this is",
    "start": "6103159",
    "end": "6109040"
  },
  {
    "text": "Cognito user PS um you you can although you can process that yourself um another",
    "start": "6109040",
    "end": "6117520"
  },
  {
    "text": "way to integrate with further Serv Services of AWS and you probably want",
    "start": "6117520",
    "end": "6125159"
  },
  {
    "text": "that so we need to understand a bit of the other side of Cognito that is",
    "start": "6125159",
    "end": "6130920"
  },
  {
    "text": "Federated Federated identities if all you care is your user apps and you don't",
    "start": "6130920",
    "end": "6138400"
  },
  {
    "text": "want to invoke AWS other AWS services and you don't need credentials at all",
    "start": "6138400",
    "end": "6145800"
  },
  {
    "text": "you can just use the the the user pools but if you want to access S3 from your",
    "start": "6145800",
    "end": "6153000"
  },
  {
    "text": "app or Kinesis or any other AWS servic you need Federated identities and this",
    "start": "6153000",
    "end": "6162679"
  },
  {
    "text": "let me help you guys to create and let's integrate that into our",
    "start": "6162679",
    "end": "6168679"
  },
  {
    "text": "app so I will create a new identity pool and call it breakless",
    "start": "6168679",
    "end": "6177559"
  },
  {
    "text": "IDP and we have to set now if we want",
    "start": "6178199",
    "end": "6183560"
  },
  {
    "text": "unauthenticated identities or not this is the anonymous login are you granting",
    "start": "6183560",
    "end": "6190960"
  },
  {
    "text": "any rights or are you providing credentials to users who do not authenticate and what do you let them do",
    "start": "6190960",
    "end": "6198719"
  },
  {
    "text": "well it is possible and for a lot of apps to allow unauthenticated identities",
    "start": "6198719",
    "end": "6205520"
  },
  {
    "text": "and this is probably for example in a e-commerce site your shopping window",
    "start": "6205520",
    "end": "6211159"
  },
  {
    "text": "with the products that you want so here is the the the IDP oh it can it cannot",
    "start": "6211159",
    "end": "6219280"
  },
  {
    "text": "contain slashes just underscores so let's go with underscore for this one",
    "start": "6219280",
    "end": "6225440"
  },
  {
    "text": "and enable an authenticated identities and here is the authentication provider",
    "start": "6225440",
    "end": "6233199"
  },
  {
    "text": "is that um is are going to be supported and here is the why it's",
    "start": "6233199",
    "end": "6241440"
  },
  {
    "text": "called I uh this weird name of uh Federated identities because you your",
    "start": "6241440",
    "end": "6250040"
  },
  {
    "text": "identity who you are can be defined by several different and autonomous system",
    "start": "6250040",
    "end": "6256599"
  },
  {
    "text": "that Cognito is going to uh manage for you so you can use Cognito ID as we",
    "start": "6256599",
    "end": "6263119"
  },
  {
    "text": "we're going to use today for example this is going to be those settings that",
    "start": "6263119",
    "end": "6269159"
  },
  {
    "text": "we just changed on our AWS pool ID is this one and",
    "start": "6269159",
    "end": "6277679"
  },
  {
    "text": "our app client ID is going to be this one so now we are binding to that",
    "start": "6277679",
    "end": "6283960"
  },
  {
    "text": "authentication provider but we could be using Amazon or face login or Facebook",
    "start": "6283960",
    "end": "6291760"
  },
  {
    "text": "login or Google login or Twitter login or any open ID login for example um uh",
    "start": "6291760",
    "end": "6300320"
  },
  {
    "text": "one that I see some customers using it's out zero.com",
    "start": "6300320",
    "end": "6305760"
  },
  {
    "text": "um if you'd like to integrate with a third party solution such as out zero",
    "start": "6305760",
    "end": "6312040"
  },
  {
    "text": "you probably want to use open ID for corporate directories you might want to",
    "start": "6312040",
    "end": "6317679"
  },
  {
    "text": "SEMO or even your own uh server B back end so let's go",
    "start": "6317679",
    "end": "6324320"
  },
  {
    "text": "with Cognito for now and create this",
    "start": "6324320",
    "end": "6329000"
  },
  {
    "text": "pool so we need to authorize I'm creating this uh this",
    "start": "6331679",
    "end": "6338360"
  },
  {
    "text": "role uh there are two roles that you want to create and this is your",
    "start": "6338360",
    "end": "6345880"
  },
  {
    "text": "authenticated identities and how what are you allowing to them and your",
    "start": "6345880",
    "end": "6353159"
  },
  {
    "text": "authentication identities and let's see this policy documents so here is what",
    "start": "6353159",
    "end": "6359239"
  },
  {
    "text": "you allow each user to do so we are saying here that if your users are not",
    "start": "6359239",
    "end": "6367040"
  },
  {
    "text": "authenticated they will have uh credentials such",
    "start": "6367040",
    "end": "6372159"
  },
  {
    "text": "as uh they will there the credentials that are going to be generated for them",
    "start": "6372159",
    "end": "6377199"
  },
  {
    "text": "will be allowed only put events into Mobile analytics and sync data with with",
    "start": "6377199",
    "end": "6383159"
  },
  {
    "text": "Cognito they won't be able to do um anything else right but we can we can",
    "start": "6383159",
    "end": "6391520"
  },
  {
    "text": "add that and change this to add any kind of resource that we want so we can use",
    "start": "6391520",
    "end": "6399119"
  },
  {
    "text": "the uh you need to understand this IM am syntax but the idea is very simple you",
    "start": "6399119",
    "end": "6405440"
  },
  {
    "text": "allow what some actions to some resources so you could allow it to",
    "start": "6405440",
    "end": "6411159"
  },
  {
    "text": "upload data to an S3 bucket if you allow Anonymous uploads and things like that",
    "start": "6411159",
    "end": "6416719"
  },
  {
    "text": "but uh please be very mindful of what you allow anonimos user to do you",
    "start": "6416719",
    "end": "6422280"
  },
  {
    "text": "probably don't want to allow him very much right and then the breakless the the the",
    "start": "6422280",
    "end": "6432000"
  },
  {
    "text": "authentication Ser once is authenticated uh there is um a lot you",
    "start": "6432000",
    "end": "6438080"
  },
  {
    "text": "can you can allow him to do you can allow him to execute Lambda functions or",
    "start": "6438080",
    "end": "6445040"
  },
  {
    "text": "to add S3 or uh do whatever kind of",
    "start": "6445040",
    "end": "6450400"
  },
  {
    "text": "resources that you allow I will allow the the four roles and just go with this",
    "start": "6450400",
    "end": "6456520"
  },
  {
    "text": "with the very uh s simple ones and then we can change it to something more more",
    "start": "6456520",
    "end": "6462719"
  },
  {
    "text": "interesting right and this is the the idea now that this role",
    "start": "6462719",
    "end": "6469840"
  },
  {
    "text": "is is up we can get the AWS SDK for Android and start",
    "start": "6469840",
    "end": "6478360"
  },
  {
    "text": "using it to to use AWS service",
    "start": "6478360",
    "end": "6484599"
  },
  {
    "text": "so here is the code let's get",
    "start": "6484599",
    "end": "6490360"
  },
  {
    "text": "the the the code for ourselves this is our identity pool",
    "start": "6490360",
    "end": "6496520"
  },
  {
    "text": "ID oh um and I'll get right to that too",
    "start": "6497000",
    "end": "6502880"
  },
  {
    "text": "that question BJ uh in a sec just let me take note of",
    "start": "6502880",
    "end": "6510638"
  },
  {
    "text": "this identi",
    "start": "6512000",
    "end": "6515840"
  },
  {
    "text": "ID so b day tf3 asks how we would allow a",
    "start": "6518679",
    "end": "6527560"
  },
  {
    "text": "user to add S3 items that only him created uh and this is using a policy",
    "start": "6527560",
    "end": "6536040"
  },
  {
    "text": "variables so let me show",
    "start": "6536040",
    "end": "6540480"
  },
  {
    "text": "you I am policy variables So within your I",
    "start": "6544080",
    "end": "6549159"
  },
  {
    "text": "am uh with your IM am policy you",
    "start": "6549159",
    "end": "6555480"
  },
  {
    "text": "can see that the you can add variables such as dollar AWS username",
    "start": "6555480",
    "end": "6563400"
  },
  {
    "text": "and this will be interpreted by the by the policy evalu in the policy",
    "start": "6563400",
    "end": "6568880"
  },
  {
    "text": "evaluation so here in this example the user is allowed the get and put object",
    "start": "6568880",
    "end": "6576400"
  },
  {
    "text": "in the in the bucket named my bucket only in the pref in the prefix of his",
    "start": "6576400",
    "end": "6584520"
  },
  {
    "text": "username all right or him is allowed access in any prefix that starts with",
    "start": "6584520",
    "end": "6593159"
  },
  {
    "text": "with um his his username so this is how",
    "start": "6593159",
    "end": "6598280"
  },
  {
    "text": "you um you can restrict uh access just to your parts of your bucket and the",
    "start": "6598280",
    "end": "6608119"
  },
  {
    "text": "same thing goes for there are other uh policy variables you can see here in",
    "start": "6608119",
    "end": "6613960"
  },
  {
    "text": "this document but username is definitely the same one and the same thing is worth",
    "start": "6613960",
    "end": "6619679"
  },
  {
    "text": "for other AWS resources you can set names naming standards for example and",
    "start": "6619679",
    "end": "6625360"
  },
  {
    "text": "using it on cues or um and there is other information other variables that",
    "start": "6625360",
    "end": "6631840"
  },
  {
    "text": "you can set for example uh based on username on type on Source IP or if it's",
    "start": "6631840",
    "end": "6638880"
  },
  {
    "text": "secure transport all these variables are available within your IM policies",
    "start": "6638880",
    "end": "6647440"
  },
  {
    "text": "okay and now on that code",
    "start": "6647719",
    "end": "6653520"
  },
  {
    "text": "we can get the the current user and there is one more variable that I'd like",
    "start": "6657119",
    "end": "6664520"
  },
  {
    "text": "to show you guys",
    "start": "6664520",
    "end": "6668920"
  },
  {
    "text": "and so for",
    "start": "6670440",
    "end": "6678159"
  },
  {
    "text": "credentials are our new set of credentials AWS Cognito identity",
    "start": "6678159",
    "end": "6686719"
  },
  {
    "text": "credentials so this is a very special type of credentials where we say uh what",
    "start": "6686719",
    "end": "6694040"
  },
  {
    "text": "is our identity pool ID and what is",
    "start": "6694040",
    "end": "6700199"
  },
  {
    "text": "our uh and the token the token the JW the ID",
    "start": "6700199",
    "end": "6707280"
  },
  {
    "text": "token that we have as identity and Cognito will return us credentials with",
    "start": "6707280",
    "end": "6713719"
  },
  {
    "text": "that role with that execution role so for identity pool",
    "start": "6713719",
    "end": "6718960"
  },
  {
    "text": "ID we have the this",
    "start": "6718960",
    "end": "6725678"
  },
  {
    "text": "value right and for logins we are using Us East one for region and our console",
    "start": "6731119",
    "end": "6743678"
  },
  {
    "text": "uh our user our user pool ID is right",
    "start": "6747280",
    "end": "6755360"
  },
  {
    "text": "there and the Tok and this is associated with that token and if this goes right",
    "start": "6760320",
    "end": "6769840"
  },
  {
    "text": "we can",
    "start": "6769840",
    "end": "6773118"
  },
  {
    "text": "console. log this",
    "start": "6775040",
    "end": "6780678"
  },
  {
    "text": "credentials and if this is all correct nearly uh AWS is not defined",
    "start": "6784440",
    "end": "6792880"
  },
  {
    "text": "because we didn't install the AWS SDK at all",
    "start": "6792880",
    "end": "6798760"
  },
  {
    "text": "so we need to install and save the AWS",
    "start": "6799239",
    "end": "6805920"
  },
  {
    "text": "SDK",
    "start": "6809920",
    "end": "6812920"
  },
  {
    "text": "and yeah as soon as that is installed we can go on and make that call just a",
    "start": "6817159",
    "end": "6826760"
  },
  {
    "text": "second let me get something here",
    "start": "6826760",
    "end": "6832078"
  },
  {
    "text": "okay oh we need CH start this again",
    "start": "6856840",
    "end": "6863360"
  },
  {
    "text": "AWS is still not defined so let's define that",
    "start": "6865239",
    "end": "6870678"
  },
  {
    "text": "now so I believe the right syntax would be",
    "start": "6872880",
    "end": "6878719"
  },
  {
    "text": "import let's see if I have this somewhere else I have it like",
    "start": "6878719",
    "end": "6885840"
  },
  {
    "text": "this import AWS from AWS SDK and this should give us",
    "start": "6885840",
    "end": "6894840"
  },
  {
    "text": "credentials on our Ling method just so AWS Cognito identity credentials work",
    "start": "6894880",
    "end": "6902280"
  },
  {
    "text": "this is a class from the AWS SDK we now leaving the Cognito identity",
    "start": "6902280",
    "end": "6908239"
  },
  {
    "text": "SDK so that we have Cognito identities and one thing that you'll see here is",
    "start": "6908239",
    "end": "6915599"
  },
  {
    "text": "that my Cognito identities that I just retrieved it does not have an AIS key it",
    "start": "6915599",
    "end": "6922520"
  },
  {
    "text": "does not have a session key or uh it's because it is expiring right and we if",
    "start": "6922520",
    "end": "6932280"
  },
  {
    "text": "this is expiring and we need to refresh it and",
    "start": "6932280",
    "end": "6937480"
  },
  {
    "text": "the method for this is the refresh method we have a valid refresh token so",
    "start": "6937480",
    "end": "6945159"
  },
  {
    "text": "we can call Cognito um token refresh I believe this",
    "start": "6945159",
    "end": "6955199"
  },
  {
    "text": "is the right method and here we can call this refresh method",
    "start": "6955199",
    "end": "6962840"
  },
  {
    "text": "and get get the credential it will refresh",
    "start": "6962840",
    "end": "6968400"
  },
  {
    "text": "the credentials using the gr credentials for identity or assume role with web",
    "start": "6968400",
    "end": "6973840"
  },
  {
    "text": "identity as appropriate so uh you don't need to mix uh and and understand uh",
    "start": "6973840",
    "end": "6981840"
  },
  {
    "text": "exactly what's the the difference right now but uh it's good that it will it's just",
    "start": "6981840",
    "end": "6988679"
  },
  {
    "text": "saying that it will delegate correctly so let's trust that and credits.",
    "start": "6988679",
    "end": "6996800"
  },
  {
    "text": "refresh we should have uh",
    "start": "6997079",
    "end": "7004599"
  },
  {
    "text": "a function of error and",
    "start": "7012400",
    "end": "7017560"
  },
  {
    "text": "data and we could probably be using Arrow functions through this all I'm",
    "start": "7017560",
    "end": "7023719"
  },
  {
    "text": "just trying I will get to this refactoring and make this code look a",
    "start": "7023719",
    "end": "7028960"
  },
  {
    "text": "bit better offline I'm just not spending your time and let's focus on the AWS",
    "start": "7028960",
    "end": "7034599"
  },
  {
    "text": "part now and then I can make the Cosmetics offline and I I will develop",
    "start": "7034599",
    "end": "7041520"
  },
  {
    "text": "this more offline and sync with you guys and but it's hard to get the focus for a",
    "start": "7041520",
    "end": "7048000"
  },
  {
    "text": "single episode so let's just end this by",
    "start": "7048000",
    "end": "7053079"
  },
  {
    "text": "making sure we have credentials to a into the AWS Services console.log the if",
    "start": "7053079",
    "end": "7061199"
  },
  {
    "text": "existing or",
    "start": "7061199",
    "end": "7065280"
  },
  {
    "text": "else uh so. log the the data object that we",
    "start": "7069480",
    "end": "7076880"
  },
  {
    "text": "Fetch and this should be it so instead of this credentials now we should be",
    "start": "7078719",
    "end": "7086560"
  },
  {
    "text": "talking about",
    "start": "7086560",
    "end": "7092520"
  },
  {
    "text": "loging let me make a very clear distinction that here is where we're",
    "start": "7092520",
    "end": "7098520"
  },
  {
    "text": "talking about and refresh it ceds is not defined it's",
    "start": "7098520",
    "end": "7109239"
  },
  {
    "text": "creds so Cognito give access to unconfirmed users no unfor you have you",
    "start": "7109239",
    "end": "7117079"
  },
  {
    "text": "can you can state that you uh you can confirm your users",
    "start": "7117079",
    "end": "7123159"
  },
  {
    "text": "automatically but it won't give credentials to unconfirmed users but you can have a Lambda hook to uh confirm",
    "start": "7123159",
    "end": "7131000"
  },
  {
    "text": "users automatically basically when they when they create themselves but this is",
    "start": "7131000",
    "end": "7137040"
  },
  {
    "text": "custom okay so right now missing region in",
    "start": "7137040",
    "end": "7142679"
  },
  {
    "text": "config so on in this object we need to set a",
    "start": "7142679",
    "end": "7149400"
  },
  {
    "text": "region that is Us East",
    "start": "7149400",
    "end": "7154760"
  },
  {
    "text": "[Music] one and now we have",
    "start": "7155340",
    "end": "7164040"
  },
  {
    "text": "huh why don't we have it's credits it's the same credentials object that is now",
    "start": "7166520",
    "end": "7174880"
  },
  {
    "text": "refreshed and now we have access key secret key and session token so for",
    "start": "7174880",
    "end": "7182400"
  },
  {
    "text": "example we can invoke Lambda functions or call our JavaScript apis or do",
    "start": "7182400",
    "end": "7190199"
  },
  {
    "text": "anything at all we want with AWS",
    "start": "7190199",
    "end": "7196159"
  },
  {
    "text": "and so there is an authentication gap between authentication and",
    "start": "7196159",
    "end": "7202400"
  },
  {
    "text": "unconfirmed uh no there is no Gap Cognito if you",
    "start": "7202400",
    "end": "7209199"
  },
  {
    "text": "want to have the same data if you sync it on Cognito sync it will",
    "start": "7209199",
    "end": "7215719"
  },
  {
    "text": "automatically synchronize the data even if even after the user registers so",
    "start": "7215719",
    "end": "7222920"
  },
  {
    "text": "the the thing you can't mistake is unauthenticated and authenticated",
    "start": "7222920",
    "end": "7229840"
  },
  {
    "text": "policies that's the difference for that what defines what you can do when you're",
    "start": "7229840",
    "end": "7235280"
  },
  {
    "text": "authenticated or not and confirmed is just for uh before you validate that you",
    "start": "7235280",
    "end": "7243000"
  },
  {
    "text": "are who you claim to me to be before you say uh your email is that or your phone",
    "start": "7243000",
    "end": "7249280"
  },
  {
    "text": "is that anyone that's marked as an alien uh if you don't confirm that you don't",
    "start": "7249280",
    "end": "7255040"
  },
  {
    "text": "have valid credentials okay and they does they cannot be used",
    "start": "7255040",
    "end": "7261880"
  },
  {
    "text": "so for example let's say that we want to invoke that Lambda function so we",
    "start": "7261880",
    "end": "7268800"
  },
  {
    "text": "have uh we need to to add this this",
    "start": "7268800",
    "end": "7273840"
  },
  {
    "text": "credentials to to to here we already have credentials",
    "start": "7273840",
    "end": "7280840"
  },
  {
    "text": "to invoke and do anything we want with any AWS service so we can for",
    "start": "7280840",
    "end": "7290239"
  },
  {
    "text": "example uh for uh",
    "start": "7292320",
    "end": "7298000"
  },
  {
    "text": "JavaScript AWS JS SDK for Lambda and",
    "start": "7298000",
    "end": "7303719"
  },
  {
    "text": "let's try to invoke um a Lambda",
    "start": "7303719",
    "end": "7308719"
  },
  {
    "text": "function class",
    "start": "7310239",
    "end": "7313840"
  },
  {
    "text": "so here we create the Lambda",
    "start": "7320119",
    "end": "7326760"
  },
  {
    "text": "object and within the within the the object we",
    "start": "7328480",
    "end": "7336040"
  },
  {
    "text": "can create some parameters we can pass parameters",
    "start": "7336040",
    "end": "7341480"
  },
  {
    "text": "and the parameters for all those global um objects all those options are here",
    "start": "7341480",
    "end": "7349520"
  },
  {
    "text": "and one important is credentials so we can say that credentials is",
    "start": "7349520",
    "end": "7357320"
  },
  {
    "text": "creds so that it's going to make those authenticated API",
    "start": "7359320",
    "end": "7364599"
  },
  {
    "text": "calls right and this should work and also important region",
    "start": "7364599",
    "end": "7372719"
  },
  {
    "text": "in this case is US least one and let's try to make the",
    "start": "7372719",
    "end": "7381840"
  },
  {
    "text": "the same API call we were doing",
    "start": "7381840",
    "end": "7387480"
  },
  {
    "text": "before with lambda. invoke well let's let's try to invoke the Lambda function",
    "start": "7387880",
    "end": "7395040"
  },
  {
    "text": "first so invoke would be would be the proper",
    "start": "7395040",
    "end": "7401280"
  },
  {
    "text": "method and this is how you",
    "start": "7401280",
    "end": "7408158"
  },
  {
    "text": "invoke uh where is the invoke",
    "start": "7408679",
    "end": "7413079"
  },
  {
    "text": "method I so this invoke this is how you call it and let's",
    "start": "7416199",
    "end": "7424599"
  },
  {
    "text": "take a look at those par parameters so we have a a Lambda",
    "start": "7424599",
    "end": "7430119"
  },
  {
    "text": "function called the function name",
    "start": "7430119",
    "end": "7436599"
  },
  {
    "text": "it's let's get to that L the function and the function name is l list featured",
    "start": "7437400",
    "end": "7445599"
  },
  {
    "text": "items um the client",
    "start": "7447040",
    "end": "7451599"
  },
  {
    "text": "context so let's see what each of those means uh the client contest is specific",
    "start": "7453920",
    "end": "7460400"
  },
  {
    "text": "client specific information that you would like to to put and it must be encoded and it's",
    "start": "7460400",
    "end": "7468760"
  },
  {
    "text": "optional so I'm not right right",
    "start": "7468760",
    "end": "7474000"
  },
  {
    "text": "it's uh yeah so I don't need this",
    "start": "7474000",
    "end": "7480239"
  },
  {
    "text": "and the invocation type is going to be a request response I don't need to specify log",
    "start": "7480239",
    "end": "7487679"
  },
  {
    "text": "type I this I could send a p load as um",
    "start": "7487679",
    "end": "7494719"
  },
  {
    "text": "a method I could spec specify the version that I want but just let's just",
    "start": "7494719",
    "end": "7501000"
  },
  {
    "text": "make um a very simple invocation and see if we",
    "start": "7501000",
    "end": "7506679"
  },
  {
    "text": "get back the data or an error and I'm",
    "start": "7506679",
    "end": "7512320"
  },
  {
    "text": "I'm voting that it will it should be an error because our authenticated",
    "start": "7512320",
    "end": "7518040"
  },
  {
    "text": "credential does not have access to to do this so our react we should have a 403",
    "start": "7518040",
    "end": "7526320"
  },
  {
    "text": "Forbidden because um do uh Cognito identity credentials",
    "start": "7526320",
    "end": "7532920"
  },
  {
    "text": "it's not the credential that we did it's not allowed to invoke function on on on",
    "start": "7532920",
    "end": "7540159"
  },
  {
    "text": "that resource so we need to change this we need to change this token to allow",
    "start": "7540159",
    "end": "7546199"
  },
  {
    "text": "that to we need to change this policy to allow that and I'm going to a cheat and",
    "start": "7546199",
    "end": "7552679"
  },
  {
    "text": "search for uh an IM am policy that uses Lambda",
    "start": "7552679",
    "end": "7559119"
  },
  {
    "text": "functions and see how we can authorize that so this is how we allow make a St a",
    "start": "7559119",
    "end": "7567840"
  },
  {
    "text": "statement to allow a Lambda function and on our services IM",
    "start": "7567840",
    "end": "7575840"
  },
  {
    "text": "am here is where we create those roles",
    "start": "7575840",
    "end": "7581880"
  },
  {
    "text": "so the roles that were created by the wizard are here the one role for the",
    "start": "7581880",
    "end": "7587040"
  },
  {
    "text": "authenticated credentials and one for the non-authenticated credentials let's",
    "start": "7587040",
    "end": "7592800"
  },
  {
    "text": "just authorize this call to the uh authenticated credentials and make sure",
    "start": "7592800",
    "end": "7600679"
  },
  {
    "text": "that they have a policy and let's create a new policy using the policy generator",
    "start": "7600679",
    "end": "7607440"
  },
  {
    "text": "specifying that we are going to allow the",
    "start": "7607440",
    "end": "7613159"
  },
  {
    "text": "um on AWS Lambda the actions to",
    "start": "7613159",
    "end": "7621800"
  },
  {
    "text": "invoke uh the invoke function",
    "start": "7622840",
    "end": "7627920"
  },
  {
    "text": "on the specific function that we had so we have this Arn here here is the",
    "start": "7627920",
    "end": "7635320"
  },
  {
    "text": "function that uh was called and this is the resource",
    "start": "7635320",
    "end": "7642159"
  },
  {
    "text": "so now uh we can add this",
    "start": "7642159",
    "end": "7648920"
  },
  {
    "text": "statement and so we are effectively allowing the invocation of this function",
    "start": "7648920",
    "end": "7656000"
  },
  {
    "text": "to this specific credential and",
    "start": "7656000",
    "end": "7661678"
  },
  {
    "text": "now this should work so we have the we have the the the the payloads that",
    "start": "7662920",
    "end": "7672000"
  },
  {
    "text": "we we expected and once we have this",
    "start": "7672000",
    "end": "7678719"
  },
  {
    "text": "data we can do the same thing that we did",
    "start": "7678920",
    "end": "7684040"
  },
  {
    "text": "earlier and set",
    "start": "7684040",
    "end": "7689480"
  },
  {
    "text": "State we need the copy of that object that is always equals to",
    "start": "7691159",
    "end": "7698559"
  },
  {
    "text": "this and here inside this Cod back call this do set",
    "start": "7698559",
    "end": "7706320"
  },
  {
    "text": "State uh data uh let me just make the same set",
    "start": "7706480",
    "end": "7712800"
  },
  {
    "text": "state that we were doing before so it's result. data so this is",
    "start": "7712800",
    "end": "7722280"
  },
  {
    "text": "result just to be consistent and result. data this should be invoking our Lambda",
    "start": "7722280",
    "end": "7729719"
  },
  {
    "text": "function and bringing back the same results uh it's not this it's that",
    "start": "7729719",
    "end": "7737599"
  },
  {
    "text": "that's exactly why we did this and",
    "start": "7737599",
    "end": "7743960"
  },
  {
    "text": "now oh huh not",
    "start": "7743960",
    "end": "7751719"
  },
  {
    "text": "result oh result is the the result object the payload is a string so I need",
    "start": "7751719",
    "end": "7760520"
  },
  {
    "text": "to parse this",
    "start": "7760520",
    "end": "7766040"
  },
  {
    "text": "and let's just uh set State again and",
    "start": "7768639",
    "end": "7773920"
  },
  {
    "text": "how we did par this I think this is",
    "start": "7773920",
    "end": "7783158"
  },
  {
    "text": "payload let me let me see if I can find um how is that",
    "start": "7785520",
    "end": "7792199"
  },
  {
    "text": "exactly we find once it's called",
    "start": "7792199",
    "end": "7797960"
  },
  {
    "text": "and H it's json. pars the thing that I",
    "start": "7797960",
    "end": "7804639"
  },
  {
    "text": "want so here",
    "start": "7804639",
    "end": "7808760"
  },
  {
    "text": "on for data",
    "start": "7813400",
    "end": "7818400"
  },
  {
    "text": "equals let's do it payload it's jon.",
    "start": "7819400",
    "end": "7825840"
  },
  {
    "text": "pars the payload",
    "start": "7825840",
    "end": "7832480"
  },
  {
    "text": "and it's it's this looks good let's see if I'm not",
    "start": "7832760",
    "end": "7839880"
  },
  {
    "text": "wrong huh result is this",
    "start": "7840800",
    "end": "7846760"
  },
  {
    "text": "object oops not this one",
    "start": "7846760",
    "end": "7851880"
  },
  {
    "text": "too many too many printing let's go back a little bit and just",
    "start": "7853000",
    "end": "7859639"
  },
  {
    "text": "print the the data object and see if I'm going to fast here I'm going to",
    "start": "7859639",
    "end": "7867520"
  },
  {
    "text": "just payload print the result and let's do this step by step so I have one object with a field payload and the",
    "start": "7867520",
    "end": "7875520"
  },
  {
    "text": "payload is just result. payload and now it should be working",
    "start": "7875520",
    "end": "7881320"
  },
  {
    "text": "working good and we can set State just to the payload",
    "start": "7881320",
    "end": "7889638"
  },
  {
    "text": "and because the payload will have the state so oh but H the payload is just",
    "start": "7889840",
    "end": "7901280"
  },
  {
    "text": "this object it's a full object right I still need to dig it a little bit more",
    "start": "7901280",
    "end": "7908000"
  },
  {
    "text": "it's not the state that I want yet so I'm going going to just forward the",
    "start": "7908000",
    "end": "7914000"
  },
  {
    "text": "payload print and API Gateway is coming is it it",
    "start": "7914000",
    "end": "7921599"
  },
  {
    "text": "is better to go through API Gateway and we are doing that in a second just keep",
    "start": "7921599",
    "end": "7927679"
  },
  {
    "text": "tuned we're just going step by step I know um it is uh I'm calling the Lambda",
    "start": "7927679",
    "end": "7935199"
  },
  {
    "text": "function just so we make it work without introducing new Concepts but right after",
    "start": "7935199",
    "end": "7940520"
  },
  {
    "text": "we get this we can get to API Gateway so now we have the the object that we want",
    "start": "7940520",
    "end": "7949360"
  },
  {
    "text": "in body so payload uh do body is the actual items so our uh",
    "start": "7949360",
    "end": "7958679"
  },
  {
    "text": "body equals Json json.",
    "start": "7958679",
    "end": "7963960"
  },
  {
    "text": "pars payad body",
    "start": "7963960",
    "end": "7968480"
  },
  {
    "text": "and here it is so we have the payload body in an object with items and this is",
    "start": "7971639",
    "end": "7980000"
  },
  {
    "text": "what we expected and now we probably can do that set state for with the body",
    "start": "7980000",
    "end": "7989440"
  },
  {
    "text": "object that will contain the the items that we want I will just keep it printed and",
    "start": "7989440",
    "end": "7997440"
  },
  {
    "text": "here here it is the same the very same Lambda fun function that we wrote last",
    "start": "7997440",
    "end": "8002840"
  },
  {
    "text": "time but now it has a very important difference and it is that it is",
    "start": "8002840",
    "end": "8010679"
  },
  {
    "text": "authenticated but how do we get the authentication data from our Lambda",
    "start": "8010679",
    "end": "8016000"
  },
  {
    "text": "function and it's going to be all in this event object so this is I'm I'm",
    "start": "8016000",
    "end": "8023559"
  },
  {
    "text": "going to to send ship it back just so we have it and don't need to",
    "start": "8023559",
    "end": "8031880"
  },
  {
    "text": "uh go to the log and see and keep digging keep skipping from log to",
    "start": "8031880",
    "end": "8037400"
  },
  {
    "text": "request and request from for for log and there are a bit better ways to debug",
    "start": "8037400",
    "end": "8042800"
  },
  {
    "text": "this I'm just going to make the very simple thing of in our result besides",
    "start": "8042800",
    "end": "8050320"
  },
  {
    "text": "the item I'm going to create a new field",
    "start": "8050320",
    "end": "8055599"
  },
  {
    "text": "called event and just return the event",
    "start": "8055599",
    "end": "8062520"
  },
  {
    "text": "this is the exact um event that what that triggered our",
    "start": "8062520",
    "end": "8069599"
  },
  {
    "text": "response and here now it's saved",
    "start": "8069599",
    "end": "8075960"
  },
  {
    "text": "and in the app again we can see that huh it's it's not here an expected",
    "start": "8075960",
    "end": "8086040"
  },
  {
    "text": "token let's see what what um what happened here it's",
    "start": "8086040",
    "end": "8092440"
  },
  {
    "text": "probably that there is an error in my function and",
    "start": "8092440",
    "end": "8100400"
  },
  {
    "text": "now we have this object that have the items and the",
    "start": "8100400",
    "end": "8106719"
  },
  {
    "text": "event and H the event here doesn't have many interesting properties it's it's",
    "start": "8106719",
    "end": "8115559"
  },
  {
    "text": "not what it does not have the field the I",
    "start": "8115559",
    "end": "8122119"
  },
  {
    "text": "expected and we can see the we can get it on the documentation the the correct",
    "start": "8122119",
    "end": "8129320"
  },
  {
    "text": "field so",
    "start": "8129320",
    "end": "8134679"
  },
  {
    "text": "Lambda event",
    "start": "8134679",
    "end": "8138639"
  },
  {
    "text": "identity here in the context object uh we can",
    "start": "8139840",
    "end": "8147440"
  },
  {
    "text": "it's in fact it's the context object so this is the one uh I should be",
    "start": "8152840",
    "end": "8159960"
  },
  {
    "text": "I'm targeting the wrong event and here is the definition of those of those uh",
    "start": "8159960",
    "end": "8167960"
  },
  {
    "text": "aspects and this identity object will have the Cognito identity ID so the",
    "start": "8167960",
    "end": "8175840"
  },
  {
    "text": "correct way to implement this would be on our Lambda function the let's",
    "start": "8175840",
    "end": "8184400"
  },
  {
    "text": "let's call it Cognito ID Identity or just Cognito ID for short",
    "start": "8184400",
    "end": "8191360"
  },
  {
    "text": "it's context context context do identity and let's not",
    "start": "8191360",
    "end": "8200120"
  },
  {
    "text": "again uh copy things it should be not type just copy and right",
    "start": "8200120",
    "end": "8209598"
  },
  {
    "text": "now we should have our Cognito ID so this is the right",
    "start": "8209599",
    "end": "8218719"
  },
  {
    "text": "this is the identity that I can use so this Cognito",
    "start": "8218719",
    "end": "8226240"
  },
  {
    "text": "ID is",
    "start": "8226240",
    "end": "8229679"
  },
  {
    "text": "exactly the identity context and that we retrieved from the from the cognito",
    "start": "8233599",
    "end": "8240598"
  },
  {
    "text": "provid okay and all other variables that you can get all sort of interesting",
    "start": "8240599",
    "end": "8246359"
  },
  {
    "text": "information from the the context object and here's uh this documentation page",
    "start": "8246360",
    "end": "8253558"
  },
  {
    "text": "will have more information on it I will add it as it's being referenced I'll add",
    "start": "8253559",
    "end": "8259240"
  },
  {
    "text": "it to our guft so you guys have everything we discussed today and now",
    "start": "8259240",
    "end": "8265638"
  },
  {
    "text": "let's move on to the final part getting API Gateway to works so so yeah I hope",
    "start": "8265639",
    "end": "8272800"
  },
  {
    "text": "news mind and bjd I hope you guys are still there let's uh let's get to API",
    "start": "8272800",
    "end": "8280280"
  },
  {
    "text": "Gateway so as you if you remember um on our API",
    "start": "8280281",
    "end": "8289359"
  },
  {
    "text": "Gateway let's let's go",
    "start": "8290800",
    "end": "8295000"
  },
  {
    "text": "there on our breakless API our stages we can uh hit this we can hit",
    "start": "8297281",
    "end": "8307040"
  },
  {
    "text": "this invoke URL directly using the fetch apis from es6 and just uh pass the",
    "start": "8307040",
    "end": "8315160"
  },
  {
    "text": "authentication headers in the the JWT tokens as authentication headers but",
    "start": "8315160",
    "end": "8321399"
  },
  {
    "text": "then you would have to worry with this the authentication and setting the",
    "start": "8321400",
    "end": "8326598"
  },
  {
    "text": "correct headers and the retries if by any chance some invocation fails so I'd",
    "start": "8326599",
    "end": "8333439"
  },
  {
    "text": "highly recommend we use the um the generated SD case so here in",
    "start": "8333440",
    "end": "8341439"
  },
  {
    "text": "the stages in our prod stage we can generate SD case and we did that that",
    "start": "8341440",
    "end": "8347760"
  },
  {
    "text": "last time and this is this generated um this files for us here in public we have",
    "start": "8347760",
    "end": "8354880"
  },
  {
    "text": "this API client Gateway that was generated by uh API so so instead of",
    "start": "8354880",
    "end": "8362880"
  },
  {
    "text": "using this instead of going through this Lambda process Let's uh not do",
    "start": "8362880",
    "end": "8372000"
  },
  {
    "text": "this and let's do uh the the same thing we did last time with",
    "start": "8373719",
    "end": "8382359"
  },
  {
    "text": "API Gateway",
    "start": "8382360",
    "end": "8385240"
  },
  {
    "text": "client so here",
    "start": "8389040",
    "end": "8394479"
  },
  {
    "text": "in we have the AP guideway config the parameters for the request the body of",
    "start": "8394479",
    "end": "8401520"
  },
  {
    "text": "the request the additional parameters and we have the authenticated call and",
    "start": "8401520",
    "end": "8411359"
  },
  {
    "text": "then if it's a success um let's do it all of all at",
    "start": "8411359",
    "end": "8419760"
  },
  {
    "text": "once and we set the the data for the request",
    "start": "8419760",
    "end": "8425200"
  },
  {
    "text": "it's very same thing or else we get an error and this this is the invoca the",
    "start": "8425200",
    "end": "8432120"
  },
  {
    "text": "same Lambda function and going through the same thing but we're going through the API client we just need to pass",
    "start": "8432120",
    "end": "8438640"
  },
  {
    "text": "credentials now so API client credentials AWS um I hope you don't mind",
    "start": "8438640",
    "end": "8446600"
  },
  {
    "text": "me searching this much but this is how to generate at and call an SDK for API",
    "start": "8446600",
    "end": "8453439"
  },
  {
    "text": "Gateway and this is already on our last episodes",
    "start": "8453439",
    "end": "8459280"
  },
  {
    "text": "um Guist but I'll add it to this one as well because this is a very important",
    "start": "8459280",
    "end": "8465600"
  },
  {
    "text": "link especially here in the end where it",
    "start": "8465600",
    "end": "8471319"
  },
  {
    "text": "mentions using a JavaScript generated API Gateway and in the very last",
    "start": "8471319",
    "end": "8477640"
  },
  {
    "text": "examples it shows the how how to work with um authenticated credentials and",
    "start": "8477640",
    "end": "8485040"
  },
  {
    "text": "it's just a matter of passing to the client your credentials and here is the",
    "start": "8485040",
    "end": "8492040"
  },
  {
    "text": "thing uh in this client it's using access key and secret key for",
    "start": "8492040",
    "end": "8498160"
  },
  {
    "text": "credentials but this is temporary so you need um one extra credential and this is",
    "start": "8498160",
    "end": "8506359"
  },
  {
    "text": "the the session token right before because we the the session token you can't uh",
    "start": "8506359",
    "end": "8516359"
  },
  {
    "text": "access the you can use temporary credentials so session",
    "start": "8516359",
    "end": "8521479"
  },
  {
    "text": "token is equal to some session",
    "start": "8521479",
    "end": "8526800"
  },
  {
    "text": "token so those are actually the the three credentials you need",
    "start": "8526800",
    "end": "8532760"
  },
  {
    "text": "so one is the session to",
    "start": "8532760",
    "end": "8541000"
  },
  {
    "text": "and where do we have that it's right there on our credentials object so let's",
    "start": "8541560",
    "end": "8546920"
  },
  {
    "text": "just refresh this so you can see here on our Cognito identity credentials we have",
    "start": "8546920",
    "end": "8553120"
  },
  {
    "text": "access key ID session token and secret access key so let's uh let's use exactly",
    "start": "8553120",
    "end": "8561280"
  },
  {
    "text": "those fields so here we",
    "start": "8561280",
    "end": "8566120"
  },
  {
    "text": "have creds do access ke the",
    "start": "8566520",
    "end": "8573479"
  },
  {
    "text": "ID and CR here creds",
    "start": "8574439",
    "end": "8584520"
  },
  {
    "text": "dot secret access",
    "start": "8584520",
    "end": "8590840"
  },
  {
    "text": "key and cs. session okay and this may seem",
    "start": "8590840",
    "end": "8601040"
  },
  {
    "text": "a bit of magic but it's not it's just that the API Gateway client does not",
    "start": "8601040",
    "end": "8608240"
  },
  {
    "text": "accept directly Cognito credentials so you need to to exchange your Cognito",
    "start": "8608240",
    "end": "8616160"
  },
  {
    "text": "credentials for AWS credentials then you pass your AWS credentials to your API",
    "start": "8616160",
    "end": "8622680"
  },
  {
    "text": "Gateway client SDK that was generated for you so you can uh make authenticated",
    "start": "8622680",
    "end": "8629319"
  },
  {
    "text": "calls right and this is just",
    "start": "8629319",
    "end": "8634640"
  },
  {
    "text": "it so",
    "start": "8634640",
    "end": "8637960"
  },
  {
    "text": "now we oh um the no access control",
    "start": "8645520",
    "end": "8650640"
  },
  {
    "text": "origin header is present on the response so this was not allowed access h",
    "start": "8650640",
    "end": "8660479"
  },
  {
    "text": "so this is weird because we had that set for our",
    "start": "8661359",
    "end": "8667319"
  },
  {
    "text": "object and here let's just check in API Gateway",
    "start": "8667319",
    "end": "8673880"
  },
  {
    "text": "our resource it's on",
    "start": "8673880",
    "end": "8678960"
  },
  {
    "text": "options Let's uh invoke it here and see if all methods are",
    "start": "8679680",
    "end": "8687160"
  },
  {
    "text": "working there is the options for the",
    "start": "8687160",
    "end": "8692319"
  },
  {
    "text": "oh yes we of course we need to set the authorizer for our function so we can we",
    "start": "8692359",
    "end": "8699040"
  },
  {
    "text": "need to create uh the user pool authorizers to to bind that",
    "start": "8699040",
    "end": "8705359"
  },
  {
    "text": "authorization from API Gateway so it's going to be on Cognito OS East one on my",
    "start": "8705359",
    "end": "8712200"
  },
  {
    "text": "break list up of course it can't uh expect it to work without binding API",
    "start": "8712200",
    "end": "8718840"
  },
  {
    "text": "Gateway to our us user pull and using this authorizer and this is where you",
    "start": "8718840",
    "end": "8725640"
  },
  {
    "text": "can set the authorization header and pass it in the pass this in the",
    "start": "8725640",
    "end": "8733120"
  },
  {
    "text": "authorization header and you can test with your identity token and you could",
    "start": "8733120",
    "end": "8740120"
  },
  {
    "text": "you could use this direct this would be more interesting direct calling it",
    "start": "8740120",
    "end": "8745200"
  },
  {
    "text": "directly from the from the you can use directly The The J WT token here if you",
    "start": "8745200",
    "end": "8752479"
  },
  {
    "text": "if you were not using the identity Federation but yeah here is how you can",
    "start": "8752479",
    "end": "8759840"
  },
  {
    "text": "set this up and I will just make",
    "start": "8759840",
    "end": "8765600"
  },
  {
    "text": "sure that this is working and let's get the resource that we had and this get",
    "start": "8765600",
    "end": "8773560"
  },
  {
    "text": "method is going to require um our breakless up",
    "start": "8773560",
    "end": "8779720"
  },
  {
    "text": "Authentication and being authenticated by",
    "start": "8779720",
    "end": "8784840"
  },
  {
    "text": "that and now I believe we have it correctly set",
    "start": "8784840",
    "end": "8790439"
  },
  {
    "text": "and we generate the",
    "start": "8790439",
    "end": "8794761"
  },
  {
    "text": "SDK for",
    "start": "8797200",
    "end": "8800641"
  },
  {
    "text": "this for JavaScript and",
    "start": "8802439",
    "end": "8808399"
  },
  {
    "text": "now that we have it paste it right into our",
    "start": "8811200",
    "end": "8820358"
  },
  {
    "text": "code and in breakless directory public right where we had this those files just",
    "start": "8820479",
    "end": "8827399"
  },
  {
    "text": "replace them with the new version and apply this to all and let's",
    "start": "8827399",
    "end": "8834520"
  },
  {
    "text": "see if the if the refresh works",
    "start": "8834520",
    "end": "8839358"
  },
  {
    "text": "it's not um processing the I'm not being allowed um cross",
    "start": "8843399",
    "end": "8851600"
  },
  {
    "text": "origin requests it should be responding with the correct headers",
    "start": "8851600",
    "end": "8858560"
  },
  {
    "text": "so uh the on our",
    "start": "8858560",
    "end": "8864680"
  },
  {
    "text": "function on here",
    "start": "8864680",
    "end": "8870479"
  },
  {
    "text": "we have the access control allow origin header set to everyone so we should have",
    "start": "8870840",
    "end": "8877720"
  },
  {
    "text": "this on API Gateway but let's just make sure that here on the breakless",
    "start": "8877720",
    "end": "8884600"
  },
  {
    "text": "API we have that to",
    "start": "8884600",
    "end": "8892439"
  },
  {
    "text": "test",
    "start": "8892520",
    "end": "8895520"
  },
  {
    "text": "and H",
    "start": "8897960",
    "end": "8901960"
  },
  {
    "text": "malformed uh response from API Gateway something is going wrong here",
    "start": "8905000",
    "end": "8913600"
  },
  {
    "text": "H why it failed to",
    "start": "8913600",
    "end": "8918358"
  },
  {
    "text": "execute so I have this I have the objects I have the",
    "start": "8924120",
    "end": "8930640"
  },
  {
    "text": "API ID everything seems to be set correctly the body the",
    "start": "8930640",
    "end": "8939200"
  },
  {
    "text": "resource the result set here the status code let's",
    "start": "8940479",
    "end": "8949880"
  },
  {
    "text": "see it's saying that the response is m form I don't know if why as it was",
    "start": "8956479",
    "end": "8964080"
  },
  {
    "text": "working right",
    "start": "8964080",
    "end": "8967399"
  },
  {
    "text": "before yeah but",
    "start": "8969479",
    "end": "8974159"
  },
  {
    "text": "well another way to to test this would be to send",
    "start": "8977240",
    "end": "8983240"
  },
  {
    "text": "the uh with to send the request to the API Gateway uh directly but if it's not",
    "start": "8983240",
    "end": "8990960"
  },
  {
    "text": "even working",
    "start": "8990960",
    "end": "8993800"
  },
  {
    "text": "here it's weird um the identity is returning n this Cognito identity",
    "start": "9003160",
    "end": "9010800"
  },
  {
    "text": "is this is probably not working because uh this identity is not set so",
    "start": "9010800",
    "end": "9021318"
  },
  {
    "text": "let me make",
    "start": "9021680",
    "end": "9027680"
  },
  {
    "text": "with um let me just make this",
    "start": "9028840",
    "end": "9037399"
  },
  {
    "text": "very weird test let's just say that this",
    "start": "9037399",
    "end": "9043200"
  },
  {
    "text": "is a string of empty string Plus",
    "start": "9043200",
    "end": "9049840"
  },
  {
    "text": "uh let's call it Cognito ID and Cognito",
    "start": "9050240",
    "end": "9055840"
  },
  {
    "text": "ID equals just the empty string and that file just to make",
    "start": "9055840",
    "end": "9062479"
  },
  {
    "text": "sure this is not undefined and then breaking for being undefined for not",
    "start": "9062479",
    "end": "9068399"
  },
  {
    "text": "being pass the correct credentials and now if we test this we still have a true",
    "start": "9068399",
    "end": "9077319"
  },
  {
    "text": "response h because it's it's not um with the",
    "start": "9077319",
    "end": "9083200"
  },
  {
    "text": "correct headers if we perhaps if we add the authentification",
    "start": "9083200",
    "end": "9091120"
  },
  {
    "text": "header to separate",
    "start": "9093880",
    "end": "9098200"
  },
  {
    "text": "authentication and let's see that",
    "start": "9100000",
    "end": "9103880"
  },
  {
    "text": "token on the react app let's print this token here just to",
    "start": "9108840",
    "end": "9117640"
  },
  {
    "text": "help us test this and here is the ID",
    "start": "9117640",
    "end": "9124318"
  },
  {
    "text": "token also log this huge JWT",
    "start": "9126960",
    "end": "9134080"
  },
  {
    "text": "token and",
    "start": "9134080",
    "end": "9138080"
  },
  {
    "text": "this should work",
    "start": "9140640",
    "end": "9144520"
  },
  {
    "text": "so yeah this is probably not the correct syntax to ship this this token I don't",
    "start": "9159240",
    "end": "9166560"
  },
  {
    "text": "know why thises is not authenticating it should be passing the the credentials",
    "start": "9166560",
    "end": "9173920"
  },
  {
    "text": "let's double check if this if this values are okay so let's see if",
    "start": "9173920",
    "end": "9183319"
  },
  {
    "text": "creds if access key and secret key and token are being passed correctly so I'll",
    "start": "9183319",
    "end": "9190120"
  },
  {
    "text": "just call this",
    "start": "9190120",
    "end": "9194920"
  },
  {
    "text": "um and let let's just print this just to make sure that all those values are",
    "start": "9197920",
    "end": "9205359"
  },
  {
    "text": "being passed so cr. access",
    "start": "9205359",
    "end": "9211640"
  },
  {
    "text": "key secret key and session",
    "start": "9211640",
    "end": "9220318"
  },
  {
    "text": "token and H",
    "start": "9224319",
    "end": "9230760"
  },
  {
    "text": "it's still giving us those 502s uh as if you're you me type Secret",
    "start": "9230760",
    "end": "9239680"
  },
  {
    "text": "in your code and yeah and let's see if",
    "start": "9239680",
    "end": "9245479"
  },
  {
    "text": "it's secret access ke thank you thank you BL N D mttr I misspelled secret",
    "start": "9245479",
    "end": "9255240"
  },
  {
    "text": "and now you see a lot of misspelling going",
    "start": "9255240",
    "end": "9260840"
  },
  {
    "text": "on here and I am I am paying attention to the chat mates it's just a bit of lag",
    "start": "9260840",
    "end": "9267880"
  },
  {
    "text": "but I we'll get there and so we we have the we have the access key we have the",
    "start": "9267880",
    "end": "9275120"
  },
  {
    "text": "secret key and token but again it's just saying that my header is not present and",
    "start": "9275120",
    "end": "9285120"
  },
  {
    "text": "so let's try again the",
    "start": "9285120",
    "end": "9290240"
  },
  {
    "text": "the test on the API Gateway",
    "start": "9290240",
    "end": "9296439"
  },
  {
    "text": "um I have um I have another API that I've been using to test",
    "start": "9296439",
    "end": "9302880"
  },
  {
    "text": "this let me just make sure that I'm setting everything correctly uh one",
    "start": "9302880",
    "end": "9308319"
  },
  {
    "text": "thing that I'm never yeah so this",
    "start": "9308319",
    "end": "9314040"
  },
  {
    "text": "is H",
    "start": "9314040",
    "end": "9318040"
  },
  {
    "text": "so the featured items is there with the with the credentials and it should",
    "start": "9320439",
    "end": "9327560"
  },
  {
    "text": "be with the correct Cognito user post I don't know if the options request would",
    "start": "9327560",
    "end": "9333200"
  },
  {
    "text": "Pro would process this and require authorization but I'm assuming no and it should be with the correct uh headers",
    "start": "9333200",
    "end": "9342160"
  },
  {
    "text": "and returning the the access allow",
    "start": "9342160",
    "end": "9347560"
  },
  {
    "text": "allow origin but I don't know why uh this should be coming from here from",
    "start": "9347560",
    "end": "9353560"
  },
  {
    "text": "your from our response headers and it's not so let's see in in Chrome what's",
    "start": "9353560",
    "end": "9361479"
  },
  {
    "text": "going on if we request here this on the network this featured items this first",
    "start": "9361479",
    "end": "9368560"
  },
  {
    "text": "request this options request is coming back to 100 the PreFlight request is",
    "start": "9368560",
    "end": "9375200"
  },
  {
    "text": "working but I don't know why the this second request the get request is",
    "start": "9375200",
    "end": "9381920"
  },
  {
    "text": "returning the a502 if it's sending the the correct",
    "start": "9381920",
    "end": "9387760"
  },
  {
    "text": "security security token but",
    "start": "9387760",
    "end": "9392960"
  },
  {
    "text": "H well that mean I can change this so in",
    "start": "9392960",
    "end": "9400720"
  },
  {
    "text": "the let test it again and just to make sure",
    "start": "9402279",
    "end": "9408200"
  },
  {
    "text": "the the options here for us test use a",
    "start": "9408200",
    "end": "9413439"
  },
  {
    "text": "column to separate header name and value so and you Lins to multiple such as",
    "start": "9413439",
    "end": "9420120"
  },
  {
    "text": "acceptation deson so it should be",
    "start": "9420120",
    "end": "9425319"
  },
  {
    "text": "authorization and the the JWT token just like this authorization",
    "start": "9425319",
    "end": "9434479"
  },
  {
    "text": "and the very same token and",
    "start": "9434479",
    "end": "9440080"
  },
  {
    "text": "this is",
    "start": "9440080",
    "end": "9442479"
  },
  {
    "text": "it but unfortunately we are having internal server errors well",
    "start": "9445359",
    "end": "9454601"
  },
  {
    "text": "um let me just think about this form for a while",
    "start": "9456600",
    "end": "9463680"
  },
  {
    "text": "I'm I have the Cor cor credentials I have them set in the client and why it's not",
    "start": "9467800",
    "end": "9477160"
  },
  {
    "text": "invoking malform Lambda proxy response so I'm assuming this uh response from",
    "start": "9477160",
    "end": "9484479"
  },
  {
    "text": "Lambda is incorrect by any chance and let me just make I don't know",
    "start": "9484479",
    "end": "9493120"
  },
  {
    "text": "we why because this is the exact same result let's just go back to the result",
    "start": "9493120",
    "end": "9500279"
  },
  {
    "text": "that we have we had before something static like this or not even at all just",
    "start": "9500279",
    "end": "9507880"
  },
  {
    "text": "to make sure we're back to sanity and have the Handler all",
    "start": "9507880",
    "end": "9518600"
  },
  {
    "text": "ourselves so this is okay this actually responds okay",
    "start": "9519600",
    "end": "9527040"
  },
  {
    "text": "so let's see if again we we will be using uh a better",
    "start": "9527040",
    "end": "9534600"
  },
  {
    "text": "testing and a better infrastructure on the future but this is probably",
    "start": "9534600",
    "end": "9543479"
  },
  {
    "text": "because our this object may not be existing",
    "start": "9543479",
    "end": "9549120"
  },
  {
    "text": "so I will context let's let's",
    "start": "9549120",
    "end": "9555040"
  },
  {
    "text": "see if just",
    "start": "9555040",
    "end": "9561399"
  },
  {
    "text": "context and context.",
    "start": "9561399",
    "end": "9566439"
  },
  {
    "text": "identity then we set this up it's probably it can",
    "start": "9567560",
    "end": "9573439"
  },
  {
    "text": "be always a runtime exception I should be testing this thing in a more appropriate Dev environment not just on",
    "start": "9573439",
    "end": "9580680"
  },
  {
    "text": "the Lambda console like this and so",
    "start": "9580680",
    "end": "9587120"
  },
  {
    "text": "unidentified and let's just make",
    "start": "9594680",
    "end": "9599840"
  },
  {
    "text": "sure it's not a run this runtime error and test",
    "start": "9599840",
    "end": "9605880"
  },
  {
    "text": "it and still good still good still returning and now",
    "start": "9606080",
    "end": "9614080"
  },
  {
    "text": "with the the Cognito ID",
    "start": "9614080",
    "end": "9618561"
  },
  {
    "text": "identity being Cognito",
    "start": "9622520",
    "end": "9627159"
  },
  {
    "text": "ID and comma and",
    "start": "9630319",
    "end": "9636600"
  },
  {
    "text": "now oops shouldn't have refreshed",
    "start": "9636600",
    "end": "9641800"
  },
  {
    "text": "this again authentication is that token",
    "start": "9641800",
    "end": "9650600"
  },
  {
    "text": "and we pass and it's not being identified",
    "start": "9656680",
    "end": "9663319"
  },
  {
    "text": "here H and I don't know",
    "start": "9663319",
    "end": "9668760"
  },
  {
    "text": "why I may have to check and return to you guys on this let's see",
    "start": "9668760",
    "end": "9676240"
  },
  {
    "text": "huh so it's not aut ating the call through the through API Gateway through",
    "start": "9676240",
    "end": "9684000"
  },
  {
    "text": "the API Gateway generated SDK and it's weird because the credentials",
    "start": "9684000",
    "end": "9691160"
  },
  {
    "text": "are being passed correctly and here's the we can see that credentials um are",
    "start": "9691160",
    "end": "9698160"
  },
  {
    "text": "there I just don't know why it is not going",
    "start": "9698160",
    "end": "9706160"
  },
  {
    "text": "through access key secret key s token API Gateway client",
    "start": "9706640",
    "end": "9713960"
  },
  {
    "text": "is instantiated and the feature method is being called and it's resulting it's",
    "start": "9713960",
    "end": "9722760"
  },
  {
    "text": "successfully um being called but I don't know why it can't invoke",
    "start": "9722760",
    "end": "9730160"
  },
  {
    "text": "the invoke the function why the authentication is not actually working I",
    "start": "9730160",
    "end": "9735439"
  },
  {
    "text": "will uh work on it I'll keep working on it of line and see if I can get this",
    "start": "9735439",
    "end": "9742680"
  },
  {
    "text": "answered to you guys and I'll I'll certainly uh make sure you get this",
    "start": "9742680",
    "end": "9748720"
  },
  {
    "text": "information back so um if I need",
    "start": "9748720",
    "end": "9756200"
  },
  {
    "text": "the oh yeah and so I do need the access control if I",
    "start": "9760279",
    "end": "9769600"
  },
  {
    "text": "need the access control allow credentials through on the on the request",
    "start": "9769600",
    "end": "9777080"
  },
  {
    "text": "well I don't know about this because this should be set by the by by the SDK",
    "start": "9777080",
    "end": "9783880"
  },
  {
    "text": "and of course I'm not being able to to get that",
    "start": "9783880",
    "end": "9789000"
  },
  {
    "text": "to work through the generated SDK and it's probably a matter of the",
    "start": "9789000",
    "end": "9795080"
  },
  {
    "text": "generated SDK credentials management but I will figure it out and get back to you",
    "start": "9795080",
    "end": "9802960"
  },
  {
    "text": "guys I know that I can just ship it on the authorization header and this would",
    "start": "9802960",
    "end": "9808479"
  },
  {
    "text": "make it work on regular JavaScript but I really would like to use the generated",
    "start": "9808479",
    "end": "9815000"
  },
  {
    "text": "SDK so um I hope you guys saw that we",
    "start": "9815000",
    "end": "9820760"
  },
  {
    "text": "can leverage and invoke Lambda functions and how do we exchange the the client",
    "start": "9820760",
    "end": "9830160"
  },
  {
    "text": "the keys successfully and how user dat the user Pool Works and how Federated",
    "start": "9830160",
    "end": "9836840"
  },
  {
    "text": "identities allow you to get AWS temporary AWS credentials for a role and",
    "start": "9836840",
    "end": "9843640"
  },
  {
    "text": "this is the most important thing and that with uh user PS and identity",
    "start": "9843640",
    "end": "9851640"
  },
  {
    "text": "Federation you can manage your identity and your applications as we as we did",
    "start": "9851640",
    "end": "9858399"
  },
  {
    "text": "here for our simple react app so we now have user registration login",
    "start": "9858399",
    "end": "9864160"
  },
  {
    "text": "confirmation and things like this and we did invoke our Lambda function",
    "start": "9864160",
    "end": "9869840"
  },
  {
    "text": "successfully with the correct authentication I'm just having a few",
    "start": "9869840",
    "end": "9875080"
  },
  {
    "text": "issues with the API Gateway generated client that I will get back to you guys",
    "start": "9875080",
    "end": "9882240"
  },
  {
    "text": "next week when I have it fixed and we will also because we are now almost on",
    "start": "9882240",
    "end": "9888399"
  },
  {
    "text": "three hours of of streaming but I will certainly get",
    "start": "9888399",
    "end": "9893600"
  },
  {
    "text": "back to you guys with this in the next session where we'll also go for data",
    "start": "9893600",
    "end": "9900880"
  },
  {
    "text": "with Cognito okay and I will um I will",
    "start": "9900880",
    "end": "9906760"
  },
  {
    "text": "just right now and and just Commit This to our break",
    "start": "9906760",
    "end": "9913960"
  },
  {
    "text": "our breakless repo so um",
    "start": "9913960",
    "end": "9920000"
  },
  {
    "text": "I will commit this so you guys have this app have this code",
    "start": "9920000",
    "end": "9927641"
  },
  {
    "text": "and code authentication with",
    "start": "9928279",
    "end": "9935520"
  },
  {
    "text": "Cognito user pool and identity",
    "start": "9935520",
    "end": "9944240"
  },
  {
    "text": "[Music] Federation and more to do I will all",
    "start": "9944490",
    "end": "9953880"
  },
  {
    "text": "with SDK with generated SDK",
    "start": "9953880",
    "end": "9960359"
  },
  {
    "text": "okay it's probably something silly I did this before I don't know what's missing",
    "start": "9960359",
    "end": "9965720"
  },
  {
    "text": "here I will debug this and make sure it's the the best possible uh pattern",
    "start": "9965720",
    "end": "9971880"
  },
  {
    "text": "and good coding practices take a clean up in this code and see you guys next",
    "start": "9971880",
    "end": "9978319"
  },
  {
    "text": "time and and I really uh hope that you guys uh understood this and how client",
    "start": "9978319",
    "end": "9985680"
  },
  {
    "text": "operations work it is a bit confusing to get all those tokens and providers set",
    "start": "9985680",
    "end": "9992000"
  },
  {
    "text": "up but once it's clear it certainly does make total sense and now you guys have",
    "start": "9992000",
    "end": "9998399"
  },
  {
    "text": "the code that's required to do it and next week we're going to follow up with",
    "start": "9998399",
    "end": "10004520"
  },
  {
    "text": "um the proper way to invoke this apis and how to we get those and how to make",
    "start": "10004520",
    "end": "10010760"
  },
  {
    "text": "the the data and start building data access and data collection and really",
    "start": "10010760",
    "end": "10015920"
  },
  {
    "text": "turn this into an app and let me know what you guys would like to code and see",
    "start": "10015920",
    "end": "10022279"
  },
  {
    "text": "you next time and stay tuned uh on JM Fairman on Twitter and I will always",
    "start": "10022279",
    "end": "10030640"
  },
  {
    "text": "post the the updated schedule it will be",
    "start": "10030640",
    "end": "10037040"
  },
  {
    "text": "always on the on the TW Channel and AWS Cloud's been tweeting that too but I am",
    "start": "10037040",
    "end": "10044920"
  },
  {
    "text": "JM fireman on Twitter so let's just let me just paste this here for you guys",
    "start": "10044920",
    "end": "10053399"
  },
  {
    "text": "and let me know if you have any questions on today or any other episodes",
    "start": "10053399",
    "end": "10059279"
  },
  {
    "text": "content and the code is there on the on the gist that we us it today all the",
    "start": "10059279",
    "end": "10066080"
  },
  {
    "text": "documentations and everything we said to today is here and see you next time",
    "start": "10066080",
    "end": "10072680"
  },
  {
    "text": "bye-bye",
    "start": "10072680",
    "end": "10075680"
  }
]