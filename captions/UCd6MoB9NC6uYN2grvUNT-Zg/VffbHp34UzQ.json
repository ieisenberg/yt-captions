[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "alright let's get started welcome everyone thanks for joining this deep dive on",
    "start": "350",
    "end": "6150"
  },
  {
    "text": "Amazon EFS my name is Edward name and I lead the product team for EFS and",
    "start": "6150",
    "end": "11880"
  },
  {
    "text": "joining me is Darrel Osborne who is a Solutions Architect at AWS and he leads",
    "start": "11880",
    "end": "17340"
  },
  {
    "text": "solutions architecture for EFS I'm really excited to be here we have lots",
    "start": "17340",
    "end": "22859"
  },
  {
    "text": "of content planned for this session and we have a new feature that we released last week that we're gonna give you some",
    "start": "22859",
    "end": "27900"
  },
  {
    "text": "details on and do a little demo on as well so excited about the session and let's get started",
    "start": "27900",
    "end": "35239"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "the session is structured around the four phases people people commonly go",
    "start": "35239",
    "end": "40590"
  },
  {
    "text": "through when they're choosing and adopting a storage solution so what are those phases well the first phase is",
    "start": "40590",
    "end": "47129"
  },
  {
    "text": "choosing the right storage solution so what actually makes sense for your workload and for your application the",
    "start": "47129",
    "end": "53640"
  },
  {
    "text": "second is testing that solution both functionally and for performance and potentially optimizing your application",
    "start": "53640",
    "end": "60930"
  },
  {
    "text": "to take advantage of the performance attributes for the the storage solution that you're looking at the third phase",
    "start": "60930",
    "end": "67229"
  },
  {
    "text": "is ingest and that's really moving data moving your application data your production data into the onto the",
    "start": "67229",
    "end": "74130"
  },
  {
    "text": "solution into the service and then finally there's running it so operating it in production and we'll walk through",
    "start": "74130",
    "end": "80100"
  },
  {
    "text": "each of these phases during this session and let's let's dive right in so phase 1",
    "start": "80100",
    "end": "87090"
  },
  {
    "text": "choosing the right storage solution so there are three main things but people think about when they're choosing a",
    "start": "87090",
    "end": "93570"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "storage solution so the first is what storage type should I choose and different types of storage offer",
    "start": "93570",
    "end": "100439"
  },
  {
    "text": "different interfaces different semantics different permissions models different",
    "start": "100439",
    "end": "105689"
  },
  {
    "text": "features so really choosing what type of storage makes sense for the application that you're your building or the",
    "start": "105689",
    "end": "111869"
  },
  {
    "text": "application that you're going to be running the second is features and performance so what are the what are the",
    "start": "111869",
    "end": "118369"
  },
  {
    "text": "the different aspects of the solution that are important for your workload and how do the solutions that you're",
    "start": "118369",
    "end": "124500"
  },
  {
    "text": "considering meet those meet those needs and then finally there's economics so what's what's the TCO how much does it",
    "start": "124500",
    "end": "130500"
  },
  {
    "text": "cost to operate this let's talk about each of those in turn so generally there are three types of",
    "start": "130500",
    "end": "136420"
  },
  {
    "text": "storage there's file storage block storage and object storage and what's file storage",
    "start": "136420",
    "end": "143050"
  },
  {
    "text": "if data is stored as files hopefully don't have to define what a file is and there's a directory hierarchy that all",
    "start": "143050",
    "end": "149410"
  },
  {
    "text": "these files are part of and there's particular metadata associated with each file so in other words your data is",
    "start": "149410",
    "end": "155920"
  },
  {
    "text": "stored natively in a file system and when we talk about file in the enterprise context and we talked about",
    "start": "155920",
    "end": "162280"
  },
  {
    "text": "at AWS we're really talking about shared file so data that can be accessed by",
    "start": "162280",
    "end": "167500"
  },
  {
    "text": "multiple servers concurrently doing some sort of workload where you need to share",
    "start": "167500",
    "end": "173230"
  },
  {
    "text": "the data so you can think of it almost as network attached storage which is a concept that's that's common in the",
    "start": "173230",
    "end": "180370"
  },
  {
    "text": "on-prem world and then we have block storage where you have a disk or you",
    "start": "180370",
    "end": "186430"
  },
  {
    "text": "have a set of disks attached to a single computer and data stored in chunks called blocks and you can think of that",
    "start": "186430",
    "end": "192640"
  },
  {
    "text": "as local attached storage or local attached disks and then finally there's object storage where your data is stored",
    "start": "192640",
    "end": "199720"
  },
  {
    "text": "in a container called an object and each object is identified by a unique key and",
    "start": "199720",
    "end": "204960"
  },
  {
    "text": "your objects are stored in a flat hierarchy so in other words there's not a a or sorry in a flat structure so",
    "start": "204960",
    "end": "211600"
  },
  {
    "text": "there's not a hierarchical structure behind it and object storage provides a super simple API for putting data and",
    "start": "211600",
    "end": "218800"
  },
  {
    "text": "getting data and commonly that API is called over the Internet so why is file storage",
    "start": "218800",
    "end": "226450"
  },
  {
    "text": "so popular three reasons so the first is it works natively with operating systems",
    "start": "226450",
    "end": "232470"
  },
  {
    "text": "operating systems are designed around file storage file systems are the abstraction that's used for displaying",
    "start": "232470",
    "end": "238900"
  },
  {
    "text": "data to end users and operating systems provide api's that allow you to work",
    "start": "238900",
    "end": "243940"
  },
  {
    "text": "with file data from your applications secondly provide shared access will",
    "start": "243940",
    "end": "250420"
  },
  {
    "text": "providing consistency guarantees and locking functionality so that's super useful both of those are super useful",
    "start": "250420",
    "end": "255610"
  },
  {
    "text": "for distributed applications where you have multiple readers multiple writers that are interacting with the same set",
    "start": "255610",
    "end": "261549"
  },
  {
    "text": "of data and you want to understand what kind of consistency you can get and you want guarantees around consistency and then finally provides a",
    "start": "261549",
    "end": "268690"
  },
  {
    "text": "hierarchical namespace which is just a helpful and natural way to organize data and then another aspect to think about",
    "start": "268690",
    "end": "276039"
  },
  {
    "start": "274000",
    "end": "274000"
  },
  {
    "text": "when you're choosing the type of storage is what is the performance that you get with each and on this graph on the",
    "start": "276039",
    "end": "281320"
  },
  {
    "text": "x-axis we're showing latency on the y-axis throughput and you see the block",
    "start": "281320",
    "end": "286600"
  },
  {
    "text": "storage is the lowest latency of the three and this is a general statement about these types of storage",
    "start": "286600",
    "end": "292900"
  },
  {
    "text": "so generally lowest latency is blocked but it doesn't scale to the throughput that you would get from file storage or",
    "start": "292900",
    "end": "299110"
  },
  {
    "text": "object storage and so block is very commonly used for database applications or boot volumes where you just need",
    "start": "299110",
    "end": "305919"
  },
  {
    "text": "access from a single server and you want the lowest possible latencies because both of those things are latency",
    "start": "305919",
    "end": "311500"
  },
  {
    "text": "sensitive use cases and then file generally is designed for consistent low",
    "start": "311500",
    "end": "316690"
  },
  {
    "text": "latency because that's important for a lot of applications but it's also designed to scale to tens of gigabytes",
    "start": "316690",
    "end": "322240"
  },
  {
    "text": "per second of throughput so it's it actually has a good mix of kind of latency and throughput good balance of",
    "start": "322240",
    "end": "328690"
  },
  {
    "text": "those two and then object provides the highest level of throughput scale but",
    "start": "328690",
    "end": "333849"
  },
  {
    "text": "it's not designed for latency sensitive applications and so you're all here",
    "start": "333849",
    "end": "341409"
  },
  {
    "start": "340000",
    "end": "340000"
  },
  {
    "text": "because I assume you're at least thinking about file storage for one or more of your workloads we launched EFS",
    "start": "341409",
    "end": "347770"
  },
  {
    "text": "about a year and a half ago and before EFS if you wanted to run file storage shared file on AWS you basically needed",
    "start": "347770",
    "end": "355720"
  },
  {
    "text": "to do it yourself and so what did that setup typically look like well typically you would have a mirrored set up across",
    "start": "355720",
    "end": "362260"
  },
  {
    "text": "at least two AZ's where you'd have a primary AZ that has really the primary workload and then you have a backup",
    "start": "362260",
    "end": "368889"
  },
  {
    "text": "that's there for availability reasons and for data durability reasons and then in each of these mirrored AZ's you would",
    "start": "368889",
    "end": "375520"
  },
  {
    "text": "have a file server like an NFS server that's running on an ec2 instance you'd",
    "start": "375520",
    "end": "380650"
  },
  {
    "text": "have storage volumes that are actually storing the data typically EBS volumes and then you would have traffic that's",
    "start": "380650",
    "end": "387099"
  },
  {
    "text": "moving across the EZ boundaries to replicate to your Europe your backup and",
    "start": "387099",
    "end": "392260"
  },
  {
    "text": "then in the backup you'd have the file servers and the volumes as well so you",
    "start": "392260",
    "end": "397510"
  },
  {
    "text": "had to manage all of this stuff you had to operate the file servers and disks you had to patch the file servers",
    "start": "397510",
    "end": "403750"
  },
  {
    "text": "you have to be responsible for replicating the data you had to manage failover so this was the before and now we have",
    "start": "403750",
    "end": "411670"
  },
  {
    "text": "Amazon EFS which is our native fully managed file service and when we",
    "start": "411670",
    "end": "418360"
  },
  {
    "start": "417000",
    "end": "417000"
  },
  {
    "text": "designed EFS our core tenets were to make it simple elastic and scalable on",
    "start": "418360",
    "end": "424360"
  },
  {
    "text": "top of foundation of high availability and high durability so what makes it so",
    "start": "424360",
    "end": "431320"
  },
  {
    "text": "simple well it's fully managed so there's no hardware to manage no network to think about no file layer to manage",
    "start": "431320",
    "end": "437470"
  },
  {
    "text": "and it's so simple that you can create a scalable file system a file system that can grow to a petabyte scale in a matter",
    "start": "437470",
    "end": "443560"
  },
  {
    "text": "of seconds and it also has very simple pricing you simply pay for the number of bytes or for the volume of bytes that",
    "start": "443560",
    "end": "450160"
  },
  {
    "text": "are being stored and there's no fees beyond that and we'll get them to a little more detail on the pricing in",
    "start": "450160",
    "end": "457780"
  },
  {
    "text": "terms of elasticity file systems grow and shrink automatically as you add and remove data and there's no need to",
    "start": "457780",
    "end": "464530"
  },
  {
    "text": "provision capacity or performance and as I mentioned you're paying only for what you actually use and then EFS is",
    "start": "464530",
    "end": "473230"
  },
  {
    "text": "designed to be super scalable file systems can grow to petabytes of capacity throughput scales automatically",
    "start": "473230",
    "end": "479560"
  },
  {
    "text": "as file systems grow and you get even as a file system scales you get consistent",
    "start": "479560",
    "end": "485229"
  },
  {
    "text": "low latencies and in terms of scale EFS also is designed to support thousands of",
    "start": "485229",
    "end": "491260"
  },
  {
    "text": "concurrent connections so you can have thousands of servers connected to the same file system and then it's designed",
    "start": "491260",
    "end": "499510"
  },
  {
    "text": "to be highly available and durable so every file system object is redundant leased or across multiple availability",
    "start": "499510",
    "end": "505510"
  },
  {
    "text": "zones and it's it's a strong form of consistency and what that allows one",
    "start": "505510",
    "end": "512530"
  },
  {
    "text": "thing that allows is if an AZ is offline you're still able to access your full set of data from other AZ's in the",
    "start": "512530",
    "end": "518710"
  },
  {
    "text": "region and so that makes the FS appropriate for production and tier 0 applications and we designed EFS to",
    "start": "518710",
    "end": "527740"
  },
  {
    "text": "serve the vast majority of file workloads and really covering a wide spectrum of",
    "start": "527740",
    "end": "533200"
  },
  {
    "text": "performance needs so from big data applications that are massively parallel eyes and require the highest possible",
    "start": "533200",
    "end": "539709"
  },
  {
    "text": "throughput where you might have tens hundreds thousands of ec2 instances accessing the same set of data each one",
    "start": "539709",
    "end": "545860"
  },
  {
    "text": "driving as much throughput as possible to single threaded latency sensitive workloads so we really wanted to cover",
    "start": "545860",
    "end": "552399"
  },
  {
    "text": "the spectrum and this is this is probably my favorite slide in the",
    "start": "552399",
    "end": "558730"
  },
  {
    "start": "556000",
    "end": "556000"
  },
  {
    "text": "presentation because we launched DFS about 18 months ago and it's just so",
    "start": "558730",
    "end": "565360"
  },
  {
    "text": "exciting to see how customers are using EFS today for a diverse spectrum of",
    "start": "565360",
    "end": "570399"
  },
  {
    "text": "workloads and I won't go through all these logos but I'll talk about a couple of the the logos on the slide so first",
    "start": "570399",
    "end": "577420"
  },
  {
    "text": "database backups you have companies like JD Power and Cisco and what they're doing is they're backing up databases so",
    "start": "577420",
    "end": "583480"
  },
  {
    "text": "they have databases that are on EBS volumes and I want to back them up and they love how EFS is completely elastic",
    "start": "583480",
    "end": "590260"
  },
  {
    "text": "so they don't need to to worry about running out of backup space they don't need to worry about provisioning volumes",
    "start": "590260",
    "end": "595510"
  },
  {
    "text": "and dealing with that management side of it they can just throw data on there throw their backups on there and it just",
    "start": "595510",
    "end": "600550"
  },
  {
    "text": "grows and as they delete the backups at shrinks meeting entertainment workflows",
    "start": "600550",
    "end": "605560"
  },
  {
    "text": "EFS has become really popular for things like transcoding and processing and you",
    "start": "605560",
    "end": "610630"
  },
  {
    "text": "have companies like Zynga that are using EFS with their online games for enterprise applications you have",
    "start": "610630",
    "end": "616870"
  },
  {
    "text": "Atlassian using it for jira storage they use it for their own internal JIRA deployment and they also recommend that",
    "start": "616870",
    "end": "622899"
  },
  {
    "text": "customers that want to deploy JIRA on AWS do it on top of EFS we have Cardinal",
    "start": "622899",
    "end": "628690"
  },
  {
    "text": "health which is a global healthcare services company and they use EFS with IBM InfoSphere in terms of development",
    "start": "628690",
    "end": "635410"
  },
  {
    "text": "tools GES using EFS for version control software and Zend is using it for PHP",
    "start": "635410",
    "end": "640839"
  },
  {
    "text": "applications we have adobe using development environments with EFS as well and then home directories companies",
    "start": "640839",
    "end": "647319"
  },
  {
    "text": "like Coursera it's an online education company container storage we have Netflix we have here there's actually an",
    "start": "647319",
    "end": "654100"
  },
  {
    "text": "interesting presentation that we did yesterday it's it's online you can see",
    "start": "654100",
    "end": "659260"
  },
  {
    "text": "the video we're here actually talked about a different use case where they actually are using EFS to store",
    "start": "659260",
    "end": "664899"
  },
  {
    "text": "development environment artifacts and they're storing 1.2 million artifacts on EFS that are accessed by a",
    "start": "664899",
    "end": "672060"
  },
  {
    "text": "thousand users so it's an it's an interesting one if you're curious about that use case then web serving and",
    "start": "672060",
    "end": "678270"
  },
  {
    "text": "content management Thomson Reuters is doing a session later this week they're talking about how they use the efest for",
    "start": "678270",
    "end": "683459"
  },
  {
    "text": "their web sites they serve 220 million views per month and FINRA is an",
    "start": "683459",
    "end": "688709"
  },
  {
    "text": "organization that's using it for web sites as well digital real AB is also here this week they're talking about EFS for powering",
    "start": "688709",
    "end": "695250"
  },
  {
    "text": "their vast media archive and then we have big data and analytics workloads so Monsanto they have a video online about",
    "start": "695250",
    "end": "701670"
  },
  {
    "text": "how they use EFS to power a large geospatial analytics platform toast which is a point of sales a company the",
    "start": "701670",
    "end": "710910"
  },
  {
    "text": "targets the restaurant industry uses EFS as a low cost replacement for HDFS and then costura",
    "start": "710910",
    "end": "717000"
  },
  {
    "text": "they do retail marketing analytics and they're using EFS for data ingestion and analytics platforms it's a really a very",
    "start": "717000",
    "end": "723779"
  },
  {
    "text": "wide variety of use cases which is really exciting so one aspect of",
    "start": "723779",
    "end": "732120"
  },
  {
    "start": "729000",
    "end": "729000"
  },
  {
    "text": "features that you should think about when you're considering a storage solution is what is a security model and",
    "start": "732120",
    "end": "737790"
  },
  {
    "text": "what security features do you get so with EFS you control network traffic",
    "start": "737790",
    "end": "742830"
  },
  {
    "text": "using Amazon EPC security groups and network ackles so you can control what",
    "start": "742830",
    "end": "747959"
  },
  {
    "text": "instances within your V PC have access to which file systems using those mechanisms you can control file and",
    "start": "747959",
    "end": "753930"
  },
  {
    "text": "directory access using standard POSIX permissions you can control administrative access or the ability to",
    "start": "753930",
    "end": "760170"
  },
  {
    "text": "create file systems delete file systems using I am and in August we announced",
    "start": "760170",
    "end": "765660"
  },
  {
    "text": "the ability to encrypt your data at rest using keys managed in AWS kms or key",
    "start": "765660",
    "end": "771480"
  },
  {
    "text": "management service and you can access",
    "start": "771480",
    "end": "777480"
  },
  {
    "text": "EFS from various environments so of course you can access it from ec2 instances in your V PC you can access it",
    "start": "777480",
    "end": "784290"
  },
  {
    "text": "from servers in your corporate data center over direct connect connections and we'll talk a little bit about that a little later in the session and we",
    "start": "784290",
    "end": "791910"
  },
  {
    "text": "announced this morning actually that you can now access EFS from your VMware cloud on AWS software-defined data",
    "start": "791910",
    "end": "798270"
  },
  {
    "text": "centers so you have full access to EF resources from from those environments and about about the",
    "start": "798270",
    "end": "808230"
  },
  {
    "text": "economics so as I mentioned you pay one flat rate for EFS and in u.s. regions",
    "start": "808230",
    "end": "814980"
  },
  {
    "text": "that's 30 cents per gigabyte per month and that's based on just the amount of",
    "start": "814980",
    "end": "820020"
  },
  {
    "text": "data that you're storing so again it's not a provision model it's a fully elastic model so one question people",
    "start": "820020",
    "end": "827670"
  },
  {
    "text": "often ask me is how do you think about that 30 cents is that a good deal or is like how do you think about it so one",
    "start": "827670",
    "end": "834540"
  },
  {
    "text": "way to think about it is to go back to what I was talking about earlier in the presentation which is well if you did",
    "start": "834540",
    "end": "840480"
  },
  {
    "text": "this on your own what would it what would the cost be and so if you did this on your own this is this is what we",
    "start": "840480",
    "end": "846000"
  },
  {
    "text": "looked at before you have a mirrored setup and two ways and you have your file servers your storage volumes so you",
    "start": "846000",
    "end": "852180"
  },
  {
    "text": "have you're paying for ec2 instances that are powering your file servers and you're paying for one and your primary",
    "start": "852180",
    "end": "857970"
  },
  {
    "text": "is the one in your backup easy you're paying for EBS volume costs and again",
    "start": "857970",
    "end": "863670"
  },
  {
    "text": "you're paying for two sets of those and you're paying for inter easy data transfer costs this is the replication",
    "start": "863670",
    "end": "870810"
  },
  {
    "text": "traffic that's going between AZ's and so let's look at some specific numbers with",
    "start": "870810",
    "end": "876690"
  },
  {
    "text": "that example so for example if you're storing 500 gigabytes of data on EFS your cost would be one hundred and fifty",
    "start": "876690",
    "end": "883770"
  },
  {
    "text": "dollars a month so 500 times 30 cents if you're doing it yourself you'd probably provision around 600 gigs",
    "start": "883770",
    "end": "890280"
  },
  {
    "text": "of EBS because you're not gonna provision exactly as much as you need you know completely fill your volume so",
    "start": "890280",
    "end": "897240"
  },
  {
    "text": "your storage costs for EBS would be $120 per month your server costs your ec2",
    "start": "897240",
    "end": "902730"
  },
  {
    "text": "instance costs using two m4x large instances would be 290 a month and just",
    "start": "902730",
    "end": "908130"
  },
  {
    "text": "the inter easy traffic for a pretty standard type of workload would be hundred $30 a month that comes to 540",
    "start": "908130",
    "end": "915450"
  },
  {
    "text": "dollars a month so it's one way to think about EFS is TCO and to put it into",
    "start": "915450",
    "end": "922080"
  },
  {
    "text": "context and EFS is available in six",
    "start": "922080",
    "end": "927390"
  },
  {
    "text": "regions today and we're actively working to get it in many many more regions",
    "start": "927390",
    "end": "933680"
  },
  {
    "text": "coming soon so and if that's is part of",
    "start": "933680",
    "end": "940190"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "a broader set of of data building blocks within AWS so we have our core storage services we",
    "start": "940190",
    "end": "947810"
  },
  {
    "text": "have EFS for file our block storages EBS object storage is s3 and our archive",
    "start": "947810",
    "end": "954380"
  },
  {
    "text": "storage is glacier which is also considered object storage and those are supported by a whole bunch of data",
    "start": "954380",
    "end": "961070"
  },
  {
    "text": "movement tools and data movement services and data security and management tools and services and what",
    "start": "961070",
    "end": "970130"
  },
  {
    "text": "we announced last week that I alluded to earlier was a feature called EFS file sync and what EFS file sync allows you",
    "start": "970130",
    "end": "977480"
  },
  {
    "text": "to do is to easily and quickly move data in your move data to your EFS file",
    "start": "977480",
    "end": "983240"
  },
  {
    "text": "systems from existing on Prem or on cloud file systems and it does it around",
    "start": "983240",
    "end": "988339"
  },
  {
    "text": "five times faster than traditional Linux copy tools it does it in a highly secure way and it does it fast and it's super",
    "start": "988339",
    "end": "995720"
  },
  {
    "text": "simple so Darryl is gonna talk about it a little later in this presentation give some more details and actually do a",
    "start": "995720",
    "end": "1000970"
  },
  {
    "text": "walk-through of that so let's go to the next phase so testing and optimizing so",
    "start": "1000970",
    "end": "1007480"
  },
  {
    "text": "hopefully at this point you've made your selection of the type of storage you want hopefully you've selected EFS and",
    "start": "1007480",
    "end": "1013870"
  },
  {
    "text": "now what do you think about at this point so when testing and optimizing several things to think about so the first is",
    "start": "1013870",
    "end": "1020800"
  },
  {
    "text": "understanding what your architecture is going to be so what is it going to look like deployed the second is conducting",
    "start": "1020800",
    "end": "1027130"
  },
  {
    "text": "functional testing and a third is conducting performance testing and if you like optimizing your application to",
    "start": "1027130",
    "end": "1033308"
  },
  {
    "text": "take advantage of EFSA's performance attributes so in terms of architecture",
    "start": "1033309",
    "end": "1039280"
  },
  {
    "start": "1038000",
    "end": "1038000"
  },
  {
    "text": "and kind of deployment model what it looks like on EFS so here's what a DFS",
    "start": "1039280",
    "end": "1044740"
  },
  {
    "text": "setup looks like what you do when you create a file system is you create endpoints in your V PC we call these",
    "start": "1044740",
    "end": "1052090"
  },
  {
    "text": "endpoints mount targets and the an endpoint exposes an IP address and a dns",
    "start": "1052090",
    "end": "1057160"
  },
  {
    "text": "name that you use in your mount command from your Linux instances to mount the filesystem and so what you can have is",
    "start": "1057160",
    "end": "1064840"
  },
  {
    "text": "you have these mount targets and of your AZ's within your VPC you can",
    "start": "1064840",
    "end": "1070210"
  },
  {
    "text": "have your NFS clients your ec2 instances spread across a ZZZ within that VPC and",
    "start": "1070210",
    "end": "1075519"
  },
  {
    "text": "all of them are accessing all of them have the EFS filesystem mounted and are accessing them concurrently and you",
    "start": "1075519",
    "end": "1084220"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "manage file systems through the EFS API there's actually not a whole lot to do",
    "start": "1084220",
    "end": "1090519"
  },
  {
    "text": "in terms of management there's not a lot of levers to pull or dials to turn that was part of our design so there's things like creating a file system creating and",
    "start": "1090519",
    "end": "1097720"
  },
  {
    "text": "managing these mount targets or these endpoints deleting a file system so all that's exposed to the API and of course",
    "start": "1097720",
    "end": "1104830"
  },
  {
    "text": "to the CLI the SDK the console and then",
    "start": "1104830",
    "end": "1110259"
  },
  {
    "start": "1109000",
    "end": "1109000"
  },
  {
    "text": "for functionally testing the good news is that things should just work EFS is",
    "start": "1110259",
    "end": "1115690"
  },
  {
    "text": "standards compliant POSIX compliant NFS 4.0 and 4.1 compliant and most",
    "start": "1115690",
    "end": "1122139"
  },
  {
    "text": "Enterprise Linux applications are designed to work with those standards but of course we should always test and",
    "start": "1122139",
    "end": "1127570"
  },
  {
    "text": "use your actual application use your actual workload but not a whole lot of headaches on the functional testing",
    "start": "1127570",
    "end": "1133570"
  },
  {
    "text": "front so I'm going to turn over to Darryl now to talk about performance and dive deep on that right thanks ed so",
    "start": "1133570",
    "end": "1143620"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "there's two different performance modes available to Amazon EFS file systems when you create them the first is",
    "start": "1143620",
    "end": "1151929"
  },
  {
    "text": "general-purpose this is really the default performance mode and it's really ideal for most applications out there it",
    "start": "1151929",
    "end": "1159879"
  },
  {
    "text": "has the lowest latency of either performance mode that we provide and",
    "start": "1159879",
    "end": "1165399"
  },
  {
    "text": "it's really the best choice for most applications and workloads the other",
    "start": "1165399",
    "end": "1170590"
  },
  {
    "text": "performance mode is max IO and that's really designed for large-scale",
    "start": "1170590",
    "end": "1176049"
  },
  {
    "text": "scale out architectures and workloads where you need to scale out to you know",
    "start": "1176049",
    "end": "1182320"
  },
  {
    "text": "hundreds or even thousands of instances virtually an unlimited amount of storage",
    "start": "1182320",
    "end": "1190419"
  },
  {
    "text": "and throughput and I ops is available using max il file systems but there is a",
    "start": "1190419",
    "end": "1197889"
  },
  {
    "text": "trade-off between the two so with GP our general purpose mode filesystems there is a sort of a",
    "start": "1197889",
    "end": "1204760"
  },
  {
    "text": "limit of 7,000 file system operations per second so if your application",
    "start": "1204760",
    "end": "1210820"
  },
  {
    "text": "requires low latency access and can live within a 7000 file system operations per",
    "start": "1210820",
    "end": "1216640"
  },
  {
    "text": "second model general purpose mode file systems is really ideal for you if you",
    "start": "1216640",
    "end": "1223120"
  },
  {
    "text": "need to scale out to hundreds and thousands of instances where your needs",
    "start": "1223120",
    "end": "1229570"
  },
  {
    "text": "are going to exceed 7000 file system operations per second then you may look",
    "start": "1229570",
    "end": "1234640"
  },
  {
    "text": "at max i/o now they trade-off here though is with max I oh there's a",
    "start": "1234640",
    "end": "1239920"
  },
  {
    "text": "slightly higher file system operations per second latency so you need to really again as they'd mentioned test out your",
    "start": "1239920",
    "end": "1247600"
  },
  {
    "text": "application and see which file system works best for you if you do select a",
    "start": "1247600",
    "end": "1254170"
  },
  {
    "text": "general-purpose mode file system we do expose a CloudWatch metric percent IO",
    "start": "1254170",
    "end": "1259840"
  },
  {
    "text": "limit that will let you know how close you are to that 7000 file system",
    "start": "1259840",
    "end": "1266110"
  },
  {
    "text": "operations per second as a percentage so you can monitor this you can see where",
    "start": "1266110",
    "end": "1272020"
  },
  {
    "text": "your your workload sits within this really within this threshold and see if",
    "start": "1272020",
    "end": "1279310"
  },
  {
    "text": "you need to you know maintain and stay with the general-purpose mode file system or possibly migrate and move over",
    "start": "1279310",
    "end": "1285400"
  },
  {
    "text": "to and move your data over to a max IO file system so EFS is a distributed data",
    "start": "1285400",
    "end": "1295570"
  },
  {
    "start": "1291000",
    "end": "1291000"
  },
  {
    "text": "storage design a file system is really",
    "start": "1295570",
    "end": "1301030"
  },
  {
    "text": "stored across an unconstrained number of storage servers on multiple storage",
    "start": "1301030",
    "end": "1306130"
  },
  {
    "text": "servers across multiple availability zones within the region that you create your file system it really avoids you",
    "start": "1306130",
    "end": "1314200"
  },
  {
    "text": "know you avoid some of the bottlenecks that are typical with you know a network attached storage device just because of",
    "start": "1314200",
    "end": "1320950"
  },
  {
    "text": "the the nature of this distributed design as a part of this you also",
    "start": "1320950",
    "end": "1326140"
  },
  {
    "text": "benefit from high availability and high durability because again your data is",
    "start": "1326140",
    "end": "1332100"
  },
  {
    "text": "strongly consistent across availability zones so often I get asked",
    "start": "1332100",
    "end": "1339880"
  },
  {
    "text": "well what's the difference between EFS and EBS so I'm not going to go through",
    "start": "1339880",
    "end": "1346390"
  },
  {
    "text": "this entire chart but I just want to highlight a couple of areas one the",
    "start": "1346390",
    "end": "1351610"
  },
  {
    "text": "throughput scale as Edie mentioned earlier we're able to get gigabytes and gigabytes per second throughput with a",
    "start": "1351610",
    "end": "1357820"
  },
  {
    "text": "file system like Amazon EFS based on the previous slide that distributed data",
    "start": "1357820",
    "end": "1362890"
  },
  {
    "text": "storage design were able to continue to scale out and achieve very high levels",
    "start": "1362890",
    "end": "1367930"
  },
  {
    "text": "of throughput and ions also when it comes to access EFS can be mounted to",
    "start": "1367930",
    "end": "1375040"
  },
  {
    "text": "one or thousands of NFS clients ec2 instances or even servers on Prem over",
    "start": "1375040",
    "end": "1382510"
  },
  {
    "text": "say a Direct Connect connection while with EBS you can mount a single EBS",
    "start": "1382510",
    "end": "1387940"
  },
  {
    "text": "volume to a single ec2 instance so keep",
    "start": "1387940",
    "end": "1395800"
  },
  {
    "text": "in mind though that due to the per operation latency of a distributed storage design like EFS overall",
    "start": "1395800",
    "end": "1403330"
  },
  {
    "text": "throughput is generally increases as the average IO size increases since the",
    "start": "1403330",
    "end": "1410380"
  },
  {
    "text": "overhead is amortized over a larger amount of data so by IO size here I mean",
    "start": "1410380",
    "end": "1416950"
  },
  {
    "text": "that the amount of data you're reading and writing in a single operation",
    "start": "1416950",
    "end": "1422580"
  },
  {
    "text": "EFSA's is designed to process high volumes of concurrent operations on a",
    "start": "1430509",
    "end": "1436009"
  },
  {
    "text": "file system you can send multiple operations in parallel to EF s using",
    "start": "1436009",
    "end": "1442279"
  },
  {
    "text": "multiple threads and multiple instances so in this graph we held io size",
    "start": "1442279",
    "end": "1448309"
  },
  {
    "text": "constant but we had ten instances and we increased the number of threads per",
    "start": "1448309",
    "end": "1453559"
  },
  {
    "text": "instance isn't and as you can see as we increase the number of threads our eye",
    "start": "1453559",
    "end": "1459740"
  },
  {
    "text": "ops also increased so again this lends itself to this distributed data design",
    "start": "1459740",
    "end": "1466129"
  },
  {
    "text": "of VF s as we can continue to scale out to larger and higher levels of",
    "start": "1466129",
    "end": "1472370"
  },
  {
    "text": "throughput and ions so there are a number of mount options that you can use",
    "start": "1472370",
    "end": "1479149"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "to to mount NFS systems we do recommend sort of the default mount options when",
    "start": "1479149",
    "end": "1486379"
  },
  {
    "text": "mounting EFS to an ec2 instance we recommend Linux kernel four and above",
    "start": "1486379",
    "end": "1491690"
  },
  {
    "text": "and we also recommend using NFS client 4.1 one of the options that we do",
    "start": "1491690",
    "end": "1500000"
  },
  {
    "text": "recommend is really the the one megabyte read and write buffer size but that's really one of the defaults and all of",
    "start": "1500000",
    "end": "1506870"
  },
  {
    "text": "these mount options are available you can read about them in our documentation",
    "start": "1506870",
    "end": "1513398"
  },
  {
    "text": "so because filesystem workloads are typically spiky in nature driving high",
    "start": "1514929",
    "end": "1521090"
  },
  {
    "text": "levels of throughput for a short period of time and then lower levels of throughput for the remaining of the time",
    "start": "1521090",
    "end": "1526820"
  },
  {
    "text": "we built in a burst model within EFS throughput is based on the size of the",
    "start": "1526820",
    "end": "1534529"
  },
  {
    "text": "filesystem the baseline throughput is 50 megabytes per second per terabyte of",
    "start": "1534529",
    "end": "1540110"
  },
  {
    "text": "data stored and that is the throughput that you should you know continuously achieve now you're able to burst above",
    "start": "1540110",
    "end": "1548480"
  },
  {
    "text": "that up to a hundred megabytes per second per terabyte of data stored when your bursting above your baseline",
    "start": "1548480",
    "end": "1557080"
  },
  {
    "text": "so now let's talk about and just how do we ingest data into an EFS file system",
    "start": "1560120",
    "end": "1567740"
  },
  {
    "text": "so what do you think about first you want to think about where's it coming from what is that source data set is it",
    "start": "1567740",
    "end": "1575460"
  },
  {
    "text": "coming from maybe on Prem is it coming from within the cloud these are some of the things we want to consider then also",
    "start": "1575460",
    "end": "1582030"
  },
  {
    "text": "we want to be able to transfer it as efficiently as possible so what are some",
    "start": "1582030",
    "end": "1587400"
  },
  {
    "text": "of the tools we can use in order to make that to make that transfer so generally",
    "start": "1587400",
    "end": "1594990"
  },
  {
    "start": "1593000",
    "end": "1593000"
  },
  {
    "text": "we can categorize where it's coming from in these four categories one corporate",
    "start": "1594990",
    "end": "1601440"
  },
  {
    "text": "data center typically you know if you have data on Prem you're going to be transferring this data from a corporate",
    "start": "1601440",
    "end": "1607800"
  },
  {
    "text": "data center another really that the second category would be within the cloud from an EBS volume third could be",
    "start": "1607800",
    "end": "1616170"
  },
  {
    "text": "other cloud storage services maybe you know a third party appliance or instance",
    "start": "1616170",
    "end": "1622140"
  },
  {
    "text": "store something within the cloud we also have object store Amazon s3 so when",
    "start": "1622140",
    "end": "1631320"
  },
  {
    "start": "1630000",
    "end": "1630000"
  },
  {
    "text": "you're when you want to ingest data from on-prem you can mount a TFS filesystem",
    "start": "1631320",
    "end": "1638610"
  },
  {
    "text": "over a Direct Connect connection so what that means is you can have a server sitting in your on-prem data center with",
    "start": "1638610",
    "end": "1645990"
  },
  {
    "text": "the direct connect and you can issue a mount command to an EFS filesystem and mount that filesystem on that on that",
    "start": "1645990",
    "end": "1652860"
  },
  {
    "text": "linux server so it allows you to then ingest data using the standard Linux",
    "start": "1652860",
    "end": "1659280"
  },
  {
    "text": "copy tools that you're used to another",
    "start": "1659280",
    "end": "1664530"
  },
  {
    "text": "way is using a third party VPN solution basically setting up an example an IPSec",
    "start": "1664530",
    "end": "1669870"
  },
  {
    "text": "tunnel between your on-prem data center and your V PC and then transferring your",
    "start": "1669870",
    "end": "1677520"
  },
  {
    "text": "data over that within that IPSec tunnel again mounting your filesystem form on",
    "start": "1677520",
    "end": "1682860"
  },
  {
    "text": "pet on Prem using IP addresses of the mount target within EFS within your V PC",
    "start": "1682860",
    "end": "1688940"
  },
  {
    "text": "and then again using your standard Linux copy tools to go ahead and copy",
    "start": "1688940",
    "end": "1694350"
  },
  {
    "text": "that data into Amazon ifs so you may",
    "start": "1694350",
    "end": "1700170"
  },
  {
    "text": "think that you know these types of connections are just for migrating data into EFS besides migrating an entire",
    "start": "1700170",
    "end": "1708090"
  },
  {
    "text": "data set there's also conditions that allow you to possibly burst into the cloud",
    "start": "1708090",
    "end": "1713970"
  },
  {
    "text": "temporarily you know moving a data set temporarily to EFS then accessing the",
    "start": "1713970",
    "end": "1719670"
  },
  {
    "text": "data from applications running within or on ec2 instances once your application",
    "start": "1719670",
    "end": "1725340"
  },
  {
    "text": "is done processing that data you can then easily move that data from the cloud back into your on-prem data center",
    "start": "1725340",
    "end": "1732030"
  },
  {
    "text": "this is one example you can also use it as a backup target for backup options so",
    "start": "1732030",
    "end": "1740309"
  },
  {
    "text": "basically using EFS as a way to backup your data using native file system",
    "start": "1740309",
    "end": "1747240"
  },
  {
    "text": "commands so it's no longer on Prem and it's securely stored in the cloud on a",
    "start": "1747240",
    "end": "1753240"
  },
  {
    "text": "highly available highly durable file system so once you've identified the",
    "start": "1753240",
    "end": "1764220"
  },
  {
    "start": "1760000",
    "end": "1760000"
  },
  {
    "text": "source data set and you've established connectivity between your source and EFS",
    "start": "1764220",
    "end": "1771559"
  },
  {
    "text": "this could be through direct connect this could be through VPN this could be",
    "start": "1771559",
    "end": "1776790"
  },
  {
    "text": "maybe just within the cloud itself may be from an EBS instance you need to look",
    "start": "1776790",
    "end": "1781980"
  },
  {
    "text": "at what tools are most efficient to transfer that data over into EFS so I",
    "start": "1781980",
    "end": "1789780"
  },
  {
    "text": "think most of us are familiar with our sink our think is a very common tool in",
    "start": "1789780",
    "end": "1797730"
  },
  {
    "text": "in order to transfer files from the source to a target one thing that I",
    "start": "1797730",
    "end": "1804210"
  },
  {
    "text": "found I've done a lot of testing over the last year and one thing I found with our sink is when transferring data and",
    "start": "1804210",
    "end": "1810360"
  },
  {
    "text": "to EFS it's not the best tool our sink is single threaded and remember we've",
    "start": "1810360",
    "end": "1817290"
  },
  {
    "text": "been talking today about this distributed data design single threaded application really doesn't take",
    "start": "1817290",
    "end": "1822870"
  },
  {
    "text": "advantage of this design IFS our sink is also very chatty now I",
    "start": "1822870",
    "end": "1830520"
  },
  {
    "text": "know there are options to try to reduce that but it is still very child chatty and during many of my tests I've",
    "start": "1830520",
    "end": "1837990"
  },
  {
    "text": "discovered that you are sink really isn't the best tool to use it really has",
    "start": "1837990",
    "end": "1843120"
  },
  {
    "text": "though the poorest performance of some of the tools that I evaluated CPR the",
    "start": "1843120",
    "end": "1848460"
  },
  {
    "text": "typical Linux copy command actually has a little better performance in our sink it's not as chatty but again we also",
    "start": "1848460",
    "end": "1855510"
  },
  {
    "text": "know what is CP CP is also single threaded so again you not taking",
    "start": "1855510",
    "end": "1860580"
  },
  {
    "text": "advantage of this distributed data storage design it's only when we start",
    "start": "1860580",
    "end": "1866250"
  },
  {
    "text": "looking at multi-threaded tools are we really able to to get higher levels of",
    "start": "1866250",
    "end": "1872580"
  },
  {
    "text": "throughput and higher levels of ions to EFS one example is FP sink FB sink is a",
    "start": "1872580",
    "end": "1879960"
  },
  {
    "text": "tool that's included with an open source utility called F part it is a multi-threaded arsing so",
    "start": "1879960",
    "end": "1889140"
  },
  {
    "text": "if you're familiar with our sink and the commands you can use FB sink very easily",
    "start": "1889140",
    "end": "1894170"
  },
  {
    "text": "but you can get much higher throughput using FP sink then you can our sink",
    "start": "1894170",
    "end": "1900020"
  },
  {
    "text": "another tool that I've used is MCP MCP is a drop-in replacement of this",
    "start": "1900020",
    "end": "1906480"
  },
  {
    "text": "standard CP command or utility it has developed from NASA some of the",
    "start": "1906480",
    "end": "1912990"
  },
  {
    "text": "engineers over at NASA developed this and it is open source so you can go ahead and download it and get access to",
    "start": "1912990",
    "end": "1918060"
  },
  {
    "text": "it today but I've really found the the highest level of throughput using these",
    "start": "1918060",
    "end": "1925470"
  },
  {
    "text": "tools when using standard CP command and a utility called new parallel new",
    "start": "1925470",
    "end": "1932310"
  },
  {
    "text": "parallel is a shell tool that allows you to you know run a command in parallel",
    "start": "1932310",
    "end": "1939030"
  },
  {
    "text": "really allowing you to take a serial operation and running it using multiple threads so by using new parallel and CP",
    "start": "1939030",
    "end": "1947100"
  },
  {
    "text": "we get substantial better performance over the standard CP command we also if",
    "start": "1947100",
    "end": "1953790"
  },
  {
    "text": "you use CP io + F part and new parallel you can get even higher levels of",
    "start": "1953790",
    "end": "1960840"
  },
  {
    "text": "throughput so what F part does there we'll actually index the files that you want to copy it will then take that",
    "start": "1960840",
    "end": "1967710"
  },
  {
    "text": "index pass it into CPI oh then using new parallel multiple threads we'll be able",
    "start": "1967710",
    "end": "1973680"
  },
  {
    "text": "to basically divide that entire data set up into ranges and each range is going",
    "start": "1973680",
    "end": "1978690"
  },
  {
    "text": "to be given a certain thread and then we're able to really get high levels of",
    "start": "1978690",
    "end": "1983760"
  },
  {
    "text": "throughput into an EFS file system so what does that look like in some of my",
    "start": "1983760",
    "end": "1989070"
  },
  {
    "text": "tests running on a c4 to excel I had 5 gigabytes of data 5000 files so",
    "start": "1989070",
    "end": "1996200"
  },
  {
    "text": "averaging around 1 Meg each but some of my files were you know tens of kilobytes",
    "start": "1996200",
    "end": "2001580"
  },
  {
    "text": "in size and some of them were multiple gigs or multiple megabytes in size so I",
    "start": "2001580",
    "end": "2007010"
  },
  {
    "text": "ran a test I transferred using multiple tools these file at these six tools and",
    "start": "2007010",
    "end": "2012580"
  },
  {
    "text": "these are the results that I got so you can see really going from say eleven",
    "start": "2012580",
    "end": "2018140"
  },
  {
    "text": "point seven megabytes per second using rsync the exact same data set the exact same",
    "start": "2018140",
    "end": "2024200"
  },
  {
    "text": "file system on the same instance all the way up to 93 megabytes per second when",
    "start": "2024200",
    "end": "2032210"
  },
  {
    "text": "using F part CPI oh and new parallel so",
    "start": "2032210",
    "end": "2040070"
  },
  {
    "text": "as Edie mentioned last week we introduced a great a great new utility",
    "start": "2040070",
    "end": "2045110"
  },
  {
    "text": "called EFS file sync so EFS file sync is a simple fully managed solution to",
    "start": "2045110",
    "end": "2052158"
  },
  {
    "text": "transfer files into Amazon EFS using a secure high-performance parallel data",
    "start": "2052159",
    "end": "2059300"
  },
  {
    "text": "transfer the FS file sync provides encryption of the cusp from your IT",
    "start": "2059300",
    "end": "2066080"
  },
  {
    "text": "environment to AWS and we see up to really five times the throughput of",
    "start": "2066080",
    "end": "2074510"
  },
  {
    "text": "typical of standard Linux copy tools so again this is a very simple fast secure",
    "start": "2074510",
    "end": "2082669"
  },
  {
    "text": "method of efficiently migrating data from really source to destination",
    "start": "2082669",
    "end": "2088629"
  },
  {
    "text": "destination being a TFS file system now there are number different use cases so you can transfer",
    "start": "2088630",
    "end": "2095850"
  },
  {
    "text": "it from on-prem to EFS you can also transfer it from one EFS file system to",
    "start": "2095850",
    "end": "2102060"
  },
  {
    "text": "another EFS file system may be from one region to another or from one account to",
    "start": "2102060",
    "end": "2108480"
  },
  {
    "text": "another so a lot of different use cases you can use you can use even transfer it",
    "start": "2108480",
    "end": "2115110"
  },
  {
    "text": "from other in cloud solutions to EFS so",
    "start": "2115110",
    "end": "2121140"
  },
  {
    "text": "another we have a number of different tools or recommendations to transfer tools and transfer data into EFS when do",
    "start": "2121140",
    "end": "2128940"
  },
  {
    "text": "you want to use the tool so with when you're within your own DPC",
    "start": "2128940",
    "end": "2134190"
  },
  {
    "text": "and you need to transfer data one option is using the FS file sync another option",
    "start": "2134190",
    "end": "2139980"
  },
  {
    "text": "you can do it yourself install these F parts and other tools new parallel and",
    "start": "2139980",
    "end": "2146040"
  },
  {
    "text": "now new parallel we did include in the Amazon Linux repo so now if you're",
    "start": "2146040",
    "end": "2151680"
  },
  {
    "text": "running Amazon Linux you can do a very easy you know yum install parallel and you'll have parallel installed on your",
    "start": "2151680",
    "end": "2158940"
  },
  {
    "text": "Amazon Linux so it's a great way to get up and running very quickly if you're",
    "start": "2158940",
    "end": "2164100"
  },
  {
    "text": "outside of your V PC we really recommend using EFS file sync because it really",
    "start": "2164100",
    "end": "2169410"
  },
  {
    "text": "allows for a very simple setup no more logging on to you know SSH into",
    "start": "2169410",
    "end": "2175050"
  },
  {
    "text": "instances trying to figure it out at installing tools it's all done through the console you setup your source your",
    "start": "2175050",
    "end": "2182910"
  },
  {
    "text": "target and you basically sync the data so let's go ahead and take a look at",
    "start": "2182910",
    "end": "2189030"
  },
  {
    "text": "what this looks like so what are you going to see here is recording that we",
    "start": "2189030",
    "end": "2194370"
  },
  {
    "text": "did on a typical EFS file sync so you're going to see that we're going to actually install an EFS file sync agent",
    "start": "2194370",
    "end": "2202580"
  },
  {
    "text": "in this example I don't have my own data center so I can't run it on my data",
    "start": "2202580",
    "end": "2208440"
  },
  {
    "text": "center so I'm actually using AWS so I'm going to be transferring data from an EFS file system to another EFS",
    "start": "2208440",
    "end": "2214950"
  },
  {
    "text": "file system so what I do is I actually install the the Aged and it's you're",
    "start": "2214950",
    "end": "2221100"
  },
  {
    "text": "actually running an ami and we'll go ahead and launch that within hey WS once we get that we will then",
    "start": "2221100",
    "end": "2229520"
  },
  {
    "text": "activate it through the service and then we'll set up the sync set so it goes",
    "start": "2229520",
    "end": "2234869"
  },
  {
    "text": "rather quickly so let's go ahead and actually get started let's go back and",
    "start": "2234869",
    "end": "2241670"
  },
  {
    "start": "2243000",
    "end": "2243000"
  },
  {
    "text": "as we can see here we're going to go ahead and select ec2 we're going to launch this within a V PC very quick",
    "start": "2246140",
    "end": "2253770"
  },
  {
    "text": "it's already set up now that that instance is is up and running what we",
    "start": "2253770",
    "end": "2258869"
  },
  {
    "text": "want to do is grab the external ID public IP address and we want to put it into the configuration so that the we're",
    "start": "2258869",
    "end": "2266280"
  },
  {
    "text": "able to connect to the agent once we do that we want to activate that agent we",
    "start": "2266280",
    "end": "2271710"
  },
  {
    "text": "give it a name and it's activated now",
    "start": "2271710",
    "end": "2277680"
  },
  {
    "text": "that we have that AG that agent activated what we want to do is we want to create a sync set so we identify the",
    "start": "2277680",
    "end": "2283319"
  },
  {
    "text": "source this is going to be from one the FS file system and then we identify the",
    "start": "2283319",
    "end": "2288660"
  },
  {
    "text": "destination we give this sync set a name",
    "start": "2288660",
    "end": "2295640"
  },
  {
    "text": "we create it once the sync set is created what we want to do is we want to",
    "start": "2298520",
    "end": "2304680"
  },
  {
    "text": "start it once we started that's going to be now pulling data from the source and",
    "start": "2304680",
    "end": "2310140"
  },
  {
    "text": "moving and copying it over to the destination as you can see here the",
    "start": "2310140",
    "end": "2315599"
  },
  {
    "text": "status is starting here in a few seconds we're going to see this start to increase I sped it up because it does",
    "start": "2315599",
    "end": "2322559"
  },
  {
    "text": "take a few minutes for the sync set actually be created so I sped through",
    "start": "2322559",
    "end": "2328049"
  },
  {
    "text": "that in this video just for 4/4 time now that the status has changed we're",
    "start": "2328049",
    "end": "2334950"
  },
  {
    "text": "actually copying that data in real time we can see that so far we've already moved you know or copied 1.7 gigabytes",
    "start": "2334950",
    "end": "2341069"
  },
  {
    "text": "we'll see this in real time continuing you to to increase then at the end we're",
    "start": "2341069",
    "end": "2346500"
  },
  {
    "text": "going to see that we actually copied 21.5 gigabytes of data from one file system to another file system in about 4",
    "start": "2346500",
    "end": "2353880"
  },
  {
    "text": "minutes and 49 seconds so we were roughly 91 megabytes per second I think",
    "start": "2353880",
    "end": "2358950"
  },
  {
    "text": "was the the throughput that we received through this again very easy to set up very secure",
    "start": "2358950",
    "end": "2364290"
  },
  {
    "text": "this is just one example of how you would use EFS file sync so we've already",
    "start": "2364290",
    "end": "2375000"
  },
  {
    "text": "looked at when we transfer data from on Prem or within a V PC now what about",
    "start": "2375000",
    "end": "2383790"
  },
  {
    "text": "from Amazon s3 so definitely we can move objects from Amazon s3 over to EFS by",
    "start": "2383790",
    "end": "2392040"
  },
  {
    "text": "just using an NFS client that has access to that bucket very simple very easy one",
    "start": "2392040",
    "end": "2397980"
  },
  {
    "text": "thing you want to do though is you want to take advantage of parallelism when",
    "start": "2397980",
    "end": "2403290"
  },
  {
    "text": "you when you're doing this so while the s3 CP command is by default you know multi-threaded if",
    "start": "2403290",
    "end": "2411390"
  },
  {
    "text": "you actually use new parallel and s3 CP combined you will actually get higher",
    "start": "2411390",
    "end": "2418500"
  },
  {
    "text": "levels of throughput I've seen in some of my examples 30 to 50 percent higher throughput using new parallel and s3 CP",
    "start": "2418500",
    "end": "2426210"
  },
  {
    "text": "than just using s3 P by itself now in",
    "start": "2426210",
    "end": "2433020"
  },
  {
    "text": "the run phase I'm gonna go ahead and turn this over to you sure Chad alright",
    "start": "2433020",
    "end": "2443490"
  },
  {
    "text": "so thanks Darrell so when you're running your file system there's not a whole lot",
    "start": "2443490",
    "end": "2448859"
  },
  {
    "text": "that you need to think about a worry about because it is a fully managed service what we do provide our couple",
    "start": "2448859",
    "end": "2455220"
  },
  {
    "text": "things though there that are important so first is file system metrics you can",
    "start": "2455220",
    "end": "2460560"
  },
  {
    "text": "view cloud watch metrics on file system performance so you can take a look at the type of the level of throughput that",
    "start": "2460560",
    "end": "2466500"
  },
  {
    "text": "you're driving you can take a look at the operations per second that you're getting you can take a look at how what",
    "start": "2466500",
    "end": "2472680"
  },
  {
    "text": "level of performance you're getting in your general-purpose mode and whether you should use general-purpose mode or",
    "start": "2472680",
    "end": "2478200"
  },
  {
    "text": "max IO mode as a result so a bunch of useful metrics to get a feel for how the file system is running we also integrate",
    "start": "2478200",
    "end": "2485940"
  },
  {
    "text": "with Cloud trail so all of your API calls can be logged to Cloud trail if",
    "start": "2485940",
    "end": "2490950"
  },
  {
    "text": "you enable that and on the other side there's also performing backups and that's a pretty",
    "start": "2490950",
    "end": "2497020"
  },
  {
    "text": "straightforward process using some standard tools and using some white",
    "start": "2497020",
    "end": "2502090"
  },
  {
    "text": "papers that we have available so these are some of the cloud watch metrics that",
    "start": "2502090",
    "end": "2507550"
  },
  {
    "text": "was referring to and the cloud walk trail API access logs that that you have",
    "start": "2507550",
    "end": "2515710"
  },
  {
    "start": "2510000",
    "end": "2510000"
  },
  {
    "text": "you can enable as well and again that's for your API calls and you want to talk",
    "start": "2515710",
    "end": "2522640"
  },
  {
    "start": "2521000",
    "end": "2521000"
  },
  {
    "text": "about yeah let me let me talk about some of the reference architectures that we've created for some very common",
    "start": "2522640",
    "end": "2528520"
  },
  {
    "text": "applications out there so WordPress Drupal and Magento we have reference architectures that takes advantage of",
    "start": "2528520",
    "end": "2535800"
  },
  {
    "text": "Amazon TFS as the file storage for these",
    "start": "2535800",
    "end": "2540850"
  },
  {
    "text": "for these environments now while you can run some of these in a single server",
    "start": "2540850",
    "end": "2546810"
  },
  {
    "text": "configuration it is highly recommended if you need to scale out to actually",
    "start": "2546810",
    "end": "2552490"
  },
  {
    "text": "move the file system data say your WordPress installation directory off of",
    "start": "2552490",
    "end": "2557620"
  },
  {
    "text": "the instance itself and move it over to an amazon EFS file system so that really",
    "start": "2557620",
    "end": "2562630"
  },
  {
    "text": "allows us to have a state really a stateless web tier you know there's no",
    "start": "2562630",
    "end": "2568300"
  },
  {
    "text": "data being stored on those on those web instances and those web servers so it allows us to take advantage of say auto",
    "start": "2568300",
    "end": "2575590"
  },
  {
    "text": "scaling groups where you can now elastically scale your web tier up and down without worrying about am I losing",
    "start": "2575590",
    "end": "2582670"
  },
  {
    "text": "data we also have to remember that you know session information so where does",
    "start": "2582670",
    "end": "2587770"
  },
  {
    "text": "session information for web WordPress where is that stored and cookies so we",
    "start": "2587770",
    "end": "2592990"
  },
  {
    "text": "know that that's already off the the web tier so it really lends itself to moving",
    "start": "2592990",
    "end": "2600280"
  },
  {
    "text": "that file system over to EFS moving the database data over to say an amazon",
    "start": "2600280",
    "end": "2606160"
  },
  {
    "text": "arora database instance or cluster allows you to then take advantage of",
    "start": "2606160",
    "end": "2612430"
  },
  {
    "text": "this you know stateless web tier where it can automatically scale out and scale",
    "start": "2612430",
    "end": "2617590"
  },
  {
    "text": "back in when you need to we have that design for both WordPress",
    "start": "2617590",
    "end": "2624290"
  },
  {
    "text": "for Drupal and for Magento these are available on our github repos where you",
    "start": "2624290",
    "end": "2631640"
  },
  {
    "start": "2627000",
    "end": "2627000"
  },
  {
    "text": "can download it's a really a nested CloudFormation template where you can",
    "start": "2631640",
    "end": "2636980"
  },
  {
    "text": "select the different parameters and deploy say an elastic cache cluster sitting in front of your database tier",
    "start": "2636980",
    "end": "2644240"
  },
  {
    "text": "or you know a cloud front distribution that you can select the different",
    "start": "2644240",
    "end": "2650210"
  },
  {
    "text": "origins and where you want to serve that up so that some of your data is actually sitting in some of our 100 plus edge",
    "start": "2650210",
    "end": "2656420"
  },
  {
    "text": "locations around the globe we also a few months ago launched a",
    "start": "2656420",
    "end": "2664730"
  },
  {
    "start": "2661000",
    "end": "2661000"
  },
  {
    "text": "backup solution this is an EFS - EFS backup solution that allows you to really automate the backup process of an",
    "start": "2664730",
    "end": "2672560"
  },
  {
    "text": "EFS filesystem we offer a easy to deploy you know CloudFormation template to get",
    "start": "2672560",
    "end": "2678560"
  },
  {
    "text": "this environment up and running so you are able to backup your your filesystem",
    "start": "2678560",
    "end": "2683570"
  },
  {
    "text": "and then have again native access to the filesystem because it's just sitting in a different - EFS filesystem alright",
    "start": "2683570",
    "end": "2691880"
  },
  {
    "text": "I'll go ahead and turn it back to Ed to wrap up our session here so a couple",
    "start": "2691880",
    "end": "2697220"
  },
  {
    "text": "things we we looked at some reference architectures those are available online",
    "start": "2697220",
    "end": "2702470"
  },
  {
    "text": "along with feature blogs white papers there's a TCO calculator a bunch of",
    "start": "2702470",
    "end": "2708050"
  },
  {
    "text": "10-minute tutorials documentation so a lot of really good resources available online just go to amazon.com slash EFS",
    "start": "2708050",
    "end": "2715690"
  },
  {
    "text": "and I'm happy to announce that we have a",
    "start": "2715690",
    "end": "2720800"
  },
  {
    "start": "2717000",
    "end": "2717000"
  },
  {
    "text": "new digital training course or actually a series of classes on storage that's",
    "start": "2720800",
    "end": "2726110"
  },
  {
    "text": "available starting now there's deep dives on s3 EFS EBS storage hybrid",
    "start": "2726110",
    "end": "2731510"
  },
  {
    "text": "scenarios you can use these sessions of course to learn but also to make progress towards AWS certifications as",
    "start": "2731510",
    "end": "2737930"
  },
  {
    "text": "well there's also lots going on at reinvent we have hands-on labs we have an EFS spotlight lab on Thursday at 3",
    "start": "2737930",
    "end": "2745280"
  },
  {
    "text": "p.m. at the Venetian we have storage expert CFS experts at the AWS booth in",
    "start": "2745280",
    "end": "2750770"
  },
  {
    "text": "the expo all week and we have a bunch of sessions companies like Sirius XM here",
    "start": "2750770",
    "end": "2757190"
  },
  {
    "text": "Thompson Celgene are all talking about their EFS use cases its use cases like web serving",
    "start": "2757190",
    "end": "2763520"
  },
  {
    "text": "middleware applications hybrid architectures using EFS and dev environment so good mix of different use",
    "start": "2763520",
    "end": "2769790"
  },
  {
    "text": "cases you can hear from the customers directly about their experience with the FS and best practices and I know there's",
    "start": "2769790",
    "end": "2776450"
  },
  {
    "text": "a bunch of sessions you all probably want to go to across reinvent so ones that you can't attend these ZFS sessions",
    "start": "2776450",
    "end": "2783110"
  },
  {
    "text": "they're all going to be available by video within a couple of days of the actual session happening so ed one sorry",
    "start": "2783110",
    "end": "2790280"
  },
  {
    "text": "what one more thing I wanted to mention that I forgot talking about our WordPress architecture when you're using",
    "start": "2790280",
    "end": "2797030"
  },
  {
    "text": "EFS as the file system basically when you've copied your WordPress",
    "start": "2797030",
    "end": "2802040"
  },
  {
    "text": "installation directory over to EFS you want to install Opa Opa cache is a bit",
    "start": "2802040",
    "end": "2809090"
  },
  {
    "text": "caching bit code caching mechanism you can install on the WordPress servers that really allows you to cache some of",
    "start": "2809090",
    "end": "2816290"
  },
  {
    "text": "those PHP files you know that with PHP scripts it is executed and compiled each",
    "start": "2816290",
    "end": "2821900"
  },
  {
    "text": "time if you're able to cache that on the instance you will have actually have a",
    "start": "2821900",
    "end": "2827030"
  },
  {
    "text": "better experience and we highly recommend that that is included as a part of the reference architecture and",
    "start": "2827030",
    "end": "2833480"
  },
  {
    "text": "it's actually automatically installed in the cloud formation templates and we have a Status page per instance to see",
    "start": "2833480",
    "end": "2840080"
  },
  {
    "text": "to make sure that one it is installed correctly and to that it's actually enabled and what your you know your",
    "start": "2840080",
    "end": "2847220"
  },
  {
    "text": "cache hits and your cache misses misses look like for instance okay all right",
    "start": "2847220",
    "end": "2852260"
  },
  {
    "text": "great so we we have some time for a QA I think there's I think there's some mics",
    "start": "2852260",
    "end": "2857980"
  },
  {
    "text": "yeah looks like there's some mics over there so yeah so make your way to one of the mics in the aisles so that we can",
    "start": "2857980",
    "end": "2864440"
  },
  {
    "text": "hear can I go yes please got two questions about futures number one do",
    "start": "2864440",
    "end": "2870410"
  },
  {
    "text": "you plan on supporting Kerberos mount options in the future and number two do you plan on adding snapshots as a",
    "start": "2870410",
    "end": "2876830"
  },
  {
    "text": "feature so we don't generally talk about roadmap those are both features that customers",
    "start": "2876830",
    "end": "2884960"
  },
  {
    "text": "have asked us for and we're honestly bouncing across a number of requests so",
    "start": "2884960",
    "end": "2889970"
  },
  {
    "text": "that's all I I can real say four for backups I would say you",
    "start": "2889970",
    "end": "2895700"
  },
  {
    "text": "know take a look at the the CloudFormation templates the white paper that Darrel was was referring to it does",
    "start": "2895700",
    "end": "2902450"
  },
  {
    "text": "make it pretty simple so hopefully that helps Thanks",
    "start": "2902450",
    "end": "2907460"
  },
  {
    "text": "you can also use native it is a file system so you can use native backup solutions and applications you run today",
    "start": "2907460",
    "end": "2913960"
  },
  {
    "text": "with the FS let's go to the mic over here is there any way to back it up to",
    "start": "2913960",
    "end": "2919760"
  },
  {
    "text": "s3 yeah yeah so you know there are a number of third-party backup solutions",
    "start": "2919760",
    "end": "2926660"
  },
  {
    "text": "today that backup natively to Amazon s3 so yes you can using third-party",
    "start": "2926660",
    "end": "2934579"
  },
  {
    "text": "solutions okay AWS sync doesn't do it it does not know",
    "start": "2934579",
    "end": "2940960"
  },
  {
    "text": "so when you will be supporting an encryption in transit so again we we",
    "start": "2940960",
    "end": "2948170"
  },
  {
    "text": "don't we we generally don't comment on on roadmap today we support encryption of data at rest encryption in transit is is",
    "start": "2948170",
    "end": "2955579"
  },
  {
    "text": "something that we're lowering along with others other features are is it in your roadmap or it's not that at all is it",
    "start": "2955579",
    "end": "2963530"
  },
  {
    "text": "sorry is it in your roadmap or it's not there it's something that we're looking at that's what I can say okay thanks",
    "start": "2963530",
    "end": "2970250"
  },
  {
    "text": "thanks yes please so um SMB any support",
    "start": "2970250",
    "end": "2980839"
  },
  {
    "text": "for that can you answer in a general term we know that windows support is",
    "start": "2980839",
    "end": "2986210"
  },
  {
    "text": "important so I will leave it at that",
    "start": "2986210",
    "end": "2991030"
  },
  {
    "text": "my developers won't be happy with that you have scheduled for Tokyo region welp",
    "start": "2991580",
    "end": "3001840"
  },
  {
    "text": "so we're in six regions now we're not in Tokyo I can't I can't again I know these",
    "start": "3001840",
    "end": "3006850"
  },
  {
    "text": "are a lot of questions about when and and what but a lot of these features are things that we are looking at where",
    "start": "3006850",
    "end": "3011980"
  },
  {
    "text": "we're hearing the feedback so I can't comment specifically on that but we do",
    "start": "3011980",
    "end": "3017230"
  },
  {
    "text": "plan to be in almost all regions as quickly as possible thank you Thanks yes please so we do a",
    "start": "3017230",
    "end": "3024370"
  },
  {
    "text": "lot of VPC peering and mount endpoint and the way it is implemented in EFS is",
    "start": "3024370",
    "end": "3033280"
  },
  {
    "text": "very different from the way RDS are accessible from our on-prem we have",
    "start": "3033280",
    "end": "3038590"
  },
  {
    "text": "Direct Connect and all other communication technologies so the issue",
    "start": "3038590",
    "end": "3043600"
  },
  {
    "text": "is that the round robin and we have to mount using IP addresses at times and",
    "start": "3043600",
    "end": "3049980"
  },
  {
    "text": "what is the correct way of doing this type of implementation it does it support BBC peirong really or not",
    "start": "3049980",
    "end": "3057220"
  },
  {
    "text": "BBC pairing does not work with with EFS I'd love to maybe we can come off fly we",
    "start": "3057220",
    "end": "3063070"
  },
  {
    "text": "can talk a little bit more about the specifics of what you're trying to do so we can we can talk about it but we don't",
    "start": "3063070",
    "end": "3068800"
  },
  {
    "text": "support VPC peering but there might be other things that you could do you need to get a little more detail where you're trying to do so if you're if you're free",
    "start": "3068800",
    "end": "3075400"
  },
  {
    "text": "afterwards please feel free to stop by yes please so um I think in the demo you sure that",
    "start": "3075400",
    "end": "3083050"
  },
  {
    "text": "there is a option of setting up the file sync using the console the Erebus",
    "start": "3083050",
    "end": "3088690"
  },
  {
    "text": "console is there a CLA version of it that can be used yeah so today it's",
    "start": "3088690",
    "end": "3094090"
  },
  {
    "text": "available only through the console so you would have to you know launch the",
    "start": "3094090",
    "end": "3100770"
  },
  {
    "text": "the agent from the console and then or at least download the ESX image from the",
    "start": "3100770",
    "end": "3107350"
  },
  {
    "text": "console to your on-prem go ahead and get that set up start the the create distinct set and start it all through",
    "start": "3107350",
    "end": "3113320"
  },
  {
    "text": "the account of the console we're looking at you know do we want to go to an API",
    "start": "3113320",
    "end": "3118840"
  },
  {
    "text": "CLI it's something that we're we're evaluating so is it possible also do I",
    "start": "3118840",
    "end": "3124990"
  },
  {
    "text": "know that from EBS we can copy to EFS but is it possible to coffee from EFS to",
    "start": "3124990",
    "end": "3130630"
  },
  {
    "text": "EBS also using that oh not using that tool yep as file sync it is the",
    "start": "3130630",
    "end": "3136510"
  },
  {
    "text": "destination will need to be an EFS file system it is a file sync to ingest data",
    "start": "3136510",
    "end": "3142390"
  },
  {
    "text": "into EFS okay thanks please so on one of",
    "start": "3142390",
    "end": "3147970"
  },
  {
    "text": "the early slides showed a couple companies that we're using this or home folders how does that work with I mean",
    "start": "3147970",
    "end": "3156580"
  },
  {
    "text": "that does that work with say Windows 7 Windows 10 desktops are they those Linux environments those are all EDX",
    "start": "3156580",
    "end": "3162640"
  },
  {
    "text": "environments it did currently it you can't mod from windows so Linux yeah",
    "start": "3162640",
    "end": "3172090"
  },
  {
    "text": "quick one I thought I heard that we can mount s3 volumes on the Linux systems",
    "start": "3172090",
    "end": "3178420"
  },
  {
    "text": "did I am I getting confused with the EFS no so Esther is is access through the s3",
    "start": "3178420",
    "end": "3186970"
  },
  {
    "text": "API EFS gatekeeper allow you to mount as a filesystem okay so the s3 Williams cannot be",
    "start": "3186970",
    "end": "3193840"
  },
  {
    "text": "mounted like EFS that's correct yeah so",
    "start": "3193840",
    "end": "3199950"
  },
  {
    "text": "I'm wondering about the the new feature where you allows the encryption with a",
    "start": "3199950",
    "end": "3209440"
  },
  {
    "text": "key in EMS can I bring my can I have a",
    "start": "3209440",
    "end": "3214900"
  },
  {
    "text": "key that actually that was created by me as opposed to service D for key in yes",
    "start": "3214900",
    "end": "3223960"
  },
  {
    "text": "so we do support custom see MKS oka you know it is all run through the",
    "start": "3223960",
    "end": "3229869"
  },
  {
    "text": "AWS kms service but you import a key into kms and then allow that C mk2 to be",
    "start": "3229869",
    "end": "3239650"
  },
  {
    "text": "used for Amazon EFS file systems to to use to encrypt your Foca so yeah so I",
    "start": "3239650",
    "end": "3245410"
  },
  {
    "text": "got that part but the second part is what's the implication when you have to",
    "start": "3245410",
    "end": "3252369"
  },
  {
    "text": "do backup and sync to a different region the key might not make",
    "start": "3252369",
    "end": "3258240"
  },
  {
    "text": "I'm sure actually that wouldn't be available anymore i if the the fire was",
    "start": "3258240",
    "end": "3265050"
  },
  {
    "text": "synced to a different region or as a copy to a so so what you would do is you",
    "start": "3265050",
    "end": "3270390"
  },
  {
    "text": "would you would if you have a file system in another region that would be encrypted with a different key",
    "start": "3270390",
    "end": "3275760"
  },
  {
    "text": "so no kalila sync well your data will get decrypted okay well you copy it over",
    "start": "3275760",
    "end": "3280859"
  },
  {
    "text": "it's actually automatic around different key yeah thanks sure yes please",
    "start": "3280859",
    "end": "3286859"
  },
  {
    "text": "just a short question on that a throughput graph that you had where does it end so you went up through a specific number",
    "start": "3286859",
    "end": "3294240"
  },
  {
    "text": "and what's the highest number of IEPs that you have been generating in May of s yeah so there's actually no upper",
    "start": "3294240",
    "end": "3300720"
  },
  {
    "text": "bound so it really depends on kind of",
    "start": "3300720",
    "end": "3305820"
  },
  {
    "text": "how you're distributing your your requests mom if you're distributing it across tens hundreds thousands of",
    "start": "3305820",
    "end": "3312000"
  },
  {
    "text": "instances each of those is able to drive a certain amount of throughput you you there's really no cap to it there's a",
    "start": "3312000",
    "end": "3319589"
  },
  {
    "text": "soft limit of three gigabytes per second but that's something that we can raise so beyond that there's there there's no",
    "start": "3319589",
    "end": "3326460"
  },
  {
    "text": "limit okay that's very interesting things sure yeah EFS has certain limits",
    "start": "3326460",
    "end": "3332010"
  },
  {
    "text": "in terms of how many files we can open per instance and per process so are those hard limits so we have approaches",
    "start": "3332010",
    "end": "3338760"
  },
  {
    "text": "where we can work around those are hard limits okay it would be great to maybe",
    "start": "3338760",
    "end": "3344010"
  },
  {
    "text": "have two words understand what will limit your running into because it'd just be good to hear that but those are",
    "start": "3344010",
    "end": "3349290"
  },
  {
    "text": "hard so you're not talking about the roadmap but do you get demand for EFS",
    "start": "3349290",
    "end": "3357119"
  },
  {
    "text": "access from lambda functions it is something we've we've had customers asking us for yes so I will +1 that",
    "start": "3357119",
    "end": "3367250"
  },
  {
    "text": "Thanks could you explain the correlation between the 7k opps versus the",
    "start": "3367250",
    "end": "3372619"
  },
  {
    "text": "throughput there's an there's number of",
    "start": "3372619",
    "end": "3378349"
  },
  {
    "text": "I absolument and then there's the total true but-- do you have in terms of operations yeah i system operations versus total trooper yes so in general",
    "start": "3378349",
    "end": "3385609"
  },
  {
    "text": "purpose mode the the cap is the operations per second so the level of",
    "start": "3385609",
    "end": "3390740"
  },
  {
    "text": "throughput you can drive really depends on the io size that your you're driving so there's there's no real throughput",
    "start": "3390740",
    "end": "3397940"
  },
  {
    "text": "limit i would say as a result but you do have this operations per second so in practical terms there will be a limit",
    "start": "3397940",
    "end": "3404660"
  },
  {
    "text": "just depends on Io size that they are you're using okay so for large file",
    "start": "3404660",
    "end": "3409970"
  },
  {
    "text": "systems which have a lot of metadata operations which counts against the semca ops that's your limit that's",
    "start": "3409970",
    "end": "3415849"
  },
  {
    "text": "correct right okay for general-purpose mode file systems so you do have the",
    "start": "3415849",
    "end": "3420890"
  },
  {
    "text": "option of creating a file system as max io and then you don't have that sort of upper boundary lets you extend beyond",
    "start": "3420890",
    "end": "3429590"
  },
  {
    "text": "7000 file system operations per second for max IO file systems I see so he's a",
    "start": "3429590",
    "end": "3434720"
  },
  {
    "text": "typical trooper limit the instance type the client side well not really because",
    "start": "3434720",
    "end": "3441530"
  },
  {
    "text": "you can access it from multiple instances as well mm-hmm so there will be a per instance",
    "start": "3441530",
    "end": "3446750"
  },
  {
    "text": "limit they will run into but in aggregate you can have thousands of",
    "start": "3446750",
    "end": "3452330"
  },
  {
    "text": "instances and so each of those can drive independently and so your aggregate throughput can just keep growing I see",
    "start": "3452330",
    "end": "3458720"
  },
  {
    "text": "okay thanks sure so we use EFS as shared",
    "start": "3458720",
    "end": "3465349"
  },
  {
    "text": "storage for web servers but where the typical typically the amount of storage",
    "start": "3465349",
    "end": "3470480"
  },
  {
    "text": "is quite small and the only way we can get enough performance through FS is to",
    "start": "3470480",
    "end": "3476000"
  },
  {
    "text": "create a load of dummy data to increase the amount of storage and therefore get",
    "start": "3476000",
    "end": "3481520"
  },
  {
    "text": "better throughput I just wondered if you're they are you ever going to",
    "start": "3481520",
    "end": "3487960"
  },
  {
    "text": "separate out throughput from the amount of storage so just have options of",
    "start": "3487960",
    "end": "3493520"
  },
  {
    "text": "improving throughput without increasing storage yeah so it's a feature that we've heard",
    "start": "3493520",
    "end": "3498530"
  },
  {
    "text": "some customers asking us for foremost workloads the amount of throughput you get is is is",
    "start": "3498530",
    "end": "3505080"
  },
  {
    "text": "adequate but there are ones where you might have a very small amount of data or you know might you might just need a",
    "start": "3505080",
    "end": "3511320"
  },
  {
    "text": "really high level of throughput so today the recommendation is pad your file system but we are you know we continue",
    "start": "3511320",
    "end": "3518910"
  },
  {
    "text": "to get feedback about you know is there are there other options and so we're looking at those things I just want to",
    "start": "3518910",
    "end": "3525300"
  },
  {
    "text": "echo his comments because we we do the same thing we can scrape the generally the dummy data to making sure how to",
    "start": "3525300",
    "end": "3531390"
  },
  {
    "text": "post the code right so we reading is some solution on this one okay understood Thanks so one thing that I've done to",
    "start": "3531390",
    "end": "3537420"
  },
  {
    "text": "help customers in this situation is that I have a cloud formation template that will create a file system and you can",
    "start": "3537420",
    "end": "3543690"
  },
  {
    "text": "identify how much dummy data you want to put in so it's something that you don't have to sort of manage yourself you",
    "start": "3543690",
    "end": "3550110"
  },
  {
    "text": "launch the the CloudFormation template identify well you can create the file system or identify an existing file",
    "start": "3550110",
    "end": "3556020"
  },
  {
    "text": "system then identify how much dummy data you want to add and then it'll automatically spin up an auto scaling",
    "start": "3556020",
    "end": "3562170"
  },
  {
    "text": "group DD that data into a directory and then it's done so while I we know it's",
    "start": "3562170",
    "end": "3568500"
  },
  {
    "text": "not ideal it's just it's something to help you sort of overcome that that",
    "start": "3568500",
    "end": "3573510"
  },
  {
    "text": "burden any other questions will also be",
    "start": "3573510",
    "end": "3580200"
  },
  {
    "text": "available up here for a couple minutes if people want to people have other questions but thank you all thanks a lot",
    "start": "3580200",
    "end": "3585980"
  },
  {
    "text": "[Applause]",
    "start": "3585980",
    "end": "3589320"
  }
]