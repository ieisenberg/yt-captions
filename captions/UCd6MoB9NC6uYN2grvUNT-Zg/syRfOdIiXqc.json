[
  {
    "text": "we couldn't have built mortar data",
    "start": "9410",
    "end": "11429"
  },
  {
    "text": "without AWS my name is Kay young I'm the",
    "start": "11429",
    "end": "14730"
  },
  {
    "text": "CEO and co-founder of mortar data we",
    "start": "14730",
    "end": "17490"
  },
  {
    "text": "raised a seed round of funding last year",
    "start": "17490",
    "end": "19410"
  },
  {
    "text": "in February in 2012 and at that point we",
    "start": "19410",
    "end": "21750"
  },
  {
    "text": "raised 1.8 million dollars had we not",
    "start": "21750",
    "end": "24660"
  },
  {
    "text": "been on AWS than we would have needed to",
    "start": "24660",
    "end": "26880"
  },
  {
    "text": "raise 7.1 million an additional 4",
    "start": "26880",
    "end": "29160"
  },
  {
    "text": "million for capital expenses and 1.3 for",
    "start": "29160",
    "end": "31140"
  },
  {
    "text": "operational at a state that our company",
    "start": "31140",
    "end": "32970"
  },
  {
    "text": "was added that early time there would",
    "start": "32970",
    "end": "35010"
  },
  {
    "text": "have been really no way that we could",
    "start": "35010",
    "end": "36180"
  },
  {
    "text": "have raised seven 1.8 million dollars we",
    "start": "36180",
    "end": "37860"
  },
  {
    "text": "need to prove more so AWS allowed us to",
    "start": "37860",
    "end": "40500"
  },
  {
    "text": "get off the ground in the first place",
    "start": "40500",
    "end": "41820"
  },
  {
    "text": "mortar is kind of two things on the one",
    "start": "41820",
    "end": "44070"
  },
  {
    "text": "hand it's an open source framework for",
    "start": "44070",
    "end": "46200"
  },
  {
    "text": "processing data and the other it's a",
    "start": "46200",
    "end": "48480"
  },
  {
    "text": "platform as a service that's powered by",
    "start": "48480",
    "end": "50430"
  },
  {
    "text": "Hadoop that runs exclusively on AWS what",
    "start": "50430",
    "end": "54090"
  },
  {
    "text": "we do is we make a dupe very easy to use",
    "start": "54090",
    "end": "56310"
  },
  {
    "text": "but we put that really in the background",
    "start": "56310",
    "end": "57989"
  },
  {
    "text": "the dupe is finally an ends to a mean",
    "start": "57989",
    "end": "60090"
  },
  {
    "text": "it's a way to execute things at scale we",
    "start": "60090",
    "end": "62730"
  },
  {
    "text": "put forward the tools that engineers and",
    "start": "62730",
    "end": "64378"
  },
  {
    "text": "data scientists want to use so a",
    "start": "64379",
    "end": "66300"
  },
  {
    "text": "higher-level language called Pig which",
    "start": "66300",
    "end": "68880"
  },
  {
    "text": "is a lot like sequel but it's procedural",
    "start": "68880",
    "end": "71280"
  },
  {
    "text": "and java and python and our customers",
    "start": "71280",
    "end": "74490"
  },
  {
    "text": "use these languages to express the work",
    "start": "74490",
    "end": "77220"
  },
  {
    "text": "as they normally would work locally on",
    "start": "77220",
    "end": "79409"
  },
  {
    "text": "their own machine have automated testing",
    "start": "79409",
    "end": "81780"
  },
  {
    "text": "be able to iterate very quickly despite",
    "start": "81780",
    "end": "83640"
  },
  {
    "text": "the fact that they're working with large",
    "start": "83640",
    "end": "84930"
  },
  {
    "text": "data sets and then when they're ready",
    "start": "84930",
    "end": "87120"
  },
  {
    "text": "deploy to the cloud deploy damn order so",
    "start": "87120",
    "end": "90000"
  },
  {
    "text": "that they can execute at scale we use",
    "start": "90000",
    "end": "92460"
  },
  {
    "text": "elastic load balancer or lb to handle",
    "start": "92460",
    "end": "95340"
  },
  {
    "text": "incoming traffic we use ec2 to run our",
    "start": "95340",
    "end": "97770"
  },
  {
    "text": "web servers and we have s3 where we",
    "start": "97770",
    "end": "99960"
  },
  {
    "text": "store code and we store example data we",
    "start": "99960",
    "end": "102780"
  },
  {
    "text": "use ec2 running MongoDB to store machine",
    "start": "102780",
    "end": "105630"
  },
  {
    "text": "events and we use SQS for our",
    "start": "105630",
    "end": "107850"
  },
  {
    "text": "distributed calls we're using easy to to",
    "start": "107850",
    "end": "110490"
  },
  {
    "text": "manage and monitor Hadoop clusters we",
    "start": "110490",
    "end": "113970"
  },
  {
    "text": "use SES for notifying our users with",
    "start": "113970",
    "end": "118920"
  },
  {
    "text": "email and we launched the dupe clusters",
    "start": "118920",
    "end": "122070"
  },
  {
    "text": "on a mix of ec2 and elastic MapReduce",
    "start": "122070",
    "end": "124530"
  },
  {
    "text": "our users are actually storing their",
    "start": "124530",
    "end": "126090"
  },
  {
    "text": "data in s3 or ec2 for example again",
    "start": "126090",
    "end": "129599"
  },
  {
    "text": "MongoDB or other stores and soon they'll",
    "start": "129599",
    "end": "132029"
  },
  {
    "text": "also be able to store their data in",
    "start": "132029",
    "end": "133470"
  },
  {
    "text": "dynamo and redshift and integrate with",
    "start": "133470",
    "end": "135300"
  },
  {
    "text": "order our model requires that we both be",
    "start": "135300",
    "end": "137940"
  },
  {
    "text": "able to provision many hundreds thousand",
    "start": "137940",
    "end": "140820"
  },
  {
    "text": "machines simultaneously and the the",
    "start": "140820",
    "end": "145800"
  },
  {
    "text": "demand that we have is variable it's",
    "start": "145800",
    "end": "147600"
  },
  {
    "text": "highly variable depending on what our",
    "start": "147600",
    "end": "148830"
  },
  {
    "text": "customers need at any given moment if we",
    "start": "148830",
    "end": "150870"
  },
  {
    "text": "were going to try to get a start up off",
    "start": "150870",
    "end": "152850"
  },
  {
    "text": "the ground racking and bringing online",
    "start": "152850",
    "end": "155550"
  },
  {
    "text": "all those machines in advance of knowing",
    "start": "155550",
    "end": "158190"
  },
  {
    "text": "whether we really had a product that",
    "start": "158190",
    "end": "159240"
  },
  {
    "text": "people needed it would have been far too",
    "start": "159240",
    "end": "160830"
  },
  {
    "text": "expensive it would have taken far too",
    "start": "160830",
    "end": "162000"
  },
  {
    "text": "long it really would have never gone",
    "start": "162000",
    "end": "163410"
  },
  {
    "text": "anywhere but because we were able to",
    "start": "163410",
    "end": "165240"
  },
  {
    "text": "build on top of AWS we could build a",
    "start": "165240",
    "end": "168240"
  },
  {
    "text": "proof of concept and build it so that it",
    "start": "168240",
    "end": "170490"
  },
  {
    "text": "could scale and then as customers come",
    "start": "170490",
    "end": "172680"
  },
  {
    "text": "with units to have them add them add",
    "start": "172680",
    "end": "173730"
  },
  {
    "text": "them without any upfront cost it's",
    "start": "173730",
    "end": "175740"
  },
  {
    "text": "fantastic that Amazon Web Services",
    "start": "175740",
    "end": "177030"
  },
  {
    "text": "continues to innovate and invent in a",
    "start": "177030",
    "end": "179220"
  },
  {
    "text": "way that very few big companies",
    "start": "179220",
    "end": "181260"
  },
  {
    "text": "especially the technology space are able",
    "start": "181260",
    "end": "183390"
  },
  {
    "text": "to do on top of that the fact that they",
    "start": "183390",
    "end": "185430"
  },
  {
    "text": "continue to lower their prices makes a",
    "start": "185430",
    "end": "188100"
  },
  {
    "text": "very comfortable place to have your",
    "start": "188100",
    "end": "189270"
  },
  {
    "text": "business",
    "start": "189270",
    "end": "191750"
  }
]