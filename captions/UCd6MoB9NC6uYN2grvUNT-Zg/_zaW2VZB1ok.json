[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hi everybody thanks for coming today we're going to teach you how to master the AWS SDK for",
    "start": "520",
    "end": "6680"
  },
  {
    "text": "PHP um my name is Michael ding I'm Jeremy Lind blon and uh we're on the",
    "start": "6680",
    "end": "12360"
  },
  {
    "text": "engineering team at AWS that uh produces the AWS SDK for PHP so in order to",
    "start": "12360",
    "end": "18760"
  },
  {
    "text": "transform you into Master the of the SDK we're going to teach you about some of the low-level Concepts and we're going",
    "start": "18760",
    "end": "23880"
  },
  {
    "text": "to go all the way up to some highle Concepts that can speed up common development cases so",
    "start": "23880",
    "end": "30560"
  },
  {
    "text": "do what oh yeah there we go now you can see it okay great in the",
    "start": "30560",
    "end": "37520"
  },
  {
    "start": "35000",
    "end": "350000"
  },
  {
    "text": "first part of this talk we're going to you know talk about low-l Concepts we're going to show you how to install the SDK",
    "start": "37520",
    "end": "44039"
  },
  {
    "text": "um and we'll show you how to send web service operations and in order to illustrate these points we're going to",
    "start": "44039",
    "end": "49960"
  },
  {
    "text": "walk you through a pretty basic use case of creating an Amazon S3 bucket uploading an object to that bucket and",
    "start": "49960",
    "end": "56079"
  },
  {
    "text": "then listing the contents of that bucket now in the second part of this talk we'll cover some of the highle features",
    "start": "56079",
    "end": "62320"
  },
  {
    "text": "and these help to speed up common development tasks and it includes things like our Amazon S3 stream wrapper and uh",
    "start": "62320",
    "end": "68159"
  },
  {
    "text": "how to upload an entire directory of files in parallel to host things like a static blog or a static",
    "start": "68159",
    "end": "74720"
  },
  {
    "text": "website so before we dive in I I'll introduce the SDK um it's an open source",
    "start": "74720",
    "end": "80079"
  },
  {
    "text": "project that you can find at github.com AWS aws-sdk",
    "start": "80079",
    "end": "85240"
  },
  {
    "text": "dphp um you can send pull requests you can see open issues and we're pretty attended that and so the SDK is a HTTP",
    "start": "85240",
    "end": "94320"
  },
  {
    "text": "client and it it it helps you to interact with our various web services",
    "start": "94320",
    "end": "99720"
  },
  {
    "text": "in a pretty uh consistent and easy to use way it takes care of all kinds of",
    "start": "99720",
    "end": "106119"
  },
  {
    "text": "low-l stuff for you so that you don't have to worry about it for example uh serializing requests automatically",
    "start": "106119",
    "end": "111560"
  },
  {
    "text": "retrying failed requests with exponential backof and um it also",
    "start": "111560",
    "end": "117079"
  },
  {
    "text": "handles uh mapping all of our our you know 30 plus apis into a really",
    "start": "117079",
    "end": "122240"
  },
  {
    "text": "consistent way so we take care of worrying about these low-level things for you so that you can just worry about",
    "start": "122240",
    "end": "127799"
  },
  {
    "text": "building your applications and and we kind of get everything else out of your way so it's a suite of HTV clients it's",
    "start": "127799",
    "end": "135120"
  },
  {
    "text": "built on top of a library called guzzle which you'll hear a little bit about in this talk and guzzle is an HTTP client",
    "start": "135120",
    "end": "141480"
  },
  {
    "text": "for PHP that I actually created a few years ago and um it provides the SDK its",
    "start": "141480",
    "end": "147680"
  },
  {
    "text": "foundation it's a framework that we built it on top of and it gives us access to a lot of really powerful",
    "start": "147680",
    "end": "152879"
  },
  {
    "text": "features that guzzle provides like persistent HTTP connections which allows you to uh utilize the same open socket",
    "start": "152879",
    "end": "159720"
  },
  {
    "text": "over and over and it also provides the ability to send requests in parallel so um you can send you know 50 requests in",
    "start": "159720",
    "end": "166959"
  },
  {
    "text": "parallel and you're only as slow as your slowest request at that point and in addition to all this these great",
    "start": "166959",
    "end": "172519"
  },
  {
    "text": "features that we get from leveraging guzzle guzzle also gives us a uh event driven hook system so you can plug into",
    "start": "172519",
    "end": "179280"
  },
  {
    "text": "certain life cycle events of a request and add in custom business logic that you might need for your",
    "start": "179280",
    "end": "185080"
  },
  {
    "text": "application and also the SDK exposes various highle functionality that you",
    "start": "185080",
    "end": "190440"
  },
  {
    "text": "can use um and we'll cover a lot of the highle features of the SDK throughout the",
    "start": "190440",
    "end": "195599"
  },
  {
    "text": "talk and uh next up now that you know how to install the how to what the SDK",
    "start": "195599",
    "end": "201519"
  },
  {
    "text": "is and some of the basic concepts you need to install the SDK and this can actually be done in in several different",
    "start": "201519",
    "end": "207360"
  },
  {
    "text": "ways and the way that you choose is going to really be dependent on your application how you deploy your",
    "start": "207360",
    "end": "212920"
  },
  {
    "text": "application and just your your requirements so we understand that PHP applications are are deployed in a",
    "start": "212920",
    "end": "219680"
  },
  {
    "text": "myriad of different ways so we offer a composer and packages repository and uh",
    "start": "219680",
    "end": "225200"
  },
  {
    "text": "composer is a dependency management system for PHP and it's almost become the deao standard for for new PHP",
    "start": "225200",
    "end": "232000"
  },
  {
    "text": "projects and it's a really great way to declaratively specify your dependencies",
    "start": "232000",
    "end": "237040"
  },
  {
    "text": "and to uh allow composer to handle autoload and determining you know a dependency closure for you uh in",
    "start": "237040",
    "end": "243760"
  },
  {
    "text": "addition to composer which is our definitely our recommended manner uh of installing the SDK we also offer a far",
    "start": "243760",
    "end": "249519"
  },
  {
    "text": "file which is similar to Java's jar files it's every file that you need to run the SDK all combined into a single",
    "start": "249519",
    "end": "255840"
  },
  {
    "text": "file and includes an autoloader there's also a zip which includes all the dependencies if you want to just unzip",
    "start": "255840",
    "end": "261400"
  },
  {
    "text": "that onto your your server or FTP it up and if you're still using pair then we",
    "start": "261400",
    "end": "266440"
  },
  {
    "text": "have a pair Channel and finally we have uh Amazon Linux uh provides a yum repository that you can just yum install",
    "start": "266440",
    "end": "273000"
  },
  {
    "text": "the SDK and installing the SDK with composer",
    "start": "273000",
    "end": "278199"
  },
  {
    "text": "is really really easy all you do is first you got to go to get composer. org and they have uh installation",
    "start": "278199",
    "end": "284560"
  },
  {
    "text": "instructions for whatever system you're running on and once you've installed composer far file that single file then",
    "start": "284560",
    "end": "291039"
  },
  {
    "text": "uh you just create what's called a composer. Json file and the main root of your project and this this composer.",
    "start": "291039",
    "end": "297160"
  },
  {
    "text": "Json file it's just a list of your your dependencies and composer scans this and sees oh hey",
    "start": "297160",
    "end": "302320"
  },
  {
    "text": "I want the AWS SDK for PHP version fuzzy version 2.4 and what that means is that",
    "start": "302320",
    "end": "308600"
  },
  {
    "text": "you're going to get every version of the SDK from 2.4 all the way up to but not including",
    "start": "308600",
    "end": "314280"
  },
  {
    "text": "2.5 so that helps you uh you know it helps stop you from bringing in a new",
    "start": "314280",
    "end": "320039"
  },
  {
    "text": "version of the project that may have a breaking change or something unexpected you didn't think would happen um once",
    "start": "320039",
    "end": "326120"
  },
  {
    "text": "you've done this you just run composer. for install and composer goes out figures out all the dependencies that",
    "start": "326120",
    "end": "331639"
  },
  {
    "text": "you have in your project and then all those dependencies dependencies and then ends up downloading all of them and",
    "start": "331639",
    "end": "337000"
  },
  {
    "text": "creating an autoload file and this allows you to just you know you include composer autoload file and automatically",
    "start": "337000",
    "end": "343240"
  },
  {
    "text": "uh you just call new class and it it figures out where that",
    "start": "343240",
    "end": "347880"
  },
  {
    "start": "350000",
    "end": "396000"
  },
  {
    "text": "goes all right so you're here to become masters of the SDK so your apprenticeship officially begins right",
    "start": "350680",
    "end": "357000"
  },
  {
    "text": "now Michael showed you how to install the SD DK and identified some of its features but we're going to walk through",
    "start": "357000",
    "end": "364520"
  },
  {
    "text": "the use of some of S3's operations in order to see how the features of the SDK",
    "start": "364520",
    "end": "370199"
  },
  {
    "text": "are actually used uh uh to do web service requests so we're going to look",
    "start": "370199",
    "end": "375840"
  },
  {
    "text": "specifically at the crate bucket operation put object and list objects in",
    "start": "375840",
    "end": "381319"
  },
  {
    "text": "the Amazon S3 API and as we look at those we'll see how the features of the SDK allow you to work most effectively",
    "start": "381319",
    "end": "388639"
  },
  {
    "text": "with those operations in a way that you can also apply those same techniques to other services and",
    "start": "388639",
    "end": "393840"
  },
  {
    "text": "operations in the SDK so how many of you here have worked",
    "start": "393840",
    "end": "399160"
  },
  {
    "start": "396000",
    "end": "497000"
  },
  {
    "text": "with the Amazon S3 API before I'm expecting probably quite a few hands",
    "start": "399160",
    "end": "404240"
  },
  {
    "text": "here okay so that's good that's about what I expected uh I want did want to give a brief introduction of S3 just so",
    "start": "404240",
    "end": "410840"
  },
  {
    "text": "you're familiar with the terms and we're talking the same language Amazon simple storage service or Amazon S3 for short",
    "start": "410840",
    "end": "419240"
  },
  {
    "text": "is is a our web service that is a scalable storage in the cloud in S3 you work mainly with two",
    "start": "419240",
    "end": "427520"
  },
  {
    "text": "types of things you have buckets and objects so a bucket is essentially a",
    "start": "427520",
    "end": "432680"
  },
  {
    "text": "name space or container for objects and objects are the things that you store in",
    "start": "432680",
    "end": "437800"
  },
  {
    "text": "S3 so a bucket actually has a globally unique name whereas a object has a",
    "start": "437800",
    "end": "443960"
  },
  {
    "text": "unique key within a bucket so you take the bucket name the object key combine",
    "start": "443960",
    "end": "449680"
  },
  {
    "text": "it with the S3 endpoint to create a unique URL representing your object and you can see an example of that on the",
    "start": "449680",
    "end": "455680"
  },
  {
    "text": "slides right now with the bucket name and the object key highlighted S3 actually has a flat",
    "start": "455680",
    "end": "462199"
  },
  {
    "text": "storage structure and is more like a hash table than a file system however",
    "start": "462199",
    "end": "467520"
  },
  {
    "text": "you can simulate uh a file system by putting slashes in your object key as I",
    "start": "467520",
    "end": "473440"
  },
  {
    "text": "have in this example and we kind of just pretend like it's directories and most of the uh visual ual user interfaces",
    "start": "473440",
    "end": "480680"
  },
  {
    "text": "that you see on top of S3 will display uh S3 buckets and objects in that kind",
    "start": "480680",
    "end": "486159"
  },
  {
    "text": "of way so like I said we're going to look at create bucket put object and list",
    "start": "486159",
    "end": "493120"
  },
  {
    "text": "objects in the S3 API so we'll look at crate bucket first what you see on the screen right",
    "start": "493120",
    "end": "499159"
  },
  {
    "start": "497000",
    "end": "583000"
  },
  {
    "text": "now is a complete code sample start to finish of bootstrapping the SDK instantiating the S3 client executing",
    "start": "499159",
    "end": "506319"
  },
  {
    "text": "the create bucket op uh operation and doing a little bit of air handling don't",
    "start": "506319",
    "end": "511919"
  },
  {
    "text": "Focus too much on it though because I'm actually going to break this down over the next few slides and look at each",
    "start": "511919",
    "end": "517080"
  },
  {
    "text": "part individually one thing I did want to point out though is the first line which has the requir vendor autoload.php and",
    "start": "517080",
    "end": "525560"
  },
  {
    "text": "that is actually the autoloader that is generated by composer uh which Michael",
    "start": "525560",
    "end": "530600"
  },
  {
    "text": "was just talking about a few minutes ago so uh like like we like Michael said uh",
    "start": "530600",
    "end": "535680"
  },
  {
    "text": "using composer is the preferred way to use the SDK if you're using using uh a different way to install the SDK you'll",
    "start": "535680",
    "end": "542240"
  },
  {
    "text": "use a different type of require statement but no matter what installation method you used our user",
    "start": "542240",
    "end": "547880"
  },
  {
    "text": "guide outlines uh each way to bootstrap the SDK and what you need to use in your",
    "start": "547880",
    "end": "553120"
  },
  {
    "text": "required statement so definitely check out our user guide which is linked to from the sdk's web page and our GitHub",
    "start": "553120",
    "end": "559760"
  },
  {
    "text": "repository and there's instructions on how to bootstrap the",
    "start": "559760",
    "end": "564680"
  },
  {
    "text": "SDK now there's actually two ways to instantiate the client object so in this",
    "start": "564839",
    "end": "570279"
  },
  {
    "text": "case we're going to create a S3 client object to use the S3 service there's the client Factory method and another thing",
    "start": "570279",
    "end": "577360"
  },
  {
    "text": "that we call the service bilder I'm going show you an example of using both of these",
    "start": "577360",
    "end": "583320"
  },
  {
    "start": "583000",
    "end": "633000"
  },
  {
    "text": "methods the uh the if you're using the client Factory you'll basically reference the S3 client object directly",
    "start": "583320",
    "end": "590959"
  },
  {
    "text": "called its Factory method then pass in an array of options now that array",
    "start": "590959",
    "end": "596079"
  },
  {
    "text": "should contain things like your AWS credentials and including your access key and secret key uh as well as a",
    "start": "596079",
    "end": "602519"
  },
  {
    "text": "region now you notice I actually have the region commented out on this example as because you don't actually need to",
    "start": "602519",
    "end": "608240"
  },
  {
    "text": "specify a region with S3 it's kind of a special case because S3 has a default",
    "start": "608240",
    "end": "613320"
  },
  {
    "text": "Global type endpoint but you can specify a region if you want to put your buckets and objects in a particular region with",
    "start": "613320",
    "end": "620560"
  },
  {
    "text": "other services like ec2 RDS Glacier um you uh specifying the region is required",
    "start": "620560",
    "end": "627320"
  },
  {
    "text": "so when you're using a different service other than S3 you should keep that in mind as you use the",
    "start": "627320",
    "end": "633560"
  },
  {
    "start": "633000",
    "end": "730000"
  },
  {
    "text": "SDK there's also something called the service Builder that you can use to instantiate a",
    "start": "633600",
    "end": "639480"
  },
  {
    "text": "client um and in that case you'll reference the AWS class and use its",
    "start": "639480",
    "end": "644760"
  },
  {
    "text": "Factory method you can pass in an array of options like with the client factories but you can also use a config",
    "start": "644760",
    "end": "652079"
  },
  {
    "text": "file so if you specify a path to a config file the service Builder will load that and any client you create with",
    "start": "652079",
    "end": "658360"
  },
  {
    "text": "the service Builder will have those uh configuration settings applied to it so that config file uh will again it will",
    "start": "658360",
    "end": "664800"
  },
  {
    "text": "contain things like your credentials your regions there's some other cool stuff you can do with it and uh the",
    "start": "664800",
    "end": "670040"
  },
  {
    "text": "format and all the features related to that are documented in our user guide as well so once you have the the service",
    "start": "670040",
    "end": "677240"
  },
  {
    "text": "Builder object use the get method like you see on the screen you have AWS arog",
    "start": "677240",
    "end": "682800"
  },
  {
    "text": "get S3 or whatever the name of the service you're getting that will return you the client object with the configur",
    "start": "682800",
    "end": "689279"
  },
  {
    "text": "settings applied one of the very cool things about the service Builder is that if you do that same thing again AWS ARL",
    "start": "689279",
    "end": "696240"
  },
  {
    "text": "get S3 it'll return exactly the same instance of as the first time you did it",
    "start": "696240",
    "end": "702600"
  },
  {
    "text": "so that's good because you can reuse the same client instance and various places of your code if you have a handle on the",
    "start": "702600",
    "end": "709639"
  },
  {
    "text": "service biller object and the reason that that's a good idea is because if you reuse the same client object it also",
    "start": "709639",
    "end": "716680"
  },
  {
    "text": "reuses the same connection to the service so if you're making multiple requests to the same service you're going to want to",
    "start": "716680",
    "end": "723320"
  },
  {
    "text": "reuse that same client object because that'll help reduce the latency of doing all the requests",
    "start": "723320",
    "end": "730160"
  },
  {
    "start": "730000",
    "end": "819000"
  },
  {
    "text": "overall there's also several ways to uh provide your credentials to the SDK you",
    "start": "730160",
    "end": "735399"
  },
  {
    "text": "just saw two of them you can pass them in as array of options you can use the configuration file with the service",
    "start": "735399",
    "end": "741199"
  },
  {
    "text": "Builder the SDK also supports two other ways you can provide the credentials as",
    "start": "741199",
    "end": "746519"
  },
  {
    "text": "environment variables so if you have some kind of of um a configuration",
    "start": "746519",
    "end": "752040"
  },
  {
    "text": "management deployment system that where you can inject variables onto your server you can put your credentials on",
    "start": "752040",
    "end": "757720"
  },
  {
    "text": "right there the SDK will actually pick those up automatically uh you don't have to tell it to use environment",
    "start": "757720",
    "end": "763279"
  },
  {
    "text": "credentials it'll just look there oops they'll just look there and pick them up",
    "start": "763279",
    "end": "768560"
  },
  {
    "text": "and and use them uh same thing with IM instance profile credentials if you're running on ec2 you can use instance",
    "start": "768560",
    "end": "775480"
  },
  {
    "text": "profile credentials and the SDK will automatically use use those I don't have time to go uh too much into instance",
    "start": "775480",
    "end": "782199"
  },
  {
    "text": "profile credentials so if you're not sure what those are and you want to talk about it later please come and talk to me I'll be glad to explain it uh there",
    "start": "782199",
    "end": "788959"
  },
  {
    "text": "is an article on our our new uh PHP development blog uh the title uh",
    "start": "788959",
    "end": "794639"
  },
  {
    "text": "providing credentials to the AWS SDK for phb uh Michael actually wrote that article it's on our blog it explains all",
    "start": "794639",
    "end": "801600"
  },
  {
    "text": "four of these uh ways to provide credentials in",
    "start": "801600",
    "end": "806720"
  },
  {
    "text": "detail and if I handed out some cards with the blog URL on it if you didn't",
    "start": "806720",
    "end": "811760"
  },
  {
    "text": "get one beforehand I have more up here so come see me afterwards and I'll get you a card with the link to our",
    "start": "811760",
    "end": "819000"
  },
  {
    "start": "819000",
    "end": "899000"
  },
  {
    "text": "blog all right so now that we have an S3 client object let's get back to actually doing our create bucket operation so",
    "start": "819000",
    "end": "826480"
  },
  {
    "text": "this is an example of how we can do that we'll call the create bucket method on the client and that does the create",
    "start": "826480",
    "end": "833680"
  },
  {
    "text": "bucket operation in S3 there's a method uh in the on the client for each",
    "start": "833680",
    "end": "838759"
  },
  {
    "text": "operation so one to one correspondence there when you call the method you pass in an array of",
    "start": "838759",
    "end": "845199"
  },
  {
    "text": "parameters and if the request happens to fail uh it'll throw an exception and",
    "start": "845199",
    "end": "851040"
  },
  {
    "text": "that exception will be specific to the service that you're using so in this example you see in our Tri catch block",
    "start": "851040",
    "end": "856480"
  },
  {
    "text": "we're catching the S3 exception so there's an exception for each Service uh that you",
    "start": "856480",
    "end": "862880"
  },
  {
    "text": "use so you are probably wondering uh looking at that method and passing in an array of parameters how the heck do I",
    "start": "865360",
    "end": "871759"
  },
  {
    "text": "know what parameters I'm supposed to pass into the method it's a valid question uh for that reason we publish",
    "start": "871759",
    "end": "877440"
  },
  {
    "text": "API documentation that's linked to again from our website from our GitHub repository it's an invaluable Tool uh as",
    "start": "877440",
    "end": "884480"
  },
  {
    "text": "your programming with the SDK the API docs outline all the methods of the clients all the parameters that you can",
    "start": "884480",
    "end": "891000"
  },
  {
    "text": "pass into to each operation and uh you'll you will need that to work most effectively with the",
    "start": "891000",
    "end": "897680"
  },
  {
    "text": "SDK when you do uh uh execute an operation",
    "start": "897680",
    "end": "903560"
  },
  {
    "start": "899000",
    "end": "1038000"
  },
  {
    "text": "in this case I'm doing a list buckets operation with no parameters you get back a result and that result is what we",
    "start": "903560",
    "end": "910440"
  },
  {
    "text": "call a modeled response object that object uh implements the it implements",
    "start": "910440",
    "end": "915839"
  },
  {
    "text": "php's array access interface so it actually behaves like an array as well so you can use a square bracket syntax",
    "start": "915839",
    "end": "922120"
  },
  {
    "text": "to reference the data in that object or you can use some of the methods that we have on there so if you want a just a",
    "start": "922120",
    "end": "928720"
  },
  {
    "text": "normal array you can use like the two array method that's on there then you can you know print r or VAR dump or",
    "start": "928720",
    "end": "935120"
  },
  {
    "text": "whatever you like to do to debug random variables uh you can also just straight",
    "start": "935120",
    "end": "940160"
  },
  {
    "text": "up Echo it because we have two string on there too and it'll dump out a representation of the object as well as",
    "start": "940160",
    "end": "946279"
  },
  {
    "text": "the the structure of the data that would be found in there so you can use that if you just want to do some quick debugging",
    "start": "946279",
    "end": "952000"
  },
  {
    "text": "I think the coolest method though and the most valuable to me is the get path method which you see on the the two",
    "start": "952000",
    "end": "958959"
  },
  {
    "text": "methods there on the bottom so get path lets you specify a path that goes deep",
    "start": "958959",
    "end": "964920"
  },
  {
    "text": "into the response structure so when you do a list uh list buckets command you",
    "start": "964920",
    "end": "970959"
  },
  {
    "text": "get back basically an array of buckets which is an array of other arrays that",
    "start": "970959",
    "end": "976800"
  },
  {
    "text": "include things like the name so you can if you just want the name of the first bucket that you that you uh got returned",
    "start": "976800",
    "end": "983120"
  },
  {
    "text": "back that first get path command would give you exactly that if you want to get",
    "start": "983120",
    "end": "989040"
  },
  {
    "text": "all the names of all the buckets that were returned by the operation you can use Wild Card syntax like you see on the",
    "start": "989040",
    "end": "996160"
  },
  {
    "text": "bottom line where it's buckets star name and that will allow you to uh get you",
    "start": "996160",
    "end": "1002759"
  },
  {
    "text": "know arrays of data from deep within the response structure so it's very easy to work with the data that comes back there",
    "start": "1002759",
    "end": "1009399"
  },
  {
    "text": "and to get exactly the data you need out of it without having to uh Traverse blindly through kind of through some",
    "start": "1009399",
    "end": "1016600"
  },
  {
    "text": "structure and if you're wondering what the structure of the response is again you can go back to the API docs",
    "start": "1016600",
    "end": "1023920"
  },
  {
    "text": "not only do we have the parameters we also have all the data that is found in the response documented in our API",
    "start": "1023920",
    "end": "1030319"
  },
  {
    "text": "documentation so you can check that out there another tool that we have when",
    "start": "1030319",
    "end": "1035720"
  },
  {
    "text": "you're working with requests is the wire logger which allows",
    "start": "1035720",
    "end": "1040760"
  },
  {
    "start": "1038000",
    "end": "1102000"
  },
  {
    "text": "you to uh easily debug any request uh this code sample is the",
    "start": "1040760",
    "end": "1046918"
  },
  {
    "text": "original create at uh code sample I showed you at the beginning but I added",
    "start": "1046919",
    "end": "1052039"
  },
  {
    "text": "a few lines of code here to add the log plugin so the log plugin is actually uh",
    "start": "1052039",
    "end": "1057320"
  },
  {
    "text": "an object provided by the underlying guzzle library in the SDK so you can create a log plug-in object uh using the",
    "start": "1057320",
    "end": "1064600"
  },
  {
    "text": "default settings by using that get debug plug-in method down on the bottom left and attach it to the client using the ad",
    "start": "1064600",
    "end": "1072000"
  },
  {
    "text": "subscriber method once that's done every request you make with the S3 client will",
    "start": "1072000",
    "end": "1077600"
  },
  {
    "text": "dump out uh debug data to your console it looks kind of like this it'll include",
    "start": "1077600",
    "end": "1083080"
  },
  {
    "text": "the entire request and response including all the headers the URL and",
    "start": "1083080",
    "end": "1088120"
  },
  {
    "text": "the response body so you can quickly see what the SDK is actually doing with the",
    "start": "1088120",
    "end": "1093840"
  },
  {
    "text": "service how it's interacting with S3 you can do that to debug or you can just do it if you're curious and you want to",
    "start": "1093840",
    "end": "1099360"
  },
  {
    "text": "know what it's actually doing the log plugin is one of many",
    "start": "1099360",
    "end": "1104679"
  },
  {
    "start": "1102000",
    "end": "1147000"
  },
  {
    "text": "plugins included in the SDK and guzzle uh the plug-in architecture of",
    "start": "1104679",
    "end": "1110039"
  },
  {
    "text": "the SDK is the same plug-in architecture of guzzle and so along with the log plugin there's there's other useful",
    "start": "1110039",
    "end": "1116000"
  },
  {
    "text": "plugins including the back off plugin which is used internally by the SDK to implement uh request",
    "start": "1116000",
    "end": "1122919"
  },
  {
    "text": "retries and then there's other cool plugins like the mock plugin which allows you to stub out responses",
    "start": "1122919",
    "end": "1129559"
  },
  {
    "text": "returned by a client so that's very useful when you're testing with the SDK in your test you can actually tell the",
    "start": "1129559",
    "end": "1136559"
  },
  {
    "text": "the client object using the mock plug in what you want it to return in your test so you don't actually have to go and hit",
    "start": "1136559",
    "end": "1142520"
  },
  {
    "text": "the service so very useful for testing one other feature that is useful",
    "start": "1142520",
    "end": "1150240"
  },
  {
    "start": "1147000",
    "end": "1239000"
  },
  {
    "text": "in the SDK is something we call waiters so going back again back to our original",
    "start": "1150240",
    "end": "1155520"
  },
  {
    "text": "code sample there was uh after we did a create bucket operation there was a method that said wait until bucket",
    "start": "1155520",
    "end": "1162480"
  },
  {
    "text": "exists so we're going to talk about that there are many operations uh with",
    "start": "1162480",
    "end": "1168640"
  },
  {
    "text": "AWS Services where you when when you execute them the service that responds immediately says okay I will do that but",
    "start": "1168640",
    "end": "1175919"
  },
  {
    "text": "it doesn't mean that it's immediately done sometimes you have to wait for it to to uh be created so a good example is",
    "start": "1175919",
    "end": "1183039"
  },
  {
    "text": "creating an instance through the ec2 API that usually takes a couple minutes before that instance is actually ready",
    "start": "1183039",
    "end": "1188760"
  },
  {
    "text": "to use even though when you execute the request it comes back right away and says yep I'll create it but if you're",
    "start": "1188760",
    "end": "1195480"
  },
  {
    "text": "working in PHP and you create a resource and you actually want to do something else with that resource in the same",
    "start": "1195480",
    "end": "1201840"
  },
  {
    "text": "script uh there's not a good way to you know know how long you're supposed to wait until uh you can use that resource",
    "start": "1201840",
    "end": "1209720"
  },
  {
    "text": "so we built in this concept of waiters in the SDK where it actually will sleep and Pull and check that resource",
    "start": "1209720",
    "end": "1216039"
  },
  {
    "text": "periodically until it's in the state that you want to be in so with this example we're doing crate bucket then",
    "start": "1216039",
    "end": "1222360"
  },
  {
    "text": "we're doing wait until bucket exists and our script will pause there until the bucket is actually ready to use so then",
    "start": "1222360",
    "end": "1228000"
  },
  {
    "text": "we can immediately do something like list objects in that bucket or put object right away without having to",
    "start": "1228000",
    "end": "1235360"
  },
  {
    "text": "guess at when it'll be available all right so we looked at just",
    "start": "1235360",
    "end": "1241880"
  },
  {
    "start": "1239000",
    "end": "1259000"
  },
  {
    "text": "the crate bucket operation there but I already showed you a ton of features in the SDK including how to execute",
    "start": "1241880",
    "end": "1247640"
  },
  {
    "text": "operations uh waiters the log plugin and the other plugins the responses the API docs that was only looking at one",
    "start": "1247640",
    "end": "1254280"
  },
  {
    "text": "operation so we got we're going to look at two more so we'll do a put object object next so the put object API is",
    "start": "1254280",
    "end": "1261720"
  },
  {
    "start": "1259000",
    "end": "1289000"
  },
  {
    "text": "what you use to upload an object to S3 so when you do that put object API you",
    "start": "1261720",
    "end": "1267240"
  },
  {
    "text": "specify things like your bucket name the object key that you want to use and the body which can either be just a string",
    "start": "1267240",
    "end": "1274360"
  },
  {
    "text": "of data or with the PHP SDK you can use something like a file handle using fop",
    "start": "1274360",
    "end": "1280600"
  },
  {
    "text": "the SDK can take that knows how to work with it pull that data out of the file and upload that to to s34 you",
    "start": "1280600",
    "end": "1290039"
  },
  {
    "start": "1289000",
    "end": "1375000"
  },
  {
    "text": "and up until now the syntax that I've showed you for executing these operations has been actually the short",
    "start": "1290039",
    "end": "1296640"
  },
  {
    "text": "form of doing it it encapsulates a ton of stuff so that whole you know one",
    "start": "1296640",
    "end": "1301880"
  },
  {
    "text": "toone correspondence of method to operation name is actually the short way to do it on the bottom of this screen",
    "start": "1301880",
    "end": "1307960"
  },
  {
    "text": "you actually see it there is a longer way to do it you're probably wondering why in the world would I use the longer way if there's a shorter way to do it",
    "start": "1307960",
    "end": "1314840"
  },
  {
    "text": "well that's good question too but there are cool things you can do with the underlying command object that's",
    "start": "1314840",
    "end": "1320600"
  },
  {
    "text": "normally abstracted from you so instead of doing running a put object operation here we're doing get command method",
    "start": "1320600",
    "end": "1328200"
  },
  {
    "text": "telling it that we're this command is for the put object operation passing in the same array of parameters like we did",
    "start": "1328200",
    "end": "1334559"
  },
  {
    "text": "with the shorthand version but it doesn't execute the operation just yet it'll create a command object that can",
    "start": "1334559",
    "end": "1340480"
  },
  {
    "text": "be executed later so it's like a lazy execution of the operation so when you want to execute it you can run the get",
    "start": "1340480",
    "end": "1346840"
  },
  {
    "text": "result method on that command and then it'll perform the operation and give you the result but that command",
    "start": "1346840",
    "end": "1352200"
  },
  {
    "text": "object also has other methods that you can interact with such as the get request method and get response method",
    "start": "1352200",
    "end": "1359240"
  },
  {
    "text": "which actually give you you know data directly about the request and the response so you can uh just you know",
    "start": "1359240",
    "end": "1365000"
  },
  {
    "text": "examine or even modify headers of the request before you send it do cool things like that very the most awesome",
    "start": "1365000",
    "end": "1372520"
  },
  {
    "text": "thing though about uh using the command objects is that this is how you can execute the commands in",
    "start": "1372520",
    "end": "1380799"
  },
  {
    "start": "1375000",
    "end": "1422000"
  },
  {
    "text": "parallel so in this example right here we're creating two put object commands we're not executing them yet we're just",
    "start": "1380799",
    "end": "1386880"
  },
  {
    "text": "creating the the command objects going to upload two files where we're going to do it at the same time instead of doing",
    "start": "1386880",
    "end": "1393320"
  },
  {
    "text": "them one after another we going do them at the same time which should speed up that script that's doing that uh by",
    "start": "1393320",
    "end": "1400120"
  },
  {
    "text": "quite a bit actually and the way that you do that you create those command objects and you can pass them into the",
    "start": "1400120",
    "end": "1406400"
  },
  {
    "text": "the client's execute method you just you pass in an array of commands doesn't matter how uh you can pass in as many as",
    "start": "1406400",
    "end": "1413080"
  },
  {
    "text": "you want and basically you're only limited by you know your system that you're on is how many you can of those",
    "start": "1413080",
    "end": "1418760"
  },
  {
    "text": "you can do in",
    "start": "1418760",
    "end": "1421279"
  },
  {
    "start": "1422000",
    "end": "1490000"
  },
  {
    "text": "parallel so we talked about create bucket we talk about put objects last one is list objects another one we want",
    "start": "1423799",
    "end": "1431159"
  },
  {
    "text": "to look at so list objects is how you list out the objects in your bucket tell the bucket name you get back a list of",
    "start": "1431159",
    "end": "1437559"
  },
  {
    "text": "objects the interesting thing about this API is that S3 says we're only going to give",
    "start": "1437559",
    "end": "1443080"
  },
  {
    "text": "you back up to a th objects at a time from your bucket so if you have you know",
    "start": "1443080",
    "end": "1448720"
  },
  {
    "text": "5,000 objects in your bucket you actually have to perform this operation up you know at least five times to get",
    "start": "1448720",
    "end": "1455559"
  },
  {
    "text": "all that information about your bucket back and the way it does that is you uh when you perform the subsequent requests",
    "start": "1455559",
    "end": "1462600"
  },
  {
    "text": "you have to pass in a marker that specifies where you left off so S3 knows to give you the next set of a th instead",
    "start": "1462600",
    "end": "1469279"
  },
  {
    "text": "of the same set of a th that you got the first time so as you can imagine programming around that model can be you",
    "start": "1469279",
    "end": "1476279"
  },
  {
    "text": "know kind of complex because you have to keep track of that marker you have to make sure that you're U executing that",
    "start": "1476279",
    "end": "1481720"
  },
  {
    "text": "request more than once so in the SDK we have a concept of a feature called",
    "start": "1481720",
    "end": "1487919"
  },
  {
    "text": "iterators which is on the next screen not the black screen so we have uh this iterator",
    "start": "1487919",
    "end": "1496320"
  },
  {
    "start": "1490000",
    "end": "1550000"
  },
  {
    "text": "function and the iterator objects that you can get from the SDK allow you to iterate through an entire result set",
    "start": "1496320",
    "end": "1503480"
  },
  {
    "text": "regardless of the limitations of how many you can get back from a particular API the iterator will take care of",
    "start": "1503480",
    "end": "1509960"
  },
  {
    "text": "handling those markers or tokens with however the service does pagination the iterator will take care of that for you",
    "start": "1509960",
    "end": "1516440"
  },
  {
    "text": "under the hood you don't have to actually know how to do the pagination uh so one one good thing is",
    "start": "1516440",
    "end": "1523000"
  },
  {
    "text": "that it instead of you know trying to get all the results at once the iterator will only get as many results as it",
    "start": "1523000",
    "end": "1529039"
  },
  {
    "text": "needs so it only loads into memory you know enough to show you what you've you've told it to to tell you about uh",
    "start": "1529039",
    "end": "1535880"
  },
  {
    "text": "and the iterator objects are compatible with all of sp's iterator objects as well so you can uh you know tie it in",
    "start": "1535880",
    "end": "1542919"
  },
  {
    "text": "and decorate the iterators from the SDK with the objects that are from native",
    "start": "1542919",
    "end": "1550080"
  },
  {
    "start": "1550000",
    "end": "1602000"
  },
  {
    "text": "PHP so to use the iterator you um will do something like this so instead of",
    "start": "1550600",
    "end": "1556440"
  },
  {
    "text": "calling the list object operation you'll use another method uh get list objects",
    "start": "1556440",
    "end": "1562320"
  },
  {
    "text": "iterator and all the iterators and the SDK are formatted like this get name of",
    "start": "1562320",
    "end": "1568240"
  },
  {
    "text": "the operation iterator and that will return you the iterator object then you can simply just put that in a for each",
    "start": "1568240",
    "end": "1575120"
  },
  {
    "text": "statement and loop over it and you get back each of those things one by one to operate on and it'll just make it'll",
    "start": "1575120",
    "end": "1581760"
  },
  {
    "text": "make the requests to the service as needed to supply you with the item that",
    "start": "1581760",
    "end": "1587039"
  },
  {
    "text": "you've iterated to so very cool in version one of the SDK we don't have",
    "start": "1587039",
    "end": "1593279"
  },
  {
    "text": "this functionality I show you example of what it actually looks like to do you",
    "start": "1593279",
    "end": "1599440"
  },
  {
    "text": "know this type of thing without iterators so this is an example using uh",
    "start": "1599440",
    "end": "1604760"
  },
  {
    "text": "SDK version one code to do a scan operation for Dynamo DB you can tell that you know there's a",
    "start": "1604760",
    "end": "1611799"
  },
  {
    "text": "lot of code there and you'd have to write that on your own to actually make that happen well our customers do not like",
    "start": "1611799",
    "end": "1618799"
  },
  {
    "text": "doing this and uh I'll be honest I don't like doing that either so we decided to you know make it so that you don't have",
    "start": "1618799",
    "end": "1625799"
  },
  {
    "text": "to do that we don't want you to have to write that code over and over again we don't have to want we don't want you to make mistakes writing that code and get",
    "start": "1625799",
    "end": "1632200"
  },
  {
    "text": "frustrated we want to provide that functionality for you so the iterators fun uh feature in the SDK uh allows you",
    "start": "1632200",
    "end": "1638880"
  },
  {
    "start": "1636000",
    "end": "1656000"
  },
  {
    "text": "to do this much easier so this is a code sample of the same exact thing using",
    "start": "1638880",
    "end": "1644000"
  },
  {
    "text": "version two of the SDK as you can see it's much shorter much easier to comprehend uh very easy to use just",
    "start": "1644000",
    "end": "1651799"
  },
  {
    "text": "create the iterator object and for each over it very easy like I said before uh",
    "start": "1651799",
    "end": "1657760"
  },
  {
    "text": "these iterators are compatible with the SPL iterator objects provided by native PHP so this is our list objects uh",
    "start": "1657760",
    "end": "1665240"
  },
  {
    "text": "example again except this time I'm I'm decorating the iterator returned by the SDK with a limit iterator which is part",
    "start": "1665240",
    "end": "1672000"
  },
  {
    "text": "of the SPL library and uh when I forre over that decorated iterator does the",
    "start": "1672000",
    "end": "1677080"
  },
  {
    "text": "same exact thing except we've told it with our limit iterator that we only want five so you can work with the SDK",
    "start": "1677080",
    "end": "1683360"
  },
  {
    "text": "iterators alongside with the iterators provided by PHP very",
    "start": "1683360",
    "end": "1689440"
  },
  {
    "start": "1689000",
    "end": "1741000"
  },
  {
    "text": "easily all right so we covered just three operations in one service and we",
    "start": "1689440",
    "end": "1695159"
  },
  {
    "text": "saw how the features in the SDK can help you work with those operations very effectively so we talked about commands",
    "start": "1695159",
    "end": "1701480"
  },
  {
    "text": "we talked about parallel commands we talked about uh results we talked about Waiters iterators years I think there",
    "start": "1701480",
    "end": "1709159"
  },
  {
    "text": "was more than that too there was a lot of stuff there right so I just want to congratulate you",
    "start": "1709159",
    "end": "1715159"
  },
  {
    "text": "because you now have my personal stamp of approval you you know everything that",
    "start": "1715159",
    "end": "1720760"
  },
  {
    "text": "you need to know to use the SDK effectively in your application but you're not quite Masters yet we have",
    "start": "1720760",
    "end": "1727720"
  },
  {
    "text": "some really cool features that we want to show you to help you even",
    "start": "1727720",
    "end": "1732480"
  },
  {
    "text": "more so in this next section um you well so",
    "start": "1736399",
    "end": "1743840"
  },
  {
    "start": "1741000",
    "end": "1773000"
  },
  {
    "text": "far you've learned some some low-l Concepts and a little bit of high level Concepts and if you soaked in what",
    "start": "1743840",
    "end": "1749720"
  },
  {
    "text": "Jeremy just taught you then you should be able to go out and build a pretty sophisticated application with AWS but",
    "start": "1749720",
    "end": "1755799"
  },
  {
    "text": "there's some high level use cases that we've seen uh be pretty common for for our customers and we decided to kind of",
    "start": "1755799",
    "end": "1762720"
  },
  {
    "text": "wrap those up in a way that helps to solve that problem that complex problem for you and a a simple and useful",
    "start": "1762720",
    "end": "1769080"
  },
  {
    "text": "way so we'll we'll go through a few uh High Lev abstractions and and talk about",
    "start": "1769080",
    "end": "1774240"
  },
  {
    "text": "those and the first one if you've ever need to use Amazon S3 like a local file",
    "start": "1774240",
    "end": "1779440"
  },
  {
    "text": "system let's say that um you built a deployment system that you you have a build system that you say here's a path",
    "start": "1779440",
    "end": "1785919"
  },
  {
    "text": "to a directory where I want to put all my build artifacts and then all of a sudden you you have a development system",
    "start": "1785919",
    "end": "1791919"
  },
  {
    "text": "that has I want to I want to put my my files locally in development but whenever I move to production I want all",
    "start": "1791919",
    "end": "1797840"
  },
  {
    "text": "my files to be hosted in Amazon S3 well instead of having to update your application to add new uh new new",
    "start": "1797840",
    "end": "1804919"
  },
  {
    "text": "features for uh S3 and you can actually just use the Amazon S3 stream wrapper to",
    "start": "1804919",
    "end": "1810919"
  },
  {
    "text": "tell PHP to handle all that interaction for you so PHP actually has a built-in",
    "start": "1810919",
    "end": "1816640"
  },
  {
    "start": "1814000",
    "end": "2287000"
  },
  {
    "text": "concept called stream wrapper and what this does it provides a consistent input output interface for various filik",
    "start": "1816640",
    "end": "1823840"
  },
  {
    "text": "protocols so um you can use functions that you're already familiar with like f",
    "start": "1823840",
    "end": "1829039"
  },
  {
    "text": "open and F read file get contents things like that and these functions uh they",
    "start": "1829039",
    "end": "1835080"
  },
  {
    "text": "actually create resources and then you can read bytes from these objects as needed and when you pull bytes off of",
    "start": "1835080",
    "end": "1842240"
  },
  {
    "text": "these these these resources you don't have to read the entire resource upfront buffer it and then go back and do your",
    "start": "1842240",
    "end": "1848760"
  },
  {
    "text": "do your script or you don't have to write all your data buffer and then eventually write so stream wrappers",
    "start": "1848760",
    "end": "1854640"
  },
  {
    "text": "allow you to read data on demand as needed needed and they also abstract away the file system into a consistent",
    "start": "1854640",
    "end": "1863960"
  },
  {
    "text": "interface so you've probably all used a function like this before where you you just say file get contents and you pass",
    "start": "1863960",
    "end": "1870360"
  },
  {
    "text": "the path to a file this is really simple what this is going to do it's going to open that file and load the body of the",
    "start": "1870360",
    "end": "1875519"
  },
  {
    "text": "file and then return it but you might not know that this call file get contents with that path is exactly",
    "start": "1875519",
    "end": "1882440"
  },
  {
    "text": "equivalent to passing in file col SL slash and then the path so that means",
    "start": "1882440",
    "end": "1887639"
  },
  {
    "text": "whenever you're using PHP and you're using fopen in these file like operations PHP uses what's called a",
    "start": "1887639",
    "end": "1892880"
  },
  {
    "text": "stream wrapper protocol to know this is what I'm using and there's got to be a stream wrapper register to handle this",
    "start": "1892880",
    "end": "1899080"
  },
  {
    "text": "protocol when you don't pass a protocol in it it assumes that it's the file protocol and the file protocol knows",
    "start": "1899080",
    "end": "1904840"
  },
  {
    "text": "exactly how to open local files and how to scan local directories and so here file colon SL",
    "start": "1904840",
    "end": "1912600"
  },
  {
    "text": "slash is the protocol uh here's another protocol that you probably all use for really simple",
    "start": "1912600",
    "end": "1918440"
  },
  {
    "text": "cases of maybe downloading the contents of the body of a of a HTTP request so",
    "start": "1918440",
    "end": "1924200"
  },
  {
    "text": "here we're getting the body of amazon.com and HTTP is the protocol",
    "start": "1924200",
    "end": "1929240"
  },
  {
    "text": "phpcs this is an HTTP protocol so I've got a stream wrapper registered for HTTP",
    "start": "1929240",
    "end": "1935480"
  },
  {
    "text": "that encapsulates the whole process of sending that request and parsing the",
    "start": "1935480",
    "end": "1940600"
  },
  {
    "text": "response now before you can use the Amazon S3 stream wrapper you got to do a little bit of setup and this is because",
    "start": "1940600",
    "end": "1947480"
  },
  {
    "text": "built-in stream rappers in PHP are registered by default but whenever you have a a a user contributed uh stream",
    "start": "1947480",
    "end": "1953679"
  },
  {
    "text": "rapper for PHP to utilize you actually have to register and say Here's the protocol and here's the wrapper to use",
    "start": "1953679",
    "end": "1959200"
  },
  {
    "text": "so it's really simple you just create a S3 client like Jeremy showed earlier and then off of the S3 client there's a",
    "start": "1959200",
    "end": "1965600"
  },
  {
    "text": "register stream wrapper method and this is going to register that protocol with this client so anytime that you use",
    "start": "1965600",
    "end": "1972840"
  },
  {
    "text": "stream operations like below file get contents S3 colon SL the bucket name and",
    "start": "1972840",
    "end": "1978120"
  },
  {
    "text": "then the key it's going to actually utilize that client object and so you can do really cool stuff with that by",
    "start": "1978120",
    "end": "1984679"
  },
  {
    "text": "for example you could create a uh client that has the log plugin which would still show that log output that we",
    "start": "1984679",
    "end": "1990600"
  },
  {
    "text": "talked about earlier but it would show it for even every uh stream operation as well so you can see these operations are",
    "start": "1990600",
    "end": "1997679"
  },
  {
    "text": "really similar to what we just looked at but here S3 is the protocol and then after S3 you're going to always pass in",
    "start": "1997679",
    "end": "2004000"
  },
  {
    "text": "a bucket name and that bucket name is is going to be an every operation and um in",
    "start": "2004000",
    "end": "2009159"
  },
  {
    "text": "most operations if you're working with objects you're going to pass in a key and the key is a flat key space like we",
    "start": "2009159",
    "end": "2016760"
  },
  {
    "text": "talked about earlier but um so fil local file systems have nested hierarchies of",
    "start": "2016760",
    "end": "2022240"
  },
  {
    "text": "directories Amazon S3 just has a flat key space but you can actually do what's",
    "start": "2022240",
    "end": "2027519"
  },
  {
    "text": "called a create a pseudo directory with Amazon S3 because um you can actually use what's called a key prefix so let's",
    "start": "2027519",
    "end": "2035240"
  },
  {
    "text": "say that given the bucket name is Fu and the key is badb barbam this is going to",
    "start": "2035240",
    "end": "2041480"
  },
  {
    "text": "generate a URL that looks as if it's a nested hierarchy of files but really",
    "start": "2041480",
    "end": "2046840"
  },
  {
    "text": "it's just S3 knows that this is the flat key of basar bam and this is what your url would look",
    "start": "2046840",
    "end": "2054079"
  },
  {
    "text": "like one of the great things that I mentioned about streams and that you can get with the Amazon S3 stream wrapper is",
    "start": "2054079",
    "end": "2059760"
  },
  {
    "text": "that you can read bites off of a stream on demand rather than having to read everything up front and buffer it and",
    "start": "2059760",
    "end": "2065599"
  },
  {
    "text": "then read the bites again so this is really simple and you've probably all use f open before but it",
    "start": "2065599",
    "end": "2071960"
  },
  {
    "text": "just you f open and then you pass into file mode and this tells PHP hey I'm I'm",
    "start": "2071960",
    "end": "2077560"
  },
  {
    "text": "opening this this file resource and I'm only going to access it in readon mode or maybe you'd only access in right only",
    "start": "2077560",
    "end": "2083398"
  },
  {
    "text": "mode and in in doing this and giving it an accurate representation of how you're going to utilize that stream uh a lot of",
    "start": "2083399",
    "end": "2089638"
  },
  {
    "text": "stream wrappers can actually make optimizations on your behalf to do the most optimal thing so here we're opening",
    "start": "2089639",
    "end": "2095358"
  },
  {
    "text": "a file in read only mode and and this is actually an object key stored in Amazon S3 you're reading the bytes off of that",
    "start": "2095359",
    "end": "2101720"
  },
  {
    "text": "object until finally you've got the fef which is the end of file and then you",
    "start": "2101720",
    "end": "2107119"
  },
  {
    "text": "close the file handle and it's important to always close uh stream resources because stream rappers then can clean up",
    "start": "2107119",
    "end": "2114160"
  },
  {
    "text": "those open resources that it created on your behalf another great thing about stream",
    "start": "2114160",
    "end": "2120280"
  },
  {
    "text": "resources and and stream wrappers is that you get access to the stream ecosystem and this includes a lot",
    "start": "2120280",
    "end": "2126960"
  },
  {
    "text": "helpful features that you can just utilize in your application whether you're working with local file system or Amazon",
    "start": "2126960",
    "end": "2132320"
  },
  {
    "text": "S3 so in this example it's a little bit more complicated in the last one but it does a really cool thing as you download",
    "start": "2132320",
    "end": "2139040"
  },
  {
    "text": "data so we you can actually upin a stream filter and uh what stream filters",
    "start": "2139040",
    "end": "2144880"
  },
  {
    "text": "do is as data goes through the stream filter it can actually modify that data and pass it along so you can modify data",
    "start": "2144880",
    "end": "2151720"
  },
  {
    "text": "as you write it or modify data as you read it now in this example we're opening a Amazon S3 object that's a",
    "start": "2151720",
    "end": "2158440"
  },
  {
    "text": "zipped up object so ky.zip and then we're going to open another stream resource that is to a local file and",
    "start": "2158440",
    "end": "2165560"
  },
  {
    "text": "we're going to open that in write mode as we're writing to that open file we're going to actually z. inflate the",
    "start": "2165560",
    "end": "2172040"
  },
  {
    "text": "contents so we're downloading this ZIP file inflating the zip as we're reading bytes and then writing the unzip file to",
    "start": "2172040",
    "end": "2178720"
  },
  {
    "text": "the local file system so in in this example too you can see stream copy to",
    "start": "2178720",
    "end": "2183839"
  },
  {
    "text": "stream is another part of that stream ecosystem where it makes things a lot easier for you and there's a lot of built-in functions in PHP um and this is",
    "start": "2183839",
    "end": "2191079"
  },
  {
    "text": "going to do basically what we saw in the last slide read the entire contents of the stream until you hit the end uh and",
    "start": "2191079",
    "end": "2197319"
  },
  {
    "text": "then like I said before it's really important to close stream resources especially when you're uh using stream",
    "start": "2197319",
    "end": "2202960"
  },
  {
    "text": "filters because it uses a lot of buffering and often times those those buffers that it utilizes aren't really",
    "start": "2202960",
    "end": "2209000"
  },
  {
    "text": "flushed or data isn't really transferred until you actually close those",
    "start": "2209000",
    "end": "2214720"
  },
  {
    "text": "resources so so far far we've talked about how to abstract like object operations reading data writing data but",
    "start": "2215119",
    "end": "2222440"
  },
  {
    "text": "stream wrappers also allow you to abstract uh file system functions of listing directories and listing the",
    "start": "2222440",
    "end": "2228200"
  },
  {
    "text": "files that are inside of a directory so here's an example um I don't know if yall have utilized uh open",
    "start": "2228200",
    "end": "2234400"
  },
  {
    "text": "dur it's one of php's kind of wonky ways to to open a directory handle and then",
    "start": "2234400",
    "end": "2239760"
  },
  {
    "text": "from the directory handle you can iterate over the contents of the directory with a function called reader",
    "start": "2239760",
    "end": "2245599"
  },
  {
    "text": "so this is an example of that uh along the way you can notice that we have iser which if you pass in say s3bucket",
    "start": "2245599",
    "end": "2253920"
  },
  {
    "text": "name like the example there then it would actually do an a head request on",
    "start": "2253920",
    "end": "2259079"
  },
  {
    "text": "that bucket in Amazon S3 and it would determine whether or not that bucket exists there's other functions like file",
    "start": "2259079",
    "end": "2265079"
  },
  {
    "text": "exists um is file is dur things like that that you can utilize that would",
    "start": "2265079",
    "end": "2270119"
  },
  {
    "text": "return the exact same result that you would expect from a local file system so this example is a little bit",
    "start": "2270119",
    "end": "2275480"
  },
  {
    "text": "weird with the open dur stuff so PHP actually offers something much more intuitive the recursive iterator",
    "start": "2275480",
    "end": "2282000"
  },
  {
    "text": "iterator wrapping a recursive directory iterator so it's way easier to use um",
    "start": "2282000",
    "end": "2287839"
  },
  {
    "start": "2287000",
    "end": "2342000"
  },
  {
    "text": "but full disclosure we did not write this and we did not name this this is built into PHP standard PHP Library",
    "start": "2287839",
    "end": "2294359"
  },
  {
    "text": "which is those those iterators that Jeremy was talking about uh the great thing about this is once you've got this",
    "start": "2294359",
    "end": "2300119"
  },
  {
    "text": "ridiculous thing set up and you've created your iterator then you can just simply iterate over that and that's",
    "start": "2300119",
    "end": "2305839"
  },
  {
    "text": "going to yield you back your SPL file info objects and and these actually encapsulate an object from Amazon S3 and",
    "start": "2305839",
    "end": "2313480"
  },
  {
    "text": "they can tell you really useful stuff like the file name the directory the files located in the size of the file um",
    "start": "2313480",
    "end": "2320640"
  },
  {
    "text": "you know the mode interesting things like that so another interesting thing",
    "start": "2320640",
    "end": "2326800"
  },
  {
    "text": "about SPL iterators is that you can actually wrap them with other iterators and we actually do this heavily in",
    "start": "2326800",
    "end": "2331920"
  },
  {
    "text": "another example we'll talk about in a little bit so if you don't were to run that",
    "start": "2331920",
    "end": "2337359"
  },
  {
    "text": "sample You' get output kind of like this where you know you've got file and the name of the file and then eventually",
    "start": "2337359",
    "end": "2343560"
  },
  {
    "start": "2342000",
    "end": "2361000"
  },
  {
    "text": "you'd get what you see there highlighted in blue is a directory and then the name of a what we called earlier a pseudo",
    "start": "2343560",
    "end": "2349640"
  },
  {
    "text": "directory so we're we're actually emulating the hierarchy of a file system with these pseudo directory key prefixes",
    "start": "2349640",
    "end": "2356200"
  },
  {
    "text": "and you can use that to kind of emulate exactly what you would get on a local file system so the stream wrapper it's a",
    "start": "2356200",
    "end": "2363359"
  },
  {
    "start": "2361000",
    "end": "2385000"
  },
  {
    "text": "really powerful feature that we offer in the SDK it allows you to utilize Amazon",
    "start": "2363359",
    "end": "2368480"
  },
  {
    "text": "S3 in a way that you you don't actually have to tell your application how to use",
    "start": "2368480",
    "end": "2373520"
  },
  {
    "text": "Amazon S3 it wraps that all up for you um you can read bytes on demand as needed write bytes as needed and you get",
    "start": "2373520",
    "end": "2380480"
  },
  {
    "text": "to use familiar methods that you've used uh in your day-to-day activities already so in the next section uh we'll",
    "start": "2380480",
    "end": "2388280"
  },
  {
    "start": "2385000",
    "end": "2413000"
  },
  {
    "text": "talk about how to upload a nested hierarchy of files and folders to Amazon",
    "start": "2388280",
    "end": "2394200"
  },
  {
    "text": "S3 so this is really use useful if uh you know you're you're hosting a static",
    "start": "2394200",
    "end": "2399440"
  },
  {
    "text": "blog or a static website and you want to build it locally and then upload that entire structure to Amazon S3 and have",
    "start": "2399440",
    "end": "2406680"
  },
  {
    "text": "those same you know the file system layout key prefixes all of that translated to you to S3's flat key space",
    "start": "2406680",
    "end": "2413680"
  },
  {
    "start": "2413000",
    "end": "2469000"
  },
  {
    "text": "because with tools like jeal and octopress and Pelican making building",
    "start": "2413680",
    "end": "2419280"
  },
  {
    "text": "static blogging even easier and easier it's become a really attractive alternative to Solutions like WordPress",
    "start": "2419280",
    "end": "2425079"
  },
  {
    "text": "or database driven BL platforms and this is because you don't need a database uh",
    "start": "2425079",
    "end": "2430359"
  },
  {
    "text": "you don't need web servers and you don't need to worry about are my servers up can I sustain a huge burst in traffic um",
    "start": "2430359",
    "end": "2437040"
  },
  {
    "text": "because a static blog hosted on Amazon S3 behind cloudfront which is our distributed CDN offering can take all of",
    "start": "2437040",
    "end": "2443960"
  },
  {
    "text": "this load and distributed across Edge locations around the world so it it makes the deployment process easy and it",
    "start": "2443960",
    "end": "2450119"
  },
  {
    "text": "makes the management overhead significantly less than managing the a a blogging platform that utilizes a the",
    "start": "2450119",
    "end": "2456440"
  },
  {
    "text": "database so if you don't need these Advanced features that you you would get from something like WordPress then a",
    "start": "2456440",
    "end": "2462079"
  },
  {
    "text": "static blogging platform is a really great inexpensive way to host a Blog on uh on Amazon",
    "start": "2462079",
    "end": "2468400"
  },
  {
    "text": "S3 so let's say you have a really cool blog like this um you've got you know some CSS files you've got some awesome",
    "start": "2468400",
    "end": "2475000"
  },
  {
    "text": "images like this hand it's uh and then maybe some JavaScript to Fork on GitHub to improve the website um so you've got",
    "start": "2475000",
    "end": "2481560"
  },
  {
    "text": "a local file system you've got images and that's got its own folders and its own files underneath",
    "start": "2481560",
    "end": "2486760"
  },
  {
    "text": "you've got your index. HTML file and you want this file system to be uploaded in exactly the same way and mapped in",
    "start": "2486760",
    "end": "2493079"
  },
  {
    "text": "exactly the same way to your Amazon S3 bucket so you would you might think that that would be pretty complicated and",
    "start": "2493079",
    "end": "2499000"
  },
  {
    "text": "hard to do and it actually isn't with the with the Amazon S3 client we have a",
    "start": "2499000",
    "end": "2504480"
  },
  {
    "start": "2500000",
    "end": "2562000"
  },
  {
    "text": "high level abstraction that takes this and makes it as painless as possible basically what it does is you pass in a",
    "start": "2504480",
    "end": "2510880"
  },
  {
    "text": "local directory the path to a local directory and then the path to a and then the name of a bucket that you want to up upload that directory to and what",
    "start": "2510880",
    "end": "2518040"
  },
  {
    "text": "it does is it recursively iterates over your local directory it checks if that file exists in Amazon S3 and if it",
    "start": "2518040",
    "end": "2525319"
  },
  {
    "text": "doesn't exist it uploads it or it checks if that file exists on Amazon S3 and has been modified or the file size has",
    "start": "2525319",
    "end": "2532560"
  },
  {
    "text": "changed since it was last uploaded um and then once it builds up this this cue of files that needed to to",
    "start": "2532560",
    "end": "2539599"
  },
  {
    "text": "be uploaded it uploads them in parallel as efficiently as possible uh we also",
    "start": "2539599",
    "end": "2544720"
  },
  {
    "text": "will automatically switch to upload ing really big files using multi-art uploads with Amazon S3 which is a way to take",
    "start": "2544720",
    "end": "2551800"
  },
  {
    "text": "like a 50 gig file and upload that in chunks in parallel and that helps with",
    "start": "2551800",
    "end": "2556960"
  },
  {
    "text": "better error recovery and it makes your data it allows you to do a rolling check some as",
    "start": "2556960",
    "end": "2562079"
  },
  {
    "start": "2562000",
    "end": "2586000"
  },
  {
    "text": "well so the method signature is really simple 99% of the time you're just going to pass in the path to a file and a",
    "start": "2562079",
    "end": "2569359"
  },
  {
    "text": "bucket name sometimes though you might need to host things under a key prefix",
    "start": "2569359",
    "end": "2574760"
  },
  {
    "text": "and you might need to pass up in some extra options that help you to modify how files are transferred or how they're",
    "start": "2574760",
    "end": "2580319"
  },
  {
    "text": "going to be transformed when they put on the server so a key prefix is a way to um",
    "start": "2580319",
    "end": "2585520"
  },
  {
    "text": "put a a collection of objects underneath a certain path so here we're putting objects under blogs let's say you have a",
    "start": "2585520",
    "end": "2591920"
  },
  {
    "start": "2586000",
    "end": "2610000"
  },
  {
    "text": "website and you want your your blog to be under this path but maybe you want your awesome dating profile to be under like dating or something so we put blogs",
    "start": "2591920",
    "end": "2599280"
  },
  {
    "text": "under here and then we're passing the key prefix as a third argument and then there's uh there's several options too",
    "start": "2599280",
    "end": "2606200"
  },
  {
    "text": "like uh you can pass in parameters and these map one to one with the parameters of a put object operation so we're going",
    "start": "2606200",
    "end": "2613040"
  },
  {
    "start": "2610000",
    "end": "2649000"
  },
  {
    "text": "to say AAL is public read which is going to be really important for you know hosting a Blog you want people to be able to read it and then concurrency is",
    "start": "2613040",
    "end": "2619920"
  },
  {
    "text": "uploading files in parallel this controls the number of Maximum uploads you can do in parallel if you're",
    "start": "2619920",
    "end": "2625040"
  },
  {
    "text": "uploading really big files we've seen that if you lower this number to a lower amount like say 5 to 10 you'll get",
    "start": "2625040",
    "end": "2631480"
  },
  {
    "text": "better throughput uh and then if you have really small files you might want to raise that to a higher number",
    "start": "2631480",
    "end": "2636680"
  },
  {
    "text": "and finally there's debug which will show you exactly what's happening what's being sent from where to where and the",
    "start": "2636680",
    "end": "2643000"
  },
  {
    "text": "size of that file and this is kind of what it would look like uh and that's a really great",
    "start": "2643000",
    "end": "2648920"
  },
  {
    "text": "feature and you can host your blog you can upload your blog but after you've uploaded your blog let's say your laptop",
    "start": "2648920",
    "end": "2654040"
  },
  {
    "start": "2649000",
    "end": "2685000"
  },
  {
    "text": "caught on fire you lost it or something and you need to back up your blog back to your local computer we actually have",
    "start": "2654040",
    "end": "2659160"
  },
  {
    "text": "the inverse of that function and it's called the download bucket method it's got the exact same method signature you",
    "start": "2659160",
    "end": "2665040"
  },
  {
    "text": "pass the local directory that you want to download to you pass the bucket name you're downloading from and it handles",
    "start": "2665040",
    "end": "2670839"
  },
  {
    "text": "the rest a really great feature that we that shows kind of how you can reuse",
    "start": "2670839",
    "end": "2676040"
  },
  {
    "text": "these tools that we offer with the SDK and build up bigger tools that have an easier to ous interface is this example",
    "start": "2676040",
    "end": "2682520"
  },
  {
    "text": "here what we're doing is we're actually going to synchronize two Amazon S3 buckets in order to do that we're using",
    "start": "2682520",
    "end": "2689400"
  },
  {
    "start": "2685000",
    "end": "2707000"
  },
  {
    "text": "the Amazon S3 stream wrapper the upload directory method doesn't care if it's a local file system or if it's a remote",
    "start": "2689400",
    "end": "2695599"
  },
  {
    "text": "file system system it's just going to iterate over the objects in that bucket using a directory iterator so here we're",
    "start": "2695599",
    "end": "2701920"
  },
  {
    "text": "actually syncing the contents of a remote directory to another remote Amazon S3",
    "start": "2701920",
    "end": "2707319"
  },
  {
    "start": "2707000",
    "end": "2752000"
  },
  {
    "text": "bucket and finally people like to use the AWS SDK for PHP in a way that's",
    "start": "2707319",
    "end": "2713119"
  },
  {
    "text": "idiomatic with the framework of of choice for them so we offer several options and it's not a complete list of",
    "start": "2713119",
    "end": "2720400"
  },
  {
    "text": "every framework that we have uh or or every framework out there in the PHP Community this is what we have so far um",
    "start": "2720400",
    "end": "2726040"
  },
  {
    "text": "we have laravel 4 service provider if anybody uses laravel this this hooks in the SDK to laravel in a way that you can",
    "start": "2726040",
    "end": "2732640"
  },
  {
    "text": "utilize their service locator uh the Zen framework 2 module and a CX service provider as well that hooks in with the",
    "start": "2732640",
    "end": "2739480"
  },
  {
    "text": "silx pimple di container um these are really active projects and we these are",
    "start": "2739480",
    "end": "2745400"
  },
  {
    "text": "a driven a lot by user contributed uh data on GitHub and we really value those",
    "start": "2745400",
    "end": "2751280"
  },
  {
    "text": "contributions and um if you have any feedback or if you'd like to see another another framework integration please",
    "start": "2751280",
    "end": "2757720"
  },
  {
    "start": "2752000",
    "end": "2764000"
  },
  {
    "text": "come talk to us after the talk and we'd love to hear your feedback and see if we can get that going and create more",
    "start": "2757720",
    "end": "2762839"
  },
  {
    "text": "modules like [Applause]",
    "start": "2762839",
    "end": "2769510"
  },
  {
    "start": "2764000",
    "end": "2816000"
  },
  {
    "text": "[Music] these well like to thank you for being",
    "start": "2769510",
    "end": "2775240"
  },
  {
    "text": "here today uh again just to sum up what we talked about today we went through",
    "start": "2775240",
    "end": "2780359"
  },
  {
    "text": "the using the SDK how to install it how to execute operations cool features like",
    "start": "2780359",
    "end": "2785640"
  },
  {
    "text": "the iterators the waiters parallel commands Michael showed you some pretty awesome stuff that we have built over",
    "start": "2785640",
    "end": "2791160"
  },
  {
    "text": "the top of S3 including the stream wrapper so you can simulate a file system very easily uh work with S3 as a",
    "start": "2791160",
    "end": "2798559"
  },
  {
    "text": "file system and then the upload directory and download bucket features so that you can sync up and down to S3",
    "start": "2798559",
    "end": "2804920"
  },
  {
    "text": "so lots of cool stuff I hope it helps you uh to work with uh AWS more",
    "start": "2804920",
    "end": "2811200"
  },
  {
    "text": "effectively and uh with that I think I we can consider you master of the SDK",
    "start": "2811200",
    "end": "2816720"
  },
  {
    "start": "2816000",
    "end": "2852000"
  },
  {
    "text": "you know all the secrets right cool Pat yourselves on the back for that that's pretty awesome good job",
    "start": "2816720",
    "end": "2823559"
  },
  {
    "text": "thanks for being here um just wanted to bring your attention to some of the things that we have some of the resources for you um we have our GitHub",
    "start": "2823559",
    "end": "2831680"
  },
  {
    "text": "repository where you can see our source code you can contribute to our source code we we love uh people who want to help out if you run into any issues you",
    "start": "2831680",
    "end": "2838559"
  },
  {
    "text": "can report them there um we got some homework for you we want you to definitely go Star our repost so you can",
    "start": "2838559",
    "end": "2845200"
  },
  {
    "text": "stay up to date with the releases uh we want you to go try composer install",
    "start": "2845200",
    "end": "2850800"
  },
  {
    "text": "download the SDK in your project check it out we also have our blog uh that we",
    "start": "2850800",
    "end": "2856839"
  },
  {
    "start": "2852000",
    "end": "2899000"
  },
  {
    "text": "released I think it's been about 3 months now so it's still fairly new but we published pretty regularly we publish",
    "start": "2856839",
    "end": "2863160"
  },
  {
    "text": "uh articles about how to use the SDK how to do certain things uh what events we've gone to we'll have a summary of",
    "start": "2863160",
    "end": "2869480"
  },
  {
    "text": "our information here including links to our our slides and video Once those are ready so um if you didn't get a card",
    "start": "2869480",
    "end": "2877240"
  },
  {
    "text": "here with uh the link to the blog uh please make sure to come get one so you don't forget how to get there uh but we",
    "start": "2877240",
    "end": "2884520"
  },
  {
    "text": "really just want you to use PHP go build cool stuff in the AWS Cloud uh that's why we're here is to learn more about",
    "start": "2884520",
    "end": "2890200"
  },
  {
    "text": "AWS so uh definitely appreciate uh you being here with us today so thank you",
    "start": "2890200",
    "end": "2895640"
  },
  {
    "text": "very much take question",
    "start": "2895640",
    "end": "2901920"
  }
]