[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello folks this is bob strachan i'm a",
    "start": "1280",
    "end": "3199"
  },
  {
    "text": "principal solutions architect at aws",
    "start": "3199",
    "end": "5920"
  },
  {
    "text": "and i'm about to show you a quick demo",
    "start": "5920",
    "end": "7759"
  },
  {
    "text": "of a user-defined function that we've",
    "start": "7759",
    "end": "9679"
  },
  {
    "text": "added for amazon athena",
    "start": "9679",
    "end": "11280"
  },
  {
    "text": "that's going to let you analyze text",
    "start": "11280",
    "end": "13120"
  },
  {
    "text": "fields",
    "start": "13120",
    "end": "15040"
  },
  {
    "text": "why would you want to analyze text",
    "start": "15040",
    "end": "16240"
  },
  {
    "text": "fields so you may have tabular data",
    "start": "16240",
    "end": "18080"
  },
  {
    "text": "that contains textual information like",
    "start": "18080",
    "end": "20000"
  },
  {
    "text": "social media feeds",
    "start": "20000",
    "end": "21600"
  },
  {
    "text": "tweets for example or product reviews or",
    "start": "21600",
    "end": "24800"
  },
  {
    "text": "customer support tickets any sort of tax",
    "start": "24800",
    "end": "28080"
  },
  {
    "text": "field that might come from",
    "start": "28080",
    "end": "29359"
  },
  {
    "text": "from end users and perhaps in multiple",
    "start": "29359",
    "end": "31920"
  },
  {
    "text": "languages if you serve a global audience",
    "start": "31920",
    "end": "33680"
  },
  {
    "text": "some folks might be writing text in",
    "start": "33680",
    "end": "35520"
  },
  {
    "text": "different languages maybe the text",
    "start": "35520",
    "end": "37920"
  },
  {
    "text": "contains personally identifiable",
    "start": "37920",
    "end": "39440"
  },
  {
    "text": "information",
    "start": "39440",
    "end": "40399"
  },
  {
    "text": "that you need to detect and possibly",
    "start": "40399",
    "end": "42000"
  },
  {
    "text": "redact from that text before you can do",
    "start": "42000",
    "end": "44239"
  },
  {
    "text": "further analysis on it",
    "start": "44239",
    "end": "46000"
  },
  {
    "text": "and the text may be discussing your",
    "start": "46000",
    "end": "47680"
  },
  {
    "text": "products or places",
    "start": "47680",
    "end": "49360"
  },
  {
    "text": "other entities that you need to identify",
    "start": "49360",
    "end": "51199"
  },
  {
    "text": "for analysis",
    "start": "51199",
    "end": "52640"
  },
  {
    "text": "and people might be expressing sentiment",
    "start": "52640",
    "end": "54640"
  },
  {
    "text": "happy thoughts or sad thoughts that you",
    "start": "54640",
    "end": "56239"
  },
  {
    "text": "want to identify",
    "start": "56239",
    "end": "57440"
  },
  {
    "text": "so that you can again do analysis and",
    "start": "57440",
    "end": "60160"
  },
  {
    "text": "figure out what actions to take",
    "start": "60160",
    "end": "63440"
  },
  {
    "text": "this capability i'm going to show you",
    "start": "64320",
    "end": "66000"
  },
  {
    "text": "allows you to use amazon athena",
    "start": "66000",
    "end": "67920"
  },
  {
    "text": "to do all of that you can translate text",
    "start": "67920",
    "end": "69760"
  },
  {
    "text": "between languages",
    "start": "69760",
    "end": "70960"
  },
  {
    "text": "again just using a sql query within",
    "start": "70960",
    "end": "72560"
  },
  {
    "text": "athena athena is going to call the",
    "start": "72560",
    "end": "74640"
  },
  {
    "text": "amazon translate service behind the",
    "start": "74640",
    "end": "76320"
  },
  {
    "text": "scenes",
    "start": "76320",
    "end": "77360"
  },
  {
    "text": "you can use this to normalize text in",
    "start": "77360",
    "end": "79119"
  },
  {
    "text": "multiple languages into one language for",
    "start": "79119",
    "end": "81119"
  },
  {
    "text": "example",
    "start": "81119",
    "end": "82560"
  },
  {
    "text": "it also allows you to use amazon",
    "start": "82560",
    "end": "84240"
  },
  {
    "text": "comprehend behind the scenes again all",
    "start": "84240",
    "end": "86400"
  },
  {
    "text": "from a sql query in athena",
    "start": "86400",
    "end": "88320"
  },
  {
    "text": "to detect which language a particular",
    "start": "88320",
    "end": "90240"
  },
  {
    "text": "piece of text was written in",
    "start": "90240",
    "end": "91920"
  },
  {
    "text": "you can detect the dominant sentiment of",
    "start": "91920",
    "end": "94159"
  },
  {
    "text": "that text you can identify entities in",
    "start": "94159",
    "end": "96079"
  },
  {
    "text": "the text or personally identifiable",
    "start": "96079",
    "end": "97759"
  },
  {
    "text": "information",
    "start": "97759",
    "end": "98640"
  },
  {
    "text": "all using amazon comprehend behind the",
    "start": "98640",
    "end": "100640"
  },
  {
    "text": "scenes and then you can also do",
    "start": "100640",
    "end": "102240"
  },
  {
    "text": "redaction so we can take",
    "start": "102240",
    "end": "103759"
  },
  {
    "text": "a string and identify entities or",
    "start": "103759",
    "end": "106640"
  },
  {
    "text": "personally identifiable information to",
    "start": "106640",
    "end": "108320"
  },
  {
    "text": "be removed from that string",
    "start": "108320",
    "end": "110000"
  },
  {
    "text": "and i'll show you examples of this stuff",
    "start": "110000",
    "end": "111439"
  },
  {
    "text": "in action",
    "start": "111439",
    "end": "113680"
  },
  {
    "text": "there's a simple two-step process to get",
    "start": "113680",
    "end": "115360"
  },
  {
    "start": "115000",
    "end": "143000"
  },
  {
    "text": "up and running first you install the",
    "start": "115360",
    "end": "117200"
  },
  {
    "text": "text analytics udf handler",
    "start": "117200",
    "end": "119280"
  },
  {
    "text": "into your aws account this process takes",
    "start": "119280",
    "end": "121840"
  },
  {
    "text": "under a minute i'll show it to you in a",
    "start": "121840",
    "end": "123200"
  },
  {
    "text": "second",
    "start": "123200",
    "end": "123680"
  },
  {
    "text": "very easy and then you start using the",
    "start": "123680",
    "end": "125840"
  },
  {
    "text": "new functions and you're going to use",
    "start": "125840",
    "end": "127200"
  },
  {
    "text": "that forever because once you start",
    "start": "127200",
    "end": "128959"
  },
  {
    "text": "using them you won't want to stop",
    "start": "128959",
    "end": "130959"
  },
  {
    "text": "so i'm going to show you all of this the",
    "start": "130959",
    "end": "132239"
  },
  {
    "text": "blog post that defines everything you",
    "start": "132239",
    "end": "134160"
  },
  {
    "text": "need to know",
    "start": "134160",
    "end": "134720"
  },
  {
    "text": "is amazon.com text analytics udf",
    "start": "134720",
    "end": "139360"
  },
  {
    "text": "so let's go take a look at that now",
    "start": "139360",
    "end": "143280"
  },
  {
    "start": "143000",
    "end": "521000"
  },
  {
    "text": "okay so here i am in the browser i've",
    "start": "143280",
    "end": "144959"
  },
  {
    "text": "entered that url into the address bar",
    "start": "144959",
    "end": "147040"
  },
  {
    "text": "again amazon.com text analytics udf",
    "start": "147040",
    "end": "151280"
  },
  {
    "text": "that's going to redirect me to the blog",
    "start": "151280",
    "end": "153360"
  },
  {
    "text": "post",
    "start": "153360",
    "end": "154400"
  },
  {
    "text": "which describes all about how this user",
    "start": "154400",
    "end": "156480"
  },
  {
    "text": "defined function works you can see here",
    "start": "156480",
    "end": "157920"
  },
  {
    "text": "it uses athena",
    "start": "157920",
    "end": "159440"
  },
  {
    "text": "uh which calls lambda behind the scenes",
    "start": "159440",
    "end": "161360"
  },
  {
    "text": "and the lambda function is going to call",
    "start": "161360",
    "end": "162959"
  },
  {
    "text": "comprehend",
    "start": "162959",
    "end": "163760"
  },
  {
    "text": "and translate depending on which",
    "start": "163760",
    "end": "165760"
  },
  {
    "text": "functions you call so there's a lot of",
    "start": "165760",
    "end": "167280"
  },
  {
    "text": "information here there's some examples",
    "start": "167280",
    "end": "168879"
  },
  {
    "text": "of the kinds of queries that you can run",
    "start": "168879",
    "end": "170319"
  },
  {
    "text": "we'll come back to that in a second but",
    "start": "170319",
    "end": "171599"
  },
  {
    "text": "let's get straight to installing it",
    "start": "171599",
    "end": "174319"
  },
  {
    "text": "so in this install section you can see",
    "start": "174319",
    "end": "176080"
  },
  {
    "text": "here you can install it from the",
    "start": "176080",
    "end": "177360"
  },
  {
    "text": "serverless application repository we",
    "start": "177360",
    "end": "179200"
  },
  {
    "text": "have pre-built this already",
    "start": "179200",
    "end": "180640"
  },
  {
    "text": "the source code is also available in",
    "start": "180640",
    "end": "182480"
  },
  {
    "text": "github you can install",
    "start": "182480",
    "end": "184000"
  },
  {
    "text": "it from there if you like the easiest",
    "start": "184000",
    "end": "185360"
  },
  {
    "text": "way is just to click this link",
    "start": "185360",
    "end": "187200"
  },
  {
    "text": "it's going to open up in your aws",
    "start": "187200",
    "end": "189200"
  },
  {
    "text": "console i've already logged into aws so",
    "start": "189200",
    "end": "191519"
  },
  {
    "text": "i don't need to do that again but it",
    "start": "191519",
    "end": "192720"
  },
  {
    "text": "takes me straight",
    "start": "192720",
    "end": "193840"
  },
  {
    "text": "to lambda deployment using this",
    "start": "193840",
    "end": "196879"
  },
  {
    "text": "package that we've already deployed to",
    "start": "196879",
    "end": "198400"
  },
  {
    "text": "serverless application depositor",
    "start": "198400",
    "end": "200239"
  },
  {
    "text": "you can see here is a link to the github",
    "start": "200239",
    "end": "201840"
  },
  {
    "text": "repo where all of the source code is",
    "start": "201840",
    "end": "203440"
  },
  {
    "text": "available so if you want you can go look",
    "start": "203440",
    "end": "205200"
  },
  {
    "text": "at the source code but you don't have to",
    "start": "205200",
    "end": "206560"
  },
  {
    "text": "to get it up and running",
    "start": "206560",
    "end": "208000"
  },
  {
    "text": "literally you just come down here and",
    "start": "208000",
    "end": "210239"
  },
  {
    "text": "click the i acknowledge button because",
    "start": "210239",
    "end": "211840"
  },
  {
    "text": "it's going to create an iam rule that",
    "start": "211840",
    "end": "213599"
  },
  {
    "text": "allows",
    "start": "213599",
    "end": "214560"
  },
  {
    "text": "udf to call translate and comprehend",
    "start": "214560",
    "end": "217360"
  },
  {
    "text": "behind the scenes",
    "start": "217360",
    "end": "218720"
  },
  {
    "text": "um so we click that we click deploy and",
    "start": "218720",
    "end": "222000"
  },
  {
    "text": "within a matter of a few seconds it's",
    "start": "222000",
    "end": "223760"
  },
  {
    "text": "going to be installed",
    "start": "223760",
    "end": "227840"
  },
  {
    "text": "okay so my function installed already it",
    "start": "228159",
    "end": "230239"
  },
  {
    "text": "took about 20 seconds",
    "start": "230239",
    "end": "231519"
  },
  {
    "text": "to get it up and running so now we're",
    "start": "231519",
    "end": "233599"
  },
  {
    "text": "ready to use it",
    "start": "233599",
    "end": "234720"
  },
  {
    "text": "so let's quickly go back to our blog",
    "start": "234720",
    "end": "236239"
  },
  {
    "text": "post we'll just scroll back up and we'll",
    "start": "236239",
    "end": "237840"
  },
  {
    "text": "look at some of these examples that",
    "start": "237840",
    "end": "240159"
  },
  {
    "text": "i provided at the beginning of the blog",
    "start": "240159",
    "end": "241599"
  },
  {
    "text": "post and we'll try running them and see",
    "start": "241599",
    "end": "243040"
  },
  {
    "text": "what happens",
    "start": "243040",
    "end": "244000"
  },
  {
    "text": "so i'm going to go to the amazon athena",
    "start": "244000",
    "end": "245840"
  },
  {
    "text": "console i've already logged in",
    "start": "245840",
    "end": "248159"
  },
  {
    "text": "and because this is in preview yep udf",
    "start": "248159",
    "end": "250879"
  },
  {
    "text": "function is still in preview",
    "start": "250879",
    "end": "252080"
  },
  {
    "text": "we have to use an amazon workgroup and",
    "start": "252080",
    "end": "253760"
  },
  {
    "text": "athena work group called amazon athena",
    "start": "253760",
    "end": "255680"
  },
  {
    "text": "preview functionality",
    "start": "255680",
    "end": "257120"
  },
  {
    "text": "uh once udfs are generally available we",
    "start": "257120",
    "end": "260160"
  },
  {
    "text": "won't need to do that",
    "start": "260160",
    "end": "261440"
  },
  {
    "text": "anymore you can run the functions from",
    "start": "261440",
    "end": "263120"
  },
  {
    "text": "any workgroup so let's just paste our",
    "start": "263120",
    "end": "265199"
  },
  {
    "text": "function into the query editor",
    "start": "265199",
    "end": "267199"
  },
  {
    "text": "let's take a look at it before we run it",
    "start": "267199",
    "end": "268800"
  },
  {
    "text": "you can see here we're declaring the",
    "start": "268800",
    "end": "270000"
  },
  {
    "text": "user defined function",
    "start": "270000",
    "end": "271199"
  },
  {
    "text": "it's called text sentiment it takes two",
    "start": "271199",
    "end": "273680"
  },
  {
    "text": "parameters the text column that we want",
    "start": "273680",
    "end": "275600"
  },
  {
    "text": "to analyze",
    "start": "275600",
    "end": "276800"
  },
  {
    "text": "along with the language that identifies",
    "start": "276800",
    "end": "278560"
  },
  {
    "text": "the the language the code is written",
    "start": "278560",
    "end": "280320"
  },
  {
    "text": "here that the text is written in",
    "start": "280320",
    "end": "282000"
  },
  {
    "text": "and it's going to return a text string",
    "start": "282000",
    "end": "283840"
  },
  {
    "text": "let's see what that looks like in a",
    "start": "283840",
    "end": "284960"
  },
  {
    "text": "second",
    "start": "284960",
    "end": "285520"
  },
  {
    "text": "and it says that the pdf is going to use",
    "start": "285520",
    "end": "287520"
  },
  {
    "text": "lambda and this is the name as a",
    "start": "287520",
    "end": "289120"
  },
  {
    "text": "function that we just installed",
    "start": "289120",
    "end": "291199"
  },
  {
    "text": "from the serverless application",
    "start": "291199",
    "end": "292479"
  },
  {
    "text": "repository and then here's this select",
    "start": "292479",
    "end": "294639"
  },
  {
    "text": "part of the statement should be very",
    "start": "294639",
    "end": "295840"
  },
  {
    "text": "familiar with calling our function",
    "start": "295840",
    "end": "297919"
  },
  {
    "text": "we're passing in a static string here",
    "start": "297919",
    "end": "299680"
  },
  {
    "text": "but this could equally well be a column",
    "start": "299680",
    "end": "301280"
  },
  {
    "text": "and a table",
    "start": "301280",
    "end": "302320"
  },
  {
    "text": "that you're selecting from and we're",
    "start": "302320",
    "end": "305199"
  },
  {
    "text": "going to get the sentiment back",
    "start": "305199",
    "end": "306479"
  },
  {
    "text": "so let's go ahead and run it it's",
    "start": "306479",
    "end": "309360"
  },
  {
    "text": "calling lambda which in turn is calling",
    "start": "309360",
    "end": "311120"
  },
  {
    "text": "amazon comprehend",
    "start": "311120",
    "end": "312320"
  },
  {
    "text": "behind the scenes to detect the dominant",
    "start": "312320",
    "end": "314000"
  },
  {
    "text": "sentiment and you can see here it's",
    "start": "314000",
    "end": "315280"
  },
  {
    "text": "determined the sentiment is",
    "start": "315280",
    "end": "316560"
  },
  {
    "text": "positive so let's say i wasn't so happy",
    "start": "316560",
    "end": "319199"
  },
  {
    "text": "let's see i'm very angry instead",
    "start": "319199",
    "end": "322960"
  },
  {
    "text": "all right let's just rerun the query",
    "start": "323280",
    "end": "327280"
  },
  {
    "text": "and here it's correctly identified as",
    "start": "327280",
    "end": "328800"
  },
  {
    "text": "something that's negative",
    "start": "328800",
    "end": "330320"
  },
  {
    "text": "okay so you can see how easy it is let's",
    "start": "330320",
    "end": "331759"
  },
  {
    "text": "try a couple of other quick examples",
    "start": "331759",
    "end": "335039"
  },
  {
    "text": "just from the blog post i'll copy and",
    "start": "335039",
    "end": "336639"
  },
  {
    "text": "paste here",
    "start": "336639",
    "end": "338960"
  },
  {
    "text": "this one is doing a pii detection",
    "start": "338960",
    "end": "342240"
  },
  {
    "text": "detecting pii antibodies let's go ahead",
    "start": "342240",
    "end": "344639"
  },
  {
    "text": "and run it",
    "start": "344639",
    "end": "346320"
  },
  {
    "text": "and you can see it's identified from the",
    "start": "346320",
    "end": "347759"
  },
  {
    "text": "string that i gave it that there's a",
    "start": "347759",
    "end": "349520"
  },
  {
    "text": "name",
    "start": "349520",
    "end": "350000"
  },
  {
    "text": "bob and the address is hearned in",
    "start": "350000",
    "end": "352000"
  },
  {
    "text": "virginia so those are the personally",
    "start": "352000",
    "end": "354560"
  },
  {
    "text": "identifiable information in that string",
    "start": "354560",
    "end": "357840"
  },
  {
    "text": "well if i want to create a version of",
    "start": "357840",
    "end": "358960"
  },
  {
    "text": "the string that redacts that pii",
    "start": "358960",
    "end": "361840"
  },
  {
    "text": "so let's try the redact pi function",
    "start": "361840",
    "end": "367840"
  },
  {
    "text": "okay here i'm passing in the same string",
    "start": "370880",
    "end": "372880"
  },
  {
    "text": "and i'm telling it to redact",
    "start": "372880",
    "end": "374160"
  },
  {
    "text": "any occurrences of the name entity or",
    "start": "374160",
    "end": "376800"
  },
  {
    "text": "the address entity",
    "start": "376800",
    "end": "378160"
  },
  {
    "text": "and i can actually pass a comma separate",
    "start": "378160",
    "end": "379919"
  },
  {
    "text": "list of entity types i want to redact",
    "start": "379919",
    "end": "382160"
  },
  {
    "text": "here or i can just use the word all if i",
    "start": "382160",
    "end": "383840"
  },
  {
    "text": "want to redact everything all pii that",
    "start": "383840",
    "end": "385840"
  },
  {
    "text": "appears in the string",
    "start": "385840",
    "end": "386960"
  },
  {
    "text": "so you can see here it's created a",
    "start": "386960",
    "end": "388080"
  },
  {
    "text": "version of the string with my name",
    "start": "388080",
    "end": "389440"
  },
  {
    "text": "removed and the address",
    "start": "389440",
    "end": "391199"
  },
  {
    "text": "fields removed and just substitute it",
    "start": "391199",
    "end": "392880"
  },
  {
    "text": "with the name of the other",
    "start": "392880",
    "end": "395919"
  },
  {
    "text": "okay and finally let's try a translation",
    "start": "396800",
    "end": "409599"
  },
  {
    "text": "okay so here i'm passing on the string",
    "start": "409599",
    "end": "411120"
  },
  {
    "text": "it's a beautiful day in the neighborhood",
    "start": "411120",
    "end": "412880"
  },
  {
    "text": "i'm telling it to auto detect the source",
    "start": "412880",
    "end": "414639"
  },
  {
    "text": "language i could replace that with an",
    "start": "414639",
    "end": "416560"
  },
  {
    "text": "uh the letters en since i know it's in",
    "start": "416560",
    "end": "418800"
  },
  {
    "text": "english but i want to demonstrate how",
    "start": "418800",
    "end": "420560"
  },
  {
    "text": "this function can auto detect so you can",
    "start": "420560",
    "end": "422080"
  },
  {
    "text": "pass it in a string in any language",
    "start": "422080",
    "end": "424000"
  },
  {
    "text": "it'll figure out what the language is",
    "start": "424000",
    "end": "425840"
  },
  {
    "text": "and then translate it into your desired",
    "start": "425840",
    "end": "427680"
  },
  {
    "text": "target language in this case french",
    "start": "427680",
    "end": "429840"
  },
  {
    "text": "and you see here it's translated my",
    "start": "429840",
    "end": "431199"
  },
  {
    "text": "string into french if we wanted to see",
    "start": "431199",
    "end": "433440"
  },
  {
    "text": "the same thing in a different language",
    "start": "433440",
    "end": "435039"
  },
  {
    "text": "like spanish for example",
    "start": "435039",
    "end": "436479"
  },
  {
    "text": "in the language code for spanish",
    "start": "436479",
    "end": "439599"
  },
  {
    "text": "run it again and i've got the string in",
    "start": "439599",
    "end": "441440"
  },
  {
    "text": "spanish",
    "start": "441440",
    "end": "443919"
  },
  {
    "text": "so let's switch back to our blog post",
    "start": "444160",
    "end": "445680"
  },
  {
    "text": "real quick um",
    "start": "445680",
    "end": "448400"
  },
  {
    "text": "scroll down a little bit you can see",
    "start": "448400",
    "end": "450240"
  },
  {
    "text": "that it gives you some information about",
    "start": "450240",
    "end": "451759"
  },
  {
    "text": "how the udf works",
    "start": "451759",
    "end": "453440"
  },
  {
    "text": "behind the scenes there's an important",
    "start": "453440",
    "end": "455520"
  },
  {
    "text": "section here on optimizing cost",
    "start": "455520",
    "end": "457280"
  },
  {
    "text": "very important that you understand how",
    "start": "457280",
    "end": "458720"
  },
  {
    "text": "you're going to be charged when you run",
    "start": "458720",
    "end": "460000"
  },
  {
    "text": "this",
    "start": "460000",
    "end": "461199"
  },
  {
    "text": "function because it does call comprehend",
    "start": "461199",
    "end": "463199"
  },
  {
    "text": "and or amazon translate behind the",
    "start": "463199",
    "end": "464879"
  },
  {
    "text": "scenes each of which incur an additional",
    "start": "464879",
    "end": "466560"
  },
  {
    "text": "cost",
    "start": "466560",
    "end": "467280"
  },
  {
    "text": "depending on the amount of text that",
    "start": "467280",
    "end": "468560"
  },
  {
    "text": "you're processing and then there's a fun",
    "start": "468560",
    "end": "470720"
  },
  {
    "text": "little tutorial here where we",
    "start": "470720",
    "end": "472400"
  },
  {
    "text": "analyze some data from an open data set",
    "start": "472400",
    "end": "475120"
  },
  {
    "text": "containing amazon product reviews",
    "start": "475120",
    "end": "477280"
  },
  {
    "text": "so it shows you how to go through the",
    "start": "477280",
    "end": "479840"
  },
  {
    "text": "amazon product reviews and detect",
    "start": "479840",
    "end": "482080"
  },
  {
    "text": "which language they're written in you",
    "start": "482080",
    "end": "483680"
  },
  {
    "text": "can detect the sentiment you can detect",
    "start": "483680",
    "end": "485440"
  },
  {
    "text": "the entities",
    "start": "485440",
    "end": "487759"
  },
  {
    "text": "it shows you how to take advantage of",
    "start": "487759",
    "end": "490080"
  },
  {
    "text": "the json the advanced json output that",
    "start": "490080",
    "end": "492240"
  },
  {
    "text": "these udfs can give you",
    "start": "492240",
    "end": "493919"
  },
  {
    "text": "and take advantage of the json extract",
    "start": "493919",
    "end": "496160"
  },
  {
    "text": "functions",
    "start": "496160",
    "end": "497280"
  },
  {
    "text": "to create separate columns with all of",
    "start": "497280",
    "end": "499680"
  },
  {
    "text": "the different scores and",
    "start": "499680",
    "end": "500960"
  },
  {
    "text": "entities for analysis and then you can",
    "start": "500960",
    "end": "503840"
  },
  {
    "text": "build a little quick site report at the",
    "start": "503840",
    "end": "505280"
  },
  {
    "text": "end if you want to visualize the data",
    "start": "505280",
    "end": "508319"
  },
  {
    "text": "it shows you some troubleshooting how to",
    "start": "508319",
    "end": "510080"
  },
  {
    "text": "clean up at the end and then there's a",
    "start": "510080",
    "end": "511599"
  },
  {
    "text": "function reference",
    "start": "511599",
    "end": "512959"
  },
  {
    "text": "where you can go through and try all the",
    "start": "512959",
    "end": "515599"
  },
  {
    "text": "different flavors and variations of the",
    "start": "515599",
    "end": "517599"
  },
  {
    "text": "functions that this",
    "start": "517599",
    "end": "518399"
  },
  {
    "text": "edf provides",
    "start": "518399",
    "end": "521839"
  },
  {
    "start": "521000",
    "end": "551000"
  },
  {
    "text": "so that's the end of the demo folks i",
    "start": "522000",
    "end": "523599"
  },
  {
    "text": "hope you enjoyed it um",
    "start": "523599",
    "end": "525360"
  },
  {
    "text": "again my name is bob strachan here's the",
    "start": "525360",
    "end": "527760"
  },
  {
    "text": "link to the blog post again",
    "start": "527760",
    "end": "529200"
  },
  {
    "text": "amazon.com text analytics udf that",
    "start": "529200",
    "end": "533760"
  },
  {
    "text": "contains all the information you need to",
    "start": "533760",
    "end": "535519"
  },
  {
    "text": "quickly get started",
    "start": "535519",
    "end": "536640"
  },
  {
    "text": "and it gives you examples in the",
    "start": "536640",
    "end": "538000"
  },
  {
    "text": "tutorial for how to use",
    "start": "538000",
    "end": "539839"
  },
  {
    "text": "the text analytics udf so i hope you",
    "start": "539839",
    "end": "541600"
  },
  {
    "text": "will install it and try it",
    "start": "541600",
    "end": "543920"
  },
  {
    "text": "and be able to put it to good use thank",
    "start": "543920",
    "end": "546560"
  },
  {
    "text": "you very much for listening",
    "start": "546560",
    "end": "549519"
  },
  {
    "text": "goodbye",
    "start": "550360",
    "end": "553360"
  }
]