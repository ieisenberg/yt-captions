[
  {
    "text": "[Music]",
    "start": "790",
    "end": "10639"
  },
  {
    "text": "welcome everyone i'm stefano marzani",
    "start": "10639",
    "end": "13040"
  },
  {
    "text": "principal specialist solutions architect",
    "start": "13040",
    "end": "15599"
  },
  {
    "text": "autonomous vehicles at aws and i'm dean",
    "start": "15599",
    "end": "18720"
  },
  {
    "text": "phillips worldwide tech lead for",
    "start": "18720",
    "end": "20320"
  },
  {
    "text": "automotive at aws",
    "start": "20320",
    "end": "22720"
  },
  {
    "text": "so dean one of the most important",
    "start": "22720",
    "end": "24640"
  },
  {
    "text": "aspects driving innovation in connected",
    "start": "24640",
    "end": "26880"
  },
  {
    "text": "mobility and autonomous development is",
    "start": "26880",
    "end": "29519"
  },
  {
    "text": "edge computing",
    "start": "29519",
    "end": "31119"
  },
  {
    "text": "it allows customers to process huge",
    "start": "31119",
    "end": "33440"
  },
  {
    "text": "amounts of data in the vehicle and apply",
    "start": "33440",
    "end": "36000"
  },
  {
    "text": "machine learning without incurring the",
    "start": "36000",
    "end": "37920"
  },
  {
    "text": "costs of transmitting anything to the",
    "start": "37920",
    "end": "39760"
  },
  {
    "text": "cloud",
    "start": "39760",
    "end": "40640"
  },
  {
    "text": "right",
    "start": "40640",
    "end": "41760"
  },
  {
    "text": "when you think about the petabytes of",
    "start": "41760",
    "end": "43280"
  },
  {
    "text": "data coming from the vehicle and the",
    "start": "43280",
    "end": "44879"
  },
  {
    "text": "cost of sending it to the cloud it's a",
    "start": "44879",
    "end": "47039"
  },
  {
    "text": "game changer to be able to process and",
    "start": "47039",
    "end": "49120"
  },
  {
    "text": "run this data at the edge and send only",
    "start": "49120",
    "end": "51520"
  },
  {
    "text": "what you need to the cloud",
    "start": "51520",
    "end": "53360"
  },
  {
    "text": "yes and think about the situation where",
    "start": "53360",
    "end": "55680"
  },
  {
    "text": "you're recording videos from the car and",
    "start": "55680",
    "end": "58160"
  },
  {
    "text": "now have the possibility to send only",
    "start": "58160",
    "end": "60079"
  },
  {
    "text": "the video you really need to the cloud",
    "start": "60079",
    "end": "62000"
  },
  {
    "text": "for processing removing non-critical and",
    "start": "62000",
    "end": "65040"
  },
  {
    "text": "privacy sensitive information like",
    "start": "65040",
    "end": "67040"
  },
  {
    "text": "license plates and faces",
    "start": "67040",
    "end": "69280"
  },
  {
    "text": "there are also many other use cases like",
    "start": "69280",
    "end": "71920"
  },
  {
    "text": "identifying when passengers or pets are",
    "start": "71920",
    "end": "74000"
  },
  {
    "text": "in a vehicle or even usage-based",
    "start": "74000",
    "end": "76479"
  },
  {
    "text": "insurance use cases that combine video",
    "start": "76479",
    "end": "79040"
  },
  {
    "text": "and vehicle data",
    "start": "79040",
    "end": "80640"
  },
  {
    "text": "yeah these are really super relevant use",
    "start": "80640",
    "end": "83040"
  },
  {
    "text": "cases when you know",
    "start": "83040",
    "end": "84880"
  },
  {
    "text": "applying machine learning inside the",
    "start": "84880",
    "end": "86799"
  },
  {
    "text": "vehicle brings enormous value and",
    "start": "86799",
    "end": "89520"
  },
  {
    "text": "eventually savings instead of processing",
    "start": "89520",
    "end": "91920"
  },
  {
    "text": "data in the cloud",
    "start": "91920",
    "end": "93520"
  },
  {
    "text": "let me introduce you to srikath kodali",
    "start": "93520",
    "end": "95680"
  },
  {
    "text": "senior iot architect from aws",
    "start": "95680",
    "end": "98079"
  },
  {
    "text": "professional services who has been",
    "start": "98079",
    "end": "100079"
  },
  {
    "text": "working hard on this problem for our",
    "start": "100079",
    "end": "101680"
  },
  {
    "text": "customers and specifically with aws",
    "start": "101680",
    "end": "104720"
  },
  {
    "text": "greengrass and ml inference at the edge",
    "start": "104720",
    "end": "107040"
  },
  {
    "text": "for autonomous vehicle product",
    "start": "107040",
    "end": "108640"
  },
  {
    "text": "development",
    "start": "108640",
    "end": "109759"
  },
  {
    "text": "srikant why don't you show us your demo",
    "start": "109759",
    "end": "111840"
  },
  {
    "text": "on lane detection",
    "start": "111840",
    "end": "113600"
  },
  {
    "text": "hey dean and stefano thank you for",
    "start": "113600",
    "end": "115680"
  },
  {
    "text": "having me i'm super excited to be part",
    "start": "115680",
    "end": "118240"
  },
  {
    "text": "of this dialogue and thanks for",
    "start": "118240",
    "end": "119680"
  },
  {
    "text": "providing great details about connected",
    "start": "119680",
    "end": "121920"
  },
  {
    "text": "mobility and autonomous development at",
    "start": "121920",
    "end": "123920"
  },
  {
    "text": "the edge itself",
    "start": "123920",
    "end": "125840"
  },
  {
    "text": "imagine a situation wherein for an",
    "start": "125840",
    "end": "128640"
  },
  {
    "text": "autonomous driving we want to understand",
    "start": "128640",
    "end": "131200"
  },
  {
    "text": "the lanes on a freeway and correct the",
    "start": "131200",
    "end": "134000"
  },
  {
    "text": "driving behavior if the driver crosses",
    "start": "134000",
    "end": "136239"
  },
  {
    "text": "the mark lanes without any indication so",
    "start": "136239",
    "end": "139840"
  },
  {
    "text": "on board cameras can capture the video",
    "start": "139840",
    "end": "142480"
  },
  {
    "text": "and we can apply a computer vision model",
    "start": "142480",
    "end": "145040"
  },
  {
    "text": "on the video frames and can guide the",
    "start": "145040",
    "end": "147599"
  },
  {
    "text": "driver if they are crossing the lane",
    "start": "147599",
    "end": "149520"
  },
  {
    "text": "lines",
    "start": "149520",
    "end": "150879"
  },
  {
    "text": "before going into the architecture",
    "start": "150879",
    "end": "153120"
  },
  {
    "text": "details and demo i just wanted to talk",
    "start": "153120",
    "end": "156000"
  },
  {
    "text": "couple of points about our aws iot green",
    "start": "156000",
    "end": "159200"
  },
  {
    "text": "grass service",
    "start": "159200",
    "end": "160560"
  },
  {
    "text": "as you know aws iot green graphs is",
    "start": "160560",
    "end": "163680"
  },
  {
    "text": "really two things one is a set of",
    "start": "163680",
    "end": "166560"
  },
  {
    "text": "software that runs on the device and the",
    "start": "166560",
    "end": "168959"
  },
  {
    "text": "software manages the device's",
    "start": "168959",
    "end": "171120"
  },
  {
    "text": "relationship to the cloud and it's a",
    "start": "171120",
    "end": "173519"
  },
  {
    "text": "collection of components or applications",
    "start": "173519",
    "end": "176239"
  },
  {
    "text": "that do things like streaming the data",
    "start": "176239",
    "end": "178640"
  },
  {
    "text": "out to the cloud passing messages",
    "start": "178640",
    "end": "180720"
  },
  {
    "text": "between different components etc",
    "start": "180720",
    "end": "185560"
  },
  {
    "text": "the other side of that is the cloud",
    "start": "186080",
    "end": "188480"
  },
  {
    "text": "which has data plane where you send all",
    "start": "188480",
    "end": "191760"
  },
  {
    "text": "the data from devices and it also has",
    "start": "191760",
    "end": "194239"
  },
  {
    "text": "the control plane where we can do",
    "start": "194239",
    "end": "196959"
  },
  {
    "text": "management tasks like upgrading the",
    "start": "196959",
    "end": "199280"
  },
  {
    "text": "software or changing some parameters",
    "start": "199280",
    "end": "202000"
  },
  {
    "text": "like that",
    "start": "202000",
    "end": "203599"
  },
  {
    "text": "and green dash version 2 is really",
    "start": "203599",
    "end": "207280"
  },
  {
    "text": "a complete top to bottom rethink of how",
    "start": "207280",
    "end": "210159"
  },
  {
    "text": "the structure works and it's deeply all",
    "start": "210159",
    "end": "213360"
  },
  {
    "text": "about modularity",
    "start": "213360",
    "end": "216640"
  },
  {
    "text": "so let's bring up a raw video file that",
    "start": "217280",
    "end": "220000"
  },
  {
    "text": "we are using for the demo purpose here",
    "start": "220000",
    "end": "222799"
  },
  {
    "text": "and we will see",
    "start": "222799",
    "end": "224560"
  },
  {
    "text": "the steps that are involved in crossing",
    "start": "224560",
    "end": "226640"
  },
  {
    "text": "the video at the edge using aws iot",
    "start": "226640",
    "end": "229280"
  },
  {
    "text": "green grass service",
    "start": "229280",
    "end": "230879"
  },
  {
    "text": "we are using opencv libraries to",
    "start": "230879",
    "end": "233840"
  },
  {
    "text": "identify the lane lines and creating the",
    "start": "233840",
    "end": "236080"
  },
  {
    "text": "boundary boxes around these lanes we",
    "start": "236080",
    "end": "238480"
  },
  {
    "text": "have a raw video coming from the",
    "start": "238480",
    "end": "240000"
  },
  {
    "text": "vehicle's camera the first application",
    "start": "240000",
    "end": "242400"
  },
  {
    "text": "is reading the video file and divides",
    "start": "242400",
    "end": "244400"
  },
  {
    "text": "the video into chunks of frames once the",
    "start": "244400",
    "end": "247280"
  },
  {
    "text": "video is divided into frames we will",
    "start": "247280",
    "end": "249840"
  },
  {
    "text": "apply the computer vision model on each",
    "start": "249840",
    "end": "252159"
  },
  {
    "text": "frame",
    "start": "252159",
    "end": "253439"
  },
  {
    "text": "this model will take each frame and does",
    "start": "253439",
    "end": "256320"
  },
  {
    "text": "bunch of processing steps and generates",
    "start": "256320",
    "end": "259199"
  },
  {
    "text": "a new frame with bonding boxes around",
    "start": "259199",
    "end": "261519"
  },
  {
    "text": "the lens",
    "start": "261519",
    "end": "263840"
  },
  {
    "text": "then we will pass these process frames",
    "start": "263840",
    "end": "266479"
  },
  {
    "text": "into another component or a second",
    "start": "266479",
    "end": "268320"
  },
  {
    "text": "application",
    "start": "268320",
    "end": "269520"
  },
  {
    "text": "think that the first program has a",
    "start": "269520",
    "end": "271440"
  },
  {
    "text": "publisher and the second program as a",
    "start": "271440",
    "end": "273600"
  },
  {
    "text": "subscriber",
    "start": "273600",
    "end": "274960"
  },
  {
    "text": "and the publisher component is published",
    "start": "274960",
    "end": "276720"
  },
  {
    "text": "in the video frames to a topic in the",
    "start": "276720",
    "end": "279120"
  },
  {
    "text": "iot green graph message broker and the",
    "start": "279120",
    "end": "281440"
  },
  {
    "text": "subscriber which is subscribed to this",
    "start": "281440",
    "end": "283600"
  },
  {
    "text": "topic will read these video frames",
    "start": "283600",
    "end": "286560"
  },
  {
    "text": "passing the frames between the",
    "start": "286560",
    "end": "288160"
  },
  {
    "text": "applications is possible by the aws iot",
    "start": "288160",
    "end": "291199"
  },
  {
    "text": "greengrass message broker we use the",
    "start": "291199",
    "end": "294000"
  },
  {
    "text": "inter process communication sdk that is",
    "start": "294000",
    "end": "296479"
  },
  {
    "text": "available in aws iot core sdk to",
    "start": "296479",
    "end": "299759"
  },
  {
    "text": "serialize these frames with some",
    "start": "299759",
    "end": "301600"
  },
  {
    "text": "metadata like the frame number in the",
    "start": "301600",
    "end": "303919"
  },
  {
    "text": "video whether it is a last frame or",
    "start": "303919",
    "end": "306639"
  },
  {
    "text": "first frame or any kind of metadata that",
    "start": "306639",
    "end": "309120"
  },
  {
    "text": "is applicable to each frame and pass",
    "start": "309120",
    "end": "312000"
  },
  {
    "text": "them to the second component",
    "start": "312000",
    "end": "314960"
  },
  {
    "text": "the second application or the component",
    "start": "314960",
    "end": "317199"
  },
  {
    "text": "that is managed by the uws iot greengas",
    "start": "317199",
    "end": "319680"
  },
  {
    "text": "service will deserialize these frames",
    "start": "319680",
    "end": "322160"
  },
  {
    "text": "and will pass them to the stream manager",
    "start": "322160",
    "end": "326400"
  },
  {
    "text": "the functionality of the stream manager",
    "start": "326800",
    "end": "328560"
  },
  {
    "text": "is to send the messages to aws cloud in",
    "start": "328560",
    "end": "331199"
  },
  {
    "text": "an efficient and reliable manner in this",
    "start": "331199",
    "end": "334320"
  },
  {
    "text": "case stream manager will pass the newly",
    "start": "334320",
    "end": "336960"
  },
  {
    "text": "modified frames to an amazon s3 bucket",
    "start": "336960",
    "end": "341280"
  },
  {
    "text": "another program on the cloud side will",
    "start": "341280",
    "end": "343840"
  },
  {
    "text": "rearrange the process frames with the",
    "start": "343840",
    "end": "345520"
  },
  {
    "text": "bounding boxes into a video stream once",
    "start": "345520",
    "end": "348160"
  },
  {
    "text": "all the frames are received in the s3",
    "start": "348160",
    "end": "350160"
  },
  {
    "text": "bucket we trigger a lambda function to",
    "start": "350160",
    "end": "352720"
  },
  {
    "text": "find out all the process frames belongs",
    "start": "352720",
    "end": "355120"
  },
  {
    "text": "to the video and sorts them in the order",
    "start": "355120",
    "end": "358240"
  },
  {
    "text": "and",
    "start": "358240",
    "end": "359039"
  },
  {
    "text": "will create the final video and store it",
    "start": "359039",
    "end": "361840"
  },
  {
    "text": "in an another s3 location",
    "start": "361840",
    "end": "364479"
  },
  {
    "text": "now",
    "start": "364479",
    "end": "365280"
  },
  {
    "text": "let's deploy the screen class managed",
    "start": "365280",
    "end": "367120"
  },
  {
    "text": "components and run the video processing",
    "start": "367120",
    "end": "369280"
  },
  {
    "text": "there once you log into aws console",
    "start": "369280",
    "end": "371680"
  },
  {
    "text": "let's go to the iot core service",
    "start": "371680",
    "end": "375600"
  },
  {
    "text": "on the left hand side we will go to the",
    "start": "375680",
    "end": "377759"
  },
  {
    "text": "green graph section",
    "start": "377759",
    "end": "379680"
  },
  {
    "text": "here we can see core devices components",
    "start": "379680",
    "end": "382560"
  },
  {
    "text": "and the deployments options",
    "start": "382560",
    "end": "384639"
  },
  {
    "text": "let's go to the core devices section",
    "start": "384639",
    "end": "386319"
  },
  {
    "text": "here",
    "start": "386319",
    "end": "387759"
  },
  {
    "text": "and here my core device name",
    "start": "387759",
    "end": "390960"
  },
  {
    "text": "is gg v2 ec2 lanes demo thing let's go",
    "start": "390960",
    "end": "394560"
  },
  {
    "text": "to the components",
    "start": "394560",
    "end": "397360"
  },
  {
    "text": "and here i have three components",
    "start": "399759",
    "end": "402080"
  },
  {
    "text": "in my account",
    "start": "402080",
    "end": "403280"
  },
  {
    "text": "and the two of them are deployed in my",
    "start": "403280",
    "end": "405520"
  },
  {
    "text": "edge device and one is the publisher",
    "start": "405520",
    "end": "408000"
  },
  {
    "text": "component and other one is a subscriber",
    "start": "408000",
    "end": "410240"
  },
  {
    "text": "component",
    "start": "410240",
    "end": "411440"
  },
  {
    "text": "and each component has its own version",
    "start": "411440",
    "end": "414560"
  },
  {
    "text": "associated with",
    "start": "414560",
    "end": "416639"
  },
  {
    "text": "as i mentioned before these components",
    "start": "416639",
    "end": "418720"
  },
  {
    "text": "are nothing but the software pieces that",
    "start": "418720",
    "end": "420880"
  },
  {
    "text": "will be running on the aw cyborg",
    "start": "420880",
    "end": "422560"
  },
  {
    "text": "greengrass code device and each",
    "start": "422560",
    "end": "424479"
  },
  {
    "text": "component will have two things one is",
    "start": "424479",
    "end": "426960"
  },
  {
    "text": "the sd file and the other one is the",
    "start": "426960",
    "end": "429599"
  },
  {
    "text": "artifacts",
    "start": "429599",
    "end": "430960"
  },
  {
    "text": "component recipe",
    "start": "430960",
    "end": "432639"
  },
  {
    "text": "is is a file that defines a component's",
    "start": "432639",
    "end": "435520"
  },
  {
    "text": "details and its dependencies and its",
    "start": "435520",
    "end": "437919"
  },
  {
    "text": "artifacts and life cycles",
    "start": "437919",
    "end": "440479"
  },
  {
    "text": "and the life cycle specifies",
    "start": "440479",
    "end": "442720"
  },
  {
    "text": "the commands to run to install or run or",
    "start": "442720",
    "end": "446639"
  },
  {
    "text": "shut down the component",
    "start": "446639",
    "end": "448560"
  },
  {
    "text": "think that this file as a metadata file",
    "start": "448560",
    "end": "451120"
  },
  {
    "text": "about that particular component",
    "start": "451120",
    "end": "453680"
  },
  {
    "text": "components can have any number of",
    "start": "453680",
    "end": "455360"
  },
  {
    "text": "artifacts and these components are",
    "start": "455360",
    "end": "457919"
  },
  {
    "text": "actually binaries",
    "start": "457919",
    "end": "459520"
  },
  {
    "text": "artifacts can include scripts a compiled",
    "start": "459520",
    "end": "462479"
  },
  {
    "text": "code or static resources or",
    "start": "462479",
    "end": "465599"
  },
  {
    "text": "any other files that a component",
    "start": "465599",
    "end": "467919"
  },
  {
    "text": "consumes",
    "start": "467919",
    "end": "469520"
  },
  {
    "text": "let's go to one of the components for",
    "start": "469520",
    "end": "471120"
  },
  {
    "text": "example let's go to the publisher",
    "start": "471120",
    "end": "472879"
  },
  {
    "text": "component as per our architecture",
    "start": "472879",
    "end": "476160"
  },
  {
    "text": "okay",
    "start": "476160",
    "end": "478319"
  },
  {
    "text": "and the current version of",
    "start": "478319",
    "end": "480000"
  },
  {
    "text": "version for this component is 1.0.75",
    "start": "480000",
    "end": "483280"
  },
  {
    "text": "uh let's create a new version",
    "start": "483280",
    "end": "486960"
  },
  {
    "text": "so imagine that you updated your code",
    "start": "488720",
    "end": "492080"
  },
  {
    "text": "for this component and then you want to",
    "start": "492080",
    "end": "493840"
  },
  {
    "text": "deploy the newer version onto the device",
    "start": "493840",
    "end": "497280"
  },
  {
    "text": "okay so uh",
    "start": "497280",
    "end": "498960"
  },
  {
    "text": "assume that you already updated the code",
    "start": "498960",
    "end": "501360"
  },
  {
    "text": "and let's update the version here 1.0.76",
    "start": "501360",
    "end": "506599"
  },
  {
    "text": "and click on the create version button",
    "start": "507599",
    "end": "511599"
  },
  {
    "text": "and now",
    "start": "511599",
    "end": "512800"
  },
  {
    "text": "we are ready to deploy our components",
    "start": "512800",
    "end": "514560"
  },
  {
    "text": "onto the edge device",
    "start": "514560",
    "end": "516640"
  },
  {
    "text": "so let's click on the deploy button",
    "start": "516640",
    "end": "519599"
  },
  {
    "text": "and here",
    "start": "519599",
    "end": "521039"
  },
  {
    "text": "you know you can select uh you know this",
    "start": "521039",
    "end": "523279"
  },
  {
    "text": "deployment to the existing deployment so",
    "start": "523279",
    "end": "525920"
  },
  {
    "text": "or you can create a new deployment as",
    "start": "525920",
    "end": "527680"
  },
  {
    "text": "well in this case i already have the",
    "start": "527680",
    "end": "530080"
  },
  {
    "text": "existing deployment so i'm going to",
    "start": "530080",
    "end": "531519"
  },
  {
    "text": "select the existing deployment",
    "start": "531519",
    "end": "535040"
  },
  {
    "text": "okay",
    "start": "535040",
    "end": "537279"
  },
  {
    "text": "and here let's",
    "start": "537279",
    "end": "539920"
  },
  {
    "text": "just click on the next button",
    "start": "539920",
    "end": "542399"
  },
  {
    "text": "and here you can see the components",
    "start": "542399",
    "end": "545519"
  },
  {
    "text": "which are you know which are ready to be",
    "start": "545519",
    "end": "547440"
  },
  {
    "text": "uh deployed onto our edge device and at",
    "start": "547440",
    "end": "550160"
  },
  {
    "text": "the same time you can also see the",
    "start": "550160",
    "end": "551600"
  },
  {
    "text": "public component uh you know which is",
    "start": "551600",
    "end": "553360"
  },
  {
    "text": "our you know",
    "start": "553360",
    "end": "554720"
  },
  {
    "text": "greengrass necklace version which which",
    "start": "554720",
    "end": "557360"
  },
  {
    "text": "also needs to be deployed onto the edge",
    "start": "557360",
    "end": "559200"
  },
  {
    "text": "device okay so",
    "start": "559200",
    "end": "561120"
  },
  {
    "text": "let's select these three components and",
    "start": "561120",
    "end": "563519"
  },
  {
    "text": "then click on next button",
    "start": "563519",
    "end": "566640"
  },
  {
    "text": "and if you see or here you know",
    "start": "566640",
    "end": "569680"
  },
  {
    "text": "our newer version is 1.0.76",
    "start": "569680",
    "end": "573440"
  },
  {
    "text": "so",
    "start": "573440",
    "end": "574399"
  },
  {
    "text": "you can also select you know you can",
    "start": "574399",
    "end": "575920"
  },
  {
    "text": "also select a version from here but you",
    "start": "575920",
    "end": "578399"
  },
  {
    "text": "know it's already selected here and the",
    "start": "578399",
    "end": "580640"
  },
  {
    "text": "new class version which we are going to",
    "start": "580640",
    "end": "582080"
  },
  {
    "text": "deploy is 2.0.5",
    "start": "582080",
    "end": "585040"
  },
  {
    "text": "okay so let's click on next button",
    "start": "585040",
    "end": "588240"
  },
  {
    "text": "and just click on next here",
    "start": "588240",
    "end": "591040"
  },
  {
    "text": "and it's just you know showcasing you",
    "start": "591040",
    "end": "592800"
  },
  {
    "text": "know what what components and what",
    "start": "592800",
    "end": "594399"
  },
  {
    "text": "versions you are going to select onto",
    "start": "594399",
    "end": "596240"
  },
  {
    "text": "your edge device",
    "start": "596240",
    "end": "597600"
  },
  {
    "text": "so",
    "start": "597600",
    "end": "598720"
  },
  {
    "text": "just click on the deploy button now",
    "start": "598720",
    "end": "602240"
  },
  {
    "text": "okay",
    "start": "602240",
    "end": "603120"
  },
  {
    "text": "now uh it's getting you know these",
    "start": "603120",
    "end": "605440"
  },
  {
    "text": "components are getting deployed onto our",
    "start": "605440",
    "end": "607200"
  },
  {
    "text": "edge device so let's go to the you know",
    "start": "607200",
    "end": "610079"
  },
  {
    "text": "terminal and see uh you know the log",
    "start": "610079",
    "end": "612720"
  },
  {
    "text": "files and my uh component just got",
    "start": "612720",
    "end": "615440"
  },
  {
    "text": "deployed uh if you see uh you know it",
    "start": "615440",
    "end": "618480"
  },
  {
    "text": "took 14 seconds to process uh you know",
    "start": "618480",
    "end": "621279"
  },
  {
    "text": "this video frame which has 75",
    "start": "621279",
    "end": "623680"
  },
  {
    "text": "uh",
    "start": "623680",
    "end": "624480"
  },
  {
    "text": "frames in that video and then on the",
    "start": "624480",
    "end": "627360"
  },
  {
    "text": "subscribe on the subscriber log file you",
    "start": "627360",
    "end": "629040"
  },
  {
    "text": "can see these files are get are copied",
    "start": "629040",
    "end": "631440"
  },
  {
    "text": "to this you know this particular",
    "start": "631440",
    "end": "633440"
  },
  {
    "text": "location",
    "start": "633440",
    "end": "635920"
  },
  {
    "text": "okay uh now let's go to the aws s3",
    "start": "636000",
    "end": "638560"
  },
  {
    "text": "console",
    "start": "638560",
    "end": "641120"
  },
  {
    "text": "and",
    "start": "642399",
    "end": "645399"
  },
  {
    "text": "here let me go to that i know s3",
    "start": "649200",
    "end": "651519"
  },
  {
    "text": "location",
    "start": "651519",
    "end": "653279"
  },
  {
    "text": "and if you see here the",
    "start": "653279",
    "end": "655519"
  },
  {
    "text": "prefix you know",
    "start": "655519",
    "end": "657360"
  },
  {
    "text": "is",
    "start": "657360",
    "end": "658399"
  },
  {
    "text": "for this run is you know it starts with",
    "start": "658399",
    "end": "660320"
  },
  {
    "text": "8 and q",
    "start": "660320",
    "end": "662000"
  },
  {
    "text": "so let me select this and then",
    "start": "662000",
    "end": "664720"
  },
  {
    "text": "let me search for this",
    "start": "664720",
    "end": "668160"
  },
  {
    "text": "so here here is the folder that was",
    "start": "668399",
    "end": "670399"
  },
  {
    "text": "created just now and if you log if you",
    "start": "670399",
    "end": "672560"
  },
  {
    "text": "go into this you will see all the files",
    "start": "672560",
    "end": "674800"
  },
  {
    "text": "that are created uh as part of this run",
    "start": "674800",
    "end": "678079"
  },
  {
    "text": "okay so let's select you know one of the",
    "start": "678079",
    "end": "680399"
  },
  {
    "text": "files now let's download this file and",
    "start": "680399",
    "end": "683360"
  },
  {
    "text": "if you see here the image you know you",
    "start": "683360",
    "end": "685440"
  },
  {
    "text": "will see this in a bonding box is",
    "start": "685440",
    "end": "686880"
  },
  {
    "text": "applied neatly and then you will also",
    "start": "686880",
    "end": "689519"
  },
  {
    "text": "see the lanes are identified as part of",
    "start": "689519",
    "end": "692160"
  },
  {
    "text": "this you know uh computer vision model",
    "start": "692160",
    "end": "695120"
  },
  {
    "text": "okay and once all the images are",
    "start": "695120",
    "end": "697680"
  },
  {
    "text": "processed and copied to s3 bucket as i",
    "start": "697680",
    "end": "699920"
  },
  {
    "text": "mentioned before a lambda function will",
    "start": "699920",
    "end": "701519"
  },
  {
    "text": "get triggered",
    "start": "701519",
    "end": "702399"
  },
  {
    "text": "and then it will create the final video",
    "start": "702399",
    "end": "704720"
  },
  {
    "text": "with this you know processed images",
    "start": "704720",
    "end": "706880"
  },
  {
    "text": "right so let's let me go to that",
    "start": "706880",
    "end": "708640"
  },
  {
    "text": "location",
    "start": "708640",
    "end": "710560"
  },
  {
    "text": "and then",
    "start": "710560",
    "end": "713040"
  },
  {
    "text": "and here is the",
    "start": "713760",
    "end": "717480"
  },
  {
    "text": "final file that was just created",
    "start": "718160",
    "end": "720480"
  },
  {
    "text": "and here is the final video output",
    "start": "720480",
    "end": "722880"
  },
  {
    "text": "generated by the computer vision model",
    "start": "722880",
    "end": "724639"
  },
  {
    "text": "which is managed by the aws iot green",
    "start": "724639",
    "end": "727279"
  },
  {
    "text": "graph service at the edge",
    "start": "727279",
    "end": "729040"
  },
  {
    "text": "so you can plug in any of the ml or cv",
    "start": "729040",
    "end": "731920"
  },
  {
    "text": "model",
    "start": "731920",
    "end": "732800"
  },
  {
    "text": "and use the inter process communication",
    "start": "732800",
    "end": "734639"
  },
  {
    "text": "and stream manager functionalities to",
    "start": "734639",
    "end": "736480"
  },
  {
    "text": "efficiently process the video data at",
    "start": "736480",
    "end": "738079"
  },
  {
    "text": "the edge and send it to the aws cloud",
    "start": "738079",
    "end": "741519"
  },
  {
    "text": "instead of applying the cv model and",
    "start": "741519",
    "end": "743600"
  },
  {
    "text": "sending the modified frames to cloud",
    "start": "743600",
    "end": "745760"
  },
  {
    "text": "using a single piece of code at a",
    "start": "745760",
    "end": "747440"
  },
  {
    "text": "program we can divide this into",
    "start": "747440",
    "end": "749600"
  },
  {
    "text": "different components okay",
    "start": "749600",
    "end": "751680"
  },
  {
    "text": "as i mentioned before greengrass version",
    "start": "751680",
    "end": "753680"
  },
  {
    "text": "2 is deeply all about modularity so we",
    "start": "753680",
    "end": "756560"
  },
  {
    "text": "can divide this large program into",
    "start": "756560",
    "end": "758320"
  },
  {
    "text": "multiple components and can have",
    "start": "758320",
    "end": "760480"
  },
  {
    "text": "multiple subscriber components and can",
    "start": "760480",
    "end": "762800"
  },
  {
    "text": "apply different ml inference models in",
    "start": "762800",
    "end": "765040"
  },
  {
    "text": "the in parallel on the same set of",
    "start": "765040",
    "end": "767360"
  },
  {
    "text": "frames",
    "start": "767360",
    "end": "768480"
  },
  {
    "text": "i hope you like this demo and thank you",
    "start": "768480",
    "end": "771360"
  },
  {
    "text": "dean and stefano once again for giving",
    "start": "771360",
    "end": "773440"
  },
  {
    "text": "me this opportunity",
    "start": "773440",
    "end": "775930"
  },
  {
    "text": "[Music]",
    "start": "775930",
    "end": "782649"
  }
]