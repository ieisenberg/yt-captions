[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "good morning everyone or good afternoon or good evening wherever you happen to be in the world thank you very much for",
    "start": "1920",
    "end": "8740"
  },
  {
    "text": "joining us today my name is Tim Raines I'm the regional leader for security",
    "start": "8740",
    "end": "13870"
  },
  {
    "text": "compliance business acceleration in Europe Middle East and Africa for a worldwide public sector based in London",
    "start": "13870",
    "end": "20789"
  },
  {
    "text": "and today I'm joined by mr. Dave Walker a solution specialist architect for",
    "start": "20789",
    "end": "27670"
  },
  {
    "text": "security compliance in it for Europe Middle East and Africa as well and we're",
    "start": "27670",
    "end": "33160"
  },
  {
    "text": "super excel yeah well you just did Tim I'm just saying hello so it should be",
    "start": "33160",
    "end": "42489"
  },
  {
    "text": "easy to tell the difference between us Dave's got a proper accent and I've got some type of accent but we're super",
    "start": "42489",
    "end": "49780"
  },
  {
    "text": "excited to be discussing encryption and key management with you today we've got",
    "start": "49780",
    "end": "55120"
  },
  {
    "text": "a lot of content to cover which is why we've allocated two hours for this particular webinar I'll be pleasantly",
    "start": "55120",
    "end": "63309"
  },
  {
    "text": "surprised if we actually get through all of that in time but we're going to do",
    "start": "63309",
    "end": "68590"
  },
  {
    "text": "our best to do that okay and we've got a bunch of people here to help us as well",
    "start": "68590",
    "end": "74830"
  },
  {
    "text": "in the studio to help us answer your chat questions so if you have questions during the webinar you can put them into",
    "start": "74830",
    "end": "82000"
  },
  {
    "text": "the chat window and we've got some solution specialists around security",
    "start": "82000",
    "end": "88450"
  },
  {
    "text": "compliance here in the studio with us oh god Andy Bunn Stephen McDermott and mr.",
    "start": "88450",
    "end": "94210"
  },
  {
    "text": "Orlando Scott Kelly and so they'll be happy to answer questions as you put",
    "start": "94210",
    "end": "100150"
  },
  {
    "text": "them into the chat window all right so with that let's get started so we as I",
    "start": "100150",
    "end": "106630"
  },
  {
    "text": "mentioned we've planned to cover a lot of a lot of content today and we'll",
    "start": "106630",
    "end": "113200"
  },
  {
    "start": "110000",
    "end": "185000"
  },
  {
    "text": "focus this webinar on protecting data at rest and the AWS services and tools that",
    "start": "113200",
    "end": "120730"
  },
  {
    "text": "help our customers do this we won't really be covering encryption for data",
    "start": "120730",
    "end": "125950"
  },
  {
    "text": "in transit during this webinar as we just won't have enough time so you know look for another webinar in the future",
    "start": "125950",
    "end": "132250"
  },
  {
    "text": "focused on protecting data in transit but the primary focus of this particular webinar will be protecting data at rest and this",
    "start": "132250",
    "end": "141190"
  },
  {
    "text": "is you know they're both super important and it's just the the vast amount of",
    "start": "141190",
    "end": "147040"
  },
  {
    "text": "information that we have to go through today that will prevent this from you know doing them both justice so we're",
    "start": "147040",
    "end": "152950"
  },
  {
    "text": "gonna we're going to focus on data at rest so in this webinar we'll do a deep",
    "start": "152950",
    "end": "159580"
  },
  {
    "text": "dive into client-side encryption server-side encryption the AWS key",
    "start": "159580",
    "end": "165280"
  },
  {
    "text": "management service AWS cloud HSM and how those can be used together where",
    "start": "165280",
    "end": "171700"
  },
  {
    "text": "requirements might necessitate that there's just a ton of stuff here as you",
    "start": "171700",
    "end": "177130"
  },
  {
    "text": "see once we start going into it we'll start sort of high-level and get deeper and deeper as we go along alright and so",
    "start": "177130",
    "end": "185460"
  },
  {
    "start": "185000",
    "end": "255000"
  },
  {
    "text": "why this topic why did I pick data at rest protecting data at rest for for",
    "start": "185460",
    "end": "191740"
  },
  {
    "text": "this topic well I've talked to a lot of you know CISOs chief information security officers chief technology",
    "start": "191740",
    "end": "198370"
  },
  {
    "text": "officers chief information officers data protection officers General Counsel's I've talked to lots and lots of these",
    "start": "198370",
    "end": "204820"
  },
  {
    "text": "folks over the years about data protection and I've had many conversations about you know governance",
    "start": "204820",
    "end": "212020"
  },
  {
    "text": "risk and compliance and so very often whatever conversation we start with we",
    "start": "212020",
    "end": "219220"
  },
  {
    "text": "end up talking about encryption and key management now encryption and key management doesn't solve every problem",
    "start": "219220",
    "end": "226290"
  },
  {
    "text": "there's other controls that we won't talk about today that that we have for data protection as well so we're really",
    "start": "226290",
    "end": "232810"
  },
  {
    "text": "just going to focus on encryption key management but generally speaking no matter what the conversation where we",
    "start": "232810",
    "end": "238090"
  },
  {
    "text": "start with these rules always want to talk about encryption and key management at some point in the conversation",
    "start": "238090",
    "end": "243880"
  },
  {
    "text": "because these are super important technologies and so this is why we're focused today on encryption and key",
    "start": "243880",
    "end": "250870"
  },
  {
    "text": "management specifically for data addressed okay so there's lots of reasons why",
    "start": "250870",
    "end": "256150"
  },
  {
    "start": "255000",
    "end": "285000"
  },
  {
    "text": "organizations use encryption key management so probably the biggest ones are maintaining confidentiality and",
    "start": "256150",
    "end": "263320"
  },
  {
    "text": "integrity of data so that's core in addition you know encryption",
    "start": "263320",
    "end": "269559"
  },
  {
    "text": "and effective key management can potentially help organizations meet some",
    "start": "269559",
    "end": "274779"
  },
  {
    "text": "of their compliance obligations and mitigate some of the specific risks they have in mind including things like",
    "start": "274779",
    "end": "281169"
  },
  {
    "text": "unauthorized access to data okay so then",
    "start": "281169",
    "end": "286179"
  },
  {
    "start": "285000",
    "end": "340000"
  },
  {
    "text": "you know the question is if if encryption and key management or such powerful controls why have an",
    "start": "286179",
    "end": "292899"
  },
  {
    "text": "organization's been encrypting everything all the time and you know besides the historical challenges of the",
    "start": "292899",
    "end": "299469"
  },
  {
    "text": "complexity and performance impacts related to encryption traditionally there's been a tension between securing",
    "start": "299469",
    "end": "306429"
  },
  {
    "text": "data and operationalizing data so it can be hard to find the right balance",
    "start": "306429",
    "end": "312129"
  },
  {
    "text": "between securing the data and then ensuring the data can be used to make timely decisions to achieve business",
    "start": "312129",
    "end": "318609"
  },
  {
    "text": "objectives or public sector organization objectives so if the data protection controls make it too difficult for",
    "start": "318609",
    "end": "326849"
  },
  {
    "text": "authorized users to find access and use data then the value of that data can be",
    "start": "326849",
    "end": "333039"
  },
  {
    "text": "degraded or even lost completely so this is this tension has been there you know",
    "start": "333039",
    "end": "338439"
  },
  {
    "text": "for decades and it's very tough so what we're trying to do at AWS is we're",
    "start": "338439",
    "end": "343959"
  },
  {
    "start": "340000",
    "end": "360000"
  },
  {
    "text": "trying to the model that we're trying to get to at AWS is this concept of",
    "start": "343959",
    "end": "349089"
  },
  {
    "text": "ubiquitous encryption so protecting data in transit and at rest using encryption",
    "start": "349089",
    "end": "354789"
  },
  {
    "text": "and key management options so if you're using for instance AWS key management",
    "start": "354789",
    "end": "362109"
  },
  {
    "start": "360000",
    "end": "428000"
  },
  {
    "text": "service which we'll talk about quite a bit today you can restrict access to all of the keys being used using policies",
    "start": "362109",
    "end": "371429"
  },
  {
    "text": "defined using Identity and Access Management and you can also get a record",
    "start": "371429",
    "end": "376659"
  },
  {
    "text": "of every call to kms using AWS cloud trail and so what we're trying to get to",
    "start": "376659",
    "end": "382209"
  },
  {
    "text": "that here is a model where we're helping protect your data from your on-premise",
    "start": "382209",
    "end": "387399"
  },
  {
    "text": "environment into the cloud between the different services that you use inside",
    "start": "387399",
    "end": "393729"
  },
  {
    "text": "the cloud and protect out with a range of key management options depending on",
    "start": "393729",
    "end": "400029"
  },
  {
    "text": "what your compliance obligations look like and what requirements are and what specific risks",
    "start": "400029",
    "end": "405670"
  },
  {
    "text": "you want to mitigate and so there's a whole bunch of controls here and again we're gonna focus just on a few of them",
    "start": "405670",
    "end": "412030"
  },
  {
    "text": "so encryption key management specifically for data at rest but be aware that there's a ton of things here",
    "start": "412030",
    "end": "418630"
  },
  {
    "text": "that AWS is doing around protecting data in transit I am and audit as well okay",
    "start": "418630",
    "end": "426040"
  },
  {
    "text": "all right so let's start by discussing how we protect data at rest specifically",
    "start": "426040",
    "end": "433390"
  },
  {
    "start": "428000",
    "end": "498000"
  },
  {
    "text": "using encryption and let's look at some encryption related concepts so that",
    "start": "433390",
    "end": "439870"
  },
  {
    "text": "we're all sort of on the same page we're going to focus on symmetric key encryption and it's called symmetric key",
    "start": "439870",
    "end": "446590"
  },
  {
    "text": "encryption because the same key is used to encrypt as well as decrypt the data so the performance characteristics make",
    "start": "446590",
    "end": "455230"
  },
  {
    "text": "symmetric key encryption a really good choice for encrypting large amounts of data and to encrypt data as you can see",
    "start": "455230",
    "end": "463090"
  },
  {
    "text": "on the slide we're going to provide two inputs to the encryption algorithm a data key and then the plaintext data to",
    "start": "463090",
    "end": "470410"
  },
  {
    "text": "be encrypted okay the process then produces encrypted data and to decrypt",
    "start": "470410",
    "end": "476290"
  },
  {
    "text": "the data the inputs provided are the data key and then the encrypted data which will produce plaintext data okay",
    "start": "476290",
    "end": "484240"
  },
  {
    "text": "so now you've you kind of have an overview of the general symmetric key encryption decryption process and some",
    "start": "484240",
    "end": "491170"
  },
  {
    "text": "of the terminology that we're going to use throughout this webinar all right so",
    "start": "491170",
    "end": "497820"
  },
  {
    "text": "what about the increase the encryption algorithms themselves so we're not going to spend a ton of time on the",
    "start": "497820",
    "end": "503500"
  },
  {
    "start": "498000",
    "end": "565000"
  },
  {
    "text": "mathematics or the you know anything like that here I'll just introduce a couple of the the",
    "start": "503500",
    "end": "509110"
  },
  {
    "text": "encryption algorithms that we use at AWS and if you want more information on any specific algorithm there's a URL here at",
    "start": "509110",
    "end": "516370"
  },
  {
    "text": "the bottom of the slide that you should check out because it'll it'll get right into detail about some of these these",
    "start": "516370",
    "end": "522099"
  },
  {
    "text": "algorithms but essentially an exception encryption algorithm is a formula or an instruction series that converts plain",
    "start": "522100",
    "end": "529870"
  },
  {
    "text": "text into unreadable ciphertext algorithms use advanced mathematics",
    "start": "529870",
    "end": "537110"
  },
  {
    "text": "and one or more encryption keys to make it relatively easy to encrypt the message but virtually impossible to",
    "start": "537110",
    "end": "544010"
  },
  {
    "text": "decrypt that message without the keys so AWS uses AES algorithm in GCM with 256",
    "start": "544010",
    "end": "554420"
  },
  {
    "text": "bit secret keys and again if you're interested in learning more about these different algorithms that we have listed",
    "start": "554420",
    "end": "560810"
  },
  {
    "text": "here please check out the URL at the bottom of the slide alright so the next concept that it's really key to what",
    "start": "560810",
    "end": "568460"
  },
  {
    "start": "565000",
    "end": "596000"
  },
  {
    "text": "we're going to be discussing today is called envelope encryption envelope encryption is a strategy for protecting",
    "start": "568460",
    "end": "573890"
  },
  {
    "text": "the encryption keys used to encrypt the data so first as you can see here we",
    "start": "573890",
    "end": "580040"
  },
  {
    "text": "encrypt the plaintext data with what we call a data key then to protect the data",
    "start": "580040",
    "end": "585440"
  },
  {
    "text": "key we encrypt it with another key that key is known as a key encryption key or",
    "start": "585440",
    "end": "591860"
  },
  {
    "text": "a wrapping key sometimes you'll see it referred to as okay and so encrypting the data key this way",
    "start": "591860",
    "end": "600230"
  },
  {
    "start": "596000",
    "end": "830000"
  },
  {
    "text": "is more efficient than 'dry encrypting the data under a new key because it's quicker and produces much smaller",
    "start": "600230",
    "end": "606560"
  },
  {
    "text": "ciphertext because we're encrypting a key instead of re-encrypted at a-- over and over again and so this turns out to",
    "start": "606560",
    "end": "613940"
  },
  {
    "text": "be really important if you're for instance trying to move data into a storage service moving that data around",
    "start": "613940",
    "end": "620390"
  },
  {
    "text": "and encrypting it multiple times in different places and so on would be from a performance perspective you know very",
    "start": "620390",
    "end": "626930"
  },
  {
    "text": "slow so instead you know we're going to encrypt keys and I'll show you exactly",
    "start": "626930",
    "end": "632780"
  },
  {
    "text": "how we do that here and so encrypting the data key this way as I said it's more efficient we can",
    "start": "632780",
    "end": "640400"
  },
  {
    "text": "encrypt the key encryption key that we use to encrypt that data key under still another key but eventually one key must",
    "start": "640400",
    "end": "648410"
  },
  {
    "text": "remain in plain text so that the encryption keys can be decrypted and",
    "start": "648410",
    "end": "655640"
  },
  {
    "text": "ultimately that ciphertext can be decrypted into plaintext data and this",
    "start": "655640",
    "end": "661130"
  },
  {
    "text": "top level encryption key I'll just go back here is what we call the master key so at the very top of the hierarchy and",
    "start": "661130",
    "end": "666920"
  },
  {
    "text": "I'll show you what that looks like here in a little bit more detail let's step through an exam full of envelope encryption so in this",
    "start": "666920",
    "end": "672919"
  },
  {
    "text": "example we're going to encrypt some bulk data using symmetric key encryption so",
    "start": "672919",
    "end": "678019"
  },
  {
    "text": "we take some plaintext data and a plaintext key and apply aes-256 to it",
    "start": "678019",
    "end": "687139"
  },
  {
    "text": "which generates some cipher text okay so some encrypted data here which is then",
    "start": "687139",
    "end": "693039"
  },
  {
    "text": "indistinguishable from random data so if you looked at the encrypted data it it",
    "start": "693039",
    "end": "698299"
  },
  {
    "text": "just looks like it's random data because now it's encrypted all right so now we'll store the encrypted data in some",
    "start": "698299",
    "end": "706309"
  },
  {
    "text": "sort of storage it could be in the cloud it could be on Prem there's a whole range of options and our plaintext data",
    "start": "706309",
    "end": "714049"
  },
  {
    "text": "key that we use to encrypt the data that needs to be protected now and we can't",
    "start": "714049",
    "end": "719389"
  },
  {
    "text": "store that plaintext data key with the data itself because if if someone got",
    "start": "719389",
    "end": "724999"
  },
  {
    "text": "into where we stored it and they get access to the key then if they had access to the algorithm they could",
    "start": "724999",
    "end": "730549"
  },
  {
    "text": "decrypt the data and get access to it so what we want to do is protect that that plaintext data key okay and so what",
    "start": "730549",
    "end": "739609"
  },
  {
    "text": "we're going to do is we're going to encrypt that plaintext data key and",
    "start": "739609",
    "end": "746739"
  },
  {
    "text": "again with what we're calling a master key or a wrapping key and what we end up",
    "start": "746739",
    "end": "751879"
  },
  {
    "text": "with is an encrypted data key okay so now that encrypted data key since it's encrypted",
    "start": "751879",
    "end": "757189"
  },
  {
    "text": "can be stored and it can be stored alongside of the encrypted data so that",
    "start": "757189",
    "end": "762739"
  },
  {
    "text": "they can share for instance durability characteristics of the storage media that you're storing them in all right",
    "start": "762739",
    "end": "770319"
  },
  {
    "text": "and so the issue is now we have this master key and what do we do with that",
    "start": "770319",
    "end": "776719"
  },
  {
    "text": "master key we have to protect it because if someone gets access to the master key then they can decrypt the key encrypting",
    "start": "776719",
    "end": "783109"
  },
  {
    "text": "key that can encrypting he can then be used to decrypt to the data key and then",
    "start": "783109",
    "end": "788479"
  },
  {
    "text": "the data key can be used to decrypt the the data so we need to be able to",
    "start": "788479",
    "end": "793659"
  },
  {
    "text": "protect this key so what we can do is we can wrap that key and encrypt it you",
    "start": "793659",
    "end": "798799"
  },
  {
    "text": "know several different times and create a key hierarchy so you take the master key and we encrypt it then we take that key and we encrypt",
    "start": "798799",
    "end": "804790"
  },
  {
    "text": "we can take that key encrypted but at some point that we have to have a plaintext key that's going to allow us",
    "start": "804790",
    "end": "811990"
  },
  {
    "text": "to begin to unwrap all of the key hierarchy so that we can actually get access to the data and this really is",
    "start": "811990",
    "end": "819040"
  },
  {
    "text": "where a key management system can help and Dave is going to talk about the key management system key management systems",
    "start": "819040",
    "end": "827050"
  },
  {
    "text": "in great depth later in the webinar okay so just to review or to summarize",
    "start": "827050",
    "end": "833020"
  },
  {
    "start": "830000",
    "end": "874000"
  },
  {
    "text": "what we talked about here data key is used to encrypt plaintext data that data",
    "start": "833020",
    "end": "838210"
  },
  {
    "text": "key can be encrypted using a key encryption key or a wrapping key these",
    "start": "838210",
    "end": "843310"
  },
  {
    "text": "keys can be encrypted using several or can be encrypted several times to create",
    "start": "843310",
    "end": "848440"
  },
  {
    "text": "a key hierarchy and then the master key is at the top of that hierarchy and is",
    "start": "848440",
    "end": "853780"
  },
  {
    "text": "used to decrypt the key hierarchy and ultimately get access to the plaintext",
    "start": "853780",
    "end": "859270"
  },
  {
    "text": "data we'll discuss some of the AWS services that that help manage key",
    "start": "859270",
    "end": "865450"
  },
  {
    "text": "hierarchies and master keys such as the AWS key management service and the AWS",
    "start": "865450",
    "end": "871030"
  },
  {
    "text": "cloud HSM service okay all right so now let's talk about options now that we've",
    "start": "871030",
    "end": "879520"
  },
  {
    "start": "874000",
    "end": "992000"
  },
  {
    "text": "covered algorithms and keys and how we do envelope concretion let's look at the",
    "start": "879520",
    "end": "884830"
  },
  {
    "text": "options for encrypting data at rest in AWS there's kind of two categories here",
    "start": "884830",
    "end": "890380"
  },
  {
    "text": "that we're going to talk about so the first category is client-side encryption the concept here is that before the",
    "start": "890380",
    "end": "896410"
  },
  {
    "text": "application that is generating or processing data transmits that data",
    "start": "896410",
    "end": "901720"
  },
  {
    "text": "anywhere it needs to encrypt it and so the application needs to be able to",
    "start": "901720",
    "end": "907360"
  },
  {
    "text": "encrypt the data and it needs keys to do this as we've just discussed all right",
    "start": "907360",
    "end": "913390"
  },
  {
    "text": "and AWS offers helper tools for customers that want to do client-side",
    "start": "913390",
    "end": "918850"
  },
  {
    "text": "encryption for example the AWS encryption SDK that we'll talk about this can help you simplify the",
    "start": "918850",
    "end": "925690"
  },
  {
    "text": "encryption decryption processes and there are some AWS services that have",
    "start": "925690",
    "end": "930820"
  },
  {
    "text": "dedicated encryption clients like s3 EMR and dynamodb and we'll walk you through",
    "start": "930820",
    "end": "937270"
  },
  {
    "text": "what these look like here in and and then you can use keys from several different places including the",
    "start": "937270",
    "end": "942910"
  },
  {
    "text": "application could generate keys for you on premises key management solutions and cloud-based solutions as well so you've",
    "start": "942910",
    "end": "949810"
  },
  {
    "text": "got lots of flexibility for key management and when you use client-side encryption you were responsible for the",
    "start": "949810",
    "end": "956080"
  },
  {
    "text": "proper implementation of the algorithms and the encryption and the decryption so you're taking on more responsibility",
    "start": "956080",
    "end": "962529"
  },
  {
    "text": "because you're implementing the client-side algorithms and and key",
    "start": "962529",
    "end": "967660"
  },
  {
    "text": "management mechanisms potentially yourself ok the second option that we'll talk about is server-side encryption and",
    "start": "967660",
    "end": "976630"
  },
  {
    "text": "this is where you're asking the service to encrypt and decrypt data on your",
    "start": "976630",
    "end": "982480"
  },
  {
    "text": "behalf ok so the service is responsible for all the encryption and decryption implementation details instead of",
    "start": "982480",
    "end": "989500"
  },
  {
    "text": "instead of the customer alright so let's dive deeper into both of these options and that way you'll see",
    "start": "989500",
    "end": "998350"
  },
  {
    "start": "992000",
    "end": "1020000"
  },
  {
    "text": "just how much flexibility you have to meet your requirements and to mitigate the risks that are important to your",
    "start": "998350",
    "end": "1003630"
  },
  {
    "text": "organization I'll start with client-side encryption and this is one that a lot of",
    "start": "1003630",
    "end": "1008940"
  },
  {
    "text": "customers I talked to this is where they started on their journey when they first started contemplating moving to the cloud this is a you know an option that",
    "start": "1008940",
    "end": "1016650"
  },
  {
    "text": "they looked at very closely in the beginning okay so client-side encryption",
    "start": "1016650",
    "end": "1021950"
  },
  {
    "start": "1020000",
    "end": "1385000"
  },
  {
    "text": "I'm gonna walk you through an example here so let's assume you're starting with data that's in your own on-premises",
    "start": "1021950",
    "end": "1029579"
  },
  {
    "text": "data center ok and that's what this is this left part of the slide is your own",
    "start": "1029579",
    "end": "1035100"
  },
  {
    "text": "data center I know it looks simple but let's pretend it's a real data center all right and let's say you have",
    "start": "1035100",
    "end": "1042780"
  },
  {
    "text": "requirements to keep keys on premise on premises and to encrypt data before",
    "start": "1042780",
    "end": "1048660"
  },
  {
    "text": "transferring it all right so in this scenario if you use the AWS encryption",
    "start": "1048660",
    "end": "1056970"
  },
  {
    "text": "SDK or the s3 client ok AWS can't see your data keys and I'll walk you through",
    "start": "1056970",
    "end": "1062790"
  },
  {
    "text": "how that works and so you can generate keys within the application or get them",
    "start": "1062790",
    "end": "1070620"
  },
  {
    "text": "from a key management infrastructure you have on premises okay like an HSM a hardware security module and then you",
    "start": "1070620",
    "end": "1077020"
  },
  {
    "text": "can use these keys to encrypt the data within the application okay",
    "start": "1077020",
    "end": "1083410"
  },
  {
    "text": "hopefully that makes sense so far so good now then once you've encrypted the",
    "start": "1083410",
    "end": "1089710"
  },
  {
    "text": "data using the keys that you have on Prem then you can transfer the encrypted data into an AWS service that accepts",
    "start": "1089710",
    "end": "1096220"
  },
  {
    "text": "data okay so notice in this scenario the unencrypted data and the unencrypted",
    "start": "1096220",
    "end": "1103210"
  },
  {
    "text": "keys were never transferred anywhere they were actually kept on crown the only thing that was transferred was the",
    "start": "1103210",
    "end": "1108910"
  },
  {
    "text": "encrypted data and well as we'll see it can be helpful to transfer a encrypted",
    "start": "1108910",
    "end": "1115840"
  },
  {
    "text": "version of the key as well okay and now another option you have is instead of",
    "start": "1115840",
    "end": "1121090"
  },
  {
    "text": "having the application sitting in your on-premises environment you could actually have that application running in ec2 in an ec2 instance inside your",
    "start": "1121090",
    "end": "1129670"
  },
  {
    "text": "own virtual private cloud and so now you're running the application that's",
    "start": "1129670",
    "end": "1135190"
  },
  {
    "text": "doing the encryption in the cloud and that way you can get all the benefits of the cloud the scalability of the agility",
    "start": "1135190",
    "end": "1141550"
  },
  {
    "text": "you can avoid all of the cost of your own data center and so on ok and so now",
    "start": "1141550",
    "end": "1148270"
  },
  {
    "text": "you can run that encryption process from within your own V PC and you can manage",
    "start": "1148270",
    "end": "1153520"
  },
  {
    "text": "keys here as well for instance if you wanted to keep the keys on-premise you can still do that you can have your",
    "start": "1153520",
    "end": "1159370"
  },
  {
    "text": "application reach out from inside of your V PC and your ec2 instances back",
    "start": "1159370",
    "end": "1165370"
  },
  {
    "text": "into your on-prem data center into your on-prem data key management",
    "start": "1165370",
    "end": "1171040"
  },
  {
    "text": "infrastructure and get the key from there decrypt the data inside that ec2",
    "start": "1171040",
    "end": "1176890"
  },
  {
    "text": "image and then destroy the key like throw the key away and now you have data",
    "start": "1176890",
    "end": "1182260"
  },
  {
    "text": "in clear-text sitting inside inside that infrastructure ok so it's just another",
    "start": "1182260",
    "end": "1188260"
  },
  {
    "text": "option if you want to manage keys on again on Prem you can do that even if",
    "start": "1188260",
    "end": "1194950"
  },
  {
    "text": "you're running your application from the cloud ok another option you have is to run that key infrastructure in the cloud",
    "start": "1194950",
    "end": "1201430"
  },
  {
    "text": "as well and so this can be another V PC another virtual private cloud that manage that only you have access to and",
    "start": "1201430",
    "end": "1209060"
  },
  {
    "text": "you can have the key infrastructure inside that B PC another option is to",
    "start": "1209060",
    "end": "1214760"
  },
  {
    "text": "have a third party do it for you so that you have a separation of duties so this could be an AWS an AWS technology",
    "start": "1214760",
    "end": "1222830"
  },
  {
    "text": "partner and there's plenty of them I'll show you a very partial list here later but you can have a trusted third party",
    "start": "1222830",
    "end": "1230000"
  },
  {
    "text": "also provide keys in the cloud and do the key infrastructure for you and that way you have a separation of duties okay",
    "start": "1230000",
    "end": "1236030"
  },
  {
    "text": "and then finally and this is what Dave will talk about later in the presentation is you have a bunch of options inside of",
    "start": "1236030",
    "end": "1243080"
  },
  {
    "text": "the cloud as well for key management and so if you wanted to use native management services such as AWS kms or",
    "start": "1243080",
    "end": "1251720"
  },
  {
    "text": "AWS cloud HSM or there's a combination of those two that you can use called custom key stores custom key store you",
    "start": "1251720",
    "end": "1259520"
  },
  {
    "text": "have all of those options and then one that I don't actually have drawn on the",
    "start": "1259520",
    "end": "1264800"
  },
  {
    "text": "slide that you have is you could take that key from your own on-premises key infrastructure and import that into AWS",
    "start": "1264800",
    "end": "1272120"
  },
  {
    "text": "kms for example so if you wanted to control the durability and lifetime of that key you can export it from your own",
    "start": "1272120",
    "end": "1279680"
  },
  {
    "text": "HSM if your HSM supports exportable keys and then import it into AWS kms and Dave",
    "start": "1279680",
    "end": "1286160"
  },
  {
    "text": "will talk a lot more about this process in a bit okay so that gives you an overview of what that looks like so",
    "start": "1286160",
    "end": "1293840"
  },
  {
    "text": "let's look at at one of these options a little closer so in this example we're",
    "start": "1293840",
    "end": "1302930"
  },
  {
    "text": "going to use a client side we're going to use client-side encryption and we're going to keep the keys on Prem and we're",
    "start": "1302930",
    "end": "1309560"
  },
  {
    "text": "never going to share the encrypted data or sorry the unencrypted data or the unencrypted keys with AWS okay we're",
    "start": "1309560",
    "end": "1317840"
  },
  {
    "text": "going to use the Amazon s3 encryption client to encrypt and decrypt an object",
    "start": "1317840",
    "end": "1323990"
  },
  {
    "text": "and store it in s3 and then we're going to keep the data key on Prem all right and I'll show you",
    "start": "1323990",
    "end": "1331730"
  },
  {
    "text": "the code in a minute but essentially essentially our application tells the S",
    "start": "1331730",
    "end": "1340230"
  },
  {
    "text": "encryption klein to generate a data key and then uses that data key to encrypt the object before putting it into s3 and",
    "start": "1340230",
    "end": "1347730"
  },
  {
    "text": "then your application encrypts the data key using a master key that you have in",
    "start": "1347730",
    "end": "1352799"
  },
  {
    "text": "your on-prem key infrastructure for example and now the encrypted data and",
    "start": "1352799",
    "end": "1358769"
  },
  {
    "text": "the encrypted data key can be stored together in s3 and then the only way to",
    "start": "1358769",
    "end": "1364260"
  },
  {
    "text": "get to the the clear text or the plaintext is to get access to the data",
    "start": "1364260",
    "end": "1371279"
  },
  {
    "text": "key and the data and then decrypt that data key and use it to decrypt the data okay and the master key is required to",
    "start": "1371279",
    "end": "1378570"
  },
  {
    "text": "decrypt the data key and it never leaves your on-prem data center okay so that's the scenario now to decrypt to decrypt",
    "start": "1378570",
    "end": "1390019"
  },
  {
    "start": "1385000",
    "end": "1588000"
  },
  {
    "text": "the application first has to authenticate has to be authorized to",
    "start": "1390019",
    "end": "1396090"
  },
  {
    "text": "download the object from s3 then the application gets the master key from the on-prem key management",
    "start": "1396090",
    "end": "1403320"
  },
  {
    "text": "infrastructure decrypt the data key and then uses the data key to decrypt the",
    "start": "1403320",
    "end": "1409799"
  },
  {
    "text": "object okay and then you have several options when it comes to programming",
    "start": "1409799",
    "end": "1415889"
  },
  {
    "text": "languages that you can use to perform this encryption and decryption as we're discussing here there's a bunch of SDKs",
    "start": "1415889",
    "end": "1422789"
  },
  {
    "text": "and so you have you know options based on the type of application you're using",
    "start": "1422789",
    "end": "1428970"
  },
  {
    "text": "in a type of language you're going to use for that so let me walk you through sort of what the application looks like",
    "start": "1428970",
    "end": "1436130"
  },
  {
    "text": "looking at some simple code here so this is just a code snippet that you can see",
    "start": "1436130",
    "end": "1442380"
  },
  {
    "text": "to show you how simple it can be to implement something like this scenario that we're talking about you can get",
    "start": "1442380",
    "end": "1448590"
  },
  {
    "text": "more complete code snippets from the URL at the bottom of the slide so if you actually want to get access to this code",
    "start": "1448590",
    "end": "1455399"
  },
  {
    "text": "and compile it and run it and so on you can you can do that from the URL on the slide alright so what we're doing here",
    "start": "1455399",
    "end": "1462299"
  },
  {
    "text": "is after setting up some variables including the one there that you can see called master key name okay that's where",
    "start": "1462299",
    "end": "1467909"
  },
  {
    "text": "we're going to put our master key into that variable then we go ahead and we tell the",
    "start": "1467909",
    "end": "1474010"
  },
  {
    "text": "Christian client to generate a new es 256 data key and we call that sim key so now",
    "start": "1474010",
    "end": "1481480"
  },
  {
    "text": "we actually have to a new 250 AAS 256 key that we're going to use for",
    "start": "1481480",
    "end": "1488290"
  },
  {
    "text": "encryption and then we're gonna save that to the local file system this could",
    "start": "1488290",
    "end": "1493780"
  },
  {
    "text": "be you know any kind of infrastructure really again it's code so you have lots of options so we're going to save this",
    "start": "1493780",
    "end": "1500470"
  },
  {
    "text": "to the local file system in this particular example and we're going to encrypt it as we do that using that master key okay so we have a master key",
    "start": "1500470",
    "end": "1507520"
  },
  {
    "text": "we're encrypting the data key and we're storing it on the local file system and then this call here is just loading the",
    "start": "1507520",
    "end": "1513100"
  },
  {
    "text": "the the key back into memory so that we can use it for encryption okay so now",
    "start": "1513100",
    "end": "1521050"
  },
  {
    "text": "that we have a key to use called sim key we here we're going to tell the Amazon",
    "start": "1521050",
    "end": "1527200"
  },
  {
    "text": "s3 encryption client to use that key and then we're going to upload the object",
    "start": "1527200",
    "end": "1532780"
  },
  {
    "text": "into s3 so what it's doing here is we're",
    "start": "1532780",
    "end": "1538660"
  },
  {
    "text": "telling it to use sim key which is our aes-256 key and then when we tell the client to upload it it uses sim key to",
    "start": "1538660",
    "end": "1546130"
  },
  {
    "text": "encrypt the object and then put it into s3 okay so the client actually uploads",
    "start": "1546130",
    "end": "1552910"
  },
  {
    "text": "the encrypted data key is part of the object metadata and so this the reason",
    "start": "1552910",
    "end": "1558460"
  },
  {
    "text": "why it does this is that metadata will help the client find the correct master key on Prem when it needs to decrypt",
    "start": "1558460",
    "end": "1565060"
  },
  {
    "text": "this object okay so this is what the decryption call looks like you know the",
    "start": "1565060",
    "end": "1570580"
  },
  {
    "text": "object metadata is used to help the encryption client determine which master key to use because you could have a",
    "start": "1570580",
    "end": "1575920"
  },
  {
    "text": "whole bunch of them on Prem and then to decrypt the data key and then the client",
    "start": "1575920",
    "end": "1581140"
  },
  {
    "text": "uses the master key to decrypt the data key and then uses the data key to decrypt the data okay all right so this",
    "start": "1581140",
    "end": "1590800"
  },
  {
    "start": "1588000",
    "end": "1764000"
  },
  {
    "text": "is what it looks like I've got an animated slide here to show you when we run that code theoretically this is what",
    "start": "1590800",
    "end": "1596950"
  },
  {
    "text": "would happen so first you provide the application with the key from your",
    "start": "1596950",
    "end": "1602680"
  },
  {
    "text": "infrastructure okay and then you provide the plain text object that you want to",
    "start": "1602680",
    "end": "1607780"
  },
  {
    "text": "in ripped into the application the application is using the s3 encryption",
    "start": "1607780",
    "end": "1613690"
  },
  {
    "text": "client as we discussed and it makes the calls and encrypts the data and now the",
    "start": "1613690",
    "end": "1619059"
  },
  {
    "text": "output is encrypted data and an encrypted data key ok and it uploads",
    "start": "1619059",
    "end": "1624130"
  },
  {
    "text": "that into s3 ok and then to decrypt it's the opposite right the reverse happens",
    "start": "1624130",
    "end": "1630010"
  },
  {
    "text": "the object in the key are downloaded the client uses the metadata that was",
    "start": "1630010",
    "end": "1635380"
  },
  {
    "text": "included with with the encrypted object to decide which master key to use so now",
    "start": "1635380",
    "end": "1640420"
  },
  {
    "text": "it's able to find the right master key then it uses that key to to use as the",
    "start": "1640420",
    "end": "1646600"
  },
  {
    "text": "key sir which master key to use it uses - that key to decrypt the data key that",
    "start": "1646600",
    "end": "1652270"
  },
  {
    "text": "was also stored in s 3 and then decrypt the object using the plaintext data key and now we have plaintext data back in",
    "start": "1652270",
    "end": "1660070"
  },
  {
    "text": "our in our data center so notice that the plaintext object and the plaintext",
    "start": "1660070",
    "end": "1665770"
  },
  {
    "text": "data key were never shared with AWS because you had your master key on Prem and you did the encryption on Prem ok so",
    "start": "1665770",
    "end": "1676360"
  },
  {
    "text": "sometimes when I show CISOs and CIOs and CTOs this they say well that's good but",
    "start": "1676360",
    "end": "1682150"
  },
  {
    "text": "that's an easy scenario because it's just storage there nothing was processed nothing was shared across services or",
    "start": "1682150",
    "end": "1689350"
  },
  {
    "text": "anything so I'll quickly walk you through the same sort of client-side encryption example here where we keep",
    "start": "1689350",
    "end": "1696250"
  },
  {
    "text": "data keys on Prem but this time we're focused on an Amazon DynamoDB database",
    "start": "1696250",
    "end": "1703660"
  },
  {
    "text": "okay so this is a database service in the cloud and we're going to use the dynamodb encryption client to do the",
    "start": "1703660",
    "end": "1710230"
  },
  {
    "text": "encryption and this encryption client is capable of encrypting data on an",
    "start": "1710230",
    "end": "1715630"
  },
  {
    "text": "attribute by attribute basis so it can also sign values to detect if values",
    "start": "1715630",
    "end": "1721660"
  },
  {
    "text": "change or things are being added or deleted to the database so it's got a signing capability as well and we're",
    "start": "1721660",
    "end": "1727660"
  },
  {
    "text": "going to avoid encrypting database keys and so if you encrypt the keys",
    "start": "1727660",
    "end": "1732760"
  },
  {
    "text": "themselves like the actual database keys that are used for search and sorting then you'll break the database right so",
    "start": "1732760",
    "end": "1739390"
  },
  {
    "text": "we want to make sure that we're encrypting data but we're not encrypting keys that the database actually needs to function okay",
    "start": "1739390",
    "end": "1746380"
  },
  {
    "text": "and so for this reason you want to make sure that if you're doing this you're not putting sensitive data into key",
    "start": "1746380",
    "end": "1751600"
  },
  {
    "text": "values because they won't be encrypted okay so what we're going to do is encrypt the",
    "start": "1751600",
    "end": "1756730"
  },
  {
    "text": "values that you know data values and I'll show you the code here in a second to show you how we're going to set this",
    "start": "1756730",
    "end": "1762100"
  },
  {
    "text": "up all right okay so in order to do this",
    "start": "1762100",
    "end": "1767220"
  },
  {
    "start": "1764000",
    "end": "1921000"
  },
  {
    "text": "the encryption client can use keys specified as what's called a",
    "start": "1767220",
    "end": "1772960"
  },
  {
    "text": "cryptographic key provider or cmp that you see here this includes on-premises",
    "start": "1772960",
    "end": "1778510"
  },
  {
    "text": "providers as well so you can get keys on Prem you don't have to use an AWS service to do this type of client-side",
    "start": "1778510",
    "end": "1784270"
  },
  {
    "text": "encryption using the DynamoDB encryption client at all what if you did you could",
    "start": "1784270",
    "end": "1790060"
  },
  {
    "text": "potentially simplify a lot of things and again dave is going to show you a bunch around the key management services that",
    "start": "1790060",
    "end": "1797380"
  },
  {
    "text": "we offer okay so the dynamodb encryption process have eight adhere on the slide we're",
    "start": "1797380",
    "end": "1804610"
  },
  {
    "text": "going to put the plain text item which is like a record in a database through",
    "start": "1804610",
    "end": "1809620"
  },
  {
    "text": "what's called the item encrypt there and there are some attribute options that we can use such as encrypt in sign-sign",
    "start": "1809620",
    "end": "1816820"
  },
  {
    "text": "only or do nothing and I'll show you how those are used when we look at the code and then the item encrypter gets key",
    "start": "1816820",
    "end": "1824230"
  },
  {
    "text": "materials from for encryption and decryption from a cryptographic material",
    "start": "1824230",
    "end": "1830170"
  },
  {
    "text": "provider of your choice and so the item encrypter outputs encrypted and/or",
    "start": "1830170",
    "end": "1835840"
  },
  {
    "text": "signed items depending on the attribute action specified for each attribute okay",
    "start": "1835840",
    "end": "1842110"
  },
  {
    "text": "and I'll show you what that looks like here in a second and then like we saw with the s3 encryption client example",
    "start": "1842110",
    "end": "1848980"
  },
  {
    "text": "you know this client requires a data key as well right so it gets the data key",
    "start": "1848980",
    "end": "1854770"
  },
  {
    "text": "from the cmp as we mentioned it also gets an encrypted version of the data",
    "start": "1854770",
    "end": "1860110"
  },
  {
    "text": "key and it uses these keys to encrypt and sign variables or attributes I",
    "start": "1860110",
    "end": "1865480"
  },
  {
    "text": "should say as specified by your application and once it's done it gets rid of the plain text data key since you",
    "start": "1865480",
    "end": "1874150"
  },
  {
    "text": "have an encrypted version of key it'll store it with the metadata again as I mentioned earlier for each",
    "start": "1874150",
    "end": "1880980"
  },
  {
    "text": "item and you'll be able to decrypt that key using the master key that the CMP",
    "start": "1880980",
    "end": "1887190"
  },
  {
    "text": "used to encrypt it okay so very similar to what we saw with the s3 encryption",
    "start": "1887190",
    "end": "1893490"
  },
  {
    "text": "client except this one is obviously designed for a database application instead of storage all right so to",
    "start": "1893490",
    "end": "1900990"
  },
  {
    "text": "decrypt the data we're going to take the encrypted and/or signed items for input",
    "start": "1900990",
    "end": "1907200"
  },
  {
    "text": "as well as the master key and then we're going to decrypt the encrypted data key",
    "start": "1907200",
    "end": "1912990"
  },
  {
    "text": "and then the item krypter processes this and provides the plaintext okay so let's",
    "start": "1912990",
    "end": "1921450"
  },
  {
    "start": "1921000",
    "end": "2083000"
  },
  {
    "text": "look at how this is implemented in code quickly so up here all we're doing is",
    "start": "1921450",
    "end": "1927450"
  },
  {
    "text": "setting up some attribute actions so we mentioned there's kind of three actions one of them is sign only so that we're",
    "start": "1927450",
    "end": "1935490"
  },
  {
    "text": "not for instance like a key that you would use for searching or sorting in a database we're not going to encrypt that",
    "start": "1935490",
    "end": "1941519"
  },
  {
    "text": "because that would break the database but what we are going to do is sign it so that if those values ever change we",
    "start": "1941519",
    "end": "1947549"
  },
  {
    "text": "will be able to detect those changes okay and then we have encrypt and sign",
    "start": "1947549",
    "end": "1953010"
  },
  {
    "text": "which means we're going to sign it and we're also going to encrypt it and then we have an action that you'll see here",
    "start": "1953010",
    "end": "1959820"
  },
  {
    "text": "later on where we do nothing we decide not to do anything with a particular type of attribute so here as the as each",
    "start": "1959820",
    "end": "1967470"
  },
  {
    "text": "item each attribute inside of a record comes in to this code the code is going",
    "start": "1967470",
    "end": "1972779"
  },
  {
    "text": "to look at the at the attribute name if that name is called is a sort key then",
    "start": "1972779",
    "end": "1979169"
  },
  {
    "text": "it's going to sign it if the name is test then we're going to do nothing with",
    "start": "1979169",
    "end": "1985260"
  },
  {
    "text": "it so if we look inside this database letter later for attributes called tests the values of those attributes will be",
    "start": "1985260",
    "end": "1992730"
  },
  {
    "text": "in plain text and then finally everything else we're going to encrypt so if it's not a key and if it's not",
    "start": "1992730",
    "end": "1999059"
  },
  {
    "text": "called test we're going to encrypt it okay inside the database and so when this runs what we're going to see here",
    "start": "1999059",
    "end": "2008149"
  },
  {
    "text": "is first we're going to make a call and pass along whether we're encrypting signing",
    "start": "2008149",
    "end": "2014270"
  },
  {
    "text": "or doing both depending on that wreck that attribute and then we're going to write that record to the database okay",
    "start": "2014270",
    "end": "2022960"
  },
  {
    "text": "so this is what it looks like when it's finished writing the record to the database right here all these attribute",
    "start": "2022960",
    "end": "2030230"
  },
  {
    "text": "names binary example numbers partition attribute sort attribute and test those",
    "start": "2030230",
    "end": "2036560"
  },
  {
    "text": "names are all in plain text okay because those are the names of the attributes but you can see here the values of the",
    "start": "2036560",
    "end": "2043370"
  },
  {
    "text": "attributes have been encrypted so all of these binary blobs that you see here that's encrypted data notice we can't",
    "start": "2043370",
    "end": "2050450"
  },
  {
    "text": "read it okay it's encrypted it's indistinguishable from random data and then here's some of the keys that we",
    "start": "2050450",
    "end": "2058158"
  },
  {
    "text": "talked about so there's a partition attribute and a sort attribute these are keys for our database we did not encrypt",
    "start": "2058159",
    "end": "2064429"
  },
  {
    "text": "those and this is why you can see the values of them value one in 55 and then",
    "start": "2064429",
    "end": "2069648"
  },
  {
    "text": "the attribute called test we chose not to not to do anything with that we didn't sign it or encrypt it and so you",
    "start": "2069649",
    "end": "2076879"
  },
  {
    "text": "can see the value is called test value and that's in plain text okay hopefully",
    "start": "2076880",
    "end": "2084139"
  },
  {
    "start": "2083000",
    "end": "2170000"
  },
  {
    "text": "that's making sense all right so we",
    "start": "2084140",
    "end": "2089389"
  },
  {
    "text": "looked at the Amazon s3 encryption client and the Amazon DynamoDB",
    "start": "2089390",
    "end": "2095090"
  },
  {
    "text": "encryption client you also have the option to use AWS encryption SDK to",
    "start": "2095090",
    "end": "2101270"
  },
  {
    "text": "implement your own client-side encryption and as I mentioned earlier this can reduce the complexity you have",
    "start": "2101270",
    "end": "2107630"
  },
  {
    "text": "and save you a lot of time and potentially a lot of money because the encryption SDK is doing a lot of the",
    "start": "2107630",
    "end": "2113150"
  },
  {
    "text": "work for you what kind of work well if you're not you know if encryptions not your core",
    "start": "2113150",
    "end": "2118160"
  },
  {
    "text": "competency some of the decisions that you have to make and some of the technology that you have access to is",
    "start": "2118160",
    "end": "2124790"
  },
  {
    "text": "complicated right and so the SDK allows you essentially to implement encryption",
    "start": "2124790",
    "end": "2129800"
  },
  {
    "text": "best practices without having to get into all the details like hey how do i generate a key which all your them",
    "start": "2129800",
    "end": "2136400"
  },
  {
    "text": "should I use where do I need to store it how do I make this encrypt the data portable like all of the file",
    "start": "2136400",
    "end": "2142970"
  },
  {
    "text": "or mats and all of this all of these details the SDK really does implement all of that for you and makes it much",
    "start": "2142970",
    "end": "2149330"
  },
  {
    "text": "easier to do client-side encryption okay and so there's several supported",
    "start": "2149330",
    "end": "2154880"
  },
  {
    "text": "languages and augur is for the AWS encryption SDK and again you can get the",
    "start": "2154880",
    "end": "2160340"
  },
  {
    "text": "details on this SDK in the FAQ that I'm",
    "start": "2160340",
    "end": "2166130"
  },
  {
    "text": "pointing to you at the bottom of the slide here with that URL alright so as I",
    "start": "2166130",
    "end": "2174320"
  },
  {
    "start": "2170000",
    "end": "2270000"
  },
  {
    "text": "mentioned earlier you have several different options around key management",
    "start": "2174320",
    "end": "2179510"
  },
  {
    "text": "and you know you can keep keys on Prem you can have a trusted third party you",
    "start": "2179510",
    "end": "2187940"
  },
  {
    "text": "can put them in the cloud as we looked at you the key here is that you always",
    "start": "2187940",
    "end": "2192950"
  },
  {
    "text": "own your data when you use AWS and so you can decide you know which where",
    "start": "2192950",
    "end": "2198050"
  },
  {
    "text": "you're storing your keys how the encryption is working like you have all of those options right that's super",
    "start": "2198050",
    "end": "2203150"
  },
  {
    "text": "important because there's risks that you might want to mitigate and you can choose the right encryption and key",
    "start": "2203150",
    "end": "2209060"
  },
  {
    "text": "management options to mitigate the risks that you're really worried about okay",
    "start": "2209060",
    "end": "2214670"
  },
  {
    "text": "and so finally as you can see with this",
    "start": "2214670",
    "end": "2220700"
  },
  {
    "text": "is the same slide I showed you earlier with a whole bunch of different options and these options give you that",
    "start": "2220700",
    "end": "2226190"
  },
  {
    "text": "flexibility that you're going to need in order to determine you know how you're going to mitigate these risks how are you going to meet your compliance",
    "start": "2226190",
    "end": "2231770"
  },
  {
    "text": "obligations and you weren't limited to using just one of these options you can use any of them as you want to right you",
    "start": "2231770",
    "end": "2237500"
  },
  {
    "text": "can use a whole bunch of them in different ways right so you're not limited you don't have to make one choice and use it everywhere all right",
    "start": "2237500",
    "end": "2245150"
  },
  {
    "text": "and then I mentioned AWS partners and so don't forget to check out the AWS",
    "start": "2245150",
    "end": "2251420"
  },
  {
    "text": "technology partners and the AWS consulting partners that are waiting for you in the AWS marketplace they can help",
    "start": "2251420",
    "end": "2258410"
  },
  {
    "text": "you with encryption they can help you with key management and they can help you with many other aspects of data",
    "start": "2258410",
    "end": "2263780"
  },
  {
    "text": "protection so check it out I've included the URL to the marketplace here at the bottom of the slide alright so now let's",
    "start": "2263780",
    "end": "2271369"
  },
  {
    "start": "2270000",
    "end": "2415000"
  },
  {
    "text": "talk about the other category we talked about two categories of protecting",
    "start": "2271369",
    "end": "2277430"
  },
  {
    "text": "data at rest in AWS the first one we just went over with client-side encryption we went through a few",
    "start": "2277430",
    "end": "2283279"
  },
  {
    "text": "examples of that now server-side encryption so here service on encryption",
    "start": "2283279",
    "end": "2288559"
  },
  {
    "text": "as I mentioned earlier you're essentially asking the service to encrypt the data on your behalf and many",
    "start": "2288559",
    "end": "2294680"
  },
  {
    "text": "AWS services like many many AWS services support server-side encryption so let's",
    "start": "2294680",
    "end": "2299959"
  },
  {
    "text": "walk through a couple examples so that you can see how this works so first off",
    "start": "2299959",
    "end": "2306369"
  },
  {
    "text": "we'll take a look at again at s3 a storage example and using server-side",
    "start": "2306369",
    "end": "2313759"
  },
  {
    "text": "encryption industry you have a unique data key per object that you put into the service and you have essentially",
    "start": "2313759",
    "end": "2320630"
  },
  {
    "text": "three options for server-side encryption in s3 so server-side encryption with",
    "start": "2320630",
    "end": "2326479"
  },
  {
    "text": "customer provided keys server-side encryption with Amazon s3 manage keys and server-side encryption with AWS kms",
    "start": "2326479",
    "end": "2333319"
  },
  {
    "text": "manage keys ok so let's look at the server-side encryption with customer",
    "start": "2333319",
    "end": "2338529"
  },
  {
    "text": "provided keys this option allows customers to upload objects to s3 and as",
    "start": "2338529",
    "end": "2345619"
  },
  {
    "text": "they do that the objects are encrypted by s3 using the data key provided by the",
    "start": "2345619",
    "end": "2351529"
  },
  {
    "text": "customer and so when the encryption or decryption operation is finished s3 removes the encryption key from the",
    "start": "2351529",
    "end": "2358279"
  },
  {
    "text": "memory of the service so you're essentially uploading your key with the data s3 uses that key to encrypt the",
    "start": "2358279",
    "end": "2365630"
  },
  {
    "text": "data then gets rid of the key destroys it and now the only way to get that data back in a plaintext form is to supply",
    "start": "2365630",
    "end": "2373369"
  },
  {
    "text": "the key again if you lose that key you've essentially lost the data because s3 is not storing a plain text version",
    "start": "2373369",
    "end": "2380479"
  },
  {
    "text": "of that key anywhere okay and you know it's worth reiterating",
    "start": "2380479",
    "end": "2389390"
  },
  {
    "text": "right if you're using this particular model it's really up to you to store",
    "start": "2389390",
    "end": "2394550"
  },
  {
    "text": "that key and to manage that key on premises or with again a trusted third",
    "start": "2394550",
    "end": "2399830"
  },
  {
    "text": "party or however you're doing that but again if you do lose that key you're gonna lose access to the object because",
    "start": "2399830",
    "end": "2405140"
  },
  {
    "text": "no one will be able to decrypt that in any reasonable amount of time especially with a an algorithm like AES 256 okay",
    "start": "2405140",
    "end": "2414970"
  },
  {
    "text": "all right so let's just walk through what this looks like the process looks like the customer provides the key and",
    "start": "2414970",
    "end": "2422859"
  },
  {
    "start": "2415000",
    "end": "2480000"
  },
  {
    "text": "the object to be encrypted and pushes that into s3 the s3 front-end web server",
    "start": "2422859",
    "end": "2430160"
  },
  {
    "text": "receives these items via a TLS 1.2 tunnel connection so that means that the",
    "start": "2430160",
    "end": "2436550"
  },
  {
    "text": "data has been encrypted or protected in transit and then the web server front-end encrypts the object with the",
    "start": "2436550",
    "end": "2443660"
  },
  {
    "text": "customer provided key and then deletes that key and puts the object into the s3",
    "start": "2443660",
    "end": "2448820"
  },
  {
    "text": "back-end storage fleet okay so it's being encrypted on the front end and then pushed into the storage fleet in",
    "start": "2448820",
    "end": "2455150"
  },
  {
    "text": "the backend and then that key that the s3 web server used to encrypt that data",
    "start": "2455150",
    "end": "2461960"
  },
  {
    "text": "is then deleted and again the customer has to provide that key when you download the data from s3 you're gonna",
    "start": "2461960",
    "end": "2469700"
  },
  {
    "text": "have to provide the same key the same symmetric data key to decrypt the data and if you don't provide the same key",
    "start": "2469700",
    "end": "2476540"
  },
  {
    "text": "you will not be able to get access to the data okay so here's a little bit of",
    "start": "2476540",
    "end": "2481580"
  },
  {
    "start": "2480000",
    "end": "2610000"
  },
  {
    "text": "code to see how this is really working in the app from the application perspective here we're going to set up",
    "start": "2481580",
    "end": "2488810"
  },
  {
    "text": "sorry we set up some variables at the very top here so you can see the the variable called SSE key okay so that's",
    "start": "2488810",
    "end": "2496430"
  },
  {
    "text": "our server side encryption key that we're going to set in our application and then what happens here is the",
    "start": "2496430",
    "end": "2505130"
  },
  {
    "text": "application generates a new AES 256 key and puts it into that variable called",
    "start": "2505130",
    "end": "2510800"
  },
  {
    "text": "SSE key and then next the application will upload an object to the specified",
    "start": "2510800",
    "end": "2517910"
  },
  {
    "text": "bakit also providing the customer provided key and also as you can see",
    "start": "2517910",
    "end": "2523220"
  },
  {
    "text": "here in the next call the application will download the object from s3 and it needs to use the same key it used to",
    "start": "2523220",
    "end": "2528710"
  },
  {
    "text": "upload the object in order to be successful and then finally the app will retrieve some object metadata and it's",
    "start": "2528710",
    "end": "2534799"
  },
  {
    "text": "going to have to supply the key there in that call as well so looking at those",
    "start": "2534799",
    "end": "2540380"
  },
  {
    "text": "three calls you can see for instance when we put the object into s3 we're",
    "start": "2540380",
    "end": "2546470"
  },
  {
    "text": "doing so using the key the data key when we're pulling the object out we're using",
    "start": "2546470",
    "end": "2552200"
  },
  {
    "text": "the same data key and then when we're accessing the metadata we're using the same data key so the point here is in",
    "start": "2552200",
    "end": "2558589"
  },
  {
    "text": "your application if you're using server-side encryption with customer provided keys you were providing the key",
    "start": "2558589",
    "end": "2564319"
  },
  {
    "text": "for all of these storage operations and if you fail to provide the key the operation is going to fail okay so",
    "start": "2564319",
    "end": "2571760"
  },
  {
    "text": "another s3 server-side encryption option you have is the s3 managed keys option",
    "start": "2571760",
    "end": "2577400"
  },
  {
    "text": "so in this particular option instead of you managing the key is the customer",
    "start": "2577400",
    "end": "2583150"
  },
  {
    "text": "this means that you don't have to provide the keys for all of these calls instead Amazon's s3 infrastructure is",
    "start": "2583150",
    "end": "2589430"
  },
  {
    "text": "used for the key management and notice in the diagram that I'm showing you here that the keys are stored in hosts that",
    "start": "2589430",
    "end": "2596750"
  },
  {
    "text": "are separate and distinct from those that are used to store data and so there",
    "start": "2596750",
    "end": "2601880"
  },
  {
    "text": "are different infrastructures again there's a separation of duties there that's that's an important nuance to",
    "start": "2601880",
    "end": "2607010"
  },
  {
    "text": "understand okay and there's a bunch of controls to help to protect data in",
    "start": "2607010",
    "end": "2613339"
  },
  {
    "start": "2610000",
    "end": "2700000"
  },
  {
    "text": "Amazon s3 I wish we had time to go through them all because they're actually there's tons and tons of them",
    "start": "2613339",
    "end": "2618980"
  },
  {
    "text": "it's really good stuff but we simply don't have enough time to cover them all here what I'm showing you here is one of",
    "start": "2618980",
    "end": "2626420"
  },
  {
    "text": "the concepts is called default encryption so that when you for instance create a new s3 bucket you set this",
    "start": "2626420",
    "end": "2634520"
  },
  {
    "text": "default encryption so for instance here I'm setting it to aes-256 and this is going to use server-side",
    "start": "2634520",
    "end": "2640970"
  },
  {
    "text": "encryption with s3 managed keys and this means that if if a user tries to upload",
    "start": "2640970",
    "end": "2647089"
  },
  {
    "text": "an object into s3 into this bucket and it doesn't have encryption information included with it",
    "start": "2647089",
    "end": "2653510"
  },
  {
    "text": "then the s3 service is going to encrypt it using this default method and that",
    "start": "2653510",
    "end": "2659420"
  },
  {
    "text": "ensures the data that is being uploaded into the bucket is actually encrypted without default encryption what I'm",
    "start": "2659420",
    "end": "2665930"
  },
  {
    "text": "showing you here is you can you can write a policy so an s3 bucket policy to",
    "start": "2665930",
    "end": "2672800"
  },
  {
    "text": "reject requests that don't have encryption information and so I'm just showing you a couple of examples here",
    "start": "2672800",
    "end": "2678920"
  },
  {
    "text": "what that policy would look like and again I wish we had more time but I simply don't have enough time to show",
    "start": "2678920",
    "end": "2684800"
  },
  {
    "text": "you the third s3 server side encryption option which is encrypting with kms",
    "start": "2684800",
    "end": "2691250"
  },
  {
    "text": "manage keys but luckily for us dave is going to cover kms in gory detail in",
    "start": "2691250",
    "end": "2696740"
  },
  {
    "text": "just a minute okay all right now using kms as Dave is going",
    "start": "2696740",
    "end": "2705410"
  },
  {
    "start": "2700000",
    "end": "2795000"
  },
  {
    "text": "to get into here it has a lot of advantages in my mind one of the biggest advantages is the integration it has",
    "start": "2705410",
    "end": "2712309"
  },
  {
    "text": "with other AWS services and so for example back in June at the AWS reinforced conference it was announced",
    "start": "2712309",
    "end": "2719569"
  },
  {
    "text": "that there are now over there are a hundred and seventeen services at that point that had some integration with kms",
    "start": "2719569",
    "end": "2725809"
  },
  {
    "text": "so this integration is super powerful and I'm going to hand it over to Dave to explain why it's powerful and dive right",
    "start": "2725809",
    "end": "2733460"
  },
  {
    "text": "into key management and I think Ross we have a survey question before Dave takes",
    "start": "2733460",
    "end": "2740119"
  },
  {
    "text": "over ok and so the survey question is now that we've gone over client-side",
    "start": "2740119",
    "end": "2747770"
  },
  {
    "text": "encryption and server-side encryption and we've talked about the keys and and all sorts of things here which of the",
    "start": "2747770",
    "end": "2753799"
  },
  {
    "text": "options that we discussed today do you think you're going to use to encrypt data at rest in AWS which one of these",
    "start": "2753799",
    "end": "2760240"
  },
  {
    "text": "resonated the most with you client-side encryption server-side encryption maybe you're going to decide to use both of",
    "start": "2760240",
    "end": "2766369"
  },
  {
    "text": "these or maybe you're going to do something else you're going to do none of these please help us out and allow us",
    "start": "2766369",
    "end": "2774799"
  },
  {
    "text": "to learn from you alright so it looks like there's a about a third of the",
    "start": "2774799",
    "end": "2781940"
  },
  {
    "text": "folks say they're going to use server-side encryption and then over 50% said they'll use both",
    "start": "2781940",
    "end": "2788690"
  },
  {
    "text": "okay that's very interesting thank you for sharing that with us that's actually",
    "start": "2788690",
    "end": "2794059"
  },
  {
    "text": "really interesting okay with that I'm going to turn it over to Dave mr. Dave Walker and he's going to walk you",
    "start": "2794059",
    "end": "2799849"
  },
  {
    "start": "2795000",
    "end": "3030000"
  },
  {
    "text": "through key management thank you so Tim",
    "start": "2799849",
    "end": "2804859"
  },
  {
    "text": "has covered where kms fits in the overall scheme of kms encryption",
    "start": "2804859",
    "end": "2811279"
  },
  {
    "text": "frameworks now let's actually have a little bit more of a look inside it so",
    "start": "2811279",
    "end": "2816410"
  },
  {
    "text": "kms itself it's resilient service it's deployed on a per region basis inside",
    "start": "2816410",
    "end": "2823369"
  },
  {
    "text": "AWS and it uses fits on 40 - 2 level - hardware in order to actually protect",
    "start": "2823369",
    "end": "2830690"
  },
  {
    "text": "your master keys you actually control access to the keys and whether they can",
    "start": "2830690",
    "end": "2838999"
  },
  {
    "text": "be used by different clients to encrypt decrypt or both",
    "start": "2838999",
    "end": "2844579"
  },
  {
    "text": "while kms looks after the keys from the point of view of durability and scaling",
    "start": "2844579",
    "end": "2851839"
  },
  {
    "text": "and so forth and all the actual kms API",
    "start": "2851839",
    "end": "2857089"
  },
  {
    "text": "calls that you make are recorded in cloud trail which I'll be going into in",
    "start": "2857089",
    "end": "2862640"
  },
  {
    "text": "a little bit more detail later so this is essentially kms at a moderate level",
    "start": "2862640",
    "end": "2868789"
  },
  {
    "text": "view it presents the it presents a",
    "start": "2868789",
    "end": "2874400"
  },
  {
    "text": "regular restful signature v4 based API as per other AWS services which I hope",
    "start": "2874400",
    "end": "2881299"
  },
  {
    "text": "you already know and like it integrates",
    "start": "2881299",
    "end": "2886430"
  },
  {
    "text": "with the AWS SDKs so so which you use to do things like",
    "start": "2886430",
    "end": "2892069"
  },
  {
    "text": "provision your keys apply grants to them just generally manage your manage your",
    "start": "2892069",
    "end": "2898160"
  },
  {
    "text": "keys and permissions on them it also integrates with the encryption SDK which",
    "start": "2898160",
    "end": "2904009"
  },
  {
    "text": "Tim has just talked about and as Tim has also just mentioned it integrates via",
    "start": "2904009",
    "end": "2909829"
  },
  {
    "text": "service roles with those hundred and seventeen other AWS services the behind",
    "start": "2909829",
    "end": "2917119"
  },
  {
    "text": "the act all restful front-end and the I am permissions needed to mediate access to",
    "start": "2917119",
    "end": "2924059"
  },
  {
    "text": "that you have a fleet of key stores per region these are actually fits on 40 - 2",
    "start": "2924059",
    "end": "2931619"
  },
  {
    "text": "level - validated as I mentioned there's the link down there to the actual",
    "start": "2931619",
    "end": "2937349"
  },
  {
    "text": "certificate that is on lists website very closely associated with that",
    "start": "2937349",
    "end": "2943289"
  },
  {
    "text": "certificate on the site is the actual evaluation report and if you pull that",
    "start": "2943289",
    "end": "2948660"
  },
  {
    "text": "up and look in section two point one point one you'll see a table which",
    "start": "2948660",
    "end": "2955140"
  },
  {
    "text": "states that those back-end HSMs are actually validated - fits on 40 - 2",
    "start": "2955140",
    "end": "2963630"
  },
  {
    "text": "level 3 in certain important areas particularly design assurance role",
    "start": "2963630",
    "end": "2971670"
  },
  {
    "text": "services and authentication and physical security but the the HSMs are actually",
    "start": "2971670",
    "end": "2978749"
  },
  {
    "text": "level 2 overall because that's where they rate in terms of things like electromagnetic interference interface",
    "start": "2978749",
    "end": "2985709"
  },
  {
    "text": "design and so forth so these are the",
    "start": "2985709",
    "end": "2991999"
  },
  {
    "text": "third-party certifications that KMS is in scope for if you haven't already had",
    "start": "2991999",
    "end": "2999420"
  },
  {
    "text": "look how to look at our sock 1 sot - and pci DSS audit reports i'd encourage you",
    "start": "2999420",
    "end": "3006559"
  },
  {
    "text": "to do so those are available on our artifact service which is available",
    "start": "3006559",
    "end": "3011900"
  },
  {
    "text": "through the console it's essentially a little self-service web portal you'll also find in there are ISO 9001 quality",
    "start": "3011900",
    "end": "3019789"
  },
  {
    "text": "manual which is interesting reading if you want to get some insight into how",
    "start": "3019789",
    "end": "3024859"
  },
  {
    "text": "our software development lifecycle works but I digress a little so let's actually",
    "start": "3024859",
    "end": "3030709"
  },
  {
    "start": "3030000",
    "end": "3215000"
  },
  {
    "text": "look at how 8 how AWS and kms between them use data Keys really it's that",
    "start": "3030709",
    "end": "3038959"
  },
  {
    "text": "there's two approaches one is for EBS and easy and also easy to instant stores",
    "start": "3038959",
    "end": "3047930"
  },
  {
    "text": "these obviously are going to normally be fair long lived volumes you have a data key",
    "start": "3047930",
    "end": "3055039"
  },
  {
    "text": "per volume and these are stored once K",
    "start": "3055039",
    "end": "3060319"
  },
  {
    "text": "at once kms has actually decrypted them either in the hypervisor for the earlier",
    "start": "3060319",
    "end": "3067489"
  },
  {
    "text": "Xen fleet or in or in the Nitro system storage for the more recent instances",
    "start": "3067489",
    "end": "3073099"
  },
  {
    "text": "that we have in the event of something going wrong with your instance because",
    "start": "3073099",
    "end": "3078979"
  },
  {
    "text": "as we all know Virna says everything fails all the time then we have the ability to go reprovision in that key if",
    "start": "3078979",
    "end": "3086180"
  },
  {
    "text": "we need to swap an instance over or reprovision it in the case of in the",
    "start": "3086180",
    "end": "3092269"
  },
  {
    "text": "case of a failure and a bunch of services use this particular model because they typically use EBS behind",
    "start": "3092269",
    "end": "3101029"
  },
  {
    "text": "the scenes in order to actually store your data s3 Tim's already mentioned a",
    "start": "3101029",
    "end": "3108469"
  },
  {
    "text": "little bit about how s3 has its own front-end management servers these also",
    "start": "3108469",
    "end": "3115190"
  },
  {
    "text": "deal with your KMS keys again you have aka kms data key per object and those",
    "start": "3115190",
    "end": "3125390"
  },
  {
    "text": "those object keys only need to exist in the s3 front end when each time you",
    "start": "3125390",
    "end": "3131930"
  },
  {
    "text": "actually access the object so normally the EBS keys are longer lived in in in",
    "start": "3131930",
    "end": "3140450"
  },
  {
    "text": "the actual environment that is during the data processing also it's worth",
    "start": "3140450",
    "end": "3146960"
  },
  {
    "text": "bearing in mind that because an EBS volume is more likely to a be very",
    "start": "3146960",
    "end": "3155359"
  },
  {
    "text": "long-lived but also have a lot of access over its lifetime in terms of reads and",
    "start": "3155359",
    "end": "3162200"
  },
  {
    "text": "writes compared to an s3 object I mean you may be you may be reading and",
    "start": "3162200",
    "end": "3169249"
  },
  {
    "text": "writing an s3 or not an s3 object fairly frequently but chances are you'll be accessing storage on an EVs volume more",
    "start": "3169249",
    "end": "3176150"
  },
  {
    "text": "frequently we actually use a different mode when working with EBS volumes Timms",
    "start": "3176150",
    "end": "3183979"
  },
  {
    "text": "already mentioned the um KMS typically uses aes-256 GCM so",
    "start": "3183979",
    "end": "3189620"
  },
  {
    "text": "galois counter mode which gives you a 256 bit key space on EVs we use a token",
    "start": "3189620",
    "end": "3198200"
  },
  {
    "text": "stealing mode XTS so that's AAS 256 XTS which effectively doubles the size of",
    "start": "3198200",
    "end": "3205400"
  },
  {
    "text": "your key space giving you a 512 bit search space and therefore mitigating",
    "start": "3205400",
    "end": "3212090"
  },
  {
    "text": "the the key wear out problem as has",
    "start": "3212090",
    "end": "3217910"
  },
  {
    "start": "3215000",
    "end": "3450000"
  },
  {
    "text": "already been mentioned tim's discussed how worm you effectively had to have two tiers of keys",
    "start": "3217910",
    "end": "3223430"
  },
  {
    "text": "having your um your master key which lives only in kms in inflate ex form and",
    "start": "3223430",
    "end": "3230780"
  },
  {
    "text": "also your data keys which actually encrypt your data there's a there's a",
    "start": "3230780",
    "end": "3237950"
  },
  {
    "text": "couple of truths that kind of hide in plain sight in this diagram motive most",
    "start": "3237950",
    "end": "3243050"
  },
  {
    "text": "interesting of which is that your data keys do not live in kms they live in the",
    "start": "3243050",
    "end": "3250130"
  },
  {
    "text": "individual services that hosts the data that's being encrypted actually alongside that data this has some useful",
    "start": "3250130",
    "end": "3258560"
  },
  {
    "text": "useful side-effects and benefits in that if you consider a customer who has a",
    "start": "3258560",
    "end": "3265160"
  },
  {
    "text": "particularly low risk appetite and is concerned about insider threat at AWS",
    "start": "3265160",
    "end": "3271010"
  },
  {
    "text": "for example then because because of the way in which services are provisioned",
    "start": "3271010",
    "end": "3277970"
  },
  {
    "text": "and structured at AWS under the big umbrella ray ws engineering each",
    "start": "3277970",
    "end": "3284360"
  },
  {
    "text": "individual AWS service operates semi autonomous Li it's fair to say with",
    "start": "3284360",
    "end": "3290450"
  },
  {
    "text": "oversight from AWS security of course but each is built and managed and and",
    "start": "3290450",
    "end": "3297440"
  },
  {
    "text": "designed and run by its own its own team we call them service teams and under",
    "start": "3297440",
    "end": "3305000"
  },
  {
    "text": "appropriate circumstances so from the point of view of debugging and so forth there are means by which service teams",
    "start": "3305000",
    "end": "3313370"
  },
  {
    "text": "can get privileged access to work on their service but this means",
    "start": "3313370",
    "end": "3322300"
  },
  {
    "text": "that if I was on the s3 team for example and I needed to do some work on s3 maybe",
    "start": "3322300",
    "end": "3330310"
  },
  {
    "text": "provisioning some new front-end devices or whatever then there is no way I could",
    "start": "3330310",
    "end": "3336010"
  },
  {
    "text": "get access to the clear text of the data encryption keys the kms was storing in",
    "start": "3336010",
    "end": "3342850"
  },
  {
    "text": "s3 because those those those keys are encrypted with the master keys which are",
    "start": "3342850",
    "end": "3349960"
  },
  {
    "text": "up in KMS and as a member of the s3 service team I have no means of getting",
    "start": "3349960",
    "end": "3356080"
  },
  {
    "text": "any more privilege on kms than you do I would just be a normal user so we",
    "start": "3356080",
    "end": "3362950"
  },
  {
    "text": "actually have separation of duty enforcement on key access associated",
    "start": "3362950",
    "end": "3369280"
  },
  {
    "text": "with kms carrying on a bit more just in",
    "start": "3369280",
    "end": "3376240"
  },
  {
    "text": "a bit more detail here so you have your data key which encrypts your bulk data",
    "start": "3376240",
    "end": "3381520"
  },
  {
    "text": "as Tim's mentioned that actually lives with your data in the relevant service that gets encrypted by your master key",
    "start": "3381520",
    "end": "3388660"
  },
  {
    "text": "and those are actually encrypted under further keys that are actually stored in",
    "start": "3388660",
    "end": "3395650"
  },
  {
    "text": "kms itself the individual HSMs operate",
    "start": "3395650",
    "end": "3400990"
  },
  {
    "text": "as a fleet they establish encrypted communications using EC DHE between them",
    "start": "3400990",
    "end": "3407170"
  },
  {
    "text": "so you've got perfect forward secrecy and then they actually excuse me they",
    "start": "3407170",
    "end": "3414670"
  },
  {
    "text": "are able to exchange key data among themselves so that clear text copy of",
    "start": "3414670",
    "end": "3421990"
  },
  {
    "text": "your master keys is only shared among the HSM s in a region obviously they're",
    "start": "3421990",
    "end": "3428980"
  },
  {
    "text": "in different availability zones for resilience for keys that we actually",
    "start": "3428980",
    "end": "3434020"
  },
  {
    "text": "generate for you in kms when you say create me a master key those master keys",
    "start": "3434020",
    "end": "3440200"
  },
  {
    "text": "actually get encrypted using fleet keys up at the top there and stored in s3 for",
    "start": "3440200",
    "end": "3446619"
  },
  {
    "text": "resilience as well there are two kinds of master",
    "start": "3446619",
    "end": "3452780"
  },
  {
    "start": "3450000",
    "end": "3600000"
  },
  {
    "text": "keys with kms there are ones that mean that we managed and there are ones that",
    "start": "3452780",
    "end": "3457910"
  },
  {
    "text": "you manage the master keys normally get referred to as default keys by each",
    "start": "3457910",
    "end": "3464630"
  },
  {
    "text": "service each service that has kms integration it's fair to say that we",
    "start": "3464630",
    "end": "3470930"
  },
  {
    "text": "create and manage those so that when you turn on encryption in an AWS service",
    "start": "3470930",
    "end": "3476480"
  },
  {
    "text": "that has kms support and you set and you say go use kms if you have code that",
    "start": "3476480",
    "end": "3483530"
  },
  {
    "text": "dates from before kms had supported that particular service you don't need to go",
    "start": "3483530",
    "end": "3490460"
  },
  {
    "text": "changing your code in order for it to continue to work and for encryption to happen the default key will just get",
    "start": "3490460",
    "end": "3498170"
  },
  {
    "text": "used by default funnily enough if no other key is specified in your API calls",
    "start": "3498170",
    "end": "3503620"
  },
  {
    "text": "however we do very much recommend that if you've got software that supports kms",
    "start": "3503620",
    "end": "3510440"
  },
  {
    "text": "and understands key management from the point of view of being able to reference",
    "start": "3510440",
    "end": "3515450"
  },
  {
    "text": "a key that you want to use to encrypt when when you're making it making an API",
    "start": "3515450",
    "end": "3520580"
  },
  {
    "text": "call to encrypt or decrypt data we do recommend that you actually provision your own master keys and use those also",
    "start": "3520580",
    "end": "3529820"
  },
  {
    "text": "it's a good idea to if you're in a multi account environment it's a good idea to",
    "start": "3529820",
    "end": "3535520"
  },
  {
    "text": "keep your master keys in the same account where the data is and if you",
    "start": "3535520",
    "end": "3541310"
  },
  {
    "text": "need to make calls to for example store data in a log bucket in s3 from another",
    "start": "3541310",
    "end": "3549650"
  },
  {
    "text": "account you can then actually Grand Cross account access and this is and",
    "start": "3549650",
    "end": "3555340"
  },
  {
    "text": "actually managing access to keys is what I'm going to get onto in just a minute or two so looking at how a key actually",
    "start": "3555340",
    "end": "3563570"
  },
  {
    "text": "gets used you've got kms with your master key in there when you go doing something such",
    "start": "3563570",
    "end": "3571850"
  },
  {
    "text": "as here on an ec2 instance when you go doing something like mounting an EBS",
    "start": "3571850",
    "end": "3577400"
  },
  {
    "text": "volume first of all if you're going if you're creating that volume to begin with your",
    "start": "3577400",
    "end": "3585250"
  },
  {
    "text": "your um you you end up calling KMS with generate data key to say I'm making a",
    "start": "3585250",
    "end": "3590560"
  },
  {
    "text": "new volume make me a data to make me a data T data key to encrypt it with if",
    "start": "3590560",
    "end": "3596290"
  },
  {
    "text": "the client has the ability to use that key then it is able to do so as indeed",
    "start": "3596290",
    "end": "3604750"
  },
  {
    "text": "are you the data key is encrypted using an aes 256 key that was established",
    "start": "3604750",
    "end": "3612250"
  },
  {
    "text": "using the ECD AG connection over the back channel to talk to KMS so you wind",
    "start": "3612250",
    "end": "3618190"
  },
  {
    "text": "up actually shipping the data key over the encrypted channel so you actually",
    "start": "3618190",
    "end": "3624250"
  },
  {
    "text": "ship two keys here you ship a twitter text copy of the data key free ephemeral use by the service and you ship an",
    "start": "3624250",
    "end": "3631510"
  },
  {
    "text": "encrypted copy of the data key encrypted with the master key to store alongside your data and then those get actually",
    "start": "3631510",
    "end": "3639430"
  },
  {
    "text": "returned to the client over that aes-256 encrypted channel with those keys",
    "start": "3639430",
    "end": "3645190"
  },
  {
    "text": "negotiated over ECD AG you encrypt your data you delete the key when you've",
    "start": "3645190",
    "end": "3651490"
  },
  {
    "text": "actually when you actually don't need that encryption context anymore so in",
    "start": "3651490",
    "end": "3658540"
  },
  {
    "text": "terms of the clear text copy of the data key that gets stored either in a",
    "start": "3658540",
    "end": "3663820"
  },
  {
    "text": "hypervisor module or in the nitro system it's something that we cannot access we",
    "start": "3663820",
    "end": "3670420"
  },
  {
    "text": "cannot we cannot dump Ram out out of nitro or out of the hypervisor those",
    "start": "3670420",
    "end": "3675610"
  },
  {
    "text": "keys are beyond the site of AWS staff when they're actually in when they're",
    "start": "3675610",
    "end": "3681760"
  },
  {
    "text": "actually in the in the client service",
    "start": "3681760",
    "end": "3686700"
  },
  {
    "text": "now you can also bring your own key some customers have needs to do this and this",
    "start": "3687480",
    "end": "3695290"
  },
  {
    "text": "is the one time at the moment that you'll actually see kms doing asymmetric encryption so if you need to bring your",
    "start": "3695290",
    "end": "3702130"
  },
  {
    "text": "own key you make an API call saying I need to bring my own key kms goes and",
    "start": "3702130",
    "end": "3708280"
  },
  {
    "text": "creates a an empty container to put your key in it then goes and generates an RSA key",
    "start": "3708280",
    "end": "3714980"
  },
  {
    "text": "pair it sends you one half of that key pair which you then encrypt your key",
    "start": "3714980",
    "end": "3721580"
  },
  {
    "text": "width that you're going to bring and you then return that to kms kms decrypt your",
    "start": "3721580",
    "end": "3727880"
  },
  {
    "text": "key with the other half of the key pair puts it in the container and throws the key pair away at which point you now",
    "start": "3727880",
    "end": "3735440"
  },
  {
    "text": "have your own key material as a kms cmk reasons why some customers may want to",
    "start": "3735440",
    "end": "3742430"
  },
  {
    "text": "do this is some customers have particular requirements around key",
    "start": "3742430",
    "end": "3748640"
  },
  {
    "text": "generation now in terms of what kms actually does being a certified",
    "start": "3748640",
    "end": "3756110"
  },
  {
    "text": "environment we do actually use certified and Phipps approved approved random",
    "start": "3756110",
    "end": "3762490"
  },
  {
    "text": "random number generation for generating C MKS and indeed data encryption keys",
    "start": "3762490",
    "end": "3768790"
  },
  {
    "text": "but there are some customers who have a need to have harder assurance of random",
    "start": "3768790",
    "end": "3776300"
  },
  {
    "text": "number generation it's fair to say actually assurance of randomness of",
    "start": "3776300",
    "end": "3781850"
  },
  {
    "text": "random numbers is one of the very very few now remaining black hearts in",
    "start": "3781850",
    "end": "3787010"
  },
  {
    "text": "cryptography and we do have customers out there who need to use things like",
    "start": "3787010",
    "end": "3792710"
  },
  {
    "text": "like quantum effects or radioactive decay as an entropy source for a random",
    "start": "3792710",
    "end": "3800420"
  },
  {
    "text": "number generator if you're in that if you're in that camp then this is something you can do you can bring your",
    "start": "3800420",
    "end": "3806180"
  },
  {
    "text": "own key also regarding key deletion when",
    "start": "3806180",
    "end": "3811910"
  },
  {
    "text": "we create a key in kms when we create a master key for you after you call the",
    "start": "3811910",
    "end": "3818660"
  },
  {
    "text": "create master creator cmk API we are effectively the custodians of that key",
    "start": "3818660",
    "end": "3825980"
  },
  {
    "text": "for you you don't get access to the key material at any point so what this means",
    "start": "3825980",
    "end": "3832610"
  },
  {
    "text": "is that if you go deleting your key and the key disappears then any data that",
    "start": "3832610",
    "end": "3840140"
  },
  {
    "text": "you've got encrypted using that key is now so much useless white noise and in the early days of km/s we had a",
    "start": "3840140",
    "end": "3848000"
  },
  {
    "text": "few customers who did this and then they went oops I've got this volume all these",
    "start": "3848000",
    "end": "3854210"
  },
  {
    "text": "objects that I'd sort of forgotten about and it was encrypted with this master",
    "start": "3854210",
    "end": "3860390"
  },
  {
    "text": "key that I've just deleted oh so what we actually do is in the is if you have a",
    "start": "3860390",
    "end": "3868130"
  },
  {
    "text": "key that we have generated for you and that we we are the custodian of we",
    "start": "3868130",
    "end": "3875090"
  },
  {
    "text": "require that when you say delete this key there be a minimum seven days you",
    "start": "3875090",
    "end": "3880940"
  },
  {
    "text": "can have it up to thirty days if you want to a minimum seven days during which the key is put beyond use but can",
    "start": "3880940",
    "end": "3888410"
  },
  {
    "text": "which if needed then be recalled and brought back into service so this is to",
    "start": "3888410",
    "end": "3893990"
  },
  {
    "text": "mitigate the risk of you having an oops moment and realizing that you've got some data that you've got encrypted with",
    "start": "3893990",
    "end": "3901100"
  },
  {
    "text": "the key that you're trying to delete by contrast if you bring your own key",
    "start": "3901100",
    "end": "3906550"
  },
  {
    "text": "you've got the key you are the custodian of the key and you're just giving us a copy of it so if you go deleting the kms",
    "start": "3906550",
    "end": "3915350"
  },
  {
    "text": "copy of a key that you have brought then should you find that you have an oops moment you should be in a position to",
    "start": "3915350",
    "end": "3922610"
  },
  {
    "text": "bring another copy of the key again yourself in order to mitigate the",
    "start": "3922610",
    "end": "3928300"
  },
  {
    "text": "mitigate the issue so if you have your",
    "start": "3928300",
    "end": "3933410"
  },
  {
    "text": "own key management and your own key management environment on your premises bring your own key is suitable approach",
    "start": "3933410",
    "end": "3941330"
  },
  {
    "text": "if you're in the circumstances where you need to all this about how we actually",
    "start": "3941330",
    "end": "3948710"
  },
  {
    "text": "handle the keys is described in the kms FAQ and also in the kms cryptographic",
    "start": "3948710",
    "end": "3955790"
  },
  {
    "text": "details white paper which I would very much encourage you to read if you would like exhaustive detail on how kms",
    "start": "3955790",
    "end": "3963710"
  },
  {
    "text": "actually works so as I said kms is a per region service keys aren't replicated",
    "start": "3963710",
    "end": "3970490"
  },
  {
    "text": "out of region you can actually use the AWS crypto SDK in order to mani",
    "start": "3970490",
    "end": "3979440"
  },
  {
    "text": "replication of keys across region so that you can transfer data across region",
    "start": "3979440",
    "end": "3984809"
  },
  {
    "text": "and as ciphertext and then decrypt it at the far end alternatively for s3 there",
    "start": "3984809",
    "end": "3992789"
  },
  {
    "text": "is an s3 cross region replication API call and you can do dynamic decryption",
    "start": "3992789",
    "end": "3999119"
  },
  {
    "text": "and re encryption with different region keys on the fly in that there's actually",
    "start": "3999119",
    "end": "4004220"
  },
  {
    "text": "an item in the last bullet point here again that's worth calling out which is",
    "start": "4004220",
    "end": "4009680"
  },
  {
    "text": "that there are certain operations which are particularly security sensitive in",
    "start": "4009680",
    "end": "4015650"
  },
  {
    "text": "the kms back-end so things like introducing a new HSM into a regions",
    "start": "4015650",
    "end": "4021200"
  },
  {
    "text": "fleet or removing one from a fleet are obviously important and highly security",
    "start": "4021200",
    "end": "4027559"
  },
  {
    "text": "sensitive things to be doing and what we have there is we have our own system of",
    "start": "4027559",
    "end": "4032690"
  },
  {
    "text": "what we call quorum commands so what this means is that no individual member",
    "start": "4032690",
    "end": "4038270"
  },
  {
    "text": "of the kms service team is able to perform this action on their own if you're familiar with the AWS cig v4 API",
    "start": "4038270",
    "end": "4048410"
  },
  {
    "text": "call standard where you have your API call a few other parameters including",
    "start": "4048410",
    "end": "4055670"
  },
  {
    "text": "your AWS access key and then you take a derived HVAC over that using your using",
    "start": "4055670",
    "end": "4063440"
  },
  {
    "text": "your AWS secret access key effectively what a quorum command does is much the",
    "start": "4063440",
    "end": "4069920"
  },
  {
    "text": "same thing but wrapped again in another layer of access key and secret access",
    "start": "4069920",
    "end": "4076099"
  },
  {
    "text": "key HVAC so the multiple people need to sign the API call in order for it to",
    "start": "4076099",
    "end": "4082430"
  },
  {
    "text": "succeed there are some calls that require two people there are some that",
    "start": "4082430",
    "end": "4087440"
  },
  {
    "text": "require three people so this means that highly sensitive operations always",
    "start": "4087440",
    "end": "4092930"
  },
  {
    "text": "require multiple eyes on the operation being performed so again in terms of",
    "start": "4092930",
    "end": "4100750"
  },
  {
    "text": "service team access to kms there is no API to extract keys in in clear text",
    "start": "4100750",
    "end": "4109460"
  },
  {
    "text": "from kms customer master keys once they're in KMS on coming out in",
    "start": "4109460",
    "end": "4115999"
  },
  {
    "text": "clear-text and actually if you if you're familiar with HSMs which i'll be getting",
    "start": "4115999",
    "end": "4121099"
  },
  {
    "text": "on to shortly the way in which you manage access to a key and work with a",
    "start": "4121099",
    "end": "4127579"
  },
  {
    "text": "key in KMS it looks very much like how you'd work with an HSM but with the arm",
    "start": "4127579",
    "end": "4133039"
  },
  {
    "text": "of the key so the AWS resource identifier being very much like a pkcs",
    "start": "4133039",
    "end": "4138829"
  },
  {
    "text": "11 slot number the HSM s actually boot off of read-only media so the software",
    "start": "4138829",
    "end": "4148278"
  },
  {
    "text": "update process requires a bunch of Hoops to be gone through in order to replace",
    "start": "4148279",
    "end": "4153829"
  },
  {
    "text": "the media and when the media actually is replaced that requires a reboot of the",
    "start": "4153829",
    "end": "4159439"
  },
  {
    "text": "HSM which of course wipes all the keys in RAM from it it's also very important",
    "start": "4159439",
    "end": "4165588"
  },
  {
    "text": "to note that all kms API calls turn up in cloud trail even those that we",
    "start": "4165589",
    "end": "4171679"
  },
  {
    "text": "actually make on your behalf which in just a moment when it comes to",
    "start": "4171679",
    "end": "4178488"
  },
  {
    "text": "handling access to your keys keys have policies associated with them you can",
    "start": "4178489",
    "end": "4184519"
  },
  {
    "text": "have I am policies normally used in combination with those but certainly if",
    "start": "4184519",
    "end": "4190609"
  },
  {
    "text": "you're assigning key if you're assigning permissions to software so either",
    "start": "4190609",
    "end": "4197389"
  },
  {
    "text": "software that you're running on your ec2 instances using I am roles on the instances or I am or or using software",
    "start": "4197389",
    "end": "4207619"
  },
  {
    "text": "in containers or lambda functions key grants are a thing that we very much",
    "start": "4207619",
    "end": "4212929"
  },
  {
    "text": "encourage you to look at grants are a lightweight policy mechanism that are",
    "start": "4212929",
    "end": "4219079"
  },
  {
    "text": "that it's easy to set a grantor and revoke a grant programmatically rather",
    "start": "4219079",
    "end": "4224360"
  },
  {
    "text": "than have to go dealing with I am policy so if you if you're provisioning and",
    "start": "4224360",
    "end": "4229670"
  },
  {
    "text": "de-provisioning things in a highly dynamic environment or you're actually",
    "start": "4229670",
    "end": "4235820"
  },
  {
    "text": "using privilege bracketing where you only want to grant permission to use a key for as long as use of the key is",
    "start": "4235820",
    "end": "4241369"
  },
  {
    "text": "needed then key grants are definitely the thing to look at and the developer guide",
    "start": "4241369",
    "end": "4246960"
  },
  {
    "text": "we'll give you a bunch of information on that so if we take a look at an example piece of policy here we have just as",
    "start": "4246960",
    "end": "4255210"
  },
  {
    "text": "this example we have the ability to both encrypt and decrypt using this policy",
    "start": "4255210",
    "end": "4261000"
  },
  {
    "text": "you don't have to have both if you don't want to you can and it's quite common to",
    "start": "4261000",
    "end": "4266520"
  },
  {
    "text": "do so when for example setting up writing of logs to log buckets you can",
    "start": "4266520",
    "end": "4272940"
  },
  {
    "text": "set things up so that your entity can encrypt only rather than decrypt so again this acts as some a further layer",
    "start": "4272940",
    "end": "4280230"
  },
  {
    "text": "of control over over the data that's being written as well as the access",
    "start": "4280230",
    "end": "4286950"
  },
  {
    "text": "policy on the s3 bucket and the objects within it and you can also see here that we have permission to use these two keys",
    "start": "4286950",
    "end": "4293880"
  },
  {
    "text": "which are represented by these two arms you can also particularly when human",
    "start": "4293880",
    "end": "4301170"
  },
  {
    "text": "access is involved have an ion policy that again gives you specific I am",
    "start": "4301170",
    "end": "4308969"
  },
  {
    "text": "specific fine-grain I am actions against kms and you can also put the usual I am",
    "start": "4308969",
    "end": "4317670"
  },
  {
    "text": "conditions on your policy so for example here we have requirement to authenticate",
    "start": "4317670",
    "end": "4322860"
  },
  {
    "text": "with a month with a time-based one-time password multi-factor authentication token keys also have a thing we call",
    "start": "4322860",
    "end": "4332190"
  },
  {
    "text": "encryption context it's an optional thing we do encourage you to use it it",
    "start": "4332190",
    "end": "4337680"
  },
  {
    "text": "is a little bit misunderstood there's a popular misconception about encryption",
    "start": "4337680",
    "end": "4343230"
  },
  {
    "text": "context that it's actually assault on the key and it isn't the encryption",
    "start": "4343230",
    "end": "4348690"
  },
  {
    "text": "context is not a secret it's essentially another another bit of check and balance",
    "start": "4348690",
    "end": "4354930"
  },
  {
    "text": "that you can apply to ensure that you're using the right key for the right thing",
    "start": "4354930",
    "end": "4360050"
  },
  {
    "text": "I mean the key for an arm is not that human readable a thing in terms of being",
    "start": "4360050",
    "end": "4367739"
  },
  {
    "text": "able to discern by looking at the arm what what the purpose of the key is so",
    "start": "4367739",
    "end": "4372930"
  },
  {
    "text": "you can use an encryption context as a further check and balance to ensure that you're actually using the right key for",
    "start": "4372930",
    "end": "4379260"
  },
  {
    "text": "the right purpose if you have and we recommend you do have different keys for for example writing",
    "start": "4379260",
    "end": "4387510"
  },
  {
    "text": "data to your log bucket in your logging account versus mounting a EBS volume",
    "start": "4387510",
    "end": "4395300"
  },
  {
    "text": "handling sensitive data within an application for example you want to be",
    "start": "4395300",
    "end": "4400380"
  },
  {
    "text": "using different keys for that and you can ensure when you pass an encryption context string to use your key that",
    "start": "4400380",
    "end": "4408989"
  },
  {
    "text": "you're not going to be using the wrong key because if you reference the wrong key but pass it but pass the right",
    "start": "4408989",
    "end": "4415710"
  },
  {
    "text": "encryption context then your your and your encryption operation doesn't happen",
    "start": "4415710",
    "end": "4421080"
  },
  {
    "text": "and similarly if you pass the right either the right key identifier but the",
    "start": "4421080",
    "end": "4427469"
  },
  {
    "text": "wrong context again you're failing safe now in terms of what actually gets",
    "start": "4427469",
    "end": "4434969"
  },
  {
    "text": "logged in cloud trail this actually is the anatomy of a cloud trail record so",
    "start": "4434969",
    "end": "4441719"
  },
  {
    "text": "you can see which action was being called when it was being called which",
    "start": "4441719",
    "end": "4447869"
  },
  {
    "text": "key was being used what resource is associated with the operation okay so um",
    "start": "4447869",
    "end": "4457050"
  },
  {
    "text": "you can see also the encryption context so as I said it's not a secret it exists",
    "start": "4457050",
    "end": "4462179"
  },
  {
    "text": "as clear text it goes in the log you can see the IP address from which the call was made and you can also see the AWS",
    "start": "4462179",
    "end": "4469679"
  },
  {
    "text": "user this is an interesting point here in that when you're that there are some",
    "start": "4469679",
    "end": "4476909"
  },
  {
    "text": "kms operations that we actually perform on your behalf so as we saw earlier if",
    "start": "4476909",
    "end": "4482820"
  },
  {
    "text": "you're doing something like mounting an EBS volume from an ec2 instance if that",
    "start": "4482820",
    "end": "4489060"
  },
  {
    "text": "volume is encrypted there needs to be a kms decrypt operation performed that's",
    "start": "4489060",
    "end": "4494250"
  },
  {
    "text": "something that we do as part of the mount operation you will still get a cloud trail record but you will see that",
    "start": "4494250",
    "end": "4501690"
  },
  {
    "text": "the user in that record is marked as AWS internal",
    "start": "4501690",
    "end": "4507290"
  },
  {
    "text": "okay right so hopefully that makes sense for rum km/s if there's more that you'd",
    "start": "4511090",
    "end": "4518920"
  },
  {
    "text": "like to know about it then please ask us please post some questions on it in the webinar chat meantime I'll go on to",
    "start": "4518920",
    "end": "4526600"
  },
  {
    "text": "cloud hsm so we've already got KMS why",
    "start": "4526600",
    "end": "4532720"
  },
  {
    "text": "would you need an HSM well there are certain circumstances and particularly regulatory requirements where standalone",
    "start": "4532720",
    "end": "4540400"
  },
  {
    "text": "single tenant hardware security modules are mandated it's fair to say though",
    "start": "4540400",
    "end": "4546580"
  },
  {
    "text": "that kms is by far the more commonly used service there's trillions of",
    "start": "4546580",
    "end": "4552880"
  },
  {
    "text": "operations performed annually millions of accounts having kms Keys Cloud HSM is",
    "start": "4552880",
    "end": "4561010"
  },
  {
    "text": "a rather less used service because in practice when you start looking at HSM s",
    "start": "4561010",
    "end": "4568540"
  },
  {
    "text": "I normally only see them in high threat lab elements of public sector workloads",
    "start": "4568540",
    "end": "4574960"
  },
  {
    "text": "and also in financial services particularly when doing things like integrating with payment gateway",
    "start": "4574960",
    "end": "4582370"
  },
  {
    "text": "services so cloud HSM is a hardware",
    "start": "4582370",
    "end": "4588820"
  },
  {
    "text": "security module funnily enough we do a bunch of the management on it so that",
    "start": "4588820",
    "end": "4594940"
  },
  {
    "text": "you don't have to and if you've ever actually had to manage a hardware",
    "start": "4594940",
    "end": "4601390"
  },
  {
    "text": "security module or a fleet of them yourself you'll realize why this is a good thing",
    "start": "4601390",
    "end": "4606540"
  },
  {
    "text": "managing hardware security modules is not for the faint of heart and it's fair to say they are not the",
    "start": "4606540",
    "end": "4614590"
  },
  {
    "text": "easiest things in the world to manage especially given the value of the data",
    "start": "4614590",
    "end": "4619960"
  },
  {
    "text": "they're actually holding the way in which you provision Cloud HSM is as part",
    "start": "4619960",
    "end": "4625840"
  },
  {
    "text": "of a cluster you always want to have no single point of failure in a hardware security module environment so you can",
    "start": "4625840",
    "end": "4632620"
  },
  {
    "text": "actually divide your HSMs across availability zones in a region cloud HSM",
    "start": "4632620",
    "end": "4639280"
  },
  {
    "text": "just like KMS is a per region service and they appear as a network resort",
    "start": "4639280",
    "end": "4644830"
  },
  {
    "text": "in your VP cease load balancing across HSN's and cluster is automatic we",
    "start": "4644830",
    "end": "4652330"
  },
  {
    "text": "actually deal with that for you and what you can actually do when backups are",
    "start": "4652330",
    "end": "4657670"
  },
  {
    "text": "taken of your HSM ms which happens either every 24 hours or every time an",
    "start": "4657670",
    "end": "4663280"
  },
  {
    "text": "HSM is created or deleted you can do across region replication of the backup",
    "start": "4663280",
    "end": "4669730"
  },
  {
    "text": "of your HSM so that if you have requirement to keep copies of your HSM",
    "start": "4669730",
    "end": "4676540"
  },
  {
    "text": "of your HSM manage keys in multiple regions then that's something you can do you can even actually when you've made",
    "start": "4676540",
    "end": "4683920"
  },
  {
    "text": "across region clerk make across region copy you can actually stand up a new HSM",
    "start": "4683920",
    "end": "4688990"
  },
  {
    "text": "cluster in the other region which is which is then a clone of the HSM cluster",
    "start": "4688990",
    "end": "4694840"
  },
  {
    "text": "that's in the origin region again this means that you can bring HSM encrypted",
    "start": "4694840",
    "end": "4701080"
  },
  {
    "text": "data across region and decrypt it in the destination region if you need as and",
    "start": "4701080",
    "end": "4706900"
  },
  {
    "text": "when you need to so people use Cloud HSM",
    "start": "4706900",
    "end": "4713950"
  },
  {
    "text": "typically to offload TLS processing for web servers so you can have your product",
    "start": "4713950",
    "end": "4719830"
  },
  {
    "text": "you can have your private keys stored in an HSM there's various plugins for various service of doing this normally",
    "start": "4719830",
    "end": "4728830"
  },
  {
    "text": "HSMs why not getting used a lot in PKI environments so you can use them in the",
    "start": "4728830",
    "end": "4735640"
  },
  {
    "text": "context of your particularly your route CA we now have private root CA",
    "start": "4735640",
    "end": "4741550"
  },
  {
    "text": "capability in in AWS certificate manager as well and that actually uses HSMs on",
    "start": "4741550",
    "end": "4748600"
  },
  {
    "text": "the backend if you're using transparent data encryption on your oracle databases",
    "start": "4748600",
    "end": "4754450"
  },
  {
    "text": "you can use an HSM to unlock the soft key store that then decrypt your tables",
    "start": "4754450",
    "end": "4760360"
  },
  {
    "text": "and there's code out there that will integrate typically either with pkcs 11",
    "start": "4760360",
    "end": "4767580"
  },
  {
    "text": "which is the industry standard hm environment for dealing with HSM s or",
    "start": "4767580",
    "end": "4776140"
  },
  {
    "text": "indeed cloudy HSM can as a crypto provider to the Java crypto engine as a couple of Microsoft SDK API",
    "start": "4776140",
    "end": "4785530"
  },
  {
    "text": "is it works with as well so CNG and KSP is my understanding if you need to use",
    "start": "4785530",
    "end": "4792489"
  },
  {
    "text": "those for signing or indeed DRM so from",
    "start": "4792489",
    "end": "4798790"
  },
  {
    "text": "the point of view of control with Cloud HSM you actually are the the crypto",
    "start": "4798790",
    "end": "4806200"
  },
  {
    "text": "officer on your HSM so you get to determine what algorithms are used what",
    "start": "4806200",
    "end": "4811660"
  },
  {
    "text": "key lands are used how users are managed on the HSM you have the ability to",
    "start": "4811660",
    "end": "4817540"
  },
  {
    "text": "provision your own users opt way to them per HSN again in the context of where",
    "start": "4817540",
    "end": "4824080"
  },
  {
    "text": "people need to use HSMs if you really it comes down to if you",
    "start": "4824080",
    "end": "4830560"
  },
  {
    "text": "need to have a fix on 40 - 2 level 3 certified environment specifically which",
    "start": "4830560",
    "end": "4836710"
  },
  {
    "text": "as I said I really normally only see in high-threat Club and also in payment",
    "start": "4836710",
    "end": "4841720"
  },
  {
    "text": "gateway but also if you need to do crypto operations using algorithms other",
    "start": "4841720",
    "end": "4848110"
  },
  {
    "text": "than aes-256 which at this point is the only algorithm that kms understands if you",
    "start": "4848110",
    "end": "4855430"
  },
  {
    "text": "need to use other algorithms inside a FIPS environment than Cloud HSM is the",
    "start": "4855430",
    "end": "4860920"
  },
  {
    "text": "service you need to be looking at with with great power comes great",
    "start": "4860920",
    "end": "4867190"
  },
  {
    "text": "responsibility so again you need to be looking at managing your users you need to be",
    "start": "4867190",
    "end": "4874210"
  },
  {
    "text": "looking at integrating your applications but other things we actually do the",
    "start": "4874210",
    "end": "4880390"
  },
  {
    "text": "heavy lifting for you so high availability is taken care of by Cloud HSM clustering provisioning is something",
    "start": "4880390",
    "end": "4888070"
  },
  {
    "text": "that you just do with a couple of calls through the cloud HSM service API we",
    "start": "4888070",
    "end": "4895510"
  },
  {
    "text": "manage maintenance for you Cloud HSM actually logs to cloud watch -",
    "start": "4895510",
    "end": "4902830"
  },
  {
    "text": "cloud watch logs it also sends health check data to cloud watch which we",
    "start": "4902830",
    "end": "4908260"
  },
  {
    "text": "observe so if there's any hardware breakage and an HSM we will replace and",
    "start": "4908260",
    "end": "4914239"
  },
  {
    "text": "reprovision the HS the broken HSM for you so that your cluster is only down in",
    "start": "4914239",
    "end": "4920210"
  },
  {
    "text": "HSM for a modest amount of time so again",
    "start": "4920210",
    "end": "4926060"
  },
  {
    "text": "looking at in a bit more detail we actually do your logging we do your",
    "start": "4926060",
    "end": "4932330"
  },
  {
    "text": "backups we do we do your high availability as mentioned we do your",
    "start": "4932330",
    "end": "4938330"
  },
  {
    "text": "provisioning we manage we we look after HSM healthcare for you and we manage",
    "start": "4938330",
    "end": "4944600"
  },
  {
    "text": "your backups which I'll get onto in just a moment application integration is still something that you need to do",
    "start": "4944600",
    "end": "4951620"
  },
  {
    "text": "using the SDKs the HSM support user management I've mentioned which is",
    "start": "4951620",
    "end": "4958070"
  },
  {
    "text": "something that you can do using the cloud HSM management util that we make",
    "start": "4958070",
    "end": "4963530"
  },
  {
    "text": "available for the purpose and logging as I said that actually goes to watch logs",
    "start": "4963530",
    "end": "4969820"
  },
  {
    "text": "so we also patch the HSM s for you and",
    "start": "4969820",
    "end": "4975520"
  },
  {
    "text": "the way in which they appear to you as as a network resource they they present",
    "start": "4975520",
    "end": "4983300"
  },
  {
    "text": "a network interface inside your V PC and and when you're actually working with",
    "start": "4983300",
    "end": "4990650"
  },
  {
    "text": "the cloud a cloud HSM client you actually establish an encrypted connection between your client and the",
    "start": "4990650",
    "end": "4998659"
  },
  {
    "text": "HSM itself there is a key there is a certificate key exchange at the HSM n so",
    "start": "4998659",
    "end": "5005800"
  },
  {
    "text": "you can pull the certificate for the key associated with the HSM and validate",
    "start": "5005800",
    "end": "5011620"
  },
  {
    "text": "that your ton validate from the certificate which has a which has a",
    "start": "5011620",
    "end": "5016989"
  },
  {
    "text": "global root of global anchor of trust that you're talking to a proper HSM so",
    "start": "5016989",
    "end": "5025480"
  },
  {
    "text": "looking at the cluster architecture the way in which you grant an instance or container or a lambda function the",
    "start": "5025480",
    "end": "5034270"
  },
  {
    "text": "ability to deployed in a V PC to connect to an HSM is by assigning the security",
    "start": "5034270",
    "end": "5042460"
  },
  {
    "text": "group that is given to you when you prove your HSM cluster to that network",
    "start": "5042460",
    "end": "5048899"
  },
  {
    "text": "interface you need to obviously install",
    "start": "5048899",
    "end": "5053969"
  },
  {
    "text": "client software on your on your client in order to talk the HSM but that is",
    "start": "5053969",
    "end": "5061139"
  },
  {
    "text": "easily done and we make the software available for you",
    "start": "5061139",
    "end": "5066209"
  },
  {
    "text": "you can have up to ah right yes up to a",
    "start": "5066209",
    "end": "5074519"
  },
  {
    "text": "thousand and twenty for use as I was I was remembering the wrong line here you can actually create and manage up to a",
    "start": "5074519",
    "end": "5079739"
  },
  {
    "text": "thousand twenty four users on your HSM s each of those can create and manage keys",
    "start": "5079739",
    "end": "5085709"
  },
  {
    "text": "that aren't visible to other users but you can share a key with up to eight other users we have no access to the",
    "start": "5085709",
    "end": "5093419"
  },
  {
    "text": "keys and again there's fit boundaries in place that actually enable you to assert",
    "start": "5093419",
    "end": "5099209"
  },
  {
    "text": "that to your auditors in terms of separation of duties firmware that we",
    "start": "5099209",
    "end": "5104839"
  },
  {
    "text": "install for maintenance and management is provided by the HSM vendor we look at",
    "start": "5104839",
    "end": "5113280"
  },
  {
    "text": "we essentially do husbandry of the HSM s themselves in terms of creating them zero izing them when you decide to",
    "start": "5113280",
    "end": "5120119"
  },
  {
    "text": "delete them I'll be update the firmware we back them up we restore them we deal with the clustering you deal with",
    "start": "5120119",
    "end": "5126209"
  },
  {
    "text": "everything else backups are an interesting are an interesting thing to",
    "start": "5126209",
    "end": "5132119"
  },
  {
    "text": "look at as well in terms of how we can't get access to them so when you back an",
    "start": "5132119",
    "end": "5137399"
  },
  {
    "text": "HSM up the backups are encrypted using a key that is derived from two separate",
    "start": "5137399",
    "end": "5144510"
  },
  {
    "text": "keys one of which is in the HSM intrinsically the other of which is where is one we supply so there's a key",
    "start": "5144510",
    "end": "5152549"
  },
  {
    "text": "derivation function used to generate that but we don't know what that key is",
    "start": "5152549",
    "end": "5158459"
  },
  {
    "text": "and it gets stored with your backup as I said you can clone this across you can",
    "start": "5158459",
    "end": "5163979"
  },
  {
    "text": "copy this across region you can use it to clone HSM clusters and when you go",
    "start": "5163979",
    "end": "5170519"
  },
  {
    "text": "provisioning a new HS and what it's actually doing silently behind the scenes is restoring from a backup",
    "start": "5170519",
    "end": "5176660"
  },
  {
    "text": "now there is now a mechanism for integrating cloud hsm as the key",
    "start": "5176660",
    "end": "5184380"
  },
  {
    "text": "management back-end 2kms so again this is for customers who actually need to",
    "start": "5184380",
    "end": "5190260"
  },
  {
    "text": "have FIPS 140-2 level 3 certified environments specifically and again this",
    "start": "5190260",
    "end": "5199980"
  },
  {
    "text": "gives you the ability to audit your keys independently of kms should you need to",
    "start": "5199980",
    "end": "5205400"
  },
  {
    "text": "the way in which this is actually set up is reasonably straightforward what you",
    "start": "5205400",
    "end": "5211230"
  },
  {
    "text": "wind up doing is giving kms a set of credentials for your HSM so that it can",
    "start": "5211230",
    "end": "5218910"
  },
  {
    "text": "use the connector in order to go and talk to it an important thing to bear in",
    "start": "5218910",
    "end": "5224100"
  },
  {
    "text": "mind is at this point in time you can't actually use bring your own key with kms",
    "start": "5224100",
    "end": "5230880"
  },
  {
    "text": "once you've got a custom key store back-end set up if that's something that you you think you would need then please",
    "start": "5230880",
    "end": "5238920"
  },
  {
    "text": "talk to us obviously if you're using hardware security modules you have more",
    "start": "5238920",
    "end": "5246870"
  },
  {
    "text": "responsibility so you still need to manage your hardware security modules",
    "start": "5246870",
    "end": "5252560"
  },
  {
    "text": "and you and you still need to look after your hardware security module backups",
    "start": "5252560",
    "end": "5259730"
  },
  {
    "text": "and we have another survey question so",
    "start": "5259970",
    "end": "5265440"
  },
  {
    "text": "of the key management services at Dave described today which of the services",
    "start": "5265440",
    "end": "5270450"
  },
  {
    "text": "are you most likely to use so the AWS key management service the cloud HSM",
    "start": "5270450",
    "end": "5276000"
  },
  {
    "text": "service the custom key store option all of them or none of them",
    "start": "5276000",
    "end": "5281160"
  },
  {
    "text": "please share your thoughts with us while you're doing that one more thing about",
    "start": "5281160",
    "end": "5287370"
  },
  {
    "text": "cloud HSM if you already have an on-premise fleet of HSMs and you need to",
    "start": "5287370",
    "end": "5293670"
  },
  {
    "text": "migrate keys from those into cloud HSM as part of a workload move for example",
    "start": "5293670",
    "end": "5299730"
  },
  {
    "text": "if your on-premise HSM support KMIP then",
    "start": "5299730",
    "end": "5304950"
  },
  {
    "text": "you can actually use KMIP to import your keys into Cloud HSM",
    "start": "5304950",
    "end": "5310280"
  },
  {
    "text": "you need to use a third party piece of software to do that which is available",
    "start": "5310280",
    "end": "5315769"
  },
  {
    "text": "on an ami in the AWS marketplace but if this is something you need to do then",
    "start": "5315769",
    "end": "5321289"
  },
  {
    "text": "please engage our services all right so we have the survey results here",
    "start": "5321289",
    "end": "5328159"
  },
  {
    "text": "looks like 68% said they were going to use kms x11 purse and 11% cloudy HSM and",
    "start": "5328159",
    "end": "5338590"
  },
  {
    "text": "2% the custom key store option and just under 20% all of them very interesting",
    "start": "5338590",
    "end": "5345679"
  },
  {
    "text": "thank you thank you to everyone for sharing those those insights with us yep",
    "start": "5345679",
    "end": "5351050"
  },
  {
    "text": "cloud HSM is a specialized service but if you need it it's there and so thanks",
    "start": "5351050",
    "end": "5357349"
  },
  {
    "text": "very much and back to Tim all right thanks Steve great as usual very",
    "start": "5357349",
    "end": "5362749"
  },
  {
    "text": "informative ok so just one final small section here to go through is we've",
    "start": "5362749",
    "end": "5368210"
  },
  {
    "text": "talked a lot about encryption and key management we've gone through client-side server-side encryption we've",
    "start": "5368210",
    "end": "5374809"
  },
  {
    "text": "talked about kms and cloud HSM and custom key store and a whole bunch of",
    "start": "5374809",
    "end": "5379969"
  },
  {
    "text": "stuff there's a ton of stuff we went through here today you might be wondering at this point well which of these options should I use and so we",
    "start": "5379969",
    "end": "5387679"
  },
  {
    "text": "wanted to provide you with a little bit of insights and guidance and so from my",
    "start": "5387679",
    "end": "5392749"
  },
  {
    "text": "perspective and I've been talking to customers a long time about this stuff some of the customers I meet with and",
    "start": "5392749",
    "end": "5399679"
  },
  {
    "text": "their first contemplating using the cloud they're you know the very first thing they start looking at is",
    "start": "5399679",
    "end": "5405889"
  },
  {
    "text": "client-side encryption they want to do everything client-side they want to keep the keys on-premise they want to be able",
    "start": "5405889",
    "end": "5410960"
  },
  {
    "text": "to mitigate any threat to unauthorized access to data and over time what I've",
    "start": "5410960",
    "end": "5416389"
  },
  {
    "text": "seen is that once they realize you know they go down that path and they realize how much complexity is there the",
    "start": "5416389",
    "end": "5424130"
  },
  {
    "text": "complexity around key management that they're managing on Prem the extra code and all the applications including extra",
    "start": "5424130",
    "end": "5432079"
  },
  {
    "text": "costs because you're moving things in and out of the cloud all the time they'll start that way but then very often what they do is they look at these",
    "start": "5432079",
    "end": "5439039"
  },
  {
    "text": "other options around key management that they've mentioned and they see that",
    "start": "5439039",
    "end": "5444050"
  },
  {
    "text": "these also mitigate the threats that they're actually worried about so once they dive deeper especially in the kms",
    "start": "5444050",
    "end": "5449990"
  },
  {
    "text": "they realize that that integration with those you know 117 plus services at this point that is super powerful and it",
    "start": "5449990",
    "end": "5457760"
  },
  {
    "text": "gives them many of the same security characteristics that they're looking for",
    "start": "5457760",
    "end": "5463060"
  },
  {
    "text": "and so I encourage you if you if you are considering client-side encryption or if",
    "start": "5463060",
    "end": "5469340"
  },
  {
    "text": "you're considering Cloud HSM do a deep dive into kms because chances are the",
    "start": "5469340",
    "end": "5474530"
  },
  {
    "text": "types of threats that you're worried about can be mitigated using that model and doing a deeper dive into kms and",
    "start": "5474530",
    "end": "5481760"
  },
  {
    "text": "really taking a look at what how its being integrated into these services and how it works is going to save you a lot",
    "start": "5481760",
    "end": "5488360"
  },
  {
    "text": "of time probably a lot of money and it's just really worthwhile taking a look at at kms okay now some of the",
    "start": "5488360",
    "end": "5496640"
  },
  {
    "text": "considerations when you're trying to make up your mind which rote would you go on it for a particular application for instance some of the key questions",
    "start": "5496640",
    "end": "5504130"
  },
  {
    "text": "where the keys generated and stored do you you know is it on hardware that you",
    "start": "5504130",
    "end": "5509300"
  },
  {
    "text": "own is that a requirement or can it be a cloud provider that owns that hardware where are the keys used is it client",
    "start": "5509300",
    "end": "5516110"
  },
  {
    "text": "software that you control or is it server software that the cloud provider controls and then who who can use the",
    "start": "5516110",
    "end": "5522290"
  },
  {
    "text": "keys users and applications that have permissions or you know cloud provider",
    "start": "5522290",
    "end": "5527390"
  },
  {
    "text": "applications that you give permissions to and then finally what assurances are",
    "start": "5527390",
    "end": "5532610"
  },
  {
    "text": "there for proper security around keys and so can you get access to audit reports like a soft you type to like a",
    "start": "5532610",
    "end": "5539750"
  },
  {
    "text": "c5 and others so those are some of the considerations if you're deciding to use",
    "start": "5539750",
    "end": "5546830"
  },
  {
    "text": "for instance the key management service you'd consider kms if you need to secure",
    "start": "5546830",
    "end": "5552800"
  },
  {
    "text": "your encryption keys in the service backed by Phipps validated HSMs as Dave described but you don't necessarily need",
    "start": "5552800",
    "end": "5559580"
  },
  {
    "text": "to manage those HSMs yourself because that will save you a lot of administration if you're looking for",
    "start": "5559580",
    "end": "5566510"
  },
  {
    "text": "FIPS 140 - to level 2 overall validated HSMs you know KMS is going to be able to",
    "start": "5566510",
    "end": "5572510"
  },
  {
    "text": "meet that requirement and then if a EES 256 symmetric in",
    "start": "5572510",
    "end": "5578030"
  },
  {
    "text": "scription mitri requirements then it seems like KMS would be a good choice for you",
    "start": "5578030",
    "end": "5583100"
  },
  {
    "text": "cloudy HSM on the other hand is Dave mentioned it actually solves some",
    "start": "5583100",
    "end": "5588440"
  },
  {
    "text": "problems were some requirements for instance if you need keys stored in a",
    "start": "5588440",
    "end": "5593660"
  },
  {
    "text": "dedicated third-party validated hardware security module under your exclusive control so like single tenant you need",
    "start": "5593660",
    "end": "5601550"
  },
  {
    "text": "FIPS 140-2 level 3 validated HSM as opposed to the level 2 that we saw with",
    "start": "5601550",
    "end": "5607040"
  },
  {
    "text": "KMS if you need asymmetric encryption cloudy HSM does this but kms doesn't and",
    "start": "5607040",
    "end": "5613370"
  },
  {
    "text": "then as Dave mentioned some of these API is like pkcs 11 and some of these other",
    "start": "5613370",
    "end": "5620360"
  },
  {
    "text": "interfaces then probably cloudy HSM is going to be the service that you want to",
    "start": "5620360",
    "end": "5626300"
  },
  {
    "text": "take a closer look at and then finally with the custom key stores if you require keys protected again in a single",
    "start": "5626300",
    "end": "5633560"
  },
  {
    "text": "tenant HSM or an HSM that you have direct control over and you have an",
    "start": "5633560",
    "end": "5638960"
  },
  {
    "text": "explicit requirement for each SMS again validated FIPS 140-2 level 3 overall and",
    "start": "5638960",
    "end": "5646100"
  },
  {
    "text": "then you have keys that are required to be audible independent of kms then this",
    "start": "5646100",
    "end": "5651770"
  },
  {
    "text": "custom key store option is something that you want to take a look at okay alright and so with that I'll just share",
    "start": "5651770",
    "end": "5658340"
  },
  {
    "text": "these resources there's tons and tons of good videos from past reinvents and reinforced conferences some of the folks",
    "start": "5658340",
    "end": "5666260"
  },
  {
    "text": "in the videos and and some of the white papers that you see here really are good highly recommended the one that Dave",
    "start": "5666260",
    "end": "5673670"
  },
  {
    "text": "mentioned earlier AWS key management service cryptographic details that is like a 40-plus page deep dive into all",
    "start": "5673670",
    "end": "5680330"
  },
  {
    "text": "things kms that you can get into it and see the discussion around the internals",
    "start": "5680330",
    "end": "5686720"
  },
  {
    "text": "and how the how the keys are being managed and so on so that once again highly recommended yes it goes into the",
    "start": "5686720",
    "end": "5692390"
  },
  {
    "text": "maths of how envelope encryption works even right yeah that's a really good paper and it's and it's it's updated",
    "start": "5692390",
    "end": "5699260"
  },
  {
    "text": "over time as well so other than that you can see a ton of stuff here I included a",
    "start": "5699260",
    "end": "5704920"
  },
  {
    "text": "github resource here on encryption kms workshops in AWS that some folks here at",
    "start": "5704920",
    "end": "5710510"
  },
  {
    "text": "AWS devel so if you're looking to actually get your hands on bits and and and do some",
    "start": "5710510",
    "end": "5716300"
  },
  {
    "text": "hands-on keyboard stuff that's worth taking a look at as well but thank you very much for joining us today really",
    "start": "5716300",
    "end": "5722540"
  },
  {
    "text": "appreciate it and happy encrypting",
    "start": "5722540",
    "end": "5727750"
  }
]