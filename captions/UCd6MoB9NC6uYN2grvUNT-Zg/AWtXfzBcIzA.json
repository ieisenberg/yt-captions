[
  {
    "text": "hi everyone thanks very much for coming and for giving up the seat next to you",
    "start": "1970",
    "end": "7069"
  },
  {
    "text": "I'm Abbey from AWS I'm here with Prakash from next door I'm gonna talk really",
    "start": "7069",
    "end": "12450"
  },
  {
    "text": "briefly at the beginning and then I'm gonna turn over to the part that I actually want to listen to which is Prakash and not me because they do some",
    "start": "12450",
    "end": "18810"
  },
  {
    "text": "really cool stuff so we will truck on really quickly through the intro part of this and then we will turn it over to",
    "start": "18810",
    "end": "24900"
  },
  {
    "text": "Prakash so for those of you that aren't sure what session that you're in we're",
    "start": "24900",
    "end": "30480"
  },
  {
    "text": "working on building effective docker images so effective to me means as small",
    "start": "30480",
    "end": "36989"
  },
  {
    "text": "as possible while still being easy to work with so and I always have someone that comes up to app that to me",
    "start": "36989",
    "end": "42450"
  },
  {
    "text": "afterwards it's like well I can do this in six megabytes and you can but think",
    "start": "42450",
    "end": "48180"
  },
  {
    "text": "about how much time you spent making your six megabyte handcrafted artisan image that you could have spent maybe",
    "start": "48180",
    "end": "53940"
  },
  {
    "text": "doing something else so effective what's the happy median between as small and as",
    "start": "53940",
    "end": "60539"
  },
  {
    "text": "minimal as possible but also that you could work with effectively so that it has maybe some of the packages that you",
    "start": "60539",
    "end": "66240"
  },
  {
    "text": "need you were able to build on top of it so you can work with it but also you can deploy it faster so we're gonna go back",
    "start": "66240",
    "end": "72750"
  },
  {
    "text": "to basics really quickly before we jump on to the cool stuff so what our container layer so we're in docker 101",
    "start": "72750",
    "end": "78570"
  },
  {
    "text": "right now so there a stack so you start you have your read-only base layers and that's what you start with so that's the",
    "start": "78570",
    "end": "85439"
  },
  {
    "text": "base image that you pull so for a lot of people that's Ubuntu or that CentOS or that's Alpine that's the the base only",
    "start": "85439",
    "end": "92549"
  },
  {
    "text": "images that you start with so read-only you can't do anything to them you can't really control their size unless you do",
    "start": "92549",
    "end": "98670"
  },
  {
    "text": "something else which we'll talk about later and on top of that you get your really thin read/write layer so anything",
    "start": "98670",
    "end": "104880"
  },
  {
    "text": "you do drawing the container is added here so any data that you pull anything",
    "start": "104880",
    "end": "110100"
  },
  {
    "text": "that you do any packages that you install those all go to that really thin read/write layer on top of your",
    "start": "110100",
    "end": "115530"
  },
  {
    "text": "read-only base layer so why do you care about how many layers you have in the first place so small caveat that docker",
    "start": "115530",
    "end": "122899"
  },
  {
    "text": "1.1 has made this a little bit better but so different operations in docker",
    "start": "122899",
    "end": "129119"
  },
  {
    "text": "add layers to your to your final image size and how many layers you have determines how large your container is I mean also",
    "start": "129119",
    "end": "135450"
  },
  {
    "text": "what's in those layers but the more layers you have in general the larger that your image is going to be the",
    "start": "135450",
    "end": "140939"
  },
  {
    "text": "larger than your images the longer it takes to push and pull from a registry which is your deployment right so if it",
    "start": "140939",
    "end": "146939"
  },
  {
    "text": "takes me if I have a one gigabyte image if I maybe push that once a week so say",
    "start": "146939",
    "end": "153030"
  },
  {
    "text": "that I had a monolith still if I push that once I'm like okay well it's kind",
    "start": "153030",
    "end": "158099"
  },
  {
    "text": "of slow but if I have micro-services if I have several services and they all have a over one gig image think about",
    "start": "158099",
    "end": "165299"
  },
  {
    "text": "how long my deploys are so think about how long it's now taking me to do my continuous integration my continuous",
    "start": "165299",
    "end": "171209"
  },
  {
    "text": "deployment so it takes longer to deploy it takes up more space in my registry takes up more disk space but also it",
    "start": "171209",
    "end": "178019"
  },
  {
    "text": "means a smaller attack surface so the smaller than my images the less packages that I have in there that people can",
    "start": "178019",
    "end": "183180"
  },
  {
    "text": "exploit so not only is it about size but it's about safety so how can I reduce",
    "start": "183180",
    "end": "189180"
  },
  {
    "text": "the number of layers that I have so a couple of really basic things that you can use sharing is caring so it's just",
    "start": "189180",
    "end": "195689"
  },
  {
    "text": "like preschool class right I share my blocks with everybody else you can use shared based images wherever possible so",
    "start": "195689",
    "end": "202169"
  },
  {
    "text": "if I have several services if they're all no js' ones maybe I make my own custom based image and I can share that",
    "start": "202169",
    "end": "208709"
  },
  {
    "text": "so all their common packages I'm only really pulling once so for every new instance in my cluster I pull that image",
    "start": "208709",
    "end": "215250"
  },
  {
    "text": "once and then all of the the containers built on top of it can share that I can also limit the data that's written to my",
    "start": "215250",
    "end": "222659"
  },
  {
    "text": "container layer so we'll look at some examples later but if I pull a package",
    "start": "222659",
    "end": "227819"
  },
  {
    "text": "if I use that package and then remove it in the same layer I've not committed anything to the final size of my",
    "start": "227819",
    "end": "234359"
  },
  {
    "text": "container the same goes if you're downloading a dataset so a lot of people in development environments they'll",
    "start": "234359",
    "end": "239639"
  },
  {
    "text": "download build download a dataset to populate something with right if you download that file populate your data",
    "start": "239639",
    "end": "246870"
  },
  {
    "text": "then maybe remove the zipped version that you downloaded so if I download like a big tar file unzip it use the",
    "start": "246870",
    "end": "253259"
  },
  {
    "text": "contents and then remove that zip version because it's just committing final size to my image I can chain my",
    "start": "253259",
    "end": "259500"
  },
  {
    "text": "run statements so we don't look into these as closely here because we're going to talk to Prakash instead",
    "start": "259500",
    "end": "264630"
  },
  {
    "text": "but you can chain these together every time you call run you're adding a new layer so if I add all of my run commands",
    "start": "264630",
    "end": "272640"
  },
  {
    "text": "together so for example some of might use apt-get install some packages I can",
    "start": "272640",
    "end": "278580"
  },
  {
    "text": "chain all those together so I can maybe do my updates I can do my install and then I can do my cleanup and I can do that all in one",
    "start": "278580",
    "end": "284550"
  },
  {
    "text": "statement so that it both uses it installs the packages cleans up the mess after those packages but I've all made",
    "start": "284550",
    "end": "291300"
  },
  {
    "text": "that in one layer and finally I can prevent cache misses a build for as long as possible so Joker has some really",
    "start": "291300",
    "end": "297000"
  },
  {
    "text": "interesting caching behavior so I can use that cache as long as possible so that I can I can make my image use that",
    "start": "297000",
    "end": "304050"
  },
  {
    "text": "very aggressively so a little bit more of the the basics so if you're here",
    "start": "304050",
    "end": "311460"
  },
  {
    "text": "it's container day so we'll get started with this really early so a docker file is a series of instructions for building",
    "start": "311460",
    "end": "317790"
  },
  {
    "text": "the image so it's in the in it's in the format instruction and then command so",
    "start": "317790",
    "end": "322890"
  },
  {
    "text": "from X run X add this file so cash rules",
    "start": "322890",
    "end": "329730"
  },
  {
    "text": "everything around me right so we talked about being able to use the the docker cache really aggressively so how does",
    "start": "329730",
    "end": "336030"
  },
  {
    "text": "the docker cache work there's actually probably more than I can cover in just one session on docker cache but in",
    "start": "336030",
    "end": "342150"
  },
  {
    "text": "general I want to use it as long as possible so that means that the order of my statements really matters so where I",
    "start": "342150",
    "end": "348810"
  },
  {
    "text": "run things if I if I have something that never changes once I've broken the cache it's over so it's like a fun game right",
    "start": "348810",
    "end": "355530"
  },
  {
    "text": "so I use the cache as long as possible because once I've broken it I build everything again on top of that I'm not",
    "start": "355530",
    "end": "361230"
  },
  {
    "text": "reusing any of my layers once I've broken the cache so in general I can push it off as long as possible there",
    "start": "361230",
    "end": "367230"
  },
  {
    "text": "are some exceptions to this so for example pulling from a git registry the",
    "start": "367230",
    "end": "373980"
  },
  {
    "text": "run command is never going to change but I actually do want to break the cache every time because although the instruction is exactly the same I still",
    "start": "373980",
    "end": "380670"
  },
  {
    "text": "need to pull that every single time so there are there are exceptions to this rule like there are any rules but in",
    "start": "380670",
    "end": "387540"
  },
  {
    "text": "general let's use the cache as long as possible so reuse as many of those layers and then only build exactly",
    "start": "387540",
    "end": "393060"
  },
  {
    "text": "what's changed so let's look at some examples and how we can do this so we'll start with the docker",
    "start": "393060",
    "end": "398220"
  },
  {
    "text": "file and this is fine by the way this actually would totally build I tried it myself this is fine it's not great but",
    "start": "398220",
    "end": "406170"
  },
  {
    "text": "it's fine so I'm pulling an operating system that I was comfortable with when I wrote this I put my email on it this is my real",
    "start": "406170",
    "end": "413910"
  },
  {
    "text": "email by the way so if you have any questions about this you're welcome to use it I installed some packages I did",
    "start": "413910",
    "end": "419250"
  },
  {
    "text": "some updates I copied some code over I changed my directory I installed some more requirements this is a Python app",
    "start": "419250",
    "end": "425250"
  },
  {
    "text": "because this is Amazon I ran my app so this is fine there's nothing wrong with",
    "start": "425250",
    "end": "430500"
  },
  {
    "text": "it except that it is kind of slow in it took up a lot of my space so how can I",
    "start": "430500",
    "end": "435810"
  },
  {
    "text": "make this better a couple things that we can look at and the first step really is starting from the beginning so choosing my right base",
    "start": "435810",
    "end": "441330"
  },
  {
    "text": "so I used Ubuntu I used latest I didn't have to do that though so there are bases that are more specific for the",
    "start": "441330",
    "end": "448620"
  },
  {
    "text": "language that I'm using right so in this case I'm using so alpine is a more minimal way a more minimal base image",
    "start": "448620",
    "end": "453960"
  },
  {
    "text": "and I'm using one that's specifically for Python so it has some packages that I need and you can see that just by",
    "start": "453960",
    "end": "459720"
  },
  {
    "text": "choosing a different base I've cut some space off so I went from 450 ish Meg's to 86's Meg's so a pretty significant",
    "start": "459720",
    "end": "467820"
  },
  {
    "text": "jump just by choosing a different base image and what would be different was also slightly better is that I could",
    "start": "467820",
    "end": "474510"
  },
  {
    "text": "have chosen a different distro so maybe I could have gone from a bun to to the Debian image which was just a little bit",
    "start": "474510",
    "end": "481260"
  },
  {
    "text": "smaller so I can get big jumps and or medium sized jumps just by changing the image that my container is built off of",
    "start": "481260",
    "end": "487860"
  },
  {
    "text": "which isn't really changing anything else I'm not changing my actual process and maybe changing my package manager",
    "start": "487860",
    "end": "493830"
  },
  {
    "text": "and my base so when do I want a full base OS though so we just used an alpine example and I guess I just did a bad one",
    "start": "493830",
    "end": "502590"
  },
  {
    "text": "to example so if you actually really like Ubuntu and I like a full operating system so why would I why would I need",
    "start": "502590",
    "end": "508830"
  },
  {
    "text": "this so when to talk on minimal images why do I care if I ever have a full operating system security so there's",
    "start": "508830",
    "end": "516630"
  },
  {
    "text": "also some packages that maybe I need that maybe I don't have on a more minimal one same thing is compliance so",
    "start": "516630",
    "end": "522419"
  },
  {
    "text": "not everyone works at a startup some of us work at very large enterprises and sometimes you can't use",
    "start": "522419",
    "end": "528089"
  },
  {
    "text": "the really cool minimal image that your friend told you about on Hacker News sometimes that doesn't work",
    "start": "528089",
    "end": "533680"
  },
  {
    "text": "if you work for a big enterprise and then the last one is ease of development so we'll look at well we'll look at some",
    "start": "533680",
    "end": "540310"
  },
  {
    "text": "of the trade-offs but if I'm using a more minimal one maybe it doesn't have a package manager maybe it doesn't have so",
    "start": "540310",
    "end": "545860"
  },
  {
    "text": "ruby is a good example maybe it doesn't have all the gems that I need because so I'm basically inside not only the",
    "start": "545860",
    "end": "552220"
  },
  {
    "text": "package that I need but I'm then sorting through a bunch of errors on how can I get how can I get all the supporting",
    "start": "552220",
    "end": "558880"
  },
  {
    "text": "gems all the supporting packages that I need from my application so look at our original image this is still fine how",
    "start": "558880",
    "end": "567130"
  },
  {
    "text": "could I have made this better right so I'm installing I'm doing my base I'm installing some package that's on top of that I can make some simple changes",
    "start": "567130",
    "end": "574000"
  },
  {
    "text": "though so I changed my base I went back to that Python Alpine version and you'll notice that a couple of things",
    "start": "574000",
    "end": "579190"
  },
  {
    "text": "disappeared so my whole my apt-get instructions for installing those",
    "start": "579190",
    "end": "584530"
  },
  {
    "text": "packages those are gone now and the only ones that I kept aren't my pip install so my requirements text file so since",
    "start": "584530",
    "end": "592030"
  },
  {
    "text": "I'm using an image that was designed for the language that I'm using I can cut out some of the setup steps that I",
    "start": "592030",
    "end": "597070"
  },
  {
    "text": "needed to run my image so fewer cache invalidations means smaller images so I",
    "start": "597070",
    "end": "602500"
  },
  {
    "text": "can change the order that I'm calling these statements so that I can use the cache a little bit more effectively so",
    "start": "602500",
    "end": "607810"
  },
  {
    "text": "I'm copying over my requirements that text file so I'm only breaking the cache of the contents of that file has changed",
    "start": "607810",
    "end": "613630"
  },
  {
    "text": "so if it hasn't changed I can just keep on going reusing my same cache layers so",
    "start": "613630",
    "end": "620230"
  },
  {
    "text": "let's recap so layers file system differences they add up really quickly and then you have big consequences and by big consequences",
    "start": "620230",
    "end": "626980"
  },
  {
    "text": "I mean big build times it's a little bit slower takes longer forever than to go out and in the wonderful world of",
    "start": "626980",
    "end": "632350"
  },
  {
    "text": "continuous deployment I'd like to keep things fast so I'm gonna turn things over now so we're gonna go to Prakash",
    "start": "632350",
    "end": "638050"
  },
  {
    "text": "from next door if you have questions we'll take questions at the end and then we'll",
    "start": "638050",
    "end": "643180"
  },
  {
    "text": "probably end a couple minutes early because people have to make it all the way to their next session so if you have",
    "start": "643180",
    "end": "649150"
  },
  {
    "text": "questions we'll take questions at the end of Prakash section but we'll also stand up here for a couple minutes afterwards that we don't prevent people",
    "start": "649150",
    "end": "655450"
  },
  {
    "text": "from from making it to their to their next one if they need some time so that further ado here's Prakash",
    "start": "655450",
    "end": "660550"
  },
  {
    "text": "all right Thank You Abby I'm Prakash the chief architect and co-founder of next",
    "start": "660550",
    "end": "666550"
  },
  {
    "text": "door quick show hands how many people actually know what next-door is okay that's good but not great so maybe let's",
    "start": "666550",
    "end": "674170"
  },
  {
    "text": "start by talking about what we do next door is a social network for the neighborhood and so when you think back",
    "start": "674170",
    "end": "680860"
  },
  {
    "text": "to the time before the contemporary social networks like Facebook Twitter the original social network was the",
    "start": "680860",
    "end": "688209"
  },
  {
    "text": "neighborhood like in real life people would go talk to their neighbors imagine that right and so what we're trying to do is bring back a sense of community to",
    "start": "688209",
    "end": "694779"
  },
  {
    "text": "the neighborhood through the use of a modern mechanism like this app and it's in use now by over 80% of the",
    "start": "694779",
    "end": "701680"
  },
  {
    "text": "neighborhoods in the United States this includes the use cases like finding lost pets selling used couch reporting crime",
    "start": "701680",
    "end": "708760"
  },
  {
    "text": "and safety issues so if you haven't checked it out check it out we have apps and we have a website so that's next",
    "start": "708760",
    "end": "713920"
  },
  {
    "text": "door now we actually started next door like a lot of probably different",
    "start": "713920",
    "end": "720579"
  },
  {
    "text": "entrepreneurs started their companies with a giant monolithic application and the giant monolith was a Django based",
    "start": "720579",
    "end": "726730"
  },
  {
    "text": "Python application it's got a back-end that's a Postgres sequel database we didn't even have a cache the whole thing",
    "start": "726730",
    "end": "733029"
  },
  {
    "text": "ran on one machine we would go into that machine and we would get pull and that was basically the build and deploy",
    "start": "733029",
    "end": "738970"
  },
  {
    "text": "process that probably sounds familiar to folks but over time that obviously doesn't scale and so we started to break",
    "start": "738970",
    "end": "746589"
  },
  {
    "text": "up and decomposed the monolith into a series of back-end services that are written in go and sup we chose go",
    "start": "746589",
    "end": "752980"
  },
  {
    "text": "because number one it's a very very compact and terse language kind of felt like that's where the puck was going so",
    "start": "752980",
    "end": "760510"
  },
  {
    "text": "to speak and so we were skating towards where the puck was going and we've been really happy with this we've we've been using go for about four years the really",
    "start": "760510",
    "end": "767860"
  },
  {
    "text": "nice thing about building and go really though is it's not a dynamic environment",
    "start": "767860",
    "end": "772990"
  },
  {
    "text": "it's you you build a static binary and you ship the binary so you kind of get",
    "start": "772990",
    "end": "778029"
  },
  {
    "text": "back into the days of C++ development and those kinds of things where your asset that you're shipping around is",
    "start": "778029",
    "end": "783519"
  },
  {
    "text": "just a single binary so today I think we're going to spend more time talking about how we build and deploy our Python",
    "start": "783519",
    "end": "789820"
  },
  {
    "text": "application which is in a dynamic environment it's got a bunch of dependency and it plays really well into some of",
    "start": "789820",
    "end": "795939"
  },
  {
    "text": "the things that Abby was talking about so again in a dynamic environment you've",
    "start": "795939",
    "end": "801729"
  },
  {
    "text": "got a lot of dependencies starts with your base operating system you've got a bunch of different packages on that base",
    "start": "801729",
    "end": "808389"
  },
  {
    "text": "operating system including things like open SSL for us Lib PQ which allows us",
    "start": "808389",
    "end": "813999"
  },
  {
    "text": "to communicate with Postgres and a bunch of other things the data dog agent other kinds of tools that we use that we kind",
    "start": "813999",
    "end": "820720"
  },
  {
    "text": "of think of as a systems layer then of course we have our Python runtime environment how many folks use Python in",
    "start": "820720",
    "end": "827019"
  },
  {
    "text": "production okay so in Python obviously there's a bunch of different packages",
    "start": "827019",
    "end": "832689"
  },
  {
    "text": "that you want to install to get your app up and running and it's really convenient but with a large app like",
    "start": "832689",
    "end": "838059"
  },
  {
    "text": "ours we end up proliferating quite a few different dependencies we use a lot of different open source software and so in",
    "start": "838059",
    "end": "843850"
  },
  {
    "text": "here are some examples of course there's Django we have a SendGrid client we use boto",
    "start": "843850",
    "end": "849189"
  },
  {
    "text": "so a bunch of these different areas and for us this is probably the biggest amount of bulk in terms of our",
    "start": "849189",
    "end": "855429"
  },
  {
    "text": "application this is where most of the meat is and then of course there's our source code and in our source code that",
    "start": "855429",
    "end": "861789"
  },
  {
    "text": "includes the Python source it includes some of our static assets like images CSS JavaScript and so this is kind of",
    "start": "861789",
    "end": "869559"
  },
  {
    "text": "the composition of the app overall and as you kind of think about it with an",
    "start": "869559",
    "end": "875589"
  },
  {
    "text": "eye towards what's changing and what's introducing friction in terms of",
    "start": "875589",
    "end": "881019"
  },
  {
    "text": "rebuilding these environments we kind of think about it in this way we very very",
    "start": "881019",
    "end": "886209"
  },
  {
    "text": "rarely change our base OS or any of those low-level system dependencies probably do it on the order of quarterly",
    "start": "886209",
    "end": "893499"
  },
  {
    "text": "and we probably only change the base OS version itself maybe annually if that in",
    "start": "893499",
    "end": "899559"
  },
  {
    "text": "the middle we have all of those Python dependencies now those change a little bit more frequently either for security",
    "start": "899559",
    "end": "905559"
  },
  {
    "text": "reasons or because we're upgrading to some new version of a library or because",
    "start": "905559",
    "end": "910659"
  },
  {
    "text": "we're introducing a new feature which introduces a new dependency and so there's a little bit more churn in that",
    "start": "910659",
    "end": "915939"
  },
  {
    "text": "part of the system and then of course on the application code we're changing that",
    "start": "915939",
    "end": "921519"
  },
  {
    "text": "all the time literally dozens of times a day and so",
    "start": "921519",
    "end": "926559"
  },
  {
    "text": "this is a framework for us to think about how we want to optimize our build and",
    "start": "926559",
    "end": "932580"
  },
  {
    "text": "deployment process and probably like many of you when we started the company we were on a pretty regular sort of",
    "start": "932580",
    "end": "940440"
  },
  {
    "text": "release cadence we weren't in continuous deployment we would build and deploy packages starting once a week and then",
    "start": "940440",
    "end": "947880"
  },
  {
    "text": "we did that daily and it really was sort of a friction filled process as the",
    "start": "947880",
    "end": "953070"
  },
  {
    "text": "company started to scale because we needed to converge all of our developers on this kind of arduous process of",
    "start": "953070",
    "end": "958770"
  },
  {
    "text": "building and deploying and verifying their changes and so we knew we needed to move quicker we needed to move more",
    "start": "958770",
    "end": "964230"
  },
  {
    "text": "quickly towards something that more strongly resembled continuous deployment and so in the non continuous deployment",
    "start": "964230",
    "end": "972000"
  },
  {
    "text": "world and in the non docker world your building blocks are really easy to",
    "start": "972000",
    "end": "977220"
  },
  {
    "text": "images and ec2 instances and so that icon on the left is I think the official",
    "start": "977220",
    "end": "985500"
  },
  {
    "text": "AMI icon is that right yeah so many icons so many things looks right but",
    "start": "985500",
    "end": "990990"
  },
  {
    "text": "really when you think about optimizing a process in which you're deploying an application to a single ec2 easy to host",
    "start": "990990",
    "end": "998310"
  },
  {
    "text": "and it's kind of single purpose in that way really your building block is the ami that's where you're spending a lot",
    "start": "998310",
    "end": "1004310"
  },
  {
    "text": "of time trying to optimize you probably heard the term baking a.m. is well we used to do that right we used to take",
    "start": "1004310",
    "end": "1010490"
  },
  {
    "text": "all of these different dependencies and try and cook as many of them into the base ami as possible so that at",
    "start": "1010490",
    "end": "1016880"
  },
  {
    "text": "deployment time we were able to boot up our our instances pretty quickly we're in an auto scaling environment it's",
    "start": "1016880",
    "end": "1022700"
  },
  {
    "text": "really important that instances come up when we need them and that we don't need to wait around for 30 minutes for us to install apt packages and Python packages",
    "start": "1022700",
    "end": "1030470"
  },
  {
    "text": "and all that kind of stuff as you move to a world where your containerized and now you've got a fleet",
    "start": "1030470",
    "end": "1036709"
  },
  {
    "text": "of ec2 instances that are housing multiple containers the focus on the ami",
    "start": "1036710",
    "end": "1043370"
  },
  {
    "text": "kind of drifts a little bit you can use a very basic ami to run your easy two",
    "start": "1043370",
    "end": "1049370"
  },
  {
    "text": "hosts and you can move a lot of the package management up into the container and so the container image ends up",
    "start": "1049370",
    "end": "1055580"
  },
  {
    "text": "becoming a little bit more of what Abby described which is these layers",
    "start": "1055580",
    "end": "1061120"
  },
  {
    "text": "top of base OS so let's talk about the world before we move to docker for us it",
    "start": "1061120",
    "end": "1068170"
  },
  {
    "text": "was really painful the builds took like 20 minutes 20 minutes to build a Python application is no good",
    "start": "1068170",
    "end": "1073720"
  },
  {
    "text": "right and these were some of the steps first off you've got to build in a hermetic environment so you've got to do some cheering nonsense to kind of get",
    "start": "1073720",
    "end": "1081040"
  },
  {
    "text": "make sure that you don't interfere with someone else's build then you go in and you install all these apt packages and",
    "start": "1081040",
    "end": "1087090"
  },
  {
    "text": "then you go through and do all of your PIP packages and you get clones some",
    "start": "1087090",
    "end": "1092470"
  },
  {
    "text": "stuff out and before you know it 20 minutes have passed and you've got a little a little package that you're",
    "start": "1092470",
    "end": "1097929"
  },
  {
    "text": "ready to install in our case we were using the Debian packaging system for any of you who have not used Debian",
    "start": "1097929",
    "end": "1104470"
  },
  {
    "text": "packaging don't use it it's really really complicated and like obtuse and really hard to work with and we had like",
    "start": "1104470",
    "end": "1111250"
  },
  {
    "text": "one guy in the entire organization who knew how that stuff worked because it's totally crazy so anyway this is what we",
    "start": "1111250",
    "end": "1117640"
  },
  {
    "text": "were doing we're creating these Debian packages right good times fun and before docker it would take us sometimes over",
    "start": "1117640",
    "end": "1125230"
  },
  {
    "text": "30 minutes to actually get the application out into production but why is that well you get your five minutes",
    "start": "1125230",
    "end": "1131920"
  },
  {
    "text": "of boot time for an ec2 instance maybe it's gotten a little bit faster since then but you know it's call it five",
    "start": "1131920",
    "end": "1137440"
  },
  {
    "text": "times to just boot the instance then we were using puppet probably a lot of you",
    "start": "1137440",
    "end": "1142720"
  },
  {
    "text": "are familiar with puppet and chef as configuration systems we were using puppet and puppets responsibility was to",
    "start": "1142720",
    "end": "1149080"
  },
  {
    "text": "go in and bootstrap the machine and get all the system packages on there and get all the configuration on there so that",
    "start": "1149080",
    "end": "1155260"
  },
  {
    "text": "took about 15 minutes and then we get to go deliver that Debian package and unpacking that thing takes like 10",
    "start": "1155260",
    "end": "1162280"
  },
  {
    "text": "minutes because it goes through its tree of dependencies and whatnot so 30 minutes later we're in production so in",
    "start": "1162280",
    "end": "1169300"
  },
  {
    "text": "total every time we wanted to do a release it would take us like an hour an hour plus right and if something went",
    "start": "1169300",
    "end": "1176830"
  },
  {
    "text": "wrong we'll forget about it you got to go all the way back to the beginning and do the whole thing over again right so",
    "start": "1176830",
    "end": "1182290"
  },
  {
    "text": "that was all bad really really bad but not terrible in a world where you're not",
    "start": "1182290",
    "end": "1188800"
  },
  {
    "text": "releasing that frequently right it's not unreasonable to be to start in a place where",
    "start": "1188800",
    "end": "1194320"
  },
  {
    "text": "you're not releasing that frequently and you want to do so do things in a completely automated and repeatable way",
    "start": "1194320",
    "end": "1199500"
  },
  {
    "text": "so now let's talk about the migration to docker and this was something that we",
    "start": "1199500",
    "end": "1204520"
  },
  {
    "text": "knew we wanted to do for a long time and it was motivated by this desire to go faster this desire for us to get more",
    "start": "1204520",
    "end": "1211630"
  },
  {
    "text": "releases out into production more quickly to deliver features to our users and so as we think about that same",
    "start": "1211630",
    "end": "1217930"
  },
  {
    "text": "framework that we talked about earlier of the different components in the system that's kind of how we modeled the",
    "start": "1217930",
    "end": "1223960"
  },
  {
    "text": "layers it's not exactly one to one but abstractly let's think about it as one to one where we've got system packages",
    "start": "1223960",
    "end": "1230110"
  },
  {
    "text": "we've got Python packages and then we have our own application source and it's all layered on top of a base operating",
    "start": "1230110",
    "end": "1236260"
  },
  {
    "text": "system for us it all starts with that base OS and Abbey had mentioned using a",
    "start": "1236260",
    "end": "1243370"
  },
  {
    "text": "smaller distribution trying to make the baseline of this really really small for",
    "start": "1243370",
    "end": "1248530"
  },
  {
    "text": "us just waiting into this and we're new to this we've only been doing this probably for a year or so we actually",
    "start": "1248530",
    "end": "1255160"
  },
  {
    "text": "wanted we wanted to build from a place of familiarity we didn't want to introduce too many new things in this",
    "start": "1255160",
    "end": "1260890"
  },
  {
    "text": "transition from the old world to the new world and so we use Ubuntu we have a",
    "start": "1260890",
    "end": "1266370"
  },
  {
    "text": "particular flavor of it that we use it's really old we actually do use precise so",
    "start": "1266370",
    "end": "1272070"
  },
  {
    "text": "that's really bad but where there's some good reasons for that but we do use",
    "start": "1272070",
    "end": "1277630"
  },
  {
    "text": "precise and then on top of that we actually go in and install all of our apt packages this is kind of step one",
    "start": "1277630",
    "end": "1285670"
  },
  {
    "text": "right and we have a script that articulates all of our system dependencies and if these don't change",
    "start": "1285670",
    "end": "1291810"
  },
  {
    "text": "then this layer never gets rebuilt right caching is really really important and",
    "start": "1291810",
    "end": "1297520"
  },
  {
    "text": "because this is only changing on the order of quarterly or so then that's the frequency of change of this layer and so",
    "start": "1297520",
    "end": "1304300"
  },
  {
    "text": "we don't actually pay much of a penalty repeatedly for building this and I think the size of this layer ends up being in",
    "start": "1304300",
    "end": "1310840"
  },
  {
    "text": "the hundreds of Meg's or so so it's still a little large and will probably shrink that down as we start to look",
    "start": "1310840",
    "end": "1317140"
  },
  {
    "text": "into alternate base images but for us the familiarity of what's on the host was really important and to not",
    "start": "1317140",
    "end": "1323410"
  },
  {
    "text": "introduce too much change then of course we layer and everything our Python virtual environment and so in",
    "start": "1323410",
    "end": "1330850"
  },
  {
    "text": "the virtual environment things are changing a little bit more frequently we're talking about maybe a change every",
    "start": "1330850",
    "end": "1338110"
  },
  {
    "text": "couple of weeks or so it's not that not that crazy and you can see here we",
    "start": "1338110",
    "end": "1343750"
  },
  {
    "text": "actually use a package manager called Conda I don't know if folks are familiar with Conda but it allows you to manage",
    "start": "1343750",
    "end": "1349270"
  },
  {
    "text": "both your Python dependencies and your system dependencies kind of in one place so it's sort of a nice nice thing we've",
    "start": "1349270",
    "end": "1356890"
  },
  {
    "text": "got our requirements text we've got our llamo files if any of these change obviously we've got to blow up this",
    "start": "1356890",
    "end": "1363700"
  },
  {
    "text": "layer of the cache we've got to start over again but in most cases not a lot is changing in here either and so we can",
    "start": "1363700",
    "end": "1370330"
  },
  {
    "text": "run our little script everything's happy and then we get to the apps source",
    "start": "1370330",
    "end": "1375850"
  },
  {
    "text": "itself and now this is changing all the time literally all the time we're",
    "start": "1375850",
    "end": "1382600"
  },
  {
    "text": "changing it by the minute even in some cases maybe not the minute but multiple",
    "start": "1382600",
    "end": "1388300"
  },
  {
    "text": "times an hour and this is really all about our source code it's about Python",
    "start": "1388300",
    "end": "1394450"
  },
  {
    "text": "source code it's about static assets we use thrift as an IDL it's about the interfaces between our clients and our",
    "start": "1394450",
    "end": "1400990"
  },
  {
    "text": "servers and so when any of these things change which is all the time this basically changes by using docker layer",
    "start": "1400990",
    "end": "1410530"
  },
  {
    "text": "caching we were able to drop the average build times from 20 minutes to build",
    "start": "1410530",
    "end": "1417160"
  },
  {
    "text": "everything down to about two minutes because again in most cases all we're",
    "start": "1417160",
    "end": "1423160"
  },
  {
    "text": "ever changing is our source code it doesn't take very long to do a git pull and to check that stuff out and to",
    "start": "1423160",
    "end": "1429700"
  },
  {
    "text": "compile some CSS or JavaScript not not that not that big a deal and we think we",
    "start": "1429700",
    "end": "1434890"
  },
  {
    "text": "can go even faster than this so going from 20 minutes to 2 minutes",
    "start": "1434890",
    "end": "1440230"
  },
  {
    "text": "was a huge win it improved our velocity on the build and cycle times to the",
    "start": "1440230",
    "end": "1445690"
  },
  {
    "text": "point where we can now do even more upstream of our deployments we think about continuous integration and being",
    "start": "1445690",
    "end": "1451780"
  },
  {
    "text": "able to run tests and to be able to test on every commit this actually makes a",
    "start": "1451780",
    "end": "1457390"
  },
  {
    "text": "big difference in being able to do some of that because you're able to drop a container to a testing cluster run those tests and",
    "start": "1457390",
    "end": "1464200"
  },
  {
    "text": "you can do that on every commit and you can give developers feedback more quickly so really really important and",
    "start": "1464200",
    "end": "1470429"
  },
  {
    "text": "then as we think about the deployment side of things even more wins so in the",
    "start": "1470429",
    "end": "1478179"
  },
  {
    "text": "old world where we were actually going through and doing the whole process booting an ec2 host",
    "start": "1478179",
    "end": "1484000"
  },
  {
    "text": "configuring it with puppet running all of those installation scripts dropping our crazy-ass Debian package that we",
    "start": "1484000",
    "end": "1491679"
  },
  {
    "text": "didn't know how to build onto these hosts instead all we're doing now is",
    "start": "1491679",
    "end": "1497049"
  },
  {
    "text": "pulling from the docker registry dropping that image onto some pre booted hosts into a fleet of ec2 containers",
    "start": "1497049",
    "end": "1504750"
  },
  {
    "text": "inside of ECS we happen to use ECS but if you're using something else like kubernetes or mezzos or whatever same",
    "start": "1504750",
    "end": "1513190"
  },
  {
    "text": "general kind of stuff and so for us that actually dropped our deployment times to",
    "start": "1513190",
    "end": "1519280"
  },
  {
    "text": "about five minutes there's more in the deployment we actually drop the containers onto the hosts we transition",
    "start": "1519280",
    "end": "1524710"
  },
  {
    "text": "traffic through load balancers so you see a little bit of that here but the time that just the raw time to ship",
    "start": "1524710",
    "end": "1531669"
  },
  {
    "text": "something has gone down significantly now that being said our image sizes are",
    "start": "1531669",
    "end": "1537280"
  },
  {
    "text": "still pretty big when you sum up everything including that base OS that",
    "start": "1537280",
    "end": "1542770"
  },
  {
    "text": "chunky layer of Python dependencies in the middle and then of course our our source code",
    "start": "1542770",
    "end": "1548770"
  },
  {
    "text": "we're probably north of a gig right we're pretty big and we want to get that",
    "start": "1548770",
    "end": "1554289"
  },
  {
    "text": "down even more but in comparison we didn't talk about this in the presentation but in the NGO world we're",
    "start": "1554289",
    "end": "1561460"
  },
  {
    "text": "all we're shipping as a binary it's like lightning fast lightning fast we build",
    "start": "1561460",
    "end": "1567909"
  },
  {
    "text": "the we build the binary we stick it into a layer nothing else changes because there's no other dependencies that need",
    "start": "1567909",
    "end": "1574780"
  },
  {
    "text": "to be shipped and so that whole process is lightning fast and we deploy those",
    "start": "1574780",
    "end": "1580150"
  },
  {
    "text": "apps basically all the time so this is basically a look at how our",
    "start": "1580150",
    "end": "1585700"
  },
  {
    "text": "new system works so quick summary darker",
    "start": "1585700",
    "end": "1591730"
  },
  {
    "text": "layers good very very good try and find as minimal a shared base OS",
    "start": "1591730",
    "end": "1598390"
  },
  {
    "text": "as possible we haven't yet found ours but I suspect we will find it soon I",
    "start": "1598390",
    "end": "1603460"
  },
  {
    "text": "think it's important for us to kind of now take this baseline and optimize it",
    "start": "1603460",
    "end": "1608620"
  },
  {
    "text": "even further now that it's up and running and it's stable but in transition I wouldn't rush to that right",
    "start": "1608620",
    "end": "1614980"
  },
  {
    "text": "if you're transitioning from a place where you're already building on ec2 hosts and you're trying to move over to",
    "start": "1614980",
    "end": "1620290"
  },
  {
    "text": "docker try and build try and make that transition as gradually as possible",
    "start": "1620290",
    "end": "1625300"
  },
  {
    "text": "don't introduce more stress than you already have right I think all of us have stress in our production environments so small layers are better",
    "start": "1625300",
    "end": "1633510"
  },
  {
    "text": "and cache everything that you can as much caching as you can do better so",
    "start": "1633510",
    "end": "1641020"
  },
  {
    "text": "that's all I got you got more no so what we'll do now is so I like a little note",
    "start": "1641020",
    "end": "1646480"
  },
  {
    "text": "first so I think that's really cool because that's it's really a it's a very approachable way that people are doing",
    "start": "1646480",
    "end": "1652060"
  },
  {
    "text": "it in production right that you started with something that was really familiar and then you got to something that was as familiar as it could be while getting",
    "start": "1652060",
    "end": "1658450"
  },
  {
    "text": "all the benefits of the new thing and it's very much like the opposite of premature optimization it's like we did what we wanted to get something that was",
    "start": "1658450",
    "end": "1665170"
  },
  {
    "text": "a lot better and then if we waited for a little while now we'll keep optimizing",
    "start": "1665170",
    "end": "1670360"
  },
  {
    "text": "now we like it and we're comfortable with it so let's just keep optimizing in little chunks after that so we're done",
    "start": "1670360",
    "end": "1676690"
  },
  {
    "text": "with with the slide part of our content so we've left a big chunk of time for for questions so I know that I'm excited",
    "start": "1676690",
    "end": "1683920"
  },
  {
    "text": "that Prakash is here because it's a good opportunity to ask questions about someone that's doing this and in like in",
    "start": "1683920",
    "end": "1689980"
  },
  {
    "text": "real life production that's doing it right now so they're using all the time so a great time to ask questions of Prakash so we'll hang out here for a",
    "start": "1689980",
    "end": "1697030"
  },
  {
    "text": "couple minutes and answer our questions out loud and then we'll try to leave you guys with a couple minutes at the end to",
    "start": "1697030",
    "end": "1703360"
  },
  {
    "text": "head to your next session because I know everyone needs a little bit of extra reinvent travel time to get",
    "start": "1703360",
    "end": "1709120"
  },
  {
    "text": "literally anywhere I know that I have a sub in the hotels or something I know that I have a half an hour to get from",
    "start": "1709120",
    "end": "1714250"
  },
  {
    "text": "here to the Venetian at 2:30 and I'm not sure it's physically possible so unless I can expense some sort of teleporter",
    "start": "1714250",
    "end": "1720250"
  },
  {
    "text": "not really sure how I'll do it so does anyone have any questions for Prakash are I about",
    "start": "1720250",
    "end": "1726710"
  },
  {
    "text": "we're building with docker lares and some people are sneaking out yes yeah so",
    "start": "1726710",
    "end": "1736220"
  },
  {
    "text": "with the with the with the layers so it's gonna be a mass exodus so it'll be",
    "start": "1736220",
    "end": "1741440"
  },
  {
    "text": "private question time with the layers so every time you call run basically you're",
    "start": "1741440",
    "end": "1746750"
  },
  {
    "text": "adding a new layer and there are some commands that don't do that and darker 1.10 has made that a little bit better",
    "start": "1746750",
    "end": "1752690"
  },
  {
    "text": "but in general when I'm calling run I'm adding a new layer and almost always because the result of that run command",
    "start": "1752690",
    "end": "1758330"
  },
  {
    "text": "is probably chain is probably changing so if I chain them you see that in I don't have a good example up but how I",
    "start": "1758330",
    "end": "1765590"
  },
  {
    "text": "would have used to do things right when I did the same thing that next door did and I moved over from like a static big",
    "start": "1765590",
    "end": "1771770"
  },
  {
    "text": "giant monolith to my microservices and I did exactly the same thing and I remember writing it and I was like ok",
    "start": "1771770",
    "end": "1778179"
  },
  {
    "text": "apt-get update apt-get install and I wrote myself a really nice comment on",
    "start": "1778179",
    "end": "1784640"
  },
  {
    "text": "the top of every line and I was like I am God's gift to developers and look at all the comments I've written this is so",
    "start": "1784640",
    "end": "1790460"
  },
  {
    "text": "organized this is beautiful and then I was like whoa wait this is really slow so when you chain them you can do",
    "start": "1790460",
    "end": "1796669"
  },
  {
    "text": "everything in the same layer so if I do youdo and you don't always have to do app to get update but for example if",
    "start": "1796669",
    "end": "1801980"
  },
  {
    "text": "you're doing it so I do apt-get update and and and then apt-get install and then a lot of package managers will now",
    "start": "1801980",
    "end": "1808429"
  },
  {
    "text": "clean up after you but if for you might still need to do that then you can remove the packages in the same line so",
    "start": "1808429",
    "end": "1814909"
  },
  {
    "text": "then I end up with one giant slightly Messier lookin line where I've updated",
    "start": "1814909",
    "end": "1820610"
  },
  {
    "text": "and then installed my package so I've done not I'm not committing then to layers I'm committing one and then the",
    "start": "1820610",
    "end": "1826730"
  },
  {
    "text": "same works if you're then if you're using something so for example with with getting a file if I curl a big file and",
    "start": "1826730",
    "end": "1833240"
  },
  {
    "text": "then use it to install something I can remove the zipped version so if I chain them all together so and it's not doing",
    "start": "1833240",
    "end": "1840140"
  },
  {
    "text": "run and run its run and the rest of the command so you're basically using your opening",
    "start": "1840140",
    "end": "1846409"
  },
  {
    "text": "one run statement for the whole command with whatever you are doing so all the",
    "start": "1846409",
    "end": "1851450"
  },
  {
    "text": "different pieces",
    "start": "1851450",
    "end": "1853840"
  },
  {
    "text": "yeah yeah for us we wanted to articulate it in a way that kind of mapped to the",
    "start": "1858650",
    "end": "1865970"
  },
  {
    "text": "division of responsibilities in some sense also so yeah yeah",
    "start": "1865970",
    "end": "1871320"
  },
  {
    "text": "yes as I",
    "start": "1871320",
    "end": "1881539"
  },
  {
    "text": "so I think the well the the general answer is is that it and I feel like I",
    "start": "1924380",
    "end": "1929960"
  },
  {
    "text": "say this at least 18 times a day and then everyone will tweet me angrily afterwards and being like she always says it's dependent on your use case but",
    "start": "1929960",
    "end": "1936490"
  },
  {
    "text": "it always is always but the where I used",
    "start": "1936490",
    "end": "1942110"
  },
  {
    "text": "a shared base image before is that it didn't mean that I was this is a very extreme land example for our power point",
    "start": "1942110",
    "end": "1949400"
  },
  {
    "text": "purposes but in real life where it mostly looked like was that I had my shared base image but it did not mean",
    "start": "1949400",
    "end": "1955309"
  },
  {
    "text": "that I was not then installing one package on top of that that I only needed for one if it was like a",
    "start": "1955309",
    "end": "1960650"
  },
  {
    "text": "especially especially space inefficient one so I tend to use the base image so",
    "start": "1960650",
    "end": "1967520"
  },
  {
    "text": "say I have 10 no js' services and they all have like 6 packages that they only and you can see that next door is also",
    "start": "1967520",
    "end": "1973070"
  },
  {
    "text": "using a custom base that I install a bunch of the packages that I need and",
    "start": "1973070",
    "end": "1978470"
  },
  {
    "text": "then maybe I'm still installing some other ones in my setup but I what I found was that by having that what my",
    "start": "1978470",
    "end": "1986150"
  },
  {
    "text": "consequence was for having inefficient containers was that at some point I also used UCS I had no disk space and I was",
    "start": "1986150",
    "end": "1993950"
  },
  {
    "text": "on call for that and that was an exciting night for me when I realized that I had literally no disk space and",
    "start": "1993950",
    "end": "2000039"
  },
  {
    "text": "docker I would say behaves very poorly with no disk space so what I found was",
    "start": "2000039",
    "end": "2005049"
  },
  {
    "text": "that when I Prakash's laughing at me because it was like the understatement of the century it would like it surfaces is like a",
    "start": "2005049",
    "end": "2011740"
  },
  {
    "text": "bunch of kernel errors and I was like what's going on so my goal was to not",
    "start": "2011740",
    "end": "2017799"
  },
  {
    "text": "run out of disk space also on the clusters itself so I found that I gained more from having a shared base image",
    "start": "2017799",
    "end": "2024250"
  },
  {
    "text": "that I wasn't pulling many separate base images I gained more from that quality",
    "start": "2024250",
    "end": "2030130"
  },
  {
    "text": "of life wise and that in some cases I then still did have an extra step installing those two packages later if I",
    "start": "2030130",
    "end": "2036850"
  },
  {
    "text": "needed something extra that I didn't have in my base but it took up much less space out of my cluster pool because I",
    "start": "2036850",
    "end": "2044549"
  },
  {
    "text": "what I really didn't want was the disk space problem and when they all had their own base I did run out of space",
    "start": "2044549",
    "end": "2051190"
  },
  {
    "text": "which is that there's also there's a broader kind of architectural way to think about it which is",
    "start": "2051190",
    "end": "2057500"
  },
  {
    "text": "how do you in a polyglot type of environment like ours where we've got some NGO services and we've got some",
    "start": "2057500",
    "end": "2062810"
  },
  {
    "text": "Python services we actually run those all on one giant fleet of easy ECS hosts the other way that we could",
    "start": "2062810",
    "end": "2069800"
  },
  {
    "text": "have done this as we could have said okay well there's like a Python ECS cluster and you push some of the",
    "start": "2069800",
    "end": "2075100"
  },
  {
    "text": "commonality as much as possible into the kind of hosts layer and you move some of",
    "start": "2075100",
    "end": "2082010"
  },
  {
    "text": "the like differences up and again it depends I think a lot on the rate of change right that's when you come back",
    "start": "2082010",
    "end": "2087710"
  },
  {
    "text": "to first principles about caching and optimizations and things there's always a trade-off between some of that",
    "start": "2087710",
    "end": "2093919"
  },
  {
    "text": "complexity and where you push that complexity and some of the operability of things so I think there is a",
    "start": "2093919",
    "end": "2099350"
  },
  {
    "text": "different way of thinking about it also that you know is for us for example to",
    "start": "2099350",
    "end": "2106730"
  },
  {
    "text": "expound on the disk space issue right we have these giant machines and we run a",
    "start": "2106730",
    "end": "2113000"
  },
  {
    "text": "bunch of we pack a bunch of different containers into those machines you know that's one way to do it another way to",
    "start": "2113000",
    "end": "2118640"
  },
  {
    "text": "do it is to run like little machines and run little workloads on those little machines and things and so I really do think it depends on your use case in and",
    "start": "2118640",
    "end": "2125300"
  },
  {
    "text": "kind of where you're constrained I think part of it too is it like so we just",
    "start": "2125300",
    "end": "2130730"
  },
  {
    "text": "said there's always trade-offs right so your trade off my trade off was that I didn't like debugging kernel errors",
    "start": "2130730",
    "end": "2136970"
  },
  {
    "text": "which I thought was like a quality-of-life situation but but because people are running mixed",
    "start": "2136970",
    "end": "2143780"
  },
  {
    "text": "workloads now so I'm running some Python container some go container some node.js containers and all the configuration now",
    "start": "2143780",
    "end": "2149600"
  },
  {
    "text": "at least for me is boxed at the container layer I do end up in some",
    "start": "2149600",
    "end": "2155150"
  },
  {
    "text": "cases having to do a little bit of extra work that is not in my utopian docker files for this presentation I do end",
    "start": "2155150",
    "end": "2162500"
  },
  {
    "text": "that maybe doing a little bit of configuration work but in general I've saved myself a ton of space by moving",
    "start": "2162500",
    "end": "2168860"
  },
  {
    "text": "out a chunk of that to the to the base image so still a little extra work but",
    "start": "2168860",
    "end": "2174710"
  },
  {
    "text": "yeah for me was worth it yes",
    "start": "2174710",
    "end": "2179830"
  },
  {
    "text": "so I did not can so the the way that the docker cache behaves is part of docker",
    "start": "2183690",
    "end": "2190750"
  },
  {
    "text": "so I didn't do much configuration for how the actual cache itself works so",
    "start": "2190750",
    "end": "2195820"
  },
  {
    "text": "that is that's behavior that comes as part of docker what I can do is I can kind of configure how I utilize the",
    "start": "2195820",
    "end": "2202750"
  },
  {
    "text": "cache so you can run some things with like the no cache flag if you if you",
    "start": "2202750",
    "end": "2208150"
  },
  {
    "text": "never want it to use the cache but in general how I'm utilizing the cache as I'm sorting my statements so that I can",
    "start": "2208150",
    "end": "2214510"
  },
  {
    "text": "push it off as long as possible so if I have any setup that never changes so I have different steps that do different",
    "start": "2214510",
    "end": "2221050"
  },
  {
    "text": "amounts of setup right so if I have a couple that never changed right like a label or the the name of my actual",
    "start": "2221050",
    "end": "2228609"
  },
  {
    "text": "basement like stuff like that I put first and I keep as many layer as possible so that docker will recycle",
    "start": "2228609",
    "end": "2234730"
  },
  {
    "text": "those layers and then anything that I know changes every time so for me and for next door it's the application code",
    "start": "2234730",
    "end": "2241030"
  },
  {
    "text": "I put that as late as possible so that I did everything else that I could recycle I did it first and then I ended with the",
    "start": "2241030",
    "end": "2248800"
  },
  {
    "text": "thing that I knew was going to change every time I rebuilt my container so that's how I'm using the cache but if",
    "start": "2248800",
    "end": "2255490"
  },
  {
    "text": "you're looking for more specifics on how docker itself caches things I'd start",
    "start": "2255490",
    "end": "2261460"
  },
  {
    "text": "with the documentation on there they actually have a really nice section on on how the cache itself behaves but in",
    "start": "2261460",
    "end": "2266530"
  },
  {
    "text": "general and there are some instructions that will add a new layer and there are some that will not so you can add those",
    "start": "2266530",
    "end": "2274359"
  },
  {
    "text": "you can chain those run statements together which we did talk about but docker will use its cache until",
    "start": "2274359",
    "end": "2280720"
  },
  {
    "text": "something basically tells it not to use the cache or until it gets something that's changed so for some things it",
    "start": "2280720",
    "end": "2287319"
  },
  {
    "text": "means that it will use the it'll use it caches based on the instruction itself so like add X like maybe well it'll",
    "start": "2287319",
    "end": "2296500"
  },
  {
    "text": "it'll use the instruction itself but then for some of them it's the actual contents of the file so if I'm adding a",
    "start": "2296500",
    "end": "2302020"
  },
  {
    "text": "file it will check the checksum of that file to see if the file itself has changed so you definitely have to look",
    "start": "2302020",
    "end": "2308589"
  },
  {
    "text": "at your individual instructions to see how the cache will behave but keep the layers as long as possible if you",
    "start": "2308589",
    "end": "2314140"
  },
  {
    "text": "utilize the cash and docker is very aggressive caching wise so there are",
    "start": "2314140",
    "end": "2320769"
  },
  {
    "text": "some things like the git repository thing where you tell it explicitly to stop caching yes",
    "start": "2320769",
    "end": "2327808"
  },
  {
    "text": "I'm the first pull of something it doesn't yeah is the is a really short",
    "start": "2340930",
    "end": "2347539"
  },
  {
    "text": "answer so the first time I pull something there's no cash to utilize with it where it does help me is that I",
    "start": "2347539",
    "end": "2353180"
  },
  {
    "text": "don't recycle my hosts as often anymore because my containers are what's being recycled so if I have ten notes j/s",
    "start": "2353180",
    "end": "2361130"
  },
  {
    "text": "services and they all have a shared base the first time I pulled one of those services to the to the host I have the",
    "start": "2361130",
    "end": "2367940"
  },
  {
    "text": "base image which makes the subsequent deploys for all of my following containers using that base image just a",
    "start": "2367940",
    "end": "2373789"
  },
  {
    "text": "little bit faster but the first time there is no cash yes",
    "start": "2373789",
    "end": "2383019"
  },
  {
    "text": "you know I wish my my lead systems architect was here because he's dealing",
    "start": "2418320",
    "end": "2423610"
  },
  {
    "text": "with the same issue I think don't quote",
    "start": "2423610",
    "end": "2428830"
  },
  {
    "text": "me on this but I think there is a place for tools like puppet and and others in this world as well where you still",
    "start": "2428830",
    "end": "2435490"
  },
  {
    "text": "deploy a container but the first thing that you do when you run the container you know obviously you can run a command",
    "start": "2435490",
    "end": "2440800"
  },
  {
    "text": "to start your services or whatever that that command also includes a directive",
    "start": "2440800",
    "end": "2446170"
  },
  {
    "text": "to configure the system right yep yep",
    "start": "2446170",
    "end": "2466950"
  },
  {
    "text": "yeah I mean that the the entry point way was I think the the way that we tried it",
    "start": "2468770",
    "end": "2474000"
  },
  {
    "text": "yeah",
    "start": "2474000",
    "end": "2476450"
  },
  {
    "text": "yep yeah both are good",
    "start": "2510480",
    "end": "2518750"
  },
  {
    "text": "you don't have to specify necessarily the build file but for for some darker instructions and this is I don't think",
    "start": "2527460",
    "end": "2533740"
  },
  {
    "text": "this is the only one and they just changed things in 1.10 so I might be lying now but I don't think I am but for",
    "start": "2533740",
    "end": "2540790"
  },
  {
    "text": "some instructions it caches based on the instruction itself so like pulling",
    "start": "2540790",
    "end": "2546190"
  },
  {
    "text": "something that since that instruction doesn't doesn't change docker will use the cache I don't know if they fix this",
    "start": "2546190",
    "end": "2552609"
  },
  {
    "text": "yet and hopefully they have but for some of them so might for like if pulling from get the instruction is always the",
    "start": "2552609",
    "end": "2560440"
  },
  {
    "text": "same I don't change my repository URL that I get from so I have to tell it not",
    "start": "2560440",
    "end": "2565480"
  },
  {
    "text": "to use the cache because otherwise it won't go and check I have updates with a",
    "start": "2565480",
    "end": "2571299"
  },
  {
    "text": "static URL there's a no cache flag yes",
    "start": "2571299",
    "end": "2576309"
  },
  {
    "text": "no cache I yes that is at the CLI level",
    "start": "2576309",
    "end": "2584640"
  },
  {
    "text": "yes",
    "start": "2595820",
    "end": "2598820"
  },
  {
    "text": "yeah I think that's it's all about",
    "start": "2605829",
    "end": "2614420"
  },
  {
    "text": "ordering I think yeah it's like words to live by for a lot of stuff right so order the statements themselves but also",
    "start": "2614420",
    "end": "2620540"
  },
  {
    "text": "a little bit of organization goes along goes a long way because that's not even that's not even a docker cash thing",
    "start": "2620540",
    "end": "2626630"
  },
  {
    "text": "that's a human sharing information thing so and maybe I write my package less in",
    "start": "2626630",
    "end": "2631970"
  },
  {
    "text": "a different order than Prakash does we're using the same stuff how do we know if everyone that's when you end up",
    "start": "2631970",
    "end": "2638030"
  },
  {
    "text": "being like okay well across all the engineering teams we live in this beautiful world of everyone doing their own little teams now and that's awesome",
    "start": "2638030",
    "end": "2644060"
  },
  {
    "text": "but what if we still occasionally had some standards like alphabetizing a",
    "start": "2644060",
    "end": "2649460"
  },
  {
    "text": "package list I think it's really common and if everyone alphabetizes their own package lists then we all can share cash",
    "start": "2649460",
    "end": "2655819"
  },
  {
    "text": "and that's that actually I think is one of the reasons that we went with this option of like using scripts because the",
    "start": "2655819",
    "end": "2662720"
  },
  {
    "text": "scripts are under version control they're they're kind of like centrally managed and and so we can enforce that",
    "start": "2662720",
    "end": "2668270"
  },
  {
    "text": "through code review at the time that someone modifies a script so I thought what was really cool about the the",
    "start": "2668270",
    "end": "2673609"
  },
  {
    "text": "script option 2 was that it's not wasn't",
    "start": "2673609",
    "end": "2678650"
  },
  {
    "text": "even a new way of doing things you could have used a lot of the same scripts that you use before you move to the docker",
    "start": "2678650",
    "end": "2684140"
  },
  {
    "text": "containers and you're just calling them from somewhere else now so new learning",
    "start": "2684140",
    "end": "2689810"
  },
  {
    "text": "curve wise made it much easier on yourself because you can just call the same scripts it was it was yeah to begin",
    "start": "2689810",
    "end": "2698000"
  },
  {
    "text": "with we just found that as a good side benefit I think it's like a nice it's a nice thing to look at for people too",
    "start": "2698000",
    "end": "2703579"
  },
  {
    "text": "that are like oh it's too hard or we'll all have to learn something new it's like well actually they learned half the",
    "start": "2703579",
    "end": "2709310"
  },
  {
    "text": "new things the first time and took the things that they were familiar with and then used all the hits we were just",
    "start": "2709310",
    "end": "2715790"
  },
  {
    "text": "happy to get out of Debian packaging let me just tell you that was that was actually really fun yeah",
    "start": "2715790",
    "end": "2724849"
  },
  {
    "text": "I love tricks oh yeah true",
    "start": "2724849",
    "end": "2738309"
  },
  {
    "text": "yep yes yep so actually I feel like next",
    "start": "2738309",
    "end": "2744710"
  },
  {
    "text": "time I want to I want to change it around because every time I give this talk and people have cool stuff like",
    "start": "2744710",
    "end": "2750319"
  },
  {
    "text": "that or they have like a cool flag that no one else knew about so yeah nope you",
    "start": "2750319",
    "end": "2755569"
  },
  {
    "text": "can definitely call just saying that changes I think people do that a lot for filenames also that they just they're oh",
    "start": "2755569",
    "end": "2761029"
  },
  {
    "text": "they always they name it something where they went and got the date and then they hash it and then it always changes yeah",
    "start": "2761029",
    "end": "2768700"
  },
  {
    "text": "uh fpm okay",
    "start": "2787559",
    "end": "2793099"
  },
  {
    "text": "you can go tell that one guy that I'm",
    "start": "2793099",
    "end": "2798959"
  },
  {
    "text": "not sure he wants to hear about it ya know I don't like to manually do",
    "start": "2798959",
    "end": "2811829"
  },
  {
    "text": "anything and that is because I am lazy first and foremost so why would I do anything myself if I could teach a",
    "start": "2811829",
    "end": "2818279"
  },
  {
    "text": "computer to do it for me probably better and then I would get more sleep which is great for everyone so how I did it so I Auto scaled at two",
    "start": "2818279",
    "end": "2826739"
  },
  {
    "text": "levels right in in ECS so I would say that my first guiding principle of EECS right was that I did not want to debug",
    "start": "2826739",
    "end": "2833339"
  },
  {
    "text": "things like kernel errors so rather than debug that I just kill it so if it's out of disk space I just kill",
    "start": "2833339",
    "end": "2840150"
  },
  {
    "text": "it and then I send it to traffic somewhere else so that was point number one point number two is that you compute",
    "start": "2840150",
    "end": "2847650"
  },
  {
    "text": "as a resource that's shared across my pool right so I Auto scale at both the tasks level",
    "start": "2847650",
    "end": "2853019"
  },
  {
    "text": "so my service level but I also Auto scaled at the at the pool level so my auto scaling group so they belong to",
    "start": "2853019",
    "end": "2859229"
  },
  {
    "text": "just an ec2 auto scaling group if I look like I'm in danger of running out of something like memory or CPU it will",
    "start": "2859229",
    "end": "2865469"
  },
  {
    "text": "scale up by itself I also could have written a cloud wash alarm because you can write the custom ones to check to",
    "start": "2865469",
    "end": "2871499"
  },
  {
    "text": "see how much disgrace it did I ended up catching that error somewhere I think I",
    "start": "2871499",
    "end": "2876539"
  },
  {
    "text": "was using sumo logic then so I basically shoved I had a problem when do I first",
    "start": "2876539",
    "end": "2883559"
  },
  {
    "text": "started using docker apparently this is a complicated story that I started using docker where Mike and I was so bad at",
    "start": "2883559",
    "end": "2890579"
  },
  {
    "text": "writing some of them that they would fail before I had any time to get any logs so I sent everything to var log messages",
    "start": "2890579",
    "end": "2897719"
  },
  {
    "text": "which is always happily running for me to catch all of my all of my errors so I",
    "start": "2897719",
    "end": "2903089"
  },
  {
    "text": "did that and I ended up looking for that error message because when it first ran",
    "start": "2903089",
    "end": "2908459"
  },
  {
    "text": "out of disk space docker surfaces it as a kernel error which is basically like",
    "start": "2908459",
    "end": "2913579"
  },
  {
    "text": "freaking out because it doesn't have any space but it doesn't it's not obvious so that's what it is and hopefully they've",
    "start": "2913579",
    "end": "2918959"
  },
  {
    "text": "made the error message better so my process for finding it out was that I ended up catching that error to look for",
    "start": "2918959",
    "end": "2925280"
  },
  {
    "text": "it because doctor ended up warning me before my instance was warning me even though it was a non-obvious",
    "start": "2925280",
    "end": "2930980"
  },
  {
    "text": "error message so that's how I was flagging myself because I got an earlier warning that way but I killed them so I",
    "start": "2930980",
    "end": "2936890"
  },
  {
    "text": "I added resources to move the pool out but I was also killing them and then the",
    "start": "2936890",
    "end": "2943430"
  },
  {
    "text": "second way in my very long and convoluted story about disk space no one's ever gonna invite me to talk",
    "start": "2943430",
    "end": "2948590"
  },
  {
    "text": "anymore because I always end up either talking about port allocation or disk space or BBC I think everyone's like oh",
    "start": "2948590",
    "end": "2955940"
  },
  {
    "text": "I was told this talk would be interesting but garbage collection has",
    "start": "2955940",
    "end": "2962300"
  },
  {
    "text": "improved significantly both at the orchestration layer so kubernetes ECS mezzos whatever else you made your own",
    "start": "2962300",
    "end": "2969140"
  },
  {
    "text": "orchestration tool it's improved a lot but I also was running some third-party",
    "start": "2969140",
    "end": "2974480"
  },
  {
    "text": "to garbage collect because my disk space wasn't always about their running containers it was that I had deployed so",
    "start": "2974480",
    "end": "2980930"
  },
  {
    "text": "often and so for like so frequently with non efficient containers that all of the",
    "start": "2980930",
    "end": "2986060"
  },
  {
    "text": "extra trash from my previous containers was taking up all my resources so ECS",
    "start": "2986060",
    "end": "2993350"
  },
  {
    "text": "will garbage collect a lot better now so old kubernetes and but I also was running a third-party garbage collector",
    "start": "2993350",
    "end": "2999170"
  },
  {
    "text": "container so actually really there's an open source one from Spotify Spotify GCC and you ran the collector container and",
    "start": "2999170",
    "end": "3005800"
  },
  {
    "text": "I could I could more aggressively do that I also very aggressively rotated",
    "start": "3005800",
    "end": "3010990"
  },
  {
    "text": "blogs to get rid of disk space also because I'll be since since it was in new technology I was creating so much",
    "start": "3010990",
    "end": "3017320"
  },
  {
    "text": "logs trying to make sure that I was running a new infrastructure efficiently that I was being a little extra cautious",
    "start": "3017320",
    "end": "3023590"
  },
  {
    "text": "so garbage collection don't just do the orchestration level garbage collection",
    "start": "3023590",
    "end": "3029350"
  },
  {
    "text": "if it's not working for you do not be afraid to more aggressively garbage collect but then also kill things when",
    "start": "3029350",
    "end": "3034360"
  },
  {
    "text": "they don't have any disk space because they're useless to you now because nothing will work on them",
    "start": "3034360",
    "end": "3040200"
  },
  {
    "text": "also don't also fun fact definitely don't store your mp3 collection on there I also clean up",
    "start": "3041599",
    "end": "3048599"
  },
  {
    "text": "onions files to you like so many people you'll see you like he'll gone you'll be",
    "start": "3048599",
    "end": "3053700"
  },
  {
    "text": "like I wonder why that hose is out of disk space then you go on to it and you're like did you know that you have 69 Follette files that are all like",
    "start": "3053700",
    "end": "3060990"
  },
  {
    "text": "latest tar.gz it's like I bet that's a good use of space too and you say yes",
    "start": "3060990",
    "end": "3068039"
  },
  {
    "text": "don't store your mp3s don't store your dad files don't store your tar files don't store a random copy of your",
    "start": "3068039",
    "end": "3073500"
  },
  {
    "text": "database all those almost all those fun facts yes",
    "start": "3073500",
    "end": "3080390"
  },
  {
    "text": "so I have an unrelated answer action to this and that for Java and go there's something called multistage builds now",
    "start": "3127339",
    "end": "3134069"
  },
  {
    "text": "that used to be in use used to just be in beta but not now I think everyone can",
    "start": "3134069",
    "end": "3139349"
  },
  {
    "text": "use it and it's you basically build in two separate steps or you can build like",
    "start": "3139349",
    "end": "3144930"
  },
  {
    "text": "all of your Java dependencies ralliart so like Prakash said that for there go world that's really fast because ultimately all they're running is the",
    "start": "3144930",
    "end": "3151079"
  },
  {
    "text": "binary so a nice go example is build all that stuff somewhere else and then you",
    "start": "3151079",
    "end": "3157019"
  },
  {
    "text": "even use like a scratch docker file to run your binary so you can do the same thing with Java where you can do all of",
    "start": "3157019",
    "end": "3162510"
  },
  {
    "text": "your maven spring Gradle stuff somewhere else where you don't care about it and then just runs the rizal and that into",
    "start": "3162510",
    "end": "3169410"
  },
  {
    "text": "the container yeah yep so that's what I would do that was probably easier than",
    "start": "3169410",
    "end": "3174809"
  },
  {
    "text": "using a Python proxy but I've never tried using a Python proxy for that so I",
    "start": "3174809",
    "end": "3181890"
  },
  {
    "text": "have I have no personal recommendations cool any other yes hi",
    "start": "3181890",
    "end": "3190190"
  },
  {
    "text": "we basically kill and replace so in a transitional way we go through and just",
    "start": "3199390",
    "end": "3204980"
  },
  {
    "text": "replace everything and I think philosophically kind of what Abbey was about we just sort of think of the",
    "start": "3204980",
    "end": "3211460"
  },
  {
    "text": "default behavior of like something goes wrong on a container or something goes wrong on a host we kill it that's that's",
    "start": "3211460",
    "end": "3217760"
  },
  {
    "text": "kind of just philosophically we're right I would also say that what we didn't cover in this talk because it was docker",
    "start": "3217760",
    "end": "3223070"
  },
  {
    "text": "image specific is that that's something that you get at the orchestration there and a lot of cases that you're not you're not just running your containers",
    "start": "3223070",
    "end": "3230330"
  },
  {
    "text": "yourself because that's way too much work for lazy ops which is how I like to do things so you we're running it",
    "start": "3230330",
    "end": "3236420"
  },
  {
    "text": "through so in ECS is a service crew Bernays it's a pod but it's like the group of like containers so I'm doing",
    "start": "3236420",
    "end": "3242120"
  },
  {
    "text": "updates through my service or my pod and then I connection drain at the load",
    "start": "3242120",
    "end": "3248090"
  },
  {
    "text": "balancer level which I'm not handling myself that's just a thing that's happening I say that I'm deploying a new",
    "start": "3248090",
    "end": "3253820"
  },
  {
    "text": "version it checks to see if it passes health checks and if so drains the connections off the old one and starts",
    "start": "3253820",
    "end": "3259610"
  },
  {
    "text": "directing traffic to the new copy so you push a new deployment and then connection drain at your load balancer",
    "start": "3259610",
    "end": "3266540"
  },
  {
    "text": "level so and we also enter load balancers for at least for the user",
    "start": "3266540",
    "end": "3271730"
  },
  {
    "text": "facing things we have session stickiness on there just so that there's no if you change the UI or something someone",
    "start": "3271730",
    "end": "3277160"
  },
  {
    "text": "doesn't get into a weird state where they're flipping back and forth between old and new so",
    "start": "3277160",
    "end": "3283660"
  },
  {
    "text": "you got you got to wait for it to drain basically before you can depending on where that is happening we don't have a",
    "start": "3292049",
    "end": "3299999"
  },
  {
    "text": "lot of those in terms of kind of the in HTP land like user-facing land but we",
    "start": "3299999",
    "end": "3305519"
  },
  {
    "text": "certainly have some services that we run on the back end that can be running jobs that take a pretty long time and you",
    "start": "3305519",
    "end": "3311729"
  },
  {
    "text": "can't cycle out that container until that processes and you control that threshold at our load balancer level so",
    "start": "3311729",
    "end": "3318209"
  },
  {
    "text": "you can set the connection draining time out which is how long it will wait for that connection to wrap up gracefully",
    "start": "3318209",
    "end": "3324479"
  },
  {
    "text": "before it kills it and then you get two warnings at your low balance our level right you get you get sig term and then",
    "start": "3324479",
    "end": "3330539"
  },
  {
    "text": "it will wait to gracefully wrap up what's happening so the process that's running and then you get sig kill so it",
    "start": "3330539",
    "end": "3336599"
  },
  {
    "text": "will try though if you if you if your application is handling things properly you'll get the connection draining but",
    "start": "3336599",
    "end": "3342539"
  },
  {
    "text": "then you'll also get sig term which is its warning to say please please clean yourself up nicely and then it won't",
    "start": "3342539",
    "end": "3349170"
  },
  {
    "text": "kill it until you get sig kill and there's there's a couple I'm just because you were asking about long running things there's a couple of",
    "start": "3349170",
    "end": "3355529"
  },
  {
    "text": "things that are a little bit weird depending on what language you're using but if you're in an i/o type of",
    "start": "3355529",
    "end": "3361229"
  },
  {
    "text": "situation sometimes the signal handlers don't get heard depending on what language you're using so you got to be a",
    "start": "3361229",
    "end": "3366809"
  },
  {
    "text": "little bit careful there also so okay",
    "start": "3366809",
    "end": "3373910"
  },
  {
    "text": "you find and go I think it's fine I would my my general caveat here is that",
    "start": "3373910",
    "end": "3379529"
  },
  {
    "text": "you have if you have a behavior where youth it's a very long running job and",
    "start": "3379529",
    "end": "3384569"
  },
  {
    "text": "you want to you know that you need to have it there's no like Kim I generally",
    "start": "3384569",
    "end": "3389819"
  },
  {
    "text": "said that was containers I write things to handle them so that if I can I can keep track of basically what happened if",
    "start": "3389819",
    "end": "3396329"
  },
  {
    "text": "my job gets killed because I don't I don't I don't write the containers thinking that they're gonna be along",
    "start": "3396329",
    "end": "3401339"
  },
  {
    "text": "that often so I don't usually handle State in them I don't assume that they'll be around so make sure that you're writing same with the underlying",
    "start": "3401339",
    "end": "3407609"
  },
  {
    "text": "host yeah because the hosts themselves are ephemeral right they could go out from under you so make sure you can",
    "start": "3407609",
    "end": "3413249"
  },
  {
    "text": "handle things like receiving the shut down signals receiving say term receiving sig kill make sure that you",
    "start": "3413249",
    "end": "3419999"
  },
  {
    "text": "can handle that there's logic then if you know that your process is really important and then it does not save state any",
    "start": "3419999",
    "end": "3425670"
  },
  {
    "text": "that it has to complete itself with the same connection make sure that you add some logic in there to account for that",
    "start": "3425670",
    "end": "3431640"
  },
  {
    "text": "if that's really important to you yep okay oh it you sorry sorry I didn't hear that",
    "start": "3431640",
    "end": "3446869"
  },
  {
    "text": "so assuming that I can hear you so so I'm here for he's asking he's saying",
    "start": "3454070",
    "end": "3459530"
  },
  {
    "text": "that the doing it through the if I'm correct so correct me if I'm wrong so doing it at the task service level and",
    "start": "3459530",
    "end": "3465890"
  },
  {
    "text": "ECS is a rolling update and not a Bluegreen update how would you handle Bluegreen",
    "start": "3465890",
    "end": "3471890"
  },
  {
    "text": "I have always done blue green or whatever colors people are using nowadays yeah which is more exciting I",
    "start": "3471890",
    "end": "3479600"
  },
  {
    "text": "think it sounds way more drastic I always did that at the DNS level and I",
    "start": "3479600",
    "end": "3485750"
  },
  {
    "text": "would switch but I don't this is a personal thing I tend to not do the",
    "start": "3485750",
    "end": "3492020"
  },
  {
    "text": "blue-green ones but I've never had an application that needed it there's a reference architecture I'm pretty sure",
    "start": "3492020",
    "end": "3497270"
  },
  {
    "text": "on AWS labs about Bluegreen deployments that will go in I never run those in",
    "start": "3497270",
    "end": "3502880"
  },
  {
    "text": "production so I don't want to give you a strong recommendation there's a reference architecture but I found that",
    "start": "3502880",
    "end": "3508730"
  },
  {
    "text": "I was actually very happy with the with the rolling one so I'm not sure that I've looked too deep we don't we don't",
    "start": "3508730",
    "end": "3515210"
  },
  {
    "text": "do we do rolling as well we used to do in the old world where we were spinning up new hosts we definitely did kind of",
    "start": "3515210",
    "end": "3521990"
  },
  {
    "text": "the blue green or red red black or whatever yeah and in that case yeah you you transition traffic through load",
    "start": "3521990",
    "end": "3528260"
  },
  {
    "text": "balancers or through DNS the one way I can imagine doing it if it was absolutely necessary is that you spawn a",
    "start": "3528260",
    "end": "3535490"
  },
  {
    "text": "new service right so you you kind of rev the service up you set up all of your containers in the news you cut over",
    "start": "3535490",
    "end": "3541970"
  },
  {
    "text": "through whatever infrastructure you're using so it is definitely possible and there are definitely people that do it",
    "start": "3541970",
    "end": "3547640"
  },
  {
    "text": "that are doing it yeah I'm sure there's a reference yeah what I would look for for recommendations is the reference",
    "start": "3547640",
    "end": "3552980"
  },
  {
    "text": "architecture but I'm positive that there is a customer out there that's written a blog post about doing blue like the",
    "start": "3552980",
    "end": "3559730"
  },
  {
    "text": "color of deployments basically and I'd look for some advice from someone that's running it in production because neither",
    "start": "3559730",
    "end": "3565850"
  },
  {
    "text": "prakash and i are doing that but it is technically I'm sure it's possible all",
    "start": "3565850",
    "end": "3571460"
  },
  {
    "text": "things are possible okay so we are going to get kicked out at any second if you",
    "start": "3571460",
    "end": "3578360"
  },
  {
    "text": "have any questions other than that precautionary both around so feel free to feel free to stop us or say hi",
    "start": "3578360",
    "end": "3585440"
  },
  {
    "text": "thank you all for joining us and participating in first question time yay",
    "start": "3585440",
    "end": "3592000"
  }
]