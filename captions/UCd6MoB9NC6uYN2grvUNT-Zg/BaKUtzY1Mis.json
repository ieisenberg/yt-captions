[
  {
    "text": "[Music]",
    "start": "380",
    "end": "11599"
  },
  {
    "text": "hello I'm diesel a cloud support",
    "start": "11599",
    "end": "14099"
  },
  {
    "text": "engineer here at the AWS office in",
    "start": "14099",
    "end": "16440"
  },
  {
    "text": "Northern Virginia",
    "start": "16440",
    "end": "17460"
  },
  {
    "text": "today I'm going to show you how you can",
    "start": "17460",
    "end": "19080"
  },
  {
    "text": "connect to your Amazon ec2 instance from",
    "start": "19080",
    "end": "21359"
  },
  {
    "text": "the internet let's get started",
    "start": "21359",
    "end": "23699"
  },
  {
    "text": "after logging into your AWS Management",
    "start": "23699",
    "end": "25859"
  },
  {
    "text": "console navigate to the VPC console",
    "start": "25859",
    "end": "30500"
  },
  {
    "text": "select the security group from the",
    "start": "30960",
    "end": "32578"
  },
  {
    "text": "navigation pane",
    "start": "32579",
    "end": "35539"
  },
  {
    "text": "I've already created the security group",
    "start": "39420",
    "end": "41340"
  },
  {
    "text": "but please be sure that the security",
    "start": "41340",
    "end": "43379"
  },
  {
    "text": "group associated with your elastic",
    "start": "43379",
    "end": "45059"
  },
  {
    "text": "network interface of the instance allows",
    "start": "45059",
    "end": "47579"
  },
  {
    "text": "the connection from the required ports",
    "start": "47579",
    "end": "49200"
  },
  {
    "text": "for Linux it's Port 22 and for Windows",
    "start": "49200",
    "end": "52320"
  },
  {
    "text": "it's RDP port 3389",
    "start": "52320",
    "end": "56640"
  },
  {
    "text": "in a production environment enable only",
    "start": "58379",
    "end": "60539"
  },
  {
    "text": "a specific IP address or a range of ips",
    "start": "60539",
    "end": "63180"
  },
  {
    "text": "to access your instance for the testing",
    "start": "63180",
    "end": "65820"
  },
  {
    "text": "purposes I'm adding Ingress rules with a",
    "start": "65820",
    "end": "68159"
  },
  {
    "text": "custom IP of",
    "start": "68159",
    "end": "70100"
  },
  {
    "text": "0.0.0.0 to enable all IP addresses to",
    "start": "70100",
    "end": "74040"
  },
  {
    "text": "access my instance using SSH",
    "start": "74040",
    "end": "77840"
  },
  {
    "text": "please note you don't need to configure",
    "start": "85200",
    "end": "87180"
  },
  {
    "text": "any Security Group egress rules because",
    "start": "87180",
    "end": "89700"
  },
  {
    "text": "security groups are stateful",
    "start": "89700",
    "end": "93140"
  },
  {
    "text": "next let's check the network ACLs",
    "start": "93479",
    "end": "98539"
  },
  {
    "text": "please note that Network ACLS are",
    "start": "103439",
    "end": "105960"
  },
  {
    "text": "stateless you must be sure that the",
    "start": "105960",
    "end": "108000"
  },
  {
    "text": "rules are created in both directions so",
    "start": "108000",
    "end": "110100"
  },
  {
    "text": "traffic is permitted both inbound Rule",
    "start": "110100",
    "end": "112619"
  },
  {
    "text": "and outbound rule would need to allow",
    "start": "112619",
    "end": "114840"
  },
  {
    "text": "the communication for inbound rule you",
    "start": "114840",
    "end": "117119"
  },
  {
    "text": "would need to allow Port 22 and for",
    "start": "117119",
    "end": "119579"
  },
  {
    "text": "egress or outbound rule you would need",
    "start": "119579",
    "end": "121799"
  },
  {
    "text": "to allow all the ephemeral Port but for",
    "start": "121799",
    "end": "124320"
  },
  {
    "text": "this example I'm allowing any",
    "start": "124320",
    "end": "127880"
  },
  {
    "text": "also we need to ensure that an internet",
    "start": "128580",
    "end": "130679"
  },
  {
    "text": "gateway is created and associated with",
    "start": "130679",
    "end": "132959"
  },
  {
    "text": "the VPC before checking the route table",
    "start": "132959",
    "end": "137060"
  },
  {
    "text": "next we will need to check the routing",
    "start": "150840",
    "end": "153239"
  },
  {
    "text": "table",
    "start": "153239",
    "end": "155420"
  },
  {
    "text": "check your VPC route tables for a",
    "start": "159000",
    "end": "161280"
  },
  {
    "text": "default route out pointing to the",
    "start": "161280",
    "end": "162900"
  },
  {
    "text": "internet gateway for my example I don't",
    "start": "162900",
    "end": "165120"
  },
  {
    "text": "have any default route so I would need",
    "start": "165120",
    "end": "167220"
  },
  {
    "text": "to add one",
    "start": "167220",
    "end": "169700"
  },
  {
    "text": "the route doesn't exist add a route with",
    "start": "180840",
    "end": "183300"
  },
  {
    "text": "the internet gateway as a Target and",
    "start": "183300",
    "end": "186440"
  },
  {
    "text": "0.0.0.0 as a destination",
    "start": "186440",
    "end": "190440"
  },
  {
    "text": "if there's no internet gateway",
    "start": "190440",
    "end": "192599"
  },
  {
    "text": "then create one and attach it to your",
    "start": "192599",
    "end": "194700"
  },
  {
    "text": "VPC",
    "start": "194700",
    "end": "197120"
  },
  {
    "text": "to test connectivity I would go ahead",
    "start": "198599",
    "end": "200220"
  },
  {
    "text": "and launch an instance",
    "start": "200220",
    "end": "203060"
  },
  {
    "text": "yeah",
    "start": "207720",
    "end": "208620"
  },
  {
    "text": "I will go ahead and leave everything as",
    "start": "208620",
    "end": "210299"
  },
  {
    "text": "default",
    "start": "210299",
    "end": "212720"
  },
  {
    "text": "ensure that the instance has a public IP",
    "start": "214379",
    "end": "216599"
  },
  {
    "text": "address assigned to it",
    "start": "216599",
    "end": "219560"
  },
  {
    "text": "and it's in the correct subnet",
    "start": "220620",
    "end": "224239"
  },
  {
    "text": "and for the security group we'll go",
    "start": "230940",
    "end": "232739"
  },
  {
    "text": "ahead and assign the security group that",
    "start": "232739",
    "end": "234420"
  },
  {
    "text": "we've created",
    "start": "234420",
    "end": "237019"
  },
  {
    "text": "and make sure that you have access to",
    "start": "242340",
    "end": "244140"
  },
  {
    "text": "the key",
    "start": "244140",
    "end": "246439"
  },
  {
    "text": "please ensure that the instance passes",
    "start": "262919",
    "end": "265199"
  },
  {
    "text": "both status checks before SSH",
    "start": "265199",
    "end": "269000"
  },
  {
    "text": "now our SSH 10.",
    "start": "273900",
    "end": "276479"
  },
  {
    "text": "finally be sure that the OS level",
    "start": "276479",
    "end": "278639"
  },
  {
    "text": "software or firewall on the instance",
    "start": "278639",
    "end": "281040"
  },
  {
    "text": "allows the traffic through the required",
    "start": "281040",
    "end": "283199"
  },
  {
    "text": "ports",
    "start": "283199",
    "end": "284820"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "284820",
    "end": "286320"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "286320",
    "end": "289950"
  },
  {
    "text": "[Music]",
    "start": "289950",
    "end": "295490"
  }
]