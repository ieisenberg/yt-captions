[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "5941",
    "end": "8336"
  },
  {
    "text": "I'm Orit, joining me today,\nTomer from Fundbox.",
    "start": "8336",
    "end": "12063"
  },
  {
    "text": "Hi, Tomer, tell us about Fundbox.",
    "start": "12063",
    "end": "14422"
  },
  {
    "text": "So Fundbox is a startup company.",
    "start": "14422",
    "end": "16876"
  },
  {
    "text": "We are using AI and machine learning\nto help our customers",
    "start": "16876",
    "end": "20886"
  },
  {
    "text": "manage their credit lines.",
    "start": "20886",
    "end": "24300"
  },
  {
    "text": "What are we going to talk about today?",
    "start": "24301",
    "end": "27123"
  },
  {
    "text": "Today, we are going to describe our\nbackend platform",
    "start": "27123",
    "end": "30564"
  },
  {
    "text": "we built in the data organization.",
    "start": "30564",
    "end": "32744"
  },
  {
    "text": "This platform orchestrates data jobs.",
    "start": "32744",
    "end": "37779"
  },
  {
    "text": "What was the challenge\nthat you wanted to solve?",
    "start": "37779",
    "end": "41765"
  },
  {
    "text": "Prior to this platform,",
    "start": "41765",
    "end": "43640"
  },
  {
    "text": "we had a different set\nof EC2 instances in AWS.",
    "start": "43640",
    "end": "49629"
  },
  {
    "text": "And as a user, I had to SSH\ninto one of those EC2 instances,",
    "start": "49630",
    "end": "54278"
  },
  {
    "text": "upload my files whether if it's SQL file\nor Python script or anything else",
    "start": "54278",
    "end": "59508"
  },
  {
    "text": "to manage everything by myself",
    "start": "59508",
    "end": "61492"
  },
  {
    "text": "and hope that my job will execute\non time and nothing fails.",
    "start": "61492",
    "end": "66292"
  },
  {
    "text": "And that was challenging.",
    "start": "66292",
    "end": "68098"
  },
  {
    "text": "And this is why we decided\nto shift a bit",
    "start": "68098",
    "end": "71040"
  },
  {
    "text": "and to separate the business logic\nfrom the underneath infrastructure",
    "start": "71040",
    "end": "75975"
  },
  {
    "text": "and to help users progress\nin a more faster fashion.",
    "start": "75975",
    "end": "81652"
  },
  {
    "start": "82000",
    "end": "254000"
  },
  {
    "text": "Let's dive into the flow.",
    "start": "82838",
    "end": "84333"
  },
  {
    "text": "As a BI developer\nor machine learning engineer",
    "start": "86311",
    "end": "91200"
  },
  {
    "text": "or data engineer, I have a file\nthat describes my job.",
    "start": "91200",
    "end": "96211"
  },
  {
    "text": "It could be a Python script,\na SQL script, a Spark job, or anything.",
    "start": "96211",
    "end": "101441"
  },
  {
    "text": "And along with this file\nthat describes my code,",
    "start": "101441",
    "end": "106740"
  },
  {
    "text": "I need to create another file.",
    "start": "106740",
    "end": "108340"
  },
  {
    "text": "This is a configuration file\nin which I need to define",
    "start": "108340",
    "end": "111199"
  },
  {
    "text": "the type of the job I have-",
    "start": "111199",
    "end": "112666"
  },
  {
    "text": "if it's a SQL, so SQL.",
    "start": "112666",
    "end": "114594"
  },
  {
    "text": "If it's a Python, a Python and so on.",
    "start": "114594",
    "end": "117362"
  },
  {
    "text": "Those two files are committed\ninto a dedicated GitHub repository",
    "start": "117362",
    "end": "122110"
  },
  {
    "text": "and GitHub then triggers a Jenkins job",
    "start": "122110",
    "end": "126232"
  },
  {
    "text": "that will take those files,\nwrap them in a Docker container,",
    "start": "126232",
    "end": "129908"
  },
  {
    "text": "upload the Docker container\ndirectly to ECR,",
    "start": "129908",
    "end": "133857"
  },
  {
    "text": "create the ECS Fargate task for me",
    "start": "133857",
    "end": "137030"
  },
  {
    "text": "and create a Step\nFunction for the job.",
    "start": "137031",
    "end": "140583"
  },
  {
    "text": "The Step Function needs to manage\nall the infrastructure",
    "start": "140583",
    "end": "145896"
  },
  {
    "text": "and decide when to execute the job.",
    "start": "145897",
    "end": "149224"
  },
  {
    "text": "From then on,\nI have few options to run my job.",
    "start": "150895",
    "end": "155318"
  },
  {
    "text": "I can just type a Slack command",
    "start": "156695",
    "end": "159884"
  },
  {
    "text": "that sends an HTTP request\nto API Gateway.",
    "start": "159884",
    "end": "163090"
  },
  {
    "text": "And API Gateway will trigger\na manager Lambda.",
    "start": "163090",
    "end": "165761"
  },
  {
    "text": "I can wait for a cron expression\nto kick-in and then do the same,",
    "start": "165761",
    "end": "171494"
  },
  {
    "text": "just trigger the manager Lambda.",
    "start": "171494",
    "end": "173999"
  },
  {
    "text": "The manager Lambda will pick\nall the job configurations",
    "start": "175772",
    "end": "178352"
  },
  {
    "text": "from a database and will trigger\nthe Step Function for me.",
    "start": "178352",
    "end": "182697"
  },
  {
    "text": "The Step Function will do\nall the Docker related things,",
    "start": "182697",
    "end": "186646"
  },
  {
    "text": "will grab the ECR repository,",
    "start": "186646",
    "end": "190172"
  },
  {
    "text": "and run the ECS task on Fargate.",
    "start": "190172",
    "end": "193787"
  },
  {
    "text": "And we'll eventually send\nan SNS notification",
    "start": "193787",
    "end": "197647"
  },
  {
    "text": "describing the job status,\nwhether it failed or succeeded.",
    "start": "197647",
    "end": "202161"
  },
  {
    "text": "The SNS message is then sent out\nto a set of Lambda functions.",
    "start": "202161",
    "end": "206493"
  },
  {
    "text": "The first Lambda function\nis an audit function",
    "start": "209702",
    "end": "212789"
  },
  {
    "text": "that takes the job result\nand writes it to an S3 bucket.",
    "start": "212789",
    "end": "216710"
  },
  {
    "text": "Another Lambda function\nis a Slack Lambda function",
    "start": "216710",
    "end": "219869"
  },
  {
    "text": "that eventually sends notification\nto the user's channel in Slack",
    "start": "219869",
    "end": "224506"
  },
  {
    "text": "and tells the user\nif his job failed or not.",
    "start": "224506",
    "end": "229153"
  },
  {
    "text": "And another job, another microservice\nis a dependency Lambda.",
    "start": "229153",
    "end": "235027"
  },
  {
    "text": "This dependency Lambda decides",
    "start": "235027",
    "end": "236987"
  },
  {
    "text": "if we need to execute\nmore jobs downstream.",
    "start": "236988",
    "end": "240089"
  },
  {
    "text": "I mean, if my job, it needs to trigger\nanother job that I configured,",
    "start": "240089",
    "end": "245545"
  },
  {
    "text": "so this dependency Lambda will decide\nand then send back the event",
    "start": "245545",
    "end": "250139"
  },
  {
    "text": "to the manager Lambda\nand then all the flow runs again.",
    "start": "250139",
    "end": "254610"
  },
  {
    "start": "254000",
    "end": "279000"
  },
  {
    "text": "Where does the data sit?",
    "start": "254610",
    "end": "257526"
  },
  {
    "text": "So data can reside on a few data sources.",
    "start": "257526",
    "end": "261867"
  },
  {
    "text": "We have our warehouse\nor S3 bucket or external APIs.",
    "start": "261867",
    "end": "267834"
  },
  {
    "text": "So the code needs to interact\nwith the warehouse",
    "start": "267834",
    "end": "272964"
  },
  {
    "text": "or S3 through a set of APIs\nthat we provide to the end users.",
    "start": "272964",
    "end": "278956"
  },
  {
    "text": "How do you manage the permissions\nof the users to the data?",
    "start": "278956",
    "end": "283906"
  },
  {
    "start": "279000",
    "end": "317000"
  },
  {
    "text": "Okay, so inside GitHub\nwe have a structure of directories.",
    "start": "283907",
    "end": "288960"
  },
  {
    "text": "Every job role in the company",
    "start": "288960",
    "end": "292539"
  },
  {
    "text": "needs to put these files\ninside a specific directory.",
    "start": "292540",
    "end": "296223"
  },
  {
    "text": "Jenkins then decides\naccording to this directory,",
    "start": "296223",
    "end": "299172"
  },
  {
    "text": "which IAM roles and which permissions\nto grant to this user.",
    "start": "299172",
    "end": "303788"
  },
  {
    "text": "The IAM roles are shared\nwith the Fargate task",
    "start": "303788",
    "end": "307900"
  },
  {
    "text": "and the Step Function\nand this is what limits the user",
    "start": "307900",
    "end": "311977"
  },
  {
    "text": "to access our warehouse\nor a data lake.",
    "start": "311977",
    "end": "317134"
  },
  {
    "start": "317000",
    "end": "349000"
  },
  {
    "text": "So you actually separate\nthe data access from the users?",
    "start": "317134",
    "end": "322241"
  },
  {
    "text": "- Yes, users...",
    "start": "322241",
    "end": "323273"
  },
  {
    "text": "- They write the jobs, they don't need\nto care about infrastructure,",
    "start": "323273",
    "end": "325894"
  },
  {
    "text": "they don't need to care\nabout permissions,",
    "start": "325894",
    "end": "327895"
  },
  {
    "text": "the job orchestrator\nactually runs their job.",
    "start": "327895",
    "end": "330889"
  },
  {
    "text": "- Exactly.",
    "start": "330890",
    "end": "331907"
  },
  {
    "text": "All the interaction they have\nis with GitHub or via Slack.",
    "start": "331907",
    "end": "335090"
  },
  {
    "text": "They also get logs through Slack.",
    "start": "335090",
    "end": "337481"
  },
  {
    "text": "They can browse the history\nof the job through Slack.",
    "start": "337481",
    "end": "340115"
  },
  {
    "text": "So as a user, all they have to do\nis to have Slack open,",
    "start": "340115",
    "end": "344376"
  },
  {
    "text": "and GitHub, and commit and push commands\non my hands.",
    "start": "344377",
    "end": "349362"
  },
  {
    "start": "349000",
    "end": "386000"
  },
  {
    "text": "Sounds fun.",
    "start": "349362",
    "end": "350796"
  },
  {
    "text": "How does the platform manage\ndifferent volumes of jobs?",
    "start": "350796",
    "end": "355181"
  },
  {
    "text": "So because we are leveraging\nserverless technologies,",
    "start": "355181",
    "end": "360724"
  },
  {
    "text": "we don't care what happens\ndown underneath our jobs.",
    "start": "360724",
    "end": "366380"
  },
  {
    "text": "I mean, if we have at a point in time,\none job or hundreds of jobs,",
    "start": "366380",
    "end": "371995"
  },
  {
    "text": "it doesn't matter.",
    "start": "371995",
    "end": "373065"
  },
  {
    "text": "The platform runs smoothly.",
    "start": "373065",
    "end": "375709"
  },
  {
    "text": "We depend on ECS Fargate\nand Lambdas,",
    "start": "375709",
    "end": "378305"
  },
  {
    "text": "these can scale very easily.",
    "start": "378305",
    "end": "381974"
  },
  {
    "text": "So basically we reside\non serverless technologies.",
    "start": "381974",
    "end": "386241"
  },
  {
    "start": "386000",
    "end": "411000"
  },
  {
    "text": "Who are the users of the platform?",
    "start": "386241",
    "end": "389102"
  },
  {
    "text": "As I mentioned, users might be\nmachine learning engineers.",
    "start": "389102",
    "end": "393341"
  },
  {
    "text": "They can write jobs\nlike data extraction.",
    "start": "393342",
    "end": "397390"
  },
  {
    "text": "If I'm a data engineer\nthat uses the platform,",
    "start": "397390",
    "end": "400355"
  },
  {
    "text": "I can write my ETL jobs.",
    "start": "400355",
    "end": "402513"
  },
  {
    "text": "If I'm a BI developer analyst,\nI'm using SQL to describe my jobs.",
    "start": "402513",
    "end": "407923"
  },
  {
    "text": "These are the set of users\nwe are serving today.",
    "start": "407923",
    "end": "411584"
  },
  {
    "start": "411000",
    "end": "455000"
  },
  {
    "text": "What type of jobs\ndoes the platform support?",
    "start": "411584",
    "end": "415908"
  },
  {
    "text": "The platform supports,\nactually, any type of job",
    "start": "415908",
    "end": "419474"
  },
  {
    "text": "because we are using\nDocker containers.",
    "start": "419474",
    "end": "421915"
  },
  {
    "text": "We can compress\ninto the Docker container",
    "start": "421915",
    "end": "425388"
  },
  {
    "text": "any kind of language or runtime we want.",
    "start": "425388",
    "end": "429115"
  },
  {
    "text": "Today, we actively support\nSQL and Python,",
    "start": "429115",
    "end": "432630"
  },
  {
    "text": "but users can also provide\na Docker container,",
    "start": "432630",
    "end": "434860"
  },
  {
    "text": "Docker file themselves,",
    "start": "434860",
    "end": "437503"
  },
  {
    "text": "and describe any runtime they want,\nsuch as Node.js code or a JavaScript",
    "start": "437503",
    "end": "443436"
  },
  {
    "text": "or anything that they want to execute.",
    "start": "443437",
    "end": "446040"
  },
  {
    "text": "And the system will treat this job\nas if it was a normal job,",
    "start": "446040",
    "end": "450579"
  },
  {
    "text": "wrap it in the container,",
    "start": "450579",
    "end": "451745"
  },
  {
    "text": "and let the platform\nexecute this job for me.",
    "start": "451745",
    "end": "455916"
  },
  {
    "start": "455000",
    "end": "506000"
  },
  {
    "text": "I assume they are happy users.",
    "start": "455916",
    "end": "457615"
  },
  {
    "text": "Do you have any future plans\nfor the platform?",
    "start": "457615",
    "end": "460327"
  },
  {
    "text": "Definitely.",
    "start": "460327",
    "end": "462083"
  },
  {
    "text": "First, we want to create some console,\nI mean, a UI interface",
    "start": "462083",
    "end": "466644"
  },
  {
    "text": "that will help users to understand\nwhat is the status of their job",
    "start": "466644",
    "end": "470166"
  },
  {
    "text": "if there are other jobs\nthat need to execute as a consequence.",
    "start": "470166",
    "end": "475974"
  },
  {
    "text": "Another feature we want to\nadd is automatically resource tuning.",
    "start": "475975",
    "end": "480457"
  },
  {
    "text": "I mean, if my job failed for resources,",
    "start": "480457",
    "end": "483300"
  },
  {
    "text": "I mean, I didn't allocate enough memory\nto the job,",
    "start": "483300",
    "end": "486255"
  },
  {
    "text": "so we want the platform\nto manage that automatically,",
    "start": "486256",
    "end": "489693"
  },
  {
    "text": "to tune the Fargate task automatically\nfor me.",
    "start": "489693",
    "end": "495115"
  },
  {
    "text": "Thanks, Tomer, for sharing that.",
    "start": "495115",
    "end": "496938"
  },
  {
    "text": "And thank you for watching\n'This is My Architecture.'",
    "start": "496938",
    "end": "499457"
  }
]