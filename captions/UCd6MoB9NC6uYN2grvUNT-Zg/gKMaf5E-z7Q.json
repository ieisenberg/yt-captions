[
  {
    "text": "uh welcome I hope you are all enjoying reinvent so far uh incredibly excited to",
    "start": "1120",
    "end": "6759"
  },
  {
    "text": "have you in this session",
    "start": "6759",
    "end": "10000"
  },
  {
    "text": "today so just by a show of hands I just want to ask a question how many of you",
    "start": "13559",
    "end": "19640"
  },
  {
    "text": "would say building embedded systems is really hard",
    "start": "19640",
    "end": "24800"
  },
  {
    "text": "work no matter what industry you're in whether it's Industrial connected cars",
    "start": "25519",
    "end": "30880"
  },
  {
    "text": "wearables or smart home or any other iot vertical your embedded system have to do",
    "start": "30880",
    "end": "36960"
  },
  {
    "text": "many things at the same time they have to deal with external events be in",
    "start": "36960",
    "end": "43200"
  },
  {
    "text": "ambiguous situations without human interaction then they have other components like managing power",
    "start": "43200",
    "end": "48920"
  },
  {
    "text": "consumption and then on top of that you need to get them connected to the internet so as a customer you're",
    "start": "48920",
    "end": "56039"
  },
  {
    "text": "building your iot backends and your iot applications you feel like you're on a Starship",
    "start": "56039",
    "end": "63199"
  },
  {
    "text": "Enterprise the internet your iot applications the final frontier boldly G",
    "start": "63280",
    "end": "68799"
  },
  {
    "text": "where no one else has gone before my name is w aladan and I'm a",
    "start": "68799",
    "end": "74600"
  },
  {
    "text": "Solutions architect at ad AWS and I help customers on their Cloud journey and uh",
    "start": "74600",
    "end": "80320"
  },
  {
    "text": "connecting your devices and using AWS iot and serverless Technologies is just as fun as uh getting down on a dance",
    "start": "80320",
    "end": "88479"
  },
  {
    "text": "floor so what about about you if you're in this session I assume you know about",
    "start": "88479",
    "end": "93880"
  },
  {
    "text": "AWS iot and the serverless Technologies like Lambda and API",
    "start": "93880",
    "end": "99320"
  },
  {
    "text": "Gateway but I also assume you know about the other services around this ecosystem like Dynamo DB or elastic",
    "start": "99320",
    "end": "108399"
  },
  {
    "text": "search and what will you learn in this session we'll talk about the benefits of serverless iot backends then we'll dive",
    "start": "108399",
    "end": "116079"
  },
  {
    "text": "into the building blocks how can you start actually building your applications using servess technology in",
    "start": "116079",
    "end": "121799"
  },
  {
    "text": "your iot ecosystem then we have the pleasure of having iRobots speak about their customer experience and their use cases",
    "start": "121799",
    "end": "129039"
  },
  {
    "text": "around iot and AWS so we have to start with the",
    "start": "129039",
    "end": "135599"
  },
  {
    "text": "advantages of serus in your iot backends and to understand how s serus",
    "start": "135599",
    "end": "141440"
  },
  {
    "text": "can really help you build your your applications we have to start with the principles of iot architectures in",
    "start": "141440",
    "end": "148040"
  },
  {
    "text": "general so many times you get get started building your infrastructure you're thinking about certain Concepts",
    "start": "148040",
    "end": "153680"
  },
  {
    "text": "like being antifragile or devops or microservices and these are important",
    "start": "153680",
    "end": "159200"
  },
  {
    "text": "for your iot architecture but these are really byproducts of some more higher level",
    "start": "159200",
    "end": "164480"
  },
  {
    "text": "principles around fault tolerance visibility or agility so you want to see your system",
    "start": "164480",
    "end": "170400"
  },
  {
    "text": "and imagine a scenario where your developers can deploy a new business logic without impacting your end devices",
    "start": "170400",
    "end": "177519"
  },
  {
    "text": "that your operations team has visibility to every single event that enters your iot backend all the way through until it",
    "start": "177519",
    "end": "184080"
  },
  {
    "text": "lands into your data warehouse or your or your data Lake and you want to underpin that with",
    "start": "184080",
    "end": "189840"
  },
  {
    "text": "security from the time the device connects all the way up and through the",
    "start": "189840",
    "end": "195920"
  },
  {
    "text": "cloud so what are the advantages of using servus to reach these principles and really design these characteristics",
    "start": "196720",
    "end": "202920"
  },
  {
    "text": "in your iot application when you think about serus is first about scalability with a us",
    "start": "202920",
    "end": "210159"
  },
  {
    "text": "Lambda or API Gateway we scale the number of invocations or we scale as you make more API calls so this removes the",
    "start": "210159",
    "end": "218239"
  },
  {
    "text": "undifferentiated heavy lifting of managing the infrastructure as you add more and more devices to your",
    "start": "218239",
    "end": "224959"
  },
  {
    "text": "Fleet with serverless Technologies you don't pay for Idol so you don't pay until you actually",
    "start": "224959",
    "end": "230879"
  },
  {
    "text": "invoke your land function or make an API request the API Gateway but there's others other",
    "start": "230879",
    "end": "237360"
  },
  {
    "text": "advantages of using serverless technology IES with iot from an architecture perspective",
    "start": "237360",
    "end": "244640"
  },
  {
    "text": "since these services are stateless you have to start thinking about how you want to scale your application from day",
    "start": "244640",
    "end": "252040"
  },
  {
    "text": "one and with iot Centric data and iot Centric ecosystems we all want to strive",
    "start": "252040",
    "end": "257919"
  },
  {
    "text": "for event-driven architectures all of your Telemetry are events all of your telecommands are also",
    "start": "257919",
    "end": "263759"
  },
  {
    "text": "events and by leveraging serverless Technologies you start thinking in this mode of how do I take an event process",
    "start": "263759",
    "end": "270120"
  },
  {
    "text": "it and then send it somewhere else so now do we know the advantages",
    "start": "270120",
    "end": "277160"
  },
  {
    "text": "how can we start working with the building blocks how can we create a blueprint of what services to use and",
    "start": "277160",
    "end": "282720"
  },
  {
    "text": "why we should use them so with our serverless iot backends",
    "start": "282720",
    "end": "288400"
  },
  {
    "text": "we have our foundations AWS iot AWS Lambda or API",
    "start": "288400",
    "end": "293759"
  },
  {
    "text": "Gateway the first building block is around State Management this is what",
    "start": "293759",
    "end": "299680"
  },
  {
    "text": "what are you going to store how are you going to store it and most importantly why do you store that",
    "start": "299680",
    "end": "306520"
  },
  {
    "text": "data the next building block in your serverless iot backends will be the fast pipeline we talked about agility how can",
    "start": "306520",
    "end": "314440"
  },
  {
    "text": "we decouple all of this ingestion and request we're getting from our devices from our backend business logic and our",
    "start": "314440",
    "end": "321440"
  },
  {
    "text": "fast pipelines can help us do that and the last building block in",
    "start": "321440",
    "end": "327479"
  },
  {
    "text": "serverless iot backends is all around operations we need to be able to deploy our functions as a unit and as a group",
    "start": "327479",
    "end": "334639"
  },
  {
    "text": "in a repeatable fashion we also need to have insight into how our application is actually performing do we need to do",
    "start": "334639",
    "end": "341000"
  },
  {
    "text": "some troubleshooting do we need to take something offline so operations becomes a core part of how you design and build",
    "start": "341000",
    "end": "347680"
  },
  {
    "text": "your iot infrastructure on AWS so with these three building blocks",
    "start": "347680",
    "end": "354319"
  },
  {
    "text": "you can create this Rich robust ecosystem where your application is Fault tolerant scalable um highly",
    "start": "354319",
    "end": "362080"
  },
  {
    "text": "durable and you have visibility inside your ecosystem into all the messages you're receiving from your",
    "start": "362080",
    "end": "369280"
  },
  {
    "text": "devices so how about we use an example to dive in a little bit deeper to take those building blocks and actually build",
    "start": "369360",
    "end": "375360"
  },
  {
    "text": "some solutions and build an iot backend using serverless",
    "start": "375360",
    "end": "381240"
  },
  {
    "text": "Technologies for our example we use Smart Transportation so I live in Boston so I take the subway but you can might",
    "start": "382120",
    "end": "388400"
  },
  {
    "text": "do commuter rails you might take a different train so for our application we'll have our trainer Subway publishing",
    "start": "388400",
    "end": "395000"
  },
  {
    "text": "Telemetry about its geolocation where am I on a given",
    "start": "395000",
    "end": "400080"
  },
  {
    "text": "trip we'll have two other things or devices in our ecosystem for this example we'll have our mobile app so our",
    "start": "400080",
    "end": "407360"
  },
  {
    "text": "commuters can take out their phone they can say here I am on my current journey and we can also do things like send",
    "start": "407360",
    "end": "413039"
  },
  {
    "text": "offline push notifications and then we have our turn Styles where you enter and leave a given",
    "start": "413039",
    "end": "418160"
  },
  {
    "text": "station and for for example this will be sending up you know how much foot traffic are we seeing for a given",
    "start": "418160",
    "end": "423720"
  },
  {
    "text": "station on this uh train line so to take this example and start",
    "start": "423720",
    "end": "429960"
  },
  {
    "text": "using the building blocks and show how we can architect these fault tolerant Solutions using serverless iot backends",
    "start": "429960",
    "end": "436120"
  },
  {
    "text": "will first tackle State Management and when you think about serverless you immediately jump to that",
    "start": "436120",
    "end": "441479"
  },
  {
    "text": "first Advantage that I told you about servus being stateless but just because it's",
    "start": "441479",
    "end": "448039"
  },
  {
    "text": "stateless it doesn't mean that that your state doesn't matter it's actually even more important to think about how you",
    "start": "448039",
    "end": "453240"
  },
  {
    "text": "want to manage your state and that falls in two categories the first category is",
    "start": "453240",
    "end": "458800"
  },
  {
    "text": "managing and storing your output so your Orlando function will run it will receive an event it will take in",
    "start": "458800",
    "end": "464720"
  },
  {
    "text": "additional context and then produce an output and then you'll store that in some technology it can be a search uh",
    "start": "464720",
    "end": "471720"
  },
  {
    "text": "index with elastic search or you want to do time series with Dynamo or you want to use land of VPC and store it in an",
    "start": "471720",
    "end": "478199"
  },
  {
    "text": "RDS instance but view that output as a moment in time it's your current state",
    "start": "478199",
    "end": "483319"
  },
  {
    "text": "of your device of or of your ecosystem but there's a second type of",
    "start": "483319",
    "end": "488800"
  },
  {
    "text": "state that's important in serous iot backends and that state is the",
    "start": "488800",
    "end": "494960"
  },
  {
    "text": "individual event itself so you want to store your output you've run a calculation and you've put",
    "start": "494960",
    "end": "500599"
  },
  {
    "text": "it somewhere you also want to store the event that triggers that output so in the example of our smart",
    "start": "500599",
    "end": "507560"
  },
  {
    "text": "transportation we might have the line that our train is riding on in every single current moment we can say here's",
    "start": "507560",
    "end": "514959"
  },
  {
    "text": "what a train is it's a stop one or stop two or stop three and that's our output",
    "start": "514959",
    "end": "520120"
  },
  {
    "text": "but what happens you want to go back in time and say how long did it take my train last week by storing each",
    "start": "520120",
    "end": "526640"
  },
  {
    "text": "individual events your input you can create arbitrary projections on your",
    "start": "526640",
    "end": "531959"
  },
  {
    "text": "data so you have your current time which you're storing your output what does my system look like today but by storing",
    "start": "531959",
    "end": "538440"
  },
  {
    "text": "each individual event you can go back in time you can do inspection you can have a true audit log of your data so with",
    "start": "538440",
    "end": "545320"
  },
  {
    "text": "State we think about both aspects how do you want to store the output and how do you want to store each",
    "start": "545320",
    "end": "551480"
  },
  {
    "text": "event so let's apply this to our smart transportation we talked about our train",
    "start": "551480",
    "end": "557320"
  },
  {
    "text": "and its Journey now we'll talk about the mobile device and getting it onboarded so we're used API Gateway in",
    "start": "557320",
    "end": "564200"
  },
  {
    "text": "Lambda and instead of just storing a calculation of a user and information about his profile we're actually a store",
    "start": "564200",
    "end": "570000"
  },
  {
    "text": "a signup event this allows us again look at these events later on and actually see how users on",
    "start": "570000",
    "end": "575839"
  },
  {
    "text": "boarded so how do we get our output we use dynamodb streams and use",
    "start": "575839",
    "end": "581920"
  },
  {
    "text": "another L function this L function is responsible for creating a thing in AWS",
    "start": "581920",
    "end": "587440"
  },
  {
    "text": "iot giving it permissions or policies and really onboarding the device so it can connect to AWS iot",
    "start": "587440",
    "end": "595360"
  },
  {
    "text": "directly would didn't have a second land function that on board user for offline",
    "start": "595360",
    "end": "600800"
  },
  {
    "text": "SNS so in our example we said we want to give users background pushes because I",
    "start": "600800",
    "end": "605839"
  },
  {
    "text": "may not have my phone on when I'm at work I might say I'm not commuting anymore but I still want to send this",
    "start": "605839",
    "end": "611279"
  },
  {
    "text": "end user information about maintenance or maybe a specific line is down you should take an alternate",
    "start": "611279",
    "end": "616480"
  },
  {
    "text": "route so we're store a different type of output and that's an",
    "start": "616480",
    "end": "621519"
  },
  {
    "text": "SNS we do some other interesting things with state by leveraging the republished",
    "start": "621720",
    "end": "627120"
  },
  {
    "text": "rules in the rules engine so let's say for our devices we want to know which Subway Lines or train",
    "start": "627120",
    "end": "632640"
  },
  {
    "text": "lines are you really interested in I might take a red line and then switch to a green line I might take the commuter",
    "start": "632640",
    "end": "638800"
  },
  {
    "text": "ra one day and another day I might drive so when I open up my app it'll list everything that I subscribed to using",
    "start": "638800",
    "end": "645839"
  },
  {
    "text": "the 80 iot life cycle events and I can directly republish that",
    "start": "645839",
    "end": "651279"
  },
  {
    "text": "information onto my iot shadow so now I have current state using the shadow I",
    "start": "651279",
    "end": "656880"
  },
  {
    "text": "can say which lines is this given device listening",
    "start": "656880",
    "end": "661800"
  },
  {
    "text": "to and going back to our principles just applying Lambda using Dynamo B streams",
    "start": "663560",
    "end": "669279"
  },
  {
    "text": "and API Gateway we're able to achieve some of these high level principles that we wanted to get to we have a fa",
    "start": "669279",
    "end": "675920"
  },
  {
    "text": "tolerant application land will retry and scale on your behalf it's cost sufficient because you're only paying",
    "start": "675920",
    "end": "682040"
  },
  {
    "text": "when your land functions your API requests are being triggered and we have security from the time the device",
    "start": "682040",
    "end": "687720"
  },
  {
    "text": "connects over let's say qtt or websockets through sending it in uh",
    "start": "687720",
    "end": "692800"
  },
  {
    "text": "Lambda via IM roles so when you use servess iot",
    "start": "692800",
    "end": "698360"
  },
  {
    "text": "backends you're going to be leveraging Lambda in different ways but you're also going to be leveraging the rules engine and republishing and subscribing in",
    "start": "698360",
    "end": "705040"
  },
  {
    "text": "different ways as well let's just show an example what these rules might look like so we talked",
    "start": "705040",
    "end": "711079"
  },
  {
    "text": "about our users subscribing to different parts of their Journey their parts of their uh uh train stops so we're in our",
    "start": "711079",
    "end": "717360"
  },
  {
    "text": "rule we'll actually select the topic from our life cycle events for subscriptions and we'll create a new",
    "start": "717360",
    "end": "723120"
  },
  {
    "text": "command we're Transforming Our data to say store this current state directly into this given",
    "start": "723120",
    "end": "730079"
  },
  {
    "text": "device the next building block is your fast pipelines so as your",
    "start": "731839",
    "end": "738000"
  },
  {
    "text": "iot ecosystem grows it's going to be harder and harder to really keep kind of consistent data so you want to look at",
    "start": "738000",
    "end": "744720"
  },
  {
    "text": "ways of eventually uh creating eventually consistent data we can start process processing things in batch or",
    "start": "744720",
    "end": "750440"
  },
  {
    "text": "over time so a fast pipeline is made of three",
    "start": "750440",
    "end": "755800"
  },
  {
    "text": "components you have your producer this will be your rules your land functions or an API call through API",
    "start": "755800",
    "end": "762920"
  },
  {
    "text": "Gateway you have your pipeline itself those are going to be Kinesis sqs",
    "start": "762920",
    "end": "769240"
  },
  {
    "text": "SNS and you have your consumer this will be AWS Lambda or you might have an",
    "start": "769240",
    "end": "774560"
  },
  {
    "text": "internal application that wants to pull this information off as well when it comes to your pipeline you have",
    "start": "774560",
    "end": "780959"
  },
  {
    "text": "many choices for really queuing and then pulling Events off of the system use Kinesis if you want to do",
    "start": "780959",
    "end": "788360"
  },
  {
    "text": "aggregation if you want to say I want to look at a 100 or a thousand events at a given time Kinesis can do that batching",
    "start": "788360",
    "end": "794320"
  },
  {
    "text": "and pull them off in one unit use sqs for doing distributed",
    "start": "794320",
    "end": "799519"
  },
  {
    "text": "transactions I want to process this message just once and once a consumer does it it should delete it and an SNS",
    "start": "799519",
    "end": "806519"
  },
  {
    "text": "can provide broadcast patterns an s S3 is where you store intermet binary or",
    "start": "806519",
    "end": "811959"
  },
  {
    "text": "data that you then want to invoke another land of function to",
    "start": "811959",
    "end": "816839"
  },
  {
    "text": "process so when should you use a fast pipeline so we talked about transforming",
    "start": "817160",
    "end": "822399"
  },
  {
    "text": "your data and sending it in your serverless iot back in you can do that through a republish",
    "start": "822399",
    "end": "828120"
  },
  {
    "text": "rule that we showed earlier you can do that by directly invoking a land function from your iot rules",
    "start": "828120",
    "end": "834839"
  },
  {
    "text": "engine or you can do that through the pipeline look at using pip lines when you have high or unpredictable workloads",
    "start": "834839",
    "end": "842360"
  },
  {
    "text": "even though we scale land the for you there's a number of concurrent requests you can have at a given time so you",
    "start": "842360",
    "end": "847639"
  },
  {
    "text": "expect to have these very bursty workloads use Kinesis to provide that buffer for you or sqs or",
    "start": "847639",
    "end": "854759"
  },
  {
    "text": "S3 also use it for doing event analysis and aggregations so instead of looking at just one event you want to look at 10",
    "start": "854759",
    "end": "861560"
  },
  {
    "text": "or 20 or 100 so let's use fast pipelines in our",
    "start": "861560",
    "end": "867120"
  },
  {
    "text": "application we have our turn stop communicating with our mobile device over the local",
    "start": "867120",
    "end": "872800"
  },
  {
    "text": "network it's going to publish on a Turn Style information about traffic for this given stop and this given",
    "start": "872800",
    "end": "879639"
  },
  {
    "text": "train we'll create a pipeline by using Kinesis but in this case Kinesis fire",
    "start": "879639",
    "end": "884680"
  },
  {
    "text": "hose and then Kinesis fire host can write directly to elastic search I'm not manage any of the infrastructure Kinesis",
    "start": "884680",
    "end": "891600"
  },
  {
    "text": "is batching it for me and then doing a push into elastic search we can also then write that to S3",
    "start": "891600",
    "end": "898759"
  },
  {
    "text": "this becomes another start for a pipeline we can kick off a second job from this",
    "start": "898759",
    "end": "904279"
  },
  {
    "text": "information we have our devices remember we're tracking users as they start their commute and then their commute so the",
    "start": "905480",
    "end": "912320"
  },
  {
    "text": "mobile phone will send updates about where a user is on their trip we still want to store all of these",
    "start": "912320",
    "end": "918399"
  },
  {
    "text": "individual events but since we know they're bursty they're highly unpredictable in this case we use kesa",
    "start": "918399",
    "end": "924759"
  },
  {
    "text": "streams and that will listen to all of the events that are coming from the turn sty as well as all of the events coming",
    "start": "924759",
    "end": "931160"
  },
  {
    "text": "from a mobile phone and now we can aggregate using Lambda and then storing this again in",
    "start": "931160",
    "end": "937519"
  },
  {
    "text": "Dynamo DB giving us essentially history and events of the commuter and a",
    "start": "937519",
    "end": "943920"
  },
  {
    "text": "Subway we also talk about offline I want to do SNS push notifications when my",
    "start": "944319",
    "end": "949800"
  },
  {
    "text": "phone's not connected so we can have a last will in Testament disconnect message that we'll",
    "start": "949800",
    "end": "956839"
  },
  {
    "text": "listen to and then put on to sqs then we can delay this we know that as you travel throughout the day maybe your",
    "start": "956839",
    "end": "963279"
  },
  {
    "text": "phone Cuts in and out because you're going underneath the tunnel so we use sqs to do this as a transaction will",
    "start": "963279",
    "end": "969680"
  },
  {
    "text": "also delay the final execution and using Lander we can get some interesting patterns where we can",
    "start": "969680",
    "end": "975440"
  },
  {
    "text": "pull this off of sqs with one LDA function and then have the second LDA function actually process and do a lot",
    "start": "975440",
    "end": "981000"
  },
  {
    "text": "of the heavy lifting and then have a final place for",
    "start": "981000",
    "end": "986199"
  },
  {
    "text": "storing our output",
    "start": "986199",
    "end": "989720"
  },
  {
    "text": "so with this type of architecture we've added more moving components we're using more landom function we're using",
    "start": "991839",
    "end": "996959"
  },
  {
    "text": "pipelines and we're able to achieve theault tolerance cost efficiency but now we also have additional agility we",
    "start": "996959",
    "end": "1003720"
  },
  {
    "text": "can take these functions offline and still process data we can still have it sit there until we're ready to uh take",
    "start": "1003720",
    "end": "1009199"
  },
  {
    "text": "action on it so our last building block is around",
    "start": "1009199",
    "end": "1015440"
  },
  {
    "text": "iot operations we think about iot operations we have to think about logging in",
    "start": "1015440",
    "end": "1021440"
  },
  {
    "text": "metrics inside of our system and it'll be different when you're using serverless Technologies because these are all",
    "start": "1021440",
    "end": "1027720"
  },
  {
    "text": "running Lambda to get the same consistent view of what metrics you're publishing and what logs you have you",
    "start": "1027720",
    "end": "1034160"
  },
  {
    "text": "should have a shared library in your Lambda functions that say here's the output we want for storing logs here's",
    "start": "1034160",
    "end": "1040720"
  },
  {
    "text": "how you actually write metrics so you're unifying all these land functions under one stack and format you should enable",
    "start": "1040720",
    "end": "1048000"
  },
  {
    "text": "the ad iio cloudwatch logs you can listen to these logs and then make recommendations about what to do",
    "start": "1048000",
    "end": "1054840"
  },
  {
    "text": "next from a deployment perspective you use a US cloud formation but then you'll",
    "start": "1054840",
    "end": "1060559"
  },
  {
    "text": "be grouping all your individual functions as services and now that you have cloud",
    "start": "1060559",
    "end": "1067480"
  },
  {
    "text": "formation you're treating as infrastructure as code for a service and you're listening to all the logs and metrics and correlating them with",
    "start": "1067480",
    "end": "1074039"
  },
  {
    "text": "individual applications you're able to create more fault tolerance you can then then say if my land function starts to",
    "start": "1074039",
    "end": "1080320"
  },
  {
    "text": "error out listening to Kinesis stop that function from running so I can do an analysis and then send an alarm to my",
    "start": "1080320",
    "end": "1086799"
  },
  {
    "text": "operations team so they can look at did I just deploy a new code um is it timing out for a different reason because you",
    "start": "1086799",
    "end": "1093159"
  },
  {
    "text": "can deploy really quickly and now you have more metrics coming through using cloudwatch logs and metrics you can",
    "start": "1093159",
    "end": "1099840"
  },
  {
    "text": "really Drive some uh Grace or degradation modes and and and other modes of really actioning on your",
    "start": "1099840",
    "end": "1106520"
  },
  {
    "text": "request so let's add that to our smart",
    "start": "1106520",
    "end": "1112640"
  },
  {
    "text": "transportation we want to listen to how our rules are performing because it has application logic so we're actually use",
    "start": "1112840",
    "end": "1118480"
  },
  {
    "text": "Kinesis we use a fast pipeline hook that up to Lambda and now we can write a unified log of is this rule functioning",
    "start": "1118480",
    "end": "1124880"
  },
  {
    "text": "correctly am I seeing output that I'm",
    "start": "1124880",
    "end": "1128559"
  },
  {
    "text": "expecting we're going to have for ourl function a shared library that says here's how you write to spe specific",
    "start": "1130320",
    "end": "1136880"
  },
  {
    "text": "logs in a specific format and here's how you write your metrics so we can also trigger alarms off of",
    "start": "1136880",
    "end": "1142559"
  },
  {
    "text": "that and by doing this we add visibility to our",
    "start": "1142559",
    "end": "1148000"
  },
  {
    "text": "architecture so when you look at the rules engine that example of publishing how your rule is interacting for a given",
    "start": "1148000",
    "end": "1154520"
  },
  {
    "text": "event your rules will look a little bit different you won't just have the payload with the select star you'll have",
    "start": "1154520",
    "end": "1160480"
  },
  {
    "text": "things like the new uu ID or a trace ID so you can track this individual request",
    "start": "1160480",
    "end": "1166120"
  },
  {
    "text": "you'll have a time stamp when did I actually see this hit the broker and hit AWS iot then you also pull context off",
    "start": "1166120",
    "end": "1173120"
  },
  {
    "text": "of the mqtt topic itself so I want the ID of the Subway or the",
    "start": "1173120",
    "end": "1179840"
  },
  {
    "text": "station and we talked about the agility aspect using our functions it's code so",
    "start": "1180240",
    "end": "1185840"
  },
  {
    "text": "you wrap your cloud formation templates uh you wrap your Landing functions as units in cloud formation so all these",
    "start": "1185840",
    "end": "1192000"
  },
  {
    "text": "templates you can deoy independently one team can own not just the rules but the entire pipeline from when a a message h",
    "start": "1192000",
    "end": "1198799"
  },
  {
    "text": "the iot system all the way through your back end and even though these are they are",
    "start": "1198799",
    "end": "1205640"
  },
  {
    "text": "separate units you have times where your land function where need to actually communicate with another",
    "start": "1205640",
    "end": "1210919"
  },
  {
    "text": "service and so you can either share data directly via land functions or have an interface with API Gateway or an",
    "start": "1210919",
    "end": "1217720"
  },
  {
    "text": "internal interface with another Lambda function so in our smart Transportation",
    "start": "1217720",
    "end": "1225120"
  },
  {
    "text": "example we just Ed these three building blocks we figured out why we needed to store data or process it or how we",
    "start": "1225120",
    "end": "1231120"
  },
  {
    "text": "wanted to process it and then we moved it through the system of how fast do we get it should we use a pipeline or not",
    "start": "1231120",
    "end": "1236240"
  },
  {
    "text": "use a pipeline and then we covered how you can add more context so you can do",
    "start": "1236240",
    "end": "1242400"
  },
  {
    "text": "operations I now have the pleasure of introducing iRobots so they can talk more about their use cases and journey to the",
    "start": "1242400",
    "end": "1249440"
  },
  {
    "text": "cloud thanks W hi I'm Ben kho I'm A Cloud robotics",
    "start": "1249440",
    "end": "1254960"
  },
  {
    "text": "research scientist at iroot um and I like to be outside",
    "start": "1254960",
    "end": "1260120"
  },
  {
    "text": "so we're IR robot we are the consumer robot company uh we make the Roomba which you may be familiar with and",
    "start": "1260120",
    "end": "1265799"
  },
  {
    "text": "occasionally serves as intelligent transportation for cats uh we also make the Bravo jet which is a floor mopping",
    "start": "1265799",
    "end": "1272600"
  },
  {
    "text": "robot and uh but we're not a floor care company right we're a robot company",
    "start": "1272600",
    "end": "1278919"
  },
  {
    "text": "we've been around for 25 years and we have a history of working in many different areas in robotics but beyond",
    "start": "1278919",
    "end": "1284919"
  },
  {
    "text": "that we're also a smart home company we believe that robots can provide a unique",
    "start": "1284919",
    "end": "1290320"
  },
  {
    "text": "benefit to the smart home in that as mobile sensing and actuation platforms",
    "start": "1290320",
    "end": "1296640"
  },
  {
    "text": "they build and maintain maps of the home over time and that can provide value to uh through its spatial context to other",
    "start": "1296640",
    "end": "1304279"
  },
  {
    "text": "smart home devices however uh we have a long way to go to achieve that smart home dream",
    "start": "1304279",
    "end": "1310480"
  },
  {
    "text": "where you just live your life and the house does the right thing right you buy",
    "start": "1310480",
    "end": "1316039"
  },
  {
    "text": "a new bulb you screw it in the house picks up that there's a new bulb there configures it integrates it with your",
    "start": "1316039",
    "end": "1322120"
  },
  {
    "text": "existing scenes and then over time adapts to your preferences right you may have a voice user interface where you're",
    "start": "1322120",
    "end": "1328880"
  },
  {
    "text": "communicating with it and saying I didn't like that that much and it learns from you and as the seasons change and",
    "start": "1328880",
    "end": "1335159"
  },
  {
    "text": "your uh preferences change it will change with you but uh to get there we have a",
    "start": "1335159",
    "end": "1342640"
  },
  {
    "text": "foundational milestone in our Roomba 900 series which is both connected and systematically navigate so it builds",
    "start": "1342640",
    "end": "1349240"
  },
  {
    "text": "maps and uh so in the uh little over a year since we've uh We've released this",
    "start": "1349240",
    "end": "1356080"
  },
  {
    "text": "m nearly a billion square feet and uh we think that this will enable us to start",
    "start": "1356080",
    "end": "1361880"
  },
  {
    "text": "providing those smart home user experiences that we want uh users to",
    "start": "1361880",
    "end": "1368039"
  },
  {
    "text": "have so now understanding what that means for us um if you're in",
    "start": "1368520",
    "end": "1373799"
  },
  {
    "text": "iot your users pay for your device once right they buy it at the store they take it home and they connect it to the cloud",
    "start": "1373799",
    "end": "1381320"
  },
  {
    "text": "and then you have to pay the cloud cost for the life of that device and what that means is that the better that the mechanical and electrical engineers do",
    "start": "1381320",
    "end": "1388240"
  },
  {
    "text": "their jobs the more the cloud costs the company and so if you have a subscription model right or fremium",
    "start": "1388240",
    "end": "1394760"
  },
  {
    "text": "model you can get recurring Revenue that will uh offset some of those costs but",
    "start": "1394760",
    "end": "1400120"
  },
  {
    "text": "if you don't uh or if your premium model is that you have you know a wide user",
    "start": "1400120",
    "end": "1405640"
  },
  {
    "text": "base that's not uh subscribing you want to minimize your Cloud cost as much as possible and that drives a lot of our",
    "start": "1405640",
    "end": "1412720"
  },
  {
    "text": "architectural decisions so why do we choose serverless at I Robot um we have experience",
    "start": "1412720",
    "end": "1419440"
  },
  {
    "text": "building devices not Cloud applications the uh Roomba predates AWS by four years",
    "start": "1419440",
    "end": "1425320"
  },
  {
    "text": "and our Fleet is already at scale we sell you know a lot of robots and uh so",
    "start": "1425320",
    "end": "1432000"
  },
  {
    "text": "while only our top of the line is currently connected that's going to roll out through our product line you know in",
    "start": "1432000",
    "end": "1437120"
  },
  {
    "text": "the near future and so we have this tidal wave of connected devices coming and we know that it's coming we know what the scale it's going to be and so",
    "start": "1437120",
    "end": "1443760"
  },
  {
    "text": "we have to build a cloud system that will meet that Demand with serverless that allowed us to skip the undifferentiated heavy",
    "start": "1443760",
    "end": "1449960"
  },
  {
    "text": "lifting step we didn't have to learn how to provision and scale traditional architectures uh as part of scaling up",
    "start": "1449960",
    "end": "1457039"
  },
  {
    "text": "we were able to skip that step and say we don't want to manage that we'll have AWS do it and we will just write",
    "start": "1457039",
    "end": "1462960"
  },
  {
    "text": "business logic so the architecture then",
    "start": "1462960",
    "end": "1468919"
  },
  {
    "text": "what does it look like we have you know some cloudside features that we need to support that enable interaction between",
    "start": "1468919",
    "end": "1475880"
  },
  {
    "text": "the uh our app and the robot as well as enabling analytics for us and to support",
    "start": "1475880",
    "end": "1481320"
  },
  {
    "text": "those features we use a lot of AWS Services 20 plus I don't think we're at",
    "start": "1481320",
    "end": "1486679"
  },
  {
    "text": "quite at 50% of available Services yet um went down again with the keynote today but uh it's it's quite a number",
    "start": "1486679",
    "end": "1493799"
  },
  {
    "text": "and you'll notice that there is no ec2 up there we don't use any bare ec2 instances we use elastic search and red",
    "start": "1493799",
    "end": "1499840"
  },
  {
    "text": "shift which both have managed instances that are kind of hidden from you so that's sort of on the serverless",
    "start": "1499840",
    "end": "1505919"
  },
  {
    "text": "Spectrum in my opinion but what does it look like right so before serverless architecture you're",
    "start": "1505919",
    "end": "1512279"
  },
  {
    "text": "writing some code that goes on ac2 and you've got functions that are interacting with each other and you're",
    "start": "1512279",
    "end": "1517760"
  },
  {
    "text": "storing that in some state or maybe you've got a database that's sort of nearby in same subnet something like",
    "start": "1517760",
    "end": "1524360"
  },
  {
    "text": "that and when you go to serverless architecture you're exploding that right you're",
    "start": "1524360",
    "end": "1530440"
  },
  {
    "text": "taking each of those functions and wrapping it in an individual Lambda function and you're moving that stayed",
    "start": "1530440",
    "end": "1536520"
  },
  {
    "text": "out to Dynamo DB and one of the results there right is that in uh some of these functions all",
    "start": "1536520",
    "end": "1542760"
  },
  {
    "text": "you're doing isn't making SDK calls and those SDK calls are more complicated",
    "start": "1542760",
    "end": "1548240"
  },
  {
    "text": "than the original local calls that you were making right you have way more error conditions to handle your happy",
    "start": "1548240",
    "end": "1554480"
  },
  {
    "text": "path is still the same but you're dealing with a lot more different pieces and when you actually get to what a real",
    "start": "1554480",
    "end": "1560360"
  },
  {
    "text": "service might look like this is just one flow in our system where to register a robot right sending something up to API",
    "start": "1560360",
    "end": "1567320"
  },
  {
    "text": "Gateway it's checking that certificate uh putting it on a queue so we can make sure that these robots absolutely get",
    "start": "1567320",
    "end": "1573720"
  },
  {
    "text": "registered when they talk that we don't drop that on the floor if something's wrong we're reading off that queue and",
    "start": "1573720",
    "end": "1579880"
  },
  {
    "text": "then we're talking to the shadows and we're setting up permissions and admitting life cycle events and you know",
    "start": "1579880",
    "end": "1585200"
  },
  {
    "text": "logging all of this right and this looks really complicated but if you think about all the things that you would need to do if you were",
    "start": "1585200",
    "end": "1591240"
  },
  {
    "text": "building this as a monolith all of those pieces would be in there and your call diagram would look like this right and",
    "start": "1591240",
    "end": "1597799"
  },
  {
    "text": "so the lesson is that when you go serverless your call graph becomes your component graph it moves into your",
    "start": "1597799",
    "end": "1603559"
  },
  {
    "text": "infrastructure and there's an important consequence of this right it it ends up being that your infrastructure is more",
    "start": "1603559",
    "end": "1609240"
  },
  {
    "text": "complicated but it means that you're treating distributed systems thinking from the get-go right it moves from the",
    "start": "1609240",
    "end": "1616200"
  },
  {
    "text": "boundaries where you think about you you know just sort of how a couple of these systems work with each other into I need",
    "start": "1616200",
    "end": "1622760"
  },
  {
    "text": "to think about this for every step of the process right tools like chaos monkey exist to remind us that we we're",
    "start": "1622760",
    "end": "1631039"
  },
  {
    "text": "writing uh distributed systems code with serverless it's evident you still need to be mindful of it and work hard to do",
    "start": "1631039",
    "end": "1637399"
  },
  {
    "text": "it and do testing under degraded systems but you at least it's sort of more",
    "start": "1637399",
    "end": "1643320"
  },
  {
    "text": "upfront and less hidden that that's what you're doing that's going to cause you to build robust by Design systems right",
    "start": "1643320",
    "end": "1648679"
  },
  {
    "text": "you're going to go with event based strategies you're going to go with cqrs that will allow you to handle these cases more",
    "start": "1648679",
    "end": "1655799"
  },
  {
    "text": "readily at the same time a lot of people think that serverless and functions as a",
    "start": "1657279",
    "end": "1662320"
  },
  {
    "text": "service mean microservices that's not really true right it's this component graph equals call graph idea where if",
    "start": "1662320",
    "end": "1669960"
  },
  {
    "text": "you look at your call graph in a traditional system and it's a very tightly coupled web you're building a monolith and if you look at your call",
    "start": "1669960",
    "end": "1676120"
  },
  {
    "text": "graph and it's a bunch of little tiny webs that are interconnected by sparse connections you're building microservices the same is true of your",
    "start": "1676120",
    "end": "1682760"
  },
  {
    "text": "infrastructure in serverless if you build serverless infrastructure where all of your components are talking to",
    "start": "1682760",
    "end": "1689120"
  },
  {
    "text": "each other then you're building a monolith and if you can separate that out into little pieces then you're building microservices now at the same",
    "start": "1689120",
    "end": "1695880"
  },
  {
    "text": "time it doesn't Naturally Fit with microservices often because you can wrap an individual Lambda function or a small",
    "start": "1695880",
    "end": "1701679"
  },
  {
    "text": "group uh but it also behooves us to ask why do we actually choose these microservices in the first place so for",
    "start": "1701679",
    "end": "1708960"
  },
  {
    "text": "coding right it eases development because you're working on something that's easier to understand it makes",
    "start": "1708960",
    "end": "1715200"
  },
  {
    "text": "testing easier it makes uh M maintenance easier right all of this sort of reduces",
    "start": "1715200",
    "end": "1720519"
  },
  {
    "text": "the scope that you have to keep in mind it's also easier for deployment right you have smaller units of deployment so",
    "start": "1720519",
    "end": "1725919"
  },
  {
    "text": "it's easier to manage and you get organizational benefits right if the teams are more decoupled they can have fewer meetings um and you'll see in this",
    "start": "1725919",
    "end": "1733600"
  },
  {
    "text": "talk I Ed that sort of circle diagram to mean microservices a couple of times",
    "start": "1733600",
    "end": "1739919"
  },
  {
    "text": "if you have microservices they need to communicate and in traditional architectures that's usually RPC some",
    "start": "1740519",
    "end": "1747399"
  },
  {
    "text": "often HTTP maybe grpc maybe a message bus but when your serverless you kind of only have one option which is HTTP over",
    "start": "1747399",
    "end": "1755519"
  },
  {
    "text": "API Gateway and you'll see that that's kind of like baked into the serverless framework and things like that but it",
    "start": "1755519",
    "end": "1761519"
  },
  {
    "text": "has implications and I'd like to talk about that so imagine right a permissions",
    "start": "1761519",
    "end": "1767559"
  },
  {
    "text": "service where that maintains the permissions between a user and a device and it's essentially at its core a",
    "start": "1767559",
    "end": "1774200"
  },
  {
    "text": "database right that maintains those links but suppose that it's not just a database that it's also contains some",
    "start": "1774200",
    "end": "1779840"
  },
  {
    "text": "encrypted information so you need KMS which means you need some like processing involved there too and the",
    "start": "1779840",
    "end": "1785399"
  },
  {
    "text": "typical answer is then okay well we'll put a Lambda function in there and we'll put API Gateway in front of it and then",
    "start": "1785399",
    "end": "1792240"
  },
  {
    "text": "we'll use that that works and when you have a service that says what has my",
    "start": "1792240",
    "end": "1797600"
  },
  {
    "text": "device been been doing for the past you know month it needs to check do you have permission to access that device and so",
    "start": "1797600",
    "end": "1804880"
  },
  {
    "text": "this Lambda that's going to return through say an API Gateway call some history of your device has got to go",
    "start": "1804880",
    "end": "1811360"
  },
  {
    "text": "into permissions and call that API Gateway which calls Lambda which talks to KMS and Dynamo",
    "start": "1811360",
    "end": "1817200"
  },
  {
    "text": "DB but that means you get extra latency right that API Gateway adds some latency",
    "start": "1817200",
    "end": "1823360"
  },
  {
    "text": "because you're actually going all the way back out to Cloud front and then the Lambda behind it has some Laten where it's doing that processing and not only",
    "start": "1823360",
    "end": "1830840"
  },
  {
    "text": "does the permissions Lambda cost you money while it's running but the Lambda",
    "start": "1830840",
    "end": "1837240"
  },
  {
    "text": "that's calling it which is waiting is also costing you money in a traditional",
    "start": "1837240",
    "end": "1843440"
  },
  {
    "text": "architecture with async iio you're able to you you spend basically no marginal cost on waiting for a high latency",
    "start": "1843440",
    "end": "1851399"
  },
  {
    "text": "service but in serverless architecture that's not true now if you're able to go very heavily event-based where you can",
    "start": "1851399",
    "end": "1857720"
  },
  {
    "text": "make asynchronous invocations you can get around some of this but if if you if",
    "start": "1857720",
    "end": "1863399"
  },
  {
    "text": "your entry point is API Gateway from like your mobile client as an example then you essentially have to make all",
    "start": "1863399",
    "end": "1869480"
  },
  {
    "text": "asynchronous calls behind it and you run into this problem so there is an alternative and the alternative is",
    "start": "1869480",
    "end": "1876360"
  },
  {
    "text": "directly accessing resources in another service and your initial thought should",
    "start": "1876360",
    "end": "1881639"
  },
  {
    "text": "be that you're horrified because how does this how do you get separation of concerns here and we address this by by",
    "start": "1881639",
    "end": "1888120"
  },
  {
    "text": "having sdks defined for our services and you can do this already right even if you're going the the typical route API",
    "start": "1888120",
    "end": "1895399"
  },
  {
    "text": "Gateway will generate sdks for you and those sdks are thin wrappers around HTTP calls that will you know they handle the",
    "start": "1895399",
    "end": "1902440"
  },
  {
    "text": "sigv4 authentication and things like that for you but essentially they're very thin wrappers but what we do is we",
    "start": "1902440",
    "end": "1908320"
  },
  {
    "text": "say the service can provide a thick SDK a thick client that talks directly to KMS and Dynamo DB and then that's",
    "start": "1908320",
    "end": "1916080"
  },
  {
    "text": "defined with as an example the permissions uh",
    "start": "1916080",
    "end": "1921120"
  },
  {
    "text": "service but when it gets deployed it's bundled with the history service and so the downside here right",
    "start": "1921120",
    "end": "1928559"
  },
  {
    "text": "is that while it's well separated in the code when you deploy you get all this coupling if you update the schema in the",
    "start": "1928559",
    "end": "1935480"
  },
  {
    "text": "database even though the API which is still just does this user have permission to this",
    "start": "1935480",
    "end": "1940760"
  },
  {
    "text": "device uh that SDK has to change and so you have to redeploy all the",
    "start": "1940760",
    "end": "1946000"
  },
  {
    "text": "callers so you have highlighted a couple deployments which means while you've got microservices in code you've got a",
    "start": "1946000",
    "end": "1952639"
  },
  {
    "text": "monolith in deployment right so you get some of those microservice benefits but not all of them I'm going to argue that this is",
    "start": "1952639",
    "end": "1959880"
  },
  {
    "text": "okay for our use case where we're driven by uh reducing cost this is uh a good",
    "start": "1959880",
    "end": "1966399"
  },
  {
    "text": "way of achieving that but first that monolith that we're deploying how do we deploy it right so",
    "start": "1966399",
    "end": "1974000"
  },
  {
    "text": "we'd like to not deploy in place that's you know at scale a White Knuckle experience you got",
    "start": "1974000",
    "end": "1980200"
  },
  {
    "text": "to just hope everything works so you want to do some kind of phase roll out and there terminology for this that",
    "start": "1980200",
    "end": "1987600"
  },
  {
    "text": "is kind of arbitrary people use it to mean different things so I'm just going to arbitrarily pick uh this if you have",
    "start": "1987600",
    "end": "1994039"
  },
  {
    "text": "blue green you're updating behind the load balancer so your endpoint stays the same the client sees no difference and",
    "start": "1994039",
    "end": "2000399"
  },
  {
    "text": "the workers containers whatever uh change there and this is essentially",
    "start": "2000399",
    "end": "2005679"
  },
  {
    "text": "what API Gateway and Lambda do when you do an inplace update is their load",
    "start": "2005679",
    "end": "2010760"
  },
  {
    "text": "balancer stays the same and their Lambda containers that are handling your requests are getting rolled out but they",
    "start": "2010760",
    "end": "2017600"
  },
  {
    "text": "don't provide that uh functionality to you you can't choose how quickly to roll",
    "start": "2017600",
    "end": "2023360"
  },
  {
    "text": "that out or start rolling it back before it's all done on the other hand what",
    "start": "2023360",
    "end": "2028679"
  },
  {
    "text": "I'll call red black where you're standing up uh two copies so two load balancers two endpoints with uh",
    "start": "2028679",
    "end": "2036720"
  },
  {
    "text": "completely separate containers workers whatever you want to call it behind and then you're switching the client from",
    "start": "2036720",
    "end": "2042159"
  },
  {
    "text": "one end point to the other so we can do this on serverless uh but normally this is a",
    "start": "2042159",
    "end": "2049638"
  },
  {
    "text": "little bit of a the downside here is often well I don't want to set up a whole new system it's going to cost me a bunch of money but we're not paying for",
    "start": "2049639",
    "end": "2056079"
  },
  {
    "text": "Idol with serverless architectures so you can put it up there and it's if no traffic's going to it it doesn't cost you anything so that's the route that we",
    "start": "2056079",
    "end": "2063960"
  },
  {
    "text": "go but then you ask right is this per service or is this the whole system",
    "start": "2063960",
    "end": "2069599"
  },
  {
    "text": "right are you doing the entire application all the services all together and for us because we have that highly coupled deployments we do the",
    "start": "2069599",
    "end": "2076240"
  },
  {
    "text": "ladder but again you don't pay for idle so set standing up a new copy of the system is not any extra",
    "start": "2076240",
    "end": "2082800"
  },
  {
    "text": "cost and uh it's scalable in the number of services you're setting all these",
    "start": "2082800",
    "end": "2088118"
  },
  {
    "text": "Services up in parallel essentially so there's not much overhead for setting up",
    "start": "2088119",
    "end": "2093440"
  },
  {
    "text": "uh 100 Services more than 10 Services it's not scalable Cadence as you can",
    "start": "2093440",
    "end": "2099320"
  },
  {
    "text": "imagine if you know you've got V1 and you deploy V2 and you're switching clients over and now you want to deploy",
    "start": "2099320",
    "end": "2106440"
  },
  {
    "text": "V3 how the client should be switched over to that new deployment is not very clear so we we stick with you know a",
    "start": "2106440",
    "end": "2114000"
  },
  {
    "text": "fixed Cadence where if you want to have your teams very decoupled where they can choose to deploy their own code at their",
    "start": "2114000",
    "end": "2119520"
  },
  {
    "text": "Leisure this pattern isn't going to work so now this brings up how do you",
    "start": "2119520",
    "end": "2124839"
  },
  {
    "text": "switch clients over right you've got a client that's talking to red. example.com and you want them to move to",
    "start": "2124839",
    "end": "2132280"
  },
  {
    "text": "Black and so you need some way of pushing them over a traditional answer is DNS where",
    "start": "2132280",
    "end": "2139160"
  },
  {
    "text": "you've got a well-known domain prod. example.com that returns a cname to your deployment and that pushes them there",
    "start": "2139160",
    "end": "2146400"
  },
  {
    "text": "and then you can update that for some percentage and send them over now there's some you know tricky issues with",
    "start": "2146400",
    "end": "2153040"
  },
  {
    "text": "this anyway with you know DNS clients it's a little easier in iot because often you control the entire uh Network",
    "start": "2153040",
    "end": "2160240"
  },
  {
    "text": "stack on your device but there's other problems cloudfront custom domains which is how",
    "start": "2160240",
    "end": "2166319"
  },
  {
    "text": "uh API Gateway custom domains are implemented you can't have the same",
    "start": "2166319",
    "end": "2171480"
  },
  {
    "text": "custom domain on multiple cloudfront distributions or multiple apis so if you say prod. example.com is red.",
    "start": "2171480",
    "end": "2179599"
  },
  {
    "text": "example.com you can't say that a cname to prod. example.com will be able to",
    "start": "2179599",
    "end": "2186160"
  },
  {
    "text": "Route over to Black and uh I've seen some uh the my talk group actually a couple days ago",
    "start": "2186160",
    "end": "2192200"
  },
  {
    "text": "released a pattern that allows them to do this by sort of shuffling around domains but it's it's definitely uh a",
    "start": "2192200",
    "end": "2198880"
  },
  {
    "text": "workaround and so we didn't take this route instead we have a separate service",
    "start": "2198880",
    "end": "2204000"
  },
  {
    "text": "where it's a well-known URL servicec discovery. example.com and it returns a",
    "start": "2204000",
    "end": "2210599"
  },
  {
    "text": "payload that says your host is red. example.com and then that will change",
    "start": "2210599",
    "end": "2215839"
  },
  {
    "text": "and move the client over and there's a there's a lot of benefits to this uh we have multiple endpoints right we have",
    "start": "2215839",
    "end": "2221920"
  },
  {
    "text": "API Gateway and an mqtt endpoint for AWS iot we can keep the clients in sync for",
    "start": "2221920",
    "end": "2227800"
  },
  {
    "text": "that we have multi- region deployments that can uh be moved move clients over",
    "start": "2227800",
    "end": "2234280"
  },
  {
    "text": "transparently whether it's a deployment within a region or moving uh robots",
    "start": "2234280",
    "end": "2240200"
  },
  {
    "text": "between regions right uh you still have to deploy deploy this",
    "start": "2240200",
    "end": "2248319"
  },
  {
    "text": "service right and you can't just have service Discovery all the way down so you need some way of deploying that",
    "start": "2248319",
    "end": "2254040"
  },
  {
    "text": "service and for that we use cloudfront and so in this model you're",
    "start": "2254040",
    "end": "2260359"
  },
  {
    "text": "switching people over by updating the distribution config in a in Cloud front",
    "start": "2260359",
    "end": "2265760"
  },
  {
    "text": "to from have the origin go from red to Black and then you have a custom domain",
    "start": "2265760",
    "end": "2270800"
  },
  {
    "text": "for that well-known domain sitting on your Cloud front Now API Gateway uses",
    "start": "2270800",
    "end": "2276520"
  },
  {
    "text": "cloudfront so you're putting cloudfront in front of cloudfront which is a little wacky um but we get this benefit from uh",
    "start": "2276520",
    "end": "2284160"
  },
  {
    "text": "the red black switch over and so we think uh that it's useful for that you can also serve out static files along",
    "start": "2284160",
    "end": "2290319"
  },
  {
    "text": "with that and if they change during a deployment you can switch the whole distribution config over and your static",
    "start": "2290319",
    "end": "2295760"
  },
  {
    "text": "files will be in sync with your API so uh I want to switch gears here a",
    "start": "2295760",
    "end": "2303000"
  },
  {
    "text": "little bit and talk about some patterns for AWS iot and so the first is how to do secure",
    "start": "2303000",
    "end": "2309240"
  },
  {
    "text": "file transfer so the problem is that you have a device and say an S3 bucket and",
    "start": "2309240",
    "end": "2315079"
  },
  {
    "text": "either you want to upload a file to there or you want to download a file from there but your device doesn't have",
    "start": "2315079",
    "end": "2320319"
  },
  {
    "text": "AWS credentials right it has a certificate that enables it to talk to AWS",
    "start": "2320319",
    "end": "2325880"
  },
  {
    "text": "iot but it doesn't have a you know access key and secret",
    "start": "2325880",
    "end": "2331680"
  },
  {
    "text": "key so you but you don't want to leave that S3 bucket uh open to unauthenticated calls",
    "start": "2331680",
    "end": "2338440"
  },
  {
    "text": "so what you can do you can access AWS iot and ask for a way to get there so you publish a request that says I want",
    "start": "2338440",
    "end": "2344359"
  },
  {
    "text": "to upload something and it goes into a Lambda and the Lambda talks to S3 and using the SDK I mean you can build these",
    "start": "2344359",
    "end": "2350240"
  },
  {
    "text": "yourselves but the SDK makes it easy you can get a pre-signed URL and these pre-signed URLs have credentials in the",
    "start": "2350240",
    "end": "2356720"
  },
  {
    "text": "URL in the in the query string that are scoped just to the API call and the",
    "start": "2356720",
    "end": "2362079"
  },
  {
    "text": "parameters that you specify and only for a limited duration so it helps you keep that very secure and you can deliver",
    "start": "2362079",
    "end": "2369200"
  },
  {
    "text": "that back down to the robot and the robot just making a plain htps call",
    "start": "2369200",
    "end": "2374880"
  },
  {
    "text": "right you don't have to muck with the headers or anything you can just send that right along to S3 either a get to",
    "start": "2374880",
    "end": "2381839"
  },
  {
    "text": "downloader or a put to upload but now suppose that you want to",
    "start": "2381839",
    "end": "2387760"
  },
  {
    "text": "encrypt that object right and not serers side encryption uh the distinction here",
    "start": "2387760",
    "end": "2392960"
  },
  {
    "text": "is you know you can check the box for serers side encryption on S3 and in my opinion that gets you",
    "start": "2392960",
    "end": "2399480"
  },
  {
    "text": "essentially just Regulatory Compliance it protects against someone in AWS stealing a hard drive and inspecting",
    "start": "2399480",
    "end": "2405839"
  },
  {
    "text": "what's on it if they compromise your credentials or your permissions and they can access that bucket through the API",
    "start": "2405839",
    "end": "2411560"
  },
  {
    "text": "they get the plain text so instead you want to encrypt that object yourself when you put it in there so that that if",
    "start": "2411560",
    "end": "2417440"
  },
  {
    "text": "they have access to your bucket they still can't use the data that's in it so you want to have that encrypted in a way",
    "start": "2417440",
    "end": "2423560"
  },
  {
    "text": "that the cloud can understand and the robot can understand but they don't share any secrets at least not uh",
    "start": "2423560",
    "end": "2430319"
  },
  {
    "text": "initially so KMS will give you a symmetric encryption key and you want to use symmetric encryption because it's",
    "start": "2430319",
    "end": "2436400"
  },
  {
    "text": "faster than asymmetric uh and this is what the cloud will use to decrypt the the objects in",
    "start": "2436400",
    "end": "2443280"
  },
  {
    "text": "S3 but you uh you don't want to just send that down plainly to the robot because if anyone's listening into that",
    "start": "2443280",
    "end": "2449839"
  },
  {
    "text": "connection they get your symmetric key and then they can see all the data that's in your S3 bucket luckily the",
    "start": "2449839",
    "end": "2457400"
  },
  {
    "text": "public key is on the certificate which is stored in AWS iot so you have a way",
    "start": "2457400",
    "end": "2462880"
  },
  {
    "text": "just out of having registered your device with AWS iot to encrypt information in a way that only your",
    "start": "2462880",
    "end": "2469760"
  },
  {
    "text": "device can decrypt it and you send that back down to the device which then",
    "start": "2469760",
    "end": "2476560"
  },
  {
    "text": "decrypts the symmetric key with its private key and then you can make that transfer either it encrypts it and",
    "start": "2476560",
    "end": "2483319"
  },
  {
    "text": "uploads or downloads it and decrypts so continuing a little bit on security",
    "start": "2483319",
    "end": "2489119"
  },
  {
    "text": "but moving into uh certificates more specifically a huge benefit that I don't",
    "start": "2489119",
    "end": "2495680"
  },
  {
    "text": "think it's talked about enough is bring your own certificate Authority certificate so we have",
    "start": "2495680",
    "end": "2502280"
  },
  {
    "text": "once before forego live transferred our certificate Authority CT onto AWS",
    "start": "2502280",
    "end": "2508440"
  },
  {
    "text": "iot beyond that we do not involve AWS in our manufacturing process at all and",
    "start": "2508440",
    "end": "2515119"
  },
  {
    "text": "this is uh something that's very UNC common in iot Cloud providers they want",
    "start": "2515119",
    "end": "2520800"
  },
  {
    "text": "to provision your device identities and AWS will happily do that",
    "start": "2520800",
    "end": "2526240"
  },
  {
    "text": "for you you can download Sears generate them on iot and download them and this is all good the uh but what that means",
    "start": "2526240",
    "end": "2533760"
  },
  {
    "text": "then is that you have to secure that download process then you have to transfer those and if you're Manufacturing in China you're going",
    "start": "2533760",
    "end": "2539800"
  },
  {
    "text": "across the Great Wall the great firewall and then getting that onto your assembly line and into your devices and",
    "start": "2539800",
    "end": "2546480"
  },
  {
    "text": "that's not not only a very long Logistics chain to secure it also means that if you if it's held up anywhere for",
    "start": "2546480",
    "end": "2552839"
  },
  {
    "text": "any reason that can hold up your production line which is just not acceptable so",
    "start": "2552839",
    "end": "2558000"
  },
  {
    "text": "instead we can provision those identities those key pirs and certificates entirely within uh the",
    "start": "2558000",
    "end": "2564920"
  },
  {
    "text": "factory right they don't leave they never go that private key is completely secret all the time and then we sign",
    "start": "2564920",
    "end": "2571559"
  },
  {
    "text": "their certificates with our certificate Authority and we keep those",
    "start": "2571559",
    "end": "2578359"
  },
  {
    "text": "you know device Sears and stuff around but we don't send it to iot we don't send it to AWS at all now when that",
    "start": "2578359",
    "end": "2585480"
  },
  {
    "text": "robot you know however money months later after it you know sits in a store on a shelf and somebody buys it and they",
    "start": "2585480",
    "end": "2591079"
  },
  {
    "text": "take it home they wrap it and then it comes out at Christmas whatever talks to iot we launched uh or",
    "start": "2591079",
    "end": "2598359"
  },
  {
    "text": "designed this before just in time registration was available and so we go through API Gateway to do this so it",
    "start": "2598359",
    "end": "2604319"
  },
  {
    "text": "sign up that certificate and a Lambda is going to look and put that on iot and iot is going to",
    "start": "2604319",
    "end": "2610760"
  },
  {
    "text": "look and say this is signed by the correct CA that I have registered and I'm going to let them make an",
    "start": "2610760",
    "end": "2616079"
  },
  {
    "text": "authenticated connection and it's hard to understate",
    "start": "2616079",
    "end": "2621200"
  },
  {
    "text": "how important this is because it means that even if you have existing devices",
    "start": "2621200",
    "end": "2627000"
  },
  {
    "text": "that uh you've put on that you've signed with a CA that you own you can connect those existing devices to AWS iot",
    "start": "2627000",
    "end": "2634240"
  },
  {
    "text": "without having to collect their certificates all again",
    "start": "2634240",
    "end": "2638920"
  },
  {
    "text": "certificates on iot have some implications for account structure first the shadow uh and the",
    "start": "2639680",
    "end": "2647280"
  },
  {
    "text": "topics aren't namespaced so uh this means that if you put multiple",
    "start": "2647280",
    "end": "2653200"
  },
  {
    "text": "developers into the into the same account when you should already have separate prod and staging accounts that's just good practice but say you",
    "start": "2653200",
    "end": "2659680"
  },
  {
    "text": "had one Dev account you put everybody in there a developer accidentally starts listening on the root topic they're",
    "start": "2659680",
    "end": "2666839"
  },
  {
    "text": "going to get everybody's traffic and they're going to be really confused or they start publishing on the wrong topic and then somebody else gets cross talk",
    "start": "2666839",
    "end": "2673319"
  },
  {
    "text": "right they're going to step on each other's toes for testing right you want to purge the registry so it starts clean",
    "start": "2673319",
    "end": "2679359"
  },
  {
    "text": "but because everybody's in there you can't just wipe the entire registry you have to go through and pick out the ones",
    "start": "2679359",
    "end": "2685000"
  },
  {
    "text": "that you want to remove so it gets tricky um so we take the route of every",
    "start": "2685000",
    "end": "2692359"
  },
  {
    "text": "developer every you know test server gets its own account and when I made this I said well you know after 10",
    "start": "2692359",
    "end": "2698359"
  },
  {
    "text": "accounts it gets a little easier to get a process going and I'm you know very excited for AWS organizations to make",
    "start": "2698359",
    "end": "2704280"
  },
  {
    "text": "this even easier uh so I would recommend going with multiple accounts however certificates in AWS iot",
    "start": "2704280",
    "end": "2712800"
  },
  {
    "text": "must be unique in a region even across accounts so a certificate is in developer 1's account it cannot be in",
    "start": "2712800",
    "end": "2719559"
  },
  {
    "text": "developer 2's account this is also true of CA certificates and that makes it",
    "start": "2719559",
    "end": "2724760"
  },
  {
    "text": "very difficult to move devices around between accounts so",
    "start": "2724760",
    "end": "2731119"
  },
  {
    "text": "um across regions right you can have it in the same account in a different",
    "start": "2731119",
    "end": "2736200"
  },
  {
    "text": "account that's all fine but within a region it has to be unique uh on that single",
    "start": "2736200",
    "end": "2742000"
  },
  {
    "text": "account you can transfer them though if it's in developer 1's account they can say I'm going to push that over to",
    "start": "2742000",
    "end": "2748520"
  },
  {
    "text": "developer 2's account you can't pull you have to know the account that it's in so if developer",
    "start": "2748520",
    "end": "2754520"
  },
  {
    "text": "2 tries to connect the robot and it's says sorry I can't do that uh he can't",
    "start": "2754520",
    "end": "2762359"
  },
  {
    "text": "uh he or she can't say pull it from whatever account it's in and transfer it to me they have to go and find out what",
    "start": "2762359",
    "end": "2768559"
  },
  {
    "text": "other developer has the uh has that robot registered so given those",
    "start": "2768559",
    "end": "2775880"
  },
  {
    "text": "constraints you need some way of provisioning devices that's going to allow you to transfer them between developers and between test accounts",
    "start": "2775880",
    "end": "2782160"
  },
  {
    "text": "right because um one option is to have separate CTS and Casa for every Dev",
    "start": "2782160",
    "end": "2787680"
  },
  {
    "text": "account so each device has a big store of CTS on it and when they say connect",
    "start": "2787680",
    "end": "2794960"
  },
  {
    "text": "to developer one's account it goes and it looks up that and uses that CT that's one option another option is to have",
    "start": "2794960",
    "end": "2801440"
  },
  {
    "text": "sort of a single initial point of contact So when you say connect to developer 1's account it goes to this",
    "start": "2801440",
    "end": "2807960"
  },
  {
    "text": "initial point of contact which may be your prod account it could be you know a special one that's just for this and",
    "start": "2807960",
    "end": "2813640"
  },
  {
    "text": "that will register there with that single CT and then that count will push the devices CT over to the appropriate",
    "start": "2813640",
    "end": "2820160"
  },
  {
    "text": "place so those are two options uh I don't think either one is better than the other uh it sort of just depends on",
    "start": "2820160",
    "end": "2826359"
  },
  {
    "text": "what your preference is the uh final piece here I just want",
    "start": "2826359",
    "end": "2832400"
  },
  {
    "text": "to talk a little bit get up on my Soap Box about serverless Ops because I think it's very important to understand uh",
    "start": "2832400",
    "end": "2839200"
  },
  {
    "text": "what's required uh when you go fully serverless as we have and the answer is",
    "start": "2839200",
    "end": "2844640"
  },
  {
    "text": "it's not no Ops right sometimes that term gets thrown around and it's it's",
    "start": "2844640",
    "end": "2850079"
  },
  {
    "text": "wrong it's not just misleading it's wrong you still need all of the things that you have traditionally needed you",
    "start": "2850079",
    "end": "2855359"
  },
  {
    "text": "want your infrastructure as code whether that's in cloud formation uh or terraform or any other uh system that",
    "start": "2855359",
    "end": "2862400"
  },
  {
    "text": "you're using You Want Build artifacts right when that Lambda code gets packaged up you want it left in S3 so",
    "start": "2862400",
    "end": "2868040"
  },
  {
    "text": "that uh you can see what was put up there then you want observability logging and auditing and some of this is",
    "start": "2868040",
    "end": "2876400"
  },
  {
    "text": "helped right you can just print in Lambda and that goes to cloudwatch logs at the same time a lot is hidden from",
    "start": "2876400",
    "end": "2882200"
  },
  {
    "text": "you if something in Lambda is not going as it should you may not see it you may",
    "start": "2882200",
    "end": "2889079"
  },
  {
    "text": "just see the results Downstream right so you have to figure out how to monitor an instrument to get the same metrics that",
    "start": "2889079",
    "end": "2895640"
  },
  {
    "text": "you would be able to get if you were running your own infrastructure so to sum up this section",
    "start": "2895640",
    "end": "2902119"
  },
  {
    "text": "I talked a little bit about uh I robot's place in the smart home and where we see that going um",
    "start": "2902119",
    "end": "2907480"
  },
  {
    "text": "covered that when you have non-subscription uh cloud services in iot that means you end up being cost",
    "start": "2907480",
    "end": "2913079"
  },
  {
    "text": "sensitive we were able to skip undifferentiated heavy lifting with serverless and going all in on that",
    "start": "2913079",
    "end": "2919400"
  },
  {
    "text": "meant that we had to you know figure out our own patterns but it also meant that",
    "start": "2919400",
    "end": "2925359"
  },
  {
    "text": "uh we were able to bring that system about faster than we would have otherwise talked about a few patterns",
    "start": "2925359",
    "end": "2930760"
  },
  {
    "text": "direct resource access uh between Services full red black deployments as a strategy uh using service Discovery with",
    "start": "2930760",
    "end": "2938839"
  },
  {
    "text": "a well-known endpoint for switching between deployments and using cloudfront to deploy those well-known end uh",
    "start": "2938839",
    "end": "2946280"
  },
  {
    "text": "services and then a little bit about patterns account structure and serverless Ops so to wrap up here like",
    "start": "2946280",
    "end": "2952559"
  },
  {
    "text": "while to come back thank you so much ben it's always great hearing customers and",
    "start": "2952559",
    "end": "2959599"
  },
  {
    "text": "um I hear about customers doing the I'd also like to make it clear that we could not have done this without wall like he",
    "start": "2959599",
    "end": "2966359"
  },
  {
    "text": "was of huge help and he knows more about I think both serverless and iot than anybody else uh so great",
    "start": "2966359",
    "end": "2975559"
  },
  {
    "text": "so thank you so much so in summary I know we talked about a lot of topics um",
    "start": "2975559",
    "end": "2981359"
  },
  {
    "text": "a few key points think about those goals of your iot architecture you know all these Technologies and complex patterns",
    "start": "2981359",
    "end": "2987440"
  },
  {
    "text": "borrow down to fault tolerance resilence uh security agility visibility so keep",
    "start": "2987440",
    "end": "2993000"
  },
  {
    "text": "those in mind as you build your system uh think about the benefits of Serv iot that we talked about about being to",
    "start": "2993000",
    "end": "2998680"
  },
  {
    "text": "remove the undifferentiated heavy lifting and remember the blueprint about State Management fast pipelines and iot",
    "start": "2998680",
    "end": "3006280"
  },
  {
    "text": "operations so thank you so much um we will do a Q&A after this but uh if",
    "start": "3006280",
    "end": "3011400"
  },
  {
    "text": "you're not able to stay um definitely do the evaluations uh we want to hear feedback we want to hear what you really",
    "start": "3011400",
    "end": "3017119"
  },
  {
    "text": "liked about the session ways we can improve and there are other sessions happening throughout the day so there's",
    "start": "3017119",
    "end": "3022720"
  },
  {
    "text": "some great iot and serus sessions coming up so we definitely want you to check those out so uh opening a four for",
    "start": "3022720",
    "end": "3029599"
  },
  {
    "text": "questions and thank you so much again [Applause]",
    "start": "3029599",
    "end": "3038949"
  }
]