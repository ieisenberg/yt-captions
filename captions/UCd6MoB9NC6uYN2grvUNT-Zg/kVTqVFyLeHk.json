[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "[Music]",
    "start": "500",
    "end": "5120"
  },
  {
    "text": "one of the most",
    "start": "5120",
    "end": "5920"
  },
  {
    "text": "important things for startups is to",
    "start": "5920",
    "end": "8000"
  },
  {
    "text": "develop and release",
    "start": "8000",
    "end": "9440"
  },
  {
    "text": "the mvp and start getting feedback on",
    "start": "9440",
    "end": "12480"
  },
  {
    "text": "the product",
    "start": "12480",
    "end": "13360"
  },
  {
    "text": "as soon as possible in the process of",
    "start": "13360",
    "end": "16640"
  },
  {
    "text": "bringing the application to the market",
    "start": "16640",
    "end": "18800"
  },
  {
    "text": "quickly",
    "start": "18800",
    "end": "19840"
  },
  {
    "text": "monitoring is an area which sometimes",
    "start": "19840",
    "end": "22000"
  },
  {
    "text": "gets ignored",
    "start": "22000",
    "end": "23680"
  },
  {
    "text": "monitoring is critical for business",
    "start": "23680",
    "end": "25760"
  },
  {
    "text": "continuity",
    "start": "25760",
    "end": "26720"
  },
  {
    "text": "and to better understand the user",
    "start": "26720",
    "end": "28640"
  },
  {
    "text": "experience",
    "start": "28640",
    "end": "29760"
  },
  {
    "text": "hello my name is jillian ford and i am a",
    "start": "29760",
    "end": "32960"
  },
  {
    "text": "startup solutions architect here at aws",
    "start": "32960",
    "end": "36239"
  },
  {
    "start": "36000",
    "end": "59000"
  },
  {
    "text": "in this video we will discuss resource",
    "start": "36239",
    "end": "38800"
  },
  {
    "text": "monitoring",
    "start": "38800",
    "end": "39520"
  },
  {
    "text": "and how easy it is to achieve",
    "start": "39520",
    "end": "41280"
  },
  {
    "text": "operational excellence",
    "start": "41280",
    "end": "42719"
  },
  {
    "text": "by using a few simple aws services",
    "start": "42719",
    "end": "46079"
  },
  {
    "text": "let's get started in my experience",
    "start": "46079",
    "end": "48960"
  },
  {
    "text": "working with startups",
    "start": "48960",
    "end": "50320"
  },
  {
    "text": "i have seen many companies focus on",
    "start": "50320",
    "end": "52559"
  },
  {
    "text": "achieving",
    "start": "52559",
    "end": "53440"
  },
  {
    "text": "operational excellence to build strong",
    "start": "53440",
    "end": "56079"
  },
  {
    "text": "trust",
    "start": "56079",
    "end": "56800"
  },
  {
    "text": "and offer a great user experience the",
    "start": "56800",
    "end": "60000"
  },
  {
    "start": "59000",
    "end": "124000"
  },
  {
    "text": "ability to run",
    "start": "60000",
    "end": "60960"
  },
  {
    "text": "systems and gain insight into the",
    "start": "60960",
    "end": "63039"
  },
  {
    "text": "operations",
    "start": "63039",
    "end": "64080"
  },
  {
    "text": "helps you continuously improve",
    "start": "64080",
    "end": "66640"
  },
  {
    "text": "supporting processes",
    "start": "66640",
    "end": "68320"
  },
  {
    "text": "and procedures it also enables you to",
    "start": "68320",
    "end": "71680"
  },
  {
    "text": "act",
    "start": "71680",
    "end": "72000"
  },
  {
    "text": "in real time if you face any performance",
    "start": "72000",
    "end": "75439"
  },
  {
    "text": "configuration or security issues",
    "start": "75439",
    "end": "79200"
  },
  {
    "text": "we recommend that initially startups use",
    "start": "79200",
    "end": "82400"
  },
  {
    "text": "monitoring in a reactive mode you can",
    "start": "82400",
    "end": "85520"
  },
  {
    "text": "have visibility in the system through a",
    "start": "85520",
    "end": "87439"
  },
  {
    "text": "set of metrics",
    "start": "87439",
    "end": "88479"
  },
  {
    "text": "and a dashboard as you grow",
    "start": "88479",
    "end": "91520"
  },
  {
    "text": "you can move to a proactive approach of",
    "start": "91520",
    "end": "93680"
  },
  {
    "text": "a self-healing system",
    "start": "93680",
    "end": "95439"
  },
  {
    "text": "to achieve that operational excellence",
    "start": "95439",
    "end": "98000"
  },
  {
    "text": "before we talk about the specific",
    "start": "98000",
    "end": "99680"
  },
  {
    "text": "services",
    "start": "99680",
    "end": "100640"
  },
  {
    "text": "let's first understand what resource",
    "start": "100640",
    "end": "103280"
  },
  {
    "text": "monitoring",
    "start": "103280",
    "end": "103920"
  },
  {
    "text": "is it means monitoring aws resources",
    "start": "103920",
    "end": "107520"
  },
  {
    "text": "like amazon ec2 amazon rds",
    "start": "107520",
    "end": "111360"
  },
  {
    "text": "different container services or even",
    "start": "111360",
    "end": "114159"
  },
  {
    "text": "serverless services",
    "start": "114159",
    "end": "115759"
  },
  {
    "text": "like aws lambda and amazon dynamodb",
    "start": "115759",
    "end": "119840"
  },
  {
    "text": "for latency traffic errors and",
    "start": "119840",
    "end": "123040"
  },
  {
    "text": "saturation",
    "start": "123040",
    "end": "124640"
  },
  {
    "text": "to give you an example a successful",
    "start": "124640",
    "end": "126960"
  },
  {
    "text": "startup using",
    "start": "126960",
    "end": "128000"
  },
  {
    "text": "aws elastic beanstalk to deploy its web",
    "start": "128000",
    "end": "131440"
  },
  {
    "text": "application",
    "start": "131440",
    "end": "132560"
  },
  {
    "text": "might need to scale its rds instance if",
    "start": "132560",
    "end": "135360"
  },
  {
    "text": "metrics like",
    "start": "135360",
    "end": "136400"
  },
  {
    "text": "network throughput cpu utilization or",
    "start": "136400",
    "end": "139680"
  },
  {
    "text": "input output operations per second are",
    "start": "139680",
    "end": "142800"
  },
  {
    "text": "found to be very high",
    "start": "142800",
    "end": "145200"
  },
  {
    "text": "or another startup using a serverless",
    "start": "145200",
    "end": "147280"
  },
  {
    "text": "architecture with",
    "start": "147280",
    "end": "148400"
  },
  {
    "text": "a nosql database like dynamodb",
    "start": "148400",
    "end": "151440"
  },
  {
    "text": "might need to scale its read capacity to",
    "start": "151440",
    "end": "153920"
  },
  {
    "text": "deal with the surge in traffic",
    "start": "153920",
    "end": "156879"
  },
  {
    "text": "how can a startup achieve this using aws",
    "start": "156879",
    "end": "159840"
  },
  {
    "text": "monitoring services",
    "start": "159840",
    "end": "161680"
  },
  {
    "text": "we recommend using amazon cloudwatch",
    "start": "161680",
    "end": "165040"
  },
  {
    "text": "amazon cloudwatch is a monitoring and",
    "start": "165040",
    "end": "167680"
  },
  {
    "text": "observability service",
    "start": "167680",
    "end": "169280"
  },
  {
    "text": "built for devops engineers developers",
    "start": "169280",
    "end": "172480"
  },
  {
    "text": "site reliability engineers and i.t",
    "start": "172480",
    "end": "175120"
  },
  {
    "text": "managers",
    "start": "175120",
    "end": "176480"
  },
  {
    "start": "176000",
    "end": "218000"
  },
  {
    "text": "it provides you with data and actionable",
    "start": "176480",
    "end": "178959"
  },
  {
    "text": "insights",
    "start": "178959",
    "end": "179760"
  },
  {
    "text": "to monitor your applications respond to",
    "start": "179760",
    "end": "182800"
  },
  {
    "text": "system-wide performance",
    "start": "182800",
    "end": "184000"
  },
  {
    "text": "changes and optimize resource",
    "start": "184000",
    "end": "186400"
  },
  {
    "text": "utilization",
    "start": "186400",
    "end": "188080"
  },
  {
    "text": "the service collects the data in the",
    "start": "188080",
    "end": "189840"
  },
  {
    "text": "form of logs",
    "start": "189840",
    "end": "191200"
  },
  {
    "text": "metrics and events providing you with a",
    "start": "191200",
    "end": "193680"
  },
  {
    "text": "unified view",
    "start": "193680",
    "end": "194959"
  },
  {
    "text": "of aws resources applications",
    "start": "194959",
    "end": "198400"
  },
  {
    "text": "and services you can also monitor",
    "start": "198400",
    "end": "201680"
  },
  {
    "text": "custom metrics generated by your own",
    "start": "201680",
    "end": "204640"
  },
  {
    "text": "applications",
    "start": "204640",
    "end": "205680"
  },
  {
    "text": "and services cloudwatch can also be used",
    "start": "205680",
    "end": "209120"
  },
  {
    "text": "to detect",
    "start": "209120",
    "end": "209840"
  },
  {
    "text": "anomalous behavior in your environments",
    "start": "209840",
    "end": "212560"
  },
  {
    "text": "set alarms",
    "start": "212560",
    "end": "213599"
  },
  {
    "text": "and take automated actions to keep your",
    "start": "213599",
    "end": "216400"
  },
  {
    "text": "applications",
    "start": "216400",
    "end": "217360"
  },
  {
    "text": "running smoothly let's go back to our",
    "start": "217360",
    "end": "219760"
  },
  {
    "text": "first example",
    "start": "219760",
    "end": "220799"
  },
  {
    "text": "of using aws elastic beanstalk if the",
    "start": "220799",
    "end": "224000"
  },
  {
    "text": "cpu utilization of ec2",
    "start": "224000",
    "end": "226000"
  },
  {
    "text": "was very high due to a surge in traffic",
    "start": "226000",
    "end": "228879"
  },
  {
    "text": "in a reactive mode",
    "start": "228879",
    "end": "230319"
  },
  {
    "text": "you can create an alarm to monitor that",
    "start": "230319",
    "end": "232640"
  },
  {
    "text": "and send an email if it exceeds the",
    "start": "232640",
    "end": "234560"
  },
  {
    "text": "thresholds",
    "start": "234560",
    "end": "235280"
  },
  {
    "text": "defined by you since amazon cloudwatch",
    "start": "235280",
    "end": "238400"
  },
  {
    "text": "alarm is",
    "start": "238400",
    "end": "239200"
  },
  {
    "text": "integrated with amazon's simple",
    "start": "239200",
    "end": "241040"
  },
  {
    "text": "notification service",
    "start": "241040",
    "end": "242959"
  },
  {
    "text": "you can use any notification type",
    "start": "242959",
    "end": "245439"
  },
  {
    "text": "supported by",
    "start": "245439",
    "end": "246239"
  },
  {
    "text": "sms many customers even integrate with",
    "start": "246239",
    "end": "249840"
  },
  {
    "text": "third-party business communication",
    "start": "249840",
    "end": "251519"
  },
  {
    "text": "applications",
    "start": "251519",
    "end": "252640"
  },
  {
    "text": "or incident response platforms using aws",
    "start": "252640",
    "end": "255599"
  },
  {
    "text": "lambda",
    "start": "255599",
    "end": "256239"
  },
  {
    "text": "for remediation another recommendation",
    "start": "256239",
    "end": "260320"
  },
  {
    "start": "258000",
    "end": "294000"
  },
  {
    "text": "is to take a proactive approach and",
    "start": "260320",
    "end": "262639"
  },
  {
    "text": "configure the alarm to perform",
    "start": "262639",
    "end": "264479"
  },
  {
    "text": "an automated action like executing an",
    "start": "264479",
    "end": "267840"
  },
  {
    "text": "aws",
    "start": "267840",
    "end": "268479"
  },
  {
    "text": "auto scaling policy and adding new ec2",
    "start": "268479",
    "end": "271759"
  },
  {
    "text": "instances by scaling horizontally to",
    "start": "271759",
    "end": "274639"
  },
  {
    "text": "distribute the traffic across",
    "start": "274639",
    "end": "276479"
  },
  {
    "text": "multiple ec2 instances defining a",
    "start": "276479",
    "end": "279600"
  },
  {
    "text": "threshold",
    "start": "279600",
    "end": "280400"
  },
  {
    "text": "for the alarms could be tricky to make",
    "start": "280400",
    "end": "283440"
  },
  {
    "text": "it easier for creating and avoiding",
    "start": "283440",
    "end": "285280"
  },
  {
    "text": "manual configuration",
    "start": "285280",
    "end": "286800"
  },
  {
    "text": "and experimentation of alarms you can",
    "start": "286800",
    "end": "289440"
  },
  {
    "text": "use",
    "start": "289440",
    "end": "290000"
  },
  {
    "text": "the cloudwatch anomaly detection feature",
    "start": "290000",
    "end": "293120"
  },
  {
    "text": "on matrix amazon cloudwatch anomaly",
    "start": "293120",
    "end": "296560"
  },
  {
    "text": "detection",
    "start": "296560",
    "end": "297440"
  },
  {
    "text": "applies machine learning algorithms to",
    "start": "297440",
    "end": "300000"
  },
  {
    "text": "continuously analyze",
    "start": "300000",
    "end": "301440"
  },
  {
    "text": "metrics of systems and applications",
    "start": "301440",
    "end": "304560"
  },
  {
    "text": "determine normal baselines and surface",
    "start": "304560",
    "end": "307199"
  },
  {
    "text": "anomalies",
    "start": "307199",
    "end": "308320"
  },
  {
    "text": "with minimal user intervention",
    "start": "308320",
    "end": "311520"
  },
  {
    "start": "311000",
    "end": "329000"
  },
  {
    "text": "you can create alarms based on a",
    "start": "311520",
    "end": "313759"
  },
  {
    "text": "metric's expected value",
    "start": "313759",
    "end": "316400"
  },
  {
    "text": "these types of alarms don't have a",
    "start": "316400",
    "end": "318320"
  },
  {
    "text": "static threshold",
    "start": "318320",
    "end": "319440"
  },
  {
    "text": "for determining alarm state instead",
    "start": "319440",
    "end": "322720"
  },
  {
    "text": "they compare the metrics value to the",
    "start": "322720",
    "end": "325199"
  },
  {
    "text": "expected value",
    "start": "325199",
    "end": "326720"
  },
  {
    "text": "based on the anomaly detection model",
    "start": "326720",
    "end": "329759"
  },
  {
    "start": "329000",
    "end": "352000"
  },
  {
    "text": "finally to monitor your resources in a",
    "start": "329759",
    "end": "332400"
  },
  {
    "text": "single view",
    "start": "332400",
    "end": "333440"
  },
  {
    "text": "you can use amazon cloudwatch dashboards",
    "start": "333440",
    "end": "336639"
  },
  {
    "text": "you can create customized views of the",
    "start": "336639",
    "end": "338960"
  },
  {
    "text": "critical resource and application",
    "start": "338960",
    "end": "340720"
  },
  {
    "text": "measurements",
    "start": "340720",
    "end": "341680"
  },
  {
    "text": "and alarms for your aws resources",
    "start": "341680",
    "end": "345120"
  },
  {
    "text": "through automatic dashboards you can",
    "start": "345120",
    "end": "347120"
  },
  {
    "text": "create aggregated views of the health",
    "start": "347120",
    "end": "349120"
  },
  {
    "text": "and performance",
    "start": "349120",
    "end": "350160"
  },
  {
    "text": "of all aws resources automatic",
    "start": "350160",
    "end": "353600"
  },
  {
    "start": "352000",
    "end": "379000"
  },
  {
    "text": "dashboards are pre-built",
    "start": "353600",
    "end": "355440"
  },
  {
    "text": "with aws service recommended best",
    "start": "355440",
    "end": "357759"
  },
  {
    "text": "practices",
    "start": "357759",
    "end": "358639"
  },
  {
    "text": "to remain resource aware they even",
    "start": "358639",
    "end": "361520"
  },
  {
    "text": "dynamically update to reflect the latest",
    "start": "361520",
    "end": "364160"
  },
  {
    "text": "state of important",
    "start": "364160",
    "end": "365280"
  },
  {
    "text": "performance metrics this enables you to",
    "start": "365280",
    "end": "368160"
  },
  {
    "text": "quickly get started with monitoring",
    "start": "368160",
    "end": "370400"
  },
  {
    "text": "explore account and resource-based views",
    "start": "370400",
    "end": "372479"
  },
  {
    "text": "of metrics and alarms",
    "start": "372479",
    "end": "374080"
  },
  {
    "text": "and easily drill down to understand the",
    "start": "374080",
    "end": "376880"
  },
  {
    "text": "root cause of performance",
    "start": "376880",
    "end": "378319"
  },
  {
    "text": "issues i hope that you found the",
    "start": "378319",
    "end": "380639"
  },
  {
    "start": "379000",
    "end": "412000"
  },
  {
    "text": "information provided in this video",
    "start": "380639",
    "end": "382880"
  },
  {
    "text": "useful and that it helps you serve your",
    "start": "382880",
    "end": "385199"
  },
  {
    "text": "customers better",
    "start": "385199",
    "end": "386479"
  },
  {
    "text": "with operational excellence to wrap up",
    "start": "386479",
    "end": "389759"
  },
  {
    "text": "remember these best practices to",
    "start": "389759",
    "end": "391759"
  },
  {
    "text": "optimize resource monitoring",
    "start": "391759",
    "end": "394000"
  },
  {
    "text": "use cloudwatch metrics to monitor the",
    "start": "394000",
    "end": "396240"
  },
  {
    "text": "resources",
    "start": "396240",
    "end": "397520"
  },
  {
    "text": "create cloudwatch alarms for generating",
    "start": "397520",
    "end": "399840"
  },
  {
    "text": "alerts",
    "start": "399840",
    "end": "400560"
  },
  {
    "text": "and create dashboards to get a unified",
    "start": "400560",
    "end": "403120"
  },
  {
    "text": "view of important resources",
    "start": "403120",
    "end": "405120"
  },
  {
    "text": "have fun and build on",
    "start": "405120",
    "end": "409840"
  }
]