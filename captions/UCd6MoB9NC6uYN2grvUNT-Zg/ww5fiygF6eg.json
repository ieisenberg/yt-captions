[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "Hi, welcome to 'This is My Architecture.' ",
    "start": "7581",
    "end": "10514"
  },
  {
    "text": "I'm Jennifer, \nand I'm here with Mark from Marathon Oil.",
    "start": "10950",
    "end": "13954"
  },
  {
    "text": "Hi, Mark, thanks for joining us today.",
    "start": "14216",
    "end": "16182"
  },
  {
    "text": "Hi, Jennifer, pleasure to be here.",
    "start": "16183",
    "end": "17772"
  },
  {
    "text": "Could you tell us a little bit \nabout Marathon Oil?",
    "start": "17888",
    "end": "19574"
  },
  {
    "text": "Yeah, we're responsible, independent \nexploration and production company",
    "start": "19574",
    "end": "23312"
  },
  {
    "text": "company with deep roots in American energy.",
    "start": "23479",
    "end": "25403"
  },
  {
    "start": "25000",
    "end": "70000"
  },
  {
    "text": "Great, I see a drone here,\ncould you walk us through this architecture",
    "start": "25403",
    "end": "30087"
  },
  {
    "text": "and how it's used \nto solve your business problem?",
    "start": "30087",
    "end": "32297"
  },
  {
    "text": "Yeah, so we routinely monitor our well pads.",
    "start": "32297",
    "end": "34696"
  },
  {
    "text": "In the past, we were doing that via people, \nand now we've moved to drones.",
    "start": "34841",
    "end": "38243"
  },
  {
    "text": "So these drones are being flown \nby third party pilots, who are licensed,",
    "start": "38557",
    "end": "42794"
  },
  {
    "text": "who go to every one of our well pads \non a routine basis.",
    "start": "42794",
    "end": "46413"
  },
  {
    "text": "Once they take that imagery, \nthey're loading that imagery",
    "start": "46730",
    "end": "50013"
  },
  {
    "text": "into a third-party software,",
    "start": "50013",
    "end": "52118"
  },
  {
    "text": "which is actually processing all of the imagery",
    "start": "53213",
    "end": "56467"
  },
  {
    "text": "and creating three separate files per well pad.",
    "start": "56843",
    "end": "59698"
  },
  {
    "text": "So those three image files, \none is an orthomosaic,",
    "start": "59716",
    "end": "62471"
  },
  {
    "text": "which is a high resolution \ntop-down view of the well pad,",
    "start": "62515",
    "end": "65610"
  },
  {
    "text": "we also get a digital terrain model \nand a digital elevation model.",
    "start": "65921",
    "end": "69364"
  },
  {
    "text": "So what happens \nwhen the drones capture these images?",
    "start": "70054",
    "end": "73005"
  },
  {
    "text": "Yeah, so once the images are created, \nand stored on that third-party server,",
    "start": "73507",
    "end": "77419"
  },
  {
    "text": "this is where the AWS architecture takes over.",
    "start": "77419",
    "end": "80126"
  },
  {
    "text": "So the first event that we have \nis actually a CloudWatch event,",
    "start": "80504",
    "end": "83336"
  },
  {
    "text": "which is running on a scheduled basis.",
    "start": "83336",
    "end": "85076"
  },
  {
    "text": "This CloudWatch event \nis calling the Step Function.",
    "start": "85398",
    "end": "88967"
  },
  {
    "text": "And that Step Function consists \nof three separate Lambda functions.",
    "start": "89377",
    "end": "93140"
  },
  {
    "text": "The first Lambda function, \nactually goes to this third-party software via an API,",
    "start": "94544",
    "end": "101201"
  },
  {
    "text": "and determines if there's new images \nand new flights available.",
    "start": "101892",
    "end": "104675"
  },
  {
    "text": "If it does find a new fight or a new image,",
    "start": "105891",
    "end": "108309"
  },
  {
    "text": "it will call a second Lambda function,",
    "start": "108423",
    "end": "110271"
  },
  {
    "text": "which actually takes those images \nfrom this third party",
    "start": "110271",
    "end": "113379"
  },
  {
    "text": "and stores them in an S3 bucket \nin our environment.",
    "start": "113982",
    "end": "118311"
  },
  {
    "start": "117000",
    "end": "162000"
  },
  {
    "text": "So what happens after these images are in S3?",
    "start": "118311",
    "end": "120857"
  },
  {
    "text": "Yeah, so we need to get them \ninto our on-prem mapping software.",
    "start": "121058",
    "end": "124110"
  },
  {
    "text": "Now, the on-prem mapping software \ncannot read directly from S3.",
    "start": "124183",
    "end": "127645"
  },
  {
    "text": "So we need to call \na separate Lambda function",
    "start": "127645",
    "end": "129916"
  },
  {
    "text": "which is actually taking these S3 images, \nand creating what's called a raster proxy.",
    "start": "130107",
    "end": "135665"
  },
  {
    "text": "This raster proxy serves \nas kind of a URL for this server",
    "start": "135841",
    "end": "139054"
  },
  {
    "text": "to understand how to go out \nand actually get those images.",
    "start": "139054",
    "end": "142840"
  },
  {
    "text": "So these raster proxies \nare stored in the local servers' database.",
    "start": "143132",
    "end": "148134"
  },
  {
    "text": "And from there if I'm a user, \nI wanna go out and actually view these images.",
    "start": "149044",
    "end": "152433"
  },
  {
    "text": "I hit the mapping software,",
    "start": "152433",
    "end": "154043"
  },
  {
    "text": "which via a storage gateway will come out,",
    "start": "154638",
    "end": "157452"
  },
  {
    "text": "find those image files \nand display them for our end user.",
    "start": "158042",
    "end": "161503"
  },
  {
    "start": "162000",
    "end": "229000"
  },
  {
    "text": "So for your on-premise servers, \ndo you have to change the application",
    "start": "162115",
    "end": "166082"
  },
  {
    "text": "in order to leverage storage gateway?",
    "start": "166082",
    "end": "168141"
  },
  {
    "text": "No, so that third Lambda function that we're using \nis actually what is doing that for us.",
    "start": "168320",
    "end": "173001"
  },
  {
    "text": "So it's creating the URL that the server can make sense of \nwhich is called a raster proxy,",
    "start": "173189",
    "end": "178235"
  },
  {
    "text": "which allows the on-premise software",
    "start": "178796",
    "end": "181144"
  },
  {
    "text": "to actually read directly \nfrom the S3 bucket via storage gateway.",
    "start": "181144",
    "end": "184970"
  },
  {
    "text": "So what happens \nafter this index files are in S3?",
    "start": "185744",
    "end": "188262"
  },
  {
    "text": "How do the internal and users \nleverage these files?",
    "start": "188262",
    "end": "190819"
  },
  {
    "text": "Yep, so we have a maintenance team \nand various other operations teams",
    "start": "190861",
    "end": "193838"
  },
  {
    "text": "that leverages images for a variety of reasons.",
    "start": "193838",
    "end": "196338"
  },
  {
    "text": "Really, is to identify \nany issues with equipment",
    "start": "196536",
    "end": "199315"
  },
  {
    "text": "or see if we need \nto do preventative maintenance",
    "start": "199659",
    "end": "201900"
  },
  {
    "text": "and just get an overall health check \nof the well pad itself.",
    "start": "201900",
    "end": "205291"
  },
  {
    "text": "Thank you, Mark for walking us \nthrough this architecture.",
    "start": "205879",
    "end": "207889"
  },
  {
    "text": "It's been really interesting to learn \nhow Marathon Oil uses the serverless architecture,",
    "start": "208143",
    "end": "212097"
  },
  {
    "text": "to process your drone images,",
    "start": "212097",
    "end": "214235"
  },
  {
    "text": "and also be able to provide \nautomatic monitoring of your health equipment.",
    "start": "214235",
    "end": "218925"
  },
  {
    "text": "And thank you for watching \n'This is My Architecture.'",
    "start": "219527",
    "end": "222430"
  }
]