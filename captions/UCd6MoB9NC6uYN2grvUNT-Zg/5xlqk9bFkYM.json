[
  {
    "text": "welcome everyone thank you for coming to the AWS Summit today really appreciate you taking your time out of your day and",
    "start": "120",
    "end": "5920"
  },
  {
    "text": "uh hopefully you had a chance to listen in on some of the Keynotes earlier this morning um I'm Chris barklay I'm the",
    "start": "5920",
    "end": "12840"
  },
  {
    "text": "product manager for AWS opsw works for a uh devops application management solution and uh here to talk with you a",
    "start": "12840",
    "end": "19199"
  },
  {
    "text": "little bit about what opsworks is what it does how it might be useful for you",
    "start": "19199",
    "end": "24240"
  },
  {
    "text": "and uh we have a partner that's uh come to talk a little bit with you as well so you know why might you be",
    "start": "24240",
    "end": "31599"
  },
  {
    "text": "interested in the session well um many of you out here in the audience probably are developing and deploying and running",
    "start": "31599",
    "end": "38640"
  },
  {
    "text": "applications today and you know that the operational responsibilities of applications are some of the things that",
    "start": "38640",
    "end": "45399"
  },
  {
    "text": "are oftentimes the hardest they're the things that can trip us up and um once",
    "start": "45399",
    "end": "51239"
  },
  {
    "text": "you start thinking about the operational aspects of the service what are you thinking about you're thinking about more than just deploying software you're",
    "start": "51239",
    "end": "56719"
  },
  {
    "text": "thinking about building up your machines configuring them um and this becomes even more challenging as things get to",
    "start": "56719",
    "end": "63120"
  },
  {
    "text": "scale so you heard a couple case studies earlier today probably about customers",
    "start": "63120",
    "end": "68360"
  },
  {
    "text": "that grew really fast and if you don't have these processes automated in some way it's going to be pretty challenging",
    "start": "68360",
    "end": "74439"
  },
  {
    "text": "to keep up so once upon a time we used to really handcraft our environments we would uh",
    "start": "74439",
    "end": "81920"
  },
  {
    "text": "kind of do the equivalent of rolling out the dough and um you know basically um",
    "start": "81920",
    "end": "87400"
  },
  {
    "text": "shaping it into the shapes that we wanted and and uh took care of all these little processes we had and we might",
    "start": "87400",
    "end": "93360"
  },
  {
    "text": "have these processes documented on stickies somewhere or maybe even we'd have them in you know some sort of uh",
    "start": "93360",
    "end": "98880"
  },
  {
    "text": "source code repo that we could reference but you know this is probably not the the way the place we want to be we want",
    "start": "98880",
    "end": "104920"
  },
  {
    "text": "to be in a place where we're kind of rolling out a lot of um instances that",
    "start": "104920",
    "end": "110600"
  },
  {
    "text": "all look the same and that way when somebody turns up the the speed dial on",
    "start": "110600",
    "end": "115840"
  },
  {
    "text": "our um on our assembly line uh we don't get kind of caught out in the cold and we're not facing lots of pager Duty",
    "start": "115840",
    "end": "122479"
  },
  {
    "text": "right but how do we get there well we want to get there through um recipes and",
    "start": "122479",
    "end": "128840"
  },
  {
    "text": "automation so we want to have robots that are working on our behalf that are automating the process of configuring",
    "start": "128840",
    "end": "135280"
  },
  {
    "text": "your applications and the configuration ought to be more than just creating an ec2",
    "start": "135280",
    "end": "140360"
  },
  {
    "text": "instance of the same size right so I mean today Amazon gives you the ability",
    "start": "140360",
    "end": "146440"
  },
  {
    "text": "to automate the ability to create the resource ources you're using which is great and so you probably are using uh",
    "start": "146440",
    "end": "153360"
  },
  {
    "text": "tools like an SDK or cloud formation to spin up those instances and so you know that they all look the same but how do",
    "start": "153360",
    "end": "160000"
  },
  {
    "text": "you actually configure what's going on to those instances and um that's what we're here to talk about today is really",
    "start": "160000",
    "end": "165720"
  },
  {
    "text": "the configuration of your applications that are running on those instances and it's more than just deploying the code",
    "start": "165720",
    "end": "170920"
  },
  {
    "text": "right it's more than just kind of deploying your your War file to your Java app server it's it's about how does that app server actually get configured",
    "start": "170920",
    "end": "177239"
  },
  {
    "text": "how do you get the SSL certificates on there right so there's a whole bunch of configuration that needs to go in there and once you get all this completely",
    "start": "177239",
    "end": "184000"
  },
  {
    "text": "configured in code and you can check that in then rolling forward and rolling back becomes pretty easy you make a",
    "start": "184000",
    "end": "189840"
  },
  {
    "text": "change in your development environment that probably looks exactly like your testing environment that looks exactly like prod and now there's no unexpected",
    "start": "189840",
    "end": "197360"
  },
  {
    "text": "surprises and if indeed something does happen then it's pretty easy to roll back and you know exactly how to do",
    "start": "197360",
    "end": "203239"
  },
  {
    "text": "it and so opsworks is a tool that AWS has offered um we launched earlier this",
    "start": "203239",
    "end": "208760"
  },
  {
    "text": "year and it gives giv you the the infrastructure and the solution necessary to actually automate and",
    "start": "208760",
    "end": "214319"
  },
  {
    "text": "orchestrate all the things we're talking about so we um provide you an ability to configure the instances that you're",
    "start": "214319",
    "end": "221280"
  },
  {
    "text": "running um create the instances in a way that's very reliable and repeatable and",
    "start": "221280",
    "end": "226720"
  },
  {
    "text": "um and let you automate um your infrastructure so that you don't have to worry about all those manual steps and",
    "start": "226720",
    "end": "232760"
  },
  {
    "text": "maybe most interesting to folks in the audience is that like our other application Management Services we're offering this at no additional cost so",
    "start": "232760",
    "end": "239959"
  },
  {
    "text": "opsw Works basically is a free service that uh you can use and you just pay for the underlying resources that you're",
    "start": "239959",
    "end": "245480"
  },
  {
    "text": "using it with so I've kind of given you a little bit of background on on why Ops works",
    "start": "245480",
    "end": "252439"
  },
  {
    "text": "but let me kind of just get into some specifics um so one of the things we when we looked at um what our customers",
    "start": "252439",
    "end": "258400"
  },
  {
    "text": "were asking us for when we um were kind of doing the exercise of what we should build uh in the space we heard a lot of",
    "start": "258400",
    "end": "266080"
  },
  {
    "text": "people saying that uh one of the benefits of of Amazon is you provide provide a lot of building blocks but",
    "start": "266080",
    "end": "271320"
  },
  {
    "text": "it's not always easy to put these things together and so with opsworks we wanted to provide a really simple interface for",
    "start": "271320",
    "end": "277720"
  },
  {
    "text": "developers we know that you don't want to spend a lot of time uh trying to fiddle with uh putting everything",
    "start": "277720",
    "end": "282919"
  },
  {
    "text": "together you want to focus on your code and so we really want to make it simple and part of Simplicity is is um having",
    "start": "282919",
    "end": "288840"
  },
  {
    "text": "built in things that developers need so for example we make it really easy for you to attach a volume to your instance",
    "start": "288840",
    "end": "295560"
  },
  {
    "text": "and raid multiple volumes together to create a raid set that's something that pretty commonly comes up and so we want",
    "start": "295560",
    "end": "301160"
  },
  {
    "text": "to make it easy for you to do that we don't want you have to think about it um so we have a bunch of conventions in in",
    "start": "301160",
    "end": "306320"
  },
  {
    "text": "our that are built into our solution um but we don't force you into conventions either we know that you want to uh",
    "start": "306320",
    "end": "312560"
  },
  {
    "text": "experiment and and uh change around your environment and maybe the things that we think are important aren't what you",
    "start": "312560",
    "end": "318120"
  },
  {
    "text": "think are important so we make it really easy and flexible for you to to use the the um the things that you want to use",
    "start": "318120",
    "end": "325360"
  },
  {
    "text": "um anything from you know we support multi complex multi-tier application",
    "start": "325360",
    "end": "330440"
  },
  {
    "text": "um we have a bunch of pre-built layers for things like uh Ruby but um even if",
    "start": "330440",
    "end": "336000"
  },
  {
    "text": "we don't have a pre-built layer for you we have customers that are extending opsw works and using open- Source um",
    "start": "336000",
    "end": "341440"
  },
  {
    "text": "cookbooks to deploy things like solar and couch DB and postgres so you don't",
    "start": "341440",
    "end": "346479"
  },
  {
    "text": "have to be limited by the solutions that we're providing for you out of the box and the other thing that we've we um",
    "start": "346479",
    "end": "354319"
  },
  {
    "text": "ascribed to opsworks as we believe it's a powerful solution we have a bunch of automation that's built in things like",
    "start": "354319",
    "end": "359880"
  },
  {
    "text": "um autoscaling of instances um healing instances that that are um that are sick",
    "start": "359880",
    "end": "365680"
  },
  {
    "text": "and then just a bunch of the built-in um recipes that we uh we provide and we'll talk a little bit more in the",
    "start": "365680",
    "end": "370759"
  },
  {
    "text": "demonstration about uh what I mean by recipes um another attribute is and Andy",
    "start": "370759",
    "end": "376080"
  },
  {
    "text": "hit on this in his keynote is um secure so um AWS in general works very hard to",
    "start": "376080",
    "end": "381680"
  },
  {
    "text": "secure our services and provide tools for you to help secure yours and so one of the ways we help you with security is",
    "start": "381680",
    "end": "388560"
  },
  {
    "text": "um today ec2 gives you the ability to secure SSH access to your instances",
    "start": "388560",
    "end": "393599"
  },
  {
    "text": "through uh a key pair and that key pair is uh basically available for anyone that needs to SSH into your instance and",
    "start": "393599",
    "end": "400160"
  },
  {
    "text": "we heard customers saying well you know I'd really like to be able to um secure my my SSH by user so um when Joe moves",
    "start": "400160",
    "end": "407560"
  },
  {
    "text": "from Project a to Project B I can just decommission his s SSH key and so opsworks gives you that as well we'll",
    "start": "407560",
    "end": "413000"
  },
  {
    "text": "show you that in the demonstration so with that I want to turn this over to Aaron Lee um aon's a",
    "start": "413000",
    "end": "419319"
  },
  {
    "text": "part of ours and um he's going to just talk with you a little bit about uh how his experiences with Ops works thanks",
    "start": "419319",
    "end": "425599"
  },
  {
    "text": "Chris thank you hi everyone um there we go a little background",
    "start": "425599",
    "end": "432319"
  },
  {
    "text": "information on uh Drive Dev we are devops Consulting team uh a few years",
    "start": "432319",
    "end": "437360"
  },
  {
    "text": "ago we were an agile operations Consulting team um and we're really focused on creating operational",
    "start": "437360",
    "end": "444639"
  },
  {
    "text": "excellence in continuous delivery environments um we were founded in 200 7",
    "start": "444639",
    "end": "450720"
  },
  {
    "text": "we focus on companies that have a need for a very high rate of change in a",
    "start": "450720",
    "end": "456520"
  },
  {
    "text": "complex operational environment and need to be able to manage availability",
    "start": "456520",
    "end": "461639"
  },
  {
    "text": "performance cost efficiency and security while delivering every",
    "start": "461639",
    "end": "468360"
  },
  {
    "text": "day we had a client that came to us after an attempt to launch an application uh had failed they felt that",
    "start": "468440",
    "end": "475840"
  },
  {
    "text": "it had run out of capacity when they deployed it and the first days traffic knocked it over and so we got that",
    "start": "475840",
    "end": "481919"
  },
  {
    "text": "predictable phone call help help uh we looked at their environment we looked at",
    "start": "481919",
    "end": "487840"
  },
  {
    "text": "their application and we have something we call ready review which is have we managed the top 10 things that cause",
    "start": "487840",
    "end": "494000"
  },
  {
    "text": "sites to fail on day one and day 10 and day 100 and uh off into the future the",
    "start": "494000",
    "end": "499400"
  },
  {
    "text": "answer was no there were some architecture elements missing there was no automation around the software",
    "start": "499400",
    "end": "505560"
  },
  {
    "text": "development life cycle and the deployment uh the deployment itself and so we went looking for a solution that",
    "start": "505560",
    "end": "510919"
  },
  {
    "text": "we could put up in a week or less including a migration out of physical infrastructure two days before that",
    "start": "510919",
    "end": "516719"
  },
  {
    "text": "opsworks had become public and so we thought that was mature enough um we spent a heavy weekend uh reorienting the",
    "start": "516719",
    "end": "525560"
  },
  {
    "text": "uh the application and setting it up for configuration management so we implemented uh some basic Chef cookbooks",
    "start": "525560",
    "end": "531839"
  },
  {
    "text": "on top of the public cookbooks that opsworks provides we told the customer that they wanted to create they only",
    "start": "531839",
    "end": "538680"
  },
  {
    "text": "wanted to create dependencies on uh stable open apis um and so that led to a",
    "start": "538680",
    "end": "547279"
  },
  {
    "text": "uh a pretty narrow vendor selection process we ended up deciding that opsw works was the way we wanted to go a",
    "start": "547279",
    "end": "553079"
  },
  {
    "text": "couple days later we had our first environment up and running a couple days after that we had all the environments",
    "start": "553079",
    "end": "558399"
  },
  {
    "text": "that we needed cloned out of that initial environment and working um there were a few key points",
    "start": "558399",
    "end": "563680"
  },
  {
    "text": "that really led to the decision number one it was easy we didn't need to host",
    "start": "563680",
    "end": "568760"
  },
  {
    "text": "our own chef environment or build up an operations competency around that number two as I mentioned it was fast uh we",
    "start": "568760",
    "end": "575519"
  },
  {
    "text": "didn't have to build the life cycle management that typically one has to script over the base capabilities uh",
    "start": "575519",
    "end": "581079"
  },
  {
    "text": "number three it did handle the custom aspects of our application so we had some pipeline steps that uh certainly",
    "start": "581079",
    "end": "588320"
  },
  {
    "text": "would have provided a challenge to brittle scripts that we might have put tried to put together ourselves uh and",
    "start": "588320",
    "end": "594040"
  },
  {
    "text": "finally it provides a control surface out of the box for your operations team your Dev team and your customer to have",
    "start": "594040",
    "end": "600800"
  },
  {
    "text": "some control over that environment that was really helpful for us it was fast it was uh cost efficient",
    "start": "600800",
    "end": "609560"
  },
  {
    "text": "it works in our customer environment um and finally it does support Chef we love Chef we love puppet we love salt stack",
    "start": "609560",
    "end": "616600"
  },
  {
    "text": "we can't wait to see those supported as well and we will take questions after",
    "start": "616600",
    "end": "622120"
  },
  {
    "text": "the uh after the presentation Chris thank you eron there you go",
    "start": "622120",
    "end": "628079"
  },
  {
    "text": "appreciate it cheers so hopefully that gave you a little bit",
    "start": "628079",
    "end": "633640"
  },
  {
    "text": "of flavor for how some um folks out there are using opsworks today let me just tell you a few different models for",
    "start": "633640",
    "end": "640839"
  },
  {
    "text": "how you might um deploy software on AWS just to kind of set the stage for where opsworks fits in here so so one way of",
    "start": "640839",
    "end": "648440"
  },
  {
    "text": "uh deploying software on AWS is to bake everything into an Ami and and this is definitely a um a good way to um a good",
    "start": "648440",
    "end": "655680"
  },
  {
    "text": "and valid way to deploy software it um has the benefit of of being really comp",
    "start": "655680",
    "end": "661079"
  },
  {
    "text": "compatible with um ec2 Auto scaling groups um is one of the benefits is it's",
    "start": "661079",
    "end": "666160"
  },
  {
    "text": "very fast to to boot this up um the downside of this approach though is that any change you have to make means you",
    "start": "666160",
    "end": "672639"
  },
  {
    "text": "have to bake a new ammi so if you're thinking about an environment like a lot of our customers do where you have a a",
    "start": "672639",
    "end": "678560"
  },
  {
    "text": "very a continuous integration tool chain this approach can sometimes have a little bit of um of delay in there that",
    "start": "678560",
    "end": "684200"
  },
  {
    "text": "you might not want um a second deployment option is um is represented in uh one of our sister",
    "start": "684200",
    "end": "691200"
  },
  {
    "text": "uh Services elastic beanock and they have a um anomi that basically bakes in",
    "start": "691200",
    "end": "696760"
  },
  {
    "text": "a lot of the uh tooling that you want um and then it lets you just kind of push your code in so this is kind of a um",
    "start": "696760",
    "end": "703320"
  },
  {
    "text": "we'll call it maybe a half baked ony and then um where where opsworks fits in here is we have a very minimal",
    "start": "703320",
    "end": "710320"
  },
  {
    "text": "Ami and we let you deploy and manage and configure everything on top of it using Chef so three different approaches uh to",
    "start": "710320",
    "end": "718240"
  },
  {
    "text": "how you can deploy software on AWS and um which one you go with ultimately um",
    "start": "718240",
    "end": "724120"
  },
  {
    "text": "is influenced by the sorts of characteristics you're looking for in your development environment so I mentioned beanock and",
    "start": "724120",
    "end": "731200"
  },
  {
    "text": "let me just tell you a little bit about the different application management um Services out at AWS so you can kind of",
    "start": "731200",
    "end": "736800"
  },
  {
    "text": "understand where opsworks fits in now on the far left as I mentioned is beanock and beanock is a great solution if",
    "start": "736800",
    "end": "743000"
  },
  {
    "text": "you're looking for just kind of deploying your code to the cloud and going Andy mentioned it this morning and",
    "start": "743000",
    "end": "748240"
  },
  {
    "text": "um in reference to um it basically provides all the the um services that you might want for your",
    "start": "748240",
    "end": "753279"
  },
  {
    "text": "application it it builds them up for you so it creates ec2 instances and the auto scaling groups and and um the load",
    "start": "753279",
    "end": "759639"
  },
  {
    "text": "balancers and it goes ahead and takes care of all that for you but it's fairly prescribed so if you want to deviate",
    "start": "759639",
    "end": "765600"
  },
  {
    "text": "from that configuration you don't have as much control of that you you have um very few uh controls it's much more of",
    "start": "765600",
    "end": "772040"
  },
  {
    "text": "uh just load up your code and and go and a lot of customers really like that but um if you want a little more control",
    "start": "772040",
    "end": "777639"
  },
  {
    "text": "then you kind of move over towards the right of uh our slide here um on the far right you have kind of all the the",
    "start": "777639",
    "end": "783760"
  },
  {
    "text": "services that AWS is known for ec2 and auto scaling and and um load balancing",
    "start": "783760",
    "end": "788800"
  },
  {
    "text": "and you can certainly put all those together yourself and if you want to do it in a way that's a little bit more uh",
    "start": "788800",
    "end": "794839"
  },
  {
    "text": "uh repeatable then you might use something like Cloud information Cloud information lets you author in a in a Json based domain specific language and",
    "start": "794839",
    "end": "802199"
  },
  {
    "text": "it'll reliably deploy everything that you want that's inside that configuration file every time and so it",
    "start": "802199",
    "end": "808240"
  },
  {
    "text": "gives you a nice uh engine by which you can do AWS resource provisioning and then kind of there in",
    "start": "808240",
    "end": "814160"
  },
  {
    "text": "the middle is opsworks and opsworks gives you a nice balance of convenience and control so we give you a number of",
    "start": "814160",
    "end": "820639"
  },
  {
    "text": "built-in um capabilities that are suitable for application developers um while also giving you a lot of control",
    "start": "820639",
    "end": "826880"
  },
  {
    "text": "over how your application environment looks so we'll show you a bunch of this inside the the demonstration so I want",
    "start": "826880",
    "end": "832759"
  },
  {
    "text": "to kind of jump into the demonstration because I think that'll illustrate a bunch of the the characteristics of the service that I've been talking about",
    "start": "832759",
    "end": "840000"
  },
  {
    "text": "so what we're first going to do is create a stack a stack in opsworks is the set of resources you're using for a",
    "start": "840000",
    "end": "845040"
  },
  {
    "text": "common purpose and that purpose could be your development uh web server it could",
    "start": "845040",
    "end": "850199"
  },
  {
    "text": "be a production environment it's really whatever you need for the purpose of you're building and a stack has one or",
    "start": "850199",
    "end": "857399"
  },
  {
    "text": "more layers and a layer is basically something like your PHP app server or your database server maybe a load",
    "start": "857399",
    "end": "863360"
  },
  {
    "text": "balancer um so the it's a blueprint for a set of instances that you're using for",
    "start": "863360",
    "end": "868440"
  },
  {
    "text": "for that purpose and so any instance you create in that layer will automatically have all the characteristics that you've",
    "start": "868440",
    "end": "874519"
  },
  {
    "text": "set up for that layer then of course for those instances you're provisioning you tell us how you",
    "start": "874519",
    "end": "880199"
  },
  {
    "text": "want them to be provisioned you want them on all the time or do you want to be able to create them based on um load",
    "start": "880199",
    "end": "886199"
  },
  {
    "text": "based uh scaling or maybe time based scaling for a predictable sort of load you might have oops and then last uh you tell us",
    "start": "886199",
    "end": "895000"
  },
  {
    "text": "where to get your application and we'll go ahead and deploy it to your instances now kind of as I mentioned",
    "start": "895000",
    "end": "901199"
  },
  {
    "text": "earlier on in the presentation um when you deploy there's actually a lot of things you may want to do besides just",
    "start": "901199",
    "end": "906519"
  },
  {
    "text": "getting your application code on your instances and so how do we do that well opsworks has a series of life cycle",
    "start": "906519",
    "end": "912199"
  },
  {
    "text": "events that we use and those life cycle events will trigger the execution of Chef recipes and so as Aaron mentioned",
    "start": "912199",
    "end": "918440"
  },
  {
    "text": "Chef is a way that you can use uh to configure the characteristics of the software on your instances and you could",
    "start": "918440",
    "end": "925199"
  },
  {
    "text": "use these life cycle events for example when a new instance comes up you might get a setup event when it you your",
    "start": "925199",
    "end": "931480"
  },
  {
    "text": "application is is being deployed you get a deploy event and so during these events in your application life cycle",
    "start": "931480",
    "end": "937480"
  },
  {
    "text": "you can then have the chef recipes execute and perform tasks that you want to have done on your behalf and in my",
    "start": "937480",
    "end": "943440"
  },
  {
    "text": "demonstration one of the things I'm going to do is uh and it's probably pretty typical for those of you out there that are using applica or",
    "start": "943440",
    "end": "949199"
  },
  {
    "text": "databases with your applications you're going to want to be able to connect your application to your database so you may want to pass in your uh database",
    "start": "949199",
    "end": "955839"
  },
  {
    "text": "endpoint maybe the database credentials um or anything else you might need your application to know about and so we can",
    "start": "955839",
    "end": "961600"
  },
  {
    "text": "now avoid putting all that information into our application source code instead we can handle it just through uh Chef",
    "start": "961600",
    "end": "967279"
  },
  {
    "text": "configuration recipes so let's just tell you show you a quick example of how what this looks",
    "start": "967279",
    "end": "973360"
  },
  {
    "text": "like because I'm not going to spend a lot of time in the demonstration on it you can see kind of up above I have um a recipe for how I could do a connection",
    "start": "973360",
    "end": "979720"
  },
  {
    "text": "to my database and this um if you kind of can parse it uh uh mentally you can see the MySQL connection string with a",
    "start": "979720",
    "end": "986440"
  },
  {
    "text": "bunch of uh kind of uh parentheses and and angle brackets inside there those represent um the variables that we're",
    "start": "986440",
    "end": "993800"
  },
  {
    "text": "going to be plugging in there from our um our Chef uh metadata so the metadata basically shows us you know a username",
    "start": "993800",
    "end": "1000319"
  },
  {
    "text": "of root a password of abcxyz and we can see how those just get plugged in and and form the command that get gets",
    "start": "1000319",
    "end": "1006040"
  },
  {
    "text": "executed on our behalf so let's just go ahead and uh we'll flip over to the demonstration and",
    "start": "1006040",
    "end": "1012240"
  },
  {
    "text": "I'll kind of just show you a little bit of this in",
    "start": "1012240",
    "end": "1016160"
  },
  {
    "text": "action so here we have um the opsworks Management console and I'm going to go",
    "start": "1017839",
    "end": "1024038"
  },
  {
    "text": "ahead and create myself a new stack and we'll kind of give this stack uh name and we can see there's a",
    "start": "1024039",
    "end": "1031120"
  },
  {
    "text": "number of defaults here so I can pick a default operating system we support Linux and auntu today we can pick a",
    "start": "1031120",
    "end": "1037199"
  },
  {
    "text": "default region a default availability Zone and these defaults can typically be overridden while I'm uh inside my my",
    "start": "1037199",
    "end": "1044038"
  },
  {
    "text": "stack so I could have uh instances in multiple availability zones for example I can pick a default SSH keys and a",
    "start": "1044039",
    "end": "1051240"
  },
  {
    "text": "number of other attributes I'm going to go ahead and scroll down and because we're going to use some custom Chef",
    "start": "1051240",
    "end": "1056720"
  },
  {
    "text": "cookbooks to customize my uh my environment and so we support a number of repository types like get and",
    "start": "1056720",
    "end": "1063039"
  },
  {
    "text": "subversion you can even upload bundles to http on to an HTTP server or use S3",
    "start": "1063039",
    "end": "1068799"
  },
  {
    "text": "and uh here's my uh cookbook repository this is actually out there um on the open source uh so you can kind of take a",
    "start": "1068799",
    "end": "1075720"
  },
  {
    "text": "look at it if you're so inclined after this demonstration it's in GitHub and I'll just go ahead",
    "start": "1075720",
    "end": "1081039"
  },
  {
    "text": "and paste my GitHub uh URL inside here now this is a public repository but if",
    "start": "1081039",
    "end": "1086080"
  },
  {
    "text": "it was Private then I could paste my SSH key in here uh if this was subversion I could put in my credentials so you can",
    "start": "1086080",
    "end": "1092400"
  },
  {
    "text": "keep your cookbooks um as well as your source code obviously uh private if you wanted to even if it's out uh in the uh",
    "start": "1092400",
    "end": "1099520"
  },
  {
    "text": "in the open or you can use tools like Amazon's VPC to connect with your own data centers in case you have your own",
    "start": "1099520",
    "end": "1106039"
  },
  {
    "text": "uh G repository or subversion running running locally so let's just go ahead and we'll create",
    "start": "1106039",
    "end": "1111679"
  },
  {
    "text": "that stack and now what I want to do is uh is add the layers so my application is a PHP application and it connects to",
    "start": "1111679",
    "end": "1118000"
  },
  {
    "text": "a database so let's just go ahead and create those two layers so I'll create a PHP app server",
    "start": "1118000",
    "end": "1123200"
  },
  {
    "text": "layer and I'll create a my SQL database",
    "start": "1123200",
    "end": "1128360"
  },
  {
    "text": "layer and now I'm going to go ahead and add some instances to these layers and go ahead and start these instances up so",
    "start": "1130679",
    "end": "1135880"
  },
  {
    "text": "why don't I go ahead and I'll go ahead and do that and as I mentioned I can change availability zones if I wanted to so I could uh have a highly reliable",
    "start": "1135880",
    "end": "1142559"
  },
  {
    "text": "infrastructure running in multiple azs but I'll go ahead and just create all these in the",
    "start": "1142559",
    "end": "1148480"
  },
  {
    "text": "default and now let's go ahead and start these up now while these are starting up I'm going to go ahead and um go back to",
    "start": "1149440",
    "end": "1155559"
  },
  {
    "text": "the layers and and show a little bit more about what we're doing here so let's just take a look at um at our myle",
    "start": "1155559",
    "end": "1163559"
  },
  {
    "text": "um layer so again every instance that gets started in this layer is going to inherit all the the properties that we",
    "start": "1163559",
    "end": "1170159"
  },
  {
    "text": "set here so we can see there's some built-in Chef recipes that are going to be working on our behalf that are there",
    "start": "1170159",
    "end": "1175400"
  },
  {
    "text": "to install and configure my SQL and if we were so inclined we could click on these and these are all uh in an open",
    "start": "1175400",
    "end": "1180760"
  },
  {
    "text": "source GitHub repo as well so you can kind of see exactly what we're doing on your behalf um and then of course you",
    "start": "1180760",
    "end": "1187320"
  },
  {
    "text": "can add your own Uh custom Chef recipes and um and execute things that you may",
    "start": "1187320",
    "end": "1192840"
  },
  {
    "text": "want to do um on each of these layers I talked earlier in the presentation about needing to create",
    "start": "1192840",
    "end": "1198720"
  },
  {
    "text": "create volumes that get attached to your instances so here instead of having to do that manually um all you have to do",
    "start": "1198720",
    "end": "1203760"
  },
  {
    "text": "is basically say you know for every instance that gets created I want to have um uh one disc that's uh mounted at",
    "start": "1203760",
    "end": "1210120"
  },
  {
    "text": "Vol my SQL and it's going to be 10 gig in size and and you can see pretty easily how we might add additional ones to uh you know if I had a Evol data or",
    "start": "1210120",
    "end": "1217240"
  },
  {
    "text": "something like that I could just go ahead and and add that here right make that 100 Gig volume and",
    "start": "1217240",
    "end": "1223880"
  },
  {
    "text": "and just click on okay so um I also can assign last IPS here so every time the",
    "start": "1223880",
    "end": "1230240"
  },
  {
    "text": "instance uh if an instance boots for the first time it gets an elastic IP address um so I can also um specify things like",
    "start": "1230240",
    "end": "1238640"
  },
  {
    "text": "um the security groups I want my instance to be a part of now we create some sane defaults for you so you don't",
    "start": "1238640",
    "end": "1244120"
  },
  {
    "text": "have to worry about uh configuring everything um yourself we create some default security groups that um",
    "start": "1244120",
    "end": "1250000"
  },
  {
    "text": "basically allow your instances to in your app server tier to communicate with your instances and your database tier um",
    "start": "1250000",
    "end": "1255880"
  },
  {
    "text": "but you can always go ahead and override those if you if you're so inclined and I missed um the packages which I",
    "start": "1255880",
    "end": "1262120"
  },
  {
    "text": "think is kind of pretty cool too so if there's some software packages you want have installed all the time like maybe",
    "start": "1262120",
    "end": "1267200"
  },
  {
    "text": "for example WG wasn't installed for some reason in your um OS drro you can just list those packages here and uh then",
    "start": "1267200",
    "end": "1273720"
  },
  {
    "text": "they'll be installed and configured whenever your instance is boot to so that's really what um what the",
    "start": "1273720",
    "end": "1279679"
  },
  {
    "text": "layers are all about let's take a look at um at instances now as I mentioned um",
    "start": "1279679",
    "end": "1286000"
  },
  {
    "text": "you can have a couple different instance types uh you can have ones that are on all the on all the time and you can also",
    "start": "1286000",
    "end": "1291159"
  },
  {
    "text": "have time based instances so with a Time based instance I can just tell it uh the times of day that I want it to start up",
    "start": "1291159",
    "end": "1297360"
  },
  {
    "text": "and then the time is a day that it'll it'll shut down and this gives me the ability for predictable loads to be able",
    "start": "1297360",
    "end": "1302720"
  },
  {
    "text": "to respond to those uh very easily I also have the ability to create uh load",
    "start": "1302720",
    "end": "1308240"
  },
  {
    "text": "based thresholds so all the metrics for your instances are being tracked in",
    "start": "1308240",
    "end": "1313400"
  },
  {
    "text": "Amazon's cloudwatch and uh we provide a bunch of different um uh metrics for you",
    "start": "1313400",
    "end": "1318600"
  },
  {
    "text": "by default you they're collecting of course the standard ec2 metrics on CPU um but we also throw in a couple",
    "start": "1318600",
    "end": "1324360"
  },
  {
    "text": "additional metrics for memory and load and so you can use those metrics that we're collecting and you can use those",
    "start": "1324360",
    "end": "1329679"
  },
  {
    "text": "to perform scaling of uh your application",
    "start": "1329679",
    "end": "1334000"
  },
  {
    "text": "server now once I have my apps up or my instances up and running I'm going to probably want to deploy my application",
    "start": "1336360",
    "end": "1342600"
  },
  {
    "text": "to them so why don't I go ahead and I'll just um create my app in and my document routee here is is",
    "start": "1342600",
    "end": "1351840"
  },
  {
    "text": "at web I'm actually hosting this in a GitHub repo as well so I'm going to go",
    "start": "1351840",
    "end": "1357000"
  },
  {
    "text": "ahead and uh paste uh",
    "start": "1357000",
    "end": "1362880"
  },
  {
    "text": "oops paste that get uh URL",
    "start": "1362880",
    "end": "1367360"
  },
  {
    "text": "too and then I could specify things like a branch and version number so if I was moving from version one to version two I",
    "start": "1371600",
    "end": "1377600"
  },
  {
    "text": "could just change it here and um we'll go ahead and add this",
    "start": "1377600",
    "end": "1384159"
  },
  {
    "text": "app now one of the things I wanted to show you guys today was using opsworks as part of a continuous integration and",
    "start": "1384159",
    "end": "1390080"
  },
  {
    "text": "deployment pipeline so um a lot of folks that we talk with are using tools like Jenkins to automate the build process",
    "start": "1390080",
    "end": "1397640"
  },
  {
    "text": "that they have and the and then run run tests on their behalf and so we've actually done we did the same thing",
    "start": "1397640",
    "end": "1402960"
  },
  {
    "text": "internally we run our service on opsw works and we have uh Jenkins that uh performs our builds and we have a set of",
    "start": "1402960",
    "end": "1408960"
  },
  {
    "text": "integration tests that we use before we actually uh push anything to our our staging environment and um there's a",
    "start": "1408960",
    "end": "1414520"
  },
  {
    "text": "great talk later today about continuous integration deployment um that I'd encourage you to go to um we do a lot of",
    "start": "1414520",
    "end": "1419919"
  },
  {
    "text": "those processes internally and I'll kind of give you a bit of a demonstration of how all that",
    "start": "1419919",
    "end": "1425320"
  },
  {
    "text": "works so let's go over I have a um demonstration set up for",
    "start": "1425320",
    "end": "1431320"
  },
  {
    "text": "that so let's take a look at uh what we have running so so we have a couple different",
    "start": "1433840",
    "end": "1439679"
  },
  {
    "text": "uh servers running here I've uh created a Jenkin server and this Jenkin server is just running on our engine X um uh",
    "start": "1439679",
    "end": "1446760"
  },
  {
    "text": "static web server layer if we take a look at the uh at the layers we can kind of see what I've done here um took us a",
    "start": "1446760",
    "end": "1453080"
  },
  {
    "text": "basic static web server layer and I've added a Jenkins recipe to both setup and deploy so I install my Jenkins um and",
    "start": "1453080",
    "end": "1460159"
  },
  {
    "text": "then I perform a couple configuration tasks on it when when application deployments are being um being asked so",
    "start": "1460159",
    "end": "1466799"
  },
  {
    "text": "I have a Jenkins um server that's been set up I have my application server that's uh been been set up and uh the",
    "start": "1466799",
    "end": "1474159"
  },
  {
    "text": "deployment pipeline looks kind of like this when I make a change to my application in my source repo and you",
    "start": "1474159",
    "end": "1479919"
  },
  {
    "text": "kind of saw my source repo there in GitHub then it kicks off a event to my Jenkins build server and the Jenkins",
    "start": "1479919",
    "end": "1487039"
  },
  {
    "text": "build server goes ahead and and uh you know goes through the build process uh runs any tests I might have and then if",
    "start": "1487039",
    "end": "1492760"
  },
  {
    "text": "the tests all pass and I get the little blue circle in in Jenkins then it'll actually kick off a deployment to deploy",
    "start": "1492760",
    "end": "1498840"
  },
  {
    "text": "those changes now in this example we we're actually deploying to prod which may not be exactly what you'd want to do",
    "start": "1498840",
    "end": "1504399"
  },
  {
    "text": "on each uh on each Source change um instead what a lot of people do is they they might have their pipeline deploy",
    "start": "1504399",
    "end": "1510640"
  },
  {
    "text": "automatically on changes to their staging environment their their testing environment they might run additional manual tests or something like that and",
    "start": "1510640",
    "end": "1517360"
  },
  {
    "text": "then they'll go ahead and press a button to have it deploy out to prod um you could do use things like Route 53 to",
    "start": "1517360",
    "end": "1523200"
  },
  {
    "text": "actually shift over percentages of your traffic so you're not shifting over 100% of traffic to your new uh version and in",
    "start": "1523200",
    "end": "1529600"
  },
  {
    "text": "case there's any problems you can always roll back and so uh let's just go ahead and and show how that might work so here",
    "start": "1529600",
    "end": "1536320"
  },
  {
    "text": "in my um my application Source I'm going to go and um this is a very basic uh web",
    "start": "1536320",
    "end": "1542200"
  },
  {
    "text": "application that allows me to uh enter some thoughts capture those thoughts into a database and then display uh what",
    "start": "1542200",
    "end": "1549640"
  },
  {
    "text": "people have entered inside there and um we can kind of see that I have um the title of the application is your",
    "start": "1549640",
    "end": "1555360"
  },
  {
    "text": "thoughts question mark um I've Been Told that it might be a little bit more impactful if we change that to be an",
    "start": "1555360",
    "end": "1561720"
  },
  {
    "text": "exclamation point um people are more likely to want to add their thoughts then so let's just go ahead and we'll",
    "start": "1561720",
    "end": "1567919"
  },
  {
    "text": "make we'll make a change I'll go ahead and check that into my",
    "start": "1567919",
    "end": "1573320"
  },
  {
    "text": "repository we'll go back over to Jenkins and take a look at U my application that",
    "start": "1573320",
    "end": "1578960"
  },
  {
    "text": "is here and we can see that um looks like a build is just getting kicked off",
    "start": "1578960",
    "end": "1584399"
  },
  {
    "text": "um so Jenkins is going to go ahead and go through its um steps to do the verification um run through my automated",
    "start": "1584399",
    "end": "1590799"
  },
  {
    "text": "testing process and that sort of thing now if there were to be a problem like maybe I forgot my semicolon or what have",
    "start": "1590799",
    "end": "1597200"
  },
  {
    "text": "you then we could have an automated email come right back out to the developer and say hey you need to back out that change um but fortunately we",
    "start": "1597200",
    "end": "1605039"
  },
  {
    "text": "know that I don't have any problems at least in this example with that so why don't we come over and take a look at uh",
    "start": "1605039",
    "end": "1612279"
  },
  {
    "text": "deployments so we can see that Jenkins has kicked off a deployment so it's kicked off an application deployment to",
    "start": "1612279",
    "end": "1617679"
  },
  {
    "text": "update the the the um um applications that are running on my my ec2 instances",
    "start": "1617679",
    "end": "1622840"
  },
  {
    "text": "and we can see a few things about this let's just go ahead and and click into the deployment we can see that it's deploying to um the two servers that I",
    "start": "1622840",
    "end": "1630559"
  },
  {
    "text": "have running in this environment I have a database server and the PHP app server that I showed you guys and um we can see",
    "start": "1630559",
    "end": "1636640"
  },
  {
    "text": "that the the deployment to the database server is already finished and you might be saying to yourself why is he deploying to the database server why",
    "start": "1636640",
    "end": "1643880"
  },
  {
    "text": "would that PHP app go there really what this is doing is it's running your deploy recipes so we're actually",
    "start": "1643880",
    "end": "1649679"
  },
  {
    "text": "triggering a deployment event and it's running the recipes and the PHP app server recipes are telling you to grab",
    "start": "1649679",
    "end": "1655960"
  },
  {
    "text": "the source from your repo and install it and actually um uh turn the the web",
    "start": "1655960",
    "end": "1661279"
  },
  {
    "text": "server just do a quick reset of the web server while the my SQL uh recipes are",
    "start": "1661279",
    "end": "1666320"
  },
  {
    "text": "just looking at whatever custom recipes you might have on on deploy so it's not trying to deploy PHP there now if I",
    "start": "1666320",
    "end": "1672679"
  },
  {
    "text": "click on the little log there we can see easily um the results of the the chef",
    "start": "1672679",
    "end": "1677799"
  },
  {
    "text": "run which you know was pretty fast because um there's not really much to do on the database server but if I were",
    "start": "1677799",
    "end": "1683880"
  },
  {
    "text": "running this on a server that had some sort of problem then I could quickly and easily without even having to log into the server uh see exactly what's",
    "start": "1683880",
    "end": "1690640"
  },
  {
    "text": "happened during my chef run uh makes the debugging process a whole lot easier so we'll just go ahead and Bop",
    "start": "1690640",
    "end": "1697320"
  },
  {
    "text": "back out to deployments um we can kind of see you know additional deployments that have that have happened I can easily repeat",
    "start": "1697320",
    "end": "1703600"
  },
  {
    "text": "deployments if I um make changes and I and I want to run exactly the same deployment that I just ran",
    "start": "1703600",
    "end": "1709960"
  },
  {
    "text": "um so this kind of gives you hopefully a little sense as to once you've configured your environment how easy it is to deploy no matter how many servers",
    "start": "1709960",
    "end": "1715840"
  },
  {
    "text": "you have out there you're deploying and uh running those same Chef recipes",
    "start": "1715840",
    "end": "1721360"
  },
  {
    "text": "there looks like now we're we're fully um we've run everything so let's just go ahead and we'll um open up my the ec2",
    "start": "1722559",
    "end": "1730159"
  },
  {
    "text": "instance running my my web service and you can kind of see now I have an exclamation point there I don't have the",
    "start": "1730159",
    "end": "1735640"
  },
  {
    "text": "question mark that that was there before so you can kind of see the whole pipeline from from start to finish on",
    "start": "1735640",
    "end": "1740720"
  },
  {
    "text": "how I was able to make a change inside my source repo and have that automatically pushed on through to my um",
    "start": "1740720",
    "end": "1746480"
  },
  {
    "text": "my application servers now I mentioned inside my um my",
    "start": "1746480",
    "end": "1751840"
  },
  {
    "text": "earlier talk that um we also were able to have SSH keys that are user based and so you can kind of see on this",
    "start": "1751840",
    "end": "1757279"
  },
  {
    "text": "permissions page that I am able to on a per user basis and these are AWS IM",
    "start": "1757279",
    "end": "1762320"
  },
  {
    "text": "users so these are uh the folks that you're provisioning on ins inside your account so hopefully folks aren't using",
    "start": "1762320",
    "end": "1768399"
  },
  {
    "text": "your root account credentials to to do everything and you're able to designate who has SSH rights and who has pseudo",
    "start": "1768399",
    "end": "1774080"
  },
  {
    "text": "rights so when I uh click these these buttons here that also will kick off a deployment and it'll push the the uh",
    "start": "1774080",
    "end": "1780440"
  },
  {
    "text": "public key to the servers in your environment so that then the users can use their private key and and sign in so",
    "start": "1780440",
    "end": "1786760"
  },
  {
    "text": "as soon as uh one of my users were to um leave this environment I can just very easily uh click the the box and uh and",
    "start": "1786760",
    "end": "1794519"
  },
  {
    "text": "have them uh decommissioned so hopefully this gave you a good sense as to um what opsworks",
    "start": "1794519",
    "end": "1801080"
  },
  {
    "text": "is all about just to start from the top we created a stack uh we created a few layers in the stack um a layer for a PHP",
    "start": "1801080",
    "end": "1807279"
  },
  {
    "text": "app server layer for mySQL database we created some instances those instances then got the same um configuration that",
    "start": "1807279",
    "end": "1814880"
  },
  {
    "text": "we had specified in our layer config we created um a pointer to our app we could have had multiple apps PHP apps that are",
    "start": "1814880",
    "end": "1821519"
  },
  {
    "text": "deployed to our our app server in this case we just had one and um then I showed you a little bit about how we do",
    "start": "1821519",
    "end": "1826840"
  },
  {
    "text": "a deployment and hook it up to our build pipeline so with that why don't we go back to the",
    "start": "1826840",
    "end": "1834080"
  },
  {
    "text": "presentation ah the slide that should have been come before the",
    "start": "1840240",
    "end": "1845480"
  },
  {
    "text": "demo so um let me just go ahead and give you a little bit of an overview of um where we're going next with the service",
    "start": "1845480",
    "end": "1851720"
  },
  {
    "text": "so the service um today supports a variety of ec2 resources but um we we we",
    "start": "1851720",
    "end": "1858480"
  },
  {
    "text": "know we've heard from customers um in our forums that we're they're very eager to get support from more AWS resource",
    "start": "1858480",
    "end": "1864720"
  },
  {
    "text": "types you can often integrate with other AWS resources like RDS through um by",
    "start": "1864720",
    "end": "1870399"
  },
  {
    "text": "just adding custom uh Json inside the opsworks service but uh we want to make it even easier for users so uh more",
    "start": "1870399",
    "end": "1877360"
  },
  {
    "text": "integration with AWS resources is coming this year we also want to add more built-in layers so as I mentioned we",
    "start": "1877360",
    "end": "1883120"
  },
  {
    "text": "have support today for things like Ruby and PHP and MySQL you saw a bunch of those in the demonstration uh we want to",
    "start": "1883120",
    "end": "1888559"
  },
  {
    "text": "go ahead and keep extending that um so vote in the forums on the layers you find most useful the the uh what you'd",
    "start": "1888559",
    "end": "1894440"
  },
  {
    "text": "like to see us support uh we really are driven by what customers are asking us for we also um want to get um deeper on",
    "start": "1894440",
    "end": "1902720"
  },
  {
    "text": "on integration with Amazon's VPC today we have uh some pretty basic support for VPC so you can connect with your own",
    "start": "1902720",
    "end": "1909440"
  },
  {
    "text": "Enterprise resources U maybe you're running a source repo internally or have um some other resources that are",
    "start": "1909440",
    "end": "1915639"
  },
  {
    "text": "internal that you uh need to access so you can do it in a pretty basic way but we want to make that deeper and and uh",
    "start": "1915639",
    "end": "1921960"
  },
  {
    "text": "continue to uh enhance that because we know a lot of our larger customers are using VPC and we uh of course want to continue",
    "start": "1921960",
    "end": "1928600"
  },
  {
    "text": "adding in lots of areas lots of Dimensions um we uh really are focused on what customers are asking us for so",
    "start": "1928600",
    "end": "1933960"
  },
  {
    "text": "as you get in and use a service please do comment on the forums on uh where you'd like to see us invest and and",
    "start": "1933960",
    "end": "1939760"
  },
  {
    "text": "we're we're really listening hard and and uh want to um go ahead and and uh uh support the things that are most useful",
    "start": "1939760",
    "end": "1946240"
  },
  {
    "text": "to the community at Large so uh thank you so um just uh summarize",
    "start": "1946240",
    "end": "1953080"
  },
  {
    "text": "uh you know we we want to use uh have opss be a service that uh helps our customers become more productive uh",
    "start": "1953080",
    "end": "1960080"
  },
  {
    "text": "through automation through uh more consistency by using uh uh today the chef cookbooks and recipes uh and we",
    "start": "1960080",
    "end": "1967039"
  },
  {
    "text": "want to let you uh develop very reliable and scalable uh web apps so uh thank you for um for taking the time to come to",
    "start": "1967039",
    "end": "1973519"
  },
  {
    "text": "the session we'll be taking questions up in the front so if you have questions please come on up to the front and we'll be happy to talk with you thank you",
    "start": "1973519",
    "end": "1982360"
  }
]