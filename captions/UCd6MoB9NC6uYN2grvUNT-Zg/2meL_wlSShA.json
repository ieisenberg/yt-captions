[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "actually this is a good session to end",
    "start": "3480",
    "end": "5649"
  },
  {
    "text": "the day because to be honest it's a",
    "start": "5649",
    "end": "8109"
  },
  {
    "text": "little bit silly it's really just an",
    "start": "8109",
    "end": "10570"
  },
  {
    "text": "excuse to to play with with cloud watch",
    "start": "10570",
    "end": "15670"
  },
  {
    "text": "events to play with a spark streaming",
    "start": "15670",
    "end": "18010"
  },
  {
    "text": "and obviously this is not intended to be",
    "start": "18010",
    "end": "21460"
  },
  {
    "text": "deployed in in real life or or maybe it",
    "start": "21460",
    "end": "25150"
  },
  {
    "text": "is but if you do something smart with",
    "start": "25150",
    "end": "27369"
  },
  {
    "text": "this I'd be really curious to know okay",
    "start": "27369",
    "end": "30070"
  },
  {
    "text": "so this is really just you know just an",
    "start": "30070",
    "end": "33160"
  },
  {
    "text": "example of what you could do combining a",
    "start": "33160",
    "end": "35380"
  },
  {
    "text": "few AWS services but I think it's still",
    "start": "35380",
    "end": "37990"
  },
  {
    "text": "cool and some of these topics are",
    "start": "37990",
    "end": "39820"
  },
  {
    "text": "actually you know we don't talk so much",
    "start": "39820",
    "end": "42700"
  },
  {
    "text": "about them so you know I felt hey let's",
    "start": "42700",
    "end": "44740"
  },
  {
    "text": "let's combine them and show them to you",
    "start": "44740",
    "end": "46680"
  },
  {
    "text": "so what we're going to do really is",
    "start": "46680",
    "end": "49960"
  },
  {
    "text": "we're going to to catch ec2 events so",
    "start": "49960",
    "end": "54160"
  },
  {
    "text": "instances starting instances terminating",
    "start": "54160",
    "end": "57160"
  },
  {
    "text": "instances stopping etc and we're going",
    "start": "57160",
    "end": "60130"
  },
  {
    "text": "to to funnel them from ec2 to a spark",
    "start": "60130",
    "end": "65560"
  },
  {
    "text": "cluster right for literally no good",
    "start": "65560",
    "end": "68170"
  },
  {
    "text": "reason other than doing it first of all",
    "start": "68170",
    "end": "72729"
  },
  {
    "start": "72000",
    "end": "155000"
  },
  {
    "text": "let's talk about ec2 lifecycle events",
    "start": "72729",
    "end": "75070"
  },
  {
    "text": "who who knows about that who's heard",
    "start": "75070",
    "end": "78520"
  },
  {
    "text": "about that yeah a couple of people it's",
    "start": "78520",
    "end": "82329"
  },
  {
    "text": "it's something that you know usually you",
    "start": "82329",
    "end": "85210"
  },
  {
    "text": "don't really look at so basically what",
    "start": "85210",
    "end": "87999"
  },
  {
    "text": "this means is this is the the normal",
    "start": "87999",
    "end": "91390"
  },
  {
    "text": "life cycle of an ec2 instance so some of",
    "start": "91390",
    "end": "94060"
  },
  {
    "text": "the states are well known you see them",
    "start": "94060",
    "end": "95979"
  },
  {
    "text": "in the console when you start and stop",
    "start": "95979",
    "end": "98789"
  },
  {
    "text": "instances so for example you know",
    "start": "98789",
    "end": "102100"
  },
  {
    "text": "pending and in-service and terminating",
    "start": "102100",
    "end": "105100"
  },
  {
    "text": "and terminated in other vertical ones",
    "start": "105100",
    "end": "108189"
  },
  {
    "text": "the one in the middle I mean you're used",
    "start": "108189",
    "end": "110590"
  },
  {
    "text": "to seeing them right but actually there",
    "start": "110590",
    "end": "113530"
  },
  {
    "text": "are some extra states which are pending",
    "start": "113530",
    "end": "117249"
  },
  {
    "text": "way depending proceed terminating wait",
    "start": "117249",
    "end": "119259"
  },
  {
    "text": "summoning proceed which most of the time",
    "start": "119259",
    "end": "123819"
  },
  {
    "text": "are not used but there's a way to insert",
    "start": "123819",
    "end": "128039"
  },
  {
    "text": "some extra processing between those",
    "start": "128039",
    "end": "132700"
  },
  {
    "text": "states and so what that means really is",
    "start": "132700",
    "end": "135939"
  },
  {
    "text": "be four",
    "start": "135939",
    "end": "136720"
  },
  {
    "text": "or an instance actually goes in service",
    "start": "136720",
    "end": "140050"
  },
  {
    "text": "you are able to execute some processing",
    "start": "140050",
    "end": "142540"
  },
  {
    "text": "and we'll see what we can do here and",
    "start": "142540",
    "end": "144780"
  },
  {
    "text": "before an instance actually terminates",
    "start": "144780",
    "end": "149230"
  },
  {
    "text": "you're also able to insert some",
    "start": "149230",
    "end": "151120"
  },
  {
    "text": "processing and that's pretty useful so",
    "start": "151120",
    "end": "154560"
  },
  {
    "text": "what can you do with that well actually",
    "start": "154560",
    "end": "159130"
  },
  {
    "start": "155000",
    "end": "210000"
  },
  {
    "text": "if you saw my presentation this morning",
    "start": "159130",
    "end": "160690"
  },
  {
    "text": "on code deploy code deploy uses",
    "start": "160690",
    "end": "164680"
  },
  {
    "text": "lifecycle events to deploy code on",
    "start": "164680",
    "end": "168760"
  },
  {
    "text": "starting instances right when an instant",
    "start": "168760",
    "end": "170950"
  },
  {
    "text": "starts code deploy gets a notification",
    "start": "170950",
    "end": "173140"
  },
  {
    "text": "and and deploys code that needs to go on",
    "start": "173140",
    "end": "177550"
  },
  {
    "text": "to that server so that's an example here",
    "start": "177550",
    "end": "181030"
  },
  {
    "text": "you can see on that slide some other",
    "start": "181030",
    "end": "182320"
  },
  {
    "text": "examples of what you could want to do",
    "start": "182320",
    "end": "184860"
  },
  {
    "text": "when an instant starts or terminates",
    "start": "184860",
    "end": "187709"
  },
  {
    "text": "register them with DNS grab some logs",
    "start": "187709",
    "end": "190959"
  },
  {
    "text": "before the instance dies there are many",
    "start": "190959",
    "end": "193930"
  },
  {
    "text": "initialization and cleanup tasks that",
    "start": "193930",
    "end": "196390"
  },
  {
    "text": "you can alternate like that and and",
    "start": "196390",
    "end": "198310"
  },
  {
    "text": "which are pretty inconvenient to",
    "start": "198310",
    "end": "200260"
  },
  {
    "text": "automate if you'll not have events such",
    "start": "200260",
    "end": "203410"
  },
  {
    "text": "as these right so there are many many",
    "start": "203410",
    "end": "206739"
  },
  {
    "text": "ideas on what to do here so what we're",
    "start": "206739",
    "end": "211630"
  },
  {
    "start": "210000",
    "end": "325000"
  },
  {
    "text": "going to build is this and yes there's",
    "start": "211630",
    "end": "214989"
  },
  {
    "text": "lambda again you didn't think you could",
    "start": "214989",
    "end": "218080"
  },
  {
    "text": "escape it right so what we're going to",
    "start": "218080",
    "end": "221350"
  },
  {
    "text": "do is we're going to start some easy to",
    "start": "221350",
    "end": "223500"
  },
  {
    "text": "activity so for example we're going to",
    "start": "223500",
    "end": "227920"
  },
  {
    "text": "start some instances and stop some",
    "start": "227920",
    "end": "229720"
  },
  {
    "text": "instances and you know basically change",
    "start": "229720",
    "end": "232239"
  },
  {
    "text": "their state this is going to send",
    "start": "232239",
    "end": "235420"
  },
  {
    "text": "automatically an event to cloud watch",
    "start": "235420",
    "end": "238570"
  },
  {
    "text": "you know I'm not sure I understood the",
    "start": "238570",
    "end": "240820"
  },
  {
    "text": "hundred percent of what the previous",
    "start": "240820",
    "end": "242260"
  },
  {
    "text": "gentleman said but I did I understand",
    "start": "242260",
    "end": "245380"
  },
  {
    "text": "the cloud which part but so yeah there's",
    "start": "245380",
    "end": "249160"
  },
  {
    "text": "a there's a part of cloud watch where",
    "start": "249160",
    "end": "251260"
  },
  {
    "text": "you can actually define rules on those",
    "start": "251260",
    "end": "255010"
  },
  {
    "text": "events and say ok when ec2 activity",
    "start": "255010",
    "end": "257350"
  },
  {
    "text": "happens when auto scaling activity",
    "start": "257350",
    "end": "259540"
  },
  {
    "text": "happens do something and so what we're",
    "start": "259540",
    "end": "264220"
  },
  {
    "text": "going to do in this case you we're going",
    "start": "264220",
    "end": "265810"
  },
  {
    "text": "to call a lambda function pretty simple",
    "start": "265810",
    "end": "268750"
  },
  {
    "text": "and this lambda function is",
    "start": "268750",
    "end": "270580"
  },
  {
    "text": "to write those events into fire hose",
    "start": "270580",
    "end": "274500"
  },
  {
    "text": "fire hose is a higher level abstraction",
    "start": "274500",
    "end": "277990"
  },
  {
    "text": "on top of kin disease I guess you're",
    "start": "277990",
    "end": "280120"
  },
  {
    "text": "familiar with it it's a very scalable",
    "start": "280120",
    "end": "282879"
  },
  {
    "text": "pipe but in this case I'm going to point",
    "start": "282879",
    "end": "285490"
  },
  {
    "text": "to s3 okay so i'm going to write those",
    "start": "285490",
    "end": "288099"
  },
  {
    "text": "events two or three in in a bucket and i",
    "start": "288099",
    "end": "292210"
  },
  {
    "text": "will start a spark cluster who is",
    "start": "292210",
    "end": "295860"
  },
  {
    "text": "constantly listening on for new files in",
    "start": "295860",
    "end": "299710"
  },
  {
    "text": "this bucket and so anything anytime",
    "start": "299710",
    "end": "302680"
  },
  {
    "text": "something happens there it's going to",
    "start": "302680",
    "end": "304659"
  },
  {
    "text": "grab the lines inside the file and print",
    "start": "304659",
    "end": "306969"
  },
  {
    "text": "them ok so again this is not doing",
    "start": "306969",
    "end": "311199"
  },
  {
    "text": "anything useful which is just",
    "start": "311199",
    "end": "312639"
  },
  {
    "text": "illustrating the path from ec2 to",
    "start": "312639",
    "end": "316300"
  },
  {
    "text": "somewhere else but i'm going to",
    "start": "316300",
    "end": "318310"
  },
  {
    "text": "highlight the specific parts where you",
    "start": "318310",
    "end": "321430"
  },
  {
    "text": "could insert something useful ok so",
    "start": "321430",
    "end": "325479"
  },
  {
    "start": "325000",
    "end": "440000"
  },
  {
    "text": "let's well let's look at the actual",
    "start": "325479",
    "end": "328930"
  },
  {
    "text": "console and how these things are",
    "start": "328930",
    "end": "330699"
  },
  {
    "text": "configured right",
    "start": "330699",
    "end": "333419"
  },
  {
    "text": "so here's the cloud watch part so you've",
    "start": "344169",
    "end": "346270"
  },
  {
    "text": "got this you know you know clad watch",
    "start": "346270",
    "end": "348069"
  },
  {
    "text": "alarms and logs like in the previous",
    "start": "348069",
    "end": "351639"
  },
  {
    "text": "presentation and there's this part here",
    "start": "351639",
    "end": "354699"
  },
  {
    "text": "called events and that's the part I'm",
    "start": "354699",
    "end": "357189"
  },
  {
    "text": "interested in and this is where i can",
    "start": "357189",
    "end": "358810"
  },
  {
    "text": "define rules so as of now you can use",
    "start": "358810",
    "end": "362620"
  },
  {
    "text": "some different inverts event sources",
    "start": "362620",
    "end": "364479"
  },
  {
    "text": "like ec2 instant instance state change",
    "start": "364479",
    "end": "369939"
  },
  {
    "text": "like auto scaling or even API AWS API",
    "start": "369939",
    "end": "374830"
  },
  {
    "text": "calls so you could say when a specific",
    "start": "374830",
    "end": "377409"
  },
  {
    "text": "API is called within a WS do something",
    "start": "377409",
    "end": "380589"
  },
  {
    "text": "that could be really useful as well and",
    "start": "380589",
    "end": "382889"
  },
  {
    "text": "and you can add targets right and those",
    "start": "382889",
    "end": "386740"
  },
  {
    "text": "targets could be you know SNS sending a",
    "start": "386740",
    "end": "389919"
  },
  {
    "text": "notification with SNS sending a message",
    "start": "389919",
    "end": "392050"
  },
  {
    "text": "to an SQS q writing to kinsey stream or",
    "start": "392050",
    "end": "396460"
  },
  {
    "text": "in my case calling a lambda function",
    "start": "396460",
    "end": "399219"
  },
  {
    "text": "right so that's what I'm going to do so",
    "start": "399219",
    "end": "401830"
  },
  {
    "text": "i have defined two rules here which are",
    "start": "401830",
    "end": "403870"
  },
  {
    "text": "very similar one for auto scaling okay",
    "start": "403870",
    "end": "407319"
  },
  {
    "text": "so basically what says here is anytime",
    "start": "407319",
    "end": "410770"
  },
  {
    "text": "something happens in auto scaling for",
    "start": "410770",
    "end": "412810"
  },
  {
    "text": "all events please call this lambda",
    "start": "412810",
    "end": "415539"
  },
  {
    "text": "function which i'm going to show you in",
    "start": "415539",
    "end": "417939"
  },
  {
    "text": "a minute and the same thing goes for ec2",
    "start": "417939",
    "end": "421839"
  },
  {
    "text": "lifecycle anytime and you see to intern",
    "start": "421839",
    "end": "424210"
  },
  {
    "text": "instance changes state please call this",
    "start": "424210",
    "end": "427599"
  },
  {
    "text": "lambda function right so it's very",
    "start": "427599",
    "end": "429460"
  },
  {
    "text": "simple to do and this is how you do it",
    "start": "429460",
    "end": "431770"
  },
  {
    "text": "in the console I'm going to show you how",
    "start": "431770",
    "end": "433870"
  },
  {
    "text": "to do it with the command line as well",
    "start": "433870",
    "end": "435370"
  },
  {
    "text": "okay so let's look at the lambda",
    "start": "435370",
    "end": "439930"
  },
  {
    "text": "function first can you see okay in the",
    "start": "439930",
    "end": "444069"
  },
  {
    "start": "440000",
    "end": "550000"
  },
  {
    "text": "back or is it too small yeah good okay",
    "start": "444069",
    "end": "449399"
  },
  {
    "text": "so it's a Python function so what this",
    "start": "449399",
    "end": "454270"
  },
  {
    "text": "does you know what it needs to do is",
    "start": "454270",
    "end": "456389"
  },
  {
    "text": "it's going to take that event sent by",
    "start": "456389",
    "end": "458889"
  },
  {
    "text": "alcohol watch and it needs to write it",
    "start": "458889",
    "end": "461740"
  },
  {
    "text": "into fire hose so I need to grab access",
    "start": "461740",
    "end": "466389"
  },
  {
    "text": "to fire hose which I'm doing here then",
    "start": "466389",
    "end": "469870"
  },
  {
    "text": "in from that event I'm extracting the",
    "start": "469870",
    "end": "473050"
  },
  {
    "text": "instance ID right that you see in the",
    "start": "473050",
    "end": "475300"
  },
  {
    "text": "sea to console I'm extracting the stage",
    "start": "475300",
    "end": "478060"
  },
  {
    "text": "it and I'm printing this right just",
    "start": "478060",
    "end": "481780"
  },
  {
    "text": "saying hey instance X is in this given",
    "start": "481780",
    "end": "485350"
  },
  {
    "text": "state and I'm putting the whole record",
    "start": "485350",
    "end": "489880"
  },
  {
    "text": "into my kinases stream okay so obviously",
    "start": "489880",
    "end": "492669"
  },
  {
    "text": "this isn't doing anything useful but",
    "start": "492669",
    "end": "494470"
  },
  {
    "text": "this is what you would want to do right",
    "start": "494470",
    "end": "496570"
  },
  {
    "text": "this is what this is where you would use",
    "start": "496570",
    "end": "499510"
  },
  {
    "text": "lifecycle hooks to do something useful",
    "start": "499510",
    "end": "501850"
  },
  {
    "text": "when the instant starts or when instance",
    "start": "501850",
    "end": "504639"
  },
  {
    "text": "terminates or when the instance I",
    "start": "504639",
    "end": "506950"
  },
  {
    "text": "stopped for example okay so you will",
    "start": "506950",
    "end": "509470"
  },
  {
    "text": "look at the state and say okay if the",
    "start": "509470",
    "end": "511120"
  },
  {
    "text": "instance is pending then you know I get",
    "start": "511120",
    "end": "513820"
  },
  {
    "text": "a chance to do something before it",
    "start": "513820",
    "end": "515050"
  },
  {
    "text": "actually starts and becomes in service",
    "start": "515050",
    "end": "517659"
  },
  {
    "text": "so this is what I we do if the instance",
    "start": "517659",
    "end": "520330"
  },
  {
    "text": "is terminating you know it's dying so",
    "start": "520330",
    "end": "522610"
  },
  {
    "text": "maybe I need to get some logs maybe I",
    "start": "522610",
    "end": "524500"
  },
  {
    "text": "need to do some cleanup and this is",
    "start": "524500",
    "end": "526180"
  },
  {
    "text": "where I would do it right so a lambda",
    "start": "526180",
    "end": "527920"
  },
  {
    "text": "function is a great way to do that the",
    "start": "527920",
    "end": "531310"
  },
  {
    "text": "only limitation is you need to do that",
    "start": "531310",
    "end": "533260"
  },
  {
    "text": "fairly quickly you cannot hold an",
    "start": "533260",
    "end": "536230"
  },
  {
    "text": "instance in the terminating state",
    "start": "536230",
    "end": "538060"
  },
  {
    "text": "forever there's a time out there so you",
    "start": "538060",
    "end": "540370"
  },
  {
    "text": "know you can't run anything that would",
    "start": "540370",
    "end": "541960"
  },
  {
    "text": "take too long and lambda function as a",
    "start": "541960",
    "end": "543910"
  },
  {
    "text": "maximum time out of 5 minutes anyway so",
    "start": "543910",
    "end": "546130"
  },
  {
    "text": "needs to be fairly fast right so how",
    "start": "546130",
    "end": "550330"
  },
  {
    "start": "550000",
    "end": "655000"
  },
  {
    "text": "would you how would you do this with the",
    "start": "550330",
    "end": "551680"
  },
  {
    "text": "command line just quickly because no one",
    "start": "551680",
    "end": "555700"
  },
  {
    "text": "likes to click in the console right",
    "start": "555700",
    "end": "560820"
  },
  {
    "text": "never do that because the problem is you",
    "start": "560820",
    "end": "565510"
  },
  {
    "text": "don't really don't remember what you",
    "start": "565510",
    "end": "566920"
  },
  {
    "text": "what you've done and then it's a problem",
    "start": "566920",
    "end": "568360"
  },
  {
    "text": "scripts are more repeatable so these are",
    "start": "568360",
    "end": "571420"
  },
  {
    "text": "the the JSON descriptions for for the",
    "start": "571420",
    "end": "574240"
  },
  {
    "text": "rules and this is what you would do",
    "start": "574240",
    "end": "576430"
  },
  {
    "text": "really so once oops sorry once the",
    "start": "576430",
    "end": "580780"
  },
  {
    "text": "function exists you would grab its you",
    "start": "580780",
    "end": "584800"
  },
  {
    "text": "would grab it's a RN right it's a",
    "start": "584800",
    "end": "587530"
  },
  {
    "text": "resource resource name you would assign",
    "start": "587530",
    "end": "591040"
  },
  {
    "text": "you would create a rule so in this case",
    "start": "591040",
    "end": "594730"
  },
  {
    "text": "for auto scaling in cloud watch you",
    "start": "594730",
    "end": "597490"
  },
  {
    "text": "would define the lambda function as a",
    "start": "597490",
    "end": "599230"
  },
  {
    "text": "target and you would grant permission to",
    "start": "599230",
    "end": "603450"
  },
  {
    "text": "cloud watch to invoke",
    "start": "603450",
    "end": "606819"
  },
  {
    "text": "the nursery you would get permission to",
    "start": "606819",
    "end": "609519"
  },
  {
    "text": "the lambda function to write in 25 so",
    "start": "609519",
    "end": "611859"
  },
  {
    "text": "you need you need a rule and enter and a",
    "start": "611859",
    "end": "616119"
  },
  {
    "text": "role in there ok so fairly simple so",
    "start": "616119",
    "end": "619419"
  },
  {
    "text": "lambda function we've already seen just",
    "start": "619419",
    "end": "624249"
  },
  {
    "text": "a reminder but that's you know that's a",
    "start": "624249",
    "end": "626049"
  },
  {
    "text": "useful thing to know every time you",
    "start": "626049",
    "end": "628809"
  },
  {
    "text": "create a lambda function and",
    "start": "628809",
    "end": "630279"
  },
  {
    "text": "specifically a new version of a lambda",
    "start": "630279",
    "end": "631989"
  },
  {
    "text": "function there's a clock watch Law Group",
    "start": "631989",
    "end": "633549"
  },
  {
    "text": "that is created automatically so",
    "start": "633549",
    "end": "635559"
  },
  {
    "text": "anything that the function prints",
    "start": "635559",
    "end": "637059"
  },
  {
    "text": "actually ends up in a log so just for",
    "start": "637059",
    "end": "641979"
  },
  {
    "text": "reference this so these are the commands",
    "start": "641979",
    "end": "643809"
  },
  {
    "text": "you would use to grab those logs",
    "start": "643809",
    "end": "645279"
  },
  {
    "text": "actually not again not go in the console",
    "start": "645279",
    "end": "647410"
  },
  {
    "text": "and read the logs probably you want to",
    "start": "647410",
    "end": "649600"
  },
  {
    "text": "fetch the lambda logs and parse them and",
    "start": "649600",
    "end": "651639"
  },
  {
    "text": "see what's going on in there ok then I",
    "start": "651639",
    "end": "658139"
  },
  {
    "start": "655000",
    "end": "715000"
  },
  {
    "text": "need a fire hose from pointing to s3 so",
    "start": "660449",
    "end": "667149"
  },
  {
    "text": "not much to to show here I mean you just",
    "start": "667149",
    "end": "669100"
  },
  {
    "text": "create that point with one API call or",
    "start": "669100",
    "end": "672009"
  },
  {
    "text": "just one click really so it's going to",
    "start": "672009",
    "end": "675279"
  },
  {
    "text": "point us three to the to this bucket",
    "start": "675279",
    "end": "678339"
  },
  {
    "text": "here and it's going to flush every time",
    "start": "678339",
    "end": "680829"
  },
  {
    "text": "one megabyte has been written or every",
    "start": "680829",
    "end": "683649"
  },
  {
    "text": "60 second right and I'm not compressing",
    "start": "683649",
    "end": "685689"
  },
  {
    "text": "data because I never found out how to",
    "start": "685689",
    "end": "689350"
  },
  {
    "text": "read compressed file in spark someone",
    "start": "689350",
    "end": "691269"
  },
  {
    "text": "knows that I'd be happy to know but",
    "start": "691269",
    "end": "693279"
  },
  {
    "text": "seems to be an unsolved problem for",
    "start": "693279",
    "end": "695019"
  },
  {
    "text": "mankind or me especially and so at the",
    "start": "695019",
    "end": "700419"
  },
  {
    "text": "end of the rainbow I have the s3 bucket",
    "start": "700419",
    "end": "702909"
  },
  {
    "text": "where I should see my files showing up",
    "start": "702909",
    "end": "705100"
  },
  {
    "text": "ok and obviously I created a spark",
    "start": "705100",
    "end": "708100"
  },
  {
    "text": "cluster because that takes a few minutes",
    "start": "708100",
    "end": "709600"
  },
  {
    "text": "and we have no time to waste all right",
    "start": "709600",
    "end": "712079"
  },
  {
    "text": "so shall we try that so first of all I",
    "start": "712079",
    "end": "717189"
  },
  {
    "start": "715000",
    "end": "1185000"
  },
  {
    "text": "should probably connect to my spark",
    "start": "717189",
    "end": "723759"
  },
  {
    "text": "cluster yes ascii art fantastic",
    "start": "723759",
    "end": "729670"
  },
  {
    "text": "launched the spark shell which takes way",
    "start": "729670",
    "end": "734509"
  },
  {
    "text": "too long to start but that's fine yeah",
    "start": "734509",
    "end": "738319"
  },
  {
    "text": "come on and what am I going to do now",
    "start": "738319",
    "end": "743110"
  },
  {
    "text": "well I just need to grab my spark code",
    "start": "743110",
    "end": "746000"
  },
  {
    "text": "right so this is the spark code it's a",
    "start": "746000",
    "end": "752240"
  },
  {
    "text": "scholar code actually anybody rights",
    "start": "752240",
    "end": "754040"
  },
  {
    "text": "gala did you tell your family no yeah",
    "start": "754040",
    "end": "762889"
  },
  {
    "text": "you tell them you're a PHP developer",
    "start": "762889",
    "end": "764720"
  },
  {
    "text": "yeah safer okay so it's a simple it's a",
    "start": "764720",
    "end": "768829"
  },
  {
    "text": "simple job so this is just importing",
    "start": "768829",
    "end": "770540"
  },
  {
    "text": "some classes this is just saying asking",
    "start": "770540",
    "end": "774279"
  },
  {
    "text": "spark to shut up most of the time",
    "start": "774279",
    "end": "776509"
  },
  {
    "text": "because it's very verbose then this is",
    "start": "776509",
    "end": "780170"
  },
  {
    "text": "just giving access to s3 because the",
    "start": "780170",
    "end": "784279"
  },
  {
    "text": "spark job needs to listen to s3 so don't",
    "start": "784279",
    "end": "786860"
  },
  {
    "text": "get excited are these are not my master",
    "start": "786860",
    "end": "789019"
  },
  {
    "text": "keys right so this is just a I see a",
    "start": "789019",
    "end": "791740"
  },
  {
    "text": "very limited account which i will delete",
    "start": "791740",
    "end": "794259"
  },
  {
    "text": "after the demo so sorry you don't get",
    "start": "794259",
    "end": "797509"
  },
  {
    "text": "access to my free AWS superpower",
    "start": "797509",
    "end": "800050"
  },
  {
    "text": "accountant sorry I'm creating a",
    "start": "800050",
    "end": "803120"
  },
  {
    "text": "streaming context which will execute",
    "start": "803120",
    "end": "804709"
  },
  {
    "text": "every 10 seconds I'm and and I'm",
    "start": "804709",
    "end": "808910"
  },
  {
    "text": "creating a stream from all the new files",
    "start": "808910",
    "end": "813980"
  },
  {
    "text": "created in this bucket right so this",
    "start": "813980",
    "end": "816470"
  },
  {
    "text": "this will run every 10 seconds and what",
    "start": "816470",
    "end": "818899"
  },
  {
    "text": "would it do it will just print the lines",
    "start": "818899",
    "end": "820730"
  },
  {
    "text": "okay so i will just grab that and",
    "start": "820730",
    "end": "827290"
  },
  {
    "text": "hopefully paste it without error in",
    "start": "827290",
    "end": "831230"
  },
  {
    "text": "there yes okay and how there it goes so",
    "start": "831230",
    "end": "838809"
  },
  {
    "text": "so it's going to start in few seconds",
    "start": "838809",
    "end": "841939"
  },
  {
    "text": "right okay so you're going to see this",
    "start": "841939",
    "end": "844339"
  },
  {
    "text": "message every 10 seconds right so for",
    "start": "844339",
    "end": "846199"
  },
  {
    "text": "now you know nothing's happening",
    "start": "846199",
    "end": "847430"
  },
  {
    "text": "nothing's being written to s3 because",
    "start": "847430",
    "end": "850069"
  },
  {
    "text": "there is no easy to activity but let's",
    "start": "850069",
    "end": "852920"
  },
  {
    "text": "start some easy to activity and see if",
    "start": "852920",
    "end": "854839"
  },
  {
    "text": "we get some output",
    "start": "854839",
    "end": "857470"
  },
  {
    "text": "alright so what could I do I could",
    "start": "862650",
    "end": "865120"
  },
  {
    "text": "restart my minecraft server for example",
    "start": "865120",
    "end": "867220"
  },
  {
    "text": "which is obviously for professional",
    "start": "867220",
    "end": "870070"
  },
  {
    "text": "purposes start I could stop my machine",
    "start": "870070",
    "end": "877780"
  },
  {
    "text": "learning client I don't think I'll need",
    "start": "877780",
    "end": "879130"
  },
  {
    "text": "it today stop and I could launch some",
    "start": "879130",
    "end": "884770"
  },
  {
    "text": "silly instances just to create some",
    "start": "884770",
    "end": "886750"
  },
  {
    "text": "traffic in there yeah let's do that",
    "start": "886750",
    "end": "891240"
  },
  {
    "text": "launch okay so remember the the",
    "start": "891240",
    "end": "901210"
  },
  {
    "text": "architecture here it is okay so I",
    "start": "901210",
    "end": "908400"
  },
  {
    "text": "created you know I started an instance I",
    "start": "908400",
    "end": "912130"
  },
  {
    "text": "stopped one and I what did i do and i",
    "start": "912130",
    "end": "915730"
  },
  {
    "text": "resumed one so that's multiple events",
    "start": "915730",
    "end": "918160"
  },
  {
    "text": "okay so cloud watch gets that is going",
    "start": "918160",
    "end": "921190"
  },
  {
    "text": "to call the lambda 3 times lambda is",
    "start": "921190",
    "end": "924160"
  },
  {
    "text": "going to write into fire hose fire hose",
    "start": "924160",
    "end": "926350"
  },
  {
    "text": "is going to flush into s3 so probably",
    "start": "926350",
    "end": "929140"
  },
  {
    "text": "that's going to be in one single file",
    "start": "929140",
    "end": "930490"
  },
  {
    "text": "and the spark job should see this file",
    "start": "930490",
    "end": "933100"
  },
  {
    "text": "this file read all the lines from it and",
    "start": "933100",
    "end": "936040"
  },
  {
    "text": "display right so hopefully this is",
    "start": "936040",
    "end": "939430"
  },
  {
    "text": "running so do we have yeah so we have a",
    "start": "939430",
    "end": "946900"
  },
  {
    "text": "file good we'll look at the events later",
    "start": "946900",
    "end": "950220"
  },
  {
    "text": "yeah it worked right no how come on it's",
    "start": "950220",
    "end": "957790"
  },
  {
    "text": "it's no not this one but thank you",
    "start": "957790",
    "end": "961150"
  },
  {
    "text": "anyway you're very kind okay so and of",
    "start": "961150",
    "end": "967839"
  },
  {
    "text": "course if I look at the file which I",
    "start": "967839",
    "end": "969400"
  },
  {
    "text": "will see the exact same thing okay so",
    "start": "969400",
    "end": "972480"
  },
  {
    "text": "this could be how real time could this",
    "start": "972480",
    "end": "976000"
  },
  {
    "text": "be right the limiting factor is in this",
    "start": "976000",
    "end": "980350"
  },
  {
    "text": "case is a fire hose which will not flush",
    "start": "980350",
    "end": "983410"
  },
  {
    "text": "more often that 60-second so at most",
    "start": "983410",
    "end": "986860"
  },
  {
    "text": "you're gonna waste for 60 seconds well",
    "start": "986860",
    "end": "989080"
  },
  {
    "text": "maybe 70 actually because if you're",
    "start": "989080",
    "end": "990940"
  },
  {
    "text": "really unlucky you have the 10 extra",
    "start": "990940",
    "end": "992830"
  },
  {
    "text": "second",
    "start": "992830",
    "end": "993370"
  },
  {
    "text": "in in spark but I could lower that to",
    "start": "993370",
    "end": "995500"
  },
  {
    "text": "one second so let's say you know under a",
    "start": "995500",
    "end": "997570"
  },
  {
    "text": "minute at most and you would get you",
    "start": "997570",
    "end": "1000839"
  },
  {
    "text": "would get those notifications so let's",
    "start": "1000839",
    "end": "1003420"
  },
  {
    "text": "do it one more time just to see I wasn't",
    "start": "1003420",
    "end": "1005279"
  },
  {
    "text": "lucky let's kill all right let's do the",
    "start": "1005279",
    "end": "1011820"
  },
  {
    "text": "other way so I'll start that guy I'll",
    "start": "1011820",
    "end": "1019050"
  },
  {
    "text": "terminate no not this one yeah just",
    "start": "1019050",
    "end": "1023400"
  },
  {
    "text": "terminate this one all right and",
    "start": "1023400",
    "end": "1029959"
  },
  {
    "text": "minecraft I don't need it today stop",
    "start": "1029959",
    "end": "1035870"
  },
  {
    "text": "what already stopped so i should start",
    "start": "1035929",
    "end": "1039990"
  },
  {
    "text": "all right start all right okay so same",
    "start": "1039990",
    "end": "1046650"
  },
  {
    "text": "story more events into s3 and so i",
    "start": "1046650",
    "end": "1050820"
  },
  {
    "text": "should see a file in a one maybe less",
    "start": "1050820",
    "end": "1053670"
  },
  {
    "text": "than one minute and and spark again",
    "start": "1053670",
    "end": "1055980"
  },
  {
    "text": "we'll grab it okay so I you know I keep",
    "start": "1055980",
    "end": "1059670"
  },
  {
    "text": "saying this is silly but okay you could",
    "start": "1059670",
    "end": "1062850"
  },
  {
    "text": "probably still do some stuff with that",
    "start": "1062850",
    "end": "1066890"
  },
  {
    "text": "you could you know obviously you could I",
    "start": "1066890",
    "end": "1070290"
  },
  {
    "text": "don't know do some monitoring you could",
    "start": "1070290",
    "end": "1073050"
  },
  {
    "text": "do the Dec to use case is probably not",
    "start": "1073050",
    "end": "1075600"
  },
  {
    "text": "the most interesting but tracking API",
    "start": "1075600",
    "end": "1079440"
  },
  {
    "text": "calls for example that could be",
    "start": "1079440",
    "end": "1080940"
  },
  {
    "text": "interesting to say okay this specific",
    "start": "1080940",
    "end": "1083190"
  },
  {
    "text": "API has been called and and this could",
    "start": "1083190",
    "end": "1086940"
  },
  {
    "text": "trigger automatically a job somewhere",
    "start": "1086940",
    "end": "1090380"
  },
  {
    "text": "using a lambda function or maybe using",
    "start": "1090380",
    "end": "1092730"
  },
  {
    "text": "events park so you know it's just a way",
    "start": "1092730",
    "end": "1095070"
  },
  {
    "text": "to show once again here's the file and",
    "start": "1095070",
    "end": "1097110"
  },
  {
    "text": "should be yep nopee yeah here it is okay",
    "start": "1097110",
    "end": "1103770"
  },
  {
    "text": "so works reasonably well it's just to",
    "start": "1103770",
    "end": "1107670"
  },
  {
    "text": "show once again that if when you start",
    "start": "1107670",
    "end": "1110910"
  },
  {
    "text": "using managed services like cloud watch",
    "start": "1110910",
    "end": "1113790"
  },
  {
    "text": "like lambda like fire hose and even EMR",
    "start": "1113790",
    "end": "1117570"
  },
  {
    "text": "you can build rather complex things with",
    "start": "1117570",
    "end": "1122100"
  },
  {
    "text": "very very little code and you've heard",
    "start": "1122100",
    "end": "1125370"
  },
  {
    "text": "the server life story 20",
    "start": "1125370",
    "end": "1127149"
  },
  {
    "text": "nine times since this morning so I'm not",
    "start": "1127149",
    "end": "1128710"
  },
  {
    "text": "going to repeat it but this is really",
    "start": "1128710",
    "end": "1132549"
  },
  {
    "text": "from either the true power of those",
    "start": "1132549",
    "end": "1134440"
  },
  {
    "text": "architectures is that you write very",
    "start": "1134440",
    "end": "1136479"
  },
  {
    "text": "little code it's mostly about",
    "start": "1136479",
    "end": "1138749"
  },
  {
    "text": "configuration connecting services like",
    "start": "1138749",
    "end": "1142119"
  },
  {
    "text": "kinases like lambda like cloud watch",
    "start": "1142119",
    "end": "1143859"
  },
  {
    "text": "like this case even as three EMR etc and",
    "start": "1143859",
    "end": "1147159"
  },
  {
    "text": "you know you probably end up writing",
    "start": "1147159",
    "end": "1150369"
  },
  {
    "text": "more CLI scripts then you end up writing",
    "start": "1150369",
    "end": "1153399"
  },
  {
    "text": "code which i think is good because it's",
    "start": "1153399",
    "end": "1157179"
  },
  {
    "text": "a you can automate a lot of stuff all",
    "start": "1157179",
    "end": "1160809"
  },
  {
    "text": "right so I think that's it so you will",
    "start": "1160809",
    "end": "1168639"
  },
  {
    "text": "get the slides later on of course right",
    "start": "1168639",
    "end": "1171639"
  },
  {
    "text": "if you have feedback happy to read it",
    "start": "1171639",
    "end": "1173679"
  },
  {
    "text": "and thanks again to da ba and thanks for",
    "start": "1173679",
    "end": "1179080"
  },
  {
    "text": "sticking with me until the end of the",
    "start": "1179080",
    "end": "1180489"
  },
  {
    "text": "day",
    "start": "1180489",
    "end": "1182700"
  }
]