[
  {
    "text": "good morning and welcome to reinvent welcome also to this session DLC 3:01",
    "start": "60",
    "end": "6629"
  },
  {
    "text": "under time communications it's the first session in the telecommunications track",
    "start": "6629",
    "end": "11849"
  },
  {
    "text": "on industry day today thank you for being you how many of you do not know what an",
    "start": "11849",
    "end": "20789"
  },
  {
    "text": "Amazon VP see is a show of hands please well okay it may be that the content in",
    "start": "20789",
    "end": "30060"
  },
  {
    "text": "this session is a little fast-paced I recommend that you follow up with some",
    "start": "30060",
    "end": "35579"
  },
  {
    "text": "200 level sessions in the networking and compute track how many of you have a",
    "start": "35579",
    "end": "43800"
  },
  {
    "text": "real-time communications production workload running on AWS a show of hands please",
    "start": "43800",
    "end": "49050"
  },
  {
    "text": "a number of you fantastic hopefully this session will be a refresher of",
    "start": "49050",
    "end": "54449"
  },
  {
    "text": "capabilities that you're already using but the large majority of you fall into",
    "start": "54449",
    "end": "59730"
  },
  {
    "text": "the bucket that I think is in the intermediate stage of your journey on the AWS cloud and you may have questions",
    "start": "59730",
    "end": "66750"
  },
  {
    "text": "as to how to achieve high availability scalability elasticity and global",
    "start": "66750",
    "end": "74040"
  },
  {
    "text": "outreach with real-time communications on AWS well this session is for you hopefully",
    "start": "74040",
    "end": "79170"
  },
  {
    "text": "we can answer some of those questions that you have my name is omar",
    "start": "79170",
    "end": "84270"
  },
  {
    "text": "Chakravarthy I'm an AWS solution architect and global telecom leader for telco joined with me today is Ahmad Khan",
    "start": "84270",
    "end": "92930"
  },
  {
    "text": "he is the AWS solution architect for a company that has been pioneering changes",
    "start": "92930",
    "end": "99030"
  },
  {
    "text": "in real-time communications a company called Twilio together we will try to",
    "start": "99030",
    "end": "104220"
  },
  {
    "text": "provide helpful content and context for the session so let's get started",
    "start": "104220",
    "end": "110840"
  },
  {
    "text": "topics we will cover briefly an overview of real-time communications workloads",
    "start": "110840",
    "end": "116540"
  },
  {
    "text": "fundamentally AWS capabilities that serve as building blocks for sip in WebRTC based solutions scalability high",
    "start": "116540",
    "end": "124649"
  },
  {
    "text": "availability elasticity and design patterns application Enrichment best",
    "start": "124649",
    "end": "130770"
  },
  {
    "text": "practices that are distilled from our customers experiences",
    "start": "130770",
    "end": "135850"
  },
  {
    "text": "first let's touch upon an overview this",
    "start": "135850",
    "end": "141350"
  },
  {
    "text": "conversation that we're having today would be very different were it not for the development of sip and WebRTC sip",
    "start": "141350",
    "end": "151670"
  },
  {
    "text": "was standardized in the early 2000s and since then it's seen widespread market adoption WebRTC is more recent but it",
    "start": "151670",
    "end": "159739"
  },
  {
    "text": "has changed the game fired up the developer ecosystem and what we see are",
    "start": "159739",
    "end": "164930"
  },
  {
    "text": "a whole emerging suite of RTC use cases",
    "start": "164930",
    "end": "170650"
  },
  {
    "text": "beyond voice video just chat you have new use cases emerging that allow for",
    "start": "170650",
    "end": "177830"
  },
  {
    "text": "collaboration not just conferencing desktop sharing document updates in real",
    "start": "177830",
    "end": "183290"
  },
  {
    "text": "time IVR applications that are powering business functions like call centers",
    "start": "183290",
    "end": "189050"
  },
  {
    "text": "customer service centers etc of course there's gaming and then with the use of",
    "start": "189050",
    "end": "195700"
  },
  {
    "text": "WebSockets which enable full duplex communication in WebRTC we're seeing use",
    "start": "195700",
    "end": "201620"
  },
  {
    "text": "cases that incorporate real time content data fields crowdsourcing applications and contextual interactions with RTC",
    "start": "201620",
    "end": "210049"
  },
  {
    "text": "under the hood there have been many developments technological advances in",
    "start": "210049",
    "end": "217220"
  },
  {
    "text": "the fields of machine learning natural language processing and even device technologies that are being incorporated",
    "start": "217220",
    "end": "224769"
  },
  {
    "text": "with communications as a service integrated with these capabilities to",
    "start": "224769",
    "end": "230030"
  },
  {
    "text": "provide whole new customer experiences and new business models are emerging but",
    "start": "230030",
    "end": "237560"
  },
  {
    "text": "let's take step back from the potential we talked about and deconstruct a very",
    "start": "237560",
    "end": "242720"
  },
  {
    "text": "simple topology of a typical RTC solution you have in this architecture",
    "start": "242720",
    "end": "250450"
  },
  {
    "text": "several different components and we'll just refresh our terminology there are endpoints which could be IP based phones",
    "start": "250450",
    "end": "258289"
  },
  {
    "text": "sip soft phones or it just web browsers you have the entry point for all these",
    "start": "258289",
    "end": "264590"
  },
  {
    "text": "devices assumed here to be the Internet but it could be a VPN or a private network the",
    "start": "264590",
    "end": "271310"
  },
  {
    "text": "entry point for these endpoints is the SVC it is your firewall for the solution",
    "start": "271310",
    "end": "278169"
  },
  {
    "text": "because the SVC is typically configured as a sip back to back user agent it can",
    "start": "278169",
    "end": "284180"
  },
  {
    "text": "exert control not only in the signaling but in also the media transmission call",
    "start": "284180",
    "end": "290120"
  },
  {
    "text": "flows and as a result of that typically SPC's do a lot more than just providing security and natural versal they do",
    "start": "290120",
    "end": "297740"
  },
  {
    "text": "media transcoding often centralized policy management they perform functions",
    "start": "297740",
    "end": "303430"
  },
  {
    "text": "for mediation for billing needless to",
    "start": "303430",
    "end": "309380"
  },
  {
    "text": "say the SBC is a very critical component of this architecture then you have",
    "start": "309380",
    "end": "315250"
  },
  {
    "text": "behind the SBC hidden by the SVC the topology of your application servers",
    "start": "315250",
    "end": "320900"
  },
  {
    "text": "your media servers your conferencing servers you may have media relay servers as well if you wish to connect to the",
    "start": "320900",
    "end": "330830"
  },
  {
    "text": "PSTN that legacy telecommunicator telecom network you would have a PSTN",
    "start": "330830",
    "end": "336470"
  },
  {
    "text": "gateway and you would be integrated with that often there is a sip redirect",
    "start": "336470",
    "end": "341840"
  },
  {
    "text": "server that's part of the architecture this is some this is a sip server that",
    "start": "341840",
    "end": "347360"
  },
  {
    "text": "accepts 3xx redirection calls and it's",
    "start": "347360",
    "end": "352640"
  },
  {
    "text": "typically used to provide additional intelligent routing logic I don't want",
    "start": "352640",
    "end": "358160"
  },
  {
    "text": "to talk about the notion of a registrar DB this is the database where you store user metadata and location information",
    "start": "358160",
    "end": "365030"
  },
  {
    "text": "that's later on used to to set up communication between your peers in a",
    "start": "365030",
    "end": "370940"
  },
  {
    "text": "network the scope of this session is to",
    "start": "370940",
    "end": "378010"
  },
  {
    "text": "review mechanisms for high availability for the critical components in this architecture scalability which is a huge",
    "start": "378010",
    "end": "387860"
  },
  {
    "text": "ball value prop for this type of workload and elasticity",
    "start": "387860",
    "end": "394880"
  },
  {
    "text": "which becomes important if cost effective this is a business criteria last but not",
    "start": "394880",
    "end": "404900"
  },
  {
    "text": "the least is if you are addressing a global customer base a global customer",
    "start": "404900",
    "end": "412550"
  },
  {
    "text": "base then how do you take advantage of the global footprint that AWS has to",
    "start": "412550",
    "end": "418820"
  },
  {
    "text": "augment your RTC workloads the AWS",
    "start": "418820",
    "end": "426410"
  },
  {
    "text": "platform offers a really broad range of cloud-based services we're not going to",
    "start": "426410",
    "end": "432530"
  },
  {
    "text": "talk about all of them we're just going to highlight a few that service the building Doc's per rrtc",
    "start": "432530",
    "end": "439250"
  },
  {
    "text": "solution and we're talk going to stitch these capabilities together to form",
    "start": "439250",
    "end": "444740"
  },
  {
    "text": "design patterns so this is a visual representation a virtualized AWS cloud",
    "start": "444740",
    "end": "452990"
  },
  {
    "text": "based representation of the basic RTC topology that we saw before and you will",
    "start": "452990",
    "end": "458360"
  },
  {
    "text": "notice a few AWS capabilities here first there is the concept of an AWS region we",
    "start": "458360",
    "end": "465920"
  },
  {
    "text": "have 16 regions all over the world with 44 availability zones announced plans",
    "start": "465920",
    "end": "472820"
  },
  {
    "text": "for six more and 17 more availability zones this is a growing global",
    "start": "472820",
    "end": "477980"
  },
  {
    "text": "infrastructure footprint each region consists of several availability zones",
    "start": "477980",
    "end": "486380"
  },
  {
    "text": "where each availability zone itself is a grouping of data centers these",
    "start": "486380",
    "end": "492410"
  },
  {
    "text": "availability zones are built in close proximity to each other so that in the",
    "start": "492410",
    "end": "498560"
  },
  {
    "text": "case of failure the latency is minimized but the availability zones are also built in separate domains they're",
    "start": "498560",
    "end": "505040"
  },
  {
    "text": "separated by utility grid isolation floodplain isolation so it provides you",
    "start": "505040",
    "end": "511250"
  },
  {
    "text": "a high degree of fault tolerance in each",
    "start": "511250",
    "end": "517330"
  },
  {
    "text": "inner region you can construct your own private network in the AWS cloud and",
    "start": "517330",
    "end": "524300"
  },
  {
    "text": "this is the Amazon virtual private cloud the Amazon VPC BBC comes with many",
    "start": "524300",
    "end": "529940"
  },
  {
    "text": "powerful Gator you can decide the addressing in your VPC you can decide the routing in your V",
    "start": "529940",
    "end": "537260"
  },
  {
    "text": "PC you can also create firewall rules and add security to your V PC by using",
    "start": "537260",
    "end": "545840"
  },
  {
    "text": "network access control lists furthermore you can determine and define how you",
    "start": "545840",
    "end": "551330"
  },
  {
    "text": "connect and how your users connect to this VDC the V PC could be a seamless",
    "start": "551330",
    "end": "556460"
  },
  {
    "text": "extension of your on-premise Network it could be accessible to users over the internet or it could be a completely",
    "start": "556460",
    "end": "563270"
  },
  {
    "text": "private space not accessible to users in the internet except through a NAT",
    "start": "563270",
    "end": "569030"
  },
  {
    "text": "gateway there are subnets that you can create within your V PC similar to how",
    "start": "569030",
    "end": "575270"
  },
  {
    "text": "you would do in an on-premise Network you can configure some of your subnets to be public facing and a public subnet",
    "start": "575270",
    "end": "581210"
  },
  {
    "text": "would be the logical subnet for public",
    "start": "581210",
    "end": "586880"
  },
  {
    "text": "facing components such as the WebRTC gateway or the SVC and you have the",
    "start": "586880",
    "end": "591920"
  },
  {
    "text": "private subnet where you would hide the topology of your back-end servers inside",
    "start": "591920",
    "end": "598010"
  },
  {
    "text": "these subnets you launch Amazon ec2 instances this is your elastic virtual",
    "start": "598010",
    "end": "605450"
  },
  {
    "text": "server on the AWS cloud and I know you are familiar with this the only comment",
    "start": "605450",
    "end": "610610"
  },
  {
    "text": "I will make is that each ec2 instance belongs to a family of ec2 instances and",
    "start": "610610",
    "end": "617620"
  },
  {
    "text": "each family is unique in the proportion of CPU memory storage and networking",
    "start": "617620",
    "end": "625460"
  },
  {
    "text": "capabilities and these instants families are specialized to run particular types",
    "start": "625460",
    "end": "631760"
  },
  {
    "text": "of workloads so for compute intensive applications there's a C family of a",
    "start": "631760",
    "end": "637610"
  },
  {
    "text": "situ instances memory intensive applications there's the r family it's very important in designing this RT",
    "start": "637610",
    "end": "644840"
  },
  {
    "text": "c application architecture that you choose the right instance type and Emmet will be talking about that in more detail",
    "start": "644840",
    "end": "650950"
  },
  {
    "text": "ec2 gives you an open and flexible platform multiple operating systems are",
    "start": "650950",
    "end": "657620"
  },
  {
    "text": "supported multiple network interfaces are supported each network interface supports multiple",
    "start": "657620",
    "end": "663970"
  },
  {
    "text": "private IP addresses which can be used as secondary private IP addresses ec2",
    "start": "663970",
    "end": "669770"
  },
  {
    "text": "support the concept of a security group where you can establish stateful rules",
    "start": "669770",
    "end": "676370"
  },
  {
    "text": "for who accesses Lacey to instance and on what protocols and ports all of this",
    "start": "676370",
    "end": "684140"
  },
  {
    "text": "capability lends itself well to easily laying out the topology we just saw and",
    "start": "684140",
    "end": "690500"
  },
  {
    "text": "building it on the AWS cloud it's important to talk about ec2 performance",
    "start": "690500",
    "end": "695630"
  },
  {
    "text": "in the case of RTC workloads and there are two capabilities on ec2 that are",
    "start": "695630",
    "end": "701300"
  },
  {
    "text": "very relevant the first is SR io v this is enabled on",
    "start": "701300",
    "end": "706580"
  },
  {
    "text": "certain ec2 instance types by the use of an Intel Driver 82 $5.99 and it provides",
    "start": "706580",
    "end": "714670"
  },
  {
    "text": "significantly higher io performance while keeping CPU utilization low a new",
    "start": "714670",
    "end": "722480"
  },
  {
    "text": "product that was developed last year is the elastic network adapter this is an",
    "start": "722480",
    "end": "728140"
  },
  {
    "text": "in-house custom PCI network device that was developed especially for ec2 with",
    "start": "728140",
    "end": "735380"
  },
  {
    "text": "this ena the elastic network adapter on some instance types you can get up to 25",
    "start": "735380",
    "end": "741920"
  },
  {
    "text": "gigabits per second bandwidth we have seen our customers gain the benefit of",
    "start": "741920",
    "end": "748850"
  },
  {
    "text": "these capabilities especially in the case of small UDP packets these",
    "start": "748850",
    "end": "755089"
  },
  {
    "text": "capabilities have helped our customers achieve high PPS packets per second",
    "start": "755089",
    "end": "760930"
  },
  {
    "text": "another important AWS service is a tableau is AWS Direct Connect Direct",
    "start": "760930",
    "end": "768529"
  },
  {
    "text": "Connect is a capability that allows you to have a dedicated private connection",
    "start": "768529",
    "end": "774339"
  },
  {
    "text": "into AWS you can create public interfaces on Direct Connect that",
    "start": "774339",
    "end": "780080"
  },
  {
    "text": "connect the public Amazon services or you can have a private virtual interface",
    "start": "780080",
    "end": "785660"
  },
  {
    "text": "that connects to your private VPC ano Amazon Cloud Direct Connect usually has",
    "start": "785660",
    "end": "791320"
  },
  {
    "text": "reduced data rates per gigabyte of data consistent",
    "start": "791320",
    "end": "796350"
  },
  {
    "text": "performance you can design Direct Connect to support redundancy in false",
    "start": "796350",
    "end": "801600"
  },
  {
    "text": "fault tolerance bgp is used to exchange the routing information in this case",
    "start": "801600",
    "end": "807770"
  },
  {
    "text": "here is an example of an architecture that shows the connection all the way",
    "start": "807770",
    "end": "814110"
  },
  {
    "text": "from an enterprise up to the AWS cloud using direct connect using this dedicated connectivity path each AWS",
    "start": "814110",
    "end": "822210"
  },
  {
    "text": "region has multiple Direct Connect locations and each Direct Connect location has multiple redundant routers",
    "start": "822210",
    "end": "829970"
  },
  {
    "text": "many diverse and resilient parts are built out from these direct connect",
    "start": "829970",
    "end": "835350"
  },
  {
    "text": "locations to the AWS backbone so let's",
    "start": "835350",
    "end": "840390"
  },
  {
    "text": "now stitch together some of the capabilities we've talked about and build out a few reusable design patterns",
    "start": "840390",
    "end": "848670"
  },
  {
    "text": "to achieve high availability and scalability a very common pattern that",
    "start": "848670",
    "end": "856260"
  },
  {
    "text": "we see in our TC applications is the active standby node for high",
    "start": "856260",
    "end": "861900"
  },
  {
    "text": "availability there are many reasons for this it's not always possible for",
    "start": "861900",
    "end": "867930"
  },
  {
    "text": "stateful components to be configured in an active active cluster and also there",
    "start": "867930",
    "end": "873450"
  },
  {
    "text": "are many technologies and vendors out there that have products that are",
    "start": "873450",
    "end": "879000"
  },
  {
    "text": "designed to use this act of standby configuration so in an on-premise",
    "start": "879000",
    "end": "884160"
  },
  {
    "text": "network you would have this pattern where you assign an IP that floats",
    "start": "884160",
    "end": "890280"
  },
  {
    "text": "between the act of standby node and at any given point in time is only associated with the active node well you",
    "start": "890280",
    "end": "897420"
  },
  {
    "text": "can implement the same floating IP pattern on the AWS cloud and the reason",
    "start": "897420",
    "end": "903270"
  },
  {
    "text": "you can do that is because of the capabilities in the platform firstly Amazon ec2 instances offers support for",
    "start": "903270",
    "end": "911070"
  },
  {
    "text": "multiple secondary private IP addresses these secondary private IP addresses can be reassigned across different ec2",
    "start": "911070",
    "end": "918690"
  },
  {
    "text": "instances this reassignment can be done programmatically because ec2 provides a",
    "start": "918690",
    "end": "923880"
  },
  {
    "text": "rich API and SDK all all types of operating systems are",
    "start": "923880",
    "end": "930050"
  },
  {
    "text": "supported on ec2 so if there's any operating system configuration that needs to be done for the networking to",
    "start": "930050",
    "end": "935630"
  },
  {
    "text": "work you can SSH into the ec2 instance and achieve that so we actually have a",
    "start": "935630",
    "end": "940850"
  },
  {
    "text": "workshop later today TLC 3:03 where we go to the exercise of building",
    "start": "940850",
    "end": "947779"
  },
  {
    "text": "out this pattern with asterisk as a media server if you're interested",
    "start": "947779",
    "end": "953740"
  },
  {
    "text": "auto-scaling this is a feature that is possible in",
    "start": "954490",
    "end": "961699"
  },
  {
    "text": "the cloud-based environment it's born out of the serie of cloud computing where you automatically resize your",
    "start": "961699",
    "end": "968839"
  },
  {
    "text": "compute clusters based on user node not only do you scale out but you also scale",
    "start": "968839",
    "end": "974570"
  },
  {
    "text": "in it's a mechanism to achieve fault tolerance but also cost-effectiveness to",
    "start": "974570",
    "end": "983149"
  },
  {
    "text": "go to implement auto scaling there are three things that you have to do you have to create a launch configuration",
    "start": "983149",
    "end": "989420"
  },
  {
    "text": "which is where you tell auto scaling what army you're going to use for your auto scaling group you can add automatic",
    "start": "989420",
    "end": "996829"
  },
  {
    "text": "configuration scripts to the launch configuration the second thing that you do is create not a scaling group this is",
    "start": "996829",
    "end": "1002769"
  },
  {
    "text": "your logical group that will be used for the scaling in the order scaling group you specify your men your max size of",
    "start": "1002769",
    "end": "1010360"
  },
  {
    "text": "the cluster and then finally you define scaling policies scaling policies are a",
    "start": "1010360",
    "end": "1016389"
  },
  {
    "text": "combination of a condition that is based on a metric that is monitored from the",
    "start": "1016389",
    "end": "1022269"
  },
  {
    "text": "AWS resources using cloud watch and an action that you want to take based on that metric auto scaling has evolved",
    "start": "1022269",
    "end": "1031058"
  },
  {
    "text": "into providing many sophisticated scaling policies so you can implement step scaling pass policies to do",
    "start": "1031059",
    "end": "1038350"
  },
  {
    "text": "incremental scaling action you can use auto scaling to create a target scaling",
    "start": "1038350",
    "end": "1046540"
  },
  {
    "text": "policy so for example you can say my target CPU utilization is 50% and let our scaling handle all the actions",
    "start": "1046540",
    "end": "1053799"
  },
  {
    "text": "underneath to maintain that target state well",
    "start": "1053799",
    "end": "1059590"
  },
  {
    "text": "this is great for stateless applications but you're probably thinking how does",
    "start": "1059590",
    "end": "1064970"
  },
  {
    "text": "this help me if I have a stated stateful RTC component and this is this",
    "start": "1064970",
    "end": "1072649"
  },
  {
    "text": "capability to elegantly support auto scaling in the case of stateful",
    "start": "1072649",
    "end": "1078289"
  },
  {
    "text": "applications is supported by a feature called lifecycle hooks and we'll talk about lifecycle hooks in more detail but",
    "start": "1078289",
    "end": "1085220"
  },
  {
    "text": "essentially lifecycle hooks and how you do pause the state transition that is",
    "start": "1085220",
    "end": "1092210"
  },
  {
    "text": "taking place during and auto-scaling action and during that wait state you",
    "start": "1092210",
    "end": "1099169"
  },
  {
    "text": "can implement a custom action let's talk",
    "start": "1099169",
    "end": "1105349"
  },
  {
    "text": "about a solution that uses sip and look at how we would create a scalable highly",
    "start": "1105349",
    "end": "1112879"
  },
  {
    "text": "available architecture within a region as you can see you would have in VPC you",
    "start": "1112879",
    "end": "1118639"
  },
  {
    "text": "would use multiple availability zones but then you also have the option to",
    "start": "1118639",
    "end": "1123830"
  },
  {
    "text": "combine load balancing with auto scaling to add both high availability",
    "start": "1123830",
    "end": "1129970"
  },
  {
    "text": "scalability and cost-effectiveness at this present time AWS has three load",
    "start": "1129970",
    "end": "1137479"
  },
  {
    "text": "balancing products fully managed load balancing products the application load balancer network load balancer and the",
    "start": "1137479",
    "end": "1143840"
  },
  {
    "text": "classic you would Padma so the application load balancers a layer seven load balancer it supports HTTP HTTPS",
    "start": "1143840",
    "end": "1150049"
  },
  {
    "text": "it's not suitable for sip over UDP or RTP over UDP and the NLB which is the",
    "start": "1150049",
    "end": "1156950"
  },
  {
    "text": "network load balancer it's a layer four load balancer it supports load balancing at the connection level it is actually highly",
    "start": "1156950",
    "end": "1165200"
  },
  {
    "text": "performant and can handle spikes in load however at the present time the support",
    "start": "1165200",
    "end": "1172129"
  },
  {
    "text": "is for TCP which presents a challenge if you have udp-based traffic so my",
    "start": "1172129",
    "end": "1178429"
  },
  {
    "text": "suggestion is there at this point to explore options that are available in the AWS marketplace and in the partner",
    "start": "1178429",
    "end": "1185090"
  },
  {
    "text": "network there are many viable options that support load balancing for sip over UDP",
    "start": "1185090",
    "end": "1191029"
  },
  {
    "text": "and TP over UDP and these have also been integrated with AWS capabilities so",
    "start": "1191029",
    "end": "1196529"
  },
  {
    "text": "there's a load balancer product load balancer org that supports auto scaling on the AWS platform and there are",
    "start": "1196529",
    "end": "1203069"
  },
  {
    "text": "several others it's a lot simpler in the case of WebRTC to use this design",
    "start": "1203069",
    "end": "1210659"
  },
  {
    "text": "pattern that combines load balancing with auto scaling because we're using",
    "start": "1210659",
    "end": "1215789"
  },
  {
    "text": "WebSockets over TCP in this scenario the network load balancer is especially",
    "start": "1215789",
    "end": "1221219"
  },
  {
    "text": "useful because it supports long-lived TCP connections which are extremely",
    "start": "1221219",
    "end": "1226469"
  },
  {
    "text": "useful for WebRTC communication in this architecture similar to the last I just",
    "start": "1226469",
    "end": "1233399"
  },
  {
    "text": "want to point out that all these AWS resources are being that are being",
    "start": "1233399",
    "end": "1239129"
  },
  {
    "text": "monitored by cloud watch which is our managed monitoring service and that",
    "start": "1239129",
    "end": "1245009"
  },
  {
    "text": "allows us to configure rules using cloud watch events that can be used to trigger",
    "start": "1245009",
    "end": "1252569"
  },
  {
    "text": "certain user-defined actions and we'll talk about that in just a bit so far",
    "start": "1252569",
    "end": "1259289"
  },
  {
    "text": "we've talked about the active standby configuration for high availability we've also talked about a load balanced",
    "start": "1259289",
    "end": "1266609"
  },
  {
    "text": "active cluster of nodes but all of this has been within the context of a single region what if you want to do cross",
    "start": "1266609",
    "end": "1273690"
  },
  {
    "text": "regional high availability what if you have a global deployment what-if",
    "start": "1273690",
    "end": "1279349"
  },
  {
    "text": "importantly you want to take advantage of AWS as global infrastructure well",
    "start": "1279349",
    "end": "1284849"
  },
  {
    "text": "this is where you would use route 53 this is a fully managed DNS service with",
    "start": "1284849",
    "end": "1290339"
  },
  {
    "text": "a hundred percent SLA it allows not only for routing policies that do failover",
    "start": "1290339",
    "end": "1297119"
  },
  {
    "text": "but it has a weighted round robin routing policy that can be used for load balancing it has a latency based routing",
    "start": "1297119",
    "end": "1305009"
  },
  {
    "text": "policy that is very effective in the case of RTC workloads and I will give",
    "start": "1305009",
    "end": "1310139"
  },
  {
    "text": "you an example of how and it also does geo dns-based routing where you can",
    "start": "1310139",
    "end": "1317519"
  },
  {
    "text": "specify if the originating request is from country a then the domains that",
    "start": "1317519",
    "end": "1323569"
  },
  {
    "text": "answer that Qwest RS specified so in this",
    "start": "1323569",
    "end": "1329270"
  },
  {
    "text": "architecture what you see is a combination of route 53 with load balancing we have seen this type of",
    "start": "1329270",
    "end": "1339340"
  },
  {
    "text": "pattern implemented by our customers who are also combining their on-premise",
    "start": "1339340",
    "end": "1346070"
  },
  {
    "text": "environments with the global infrastructure on the AWS cloud platform so for example you could have your SVC",
    "start": "1346070",
    "end": "1355340"
  },
  {
    "text": "and sip proxy in your data center but your media relay servers would be",
    "start": "1355340",
    "end": "1360490"
  },
  {
    "text": "geographically located in various AWS regions and you would use route 53 s",
    "start": "1360490",
    "end": "1365840"
  },
  {
    "text": "latency based routing feature to connect the user to the nearest media release of",
    "start": "1365840",
    "end": "1371270"
  },
  {
    "text": "them it's very interesting to see what you our customers and partners do with",
    "start": "1371270",
    "end": "1379100"
  },
  {
    "text": "all these core AWS capabilities and I just wanted to highlight one such",
    "start": "1379100",
    "end": "1385250"
  },
  {
    "text": "example a partner call data path dot IO has developed an anycast IP service that provides in anycast IP",
    "start": "1385250",
    "end": "1393740"
  },
  {
    "text": "for any application hosted on the AWS platform some regions are supported and",
    "start": "1393740",
    "end": "1399620"
  },
  {
    "text": "the way it does this is by combining Direct Connect with route 53 the Seneca",
    "start": "1399620",
    "end": "1406190"
  },
  {
    "text": "service uses some software in their own data center for network optimization and",
    "start": "1406190",
    "end": "1412690"
  },
  {
    "text": "routing is done through BGP but for the end user combining this type of partner",
    "start": "1412690",
    "end": "1419510"
  },
  {
    "text": "service and any cost IP service in this case with route 53 provides the",
    "start": "1419510",
    "end": "1424700"
  },
  {
    "text": "combination of a very low recovery time because you don't have to worry about DNS propagation the anycast IP just",
    "start": "1424700",
    "end": "1431780"
  },
  {
    "text": "fails over instantaneously plus you have the resiliency of DNS failover we talked",
    "start": "1431780",
    "end": "1440870"
  },
  {
    "text": "about auto scaling and we briefly described lifecycle hooks what I want to",
    "start": "1440870",
    "end": "1446320"
  },
  {
    "text": "share with you is this design pattern that combines auto scaling lifecycle",
    "start": "1446320",
    "end": "1453500"
  },
  {
    "text": "hooks cloud watch events and AWS lambda and this combination is especially",
    "start": "1453500",
    "end": "1459789"
  },
  {
    "text": "useful when controlling stateful components in the RTC solution let us",
    "start": "1459789",
    "end": "1468909"
  },
  {
    "text": "take for example the use case of a cluster of asterisk servers in an asterisk a cluster of asterisk servers",
    "start": "1468909",
    "end": "1476950"
  },
  {
    "text": "in an auto scaling group and let us consider the scenario where because user demand has shrunk the group is scaling",
    "start": "1476950",
    "end": "1484659"
  },
  {
    "text": "in in this scenario if you use a lifecycle hook with the auto scaling",
    "start": "1484659",
    "end": "1491440"
  },
  {
    "text": "group it essentially pauses the instance",
    "start": "1491440",
    "end": "1497219"
  },
  {
    "text": "before a state transition takes place in this case the state transition that we",
    "start": "1497219",
    "end": "1502479"
  },
  {
    "text": "care about is instance termination so before an instance goes from the start",
    "start": "1502479",
    "end": "1510009"
  },
  {
    "text": "of the terminating action to the termination state it enters a wait state",
    "start": "1510009",
    "end": "1515950"
  },
  {
    "text": "and at that point we can configure a cloud watch event rule to call a target",
    "start": "1515950",
    "end": "1522279"
  },
  {
    "text": "lambda function the lambda function in this scenario in this particular example is doing something very simple it is",
    "start": "1522279",
    "end": "1529059"
  },
  {
    "text": "called calling ec2 Systems Manager to run a script to run a command on the asterisk",
    "start": "1529059",
    "end": "1534969"
  },
  {
    "text": "servers the lambda function could have been configured to do just about anything that you would have wanted it to do in this scenario were using the",
    "start": "1534969",
    "end": "1542440"
  },
  {
    "text": "run command to tell asterisk to wait for calls to complete before shutting down",
    "start": "1542440",
    "end": "1547989"
  },
  {
    "text": "to basically stop gracefully another example of a variation of this design",
    "start": "1547989",
    "end": "1554320"
  },
  {
    "text": "pattern is dynamically updating route 53 records based on auto scaling state",
    "start": "1554320",
    "end": "1561279"
  },
  {
    "text": "changes at this point I'd like to hand over the session to Emmett to continue",
    "start": "1561279",
    "end": "1567249"
  },
  {
    "text": "the discussion thank you thank you suma hi everyone again my name is Ahmed I'm a",
    "start": "1567249",
    "end": "1575229"
  },
  {
    "text": "Solutions Architect at AWS I focus on real-time communications and also on",
    "start": "1575229",
    "end": "1581889"
  },
  {
    "text": "some of our AI and machine learning services so you just saw the building",
    "start": "1581889",
    "end": "1587950"
  },
  {
    "text": "blocks and design patterns that are needed to implement a scalable",
    "start": "1587950",
    "end": "1593690"
  },
  {
    "text": "and reliable real-time communication system on AWS but what if you wanted to",
    "start": "1593690",
    "end": "1600440"
  },
  {
    "text": "do more what if you wanted to really take advantage of the advanced and",
    "start": "1600440",
    "end": "1608180"
  },
  {
    "text": "cutting-edge technologies that are available in in AWS so you could really",
    "start": "1608180",
    "end": "1613760"
  },
  {
    "text": "do that so one of the advantages are having a real-time infrastructure in the cloud is that you can really take",
    "start": "1613760",
    "end": "1621020"
  },
  {
    "text": "advantage it makes it very easy to take advantage of all these cutting-edge features and what do I mean by that what",
    "start": "1621020",
    "end": "1629900"
  },
  {
    "text": "I mean is you can think about stuff that you can integrate with your real-time",
    "start": "1629900",
    "end": "1635470"
  },
  {
    "text": "infrastructure stuff like augmenting your business applications and",
    "start": "1635470",
    "end": "1643210"
  },
  {
    "text": "augmenting them by adding conversational interfaces using Amazon Lex for example",
    "start": "1643210",
    "end": "1652630"
  },
  {
    "text": "providing teach text-to-speech services through Amazon Pali to your end-users in",
    "start": "1653800",
    "end": "1662570"
  },
  {
    "text": "multiple languages and dialects and if you are developing some kind of hardware",
    "start": "1662570",
    "end": "1669770"
  },
  {
    "text": "device any kind of hardware device that has a connection has a microphone and a speaker you can directly integrate Alexa",
    "start": "1669770",
    "end": "1678260"
  },
  {
    "text": "voice services using Alexa voice services you can directly integrate Alexa into your application so some",
    "start": "1678260",
    "end": "1686570"
  },
  {
    "text": "powerful and cutting-edge stuff that you can implement and integrate with your",
    "start": "1686570",
    "end": "1692300"
  },
  {
    "text": "real time applications so something to think about and that's a that's a big",
    "start": "1692300",
    "end": "1697520"
  },
  {
    "text": "topic and I would encourage you if you're interested in this to go and look for sessions specifically on on Lex and",
    "start": "1697520",
    "end": "1704450"
  },
  {
    "text": "poly and they're a bunch of sessions on how to use Alexa as well but for now",
    "start": "1704450",
    "end": "1709700"
  },
  {
    "text": "we're going to dive into some best practices and these best practices are",
    "start": "1709700",
    "end": "1715940"
  },
  {
    "text": "I'm gonna use the examples that I'm gonna use are all going to be based on sip infrastructure and I have a few dem",
    "start": "1715940",
    "end": "1723740"
  },
  {
    "text": "demos as well so let's get started with that so you'll probably you'll probably",
    "start": "1723740",
    "end": "1733580"
  },
  {
    "text": "have an infrastructure sip infrastructure running in multiple AWS regions and one of the great",
    "start": "1733580",
    "end": "1739550"
  },
  {
    "text": "capabilities of going into AWS is the global footprint as Shuma mentioned and",
    "start": "1739550",
    "end": "1745600"
  },
  {
    "text": "so when you have your real-time infrastructure within a VPC obviously",
    "start": "1745600",
    "end": "1752600"
  },
  {
    "text": "you have full control of how routing happens but when the traffic leaves that VP sieve and that leaves when it leaves",
    "start": "1752600",
    "end": "1760250"
  },
  {
    "text": "that AWS region you don't have a lot of control over how your traffic how your",
    "start": "1760250",
    "end": "1765440"
  },
  {
    "text": "media and how your signaling is going in between our AWS regions and so this this",
    "start": "1765440",
    "end": "1774380"
  },
  {
    "text": "best practice sort of relates to leveraging first of all the global footprint of AWS and secondly it and it",
    "start": "1774380",
    "end": "1781130"
  },
  {
    "text": "sort of shows you how you can implement your own custom routing by creating is",
    "start": "1781130",
    "end": "1786710"
  },
  {
    "text": "sip overlay and what do I mean by a sip overlay so here this is just a fictional",
    "start": "1786710",
    "end": "1794090"
  },
  {
    "text": "depiction of our backbone so this is the the solid lines represent a fictional",
    "start": "1794090",
    "end": "1799429"
  },
  {
    "text": "depiction of the AWS background which is very scalable redundant and highly",
    "start": "1799429",
    "end": "1804620"
  },
  {
    "text": "available if there are any issues and this is physical infrastructure right and so there are always issues like",
    "start": "1804620",
    "end": "1810500"
  },
  {
    "text": "fiber cuts and stuff and you don't feel a thing because underlying at the network level we have fast failover",
    "start": "1810500",
    "end": "1817490"
  },
  {
    "text": "implemented through protocols like BGP right but what if you wanted to do some custom routing and so let's say let's",
    "start": "1817490",
    "end": "1825050"
  },
  {
    "text": "take an example of you know two parties trying to communicate from one coast to",
    "start": "1825050",
    "end": "1830540"
  },
  {
    "text": "the other right and so if I were to make a call from the west coast to the east coast from Oregon let's say to Virginia",
    "start": "1830540",
    "end": "1837880"
  },
  {
    "text": "the traffic going between the regions is most probably under normal circumstances",
    "start": "1837880",
    "end": "1843200"
  },
  {
    "text": "is going to take the direct backbone path that's connecting one of the direct",
    "start": "1843200",
    "end": "1849500"
  },
  {
    "text": "backward backbone paths that's connecting Oregon and Virginia right but what I can do",
    "start": "1849500",
    "end": "1855380"
  },
  {
    "text": "sip is a sip as a great protocol that gives you a lot of flexibility and has a lot of routing features as well so what",
    "start": "1855380",
    "end": "1862730"
  },
  {
    "text": "you can essentially do using sit and sip routing is if you have all these this",
    "start": "1862730",
    "end": "1869420"
  },
  {
    "text": "sip infrastructure running in these AWS regions you can have a call and you can",
    "start": "1869420",
    "end": "1874970"
  },
  {
    "text": "specify that hey under certain circumstances I want this call",
    "start": "1874970",
    "end": "1880280"
  },
  {
    "text": "that's originating from Oregon to go through California on its way on to Virginia so just a quick example so",
    "start": "1880280",
    "end": "1888260"
  },
  {
    "text": "let's let's let's look at a simplified architecture here and so a a sip call",
    "start": "1888260",
    "end": "1898070"
  },
  {
    "text": "that's going from one region to the other region is probably gonna take a path like this",
    "start": "1898070",
    "end": "1903440"
  },
  {
    "text": "now what if according to your business logic and according to the metrics that",
    "start": "1903440",
    "end": "1908510"
  },
  {
    "text": "you're seeing you're not happy with it right what do you what can you do so here you can really affect the",
    "start": "1908510",
    "end": "1915020"
  },
  {
    "text": "routing by implementing sip routing and I'll show you in the demo and that's",
    "start": "1915020",
    "end": "1920120"
  },
  {
    "text": "coming up where a call like this can be rerouted like this right so let's go and",
    "start": "1920120",
    "end": "1931550"
  },
  {
    "text": "look at a demo on on and so I'll explain I'll quickly explain the demo setup here",
    "start": "1931550",
    "end": "1937490"
  },
  {
    "text": "so I have free PBX which is a marketplace product running in three",
    "start": "1937490",
    "end": "1944180"
  },
  {
    "text": "different regions in Oregon in California and Virginia regions that's",
    "start": "1944180",
    "end": "1950150"
  },
  {
    "text": "represented by the green dot and I've created SIP trunks that are connecting all the three regions right so and I'm",
    "start": "1950150",
    "end": "1960650"
  },
  {
    "text": "going to make a make a phone call that's that's between SIP IP phones one of them",
    "start": "1960650",
    "end": "1967940"
  },
  {
    "text": "is running on my laptop and the other one was running on a smart phone and I'm",
    "start": "1967940",
    "end": "1974870"
  },
  {
    "text": "making I'm gonna make a call and you're gonna see the call come in on the screen",
    "start": "1974870",
    "end": "1980990"
  },
  {
    "text": "and then I'm gonna simulate a sort of network issue or something like that where you know you would like to reroute",
    "start": "1980990",
    "end": "1989780"
  },
  {
    "text": "traffic right I re-emphasizing this is something that's handled very very quickly at the network",
    "start": "1989780",
    "end": "1995659"
  },
  {
    "text": "layer already by the AWS backbone but this is just showing the flexibility",
    "start": "1995659",
    "end": "2001450"
  },
  {
    "text": "right if you wanted to implement your own logic and you wanted to say hey I want this call",
    "start": "2001450",
    "end": "2006610"
  },
  {
    "text": "that's originating on the west coast to go take this path or I want this call that's originating in in Sydney to take",
    "start": "2006610",
    "end": "2014019"
  },
  {
    "text": "this path and go through Tokyo and whatnot right so I'm gonna simulate a",
    "start": "2014019",
    "end": "2019149"
  },
  {
    "text": "failure and then I'm gonna I'm gonna remake that call and that call is gonna",
    "start": "2019149",
    "end": "2025149"
  },
  {
    "text": "go through like this right so let's take a look at this I have a recorded demo right here and so let me go ahead and",
    "start": "2025149",
    "end": "2033580"
  },
  {
    "text": "and play that so here you see the free PBX Marketplace project running it's",
    "start": "2033580",
    "end": "2039789"
  },
  {
    "text": "very easy to get started from the marketplace and this is a PBX endpoint",
    "start": "2039789",
    "end": "2046029"
  },
  {
    "text": "and I have two IP phones connected to these two these right and so if I play",
    "start": "2046029",
    "end": "2054368"
  },
  {
    "text": "this so you'll see the two trunks that are going one is going to Virginia and",
    "start": "2054369",
    "end": "2059950"
  },
  {
    "text": "the other one is going to California right and so if I look at the routing here and see the routing the routing is",
    "start": "2059950",
    "end": "2068500"
  },
  {
    "text": "saying okay take the trunk to Virginia and if that's not performing or if",
    "start": "2068500",
    "end": "2074050"
  },
  {
    "text": "that's not up use the trunk to SFO which is our California region and and now I",
    "start": "2074050",
    "end": "2082179"
  },
  {
    "text": "make the call that's that's gonna come in from my eye from my smartphone into",
    "start": "2082179",
    "end": "2088300"
  },
  {
    "text": "this and you see the call coming in right so I'm gonna hang up the call and I'm gonna go in and simulate a failure",
    "start": "2088300",
    "end": "2094990"
  },
  {
    "text": "where I go in into the trunk section the SIP trunks and I'm gonna go ahead and",
    "start": "2094990",
    "end": "2103440"
  },
  {
    "text": "enable/disable the trunk that's going out to Virginia I'm gonna apply that",
    "start": "2103440",
    "end": "2113319"
  },
  {
    "text": "config and I'm gonna go in and check into my sip my asterisk configuration",
    "start": "2113319",
    "end": "2119260"
  },
  {
    "text": "and see that I only have one previously I had two active trunks and now I only have the trunk to",
    "start": "2119260",
    "end": "2125670"
  },
  {
    "text": "so now I reroute the make the call and the call is gonna still come in even",
    "start": "2125670",
    "end": "2132300"
  },
  {
    "text": "though the SIP trunk is is is disabled and so the call is getting routed through through California so that's",
    "start": "2132300",
    "end": "2139530"
  },
  {
    "text": "just a simple example of the you know customized stuff that you can you can do over AWS so one of the best practices is",
    "start": "2139530",
    "end": "2147930"
  },
  {
    "text": "we'll start with this will start creating a list of best practices the first is really create a sip overlay and",
    "start": "2147930",
    "end": "2155520"
  },
  {
    "text": "take advantage of AWS as global infrastructure secondly and this is",
    "start": "2155520",
    "end": "2162240"
  },
  {
    "text": "something that you've already touched upon is is sort of relevant to any kind",
    "start": "2162240",
    "end": "2168390"
  },
  {
    "text": "of workload that's running in AWS right and so first of all do not expect you",
    "start": "2168390",
    "end": "2177540"
  },
  {
    "text": "know at failures happen all the time their hardware failures happening their failures with disks happening all the",
    "start": "2177540",
    "end": "2182850"
  },
  {
    "text": "time so don't rely on the availability of a single instance right so every kind",
    "start": "2182850",
    "end": "2188220"
  },
  {
    "text": "of role that you have within your stack you should have a cluster for it so here",
    "start": "2188220",
    "end": "2193620"
  },
  {
    "text": "I'm showing a very simplified diagram where you have a role for SPC's a role",
    "start": "2193620",
    "end": "2199110"
  },
  {
    "text": "for a sip proxy and a PBX maybe right and so any you're protected against any",
    "start": "2199110",
    "end": "2207180"
  },
  {
    "text": "single individual instance failure by having a cluster and doing the IP",
    "start": "2207180",
    "end": "2212930"
  },
  {
    "text": "reassignment that Schumann talked about in her portion and doing the failover between the clusters now she also talked",
    "start": "2212930",
    "end": "2221880"
  },
  {
    "text": "about referred to availability zones every region has multiple availability zones which is a isolated failure domain",
    "start": "2221880",
    "end": "2228900"
  },
  {
    "text": "it has separate every easy as a separate power cooling and internet connectivity",
    "start": "2228900",
    "end": "2233970"
  },
  {
    "text": "so we are expecting you to design your applications so that if there is a",
    "start": "2233970",
    "end": "2239820"
  },
  {
    "text": "catastrophic failure a hole a Z goes down your application is resistant to",
    "start": "2239820",
    "end": "2246150"
  },
  {
    "text": "that and and and survives that catastrophic event right so what happens if a hole availability zone goes down so",
    "start": "2246150",
    "end": "2254760"
  },
  {
    "text": "you have your active call and a hole a Z goes down let's say there massive power outage and whatnot you'll",
    "start": "2254760",
    "end": "2261000"
  },
  {
    "text": "still have the second an infrastructure running in the second AZ and any active",
    "start": "2261000",
    "end": "2266010"
  },
  {
    "text": "calls obviously are going to get dropped but any new calls that come in will get",
    "start": "2266010",
    "end": "2272670"
  },
  {
    "text": "rerouted through the second availability zone and so you might ask okay how do I",
    "start": "2272670",
    "end": "2280680"
  },
  {
    "text": "do this failover between different AZ's the preferred way is is what Schumer talked",
    "start": "2280680",
    "end": "2287520"
  },
  {
    "text": "about with the IP reassignment okay and you can use DNS for this kind of",
    "start": "2287520",
    "end": "2295010"
  },
  {
    "text": "failover but DNS should be really be used to do high vulnerability between",
    "start": "2295010",
    "end": "2303210"
  },
  {
    "text": "regions but not for this and the reason for that is the inconsistency time for",
    "start": "2303210",
    "end": "2308280"
  },
  {
    "text": "for DNS DNS as you know DNS records can get cached and so your failover times",
    "start": "2308280",
    "end": "2317310"
  },
  {
    "text": "are not going to be very reliable if you're using DNS right so I'm gonna still talk about a DNS feature here that",
    "start": "2317310",
    "end": "2324300"
  },
  {
    "text": "you can leverage and that's the DNS SRV records so within DNS there's a record",
    "start": "2324300",
    "end": "2329790"
  },
  {
    "text": "type called SRV records that sort of functions as a service discovery",
    "start": "2329790",
    "end": "2335370"
  },
  {
    "text": "mechanism for set and so one of the things that SRV supports is so I'll show",
    "start": "2335370",
    "end": "2342930"
  },
  {
    "text": "you the example and then I'll talk about what is this good for and what is this not good for so you have an IP endpoint",
    "start": "2342930",
    "end": "2352230"
  },
  {
    "text": "and I have two PBX as running in different availability zones and I have DNS a type records that are pointing to",
    "start": "2352230",
    "end": "2359460"
  },
  {
    "text": "their respective IP addresses right and so I go in and add an SRV record that",
    "start": "2359460",
    "end": "2365760"
  },
  {
    "text": "starts with underscore SIP and the protocol the layer four protocol that",
    "start": "2365760",
    "end": "2370890"
  },
  {
    "text": "I'm using which is in this case is is UDP so underscore UDP as well and that",
    "start": "2370890",
    "end": "2376470"
  },
  {
    "text": "SRV record resolves and has an answer section that has two lines there as you",
    "start": "2376470",
    "end": "2383640"
  },
  {
    "text": "see there are three numbers and then that points to the a record that's up",
    "start": "2383640",
    "end": "2389790"
  },
  {
    "text": "top and what do those so those of the three numbers mean the first one is priority which is lowers",
    "start": "2389790",
    "end": "2398299"
  },
  {
    "text": "better the second one is weight so how do you want the traffic to get to get to",
    "start": "2398299",
    "end": "2405709"
  },
  {
    "text": "these these different what weight is to use right and third one is the port to use and that's a little typo there it",
    "start": "2405709",
    "end": "2412699"
  },
  {
    "text": "should be five zero six zero you know as I'm using sip as an example that's the",
    "start": "2412699",
    "end": "2418099"
  },
  {
    "text": "standard port so it's really a service to discovery mechanism so why would you use it and and how would you use it so",
    "start": "2418099",
    "end": "2424249"
  },
  {
    "text": "you would have an IP endpoint and you would configure it just like any other IP endpoint you give it a user ID and a",
    "start": "2424249",
    "end": "2431239"
  },
  {
    "text": "password and you set your domain to the top-level domain that you're using which is East example.com right and so this",
    "start": "2431239",
    "end": "2442209"
  },
  {
    "text": "when an IP phone that supports the SRV records and and this standard goes out",
    "start": "2442209",
    "end": "2450559"
  },
  {
    "text": "to route 53 and and gets the response for SRV it recognizes that there is",
    "start": "2450559",
    "end": "2457449"
  },
  {
    "text": "there is an answer of related to sip that's running or UDP and those are the",
    "start": "2457449",
    "end": "2463609"
  },
  {
    "text": "two lines right now in this instance in this example the priority is the same for the two PB X's and the wait age is",
    "start": "2463609",
    "end": "2470839"
  },
  {
    "text": "the same so it's it's gonna discover that okay I should use five zero six zero as the port and I should lower",
    "start": "2470839",
    "end": "2479150"
  },
  {
    "text": "balanced traffic between these two equally so you can really use if you have a large amount of of clients you",
    "start": "2479150",
    "end": "2487189"
  },
  {
    "text": "can really have an active active scenario where you can use this mechanism to do load balancing and so",
    "start": "2487189",
    "end": "2494599"
  },
  {
    "text": "I've previously said this is not probably a good idea for doing failover",
    "start": "2494599",
    "end": "2500119"
  },
  {
    "text": "why is that again it's it's DNS again get cached so please for failover for",
    "start": "2500119",
    "end": "2507859"
  },
  {
    "text": "for load balancing this is great if you have if you have IP phones or IP clients",
    "start": "2507859",
    "end": "2514039"
  },
  {
    "text": "sip clients that that support the SRV records go ahead and use this for load",
    "start": "2514039",
    "end": "2520130"
  },
  {
    "text": "balancing but for failover please use the ec2 floating IP",
    "start": "2520130",
    "end": "2525980"
  },
  {
    "text": "see to reassignment of IP that will be a much faster failover so those are SRV",
    "start": "2525980",
    "end": "2533300"
  },
  {
    "text": "records another thing is okay I can you know make the call between within my",
    "start": "2533300",
    "end": "2541640"
  },
  {
    "text": "organization right how do I get out to the world the way you get out of the world is by usually you you'll have a",
    "start": "2541640",
    "end": "2549050"
  },
  {
    "text": "SIP trunk that's going to be provided by a service provider called I TSP because",
    "start": "2549050",
    "end": "2554300"
  },
  {
    "text": "our we're going going over IP right and",
    "start": "2554300",
    "end": "2559520"
  },
  {
    "text": "so our best practice here is where ever you have infrastructure in every AZ in",
    "start": "2559520",
    "end": "2565820"
  },
  {
    "text": "every region you should have a SIP trunk going out to the to the I TSP and so I",
    "start": "2565820",
    "end": "2572450"
  },
  {
    "text": "have a little demo here again and so one of our one of our of really good",
    "start": "2572450",
    "end": "2579830"
  },
  {
    "text": "partners is Twilio and they provide this capability they have a service called elastic SIP trunking and so within five",
    "start": "2579830",
    "end": "2588020"
  },
  {
    "text": "minutes you can get started in AWS by launching a marketplace product using",
    "start": "2588020",
    "end": "2593680"
  },
  {
    "text": "using products such as free PBX and you can very easily get connected to so the",
    "start": "2593680",
    "end": "2600680"
  },
  {
    "text": "Tullio elastic SIP trunking it literally takes minutes right and so the best practice here would be wherever you have",
    "start": "2600680",
    "end": "2607100"
  },
  {
    "text": "your SIP infrastructure create the SIP trunking going out in a redundant fashion and then on top of that you can",
    "start": "2607100",
    "end": "2613460"
  },
  {
    "text": "then implement your own custom SIP routing to say okay if i want to save",
    "start": "2613460",
    "end": "2618830"
  },
  {
    "text": "money on long distance charges maybe i want to use the AWS backbone rather than",
    "start": "2618830",
    "end": "2624260"
  },
  {
    "text": "the public's switch public telephone network go over that and then exit out some other AWS region and then take my",
    "start": "2624260",
    "end": "2631970"
  },
  {
    "text": "SIP trunk to Twilio and through the PSTN so if I were to make a call it'll probably go like this right so I have",
    "start": "2631970",
    "end": "2639500"
  },
  {
    "text": "another quick recorded demo here and the demo setup again here is is the same I have the free PBX running in three",
    "start": "2639500",
    "end": "2646520"
  },
  {
    "text": "different regions and I have SIP trunks all I'm doing here is I have created another SIP trunk that's going out to",
    "start": "2646520",
    "end": "2654109"
  },
  {
    "text": "Twilio and on top of that I've created a dial pattern that's",
    "start": "2654109",
    "end": "2659420"
  },
  {
    "text": "okay if this pattern is mashed if this is an external call that starts with one and has you know ten digits and whatever",
    "start": "2659420",
    "end": "2666920"
  },
  {
    "text": "so just route it out to this trunk so this is how the call is gonna go so let me go ahead and play this so here you",
    "start": "2666920",
    "end": "2679970"
  },
  {
    "text": "see the the trunk to Twilio and if I go",
    "start": "2679970",
    "end": "2685339"
  },
  {
    "text": "in and look at the outbound routes",
    "start": "2685339",
    "end": "2690849"
  },
  {
    "text": "I'll see an outbound route entry for Twilio out and if I go in I have that",
    "start": "2690849",
    "end": "2698589"
  },
  {
    "text": "mass routes so any anything that matches the dial pattern let's look at the dial",
    "start": "2698589",
    "end": "2703670"
  },
  {
    "text": "pattern so here's our dial pattern so these dial patterns are matched it's going to go out to that zip trunk that's",
    "start": "2703670",
    "end": "2709579"
  },
  {
    "text": "pointing towards towards Twilio and I'm gonna make a call here",
    "start": "2709579",
    "end": "2715900"
  },
  {
    "text": "welcome to Twilio you have reached the trunking verification system alright so",
    "start": "2719420",
    "end": "2726630"
  },
  {
    "text": "you can see so this is this is a number that's provided by Twilio and you can",
    "start": "2726630",
    "end": "2733530"
  },
  {
    "text": "use it to test outgoing and incoming audio calls so as you can see it's very very easy to get set up and have very",
    "start": "2733530",
    "end": "2740849"
  },
  {
    "text": "redundant scalable infrastructure and so",
    "start": "2740849",
    "end": "2746240"
  },
  {
    "text": "we add another line to our another bullet point to our best practices really here the point is use multiple",
    "start": "2746240",
    "end": "2754890"
  },
  {
    "text": "availability zones of course have clusters use dns to load balance between",
    "start": "2754890",
    "end": "2761550"
  },
  {
    "text": "different regions but within regions maybe I should have articulated it here",
    "start": "2761550",
    "end": "2767910"
  },
  {
    "text": "better but within regions use the IP reassignment to do failover but you can",
    "start": "2767910",
    "end": "2774329"
  },
  {
    "text": "use the DNS to do load balancing all",
    "start": "2774329",
    "end": "2779609"
  },
  {
    "text": "right so the next topic is closely related to to the easy concept that we",
    "start": "2779609",
    "end": "2790410"
  },
  {
    "text": "talked about right so in this pattern let's say you have",
    "start": "2790410",
    "end": "2795510"
  },
  {
    "text": "two calls to active calls going through your infrastructure that's that's in two different AWS regions and it's using",
    "start": "2795510",
    "end": "2803609"
  },
  {
    "text": "four ACS within within those regions and you have that talk wall that's going through the AZ but it's traversing and",
    "start": "2803609",
    "end": "2810660"
  },
  {
    "text": "going into another AZ within the same AWS region and so in the case of an AZ",
    "start": "2810660",
    "end": "2817349"
  },
  {
    "text": "failure what will happen is that you'll lose in this instance if you have just",
    "start": "2817349",
    "end": "2823170"
  },
  {
    "text": "two calls you'll lose a hundred percent of your active calls so another quick best practice is this notion of AZ",
    "start": "2823170",
    "end": "2830430"
  },
  {
    "text": "affinity and easy affinity is essentially saying if the traffic signaling or media enters one easy it",
    "start": "2830430",
    "end": "2839040"
  },
  {
    "text": "should just exit out that same AZ without ever going to another AZ within",
    "start": "2839040",
    "end": "2845280"
  },
  {
    "text": "the same AWS region and so in this instance your traffic means within different AZ's right it",
    "start": "2845280",
    "end": "2852960"
  },
  {
    "text": "doesn't cross the easy boundary and so what happens if I lose my whole easy",
    "start": "2852960",
    "end": "2858600"
  },
  {
    "text": "here is that I am at a slight disadvantage at most 50 percent of",
    "start": "2858600",
    "end": "2863700"
  },
  {
    "text": "active calls are lost right so bad scenario but still not the worst case",
    "start": "2863700",
    "end": "2869220"
  },
  {
    "text": "right it's somewhat of an improvement and so we we add a line where we say",
    "start": "2869220",
    "end": "2874920"
  },
  {
    "text": "okay let's let's keep our media and signaling within one easy in a region",
    "start": "2874920",
    "end": "2880680"
  },
  {
    "text": "right so how do you previously I talked",
    "start": "2880680",
    "end": "2887760"
  },
  {
    "text": "about like SIP routing so how do you decide when to reroute how do you really",
    "start": "2887760",
    "end": "2895040"
  },
  {
    "text": "monitor you I mean how do you know the state of your system I mean this goes without saying every system out there",
    "start": "2895040",
    "end": "2900540"
  },
  {
    "text": "you need to do have monitoring right but it becomes super important for real-time",
    "start": "2900540",
    "end": "2908180"
  },
  {
    "text": "communication systems right so there's a lot of third-party tools and you can",
    "start": "2908180",
    "end": "2916050"
  },
  {
    "text": "implement your own custom monitoring as well so the best practice here is to",
    "start": "2916050",
    "end": "2922080"
  },
  {
    "text": "have detail Mart monitoring from day one so tools open-source tools that you can",
    "start": "2922080",
    "end": "2928560"
  },
  {
    "text": "use their network level tools like obviously I Perth another open-source tool that you could use is sippy now",
    "start": "2928560",
    "end": "2936060"
  },
  {
    "text": "sippy is an open source tool that's really meant to do load testing so it's",
    "start": "2936060",
    "end": "2941340"
  },
  {
    "text": "a fantastic tool but it can also be used for monitoring because it really provides you with the capability of",
    "start": "2941340",
    "end": "2947810"
  },
  {
    "text": "simulating sip scenarios right and so you can do stuff like hey I want to test",
    "start": "2947810",
    "end": "2954660"
  },
  {
    "text": "at you know 200 calls per second right sip call so it will actually simulate",
    "start": "2954660",
    "end": "2960840"
  },
  {
    "text": "those calls and you can run sip be in a client or server mode right and so one",
    "start": "2960840",
    "end": "2966780"
  },
  {
    "text": "of the ways that you can do this you can implement your monitoring is is you Sippy take the the statistics that are",
    "start": "2966780",
    "end": "2973080"
  },
  {
    "text": "coming out of sippy and take them into and ingest them into cloud watch and then create alarms based on those",
    "start": "2973080",
    "end": "2979650"
  },
  {
    "text": "metrics and I've also have another demo on this we'll talk about that very quickly as",
    "start": "2979650",
    "end": "2985499"
  },
  {
    "text": "well so let's take a look at this demo I have the same setup but what i'm doing",
    "start": "2985499",
    "end": "2993390"
  },
  {
    "text": "here is i'm running sip p so let's go back I'm running a sip P in in u.s. west",
    "start": "2993390",
    "end": "3001999"
  },
  {
    "text": "to west 1 and US east 1 and I'm I'm taking those statistics and I'm pushing",
    "start": "3001999",
    "end": "3008930"
  },
  {
    "text": "them into cloud watch so let's see if we can switch",
    "start": "3008930",
    "end": "3015430"
  },
  {
    "text": "all right",
    "start": "3029400",
    "end": "3032180"
  },
  {
    "text": "so if it seems like I've",
    "start": "3040750",
    "end": "3044950"
  },
  {
    "text": "okay",
    "start": "3051000",
    "end": "3053540"
  },
  {
    "text": "all right so it's not running right now but I can show you here so let's see so",
    "start": "3063470",
    "end": "3075230"
  },
  {
    "text": "right here you'll see these this Python script running that's taking I have",
    "start": "3075230",
    "end": "3081530"
  },
  {
    "text": "these three windows open this is US East one that's running city and server mode",
    "start": "3081530",
    "end": "3087040"
  },
  {
    "text": "and this is running Sippy it's a Python script that's running Sippy and in",
    "start": "3087040",
    "end": "3093200"
  },
  {
    "text": "client mode and it's it's it's generating 200 volts per second and so",
    "start": "3093200",
    "end": "3099250"
  },
  {
    "text": "over here I have the same setup in SFO and these are making calls over to to",
    "start": "3099250",
    "end": "3106819"
  },
  {
    "text": "this guy on the on the East Coast and so what I'm doing here this is not running",
    "start": "3106819",
    "end": "3112069"
  },
  {
    "text": "because I've lost the Wi-Fi signal but I'll show you what's what's going on over here I'm taking two parameters two",
    "start": "3112069",
    "end": "3119990"
  },
  {
    "text": "metrics this is the number of successful calls which is about 200 right and this",
    "start": "3119990",
    "end": "3127730"
  },
  {
    "text": "is sip retransmissions and I'm taking these two metrics and then pushing them into cloud watch and so on the cloud",
    "start": "3127730",
    "end": "3135020"
  },
  {
    "text": "watch site what's happening is I've created a dashboard that says ok I I can",
    "start": "3135020",
    "end": "3141890"
  },
  {
    "text": "have I'll have this where I have this path that's SFO to IRD and then I have",
    "start": "3141890",
    "end": "3148700"
  },
  {
    "text": "200 calls that are going on and then I have another path that's from PDX to iid",
    "start": "3148700",
    "end": "3155630"
  },
  {
    "text": "and I'll see the successful calls and sip retransmits and one of them is a",
    "start": "3155630",
    "end": "3161390"
  },
  {
    "text": "positive one of them is sort of a negative metric and what I've done is I've created alarms right and so",
    "start": "3161390",
    "end": "3168680"
  },
  {
    "text": "whenever I see sip retransmits I have created the alarm where I can take",
    "start": "3168680",
    "end": "3174829"
  },
  {
    "text": "manual remediation action or automatic remediation action where you can do",
    "start": "3174829",
    "end": "3180020"
  },
  {
    "text": "stuff like reroute traffic you can launch a lambda function you can launch",
    "start": "3180020",
    "end": "3187660"
  },
  {
    "text": "another function within your infrastructure that takes some kind of remediation action or if you just prefer",
    "start": "3187660",
    "end": "3194210"
  },
  {
    "text": "manual you can you know send out notification and whatnot so that is all that I have",
    "start": "3194210",
    "end": "3201450"
  },
  {
    "text": "but we'll just quickly recap actually I do have one more so let me just switch",
    "start": "3201450",
    "end": "3210510"
  },
  {
    "text": "back okay so I have one more best practice here so",
    "start": "3210510",
    "end": "3216270"
  },
  {
    "text": "we'll just recap this best practice implement sip monitoring and look at key",
    "start": "3216270",
    "end": "3223500"
  },
  {
    "text": "metrics so what are some of the key metrics you have successful calls that",
    "start": "3223500",
    "end": "3229320"
  },
  {
    "text": "I'm using in this demo and then sip retransmits then I'm also using in this",
    "start": "3229320",
    "end": "3235200"
  },
  {
    "text": "demo and so I'm exporting these metrics into cloud watch and then I can I can create alarms and then take actions on",
    "start": "3235200",
    "end": "3241950"
  },
  {
    "text": "on those alarms another one one last one is is something that you've also touched",
    "start": "3241950",
    "end": "3249240"
  },
  {
    "text": "upon is using the right instance type right and so this is this is really",
    "start": "3249240",
    "end": "3254670"
  },
  {
    "text": "important because this will give you both performance and the best bang for",
    "start": "3254670",
    "end": "3259710"
  },
  {
    "text": "your buck right cost optimization as well so with every family we have",
    "start": "3259710",
    "end": "3266660"
  },
  {
    "text": "without some of these families we have the network optimize instances with C 3",
    "start": "3266660",
    "end": "3272430"
  },
  {
    "text": "C 4 and now C 5 as well they'll give you bandwidth up to one or ten gigabytes and",
    "start": "3272430",
    "end": "3279660"
  },
  {
    "text": "then so we also have elastic network adapter that gives you about 25 gigabytes of performance but most of the",
    "start": "3279660",
    "end": "3286260"
  },
  {
    "text": "customers that I talk to that are running these in these kind of workloads",
    "start": "3286260",
    "end": "3291540"
  },
  {
    "text": "are using the Intel versa",
    "start": "3291540",
    "end": "3296700"
  },
  {
    "text": "virtual function adapter and SR IO be at 1 or 10 gigs bandwidth and so just to",
    "start": "3296700",
    "end": "3303120"
  },
  {
    "text": "recap and and complete our list of best practices use the right instance type as",
    "start": "3303120",
    "end": "3309750"
  },
  {
    "text": "we'll give you the right performance and the best bang for your buck and so at this point that's all we have and we'll",
    "start": "3309750",
    "end": "3317700"
  },
  {
    "text": "open it up for any questions that you might that you might have",
    "start": "3317700",
    "end": "3323150"
  }
]