[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hello and welcome to building happy little api's a deep dive into API is on",
    "start": "1429",
    "end": "7020"
  },
  {
    "text": "AWS I'm Eric Johnson I'm the senior developer advocate for service applications at AWS Allen Tom who you",
    "start": "7020",
    "end": "13860"
  },
  {
    "text": "are my name is Allen I'm a senior product manager with Amazon API gateway all right",
    "start": "13860",
    "end": "19800"
  },
  {
    "text": "excellent so what we're gonna be talking about today is building API is on AWS and this starts a 13 weeks or 13 episode",
    "start": "19800",
    "end": "27539"
  },
  {
    "text": "series where we'll be walking through live code and examples of fact will give you kind of a what to expect we're going",
    "start": "27539",
    "end": "34320"
  },
  {
    "text": "to be doing deep dive into features and services of API gateway and how you do ap is on AWS live code examples live Q&A",
    "start": "34320",
    "end": "41850"
  },
  {
    "text": "with API gateway experts and there's 13 episodes and so the idea here is we want",
    "start": "41850",
    "end": "48059"
  },
  {
    "start": "45000",
    "end": "45000"
  },
  {
    "text": "to give you the nuts and bolts of API is on AWS and how kind of the Gotcha is in",
    "start": "48059",
    "end": "54390"
  },
  {
    "text": "kind of the how to tell how to work through that because really honestly if you think about it building API should",
    "start": "54390",
    "end": "59760"
  },
  {
    "text": "be a peaceful calming experience that's why we call them happy little API I can use this voice but you may not hear me",
    "start": "59760",
    "end": "66360"
  },
  {
    "text": "so so as we get started here these are the episodes and I'll kind of let you",
    "start": "66360",
    "end": "71520"
  },
  {
    "text": "look at this for a moment we're gonna be talking again we're gonna be doing a live code on on the ins and outs on",
    "start": "71520",
    "end": "77960"
  },
  {
    "text": "security we're gonna be talking about and I'm just gonna use the same finger you guys see just the same finger over",
    "start": "77960",
    "end": "83670"
  },
  {
    "text": "and over because that's all I got and so we're gonna be doing the rest API is we're gonna be looking no mom no compute which means you know working with",
    "start": "83670",
    "end": "90390"
  },
  {
    "text": "outlandos we're gonna talk about WebSockets and how we support WebSockets yeah talking about containers and with",
    "start": "90390",
    "end": "96479"
  },
  {
    "text": "Amazon API gateway so there's a huge gamut of things that we'll be covering so I encourage you to come back to each",
    "start": "96479",
    "end": "103710"
  },
  {
    "text": "episode need to want to be encapsulated on its own so it will give you a lot of information so if you miss one it's okay",
    "start": "103710",
    "end": "109530"
  },
  {
    "text": "but that they'll be able to work on top of each other so we're gonna start this",
    "start": "109530",
    "end": "114869"
  },
  {
    "text": "session this one's called building happy little api's I didn't know API gateway did that",
    "start": "114869",
    "end": "121009"
  },
  {
    "text": "and and the idea here is is a lot of times when we talk to customers and we",
    "start": "121009",
    "end": "126390"
  },
  {
    "text": "work with with people who are deal with api's they didn't even realize that that API gateway key this or had the",
    "start": "126390",
    "end": "132620"
  },
  {
    "text": "hey I can handle things like throttling or caching and we'll talk about more at the API gateway level a lot of times we",
    "start": "132620",
    "end": "138890"
  },
  {
    "text": "find people are rewriting or or or writing or inventing their own wheel so to speak wouldn't say yeah yeah",
    "start": "138890",
    "end": "145519"
  },
  {
    "text": "definitely and I think just by in this first episode it makes a lot of sense to just kick off the following episodes by",
    "start": "145519",
    "end": "151730"
  },
  {
    "text": "giving a high overview of it right yeah yeah so that's what we're gonna be doing as a high overview on what features what",
    "start": "151730",
    "end": "158510"
  },
  {
    "text": "kind of services that we can offer so that further ado let's get started so when we look at API you know when we",
    "start": "158510",
    "end": "166670"
  },
  {
    "text": "looked at the API game where we look at AP is what I explained you what is an API anyway and I'm gonna turn this over",
    "start": "166670",
    "end": "172340"
  },
  {
    "text": "to Alec cuz he's really our expert here and let you explain it alright thank you so API is you know",
    "start": "172340",
    "end": "178790"
  },
  {
    "start": "178000",
    "end": "178000"
  },
  {
    "text": "they're not a new concept they're really you can think about it they're more like functional black boxes right developers",
    "start": "178790",
    "end": "185840"
  },
  {
    "text": "use api's to do certain tasks but they don't need to know exactly how it works",
    "start": "185840",
    "end": "191030"
  },
  {
    "text": "so you think about you know traditional programming where you're trying to even read and write a file you don't need to",
    "start": "191030",
    "end": "196940"
  },
  {
    "text": "know how the file system works you don't even know what a meta data is stored you're just simply calling an API to",
    "start": "196940",
    "end": "202190"
  },
  {
    "text": "read and write files similarly when you started talking about web service API the idea is very similar companies",
    "start": "202190",
    "end": "210829"
  },
  {
    "text": "provide API for you to do an action you know on their remote servers for example",
    "start": "210829",
    "end": "216019"
  },
  {
    "text": "as social networks like Facebook Twitter Linkedin all of them offer api's for you",
    "start": "216019",
    "end": "221599"
  },
  {
    "text": "to build on top of you know to send messages add friends right similarly for payment processors you",
    "start": "221599",
    "end": "228889"
  },
  {
    "text": "know Amazon pay PayPal stripe all these have api's as well so you don't need to actually know what are the fee",
    "start": "228889",
    "end": "235340"
  },
  {
    "text": "structures were Visa or MasterCard all you have to do is send your customers to those sites you know and then you get a",
    "start": "235340",
    "end": "240799"
  },
  {
    "text": "response for basically whether or not payment was cleared okay so I explains you know what API is and let me ask you",
    "start": "240799",
    "end": "248299"
  },
  {
    "text": "a how do you think API is an API gateways work anyway gateway so when we",
    "start": "248299",
    "end": "257239"
  },
  {
    "text": "talk about API gaming and when we talk about how API is work on Amazon specifically or",
    "start": "257239",
    "end": "262450"
  },
  {
    "start": "260000",
    "end": "260000"
  },
  {
    "text": "on AWS we provide the the Amazon API gateway and and what we feel like is you",
    "start": "262450",
    "end": "268630"
  },
  {
    "text": "know API is a kind of a heavy lifting idea that customers shouldn't have to worry about we want to kind of abstract",
    "start": "268630",
    "end": "273760"
  },
  {
    "text": "that out because it's because we want them to be able to concentrate on what they do best their codes and things like that so what we did is we introduced API",
    "start": "273760",
    "end": "281050"
  },
  {
    "text": "gateway which is a fully managed service that makes it easier for develops to create publish maintain monitor and",
    "start": "281050",
    "end": "287200"
  },
  {
    "text": "secure API at really any scale and you have a lot of control and power over",
    "start": "287200",
    "end": "293050"
  },
  {
    "text": "that so if you looked at API gateway and this is kind of a kind of an overall architecture on what what an API could",
    "start": "293050",
    "end": "300040"
  },
  {
    "start": "295000",
    "end": "295000"
  },
  {
    "text": "look like and these are quotes just so you know and so what does what this would look like is the API gate we can",
    "start": "300040",
    "end": "305860"
  },
  {
    "text": "provide you know private endpoints it can provide private integrations",
    "start": "305860",
    "end": "310900"
  },
  {
    "text": "there's caching there's there's security through waffe there's there's all kinds",
    "start": "310900",
    "end": "316420"
  },
  {
    "text": "of different options and you've got to think of api gateway as kind of two different ends the front end and the",
    "start": "316420",
    "end": "321820"
  },
  {
    "text": "back end and the front end can come in through several different places and we'll kind of break those down in a",
    "start": "321820",
    "end": "327040"
  },
  {
    "text": "minute but just from all kinds of angles and the back end can be routed to another you know set of angles so so there's",
    "start": "327040",
    "end": "334060"
  },
  {
    "text": "there's a lot of flexibility that's provided to you Peggy and that's just what is it's a gateway it's just look",
    "start": "334060",
    "end": "339190"
  },
  {
    "text": "I'm gonna take you want to come in and I'm gonna help you out to where you need to go so there's a lot of power that",
    "start": "339190",
    "end": "344920"
  },
  {
    "text": "goes on there so why don't you break it down if you think about the types of API",
    "start": "344920",
    "end": "350200"
  },
  {
    "text": "that we offer to API gateway can you walk through those yeah yeah let's take a look at the center part of that",
    "start": "350200",
    "end": "355270"
  },
  {
    "text": "diagram that you know you just had right so a gateway offers three types of API ice edge optimized API is these are",
    "start": "355270",
    "end": "362110"
  },
  {
    "text": "really great for when you have a globally this should be the set of customers all right because what we do",
    "start": "362110",
    "end": "367270"
  },
  {
    "text": "is we actually put a fully managed cloud front which is a content distribution network in front the API so when your",
    "start": "367270",
    "end": "373540"
  },
  {
    "text": "clients make a call they get a response a little bit quicker and then we have regional API is these are API is that",
    "start": "373540",
    "end": "380770"
  },
  {
    "text": "you know they're really designed for general use cases they're great for when you're building API is for when you're",
    "start": "380770",
    "end": "386560"
  },
  {
    "text": "calling out to a service that's in the same region or if your clients are in the same region or even when you want to",
    "start": "386560",
    "end": "391660"
  },
  {
    "text": "measure your own CDN in front of it so whether that's like CloudFront you want to match some of the configurations a bit more a",
    "start": "391660",
    "end": "398040"
  },
  {
    "text": "bit more manually right regionally if you guys are great for that and finally we have private api's",
    "start": "398040",
    "end": "404310"
  },
  {
    "text": "these api's are only accessible from within a virtual private cloud and",
    "start": "404310",
    "end": "412850"
  },
  {
    "text": "they're designed for when you're building internal use api so for example",
    "start": "412850",
    "end": "418980"
  },
  {
    "text": "between you know different development teams within the same company or within micro services that are just within the",
    "start": "418980",
    "end": "425130"
  },
  {
    "text": "same VPC okay and I'm gonna take a break here and let our viewers know that if",
    "start": "425130",
    "end": "430350"
  },
  {
    "text": "you have questions please please type them in please enter and we'll do our best to answer the questions that we can",
    "start": "430350",
    "end": "435930"
  },
  {
    "text": "if I can't answer it Allen probably can if he can't answer it I will answer it",
    "start": "435930",
    "end": "441330"
  },
  {
    "text": "so but between two of us this is something that we love and do and so I encourage you to ask us questions this",
    "start": "441330",
    "end": "447180"
  },
  {
    "text": "is also being recorded so it can be watched later so so we've talked about the kind of kind of API that are",
    "start": "447180",
    "end": "454800"
  },
  {
    "text": "available you have edge optimized you have private you have a regional so so",
    "start": "454800",
    "end": "460020"
  },
  {
    "text": "that's kind of the the how you approach the API gateway what about the the protocols what would you talk about the",
    "start": "460020",
    "end": "466680"
  },
  {
    "text": "different kind of protocols that we have yeah so we support two types of protocols rests on top of HTTP this is",
    "start": "466680",
    "end": "473160"
  },
  {
    "start": "467000",
    "end": "467000"
  },
  {
    "text": "your very basic request response type calls you make them using HTTP methods",
    "start": "473160",
    "end": "479400"
  },
  {
    "text": "like get posts then they're really just short-lived connections for the purpose of that request and response and they're",
    "start": "479400",
    "end": "486390"
  },
  {
    "text": "stateless so this is the type of UK we've had for a long time and more recently at the previous review demand",
    "start": "486390",
    "end": "492510"
  },
  {
    "text": "we actually introduced web socket API s-- and what's really cool about this is that this is a service web socket so",
    "start": "492510",
    "end": "498480"
  },
  {
    "text": "between your client API gateway this is gonna be a long live communication over",
    "start": "498480",
    "end": "503520"
  },
  {
    "text": "the WebSocket protocol it's stateful and it enables two-way communication right so for your clients can push messages",
    "start": "503520",
    "end": "510240"
  },
  {
    "text": "state a gateway and API gateway can push messages back to the clients so what's really beautiful about this now is that",
    "start": "510240",
    "end": "517050"
  },
  {
    "text": "in the back end from API gateway to your integration or to your back-end this can",
    "start": "517050",
    "end": "522870"
  },
  {
    "text": "still function as it is today you know using traditional HTTP so all your existing HTTP backends",
    "start": "522870",
    "end": "529230"
  },
  {
    "text": "and lambda functions will work exactly as they do today and you can use them to power these new types of applications on",
    "start": "529230",
    "end": "536010"
  },
  {
    "text": "WebSocket okay two questions for you first one stateful stateless what does",
    "start": "536010",
    "end": "541620"
  },
  {
    "text": "that mean so stateless means you know between calls there's you're not keeping any",
    "start": "541620",
    "end": "548100"
  },
  {
    "text": "kind of information so to every call is basically independent of the of the next okay for stateful there's some state",
    "start": "548100",
    "end": "555870"
  },
  {
    "text": "being being stored so for example you're sending a message or you're doing like where one is dependent on the next thing",
    "start": "555870",
    "end": "562200"
  },
  {
    "text": "you can do that okay so when you're looking at WebSockets and you say stateful would that be like the",
    "start": "562200",
    "end": "568440"
  },
  {
    "text": "information maybe the identity of the client so we know okay all right",
    "start": "568440",
    "end": "573930"
  },
  {
    "text": "okay so the second question I had when we're talking about on building these",
    "start": "573930",
    "end": "582410"
  },
  {
    "text": "confusing what kind of when you look at the concepts of API can you kind of talk through you know all right so we're",
    "start": "583310",
    "end": "589650"
  },
  {
    "text": "talking about the difficulty of requesting response you have WebSockets things like that how does API gateway",
    "start": "589650",
    "end": "594840"
  },
  {
    "text": "break it down into the parts and what are the concepts behind it API gateway how it handles this yeah so you think",
    "start": "594840",
    "end": "600870"
  },
  {
    "text": "about the components or the concepts we have an API gateway for each of these API types they're very similar",
    "start": "600870",
    "end": "607770"
  },
  {
    "start": "605000",
    "end": "605000"
  },
  {
    "text": "so for REST API is you know the base level their resources this is just a",
    "start": "607770",
    "end": "613110"
  },
  {
    "text": "collection of configurations for your paths and methods so for example if you",
    "start": "613110",
    "end": "619470"
  },
  {
    "text": "have if you had like a user endpoint or user path and you want to list users",
    "start": "619470",
    "end": "625140"
  },
  {
    "text": "that would be a get on that users path right and for when you're configuring you can say hey I want this to have",
    "start": "625140",
    "end": "631470"
  },
  {
    "text": "authentication or not I want this to maybe just go directly to a DynamoDB because I don't really need any",
    "start": "631470",
    "end": "637050"
  },
  {
    "text": "processing in front of it and it may be for a post to the users path this one I",
    "start": "637050",
    "end": "643650"
  },
  {
    "text": "want authentication and authorization and I also want it to connect to a lambda function okay so each of these",
    "start": "643650",
    "end": "650460"
  },
  {
    "text": "paths and methods you can have different configurations for and that's really what resources are and then a deployment",
    "start": "650460",
    "end": "657060"
  },
  {
    "text": "then is a point in time snapshot of these configurations and you can have",
    "start": "657060",
    "end": "662430"
  },
  {
    "text": "multiple of these within one API and you think of them like a version of that configuration right and that's specific",
    "start": "662430",
    "end": "670110"
  },
  {
    "text": "to API gateway then yes okay that's good and even the resources that's also supposed to be a gateway and then we",
    "start": "670110",
    "end": "676199"
  },
  {
    "text": "have stages this is a link to the deployment is really the concept that",
    "start": "676199",
    "end": "681779"
  },
  {
    "text": "makes that deployment active and you know actually exposed to your customers and users ok and you can also have",
    "start": "681779",
    "end": "688680"
  },
  {
    "text": "multiple of these stages and if you have multiple you can actually use them to represent your development lifecycle for",
    "start": "688680",
    "end": "695430"
  },
  {
    "text": "example one stage for alpha one for beta and one for gamma or dev test prod you",
    "start": "695430",
    "end": "701009"
  },
  {
    "text": "know whatever your naming convention is in that case so looking at WebSocket the ideas the concepts are very similar",
    "start": "701009",
    "end": "707339"
  },
  {
    "text": "right we also have routes which is basically just a combination of caps and methods you can very similarly define",
    "start": "707339",
    "end": "713399"
  },
  {
    "text": "for each route if it has authorization or if it's going to allow them the function or a different AWS service",
    "start": "713399",
    "end": "719879"
  },
  {
    "text": "right and deployment and stages work exactly the same are the same okay so that breaks down the concepts of that",
    "start": "719879",
    "end": "725370"
  },
  {
    "text": "okay so one of the cool things that about API gateway and and kind of how",
    "start": "725370",
    "end": "730589"
  },
  {
    "text": "you to be abs works in management anyways is how you manage your services and API gateway specifically has five",
    "start": "730589",
    "end": "737339"
  },
  {
    "text": "ways of man Zients really cool first of all you can do they need to be as console using native miss console",
    "start": "737339",
    "end": "743579"
  },
  {
    "text": "obvious you can login you can configure your WS you can use the CLI I love CLI I",
    "start": "743579",
    "end": "750870"
  },
  {
    "text": "think it's a fast way to go in and out its I'm not the fastest typer but I enjoy doing that",
    "start": "750870",
    "end": "756839"
  },
  {
    "text": "Nia aw Sam and if you're not familiar with Sam Sam as our service application model and it's it's it's kind of",
    "start": "756839",
    "end": "763829"
  },
  {
    "text": "abstract of CloudFormation so you use a lot of the same languages and formats it's in yeah mol or JSON where you can",
    "start": "763829",
    "end": "771089"
  },
  {
    "start": "766000",
    "end": "766000"
  },
  {
    "text": "do your resources and list them out and API gateway is what was one of them in fact you can even import into Sam like a",
    "start": "771089",
    "end": "777839"
  },
  {
    "text": "swagger file or something like that if you have a more complex I'm right in there right yeah yeah ok cool",
    "start": "777839",
    "end": "782990"
  },
  {
    "text": "CloudFormation obviously you can do the more verbose version of CloudFormation where you can list out a peg gateway and",
    "start": "782990",
    "end": "789839"
  },
  {
    "text": "finally and this is really cool is open API or swagger and so what",
    "start": "789839",
    "end": "796259"
  },
  {
    "text": "just gives the ability to do is you can if you have an open API template you can import it into API gateway and build it",
    "start": "796259",
    "end": "802859"
  },
  {
    "text": "that way and we'll talk about more about you know the power of that a little later but there's a lot of strength",
    "start": "802859",
    "end": "808739"
  },
  {
    "text": "there and being able to deal with or to work in manager API gateway in multiple",
    "start": "808739",
    "end": "814319"
  },
  {
    "text": "ways so so one of the things as a developer advocate is you know we go out and we speak to to people all the time",
    "start": "814319",
    "end": "820979"
  },
  {
    "text": "and conference and things like that and we talk to them about services and how they work and it's always surprising to",
    "start": "820979",
    "end": "827519"
  },
  {
    "text": "me when someone will ask about API gateway or not even API gateway but how do I accomplish such a task like how do",
    "start": "827519",
    "end": "834539"
  },
  {
    "text": "I secure my application what's the easiest way to do that and sometimes we come back and go wow you know you can",
    "start": "834539",
    "end": "840539"
  },
  {
    "text": "use an authorizer on an api gateway or you can use throttling or something like that they're shocked it's like I didn't",
    "start": "840539",
    "end": "847559"
  },
  {
    "text": "know API gateway could do that and so that's there's one reasons that we decided to put together this show because I think there's a there's",
    "start": "847559",
    "end": "854179"
  },
  {
    "text": "information that can be shared on Wow like you know that makes life a lot easier so for the next probably about 45",
    "start": "854179",
    "end": "860879"
  },
  {
    "text": "minutes we're gonna drop into some of the features that API gateway offers this is not an entirely exhaustive list",
    "start": "860879",
    "end": "866730"
  },
  {
    "text": "but it should should dive in pretty deep and and we'll see if we can stump each other so so we'll get started here so",
    "start": "866730",
    "end": "874049"
  },
  {
    "text": "Alan I'm gonna let you start out with you know at ATS you know first and foremost security is top top priority",
    "start": "874049",
    "end": "881579"
  },
  {
    "text": "for yeah that's right so we're gonna talk about that first I'm gonna let you kind of walk through the authorization code yes API gateway provides basically",
    "start": "881579",
    "end": "890429"
  },
  {
    "text": "four methods of authorization right the first one is you know completely open you know no authorization I suppose yes",
    "start": "890429",
    "end": "900529"
  },
  {
    "start": "896000",
    "end": "896000"
  },
  {
    "text": "so it's really good for example if you're just building public API is that you want to expose publicly for other",
    "start": "900529",
    "end": "907949"
  },
  {
    "text": "general developers to use otherwise we have you know three ways to actually do",
    "start": "907949",
    "end": "913049"
  },
  {
    "text": "authorization one is using I am permissions so you can define I am policies and and then on the API and so",
    "start": "913049",
    "end": "921479"
  },
  {
    "text": "then you can stick before sign that requests and actually check of that user",
    "start": "921479",
    "end": "926639"
  },
  {
    "text": "has access to those to the resources to find policy I'm gonna stop you there what was",
    "start": "926639",
    "end": "932129"
  },
  {
    "text": "that sign how do you sign it so you have to do sick before signing there are a couple of methods to do that maybe three",
    "start": "932129",
    "end": "938609"
  },
  {
    "text": "actually so one the easiest one probably is just to use the SDK that's generated",
    "start": "938609",
    "end": "945629"
  },
  {
    "text": "by API gateway so once you've you know fully fleshed out your API once you've fully defined it you can actually use",
    "start": "945629",
    "end": "952919"
  },
  {
    "text": "API gateway to Korean SDK for your clients okay then that client while should do the signing for you",
    "start": "952919",
    "end": "958249"
  },
  {
    "text": "alternatively you can pull any one of the open-source libraries that does 64 signing okay and the last one probably",
    "start": "958249",
    "end": "965579"
  },
  {
    "text": "the one that takes most effort is that you know you just view our documentation on stick before and you write the code to do it yourself so how often would you",
    "start": "965579",
    "end": "973109"
  },
  {
    "text": "suggest that room probably very very less often yeah yeah I really encourage",
    "start": "973109",
    "end": "979979"
  },
  {
    "text": "you know kind of a rule of thumb for me so to speak is is if if the SDK has",
    "start": "979979",
    "end": "985289"
  },
  {
    "text": "already been generated use that or use one of the library's writing your own doesn't make sense anymore",
    "start": "985289",
    "end": "990959"
  },
  {
    "text": "yeah so I really encourage people to start with the SDK if that doesn't work out then to use the some of the sig v4",
    "start": "990959",
    "end": "997470"
  },
  {
    "text": "libraries and I've seen them you know node or go okay",
    "start": "997470",
    "end": "1003949"
  },
  {
    "text": "so cognitive authorizer yeah next of Cognito authorizer kognito is the manage user directory service in AWS so what",
    "start": "1003949",
    "end": "1011089"
  },
  {
    "text": "that means is you can manage usernames passwords you can reset their passwords",
    "start": "1011089",
    "end": "1016339"
  },
  {
    "text": "you create groups of them and group users into groups and you know you can also do sort of like the two-factor off",
    "start": "1016339",
    "end": "1023409"
  },
  {
    "text": "requirements so all the great stuff you would expect from a user directory service right so if you're calm you know",
    "start": "1023409",
    "end": "1030740"
  },
  {
    "text": "authorizer what that does is it connects it to a connie no user pool and together with a lot scopes will enable",
    "start": "1030740",
    "end": "1036459"
  },
  {
    "text": "authorization on your api's okay all right so we threw a lot of terms out there so let's talk about this for a",
    "start": "1036459",
    "end": "1042649"
  },
  {
    "text": "second so so first of all if i and i'm gonna jump it on the Cognito so if I'm gonna use cognitive user pools",
    "start": "1042649",
    "end": "1048379"
  },
  {
    "text": "Incognito's is a separate AWS service I can go out in the console the CLI or Sam or cloud formation and creating user",
    "start": "1048379",
    "end": "1054679"
  },
  {
    "text": "pool and I can create and in that user pool I can even do groups right I can be",
    "start": "1054679",
    "end": "1059840"
  },
  {
    "text": "like yes and then at that point I can I can an incognito will actually generate",
    "start": "1059840",
    "end": "1066669"
  },
  {
    "text": "forms I can use to log people in if I wanted to yes what's the new idea okay all right so to",
    "start": "1066669",
    "end": "1071899"
  },
  {
    "text": "host a UI or I can use something like amplify which would pull those into my application yes okay so you can actually",
    "start": "1071899",
    "end": "1078260"
  },
  {
    "text": "use amplify to set up all these authorization as well if you're building your API with it you think the amplify",
    "start": "1078260",
    "end": "1084350"
  },
  {
    "text": "framework that's give you yeah security options and you can define those directly in that amplifies your life all",
    "start": "1084350",
    "end": "1090500"
  },
  {
    "text": "right so then that would give me my UI then I can I can use the the frame or the tags to bring my UI so then I create",
    "start": "1090500",
    "end": "1096860"
  },
  {
    "text": "a user I can validate the user all those kinds of things okay using an MFA alright so at that",
    "start": "1096860",
    "end": "1102590"
  },
  {
    "text": "point how does API gateway tie into that so in I think this might get a little",
    "start": "1102590",
    "end": "1110240"
  },
  {
    "text": "bit more involved than we have time for but basically when you're configuring a kognito user pool you can say what",
    "start": "1110240",
    "end": "1116990"
  },
  {
    "text": "scopes are returned and then in apa gateway you can basically just check against those scopes okay but yeah this",
    "start": "1116990",
    "end": "1122690"
  },
  {
    "text": "is a very high level that's right okay so so there's a token that's passed from the client the cognate authorizer",
    "start": "1122690",
    "end": "1129710"
  },
  {
    "text": "wouldn't see yes and then we're just opening a crack when I talk yes all right excellent",
    "start": "1129710",
    "end": "1134750"
  },
  {
    "text": "okay sorry lambda throws or a minute so I'm the authorizer this is gonna be your",
    "start": "1134750",
    "end": "1139940"
  },
  {
    "text": "maximum flexibility authorizer you can basically do anything you want right you can validate a bear token that's coming",
    "start": "1139940",
    "end": "1147559"
  },
  {
    "text": "in or you can just take a look at the request parameters that's in the payload that's coming in and create and generate",
    "start": "1147559",
    "end": "1154039"
  },
  {
    "text": "policies based on that so you actually grant access and authorize request okay so I could tie that to like a",
    "start": "1154039",
    "end": "1160909"
  },
  {
    "text": "camera and only if you have a red shirt on you can come in yeah you really want",
    "start": "1160909",
    "end": "1166250"
  },
  {
    "text": "to create the authorization model and yeah yeah yes okay actually one thing I forgot to mention",
    "start": "1166250",
    "end": "1172309"
  },
  {
    "text": "is that for both Cognito authorized and lambda authorizer you can actually use it to validate tokens from a different",
    "start": "1172309",
    "end": "1179240"
  },
  {
    "text": "user directory as well so for example of using off 0 or off you can do a federated relationship with Cognito",
    "start": "1179240",
    "end": "1186350"
  },
  {
    "text": "to then check and validate those tokens or if you're just using lambda you can crack over open those tokens and verify",
    "start": "1186350",
    "end": "1192080"
  },
  {
    "text": "them yourself can I use Facebook yeah yeah yeah so Khan kunal supports open ID connect okay it's a lot",
    "start": "1192080",
    "end": "1199149"
  },
  {
    "text": "of flexibility yes okay very cool all right so let's let's move on to our next feature and I want to see if there's any",
    "start": "1199149",
    "end": "1206230"
  },
  {
    "text": "questions coming in if we have any there we're gonna be checking for questions while we go on so we go into the next",
    "start": "1206230",
    "end": "1212259"
  },
  {
    "text": "feature I'm talking about a little bit kind of a kind of almost a bread and butter of at least the rest version of",
    "start": "1212259",
    "end": "1218070"
  },
  {
    "text": "an API gateway or both actually it is the request and response in API gateway",
    "start": "1218070",
    "end": "1225009"
  },
  {
    "text": "it's a lot more than there's a request here's the response that's it we just shake and move on",
    "start": "1225009",
    "end": "1230289"
  },
  {
    "text": "you have a lot of power that you can do before you even hit your integration on the back side and I'll talk about that",
    "start": "1230289",
    "end": "1236440"
  },
  {
    "text": "so when a client it could be a website could be a mobile phone it could be a service it could be really any number of",
    "start": "1236440",
    "end": "1242080"
  },
  {
    "text": "things but a client makes a request to API gateway what it's gonna do is the first thing is gonna get in terms of what's called a method request and in",
    "start": "1242080",
    "end": "1248679"
  },
  {
    "text": "this in this area we can do data modeling we can do validation of data we",
    "start": "1248679",
    "end": "1253960"
  },
  {
    "text": "can also do transformations and so if you think of this idea of let's say we have a service that uses XML or",
    "start": "1253960",
    "end": "1264340"
  },
  {
    "text": "something like that but in our clients send a specific request we want to change that service but we can't change",
    "start": "1264340",
    "end": "1271269"
  },
  {
    "text": "our clients so we need to modify that request when it comes in so what at the method request level we can modify our",
    "start": "1271269",
    "end": "1278080"
  },
  {
    "text": "request and then pass it to the integration and the new format and when I say integration I mean we've listed",
    "start": "1278080",
    "end": "1284080"
  },
  {
    "text": "some examples here we can we can integrate directly with Amazon s3 directly with the Amazon DynamoDB with",
    "start": "1284080",
    "end": "1291009"
  },
  {
    "text": "with database lambda and in other AWS and even on-premise services and this is kind of cool because a lot of times we",
    "start": "1291009",
    "end": "1297070"
  },
  {
    "text": "think well if we're gonna use API gateway it can only sit in front of a lambda right I think that's that's kind of a misnomer I can't in fact I've built",
    "start": "1297070",
    "end": "1305499"
  },
  {
    "text": "an application where I made a request into API gateway it transformed that into the proper request against dynamodb",
    "start": "1305499",
    "end": "1312039"
  },
  {
    "text": "I got my response and there I didn't even need Lena at the time obviously you",
    "start": "1312039",
    "end": "1317529"
  },
  {
    "text": "know lambda works great when we need the compute power but the integration is not just to Lamba its really Thomas to any any service",
    "start": "1317529",
    "end": "1324700"
  },
  {
    "text": "so so after the service does whatever so let's say we are integrating with you know dynamodb after DynamoDB does the",
    "start": "1324700",
    "end": "1331600"
  },
  {
    "text": "query and gives us a response back at this point there's a couple things we can do one we can transform it into a",
    "start": "1331600",
    "end": "1337600"
  },
  {
    "text": "format that our client is gonna expect and that's that's a powerful tool because so I'm not having to call on my",
    "start": "1337600",
    "end": "1344410"
  },
  {
    "text": "clients or send emails or you know snail mail or something said hey we're changing the way our stuff works instead",
    "start": "1344410",
    "end": "1350500"
  },
  {
    "text": "we want we're just gonna change it when we send it back so it's transparent to your users and this is often a pattern",
    "start": "1350500",
    "end": "1356830"
  },
  {
    "text": "that people use when they're moving to new services where they'll take let's come Strangler pattern whoa whoa Eric",
    "start": "1356830",
    "end": "1363150"
  },
  {
    "text": "strangle pad sounds really scary so yeah",
    "start": "1363150",
    "end": "1370110"
  },
  {
    "text": "they're stringing the pattern what what the idea there is is if I've got a service that that's an old service and I",
    "start": "1370110",
    "end": "1376180"
  },
  {
    "text": "want to start pulling that off I can wrap API gateway around the service okay so my clients are they don't even know",
    "start": "1376180",
    "end": "1384480"
  },
  {
    "text": "and so what happens is I pull off individual services I can reroute those through API gateway and again the client",
    "start": "1385650",
    "end": "1392500"
  },
  {
    "text": "is is unaware saw so until the old services going God if something divides the okay all right so it's the other",
    "start": "1392500",
    "end": "1402940"
  },
  {
    "text": "thing we can do our customers and so when we have you know maybe the integration responses is something that",
    "start": "1402940",
    "end": "1408790"
  },
  {
    "text": "we don't like we could customize that error and we could feed it back to how our clients expected so just in the",
    "start": "1408790",
    "end": "1414070"
  },
  {
    "text": "simple request a response model there's a lot of power that can be done and in the language for transformation will use",
    "start": "1414070",
    "end": "1420640"
  },
  {
    "text": "the the velocity templating language which is from Apache and so it's more than just you know hey you can use some",
    "start": "1420640",
    "end": "1428410"
  },
  {
    "text": "logic in there you can use parameters variables different things like that so again there's a there's a lot of power",
    "start": "1428410",
    "end": "1434950"
  },
  {
    "text": "there so one of the other things on that we talked about in in use the API gave",
    "start": "1434950",
    "end": "1440290"
  },
  {
    "text": "her anytime you know one things is hacker make it faster how can we make it more responsive and one of the ways that",
    "start": "1440290",
    "end": "1446230"
  },
  {
    "text": "API gateway helps do that is to caching early so it's gonna have you if you can",
    "start": "1446230",
    "end": "1451810"
  },
  {
    "text": "kind of explain how caching works on API gateway yeah so caching is just",
    "start": "1451810",
    "end": "1457850"
  },
  {
    "start": "1454000",
    "end": "1454000"
  },
  {
    "text": "a general computing concept right basically you're storing some bits of",
    "start": "1457850",
    "end": "1463730"
  },
  {
    "text": "either computed data or a copy of data that's somewhere else maybe it's further away so it takes a while to get to fetch",
    "start": "1463730",
    "end": "1469340"
  },
  {
    "text": "that into a in a really fast memory store typically memory in memory okay so the next time someone makes the same",
    "start": "1469340",
    "end": "1476570"
  },
  {
    "text": "request we're able to just respond with the data directly from the cache and we don't actually actually have to do the",
    "start": "1476570",
    "end": "1481760"
  },
  {
    "text": "computation or do that network transfer right so it's gonna be really good for",
    "start": "1481760",
    "end": "1488230"
  },
  {
    "text": "providing quick responses back to your client and if we're actually minimizing load on your to your back-end because",
    "start": "1488230",
    "end": "1493909"
  },
  {
    "text": "now you don't need to do these unnecessary fetches or to compute right so how the caching nepa gave it works is",
    "start": "1493909",
    "end": "1500570"
  },
  {
    "text": "that for a given request you know whether that's based on and we can",
    "start": "1500570",
    "end": "1506570"
  },
  {
    "text": "create keys based on these requests whether that's on you know path parameters headers or query strings well",
    "start": "1506570",
    "end": "1512330"
  },
  {
    "text": "we're gonna cash the response coming back from the back end or - from the integration so the next time different",
    "start": "1512330",
    "end": "1519500"
  },
  {
    "text": "client asses you know based on the same path header or query string basically the cache key will just provide that",
    "start": "1519500",
    "end": "1525530"
  },
  {
    "text": "response back directly and the caching came after you set up at the purse stage or at the method level so you can",
    "start": "1525530",
    "end": "1532130"
  },
  {
    "text": "actually have a lot of control over you know what what methods you want cached and where you want them cache so it's",
    "start": "1532130",
    "end": "1538820"
  },
  {
    "text": "not just like a very generic cache gotcha okay so so break this down for a",
    "start": "1538820",
    "end": "1545510"
  },
  {
    "text": "simple guy like me all right so talk scenarios so let's say I've got I've got a URL it's my dot mydomain.com /root",
    "start": "1545510",
    "end": "1554150"
  },
  {
    "text": "forward slash banana okay so so my parameters are fruit and banana so",
    "start": "1554150",
    "end": "1560150"
  },
  {
    "text": "they're gonna be you know what fruit I want or a product let's say product is fruit and the type of product is banana",
    "start": "1560150",
    "end": "1566240"
  },
  {
    "text": "okay so if I cache on those two strings so you do a request and get banana and",
    "start": "1566240",
    "end": "1572059"
  },
  {
    "text": "it goes out and make sure I understand this he goes out and pulls that data off the database and then caches that and",
    "start": "1572059",
    "end": "1577190"
  },
  {
    "text": "responds to you yes okay I do the same query string same exact one do I get it",
    "start": "1577190",
    "end": "1582350"
  },
  {
    "text": "from the database do it again from the cache you get it from the cache okay because we've set cache keys on both the",
    "start": "1582350",
    "end": "1587990"
  },
  {
    "text": "produce or the product and basically all right so what if I add an extra parameter that says ripe yes right",
    "start": "1587990",
    "end": "1597390"
  },
  {
    "text": "false so it's a right parameter but that's not part of the cache key ah they know just return with the response for",
    "start": "1597390",
    "end": "1602850"
  },
  {
    "text": "the banana right whether or not it's how ripe it is so so as you start making",
    "start": "1602850",
    "end": "1609120"
  },
  {
    "text": "things more specific and refining your cache keys you should definitely make sure to update that and keep that",
    "start": "1609120",
    "end": "1615030"
  },
  {
    "text": "updated okay so there's a very clear strategy on cache keys yes okay all right so we'll make sure that that makes",
    "start": "1615030",
    "end": "1622230"
  },
  {
    "text": "sense is there any time you know when you're when you're doing cache is there any time hey how do I let's say how do I",
    "start": "1622230",
    "end": "1629610"
  },
  {
    "text": "invalidate that cache so I want to update my code how do I get rid of all that yeah there are a couple of methods",
    "start": "1629610",
    "end": "1636090"
  },
  {
    "text": "one a very straightforward one is that you know you just call the flush cache",
    "start": "1636090",
    "end": "1641159"
  },
  {
    "text": "API that we have okay you can even visit our documentation to see what that exact call is the other one is we all she let",
    "start": "1641159",
    "end": "1648240"
  },
  {
    "text": "the clients actually send a cache invalidation parameter that will actually say hey I just want to skip the",
    "start": "1648240",
    "end": "1655020"
  },
  {
    "text": "cache this time and refresh the cache for this specific cache key and obviously they're there all we also put",
    "start": "1655020",
    "end": "1662190"
  },
  {
    "text": "authorization in front of that so we can also control who can make that invalidation as well okay very cool so",
    "start": "1662190",
    "end": "1669120"
  },
  {
    "text": "that a lot of speed yeah that there last night Rudy okay very cool does that count",
    "start": "1669120",
    "end": "1675450"
  },
  {
    "text": "I mean maybe them I'm gonna this is dumpling does that count in one year when you're",
    "start": "1675450",
    "end": "1680549"
  },
  {
    "text": "making the call so that wouldn't count against like a lambda obviously I'm not I'm not invoking the lambda right that's",
    "start": "1680549",
    "end": "1687120"
  },
  {
    "text": "right exactly cost as well yes a gateway would you know respond you're the lambda",
    "start": "1687120",
    "end": "1692700"
  },
  {
    "text": "function wouldn't see it okay excellent all right so the next thing I'm gonna let you do this as well okay again we're",
    "start": "1692700",
    "end": "1700380"
  },
  {
    "text": "still kind of the same idea of speed but also when when people build the API gave",
    "start": "1700380",
    "end": "1706380"
  },
  {
    "text": "people applications in general you know and it's funny when working is I was a sluice architect for a long time and",
    "start": "1706380",
    "end": "1712919"
  },
  {
    "text": "everybody's got the next big thing right yeah so we're gonna we and I can't say how many rooms I've sat in where they",
    "start": "1712919",
    "end": "1718260"
  },
  {
    "text": "come and go look we've got an application idea and we're gonna need to be able to handle you know million requests per second probably in",
    "start": "1718260",
    "end": "1725749"
  },
  {
    "text": "the next week maybe I don't know we'll see and you know it's hard to keep a straight face but that's the truth I'll",
    "start": "1725749",
    "end": "1731359"
  },
  {
    "text": "get the next bigger some of those are right but in order to kind of maintain in order to have an effective strategy",
    "start": "1731359",
    "end": "1738830"
  },
  {
    "text": "of throttling I walk through that on EPA gateway and how that works",
    "start": "1738830",
    "end": "1744700"
  },
  {
    "text": "yes API gateway offers swellings of what throttling is is actually you're",
    "start": "1744700",
    "end": "1750349"
  },
  {
    "start": "1745000",
    "end": "1745000"
  },
  {
    "text": "basically saying you know only accept requests that a certain rate so you know",
    "start": "1750349",
    "end": "1755659"
  },
  {
    "text": "where that's like one request for a second or a million requests per second right just putting that limit barrier",
    "start": "1755659",
    "end": "1762619"
  },
  {
    "text": "there and API gateway basically provides four levels of this you know from very fine-grained to per client per method",
    "start": "1762619",
    "end": "1769460"
  },
  {
    "text": "which is what you see on the left to a very coarse grain at the per account level so he'll probably works in the EPA",
    "start": "1769460",
    "end": "1776059"
  },
  {
    "text": "gateway is that a certain request has to actually pass the request limit for all",
    "start": "1776059",
    "end": "1781580"
  },
  {
    "text": "these four levels before they'll go through to your back-end so what that means for example is then if I set my",
    "start": "1781580",
    "end": "1787190"
  },
  {
    "text": "per account limit really low let's say one request per second and I set my per client for method 1 to you know a",
    "start": "1787190",
    "end": "1793249"
  },
  {
    "text": "million that that client is effectively just gonna see one request per second",
    "start": "1793249",
    "end": "1799340"
  },
  {
    "text": "and there is some slight differences between the four levels right leftmost",
    "start": "1799340",
    "end": "1805460"
  },
  {
    "text": "to the per client once those require you to set up a usage plan and an API key",
    "start": "1805460",
    "end": "1811159"
  },
  {
    "text": "and then you basically give each of your clients an API key and those API keys are then subjected to the following",
    "start": "1811159",
    "end": "1817639"
  },
  {
    "text": "limits you set in the usage plan okay so so an API key like if I have a company",
    "start": "1817639",
    "end": "1823970"
  },
  {
    "text": "that's hitting my service I would give him this okay I always hit it with this API yeah passed in the header yes okay",
    "start": "1823970",
    "end": "1830419"
  },
  {
    "text": "that's right okay and usage plan what exactly's is playing usage twine is",
    "start": "1830419",
    "end": "1836419"
  },
  {
    "text": "basically like a breather like a product group or like like a usage tier if you",
    "start": "1836419",
    "end": "1841489"
  },
  {
    "text": "will okay I'm so you can think of it like a like a way for you to set fine-grain throttling at that usage plan",
    "start": "1841489",
    "end": "1848869"
  },
  {
    "text": "level and then what you do is you associate API keys the usage plan in which case all the API keys then",
    "start": "1848869",
    "end": "1856100"
  },
  {
    "text": "I have that limit applied to it alright so multiple keys can go to one it that's right okay so I may say hey I've got any",
    "start": "1856100",
    "end": "1863570"
  },
  {
    "text": "any partners of mine are on this key yeah yeah they're all on this user's plan yes cool and then the ones on the",
    "start": "1863570",
    "end": "1871880"
  },
  {
    "text": "right the permanent for account they actually apply it across API keys and",
    "start": "1871880",
    "end": "1877190"
  },
  {
    "text": "across clients so they're more more you know like a like I don't know like a",
    "start": "1877190",
    "end": "1883640"
  },
  {
    "text": "little bucket they go broader application of brawling okay so so in",
    "start": "1883640",
    "end": "1888919"
  },
  {
    "text": "that so help me understand this because throttling can be confusing sometimes in general in general per account does that",
    "start": "1888919",
    "end": "1898789"
  },
  {
    "text": "override per client per method there's I wouldn't call it override you just have",
    "start": "1898789",
    "end": "1904970"
  },
  {
    "text": "to pass through all the layers so like you know for example if you set it really high you're not over like maybe a",
    "start": "1904970",
    "end": "1911780"
  },
  {
    "text": "1 million requests per second to per account you're not really overriding the limits you have set the permitted per",
    "start": "1911780",
    "end": "1916789"
  },
  {
    "text": "client and the per client per method right you're really just widening the",
    "start": "1916789",
    "end": "1922220"
  },
  {
    "text": "that specific layer because as I mentioned all the requests has to basically pass through all four layers",
    "start": "1922220",
    "end": "1927890"
  },
  {
    "text": "ok so it's and and and yeah like you think of it like a min of all for",
    "start": "1927890",
    "end": "1933970"
  },
  {
    "text": "minimum okay yeah exactly so alright so",
    "start": "1933970",
    "end": "1939380"
  },
  {
    "text": "if I'm if I'm building a throttling strategy where do I start I should place start thinking about it",
    "start": "1939380",
    "end": "1945409"
  },
  {
    "text": "from the per count level right because that's gonna be at the end of the day the one that you know limits all the",
    "start": "1945409",
    "end": "1951169"
  },
  {
    "text": "requests since that's the path to go for and then basically work towards more more finer granularity as you need it",
    "start": "1951169",
    "end": "1957320"
  },
  {
    "text": "okay right right to left in yeah right to left in the diagram that's right and",
    "start": "1957320",
    "end": "1962600"
  },
  {
    "text": "then but it's just but it's evaluated left to right yes what's going through bags right okay alrighty okay very cool",
    "start": "1962600",
    "end": "1970130"
  },
  {
    "text": "so so with throttling so what that allows me to do then is let's say you know I'm I do build the next best thing",
    "start": "1970130",
    "end": "1976880"
  },
  {
    "text": "okay and and there you know pictures of me and my dog skiing I guess or something like that and everybody wants",
    "start": "1976880",
    "end": "1983330"
  },
  {
    "text": "a picture of this which is very common and presets can happen and and so what I can do is say look I just need to",
    "start": "1983330",
    "end": "1989179"
  },
  {
    "text": "minimize this at you know let's say a thousand per second or something like that because I don't I don't you know maybe",
    "start": "1989179",
    "end": "1995670"
  },
  {
    "text": "it maybe you I don't want to pay first of all because we know API gateway could scale yes so sometimes this isn't we",
    "start": "1995670",
    "end": "2001010"
  },
  {
    "text": "think you're gonna take API gateway down we think it's you you know you're gonna take your server time server behind it",
    "start": "2001010",
    "end": "2007640"
  },
  {
    "text": "exactly so alrighty and then there's obviously a cost factor in there as well that's helping to reduce so we're not",
    "start": "2007640",
    "end": "2013940"
  },
  {
    "text": "just wide open hey anybody can hit it whatever okay all right very cool so the next thing I want to",
    "start": "2013940",
    "end": "2022220"
  },
  {
    "text": "talk about and this is kind of interesting when we talk about routing things through DMC when we talk about",
    "start": "2022220",
    "end": "2031010"
  },
  {
    "text": "routing through a request and how they come through your gateway one of the",
    "start": "2031010",
    "end": "2036500"
  },
  {
    "text": "things that we offer is a private integration now it's important to understand that private integration is",
    "start": "2036500",
    "end": "2042080"
  },
  {
    "text": "not the same as a private API what's threw me at first those like oh okay I figured to size so the idea if we",
    "start": "2042080",
    "end": "2047870"
  },
  {
    "start": "2045000",
    "end": "2045000"
  },
  {
    "text": "go back to this idea of two sides to a gateway those those how things enter it and then how its routed on the back side",
    "start": "2047870",
    "end": "2055450"
  },
  {
    "text": "and so when we can show on a private integration what we're able to do is you know and using a network load balancer",
    "start": "2055450",
    "end": "2061970"
  },
  {
    "text": "what we're able to do is is connect via V PC link to that load balancer and we",
    "start": "2061970",
    "end": "2067010"
  },
  {
    "text": "can make available things are in a V PC you can make them available to really",
    "start": "2067010",
    "end": "2072139"
  },
  {
    "text": "anything via the API gateway so for example so if we're setting up an architecture and there's a Susan's",
    "start": "2072140",
    "end": "2078740"
  },
  {
    "text": "architected to sit down with customers doing one things we always tell them put everything in a V PC at least from you know your ec2 instances things like that",
    "start": "2078740",
    "end": "2085159"
  },
  {
    "text": "put them in a V PC that's you know it's one of the one of the primary levels of protection so we talked about you know the onion and and layers moving in so we",
    "start": "2085160",
    "end": "2092600"
  },
  {
    "text": "encourage people to be you know put put things in there but if we want to expose it now one way we might doing is just",
    "start": "2092600",
    "end": "2097670"
  },
  {
    "text": "through a low belt okay so you can hit a load balancer from external then it can go through to one of your things but if",
    "start": "2097670",
    "end": "2103430"
  },
  {
    "text": "we need an API and API management technology you can do the same thing by connecting the API gateways and then",
    "start": "2103430",
    "end": "2109610"
  },
  {
    "text": "what you do is you get all the power of you know your authorization through lambda authorizers of cognitive authorizers or IM permissions you know",
    "start": "2109610",
    "end": "2117320"
  },
  {
    "text": "wife and and and different things that we'll talk about in in accessing private",
    "start": "2117320",
    "end": "2123080"
  },
  {
    "text": "integration or integrations are in a private VPC the other cool thing is three WS Direct Connect you can also hit",
    "start": "2123080",
    "end": "2131240"
  },
  {
    "text": "on-premise devices as well so so the power here is you know again it's that",
    "start": "2131240",
    "end": "2137240"
  },
  {
    "text": "it's the extra layers of security we talk about you know you know accounts and security groups and availability you",
    "start": "2137240",
    "end": "2143390"
  },
  {
    "text": "know all the different things and and being able to put devices in a V PC is especially specific easy to instance",
    "start": "2143390",
    "end": "2150890"
  },
  {
    "text": "things like that thing you spin up putting them inside of a PC is just good practice it's it's part of the well architected framework so private any",
    "start": "2150890",
    "end": "2159440"
  },
  {
    "text": "bruce's you touch on something really interesting that I that I forgot to mention before which is that you know if",
    "start": "2159440",
    "end": "2165710"
  },
  {
    "text": "you put API gateway in front of and find your private integration in this case actually anything in your back-end",
    "start": "2165710",
    "end": "2171740"
  },
  {
    "text": "what we see customers will you like is that API gateway is basically acting as a central location for you to do all",
    "start": "2171740",
    "end": "2178760"
  },
  {
    "text": "your throttling all your authorization logics so you don't have to do that in the backend right right so you have like",
    "start": "2178760",
    "end": "2185270"
  },
  {
    "text": "a single unified authorization solution instead of building all these repeatedly in your different backends yeah that's a",
    "start": "2185270",
    "end": "2192590"
  },
  {
    "text": "good point and we'll talk about it getting a little further but you think it's like SSL offloading yeah",
    "start": "2192590",
    "end": "2199120"
  },
  {
    "text": "authorization where if I can do that centrally and not have to do each server or each service yeah that's that's a",
    "start": "2199120",
    "end": "2206720"
  },
  {
    "text": "really good point yeah alrighty so the next thing we're gonna talk about is",
    "start": "2206720",
    "end": "2212210"
  },
  {
    "text": "staging and you touched on this earlier guys a little bit yeah so so the idea of staging there's a couple ways you can",
    "start": "2212210",
    "end": "2218180"
  },
  {
    "text": "look at this we want to look at it first of all from just the API gateway window I change the slider just yeah so so the",
    "start": "2218180",
    "end": "2227900"
  },
  {
    "start": "2219000",
    "end": "2219000"
  },
  {
    "text": "way you look at API gateway in stages is is like Allen talked about earlier a stage as a pointer to deployment so I",
    "start": "2227900",
    "end": "2235700"
  },
  {
    "text": "can have in this particular scenario we're looking at I have three deployments available one is a dev one",
    "start": "2235700",
    "end": "2241850"
  },
  {
    "text": "is a beta and one is a prod now these are deployments of the API gateway itself okay not the application behind",
    "start": "2241850",
    "end": "2248570"
  },
  {
    "text": "it but the API gateway configuration itself and that's an important distinction because I think sometimes we talk about deployments we think code",
    "start": "2248570",
    "end": "2255280"
  },
  {
    "text": "we think you know our lambdas or our you know things like that but API gateway because it's kind of an infrastructure",
    "start": "2255280",
    "end": "2261010"
  },
  {
    "text": "as code yeah that kind of it is you have a deployment of API gateway as well so",
    "start": "2261010",
    "end": "2267250"
  },
  {
    "text": "you might have a resource and method configuration you might have an authorization configuration and things",
    "start": "2267250",
    "end": "2274240"
  },
  {
    "text": "like that so this allows you to have different testing areas so you can have your developers just you know you know",
    "start": "2274240",
    "end": "2280120"
  },
  {
    "text": "testing and development and go into town on this you can have beta where your business might be checking the latest",
    "start": "2280120",
    "end": "2285640"
  },
  {
    "text": "versions of what you're gonna do and then you have product or production I'm sorry where where that's what's actually",
    "start": "2285640",
    "end": "2290980"
  },
  {
    "text": "out there and you can move developments through these stages you can also as you seem that this idea of called stage",
    "start": "2290980",
    "end": "2297130"
  },
  {
    "text": "variables so if you have different information that changes per stage you can store that at the stage level",
    "start": "2297130",
    "end": "2302590"
  },
  {
    "text": "allowing you to say you know hey you know it's this connection string or this in our example here we're going to use a",
    "start": "2302590",
    "end": "2308800"
  },
  {
    "text": "lambda alias and so if you kind of look at how this works in conjunction with lambda it looks like this and what this",
    "start": "2308800",
    "end": "2317890"
  },
  {
    "text": "does is in lambda lambda kind of has this idea of stage as what we call aliases and I don't know if it's same",
    "start": "2317890",
    "end": "2324880"
  },
  {
    "text": "thing but we have alias and versions in lambda and so you see here on the right where we have versions one through nine",
    "start": "2324880",
    "end": "2331120"
  },
  {
    "text": "and nine is our latest bleeding-edge it works because we're good developers",
    "start": "2331120",
    "end": "2336220"
  },
  {
    "text": "right so it's gonna work we couldn't pass the production by and so but anyway",
    "start": "2336220",
    "end": "2342160"
  },
  {
    "text": "so what we do is is we have development that's our bleeding edge and so our development stage in API gateway has an",
    "start": "2342160",
    "end": "2349120"
  },
  {
    "text": "has a variable called lambda alias and it says hey which lambda alias should I",
    "start": "2349120",
    "end": "2355180"
  },
  {
    "text": "point to and we dev so that allows that variable that allows us to call the dev alias",
    "start": "2355180",
    "end": "2362050"
  },
  {
    "text": "which points to the latest version of our code in a lambda so there's a lot of power a lot of flexibility you also",
    "start": "2362050",
    "end": "2369490"
  },
  {
    "text": "would bethe same thing you line this up you'll and alias points at beta so it calls the beta alias and lame in a",
    "start": "2369490",
    "end": "2375460"
  },
  {
    "text": "lambda function and finally you have the product which calls the lame alias of",
    "start": "2375460",
    "end": "2380590"
  },
  {
    "text": "prod and it calls pradhan e this isn't lambda so so here you have to kind of",
    "start": "2380590",
    "end": "2386410"
  },
  {
    "text": "kind of different things working together your API gateway stage which is going to change your API",
    "start": "2386410",
    "end": "2392000"
  },
  {
    "text": "gateway configuration and your alias so if you have to make changes in the backend let's say you're making and the",
    "start": "2392000",
    "end": "2399620"
  },
  {
    "text": "scenario we talked about the other day an authorization change which that's a pretty big deal yeah because if I don't have to authorize I have something open",
    "start": "2399620",
    "end": "2405980"
  },
  {
    "text": "up and also I'm gonna have to log yeah yeah you might lose some custody exactly exactly so what I what I'm gonna do is I'm gonna put that authorization as an",
    "start": "2405980",
    "end": "2412940"
  },
  {
    "text": "authorizer on the dev stage in the API gateway and then I'm gonna put any code in the backend that maybe I have to you",
    "start": "2412940",
    "end": "2419300"
  },
  {
    "text": "know change and do something in the land on the latest version and then as those tests then I'll move them into beta so",
    "start": "2419300",
    "end": "2425420"
  },
  {
    "text": "my business can test it and then finally into production and so this gives us a lot of control over how we can release",
    "start": "2425420",
    "end": "2432110"
  },
  {
    "text": "but even though with the idea of staging yeah do you ever want to just push",
    "start": "2432110",
    "end": "2437540"
  },
  {
    "text": "everything out at one time no probably not because my theory is good there are",
    "start": "2437540",
    "end": "2443450"
  },
  {
    "text": "some times there are bugs you know it's hard to catch that finger once in a while so okay yeah so the next thing we",
    "start": "2443450",
    "end": "2450410"
  },
  {
    "text": "want to talk about I stopped what canary really says what your question right",
    "start": "2450410",
    "end": "2455660"
  },
  {
    "start": "2453000",
    "end": "2453000"
  },
  {
    "text": "yeah so what canary release does is that actually lets you specify the percentage",
    "start": "2455660",
    "end": "2462410"
  },
  {
    "text": "of requests that go to your next version from your current version so let me break that down a bit you know what I",
    "start": "2462410",
    "end": "2468440"
  },
  {
    "text": "mean is that let's say we're actually making that authorization change that you talked about Eric right we're",
    "start": "2468440",
    "end": "2473990"
  },
  {
    "text": "something we're gonna put authorization on top of in our API on top of our you",
    "start": "2473990",
    "end": "2479480"
  },
  {
    "text": "know production lambda if you will or production stage so when we're introducing this off change regime I",
    "start": "2479480",
    "end": "2485990"
  },
  {
    "text": "don't want to minimize and make sure that as we're going from dev to prod that there's you know we're not losing",
    "start": "2485990",
    "end": "2493280"
  },
  {
    "text": "any customers or they're not seeing any exit for access for bin errors right so",
    "start": "2493280",
    "end": "2498320"
  },
  {
    "text": "how we can do that is by using canary release so what we can do is we can say",
    "start": "2498320",
    "end": "2503570"
  },
  {
    "text": "you know this version in this diagram here the prior version is the current version canary plus one is the version we're",
    "start": "2503570",
    "end": "2510530"
  },
  {
    "text": "adding authorized authorization on so we can say okay I set my canary release on",
    "start": "2510530",
    "end": "2516800"
  },
  {
    "text": "my canary I want maybe just 2% of the requests right just start small to keep my block radius small so it was if it's a cash",
    "start": "2516800",
    "end": "2524400"
  },
  {
    "text": "traffic changed and I'm only affecting 2% requests right and a 98% you know",
    "start": "2524400",
    "end": "2530069"
  },
  {
    "text": "just continuing to prod and that and then I can actually just monitor my cloud watch metrics or logs to make sure",
    "start": "2530069",
    "end": "2536249"
  },
  {
    "text": "there are no no issues and then as I have ramped up my confidence I can start ramping up the percentage in the canary",
    "start": "2536249",
    "end": "2542819"
  },
  {
    "text": "so from 2 to like 10 20 70 80 you know a hundred so once I'm at a hundred then",
    "start": "2542819",
    "end": "2550950"
  },
  {
    "text": "basically the stage is just pointing to +1 and there's no more canary because the King becomes the actual non canary",
    "start": "2550950",
    "end": "2558569"
  },
  {
    "text": "product version okay so it's not a one-time phase then you can actually so it's not like 10 percent then 100",
    "start": "2558569",
    "end": "2564329"
  },
  {
    "text": "percent yeah actually phase through actually phase back as well so okay",
    "start": "2564329",
    "end": "2569579"
  },
  {
    "text": "they're saying oh this was really catastrophic I'm gonna make it zero percent mechanic okay yeah all right",
    "start": "2569579",
    "end": "2576239"
  },
  {
    "text": "good way to minimize the the blast radius I like that did you notice the the skinny arrow on the left side of the",
    "start": "2576239",
    "end": "2582809"
  },
  {
    "text": "fat arrow on the right I'm doing that traffic representation does a really nice touch Erick's I appreciate your I",
    "start": "2582809",
    "end": "2591180"
  },
  {
    "text": "was pretty proud of that so okay so with canary releases then you know obviously",
    "start": "2591180",
    "end": "2596190"
  },
  {
    "text": "cloud watch is critical any time I'm monitoring any time things like that so critical and then and then you can move",
    "start": "2596190",
    "end": "2602579"
  },
  {
    "text": "those over and canary goes away it's a lot of protection that that's right okay alrighty so next thing I want to talk",
    "start": "2602579",
    "end": "2608069"
  },
  {
    "text": "about and this is something that that's fairly new or at least how its implemented there's what we call went",
    "start": "2608069",
    "end": "2614489"
  },
  {
    "text": "out to pay some firewall or wife and I'll probably call wife because web application firewall ties up my tongue",
    "start": "2614489",
    "end": "2620220"
  },
  {
    "start": "2618000",
    "end": "2618000"
  },
  {
    "text": "I'm not that skilled and so with a laugh it used to be that we would go through clown front to do that but but reinvent",
    "start": "2620220",
    "end": "2627539"
  },
  {
    "text": "last year was a reinvent we announced this that the direct integration just before reading about hi neva good for so",
    "start": "2627539",
    "end": "2634200"
  },
  {
    "text": "so integration with the wife directly into API gateway now wife is very",
    "start": "2634200",
    "end": "2640079"
  },
  {
    "text": "interesting in that it provides a level of security that you can you can get",
    "start": "2640079",
    "end": "2646499"
  },
  {
    "text": "custom you heat crazy and get customer to rules and and so the way it works is",
    "start": "2646499",
    "end": "2651900"
  },
  {
    "text": "let's say we have our two clients here we've got our with the orange and the red and so what happens is the clients make the request",
    "start": "2651900",
    "end": "2658420"
  },
  {
    "text": "against API gateway so our orange one we validate their request maybe it's a token header",
    "start": "2658420",
    "end": "2663790"
  },
  {
    "text": "maybe it's an IP address maybe it's a geographic location there's different",
    "start": "2663790",
    "end": "2669130"
  },
  {
    "text": "things that we can evaluate and we pass that to the TMS wife and the wife evaluates it against the rules",
    "start": "2669130",
    "end": "2675790"
  },
  {
    "text": "to see if it should be passed or not if it should then what happens he passes",
    "start": "2675790",
    "end": "2681339"
  },
  {
    "text": "that integration right on through API gateway to where the destination is supposed to go to however if it doesn't",
    "start": "2681339",
    "end": "2688030"
  },
  {
    "text": "then the connection is just dropped it's just nope you can't get by me and this is really handy when you're working",
    "start": "2688030",
    "end": "2695800"
  },
  {
    "text": "with things like again like I like geographical hey we want to minimize this just to us tour a mia or he's or",
    "start": "2695800",
    "end": "2703510"
  },
  {
    "text": "something like that or we want to just limit it to our office yeah with an IP address",
    "start": "2703510",
    "end": "2708640"
  },
  {
    "text": "well the scenarios DC could be using laughs for I think that's the most common when I shaved limiting within an",
    "start": "2708640",
    "end": "2715210"
  },
  {
    "text": "address range that your company owns right so you're able to sort of do this semi-private type API by using a waif in",
    "start": "2715210",
    "end": "2724480"
  },
  {
    "text": "front of okay okay very cool so so again a lot of power there and behind it",
    "start": "2724480",
    "end": "2729670"
  },
  {
    "text": "because this is inside of API gateway again it's this back side front side idea on the back side we can route to",
    "start": "2729670",
    "end": "2736630"
  },
  {
    "text": "really anywhere we need to route to so now we're in the earlier when we were",
    "start": "2736630",
    "end": "2744520"
  },
  {
    "text": "talking about Canary releases and things like that we talked about monitor we talked about cloud watch yeah again it's",
    "start": "2744520",
    "end": "2752170"
  },
  {
    "text": "it's always interesting to me monitoring logging metrics things like that always",
    "start": "2752170",
    "end": "2757270"
  },
  {
    "text": "seem to be an afterthought whoever knows that yeah typically when people are designing application they know get",
    "start": "2757270",
    "end": "2763119"
  },
  {
    "text": "working it's a part of a POC and then an issue occurs and they're like oh man I",
    "start": "2763119",
    "end": "2768700"
  },
  {
    "text": "wish I had logs or exactly yeah so we'll log when we write our tests you know I",
    "start": "2768700",
    "end": "2775450"
  },
  {
    "text": "mean there seems to be the theory so but I think if the way that a DBS in the end",
    "start": "2775450",
    "end": "2781569"
  },
  {
    "text": "there with the tools we have it really Able's you to think metrics think logging things those kind of things",
    "start": "2781569",
    "end": "2787270"
  },
  {
    "text": "upfront build it right into your applications and api gateway is no different you gonna walk through some",
    "start": "2787270",
    "end": "2792579"
  },
  {
    "text": "some things you can do with gateway yeah yeah so a big e way is well integrated with many of the monitoring metrics",
    "start": "2792579",
    "end": "2799980"
  },
  {
    "start": "2799000",
    "end": "2799000"
  },
  {
    "text": "tracing type services offered by AWS and that's because you know they're much better at doing those things than we are",
    "start": "2799980",
    "end": "2807040"
  },
  {
    "text": "because you know they're built for that purpose for competency yeah so the first most basic is Amazon CloudWatch metrics",
    "start": "2807040",
    "end": "2815589"
  },
  {
    "text": "integration so out of box we provide seven metrics and you can optionally enable those metrics at the per API and",
    "start": "2815589",
    "end": "2822970"
  },
  {
    "text": "per stage level and I should for method per stage and per method level so you can get some more granularity into where",
    "start": "2822970",
    "end": "2830890"
  },
  {
    "text": "in the API it's throwing these errors or generating these metrics and next we also have AWS x-ray integration so it",
    "start": "2830890",
    "end": "2838569"
  },
  {
    "text": "was x-ray lets you trace a call going from client all the way back to the back",
    "start": "2838569",
    "end": "2843849"
  },
  {
    "text": "end and then you know back to the client so yeah you're actually able to visualize a map of the call going from",
    "start": "2843849",
    "end": "2850420"
  },
  {
    "text": "you know your app going passing to api gateway to maybe your lambda function and then going backwards and at every",
    "start": "2850420",
    "end": "2857589"
  },
  {
    "text": "single stage you can see what the latency was at and you can see what status was returned so it's actually a",
    "start": "2857589",
    "end": "2863980"
  },
  {
    "text": "really powerful tool for when you want to do tracing or profiling or performance okay and then more recently",
    "start": "2863980",
    "end": "2872230"
  },
  {
    "text": "actually integrated with a dosing AWS config say device configures and is a service that lets you basically track",
    "start": "2872230",
    "end": "2880750"
  },
  {
    "text": "configuration changes to specific resources so for example you can track",
    "start": "2880750",
    "end": "2886030"
  },
  {
    "text": "the changes for a specific stage one use case for that is you know we talked about the Web Application Firewall yeah",
    "start": "2886030",
    "end": "2893260"
  },
  {
    "text": "and so the Web Application Firewall is actually enable per stage so if you had like a company policy that says hey all",
    "start": "2893260",
    "end": "2899800"
  },
  {
    "text": "the stages must have a firewall on it you can actually usually that was config to monitor whether or not that's true",
    "start": "2899800",
    "end": "2905980"
  },
  {
    "text": "and if it you know if some suddenly someone turns off the firewall you can get an alert as well so you can turn the",
    "start": "2905980",
    "end": "2913630"
  },
  {
    "text": "wire firewall back on No so like so yeah let you okay so that's right and cloud",
    "start": "2913630",
    "end": "2920420"
  },
  {
    "text": "trail cloud trail you know works across all AWS services it basically provides the",
    "start": "2920420",
    "end": "2925690"
  },
  {
    "text": "compliance and auditing story for all the changes are happening in your AWS account so for example you're gonna see",
    "start": "2925690",
    "end": "2932540"
  },
  {
    "text": "you know who'd who is you know creating new api's who is changing some configuration you can do that all",
    "start": "2932540",
    "end": "2939650"
  },
  {
    "text": "through Cloud trail cloud role as a developer is it was a great tool it",
    "start": "2939650",
    "end": "2945200"
  },
  {
    "text": "saved me many times getting to go in and say no I'm not the one that deleted all that architecture oh yeah it's it's",
    "start": "2945200",
    "end": "2951260"
  },
  {
    "text": "great to have that audit trail to say here's what happened here's we made that call because I can remediate that so",
    "start": "2951260",
    "end": "2956830"
  },
  {
    "text": "alright so metrics and monitoring what about logging logging very similarly we",
    "start": "2956830",
    "end": "2963500"
  },
  {
    "start": "2963000",
    "end": "2963000"
  },
  {
    "text": "integrate with cloud watch logs to offer logging we offer two types execution logs this is really great for debugging",
    "start": "2963500",
    "end": "2969760"
  },
  {
    "text": "troubleshooting issues you can specify what logging level you want you know where that's error or info and you can",
    "start": "2969760",
    "end": "2976310"
  },
  {
    "text": "also opt in for full request response and because this does log all the requests coming in and out you can",
    "start": "2976310",
    "end": "2982820"
  },
  {
    "text": "actually get quite big so I would suggest you know turning off this on and making sure that I just give me an eye",
    "start": "2982820",
    "end": "2989210"
  },
  {
    "text": "out for the storage size that might be picking up and then we have access logs you can customize the log format but we",
    "start": "2989210",
    "end": "2996500"
  },
  {
    "text": "also have templates for pushing these logs in the you know the common log",
    "start": "2996500",
    "end": "3001570"
  },
  {
    "text": "format which is you know basically the same format used by Apache and other web servers right so if you have any",
    "start": "3001570",
    "end": "3007540"
  },
  {
    "text": "existing reporting or analytics set up based on those log formats you can just you know push the same logs there so",
    "start": "3007540",
    "end": "3014830"
  },
  {
    "text": "yeah you can export the logs for custom analytics and reporting awesome ok so if I wanted to get like the",
    "start": "3014830",
    "end": "3021460"
  },
  {
    "text": "standard hey who's hit and what I pier there from that would be here yeah that'd be the access logs and even use",
    "start": "3021460",
    "end": "3027369"
  },
  {
    "text": "the common log format for that yes alrighty and I can store that mystery and use a very powerful I want to stop",
    "start": "3027369",
    "end": "3035290"
  },
  {
    "text": "here at the moment is we have about nine minutes we've got a few more features we're gonna cover but are there any questions that we have that that we need",
    "start": "3035290",
    "end": "3041589"
  },
  {
    "text": "to jump into DC me and I'll let you look through those and and I'm gonna I'm",
    "start": "3041589",
    "end": "3047109"
  },
  {
    "text": "gonna talk about the developer portal in a moment if you can see questions we need looks like our moderators are doing",
    "start": "3047109",
    "end": "3052220"
  },
  {
    "text": "their job they're responding to all the questions very good guys alright so the",
    "start": "3052220",
    "end": "3058100"
  },
  {
    "text": "next feature we're talking about is develop a portal that's a very cool feature the idea here is you know one of",
    "start": "3058100",
    "end": "3065450"
  },
  {
    "start": "3063000",
    "end": "3063000"
  },
  {
    "text": "the things I've got this API and I want to monetize it or I want to make it available to people publicly you know",
    "start": "3065450",
    "end": "3070880"
  },
  {
    "text": "whatever how do i how do I manage it how do I offer them keys different things",
    "start": "3070880",
    "end": "3077180"
  },
  {
    "text": "like that I don't want to get a call in the middle of the night all the time and even access things like that and there we go",
    "start": "3077180",
    "end": "3087290"
  },
  {
    "text": "so the idea behind developer portal is this is something that you can you can launch from the service application",
    "start": "3087290",
    "end": "3093230"
  },
  {
    "text": "repository yes or even in github and open model for this and so what you're",
    "start": "3093230",
    "end": "3099530"
  },
  {
    "text": "able to do is you able to launch this up as an application and it provides some of the new things are api's search and",
    "start": "3099530",
    "end": "3105920"
  },
  {
    "text": "an API discovery API registration and key generation so what someone can do is they can come out they can register for",
    "start": "3105920",
    "end": "3111950"
  },
  {
    "text": "a key generate the key and then they have that and they can also through the API monitoring and usage they can tell",
    "start": "3111950",
    "end": "3117920"
  },
  {
    "text": "hey here's how much I'm using Allen's API there's not much I'm using Eric's API miner probably but um and you could",
    "start": "3117920",
    "end": "3126109"
  },
  {
    "text": "use API documentation so built-in to API gateway is the ability to document yeah that's alright so you know permit the",
    "start": "3126109",
    "end": "3132800"
  },
  {
    "text": "method at the resource things like that and so there's API documentation is available to the developer portal API",
    "start": "3132800",
    "end": "3138650"
  },
  {
    "text": "testing hey I want to test this make sure I get back the right stuff before I start musing it with my customers and",
    "start": "3138650",
    "end": "3144770"
  },
  {
    "text": "then the SDK generation I'm sorry yeah generator her generation so this is what",
    "start": "3144770",
    "end": "3150440"
  },
  {
    "text": "you were talking about earlier yeah so if I build an API and I want to get and",
    "start": "3150440",
    "end": "3156230"
  },
  {
    "text": "I need an interface for it I can I can generate this sdk right here that's right there developer portal the one I",
    "start": "3156230",
    "end": "3162950"
  },
  {
    "text": "was mentioning earlier you can also generate in the stages tab of your API okay yeah so it's gonna",
    "start": "3162950",
    "end": "3167990"
  },
  {
    "text": "have all the libraries and stuff that I need to execute that at the claim that's",
    "start": "3167990",
    "end": "3173240"
  },
  {
    "text": "right okay excellent as a package very cool yeah more recently we actually I think just couple weeks ago we push our",
    "start": "3173240",
    "end": "3179330"
  },
  {
    "text": "an update for the developer portal that also added some usability improvements for example being able to",
    "start": "3179330",
    "end": "3185599"
  },
  {
    "text": "have a feedback channel from your your customers to the admins of the dev",
    "start": "3185599",
    "end": "3190640"
  },
  {
    "text": "portal yeah an SDK generation was part of that release so actually you're just slice it really up to date here it is",
    "start": "3190640",
    "end": "3198050"
  },
  {
    "text": "okay all right so the next thing we're going to talk about resource policies and so the idea behind a resource policy",
    "start": "3198050",
    "end": "3205579"
  },
  {
    "text": "and this isn't this isn't just an EPA gateway thing is it so you have across all or actually a majority of hate of",
    "start": "3205579",
    "end": "3211940"
  },
  {
    "text": "yes so the idea here is I can attach to the resource of policy that's instead of",
    "start": "3211940",
    "end": "3220010"
  },
  {
    "start": "3214000",
    "end": "3214000"
  },
  {
    "text": "me saying hey you know attach to a land a policy and says what he can get I can I can attach to the resource a",
    "start": "3220010",
    "end": "3226040"
  },
  {
    "text": "policy and say this is who can get to me and this is who cannot and and this is another example where you can do things",
    "start": "3226040",
    "end": "3231589"
  },
  {
    "text": "like it's great for like AWS Identity and Access hey this particular role from this account can access this resource or",
    "start": "3231589",
    "end": "3238490"
  },
  {
    "text": "this is another area where you could do the IP address if I had to choose between a wife and and a resource policy",
    "start": "3238490",
    "end": "3246290"
  },
  {
    "text": "I'd probably get a wife on that but but it's another way you could do that where look I'm just gonna say only this IP",
    "start": "3246290",
    "end": "3252619"
  },
  {
    "text": "address or range can get too bad yeah so it calling the Wow exactly so along with",
    "start": "3252619",
    "end": "3259460"
  },
  {
    "text": "that loans resource policies and access another cool thing that we do and if you",
    "start": "3259460",
    "end": "3265099"
  },
  {
    "text": "could explain is how let's say I'm an ec2 instance sitting behind the API gateway how do I know it's the API",
    "start": "3265099",
    "end": "3270829"
  },
  {
    "text": "gateway getting today yeah so we have this cool feature called client certificates so what that is it's",
    "start": "3270829",
    "end": "3276260"
  },
  {
    "start": "3276000",
    "end": "3276000"
  },
  {
    "text": "basically it allows your back-end in this case than ec2 instance to verify that request is coming from API gateway",
    "start": "3276260",
    "end": "3281859"
  },
  {
    "text": "so what what you need to do is basically hi generate a certificate in API gateway",
    "start": "3281859",
    "end": "3286940"
  },
  {
    "text": "and then copy that public key into your ec2 and then you can use that public key to verify that the request is indeed",
    "start": "3286940",
    "end": "3293839"
  },
  {
    "text": "coming from an API gateway we have documentation on the actually even have a code snippet on what your these who",
    "start": "3293839",
    "end": "3299510"
  },
  {
    "text": "needs to do so you can see our documentation on straightforward API",
    "start": "3299510",
    "end": "3305540"
  },
  {
    "text": "calls to validate call you just need a",
    "start": "3305540",
    "end": "3310670"
  },
  {
    "text": "you just need to look at the cert right okay value that's right all righty okay so here's here's one",
    "start": "3310670",
    "end": "3317410"
  },
  {
    "text": "time towards the end that I'm spend a little time on and this is a big one custom domains now at first glance you",
    "start": "3317410",
    "end": "3324820"
  },
  {
    "start": "3318000",
    "end": "3318000"
  },
  {
    "text": "might just go oh yeah okay customer mains are great because I could call it my own name I wanted you know Eric's",
    "start": "3324820",
    "end": "3330070"
  },
  {
    "text": "cute puppies calm or mydomain.com something like that rather than 1 2 3 4 5 . execute API you know the long name",
    "start": "3330070",
    "end": "3337210"
  },
  {
    "text": "there's a little more to it than that there's three things that that are important well number one supports rest",
    "start": "3337210",
    "end": "3344350"
  },
  {
    "text": "in web socket API so you're able to say let's say you know Eric's cute puppies calm that's my website API Eric's cute",
    "start": "3344350",
    "end": "3351400"
  },
  {
    "text": "puppies calm is my API so I'm able to you know keep those close maybe some it's been a long time since I've done",
    "start": "3351400",
    "end": "3357640"
  },
  {
    "text": "any SEO but maybe that helps us do that kind of stuff the second thing is when",
    "start": "3357640",
    "end": "3363130"
  },
  {
    "text": "you do this and using API gateway your certifications your SSL so it can be",
    "start": "3363130",
    "end": "3368410"
  },
  {
    "text": "offloaded we talked about this earlier about having a central point of management and this is one of those things that come in really handy with",
    "start": "3368410",
    "end": "3375040"
  },
  {
    "text": "being able to offload your SSL certs to your API gateway you don't have to in let's say you have a you know 300 you",
    "start": "3375040",
    "end": "3381880"
  },
  {
    "text": "know easy two inches behind or whatever you don't have to install those at the server level you don't have to install",
    "start": "3381880",
    "end": "3387340"
  },
  {
    "text": "them into the ec2 instances which is kind of I had to used to do back in the day before we offload her to load",
    "start": "3387340",
    "end": "3392500"
  },
  {
    "text": "balancers and things like that this the third thing and really kind of one of the primary things is path or base path",
    "start": "3392500",
    "end": "3400570"
  },
  {
    "text": "mapping okay and what this allows is you could support multiple domains through this so if I had if I didn't have this",
    "start": "3400570",
    "end": "3407800"
  },
  {
    "text": "API - one at the end then I can only route to one place and that's wherever my domain comm went to but with the base",
    "start": "3407800",
    "end": "3414460"
  },
  {
    "text": "path mapping I can say API one will always go here API two will always go",
    "start": "3414460",
    "end": "3420670"
  },
  {
    "text": "here maybe I three so I can put multiple api's behind one one custom domain so a",
    "start": "3420670",
    "end": "3427690"
  },
  {
    "text": "lot of flexibility there one at one of the you know this is you know very",
    "start": "3427690",
    "end": "3433570"
  },
  {
    "text": "actively used part of the service yeah definitely and also one more scenario is that we also see customers use custom",
    "start": "3433570",
    "end": "3440350"
  },
  {
    "text": "domains as a level of abstraction so because you know the URL that eric has",
    "start": "3440350",
    "end": "3445750"
  },
  {
    "text": "crossed out there there's actually a 22-4 five part is actually a quid you were creating new API is that actually",
    "start": "3445750",
    "end": "3451720"
  },
  {
    "text": "changes dynamically right yeah every new API is a different address so if you put a custom domain in front of it that's a",
    "start": "3451720",
    "end": "3457900"
  },
  {
    "text": "static I just that you know you control and you know to call your clients again yeah exactly a good point good point",
    "start": "3457900",
    "end": "3463359"
  },
  {
    "text": "okay so the next thing and this is the last feature we're gonna talk about here",
    "start": "3463359",
    "end": "3468520"
  },
  {
    "start": "3466000",
    "end": "3466000"
  },
  {
    "text": "is the export and import through swagger and open API three now you gotta clear",
    "start": "3468520",
    "end": "3474520"
  },
  {
    "text": "this up for me okay swagger and open API are they the same thing are they not there they're",
    "start": "3474520",
    "end": "3481510"
  },
  {
    "text": "typically the same thing now right so this marker was the company that need to find that first definition and when they",
    "start": "3481510",
    "end": "3488349"
  },
  {
    "text": "really swagger to they actually donated that to the open API consortium and then when we when they release the open API",
    "start": "3488349",
    "end": "3495490"
  },
  {
    "text": "three spec they just named that open API because it's donated to them so what you typically hear these two terms Swaggart",
    "start": "3495490",
    "end": "3503320"
  },
  {
    "text": "typically still refers to the v2 version open API is the v3 version okay open API",
    "start": "3503320",
    "end": "3509589"
  },
  {
    "text": "v2 and v3 you know they're pretty similar yeah not similar I mean sorry I'm in swagger okay oh okay all right",
    "start": "3509589",
    "end": "3517859"
  },
  {
    "text": "thanks for clearing that because that's kind of confusing yeah okay so so swagger is open API three - - or up to -",
    "start": "3517859",
    "end": "3526510"
  },
  {
    "text": "yes okay okay good to know there you go so cool thing about this is with with API gateway I can export to",
    "start": "3526510",
    "end": "3533440"
  },
  {
    "text": "open API 3 I can open I can export to swagger open API - yeah and I can import",
    "start": "3533440",
    "end": "3539320"
  },
  {
    "text": "from both of those I can also use it as a conversion tool I can import swagger and export open API 3 so there's that",
    "start": "3539320",
    "end": "3546490"
  },
  {
    "text": "kind of power there and then I can add in post my extensions API gateway",
    "start": "3546490",
    "end": "3551650"
  },
  {
    "text": "extensions J and then it can be done of JSON and yamo and so so they get a lot",
    "start": "3551650",
    "end": "3557980"
  },
  {
    "text": "of powerful in your power and translation there so so we're gonna go ahead and I know that answered questions",
    "start": "3557980",
    "end": "3564280"
  },
  {
    "text": "there and we're out of time so I'm gonna tell you about our next series or next session coming up is on April 23rd it's",
    "start": "3564280",
    "end": "3570550"
  },
  {
    "text": "at 1:00 p.m. same time same place it's called no rest for the weary and this is where we get hands on I really encourage you to come",
    "start": "3570550",
    "end": "3577420"
  },
  {
    "text": "check this out George Mao is gonna be joining me he's at one of our Senior Service Specialists solutions architect and we're gonna",
    "start": "3577420",
    "end": "3583790"
  },
  {
    "text": "start building an application to show how these work again I would encourage",
    "start": "3583790",
    "end": "3589160"
  },
  {
    "text": "you to watch the building happy little api's it will bring you peace it will bring harmony and all those things and",
    "start": "3589160",
    "end": "3595970"
  },
  {
    "text": "with that guys we really appreciate your time twitch we appreciate you having us thank",
    "start": "3595970",
    "end": "3601700"
  },
  {
    "text": "you thank you",
    "start": "3601700",
    "end": "3604390"
  }
]