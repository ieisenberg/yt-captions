[
  {
    "text": "all right hello everyone my name is Shawn Gus Kenworthy I'm a senior manager",
    "start": "30",
    "end": "5400"
  },
  {
    "text": "of engineering in the Amazon free artist team we just announced our product",
    "start": "5400",
    "end": "10559"
  },
  {
    "text": "yesterday and I'm really excited to be here IOT 403 session talking about AWS green",
    "start": "10559",
    "end": "16529"
  },
  {
    "text": "grass and Amazon free artists and how they can work together how to get them secured connected together and working",
    "start": "16529",
    "end": "23490"
  },
  {
    "text": "with AWS IOT to provide a full edge solution for IOT as a manager they",
    "start": "23490",
    "end": "30029"
  },
  {
    "text": "wouldn't let me do the technical stuff so I'm just supposed to do the intro and get out here so I'll try to keep it",
    "start": "30029",
    "end": "35219"
  },
  {
    "text": "short but before I sort of walk through our agenda and so on quick show of hands",
    "start": "35219",
    "end": "41160"
  },
  {
    "text": "how many of you have used AWS IOT here all right great",
    "start": "41160",
    "end": "47399"
  },
  {
    "text": "400 session a lot of your users how many of you have tried green grass all right",
    "start": "47399",
    "end": "53520"
  },
  {
    "text": "also good audience so that's great and how many of you have done embedded",
    "start": "53520",
    "end": "59719"
  },
  {
    "text": "microcontroller development you know either using free artists excellent all right we're speaking to a great crowd",
    "start": "59719",
    "end": "66540"
  },
  {
    "text": "here this hopefully will be very relevant for you guys so I'm really",
    "start": "66540",
    "end": "71880"
  },
  {
    "text": "excited because we're gonna join Dan and Jimmy here we're gonna walk through a",
    "start": "71880",
    "end": "77640"
  },
  {
    "text": "little bit of context I'll speed through it since all of you are familiar with it and then we'll walk through a good",
    "start": "77640",
    "end": "83460"
  },
  {
    "text": "scenario about how do we make green grass free our toss and a Dobler society all work together to achieve a",
    "start": "83460",
    "end": "88829"
  },
  {
    "text": "real-world example so our agenda today we'll do an introduction to a double is",
    "start": "88829",
    "end": "95490"
  },
  {
    "text": "green grass and Amazon free artists for some of you who may not be as familiar we'll talk about a scenario you know how",
    "start": "95490",
    "end": "101759"
  },
  {
    "text": "do you actually get IOT in the real world what's an example of how it can",
    "start": "101759",
    "end": "106860"
  },
  {
    "text": "actually add value to people's lives and then we're going to talk about making it work I'll hand it over to Jimmy and Dan",
    "start": "106860",
    "end": "112500"
  },
  {
    "text": "who'll join us where they'll do a demo and then we'll open up the floor at the end for Q&A",
    "start": "112500",
    "end": "119000"
  },
  {
    "text": "all right so when we think about IOT we really think about it and our",
    "start": "119000",
    "end": "125130"
  },
  {
    "text": "organization as three key pieces three pillars of IOT the things themselves the",
    "start": "125130",
    "end": "132990"
  },
  {
    "text": "devices that sense an act this is where the digital needs the physical world",
    "start": "132990",
    "end": "138180"
  },
  {
    "text": "this is it could be a home it could be a factory floor it could be a hospital and",
    "start": "138180",
    "end": "143310"
  },
  {
    "text": "in all of these cases is where IOT is being deployed we look at the cloud as not only storage and compute which all",
    "start": "143310",
    "end": "151560"
  },
  {
    "text": "of you know it provides but in addition it ends up being a mediator and coordinator between devices between",
    "start": "151560",
    "end": "157740"
  },
  {
    "text": "devices and applications between devices and other services as well but both of",
    "start": "157740",
    "end": "164250"
  },
  {
    "text": "these are insufficient if you can't actually make sense of the data you get from it if you can drive improvements to",
    "start": "164250",
    "end": "170730"
  },
  {
    "text": "the scenarios if you want smart anything you know fill in the common IOT buzzwords of smart form smart medical",
    "start": "170730",
    "end": "177270"
  },
  {
    "text": "instruments anything you want you have to make sense of that data get meaning and intelligence out of it and that's",
    "start": "177270",
    "end": "183120"
  },
  {
    "text": "the last piece of that puzzle so we started two years ago we launched a tubeless IOT and we started with the",
    "start": "183120",
    "end": "191550"
  },
  {
    "text": "cloud we built this some of you may have seen this diagram if you looked at our previous slides and we built a message",
    "start": "191550",
    "end": "198750"
  },
  {
    "text": "gateway we built a message broker a rules engine device shadows and the",
    "start": "198750",
    "end": "203880"
  },
  {
    "text": "purpose of these was to take these embedded devices you know constrained devices whether it's microcontrollers or",
    "start": "203880",
    "end": "209400"
  },
  {
    "text": "PC class devices at the edge and connect them to the cloud and allow them to talk",
    "start": "209400",
    "end": "215640"
  },
  {
    "text": "to other devices allow them to send data to storage just three to dynamodb to",
    "start": "215640",
    "end": "221550"
  },
  {
    "text": "send it to machine learning services to your own custom back-end services all of these and that was the goal so we built",
    "start": "221550",
    "end": "227850"
  },
  {
    "text": "a message broker supporting MQTT a rules engine that integrates with a wide variety of AWS services device shadows",
    "start": "227850",
    "end": "234120"
  },
  {
    "text": "that let you synchronize state even when the device is offline and what we did in",
    "start": "234120",
    "end": "239880"
  },
  {
    "text": "the last two years is we've expanded this offering right yesterday we announced three additional aspects that",
    "start": "239880",
    "end": "247110"
  },
  {
    "text": "we've expanded on the IOT cloud platform device management so the ability to",
    "start": "247110",
    "end": "252330"
  },
  {
    "text": "group devices the ability to manage them the ability to deploy updates to them batch provisioning IOT defender that",
    "start": "252330",
    "end": "260340"
  },
  {
    "text": "will provide you know security analytics device configuration and IOT analytics",
    "start": "260340",
    "end": "266380"
  },
  {
    "text": "itself which is focused on making getting meaning out of that data I bring",
    "start": "266380",
    "end": "272260"
  },
  {
    "text": "this up not because we're gonna focus too much time here but just because I want to talk about the fact that all of these are the things that the edge is",
    "start": "272260",
    "end": "278410"
  },
  {
    "text": "going to connect to and leverage when we talk about what we're going to do it yet so the rest of this talk at all talked",
    "start": "278410",
    "end": "285670"
  },
  {
    "text": "about these benefits already so skip past that and talk about what we're gonna cover it which is the edge this is",
    "start": "285670",
    "end": "291220"
  },
  {
    "text": "where you know we are in at home and a factory floor device is working together",
    "start": "291220",
    "end": "296550"
  },
  {
    "text": "devices communicating with each other with gateways and to the cloud and we're gonna focus on two things here green",
    "start": "296550",
    "end": "303460"
  },
  {
    "text": "grass and three artists and how they can talk to each other so what is green grass most of you seem to be familiar",
    "start": "303460",
    "end": "310570"
  },
  {
    "text": "with it but it is software that runs locally it runs on gateways hubs servers and",
    "start": "310570",
    "end": "319060"
  },
  {
    "text": "other even midsize IOT devices and it gives you local messaging data caching",
    "start": "319060",
    "end": "325110"
  },
  {
    "text": "synchronization and communication the elements of the MQTT broker divide shadows all of that the ability to run",
    "start": "325110",
    "end": "332170"
  },
  {
    "text": "lambda functions all of that comes down locally so that you can coordinate and Inter communicate at the edge and that",
    "start": "332170",
    "end": "340240"
  },
  {
    "text": "really is an extension of AWS and it's the cloud processing power to the edge so you can do what you want it to do at",
    "start": "340240",
    "end": "347800"
  },
  {
    "text": "the edge whether you're connected or not and the features themselves you may have",
    "start": "347800",
    "end": "354250"
  },
  {
    "text": "seen this slide before you know we have local actions lambdas triggers ability to authorize and secure your devices",
    "start": "354250",
    "end": "361920"
  },
  {
    "text": "yesterday we announced green grass with version 1.3 that actually goes from you know four boxes to nine boxes lots of",
    "start": "361920",
    "end": "367780"
  },
  {
    "text": "additional features if you're interested you can go check out the announcements from that along with that we also said",
    "start": "367780",
    "end": "375190"
  },
  {
    "text": "okay we've got the edge but there's a lot of devices at yet the vast majority",
    "start": "375190",
    "end": "381100"
  },
  {
    "text": "of the billions of devices that all the analysts like to talk about in terms of IOT or microcontroller based devices and",
    "start": "381100",
    "end": "387010"
  },
  {
    "text": "we wanted to make it easier for each of you to build these actual IOT devices to",
    "start": "387010",
    "end": "393010"
  },
  {
    "text": "make them secure to connect them to the cloud and it's a very diverse ecosystem it's got a lot of",
    "start": "393010",
    "end": "398540"
  },
  {
    "text": "nuance it's got a lot of hardware specificity to it and that makes it",
    "start": "398540",
    "end": "403790"
  },
  {
    "text": "interesting but it's also makes it very hard because a lot of the work that I ot",
    "start": "403790",
    "end": "409130"
  },
  {
    "text": "developers on devices do is undifferentiated it's about how do I get my stack running how do I get my",
    "start": "409130",
    "end": "415820"
  },
  {
    "text": "Hardware initialized and so on so forth and so we took the popular free arthouse",
    "start": "415820",
    "end": "421880"
  },
  {
    "text": "kernel and built on top of it and announced amazon free artists yesterday amazon free artists is a cloud native",
    "start": "421880",
    "end": "429290"
  },
  {
    "text": "iot focused microcontroller operating system that gives you an embedded real-time kernel plus additional",
    "start": "429290",
    "end": "436550"
  },
  {
    "text": "libraries for connectivity for communication management in Wi-Fi for",
    "start": "436550",
    "end": "442210"
  },
  {
    "text": "security and for over-the-air updates that will be coming soon as well and the",
    "start": "442210",
    "end": "447830"
  },
  {
    "text": "goal here is faster time-to-market minimize that complexity and frees sort",
    "start": "447830",
    "end": "454010"
  },
  {
    "text": "of in the name so had to be free and open source no commitments at all all of the code that we have is available on",
    "start": "454010",
    "end": "461450"
  },
  {
    "text": "our console as well as github and multiple other sources so you can go download our code and use it to quickly",
    "start": "461450",
    "end": "468410"
  },
  {
    "text": "communicate with a green grass node to a SS iot or to any other custom service if",
    "start": "468410",
    "end": "474110"
  },
  {
    "text": "you wish as well it's all open and customizable but we'll also worked with a number of hardware providers so that",
    "start": "474110",
    "end": "480200"
  },
  {
    "text": "you don't have to think about ok I'm using this particular board I have to do",
    "start": "480200",
    "end": "485210"
  },
  {
    "text": "something you know specific to fiddle with it and make connectivity work on it",
    "start": "485210",
    "end": "491030"
  },
  {
    "text": "we're abstracting that out and specifically I want to talk about the fact that we're trying to make sure that",
    "start": "491030",
    "end": "496100"
  },
  {
    "text": "this is as modular as we can and this is something that is not always easy in",
    "start": "496100",
    "end": "502100"
  },
  {
    "text": "embedded systems I'm trying to be very specific about saying independent of the",
    "start": "502100",
    "end": "507170"
  },
  {
    "text": "capabilities that each board has when you're writing your application you can write it in a standard way in a portable",
    "start": "507170",
    "end": "513349"
  },
  {
    "text": "way and use the libraries that we have so we're working with you know a wide variety of hardware manufacturers",
    "start": "513349",
    "end": "518840"
  },
  {
    "text": "microcontroller manufacturers to get these standardized so with this what I",
    "start": "518840",
    "end": "525470"
  },
  {
    "text": "want to talk about is ok we sort of complete our edge software that you can",
    "start": "525470",
    "end": "531680"
  },
  {
    "text": "use to build applications how does it all come together so we'll talk about a scenario with some you know 1980s graphics about",
    "start": "531680",
    "end": "538910"
  },
  {
    "text": "hospitals and let's assume that we've got a doctor and a nurse and that's you",
    "start": "538910",
    "end": "545090"
  },
  {
    "text": "know me going green because I'm sick if I'm in there and we want to get you know",
    "start": "545090",
    "end": "550250"
  },
  {
    "text": "a heart pressure monitor that's an IOT device maybe a temperature monitors an IOT device we want to use that we want",
    "start": "550250",
    "end": "555830"
  },
  {
    "text": "to use the data that is generated from that patient and multiple other patients to do something useful to enhance the",
    "start": "555830",
    "end": "562700"
  },
  {
    "text": "experience and so we would want to analyze that data we want to pre-process it we want to be able to do triggers off",
    "start": "562700",
    "end": "569720"
  },
  {
    "text": "of that and maybe send notifications to the doctor we want the nurse to be able to add additional devices and have them",
    "start": "569720",
    "end": "576320"
  },
  {
    "text": "you know start operating instantly in order to do that we're going to do is",
    "start": "576320",
    "end": "581840"
  },
  {
    "text": "make the people disappear and talk about the devices themselves how do we want to set this up where you've got multiple",
    "start": "581840",
    "end": "588140"
  },
  {
    "text": "IOT devices at the edge and how do they communicate with either to each other or",
    "start": "588140",
    "end": "594290"
  },
  {
    "text": "to aggregation in the form of a gateway or to the cloud to do useful things so",
    "start": "594290",
    "end": "600010"
  },
  {
    "text": "imagine the hospital admin set cepa's own for each of the floors that we have",
    "start": "600010",
    "end": "605150"
  },
  {
    "text": "and uses a green grass court that is running as his own controller right",
    "start": "605150",
    "end": "610840"
  },
  {
    "text": "imagine the hospital I mean can also now use a SS IO T services and the green",
    "start": "610840",
    "end": "618500"
  },
  {
    "text": "grass services to actually connect them as well let's say Amazon SNS because you could use it to send text messages for",
    "start": "618500",
    "end": "624800"
  },
  {
    "text": "example to the doctor or page them maybe a bunch of other services in its place and you want to combine all of these and",
    "start": "624800",
    "end": "630950"
  },
  {
    "text": "say okay I want to make something useful that's an edge solution that uses some of the cloud but also has a lot of",
    "start": "630950",
    "end": "636770"
  },
  {
    "text": "functionality that works locally and so the rest of this session what we're",
    "start": "636770",
    "end": "642500"
  },
  {
    "text": "gonna have Jimmy and Dan walked through is how do you make a scenario like this happen and you can sort of extrapolate",
    "start": "642500",
    "end": "648800"
  },
  {
    "text": "from this scenario say need not be a hospital floor it could be a factory floor it could be a home it could be any",
    "start": "648800",
    "end": "654620"
  },
  {
    "text": "number of places and the topology is usually fairly similar you've got you know really low-power devices you've got",
    "start": "654620",
    "end": "660200"
  },
  {
    "text": "some mid class devices they're communicating to each other they're communicating to the cloud and there are certain things that",
    "start": "660200",
    "end": "665670"
  },
  {
    "text": "you want to decide locally with lambda functions and certain things in the cloud so what we're going to do here is",
    "start": "665670",
    "end": "671660"
  },
  {
    "text": "talk about the first thing you want the administrator to be able to set up",
    "start": "671660",
    "end": "678120"
  },
  {
    "text": "Greengrass score establish communication between the Greengrass score enable us IOT how does that happen how does the",
    "start": "678120",
    "end": "684930"
  },
  {
    "text": "authentication happen how does the authorization happen next you want the administrator to be able to set up these",
    "start": "684930",
    "end": "691230"
  },
  {
    "text": "devices to be part of that Greengrass group they could provision the devices",
    "start": "691230",
    "end": "696450"
  },
  {
    "text": "themselves if the devices have Wi-Fi capability and are able to connect to",
    "start": "696450",
    "end": "701640"
  },
  {
    "text": "the cloud they could reach out and call our Greengrass service and discover the",
    "start": "701640",
    "end": "707970"
  },
  {
    "text": "Greengrass nodes that are in the local environment based on their group information as well as how to connect to",
    "start": "707970",
    "end": "713580"
  },
  {
    "text": "them how to authenticate with them and then that allows these free Artos",
    "start": "713580",
    "end": "719220"
  },
  {
    "text": "devices to actually connect to Greengrass and establish a trusted relationship send that message a message",
    "start": "719220",
    "end": "726150"
  },
  {
    "text": "and have Greengrass be able to send it to other devices to aggregate it or to even send it to the cloud and lastly you",
    "start": "726150",
    "end": "733260"
  },
  {
    "text": "want to take some action right in this case let's say there's a lambda function running on the green grass itself on the core and you want it to be able to send",
    "start": "733260",
    "end": "741750"
  },
  {
    "text": "a message to SNS if my heart rate goes up too much that requires again a",
    "start": "741750",
    "end": "747810"
  },
  {
    "text": "different set of controls so that you",
    "start": "747810",
    "end": "752970"
  },
  {
    "text": "want to make sure every one of these the key here is its secure and only the",
    "start": "752970",
    "end": "758130"
  },
  {
    "text": "people who are authorized to make these connections the devices that are authorized to make these connections are able to do so and that's what we're",
    "start": "758130",
    "end": "764400"
  },
  {
    "text": "gonna walk through we're gonna walk through these five arrows here that I talked about and we're gonna walk",
    "start": "764400",
    "end": "769500"
  },
  {
    "text": "through how we can make those happen in pretty good detail thank you all and for",
    "start": "769500",
    "end": "774840"
  },
  {
    "text": "the real stuff I'll hand it over to Jimmy and Dan thanks Jimmy [Applause]",
    "start": "774840",
    "end": "785649"
  },
  {
    "text": "so that is gonna help me with the some real-time command execution as I speak",
    "start": "785649",
    "end": "791600"
  },
  {
    "text": "to it so you guys can see it in action welcome everyone my name is Jimmy Shaw",
    "start": "791600",
    "end": "796819"
  },
  {
    "text": "I am engineering manager on into the green grass team working very closely with champ thanks Shawn for creating this",
    "start": "796819",
    "end": "802999"
  },
  {
    "text": "complicated slide took us a very long time put it together but hopefully the context would really help as we navigate",
    "start": "802999",
    "end": "809449"
  },
  {
    "text": "you guys through similar scenarios you guys might have that you want to set up in your scenario you know typically",
    "start": "809449",
    "end": "816139"
  },
  {
    "text": "connect the green grass or on the edge do the IOT setup how it works with cloud",
    "start": "816139",
    "end": "821600"
  },
  {
    "text": "and then how do you set up green grass core to set up the edge operations before I dive deep into this I want to",
    "start": "821600",
    "end": "829040"
  },
  {
    "text": "tell you guys that we have refreshed AWS green grass documentation so how many",
    "start": "829040",
    "end": "834529"
  },
  {
    "text": "guys here have tried to use green grass before all right a couple of you guys so",
    "start": "834529",
    "end": "841040"
  },
  {
    "text": "please feel free to go back to our documentation portal we have tried to improve our usability of green grass a",
    "start": "841040",
    "end": "846860"
  },
  {
    "text": "lot so getting started with gringa should be much simpler and we welcome your feedback and I'm gonna keep this",
    "start": "846860",
    "end": "856220"
  },
  {
    "text": "off we're talking about cloud operations what I come I'm gonna cover here is the moment you get during rush software",
    "start": "856220",
    "end": "862669"
  },
  {
    "text": "downloaded how do you set green grass or device on your premises to connect",
    "start": "862669",
    "end": "869269"
  },
  {
    "text": "securely to the cloud and then how do you provision green grass or to operate",
    "start": "869269",
    "end": "874699"
  },
  {
    "text": "locally with local devices such as Amazon free or das devices which might be operating as the blood pressure",
    "start": "874699",
    "end": "880910"
  },
  {
    "text": "monitor in our you know scenario that we talked about before I talk about the",
    "start": "880910",
    "end": "886129"
  },
  {
    "text": "actual steps I want you guys to have a mental model of one time setup and runtime setup the one time setup is",
    "start": "886129",
    "end": "893989"
  },
  {
    "text": "something that you have to do to set things up one time and then after that you don't have to repeat it as opposed",
    "start": "893989",
    "end": "900769"
  },
  {
    "text": "to the runtime setup that needs to happen every time you deploy a new group and you have to redo it it's important",
    "start": "900769",
    "end": "906289"
  },
  {
    "text": "as I walk along I'm gonna call it out so that you know the intent of this session is to demystify some of the complicated",
    "start": "906289",
    "end": "913249"
  },
  {
    "text": "security aspects of green grass so hopefully you guys can walk out of this room feeling more confident about",
    "start": "913249",
    "end": "918560"
  },
  {
    "text": "setting this up securely and how do you discover the green grass core and how do you connect to it locally and set up all",
    "start": "918560",
    "end": "923660"
  },
  {
    "text": "your edge operations so let's get started so the first thing you download",
    "start": "923660",
    "end": "929120"
  },
  {
    "text": "your bringas software you open it up go to green grass config a folder there is",
    "start": "929120",
    "end": "934490"
  },
  {
    "text": "a file called config not Jason in that file there are two endpoints you have to configure one is to point green grass or",
    "start": "934490",
    "end": "941809"
  },
  {
    "text": "to a SS iot-cloud service another one is to point green grass creative this green grass flower service",
    "start": "941809",
    "end": "948370"
  },
  {
    "text": "once you set this up save it the next step is for you to configure the credentials for",
    "start": "948370",
    "end": "954620"
  },
  {
    "text": "Ringwraiths core now this is a one-time setup that you have to do so you will go",
    "start": "954620",
    "end": "959870"
  },
  {
    "text": "to IOT console create a certificate create a policy make sure you provide",
    "start": "959870",
    "end": "965059"
  },
  {
    "text": "adequate permissions for IOT and green grass in the demo purpose and a schema start but we recommend you scope it down to the operations that you need activate",
    "start": "965059",
    "end": "973249"
  },
  {
    "text": "the cert sometimes I forget to activate the surgeon it doesn't work so make sure you activate the cert download the cert",
    "start": "973249",
    "end": "979430"
  },
  {
    "text": "provision una green grass core download root C or a SS IO T such a semantic",
    "start": "979430",
    "end": "984670"
  },
  {
    "text": "provision on your green grass core and provide the path to these two files in configure Jason and save it at this",
    "start": "984670",
    "end": "992089"
  },
  {
    "text": "point you can start doing the stamen and if everything goes well it should connect to the AWS IOT and at this point",
    "start": "992089",
    "end": "1000129"
  },
  {
    "text": "it is listening to notifications such as group deployment so at this point you",
    "start": "1000129",
    "end": "1005680"
  },
  {
    "text": "are ready to do group deploy except there is one more thing that needs to happen so for group deployment to work",
    "start": "1005680",
    "end": "1012660"
  },
  {
    "text": "what is the group deployment so green grass group deployment means a customer",
    "start": "1012660",
    "end": "1018819"
  },
  {
    "text": "is trying to deploy AWS lambda and EWS IOT devices to local on-premise on the",
    "start": "1018819",
    "end": "1025390"
  },
  {
    "text": "edge on green grass core for that green grass cloud service needs access to",
    "start": "1025390",
    "end": "1031149"
  },
  {
    "text": "customers lambda and iot things so for that one time for your AWS account we",
    "start": "1031149",
    "end": "1039490"
  },
  {
    "text": "need you to set up I am role and we need you to associate that role with green grass service trusts bring",
    "start": "1039490",
    "end": "1047380"
  },
  {
    "text": "grass service to assume that role so on your behalf we can access your lamda IOT things and deploy it down on premises at",
    "start": "1047380",
    "end": "1056230"
  },
  {
    "text": "this point I'm gonna switch to red as green so we can see it in action so here",
    "start": "1056230",
    "end": "1062380"
  },
  {
    "text": "we are on AWS console we're gonna create a brand new role trust green grass this",
    "start": "1062380",
    "end": "1068950"
  },
  {
    "text": "provider this provides us permissions to assume this role for your convenience we",
    "start": "1068950",
    "end": "1074529"
  },
  {
    "text": "have managed created to manage policy and manage policy is a policy that's managed by us so you don't have to",
    "start": "1074529",
    "end": "1080019"
  },
  {
    "text": "specify what permissions are needed for group deployment so you select the green grass manage policy review it give it a",
    "start": "1080019",
    "end": "1086679"
  },
  {
    "text": "name we cannot call it demo service road for the demo purpose created I'm gonna",
    "start": "1086679",
    "end": "1093519"
  },
  {
    "text": "go back to the console everything select this arm and associate this role to your",
    "start": "1093519",
    "end": "1101289"
  },
  {
    "text": "county so next time you do a group deployment you do one group deployment",
    "start": "1101289",
    "end": "1106539"
  },
  {
    "text": "100 group deployments it's a one-time setup every time this role provides us the permissions we need to deploy Ramdev",
    "start": "1106539",
    "end": "1113529"
  },
  {
    "text": "deploy iot devices down to big enough score alright coming back to the slide",
    "start": "1113529",
    "end": "1120279"
  },
  {
    "text": "now you deployed your lambda to the local green grass coal device now is the",
    "start": "1120279",
    "end": "1126730"
  },
  {
    "text": "time to run it so let's say you set up some subscriptions that in Vaasa lambda in the example of hospital let's say an",
    "start": "1126730",
    "end": "1134049"
  },
  {
    "text": "anomaly is detected and your lambda wants to send SMS service to doctor using m is on SNS service",
    "start": "1134049",
    "end": "1141170"
  },
  {
    "text": "typically to do that you need AWS credentials now we don't want you guys to permanently store AWS credentials on",
    "start": "1141170",
    "end": "1149480"
  },
  {
    "text": "your green grass core device assume you have thousands of devices and that's going to be a maintenance nightmare also",
    "start": "1149480",
    "end": "1156200"
  },
  {
    "text": "it's not a good security practice so we have created another epi for you where",
    "start": "1156200",
    "end": "1161960"
  },
  {
    "text": "you can create yet another I am role scope in this particular case scope down",
    "start": "1161960",
    "end": "1167060"
  },
  {
    "text": "the permissions to operations that your lambda needs to perform so in our example we just want to talk to ms on",
    "start": "1167060",
    "end": "1173030"
  },
  {
    "text": "SNS so we will create an IM role which is going to have access for Amazon SNS",
    "start": "1173030",
    "end": "1178280"
  },
  {
    "text": "service and now you can associate that role to that group so now you deploy as many lambdas you want to that group it",
    "start": "1178280",
    "end": "1184940"
  },
  {
    "text": "will only have permissions to access em as an SNS service the good thing about this is this is also a one-time",
    "start": "1184940",
    "end": "1191060"
  },
  {
    "text": "configuration per group which means that once you do this after that no matter how many times the lambda is invoked",
    "start": "1191060",
    "end": "1197680"
  },
  {
    "text": "automatically the credentials are exchanged and we assume that role to access a SS service for you so at this",
    "start": "1197680",
    "end": "1204860"
  },
  {
    "text": "point we're gonna switch back to the red screen and we can I show you how to 3 attach an existing I am role to your",
    "start": "1204860",
    "end": "1211940"
  },
  {
    "text": "group ID so you could do a double your screen grass associate role to group you",
    "start": "1211940",
    "end": "1217190"
  },
  {
    "text": "provide the group ID provides a roller and there you go it is associated with this after that if the lam racing book",
    "start": "1217190",
    "end": "1222800"
  },
  {
    "text": "is going to assume this role to access MS on SNS service ok so what we reviewed",
    "start": "1222800",
    "end": "1228470"
  },
  {
    "text": "so far to recap we talked about how you get green grass offer you download it configure it to connect to your Amazon",
    "start": "1228470",
    "end": "1234860"
  },
  {
    "text": "AWS IOT AWS green grass service and then you authorize green grass service to",
    "start": "1234860",
    "end": "1240770"
  },
  {
    "text": "deploy on your behalf and you authorize lambda to talk to whatever M is on AWS",
    "start": "1240770",
    "end": "1245900"
  },
  {
    "text": "operations that lambda needs to perform so that's between green grass core and cloud now I'm gonna switch the gears and",
    "start": "1245900",
    "end": "1252470"
  },
  {
    "text": "I'm going to talk about dive deep into edge operations so on the edge green",
    "start": "1252470",
    "end": "1258050"
  },
  {
    "text": "grass core needs to create a server certificate the server certificate is",
    "start": "1258050",
    "end": "1263150"
  },
  {
    "text": "the certificate that green grass core presents to local devices such as the devices such as blood pressure monitors",
    "start": "1263150",
    "end": "1269300"
  },
  {
    "text": "running three orders now when a group is",
    "start": "1269300",
    "end": "1274710"
  },
  {
    "text": "deployed successfully deployed greenwash service on the cloud automatically",
    "start": "1274710",
    "end": "1280019"
  },
  {
    "text": "creates a unique root CA on your behalf now this is important if you think about",
    "start": "1280019",
    "end": "1286110"
  },
  {
    "text": "lot of servers out there they use third-party hootsie Symantec Verisign Google in this case we have taken",
    "start": "1286110",
    "end": "1294000"
  },
  {
    "text": "security at the next level we create a unique root CA per group and in the best practices slide that's coming up later",
    "start": "1294000",
    "end": "1300360"
  },
  {
    "text": "I'm going to talk about why that is so more secure and that puts you in control when you have thousands of brings us",
    "start": "1300360",
    "end": "1305789"
  },
  {
    "text": "core devices to control this actually comes in really handy once that Lucy is",
    "start": "1305789",
    "end": "1311610"
  },
  {
    "text": "created Greengrass core automatically creates a server certificate sends it to",
    "start": "1311610",
    "end": "1319440"
  },
  {
    "text": "the cloud get it signed gets back a signed certificate provisions on the on",
    "start": "1319440",
    "end": "1324659"
  },
  {
    "text": "the device and keep in mind guys you de you you don't have to physically be there to do this the what we talked",
    "start": "1324659",
    "end": "1332909"
  },
  {
    "text": "about in the in the previous session about connection to cloud one-time static is done all this is managed for so all the pain of configuring rimless",
    "start": "1332909",
    "end": "1340169"
  },
  {
    "text": "course certificate getting server certificates signed is all taken coming away from you and be manage it for you",
    "start": "1340169",
    "end": "1346409"
  },
  {
    "text": "not only that we actually give you some knobs to do for your particular use case",
    "start": "1346409",
    "end": "1352350"
  },
  {
    "text": "we let you configure the validity of this certificate anywhere from 7 days to 30 days now we do recommend to keep it",
    "start": "1352350",
    "end": "1359309"
  },
  {
    "text": "as small as possible so that your server certificate is rotated quite often it's the best security policy that we advise",
    "start": "1359309",
    "end": "1366779"
  },
  {
    "text": "in the rare event where your use case demands more than 30 days you can talk to us but we expect we do recommend that",
    "start": "1366779",
    "end": "1374309"
  },
  {
    "text": "you don't go beyond 30 days you see the red button there which is rotate CA that",
    "start": "1374309",
    "end": "1381000"
  },
  {
    "text": "button is also as I was talking about earlier we have a unique root CA per",
    "start": "1381000",
    "end": "1386850"
  },
  {
    "text": "group and in the event that a server certificate which was signed by a previous root CA happens to be",
    "start": "1386850",
    "end": "1393389"
  },
  {
    "text": "compromised you guys are in total control we provide a rotate CA API that",
    "start": "1393389",
    "end": "1398970"
  },
  {
    "text": "you can use to row to recreate a new roots certificate and autumn automatically",
    "start": "1398970",
    "end": "1405130"
  },
  {
    "text": "that invalidates the pre the previously created server certificate so we can I switch back to Redis screen who's gonna",
    "start": "1405130",
    "end": "1410800"
  },
  {
    "text": "show you in real time how we can go back and recreate the root CA so with this",
    "start": "1410800",
    "end": "1417430"
  },
  {
    "text": "particular group we already had created a certificate authority and when you",
    "start": "1417430",
    "end": "1422740"
  },
  {
    "text": "asked it to create the certificate authority one more time at this point what you see here is is creating a new",
    "start": "1422740",
    "end": "1428530"
  },
  {
    "text": "roots here for you and that invalidates the previous server certificates coming",
    "start": "1428530",
    "end": "1433900"
  },
  {
    "text": "back to the presentation so great Ringwraiths core server certificate is",
    "start": "1433900",
    "end": "1439600"
  },
  {
    "text": "there you have the root CA it's rotated it's all secure now you need to advertise yourself now I have a gateway",
    "start": "1439600",
    "end": "1446440"
  },
  {
    "text": "set up in the hospital that gateways controlling one zone as a patient walks in they can connect to this gateway and",
    "start": "1446440",
    "end": "1453130"
  },
  {
    "text": "take advantage of the lambda that's running on it that can send SMS to doctor but how do I make sure that these",
    "start": "1453130",
    "end": "1459330"
  },
  {
    "text": "gateway is advertised its discoverable by a blood monitor the blood pressure monitor",
    "start": "1459330",
    "end": "1464860"
  },
  {
    "text": "which is running Amazon free are cause that's where discoverability comes into picture you have to the Gateway has to",
    "start": "1464860",
    "end": "1471460"
  },
  {
    "text": "upload its connectivity information connectivity information is IP address in port or DNS Li and it also has to",
    "start": "1471460",
    "end": "1478510"
  },
  {
    "text": "upload a root CA for that particular group so that when the Gateway represents servicer to the IOT device it",
    "start": "1478510",
    "end": "1484930"
  },
  {
    "text": "can validate the certificate by by checking the signature with the root CA",
    "start": "1484930",
    "end": "1490440"
  },
  {
    "text": "we provide two options for uploading the connectivity information one is automatic so if you select automating",
    "start": "1490440",
    "end": "1498010"
  },
  {
    "text": "option on the console or in the configuration of deployment in the simple use gateway or your Ringwraiths",
    "start": "1498010",
    "end": "1504880"
  },
  {
    "text": "code is not behind an ad or your ipod is not changing quite often just select",
    "start": "1504880",
    "end": "1510040"
  },
  {
    "text": "automatic and whatever we get my IP address show we upload one or many IP",
    "start": "1510040",
    "end": "1515470"
  },
  {
    "text": "addresses to the cloud if you do have a complicated network topology you have a green grass core behind an ad or your IP",
    "start": "1515470",
    "end": "1523060"
  },
  {
    "text": "address is changing quite often or our recommended option which is if you have a capable to set up a local DNS server",
    "start": "1523060",
    "end": "1528750"
  },
  {
    "text": "you can manually override the automatic detection of IP and begin a switch back to the desk ring",
    "start": "1528750",
    "end": "1535150"
  },
  {
    "text": "who's gonna actually show you how you can create adjacent file put all the connectivity information in it be",
    "start": "1535150",
    "end": "1542050"
  },
  {
    "text": "whether it is a local DNS server or base an IP address and how do you upload that connectivity to the cloud is in the CLI",
    "start": "1542050",
    "end": "1548460"
  },
  {
    "text": "so here's the connectivity information JSON the read has created as you can see we can have multiple entries here the",
    "start": "1548460",
    "end": "1555340"
  },
  {
    "text": "the point that I would like you to note here is this metadata you can see it's a",
    "start": "1555340",
    "end": "1560980"
  },
  {
    "text": "string that you can provide it's a very useful field when you have multiple connectivity information I imagine you",
    "start": "1560980",
    "end": "1567610"
  },
  {
    "text": "are operating thousands of local IOT devices running Amazon free artists on a",
    "start": "1567610",
    "end": "1573460"
  },
  {
    "text": "given hospital floor you want to divide up subgroups every room and you want to",
    "start": "1573460",
    "end": "1579370"
  },
  {
    "text": "have multihomed Ringwraiths core that manages that you can put a metadata room one room - and make sure that the group",
    "start": "1579370",
    "end": "1587020"
  },
  {
    "text": "of devices in room one connect using a different IP address and the group of devices in row two so that's the need",
    "start": "1587020",
    "end": "1592480"
  },
  {
    "text": "fields that you have that you can leverage for doing that coming back to the presentation now you either use",
    "start": "1592480",
    "end": "1600550"
  },
  {
    "text": "automatic or manual that read I just showed once you upload this information to the cloud now you can discover",
    "start": "1600550",
    "end": "1607620"
  },
  {
    "text": "existing Ringwraiths old device from an amazon free or toss device so if a",
    "start": "1607620",
    "end": "1612700"
  },
  {
    "text": "patient walked in they put a blood monitor pressure monitor on it let's say the the Amazon three artists abide had",
    "start": "1612700",
    "end": "1620620"
  },
  {
    "text": "internet connectivity and you happen to use one of our Greengrass SDK s C++",
    "start": "1620620",
    "end": "1627880"
  },
  {
    "text": "Python which has inbuilt discovery capability will auto discover it or sometimes we understand you have used",
    "start": "1627880",
    "end": "1634210"
  },
  {
    "text": "cases where you want to use your own stack in AWS we don't try to lock your diet lock you down into our products if",
    "start": "1634210",
    "end": "1640570"
  },
  {
    "text": "you we use open standard MQTT and TLS stack if you bring your own stack and",
    "start": "1640570",
    "end": "1645760"
  },
  {
    "text": "you want to manually configure connectivity and routes the information you can configure the local endpoint",
    "start": "1645760",
    "end": "1651730"
  },
  {
    "text": "yourself how do you get the roots yellow that's one of the cost question that came up to me in a conversation with a",
    "start": "1651730",
    "end": "1657820"
  },
  {
    "text": "customer yesterday so I'm going to show you switching back to radar screen here we provide another API where you can",
    "start": "1657820",
    "end": "1664990"
  },
  {
    "text": "retrieve a root so you can list all the SIA that is associated with your group first and",
    "start": "1664990",
    "end": "1671260"
  },
  {
    "text": "then you can fetch the actual certificate for that but you'll see here this is the public certificate it's",
    "start": "1671260",
    "end": "1677560"
  },
  {
    "text": "gonna be a text file that you see here you can copy this and configure your local stack that you of your choice and",
    "start": "1677560",
    "end": "1683050"
  },
  {
    "text": "once you configure it with it your MQTT and TLS tag connecting to",
    "start": "1683050",
    "end": "1688840"
  },
  {
    "text": "green grass score would be able to validate the certificate using this particular C so going back to",
    "start": "1688840",
    "end": "1694840"
  },
  {
    "text": "presentation once you have discovered green grass score which means you have discovered the IP address of the DNS",
    "start": "1694840",
    "end": "1699940"
  },
  {
    "text": "name and you have discovered the roots here you can go ahead and do MQTT connect and mutual authentication goes",
    "start": "1699940",
    "end": "1706660"
  },
  {
    "text": "through remember when you deploy it I mentioned you're not just deploying",
    "start": "1706660",
    "end": "1712060"
  },
  {
    "text": "lambda2 leading run-scorer you're also deploying IOT device to bring Roscoe what is that need a IOT device is a",
    "start": "1712060",
    "end": "1718390"
  },
  {
    "text": "physical device what does the deployment mean well in this case you're telling Ringwraiths core to trust a certain IOT",
    "start": "1718390",
    "end": "1725650"
  },
  {
    "text": "device should it connect to it so once you had configured your group and deployed an IOT device and now that IOT",
    "start": "1725650",
    "end": "1733210"
  },
  {
    "text": "device is trying to connect to a green grass core it is going to accept the connection so at this point let's have a",
    "start": "1733210",
    "end": "1740620"
  },
  {
    "text": "recap we talked about lot of concepts drinking from the hose I'm going to",
    "start": "1740620",
    "end": "1746260"
  },
  {
    "text": "recap for you guys start on the left side here so start with a original",
    "start": "1746260",
    "end": "1751810"
  },
  {
    "text": "service role is something that you create one time you create a role you provide green grass access to your IOT",
    "start": "1751810",
    "end": "1758620"
  },
  {
    "text": "and lambda so we can deploy it for you B is a client certificate it's an IOT",
    "start": "1758620",
    "end": "1763630"
  },
  {
    "text": "client certificate that you will manually provision for the one time so",
    "start": "1763630",
    "end": "1768880"
  },
  {
    "text": "green grass core can connect to a Lewis green grass and into this IOT C is a",
    "start": "1768880",
    "end": "1773950"
  },
  {
    "text": "client certificate you'll put and local IOT device such as Amazon free or toss device that is also a one-time",
    "start": "1773950",
    "end": "1780070"
  },
  {
    "text": "configuration for the IOT device to connect to a double screen grass and IOT D is a group role this is something you",
    "start": "1780070",
    "end": "1787720"
  },
  {
    "text": "only need if you want your lambda to access AWS services if you don't need that you don't need to",
    "start": "1787720",
    "end": "1793110"
  },
  {
    "text": "to get it but if you do we provide a functionality to configure it so every time the lamda is invoked the eight of",
    "start": "1793110",
    "end": "1798420"
  },
  {
    "text": "these credentials are managed for you and E is a core root CA we understand",
    "start": "1798420",
    "end": "1803490"
  },
  {
    "text": "it's very complicated to manage public key private key regenerated rotated that's why we do it for you all right so",
    "start": "1803490",
    "end": "1811920"
  },
  {
    "text": "I'm gonna conclude my slide hopefully this was useful guys so I'm going to conclude with some best practices at AWS",
    "start": "1811920",
    "end": "1818490"
  },
  {
    "text": "we believe security is a shared responsibility between us and our customers as you can see everything",
    "start": "1818490",
    "end": "1825690"
  },
  {
    "text": "after you connect to cloud we are managing all the security credentials for you however we do give you some",
    "start": "1825690",
    "end": "1831630"
  },
  {
    "text": "configuration options and we want you to be mindful of using the security best practices such as server certificate",
    "start": "1831630",
    "end": "1838110"
  },
  {
    "text": "lifetime we would like you to keep it as short as possible make sure your server creds are rotated very often",
    "start": "1838110",
    "end": "1844100"
  },
  {
    "text": "aw IOT provides you a mechanism to revoke a client cert should you decide that some IOT device such as green grass",
    "start": "1844100",
    "end": "1850770"
  },
  {
    "text": "core is has become wrong you don't want it to connect anymore you can revoke the client cert hard rotate root CA is a",
    "start": "1850770",
    "end": "1858600"
  },
  {
    "text": "unique operation you can do on green grass core because we create routes here which is very unique to your group now",
    "start": "1858600",
    "end": "1867630"
  },
  {
    "text": "keep in mind when you heard rotate your routes here or recreate your routes here it is not effective until all the IOT",
    "start": "1867630",
    "end": "1874290"
  },
  {
    "text": "devices in that group rediscover the new route CA which is why we also recommend from here I have two device discover",
    "start": "1874290",
    "end": "1881190"
  },
  {
    "text": "often whether you are using your open standards OpenStack yourself or using one of our SDKs ya please discover often",
    "start": "1881190",
    "end": "1888059"
  },
  {
    "text": "you see and last is cope down the group policy if you do need to do some a",
    "start": "1888059",
    "end": "1893400"
  },
  {
    "text": "double s operations from your finger screws make sure you allow policy in the policy only operations that you need so",
    "start": "1893400",
    "end": "1899850"
  },
  {
    "text": "if you have one group that talks rate of M is an SNS another group that wants to talk to M is an s3 to upload some files",
    "start": "1899850",
    "end": "1905250"
  },
  {
    "text": "keep those policies separate we believe in Lisp realist principle for security",
    "start": "1905250",
    "end": "1910350"
  },
  {
    "text": "and they'll keep the operations super secure so with that dense coming up here we're",
    "start": "1910350",
    "end": "1915870"
  },
  {
    "text": "gonna do a cool demo a hands down demo of this I'll show you from Amazon FreeRTOS device how to",
    "start": "1915870",
    "end": "1921300"
  },
  {
    "text": "discover gringa score all the concepts I talked about equalizer initiated seed in action thank you",
    "start": "1921300",
    "end": "1927580"
  },
  {
    "text": "[Applause]",
    "start": "1927580",
    "end": "1935669"
  },
  {
    "text": "hi guys my name is Dan Griffin I'm a senior software engineer on the Amazon free artists team I work on software",
    "start": "1939740",
    "end": "1946860"
  },
  {
    "text": "security I contributed to in the Amazon free our toss libraries our secure",
    "start": "1946860",
    "end": "1953700"
  },
  {
    "text": "socket interface our TLS interface as well as our pkcs 11 cryptographic",
    "start": "1953700",
    "end": "1960840"
  },
  {
    "text": "interface which we use for manipulating cryptographic objects like the device",
    "start": "1960840",
    "end": "1966500"
  },
  {
    "text": "private key or private keys as well as the device things certificate which",
    "start": "1966500",
    "end": "1972870"
  },
  {
    "text": "Jimmy just talked a little bit about the the configuration aspect of that and and",
    "start": "1972870",
    "end": "1978360"
  },
  {
    "text": "and with that discussion in mind in shammes part of the presentation kind of setting",
    "start": "1978360",
    "end": "1984780"
  },
  {
    "text": "up this hospital heart sensor scenario and also with what Jimmy and rather just",
    "start": "1984780",
    "end": "1991590"
  },
  {
    "text": "discussed with setting up the mutual device certificate trust between the",
    "start": "1991590",
    "end": "1998910"
  },
  {
    "text": "Greengrass core and the device the heart sensor as well as between the heart",
    "start": "1998910",
    "end": "2004730"
  },
  {
    "text": "sensor and the cloud let's do a demo the",
    "start": "2004730",
    "end": "2010670"
  },
  {
    "text": "demo uses a microcontroller developer board running on Amazon which is running Amazon free arctos it's here hidden",
    "start": "2010670",
    "end": "2017420"
  },
  {
    "text": "behind one of these laptops right here",
    "start": "2017420",
    "end": "2022810"
  },
  {
    "text": "and in order to build and deploy the code to the microcontroller board I'm using actually an open-source IDE which",
    "start": "2022810",
    "end": "2031700"
  },
  {
    "text": "is appropriate for that board provided by the board manufacturer and what I've",
    "start": "2031700",
    "end": "2036710"
  },
  {
    "text": "done is is I downloaded the reference application the sample application for Greengrass discovery from AWS IOT I'll",
    "start": "2036710",
    "end": "2044390"
  },
  {
    "text": "actually show you that at the end of my section here I configured my device with",
    "start": "2044390",
    "end": "2052460"
  },
  {
    "text": "a credential and with the endpoint information for my AWS IOT account I did",
    "start": "2052460",
    "end": "2058520"
  },
  {
    "text": "a full build so you don't have to sit and watch all the code build and then I basically at this point I'm ready to",
    "start": "2058520",
    "end": "2064398"
  },
  {
    "text": "just burn the firmware image onto the device and run it in the debugger so at that point I'm going to switch to this other laptop which probably lock to the",
    "start": "2064399",
    "end": "2076310"
  },
  {
    "text": "meantime apologies for that",
    "start": "2076310",
    "end": "2079419"
  },
  {
    "text": "and I'm gonna make sure that my hot spot is still good to go because I'm using my cellphone to bridge my device yep we're",
    "start": "2082080",
    "end": "2090210"
  },
  {
    "text": "good to go okay and what I'm gonna do is I'm gonna click the debug button in my IDE the",
    "start": "2090210",
    "end": "2097830"
  },
  {
    "text": "device is connected via its JTAG interface over USB to my laptop which is",
    "start": "2097830",
    "end": "2105750"
  },
  {
    "text": "how the IDE is going to write the firmware image to the developer board so",
    "start": "2105750",
    "end": "2112110"
  },
  {
    "text": "what the IDE is doing is typical IDE behavior where it's checking if I've changed any of the files since I since I",
    "start": "2112110",
    "end": "2117690"
  },
  {
    "text": "last built which I have not and then since I'm running in the debugger what",
    "start": "2117690",
    "end": "2122850"
  },
  {
    "text": "it's doing now is it's basically stopping at the first line of user code in my main entry point and so at this",
    "start": "2122850",
    "end": "2131340"
  },
  {
    "text": "point since it hasn't done anything actually interesting yet I'm going to press the big green Go button and what",
    "start": "2131340",
    "end": "2137700"
  },
  {
    "text": "I'm going to show you is as the application runs what I'm expecting it's",
    "start": "2137700",
    "end": "2143820"
  },
  {
    "text": "going to do is it's going to discover a green grass core and it's going to pull",
    "start": "2143820",
    "end": "2150240"
  },
  {
    "text": "out the endpoint information and server certificate that Jimmy showed in the green grass configuration it's going to",
    "start": "2150240",
    "end": "2156720"
  },
  {
    "text": "mutually authenticate to the green grass core and over that mutual that that TLS",
    "start": "2156720",
    "end": "2164310"
  },
  {
    "text": "tunnel it's going to send MQTT traffic and in our kind of simulating the",
    "start": "2164310",
    "end": "2171720"
  },
  {
    "text": "hospital environment the idea is that this is the heart rate sensor on Shawn",
    "start": "2171720",
    "end": "2177090"
  },
  {
    "text": "because he's sick and the heart rate sensor detects that that there's an",
    "start": "2177090",
    "end": "2183330"
  },
  {
    "text": "anomalous measurement and what it does is it starts peppering the doctor on duty with a bunch of text messages which",
    "start": "2183330",
    "end": "2190620"
  },
  {
    "text": "you can see showing up on my phone right there and we're sending five of them just to make sure it's really clear that",
    "start": "2190620",
    "end": "2195810"
  },
  {
    "text": "something is wrong so that's the closest I'm gonna get ever to play a doctor was",
    "start": "2195810",
    "end": "2202530"
  },
  {
    "text": "right there so I time the doctor I got the text messages something's wrong with the patient so anyway and let's switch",
    "start": "2202530",
    "end": "2207660"
  },
  {
    "text": "back to the slides",
    "start": "2207660",
    "end": "2210349"
  },
  {
    "text": "okay great so my hope is that after this",
    "start": "2213000",
    "end": "2221110"
  },
  {
    "text": "presentation having seen the demo run and again I'll show you how to get that far in the next",
    "start": "2221110",
    "end": "2227020"
  },
  {
    "text": "slide after this but what I wanted to what I wanted to show you in this slide since you've just seen the console",
    "start": "2227020",
    "end": "2232540"
  },
  {
    "text": "output from the JTAG interface coming from the developer board as it ran through the application did the",
    "start": "2232540",
    "end": "2238930"
  },
  {
    "text": "discovery did the MQTT the MQTT trigger to lamda on the on the green grass core",
    "start": "2238930",
    "end": "2244480"
  },
  {
    "text": "the lambda sent me my text messages on my cell phone bear that in mind what",
    "start": "2244480",
    "end": "2251200"
  },
  {
    "text": "this slide is showing you is is really just the api flow in the amazon free our",
    "start": "2251200",
    "end": "2256810"
  },
  {
    "text": "toss libraries for doing just that and the point here to me actually is that",
    "start": "2256810",
    "end": "2263650"
  },
  {
    "text": "despite the potential complexity of performing Greengrass discovery and keep in mind this is a microcontroller",
    "start": "2263650",
    "end": "2269790"
  },
  {
    "text": "there's a number of protocols that you just saw get get used tcp/ip TLS very",
    "start": "2269790",
    "end": "2277000"
  },
  {
    "text": "simple HTTP HTTP GET call jason parsing for the green grass discovery document",
    "start": "2277000",
    "end": "2284220"
  },
  {
    "text": "MQTT all the amazon free are toss",
    "start": "2284220",
    "end": "2289420"
  },
  {
    "text": "libraries really take care of that complexity for you and in fact what you see on the left side of the diagram is",
    "start": "2289420",
    "end": "2294550"
  },
  {
    "text": "really the only thing that the you those are the steps that the user application needs to take the the kind of the",
    "start": "2294550",
    "end": "2301260"
  },
  {
    "text": "details on the right side of the diagram are really just the api calls that are being made on your behalf but again i'm",
    "start": "2301260",
    "end": "2307360"
  },
  {
    "text": "including them here because i encourage you to step through the code i really encourage you to check this out download the code run it an ide step through the",
    "start": "2307360",
    "end": "2314890"
  },
  {
    "text": "code see it working the main point on the api call flow on",
    "start": "2314890",
    "end": "2320530"
  },
  {
    "text": "the left-hand side that i think will really help you understand how free artists works in a network aware",
    "start": "2320530",
    "end": "2327100"
  },
  {
    "text": "application is to know that on a typical microcontroller based product when your",
    "start": "2327100",
    "end": "2334330"
  },
  {
    "text": "code reaches the C runtime main entry point odds are your network stack is not",
    "start": "2334330",
    "end": "2339580"
  },
  {
    "text": "yet initialized so you can't just start firing off packets at that point typically",
    "start": "2339580",
    "end": "2344720"
  },
  {
    "text": "and the white freearc toss helps you deal with that potential timing issue is it actually has a built-in callback and",
    "start": "2344720",
    "end": "2351140"
  },
  {
    "text": "that's the callback in this the second box on the left hand side there which is V application IP network event hook so",
    "start": "2351140",
    "end": "2359660"
  },
  {
    "text": "not the world's shortest name but very useful and what that does is it gives",
    "start": "2359660",
    "end": "2364730"
  },
  {
    "text": "you various notification as to say network is up network is down what this application is doing in response to the",
    "start": "2364730",
    "end": "2371570"
  },
  {
    "text": "network is up notification is then calling out to the green grass discovery",
    "start": "2371570",
    "end": "2377359"
  },
  {
    "text": "API that's in the upper right hand corner of the slide here and really",
    "start": "2377359",
    "end": "2382760"
  },
  {
    "text": "although again it's kind of a weird looking API names it's actually pretty self-explanatory the first step is is",
    "start": "2382760",
    "end": "2390430"
  },
  {
    "text": "we're reaching out to your AWS IOT endpoint we are downloading the",
    "start": "2390430",
    "end": "2396710"
  },
  {
    "text": "discovery document that's appropriate for this device we're running through",
    "start": "2396710",
    "end": "2401720"
  },
  {
    "text": "the JSON and we're basically doing it that's what you see here this start get sized and get file and the JSON API",
    "start": "2401720",
    "end": "2407840"
  },
  {
    "text": "there is basically because it's just doing a tokenizer and it pulls out the",
    "start": "2407840",
    "end": "2413359"
  },
  {
    "text": "relevant details here being again the Greengrass endpoint information in our",
    "start": "2413359",
    "end": "2419030"
  },
  {
    "text": "library it could either be an IP address or a dns name or a mix thereof if there are multiple inputs it's basically just",
    "start": "2419030",
    "end": "2426050"
  },
  {
    "text": "the way the application is written right now it's just going to connect to the first one that responds and then finally",
    "start": "2426050",
    "end": "2432109"
  },
  {
    "text": "the bottom left-hand is that once we have that endpoint in that service certificate we call our mqtt API our",
    "start": "2432109",
    "end": "2439820"
  },
  {
    "text": "MQTT API runs as an agent in a parallel task and I'll dig into that in a little",
    "start": "2439820",
    "end": "2445760"
  },
  {
    "text": "more detail in the next slide and is really just doing again creating the",
    "start": "2445760",
    "end": "2451310"
  },
  {
    "text": "agent which starts up the task that runs mqtt basically the MQTT state machine",
    "start": "2451310",
    "end": "2457750"
  },
  {
    "text": "does it connect to the green grass core publishes five messages to the green",
    "start": "2457750",
    "end": "2462770"
  },
  {
    "text": "grass core each of which resulted in a text message to my cell phone does a disconnect and then does a delete which",
    "start": "2462770",
    "end": "2469310"
  },
  {
    "text": "is kind of redundant in this application but we include delete in our San and all of our references more generally we",
    "start": "2469310",
    "end": "2476000"
  },
  {
    "text": "include run down code and all of our reference applications so you can track memory leaks",
    "start": "2476000",
    "end": "2481830"
  },
  {
    "text": "speaking of memory when you're designing a microcontroller based product memory",
    "start": "2482280",
    "end": "2488260"
  },
  {
    "text": "is relatively very expensive so what I wanted to capture in this slide is some",
    "start": "2488260",
    "end": "2493780"
  },
  {
    "text": "rough measurements that I took from the application that I just showed you and since my background is in cryptographic",
    "start": "2493780",
    "end": "2501040"
  },
  {
    "text": "integration the pivot here is on what kind of private key I'm using to",
    "start": "2501040",
    "end": "2507490"
  },
  {
    "text": "authenticate the device did I create in the first two columns did I create an",
    "start": "2507490",
    "end": "2513730"
  },
  {
    "text": "RSA key and then ran the application through using an RSA client key and then in the second two columns columns 3 & 4",
    "start": "2513730",
    "end": "2520930"
  },
  {
    "text": "I used an ECC specifically an ECDSA 256 bit key to authenticate the device in",
    "start": "2520930",
    "end": "2529390"
  },
  {
    "text": "the RSA case it was a 2048-bit key and what you can see is that um the two rows",
    "start": "2529390",
    "end": "2535030"
  },
  {
    "text": "there's an application free artists task which is running all the green grass API",
    "start": "2535030",
    "end": "2540940"
  },
  {
    "text": "stuff you saw on a previous slide and then there's an mqtt task which is",
    "start": "2540940",
    "end": "2547000"
  },
  {
    "text": "running the MQTT state machine as I just mentioned regardless of the key type",
    "start": "2547000",
    "end": "2553390"
  },
  {
    "text": "interestingly the stack footprint of both of those tasks stays about the same",
    "start": "2553390",
    "end": "2558510"
  },
  {
    "text": "you can see it comes out to about 11 kilobytes",
    "start": "2558510",
    "end": "2563670"
  },
  {
    "text": "it's the heap where we see a really interesting difference and of course for",
    "start": "2563670",
    "end": "2568900"
  },
  {
    "text": "many of this will be no surprise but there's actually 5k more heap required to do 2048 bit RSA calculation when",
    "start": "2568900",
    "end": "2578200"
  },
  {
    "text": "you're doing TLS client authentication basically you're doing an RSA signing operation okay versus using that 256 bit",
    "start": "2578200",
    "end": "2584950"
  },
  {
    "text": "ECDSA key used about 5k less than the RSA calculation and that's in we have",
    "start": "2584950",
    "end": "2591370"
  },
  {
    "text": "our TLS library configured to do as much of its operation in heap as possible so",
    "start": "2591370",
    "end": "2598810"
  },
  {
    "text": "two points in addition to that 5k difference for the different crypto system two additional points I want to",
    "start": "2598810",
    "end": "2605170"
  },
  {
    "text": "make here one is that most of our",
    "start": "2605170",
    "end": "2611180"
  },
  {
    "text": "developer boards for free artists v1 actually allow you to offload TLS",
    "start": "2611180",
    "end": "2618050"
  },
  {
    "text": "completely to your Wi-Fi chip that is not what I showed here because I kind of",
    "start": "2618050",
    "end": "2623510"
  },
  {
    "text": "wanted to show that the interesting swing in in in memory footprint based on",
    "start": "2623510",
    "end": "2629090"
  },
  {
    "text": "the configuration that we have in the sample application which in all honesty is intentionally not meant to be lean",
    "start": "2629090",
    "end": "2634100"
  },
  {
    "text": "and mean we want to show you know kind of kind of feature set right but if you",
    "start": "2634100",
    "end": "2639890"
  },
  {
    "text": "were to offload the full TLS stack and cryptographic signing operation to a",
    "start": "2639890",
    "end": "2647390"
  },
  {
    "text": "separate core you'd actually save about 40k of RAM so it's a huge difference a",
    "start": "2647390",
    "end": "2652730"
  },
  {
    "text": "huge difference and then that our previous me to the second point when you consider that when you add up all these",
    "start": "2652730",
    "end": "2658460"
  },
  {
    "text": "numbers together which you know you're getting like between let's say 60 is 70 K actually the operating system is taking a little bit more memory than",
    "start": "2658460",
    "end": "2665030"
  },
  {
    "text": "what's reflected in this table because there's like the schedule or and stuff like that",
    "start": "2665030",
    "end": "2670210"
  },
  {
    "text": "but really for this whole firmware image you're talking about you know a",
    "start": "2670210",
    "end": "2675590"
  },
  {
    "text": "footprint of about 70 K so many kilobytes of RAM try to do all of what",
    "start": "2675590",
    "end": "2681740"
  },
  {
    "text": "we just did in 70 kilobytes on Linux",
    "start": "2681740",
    "end": "2686020"
  },
  {
    "text": "okay how do I get started actually I do want to switch to my we have just enough time",
    "start": "2687460",
    "end": "2693710"
  },
  {
    "text": "I want to switch to my laptop again because I want to show you how to download the code and get started you",
    "start": "2693710",
    "end": "2701270"
  },
  {
    "text": "can see my camera running here here's how you get started sign into the AWS",
    "start": "2701270",
    "end": "2708440"
  },
  {
    "text": "console go to the iot console click on software which is on the bottom left in",
    "start": "2708440",
    "end": "2716869"
  },
  {
    "text": "amazon free arctos device software click configure download and what I am using",
    "start": "2716869",
    "end": "2723530"
  },
  {
    "text": "if you scroll down a little bit is you see these connect to AWS Greengrass for",
    "start": "2723530",
    "end": "2729530"
  },
  {
    "text": "our various launch ports there is a Windows simulator you can do everything I just did without even buying a",
    "start": "2729530",
    "end": "2735950"
  },
  {
    "text": "developer board although I do encourage you to divide two by a developer board but anyway you can run it in a simulator",
    "start": "2735950",
    "end": "2740990"
  },
  {
    "text": "which is just runs in Visual Studio on Windows so that's super super easy I also",
    "start": "2740990",
    "end": "2746289"
  },
  {
    "text": "encourage you again you know you can't really learn about embedded development until you get your hands dirty so buy",
    "start": "2746289",
    "end": "2752109"
  },
  {
    "text": "one of the developer boards from one of our launch partners download the package is a zip file then you're going to open",
    "start": "2752109",
    "end": "2758979"
  },
  {
    "text": "the appropriate IDE for that board you're gonna import the project that's",
    "start": "2758979",
    "end": "2765039"
  },
  {
    "text": "in the demo subfolder and your IDE will recognize it all the IDS you know if you if you tell it look in this folder it'll",
    "start": "2765039",
    "end": "2771279"
  },
  {
    "text": "recursively search through the folder for a project file that recognizes then there's two files you have to look for",
    "start": "2771279",
    "end": "2776920"
  },
  {
    "text": "this is all on the online documentation but anyway there's two files you have to look for one is AWS client credential H",
    "start": "2776920",
    "end": "2785219"
  },
  {
    "text": "you're going to put your AWS IOT broker endpoint here so that Greengrass discovery works or if you do one of the",
    "start": "2785640",
    "end": "2791890"
  },
  {
    "text": "mqtt samples you need to put your thing name here this needs to matches the",
    "start": "2791890",
    "end": "2797049"
  },
  {
    "text": "thing that you create in the IOT registry when you set this up and you",
    "start": "2797049",
    "end": "2802749"
  },
  {
    "text": "need to put your Wi-Fi and network ID here so in my case I used Dan's iPhone because I was doing a hotspot to do this",
    "start": "2802749",
    "end": "2808119"
  },
  {
    "text": "demo your password if applicable we do support open Wi-Fi if you want to live",
    "start": "2808119",
    "end": "2813940"
  },
  {
    "text": "dangerously and speaking of live Dave additionally just because we want to let developers",
    "start": "2813940",
    "end": "2821160"
  },
  {
    "text": "get up and running quick and dirty we actually allow you to paste and",
    "start": "2821160",
    "end": "2826239"
  },
  {
    "text": "statically compiled in base64-encoded client certificate and client private key please do not do that in production",
    "start": "2826239",
    "end": "2833640"
  },
  {
    "text": "but anyway this is just a way so people can get started really fast build the code run it good to go",
    "start": "2833640",
    "end": "2841949"
  },
  {
    "text": "please download one of the projects I just showed give this a shot I hope",
    "start": "2851060",
    "end": "2856280"
  },
  {
    "text": "you've learned a little bit about some of the trade-offs in green grass configuration I hope you've learned a little bit about some of the trade-offs",
    "start": "2856280",
    "end": "2862370"
  },
  {
    "text": "in cryptographic configuration of your device key types offload the cost of a",
    "start": "2862370",
    "end": "2868910"
  },
  {
    "text": "separate part for doing offload versus the cost of extra ram on your main MCU and then likewise you know not only",
    "start": "2868910",
    "end": "2875630"
  },
  {
    "text": "connecting to the green grass core but also taking advantage of all the additional services that you have access to in AWS from just a tiny device by",
    "start": "2875630",
    "end": "2883580"
  },
  {
    "text": "going through that proxy so to speak thank you very much",
    "start": "2883580",
    "end": "2889750"
  },
  {
    "text": "questions please everyone else will join and we're happy to take whatever you got",
    "start": "2894430",
    "end": "2900070"
  },
  {
    "text": "please I'm not running green grass pour",
    "start": "2900070",
    "end": "2905720"
  },
  {
    "text": "on my laptop you sure can you show the Raspberry Pi oh it's only I'm not using a Raspberry",
    "start": "2905720",
    "end": "2911540"
  },
  {
    "text": "Pi either I've actually been in green grass poor in the cloud the question was",
    "start": "2911540",
    "end": "2916910"
  },
  {
    "text": "just for the online audience that recording the question was are we learning the big nose was Dan learning",
    "start": "2916910",
    "end": "2921950"
  },
  {
    "text": "during dusk or on laptop or not no you busted me I'm actually running a green grass core on a on a Linux server on the",
    "start": "2921950",
    "end": "2929180"
  },
  {
    "text": "Internet NEC - of course any more questions",
    "start": "2929180",
    "end": "2934340"
  },
  {
    "text": "there was one of you",
    "start": "2934340",
    "end": "2937510"
  },
  {
    "text": "so the question is can we talk about how to root of trust and TPM and we talk about going all the way from Amazon free",
    "start": "2943950",
    "end": "2950440"
  },
  {
    "text": "our toes to bring grass to the cloud",
    "start": "2950440",
    "end": "2953670"
  },
  {
    "text": "I'll start with the device and then I'll let Jimmy do their green grassland so on the device side the idea behind our",
    "start": "2957570",
    "end": "2963820"
  },
  {
    "text": "support for peak SES you might say our bet on pkcs 11 for those who are",
    "start": "2963820",
    "end": "2969160"
  },
  {
    "text": "familiar it's a standard based cryptographic API is for a TPM based",
    "start": "2969160",
    "end": "2976690"
  },
  {
    "text": "solution or TPM like solution let's say like armed v8 running running in a tea",
    "start": "2976690",
    "end": "2982240"
  },
  {
    "text": "trusted execution environment however you want to manage your private keys or however a vendor or a fab wants to",
    "start": "2982240",
    "end": "2990700"
  },
  {
    "text": "manage their private keys on that core the idea is they they just have to expose the you know the basically that",
    "start": "2990700",
    "end": "2996400"
  },
  {
    "text": "the load key and the signing operation in pqcs 11 and all the api's above that",
    "start": "2996400",
    "end": "3001800"
  },
  {
    "text": "in our stack are just gonna work the ingress side and working with green grass right now just TPM integration is",
    "start": "3001800",
    "end": "3008850"
  },
  {
    "text": "not separated yet but working with some of our customers who are going between us in production there are a lot of",
    "start": "3008850",
    "end": "3014790"
  },
  {
    "text": "other security areas that we are dressing like secure boot environment well of customers actually have that to",
    "start": "3014790",
    "end": "3021450"
  },
  {
    "text": "protect the keys that they are leveraging right now rotating the keys quite often and TPM is one of one of the",
    "start": "3021450",
    "end": "3029190"
  },
  {
    "text": "things on our roadmap along with other security related enhancements that that",
    "start": "3029190",
    "end": "3036290"
  },
  {
    "text": "yep",
    "start": "3038740",
    "end": "3041740"
  },
  {
    "text": "yeah sorry thank you yeah the question was about in the particular board I'm",
    "start": "3050990",
    "end": "3056119"
  },
  {
    "text": "showing is the developer launch board so what I demonstrated on is the developer",
    "start": "3056119",
    "end": "3062150"
  },
  {
    "text": "launch board we have with ST micro it I mean yeah of course to your point this",
    "start": "3062150",
    "end": "3067250"
  },
  {
    "text": "this board comes with a Wi-Fi chip it happens to be from invent tech it's kind",
    "start": "3067250",
    "end": "3072770"
  },
  {
    "text": "of a similar answer in terms of supporting other Wi-Fi chips the idea is that well we provide to our customer",
    "start": "3072770",
    "end": "3080480"
  },
  {
    "text": "applications using Amazon pre our toss is a berkeley sockets based interface",
    "start": "3080480",
    "end": "3085609"
  },
  {
    "text": "and as long as the vendor makes it so that your your kind of transport send",
    "start": "3085609",
    "end": "3092450"
  },
  {
    "text": "and receive are ported to that berkeley sockets interface which again is like",
    "start": "3092450",
    "end": "3097490"
  },
  {
    "text": "send receive open close shutdown that kind of thing then again all of the api alert i api layers above that are just",
    "start": "3097490",
    "end": "3104750"
  },
  {
    "text": "gonna work so we've got the four launch boards you know in our v1 all that hard",
    "start": "3104750",
    "end": "3111050"
  },
  {
    "text": "work has already been done there presumably would be some amount of work to kind of get that basic send and",
    "start": "3111050",
    "end": "3117050"
  },
  {
    "text": "receive and connect kind of behavior on the Wi-Fi end to go to a new a new chip i don't even answer your question i",
    "start": "3117050",
    "end": "3126069"
  },
  {
    "text": "could probably add some color to that also is the what we have with the boards",
    "start": "3126069",
    "end": "3132680"
  },
  {
    "text": "that we have right now is where pre-qualifying them so we have a gamut of tests that we go through and so",
    "start": "3132680",
    "end": "3137869"
  },
  {
    "text": "today's launch is these boards in that configuration so the st board with the",
    "start": "3137869",
    "end": "3144290"
  },
  {
    "text": "invent tech Wi-Fi the an XP board with the Wi-Fi that it has so if you want to",
    "start": "3144290",
    "end": "3149869"
  },
  {
    "text": "sort of think about bringing your own Wi-Fi as dan mentioned as long as it you have to do the porting to that layer and",
    "start": "3149869",
    "end": "3156170"
  },
  {
    "text": "then the rest of it will work we are looking at and you know ii love your feedback offline as well how do we think",
    "start": "3156170",
    "end": "3163569"
  },
  {
    "text": "about qualifying not necessarily the whole combination because typically embedded developers as",
    "start": "3163569",
    "end": "3169650"
  },
  {
    "text": "they would go to production from a developer board you're picking specific parts based on a number of reasons right",
    "start": "3169650",
    "end": "3175860"
  },
  {
    "text": "power usage cost and so on so forth you might end up with a Wi-Fi module that's not the same as what the dev board has and so we're looking at expanding how do",
    "start": "3175860",
    "end": "3183540"
  },
  {
    "text": "we think about qualification without sort of making that combinatorial explosion too crazy so that's something",
    "start": "3183540",
    "end": "3189660"
  },
  {
    "text": "we're looking at the starter kits I",
    "start": "3189660",
    "end": "3207630"
  },
  {
    "text": "think you're talking about so that the starter kit program each of our partners went ahead and did the full porting of",
    "start": "3207630",
    "end": "3214170"
  },
  {
    "text": "the C SDK those are all I guess useful",
    "start": "3214170",
    "end": "3221820"
  },
  {
    "text": "but they are not using Amazon free artists necessarily so we are engaged with all those partners and so it should",
    "start": "3221820",
    "end": "3228300"
  },
  {
    "text": "just stay tuned I guess is all I can say",
    "start": "3228300",
    "end": "3232190"
  },
  {
    "text": "sorry timers yes GPIO I don't think we shipped with the GPIO driver yeah but I",
    "start": "3243590",
    "end": "3252120"
  },
  {
    "text": "think well I don't know which of our boards have a GPIO driver I'm actually not sure intimate so I'll step back and",
    "start": "3252120",
    "end": "3260460"
  },
  {
    "text": "answer the question more generally which is all local peripheral access and Hardware access itself today other than",
    "start": "3260460",
    "end": "3266940"
  },
  {
    "text": "so we've abstracted away as you can see the network key storage through pkcs and",
    "start": "3266940",
    "end": "3272460"
  },
  {
    "text": "TLS and all of that we have not abstracted away anything that is local access so you'll work with the vendors",
    "start": "3272460",
    "end": "3277470"
  },
  {
    "text": "SDKs typically and like the st board that for example dan is doing the",
    "start": "3277470",
    "end": "3284730"
  },
  {
    "text": "project has essentially stm32 libraries",
    "start": "3284730",
    "end": "3289860"
  },
  {
    "text": "in there so you can use the I square CH from you know STM and you can use all of",
    "start": "3289860",
    "end": "3295560"
  },
  {
    "text": "that IO functionality if you are interested in scenarios where",
    "start": "3295560",
    "end": "3301380"
  },
  {
    "text": "you know you're looking at maybe an obstruction there talk to us let us know",
    "start": "3301380",
    "end": "3306259"
  },
  {
    "text": "in the in the front favor the people in the front",
    "start": "3306650",
    "end": "3311869"
  },
  {
    "text": "I'm sorry can you repeat yes yes so so",
    "start": "3322720",
    "end": "3338350"
  },
  {
    "text": "free autos does support I'm sorry repeating the question thank you power considerations for our demo",
    "start": "3338350",
    "end": "3344530"
  },
  {
    "text": "applications I think I kind of alluded when I was when I was talking about memory footprint our demo applications",
    "start": "3344530",
    "end": "3350320"
  },
  {
    "text": "are not optimized in that way intentionally more about feature set than about reducing power or reducing",
    "start": "3350320",
    "end": "3356530"
  },
  {
    "text": "memory but yes free arctos does offer low-power mode",
    "start": "3356530",
    "end": "3361630"
  },
  {
    "text": "we do offer basically allowing you to do the scheduling in your application that you need to do to shut down tasks and to",
    "start": "3361630",
    "end": "3371320"
  },
  {
    "text": "minimize your power usage is that in my experience that ends up being an application specific consideration and",
    "start": "3371320",
    "end": "3377740"
  },
  {
    "text": "we've given you the tools to do the right thing in your app sorry that's kind of an indirect okay well maybe and",
    "start": "3377740",
    "end": "3384190"
  },
  {
    "text": "one more thing in the free arctos kernel itself there's a support for you know",
    "start": "3384190",
    "end": "3389560"
  },
  {
    "text": "being efficient in your application and task management and there's this mode called ticklish idle where even when",
    "start": "3389560",
    "end": "3396700"
  },
  {
    "text": "you're going to idle instead of having to wake up each time to process the hardware interrupts you can sort of say okay give me when it's ready you put it",
    "start": "3396700",
    "end": "3403840"
  },
  {
    "text": "in idle mode and it'll wake you up when needed instead of having to process power in each of the techs so there's a",
    "start": "3403840",
    "end": "3409720"
  },
  {
    "text": "few different features inside free arthouse as well that you can look at the free arthouse kernel documentation",
    "start": "3409720",
    "end": "3414900"
  },
  {
    "text": "and leverage that all right whoever all",
    "start": "3414900",
    "end": "3423310"
  },
  {
    "text": "right let's let's have that person going",
    "start": "3423310",
    "end": "3426720"
  },
  {
    "text": "they evolved universes the reaction is about or they're from reviews of Amazon free orders",
    "start": "3431620",
    "end": "3437020"
  },
  {
    "text": "okay yeah yeah green grass weed you just launched that right we just launched or",
    "start": "3437020",
    "end": "3442280"
  },
  {
    "text": "dr4 software before green grass Envy 1.3 so folks try it out for free artists in",
    "start": "3442280",
    "end": "3449600"
  },
  {
    "text": "the next few weeks you'll see a initial beta release of our over-the-air update",
    "start": "3449600",
    "end": "3455030"
  },
  {
    "text": "feature where we combine the ability to have a new firmware version for free",
    "start": "3455030",
    "end": "3460970"
  },
  {
    "text": "artists uploaded get it signed get it scheduled for a deployment using the IOT device management features that were",
    "start": "3460970",
    "end": "3467060"
  },
  {
    "text": "also announced yesterday and have that sent down to the device integrated with",
    "start": "3467060",
    "end": "3472070"
  },
  {
    "text": "the boot loaders and the validation techniques that each of the boards individually has so you'll see a beta of",
    "start": "3472070",
    "end": "3479390"
  },
  {
    "text": "that and then coming few weeks we don't have a GI date yet",
    "start": "3479390",
    "end": "3484900"
  },
  {
    "text": "and justly just to understand the question really is the question about",
    "start": "3503519",
    "end": "3509019"
  },
  {
    "text": "provisioning Ringwraiths call itself or the IOT device connecting to bring graphs for or both devices sure okay I",
    "start": "3509019",
    "end": "3521109"
  },
  {
    "text": "understand the question now so I'm going to repeat the question so the question is I ot device which is trying to",
    "start": "3521109",
    "end": "3527769"
  },
  {
    "text": "connect to the cloud viagra graph score how do you provision the IOT device that's the question okay",
    "start": "3527769",
    "end": "3533709"
  },
  {
    "text": "it's the the mechanism of provisioning one-time IOT clients are either on",
    "start": "3533709",
    "end": "3540309"
  },
  {
    "text": "Grindr score or on IOT device which is connecting to bring the score is exactly",
    "start": "3540309",
    "end": "3545919"
  },
  {
    "text": "same because in reality gringa score is an IOT device so remember when I was",
    "start": "3545919",
    "end": "3551469"
  },
  {
    "text": "talking about you know one time to connect Green Cross code to a SS IOT",
    "start": "3551469",
    "end": "3557279"
  },
  {
    "text": "you provision it with client cert it's",
    "start": "3557279",
    "end": "3562359"
  },
  {
    "text": "the same mechanism you would use even if even if you are not connecting the IOT",
    "start": "3562359",
    "end": "3568719"
  },
  {
    "text": "device to internet directly it's the same cert that Greengrass core will also honor as long as that IOT device has",
    "start": "3568719",
    "end": "3576699"
  },
  {
    "text": "been added and deployed to the green grass core so if you went to the green grass core group on the console or using",
    "start": "3576699",
    "end": "3583900"
  },
  {
    "text": "CLI if you add an IOT device you're essentially telling the green grass core to accept that incoming connection which",
    "start": "3583900",
    "end": "3591579"
  },
  {
    "text": "means that that sir that you downloaded from IOT and provision on the outter device when it presents to bring the",
    "start": "3591579",
    "end": "3596799"
  },
  {
    "text": "score as long as it was part of the group progressed the authentication is going to go through",
    "start": "3596799",
    "end": "3603719"
  },
  {
    "text": "so device the IOT device creating rigorous course server surgeon the group",
    "start": "3607930",
    "end": "3615079"
  },
  {
    "text": "certificate so been local device so the question is again how does how does the server side authentication work between",
    "start": "3615079",
    "end": "3621109"
  },
  {
    "text": "local IOT device and local Greenglass score the server certificate as I said",
    "start": "3621109",
    "end": "3626510"
  },
  {
    "text": "for the Greengrass score is managed by us which means we created we provision it on your behalf when the connection",
    "start": "3626510",
    "end": "3634160"
  },
  {
    "text": "request comes from local IOT device to bring the score right at that point mutual authentication call flow kicks",
    "start": "3634160",
    "end": "3640609"
  },
  {
    "text": "off and Greenglass codes gonna present service to local area device now",
    "start": "3640609",
    "end": "3645829"
  },
  {
    "text": "remember I recommended you do a discovery discovery either if you have",
    "start": "3645829",
    "end": "3651410"
  },
  {
    "text": "internet connection you can do discovery or you can manually provision root CA if",
    "start": "3651410",
    "end": "3657079"
  },
  {
    "text": "you do not have internet connectivity one of those methods the root C has to be provision on the local IOT device and",
    "start": "3657079",
    "end": "3663500"
  },
  {
    "text": "that ya and that's this mechanism that is gonna validate or you could build",
    "start": "3663500",
    "end": "3669050"
  },
  {
    "text": "like owning a mobile application for example during the deployment process that fetches it which has connectivity",
    "start": "3669050",
    "end": "3674780"
  },
  {
    "text": "and then you would push that down to the free artuz device through your provisioning app right",
    "start": "3674780",
    "end": "3682839"
  },
  {
    "text": "[Music] so right yeah absolutely so the question",
    "start": "3686720",
    "end": "3695290"
  },
  {
    "text": "is about do we support the hierarchy multiple tiers in do we support advanced",
    "start": "3695290",
    "end": "3700570"
  },
  {
    "text": "topology of course we support so right now we support what we call hub-and-spoke",
    "start": "3700570",
    "end": "3705750"
  },
  {
    "text": "topology which means in a given green grass group we only support one core at this moment stay tuned things might",
    "start": "3705750",
    "end": "3713380"
  },
  {
    "text": "change right now we only support one corporate group and you can configure it",
    "start": "3713380",
    "end": "3720970"
  },
  {
    "text": "as many Amazon free artist devices or local IP devices as you want in that particular group yep now yet the",
    "start": "3720970",
    "end": "3733770"
  },
  {
    "text": "question was does the heart of central stack support ipv6 and the answer is not",
    "start": "3733770",
    "end": "3739510"
  },
  {
    "text": "yet yes we're working on that",
    "start": "3739510",
    "end": "3746580"
  },
  {
    "text": "kind of there's a hand going up here first I'm gonna get there the question",
    "start": "3748650",
    "end": "3756730"
  },
  {
    "text": "is about s to n do we have plan yes well",
    "start": "3756730",
    "end": "3762130"
  },
  {
    "text": "yes sorry well Jimmy repeated the question it's so hard to repeat the question yes we have plans to support s to n it's not quite you I don't have",
    "start": "3762130",
    "end": "3768579"
  },
  {
    "text": "you've been tracking us to ni github I mean it's on github right it's all public all right we're getting the time",
    "start": "3768579",
    "end": "3774010"
  },
  {
    "text": "the time notification anyway s - it doesn't quite have a fully self-contained client implementation yet",
    "start": "3774010",
    "end": "3780700"
  },
  {
    "text": "with x.509 a crypto we're working on that all right they're telling us to get off thank you very much guys offline we",
    "start": "3780700",
    "end": "3786280"
  },
  {
    "text": "are getting out of time but thank thank you very much for coming for this session thank you",
    "start": "3786280",
    "end": "3791320"
  },
  {
    "text": "[Applause]",
    "start": "3791320",
    "end": "3794189"
  }
]