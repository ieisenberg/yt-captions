[
  {
    "text": "hello and welcome to Amazon time stream",
    "start": "1520",
    "end": "3520"
  },
  {
    "text": "for twig bites i'm Balwan Bubili",
    "start": "3520",
    "end": "6000"
  },
  {
    "text": "specialist solution architect at Amazon",
    "start": "6000",
    "end": "7839"
  },
  {
    "text": "web services today I'm going to talk",
    "start": "7839",
    "end": "10160"
  },
  {
    "text": "about how you can expand your read",
    "start": "10160",
    "end": "12400"
  },
  {
    "text": "scalability on time stream for Inflex",
    "start": "12400",
    "end": "15000"
  },
  {
    "text": "DB what is time stream for Inflex",
    "start": "15000",
    "end": "17880"
  },
  {
    "text": "DB it is a inflex DB2.x opensource",
    "start": "17880",
    "end": "22039"
  },
  {
    "text": "version provided as a managed service so",
    "start": "22039",
    "end": "24960"
  },
  {
    "text": "you can continue to build your time",
    "start": "24960",
    "end": "26480"
  },
  {
    "text": "series applications efficiently while",
    "start": "26480",
    "end": "29279"
  },
  {
    "text": "AWS takes care of underlying",
    "start": "29279",
    "end": "31039"
  },
  {
    "text": "infrastructure provides you order",
    "start": "31039",
    "end": "32800"
  },
  {
    "text": "scaling and storage expansion and much",
    "start": "32800",
    "end": "35120"
  },
  {
    "text": "and many other",
    "start": "35120",
    "end": "36840"
  },
  {
    "text": "features we recently launched time",
    "start": "36840",
    "end": "39040"
  },
  {
    "text": "stream for Inflex DB read replica",
    "start": "39040",
    "end": "40640"
  },
  {
    "text": "clusters before you had only single",
    "start": "40640",
    "end": "43200"
  },
  {
    "text": "instance to read and write from in time",
    "start": "43200",
    "end": "45360"
  },
  {
    "text": "stream for inflex DB with this read",
    "start": "45360",
    "end": "47680"
  },
  {
    "text": "replica cluster launch now you can",
    "start": "47680",
    "end": "49920"
  },
  {
    "text": "create your redirect your read lines to",
    "start": "49920",
    "end": "52800"
  },
  {
    "text": "replica dedicated replica instance let's",
    "start": "52800",
    "end": "55199"
  },
  {
    "text": "say if you have a uh data scientist that",
    "start": "55199",
    "end": "58239"
  },
  {
    "text": "are running a heavy query workloads or",
    "start": "58239",
    "end": "61280"
  },
  {
    "text": "if you have a dashboarding queries you",
    "start": "61280",
    "end": "62800"
  },
  {
    "text": "can just repoint them to the replica",
    "start": "62800",
    "end": "64320"
  },
  {
    "text": "instance and this is completely managed",
    "start": "64320",
    "end": "66600"
  },
  {
    "text": "service that when you write the data to",
    "start": "66600",
    "end": "68880"
  },
  {
    "text": "primary or writer instance the data is",
    "start": "68880",
    "end": "70960"
  },
  {
    "text": "automatically replicated in async mode",
    "start": "70960",
    "end": "72880"
  },
  {
    "text": "to the replica instance well this could",
    "start": "72880",
    "end": "75360"
  },
  {
    "text": "improve your read scalability and also",
    "start": "75360",
    "end": "78000"
  },
  {
    "text": "add the automatic failure capabilities",
    "start": "78000",
    "end": "79920"
  },
  {
    "text": "because the instance the primary",
    "start": "79920",
    "end": "82000"
  },
  {
    "text": "instance and replica instance are",
    "start": "82000",
    "end": "83439"
  },
  {
    "text": "created in a different AC and any impact",
    "start": "83439",
    "end": "86880"
  },
  {
    "text": "on the primary instance the replica",
    "start": "86880",
    "end": "88960"
  },
  {
    "text": "instance can fail out",
    "start": "88960",
    "end": "90680"
  },
  {
    "text": "automatically well this also could",
    "start": "90680",
    "end": "92880"
  },
  {
    "text": "improve your right",
    "start": "92880",
    "end": "94360"
  },
  {
    "text": "performance you could think adding a",
    "start": "94360",
    "end": "96799"
  },
  {
    "text": "replica instance how it can improve a",
    "start": "96799",
    "end": "98799"
  },
  {
    "text": "right performance well you're creating a",
    "start": "98799",
    "end": "101119"
  },
  {
    "text": "replica dedicated replica instance and",
    "start": "101119",
    "end": "102960"
  },
  {
    "text": "you're redirecting your read reads to",
    "start": "102960",
    "end": "104799"
  },
  {
    "text": "your new replica instance that means",
    "start": "104799",
    "end": "106799"
  },
  {
    "text": "you're basically freeing up the",
    "start": "106799",
    "end": "108159"
  },
  {
    "text": "resources on the primary or writer",
    "start": "108159",
    "end": "109960"
  },
  {
    "text": "instance which can help you to improve",
    "start": "109960",
    "end": "112720"
  },
  {
    "text": "your right throughput and uh also scale",
    "start": "112720",
    "end": "115920"
  },
  {
    "text": "your rights i'll go ahead and do a demo",
    "start": "115920",
    "end": "119119"
  },
  {
    "text": "as part of the demo I'll create a time",
    "start": "119119",
    "end": "120960"
  },
  {
    "text": "stream for Inflex DB relica cluster and",
    "start": "120960",
    "end": "123520"
  },
  {
    "text": "ingest some data to writer instance and",
    "start": "123520",
    "end": "125920"
  },
  {
    "text": "query the data using rate replica",
    "start": "125920",
    "end": "128000"
  },
  {
    "text": "endpoint",
    "start": "128000",
    "end": "130479"
  },
  {
    "text": "i'm in Amazon time stream console page",
    "start": "130479",
    "end": "132480"
  },
  {
    "text": "i'll go ahead and create time stream for",
    "start": "132480",
    "end": "133840"
  },
  {
    "text": "Inflex DB",
    "start": "133840",
    "end": "135160"
  },
  {
    "text": "database i have three options for",
    "start": "135160",
    "end": "137680"
  },
  {
    "text": "deployment settings one is multi-AZ with",
    "start": "137680",
    "end": "139680"
  },
  {
    "text": "standby single A and since I'm creating",
    "start": "139680",
    "end": "142000"
  },
  {
    "text": "cluster with rate replicas I'm going to",
    "start": "142000",
    "end": "143440"
  },
  {
    "text": "choose the third option which is cluster",
    "start": "143440",
    "end": "145120"
  },
  {
    "text": "with rate replicas there is one time",
    "start": "145120",
    "end": "147599"
  },
  {
    "text": "subscription for creating RA replicas",
    "start": "147599",
    "end": "150080"
  },
  {
    "text": "since they are provided as marketplace",
    "start": "150080",
    "end": "152080"
  },
  {
    "text": "add-ons so let me click on the view",
    "start": "152080",
    "end": "154239"
  },
  {
    "text": "subscription option and click on",
    "start": "154239",
    "end": "156959"
  },
  {
    "text": "subscribe",
    "start": "156959",
    "end": "159920"
  },
  {
    "text": "now I have my subscription active i went",
    "start": "162160",
    "end": "164319"
  },
  {
    "text": "ahead and create given the cluster name",
    "start": "164319",
    "end": "166319"
  },
  {
    "text": "username and the rest of the details",
    "start": "166319",
    "end": "168080"
  },
  {
    "text": "required to create the cluster i'm going",
    "start": "168080",
    "end": "169840"
  },
  {
    "text": "to change the instance configuration i'm",
    "start": "169840",
    "end": "172080"
  },
  {
    "text": "going to choose inflex medium since this",
    "start": "172080",
    "end": "174560"
  },
  {
    "text": "is for demo purpose i'm going to stick",
    "start": "174560",
    "end": "176239"
  },
  {
    "text": "with the default storage type i'm going",
    "start": "176239",
    "end": "178080"
  },
  {
    "text": "to change the allocated storage to 20",
    "start": "178080",
    "end": "180160"
  },
  {
    "text": "that's the minimum value allowed and uh",
    "start": "180160",
    "end": "182720"
  },
  {
    "text": "I went ahead and already clicked on the",
    "start": "182720",
    "end": "184480"
  },
  {
    "text": "VPC uh which where I want the cluster to",
    "start": "184480",
    "end": "187360"
  },
  {
    "text": "be hosted and I'm going to choose the",
    "start": "187360",
    "end": "190959"
  },
  {
    "text": "subnets for public accessibility uh we",
    "start": "192200",
    "end": "196080"
  },
  {
    "text": "recommend to disable public",
    "start": "196080",
    "end": "197760"
  },
  {
    "text": "accessibility for production systems",
    "start": "197760",
    "end": "199519"
  },
  {
    "text": "since I wanted to use inflex UI outside",
    "start": "199519",
    "end": "203040"
  },
  {
    "text": "my VPC so I'm going and enabling it for",
    "start": "203040",
    "end": "206400"
  },
  {
    "text": "the demo purpose and there are uh",
    "start": "206400",
    "end": "209840"
  },
  {
    "text": "failover settings automatic and no",
    "start": "209840",
    "end": "211680"
  },
  {
    "text": "failure if you choose automatic if the",
    "start": "211680",
    "end": "213280"
  },
  {
    "text": "primary instance fails it will",
    "start": "213280",
    "end": "214879"
  },
  {
    "text": "automatically fail to replica and if you",
    "start": "214879",
    "end": "217120"
  },
  {
    "text": "don't want that you choose no failover",
    "start": "217120",
    "end": "219760"
  },
  {
    "text": "and there is an option to create a",
    "start": "219760",
    "end": "221440"
  },
  {
    "text": "parameter group with the your required",
    "start": "221440",
    "end": "224000"
  },
  {
    "text": "inflex configurations but I'm going to",
    "start": "224000",
    "end": "225519"
  },
  {
    "text": "choose default for now for the log",
    "start": "225519",
    "end": "227280"
  },
  {
    "text": "delivery settings you can create a infle",
    "start": "227280",
    "end": "230959"
  },
  {
    "text": "uh S3 bucket and give the location here",
    "start": "230959",
    "end": "233440"
  },
  {
    "text": "so inflex logs will be shipped to that",
    "start": "233440",
    "end": "235599"
  },
  {
    "text": "location for for you to uh analyze the",
    "start": "235599",
    "end": "239480"
  },
  {
    "text": "logs and there is a tags option also i'm",
    "start": "239480",
    "end": "242400"
  },
  {
    "text": "going to skip that for now and I'm going",
    "start": "242400",
    "end": "243920"
  },
  {
    "text": "to create go ahead and create the inflex",
    "start": "243920",
    "end": "245959"
  },
  {
    "text": "database now I have my database created",
    "start": "245959",
    "end": "248480"
  },
  {
    "text": "let me go ahead and click on the",
    "start": "248480",
    "end": "250040"
  },
  {
    "text": "database so there is a summary section",
    "start": "250040",
    "end": "252239"
  },
  {
    "text": "where I can see the Amazon resource name",
    "start": "252239",
    "end": "254560"
  },
  {
    "text": "and end endpoint and other details and",
    "start": "254560",
    "end": "256639"
  },
  {
    "text": "there is a instance tab where I can see",
    "start": "256639",
    "end": "258479"
  },
  {
    "text": "my primary instance and the replica so I",
    "start": "258479",
    "end": "261519"
  },
  {
    "text": "already opened the primary instance and",
    "start": "261519",
    "end": "263120"
  },
  {
    "text": "replica in a new tab so this is my",
    "start": "263120",
    "end": "264960"
  },
  {
    "text": "primary instance that is starts with XS",
    "start": "264960",
    "end": "268560"
  },
  {
    "text": "and this is my replica instance which",
    "start": "268560",
    "end": "271199"
  },
  {
    "text": "starts with GK and if you have seen it",
    "start": "271199",
    "end": "274720"
  },
  {
    "text": "so the availability zone for the primary",
    "start": "274720",
    "end": "276720"
  },
  {
    "text": "is US East 1A and the availability zone",
    "start": "276720",
    "end": "279360"
  },
  {
    "text": "for this one is US East 1B so they're",
    "start": "279360",
    "end": "281919"
  },
  {
    "text": "completely deployed in two different",
    "start": "281919",
    "end": "284759"
  },
  {
    "text": "aces and we can open the inflex DB UI",
    "start": "284759",
    "end": "287759"
  },
  {
    "text": "for both of them i've already uh opened",
    "start": "287759",
    "end": "290639"
  },
  {
    "text": "it and uh logged in into the in both the",
    "start": "290639",
    "end": "293520"
  },
  {
    "text": "UI so one which starts with XX this is",
    "start": "293520",
    "end": "295680"
  },
  {
    "text": "my primary and the one which starts with",
    "start": "295680",
    "end": "297280"
  },
  {
    "text": "GK is my replica so let's go ahead and",
    "start": "297280",
    "end": "301040"
  },
  {
    "text": "start creating some buckets in the",
    "start": "301040",
    "end": "302479"
  },
  {
    "text": "primary and see if they get replicated",
    "start": "302479",
    "end": "304240"
  },
  {
    "text": "to",
    "start": "304240",
    "end": "305880"
  },
  {
    "text": "replica okay for that I'll go and create",
    "start": "305880",
    "end": "308880"
  },
  {
    "text": "go to the bucket section and then click",
    "start": "308880",
    "end": "310720"
  },
  {
    "text": "on create bucket",
    "start": "310720",
    "end": "314280"
  },
  {
    "text": "okay this created the bucket on the",
    "start": "318639",
    "end": "320240"
  },
  {
    "text": "primary let's go and validate on the",
    "start": "320240",
    "end": "322280"
  },
  {
    "text": "secondary",
    "start": "322280",
    "end": "325280"
  },
  {
    "text": "[Music]",
    "start": "326680",
    "end": "327800"
  },
  {
    "text": "replica okay now I see the bucket which",
    "start": "327800",
    "end": "330160"
  },
  {
    "text": "I created on the primary got replica got",
    "start": "330160",
    "end": "332720"
  },
  {
    "text": "got replicated to the secondary i would",
    "start": "332720",
    "end": "335759"
  },
  {
    "text": "like to go and run a simple test that is",
    "start": "335759",
    "end": "337680"
  },
  {
    "text": "to create a bucket on the replica and",
    "start": "337680",
    "end": "340000"
  },
  {
    "text": "see what happens for that I'll click on",
    "start": "340000",
    "end": "341680"
  },
  {
    "text": "create",
    "start": "341680",
    "end": "342919"
  },
  {
    "text": "bucket and give a bucket",
    "start": "342919",
    "end": "346800"
  },
  {
    "text": "name as you see the bucket creation",
    "start": "349240",
    "end": "351919"
  },
  {
    "text": "failed this is because you would not be",
    "start": "351919",
    "end": "354080"
  },
  {
    "text": "able to create bucket or write data on",
    "start": "354080",
    "end": "356320"
  },
  {
    "text": "the replica instance you can do that on",
    "start": "356320",
    "end": "359280"
  },
  {
    "text": "the only on the writer instance and the",
    "start": "359280",
    "end": "361280"
  },
  {
    "text": "data is automatically get replicated to",
    "start": "361280",
    "end": "363440"
  },
  {
    "text": "the replica instance now that I have the",
    "start": "363440",
    "end": "366160"
  },
  {
    "text": "bucket created let me go ahead and",
    "start": "366160",
    "end": "367919"
  },
  {
    "text": "ingest some data and validate it using",
    "start": "367919",
    "end": "370319"
  },
  {
    "text": "primary endpoint and replica endpoint so",
    "start": "370319",
    "end": "373120"
  },
  {
    "text": "I'm using a Python program for that so I",
    "start": "373120",
    "end": "375280"
  },
  {
    "text": "have defined some variables where I'm",
    "start": "375280",
    "end": "377199"
  },
  {
    "text": "using primary URL for primary endpoint",
    "start": "377199",
    "end": "379120"
  },
  {
    "text": "read URL for read endpoint and there is",
    "start": "379120",
    "end": "380720"
  },
  {
    "text": "a token which I have already created",
    "start": "380720",
    "end": "382400"
  },
  {
    "text": "using inflex UI and uh the right I have",
    "start": "382400",
    "end": "385520"
  },
  {
    "text": "three functions one is write data which",
    "start": "385520",
    "end": "387600"
  },
  {
    "text": "is basically I'm generating some uh",
    "start": "387600",
    "end": "390800"
  },
  {
    "text": "dummy uh sensor data and trying to",
    "start": "390800",
    "end": "393280"
  },
  {
    "text": "ingest using inflex DB client and say",
    "start": "393280",
    "end": "396479"
  },
  {
    "text": "second one is read primary data in the",
    "start": "396479",
    "end": "398400"
  },
  {
    "text": "read primary data I'm basically reading",
    "start": "398400",
    "end": "400400"
  },
  {
    "text": "it from the primary URL which is",
    "start": "400400",
    "end": "402000"
  },
  {
    "text": "pointing to the primary endpoint and the",
    "start": "402000",
    "end": "404400"
  },
  {
    "text": "second uh the third function actually is",
    "start": "404400",
    "end": "407360"
  },
  {
    "text": "using again reading the data but this",
    "start": "407360",
    "end": "409440"
  },
  {
    "text": "time it's using the read URL which is",
    "start": "409440",
    "end": "411840"
  },
  {
    "text": "pointing to the replica endpoint now let",
    "start": "411840",
    "end": "414160"
  },
  {
    "text": "me go ahead and execute the Python",
    "start": "414160",
    "end": "417360"
  },
  {
    "text": "program and see and validate the",
    "start": "417360",
    "end": "421080"
  },
  {
    "text": "data okay now that I uh so for the",
    "start": "421080",
    "end": "424560"
  },
  {
    "text": "readability sake I've justed 10 data",
    "start": "424560",
    "end": "429280"
  },
  {
    "text": "points and as you can see this is from",
    "start": "429960",
    "end": "433280"
  },
  {
    "text": "my primary and this is from replica and",
    "start": "433280",
    "end": "435280"
  },
  {
    "text": "the time stamps exactly match and the",
    "start": "435280",
    "end": "437120"
  },
  {
    "text": "values match so this helps us to",
    "start": "437120",
    "end": "439759"
  },
  {
    "text": "validate the data is being returned data",
    "start": "439759",
    "end": "442319"
  },
  {
    "text": "returned to the primary is being",
    "start": "442319",
    "end": "444560"
  },
  {
    "text": "replicated automatically to the read",
    "start": "444560",
    "end": "446800"
  },
  {
    "text": "replica instance almost instantaneously",
    "start": "446800",
    "end": "449440"
  },
  {
    "text": "one thing to know here is writes do not",
    "start": "449440",
    "end": "451520"
  },
  {
    "text": "require acknowledgement from reader node",
    "start": "451520",
    "end": "453599"
  },
  {
    "text": "to be considered as a successful write",
    "start": "453599",
    "end": "455599"
  },
  {
    "text": "once data is committed by the writer DB",
    "start": "455599",
    "end": "458319"
  },
  {
    "text": "instance it is replicated to read",
    "start": "458319",
    "end": "461440"
  },
  {
    "text": "replica instance almost",
    "start": "461440",
    "end": "464280"
  },
  {
    "text": "instantaneously that's it for this video",
    "start": "464280",
    "end": "466800"
  },
  {
    "text": "we were able to see within few clicks",
    "start": "466800",
    "end": "468639"
  },
  {
    "text": "how you can create a time stream for",
    "start": "468639",
    "end": "470400"
  },
  {
    "text": "inflex DB read replica clusters which",
    "start": "470400",
    "end": "473280"
  },
  {
    "text": "can help you to improve your read",
    "start": "473280",
    "end": "474639"
  },
  {
    "text": "scalability and also have other",
    "start": "474639",
    "end": "476560"
  },
  {
    "text": "advantages which I have highlighted in",
    "start": "476560",
    "end": "478160"
  },
  {
    "text": "the beginning of the video thank you so",
    "start": "478160",
    "end": "480560"
  },
  {
    "text": "much for watching this video if you have",
    "start": "480560",
    "end": "482639"
  },
  {
    "text": "any further questions please do reach",
    "start": "482639",
    "end": "484560"
  },
  {
    "text": "out on the email displayed here",
    "start": "484560",
    "end": "489000"
  }
]