[
  {
    "text": "Did you know that today the majority of internet \ntraffic is encrypted using transport layer  ",
    "start": "3600",
    "end": "9960"
  },
  {
    "text": "security, or TLS for short. Customers with \nsecurity requirements to perform deep packet  ",
    "start": "9960",
    "end": "15840"
  },
  {
    "text": "inspection, or DPI, need the ability to decrypt \nTLS traffic as it traverses the perimeter firewall  ",
    "start": "15840",
    "end": "22860"
  },
  {
    "text": "and enters their virtual private clouds, or VPCs. \nHowever, the lack of visibility into encrypted  ",
    "start": "22860",
    "end": "30120"
  },
  {
    "text": "traffic presents a challenge to organizations \nthat don't have the resources to decrypt and  ",
    "start": "30120",
    "end": "36060"
  },
  {
    "text": "inspect network traffic. TLS encryption can \nhide malware, concealed data theft, or mask  ",
    "start": "36060",
    "end": "43440"
  },
  {
    "text": "data leakage of sensitive information, such as \ncredit card numbers or passwords. Additionally,  ",
    "start": "43440",
    "end": "49140"
  },
  {
    "text": "TLS decryption is compute intensive and \ncryptographic standards are constantly involving.  ",
    "start": "49140",
    "end": "54840"
  },
  {
    "text": "I'm happy to share that this ability to perform \ndeep packet inspection on TLS encrypted traffic  ",
    "start": "55920",
    "end": "62100"
  },
  {
    "text": "is now possible with AWS Network Firewall. Because \nnetwork firewall is an AWS managed service the  ",
    "start": "62100",
    "end": "72119"
  },
  {
    "text": "bandwidth performance of 100 gigabits per second \nper firewall endpoint is not impacted, even after  ",
    "start": "72120",
    "end": "78660"
  },
  {
    "text": "you enable TLS inspection configuration. And \nwith network firewall you can choose which  ",
    "start": "78660",
    "end": "84120"
  },
  {
    "text": "traffic to decrypt by using your available \ncertificates and AWS Certificate Manager and  ",
    "start": "84120",
    "end": "90000"
  },
  {
    "text": "then applying the TLS configurations across the \nstateful rule groups thereby authorizing network  ",
    "start": "90000",
    "end": "95640"
  },
  {
    "text": "firewall to act as a go-between. I'm excited \nto demonstrate the configuration for you today.  ",
    "start": "95640",
    "end": "102120"
  },
  {
    "text": "Now there's three main architectural \npatterns for Network Firewall deployments.  ",
    "start": "103200",
    "end": "107939"
  },
  {
    "text": "The first as you see here is a Distributed \ndeployment model in which network firewall  ",
    "start": "107940",
    "end": "113700"
  },
  {
    "text": "is deployed into each individual VPC. The second \nis a Centralized deployment model in which network  ",
    "start": "113700",
    "end": "121020"
  },
  {
    "text": "firewall is deployed into a Centralized \nVPC for East-West traffic or VPC-to-VPC,  ",
    "start": "121020",
    "end": "127500"
  },
  {
    "text": "or North-South traffic, Inbound and Outbound \nfrom internet, or hybrid, on-premises use cases.  ",
    "start": "127500",
    "end": "136440"
  },
  {
    "text": "And the final architecture is a Combined \ndeployment model this is where Network  ",
    "start": "137280",
    "end": "141600"
  },
  {
    "text": "firewall is deployed into a Centralized Inspection \nVPC for East-West, or VPC-to-VPC traffic flows.  ",
    "start": "141600",
    "end": "148320"
  },
  {
    "text": "And a subset of North-South on-premises or egress \ntraffic. The internet Ingress is distributed to  ",
    "start": "148860",
    "end": "157200"
  },
  {
    "text": "VPCs that require dedicated inbound access from \nthe internet and network firewall is deployed  ",
    "start": "157200",
    "end": "163200"
  },
  {
    "text": "accordingly. Each of these architectures \nis valid for TLS inspection functionality.  ",
    "start": "163200",
    "end": "169500"
  },
  {
    "text": "Now prior to TLS inspection configuration here's \nwhat happens the Ingress traffic enters the VPC.  ",
    "start": "170520",
    "end": "177480"
  },
  {
    "text": "Ingress routing enables the internet traffic \nto be inspected by AWS Network Firewall.  ",
    "start": "177480",
    "end": "183180"
  },
  {
    "text": "Traffic is passed from the firewall endpoint \nto the network firewall, and network firewall  ",
    "start": "183840",
    "end": "188879"
  },
  {
    "text": "inspects the packets first through a stateless \nengine. Network firewall makes a drop pass  ",
    "start": "188880",
    "end": "195000"
  },
  {
    "text": "decision by applying the rules that are present \nin the stateless engine. Now if there's no  ",
    "start": "195000",
    "end": "200100"
  },
  {
    "text": "match on the set of stateless rules present. The \ntraffic is then forwarded to the stateful engine,  ",
    "start": "200100",
    "end": "206520"
  },
  {
    "text": "and again a drop pass decision is made by applying \nthe set of stateful rules. If the decision is to  ",
    "start": "206520",
    "end": "214500"
  },
  {
    "text": "pass traffic, then the firewall endpoint present \nin the firewall subnet, sends the traffic to the  ",
    "start": "214500",
    "end": "220740"
  },
  {
    "text": "customer subnet through the routes present in the \nVPC subnet route table. Now here's what happens  ",
    "start": "220740",
    "end": "227280"
  },
  {
    "text": "after TLS inspection configuration is enabled. \nNotice how the traffic flow changes slightly  ",
    "start": "227280",
    "end": "234240"
  },
  {
    "text": "since the Ingress data that you want to inspect \nis encrypted it first needs to be decrypted before  ",
    "start": "234840",
    "end": "242099"
  },
  {
    "text": "it's sent to the firewall stateful engine. \nSo the traffic flow looks like this. The  ",
    "start": "242100",
    "end": "247920"
  },
  {
    "text": "Ingress traffic enters the VPC. Ingress routing \nenables the internet traffic to be inspected by  ",
    "start": "247920",
    "end": "254459"
  },
  {
    "text": "AWS Network Firewall. The traffic flows from \nthe firewall endpoint to the network firewall.  ",
    "start": "254460",
    "end": "260280"
  },
  {
    "text": "Next, network firewall inspects the packet first \nthrough a stateless engine. Network firewall makes  ",
    "start": "261000",
    "end": "268080"
  },
  {
    "text": "a drop pass decision by applying the rules \nthat are present in the stateless engine,  ",
    "start": "268080",
    "end": "271979"
  },
  {
    "text": "and if there's no match on the set of stateless \nrules present the traffic is then forwarded to  ",
    "start": "271980",
    "end": "278400"
  },
  {
    "text": "the stateful engine. However, here's where things \nchange in our traffic flow. With no match in the  ",
    "start": "278400",
    "end": "285540"
  },
  {
    "text": "stateless engine and before the traffic passes \nto the staple engine, if the traffic is in the  ",
    "start": "285540",
    "end": "291180"
  },
  {
    "text": "scope of the TLS encryption configuration, the \ntraffic is forwarded for the decrypt operation.  ",
    "start": "291180",
    "end": "297900"
  },
  {
    "text": "After decryption the traffic is then forwarded \nto the firewall stateful engine for inspection.  ",
    "start": "298800",
    "end": "303539"
  },
  {
    "text": "Again, network firewall makes a drop pass decision \nby applying the set of stateful rules. The traffic  ",
    "start": "304260",
    "end": "311220"
  },
  {
    "text": "is the then re-encrypted. If the decision is to \npass traffic then the firewall endpoint present  ",
    "start": "311220",
    "end": "319260"
  },
  {
    "text": "in the firewall subnet sends the traffic to the \ncustomer subnet through the routes present in  ",
    "start": "319260",
    "end": "324720"
  },
  {
    "text": "the VPC subnet route table. And for this to work \nyou have to trust the certificate. So now that  ",
    "start": "324720",
    "end": "331800"
  },
  {
    "text": "we know how DPI and TLS inspection works, let's \nlook at how we configure it in the AWS console.  ",
    "start": "331800",
    "end": "337860"
  },
  {
    "text": "And here we are in our AWS console. The first \nthing I'm going to do is click \"Create firewall\".  ",
    "start": "339120",
    "end": "345060"
  },
  {
    "text": "There's going to be three elements. It's going \nto have a firewall configuration attached to a  ",
    "start": "346260",
    "end": "351360"
  },
  {
    "text": "firewall policy, that refers to rule groups. \nSo we're going to have to go through a couple  ",
    "start": "351360",
    "end": "356639"
  },
  {
    "text": "of items of information here. So we're \ngoing to say this is going to be our \"AWS  ",
    "start": "356640",
    "end": "362760"
  },
  {
    "text": "Firewall Demo\" and we can just copy that. And a \ncouple spaces there. We need to choose the VPC  ",
    "start": "364020",
    "end": "375240"
  },
  {
    "text": "where we're going to create this firewall. And \nit's going to be in our Network Firewall VPC.  ",
    "start": "375240",
    "end": "379620"
  },
  {
    "text": "We're going to choose the US \nWest 1A Availability Zone.  ",
    "start": "380700",
    "end": "385200"
  },
  {
    "text": "We're going to then pick the subnet where our \nendpoint is going to be deployed. And so that's  ",
    "start": "386040",
    "end": "392700"
  },
  {
    "text": "going to be in our firewall subnet. And then \nthe IP address type this is going to be IPv4.",
    "start": "392700",
    "end": "400020"
  },
  {
    "text": "The next thing we're going to do is set up our \nAssociated firewall policy. So I'm going to go  ",
    "start": "401820",
    "end": "408780"
  },
  {
    "text": "ahead and Create and associate an empty firewall \npolicy. So I'm going to call this TLS FW demo  ",
    "start": "408780",
    "end": "418080"
  },
  {
    "text": "policy.",
    "start": "419640",
    "end": "420420"
  },
  {
    "text": "And we can just copy and paste that.",
    "start": "422640",
    "end": "425100"
  },
  {
    "text": "The rule order we're going to leave it set to the \nDefault. And we can leave our Change protections  ",
    "start": "431760",
    "end": "439560"
  },
  {
    "text": "on if we want to. The first protects \nthe firewall against being deleted.  ",
    "start": "440700",
    "end": "444660"
  },
  {
    "text": "I don't really need that, it's just a demo \nenvironment. And then Subnet change protection,  ",
    "start": "445440",
    "end": "450600"
  },
  {
    "text": "I don't need to enable that as well. So we're \ngoing to click on Create firewall. And now we're  ",
    "start": "450600",
    "end": "457200"
  },
  {
    "text": "provisioning our firewall and this will include \nour VPC endpoint, our firewall endpoint, that's  ",
    "start": "457200",
    "end": "464340"
  },
  {
    "text": "going to go in that firewall subnet. So we're \ngoing to give this just a moment to provision.  ",
    "start": "464340",
    "end": "468840"
  },
  {
    "text": "Okay. So our firewall status is ready. When \nwe look at our Associated firewall policy  ",
    "start": "470280",
    "end": "476280"
  },
  {
    "text": "rule groups, we see that's going to forward to the \nstate full engine after it looks at the stateless.  ",
    "start": "476280",
    "end": "481920"
  },
  {
    "text": "And then we're going to go into the stateful \nrule evaluation. And I don't have any rule  ",
    "start": "482580",
    "end": "488939"
  },
  {
    "text": "groups here yet, and we're going to add some \nreal groups that I already have created.  ",
    "start": "488940",
    "end": "494700"
  },
  {
    "text": "My Stateless rule group is just going to allow \nme ICMP it's going to let me ping to that server  ",
    "start": "495420",
    "end": "500640"
  },
  {
    "text": "to verify connectivity. And then my Stateful rule \ngroup is what's going to allow the TLS and so on.  ",
    "start": "500640",
    "end": "506820"
  },
  {
    "text": "If I look at my Firewall details. Again, I'll \nsee my policy. So here's my Firewall policy,  ",
    "start": "507660",
    "end": "515159"
  },
  {
    "text": "here's my Associated VPC, and my Firewall subnet.  ",
    "start": "515160",
    "end": "518879"
  },
  {
    "text": "And we'll go ahead and set up logging \nhere real quick. We're going to Alert,  ",
    "start": "520620",
    "end": "525180"
  },
  {
    "text": "and we're going to send it to a Cloud Watch \nlog group. And then we'll just send it to our  ",
    "start": "525780",
    "end": "530280"
  },
  {
    "text": "Network Firewall Demo, Firewall Log Group that \nwe already have created, but I just like to have  ",
    "start": "530280",
    "end": "536340"
  },
  {
    "text": "my logging configured ahead of time. Okay. What I \nneed to do is I need to enable my TLS inspection,  ",
    "start": "537660",
    "end": "545040"
  },
  {
    "text": "and the reason I need to do this is because \nI can't apply TLS inspection to an existing  ",
    "start": "545040",
    "end": "551519"
  },
  {
    "text": "firewall policy. So I'm going to go TLS inspection \nconfiguration we're going to enable it we're going  ",
    "start": "551520",
    "end": "557280"
  },
  {
    "text": "to add a certificate and I've already imported the \ncertificate that we have installed on the server  ",
    "start": "557280",
    "end": "562860"
  },
  {
    "text": "that was issued from a public SSL provider, or TLS \ncert provider. So we have that certificate imported  ",
    "start": "563400",
    "end": "570300"
  },
  {
    "text": "in AWS Certificate Manager, or ACM. So I'm going \nto import that. Click on next. We'll give it a name.",
    "start": "570300",
    "end": "576720"
  },
  {
    "text": "Inspection.",
    "start": "578760",
    "end": "579600"
  },
  {
    "text": "And we'll put a space there for the \ndescription. And then we're going to  ",
    "start": "584220",
    "end": "588120"
  },
  {
    "text": "define the Scope. Now this is defining what the \nfirewall is supposed to decrypt for inspection.  ",
    "start": "588120",
    "end": "593580"
  },
  {
    "text": "So any source to any destination, but rather \nthan do any port we're only going to do Port  ",
    "start": "594420",
    "end": "599760"
  },
  {
    "text": "443 because that's where we expect to see \nour TLS traffic. Okay. So we'll go ahead and  ",
    "start": "599760",
    "end": "606240"
  },
  {
    "text": "set that up. We're going to click on Add \nconfiguration, that scope was then added. ",
    "start": "606240",
    "end": "610980"
  },
  {
    "text": "And then we'll click on next. We're going to leave \nthe KMS key configuration at its default values.  ",
    "start": "611640",
    "end": "618540"
  },
  {
    "text": "Click on next. We're not going to add any \ntags. We'll click on next we get to review  ",
    "start": "619200",
    "end": "623880"
  },
  {
    "text": "the configuration and click on create TLS \ninspection configuration, and now we have  ",
    "start": "623880",
    "end": "631320"
  },
  {
    "text": "a TLS inspection configuration that we can attach \nto a policy. Again, the policy has to be a brand new  ",
    "start": "631320",
    "end": "636900"
  },
  {
    "text": "policy we cannot attach it to a existing policy. \nSo let's just go look at my rule groups real quick.  ",
    "start": "636900",
    "end": "643980"
  },
  {
    "text": "Here's my two rule groups, there's a stateful rule \ngroup and a stateless rule group. Let's take a look  ",
    "start": "645060",
    "end": "650760"
  },
  {
    "text": "at the stateless. The stateless rule group is \nallowing ICMP traffic, we can see that's a pass.  ",
    "start": "650760",
    "end": "656700"
  },
  {
    "text": "And then if we look back at our stateful rule \ngroup, our stateful rule group makes use of Suricata  ",
    "start": "657660",
    "end": "666420"
  },
  {
    "text": "rules. We see those here and we're passing both \nHTTP and TLS traffic to our our demo website.  ",
    "start": "666420",
    "end": "676320"
  },
  {
    "text": "Then we're denying any other TCP traffic. Okay. \nSo those are the firewall rule groups that are  ",
    "start": "676320",
    "end": "683220"
  },
  {
    "text": "already created let's go to the firewall policies. \nNow here's the TLS firewall demo policy that was  ",
    "start": "683220",
    "end": "689160"
  },
  {
    "text": "created when I set up that firewall. So if I \nlook at this and I look at my TLS inspection  ",
    "start": "689160",
    "end": "694139"
  },
  {
    "text": "configuration there's nothing configured. I can't add a TLS inspection configuration to  ",
    "start": "694140",
    "end": "699660"
  },
  {
    "text": "a policy that was created. Now this policy was \ncreated when I set up the firewall. So what I  ",
    "start": "699660",
    "end": "704879"
  },
  {
    "text": "need to do is I need to make some adjustments to \nmy firewall policy that's attached to the firewall.  ",
    "start": "704880",
    "end": "712200"
  },
  {
    "text": "So I'm going to create a brand new firewall \npolicy, I'll call this TLS inspection policy.",
    "start": "712200",
    "end": "721260"
  },
  {
    "text": "And we'll do a space there, and a space there.  ",
    "start": "726000",
    "end": "728640"
  },
  {
    "text": "And we can just leave that at \nthe default. We'll click on next.  ",
    "start": "729660",
    "end": "734279"
  },
  {
    "text": "We're going to leave the stateless default actions \nalone, so that after we look at the stateless rules  ",
    "start": "736140",
    "end": "741540"
  },
  {
    "text": "we forward to the stateful engine. And then for the \nstateful rule evaluation, we're going to change the  ",
    "start": "741540",
    "end": "747420"
  },
  {
    "text": "rule order to default. We'll let the rules engine \ndetermine the evaluation order of the rules.  ",
    "start": "747420",
    "end": "751980"
  },
  {
    "text": "And then we're going to come here and \nwe're going to add a stateless rule  ",
    "start": "752940",
    "end": "755760"
  },
  {
    "text": "group, and that's going to be the rule group \nthat we just looked at. Then we're going to  ",
    "start": "755760",
    "end": "759660"
  },
  {
    "text": "add a stateful rule group, and that's going to be \nthe stateful rule group that we just looked at.  ",
    "start": "759660",
    "end": "763379"
  },
  {
    "text": "We're going to say next. We're not going \nto do any KMS key configuration, so we'll  ",
    "start": "764220",
    "end": "770220"
  },
  {
    "text": "click next. Now we're going to add that TLS \ninspection configuration that we just built.  ",
    "start": "770220",
    "end": "775079"
  },
  {
    "text": "So we'll add that to this firewall policy. \nWe're going to not add any tags we review.  ",
    "start": "776040",
    "end": "781380"
  },
  {
    "text": "And then we click create firewall policy. So now \nwe have two policies, our TLS firewall demo policy  ",
    "start": "782280",
    "end": "788700"
  },
  {
    "text": "which was created when we built the firewall in \nthe first place, and our TLS inspection policy  ",
    "start": "788700",
    "end": "794220"
  },
  {
    "text": "which we just created from scratch. And now we \nneed to go replace the policy that's attached  ",
    "start": "794220",
    "end": "799680"
  },
  {
    "text": "to our firewall. So I'm going to go back to \nFirewalls. I'm going to pick that AWS Firewall demo.  ",
    "start": "799680",
    "end": "805860"
  },
  {
    "text": "We're going to come down \nhere to our Firewall details.  ",
    "start": "807180",
    "end": "810240"
  },
  {
    "text": "Here's our Associated policy, TLS Firewall demo \npolicy. We're going to click on Edit, and I'm  ",
    "start": "811200",
    "end": "818460"
  },
  {
    "text": "going to come down to the associated policy and \nwe'll change it to the policy with TLS inspection.",
    "start": "818460",
    "end": "823260"
  },
  {
    "text": "So now we have the rule group attached with TLS \ninspection, and it's associated to the correct VPC.  ",
    "start": "825360",
    "end": "831300"
  },
  {
    "text": "Let's just take a look at our route \ntables and make sure that our route  ",
    "start": "832020",
    "end": "835080"
  },
  {
    "text": "tables all look the way that they should \nlook. So if I go here to Route tables.  ",
    "start": "835080",
    "end": "840060"
  },
  {
    "text": "I have my protected route table, and if I look at \nthe routes in my protected route table I don't  ",
    "start": "841740",
    "end": "849180"
  },
  {
    "text": "have a default route to go anywhere. So I need to \nedit my routes and I need to add a default route,  ",
    "start": "849180",
    "end": "855360"
  },
  {
    "text": "and I need that default to go to \nmy firewall endpoint. So to go there,",
    "start": "856200",
    "end": "864540"
  },
  {
    "text": "we pick Gateway load balancer endpoint, and we \npicked that \"be8f\" endpoint. So my firewall endpoint  ",
    "start": "868500",
    "end": "875820"
  },
  {
    "text": "makes use of the Gateway load balancer endpoints. \nOkay. So I'm going to save my changes there. ",
    "start": "875820",
    "end": "881220"
  },
  {
    "text": "So now I'm pointing to the right place. My Subnet \nassociations are the protected subnet. So all of  ",
    "start": "882360",
    "end": "887160"
  },
  {
    "text": "that looks good. Now let's go back to our route \ntables again. Let's take a look at our Internet  ",
    "start": "887160",
    "end": "894720"
  },
  {
    "text": "Gateway Routing table, or IGW Route table. If I look \nat my routes there, 10.0.0.0/16 is local, but I don't  ",
    "start": "894720",
    "end": "906899"
  },
  {
    "text": "have a route from the Internet Gateway into the \nFirewall VPC. So I'm going to Edit the routes here.  ",
    "start": "906900",
    "end": "913020"
  },
  {
    "text": "And I'm going to Add a route to 10.0.0.0/24. \nAnd I'm going to end, end up sending this into",
    "start": "914400",
    "end": "925440"
  },
  {
    "text": "that same endpoint.",
    "start": "930360",
    "end": "931500"
  },
  {
    "text": "Okay. So that's routing into the firewall VPC, \nthe protected is routing into the firewall VPC.  ",
    "start": "934740",
    "end": "941760"
  },
  {
    "text": "And then let's take a look at one more route table. \nAnd that's going to be our firewall routing table.  ",
    "start": "942540",
    "end": "947880"
  },
  {
    "text": "I look at my routes there, it's got a \ndefault route to the IGW which is correct.  ",
    "start": "948780",
    "end": "953340"
  },
  {
    "text": "The only other thing I need to look at is \nmy Subnet associations, and if I edit my  ",
    "start": "954180",
    "end": "960420"
  },
  {
    "text": "Subnet associations this should be associated \nwith the firewall subnet and I'll save that.",
    "start": "960420",
    "end": "964320"
  },
  {
    "text": "Okay. So at this point we should have \nconnectivity through the firewall we  ",
    "start": "966360",
    "end": "971220"
  },
  {
    "text": "should be allowing ICMP and we should be \nallowing TLS inspection and it should be  ",
    "start": "971220",
    "end": "976199"
  },
  {
    "text": "able to inspect it. So let's go over to our \nterminal and let's just see it from the  ",
    "start": "976920",
    "end": "981480"
  },
  {
    "text": "outside we have ICMP connectivity going through \nthat first step which is those stateful rules.  ",
    "start": "981480",
    "end": "986760"
  },
  {
    "text": "And here we are on our terminal \nwe're just going to hit ping,  ",
    "start": "988260",
    "end": "991620"
  },
  {
    "text": "and we have ICMP connectivity at this point \nto our demo environment. So we'll stop that.  ",
    "start": "992640",
    "end": "1000800"
  },
  {
    "text": "Now let's go ahead and open up a web browser and \nlet's see if our web browser has connectivity.",
    "start": "1001880",
    "end": "1007160"
  },
  {
    "text": "Okay. So here we are in a private tab in \nFirefox and we're just going to paste in  ",
    "start": "1009200",
    "end": "1012980"
  },
  {
    "text": "the URL for our demo site and hit enter. And we are \nconnected to that demo site, connection is secure.  ",
    "start": "1014060",
    "end": "1021920"
  },
  {
    "text": "If we go to more information, we now see the \ncertificate, and we can see that it is verified  ",
    "start": "1022760",
    "end": "1028400"
  },
  {
    "text": "by a public SSL provider, TLS certificate \nprovider. And we could go in and we could  ",
    "start": "1028400",
    "end": "1035360"
  },
  {
    "text": "view that certificate in more detail, and we \ncan see the details of it if we wanted to. ",
    "start": "1035360",
    "end": "1039559"
  },
  {
    "text": "Okay. So let's go ahead and close \nthis. Let's go back to our AWS console.  ",
    "start": "1041360",
    "end": "1045920"
  },
  {
    "text": "Now that we're back at our AWS \nconsole, let's go down to our firewall.",
    "start": "1047240",
    "end": "1051440"
  },
  {
    "text": "There's our firewall demo.",
    "start": "1054200",
    "end": "1055700"
  },
  {
    "text": "And if we scroll down and we select Monitoring.",
    "start": "1057860",
    "end": "1060559"
  },
  {
    "text": "We can now see those stateful packets that \nare coming into the firewall and those packets  ",
    "start": "1064760",
    "end": "1069860"
  },
  {
    "text": "were passed. Well there you have it, a simple \nconfiguration for an extremely powerful capability. ",
    "start": "1069860",
    "end": "1077179"
  },
  {
    "text": "Now as we mentioned in the onset deep packet \ninspection has been a challenge for many  ",
    "start": "1078080",
    "end": "1083120"
  },
  {
    "text": "customers due to the fact that it's process \nintensive, and other advanced features that  ",
    "start": "1083120",
    "end": "1088640"
  },
  {
    "text": "many network perimeter firewalls perform. However, that's not the case with AWS Network Firewall as  ",
    "start": "1088640",
    "end": "1095480"
  },
  {
    "text": "we've demonstrated the configuration is simple, \nand once enabled you'll have the visibility into  ",
    "start": "1095480",
    "end": "1101240"
  },
  {
    "text": "TLS encrypted traffic that you need. Please check \nout the links in the description to learn more.  ",
    "start": "1101240",
    "end": "1107480"
  },
  {
    "text": "Thank you for watching this feature demo video.",
    "start": "1107480",
    "end": "1110120"
  }
]