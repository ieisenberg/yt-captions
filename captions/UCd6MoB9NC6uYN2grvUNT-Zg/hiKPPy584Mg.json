[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "thank you very much for coming my name is Perry Wald this is my colleague Tom Adamski we are solutions architects in",
    "start": "149",
    "end": "7410"
  },
  {
    "text": "AWS we've come here today to talk to you about network fundamentals now this is a",
    "start": "7410",
    "end": "13259"
  },
  {
    "text": "level 200 session so just a little bit of a level set here we're talking about",
    "start": "13259",
    "end": "18960"
  },
  {
    "text": "a basic level of networking we're looking at talking about networking from",
    "start": "18960",
    "end": "24119"
  },
  {
    "text": "IP networks addresses routing how to build a V PC if you are familiar with",
    "start": "24119",
    "end": "30300"
  },
  {
    "text": "networking but have never used AWS or familiar with AWS but never done networking in AWS this is the level you",
    "start": "30300",
    "end": "37620"
  },
  {
    "text": "want if you've already done a lot of deployment inside AWS then this is probably a little bit basic for you so",
    "start": "37620",
    "end": "45629"
  },
  {
    "start": "45000",
    "end": "80000"
  },
  {
    "text": "let's get started there's the internet and there's AWS and people tend to use",
    "start": "45629",
    "end": "51629"
  },
  {
    "text": "AWS as if it were a kind of data center a virtual data center as a result they",
    "start": "51629",
    "end": "58350"
  },
  {
    "text": "deploy things into that data the same kind of stuff as you deploy into your data center on-premise they might be",
    "start": "58350",
    "end": "64830"
  },
  {
    "text": "easy to instances that hosts they might be data bases they might be EMR clusters",
    "start": "64830",
    "end": "70500"
  },
  {
    "text": "that analytics clusters those things need to live somewhere in a data center",
    "start": "70500",
    "end": "76049"
  },
  {
    "text": "and they typically need to talk to the internet so for that we have something",
    "start": "76049",
    "end": "81390"
  },
  {
    "start": "80000",
    "end": "138000"
  },
  {
    "text": "called a V PC now when you have gettin accounts you get a default V PC and that",
    "start": "81390",
    "end": "87509"
  },
  {
    "text": "default view PC gives you a lot of the things that you need to build your networking in AWS it gives you I P",
    "start": "87509",
    "end": "94530"
  },
  {
    "text": "ranges something called a cider range we're going to talk about that it gives you subnets and availability zones for",
    "start": "94530",
    "end": "101189"
  },
  {
    "text": "resilience we'll touch on that it gives you rooters to be able to route out to the internet because that's quite useful",
    "start": "101189",
    "end": "107460"
  },
  {
    "text": "and it gives you things like security groups and network access lists so I'm going to refer to them as knackles to be",
    "start": "107460",
    "end": "114270"
  },
  {
    "text": "able to provide security now the default V PC is a good starting place for when",
    "start": "114270",
    "end": "120869"
  },
  {
    "text": "you start with AWS but what we're going to spend the first 15-20 minutes talking about is how you build all those",
    "start": "120869",
    "end": "128099"
  },
  {
    "text": "components in the V PC yourself and we're going to hand over to Tom to talk about some of the more complex",
    "start": "128099",
    "end": "133660"
  },
  {
    "text": "components that come up with networking so with that in mind I'm going to talk",
    "start": "133660",
    "end": "140319"
  },
  {
    "start": "138000",
    "end": "147000"
  },
  {
    "text": "about IP addressing I'm going to talk about creating subnets routing and",
    "start": "140319",
    "end": "145690"
  },
  {
    "text": "putting some security around it let's start with IP addressing so this address",
    "start": "145690",
    "end": "152920"
  },
  {
    "start": "147000",
    "end": "264000"
  },
  {
    "text": "170 to 3100 slash 16 this is what you start with in your network in your",
    "start": "152920",
    "end": "159430"
  },
  {
    "text": "default V PC and let's just look at that a second that's a useful address I",
    "start": "159430",
    "end": "164470"
  },
  {
    "text": "didn't just randomly choose that it splits into two halves one 7231",
    "start": "164470",
    "end": "169600"
  },
  {
    "text": "describes the network half and 0.0 describes the host the actual system on",
    "start": "169600",
    "end": "175540"
  },
  {
    "text": "the network once 1731 comes from a range called the RFC 1918 range I'm going to",
    "start": "175540",
    "end": "182170"
  },
  {
    "text": "pass over a lot of these things I'm not going to go into too much detail but these are all available to look on the Internet the RFC 1918 range doesn't",
    "start": "182170",
    "end": "190540"
  },
  {
    "text": "exist anywhere on the internet it's a private IP range which means that if you use it in your V PC you're not going to",
    "start": "190540",
    "end": "198070"
  },
  {
    "text": "conflict with anything on the internet and that's quite important because if you conflict with something on the",
    "start": "198070",
    "end": "203590"
  },
  {
    "text": "internet you can't talk to that thing no conflicting is also important on premise",
    "start": "203590",
    "end": "209530"
  },
  {
    "text": "so if you're connecting your on premise you're connecting to other V pcs with in",
    "start": "209530",
    "end": "214810"
  },
  {
    "text": "AWS then you need to not be using the same address everywhere you need to be",
    "start": "214810",
    "end": "219970"
  },
  {
    "text": "using a different set of Sider ranges for each V PC so that you don't overlap",
    "start": "219970",
    "end": "226299"
  },
  {
    "text": "and that's going to be quite important because overlapping addresses can't talk to each other easily so just to touch on",
    "start": "226299",
    "end": "233590"
  },
  {
    "text": "that slush 16 that / 16 really means 65 thousand odd addresses that's a great",
    "start": "233590",
    "end": "240160"
  },
  {
    "text": "place to start lots of space for you to expand and grow what you're running in AWS but if you run within a business",
    "start": "240160",
    "end": "247510"
  },
  {
    "text": "that has a networking department it's quite normal that they may ask you to use a smaller range so when choosing the",
    "start": "247510",
    "end": "253660"
  },
  {
    "text": "range when choosing the size of the network have a think about how big how many systems you're going to run in that",
    "start": "253660",
    "end": "259450"
  },
  {
    "text": "environment and choose the the subnet accordingly so that was a side arranged that's a",
    "start": "259450",
    "end": "266320"
  },
  {
    "start": "264000",
    "end": "389000"
  },
  {
    "text": "range of addresses you're going to use inside the network but what do you do",
    "start": "266320",
    "end": "271660"
  },
  {
    "text": "with those well let's start again with that VP see that virtual data center as",
    "start": "271660",
    "end": "276970"
  },
  {
    "text": "I've talked about it in the cloud that has the side arranged and we want to break that up into availability zones",
    "start": "276970",
    "end": "283810"
  },
  {
    "text": "now an availability zone in this case I've highlighted dublin's 3 availability",
    "start": "283810",
    "end": "289389"
  },
  {
    "text": "zones availability zones are separate risk domains each of them are one or more data centers those data centers are",
    "start": "289389",
    "end": "296169"
  },
  {
    "text": "on different power grids they have different flood profiles we do this so that if something were to affect an",
    "start": "296169",
    "end": "302800"
  },
  {
    "text": "availability zone it wouldn't affect multiple availability zones that's really good for resilience but in those",
    "start": "302800",
    "end": "310000"
  },
  {
    "text": "availability zones you need to put subnets so that you can talk one to another",
    "start": "310000",
    "end": "315070"
  },
  {
    "text": "the subnets in this case are subdivisions of that side arranged in",
    "start": "315070",
    "end": "320979"
  },
  {
    "text": "this case one 70/30 1.0.1 and dot-to-dot",
    "start": "320979",
    "end": "326760"
  },
  {
    "text": "something / 24 in this case I'm using the first three numbers of the IP address to denote the actual network and",
    "start": "326760",
    "end": "334120"
  },
  {
    "text": "I'm using the last number to denote the machine and in this case each subnet can",
    "start": "334120",
    "end": "339430"
  },
  {
    "text": "contain about 250 addresses now I mentioned all of these IP things and",
    "start": "339430",
    "end": "346030"
  },
  {
    "text": "these are all ipv4 I'm going to brush fairly quickly over ipv6 but basically",
    "start": "346030",
    "end": "351160"
  },
  {
    "text": "we're running out of addresses so ipv6 came along which has many more addresses",
    "start": "351160",
    "end": "356200"
  },
  {
    "text": "it comes from something it comes from a group big enough for everyone to have a unique address but those addresses don't",
    "start": "356200",
    "end": "364150"
  },
  {
    "text": "exist on their own in AWS we run something called a dual stack which",
    "start": "364150",
    "end": "370270"
  },
  {
    "text": "means those addresses are overlaid on top of the same instances that your ipv4",
    "start": "370270",
    "end": "376180"
  },
  {
    "text": "addresses are so if you start to use ipv6 every network and every instance",
    "start": "376180",
    "end": "381789"
  },
  {
    "text": "will have both an ipv4 and an ipv6 address",
    "start": "381789",
    "end": "388380"
  },
  {
    "text": "great so that's a lot about addressing but now we're going to talk about talking between addresses none of this",
    "start": "388719",
    "end": "395139"
  },
  {
    "text": "is about security yet that will come later to talk between addresses we need",
    "start": "395139",
    "end": "400269"
  },
  {
    "text": "to be able to route and the routing or a route table is a set of rules that tells",
    "start": "400269",
    "end": "406599"
  },
  {
    "text": "the system's tells us how to move packets around where to put the next",
    "start": "406599",
    "end": "411819"
  },
  {
    "text": "packet now every default VPC has a default route table and that default",
    "start": "411819",
    "end": "417759"
  },
  {
    "text": "route table simply says everything in my side arrange is inside my V PC but you",
    "start": "417759",
    "end": "424239"
  },
  {
    "text": "can assign different route tables to different subnets and we're going to look at how to do that in a minute but",
    "start": "424239",
    "end": "430869"
  },
  {
    "text": "before we do that let's just have a look at where you configure route tables on bbc's you go to the route table tag and",
    "start": "430869",
    "end": "438429"
  },
  {
    "text": "you hit my clicker is not working you hit the route table tab and you will get",
    "start": "438429",
    "end": "444999"
  },
  {
    "text": "a routes table and as it shows up there 1 7 to 3100 slash 16 is local that means",
    "start": "444999",
    "end": "452199"
  },
  {
    "text": "anything in my side arranged in any of the AZ's will talk to one another but",
    "start": "452199",
    "end": "458289"
  },
  {
    "start": "458000",
    "end": "684000"
  },
  {
    "text": "what about the internet we said right at the beginning of this that it's really useful to talk to the Internet so the",
    "start": "458289",
    "end": "465579"
  },
  {
    "text": "easiest way to work through this is to do some examples we start with your",
    "start": "465579",
    "end": "473019"
  },
  {
    "text": "virtual data center your V PC and the internet now there are three things that",
    "start": "473019",
    "end": "478539"
  },
  {
    "text": "you need in order to communicate with the Internet you need to have some form of connection",
    "start": "478539",
    "end": "484389"
  },
  {
    "text": "to the Internet you need to have a route to the internet and you need to have a public address and if you recall I said",
    "start": "484389",
    "end": "491229"
  },
  {
    "text": "that 11731 was a private address it doesn't exist on the Internet so in this",
    "start": "491229",
    "end": "496929"
  },
  {
    "text": "case we created a subnet inside that V PC and we say that that subnet is a",
    "start": "496929",
    "end": "503529"
  },
  {
    "text": "public subnet now public subnet merely means when I launch an instance that",
    "start": "503529",
    "end": "509889"
  },
  {
    "text": "instance as well as getting its private IP address it gets a public IP address",
    "start": "509889",
    "end": "515110"
  },
  {
    "text": "in this case 198.50 m dot something now that's great that deals with number one and",
    "start": "515110",
    "end": "521649"
  },
  {
    "text": "public IP address number two I need a connection to the Internet so what I do",
    "start": "521649",
    "end": "526749"
  },
  {
    "text": "is I create an IG W an Internet gateway and I connect that to my V PC now I have",
    "start": "526749",
    "end": "533319"
  },
  {
    "text": "a connection that's two out of three not bad the third thing I need is it route and",
    "start": "533319",
    "end": "541720"
  },
  {
    "text": "in this case the 0 0 0 / 0 that means default route that is telling anything",
    "start": "541720",
    "end": "548170"
  },
  {
    "text": "in my subnet that the default way of getting out of the subnet the way to get out to any address that isn't inside the",
    "start": "548170",
    "end": "554920"
  },
  {
    "text": "subnet is via the igw now that creates something called both inbound and",
    "start": "554920",
    "end": "560980"
  },
  {
    "text": "outbound internet access what I've done is I've created a construct where my",
    "start": "560980",
    "end": "566290"
  },
  {
    "text": "198.50 on address can talk to anything on the Internet and anything on the",
    "start": "566290",
    "end": "571509"
  },
  {
    "text": "Internet can talk to that one 9 851 address we will put security in later on",
    "start": "571509",
    "end": "576579"
  },
  {
    "text": "in this case it's a very typical setup for a web server but another common",
    "start": "576579",
    "end": "582220"
  },
  {
    "text": "setup that people want to use is if I want to go out to the internet maybe for",
    "start": "582220",
    "end": "587559"
  },
  {
    "text": "a patch update maybe for an API call but I don't want the Internet to get back to my systems by default well in that case",
    "start": "587559",
    "end": "595120"
  },
  {
    "text": "I create another subnet but I denote this one as a private subnet not a",
    "start": "595120",
    "end": "600610"
  },
  {
    "text": "public subnet private subnet just means stick with the private range don't give",
    "start": "600610",
    "end": "606699"
  },
  {
    "text": "me a public address as well well that means I need something to give me access",
    "start": "606699",
    "end": "612279"
  },
  {
    "text": "to the Internet and in this case the thing that gives me access to the Internet is a service called in that",
    "start": "612279",
    "end": "617980"
  },
  {
    "text": "gateway that Gateway is a one-way valve it allows it allows systems inside AWS",
    "start": "617980",
    "end": "625660"
  },
  {
    "text": "inside your V PC to get out to the internet but it only allows responses to",
    "start": "625660",
    "end": "631269"
  },
  {
    "text": "requests that have come from inside if a request comes from the internet and tries to get through the NAT gateway it",
    "start": "631269",
    "end": "637869"
  },
  {
    "text": "will get rejected the NAT gateway is a one-way valve that only allows responses",
    "start": "637869",
    "end": "643179"
  },
  {
    "text": "to requests from inside and in this case I add a default route zero zero zero but",
    "start": "643179",
    "end": "651300"
  },
  {
    "text": "I points it towards mine at Gateway I don't point it towards my internet gateway this creates something called",
    "start": "651300",
    "end": "658100"
  },
  {
    "text": "outbound internet access systems can get out hosts instances can get out to the",
    "start": "658100",
    "end": "664080"
  },
  {
    "text": "internet but the Internet can only respond to requests now so far in a very",
    "start": "664080",
    "end": "670830"
  },
  {
    "text": "short space of time we've talked about IP addresses we've talked about routing",
    "start": "670830",
    "end": "677460"
  },
  {
    "text": "and we've talked about internet and that gateways but we haven't talked about",
    "start": "677460",
    "end": "682530"
  },
  {
    "text": "security so we're going to talk about security next and I'm going to cover",
    "start": "682530",
    "end": "687780"
  },
  {
    "start": "684000",
    "end": "862000"
  },
  {
    "text": "three items I'm going to cover security groups network access control lists",
    "start": "687780",
    "end": "693090"
  },
  {
    "text": "knackles and I'm going to cover flow logs so let's start pardon me",
    "start": "693090",
    "end": "698820"
  },
  {
    "text": "let's start with security groups now security groups are AWS is distributed",
    "start": "698820",
    "end": "705720"
  },
  {
    "text": "firewall and the most important thing to know about a distributed firewall or in fact most firewalls is that they are",
    "start": "705720",
    "end": "712920"
  },
  {
    "text": "what's called States full that means that a request that comes from one",
    "start": "712920",
    "end": "718140"
  },
  {
    "text": "direction automatically sets up permissions for the response to that",
    "start": "718140",
    "end": "723810"
  },
  {
    "text": "request from the other direction and that saves you a lot of trouble because it saves you having to set up a set of",
    "start": "723810",
    "end": "729990"
  },
  {
    "text": "rules for inbound and outbound access so let's just look at what firewalls do",
    "start": "729990",
    "end": "736290"
  },
  {
    "text": "what security groups do we'll start with of a PC and we'll start",
    "start": "736290",
    "end": "743649"
  },
  {
    "text": "with seven six seven instances inside that VP say I'm going to choose that",
    "start": "743649",
    "end": "748930"
  },
  {
    "text": "four of those instances our web servers and stuff on the internet wants to talk",
    "start": "748930",
    "end": "754240"
  },
  {
    "text": "to those web servers and three of those instances are back-end servers and the",
    "start": "754240",
    "end": "760089"
  },
  {
    "text": "web servers want to talk to the back-end servers so let's put them in some logical groups in this case I'm going to",
    "start": "760089",
    "end": "767139"
  },
  {
    "text": "put them in on my web servers group that's the top one and I'm going to put them in in my backends group that's the",
    "start": "767139",
    "end": "773379"
  },
  {
    "text": "bottom one now let's lay some rules over these for the my web servers group I want a rule",
    "start": "773379",
    "end": "779649"
  },
  {
    "text": "that says allow web traffic from anywhere that's sort of a sensible thing for a web server but for the back-end",
    "start": "779649",
    "end": "786879"
  },
  {
    "text": "group I want a rule that says only allow communication from my web servers I",
    "start": "786879",
    "end": "793000"
  },
  {
    "text": "don't want anything else to talk to those back-end servers that's security",
    "start": "793000",
    "end": "798550"
  },
  {
    "text": "groups let's look at how you configure them well you go into security groups on",
    "start": "798550",
    "end": "804339"
  },
  {
    "text": "the V PC environment and you create them and in this case I created an inbound",
    "start": "804339",
    "end": "811300"
  },
  {
    "text": "rule that says port 80 HTTP web traffic is allowed from anywhere and I've",
    "start": "811300",
    "end": "817629"
  },
  {
    "text": "assigned that to the my web servers group so the my backends group I have a",
    "start": "817629",
    "end": "824079"
  },
  {
    "text": "rule that says traffic is allowed from the my web servers group and in fact if you look I don't give IP addresses I",
    "start": "824079",
    "end": "831399"
  },
  {
    "text": "give a specific security group ID and that ID matches the ID of the my web",
    "start": "831399",
    "end": "838000"
  },
  {
    "text": "servers group this is a really important feature of security groups especially when you start scaling servers up and",
    "start": "838000",
    "end": "844569"
  },
  {
    "text": "down you don't have to worry about IP addresses of the servers if the server's",
    "start": "844569",
    "end": "849850"
  },
  {
    "text": "live in the security group then you refer to the security group and that is the decision that we make about",
    "start": "849850",
    "end": "855699"
  },
  {
    "text": "firewalling now that didn't move forwards now I've",
    "start": "855699",
    "end": "862680"
  },
  {
    "start": "862000",
    "end": "932000"
  },
  {
    "text": "talked about security groups and I'm going to touch on knackles why I say I'm",
    "start": "862680",
    "end": "868140"
  },
  {
    "text": "going to touch on that cause it's because really what I want to do is I want to highlight the difference between",
    "start": "868140",
    "end": "873510"
  },
  {
    "text": "a security group and the knuckle security groups estate 'fl and they're really firewalls knackles are just",
    "start": "873510",
    "end": "880850"
  },
  {
    "text": "network control lists they really should be used only for very coarse-grained decisions like I don't want any traffic",
    "start": "880850",
    "end": "888870"
  },
  {
    "text": "from that network or I only want to allow traffic from this particular IP range and most importantly they're",
    "start": "888870",
    "end": "895950"
  },
  {
    "text": "stateless just because you've allowed traffic in one direction doesn't mean that the traffic in the other direction",
    "start": "895950",
    "end": "902160"
  },
  {
    "text": "is permitted in fact if you don't explicitly allow things in both directions you're going to start getting",
    "start": "902160",
    "end": "908160"
  },
  {
    "text": "into difficulties knackles should be relatively short if you start finding",
    "start": "908160",
    "end": "913290"
  },
  {
    "text": "that you've built knackles with long complex sets of rules around ports and IP addresses you've probably started",
    "start": "913290",
    "end": "920070"
  },
  {
    "text": "configuring security groups instead but we're using knackles so please PLEASE",
    "start": "920070",
    "end": "926130"
  },
  {
    "text": "knackles are coarse-grained controls and they only work around the edges of networks now we've talked about the",
    "start": "926130",
    "end": "934290"
  },
  {
    "start": "932000",
    "end": "1087000"
  },
  {
    "text": "tools for creating security for controlling flow of data but we haven't talked about how you look at it and",
    "start": "934290",
    "end": "940860"
  },
  {
    "text": "that's flow logs flow logs work at a VPC",
    "start": "940860",
    "end": "946740"
  },
  {
    "text": "level at a subnet level or at an instance level I can inspect any of",
    "start": "946740",
    "end": "953490"
  },
  {
    "text": "those three items or all of them and I write my output to either an s3 bucket",
    "start": "953490",
    "end": "959520"
  },
  {
    "text": "or a cloud watch log it's really useful for providing visibility into what's",
    "start": "959520",
    "end": "967140"
  },
  {
    "text": "going on on my network troubleshooting if I've set up the wrong rule or analyzing traffic flows and I stress",
    "start": "967140",
    "end": "973710"
  },
  {
    "text": "analyzing traffic flows because flow logs did not contain the payloads data",
    "start": "973710",
    "end": "979500"
  },
  {
    "text": "of your packets they only can't contain the description about the packets the addressing etc the metadata and we're",
    "start": "979500",
    "end": "986790"
  },
  {
    "text": "going to look at that in a minute but just before we look at that let's look at how we configure them",
    "start": "986790",
    "end": "992070"
  },
  {
    "text": "we go to a VPC we click on the flow logs tab we create a flow log and we say",
    "start": "992070",
    "end": "998850"
  },
  {
    "text": "whether the destination is s3 or cloud watch it really is that simple now what",
    "start": "998850",
    "end": "1005060"
  },
  {
    "text": "does a flow log look like well for anybody who's ever done network troubleshooting its page of numbers but",
    "start": "1005060",
    "end": "1012470"
  },
  {
    "text": "what I'm going to do is I'm going to dive down into one of those and we're just going to translate it into English now I have blurred out a section because",
    "start": "1012470",
    "end": "1019970"
  },
  {
    "text": "that came from my account every flow log also contains the account that the traffic was seen on and that's quite",
    "start": "1019970",
    "end": "1026390"
  },
  {
    "text": "useful if you've got many accounts in this case the flow log tells me the",
    "start": "1026390",
    "end": "1032390"
  },
  {
    "text": "network interface that the data was seen on the source IP address and the source",
    "start": "1032390",
    "end": "1038688"
  },
  {
    "text": "port this is a public IP address in this case and it's coming from a high number port so I know that this is from public",
    "start": "1038689",
    "end": "1046069"
  },
  {
    "text": "address 210 blah blah blah it has the destination IP address and port in this",
    "start": "1046069",
    "end": "1051799"
  },
  {
    "text": "case the destination IP address is inside my V PC and it's port 22 which is",
    "start": "1051799",
    "end": "1057380"
  },
  {
    "text": "SSH it has the number of bytes that was and it tells me whether that was an",
    "start": "1057380",
    "end": "1062570"
  },
  {
    "text": "acceptor or eject now that gives me almost my entire sentence but I have to work one bit out I work out that if it's",
    "start": "1062570",
    "end": "1070159"
  },
  {
    "text": "destined for SSH inside my V PC then this was inbound data from the public",
    "start": "1070159",
    "end": "1077540"
  },
  {
    "text": "internet to SSH that's really useful if I'm not working I can put a flow log on",
    "start": "1077540",
    "end": "1083480"
  },
  {
    "text": "and see why traffic is being blocked now I very very quickly talked about all",
    "start": "1083480",
    "end": "1089720"
  },
  {
    "start": "1087000",
    "end": "1166000"
  },
  {
    "text": "of the components that go into building a default V PC and I'd strongly encourage you to play with a default V",
    "start": "1089720",
    "end": "1096799"
  },
  {
    "text": "PC but then to set this up yourself because when you set it up yourself you get to choose what all of the variables",
    "start": "1096799",
    "end": "1103429"
  },
  {
    "text": "should be I haven't mentioned DNS and in the last minute I have I'm going to mention DNS inside AWS we provide you",
    "start": "1103429",
    "end": "1111980"
  },
  {
    "text": "with DNS services as well those services are switched on by default although you",
    "start": "1111980",
    "end": "1117409"
  },
  {
    "text": "can switch them off and they provides two things they provide DNS resolution so that your instances inside a V PC",
    "start": "1117409",
    "end": "1125840"
  },
  {
    "text": "can resolve public addresses and addresses of other things in the VPC and they also include the ability for us to",
    "start": "1125840",
    "end": "1133280"
  },
  {
    "text": "assign DNS names to the instances so you don't have to just use IP addresses now",
    "start": "1133280",
    "end": "1139910"
  },
  {
    "text": "that's really worth considering and looking at but I'm not going to go into more detail here I'm just going to say",
    "start": "1139910",
    "end": "1145490"
  },
  {
    "text": "that if you're interested in DNS and not having to manage all of your own DNS it's worth considering looking at route",
    "start": "1145490",
    "end": "1151370"
  },
  {
    "text": "53 with that I'd like to pass over to Tom who's going to talk about some of the higher level services Thank you very",
    "start": "1151370",
    "end": "1159490"
  },
  {
    "text": "everyone",
    "start": "1159490",
    "end": "1162490"
  },
  {
    "start": "1166000",
    "end": "1329000"
  },
  {
    "text": "all right so Perry has taken you through setting up your first V PC connecting it",
    "start": "1166010",
    "end": "1171230"
  },
  {
    "text": "to the Internet and securing it and I'm going to go through how you can connect multiple V pcs on AWS and how can you",
    "start": "1171230",
    "end": "1179390"
  },
  {
    "text": "connect your V pcs back to your on-premise environment so we'll start off with the options we have to connect",
    "start": "1179390",
    "end": "1184790"
  },
  {
    "text": "V pcs in your AWS environment in the cloud and we'll look at two options we look at V PC peering and we look at",
    "start": "1184790",
    "end": "1191570"
  },
  {
    "text": "transit gateway well let's start with V PC peering so parry earlier I compared",
    "start": "1191570",
    "end": "1197419"
  },
  {
    "text": "the V PC to the equivalent of your data center on-premise but running in the",
    "start": "1197419",
    "end": "1202549"
  },
  {
    "text": "cloud so V PC peering in that context would be like a piece of fiber or like a",
    "start": "1202549",
    "end": "1207890"
  },
  {
    "text": "leased line between those data centers so if you have two V pcs you want to connect you can establish the peering",
    "start": "1207890",
    "end": "1213860"
  },
  {
    "text": "between them and I can start communicating with each other if you have another V PC that you need to",
    "start": "1213860",
    "end": "1219020"
  },
  {
    "text": "connect with other environments you can create another peering and now the BBC in the middle can talk with both HV pcs",
    "start": "1219020",
    "end": "1225549"
  },
  {
    "text": "however one thing to remember here is V PC peering is a one to one relationship so you can't have this path happening",
    "start": "1225549",
    "end": "1233809"
  },
  {
    "text": "you can't have you can't have traffic traversing a V PC to get to another V PC so if you have a requirement for those",
    "start": "1233809",
    "end": "1240049"
  },
  {
    "text": "edge v pcs to be able to talk to one another you'll need to set up your own",
    "start": "1240049",
    "end": "1245150"
  },
  {
    "text": "DPC peering here and establish a connection between them so let's add a 4 V PC to the mix and if we want to have",
    "start": "1245150",
    "end": "1252500"
  },
  {
    "text": "any to any communication we'll need to add additional pairings in here to have",
    "start": "1252500",
    "end": "1257720"
  },
  {
    "text": "to have that happen so all of the communication is happening privately and the V pcs you're connecting of appearing",
    "start": "1257720",
    "end": "1264830"
  },
  {
    "text": "can be in different accounts and it can even be in different AWS regions so you can connect the V PC in Ireland with a V",
    "start": "1264830",
    "end": "1270860"
  },
  {
    "text": "PC in u.s. finally when you're connecting DPC's to each other appearing you need to make sure that you don't",
    "start": "1270860",
    "end": "1277070"
  },
  {
    "text": "overlap any of the cider ranges you decided to use for your V pcs from a",
    "start": "1277070",
    "end": "1282740"
  },
  {
    "text": "setup point of view establishing a V PC connection is very much a decentralized process so the owner of each V PC is",
    "start": "1282740",
    "end": "1289940"
  },
  {
    "text": "making a decision to establish that pairing with the owner of the other V PC so in this case the owner of the V PC on",
    "start": "1289940",
    "end": "1296120"
  },
  {
    "text": "the on the left he's going to send a peering request to the owner of the VP on the right and then the owner on the VP of the right",
    "start": "1296120",
    "end": "1302680"
  },
  {
    "text": "will accept that request and the peering is established very simple the final step is to update the routing tables on",
    "start": "1302680",
    "end": "1310000"
  },
  {
    "text": "each side to make sure the traffic can flow so if we zoom in to the VP see on the left we now see an additional",
    "start": "1310000",
    "end": "1316680"
  },
  {
    "text": "routing entry in the routing table that's telling us how to reach the IP",
    "start": "1316680",
    "end": "1321910"
  },
  {
    "text": "address range of the VP C on the right and the destination is going to be the peering connection we've just created so",
    "start": "1321910",
    "end": "1329500"
  },
  {
    "start": "1329000",
    "end": "1489000"
  },
  {
    "text": "last year we've announced the availability of another option for connecting your VP C's together and that's the transit gateway so if we go",
    "start": "1329500",
    "end": "1336910"
  },
  {
    "text": "back to the world before the trans gateway we can see our peering mesh again and it's fine if you have just a",
    "start": "1336910",
    "end": "1342910"
  },
  {
    "text": "few VP C's but once you start getting into tens 12 13 20 V pcs they need to",
    "start": "1342910",
    "end": "1348760"
  },
  {
    "text": "connect to each other it's becoming very complicated to manage plus you will likely hit the limit of the VP see",
    "start": "1348760",
    "end": "1354910"
  },
  {
    "text": "peering savvy PC can have that's 125 so how does trans gateway help us so trans",
    "start": "1354910",
    "end": "1362950"
  },
  {
    "text": "gateway is a distributed managed routing service that you deploy into a region",
    "start": "1362950",
    "end": "1368470"
  },
  {
    "text": "and you can connect and attach VP C's in that same region to your trans the Gateway and then allow for any to any",
    "start": "1368470",
    "end": "1375610"
  },
  {
    "text": "communication from a routing point of view or you can isolate some VP C's to allow them only to talk to each other so",
    "start": "1375610",
    "end": "1383980"
  },
  {
    "text": "if we now add some routing information here and we assume that all our VP C's are in the 1 7 - 1 7 to 16 block how is",
    "start": "1383980",
    "end": "1392260"
  },
  {
    "text": "that how is that routing gonna look like inside our VP C so if we zoom into that",
    "start": "1392260",
    "end": "1397300"
  },
  {
    "text": "routing table we now see a different entry that's pointing to any addresses in the 170 block and saying that those",
    "start": "1397300",
    "end": "1404650"
  },
  {
    "text": "addresses on a reachable via the trans the Gateway so rather than having a single entry per peering like we had",
    "start": "1404650",
    "end": "1411010"
  },
  {
    "text": "before we can now have a single entry sending all the traffic to the trans gateway and then the trans gateway",
    "start": "1411010",
    "end": "1416620"
  },
  {
    "text": "actually has its own routing table with specific information about every single",
    "start": "1416620",
    "end": "1421750"
  },
  {
    "text": "attachment it has including the V PC that was sending traffic from",
    "start": "1421750",
    "end": "1427760"
  },
  {
    "text": "so communication similar to appearing is happening completely privately your",
    "start": "1427760",
    "end": "1433920"
  },
  {
    "text": "transit gateway annual V pcs can be in different AWS accounts however the",
    "start": "1433920",
    "end": "1439440"
  },
  {
    "text": "transit gateway and the bbc's have to be in the same region we've announced end of last year that we are planning for",
    "start": "1439440",
    "end": "1445950"
  },
  {
    "text": "this year to make connectivity between trans gateways in different regions available but that's coming ok so if",
    "start": "1445950",
    "end": "1456210"
  },
  {
    "text": "you're comparing the two and making a decision which one - which one to pick which technology to pick V PC peering or",
    "start": "1456210",
    "end": "1462420"
  },
  {
    "text": "transit gateway here's some ideas you can look at some comparison numbers that",
    "start": "1462420",
    "end": "1467460"
  },
  {
    "text": "you can look to look at but at the in the end is going to come down to the number of connections you can have and",
    "start": "1467460",
    "end": "1473760"
  },
  {
    "text": "how easy it is to manage that environment so if you're configuring all that more than 2012 10 15 V pcs transit",
    "start": "1473760",
    "end": "1481830"
  },
  {
    "text": "gateway is probably something you want to look at okay so we've connected our V pcs on AWS let's start connecting them",
    "start": "1481830",
    "end": "1489090"
  },
  {
    "start": "1489000",
    "end": "1599000"
  },
  {
    "text": "back to on-premise so we'll go through scenario where we have on-premise",
    "start": "1489090",
    "end": "1494220"
  },
  {
    "text": "environment on the left and we will have our V PC on the right and we'll look at",
    "start": "1494220",
    "end": "1499470"
  },
  {
    "text": "two connectivity options we have AWS site-to-site VPN that's effectively an IPSec VPN tunnel typically running over",
    "start": "1499470",
    "end": "1507360"
  },
  {
    "text": "the internet connecting your V PC to on-premise and the other option is AWS Direct Connect that's a dedicated",
    "start": "1507360",
    "end": "1513630"
  },
  {
    "text": "physical connectivity into the AWS backbone so VPN is often the starting",
    "start": "1513630",
    "end": "1519870"
  },
  {
    "text": "point for many customers it's an easy thing to set up and you can do it you can do it with not a lot of effort so to",
    "start": "1519870",
    "end": "1526350"
  },
  {
    "text": "set up your first ven first of all you need to define the customer gateway and this is going to be the the on-premise",
    "start": "1526350",
    "end": "1532530"
  },
  {
    "text": "end of your VPN connection and this is this could be your router your firewall",
    "start": "1532530",
    "end": "1537990"
  },
  {
    "text": "anything you manage on-premise that supports IPSec on the V PC side you'll",
    "start": "1537990",
    "end": "1544020"
  },
  {
    "text": "create another gateway virtual private gateway that you associate to your V PC",
    "start": "1544020",
    "end": "1549030"
  },
  {
    "text": "and that will be the other side of your VPN connection so once you have those two endpoints",
    "start": "1549030",
    "end": "1554520"
  },
  {
    "text": "you can create your first tunnel you can create your first connection and each VPN connection actually consists out of",
    "start": "1554520",
    "end": "1561690"
  },
  {
    "text": "two separate IPSec tunnels and the reason why these two separate tunnels is because we give you two separate VPN",
    "start": "1561690",
    "end": "1568800"
  },
  {
    "text": "termination endpoints in different availability zones for high availability finally if you're not using a route",
    "start": "1568800",
    "end": "1575760"
  },
  {
    "text": "dynamic routing protocol like BGP for example you would have to update the routing table inside of EPC to tell it",
    "start": "1575760",
    "end": "1582600"
  },
  {
    "text": "how to reach the on-premise range so VPN is great but because it often runs over",
    "start": "1582600",
    "end": "1588360"
  },
  {
    "text": "the internet you might sometimes have some unpredictable experience so if you want more predictable and consistent",
    "start": "1588360",
    "end": "1594630"
  },
  {
    "text": "experience for your connectivity to AWS that's what you would look at AWS direct",
    "start": "1594630",
    "end": "1600030"
  },
  {
    "start": "1599000",
    "end": "1837000"
  },
  {
    "text": "connect and here first of all we're going to zoom out a little bit from a V",
    "start": "1600030",
    "end": "1605370"
  },
  {
    "text": "PC and look at the larger AWS cloud and then inside we have a V PC we created",
    "start": "1605370",
    "end": "1611550"
  },
  {
    "text": "earlier but outside of those V PC that private environment we have other services these services are managed",
    "start": "1611550",
    "end": "1618630"
  },
  {
    "text": "services that live on the AWS public address space these are things like s3",
    "start": "1618630",
    "end": "1623700"
  },
  {
    "text": "dynamodb cloud watch for monitoring all those services are outside of your V PC and now we want to use Direct Connect to",
    "start": "1623700",
    "end": "1631620"
  },
  {
    "text": "connect from our on premise environment both to a private V PC but also to some of those services that are on the public",
    "start": "1631620",
    "end": "1637170"
  },
  {
    "text": "address space to do that we would use one of our Direct Connect locations these are locations that we publish on",
    "start": "1637170",
    "end": "1644490"
  },
  {
    "text": "our website you can pick the location that's closest to where your date Center is and in each one of those locations",
    "start": "1644490",
    "end": "1651030"
  },
  {
    "text": "AWS will have a number of my of Reuters that we manage and then you request a",
    "start": "1651030",
    "end": "1656280"
  },
  {
    "text": "port on one of those routers maybe one gig or ten gigabit two seconds and then you can establish physical connectivity",
    "start": "1656280",
    "end": "1662640"
  },
  {
    "text": "to that port either yourself or with the help of an AWS connectivity partner so",
    "start": "1662640",
    "end": "1669720"
  },
  {
    "text": "this is just your physical connection on top of that you now need to start creating your logical connectivity so",
    "start": "1669720",
    "end": "1676410"
  },
  {
    "text": "your virtual interfaces or VLANs on your side so first you can create a private",
    "start": "1676410",
    "end": "1682260"
  },
  {
    "text": "virtual interface that is an interface that gets you connectivity into your private environment into the V PC",
    "start": "1682260",
    "end": "1689440"
  },
  {
    "text": "and for connectivity to outside of that VPC to the public address publicly",
    "start": "1689440",
    "end": "1694540"
  },
  {
    "text": "addressed services you could use the public virtual interface now if you're",
    "start": "1694540",
    "end": "1700390"
  },
  {
    "text": "connecting to more than just a single V PC and you want to use a single logical",
    "start": "1700390",
    "end": "1705520"
  },
  {
    "text": "connection for that you can use AWS direct connect gateway the in that case you would create a single logical",
    "start": "1705520",
    "end": "1711940"
  },
  {
    "text": "virtual interface terminated on the direct connect gateway that then can connect to up to 10 V pcs that live in",
    "start": "1711940",
    "end": "1719800"
  },
  {
    "text": "the same region or in different regions across the world except for China okay",
    "start": "1719800",
    "end": "1726610"
  },
  {
    "text": "so if we now start connecting multiple V pcs and we look at the time before we had trans gateway available if we're",
    "start": "1726610",
    "end": "1734830"
  },
  {
    "text": "connecting our V pcs back to on-premise using AWS site-to-site VPN we would have to create a VPN V PC so each V PC would",
    "start": "1734830",
    "end": "1743290"
  },
  {
    "text": "have its own VPN connection if we had 100 V pcs that means hundred VPN connections actually 200 because there's",
    "start": "1743290",
    "end": "1749920"
  },
  {
    "text": "200 tunnels if we're connecting back to a thermos using Direct Connect but in",
    "start": "1749920",
    "end": "1756280"
  },
  {
    "text": "that case we could leverage the REC in a gateway and maybe have that single logical interface connecting to up to 10 V PC which runs the Gateway we already",
    "start": "1756280",
    "end": "1765460"
  },
  {
    "text": "know that transfer gateway can help us aggregate the connectivity in a certain region and we can connect up to 5,000 V",
    "start": "1765460",
    "end": "1772540"
  },
  {
    "text": "pcs to a single transit gateway but now it can also help us consolidate that connectivity back to on-premise so",
    "start": "1772540",
    "end": "1779950"
  },
  {
    "text": "instead of setting up a VPN tunnel to every single V PC we can now have a single tunnel going through the trans",
    "start": "1779950",
    "end": "1786070"
  },
  {
    "text": "the Gateway and from there we can reach all the V pcs attached to it we're using Direct Connect and this is currently",
    "start": "1786070",
    "end": "1792520"
  },
  {
    "text": "only available in u.s. we could use Direct Connect gateway to connect a single logical interface to the direct",
    "start": "1792520",
    "end": "1799030"
  },
  {
    "text": "connect gateway and effectively to the trans the Gateway to reach all the bbc's",
    "start": "1799030",
    "end": "1804210"
  },
  {
    "text": "now from a routing point of view it's still very simple so all you need to do",
    "start": "1804210",
    "end": "1809560"
  },
  {
    "text": "is now add an additional entry to tell the V PC how to get to the on-premise",
    "start": "1809560",
    "end": "1814600"
  },
  {
    "text": "address range and you just point it through the trans of Gateway and the transit gateway is going to have",
    "start": "1814600",
    "end": "1821320"
  },
  {
    "text": "its own entry for the connectivity box on premise in this example we're using a VPN but it could be direct connect so",
    "start": "1821320",
    "end": "1829990"
  },
  {
    "text": "we've created a hybrid environment we now have on-premise environment connected to AWS but what about DNS so",
    "start": "1829990",
    "end": "1838390"
  },
  {
    "start": "1837000",
    "end": "2054000"
  },
  {
    "text": "typically customers would have private domains private zones deployed on-premise as well as only WS and they",
    "start": "1838390",
    "end": "1845440"
  },
  {
    "text": "want to be able to resolve them no matter where they are so for that we have route 53 resolver service that",
    "start": "1845440",
    "end": "1851800"
  },
  {
    "text": "allows you to create resolver endpoints in one of the V PC is connected to on-premise two to be used for dns",
    "start": "1851800",
    "end": "1858760"
  },
  {
    "text": "forwarding so you can do that resolution from on-premise to AWS and vice versa then you can even create your own",
    "start": "1858760",
    "end": "1864310"
  },
  {
    "text": "forwarding rules to specify which domains should stay on AWS and be resolved on AWS and which ones should be",
    "start": "1864310",
    "end": "1870790"
  },
  {
    "text": "forwarded back to your own premise service ok so it's been quite a busy",
    "start": "1870790",
    "end": "1876400"
  },
  {
    "text": "year for networking and we still have quite a few services to go through so I'm going to touch on VPC sharing I'm",
    "start": "1876400",
    "end": "1883840"
  },
  {
    "text": "going to talk about VPC endpoints and finally about Amazon global accelerator",
    "start": "1883840",
    "end": "1889170"
  },
  {
    "text": "so let's start with VPC sharing and VPC sharing is changing the model of how you",
    "start": "1889170",
    "end": "1894280"
  },
  {
    "text": "organize your V pcs so before V PC sharing when you created a V PC had to",
    "start": "1894280",
    "end": "1900370"
  },
  {
    "text": "belong to an AWS account which is a management boundary and all the services you would deploy it into that V PC would",
    "start": "1900370",
    "end": "1907150"
  },
  {
    "text": "have to belong to the same account with V PC sharing we're changing that model so you now have the concept of the owner",
    "start": "1907150",
    "end": "1914500"
  },
  {
    "text": "account and maybe this is an AWS account owned by our networking team or your infrastructure team and they would build",
    "start": "1914500",
    "end": "1921610"
  },
  {
    "text": "all the networking constructs they would create the V PC create the side on the side arrange create the subnets set up",
    "start": "1921610",
    "end": "1928660"
  },
  {
    "text": "all the routing network access control lists set up all the route tables and connectivity to other environments",
    "start": "1928660",
    "end": "1934770"
  },
  {
    "text": "exactly the same way as you would with a regular V PC but it's controlled by that networking or infrastructure team the",
    "start": "1934770",
    "end": "1942460"
  },
  {
    "text": "big difference here is those subnets inside of e PC can be shared with other AWS accounts so maybe now web",
    "start": "1942460",
    "end": "1950350"
  },
  {
    "text": "development team has their own AWS accounts and they can deploy resources ec2 instances for example into a subnets",
    "start": "1950350",
    "end": "1957940"
  },
  {
    "text": "that's been shared with them and they have full control over that resource and they can create security groups around",
    "start": "1957940",
    "end": "1964330"
  },
  {
    "text": "their own resource but they can not make any changes to the resources that were created by the owner of the V PC so for",
    "start": "1964330",
    "end": "1971410"
  },
  {
    "text": "example they can make updates to the routing table or change network access controllers and you can share those",
    "start": "1971410",
    "end": "1977830"
  },
  {
    "text": "subnets with multiple accounts so maybe the nava account is maintaining a database and they're creating an RDS service that you put it in another",
    "start": "1977830",
    "end": "1984460"
  },
  {
    "text": "subnet and maybe there's some application teams that are building their applications deploying them into those subnets none of those teams can",
    "start": "1984460",
    "end": "1991390"
  },
  {
    "text": "touch each other's resources they always manage their own resources but from a networking point of view if they open up",
    "start": "1991390",
    "end": "1997720"
  },
  {
    "text": "the security groups they can now communicate with each other so why would you the PC sharing so first of all you",
    "start": "1997720",
    "end": "2005070"
  },
  {
    "text": "can save on your ipv4 addresses if you're running out of ipv4 addresses and you can create one bigger V PC and put",
    "start": "2005070",
    "end": "2011730"
  },
  {
    "text": "more resources into it you're going to utilize your addresses more efficiently and if you have less B pcs it actually",
    "start": "2011730",
    "end": "2018360"
  },
  {
    "text": "means less interconnectivity you won't have to create as many parents or trans the Gateway connections or connections back to on-premise and you have that",
    "start": "2018360",
    "end": "2025710"
  },
  {
    "text": "nice separation of duties where the owner creates the vbc and participants",
    "start": "2025710",
    "end": "2030780"
  },
  {
    "text": "cannot change it they can't accidentally on purpose add an Internet gateway to establish internet connectivity for",
    "start": "2030780",
    "end": "2036450"
  },
  {
    "text": "example and finally everyone is still built for the resources they create so",
    "start": "2036450",
    "end": "2042540"
  },
  {
    "text": "and if it so happens that the resources live in the same availability zone than",
    "start": "2042540",
    "end": "2047550"
  },
  {
    "text": "the traffic within the same availability zones free of charge",
    "start": "2047550",
    "end": "2052158"
  },
  {
    "text": "okay so I mentioned earlier that we have these services that live outside of the",
    "start": "2053889",
    "end": "2060940"
  },
  {
    "start": "2054000",
    "end": "2254000"
  },
  {
    "text": "outside of your V PC on the public eight of this address space and we know now that we can use Direct Connect the",
    "start": "2060940",
    "end": "2067148"
  },
  {
    "text": "public virtual interface to access those resources from on-premise but what about accessing them from within your V PC you",
    "start": "2067149",
    "end": "2074529"
  },
  {
    "text": "can do that for an Internet gateway but maybe you don't want to deploy an Internet gateway to your V PC so for",
    "start": "2074529",
    "end": "2079658"
  },
  {
    "text": "that we have different types of endpoints and we'll start we'll start off with gateway endpoints and these",
    "start": "2079659",
    "end": "2086470"
  },
  {
    "text": "endpoints are used purely for s3 and dynamic DynamoDB only for those two services so here we have an example of a",
    "start": "2086470",
    "end": "2094029"
  },
  {
    "text": "V PC communicating with an s3 bucket using the internet gateway well in our",
    "start": "2094029",
    "end": "2099069"
  },
  {
    "text": "scenario we don't want to use an Internet gateway we don't want to use any public IP addresses but we still want to be able to reach us free we can",
    "start": "2099069",
    "end": "2105970"
  },
  {
    "text": "establish a VPC gateway endpoints to s3 and then navigate all the traffic for an",
    "start": "2105970",
    "end": "2111220"
  },
  {
    "text": "update in the routing table through that endpoint to privately communicate with us free without any usage of public IP",
    "start": "2111220",
    "end": "2117519"
  },
  {
    "text": "addresses another type of endpoint we have our interface endpoints and these",
    "start": "2117519",
    "end": "2124089"
  },
  {
    "text": "endpoints are now used by all the other services that are becoming available inside your V PC so an example here is",
    "start": "2124089",
    "end": "2130420"
  },
  {
    "text": "AWS services API so if you want to connect to that service you can use an",
    "start": "2130420",
    "end": "2135849"
  },
  {
    "text": "interface endpoint and instead of doing any routing we will make it look as if that serve this lives inside of your V",
    "start": "2135849",
    "end": "2143140"
  },
  {
    "text": "PC and it will use IP addresses from within your V PC range so when your ec2",
    "start": "2143140",
    "end": "2148509"
  },
  {
    "text": "instances are connecting to that service that would be connecting to a local IP address and behind the scenes privately",
    "start": "2148509",
    "end": "2154390"
  },
  {
    "text": "transported to the actual service they want to communicate with so this mechanism allows you to also override",
    "start": "2154390",
    "end": "2162039"
  },
  {
    "text": "the publicly public domain name for the service so only inside your V PC it will",
    "start": "2162039",
    "end": "2168160"
  },
  {
    "text": "resolve to your private IP addresses and a lot of customers and partners are",
    "start": "2168160",
    "end": "2175150"
  },
  {
    "text": "using this for sharing their services themselves so you can do it yourself as well and the technology powering V PC",
    "start": "2175150",
    "end": "2181079"
  },
  {
    "text": "endpoints V PC interface endpoints is private link so we allow you to use their technology of",
    "start": "2181079",
    "end": "2186520"
  },
  {
    "text": "self to share your own services with thousands of other VP C's so in this example we have a service maybe this is",
    "start": "2186520",
    "end": "2193540"
  },
  {
    "text": "a HTTP service and you want to share that service with a lot of other bbc's maybe some third parties so you need to",
    "start": "2193540",
    "end": "2201220"
  },
  {
    "text": "put it behind a network load balancer and then make it available as an endpoint service so that other VP C's",
    "start": "2201220",
    "end": "2208240"
  },
  {
    "text": "can subscribe to that service and create endpoints representing your service in their VP C's so again that will be",
    "start": "2208240",
    "end": "2215140"
  },
  {
    "text": "connecting to a local IP address representing your service and be transported to your service hosted in",
    "start": "2215140",
    "end": "2221140"
  },
  {
    "text": "another vbc and using private link allows us to only expose a specific",
    "start": "2221140",
    "end": "2226570"
  },
  {
    "text": "service port that we're connecting to so if it's HTTP it will be just 443",
    "start": "2226570",
    "end": "2231690"
  },
  {
    "text": "connectivity is only allowed in one direction so only consumers can connect to the service the service provider VPC",
    "start": "2231690",
    "end": "2238630"
  },
  {
    "text": "cannot connect to the consumer of the pcs and finally in this scenario you no longer need to care about IP addresses",
    "start": "2238630",
    "end": "2244720"
  },
  {
    "text": "anymore so those IP addresses in the VP C's can overlap and you can still expose the service this way ok finally a",
    "start": "2244720",
    "end": "2257350"
  },
  {
    "start": "2254000",
    "end": "2344000"
  },
  {
    "text": "service that's focusing on something slightly different so now we have an application on AWS that's already",
    "start": "2257350",
    "end": "2263560"
  },
  {
    "text": "publicly facing maybe in a region in Europe and we have users from outside of",
    "start": "2263560",
    "end": "2268720"
  },
  {
    "text": "that environment that want to connect publicly to our application and we want to make sure that the experience for",
    "start": "2268720",
    "end": "2275230"
  },
  {
    "text": "those users is as good as possible so Amazon global accelerator is a network",
    "start": "2275230",
    "end": "2280390"
  },
  {
    "text": "based service that you deploy between your users on the internet and the application that's internet-facing",
    "start": "2280390",
    "end": "2286930"
  },
  {
    "text": "hosted on AWS that allows you to optimize the experience for those users and it can cover any type of application",
    "start": "2286930",
    "end": "2294940"
  },
  {
    "text": "running on TCP or UDP why does it matter so if we have a application that's",
    "start": "2294940",
    "end": "2302140"
  },
  {
    "text": "facing the Internet today and we have users connecting from all around the world they'll be traversing a lot of different",
    "start": "2302140",
    "end": "2308920"
  },
  {
    "text": "networks their ISP and some other carriers and there's a potential for these paths to be impacted by some let's",
    "start": "2308920",
    "end": "2316600"
  },
  {
    "text": "call them internet webicon so you don't control the end-to-end experience of that user when you deploy",
    "start": "2316600",
    "end": "2323329"
  },
  {
    "text": "a global accelerator you're able to bring the traffic from your users on to",
    "start": "2323329",
    "end": "2329329"
  },
  {
    "text": "the AWS backbone as close as possible to where your remote users are and then from there the traffic will use the",
    "start": "2329329",
    "end": "2336020"
  },
  {
    "text": "uncongested managed AWS backbone to the actual service running in an AWS region",
    "start": "2336020",
    "end": "2342790"
  },
  {
    "start": "2344000",
    "end": "2408000"
  },
  {
    "text": "okay so we've covered quite a lot we started with creating a V PC and this",
    "start": "2344109",
    "end": "2350109"
  },
  {
    "text": "could be a regular V PC or a shared V PC we talked about how you can deploy endpoints to communicate with other",
    "start": "2350109",
    "end": "2355839"
  },
  {
    "text": "services AWS services as well as your own services we talked about how you can connect your V PC to the internet it may",
    "start": "2355839",
    "end": "2362380"
  },
  {
    "text": "be optimized that experience using global accelerator we talked about the different types of subnets private",
    "start": "2362380",
    "end": "2367930"
  },
  {
    "text": "subnet public subnet in using nap gateway for allowing outdoor access and we talked about the different",
    "start": "2367930",
    "end": "2373239"
  },
  {
    "text": "connectivity options so connecting back to on-premise using Direct Connect or AWS site-to-site VPN or connecting to",
    "start": "2373239",
    "end": "2380559"
  },
  {
    "text": "other V pcs where they're using peering or using trans gateway so that's a lot",
    "start": "2380559",
    "end": "2386229"
  },
  {
    "text": "to cover a lot that we covered so if you have any questions Perri and I will stay after the session",
    "start": "2386229",
    "end": "2391660"
  },
  {
    "text": "we also can come over and chat with us at the iaws village where we have a networking stand so if you have any",
    "start": "2391660",
    "end": "2397329"
  },
  {
    "text": "networking questions you can come over and chat with us yeah and please make sure thank you and please make sure you",
    "start": "2397329",
    "end": "2402940"
  },
  {
    "text": "fill out the survey and remember the exits are behind me [Applause]",
    "start": "2402940",
    "end": "2410260"
  }
]