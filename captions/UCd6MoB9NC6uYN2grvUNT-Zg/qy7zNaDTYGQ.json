[
  {
    "text": "okay afternoon everyone and welcome to the elastic load balancing deep dive and best practices session my name is Dave",
    "start": "30",
    "end": "7170"
  },
  {
    "text": "Brown I lead the elastic load balancing team as well as a few other teams within AWS I've been at Amazon for a little",
    "start": "7170",
    "end": "14040"
  },
  {
    "text": "over nine years started out on the ec2 team and then sort of stayed within that",
    "start": "14040",
    "end": "19140"
  },
  {
    "text": "organization for the nine years and I've been running elastic load balancing for about the last three years so we've had",
    "start": "19140",
    "end": "25199"
  },
  {
    "text": "a lot happening on elastic load balancing this year a few changes we launched a new load balancer so hopefully as we go through the session",
    "start": "25199",
    "end": "31769"
  },
  {
    "text": "today you'll learn a little bit more about elastic load balancing in general but also application load balancer which",
    "start": "31769",
    "end": "37050"
  },
  {
    "text": "is the new load balancer we launched so let's dive in so what is elastic load balancing so elastic load balancing",
    "start": "37050",
    "end": "43500"
  },
  {
    "text": "automatically distributes incoming application traffic across multiple applications micro-services and",
    "start": "43500",
    "end": "49289"
  },
  {
    "text": "containers hosted on Amazon ec2 instances so prior to August we did not support the micro services and contain a",
    "start": "49289",
    "end": "56550"
  },
  {
    "text": "use case so we were instance based we've added that and I'll talk a little bit more about that later the next slide",
    "start": "56550",
    "end": "62699"
  },
  {
    "text": "looks at a few of the sort of advantages of using lb so the first thing is the word we really like in the cloud is",
    "start": "62699",
    "end": "68880"
  },
  {
    "text": "we're elastic and what that means is you create a new load balancer and that load balancer was scaled to meet your",
    "start": "68880",
    "end": "74880"
  },
  {
    "text": "incoming traffic if you want to live and see yourself you've got to worry about scaling that load balancer making sure it's highly available you've got to care",
    "start": "74880",
    "end": "81810"
  },
  {
    "text": "and feed it with alb you create the load balancer register your back-end instances and the load balancer will scale dynamically and secondly and super",
    "start": "81810",
    "end": "89250"
  },
  {
    "text": "important is is we're secure so we pay a lot of attention to the security of the load balancer but also features that",
    "start": "89250",
    "end": "95520"
  },
  {
    "text": "allow our customers to be highly secure features such as managed SSL and what are the very best ciphers and protocols",
    "start": "95520",
    "end": "102060"
  },
  {
    "text": "to use on your lb we also integrated and what that means is we integrate with up to 14 different AWS services so whether",
    "start": "102060",
    "end": "109740"
  },
  {
    "text": "it's cloud front for the e o cloud watch sorry for the e lb metrics or its auto",
    "start": "109740",
    "end": "116280"
  },
  {
    "text": "scaling for dynamically scaling your back-end fleet we integrate route 53 for DNS we're very integrated you know",
    "start": "116280",
    "end": "122909"
  },
  {
    "text": "CloudFormation number of services that are integrated with ELB and then finally we're",
    "start": "122909",
    "end": "128009"
  },
  {
    "text": "cost-effective so the cost of e will be significantly cheaper than actually running the load balancer yourself if",
    "start": "128009",
    "end": "133520"
  },
  {
    "text": "you had to run a load balance on ec2 it would almost certainly cost you more than actually using an EOB so it is",
    "start": "133520",
    "end": "138890"
  },
  {
    "text": "quite a good deal so as we think about building an application I'm sure many of you have had an architecture that looks",
    "start": "138890",
    "end": "144740"
  },
  {
    "text": "like that not one I'm recommending it's not a best practice but it's it's where",
    "start": "144740",
    "end": "151190"
  },
  {
    "text": "a lot of us start right we build an application on a single instance you maybe even put your database on that",
    "start": "151190",
    "end": "156860"
  },
  {
    "text": "instance you everything's on that one machine and you're showing others this application works well not something",
    "start": "156860",
    "end": "162500"
  },
  {
    "text": "that's recommended obviously there are a couple of challenges there one that machine could fail if that machine dies",
    "start": "162500",
    "end": "168590"
  },
  {
    "text": "obviously the web server goes down or whatever you have secondly if your traffic spikes well you know that",
    "start": "168590",
    "end": "174650"
  },
  {
    "text": "machine is not going to handle the certain amount of traffic and the other thing that we kind of take for granted and I was a I was a software engineer",
    "start": "174650",
    "end": "180460"
  },
  {
    "text": "back in the day at Amazon as well and we don't realize just how good load",
    "start": "180460",
    "end": "185570"
  },
  {
    "text": "balancers make us look as software engineers and we have things like garbage collection in Java where your VM",
    "start": "185570",
    "end": "191870"
  },
  {
    "text": "stalls you may have memory issues some of you guys that write C and what is just basically doing a certain bailout",
    "start": "191870",
    "end": "197720"
  },
  {
    "text": "of the application if anything happens the load balancer just papers over all of that anytime something like that",
    "start": "197720",
    "end": "203390"
  },
  {
    "text": "happens the traffic just magically goes elsewhere so yes there's a solution that I would recommend or an architecture",
    "start": "203390",
    "end": "209000"
  },
  {
    "text": "that looks a little better right so yeah we have an elastic load balancer taking traffic and spreading that traffic over",
    "start": "209000",
    "end": "214790"
  },
  {
    "text": "three instances any of those instances fail a load balancer will automatically",
    "start": "214790",
    "end": "220640"
  },
  {
    "text": "detect and shift their traffic job to the remaining instances with auto scaling you can automatically scale that",
    "start": "220640",
    "end": "226550"
  },
  {
    "text": "back in fleet and the load balancers in the scale dynamically as well if the traffic increases so it takes care of a",
    "start": "226550",
    "end": "232280"
  },
  {
    "text": "lot of those challenges we just spoke about it's it's highly available I want",
    "start": "232280",
    "end": "237980"
  },
  {
    "text": "to go into a couple of details we don't normally talk about internal architectures of AWS services but this",
    "start": "237980",
    "end": "243830"
  },
  {
    "text": "is one way I think it's important to understand so every single elastic load balancer utilizes multiple availability",
    "start": "243830",
    "end": "249500"
  },
  {
    "text": "signs even if you as an application developer isn't doing that for your application obviously it's highly",
    "start": "249500",
    "end": "254840"
  },
  {
    "text": "recommended but something that we do so here's the architecture so essentially on the right hand side there you can see",
    "start": "254840",
    "end": "260780"
  },
  {
    "text": "we have the customers V PC and that would be you and your VDC and on the left-hand side we have the",
    "start": "260780",
    "end": "265850"
  },
  {
    "text": "LBV pc so we actually run in a V PC just like you do on ec2 so we're we're also a",
    "start": "265850",
    "end": "271699"
  },
  {
    "text": "demanding customer of the ec2 team we then have some subnets in each availability zone and as you can see",
    "start": "271699",
    "end": "277610"
  },
  {
    "text": "there we have an L B and the subnet on the top and he'll be in the subnet on the bottom as well forwarding that traffic into your subnet",
    "start": "277610",
    "end": "284000"
  },
  {
    "text": "so we're pretty much running alongside you we have the ability to get their traffic securely injected into your V PC",
    "start": "284000",
    "end": "291970"
  },
  {
    "text": "one thing I wanted to cover this has become more important with the recent launch of application load balancer is",
    "start": "292000",
    "end": "297380"
  },
  {
    "text": "we're starting to explain to customers really what are the different types of load balancing there are two different types of load balancing the first one",
    "start": "297380",
    "end": "304099"
  },
  {
    "text": "which we talked about is network or your your TCP load balancing or if you really understand the networking layers you",
    "start": "304099",
    "end": "309949"
  },
  {
    "text": "talk about layer 4 what this does is this really basically connection based load balancing so requests are flowing",
    "start": "309949",
    "end": "316970"
  },
  {
    "text": "through the load balancer but we're not looking at any of those requests we just handing those packets and forwarding them to the back ends and that supports",
    "start": "316970",
    "end": "323000"
  },
  {
    "text": "things like TCP and SSL client connections are bound to a server connection so every single time a new",
    "start": "323000",
    "end": "329000"
  },
  {
    "text": "request comes in it's actually bound to a back-end instance that will never move there's no header modification so we",
    "start": "329000",
    "end": "334940"
  },
  {
    "text": "pretty much can't do anything with that request we just we just pass those packets through if you want to know",
    "start": "334940",
    "end": "340849"
  },
  {
    "text": "about the source IP of a client that's connecting to you there's no x-forwarded-for header nothing like that because we can't",
    "start": "340849",
    "end": "347150"
  },
  {
    "text": "actually do anything with a request so there is a there's a feature called proxy protocol which comes from H H a",
    "start": "347150",
    "end": "352520"
  },
  {
    "text": "proxy world which allows you to forward the destination the source IP through to the destination so that's layer 4 on the other side",
    "start": "352520",
    "end": "359300"
  },
  {
    "text": "we've got layer 7 and many of you might be more familiar with these or prefer these features and that's what we call",
    "start": "359300",
    "end": "364969"
  },
  {
    "text": "an application load balancer and/or HTTP and HTTPS now this is where we every",
    "start": "364969",
    "end": "370969"
  },
  {
    "text": "request that's coming in we're waiting for all the packets to arrive and reassembling the HTTP requests we're looking at the headers we're doing a lot",
    "start": "370969",
    "end": "376250"
  },
  {
    "text": "of work in the load balancer and the connections are actually terminated at the load balancer and then we have",
    "start": "376250",
    "end": "381259"
  },
  {
    "text": "connection pools to your back-end instances you'll see us open up multiple connections to your backends and we'll use those connections to forward the",
    "start": "381259",
    "end": "387229"
  },
  {
    "text": "requests and obviously headers may be modified like we may insert an x-forwarded-for header with the source",
    "start": "387229",
    "end": "392449"
  },
  {
    "text": "IP of the original requester so for many years since 2000",
    "start": "392449",
    "end": "398129"
  },
  {
    "text": "in mine mm yep 2009 ELB is supported both on a single load balancer so we've",
    "start": "398129",
    "end": "404039"
  },
  {
    "text": "had what we call now the classic load balancer previously I didn't have an ammeter need an EM was just lb now it's",
    "start": "404039",
    "end": "409619"
  },
  {
    "text": "the classic load balancer it's supported both layer four and layer seven but the layer seven support has been it's been",
    "start": "409619",
    "end": "416519"
  },
  {
    "text": "okay there's some decent features in there but it's it's not the depth of layer seven support that many of our customers have been looking for and",
    "start": "416519",
    "end": "422519"
  },
  {
    "text": "really what you see in there is very much Amazon's approach to load balancing Amazon internally we actually treat load",
    "start": "422519",
    "end": "428729"
  },
  {
    "text": "balancers very simply we just basically if you have as long as you give me a verb an IP I can talk to back in",
    "start": "428729",
    "end": "434099"
  },
  {
    "text": "instances a health check and the ability to send traffic we're good to go anything else we're going to probably put into our application stack but many",
    "start": "434099",
    "end": "440669"
  },
  {
    "text": "of our customers are really looking for a richer layer seven experience hopefully many of you so in August we",
    "start": "440669",
    "end": "446789"
  },
  {
    "text": "announced the application load balancer I chatted to a few customers who said they only heard about this at reinvent",
    "start": "446789",
    "end": "452729"
  },
  {
    "text": "this week so it's been announced since August and been available and customers have been using it between seeing great",
    "start": "452729",
    "end": "458369"
  },
  {
    "text": "adoption so give you some idea of the features so we look at classic it",
    "start": "458369",
    "end": "464069"
  },
  {
    "text": "supports TCP and HTTP whereas application because it's only application its layer seven it's only",
    "start": "464069",
    "end": "470429"
  },
  {
    "text": "supporting HTTP and HTTPS from a platform point of view so now we're looking at the ec2 network architectures",
    "start": "470429",
    "end": "476639"
  },
  {
    "text": "the classic supports both ec2 classic it's not confusing at all as well as ec2",
    "start": "476639",
    "end": "481709"
  },
  {
    "text": "VPC so while the application load balancer supports VPC only so if you",
    "start": "481709",
    "end": "487079"
  },
  {
    "text": "have any applications that are still running on the classic network thank you for being on AWS for such a long time",
    "start": "487079",
    "end": "492529"
  },
  {
    "text": "and let us know if we can help you with the migration from a health check point",
    "start": "492529",
    "end": "497669"
  },
  {
    "text": "of view classic supported health checks but the application load balancer is some nice improvements which you'll talk",
    "start": "497669",
    "end": "502919"
  },
  {
    "text": "about a little bit later cloud watch metrics obviously they both support those although we we took a long look at",
    "start": "502919",
    "end": "507959"
  },
  {
    "text": "our cloud which metrics and I think we've improved them quite nicely and then some things that the application load balancer ports that are new so the",
    "start": "507959",
    "end": "513360"
  },
  {
    "text": "first one is in the world of content based routing and that so we allow path based routing so this means I receive a",
    "start": "513360",
    "end": "519930"
  },
  {
    "text": "request and that request I can actually look at the packets and forward it to a different back-end based on the path of",
    "start": "519930",
    "end": "525209"
  },
  {
    "text": "the request and then obviously container and micro service support that's massive given our customers are moving to",
    "start": "525209",
    "end": "530579"
  },
  {
    "text": "containers and in native WebSocket and HTTP to support so we we're catching up with all the",
    "start": "530579",
    "end": "536459"
  },
  {
    "text": "modern internet applications so let's take a deep dive into that application load balancer so the first thing to say",
    "start": "536459",
    "end": "542459"
  },
  {
    "text": "is it's it's we didn't just change classic load balancer we've built an",
    "start": "542459",
    "end": "548639"
  },
  {
    "text": "entirely new load balancing platform right pretty much a large part of it is brand new so because of that we wanted",
    "start": "548639",
    "end": "555149"
  },
  {
    "text": "to be very transparent with our customers we didn't want to go and change things behind the scenes you know the classic load balancer interprets",
    "start": "555149",
    "end": "561029"
  },
  {
    "text": "HTTP in some subtly different ways of times to the way that the application load balancer does so we want to say",
    "start": "561029",
    "end": "566279"
  },
  {
    "text": "fully transparent with our customers it's a new load balancer if you move to this test it see how it works for your",
    "start": "566279",
    "end": "572129"
  },
  {
    "text": "application let us know if there are any challenges what we've seen so far almost all of our customers have come back and",
    "start": "572129",
    "end": "577470"
  },
  {
    "text": "said it's amazing working really really well for us in our applications it's obviously fully managed scalable",
    "start": "577470",
    "end": "582779"
  },
  {
    "text": "and highly available just like the classic load balancer was and then it supports the content based routing feature super important feature as I",
    "start": "582779",
    "end": "589709"
  },
  {
    "text": "said earlier so the really big benefit of that is that a single application",
    "start": "589709",
    "end": "595680"
  },
  {
    "text": "load balancer can actually host multiple applications whereas previously we look at the classic load balancer again your",
    "start": "595680",
    "end": "602399"
  },
  {
    "text": "single ELB could host a single application right and if you don't want to host multiple applications well the",
    "start": "602399",
    "end": "608220"
  },
  {
    "text": "way to solve that and solution was well just use DNS so in this example we have",
    "start": "608220",
    "end": "613649"
  },
  {
    "text": "a plication handling our orders and we have an application and in images for our website and what I do is I just use",
    "start": "613649",
    "end": "621689"
  },
  {
    "text": "DNS so when from my client or from my web browser when I want to go to orders I do orders dot example.com and that'll",
    "start": "621689",
    "end": "627480"
  },
  {
    "text": "route it to the load balancer at the top and when I want the other one I do images and it routes via DNS the load balance at the bottom that works fine",
    "start": "627480",
    "end": "633829"
  },
  {
    "text": "you are paying for to load balancers and you having to manage to load balancers",
    "start": "633829",
    "end": "638910"
  },
  {
    "text": "and that you know it could be better so what application load balancer lets you do is well let's just have one DNS name",
    "start": "638910",
    "end": "645029"
  },
  {
    "text": "let's just have example.com and now in the path I've got the word orders or",
    "start": "645029",
    "end": "650550"
  },
  {
    "text": "images so using path based routing which I can set up as a routing rule the conditions going to say if anything in",
    "start": "650550",
    "end": "657389"
  },
  {
    "text": "the path matches orders and you can use wildcards here as well basic Club functionality forward that to",
    "start": "657389",
    "end": "662819"
  },
  {
    "text": "the target group so that blue box is called a target fold that to the target group for orders and if anything has the images forward",
    "start": "662819",
    "end": "670470"
  },
  {
    "text": "that to the images application at the bottom and today you can have up to ten",
    "start": "670470",
    "end": "675630"
  },
  {
    "text": "rules in your application load balancer so you can host up to ten different applications behind a single load balancer great big benefit so it's a",
    "start": "675630",
    "end": "684540"
  },
  {
    "text": "mess is a significant cost saving if you're running multiple load balancers just because you have single applications you can go down to a single",
    "start": "684540",
    "end": "691110"
  },
  {
    "text": "load balancer use path based routing today and have one application on one one load balancer so you could decrease",
    "start": "691110",
    "end": "697380"
  },
  {
    "text": "your hourly cost obviously your bandwidth cost will be roughly the same assuming you're sending the same amount of traffic one thing we see customers",
    "start": "697380",
    "end": "705180"
  },
  {
    "text": "say is that's fantastic I've currently got hundreds of load balancers I'm going to go down to one load balancer so what you do want to",
    "start": "705180",
    "end": "711360"
  },
  {
    "text": "think about is you think about your architecture you could do that could be supported but we think about blast",
    "start": "711360",
    "end": "716940"
  },
  {
    "text": "radius and isolation so if it was me doing this for my team's running application load balancer I'd probably look at an application load balancer pit",
    "start": "716940",
    "end": "723630"
  },
  {
    "text": "service or maybe per service team you know we have the two pizza teams at Amazon something where you know the",
    "start": "723630",
    "end": "729480"
  },
  {
    "text": "service teams operate on that load balance I have full control rather than one load balancer for the company just",
    "start": "729480",
    "end": "734580"
  },
  {
    "text": "you know trying to risk the single point of failure or configuration nightmare that that could turn into so we have",
    "start": "734580",
    "end": "740760"
  },
  {
    "text": "multiple applications behind a single load balancer cost-saving improvements management improvements it's a big",
    "start": "740760",
    "end": "746580"
  },
  {
    "text": "change next we want to look at the ability to support micro service",
    "start": "746580",
    "end": "752190"
  },
  {
    "text": "architectures and container based architectures so obviously application",
    "start": "752190",
    "end": "760140"
  },
  {
    "text": "load balancer can do that otherwise it would have been an irrelevant slide but the way we do it is multiple ports so",
    "start": "760140",
    "end": "766470"
  },
  {
    "text": "with classic load balancer you had a register an instance with the API and when you did that you can only give us",
    "start": "766470",
    "end": "772050"
  },
  {
    "text": "one port at a time for that instance and then you were done for that instance if you try to give us that instance again we would tell you that instance is",
    "start": "772050",
    "end": "778260"
  },
  {
    "text": "already registered so it meant running containers on a single instance is incredibly challenging because when you",
    "start": "778260",
    "end": "784320"
  },
  {
    "text": "run a contain an architecture regardless of you know what platform you're using it's going to try and select dynamic",
    "start": "784320",
    "end": "789390"
  },
  {
    "text": "ports so you have no control over the port that it listens on not all your containers can listen on 80 because there's only one port 80 available in",
    "start": "789390",
    "end": "795720"
  },
  {
    "text": "that box so they are going to choose a dynamic ephemeral what essentially and your load balancer needs to be able to use those so with",
    "start": "795720",
    "end": "802320"
  },
  {
    "text": "application load balancer when you register an instance you can give us a port and that together is unique so you",
    "start": "802320",
    "end": "809100"
  },
  {
    "text": "can give us that instance again as long as the ports different you can keep registering so you can register an instance as many times as you like well",
    "start": "809100",
    "end": "814980"
  },
  {
    "text": "the SI 65,000 also and we will route requests on those ports so it gives you",
    "start": "814980",
    "end": "820140"
  },
  {
    "text": "the ability to carve up a single instance if you use Amazon ECS which is the ec2 container service",
    "start": "820140",
    "end": "826520"
  },
  {
    "text": "ECS will actually manage all of this for you so you just tell the CICS my task",
    "start": "826520",
    "end": "831630"
  },
  {
    "text": "there's my load balancer and it will actually launch those containers and register them for load balancer automatically you don't to think about",
    "start": "831630",
    "end": "837750"
  },
  {
    "text": "it so but don't don't think that it's only supported with ECS even if you're",
    "start": "837750",
    "end": "843270"
  },
  {
    "text": "not running containers you just run in a few applications on a single instance and they're listening on different ports you can still register that instance",
    "start": "843270",
    "end": "849780"
  },
  {
    "text": "multiple times with the same load balancer on different ports so that's the that's the big functionality there",
    "start": "849780",
    "end": "855170"
  },
  {
    "text": "so to give you some idea of how this works I mean you know in this slide we had ec2 instances as part of the target",
    "start": "855170",
    "end": "860970"
  },
  {
    "text": "group again the target group is the the logical grouping of machines behind the load balancer the blue the dotted blue",
    "start": "860970",
    "end": "867210"
  },
  {
    "text": "line you know we can turn those into containers so I just turn them into",
    "start": "867210",
    "end": "872730"
  },
  {
    "text": "containers so now you have ECS containers running there and you can mix and match as long as your target groups only contain like ec2 instances or",
    "start": "872730",
    "end": "880500"
  },
  {
    "text": "containers but you know you kind of run the same thing keep your target are groups of modulus but you can have",
    "start": "880500",
    "end": "886560"
  },
  {
    "text": "target groups some of them are ec2 instances some of them containers as you as you move the application so again keeping on the cost-saving theme with",
    "start": "886560",
    "end": "894000"
  },
  {
    "text": "containers one of the great things is is you get better utilization of your ec2 hardware so you can carve up a single",
    "start": "894000",
    "end": "900660"
  },
  {
    "text": "ec2 instance now into much smaller chunks or slots and drive up the",
    "start": "900660",
    "end": "906300"
  },
  {
    "text": "utilization of that machine whereas previously with the LB you may have had wasted capacity on those back in instances because maybe a t2 micro was",
    "start": "906300",
    "end": "913350"
  },
  {
    "text": "too big for your for your micro service right and you still had wasted capacity now you can really get all the capacity",
    "start": "913350",
    "end": "919950"
  },
  {
    "text": "out of that so that's containers so that's little bit of the API so is the",
    "start": "919950",
    "end": "924990"
  },
  {
    "text": "very interesting for us because you know I did a lot of work on the EC to control",
    "start": "924990",
    "end": "930459"
  },
  {
    "text": "plane maybe I shouldn't have told you that but we really prioritize backwards-compatibility",
    "start": "930459",
    "end": "935980"
  },
  {
    "text": "right so we like many of you guys have done API work what is the number one rule in designing API it's like don't",
    "start": "935980",
    "end": "941259"
  },
  {
    "text": "bake backwards-compatibility like find a way to make this thing work and when we launched this feature we",
    "start": "941259",
    "end": "947019"
  },
  {
    "text": "broke backwards compatibility and we took us about nine months to get to a place where we felt good about it ok",
    "start": "947019",
    "end": "952600"
  },
  {
    "text": "with it and the reason for it is we realized the original ELB API was just too simple we",
    "start": "952600",
    "end": "958509"
  },
  {
    "text": "we went at it with every single angle to try and put all this layer 7 functionality into it we couldn't make it happen so eventually",
    "start": "958509",
    "end": "965259"
  },
  {
    "text": "we said you know what customers want this functionality and we can actually give them a better API that solves a",
    "start": "965259",
    "end": "970419"
  },
  {
    "text": "couple of the challenges we've had on the old API some of the design decisions we made if you wanted to change and this future focus so you can support all the",
    "start": "970419",
    "end": "977049"
  },
  {
    "text": "layer 7 features we want to do you know going forward if we just broke backwards compatibility and I'm happy to tell you",
    "start": "977049",
    "end": "982929"
  },
  {
    "text": "that all the customers I've spoken to have been happy with that decision so the one time in my career that I've",
    "start": "982929",
    "end": "988419"
  },
  {
    "text": "broken backwards compatibility and I've gotten away with it so I think it's been good obviously the SDK integrates this",
    "start": "988419",
    "end": "993459"
  },
  {
    "text": "cloud formation integration so it's very easy to do but you'll see it is a new API the console if you use the console",
    "start": "993459",
    "end": "999160"
  },
  {
    "text": "it's exactly the same experience you don't even know that it's using a different API behind the scenes we've also it's a newer API now so it follows",
    "start": "999160",
    "end": "1006059"
  },
  {
    "text": "a lot of the best practices that AWS has learned over the years the original elb api was 2009 which was early days we've",
    "start": "1006059",
    "end": "1013619"
  },
  {
    "text": "also got quite a few new resource types so previously we had a load balancer it was very simple had a load balancer you",
    "start": "1013619",
    "end": "1020100"
  },
  {
    "text": "added instances to it to support all the new functionality we've added things like target groups targets and rules so",
    "start": "1020100",
    "end": "1027149"
  },
  {
    "text": "I'm going to walk you through what this sort of the sort of model of the API looks like so you can understand a",
    "start": "1027149",
    "end": "1032399"
  },
  {
    "text": "little bit better and think about how you would map your application to an application load balancer so obviously we still have a load balancer we didn't",
    "start": "1032399",
    "end": "1038970"
  },
  {
    "text": "get rid of that and we still have listeners which we had previously so what is a listener well a listener",
    "start": "1038970",
    "end": "1045720"
  },
  {
    "text": "defines the port and the protocol on which the load balancer listens it",
    "start": "1045720",
    "end": "1051389"
  },
  {
    "text": "sounds pretty obvious now that I said so if you want a website listening on port 80 what you would do is you'd basically",
    "start": "1051389",
    "end": "1057299"
  },
  {
    "text": "say I want HTTP or ideally HTTPS on port 80 and that listen we then start",
    "start": "1057299",
    "end": "1063270"
  },
  {
    "text": "listening and accepting incoming requests you can have at leat you have to have at least one listener per load",
    "start": "1063270",
    "end": "1068520"
  },
  {
    "text": "balancer and you can have up to ten listeners right if you need more than that obviously just like ec2 instance",
    "start": "1068520",
    "end": "1073800"
  },
  {
    "text": "limits you can always come and talk to us and we see if we raise it for you routing rules the ability to route this",
    "start": "1073800",
    "end": "1079110"
  },
  {
    "text": "content based routing path based routing are defined on your listeners right so we all got what listeners are so let's",
    "start": "1079110",
    "end": "1085350"
  },
  {
    "text": "go to the next now we're looking at target groups so what I've shown you there is the the dotted target groups",
    "start": "1085350",
    "end": "1091470"
  },
  {
    "text": "and you can see how about three target groups in this architecture together with health checks so logical grouping",
    "start": "1091470",
    "end": "1098520"
  },
  {
    "text": "of targets behind a load balancer so we called them targets we haven't called them ec2 instances right now we support",
    "start": "1098520",
    "end": "1105690"
  },
  {
    "text": "ec2 instances and containers but they targets right target groups can exist",
    "start": "1105690",
    "end": "1112380"
  },
  {
    "text": "independently from the load balancer so you don't have to you can have a target group defined and just add the resources",
    "start": "1112380",
    "end": "1117600"
  },
  {
    "text": "to it and at some point map it to a load balancer or map it to multiple load balancers and the other really nice thing is targets are regional but they",
    "start": "1117600",
    "end": "1125400"
  },
  {
    "text": "can be a search and be associated with an auto scaling group so you can actually have an auto scaling group scaling each one of those target groups",
    "start": "1125400",
    "end": "1130950"
  },
  {
    "text": "individually so there's separate applications there are scales differently but you want your auto scaling to scale them individually so",
    "start": "1130950",
    "end": "1137250"
  },
  {
    "text": "that's target groups so let's build the picture up and then health check service you defined on the target group so now",
    "start": "1137250",
    "end": "1143400"
  },
  {
    "text": "we're looking at the targets so I added the ec2 instances there so what is a target so if your targets a logical load",
    "start": "1143400",
    "end": "1150000"
  },
  {
    "text": "balancing target and today it can be an ec2 instance a micro service or a container and it can be registered with",
    "start": "1150000",
    "end": "1155220"
  },
  {
    "text": "multiple ports we spoke about that and a single target can be registered with multiple target groups so if you have an",
    "start": "1155220",
    "end": "1160590"
  },
  {
    "text": "ec2 instance and you actually wanted to exist in multiple applications or toasting across multiple applications so",
    "start": "1160590",
    "end": "1166110"
  },
  {
    "text": "I think stopping you from just taking it instances and registering at multiple times you do need to be a little careful",
    "start": "1166110",
    "end": "1171270"
  },
  {
    "text": "this is a lot of rope we're giving you you can come up with some very interesting architectures I have seen",
    "start": "1171270",
    "end": "1177060"
  },
  {
    "text": "some incredible architectures that customers have come up using this so you want to just keep thinking about availability and maintainability but you",
    "start": "1177060",
    "end": "1184560"
  },
  {
    "text": "can do some interesting stuff so we've got there so how do we link these together all right so it's a no traffic's flowing yet because I've got",
    "start": "1184560",
    "end": "1190140"
  },
  {
    "text": "my load balancer my listeners my my targets but I haven't linked them together so let's them together so obviously we linked",
    "start": "1190140",
    "end": "1195600"
  },
  {
    "text": "them together with something that we can't read and that's his rules all right so we're looking at the rules there so in the",
    "start": "1195600",
    "end": "1201390"
  },
  {
    "text": "middle you got the the default rule you've got an image rule and I think you've got an orders rule so we do support a default rule a default rule",
    "start": "1201390",
    "end": "1207539"
  },
  {
    "text": "means if this request doesn't match anything in the path or none of my other rules just send this to that target",
    "start": "1207539",
    "end": "1212549"
  },
  {
    "text": "group so you can have a load balancer with just one default rule and one target group it'll work perfectly fine very similar to what the classic load",
    "start": "1212549",
    "end": "1218850"
  },
  {
    "text": "balancer does but you can fall back to default as well or have more specific ones so we look at rules what a rules",
    "start": "1218850",
    "end": "1224580"
  },
  {
    "text": "support today so they provide a link between the listeners and the target groups and they consist of conditions in",
    "start": "1224580",
    "end": "1231659"
  },
  {
    "text": "action so every rule is a condition and then what action do you want to follow today we have one action which is the",
    "start": "1231659",
    "end": "1237059"
  },
  {
    "text": "forward action which will forward a request to a target group and so when it request arrives we look at the condition",
    "start": "1237059",
    "end": "1242970"
  },
  {
    "text": "we run through all the rules when we find one that matches we forward it to that target group if we don't find one",
    "start": "1242970",
    "end": "1248610"
  },
  {
    "text": "as matches and you have a default we will use the default if there's no default we will return a 5 a 3 and today",
    "start": "1248610",
    "end": "1256260"
  },
  {
    "text": "you can do path based rules so you have to give us a path pattern and you can use a deposit obviously case-sensitive",
    "start": "1256260",
    "end": "1261720"
  },
  {
    "text": "can be up to 128 characters in length and those are the the various characters that can be included in your normal URL",
    "start": "1261720",
    "end": "1268529"
  },
  {
    "text": "star path so there was a whirlwind tour of what the architecture looks like but",
    "start": "1268529",
    "end": "1273570"
  },
  {
    "text": "you can kind of see how it all hangs together it's all available in the console very cleanly laid out and yeah",
    "start": "1273570",
    "end": "1280860"
  },
  {
    "text": "api's are nice and clean and new as well so should be pretty straightforward so let's see if we can pull a rabbit out of",
    "start": "1280860",
    "end": "1287250"
  },
  {
    "text": "a hat here so today we have load balancers that support up to 10 rules so",
    "start": "1287250",
    "end": "1292799"
  },
  {
    "text": "we launched with that we said who could possibly need more than 10 rules what turns out most people actually need more than 10 rules so we decided okay well",
    "start": "1292799",
    "end": "1299070"
  },
  {
    "text": "let's remove that limits so in the very near future you come talk to me we can make it sooner you can have it set up to",
    "start": "1299070",
    "end": "1306059"
  },
  {
    "text": "100 rules but it's like a hundred days in you can have twenty ec2 instances on a new account we can raise that up if",
    "start": "1306059",
    "end": "1311460"
  },
  {
    "text": "you want so we're sort of removing the limit from rules so it'll be available",
    "start": "1311460",
    "end": "1316830"
  },
  {
    "text": "publicly in the next few weeks but we do have a better available now oh the other",
    "start": "1316830",
    "end": "1322980"
  },
  {
    "text": "thing we added was deletion protection every now and then I get a frantic call from a customer",
    "start": "1322980",
    "end": "1328050"
  },
  {
    "text": "Dave I just deleted my main load balancer can you help me and some of the",
    "start": "1328050",
    "end": "1333420"
  },
  {
    "text": "times we can we go in and we see oh look those IPS are still available and we can kind of reconstruct the thing we actually have an API internally that's",
    "start": "1333420",
    "end": "1339360"
  },
  {
    "text": "just undelete the customers load balancer now so we decided we decided",
    "start": "1339360",
    "end": "1346620"
  },
  {
    "text": "rather than making my engineers do that all the time it doesn't happen too often we should probably give it a customers amazing feature you can actually say",
    "start": "1346620",
    "end": "1353550"
  },
  {
    "text": "don't let me delete this load balancer via the API and then if you try and delete it it says sorry you can't delete it then you have to go and remove the",
    "start": "1353550",
    "end": "1359010"
  },
  {
    "text": "deletion protection and then you can delete it right so good feature to use",
    "start": "1359010",
    "end": "1365630"
  },
  {
    "text": "application load balancer provides improved performance for internet applications all right so we spoke about this a little bit earlier but there are",
    "start": "1365840",
    "end": "1371850"
  },
  {
    "text": "a few things in here if you're running an application on the Internet and you don't even have a need for path based routing it's a really good idea if",
    "start": "1371850",
    "end": "1378210"
  },
  {
    "text": "it's HTTP to consider application load balancer so some of the things there's a native support for WebSockets basically",
    "start": "1378210",
    "end": "1386100"
  },
  {
    "text": "WebSockets been around for a year or two basically allow full duplex communication so we have a lot of",
    "start": "1386100",
    "end": "1392850"
  },
  {
    "text": "customers doing it for things like you know Twitter feeds and your sports feeds where you've got an iPad you want to",
    "start": "1392850",
    "end": "1399000"
  },
  {
    "text": "connect to the load balancer and you from a server you want to be pushing content to the iPad or pushing to the device it's WebSockets are letting",
    "start": "1399000",
    "end": "1404670"
  },
  {
    "text": "you're doing so previously customers would use TCP load balancing on classic now you get full WebSocket support HTTP",
    "start": "1404670",
    "end": "1411870"
  },
  {
    "text": "to obviously the newer version of HTTP protocol significant improvements the page load load time so you can do sort",
    "start": "1411870",
    "end": "1417600"
  },
  {
    "text": "of multi multiple pages load multiple requests to the server at the same time so we support HTTP two out of the box as",
    "start": "1417600",
    "end": "1424440"
  },
  {
    "text": "well and then improve performance for real-time in streaming applications as well so classic load balancer if you",
    "start": "1424440",
    "end": "1429720"
  },
  {
    "text": "were doing very large downloads or you're trying to do streaming through the load balancer there were some challenges there used to do quite a bit of buffering and that's not great when",
    "start": "1429720",
    "end": "1436500"
  },
  {
    "text": "your streaming application load balancer solves all of those problems important",
    "start": "1436500",
    "end": "1442170"
  },
  {
    "text": "tip so there's no additional configuration required to use WebSockets or HTTP 2 I've actually thought about",
    "start": "1442170",
    "end": "1449160"
  },
  {
    "text": "adding a checkbox to the console that does nothing at all just to say I want WebSockets and I want HTTP to because",
    "start": "1449160",
    "end": "1454380"
  },
  {
    "text": "the number of customers that I said how do I turn on WebSockets in HTTP 2 it's on by default it's just on the load",
    "start": "1454380",
    "end": "1459540"
  },
  {
    "text": "balancer it actually happens all in the request path so WebSockets will be upgraded automatically to a",
    "start": "1459540",
    "end": "1464809"
  },
  {
    "text": "WebSocket connection you don't have to do anything so we have another Hatter via plastic load balancers have offered",
    "start": "1464809",
    "end": "1472910"
  },
  {
    "text": "ipv6 support for some time actually that's since around June 2011 there's actually a day every year called ipv6",
    "start": "1472910",
    "end": "1479809"
  },
  {
    "text": "day international ipv6 day and we launched ipv6 support on plastic load balancers back in 2011 we've we've also",
    "start": "1479809",
    "end": "1487610"
  },
  {
    "text": "supported them on both classic and VPC if you if you do want ipv6 on VPC we can",
    "start": "1487610",
    "end": "1494480"
  },
  {
    "text": "we can give it to you that kind of doesn't matter because in the coming weeks native ipv6 support is available",
    "start": "1494480",
    "end": "1500540"
  },
  {
    "text": "on all application load balancers so obviously in vp c is only and this is full I P v6 the other thing that's going",
    "start": "1500540",
    "end": "1508040"
  },
  {
    "text": "to be available is ipv6 on ec2 so you'll get full ipv6 between ec2 instances egress to the internet everything ok",
    "start": "1508040",
    "end": "1517390"
  },
  {
    "text": "the world's been waiting five p v6 for like 20 years now so ok and then",
    "start": "1517660",
    "end": "1524390"
  },
  {
    "text": "improvements the application availability and scalability of the load balancer so these have been you know if",
    "start": "1524390",
    "end": "1531140"
  },
  {
    "text": "I look at where we spend our time on ELB since I've been on the team a number one priority is three three we have three",
    "start": "1531140",
    "end": "1538220"
  },
  {
    "text": "number one priorities security availability and scalability we just cannot drop the ball at any of those I",
    "start": "1538220",
    "end": "1544070"
  },
  {
    "text": "mean you know if you have a load balancer that does something strange it's infuriating and we just have to make sure that they are highly available",
    "start": "1544070",
    "end": "1549710"
  },
  {
    "text": "and highly scalable all the time so if we come back to you know that we all realize that this wasn't the",
    "start": "1549710",
    "end": "1554720"
  },
  {
    "text": "architecture that we really wanted you know we'd only be building applications like that we wanted to be super highly available let's look at a few things",
    "start": "1554720",
    "end": "1561500"
  },
  {
    "text": "we've improved in application load balancer so the first one I spoke about a little while ago is health checks and",
    "start": "1561500",
    "end": "1567650"
  },
  {
    "text": "they allow for traffic to be shifted from an impaired or failed instance so this is a health check behind the load",
    "start": "1567650",
    "end": "1572720"
  },
  {
    "text": "balancer and the way this works is the instances are running along they all",
    "start": "1572720",
    "end": "1578179"
  },
  {
    "text": "take in traffic you suddenly have one instance that has some sort of problem right the CPU starts to spike maybe you",
    "start": "1578179",
    "end": "1583730"
  },
  {
    "text": "had an infinite loop or you memory issues whatever it might be the health check will start to fail to that instance so we stopped sending traffic",
    "start": "1583730",
    "end": "1589940"
  },
  {
    "text": "there and that all happens within a few seconds so you know often less than a second so the sole",
    "start": "1589940",
    "end": "1595220"
  },
  {
    "text": "check run it runs every few seconds as soon as you detect a failure which you can define so you define what your lb",
    "start": "1595220",
    "end": "1600380"
  },
  {
    "text": "going to call will shift traffic away when the instance becomes healthy again will shut that traffic back again with",
    "start": "1600380",
    "end": "1607880"
  },
  {
    "text": "auto scaling as well you can set auto scaling up so that if any instance fails the health check it will actually remove that instance out of service and replace",
    "start": "1607880",
    "end": "1613940"
  },
  {
    "text": "it as well so that even the mitigation of a failed instance can all be automated so we look at what we support",
    "start": "1613940",
    "end": "1621860"
  },
  {
    "text": "so with application load balancer obviously it's not TCP health checks it's just HTTP and HTTPS you can",
    "start": "1621860",
    "end": "1627980"
  },
  {
    "text": "customize the frequency the failure and the one thing you can do that you haven't been able to do previously is the list of threat the actual return",
    "start": "1627980",
    "end": "1634610"
  },
  {
    "text": "type so successful response codes I'm so previously on classic load balancers you had to send us 200 we didn't send us a",
    "start": "1634610",
    "end": "1641390"
  },
  {
    "text": "200 we consider to be a failure and lots of applications return like 300 ones my health checks and other things now you",
    "start": "1641390",
    "end": "1646580"
  },
  {
    "text": "can say to us hey if I give you a response just just accept it right and then the one I like the most is detailed",
    "start": "1646580",
    "end": "1652700"
  },
  {
    "text": "reasons for health checks I actually showed by the API and a tubeless management console and this was one of",
    "start": "1652700",
    "end": "1657920"
  },
  {
    "text": "the largest number of stem support contacts for ELB was why is my health check failing so based on that feedback",
    "start": "1657920",
    "end": "1663890"
  },
  {
    "text": "we just thought maybe it's a good idea just to tell you in the API in the console so if you hope to expand it will",
    "start": "1663890",
    "end": "1669110"
  },
  {
    "text": "now say hey we've seen a timeout or we see in a connection error or you know we actually returning some code that",
    "start": "1669110",
    "end": "1674450"
  },
  {
    "text": "doesn't match so you'll actually see that in the console just saves us in Awesome out of time and it saves you an",
    "start": "1674450",
    "end": "1679910"
  },
  {
    "text": "enormous amount of time and then the other change keep in mind is with classic load balancer if all your health",
    "start": "1679910",
    "end": "1686180"
  },
  {
    "text": "checks fail so if you fail all the health checks to your backends we will return five or threes so we say all",
    "start": "1686180",
    "end": "1691850"
  },
  {
    "text": "instances are unhealthy let's return five or threes with application load balancer we've taken a",
    "start": "1691850",
    "end": "1697130"
  },
  {
    "text": "different approach we say if all those machines fail we're actually going to fail open because if anything",
    "start": "1697130",
    "end": "1702440"
  },
  {
    "text": "everything's down we may as well trying to send the traffic somewhere it's very likely that the connections going to fail we sent a five a three anyway but",
    "start": "1702440",
    "end": "1708920"
  },
  {
    "text": "if everything fails we're going to fail open and there's one of the one of the great things with this approach is we do",
    "start": "1708920",
    "end": "1714620"
  },
  {
    "text": "have from time to time customers that have configured their health checks that are too deep in the system right so you",
    "start": "1714620",
    "end": "1719960"
  },
  {
    "text": "may have a customer we've we've seen situations customers have every health Jake hit their master database and if it",
    "start": "1719960",
    "end": "1726230"
  },
  {
    "text": "does get a successful response from that master database and by the way there's only one of those monster databases but there might be ten application servers",
    "start": "1726230",
    "end": "1732020"
  },
  {
    "text": "and that master database has some sort of hiccup all those servers go out of service and what would have been just a",
    "start": "1732020",
    "end": "1737660"
  },
  {
    "text": "few seconds of impact on the master database now all of a sudden you took all your servers out of service and your whole application is returning five or",
    "start": "1737660",
    "end": "1743210"
  },
  {
    "text": "threes so this will actually protect you against that situation but there there's another point a your best practices think about the depth of your health",
    "start": "1743210",
    "end": "1750470"
  },
  {
    "text": "checks ideally for me most health checks should really just check the health of the machine behind the load balancer",
    "start": "1750470",
    "end": "1756020"
  },
  {
    "text": "like try and avoid like hitting a website out on the internet which I've seen before as well and you know you",
    "start": "1756020",
    "end": "1761870"
  },
  {
    "text": "don't you just ideally keep it isolated and be careful of things that are regional as well so you've got a",
    "start": "1761870",
    "end": "1767000"
  },
  {
    "text": "regional resource that you're trying to include in your health check my guidance system keep them as shallow as possible",
    "start": "1767000",
    "end": "1772820"
  },
  {
    "text": "and think deeply about them because it is a risk it's less of a risk and application imbalance because we do fail open still not great and I'm sure if",
    "start": "1772820",
    "end": "1780200"
  },
  {
    "text": "you've been around any AWS employee for even five minutes they'll give you this advice always use multiple availability",
    "start": "1780200",
    "end": "1786710"
  },
  {
    "text": "zones and we spoke a little about how ELB does that you know we always run in multiple availability zones and what I",
    "start": "1786710",
    "end": "1792320"
  },
  {
    "text": "want to show you is even if you are only in one zone we will actually route their traffic from another zone through to you",
    "start": "1792320",
    "end": "1798260"
  },
  {
    "text": "and our goal here is really to never have an elastic load balancer fail so you know if we have any problem in a",
    "start": "1798260",
    "end": "1805010"
  },
  {
    "text": "zone we will always be able to serve the traffic out of the other zone and that traffic will automatically shift from a failed zone using route 53 so all that",
    "start": "1805010",
    "end": "1812090"
  },
  {
    "text": "is actually automatically done via DNS and I mean I would often have customers you do say well I run in one zone",
    "start": "1812090",
    "end": "1817970"
  },
  {
    "text": "because of cost and cost is a serious concern sometimes we don't to spend the cost for additional zones so we actually",
    "start": "1817970",
    "end": "1823670"
  },
  {
    "text": "at Amazon we typically always run in three zones two zones where they're available if these three zones will always choose three zones and the reason",
    "start": "1823670",
    "end": "1829850"
  },
  {
    "text": "being is being in one zone is an availability risk because you know we say that's a unit of failure isolation",
    "start": "1829850",
    "end": "1837350"
  },
  {
    "text": "if that fails and we could lose his own we guarantee you'll never lose two zones for the same reason at the same time then want to really be in one zone well",
    "start": "1837350",
    "end": "1845000"
  },
  {
    "text": "let's go to two zones so in this example I'm trying to say I need six machines to always have enough capacity so if I go",
    "start": "1845000",
    "end": "1852110"
  },
  {
    "text": "to two zones well now I'm going to make say if I lose a zone I still want to have six machines so six let's fix I need 12 machines now",
    "start": "1852110",
    "end": "1858659"
  },
  {
    "text": "to zones to actually handle all my requests because I got to be scaled enough to lose his own well what happens",
    "start": "1858659",
    "end": "1863940"
  },
  {
    "text": "if we go to three zones so if we go to three zones well now I if I lose one zone I'm still going to have six",
    "start": "1863940",
    "end": "1870509"
  },
  {
    "text": "machines and to do that I need to have three machines in each zone if you guys do the math on that which I did before the talk to make sure is correct that's",
    "start": "1870509",
    "end": "1876239"
  },
  {
    "text": "actually only nine machines so I only need nine machines now not the twelve machines so actually running in three",
    "start": "1876239",
    "end": "1882210"
  },
  {
    "text": "zones can often be cheaper than running in two zones to be scaled feel your load",
    "start": "1882210",
    "end": "1888179"
  },
  {
    "text": "an application load balancer will support that so one of the things we do see is there's sometimes multiple challenges well at least one I'm going",
    "start": "1888179",
    "end": "1894960"
  },
  {
    "text": "to talk about here I'm running in running in multiple zones and one of those is your clients are resolving DNS",
    "start": "1894960",
    "end": "1901639"
  },
  {
    "text": "to enter the zone so sometimes you'll have DNS providers that catch DNS so",
    "start": "1901639",
    "end": "1907080"
  },
  {
    "text": "you'll have clients that just resolve DNS once and never do it again job is actually pretty bad at that right",
    "start": "1907080",
    "end": "1912659"
  },
  {
    "text": "unless you set the ex header Java will actually do that resolves that is slide up but never does it again and they very",
    "start": "1912659",
    "end": "1919379"
  },
  {
    "text": "sticky to a lot of one IP but you get these sort of imbalances in traffic and that can often cause as you can see",
    "start": "1919379",
    "end": "1926039"
  },
  {
    "text": "there you know one of your zones to be running a lock take a lot more traffic than others and the way we solve that is",
    "start": "1926039",
    "end": "1931729"
  },
  {
    "text": "we actually just use a physical crosser load balancing which I actually send the traffic from the load balancer to",
    "start": "1931729",
    "end": "1937019"
  },
  {
    "text": "multiple zones behind the scenes and the great thing there is you just see all your zones just get the exactly the same",
    "start": "1937019",
    "end": "1942869"
  },
  {
    "text": "amount of traffic it's actually even better than that because my clicker is",
    "start": "1942869",
    "end": "1949080"
  },
  {
    "text": "not working here so what is actually doing is it's just ripping their traffic so evenly that you get the same amount of traffic in each zone and the other",
    "start": "1949080",
    "end": "1956129"
  },
  {
    "text": "thing is even if you have an imbalance in ec2 instances even if you have one instance in one zone and three and",
    "start": "1956129",
    "end": "1961739"
  },
  {
    "text": "another the zone with three is going to get three times the amount of traffic and there's only one since get enough for that one instance it actually does",
    "start": "1961739",
    "end": "1967859"
  },
  {
    "text": "it at a per target level so you get a much better case all your targeting at the same amount of traffic and then the",
    "start": "1967859",
    "end": "1973919"
  },
  {
    "text": "really amazing thing is there's no additional bandwidth charge for the cross zone traffic so we actually removed the normal bandwidth chargeable",
    "start": "1973919",
    "end": "1980519"
  },
  {
    "text": "cross zone out of this so you can do this with ELB and not pay for that cross zone traffic bandwidth charge and cross",
    "start": "1980519",
    "end": "1988710"
  },
  {
    "text": "around load balancing is actually enabled by default on all application load so on classic load balances it wasn't",
    "start": "1988710",
    "end": "1994290"
  },
  {
    "text": "enabled by default but I'll cross the application balance so we said it is you actually currently cannot turn it off",
    "start": "1994290",
    "end": "2000080"
  },
  {
    "text": "it's not disabled bill but they are valid architectures where you actually do want to turn it off you want to be very very zonal so we are going to be",
    "start": "2000080",
    "end": "2007130"
  },
  {
    "text": "adding the feature to allow you to actually disable cross and load balancing and then order scaling",
    "start": "2007130",
    "end": "2012740"
  },
  {
    "text": "one of the big changes I mentioned earlier is auto scaling will actually not scale at the target group level so",
    "start": "2012740",
    "end": "2017900"
  },
  {
    "text": "to give you some idea of how that works so we've got two target groups here with ec2 instances in them taking a certain amount of traffic traffic to the target",
    "start": "2017900",
    "end": "2025460"
  },
  {
    "text": "group at the bottom increases you use the cloud which metrics with auto scaling to tailor to start adding machines and all the scaling will",
    "start": "2025460",
    "end": "2031760"
  },
  {
    "text": "actually scale it up so I mean obviously makes sense given that you've got different applications hosted behind",
    "start": "2031760",
    "end": "2037370"
  },
  {
    "text": "your load balancer they do in very different things your orders could get a lot less traffic than your images you could see spikes on the different ones",
    "start": "2037370",
    "end": "2043460"
  },
  {
    "text": "you want to scale them independently so if you use application load balancing auto scaling can scale the applications",
    "start": "2043460",
    "end": "2049070"
  },
  {
    "text": "independently or at different target groups then one of the one of the things",
    "start": "2049070",
    "end": "2057649"
  },
  {
    "text": "that actually took me a while to realize this as well is many of you have applications which have a daily peak all",
    "start": "2057650",
    "end": "2063830"
  },
  {
    "text": "right so you where we have at Amazon obviously retail we have a fairly substantial daily peak every day and we",
    "start": "2063830",
    "end": "2070940"
  },
  {
    "text": "see that many of our customers have the daily peak and they're in their traffic flow when you're using order scaling and you actually follow in that line of",
    "start": "2070940",
    "end": "2077090"
  },
  {
    "text": "trying to scale your machines to that kind of remember you're at peak all the time because when you actual when you're",
    "start": "2077090",
    "end": "2083330"
  },
  {
    "text": "at your lowest point like mentally you think you know it's not a hit not a busy time for the service right now we're at the low point but you've taken away all",
    "start": "2083330",
    "end": "2089000"
  },
  {
    "text": "the capacity so we've sometimes seen customers actually at the lowest point every day running to 5:00 or 3s and",
    "start": "2089000",
    "end": "2095419"
  },
  {
    "text": "surge queues and problems with the load balancer because they just haven't realized that I'm actually running kind of at peak all the time because it's",
    "start": "2095420",
    "end": "2101120"
  },
  {
    "text": "it's utilizing just just enough capacity all the time so just something to think about with the elbe and auto scaling is you can actually see problems at your",
    "start": "2101120",
    "end": "2107750"
  },
  {
    "text": "lowest point if you're taking away too much capacity and then our security features so back in 2014 we was well",
    "start": "2107750",
    "end": "2117080"
  },
  {
    "text": "times given it was a couple of months before heartbleed some of you may remember that event we we took a look at",
    "start": "2117080",
    "end": "2124400"
  },
  {
    "text": "our SSL ciphers and protocols and he said you know customers it's become so complicated like every month veneering",
    "start": "2124400",
    "end": "2130579"
  },
  {
    "text": "about some new vulnerability and what should I do and it takes a lot of time to become an SSL expert and if you ask a",
    "start": "2130579",
    "end": "2136849"
  },
  {
    "text": "lot of the security experts they'll often tell you well this is the set of ciphers and protocols you need to use and when you actually go have a look",
    "start": "2136849",
    "end": "2142220"
  },
  {
    "text": "that I mean they're super secure and the reason they secure is no web browsers yet implemented support for those ciphers and protocols so we had that",
    "start": "2142220",
    "end": "2150380"
  },
  {
    "text": "with internally in Amazon we were given us some advice similar to that one so so we said well as ELB we need a staff app",
    "start": "2150380",
    "end": "2156440"
  },
  {
    "text": "and we need to take control of this we need to make sure all of our customers are but the very best ciphers and protocols and we can't expect them to be",
    "start": "2156440",
    "end": "2162349"
  },
  {
    "text": "experts in this so we we added with SSL offloading we added SSL negotiation cycles and the way we do this is I have",
    "start": "2162349",
    "end": "2169070"
  },
  {
    "text": "a couple engineers on my team that are very involved in the SSL community Colm McCarthy gave a talk earlier about a",
    "start": "2169070",
    "end": "2175160"
  },
  {
    "text": "version of pretty much an SSL open SSL kind of library that we've written",
    "start": "2175160",
    "end": "2181369"
  },
  {
    "text": "ourselves that's been open sourced great talk I'm sure it'll be on YouTube if you missed it but we said well we've taken a",
    "start": "2181369",
    "end": "2188839"
  },
  {
    "text": "look at all the ciphers and protocols understand deeply all the vulnerabilities the other thing we do is",
    "start": "2188839",
    "end": "2194030"
  },
  {
    "text": "we run all of Amazon comms traffic it's one of the great things that Amazon me just go grab that entire traffic stream",
    "start": "2194030",
    "end": "2199160"
  },
  {
    "text": "and say okay let's run this through an ELB and let's see what happens wasn't the live traffic it was just a siphon",
    "start": "2199160",
    "end": "2205369"
  },
  {
    "text": "some more we run all of that life or siphon their traffic off and we then go and look and we add the siphon we see oh",
    "start": "2205369",
    "end": "2211609"
  },
  {
    "text": "wow if we add that cipher we can see we see a 30% drop in clients being able to connect to us we could obviously see the",
    "start": "2211609",
    "end": "2217670"
  },
  {
    "text": "user agents as well so we can see oh well look at all the you know Windows XP machines just dropped off we'd better",
    "start": "2217670",
    "end": "2222890"
  },
  {
    "text": "put that one back and so we do that and that gives us the absolute best ciphers",
    "start": "2222890",
    "end": "2228770"
  },
  {
    "text": "and protocols for your application based on pretty much every user agent we can find out there we a couple other ways of",
    "start": "2228770",
    "end": "2236240"
  },
  {
    "text": "doing that as well as well as the ability to connect so the very best security best practices and the ability",
    "start": "2236240",
    "end": "2241970"
  },
  {
    "text": "to connect from is wider range as clients as possible so if you're using classic we always recommend use the",
    "start": "2241970",
    "end": "2247130"
  },
  {
    "text": "latest SSL policy if you've defined your own policies on classic that's fine take",
    "start": "2247130",
    "end": "2253220"
  },
  {
    "text": "a look at how they differ and maybe have a look at you know whether you should just migrate to the manage one on application load balancer or",
    "start": "2253220",
    "end": "2259099"
  },
  {
    "text": "policies are managed so you'll always get one of our managed policies we just think that's a better way to go just given all the problems we've had in the",
    "start": "2259099",
    "end": "2264890"
  },
  {
    "text": "last few years in the space the other thing we added last last year was ACM integration and thanks to I actually",
    "start": "2264890",
    "end": "2270619"
  },
  {
    "text": "completely forgot about this one and somebody in the audience told me about this beforehand thank you and I'm like",
    "start": "2270619",
    "end": "2275630"
  },
  {
    "text": "let me go at a slide quickly so that was I was doing up here so this slide is hot of the press but we have ACM integration",
    "start": "2275630",
    "end": "2280849"
  },
  {
    "text": "so ACM is Amazon certificate manager and what gives you free certificates so you",
    "start": "2280849",
    "end": "2286519"
  },
  {
    "text": "basically go to Amazon civic manager give me an it's a self certificate they'll give you one and you just then associate that with your ELB super easy",
    "start": "2286519",
    "end": "2293630"
  },
  {
    "text": "to do in the best part you never have to think about it again because when that certificate comes up for renewal Amazon",
    "start": "2293630",
    "end": "2299900"
  },
  {
    "text": "certificate manager actually manages the renewal process now I don't know about you but I've never had an SSL certificate expire on me unexpectedly",
    "start": "2299900",
    "end": "2307479"
  },
  {
    "text": "and all of this and it's free as well so it's an amazing service if you're not",
    "start": "2307479",
    "end": "2312769"
  },
  {
    "text": "using that or you're coming up for renewal absolutely think about using ACM",
    "start": "2312769",
    "end": "2318609"
  },
  {
    "text": "all right we have another hat that's pretty cool so application load balancer currently today is support security",
    "start": "2319390",
    "end": "2325400"
  },
  {
    "text": "groups so you can you can control traffic to your load balancer with security groups right so you can specify",
    "start": "2325400",
    "end": "2331430"
  },
  {
    "text": "sliders and say only one people from within my organization to connect some",
    "start": "2331430",
    "end": "2337309"
  },
  {
    "text": "customers that said hey you know that feature on cloud front called woth website Application Firewall it'd be",
    "start": "2337309",
    "end": "2343609"
  },
  {
    "text": "pretty cool to have that on ELB so we thought so as well so we've added where to eat application load balancer and",
    "start": "2343609",
    "end": "2350210"
  },
  {
    "text": "that'll be available in it soon in the coming weeks so with that you'll basically be able to well actually have",
    "start": "2350210",
    "end": "2355880"
  },
  {
    "text": "a slide for that so with a website Application Firewall basically monitors and protects website",
    "start": "2355880",
    "end": "2361009"
  },
  {
    "text": "application from malicious activities so any requests coming through gets inspected by waffe you can configure",
    "start": "2361009",
    "end": "2367099"
  },
  {
    "text": "rules to either allow or block or count and you can do things like sequel injection cross-site scripting bad actor",
    "start": "2367099",
    "end": "2373430"
  },
  {
    "text": "ip's bad BOTS HTTP flood attacks and I know they're going to be adding more and more and more rules so you can go into",
    "start": "2373430",
    "end": "2380029"
  },
  {
    "text": "the web service and you can configure this once you've got all your rules and they've got some great custom rules",
    "start": "2380029",
    "end": "2385069"
  },
  {
    "text": "there were previously defined rules you just associated with the ELB and we'll take care of that so I think that's a",
    "start": "2385069",
    "end": "2390920"
  },
  {
    "text": "pretty cool feature coming in the neck and then we look at monitoring so we",
    "start": "2390920",
    "end": "2396150"
  },
  {
    "text": "improve some of their load then on some monitoring as well so obviously we've worked out how to have a highly available application how to ice",
    "start": "2396150",
    "end": "2401579"
  },
  {
    "text": "multiple applications so we need about the monitor this thing so cloud which metrics promise metrics have been there",
    "start": "2401579",
    "end": "2408750"
  },
  {
    "text": "on application on ELB for some time we added them some time but on application",
    "start": "2408750",
    "end": "2414660"
  },
  {
    "text": "load balancer we've we've made some improvements so they provide detail insight into the load balancer traffic",
    "start": "2414660",
    "end": "2420150"
  },
  {
    "text": "they all provided at the one-minute granularity so if you if you are using that feature in cloud print watch sorry",
    "start": "2420150",
    "end": "2425940"
  },
  {
    "text": "you can get that and metrics are provided with application load balancer",
    "start": "2425940",
    "end": "2432390"
  },
  {
    "text": "metrics are provided at both the global application level at the load balancer level as well as at the target group level so again you want to be able to",
    "start": "2432390",
    "end": "2439440"
  },
  {
    "text": "see metrics of the target group level because those are different applications they're going to behave very differently and you can go figure tied watch alarms",
    "start": "2439440",
    "end": "2445680"
  },
  {
    "text": "you can also integrate with auto scaling so any one of these metrics you could integrate with auto scaling and see if that metrics spikes scale up if it goes",
    "start": "2445680",
    "end": "2452369"
  },
  {
    "text": "down scale scale down so that's want to look at a couple of the metrics very briefly and give you an idea of you know",
    "start": "2452369",
    "end": "2459030"
  },
  {
    "text": "what are they how do they behave what are they for so firstly healthy host count",
    "start": "2459030",
    "end": "2464310"
  },
  {
    "text": "it's the count of the healthy instances behind your load balancer or behind the time group and it's important to consume",
    "start": "2464310",
    "end": "2470280"
  },
  {
    "text": "that at the zonal dimension if you see this failing normally when this fails it's your health check is failing the",
    "start": "2470280",
    "end": "2476579"
  },
  {
    "text": "most common reason for a health check failure is a timeout so those health checks take one you give",
    "start": "2476579",
    "end": "2481589"
  },
  {
    "text": "you one second to respond to us we don't respond in one second we consider you to be failed right so keep that in mind",
    "start": "2481589",
    "end": "2486690"
  },
  {
    "text": "normally it's a timeout the other one is latency so latency measures the time from the point that",
    "start": "2486690",
    "end": "2492900"
  },
  {
    "text": "you'll packet leave the load balancer into your application to when we first see the response that's how we measure",
    "start": "2492900",
    "end": "2498119"
  },
  {
    "text": "latency so it doesn't include the load balancer time and we provide min max an average of that we also have access logs",
    "start": "2498119",
    "end": "2504510"
  },
  {
    "text": "you talked about shortly and then we have a rejection count as well so important difference here application",
    "start": "2504510",
    "end": "2511710"
  },
  {
    "text": "load balancer doesn't use search queues the search queue is basically when a",
    "start": "2511710",
    "end": "2517589"
  },
  {
    "text": "request comes in and your back-end applications are all super busy we don't have anywhere to send it to we will",
    "start": "2517589",
    "end": "2523500"
  },
  {
    "text": "store it in a load balancer for at a time on classic load burn so we'll store up to 1,000 requests per IP",
    "start": "2523500",
    "end": "2529430"
  },
  {
    "text": "address in your load balancer but one thing we've learned at Amazon over the years the search cubes are normally a bad idea and the reason for them is you",
    "start": "2529430",
    "end": "2537290"
  },
  {
    "text": "get a client's out there calling you their thread pools are stuck waiting on your load balancer they're not doing any",
    "start": "2537290",
    "end": "2542720"
  },
  {
    "text": "more work they're waiting for a response and by the time you're 10 second or 10 minutes or whatever the outage is over",
    "start": "2542720",
    "end": "2548630"
  },
  {
    "text": "you're now going to go back and process a couple of thousand requests that are 10 minutes old and that client is long",
    "start": "2548630",
    "end": "2554900"
  },
  {
    "text": "gone so actually with surge accusing actually get to a situation where a failed load balancer can actually cause other services to fail as well you just",
    "start": "2554900",
    "end": "2560720"
  },
  {
    "text": "everything gets stuck on this load balancer so it's much better to actually fail early let the client retry and get",
    "start": "2560720",
    "end": "2566119"
  },
  {
    "text": "fresh requests so with application load balancer we don't have surge queue so we have a rejection Council you can actually see a number of requests that",
    "start": "2566119",
    "end": "2572450"
  },
  {
    "text": "were rejected by the load balancer because we don't have anywhere to send them so if you see this metric go and scale up your backends that's what you",
    "start": "2572450",
    "end": "2578869"
  },
  {
    "text": "do add more capacity will add more threads on your backends or add more connect your connection limits whatever",
    "start": "2578869",
    "end": "2584510"
  },
  {
    "text": "you need to do in Apache and then on the target group so we've got the target group metrics so those are the metrics you provide and a few others as well at",
    "start": "2584510",
    "end": "2591170"
  },
  {
    "text": "the load balancer level and then we have these ones at the target group level so you get great visibility into 200 300",
    "start": "2591170",
    "end": "2596180"
  },
  {
    "text": "400 unhealthy healthy host count as well as the target response time actually coming latency coming back from the",
    "start": "2596180",
    "end": "2601880"
  },
  {
    "text": "target and then about two weeks ago we actually launched cloud watch percentiles and these are pets so we",
    "start": "2601880",
    "end": "2609260"
  },
  {
    "text": "spoke about min max and average and that's what you've had previously now you can actually go and say give me the",
    "start": "2609260",
    "end": "2614390"
  },
  {
    "text": "p90 and we say p90 internally and Amazon give me the 90th percentile which means",
    "start": "2614390",
    "end": "2619640"
  },
  {
    "text": "I want to know what's the kind of 90 percent of my customers are seen that latency or better and the way that I run",
    "start": "2619640",
    "end": "2627079"
  },
  {
    "text": "all of my teams at Amazon just generally at Amazon actually is we all focus on the 99th percentile so when we launch",
    "start": "2627079",
    "end": "2632869"
  },
  {
    "text": "your new service will say what is your p99 and we watch that all the time so watch p99 and the thing is we're saying 99% of",
    "start": "2632869",
    "end": "2640280"
  },
  {
    "text": "customers are seen that latency or better right and once your p99 is like nice and flat then you say ok p 99.9",
    "start": "2640280",
    "end": "2648500"
  },
  {
    "text": "time and then you say ok start watching that and that's how we drive ourselves and set aggressive targets all the time",
    "start": "2648500",
    "end": "2655010"
  },
  {
    "text": "to get that latency down so we'd never ever look at average almost never look at an metric we're always looking at 99 99.9",
    "start": "2655010",
    "end": "2662029"
  },
  {
    "text": "percent off and that's your Eddy looking at that 10.1 of a percent of customers that are you having a bad day all right",
    "start": "2662029",
    "end": "2668059"
  },
  {
    "text": "so we launched this last week I think it was and then you can see that's what the graph would look like so the Green Line is your P 99",
    "start": "2668059",
    "end": "2674809"
  },
  {
    "text": "yeah P 99 the yellow one is a p90 and then the other ones your P 50 the P 50",
    "start": "2674809",
    "end": "2680269"
  },
  {
    "text": "is a little different from average but you get that view so great visibility into the the performance of your",
    "start": "2680269",
    "end": "2686509"
  },
  {
    "text": "application and then so that's where you wanna get a general view with cloud watch and what are your what are your",
    "start": "2686509",
    "end": "2691819"
  },
  {
    "text": "metrics looking like if you want to get down to an individual request coming through your load balancer you want to",
    "start": "2691819",
    "end": "2697549"
  },
  {
    "text": "go and say why did that request fail that's where we have access logs so you can enable access logs and every single",
    "start": "2697549",
    "end": "2702859"
  },
  {
    "text": "request that comes to your load balancer gets logged to an access log and delivered to s3 either every five",
    "start": "2702859",
    "end": "2707930"
  },
  {
    "text": "minutes or every sixty minutes you can go and set that up right you can decide what interval you want includes a lot of",
    "start": "2707930",
    "end": "2714289"
  },
  {
    "text": "stuff request time client IP latencies request path server responses ciphers and protocol so we actually tell you",
    "start": "2714289",
    "end": "2719660"
  },
  {
    "text": "what cipher and protocol that client negotiated with so we think about our ciphers if you want to go turn off the",
    "start": "2719660",
    "end": "2725210"
  },
  {
    "text": "cipher but you want to know who you're going to impact you can actually turn on excess logs and go and have a look decide whether you should really disable",
    "start": "2725210",
    "end": "2731119"
  },
  {
    "text": "this slv-3 do you have any customers out there that would not be able to use that",
    "start": "2731119",
    "end": "2736210"
  },
  {
    "text": "this is brand-new again last week request tracing that sounds pretty cool",
    "start": "2736210",
    "end": "2742599"
  },
  {
    "text": "what this does is it inserts a unique identifier for every single request going through the alb if we so you send",
    "start": "2742599",
    "end": "2750440"
  },
  {
    "text": "a new request to the alb will actually add a unique identifier to the X Amazon trace ID header and if that request goes",
    "start": "2750440",
    "end": "2756980"
  },
  {
    "text": "through another ELB will actually append that you identify as it gets appended and this obviously if you guys saw the",
    "start": "2756980",
    "end": "2762349"
  },
  {
    "text": "release of Amazon x-ray today this is feeding information to Amazon x-ray so",
    "start": "2762349",
    "end": "2767690"
  },
  {
    "text": "if you go and log this information in your application or folder for the x-ray ap is now you're going to get request",
    "start": "2767690",
    "end": "2772970"
  },
  {
    "text": "tracing all the way through from when it very first hits an ELB coming from the internet all the way through your",
    "start": "2772970",
    "end": "2778910"
  },
  {
    "text": "application and you can get down into very very very detailed analytics with with this functionality so we're pretty",
    "start": "2778910",
    "end": "2785150"
  },
  {
    "text": "excited about that so we've spoken about quite a bit of stuff and I guess one of the big",
    "start": "2785150",
    "end": "2791210"
  },
  {
    "text": "questions we have uncovered yet is when should I use application load",
    "start": "2791210",
    "end": "2796670"
  },
  {
    "text": "balancer so I mean it sounds pretty cool so when should we use it the wind should win when shouldn't we use it so we come",
    "start": "2796670",
    "end": "2802700"
  },
  {
    "text": "back to this picture keep in mind that application load balancer only supports",
    "start": "2802700",
    "end": "2808220"
  },
  {
    "text": "HTTP and HTTPS so obviously if you have a TCP load balancer when it's cell load",
    "start": "2808220",
    "end": "2815870"
  },
  {
    "text": "balancer you'd want to stay on the classic load balancer and continue to use that for all other load balancer use",
    "start": "2815870",
    "end": "2822350"
  },
  {
    "text": "cases we rarely recommend trying application load balancer as I said for",
    "start": "2822350",
    "end": "2828620"
  },
  {
    "text": "vast majority of customers we've seen improved performance with it you can set it up in a very simple way we've spoken",
    "start": "2828620",
    "end": "2834500"
  },
  {
    "text": "about a lot of complexity today just a single default the console makes it really easy by the way it takes you three and like three clicks to set it up",
    "start": "2834500",
    "end": "2840350"
  },
  {
    "text": "register your instances and get started very quickly so with that it's been",
    "start": "2840350",
    "end": "2846440"
  },
  {
    "text": "great talking to you I do hope it's been useful I hope you've shared some good facts and thanks for coming [Applause]",
    "start": "2846440",
    "end": "2857460"
  }
]