[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "hi I'm Mike havy I'm a senior specialist",
    "start": "2280",
    "end": "4279"
  },
  {
    "text": "Solutions architect with",
    "start": "4279",
    "end": "5960"
  },
  {
    "text": "AWS I specialize in Amazon Neptune and",
    "start": "5960",
    "end": "8800"
  },
  {
    "text": "manag graph database service and my",
    "start": "8800",
    "end": "11360"
  },
  {
    "text": "topic today is graph data virtualization",
    "start": "11360",
    "end": "13759"
  },
  {
    "text": "in Amazon",
    "start": "13759",
    "end": "15840"
  },
  {
    "text": "Neptune so we'll Begin by talking about",
    "start": "15840",
    "end": "18600"
  },
  {
    "text": "what graph data virtualization is and",
    "start": "18600",
    "end": "20600"
  },
  {
    "text": "why you would want to use it then I'll",
    "start": "20600",
    "end": "22560"
  },
  {
    "text": "give an example that shows climate",
    "start": "22560",
    "end": "24519"
  },
  {
    "text": "reading virtualization involving Neptune",
    "start": "24519",
    "end": "27480"
  },
  {
    "text": "and a data Lake and then as a call to",
    "start": "27480",
    "end": "30240"
  },
  {
    "text": "action I'll encourage you to deploy",
    "start": "30240",
    "end": "32520"
  },
  {
    "text": "Neptune and test virtualization all in",
    "start": "32520",
    "end": "35320"
  },
  {
    "text": "your own",
    "start": "35320",
    "end": "37760"
  },
  {
    "start": "38000",
    "end": "174000"
  },
  {
    "text": "account so what is graph data",
    "start": "40399",
    "end": "42879"
  },
  {
    "text": "virtualization suppose that I have data",
    "start": "42879",
    "end": "45039"
  },
  {
    "text": "in a graph database but I also have",
    "start": "45039",
    "end": "47000"
  },
  {
    "text": "related data outside the graph in",
    "start": "47000",
    "end": "49199"
  },
  {
    "text": "another database and I want to be able",
    "start": "49199",
    "end": "51840"
  },
  {
    "text": "to combine the data in a single query",
    "start": "51840",
    "end": "55559"
  },
  {
    "text": "now query Federation is the idea that I",
    "start": "55559",
    "end": "57960"
  },
  {
    "text": "can combine multiple data sources in a",
    "start": "57960",
    "end": "60359"
  },
  {
    "text": "single query we'll go one step further",
    "start": "60359",
    "end": "64198"
  },
  {
    "text": "and do virtualization in virtualization",
    "start": "64199",
    "end": "67479"
  },
  {
    "text": "if I query from My",
    "start": "67479",
    "end": "69520"
  },
  {
    "text": "Graph I can get data both from My Graph",
    "start": "69520",
    "end": "72680"
  },
  {
    "text": "and from outside the graph as part of a",
    "start": "72680",
    "end": "74320"
  },
  {
    "text": "single query and it's as if that data",
    "start": "74320",
    "end": "77280"
  },
  {
    "text": "from outside the graph is virtually in",
    "start": "77280",
    "end": "79119"
  },
  {
    "text": "My",
    "start": "79119",
    "end": "81360"
  },
  {
    "text": "Graph here's an example of the concept",
    "start": "81479",
    "end": "84600"
  },
  {
    "text": "suppose I have my own graph database on",
    "start": "84600",
    "end": "87240"
  },
  {
    "text": "the left and I have an external graph",
    "start": "87240",
    "end": "89600"
  },
  {
    "text": "datab datase on the right if I issue a",
    "start": "89600",
    "end": "92759"
  },
  {
    "text": "query to My Graph database on the left I",
    "start": "92759",
    "end": "95360"
  },
  {
    "text": "want to be able to bring in data from",
    "start": "95360",
    "end": "97920"
  },
  {
    "text": "the other graph database on the right",
    "start": "97920",
    "end": "100520"
  },
  {
    "text": "and notice the dash lines they indicate",
    "start": "100520",
    "end": "103520"
  },
  {
    "text": "that resources in my graph on the left",
    "start": "103520",
    "end": "106280"
  },
  {
    "text": "have implicit relationships to resources",
    "start": "106280",
    "end": "108360"
  },
  {
    "text": "in the graph on the",
    "start": "108360",
    "end": "111000"
  },
  {
    "text": "right going a bit further suppose that",
    "start": "111000",
    "end": "115159"
  },
  {
    "text": "again I have my graph database on the",
    "start": "115159",
    "end": "117000"
  },
  {
    "text": "left but a relational database on the",
    "start": "117000",
    "end": "119000"
  },
  {
    "text": "right with an implicit relationship",
    "start": "119000",
    "end": "121640"
  },
  {
    "text": "between resources and my graph to rows",
    "start": "121640",
    "end": "125000"
  },
  {
    "text": "in the relational database and I want to",
    "start": "125000",
    "end": "128000"
  },
  {
    "text": "be able to run a query against my graph",
    "start": "128000",
    "end": "130879"
  },
  {
    "text": "database which also brings in data from",
    "start": "130879",
    "end": "133599"
  },
  {
    "text": "the rows in the relational",
    "start": "133599",
    "end": "136879"
  },
  {
    "text": "database so why would one want to do",
    "start": "136879",
    "end": "139640"
  },
  {
    "text": "graph data virtualization think about",
    "start": "139640",
    "end": "142000"
  },
  {
    "text": "the nature of a graph a graph draws",
    "start": "142000",
    "end": "144840"
  },
  {
    "text": "relationships between many types of",
    "start": "144840",
    "end": "147160"
  },
  {
    "text": "entities its job is really just to",
    "start": "147160",
    "end": "149800"
  },
  {
    "text": "connect a lot of stuff",
    "start": "149800",
    "end": "151519"
  },
  {
    "text": "together and much of the detail of those",
    "start": "151519",
    "end": "154040"
  },
  {
    "text": "entities is outside the graph and it may",
    "start": "154040",
    "end": "157200"
  },
  {
    "text": "be very very large I don't want to",
    "start": "157200",
    "end": "159519"
  },
  {
    "text": "ingest it into the graph but I have a",
    "start": "159519",
    "end": "162040"
  },
  {
    "text": "business requirement to bring the data",
    "start": "162040",
    "end": "164720"
  },
  {
    "text": "back as part of a graph",
    "start": "164720",
    "end": "166400"
  },
  {
    "text": "query so in effect I have a business",
    "start": "166400",
    "end": "169000"
  },
  {
    "text": "requirement that calls for a",
    "start": "169000",
    "end": "170280"
  },
  {
    "text": "virtualization",
    "start": "170280",
    "end": "173280"
  },
  {
    "start": "174000",
    "end": "524000"
  },
  {
    "text": "approach so in our example of climate",
    "start": "176800",
    "end": "180319"
  },
  {
    "text": "data we have weather stations around the",
    "start": "180319",
    "end": "182920"
  },
  {
    "text": "globe that collect temperature reading",
    "start": "182920",
    "end": "184480"
  },
  {
    "text": "several times a minute and we want to be",
    "start": "184480",
    "end": "187000"
  },
  {
    "text": "able to retrieve those readings filtered",
    "start": "187000",
    "end": "188799"
  },
  {
    "text": "and joined by weather station",
    "start": "188799",
    "end": "191720"
  },
  {
    "text": "data the data itself is publicly",
    "start": "191720",
    "end": "194239"
  },
  {
    "text": "available from the national centers for",
    "start": "194239",
    "end": "196120"
  },
  {
    "text": "environmental information at the link",
    "start": "196120",
    "end": "197720"
  },
  {
    "text": "shown",
    "start": "197720",
    "end": "199840"
  },
  {
    "text": "here and here's our design which I'll",
    "start": "199840",
    "end": "202280"
  },
  {
    "text": "walk through step byep momentarily but I",
    "start": "202280",
    "end": "204920"
  },
  {
    "text": "wanted to highlight the two main",
    "start": "204920",
    "end": "206400"
  },
  {
    "text": "repositories of the data we keep the",
    "start": "206400",
    "end": "209080"
  },
  {
    "text": "weather station data in a graph database",
    "start": "209080",
    "end": "211840"
  },
  {
    "text": "on Amazon",
    "start": "211840",
    "end": "213239"
  },
  {
    "text": "Neptune and this allows us to navigate",
    "start": "213239",
    "end": "216599"
  },
  {
    "text": "relationships between stations and their",
    "start": "216599",
    "end": "219760"
  },
  {
    "text": "locations we keep the readings data in",
    "start": "219760",
    "end": "222720"
  },
  {
    "text": "the data Lake and within the data Lake",
    "start": "222720",
    "end": "225439"
  },
  {
    "text": "we have an Amazon simple storage service",
    "start": "225439",
    "end": "229560"
  },
  {
    "text": "bucket where we maintain the",
    "start": "229560",
    "end": "232079"
  },
  {
    "text": "data and we can query this through SQL",
    "start": "232079",
    "end": "235879"
  },
  {
    "text": "the Amazon Athena service allows us to",
    "start": "235879",
    "end": "239200"
  },
  {
    "text": "through a equal interface obtained the",
    "start": "239200",
    "end": "241319"
  },
  {
    "text": "the the readings data from",
    "start": "241319",
    "end": "244599"
  },
  {
    "text": "S3 a key piece of this puzzle then is",
    "start": "246799",
    "end": "249439"
  },
  {
    "text": "Neptune and here is a link where you can",
    "start": "249439",
    "end": "251400"
  },
  {
    "text": "read about",
    "start": "251400",
    "end": "252760"
  },
  {
    "text": "it and importantly Neptune supports two",
    "start": "252760",
    "end": "255840"
  },
  {
    "text": "main graph representations one is called",
    "start": "255840",
    "end": "259079"
  },
  {
    "text": "property graph an example of which is",
    "start": "259079",
    "end": "261759"
  },
  {
    "text": "Apache Tinker",
    "start": "261759",
    "end": "263320"
  },
  {
    "text": "pop and the other is resource",
    "start": "263320",
    "end": "265400"
  },
  {
    "text": "description framework or rdf which is",
    "start": "265400",
    "end": "268320"
  },
  {
    "text": "defined by the world Web Consortium the",
    "start": "268320",
    "end": "271280"
  },
  {
    "text": "w3c and its query language is called",
    "start": "271280",
    "end": "274800"
  },
  {
    "text": "Sparkle and in this demo we'll use",
    "start": "274800",
    "end": "278280"
  },
  {
    "text": "rdf because of a couple of key",
    "start": "278280",
    "end": "280960"
  },
  {
    "text": "ingredients provided by",
    "start": "280960",
    "end": "283520"
  },
  {
    "text": "Sparkle in particular as defined by the",
    "start": "283520",
    "end": "287080"
  },
  {
    "text": "w3c we have first of all a standard",
    "start": "287080",
    "end": "290039"
  },
  {
    "text": "protocol built on",
    "start": "290039",
    "end": "293360"
  },
  {
    "text": "HTTP that allows clients to call any rdf",
    "start": "293360",
    "end": "297199"
  },
  {
    "text": "database basically using the same prot",
    "start": "297199",
    "end": "299919"
  },
  {
    "text": "protocol so there's an open",
    "start": "299919",
    "end": "302320"
  },
  {
    "text": "interoperability between clients and and",
    "start": "302320",
    "end": "305360"
  },
  {
    "text": "uh",
    "start": "305360",
    "end": "306120"
  },
  {
    "text": "databases and also there's query",
    "start": "306120",
    "end": "308280"
  },
  {
    "text": "Federation so there there's a",
    "start": "308280",
    "end": "310039"
  },
  {
    "text": "standardized way within Sparkle by which",
    "start": "310039",
    "end": "312080"
  },
  {
    "text": "a client can call database",
    "start": "312080",
    "end": "314720"
  },
  {
    "text": "a but as an inner query to database a",
    "start": "314720",
    "end": "319240"
  },
  {
    "text": "ask for additional information from",
    "start": "319240",
    "end": "320800"
  },
  {
    "text": "database B and it will be the",
    "start": "320800",
    "end": "323319"
  },
  {
    "text": "responsibility of database a to then go",
    "start": "323319",
    "end": "325759"
  },
  {
    "text": "collect that data and send it back to",
    "start": "325759",
    "end": "327600"
  },
  {
    "text": "the",
    "start": "327600",
    "end": "328479"
  },
  {
    "text": "client we're going to use these",
    "start": "328479",
    "end": "330280"
  },
  {
    "text": "capabilities to build",
    "start": "330280",
    "end": "332199"
  },
  {
    "text": "virtualization and there's a good blog",
    "start": "332199",
    "end": "334199"
  },
  {
    "text": "post that discusses how to to execute",
    "start": "334199",
    "end": "336960"
  },
  {
    "text": "Federated queries on Neptune at the link",
    "start": "336960",
    "end": "338960"
  },
  {
    "text": "shown",
    "start": "338960",
    "end": "341319"
  },
  {
    "text": "here now we won't talk about",
    "start": "342199",
    "end": "344840"
  },
  {
    "text": "virtualization with the property graph",
    "start": "344840",
    "end": "346520"
  },
  {
    "text": "today spice it to say there's no",
    "start": "346520",
    "end": "349120"
  },
  {
    "text": "conventional approach within the hicker",
    "start": "349120",
    "end": "351360"
  },
  {
    "text": "pop world to do Federation some",
    "start": "351360",
    "end": "354120"
  },
  {
    "text": "potential approaches might involve",
    "start": "354120",
    "end": "356360"
  },
  {
    "text": "combined query from from arrest API from",
    "start": "356360",
    "end": "359199"
  },
  {
    "text": "graph ql or to use an approach like",
    "start": "359199",
    "end": "362520"
  },
  {
    "text": "Athena",
    "start": "362520",
    "end": "363560"
  },
  {
    "text": "Federation if you'd like to discuss the",
    "start": "363560",
    "end": "365919"
  },
  {
    "text": "approach with us please contact our team",
    "start": "365919",
    "end": "369240"
  },
  {
    "text": "uh at the email address shown",
    "start": "369240",
    "end": "372039"
  },
  {
    "text": "here now now let's walk through the",
    "start": "372039",
    "end": "374880"
  },
  {
    "text": "design step by step in the first step we",
    "start": "374880",
    "end": "377840"
  },
  {
    "text": "have an end user a data subject matter",
    "start": "377840",
    "end": "380599"
  },
  {
    "text": "expert working within a database",
    "start": "380599",
    "end": "383800"
  },
  {
    "text": "client and in this case we'll use a",
    "start": "383800",
    "end": "386400"
  },
  {
    "text": "Neptune notebook built on Amazon Sage",
    "start": "386400",
    "end": "388720"
  },
  {
    "text": "maker",
    "start": "388720",
    "end": "390639"
  },
  {
    "text": "and the end user will run a sparkle",
    "start": "390639",
    "end": "392520"
  },
  {
    "text": "query that will ask for both weather",
    "start": "392520",
    "end": "395039"
  },
  {
    "text": "station data and weather reading data so",
    "start": "395039",
    "end": "398639"
  },
  {
    "text": "that's a sparkle query and that is",
    "start": "398639",
    "end": "400960"
  },
  {
    "text": "issued to the Neptune database so",
    "start": "400960",
    "end": "403000"
  },
  {
    "text": "Neptune's responsibility will be to",
    "start": "403000",
    "end": "404919"
  },
  {
    "text": "bring back to the client both the",
    "start": "404919",
    "end": "407560"
  },
  {
    "text": "station and readings",
    "start": "407560",
    "end": "410560"
  },
  {
    "text": "data now the readings data is not",
    "start": "413160",
    "end": "416720"
  },
  {
    "text": "accessible through Sparkle it resides in",
    "start": "416720",
    "end": "419039"
  },
  {
    "text": "the data Lake we know we can get to it",
    "start": "419039",
    "end": "421000"
  },
  {
    "text": "through SQL so we're going to need some",
    "start": "421000",
    "end": "423160"
  },
  {
    "text": "middle component that kind of bridges",
    "start": "423160",
    "end": "424840"
  },
  {
    "text": "that gap between Sparkle and SQL and",
    "start": "424840",
    "end": "427479"
  },
  {
    "text": "that component will be a thirdparty",
    "start": "427479",
    "end": "429440"
  },
  {
    "text": "component called ontop bkg or virtual",
    "start": "429440",
    "end": "432879"
  },
  {
    "text": "Knowledge",
    "start": "432879",
    "end": "434560"
  },
  {
    "text": "Graph so this is an open- Source tool",
    "start": "434560",
    "end": "438800"
  },
  {
    "text": "which uh on the one hand knows how to",
    "start": "438800",
    "end": "441319"
  },
  {
    "text": "access SQL data sources through",
    "start": "441319",
    "end": "443680"
  },
  {
    "text": "jdbc but also offers a standardized",
    "start": "443680",
    "end": "446520"
  },
  {
    "text": "Sparkle end point so you can call it",
    "start": "446520",
    "end": "449520"
  },
  {
    "text": "through Sparkle and have it in turn",
    "start": "449520",
    "end": "451479"
  },
  {
    "text": "issue SQL to go to relational databases",
    "start": "451479",
    "end": "454479"
  },
  {
    "text": "and data lakes or any SQL compliant data",
    "start": "454479",
    "end": "457479"
  },
  {
    "text": "source and you provided a mapping",
    "start": "457479",
    "end": "460360"
  },
  {
    "text": "instructing it how to map the sparkle to",
    "start": "460360",
    "end": "462960"
  },
  {
    "text": "the",
    "start": "462960",
    "end": "465120"
  },
  {
    "text": "SQL so having received the sparkle",
    "start": "467199",
    "end": "470400"
  },
  {
    "text": "request on top which by the way we",
    "start": "470400",
    "end": "474639"
  },
  {
    "text": "deploy as a container on the Amazon",
    "start": "474639",
    "end": "477639"
  },
  {
    "text": "elastic container",
    "start": "477639",
    "end": "480000"
  },
  {
    "text": "service on top will issue a SQL query to",
    "start": "480000",
    "end": "485840"
  },
  {
    "text": "Athena and Athena will get the data from",
    "start": "485879",
    "end": "489280"
  },
  {
    "text": "the data Lake as follows first of all it",
    "start": "489280",
    "end": "491759"
  },
  {
    "text": "will we we Define a tabular structure",
    "start": "491759",
    "end": "494639"
  },
  {
    "text": "around the weather readings data using",
    "start": "494639",
    "end": "497479"
  },
  {
    "text": "the glue data catalog so Athena will get",
    "start": "497479",
    "end": "500400"
  },
  {
    "text": "that structure from the catalog and then",
    "start": "500400",
    "end": "502720"
  },
  {
    "text": "it will get the data from the S3",
    "start": "502720",
    "end": "506080"
  },
  {
    "text": "bucket Athena Will T then return back",
    "start": "506080",
    "end": "509560"
  },
  {
    "text": "the SQL results to",
    "start": "509560",
    "end": "512240"
  },
  {
    "text": "ontop and ontop in turn uses its",
    "start": "512240",
    "end": "516320"
  },
  {
    "text": "mapping to translate those secret",
    "start": "516320",
    "end": "518719"
  },
  {
    "text": "results to Sparkle results back to",
    "start": "518719",
    "end": "523518"
  },
  {
    "text": "Neptune here is our git",
    "start": "524839",
    "end": "527200"
  },
  {
    "text": "repository so the readme file summarizes",
    "start": "527200",
    "end": "530000"
  },
  {
    "text": "the design that we just went through and",
    "start": "530000",
    "end": "531839"
  },
  {
    "text": "has some setup instructions so through",
    "start": "531839",
    "end": "534640"
  },
  {
    "text": "cloud formation you can provision in",
    "start": "534640",
    "end": "536640"
  },
  {
    "text": "your own AWS account this solution ution",
    "start": "536640",
    "end": "539720"
  },
  {
    "text": "which consists of a neun cluster a",
    "start": "539720",
    "end": "542959"
  },
  {
    "text": "notebook an ECS cluster a data",
    "start": "542959",
    "end": "546720"
  },
  {
    "text": "Lake and after cloud formation completes",
    "start": "546720",
    "end": "550680"
  },
  {
    "text": "there's some post setup instructions uh",
    "start": "550680",
    "end": "553640"
  },
  {
    "text": "involving copying data temperature",
    "start": "553640",
    "end": "556240"
  },
  {
    "text": "readings into the lake as well as",
    "start": "556240",
    "end": "558800"
  },
  {
    "text": "building the ontop container and we",
    "start": "558800",
    "end": "560959"
  },
  {
    "text": "provide a Cloud9 IDE to simplify that",
    "start": "560959",
    "end": "564680"
  },
  {
    "text": "setup and also I want to point out in",
    "start": "564680",
    "end": "567760"
  },
  {
    "text": "the repository is the actual mapping",
    "start": "567760",
    "end": "570079"
  },
  {
    "text": "that on top",
    "start": "570079",
    "end": "571720"
  },
  {
    "text": "uses to map from Sparkle to SQL and that",
    "start": "571720",
    "end": "575279"
  },
  {
    "text": "is",
    "start": "575279",
    "end": "576160"
  },
  {
    "text": "here and there's a helpful read me that",
    "start": "576160",
    "end": "579839"
  },
  {
    "text": "describes how this mapping Works in",
    "start": "579839",
    "end": "584519"
  },
  {
    "text": "particular we take columns from rows",
    "start": "584519",
    "end": "588079"
  },
  {
    "text": "returned from the table in the data Lake",
    "start": "588079",
    "end": "591399"
  },
  {
    "text": "like those highlighted here and map",
    "start": "591399",
    "end": "594120"
  },
  {
    "text": "those to triples rdf",
    "start": "594120",
    "end": "598120"
  },
  {
    "text": "triples and uh a triple is of the form",
    "start": "598120",
    "end": "601920"
  },
  {
    "text": "subject predicate object so this read me",
    "start": "601920",
    "end": "604680"
  },
  {
    "text": "describes exactly how the mapping takes",
    "start": "604680",
    "end": "606839"
  },
  {
    "text": "these columns and translates them into",
    "start": "606839",
    "end": "609399"
  },
  {
    "text": "triples that make sense to an audf",
    "start": "609399",
    "end": "611959"
  },
  {
    "text": "database and and can be understood",
    "start": "611959",
    "end": "614040"
  },
  {
    "text": "through a sparkle",
    "start": "614040",
    "end": "616240"
  },
  {
    "text": "query now let's look at the data itself",
    "start": "616240",
    "end": "620279"
  },
  {
    "text": "let's start with the data Lake and we'll",
    "start": "620279",
    "end": "623800"
  },
  {
    "text": "begin with the Athena uh service so here",
    "start": "623800",
    "end": "627480"
  },
  {
    "text": "we see in the Athena query editor that",
    "start": "627480",
    "end": "630279"
  },
  {
    "text": "we're able to run a a SQL select query",
    "start": "630279",
    "end": "634680"
  },
  {
    "text": "against the climate table in the data",
    "start": "634680",
    "end": "638360"
  },
  {
    "text": "Lake and as you can see in the results",
    "start": "638360",
    "end": "641880"
  },
  {
    "text": "each row represents a particular reading",
    "start": "641880",
    "end": "644519"
  },
  {
    "text": "so it references a particular station",
    "start": "644519",
    "end": "647200"
  },
  {
    "text": "it's captured at a particular date and",
    "start": "647200",
    "end": "650320"
  },
  {
    "text": "you can see that the readings are shown",
    "start": "650320",
    "end": "652600"
  },
  {
    "text": "in ferenheit and",
    "start": "652600",
    "end": "655279"
  },
  {
    "text": "Celsius now this tabular structure is",
    "start": "655279",
    "end": "657880"
  },
  {
    "text": "defined Within the glue data",
    "start": "657880",
    "end": "660880"
  },
  {
    "text": "catalog so here in the glue data catalog",
    "start": "660880",
    "end": "663800"
  },
  {
    "text": "we can see that we have a table called",
    "start": "663800",
    "end": "666240"
  },
  {
    "text": "climate and here is its tabular",
    "start": "666240",
    "end": "669040"
  },
  {
    "text": "structure here are the",
    "start": "669040",
    "end": "670959"
  },
  {
    "text": "columns and also notice that its",
    "start": "670959",
    "end": "673480"
  },
  {
    "text": "location is",
    "start": "673480",
    "end": "676680"
  },
  {
    "text": "S3 now let's look at S3 here is our",
    "start": "676760",
    "end": "680240"
  },
  {
    "text": "bucket and here is um particular folder",
    "start": "680240",
    "end": "683760"
  },
  {
    "text": "for the year 1985 and notice that the",
    "start": "683760",
    "end": "686320"
  },
  {
    "text": "readings are expressed in a parket",
    "start": "686320",
    "end": "691839"
  },
  {
    "text": "files now let's look at",
    "start": "695839",
    "end": "699000"
  },
  {
    "text": "Neptune so here is a notebook that gives",
    "start": "699000",
    "end": "702200"
  },
  {
    "text": "us a client interface to query Neptune",
    "start": "702200",
    "end": "705360"
  },
  {
    "text": "if we run through it the first cell",
    "start": "705360",
    "end": "707040"
  },
  {
    "text": "actually allows us to bulkload the",
    "start": "707040",
    "end": "708760"
  },
  {
    "text": "station data into Neptune and remember",
    "start": "708760",
    "end": "711720"
  },
  {
    "text": "that Neptune has the stations but it",
    "start": "711720",
    "end": "714160"
  },
  {
    "text": "does not have the",
    "start": "714160",
    "end": "715560"
  },
  {
    "text": "readings we can run a query against the",
    "start": "715560",
    "end": "718079"
  },
  {
    "text": "stations so so this sparkle query",
    "start": "718079",
    "end": "721800"
  },
  {
    "text": "actually gets just details about a",
    "start": "721800",
    "end": "724720"
  },
  {
    "text": "particular station arren",
    "start": "724720",
    "end": "728200"
  },
  {
    "text": "UK well we can also run a Federated",
    "start": "728200",
    "end": "730600"
  },
  {
    "text": "query like the one we described at",
    "start": "730600",
    "end": "732120"
  },
  {
    "text": "length when walking through the design",
    "start": "732120",
    "end": "735320"
  },
  {
    "text": "so this sparkle query is a Federated",
    "start": "735320",
    "end": "737320"
  },
  {
    "text": "query that gets both stations and",
    "start": "737320",
    "end": "739279"
  },
  {
    "text": "readings so the first part of the query",
    "start": "739279",
    "end": "741760"
  },
  {
    "text": "actually gets information about the",
    "start": "741760",
    "end": "744920"
  },
  {
    "text": "Manchester UK station and then there's",
    "start": "744920",
    "end": "747839"
  },
  {
    "text": "an inner query",
    "start": "747839",
    "end": "749639"
  },
  {
    "text": "that gets information about the readings",
    "start": "749639",
    "end": "752600"
  },
  {
    "text": "for",
    "start": "752600",
    "end": "753600"
  },
  {
    "text": "Manchester with a particular filter",
    "start": "753600",
    "end": "755760"
  },
  {
    "text": "we're only interested in readings where",
    "start": "755760",
    "end": "757399"
  },
  {
    "text": "Celsius is greater than or equal to 30",
    "start": "757399",
    "end": "760120"
  },
  {
    "text": "and it will bring back the Celsius",
    "start": "760120",
    "end": "762680"
  },
  {
    "text": "daytime and Fahrenheit for those uh for",
    "start": "762680",
    "end": "767199"
  },
  {
    "text": "those for that station and notice that",
    "start": "767199",
    "end": "769839"
  },
  {
    "text": "we use a service directive to indicate",
    "start": "769839",
    "end": "771920"
  },
  {
    "text": "where to get the data from so we want to",
    "start": "771920",
    "end": "774760"
  },
  {
    "text": "run an inner Sparkle query against this",
    "start": "774760",
    "end": "780040"
  },
  {
    "text": "endpoint and this is the ontop container",
    "start": "780040",
    "end": "783560"
  },
  {
    "text": "the on top is listening on the IP shown",
    "start": "783560",
    "end": "786079"
  },
  {
    "text": "here and on this port it is a it's a",
    "start": "786079",
    "end": "789160"
  },
  {
    "text": "sparkle endpoint and it's able to",
    "start": "789160",
    "end": "791600"
  },
  {
    "text": "Federate so Neptune is able to invoke",
    "start": "791600",
    "end": "794240"
  },
  {
    "text": "the ontop endpoint to get back these",
    "start": "794240",
    "end": "796839"
  },
  {
    "text": "readings and we can see that in the",
    "start": "796839",
    "end": "798639"
  },
  {
    "text": "result",
    "start": "798639",
    "end": "799639"
  },
  {
    "text": "set we have readings for",
    "start": "799639",
    "end": "803279"
  },
  {
    "text": "Manchester captured on a particular date",
    "start": "803279",
    "end": "806160"
  },
  {
    "text": "time with a given Celsius and paren heit",
    "start": "806160",
    "end": "811920"
  },
  {
    "start": "815000",
    "end": "857000"
  },
  {
    "text": "readings now for next steps I encourage",
    "start": "816480",
    "end": "819279"
  },
  {
    "text": "you to deploy this demo in your own AWS",
    "start": "819279",
    "end": "822760"
  },
  {
    "text": "account the link shown here is to our",
    "start": "822760",
    "end": "824880"
  },
  {
    "text": "git repo and you can provision Neptune",
    "start": "824880",
    "end": "828000"
  },
  {
    "text": "the data Lake on top and all the",
    "start": "828000",
    "end": "829880"
  },
  {
    "text": "supporting components and get the demo",
    "start": "829880",
    "end": "831800"
  },
  {
    "text": "up and running in",
    "start": "831800",
    "end": "834199"
  },
  {
    "text": "minutes and if you'd like to discuss how",
    "start": "834199",
    "end": "836440"
  },
  {
    "text": "to build similar use cases please",
    "start": "836440",
    "end": "838240"
  },
  {
    "text": "contact my team our email address is",
    "start": "838240",
    "end": "841160"
  },
  {
    "text": "wwso neptun SSA",
    "start": "841160",
    "end": "845279"
  },
  {
    "text": "amazon.com again my name is Mike Hy been",
    "start": "845279",
    "end": "848360"
  },
  {
    "text": "a pleasure presenting to you today thank",
    "start": "848360",
    "end": "850160"
  },
  {
    "text": "you very",
    "start": "850160",
    "end": "852560"
  },
  {
    "text": "much",
    "start": "856720",
    "end": "859720"
  }
]