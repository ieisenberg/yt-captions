[
  {
    "text": "hi and welcome to AWS innovate online",
    "start": "140",
    "end": "3780"
  },
  {
    "text": "conference thanks for joining me today",
    "start": "3780",
    "end": "5940"
  },
  {
    "text": "my name is Anand Iyer and I'm a",
    "start": "5940",
    "end": "8250"
  },
  {
    "text": "principal Solutions Architect if you are",
    "start": "8250",
    "end": "10500"
  },
  {
    "text": "interested in learning how companies",
    "start": "10500",
    "end": "12269"
  },
  {
    "text": "like Amazon and Netflix release code",
    "start": "12269",
    "end": "15420"
  },
  {
    "text": "changes every 11.6 seconds you have just",
    "start": "15420",
    "end": "18810"
  },
  {
    "text": "joined the right session in this session",
    "start": "18810",
    "end": "21150"
  },
  {
    "text": "I'm going to explore how you can",
    "start": "21150",
    "end": "22920"
  },
  {
    "text": "increase release velocity in the context",
    "start": "22920",
    "end": "25740"
  },
  {
    "text": "of a complex environment and I'm not",
    "start": "25740",
    "end": "27960"
  },
  {
    "text": "just talking about spinning up a Jenkins",
    "start": "27960",
    "end": "30720"
  },
  {
    "text": "on a big x1 instance this is a 400 level",
    "start": "30720",
    "end": "34230"
  },
  {
    "text": "session so I'm expecting that you know",
    "start": "34230",
    "end": "36270"
  },
  {
    "text": "what continuous integration continuous",
    "start": "36270",
    "end": "38190"
  },
  {
    "text": "deployment is and are fluent with basic",
    "start": "38190",
    "end": "41280"
  },
  {
    "text": "AWS concepts like accounts and VP C's",
    "start": "41280",
    "end": "45350"
  },
  {
    "text": "doing continuous delivery in fast",
    "start": "45350",
    "end": "48239"
  },
  {
    "text": "complex enterprise environments is hard",
    "start": "48239",
    "end": "51420"
  },
  {
    "text": "because you need to deal with numerous",
    "start": "51420",
    "end": "53579"
  },
  {
    "text": "teams environments accounts and VP C's",
    "start": "53579",
    "end": "57059"
  },
  {
    "text": "if you don't configure deployment",
    "start": "57059",
    "end": "59850"
  },
  {
    "text": "pipelines the right way you will be less",
    "start": "59850",
    "end": "61859"
  },
  {
    "text": "secure and you will have lower release",
    "start": "61859",
    "end": "64198"
  },
  {
    "text": "velocity we see enterprises enterprise",
    "start": "64199",
    "end": "67619"
  },
  {
    "text": "customers rapidly expand to having",
    "start": "67619",
    "end": "70350"
  },
  {
    "text": "dozens of accounts and as their",
    "start": "70350",
    "end": "72540"
  },
  {
    "text": "footprint in AWS expands the speed of",
    "start": "72540",
    "end": "75509"
  },
  {
    "text": "getting changes out the door drops in",
    "start": "75509",
    "end": "78360"
  },
  {
    "text": "situations where pipelines are not set",
    "start": "78360",
    "end": "80790"
  },
  {
    "text": "up according to best practices to set",
    "start": "80790",
    "end": "84119"
  },
  {
    "text": "the foundation I will walk through some",
    "start": "84119",
    "end": "86040"
  },
  {
    "text": "multi-account topologies as well as some",
    "start": "86040",
    "end": "88619"
  },
  {
    "text": "best practices and then we will look at",
    "start": "88619",
    "end": "90869"
  },
  {
    "text": "how you can run pipelines across",
    "start": "90869",
    "end": "92909"
  },
  {
    "text": "environments in a way that is fast and",
    "start": "92909",
    "end": "95520"
  },
  {
    "text": "doesn't get bogged down by all the",
    "start": "95520",
    "end": "97829"
  },
  {
    "text": "environmental complexities and then I've",
    "start": "97829",
    "end": "100590"
  },
  {
    "text": "got a little demo for you but first I",
    "start": "100590",
    "end": "103110"
  },
  {
    "text": "want to discuss some of the challenges",
    "start": "103110",
    "end": "105119"
  },
  {
    "text": "we commonly see in doing complex",
    "start": "105119",
    "end": "107520"
  },
  {
    "text": "continuous delivery as customers mature",
    "start": "107520",
    "end": "111750"
  },
  {
    "text": "they often find it hard to coordinate",
    "start": "111750",
    "end": "114420"
  },
  {
    "text": "across teams modern agile software",
    "start": "114420",
    "end": "117479"
  },
  {
    "text": "development is all about having teams",
    "start": "117479",
    "end": "119880"
  },
  {
    "text": "set up in a way that doesn't create",
    "start": "119880",
    "end": "122460"
  },
  {
    "text": "blockers but there is still significant",
    "start": "122460",
    "end": "125250"
  },
  {
    "text": "need for alignment to ensure that your",
    "start": "125250",
    "end": "128220"
  },
  {
    "text": "software applications have consistent",
    "start": "128220",
    "end": "130259"
  },
  {
    "text": "ways of interacting this coordination",
    "start": "130259",
    "end": "133080"
  },
  {
    "text": "across",
    "start": "133080",
    "end": "133800"
  },
  {
    "text": "Steam's is hard especially when you have",
    "start": "133800",
    "end": "136380"
  },
  {
    "text": "teams affected by a single deployment",
    "start": "136380",
    "end": "139440"
  },
  {
    "text": "pipeline multiple teams how do you",
    "start": "139440",
    "end": "141630"
  },
  {
    "text": "handle changing a pipeline when one team",
    "start": "141630",
    "end": "144060"
  },
  {
    "text": "owns the dev and test environments and",
    "start": "144060",
    "end": "146580"
  },
  {
    "text": "another owns production the environment",
    "start": "146580",
    "end": "150210"
  },
  {
    "text": "itself becomes complex how do you manage",
    "start": "150210",
    "end": "152820"
  },
  {
    "text": "secrets consistently across multiple",
    "start": "152820",
    "end": "155670"
  },
  {
    "text": "accounts and environments it's often",
    "start": "155670",
    "end": "158640"
  },
  {
    "text": "seen as a challenge what about making",
    "start": "158640",
    "end": "161040"
  },
  {
    "text": "decisions about where a pipeline lives",
    "start": "161040",
    "end": "163650"
  },
  {
    "text": "when you have got multiple teams using",
    "start": "163650",
    "end": "166680"
  },
  {
    "text": "multiple environments that are all",
    "start": "166680",
    "end": "168630"
  },
  {
    "text": "related and change control processes",
    "start": "168630",
    "end": "171660"
  },
  {
    "text": "slow things down these processes are",
    "start": "171660",
    "end": "174450"
  },
  {
    "text": "often more pertinent to mutable",
    "start": "174450",
    "end": "176850"
  },
  {
    "text": "infrastructure as change is treated as a",
    "start": "176850",
    "end": "179520"
  },
  {
    "text": "significant event rather than part of a",
    "start": "179520",
    "end": "182430"
  },
  {
    "text": "regular process defined in code if you",
    "start": "182430",
    "end": "185670"
  },
  {
    "text": "don't deal with complexity front on you",
    "start": "185670",
    "end": "188190"
  },
  {
    "text": "will suffer from deployments slowing",
    "start": "188190",
    "end": "190470"
  },
  {
    "text": "down and as we all know what that means",
    "start": "190470",
    "end": "192810"
  },
  {
    "text": "your business is changing more slowly",
    "start": "192810",
    "end": "195300"
  },
  {
    "text": "because your software is changing too",
    "start": "195300",
    "end": "197880"
  },
  {
    "text": "slowly these are issues but let's walk",
    "start": "197880",
    "end": "201090"
  },
  {
    "text": "through how customers often arrive in",
    "start": "201090",
    "end": "203730"
  },
  {
    "text": "these situations when you start on AWS",
    "start": "203730",
    "end": "207660"
  },
  {
    "text": "it will generally be a single technical",
    "start": "207660",
    "end": "210480"
  },
  {
    "text": "person testing out the platform kicking",
    "start": "210480",
    "end": "212880"
  },
  {
    "text": "the tires so to speak so a single",
    "start": "212880",
    "end": "214980"
  },
  {
    "text": "account will be created this might be a",
    "start": "214980",
    "end": "217500"
  },
  {
    "text": "POC for example and a project will be",
    "start": "217500",
    "end": "220560"
  },
  {
    "text": "agreed on and a proper account structure",
    "start": "220560",
    "end": "222690"
  },
  {
    "text": "will be set up generally broken down by",
    "start": "222690",
    "end": "225450"
  },
  {
    "text": "environment this usually means one",
    "start": "225450",
    "end": "228239"
  },
  {
    "text": "production account and a non production",
    "start": "228239",
    "end": "230520"
  },
  {
    "text": "account small businesses often stop here",
    "start": "230520",
    "end": "233670"
  },
  {
    "text": "unless they set up a sandbox account",
    "start": "233670",
    "end": "235770"
  },
  {
    "text": "with a good tagging strategy as an",
    "start": "235770",
    "end": "239940"
  },
  {
    "text": "intact Enterprise matures however we",
    "start": "239940",
    "end": "242640"
  },
  {
    "text": "usually see our customers creating one",
    "start": "242640",
    "end": "245100"
  },
  {
    "text": "account per environment these patterns",
    "start": "245100",
    "end": "248100"
  },
  {
    "text": "will be replicated out across business",
    "start": "248100",
    "end": "251130"
  },
  {
    "text": "units none of this is rocket science but",
    "start": "251130",
    "end": "253860"
  },
  {
    "text": "I wanted to set the scene before we need",
    "start": "253860",
    "end": "256380"
  },
  {
    "text": "to explore where deployment pipelines",
    "start": "256380",
    "end": "258750"
  },
  {
    "text": "fit into this before we get to the",
    "start": "258750",
    "end": "261600"
  },
  {
    "text": "pipelines though we need to explore",
    "start": "261600",
    "end": "263520"
  },
  {
    "text": "their scope let's look at how",
    "start": "263520",
    "end": "265950"
  },
  {
    "text": "application architecture",
    "start": "265950",
    "end": "267600"
  },
  {
    "text": "has evolved there will be lots of people",
    "start": "267600",
    "end": "270750"
  },
  {
    "text": "still working in large enterprise",
    "start": "270750",
    "end": "272580"
  },
  {
    "text": "corporations on a single code repository",
    "start": "272580",
    "end": "275160"
  },
  {
    "text": "which gets built into a single app with",
    "start": "275160",
    "end": "278460"
  },
  {
    "text": "a single database behind it the app will",
    "start": "278460",
    "end": "281340"
  },
  {
    "text": "take longer to build and each change",
    "start": "281340",
    "end": "284070"
  },
  {
    "text": "will have a large merge being done as",
    "start": "284070",
    "end": "286620"
  },
  {
    "text": "well as lot of well coordinated",
    "start": "286620",
    "end": "289230"
  },
  {
    "text": "integration testing this means that the",
    "start": "289230",
    "end": "292620"
  },
  {
    "text": "scope of any change is very large as",
    "start": "292620",
    "end": "295200"
  },
  {
    "text": "there is a load of business",
    "start": "295200",
    "end": "297060"
  },
  {
    "text": "functionality that's involved in any one",
    "start": "297060",
    "end": "300210"
  },
  {
    "text": "application change if you fix a typo you",
    "start": "300210",
    "end": "303000"
  },
  {
    "text": "have to rebuild and deploy the entire",
    "start": "303000",
    "end": "305190"
  },
  {
    "text": "application this makes change is slow",
    "start": "305190",
    "end": "307500"
  },
  {
    "text": "and therefore your release velocity will",
    "start": "307500",
    "end": "310230"
  },
  {
    "text": "be slow in service-oriented architecture",
    "start": "310230",
    "end": "312840"
  },
  {
    "text": "or Sowa your app is broken into services",
    "start": "312840",
    "end": "316260"
  },
  {
    "text": "which will often have multiple teams",
    "start": "316260",
    "end": "318570"
  },
  {
    "text": "working on different aspects of them",
    "start": "318570",
    "end": "320970"
  },
  {
    "text": "this means that services are smaller and",
    "start": "320970",
    "end": "323760"
  },
  {
    "text": "less risky than monoliths but they still",
    "start": "323760",
    "end": "326430"
  },
  {
    "text": "have the same coordination and changes",
    "start": "326430",
    "end": "328680"
  },
  {
    "text": "have a fairly large scope this is more",
    "start": "328680",
    "end": "331710"
  },
  {
    "text": "common in enterprises and is a good way",
    "start": "331710",
    "end": "333870"
  },
  {
    "text": "to manage change as you often won't have",
    "start": "333870",
    "end": "336660"
  },
  {
    "text": "Micro services with micro services the",
    "start": "336660",
    "end": "340830"
  },
  {
    "text": "best way to make change is to have a",
    "start": "340830",
    "end": "342960"
  },
  {
    "text": "delivery pipeline for each micro service",
    "start": "342960",
    "end": "345720"
  },
  {
    "text": "to ensure that all changes are isolated",
    "start": "345720",
    "end": "349020"
  },
  {
    "text": "from changes occurring in other micro",
    "start": "349020",
    "end": "351240"
  },
  {
    "text": "services in applications that have been",
    "start": "351240",
    "end": "353610"
  },
  {
    "text": "built in a cloud native fashion this is",
    "start": "353610",
    "end": "356220"
  },
  {
    "text": "what we currently consider best",
    "start": "356220",
    "end": "357960"
  },
  {
    "text": "practices using these decouple patterns",
    "start": "357960",
    "end": "361560"
  },
  {
    "text": "helps you increase your release velocity",
    "start": "361560",
    "end": "363510"
  },
  {
    "text": "as it reduces the dependency for each",
    "start": "363510",
    "end": "366660"
  },
  {
    "text": "individual change this means that",
    "start": "366660",
    "end": "369390"
  },
  {
    "text": "changing one micro service won't impact",
    "start": "369390",
    "end": "371940"
  },
  {
    "text": "other micro services so you can release",
    "start": "371940",
    "end": "374370"
  },
  {
    "text": "as often as you like another good",
    "start": "374370",
    "end": "377520"
  },
  {
    "text": "practice is to move towards independent",
    "start": "377520",
    "end": "380280"
  },
  {
    "text": "data stores for your micro services as",
    "start": "380280",
    "end": "382380"
  },
  {
    "text": "it decreases the dependency on",
    "start": "382380",
    "end": "384620"
  },
  {
    "text": "coordinating with other teams and makes",
    "start": "384620",
    "end": "387450"
  },
  {
    "text": "any one team more autonomous and that",
    "start": "387450",
    "end": "390750"
  },
  {
    "text": "means faster so the lesson here is",
    "start": "390750",
    "end": "393210"
  },
  {
    "text": "smaller pipelines go faster now that we",
    "start": "393210",
    "end": "396750"
  },
  {
    "text": "have a field for how to define the scope",
    "start": "396750",
    "end": "398850"
  },
  {
    "text": "of a pipeline let",
    "start": "398850",
    "end": "400600"
  },
  {
    "text": "look at their relationship with",
    "start": "400600",
    "end": "402070"
  },
  {
    "text": "environments and accounts what we often",
    "start": "402070",
    "end": "406030"
  },
  {
    "text": "see is customer setting up one pipeline",
    "start": "406030",
    "end": "408550"
  },
  {
    "text": "per account now this sounds sensible as",
    "start": "408550",
    "end": "411460"
  },
  {
    "text": "it respects the boundaries which an",
    "start": "411460",
    "end": "413440"
  },
  {
    "text": "account is designed for who has a design",
    "start": "413440",
    "end": "416470"
  },
  {
    "text": "like this the issue is that it also",
    "start": "416470",
    "end": "419260"
  },
  {
    "text": "means that you get drift in the",
    "start": "419260",
    "end": "421420"
  },
  {
    "text": "definition of these pipelines using AWS",
    "start": "421420",
    "end": "424210"
  },
  {
    "text": "CloudFormation",
    "start": "424210",
    "end": "425350"
  },
  {
    "text": "is a good practice for defining your",
    "start": "425350",
    "end": "427420"
  },
  {
    "text": "pipeline in code but we still see",
    "start": "427420",
    "end": "429850"
  },
  {
    "text": "customers creating different templates",
    "start": "429850",
    "end": "432190"
  },
  {
    "text": "for different environments the problem",
    "start": "432190",
    "end": "434950"
  },
  {
    "text": "with this is that when you define the",
    "start": "434950",
    "end": "436900"
  },
  {
    "text": "change process differently for each",
    "start": "436900",
    "end": "438820"
  },
  {
    "text": "environment you are going to get",
    "start": "438820",
    "end": "440530"
  },
  {
    "text": "different results as you move across",
    "start": "440530",
    "end": "443110"
  },
  {
    "text": "environments you're not building",
    "start": "443110",
    "end": "444910"
  },
  {
    "text": "confidence as you promote code changes",
    "start": "444910",
    "end": "447430"
  },
  {
    "text": "through the environments you are using",
    "start": "447430",
    "end": "449470"
  },
  {
    "text": "different build artifacts for different",
    "start": "449470",
    "end": "451450"
  },
  {
    "text": "environments and you are getting slowed",
    "start": "451450",
    "end": "453340"
  },
  {
    "text": "down by the need to process this one and",
    "start": "453340",
    "end": "455800"
  },
  {
    "text": "one this one's for each environment we",
    "start": "455800",
    "end": "459220"
  },
  {
    "text": "are starting to consider this as a bit",
    "start": "459220",
    "end": "461080"
  },
  {
    "text": "of an anti-pattern as we see customers",
    "start": "461080",
    "end": "463050"
  },
  {
    "text": "struggling with this a better way to set",
    "start": "463050",
    "end": "466990"
  },
  {
    "text": "this up is to have a pipeline that",
    "start": "466990",
    "end": "469480"
  },
  {
    "text": "resides in your development or",
    "start": "469480",
    "end": "471370"
  },
  {
    "text": "production environment with different",
    "start": "471370",
    "end": "473200"
  },
  {
    "text": "stages for different environments who",
    "start": "473200",
    "end": "476320"
  },
  {
    "text": "has this sort of a design this means",
    "start": "476320",
    "end": "478840"
  },
  {
    "text": "that change is being made to your app",
    "start": "478840",
    "end": "481350"
  },
  {
    "text": "service micro service is visible in one",
    "start": "481350",
    "end": "485080"
  },
  {
    "text": "place you can visualize the entire",
    "start": "485080",
    "end": "487420"
  },
  {
    "text": "software development lifecycle of course",
    "start": "487420",
    "end": "490420"
  },
  {
    "text": "you want to store it in code and you",
    "start": "490420",
    "end": "492610"
  },
  {
    "text": "want to ensure that the right people",
    "start": "492610",
    "end": "494380"
  },
  {
    "text": "have the right permissions to change it",
    "start": "494380",
    "end": "497730"
  },
  {
    "text": "setting things up this way will increase",
    "start": "497730",
    "end": "500740"
  },
  {
    "text": "your release velocity as everyone can",
    "start": "500740",
    "end": "503140"
  },
  {
    "text": "see what's happening to code changes as",
    "start": "503140",
    "end": "505720"
  },
  {
    "text": "they pass through the environments this",
    "start": "505720",
    "end": "508570"
  },
  {
    "text": "means that you don't need to coordinate",
    "start": "508570",
    "end": "510550"
  },
  {
    "text": "across team members and don't need to",
    "start": "510550",
    "end": "513099"
  },
  {
    "text": "manage multiple pipelines the downside",
    "start": "513099",
    "end": "517000"
  },
  {
    "text": "of this approach is the lack of",
    "start": "517000",
    "end": "518830"
  },
  {
    "text": "environmental isolation if your pipeline",
    "start": "518830",
    "end": "521650"
  },
  {
    "text": "is defined in a dev account those",
    "start": "521650",
    "end": "524229"
  },
  {
    "text": "accounts tend to be little lighter on",
    "start": "524229",
    "end": "526390"
  },
  {
    "text": "security so you have the risk of a bad",
    "start": "526390",
    "end": "528550"
  },
  {
    "text": "actor introducing malicious code into",
    "start": "528550",
    "end": "531160"
  },
  {
    "text": "the pipeline that can be pushed in",
    "start": "531160",
    "end": "533769"
  },
  {
    "text": "ruction and if the pipeline is defined",
    "start": "533769",
    "end": "536319"
  },
  {
    "text": "in production it is too hard to access",
    "start": "536319",
    "end": "538389"
  },
  {
    "text": "to change the earlier stages of the",
    "start": "538389",
    "end": "540819"
  },
  {
    "text": "pipeline so although this pattern will",
    "start": "540819",
    "end": "543579"
  },
  {
    "text": "increase your release velocity it isn't",
    "start": "543579",
    "end": "545559"
  },
  {
    "text": "ideal from a security perspective so",
    "start": "545559",
    "end": "548079"
  },
  {
    "text": "what is the best practice well we are",
    "start": "548079",
    "end": "551410"
  },
  {
    "text": "seeing customers having a lot of success",
    "start": "551410",
    "end": "553269"
  },
  {
    "text": "with sticking DevOps tools like",
    "start": "553269",
    "end": "555519"
  },
  {
    "text": "continuous delivery pipelines in their",
    "start": "555519",
    "end": "557589"
  },
  {
    "text": "own account the pipeline's in this",
    "start": "557589",
    "end": "560379"
  },
  {
    "text": "account can assume cross account roles",
    "start": "560379",
    "end": "562749"
  },
  {
    "text": "to access resources in the dev test and",
    "start": "562749",
    "end": "566259"
  },
  {
    "text": "production accounts this imposes best",
    "start": "566259",
    "end": "568869"
  },
  {
    "text": "security practices as well as",
    "start": "568869",
    "end": "570579"
  },
  {
    "text": "operational practices in how you define",
    "start": "570579",
    "end": "573009"
  },
  {
    "text": "your pipelines in the code and how you",
    "start": "573009",
    "end": "575379"
  },
  {
    "text": "manage the end-to-end flow of your",
    "start": "575379",
    "end": "577600"
  },
  {
    "text": "changes to your application but that",
    "start": "577600",
    "end": "580059"
  },
  {
    "text": "account can host other things to",
    "start": "580059",
    "end": "583019"
  },
  {
    "text": "business units would have their own sets",
    "start": "583019",
    "end": "585819"
  },
  {
    "text": "of accounts a continuous delivery",
    "start": "585819",
    "end": "587529"
  },
  {
    "text": "account and a dev test and production",
    "start": "587529",
    "end": "590319"
  },
  {
    "text": "account inside the continuous delivery",
    "start": "590319",
    "end": "592749"
  },
  {
    "text": "account each app service micro service",
    "start": "592749",
    "end": "596139"
  },
  {
    "text": "would have its own delivery pipeline in",
    "start": "596139",
    "end": "599019"
  },
  {
    "text": "a large complex environment like this",
    "start": "599019",
    "end": "601029"
  },
  {
    "text": "over time you are likely to have some",
    "start": "601029",
    "end": "603220"
  },
  {
    "text": "centralized services so these accounts",
    "start": "603220",
    "end": "605649"
  },
  {
    "text": "would be run by the Cloud Center of",
    "start": "605649",
    "end": "607420"
  },
  {
    "text": "Excellence teams ideally developers",
    "start": "607420",
    "end": "610299"
  },
  {
    "text": "would have their own sandboxes and be",
    "start": "610299",
    "end": "612490"
  },
  {
    "text": "granted some budget to build with a",
    "start": "612490",
    "end": "615009"
  },
  {
    "text": "great way to speed up the provisioning",
    "start": "615009",
    "end": "617230"
  },
  {
    "text": "of resource changes to these developer",
    "start": "617230",
    "end": "619779"
  },
  {
    "text": "sandboxes would be to use cloud",
    "start": "619779",
    "end": "621850"
  },
  {
    "text": "formation stack sets which stack sets",
    "start": "621850",
    "end": "624670"
  },
  {
    "text": "you can define an AWS resource",
    "start": "624670",
    "end": "626920"
  },
  {
    "text": "configuration in a cloud formation",
    "start": "626920",
    "end": "628959"
  },
  {
    "text": "template and then roll it out across",
    "start": "628959",
    "end": "631119"
  },
  {
    "text": "multiple AWS accounts and/or regions",
    "start": "631119",
    "end": "634119"
  },
  {
    "text": "with a couple of clicks but how do you",
    "start": "634119",
    "end": "637929"
  },
  {
    "text": "technically achieve this I'm glad you",
    "start": "637929",
    "end": "640029"
  },
  {
    "text": "asked",
    "start": "640029",
    "end": "641429"
  },
  {
    "text": "AWS organizations come to comes to our",
    "start": "641429",
    "end": "644199"
  },
  {
    "text": "rescue here organizations lets you set",
    "start": "644199",
    "end": "647230"
  },
  {
    "text": "up all your other accounts more easily",
    "start": "647230",
    "end": "650319"
  },
  {
    "text": "it automatically consolidates your",
    "start": "650319",
    "end": "652869"
  },
  {
    "text": "billing for all accounts you create with",
    "start": "652869",
    "end": "655269"
  },
  {
    "text": "it as a development team you can quickly",
    "start": "655269",
    "end": "658059"
  },
  {
    "text": "get access to dedicated AWS accounts",
    "start": "658059",
    "end": "660639"
  },
  {
    "text": "with the correct corporate controls so",
    "start": "660639",
    "end": "663339"
  },
  {
    "text": "that resources are isolated and develop",
    "start": "663339",
    "end": "666490"
  },
  {
    "text": "timelines are maintained it gives you",
    "start": "666490",
    "end": "668890"
  },
  {
    "text": "scripted account creation and",
    "start": "668890",
    "end": "670530"
  },
  {
    "text": "inheritance of service control policies",
    "start": "670530",
    "end": "673090"
  },
  {
    "text": "which are things which control which",
    "start": "673090",
    "end": "675340"
  },
  {
    "text": "accounts have access to what API is in",
    "start": "675340",
    "end": "677560"
  },
  {
    "text": "the AWS cloud to set up organizations",
    "start": "677560",
    "end": "681340"
  },
  {
    "text": "you need to create an organizational",
    "start": "681340",
    "end": "683290"
  },
  {
    "text": "unit or you as you can see I have",
    "start": "683290",
    "end": "686530"
  },
  {
    "text": "created one called",
    "start": "686530",
    "end": "687910"
  },
  {
    "text": "alien gaming Republic to represent the",
    "start": "687910",
    "end": "690310"
  },
  {
    "text": "gaming companies dev team for their game",
    "start": "690310",
    "end": "692860"
  },
  {
    "text": "docker invasion but more on that later",
    "start": "692860",
    "end": "696660"
  },
  {
    "text": "inside the o you you can see the three",
    "start": "696660",
    "end": "699640"
  },
  {
    "text": "accounts we are going to be using the",
    "start": "699640",
    "end": "701470"
  },
  {
    "text": "dev ops account where our pipeline will",
    "start": "701470",
    "end": "703600"
  },
  {
    "text": "live and the dev and production accounts",
    "start": "703600",
    "end": "706980"
  },
  {
    "text": "you need to set up a policy to allow the",
    "start": "706980",
    "end": "709960"
  },
  {
    "text": "master account to assume a cross account",
    "start": "709960",
    "end": "712570"
  },
  {
    "text": "role in the other accounts so in our",
    "start": "712570",
    "end": "715150"
  },
  {
    "text": "case that's the organization's master",
    "start": "715150",
    "end": "717460"
  },
  {
    "text": "accessing our dev ops dev and production",
    "start": "717460",
    "end": "720880"
  },
  {
    "text": "accounts this is what the policy looks",
    "start": "720880",
    "end": "723130"
  },
  {
    "text": "like I know it looks like we are diving",
    "start": "723130",
    "end": "725350"
  },
  {
    "text": "into security stuff here but I want to",
    "start": "725350",
    "end": "727570"
  },
  {
    "text": "show you how to get the Foundation's set",
    "start": "727570",
    "end": "729730"
  },
  {
    "text": "up so let's look at AWS developer tools",
    "start": "729730",
    "end": "734140"
  },
  {
    "text": "that help you improve the release",
    "start": "734140",
    "end": "736030"
  },
  {
    "text": "velocity AWS code commit is a fully",
    "start": "736030",
    "end": "739390"
  },
  {
    "text": "managed source control service that",
    "start": "739390",
    "end": "741910"
  },
  {
    "text": "makes it easy for companies to host",
    "start": "741910",
    "end": "744130"
  },
  {
    "text": "secure and highly scalable private git",
    "start": "744130",
    "end": "747700"
  },
  {
    "text": "repositories AWS code build is a fully",
    "start": "747700",
    "end": "750940"
  },
  {
    "text": "managed build service that compiles",
    "start": "750940",
    "end": "753310"
  },
  {
    "text": "source code runs tests and produces",
    "start": "753310",
    "end": "756010"
  },
  {
    "text": "software packages that are ready to",
    "start": "756010",
    "end": "757900"
  },
  {
    "text": "deploy a double use code deploy is a",
    "start": "757900",
    "end": "760540"
  },
  {
    "text": "service that automates code deployments",
    "start": "760540",
    "end": "762760"
  },
  {
    "text": "to any instance including ec2 instances",
    "start": "762760",
    "end": "765610"
  },
  {
    "text": "and servers running on-premise finally",
    "start": "765610",
    "end": "769990"
  },
  {
    "text": "we need a pipeline to orchestrate this",
    "start": "769990",
    "end": "772210"
  },
  {
    "text": "workflow so AWS code pipeline is a",
    "start": "772210",
    "end": "774820"
  },
  {
    "text": "continuous integration and continuous",
    "start": "774820",
    "end": "776890"
  },
  {
    "text": "delivery service for fast and reliable",
    "start": "776890",
    "end": "779470"
  },
  {
    "text": "application and infrastructure updates",
    "start": "779470",
    "end": "781990"
  },
  {
    "text": "so code pipeline builds tests and",
    "start": "781990",
    "end": "785080"
  },
  {
    "text": "deploys your code every time there is a",
    "start": "785080",
    "end": "787480"
  },
  {
    "text": "code change based on the release process",
    "start": "787480",
    "end": "789550"
  },
  {
    "text": "models you define UW Systems Manager",
    "start": "789550",
    "end": "793500"
  },
  {
    "text": "provides a number of great tools to help",
    "start": "793500",
    "end": "796240"
  },
  {
    "text": "you manage fleets of ec2 instances many",
    "start": "796240",
    "end": "799780"
  },
  {
    "text": "up",
    "start": "799780",
    "end": "800060"
  },
  {
    "text": "vacations traditionally have needed to",
    "start": "800060",
    "end": "801920"
  },
  {
    "text": "change over time by getting patched and",
    "start": "801920",
    "end": "804860"
  },
  {
    "text": "having the operating system upgraded so",
    "start": "804860",
    "end": "807500"
  },
  {
    "text": "we call this mutable infrastructure the",
    "start": "807500",
    "end": "810140"
  },
  {
    "text": "problem with mutable infrastructure is",
    "start": "810140",
    "end": "812150"
  },
  {
    "text": "that in enterprises it often needs to go",
    "start": "812150",
    "end": "814640"
  },
  {
    "text": "through a change management process",
    "start": "814640",
    "end": "816380"
  },
  {
    "text": "which usually usually slows your release",
    "start": "816380",
    "end": "818810"
  },
  {
    "text": "velocity we are seeing more and more",
    "start": "818810",
    "end": "821120"
  },
  {
    "text": "customers move towards immutable",
    "start": "821120",
    "end": "823310"
  },
  {
    "text": "infrastructure which is designed to",
    "start": "823310",
    "end": "825320"
  },
  {
    "text": "replace existing infrastructure assets",
    "start": "825320",
    "end": "827300"
  },
  {
    "text": "with new ones that already have been",
    "start": "827300",
    "end": "830150"
  },
  {
    "text": "upgraded parameter store is a great for",
    "start": "830150",
    "end": "833720"
  },
  {
    "text": "storing secrets that need to be",
    "start": "833720",
    "end": "835730"
  },
  {
    "text": "dynamically injected into in immutable",
    "start": "835730",
    "end": "838820"
  },
  {
    "text": "infrastructures so in this presentation",
    "start": "838820",
    "end": "841400"
  },
  {
    "text": "we'll focus on the parameter store",
    "start": "841400",
    "end": "844030"
  },
  {
    "text": "parameter store lets you store",
    "start": "844030",
    "end": "846200"
  },
  {
    "text": "configuration information and even",
    "start": "846200",
    "end": "848120"
  },
  {
    "text": "secrets in a place that's secured by AWS",
    "start": "848120",
    "end": "851720"
  },
  {
    "text": "key management service kms and is easy",
    "start": "851720",
    "end": "855020"
  },
  {
    "text": "to interact with it natively integrates",
    "start": "855020",
    "end": "857720"
  },
  {
    "text": "with a number of AWS services so it's",
    "start": "857720",
    "end": "860510"
  },
  {
    "text": "easy to use and so it's it's it's",
    "start": "860510",
    "end": "863300"
  },
  {
    "text": "created for Crofts account configuration",
    "start": "863300",
    "end": "865790"
  },
  {
    "text": "management it also is capable of sending",
    "start": "865790",
    "end": "869240"
  },
  {
    "text": "notifications when something changes",
    "start": "869240",
    "end": "871550"
  },
  {
    "text": "so you can hook automation into it to",
    "start": "871550",
    "end": "874640"
  },
  {
    "text": "trigger updates to your environments our",
    "start": "874640",
    "end": "877510"
  },
  {
    "text": "demo application is a game called docker",
    "start": "877510",
    "end": "880730"
  },
  {
    "text": "invasion it's comprised of two micro",
    "start": "880730",
    "end": "883700"
  },
  {
    "text": "services all of which have different",
    "start": "883700",
    "end": "886040"
  },
  {
    "text": "compute technologies powering them the",
    "start": "886040",
    "end": "888890"
  },
  {
    "text": "main game service runs in a docker",
    "start": "888890",
    "end": "890930"
  },
  {
    "text": "on elastic container service ECS and the",
    "start": "890930",
    "end": "894440"
  },
  {
    "text": "service which tracks the top score",
    "start": "894440",
    "end": "896510"
  },
  {
    "text": "across game sessions that lives in a",
    "start": "896510",
    "end": "899660"
  },
  {
    "text": "lambda function the goal of the demo is",
    "start": "899660",
    "end": "902390"
  },
  {
    "text": "to give you a quick feel for how you can",
    "start": "902390",
    "end": "904340"
  },
  {
    "text": "orchestrate different technologies",
    "start": "904340",
    "end": "906290"
  },
  {
    "text": "across accounts so that he can release",
    "start": "906290",
    "end": "908750"
  },
  {
    "text": "quickly let's look at the game micro",
    "start": "908750",
    "end": "912140"
  },
  {
    "text": "service in detail in the DevOps account",
    "start": "912140",
    "end": "914930"
  },
  {
    "text": "we have used the code pipeline service",
    "start": "914930",
    "end": "916760"
  },
  {
    "text": "and in step one the developer makes a",
    "start": "916760",
    "end": "920240"
  },
  {
    "text": "change checks it in to the code commits",
    "start": "920240",
    "end": "922700"
  },
  {
    "text": "in step two it triggers up code build",
    "start": "922700",
    "end": "925790"
  },
  {
    "text": "and generates the docker that gets",
    "start": "925790",
    "end": "928160"
  },
  {
    "text": "registered in the elastic container",
    "start": "928160",
    "end": "930440"
  },
  {
    "text": "registry ECR as shown in step 3",
    "start": "930440",
    "end": "934250"
  },
  {
    "text": "in step for the code pipeline assumes",
    "start": "934250",
    "end": "936800"
  },
  {
    "text": "the deployment role and steps five and",
    "start": "936800",
    "end": "939470"
  },
  {
    "text": "six invoke the cloud formation service",
    "start": "939470",
    "end": "942200"
  },
  {
    "text": "to create the ECS cluster finally in",
    "start": "942200",
    "end": "946550"
  },
  {
    "text": "step seven the task definition from ECS",
    "start": "946550",
    "end": "950000"
  },
  {
    "text": "pulls the game micro service docker",
    "start": "950000",
    "end": "952310"
  },
  {
    "text": "image that we created in the ilist",
    "start": "952310",
    "end": "954590"
  },
  {
    "text": "elastic container registry and then it",
    "start": "954590",
    "end": "956750"
  },
  {
    "text": "deploys it to the ECS cluster you want",
    "start": "956750",
    "end": "960500"
  },
  {
    "text": "to ensure that there are some sanity",
    "start": "960500",
    "end": "962210"
  },
  {
    "text": "checks in place before deploying to",
    "start": "962210",
    "end": "964400"
  },
  {
    "text": "production after all we don't want to",
    "start": "964400",
    "end": "966680"
  },
  {
    "text": "set things on fire and you can use black",
    "start": "966680",
    "end": "969740"
  },
  {
    "text": "day deployments to only allow promotions",
    "start": "969740",
    "end": "972170"
  },
  {
    "text": "to production at certain time windows or",
    "start": "972170",
    "end": "974600"
  },
  {
    "text": "have it automatically promote once some",
    "start": "974600",
    "end": "977600"
  },
  {
    "text": "synthetic tests have been run or just",
    "start": "977600",
    "end": "980390"
  },
  {
    "text": "have good old manual approvals in place",
    "start": "980390",
    "end": "983410"
  },
  {
    "text": "for our demo we are using a simple",
    "start": "983410",
    "end": "986420"
  },
  {
    "text": "approval but if possible you should try",
    "start": "986420",
    "end": "989180"
  },
  {
    "text": "to configure your pipeline to",
    "start": "989180",
    "end": "990710"
  },
  {
    "text": "automatically clear the gate based on",
    "start": "990710",
    "end": "993290"
  },
  {
    "text": "some good criteria that works for your",
    "start": "993290",
    "end": "995690"
  },
  {
    "text": "business now if we repeat the same steps",
    "start": "995690",
    "end": "998720"
  },
  {
    "text": "for the production account in steps 8 &",
    "start": "998720",
    "end": "1001690"
  },
  {
    "text": "9 we assume the production deployment",
    "start": "1001690",
    "end": "1004150"
  },
  {
    "text": "rule and then invoke the cloud formation",
    "start": "1004150",
    "end": "1006640"
  },
  {
    "text": "to create the easiest cluster and deploy",
    "start": "1006640",
    "end": "1009970"
  },
  {
    "text": "the docker from ECR now let's take a",
    "start": "1009970",
    "end": "1014110"
  },
  {
    "text": "look at the deployment of the top score",
    "start": "1014110",
    "end": "1016210"
  },
  {
    "text": "micro service the top score micro",
    "start": "1016210",
    "end": "1018880"
  },
  {
    "text": "service keeps track of scoring counter",
    "start": "1018880",
    "end": "1020980"
  },
  {
    "text": "across sessions and it's implemented as",
    "start": "1020980",
    "end": "1024100"
  },
  {
    "text": "an AWS lambda function the top score",
    "start": "1024100",
    "end": "1027430"
  },
  {
    "text": "values are stored in a dynamo DB",
    "start": "1027430",
    "end": "1029740"
  },
  {
    "text": "database the team working on the service",
    "start": "1029740",
    "end": "1032589"
  },
  {
    "text": "checks in the code which again triggers",
    "start": "1032589",
    "end": "1034630"
  },
  {
    "text": "a build and packages the lambda code but",
    "start": "1034630",
    "end": "1037420"
  },
  {
    "text": "this time it does it as a zip file and",
    "start": "1037420",
    "end": "1039790"
  },
  {
    "text": "uploads it to the s3 bucket the service",
    "start": "1039790",
    "end": "1044020"
  },
  {
    "text": "uses AWS lambda so I wanted to show you",
    "start": "1044020",
    "end": "1046240"
  },
  {
    "text": "that architecture will work for any",
    "start": "1046240",
    "end": "1048640"
  },
  {
    "text": "different sets of services you are using",
    "start": "1048640",
    "end": "1050940"
  },
  {
    "text": "lambda will use a cross account role to",
    "start": "1050940",
    "end": "1054280"
  },
  {
    "text": "hit the parameter store to retrieve the",
    "start": "1054280",
    "end": "1056590"
  },
  {
    "text": "endpoint information for dynamo DB this",
    "start": "1056590",
    "end": "1059860"
  },
  {
    "text": "in turn will use kms to decrypt the data",
    "start": "1059860",
    "end": "1062760"
  },
  {
    "text": "note that a new token will only be",
    "start": "1062760",
    "end": "1065679"
  },
  {
    "text": "retrieved when a new container is",
    "start": "1065679",
    "end": "1067360"
  },
  {
    "text": "provision",
    "start": "1067360",
    "end": "1067990"
  },
  {
    "text": "so it won't spam the parameter store",
    "start": "1067990",
    "end": "1070360"
  },
  {
    "text": "every time you run a function now you do",
    "start": "1070360",
    "end": "1073240"
  },
  {
    "text": "need to be aware of the service limits",
    "start": "1073240",
    "end": "1075160"
  },
  {
    "text": "hitting parameter store each time though",
    "start": "1075160",
    "end": "1078480"
  },
  {
    "text": "the final deployment to the production",
    "start": "1078480",
    "end": "1080890"
  },
  {
    "text": "account is fairly straightforward and it",
    "start": "1080890",
    "end": "1083020"
  },
  {
    "text": "follows a similar pattern as we did with",
    "start": "1083020",
    "end": "1085720"
  },
  {
    "text": "the game micro service so it's time to",
    "start": "1085720",
    "end": "1089290"
  },
  {
    "text": "see all of this in action we log in to",
    "start": "1089290",
    "end": "1092140"
  },
  {
    "text": "the familiar AWS console and take a look",
    "start": "1092140",
    "end": "1095350"
  },
  {
    "text": "at the docker invasion application at",
    "start": "1095350",
    "end": "1097720"
  },
  {
    "text": "the top left hand corner you see the",
    "start": "1097720",
    "end": "1099970"
  },
  {
    "text": "score counter which is maintained by our",
    "start": "1099970",
    "end": "1101950"
  },
  {
    "text": "score micro service as we showed in the",
    "start": "1101950",
    "end": "1104320"
  },
  {
    "text": "previous slide and a SS lambda function",
    "start": "1104320",
    "end": "1106270"
  },
  {
    "text": "keeps track of the scores as we fire and",
    "start": "1106270",
    "end": "1108400"
  },
  {
    "text": "kill invading doctors until one of them",
    "start": "1108400",
    "end": "1110050"
  },
  {
    "text": "obviously kills us to see our pipeline",
    "start": "1110050",
    "end": "1111940"
  },
  {
    "text": "let's hop on to our code pipeline",
    "start": "1111940",
    "end": "1114280"
  },
  {
    "text": "service the alien pipeline service shows",
    "start": "1114280",
    "end": "1117610"
  },
  {
    "text": "the various stages we have defined for",
    "start": "1117610",
    "end": "1120270"
  },
  {
    "text": "commit build test and deploy the source",
    "start": "1120270",
    "end": "1125050"
  },
  {
    "text": "stage has the AWS code commit as the",
    "start": "1125050",
    "end": "1129540"
  },
  {
    "text": "source repository the build stage uses",
    "start": "1129540",
    "end": "1132790"
  },
  {
    "text": "the code build service and after our",
    "start": "1132790",
    "end": "1135220"
  },
  {
    "text": "build completes we use the deploy dev",
    "start": "1135220",
    "end": "1136990"
  },
  {
    "text": "stage to deploy the micro service using",
    "start": "1136990",
    "end": "1139300"
  },
  {
    "text": "a cloud formation template finally the",
    "start": "1139300",
    "end": "1141550"
  },
  {
    "text": "deployed prod stage defines a manual",
    "start": "1141550",
    "end": "1144310"
  },
  {
    "text": "approval step to test our pipeline the",
    "start": "1144310",
    "end": "1147190"
  },
  {
    "text": "first thing we need to do is make a code",
    "start": "1147190",
    "end": "1148810"
  },
  {
    "text": "change and check it into the repository",
    "start": "1148810",
    "end": "1150850"
  },
  {
    "text": "so we are going to do that by changing",
    "start": "1150850",
    "end": "1153220"
  },
  {
    "text": "the game dot GS file and changing the",
    "start": "1153220",
    "end": "1156100"
  },
  {
    "text": "background color so here we are changing",
    "start": "1156100",
    "end": "1158050"
  },
  {
    "text": "the background color from black to",
    "start": "1158050",
    "end": "1160270"
  },
  {
    "text": "Ameren we save the file and then execute",
    "start": "1160270",
    "end": "1163510"
  },
  {
    "text": "the git command to check in the file to",
    "start": "1163510",
    "end": "1166420"
  },
  {
    "text": "the code repository we also provide",
    "start": "1166420",
    "end": "1168580"
  },
  {
    "text": "comment there which says bring the party",
    "start": "1168580",
    "end": "1170350"
  },
  {
    "text": "so we exactly know what changes we made",
    "start": "1170350",
    "end": "1172090"
  },
  {
    "text": "and we run the push command to push the",
    "start": "1172090",
    "end": "1174820"
  },
  {
    "text": "particular change to the code commit",
    "start": "1174820",
    "end": "1176440"
  },
  {
    "text": "repository as soon as the repository is",
    "start": "1176440",
    "end": "1180690"
  },
  {
    "text": "changed our pipeline kicks in and the",
    "start": "1180690",
    "end": "1185200"
  },
  {
    "text": "source stage changes status to in",
    "start": "1185200",
    "end": "1188320"
  },
  {
    "text": "progress so you'll see that the",
    "start": "1188320",
    "end": "1191320"
  },
  {
    "text": "particular status has changed and at",
    "start": "1191320",
    "end": "1193600"
  },
  {
    "text": "this point the code commit repository",
    "start": "1193600",
    "end": "1195640"
  },
  {
    "text": "has synced and identified the changes in",
    "start": "1195640",
    "end": "1198430"
  },
  {
    "text": "the game dot JS file notice the common",
    "start": "1198430",
    "end": "1201460"
  },
  {
    "text": "bring the party is displayed under the",
    "start": "1201460",
    "end": "1203500"
  },
  {
    "text": "source tag and after this stage complete",
    "start": "1203500",
    "end": "1207490"
  },
  {
    "text": "successfully the build stage is invoked",
    "start": "1207490",
    "end": "1209740"
  },
  {
    "text": "as you can see the progress has changed",
    "start": "1209740",
    "end": "1211780"
  },
  {
    "text": "the status has changed in progress and",
    "start": "1211780",
    "end": "1213340"
  },
  {
    "text": "the coal build service is now building",
    "start": "1213340",
    "end": "1215260"
  },
  {
    "text": "the code let's while it builds let's go",
    "start": "1215260",
    "end": "1218470"
  },
  {
    "text": "and inspect the code build project",
    "start": "1218470",
    "end": "1220330"
  },
  {
    "text": "definition and we have a build alien",
    "start": "1220330",
    "end": "1222790"
  },
  {
    "text": "project created that points the location",
    "start": "1222790",
    "end": "1224770"
  },
  {
    "text": "of the code in our repository under the",
    "start": "1224770",
    "end": "1228130"
  },
  {
    "text": "project details we see the build",
    "start": "1228130",
    "end": "1231130"
  },
  {
    "text": "specification the Amal file which lists",
    "start": "1231130",
    "end": "1234430"
  },
  {
    "text": "the actions to be taken after the build",
    "start": "1234430",
    "end": "1238420"
  },
  {
    "text": "process so while that comes up let's",
    "start": "1238420",
    "end": "1242220"
  },
  {
    "text": "view the actions there and there you go",
    "start": "1242220",
    "end": "1245020"
  },
  {
    "text": "the build spec file has opened and we",
    "start": "1245020",
    "end": "1248230"
  },
  {
    "text": "are seeing the various actions the",
    "start": "1248230",
    "end": "1249970"
  },
  {
    "text": "docker build command builds the docker",
    "start": "1249970",
    "end": "1251440"
  },
  {
    "text": "image from a docker file the dock attack",
    "start": "1251440",
    "end": "1254440"
  },
  {
    "text": "command creates a tag and obviously tags",
    "start": "1254440",
    "end": "1257050"
  },
  {
    "text": "are a great way to identify images in",
    "start": "1257050",
    "end": "1259810"
  },
  {
    "text": "the repository and really good practices",
    "start": "1259810",
    "end": "1262950"
  },
  {
    "text": "recollect that once we build we want to",
    "start": "1262950",
    "end": "1265570"
  },
  {
    "text": "create a talker and the docker push",
    "start": "1265570",
    "end": "1267490"
  },
  {
    "text": "command does that for us we get that",
    "start": "1267490",
    "end": "1270880"
  },
  {
    "text": "particular file out of the way and let's",
    "start": "1270880",
    "end": "1274390"
  },
  {
    "text": "hop on and look at the code build status",
    "start": "1274390",
    "end": "1279700"
  },
  {
    "text": "and yeah so is this great so our build",
    "start": "1279700",
    "end": "1282580"
  },
  {
    "text": "has completed and we are going to go",
    "start": "1282580",
    "end": "1286120"
  },
  {
    "text": "take a look at the container registry so",
    "start": "1286120",
    "end": "1289360"
  },
  {
    "text": "it should have moved our particular",
    "start": "1289360",
    "end": "1291929"
  },
  {
    "text": "build the container the docker to the",
    "start": "1291929",
    "end": "1295090"
  },
  {
    "text": "container now in the deploy dev stage",
    "start": "1295090",
    "end": "1297130"
  },
  {
    "text": "has passed the JSON yeah Mel file to the",
    "start": "1297130",
    "end": "1299980"
  },
  {
    "text": "cloud formation template to provision",
    "start": "1299980",
    "end": "1302470"
  },
  {
    "text": "the necessary elastic container service",
    "start": "1302470",
    "end": "1304960"
  },
  {
    "text": "infrastructure to deploy the docker and",
    "start": "1304960",
    "end": "1307720"
  },
  {
    "text": "that also complete so at this point we",
    "start": "1307720",
    "end": "1310149"
  },
  {
    "text": "have our docker created and it's been in",
    "start": "1310149",
    "end": "1315399"
  },
  {
    "text": "fact deployed in ECS and now we are",
    "start": "1315399",
    "end": "1318190"
  },
  {
    "text": "ready to test our changes in the",
    "start": "1318190",
    "end": "1319960"
  },
  {
    "text": "development account so we have a manual",
    "start": "1319960",
    "end": "1321940"
  },
  {
    "text": "approval step here you are looking at",
    "start": "1321940",
    "end": "1323710"
  },
  {
    "text": "the email so we have popped onto the",
    "start": "1323710",
    "end": "1325120"
  },
  {
    "text": "email we have received an email for",
    "start": "1325120",
    "end": "1327690"
  },
  {
    "text": "approving this particular change and we",
    "start": "1327690",
    "end": "1333250"
  },
  {
    "text": "are testing the load balancer URL so we",
    "start": "1333250",
    "end": "1335710"
  },
  {
    "text": "see that the background has changed here",
    "start": "1335710",
    "end": "1338350"
  },
  {
    "text": "and we have amaranth color showing up",
    "start": "1338350",
    "end": "1342690"
  },
  {
    "text": "the step asks the approver to enter a",
    "start": "1342690",
    "end": "1345519"
  },
  {
    "text": "comment and hit approve our manual",
    "start": "1345519",
    "end": "1348190"
  },
  {
    "text": "approval step is now completed",
    "start": "1348190",
    "end": "1349659"
  },
  {
    "text": "successfully obviously after we hit",
    "start": "1349659",
    "end": "1352750"
  },
  {
    "text": "approve here and it has been moved to",
    "start": "1352750",
    "end": "1354669"
  },
  {
    "text": "the next stage in the pipeline which is",
    "start": "1354669",
    "end": "1356440"
  },
  {
    "text": "deploy to prod again this step repeats",
    "start": "1356440",
    "end": "1359289"
  },
  {
    "text": "the same series of steps that we created",
    "start": "1359289",
    "end": "1361269"
  },
  {
    "text": "earlier but this time all the resources",
    "start": "1361269",
    "end": "1363309"
  },
  {
    "text": "are being created in the production",
    "start": "1363309",
    "end": "1366039"
  },
  {
    "text": "account as you can see the resource",
    "start": "1366039",
    "end": "1369220"
  },
  {
    "text": "provisioning is still happening it's",
    "start": "1369220",
    "end": "1370630"
  },
  {
    "text": "going it's in progress in deploying it",
    "start": "1370630",
    "end": "1373899"
  },
  {
    "text": "should quickly turn to successful so we",
    "start": "1373899",
    "end": "1377889"
  },
  {
    "text": "can test our changes while the changes",
    "start": "1377889",
    "end": "1382539"
  },
  {
    "text": "happen basically all of these resources",
    "start": "1382539",
    "end": "1385570"
  },
  {
    "text": "now are being created in the production",
    "start": "1385570",
    "end": "1388149"
  },
  {
    "text": "account so we have successfully done",
    "start": "1388149",
    "end": "1390429"
  },
  {
    "text": "that we are going to test the production",
    "start": "1390429",
    "end": "1391720"
  },
  {
    "text": "URL and as you can see we will just quit",
    "start": "1391720",
    "end": "1393700"
  },
  {
    "text": "quickly hit a refresh here we do a quick",
    "start": "1393700",
    "end": "1396429"
  },
  {
    "text": "sanity check of the application and we",
    "start": "1396429",
    "end": "1398019"
  },
  {
    "text": "are good to go the background has",
    "start": "1398019",
    "end": "1399490"
  },
  {
    "text": "changed and our firing nozzle also works",
    "start": "1399490",
    "end": "1402610"
  },
  {
    "text": "pretty well so that was the game micro",
    "start": "1402610",
    "end": "1406720"
  },
  {
    "text": "service the one that builds out the",
    "start": "1406720",
    "end": "1407860"
  },
  {
    "text": "docker we also have the top scorer micro",
    "start": "1407860",
    "end": "1410980"
  },
  {
    "text": "service that updates the",
    "start": "1410980",
    "end": "1412930"
  },
  {
    "text": "core across sessions taking a look at",
    "start": "1412930",
    "end": "1415120"
  },
  {
    "text": "the pipeline for this micro service we",
    "start": "1415120",
    "end": "1417010"
  },
  {
    "text": "have a similar structure we have source",
    "start": "1417010",
    "end": "1418630"
  },
  {
    "text": "build deploy to test and deploy to prod",
    "start": "1418630",
    "end": "1422170"
  },
  {
    "text": "after a manual approval let's take a",
    "start": "1422170",
    "end": "1425260"
  },
  {
    "text": "closer look at the build specification",
    "start": "1425260",
    "end": "1428460"
  },
  {
    "text": "for this micro service which is",
    "start": "1428460",
    "end": "1431520"
  },
  {
    "text": "basically packaged as a lambda function",
    "start": "1431520",
    "end": "1435870"
  },
  {
    "text": "let's scroll up and take a look at that",
    "start": "1435870",
    "end": "1439230"
  },
  {
    "text": "we will open the build specification we",
    "start": "1439230",
    "end": "1441880"
  },
  {
    "text": "open the build project we drill down to",
    "start": "1441880",
    "end": "1443950"
  },
  {
    "text": "view the build specification here the",
    "start": "1443950",
    "end": "1446590"
  },
  {
    "text": "build command shows how the s3 bucket",
    "start": "1446590",
    "end": "1450670"
  },
  {
    "text": "where the lambda function is packaged",
    "start": "1450670",
    "end": "1454000"
  },
  {
    "text": "and stored look at the build",
    "start": "1454000",
    "end": "1455650"
  },
  {
    "text": "specification as you can see in the",
    "start": "1455650",
    "end": "1457270"
  },
  {
    "text": "build specification we have the command",
    "start": "1457270",
    "end": "1460750"
  },
  {
    "text": "and within the command we also have a",
    "start": "1460750",
    "end": "1462730"
  },
  {
    "text": "location of where the particular lambda",
    "start": "1462730",
    "end": "1465760"
  },
  {
    "text": "function is going to be stored",
    "start": "1465760",
    "end": "1467050"
  },
  {
    "text": "that's the s3 bucket location let's open",
    "start": "1467050",
    "end": "1471100"
  },
  {
    "text": "up the particular lambda function",
    "start": "1471100",
    "end": "1473410"
  },
  {
    "text": "implementation and while I look for my",
    "start": "1473410",
    "end": "1475720"
  },
  {
    "text": "lambda function oh there it is and this",
    "start": "1475720",
    "end": "1478720"
  },
  {
    "text": "is basically importing the Bhutto Bhutto",
    "start": "1478720",
    "end": "1482320"
  },
  {
    "text": "library and the first few lines just",
    "start": "1482320",
    "end": "1485290"
  },
  {
    "text": "show assumption of a role for reading",
    "start": "1485290",
    "end": "1487930"
  },
  {
    "text": "from the SSM the systems manager we get",
    "start": "1487930",
    "end": "1492040"
  },
  {
    "text": "a Systems Manager variable and then we",
    "start": "1492040",
    "end": "1494500"
  },
  {
    "text": "get the parameter the production table",
    "start": "1494500",
    "end": "1496600"
  },
  {
    "text": "which is the name the store from the",
    "start": "1496600",
    "end": "1498790"
  },
  {
    "text": "store that we get",
    "start": "1498790",
    "end": "1500140"
  },
  {
    "text": "that's the dynamo DB table name and from",
    "start": "1500140",
    "end": "1502840"
  },
  {
    "text": "the dynamo DB table we get the value for",
    "start": "1502840",
    "end": "1505300"
  },
  {
    "text": "the top score",
    "start": "1505300",
    "end": "1507540"
  },
  {
    "text": "I hope from the dam",
    "start": "1507540",
    "end": "1509370"
  },
  {
    "text": "you got a good understanding of the",
    "start": "1509370",
    "end": "1511020"
  },
  {
    "text": "pipelines that were implemented for both",
    "start": "1511020",
    "end": "1513180"
  },
  {
    "text": "the micro-services and now feel",
    "start": "1513180",
    "end": "1515610"
  },
  {
    "text": "well-equipped to do fast deployments in",
    "start": "1515610",
    "end": "1518220"
  },
  {
    "text": "your projects so recapping the",
    "start": "1518220",
    "end": "1520980"
  },
  {
    "text": "presentation we looked at including dev",
    "start": "1520980",
    "end": "1523860"
  },
  {
    "text": "ops and InfoSec in the account strategy",
    "start": "1523860",
    "end": "1527540"
  },
  {
    "text": "using a separate account for DevOps and",
    "start": "1527540",
    "end": "1531050"
  },
  {
    "text": "leveraging cross account roles to",
    "start": "1531050",
    "end": "1533309"
  },
  {
    "text": "coordinate deployments across accounts",
    "start": "1533309",
    "end": "1535250"
  },
  {
    "text": "thus enabling building ones and",
    "start": "1535250",
    "end": "1538110"
  },
  {
    "text": "deploying many times if after today you",
    "start": "1538110",
    "end": "1541260"
  },
  {
    "text": "wanted to take your AWS knowledge to the",
    "start": "1541260",
    "end": "1543780"
  },
  {
    "text": "next level you have several options",
    "start": "1543780",
    "end": "1546000"
  },
  {
    "text": "available to you to gain more confidence",
    "start": "1546000",
    "end": "1548580"
  },
  {
    "text": "and hands-on experience with AWS watch",
    "start": "1548580",
    "end": "1551850"
  },
  {
    "text": "our instructional videos and explore the",
    "start": "1551850",
    "end": "1554309"
  },
  {
    "text": "self-paced labs additionally you can",
    "start": "1554309",
    "end": "1557220"
  },
  {
    "text": "attend our instructor-led classes by",
    "start": "1557220",
    "end": "1560160"
  },
  {
    "text": "qualified AWS instructors and learn how",
    "start": "1560160",
    "end": "1563010"
  },
  {
    "text": "to design deploy and operate highly",
    "start": "1563010",
    "end": "1566040"
  },
  {
    "text": "available cost-effective and secure",
    "start": "1566040",
    "end": "1568559"
  },
  {
    "text": "applications on AWS and remember to",
    "start": "1568559",
    "end": "1571500"
  },
  {
    "text": "validate your technical expertise with",
    "start": "1571500",
    "end": "1573900"
  },
  {
    "text": "AWS certifications AWS also has a wide",
    "start": "1573900",
    "end": "1578610"
  },
  {
    "text": "partner ecosystem to help you focus on",
    "start": "1578610",
    "end": "1581520"
  },
  {
    "text": "your success and take full advantage of",
    "start": "1581520",
    "end": "1584309"
  },
  {
    "text": "all the business benefits that AWS has",
    "start": "1584309",
    "end": "1587010"
  },
  {
    "text": "to offer learn more about how APN",
    "start": "1587010",
    "end": "1589950"
  },
  {
    "text": "partners can help you find the right APN",
    "start": "1589950",
    "end": "1592830"
  },
  {
    "text": "partner for your needs you can visit the",
    "start": "1592830",
    "end": "1594990"
  },
  {
    "text": "AWS APN booth at our showcase I hope you",
    "start": "1594990",
    "end": "1598770"
  },
  {
    "text": "enjoy the rest of the AWS innovate",
    "start": "1598770",
    "end": "1600600"
  },
  {
    "text": "online conference do take time to",
    "start": "1600600",
    "end": "1603330"
  },
  {
    "text": "provide feedback on today's event so we",
    "start": "1603330",
    "end": "1605970"
  },
  {
    "text": "can improve the event experience for you",
    "start": "1605970",
    "end": "1607860"
  },
  {
    "text": "in the future and have a good day",
    "start": "1607860",
    "end": "1612260"
  }
]