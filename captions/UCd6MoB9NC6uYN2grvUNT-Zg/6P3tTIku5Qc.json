[
  {
    "text": "thank you where it's done I think are we good I think we're ready to start okay well",
    "start": "2580",
    "end": "8820"
  },
  {
    "text": "good afternoon everyone and welcome to this session on what's new in the AWS SDK for.net my name is Steve Roberts",
    "start": "8820",
    "end": "15660"
  },
  {
    "text": "with me is Norm Johansen hi everybody we're both developers at AWS specifically in the team responsible for",
    "start": "15660",
    "end": "22260"
  },
  {
    "text": "the SDK for.net the toolkit for visual studio and the tools for windows power shop",
    "start": "22260",
    "end": "27840"
  },
  {
    "text": "So today we're going to be looking at what primarily what's new in the SDK by title what have we added my code",
    "start": "27840",
    "end": "34500"
  },
  {
    "text": "monkey's fallen asleep already it's because you tricked me this is not a good start",
    "start": "34500",
    "end": "40260"
  },
  {
    "text": "um we're good now no I guess we're not good I changed the slide",
    "start": "40260",
    "end": "47840"
  },
  {
    "text": "okay I'm going to carry on talking anyway while he sorts the message which is about the way things usually happen",
    "start": "49379",
    "end": "54480"
  },
  {
    "text": "um so today we're going to be concentrating primarily on the SDK so things have been added in the last 12 months so we've got some new handling",
    "start": "54480",
    "end": "60840"
  },
  {
    "text": "for credentials for examples that makes it really easy super convenient for handling local",
    "start": "60840",
    "end": "66420"
  },
  {
    "text": "development scenarios and deployment without needing to expose credentials anywhere in the application or your",
    "start": "66420",
    "end": "71939"
  },
  {
    "text": "source code repositories some new libraries that we have for handling communication with S3 link and",
    "start": "71939",
    "end": "77760"
  },
  {
    "text": "dynamodb to services that people tend to use together and also a new elastic cache I'm going rogue okay it's going",
    "start": "77760",
    "end": "84960"
  },
  {
    "text": "rogue thinking outside the box that's what we do some new uh",
    "start": "84960",
    "end": "90960"
  },
  {
    "text": "library for working with Amazon elasticash so although we're concentrating primarily on the SDK we",
    "start": "90960",
    "end": "97020"
  },
  {
    "text": "are going to be showing some of the toolkit for visual studio and also some windows Powershell so having mentioned the tools in the SDK",
    "start": "97020",
    "end": "103079"
  },
  {
    "text": "let's get the big picture of how all these fit together and unsurprisingly I suspect from our point of view the SDK",
    "start": "103079",
    "end": "109140"
  },
  {
    "text": "is the center of our universe so it's built for multiple platforms including.net 3.5 for those of you that",
    "start": "109140",
    "end": "114960"
  },
  {
    "text": "have not moved to the latest and greatest versions of dotnet at its basis level the SDK exposes all",
    "start": "114960",
    "end": "120899"
  },
  {
    "text": "of the AWS services in a common and consistent manner in what we call the service client API layer it also",
    "start": "120899",
    "end": "127140"
  },
  {
    "text": "contains a variety of higher level abstractions and helper utilities new for 2014 is a VM import class that",
    "start": "127140",
    "end": "134640"
  },
  {
    "text": "lets you take virtual machine images and disk volumes and import them through to Amazon ec2 it does all the heavy lifting",
    "start": "134640",
    "end": "140700"
  },
  {
    "text": "through Amazon S3 for you using C sharp external to the SDK we have the tools so",
    "start": "140700",
    "end": "148260"
  },
  {
    "text": "Powershell toolkit a couple of extension labors in yoga these tools are built using the exact same version of the SDK",
    "start": "148260",
    "end": "154800"
  },
  {
    "text": "that we ship publicly so everything that our applications can do your applications can do in fact if you're a",
    "start": "154800",
    "end": "160020"
  },
  {
    "text": "Powershell user and you've used the new import commandlets they simply make calls to the VM import class inside the",
    "start": "160020",
    "end": "165840"
  },
  {
    "text": "SDK so I sense that my co-presenter is itching to get started on a demo so Norm",
    "start": "165840",
    "end": "171420"
  },
  {
    "text": "what have you got for us to start okay so the first thing we're going to talk about is creating those service clients",
    "start": "171420",
    "end": "177420"
  },
  {
    "text": "that Steve mentioned and how we could manage credentials when we want to create those clients",
    "start": "177420",
    "end": "183599"
  },
  {
    "text": "so the SDK consists of about 35 service clients I think after the last two",
    "start": "183599",
    "end": "188700"
  },
  {
    "text": "Keynotes we're going to hit the 40 range and to create a service client we need to pass in the AWS access key ID and",
    "start": "188700",
    "end": "197099"
  },
  {
    "text": "your secret key as well as we need to specify which of the AWS regions we want to connect to so",
    "start": "197099",
    "end": "203159"
  },
  {
    "text": "we can access your AWS resources or create new resources in those regions",
    "start": "203159",
    "end": "208319"
  },
  {
    "text": "once you have that service client it has a one-to-one mapping of all of the service operations and you simply create",
    "start": "208319",
    "end": "215519"
  },
  {
    "text": "a request object set all the required parameters on there and any additional optional parameters and you're going to",
    "start": "215519",
    "end": "220799"
  },
  {
    "text": "get back a response object from the operation and that contains all the information the service returned here in",
    "start": "220799",
    "end": "227400"
  },
  {
    "text": "this case we're calling the Run instance method so we're going to get back the instance type ID or excuse me the",
    "start": "227400",
    "end": "232500"
  },
  {
    "text": "instance ID so let's switch into code and see what that's like",
    "start": "232500",
    "end": "238760"
  },
  {
    "text": "so here I've just got your basic console application I've already added our AWS K",
    "start": "239099",
    "end": "245159"
  },
  {
    "text": "via nougat and so to get started we're going to start adding some namespaces",
    "start": "245159",
    "end": "250680"
  },
  {
    "text": "so the first thing we're going to do is we're going to add the Amazon namespace and this is the namespace that contains uh all the constants for all the AWS",
    "start": "250680",
    "end": "257639"
  },
  {
    "text": "regions that we want to use then I want to use ec2 so I'm going to add the ec2 namespace this has the",
    "start": "257639",
    "end": "263940"
  },
  {
    "text": "actual service client that we want to use and then the third one that we commonly",
    "start": "263940",
    "end": "269160"
  },
  {
    "text": "add is the model namespace and that's where all those requests and response options classes are defined at",
    "start": "269160",
    "end": "277080"
  },
  {
    "text": "so now let's step into the code here and let's type out I want an ec2 client",
    "start": "277080",
    "end": "283199"
  },
  {
    "text": "new Amazon and we're passing our access key obviously this is not a really an access",
    "start": "283199",
    "end": "290100"
  },
  {
    "text": "key because they are not fun to type especially in front of a large crowd",
    "start": "290100",
    "end": "295259"
  },
  {
    "text": "and then we can use that as constants to say I want to connect to us West too",
    "start": "295259",
    "end": "302000"
  },
  {
    "text": "and now we have our client and we can simply look and you see there's all those operations that we wouldn't call",
    "start": "302040",
    "end": "307500"
  },
  {
    "text": "and we'll create our request objects and get a response back",
    "start": "307500",
    "end": "311780"
  },
  {
    "text": "so that's simple way to create it but here we are embedding our credentials actually in our application not really",
    "start": "313080",
    "end": "318479"
  },
  {
    "text": "what you want to do maybe something for quick testing but in a real application you're probably going to push things out to like your app config so let's",
    "start": "318479",
    "end": "326580"
  },
  {
    "text": "just wipe all this out go back to just using our default",
    "start": "326580",
    "end": "331919"
  },
  {
    "text": "Constructor so now in our app config in the app settings we can go and add",
    "start": "331919",
    "end": "338580"
  },
  {
    "text": "this access and I forgot how to spell access it's",
    "start": "338580",
    "end": "344820"
  },
  {
    "text": "the fear of talking in front of people I'll remap the keyboard for you that was very cruel so access key",
    "start": "344820",
    "end": "353120"
  },
  {
    "text": "maybe a secret key",
    "start": "355139",
    "end": "358820"
  },
  {
    "text": "and then we can also specify what is the default region we want to connect to",
    "start": "360479",
    "end": "365900"
  },
  {
    "text": "again we want to go to usbs2 and so now when the SDK actually goes and needs to sign the request it's going",
    "start": "367259",
    "end": "374280"
  },
  {
    "text": "to go find those credentials in our app config sign request and we're good",
    "start": "374280",
    "end": "379520"
  },
  {
    "text": "so we have a default region set there if I instantiate a new client here say for Amazon S3 but I want to use a different",
    "start": "380220",
    "end": "385979"
  },
  {
    "text": "region am I not constrained by that no except that's just the default so again in the Constructor I can go and just say",
    "start": "385979",
    "end": "391919"
  },
  {
    "text": "I want to use and we can go to the new Frankfurt region right",
    "start": "391919",
    "end": "396960"
  },
  {
    "text": "so even though we have it configured in our client or our weapon pig to use Usos too if that's just the default and you",
    "start": "396960",
    "end": "403500"
  },
  {
    "text": "can always override that in your actual code okay so we have no credentials in source code but we currently have them in the config now I've led a few Dev",
    "start": "403500",
    "end": "409740"
  },
  {
    "text": "teams in my time and I know that my developers are going to check that file into Source control not a good idea not",
    "start": "409740",
    "end": "414900"
  },
  {
    "text": "a good idea so what do we do to help that so what we did in uh version 2.1 of the SDK which came out last spring is",
    "start": "414900",
    "end": "421919"
  },
  {
    "text": "that we added the ability to use profiles now if you've used ab's toolkit for visual studio we have the AWS Explorer",
    "start": "421919",
    "end": "428280"
  },
  {
    "text": "and you can notice we have already a list of profiles in there and so we wanted to be able to just specify those",
    "start": "428280",
    "end": "433979"
  },
  {
    "text": "profiles in our code so here I have a few I can just go in my app config let's",
    "start": "433979",
    "end": "439800"
  },
  {
    "text": "close this down and give us some more room change this to AWS profile name",
    "start": "439800",
    "end": "446960"
  },
  {
    "text": "change this to Norm J and so now the application when it's sending requests it'll say well there's",
    "start": "447060",
    "end": "452759"
  },
  {
    "text": "no credentials but you have a profile so let's go and look to find the credentials for that profile and sign",
    "start": "452759",
    "end": "459660"
  },
  {
    "text": "the request with that and you might have noticed when I looked at my my accounts I have one called",
    "start": "459660",
    "end": "465840"
  },
  {
    "text": "default and default's a special one where if I actually don't specify anything in here",
    "start": "465840",
    "end": "471360"
  },
  {
    "text": "when the SDK goes and needs to sign the request it says there's no credentials there's no profile but you do have a",
    "start": "471360",
    "end": "478139"
  },
  {
    "text": "profile register on your machine that's called default we'll just use those credentials and so that's a way to get",
    "start": "478139",
    "end": "483419"
  },
  {
    "text": "your application to get its credentials just based on the environment that it's running in and not have to make any changes to your actual application",
    "start": "483419",
    "end": "490860"
  },
  {
    "text": "so no where those credentials actually being held so for the SDK we support two different",
    "start": "490860",
    "end": "497039"
  },
  {
    "text": "credentials store the first one we support is you can see here the toolkit is the SDK store which is shared between",
    "start": "497039",
    "end": "504240"
  },
  {
    "text": "the Donna SDK the ABS toolkit for visual studio and the Powershell Commandments",
    "start": "504240",
    "end": "510360"
  },
  {
    "text": "and this is storing your credentials under your local app data folder and the nice benefit of using this credential",
    "start": "510360",
    "end": "516599"
  },
  {
    "text": "store is it's going to store it in their encrypted based off your current logged on Windows user profile so if those",
    "start": "516599",
    "end": "523080"
  },
  {
    "text": "files were ever gotten off your machine they would not be able to decrypt because they can only be decrypted based off that current logged on user",
    "start": "523080",
    "end": "529500"
  },
  {
    "text": "now the other way we support specifying credentials is using a credentials file",
    "start": "529500",
    "end": "535200"
  },
  {
    "text": "which I just changed what I was looking at",
    "start": "535200",
    "end": "541740"
  },
  {
    "text": "um and this file is shared amongst all the other AWS tools if you're in a shop",
    "start": "541740",
    "end": "547860"
  },
  {
    "text": "that's also using the python SDK or the Java SDK you could use this file and",
    "start": "547860",
    "end": "553200"
  },
  {
    "text": "it's an ini file and all of the AWS tools will use the same file now this is a clear text file",
    "start": "553200",
    "end": "560160"
  },
  {
    "text": "so you do need to be extra careful about how you have access permissions on this file",
    "start": "560160",
    "end": "565380"
  },
  {
    "text": "cool so what I'm hearing then hopefully the audience is hearing is that within the SDK there's a search mechanism",
    "start": "565380",
    "end": "570480"
  },
  {
    "text": "that's going to find the closest set of credentials to use so here's our workflow diagram to kind",
    "start": "570480",
    "end": "577560"
  },
  {
    "text": "of show how that works so the top code is showing the code that you're going to write how you're going to instantiate your client and maybe specify a profile",
    "start": "577560",
    "end": "583019"
  },
  {
    "text": "on your app config and when the SD is going to SDK is going to do is first check the SDK store is",
    "start": "583019",
    "end": "589320"
  },
  {
    "text": "there a profile in there if so great sign your request and continue if not let's fall back to that credentials file",
    "start": "589320",
    "end": "596040"
  },
  {
    "text": "the shared file again for the other AWS tools and if we find the profile there sign the request and continue",
    "start": "596040",
    "end": "603240"
  },
  {
    "text": "we also have a final fallback that we'll use which is to check to see are we running on ec2",
    "start": "603240",
    "end": "609180"
  },
  {
    "text": "if we're running on ec2 see if there was an IEM role an identity Nexus management",
    "start": "609180",
    "end": "614220"
  },
  {
    "text": "role that was attached to that ec2 instance when it was created now IM roles are things that you",
    "start": "614220",
    "end": "619920"
  },
  {
    "text": "entities you create inside the either the AWS console or through our toolkit and what you can do with that is once",
    "start": "619920",
    "end": "626100"
  },
  {
    "text": "you create it you can assign a policy and that policies which you can use to",
    "start": "626100",
    "end": "631200"
  },
  {
    "text": "Grant access or deny access to particular AWS resources or actions and so that's a great way to lock up your",
    "start": "631200",
    "end": "637200"
  },
  {
    "text": "your what your application can do on a particular ec2 instance another nice benefit also is IM is going to",
    "start": "637200",
    "end": "643260"
  },
  {
    "text": "automatically rotate your keys on that box so you get key rotation for free and the SDK will automatically pick that up",
    "start": "643260",
    "end": "649140"
  },
  {
    "text": "and you make no changes in your code okay so that's quite a lot of information on credentials let's try and summarize it in terms of development and",
    "start": "649140",
    "end": "656040"
  },
  {
    "text": "deployment so for local development make use of profiles you don't need the toolkit to set these up you can actually",
    "start": "656040",
    "end": "661740"
  },
  {
    "text": "call SDK code to create profiles or you can use Powershell commandlets um",
    "start": "661740",
    "end": "667320"
  },
  {
    "text": "make use of the profile name in your code or use default if you just want to use a single set",
    "start": "667320",
    "end": "672839"
  },
  {
    "text": "um if you do need to share them then consider the ini format but be you know just remember that you need to set",
    "start": "672839",
    "end": "678300"
  },
  {
    "text": "appropriate access controls on those files they are raw and never put credentials in source code",
    "start": "678300",
    "end": "684779"
  },
  {
    "text": "again or your app config just use a profile name for deployment use an identity and access management role so you can",
    "start": "684779",
    "end": "691079"
  },
  {
    "text": "specify this when you launch your ec2 instances whether it be through ec2 through Beanstalk or through cloud",
    "start": "691079",
    "end": "696360"
  },
  {
    "text": "formation and you know taking advantage of the automatic rotation of credentials",
    "start": "696360",
    "end": "701640"
  },
  {
    "text": "no fit no fear if you do leave the profile name if you're using a custom profile name in your code or your app",
    "start": "701640",
    "end": "706680"
  },
  {
    "text": "config that's fine the SDK will just skip that and steps right over it and go for the the credentials associated with",
    "start": "706680",
    "end": "712560"
  },
  {
    "text": "the role so we're not going to talk about credentials anymore all right we're going to move on we're going to do the",
    "start": "712560",
    "end": "717720"
  },
  {
    "text": "Code Monkey Shuffle so the next thing I want to talk about",
    "start": "717720",
    "end": "723360"
  },
  {
    "text": "is using Amazon S3 and download together with a new feature we call it S3 link we",
    "start": "723360",
    "end": "729779"
  },
  {
    "text": "have found that these are our most popular services that people use from this year's point of view so we really wanted and it's common to use those",
    "start": "729779",
    "end": "735959"
  },
  {
    "text": "together and so that's what this feature helps people do there's a quick refresher to make sure we're all on the same page S3 is the",
    "start": "735959",
    "end": "743220"
  },
  {
    "text": "object store put anything images videos files whatever you put them inside of a bucket the",
    "start": "743220",
    "end": "749160"
  },
  {
    "text": "buckets are globally unique so only one person in the world gets to have the food bucket and once you put that item",
    "start": "749160",
    "end": "754680"
  },
  {
    "text": "object in there you give a user-defined key that you will later say when I want that back use that key to get the object",
    "start": "754680",
    "end": "760260"
  },
  {
    "text": "back Dino DB that's our low latency nosql database you put your data in a schema",
    "start": "760260",
    "end": "767459"
  },
  {
    "text": "list table but you do need to Define what is the primary key it's broken up into two parts first is",
    "start": "767459",
    "end": "773880"
  },
  {
    "text": "the hash key and that's what Dynam uses to partition your data across the system",
    "start": "773880",
    "end": "779579"
  },
  {
    "text": "so you want to choose something where your data is fairly evenly evenly distributed so you don't get any hot spots in your data and optionally you",
    "start": "779579",
    "end": "786600"
  },
  {
    "text": "could add a range key and the range key gives you the ability to do queries within the scope of a hash key if you",
    "start": "786600",
    "end": "793139"
  },
  {
    "text": "need more advanced querying there is the ability to add local and Global indexes on your tables",
    "start": "793139",
    "end": "799500"
  },
  {
    "text": "when you create your tables you have to specify what throughput I need from dynodeb and this is where Dynam is going",
    "start": "799500",
    "end": "805320"
  },
  {
    "text": "to essentially grant you that access and so when you're in your early development stage you can turn this knob just",
    "start": "805320",
    "end": "811680"
  },
  {
    "text": "throughput at your low levels maybe only need one or two right reads and writes per second but now once your application",
    "start": "811680",
    "end": "817860"
  },
  {
    "text": "becomes production you start getting interest you can just go into download B and change that knob say I need more",
    "start": "817860",
    "end": "823380"
  },
  {
    "text": "throughput and your data is still always available as it's going to re-partition this your data across the new",
    "start": "823380",
    "end": "829260"
  },
  {
    "text": "throughput so for our application what we've developed is just a simple image storing",
    "start": "829260",
    "end": "835860"
  },
  {
    "text": "system we want to store image metadata in downrdb like the user ID",
    "start": "835860",
    "end": "840980"
  },
  {
    "text": "caption when it was actually uploaded and store the actual image inside Amazon",
    "start": "840980",
    "end": "846959"
  },
  {
    "text": "S3 so before we get started though Steve I need a table can you give me a table I",
    "start": "846959",
    "end": "852660"
  },
  {
    "text": "give you a table so we can obviously use the SDK to create a table we can use the toolkit but we thought it'd be fun to actually use the dynamodb schema Builder",
    "start": "852660",
    "end": "858959"
  },
  {
    "text": "commandlets from Powershell um to do this so what I'm going to do is switch away to the Powershell ISE",
    "start": "858959",
    "end": "865800"
  },
  {
    "text": "and the first thing I'm going to need is a schema object now these schema Builder commands are designed so that you pipe a",
    "start": "865800",
    "end": "872459"
  },
  {
    "text": "schema through a sequence of commandlets to build up the final key of Ash key and range key schema an indexing schema that",
    "start": "872459",
    "end": "879360"
  },
  {
    "text": "you want and then you pipe that into a table creation Commander so we're going to actually take it step by step today",
    "start": "879360",
    "end": "884940"
  },
  {
    "text": "so I'm going to create a new ddb table schema object now those of you wondering what ddb stands for the partial",
    "start": "884940",
    "end": "891779"
  },
  {
    "text": "commandlet So currently I believe around 800 commandlets and growing so to effectively namespace them we",
    "start": "891779",
    "end": "898620"
  },
  {
    "text": "apply a short prefix to each commandlet noun ddb is what we use for dynamodb obviously ec2 S3 something memorable so",
    "start": "898620",
    "end": "905399"
  },
  {
    "text": "now I have my schema object let's just take a quick look at that you can see that it has various Fields inside there",
    "start": "905399",
    "end": "911040"
  },
  {
    "text": "so we're going to simulate this photo table so the primary key that we're",
    "start": "911040",
    "end": "916380"
  },
  {
    "text": "going to use as a user ID the secondary or range key yeah range key is going to be the image ID so let's",
    "start": "916380",
    "end": "922920"
  },
  {
    "text": "build that schema so the first thing I'm going to do is add a key schema",
    "start": "922920",
    "end": "928260"
  },
  {
    "text": "that's not going to work you've remapped the keyboard on me I like to mess with you",
    "start": "928260",
    "end": "933360"
  },
  {
    "text": "the key schema okay so this time around I'm going to actually pass in the schema even though they're designed to be pipelined just so we can see what's",
    "start": "933360",
    "end": "939000"
  },
  {
    "text": "going on dollar s and I'm going to add a key name and it's going to be user ID",
    "start": "939000",
    "end": "945120"
  },
  {
    "text": "and then I'm going to add a key type or actually just use key data type to start with so this is the type of the key so",
    "start": "945120",
    "end": "950820"
  },
  {
    "text": "string s number n Etc and then the key type and we're going to",
    "start": "950820",
    "end": "956339"
  },
  {
    "text": "specify this is the hash key so when we get the schema object back you can see that the partial commands have filled",
    "start": "956339",
    "end": "961500"
  },
  {
    "text": "out the attributing and the key index the key information so now we need another key",
    "start": "961500",
    "end": "967019"
  },
  {
    "text": "so I'm going to invoke that I'm actually going to invert that again and this time I'm going to pipe the",
    "start": "967019",
    "end": "972540"
  },
  {
    "text": "schema in I seem to have developed an echo and we're going to give the key name",
    "start": "972540",
    "end": "978540"
  },
  {
    "text": "this time is going to be image image ID and the key type is going to be",
    "start": "978540",
    "end": "984000"
  },
  {
    "text": "range and the key data type is again just going to be a string so you see we've got both keys set I could go on",
    "start": "984000",
    "end": "989579"
  },
  {
    "text": "and build indexing Etc but this is enough for what we need so now let's just pipe that straight into new ddb",
    "start": "989579",
    "end": "995279"
  },
  {
    "text": "table and we'll give it a table name and I know the code requires something called image metadata",
    "start": "995279",
    "end": "1001339"
  },
  {
    "text": "and for just for this demo I'm just going to use a simple provisioning of one and one for reading writes",
    "start": "1001339",
    "end": "1008420"
  },
  {
    "text": "so that will run pregnant pause what would you do Steve",
    "start": "1008420",
    "end": "1013779"
  },
  {
    "text": "have you taken my demo out again pretty sneaky",
    "start": "1017300",
    "end": "1022459"
  },
  {
    "text": "all right we're actually connected to wireless so we're probably uh",
    "start": "1022459",
    "end": "1027860"
  },
  {
    "text": "being slow okay well while that's finishing up let's switch away to the code and then",
    "start": "1027860",
    "end": "1033438"
  },
  {
    "text": "we should get our table up and running this is the demonstration of Gremlins",
    "start": "1033439",
    "end": "1038600"
  },
  {
    "text": "isn't it okay here we go then here's the code okay so",
    "start": "1038600",
    "end": "1044660"
  },
  {
    "text": "application we're going to use donor to be as we said and Steve mentioned earlier that we have some high level abstractions for that for across the SDK",
    "start": "1044660",
    "end": "1051980"
  },
  {
    "text": "and for Dyna rdb we actually support two different high-level abstractions one we call is the document model where you",
    "start": "1051980",
    "end": "1058700"
  },
  {
    "text": "create these document objects that kind of like.net dictionaries you set values on there and you use a table object to",
    "start": "1058700",
    "end": "1064760"
  },
  {
    "text": "persist them the other one we call is the object persistence API and that's where you can",
    "start": "1064760",
    "end": "1070400"
  },
  {
    "text": "take dot net classes with annotations and using a context object be able to",
    "start": "1070400",
    "end": "1075440"
  },
  {
    "text": "persist the instances of that class indented to be and be able to get instances of those classes back out",
    "start": "1075440",
    "end": "1080960"
  },
  {
    "text": "using that context object so you can see here I got the image metadata class it's got an annotation to",
    "start": "1080960",
    "end": "1086299"
  },
  {
    "text": "say which table we want to store it in and we also have this annotations to say which properties map to the range and",
    "start": "1086299",
    "end": "1093679"
  },
  {
    "text": "hash key hey Norm these names match what we use for the table creation can we just take these out now we can actually that was",
    "start": "1093679",
    "end": "1100220"
  },
  {
    "text": "one of the features that we've added this year is if the names in your c-sharp code match the same names you're",
    "start": "1100220",
    "end": "1106280"
  },
  {
    "text": "using in downloadb we'll just infer that relationship and so that's where you can just use just plain Poco objects c-sharp",
    "start": "1106280",
    "end": "1112820"
  },
  {
    "text": "classes and not have to add any special attributes if your name's differ then you might need to use the attributes there is also",
    "start": "1112820",
    "end": "1119240"
  },
  {
    "text": "another alternative in the app config file you can actually add a mapping in there we're not going to go into that",
    "start": "1119240",
    "end": "1124820"
  },
  {
    "text": "right now but it's out there and there's some documentation website and how to use that okay so here's our simple Poco",
    "start": "1124820",
    "end": "1130280"
  },
  {
    "text": "class and pretty standard stuff except at the bottom you say an image thing called it with type S3 link",
    "start": "1130280",
    "end": "1136760"
  },
  {
    "text": "so that's the new feature okay so that new new type is what we use to store the",
    "start": "1136760",
    "end": "1142160"
  },
  {
    "text": "information and download about where things are actually stored inside S3 so did we get our table Steve I'm hoping",
    "start": "1142160",
    "end": "1149179"
  },
  {
    "text": "so no we did not name resolution failure",
    "start": "1149179",
    "end": "1155320"
  },
  {
    "text": "uh interesting hmm let me just run that again just see if",
    "start": "1157940",
    "end": "1163820"
  },
  {
    "text": "it comes back I don't think it will this is going to be a short demo",
    "start": "1163820",
    "end": "1169640"
  },
  {
    "text": "how about we're trying to reconnect and disconnect and reconnect from the Wi-Fi",
    "start": "1169640",
    "end": "1175780"
  },
  {
    "text": "well now you have to type it in that's true I do",
    "start": "1179480",
    "end": "1185200"
  },
  {
    "text": "it makes the demo so much more exciting when you get these issues you know what",
    "start": "1195140",
    "end": "1201100"
  },
  {
    "text": "I've never done this in a live demo but Yankton ethernet cable at the back of a machine",
    "start": "1201440",
    "end": "1206620"
  },
  {
    "text": "yeah let me just get rid of that let's reconnect",
    "start": "1208520",
    "end": "1213919"
  },
  {
    "text": "see if we can do this",
    "start": "1213919",
    "end": "1216940"
  },
  {
    "text": "okay hopefully we now have a network",
    "start": "1221360",
    "end": "1226000"
  },
  {
    "text": "now your keyboards died on me what kind of machine is this the same as yours",
    "start": "1227600",
    "end": "1233320"
  },
  {
    "text": "run okay",
    "start": "1245000",
    "end": "1251140"
  },
  {
    "text": "this is creating Okay so dynamodb is now provisioning the table",
    "start": "1251140",
    "end": "1256880"
  },
  {
    "text": "rapidly as I speak um I didn't capture the table object that was returned but if I wanted to check it I could just use get ddb table",
    "start": "1256880",
    "end": "1263059"
  },
  {
    "text": "with the table name it would give me all the current information but I'm pretty sure that table is ready to go yeah so",
    "start": "1263059",
    "end": "1268640"
  },
  {
    "text": "let's look back to our code here okay so it's occurred to me that apart from that rather Powershell we actually run any code so",
    "start": "1268640",
    "end": "1275600"
  },
  {
    "text": "shall we step through this yeah let's do it all right so F10 so here we're inside main so essentially",
    "start": "1275600",
    "end": "1282500"
  },
  {
    "text": "again S3 client this should look fairly standard by now but dynamodb context that does not look like a client to me no that is the the root object when you",
    "start": "1282500",
    "end": "1289640"
  },
  {
    "text": "use the object persistence API this is the root object that you use to save and",
    "start": "1289640",
    "end": "1295220"
  },
  {
    "text": "get those instances of our image metadata class back up under the covers it's going to go create your identity",
    "start": "1295220",
    "end": "1300380"
  },
  {
    "text": "client library or client service client uh we could also if we had one already we could pass that in to reuse the",
    "start": "1300380",
    "end": "1306860"
  },
  {
    "text": "client it's important to know whenever you use the context object though that when you're going to first make a call",
    "start": "1306860",
    "end": "1312679"
  },
  {
    "text": "to a new table it's going to do a describe table on that on the table Diner to be which is not an operation",
    "start": "1312679",
    "end": "1318020"
  },
  {
    "text": "you want to do for every single request so like in your web web server every question you don't want to describe",
    "start": "1318020",
    "end": "1323240"
  },
  {
    "text": "table every time so this is something that you want to cash around it's a thread safe object something just to store somewhere easily accessible okay",
    "start": "1323240",
    "end": "1330260"
  },
  {
    "text": "so then we're going to create a test bucket so Norm said earlier but it's a unique name so this is a common pattern that we",
    "start": "1330260",
    "end": "1336260"
  },
  {
    "text": "follow in our testing we've had a bucket and we append the current date time in text to the end for uniqueness so very",
    "start": "1336260",
    "end": "1342020"
  },
  {
    "text": "simple so then we're going to instantiate that plain LC sharp object that we saw the image metadata special bit being the S3",
    "start": "1342020",
    "end": "1348440"
  },
  {
    "text": "link create here Norms you want to walk us through that yeah so we're going to call that create method and that's what we're going to pass in we can say what bucket we want to store the image in",
    "start": "1348440",
    "end": "1354799"
  },
  {
    "text": "what is the object key to start with and what region is that bucket in you could actually have your bucket be in a",
    "start": "1354799",
    "end": "1361100"
  },
  {
    "text": "different region than your donor to be tableware okay and then we call Save you can actually evoke save without the",
    "start": "1361100",
    "end": "1368659"
  },
  {
    "text": "type do you know type in there it'll infer it but we'll keep the column keep the code simple so right now that's just",
    "start": "1368659",
    "end": "1375559"
  },
  {
    "text": "saved the image meditated dynamodb the actual image is not yet in S3 so let's go and take a look at dynamodb",
    "start": "1375559",
    "end": "1382100"
  },
  {
    "text": "at our table it caused us so much issue and there we go there's the entry that we just wrote I'll just blow this up for",
    "start": "1382100",
    "end": "1387620"
  },
  {
    "text": "you and as you can see that it's just a piece of Json effectively right so we serialize that S3 link into a Json",
    "start": "1387620",
    "end": "1394700"
  },
  {
    "text": "object stick that in S3 or downloadb it's also important to know that if you're in a sharp that's also using",
    "start": "1394700",
    "end": "1400220"
  },
  {
    "text": "dartner in Java the Java SDK has this same feature and we use the same format so you could use net to upload and maybe",
    "start": "1400220",
    "end": "1408080"
  },
  {
    "text": "Java to download that object app we do have that interoperability we go and take a look at the buckets and",
    "start": "1408080",
    "end": "1413120"
  },
  {
    "text": "you can see here that Norm has a habit of grabbing all the bucket names there we go we have an empty bucket",
    "start": "1413120",
    "end": "1419000"
  },
  {
    "text": "right now we have not yet saved the image so let's go back to the code and to actually upload the file we call",
    "start": "1419000",
    "end": "1424039"
  },
  {
    "text": "through the S3 link object we could also use the S3 object S3 client but let's use the S3 link",
    "start": "1424039",
    "end": "1430820"
  },
  {
    "text": "and there we go so if we go back to the bucket now go back to the bucket and refresh",
    "start": "1430820",
    "end": "1435860"
  },
  {
    "text": "there's the file okay so to get things out it's just as easy so we use load on",
    "start": "1435860",
    "end": "1441559"
  },
  {
    "text": "the context object this time we do have to pass in the type as the generic and that's given us back our console",
    "start": "1441559",
    "end": "1447320"
  },
  {
    "text": "caption and then it looks like to get the image back we're going to use the pre-signed URL right with that S3 link we could either upload new objects we",
    "start": "1447320",
    "end": "1454039"
  },
  {
    "text": "could download the objects and that's a great feature of S3 is we can generate pre-signed URLs and this is really",
    "start": "1454039",
    "end": "1459140"
  },
  {
    "text": "useful for when you're in a situation where you want to Grant access to somebody or maybe to some other process",
    "start": "1459140",
    "end": "1464780"
  },
  {
    "text": "temporary access to an object in this case we're going to Grant access to this object for an hour yep one",
    "start": "1464780",
    "end": "1472340"
  },
  {
    "text": "there's the pre-sign URL it's just mangled and I'm just going to run the rest of the code to actually open the URL okay that's the Shameless plug of my",
    "start": "1472340",
    "end": "1478820"
  },
  {
    "text": "daughter who's convinced she's the number one girl out there all right back to slides you can see S3",
    "start": "1478820",
    "end": "1485299"
  },
  {
    "text": "your link is a great way to easily tie these very popular services from the sdks point of view",
    "start": "1485299",
    "end": "1490340"
  },
  {
    "text": "onwards so for the next thing we want to talk about using Amazon elastic cache to",
    "start": "1490340",
    "end": "1496580"
  },
  {
    "text": "create distributed cache clusters and be able to use these cash clusters to help improve performance you might have in",
    "start": "1496580",
    "end": "1502520"
  },
  {
    "text": "any sort of bottlenecks in your application the reason Steve and I are talking about this is because just recently I believe",
    "start": "1502520",
    "end": "1508820"
  },
  {
    "text": "it was just two weeks ago we launched a new library on nougat to be able to",
    "start": "1508820",
    "end": "1514940"
  },
  {
    "text": "um extend the popular memcache D librarian to work with elasticash's",
    "start": "1514940",
    "end": "1520520"
  },
  {
    "text": "unique ability to dynamically add and remove nodes to our cache cluster and we",
    "start": "1520520",
    "end": "1525919"
  },
  {
    "text": "won't have to change our code whenever we get new nodes or remove nodes from it",
    "start": "1525919",
    "end": "1531340"
  },
  {
    "text": "so I know I've been in this situation in past jobs and I'm sure a lot of us have been in this case where we have a bunch",
    "start": "1531500",
    "end": "1537200"
  },
  {
    "text": "of web app servers all pounding down on a single database server and eventually that database server has a hard time",
    "start": "1537200",
    "end": "1542600"
  },
  {
    "text": "keeping up so the first thing we always think about is well let's just add more caching so we don't pound on our database server so",
    "start": "1542600",
    "end": "1548779"
  },
  {
    "text": "much the tricky thing though is if you put caching on your app server one app server might cache the information but",
    "start": "1548779",
    "end": "1555260"
  },
  {
    "text": "another one is going to change it and then how do you get everyone in sync so common way to do next is you use a",
    "start": "1555260",
    "end": "1561080"
  },
  {
    "text": "distributed cache system like memcache d and Amazon elastic cache is an easy way",
    "start": "1561080",
    "end": "1566539"
  },
  {
    "text": "to create these clusters in a managed way so we don't have to specifically install software or get these instances",
    "start": "1566539",
    "end": "1571880"
  },
  {
    "text": "all connected together elastic cache handles that for us and so we can change our application to say first let's check",
    "start": "1571880",
    "end": "1578600"
  },
  {
    "text": "our fast cache is the data in there if it's not then we'll fall back to our database if it is it's got it let's",
    "start": "1578600",
    "end": "1585679"
  },
  {
    "text": "return it back to our user when we go file back to our database we'll then put it into our cache cluster so the next",
    "start": "1585679",
    "end": "1591799"
  },
  {
    "text": "request comes in on any one of the web app servers be able is able to access that data in a much faster way",
    "start": "1591799",
    "end": "1598159"
  },
  {
    "text": "all right so how do we get started Steve well we get started by first creating an elastic cache cluster so we haven't",
    "start": "1598159",
    "end": "1603799"
  },
  {
    "text": "talked about what we're going to demo though you know that's true I skipped that part very sorry so to demonstrate this what we've done",
    "start": "1603799",
    "end": "1610159"
  },
  {
    "text": "in our application for our demos we've created an application that stores zip code information right",
    "start": "1610159",
    "end": "1616460"
  },
  {
    "text": "um I think we've already depleted being stuck so let's go see what we have so yeah I the reason I'd forgotten about",
    "start": "1616460",
    "end": "1622460"
  },
  {
    "text": "your application was it was so simple it's just hey I have great UI skills all right so anyway all we do is we enter a",
    "start": "1622460",
    "end": "1628880"
  },
  {
    "text": "zip code and Norm's code we'll run away get the location and return a map I mean that",
    "start": "1628880",
    "end": "1633919"
  },
  {
    "text": "wasn't that fast right he didn't actually return a lot on screen I'm sorry well let's look at the code and see what's going on",
    "start": "1633919",
    "end": "1640580"
  },
  {
    "text": "so for this application I just use standard.net Technologies I'm using a SQL Server database using Entity",
    "start": "1640580",
    "end": "1646279"
  },
  {
    "text": "framework and pulling out the the ZIP code information and returning that back",
    "start": "1646279",
    "end": "1651679"
  },
  {
    "text": "notice in my code here I'm using some Trace statements so I can measure the performance",
    "start": "1651679",
    "end": "1657260"
  },
  {
    "text": "one of our extension libraries that we have on a nougat is to be able to have all your Trace statements be written to",
    "start": "1657260",
    "end": "1662480"
  },
  {
    "text": "downerdb so it's easy to see that information outside of your environment let's go to see what their log table",
    "start": "1662480",
    "end": "1667520"
  },
  {
    "text": "showing us okay so here's logs open it up and and if you",
    "start": "1667520",
    "end": "1672799"
  },
  {
    "text": "can see that at the back let me blow it up we retrieved that zip code in",
    "start": "1672799",
    "end": "1678760"
  },
  {
    "text": "1124 milliseconds okay now this is the full confession here because it's just Steve and I hitting",
    "start": "1678760",
    "end": "1684140"
  },
  {
    "text": "one application so we need to simulate a performance bundling so what we did is we put our database out in Sydney and",
    "start": "1684140",
    "end": "1690320"
  },
  {
    "text": "our application is running over in Portland so a bit far-fetched I know but but still let's make it better all right",
    "start": "1690320",
    "end": "1699340"
  },
  {
    "text": "all right so first thing we need to do then is add a last cache cluster so I'm going to go up to the console now",
    "start": "1699380",
    "end": "1705140"
  },
  {
    "text": "because we had some Gremlins earlier on I'm actually going to run through the elasticash launch uh launch cash cluster",
    "start": "1705140",
    "end": "1710299"
  },
  {
    "text": "Wizard and we'll skip over that today here's the cash cluster that we actually created for the demo",
    "start": "1710299",
    "end": "1715940"
  },
  {
    "text": "was that you or me um call zip codes",
    "start": "1715940",
    "end": "1720340"
  },
  {
    "text": "um it has two nodes memcache D type and the information we actually need to",
    "start": "1721159",
    "end": "1728059"
  },
  {
    "text": "set up our code is this configuration endpoint here zip codes dot blah blah blah Etc so that's what we're going to",
    "start": "1728059",
    "end": "1734480"
  },
  {
    "text": "need in our code then all we need to do to our code is to add a new extension library that will",
    "start": "1734480",
    "end": "1740120"
  },
  {
    "text": "mentioned so if we go to the nuget here's all the AWS SD sdkaver.net extensions at the bottom you see this",
    "start": "1740120",
    "end": "1745760"
  },
  {
    "text": "new one here Amazon elastic cache cluster config so once we've added that to our code",
    "start": "1745760",
    "end": "1751400"
  },
  {
    "text": "let's jump into solution Explorer and if we look at the references here you can see there's the new package and",
    "start": "1751400",
    "end": "1757279"
  },
  {
    "text": "that automatically brings in a reference I'm going to take this microphone off in a minute automatically adds a reference",
    "start": "1757279",
    "end": "1764299"
  },
  {
    "text": "to the third-party engine caching Library okay so that's the first easy bit",
    "start": "1764299",
    "end": "1769880"
  },
  {
    "text": "so the second bit that we need to do is add information to web config about the new uh cluster client Library here you",
    "start": "1769880",
    "end": "1776779"
  },
  {
    "text": "can see the new section name plus the client mapping to our new nuget package so Norm do you want to walk us through",
    "start": "1776779",
    "end": "1781940"
  },
  {
    "text": "this sure so here's the we're going to set the the host name and the port that we got from the console and the other",
    "start": "1781940",
    "end": "1788720"
  },
  {
    "text": "thing we need to set is the actually we don't need to set this so we're just showing by default the interval polling",
    "start": "1788720",
    "end": "1794360"
  },
  {
    "text": "we do is every minute so what our client does is every minute it's going to Ping our cash cluster to see is there a",
    "start": "1794360",
    "end": "1801080"
  },
  {
    "text": "change in your configuration have you added new nodes that we need to take advantage of or has some nodes been removed so we need to stop actually",
    "start": "1801080",
    "end": "1807200"
  },
  {
    "text": "using those once we find out the new information we pass that up to inium and indium is now going to adapt to the new",
    "start": "1807200",
    "end": "1813260"
  },
  {
    "text": "nodes in its cluster okay so in the code",
    "start": "1813260",
    "end": "1818840"
  },
  {
    "text": "hotness really I just wanted to see if I can embarrass you okay so here I can see we've had",
    "start": "1818840",
    "end": "1824720"
  },
  {
    "text": "memcache D client and a new elastic cache cluster config what are those right so if a config object is what we",
    "start": "1824720",
    "end": "1830059"
  },
  {
    "text": "added um that's going to pull those values from the app config if we didn't set in the app config we can actually manually",
    "start": "1830059",
    "end": "1835580"
  },
  {
    "text": "set it on the properties in the config object and we pass that config object to nium's memcache client and so from after",
    "start": "1835580",
    "end": "1842840"
  },
  {
    "text": "that you're going to be working just as if you're normally using idiom nothing just special about us we're just being",
    "start": "1842840",
    "end": "1848419"
  },
  {
    "text": "taken care of by that config object okay so here's the new get for the ZIP code so you can see that",
    "start": "1848419",
    "end": "1854059"
  },
  {
    "text": "again well you said the daytime will start so we can get check performance you'll see here we're calling on memcache client to",
    "start": "1854059",
    "end": "1860539"
  },
  {
    "text": "get the ZIP code if that returns something great we're done we're out if not go to our regular",
    "start": "1860539",
    "end": "1867820"
  },
  {
    "text": "database server get the ZIP code data from there then store it in the memcache D Client First Cash",
    "start": "1867820",
    "end": "1874700"
  },
  {
    "text": "right trace and then off we go so should we try it let's do it all right so let's go in the toolkit to the new the",
    "start": "1874700",
    "end": "1880520"
  },
  {
    "text": "deployed hotness um here we go restock environment",
    "start": "1880520",
    "end": "1886880"
  },
  {
    "text": "so we click the link and put in the same zip the ZIP code",
    "start": "1886880",
    "end": "1893200"
  },
  {
    "text": "yeah that didn't seem much faster to me well let's check the check the log again let's see what's going on",
    "start": "1893720",
    "end": "1901000"
  },
  {
    "text": "go back to the logs scan the table ah you can see now we have two entries one to indicate that we had a cash mess",
    "start": "1901460",
    "end": "1907640"
  },
  {
    "text": "so we've stored into the cache now and then we retrieved it in 1156 milliseconds",
    "start": "1907640",
    "end": "1913220"
  },
  {
    "text": "not very fast but now it's in the cache so now let's try again and see what happens okay",
    "start": "1913220",
    "end": "1919760"
  },
  {
    "text": "ah okay zip codes the truth is out here we",
    "start": "1919760",
    "end": "1926840"
  },
  {
    "text": "go 15 milliseconds right now who wants to tell their boss that I made that performance benefiting cool just a few",
    "start": "1926840",
    "end": "1932480"
  },
  {
    "text": "changes in our code all right so here you can easily see by using memcachd and Amazon elastic cache",
    "start": "1932480",
    "end": "1939140"
  },
  {
    "text": "we can easily fix and maybe performance bottlenecks to have an application okay I think it's time to do the Code",
    "start": "1939140",
    "end": "1945500"
  },
  {
    "text": "Monkey Shuffle again okay all right so earlier on I said that we were not going to talk about credentials",
    "start": "1945500",
    "end": "1951140"
  },
  {
    "text": "anymore that wasn't strictly true so I apologize um we considered local development we",
    "start": "1951140",
    "end": "1957260"
  },
  {
    "text": "considered deployment but we didn't consider mobile applications so deploying out to an app store that we",
    "start": "1957260",
    "end": "1963500"
  },
  {
    "text": "have no control over and the ultimate mobile devices that they go on to obviously we don't want credentials on those devices and an identity access",
    "start": "1963500",
    "end": "1969919"
  },
  {
    "text": "management role probably isn't going to be what we want what we need is for the clients on there for in our code on",
    "start": "1969919",
    "end": "1975140"
  },
  {
    "text": "those devices to retrieve credentials as they run so earlier this year Amazon launched",
    "start": "1975140",
    "end": "1980179"
  },
  {
    "text": "Amazon Cognito a user identity and data synchronization service what we're going",
    "start": "1980179",
    "end": "1985220"
  },
  {
    "text": "to do inside our code is use the user identity part of that to show how we can easily add the idea of of getting",
    "start": "1985220",
    "end": "1991700"
  },
  {
    "text": "credentials on the fly on a mobile device so Norm how easy was it to do well",
    "start": "1991700",
    "end": "1997519"
  },
  {
    "text": "very easy Steve I'm glad you said that uh",
    "start": "1997519",
    "end": "2002740"
  },
  {
    "text": "so but we do in uh actually you're not going to show the outfit let's show the app first",
    "start": "2002740",
    "end": "2007840"
  },
  {
    "text": "because resolution craziness apparently our projector does not like the resolution",
    "start": "2007840",
    "end": "2013600"
  },
  {
    "text": "that Windows store apps require so excuse us while it looks very squarish",
    "start": "2013600",
    "end": "2019539"
  },
  {
    "text": "for a few minutes while we talk about this",
    "start": "2019539",
    "end": "2023580"
  },
  {
    "text": "so let's go ahead and launch that your usual UI skills they're awesome man",
    "start": "2032860",
    "end": "2040000"
  },
  {
    "text": "that's an improvement see yes so here's our photo viewer application these images are actually stored in S3",
    "start": "2040000",
    "end": "2046419"
  },
  {
    "text": "but the user never logged on and this is where we wanted to support the ability for people with to have never access be able",
    "start": "2046419",
    "end": "2053800"
  },
  {
    "text": "to at least see that what's actually in there now once we actually want to change something like if I want to upload an image then we want to",
    "start": "2053800",
    "end": "2059858"
  },
  {
    "text": "challenge the user you're going to change something we got to authenticate you who are you so I'll go ahead and log on to Facebook",
    "start": "2059859",
    "end": "2068098"
  },
  {
    "text": "and so now I'm going to be able to upload new images over our Wi-Fi there we go",
    "start": "2074080",
    "end": "2081158"
  },
  {
    "text": "so there you can see that's kind of that pattern where you want users when you write an episode with zero friction of",
    "start": "2081159",
    "end": "2086200"
  },
  {
    "text": "at least coming and see the data in your application and then once you want them to contribute to the community actually",
    "start": "2086200",
    "end": "2091300"
  },
  {
    "text": "log on to something let's shut this down and switch down our",
    "start": "2091300",
    "end": "2096700"
  },
  {
    "text": "resolution to something that's not so ugly out there",
    "start": "2096700",
    "end": "2101160"
  },
  {
    "text": "be good yeah we're good okay so to get this to work what we used is",
    "start": "2104859",
    "end": "2111820"
  },
  {
    "text": "the Cognito credentials provider that's just kind of his class right here it",
    "start": "2111820",
    "end": "2117339"
  },
  {
    "text": "comes from the Amazon Cognito identity namespace",
    "start": "2117339",
    "end": "2123460"
  },
  {
    "text": "and let's walk through what you need to specify to create this object first we need to specify what is the account",
    "start": "2123460",
    "end": "2129460"
  },
  {
    "text": "number that you're we're accessing and the second one is this interesting looking string it's called the identity",
    "start": "2129460",
    "end": "2135940"
  },
  {
    "text": "pool ID which is something you create inside Cognito so let's go over the console and take a look at that",
    "start": "2135940",
    "end": "2142859"
  },
  {
    "text": "so Cognito is actually only in Us East 1 and EU",
    "start": "2144099",
    "end": "2149619"
  },
  {
    "text": "the Dublin region but it's important to know that when you're using the credentials that are vended from those",
    "start": "2149619",
    "end": "2154900"
  },
  {
    "text": "Services those credentials are valid across all of the regions so for our example here",
    "start": "2154900",
    "end": "2160660"
  },
  {
    "text": "I'm connecting to Cognito for us East one but when I connect create my S3 I'm",
    "start": "2160660",
    "end": "2166060"
  },
  {
    "text": "actually using Us West 2. switch over there",
    "start": "2166060",
    "end": "2171520"
  },
  {
    "text": "already created my identity pool we'll take a look at that company is going to give you a good dashboard information about how many",
    "start": "2171520",
    "end": "2177460"
  },
  {
    "text": "unauthenticated users that come in and it also tells you each of your authenticated providers how many people logged on there",
    "start": "2177460",
    "end": "2184680"
  },
  {
    "text": "going so we'll take a look at the details of that there we go so there's the identity pull ID that's",
    "start": "2187180",
    "end": "2193420"
  },
  {
    "text": "the part that I put in my code and then after that we specify what are the identity providers that we want to",
    "start": "2193420",
    "end": "2199420"
  },
  {
    "text": "support we support Amazon Facebook Google also any open ID compliant",
    "start": "2199420",
    "end": "2205119"
  },
  {
    "text": "providers as well as you can create your own developer authenticated identity providers",
    "start": "2205119",
    "end": "2210520"
  },
  {
    "text": "we're using Facebook for our application today you can actually use any combination of providers that you want",
    "start": "2210520",
    "end": "2216460"
  },
  {
    "text": "to use and the last thing I want to show here is this checkbox to say I want to enable",
    "start": "2216460",
    "end": "2221800"
  },
  {
    "text": "access to unauthentic identities and that's how we're able to get people to come into our application and see the images in S3 without actually logging on",
    "start": "2221800",
    "end": "2230519"
  },
  {
    "text": "so the last two parameters we got going on here are are these are identity and",
    "start": "2232000",
    "end": "2237220"
  },
  {
    "text": "access management roles these are the roles that we're going to assume when we do things the first one here is our",
    "start": "2237220",
    "end": "2243520"
  },
  {
    "text": "unauthenticated role let's take a look at that in our toolkit here you can see unauthenticated role",
    "start": "2243520",
    "end": "2252099"
  },
  {
    "text": "what this role is going to Grant the user is the ability to first is to add",
    "start": "2252099",
    "end": "2257440"
  },
  {
    "text": "access for the mobile analytics and after that to be able to get objects from S3 and list the objects for S3",
    "start": "2257440",
    "end": "2263800"
  },
  {
    "text": "the authenticated role has those same permissions but we've",
    "start": "2263800",
    "end": "2268839"
  },
  {
    "text": "added the ability to set to delete objects and put new objects inside S3",
    "start": "2268839",
    "end": "2275020"
  },
  {
    "text": "no I'm fitting a malicious streak coming on what if I got hold of your code and I switched those two roles around do I",
    "start": "2275020",
    "end": "2281680"
  },
  {
    "text": "suddenly get the ability to operate in an authenticated manner",
    "start": "2281680",
    "end": "2286780"
  },
  {
    "text": "so yeah if you tried switching these two around you would get four or three forbidden",
    "start": "2286780",
    "end": "2292060"
  },
  {
    "text": "access and the reason how that works is if we go back to our console we switch over to IM",
    "start": "2292060",
    "end": "2299560"
  },
  {
    "text": "get those rolls here's our authenticated row and down below this is this trust",
    "start": "2299560",
    "end": "2305859"
  },
  {
    "text": "relationship this is what Cognito set up for us when we created our identity pool and it has these extra conditions",
    "start": "2305859",
    "end": "2312820"
  },
  {
    "text": "right here that's saying that in order to assume this role you have to be authenticated from Cognito so it's just",
    "start": "2312820",
    "end": "2320920"
  },
  {
    "text": "trying to switch it to using unauthenticated view would be giving your access denied error Suite",
    "start": "2320920",
    "end": "2327540"
  },
  {
    "text": "so now that we have our community credentials provider we pass that to S3 and then from there we can use S3 as we",
    "start": "2328599",
    "end": "2334420"
  },
  {
    "text": "normally have been doing now to show how we switch users to unauthenticated to authenticate it let's",
    "start": "2334420",
    "end": "2340359"
  },
  {
    "text": "look at the uh upload operation and I have this utility",
    "start": "2340359",
    "end": "2345460"
  },
  {
    "text": "method to make sure that I have logged on if I look at that",
    "start": "2345460",
    "end": "2350920"
  },
  {
    "text": "I'm going to go check that credentials provider are there any current logon providers",
    "start": "2350920",
    "end": "2356020"
  },
  {
    "text": "if so then the current user is already authenticated so go ahead and return if there's not let's run some Facebook",
    "start": "2356020",
    "end": "2362859"
  },
  {
    "text": "code to get our oauth token from Facebook and pass that on to our credentials provider which is going to",
    "start": "2362859",
    "end": "2368560"
  },
  {
    "text": "go work with Cognito to switch from using your unauthenticated role to start assuming the authenticated role for",
    "start": "2368560",
    "end": "2375220"
  },
  {
    "text": "making our operations and then we're going to be having access to that delete and put operations",
    "start": "2375220",
    "end": "2381240"
  },
  {
    "text": "so you can see here's the delete code same situation and you can see after we've",
    "start": "2384240",
    "end": "2390040"
  },
  {
    "text": "insured we're just going to use extra client to do a delete operation as we normally do so there you can see an easy way to use",
    "start": "2390040",
    "end": "2396160"
  },
  {
    "text": "Cognito to support that very common use case of unauthenticated users for read access",
    "start": "2396160",
    "end": "2401260"
  },
  {
    "text": "and make them authenticate when they actually want to change information okay cool right back to the slides so",
    "start": "2401260",
    "end": "2408280"
  },
  {
    "text": "that brings us to the end of the demos that we wanted to show before we leave you we want to have a quick word about open source and Community Etc so some of",
    "start": "2408280",
    "end": "2415359"
  },
  {
    "text": "you may know some of you may not the SDK is open sourced it's held on GitHub in the AWS",
    "start": "2415359",
    "end": "2420599"
  },
  {
    "text": "sdk-net Repository what you may not know is that obviously at the Keynotes yesterday and and today",
    "start": "2420599",
    "end": "2427480"
  },
  {
    "text": "there are a tremendous number of new service launches so to keep up with that pace we rely on code generation for the",
    "start": "2427480",
    "end": "2433000"
  },
  {
    "text": "service client API layer of the SDK so we actually open source the client generator that we use today",
    "start": "2433000",
    "end": "2439359"
  },
  {
    "text": "um also a batch of unit tests in there that you can run and test the output of the of the generation in terms of mock",
    "start": "2439359",
    "end": "2446380"
  },
  {
    "text": "requests and responses based on the service models uh you can run these there's no charge they don't spin up any",
    "start": "2446380",
    "end": "2451960"
  },
  {
    "text": "AWS resources they don't actually make any calls at all there are some integration tests now these do call AWS",
    "start": "2451960",
    "end": "2458200"
  },
  {
    "text": "they do spin up resources so there is a monetary impact but they can also be used as a teaching exercise of how the",
    "start": "2458200",
    "end": "2463240"
  },
  {
    "text": "code works so feel free to take a look at those the team welcomes Paul requests and we also monitor the GitHub issues um",
    "start": "2463240",
    "end": "2469540"
  },
  {
    "text": "so if you only put concerns questions Etc put them there if you're not a GitHub user you can use the AWS forums",
    "start": "2469540",
    "end": "2475720"
  },
  {
    "text": "so there's a forum for.net development you can post SDK questions in there toolkit Powershell Etc but there is a",
    "start": "2475720",
    "end": "2481720"
  },
  {
    "text": "Powershell scripting Forum that stands alone the team also monitors the elastic Beanstalk and cloud formation forums if",
    "start": "2481720",
    "end": "2488500"
  },
  {
    "text": "you have questions about uh deployments from visual studio for example and of course there's always stack overflow",
    "start": "2488500",
    "end": "2495040"
  },
  {
    "text": "from us to you there's the.net development blog so we have some posts on there we've done recently there was a series on Amazon dynamodb recently we've",
    "start": "2495040",
    "end": "2502900"
  },
  {
    "text": "also blogged about the new elastic cache cluster client and earlier this year there was a post on importing VM images using both c-sharp and Powershell and of",
    "start": "2502900",
    "end": "2510760"
  },
  {
    "text": "course you can follow us on Twitter the AWS phonet handle so that brings us to the end thank you all for coming along I",
    "start": "2510760",
    "end": "2516160"
  },
  {
    "text": "hope you enjoyed it please remember to fill out your feedback um very important and I hope you all",
    "start": "2516160",
    "end": "2521740"
  },
  {
    "text": "have a great time at the party tonight thank you very much thank you",
    "start": "2521740",
    "end": "2528838"
  }
]