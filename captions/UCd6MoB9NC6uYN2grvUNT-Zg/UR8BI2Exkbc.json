[
  {
    "start": "0",
    "end": "122000"
  },
  {
    "text": "my name is Deepak I run uh the container services team uh at AWS I also run the",
    "start": "80",
    "end": "5240"
  },
  {
    "text": "AWS batch and HBC uh team which you will uh which you just heard about in W skin",
    "start": "5240",
    "end": "10480"
  },
  {
    "text": "out I'm also joined today by several members of the container services org uh maybe some of them are still trailing in",
    "start": "10480",
    "end": "16520"
  },
  {
    "text": "but the ones who are there if you might if you could stand up see two up here there'll be more",
    "start": "16520",
    "end": "22080"
  },
  {
    "text": "showing up they also walking over uh they'll be through we'll be here",
    "start": "22080",
    "end": "27480"
  },
  {
    "text": "throughout the day uh you'll get a chance to talk to them we love uh getting a feedback listening to feature",
    "start": "27480",
    "end": "32719"
  },
  {
    "text": "requests hearing about some of the challenges you might be facing uh our goal is to try and help you solve all of",
    "start": "32719",
    "end": "38840"
  },
  {
    "text": "them so it was in Warner's keynote about uh 2 years ago uh that we announced the",
    "start": "38840",
    "end": "45879"
  },
  {
    "text": "preview for ECS uh it was uh it was exciting times and we went became generally available in April of the next",
    "start": "45879",
    "end": "53280"
  },
  {
    "text": "year uh since then we've also launched a container registry and in general adop",
    "start": "53280",
    "end": "59879"
  },
  {
    "text": "option of containers has really taken off uh and we are seeing rapid adoption of containers on AWS for all kinds of",
    "start": "59879",
    "end": "65920"
  },
  {
    "text": "applications and I'll talk a little bit about what we are seeing and how that might and you know the trends and",
    "start": "65920",
    "end": "71360"
  },
  {
    "text": "evolution of how people are using containers a little bit um it's and it's not just people using ECS uh there's a",
    "start": "71360",
    "end": "78159"
  },
  {
    "text": "number of other container orchestration platforms that our customers have uh choose to use and uh we have Partners",
    "start": "78159",
    "end": "83759"
  },
  {
    "text": "who Pro who provide and support those on AWS uh some of them in the audience today and I'll actually uh uh you know",
    "start": "83759",
    "end": "89640"
  },
  {
    "text": "you have folks like the folks from convox who provide a great uh management layer on top of the core ECS and other",
    "start": "89640",
    "end": "95320"
  },
  {
    "text": "AWS functionality that makes it easy to consume containers on AWS so if you're running msos uh something like Docker",
    "start": "95320",
    "end": "101680"
  },
  {
    "text": "swarm or dock of AWS uh that the docker folks announced yesterday uh kubernetes",
    "start": "101680",
    "end": "107320"
  },
  {
    "text": "uh there's a number of choices and we' like to make sure that uh all of them run very well on our platform and it's",
    "start": "107320",
    "end": "113280"
  },
  {
    "text": "really exciting time to be involved in this space because uh I think there still very very much in the early days",
    "start": "113280",
    "end": "118600"
  },
  {
    "text": "and there's a lot of uh Innovation to come uh",
    "start": "118600",
    "end": "124159"
  },
  {
    "text": "so you know our customer started off simple uh about 3 and a half years ago",
    "start": "124159",
    "end": "130840"
  },
  {
    "text": "was at the first time when people started asking us about Hey What Can AWS do to help us with containers uh",
    "start": "130840",
    "end": "137959"
  },
  {
    "text": "Dockers you know about three Dockers a little over three and a half years old and what I want to do is as people have",
    "start": "137959",
    "end": "144440"
  },
  {
    "text": "started building applications and running them in production uh that's what imp impacts our road map it's reflected in our agenda today and we'll",
    "start": "144440",
    "end": "150959"
  },
  {
    "text": "cover many of the things that uh we'll cover features that we've launched Etc but what I really wanted everyone in",
    "start": "150959",
    "end": "156800"
  },
  {
    "text": "this room to walk out with was to understand some of the rationale and some of the challenges that we want to",
    "start": "156800",
    "end": "162280"
  },
  {
    "text": "solve and how we think about them and maybe you'll get a better sense of what we trying to do and how may you may be",
    "start": "162280",
    "end": "167760"
  },
  {
    "text": "able to leverage the service I actually have a click I should use it",
    "start": "167760",
    "end": "173959"
  },
  {
    "start": "171000",
    "end": "273000"
  },
  {
    "text": "so as I said about 3 years ago was the first time we really started having a lot of customers coming to us and saying",
    "start": "173959",
    "end": "180599"
  },
  {
    "text": "hey we run containers on AWS we're trying to move them into production we need your help uh so we started trying",
    "start": "180599",
    "end": "186200"
  },
  {
    "text": "to tease that problem apart uh what did it mean for customers to go from a laptop to run a production application",
    "start": "186200",
    "end": "192680"
  },
  {
    "text": "What did the what are the problems that they were facing when they were trying to do that and they essentially boil down for us into three core buckets the",
    "start": "192680",
    "end": "200080"
  },
  {
    "text": "first bucket was cluster management people were running these resources on top of ec2 instances they had to run",
    "start": "200080",
    "end": "206440"
  },
  {
    "text": "some form of cluster management software they had to manage the config and then they had to make decisions like",
    "start": "206440",
    "end": "211680"
  },
  {
    "text": "what happens when I'm running in 3 A's what happens when I'm scaling from one application to one really big",
    "start": "211680",
    "end": "217920"
  },
  {
    "text": "application or even more interesting from one me small application to thousands of applications some medium",
    "start": "217920",
    "end": "224480"
  },
  {
    "text": "some large some small across an organization and how do we manage that how do we manage uh so all of that",
    "start": "224480",
    "end": "230400"
  },
  {
    "text": "became was one of the biggest pain points that our customers had and it was pretty clear that was one that we needed",
    "start": "230400",
    "end": "236120"
  },
  {
    "text": "to solve the other problem they wanted to solve was container orchestration which is okay now I have all these I",
    "start": "236120",
    "end": "243760"
  },
  {
    "text": "have I built this cluster I kind of have a resource manager now I have to put my containers and place them across this",
    "start": "243760",
    "end": "250120"
  },
  {
    "text": "cluster in an efficient way I need to manage the life cycle of my applications uh help me do that and the last one and",
    "start": "250120",
    "end": "256639"
  },
  {
    "text": "that's especially true for customers who've been on the AWS platform for a while is you have all these cool",
    "start": "256639",
    "end": "262160"
  },
  {
    "text": "features we launched another what 15 or 16 in the last two days how can we leverage them how can we integrate with",
    "start": "262160",
    "end": "268240"
  },
  {
    "text": "them and we like to do that better from a container",
    "start": "268240",
    "end": "272680"
  },
  {
    "start": "273000",
    "end": "350000"
  },
  {
    "text": "infrastructure so the first thing we did and the first thing we wanted to do was build a fully managed service which means there should be no need to run",
    "start": "274039",
    "end": "280919"
  },
  {
    "text": "your own resource manager your own cluster manager uh I come from the HPC world uh and in in the HBC world every",
    "start": "280919",
    "end": "288680"
  },
  {
    "text": "cluster and that's true for most clustered Solutions you have this head node or a master node and that's a proverbial single point of failure and",
    "start": "288680",
    "end": "295080"
  },
  {
    "text": "pain in the neck uh you have to figure out how to scale it you have to figure out how to manage its life cycle you have to figure out what happens when it",
    "start": "295080",
    "end": "300520"
  },
  {
    "text": "goes down uh I I fundamentally believe and many of us we do as a team that",
    "start": "300520",
    "end": "305960"
  },
  {
    "text": "that's something that doesn't translate well to a elastic Cloud infrastructure so we wanted to build a system where you",
    "start": "305960",
    "end": "311160"
  },
  {
    "text": "did not have to run that and figure out how to scale it so if you for those of you who who used DCS two years ago and",
    "start": "311160",
    "end": "316800"
  },
  {
    "text": "there are some of you in this audience uh we didn't even in our preview we didn't even have any fancy schedulers",
    "start": "316800",
    "end": "321919"
  },
  {
    "text": "all we had was a really good highly scalable and efficient resource uh highly reliable resource manager and",
    "start": "321919",
    "end": "328560"
  },
  {
    "text": "that remains one of the most popular features uh and capabilities of the ECS platform uh every time we talk to",
    "start": "328560",
    "end": "335240"
  },
  {
    "text": "customers and uh about what they like most about the plat about they like about DCS for many of them the fact that",
    "start": "335240",
    "end": "341720"
  },
  {
    "text": "they don't have to operate their cluster management infrastructure remains one of their one of the key reasons they use",
    "start": "341720",
    "end": "348800"
  },
  {
    "start": "350000",
    "end": "416000"
  },
  {
    "text": "us AWS has many many services that do a bunch of things many of them we consider core parts of the platform things like",
    "start": "351720",
    "end": "358479"
  },
  {
    "text": "identity monitoring uh how we scale systems uh how we load balance the services across the board uh and",
    "start": "358479",
    "end": "365759"
  },
  {
    "text": "initially in the early days of containers you had to kind of figure out how to make them talk to your container infrastructure you to do some some of",
    "start": "365759",
    "end": "372199"
  },
  {
    "text": "our customers have done some rather heroic things to make that happen and we wanted to make that a lot easier but it",
    "start": "372199",
    "end": "378240"
  },
  {
    "text": "wasn't just about ECS integrating with uh the rest of the AWS platform it was also about helping other teams at Amazon",
    "start": "378240",
    "end": "386240"
  },
  {
    "text": "understand what it meant to support containerization I'll talk about this a little bit more later but a great",
    "start": "386240",
    "end": "391319"
  },
  {
    "text": "example of this is our load balancing team we collaborated very closely with them on the application load balancer",
    "start": "391319",
    "end": "398039"
  },
  {
    "text": "because that was a the the the properties and capabilities that it now provides ECS customers were pretty",
    "start": "398039",
    "end": "403960"
  },
  {
    "text": "clearly things that we needed to do but other people running containers on AWS also wanted those capabilities so those",
    "start": "403960",
    "end": "409639"
  },
  {
    "text": "are core missions for the team and we provide them to customers through",
    "start": "409639",
    "end": "415599"
  },
  {
    "text": "ECS so here are some common use cases I will start with the the last one uh for",
    "start": "415599",
    "end": "420759"
  },
  {
    "start": "416000",
    "end": "643000"
  },
  {
    "text": "anyone who's used who started running Docker who's doing using containers doing some form",
    "start": "420759",
    "end": "427479"
  },
  {
    "text": "of deployment and continuous deployment is often the first use case that they find for running Docker and no surprise",
    "start": "427479",
    "end": "434120"
  },
  {
    "text": "when we launched ECS uh right off the bat uh there's a whole bunch of folks who started doing that uh and it really",
    "start": "434120",
    "end": "440560"
  },
  {
    "text": "took off once we launched the container registry because you need to store your images somewhere and that gives you a great starting point uh that resulted in",
    "start": "440560",
    "end": "447759"
  },
  {
    "text": "a bunch of Partnerships uh with companies like worker with code ship with shipable with cloudbees who wrote A",
    "start": "447759",
    "end": "454520"
  },
  {
    "text": "Jenkins plugin for ECS to try and make your software deployment is a lot easier all in a containerized Docker",
    "start": "454520",
    "end": "462160"
  },
  {
    "text": "World somewhat surprisingly at the time but perhaps in hindsight uh not that big",
    "start": "462160",
    "end": "467319"
  },
  {
    "text": "a surprise uh right after we launched uh in preview and especially once we in GA",
    "start": "467319",
    "end": "472919"
  },
  {
    "text": "our batch processing use case just exploded and initially when we talk to",
    "start": "472919",
    "end": "478319"
  },
  {
    "text": "customers most of them when not doing batch and we wondered why this got so popular so quickly and the in in in",
    "start": "478319",
    "end": "485039"
  },
  {
    "text": "hindsight the reasoning is simple batch processing does not require complex networking does not require complex orchestration necessarily at least for a",
    "start": "485039",
    "end": "491879"
  },
  {
    "text": "lot of simple batch cases it needs efficient Resource Management it needs an execution environment and it needs",
    "start": "491879",
    "end": "497000"
  },
  {
    "text": "the ability to scale really quickly all of which you got from ECS and uh people started using it so much so we ended up",
    "start": "497000",
    "end": "502960"
  },
  {
    "text": "building a service on top of it called AWS batch which I'll talk about uh later and you'll have more deep Dives on the",
    "start": "502960",
    "end": "509520"
  },
  {
    "text": "most common use case for us remains people doing microservices I use that in air courts because I don't think anybody",
    "start": "509520",
    "end": "516000"
  },
  {
    "text": "agrees on what that means uh but the general plan idea is that people break up their applications they start",
    "start": "516000",
    "end": "521800"
  },
  {
    "text": "splitting them into small decomposed units either because they want the developers to move faster or they want",
    "start": "521800",
    "end": "527680"
  },
  {
    "text": "to set up teams that way the goal is to get productivity and better operational uh control over how they're running",
    "start": "527680",
    "end": "533959"
  },
  {
    "text": "their infrastructures especially as the scale uh and then you have customers uh and partners who kind of built platforms",
    "start": "533959",
    "end": "540480"
  },
  {
    "text": "on top of that for their developers to leverage so whether it's folks like",
    "start": "540480",
    "end": "545600"
  },
  {
    "text": "convox whether it's folks like meteor with media Galaxy uh folks from remind with the Empire platform there's a",
    "start": "545600",
    "end": "551839"
  },
  {
    "text": "number of application platform services available on ECS that developers can leverage and uh they definitely make it",
    "start": "551839",
    "end": "558720"
  },
  {
    "text": "uh they give you a really nice tool chain to take advantage of the capabilities that the broader platform",
    "start": "558720",
    "end": "563880"
  },
  {
    "text": "offers there are also a lot lot of large Enterprise companies that have built internal platforms for their own",
    "start": "563880",
    "end": "569200"
  },
  {
    "text": "development teams uh these are may be things that just they have developed or they may start with an open source project and uh sort of Smith it for",
    "start": "569200",
    "end": "577560"
  },
  {
    "text": "their own use case but that remains again a very very common use of uh ECS and the types of customers we get range",
    "start": "577560",
    "end": "584920"
  },
  {
    "text": "from startups like airtime uh it's a video chat software uh to companies like",
    "start": "584920",
    "end": "590640"
  },
  {
    "text": "um my taxi uh apparent so I learned yesterday that my taxi is really big in Germany they don't have Uber there so",
    "start": "590640",
    "end": "597640"
  },
  {
    "text": "everyone uses my taxi and every new year they basically used to have these tremendous scaling problems they got",
    "start": "597640",
    "end": "603600"
  },
  {
    "text": "350% more traffic on that one day than they got the rest of the year and they were having trouble scaling their app so",
    "start": "603600",
    "end": "610320"
  },
  {
    "text": "they moved to ECS they split their application up into about 50 services so it's a 50 microservices if you want to",
    "start": "610320",
    "end": "616560"
  },
  {
    "text": "call them they leverage a lot of the ECS infrastructure and you know last new",
    "start": "616560",
    "end": "621600"
  },
  {
    "text": "year was the first time they ran with that and they did just fine uh you have folks like Lyft that are heavy users of",
    "start": "621600",
    "end": "627000"
  },
  {
    "text": "the ec2 container registry uh and you know you'll hear from some of these today you'll hear from companies like",
    "start": "627000",
    "end": "634160"
  },
  {
    "text": "here that do mapping and uh and it's it's pretty exciting to work with companies of all uh of all",
    "start": "634160",
    "end": "642519"
  },
  {
    "start": "643000",
    "end": "660000"
  },
  {
    "text": "types so our goal is as I said earlier those are the problem we started to",
    "start": "643519",
    "end": "648920"
  },
  {
    "text": "solve technically we wanted to build a manage cluster management option we wanted to give you apis for container",
    "start": "648920",
    "end": "654440"
  },
  {
    "text": "orchestration and we wanted to build deep integration into the AWS platform",
    "start": "654440",
    "end": "660920"
  },
  {
    "start": "660000",
    "end": "858000"
  },
  {
    "text": "and what have you done over the last year to try and help you do that especially in in those l two",
    "start": "660920",
    "end": "667959"
  },
  {
    "text": "buckets so when we launched ECS we were available if I remember correctly in just one region uh ECR was the same",
    "start": "671720",
    "end": "678040"
  },
  {
    "text": "since then both Services have gone into nine regions and our plan is to be in every AWS region uh going forward you'll",
    "start": "678040",
    "end": "683800"
  },
  {
    "text": "find us being in every region on day one uh that was through with a recent launch in Ohio uh you know we believe these are",
    "start": "683800",
    "end": "690800"
  },
  {
    "text": "foundational technologies that not just our customers but other AWS services are going to build on so uh we will treat",
    "start": "690800",
    "end": "696600"
  },
  {
    "text": "them as such uh late last year one of our Engineers uh pushed a cloudwatch",
    "start": "696600",
    "end": "702399"
  },
  {
    "text": "logs plug-in into Docker uh this year we took that initial uh plugin and then",
    "start": "702399",
    "end": "708639"
  },
  {
    "text": "basically built an entire logging infrastructure we get container logs and uh uh Serv task logs and service logs",
    "start": "708639",
    "end": "715519"
  },
  {
    "text": "and you can push them into cloudwatch logs once you do that there's a lot of interesting things you can do you can",
    "start": "715519",
    "end": "720800"
  },
  {
    "text": "push your lo you can send the data to S3 for persistence you can put them into red shift if you want to analyze your logs or you can push them into things",
    "start": "720800",
    "end": "727920"
  },
  {
    "text": "something like Kinesis for streaming or you could push them into elastic search and build pretty kibana dashboards uh",
    "start": "727920",
    "end": "733560"
  },
  {
    "text": "basically once you have logs there's a lot of visibility you get into your application I'll talk that about that as",
    "start": "733560",
    "end": "738760"
  },
  {
    "text": "well uh we added autoscaling at both the task",
    "start": "738760",
    "end": "743839"
  },
  {
    "text": "and container level it's uh at and at the cluster level uh cluster level is just ec2 using C metrics that make sense",
    "start": "743839",
    "end": "750240"
  },
  {
    "text": "from an ECS point of view but the real ask from our customers was to do uh was to do autoscaling for their ECS",
    "start": "750240",
    "end": "757240"
  },
  {
    "text": "tasks um so you've heard me use containers and tasks a little bit interchangeably so I just want to",
    "start": "757240",
    "end": "763000"
  },
  {
    "text": "quickly take a sidebar uh a task in ECS parant is a collection of containers",
    "start": "763000",
    "end": "768880"
  },
  {
    "text": "that you put in a lovely Json file and the system treats that as one unit so all our apis are actually and",
    "start": "768880",
    "end": "775000"
  },
  {
    "text": "functionality are primarily at the task level a task can contain just one container but can contain up to 10 today",
    "start": "775000",
    "end": "781240"
  },
  {
    "text": "as well um IM roles was um autoscaling imrs and",
    "start": "781240",
    "end": "788000"
  },
  {
    "text": "ALB were probably the top three feature requests we got when we launched AWS we delivered all three this year uh later",
    "start": "788000",
    "end": "793440"
  },
  {
    "text": "in the talk I'll talk about them in a little more detail uh but essentially what ALB does uh when you launched ECS",
    "start": "793440",
    "end": "800480"
  },
  {
    "text": "you only had one one is one relationship between a between your load balancer and the port on your host and with ALB with",
    "start": "800480",
    "end": "807639"
  },
  {
    "text": "path based routing and port management you no longer have that restriction and just about 10 days ago I forget very",
    "start": "807639",
    "end": "814199"
  },
  {
    "text": "recently we launched the ECS event stream and what the event stream does is it takes all the state transitions that",
    "start": "814199",
    "end": "820240"
  },
  {
    "text": "uh we capture in ECS and sends them to cloudwatch event so you can take action on them uh it it makes it much easier",
    "start": "820240",
    "end": "826279"
  },
  {
    "text": "for you to build on top of ECS it helps you do things in much more real time rather than pulling our apis uh all the",
    "start": "826279",
    "end": "832560"
  },
  {
    "text": "time so these are just some of the major features that we launched this year there's a whole bunch of smaller ones uh one not mentioned here is we have",
    "start": "832560",
    "end": "838839"
  },
  {
    "text": "actually updated our console just last week with a new dashboard it'll even tell you things like if your agents out",
    "start": "838839",
    "end": "844240"
  },
  {
    "text": "of date I think that's one of the things that bites a lot of customers because uh Docker moves fast functionality moves",
    "start": "844240",
    "end": "849680"
  },
  {
    "text": "quickly and we keep revving our agent and people often get left be left on an old agent version and now they know when",
    "start": "849680",
    "end": "855240"
  },
  {
    "text": "they are on an old agent version",
    "start": "855240",
    "end": "862240"
  },
  {
    "start": "858000",
    "end": "895000"
  },
  {
    "text": "so those three technical problems that we were trying to solve essentially came",
    "start": "862240",
    "end": "867279"
  },
  {
    "text": "from this high level question that customers were ask were asking us and what we asked ourselves people want to",
    "start": "867279",
    "end": "872880"
  },
  {
    "text": "run containers in production at any scale it's not just a toy it's not just for hobby development there's a you",
    "start": "872880",
    "end": "878160"
  },
  {
    "text": "heard from Netflix this morning that they're moving significant parts of what they're doing over to Containers how can we support a customer like that how we",
    "start": "878160",
    "end": "885199"
  },
  {
    "text": "how can we support a customer like my taxi that has their entire service depends on us being up and them running",
    "start": "885199",
    "end": "891240"
  },
  {
    "text": "an application on New Year's Eve the most important day for",
    "start": "891240",
    "end": "895600"
  },
  {
    "start": "895000",
    "end": "1019000"
  },
  {
    "text": "them so you heard Verner talk about the the well architectured framework this morning and I'll try and cast sort of",
    "start": "896560",
    "end": "901800"
  },
  {
    "text": "this in the context of the well architectured",
    "start": "901800",
    "end": "906959"
  },
  {
    "text": "framework so AWS launched 10 and a half years ago something like that 11 almost",
    "start": "909560",
    "end": "914880"
  },
  {
    "text": "uh and since then we've had customers grow",
    "start": "914880",
    "end": "919920"
  },
  {
    "text": "from small startups grow from little tiny startups to Pinterest scale for example we've had Netflix come on board",
    "start": "919920",
    "end": "927240"
  },
  {
    "text": "we've had many Enterprises has come on board and we've had the luxury of talking to a lot of these customers",
    "start": "927240",
    "end": "932279"
  },
  {
    "text": "helping them as their scale helping them understand how to build applications in AWS but also learning from them as well",
    "start": "932279",
    "end": "938880"
  },
  {
    "text": "some of our customers are super Innovative and they figured out great ways to scale their scale their application inws and what our Solutions",
    "start": "938880",
    "end": "946120"
  },
  {
    "text": "Architects did was take those Lessons Learned both from helping customers scale and bring their applications on",
    "start": "946120",
    "end": "951240"
  },
  {
    "text": "board and from the customers who've become really good at using what we give them and came up with the concept of a",
    "start": "951240",
    "end": "957040"
  },
  {
    "text": "well architectured framework and and essentially this is a set of questions that we ask customers to you know",
    "start": "957040",
    "end": "962279"
  },
  {
    "text": "customers ask themselves and we sit down with them and ask what does it mean mean to run a well architected application or",
    "start": "962279",
    "end": "968319"
  },
  {
    "text": "a set of applications in AWS and there's sort of five core buckets of a well architected framework those are security",
    "start": "968319",
    "end": "976480"
  },
  {
    "text": "reliability uh performance efficiency cost optimization and operational excellence and I'll try and talk about",
    "start": "976480",
    "end": "982360"
  },
  {
    "text": "the capabilities that we provide in that context but essentially the big part was",
    "start": "982360",
    "end": "988759"
  },
  {
    "text": "we want you to be well architectured by Design there's a lot of things that people have to think about when they're building applications and our goal is to",
    "start": "988759",
    "end": "995519"
  },
  {
    "text": "try and meet as many of those requirements as we can right out of the box or understand from you understand",
    "start": "995519",
    "end": "1001880"
  },
  {
    "text": "from you what it takes for us to get there and it's an ongoing process which is why uh we' love to talk with you",
    "start": "1001880",
    "end": "1007880"
  },
  {
    "text": "today and I know on our on our forums as well and for us as service teams it's",
    "start": "1007880",
    "end": "1014279"
  },
  {
    "text": "not just through for us all AWS service teams ask ourselves essentially this question",
    "start": "1014279",
    "end": "1019560"
  },
  {
    "start": "1019000",
    "end": "1226000"
  },
  {
    "text": "so let's talk let's go through this the first and most important thing",
    "start": "1019560",
    "end": "1024798"
  },
  {
    "text": "is security uh it's the most it's it's like the level zero of anything that we do you need to have security at all",
    "start": "1024799",
    "end": "1030839"
  },
  {
    "text": "layers you need to be able to figure out what's going on you need to automate your response uh you heard wner talk",
    "start": "1030839",
    "end": "1036558"
  },
  {
    "text": "about response automation quite a bit this morning with the personal personal health dashboard and you need to have principles like least privileged access",
    "start": "1036559",
    "end": "1043760"
  },
  {
    "text": "and at AWS we give you a whole number of tools to do that uh obviously we are responsible for all that stuff in Orange",
    "start": "1043760",
    "end": "1050960"
  },
  {
    "text": "or Amber or whatever the color that is and then we provide you tools to manage the top part of your your stack uh plat",
    "start": "1050960",
    "end": "1058240"
  },
  {
    "text": "uh things like I am to manage lease privilege the problem was when we started ECS when when people started",
    "start": "1058240",
    "end": "1063960"
  },
  {
    "text": "using containers on AWS they couldn't do that there was no way to provide IM roles and manage privilege uh least",
    "start": "1063960",
    "end": "1071400"
  },
  {
    "text": "access at the level of a container so it became very quickly became one of our",
    "start": "1071400",
    "end": "1076480"
  },
  {
    "text": "most uh required uh features and uh but it's not just about that we also need to",
    "start": "1076480",
    "end": "1082320"
  },
  {
    "text": "do stuff like get various compliances so that enterprises can use us uh I you know we've got two right now we've got",
    "start": "1082320",
    "end": "1088320"
  },
  {
    "text": "ISO 27,1 and uh we ECS can be used for PCI applications and we inherit some from",
    "start": "1088320",
    "end": "1094960"
  },
  {
    "text": "ec2 because ECS runs on that but we'll continue to make that a lot better but back to I am what people wanted to do",
    "start": "1094960",
    "end": "1101960"
  },
  {
    "text": "was they're running more T multiple tasks on a single host those tasks could",
    "start": "1101960",
    "end": "1107159"
  },
  {
    "text": "come from different applications those tasks could come from different parts of the organization some of our customers",
    "start": "1107159",
    "end": "1112640"
  },
  {
    "text": "give a sing give a each team a different cluster other customers run one big",
    "start": "1112640",
    "end": "1117960"
  },
  {
    "text": "giant cluster that they want to logically separate out and IM rolles helps you do that you can run",
    "start": "1117960",
    "end": "1123120"
  },
  {
    "text": "applications you can restrict access to databases you can restrict access to S3 buckets there's a lot of control that",
    "start": "1123120",
    "end": "1128799"
  },
  {
    "text": "you get once you have there and as our identity and access management capabilities improve you get the improve",
    "start": "1128799",
    "end": "1134440"
  },
  {
    "text": "enhancements that they make automatically because they keep doing cool stuff too uh so this is one of the",
    "start": "1134440",
    "end": "1140720"
  },
  {
    "text": "first things that we focused on when at the start of the year and we've had some great feedback from customers on what",
    "start": "1140720",
    "end": "1145760"
  },
  {
    "text": "they're doing and uh one customer that has done a great job of how they",
    "start": "1145760",
    "end": "1150919"
  },
  {
    "text": "leveraged it and they really pushed us hard to make sure we got this right is Expedia so what expedia does is they're",
    "start": "1150919",
    "end": "1156799"
  },
  {
    "text": "running uh production ECS clusters that serve about 200 applications uh they have an internal cicd tool that",
    "start": "1156799",
    "end": "1163640"
  },
  {
    "text": "leverages ECS they have a customer custom ECS Army so the great news ECS is",
    "start": "1163640",
    "end": "1168960"
  },
  {
    "text": "you can don't have to run our army uh for those of you I've seen tweets on this at a at AWS we don't call them Ami",
    "start": "1168960",
    "end": "1176520"
  },
  {
    "text": "we call them armies uh Amazon machine images uh so they have their own with",
    "start": "1176520",
    "end": "1181600"
  },
  {
    "text": "their with what their internal it groups and SEC and infos have approved they have they use do rolling instance",
    "start": "1181600",
    "end": "1187000"
  },
  {
    "text": "updates as they reschedule tasks uh they autoscale using the our Auto scaling features and they heavily use task IM",
    "start": "1187000",
    "end": "1194919"
  },
  {
    "text": "roles to scope permissions to their applications they're running 200 of them on their ECS resources from different",
    "start": "1194919",
    "end": "1200080"
  },
  {
    "text": "teams with different levels of requirements and different levels of access it allows them to run efficiently on top of the platform and make and get",
    "start": "1200080",
    "end": "1206760"
  },
  {
    "text": "a really good security posture and I think those are the kinds of things that when you start running container applications you don't think about but",
    "start": "1206760",
    "end": "1213120"
  },
  {
    "text": "when you're an Enterprise trying to move to containers and running applications in production that's probably the first thing you do think about and that's Pro",
    "start": "1213120",
    "end": "1220000"
  },
  {
    "text": "is definitely one of the first things I get to hear from them when they when they're asking us which platform they should be using and",
    "start": "1220000",
    "end": "1226720"
  },
  {
    "start": "1226000",
    "end": "1259000"
  },
  {
    "text": "how the next one is operational excellence uh it's a motto at Amazon uh",
    "start": "1226720",
    "end": "1232440"
  },
  {
    "text": "on and we ask give we continuously ask ourselves how we can get better at this but we but our customers have taught us",
    "start": "1232440",
    "end": "1238640"
  },
  {
    "text": "some really nice lessons as well you need to be able I I think one of the most important parts of operational",
    "start": "1238640",
    "end": "1243919"
  },
  {
    "text": "excellence is how much automation you get through code and how much monitoring you do of your infrastructure and and",
    "start": "1243919",
    "end": "1249799"
  },
  {
    "text": "and those tenants are critical regardless of whether you're running in containers whether you're running on VMS or anything else that you do uh",
    "start": "1249799",
    "end": "1260120"
  },
  {
    "start": "1259000",
    "end": "1293000"
  },
  {
    "text": "so obviously continuous integration and delivery is something I talked about uh uh you saw uh that uh Expedia use their",
    "start": "1260480",
    "end": "1267960"
  },
  {
    "text": "own cicd pipelines there are others who use Jenkins uh there's others who use other you know there's there's so many",
    "start": "1267960",
    "end": "1273640"
  },
  {
    "text": "tools out there but ECS especially with the registry involved does a really good job of helping you build those pipelines",
    "start": "1273640",
    "end": "1279919"
  },
  {
    "text": "uh and you can use things like Lambda to add some custom Hooks and do more custom actions to them uh and uh if you go to",
    "start": "1279919",
    "end": "1286159"
  },
  {
    "text": "the ECS partner page you'll get a get a list of all the partners that we work with in this in this",
    "start": "1286159",
    "end": "1293559"
  },
  {
    "start": "1293000",
    "end": "1343000"
  },
  {
    "text": "space automation through code is something that we all take to heart there's folks in this room who probably",
    "start": "1293679",
    "end": "1299880"
  },
  {
    "text": "live and breathe that uh that motto uh so when you we wanted to make sure that",
    "start": "1299880",
    "end": "1305400"
  },
  {
    "text": "ECS was fundamentally automatable so our task definitions which are the core component which is the first thing you",
    "start": "1305400",
    "end": "1310600"
  },
  {
    "text": "interact with in ECS are Json files uh we have deep integration with cloud formation uh you have customers and",
    "start": "1310600",
    "end": "1317320"
  },
  {
    "text": "partners that take take these cloud formation templates or use terraform uh to basically automate their entire",
    "start": "1317320",
    "end": "1322400"
  },
  {
    "text": "infrastructure stack and then let the ECS schedulers do the rest do all the task scheduling updates Etc uh it makes",
    "start": "1322400",
    "end": "1329279"
  },
  {
    "text": "it really powerful because it can automate provisioning change management and and and you get a lot of control",
    "start": "1329279",
    "end": "1335480"
  },
  {
    "text": "over how your resources are being managed that AO that run helps you run more safely it helps you run with high",
    "start": "1335480",
    "end": "1342559"
  },
  {
    "start": "1343000",
    "end": "1398000"
  },
  {
    "text": "availability I talked a little bit about monitoring earlier today uh it's not just through cloudbust laws so there's a",
    "start": "1343559",
    "end": "1348600"
  },
  {
    "text": "bunch of folks using uh things like uh so ECS on day one had cloud trail integration so any API call that you",
    "start": "1348600",
    "end": "1355320"
  },
  {
    "text": "make to ECS gets logged in cloud trail and gives you audit so it gives you not just access at the application layer but",
    "start": "1355320",
    "end": "1361480"
  },
  {
    "text": "you can also man look at whose access to resources at what point of time uh and so on and you can there's a number of",
    "start": "1361480",
    "end": "1367799"
  },
  {
    "text": "other uh features that we provide that help you do that you can use plunk there's a really nice plunk plugin for",
    "start": "1367799",
    "end": "1373120"
  },
  {
    "text": "ECS and uh last but not the least I'm super excited about x-ray uh that got",
    "start": "1373120",
    "end": "1378679"
  },
  {
    "text": "announced today so we are not natively integrated with x-ray yet but you can run X-ray on top of ECS and uh one of",
    "start": "1378679",
    "end": "1385440"
  },
  {
    "text": "the things that x-ray does is gives you information about how your data is flowing through the rest of the AWS system and we're super excited over time",
    "start": "1385440",
    "end": "1392120"
  },
  {
    "text": "about integrating with that and getting giving you even more visibility into how your systems are",
    "start": "1392120",
    "end": "1398039"
  },
  {
    "start": "1398000",
    "end": "1422000"
  },
  {
    "text": "operating reliability is has some of the same Concepts as operational excellence",
    "start": "1398039",
    "end": "1404120"
  },
  {
    "text": "you have to be able to automate you have to be able to recover quickly uh meantime to recovery is one of the more",
    "start": "1404120",
    "end": "1410200"
  },
  {
    "text": "core tenets of building reliable infrastructure you want to decouple your applications as much as possible and",
    "start": "1410200",
    "end": "1415640"
  },
  {
    "text": "that's the whole microservices side and you want to able to scale your scale horizontally as much as possible um we",
    "start": "1415640",
    "end": "1423279"
  },
  {
    "start": "1422000",
    "end": "1523000"
  },
  {
    "text": "talked about automation so I won't spend too much time uh with it's generally true for any API driven service things",
    "start": "1423279",
    "end": "1429760"
  },
  {
    "text": "like cloud formation or terraform give you a lot of control over how you do this um Auto Recovery was one of the key",
    "start": "1429760",
    "end": "1436840"
  },
  {
    "text": "things that our customers want wanted to do for long running applications uh they didn't want to have to figure out okay I",
    "start": "1436840",
    "end": "1442640"
  },
  {
    "text": "got an alert now I have to figure out how to restart my application so the ECS service schul does a few things here uh",
    "start": "1442640",
    "end": "1448720"
  },
  {
    "text": "you tell it what your desired state is and it works really hard to make sure that it can keep that desired State uh",
    "start": "1448720",
    "end": "1455039"
  },
  {
    "text": "somewhat closely related to it is as you decouple your applications more and more",
    "start": "1455039",
    "end": "1460880"
  },
  {
    "text": "you can actually manage uh the state of your you can it gives you more resiliency because even if a single",
    "start": "1460880",
    "end": "1466559"
  },
  {
    "text": "component of your application fails it doesn't mean your entire application uh has failed because you've divided up into little components and you can",
    "start": "1466559",
    "end": "1472840"
  },
  {
    "text": "manage each of those as Services running on an ECS cluster and all of them have Auto Recovery built-in so it gives you a",
    "start": "1472840",
    "end": "1478760"
  },
  {
    "text": "lot of advantages and once you combine them with horizontal scaling you can really scale your applications as your",
    "start": "1478760",
    "end": "1484600"
  },
  {
    "text": "business grows as your needs grow uh as I hinted at earlier ECS has two levels of scaling your un your resources your",
    "start": "1484600",
    "end": "1492039"
  },
  {
    "text": "ec2 instances that are running underneath your cluster get Scaled based on cluster and service level metrics",
    "start": "1492039",
    "end": "1498399"
  },
  {
    "text": "uh so as your clusters is taking more traffic or as your services take more traffic it'll automatically add more",
    "start": "1498399",
    "end": "1503559"
  },
  {
    "text": "resources for them to consume and then your services themselves your tasks can also autoscale based on how much traffic",
    "start": "1503559",
    "end": "1509760"
  },
  {
    "text": "they're taking and until you need to launch more resources for them they probably won't uh there so you get all",
    "start": "1509760",
    "end": "1515840"
  },
  {
    "text": "the functionality autoscaling at the container level which is uh really empowering has been a huge feature for our customers as",
    "start": "1515840",
    "end": "1523399"
  },
  {
    "text": "well the next one is how do you run your applications more efficiently and how do you reduce costs you want to right sizee",
    "start": "1523679",
    "end": "1530799"
  },
  {
    "text": "your resources you want to reduce your operational burden and containers actually pretty good at",
    "start": "1530799",
    "end": "1536399"
  },
  {
    "text": "that uh it's one of the big reasons that a lot of people start thinking about containers in the first place um you",
    "start": "1536399",
    "end": "1541919"
  },
  {
    "text": "need to match supply and demand you need to be able to figure out uh you know you might take a big big ec2 instance and",
    "start": "1541919",
    "end": "1549480"
  },
  {
    "text": "run a few jvms on it with containers now you can start mixing and matching applications that get better utilization",
    "start": "1549480",
    "end": "1555000"
  },
  {
    "text": "of your resources because now you are monitoring them at the CPU and memory level across an aggregation of resources",
    "start": "1555000",
    "end": "1561240"
  },
  {
    "text": "so it becomes super powerful and but we want to make it even better for you earlier today you heard Verner talk a",
    "start": "1561240",
    "end": "1567039"
  },
  {
    "text": "little bit about task placement uh very soon we'll make available we'll build we'll provide you with a task placement",
    "start": "1567039",
    "end": "1572399"
  },
  {
    "text": "engine for ECS schedulers uh what does task placement require and what do how do we think about it you have",
    "start": "1572399",
    "end": "1578760"
  },
  {
    "text": "constraints at the cluster level you have a certain set of CPU memory Network ports that you need to",
    "start": "1578760",
    "end": "1584559"
  },
  {
    "text": "satisfy you have custom constraints these could be location which instance type are you running on a particular",
    "start": "1584559",
    "end": "1590520"
  },
  {
    "text": "type of machine image some other arbitrary attribute that you want to constrain",
    "start": "1590520",
    "end": "1596720"
  },
  {
    "text": "on you have placement strategies you may want to pack up a bunch of servers before you go on to the next one or for",
    "start": "1596720",
    "end": "1603120"
  },
  {
    "text": "availability reasons you may want them to spread out out across instances or across availability zones and at the end",
    "start": "1603120",
    "end": "1609360"
  },
  {
    "text": "of it you need to be able to apply all all of these requirements through a filter and then select the set of",
    "start": "1609360",
    "end": "1614960"
  },
  {
    "text": "resources that you want to go actually go schedule on so it's an optimization problem with many variables that you",
    "start": "1614960",
    "end": "1621360"
  },
  {
    "text": "need to satisfy so when we launch you'll have a number of capabilities that you",
    "start": "1621360",
    "end": "1626679"
  },
  {
    "text": "can attributes as we call them that you can filter on things like army army ID availability zones instance types you",
    "start": "1626679",
    "end": "1633559"
  },
  {
    "text": "can explicitly go Target something like a GPU instance you can explicitly Target an X1 if you're running containers on 2",
    "start": "1633559",
    "end": "1640440"
  },
  {
    "text": "terabyte instances some people might um you can explicitly say that you want",
    "start": "1640440",
    "end": "1646200"
  },
  {
    "text": "your jobs to be spread out and only run one on an instance uh or you may want",
    "start": "1646200",
    "end": "1651679"
  },
  {
    "text": "some uh custom attributes like a production stack uh that you may only want to so you you want an application",
    "start": "1651679",
    "end": "1657159"
  },
  {
    "text": "you never want that application to hit prod actually better example would be just launch it in dep uh and then at",
    "start": "1657159",
    "end": "1663360"
  },
  {
    "text": "some point you might decide to promote it to production all of these capabilities will be natively provided with the ECS schedulers they'll just be",
    "start": "1663360",
    "end": "1669200"
  },
  {
    "text": "built in you can make your choices and deploy them not only that you have a bunch of placement strategies that you",
    "start": "1669200",
    "end": "1675279"
  },
  {
    "text": "can bring along with them bin packing spread Affinity uh distinct instances",
    "start": "1675279",
    "end": "1681360"
  },
  {
    "text": "and you can do them hierarchically you can have you can say something like first bin pack and then spread or some",
    "start": "1681360",
    "end": "1687600"
  },
  {
    "text": "other combination of that so really really rich set of attribute based placement features that we bring to ECS",
    "start": "1687600",
    "end": "1694159"
  },
  {
    "text": "very soon and I'm really excited to to do that um so more ability for you to",
    "start": "1694159",
    "end": "1700840"
  },
  {
    "text": "run your infrastructure super operationally where does this really become important let's say you're a",
    "start": "1700840",
    "end": "1706279"
  },
  {
    "text": "company that's growing really really fast that is running lots of applications but has to be conscious of",
    "start": "1706279",
    "end": "1712880"
  },
  {
    "text": "cost and you can't have runaway cost as you grow uh so uh to talk about a little bit about how the leverage ECS to do",
    "start": "1712880",
    "end": "1719320"
  },
  {
    "text": "that I'd love to invite B to from mapbox onto the stage to talk about how they capitalize the growth on ECS thank",
    "start": "1719320",
    "end": "1726720"
  },
  {
    "text": "you thanks thank you thanks everyone it's uh it's great",
    "start": "1726720",
    "end": "1733159"
  },
  {
    "text": "to be here and I'm really excited about um all the stuff that's been been talked about so far at this re event I hope",
    "start": "1733159",
    "end": "1738640"
  },
  {
    "text": "hope you're having a good conference um uh I'm on the platform team at Mbox",
    "start": "1738640",
    "end": "1744679"
  },
  {
    "start": "1742000",
    "end": "1749000"
  },
  {
    "text": "and mapbox is about adding location to any application we offer customizable",
    "start": "1744679",
    "end": "1751080"
  },
  {
    "start": "1749000",
    "end": "1789000"
  },
  {
    "text": "location services like like maps that help you see the world in stunning detail uh geocoding or search that help",
    "start": "1751080",
    "end": "1757640"
  },
  {
    "text": "you find places and addresses and directions that help you get from point A to point B all these services are",
    "start": "1757640",
    "end": "1764960"
  },
  {
    "text": "delivered as developer friendly tools and SD K that can really just drop into",
    "start": "1764960",
    "end": "1770039"
  },
  {
    "text": "any application and add location there customers of mapbox include the",
    "start": "1770039",
    "end": "1777240"
  },
  {
    "text": "Weather Channel they use us on their IOS and Android app to render animated radar and satellite uh weather maps and they",
    "start": "1777240",
    "end": "1784360"
  },
  {
    "text": "use our geocoder our search to help people find the weather for specific locations",
    "start": "1784360",
    "end": "1789519"
  },
  {
    "start": "1789000",
    "end": "1798000"
  },
  {
    "text": "quickly or Airbnb they're they're using this on the web uh using custom markers",
    "start": "1789519",
    "end": "1794880"
  },
  {
    "text": "to show the locations of properties that are available to rent EV or someone like CNN they're helping",
    "start": "1794880",
    "end": "1800760"
  },
  {
    "start": "1798000",
    "end": "1808000"
  },
  {
    "text": "people understand where news is happening using a a custom satellite base map and and a custom street map",
    "start": "1800760",
    "end": "1806000"
  },
  {
    "text": "that's optimized for data visualization and finally National Geographic they have a gorgeous City",
    "start": "1806000",
    "end": "1812519"
  },
  {
    "start": "1808000",
    "end": "1820000"
  },
  {
    "text": "Guides app that uh helps that guides people on walking tours of the world's",
    "start": "1812519",
    "end": "1817919"
  },
  {
    "text": "most iconic cities we're powering over 55,000 apps",
    "start": "1817919",
    "end": "1823320"
  },
  {
    "text": "in categories ranging from social to Mobility and we reach over a quarter",
    "start": "1823320",
    "end": "1829000"
  },
  {
    "text": "billion uh people unique users every month and that number is",
    "start": "1829000",
    "end": "1834919"
  },
  {
    "text": "growing so in order to power these use cases and and and provide maps to our customers we we need to build a map and",
    "start": "1835159",
    "end": "1841960"
  },
  {
    "text": "that requires a lot of data so if you take a a a traffic map like the one",
    "start": "1841960",
    "end": "1847039"
  },
  {
    "text": "that's on the screen that we're probably all familiar with you can zoom in here and see the level of detail that we have here where does this data come from well",
    "start": "1847039",
    "end": "1854039"
  },
  {
    "text": "the way we way it starts is it looks like this it's it's a bunch of dots where we're collecting billions of probe points from our sdks and other sensors",
    "start": "1854039",
    "end": "1861840"
  },
  {
    "text": "uh and it comes into our comes into our pipeline it's like this and we process that on ec2 using ECS and turn it into",
    "start": "1861840",
    "end": "1869799"
  },
  {
    "text": "something that looks like this so what we're doing here is aggregating anonymizing aggregating and snapping",
    "start": "1869799",
    "end": "1875840"
  },
  {
    "text": "points to the road Network and then we look at the speed uh of those probes and",
    "start": "1875840",
    "end": "1881600"
  },
  {
    "text": "calculate the preva the prevailing speed for a particular Road segment this is how we built the traffic map not only",
    "start": "1881600",
    "end": "1887480"
  },
  {
    "text": "the visual map but also uh routing you around congestion so that you can get to work on",
    "start": "1887480",
    "end": "1893399"
  },
  {
    "text": "time this data covers entire cities this is Washington DC and",
    "start": "1893399",
    "end": "1900240"
  },
  {
    "text": "continents in fact we're we're collecting over three billion probe points every single day and that that",
    "start": "1900240",
    "end": "1905360"
  },
  {
    "text": "that's equivalent to about 100 million miles worth of of data every day that's coming into our uh coming into our",
    "start": "1905360",
    "end": "1914320"
  },
  {
    "start": "1915000",
    "end": "1981000"
  },
  {
    "text": "system so uh I want to talk about how all this runs on AWS and as of recently",
    "start": "1915440",
    "end": "1921679"
  },
  {
    "text": "it's all running on ECS um right around we just finished a massive migration of",
    "start": "1921679",
    "end": "1927639"
  },
  {
    "text": "all of our microservice infrastructure to ECS and right around the time we started that microservice uh migration",
    "start": "1927639",
    "end": "1934639"
  },
  {
    "text": "we we're seeing growth in in three key areas of of our business um uh the first",
    "start": "1934639",
    "end": "1941240"
  },
  {
    "text": "one is on our team so we have more people joining our team we're onboarding more people to the to the applications",
    "start": "1941240",
    "end": "1947159"
  },
  {
    "text": "how they work the infrastructure how that works and uh we need to figure out a way to scale that the second one's",
    "start": "1947159",
    "end": "1953159"
  },
  {
    "text": "functionality we're writing features faster than ever and shipping those out to customers and finally the the third",
    "start": "1953159",
    "end": "1960039"
  },
  {
    "text": "one is traffic we were onboarding the biggest customers we've ever seen and we needed to scale our infrastructure to a",
    "start": "1960039",
    "end": "1967360"
  },
  {
    "text": "whole new level so I want to talk about uh how we used ECS to address these",
    "start": "1967360",
    "end": "1972440"
  },
  {
    "text": "problems uh to overcome those challenges and not only overcome or or survive that",
    "start": "1972440",
    "end": "1977679"
  },
  {
    "text": "growth but massively capitalize on it so the so the first one's in team so",
    "start": "1977679",
    "end": "1984720"
  },
  {
    "start": "1981000",
    "end": "2047000"
  },
  {
    "text": "ECS really provides a a super elegant separation of concern on the one hand you have your application uh with",
    "start": "1984720",
    "end": "1991399"
  },
  {
    "text": "features and functionality that you're your customers want and on the other on the other hand you have your infrastructure which has your lower",
    "start": "1991399",
    "end": "1998120"
  },
  {
    "text": "level configuration your ec2 configuration your network configuration um and if this is what our",
    "start": "1998120",
    "end": "2005799"
  },
  {
    "text": "infrastructure used to look like it was monolithic we had microservices but each microservice had an infrastructure",
    "start": "2005799",
    "end": "2011559"
  },
  {
    "text": "attached to it in in a monolithic structure ECS allows us to decouple that",
    "start": "2011559",
    "end": "2017200"
  },
  {
    "text": "uh so that the infrastructure and the applications can can uh move independently influence each other but",
    "start": "2017200",
    "end": "2023840"
  },
  {
    "text": "they evolve independently and that's really really important for for scaling our team because you can deploy changes",
    "start": "2023840",
    "end": "2029120"
  },
  {
    "text": "to an application which without having to know how the entire infrastructure works and then the other way is true as",
    "start": "2029120",
    "end": "2034880"
  },
  {
    "text": "well you can make a lower level infrastructure changes without having to understand every single detail about an",
    "start": "2034880",
    "end": "2041039"
  },
  {
    "text": "application so that's that's massively helpful for for scaling up our team as we",
    "start": "2041039",
    "end": "2047079"
  },
  {
    "start": "2047000",
    "end": "2157000"
  },
  {
    "text": "grow the the second way uh that that ECS has really helped us is is in the the",
    "start": "2047079",
    "end": "2053079"
  },
  {
    "text": "growth of our functionality adding more features and one of the biggest things in addition to that separation of",
    "start": "2053079",
    "end": "2058720"
  },
  {
    "text": "concerns that helps uh one of the biggest things is deploying we need to be deploying faster we need to be",
    "start": "2058720",
    "end": "2064200"
  },
  {
    "text": "deploying more every day and our old way of deploying uh worked well what we did",
    "start": "2064200",
    "end": "2070800"
  },
  {
    "text": "is we had a a particular version of our application running and then we'd spin up entirely new ec2s wait for those to",
    "start": "2070800",
    "end": "2078520"
  },
  {
    "text": "become healthy and then shut down the old ec2s and this worked really well for a long time uh this works well with 10",
    "start": "2078520",
    "end": "2085800"
  },
  {
    "text": "20 maybe even 50 instances but when you're talking about hundreds or even thousands of of ec2 instances uh you get",
    "start": "2085800",
    "end": "2093358"
  },
  {
    "text": "into a territory where one ec2 boot failure can disrupt your entire deploy and that",
    "start": "2093359",
    "end": "2099839"
  },
  {
    "text": "sends you rolling back it really impacts your ability to move quickly and deploy multiple times a day in order to get the",
    "start": "2099839",
    "end": "2105359"
  },
  {
    "text": "features out so not only when when deploys failed that's not the only problem deploys were just slow sometimes",
    "start": "2105359",
    "end": "2112200"
  },
  {
    "text": "deploys would take a simple deploy would take hours to deploy across our our 10",
    "start": "2112200",
    "end": "2117839"
  },
  {
    "text": "AWS regions that we're running in so uh we really needed to solve this problem we need to get our deploys from hours",
    "start": "2117839",
    "end": "2123760"
  },
  {
    "text": "down to minutes and we were able to accomplish that with ec2 ECS and that's",
    "start": "2123760",
    "end": "2129560"
  },
  {
    "text": "that's been that's been massively helpful get getting those getting that functionality out to customers um the",
    "start": "2129560",
    "end": "2134920"
  },
  {
    "text": "other nice thing about fast deploys is it means uh roll backs are fast too which is really critical if something if",
    "start": "2134920",
    "end": "2141880"
  },
  {
    "text": "you deploy something that's not quite right it's very very quick to uh undo that and that's that's really helpful",
    "start": "2141880",
    "end": "2148680"
  },
  {
    "text": "for maintaining our slas with our",
    "start": "2148680",
    "end": "2152880"
  },
  {
    "text": "customers so the third area that that ECS has",
    "start": "2155800",
    "end": "2160880"
  },
  {
    "text": "really helped us uh grow is in terms of our traffic and that's not just that's",
    "start": "2160880",
    "end": "2166160"
  },
  {
    "text": "not just uh scaling up more containers running more tasks running more containers which is definitely true uh",
    "start": "2166160",
    "end": "2171839"
  },
  {
    "text": "We've we're running more containers than we ever have been before but uh cost is also a big a big factor in that because",
    "start": "2171839",
    "end": "2178040"
  },
  {
    "text": "that's what we all worry about as we grow how do we achieve um better margins lower cogs uh how do we achieve",
    "start": "2178040",
    "end": "2184920"
  },
  {
    "text": "economies of scale and the the first way that that ECS really helps with this is is instance packing",
    "start": "2184920",
    "end": "2191200"
  },
  {
    "text": "so take you have we have applications that are very CPU intensive they use almost all of the CPU uh of an instance",
    "start": "2191200",
    "end": "2197319"
  },
  {
    "text": "but almost no memory and then we have other applications that use a lot of memory and almost no no CPU what ECS",
    "start": "2197319",
    "end": "2204359"
  },
  {
    "text": "allows us to do is run both of those applications very very easily almost automatically run those on the same the",
    "start": "2204359",
    "end": "2210079"
  },
  {
    "text": "same instance and that means we're we're uh able to run fewer instances which",
    "start": "2210079",
    "end": "2215680"
  },
  {
    "text": "simplifies our infrastructure it also saves money so we're more fully utilizing the the resources we're",
    "start": "2215680",
    "end": "2221280"
  },
  {
    "text": "already paying for the second way uh ECS helps save",
    "start": "2221280",
    "end": "2228720"
  },
  {
    "start": "2223000",
    "end": "2399000"
  },
  {
    "text": "helps us save money is uh making it easier to use spot so spot allows you to",
    "start": "2228720",
    "end": "2234440"
  },
  {
    "text": "bid on unused ec2 capacity uh and get a at a fraction of the price you get a huge discount but the key to using spot",
    "start": "2234440",
    "end": "2241760"
  },
  {
    "text": "is to diversify across at scale to diversify across various types of inst",
    "start": "2241760",
    "end": "2246880"
  },
  {
    "text": "you can't run on one type of instance because what will happen is is if you lose that type of",
    "start": "2246880",
    "end": "2252280"
  },
  {
    "text": "instance uh you you need to be able to move your application over to another instance type so with spot Fleet and ECS",
    "start": "2252280",
    "end": "2259920"
  },
  {
    "text": "together spot Fleet will replace those those lost instances with a new type of instance and ECS will move our",
    "start": "2259920",
    "end": "2266359"
  },
  {
    "text": "containers over to the new capacity seamlessly we are not tightly coupled to a particular instance type or family we",
    "start": "2266359",
    "end": "2273319"
  },
  {
    "text": "can really run our application very easily and automatically on various types of",
    "start": "2273319",
    "end": "2279520"
  },
  {
    "text": "instances so these two uh cost saving measures have helped us run 25% fewer",
    "start": "2279520",
    "end": "2285240"
  },
  {
    "text": "instances by by packing the resources better and it's resulted that plus spot",
    "start": "2285240",
    "end": "2291200"
  },
  {
    "text": "has resulted in a 80 to 90% savings on our ec2 bill uh pretty massive impact on",
    "start": "2291200",
    "end": "2297119"
  },
  {
    "text": "our margins so ECS has helped us in terms of",
    "start": "2297119",
    "end": "2302280"
  },
  {
    "text": "growth of our team growth of our functionality and and growth of our our traffic we're running 21 Services 2,000",
    "start": "2302280",
    "end": "2310319"
  },
  {
    "text": "tasks and uh it's powering an API that uh Powers serves 1.3 billion requests",
    "start": "2310319",
    "end": "2316520"
  },
  {
    "text": "every day and uh it's doing it all with with Incredible margins that that uh we",
    "start": "2316520",
    "end": "2322079"
  },
  {
    "text": "never thought we'd be able to hit before so all this comes together to to mean that Mbox is ready for the the next",
    "start": "2322079",
    "end": "2329359"
  },
  {
    "text": "phase of growth thanks very",
    "start": "2329359",
    "end": "2332880"
  },
  {
    "text": "much thanks thank you uh I like billion uh like",
    "start": "2335280",
    "end": "2341920"
  },
  {
    "text": "anytime you see billions on the screen it makes me happy that a service can do so well helping mapbox not just scale",
    "start": "2341920",
    "end": "2347400"
  },
  {
    "text": "but also meet the get get them more efficient and hopefully with the new task placement features you'll get even",
    "start": "2347400",
    "end": "2353400"
  },
  {
    "text": "more efficient because those are the kinds of problems we really really want to get good at I think it's something that we strive to do and uh you know and",
    "start": "2353400",
    "end": "2360760"
  },
  {
    "text": "it's exciting to see how customers are using our uh using our services I'll add a sidebar uh the combin comination of",
    "start": "2360760",
    "end": "2366839"
  },
  {
    "text": "spot Fleet and ECS is actually a very very awesome combination uh for those of you who have not used spot Fleet uh you",
    "start": "2366839",
    "end": "2373839"
  },
  {
    "text": "can select fleets of uh spot instances and give it some high level requirements and the spot Fleet engine will do the",
    "start": "2373839",
    "end": "2379839"
  },
  {
    "text": "bidding for you within the constraints that you give it uh and especially if your applications are not coupled to a particular instance type uh and you're",
    "start": "2379839",
    "end": "2386240"
  },
  {
    "text": "running it inside ECS clusters which are fundamentally heterogenous uh you can get some really really interesting properties and uh it's it's it was",
    "start": "2386240",
    "end": "2393280"
  },
  {
    "text": "something that we thought about when we launched we didn't expect lots of people to do it but looks like people are which",
    "start": "2393280",
    "end": "2398480"
  },
  {
    "text": "is awesome moving forward and um we think of ECS as a foundational technology at",
    "start": "2398480",
    "end": "2407000"
  },
  {
    "start": "2399000",
    "end": "2452000"
  },
  {
    "text": "AWS what does that mean uh we obviously had a lot of customers who were asking",
    "start": "2408280",
    "end": "2413800"
  },
  {
    "text": "us to provide a managed container service that they could use to build their applications we also had a lot of",
    "start": "2413800",
    "end": "2419440"
  },
  {
    "text": "teams inside Amazon and AWS that wanted to do that so we not only have to think about what are the needs of every",
    "start": "2419440",
    "end": "2425839"
  },
  {
    "text": "customer that we have but also internal teams as they scale as they build new applications as they build new Services",
    "start": "2425839",
    "end": "2431319"
  },
  {
    "text": "what could we do other big big reason for us doing building our own container management system in the first place an",
    "start": "2431319",
    "end": "2437480"
  },
  {
    "text": "example and so it's not just about ec2 and S3 and dynamos so three of the core foundational services at Amazon we think",
    "start": "2437480",
    "end": "2444480"
  },
  {
    "text": "of ECS and ECR very much in the same vein not just from a functionality perspective but also from an operational",
    "start": "2444480",
    "end": "2452160"
  },
  {
    "start": "2452000",
    "end": "2490000"
  },
  {
    "text": "profile how many of you have bought stuff on Amazon just curious ious okay",
    "start": "2452760",
    "end": "2458240"
  },
  {
    "text": "just check in uh you may or may not have used a recommendation engine that tells you things like if so and so and so you",
    "start": "2458240",
    "end": "2464839"
  },
  {
    "text": "bought so and so other people bought something else uh that's our personalization engine and it's been on at Amazon for a long long time but that",
    "start": "2464839",
    "end": "2472079"
  },
  {
    "text": "team has also over the years enhanced how they do it they use a lot of machine learning software they now use gpus to",
    "start": "2472079",
    "end": "2478079"
  },
  {
    "text": "train neural Nets uh to do it uh but they were scaling that they have to scale their personalization system as",
    "start": "2478079",
    "end": "2484440"
  },
  {
    "text": "well and they wanted to figure out how to manage these clusters and they were running into all kinds of problems and",
    "start": "2484440",
    "end": "2490160"
  },
  {
    "text": "they decided to leverage ECS I won't go through the whole architecture of their personalization engine but to summarize",
    "start": "2490160",
    "end": "2496880"
  },
  {
    "text": "it they use ECS as sort of the master of all resources and they use",
    "start": "2496880",
    "end": "2502800"
  },
  {
    "text": "Uh custom placement systems to make sure that they're targeting their applications to P2 instances which they",
    "start": "2502800",
    "end": "2508040"
  },
  {
    "text": "use for the for their machine learning models and they and they combine it with spark of all things to get some really",
    "start": "2508040",
    "end": "2514200"
  },
  {
    "text": "really interesting capabilities uh and that's one of the it's something I'll talk about a little more in a in a bit",
    "start": "2514200",
    "end": "2520560"
  },
  {
    "text": "but people building custom sort of orchestration on top of ECS is not uncommon uh because we have a decoupled",
    "start": "2520560",
    "end": "2526760"
  },
  {
    "text": "system where orchestration sits on top of the core API you can do some very creative things uh with ECS and a great",
    "start": "2526760",
    "end": "2533040"
  },
  {
    "text": "example of someone who does that is the Amazon personalization",
    "start": "2533040",
    "end": "2539000"
  },
  {
    "start": "2539000",
    "end": "2693000"
  },
  {
    "text": "team about 10 years ago eight years ago when I joined Amazon uh actually even before",
    "start": "2541839",
    "end": "2548480"
  },
  {
    "text": "the nine my first use of Amazon was to do batch Computing it was we we had my",
    "start": "2548480",
    "end": "2554599"
  },
  {
    "text": "wife and I wanted to process some genomes don't ask why uh but we I had some old code sitting around from grad",
    "start": "2554599",
    "end": "2561160"
  },
  {
    "text": "school she had the data and we didn't have any computer we had one computer at home to try and process this on and this",
    "start": "2561160",
    "end": "2566559"
  },
  {
    "text": "is 9 years ago uh and ec2 had was still pretty new I had played around with it",
    "start": "2566559",
    "end": "2571760"
  },
  {
    "text": "but it was pretty cool we spun up a bunch I think about 20 instances that was my limit uh uh processed all the",
    "start": "2571760",
    "end": "2577079"
  },
  {
    "text": "data and we had the models that we needed to do our little hobby project it's kind of cool uh 6 months later I",
    "start": "2577079",
    "end": "2582960"
  },
  {
    "text": "ended up joining Amazon because that was so cool uh so batch Computing is something that's I'm super passionate",
    "start": "2582960",
    "end": "2588640"
  },
  {
    "text": "about and so are our customers they've been using ec2 for batch Computing from the very first days our first customers",
    "start": "2588640",
    "end": "2594040"
  },
  {
    "text": "that I worked with were hedge funds doing back testing and things like that on ec2 at night uh when we and people",
    "start": "2594040",
    "end": "2601319"
  },
  {
    "text": "have built two kinds of applications and had to do this in two ways they either bring in some schedule",
    "start": "2601319",
    "end": "2606640"
  },
  {
    "text": "that is built for a fix siiz cluster system or they end up writing a lot of their own batch Computing uh",
    "start": "2606640",
    "end": "2612040"
  },
  {
    "text": "orchestration uh and you heard a little bit about it this morning uh and many of them have started using ECS so we wanted",
    "start": "2612040",
    "end": "2618040"
  },
  {
    "text": "to change that so AWS batch which you heard about today is built on ECS it takes advantage of ecss resource",
    "start": "2618040",
    "end": "2624559"
  },
  {
    "text": "management system it takes advantage of ecss placement system and then they build in the orchestration system that",
    "start": "2624559",
    "end": "2630680"
  },
  {
    "text": "manages cues that manages priorities that makes decisions with AWS batch you actually don't have to pick in instance",
    "start": "2630680",
    "end": "2636319"
  },
  {
    "text": "types it'll pick them for you it'll actually scale your uh system when you depending on how busy it is uh and you",
    "start": "2636319",
    "end": "2642319"
  },
  {
    "text": "don't actually have to think about it uh all of this became a lot easier for us to build once we had ECR and ECS uh you",
    "start": "2642319",
    "end": "2649720"
  },
  {
    "text": "don't have to pick Docker you can run shell scripts you can put executables it'll do all the it'll actually essentially do a deployment for you uh",
    "start": "2649720",
    "end": "2656520"
  },
  {
    "text": "behind the scenes and on thousands and thousands of instances if required uh so",
    "start": "2656520",
    "end": "2661800"
  },
  {
    "text": "that are a very cool enablement enabling technology for us as you're thinking about how we build a batch Tech batch",
    "start": "2661800",
    "end": "2667319"
  },
  {
    "text": "Computing offering uh and we'll keep enhancing this as we go along uh and as ECS builds more features so those are",
    "start": "2667319",
    "end": "2674440"
  },
  {
    "text": "just two examples of how we think about AWS you heard from mapbox about how we",
    "start": "2674440",
    "end": "2679559"
  },
  {
    "text": "enable customers you saw a little bit about Expedia and these are two internal one Amazon service and one AWS service",
    "start": "2679559",
    "end": "2687160"
  },
  {
    "text": "that are built on top of what we do so we really really care about making sure that we can help you",
    "start": "2687160",
    "end": "2693240"
  },
  {
    "start": "2693000",
    "end": "2738000"
  },
  {
    "text": "scale uh I'll skip those because I kind of talked about that already and there's a more detailed batch Computing J talk",
    "start": "2694319",
    "end": "2700960"
  },
  {
    "text": "later uh in the interest of time um I'll keep going on so awesome I talked",
    "start": "2700960",
    "end": "2709400"
  },
  {
    "text": "about people building custom schedulers on ECS and part of that comes from and in fact AWS batch is kind of like that",
    "start": "2709400",
    "end": "2715640"
  },
  {
    "text": "as well is people want more control our developers keep saying hey we'd love to",
    "start": "2715640",
    "end": "2721000"
  },
  {
    "text": "have more knobs to move um more kinds of applications we can we can run",
    "start": "2721000",
    "end": "2726480"
  },
  {
    "text": "uh we we try and build well architectured systems and we our back end will make sure it's that but people",
    "start": "2726480",
    "end": "2731640"
  },
  {
    "text": "want more features they want more capabilities so how do we give them more control and the ability to customize what they",
    "start": "2731640",
    "end": "2738040"
  },
  {
    "start": "2738000",
    "end": "2792000"
  },
  {
    "text": "need so here's what they wanted to do they wanted to do uh Windows container",
    "start": "2738040",
    "end": "2744079"
  },
  {
    "text": "so it's actually something that we haven't made a big noise about but as of last week you can run Windows on ECS and",
    "start": "2744079",
    "end": "2749720"
  },
  {
    "text": "I think next week yes Scott you'll be able to put Windows uh images inside our registry uh actually can actually switch",
    "start": "2749720",
    "end": "2756960"
  },
  {
    "text": "between oci images and uh Docker images through using the registry as well uh I",
    "start": "2756960",
    "end": "2762359"
  },
  {
    "text": "talked a little bit about our console improvements I talked about the task placement engine and attribute based scheduling uh and the event stream all",
    "start": "2762359",
    "end": "2769599"
  },
  {
    "text": "of and the last sort of three features together really really form a powerful system that our customers can then",
    "start": "2769599",
    "end": "2776040"
  },
  {
    "text": "leverage to do more with it ECS so we started thinking about how to",
    "start": "2776040",
    "end": "2781440"
  },
  {
    "text": "make this available to customers what's the right form for us to do this and how can we make it possible so that they",
    "start": "2781440",
    "end": "2786839"
  },
  {
    "text": "don't always have to wait for us to integrate it into the full platform and operationalize it Etc that brings us to",
    "start": "2786839",
    "end": "2793520"
  },
  {
    "start": "2792000",
    "end": "2863000"
  },
  {
    "text": "AWS block U introduce brings us to blocks blocks is an open source framework for container orchestration",
    "start": "2793520",
    "end": "2800000"
  },
  {
    "text": "and scheduling on top of ECS it does what does it do it helps you create",
    "start": "2800000",
    "end": "2807079"
  },
  {
    "text": "custom schedulers it can integrate with third party schedul something you may already have and it helps and our goal",
    "start": "2807079",
    "end": "2813000"
  },
  {
    "text": "is to make it easier for you to develop locally test and and then deploy into production on ews that's kind of what",
    "start": "2813000",
    "end": "2818839"
  },
  {
    "text": "our customers ask for and that's what we are trying to solve with blocks and today is just the first release",
    "start": "2818839",
    "end": "2827040"
  },
  {
    "text": "uh what you'll get today is that's not the direction I want to go yeah that's",
    "start": "2827200",
    "end": "2832800"
  },
  {
    "text": "where I want to go um today you get two components a cluster State service and",
    "start": "2832800",
    "end": "2838599"
  },
  {
    "text": "aul we'll also over time our plan is to move the ECS CLI into the blocks project",
    "start": "2838599",
    "end": "2843960"
  },
  {
    "text": "as well um let's talk a little bit about the cluster State service and I won't spend too much time on this because at",
    "start": "2843960",
    "end": "2849599"
  },
  {
    "text": "12:30 uh you'll have a whole detailed demo and description of not just blocks",
    "start": "2849599",
    "end": "2855160"
  },
  {
    "text": "but also the task placement engine you'll actually see them in action uh very soon so that's uh that'll give you",
    "start": "2855160",
    "end": "2860400"
  },
  {
    "text": "a chance to see how it works but U essentially the way blocks works is you have an ECS cluster you now have an",
    "start": "2860400",
    "end": "2867680"
  },
  {
    "start": "2863000",
    "end": "2927000"
  },
  {
    "text": "event stream what we found our customers were doing was they needed a way to as the buildt schedulers they earlier they",
    "start": "2867680",
    "end": "2874160"
  },
  {
    "text": "were pulling apis the the event stream takes that problem away but on top after that they had to figure out a way to",
    "start": "2874160",
    "end": "2879599"
  },
  {
    "text": "persist those events that state of the system across maybe multiple clusters they needed a way to search and filter",
    "start": "2879599",
    "end": "2886119"
  },
  {
    "text": "and they needed an API on which they could write schedulers and they were building all of that themselves so the cluster State service is essentially a",
    "start": "2886119",
    "end": "2892520"
  },
  {
    "text": "piece of code that does that it also uh periodically syncs with the ECS cluster",
    "start": "2892520",
    "end": "2897800"
  },
  {
    "text": "and actually reconciles state if there's any drift between the state of your uh on your local the cluster State service",
    "start": "2897800",
    "end": "2903720"
  },
  {
    "text": "can run on your laptop and it make sure that the state has not drifted and on top of that you can then build your own",
    "start": "2903720",
    "end": "2909599"
  },
  {
    "text": "schedule and you can periodically query this state Service uh for building a schedulers you can run the state service",
    "start": "2909599",
    "end": "2915160"
  },
  {
    "text": "on on your laptop on an ec2 instance on ECS uh our goal is to have you run it",
    "start": "2915160",
    "end": "2921280"
  },
  {
    "text": "wherever you want and along with that we're also providing a demon",
    "start": "2921280",
    "end": "2927680"
  },
  {
    "start": "2927000",
    "end": "2962000"
  },
  {
    "text": "Schuler uh that uh that essentially FMS as a reference for how you build schedulers on AWS on ECS but also make",
    "start": "2927680",
    "end": "2935319"
  },
  {
    "text": "gives you a functional schedule that many of our customers have wanted where they say want to run a logging driver or some other kind of process but only one",
    "start": "2935319",
    "end": "2942280"
  },
  {
    "text": "of those per host and restart them if something happens or new host come into your cluster so what's our vision and",
    "start": "2942280",
    "end": "2949319"
  },
  {
    "text": "I'm super excited about this the team's been working on this for the last few months we you know we're just getting started uh is to give all of you more",
    "start": "2949319",
    "end": "2957520"
  },
  {
    "text": "control and actually to work with you to figure out where to take our service in the future so what we are releasing today uh",
    "start": "2957520",
    "end": "2965680"
  },
  {
    "text": "you know helps you get started our goal is to give you a selection of a wide variety of schedulers either schedulers we build or schedulers built by the",
    "start": "2965680",
    "end": "2972799"
  },
  {
    "text": "community uh we wanted to give a give you a consistent development experience that starts locally and gets ends up on",
    "start": "2972799",
    "end": "2979240"
  },
  {
    "text": "ECS uh so you'll get you know a lot of common abstractions the common ability to model these uh applications but",
    "start": "2979240",
    "end": "2985680"
  },
  {
    "text": "really I'm looking forward to what people do uh you know we we have customers who want to run something like marathon on top of ECS or Kronos uh this",
    "start": "2985680",
    "end": "2993160"
  },
  {
    "text": "is a mechanism for them to do so uh we've already had P requests on other kinds of schedulers coming and running",
    "start": "2993160",
    "end": "2999640"
  },
  {
    "text": "on top of ECS since the announcement was made this morning so super exciting times but it only works if all of you",
    "start": "2999640",
    "end": "3004839"
  },
  {
    "text": "get involved and we'd love to work with you so you know that's the URL uh join us in our GA Channel submit pull request",
    "start": "3004839",
    "end": "3011680"
  },
  {
    "text": "submit issues and you'll find that the team will work with will be will be super excited uh to work with you on",
    "start": "3011680",
    "end": "3018160"
  },
  {
    "text": "blocks uh understand your problems and we would love to see where the community guides us over time um so",
    "start": "3018160",
    "end": "3026760"
  },
  {
    "text": "I'm running out of time so I'll try to uh wrap this up I know there's other talks in other parts of the building uh",
    "start": "3026760",
    "end": "3032520"
  },
  {
    "text": "so what does this mean uh so you heard from actually I forgot this slide you heard from Neil hunt earlier today about",
    "start": "3032520",
    "end": "3038720"
  },
  {
    "start": "3033000",
    "end": "3080000"
  },
  {
    "text": "how Netflix is adopting blocks there were actually key drivers for us starting to use block to build blocks uh",
    "start": "3038720",
    "end": "3045040"
  },
  {
    "text": "where they're running you know 100,000 instances uh they have they have lots of microservices across their entire",
    "start": "3045040",
    "end": "3051319"
  },
  {
    "text": "infrastructure but they started adopting containers to improve for some of the same reasons that mapbx talked about for",
    "start": "3051319",
    "end": "3056760"
  },
  {
    "text": "develop prodct productivity reasons to make their teams faster uh but they also wanted to do a lot of customization and",
    "start": "3056760",
    "end": "3063440"
  },
  {
    "text": "they have a system called Titus and they're moving that system onto ECS and we you know blocks came out of our",
    "start": "3063440",
    "end": "3069359"
  },
  {
    "text": "collaboration on trying to understand what those requirements for them were what would make it easier for them to do so and uh you know we'll be we're super",
    "start": "3069359",
    "end": "3076680"
  },
  {
    "text": "excited to keep working with them on taking it forward so we have a full agenda today",
    "start": "3076680",
    "end": "3082839"
  },
  {
    "start": "3080000",
    "end": "3122000"
  },
  {
    "text": "from some of the customers you saw earlier from our engineering team you will uh you'll you'll see a",
    "start": "3082839",
    "end": "3088079"
  },
  {
    "text": "comparison between all the various container management platforms that we have and uh sort of questions that you",
    "start": "3088079",
    "end": "3093160"
  },
  {
    "text": "can ask yourself to make those decisions uh you have talks on microservices uh you have talks on image optimization you",
    "start": "3093160",
    "end": "3099480"
  },
  {
    "text": "get a deep dive on blocks and on the E ec2 container registry uh you'll hear from folks from Netflix Capital One",
    "start": "3099480",
    "end": "3105280"
  },
  {
    "text": "rental center Pinterest instacart you uh VI and here and probably more that I'm",
    "start": "3105280",
    "end": "3111440"
  },
  {
    "text": "forgetting so apologies uh and uh thank thank you for",
    "start": "3111440",
    "end": "3116970"
  },
  {
    "text": "[Applause] coming",
    "start": "3116970",
    "end": "3124319"
  }
]