[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "my name is Steve see more I am a specialist solutions architect for networking I work across Europe Middle",
    "start": "3330",
    "end": "9600"
  },
  {
    "text": "Eastern Africa and I'm based in London so thank you very much for having me back here in Tel Aviv again the purpose",
    "start": "9600",
    "end": "16830"
  },
  {
    "text": "of this session is to take you through some of the fundamentals of creating your v pc or virtual private cloud with",
    "start": "16830",
    "end": "22740"
  },
  {
    "text": "in AWS if you already have VPC if you're already used to configuring things like",
    "start": "22740",
    "end": "28140"
  },
  {
    "text": "route tables internet gateways virtual gateways that kind of thing you're probably in the wrong session this is",
    "start": "28140",
    "end": "34110"
  },
  {
    "text": "about the basics we're starting from the beginning and as part of this session we're going to build a very basic internet connected VPC also then going",
    "start": "34110",
    "end": "42059"
  },
  {
    "text": "to explore a few other topics related to v pc so peering remote connectivity over",
    "start": "42059",
    "end": "47159"
  },
  {
    "text": "VPN and direct connect and a few other features that we've announced in the last six months or so so where do we",
    "start": "47159",
    "end": "54720"
  },
  {
    "text": "start well first of all you've probably got an ec2 instance or you're familiar with ec2 this is Elastic Compute cloud",
    "start": "54720",
    "end": "61470"
  },
  {
    "start": "55000",
    "end": "166000"
  },
  {
    "text": "it's the unit of compute that we have a virtual machine you might have a single one or as the name ed elastic in ec2",
    "start": "61470",
    "end": "70110"
  },
  {
    "text": "implies you might have many ec2 instances and you might be scaling up you might be scaling down and this is",
    "start": "70110",
    "end": "76590"
  },
  {
    "text": "great this is ec2 running inside AWS but the thing is running inside AWS you need",
    "start": "76590",
    "end": "83310"
  },
  {
    "text": "to be able to get to these ec2 instances which means you're going to need some sort of network so whether you're",
    "start": "83310",
    "end": "89370"
  },
  {
    "text": "familiar with networking already and you're familiar with concepts such as firewalling routing etc within your data",
    "start": "89370",
    "end": "94710"
  },
  {
    "text": "center or whether perhaps you're from a more development based background where you haven't had to think too much about",
    "start": "94710",
    "end": "100380"
  },
  {
    "text": "networking in the past the objective of this session is to show you that actually within AWS the concepts of",
    "start": "100380",
    "end": "106560"
  },
  {
    "text": "networking are actually pretty simple so for both the experienced and the inexperienced with networking you should",
    "start": "106560",
    "end": "112110"
  },
  {
    "text": "all be able to configure your VPC quite easily by the end of this session so VPC",
    "start": "112110",
    "end": "119460"
  },
  {
    "text": "what is it it's virtual private cloud so this is the virtual networking environment we have inside AWS for",
    "start": "119460",
    "end": "126060"
  },
  {
    "text": "connecting your easy to resources together and to things like the internet or your private network within your VPC",
    "start": "126060",
    "end": "132930"
  },
  {
    "text": "you get to decide things like the IP address ranges that we're using if you want to the individual IP",
    "start": "132930",
    "end": "138090"
  },
  {
    "text": "addresses that we are selling to the ec2 instances within that VPC you also get",
    "start": "138090",
    "end": "144840"
  },
  {
    "text": "to define things like subnet so we're going to talk about it in a bit more detail later on in the session but you get to configure routing so we want to",
    "start": "144840",
    "end": "151560"
  },
  {
    "text": "be able to connect our VPC out to the internet so as you can see here on the right hand side we've got a Rooter which",
    "start": "151560",
    "end": "158670"
  },
  {
    "text": "is that that route table icon down in the bottom corner connected to the internet this is the environment that we're going to be building as part of",
    "start": "158670",
    "end": "164340"
  },
  {
    "text": "this session okay so what should you expect by the end of it you should be",
    "start": "164340",
    "end": "170250"
  },
  {
    "start": "166000",
    "end": "215000"
  },
  {
    "text": "very familiar with basic VPC concepts you will have seen the walkthrough of a",
    "start": "170250",
    "end": "176190"
  },
  {
    "text": "complete VPC set up a very basic one connecting your VPC to the internet exposing your ec2 instances that they",
    "start": "176190",
    "end": "182340"
  },
  {
    "text": "can serve traffic but by the end of this session you will have seen a complete walkthrough of that process and also",
    "start": "182340",
    "end": "188250"
  },
  {
    "text": "we'll be looking at ways that you can tailor that environment to meet your specific needs so perhaps controlling",
    "start": "188250",
    "end": "193620"
  },
  {
    "text": "that access using things like security groups and network ACLs to manage which traffic can come and go from your VPC",
    "start": "193620",
    "end": "199620"
  },
  {
    "text": "that's the goal for this first part of this session so let's jump straight in",
    "start": "199620",
    "end": "204810"
  },
  {
    "text": "let's look at building this internet-connected VPC it's very basic is very simple but it's probably the",
    "start": "204810",
    "end": "210360"
  },
  {
    "text": "thing that most of you need to achieve with your networking environment inside AWS these are the components and the the",
    "start": "210360",
    "end": "218130"
  },
  {
    "text": "steps we're going to be walking through and the first one is actually really really important you have to choose an",
    "start": "218130",
    "end": "223590"
  },
  {
    "text": "IP address range that we're going to use for the VPC once you've done that we're then going to configure our subnets and",
    "start": "223590",
    "end": "229500"
  },
  {
    "text": "these are line to availability zone so what we'll touch on that in more detail along the way we're then going to look",
    "start": "229500",
    "end": "235950"
  },
  {
    "text": "at how do we connect our VPC out to the internet because without connection to the internet or your on-premises network",
    "start": "235950",
    "end": "241470"
  },
  {
    "text": "is a pretty lonely VPC can't talk to anyone no one can talk to it so let's get it connected to the internet and",
    "start": "241470",
    "end": "246870"
  },
  {
    "text": "then we're going to look at how we authorize the traffic so they're the steps involved in connecting your VPC",
    "start": "246870",
    "end": "252920"
  },
  {
    "text": "start with that important topic at the very beginning choosing an address range okay cider notation classless",
    "start": "252920",
    "end": "261780"
  },
  {
    "start": "257000",
    "end": "311000"
  },
  {
    "text": "inter-domain routing this is a way of representing an IP address range that",
    "start": "261780",
    "end": "266970"
  },
  {
    "text": "we're going to use throughout this presentation if you're not familiar with it this is",
    "start": "266970",
    "end": "272250"
  },
  {
    "text": "what it means so if you take an IP address and you break it out in binary this is what it would look like so 172",
    "start": "272250",
    "end": "277759"
  },
  {
    "text": "3100 looks like that in binary the / 16 on the end or what that specifies is",
    "start": "277759",
    "end": "283800"
  },
  {
    "text": "we're going to take four high 16 bits of the 32 bits that make up this address and we're going to fix them everything",
    "start": "283800",
    "end": "291419"
  },
  {
    "text": "else we can change what that means in English is that 17 to 31 is fixed and we",
    "start": "291419",
    "end": "297389"
  },
  {
    "text": "can use any values between 0 and 255 for the zeros on the end there so that's how",
    "start": "297389",
    "end": "303150"
  },
  {
    "text": "we're going to be representing IP address ranges throughout this session and it's how we use them within VPC and within subnets in AWS so let's choose",
    "start": "303150",
    "end": "313620"
  },
  {
    "start": "311000",
    "end": "442000"
  },
  {
    "text": "our IP address range for this session I've picked 17 to 30 100 / 16 Wi-Fi pics",
    "start": "313620",
    "end": "319409"
  },
  {
    "text": "/ 16 well first of all it's a nice large amount of address space / 16 is around",
    "start": "319409",
    "end": "325490"
  },
  {
    "text": "65,000 IP addresses probably enough to get by for now if you have a choice then",
    "start": "325490",
    "end": "332340"
  },
  {
    "text": "please go for something as large as a / 16 it gives you the option to be flexible later on and also choosing the",
    "start": "332340",
    "end": "338610"
  },
  {
    "text": "side a block of ips for your VPC is one of the few things that you can't actually change once you've created the",
    "start": "338610",
    "end": "344279"
  },
  {
    "text": "VPC you can of course delete the VPC and create a new one define a new range that's absolutely fine but it's one of",
    "start": "344279",
    "end": "351060"
  },
  {
    "text": "the things you can't change once you've created the VPC and you started using it why have we chosen 17 to 30 117 231 is",
    "start": "351060",
    "end": "359699"
  },
  {
    "text": "part of a range of addresses called that are listed in RFC 1918 that known as private IP addresses so you might have",
    "start": "359699",
    "end": "366300"
  },
  {
    "text": "seen 192 168 10 dot and 17 231 is part of one of the other ranges in RFC 1918",
    "start": "366300",
    "end": "373460"
  },
  {
    "text": "now you can pick absolutely any IP address range you like this is a virtual private cloud so within VPC you can use",
    "start": "373460",
    "end": "380849"
  },
  {
    "text": "any IP addressing whatever you want to use you could even use some public IP addressing if you liked we wouldn't root",
    "start": "380849",
    "end": "386250"
  },
  {
    "text": "it out on the internet but within your VPC it will work absolutely fine but where possible use RFC 1918 addresses",
    "start": "386250",
    "end": "393060"
  },
  {
    "text": "and this is because when you're working with other people either in your organization or elsewhere rse 1918 makes",
    "start": "393060",
    "end": "398490"
  },
  {
    "text": "it very clear that this is a private network let's say the / 16 gives us east for",
    "start": "398490",
    "end": "404130"
  },
  {
    "text": "thousands of dresses so hopefully enough to get by and one really really",
    "start": "404130",
    "end": "410370"
  },
  {
    "text": "important thing if you have some existing networking in place within your environment please make sure you don't",
    "start": "410370",
    "end": "416790"
  },
  {
    "text": "overlap your VPC with your existing network you may have no plans at this point to connect the two together but",
    "start": "416790",
    "end": "423210"
  },
  {
    "text": "why make life hard for yourself in the future if potentially you do so try and avoid overlapping IP address ranges this",
    "start": "423210",
    "end": "429930"
  },
  {
    "text": "includes in other V pcs and with your on-premises network so just make sure that each time you create a VPC you pick",
    "start": "429930",
    "end": "436650"
  },
  {
    "text": "unique block of IP addresses within the environment with which you plan to work",
    "start": "436650",
    "end": "441860"
  },
  {
    "start": "442000",
    "end": "470000"
  },
  {
    "text": "so now that we have defined RV pcs we need to start thinking about subnetting or creating subnets inside our VPC now",
    "start": "442669",
    "end": "449820"
  },
  {
    "text": "everything you're going to be seeing throughout this session is demonstrating what we see within the AWS console now",
    "start": "449820",
    "end": "455220"
  },
  {
    "text": "obviously everything that we do within the console you can actually do via command line by the api's but just in",
    "start": "455220",
    "end": "461610"
  },
  {
    "text": "terms of making the slides look a little bit more interesting we've used the console for the screenshots but you get the idea that you can do this fire one",
    "start": "461610",
    "end": "467370"
  },
  {
    "text": "of our many ways of interacting with our AP is so here's our VP see we've got our 17 to 31 / 16 address range now within",
    "start": "467370",
    "end": "477150"
  },
  {
    "start": "470000",
    "end": "572000"
  },
  {
    "text": "AWS we're going to be working in the EU West one region here in Ireland you're probably familiar with the term",
    "start": "477150",
    "end": "482700"
  },
  {
    "text": "availability zone another thing about an availability zone you can think of it if you like as a data center it doesn't",
    "start": "482700",
    "end": "489360"
  },
  {
    "text": "exactly match one to one and availability zone can actually be many data centers with an AWS but the point",
    "start": "489360",
    "end": "495180"
  },
  {
    "text": "about an availability zone is it has a different risk profile so if there happen to be something that impacted one",
    "start": "495180",
    "end": "501000"
  },
  {
    "text": "availability zone then hopefully it won't impact another one and when you architect your applications you should",
    "start": "501000",
    "end": "506130"
  },
  {
    "text": "be spreading them across multiple availability zones so let's put the availability zones or az's on to our",
    "start": "506130",
    "end": "512130"
  },
  {
    "text": "diagram we've got three phases here in the EU West one region a B and C and",
    "start": "512130",
    "end": "518580"
  },
  {
    "text": "when we create our subnet they are aligned to a particular availability zone so you can see here three",
    "start": "518580",
    "end": "524520"
  },
  {
    "text": "individual subnets they dont span availability zones they're within a single one and to keep things simple",
    "start": "524520",
    "end": "529770"
  },
  {
    "text": "i've put a single subnet in each availability zone you can of course create as many you like up to the amount of addresses",
    "start": "529770",
    "end": "536639"
  },
  {
    "text": "you have available now I've picked some dressings for these subnets so within 17",
    "start": "536639",
    "end": "542910"
  },
  {
    "text": "to 31 we're then going to have zero dot 0 / 24 / 10 / 24 and dot to dot 0 / 24",
    "start": "542910",
    "end": "551189"
  },
  {
    "text": "so why have I picked / 24 well again this is a good pattern if you don't have",
    "start": "551189",
    "end": "556829"
  },
  {
    "text": "any other particular specific requirements a / 24 of address space gives you plenty of ips within that",
    "start": "556829",
    "end": "562860"
  },
  {
    "text": "individual subnet and if you need more you can quite easily create another subnet of another / 24 within each of",
    "start": "562860",
    "end": "569069"
  },
  {
    "text": "those availability zones one other thing that we're going to do on these subnets",
    "start": "569069",
    "end": "575370"
  },
  {
    "start": "572000",
    "end": "655000"
  },
  {
    "text": "is we're going to enable enable something which is called auto assign public IP now what this means is",
    "start": "575370",
    "end": "580589"
  },
  {
    "text": "whenever we create an ec2 instance in this subnet by default we're going to give it both a private IP inside your",
    "start": "580589",
    "end": "587430"
  },
  {
    "text": "VPC we're also going to give it a public IP so now in theory it could be reached over the Internet if we can figure a",
    "start": "587430",
    "end": "593939"
  },
  {
    "text": "bunch of other things that we're going to look at now the thing about this parameter is it makes things easy in",
    "start": "593939",
    "end": "599579"
  },
  {
    "text": "terms of launching ec2 instances of making them reachable and you can always override this option on an individual",
    "start": "599579",
    "end": "605670"
  },
  {
    "text": "subnet basis or on an individual ec2 instance basis but we're going to set the default now to automatically assign",
    "start": "605670",
    "end": "611850"
  },
  {
    "text": "a public IP address now just going back to the / 24 of IP addresses that we've",
    "start": "611850",
    "end": "618990"
  },
  {
    "text": "allocated that's going to give us 251 available IP addresses now those of you",
    "start": "618990",
    "end": "625170"
  },
  {
    "text": "that are good at maths you'll realize that's not the same as 256 which is what we should be able to assign from a / 24",
    "start": "625170",
    "end": "632480"
  },
  {
    "text": "the reason is that we actually reserved some of the IP addresses so we reserve",
    "start": "632480",
    "end": "637680"
  },
  {
    "text": "the lower for IP addresses so the network address and then the first three and we also reserve the upper address as",
    "start": "637680",
    "end": "644699"
  },
  {
    "text": "well so the 255 so their addresses that you can't use but you can launch your ec2 instances to use any of the other IP",
    "start": "644699",
    "end": "651000"
  },
  {
    "text": "addresses within that subnet so a couple of basic concepts just to",
    "start": "651000",
    "end": "658910"
  },
  {
    "start": "655000",
    "end": "714000"
  },
  {
    "text": "recap on that we're going to use a / 16 that gives you your 64,000 or so IP addresses we're going to have our / 24",
    "start": "658910",
    "end": "665029"
  },
  {
    "text": "with our 251 usable IP addresses and we're going to assign one subnet / availability zone this is a very very",
    "start": "665029",
    "end": "672079"
  },
  {
    "text": "simple VPC and of course you might want to do something different so we're going",
    "start": "672079",
    "end": "677690"
  },
  {
    "text": "to look at the concepts later on a perhaps public and private subnets where you might want more than one suddenly in a particular availability zone we're",
    "start": "677690",
    "end": "684709"
  },
  {
    "text": "going to look at changing the routing within the environment these are all good reasons why you might want to do something different and the / 16 to go",
    "start": "684709",
    "end": "691519"
  },
  {
    "text": "back to that point you might already have an internal IP addressing schema that says we can't allocate a whole / 16",
    "start": "691519",
    "end": "697550"
  },
  {
    "text": "every time we create a VPC we need to allocate something smaller what I say is start from a basic set of concepts",
    "start": "697550",
    "end": "703720"
  },
  {
    "text": "document them and then establish that as your standard you can always adjust it later on if you need to but these are",
    "start": "703720",
    "end": "709519"
  },
  {
    "text": "these are good starting points if you don't have something already in place",
    "start": "709519",
    "end": "714190"
  },
  {
    "text": "okay so we don't have our VP see we've got our subnets created within it we could launch some ec2 instances as I",
    "start": "715510",
    "end": "722420"
  },
  {
    "text": "said earlier it's going to be a pretty lonely place because without anything else we can't talk to this VPC we can't",
    "start": "722420",
    "end": "727790"
  },
  {
    "text": "communicate with the ec2 instances and they can't communicate with anything else either it's a closed off private",
    "start": "727790",
    "end": "733310"
  },
  {
    "text": "network remember you're in control of this virtual private cloud so we need to create a route out to the Internet now",
    "start": "733310",
    "end": "741440"
  },
  {
    "start": "740000",
    "end": "782000"
  },
  {
    "text": "this is where things get interesting in our vp see everything interesting in a VPC relates to a route table so we're",
    "start": "741440",
    "end": "747110"
  },
  {
    "text": "going to see a few of these now a route table is basically a list of rules that says I have a packet I'm trying to send",
    "start": "747110",
    "end": "753649"
  },
  {
    "text": "it somewhere how do I get to that place it's a very simple concept and when we",
    "start": "753649",
    "end": "758899"
  },
  {
    "text": "create the VPC we also create what's called a main route table or a default route table however one of the very",
    "start": "758899",
    "end": "765680"
  },
  {
    "text": "powerful things about VPC is you don't have to just use that default route table that we give you you can create as",
    "start": "765680",
    "end": "771260"
  },
  {
    "text": "many route tables as you need to associate with your individual subnets so now each subnet can have its own",
    "start": "771260",
    "end": "777290"
  },
  {
    "text": "routing table if you want to so the purposes of this we're going to stick with our main routing table so this is",
    "start": "777290",
    "end": "783890"
  },
  {
    "start": "782000",
    "end": "820000"
  },
  {
    "text": "what it looks like you see the route table listed there at the top and down at the bottom here we have an",
    "start": "783890",
    "end": "788930"
  },
  {
    "text": "entry that says 17 to 30 100 / 16 our VPC and it says the target so where am I",
    "start": "788930",
    "end": "796700"
  },
  {
    "text": "going to send traffic for those addresses is local what that means is everything inside my VPC can talk to",
    "start": "796700",
    "end": "802310"
  },
  {
    "text": "each other and you can't remove that entry that's our main route table",
    "start": "802310",
    "end": "808100"
  },
  {
    "text": "nothing else in it which is why we can't actually talk to the internet because we don't have a root in there that says I'm",
    "start": "808100",
    "end": "813170"
  },
  {
    "text": "trying to send traffic to something on the internet how do I get there that's why the moment this is a closed off environment so now we need to create",
    "start": "813170",
    "end": "823459"
  },
  {
    "start": "820000",
    "end": "855000"
  },
  {
    "text": "what's called an Internet gateway now the thing about an Internet gateway is it's not a Rooter an individual single",
    "start": "823459",
    "end": "830420"
  },
  {
    "text": "Rooter you know a single point of failure it's actually a highly available service that we provide but we represent",
    "start": "830420",
    "end": "835520"
  },
  {
    "text": "it to you as a single object within your account an Internet gateway you're going",
    "start": "835520",
    "end": "840680"
  },
  {
    "text": "to attach that Internet gateway to your VPC so you can see here we have I GW and an identifier and on the right-hand side",
    "start": "840680",
    "end": "847279"
  },
  {
    "text": "we can see it's attached to our DPC and the thing about this internet gateway is we want to be able to send traffic here",
    "start": "847279",
    "end": "852920"
  },
  {
    "text": "that is destined for the Internet so how do we do that well we go back to our route tables remember this is the place",
    "start": "852920",
    "end": "858589"
  },
  {
    "start": "855000",
    "end": "887000"
  },
  {
    "text": "the interesting things happen in our DPC we've got our local entry they're still at the top but we've now added another",
    "start": "858589",
    "end": "865130"
  },
  {
    "text": "entry and we've put 0 0 0 0 / 0 what that means is all available IP addresses",
    "start": "865130",
    "end": "871550"
  },
  {
    "text": "it's the default route so we're now saying if traffic is destined for something that is not our local VPC",
    "start": "871550",
    "end": "877790"
  },
  {
    "text": "please send that traffic to the internet gateway hooray now our VPC can talk to",
    "start": "877790",
    "end": "883070"
  },
  {
    "text": "the internet and people can talk to us",
    "start": "883070",
    "end": "886330"
  },
  {
    "text": "okay now now that things are connected and we can talk to the Internet we",
    "start": "888129",
    "end": "893569"
  },
  {
    "text": "actually need to think about what do we want to allow to happen it's all very well having this channel of communication but we probably want to",
    "start": "893569",
    "end": "899180"
  },
  {
    "text": "make sure that it's secure that we're controlling that traffic we have two things that we can give you to help do",
    "start": "899180",
    "end": "904999"
  },
  {
    "text": "this now in a traditional networking environment you might be looking at you know a firewall of some sort with a very",
    "start": "904999",
    "end": "910459"
  },
  {
    "text": "detailed rule base well we have an equivalent inside AWS in the form of network acl's and security groups now",
    "start": "910459",
    "end": "918290"
  },
  {
    "start": "917000",
    "end": "971000"
  },
  {
    "text": "first of all we're going to start with network acl's it's a simpler concept now the thing about a network ACL is it is",
    "start": "918290",
    "end": "924649"
  },
  {
    "text": "stateless now what a stateless firewall does is it means that we have to take traffic coming into our ec2 instances",
    "start": "924649",
    "end": "932209"
  },
  {
    "text": "coming through our network ACL and we have to define a rule that allows that but then the reply to that traffic also",
    "start": "932209",
    "end": "939290"
  },
  {
    "text": "needs to be allowed because we aren't tracking the state you might have heard of connection tracking we don't do that",
    "start": "939290",
    "end": "944600"
  },
  {
    "text": "within a network ACL we need to define the traffic both inbound and outbound",
    "start": "944600",
    "end": "950350"
  },
  {
    "text": "you can take that network ACL and you can apply it to an individual subnet so",
    "start": "950350",
    "end": "955699"
  },
  {
    "text": "now we're not actually talking about the individual ec2 instances we're saying traffic is either allowed or denied",
    "start": "955699",
    "end": "960769"
  },
  {
    "text": "coming into the subnet so we can use this as a very simple tool to block or",
    "start": "960769",
    "end": "966259"
  },
  {
    "text": "allow traffic at quite a high level before it gets anywhere near our ec2 instances just to zoom in a little bit",
    "start": "966259",
    "end": "973790"
  },
  {
    "start": "971000",
    "end": "995000"
  },
  {
    "text": "these are the two rules that are currently in this network ACL and actually where you can probably see there that top entry says rule 100 comes",
    "start": "973790",
    "end": "981829"
  },
  {
    "text": "above the the default deny the default drop at the bottom what does it actually do well basically it says allow",
    "start": "981829",
    "end": "987649"
  },
  {
    "text": "everything so in my very simple VPC what I've decided to do is allow all traffic",
    "start": "987649",
    "end": "992689"
  },
  {
    "text": "through the network ACL now let's look at the other control that we give you to",
    "start": "992689",
    "end": "998990"
  },
  {
    "start": "995000",
    "end": "1243000"
  },
  {
    "text": "manage security we have security groups so here's a bunch of ec2 instances we haven't got the individual subnets or",
    "start": "998990",
    "end": "1005139"
  },
  {
    "text": "anything shown on this diagram we have a bunch of front-end let's save web servers the orange security groups are",
    "start": "1005139",
    "end": "1012370"
  },
  {
    "text": "used around them and we have some back-end instances here packed some sort of application or a database or",
    "start": "1012370",
    "end": "1018250"
  },
  {
    "text": "something like that and the thing about security groups is they usually follow the structure of",
    "start": "1018250",
    "end": "1023470"
  },
  {
    "text": "your actual application and what do I mean by that well what we're going to do is define a security group that's called",
    "start": "1023470",
    "end": "1029949"
  },
  {
    "text": "my web servers and we're going to apply that security group to all of those instances at the top because they're",
    "start": "1029949",
    "end": "1036370"
  },
  {
    "text": "going to share a common rule base they're going to allow a certain type of traffic to all of those web servers you",
    "start": "1036370",
    "end": "1041410"
  },
  {
    "text": "know typically is going to be port 80 or similar our back-end servers here our database or our application again we can",
    "start": "1041410",
    "end": "1048250"
  },
  {
    "text": "actually group those together we know that they're going to be accepting a certain type of traffic from a certain place so let's create a security group",
    "start": "1048250",
    "end": "1055090"
  },
  {
    "text": "and apply to all of those as well for that web server security group as I said",
    "start": "1055090",
    "end": "1061000"
  },
  {
    "text": "we're going to use them as web service as an example what we want to do is actually allow all traffic from anywhere",
    "start": "1061000",
    "end": "1066160"
  },
  {
    "text": "on port 80 their web servers they've got to be able to be visible to the world but for those back-end servers we",
    "start": "1066160",
    "end": "1073690"
  },
  {
    "text": "actually don't want anyone to be able to talk to them directly so the security group that we configure for these back-end servers needs to be configured",
    "start": "1073690",
    "end": "1080530"
  },
  {
    "text": "to allow traffic from at the web servers only so you can draw a diagram like this to simplify what your security groups",
    "start": "1080530",
    "end": "1087190"
  },
  {
    "text": "need to do and once you've worked out that we have two very logical groupings here of web servers versus back-end",
    "start": "1087190",
    "end": "1092500"
  },
  {
    "text": "servers we can configure the security groups so what we've got here is a security group called my web servers and",
    "start": "1092500",
    "end": "1098080"
  },
  {
    "text": "quite predictably it allows HTTP on port 80 from anywhere the source is 0 0 0 0 /",
    "start": "1098080",
    "end": "1104290"
  },
  {
    "text": "0 again that's now allowing that traffic from the internet through the internet gateway is passing through the network",
    "start": "1104290",
    "end": "1110380"
  },
  {
    "text": "ACL on the subnet and now getting through to our web servers on port 80 but we're not allowing anything else",
    "start": "1110380",
    "end": "1116260"
  },
  {
    "text": "because security groups are denied by default so we've allowed port 80 everything else is blocked so we have no",
    "start": "1116260",
    "end": "1122080"
  },
  {
    "text": "one trying to login via ssh or anything else to our web servers the traffic will never get to your operating system",
    "start": "1122080",
    "end": "1127900"
  },
  {
    "text": "running on those ec2 instances if we now",
    "start": "1127900",
    "end": "1133690"
  },
  {
    "text": "look at the backend servers this is where security groups get really quite powerful if you took the previous",
    "start": "1133690",
    "end": "1138850"
  },
  {
    "text": "example we could say allow connections in from a certain set of IP addresses and those IP addresses could be our web",
    "start": "1138850",
    "end": "1144730"
  },
  {
    "text": "servers and we can allow those into those back in database servers on port 2 3 4 5 but now we have to manage this",
    "start": "1144730",
    "end": "1150730"
  },
  {
    "text": "security group we have to think YP addresses of our web servers got etc well actually there's a much simpler way",
    "start": "1150730",
    "end": "1156909"
  },
  {
    "text": "with security groups you can actually refer to another security group as the source of this traffic so what this rule",
    "start": "1156909",
    "end": "1163509"
  },
  {
    "text": "is actually saying is that we are going to accept connections on TCP port 2 3 4",
    "start": "1163509",
    "end": "1168669"
  },
  {
    "text": "5 from our web server so that SG identifier on the end of the source if",
    "start": "1168669",
    "end": "1174220"
  },
  {
    "text": "you look above it that's the security group identifier for the web servers so now we don't need to manage the individual IP addresses for our back-end",
    "start": "1174220",
    "end": "1181860"
  },
  {
    "text": "servers security groups really powerful function of security groups so a couple",
    "start": "1181860",
    "end": "1189100"
  },
  {
    "text": "of other things we've taught there about allowing traffic in now to go back to network a sales I said that these were",
    "start": "1189100",
    "end": "1194649"
  },
  {
    "text": "stateless so we have to define traffic in both directions well with security groups we don't have to security groups",
    "start": "1194649",
    "end": "1201309"
  },
  {
    "text": "are state fall so when you actually create a rule in a security group and it allows traffic into your ec2 instance we",
    "start": "1201309",
    "end": "1207970"
  },
  {
    "text": "automatically allow the reply within that security group we can control egress as well we saw examples for",
    "start": "1207970",
    "end": "1214330"
  },
  {
    "text": "inbound traffic but we can control whether these ec2 instances are allowed to reach out to do things so do they",
    "start": "1214330",
    "end": "1220029"
  },
  {
    "text": "actually even need to talk to the internet if not let's block that wherever you can use security groups as",
    "start": "1220029",
    "end": "1228009"
  },
  {
    "text": "references for the source in other security groups so exactly in the example that we just had but the backend",
    "start": "1228009",
    "end": "1233230"
  },
  {
    "text": "servers refer to the web servers by their security group identifier this means you don't have the overhead of",
    "start": "1233230",
    "end": "1238809"
  },
  {
    "text": "managing the individual IP addresses or entries inside that security group and",
    "start": "1238809",
    "end": "1244809"
  },
  {
    "start": "1243000",
    "end": "1279000"
  },
  {
    "text": "then finally you may have heard of I am Identity and Access Management well a lot of customers will establish a",
    "start": "1244809",
    "end": "1251019"
  },
  {
    "text": "one-to-one relationship between the idea of a security group and an IAM role and",
    "start": "1251019",
    "end": "1256210"
  },
  {
    "text": "you can see that a security group controls what traffic is allowed to reach me say as a web server where as an",
    "start": "1256210",
    "end": "1262720"
  },
  {
    "text": "IM role is used to control what it is that I can actually do and you can see that it might be a natural relationship",
    "start": "1262720",
    "end": "1268210"
  },
  {
    "text": "between the two of those we haven't got time here to cover the detail of IM roles but effectively it's a set of",
    "start": "1268210",
    "end": "1273970"
  },
  {
    "text": "permissions that establishes what it is that ec2 instance is allowed to do ok so",
    "start": "1273970",
    "end": "1281529"
  },
  {
    "start": "1279000",
    "end": "1370000"
  },
  {
    "text": "we've now got our very basic internet connected VPC with a couple of subnets in there we've got our ec2 instances",
    "start": "1281529",
    "end": "1287679"
  },
  {
    "text": "network ACLs and security groups all of you can easily follow that set of steps and you will have an internet-connected VPC an",
    "start": "1287679",
    "end": "1295270"
  },
  {
    "text": "interesting point is that you probably already have one of these if you created your AWS account anytime after 2013 we",
    "start": "1295270",
    "end": "1302560"
  },
  {
    "text": "actually create a VPC for you within your account you'll see that you have a VPC in the 172 range it already has an",
    "start": "1302560",
    "end": "1309940"
  },
  {
    "text": "Internet gateway already has the routing that we've talked about here it's already configured for you so this is VP",
    "start": "1309940",
    "end": "1315250"
  },
  {
    "text": "see by default that we have inside your account since 2013 but equally I think",
    "start": "1315250",
    "end": "1320350"
  },
  {
    "text": "it's a good exercise for people to go through and configure a VPC themselves to go through the steps we just looked at as you can see it really is quite",
    "start": "1320350",
    "end": "1326620"
  },
  {
    "text": "simple so we're on to connect to our VPC from somewhere else now once again we",
    "start": "1326620",
    "end": "1332680"
  },
  {
    "text": "need to look at routing because again that's where interesting things happen inside our VPC is how we control where",
    "start": "1332680",
    "end": "1337690"
  },
  {
    "text": "traffic flows but what might we want to connect to or we might want to connect to other v pcs they might be our v pcs",
    "start": "1337690",
    "end": "1343660"
  },
  {
    "text": "or they might be someone else's v pcs perhaps a partner that we work with or perhaps just a VPC in another account",
    "start": "1343660",
    "end": "1349750"
  },
  {
    "text": "within your organization you might separate our different teams different departments you'll have your own",
    "start": "1349750",
    "end": "1354970"
  },
  {
    "text": "accounts perhaps you will have your own V pcs but you want them all to connect to each other equally you might want to",
    "start": "1354970",
    "end": "1361180"
  },
  {
    "text": "connect back to your corporate network so we want to connect back perhaps over an ipsec VPN or over direct connect I'm",
    "start": "1361180",
    "end": "1368140"
  },
  {
    "text": "going to look at those in a bit more detail okay now first of all let's go",
    "start": "1368140",
    "end": "1373900"
  },
  {
    "text": "back to those route tables we put a very simple entry in our main route table which said we're going to reach out to",
    "start": "1373900",
    "end": "1379330"
  },
  {
    "text": "the Internet we're going to default route all traffic to the internet but what if we have some subnets that we",
    "start": "1379330",
    "end": "1385330"
  },
  {
    "start": "1382000",
    "end": "1392000"
  },
  {
    "text": "want to be internal so here's our environment again we've got perhaps our front-end web servers again our back-end database servers or application servers",
    "start": "1385330",
    "end": "1392080"
  },
  {
    "start": "1392000",
    "end": "1454000"
  },
  {
    "text": "this time let's put them in two different subnets and in terms of how our networking behaves here we obviously",
    "start": "1392080",
    "end": "1398320"
  },
  {
    "text": "need those two subnets to talk to each other well that's fine our route table has our local route entry in it we want",
    "start": "1398320",
    "end": "1405010"
  },
  {
    "text": "our web servers to be able to talk to the internet fine we have our route that we created earlier a default route out",
    "start": "1405010",
    "end": "1410590"
  },
  {
    "text": "by the internet gateway but actually i'll sub that with our application",
    "start": "1410590",
    "end": "1415780"
  },
  {
    "text": "servers in it we don't need to talk to the internet so what if we create a route table for that subnet that has no",
    "start": "1415780",
    "end": "1421540"
  },
  {
    "text": "route to the internet now what that means is you can demonstrate that these ec2 instances are",
    "start": "1421540",
    "end": "1426970"
  },
  {
    "text": "not reachable at all from the internet no matter what you've done with the security groups however you've configured the software there is no root",
    "start": "1426970",
    "end": "1433779"
  },
  {
    "text": "in that rude table that allows them to talk to the internet but it doesn't prevent your web servers talking to them",
    "start": "1433779",
    "end": "1438840"
  },
  {
    "text": "so this is a fairly common setup we actually use the terms in our documentation public and private subnet",
    "start": "1438840",
    "end": "1445690"
  },
  {
    "text": "so the top subnet here you'd consider a public subnet because it has that route to the Internet whereas the bottom",
    "start": "1445690",
    "end": "1451480"
  },
  {
    "text": "subnet you would consider is at a private subnet but what about those ec2",
    "start": "1451480",
    "end": "1457750"
  },
  {
    "start": "1454000",
    "end": "1478000"
  },
  {
    "text": "instances in our back-end database is perhaps they need to go and get updates windows updates will reach out to a young repo or something like that how",
    "start": "1457750",
    "end": "1464440"
  },
  {
    "text": "are they actually going to do that if they don't have a route to the internet also perhaps we've turned off that option that gave them all a public IP",
    "start": "1464440",
    "end": "1470380"
  },
  {
    "text": "address as well so all they've got is a private IP address and no route to the Internet what do we do well this is",
    "start": "1470380",
    "end": "1476440"
  },
  {
    "text": "where then that gateway comes in here's our setup we have our private subnet on",
    "start": "1476440",
    "end": "1482409"
  },
  {
    "text": "the left we have our internet connected subnet on the right so I've just shifted that diagram we had in the previous slide around what we're now going to do",
    "start": "1482409",
    "end": "1489490"
  },
  {
    "text": "is create an that gateway now again this is like the internet gateway is managed by AWS it's highly available it's not",
    "start": "1489490",
    "end": "1495909"
  },
  {
    "text": "something you need to think about in terms of configuring it but it's there to give you the ability to route traffic",
    "start": "1495909",
    "end": "1501549"
  },
  {
    "text": "from a private subnet out to the Internet so when you launch an out get that gateway you're going to have to",
    "start": "1501549",
    "end": "1507580"
  },
  {
    "text": "choose a public subnet to put it in because I've see then that gateway needs to be able to reach to the internet but",
    "start": "1507580",
    "end": "1512799"
  },
  {
    "text": "we then need to send traffic to it and how are we going to do that where we're going to create a default route inside",
    "start": "1512799",
    "end": "1518409"
  },
  {
    "text": "our private subnet now that says send all traffic going to the internet so 0000 again we're going to send that to",
    "start": "1518409",
    "end": "1525549"
  },
  {
    "text": "the nat gateway that now gateway because",
    "start": "1525549",
    "end": "1531100"
  },
  {
    "text": "it's in a public subnet it has a public IP address it's actually an elastic IP address or a fixed IP address that we",
    "start": "1531100",
    "end": "1537279"
  },
  {
    "text": "assign to the nat gateway and now that's how we're going to get out to the internet from our private sub map but we",
    "start": "1537279",
    "end": "1542890"
  },
  {
    "text": "still don't have any public IP addresses in that private subnet and you still can't reach into it from the internet so",
    "start": "1542890",
    "end": "1548830"
  },
  {
    "text": "now we have the ability to reach out get our updates but no one can actually reach into that private subnet nice simple concept",
    "start": "1548830",
    "end": "1555399"
  },
  {
    "text": "this is what the rude table entry would look like on that private subnet remember we've created a brand new route",
    "start": "1555399",
    "end": "1561159"
  },
  {
    "text": "table specifically for this subnet it's still got the local entry in it but its default route has the identifier of the",
    "start": "1561159",
    "end": "1566710"
  },
  {
    "text": "NAP gateway rather than the Internet gateway okay let's speed up through",
    "start": "1566710",
    "end": "1574330"
  },
  {
    "text": "these last couple of bits here let's look at connecting to other VP cease using bpc peering so what is VPC peering",
    "start": "1574330",
    "end": "1583979"
  },
  {
    "start": "1582000",
    "end": "1617000"
  },
  {
    "text": "well as I said you could have multiple VP sees that want to talk to each other but a very very common architecture we",
    "start": "1583979",
    "end": "1589599"
  },
  {
    "text": "see people vc peering is a shared services VPC the idea that you might have a VPC that's running things like",
    "start": "1589599",
    "end": "1596379"
  },
  {
    "text": "you're logging your monitoring and perhaps some remote admin tools that kind of thing you don't want to have to deploy that into every single account",
    "start": "1596379",
    "end": "1602710"
  },
  {
    "text": "into every single VPC that you create so you could create a single VPC with those services in it we then want to connect",
    "start": "1602710",
    "end": "1608919"
  },
  {
    "text": "that VPC to all of your other ones now as long as we follow the original rules that I said at the beginning of not",
    "start": "1608919",
    "end": "1614440"
  },
  {
    "text": "overlapping our IP address space this actually becomes really simple we take our 2v pcs here we've got both of them",
    "start": "1614440",
    "end": "1620679"
  },
  {
    "text": "in RFC 1918 address space we've got a 17 to 31 and we've got a 10 dot 55 these",
    "start": "1620679",
    "end": "1626710"
  },
  {
    "text": "are our 2v pcs we want to connect the two together so that traffic can be exchanged between them peering is the",
    "start": "1626710",
    "end": "1633099"
  },
  {
    "text": "tool for doing that and the process for setting it up is quite simple you have to configure the connection and I'll go",
    "start": "1633099",
    "end": "1639969"
  },
  {
    "start": "1635000",
    "end": "1764000"
  },
  {
    "text": "through the steps involved in a minute and accept them but one thing before we do that we talked about security groups",
    "start": "1639969",
    "end": "1646149"
  },
  {
    "text": "earlier the ability to reference security groups as a source in another security group you can do that across",
    "start": "1646149",
    "end": "1652119"
  },
  {
    "text": "VPC peering as well that's something we added in the last couple of months so actually we can manage our security",
    "start": "1652119",
    "end": "1657789"
  },
  {
    "text": "groups very easily again without specific specifying individual IP addresses so let's set up the pier in",
    "start": "1657789",
    "end": "1664989"
  },
  {
    "text": "connection between the two the first step is we have to initiate the request so the VPC on the left is going to",
    "start": "1664989",
    "end": "1671049"
  },
  {
    "text": "create a request to the VPC on the right if it's in the same account it's a nice simple drop-down you just choose the",
    "start": "1671049",
    "end": "1676299"
  },
  {
    "text": "identifier for that VPC and we're good to go if it's in another account you have to know the account number and you",
    "start": "1676299",
    "end": "1682749"
  },
  {
    "text": "have to know the VPC identifier it doesn't appear in a drop-down you have to type that in once you initiate that",
    "start": "1682749",
    "end": "1688599"
  },
  {
    "text": "request the the VPC has to accept it this is what the initial request looks like you can",
    "start": "1688599",
    "end": "1693790"
  },
  {
    "text": "see the the choices here choosing the source VPC in the destination VPC but once that's in place we don't have to do",
    "start": "1693790",
    "end": "1700270"
  },
  {
    "text": "the accept so this is a handshake that has to happen between the two VP sees this is what it looks like it will show",
    "start": "1700270",
    "end": "1706510"
  },
  {
    "text": "as pending in the console you have to select back here in connection and then click accept once that's done great we",
    "start": "1706510",
    "end": "1714070"
  },
  {
    "text": "have two V pcs that are allowed to talk to each other let's go back to that principle the only interesting thing",
    "start": "1714070",
    "end": "1719140"
  },
  {
    "text": "things happen in the VPC when you have roots so now that we have the agreement in place now let's put an entry in our",
    "start": "1719140",
    "end": "1725620"
  },
  {
    "text": "route table so here we are we have our route tables at the bottom we need to create an entry that says to get to 10",
    "start": "1725620",
    "end": "1732760"
  },
  {
    "text": "dot 55 from my 17 to 31 I need to create an entry that says the target is the",
    "start": "1732760",
    "end": "1739960"
  },
  {
    "text": "peering connection now you can see on here is the third one down it says the target is PC X Dash and then identify",
    "start": "1739960",
    "end": "1746230"
  },
  {
    "text": "that's appearing connection and we need to do that on both sides of the VPC Pyrrhic to be able to route traffic in",
    "start": "1746230",
    "end": "1751750"
  },
  {
    "text": "both directions those are either paying attention will also realize that there's an additional entry in this route table",
    "start": "1751750",
    "end": "1757420"
  },
  {
    "text": "at the bottom we're going to touch on that next and entry via the virtual gateway okay so now we want to connect",
    "start": "1757420",
    "end": "1767080"
  },
  {
    "text": "back to an existing perhaps on-prem network or corporate network of some sort so we're going to talk about ipsec",
    "start": "1767080",
    "end": "1772450"
  },
  {
    "text": "VPN and direct connect now there's a whole bunch of content out there about this you can look on youtube some of the",
    "start": "1772450",
    "end": "1778690"
  },
  {
    "text": "deep dive sessions around both of these topics so i'm just going to keep it fairly high level just so that you're familiar with the concepts on our left",
    "start": "1778690",
    "end": "1786130"
  },
  {
    "start": "1784000",
    "end": "1810000"
  },
  {
    "text": "we have our corporate network on our right we have our vp see these are the two things that we want to connect to each other we're going to use an ipsec",
    "start": "1786130",
    "end": "1793900"
  },
  {
    "text": "VPN so this is an encrypted tunnel that we run over the internet between the two of them but the first thing we have to",
    "start": "1793900",
    "end": "1799630"
  },
  {
    "text": "do to configure our VPN is define the customer end of this service now both",
    "start": "1799630",
    "end": "1806020"
  },
  {
    "text": "for VPN and direct connect the term that's generally used is the customer gateway so here we are back in our day",
    "start": "1806020",
    "end": "1811330"
  },
  {
    "start": "1810000",
    "end": "1839000"
  },
  {
    "text": "since we're going to create our customer gateway now this actually isn't something that we deploy but we need",
    "start": "1811330",
    "end": "1816940"
  },
  {
    "text": "something in the console to refer to your end of the VPN connection you're our customer it's a gateway it's",
    "start": "1816940",
    "end": "1822900"
  },
  {
    "text": "a customer gateway pretty simple on the AWS end we need a gateway as well to",
    "start": "1822900",
    "end": "1828450"
  },
  {
    "text": "link these two endpoints together so we can have a VPN between them this is called the virtual gateway so you're",
    "start": "1828450",
    "end": "1834090"
  },
  {
    "text": "going to see referred to in the console is V GW now we have two end points for our VPN when you create a VPN via the",
    "start": "1834090",
    "end": "1841770"
  },
  {
    "start": "1839000",
    "end": "1892000"
  },
  {
    "text": "console what we actually do is create two IPSec tunnels this gives you a highly available resilient solution and",
    "start": "1841770",
    "end": "1848190"
  },
  {
    "text": "on the AWS end the two endpoints for these VPN tunnels are actually in different availability zones so actually",
    "start": "1848190",
    "end": "1853680"
  },
  {
    "text": "using our own architectures here the ones that we recommend to you to provide highly available VPN solution both of",
    "start": "1853680",
    "end": "1860220"
  },
  {
    "text": "those connect to that customer gateway on your end of the connection if you wanted to make your end of this VPN",
    "start": "1860220",
    "end": "1865350"
  },
  {
    "text": "highly available you could simply have a second customer gateway and another pair of IPSec tunnels to us now we have four",
    "start": "1865350",
    "end": "1872580"
  },
  {
    "text": "tunnels two gateways on each end once again though this is great until we have",
    "start": "1872580",
    "end": "1879060"
  },
  {
    "text": "a route though we can't use it so we need to go back into our route tables and as you saw on the previous slides we",
    "start": "1879060",
    "end": "1884340"
  },
  {
    "text": "need to create an entry that says to get to my corporate network the 192 168 in network send all traffic via the virtual",
    "start": "1884340",
    "end": "1891120"
  },
  {
    "text": "gateway so here we aren't back at our route table we've got an entry in there at the moment that says to get to the",
    "start": "1891120",
    "end": "1898470"
  },
  {
    "start": "1892000",
    "end": "1918000"
  },
  {
    "text": "local VPC that entry is still there but we've added the route via the virtual gateway now you can see that this is",
    "start": "1898470",
    "end": "1906720"
  },
  {
    "text": "quite a simple concept and following it through from all of the other entries it's as simple as saying I have traffic",
    "start": "1906720",
    "end": "1912030"
  },
  {
    "text": "that's going to these IP addresses where do I send it next and in this case obviously that's to the virtual gateway",
    "start": "1912030",
    "end": "1919250"
  },
  {
    "start": "1918000",
    "end": "1998000"
  },
  {
    "text": "Direct Connect is slightly different Direct Connect is a physical connection between your network and AWS so we have",
    "start": "1919250",
    "end": "1926010"
  },
  {
    "text": "direct connect locations all around the world that are associated with our region's we have equipment in those",
    "start": "1926010",
    "end": "1931080"
  },
  {
    "text": "locations Reuters and you can then order a connection between your network a physical piece of fiber between one of",
    "start": "1931080",
    "end": "1937380"
  },
  {
    "text": "our Reuters and your equipment the thing about Direct Connect four and VPN is",
    "start": "1937380",
    "end": "1942630"
  },
  {
    "text": "that actually they both provide the same functionality they're providing you with secure connectivity between your network",
    "start": "1942630",
    "end": "1948540"
  },
  {
    "text": "and your VPC one of them is an encrypted tunnel over the Internet and one of them is a pride",
    "start": "1948540",
    "end": "1954150"
  },
  {
    "text": "it piece of fiber between your equipment and ours Direct Connect is dedicated to you and the thing about Direct Connect",
    "start": "1954150",
    "end": "1961320"
  },
  {
    "text": "is it actually gives you a lower price for data transfer so if you have a lot of data that is going to be leaving AWS",
    "start": "1961320",
    "end": "1967530"
  },
  {
    "text": "then direct connect gives you a lower per gig data transfer fee also it's a",
    "start": "1967530",
    "end": "1973620"
  },
  {
    "text": "lot more bandwidth so direct connect the the units that we deliver in our one gig and 10 gig there are options to get",
    "start": "1973620",
    "end": "1979800"
  },
  {
    "text": "smaller amounts of bandwidth via some of our partners but overall if you're using direct connect our recommendation would",
    "start": "1979800",
    "end": "1985200"
  },
  {
    "text": "be that you also use a VPN so this way you have high availability you have a physical connection perhaps multiple",
    "start": "1985200",
    "end": "1991560"
  },
  {
    "text": "direct connects but you also have a VPN for failover ok let's move on to DNS in",
    "start": "1991560",
    "end": "2000560"
  },
  {
    "start": "1998000",
    "end": "2008000"
  },
  {
    "text": "our VPC we've talked a lot about the network level functionality but what about name resolution now DNS inside of",
    "start": "2000560",
    "end": "2006380"
  },
  {
    "text": "EPC is actually very very flexible you can do things like configure your own DNS servers if you really want to i'm",
    "start": "2006380",
    "end": "2012830"
  },
  {
    "start": "2008000",
    "end": "2050000"
  },
  {
    "text": "going to focus on the feature that we provide you if you choose to use our dns solution so you have the dns options",
    "start": "2012830",
    "end": "2019340"
  },
  {
    "text": "within your VPC and you'll notice that there are two very specific ones one that says dns resolution one that says",
    "start": "2019340",
    "end": "2024500"
  },
  {
    "text": "dns host names most customers have both of these turned on you don't have to but most customers do what do they actually",
    "start": "2024500",
    "end": "2031610"
  },
  {
    "text": "give you a dns resolution means that we provide you with a dns server inside your VPC so you don't have to run your",
    "start": "2031610",
    "end": "2037160"
  },
  {
    "text": "own it's heidi available it's part of the VPC environment dns host names mean every time you launch an ec2 instance we",
    "start": "2037160",
    "end": "2044720"
  },
  {
    "text": "assign it some host names and that's where things are quite interesting this",
    "start": "2044720",
    "end": "2051980"
  },
  {
    "start": "2050000",
    "end": "2059000"
  },
  {
    "text": "is the the standard of page for an ec2 instance inside your VPC and you might notice on there we have a couple of",
    "start": "2051980",
    "end": "2058040"
  },
  {
    "text": "things related to dls we have a private dns entry and you can see embedded in that name is basically the IP address of",
    "start": "2058040",
    "end": "2064760"
  },
  {
    "start": "2059000",
    "end": "2093000"
  },
  {
    "text": "the instance so in this case I p dash 17 to 30 1 dot computer internal so within",
    "start": "2064760",
    "end": "2071120"
  },
  {
    "text": "our VPC we can use that to resolve that individual ec2 instance great nothing particularly special about it but if we",
    "start": "2071120",
    "end": "2078169"
  },
  {
    "text": "look at our public IP address this is a little bit special so in this case we",
    "start": "2078169",
    "end": "2083570"
  },
  {
    "text": "turned on that option to set aside me a public IP address again we've got a dns entry that looks like it's related to that public IP",
    "start": "2083570",
    "end": "2089628"
  },
  {
    "text": "address in some way but it resolves slightly differently so let's step outside of our VPC we're sitting now",
    "start": "2089629",
    "end": "2097489"
  },
  {
    "start": "2093000",
    "end": "2108000"
  },
  {
    "text": "just on a normal windows machine we've resolved this name and as you'd expect it resolves to the public IP address",
    "start": "2097489",
    "end": "2102979"
  },
  {
    "text": "because i'm outside the VPC what happens if I'm inside the VPC though so now",
    "start": "2102979",
    "end": "2109880"
  },
  {
    "start": "2108000",
    "end": "2134000"
  },
  {
    "text": "we're sitting inside a VPC I'm resolving that same public dns entry if you look",
    "start": "2109880",
    "end": "2114950"
  },
  {
    "text": "at the reply what I actually came back was the 17 231 address so the thing",
    "start": "2114950",
    "end": "2120499"
  },
  {
    "text": "about this DNS name is that it actually gives you the right answer wherever you're located so if you're outside it",
    "start": "2120499",
    "end": "2126140"
  },
  {
    "text": "gives you the public IP address if you're inside your VPC it gives you the private IP address so pretty pretty cool",
    "start": "2126140",
    "end": "2131900"
  },
  {
    "text": "piece of functionality there we also have something called route 53 private",
    "start": "2131900",
    "end": "2138710"
  },
  {
    "start": "2134000",
    "end": "2163000"
  },
  {
    "text": "hosted zones and this is your way of controlling any DNS zone that you like within your VPC doesn't affect anyone",
    "start": "2138710",
    "end": "2146119"
  },
  {
    "text": "else you choose which vp sees its visible in and you can use it to override any other DNS entry that is out",
    "start": "2146119",
    "end": "2152059"
  },
  {
    "text": "on the internet so if you want to create a zone we're going to use one demo hosted zone in a moment doesn't matter",
    "start": "2152059",
    "end": "2157910"
  },
  {
    "text": "whether someone owns it or not within your VP see you now control every entry for that particular zone to do this we",
    "start": "2157910",
    "end": "2164930"
  },
  {
    "text": "have to step into the route 53 console it's not within the VPC console you can see we create our hosted zone here and",
    "start": "2164930",
    "end": "2170719"
  },
  {
    "text": "we choose which v pcs it's going to be available to once that's done we can",
    "start": "2170719",
    "end": "2177259"
  },
  {
    "start": "2175000",
    "end": "2186000"
  },
  {
    "text": "then create entry in this hosted zone and you don't have to know anything about DNS here it's as simple as put in",
    "start": "2177259",
    "end": "2182569"
  },
  {
    "text": "the name that you want to create putting the IP address once we've done that we can then go back to our ec2 instance and",
    "start": "2182569",
    "end": "2188660"
  },
  {
    "start": "2186000",
    "end": "2221000"
  },
  {
    "text": "we can try and resolve that particular name so in this case example demo host its own to org and you can see that the",
    "start": "2188660",
    "end": "2194509"
  },
  {
    "text": "response we got back was 17 to 30 10 99 it's whatever we defined within route 53",
    "start": "2194509",
    "end": "2200059"
  },
  {
    "text": "so we're now in control of that that particular domain name doesn't matter of someone else has it registered out on",
    "start": "2200059",
    "end": "2205430"
  },
  {
    "text": "the internet we now control it as far as our VPC is concerned this gives you some interesting options some internal dns",
    "start": "2205430",
    "end": "2211430"
  },
  {
    "text": "domains or controlling traffic that is attempting to go to certain public domains as well okay the squeeze a",
    "start": "2211430",
    "end": "2219650"
  },
  {
    "text": "couple more bits in on the end here let's talk about VPC flow logs so within",
    "start": "2219650",
    "end": "2225020"
  },
  {
    "start": "2221000",
    "end": "2277000"
  },
  {
    "text": "this environment we might want to monitor our traffic we want to know what's actually happening what's being allowed and what's being denied by our",
    "start": "2225020",
    "end": "2231410"
  },
  {
    "text": "security group rules VPC flow logs is something that gives you that you can turn it on the individual network",
    "start": "2231410",
    "end": "2236990"
  },
  {
    "text": "interfaces you can turn it on for the whole VPC what it does is create an entry in a log for you to be able to see",
    "start": "2236990",
    "end": "2242990"
  },
  {
    "text": "that traffic as it comes in where it was destined to whether it is allowed or denied you can see where there is",
    "start": "2242990",
    "end": "2248300"
  },
  {
    "text": "blocked or allowed by a security group or a network ACL this is great for logging and there's various tools out",
    "start": "2248300",
    "end": "2253820"
  },
  {
    "text": "there for then presenting this visually and you can build something yourself if you like but it's also really helpful",
    "start": "2253820",
    "end": "2259310"
  },
  {
    "text": "for troubleshooting networking I've also used it to do analytics against security groups and say have we actually",
    "start": "2259310",
    "end": "2265520"
  },
  {
    "text": "configure the security group correctly if we're seeing lots of traffic hitting on a port I haven't defined is that",
    "start": "2265520",
    "end": "2270650"
  },
  {
    "text": "someone trying to attack me or is that something that I've missed in the configuration it's really useful for being able to do that and then finally",
    "start": "2270650",
    "end": "2279290"
  },
  {
    "start": "2277000",
    "end": "2335000"
  },
  {
    "text": "let's touch on just VPC n points for s3 let us say we have a VPC that is connected back to our corporate network",
    "start": "2279290",
    "end": "2285770"
  },
  {
    "text": "we don't actually want to connect it to the Internet in this case so it's pretty private but we do want to reach out to",
    "start": "2285770",
    "end": "2292010"
  },
  {
    "text": "s3 now s3 is a service that's available via public endpoints it's available on the internet but we want to reach it",
    "start": "2292010",
    "end": "2297770"
  },
  {
    "text": "from inside our VPC well how do we do that we can create a VPC endpoint for s3",
    "start": "2297770",
    "end": "2303020"
  },
  {
    "text": "that allows us to get traffic from within our VPC just out to s3 doesn't go",
    "start": "2303020",
    "end": "2308750"
  },
  {
    "text": "out to the internet so we create a VPC endpoint but beyond that we can also apply some policies to it so we now get",
    "start": "2308750",
    "end": "2316310"
  },
  {
    "text": "to say this VPC endpoint allows us to reach out to this very specific s3 bucket we can also then configure the",
    "start": "2316310",
    "end": "2323990"
  },
  {
    "text": "other end of that we can configure the bucket to allow traffic in but only from",
    "start": "2323990",
    "end": "2329060"
  },
  {
    "text": "that VPC endpoint so now we have the ability to control both ends of that connection okay I think we've probably",
    "start": "2329060",
    "end": "2337130"
  },
  {
    "start": "2335000",
    "end": "2356000"
  },
  {
    "text": "covered enough there we should be hopefully on time if you've got any feedback about this session please scan",
    "start": "2337130",
    "end": "2342740"
  },
  {
    "text": "the QR code i'll use the the app to submit some feedback we take your feedback very seriously and we use it to shape our events in the future so thank",
    "start": "2342740",
    "end": "2349700"
  },
  {
    "text": "you very much for coming to the session i'm going to be in the asking particularly for now",
    "start": "2349700",
    "end": "2355010"
  }
]