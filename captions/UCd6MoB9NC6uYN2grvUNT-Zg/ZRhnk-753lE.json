[
  {
    "text": "hello my name is Kareem Abdul Hamid I'm",
    "start": "840",
    "end": "3419"
  },
  {
    "text": "a senior prototype architect at AWS and",
    "start": "3419",
    "end": "5819"
  },
  {
    "text": "I'm here today to talk about application",
    "start": "5819",
    "end": "7560"
  },
  {
    "text": "development on backstage.io for AWS this",
    "start": "7560",
    "end": "11280"
  },
  {
    "text": "is the fifth chapter where we're going",
    "start": "11280",
    "end": "12719"
  },
  {
    "text": "to focus on a back-end Deep dive",
    "start": "12719",
    "end": "16020"
  },
  {
    "text": "so how does backstage create",
    "start": "16020",
    "end": "17279"
  },
  {
    "text": "applications on AWS",
    "start": "17279",
    "end": "19560"
  },
  {
    "text": "we leverage two key Services here AWS",
    "start": "19560",
    "end": "22020"
  },
  {
    "text": "step functions and Amazon code build",
    "start": "22020",
    "end": "23699"
  },
  {
    "text": "using step functions we can achieve a",
    "start": "23699",
    "end": "26939"
  },
  {
    "text": "complex set of asynchronous tasks",
    "start": "26939",
    "end": "28920"
  },
  {
    "text": "necessary for creating new applications",
    "start": "28920",
    "end": "31199"
  },
  {
    "text": "through backstage we'll cover this in",
    "start": "31199",
    "end": "33300"
  },
  {
    "text": "more details in the next slide with an",
    "start": "33300",
    "end": "34739"
  },
  {
    "text": "architecture diagram but at a high level",
    "start": "34739",
    "end": "36600"
  },
  {
    "text": "step functions is a workflow service",
    "start": "36600",
    "end": "38640"
  },
  {
    "text": "that helps developers use AWS services",
    "start": "38640",
    "end": "40980"
  },
  {
    "text": "to build distributed applications",
    "start": "40980",
    "end": "43079"
  },
  {
    "text": "automate processes and orchestrate",
    "start": "43079",
    "end": "45000"
  },
  {
    "text": "microservices in our case we leverage",
    "start": "45000",
    "end": "47340"
  },
  {
    "text": "those capabilities to have a consistent",
    "start": "47340",
    "end": "49440"
  },
  {
    "text": "and repeatable workflow for creating",
    "start": "49440",
    "end": "51300"
  },
  {
    "text": "applications through backstage",
    "start": "51300",
    "end": "54420"
  },
  {
    "text": "Amazon code build are fully managed",
    "start": "54420",
    "end": "57239"
  },
  {
    "text": "continuous integration service is used",
    "start": "57239",
    "end": "59280"
  },
  {
    "text": "as our deployment environment this gives",
    "start": "59280",
    "end": "61440"
  },
  {
    "text": "us a consistent containerized",
    "start": "61440",
    "end": "63120"
  },
  {
    "text": "environment to repeatedly deploy from",
    "start": "63120",
    "end": "65158"
  },
  {
    "text": "any number of templates repositories as",
    "start": "65159",
    "end": "67680"
  },
  {
    "text": "long as they have a build spec.yaml and",
    "start": "67680",
    "end": "70080"
  },
  {
    "text": "conform to a code build environment",
    "start": "70080",
    "end": "71939"
  },
  {
    "text": "specification",
    "start": "71939",
    "end": "73260"
  },
  {
    "text": "we'll show more details and an example",
    "start": "73260",
    "end": "75060"
  },
  {
    "text": "of that build spec later",
    "start": "75060",
    "end": "77880"
  },
  {
    "text": "moving forward we're going to look into",
    "start": "77880",
    "end": "79439"
  },
  {
    "text": "the architecture of our application",
    "start": "79439",
    "end": "80939"
  },
  {
    "text": "provisioning pipeline as you saw in the",
    "start": "80939",
    "end": "83700"
  },
  {
    "text": "previous videos developers can choose a",
    "start": "83700",
    "end": "85619"
  },
  {
    "text": "boilerplate from a backstage software",
    "start": "85619",
    "end": "87659"
  },
  {
    "text": "catalog as the main step for every",
    "start": "87659",
    "end": "90659"
  },
  {
    "text": "backstage boilerplate we call",
    "start": "90659",
    "end": "93540"
  },
  {
    "text": "this step function State machine we call",
    "start": "93540",
    "end": "95400"
  },
  {
    "text": "it the provisioning pipeline",
    "start": "95400",
    "end": "98159"
  },
  {
    "text": "the pipeline takes a list of",
    "start": "98159",
    "end": "99299"
  },
  {
    "text": "repositories as well as a list of",
    "start": "99299",
    "end": "101400"
  },
  {
    "text": "parameters to and proceeds to deploy AWS",
    "start": "101400",
    "end": "104340"
  },
  {
    "text": "resources necessary for a given",
    "start": "104340",
    "end": "105900"
  },
  {
    "text": "application",
    "start": "105900",
    "end": "107939"
  },
  {
    "text": "the first step is to go through those",
    "start": "107939",
    "end": "109920"
  },
  {
    "text": "given repositories retrieve them from",
    "start": "109920",
    "end": "111780"
  },
  {
    "text": "gitlab package the code up and put it",
    "start": "111780",
    "end": "113700"
  },
  {
    "text": "into S3 this creates a code Source",
    "start": "113700",
    "end": "116460"
  },
  {
    "text": "location for the next step in Step 2",
    "start": "116460",
    "end": "119159"
  },
  {
    "text": "code build uses that code Source",
    "start": "119159",
    "end": "121020"
  },
  {
    "text": "location when deploying each of these",
    "start": "121020",
    "end": "122939"
  },
  {
    "text": "repositories",
    "start": "122939",
    "end": "124259"
  },
  {
    "text": "it leverages a build spec.yaml that's in",
    "start": "124259",
    "end": "126659"
  },
  {
    "text": "every repository and with that you can",
    "start": "126659",
    "end": "128819"
  },
  {
    "text": "have any deployment or build processes",
    "start": "128819",
    "end": "130739"
  },
  {
    "text": "that's necessary for that repository as",
    "start": "130739",
    "end": "133379"
  },
  {
    "text": "long as it's defined and ran from the",
    "start": "133379",
    "end": "134760"
  },
  {
    "text": "build spec",
    "start": "134760",
    "end": "137180"
  },
  {
    "text": "we'll discuss that build spec in more",
    "start": "137280",
    "end": "139020"
  },
  {
    "text": "details in our next few slides",
    "start": "139020",
    "end": "141480"
  },
  {
    "text": "in our examples we have it running cdk",
    "start": "141480",
    "end": "144420"
  },
  {
    "text": "code but you can have it run terraform",
    "start": "144420",
    "end": "145980"
  },
  {
    "text": "cloud formation scripts or even CLI",
    "start": "145980",
    "end": "148020"
  },
  {
    "text": "commands if you'd like there's a limit",
    "start": "148020",
    "end": "149520"
  },
  {
    "text": "on the tooling or deployment strategy",
    "start": "149520",
    "end": "151020"
  },
  {
    "text": "used here and that's the strength of a",
    "start": "151020",
    "end": "152819"
  },
  {
    "text": "generic provisioning pipeline",
    "start": "152819",
    "end": "154980"
  },
  {
    "text": "we don't pigeonhold any specific",
    "start": "154980",
    "end": "156840"
  },
  {
    "text": "standard or design as long as it can be",
    "start": "156840",
    "end": "159300"
  },
  {
    "text": "run from a build spec",
    "start": "159300",
    "end": "162060"
  },
  {
    "text": "both of these steps are ran",
    "start": "162060",
    "end": "163500"
  },
  {
    "text": "asynchronously in maps so you can deploy",
    "start": "163500",
    "end": "165900"
  },
  {
    "text": "from as many repositories as you'd like",
    "start": "165900",
    "end": "167640"
  },
  {
    "text": "and it will simply scale build and",
    "start": "167640",
    "end": "169319"
  },
  {
    "text": "deploy them all simultaneously if you do",
    "start": "169319",
    "end": "171780"
  },
  {
    "text": "want to run them synchronously then",
    "start": "171780",
    "end": "173580"
  },
  {
    "text": "simply call the step functions multiple",
    "start": "173580",
    "end": "175379"
  },
  {
    "text": "times and this will enforce deployment",
    "start": "175379",
    "end": "177420"
  },
  {
    "text": "order",
    "start": "177420",
    "end": "179720"
  },
  {
    "text": "here's an example of an input and an",
    "start": "181920",
    "end": "184080"
  },
  {
    "text": "output for our provisioning pipeline",
    "start": "184080",
    "end": "186060"
  },
  {
    "text": "the input is a simple list of",
    "start": "186060",
    "end": "188220"
  },
  {
    "text": "repositories and parameters needed to",
    "start": "188220",
    "end": "191159"
  },
  {
    "text": "deploy your stack",
    "start": "191159",
    "end": "192599"
  },
  {
    "text": "for example if I need a cluster based",
    "start": "192599",
    "end": "194879"
  },
  {
    "text": "application and it needs a database I",
    "start": "194879",
    "end": "196739"
  },
  {
    "text": "would give it these two boilerplate",
    "start": "196739",
    "end": "198480"
  },
  {
    "text": "templates each of them will have a build",
    "start": "198480",
    "end": "200400"
  },
  {
    "text": "spec.aml in them and they may expect",
    "start": "200400",
    "end": "202319"
  },
  {
    "text": "some sort of parameters those parameters",
    "start": "202319",
    "end": "204840"
  },
  {
    "text": "can come from backstage itself they can",
    "start": "204840",
    "end": "207720"
  },
  {
    "text": "come from the individual who's inputting",
    "start": "207720",
    "end": "209459"
  },
  {
    "text": "into the software catalog but this",
    "start": "209459",
    "end": "210840"
  },
  {
    "text": "allows flexibility while still",
    "start": "210840",
    "end": "213060"
  },
  {
    "text": "abstracting more complex AWS features",
    "start": "213060",
    "end": "215340"
  },
  {
    "text": "that the developer doesn't care about",
    "start": "215340",
    "end": "216599"
  },
  {
    "text": "like IEM or networking",
    "start": "216599",
    "end": "219540"
  },
  {
    "text": "the output which is going to be defined",
    "start": "219540",
    "end": "221459"
  },
  {
    "text": "in these templates and we'll show that",
    "start": "221459",
    "end": "222900"
  },
  {
    "text": "in the next slide",
    "start": "222900",
    "end": "224159"
  },
  {
    "text": "can give any number of information back",
    "start": "224159",
    "end": "225959"
  },
  {
    "text": "to Backstage and backstage can then",
    "start": "225959",
    "end": "227819"
  },
  {
    "text": "determine what is given to the end user",
    "start": "227819",
    "end": "229379"
  },
  {
    "text": "in this example we have a service",
    "start": "229379",
    "end": "230879"
  },
  {
    "text": "endpoint for the cluster and we have the",
    "start": "230879",
    "end": "233220"
  },
  {
    "text": "database endpoint as well as maybe a",
    "start": "233220",
    "end": "234599"
  },
  {
    "text": "secret so for example you could have a",
    "start": "234599",
    "end": "236220"
  },
  {
    "text": "username and password that is leveraged",
    "start": "236220",
    "end": "238260"
  },
  {
    "text": "by the application developer and their",
    "start": "238260",
    "end": "240299"
  },
  {
    "text": "main application",
    "start": "240299",
    "end": "242959"
  },
  {
    "text": "here's an example of a build spec that",
    "start": "244260",
    "end": "246239"
  },
  {
    "text": "one of the templates might have as long",
    "start": "246239",
    "end": "248040"
  },
  {
    "text": "as you have a template like this you can",
    "start": "248040",
    "end": "249420"
  },
  {
    "text": "deploy virtually any set of resources",
    "start": "249420",
    "end": "251459"
  },
  {
    "text": "through AWS using this process",
    "start": "251459",
    "end": "254459"
  },
  {
    "text": "in this case we have a node.js 16",
    "start": "254459",
    "end": "256979"
  },
  {
    "text": "environment being set",
    "start": "256979",
    "end": "259079"
  },
  {
    "text": "we Echo out one of the input variables",
    "start": "259079",
    "end": "261359"
  },
  {
    "text": "we get as you remember in the last slide",
    "start": "261359",
    "end": "263340"
  },
  {
    "text": "we just defined the app name",
    "start": "263340",
    "end": "266160"
  },
  {
    "text": "you could use this in the actual",
    "start": "266160",
    "end": "268020"
  },
  {
    "text": "deployment process you could leverage it",
    "start": "268020",
    "end": "269759"
  },
  {
    "text": "in any number of ways and this gives",
    "start": "269759",
    "end": "271139"
  },
  {
    "text": "that flexibility to the end developer to",
    "start": "271139",
    "end": "274320"
  },
  {
    "text": "determine things like the database",
    "start": "274320",
    "end": "275639"
  },
  {
    "text": "engine we install AWS cdk",
    "start": "275639",
    "end": "278820"
  },
  {
    "text": "then we install some libraries and then",
    "start": "278820",
    "end": "281100"
  },
  {
    "text": "finally we do a cdk deploy and tag the",
    "start": "281100",
    "end": "283320"
  },
  {
    "text": "resources so we know for auditing",
    "start": "283320",
    "end": "285419"
  },
  {
    "text": "purposes what's being deployed through",
    "start": "285419",
    "end": "286919"
  },
  {
    "text": "backstage what template is it coming",
    "start": "286919",
    "end": "288600"
  },
  {
    "text": "from and you can imagine how you could",
    "start": "288600",
    "end": "290160"
  },
  {
    "text": "extend this functionality for your",
    "start": "290160",
    "end": "291540"
  },
  {
    "text": "specific use cases",
    "start": "291540",
    "end": "293940"
  },
  {
    "text": "finally we determine what file is going",
    "start": "293940",
    "end": "295800"
  },
  {
    "text": "to have the outputs necessary and those",
    "start": "295800",
    "end": "298080"
  },
  {
    "text": "files are what step functions is going",
    "start": "298080",
    "end": "299820"
  },
  {
    "text": "to Output back to the user in the end",
    "start": "299820",
    "end": "301580"
  },
  {
    "text": "that backstage can leverage and present",
    "start": "301580",
    "end": "304259"
  },
  {
    "text": "to the end user if it would like to",
    "start": "304259",
    "end": "307639"
  },
  {
    "text": "thank you for watching this video on",
    "start": "309020",
    "end": "311340"
  },
  {
    "text": "applicationdevelopment for backstage.io",
    "start": "311340",
    "end": "313500"
  },
  {
    "text": "on AWS",
    "start": "313500",
    "end": "316759"
  }
]