[
  {
    "start": "0",
    "end": "93000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "4770"
  },
  {
    "text": "[Applause]",
    "start": "4770",
    "end": "5640"
  },
  {
    "text": "[Music]",
    "start": "5640",
    "end": "8620"
  },
  {
    "text": "in this video you'll see how AWS systems",
    "start": "8620",
    "end": "12590"
  },
  {
    "text": "manager integration with Windows",
    "start": "12590",
    "end": "14420"
  },
  {
    "text": "PowerShell DSC makes it possible to",
    "start": "14420",
    "end": "17689"
  },
  {
    "text": "manage your Windows Server instances by",
    "start": "17689",
    "end": "20270"
  },
  {
    "text": "implementing configurations then enforce",
    "start": "20270",
    "end": "22730"
  },
  {
    "text": "compliance to a desired state",
    "start": "22730",
    "end": "25650"
  },
  {
    "text": "with native PowerShell desired state",
    "start": "25650",
    "end": "27930"
  },
  {
    "text": "configuration or DSC support in AWS",
    "start": "27930",
    "end": "31440"
  },
  {
    "text": "Systems Manager you can use custom",
    "start": "31440",
    "end": "34020"
  },
  {
    "text": "workflows to manage and report",
    "start": "34020",
    "end": "36000"
  },
  {
    "text": "compliance of Windows instances at scale",
    "start": "36000",
    "end": "38990"
  },
  {
    "text": "you can use your own windows",
    "start": "38990",
    "end": "41250"
  },
  {
    "text": "configuration managed object format or",
    "start": "41250",
    "end": "43860"
  },
  {
    "text": "MOF files or you can import files from",
    "start": "43860",
    "end": "47610"
  },
  {
    "text": "the public powershell gallery which",
    "start": "47610",
    "end": "49800"
  },
  {
    "text": "contains over 800 community developed",
    "start": "49800",
    "end": "52320"
  },
  {
    "text": "DSC resources to begin you need to",
    "start": "52320",
    "end": "56190"
  },
  {
    "text": "upload the MOF file containing the",
    "start": "56190",
    "end": "58290"
  },
  {
    "text": "desired configuration for your instances",
    "start": "58290",
    "end": "60570"
  },
  {
    "text": "to an Amazon simple storage service or",
    "start": "60570",
    "end": "63470"
  },
  {
    "text": "s3 bucket for the purposes of this",
    "start": "63470",
    "end": "66810"
  },
  {
    "text": "example we've already done that",
    "start": "66810",
    "end": "70700"
  },
  {
    "text": "this MOF file contains the configuration",
    "start": "71060",
    "end": "74060"
  },
  {
    "text": "settings we want to enforce for Amazon",
    "start": "74060",
    "end": "76340"
  },
  {
    "text": "Elastic Compute cloud or ec2 instances",
    "start": "76340",
    "end": "79369"
  },
  {
    "text": "running Windows Server in this case we",
    "start": "79369",
    "end": "82909"
  },
  {
    "text": "are specifying that the iis web server",
    "start": "82909",
    "end": "85190"
  },
  {
    "text": "role should be installed on each",
    "start": "85190",
    "end": "86990"
  },
  {
    "text": "instance and that remote desktop access",
    "start": "86990",
    "end": "89750"
  },
  {
    "text": "should be disabled to improve security",
    "start": "89750",
    "end": "93530"
  },
  {
    "start": "93000",
    "end": "259000"
  },
  {
    "text": "now let's navigate to state manager in",
    "start": "93530",
    "end": "95870"
  },
  {
    "text": "AWS Systems Manager to create an",
    "start": "95870",
    "end": "98720"
  },
  {
    "text": "association that will check our",
    "start": "98720",
    "end": "100460"
  },
  {
    "text": "instances against the specifications in",
    "start": "100460",
    "end": "103040"
  },
  {
    "text": "our MOF file",
    "start": "103040",
    "end": "105360"
  },
  {
    "text": "a state manager Association is a",
    "start": "105360",
    "end": "107700"
  },
  {
    "text": "configuration that is assigned to your",
    "start": "107700",
    "end": "109860"
  },
  {
    "text": "managed instances to define the state",
    "start": "109860",
    "end": "112320"
  },
  {
    "text": "you want to maintain let's create a new",
    "start": "112320",
    "end": "115140"
  },
  {
    "text": "Association",
    "start": "115140",
    "end": "117740"
  },
  {
    "text": "you can provide an",
    "start": "118760",
    "end": "120360"
  },
  {
    "text": "aim for the association",
    "start": "120360",
    "end": "123560"
  },
  {
    "text": "next specify the document that will",
    "start": "125380",
    "end": "128319"
  },
  {
    "text": "define the desired state for this",
    "start": "128319",
    "end": "131110"
  },
  {
    "text": "association we're going to specify the",
    "start": "131110",
    "end": "133390"
  },
  {
    "text": "document that allows us to use the MOF",
    "start": "133390",
    "end": "135940"
  },
  {
    "text": "file to update running ec2 instances and",
    "start": "135940",
    "end": "138819"
  },
  {
    "text": "enforce compliance",
    "start": "138819",
    "end": "141660"
  },
  {
    "text": "next under parameters will specify the",
    "start": "143000",
    "end": "146150"
  },
  {
    "text": "MOF file we want to apply you can choose",
    "start": "146150",
    "end": "150140"
  },
  {
    "text": "to apply the MOF which will correct any",
    "start": "150140",
    "end": "152660"
  },
  {
    "text": "non-compliant resources or to simply",
    "start": "152660",
    "end": "156020"
  },
  {
    "text": "report non-compliance without changing",
    "start": "156020",
    "end": "158240"
  },
  {
    "text": "anything in this case will apply the mos",
    "start": "158240",
    "end": "163420"
  },
  {
    "text": "next let's update the compliance type",
    "start": "165630",
    "end": "168420"
  },
  {
    "text": "we'll use when reporting compliance",
    "start": "168420",
    "end": "172099"
  },
  {
    "text": "now let's select the instances we want",
    "start": "172180",
    "end": "174610"
  },
  {
    "text": "to target with the document for this",
    "start": "174610",
    "end": "177189"
  },
  {
    "text": "example we'll target instances with a",
    "start": "177189",
    "end": "179680"
  },
  {
    "text": "tag key of build and tag value of",
    "start": "179680",
    "end": "182530"
  },
  {
    "text": "standard",
    "start": "182530",
    "end": "184950"
  },
  {
    "text": "if desired you can specify a schedule to",
    "start": "186480",
    "end": "189569"
  },
  {
    "text": "run your association let's retain the",
    "start": "189569",
    "end": "192269"
  },
  {
    "text": "default settings you can also specify",
    "start": "192269",
    "end": "195530"
  },
  {
    "text": "Association compliance severity which",
    "start": "195530",
    "end": "198450"
  },
  {
    "text": "will be reflected on your compliance",
    "start": "198450",
    "end": "199980"
  },
  {
    "text": "dashboard let's specify high severity",
    "start": "199980",
    "end": "204610"
  },
  {
    "text": "now let's create the Association",
    "start": "204610",
    "end": "208860"
  },
  {
    "text": "when we review this association you'll",
    "start": "209720",
    "end": "212510"
  },
  {
    "text": "see that no resources are listed yet",
    "start": "212510",
    "end": "214730"
  },
  {
    "text": "this is because the Association did not",
    "start": "214730",
    "end": "217460"
  },
  {
    "text": "detect any running ec2 instances that",
    "start": "217460",
    "end": "220100"
  },
  {
    "text": "matched our tag value",
    "start": "220100",
    "end": "222500"
  },
  {
    "text": "to generate some instances that will be",
    "start": "222500",
    "end": "224720"
  },
  {
    "text": "affected by our new Association let's",
    "start": "224720",
    "end": "227330"
  },
  {
    "text": "navigate to AWS cloud formation and",
    "start": "227330",
    "end": "229940"
  },
  {
    "text": "create a stack",
    "start": "229940",
    "end": "233200"
  },
  {
    "text": "this is the template file we'll use to",
    "start": "233660",
    "end": "235970"
  },
  {
    "text": "create the stack this file specifies",
    "start": "235970",
    "end": "238700"
  },
  {
    "text": "that we will create three ec2 instances",
    "start": "238700",
    "end": "241280"
  },
  {
    "text": "for Windows server each with the build",
    "start": "241280",
    "end": "243740"
  },
  {
    "text": "key value of standard which matches the",
    "start": "243740",
    "end": "246380"
  },
  {
    "text": "Association we defined earlier",
    "start": "246380",
    "end": "249290"
  },
  {
    "text": "the file does not specify the",
    "start": "249290",
    "end": "251209"
  },
  {
    "text": "installation of the iis web server role",
    "start": "251209",
    "end": "253640"
  },
  {
    "text": "and it does not limit RDP access",
    "start": "253640",
    "end": "258699"
  },
  {
    "start": "259000",
    "end": "358000"
  },
  {
    "text": "now let's go through the steps to create",
    "start": "259280",
    "end": "261500"
  },
  {
    "text": "the stack",
    "start": "261500",
    "end": "264130"
  },
  {
    "text": "first specify the template file to",
    "start": "264480",
    "end": "267150"
  },
  {
    "text": "upload",
    "start": "267150",
    "end": "269419"
  },
  {
    "text": "next provide a name for the stack",
    "start": "273210",
    "end": "277610"
  },
  {
    "text": "specify the key pair to use to securely",
    "start": "278950",
    "end": "281770"
  },
  {
    "text": "connect to the instances",
    "start": "281770",
    "end": "284330"
  },
  {
    "text": "then specify the s3 bucket where the MOF",
    "start": "284330",
    "end": "287659"
  },
  {
    "text": "file is stored",
    "start": "287659",
    "end": "288669"
  },
  {
    "text": "this tells the stack choose the MOF file",
    "start": "288669",
    "end": "291800"
  },
  {
    "text": "we reviewed earlier to configure the",
    "start": "291800",
    "end": "294259"
  },
  {
    "text": "instances with the desired state after",
    "start": "294259",
    "end": "296270"
  },
  {
    "text": "they have been deployed",
    "start": "296270",
    "end": "298919"
  },
  {
    "text": "by deploying resources this way using",
    "start": "298919",
    "end": "301229"
  },
  {
    "text": "cloud formation you can enforce",
    "start": "301229",
    "end": "303449"
  },
  {
    "text": "compliance and ensure resources are in",
    "start": "303449",
    "end": "306389"
  },
  {
    "text": "the desired state as they are",
    "start": "306389",
    "end": "307860"
  },
  {
    "text": "provisioned",
    "start": "307860",
    "end": "310430"
  },
  {
    "text": "now complete the configuration and",
    "start": "310650",
    "end": "313080"
  },
  {
    "text": "review the settings",
    "start": "313080",
    "end": "316340"
  },
  {
    "text": "select the acknowledgment checkbox and",
    "start": "318870",
    "end": "321360"
  },
  {
    "text": "create the staff",
    "start": "321360",
    "end": "324349"
  },
  {
    "text": "now that the stack has been created",
    "start": "325490",
    "end": "327620"
  },
  {
    "text": "let's switch to the ec2 management",
    "start": "327620",
    "end": "329900"
  },
  {
    "text": "console to take a look at our new",
    "start": "329900",
    "end": "331610"
  },
  {
    "text": "instances",
    "start": "331610",
    "end": "334240"
  },
  {
    "text": "as you can see the three instances have",
    "start": "335000",
    "end": "337640"
  },
  {
    "text": "been created notice they all have a",
    "start": "337640",
    "end": "340370"
  },
  {
    "text": "value of standard for the build tag as",
    "start": "340370",
    "end": "342680"
  },
  {
    "text": "we specified earlier by configuring our",
    "start": "342680",
    "end": "346100"
  },
  {
    "text": "instances using the MOF file the desired",
    "start": "346100",
    "end": "349460"
  },
  {
    "text": "state has already been applied during",
    "start": "349460",
    "end": "351620"
  },
  {
    "text": "the creation of the stack so let's see",
    "start": "351620",
    "end": "354200"
  },
  {
    "text": "what Systems Manager tells us",
    "start": "354200",
    "end": "357760"
  },
  {
    "start": "358000",
    "end": "498000"
  },
  {
    "text": "navigate to compliance",
    "start": "358730",
    "end": "362320"
  },
  {
    "text": "because the Association has not had a",
    "start": "363310",
    "end": "365710"
  },
  {
    "text": "chance to run yet the Compliance",
    "start": "365710",
    "end": "367750"
  },
  {
    "text": "dashboard is telling us that the",
    "start": "367750",
    "end": "369400"
  },
  {
    "text": "resources are non-compliant",
    "start": "369400",
    "end": "373290"
  },
  {
    "text": "so let's run the Association manually to",
    "start": "374050",
    "end": "377020"
  },
  {
    "text": "force it to check compliance now",
    "start": "377020",
    "end": "380550"
  },
  {
    "text": "now let's return to the compliance",
    "start": "381460",
    "end": "383500"
  },
  {
    "text": "dashboard",
    "start": "383500",
    "end": "386070"
  },
  {
    "text": "as you can see the resources are now",
    "start": "386940",
    "end": "389610"
  },
  {
    "text": "correctly being reported as compliant",
    "start": "389610",
    "end": "392240"
  },
  {
    "text": "let's navigate back to the ec2",
    "start": "392240",
    "end": "394890"
  },
  {
    "text": "management console and do a couple of",
    "start": "394890",
    "end": "397170"
  },
  {
    "text": "quick tests to ensure that our instances",
    "start": "397170",
    "end": "399420"
  },
  {
    "text": "are now in the desired State",
    "start": "399420",
    "end": "402050"
  },
  {
    "text": "first let's copy the URL of this",
    "start": "402050",
    "end": "404870"
  },
  {
    "text": "instance so we can paste it in a new",
    "start": "404870",
    "end": "407090"
  },
  {
    "text": "browser window to check whether the iis",
    "start": "407090",
    "end": "409789"
  },
  {
    "text": "web server role has been installed",
    "start": "409789",
    "end": "413530"
  },
  {
    "text": "as you can see I is has been",
    "start": "413849",
    "end": "416249"
  },
  {
    "text": "successfully configured on this instance",
    "start": "416249",
    "end": "420379"
  },
  {
    "text": "now let's try to connect to this",
    "start": "421279",
    "end": "423499"
  },
  {
    "text": "instance using RDP",
    "start": "423499",
    "end": "427268"
  },
  {
    "text": "the RDP connection failed indicating",
    "start": "429879",
    "end": "433149"
  },
  {
    "text": "that we successfully disabled RDP access",
    "start": "433149",
    "end": "435759"
  },
  {
    "text": "to the instances with our MOS file",
    "start": "435759",
    "end": "440069"
  },
  {
    "text": "administrators should still be able to",
    "start": "440960",
    "end": "442919"
  },
  {
    "text": "connect to and manage the instances",
    "start": "442919",
    "end": "444839"
  },
  {
    "text": "using session manager let's navigate",
    "start": "444839",
    "end": "447479"
  },
  {
    "text": "there now and give it a try",
    "start": "447479",
    "end": "450290"
  },
  {
    "text": "session manager provides secure and",
    "start": "450290",
    "end": "452870"
  },
  {
    "text": "auditable instance management without",
    "start": "452870",
    "end": "455420"
  },
  {
    "text": "the need to open inbound ports maintain",
    "start": "455420",
    "end": "457730"
  },
  {
    "text": "bastion posts or manage SSH keys",
    "start": "457730",
    "end": "462460"
  },
  {
    "text": "simply select a server and start a",
    "start": "463270",
    "end": "465819"
  },
  {
    "text": "session",
    "start": "465819",
    "end": "468270"
  },
  {
    "text": "as you can see we can manage this",
    "start": "468650",
    "end": "470870"
  },
  {
    "text": "instance from here for example let's",
    "start": "470870",
    "end": "473750"
  },
  {
    "text": "restart the web server",
    "start": "473750",
    "end": "476350"
  },
  {
    "text": "you've just seen how AWS systems manager",
    "start": "476350",
    "end": "479440"
  },
  {
    "text": "integration with Windows PowerShell DSC",
    "start": "479440",
    "end": "482560"
  },
  {
    "text": "makes it possible to manage your Windows",
    "start": "482560",
    "end": "484960"
  },
  {
    "text": "Server instances by implementing",
    "start": "484960",
    "end": "487260"
  },
  {
    "text": "configurations that enforce compliance",
    "start": "487260",
    "end": "489310"
  },
  {
    "text": "to a desired state",
    "start": "489310",
    "end": "492110"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "492110",
    "end": "494539"
  },
  {
    "text": "to try",
    "start": "494539",
    "end": "496840"
  }
]