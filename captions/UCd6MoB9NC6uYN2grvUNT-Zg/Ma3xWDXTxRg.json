[
  {
    "text": "thank you so much for being here today I hope you're having a fantastic reinvented welcome to scaling up to your",
    "start": "1939",
    "end": "10860"
  },
  {
    "text": "first 10 million users now as your web",
    "start": "10860",
    "end": "15900"
  },
  {
    "text": "application becomes more and more popular and you're attaching more and more users how do you ensure that those",
    "start": "15900",
    "end": "22830"
  },
  {
    "text": "users continue to have a great experience so that's what this talk is",
    "start": "22830",
    "end": "28199"
  },
  {
    "text": "all about my name is Ben Thurgood I'm a principal Solutions Architect from",
    "start": "28199",
    "end": "33719"
  },
  {
    "text": "Sydney Australia as a 200 level presentation does anybody recognize this",
    "start": "33719",
    "end": "41340"
  },
  {
    "text": "game the Australians in the audience it's Australian rules football and those",
    "start": "41340",
    "end": "48750"
  },
  {
    "text": "goalposts in the middle if you if you get it through the middle at six points and if you miss you still got a point",
    "start": "48750",
    "end": "53879"
  },
  {
    "text": "it's pretty good so let's talk about your goals how many people in the audience today are building or operating",
    "start": "53879",
    "end": "60840"
  },
  {
    "text": "a web application almost everyone and",
    "start": "60840",
    "end": "66770"
  },
  {
    "text": "out of you can we do a little bit of a survey who's got thousands of users currently quite a number and what about",
    "start": "66770",
    "end": "76790"
  },
  {
    "text": "tens of thousands ok quite a lot about",
    "start": "76790",
    "end": "83640"
  },
  {
    "text": "hundreds of thousands it's getting big you know about millions ok cool",
    "start": "83640",
    "end": "93710"
  },
  {
    "text": "tens of millions okay I can't bring anyone up onstage",
    "start": "93710",
    "end": "99750"
  },
  {
    "text": "with me but if you saw hands go up in a segment a little bit above where you're",
    "start": "99750",
    "end": "105030"
  },
  {
    "text": "at at the moment potentially that someone you might want to have a chat to so congratulations you've done a great",
    "start": "105030",
    "end": "112830"
  },
  {
    "text": "job up to now your web applications popular and it's it's growing in popularity unfortunately I guess that",
    "start": "112830",
    "end": "121080"
  },
  {
    "text": "means you also need to know how to scale and keep ahead of that request volume",
    "start": "121080",
    "end": "127290"
  },
  {
    "text": "increasing now you might find you have to deal with sudden increases in scale",
    "start": "127290",
    "end": "134450"
  },
  {
    "text": "like one of my customers whose request volumes doubles every year around",
    "start": "134450",
    "end": "140400"
  },
  {
    "text": "September timeframe and has done for five years in a row that's a fantastic",
    "start": "140400",
    "end": "145709"
  },
  {
    "text": "high value problem to have but it makes them very nervous around the September timeframe or you might be dealing with",
    "start": "145709",
    "end": "152970"
  },
  {
    "text": "constant steady-state growth either way you want to know what to do to stay",
    "start": "152970",
    "end": "158250"
  },
  {
    "text": "ahead of that so the concepts and ideas I'm going to go through today will help",
    "start": "158250",
    "end": "163680"
  },
  {
    "text": "you no matter where you are in that journey all right so we're going to talk",
    "start": "163680",
    "end": "169890"
  },
  {
    "text": "about scaling on AWS and as technologists what do we do when we want to find out about something we look it",
    "start": "169890",
    "end": "175110"
  },
  {
    "text": "up so if we look up scaling on AWS we're gonna get a lot of hits and lots of",
    "start": "175110",
    "end": "180600"
  },
  {
    "text": "references to auto scaling that sounds fantastic right just turn that on pretty",
    "start": "180600",
    "end": "188310"
  },
  {
    "text": "much done unfortunately it's not the one",
    "start": "188310",
    "end": "193470"
  },
  {
    "text": "single thing that fixes everything there's a lot more for us to do especially when it comes to really high",
    "start": "193470",
    "end": "200610"
  },
  {
    "text": "volume scaling so that's why we have all talked about it so what do we need to do",
    "start": "200610",
    "end": "206790"
  },
  {
    "text": "first well one of the first things you'll take advantage of from a scaling perspective and actually continue to",
    "start": "206790",
    "end": "212670"
  },
  {
    "text": "take advantage of throughout your journey is the AWS global infrastructure so we have 19 regions around the world",
    "start": "212670",
    "end": "219380"
  },
  {
    "text": "you can take advantage of to scale globally each region consisting of multiple availability zones and each",
    "start": "219380",
    "end": "227760"
  },
  {
    "text": "availability zone isolated from one another in terms of power and networking and geographical",
    "start": "227760",
    "end": "233849"
  },
  {
    "text": "risks and yet close enough together to enable single-digit millisecond latency so that you can replicate your data",
    "start": "233849",
    "end": "241829"
  },
  {
    "text": "synchronously you can also take",
    "start": "241829",
    "end": "246900"
  },
  {
    "text": "advantage of over 136 plus edge locations and caches or caches whichever",
    "start": "246900",
    "end": "253620"
  },
  {
    "text": "you prefer in order to put your content closer to your users",
    "start": "253620",
    "end": "259400"
  },
  {
    "text": "so they don't have to go as far when they're making a request so it's a great experience for them but also when that",
    "start": "259400",
    "end": "267000"
  },
  {
    "text": "happens your servers aren't taking that load more on that later now we have so",
    "start": "267000",
    "end": "275580"
  },
  {
    "text": "many services to help you you can take advantage of and so many that have been",
    "start": "275580",
    "end": "281729"
  },
  {
    "text": "announced this week really exciting stuff but it's not to say you need to",
    "start": "281729",
    "end": "286949"
  },
  {
    "text": "know everything and all of these services in order to get started more just to keep in mind that we want to",
    "start": "286949",
    "end": "293250"
  },
  {
    "text": "leverage these whenever we need something we want it we don't want to have to reinvent the wheel",
    "start": "293250",
    "end": "299630"
  },
  {
    "text": "now those services come in two flavors ones that are service or managed where",
    "start": "299810",
    "end": "308240"
  },
  {
    "text": "we control the scaling and availability so they they actually have that built in",
    "start": "308240",
    "end": "314639"
  },
  {
    "text": "and there's others that can be highly available and highly scalable with the",
    "start": "314639",
    "end": "321659"
  },
  {
    "text": "right architecture so as you're making decisions about which services to use it's important to understand the",
    "start": "321659",
    "end": "327270"
  },
  {
    "text": "difference now this talk has been given every year at reinvent since it started",
    "start": "327270",
    "end": "334020"
  },
  {
    "text": "and that's because scaling while your web application is gaining in popularity",
    "start": "334020",
    "end": "339710"
  },
  {
    "text": "to ensure your users continue to have a great experience is a perennial issue and it's one of the major value",
    "start": "339710",
    "end": "347639"
  },
  {
    "text": "propositions of the cloud now I'm going to take you on a journey I'm going to",
    "start": "347639",
    "end": "353610"
  },
  {
    "text": "wind the clock starting from one user all the way up to tens of millions and",
    "start": "353610",
    "end": "359450"
  },
  {
    "text": "the journey I go through I'll choose some sequential steps",
    "start": "359450",
    "end": "364750"
  },
  {
    "text": "it'll help you sort of follow the things that you can do to help prepare for next levels of scale as you go but it's not",
    "start": "364750",
    "end": "371680"
  },
  {
    "text": "to say you have to follow this sequence depending on where you are today you may choose to skip several steps or go right",
    "start": "371680",
    "end": "378940"
  },
  {
    "text": "to a more sophisticated architecture from the beginning keep in mind there's going to be architectural trade-offs",
    "start": "378940",
    "end": "384640"
  },
  {
    "text": "there so with any of those though most",
    "start": "384640",
    "end": "390250"
  },
  {
    "text": "of them are going to be two-way doors in the sense that we can always refactor",
    "start": "390250",
    "end": "395470"
  },
  {
    "text": "and change and indeed most of what I talk about today will involve refactoring your architecture as you go",
    "start": "395470",
    "end": "402600"
  },
  {
    "text": "so best to just get building measure the results and learn from that and and",
    "start": "402600",
    "end": "409270"
  },
  {
    "text": "repeat and continue to do that as quickly as you can and I'll just mention some guiding",
    "start": "409270",
    "end": "414910"
  },
  {
    "text": "tenants that I'd recommend you follow and that's one to identify and avoid",
    "start": "414910",
    "end": "422800"
  },
  {
    "text": "undifferentiated heavy lifting so these are the things that aren't core to what",
    "start": "422800",
    "end": "428919"
  },
  {
    "text": "makes your organization and your business tick what really differentiates you for your customers and you know",
    "start": "428919",
    "end": "437470"
  },
  {
    "text": "occasionally we will have to go off and shave some yaks you know go and do some side things in order to do the main",
    "start": "437470",
    "end": "442990"
  },
  {
    "text": "thing we're trying to do but we want to try to avoid that whenever possible if you're not sure what's differentiated",
    "start": "442990",
    "end": "449530"
  },
  {
    "text": "and what's undifferentiated for you I recommend taking a look at waddling Maps it's a great technique to investigate a",
    "start": "449530",
    "end": "456669"
  },
  {
    "text": "solution you're building or even your business to identify what will really",
    "start": "456669",
    "end": "461770"
  },
  {
    "text": "make a difference for you now related to that is the idea that it's quite",
    "start": "461770",
    "end": "467470"
  },
  {
    "text": "advantageous whenever you can choose serverless over managed over build it",
    "start": "467470",
    "end": "472660"
  },
  {
    "text": "yourself because it's going to take away that undifferentiated heavy lifting for",
    "start": "472660",
    "end": "477729"
  },
  {
    "text": "you so that let's start from the",
    "start": "477729",
    "end": "483040"
  },
  {
    "text": "beginning in day one there's just one user and it's you the developer of the",
    "start": "483040",
    "end": "490270"
  },
  {
    "text": "application and you want to need to run your application on a server ok so",
    "start": "490270",
    "end": "496480"
  },
  {
    "text": "let's get started I'm gonna need a server and IP address we need to route",
    "start": "496480",
    "end": "501970"
  },
  {
    "text": "to that with a domain name now you could use the Elastic Compute cloud ec2 for",
    "start": "501970",
    "end": "508000"
  },
  {
    "text": "that or another easy way to get started is with lightsail you can actually get",
    "start": "508000",
    "end": "514840"
  },
  {
    "text": "access to a server in the cloud without having to know all the ins and outs of cloud in the beginning if you're not familiar with that we'd start from $3 50",
    "start": "514840",
    "end": "522219"
  },
  {
    "text": "a day and the nice thing about that is you can burst into full-blown ec2 and",
    "start": "522220",
    "end": "527890"
  },
  {
    "text": "AWS other services from there when you're ready now whether you've used",
    "start": "527890",
    "end": "533770"
  },
  {
    "text": "lightsail or you're left to compute cloud one of the first things you're going to need to take advantage of from",
    "start": "533770",
    "end": "540010"
  },
  {
    "text": "a scaling perspective is the instance type and size that you use as you begin",
    "start": "540010",
    "end": "546310"
  },
  {
    "text": "to monitor your application and I recommend you do that right from the beginning you'll see whether it has",
    "start": "546310",
    "end": "551490"
  },
  {
    "text": "memory requirements that are higher than usual or really high CPU requirements",
    "start": "551490",
    "end": "556800"
  },
  {
    "text": "more i/o and you can choose the instance type to match the needs of your",
    "start": "556800",
    "end": "562090"
  },
  {
    "text": "applications we have many many different instance types that you can explore and experiment with and the really nice",
    "start": "562090",
    "end": "570280"
  },
  {
    "text": "thing about the cloud as opposed to what would happen if you were doing this on premises is that at any time you can",
    "start": "570280",
    "end": "576610"
  },
  {
    "text": "stop your server change their configuration parameter and start it up again and try another server without it",
    "start": "576610",
    "end": "582730"
  },
  {
    "text": "really costing you anything to make that change and you can do the same thing with the size of the instance and this",
    "start": "582730",
    "end": "589780"
  },
  {
    "text": "is one of the things we can take advantage of from a scaling perspective we can make the Box bigger it'll give us",
    "start": "589780",
    "end": "595270"
  },
  {
    "text": "more resources we can tak-tek more users now we can give you single instances",
    "start": "595270",
    "end": "601450"
  },
  {
    "text": "with more than a petaflop of performance but no that's a supercomputer basically",
    "start": "601450",
    "end": "607480"
  },
  {
    "text": "but no matter what you're going to hit an end point eventually with a single instance there's also another problem",
    "start": "607480",
    "end": "615100"
  },
  {
    "text": "with that and that is the architecture doesn't have any failover no redundancy",
    "start": "615100",
    "end": "621220"
  },
  {
    "text": "built in we're gonna have to deal with that fairly soon so let's start to scale",
    "start": "621220",
    "end": "627730"
  },
  {
    "text": "we want to go to more than one user humble beginnings one of the first things we're going to do is separate our",
    "start": "627730",
    "end": "635800"
  },
  {
    "text": "infrastructure so that our application and our database are running separately this idea of separating your",
    "start": "635800",
    "end": "643480"
  },
  {
    "text": "infrastructure and your application out so you can operate it separately and scale up one component or change the",
    "start": "643480",
    "end": "650889"
  },
  {
    "text": "nature of the way one component is operated independently of the other is really fundamental to what I'm going to",
    "start": "650889",
    "end": "656739"
  },
  {
    "text": "talk to you about today if you get that principle you're going to be able to apply it to other areas that I'm not even mentioning ok so we've got our",
    "start": "656739",
    "end": "666459"
  },
  {
    "text": "database separated we're going to need to make a choice about the database we use we can either just put it on another",
    "start": "666459",
    "end": "672579"
  },
  {
    "text": "easy to instance and then choose any database we like the downside of that",
    "start": "672579",
    "end": "677889"
  },
  {
    "text": "though is that we're going to have to manage operate administer that database so we'll patch it back it up and do all",
    "start": "677889",
    "end": "684610"
  },
  {
    "text": "the administration tasks that's going to take time away from building your application so another option is a",
    "start": "684610",
    "end": "691299"
  },
  {
    "text": "managed database I've just listed a few here I think you've probably aware that there's a lot",
    "start": "691299",
    "end": "696459"
  },
  {
    "text": "of databases available on the ADA based platform so we've got relational",
    "start": "696459",
    "end": "702970"
  },
  {
    "text": "database service DynamoDB and neptune listed here representative of relational",
    "start": "702970",
    "end": "709749"
  },
  {
    "text": "database no no SQL and graph databases there's are many others depending on the",
    "start": "709749",
    "end": "716139"
  },
  {
    "text": "nature of your application well a relational database service gives you access to a lot of relational database",
    "start": "716139",
    "end": "722290"
  },
  {
    "text": "engines so open source engines like Maria DB my sequel Postgres as well as",
    "start": "722290",
    "end": "729279"
  },
  {
    "text": "proprietary databases like sequel server and Oracle and also gives you access to",
    "start": "729279",
    "end": "735809"
  },
  {
    "text": "Amazon Aurora which is a database where you can run either a my sequel or",
    "start": "735809",
    "end": "742689"
  },
  {
    "text": "Postgres database it's it's compatible with either so you can bring if you've got a database already running on my",
    "start": "742689",
    "end": "748720"
  },
  {
    "text": "cycle you can bring it to Aurora or Postgres and it's one of the fastest-growing services",
    "start": "748720",
    "end": "756129"
  },
  {
    "text": "on the adaboost platform and the most popular and that's because it's extremely high performance about five",
    "start": "756129",
    "end": "762639"
  },
  {
    "text": "times you equivalent open-source engine but also extremely cost-effective so you're",
    "start": "762639",
    "end": "769209"
  },
  {
    "text": "getting enterprise great performance with low cost now why am I talking about",
    "start": "769209",
    "end": "774579"
  },
  {
    "text": "this service well it has some great advantages from a scaling perspective",
    "start": "774579",
    "end": "779949"
  },
  {
    "text": "it's going to automatically scale your storage tier without you having to get involved in that that's a great",
    "start": "779949",
    "end": "785769"
  },
  {
    "text": "advantage it's gonna give you up to 15 reed replicas not to say right at the",
    "start": "785769",
    "end": "790990"
  },
  {
    "text": "beginning but as you need them you can you can tap into them if you're not sure why reed replicas are important your",
    "start": "790990",
    "end": "796120"
  },
  {
    "text": "will you'll understand that soon that's that's going to help us scale and it's",
    "start": "796120",
    "end": "801339"
  },
  {
    "text": "replicating your data six ways across three availability zones so that's giving you really high resilience to your data now one of the downsides of",
    "start": "801339",
    "end": "811569"
  },
  {
    "text": "operating a sequel database is you have to provision the capacity that the",
    "start": "811569",
    "end": "817180"
  },
  {
    "text": "database needs at least for the foreseeable future so in a given weekly",
    "start": "817180",
    "end": "822430"
  },
  {
    "text": "cycle you need to provision and make sure that you've got that peak covered and not only that when your users drop off you're still going to need to have",
    "start": "822430",
    "end": "829899"
  },
  {
    "text": "that server running not very Cloud which is why the service option with Aurora is",
    "start": "829899",
    "end": "836410"
  },
  {
    "text": "fantastic this gives you the ability to have your compute scaled in the",
    "start": "836410",
    "end": "843459"
  },
  {
    "text": "background for you as your request volumes increase on your database layer",
    "start": "843459",
    "end": "848550"
  },
  {
    "text": "Aurora will automatically scale up the compute you have access to and conversely when that decreases it'll",
    "start": "848550",
    "end": "855880"
  },
  {
    "text": "scale back down and when it detects inactivity it'll actually shut it down completely for you it's a great",
    "start": "855880",
    "end": "863350"
  },
  {
    "text": "advantage all right another thing that you'll have to contend with early on is whether to go no sequel from the",
    "start": "863350",
    "end": "870130"
  },
  {
    "text": "beginning or what sequel and this is a really popular to go no sequel from the",
    "start": "870130",
    "end": "876040"
  },
  {
    "text": "beginning these days it's quite common I'm gonna recommend that you actually start with a sequel database the reason",
    "start": "876040",
    "end": "883839"
  },
  {
    "text": "for that is it's very well known technology there's lots of code examples communities tools to help you",
    "start": "883839",
    "end": "893470"
  },
  {
    "text": "and you're really not going to break sequel technology and even in millions of users so many massive sites are",
    "start": "893470",
    "end": "899920"
  },
  {
    "text": "running using this technology today and we've got some really well understood patterns for scalability that I'm going",
    "start": "899920",
    "end": "906670"
  },
  {
    "text": "to go through as well now the caveat to that is you may want to use no sequel in",
    "start": "906670",
    "end": "916000"
  },
  {
    "text": "certain cases and that could be if you have large amounts of data and if you",
    "start": "916000",
    "end": "923560"
  },
  {
    "text": "thought that's that's me I've got lots of lumps of data let me just clarify what I mean around you know five",
    "start": "923560",
    "end": "929170"
  },
  {
    "text": "terabytes per year or more or just a really data intensive workload other",
    "start": "929170",
    "end": "934600"
  },
  {
    "text": "reasons you might want to go to no sequel from the beginning is that your data set actually matches to a no sequel",
    "start": "934600",
    "end": "940510"
  },
  {
    "text": "database so it's very you know document driven or key value pairs",
    "start": "940510",
    "end": "947310"
  },
  {
    "text": "it's very data-intensive those types of things might drive you towards that technology and equally there might be",
    "start": "947310",
    "end": "953860"
  },
  {
    "text": "other databases that you're driven to because of the nature of your application and the data that you're actually using another thing you're",
    "start": "953860",
    "end": "962860"
  },
  {
    "text": "going to need to contend with early on when you go from more than one user is actually the code that you need to",
    "start": "962860",
    "end": "968200"
  },
  {
    "text": "support those users sign in sign out registration etc now if you like me and",
    "start": "968200",
    "end": "974380"
  },
  {
    "text": "you've built lots of web applications in the past you would have implemented these user stories over and over and",
    "start": "974380",
    "end": "981370"
  },
  {
    "text": "over and over and over again now you can continue to do that or another option is",
    "start": "981370",
    "end": "987340"
  },
  {
    "text": "to use Amazon kognito which implements all of that for you save yourself some sprint cycles get started a little",
    "start": "987340",
    "end": "993460"
  },
  {
    "text": "earlier into the rest of your code it gives you all of that sign-in sign out registration multi-factor authentication",
    "start": "993460",
    "end": "1001170"
  },
  {
    "text": "and user database as well as Federation and other sorts of things you'd like now",
    "start": "1001170",
    "end": "1007560"
  },
  {
    "text": "since we're talking about security let me just go through a quick checklist even though this is just talk about scalability we want to make sure",
    "start": "1007560",
    "end": "1014460"
  },
  {
    "text": "security is well in place so that we have confidence in order to scale so it",
    "start": "1014460",
    "end": "1021690"
  },
  {
    "text": "starts with I am Identity and Access Management on the cloud as opposed to",
    "start": "1021690",
    "end": "1026760"
  },
  {
    "text": "on premises we now have the ability to make sure we authenticate and authorize anyone who does anything to our",
    "start": "1026760",
    "end": "1032670"
  },
  {
    "text": "infrastructure so it's going to be one of the fundamental building blocks blocks we can use in order to control what happens there now as a minimum I'd",
    "start": "1032670",
    "end": "1042959"
  },
  {
    "text": "also recommend you have cloud trail enabled that's giving you an audit trail of everything that happens on there to",
    "start": "1042959",
    "end": "1050430"
  },
  {
    "text": "your accounts and your resources I'd recommend you enable guard duty this is",
    "start": "1050430",
    "end": "1056730"
  },
  {
    "text": "going to continuously monitor for any unauthorized or malicious behavior and",
    "start": "1056730",
    "end": "1066960"
  },
  {
    "text": "alert you to let you know that this is going on AWS shield everyone on the AWS",
    "start": "1066960",
    "end": "1074160"
  },
  {
    "text": "cloud that's connecting to the Internet is protected by AWS shield that's",
    "start": "1074160",
    "end": "1079320"
  },
  {
    "text": "protecting you from the vast majority of denial of service attacks now you can get a high level of protection with a",
    "start": "1079320",
    "end": "1085440"
  },
  {
    "text": "shield advanced as well give you high levels of protection and support now",
    "start": "1085440",
    "end": "1091650"
  },
  {
    "text": "some other services that I'd recommend and just mention is secrets manager this",
    "start": "1091650",
    "end": "1097140"
  },
  {
    "text": "is going to help you externalise your database passwords or any other secrets that are reused by your application so",
    "start": "1097140",
    "end": "1103590"
  },
  {
    "text": "you don't actually accidentally put them into your source code a DB swath will",
    "start": "1103590",
    "end": "1110250"
  },
  {
    "text": "give you application layer protection from sequel scripting or cross-site scripting sequel injection and apologies",
    "start": "1110250",
    "end": "1117270"
  },
  {
    "text": "and then of course you've got certificate manager giving you encryption in transit and key management",
    "start": "1117270",
    "end": "1124670"
  },
  {
    "text": "service giving you encryption at rest and finally I'll mention config which",
    "start": "1124670",
    "end": "1131010"
  },
  {
    "text": "gives you a complete configuration of all of your AWS resources which you can",
    "start": "1131010",
    "end": "1136800"
  },
  {
    "text": "use in conjunction with config rules to ensure your applications and all of your accounts are compliant with your",
    "start": "1136800",
    "end": "1143700"
  },
  {
    "text": "policies your security policies at all times giving you a continuous assurance okay so let's get scaling still humble",
    "start": "1143700",
    "end": "1152070"
  },
  {
    "text": "beginnings and you can imagine I'm winding the clock forward so this is going to start getting fast you wouldn't",
    "start": "1152070",
    "end": "1158850"
  },
  {
    "text": "necessarily make all of the Changez one day after another it would depend on what's happening in your application so one of the first things",
    "start": "1158850",
    "end": "1166290"
  },
  {
    "text": "that I'm going to suggest you do in order to prepare yourself for scaling is actually use the relational database",
    "start": "1166290",
    "end": "1172440"
  },
  {
    "text": "service if you're using a sequel database one reason is to take away that heavy lifting another reason is because",
    "start": "1172440",
    "end": "1179430"
  },
  {
    "text": "it gives you features that will help scaling help you scale a lot more easily",
    "start": "1179430",
    "end": "1185390"
  },
  {
    "text": "so we'll get to those in a moment so let's go for thousands of users and",
    "start": "1185390",
    "end": "1190950"
  },
  {
    "text": "that's a lot of a majority of you here today and the first thing we're going to",
    "start": "1190950",
    "end": "1196560"
  },
  {
    "text": "do with thousands of users is have the ability to scale out and we're going to",
    "start": "1196560",
    "end": "1202680"
  },
  {
    "text": "take advantage of these availability zones to give us resilience across the availability zones we're also going to",
    "start": "1202680",
    "end": "1209850"
  },
  {
    "text": "take advantage of a feature on the relational database service called multi AZ database so where we can actually",
    "start": "1209850",
    "end": "1217170"
  },
  {
    "text": "create a standby database that synchronously replicated for us now this",
    "start": "1217170",
    "end": "1223680"
  },
  {
    "text": "load balancing that's happening between the applications here at the top is",
    "start": "1223680",
    "end": "1229680"
  },
  {
    "text": "enabled by the elastic load balancer so you need to choose an elastic load",
    "start": "1229680",
    "end": "1236400"
  },
  {
    "text": "balancer there's a few different options to choose from going to recommend you choose the application load balancer in",
    "start": "1236400",
    "end": "1242970"
  },
  {
    "text": "most cases it gives you the ability to automatically monitor the health of all",
    "start": "1242970",
    "end": "1249900"
  },
  {
    "text": "of your instances so that it won't route to any instances that become unhealthy or out of service it also has some great",
    "start": "1249900",
    "end": "1256550"
  },
  {
    "text": "advanced features like content-based routing that you may use down the track",
    "start": "1256550",
    "end": "1262310"
  },
  {
    "text": "okay so with this in place now we have access to two of the most powerful",
    "start": "1262340",
    "end": "1267780"
  },
  {
    "text": "levers that are available to us from a scaling perspective one being scaling up",
    "start": "1267780",
    "end": "1273450"
  },
  {
    "text": "in terms of the size of resources we use and the other being scaling out to the",
    "start": "1273450",
    "end": "1279960"
  },
  {
    "text": "number of servers and this is going to hold us in good stead as we accumulate users we can start to tweak and use",
    "start": "1279960",
    "end": "1288060"
  },
  {
    "text": "those levers as we go and we're going to continuously tap into that",
    "start": "1288060",
    "end": "1294419"
  },
  {
    "text": "let's go for tens of thousands of users now starting to get serious at this",
    "start": "1294419",
    "end": "1301059"
  },
  {
    "text": "level we are fanning out the number of servers in the application tier and you",
    "start": "1301059",
    "end": "1310510"
  },
  {
    "text": "mentioned before the elastic load balancer isn't a single instance it's it's a managed service service so it's",
    "start": "1310510",
    "end": "1318190"
  },
  {
    "text": "not a single point of failure it's it's going to be automatically managed in terms of the number of requests at skinning and then it will be able to",
    "start": "1318190",
    "end": "1324580"
  },
  {
    "text": "scale out all of those requests to the application to you now that poor main",
    "start": "1324580",
    "end": "1330909"
  },
  {
    "text": "database might start seeing can some contention if that's the case if you start scaling out really really far so",
    "start": "1330909",
    "end": "1337330"
  },
  {
    "text": "one of the things you can do is take advantage of another relational database service feature to have read replicas",
    "start": "1337330",
    "end": "1343440"
  },
  {
    "text": "some of the database engines have this available and by having read replicas you're able to offload that read traffic",
    "start": "1343440",
    "end": "1350590"
  },
  {
    "text": "from your primary database on to those read replicas and that's going to take a",
    "start": "1350590",
    "end": "1356080"
  },
  {
    "text": "lot of that load off that main database that's also going to affect what size database you need if you're able to",
    "start": "1356080",
    "end": "1362679"
  },
  {
    "text": "spread that load right now as we grow we",
    "start": "1362679",
    "end": "1370029"
  },
  {
    "text": "can start to shift some load around even more one of the first things we could do",
    "start": "1370029",
    "end": "1375490"
  },
  {
    "text": "is take our static content and put it in an s3 the simple storage service let",
    "start": "1375490",
    "end": "1381039"
  },
  {
    "text": "that be served over there and even cache that content using cloud front content",
    "start": "1381039",
    "end": "1386260"
  },
  {
    "text": "delivery network so Amazon s3 is one of",
    "start": "1386260",
    "end": "1391750"
  },
  {
    "text": "the most underrated services on the ADA best platform it's one of my favorite services that's because it's extremely",
    "start": "1391750",
    "end": "1396970"
  },
  {
    "text": "highly durable so it's designed for eleven nines of durability meaning that",
    "start": "1396970",
    "end": "1402340"
  },
  {
    "text": "if you have something like ten thousand objects or so you can keep those objects for 10 million years you could expect to",
    "start": "1402340",
    "end": "1408250"
  },
  {
    "text": "maybe lose one after that time the other thing is it's incredibly scalable pretty",
    "start": "1408250",
    "end": "1414789"
  },
  {
    "text": "much infinitely scalable in terms of storage and request volume so that's",
    "start": "1414789",
    "end": "1419830"
  },
  {
    "text": "just gonna be taken care of for you card front our content delivery network",
    "start": "1419830",
    "end": "1427090"
  },
  {
    "text": "can be used to take advantage of those edge locations and put your content",
    "start": "1427090",
    "end": "1432380"
  },
  {
    "text": "closer to where your users are and on a content delivery network it's going to",
    "start": "1432380",
    "end": "1437930"
  },
  {
    "text": "reduce both the load times for our users as well as our server load now",
    "start": "1437930",
    "end": "1445490"
  },
  {
    "text": "interestingly that's not just for static content that's also for dynamic content",
    "start": "1445490",
    "end": "1450860"
  },
  {
    "text": "that's constantly changing and may not be able to be cached at all if not for",
    "start": "1450860",
    "end": "1456050"
  },
  {
    "text": "very long and that's because cloud front is actually going to accelerate the connectivity between your resources in",
    "start": "1456050",
    "end": "1465350"
  },
  {
    "text": "your V PC and those edge locations now",
    "start": "1465350",
    "end": "1470360"
  },
  {
    "text": "the other graph at the bottom rye is showing you the experience one of our customers had they were getting around",
    "start": "1470360",
    "end": "1476120"
  },
  {
    "text": "five gigabits per second in traffic on a normal day and then they suddenly had a massive spike and they got up to 70",
    "start": "1476120",
    "end": "1484070"
  },
  {
    "text": "gigabits per second in request volume now the interesting thing that happened here is that they actually absorbed all",
    "start": "1484070",
    "end": "1491840"
  },
  {
    "text": "of those requests CloudFront absorbed it and their web servers didn't have to",
    "start": "1491840",
    "end": "1498230"
  },
  {
    "text": "take any of that traffic so this is a really powerful capability that you can tap into just by putting that in front",
    "start": "1498230",
    "end": "1503929"
  },
  {
    "text": "of your application now as we grow again",
    "start": "1503929",
    "end": "1510350"
  },
  {
    "text": "we can start to spread more load use caching or caching even further by using",
    "start": "1510350",
    "end": "1517270"
  },
  {
    "text": "ElastiCache now we're caching our database requests whenever we're able to",
    "start": "1517270",
    "end": "1523670"
  },
  {
    "text": "cache our database requests we don't have to go all the way to the database for that information save our database",
    "start": "1523670",
    "end": "1528770"
  },
  {
    "text": "from from some of that load so Amazon ElastiCache gives you either a managed",
    "start": "1528770",
    "end": "1535330"
  },
  {
    "text": "memcache D or Redis cluster will scale up in terms of the amount of nodes and",
    "start": "1535330",
    "end": "1542230"
  },
  {
    "text": "it will reduce those requests when this when the caches head down to single digit milliseconds shift the load around",
    "start": "1542230",
    "end": "1552110"
  },
  {
    "text": "even more now you could tap into something like a no sequel database force during your",
    "start": "1552110",
    "end": "1559280"
  },
  {
    "text": "session content separately from your relational database server so Amazon",
    "start": "1559280",
    "end": "1566929"
  },
  {
    "text": "DynamoDB is good option for that it's no sequel database it allows you to",
    "start": "1566929",
    "end": "1572000"
  },
  {
    "text": "provision throughput in terms of both read and write performance and it will automatically scale that for you and",
    "start": "1572000",
    "end": "1580150"
  },
  {
    "text": "also if you start to grow and grow want to go global you can actually access",
    "start": "1580150",
    "end": "1586840"
  },
  {
    "text": "multi master database that will replicate your data all around the world if you choose to use that now one",
    "start": "1586840",
    "end": "1595580"
  },
  {
    "text": "service that's really powerful when you start to think about moving your data from one database to another is the",
    "start": "1595580",
    "end": "1601520"
  },
  {
    "text": "database migration service this is where you can actually have a source database and a target database and it will fully",
    "start": "1601520",
    "end": "1607610"
  },
  {
    "text": "load data from one to the other and then keep the two in sync using change data capture which means it",
    "start": "1607610",
    "end": "1614600"
  },
  {
    "text": "doesn't adversely affect the performance of the source database once you're ready you can file that over to the new target",
    "start": "1614600",
    "end": "1621160"
  },
  {
    "text": "now this could be when you're wanting to move your data from my sequel to Aurora",
    "start": "1621160",
    "end": "1627500"
  },
  {
    "text": "or from a sequel database to a no sequel database and the reason for this is you",
    "start": "1627500",
    "end": "1633650"
  },
  {
    "text": "can actually use the database migration service in conjunction with the schema",
    "start": "1633650",
    "end": "1638660"
  },
  {
    "text": "conversion toolkit in order to change the schema and the way the data is",
    "start": "1638660",
    "end": "1643760"
  },
  {
    "text": "actually stored and this gives you the ability to do heterogeneous migrations so you can go from even Oracle to my",
    "start": "1643760",
    "end": "1650870"
  },
  {
    "text": "sequel or Postgres so we've lightened up",
    "start": "1650870",
    "end": "1656870"
  },
  {
    "text": "the infrastructure we've spread the load number I talked about separating those components and spreading the load is a",
    "start": "1656870",
    "end": "1662150"
  },
  {
    "text": "key principle that we're going to continue to tap into and this is a good time to go back to that what I mentioned",
    "start": "1662150",
    "end": "1668809"
  },
  {
    "text": "at the beginning of the talk auto-scaling if you look at a typical week at amazon.com you'll see that the",
    "start": "1668809",
    "end": "1675440"
  },
  {
    "text": "traffic is increasing during the day and then decreasing at night on a pretty regular pattern and if we provision",
    "start": "1675440",
    "end": "1683870"
  },
  {
    "text": "capacity for that above what we're seeing in those Peaks this is actually pretty conservative we probably want to make sure that we're",
    "start": "1683870",
    "end": "1689559"
  },
  {
    "text": "provisioning above that we'll actually have a fair bit of our servers that are",
    "start": "1689559",
    "end": "1695019"
  },
  {
    "text": "being underutilized now what about what happens in November well that amazon.com we see the steady",
    "start": "1695019",
    "end": "1701830"
  },
  {
    "text": "increase through November of requests volume until we see massive spikes for Black Friday and Cyber Monday",
    "start": "1701830",
    "end": "1707049"
  },
  {
    "text": "so earlier this week we provision for that then most of the capacity we have",
    "start": "1707049",
    "end": "1713200"
  },
  {
    "text": "is not utilized and this is not a good situation to be in what we'd really",
    "start": "1713200",
    "end": "1720070"
  },
  {
    "text": "prefer is to have our capacity increased in lockstep with our request volume and",
    "start": "1720070",
    "end": "1726870"
  },
  {
    "text": "decreased again when we don't need it to be there anymore so auto-scaling lets us",
    "start": "1726870",
    "end": "1732730"
  },
  {
    "text": "do this it's actually really easy to use the command to set up an auto scaling group is down the bottom there and you",
    "start": "1732730",
    "end": "1739990"
  },
  {
    "text": "configure your auto scaling group by giving it a minimum and maximum and then based on cloud watch alarms as to",
    "start": "1739990",
    "end": "1747700"
  },
  {
    "text": "whether your CPU performance is getting too high or the request volume is getting too large an alarm will fire and",
    "start": "1747700",
    "end": "1754299"
  },
  {
    "text": "auto scaling will automatically add a node into your cluster and conversely",
    "start": "1754299",
    "end": "1760090"
  },
  {
    "text": "when the CPU drops back down or the request volume drops back down another alarm will fire and the node will be",
    "start": "1760090",
    "end": "1767350"
  },
  {
    "text": "taken out of your cluster for you automatically so if we put all that",
    "start": "1767350",
    "end": "1772720"
  },
  {
    "text": "together we imagine going forward in time and we've taken advantage of all those aspects we see something like this",
    "start": "1772720",
    "end": "1779679"
  },
  {
    "text": "we've got I've read replicas where caching we were offloaded some of our",
    "start": "1779679",
    "end": "1784840"
  },
  {
    "text": "content to no sequel we're offloading our static content to s3 we're caching the whole thing at cloud front we're",
    "start": "1784840",
    "end": "1792580"
  },
  {
    "text": "auto scaling and we've got an auto scaling group in each of the availability zones we have access to now",
    "start": "1792580",
    "end": "1798370"
  },
  {
    "text": "I'm only depicting two but we could have three or four or five depending on the region that we're operating in but what",
    "start": "1798370",
    "end": "1805960"
  },
  {
    "text": "I'd actually prefer to do is just have a single auto scaling group spanning all",
    "start": "1805960",
    "end": "1811059"
  },
  {
    "text": "of those availability zones and automatically balancing the servers for me so I don't have to make any of those",
    "start": "1811059",
    "end": "1817929"
  },
  {
    "text": "changes myself",
    "start": "1817929",
    "end": "1821370"
  },
  {
    "text": "all right so up to now we've already taken advantage of automation to get the",
    "start": "1823529",
    "end": "1831460"
  },
  {
    "text": "auto scaling going but as we continue to refactor it will be advantageous for us",
    "start": "1831460",
    "end": "1838090"
  },
  {
    "text": "if we were able to automatically provision our infrastructure because as",
    "start": "1838090",
    "end": "1843279"
  },
  {
    "text": "we refactor that'll make the work our team has to do to provision those refactored changes a lot easier you",
    "start": "1843279",
    "end": "1850029"
  },
  {
    "text": "could automatically test them for example we can do Bluegreen deployment things like that so let's talk about",
    "start": "1850029",
    "end": "1856059"
  },
  {
    "text": "some of the ways in which you can do that one is with AWS Systems Manager and this lets you automate administration",
    "start": "1856059",
    "end": "1863440"
  },
  {
    "text": "tasks for your servers in the cloud or on-premise it also gives you access to",
    "start": "1863440",
    "end": "1869229"
  },
  {
    "text": "the shell of those servers without you having to run bastian or jump boxes",
    "start": "1869229",
    "end": "1875049"
  },
  {
    "text": "which is really cool it's very reasonably priced because you only pay for the ec2 instances that get run in",
    "start": "1875049",
    "end": "1881710"
  },
  {
    "text": "order to complete those administration tasks other infrastructure automation",
    "start": "1881710",
    "end": "1887649"
  },
  {
    "text": "tools you have available there's lots of options and they tend to range from ones",
    "start": "1887649",
    "end": "1892809"
  },
  {
    "text": "that give you lots of convenience but not much control to ones that give you lots of control but aren't as convenient",
    "start": "1892809",
    "end": "1898379"
  },
  {
    "text": "let's go through a few of them the first thing is the all of the services on the",
    "start": "1898379",
    "end": "1904869"
  },
  {
    "text": "ATS platform have an API that you can tap tap into to actually control programmatically the way your resources",
    "start": "1904869",
    "end": "1911440"
  },
  {
    "text": "work so you can automate your infrastructure that way now it gives you a burst amount of control but you are",
    "start": "1911440",
    "end": "1917499"
  },
  {
    "text": "going to need to do all those changes yourself the other end of the spectrum",
    "start": "1917499",
    "end": "1922989"
  },
  {
    "text": "if you like to work in tools like chef or puppet you can use Ops works as a",
    "start": "1922989",
    "end": "1928479"
  },
  {
    "text": "managed service for that or if you'd like to just give us your application",
    "start": "1928479",
    "end": "1934859"
  },
  {
    "text": "elastic Beanstalk will take your application determine what infrastructure that application needs and automatically provision and manage",
    "start": "1934859",
    "end": "1941440"
  },
  {
    "text": "that for you or if you prefer containers",
    "start": "1941440",
    "end": "1946679"
  },
  {
    "text": "we can give you a managed control plane with either the elastic container",
    "start": "1946679",
    "end": "1952299"
  },
  {
    "text": "service or the elastic kuba service or if you'd prefer to let AWS",
    "start": "1952299",
    "end": "1959419"
  },
  {
    "text": "manage the control plane for you you can use Fargate just give us your container and we'll do the rest and finally if you",
    "start": "1959419",
    "end": "1967639"
  },
  {
    "text": "use cloud formation you can actually declaratively define your infrastructure",
    "start": "1967639",
    "end": "1974299"
  },
  {
    "text": "as code and cloud formation is smart enough to know which order in order to",
    "start": "1974299",
    "end": "1980690"
  },
  {
    "text": "deploy that code sorry that infrastructure it'll know whether it",
    "start": "1980690",
    "end": "1986570"
  },
  {
    "text": "needs to make a small change or a large change when you're going from one",
    "start": "1986570",
    "end": "1991820"
  },
  {
    "text": "release to another it'll determine that for you and it all automatically rollback if it encounters any issues now",
    "start": "1991820",
    "end": "2000190"
  },
  {
    "text": "this concept of treating your infrastructure as code or a mutable infrastructure is incredibly powerful",
    "start": "2000190",
    "end": "2006639"
  },
  {
    "text": "because it allows you to start treating your infrastructure as part of your application code and this means you can",
    "start": "2006639",
    "end": "2012279"
  },
  {
    "text": "start to use the same CI CD practices and DevOps practices you're using for your application with your",
    "start": "2012279",
    "end": "2019360"
  },
  {
    "text": "infrastructure sub tools we have available to help you do that there's lots of third-party tools out there that",
    "start": "2019360",
    "end": "2026049"
  },
  {
    "text": "are really popular these are just some of the ones that have on the ADA boost platform you've got cloud 9 which is an",
    "start": "2026049",
    "end": "2031269"
  },
  {
    "text": "IDE in the cloud which is very cloud integrated makes it really easy to do cloud programming sorry you've got code",
    "start": "2031269",
    "end": "2040269"
  },
  {
    "text": "commit for managing your git repos code bills for automatically deploying and",
    "start": "2040269",
    "end": "2046179"
  },
  {
    "text": "code deploy for automatically deploying so I built for building deploy for",
    "start": "2046179",
    "end": "2051908"
  },
  {
    "text": "deploying and the whole CI GCD pipeline can be managed by code pipeline now you",
    "start": "2051909",
    "end": "2058118"
  },
  {
    "text": "can set up pretty much any CI CD pipeline that you want using these tools",
    "start": "2058119",
    "end": "2063460"
  },
  {
    "text": "you can have really complex and powerful setups you just need to set it up or",
    "start": "2063460",
    "end": "2069450"
  },
  {
    "text": "another option you've got is to use code star which will automatically provision",
    "start": "2069450",
    "end": "2075128"
  },
  {
    "text": "and configure all of those CI CD tools that I mentioned previously for you depending on the type of project you're",
    "start": "2075129",
    "end": "2080799"
  },
  {
    "text": "working on so that can be a great advantage now I've mentioned monitoring a few",
    "start": "2080799",
    "end": "2087158"
  },
  {
    "text": "times but we're talking about getting into 500,000 or so users now and the",
    "start": "2087159",
    "end": "2093310"
  },
  {
    "text": "type of application and infrastructure set up we've got so we're going to want to get as much as we can out of all of",
    "start": "2093310",
    "end": "2100270"
  },
  {
    "text": "our platform so monitoring is going to become really important now there's many",
    "start": "2100270",
    "end": "2105609"
  },
  {
    "text": "third-party tools available for this if you go through the partner pavilion you'll be able to see many different",
    "start": "2105609",
    "end": "2111280"
  },
  {
    "text": "options you can also use some AWS tools the things that you would like to",
    "start": "2111280",
    "end": "2117369"
  },
  {
    "text": "monitor for things like host level metrics with CPU memory i/o that type of thing again decide helping you decide",
    "start": "2117369",
    "end": "2123940"
  },
  {
    "text": "which type of instance to use which size of instance to use you can look at",
    "start": "2123940",
    "end": "2129099"
  },
  {
    "text": "aggregate level metrics so things like response time and other metrics like that a key thing to look out for there",
    "start": "2129099",
    "end": "2136180"
  },
  {
    "text": "is not just average average things tend to be quite average so take advantage of",
    "start": "2136180",
    "end": "2142710"
  },
  {
    "text": "percentiles whenever you can so you know what's the worst ten percent of the requests that I'm seeing right now or",
    "start": "2142710",
    "end": "2148480"
  },
  {
    "text": "what's the worst one percent and that'll tend to help you really hone in on those issues you're having you can use you P",
    "start": "2148480",
    "end": "2155470"
  },
  {
    "text": "99 and P 90 and things like that centralizing your logs is also really critical to make sure that you're able",
    "start": "2155470",
    "end": "2161200"
  },
  {
    "text": "to track any kind of performance issues hot spots errors that are happening do",
    "start": "2161200",
    "end": "2167950"
  },
  {
    "text": "some troubleshooting and finally one of the most important things is what's actually happening for your users so",
    "start": "2167950",
    "end": "2173980"
  },
  {
    "text": "your external site performance now a lot of this you can get access to through",
    "start": "2173980",
    "end": "2179830"
  },
  {
    "text": "Amazon Cloud watch because you all of that auto scaling capability that I mentioned earlier but as well as that",
    "start": "2179830",
    "end": "2185530"
  },
  {
    "text": "you can create your own dashboards and metrics for all sorts of other things you want to keep track of firing alarms and cloud which is also the source of",
    "start": "2185530",
    "end": "2193170"
  },
  {
    "text": "where you can centralize your logs and will collect any events that are",
    "start": "2193170",
    "end": "2198580"
  },
  {
    "text": "happening in your system so these days there are a lot of events that fire off as a result of changes in your",
    "start": "2198580",
    "end": "2204490"
  },
  {
    "text": "infrastructure and application and you can be tapping into those and using them to automate ok so up to now we've",
    "start": "2204490",
    "end": "2213280"
  },
  {
    "text": "focused on infrastructure changes that's fair enough we've been able to get by",
    "start": "2213280",
    "end": "2218619"
  },
  {
    "text": "large degree up to a very large number of users by doing that and I've assumed",
    "start": "2218619",
    "end": "2223749"
  },
  {
    "text": "up to now that you've got a monolithic application now mama like a monolithic",
    "start": "2223749",
    "end": "2229960"
  },
  {
    "text": "application meaning that our applications in one codebase now the problem with that is that if we",
    "start": "2229960",
    "end": "2236049"
  },
  {
    "text": "want to actually break that apart and scale it separately we can't",
    "start": "2236049",
    "end": "2241499"
  },
  {
    "text": "so perhaps SOA can help so what's that",
    "start": "2241499",
    "end": "2247539"
  },
  {
    "text": "let's get our browser out again and have a look if we search for oak we get lots of hits and some things that may not be",
    "start": "2247539",
    "end": "2255190"
  },
  {
    "text": "that helpful but one thing that is service oriented architecture so",
    "start": "2255190",
    "end": "2261160"
  },
  {
    "text": "service-oriented architecture is about breaking our application into separate components that are going to collaborate",
    "start": "2261160",
    "end": "2268150"
  },
  {
    "text": "together in order to get this work done for application and they're going to do that by communicating through",
    "start": "2268150",
    "end": "2273519"
  },
  {
    "text": "well-designed interfaces this is going to enable us to operate and scale those",
    "start": "2273519",
    "end": "2281789"
  },
  {
    "text": "components of our system independently as we start to tap into these",
    "start": "2281789",
    "end": "2287829"
  },
  {
    "text": "technologies and we start to add capabilities to our system let's remember to try to use service whenever",
    "start": "2287829",
    "end": "2294220"
  },
  {
    "text": "we can many different server lists capabilities available you can stitch",
    "start": "2294220",
    "end": "2299410"
  },
  {
    "text": "together to perform different aspects of your system as you start to tease them apart and one of the things that you",
    "start": "2299410",
    "end": "2305529"
  },
  {
    "text": "could enable with that using something like the simple queuing service or the simple notification service is loose",
    "start": "2305529",
    "end": "2311140"
  },
  {
    "text": "coupling once we get to the point where those components are separated it may be",
    "start": "2311140",
    "end": "2316359"
  },
  {
    "text": "that one component is able to do some of the work that we need in the background and not necessarily have to respond",
    "start": "2316359",
    "end": "2322150"
  },
  {
    "text": "synchronously all the time and here's what we can tap into queueing that way",
    "start": "2322150",
    "end": "2327279"
  },
  {
    "text": "we can really start to play with exactly how we scale those individual components",
    "start": "2327279",
    "end": "2334018"
  },
  {
    "text": "another pattern that's becoming really important and that we're focusing on more and more and more is event-driven",
    "start": "2335609",
    "end": "2342249"
  },
  {
    "text": "programming some has some great advantages and you can use AWS lambda to",
    "start": "2342249",
    "end": "2348999"
  },
  {
    "text": "run your code hopefully you saw the keynote today and some of the announcements for a dubious",
    "start": "2348999",
    "end": "2354010"
  },
  {
    "text": "lambda you can run your code in whatever language you decide we've got lots of",
    "start": "2354010",
    "end": "2359320"
  },
  {
    "text": "ones that are built-in and you can bring your own code now it's service so it's",
    "start": "2359320",
    "end": "2365320"
  },
  {
    "text": "implicitly scaling and it's going to run your code just for the moment that it runs just that it that it needs to in",
    "start": "2365320",
    "end": "2373540"
  },
  {
    "text": "response to events that you're listening that you've just you've you've said it to listen for and that could be events",
    "start": "2373540",
    "end": "2379510"
  },
  {
    "text": "within that are generated from other AWS services like these are a few examples here s3 bucket something gets added to",
    "start": "2379510",
    "end": "2386740"
  },
  {
    "text": "your s3 bucket you automatically go and process it for example but your code code isn't run in the meantime there's no idle time here be running responding",
    "start": "2386740",
    "end": "2394600"
  },
  {
    "text": "to a DynamoDB stream or a Kinesis stream there's many different options available for this today now if you're using those",
    "start": "2394600",
    "end": "2401410"
  },
  {
    "text": "components you've separate the components of your system and you're using queuing and event-driven",
    "start": "2401410",
    "end": "2406780"
  },
  {
    "text": "programming this is really going to enable a lot of scaling in your system",
    "start": "2406780",
    "end": "2411870"
  },
  {
    "text": "you're going to start to be able to support quite a lot of users by doing these types of things in your",
    "start": "2411870",
    "end": "2417280"
  },
  {
    "text": "infrastructure and if you take that concept even further of a service",
    "start": "2417280",
    "end": "2423760"
  },
  {
    "text": "application with broken apart components you can actually create the entire application in a serviced way and here's",
    "start": "2423760",
    "end": "2432220"
  },
  {
    "text": "an example where you're using s3 to do the static content using lambda to do",
    "start": "2432220",
    "end": "2437560"
  },
  {
    "text": "the compute API gateway to control the access to those that compute dynamodb is",
    "start": "2437560",
    "end": "2444250"
  },
  {
    "text": "the database and caching the whole thing with cloud front where's our user",
    "start": "2444250",
    "end": "2449410"
  },
  {
    "text": "interface code going to run though well here we can actually have the ultimate",
    "start": "2449410",
    "end": "2455560"
  },
  {
    "text": "in distributed computing by allowing our user interface code to run on our users",
    "start": "2455560",
    "end": "2461230"
  },
  {
    "text": "browsers we can do that using a civilus application sorry a single page",
    "start": "2461230",
    "end": "2468400"
  },
  {
    "text": "application we use one of these frameworks to do that ember or react or",
    "start": "2468400",
    "end": "2474610"
  },
  {
    "text": "angular an AWS put out a to be us amplify to make it really easy to make",
    "start": "2474610",
    "end": "2480550"
  },
  {
    "text": "single page applications that integrate into the cloud and you can use that either in pure JavaScript Orange",
    "start": "2480550",
    "end": "2486190"
  },
  {
    "text": "with one of the frameworks that you prefer to use taking this the service",
    "start": "2486190",
    "end": "2493270"
  },
  {
    "text": "oriented architecture concept to its ultimate you can even explore micro-services where your component",
    "start": "2493270",
    "end": "2499630"
  },
  {
    "text": "izing down the aspects of your application to their minimum parts the",
    "start": "2499630",
    "end": "2505090"
  },
  {
    "text": "minimum that they need to do in order to actually get their work done and they'll",
    "start": "2505090",
    "end": "2510640"
  },
  {
    "text": "look after the data that they're responsible for and they'll collaborate together many",
    "start": "2510640",
    "end": "2516370"
  },
  {
    "text": "different ways to implement this pattern one example is with the services that I mentioned earlier API gateway and lambda",
    "start": "2516370",
    "end": "2523750"
  },
  {
    "text": "as many others now if you're starting to look at this coming from a monolithic",
    "start": "2523750",
    "end": "2529630"
  },
  {
    "text": "application perspective and going well this is actually going to get pretty complicated you'd be right this is this is starting",
    "start": "2529630",
    "end": "2536110"
  },
  {
    "text": "to be complicated this is a trade-off we have to make in order to get this distributed distributed capability and",
    "start": "2536110",
    "end": "2543250"
  },
  {
    "text": "operate these individual components we also get some advantages on top of the",
    "start": "2543250",
    "end": "2548350"
  },
  {
    "text": "distribution we start to be able to divvy up the work amongst more teams and",
    "start": "2548350",
    "end": "2553390"
  },
  {
    "text": "scale our development capability but in terms of keeping track of what's going",
    "start": "2553390",
    "end": "2558610"
  },
  {
    "text": "on how do we know where those request volumes are going and how do we pinpoint problems we recommend to look at AWS",
    "start": "2558610",
    "end": "2566170"
  },
  {
    "text": "x-ray at this stage because it'll give you the ability to pinpoint any issues track where the requests are going and",
    "start": "2566170",
    "end": "2573130"
  },
  {
    "text": "help ensure everything is operating smoothly for example it'll automatically generate a call graph of the requests",
    "start": "2573130",
    "end": "2581200"
  },
  {
    "text": "that it sees going through your system and it'll show you what's happening with those calls and you can even dive into",
    "start": "2581200",
    "end": "2587830"
  },
  {
    "text": "any of one of these points and find out a trace of what's actually going on in detail so let's go for millions of users",
    "start": "2587830",
    "end": "2598540"
  },
  {
    "text": "with all of this capability we've built up we've taken all of these different",
    "start": "2598540",
    "end": "2605920"
  },
  {
    "text": "aspects and approaches together to come",
    "start": "2605920",
    "end": "2611650"
  },
  {
    "text": "up with something like this here we've got our auto scaling we've got our you",
    "start": "2611650",
    "end": "2617470"
  },
  {
    "text": "know across multiple AZ's read replicas were caching at multiple",
    "start": "2617470",
    "end": "2623650"
  },
  {
    "text": "levels and and we've introduced these other aspects with respect to service or",
    "start": "2623650",
    "end": "2629349"
  },
  {
    "text": "in an architecture where we've got an API in the back end being load-balanced for us or via API gateway and we've got",
    "start": "2629349",
    "end": "2637589"
  },
  {
    "text": "loose coupling where some of the compute is actually being managed by a worker",
    "start": "2637589",
    "end": "2644529"
  },
  {
    "text": "tier that's operated off of a queue and just processing those requests in the",
    "start": "2644529",
    "end": "2649809"
  },
  {
    "text": "background we're doing some event driven programming with AWS lambda coming off",
    "start": "2649809",
    "end": "2656200"
  },
  {
    "text": "any of the events that are occurring on our s3 or dynamodb or other events in",
    "start": "2656200",
    "end": "2661779"
  },
  {
    "text": "our system and we can even introduce several us web applications at this",
    "start": "2661779",
    "end": "2667749"
  },
  {
    "text": "stage to start offloading some of the new features we have into server lists",
    "start": "2667749",
    "end": "2673349"
  },
  {
    "text": "using DynamoDB lambda an api gateway so",
    "start": "2673349",
    "end": "2679989"
  },
  {
    "text": "what are the next big steps if you're",
    "start": "2679989",
    "end": "2685719"
  },
  {
    "text": "getting to this stage and you've been trying to tease apart your application in order to get this massive amount of",
    "start": "2685719",
    "end": "2690759"
  },
  {
    "text": "scale one of the issues you'll have is the difficulty there actually is in",
    "start": "2690759",
    "end": "2696900"
  },
  {
    "text": "achieving service-oriented architecture and micro services with an application that's in flight and at scale and",
    "start": "2696900",
    "end": "2702969"
  },
  {
    "text": "sometimes you'll be a little bit behind where you'd like to be one of the things that you can do at the database tier to",
    "start": "2702969",
    "end": "2710410"
  },
  {
    "text": "help with the contention you might be experiencing if you haven't been able to separate these components out as much as you'd like is something like Federation",
    "start": "2710410",
    "end": "2718900"
  },
  {
    "text": "where you can actually split apart a single database in a very similar fashion as you would get if you had",
    "start": "2718900",
    "end": "2724749"
  },
  {
    "text": "micro services or service oriented architecture working so for example here we're splitting one database out we've",
    "start": "2724749",
    "end": "2731680"
  },
  {
    "text": "got our forums our users and our products in actually separate databases",
    "start": "2731680",
    "end": "2738359"
  },
  {
    "text": "and we're operating them separately similar idea is you could take one of",
    "start": "2738359",
    "end": "2743680"
  },
  {
    "text": "those databases or a part of your database and split in terms of the",
    "start": "2743680",
    "end": "2749739"
  },
  {
    "text": "actual data in that single database using a",
    "start": "2749739",
    "end": "2756350"
  },
  {
    "text": "petition key or a Schad key to separate it into multiple databases so here we're separating our users database into three",
    "start": "2756350",
    "end": "2763460"
  },
  {
    "text": "separate databases so you know you could have a 2k for example of your users in",
    "start": "2763460",
    "end": "2768560"
  },
  {
    "text": "one database and you can also tap more",
    "start": "2768560",
    "end": "2774500"
  },
  {
    "text": "into no sequel at this stage looking for opportunities whether you've got hot tables reference data keep the key data",
    "start": "2774500",
    "end": "2784040"
  },
  {
    "text": "pairs metadata look-up tables that type",
    "start": "2784040",
    "end": "2789050"
  },
  {
    "text": "of thing you start to look for more opportunities to separate your data out so let's have a quick review of what",
    "start": "2789050",
    "end": "2796430"
  },
  {
    "text": "we've gone through today you've got your multi a-z infrastructure you're taking advantage of self scaling",
    "start": "2796430",
    "end": "2802910"
  },
  {
    "text": "services whenever you can because that means you don't have to operate keep track of do all the automation for and",
    "start": "2802910",
    "end": "2808520"
  },
  {
    "text": "all the work for those things we're building redundancy into multiple levels",
    "start": "2808520",
    "end": "2814730"
  },
  {
    "text": "of our infrastructure or caching both inside and outside of our infrastructure",
    "start": "2814730",
    "end": "2820960"
  },
  {
    "text": "we've automated the deployment of our infrastructure and that way we've been able to refactor more easily and we've",
    "start": "2820960",
    "end": "2829010"
  },
  {
    "text": "been able to build more resilience into our system by ensuring automating testing is happening and by ensuring that we're not making manual changes in",
    "start": "2829010",
    "end": "2836030"
  },
  {
    "text": "production it's all automated we've we've tested it before it's actually gone there we've got good metrics we're",
    "start": "2836030",
    "end": "2844100"
  },
  {
    "text": "really getting the most out of our system we've got good logging we've split our application up as much as we",
    "start": "2844100",
    "end": "2850190"
  },
  {
    "text": "can using service-oriented architecture or even micro services now with auto",
    "start": "2850190",
    "end": "2856310"
  },
  {
    "text": "scaling I left depth to last it's not to say you might not have used that right from the beginning but it's more to say",
    "start": "2856310",
    "end": "2862010"
  },
  {
    "text": "that to be aware of all these other things that you can actually take advantage of especially at large large",
    "start": "2862010",
    "end": "2867320"
  },
  {
    "text": "scale we don't want to reinvent the wheel and I did set suggest using sequel",
    "start": "2867320",
    "end": "2874100"
  },
  {
    "text": "from the beginning this is going to allow us to have tens of millions of",
    "start": "2874100",
    "end": "2879109"
  },
  {
    "text": "users really potentially to infinity going beyond that wasn't anyone today",
    "start": "2879109",
    "end": "2887560"
  },
  {
    "text": "we've had a few other sessions where there's been people who've been dealing with tens of millions of users this is a",
    "start": "2887560",
    "end": "2893710"
  },
  {
    "text": "really high value problem in the sense you're going to have a lot of resources to apply to the problem at this stage you're going to be able to get into",
    "start": "2893710",
    "end": "2899140"
  },
  {
    "text": "custom solutions a lot more into SOA fine tuning going really deep into your",
    "start": "2899140",
    "end": "2904210"
  },
  {
    "text": "stack and working out what's going on again you want to build service whenever possible now if you like the concepts",
    "start": "2904210",
    "end": "2913360"
  },
  {
    "text": "that we went through today in theory and would like to actually try some of these things out yourself we actually have a",
    "start": "2913360",
    "end": "2918610"
  },
  {
    "text": "build a session running this afternoon that lets you throw load at an",
    "start": "2918610",
    "end": "2924640"
  },
  {
    "text": "application break it basically and then refactor it and see how differences you",
    "start": "2924640",
    "end": "2929800"
  },
  {
    "text": "can make at different levels of volume to get you know slowly get more and more",
    "start": "2929800",
    "end": "2935280"
  },
  {
    "text": "next steps we've got lots of resources to help you with respect to documentation the architecture side has",
    "start": "2935970",
    "end": "2943060"
  },
  {
    "text": "a lot of resources related to these patterns I've mentioned the well architected website has great tips on",
    "start": "2943060",
    "end": "2949570"
  },
  {
    "text": "how to make sure your application is secure and performant and reliable cost effective and well operated and we",
    "start": "2949570",
    "end": "2956290"
  },
  {
    "text": "release the well architected review tool today you can tap into solutions and",
    "start": "2956290",
    "end": "2964540"
  },
  {
    "text": "quick starts in order to get a jump start or a reference implementation for a given architecture you're trying to",
    "start": "2964540",
    "end": "2970510"
  },
  {
    "text": "build where we'll actually provide the code for you and your infrastructure code and when you're looking at some of",
    "start": "2970510",
    "end": "2977530"
  },
  {
    "text": "these new services you can tap into the free tier in a lot of cases now you're",
    "start": "2977530",
    "end": "2982990"
  },
  {
    "text": "not alone in this journey we've got the forum's we've got answers and you can",
    "start": "2982990",
    "end": "2989500"
  },
  {
    "text": "also tap into premium support which is an opt-in service we don't charge you for that unless you opt into it but I",
    "start": "2989500",
    "end": "2995620"
  },
  {
    "text": "found in the past as a customer previously myself and now with my customers that premium support can be",
    "start": "2995620",
    "end": "3002160"
  },
  {
    "text": "become part of your team a virtual part of your team because you don't have to",
    "start": "3002160",
    "end": "3007530"
  },
  {
    "text": "just ask them when something's going wrong you can actually log the case and say how do I do this is this the right",
    "start": "3007530",
    "end": "3012690"
  },
  {
    "text": "way to do this can you give me some advice and you've got a Solutions Architect",
    "start": "3012690",
    "end": "3017730"
  },
  {
    "text": "like myself to help you as well so no",
    "start": "3017730",
    "end": "3022800"
  },
  {
    "text": "matter where you are on your journey to tens of millions of users we want to help you get there thanks very much for",
    "start": "3022800",
    "end": "3029970"
  },
  {
    "text": "your time I hope you have a fantastic reinvent please fill out the surveys",
    "start": "3029970",
    "end": "3037230"
  },
  {
    "text": "Cheers if there's any questions please come up",
    "start": "3037230",
    "end": "3041420"
  }
]