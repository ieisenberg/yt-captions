[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "in this video you'll see how you can set",
    "start": "120",
    "end": "1920"
  },
  {
    "text": "up AWS x-ray as a data source plug-in",
    "start": "1920",
    "end": "4279"
  },
  {
    "text": "for Amazon managed grafana with this",
    "start": "4279",
    "end": "7120"
  },
  {
    "text": "capability you can easily visualize",
    "start": "7120",
    "end": "9080"
  },
  {
    "text": "servico service interactions proactively",
    "start": "9080",
    "end": "11679"
  },
  {
    "text": "capture potential issues and misbehaving",
    "start": "11679",
    "end": "13559"
  },
  {
    "text": "tasks and analyze traces and timeline",
    "start": "13559",
    "end": "15920"
  },
  {
    "text": "events in your",
    "start": "15920",
    "end": "17119"
  },
  {
    "text": "application for the purposes of this",
    "start": "17119",
    "end": "19160"
  },
  {
    "start": "18000",
    "end": "40000"
  },
  {
    "text": "example we have already deployed a",
    "start": "19160",
    "end": "20840"
  },
  {
    "text": "sample application that's available on",
    "start": "20840",
    "end": "22800"
  },
  {
    "text": "GitHub the application is a pet adoption",
    "start": "22800",
    "end": "25400"
  },
  {
    "text": "site that allows end users to search",
    "start": "25400",
    "end": "27000"
  },
  {
    "text": "pets by their type and color select a",
    "start": "27000",
    "end": "28840"
  },
  {
    "text": "pet for adoption and make a",
    "start": "28840",
    "end": "32119"
  },
  {
    "text": "payment we have also configured AWS",
    "start": "33000",
    "end": "35480"
  },
  {
    "text": "x-ray to trace user request service",
    "start": "35480",
    "end": "39360"
  },
  {
    "text": "flows let's go to our x-ray console",
    "start": "39719",
    "end": "44200"
  },
  {
    "start": "40000",
    "end": "128000"
  },
  {
    "text": "now in xray you can use filter",
    "start": "44559",
    "end": "47160"
  },
  {
    "text": "Expressions to sort incoming traces into",
    "start": "47160",
    "end": "49120"
  },
  {
    "text": "groups in this case we've created four",
    "start": "49120",
    "end": "51600"
  },
  {
    "text": "groups that correspond to the actions",
    "start": "51600",
    "end": "53160"
  },
  {
    "text": "that visitors to our site can take",
    "start": "53160",
    "end": "55840"
  },
  {
    "text": "insights and notifications have been",
    "start": "55840",
    "end": "57320"
  },
  {
    "text": "enabled for each group now let's go to",
    "start": "57320",
    "end": "60239"
  },
  {
    "text": "Amazon managed grafana to add AWS x-ray",
    "start": "60239",
    "end": "62879"
  },
  {
    "text": "as a data source we'll Begin by creating",
    "start": "62879",
    "end": "65400"
  },
  {
    "text": "a new workspace which is a logically",
    "start": "65400",
    "end": "67520"
  },
  {
    "text": "isolated grafana",
    "start": "67520",
    "end": "70520"
  },
  {
    "text": "server for the authentication method we",
    "start": "71159",
    "end": "73720"
  },
  {
    "text": "can choose AWS single sign on or AWS SSO",
    "start": "73720",
    "end": "77200"
  },
  {
    "text": "or security assertion markup language or",
    "start": "77200",
    "end": "79600"
  },
  {
    "text": "samle in this case we've already enabled",
    "start": "79600",
    "end": "82119"
  },
  {
    "text": "AWS SSO which Amazon managed grafana",
    "start": "82119",
    "end": "85240"
  },
  {
    "text": "uses to authenticate and manage user",
    "start": "85240",
    "end": "87360"
  },
  {
    "text": "access let's retain the service managed",
    "start": "87360",
    "end": "89680"
  },
  {
    "text": "per permissions type which ensures that",
    "start": "89680",
    "end": "91600"
  },
  {
    "text": "the proper I am roles and policies are",
    "start": "91600",
    "end": "93720"
  },
  {
    "text": "enabled we'll enable all available data",
    "start": "93720",
    "end": "96280"
  },
  {
    "text": "sources which includes AWS",
    "start": "96280",
    "end": "99040"
  },
  {
    "text": "X-ray let's also activate Amazon simple",
    "start": "99040",
    "end": "101759"
  },
  {
    "text": "notification service or Amazon SNS as",
    "start": "101759",
    "end": "104320"
  },
  {
    "text": "the notification channel to add the",
    "start": "104320",
    "end": "105799"
  },
  {
    "text": "necessary",
    "start": "105799",
    "end": "108280"
  },
  {
    "text": "permissions now that the workspace is",
    "start": "109479",
    "end": "111600"
  },
  {
    "text": "active we need to assign users to it",
    "start": "111600",
    "end": "113719"
  },
  {
    "text": "let's assign a user",
    "start": "113719",
    "end": "116640"
  },
  {
    "text": "group let's Grant add permissions to the",
    "start": "118119",
    "end": "120719"
  },
  {
    "text": "user group so its members can access the",
    "start": "120719",
    "end": "122520"
  },
  {
    "text": "data source now let's go to the grafana",
    "start": "122520",
    "end": "124920"
  },
  {
    "text": "workspace to configure the AWS x-ray",
    "start": "124920",
    "end": "127159"
  },
  {
    "text": "data source we'll sign in with the admin",
    "start": "127159",
    "end": "129759"
  },
  {
    "start": "128000",
    "end": "159000"
  },
  {
    "text": "users AWS SSO",
    "start": "129759",
    "end": "133319"
  },
  {
    "text": "credentials Amazon managed graph autois",
    "start": "133680",
    "end": "136560"
  },
  {
    "text": "discovers the accounts and resources we",
    "start": "136560",
    "end": "138080"
  },
  {
    "text": "have available for AWS data sources",
    "start": "138080",
    "end": "140760"
  },
  {
    "text": "we'll select AWS x-ray as the service",
    "start": "140760",
    "end": "143000"
  },
  {
    "text": "and specify our region",
    "start": "143000",
    "end": "146760"
  },
  {
    "text": "now that x-ray is a provisioned data",
    "start": "150480",
    "end": "152160"
  },
  {
    "text": "source let's go to the settings and make",
    "start": "152160",
    "end": "153920"
  },
  {
    "text": "sure the plug-in is working we have the",
    "start": "153920",
    "end": "156160"
  },
  {
    "text": "option to make this plugin a default",
    "start": "156160",
    "end": "157680"
  },
  {
    "text": "data",
    "start": "157680",
    "end": "159120"
  },
  {
    "start": "159000",
    "end": "178000"
  },
  {
    "text": "source as you can see our x-ray data",
    "start": "159120",
    "end": "161640"
  },
  {
    "text": "source is",
    "start": "161640",
    "end": "162840"
  },
  {
    "text": "working let's configure some dashboard",
    "start": "162840",
    "end": "165159"
  },
  {
    "text": "panels so we can explore and visualize",
    "start": "165159",
    "end": "167080"
  },
  {
    "text": "data from the pet Search",
    "start": "167080",
    "end": "169760"
  },
  {
    "text": "application the query field supports the",
    "start": "169760",
    "end": "172080"
  },
  {
    "text": "same filter Expressions supported by AWS",
    "start": "172080",
    "end": "174599"
  },
  {
    "text": "X-ray let's render the X-ray service",
    "start": "174599",
    "end": "177959"
  },
  {
    "text": "map this is a complex application-wide",
    "start": "177959",
    "end": "180800"
  },
  {
    "start": "178000",
    "end": "213000"
  },
  {
    "text": "service map to better focus on",
    "start": "180800",
    "end": "182879"
  },
  {
    "text": "individual flows we can query the",
    "start": "182879",
    "end": "184760"
  },
  {
    "text": "individual groups we created in x-ray",
    "start": "184760",
    "end": "187400"
  },
  {
    "text": "for instance we can run a query on the",
    "start": "187400",
    "end": "189280"
  },
  {
    "text": "make payment group to see only payment",
    "start": "189280",
    "end": "191360"
  },
  {
    "text": "related",
    "start": "191360",
    "end": "193720"
  },
  {
    "text": "flows the node colors represent the",
    "start": "193720",
    "end": "196080"
  },
  {
    "text": "percentage of success error fault and",
    "start": "196080",
    "end": "198159"
  },
  {
    "text": "throttled responses we can select an",
    "start": "198159",
    "end": "200760"
  },
  {
    "text": "individual node to view its connections",
    "start": "200760",
    "end": "202640"
  },
  {
    "text": "or edges each labeled with a success or",
    "start": "202640",
    "end": "205159"
  },
  {
    "text": "error percentage and number of",
    "start": "205159",
    "end": "206599"
  },
  {
    "text": "transactions per minute we can drill",
    "start": "206599",
    "end": "208599"
  },
  {
    "text": "down on a particular service node by",
    "start": "208599",
    "end": "210280"
  },
  {
    "text": "clicking it and selecting a trace filter",
    "start": "210280",
    "end": "212959"
  },
  {
    "text": "option we can now select an individual",
    "start": "212959",
    "end": "215319"
  },
  {
    "text": "Trace ID to display a timeline for that",
    "start": "215319",
    "end": "217480"
  },
  {
    "text": "request this is useful for pinpointing",
    "start": "217480",
    "end": "219760"
  },
  {
    "text": "issues and opportunities for",
    "start": "219760",
    "end": "222360"
  },
  {
    "text": "optimization we can drill into",
    "start": "222360",
    "end": "224120"
  },
  {
    "text": "individual segments for more information",
    "start": "224120",
    "end": "226720"
  },
  {
    "text": "and we can select a section of the",
    "start": "226720",
    "end": "228159"
  },
  {
    "text": "timeline mini map to zoom in on a",
    "start": "228159",
    "end": "229840"
  },
  {
    "text": "onetime",
    "start": "229840",
    "end": "232280"
  },
  {
    "text": "window in the segment details we can",
    "start": "235840",
    "end": "238400"
  },
  {
    "text": "view any captured stack tra traces this",
    "start": "238400",
    "end": "241079"
  },
  {
    "text": "stacked Trace shows that there's an",
    "start": "241079",
    "end": "242599"
  },
  {
    "text": "issue with the permissions policy of the",
    "start": "242599",
    "end": "244159"
  },
  {
    "text": "role assigned to the Lambda function",
    "start": "244159",
    "end": "246200"
  },
  {
    "text": "which is preventing the function from",
    "start": "246200",
    "end": "247480"
  },
  {
    "text": "updating the adoption status of a pet to",
    "start": "247480",
    "end": "250480"
  },
  {
    "text": "see an example of a different query type",
    "start": "250480",
    "end": "252519"
  },
  {
    "text": "let's run a trace list query will query",
    "start": "252519",
    "end": "255040"
  },
  {
    "text": "pet searches where the application took",
    "start": "255040",
    "end": "256639"
  },
  {
    "text": "more than 150 milliseconds to",
    "start": "256639",
    "end": "260479"
  },
  {
    "start": "263000",
    "end": "279000"
  },
  {
    "text": "respond the results display in table",
    "start": "263320",
    "end": "265800"
  },
  {
    "text": "format again we can click a trace ID to",
    "start": "265800",
    "end": "268360"
  },
  {
    "text": "open a side panel with details",
    "start": "268360",
    "end": "271719"
  },
  {
    "text": "in the timeline view we can see that a",
    "start": "272000",
    "end": "273800"
  },
  {
    "text": "table scan is causing the increased",
    "start": "273800",
    "end": "277400"
  },
  {
    "start": "279000",
    "end": "315000"
  },
  {
    "text": "latency we can also run keyword-based",
    "start": "279039",
    "end": "281520"
  },
  {
    "text": "queries let's query our make payment",
    "start": "281520",
    "end": "283960"
  },
  {
    "text": "group for traces that contain an edge",
    "start": "283960",
    "end": "285759"
  },
  {
    "text": "with errors or",
    "start": "285759",
    "end": "288479"
  },
  {
    "text": "faults as in the service map view we can",
    "start": "289880",
    "end": "292600"
  },
  {
    "text": "see the results in a timeline from the",
    "start": "292600",
    "end": "294880"
  },
  {
    "text": "left panel we can open our query results",
    "start": "294880",
    "end": "297199"
  },
  {
    "text": "in the X-ray console or in an x-ray",
    "start": "297199",
    "end": "299320"
  },
  {
    "text": "service",
    "start": "299320",
    "end": "301600"
  },
  {
    "text": "map from the right panel we can open the",
    "start": "301600",
    "end": "304199"
  },
  {
    "text": "X-ray console to view details for the",
    "start": "304199",
    "end": "306000"
  },
  {
    "text": "selected Trace",
    "start": "306000",
    "end": "308720"
  },
  {
    "text": "ID let's return to",
    "start": "310120",
    "end": "313800"
  },
  {
    "text": "grafana we can perform a trace",
    "start": "314440",
    "end": "316520"
  },
  {
    "start": "315000",
    "end": "417000"
  },
  {
    "text": "statistics query to aggregate data on",
    "start": "316520",
    "end": "318400"
  },
  {
    "text": "our application's performance including",
    "start": "318400",
    "end": "320440"
  },
  {
    "text": "throttle and error accounts and average",
    "start": "320440",
    "end": "322160"
  },
  {
    "text": "response",
    "start": "322160",
    "end": "324600"
  },
  {
    "text": "times we can narrow down the columns in",
    "start": "325600",
    "end": "327960"
  },
  {
    "text": "the data set that we want to see in the",
    "start": "327960",
    "end": "329360"
  },
  {
    "text": "graph",
    "start": "329360",
    "end": "331638"
  },
  {
    "text": "now let's create a new dashboard that we",
    "start": "337800",
    "end": "339440"
  },
  {
    "text": "use to monitor our",
    "start": "339440",
    "end": "342400"
  },
  {
    "text": "data in the first panel we'll create a",
    "start": "342720",
    "end": "345199"
  },
  {
    "text": "service map for the",
    "start": "345199",
    "end": "347000"
  },
  {
    "text": "application let's name this panel",
    "start": "347000",
    "end": "351680"
  },
  {
    "text": "next let's add a panel that graphs the",
    "start": "363400",
    "end": "365080"
  },
  {
    "text": "number of Total Service",
    "start": "365080",
    "end": "368198"
  },
  {
    "text": "requests for this we'll use a trace",
    "start": "368280",
    "end": "370520"
  },
  {
    "text": "statistics query",
    "start": "370520",
    "end": "374080"
  },
  {
    "text": "we can add more panels to graph data",
    "start": "390199",
    "end": "392000"
  },
  {
    "text": "such as average response time slow",
    "start": "392000",
    "end": "393759"
  },
  {
    "text": "traces and failure",
    "start": "393759",
    "end": "395599"
  },
  {
    "text": "rates Amazon managed grafana makes it",
    "start": "395599",
    "end": "398240"
  },
  {
    "text": "easy to construct the right queries and",
    "start": "398240",
    "end": "400039"
  },
  {
    "text": "customize the display properties so that",
    "start": "400039",
    "end": "401960"
  },
  {
    "text": "you can create the dashboard you need",
    "start": "401960",
    "end": "404759"
  },
  {
    "text": "you've just seen how to set up AWS x-ray",
    "start": "404759",
    "end": "406960"
  },
  {
    "text": "as a data source plugin for Amazon",
    "start": "406960",
    "end": "408639"
  },
  {
    "text": "managed grafana you can learn more about",
    "start": "408639",
    "end": "411440"
  },
  {
    "text": "this topic in the description and links",
    "start": "411440",
    "end": "412919"
  },
  {
    "text": "for this video thanks for watching now",
    "start": "412919",
    "end": "414960"
  },
  {
    "text": "it's your turn to try",
    "start": "414960",
    "end": "418560"
  }
]