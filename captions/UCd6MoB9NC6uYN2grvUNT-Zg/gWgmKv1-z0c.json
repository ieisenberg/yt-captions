[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello everybody I'm Paul Moran I am a Technical Account Manager for enterprise",
    "start": "120",
    "end": "6089"
  },
  {
    "text": "support within AWS and I'm here today to talk about the deep dive in the Amazon Elastic file system I'm here presenting",
    "start": "6089",
    "end": "13500"
  },
  {
    "text": "with Yong Kim the business development manager for EFS we were a bit tight on",
    "start": "13500",
    "end": "21359"
  },
  {
    "text": "time today so if we can have any questions you got any just come speak to us towards the end and we'll be able to",
    "start": "21359",
    "end": "27000"
  },
  {
    "text": "to rest them as we go along so the",
    "start": "27000",
    "end": "32430"
  },
  {
    "text": "agenda for today what we're going to expect from it is want you to be able to recognize why and when to use Amazon's",
    "start": "32430",
    "end": "39239"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "on EFS understand the technical and security concepts around it and learn",
    "start": "39239",
    "end": "46680"
  },
  {
    "text": "how to leverage the performance that's that's baked into EFS and finally we're gonna look at some of the economics of",
    "start": "46680",
    "end": "53100"
  },
  {
    "text": "how EFS works and and how you can utilize it so with that in mind I'm",
    "start": "53100",
    "end": "58739"
  },
  {
    "text": "gonna hand over to Yong and he's gonna pick up on the first section thank you",
    "start": "58739",
    "end": "67740"
  },
  {
    "text": "Paul although folks you can probably tell from the accent shift to you know where",
    "start": "67740",
    "end": "73140"
  },
  {
    "text": "we're based so I'm normally based out of New York City and I'm happy to join you folks here in London today so I thought",
    "start": "73140",
    "end": "80730"
  },
  {
    "text": "before we got into the what in the house of Amazon EFS we would start with the",
    "start": "80730",
    "end": "86910"
  },
  {
    "text": "why why Amazon EFS and a little bit of the when and and when you look back when",
    "start": "86910",
    "end": "97020"
  },
  {
    "text": "AWS and launch storage in the cloud for the longest time customers have had to",
    "start": "97020",
    "end": "103050"
  },
  {
    "text": "largely two options for storage for building in AWS Amazon in the form of",
    "start": "103050",
    "end": "109619"
  },
  {
    "text": "object storage with s3 and glacier and block storage in the form of EBS for our",
    "start": "109619",
    "end": "115560"
  },
  {
    "text": "ec2 instances but there was one category of storage class one type of data that",
    "start": "115560",
    "end": "123300"
  },
  {
    "text": "was not addressed and that was file data and so I'm happy to say that exactly a",
    "start": "123300",
    "end": "132090"
  },
  {
    "text": "year ago today we launched Amazon's file offering the Amazon Elastic file system",
    "start": "132090",
    "end": "139260"
  },
  {
    "text": "in AWS so happy birthday happy for his birthday to EFS and why we think this is",
    "start": "139260",
    "end": "146570"
  },
  {
    "text": "exciting and why we think it's important for our customers is that according to analysts up to 80% of data in the",
    "start": "146570",
    "end": "155010"
  },
  {
    "text": "enterprise is in file systems its unstructured data that's native in file",
    "start": "155010",
    "end": "160769"
  },
  {
    "text": "systems today so we think this has great value to our customers and developers",
    "start": "160769",
    "end": "168080"
  },
  {
    "text": "so now when I'm sorry so now you have the choice when you need to look at a",
    "start": "168310",
    "end": "174190"
  },
  {
    "text": "new application or you have existing applications that utilize file systems and file system semantics you now have",
    "start": "174190",
    "end": "181990"
  },
  {
    "text": "your choice to leverage our file system so that's a little of the why when we",
    "start": "181990",
    "end": "190120"
  },
  {
    "text": "built Amazon ifs we built it with the following principles we wanted it to be extremely simple and easy to use we",
    "start": "190120",
    "end": "198610"
  },
  {
    "text": "wanted to be elastic so Amazon EFS scales automatically as you add data and",
    "start": "198610",
    "end": "205420"
  },
  {
    "text": "it shrinks as you delete it we wanted it to be highly scalable both in terms of",
    "start": "205420",
    "end": "211420"
  },
  {
    "text": "capacity as well as throughput so you get more performance as you grow it's",
    "start": "211420",
    "end": "217690"
  },
  {
    "text": "highly durable we'll talk a little bit about the specifics of EFSA's design but",
    "start": "217690",
    "end": "223780"
  },
  {
    "text": "it is built with eleven nines of durability in mind and also highly available it spans three availability",
    "start": "223780",
    "end": "231850"
  },
  {
    "text": "zones so",
    "start": "231850",
    "end": "238450"
  },
  {
    "text": "simple in a few different ways one it's fully managed it's what you folks would",
    "start": "238450",
    "end": "243940"
  },
  {
    "text": "expect from a storage service at AWS there is no hardware to have to manage",
    "start": "243940",
    "end": "250930"
  },
  {
    "text": "there is no software there's no file system layer simply create your file system present those mount targets to",
    "start": "250930",
    "end": "258459"
  },
  {
    "text": "your ec2 instances and you can start storing and accessing data so it literally takes a few seconds to set up",
    "start": "258459",
    "end": "265300"
  },
  {
    "text": "a file system it supports industry standard protocols so if you have applications that utilize",
    "start": "265300",
    "end": "272740"
  },
  {
    "text": "NFS versions four and four one those should be available for use right away",
    "start": "272740",
    "end": "279990"
  },
  {
    "text": "it supports file system semantics with very strong read after write consistency",
    "start": "279990",
    "end": "285810"
  },
  {
    "text": "and even the pricing is simple it is",
    "start": "285810",
    "end": "290919"
  },
  {
    "text": "only based on the amount of data that you use and there is no other billing",
    "start": "290919",
    "end": "297190"
  },
  {
    "text": "aspects we'll talk about pricing specifically in the economics portion",
    "start": "297190",
    "end": "304440"
  },
  {
    "text": "so it is elastic again there's no provisioning necessary once you create",
    "start": "306039",
    "end": "311110"
  },
  {
    "text": "the filesystem simply start adding data to it once you don't need it anymore if you don't need it anymore",
    "start": "311110",
    "end": "316960"
  },
  {
    "text": "remove it and we will shrink the filesystem and Bill you accordingly so there's no additional capacity planning",
    "start": "316960",
    "end": "323770"
  },
  {
    "text": "necessary and again there's no minimum fee you pay only for what you use you",
    "start": "323770",
    "end": "331330"
  },
  {
    "text": "can grow to petabytes scale in fact when you first create your filesystem you can",
    "start": "331330",
    "end": "337240"
  },
  {
    "text": "see that it presents up to eight exabytes of capacity and we would be very welcome if you were to fill up your",
    "start": "337240",
    "end": "343899"
  },
  {
    "text": "file systems but they scale and performance as you grow as well so as",
    "start": "343899",
    "end": "349599"
  },
  {
    "text": "you add more data the filesystem scales in terms of performance which we'll talk about in a fair bit of detail here",
    "start": "349599",
    "end": "356319"
  },
  {
    "text": "shortly so as you add more data the capacity and the performance scale",
    "start": "356319",
    "end": "361419"
  },
  {
    "text": "accordingly it also provides consistent low latencies this is very important for",
    "start": "361419",
    "end": "368080"
  },
  {
    "text": "a lot of applications that use filesystem protocols and it's available",
    "start": "368080",
    "end": "375879"
  },
  {
    "text": "to mount on a single ec2 instance but it really becomes much more powerful when",
    "start": "375879",
    "end": "381639"
  },
  {
    "text": "you see it accessed across hundreds if not thousands of concurrent ec2",
    "start": "381639",
    "end": "387219"
  },
  {
    "text": "instances",
    "start": "387219",
    "end": "389699"
  },
  {
    "start": "391000",
    "end": "391000"
  },
  {
    "text": "highly durable and highly available every file system object in AFS is",
    "start": "393139",
    "end": "400370"
  },
  {
    "text": "copied synchronously across three availability zones that also means that",
    "start": "400370",
    "end": "409340"
  },
  {
    "text": "data is available to be read in each and every availability zone so you get very",
    "start": "409340",
    "end": "415729"
  },
  {
    "text": "strong data durability and availability and it gives you that concurrent access",
    "start": "415729",
    "end": "421550"
  },
  {
    "text": "capability to leverage across all those ec2 instances if need be so it is far",
    "start": "421550",
    "end": "427639"
  },
  {
    "text": "superior in terms of traditional or a lot of on-prem network attached storage options available today and so we feel",
    "start": "427639",
    "end": "434060"
  },
  {
    "text": "it's appropriate for many different applications but certainly even production level tier 0 applications",
    "start": "434060",
    "end": "442599"
  },
  {
    "text": "so if you are thinking of using our compute our ec2 and you're thinking of",
    "start": "447250",
    "end": "452470"
  },
  {
    "text": "storage options available to you here's just a quick comparison of some of the characteristics between EBS our block",
    "start": "452470",
    "end": "460060"
  },
  {
    "text": "storage and EFS which is shared file system storage so in both cases you get",
    "start": "460060",
    "end": "466770"
  },
  {
    "text": "consistent latency you will still get the lowest possible agencies with EBS",
    "start": "466770",
    "end": "472210"
  },
  {
    "text": "but you will get low consistent Legion seized with EFS in the case of EBS",
    "start": "472210",
    "end": "477790"
  },
  {
    "text": "you're looking at single gigabytes per second for a throughput in the case of",
    "start": "477790",
    "end": "484540"
  },
  {
    "text": "EFS you can you can achieve and sustain multiple gigabytes per second of",
    "start": "484540",
    "end": "491740"
  },
  {
    "text": "throughput and we'll actually review some testing that we've done there again",
    "start": "491740",
    "end": "496780"
  },
  {
    "text": "EBS stored redundantly but within a single availability zone EFS stored",
    "start": "496780",
    "end": "503800"
  },
  {
    "text": "redundancy redundantly across availability zones so even more",
    "start": "503800",
    "end": "510000"
  },
  {
    "text": "durability EBS is storage for an ec2",
    "start": "510000",
    "end": "515800"
  },
  {
    "text": "instance whereas EFS is really meant to be shared you can certainly mount it to a single instance but it starts to",
    "start": "515800",
    "end": "522669"
  },
  {
    "text": "really perform as you add more instances and access that file system more and",
    "start": "522669",
    "end": "528880"
  },
  {
    "text": "more concurrently and these are not mutually exclusive workloads at the bottom these are just",
    "start": "528880",
    "end": "534949"
  },
  {
    "text": "some of the patterns that we see our customers using the storage for certainly you can use EBS for big data",
    "start": "534949",
    "end": "541220"
  },
  {
    "text": "analytics it's not to say you can't it's this is to say these are some of the use cases that we've seen across the",
    "start": "541220",
    "end": "547760"
  },
  {
    "text": "customer base since launch",
    "start": "547760",
    "end": "550959"
  },
  {
    "text": "so if you were to think through you know what is the right storage for a particular application here's a thought",
    "start": "555280",
    "end": "562810"
  },
  {
    "text": "process if you require multiple ec2 instances multi attach or multiple",
    "start": "562810",
    "end": "570880"
  },
  {
    "text": "gigabytes per second of throughput or that multi a Z durability and the",
    "start": "570880",
    "end": "578650"
  },
  {
    "text": "automatic scaling the growing shrinking of storage then EFS is probably a good option for you",
    "start": "578650",
    "end": "585120"
  },
  {
    "text": "as a Windows Update that needs to wait until after the present presentation so",
    "start": "599250",
    "end": "608060"
  },
  {
    "text": "EFS is attached to multiple or to ec2",
    "start": "608060",
    "end": "614550"
  },
  {
    "text": "instances but you can also attach easy to EFS to your on-premise hosts by a",
    "start": "614550",
    "end": "622380"
  },
  {
    "text": "direct connect so now you're on permit premise Linux systems would see the EFS",
    "start": "622380",
    "end": "627990"
  },
  {
    "text": "filesystem mount points over direct connection and in this scenario we see",
    "start": "627990",
    "end": "635700"
  },
  {
    "start": "634000",
    "end": "634000"
  },
  {
    "text": "three primary use cases so three out of these four migration is if you want to",
    "start": "635700",
    "end": "643560"
  },
  {
    "text": "move your file data into EFS bursting is",
    "start": "643560",
    "end": "649860"
  },
  {
    "text": "if you want to move some of your file data into EFS and then backup or dr is",
    "start": "649860",
    "end": "659280"
  },
  {
    "text": "if you want to make a copy of all your file data into EFS the one use case that",
    "start": "659280",
    "end": "665640"
  },
  {
    "text": "we don't recommend currently is tearing and that's when you have some of your file data accessed on-premise and some",
    "start": "665640",
    "end": "673530"
  },
  {
    "text": "of it in EFS in the same application we just find that the performance may not",
    "start": "673530",
    "end": "679589"
  },
  {
    "text": "be consistent so that's one that we would recommend at this time but",
    "start": "679589",
    "end": "685200"
  },
  {
    "text": "certainly those other three that we see",
    "start": "685200",
    "end": "688730"
  },
  {
    "text": "so given that it supports industry standard protocols that it's highly scalable it's not really surprising that",
    "start": "692190",
    "end": "697379"
  },
  {
    "text": "we see today in the year that it's been launched a variety of use cases so I'll just highlight a couple of the ones that",
    "start": "697379",
    "end": "704129"
  },
  {
    "text": "we see we see a lot of analytics workloads on EFS in in fact a lot of",
    "start": "704129",
    "end": "711990"
  },
  {
    "text": "those happen to be leveraging our spot instances on ec2 so customers will have",
    "start": "711990",
    "end": "717600"
  },
  {
    "text": "a large analytics requirement they will spin up on demand a fleet of ec2",
    "start": "717600",
    "end": "723959"
  },
  {
    "text": "instances at bid pricing they will run their analytics analyze them across all",
    "start": "723959",
    "end": "729689"
  },
  {
    "text": "the instances accessing the same filesystem data and then spin them back down and they will typically store the",
    "start": "729689",
    "end": "735449"
  },
  {
    "text": "results somewhere out on EFS for for later access median entertainment we see",
    "start": "735449",
    "end": "741449"
  },
  {
    "text": "it in rendering and transcoding workloads a lot of workflow management applications will write data into a",
    "start": "741449",
    "end": "748019"
  },
  {
    "text": "shared repository that will then be read by other systems for other parts of the application database backups so if you",
    "start": "748019",
    "end": "757529"
  },
  {
    "text": "are servicing database administrators it's quite easy to present a filesystem",
    "start": "757529",
    "end": "764100"
  },
  {
    "text": "mount point for them to be able to take dumps of their database at their",
    "start": "764100",
    "end": "769170"
  },
  {
    "text": "schedule under their control for recovery points container storage",
    "start": "769170",
    "end": "774980"
  },
  {
    "text": "supported in ECS as well as working with docker and kubernetes clearly home",
    "start": "774980",
    "end": "781230"
  },
  {
    "text": "directories in user shares is another use case and we are very common in the",
    "start": "781230",
    "end": "789870"
  },
  {
    "text": "web serving environment so companies like WordPress",
    "start": "789870",
    "end": "795199"
  },
  {
    "text": "where is EFS so EFS is currently available in these regions today these",
    "start": "799240",
    "end": "804939"
  },
  {
    "text": "five regions we have more coming soon for you folks here your closest region",
    "start": "804939",
    "end": "810339"
  },
  {
    "text": "would be Ireland so in Dublin",
    "start": "810339",
    "end": "815399"
  },
  {
    "text": "so that's a little of the why and a little bit of the where and a little bit of the when I'd like to turn it over at",
    "start": "819810",
    "end": "825959"
  },
  {
    "text": "this point now to Paul again talk a little bit about the performance and security concepts thank you",
    "start": "825959",
    "end": "833480"
  },
  {
    "start": "833000",
    "end": "833000"
  },
  {
    "text": "so the FS its design it's designed to be",
    "start": "833480",
    "end": "839639"
  },
  {
    "text": "a regional construct it's designed to be multi multiple availability zones it's",
    "start": "839639",
    "end": "848879"
  },
  {
    "text": "designed to maintain full consistency across each of those availability zones",
    "start": "848879",
    "end": "854759"
  },
  {
    "text": "and it's currently we support one V PC",
    "start": "854759",
    "end": "861620"
  },
  {
    "text": "file system but you can have multiple file systems within that V PC",
    "start": "861620",
    "end": "867620"
  },
  {
    "text": "the the primary resource sorry",
    "start": "872200",
    "end": "877230"
  },
  {
    "text": "all right the primary resource in EFS for storing files is that the file",
    "start": "881010",
    "end": "888840"
  },
  {
    "text": "system as I said before it's a regional construct you can have ten file systems",
    "start": "888840",
    "end": "894000"
  },
  {
    "text": "per VPC but that's a soft limit you can",
    "start": "894000",
    "end": "899070"
  },
  {
    "text": "get those soft limits increased by raising the case that kind of thing default throughput is three gigabytes a",
    "start": "899070",
    "end": "904770"
  },
  {
    "text": "second once again that's a soft limit we can drive considerably more throughput",
    "start": "904770",
    "end": "909930"
  },
  {
    "text": "than that once again soft limit so raise the case get there that limit increased if you've got a requirement it's",
    "start": "909930",
    "end": "916980"
  },
  {
    "text": "accessible from ec2 in your vbc or through ec2 classic via the classic link",
    "start": "916980",
    "end": "924000"
  },
  {
    "text": "and it's also available as Jung said through your direct connect",
    "start": "924000",
    "end": "931580"
  },
  {
    "start": "931000",
    "end": "931000"
  },
  {
    "text": "so what is a amount of target allows you to access your file systems within the V",
    "start": "932380",
    "end": "939580"
  },
  {
    "text": "PC it's it's an endpoint for your NFS that lives within that V PC and you make",
    "start": "939580",
    "end": "947500"
  },
  {
    "text": "your mount target it's got an IP address it's got a DNS name you mount against that DNS name that map target is",
    "start": "947500",
    "end": "954040"
  },
  {
    "text": "available within each availability zone and it's highly available within that",
    "start": "954040",
    "end": "959620"
  },
  {
    "text": "availabilities on itself so how do you",
    "start": "959620",
    "end": "965380"
  },
  {
    "start": "963000",
    "end": "963000"
  },
  {
    "text": "go about mounting EFS vo if your services as we've discussed we can use NFS version 4 and FS 4.1 is recommended",
    "start": "965380",
    "end": "974860"
  },
  {
    "text": "that's it's much more robust best security model so as we'll always say",
    "start": "974860",
    "end": "979870"
  },
  {
    "text": "the bigger fonts emphasizing that we should be using 4.1 where web puzzle",
    "start": "979870",
    "end": "985030"
  },
  {
    "text": "where you work Lord will see and we support Linux kernels for and above how",
    "start": "985030",
    "end": "992620"
  },
  {
    "start": "992000",
    "end": "992000"
  },
  {
    "text": "do you go about doing it you you launch your instance you SSH to that instance you make your directory you mount your",
    "start": "992620",
    "end": "999610"
  },
  {
    "text": "EFS filesystem to to it using you at your standard mount commands and then you engage with that filesystem in the",
    "start": "999610",
    "end": "1005730"
  },
  {
    "text": "same way you would with any other file system on that host as discussed we",
    "start": "1005730",
    "end": "1014060"
  },
  {
    "start": "1010000",
    "end": "1010000"
  },
  {
    "text": "likes kernel foreign above is the recommended amount options that are",
    "start": "1014060",
    "end": "1019530"
  },
  {
    "text": "available just manky file system that way and engage resources that are",
    "start": "1019530",
    "end": "1028500"
  },
  {
    "start": "1027000",
    "end": "1027000"
  },
  {
    "text": "available to EFS tags tags are great",
    "start": "1028500",
    "end": "1035100"
  },
  {
    "text": "across the whole of your AWS estate they're mutable data it's typically a",
    "start": "1035100",
    "end": "1042150"
  },
  {
    "text": "key pair value the kind of thing that you would put in it is a project name program of work a customer service line",
    "start": "1042150",
    "end": "1050550"
  },
  {
    "text": "that kind of thing and it helps you understand your workloads your your file",
    "start": "1050550",
    "end": "1056700"
  },
  {
    "text": "systems the mountain targets themselves as we've",
    "start": "1056700",
    "end": "1062510"
  },
  {
    "text": "discussed already you have one or more per file system you create them within your V PC you have one per availability",
    "start": "1062510",
    "end": "1071450"
  },
  {
    "text": "zone and in Dublin for example that would be one in each of the three availability zones there but they must",
    "start": "1071450",
    "end": "1078350"
  },
  {
    "text": "be within the same V PC you also have access to security groups it's just",
    "start": "1078350",
    "end": "1085940"
  },
  {
    "text": "standard security groups the same way that you use them across the rest of your estate you can have five per mount",
    "start": "1085940",
    "end": "1092270"
  },
  {
    "text": "target but the thing to remember is you've got to allow your clients to be able to access it and you do that by",
    "start": "1092270",
    "end": "1097640"
  },
  {
    "text": "opening up port 20:49 on the security side of things",
    "start": "1097640",
    "end": "1103820"
  },
  {
    "start": "1101000",
    "end": "1101000"
  },
  {
    "text": "you've got several mechanisms that are available to you it's it's kind of a three layer and there is a bunch of",
    "start": "1103820",
    "end": "1110690"
  },
  {
    "text": "things with each of those layers that you can do so from the network side of things you can control using security",
    "start": "1110690",
    "end": "1116779"
  },
  {
    "text": "groups as we've discussed and also ACLs you can control file directory access",
    "start": "1116779",
    "end": "1123289"
  },
  {
    "text": "using standard POSIX permissions so that means that you can chew more shown all",
    "start": "1123289",
    "end": "1129529"
  },
  {
    "text": "of those things within that file system and it's it's an interacting the way you you're used to you can also control",
    "start": "1129529",
    "end": "1137029"
  },
  {
    "text": "administrative access to file systems by using the API and you can set that",
    "start": "1137029",
    "end": "1145070"
  },
  {
    "text": "control within Identity and Access Management and the control levels that",
    "start": "1145070",
    "end": "1150529"
  },
  {
    "text": "you've got there are action levels so what you can do and also resource levels where you can do it",
    "start": "1150529",
    "end": "1158169"
  },
  {
    "start": "1157000",
    "end": "1157000"
  },
  {
    "text": "the three ways of interacting with EFS through the management console via CLI",
    "start": "1158890",
    "end": "1165860"
  },
  {
    "text": "and also through the SDK and it'sit's all the standard things that you'd want",
    "start": "1165860",
    "end": "1170960"
  },
  {
    "text": "to be doing is creating destroying tags all of those and here's the list of",
    "start": "1170960",
    "end": "1177560"
  },
  {
    "text": "clans that are available T and there's the the creates the deletes that describes the modifiers that you want to",
    "start": "1177560",
    "end": "1184130"
  },
  {
    "text": "do in that environment",
    "start": "1184130",
    "end": "1186730"
  },
  {
    "text": "so now I would like to move on to aspects of performance around EFS",
    "start": "1189520",
    "end": "1197760"
  },
  {
    "text": "so EFS was designed for a wide range of workloads and you've got your your high",
    "start": "1199270",
    "end": "1206830"
  },
  {
    "start": "1200000",
    "end": "1200000"
  },
  {
    "text": "throughput parallel i/o type scenarios you've also got your your low latency",
    "start": "1206830",
    "end": "1213250"
  },
  {
    "text": "and your serial i/o connections and and everything in between there so to",
    "start": "1213250",
    "end": "1222490"
  },
  {
    "start": "1220000",
    "end": "1220000"
  },
  {
    "text": "address that we've we've considered it from the perspective of distributed storage baked into the design the file",
    "start": "1222490",
    "end": "1230410"
  },
  {
    "text": "systems distributed across an unconstrained number of servers and the",
    "start": "1230410",
    "end": "1235660"
  },
  {
    "text": "benefit of doing it that way is that that allows you to avoid the bottlenecks and constraints that you would in a traditional file system and their",
    "start": "1235660",
    "end": "1244210"
  },
  {
    "text": "knock-on effect of that is that enables a very high level of aggregate",
    "start": "1244210",
    "end": "1249250"
  },
  {
    "text": "throughput and of very as well show you later on the very linear scaling for",
    "start": "1249250",
    "end": "1255309"
  },
  {
    "text": "that as well the data is also distributed across availability zones for both durability and availability but",
    "start": "1255309",
    "end": "1262510"
  },
  {
    "text": "they're not going to affect for that as well is that you you're also taking out bottlenecks and some of those constraints",
    "start": "1262510",
    "end": "1269009"
  },
  {
    "start": "1270000",
    "end": "1270000"
  },
  {
    "text": "so we've got two options in terms of how you set up your EFS file share the first",
    "start": "1270410",
    "end": "1277100"
  },
  {
    "text": "is the default warrant and that's the general-purpose file search system and that that's for your more latest",
    "start": "1277100",
    "end": "1283760"
  },
  {
    "text": "latency-sensitive workloads applications and and the likes that have more of the",
    "start": "1283760",
    "end": "1289520"
  },
  {
    "text": "into the general purpose category and we find that covers off 80 90 percent of",
    "start": "1289520",
    "end": "1295250"
  },
  {
    "text": "the different scenarios out there that's the the lowest latency type interactions",
    "start": "1295250",
    "end": "1301520"
  },
  {
    "text": "that you're going to need but the constraint around that is there's a limit of 7,000 operations a second for",
    "start": "1301520",
    "end": "1307820"
  },
  {
    "text": "that setup by default but as I said it's best choice for most workloads then",
    "start": "1307820",
    "end": "1313940"
  },
  {
    "text": "we've got max IO that that allows you to process large scale data heavy",
    "start": "1313940",
    "end": "1319610"
  },
  {
    "text": "applications and it's virtually unlimited in terms of how it's going to",
    "start": "1319610",
    "end": "1324770"
  },
  {
    "text": "scale out and throughput the trade-off for this one is that you've got slightly",
    "start": "1324770",
    "end": "1330800"
  },
  {
    "text": "higher latencies so as I'll touch on a little bit later on tests know your",
    "start": "1330800",
    "end": "1335990"
  },
  {
    "text": "workload get get to get to understand what what your requirements are and drive that and one of the great metrics",
    "start": "1335990",
    "end": "1343550"
  },
  {
    "text": "to be able to track that is the percent IO limit if you're bumping up the",
    "start": "1343550",
    "end": "1349000"
  },
  {
    "text": "maximum end of that start testing against max IO that gives you a good",
    "start": "1349000",
    "end": "1354440"
  },
  {
    "text": "indication as to whether you're starting to eat away at the service and its current form and it's time to",
    "start": "1354440",
    "end": "1361200"
  },
  {
    "text": "to switch modes we also have a burst model so that's",
    "start": "1361200",
    "end": "1369390"
  },
  {
    "text": "based on the size of the file system you start with a two point one terabyte burst credits your minimum burst",
    "start": "1369390",
    "end": "1377010"
  },
  {
    "text": "throughput is 100 megabytes second your baseline throughput per terabyte is 50",
    "start": "1377010",
    "end": "1382740"
  },
  {
    "text": "Meg's plus the the bus throughput when your button eating into your burst",
    "start": "1382740",
    "end": "1388260"
  },
  {
    "text": "credits you'll start to get that 150 mix for that that terabyte of storage so",
    "start": "1388260",
    "end": "1394110"
  },
  {
    "start": "1394000",
    "end": "1394000"
  },
  {
    "text": "here's the the kind of raw data by my example so you'll see starting with a very small 10 gig file system with burst",
    "start": "1394110",
    "end": "1401430"
  },
  {
    "text": "you'll get your hundred Meg's you'll get that for 7.2 minutes through the day but as you start to work towards your your",
    "start": "1401430",
    "end": "1407370"
  },
  {
    "text": "half terabyte file systems you'll see that you get six hours of burst ability with that being 100 Meg's so aggregate",
    "start": "1407370",
    "end": "1415800"
  },
  {
    "text": "you've got your 125 and once you get to a terabyte you get in full 12 hours of",
    "start": "1415800",
    "end": "1421410"
  },
  {
    "text": "burst ability in there and your throughput will go up as your file",
    "start": "1421410",
    "end": "1426480"
  },
  {
    "text": "system size increases so the way to think about burst model oh",
    "start": "1426480",
    "end": "1432760"
  },
  {
    "text": "I was thinking about an analogy but Young's got a really good one about coffeepot your burst credit is there",
    "start": "1432760",
    "end": "1440380"
  },
  {
    "text": "like a you take a sip of coffee you pour your coffee you drink your coffee that's that's eating into you your burst",
    "start": "1440380",
    "end": "1446800"
  },
  {
    "text": "credit you put your coffee pop pop back and let the coffee just keep dripping back in again and that's very much the",
    "start": "1446800",
    "end": "1452800"
  },
  {
    "text": "case for your birth credit as if when you use it it eats away the burst credit",
    "start": "1452800",
    "end": "1458320"
  },
  {
    "text": "from that that 2.1 terabytes when you are not using it you start to get your",
    "start": "1458320",
    "end": "1463450"
  },
  {
    "text": "credits replenished another consideration for performance as the",
    "start": "1463450",
    "end": "1470320"
  },
  {
    "start": "1466000",
    "end": "1466000"
  },
  {
    "text": "size of your il once again this comes back to knowing your workload so the",
    "start": "1470320",
    "end": "1475750"
  },
  {
    "text": "smaller your i/o the smaller your throughput requirements are gonna be the B your i/o you're going to drive much",
    "start": "1475750",
    "end": "1482710"
  },
  {
    "text": "much greater throughput be aware of that as you you're going through the that the testing that you do",
    "start": "1482710",
    "end": "1489299"
  },
  {
    "start": "1489000",
    "end": "1489000"
  },
  {
    "text": "we've done a few tests ourselves and [Music] paralyzation is the way forward for",
    "start": "1489310",
    "end": "1497240"
  },
  {
    "text": "using ETFs so how do you take advantage of it multiple threads multiple",
    "start": "1497240",
    "end": "1502700"
  },
  {
    "text": "instances combinations of that so you can see from this example 160 threads",
    "start": "1502700",
    "end": "1508580"
  },
  {
    "text": "driving 25,000 ions and it's a near linear growth that that's not the limit",
    "start": "1508580",
    "end": "1514310"
  },
  {
    "text": "of how it will scale out that's just where we stop for this test how do you",
    "start": "1514310",
    "end": "1521060"
  },
  {
    "start": "1520000",
    "end": "1520000"
  },
  {
    "text": "track that and keep an eye on it and get the data that that helps you to understand your workload and your test",
    "start": "1521060",
    "end": "1526250"
  },
  {
    "text": "areas well cloud watch we always go to cloud watch for everything for for",
    "start": "1526250",
    "end": "1532610"
  },
  {
    "text": "really understanding what your throughput is going to be burst credit balance is really important if your",
    "start": "1532610",
    "end": "1538190"
  },
  {
    "text": "workload doesn't it keeps bumping into your bus credit balance keep an eye on",
    "start": "1538190",
    "end": "1544160"
  },
  {
    "text": "this set triggers and alert against it you're permitted throughput is that 3 gig gigabyte a second figure that I've",
    "start": "1544160",
    "end": "1552320"
  },
  {
    "text": "talked about before that's the soft limit so it's 1 2 to keep a track off though because as you approach that",
    "start": "1552320",
    "end": "1558770"
  },
  {
    "text": "limit you want to be aware of it so alert as you're getting closer and closer to that limit client connections",
    "start": "1558770",
    "end": "1564560"
  },
  {
    "text": "is to help you understand how many sessions there have clients to are coming in to your data and interact with",
    "start": "1564560",
    "end": "1572000"
  },
  {
    "text": "it and the percentile limit one that's the one that we keep an eye on to determine which mold we should be in",
    "start": "1572000",
    "end": "1580120"
  },
  {
    "text": "so we did a bunch of testing ourselves and two types of sorrow the first one",
    "start": "1580140",
    "end": "1586539"
  },
  {
    "start": "1581000",
    "end": "1581000"
  },
  {
    "text": "was transferring media assets into EFS and the size ranged from a few gigabytes",
    "start": "1586539",
    "end": "1592900"
  },
  {
    "text": "to a hundred plus gigabyte type files data sources were s3 and EBS as you'd",
    "start": "1592900",
    "end": "1601059"
  },
  {
    "text": "expect the other scenario was lots and lots of small files millions of small files sizes ranging from 64 K to 256 K",
    "start": "1601059",
    "end": "1610320"
  },
  {
    "text": "and once again s3 and EBS we used canoe",
    "start": "1610320",
    "end": "1616030"
  },
  {
    "text": "parallel it's tool for executing jobs in parallel as the the name might indicate",
    "start": "1616030",
    "end": "1622179"
  },
  {
    "text": "it's similar to exiled in that regard and you can use it to replace loops within shell scripts and what it'll do",
    "start": "1622179",
    "end": "1630429"
  },
  {
    "text": "is it'll make sure that the output from your commands are very similar so you get a consistent feel for your workload",
    "start": "1630429",
    "end": "1637230"
  },
  {
    "start": "1637000",
    "end": "1637000"
  },
  {
    "text": "and in this scenario you look as you increase the number of threads the time",
    "start": "1637230",
    "end": "1642370"
  },
  {
    "text": "to execute is reduced dramatically",
    "start": "1642370",
    "end": "1646470"
  },
  {
    "text": "so here's an example of the the concept that we use",
    "start": "1649340",
    "end": "1654249"
  },
  {
    "text": "and here are the results so you'll see for the large file transfers that the",
    "start": "1657110",
    "end": "1664100"
  },
  {
    "text": "4.2 gigabytes a second is not the upper limit this is just what we tested",
    "start": "1664100",
    "end": "1669679"
  },
  {
    "text": "against but the thing to call out is the the consistency of those file transfers",
    "start": "1669679",
    "end": "1676250"
  },
  {
    "text": "in there and the same for the small files 1.6 million for small files",
    "start": "1676250",
    "end": "1682520"
  },
  {
    "text": "transferred per minute via 300 instances",
    "start": "1682520",
    "end": "1687940"
  },
  {
    "text": "so it's summarized on performance side of things paralyze everything that means",
    "start": "1692920",
    "end": "1698020"
  },
  {
    "text": "threads instances combinations of the two test test test nobody knows your",
    "start": "1698020",
    "end": "1706090"
  },
  {
    "text": "workload your application stack like you do test as much as you can understand",
    "start": "1706090",
    "end": "1711520"
  },
  {
    "text": "what your workload is and understand your constraints understand what your",
    "start": "1711520",
    "end": "1716860"
  },
  {
    "text": "outcomes are and then capture and analyze as much as that data as you can",
    "start": "1716860",
    "end": "1723360"
  },
  {
    "text": "keep a close eye on things like birth credits that'll allow you to understand",
    "start": "1723480",
    "end": "1729970"
  },
  {
    "text": "when you're gonna hit potential bottlenecks and and understand your",
    "start": "1729970",
    "end": "1735250"
  },
  {
    "text": "workload a little bit more as well and one last thing to call out the test that",
    "start": "1735250",
    "end": "1741250"
  },
  {
    "text": "we did there with the 300 and census for the small file transfers that would that",
    "start": "1741250",
    "end": "1746410"
  },
  {
    "text": "worked out about five dollars an hour for us so we use spot to drive a lot of that activity to scale out to shrink",
    "start": "1746410",
    "end": "1752380"
  },
  {
    "text": "again so a spot to a great place to do a lot of your testing in as well",
    "start": "1752380",
    "end": "1757890"
  },
  {
    "text": "so with that I'm going to hand over back to young to talk through some of the",
    "start": "1758470",
    "end": "1764649"
  },
  {
    "text": "economics of using EFS",
    "start": "1764649",
    "end": "1767909"
  },
  {
    "text": "so EFS is economics this is a a couple of different ways to look at it in",
    "start": "1771650",
    "end": "1776990"
  },
  {
    "start": "1774000",
    "end": "1774000"
  },
  {
    "text": "relation to the other options available out there so one of the WHA options that we see is BYO so build your own these",
    "start": "1776990",
    "end": "1785120"
  },
  {
    "text": "are customers that are going to use ec2 instances with EBS and then implement a file system on top of that so if you",
    "start": "1785120",
    "end": "1791720"
  },
  {
    "text": "want to run a file system in the cloud you can certainly build your own in AWS and when we looked at some customer",
    "start": "1791720",
    "end": "1800180"
  },
  {
    "text": "experiences what we got is pretty consistent feedback is that there were very complex and sensitive to maintain",
    "start": "1800180",
    "end": "1806600"
  },
  {
    "text": "and they're also very specialized skill sets so when you have to make changes it",
    "start": "1806600",
    "end": "1814010"
  },
  {
    "text": "becomes a very nervous situation to see exactly what that effect might be it's",
    "start": "1814010",
    "end": "1820850"
  },
  {
    "text": "also expensive so in addition to all of the costs associated with it the soft",
    "start": "1820850",
    "end": "1826760"
  },
  {
    "text": "cost of Management there's actual hard Dalek comparisons so as we describe the",
    "start": "1826760",
    "end": "1832220"
  },
  {
    "text": "architecture of EFS if folks were to build it on their own this is what it",
    "start": "1832220",
    "end": "1838040"
  },
  {
    "text": "would need to look like you would have multiple ec2 instances in one easy",
    "start": "1838040",
    "end": "1845080"
  },
  {
    "text": "duplicated across three AZ's you would have multiple EBS volumes to achieve the",
    "start": "1845080",
    "end": "1852620"
  },
  {
    "text": "same scale and redundancy then you would have all of the Associated",
    "start": "1852620",
    "end": "1858309"
  },
  {
    "text": "interconnections bandwidth in traffic to make sure that every NFS client and",
    "start": "1858309",
    "end": "1863420"
  },
  {
    "text": "every AZ can access data in any easy to server and EBS volume in another AZ so",
    "start": "1863420",
    "end": "1871790"
  },
  {
    "text": "there's a lot of complexity that EFS simplifies and of course all those have",
    "start": "1871790",
    "end": "1878330"
  },
  {
    "text": "associated cost with them so if we look at what that could look like these are just some example numbers",
    "start": "1878330",
    "end": "1886660"
  },
  {
    "start": "1883000",
    "end": "1883000"
  },
  {
    "text": "but if you were to create a 500 gigabyte file system and you left yourself 15%",
    "start": "1886660",
    "end": "1891940"
  },
  {
    "text": "wiggle room for space so 600 gigabytes here's a cost comparison of again just",
    "start": "1891940",
    "end": "1898780"
  },
  {
    "text": "the hardware and networking components not the file system layer it's roughly",
    "start": "1898780",
    "end": "1905860"
  },
  {
    "text": "three times what EFS would be so again EFS very simple pricing model you pay",
    "start": "1905860",
    "end": "1912550"
  },
  {
    "text": "for only the amount of data that you use 33 cents per gig is the price in Ireland",
    "start": "1912550",
    "end": "1921900"
  },
  {
    "text": "so again remember the previous diagram this is what the ef-s environment looks",
    "start": "1925029",
    "end": "1931149"
  },
  {
    "text": "like very simplified again fully managed so you folks don't have to worry about",
    "start": "1931149",
    "end": "1936249"
  },
  {
    "text": "anything other than the amount of data there down in the file system",
    "start": "1936249",
    "end": "1941549"
  },
  {
    "text": "so no other billing dimensions no upfront fees no minimums those are the",
    "start": "1947860",
    "end": "1955539"
  },
  {
    "text": "prices in the the regions that are available today and many more regions",
    "start": "1955539",
    "end": "1961390"
  },
  {
    "text": "coming online shortly in EU and",
    "start": "1961390",
    "end": "1965669"
  },
  {
    "text": "when you get the slide presentations you'll have access to these links oh here's a number of different references",
    "start": "1970430",
    "end": "1975890"
  },
  {
    "text": "and resources available to you there's a few hands-on tutorials where you can see an EFS file system from initial keyboard",
    "start": "1975890",
    "end": "1984140"
  },
  {
    "text": "to live and available for storage mounted to ec2 in a matter of three minutes as well as some links to a quick",
    "start": "1984140",
    "end": "1991310"
  },
  {
    "text": "labs and quick starts yeah I know we went through a number of things pretty quickly here given the time Paul and I",
    "start": "1991310",
    "end": "1998270"
  },
  {
    "text": "will be available for questions here up at the front if you'd like to come and ask anything specifically I'd like to thank you all for your time and enjoy",
    "start": "1998270",
    "end": "2005110"
  },
  {
    "text": "the rest of the summit",
    "start": "2005110",
    "end": "2008010"
  }
]