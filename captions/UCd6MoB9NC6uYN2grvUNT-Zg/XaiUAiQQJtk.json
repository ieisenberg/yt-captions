[
  {
    "text": "in this video you'll see how to deploy",
    "start": "560",
    "end": "2240"
  },
  {
    "text": "an aws marketplace container product on",
    "start": "2240",
    "end": "4480"
  },
  {
    "text": "existing amazon elastic container",
    "start": "4480",
    "end": "6240"
  },
  {
    "text": "service",
    "start": "6240",
    "end": "6720"
  },
  {
    "text": "amazon ecs clusters with this solution",
    "start": "6720",
    "end": "10000"
  },
  {
    "text": "you can easily discover container",
    "start": "10000",
    "end": "11519"
  },
  {
    "text": "products in aws marketplace",
    "start": "11519",
    "end": "13440"
  },
  {
    "text": "subscribe and deploy container solutions",
    "start": "13440",
    "end": "15280"
  },
  {
    "text": "on amazon ecs",
    "start": "15280",
    "end": "16720"
  },
  {
    "text": "and manage those deployed resources with",
    "start": "16720",
    "end": "18480"
  },
  {
    "text": "aws service catalog app registry",
    "start": "18480",
    "end": "22080"
  },
  {
    "text": "to perform all the steps you're about to",
    "start": "22080",
    "end": "23680"
  },
  {
    "text": "see your aws environment will need an",
    "start": "23680",
    "end": "25840"
  },
  {
    "text": "active amazon ecs cluster that's",
    "start": "25840",
    "end": "27840"
  },
  {
    "text": "provisioned with at least two",
    "start": "27840",
    "end": "29119"
  },
  {
    "text": "amazon elastic compute cloud or amazon",
    "start": "29119",
    "end": "31359"
  },
  {
    "text": "ec2 instances",
    "start": "31359",
    "end": "32640"
  },
  {
    "text": "or worker nodes for demonstration",
    "start": "32640",
    "end": "35040"
  },
  {
    "text": "purposes we've already set up our",
    "start": "35040",
    "end": "36559"
  },
  {
    "text": "environment",
    "start": "36559",
    "end": "37840"
  },
  {
    "text": "we'll begin in the aws marketplace where",
    "start": "37840",
    "end": "39920"
  },
  {
    "text": "we can easily discover",
    "start": "39920",
    "end": "41040"
  },
  {
    "text": "products there are more than 10 000",
    "start": "41040",
    "end": "43520"
  },
  {
    "text": "products listed",
    "start": "43520",
    "end": "45920"
  },
  {
    "text": "let's narrow down this list to show only",
    "start": "45920",
    "end": "47600"
  },
  {
    "text": "container products that support",
    "start": "47600",
    "end": "49039"
  },
  {
    "text": "amazon ecs now the results show 500 or",
    "start": "49039",
    "end": "52480"
  },
  {
    "text": "so products",
    "start": "52480",
    "end": "53520"
  },
  {
    "text": "let's search for a specific vendor for",
    "start": "53520",
    "end": "56320"
  },
  {
    "text": "this example we'll search for the third",
    "start": "56320",
    "end": "58000"
  },
  {
    "text": "party vendor",
    "start": "58000",
    "end": "58800"
  },
  {
    "text": "aqua enterprise platform let's go ahead",
    "start": "58800",
    "end": "62079"
  },
  {
    "text": "and subscribe",
    "start": "62079",
    "end": "64719"
  },
  {
    "text": "now let's continue to configuration",
    "start": "66000",
    "end": "69680"
  },
  {
    "text": "for the delivery method we'll select",
    "start": "70320",
    "end": "72080"
  },
  {
    "text": "aqua enterprise platform for ecs",
    "start": "72080",
    "end": "75439"
  },
  {
    "text": "we'll retain the default software",
    "start": "75439",
    "end": "76960"
  },
  {
    "text": "version setting and continue to launch",
    "start": "76960",
    "end": "80479"
  },
  {
    "text": "now we can choose how we want to launch",
    "start": "82159",
    "end": "83600"
  },
  {
    "text": "the software in this case we'll use the",
    "start": "83600",
    "end": "86159"
  },
  {
    "text": "cloudformation template to deploy the",
    "start": "86159",
    "end": "87759"
  },
  {
    "text": "product",
    "start": "87759",
    "end": "89200"
  },
  {
    "text": "here we can specify the parameters of",
    "start": "89200",
    "end": "91040"
  },
  {
    "text": "this new cloudformation stack",
    "start": "91040",
    "end": "93759"
  },
  {
    "text": "here we'll provide the name of our",
    "start": "93759",
    "end": "95119"
  },
  {
    "text": "existing ecs cluster",
    "start": "95119",
    "end": "97520"
  },
  {
    "text": "next we'll specify the ecs cluster",
    "start": "97520",
    "end": "99520"
  },
  {
    "text": "security group",
    "start": "99520",
    "end": "102240"
  },
  {
    "text": "next we'll select the amazon virtual",
    "start": "102240",
    "end": "104159"
  },
  {
    "text": "private cloud or amazon vpc that this",
    "start": "104159",
    "end": "106399"
  },
  {
    "text": "product will deploy into",
    "start": "106399",
    "end": "109600"
  },
  {
    "text": "next let's specify all the subnets that",
    "start": "109840",
    "end": "111840"
  },
  {
    "text": "the ecs cluster utilizes",
    "start": "111840",
    "end": "115840"
  },
  {
    "text": "for our purposes we'll specify the aqua",
    "start": "118079",
    "end": "120159"
  },
  {
    "text": "lb subnets to be the same as the ecs",
    "start": "120159",
    "end": "122399"
  },
  {
    "text": "instance subnets",
    "start": "122399",
    "end": "128879"
  },
  {
    "text": "next we'll enter the ip address that",
    "start": "128879",
    "end": "130560"
  },
  {
    "text": "will be used to access the aqua console",
    "start": "130560",
    "end": "134480"
  },
  {
    "text": "finally we'll specify a password for the",
    "start": "134879",
    "end": "136800"
  },
  {
    "text": "rds instance",
    "start": "136800",
    "end": "138000"
  },
  {
    "text": "acknowledge the message regarding",
    "start": "138000",
    "end": "139440"
  },
  {
    "text": "identity and access management or iam",
    "start": "139440",
    "end": "141520"
  },
  {
    "text": "resource",
    "start": "141520",
    "end": "142000"
  },
  {
    "text": "creation and create the stack over the",
    "start": "142000",
    "end": "145120"
  },
  {
    "text": "next 20 minutes the stack's deployment",
    "start": "145120",
    "end": "146879"
  },
  {
    "text": "progress can be monitored here in the",
    "start": "146879",
    "end": "148640"
  },
  {
    "text": "events tab",
    "start": "148640",
    "end": "151280"
  },
  {
    "text": "now that the stack has been created",
    "start": "151760",
    "end": "153360"
  },
  {
    "text": "let's go to the outputs tab to find the",
    "start": "153360",
    "end": "155120"
  },
  {
    "text": "link to the aqua console",
    "start": "155120",
    "end": "157599"
  },
  {
    "text": "just like that we can access the web",
    "start": "157599",
    "end": "159280"
  },
  {
    "text": "endpoint of the container solution and",
    "start": "159280",
    "end": "160879"
  },
  {
    "text": "start using it",
    "start": "160879",
    "end": "162400"
  },
  {
    "text": "next let's look at how you can manage",
    "start": "162400",
    "end": "163920"
  },
  {
    "text": "your organization's container",
    "start": "163920",
    "end": "165200"
  },
  {
    "text": "applications using aws service catalog",
    "start": "165200",
    "end": "167519"
  },
  {
    "text": "app registry",
    "start": "167519",
    "end": "170160"
  },
  {
    "text": "app registry allows you to create a",
    "start": "170160",
    "end": "171680"
  },
  {
    "text": "repository of applications and resources",
    "start": "171680",
    "end": "173840"
  },
  {
    "text": "launched using cloud formation",
    "start": "173840",
    "end": "175840"
  },
  {
    "text": "you can then define and manage your",
    "start": "175840",
    "end": "177280"
  },
  {
    "text": "application metadata",
    "start": "177280",
    "end": "179120"
  },
  {
    "text": "in this case two applications have been",
    "start": "179120",
    "end": "180959"
  },
  {
    "text": "manually configured in app registry",
    "start": "180959",
    "end": "183519"
  },
  {
    "text": "let's drill into the aqua enterprise",
    "start": "183519",
    "end": "185200"
  },
  {
    "text": "platform application",
    "start": "185200",
    "end": "187440"
  },
  {
    "text": "here we can see the resource details",
    "start": "187440",
    "end": "189360"
  },
  {
    "text": "let's take a look at the attribute",
    "start": "189360",
    "end": "190800"
  },
  {
    "text": "groups",
    "start": "190800",
    "end": "192159"
  },
  {
    "text": "here we can quickly determine whether",
    "start": "192159",
    "end": "193680"
  },
  {
    "text": "the container was acquired from aws",
    "start": "193680",
    "end": "195519"
  },
  {
    "text": "marketplace",
    "start": "195519",
    "end": "196560"
  },
  {
    "text": "as well as what security classification",
    "start": "196560",
    "end": "198480"
  },
  {
    "text": "the resource has",
    "start": "198480",
    "end": "200800"
  },
  {
    "text": "you've just seen how to deploy aws",
    "start": "200800",
    "end": "202640"
  },
  {
    "text": "marketplace containers on existing",
    "start": "202640",
    "end": "204319"
  },
  {
    "text": "amazon ecs clusters",
    "start": "204319",
    "end": "206720"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "206720",
    "end": "208239"
  },
  {
    "text": "the description and links for this video",
    "start": "208239",
    "end": "210400"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "210400",
    "end": "212080"
  },
  {
    "text": "to try",
    "start": "212080",
    "end": "216400"
  }
]