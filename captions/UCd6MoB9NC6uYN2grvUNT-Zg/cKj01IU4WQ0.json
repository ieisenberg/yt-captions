[
  {
    "text": "Hi! I’m Dhruv Sood, a product manager ",
    "start": "266",
    "end": "2133"
  },
  {
    "text": "on the AWS Lambda team,",
    "start": "2133",
    "end": "3432"
  },
  {
    "text": " and today, I’m excited to give you",
    "start": "3433",
    "end": "4800"
  },
  {
    "text": "an overview of Lambda Extensions. ",
    "start": "4800",
    "end": "7133"
  },
  {
    "text": "Extensions are new way to easily integrate ",
    "start": "7133",
    "end": "10333"
  },
  {
    "text": "your favorite operational tools for monitoring,",
    "start": "10333",
    "end": "13700"
  },
  {
    "text": "observability, security, and governance with Lambda.",
    "start": "13700",
    "end": "16633"
  },
  {
    "text": "You can use extensions from AWS, ",
    "start": "16633",
    "end": "19333"
  },
  {
    "text": "AWS Partners, and open source projects. ",
    "start": "19333",
    "end": "22433"
  },
  {
    "text": "And, as of this recording, there are ",
    "start": "22433",
    "end": "24300"
  },
  {
    "text": "extensions available for all of these tools. ",
    "start": "24300",
    "end": "27133"
  },
  {
    "text": "Head over to the link below to see the latest set ",
    "start": "27133",
    "end": "29967"
  },
  {
    "text": "of extensions and what you can achieve with them. ",
    "start": "29967",
    "end": "32333"
  },
  {
    "text": "Extensions help solve a common request from customers ",
    "start": "32333",
    "end": "35500"
  },
  {
    "text": "to make it easier to integrate their ",
    "start": "35500",
    "end": "37333"
  },
  {
    "text": "favorite operational tools with Lambda. ",
    "start": "37333",
    "end": "39934"
  },
  {
    "text": "Previously, customers told us ",
    "start": "39934",
    "end": "42366"
  },
  {
    "text": "that integrating some tools  ",
    "start": "42367",
    "end": "43767"
  },
  {
    "text": "required extra operational and configuration tasks. ",
    "start": "43767",
    "end": "47834"
  },
  {
    "text": "In addition, tools such as log routers,",
    "start": "47834",
    "end": "50633"
  },
  {
    "text": "which are long-running processes,",
    "start": "50633",
    "end": "52066"
  },
  {
    "text": " could not easily run on Lambda.",
    "start": "52066",
    "end": "54333"
  },
  {
    "text": "With Lambda Extensions, you can plug ",
    "start": "54333",
    "end": "56033"
  },
  {
    "text": "in the tools you want to use ",
    "start": "56033",
    "end": "57333"
  },
  {
    "text": "directly into the Lambda environment ",
    "start": "57333",
    "end": "59633"
  },
  {
    "text": "without complex configuration or installation.",
    "start": "59633",
    "end": "62633"
  },
  {
    "text": "You can use extensions for use-cases such as:",
    "start": "62633",
    "end": "65066"
  },
  {
    "text": "Capturing diagnostic information ",
    "start": "65066",
    "end": "66700"
  },
  {
    "text": "before, during, and after function invocation",
    "start": "66700",
    "end": "70000"
  },
  {
    "text": "Automatically instrumenting your code",
    "start": "70000",
    "end": "72166"
  },
  {
    "text": "without needing code changes",
    "start": "72166",
    "end": "74433"
  },
  {
    "text": "Fetching configuration settings ",
    "start": "74433",
    "end": "76233"
  },
  {
    "text": "or secrets before the function invocation",
    "start": "76233",
    "end": "79367"
  },
  {
    "text": "Sending telemetry to custom destinations directly ",
    "start": "79367",
    "end": "82700"
  },
  {
    "text": "and asynchronously from your Lambda functions,",
    "start": "82700",
    "end": "85566"
  },
  {
    "text": "Detecting and alerting on function ",
    "start": "85567",
    "end": "87367"
  },
  {
    "text": "activity through security agents",
    "start": "87367",
    "end": "89433"
  },
  {
    "text": "Getting started with extensions is easy.",
    "start": "89433",
    "end": "92100"
  },
  {
    "text": "You can deploy extensions as layers and use ",
    "start": "92100",
    "end": "94132"
  },
  {
    "text": "environment variables to configure it.",
    "start": "94133",
    "end": "96066"
  },
  {
    "text": "Or, if you package and deploy your Lambda ",
    "start": "96066",
    "end": "98633"
  },
  {
    "text": "functions as container images,",
    "start": "98633",
    "end": "100333"
  },
  {
    "text": "you can add the extension to your image. ",
    "start": "100333",
    "end": "103834"
  },
  {
    "text": "To get specific instructions, ",
    "start": "103834",
    "end": "105467"
  },
  {
    "text": "head over to the documentation provided ",
    "start": "105467",
    "end": "107533"
  },
  {
    "text": "by your favorite tooling vendor.",
    "start": "107533",
    "end": "109566"
  },
  {
    "text": "Now, let’s take a look at how Lambda extensions work",
    "start": "109734",
    "end": "112734"
  },
  {
    "text": "and talk a little bit about Lambda’s environment. ",
    "start": "112734",
    "end": "115734"
  },
  {
    "text": "Lambda provides a sandboxed environment ",
    "start": "115734",
    "end": "118233"
  },
  {
    "text": "and this is where your function code runs.",
    "start": "118233",
    "end": "120567"
  },
  {
    "text": "This isolates your function from other functions ",
    "start": "120567",
    "end": "123567"
  },
  {
    "text": "and provides the resources, such as memory, ",
    "start": "123567",
    "end": "126033"
  },
  {
    "text": "which you specify in the function configuration.",
    "start": "126033",
    "end": "129032"
  },
  {
    "text": "The Lambda service initializes this environment ",
    "start": "129133",
    "end": "132133"
  },
  {
    "text": "on-demand during the first invocation. ",
    "start": "132133",
    "end": "135133"
  },
  {
    "text": "Or, in advance of the first invocation ",
    "start": "135133",
    "end": "137467"
  },
  {
    "text": "if you use provisioned concurrency",
    "start": "137467",
    "end": "139667"
  },
  {
    "text": "which keeps functions initialized and-ready ",
    "start": "139667",
    "end": "141967"
  },
  {
    "text": "to respond in double-digit milliseconds.",
    "start": "141967",
    "end": "144299"
  },
  {
    "text": "When you invoke a Lambda function, the Lambda service",
    "start": "144300",
    "end": "147300"
  },
  {
    "text": "routes the request to this environment. ",
    "start": "147300",
    "end": "150300"
  },
  {
    "text": "After the function has processed the request ",
    "start": "150300",
    "end": "153300"
  },
  {
    "text": "the Lambda service freezes this environment.",
    "start": "153300",
    "end": "155967"
  },
  {
    "text": "It thaws it later, if it needs to re-use it",
    "start": "155967",
    "end": "157567"
  },
  {
    "text": "for another invocation. ",
    "start": "157567",
    "end": "159467"
  },
  {
    "text": "When a function has not been used for some time, ",
    "start": "159467",
    "end": "161866"
  },
  {
    "text": "the Lambda service spins down this environment. ",
    "start": "161867",
    "end": "165033"
  },
  {
    "text": "In this way, Lambda automatically ",
    "start": "165166",
    "end": "167400"
  },
  {
    "text": "manages the lifecycle of compute resources. ",
    "start": "167400",
    "end": "170299"
  },
  {
    "text": "Let’s zoom in a bit... ",
    "start": "170533",
    "end": "173100"
  },
  {
    "text": "The main process within the Lambda environment",
    "start": "173100",
    "end": "175133"
  },
  {
    "text": "is the runtime",
    "start": "175133",
    "end": "176599"
  },
  {
    "text": "which runs your function code. ",
    "start": "176600",
    "end": "178734"
  },
  {
    "text": "The runtime process uses the Runtime API ",
    "start": "178800",
    "end": "181600"
  },
  {
    "text": "to communicate with the Lambda service.",
    "start": "181600",
    "end": "184000"
  },
  {
    "text": "It requests invocation events from the Lambda service ",
    "start": "184000",
    "end": "187433"
  },
  {
    "text": " and then invokes the function handler. ",
    "start": "187433",
    "end": "190433"
  },
  {
    "text": "After the function code is done, ",
    "start": "190533",
    "end": "192433"
  },
  {
    "text": "it returns the response to the Runtime API ",
    "start": "192433",
    "end": "194700"
  },
  {
    "text": " and asks for the next invocation event. ",
    "start": "194700",
    "end": "197933"
  },
  {
    "text": "If there are no events ready to be processed, ",
    "start": "197934",
    "end": "200133"
  },
  {
    "text": "the Lambda service freezes the environment.",
    "start": "200133",
    "end": "202599"
  },
  {
    "text": "Now, extensions are a new way for tools to more easily ",
    "start": "203266",
    "end": "205967"
  },
  {
    "text": "integrate deeply into the Lambda environment. ",
    "start": "205967",
    "end": "208967"
  },
  {
    "text": "They use the Extensions API to request ",
    "start": "208967",
    "end": "211834"
  },
  {
    "text": " lifecycle events, process them, ",
    "start": "211834",
    "end": "214200"
  },
  {
    "text": "and then tell the Lambda service when they are done. ",
    "start": "214200",
    "end": "217200"
  },
  {
    "text": "Through this API, extensions get greater control ",
    "start": "218567",
    "end": "221900"
  },
  {
    "text": "of the lifecycle of the environment",
    "start": "221900",
    "end": "223933"
  },
  {
    "text": "  the Lambda service freezes it once the runtime",
    "start": "223934",
    "end": "228033"
  },
  {
    "text": " and all extensions are done.",
    "start": "228033",
    "end": "229734"
  },
  {
    "text": "Let’s take a closer look at how extensions can run",
    "start": "229900",
    "end": "232400"
  },
  {
    "text": "at all phases of the Lambda lifecycle ",
    "start": "232400",
    "end": "234633"
  },
  {
    "text": "initialization, invocation, and shutdown.",
    "start": "234633",
    "end": "237900"
  },
  {
    "text": "First - extensions can run before the function ",
    "start": "237900",
    "end": "240433"
  },
  {
    "text": "because the Lambda service starts extensions",
    "start": "240433",
    "end": "243467"
  },
  {
    "text": "before the runtime and the function. ",
    "start": "243467",
    "end": "245500"
  },
  {
    "text": "Second, during the invoke phase, extensions can ",
    "start": "245633",
    "end": "249433"
  },
  {
    "text": "run logic in parallel to the function and can also ",
    "start": "249433",
    "end": "252265"
  },
  {
    "text": "choose to run after the function code is done. ",
    "start": "252266",
    "end": "255600"
  },
  {
    "text": "Extensions can use this time for things",
    "start": "255600",
    "end": "257532"
  },
  {
    "text": "like sending out data collected during the invoke. ",
    "start": "257533",
    "end": "260332"
  },
  {
    "text": "The Lambda service freezes the environment ",
    "start": "260967",
    "end": "263800"
  },
  {
    "text": "when the runtime and all extensions are done, ",
    "start": "263800",
    "end": "266166"
  },
  {
    "text": "and so, in this way, ",
    "start": "266166",
    "end": "268199"
  },
  {
    "text": "extensions can influence the freeze and thaw behavior.",
    "start": "268200",
    "end": "271133"
  },
  {
    "text": "Finally, extensions can run during a shutdown phase ",
    "start": "271834",
    "end": "275333"
  },
  {
    "text": "which occurs before the environment is spun down.",
    "start": "275333",
    "end": "278533"
  },
  {
    "text": "They can use this time for final clean-up tasks.",
    "start": "278533",
    "end": "282332"
  },
  {
    "text": "Note: because extensions run in the same environment ",
    "start": "282934",
    "end": "285466"
  },
  {
    "text": "as function code, they share resources such as memory, CPU ",
    "start": "285467",
    "end": "289300"
  },
  {
    "text": "and credentials with the runtime process.",
    "start": "289300",
    "end": "291800"
  },
  {
    "text": "Now, before we wrap up, ",
    "start": "291800",
    "end": "293400"
  },
  {
    "text": "let’s talk a little bit about logs...",
    "start": "293400",
    "end": "294800"
  },
  {
    "text": "To help you troubleshoot failures in a function, ",
    "start": "295533",
    "end": "297834"
  },
  {
    "text": "the Lambda service automatically captures logs generated ",
    "start": "297834",
    "end": "301166"
  },
  {
    "text": "by your function, and streams them to Amazon CloudWatch. ",
    "start": "301166",
    "end": "303866"
  },
  {
    "text": "This log stream contains the logs which are generated ",
    "start": "304467",
    "end": "307100"
  },
  {
    "text": "from within your function code, and also those",
    "start": "307100",
    "end": "309734"
  },
  {
    "text": "that are generated by the Lambda service",
    "start": "309734",
    "end": "311934"
  },
  {
    "text": " as part of the invoke",
    "start": "311934",
    "end": "313633"
  },
  {
    "text": "Extensions for tools like log routers can now",
    "start": "314200",
    "end": "317133"
  },
  {
    "text": "use the new Logs API to subscribe to these log streams, ",
    "start": "317133",
    "end": "321000"
  },
  {
    "text": "and the Lambda service will then stream",
    "start": "321000",
    "end": "322867"
  },
  {
    "text": "logs to the extension.",
    "start": "322867",
    "end": "324567"
  },
  {
    "text": "Previously, 3rd party tools would get logs via CloudWatch, ",
    "start": "325367",
    "end": "329000"
  },
  {
    "text": "and now, they can also use the Logs API ",
    "start": "329000",
    "end": "331567"
  },
  {
    "text": "to get them directly from within the Lambda environment. ",
    "start": "331567",
    "end": "335432"
  },
  {
    "text": "So to wrap up, you have seen that Extensions are ",
    "start": "335567",
    "end": "337667"
  },
  {
    "text": "a new way to integrate tools with Lambda. ",
    "start": "337667",
    "end": "340133"
  },
  {
    "text": "Extensions can run in parallel the function and can",
    "start": "340133",
    "end": "343100"
  },
  {
    "text": " also continue to run after the function code is done. ",
    "start": "343100",
    "end": "346400"
  },
  {
    "text": "They use the Extensions API to control and influence ",
    "start": "346700",
    "end": "349734"
  },
  {
    "text": "the lifecycle of the Lambda environment. ",
    "start": "349734",
    "end": "351734"
  },
  {
    "text": "In addition, The new Logs API gives extension authors ",
    "start": "352233",
    "end": "355567"
  },
  {
    "text": "a simple interface to receive a stream of logs ",
    "start": "355567",
    "end": "358934"
  },
  {
    "text": "These capabilities together, make it even easier for you ",
    "start": "358934",
    "end": "362033"
  },
  {
    "text": "to use favorite tools with AWS Lambda. ",
    "start": "362033",
    "end": "364867"
  },
  {
    "text": "For more information, take a look at the link below. ",
    "start": "364867",
    "end": "367934"
  },
  {
    "text": "Thank you.",
    "start": "367934",
    "end": "368733"
  }
]