[
  {
    "text": "welcome and thank you for attending this track welcome to application modernization my",
    "start": "30",
    "end": "6480"
  },
  {
    "text": "name is Tony pricasso I am a Technical Evangelist and I'll be your host for this session so um I know some of you",
    "start": "6480",
    "end": "14880"
  },
  {
    "text": "are coming out from Singapore just wanted a quick check how many of you are based in Singapore awesome okay so how",
    "start": "14880",
    "end": "22289"
  },
  {
    "text": "many of you base not 4 in Singapore ok so give a round of applause for them",
    "start": "22289",
    "end": "28230"
  },
  {
    "text": "we're coming to you Singapore for this event so in this session I'm going to",
    "start": "28230",
    "end": "34410"
  },
  {
    "text": "share my knowledge about micro services it's becoming the de facto approach when",
    "start": "34410",
    "end": "41820"
  },
  {
    "text": "you're building your system but there's a few key challenges and I would like to share with you how AWS can help you by",
    "start": "41820",
    "end": "48450"
  },
  {
    "text": "presenting for best practices okay so first thing monolith ok so um this is",
    "start": "48450",
    "end": "57870"
  },
  {
    "text": "the approach that we've been using so many times a if we want to build a",
    "start": "57870",
    "end": "64500"
  },
  {
    "text": "system we built all these surfaces into a one large code base so the key",
    "start": "64500",
    "end": "71070"
  },
  {
    "text": "characteristic ah first all the processes are tightly coupled right and",
    "start": "71070",
    "end": "77030"
  },
  {
    "text": "we usually run as a single surface and",
    "start": "77030",
    "end": "82280"
  },
  {
    "text": "because we're putting all of those functions and surfaces into one large code base it becomes really complex as",
    "start": "82280",
    "end": "91250"
  },
  {
    "text": "our code base grows right and there's complexities it's limiting the",
    "start": "91250",
    "end": "97579"
  },
  {
    "text": "experimentations it's limiting us on how we can roll new features to satisfy our",
    "start": "97579",
    "end": "104100"
  },
  {
    "text": "customers and when it comes to scaling",
    "start": "104100",
    "end": "109700"
  },
  {
    "text": "the entire architecture needs to be scaled and this will impose a risk for",
    "start": "109700",
    "end": "117119"
  },
  {
    "text": "application availability ok so uh I I",
    "start": "117119",
    "end": "122640"
  },
  {
    "text": "started with model if I understand the key challenges and then moving on to the next like and what do we need them what",
    "start": "122640",
    "end": "131099"
  },
  {
    "text": "do we need to what do we need to improve our system we",
    "start": "131099",
    "end": "137010"
  },
  {
    "text": "need to be more agile we need to be more agile to satisfy our customer by",
    "start": "137010",
    "end": "143670"
  },
  {
    "text": "releasing new features into a product that's really important and we need to",
    "start": "143670",
    "end": "151040"
  },
  {
    "text": "can have the flexibility to implement more technology there's a tons of",
    "start": "151040",
    "end": "158100"
  },
  {
    "text": "libraries and really great frameworks out there on the internet that we can use it doesn't make any sense if we need",
    "start": "158100",
    "end": "166350"
  },
  {
    "text": "to stick into one particle technology because the limitation of monolith and",
    "start": "166350",
    "end": "172040"
  },
  {
    "text": "by doing so it gives us the improvement in terms of our code we can have a",
    "start": "172040",
    "end": "180900"
  },
  {
    "text": "quality code we can improve the reusability the composability and the",
    "start": "180900",
    "end": "186120"
  },
  {
    "text": "maintainability of our codes which we can deploy our codes to make into our",
    "start": "186120",
    "end": "193800"
  },
  {
    "text": "system much more easier and then by having an easy deployment we also need",
    "start": "193800",
    "end": "202410"
  },
  {
    "text": "to be more flexible in terms of scaling and but we don't stop there we need to",
    "start": "202410",
    "end": "210030"
  },
  {
    "text": "have a resilient system okay so there's a lot of demands so there's a lot of",
    "start": "210030",
    "end": "215760"
  },
  {
    "text": "demands that we need to solve so I want to introduce you to micro services okay",
    "start": "215760",
    "end": "222900"
  },
  {
    "text": "so a quick question how many of you have implemented micro services on your",
    "start": "222900",
    "end": "228000"
  },
  {
    "text": "production Oh awesome ok so micro services is an approach both",
    "start": "228000",
    "end": "235440"
  },
  {
    "text": "on two dimensions architectural and organizational it reflects to your",
    "start": "235440",
    "end": "241890"
  },
  {
    "text": "organizational structure it's an approach to software development in which we have our software composed of a",
    "start": "241890",
    "end": "249390"
  },
  {
    "text": "small independent surface that they really well communicated offer a",
    "start": "249390",
    "end": "254550"
  },
  {
    "text": "well-defined api's okay so that's definition of micro services to give you",
    "start": "254550",
    "end": "261390"
  },
  {
    "text": "a big picture this is how it looks so on the left side of the pane here we",
    "start": "261390",
    "end": "267910"
  },
  {
    "text": "have the illustration of monolithic let's say you're building an e-commerce",
    "start": "267910",
    "end": "272980"
  },
  {
    "text": "application with a monolithic approach you have to build your order UI your",
    "start": "272980",
    "end": "279400"
  },
  {
    "text": "front-end your web and then you need to build your audience surface inventory surface supply chain management shipping",
    "start": "279400",
    "end": "286480"
  },
  {
    "text": "surface everything and wrap into one large surface single surface that's",
    "start": "286480",
    "end": "292330"
  },
  {
    "text": "morally but when it comes to micro services we take out of those each",
    "start": "292330",
    "end": "299320"
  },
  {
    "text": "components into one independent surface so you can see on the right side we have",
    "start": "299320",
    "end": "305440"
  },
  {
    "text": "the order UI we have other surface we have infantery service we have shipping services all the same the difference is",
    "start": "305440",
    "end": "311830"
  },
  {
    "text": "its raw now running as a single independent surface okay so you see that",
    "start": "311830",
    "end": "318400"
  },
  {
    "text": "I put a number there that means that you can easily scale all of your surface",
    "start": "318400",
    "end": "323610"
  },
  {
    "text": "independently so let's say that you want you have this like a promotional",
    "start": "323610",
    "end": "328660"
  },
  {
    "text": "marketing activities going on for your website ecommerce website the first",
    "start": "328660",
    "end": "334750"
  },
  {
    "text": "thing that you need to skill that II need to be skill is your front end well",
    "start": "334750",
    "end": "339820"
  },
  {
    "text": "it doesn't necessary to scale the inventory surface all shipping service",
    "start": "339820",
    "end": "345720"
  },
  {
    "text": "so with micro services EU can skill only the order UI that's why I put the number",
    "start": "345720",
    "end": "354100"
  },
  {
    "text": "and on the right side so and then that's",
    "start": "354100",
    "end": "361120"
  },
  {
    "text": "the correct key characteristic of micro surface it's decentralized decentralized",
    "start": "361120",
    "end": "369310"
  },
  {
    "text": "means it's distributed system with a decentralized data management and then I",
    "start": "369310",
    "end": "376210"
  },
  {
    "text": "our micro services we are building an independent service this independent",
    "start": "376210",
    "end": "382030"
  },
  {
    "text": "service is a different components that can be changed upgraded or replaced",
    "start": "382030",
    "end": "387270"
  },
  {
    "text": "independently without affecting the whole system and then it's black box",
    "start": "387270",
    "end": "393729"
  },
  {
    "text": "back most as it it means as it's abstract thing away the complexities of one",
    "start": "393729",
    "end": "400410"
  },
  {
    "text": "surface from another surface so another surface it doesn't need to understand",
    "start": "400410",
    "end": "406560"
  },
  {
    "text": "the complexity of one surface it only needs to communicate offer a wealthy fun",
    "start": "406560",
    "end": "412140"
  },
  {
    "text": "api's its polyglot this is what I like you can build your system with micro",
    "start": "412140",
    "end": "419790"
  },
  {
    "text": "surfaces approach using a heterogeneous components you can build using go language you can build using pipe then",
    "start": "419790",
    "end": "426540"
  },
  {
    "text": "you can build using not GS anything that's not it communicates well and then",
    "start": "426540",
    "end": "432600"
  },
  {
    "text": "you build it you run it it's the ownership of your team so one team can",
    "start": "432600",
    "end": "438900"
  },
  {
    "text": "have one micro surface and then it only do one thing very very well it doesn't",
    "start": "438900",
    "end": "446490"
  },
  {
    "text": "mix with another domain ok so that's the key characteristics of micro services",
    "start": "446490",
    "end": "453140"
  },
  {
    "text": "and to give you an example I would like to bring up the case of Amazon s3 anyone",
    "start": "453140",
    "end": "460560"
  },
  {
    "text": "here use Amazon s3 oh nice a lot of you use Amazon s3 so Amazon s3 they started",
    "start": "460560",
    "end": "469140"
  },
  {
    "text": "with 8 micro services and up up till now we have 235 plus micro services to surf",
    "start": "469140",
    "end": "479310"
  },
  {
    "text": "units it can host your static website or it can be a daedalic or when you upload",
    "start": "479310",
    "end": "487620"
  },
  {
    "text": "your machine learning artifacts on Amazon s3 everything is being well",
    "start": "487620",
    "end": "493620"
  },
  {
    "text": "coordinated and handled by all of these micro services however there's a chance",
    "start": "493620",
    "end": "501600"
  },
  {
    "text": "on micro services same with monolith there's a chance on mono mono monolith and there's also few challenges on micro",
    "start": "501600",
    "end": "510180"
  },
  {
    "text": "services so I'd like to start with the Conway's law so the Conway's law says",
    "start": "510180",
    "end": "516719"
  },
  {
    "text": "that the system design it's largely influenced by the organizational",
    "start": "516720",
    "end": "522000"
  },
  {
    "text": "structure of the teams that built the system ok so",
    "start": "522000",
    "end": "529800"
  },
  {
    "text": "what does that mean that means that the the way you structure your organization",
    "start": "529800",
    "end": "535739"
  },
  {
    "text": "your team it will reflect on how they built the system if you structure them",
    "start": "535739",
    "end": "543119"
  },
  {
    "text": "and then they have the problem with communications it will reflect the same on your system okay so and then we have",
    "start": "543119",
    "end": "554189"
  },
  {
    "text": "from the organ social structure we have other few key challenges the first one is the migration it's hard to move to",
    "start": "554189",
    "end": "562920"
  },
  {
    "text": "migrate from monolith to micro-services it's hard to break down all those",
    "start": "562920",
    "end": "568410"
  },
  {
    "text": "surfaces into micro surfaces and there's a lot there will be a lot of 4",
    "start": "568410",
    "end": "574470"
  },
  {
    "text": "Schillings and also it's tough to build a distributed system because micro",
    "start": "574470",
    "end": "581610"
  },
  {
    "text": "services are effectively a disability system you cannot assume that the",
    "start": "581610",
    "end": "586769"
  },
  {
    "text": "network is reliable don't assume that you cannot assume that the latency will",
    "start": "586769",
    "end": "591929"
  },
  {
    "text": "be zero you cannot assume that so one thing that I've learned when building the distributed system is if you're",
    "start": "591929",
    "end": "598920"
  },
  {
    "text": "building the distributed system please expect distributed problems ok so and",
    "start": "598920",
    "end": "606029"
  },
  {
    "text": "then so we've been helping our customers on how to build micro surfaces there are",
    "start": "606029",
    "end": "612059"
  },
  {
    "text": "tons of questions from our customers what is the best way to build micro surfaces and this is a few questions",
    "start": "612059",
    "end": "619049"
  },
  {
    "text": "that we cut from them like how to deal with a synchronous communications oh yes",
    "start": "619049",
    "end": "624329"
  },
  {
    "text": "we know synchronous communication but can we use a string CONUS communication for building micro surfaces and then how",
    "start": "624329",
    "end": "632399"
  },
  {
    "text": "to become and how to operate hundreds or thousands of micro surfaces components",
    "start": "632399",
    "end": "638449"
  },
  {
    "text": "because when it comes to micro services you will be dealing with a lot of",
    "start": "638449",
    "end": "643860"
  },
  {
    "text": "components not only companies but also for joining and how to manage that and",
    "start": "643860",
    "end": "650959"
  },
  {
    "text": "because we are building a distributed system and how to track and debug all those interactions across the whole",
    "start": "650959",
    "end": "657239"
  },
  {
    "text": "system and how to ensure the proper",
    "start": "657239",
    "end": "662490"
  },
  {
    "text": "level of decoupling between one micro services to another micro surface suitum to summarize",
    "start": "662490",
    "end": "669330"
  },
  {
    "text": "everything there are two kind of complexities when dealing with micro services the first one is the",
    "start": "669330",
    "end": "676470"
  },
  {
    "text": "architectural complexity and the other one is the operational complexity okay",
    "start": "676470",
    "end": "683130"
  },
  {
    "text": "so in this session I'd like to share with you four best practices as a",
    "start": "683130",
    "end": "690930"
  },
  {
    "text": "journey to reach the hyper scale called upper scale micro surfaces by the by the",
    "start": "690930",
    "end": "696900"
  },
  {
    "text": "help from AWS services the first best practice is to think a container first",
    "start": "696900",
    "end": "704400"
  },
  {
    "text": "approach and orchestration to that's really important and the second best",
    "start": "704400",
    "end": "710940"
  },
  {
    "text": "practice is how to automate the software release process CI CD and the third best",
    "start": "710940",
    "end": "718320"
  },
  {
    "text": "practices on how you can utilize a synchronous communication and lightweight messaging and the last one",
    "start": "718320",
    "end": "726270"
  },
  {
    "text": "is you need to know your resources better with surface discovery okay so",
    "start": "726270",
    "end": "734910"
  },
  {
    "text": "let's start the first one is the continuous and orchestration - okay so",
    "start": "734910",
    "end": "741230"
  },
  {
    "text": "how many of you are playing with docker okay so docker by far is the best way to",
    "start": "741230",
    "end": "751800"
  },
  {
    "text": "build micro surfaces why because with docker you can put your code you can put",
    "start": "751800",
    "end": "759870"
  },
  {
    "text": "your dependencies you can put your configuration you can put your libraries into a one single image an immutable",
    "start": "759870",
    "end": "769410"
  },
  {
    "text": "image and then you can distribute this image across a lot of environments you",
    "start": "769410",
    "end": "776340"
  },
  {
    "text": "can have staging one staging - and you can have a UAT even the production so whatever it runs",
    "start": "776340",
    "end": "783360"
  },
  {
    "text": "on your laptop or staging it will run as well in the production so there's no",
    "start": "783360",
    "end": "790250"
  },
  {
    "text": "like like annoying box as in like it was",
    "start": "790250",
    "end": "796470"
  },
  {
    "text": "on my laptop it's no more but then again the",
    "start": "796470",
    "end": "802970"
  },
  {
    "text": "discussion that we have currently running on the Internet it's not the how to package your",
    "start": "802970",
    "end": "810050"
  },
  {
    "text": "applications into container image we are talking now on how to orchestrate their",
    "start": "810050",
    "end": "817610"
  },
  {
    "text": "yes containerize your application is easy on your laptop is easy you can use",
    "start": "817610",
    "end": "824309"
  },
  {
    "text": "docker you can define your docker file and then create an image and push it you",
    "start": "824309",
    "end": "830550"
  },
  {
    "text": "can even pull it if you want that's easy but the problem is how it can ship it",
    "start": "830550",
    "end": "835800"
  },
  {
    "text": "from your laptop and then to use to the integration environment staging UAT into",
    "start": "835800",
    "end": "842879"
  },
  {
    "text": "production and no we're not we're not talking about only only few service or",
    "start": "842879",
    "end": "849620"
  },
  {
    "text": "VM instance we're talking a lot of them how about that how she like ship your",
    "start": "849620",
    "end": "857399"
  },
  {
    "text": "applications into these environments and we are not talking about only doing in",
    "start": "857399",
    "end": "863250"
  },
  {
    "text": "one easy how about the multiple easy and how about shipping into a multi region",
    "start": "863250",
    "end": "871430"
  },
  {
    "text": "this is kind of discussion that we have right now and this is why did we have",
    "start": "871430",
    "end": "880129"
  },
  {
    "text": "container surface from AWS it's really amazing so this is all the layers on",
    "start": "880129",
    "end": "886199"
  },
  {
    "text": "container surface landscape we have three layers management hosting and image registry so if you want you manage",
    "start": "886199",
    "end": "897379"
  },
  {
    "text": "your having want to have managed service for your containers you can use Amazon Elastic container service all if you're",
    "start": "897379",
    "end": "904889"
  },
  {
    "text": "playing with kubernetes you can use Amazon eks so if you playing",
    "start": "904889",
    "end": "910589"
  },
  {
    "text": "with docker you can use Amazon ECS if you paying with kubernetes you use ETS",
    "start": "910589",
    "end": "917089"
  },
  {
    "text": "okay so and then hosting is going to be really fun you have two options that you",
    "start": "917089",
    "end": "925199"
  },
  {
    "text": "can host your containerize application on Amazon ec2 or you can build your",
    "start": "925199",
    "end": "931200"
  },
  {
    "text": "syphilis containers using forked if I get this really amazing surface you only",
    "start": "931200",
    "end": "937770"
  },
  {
    "text": "need to have your image of your docker you find a configuration for the network",
    "start": "937770",
    "end": "943020"
  },
  {
    "text": "volume CPU or memory and then you give it to Amazon ECS and it will run on",
    "start": "943020",
    "end": "950700"
  },
  {
    "text": "several smooth you don't need to manually scale it it is surfer less",
    "start": "950700",
    "end": "956100"
  },
  {
    "text": "containers and because of these benefits",
    "start": "956100",
    "end": "961650"
  },
  {
    "text": "they are getting from from the ADA best container services our customers love it",
    "start": "961650",
    "end": "969320"
  },
  {
    "text": "from a troll to Aerobie to BuzzFeed and McDonald's they've been using Amazon ECS",
    "start": "969320",
    "end": "976770"
  },
  {
    "text": "to run their system ok so the nice the",
    "start": "976770",
    "end": "981930"
  },
  {
    "text": "next max practice is how to automate your software release process so how",
    "start": "981930",
    "end": "987420"
  },
  {
    "text": "many of you have designed your CI CD oh sorry few of you really ok ok so you",
    "start": "987420",
    "end": "995970"
  },
  {
    "text": "need to start building your CI CD pipelines when dealing with micro services ok so this is the same diagram",
    "start": "995970",
    "end": "1004580"
  },
  {
    "text": "that we have on the earlier slides CI CD it can be like continuous integration",
    "start": "1004580",
    "end": "1010850"
  },
  {
    "text": "continuous delivery or continuous deployment but on the bottom of the",
    "start": "1010850",
    "end": "1016280"
  },
  {
    "text": "slide I pureed deaf ops continuous Asterix a wild card it can be anything",
    "start": "1016280",
    "end": "1021710"
  },
  {
    "text": "now it's not only integration delivery or deployment it can be continuous monitoring it can be continuous",
    "start": "1021710",
    "end": "1030819"
  },
  {
    "text": "compliant assessment it can be like continuous risk management it can be",
    "start": "1030820",
    "end": "1038060"
  },
  {
    "text": "anything right now so if you run your CI CD don't only run it but own it and this is to be modern",
    "start": "1038060",
    "end": "1046819"
  },
  {
    "text": "release process encode pipeline we have this surface called a double Scott type line which you can model your software",
    "start": "1046820",
    "end": "1053240"
  },
  {
    "text": "release process using a really nice workflow you can use your own github or",
    "start": "1053240",
    "end": "1058940"
  },
  {
    "text": "you can use a code commit on you can build using code bill and you",
    "start": "1058940",
    "end": "1065000"
  },
  {
    "text": "and still using your testing stack and then you can deploy to your production or you can deploy to infer to testing",
    "start": "1065000",
    "end": "1073370"
  },
  {
    "text": "environment and then you can get the approval path first before you deploy to",
    "start": "1073370",
    "end": "1078650"
  },
  {
    "text": "production it's really convenient way to build your CI CD but this already been",
    "start": "1078650",
    "end": "1086720"
  },
  {
    "text": "done what we need right now is to how to harness our CI CD so let's say that you",
    "start": "1086720",
    "end": "1093800"
  },
  {
    "text": "are in your team you have a new developers this new developers need to",
    "start": "1093800",
    "end": "1099080"
  },
  {
    "text": "get an access to entry packet right and then you grant that we grant him to",
    "start": "1099080",
    "end": "1106280"
  },
  {
    "text": "create the s3 bucket but we thought your knowledge he set up the Astra bucket on",
    "start": "1106280",
    "end": "1113810"
  },
  {
    "text": "pipe on public mode storing all the information your company have the",
    "start": "1113810",
    "end": "1120730"
  },
  {
    "text": "question is how can you prevent them so with code pipeline you can build you can",
    "start": "1120730",
    "end": "1127820"
  },
  {
    "text": "model your software release process and you can integrate with various edible surfaces in this example is a SS config",
    "start": "1127820",
    "end": "1135890"
  },
  {
    "text": "and a SS lambda so let's say that there's a new get comet there's new",
    "start": "1135890",
    "end": "1142910"
  },
  {
    "text": "update on the on your code you build it with caught fire with code built it pass",
    "start": "1142910",
    "end": "1148910"
  },
  {
    "text": "everything's 100% pass and then when it comes to deployment it needs to check to",
    "start": "1148910",
    "end": "1154820"
  },
  {
    "text": "the SNS topic which will trigger a SS lambda and call the area based conflict",
    "start": "1154820",
    "end": "1160670"
  },
  {
    "text": "to check whether these new updates is compliant or not you can define your own",
    "start": "1160670",
    "end": "1167780"
  },
  {
    "text": "rules you can give a rules that Amazon s3 should not be public and once that is",
    "start": "1167780",
    "end": "1175760"
  },
  {
    "text": "satisfied all the rules it will return back to the lambda function you can",
    "start": "1175760",
    "end": "1181550"
  },
  {
    "text": "inform slack to notify the changes and it goes back to the code pipeline and",
    "start": "1181550",
    "end": "1187090"
  },
  {
    "text": "then if everything is okay it will deploy it to production so this is what",
    "start": "1187090",
    "end": "1193460"
  },
  {
    "text": "I mean if you are if you build a CI CD don't only run it you",
    "start": "1193460",
    "end": "1198559"
  },
  {
    "text": "you own it because this is really a crucial time to make your system more",
    "start": "1198559",
    "end": "1205159"
  },
  {
    "text": "secure okay so another thing is to you how to build a synchronous communication",
    "start": "1205159",
    "end": "1210679"
  },
  {
    "text": "and lightweight messaging okay so I like",
    "start": "1210679",
    "end": "1216110"
  },
  {
    "text": "to get an X case from NASA so nASA has built a surface called",
    "start": "1216110",
    "end": "1222019"
  },
  {
    "text": "image and video library you can go to images that nasa.gov they are collecting",
    "start": "1222019",
    "end": "1229789"
  },
  {
    "text": "all those images and videos from half a century ago to ask the knowledge of the",
    "start": "1229789",
    "end": "1236840"
  },
  {
    "text": "how they explore this vast universe so they collecting all images and videos",
    "start": "1236840",
    "end": "1242570"
  },
  {
    "text": "and they use Amazon SNS and Amazon sqs to operate this surface so whenever new",
    "start": "1242570",
    "end": "1251450"
  },
  {
    "text": "content is uploaded it will go to Amazon SNS it will trigger the Amazon sqs to",
    "start": "1251450",
    "end": "1259490"
  },
  {
    "text": "decouple the surface and ask the surface to to process the image or video or",
    "start": "1259490",
    "end": "1264889"
  },
  {
    "text": "videos and this is a good example of a",
    "start": "1264889",
    "end": "1270590"
  },
  {
    "text": "synchronous communication we I mean most of the times we were building with",
    "start": "1270590",
    "end": "1276350"
  },
  {
    "text": "synchronous communication but a synchronous communication you can get more benefit as well so let's for",
    "start": "1276350",
    "end": "1283039"
  },
  {
    "text": "example we have a publisher but this publisher publish a topic to SNS and",
    "start": "1283039",
    "end": "1289249"
  },
  {
    "text": "from one SMS with with attribute filtering you can dispatch to three cues",
    "start": "1289249",
    "end": "1296049"
  },
  {
    "text": "matching it you handle your own routing using one single SNS and then this sqs",
    "start": "1296049",
    "end": "1304070"
  },
  {
    "text": "will put into the queue and we have micro services to process it you can use",
    "start": "1304070",
    "end": "1313129"
  },
  {
    "text": "Amazon ECS you can use a SS forget you can use either breast lambda or Amazon ETS okay so",
    "start": "1313129",
    "end": "1323980"
  },
  {
    "text": "talking about micro surface is talking about distributed system the complexity",
    "start": "1326080",
    "end": "1331100"
  },
  {
    "text": "is on the interactions how they can communicate and how can you make an",
    "start": "1331100",
    "end": "1338929"
  },
  {
    "text": "order of this micro services to talk one to another how can you ask them to",
    "start": "1338929",
    "end": "1344900"
  },
  {
    "text": "interact one to another so the third best practice is to define workflow to",
    "start": "1344900",
    "end": "1351169"
  },
  {
    "text": "reduce complexity on interactions I would like to introduce you to a double",
    "start": "1351169",
    "end": "1356450"
  },
  {
    "text": "step functions in a blister functions is one of my favorite surface because you",
    "start": "1356450",
    "end": "1362870"
  },
  {
    "text": "can build distributed applications using visual workflows for example you have",
    "start": "1362870",
    "end": "1368750"
  },
  {
    "text": "all these five macro surfaces or their inventory invoice logistic and notification you can think of it as a",
    "start": "1368750",
    "end": "1377090"
  },
  {
    "text": "Lego and then you can build a surface workflow by combining all of those micro",
    "start": "1377090",
    "end": "1382820"
  },
  {
    "text": "surfaces so when you start these step functions it's going to it's going to",
    "start": "1382820",
    "end": "1389990"
  },
  {
    "text": "call the other surface goes to inventory surface invoice logistic and then going to notify the customers and then the",
    "start": "1389990",
    "end": "1396890"
  },
  {
    "text": "workflow ends it's amazing surface which",
    "start": "1396890",
    "end": "1402230"
  },
  {
    "text": "you can organize you can order your micro surfaces to interact one to another a great use case from step",
    "start": "1402230",
    "end": "1413000"
  },
  {
    "text": "functions is coming from yep so yeah as a surface which ever seat is you're in",
    "start": "1413000",
    "end": "1418220"
  },
  {
    "text": "and you want to know or the best recommendation on that particular location you can ask yep so yep you yep",
    "start": "1418220",
    "end": "1425870"
  },
  {
    "text": "you seeing step functions to decompose their monolith into micro surfaces okay",
    "start": "1425870",
    "end": "1433490"
  },
  {
    "text": "so we've talked about the asynchronous communication and surface workflow and this is how it looks if you combine all",
    "start": "1433490",
    "end": "1439850"
  },
  {
    "text": "those two together first we have a publisher publish to SNS topic with the",
    "start": "1439850",
    "end": "1446210"
  },
  {
    "text": "attribute filtering you can be spatch to 3's qsq and then it can call the a SS",
    "start": "1446210",
    "end": "1451730"
  },
  {
    "text": "lambda to ask the step function to start and on the right side we have",
    "start": "1451730",
    "end": "1458809"
  },
  {
    "text": "various surface workflows compose for a compost by a lot of microservices",
    "start": "1458809",
    "end": "1466600"
  },
  {
    "text": "okay and then the next one is how do we",
    "start": "1466600",
    "end": "1472549"
  },
  {
    "text": "communicate with clients the only way do they we understand on communicating with",
    "start": "1472549",
    "end": "1478909"
  },
  {
    "text": "clients is through the synchronous communications for example an HTTP API",
    "start": "1478909",
    "end": "1484879"
  },
  {
    "text": "get the request and return the response that's synchronous but dealing with a",
    "start": "1484879",
    "end": "1490309"
  },
  {
    "text": "synchronous how we can communicate with with them okay so I'd like to introduce you to Amazon API gateway which has new",
    "start": "1490309",
    "end": "1498499"
  },
  {
    "text": "feature called WebSocket support it's really amazing why because now we can",
    "start": "1498499",
    "end": "1506240"
  },
  {
    "text": "have a fully managed WebSockets that's easily to configure with Amazon API",
    "start": "1506240",
    "end": "1511460"
  },
  {
    "text": "gateway and has a lot of integrations with other services",
    "start": "1511460",
    "end": "1517059"
  },
  {
    "text": "ok so I'm going to do a demo but this",
    "start": "1517059",
    "end": "1525259"
  },
  {
    "text": "demo will try to share with you on how",
    "start": "1525259",
    "end": "1531409"
  },
  {
    "text": "we can build micro services using AWS services and I like to get your help",
    "start": "1531409",
    "end": "1537429"
  },
  {
    "text": "by interacting on this demo ok",
    "start": "1537429",
    "end": "1542860"
  },
  {
    "text": "okay can we switch to the terminal okay so before we start because it's a",
    "start": "1551250",
    "end": "1558159"
  },
  {
    "text": "live demo I need to get blessings from demo god hopefully demo God's upon me so I can do",
    "start": "1558159",
    "end": "1565419"
  },
  {
    "text": "this live demo okay so how about if we ask the demo card directly okay so I'm",
    "start": "1565419",
    "end": "1576039"
  },
  {
    "text": "going to ask him using the WebSocket okay so I'm going to miss it seem like",
    "start": "1576039",
    "end": "1583990"
  },
  {
    "text": "this request I'm doing live demo",
    "start": "1583990",
    "end": "1593799"
  },
  {
    "text": "let me emphasize the live one can you see it okay at a table summit Singapore",
    "start": "1593799",
    "end": "1603929"
  },
  {
    "text": "can you help to make sure everything is",
    "start": "1603929",
    "end": "1609809"
  },
  {
    "text": "okay and then we sent it let's see you",
    "start": "1609809",
    "end": "1615010"
  },
  {
    "text": "what's his response oh okay that's nice okay message Thanks",
    "start": "1615010",
    "end": "1627600"
  },
  {
    "text": "thank you appreciate it Oh Oh better be hurry I'm going out for",
    "start": "1631370",
    "end": "1642860"
  },
  {
    "text": "lunch anytime soon okay so let's do the demo okay so before I'm so this on URL",
    "start": "1642860",
    "end": "1652270"
  },
  {
    "text": "you can go to this your alphas and I'm going to walk you how I built this demo",
    "start": "1652270",
    "end": "1659270"
  },
  {
    "text": "okay so this demo you use a WebSocket using Amazon API gateway okay so this is",
    "start": "1659270",
    "end": "1666380"
  },
  {
    "text": "the URL it's bit-bit that lee / 14 test demo okay so I'm using a WebSocket to",
    "start": "1666380",
    "end": "1677870"
  },
  {
    "text": "communicate with clients I use Amazon API gateway here which will dispatch",
    "start": "1677870",
    "end": "1684260"
  },
  {
    "text": "into for type of requests upon connection disconnect send message and",
    "start": "1684260",
    "end": "1691100"
  },
  {
    "text": "default so when it connect or disconnect it going to store or remove the",
    "start": "1691100",
    "end": "1697040"
  },
  {
    "text": "connection on DynamoDB for everything else for every request it goes to Amazon",
    "start": "1697040",
    "end": "1703040"
  },
  {
    "text": "SNS and this Amazon SNS with one topic",
    "start": "1703040",
    "end": "1708320"
  },
  {
    "text": "only I can dispatch into for queues so I focused the first one is the queue",
    "start": "1708320",
    "end": "1714200"
  },
  {
    "text": "message which will try to send all the communication from the micro services to",
    "start": "1714200",
    "end": "1720230"
  },
  {
    "text": "the clients it's all goes through the queue message and then the queue foot when you for it it's going to this queue",
    "start": "1720230",
    "end": "1727790"
  },
  {
    "text": "and then we have the queue result to give you the results of the total",
    "start": "1727790",
    "end": "1733340"
  },
  {
    "text": "footings and then the last one is ping to give the heartbeat to inform the",
    "start": "1733340",
    "end": "1740510"
  },
  {
    "text": "WebSocket please don't close the connection okay so every two",
    "start": "1740510",
    "end": "1746150"
  },
  {
    "text": "microservices I have four here there are workers they are not HTTP base there are totally",
    "start": "1746150",
    "end": "1753680"
  },
  {
    "text": "standalone applications using a double bass market so everything is on a SS",
    "start": "1753680",
    "end": "1759560"
  },
  {
    "text": "market okay so and then for the fourth is going to",
    "start": "1759560",
    "end": "1766220"
  },
  {
    "text": "start the DynamoDB and ADA breast lambda will go to Amazon SNS to not divide the",
    "start": "1766220",
    "end": "1773540"
  },
  {
    "text": "queue message here the worker message to",
    "start": "1773540",
    "end": "1779900"
  },
  {
    "text": "send back the results to the clients and the client means your phone or your",
    "start": "1779900",
    "end": "1786890"
  },
  {
    "text": "laptops okay okay so when you see the",
    "start": "1786890",
    "end": "1796460"
  },
  {
    "text": "results whatever happens I can can I get a round of applause",
    "start": "1796460",
    "end": "1802240"
  },
  {
    "text": "whatever okay we can't we can practice it okay awesome awesome okay so let's do the demo now",
    "start": "1802240",
    "end": "1809800"
  },
  {
    "text": "you can go to the bit dot ly / 14 / demo give me a thumbs up if you are already",
    "start": "1809800",
    "end": "1817010"
  },
  {
    "text": "on the page okay awesome and this is how we going to look like",
    "start": "1817010",
    "end": "1824170"
  },
  {
    "text": "okay I know it's going for lunch I'm going to teach you a bit so here you",
    "start": "1824170",
    "end": "1831560"
  },
  {
    "text": "need to vote which one you are with your preference its nasi lemak or nasi padang",
    "start": "1831560",
    "end": "1838750"
  },
  {
    "text": "okay so let's for it okay so I'm going",
    "start": "1838750",
    "end": "1845990"
  },
  {
    "text": "to give you the console and I'm going to fold it okay",
    "start": "1845990",
    "end": "1855460"
  },
  {
    "text": "yep so here we are so when it goes to the",
    "start": "1857380",
    "end": "1868830"
  },
  {
    "text": "WebSocket is going to request to the Amazon API gateway and the Amazon API",
    "start": "1868830",
    "end": "1876070"
  },
  {
    "text": "get we will return back to the Amazon to a Douglas lambda to give the to trigger",
    "start": "1876070",
    "end": "1884800"
  },
  {
    "text": "the lambda on Amazon SNS so so you can",
    "start": "1884800",
    "end": "1889900"
  },
  {
    "text": "see here that we have ping yeah so we",
    "start": "1889900",
    "end": "1895780"
  },
  {
    "text": "have ping and then we can get the tax is pong right here and then if you go if I",
    "start": "1895780",
    "end": "1903430"
  },
  {
    "text": "go to my console C DynamoDB I'm sorry",
    "start": "1903430",
    "end": "1913860"
  },
  {
    "text": "absolute Amazon it",
    "start": "1916620",
    "end": "1921480"
  },
  {
    "text": "see everything is done by a double is forked it's a server less containers",
    "start": "1930240",
    "end": "1937700"
  },
  {
    "text": "okay and the server less containers",
    "start": "1937700",
    "end": "1944370"
  },
  {
    "text": "we're going to get the Amazon s qsq and then going to process it and store into",
    "start": "1944370",
    "end": "1950100"
  },
  {
    "text": "the DynamoDB okay Oh minutes okay so um",
    "start": "1950100",
    "end": "1962090"
  },
  {
    "text": "let's finish the slides first I have four minutes left let's go back to the",
    "start": "1962090",
    "end": "1968850"
  },
  {
    "text": "slide okay so next one is dear dealing with micro services means that you have",
    "start": "1968850",
    "end": "1975870"
  },
  {
    "text": "hundreds of components of some of our services and you need to understand your",
    "start": "1975870",
    "end": "1982170"
  },
  {
    "text": "surface better so the complexity of the modern architectures is a wide variety",
    "start": "1982170",
    "end": "1987870"
  },
  {
    "text": "of the resources and the complexity grows exponentially the question is how",
    "start": "1987870",
    "end": "1994200"
  },
  {
    "text": "you can handle it right the answer is you need to implement",
    "start": "1994200",
    "end": "2000140"
  },
  {
    "text": "surface discovery so you can give the",
    "start": "2000140",
    "end": "2005240"
  },
  {
    "text": "information to your micro services to find the location of a surface provider",
    "start": "2005240",
    "end": "2010630"
  },
  {
    "text": "for example is my app or my locks with a specific eyepiece so for example like",
    "start": "2010630",
    "end": "2018260"
  },
  {
    "text": "this on this diagram we have web server running on Amazon eks and we have a",
    "start": "2018260",
    "end": "2024410"
  },
  {
    "text": "back-end component running on Amazon ECS with lambda and auto scaling group and",
    "start": "2024410",
    "end": "2030580"
  },
  {
    "text": "we have share clocks on Amazon s3 and RDS but can we make it better this is",
    "start": "2030580",
    "end": "2039710"
  },
  {
    "text": "the surface which you can understand your resources better you can use AWS cloud map so instead of seeing this you",
    "start": "2039710",
    "end": "2048679"
  },
  {
    "text": "will see this you can place a namespace",
    "start": "2048680",
    "end": "2055040"
  },
  {
    "text": "for your infrastructure now for example for the eks for the website you can put",
    "start": "2055040",
    "end": "2060500"
  },
  {
    "text": "front-end app calm and can back an app calm so instead of",
    "start": "2060500",
    "end": "2066389"
  },
  {
    "text": "calling the eyepiece and port you can kill call them my name spaces okay okay",
    "start": "2066390",
    "end": "2075360"
  },
  {
    "text": "so let's switch back to the demo okay",
    "start": "2075360",
    "end": "2083360"
  },
  {
    "text": "here you go so we have a three hundred and ninety seven votes for nasi lemak okay",
    "start": "2083360",
    "end": "2094669"
  },
  {
    "text": "Congress nasi lemak you one okay so this is a same a simple demo even this simple",
    "start": "2094669",
    "end": "2102450"
  },
  {
    "text": "demo with micro services you need to build like a for workers like what I've",
    "start": "2102450",
    "end": "2107490"
  },
  {
    "text": "done ok so let's switch back to the slides",
    "start": "2107490",
    "end": "2114109"
  },
  {
    "text": "okay and if you are doing the micro services",
    "start": "2115160",
    "end": "2121730"
  },
  {
    "text": "continuous as well and you're looking for a fully managed surface mess you can",
    "start": "2121730",
    "end": "2129060"
  },
  {
    "text": "use a SS app mesh so it alias app mesh you can control all the configurations",
    "start": "2129060",
    "end": "2136230"
  },
  {
    "text": "on application level for all of your surfaces so you can easily monitor and",
    "start": "2136230",
    "end": "2142530"
  },
  {
    "text": "control micro services app mesh with Atmos and it's already available in Singapore you can integrate app mass",
    "start": "2142530",
    "end": "2150600"
  },
  {
    "text": "with Amazon ECS forget and eks okay so",
    "start": "2150600",
    "end": "2156000"
  },
  {
    "text": "for the summary micro service is a",
    "start": "2156000",
    "end": "2161240"
  },
  {
    "text": "distributed approach design to overcome the limitations of monolithic this is",
    "start": "2161240",
    "end": "2168690"
  },
  {
    "text": "one message that I want to share with you if you don't think that you able to",
    "start": "2168690",
    "end": "2174120"
  },
  {
    "text": "move to micro services don't push yourself because when it comes to",
    "start": "2174120",
    "end": "2179970"
  },
  {
    "text": "distributed system please expect distributed problems and understanding",
    "start": "2179970",
    "end": "2186390"
  },
  {
    "text": "this all of these components you can go to you can try to find which a SS",
    "start": "2186390",
    "end": "2192510"
  },
  {
    "text": "surfaces that can help you and one more thing that I know that some",
    "start": "2192510",
    "end": "2198770"
  },
  {
    "text": "of you I love to manage your own cube annuities but that's cool that's awesome",
    "start": "2198770",
    "end": "2204970"
  },
  {
    "text": "but there's one thing that you need to remember that the more granular control of your system also means that there are",
    "start": "2204970",
    "end": "2212599"
  },
  {
    "text": "more moving parts which will increase the complexity use many surface to help",
    "start": "2212599",
    "end": "2219410"
  },
  {
    "text": "you use Amazon ETS if you playing with kubernetes use a double bass forget if you want to",
    "start": "2219410",
    "end": "2226010"
  },
  {
    "text": "run your containers on several smooth it will make your life easier and don't let",
    "start": "2226010",
    "end": "2232700"
  },
  {
    "text": "the software pop lines holds your bags prevent non-compliant application so",
    "start": "2232700",
    "end": "2239359"
  },
  {
    "text": "enhance your software is process by extending your CI CD and optimize your",
    "start": "2239359",
    "end": "2245150"
  },
  {
    "text": "micro services by combining a synchronous and synchronous communication with lightweight messaging",
    "start": "2245150",
    "end": "2251270"
  },
  {
    "text": "and the last one is manage your cloud resources better with a direct route map",
    "start": "2251270",
    "end": "2256790"
  },
  {
    "text": "and a SS app mesh so the next breakouts here is the we have RT will prevent",
    "start": "2256790",
    "end": "2265250"
  },
  {
    "text": "service lifecycle and we have if you are into building mobile apps we have Brian",
    "start": "2265250",
    "end": "2271970"
  },
  {
    "text": "and policies and DEF ops are in the windows application ok so last thing",
    "start": "2271970",
    "end": "2280280"
  },
  {
    "text": "that I want to share with you please compare two sessions of a your feedbacks really valuable for us to understand",
    "start": "2280280",
    "end": "2287660"
  },
  {
    "text": "what your needs for next year and I would like to say thank you for every one of you to build a products to build",
    "start": "2287660",
    "end": "2295580"
  },
  {
    "text": "your apps because it helps to improve our ecosystem to be to get a better word",
    "start": "2295580",
    "end": "2301580"
  },
  {
    "text": "thank you everyone go bill",
    "start": "2301580",
    "end": "2305530"
  }
]