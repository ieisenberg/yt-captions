[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "[Music]",
    "start": "760",
    "end": "4560"
  },
  {
    "text": "[Applause]",
    "start": "4560",
    "end": "5430"
  },
  {
    "text": "[Music]",
    "start": "5430",
    "end": "7740"
  },
  {
    "text": "in this video you'll see how to",
    "start": "7740",
    "end": "10630"
  },
  {
    "text": "automatically remediate security",
    "start": "10630",
    "end": "12760"
  },
  {
    "text": "non-compliance using AWS config rules",
    "start": "12760",
    "end": "16139"
  },
  {
    "text": "AWS cloud watch events and AWS lambda",
    "start": "16140",
    "end": "20050"
  },
  {
    "text": "functions with these services and",
    "start": "20050",
    "end": "22690"
  },
  {
    "text": "functions you can evaluate configuration",
    "start": "22690",
    "end": "25179"
  },
  {
    "text": "settings detect non-compliance and",
    "start": "25179",
    "end": "27580"
  },
  {
    "text": "remediate issues automatically for the",
    "start": "27580",
    "end": "31689"
  },
  {
    "start": "31000",
    "end": "109000"
  },
  {
    "text": "purposes of this example we'll monitor",
    "start": "31689",
    "end": "33970"
  },
  {
    "text": "and remediate issues with an Amazon",
    "start": "33970",
    "end": "36550"
  },
  {
    "text": "simple storage service or s3 bucket",
    "start": "36550",
    "end": "39899"
  },
  {
    "text": "let's take a look at our s3 buckets",
    "start": "39899",
    "end": "43640"
  },
  {
    "text": "notice that we have buckets that allow",
    "start": "43640",
    "end": "45800"
  },
  {
    "text": "public access which could be a potential",
    "start": "45800",
    "end": "48380"
  },
  {
    "text": "security issue",
    "start": "48380",
    "end": "50270"
  },
  {
    "text": "we can inventory and evaluate",
    "start": "50270",
    "end": "52160"
  },
  {
    "text": "configuration changes to these resources",
    "start": "52160",
    "end": "54260"
  },
  {
    "text": "by enabling AWS config first specify the",
    "start": "54260",
    "end": "59750"
  },
  {
    "text": "resource types you want AWS config to",
    "start": "59750",
    "end": "62660"
  },
  {
    "text": "record let's keep the defaults and opt",
    "start": "62660",
    "end": "66110"
  },
  {
    "text": "to include global resources",
    "start": "66110",
    "end": "69790"
  },
  {
    "text": "let's stream the configuration changes",
    "start": "72570",
    "end": "74910"
  },
  {
    "text": "in",
    "start": "74910",
    "end": "75340"
  },
  {
    "text": "vacations to an Amazon simple",
    "start": "75340",
    "end": "77350"
  },
  {
    "text": "notification service topic let's accept",
    "start": "77350",
    "end": "80649"
  },
  {
    "text": "the other default settings including the",
    "start": "80649",
    "end": "83259"
  },
  {
    "text": "choice to create an AWS config service",
    "start": "83259",
    "end": "85960"
  },
  {
    "text": "link troll",
    "start": "85960",
    "end": "88500"
  },
  {
    "text": "once AWS config is enabled it can check",
    "start": "89750",
    "end": "93080"
  },
  {
    "text": "the configuration of your resources",
    "start": "93080",
    "end": "94730"
  },
  {
    "text": "against rules that you define we'll come",
    "start": "94730",
    "end": "98420"
  },
  {
    "text": "back to this after completing some",
    "start": "98420",
    "end": "99950"
  },
  {
    "text": "additional setup so for now let's skip",
    "start": "99950",
    "end": "102770"
  },
  {
    "text": "creating a rule now confirm the settings",
    "start": "102770",
    "end": "106340"
  },
  {
    "text": "to enable AWS config now that AWS config",
    "start": "106340",
    "end": "111200"
  },
  {
    "start": "109000",
    "end": "182000"
  },
  {
    "text": "has been set up let's switch to the",
    "start": "111200",
    "end": "113450"
  },
  {
    "text": "cloud trail management console to create",
    "start": "113450",
    "end": "115610"
  },
  {
    "text": "a trail that will record events for our",
    "start": "115610",
    "end": "117860"
  },
  {
    "text": "AWS account",
    "start": "117860",
    "end": "121180"
  },
  {
    "text": "we'll use this trail to send events to",
    "start": "121850",
    "end": "124310"
  },
  {
    "text": "cloud watch logs in a moment you'll see",
    "start": "124310",
    "end": "127280"
  },
  {
    "text": "how to detect and automatically take",
    "start": "127280",
    "end": "129320"
  },
  {
    "text": "action on a specific event",
    "start": "129320",
    "end": "132759"
  },
  {
    "text": "type in a name for the trail and then",
    "start": "133620",
    "end": "136019"
  },
  {
    "text": "specify the s3 bucket where you want to",
    "start": "136019",
    "end": "138390"
  },
  {
    "text": "store the event logs",
    "start": "138390",
    "end": "141349"
  },
  {
    "text": "now create the trail",
    "start": "142480",
    "end": "146220"
  },
  {
    "text": "next let's create a new SNS topic that",
    "start": "146849",
    "end": "150510"
  },
  {
    "text": "will help to keep us informed",
    "start": "150510",
    "end": "151980"
  },
  {
    "text": "whenever the compliance of one of our",
    "start": "151980",
    "end": "153629"
  },
  {
    "text": "tracked resource configurations changes",
    "start": "153629",
    "end": "157849"
  },
  {
    "text": "once the topic is created you need to",
    "start": "159000",
    "end": "161550"
  },
  {
    "text": "add a subscription",
    "start": "161550",
    "end": "164330"
  },
  {
    "text": "for this example we'll simply subscribe",
    "start": "165190",
    "end": "167680"
  },
  {
    "text": "an email address that notifications can",
    "start": "167680",
    "end": "170260"
  },
  {
    "text": "be sent to",
    "start": "170260",
    "end": "172860"
  },
  {
    "text": "now that the initial configuration is",
    "start": "174810",
    "end": "177000"
  },
  {
    "text": "complete let's return to AWS config and",
    "start": "177000",
    "end": "180209"
  },
  {
    "text": "create a config rule you can create",
    "start": "180209",
    "end": "183330"
  },
  {
    "start": "182000",
    "end": "227000"
  },
  {
    "text": "config rules to monitor configuration",
    "start": "183330",
    "end": "185270"
  },
  {
    "text": "changes in many different AWS resources",
    "start": "185270",
    "end": "188010"
  },
  {
    "text": "in this case we're going to create a",
    "start": "188010",
    "end": "191310"
  },
  {
    "text": "rule to monitor our s3 buckets let's",
    "start": "191310",
    "end": "194940"
  },
  {
    "text": "select this s3 bucket public right",
    "start": "194940",
    "end": "197580"
  },
  {
    "text": "prohibited rule which checks that s3",
    "start": "197580",
    "end": "200250"
  },
  {
    "text": "buckets do not allow public right access",
    "start": "200250",
    "end": "202560"
  },
  {
    "text": "as our initial remediation action let's",
    "start": "202560",
    "end": "206520"
  },
  {
    "text": "choose to send notifications to the SNS",
    "start": "206520",
    "end": "209040"
  },
  {
    "text": "topic we created",
    "start": "209040",
    "end": "211930"
  },
  {
    "text": "now type in a simple message for the",
    "start": "211930",
    "end": "214480"
  },
  {
    "text": "notification and provide the appropriate",
    "start": "214480",
    "end": "216579"
  },
  {
    "text": "topic a RN",
    "start": "216579",
    "end": "220140"
  },
  {
    "text": "this rule has been created and is now",
    "start": "220640",
    "end": "223370"
  },
  {
    "text": "evaluating compliance",
    "start": "223370",
    "end": "226780"
  },
  {
    "start": "227000",
    "end": "263000"
  },
  {
    "text": "now that the rule is finished evaluating",
    "start": "227459",
    "end": "229560"
  },
  {
    "text": "we can see that it is detected a",
    "start": "229560",
    "end": "231840"
  },
  {
    "text": "non-compliant resource this means that",
    "start": "231840",
    "end": "234870"
  },
  {
    "text": "one of our s3 buckets has public right",
    "start": "234870",
    "end": "237120"
  },
  {
    "text": "access we can click the rule to see",
    "start": "237120",
    "end": "240180"
  },
  {
    "text": "which resource is non-compliant let's",
    "start": "240180",
    "end": "243569"
  },
  {
    "text": "select the s3 bucket and investigate",
    "start": "243569",
    "end": "245790"
  },
  {
    "text": "further",
    "start": "245790",
    "end": "248060"
  },
  {
    "text": "selecting manage resource opens the",
    "start": "248120",
    "end": "251010"
  },
  {
    "text": "buckets page in the s3 management",
    "start": "251010",
    "end": "253079"
  },
  {
    "text": "console",
    "start": "253079",
    "end": "255500"
  },
  {
    "text": "let's look in the permissions tab to",
    "start": "256109",
    "end": "258449"
  },
  {
    "text": "review the policy that's allowing public",
    "start": "258449",
    "end": "260340"
  },
  {
    "text": "right access for this bucket",
    "start": "260340",
    "end": "262780"
  },
  {
    "text": "as you can see the bucket policy allows",
    "start": "262780",
    "end": "265389"
  },
  {
    "start": "263000",
    "end": "334000"
  },
  {
    "text": "public read and write access",
    "start": "265389",
    "end": "268000"
  },
  {
    "text": "next let's navigate to cloud watch and",
    "start": "268000",
    "end": "270790"
  },
  {
    "text": "create an event rule to help us",
    "start": "270790",
    "end": "272830"
  },
  {
    "text": "automatically remediate non-compliant",
    "start": "272830",
    "end": "275050"
  },
  {
    "text": "resources like this bucket when they are",
    "start": "275050",
    "end": "277480"
  },
  {
    "text": "detected let's edit the event pattern by",
    "start": "277480",
    "end": "281380"
  },
  {
    "text": "pasting in code that specifies what",
    "start": "281380",
    "end": "283690"
  },
  {
    "text": "we're responding to and how we want to",
    "start": "283690",
    "end": "285850"
  },
  {
    "text": "respond this code specifies that when",
    "start": "285850",
    "end": "289180"
  },
  {
    "text": "AWS config reports a resource as",
    "start": "289180",
    "end": "291760"
  },
  {
    "text": "non-compliant Cloud Watch will invoke",
    "start": "291760",
    "end": "294250"
  },
  {
    "text": "the target event this event will be",
    "start": "294250",
    "end": "297340"
  },
  {
    "text": "invoked only for the s3 bucket public",
    "start": "297340",
    "end": "299650"
  },
  {
    "text": "right prohibited event coming from AWS",
    "start": "299650",
    "end": "301780"
  },
  {
    "text": "config",
    "start": "301780",
    "end": "304620"
  },
  {
    "text": "now that we have defined our event",
    "start": "305490",
    "end": "307080"
  },
  {
    "text": "pattern we need to specify a target",
    "start": "307080",
    "end": "311180"
  },
  {
    "text": "we're going to use a lambda function to",
    "start": "312290",
    "end": "314540"
  },
  {
    "text": "remediate this issue",
    "start": "314540",
    "end": "317410"
  },
  {
    "text": "now we'll provide a name for this rule",
    "start": "320500",
    "end": "322990"
  },
  {
    "text": "and then create it",
    "start": "322990",
    "end": "325919"
  },
  {
    "text": "next let's navigate to the lamda",
    "start": "326410",
    "end": "329050"
  },
  {
    "text": "management console and quickly review",
    "start": "329050",
    "end": "331150"
  },
  {
    "text": "the lambda function will be invoking",
    "start": "331150",
    "end": "333970"
  },
  {
    "text": "a lambda function is a piece of",
    "start": "333970",
    "end": "335980"
  },
  {
    "start": "334000",
    "end": "451000"
  },
  {
    "text": "stateless user-defined code that runs on",
    "start": "335980",
    "end": "338740"
  },
  {
    "text": "AWS lambda automatically when it is",
    "start": "338740",
    "end": "341440"
  },
  {
    "text": "triggered by an event with lambda you",
    "start": "341440",
    "end": "344650"
  },
  {
    "text": "can run code for virtually any type of",
    "start": "344650",
    "end": "346780"
  },
  {
    "text": "application or back-end service with",
    "start": "346780",
    "end": "349210"
  },
  {
    "text": "zero administration notice that this",
    "start": "349210",
    "end": "352510"
  },
  {
    "text": "function is already associated with",
    "start": "352510",
    "end": "354670"
  },
  {
    "text": "Cloud watch events as a trigger",
    "start": "354670",
    "end": "358350"
  },
  {
    "text": "here is the code for this function this",
    "start": "359400",
    "end": "362639"
  },
  {
    "text": "function accepts a cloud watch event as",
    "start": "362639",
    "end": "364800"
  },
  {
    "text": "a parameter and looks for the bucket",
    "start": "364800",
    "end": "367139"
  },
  {
    "text": "name with non-compliant as the",
    "start": "367139",
    "end": "369090"
  },
  {
    "text": "compliance type then it removes the",
    "start": "369090",
    "end": "371699"
  },
  {
    "text": "bucket policy from this s3 bucket",
    "start": "371699",
    "end": "376070"
  },
  {
    "text": "now let's return to AWS config and",
    "start": "376450",
    "end": "379210"
  },
  {
    "text": "reevaluate this rule",
    "start": "379210",
    "end": "382590"
  },
  {
    "text": "while this rule is evaluating compliance",
    "start": "382980",
    "end": "385560"
  },
  {
    "text": "let's return to the lambda management",
    "start": "385560",
    "end": "387750"
  },
  {
    "text": "console and take a look at the function",
    "start": "387750",
    "end": "389940"
  },
  {
    "text": "as it executes",
    "start": "389940",
    "end": "392060"
  },
  {
    "text": "on the monitoring tab we can get",
    "start": "392060",
    "end": "394070"
  },
  {
    "text": "additional information",
    "start": "394070",
    "end": "397330"
  },
  {
    "text": "for instance we can see that the",
    "start": "397889",
    "end": "400229"
  },
  {
    "text": "function was successfully invoked we can",
    "start": "400229",
    "end": "403289"
  },
  {
    "text": "also view the log streams if necessary",
    "start": "403289",
    "end": "407360"
  },
  {
    "text": "now when we re-evaluate the rule we can",
    "start": "408919",
    "end": "412610"
  },
  {
    "text": "see the resource is no longer",
    "start": "412610",
    "end": "414340"
  },
  {
    "text": "non-compliant now let's take a look at",
    "start": "414340",
    "end": "417499"
  },
  {
    "text": "our list of compliant buckets",
    "start": "417499",
    "end": "420999"
  },
  {
    "text": "expected we can see the bucket we've",
    "start": "421560",
    "end": "423389"
  },
  {
    "text": "been working with",
    "start": "423389",
    "end": "425930"
  },
  {
    "text": "examining the settings of the bucket",
    "start": "426820",
    "end": "428900"
  },
  {
    "text": "itself we can see that the policy has",
    "start": "428900",
    "end": "431330"
  },
  {
    "text": "indeed been removed",
    "start": "431330",
    "end": "433690"
  },
  {
    "text": "you've just seen how to automatically",
    "start": "433690",
    "end": "435640"
  },
  {
    "text": "remediate security non-compliance using",
    "start": "435640",
    "end": "438340"
  },
  {
    "text": "AWS config rules AWS cloud watch events",
    "start": "438340",
    "end": "442000"
  },
  {
    "text": "an AWS lambda functions thanks for",
    "start": "442000",
    "end": "446080"
  },
  {
    "text": "watching now it's your turn to try",
    "start": "446080",
    "end": "450000"
  }
]