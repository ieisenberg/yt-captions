[
  {
    "text": "Welcome to 'This is My Architecture'.",
    "start": "7140",
    "end": "8909"
  },
  {
    "text": "My name is Andrea,\nand I'm here with Saral from Snap.",
    "start": "8909",
    "end": "11979"
  },
  {
    "text": "-Hi, Saral, welcome to the show.\n-Thanks for having me.",
    "start": "11979",
    "end": "14515"
  },
  {
    "text": "So what do you guys do?",
    "start": "14515",
    "end": "15716"
  },
  {
    "text": "So Snapchat is an app that hundreds\nof millions of people around the world",
    "start": "15716",
    "end": "18619"
  },
  {
    "text": "use to communicate with their close friends.",
    "start": "18619",
    "end": "20687"
  },
  {
    "text": "Our focus is on close friendships\nand we enable the fastest way to communicate",
    "start": "20687",
    "end": "24892"
  },
  {
    "text": "by building features like AR lenses,\nmaps, Bitmoji, and spotlight.",
    "start": "24892",
    "end": "28829"
  },
  {
    "text": "Awesome. So today we're going to talk about\nthe platform which resides on AWS.",
    "start": "28829",
    "end": "34168"
  },
  {
    "text": "I'm super excited\nand let's look at the end-to-end workflow.",
    "start": "34168",
    "end": "37804"
  },
  {
    "text": "Using Snap, sending a snap using Snapchat.",
    "start": "38539",
    "end": "41608"
  },
  {
    "text": "This must be massive scale.",
    "start": "41942",
    "end": "43911"
  },
  {
    "text": "I mean, how many users you have\nand how many Snaps do you deal with",
    "start": "43911",
    "end": "47281"
  },
  {
    "text": "on a daily basis?",
    "start": "47281",
    "end": "48214"
  },
  {
    "text": "That's a great question.",
    "start": "48215",
    "end": "49016"
  },
  {
    "text": "So we have over 300 million\ndaily active users on the platform.",
    "start": "49016",
    "end": "54321"
  },
  {
    "text": "Okay, that's massive scale.",
    "start": "54321",
    "end": "56455"
  },
  {
    "text": "Let's look at the lifecycle.",
    "start": "56456",
    "end": "58058"
  },
  {
    "text": "You know, I'm a user. I'm using iOS, Android.",
    "start": "58058",
    "end": "60494"
  },
  {
    "text": "What's the flow?",
    "start": "60494",
    "end": "61562"
  },
  {
    "text": "What's the first thing that happens\nwhen I send a Snap?",
    "start": "61562",
    "end": "63830"
  },
  {
    "text": "Right.",
    "start": "63830",
    "end": "64198"
  },
  {
    "text": "The first thing which happens\nis the iOS app uses our gateway,",
    "start": "64198",
    "end": "67967"
  },
  {
    "text": "which is an EKS service, which we have built\nto talk to the media delivery service",
    "start": "67968",
    "end": "72105"
  },
  {
    "text": "and send the Snap to Cloudfront",
    "start": "72105",
    "end": "74575"
  },
  {
    "text": "and persists it in S3 just so that\nit's closer to the recipient when they need it.",
    "start": "74575",
    "end": "78845"
  },
  {
    "text": "I see.",
    "start": "78846",
    "end": "79713"
  },
  {
    "text": "Okay, so this runs on Elastic Kubernetes Service.",
    "start": "79713",
    "end": "82982"
  },
  {
    "text": "-How do you orchestrate this?\n-Right.",
    "start": "82983",
    "end": "85252"
  },
  {
    "text": "So, MCS is the core\norchestration service, which we have.",
    "start": "85252",
    "end": "88322"
  },
  {
    "text": "The next thing which the client does\nis again, the client mix...",
    "start": "88322",
    "end": "91658"
  },
  {
    "text": "Once the client has persisted the media\nit makes the request to the core",
    "start": "91658",
    "end": "95161"
  },
  {
    "text": "orchestration service,\nwhich then checks the Friend Graph.",
    "start": "95162",
    "end": "99132"
  },
  {
    "text": "The Friend Graph ensures\nthat the sender actually has permissions",
    "start": "99132",
    "end": "102436"
  },
  {
    "text": "to send the message to the recipient.",
    "start": "102436",
    "end": "104571"
  },
  {
    "text": "Once the permissions check is done,\nthen it actually persists",
    "start": "104571",
    "end": "107708"
  },
  {
    "text": "all of the conversation metadata\ninto our own database called, SnapDB,",
    "start": "107708",
    "end": "111912"
  },
  {
    "text": "which under the covers, uses DynamoDB.",
    "start": "111912",
    "end": "114081"
  },
  {
    "text": "I see.",
    "start": "114081",
    "end": "114681"
  },
  {
    "text": "So what made you choose to create your own\nSnapDB as a front-end to DynamoDB?",
    "start": "114681",
    "end": "120254"
  },
  {
    "text": "Yeah.",
    "start": "120254",
    "end": "120654"
  },
  {
    "text": "So we're talking about a lot of scale on DynamoDB.",
    "start": "120654",
    "end": "123290"
  },
  {
    "text": "And we chose to build some higher level\nfeatures ourselves like transaction, TTL,",
    "start": "123290",
    "end": "128160"
  },
  {
    "text": "as well as how to efficiently kind of deal\nwith ephemeral data in our own layer.",
    "start": "128161",
    "end": "133534"
  },
  {
    "text": "We also deal with incremental state\nsynchronization so that we are not putting",
    "start": "133534",
    "end": "137069"
  },
  {
    "text": "a lot of burden on DynamoDB\nand it keeps our costs in control.",
    "start": "137070",
    "end": "139673"
  },
  {
    "text": "I see, so, you're storing the metadata in\nDynamoDB, right, so, level of scale",
    "start": "139706",
    "end": "144178"
  },
  {
    "text": "are we talking about here?",
    "start": "144178",
    "end": "145646"
  },
  {
    "text": "So we are talking about 400 terabytes\nof data which we store in DynamoDB.",
    "start": "145646",
    "end": "150984"
  },
  {
    "text": "And interestingly,\nwe run nightly scans on DynamoDB,",
    "start": "150984",
    "end": "153987"
  },
  {
    "text": "which run a 2 billion rows per minute,",
    "start": "153987",
    "end": "158258"
  },
  {
    "text": "to kind of do various things on DynamoDB,",
    "start": "158258",
    "end": "160827"
  },
  {
    "text": "including looking for friends suggestions\nor deleting ephemeral data as well.",
    "start": "160861",
    "end": "165965"
  },
  {
    "text": "So we are very heavy users of DynamoDB.",
    "start": "165966",
    "end": "168135"
  },
  {
    "text": "Okay, so you do nightly scans\njust to make sure that it maintains",
    "start": "168135",
    "end": "171305"
  },
  {
    "text": "-the relationships and friends and everything.\n-Right.",
    "start": "171305",
    "end": "173573"
  },
  {
    "text": "Okay, so we talked about the Send Snap.",
    "start": "173574",
    "end": "176677"
  },
  {
    "text": "What about the receiving end?",
    "start": "176677",
    "end": "179079"
  },
  {
    "text": "-What happens?\n-Right.",
    "start": "179079",
    "end": "180314"
  },
  {
    "text": "So the most interesting part about receiving Snap\nis, it is very latency-sensitive, right?",
    "start": "180314",
    "end": "184384"
  },
  {
    "text": "Your friend wants to get the message\nas soon as possible.",
    "start": "184384",
    "end": "186753"
  },
  {
    "text": "So the first thing the messaging service\ndoes is, it looks up a connection ID",
    "start": "186753",
    "end": "191091"
  },
  {
    "text": "or server ID from Elasticache to get\naccess to the persistent connection",
    "start": "191091",
    "end": "195963"
  },
  {
    "text": "which a server has to the Android client\nor to any client in the world",
    "start": "195963",
    "end": "199233"
  },
  {
    "text": "so that we can quickly push\na message to that client.",
    "start": "199233",
    "end": "202135"
  },
  {
    "text": "So, we look at the metadata from Elasticache,",
    "start": "202135",
    "end": "204937"
  },
  {
    "text": "we find the server\nwhich this client is already connected to",
    "start": "204938",
    "end": "207808"
  },
  {
    "text": "and through that gateway, we basically send\nthe message to the recipient.",
    "start": "207808",
    "end": "211111"
  },
  {
    "text": "I see.",
    "start": "211111",
    "end": "211612"
  },
  {
    "text": "And then you retrieve the data as well,\nthe image or video,",
    "start": "211612",
    "end": "215215"
  },
  {
    "text": "-and chat information through a stream.\n-Exactly.",
    "start": "215215",
    "end": "217718"
  },
  {
    "text": "So that media ID was persisted\nall the way through to Elasticache",
    "start": "217718",
    "end": "220721"
  },
  {
    "text": "as well as DynamoDB, so we use that media ID",
    "start": "220721",
    "end": "222890"
  },
  {
    "text": "to kind of get the information\nfrom the Cloudfront.",
    "start": "222890",
    "end": "224758"
  },
  {
    "text": "Makes, mostly, sense.",
    "start": "224758",
    "end": "225993"
  },
  {
    "text": "Now this is massive scale, but can you give us",
    "start": "225993",
    "end": "229396"
  },
  {
    "text": "some quantitative details of\nlike what size cluster are you running?",
    "start": "229396",
    "end": "233233"
  },
  {
    "text": "Just give us some numbers.",
    "start": "234168",
    "end": "235602"
  },
  {
    "text": "Yeah, we have over 900 EKS clusters running",
    "start": "235602",
    "end": "240541"
  },
  {
    "text": "and many of those clusters have over\na thousand plus instances,",
    "start": "240541",
    "end": "244511"
  },
  {
    "text": "which makes this like a really heavy\nkind of service graph, essentially.",
    "start": "244511",
    "end": "248282"
  },
  {
    "text": "Makes perfect sense. And I mean, how do you keep\nthis at a low cost, high performance?",
    "start": "248282",
    "end": "252586"
  },
  {
    "text": "I think through, you've mentioned, latency is hugely important\non the receiving side but also the cost.",
    "start": "252586",
    "end": "258225"
  },
  {
    "text": "Yeah, for sure.",
    "start": "258225",
    "end": "258959"
  },
  {
    "text": "Like latency when we move to this architecture",
    "start": "258959",
    "end": "261094"
  },
  {
    "text": "we were able to reduce the P50, the median latency",
    "start": "261094",
    "end": "263764"
  },
  {
    "text": "of sending a Snap by 24%\nwhich is a huge business impact for us.",
    "start": "263764",
    "end": "268135"
  },
  {
    "text": "Secondly in terms of cost,\nbecause we use so much compute footprint,",
    "start": "268836",
    "end": "272973"
  },
  {
    "text": "we are always looking at things\nlike auto-scaling as well as",
    "start": "272973",
    "end": "276810"
  },
  {
    "text": "using the right instant types\nlike Graviton to keep our compute cost look.",
    "start": "276810",
    "end": "279980"
  },
  {
    "text": "That's fantastic.",
    "start": "279980",
    "end": "281949"
  },
  {
    "text": "I mean this is interesting architecture\nbecause you're dealing with massive",
    "start": "281949",
    "end": "285919"
  },
  {
    "text": "amount of data",
    "start": "285919",
    "end": "286954"
  },
  {
    "text": "and you're cleverly coming up with\ninnovative ways, for example,",
    "start": "286954",
    "end": "290524"
  },
  {
    "text": "SnapDB, to reduce latency and really make\nthat user experience better",
    "start": "290524",
    "end": "295095"
  },
  {
    "text": "and then use of Graviton and others\nto keep the cost lower.",
    "start": "295095",
    "end": "298665"
  },
  {
    "text": "So thanks for walking us\nthrough this architecture.",
    "start": "298665",
    "end": "300767"
  },
  {
    "text": "Thank you so much.",
    "start": "300767",
    "end": "301768"
  },
  {
    "text": "And thanks for watching 'This is My Architecture'.",
    "start": "301768",
    "end": "304404"
  }
]