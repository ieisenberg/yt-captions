[
  {
    "text": "I was trying to figure out what time it is uh good afternoon everybody um this is going 0 to 60 with elastic beant",
    "start": "1240",
    "end": "7760"
  },
  {
    "text": "stock um we're going to start um at a very simple sort of uh level where",
    "start": "7760",
    "end": "15080"
  },
  {
    "text": "assuming that uh people in the room don't know much about elastic bean stock um just a quick show of hands how many",
    "start": "15080",
    "end": "21680"
  },
  {
    "text": "people have used elastic bean stock before um seems like a good chunk of",
    "start": "21680",
    "end": "26920"
  },
  {
    "text": "people so bear with the early portions it might be a little slow for you guys um I just want to make sure that we",
    "start": "26920",
    "end": "33840"
  },
  {
    "text": "cover uh for beginners and then go into advanced topics all right um so my name is",
    "start": "33840",
    "end": "40879"
  },
  {
    "text": "abishek Singh I'm the senior product manager for elastic bean stock so let's get started um so what do",
    "start": "40879",
    "end": "51160"
  },
  {
    "text": "we as the elastic beanock team believe in um you know why why do we do what we do um you know our beliefs are that we",
    "start": "51160",
    "end": "58719"
  },
  {
    "text": "believe in helping Developers uh deploy and maintained scalable web applications uh and services in the",
    "start": "58719",
    "end": "64960"
  },
  {
    "text": "cloud without really worrying about infrastructure um we're going to start with uh what does beanock do for you uh",
    "start": "64960",
    "end": "73759"
  },
  {
    "text": "elastic beanock allows you to easily deploy Monitor and scale three- tier web applications and",
    "start": "73759",
    "end": "79479"
  },
  {
    "text": "services um we provision the infrastructure uh we manage the infrastructure but at the same time we",
    "start": "79479",
    "end": "86280"
  },
  {
    "text": "provide you as uh developers using elastic bean stock complete control to customize that infrastructure or the",
    "start": "86280",
    "end": "92960"
  },
  {
    "text": "application stock if you so choose uh we provide preconfigured application containers as you can see on the screen",
    "start": "92960",
    "end": "100119"
  },
  {
    "text": "uh we support net PHP Java Ruby Docker",
    "start": "100119",
    "end": "105880"
  },
  {
    "text": "Python and nodejs um and all of these platforms are fairly easily customizable as we'll see",
    "start": "105880",
    "end": "112119"
  },
  {
    "text": "later in the presentation uh so let's quickly talk about what we're going to see here today",
    "start": "112119",
    "end": "118640"
  },
  {
    "text": "uh we're going to start with some of the basic concepts of elastic bean stock so what's the object model that elastic",
    "start": "118640",
    "end": "124360"
  },
  {
    "text": "bean stock uses uh just to give you guys an idea of you know how applications",
    "start": "124360",
    "end": "129720"
  },
  {
    "text": "sort of map to that object model then we're going to talk about the developer workflow um we're going to use the",
    "start": "129720",
    "end": "136680"
  },
  {
    "text": "command line utility or the command line tool that we have uh for that we'll show you examples of some of the other tools",
    "start": "136680",
    "end": "143720"
  },
  {
    "text": "that we integrate with uh we'll do a demo for the demo we'll be using uh one",
    "start": "143720",
    "end": "149120"
  },
  {
    "text": "of our recently released uh preconfigured Docker containers so we'll show you how to do uh Dev and test",
    "start": "149120",
    "end": "155640"
  },
  {
    "text": "locally using Docker containers and then deploy the same application to elastic beant stock uh knowing that elastic bean",
    "start": "155640",
    "end": "163000"
  },
  {
    "text": "stock is going to deploy to that same exact container and knowing that you have a very high fidelity",
    "start": "163000",
    "end": "168920"
  },
  {
    "text": "deployment um and the last piece on there uh we'll cover some Advanced topics now these",
    "start": "168920",
    "end": "175879"
  },
  {
    "text": "topics may not be really Advanced for developers who work with elastic beans stock uh it's",
    "start": "175879",
    "end": "181720"
  },
  {
    "text": "mainly Advanced topics for you to research uh go learn about uh I'll touch",
    "start": "181720",
    "end": "187120"
  },
  {
    "text": "on some of the basics of zero downtime deployments how do you do customizations",
    "start": "187120",
    "end": "192599"
  },
  {
    "text": "of uh software on the elastic bean stock uh platforms or the application containers and then how do you configure",
    "start": "192599",
    "end": "199959"
  },
  {
    "text": "additional resources uh in terms of AWS resources as part of your",
    "start": "199959",
    "end": "205760"
  },
  {
    "text": "application all right so let's begin with the basic concepts as I mentioned we're going to start with the elastic",
    "start": "205760",
    "end": "211239"
  },
  {
    "text": "bean stock object model um so in elastic bean stock you basically have three objects you have",
    "start": "211239",
    "end": "218599"
  },
  {
    "text": "applications and under applications you have these three objects uh you have environments application versions and",
    "start": "218599",
    "end": "225840"
  },
  {
    "text": "saved configurations so as you can see environments are basically what consists of your AWS",
    "start": "225840",
    "end": "232760"
  },
  {
    "text": "resources so for example ec2 instances your elb load balancers uh your auto",
    "start": "232760",
    "end": "238319"
  },
  {
    "text": "scaling groups these environments run a single application um version at a time",
    "start": "238319",
    "end": "244120"
  },
  {
    "text": "this is for better scalability um and an application can have as many environments uh so for",
    "start": "244120",
    "end": "250959"
  },
  {
    "text": "example you want to do blue green deployments and you want to have a staging and a production uh you can have",
    "start": "250959",
    "end": "256040"
  },
  {
    "text": "multiple environments within an application then we have application versions uh what this is is really",
    "start": "256040",
    "end": "262400"
  },
  {
    "text": "application code uh it's stored in S3 so it's highly available and an application",
    "start": "262400",
    "end": "268400"
  },
  {
    "text": "again can have many application versions specifically we use these to allow you to do easy roll backs uh if you've",
    "start": "268400",
    "end": "275000"
  },
  {
    "text": "deployed a version that's bad you don't ever have to go figure out what was the previous version that was deployed we",
    "start": "275000",
    "end": "280960"
  },
  {
    "text": "show it very easily to you on our dashboard and you can roll back and the third piece is uh saved",
    "start": "280960",
    "end": "287400"
  },
  {
    "text": "configurations now these are configurations that Define how an environment resources behave uh so for",
    "start": "287400",
    "end": "293080"
  },
  {
    "text": "example you've set up an environment and you've customized some load balance or behavior um next time you go to create",
    "start": "293080",
    "end": "299919"
  },
  {
    "text": "an environment you don't want to redo that from scratch so what you can do is you can save a configuration which",
    "start": "299919",
    "end": "305199"
  },
  {
    "text": "basically creates a snapshot of your current environment and then allows you to recreate it and you can have as many",
    "start": "305199",
    "end": "311400"
  },
  {
    "text": "of these as you'd like so let's look at uh elastic beant",
    "start": "311400",
    "end": "316560"
  },
  {
    "text": "stock environments we have two types uh single instance and a load balanced autoscaling",
    "start": "316560",
    "end": "323120"
  },
  {
    "text": "environment um the reason we have two types is because as developers you want",
    "start": "323120",
    "end": "328160"
  },
  {
    "text": "to ensure that you're working on a single instance environment you don't have any runaway costs you're always",
    "start": "328160",
    "end": "333919"
  },
  {
    "text": "guaranteed that it's only going to be one instance um you know if somebody figures out your URL and hits you with a",
    "start": "333919",
    "end": "339280"
  },
  {
    "text": "lot of traffic you don't want the environment scaling and uh increasing your costs the other benefit of using uh",
    "start": "339280",
    "end": "346120"
  },
  {
    "text": "single instance environments is you can actually test your applications to make sure that they degrade gracefully under",
    "start": "346120",
    "end": "352360"
  },
  {
    "text": "load um I tend to stress this point because it's really important uh what",
    "start": "352360",
    "end": "357520"
  },
  {
    "text": "I've seen a lot of developers do is they'll throw throw Auto scaling um at the issue so they have an application",
    "start": "357520",
    "end": "364000"
  },
  {
    "text": "they'll be like hey I want to do you know 10,000 requests in an hour uh let's just set up autoscaling to give me 100",
    "start": "364000",
    "end": "370680"
  },
  {
    "text": "instances and then run a load test and all of a sudden you'll get 100,000 requests or 10,000 requests per hour but",
    "start": "370680",
    "end": "378280"
  },
  {
    "text": "what you've got an issue with is as soon as your instances are overloaded each one of them will go down because they're",
    "start": "378280",
    "end": "383919"
  },
  {
    "text": "not the application's not architected correctly so I always recommend developers test their application",
    "start": "383919",
    "end": "390080"
  },
  {
    "text": "underload on a single instance environment to make sure that the parameters are set up appropriately uh",
    "start": "390080",
    "end": "395560"
  },
  {
    "text": "so that that single instance degrades gracefully if it's overloaded U the second instance",
    "start": "395560",
    "end": "401400"
  },
  {
    "text": "environment type that we talked about is load balanced autoscaling this is what we preset up for production environments",
    "start": "401400",
    "end": "408000"
  },
  {
    "text": "uh it has a autoscaling group and it has a load balancer in front of it so these environments will automatically scale uh",
    "start": "408000",
    "end": "414759"
  },
  {
    "text": "given the load uh that you're putting on the environment so it's basically you know preset up for you you don't have to",
    "start": "414759",
    "end": "420960"
  },
  {
    "text": "worry about what should I do for scaling uh is my instance going to be able to handle all the load uh as soon as long",
    "start": "420960",
    "end": "427440"
  },
  {
    "text": "as your applications architected correctly uh Bean Stock's basically going to do the rest for",
    "start": "427440",
    "end": "433039"
  },
  {
    "text": "you um and as I said beanock Provisions the necessary infrastructure resources",
    "start": "433039",
    "end": "438520"
  },
  {
    "text": "uh we configure Amazon Route 53 and give you a unique domain name so if you don't",
    "start": "438520",
    "end": "443639"
  },
  {
    "text": "want to pay for a domain name you're just testing an app uh you know we give you a free C name that you can use to Ping your app",
    "start": "443639",
    "end": "451520"
  },
  {
    "text": "uh this is one of the pieces a lot of people don't get about elastic bean stock is um a lot of developers make a",
    "start": "451639",
    "end": "457199"
  },
  {
    "text": "mistakes here because they try to recreate what they are used to with the Amazon ec2 or on their developer",
    "start": "457199",
    "end": "463960"
  },
  {
    "text": "workstations you know they try to set up the exact application stack and they're like hey I need to install python I need",
    "start": "463960",
    "end": "469400"
  },
  {
    "text": "to do this I need to do that you don't actually need to do any of that with elastic bean stock cuz we pre-configure",
    "start": "469400",
    "end": "475120"
  },
  {
    "text": "your ec2 instances to have the application container that you selected already pre-installed on there all you",
    "start": "475120",
    "end": "482000"
  },
  {
    "text": "really need to worry about is manage your application and any dependencies that your application has so in this",
    "start": "482000",
    "end": "488599"
  },
  {
    "text": "case U the graphic really shows you know the HTTP server the application server",
    "start": "488599",
    "end": "493720"
  },
  {
    "text": "The Interpreter for the language the operating system and even provisioning of the ec2 hosts is done by elastic bean",
    "start": "493720",
    "end": "502440"
  },
  {
    "text": "stock so little graphic to show uh the correlation of environments with",
    "start": "502879",
    "end": "508440"
  },
  {
    "text": "application versions so basically what you've got in blue is an application in our object model in",
    "start": "508440",
    "end": "515680"
  },
  {
    "text": "there you have two environments you have a test and a production environment and then you've got a whole host of",
    "start": "515680",
    "end": "520959"
  },
  {
    "text": "application versions uh that you can have there and the green one is sort of the actively running application version",
    "start": "520959",
    "end": "527399"
  },
  {
    "text": "which will be tagged as such so let's quickly uh look at",
    "start": "527399",
    "end": "534839"
  },
  {
    "text": "developer workflow cuz uh you know this is the Crux of bean stock is to make it",
    "start": "534839",
    "end": "540000"
  },
  {
    "text": "easier for developers uh to get their apps up and running on the cloud so we've got a whole host of",
    "start": "540000",
    "end": "545600"
  },
  {
    "text": "deployment options uh we've got the AWS Management console we've got uh you can",
    "start": "545600",
    "end": "551240"
  },
  {
    "text": "use git with our CLI we have toolkits for eclipse and visual studio and we",
    "start": "551240",
    "end": "557160"
  },
  {
    "text": "have a whole host of Partners um that have CI Integrations um that work on",
    "start": "557160",
    "end": "562519"
  },
  {
    "text": "elastic bean stock so what do you need to deploy your",
    "start": "562519",
    "end": "567800"
  },
  {
    "text": "application to elastic beans stock so as you can see um the first thing you need is your code you need to know the region",
    "start": "567800",
    "end": "574880"
  },
  {
    "text": "you want to deploy your code to um you know we're in nine public regions um out",
    "start": "574880",
    "end": "580760"
  },
  {
    "text": "of the 11 uh AWS public regions I believe and we'll be in the other ones fairly shortly uh you need to know your",
    "start": "580760",
    "end": "587200"
  },
  {
    "text": "stack or container type um so are you running a PHP application are you running um a node application or do you",
    "start": "587200",
    "end": "595040"
  },
  {
    "text": "want to deploy a Docker container that's the other piece of information that we need",
    "start": "595040",
    "end": "600480"
  },
  {
    "text": "and then uh we have single instance or load balanc environment so which type of environment do you want do you want",
    "start": "600480",
    "end": "606600"
  },
  {
    "text": "something that you're using for testing or do you want something that you want to run a production load on and",
    "start": "606600",
    "end": "612600"
  },
  {
    "text": "optionally we can provision an RDS database for you if that's what you choose uh our recommended way is if you",
    "start": "612600",
    "end": "618839"
  },
  {
    "text": "provision so one thing to note is in elastic bean stock today the life cycle",
    "start": "618839",
    "end": "624519"
  },
  {
    "text": "of the RDS database is tied to the life cycle of your environment so our recommendation is to to use the database",
    "start": "624519",
    "end": "630399"
  },
  {
    "text": "provision by elastic bean stock for Devon test only and if you want to do production generally you want the data",
    "start": "630399",
    "end": "637480"
  },
  {
    "text": "to stay uh longer than the application or the environment stays so it's recommended to do that separately um and",
    "start": "637480",
    "end": "645480"
  },
  {
    "text": "I would mention Cloud information uh is the best way to do that because you can template your infrastructure so I would",
    "start": "645480",
    "end": "651440"
  },
  {
    "text": "highly recommend uh looking into that all right so we're going to look at",
    "start": "651440",
    "end": "657600"
  },
  {
    "text": "our example workflow if using the CLI um so what do you need to use our CLI you",
    "start": "657600",
    "end": "663440"
  },
  {
    "text": "obviously need your AWS account credentials um you can install it on",
    "start": "663440",
    "end": "669560"
  },
  {
    "text": "Windows Mac Linux systems um the prerequisite is python 27 or Python 3 on",
    "start": "669560",
    "end": "676000"
  },
  {
    "text": "Windows uh Powershell and then you need git or later git 1.66 or later if you're going",
    "start": "676000",
    "end": "682079"
  },
  {
    "text": "to use git to do deployments so let's quickly look at",
    "start": "682079",
    "end": "690240"
  },
  {
    "text": "a example workflow so as a developer when you start deploying apps you've got Source",
    "start": "690240",
    "end": "696639"
  },
  {
    "text": "controlled so you know you go in and you initialize your repository in your folder so you do a get in it and then we",
    "start": "696639",
    "end": "703240"
  },
  {
    "text": "use the EB utility so we'll do a ebnit what ebnit does is it initializes your",
    "start": "703240",
    "end": "709279"
  },
  {
    "text": "folder uh with some configuration files so that the EB utility knows what",
    "start": "709279",
    "end": "714360"
  },
  {
    "text": "environment uh that folder is tied to or that application is tied to um um",
    "start": "714360",
    "end": "719760"
  },
  {
    "text": "anytime you do get in it or um set up a directory for the first time we recommend running ebnet ebnet also lets",
    "start": "719760",
    "end": "727839"
  },
  {
    "text": "you for example um you've got multiple developers and you want them to work on the same environment at the same time uh",
    "start": "727839",
    "end": "735279"
  },
  {
    "text": "with our newly released version three of the CLI we've actually moved all the configuration options into the cloud so",
    "start": "735279",
    "end": "741639"
  },
  {
    "text": "you can actually have teams deploying to the same environments without actually worrying about uh data being stored on",
    "start": "741639",
    "end": "747800"
  },
  {
    "text": "the instances or hey is my sensitive uh data going to get code committed because",
    "start": "747800",
    "end": "753040"
  },
  {
    "text": "we've taken care of all of that because there's nothing on your instance or on your desktop um EB in it is interactive if",
    "start": "753040",
    "end": "759920"
  },
  {
    "text": "you uh don't specify any options there's a whole host of command line options that you can specify if they're not",
    "start": "759920",
    "end": "765880"
  },
  {
    "text": "specified it's interactive uh so it'll have a bunch of prompts you go in you fill those out uh you obviously write your code you",
    "start": "765880",
    "end": "774040"
  },
  {
    "text": "make sure to run git ads so that all that code is in the repository and then you do a git commit",
    "start": "774040",
    "end": "780040"
  },
  {
    "text": "um one of the questions that was raised earlier is do you need to do get push uh",
    "start": "780040",
    "end": "785079"
  },
  {
    "text": "you don't actually need to do get push here because EB deploy builds a local archive and then uploads it so you don't",
    "start": "785079",
    "end": "791920"
  },
  {
    "text": "actually need to have the changes pushed into your repository however that is a good idea if you are using GitHub uh for",
    "start": "791920",
    "end": "800600"
  },
  {
    "text": "example and then that's basically the first step of how do I get my app onto",
    "start": "802399",
    "end": "807839"
  },
  {
    "text": "elastic bean stock now as developers we're continually developing code we're continually changing code so what's the",
    "start": "807839",
    "end": "814880"
  },
  {
    "text": "workflow to update your application you basically upd update your code you do a g ad if you've added new files you do a",
    "start": "814880",
    "end": "822600"
  },
  {
    "text": "get commit and then you do a e deploy and what EB deploy does is basically",
    "start": "822600",
    "end": "828000"
  },
  {
    "text": "creates a source archive from your git repo and then pushes it up to the beanock service and then deploys it onto",
    "start": "828000",
    "end": "834279"
  },
  {
    "text": "your instances and then you can monitor the deployment progress using EBC",
    "start": "834279",
    "end": "840920"
  },
  {
    "text": "status all right so let's look at uh how do you do deploy Docker containers to",
    "start": "840920",
    "end": "847480"
  },
  {
    "text": "elastic bean stock we've got three ways to do this today um you can use a Docker file if",
    "start": "847480",
    "end": "854320"
  },
  {
    "text": "you use a Docker file the images are built on the instance um elastic beanock supports",
    "start": "854320",
    "end": "860240"
  },
  {
    "text": "both the public uh Docker Hub repository and private repositories so if you wanted to set up a private repository",
    "start": "860240",
    "end": "866240"
  },
  {
    "text": "you could um the second way to do it if you already have an image in a private",
    "start": "866240",
    "end": "871560"
  },
  {
    "text": "repository or on dockerhub you can specify a Docker run. aw. Json this is a",
    "start": "871560",
    "end": "877519"
  },
  {
    "text": "manifest file that's uh specific to elastic bean stock what this file basic",
    "start": "877519",
    "end": "883279"
  },
  {
    "text": "excuse me what this file basically specifies is the name of the image that",
    "start": "883279",
    "end": "888920"
  },
  {
    "text": "you want to run on the elastic beanock container and then any port mappings or",
    "start": "888920",
    "end": "894279"
  },
  {
    "text": "file mappings that you need uh so as you can see there's an example on the right side there uh of two little Snippets one",
    "start": "894279",
    "end": "901720"
  },
  {
    "text": "from a Docker file that basically gets engine X up and running and then another one which is a Docker run file that uses",
    "start": "901720",
    "end": "908759"
  },
  {
    "text": "the WordPress example uh on dockerhub uh what are some of the benefits of",
    "start": "908759",
    "end": "914600"
  },
  {
    "text": "using Docker um you know one of the things that we've seen that we've heard",
    "start": "914600",
    "end": "919720"
  },
  {
    "text": "from our developers is a lot of times you're developing on your desktop and this goes back to managing",
    "start": "919720",
    "end": "926199"
  },
  {
    "text": "configurations uh you've got this snowflake on your developer machine where the developer has installed all",
    "start": "926199",
    "end": "931399"
  },
  {
    "text": "these things and then their app is working on the dev desktop but when they deploy it to the cloud um or to elastic",
    "start": "931399",
    "end": "938399"
  },
  {
    "text": "beanock it doesn't work because they're missing a dependency or something is missing um Docker basically allows you",
    "start": "938399",
    "end": "944199"
  },
  {
    "text": "to make that consistent really provide a high fidelity between your local machine",
    "start": "944199",
    "end": "950839"
  },
  {
    "text": "and the cloud or the elastic beanock environment in this case um the other",
    "start": "950839",
    "end": "956199"
  },
  {
    "text": "big benefit which a lot of people don't realize is with soccer you own the runtime so you know if you want to build",
    "start": "956199",
    "end": "964639"
  },
  {
    "text": "an application that uses go you can go ahead and write a Docker file and do that um even though lastic bean stock",
    "start": "964639",
    "end": "971319"
  },
  {
    "text": "doesn't officially support go or we don't have a container that supports go um if you want to do Scala closure uh",
    "start": "971319",
    "end": "978519"
  },
  {
    "text": "the playframework you can do all of that using Docker and elastic bean stock and really really",
    "start": "978519",
    "end": "983720"
  },
  {
    "text": "simplifies um you know or expands the possibilities I should say that we provide to our developers so we're",
    "start": "983720",
    "end": "989240"
  },
  {
    "text": "pretty stoked about that um and again um this looks like very",
    "start": "989240",
    "end": "995279"
  },
  {
    "text": "similar to the previous slide that we had but how do you deploy a Docker container to elastic bean stock simple",
    "start": "995279",
    "end": "1002079"
  },
  {
    "text": "uh do a get in it on your repository so that you have it under Source control do a ebnit follow the prompts uh copy your",
    "start": "1002079",
    "end": "1009920"
  },
  {
    "text": "Docker file into the folder get out the docker file get commit and do EB create",
    "start": "1009920",
    "end": "1015560"
  },
  {
    "text": "e create automatically deploys what's in the folder um so there you go you basically it's",
    "start": "1015560",
    "end": "1021880"
  },
  {
    "text": "that simple to deploy a Docker file to elastic bean stock and have it up and",
    "start": "1021880",
    "end": "1027038"
  },
  {
    "text": "running all right so now let's get to the fun",
    "start": "1027039",
    "end": "1032480"
  },
  {
    "text": "part let me log in here and we will move",
    "start": "1032480",
    "end": "1039959"
  },
  {
    "text": "over perfect all",
    "start": "1047240",
    "end": "1054399"
  },
  {
    "text": "right so let's begin um got this little vagrant box running over here uh it's",
    "start": "1054520",
    "end": "1061440"
  },
  {
    "text": "running Docker as those who've used Docker um you need a virtual machine to run it on",
    "start": "1061440",
    "end": "1068039"
  },
  {
    "text": "Windows uh what we're going to deploy is this application we've got it's again",
    "start": "1068039",
    "end": "1074400"
  },
  {
    "text": "it's on GitHub so if you go to github.com AWS laabs uh we've got a",
    "start": "1074400",
    "end": "1079520"
  },
  {
    "text": "bunch of samples with the EB prefix um so we've got this flask signup application for startups so you're a",
    "start": "1079520",
    "end": "1085440"
  },
  {
    "text": "startup um you've got this new product coming you want to collect people's emails um we've got this nice little app",
    "start": "1085440",
    "end": "1092200"
  },
  {
    "text": "written flask that you can get started with so we're going to use the master",
    "start": "1092200",
    "end": "1097240"
  },
  {
    "text": "Branch um this does have multiple branches so we do have a dockerized version of this that runs on our Docker",
    "start": "1097240",
    "end": "1104400"
  },
  {
    "text": "container we're going to use the master branch cuz I'm going to show you guys uh our new Docker preconfigured containers",
    "start": "1104400",
    "end": "1110880"
  },
  {
    "text": "specifically our Python 3 container that we recently launched so let's go ahead in here I'm",
    "start": "1110880",
    "end": "1118480"
  },
  {
    "text": "going to pull this up um just quickly see where I am at okay so I'm in the pre-launch",
    "start": "1118480",
    "end": "1125760"
  },
  {
    "text": "folder actually let's go ahead and do the whole thing so I'm going to get clone",
    "start": "1130679",
    "end": "1137240"
  },
  {
    "text": "and okay there we go all",
    "start": "1155919",
    "end": "1163360"
  },
  {
    "text": "right and then let's check out out my Python 3 Branch so I've got that",
    "start": "1166320",
    "end": "1174919"
  },
  {
    "text": "there and now let's quickly do a LS on here so as you guys can see um",
    "start": "1174919",
    "end": "1182640"
  },
  {
    "text": "I've got this doar run. AWS Json file um and the reason I have it here is because",
    "start": "1182640",
    "end": "1187720"
  },
  {
    "text": "I'm mapping some folders so I'm going to pull this up here so it's easier to",
    "start": "1187720",
    "end": "1194760"
  },
  {
    "text": "see so all this file is doing is basically saying hey we're using version one of the docar run. aw. Json file and",
    "start": "1194760",
    "end": "1204520"
  },
  {
    "text": "I want to map Etc config on the host to Etc config on the container and the reason we do this is because this app",
    "start": "1204520",
    "end": "1210799"
  },
  {
    "text": "has a dependency um which is this config uh that goes in SL Etc config um which I",
    "start": "1210799",
    "end": "1219080"
  },
  {
    "text": "can show you guys here real quickly um one of the other things we'll touch upon in the advanced topics is these e",
    "start": "1219080",
    "end": "1225240"
  },
  {
    "text": "extensions but I quickly want to show you guys um just walk you through some of the things that happen in here U so",
    "start": "1225240",
    "end": "1231640"
  },
  {
    "text": "in here we're basically saying resources uh we're setting up a Dynamo DB table that's where we're going to store our",
    "start": "1231640",
    "end": "1237520"
  },
  {
    "text": "emails we're setting up a new queue uh because we're going to drop the emails in a queue and not process them uh",
    "start": "1237520",
    "end": "1244799"
  },
  {
    "text": "synchronously with our front end that's just a bad thing to do um and then we're setting up a SNS topic this is what",
    "start": "1244799",
    "end": "1251320"
  },
  {
    "text": "actually sends the email to the customers and then we've got these properties subscriptions end points um",
    "start": "1251320",
    "end": "1258200"
  },
  {
    "text": "and we've we got this option setting which is new signup email with default at nobody",
    "start": "1258200",
    "end": "1263679"
  },
  {
    "text": "amazon.com now um one caveat for the demo I want to mention is um this email",
    "start": "1263679",
    "end": "1268760"
  },
  {
    "text": "hasn't been vetted by our email service so the email actually won't go out um I don't want to type in my email address",
    "start": "1268760",
    "end": "1275080"
  },
  {
    "text": "because I don't want spammers to use that uh not that anybody here will spam",
    "start": "1275080",
    "end": "1281080"
  },
  {
    "text": "um and then what we're also setting up is some policies or IM am policies",
    "start": "1281080",
    "end": "1286240"
  },
  {
    "text": "around making sure that my environment has the appropriate permissions to send a message um create the cues and",
    "start": "1286240",
    "end": "1293559"
  },
  {
    "text": "specifically we're referencing um the ARs or the resource identifiers for the",
    "start": "1293559",
    "end": "1299440"
  },
  {
    "text": "cues that I'm setting up for this environment so this ensures that no other environment or this environment",
    "start": "1299440",
    "end": "1305360"
  },
  {
    "text": "can't access any of your other cues or resources making this a very secure",
    "start": "1305360",
    "end": "1310600"
  },
  {
    "text": "architecture and then as I mentioned down below we have on Etc config this app.config file which actually makes",
    "start": "1310600",
    "end": "1317799"
  },
  {
    "text": "some of these things configurable so you can actually have an environment variable with AWS region um and then",
    "start": "1317799",
    "end": "1325000"
  },
  {
    "text": "that will automatically get put in and when you do a deploy we'd be in that region um so that's just a quick view",
    "start": "1325000",
    "end": "1333360"
  },
  {
    "text": "let's let's get to the Crux of it here uh so I've got this with our",
    "start": "1333360",
    "end": "1338679"
  },
  {
    "text": "recently released uh Docker containers we require Docker file if you want to test this locally so what I'm going to",
    "start": "1338679",
    "end": "1345679"
  },
  {
    "text": "do is quickly add a file file",
    "start": "1345679",
    "end": "1350840"
  },
  {
    "text": "here and I'm going to copy it from the demo that I already",
    "start": "1352240",
    "end": "1357279"
  },
  {
    "text": "have so we're going to go there so this is our image for the python 34 container",
    "start": "1357279",
    "end": "1364039"
  },
  {
    "text": "that's on dockerhub today so we're basically going to say put that in because we want to test the application",
    "start": "1364039",
    "end": "1369760"
  },
  {
    "text": "locally just like it would run on elastic be stock so I'm going to go ahead and save this it's just that one line that's all",
    "start": "1369760",
    "end": "1377480"
  },
  {
    "text": "you need",
    "start": "1377480",
    "end": "1380440"
  },
  {
    "text": "and I'm going to call it Docker file because that's what Docker expects when",
    "start": "1382600",
    "end": "1387799"
  },
  {
    "text": "you build an image I'm going to go in here and make sure it's here so I see my Docker file so I'm going to run a Docker",
    "start": "1387799",
    "end": "1397640"
  },
  {
    "text": "build my flask image oops always forget that",
    "start": "1400360",
    "end": "1409720"
  },
  {
    "text": "so there we go um I already have the images cached in the interest of time so basically what I just did was uh tell",
    "start": "1409720",
    "end": "1415640"
  },
  {
    "text": "Docker go ahead and build my Docker container uh with my application in it uh so as you can see it's using VAR app",
    "start": "1415640",
    "end": "1422679"
  },
  {
    "text": "uh it's going and doing a bunch of builds is going to uh pip install a bunch of uh dependencies in this case",
    "start": "1422679",
    "end": "1429480"
  },
  {
    "text": "flask Botto U and as you can see in the last line so basically just building up",
    "start": "1429480",
    "end": "1434880"
  },
  {
    "text": "my Docker container here and then I am going to run this um",
    "start": "1434880",
    "end": "1440960"
  },
  {
    "text": "I want to copy a file because I have this saved um the interest of",
    "start": "1440960",
    "end": "1446400"
  },
  {
    "text": "time",
    "start": "1446400",
    "end": "1449400"
  },
  {
    "text": "flask okay and let's make sure I have permissions on that",
    "start": "1453120",
    "end": "1458520"
  },
  {
    "text": "okay all right so I'm going to quickly show you guys the Run file so that you know what I'm running um basically it's",
    "start": "1458520",
    "end": "1464240"
  },
  {
    "text": "just a simple bash script um it calls DACA run uses it to run this in",
    "start": "1464240",
    "end": "1469520"
  },
  {
    "text": "interactive mode uh so that you know your command line actually Waits it uses",
    "start": "1469520",
    "end": "1476399"
  },
  {
    "text": "D- RM so there's an automatic cleanup uh once the process is exit exited we set",
    "start": "1476399",
    "end": "1482320"
  },
  {
    "text": "up three environment variables that are necessary we say map Port 880 on the container to 880 on the host uh bean",
    "start": "1482320",
    "end": "1490640"
  },
  {
    "text": "stock images use 880 by default so that is a requirement and then it says use",
    "start": "1490640",
    "end": "1495880"
  },
  {
    "text": "pre-launch app image um so I'm actually going to modify that because that's not",
    "start": "1495880",
    "end": "1500919"
  },
  {
    "text": "what I called mine so let's go look at what did I call mine it said my flask image so I'm going",
    "start": "1500919",
    "end": "1509159"
  },
  {
    "text": "to go in here and go my flask",
    "start": "1509159",
    "end": "1516600"
  },
  {
    "text": "image all right so now I have",
    "start": "1516880",
    "end": "1522360"
  },
  {
    "text": "that what I'm going to do is run it so basically Docker is running my",
    "start": "1522480",
    "end": "1529360"
  },
  {
    "text": "container now so let's go ahead and hit",
    "start": "1529360",
    "end": "1533720"
  },
  {
    "text": "it and boom you've got this application running locally um in a Docker container",
    "start": "1534760",
    "end": "1541080"
  },
  {
    "text": "it's a Docker image that we've provided uh in bean stock I quickly want to show you guys how that would",
    "start": "1541080",
    "end": "1549000"
  },
  {
    "text": "look so I have this pre-baked environment um so basically that's the",
    "start": "1549000",
    "end": "1556480"
  },
  {
    "text": "app on elastic bean stock and that's the app running locally on Docker as you can say see we have some U",
    "start": "1556480",
    "end": "1564720"
  },
  {
    "text": "additional information that we put out here just to make sure you know where you're running but it's basically the exact same thing um running in two",
    "start": "1564720",
    "end": "1571440"
  },
  {
    "text": "different places um wanted to quickly show you guys through creating an",
    "start": "1571440",
    "end": "1577200"
  },
  {
    "text": "environment so when you select web um what we've added is these new Docker",
    "start": "1577200",
    "end": "1582399"
  },
  {
    "text": "preconfigured containers and we've made these images available so the from line",
    "start": "1582399",
    "end": "1587520"
  },
  {
    "text": "in my Docker file that I added was basically the image for that python container um and this excuse",
    "start": "1587520",
    "end": "1595919"
  },
  {
    "text": "me and this pre-baked environment that I have is basically as you can see it's running Debbie and Jessie on the docker",
    "start": "1597640",
    "end": "1604679"
  },
  {
    "text": "container and it says it's a pre-configured Docker container with python 34 um so quickly go",
    "start": "1604679",
    "end": "1612480"
  },
  {
    "text": "here so next big thing is coming um",
    "start": "1612480",
    "end": "1618480"
  },
  {
    "text": "okay so now my just want to show you guys that it all got cleaned up so there's no",
    "start": "1623440",
    "end": "1629600"
  },
  {
    "text": "processes running that's why I used - it and-- RM um let's quickly go make a",
    "start": "1629600",
    "end": "1637360"
  },
  {
    "text": "change and with my luck with demos um I don't know if this is going to work today or not but hopefully it will um",
    "start": "1637360",
    "end": "1646760"
  },
  {
    "text": "and",
    "start": "1651840",
    "end": "1654840"
  },
  {
    "text": "index why am I not seeing this F today sorry about that",
    "start": "1658919",
    "end": "1665159"
  },
  {
    "text": "um new startup sign up today",
    "start": "1665159",
    "end": "1670240"
  },
  {
    "text": "oops so I want to change the next big thing is coming to the next big thing or well I shouldn't say the next big thing",
    "start": "1670240",
    "end": "1676440"
  },
  {
    "text": "is reinvent cuz that be inappropriate",
    "start": "1676440",
    "end": "1682200"
  },
  {
    "text": "um let's just change that to the next big thing is here and I did that in the right file so",
    "start": "1687919",
    "end": "1695159"
  },
  {
    "text": "what I'm going to do is I'm going to go ahead and build my Docker container",
    "start": "1695159",
    "end": "1700799"
  },
  {
    "text": "again just to make sure I'm testing it locally you know making sure that I'm running this locally I have this",
    "start": "1700799",
    "end": "1706200"
  },
  {
    "text": "developer cycle I don't want to upload constant Al I want to get my app running exactly as I wanted uh so we're going",
    "start": "1706200",
    "end": "1712600"
  },
  {
    "text": "through and building effectively version two of our",
    "start": "1712600",
    "end": "1717559"
  },
  {
    "text": "app perfect and I'm going to run my run script again",
    "start": "1731600",
    "end": "1738600"
  },
  {
    "text": "boom all right let's",
    "start": "1741360",
    "end": "1748159"
  },
  {
    "text": "go check this puppy out so there we go um so I just made a",
    "start": "1748159",
    "end": "1754720"
  },
  {
    "text": "change um built the docker container again my change is here um now let's do the fun stuff of",
    "start": "1754720",
    "end": "1761919"
  },
  {
    "text": "actually getting this change up to elastic bean stock all right so I don't need my",
    "start": "1761919",
    "end": "1768559"
  },
  {
    "text": "Docker file because elastic bean stock already has that set up so I'm going to change that to Docker file.",
    "start": "1768559",
    "end": "1780279"
  },
  {
    "text": "local and then I'm going to do ebnet and I use um Oregon",
    "start": "1780279",
    "end": "1789840"
  },
  {
    "text": "there yeah uh that is definitely interesting",
    "start": "1794519",
    "end": "1802080"
  },
  {
    "text": "um so that file is there interesting challenge",
    "start": "1805720",
    "end": "1813320"
  },
  {
    "text": "well here's how I go around it uh not do the Deploy on as I said my luck with",
    "start": "1813320",
    "end": "1819080"
  },
  {
    "text": "demos today is not working out",
    "start": "1819080",
    "end": "1823679"
  },
  {
    "text": "um hold on one second I'm just going to use the pre-baked environment here",
    "start": "1825760",
    "end": "1832039"
  },
  {
    "text": "um",
    "start": "1832720",
    "end": "1835720"
  },
  {
    "text": "pre-launch see if that",
    "start": "1839840",
    "end": "1843440"
  },
  {
    "text": "works oh",
    "start": "1845360",
    "end": "1849600"
  },
  {
    "text": "okay let's go quickly here",
    "start": "1853919",
    "end": "1859480"
  },
  {
    "text": "okay all right we can we can fix this um I'm going to take this off quickly so I",
    "start": "1864760",
    "end": "1870840"
  },
  {
    "text": "can actually enter that information that's okay with you guys",
    "start": "1870840",
    "end": "1878840"
  },
  {
    "text": "perfect um",
    "start": "1881360",
    "end": "1885360"
  },
  {
    "text": "see okay let's go",
    "start": "1915519",
    "end": "1919840"
  },
  {
    "text": "wow all right having some issues",
    "start": "1946919",
    "end": "1952279"
  },
  {
    "text": "there I I will use my backup method of",
    "start": "1952279",
    "end": "1957159"
  },
  {
    "text": "deploying okay all right we'll just deploy using the console uh or the Management console so what I'm going to",
    "start": "1962799",
    "end": "1969799"
  },
  {
    "text": "do is uh quickly go in here that's my folder that's what I want to use don't",
    "start": "1969799",
    "end": "1977120"
  },
  {
    "text": "want to upload that that I'm actually going to kill that and I don't want to upload that so",
    "start": "1977120",
    "end": "1983399"
  },
  {
    "text": "I'm going to kill that don't need that",
    "start": "1983399",
    "end": "1988919"
  },
  {
    "text": "guy I'm just going to zip this",
    "start": "1989200",
    "end": "1993278"
  },
  {
    "text": "up perfect all right and then we're going to go into our Management",
    "start": "1996840",
    "end": "2002919"
  },
  {
    "text": "console and do it upload and deploy I'm going to change this um",
    "start": "2002919",
    "end": "2009080"
  },
  {
    "text": "actually I only have one instance running so I rolling application deployments is not really going to",
    "start": "2009080",
    "end": "2015000"
  },
  {
    "text": "matter but I'm going to go in here and I'm going to pick that",
    "start": "2015039",
    "end": "2020919"
  },
  {
    "text": "file all right so instead of using EB deploy we're going to use the console um the",
    "start": "2024039",
    "end": "2030880"
  },
  {
    "text": "web console to do this and basically what we've done is um just deployed the",
    "start": "2030880",
    "end": "2036000"
  },
  {
    "text": "update so we want to see the next big thing is here on that same space",
    "start": "2036000",
    "end": "2043518"
  },
  {
    "text": "there so we'll",
    "start": "2047320",
    "end": "2050838"
  },
  {
    "text": "wait in this case the same process uh that happened on my desktop is actually happening on the elastic beanock",
    "start": "2058520",
    "end": "2065118"
  },
  {
    "text": "environment so each instance is pulling down the image uh in this case hopefully it's already cached because it's been built before",
    "start": "2065119",
    "end": "2072158"
  },
  {
    "text": "and it's building your application into the docker container um so that's why this does take a little longer than",
    "start": "2072159",
    "end": "2077398"
  },
  {
    "text": "doing a deployment uh of just a source to elastic bean stock so we're waiting while we're waiting for this",
    "start": "2077399",
    "end": "2085839"
  },
  {
    "text": "um whoops didn't want to do that",
    "start": "2085839",
    "end": "2091320"
  },
  {
    "text": "um I'll just go rotate the keys that's that's the that's the good thing about",
    "start": "2091320",
    "end": "2096520"
  },
  {
    "text": "uh being able to rotate keys and um all of that being transient all right so now my containers",
    "start": "2096520",
    "end": "2103119"
  },
  {
    "text": "deployed hey the next big thing is here so um eventually that worked um so",
    "start": "2103119",
    "end": "2108520"
  },
  {
    "text": "basically what we just did as you guys saw was um deploy a Docker container locally test it or should I say it right",
    "start": "2108520",
    "end": "2116800"
  },
  {
    "text": "there um test it do my iteration on my developer desktop and then actually push",
    "start": "2116800",
    "end": "2122240"
  },
  {
    "text": "that to elastic bean stock and you know works exactly the same way um so that's",
    "start": "2122240",
    "end": "2128200"
  },
  {
    "text": "the quick demo we've got about uh 9 minutes or my",
    "start": "2128200",
    "end": "2134079"
  },
  {
    "text": "clock says 12 minutes over there okay um so let's quickly talk",
    "start": "2134079",
    "end": "2143320"
  },
  {
    "text": "about some of the advanced topics as I mentioned um this is going",
    "start": "2143320",
    "end": "2148839"
  },
  {
    "text": "to be some Advanced topics around uh how do you customize your application containers how do you customize um or",
    "start": "2148839",
    "end": "2155280"
  },
  {
    "text": "add resources that your application requires to your elastic beanock environments uh",
    "start": "2155280",
    "end": "2160839"
  },
  {
    "text": "so we're quickly going to look at an EB extension or a config file that installs the New Relic agent um you know so say",
    "start": "2160839",
    "end": "2168000"
  },
  {
    "text": "you want to send metrics uh to New Relic um you write a little simple uh EB",
    "start": "2168000",
    "end": "2173480"
  },
  {
    "text": "extension and you can have that running say you want to use Splunk um do the same exact thing so these containers are",
    "start": "2173480",
    "end": "2181200"
  },
  {
    "text": "infinitely customizable uh we don't lock it down um you know we we understand",
    "start": "2181200",
    "end": "2186440"
  },
  {
    "text": "that as developers you want control um and when you do want that control we let you have that",
    "start": "2186440",
    "end": "2193480"
  },
  {
    "text": "control you can iterate on your application architecture so in this case we have uh an example of adding an",
    "start": "2193839",
    "end": "2201359"
  },
  {
    "text": "elasticache node uh and then saying that we'll use mcash d as the engine uh but you can use",
    "start": "2201359",
    "end": "2208400"
  },
  {
    "text": "a similar snippet to do Dynamo DB tables as I showed you guys earlier uh you can use the similar snippet to do SNS topics",
    "start": "2208400",
    "end": "2216240"
  },
  {
    "text": "um pretty much any resource that cloud information supports uh because at some",
    "start": "2216240",
    "end": "2222000"
  },
  {
    "text": "level these are just Cloud information Snippets that you're using let's talk about zero downtime",
    "start": "2222000",
    "end": "2228839"
  },
  {
    "text": "deployments um this is very important to developers as you're iterating uh in today's world you want to do this very",
    "start": "2228839",
    "end": "2235520"
  },
  {
    "text": "quickly you want to develop very quickly and you don't want to have your deployments take down uh your traffic",
    "start": "2235520",
    "end": "2240920"
  },
  {
    "text": "you want to continuously serve your customer traffic um beanock realizes that people have uh two ways they go",
    "start": "2240920",
    "end": "2247800"
  },
  {
    "text": "about it um there's the immutable architecture uh track which basically",
    "start": "2247800",
    "end": "2252880"
  },
  {
    "text": "says Hey I want to always deploy to a new set of instances a new environment um I never want to do in place",
    "start": "2252880",
    "end": "2260280"
  },
  {
    "text": "deployments uh so for that we support something called swap URLs uh the way",
    "start": "2260280",
    "end": "2265520"
  },
  {
    "text": "this works in elastic beant stock is that you would create a new environment for your new application",
    "start": "2265520",
    "end": "2270960"
  },
  {
    "text": "version and then You' deploy your updated code to it and then you'd perform a swap URL and what that",
    "start": "2270960",
    "end": "2276839"
  },
  {
    "text": "basically does is it swaps the DNS entries at the top so that your old",
    "start": "2276839",
    "end": "2282400"
  },
  {
    "text": "environment or old DNS entries now pointing to your new application code um",
    "start": "2282400",
    "end": "2287480"
  },
  {
    "text": "this has some downsides um specifically if you have devices that cache DNS",
    "start": "2287480",
    "end": "2292800"
  },
  {
    "text": "addresses uh that don't respect the ttls uh your customers can continue to",
    "start": "2292800",
    "end": "2298119"
  },
  {
    "text": "get the old version of the application uh for a little while um so for that",
    "start": "2298119",
    "end": "2303440"
  },
  {
    "text": "what we've done uh recently we launched two weeks ago rolling application deployments what that allows you to do",
    "start": "2303440",
    "end": "2309720"
  },
  {
    "text": "is roll your deployments across your entire fleet of instances in your environment so you can say hey I want to",
    "start": "2309720",
    "end": "2316119"
  },
  {
    "text": "deploy a new application version but I don't want to deploy it to 100% of my environments I want to deploy it only to",
    "start": "2316119",
    "end": "2321880"
  },
  {
    "text": "30% of my environment and then I want to roll it 30% at the time so elastic bean",
    "start": "2321880",
    "end": "2327040"
  },
  {
    "text": "stock now has that capability too uh and that allows you to do in place uh",
    "start": "2327040",
    "end": "2332280"
  },
  {
    "text": "effectively in place zero downtime deployments um so let's quick quickly recap um what",
    "start": "2332280",
    "end": "2339319"
  },
  {
    "text": "are the benefits of elastic beanock beanock basically lets you uh or",
    "start": "2339319",
    "end": "2344839"
  },
  {
    "text": "at least we hope that beanock lets you focus on your application it focuses on",
    "start": "2344839",
    "end": "2350240"
  },
  {
    "text": "what makes your business unique it allows you to focus on Innovation um not",
    "start": "2350240",
    "end": "2355880"
  },
  {
    "text": "doing the undifferentiated heavy lifting of setting up your environments configuring your application stack um",
    "start": "2355880",
    "end": "2362119"
  },
  {
    "text": "how do you deploy your applications we want to do all of that for you so that you're really focusing on your core",
    "start": "2362119",
    "end": "2367440"
  },
  {
    "text": "business uh and what differentiates you it allows you to spend developer time in the right places uh so that developers",
    "start": "2367440",
    "end": "2373960"
  },
  {
    "text": "are not worrying about you know writing scripts to manage infrastructure or manage uh configuration on the instances",
    "start": "2373960",
    "end": "2380960"
  },
  {
    "text": "and it allows you to automate as much as you can I can't stress that point enough",
    "start": "2380960",
    "end": "2386119"
  },
  {
    "text": "um everything you do you should automate it allows you to be more agile it allows",
    "start": "2386119",
    "end": "2391560"
  },
  {
    "text": "you to do things much faster um so if there's any one thing that you take away",
    "start": "2391560",
    "end": "2397040"
  },
  {
    "text": "from this talk is automate as much as you can because that will really save your bacon um when it comes down to U",
    "start": "2397040",
    "end": "2405000"
  },
  {
    "text": "you know SWAT type situations um and then the kicker uh obviously we",
    "start": "2405000",
    "end": "2410960"
  },
  {
    "text": "don't have any additional charge for elastic bean stock it's a free service you only pay for the underlying",
    "start": "2410960",
    "end": "2416400"
  },
  {
    "text": "resources that you use so you only pay for the instance hours on ec2 uh requests and traffic on elb and S3",
    "start": "2416400",
    "end": "2424839"
  },
  {
    "text": "storage if you have any uh plus if you use any additional resources you would just pay for those resources uh we don't",
    "start": "2424839",
    "end": "2431040"
  },
  {
    "text": "charge anything over those over that for elastic bean stock um some links to make note of uh",
    "start": "2431040",
    "end": "2439000"
  },
  {
    "text": "if you guys are interested in learning more I highly recommend downloading that Kindle ebook it's a blog post that we",
    "start": "2439000",
    "end": "2446200"
  },
  {
    "text": "had it's a five-part series we did on developing deploying and managing for scale using elastic bean stock and cloud",
    "start": "2446200",
    "end": "2453800"
  },
  {
    "text": "formation it is um by far are the best uh I would say two hours you will spend",
    "start": "2453800",
    "end": "2461079"
  },
  {
    "text": "in learning about Cloud information and elastic beant stock uh we have a Blog which we update fairly regularly um",
    "start": "2461079",
    "end": "2468240"
  },
  {
    "text": "application management blog so I would highly recommend you guys uh follow that for updates uh as we make updates to our",
    "start": "2468240",
    "end": "2474359"
  },
  {
    "text": "service and new features and use cases we're also on Twitter so follow us at",
    "start": "2474359",
    "end": "2481720"
  },
  {
    "text": "AWB and uh thank you everyone for coming hopefully this was uh useful we're not",
    "start": "2481720",
    "end": "2487359"
  },
  {
    "text": "not going to take any questions in the room I'm going to be waiting outside to take questions so anybody who has questions feel free to grab me um",
    "start": "2487359",
    "end": "2495079"
  },
  {
    "text": "hopefully this was helpful uh would love you guys to uh provide us with some feedback on the link bitly link there um",
    "start": "2495079",
    "end": "2502680"
  },
  {
    "text": "you know helps me improve uh when I come back uh to get you guys uh up and going",
    "start": "2502680",
    "end": "2507880"
  },
  {
    "text": "next year so uh thank you very much",
    "start": "2507880",
    "end": "2512480"
  }
]