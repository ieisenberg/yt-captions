[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "welcome back and some of you have been here already if you're just joining us on Twitch",
    "start": "0",
    "end": "5240"
  },
  {
    "text": "thank you very much so part two I gave part one this morning",
    "start": "5240",
    "end": "10530"
  },
  {
    "text": "also this is going to be service architectural patterns quick shout out at both the beginning and the end",
    "start": "10530",
    "end": "16940"
  },
  {
    "text": "therapy has had a couple of questions about AI and step functions Adrienne is",
    "start": "16940",
    "end": "22350"
  },
  {
    "text": "giving a talk at 12:30 which will cover some of those it'll be a little bit a little bit more in-depth and then",
    "start": "22350",
    "end": "28230"
  },
  {
    "text": "there's a server list workshop this afternoon with Adrienne and Danilo so if",
    "start": "28230",
    "end": "34170"
  },
  {
    "text": "you if you're looking for some for some more service goodness today a service day and there will be a workshop this",
    "start": "34170",
    "end": "40920"
  },
  {
    "text": "afternoon plus another session at 12:30 plus two more sessions this morning so plenty of time to get your questions",
    "start": "40920",
    "end": "47039"
  },
  {
    "text": "answered and if you're on twitch or you're joining us here we'll take questions at the end and then also in",
    "start": "47039",
    "end": "54000"
  },
  {
    "text": "between the sessions like last time so if you don't want to ask your question on Twitch come find us come find us",
    "start": "54000",
    "end": "60030"
  },
  {
    "text": "afterwards so getting started on the session itself so servos architectural",
    "start": "60030",
    "end": "66090"
  },
  {
    "text": "patterns if you're just joining us what is what a service so there are servers",
    "start": "66090",
    "end": "72270"
  },
  {
    "start": "68000",
    "end": "68000"
  },
  {
    "text": "but you don't have to provision or manage them built-in availability and fault tolerance scale with your usage",
    "start": "72270",
    "end": "79590"
  },
  {
    "text": "and never pay for idle or unused capacity so cold servers really similar",
    "start": "79590",
    "end": "85380"
  },
  {
    "text": "so it should be actually a pretty familiar concept so if you've been using the the built-in availability and fault",
    "start": "85380",
    "end": "90900"
  },
  {
    "text": "tolerance if you've been working with some other AWS services a lot of the",
    "start": "90900",
    "end": "96390"
  },
  {
    "text": "managed ones have the same kind of feel where you can get Amazon help with with",
    "start": "96390",
    "end": "102570"
  },
  {
    "text": "scaling and availability and resource allocation and stuff like that so some",
    "start": "102570",
    "end": "108270"
  },
  {
    "text": "familiar concepts service is very popular so your there's a pretty nice ecosystem out there around what people",
    "start": "108270",
    "end": "114840"
  },
  {
    "text": "are using it for how they're using functions and how you can build some cool stuff with lambda also so",
    "start": "114840",
    "end": "121200"
  },
  {
    "text": "serverless runs on functions functions are kind of our unit of deployment and scale you scale per request skip the",
    "start": "121200",
    "end": "129539"
  },
  {
    "start": "123000",
    "end": "123000"
  },
  {
    "text": "boring parts skip the hard parts I was a an infrastructure engineer before this",
    "start": "129539",
    "end": "135090"
  },
  {
    "text": "so I actually find those all really interesting but for a lot of people they",
    "start": "135090",
    "end": "140519"
  },
  {
    "text": "want to focus on how to build something cool so how to write a co-op location how to write an interesting function and",
    "start": "140519",
    "end": "145709"
  },
  {
    "text": "lasts about whether they've chosen the right instance type and how well that's going for them so some serverless",
    "start": "145709",
    "end": "153840"
  },
  {
    "text": "applications this is a more general diagram if you were here in the last",
    "start": "153840",
    "end": "159150"
  },
  {
    "text": "session this is a maybe a cleaner way of putting what we talked about before but",
    "start": "159150",
    "end": "164340"
  },
  {
    "text": "I have I have an event source so a change in data state a request to an endpoint a change in resource state and",
    "start": "164340",
    "end": "172319"
  },
  {
    "text": "I have a function so my event source kicks off my function so it triggers my",
    "start": "172319",
    "end": "177420"
  },
  {
    "text": "function and then I take an action with another service after that functions been called so it could be s3 or dynamo",
    "start": "177420",
    "end": "186720"
  },
  {
    "start": "186000",
    "end": "186000"
  },
  {
    "text": "could be it could be anything right so you have a you have a change in your data store your endpoint your repository",
    "start": "186720",
    "end": "192810"
  },
  {
    "text": "your message source it triggers your function your function takes an action and then you can do something with",
    "start": "192810",
    "end": "199440"
  },
  {
    "text": "another service and result of that so we we talked about some examples and",
    "start": "199440",
    "end": "205230"
  },
  {
    "text": "they'll in the last session but that might be updating a customer record or creating an image thumbnail and s3 or",
    "start": "205230",
    "end": "212849"
  },
  {
    "text": "making a back-end for a mobile app do it you can do you can do a really a lot of",
    "start": "212849",
    "end": "220049"
  },
  {
    "text": "stuff this way but it all kind of files the same pattern you have a source triggers your function and your function",
    "start": "220049",
    "end": "225180"
  },
  {
    "text": "takes an action so a few lambda specific best practices so lambda is stateless we",
    "start": "225180",
    "end": "232440"
  },
  {
    "start": "226000",
    "end": "226000"
  },
  {
    "text": "talked about that a lot first thing this morning but architect accordingly so no",
    "start": "232440",
    "end": "237780"
  },
  {
    "text": "affinity with the underlying computer infrastructure so you can't customize things you can't change it to fit you",
    "start": "237780",
    "end": "244560"
  },
  {
    "text": "everything is contained in that function your local file system your processes",
    "start": "244560",
    "end": "250319"
  },
  {
    "text": "they may not extend beyond the lifetime of your request so everything should be boxed to your one little function you",
    "start": "250319",
    "end": "258299"
  },
  {
    "text": "can't really control anything about the underlying infrastructure so which is for a lot of people as a pro right so",
    "start": "258299",
    "end": "264419"
  },
  {
    "text": "that's how you have how you cannot worry about the the hard parts or the boring parts so you cannot",
    "start": "264419",
    "end": "271409"
  },
  {
    "text": "worry about your infrastructure but also if you need to customize the underlying infrastructure maybe you look for a",
    "start": "271409",
    "end": "276479"
  },
  {
    "text": "different tool a couple considerations and best practices hopefully this",
    "start": "276479",
    "end": "282030"
  },
  {
    "start": "278000",
    "end": "278000"
  },
  {
    "text": "answers questions that people didn't want to come and ask on the break also but so can your land of functions",
    "start": "282030",
    "end": "289889"
  },
  {
    "text": "survive the cold so your land of functions you have kind of the you have",
    "start": "289889",
    "end": "295020"
  },
  {
    "text": "your startup and then you have what's actually invoking so if you have a client connection database connection",
    "start": "295020",
    "end": "302069"
  },
  {
    "text": "that's outside the scope so you you can start that first so if you see I'm once",
    "start": "302069",
    "end": "308310"
  },
  {
    "text": "again missing what I wish was a laser pointer but I can I can start those all",
    "start": "308310",
    "end": "313729"
  },
  {
    "text": "in kind of my the starting period and then they're they're open and they're",
    "start": "313729",
    "end": "318750"
  },
  {
    "text": "instantiated and then I'm doing my actual my function invocation after that that lets me reuse connections I can",
    "start": "318750",
    "end": "327150"
  },
  {
    "text": "schedule those with cloud watch events if I wanted an extra bit of a warm start Eni is for V PC support are attached",
    "start": "327150",
    "end": "334319"
  },
  {
    "text": "during cold start also so Adrienne reminded me in between that you can make your functions UPC only so you can",
    "start": "334319",
    "end": "340529"
  },
  {
    "text": "attach an en I but where you work possible so where you have this this outside connection instantiate that at",
    "start": "340529",
    "end": "347370"
  },
  {
    "text": "the beginning and don't execute it with every invocation of your function the",
    "start": "347370",
    "end": "353909"
  },
  {
    "text": "same thing also with these slides by the way they'll be posted afterwards so if you're looking to use that code snippet",
    "start": "353909",
    "end": "359909"
  },
  {
    "text": "or anything similar you can get it from the slide deck and not from the slide",
    "start": "359909",
    "end": "365580"
  },
  {
    "text": "show how about a file system so you get those you have your give your attempt",
    "start": "365580",
    "end": "372990"
  },
  {
    "text": "file space again though so you can use it during your actual function around so",
    "start": "372990",
    "end": "378509"
  },
  {
    "text": "if you need a little bit of space to into store an asset or to use something like to store something before you send",
    "start": "378509",
    "end": "385409"
  },
  {
    "text": "it off to another service you can it does not stick around afterwards though",
    "start": "385409",
    "end": "390449"
  },
  {
    "text": "so once again if you were looking for state Malinda is not the answer you have to",
    "start": "390449",
    "end": "395490"
  },
  {
    "text": "store your state somewhere else but during the actual run of your function you do have a couple hundred megabytes",
    "start": "395490",
    "end": "403529"
  },
  {
    "text": "of scratch space custom cloud watch metrics you can add custom ones during",
    "start": "403529",
    "end": "410939"
  },
  {
    "text": "your land of function you can you can aggregate them with Kinesis ultimately",
    "start": "410939",
    "end": "416129"
  },
  {
    "text": "though if you're looking for so we talked about in the last one about some metrics that come with cloud watch for",
    "start": "416129",
    "end": "421889"
  },
  {
    "text": "lambda from the beginning so responses latency stuff like that you can write",
    "start": "421889",
    "end": "427169"
  },
  {
    "text": "custom ones as well so since cloud watch logging is built-in you can you can add your custom metrics",
    "start": "427169",
    "end": "432930"
  },
  {
    "text": "and send everything to the same place and then you can either look at them or cloud watcher or use those to take other",
    "start": "432930",
    "end": "439319"
  },
  {
    "text": "actions so alarms or alerts or something like that a couple of different design",
    "start": "439319",
    "end": "445650"
  },
  {
    "text": "patterns so we're gonna cover I believe for the first one up it's going to be",
    "start": "445650",
    "end": "452699"
  },
  {
    "text": "the more traditional one so a three-tier web application this is I think where a lot of people start off with new",
    "start": "452699",
    "end": "459360"
  },
  {
    "text": "services so I have kind of what we consider the traditional kind of web app",
    "start": "459360",
    "end": "464509"
  },
  {
    "text": "architecture and how can I use how can I do that and then we'll look at a couple",
    "start": "464509",
    "end": "470490"
  },
  {
    "text": "more a couple different use cases as well so starting off with my with my",
    "start": "470490",
    "end": "475680"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "three-tier web application this is this was really the traditional one so we",
    "start": "475680",
    "end": "481259"
  },
  {
    "text": "start at the browser we have cloud front I can either take assets from s3 or I",
    "start": "481259",
    "end": "487319"
  },
  {
    "text": "can I can do my back-end logic so I have API gateway in front of lambda and I'm",
    "start": "487319",
    "end": "494219"
  },
  {
    "text": "storing my data and diamo DB so this is a lot of the same kind of principles that we've been talking about so I'm",
    "start": "494219",
    "end": "501419"
  },
  {
    "text": "cashing in cloud front and I have my assets in s3 Vanda has is doing my",
    "start": "501419",
    "end": "506879"
  },
  {
    "text": "actual kind of backend logic and then I'm using dynamo DB for State so just a",
    "start": "506879",
    "end": "512068"
  },
  {
    "text": "more realistic version of all the principles that we're talking about use my use lambda to kind of take actions",
    "start": "512069",
    "end": "518370"
  },
  {
    "text": "store my state somewhere else stick it all behind cloud front an API gateway you can get a little bit more specific",
    "start": "518370",
    "end": "525480"
  },
  {
    "text": "here so how can I do security this way these are not by the way actual security recommendations this is just kind of a",
    "start": "525480",
    "end": "531750"
  },
  {
    "text": "principle this is an overview it's a diagram showing that you can use these tools there is more to security",
    "start": "531750",
    "end": "538780"
  },
  {
    "text": "than what is on this slide so definitely do your research before you kick off",
    "start": "538780",
    "end": "544210"
  },
  {
    "text": "with something like this but just a way for you to do kind of security with this",
    "start": "544210",
    "end": "549490"
  },
  {
    "text": "so CloudFront has some stuff on its own side if you've worked with cloud Front",
    "start": "549490",
    "end": "555910"
  },
  {
    "text": "before there are a ton of options quad front there's there's a lot going on in",
    "start": "555910",
    "end": "563110"
  },
  {
    "text": "cloud front it can be a little it can be a little confusing but basically you can",
    "start": "563110",
    "end": "568990"
  },
  {
    "text": "route your traffic based on based on path and then you get some you get some",
    "start": "568990",
    "end": "574060"
  },
  {
    "text": "security stuff that you have to deal with on that side too so an example of that might be geo restriction or IP",
    "start": "574060",
    "end": "579550"
  },
  {
    "text": "restriction you can handle cookies this way you can sign your URLs this way",
    "start": "579550",
    "end": "584610"
  },
  {
    "text": "cloud phone I think is very customizable so you can set up your own pick what",
    "start": "584610",
    "end": "593170"
  },
  {
    "text": "works for you so if you start off with just the you can start off with kind of the stock cloud front thing but it's",
    "start": "593170",
    "end": "598240"
  },
  {
    "text": "really customizable to fit kind of your specific workload needs so with a signed URL or cookies or geo restriction pick",
    "start": "598240",
    "end": "605950"
  },
  {
    "text": "pick what works for you s3 you have bucket policies and you have access control so you you hear a lot of people",
    "start": "605950",
    "end": "613930"
  },
  {
    "text": "that is kind of leave their leave their buckets public that's fine if you have assets that everyone should see so like",
    "start": "613930",
    "end": "620320"
  },
  {
    "text": "pictures on a website or so like if I",
    "start": "620320",
    "end": "625750"
  },
  {
    "text": "have a personal website and I have kind of the front page that everyone should see and it has a picture of me and a",
    "start": "625750",
    "end": "632230"
  },
  {
    "text": "picture of my dog on it then those are definitely those are public resources not every resource is public so if I",
    "start": "632230",
    "end": "638350"
  },
  {
    "text": "have like an admin back-end so a place where it just I can I can log in and I",
    "start": "638350",
    "end": "643960"
  },
  {
    "text": "can it's like fulfill orders or something like that those are examples of assets",
    "start": "643960",
    "end": "649540"
  },
  {
    "text": "that should not be public so don't default to public right bucket policies",
    "start": "649540",
    "end": "654750"
  },
  {
    "text": "API gateway adrià with lambda dynamodb lambda and dynamodb both use I",
    "start": "654750",
    "end": "661360"
  },
  {
    "text": "am policies so we spoke about it last time but basically I can use a policy",
    "start": "661360",
    "end": "666990"
  },
  {
    "text": "function so if one function needs access to consist but one does not I can use different policies for each function I",
    "start": "666990",
    "end": "674370"
  },
  {
    "text": "can handle some extra things in API gateway as well so throttling cashing usage the the the overarching thing here",
    "start": "674370",
    "end": "683640"
  },
  {
    "text": "right has used the use the tools you have available to you there are slightly different tools depending on how you've",
    "start": "683640",
    "end": "688800"
  },
  {
    "text": "set things up but there's a way at every step of this kind of three-tier process what every tier to make sure that you're",
    "start": "688800",
    "end": "695040"
  },
  {
    "text": "building building securely and what I think is really is really cool is that we've moved from just kind of server",
    "start": "695040",
    "end": "701670"
  },
  {
    "text": "level instance rules so my my host has a role and here's what everything on my",
    "start": "701670",
    "end": "708030"
  },
  {
    "text": "host can talk about can talk to dontoh to function level roles so function a",
    "start": "708030",
    "end": "713670"
  },
  {
    "text": "can access this but function B can't and instead it connects us something else",
    "start": "713670",
    "end": "719450"
  },
  {
    "text": "this gets this is the same thing we just added cloud front and WAF in front of",
    "start": "719600",
    "end": "725970"
  },
  {
    "text": "Amazon API gateway all of these though this is this is not a thorough overview",
    "start": "725970",
    "end": "731700"
  },
  {
    "text": "of the options that you can do for security at these different steps I think the thing to take away though",
    "start": "731700",
    "end": "737190"
  },
  {
    "text": "right is that you have at every step of this process you have options to make it secure so do your research on the",
    "start": "737190",
    "end": "743010"
  },
  {
    "text": "options know what you're doing and then in general whether you're building kind of a three-tier web app or you have a",
    "start": "743010",
    "end": "748830"
  },
  {
    "text": "different use case we go with the principle of least privilege and that means that for for anything that you're",
    "start": "748830",
    "end": "754770"
  },
  {
    "text": "using whether it's a Landa function or a DynamoDB or an IM user give it the least amount of access that it needs to be",
    "start": "754770",
    "end": "761790"
  },
  {
    "text": "able to do its job effectively so don't write a blanket policy and then reuse it for every function or every",
    "start": "761790",
    "end": "768210"
  },
  {
    "text": "server make sure that everything has the least amount of access that it needs in order to do its job so how can you",
    "start": "768210",
    "end": "775590"
  },
  {
    "text": "monitor these which is better than me I think just saying cloud watch clad",
    "start": "775590",
    "end": "781410"
  },
  {
    "text": "watches involved but the same thing as security you have you have steps at",
    "start": "781410",
    "end": "786510"
  },
  {
    "text": "every tier of this process to make sure that you're getting the data that you need so you can do your access logs the",
    "start": "786510",
    "end": "792690"
  },
  {
    "text": "cloud front level you can do your excess logs s3 bucket level you have cloud trail",
    "start": "792690",
    "end": "798750"
  },
  {
    "text": "every single service has a way to do logging and monitoring so I think which",
    "start": "798750",
    "end": "804960"
  },
  {
    "text": "i think is great but I think there's a takeaway here right which is that that can be very noisy so make sure that",
    "start": "804960",
    "end": "811020"
  },
  {
    "text": "you're logging alerting that you're monitoring on what you actually need so",
    "start": "811020",
    "end": "816050"
  },
  {
    "text": "you you get the horror stories right about the people that are on call and then they they wake up at they wake up",
    "start": "816050",
    "end": "822060"
  },
  {
    "text": "at 3:00 and so Pedro Duty goes off and then they say oh this error I can fix",
    "start": "822060",
    "end": "829230"
  },
  {
    "text": "this tomorrow and if it's waking up at 3:00 you should not be able to fix it tomorrow so with all of the with all the",
    "start": "829230",
    "end": "835770"
  },
  {
    "text": "monitoring with all the logging has great responsibilities right so make sure that your that your alerting that",
    "start": "835770",
    "end": "841020"
  },
  {
    "text": "you're logging on what you actually need so on metrics that are important to you so at the beginning of the process when",
    "start": "841020",
    "end": "846330"
  },
  {
    "text": "you're when you're just starting out when you're just using it when you're trying to figure out what's wrong a lot a lot of things or continue logging",
    "start": "846330",
    "end": "853620"
  },
  {
    "text": "everything but make sure that you're alerting on the metrics that you can actually take value from because you",
    "start": "853620",
    "end": "860310"
  },
  {
    "text": "don't want to be searching through a bunch of noise through a bunch of uh Nagre gated kind of logs and monitoring",
    "start": "860310",
    "end": "865410"
  },
  {
    "text": "to find out the values that are really important to you so you can see these",
    "start": "865410",
    "end": "871080"
  },
  {
    "text": "although the little sections I think a little bit better when it goes out on SlideShare but there are options",
    "start": "871080",
    "end": "876900"
  },
  {
    "text": "everywhere use them but also use them responsibly so you can actually take",
    "start": "876900",
    "end": "882240"
  },
  {
    "text": "good actions from them so there's a blog post I'll send the actual link out about",
    "start": "882240",
    "end": "888860"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "service application model it has a really cute squirrel mascot also which",
    "start": "888860",
    "end": "893970"
  },
  {
    "text": "is has great stickers if you can find anyone with the stickers you should they're very cute they're also like this",
    "start": "893970",
    "end": "899580"
  },
  {
    "text": "Bank but how can i how can I manage this so I think especially once you once",
    "start": "899580",
    "end": "905790"
  },
  {
    "text": "you've moved beyond you think you get this a lot with the with the micro services to is it I've gone from having",
    "start": "905790",
    "end": "912390"
  },
  {
    "text": "one application that I could kind of build test and deploy locally to possibly hundreds of services or",
    "start": "912390",
    "end": "918780"
  },
  {
    "text": "containers or functions what happens now so how do I do all of that without",
    "start": "918780",
    "end": "926550"
  },
  {
    "text": "having to do it by hand and you can do a lot of this stuff by hand so if you're just getting started if you're testing",
    "start": "926550",
    "end": "932160"
  },
  {
    "text": "if learning if you're looking for a visual feedback you can do it just to the console here's an example workflow of",
    "start": "932160",
    "end": "938340"
  },
  {
    "text": "what it might look like to not do that by hand so you shut off your code your",
    "start": "938340",
    "end": "943590"
  },
  {
    "text": "packages your templates you can package them up you can point them to s3 and you",
    "start": "943590",
    "end": "949350"
  },
  {
    "text": "can put CloudFormation in front of it and then you can handle things with lambda DynamoDB in API gateway so it's",
    "start": "949350",
    "end": "955620"
  },
  {
    "text": "package deploy and then see ICD tools can help you walk through that whole process the blog on the blog on Sam is",
    "start": "955620",
    "end": "963480"
  },
  {
    "text": "actually really interesting I'll send it around but the I think just like like like all of these society are very",
    "start": "963480",
    "end": "969690"
  },
  {
    "text": "specific and there are specific tools that you can use kind of at every step but the the main takeaway is that",
    "start": "969690",
    "end": "975740"
  },
  {
    "text": "package your stuff up deploy it test it you see ICD where you can because you",
    "start": "975740",
    "end": "982680"
  },
  {
    "text": "definitely don't want to be deploying a bunch of functions by hand forever so a",
    "start": "982680",
    "end": "987930"
  },
  {
    "start": "987000",
    "end": "987000"
  },
  {
    "text": "couple words an API gateway it's been in a couple slides and we have not really touched on it in detail happy to talk",
    "start": "987930",
    "end": "996150"
  },
  {
    "text": "offline with people use mock integrations use your assigned URL for large or binary file uploads use your",
    "start": "996150",
    "end": "1003830"
  },
  {
    "text": "risk request response mapping templates for legacy apps in HTTP and asynchronous",
    "start": "1003830",
    "end": "1009470"
  },
  {
    "text": "calls for lambda over a 30 seconds so definitely look more into into API Cato",
    "start": "1009470",
    "end": "1015200"
  },
  {
    "text": "if you're using it but just a couple of pieces of advice so a greedy variable",
    "start": "1015200",
    "end": "1020870"
  },
  {
    "text": "any method or proxy integration so you start with your route start with your proxy you have any this",
    "start": "1020870",
    "end": "1027650"
  },
  {
    "text": "will automatically scale you'll only pay for the requests that you that you receive so you're starting with your",
    "start": "1027650",
    "end": "1033650"
  },
  {
    "start": "1028000",
    "end": "1028000"
  },
  {
    "text": "route you're adding your proxy on top and then you're doing any so you can scale this up it's it's not specific",
    "start": "1033650",
    "end": "1038870"
  },
  {
    "text": "because you're just doing any after it so it'll scale up automatically and then you only end up paying for the requests",
    "start": "1038870",
    "end": "1044510"
  },
  {
    "text": "and then you put your express up behind that if you have questions on specific",
    "start": "1044510",
    "end": "1049690"
  },
  {
    "text": "on the specific methods we will people will be around afterwards so questions",
    "start": "1049690",
    "end": "1057380"
  },
  {
    "text": "are good so pattern - so batch processing batch processing so moving a",
    "start": "1057380",
    "end": "1063950"
  },
  {
    "text": "rat away from our kind of channel 3t rap so what are some characteristics of batch processing so",
    "start": "1063950",
    "end": "1070530"
  },
  {
    "start": "1068000",
    "end": "1068000"
  },
  {
    "text": "large datasets so scheduled tasks ETL jobs usually really long-running",
    "start": "1070530",
    "end": "1078470"
  },
  {
    "text": "non-interactive this might be a case where you would want to use your your MapReduce model so I think a lot of",
    "start": "1078470",
    "end": "1085500"
  },
  {
    "text": "people have things like this they don't necessarily recognize them as this but you have a bunch of data your data set",
    "start": "1085500",
    "end": "1091650"
  },
  {
    "text": "is very large it either it's scheduled maybe it happens every once in a while and this is definitely I think one of",
    "start": "1091650",
    "end": "1098190"
  },
  {
    "text": "the culprits for a I talked to someone that did this they're like well we just have we have this one data set and we",
    "start": "1098190",
    "end": "1105000"
  },
  {
    "text": "use it every once in a while and it's really important but we didn't we didn't",
    "start": "1105000",
    "end": "1110340"
  },
  {
    "text": "automate anything and we just have the whoever's the most junior software engineer has to do this which is which",
    "start": "1110340",
    "end": "1116700"
  },
  {
    "text": "is great but these are also I think really good candidates for what you can use batch processing for so they're",
    "start": "1116700",
    "end": "1123630"
  },
  {
    "text": "running a long time they're probably asynchronous you they only happen every once in a while so how can we do batch",
    "start": "1123630",
    "end": "1130380"
  },
  {
    "start": "1129000",
    "end": "1129000"
  },
  {
    "text": "processing with serverless we can start off with our s3 object we",
    "start": "1130380",
    "end": "1135750"
  },
  {
    "text": "can use our land of functions we can run in three different tracks we send our mapper results back DynamoDB",
    "start": "1135750",
    "end": "1142200"
  },
  {
    "text": "we put them all back through land again and then we send our results to s3 so a",
    "start": "1142200",
    "end": "1147720"
  },
  {
    "text": "really high-level example of okay I have this really large data set it only happens every once in a while I can take",
    "start": "1147720",
    "end": "1154230"
  },
  {
    "text": "that from s3 I can use my land of functions I can use my functions again for the logic I can send my results back",
    "start": "1154230",
    "end": "1161100"
  },
  {
    "text": "to dynamo and then I can send my final results to back back to s3 so what's happening here though is that I've",
    "start": "1161100",
    "end": "1167040"
  },
  {
    "text": "started off with my really large s3 object I've done the I've done my logic on my data set so I've done my logic on",
    "start": "1167040",
    "end": "1173760"
  },
  {
    "text": "my object and then I've stored it back in s3 with my with my results so the process that it's taking for a for a",
    "start": "1173760",
    "end": "1180540"
  },
  {
    "text": "human hasn't really changed very much in this situation I'm still going and getting a data set from s3 but now it's",
    "start": "1180540",
    "end": "1187350"
  },
  {
    "text": "not the the original data set but it's it's the results that I've performed on that data set so the human part hasn't",
    "start": "1187350",
    "end": "1194190"
  },
  {
    "text": "changed a whole lot but instead we're using lambda to that logic so a couple of things to",
    "start": "1194190",
    "end": "1200030"
  },
  {
    "start": "1199000",
    "end": "1199000"
  },
  {
    "text": "think about speed is directly proportional to the concurrent land of",
    "start": "1200030",
    "end": "1205130"
  },
  {
    "text": "function limit so the the number of lambda functions that you can run at the same time that's where your speed comes",
    "start": "1205130",
    "end": "1210920"
  },
  {
    "text": "from if you have intermediate state so if you're doing something you're doing something to your data set and then you",
    "start": "1210920",
    "end": "1216890"
  },
  {
    "text": "need to do something else in response to that you can store that state in s3 or ElastiCache or dynamo I had some people",
    "start": "1216890",
    "end": "1224990"
  },
  {
    "text": "at the break asked me for some more specific examples Amazon usually calls",
    "start": "1224990",
    "end": "1231770"
  },
  {
    "text": "those reference architectures if you go to the github which is its AWS labs we",
    "start": "1231770",
    "end": "1237050"
  },
  {
    "text": "have a bunch of reference architectures so it's a I'm looking to I'm looking to",
    "start": "1237050",
    "end": "1242179"
  },
  {
    "text": "move from hearing about this in a presentation or reading about this into the documentation to how can I build this myself and what's a way that I",
    "start": "1242179",
    "end": "1248780"
  },
  {
    "text": "might go about structuring those that's a reference architecture if you're looking to build a batch processing job",
    "start": "1248780",
    "end": "1255850"
  },
  {
    "text": "we have a we have a reference architecture for how to do MapReduce with lambda so you'll see the link when",
    "start": "1255850",
    "end": "1263240"
  },
  {
    "text": "it goes out in the actual slides but something probably a good place to start",
    "start": "1263240",
    "end": "1268550"
  },
  {
    "text": "if you're looking to build any of these yourself so costs of batch processing so this",
    "start": "1268550",
    "end": "1273950"
  },
  {
    "text": "does not answer the very specific question earlier on when it makes sense to use easy to over lambda but for so",
    "start": "1273950",
    "end": "1282050"
  },
  {
    "text": "for serverless so we have our we have our example data set so 200 gigabytes normalized Google and gram data set",
    "start": "1282050",
    "end": "1288730"
  },
  {
    "text": "service a thousand concurrent lambda invitations it took nine minutes to process and it",
    "start": "1288730",
    "end": "1294380"
  },
  {
    "text": "cost seven dollars and also six cents it's like 11 pounds anyway that's not",
    "start": "1294380",
    "end": "1301460"
  },
  {
    "text": "very exciting it's not very expensive so but how and you'll see that it's pretty",
    "start": "1301460",
    "end": "1307760"
  },
  {
    "text": "fast also and this is what we said a couple slides ago it's directly proportional to how many Landis you can",
    "start": "1307760",
    "end": "1313880"
  },
  {
    "text": "run concurrently so the more lambdas that you can run concurrently the faster your data set will be processed stream",
    "start": "1313880",
    "end": "1321050"
  },
  {
    "text": "processing is our case number three we we did a very very very high-level",
    "start": "1321050",
    "end": "1326630"
  },
  {
    "text": "example of stream processing and the first one this is a little bit more involved so",
    "start": "1326630",
    "end": "1332750"
  },
  {
    "text": "what are some characteristics of stream processing hi ingest rate so a lot of",
    "start": "1332750",
    "end": "1337760"
  },
  {
    "text": "people and their architecture of stream processing is firehose so you're shoveling a lot of events a lot of data",
    "start": "1337760",
    "end": "1343820"
  },
  {
    "start": "1339000",
    "end": "1339000"
  },
  {
    "text": "in one place so it's ingesting information very rapidly you need real near well real-time or near real-time",
    "start": "1343820",
    "end": "1350950"
  },
  {
    "text": "processing so what is that what does that mean so there's a really really low",
    "start": "1350950",
    "end": "1357530"
  },
  {
    "text": "latency so time from ingest to process so the time between when I get that data",
    "start": "1357530",
    "end": "1363350"
  },
  {
    "text": "and when I processed it needs to be really low often very spiky so for all",
    "start": "1363350",
    "end": "1368960"
  },
  {
    "text": "that you have a very high rate of ingest it's often kind of intermittent so you might get a ton of data and then little",
    "start": "1368960",
    "end": "1376310"
  },
  {
    "text": "data and then a ton of data and then little data message durability and message ordering really important what",
    "start": "1376310",
    "end": "1384380"
  },
  {
    "start": "1383000",
    "end": "1383000"
  },
  {
    "text": "might this look like with serverless kind of the same thing right so we're",
    "start": "1384380",
    "end": "1389600"
  },
  {
    "text": "sending all of our producers all of our sort might be our sensors that might be it's whatever's ingesting our data we're",
    "start": "1389600",
    "end": "1395630"
  },
  {
    "text": "sending it to our Kinesis stream we're using lambda so just like we talked about 9:30 we're using lambda to process",
    "start": "1395630",
    "end": "1402440"
  },
  {
    "text": "the data in that stream I'm sending my intermediate data so we said a little",
    "start": "1402440",
    "end": "1407450"
  },
  {
    "text": "bit earlier about how you could store intermediate data in s3 or elastic cash",
    "start": "1407450",
    "end": "1412640"
  },
  {
    "text": "or dynamo in this case we're sending our intermediate data to s3",
    "start": "1412640",
    "end": "1417830"
  },
  {
    "text": "we're running more land us on top of that we're dispatching and then are sent",
    "start": "1417830",
    "end": "1423260"
  },
  {
    "text": "we're sending our final aggregated output to s3 so it's really and you'll",
    "start": "1423260",
    "end": "1428660"
  },
  {
    "text": "see that there we have a lot of really common threads in these in these architectures right that were we're",
    "start": "1428660",
    "end": "1434030"
  },
  {
    "text": "sending over and it's you know it's not really a secret right it's the exhibit it's what we talked about at 9:30 right",
    "start": "1434030",
    "end": "1440360"
  },
  {
    "text": "so we have we have a bunch of data so we have a bunch of events and that our land of functions or functions are doing",
    "start": "1440360",
    "end": "1447080"
  },
  {
    "text": "something in response to that data and then taking an action based based on",
    "start": "1447080",
    "end": "1452480"
  },
  {
    "text": "that trigger this is the same thing these are just a little bit more realistic versions of what we're doing right so we have a bunch of data going",
    "start": "1452480",
    "end": "1459140"
  },
  {
    "text": "into our stream our land of function is processing the data in that stream we're performing some actions on that data so",
    "start": "1459140",
    "end": "1465620"
  },
  {
    "text": "we're using s3 we're using more land of functions but then we're sending",
    "start": "1465620",
    "end": "1470750"
  },
  {
    "text": "we're sending our final aggregated output back to s3 again so it's really the same thing we needed to take some",
    "start": "1470750",
    "end": "1477830"
  },
  {
    "text": "sort of action we're triggering our lambda function to do that action we're sending our results somewhere where we",
    "start": "1477830",
    "end": "1482990"
  },
  {
    "text": "can use them presumably for something else a little bit more about how this",
    "start": "1482990",
    "end": "1491150"
  },
  {
    "start": "1486000",
    "end": "1486000"
  },
  {
    "text": "works with concurrency so fan-out pattern so you trade higher throughput",
    "start": "1491150",
    "end": "1496580"
  },
  {
    "text": "lower latency for a strict message ordering so if you care about message ordering you're gonna end up going with",
    "start": "1496580",
    "end": "1504190"
  },
  {
    "text": "it'll be slightly if you don't care here's a better way to explain it if I",
    "start": "1504190",
    "end": "1509540"
  },
  {
    "text": "don't care about the order that my messages come through in I can get much higher throughput in lower latency so I",
    "start": "1509540",
    "end": "1516320"
  },
  {
    "text": "can process lots at once because I don't necessarily care about the order that they come through in if however I do",
    "start": "1516320",
    "end": "1522500"
  },
  {
    "text": "care about the order that my message has come through in so I need a very strict",
    "start": "1522500",
    "end": "1527510"
  },
  {
    "text": "message ordering I might use something like I might I have to care a lot more",
    "start": "1527510",
    "end": "1534590"
  },
  {
    "text": "right about how how I process them so I can't go as fast because I need to make sure that they stay in the right order",
    "start": "1534590",
    "end": "1540130"
  },
  {
    "text": "what I can do with fin out is I can same thing so I ingest all my data into my",
    "start": "1540130",
    "end": "1545150"
  },
  {
    "text": "konista stream I have a land of dispatcher and then I process I can use my three windows concurrently so",
    "start": "1545150",
    "end": "1552700"
  },
  {
    "text": "increases throughput reduces latency but the opposite of this is that if I care a",
    "start": "1552700",
    "end": "1560120"
  },
  {
    "text": "lot about this I'm not going to be able to fan out because I have no guarantee when I'm fanning out that my that my",
    "start": "1560120",
    "end": "1566300"
  },
  {
    "text": "messages will stay in the right order but so there's two opposite use cases",
    "start": "1566300",
    "end": "1571910"
  },
  {
    "text": "here though right I either care about it and I'll go a little bit slower because I care about the order or I care less about my order and I can go faster I'm",
    "start": "1571910",
    "end": "1578180"
  },
  {
    "text": "working currently a little bit more about the fan-out so a thousand records",
    "start": "1578180",
    "end": "1585350"
  },
  {
    "text": "per second or megabyte per second I've sent there's a there's another",
    "start": "1585350",
    "end": "1590600"
  },
  {
    "text": "example on here so there's some there's some examples of how to",
    "start": "1590600",
    "end": "1595610"
  },
  {
    "text": "the the parallel lambda in vacations we included a link to someone's project you",
    "start": "1595610",
    "end": "1602510"
  },
  {
    "text": "can also use people are familiar with a dead letter Q a lot of used to just be fur for emails well I guess originally",
    "start": "1602510",
    "end": "1610070"
  },
  {
    "text": "it was probably for actual mail but I don't really know about that but for",
    "start": "1610070",
    "end": "1615140"
  },
  {
    "text": "email it used to be okay so I have an email and I it doesn't it doesn't go through the first time so there's",
    "start": "1615140",
    "end": "1620990"
  },
  {
    "text": "something wrong with my email so it goes to a dead letter Q and then I go back and I retry it so I I'm gonna try X",
    "start": "1620990",
    "end": "1628490"
  },
  {
    "text": "number of times to retry my email before I decided that it doesn't work you can use the same thing with lanta functions",
    "start": "1628490",
    "end": "1635320"
  },
  {
    "text": "so I have a dead letter Q I can retry invitations that have failed so for some",
    "start": "1635320",
    "end": "1641150"
  },
  {
    "text": "reason my function doesn't work I can I can try again from that Q a certain",
    "start": "1641150",
    "end": "1647030"
  },
  {
    "text": "number of times some words about analytics I am NOT going to read this",
    "start": "1647030",
    "end": "1654470"
  },
  {
    "start": "1650000",
    "end": "1650000"
  },
  {
    "text": "sequel outline by the way so if you if you want to look at the at the actual at",
    "start": "1654470",
    "end": "1662270"
  },
  {
    "text": "the actual example the slides will go out high-level though same kind of problem that we've been looking at we",
    "start": "1662270",
    "end": "1668240"
  },
  {
    "text": "put a bunch of data into our Kinesis stream I used my Kinesis analytics on top of that stream and then I send my",
    "start": "1668240",
    "end": "1674630"
  },
  {
    "text": "data to s3 so we're solving the same kinds of problems here we're solving there may be a little just in a little",
    "start": "1674630",
    "end": "1681230"
  },
  {
    "text": "bit of a different way we structured it a little bit different but ultimately we're solving the same kind of problems I have a bunch of data it triggers",
    "start": "1681230",
    "end": "1688309"
  },
  {
    "text": "something that doesn't action on my data and I send my results somewhere else and then you can read the the sequel on your",
    "start": "1688309",
    "end": "1694850"
  },
  {
    "text": "own time so I'm also not going to read this whole table as a whole table out loud also but",
    "start": "1694850",
    "end": "1703400"
  },
  {
    "start": "1696000",
    "end": "1696000"
  },
  {
    "text": "you have some options when you're looking to do services that handle events so there's a couple of different",
    "start": "1703400",
    "end": "1709490"
  },
  {
    "text": "points here on when you choose one or the other so Kinesis versus sqs and SQS you can",
    "start": "1709490",
    "end": "1718640"
  },
  {
    "text": "look through all of these for your specific use case afterwards they have slightly different retention policies",
    "start": "1718640",
    "end": "1724360"
  },
  {
    "text": "message ordering policies scaling policies pick the tool that's",
    "start": "1724360",
    "end": "1730860"
  },
  {
    "text": "right for you if you you need a certain a certain message retention go with the",
    "start": "1730860",
    "end": "1736740"
  },
  {
    "text": "tool that fits your workload but it ultimately it ends up being it's it's",
    "start": "1736740",
    "end": "1742350"
  },
  {
    "text": "it's another question of using the tool that's that's that's right for you so some serverless streaming some best",
    "start": "1742350",
    "end": "1749880"
  },
  {
    "start": "1746000",
    "end": "1746000"
  },
  {
    "text": "practices so tune your batch size when you're triggering lambda through Kinesis streams which will reduce the number of",
    "start": "1749880",
    "end": "1757590"
  },
  {
    "text": "implications tune the memory use KP all the batch messages and saturate Kinesis",
    "start": "1757590",
    "end": "1764419"
  },
  {
    "text": "it's the same these are kind of I think maybe a little intuitive right so you",
    "start": "1764419",
    "end": "1770070"
  },
  {
    "text": "might start off kind of using the default or just okay this works but then you can always go back into things right",
    "start": "1770070",
    "end": "1775980"
  },
  {
    "text": "so tune your bachelors a little bit tune your magic junior tune your memory settings trying to get them most as",
    "start": "1775980",
    "end": "1781950"
  },
  {
    "text": "possible out of your infrastructure to process things as fast as possible or to use your resources as much as possible",
    "start": "1781950",
    "end": "1789320"
  },
  {
    "text": "pattern for I think is not so much a pattern as it is a practice but it's",
    "start": "1789320",
    "end": "1794760"
  },
  {
    "text": "it's automation and the same thing that we talked about we are talking about UCS and and lambda earlier it's that this is",
    "start": "1794760",
    "end": "1800760"
  },
  {
    "text": "a lot of stuff what's what's really great is being able to use lambda for",
    "start": "1800760",
    "end": "1808080"
  },
  {
    "text": "something that you might have had as manual before so you're using it as kind of that glue to handle to handle things",
    "start": "1808080",
    "end": "1814260"
  },
  {
    "text": "that maybe maybe a human had to do before that wasn't really well automated so what are some characteristics of",
    "start": "1814260",
    "end": "1820710"
  },
  {
    "start": "1819000",
    "end": "1819000"
  },
  {
    "text": "automation so I can respond to an alarm or nerve event so this new server",
    "start": "1820710",
    "end": "1826440"
  },
  {
    "text": "started I need to do X in response to this or this alarm has gone off for",
    "start": "1826440",
    "end": "1832320"
  },
  {
    "text": "latency take this action in response to it our periodic jobs we talked about",
    "start": "1832320",
    "end": "1838169"
  },
  {
    "text": "this a little bit earlier as cron jobs so things that I need to run every once in a while or batch processing jobs that",
    "start": "1838169",
    "end": "1843960"
  },
  {
    "text": "need to happen every once in a while auditing and notifications like a new user created to extend functionality in",
    "start": "1843960",
    "end": "1851100"
  },
  {
    "text": "AWS so I need to take an action in this service based on an update in s3",
    "start": "1851100",
    "end": "1857030"
  },
  {
    "text": "available and scalable and so this is actually something that I",
    "start": "1857030",
    "end": "1862750"
  },
  {
    "start": "1859000",
    "end": "1859000"
  },
  {
    "text": "use Linda for when I first got started was ucs used to be that you could only scale the instances and the cluster you",
    "start": "1862750",
    "end": "1871150"
  },
  {
    "text": "couldn't scale the actual the actual the task so the services themselves and true",
    "start": "1871150",
    "end": "1876750"
  },
  {
    "text": "Amazon fashion Amazon promptly wrote that as soon as I had as soon as I did it but um the way that we had done it",
    "start": "1876750",
    "end": "1883750"
  },
  {
    "text": "was with land of functions so we'd watch for a certain event after once it we'd watch her an alarm once it got over a",
    "start": "1883750",
    "end": "1889780"
  },
  {
    "text": "certain threshold we'd changed the desired count of that service to be one greater so that I could handle the",
    "start": "1889780",
    "end": "1895180"
  },
  {
    "text": "traffic and effectively scale at the service level instead it's also really great for doing things like dynamic DNS",
    "start": "1895180",
    "end": "1902080"
  },
  {
    "text": "so if you're using DNS for service discovery so say you have an allocator",
    "start": "1902080",
    "end": "1907270"
  },
  {
    "text": "service and you allocate your traffic through each of those so if you're doing a messaging app this might be really",
    "start": "1907270",
    "end": "1912790"
  },
  {
    "text": "important so you need to allocate traffic maybe do a certain socket so every time a new host comes up I need to",
    "start": "1912790",
    "end": "1919990"
  },
  {
    "text": "know what its DNS is so a really similar example I have my ec2 I have a state",
    "start": "1919990",
    "end": "1925780"
  },
  {
    "text": "change that triggers a rule and cloud watch and from cloud watch I can trigger",
    "start": "1925780",
    "end": "1931180"
  },
  {
    "text": "lambda which will update route 53 and then I can add that to my hosted zone so",
    "start": "1931180",
    "end": "1936760"
  },
  {
    "text": "I've started a new instance I've triggered my rule and cloud watch and then I've used route 53 to create that",
    "start": "1936760",
    "end": "1941950"
  },
  {
    "text": "entry in my hosted zone so that is definitely something that fits the category of would have been manual",
    "start": "1941950",
    "end": "1947680"
  },
  {
    "text": "before but now is not so I'm using that for what would have been someone logging into the hosted zone earlier and",
    "start": "1947680",
    "end": "1953620"
  },
  {
    "text": "updating route 53 I can do that with lambda instead same with thumbnail creation so we",
    "start": "1953620",
    "end": "1961060"
  },
  {
    "text": "talked about we talked about this earlier it's the example in the land of",
    "start": "1961060",
    "end": "1966160"
  },
  {
    "text": "documentation also but I upload a photo it goes to s3 I can use Lando to resize",
    "start": "1966160",
    "end": "1971710"
  },
  {
    "text": "that image and then I can put it back in either the same bucket or a different bucket so all I've done is create a",
    "start": "1971710",
    "end": "1977230"
  },
  {
    "text": "thumbnail but I can use Lando to automate that I have some words from a",
    "start": "1977230",
    "end": "1982960"
  },
  {
    "text": "special guest who is not actually here I may or may not have given him not very",
    "start": "1982960",
    "end": "1988360"
  },
  {
    "text": "much warning that I was doing this so you should feel free to tweet at him and let him local and a celebrity Randall so there's",
    "start": "1988360",
    "end": "1995910"
  },
  {
    "start": "1993000",
    "end": "1993000"
  },
  {
    "text": "a rumor going around that may or may not have been started by me that whim doesn't that Randall is not actually a",
    "start": "1995910",
    "end": "2001970"
  },
  {
    "text": "person he has a collection of land of functions in a trench coat this is true",
    "start": "2001970",
    "end": "2007490"
  },
  {
    "text": "we actually never see him in person we only see him on video presents all jokes",
    "start": "2007490",
    "end": "2014390"
  },
  {
    "text": "about Randall aside a couple tips from someone who knows what he's talking about",
    "start": "2014390",
    "end": "2019400"
  },
  {
    "text": "way more than I do so I asked Randall I said Randall I usually talk about UCS",
    "start": "2019400",
    "end": "2024770"
  },
  {
    "text": "and now I'm talking I'm talking about lambda at the London loft do you have",
    "start": "2024770",
    "end": "2029780"
  },
  {
    "text": "any tips that we could pass on to the people that are listening that maybe would rather you gave the presentation on lambda instead of me and he says so",
    "start": "2029780",
    "end": "2038360"
  },
  {
    "text": "Randall's tips so serverless monolith so you have frameworks that create a single",
    "start": "2038360",
    "end": "2044030"
  },
  {
    "text": "package and route all requests to that one package so what are some pros so",
    "start": "2044030",
    "end": "2049128"
  },
  {
    "text": "easy to port existing applications works really well with your traditional logging easy to keep all your endpoints",
    "start": "2049129",
    "end": "2055970"
  },
  {
    "text": "warm because everything is hooked up this is pretty much the same way that you'd approach a lot of problems right start with everything in one application",
    "start": "2055970",
    "end": "2063310"
  },
  {
    "text": "and then the next step move out individual and points as things",
    "start": "2063310",
    "end": "2068750"
  },
  {
    "text": "break so start off with one piece then move off individual pieces as things",
    "start": "2068750",
    "end": "2074330"
  },
  {
    "text": "start to not work so well if you're building something greenfield you can do the manage endpoint pattern you can use",
    "start": "2074330",
    "end": "2081740"
  },
  {
    "text": "a framework so that there's still a single deployment so you're using you different endpoints you're managing them",
    "start": "2081740",
    "end": "2087050"
  },
  {
    "text": "but you're managing them through a framework so you can deploy everything all in one piece he calls it a nightmare",
    "start": "2087050",
    "end": "2094460"
  },
  {
    "text": "but there's a there's a one to one so every endpoint has done function so each Landa function is tied to one endpoint",
    "start": "2094460",
    "end": "2101050"
  },
  {
    "text": "logging is really difficult but it lets you develop and parallel really quickly",
    "start": "2101050",
    "end": "2106600"
  },
  {
    "text": "on the non web app side so this is what we've been talking about a lot because I think I tend to use this for the web app",
    "start": "2106600",
    "end": "2112820"
  },
  {
    "text": "site also but the glue pattern so glue is what what 99% of the lander",
    "start": "2112820",
    "end": "2119150"
  },
  {
    "text": "deployments are about right so taking an event from one service and doing something with them",
    "start": "2119150",
    "end": "2124250"
  },
  {
    "text": "which is literally all I've been talking about since 9:30 right is that you you have something you take an action with",
    "start": "2124250",
    "end": "2129589"
  },
  {
    "text": "it using a lambda function and then you do something else with it so that's all it is so if services are bricks and lambdas",
    "start": "2129589",
    "end": "2135200"
  },
  {
    "text": "mortar Randell really does love lambda he has a ton of examples that you can",
    "start": "2135200",
    "end": "2140570"
  },
  {
    "text": "look at I've included the link to the reference architectures on this one so",
    "start": "2140570",
    "end": "2146240"
  },
  {
    "text": "if you're this is one this is one reference to architecture there's there's more on this AWS labs github",
    "start": "2146240",
    "end": "2152930"
  },
  {
    "text": "account so if you're looking for a more specific way on how could I build one of these myself try the reference",
    "start": "2152930",
    "end": "2159800"
  },
  {
    "text": "architectures and we have a couple more welt serverless days we have a bunch more sessions coming today and then a",
    "start": "2159800",
    "end": "2167420"
  },
  {
    "text": "workshop this afternoon adrian is at 12:30 and i believe he'll be covering some of the AI stuff some of the step",
    "start": "2167420",
    "end": "2174050"
  },
  {
    "text": "functions but it'll be basically a little bit more specific on how to build applications so stick around for that",
    "start": "2174050",
    "end": "2181609"
  },
  {
    "text": "and then stick around for the workshop I am out right now and I believe we are just about out of time so if you have",
    "start": "2181609",
    "end": "2187910"
  },
  {
    "text": "questions adrian boas and i will all be kind of hanging around the back side of",
    "start": "2187910",
    "end": "2193550"
  },
  {
    "text": "the room so if you have any questions feel free to come and join any of us and then the the slides will be up soon",
    "start": "2193550",
    "end": "2199660"
  },
  {
    "text": "after this so thank you for joining us if you're on twitch feel free to pop in",
    "start": "2199660",
    "end": "2205430"
  },
  {
    "text": "with questions rush the day and we will see you guys back in just a couple of minutes thank you",
    "start": "2205430",
    "end": "2212020"
  }
]