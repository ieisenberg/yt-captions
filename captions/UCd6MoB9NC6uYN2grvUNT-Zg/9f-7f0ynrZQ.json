[
  {
    "text": "hello my name is Jim mcfay and I'm a",
    "start": "399",
    "end": "2360"
  },
  {
    "text": "prototyping Solutions architect at AWS",
    "start": "2360",
    "end": "5359"
  },
  {
    "text": "this video is part of a series of videos",
    "start": "5359",
    "end": "7319"
  },
  {
    "text": "about the OPA on AWS open source",
    "start": "7319",
    "end": "9400"
  },
  {
    "text": "solution to provide AWS related",
    "start": "9400",
    "end": "11559"
  },
  {
    "text": "functionality in your backstage",
    "start": "11559",
    "end": "13200"
  },
  {
    "text": "developer platform in this video we're",
    "start": "13200",
    "end": "15519"
  },
  {
    "text": "going to focus on security related",
    "start": "15519",
    "end": "17160"
  },
  {
    "text": "aspects of the solution as described in",
    "start": "17160",
    "end": "19920"
  },
  {
    "text": "previous videos Opa on AWS is an",
    "start": "19920",
    "end": "22320"
  },
  {
    "text": "open-source solution to help customers",
    "start": "22320",
    "end": "24080"
  },
  {
    "text": "build their internal developer platform",
    "start": "24080",
    "end": "26240"
  },
  {
    "text": "and integrate with AWS the OPA solution",
    "start": "26240",
    "end": "29320"
  },
  {
    "text": "provides the INF structure is code to",
    "start": "29320",
    "end": "31039"
  },
  {
    "text": "run backstage in AWS backstage plugins a",
    "start": "31039",
    "end": "34360"
  },
  {
    "text": "gitlab source code management reference",
    "start": "34360",
    "end": "36399"
  },
  {
    "text": "implementation and an example repository",
    "start": "36399",
    "end": "39000"
  },
  {
    "text": "containing a variety of sample templates",
    "start": "39000",
    "end": "41239"
  },
  {
    "text": "to create environments and applications",
    "start": "41239",
    "end": "43399"
  },
  {
    "text": "in",
    "start": "43399",
    "end": "44200"
  },
  {
    "text": "AWS let's dive into more details about",
    "start": "44200",
    "end": "46840"
  },
  {
    "text": "where and how security and access",
    "start": "46840",
    "end": "48879"
  },
  {
    "text": "control is enforced in the",
    "start": "48879",
    "end": "51559"
  },
  {
    "text": "solution we'll begin with a look at the",
    "start": "51559",
    "end": "53760"
  },
  {
    "text": "account where backstage and opal and AWS",
    "start": "53760",
    "end": "56160"
  },
  {
    "text": "have been deployed we'll refer to this",
    "start": "56160",
    "end": "58559"
  },
  {
    "text": "as the backstage platform",
    "start": "58559",
    "end": "60840"
  },
  {
    "text": "account in this account the backstage",
    "start": "60840",
    "end": "63440"
  },
  {
    "text": "application and its plugins run as a",
    "start": "63440",
    "end": "65478"
  },
  {
    "text": "service in an elastic container service",
    "start": "65479",
    "end": "67600"
  },
  {
    "text": "cluster a gitlab source code management",
    "start": "67600",
    "end": "70200"
  },
  {
    "text": "instance runs as an ec2 instance and",
    "start": "70200",
    "end": "73040"
  },
  {
    "text": "another ec2 instance provides an",
    "start": "73040",
    "end": "74759"
  },
  {
    "text": "environment for gitlab runners to",
    "start": "74759",
    "end": "76880"
  },
  {
    "text": "execute gitlab cicd pipelines a couple",
    "start": "76880",
    "end": "80280"
  },
  {
    "text": "of key roles in the platform account are",
    "start": "80280",
    "end": "82759"
  },
  {
    "text": "the task execution role associated with",
    "start": "82759",
    "end": "85439"
  },
  {
    "text": "backstage and the ec2 instance role",
    "start": "85439",
    "end": "87840"
  },
  {
    "text": "where gitlab Runners execute",
    "start": "87840",
    "end": "90479"
  },
  {
    "text": "before diving into more specifics about",
    "start": "90479",
    "end": "92240"
  },
  {
    "text": "these roles and how they're used let's",
    "start": "92240",
    "end": "94240"
  },
  {
    "text": "expand the architecture a",
    "start": "94240",
    "end": "96040"
  },
  {
    "text": "bit a primary use case of opa on AWS for",
    "start": "96040",
    "end": "99600"
  },
  {
    "text": "platform Engineers is to provision new",
    "start": "99600",
    "end": "102119"
  },
  {
    "text": "environments where business applications",
    "start": "102119",
    "end": "104000"
  },
  {
    "text": "can run for our architecture discussion",
    "start": "104000",
    "end": "107040"
  },
  {
    "text": "we'll bring in another account where a",
    "start": "107040",
    "end": "108840"
  },
  {
    "text": "platform engineer would like to",
    "start": "108840",
    "end": "110159"
  },
  {
    "text": "provision",
    "start": "110159",
    "end": "111399"
  },
  {
    "text": "infrastructure in each Target account",
    "start": "111399",
    "end": "113880"
  },
  {
    "text": "we'll need a role with permissions to",
    "start": "113880",
    "end": "115840"
  },
  {
    "text": "create required AWS resources for an",
    "start": "115840",
    "end": "118200"
  },
  {
    "text": "environment provider so for example if",
    "start": "118200",
    "end": "121119"
  },
  {
    "text": "we wanted to provision an elastic",
    "start": "121119",
    "end": "122640"
  },
  {
    "text": "container service environment to run",
    "start": "122640",
    "end": "124320"
  },
  {
    "text": "containerized applications then this",
    "start": "124320",
    "end": "126520"
  },
  {
    "text": "role will need to be allowed to create",
    "start": "126520",
    "end": "128160"
  },
  {
    "text": "vpcs security groups ECS clusters ECR",
    "start": "128160",
    "end": "131959"
  },
  {
    "text": "repositories and other resources",
    "start": "131959",
    "end": "134000"
  },
  {
    "text": "required to run containerized apps in an",
    "start": "134000",
    "end": "136000"
  },
  {
    "text": "ECS cluster we'll call this role an",
    "start": "136000",
    "end": "138920"
  },
  {
    "text": "environment provisioning",
    "start": "138920",
    "end": "140599"
  },
  {
    "text": "role environment provider resources such",
    "start": "140599",
    "end": "143400"
  },
  {
    "text": "as the ones we just mentioned are",
    "start": "143400",
    "end": "145160"
  },
  {
    "text": "provisioned through terraform cdk or",
    "start": "145160",
    "end": "147800"
  },
  {
    "text": "other infrastructure is code",
    "start": "147800",
    "end": "149120"
  },
  {
    "text": "Technologies",
    "start": "149120",
    "end": "150360"
  },
  {
    "text": "this infrastructure code is executed as",
    "start": "150360",
    "end": "152280"
  },
  {
    "text": "part of a gitlab pipeline therefore the",
    "start": "152280",
    "end": "155200"
  },
  {
    "text": "gitlab runner instance role will assume",
    "start": "155200",
    "end": "157360"
  },
  {
    "text": "the environment provisioning role so",
    "start": "157360",
    "end": "159319"
  },
  {
    "text": "that the required AWS resources are",
    "start": "159319",
    "end": "161400"
  },
  {
    "text": "created using the permission policies of",
    "start": "161400",
    "end": "163640"
  },
  {
    "text": "the environment provisioning role it's",
    "start": "163640",
    "end": "166280"
  },
  {
    "text": "important to note that the OPA on AWS",
    "start": "166280",
    "end": "168400"
  },
  {
    "text": "solution does not create the environment",
    "start": "168400",
    "end": "170440"
  },
  {
    "text": "provisioning role in Target accounts",
    "start": "170440",
    "end": "172920"
  },
  {
    "text": "this must be created outside of the opon",
    "start": "172920",
    "end": "175200"
  },
  {
    "text": "AWS installation and the role should",
    "start": "175200",
    "end": "177319"
  },
  {
    "text": "include a trust policy which allows the",
    "start": "177319",
    "end": "179760"
  },
  {
    "text": "STS assume role action from the gitlab",
    "start": "179760",
    "end": "182000"
  },
  {
    "text": "runner",
    "start": "182000",
    "end": "183920"
  },
  {
    "text": "role with the runtime environment in",
    "start": "183920",
    "end": "186239"
  },
  {
    "text": "place for business applications the next",
    "start": "186239",
    "end": "188680"
  },
  {
    "text": "workflow that we'll cover is deployment",
    "start": "188680",
    "end": "190599"
  },
  {
    "text": "of applications to the environment this",
    "start": "190599",
    "end": "192959"
  },
  {
    "text": "is a use case that is usually performed",
    "start": "192959",
    "end": "194920"
  },
  {
    "text": "by an application developer when the",
    "start": "194920",
    "end": "197360"
  },
  {
    "text": "environment provider is provisioned",
    "start": "197360",
    "end": "199159"
  },
  {
    "text": "there is an I am role created in the",
    "start": "199159",
    "end": "201280"
  },
  {
    "text": "account which is responsible for",
    "start": "201280",
    "end": "202799"
  },
  {
    "text": "provisioning application resources such",
    "start": "202799",
    "end": "205080"
  },
  {
    "text": "as ECS Services S3 buckets KMS Keys",
    "start": "205080",
    "end": "209000"
  },
  {
    "text": "application load balancers and other AWS",
    "start": "209000",
    "end": "211640"
  },
  {
    "text": "resources required to run an application",
    "start": "211640",
    "end": "213799"
  },
  {
    "text": "in the",
    "start": "213799",
    "end": "215400"
  },
  {
    "text": "environment the role that has permission",
    "start": "215400",
    "end": "217560"
  },
  {
    "text": "to create these AWS resources is",
    "start": "217560",
    "end": "219480"
  },
  {
    "text": "referred to as the application",
    "start": "219480",
    "end": "221159"
  },
  {
    "text": "provisioning role application resources",
    "start": "221159",
    "end": "224120"
  },
  {
    "text": "are created through infrastructures code",
    "start": "224120",
    "end": "226000"
  },
  {
    "text": "similar to what we just covered with",
    "start": "226000",
    "end": "227319"
  },
  {
    "text": "environment providers that",
    "start": "227319",
    "end": "229280"
  },
  {
    "text": "infrastructure's code is executed as",
    "start": "229280",
    "end": "231000"
  },
  {
    "text": "part of the application's cicd pipeline",
    "start": "231000",
    "end": "234200"
  },
  {
    "text": "so here we also have the gitlab runner",
    "start": "234200",
    "end": "236159"
  },
  {
    "text": "role assuming the application",
    "start": "236159",
    "end": "237799"
  },
  {
    "text": "provisioning role when the pipeline runs",
    "start": "237799",
    "end": "239680"
  },
  {
    "text": "runs so that the AWS resources for the",
    "start": "239680",
    "end": "241840"
  },
  {
    "text": "application are",
    "start": "241840",
    "end": "244680"
  },
  {
    "text": "created once the application resources",
    "start": "245640",
    "end": "248040"
  },
  {
    "text": "are provisioned a developer will want to",
    "start": "248040",
    "end": "250040"
  },
  {
    "text": "manage their application they'll want to",
    "start": "250040",
    "end": "252439"
  },
  {
    "text": "perform operations such as configuring",
    "start": "252439",
    "end": "254799"
  },
  {
    "text": "environment variables starting and",
    "start": "254799",
    "end": "256560"
  },
  {
    "text": "stopping the application or reviewing",
    "start": "256560",
    "end": "258479"
  },
  {
    "text": "application",
    "start": "258479",
    "end": "259600"
  },
  {
    "text": "logs these types of actions are",
    "start": "259600",
    "end": "261639"
  },
  {
    "text": "initiated directly from the backstage UI",
    "start": "261639",
    "end": "264080"
  },
  {
    "text": "through widgets contributed by the OPA",
    "start": "264080",
    "end": "265759"
  },
  {
    "text": "on AWS plugins when these operations are",
    "start": "265759",
    "end": "268919"
  },
  {
    "text": "triggered the backstage platform role",
    "start": "268919",
    "end": "270960"
  },
  {
    "text": "will assume a special role which was",
    "start": "270960",
    "end": "273320"
  },
  {
    "text": "created when the environment provider",
    "start": "273320",
    "end": "274800"
  },
  {
    "text": "was provisioned this role is referred to",
    "start": "274800",
    "end": "277280"
  },
  {
    "text": "as the application operations role this",
    "start": "277280",
    "end": "280680"
  },
  {
    "text": "role's policy is configured to",
    "start": "280680",
    "end": "282440"
  },
  {
    "text": "specifically allow only the operations",
    "start": "282440",
    "end": "284560"
  },
  {
    "text": "that would be appropriate for the type",
    "start": "284560",
    "end": "286440"
  },
  {
    "text": "of applications supported in the",
    "start": "286440",
    "end": "288120"
  },
  {
    "text": "environment provider for example in an",
    "start": "288120",
    "end": "291120"
  },
  {
    "text": "ECS environment provider a developer may",
    "start": "291120",
    "end": "293600"
  },
  {
    "text": "start and stop the application or scale",
    "start": "293600",
    "end": "295720"
  },
  {
    "text": "the",
    "start": "295720",
    "end": "297880"
  },
  {
    "text": "service with an understanding",
    "start": "297919",
    "end": "299639"
  },
  {
    "text": "understanding of how backstage and I am",
    "start": "299639",
    "end": "301320"
  },
  {
    "text": "roles are used to run backstage manage",
    "start": "301320",
    "end": "303600"
  },
  {
    "text": "environment provisioning application",
    "start": "303600",
    "end": "305479"
  },
  {
    "text": "provisioning and application operations",
    "start": "305479",
    "end": "307919"
  },
  {
    "text": "let's turn to look at how users interact",
    "start": "307919",
    "end": "309960"
  },
  {
    "text": "with the backstage and opa on AWS",
    "start": "309960",
    "end": "312720"
  },
  {
    "text": "solution out of the box the OPA on AWS",
    "start": "312720",
    "end": "315639"
  },
  {
    "text": "solution includes plugins and",
    "start": "315639",
    "end": "317520"
  },
  {
    "text": "configuration for OCTA as an identity",
    "start": "317520",
    "end": "319840"
  },
  {
    "text": "provider it is also possible to",
    "start": "319840",
    "end": "322039"
  },
  {
    "text": "configure backstage for several other",
    "start": "322039",
    "end": "323680"
  },
  {
    "text": "identity providers for user identity",
    "start": "323680",
    "end": "325319"
  },
  {
    "text": "management and authentication such as",
    "start": "325319",
    "end": "327520"
  },
  {
    "text": "GitHub Google ozero One login and more",
    "start": "327520",
    "end": "331720"
  },
  {
    "text": "reference the URL at the bottom of this",
    "start": "331720",
    "end": "333319"
  },
  {
    "text": "page for details on Backstage",
    "start": "333319",
    "end": "334880"
  },
  {
    "text": "authentication and additional",
    "start": "334880",
    "end": "336360"
  },
  {
    "text": "authentication",
    "start": "336360",
    "end": "338000"
  },
  {
    "text": "providers when the backstage application",
    "start": "338000",
    "end": "340240"
  },
  {
    "text": "starts up it connects to OCTA and",
    "start": "340240",
    "end": "342360"
  },
  {
    "text": "fetches directory information to create",
    "start": "342360",
    "end": "344360"
  },
  {
    "text": "user and group backstage entities in an",
    "start": "344360",
    "end": "346759"
  },
  {
    "text": "aurora postgress database backstage uses",
    "start": "346759",
    "end": "349759"
  },
  {
    "text": "these entities in its catalog to",
    "start": "349759",
    "end": "351199"
  },
  {
    "text": "maintain relationships with other",
    "start": "351199",
    "end": "352840"
  },
  {
    "text": "entities such as ownership relationships",
    "start": "352840",
    "end": "355800"
  },
  {
    "text": "the user and group entities and",
    "start": "355800",
    "end": "357400"
  },
  {
    "text": "relationships can also be used by the",
    "start": "357400",
    "end": "359479"
  },
  {
    "text": "permission framework that we'll look at",
    "start": "359479",
    "end": "361680"
  },
  {
    "text": "shortly as previously mentioned the",
    "start": "361680",
    "end": "363960"
  },
  {
    "text": "backstage application is deployed into",
    "start": "363960",
    "end": "365840"
  },
  {
    "text": "the platform account as an ECS service",
    "start": "365840",
    "end": "369120"
  },
  {
    "text": "it's also fronted by an application load",
    "start": "369120",
    "end": "371800"
  },
  {
    "text": "balancer this ALB is configured with",
    "start": "371800",
    "end": "374280"
  },
  {
    "text": "security groups to only allow access",
    "start": "374280",
    "end": "376479"
  },
  {
    "text": "from specific CER blocks in production",
    "start": "376479",
    "end": "379080"
  },
  {
    "text": "scenarios you may also have other",
    "start": "379080",
    "end": "381000"
  },
  {
    "text": "network Protections in place to control",
    "start": "381000",
    "end": "382880"
  },
  {
    "text": "access to the",
    "start": "382880",
    "end": "384639"
  },
  {
    "text": "application end users access the AL",
    "start": "384639",
    "end": "387199"
  },
  {
    "text": "endpoint URL in their browser requests",
    "start": "387199",
    "end": "389759"
  },
  {
    "text": "are then forwarded to the backstage ECS",
    "start": "389759",
    "end": "391560"
  },
  {
    "text": "service if the user has not previously",
    "start": "391560",
    "end": "393639"
  },
  {
    "text": "authenticated then they are presented",
    "start": "393639",
    "end": "395160"
  },
  {
    "text": "with a login dialogue login and",
    "start": "395160",
    "end": "397160"
  },
  {
    "text": "authentication is delegated to OCTA to",
    "start": "397160",
    "end": "399120"
  },
  {
    "text": "ensure that the user presents valid",
    "start": "399120",
    "end": "400639"
  },
  {
    "text": "credentials and if authenticated then",
    "start": "400639",
    "end": "402800"
  },
  {
    "text": "the user is redirected to the backstage",
    "start": "402800",
    "end": "405160"
  },
  {
    "text": "application subsequent requests during",
    "start": "405160",
    "end": "407319"
  },
  {
    "text": "that user session will include",
    "start": "407319",
    "end": "408960"
  },
  {
    "text": "information about the authenticated user",
    "start": "408960",
    "end": "410919"
  },
  {
    "text": "which can be leveraged by plugins such",
    "start": "410919",
    "end": "412639"
  },
  {
    "text": "as those involved in the permission",
    "start": "412639",
    "end": "414039"
  },
  {
    "text": "framework to restrict what apis and UI",
    "start": "414039",
    "end": "416680"
  },
  {
    "text": "components the user is allowed to access",
    "start": "416680",
    "end": "419400"
  },
  {
    "text": "let's look at permissions in backstage",
    "start": "419400",
    "end": "420879"
  },
  {
    "text": "and opa on AW",
    "start": "420879",
    "end": "422759"
  },
  {
    "text": "us the backstage permissions framework",
    "start": "422759",
    "end": "425560"
  },
  {
    "text": "provides authorization for apis and user",
    "start": "425560",
    "end": "427960"
  },
  {
    "text": "interface actions this provides",
    "start": "427960",
    "end": "430160"
  },
  {
    "text": "backstage contributors and plug-in",
    "start": "430160",
    "end": "431680"
  },
  {
    "text": "authors a way to provide permissions to",
    "start": "431680",
    "end": "433520"
  },
  {
    "text": "users of their plugins backstage",
    "start": "433520",
    "end": "435919"
  },
  {
    "text": "integrators those that are deploying",
    "start": "435919",
    "end": "437759"
  },
  {
    "text": "backstage can then author policies to",
    "start": "437759",
    "end": "440199"
  },
  {
    "text": "Define what users and groups are",
    "start": "440199",
    "end": "441720"
  },
  {
    "text": "authorized to do out of the box the opal",
    "start": "441720",
    "end": "445080"
  },
  {
    "text": "and AWS solution ships with a policy in",
    "start": "445080",
    "end": "447360"
  },
  {
    "text": "place which allows all actions by",
    "start": "447360",
    "end": "449000"
  },
  {
    "text": "default",
    "start": "449000",
    "end": "450479"
  },
  {
    "text": "if you want to override this behavior",
    "start": "450479",
    "end": "451919"
  },
  {
    "text": "and control authorized access then you",
    "start": "451919",
    "end": "454319"
  },
  {
    "text": "write a policy which returns policy",
    "start": "454319",
    "end": "456560"
  },
  {
    "text": "decisions based on defined permissions",
    "start": "456560",
    "end": "458639"
  },
  {
    "text": "and the permission requests coming in",
    "start": "458639",
    "end": "460560"
  },
  {
    "text": "from users for example say a user Sam is",
    "start": "460560",
    "end": "464360"
  },
  {
    "text": "in the human resources developer group",
    "start": "464360",
    "end": "466560"
  },
  {
    "text": "and Sam might perform an action which",
    "start": "466560",
    "end": "468560"
  },
  {
    "text": "requests the ability to view",
    "start": "468560",
    "end": "469840"
  },
  {
    "text": "applications owned by the payments",
    "start": "469840",
    "end": "471680"
  },
  {
    "text": "developer group a policy could return a",
    "start": "471680",
    "end": "474400"
  },
  {
    "text": "decision that denies Sam the ability to",
    "start": "474400",
    "end": "476440"
  },
  {
    "text": "read those applications since Sam isn't",
    "start": "476440",
    "end": "478919"
  },
  {
    "text": "a member of the payments developer",
    "start": "478919",
    "end": "481360"
  },
  {
    "text": "group with policy decisions you can",
    "start": "481360",
    "end": "484000"
  },
  {
    "text": "customize the backstage application to",
    "start": "484000",
    "end": "485840"
  },
  {
    "text": "further enforce authorized access by",
    "start": "485840",
    "end": "488039"
  },
  {
    "text": "disabling actions in the UI such as the",
    "start": "488039",
    "end": "490159"
  },
  {
    "text": "ability to delete entities you can also",
    "start": "490159",
    "end": "493199"
  },
  {
    "text": "completely hide entire widgets such as a",
    "start": "493199",
    "end": "495440"
  },
  {
    "text": "tab on a page or the entire page itself",
    "start": "495440",
    "end": "498360"
  },
  {
    "text": "this prevents users from accessing",
    "start": "498360",
    "end": "500000"
  },
  {
    "text": "information that they shouldn't View at",
    "start": "500000",
    "end": "502280"
  },
  {
    "text": "all enforcement of a policy decision may",
    "start": "502280",
    "end": "505080"
  },
  {
    "text": "also be done at an API level and the",
    "start": "505080",
    "end": "507280"
  },
  {
    "text": "front end may receive a 401 not",
    "start": "507280",
    "end": "509440"
  },
  {
    "text": "authorized response to an API request in",
    "start": "509440",
    "end": "512080"
  },
  {
    "text": "this case you may choose to display an",
    "start": "512080",
    "end": "513919"
  },
  {
    "text": "error message to the user as you can see",
    "start": "513919",
    "end": "516560"
  },
  {
    "text": "there are multiple ways to handle",
    "start": "516560",
    "end": "517959"
  },
  {
    "text": "permission decisions to change the",
    "start": "517959",
    "end": "519560"
  },
  {
    "text": "entire user experience there is detailed",
    "start": "519560",
    "end": "522320"
  },
  {
    "text": "documentation about the backstage",
    "start": "522320",
    "end": "523880"
  },
  {
    "text": "permission framework at the URL shown on",
    "start": "523880",
    "end": "526040"
  },
  {
    "text": "the page",
    "start": "526040",
    "end": "528240"
  },
  {
    "text": "here to assist with getting started with",
    "start": "528240",
    "end": "530440"
  },
  {
    "text": "permissions Opa on AWS provides an",
    "start": "530440",
    "end": "532880"
  },
  {
    "text": "example Opa sample permission policy",
    "start": "532880",
    "end": "535680"
  },
  {
    "text": "file the entire contents of the file are",
    "start": "535680",
    "end": "538040"
  },
  {
    "text": "not included here on this slide but a",
    "start": "538040",
    "end": "539880"
  },
  {
    "text": "few examples of policies returning",
    "start": "539880",
    "end": "541519"
  },
  {
    "text": "decisions are included in the first",
    "start": "541519",
    "end": "544320"
  },
  {
    "text": "example reutilizing a permission",
    "start": "544320",
    "end": "546600"
  },
  {
    "text": "provided in the OPA plugins named read",
    "start": "546600",
    "end": "548880"
  },
  {
    "text": "Opa app audit permission this permission",
    "start": "548880",
    "end": "552160"
  },
  {
    "text": "can be used in a policy to allow or deny",
    "start": "552160",
    "end": "554680"
  },
  {
    "text": "a request to read an application's audit",
    "start": "554680",
    "end": "557120"
  },
  {
    "text": "entries this example is denying users",
    "start": "557120",
    "end": "559800"
  },
  {
    "text": "that are in the testers group from",
    "start": "559800",
    "end": "561240"
  },
  {
    "text": "viewing audit entries for an application",
    "start": "561240",
    "end": "563880"
  },
  {
    "text": "additional permissions in the OPA plugin",
    "start": "563880",
    "end": "565600"
  },
  {
    "text": "are planned for future",
    "start": "565600",
    "end": "567040"
  },
  {
    "text": "releases in the second example we want",
    "start": "567040",
    "end": "569600"
  },
  {
    "text": "to prevent certain users from accessing",
    "start": "569600",
    "end": "571399"
  },
  {
    "text": "specific templates in this snippet we're",
    "start": "571399",
    "end": "573959"
  },
  {
    "text": "examining the type of entity that's part",
    "start": "573959",
    "end": "575600"
  },
  {
    "text": "of the incoming permission request if it",
    "start": "575600",
    "end": "578040"
  },
  {
    "text": "is a template entity kind and the type",
    "start": "578040",
    "end": "580040"
  },
  {
    "text": "of template is an AWS environment or AWS",
    "start": "580040",
    "end": "582519"
  },
  {
    "text": "environment provider then the returned",
    "start": "582519",
    "end": "584800"
  },
  {
    "text": "conditional decision will deny if the",
    "start": "584800",
    "end": "586760"
  },
  {
    "text": "user cannot claim ownership of the",
    "start": "586760",
    "end": "588680"
  },
  {
    "text": "template entity this is a slightly more",
    "start": "588680",
    "end": "591120"
  },
  {
    "text": "complex example but it does give",
    "start": "591120",
    "end": "592959"
  },
  {
    "text": "backstage integrators greater granular",
    "start": "592959",
    "end": "595000"
  },
  {
    "text": "control over authorized access within",
    "start": "595000",
    "end": "597360"
  },
  {
    "text": "the",
    "start": "597360",
    "end": "598120"
  },
  {
    "text": "application see the sample source code",
    "start": "598120",
    "end": "600600"
  },
  {
    "text": "provided in the OPA on AWS open source",
    "start": "600600",
    "end": "602880"
  },
  {
    "text": "repository for more policy decision",
    "start": "602880",
    "end": "605279"
  },
  {
    "text": "examples to help write your own",
    "start": "605279",
    "end": "608160"
  },
  {
    "text": "policies once you've written a policy",
    "start": "608160",
    "end": "610640"
  },
  {
    "text": "you'll need to update the backstage",
    "start": "610640",
    "end": "612240"
  },
  {
    "text": "backend permission plug-in to specify",
    "start": "612240",
    "end": "614399"
  },
  {
    "text": "your",
    "start": "614399",
    "end": "615320"
  },
  {
    "text": "policy once you change the backstage",
    "start": "615320",
    "end": "617760"
  },
  {
    "text": "application configuration or code you",
    "start": "617760",
    "end": "620120"
  },
  {
    "text": "will also need to rebuild and deploy a",
    "start": "620120",
    "end": "622200"
  },
  {
    "text": "new backstage image to",
    "start": "622200",
    "end": "624320"
  },
  {
    "text": "AWS refer to the permission framework",
    "start": "624320",
    "end": "626839"
  },
  {
    "text": "documentation for complete details on",
    "start": "626839",
    "end": "629079"
  },
  {
    "text": "leveraging the permission",
    "start": "629079",
    "end": "631000"
  },
  {
    "text": "framework that concludes the high level",
    "start": "631000",
    "end": "633079"
  },
  {
    "text": "overview of security facets of the OPA",
    "start": "633079",
    "end": "635519"
  },
  {
    "text": "on AWS solution including IM am roles",
    "start": "635519",
    "end": "638480"
  },
  {
    "text": "user authentication through idps and",
    "start": "638480",
    "end": "640800"
  },
  {
    "text": "authorization capabilities through the",
    "start": "640800",
    "end": "642399"
  },
  {
    "text": "backstage permission framework be sure",
    "start": "642399",
    "end": "644639"
  },
  {
    "text": "to watch other videos in the series to",
    "start": "644639",
    "end": "646200"
  },
  {
    "text": "learn more about Opa and how it can help",
    "start": "646200",
    "end": "648120"
  },
  {
    "text": "you scale your",
    "start": "648120",
    "end": "650880"
  },
  {
    "text": "development",
    "start": "653920",
    "end": "656920"
  }
]