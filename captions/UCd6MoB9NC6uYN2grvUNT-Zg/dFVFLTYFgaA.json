[
  {
    "start": "0",
    "end": "113000"
  },
  {
    "text": "good afternoon welcome thanks for taking time out of your very busy family",
    "start": "900",
    "end": "6660"
  },
  {
    "text": "schedule at this time of year and no doubt your business schedules as well and to join us here at reinvent I really",
    "start": "6660",
    "end": "12690"
  },
  {
    "text": "appreciate it so who wants to know how Amazon uses AWS that's next door how",
    "start": "12690",
    "end": "27420"
  },
  {
    "text": "does the Amazon think about using the cloud today what did we think about the cloud when we started what did we learn",
    "start": "27420",
    "end": "34710"
  },
  {
    "text": "and what can you learn from what we've done and the mistakes that we've made today I hope to clear up some myths",
    "start": "34710",
    "end": "41280"
  },
  {
    "text": "about how Amazon is architected share about what we actually architect and",
    "start": "41280",
    "end": "48230"
  },
  {
    "text": "while Amazon uses nearly every AWS product in some way today and we're",
    "start": "48230",
    "end": "53670"
  },
  {
    "text": "almost a hundred percent in ec2 our journey in the cloud has really only",
    "start": "53670",
    "end": "59520"
  },
  {
    "text": "just begun and so I'm going to share today some of the details of some of the",
    "start": "59520",
    "end": "66900"
  },
  {
    "text": "AWS products that we use to serve our website today and most importantly",
    "start": "66900",
    "end": "72210"
  },
  {
    "text": "things that you can take away from that to use in your business immediately after the presentation are you an",
    "start": "72210",
    "end": "79560"
  },
  {
    "text": "enterprise customer in the room looking for information on how to migrate are you a partner looking for opportunities",
    "start": "79560",
    "end": "86400"
  },
  {
    "text": "to actually help those enterprises move hopefully you'll be able to use some of the things that I talked about today to",
    "start": "86400",
    "end": "93360"
  },
  {
    "text": "take back to your business and use right away hello my name is Gavin I lead an",
    "start": "93360",
    "end": "98970"
  },
  {
    "text": "organization in our consumer division at Amazon that's responsible for",
    "start": "98970",
    "end": "104780"
  },
  {
    "text": "transitioning the consumer businesses technology into AWS",
    "start": "104780",
    "end": "111289"
  },
  {
    "start": "113000",
    "end": "221000"
  },
  {
    "text": "let's think for a moment about the priorities for an ism I'm hoping that",
    "start": "114439",
    "end": "122119"
  },
  {
    "text": "our priorities match your priorities because our customers in many ways are",
    "start": "122119",
    "end": "128269"
  },
  {
    "text": "likely to be your customers also and as I was putting this slide together and a",
    "start": "128269",
    "end": "133910"
  },
  {
    "text": "couple days ago I was reminded about a Jeff Bezos quote that I heard a long time ago in the future no customer will",
    "start": "133910",
    "end": "144019"
  },
  {
    "text": "ever expect or want a higher price in the future no customer will ever say I",
    "start": "144019",
    "end": "152209"
  },
  {
    "text": "want this website to take longer in the future no customer will ever say I want",
    "start": "152209",
    "end": "160670"
  },
  {
    "text": "this website to be unavailable unless of course there's a breach in which case",
    "start": "160670",
    "end": "169160"
  },
  {
    "text": "I'd rather the site be down than disclosing my personal data and I'm sure",
    "start": "169160",
    "end": "174799"
  },
  {
    "text": "you'd prefer the same to these statements define our priorities for",
    "start": "174799",
    "end": "182630"
  },
  {
    "text": "architecture at Amazon and when it comes to our move to the cloud and to AWS it's",
    "start": "182630",
    "end": "189709"
  },
  {
    "text": "exactly the same when we consider what AWS provides us and you we believe that",
    "start": "189709",
    "end": "197299"
  },
  {
    "text": "it helps in each and every one of these areas now I've been at Amazon more years",
    "start": "197299",
    "end": "204980"
  },
  {
    "text": "than I care to remember I've been in Amazon 11 years now and so I know many of the leaders in AWS personally who",
    "start": "204980",
    "end": "211940"
  },
  {
    "text": "build the products on which we depend and I can tell you now that these priorities are their priorities as well",
    "start": "211940",
    "end": "220629"
  },
  {
    "start": "221000",
    "end": "314000"
  },
  {
    "text": "so how much does Amazon need to migrate now I'm not showing you these numbers to",
    "start": "222099",
    "end": "229700"
  },
  {
    "text": "boast about how big Amazon is Amazon's huge by some sources in the internet we",
    "start": "229700",
    "end": "236510"
  },
  {
    "text": "have a lot of traffic every day to our website this number here is a some",
    "start": "236510",
    "end": "242539"
  },
  {
    "text": "public source that the measures traffic across the Internet and this is just for Amazon",
    "start": "242539",
    "end": "249140"
  },
  {
    "text": "and so reportedly we have 40 billion requests to our website every day",
    "start": "249140",
    "end": "254530"
  },
  {
    "text": "directionally correct at least we run a business in 13 different countries I",
    "start": "254530",
    "end": "260750"
  },
  {
    "text": "consumer business we have customers from every country in the world that buy books and apparently there's some other",
    "start": "260750",
    "end": "267590"
  },
  {
    "text": "stuff on the website these days we ship the brown boxes to you that arrive at",
    "start": "267590",
    "end": "273440"
  },
  {
    "text": "your doorstep all around the world there are hundreds of thousands of remote web",
    "start": "273440",
    "end": "279229"
  },
  {
    "text": "services that sit behind the Amazon websites and to to illustrate the size",
    "start": "279229",
    "end": "287720"
  },
  {
    "text": "is really only to demonstrate that if Amazon can move to AWS technologies",
    "start": "287720",
    "end": "293840"
  },
  {
    "text": "without interruption to its service then this should be easy for all of those of",
    "start": "293840",
    "end": "299150"
  },
  {
    "text": "you in the room which I'm guessing is many of you that don't have websites or",
    "start": "299150",
    "end": "304400"
  },
  {
    "text": "applications that are nearly as complex there should be chicken feed for you if Amazon can do it",
    "start": "304400",
    "end": "311198"
  },
  {
    "start": "314000",
    "end": "490000"
  },
  {
    "text": "so despite some myths that you may have heard Amazon has not always been on AWS",
    "start": "314200",
    "end": "322539"
  },
  {
    "text": "Amazon to 20 year old business the cloud not nearly as old we started out where",
    "start": "322539",
    "end": "330889"
  },
  {
    "text": "I'm guessing some of you in the room are today on-premise fleets databases",
    "start": "330889",
    "end": "337789"
  },
  {
    "text": "frameworks and it's been a long journey to migrate from all of those things for",
    "start": "337789",
    "end": "343160"
  },
  {
    "text": "us I was actually around in 2008 when Amazon very first moved its first",
    "start": "343160",
    "end": "349190"
  },
  {
    "text": "application onto ec2 which happened to be the amazon.com website and we're",
    "start": "349190",
    "end": "354380"
  },
  {
    "text": "still taking that journey today we've moved from owning the networking the",
    "start": "354380",
    "end": "359450"
  },
  {
    "text": "routers the racks air-conditioning worrying about third-party vendor software legacy in-house technologies",
    "start": "359450",
    "end": "365530"
  },
  {
    "text": "it's been a journey to move from the problems that we know and it'll be a",
    "start": "365530",
    "end": "370669"
  },
  {
    "text": "journey for you to move from the problems that you know to these new challenges and new opportunities that we",
    "start": "370669",
    "end": "375830"
  },
  {
    "text": "all face in AWS today with somewhere in",
    "start": "375830",
    "end": "381289"
  },
  {
    "text": "the middle of this diagram we still have a very small number of things in our on Prem",
    "start": "381289",
    "end": "387180"
  },
  {
    "text": "systems we still have a lot of proprietary legacy technology and we",
    "start": "387180",
    "end": "392760"
  },
  {
    "text": "have a bunch of stuff that's in the cloud some of it lifted and shifted into ec2 some of it purely native using",
    "start": "392760",
    "end": "400500"
  },
  {
    "text": "lambdas and containers SQS simple email service all of those things so it I'm",
    "start": "400500",
    "end": "412080"
  },
  {
    "text": "curious show of hands in the room to understand a little bit more about where you are in",
    "start": "412080",
    "end": "418170"
  },
  {
    "text": "your cloud journey how many of you purely on Prem couple ok how many of you",
    "start": "418170",
    "end": "426240"
  },
  {
    "text": "somewhere in the middle in some hybrid most of you ok anyone lucky enough to be",
    "start": "426240",
    "end": "432810"
  },
  {
    "text": "born native in the cloud ok good",
    "start": "432810",
    "end": "438030"
  },
  {
    "text": "it sounds great to be born native in the cloud but as you've heard during the",
    "start": "438030",
    "end": "444030"
  },
  {
    "text": "course of reinvent today at the last couple days AWS is innovating at a",
    "start": "444030",
    "end": "449430"
  },
  {
    "text": "massive clip and just because you're all in on the cloud doesn't mean that you",
    "start": "449430",
    "end": "454830"
  },
  {
    "text": "can sit back and call it job done for Amazon it's also true in some respects",
    "start": "454830",
    "end": "464100"
  },
  {
    "text": "our journey in the cloud is still at day one and that's a really exciting place to be I'm excited about what we've seen",
    "start": "464100",
    "end": "471360"
  },
  {
    "text": "at Amazon and the opportunities that moving to the cloud gives us being here at reinvent and experiencing how all of",
    "start": "471360",
    "end": "478410"
  },
  {
    "text": "you are embracing the cloud and what opportunities you've been able to unlock gives me even more confidence that this",
    "start": "478410",
    "end": "484080"
  },
  {
    "text": "is the right journey for Amazon and for everybody else",
    "start": "484080",
    "end": "489650"
  },
  {
    "start": "490000",
    "end": "630000"
  },
  {
    "text": "so I'm gonna filter for a moment the journey that Amazon is on I'm gonna",
    "start": "495230",
    "end": "500760"
  },
  {
    "text": "ignore some of the spaghetti of the hundreds of thousands of remote services and tens of thousands of applications on",
    "start": "500760",
    "end": "507720"
  },
  {
    "text": "our website I'm gonna focus on a few key stories that highlight our migration",
    "start": "507720",
    "end": "513479"
  },
  {
    "text": "that highlight our er Kotecha that highlight some of our elimination",
    "start": "513479",
    "end": "519120"
  },
  {
    "text": "of undifferentiated technology at the same time following our guiding",
    "start": "519120",
    "end": "524550"
  },
  {
    "text": "principles in some ways Amazon is just a novel application that sits on top of",
    "start": "524550",
    "end": "531570"
  },
  {
    "text": "AWS primitives today we're really going to focus on those pieces of a migration",
    "start": "531570",
    "end": "537680"
  },
  {
    "text": "that are most important to our customers things that we've learned that should",
    "start": "537680",
    "end": "542940"
  },
  {
    "text": "apply to everyone here at things like adopting CloudFront reduced latency for",
    "start": "542940",
    "end": "550020"
  },
  {
    "text": "most of our customers enabling route 53 enabled our business to migrate to the",
    "start": "550020",
    "end": "557610"
  },
  {
    "text": "cloud seamlessly without any downtime and gave us lots of options to roll back",
    "start": "557610",
    "end": "563870"
  },
  {
    "text": "using cloud front simplified the management of our secure connections to customers really enabling us to make our",
    "start": "563870",
    "end": "571290"
  },
  {
    "text": "whole website secure by default and to do it incrementally using lambda at the",
    "start": "571290",
    "end": "577980"
  },
  {
    "text": "edge reduces our costs by letting us move business logic out of our back-end",
    "start": "577980",
    "end": "583830"
  },
  {
    "text": "technology and reducing the amount of traffic that our existing website stacks have to service using the website",
    "start": "583830",
    "end": "593010"
  },
  {
    "text": "Application Firewall the woth inside of CloudFront wasn't hard to use and it also saves us a huge amount of capacity",
    "start": "593010",
    "end": "601800"
  },
  {
    "text": "needed in the backend because we're able to stop unwanted traffic actually ever reaching our applications and everyone",
    "start": "601800",
    "end": "609090"
  },
  {
    "text": "could take advantage of the denial of service capability that's provided in shield staffed by the very same people",
    "start": "609090",
    "end": "615120"
  },
  {
    "text": "that Amazon uses to protect its website hopefully today you'll see the",
    "start": "615120",
    "end": "622040"
  },
  {
    "text": "amazon.com x' architectural design and how we use AWS is",
    "start": "622040",
    "end": "627260"
  },
  {
    "text": "something that you should absolutely consider using yourself let's take a look a little bit more of the details as",
    "start": "627260",
    "end": "636110"
  },
  {
    "start": "630000",
    "end": "828000"
  },
  {
    "text": "with all projects at Amazon we start from the customer and work backwards you",
    "start": "636110",
    "end": "642950"
  },
  {
    "text": "may have heard of our working backwards program or process pretty much everything we do and certainly every one",
    "start": "642950",
    "end": "649250"
  },
  {
    "text": "of my whiteboard presentations or PowerPoint slides typically starts with the customer and works backwards so our",
    "start": "649250",
    "end": "656090"
  },
  {
    "text": "customer devices start by talking to route 53 how do I get to Amazon",
    "start": "656090",
    "end": "663460"
  },
  {
    "text": "well route 53 uses a bunch of weighted rules so that it then tells customers",
    "start": "663460",
    "end": "670640"
  },
  {
    "text": "which have a multiple CDNs we actually want to send them through and yes Amazon",
    "start": "670640",
    "end": "676970"
  },
  {
    "text": "doesn't just use CloudFront we actually have a multi vendor strategy for our CDN things and some of them are actually in",
    "start": "676970",
    "end": "683420"
  },
  {
    "text": "the room watching us today to hold me accountable for making sure that I include them and our CD ends the route",
    "start": "683420",
    "end": "694940"
  },
  {
    "text": "53 can also send traffic directly to our origin but the CD ends are configured to then sand traffic customer traffic",
    "start": "694940",
    "end": "702110"
  },
  {
    "text": "through to our origins our origins live on ec2 inside a V PC but really they're",
    "start": "702110",
    "end": "708470"
  },
  {
    "text": "just a reverse proxy just might be a little bit of a understatement but our",
    "start": "708470",
    "end": "714470"
  },
  {
    "text": "reverse proxy allows us to do advanced traffic routing and request manipulation before and after our web server fleets",
    "start": "714470",
    "end": "721820"
  },
  {
    "text": "take over our web server fleets typically these days live in a situ in",
    "start": "721820",
    "end": "727670"
  },
  {
    "text": "their own VPC in the original days when we moved our website from our home pram",
    "start": "727670",
    "end": "733310"
  },
  {
    "text": "they had a lot of we had a lot of stuff than not in the cloud but now as we're",
    "start": "733310",
    "end": "738620"
  },
  {
    "text": "in the cloud we're able to route different traffic to different parts of cloud technologist so applications that",
    "start": "738620",
    "end": "745100"
  },
  {
    "text": "live in containers we can route individually and separately from applications that live on ec2 instances",
    "start": "745100",
    "end": "751370"
  },
  {
    "text": "or in lambdas the important part here",
    "start": "751370",
    "end": "757190"
  },
  {
    "text": "will this architecture allowed us to do migrations incrementally so we were able",
    "start": "757190",
    "end": "763250"
  },
  {
    "text": "to leave our gateway pages in our own Prem data centers while moving our",
    "start": "763250",
    "end": "769790"
  },
  {
    "text": "product detail pages into the cloud why would you want to do this well for us at",
    "start": "769790",
    "end": "778070"
  },
  {
    "text": "least it was about an incremental migration Amazon is tens of thousands of applications owned by thousands of",
    "start": "778070",
    "end": "785180"
  },
  {
    "text": "different development teams and we wanted to be able to move each one incrementally and independently from",
    "start": "785180",
    "end": "790550"
  },
  {
    "text": "each other we're also a very data-driven company and we innovate incrementally as",
    "start": "790550",
    "end": "796490"
  },
  {
    "text": "much as we innovate in a revolutionary way and so we were able to evaluate each",
    "start": "796490",
    "end": "803420"
  },
  {
    "text": "and every one of our migration steps and ensure that each one of them improve the customer experience each time tools like",
    "start": "803420",
    "end": "811400"
  },
  {
    "text": "at our origin proxy allowed us to do that very well but with the launch of",
    "start": "811400",
    "end": "816500"
  },
  {
    "text": "the application load bouncer you can do the same thing using routes in in alb",
    "start": "816500",
    "end": "823390"
  },
  {
    "text": "now let me dive into the architecture and I'll show you some of how each part works",
    "start": "823390",
    "end": "828730"
  },
  {
    "start": "828000",
    "end": "890000"
  },
  {
    "text": "we'll start with around 53 to make sure that our customers can get to the right place now route 53 is really just",
    "start": "828730",
    "end": "840800"
  },
  {
    "text": "self-service DNS management service with a bunch of control plane api's it's got",
    "start": "840800",
    "end": "846860"
  },
  {
    "text": "a weighted routing policy that allows the Amazon to direct traffic to different places talked a bit about that",
    "start": "846860",
    "end": "852080"
  },
  {
    "text": "before you should think about doing this if you're in the process of migrating to",
    "start": "852080",
    "end": "857660"
  },
  {
    "text": "the cloud for some or all of your workloads think about having the ability to dial up and dial down your traffic",
    "start": "857660",
    "end": "864110"
  },
  {
    "text": "with weighted cnames to your new applications what if your",
    "start": "864110",
    "end": "869960"
  },
  {
    "text": "new version of your new website doesn't work the way you want wouldn't it be nice to be able to roll it back in just",
    "start": "869960",
    "end": "876350"
  },
  {
    "text": "a single minute amazon's learned that the best way for us to do that and the",
    "start": "876350",
    "end": "881870"
  },
  {
    "text": "fastest and safest way for us to do that is to actually use the route 53 configuration api's",
    "start": "881870",
    "end": "889570"
  },
  {
    "start": "890000",
    "end": "975000"
  },
  {
    "text": "let's look at what dub-dub-dub done amazon.com really is any of you with a",
    "start": "891730",
    "end": "898910"
  },
  {
    "text": "laptop open right now you can go do an nslookup and you'll get something that looks very similar to this hosted by",
    "start": "898910",
    "end": "905810"
  },
  {
    "text": "route 53 dub-dub-dub done amazon.com it's actually just a seening canonical",
    "start": "905810",
    "end": "911209"
  },
  {
    "text": "name points to dub dub dub CD n dot amazon.com and then see the end on",
    "start": "911209",
    "end": "917510"
  },
  {
    "text": "amazon.com in this particular example is just a weighted C name for our",
    "start": "917510",
    "end": "922730"
  },
  {
    "text": "CloudFront distribution but this might also list some other CDN vendor or it",
    "start": "922730",
    "end": "930800"
  },
  {
    "text": "may list our origin it depends on the weighting the route 53 does for any",
    "start": "930800",
    "end": "935959"
  },
  {
    "text": "given request so if you do this enough times now in the room you'll probably see a good mix of all three of those and",
    "start": "935959",
    "end": "943390"
  },
  {
    "text": "finally behind our CloudFront distribution there's an IP address that gets given back to the client and that's",
    "start": "943390",
    "end": "950270"
  },
  {
    "text": "where the device actually ends up going that's where cloud front starts processing the traffic and then decides",
    "start": "950270",
    "end": "957589"
  },
  {
    "text": "whether or not to send it on to our origin it's easier to see in a picture",
    "start": "957589",
    "end": "963250"
  },
  {
    "text": "so user types in the website address around 53 does it's magic and decides",
    "start": "963250",
    "end": "969830"
  },
  {
    "text": "which of our origins or CD ends to send that traffic home team if you want to",
    "start": "969830",
    "end": "977180"
  },
  {
    "start": "975000",
    "end": "1033000"
  },
  {
    "text": "try this you can set it up in around 53 just by creating a record set in your",
    "start": "977180",
    "end": "982220"
  },
  {
    "text": "origin then you set weights on each cname create a weighted routing policy",
    "start": "982220",
    "end": "988130"
  },
  {
    "text": "to the origin and see the end that way you can just mix and match as and when",
    "start": "988130",
    "end": "993320"
  },
  {
    "text": "you see fit why is that important well many times you want to do your own application experiments sometimes the",
    "start": "993320",
    "end": "1000430"
  },
  {
    "text": "CDN vendors or your origin may be doing some maintenance and they want you to switch off for a while being able to",
    "start": "1000430",
    "end": "1006520"
  },
  {
    "text": "switch really quickly and really easily super important at least to us this is",
    "start": "1006520",
    "end": "1011620"
  },
  {
    "text": "how Amazon switched from serving all of its traffic from its origin to using multiple CDN providers and allowed us to",
    "start": "1011620",
    "end": "1019209"
  },
  {
    "text": "do a major migration with really really tight control and no code changes now this is great",
    "start": "1019209",
    "end": "1025630"
  },
  {
    "text": "because now you can actually measure the impact of your migration on your customers as you dial up each of these",
    "start": "1025630",
    "end": "1031030"
  },
  {
    "text": "changes so what does this really look like well here's a screenshot of our AWS",
    "start": "1031030",
    "end": "1041079"
  },
  {
    "start": "1033000",
    "end": "1141000"
  },
  {
    "text": "console for CDN or amazon.com first you",
    "start": "1041079",
    "end": "1049900"
  },
  {
    "text": "can see that there's a seeming second we",
    "start": "1049900",
    "end": "1054940"
  },
  {
    "text": "just set some common TTLs time to lives so that when we make changes to our records there's some",
    "start": "1054940",
    "end": "1061690"
  },
  {
    "text": "predictable behavior across the internet as different providers update their DNS records third we just put in our",
    "start": "1061690",
    "end": "1070300"
  },
  {
    "text": "platform distribution in this case or any one of our other CDN endpoints or",
    "start": "1070300",
    "end": "1075880"
  },
  {
    "text": "our origin then we just select a weighted routing policy and then we",
    "start": "1075880",
    "end": "1083559"
  },
  {
    "text": "enter the weights that we want in our case we've got multiple entries here and we like to think of these weightings as",
    "start": "1083559",
    "end": "1090429"
  },
  {
    "text": "a percentage so 95 here for us represents 95 percent of our traffic is",
    "start": "1090429",
    "end": "1096280"
  },
  {
    "text": "gonna get routed through our plow front distribution in this example now don't worry if you're one of those 5% of",
    "start": "1096280",
    "end": "1103000"
  },
  {
    "text": "customers who's trying to visit our website right now you're not gonna get black hold you're just gonna get sent through to one of the other CDN",
    "start": "1103000",
    "end": "1109660"
  },
  {
    "text": "providers now I'm a builder at heart and",
    "start": "1109660",
    "end": "1116770"
  },
  {
    "text": "I know this sort of functionality and flexibility could be built in other ways",
    "start": "1116770",
    "end": "1122260"
  },
  {
    "text": "I could've architected a whole bunch of different stuff to do myself but honestly it's not differentiated for me",
    "start": "1122260",
    "end": "1130030"
  },
  {
    "text": "I'd rather have someone I'd rather be able to do something else to help customers get to Amazon faster so let's",
    "start": "1130030",
    "end": "1137919"
  },
  {
    "text": "go improve latency wouldn't you like to",
    "start": "1137919",
    "end": "1143320"
  },
  {
    "start": "1141000",
    "end": "1338000"
  },
  {
    "text": "improve latency for every one of your users without changing a line of code no",
    "start": "1143320",
    "end": "1149950"
  },
  {
    "text": "one really okay maybe I can finish early and we're",
    "start": "1149950",
    "end": "1155390"
  },
  {
    "text": "all good here's how Amazon was able to do this without changing a line of code maybe no",
    "start": "1155390",
    "end": "1163700"
  },
  {
    "text": "surprise but for Amazon the latency experienced and observed by our customers can be the difference between",
    "start": "1163700",
    "end": "1170210"
  },
  {
    "text": "a conversion and an abandoned it's extremely important to us that our",
    "start": "1170210",
    "end": "1175790"
  },
  {
    "text": "customers experience the absolute fastest possible website CloudFront",
    "start": "1175790",
    "end": "1183130"
  },
  {
    "text": "distributed pop locations and indeed other CDN vendors reduces specifically",
    "start": "1183130",
    "end": "1189380"
  },
  {
    "text": "the time it takes to connect a TCP connection directly to a client it",
    "start": "1189380",
    "end": "1194600"
  },
  {
    "text": "reduces the physical round-trip time the physical distance that the connection has to travel from a customer's device",
    "start": "1194600",
    "end": "1201410"
  },
  {
    "text": "and between our servers behind CloudFront we then use routing rules and",
    "start": "1201410",
    "end": "1207530"
  },
  {
    "text": "so we can measure the impact of changing those data centers availability zones whatever we want to do behind them",
    "start": "1207530",
    "end": "1213940"
  },
  {
    "text": "importantly CloudFront reuses the connection between its servers and house",
    "start": "1213940",
    "end": "1221140"
  },
  {
    "text": "so it doesn't have to re-establish them for every connection that the customer makes they terminate TLS or SSL for us",
    "start": "1221140",
    "end": "1230000"
  },
  {
    "text": "at the edge super super important given the multiple handshakes that TLS has",
    "start": "1230000",
    "end": "1235610"
  },
  {
    "text": "it's critical that that doesn't have to traverse very large distances and lastly",
    "start": "1235610",
    "end": "1242650"
  },
  {
    "text": "cloud front supports HTTP two at the very place where it matters most to our",
    "start": "1242650",
    "end": "1249530"
  },
  {
    "text": "customers sure there's some other optimizations that are really interesting that HTTP 2 can give us but",
    "start": "1249530",
    "end": "1256280"
  },
  {
    "text": "the connection pooling and the connection reuse is super super interesting and it really is easy to",
    "start": "1256280",
    "end": "1262220"
  },
  {
    "text": "implement at the front end and it gives the most benefit to customer connection speeds reduces latency and in many cases",
    "start": "1262220",
    "end": "1270590"
  },
  {
    "text": "saves battery life especially on mobile devices now each one of these advantages",
    "start": "1270590",
    "end": "1276350"
  },
  {
    "text": "that I just talked about for cloud front or indeed any other CDN vendor could have been resolved elsewhere in other",
    "start": "1276350",
    "end": "1284150"
  },
  {
    "text": "code and believe me I've watched over the years Amazon spend huge amounts of engineering",
    "start": "1284150",
    "end": "1291200"
  },
  {
    "text": "time trying to make our applications faster but in this particular case",
    "start": "1291200",
    "end": "1297580"
  },
  {
    "text": "making these improvements really for us is undifferentiated work it's work that",
    "start": "1297580",
    "end": "1304249"
  },
  {
    "text": "our customers don't love Amazon for its customers it's work that customers",
    "start": "1304249",
    "end": "1309379"
  },
  {
    "text": "expect to have already been done customers would prefer us and we'd",
    "start": "1309379",
    "end": "1315200"
  },
  {
    "text": "prefer to be building them new echo devices lowering prices shipping more",
    "start": "1315200",
    "end": "1320509"
  },
  {
    "text": "books inboxes we'd much rather not have to do thousands and thousands of HTTP -",
    "start": "1320509",
    "end": "1327320"
  },
  {
    "text": "migrations that's why Amazon is really all-in on a",
    "start": "1327320",
    "end": "1333259"
  },
  {
    "text": "lot of these cloud technologies let's look at some data but we're looking at",
    "start": "1333259",
    "end": "1343159"
  },
  {
    "start": "1338000",
    "end": "1503000"
  },
  {
    "text": "him it's the average latency of Amazon's website as seen by customers every page",
    "start": "1343159",
    "end": "1349999"
  },
  {
    "text": "on Amazon is instrumented we don't rely on third-party metrics or analytics we",
    "start": "1349999",
    "end": "1357409"
  },
  {
    "text": "actually have our website instrumented for every single page request that you as a customer will make the green line",
    "start": "1357409",
    "end": "1363619"
  },
  {
    "text": "here represents the average latency across our website of traffic that flows",
    "start": "1363619",
    "end": "1368989"
  },
  {
    "text": "directly to our origin the blue line represents traffic that goes through",
    "start": "1368989",
    "end": "1374929"
  },
  {
    "text": "CloudFront and it's a very similar line that we see when we use other CDN",
    "start": "1374929",
    "end": "1380509"
  },
  {
    "text": "vendors also what you can see here clearly is exactly what our customers",
    "start": "1380509",
    "end": "1388399"
  },
  {
    "text": "see not only did we see a substantial drop in latency by adopting CloudFront",
    "start": "1388399",
    "end": "1396399"
  },
  {
    "text": "but we saw a much more consistent experience across every geographic",
    "start": "1396399",
    "end": "1402710"
  },
  {
    "text": "region that we deployed this for all of the websites that we own bought it and",
    "start": "1402710",
    "end": "1407929"
  },
  {
    "text": "Amazon's got thousands of different websites that it uses it's not just the Amazon retail branded websites that have",
    "start": "1407929",
    "end": "1414470"
  },
  {
    "text": "adopted this but some of our more complicated web sites that we have for sellers and then does actually saw even more impressive",
    "start": "1414470",
    "end": "1421820"
  },
  {
    "text": "latency winds as a result the average latency when four websites in North",
    "start": "1421820",
    "end": "1427920"
  },
  {
    "text": "America was somewhere in the region of 200 milliseconds how often do you get a",
    "start": "1427920",
    "end": "1434100"
  },
  {
    "text": "site wide improvement on latency of 200 milliseconds without writing a line of",
    "start": "1434100",
    "end": "1440490"
  },
  {
    "text": "code not very often I would bet the biggest latency wins that we observed",
    "start": "1440490",
    "end": "1445740"
  },
  {
    "text": "were actually in areas of the world where there's significant mobile penetration but terrible network",
    "start": "1445740",
    "end": "1452340"
  },
  {
    "text": "performance countries like India for example these particular deployments of",
    "start": "1452340",
    "end": "1458670"
  },
  {
    "text": "plow front and http2 had way bigger impacts to our customer experience in those regions SSL termination connection",
    "start": "1458670",
    "end": "1469770"
  },
  {
    "text": "reuse substantial components of the improvements that we saw hit but now",
    "start": "1469770",
    "end": "1475620"
  },
  {
    "text": "that we can see that the performance of our website is much more predictable for our customers importantly we're now able",
    "start": "1475620",
    "end": "1482130"
  },
  {
    "text": "to see the improvements that we make or the effect of the improvements that we make through actual code changes that we",
    "start": "1482130",
    "end": "1488430"
  },
  {
    "text": "make in our application before we couldn't always be sure whether we were",
    "start": "1488430",
    "end": "1493650"
  },
  {
    "text": "improving latency because there was just too much noise on the internet for us to see the improvements so how do we do",
    "start": "1493650",
    "end": "1505110"
  },
  {
    "start": "1503000",
    "end": "1652000"
  },
  {
    "text": "that let's look at our cloud front configuration for a moment after",
    "start": "1505110",
    "end": "1511170"
  },
  {
    "text": "creating our CloudFront distribution in the AWS console again of course which I",
    "start": "1511170",
    "end": "1517110"
  },
  {
    "text": "didn't put here because it's just as simple as creating a new distribution and posting pasting the C name of your",
    "start": "1517110",
    "end": "1524250"
  },
  {
    "text": "origin we can then go start configuring it and as we showed before different",
    "start": "1524250",
    "end": "1530130"
  },
  {
    "text": "paths on Amazon get routed with different behaviour in some cases we",
    "start": "1530130",
    "end": "1535260"
  },
  {
    "text": "were out traffic for different URLs - completely different origins on the internet for example here we send all of",
    "start": "1535260",
    "end": "1544590"
  },
  {
    "text": "our /dp star traffic that's all of the requests that go to our product pages we",
    "start": "1544590",
    "end": "1549810"
  },
  {
    "text": "call them detail pages all of those get sent to a particular place a different origin different from the rest",
    "start": "1549810",
    "end": "1557170"
  },
  {
    "text": "of the site and we force it to be HTTP so even if a customer comes to us over a",
    "start": "1557170",
    "end": "1563500"
  },
  {
    "text": "non-secure connection we use CloudFront to insist that a renegotiates that as a",
    "start": "1563500",
    "end": "1569230"
  },
  {
    "text": "secure connection as we migrate it to HTTPS out of interest it was really",
    "start": "1569230",
    "end": "1577570"
  },
  {
    "text": "important to us to be able to set those forced connections to different parts of",
    "start": "1577570",
    "end": "1582760"
  },
  {
    "text": "our web sites on a different cadence like I said before we have different teams that are building the product",
    "start": "1582760",
    "end": "1588610"
  },
  {
    "text": "pages different teams that are building a gateway page and it was really important that we were able to decouple",
    "start": "1588610",
    "end": "1594430"
  },
  {
    "text": "them and it turns out that that was a really critical move for us because some",
    "start": "1594430",
    "end": "1600670"
  },
  {
    "text": "of these applications didn't play well with a secure only connection if we'd",
    "start": "1600670",
    "end": "1606370"
  },
  {
    "text": "have had to have moved all in one go the whole site all at once we would have",
    "start": "1606370",
    "end": "1611830"
  },
  {
    "text": "had an intractable problem coordinating across tens of thousands of developers thousands of different products",
    "start": "1611830",
    "end": "1617890"
  },
  {
    "text": "thousands of different applications and this routing configuration and this forced connection on those different",
    "start": "1617890",
    "end": "1625630"
  },
  {
    "text": "paths allowed us to do that incrementally and now the website's completely secure it took us probably",
    "start": "1625630",
    "end": "1630700"
  },
  {
    "text": "somewhere in the region of nine months to do that but incrementally our",
    "start": "1630700",
    "end": "1635830"
  },
  {
    "text": "customers were getting a better experience as we move through that project we could have achieved that in a",
    "start": "1635830",
    "end": "1643870"
  },
  {
    "text": "different way but again that's undifferentiated work and I'd much rather be doing something",
    "start": "1643870",
    "end": "1650530"
  },
  {
    "text": "different for example making my websites",
    "start": "1650530",
    "end": "1656980"
  },
  {
    "text": "more available and making them more secure for our customers so now I'd like",
    "start": "1656980",
    "end": "1663280"
  },
  {
    "text": "to share a few things about what the Amazon consumer business has learned over the last few years with respect to",
    "start": "1663280",
    "end": "1670300"
  },
  {
    "text": "security and defense",
    "start": "1670300",
    "end": "1675000"
  },
  {
    "text": "how many of you don't worry about whether or not your website's up and",
    "start": "1678070",
    "end": "1683660"
  },
  {
    "text": "getting overwhelmed with traffic from the internet good Amazon takes pride in",
    "start": "1683660",
    "end": "1691340"
  },
  {
    "text": "our reputation as one of the most trusted brands in the global e-commerce industry part of that trust comes from",
    "start": "1691340",
    "end": "1699740"
  },
  {
    "text": "having a website that up and having a website that's fast we think about",
    "start": "1699740",
    "end": "1705440"
  },
  {
    "text": "denial of service more about availability than we do about security",
    "start": "1705440",
    "end": "1710510"
  },
  {
    "text": "it's a bit of both but for us mostly it's about availability robotic traffic",
    "start": "1710510",
    "end": "1716390"
  },
  {
    "text": "and DDoS attackers can hurt both of availability and speed if you let them",
    "start": "1716390",
    "end": "1721880"
  },
  {
    "text": "and we all need defensive solutions to make sure that we can protect ourselves",
    "start": "1721880",
    "end": "1727580"
  },
  {
    "text": "against them our philosophy around this is simple we will always prioritize",
    "start": "1727580",
    "end": "1733970"
  },
  {
    "text": "humans over robots when we're in a situation of limited resources we're in",
    "start": "1733970",
    "end": "1741110"
  },
  {
    "text": "the cloud I hear you all scream but the cloud is infinite sure the cloud is",
    "start": "1741110",
    "end": "1747560"
  },
  {
    "text": "infinite when your Amazon is a little less infinite than for other companies",
    "start": "1747560",
    "end": "1752720"
  },
  {
    "text": "but for us actually that the problem is even if the cloud was infinite we would",
    "start": "1752720",
    "end": "1760460"
  },
  {
    "text": "have to pay for the resources that we use to protect that website against all",
    "start": "1760460",
    "end": "1765680"
  },
  {
    "text": "of these people things that want visitors and so we take specific",
    "start": "1765680",
    "end": "1770810"
  },
  {
    "text": "decisions about how much we're willing to spend to serve the traffic that comes in and sometimes that means that we have",
    "start": "1770810",
    "end": "1778220"
  },
  {
    "text": "to prioritize and we will always prioritize for a human to be able to come to our website and shop and have a",
    "start": "1778220",
    "end": "1784370"
  },
  {
    "text": "great experience don't we well for a robot but it's a business decision at",
    "start": "1784370",
    "end": "1789380"
  },
  {
    "text": "that point it's not a technology decision so over the years we've learned",
    "start": "1789380",
    "end": "1794720"
  },
  {
    "text": "how to defend our websites and our applications from attacks like DDoS is",
    "start": "1794720",
    "end": "1800810"
  },
  {
    "text": "like you've probably all heard of Mariah and WordPress pingbacks and other things like that we have a layered approach and",
    "start": "1800810",
    "end": "1808190"
  },
  {
    "text": "as proud of it as we are it's really expensive to operate so if",
    "start": "1808190",
    "end": "1814850"
  },
  {
    "text": "you're a professional looking to defend your site from unwanted traffic which apparently is all of you you should know",
    "start": "1814850",
    "end": "1822320"
  },
  {
    "text": "that we found AWS to be a super cost-effective solution to scale our",
    "start": "1822320",
    "end": "1827450"
  },
  {
    "text": "defenses and then we want to protect our customer data and so like this is not an",
    "start": "1827450",
    "end": "1835070"
  },
  {
    "text": "option for us not doing this is absolutely not an option and it shouldn't be not an option for you",
    "start": "1835070",
    "end": "1840320"
  },
  {
    "text": "either so I'll use an example to make my point clear here as it may not surprise",
    "start": "1840320",
    "end": "1852230"
  },
  {
    "start": "1841000",
    "end": "1902000"
  },
  {
    "text": "you to hear Amazon doesn't use WordPress on its website",
    "start": "1852230",
    "end": "1857890"
  },
  {
    "text": "kind of imagine building anyway hmm as many of you know WordPress is popular",
    "start": "1859000",
    "end": "1866330"
  },
  {
    "text": "and it has this really cool feature in it if you want to figure out how to improve your SEO or get some better",
    "start": "1866330",
    "end": "1874490"
  },
  {
    "text": "visibility it's got this cool feature that's called ping back but we don't",
    "start": "1874490",
    "end": "1880549"
  },
  {
    "text": "need ping banks on our website we don't really care about them we have our own telemetry for dealing with SEO we have",
    "start": "1880549",
    "end": "1887600"
  },
  {
    "text": "different tools the instrument our insight into our customers but ping",
    "start": "1887600",
    "end": "1894559"
  },
  {
    "text": "banks can be used by nefarious actors to ddos legitimate websites in a ping back",
    "start": "1894559",
    "end": "1905090"
  },
  {
    "start": "1902000",
    "end": "1942000"
  },
  {
    "text": "attack the attacker will send bogus traffic to a legitimate WordPress",
    "start": "1905090",
    "end": "1910250"
  },
  {
    "text": "website and those sites do exactly what they're configured to do they send notification ping banks to the target",
    "start": "1910250",
    "end": "1918160"
  },
  {
    "text": "which they think is the person that made the request in the first place and they sell that target that'll new links been",
    "start": "1918160",
    "end": "1924830"
  },
  {
    "text": "posted to the site and you should go do something with it but remember Amazon",
    "start": "1924830",
    "end": "1929960"
  },
  {
    "text": "doesn't want these so every request that we get from a ping back is a request",
    "start": "1929960",
    "end": "1935660"
  },
  {
    "text": "that we don't want that we don't want to have to pay to service",
    "start": "1935660",
    "end": "1941889"
  },
  {
    "start": "1942000",
    "end": "1954000"
  },
  {
    "text": "so let's go back to our architecture and figure out what would be the best place",
    "start": "1943200",
    "end": "1948210"
  },
  {
    "text": "for us to stop those requests from coming into our origin and into our service to do this we simply inject a",
    "start": "1948210",
    "end": "1956940"
  },
  {
    "start": "1954000",
    "end": "1970000"
  },
  {
    "text": "filtering rule into the website Application Firewall the laughs prior to",
    "start": "1956940",
    "end": "1962520"
  },
  {
    "text": "the traffic being sent to our origin we do this filtration in CloudFront",
    "start": "1962520",
    "end": "1967740"
  },
  {
    "text": "unsurprisingly so let's go have a look at the rule most legitimate WordPress",
    "start": "1967740",
    "end": "1978720"
  },
  {
    "text": "websites won't have altered the request signature that you can see here this is",
    "start": "1978720",
    "end": "1985140"
  },
  {
    "text": "a cut and paste from the request header of a wordpress pingback in that you can",
    "start": "1985140",
    "end": "1992640"
  },
  {
    "text": "clearly identify the ping bank by the WordPress user agent and the word ping",
    "start": "1992640",
    "end": "1998160"
  },
  {
    "text": "Bank so our laugh filter is very simple and the rule that we've created here is cut",
    "start": "1998160",
    "end": "2005900"
  },
  {
    "text": "and pasted from our a filter for WordPress pingback attacks and we simply",
    "start": "2005900",
    "end": "2011360"
  },
  {
    "text": "have a matching criteria that uses just a simple string comparison looking for",
    "start": "2011360",
    "end": "2016640"
  },
  {
    "text": "the user agent beginning with WordPress and the user agent containing the word ping back and if those two things are",
    "start": "2016640",
    "end": "2022760"
  },
  {
    "text": "true we simply drop the traffic we",
    "start": "2022760",
    "end": "2027950"
  },
  {
    "text": "monitor what's getting filtered out by looking at our cloud watch metrics",
    "start": "2027950",
    "end": "2033130"
  },
  {
    "text": "sounding like your salesman here now sorry about that so let's take a look at our metric why is this important to us",
    "start": "2033130",
    "end": "2041080"
  },
  {
    "start": "2038000",
    "end": "2145000"
  },
  {
    "text": "here's a graph of October 15th 2017 not that long ago",
    "start": "2041770",
    "end": "2047350"
  },
  {
    "text": "this is requests to amazon.com not all",
    "start": "2047350",
    "end": "2052460"
  },
  {
    "text": "of the requests clearly we don't get no requests for most of the time but at",
    "start": "2052460",
    "end": "2058760"
  },
  {
    "text": "that particular time on October 15th we",
    "start": "2058760",
    "end": "2064129"
  },
  {
    "text": "had roughly sixty two thousand requests that were blocked in one hour actually",
    "start": "2064130",
    "end": "2070129"
  },
  {
    "text": "as we dug into this after the fact we realized that those 62,000 requests",
    "start": "2070130",
    "end": "2076638"
  },
  {
    "text": "happened over the course of only two minutes they went from nothing to 62,000",
    "start": "2076639",
    "end": "2082519"
  },
  {
    "text": "to nothing thank quickly now most spiky attacks like that will",
    "start": "2082519",
    "end": "2089868"
  },
  {
    "text": "completely overwhelm most smaller websites and in fact 62,000 requests",
    "start": "2089869",
    "end": "2095388"
  },
  {
    "text": "even at Amazon scale still a sizable chunk of traffic I'd certainly much rather not have to have a bunch of",
    "start": "2095389",
    "end": "2101329"
  },
  {
    "text": "servers stuck around doing nothing but waiting for the possibility that this is going to happen so as I said before",
    "start": "2101329",
    "end": "2109339"
  },
  {
    "text": "Amazon's defenses have layered and we've discovered that this is really the cheapest option to reject the traffic",
    "start": "2109339",
    "end": "2116900"
  },
  {
    "text": "for us so what do you do if your site is under attack let's assume that you",
    "start": "2116900",
    "end": "2124130"
  },
  {
    "text": "didn't have this rule configured for your website although by all means go copy this today and go add this to your",
    "start": "2124130",
    "end": "2130279"
  },
  {
    "text": "cloud front configuration or your wife configuration and go protect your website from unnecessary pingbacks today",
    "start": "2130279",
    "end": "2136089"
  },
  {
    "text": "but if you don't have that today and you're getting something weird that's going on who can help you figure out",
    "start": "2136089",
    "end": "2142609"
  },
  {
    "text": "what that is I would assert that you would benefit",
    "start": "2142609",
    "end": "2150380"
  },
  {
    "start": "2145000",
    "end": "2199000"
  },
  {
    "text": "from using the exact same people that we do Amazon's learned that there is simply no",
    "start": "2150380",
    "end": "2157789"
  },
  {
    "text": "substitute for experts in secure the end DDoS defense and even though my team has",
    "start": "2157789",
    "end": "2163880"
  },
  {
    "text": "built an amazing array of denial of service protections it's not our core",
    "start": "2163880",
    "end": "2168980"
  },
  {
    "text": "competency and so from time to time we need some help and when we need help we",
    "start": "2168980",
    "end": "2174140"
  },
  {
    "text": "pick up the phone to the AWS shield guys and they get on the line and they help us out and the exact same people that",
    "start": "2174140",
    "end": "2181519"
  },
  {
    "text": "work for all of you and they can do the same thing for all of you but what if",
    "start": "2181519",
    "end": "2187789"
  },
  {
    "text": "you don't actually want to reject the traffic what if it's legitimate what if",
    "start": "2187789",
    "end": "2194210"
  },
  {
    "text": "it's a robot that actually needs to get a response before he goes away there are plenty of those well it would still be",
    "start": "2194210",
    "end": "2203839"
  },
  {
    "start": "2199000",
    "end": "2253000"
  },
  {
    "text": "nice if you didn't have to serve that traffic with the full experience of your website it'd still be nice not to have",
    "start": "2203839",
    "end": "2210079"
  },
  {
    "text": "to provision a bunch of ec2 instances to be sat there ready to do stuff we've",
    "start": "2210079",
    "end": "2215960"
  },
  {
    "text": "learned that lambda at the edge which is built into our CD ends and distributed",
    "start": "2215960",
    "end": "2222200"
  },
  {
    "text": "to our points of presence can be used to respond to traffic directly for Amazon",
    "start": "2222200",
    "end": "2228440"
  },
  {
    "text": "we use lambda at the edge to politely respond to certain traffic that we don't",
    "start": "2228440",
    "end": "2233900"
  },
  {
    "text": "want to see at our origin contrast that with the previous example where we chose",
    "start": "2233900",
    "end": "2239420"
  },
  {
    "text": "to just drop all of our website WordPress traffic with lambda at the edge we can actually respond much more",
    "start": "2239420",
    "end": "2246350"
  },
  {
    "text": "intelligently and much more cheaply than going to our back-end web servers here's",
    "start": "2246350",
    "end": "2255110"
  },
  {
    "start": "2253000",
    "end": "2296000"
  },
  {
    "text": "a lambda script that we created again this is cut and pasted from our AWS",
    "start": "2255110",
    "end": "2260180"
  },
  {
    "text": "console it's no js' really really simple what we do here is we take a look at the",
    "start": "2260180",
    "end": "2266900"
  },
  {
    "text": "request header we match some contents of the request header to a database of",
    "start": "2266900",
    "end": "2272110"
  },
  {
    "text": "blacklisted referrer URLs that I'm not gonna tell you what they are today you can go figure out which ones you don't",
    "start": "2272110",
    "end": "2278060"
  },
  {
    "text": "want to come visit your website and then after we've done that we craft a",
    "start": "2278060",
    "end": "2284870"
  },
  {
    "text": "response we set a response error we set a response body and we're done how do",
    "start": "2284870",
    "end": "2298250"
  },
  {
    "start": "2296000",
    "end": "2447000"
  },
  {
    "text": "you do this for your website well if you were fast enough and I saw many of you doing this you copied the code that I",
    "start": "2298250",
    "end": "2307130"
  },
  {
    "text": "just put up there that's fine you can use it I'd much",
    "start": "2307130",
    "end": "2312529"
  },
  {
    "text": "rather us be a safer place collectively across the internet than not to be open and share this but you can go to your",
    "start": "2312529",
    "end": "2319190"
  },
  {
    "text": "AWS console paste that code into a new lambda copy the a RN for that version",
    "start": "2319190",
    "end": "2326000"
  },
  {
    "text": "and then go to your cloud phone configuration and in your cloud front",
    "start": "2326000",
    "end": "2331339"
  },
  {
    "text": "configuration you can now go on a new event type just paste that AR n for your",
    "start": "2331339",
    "end": "2339410"
  },
  {
    "text": "lambda function and you're golden we use",
    "start": "2339410",
    "end": "2344690"
  },
  {
    "text": "an event type of your request so each time someone or something goes and",
    "start": "2344690",
    "end": "2353329"
  },
  {
    "text": "visits our website and hits that CloudFront distribution that lambda will fire and we'll evaluate the response",
    "start": "2353329",
    "end": "2359690"
  },
  {
    "text": "header the request header and we'll determine if we need to send the polite response back to them before letting",
    "start": "2359690",
    "end": "2365450"
  },
  {
    "text": "them go away one of the things however that I should caution you on is we learn",
    "start": "2365450",
    "end": "2372380"
  },
  {
    "text": "very quickly there are some scaling limits to using things like lambda at the edge and not every website will fit",
    "start": "2372380",
    "end": "2380720"
  },
  {
    "text": "within those scaling limits the important thing to know though is for",
    "start": "2380720",
    "end": "2385819"
  },
  {
    "text": "the most part those limits can be changed and most importantly raised so",
    "start": "2385819",
    "end": "2392329"
  },
  {
    "text": "if you're thinking about serving all of your website through a lambda edge go work with your AWS account manager go",
    "start": "2392329",
    "end": "2398900"
  },
  {
    "text": "work with your AWS support contacts and make sure that the limits that you have",
    "start": "2398900",
    "end": "2404809"
  },
  {
    "text": "are actually appropriate for what you're using it's very easy with the default limits to overwhelm the thresholds that",
    "start": "2404809",
    "end": "2413539"
  },
  {
    "text": "you've got set and have your customer traffic throttled well that's all well",
    "start": "2413539",
    "end": "2418549"
  },
  {
    "text": "and good for availability but what about protecting customer data should your",
    "start": "2418549",
    "end": "2423829"
  },
  {
    "text": "denial of service actually result in the compromised security breaches aren't",
    "start": "2423829",
    "end": "2428900"
  },
  {
    "text": "just about the impact to your company in many cases there's bigger collateral",
    "start": "2428900",
    "end": "2434240"
  },
  {
    "text": "damage - perhaps entire industries just think of some of the recent incidents in",
    "start": "2434240",
    "end": "2439250"
  },
  {
    "text": "the press for example so how can you improve your resilience to a data compromised",
    "start": "2439250",
    "end": "2447730"
  },
  {
    "text": "another of the security and defense features you'll find in CloudFront has its roots in solving a problem for the",
    "start": "2450190",
    "end": "2456890"
  },
  {
    "text": "amazon consumer business any of you familiar with PCI audits they saw",
    "start": "2456890",
    "end": "2465830"
  },
  {
    "text": "something and they saw a good reason like we don't want our customers data",
    "start": "2465830",
    "end": "2471619"
  },
  {
    "text": "and our customers critical payment instruments to be compromised and as",
    "start": "2471619",
    "end": "2478220"
  },
  {
    "text": "engineers and as builders we also don't want to spend thousands and thousands of",
    "start": "2478220",
    "end": "2483590"
  },
  {
    "text": "hours talking with regulatory auditors going through each line of code to prove",
    "start": "2483590",
    "end": "2488630"
  },
  {
    "text": "that we don't allow that data to be compromised at Amazon that gets pretty",
    "start": "2488630",
    "end": "2494359"
  },
  {
    "text": "tricky I like to joke that Amazon really is just a Federation of startup",
    "start": "2494359",
    "end": "2499580"
  },
  {
    "text": "companies we have some governing principles and checks and balances like all good corporations do but what it",
    "start": "2499580",
    "end": "2506270"
  },
  {
    "text": "means is we have lots of pieces of software built by many different types",
    "start": "2506270",
    "end": "2511940"
  },
  {
    "text": "of teams that are all only loosely and joined with each other and as you can",
    "start": "2511940",
    "end": "2517070"
  },
  {
    "text": "imagine the complexity and the volume of the software that was subjected to audit back in the day was starting to get",
    "start": "2517070",
    "end": "2524630"
  },
  {
    "text": "lengthy and cumbersome so we decided why not just encrypt all of our sensitive",
    "start": "2524630",
    "end": "2530450"
  },
  {
    "text": "data all about customers sensitive data more importantly we started off with",
    "start": "2530450",
    "end": "2536270"
  },
  {
    "text": "credit cards we then moved out to bank accounts and social security numbers and",
    "start": "2536270",
    "end": "2542000"
  },
  {
    "text": "and now we do this for lots and lots of that customer data and we did that at our origin proxy so there are",
    "start": "2542000",
    "end": "2548780"
  },
  {
    "text": "application servers wouldn't actually have to ever see a credit card",
    "start": "2548780",
    "end": "2554740"
  },
  {
    "text": "reduces the number of pieces of software that ever need to see it and importantly",
    "start": "2557370",
    "end": "2562500"
  },
  {
    "text": "it reduces the number of people that build that software that can ever see that - Sam Frank decided it's a great",
    "start": "2562500",
    "end": "2570090"
  },
  {
    "text": "feature we should add that we called it cocoon we like to think about wrapping",
    "start": "2570090",
    "end": "2576540"
  },
  {
    "text": "this data wrap into a little cocoon so that nobody else could see it CloudFront call it field level encryption and we",
    "start": "2576540",
    "end": "2582870"
  },
  {
    "text": "use it an important part of our website those of you that are Amazon customers",
    "start": "2582870",
    "end": "2590060"
  },
  {
    "start": "2586000",
    "end": "2697000"
  },
  {
    "text": "I'm not gonna ask you isn't it like an embarrassing you might recognize this",
    "start": "2590060",
    "end": "2596010"
  },
  {
    "text": "page secure little furry example of my dog my dog's called Josie this one's",
    "start": "2596010",
    "end": "2602760"
  },
  {
    "text": "called Jessen Amazon created a checkout",
    "start": "2602760",
    "end": "2609870"
  },
  {
    "text": "page experience called a single page checkout it's really simple for customers to use it builds on our years",
    "start": "2609870",
    "end": "2616830"
  },
  {
    "text": "of experience of having lots and lots of steps in our checkout pipeline but the",
    "start": "2616830",
    "end": "2622290"
  },
  {
    "text": "single page checkout puts all of those steps just onto a single screen payment instruments shipping product review",
    "start": "2622290",
    "end": "2628830"
  },
  {
    "text": "delivery dates shipping speed all sorts it's really simple we've done lots of experiments and we know from our data",
    "start": "2628830",
    "end": "2635880"
  },
  {
    "text": "that customers love it but on this page there's lots and lots of code running",
    "start": "2635880",
    "end": "2642530"
  },
  {
    "text": "all of that code is served from all sorts of different services this page",
    "start": "2642530",
    "end": "2648000"
  },
  {
    "text": "alone probably calls about 20 or 30 different remote services notwithstanding the code that actually",
    "start": "2648000",
    "end": "2655140"
  },
  {
    "text": "is in each of these widgets at Amazon usually each of those services has its",
    "start": "2655140",
    "end": "2661080"
  },
  {
    "text": "own team and so probably somewhere in the order of 60 people are involved in",
    "start": "2661080",
    "end": "2667010"
  },
  {
    "text": "orchestrating this page together when you add in networking monitoring hosting",
    "start": "2667010",
    "end": "2673980"
  },
  {
    "text": "testing all of those teams that actually go to getting this code into production there's probably about 250 people that",
    "start": "2673980",
    "end": "2681540"
  },
  {
    "text": "were involved and creating this page anyone feel comfortable giving their credit card today to 250 strangers",
    "start": "2681540",
    "end": "2689060"
  },
  {
    "text": "no no me neither in our case only the",
    "start": "2689060",
    "end": "2701940"
  },
  {
    "start": "2697000",
    "end": "2815000"
  },
  {
    "text": "credit card entry widget actually needs that number and so why should we make it",
    "start": "2701940",
    "end": "2707370"
  },
  {
    "text": "available to all of those different teams so if you use simple public key encryption and you put the private key",
    "start": "2707370",
    "end": "2714840"
  },
  {
    "text": "into your credit card storage system so that it's the only thing that can ever unencrypted the data that's the system",
    "start": "2714840",
    "end": "2722400"
  },
  {
    "text": "that's going to send the customer credit card to the bank turns out that you actually have to unencrypt that in order",
    "start": "2722400",
    "end": "2728640"
  },
  {
    "text": "to send it to the bank with the bank's key and you give CloudFront a public key",
    "start": "2728640",
    "end": "2734280"
  },
  {
    "text": "and you tell it which request parameters to watch for typically that's a encrypt",
    "start": "2734280",
    "end": "2740610"
  },
  {
    "text": "this field then all of those widgets and all of those other people even though",
    "start": "2740610",
    "end": "2746280"
  },
  {
    "text": "their codes running on the same web server can never actually see anything other than the token those other pieces",
    "start": "2746280",
    "end": "2755550"
  },
  {
    "text": "of code can't do anything with that token other than pass the token on so we",
    "start": "2755550",
    "end": "2762390"
  },
  {
    "text": "now have effectively eliminated the risk of any bug showing anyone on the website",
    "start": "2762390",
    "end": "2768840"
  },
  {
    "text": "a full credit card or passing it anywhere around the company it reduces",
    "start": "2768840",
    "end": "2774000"
  },
  {
    "text": "the amount of software substantially that we have to worry about auditing and more importantly it reduces",
    "start": "2774000",
    "end": "2781190"
  },
  {
    "text": "substantially the number of people that have access to credit card numbers for",
    "start": "2781190",
    "end": "2786810"
  },
  {
    "text": "us this is the best way of enabling our front-end engineers to innovate on",
    "start": "2786810",
    "end": "2793350"
  },
  {
    "text": "amazing customer experiences without ever having to worry about regulatory compliance this data protection for",
    "start": "2793350",
    "end": "2800910"
  },
  {
    "text": "Amazon something that we take extremely seriously and I'm sure you do too and",
    "start": "2800910",
    "end": "2806360"
  },
  {
    "text": "I'm very happy that I was able to be a part of the team that helped CloudFront",
    "start": "2806360",
    "end": "2812340"
  },
  {
    "text": "actually add this feature to their product but while we're on the subject",
    "start": "2812340",
    "end": "2818670"
  },
  {
    "start": "2815000",
    "end": "2880000"
  },
  {
    "text": "of credit cards and spending money some of you may know that our leadership",
    "start": "2818670",
    "end": "2825240"
  },
  {
    "text": "principles include the concept of frugality sometimes you see at events",
    "start": "2825240",
    "end": "2832620"
  },
  {
    "text": "like this it's hard to imagine that Amazon is is frugal with things actually",
    "start": "2832620",
    "end": "2840090"
  },
  {
    "text": "it's really important to us that we're able to spend money on the right things so that we can keep our prices to",
    "start": "2840090",
    "end": "2846810"
  },
  {
    "text": "customers low and with the tools that AWS gives us they're great for managing",
    "start": "2846810",
    "end": "2854580"
  },
  {
    "text": "single applications they're great for managing a small number of simple things but when you run up the scale of Amazon",
    "start": "2854580",
    "end": "2861750"
  },
  {
    "text": "it turns out you have many many thousands of things that you have to worry about and we have a lot of",
    "start": "2861750",
    "end": "2867630"
  },
  {
    "text": "complexity in how we manage that fortunately AWS provides us with a great",
    "start": "2867630",
    "end": "2874710"
  },
  {
    "text": "SDK the less us build tools that make sense for us we have a lot of",
    "start": "2874710",
    "end": "2882630"
  },
  {
    "text": "configuration Amazon's got thousands of websites 13 different countries a hundred thousand services each of those",
    "start": "2882630",
    "end": "2889800"
  },
  {
    "text": "sites typically has some difference in their configuration but for the most of it it's really important that we keep",
    "start": "2889800",
    "end": "2896070"
  },
  {
    "text": "things consistent the way we improve our availability posture typically is by making sure that things",
    "start": "2896070",
    "end": "2902400"
  },
  {
    "text": "are consistent we find good practices and we want to make sure that everyone observes those good practices so how do",
    "start": "2902400",
    "end": "2909630"
  },
  {
    "text": "we do it well earlier I mentioned I was really excited about route 53 having or",
    "start": "2909630",
    "end": "2917760"
  },
  {
    "text": "being a DNS server but with configuration api's his why I was",
    "start": "2917760",
    "end": "2924150"
  },
  {
    "text": "excited it enabled us to build software tools to apply our changes and prevent",
    "start": "2924150",
    "end": "2930480"
  },
  {
    "text": "mistakes and maintain consistency really really easily as just a single",
    "start": "2930480",
    "end": "2937350"
  },
  {
    "text": "enterprise customer I am forced to realize that we have a bunch of",
    "start": "2937350",
    "end": "2943680"
  },
  {
    "text": "different ways that we manage our company that are different from how AWS manage their business that are different",
    "start": "2943680",
    "end": "2949830"
  },
  {
    "text": "from how you manage your businesses it's really important that we're able to build our own tool",
    "start": "2949830",
    "end": "2954900"
  },
  {
    "text": "on top of that ultimately corporate",
    "start": "2954900",
    "end": "2960119"
  },
  {
    "text": "governance whether it's illegal or compliance thing or whether it's just about operating under your own best",
    "start": "2960119",
    "end": "2966450"
  },
  {
    "text": "practices it's a personal choice it's a business choice about how you choose to do that and it's not a product that you",
    "start": "2966450",
    "end": "2973920"
  },
  {
    "text": "can just simply buy from AWS because it's personalized to you and so it's a shared responsibility and AWS SDK",
    "start": "2973920",
    "end": "2981299"
  },
  {
    "text": "enables you to put that together Netflix for example are really well known for",
    "start": "2981299",
    "end": "2986849"
  },
  {
    "text": "building their own compliance and governance tools on top of AWS and many",
    "start": "2986849",
    "end": "2992309"
  },
  {
    "text": "of the tools that they've built for themselves and now available open source for all of you to use one of the tools",
    "start": "2992309",
    "end": "3003140"
  },
  {
    "text": "that we built that's related to cloud from is a simple command line script that enables us to very quickly switch",
    "start": "3003140",
    "end": "3010880"
  },
  {
    "text": "CDN weights super-important that we're able to do this in the event of an outage we can automate this so we can",
    "start": "3010880",
    "end": "3017390"
  },
  {
    "text": "respond to an alarm and fire this off but this particular example is simply",
    "start": "3017390",
    "end": "3023119"
  },
  {
    "text": "setting our CDM weights to a different distribution than they were before let's",
    "start": "3023119",
    "end": "3028520"
  },
  {
    "text": "have a look at the code for that if your",
    "start": "3028520",
    "end": "3033650"
  },
  {
    "start": "3030000",
    "end": "3141000"
  },
  {
    "text": "cameras have good enough resolution you can probably actually see that but this is all of the code that actually runs",
    "start": "3033650",
    "end": "3039289"
  },
  {
    "text": "that CLI first we simply include the AWS",
    "start": "3039289",
    "end": "3046730"
  },
  {
    "text": "SDK in our code second we build an object that contains all of the changes",
    "start": "3046730",
    "end": "3053299"
  },
  {
    "text": "that we want to make third here's where we do our corporate governance thing we",
    "start": "3053299",
    "end": "3059329"
  },
  {
    "text": "have a best practice where we want to ensure that the weights are split evenly in percentages and so we just make sure",
    "start": "3059329",
    "end": "3065029"
  },
  {
    "text": "that what the operator typed into the CLI actually matches our best practice",
    "start": "3065029",
    "end": "3071089"
  },
  {
    "text": "so we just check in here for adding up to 100% and then finally we actually",
    "start": "3071089",
    "end": "3078890"
  },
  {
    "text": "commit that code to the AWS API and it responds back to us with the results of",
    "start": "3078890",
    "end": "3084440"
  },
  {
    "text": "the changes that it paid now naturally in order to run this program the user needs the right",
    "start": "3084440",
    "end": "3091210"
  },
  {
    "text": "credentials and the right passwords so you can't go run this on amazon.com today and change our CDN weights",
    "start": "3091210",
    "end": "3098460"
  },
  {
    "text": "thankfully but you can certainly use this to change your own configuration",
    "start": "3098460",
    "end": "3106060"
  },
  {
    "text": "for your own CDN and all build tools that are very very similar to this to",
    "start": "3106060",
    "end": "3111850"
  },
  {
    "text": "control how you use other AWS resources today for us this is a very",
    "start": "3111850",
    "end": "3120070"
  },
  {
    "text": "differentiated piece of technology and this is something that I'm happy for us to do and I'm happy that I don't have to",
    "start": "3120070",
    "end": "3127630"
  },
  {
    "text": "give this to AWS because I want to manage the Amazon business or I want to enable the Amazon business to manage",
    "start": "3127630",
    "end": "3134260"
  },
  {
    "text": "itself in the way it sees fit not the way somebody else chooses to tell us that it should be fit so that was just a",
    "start": "3134260",
    "end": "3146230"
  },
  {
    "start": "3141000",
    "end": "3212000"
  },
  {
    "text": "whistle-stop tour through some of our stories of using AWS today and some of",
    "start": "3146230",
    "end": "3152830"
  },
  {
    "text": "the things that we learned in our journey to AWS and hopefully some things that you learned from us that you can",
    "start": "3152830",
    "end": "3158380"
  },
  {
    "text": "take back to your business tomorrow you can get lean see improvements by using CloudFront and other CDN providers you",
    "start": "3158380",
    "end": "3165880"
  },
  {
    "text": "can reduce the cost of your DDoS insurance policy by using waffe and the",
    "start": "3165880",
    "end": "3171400"
  },
  {
    "text": "large number of cloud front pops to reject unwanted traffic you can enforce best practices reduce operator error",
    "start": "3171400",
    "end": "3177490"
  },
  {
    "text": "improve your availability you can improve your security by encrypting data and you can call the same experts that",
    "start": "3177490",
    "end": "3184480"
  },
  {
    "text": "we do when you need help when your site's down and you can use things like compute at the edge to respond to",
    "start": "3184480",
    "end": "3190630"
  },
  {
    "text": "request traffic in different ways I'm sorry that I can't talk about that all",
    "start": "3190630",
    "end": "3195850"
  },
  {
    "text": "of the different things that Amazon does with AWS but hopefully today you learned something that's useful and I'm very",
    "start": "3195850",
    "end": "3203200"
  },
  {
    "text": "happy to take any questions that anybody has [Applause]",
    "start": "3203200",
    "end": "3214760"
  }
]