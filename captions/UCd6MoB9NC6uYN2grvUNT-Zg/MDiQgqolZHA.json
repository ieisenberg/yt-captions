[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hi this is muni i am a solutions",
    "start": "719",
    "end": "2879"
  },
  {
    "text": "architect with amazon web services",
    "start": "2879",
    "end": "5040"
  },
  {
    "text": "based out of seattle washington in this",
    "start": "5040",
    "end": "7600"
  },
  {
    "text": "video i am going to show you",
    "start": "7600",
    "end": "9120"
  },
  {
    "text": "how fleet auto scaling works when you",
    "start": "9120",
    "end": "11759"
  },
  {
    "text": "create a fleet",
    "start": "11759",
    "end": "12639"
  },
  {
    "text": "you start with a minimum and maximum",
    "start": "12639",
    "end": "14719"
  },
  {
    "text": "number of streaming instances",
    "start": "14719",
    "end": "17039"
  },
  {
    "text": "based on the user demand your fleet can",
    "start": "17039",
    "end": "19600"
  },
  {
    "text": "grow",
    "start": "19600",
    "end": "20160"
  },
  {
    "text": "and shrink with the scaling policies",
    "start": "20160",
    "end": "22640"
  },
  {
    "text": "that you define for your fleet",
    "start": "22640",
    "end": "24560"
  },
  {
    "text": "for appstream 2.0 the scaling policies",
    "start": "24560",
    "end": "27039"
  },
  {
    "start": "25000",
    "end": "229000"
  },
  {
    "text": "can be configured for different metrics",
    "start": "27039",
    "end": "29039"
  },
  {
    "text": "like",
    "start": "29039",
    "end": "29760"
  },
  {
    "text": "available capacity or insufficient",
    "start": "29760",
    "end": "32078"
  },
  {
    "text": "capacity",
    "start": "32079",
    "end": "32960"
  },
  {
    "text": "or capacity utilization in this demo",
    "start": "32960",
    "end": "36160"
  },
  {
    "text": "i am going to show you how to scale in",
    "start": "36160",
    "end": "38879"
  },
  {
    "text": "and scale out your fleet",
    "start": "38879",
    "end": "40640"
  },
  {
    "text": "based on the capacity utilization metric",
    "start": "40640",
    "end": "44719"
  },
  {
    "text": "let's consider a scenario where we have",
    "start": "44719",
    "end": "46879"
  },
  {
    "text": "created a fleet size of minimum 2",
    "start": "46879",
    "end": "49200"
  },
  {
    "text": "and maximum 5 instances in this case",
    "start": "49200",
    "end": "52559"
  },
  {
    "text": "minimum and maximum values will act as",
    "start": "52559",
    "end": "55520"
  },
  {
    "text": "boundaries for the fleet",
    "start": "55520",
    "end": "57360"
  },
  {
    "text": "what this means is at any point of time",
    "start": "57360",
    "end": "60079"
  },
  {
    "text": "fleet size can never fall below two",
    "start": "60079",
    "end": "61920"
  },
  {
    "text": "instances",
    "start": "61920",
    "end": "62719"
  },
  {
    "text": "and can never go beyond five instances",
    "start": "62719",
    "end": "65518"
  },
  {
    "text": "for this demo",
    "start": "65519",
    "end": "66400"
  },
  {
    "text": "we have defined a scale out policy that",
    "start": "66400",
    "end": "68320"
  },
  {
    "text": "adds two instances to the fleet",
    "start": "68320",
    "end": "70479"
  },
  {
    "text": "if the capacity utilization is greater",
    "start": "70479",
    "end": "72240"
  },
  {
    "text": "than or equal to 50",
    "start": "72240",
    "end": "74400"
  },
  {
    "text": "with this initial configuration let's",
    "start": "74400",
    "end": "76560"
  },
  {
    "text": "see how our scale out policy will add",
    "start": "76560",
    "end": "78720"
  },
  {
    "text": "instances to the fleet",
    "start": "78720",
    "end": "80159"
  },
  {
    "text": "based on the user demand at present",
    "start": "80159",
    "end": "83520"
  },
  {
    "text": "since no one is connected to the fleet",
    "start": "83520",
    "end": "85439"
  },
  {
    "text": "the capacity utilization is at zero",
    "start": "85439",
    "end": "87119"
  },
  {
    "text": "percent",
    "start": "87119",
    "end": "88880"
  },
  {
    "text": "let's say one user got connected to the",
    "start": "88880",
    "end": "90880"
  },
  {
    "text": "app stream session",
    "start": "90880",
    "end": "92560"
  },
  {
    "text": "since one out of two instances are being",
    "start": "92560",
    "end": "94479"
  },
  {
    "text": "utilized now the new capacity",
    "start": "94479",
    "end": "96560"
  },
  {
    "text": "utilization is at 50 percent",
    "start": "96560",
    "end": "99439"
  },
  {
    "text": "since our scale policy says if the",
    "start": "99439",
    "end": "101680"
  },
  {
    "text": "capacitization is greater than or equal",
    "start": "101680",
    "end": "103520"
  },
  {
    "text": "to 50",
    "start": "103520",
    "end": "104640"
  },
  {
    "text": "then add two instances in this case two",
    "start": "104640",
    "end": "107520"
  },
  {
    "text": "new streaming instances",
    "start": "107520",
    "end": "109280"
  },
  {
    "text": "instance three and instance four will be",
    "start": "109280",
    "end": "111360"
  },
  {
    "text": "added to the fleet",
    "start": "111360",
    "end": "112880"
  },
  {
    "text": "you can see the new streaming instances",
    "start": "112880",
    "end": "114720"
  },
  {
    "text": "being added to the fleet",
    "start": "114720",
    "end": "116640"
  },
  {
    "text": "now let's say two more users initiated a",
    "start": "116640",
    "end": "119040"
  },
  {
    "text": "connection to the fleet",
    "start": "119040",
    "end": "120560"
  },
  {
    "text": "now the new capacity utilization is at",
    "start": "120560",
    "end": "122320"
  },
  {
    "text": "75 percent",
    "start": "122320",
    "end": "123840"
  },
  {
    "text": "this will again trigger the scared",
    "start": "123840",
    "end": "125439"
  },
  {
    "text": "policy which is supposed to add",
    "start": "125439",
    "end": "127600"
  },
  {
    "text": "two more instances to the fleet but",
    "start": "127600",
    "end": "129920"
  },
  {
    "text": "since we defined maximum fleet size to",
    "start": "129920",
    "end": "131760"
  },
  {
    "text": "be five",
    "start": "131760",
    "end": "132560"
  },
  {
    "text": "and it already has four instances it",
    "start": "132560",
    "end": "135040"
  },
  {
    "text": "will add only one instance to the fleet",
    "start": "135040",
    "end": "137920"
  },
  {
    "text": "you can see the new streaming instance",
    "start": "137920",
    "end": "139520"
  },
  {
    "text": "which is streaming instance 5",
    "start": "139520",
    "end": "141280"
  },
  {
    "text": "being added to the fleet now the new",
    "start": "141280",
    "end": "143760"
  },
  {
    "text": "capacity utilization is at 60 percent",
    "start": "143760",
    "end": "146480"
  },
  {
    "text": "though a scalar policy again triggers",
    "start": "146480",
    "end": "148720"
  },
  {
    "text": "since the fleet is up to maximum",
    "start": "148720",
    "end": "150400"
  },
  {
    "text": "capacity",
    "start": "150400",
    "end": "151440"
  },
  {
    "text": "no new instances will be added to the",
    "start": "151440",
    "end": "153120"
  },
  {
    "text": "fleet this is how a scale-out policy",
    "start": "153120",
    "end": "155840"
  },
  {
    "text": "works",
    "start": "155840",
    "end": "157200"
  },
  {
    "text": "now let's see how a scale in policy",
    "start": "157200",
    "end": "159680"
  },
  {
    "text": "works",
    "start": "159680",
    "end": "160800"
  },
  {
    "text": "let's consider a fleet where five",
    "start": "160800",
    "end": "162400"
  },
  {
    "text": "streaming instances are running",
    "start": "162400",
    "end": "164319"
  },
  {
    "text": "but only one user is connected for this",
    "start": "164319",
    "end": "167120"
  },
  {
    "text": "demo we have defined a scale in policy",
    "start": "167120",
    "end": "169760"
  },
  {
    "text": "that removes two instances from the",
    "start": "169760",
    "end": "171440"
  },
  {
    "text": "fleet if the capacity utilization is",
    "start": "171440",
    "end": "173280"
  },
  {
    "text": "less than 35 percent",
    "start": "173280",
    "end": "175040"
  },
  {
    "text": "with this configuration let's see how",
    "start": "175040",
    "end": "176879"
  },
  {
    "text": "our skill in policy will remove",
    "start": "176879",
    "end": "178560"
  },
  {
    "text": "instances from the fleet",
    "start": "178560",
    "end": "180000"
  },
  {
    "text": "based on the user demand as you can see",
    "start": "180000",
    "end": "183200"
  },
  {
    "text": "since only one user is connected to the",
    "start": "183200",
    "end": "185120"
  },
  {
    "text": "fleet the current capacity utilization",
    "start": "185120",
    "end": "187120"
  },
  {
    "text": "is at 20 percent",
    "start": "187120",
    "end": "188800"
  },
  {
    "text": "since our scaling policy says if the",
    "start": "188800",
    "end": "191200"
  },
  {
    "text": "capacity utilization is less than 35",
    "start": "191200",
    "end": "193040"
  },
  {
    "text": "percent",
    "start": "193040",
    "end": "193840"
  },
  {
    "text": "remove two instances in this case",
    "start": "193840",
    "end": "196159"
  },
  {
    "text": "instance 4 and distance 5 will be",
    "start": "196159",
    "end": "198080"
  },
  {
    "text": "terminated",
    "start": "198080",
    "end": "199599"
  },
  {
    "text": "you can see both instance 4 and instance",
    "start": "199599",
    "end": "201920"
  },
  {
    "text": "5 being terminated from the fleet",
    "start": "201920",
    "end": "204400"
  },
  {
    "text": "now the new capacity utilization is at",
    "start": "204400",
    "end": "206120"
  },
  {
    "text": "33.33 percent",
    "start": "206120",
    "end": "208319"
  },
  {
    "text": "this will again trigger the scaling",
    "start": "208319",
    "end": "209920"
  },
  {
    "text": "policy because the capacity utilization",
    "start": "209920",
    "end": "212319"
  },
  {
    "text": "is still less than 35 percent",
    "start": "212319",
    "end": "214159"
  },
  {
    "text": "which is supposed to remove two more",
    "start": "214159",
    "end": "215760"
  },
  {
    "text": "instances but since we defined the",
    "start": "215760",
    "end": "218080"
  },
  {
    "text": "minimum fleet size to two instances",
    "start": "218080",
    "end": "220319"
  },
  {
    "text": "only one instance will be removed you",
    "start": "220319",
    "end": "222720"
  },
  {
    "text": "can see instance three being terminated",
    "start": "222720",
    "end": "224879"
  },
  {
    "text": "from the fleet",
    "start": "224879",
    "end": "226319"
  },
  {
    "text": "this is how a scale in policy works",
    "start": "226319",
    "end": "229440"
  },
  {
    "start": "229000",
    "end": "284000"
  },
  {
    "text": "you can also use schedule based scaling",
    "start": "229440",
    "end": "232080"
  },
  {
    "text": "that schedules the fleet capacity",
    "start": "232080",
    "end": "234159"
  },
  {
    "text": "based on cron jobs for example you can",
    "start": "234159",
    "end": "237120"
  },
  {
    "text": "schedule a fleet to run",
    "start": "237120",
    "end": "238400"
  },
  {
    "text": "only on monday wednesday and friday with",
    "start": "238400",
    "end": "241840"
  },
  {
    "text": "a capacity of 5 instances",
    "start": "241840",
    "end": "243840"
  },
  {
    "text": "from 9 am to 5 pm and a capacity of 2",
    "start": "243840",
    "end": "246720"
  },
  {
    "text": "instances",
    "start": "246720",
    "end": "247519"
  },
  {
    "text": "from 5 pm to 10 pm with this requirement",
    "start": "247519",
    "end": "251120"
  },
  {
    "text": "this is how your fleet size looks like",
    "start": "251120",
    "end": "253599"
  },
  {
    "text": "with 5 instances from 9am to 5pm",
    "start": "253599",
    "end": "256639"
  },
  {
    "text": "whereas from 5pm to 10pm your fleet runs",
    "start": "256639",
    "end": "259519"
  },
  {
    "text": "only 2 instances",
    "start": "259519",
    "end": "261199"
  },
  {
    "text": "this is based on cron job you specify",
    "start": "261199",
    "end": "263440"
  },
  {
    "text": "for your fleet",
    "start": "263440",
    "end": "264720"
  },
  {
    "text": "you can also schedule this for whole",
    "start": "264720",
    "end": "266840"
  },
  {
    "text": "month",
    "start": "266840",
    "end": "268479"
  },
  {
    "text": "so that's about fleet auto scaling using",
    "start": "268479",
    "end": "271280"
  },
  {
    "text": "this feature",
    "start": "271280",
    "end": "272000"
  },
  {
    "text": "you'll be able to grow or shrink your",
    "start": "272000",
    "end": "273840"
  },
  {
    "text": "fleet based on your user demand",
    "start": "273840",
    "end": "276240"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "276240",
    "end": "277919"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "277919",
    "end": "283840"
  }
]