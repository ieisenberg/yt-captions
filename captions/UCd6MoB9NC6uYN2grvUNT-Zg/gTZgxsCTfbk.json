[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "okay we live alright let's get started folks last few folks trickling in all",
    "start": "1100",
    "end": "12240"
  },
  {
    "text": "right welcome to my session on aw subscription services my name is Ken",
    "start": "12240",
    "end": "18119"
  },
  {
    "text": "beer general manager of the AWS key management service just as a show of hands how many people out in the",
    "start": "18119",
    "end": "25109"
  },
  {
    "text": "audience are using some type of encryption service from AWS Oh excellent",
    "start": "25109",
    "end": "31710"
  },
  {
    "text": "love to see it all righty so what we're going to talk about today is a little",
    "start": "31710",
    "end": "39660"
  },
  {
    "text": "bit of a theoretical discussion about how we think about encryption in AWS",
    "start": "39660",
    "end": "45590"
  },
  {
    "text": "understand all of the various encryption and key management services that we offer to try and make it easier for you",
    "start": "45590",
    "end": "51960"
  },
  {
    "text": "to secure your data and ultimately what I'd like you to leave this session with if you don't already believe this is",
    "start": "51960",
    "end": "59219"
  },
  {
    "text": "that it is in fact safe to trust AWS with your keys so why do we encrypt in",
    "start": "59219",
    "end": "67170"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "the cloud for the past boy ten years since people have been putting",
    "start": "67170",
    "end": "72810"
  },
  {
    "text": "information up in IaaS providers like AWS you do it because you're told to for",
    "start": "72810",
    "end": "79860"
  },
  {
    "text": "compliance you're do it because you think it's the best way to protect the",
    "start": "79860",
    "end": "86130"
  },
  {
    "text": "secure your data given that you no longer control the data center or the physical hosts that are storing your data you do it because you know that",
    "start": "86130",
    "end": "94140"
  },
  {
    "text": "their shared infrastructure in the cloud and you want to protect yourself from all the other customers that are also",
    "start": "94140",
    "end": "99420"
  },
  {
    "text": "using that cloud provider or you're doing it because you're trying to protect yourself from the cloud provider",
    "start": "99420",
    "end": "107600"
  },
  {
    "text": "we try to distill all of these kind of external reasons for encrypting into two",
    "start": "107600",
    "end": "114090"
  },
  {
    "text": "primary ones which is minimizing unauthorized access the set of physical",
    "start": "114090",
    "end": "119369"
  },
  {
    "text": "and logical dimension now I've put in the standard CIA of confidentiality",
    "start": "119369",
    "end": "125100"
  },
  {
    "text": "integrity and availability just as a reminder because I think that's a good",
    "start": "125100",
    "end": "130759"
  },
  {
    "text": "linchpin to think about when you're looking at security it's very easy to over index on",
    "start": "130760",
    "end": "137490"
  },
  {
    "text": "confidentiality or integrity but availability starts to become very important as you're adding encryption",
    "start": "137490",
    "end": "144100"
  },
  {
    "text": "because you're creating more complexity in your data and how you access data and you want to make sure you're not giving",
    "start": "144100",
    "end": "150220"
  },
  {
    "text": "up on availability in performance so let's drill down a little bit on",
    "start": "150220",
    "end": "155850"
  },
  {
    "start": "153000",
    "end": "153000"
  },
  {
    "text": "minimizing unauthorized physical access to data in the cloud now I'm going to",
    "start": "155850",
    "end": "161830"
  },
  {
    "text": "break down the classic locations of data into data and transport at rest I'll",
    "start": "161830",
    "end": "168280"
  },
  {
    "text": "talk a little bit about data and use so in transport you primarily concerned",
    "start": "168280",
    "end": "174640"
  },
  {
    "text": "about data on the wire from one physical host to another physical host since we",
    "start": "174640",
    "end": "180070"
  },
  {
    "text": "introduced the snowball and snowmobile services I'm going to assert that data",
    "start": "180070",
    "end": "186370"
  },
  {
    "text": "in transit also includes stuff moving in a truck from your data center to our",
    "start": "186370",
    "end": "192220"
  },
  {
    "text": "data center certainly data at rest you are going to have to rely on the",
    "start": "192220",
    "end": "197440"
  },
  {
    "text": "physical security parameters that are enforced by your data center provider",
    "start": "197440",
    "end": "203010"
  },
  {
    "text": "but you can also rely on various encryption modes so if you start at",
    "start": "203010",
    "end": "208770"
  },
  {
    "text": "perhaps the smallest unit the block of data move up to the file the directory",
    "start": "208770",
    "end": "214480"
  },
  {
    "text": "the file system even full disk encryption all right lots of third-party tools lots of open-source tools that",
    "start": "214480",
    "end": "221530"
  },
  {
    "text": "allow you to protect data at rest when it comes to protecting data in use again",
    "start": "221530",
    "end": "228220"
  },
  {
    "text": "the physical host is inside our data center so you have to rely on the",
    "start": "228220",
    "end": "233410"
  },
  {
    "text": "physical security properties of the data center operator to ensure that unauthorized individuals don't get",
    "start": "233410",
    "end": "239860"
  },
  {
    "text": "access to touch the host to plug in to the console network to insert a USB",
    "start": "239860",
    "end": "246010"
  },
  {
    "text": "Drive or they shouldn't right so what about logical access so you're",
    "start": "246010",
    "end": "253459"
  },
  {
    "start": "250000",
    "end": "250000"
  },
  {
    "text": "kind of giving up a lot of the physical security to the data center provider but from a logical access standpoint you do",
    "start": "253459",
    "end": "260090"
  },
  {
    "text": "have more control it's only defining network routes so how can data move from",
    "start": "260090",
    "end": "266240"
  },
  {
    "text": "point A to point B can you put encryption on the wire using",
    "start": "266240",
    "end": "271790"
  },
  {
    "text": "technologies like TLS IPSec or Mac SEC and these layer three layer four",
    "start": "271790",
    "end": "276860"
  },
  {
    "text": "technologies trying to secure data at rest fundamentally you need to reason about",
    "start": "276860",
    "end": "282890"
  },
  {
    "text": "access controls on the data you need to try and move your mental model from",
    "start": "282890",
    "end": "289580"
  },
  {
    "text": "providing a very robust perimeter of access control and security around an",
    "start": "289580",
    "end": "297020"
  },
  {
    "text": "unknown number of hosts and these sources and zero in on the actual",
    "start": "297020",
    "end": "302060"
  },
  {
    "text": "resource and given that AWS is at its core a collection of a few thousand API",
    "start": "302060",
    "end": "308419"
  },
  {
    "text": "s and maybe a few hundred resource types",
    "start": "308419",
    "end": "313900"
  },
  {
    "text": "you can use the reporting tools inside AWS and for that matter of any cloud",
    "start": "313900",
    "end": "319010"
  },
  {
    "text": "provider to reason about access controls on an individual resource so what about",
    "start": "319010",
    "end": "326000"
  },
  {
    "text": "data use what are the logical access controls that you would want to be concerned with certainly as we talked",
    "start": "326000",
    "end": "332150"
  },
  {
    "text": "about before you want to ensure that unauthorized individuals can't do memory dumps can't somehow get access through",
    "start": "332150",
    "end": "339830"
  },
  {
    "text": "the hypervisor or up through the underlying operating system or the hardware itself what can you do as the",
    "start": "339830",
    "end": "347810"
  },
  {
    "text": "owner of the data so there's been a lot of discussion about encrypt in memory",
    "start": "347810",
    "end": "353350"
  },
  {
    "text": "and I am somewhat ambivalent about this as a security control I understand that",
    "start": "353350",
    "end": "360800"
  },
  {
    "text": "you want to make sure that your memory space is secured and other processes",
    "start": "360800",
    "end": "366080"
  },
  {
    "text": "owned by unauthorized individuals cannot run inside your reserved memory space but having your data reside encrypted in",
    "start": "366080",
    "end": "374030"
  },
  {
    "text": "memory may or may not be the right choice it really depends on how you want",
    "start": "374030",
    "end": "379280"
  },
  {
    "text": "to use your data right if it's okay that all your data is",
    "start": "379280",
    "end": "384300"
  },
  {
    "text": "encrypted and you can do meaningful operations on your data encrypted in memory okay but I don't think it's a",
    "start": "384300",
    "end": "392580"
  },
  {
    "text": "safe control to say my data will always be encrypted in memory because if you",
    "start": "392580",
    "end": "398130"
  },
  {
    "text": "want to do some type of range search you want to do some complex and machine learning algorithm you're going to have",
    "start": "398130",
    "end": "405600"
  },
  {
    "text": "to expose plain text so we find most of our customers understand that plain text",
    "start": "405600",
    "end": "411300"
  },
  {
    "text": "data is going to be in memory and they want to be assured of that memory in",
    "start": "411300",
    "end": "416790"
  },
  {
    "text": "fact belongs to them or if it doesn't belong to them because they are outsourcing the processing of their data",
    "start": "416790",
    "end": "423270"
  },
  {
    "text": "to another service they want to make sure that that memory is sufficiently protected so you'll notice in the",
    "start": "423270",
    "end": "432300"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "previous two slides I'm talking a lot about control control to policies for",
    "start": "432300",
    "end": "438510"
  },
  {
    "text": "access control of encryption keys as yet another access control mechanism so who",
    "start": "438510",
    "end": "444930"
  },
  {
    "text": "inside your organization cares the most about control well the developer that needs to use the keys hopefully they",
    "start": "444930",
    "end": "452850"
  },
  {
    "text": "have been trained on security best practices and they understand that they should be using keys in a proper way but",
    "start": "452850",
    "end": "460050"
  },
  {
    "text": "I would argue they fundamentally care the most about availability right software developers get paid to ensure",
    "start": "460050",
    "end": "466650"
  },
  {
    "text": "that applications work well and they accomplish the tasks it's often the IT security team that is making decisions",
    "start": "466650",
    "end": "474090"
  },
  {
    "text": "about how resources should be accessed how they should be controlled right as",
    "start": "474090",
    "end": "480600"
  },
  {
    "text": "you get to a large enough organization your development organization has to follow rules that are set forth by IT",
    "start": "480600",
    "end": "487320"
  },
  {
    "text": "security and what we find is a lot of IT secured teams will set up dedicated AWS",
    "start": "487320",
    "end": "494280"
  },
  {
    "text": "accounts in which they have highly privileged administrators they will create kms customer master keys inside",
    "start": "494280",
    "end": "502050"
  },
  {
    "text": "those accounts and then delegate their use out to other accounts in which developers can use to build applications",
    "start": "502050",
    "end": "510690"
  },
  {
    "text": "so if you have IT security that's setting the rules and the software developer that is then obligated to",
    "start": "510690",
    "end": "516599"
  },
  {
    "text": "follow those rules how do you as an organization ensure that those rules have been set up properly and are being",
    "start": "516599",
    "end": "523680"
  },
  {
    "text": "followed in perpetuity well that's the job of compliance right so they want to",
    "start": "523680",
    "end": "530190"
  },
  {
    "text": "do verification of how this is set up because they are the ones responsible",
    "start": "530190",
    "end": "535200"
  },
  {
    "text": "for proving to themselves and external auditors and external customers that you",
    "start": "535200",
    "end": "541980"
  },
  {
    "text": "are doing the right things to minimize unauthorized access to data does this",
    "start": "541980",
    "end": "548460"
  },
  {
    "text": "mean you can make it perfect no all right I use the term minimize on purpose",
    "start": "548460",
    "end": "554900"
  },
  {
    "text": "because as you build much more complex rules and complex environments there is",
    "start": "554900",
    "end": "560550"
  },
  {
    "text": "of course the opportunity for you to miss configure but if you think about",
    "start": "560550",
    "end": "566160"
  },
  {
    "text": "these three personae or these youth cases as you're designing your security policies you will lower the risk of miss",
    "start": "566160",
    "end": "574290"
  },
  {
    "text": "configuring and ensuring that only the right people have access to encrypt data and the right people have access to",
    "start": "574290",
    "end": "580650"
  },
  {
    "text": "decrypt data so let's drill down a little bit more on what control needs",
    "start": "580650",
    "end": "587330"
  },
  {
    "start": "583000",
    "end": "583000"
  },
  {
    "text": "because when I talk to customers on a weekly basis one of the first",
    "start": "587330",
    "end": "592560"
  },
  {
    "text": "requirements that come back with is we want to put sensitive data in AWS but we",
    "start": "592560",
    "end": "598740"
  },
  {
    "text": "have to maintain control of the keys so if you're talking about control of",
    "start": "598740",
    "end": "605660"
  },
  {
    "text": "access to data in general then there's an assumption I think this is a pretty",
    "start": "605660",
    "end": "611970"
  },
  {
    "text": "fair assumption on both sides that you as the owner of the data are going to own your identity you have a way to",
    "start": "611970",
    "end": "619230"
  },
  {
    "text": "prove your identity whether it's password you used to log into the console multi-factor authentication",
    "start": "619230",
    "end": "625620"
  },
  {
    "text": "device that augments that authentication and more generally API signing keys so",
    "start": "625620",
    "end": "633240"
  },
  {
    "text": "if you're programmatically using AWS you're signing keys are unique to you and you are responsible for their",
    "start": "633240",
    "end": "640200"
  },
  {
    "text": "physical and logical security which is why we are constantly searching for Strings",
    "start": "640200",
    "end": "647100"
  },
  {
    "text": "that look a lot like AWS access keys out on github and other public sites to remind people that they need to secure",
    "start": "647100",
    "end": "653430"
  },
  {
    "text": "those the other important aspect here is that you alone can modify any type of",
    "start": "653430",
    "end": "660120"
  },
  {
    "text": "access policy so the AWS identity access management service allows you to do this",
    "start": "660120",
    "end": "666199"
  },
  {
    "text": "you can treat certain resource based policies within services like s3 or ec2",
    "start": "666199",
    "end": "673730"
  },
  {
    "text": "so now let's drill down on control over encryption keys what does that mean well",
    "start": "673730",
    "end": "680089"
  },
  {
    "text": "certainly you need to make sure that keys are durable why well unlike",
    "start": "680089",
    "end": "685350"
  },
  {
    "text": "authentication keys which can be rotated and deactivated and reactivated if you",
    "start": "685350",
    "end": "691709"
  },
  {
    "text": "lose them you know as long as you don't have a rogue operator that gets ahold of them you can always create new ones but",
    "start": "691709",
    "end": "698699"
  },
  {
    "text": "encryption keys must remain durable you cannot lose an",
    "start": "698699",
    "end": "705360"
  },
  {
    "text": "encryption key else you lose access to the data so you will either have to trust your cloud provider to create and",
    "start": "705360",
    "end": "713310"
  },
  {
    "text": "never lose keys or you might have a model of where you keep a master copy",
    "start": "713310",
    "end": "719189"
  },
  {
    "text": "yourself and you allow cloud provider to use a key for a certain period of time",
    "start": "719189",
    "end": "726589"
  },
  {
    "text": "keys are highly available so this becomes one of the color conundrums for",
    "start": "726589",
    "end": "734220"
  },
  {
    "text": "customers to consider which is they believe that in order for keys to be",
    "start": "734220",
    "end": "740670"
  },
  {
    "text": "secure they must always possess them store them keys are in my data center right if you want to use encryption keys",
    "start": "740670",
    "end": "747860"
  },
  {
    "text": "AWS service XYZ you will come back to my data center over the public internet /",
    "start": "747860",
    "end": "754620"
  },
  {
    "text": "Direct Connect however we can make it work and I will argue that this is",
    "start": "754620",
    "end": "761149"
  },
  {
    "text": "contradictory to your goal of having keys highly available right there is no",
    "start": "761149",
    "end": "767069"
  },
  {
    "text": "AWS service that offers an API with any",
    "start": "767069",
    "end": "772470"
  },
  {
    "text": "degree of SLA whether it's public or private that takes a dependency on your network right so this idea that",
    "start": "772470",
    "end": "782290"
  },
  {
    "text": "you're going to ask let's say Amazon",
    "start": "782290",
    "end": "787490"
  },
  {
    "text": "redshift to take a encrypted snapshot of a cluster and spin it up for you and the",
    "start": "787490",
    "end": "793790"
  },
  {
    "text": "success of that cluster launch is dependent on redshift being able to drill through your firewall and access a",
    "start": "793790",
    "end": "800960"
  },
  {
    "text": "hardware security module in your network and decrypt a data key right that just",
    "start": "800960",
    "end": "807920"
  },
  {
    "text": "doesn't work it certainly can't work at scale so the other important thing is",
    "start": "807920",
    "end": "814220"
  },
  {
    "text": "that since we look at encryption as yet another form of access control with",
    "start": "814220",
    "end": "820250"
  },
  {
    "text": "policies on who can use keys and under which conditions you have to be the only person who can modify those policies so",
    "start": "820250",
    "end": "828620"
  },
  {
    "text": "just like general access control policies and I am the other important",
    "start": "828620",
    "end": "834140"
  },
  {
    "text": "thing for the compliance person in your org to be happy is that you have to have",
    "start": "834140",
    "end": "839690"
  },
  {
    "text": "a record of every time keys are used because the mental model here is that you can certainly say this particular",
    "start": "839690",
    "end": "847190"
  },
  {
    "text": "piece of data was touched or downloaded from an AWS service but it was encrypted",
    "start": "847190",
    "end": "853970"
  },
  {
    "text": "so the only way that you know that the plaintext data was accessed is if the encryption key was accessed so having an",
    "start": "853970",
    "end": "861710"
  },
  {
    "text": "authoritative record of all access to encryption keys helps the compliance team close the loop and say yes this",
    "start": "861710",
    "end": "869180"
  },
  {
    "text": "access that happened at this date stamp was in fact expected or it wasn't and",
    "start": "869180",
    "end": "875570"
  },
  {
    "text": "therefore I'm gonna build something like a cloud watch event for anomalous behavior okay all right so let's move",
    "start": "875570",
    "end": "885080"
  },
  {
    "text": "into the two different categories of security so I'll start with data in transport so what does AWS offer today",
    "start": "885080",
    "end": "892390"
  },
  {
    "text": "for data and transport so if we start kind of from your ec2 instance and",
    "start": "892390",
    "end": "898280"
  },
  {
    "text": "applications that are running inside your instance most people for the past few decades have understood the concept",
    "start": "898280",
    "end": "904850"
  },
  {
    "text": "of Virtual Private networking so we have three different options here one of",
    "start": "904850",
    "end": "910340"
  },
  {
    "text": "which is I'm a dedicated manage VPN option where we will connect to your V PC from a",
    "start": "910340",
    "end": "917690"
  },
  {
    "text": "single remote network so we have a virtual private gateway that manages this you can aggregate this idea of",
    "start": "917690",
    "end": "925720"
  },
  {
    "text": "virtual private Gateway across multiple remote networks we call that cloud hub",
    "start": "925720",
    "end": "931450"
  },
  {
    "text": "and of course you can run your own VPN endpoint inside an ec2 instance and",
    "start": "931450",
    "end": "937700"
  },
  {
    "text": "connect to it so plenty of offerings in AWS marketplace you can certainly",
    "start": "937700",
    "end": "943520"
  },
  {
    "text": "install your own solution so this gives you your layer 4 type security across",
    "start": "943520",
    "end": "951110"
  },
  {
    "text": "the network you can combine that with security groups and together with v pc",
    "start": "951110",
    "end": "958280"
  },
  {
    "text": "you can encrypt so you provide confidentiality and integrity for data",
    "start": "958280",
    "end": "964460"
  },
  {
    "text": "going across the wire into your instance into your custom application so bumping",
    "start": "964460",
    "end": "972890"
  },
  {
    "start": "971000",
    "end": "971000"
  },
  {
    "text": "up a level 4 web based API is over HTTP you can use TLS so how can you use TLS",
    "start": "972890",
    "end": "981920"
  },
  {
    "text": "well you can certainly install your own certificates running and your own web servers on ec2 plenty of customers do",
    "start": "981920",
    "end": "988850"
  },
  {
    "text": "this you can actually import the certificates into AWS and refer to them",
    "start": "988850",
    "end": "996410"
  },
  {
    "text": "for use inside services like elastic load balancing cloud Front and API",
    "start": "996410",
    "end": "1002500"
  },
  {
    "text": "gateway so this may reduce the time it takes for you to take a custom",
    "start": "1002500",
    "end": "1007630"
  },
  {
    "text": "certificate that you got from some trusted certificate authority and apply them to the web front-end or the TLS",
    "start": "1007630",
    "end": "1016030"
  },
  {
    "text": "termination technology that you have running inside AWS infrastructure so",
    "start": "1016030",
    "end": "1022540"
  },
  {
    "text": "last year in early last year we introduced AWS certificate manager and",
    "start": "1022540",
    "end": "1029410"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "certificate manager is trying to solve a couple of problems one of which is how",
    "start": "1029410",
    "end": "1035410"
  },
  {
    "text": "can we make it easy for you to get a public facing trusted certificate and do",
    "start": "1035410",
    "end": "1043600"
  },
  {
    "text": "it without the time and the money that it costs to",
    "start": "1043600",
    "end": "1049809"
  },
  {
    "text": "go through more class of providers the second problem that ACM is trying to",
    "start": "1049809",
    "end": "1055809"
  },
  {
    "text": "solve is how can we ensure that that certificate and its private key is distributed securely down to the web",
    "start": "1055809",
    "end": "1064120"
  },
  {
    "text": "server the endpoint the TLS termination site the third problem that ACM tried to",
    "start": "1064120",
    "end": "1071530"
  },
  {
    "text": "solve is how do we make sure we can do rotation of these certs transparently all right so we say AWS handles the",
    "start": "1071530",
    "end": "1081160"
  },
  {
    "text": "painful parts of PKI right we will ensure the generation of sufficiently",
    "start": "1081160",
    "end": "1087340"
  },
  {
    "text": "random RSA private key pairs and public public private key pairs",
    "start": "1087340",
    "end": "1092470"
  },
  {
    "text": "excuse me well my presentation goes has a mind of its own we will make sure that",
    "start": "1092470",
    "end": "1101559"
  },
  {
    "text": "those private keys are only distributed down to ELB cloud front or api gateway",
    "start": "1101559",
    "end": "1106660"
  },
  {
    "text": "endpoints when you ask them to be and we will manage the automatic renewal and",
    "start": "1106660",
    "end": "1113100"
  },
  {
    "text": "redeployment of these private keys just last week we introduced domain name",
    "start": "1113100",
    "end": "1120270"
  },
  {
    "text": "validation through DNS in addition to email validation and of course the nice",
    "start": "1120270",
    "end": "1126460"
  },
  {
    "text": "thing about this for ACM is that it's entirely free so how many folks are using ACM today okay good alright so the",
    "start": "1126460",
    "end": "1138220"
  },
  {
    "text": "last option with TLS is let's say you're building your own application whether it's client-side server-side and you",
    "start": "1138220",
    "end": "1145030"
  },
  {
    "text": "want to use TLS but you are a little intimidated by using open SSL I don't",
    "start": "1145030",
    "end": "1152530"
  },
  {
    "text": "blame you open SSL has become a bit of a beast over the past decade or so and",
    "start": "1152530",
    "end": "1158100"
  },
  {
    "text": "what we did with the s 2n project which stands for signal-to-noise is we",
    "start": "1158100",
    "end": "1164020"
  },
  {
    "text": "stripped out all of the extraneous code inside the TLS spec that comes bundled",
    "start": "1164020",
    "end": "1170470"
  },
  {
    "text": "with open SSL and streamlined it so it runs faster we ensure that",
    "start": "1170470",
    "end": "1176940"
  },
  {
    "text": "the most secure algorithms it's all open source we use it internally within AWS",
    "start": "1176940",
    "end": "1184470"
  },
  {
    "text": "services so s3 endpoints are using the S 2n technology to try to improve performance and reduce latency and if",
    "start": "1184470",
    "end": "1191940"
  },
  {
    "text": "you want to take it and customize it to meet your needs you're welcome to ok all",
    "start": "1191940",
    "end": "1199950"
  },
  {
    "text": "right let me move on to data address security so I've done this animation a",
    "start": "1199950",
    "end": "1205859"
  },
  {
    "start": "1202000",
    "end": "1202000"
  },
  {
    "text": "few times over the years so I'll go for go through it quickly for those of you who have seen it but when you're trying",
    "start": "1205859",
    "end": "1212249"
  },
  {
    "text": "to encrypt bulk data symmetric encryption is really your only option asymmetric is useful for small amounts",
    "start": "1212249",
    "end": "1219899"
  },
  {
    "text": "of data but large multi gigabyte files or streams of files you really need",
    "start": "1219899",
    "end": "1224970"
  },
  {
    "text": "symmetric data keys when you take the plaintext data in a plaintext key and",
    "start": "1224970",
    "end": "1230549"
  },
  {
    "text": "apply an algorithm like a yes to it you've got cipher text which you are assured by the proper implementation of",
    "start": "1230549",
    "end": "1237629"
  },
  {
    "text": "the algorithm that the cipher text is indistinguishable from random data so",
    "start": "1237629",
    "end": "1242789"
  },
  {
    "text": "now I will store that encrypted data somewhere perhaps in an AWS service perhaps you store it in another cloud",
    "start": "1242789",
    "end": "1250799"
  },
  {
    "text": "provider it doesn't much matter but now I have a plaintext data key that has to be used to decrypt this data so how do I",
    "start": "1250799",
    "end": "1257759"
  },
  {
    "text": "make this available to people who are authorized to decrypt the data and I",
    "start": "1257759",
    "end": "1263009"
  },
  {
    "text": "have to store this key remember I said durability of keys is paramount I cannot store the plaintext key",
    "start": "1263009",
    "end": "1268849"
  },
  {
    "text": "anywhere near the data in fact I cannot store the plaintext key anywhere that's discoverable so best practice is",
    "start": "1268849",
    "end": "1276989"
  },
  {
    "text": "to encrypt that plaintext key with yet another key now you've got an encrypted",
    "start": "1276989",
    "end": "1282960"
  },
  {
    "text": "key and encrypted data which you can store side by side and you can marry the durability of the data and the encrypted",
    "start": "1282960",
    "end": "1289619"
  },
  {
    "text": "data key together so if you lose one you're gonna lose the other not that we",
    "start": "1289619",
    "end": "1296039"
  },
  {
    "text": "want you to lose either but at least you've gotten similar durability characteristics of each okay but now",
    "start": "1296039",
    "end": "1302759"
  },
  {
    "text": "you've got a plaintext key that you use to wrap the data key what are you gonna do with this you can",
    "start": "1302759",
    "end": "1309210"
  },
  {
    "text": "continue to encrypt and what we call a key heart right at some point at the top of the hierarchy you",
    "start": "1309210",
    "end": "1315300"
  },
  {
    "text": "have to have a plaintext key available to be able to unwrap all the keys below",
    "start": "1315300",
    "end": "1320460"
  },
  {
    "text": "it that's where a key management system comes into play okay so let me talk a",
    "start": "1320460",
    "end": "1327090"
  },
  {
    "text": "little bit about the options for data at rest encryption today in AWS and we split them into two categories the first",
    "start": "1327090",
    "end": "1333630"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "is client-side encryption so client-side encryption is the idea that the point at",
    "start": "1333630",
    "end": "1340530"
  },
  {
    "text": "which your data is say generated made available inside the application before",
    "start": "1340530",
    "end": "1348210"
  },
  {
    "text": "you're transporting it somewhere you want to encrypt it now you need the",
    "start": "1348210",
    "end": "1354690"
  },
  {
    "text": "encryption software to do this and you also need keys so what AWS does is that",
    "start": "1354690",
    "end": "1360360"
  },
  {
    "text": "we give you some helper tools if you would like to use them to simplify the",
    "start": "1360360",
    "end": "1365370"
  },
  {
    "text": "actual encryption of data the AWS encryption SDK is our most recent offering there's three services that",
    "start": "1365370",
    "end": "1372690"
  },
  {
    "text": "have dedicated clients that can facilitate facilitate the encryption of data s3 EMR and dynamo and you can use",
    "start": "1372690",
    "end": "1382410"
  },
  {
    "text": "keys from anywhere if you want to generate keys on your own desktop you can do that we wouldn't recommend that",
    "start": "1382410",
    "end": "1389850"
  },
  {
    "text": "but you can you can also leverage keys from a service like kms okay the",
    "start": "1389850",
    "end": "1397650"
  },
  {
    "text": "important distinction here is that you're responsible for the processing and the creation of ciphertext as well",
    "start": "1397650",
    "end": "1404850"
  },
  {
    "text": "as their decryption the other option is server-side encryption so this says I'm going to rely on a protocol like TLS or",
    "start": "1404850",
    "end": "1412430"
  },
  {
    "text": "maybe it's IPSec but typically it's TLS when you're talking about AWS services and you're asking the service to encrypt",
    "start": "1412430",
    "end": "1420000"
  },
  {
    "text": "on your behalf so before s3 writes it to three independent storage locations you want",
    "start": "1420000",
    "end": "1426690"
  },
  {
    "text": "s3 to manage the encryption so today there are 43 services in AWS that will",
    "start": "1426690",
    "end": "1431910"
  },
  {
    "text": "support some type of server-side encryption this list will continue to grow in fact by the end of the week the",
    "start": "1431910",
    "end": "1438150"
  },
  {
    "text": "list will be greater than 43 and by the end of next year it will be",
    "start": "1438150",
    "end": "1444179"
  },
  {
    "text": "much greater than 43 at some point NE AWS service that stores your data will",
    "start": "1444179",
    "end": "1450360"
  },
  {
    "text": "offer server-side encryption now all of the services the way they implement",
    "start": "1450360",
    "end": "1456720"
  },
  {
    "text": "encryption is that they integrate with the key management service alright so",
    "start": "1456720",
    "end": "1462059"
  },
  {
    "text": "that's the only way that you can get a service to encrypt on your behalf is",
    "start": "1462059",
    "end": "1467129"
  },
  {
    "text": "that they will use keys that are generated by kms so let's dig a little",
    "start": "1467129",
    "end": "1473429"
  },
  {
    "start": "1472000",
    "end": "1472000"
  },
  {
    "text": "bit deeper into the options for client-side encryption so let's assume",
    "start": "1473429",
    "end": "1481230"
  },
  {
    "text": "that you're starting with data somewhere outside of AWS there's one model that says you encrypt using whatever client",
    "start": "1481230",
    "end": "1488789"
  },
  {
    "text": "you want you may use one of the helper clients that AWS offers remember if you use something like the AWS encryption",
    "start": "1488789",
    "end": "1495149"
  },
  {
    "text": "SDK or the s3 client they dogís can't see your keys right it's just helper code running inside",
    "start": "1495149",
    "end": "1502649"
  },
  {
    "text": "your Java your.net whatever the platform might be so you've now created ciphertext and you can upload it into",
    "start": "1502649",
    "end": "1509850"
  },
  {
    "text": "any service that accepts data you can do the exact same thing from within an ec2",
    "start": "1509850",
    "end": "1515639"
  },
  {
    "text": "instance so you can manage all of the encryption process and key management inside ec2 you can even call back into",
    "start": "1515639",
    "end": "1523799"
  },
  {
    "text": "your key management system from AWS so here's a model where remember earlier",
    "start": "1523799",
    "end": "1529230"
  },
  {
    "text": "I said any of this service is not going to reach back into your network to access keys but your applications",
    "start": "1529230",
    "end": "1535649"
  },
  {
    "text": "running in ec2 you can do what you want if you're willing to be responsible for the availability and the latency of",
    "start": "1535649",
    "end": "1542909"
  },
  {
    "text": "calling back into your network that's fine you could optionally choose to have",
    "start": "1542909",
    "end": "1549090"
  },
  {
    "text": "some type of key management infrastructure running in a different ec2 instance perhaps it's a managed",
    "start": "1549090",
    "end": "1554580"
  },
  {
    "text": "service provider that offers a solution that runs inside AWS you can also get",
    "start": "1554580",
    "end": "1562679"
  },
  {
    "text": "your keys from AWS encryption services like kms or cloudy HSN now to talk a",
    "start": "1562679",
    "end": "1568919"
  },
  {
    "text": "little bit more about the differences between cloud x7 kms but the point here is there's lots of",
    "start": "1568919",
    "end": "1574679"
  },
  {
    "text": "options since you were controlling the encrypt code if you want to use some of our SDKs",
    "start": "1574679",
    "end": "1579820"
  },
  {
    "text": "we are agnostic about where you get your keys we do have an opinion about what we",
    "start": "1579820",
    "end": "1585250"
  },
  {
    "text": "think is the easiest place to get your keys but it may not be the right answer for you the other interesting thing that you",
    "start": "1585250",
    "end": "1592750"
  },
  {
    "text": "can do is that you can have keys coming from your key management infrastructure",
    "start": "1592750",
    "end": "1598660"
  },
  {
    "text": "and import them into kms and then use them from your own applications after",
    "start": "1598660",
    "end": "1604360"
  },
  {
    "text": "the fact okay so drill down a little bit on the",
    "start": "1604360",
    "end": "1611050"
  },
  {
    "start": "1609000",
    "end": "1609000"
  },
  {
    "text": "encryption SDK because this has been a big area of investment for us this year it will continue to grow over time why",
    "start": "1611050",
    "end": "1618520"
  },
  {
    "text": "are we doing this because we think that with services like kms we provided a",
    "start": "1618520",
    "end": "1624040"
  },
  {
    "text": "relatively useful set of server based api's for you to generate data keys to",
    "start": "1624040",
    "end": "1629050"
  },
  {
    "text": "use inside your apps certainly the creation of master keys that get stored inside the service and never leave and",
    "start": "1629050",
    "end": "1635950"
  },
  {
    "text": "you can do rotation you can do use aliases to manage human readable names",
    "start": "1635950",
    "end": "1642760"
  },
  {
    "text": "on keys the service we're continuing to scale where every commercial region in",
    "start": "1642760",
    "end": "1647950"
  },
  {
    "text": "the world except China and now the issue is that well if you're an application",
    "start": "1647950",
    "end": "1653890"
  },
  {
    "text": "developer and you've gotten a 256 bit data key from kms now what do you do",
    "start": "1653890",
    "end": "1659490"
  },
  {
    "text": "you're kind of on your own and we are seeing more and more customers that say",
    "start": "1659490",
    "end": "1664930"
  },
  {
    "text": "I want to make sure that my developers have to make as few decisions as possible about cryptography when they're",
    "start": "1664930",
    "end": "1672700"
  },
  {
    "text": "trying to encrypt data so the requirements for developing the ADA was from Krypton SDK were we want developers",
    "start": "1672700",
    "end": "1679300"
  },
  {
    "text": "to understand two things one where is my data source a message my file my stream",
    "start": "1679300",
    "end": "1685720"
  },
  {
    "text": "and they have to understand that anyway and the second is a simple identifier",
    "start": "1685720",
    "end": "1690790"
  },
  {
    "text": "that determines the provider of keys now",
    "start": "1690790",
    "end": "1695830"
  },
  {
    "text": "you could say well how is it developer going to know what the key provider is well you as an IT security administrator",
    "start": "1695830",
    "end": "1702040"
  },
  {
    "text": "or those IT administrators in your company can actually configure that",
    "start": "1702040",
    "end": "1707290"
  },
  {
    "text": "upfront and a package of the SDK a custom build to your developers and just say use this",
    "start": "1707290",
    "end": "1714100"
  },
  {
    "text": "key provider it maybe use this kms key ID right you can hand them a custom",
    "start": "1714100",
    "end": "1720400"
  },
  {
    "text": "version that only uses a particular KMS key ID so now a developer knows all right all I have to do is pass my stream",
    "start": "1720400",
    "end": "1727240"
  },
  {
    "text": "into the encrypt method and outcomes ciphertext your developers don't have to",
    "start": "1727240",
    "end": "1733540"
  },
  {
    "text": "worry about bit length mode of AES IV needed for AES data caching rules and so",
    "start": "1733540",
    "end": "1743050"
  },
  {
    "text": "on and so forth those levers and knobs are available for you to customize if you want but only if you have the right",
    "start": "1743050",
    "end": "1749890"
  },
  {
    "text": "people on staff who know what they're doing so the defaults inside the encryption SDK are such that we make",
    "start": "1749890",
    "end": "1757270"
  },
  {
    "text": "sure that you can encrypt practically an infinite number of streams under a KMS",
    "start": "1757270",
    "end": "1763330"
  },
  {
    "text": "key ID in phenomena of files objects or streams we just recently released this",
    "start": "1763330",
    "end": "1769390"
  },
  {
    "text": "in CLI which might be very interesting especially as part of your dev test for",
    "start": "1769390",
    "end": "1775810"
  },
  {
    "text": "folks to experiment with so I recommend learning more about this because this will be the future of how we are",
    "start": "1775810",
    "end": "1781750"
  },
  {
    "text": "expecting customers to interface with kms and we think it vastly simplifies",
    "start": "1781750",
    "end": "1788980"
  },
  {
    "text": "the experience of encrypting data alright so how does service that",
    "start": "1788980",
    "end": "1794650"
  },
  {
    "start": "1792000",
    "end": "1792000"
  },
  {
    "text": "encryption work well service or encryption uses this concept of envelope",
    "start": "1794650",
    "end": "1802390"
  },
  {
    "text": "encryption right we can't well we don't want to take your massive multi-gigabyte",
    "start": "1802390",
    "end": "1809380"
  },
  {
    "text": "s3 upload and move it over to the kms service to say please encrypt all that",
    "start": "1809380",
    "end": "1815260"
  },
  {
    "text": "does is expose your plaintext as three files to more hosts inside AWS we want",
    "start": "1815260",
    "end": "1823990"
  },
  {
    "text": "that to be encrypted directly at the web server when s3 accepts your put command",
    "start": "1823990",
    "end": "1829140"
  },
  {
    "text": "okay same thing with EBS you're creating an encrypted volume we're not going to",
    "start": "1829140",
    "end": "1835420"
  },
  {
    "text": "send your 8,000 provisioned I ops going from your instance down to an EBS volume",
    "start": "1835420",
    "end": "1841240"
  },
  {
    "text": "and some shunt that over 2 kms to encrypt write the laws of physics just won't allow that to happen so instead we're going to",
    "start": "1841240",
    "end": "1849229"
  },
  {
    "text": "generate a unique data key inside kms and deliver that down to the service to",
    "start": "1849229",
    "end": "1854299"
  },
  {
    "text": "use on your behalf to encrypt the resource that you asked to be created so",
    "start": "1854299",
    "end": "1861019"
  },
  {
    "text": "the advantage of this is that we're just shuttling very small pieces of data back",
    "start": "1861019",
    "end": "1866450"
  },
  {
    "text": "and forth between kms and the service that you're using you get a limited",
    "start": "1866450",
    "end": "1871729"
  },
  {
    "text": "blast radius so unique data keeper resource whether that's per s3 object",
    "start": "1871729",
    "end": "1877489"
  },
  {
    "text": "which could be incredibly small small number of bytes or a multi petabyte",
    "start": "1877489",
    "end": "1883849"
  },
  {
    "text": "redshift cluster that's the mental model to think about unique data keeper",
    "start": "1883849",
    "end": "1889009"
  },
  {
    "text": "resource and with kms you only after",
    "start": "1889009",
    "end": "1894109"
  },
  {
    "text": "reason about the customer master key at the higher level right you don't have to reason about billions of data keys in",
    "start": "1894109",
    "end": "1901309"
  },
  {
    "text": "fact we don't even provide an interface for you to see what the identifier for the data key is because you know that",
    "start": "1901309",
    "end": "1909019"
  },
  {
    "text": "that data key after it gets used in memory it will be encrypted under a",
    "start": "1909019",
    "end": "1914690"
  },
  {
    "text": "master key and stored alongside your data the only way for that data to be read is if that encrypted data key is",
    "start": "1914690",
    "end": "1921440"
  },
  {
    "text": "passed back up to kms so all of the access controls are placed on the master",
    "start": "1921440",
    "end": "1926659"
  },
  {
    "text": "key what we call a customer master key or a cmk okay the same model works with",
    "start": "1926659",
    "end": "1934220"
  },
  {
    "text": "custom applications in fact the AWS encryption SDK is using envelope encryption under the hood it just",
    "start": "1934220",
    "end": "1941690"
  },
  {
    "text": "happens to be doing it transparently so you don't ever have to think about it so",
    "start": "1941690",
    "end": "1947389"
  },
  {
    "start": "1946000",
    "end": "1946000"
  },
  {
    "text": "a lot of people are interested in how services are using data keys so they",
    "start": "1947389",
    "end": "1952429"
  },
  {
    "text": "realize that kms is in charge of managing master keys but now this service has the actual plaintext data",
    "start": "1952429",
    "end": "1959119"
  },
  {
    "text": "key that's encrypting my data how do I know the service is doing the right thing so we have two different models",
    "start": "1959119",
    "end": "1965450"
  },
  {
    "text": "and I've named them the ec2 / EBS model and the s3 model I probably ought to",
    "start": "1965450",
    "end": "1972470"
  },
  {
    "text": "come up with better names but I think for those of you who are familiar with those services hopefully this makes sense the idea with the first model is",
    "start": "1972470",
    "end": "1980270"
  },
  {
    "text": "that we have to provision a data key into memory on a host managed by the",
    "start": "1980270",
    "end": "1987290"
  },
  {
    "text": "service so that you can get very high i/o right whether it's ec2 DBS maybe",
    "start": "1987290",
    "end": "1995420"
  },
  {
    "text": "you're using an RDS database which again fundamentally is using ec2 and EBS and",
    "start": "1995420",
    "end": "2000940"
  },
  {
    "text": "was on redshift does the same thing the idea here is that this data key is going",
    "start": "2000940",
    "end": "2006250"
  },
  {
    "text": "to be provisioned in protected memory in the hypervisor for as long as you want",
    "start": "2006250",
    "end": "2011590"
  },
  {
    "text": "that resource to be active so your RDS database is active the minute you say",
    "start": "2011590",
    "end": "2018510"
  },
  {
    "text": "stop or terminate then that data key goes away right when you want to",
    "start": "2018510",
    "end": "2027270"
  },
  {
    "text": "reactivate the resource because you have submitted a signed API request to do so",
    "start": "2027270",
    "end": "2032910"
  },
  {
    "text": "that allows the service to say all right I'll take the encrypted copy of that data key you pass it back to kms to get",
    "start": "2032910",
    "end": "2040330"
  },
  {
    "text": "the plain text again ok now there are permissions that allow an AWS service to",
    "start": "2040330",
    "end": "2050139"
  },
  {
    "text": "pass that encrypted data key back up to kms if and when we need to recreate",
    "start": "2050140",
    "end": "2057090"
  },
  {
    "text": "state so what's a good example of this let's say entire data center loses power",
    "start": "2057090",
    "end": "2063760"
  },
  {
    "text": "and you had an instance up and running and attached to that instance was an",
    "start": "2063760",
    "end": "2069100"
  },
  {
    "text": "encrypted EBS volume it's our fault the power went out I mean even if it wasn't",
    "start": "2069100",
    "end": "2074409"
  },
  {
    "text": "our fault from your perspective it's our fault and we want to get your instance back up and",
    "start": "2074410",
    "end": "2081879"
  },
  {
    "text": "run again as fast as possible problem is is at the data key that is used to encrypt and decrypt data from",
    "start": "2081880",
    "end": "2088570"
  },
  {
    "text": "that attached encrypted volume is gone it's been wiped from memory the minute the power went out so how do we get that",
    "start": "2088570",
    "end": "2095050"
  },
  {
    "text": "data key back well we take the encrypted copy of the data key and we send it to kms under a very defined scope down",
    "start": "2095050",
    "end": "2103120"
  },
  {
    "text": "permission set that basically says an AWS service can cause this data key to be decrypted if",
    "start": "2103120",
    "end": "2109420"
  },
  {
    "text": "and only if the instance ID and the volume ID match to some previous state",
    "start": "2109420",
    "end": "2115740"
  },
  {
    "text": "right because what you don't want is AWS to have the ability to take arbitrary",
    "start": "2115740",
    "end": "2121349"
  },
  {
    "text": "encrypted data keys mapping through arbitrary EBS volumes get them decrypted",
    "start": "2121349",
    "end": "2127359"
  },
  {
    "text": "and just mount your EBS volume willy-nilly that would be very bad so",
    "start": "2127359",
    "end": "2134140"
  },
  {
    "text": "for those of you who have used can ask in depth and looked at a Davis cloud trail events you'll see evidence where",
    "start": "2134140",
    "end": "2140320"
  },
  {
    "text": "these scope down permissions called kms grants are created and they have all",
    "start": "2140320",
    "end": "2145900"
  },
  {
    "text": "sorts of conditions on them to ensure that they can only be used to recreate a known good State",
    "start": "2145900",
    "end": "2151800"
  },
  {
    "text": "okay so services that are built on top of ec2 and use EBS as the final storage",
    "start": "2151800",
    "end": "2158859"
  },
  {
    "text": "layer work this way the s3 model is a little different because in the s3 case",
    "start": "2158859",
    "end": "2165240"
  },
  {
    "text": "you are taking this atomic transaction where I've done say a put call via s3",
    "start": "2165240",
    "end": "2171010"
  },
  {
    "text": "all right when you get the 200 back from s3 you know that that data has been accepted by us three and they have",
    "start": "2171010",
    "end": "2177339"
  },
  {
    "text": "successfully acquired a unique data key or when you make the get request s3 has",
    "start": "2177339",
    "end": "2182980"
  },
  {
    "text": "successfully decrypted the data key to be able to decrypt your data okay so the",
    "start": "2182980",
    "end": "2192270"
  },
  {
    "text": "permissions to be able to use your keys in cases where you haven't directly",
    "start": "2192270",
    "end": "2198849"
  },
  {
    "text": "signed an API request they may exist but they only exist in the form of roles all",
    "start": "2198849",
    "end": "2207849"
  },
  {
    "text": "right so if you think about Kinesis there's a good example right and we've",
    "start": "2207849",
    "end": "2213220"
  },
  {
    "text": "listed a handful of services down here or athina you've called an AW service",
    "start": "2213220",
    "end": "2218859"
  },
  {
    "text": "you've said I want you to do some work for me and that work might take hours depending on how big your data set is",
    "start": "2218859",
    "end": "2225390"
  },
  {
    "text": "you are not going to make a signed API request for each and every object that",
    "start": "2225390",
    "end": "2231970"
  },
  {
    "text": "that service needs to get from s3 to be able to decrypt that object",
    "start": "2231970",
    "end": "2237359"
  },
  {
    "text": "right this doesn't work so you are effectively allowing the service to create a role in your account that gives",
    "start": "2237359",
    "end": "2244390"
  },
  {
    "text": "it permission to use the kms master key to decrypt data keys so it can decrypt",
    "start": "2244390",
    "end": "2250630"
  },
  {
    "text": "as three objects and in the case of Athena it pulls in those objects and it",
    "start": "2250630",
    "end": "2255970"
  },
  {
    "text": "does the search that you want it to do okay so when you look at these roles",
    "start": "2255970",
    "end": "2261010"
  },
  {
    "text": "you'll notice there again are all sorts of conditions inside the I am role created by Athena Kinesis sqs and those",
    "start": "2261010",
    "end": "2268869"
  },
  {
    "text": "conditions restrict the service in terms of how it can use kms master keys",
    "start": "2268869",
    "end": "2274320"
  },
  {
    "text": "because the other thing that may not be entirely intuitive to folks let me just",
    "start": "2274320",
    "end": "2279430"
  },
  {
    "text": "go back to this diagram is that master keys can be used across any number of",
    "start": "2279430",
    "end": "2286090"
  },
  {
    "text": "AWS services you could use one master key to protect data in all 43 AWS",
    "start": "2286090",
    "end": "2292510"
  },
  {
    "text": "services and n number of custom applications there's no limit now we do",
    "start": "2292510",
    "end": "2300040"
  },
  {
    "text": "have this model where there are AWS managed master keys that are designed for customers who don't really care",
    "start": "2300040",
    "end": "2306099"
  },
  {
    "text": "about key management they just want to check the box but when you are creating a master key and you own the access",
    "start": "2306099",
    "end": "2311740"
  },
  {
    "text": "policies on that key it can be used across any amount of data and in fact",
    "start": "2311740",
    "end": "2318070"
  },
  {
    "text": "the way we've implemented encryption and kms is that you could encrypt up to two to the 61 number of unique objects under",
    "start": "2318070",
    "end": "2326200"
  },
  {
    "text": "that master key before you start to hit the safety boundaries for AES GCM now I",
    "start": "2326200",
    "end": "2334720"
  },
  {
    "text": "don't know how many times a day you come across to ^ 61 but if you want to create",
    "start": "2334720",
    "end": "2341410"
  },
  {
    "text": "that many resources in AWS we welcome it you're probably gonna need a bigger line",
    "start": "2341410",
    "end": "2347800"
  },
  {
    "text": "of credit so we consider that to be practically an unlimited number of",
    "start": "2347800",
    "end": "2352930"
  },
  {
    "text": "objects for most customers okay so those are the two models and by the",
    "start": "2352930",
    "end": "2358930"
  },
  {
    "text": "way there's more detail about how services use data keys we publish that inside the kms Docs each service that",
    "start": "2358930",
    "end": "2365680"
  },
  {
    "text": "offers its own encryption will also describe the ways in which it uses kms so let's assume for a second that you",
    "start": "2365680",
    "end": "2373480"
  },
  {
    "start": "2369000",
    "end": "2369000"
  },
  {
    "text": "believe and you understand data key usage inside protected memory of AWS",
    "start": "2373480",
    "end": "2379180"
  },
  {
    "text": "services that are encrypting on your behalf so a given data key exposes a given data resource that's the blast",
    "start": "2379180",
    "end": "2386050"
  },
  {
    "text": "radius so therefore if you're using a kms customer master key to protect lots",
    "start": "2386050",
    "end": "2392380"
  },
  {
    "text": "of resources let's say I have all of my HIPAA data in s3 redshift RDS and I want",
    "start": "2392380",
    "end": "2399940"
  },
  {
    "text": "one master key to protect all of it now the security of that master key starts to become pretty important right how are",
    "start": "2399940",
    "end": "2406270"
  },
  {
    "text": "those master keys protected in AWS such that they can be made highly available",
    "start": "2406270",
    "end": "2411720"
  },
  {
    "text": "so I talked a little bit about the key hierarchy here if we start down at the data key you'll see that's a 256 bit",
    "start": "2411720",
    "end": "2418599"
  },
  {
    "text": "symmetric key that key is encrypted by a customer master key which is itself",
    "start": "2418599",
    "end": "2423730"
  },
  {
    "text": "another 256 bit master key and these are generated in what we call hardened",
    "start": "2423730",
    "end": "2430089"
  },
  {
    "text": "security appliances you can think of the hardened security appliance as an HSM we",
    "start": "2430089",
    "end": "2437320"
  },
  {
    "text": "decided not to call them HSN's when we launched the service three years ago because they have slightly different",
    "start": "2437320",
    "end": "2443290"
  },
  {
    "text": "security properties than most people thought of within HSM as it heads up we",
    "start": "2443290",
    "end": "2450010"
  },
  {
    "text": "will be deprecating the term HSA and be using HSN going forward when we fully",
    "start": "2450010",
    "end": "2456550"
  },
  {
    "text": "deploy our most recent version of this technology that has been validated in our FIPS 140-2 regardless there is a",
    "start": "2456550",
    "end": "2465490"
  },
  {
    "text": "cryptographic module that's generating keys and that generates your customer master key",
    "start": "2465490",
    "end": "2470560"
  },
  {
    "text": "now that key itself is not stored inside a dedicated host and that's what's kind",
    "start": "2470560",
    "end": "2476619"
  },
  {
    "text": "of different about kms compared to class commercial HSN's is that master key is",
    "start": "2476619",
    "end": "2483450"
  },
  {
    "text": "encrypted by another set of keys and then stored throughout the service why for high durability and high",
    "start": "2483450",
    "end": "2490950"
  },
  {
    "text": "availability so what keys is that cmk",
    "start": "2490950",
    "end": "2495960"
  },
  {
    "text": "protected under well each of our cryptographic modules HSA is soon to",
    "start": "2495960",
    "end": "2502860"
  },
  {
    "text": "become HSM they generate their own set of identity keys using asymmetric key",
    "start": "2502860",
    "end": "2509220"
  },
  {
    "text": "pairs and those keys never leave the device and they are only stored in volatile memory ok so your",
    "start": "2509220",
    "end": "2519480"
  },
  {
    "text": "customer master key is encrypted under these keys that are device-specific and they are stored in lots of places",
    "start": "2519480",
    "end": "2526860"
  },
  {
    "text": "when they are needed to perform some encryption or decryption operation they",
    "start": "2526860",
    "end": "2532470"
  },
  {
    "text": "are pulled into an HSA decrypted in memory used and then flushed so every",
    "start": "2532470",
    "end": "2539400"
  },
  {
    "text": "operation fetches your encrypted cmk pulls it into these hardened devices",
    "start": "2539400",
    "end": "2544700"
  },
  {
    "text": "encrypts it excuse me deep crypts it uses it and then flushes it ok so the",
    "start": "2544700",
    "end": "2553830"
  },
  {
    "text": "relevant thing to look about look here on this slide is the little titles I",
    "start": "2553830",
    "end": "2559020"
  },
  {
    "text": "have canvas manage customer managed customer managed or AWS service managed so what I mean here is that the keys",
    "start": "2559020",
    "end": "2565860"
  },
  {
    "text": "inside the HSAs are certainly managed by us we own the code that generates those keys the cmk yes we generate those keys",
    "start": "2565860",
    "end": "2574500"
  },
  {
    "text": "we're storing them on your behalf but you are in charge of their access policies because every key has a key",
    "start": "2574500",
    "end": "2581250"
  },
  {
    "text": "policy associated with it and you are the only one who can edit that key policy the data Keys they're managed by",
    "start": "2581250",
    "end": "2589530"
  },
  {
    "text": "you if it's your custom application requesting them via the kms generate data key API you're responsible for the",
    "start": "2589530",
    "end": "2597180"
  },
  {
    "text": "plaintext and encrypted copies because kms does not store anything about data keys you call the generate data key API",
    "start": "2597180",
    "end": "2604200"
  },
  {
    "text": "we generate 256 bits of random data we'll wrap it under the cmk that you",
    "start": "2604200",
    "end": "2609330"
  },
  {
    "text": "tell us to and we return it and that's the last time we ever either of those two things okay but if",
    "start": "2609330",
    "end": "2616210"
  },
  {
    "text": "you are using a AWS service say s3 now",
    "start": "2616210",
    "end": "2621880"
  },
  {
    "text": "it's s3's responsibility to protect that data key so that's what I'm trying to",
    "start": "2621880",
    "end": "2628359"
  },
  {
    "text": "get across with this slide so as a summary here see MKS and the keys inside",
    "start": "2628359",
    "end": "2635050"
  },
  {
    "text": "the cryptographic modules are all stored and managed by kms but not data Keys all",
    "start": "2635050",
    "end": "2643599"
  },
  {
    "start": "2643000",
    "end": "2643000"
  },
  {
    "text": "right so let's get in even more inside the castle if you will what about these",
    "start": "2643599",
    "end": "2650349"
  },
  {
    "text": "HSAs how are they built how do you know that those asymmetric keys that we generate",
    "start": "2650349",
    "end": "2657369"
  },
  {
    "text": "that protect your master keys are secured so we've designed the service in",
    "start": "2657369",
    "end": "2663670"
  },
  {
    "text": "a way that when we make one of these devices operational and it generates its own key pair it becomes an inaccessible",
    "start": "2663670",
    "end": "2671859"
  },
  {
    "text": "box meaning no weight of this operator can ssh telnet connect to it can't do",
    "start": "2671859",
    "end": "2678880"
  },
  {
    "text": "anything there is a set of api's that allow for certain operations to be",
    "start": "2678880",
    "end": "2684760"
  },
  {
    "text": "called on these HSAs but there is no gate key there is no export key there is",
    "start": "2684760",
    "end": "2690609"
  },
  {
    "text": "no open up a shell and let me look inside the memory those api's don't",
    "start": "2690609",
    "end": "2695920"
  },
  {
    "text": "exist the api's are such that allows keys to be passed in to be decrypted",
    "start": "2695920",
    "end": "2701109"
  },
  {
    "text": "your cm Cades it also allows for things like generate random bytes which we will",
    "start": "2701109",
    "end": "2707920"
  },
  {
    "text": "need to do for generate data key calls the only way that we can access these hosts is after we put them in a non",
    "start": "2707920",
    "end": "2714910"
  },
  {
    "text": "operational State at that point they've been rebooted all the key material if",
    "start": "2714910",
    "end": "2721359"
  },
  {
    "text": "your cmk happened to be in memory at the time it gets flushed along with the identity keys of all these devices then",
    "start": "2721359",
    "end": "2729069"
  },
  {
    "text": "we can push you code to the device right so we think about the threat vector for",
    "start": "2729069",
    "end": "2737170"
  },
  {
    "text": "the kms service as being the introduction of potentially rogue code",
    "start": "2737170",
    "end": "2742980"
  },
  {
    "text": "right if somebody updates one of these boxes and introduces an export API right",
    "start": "2742980",
    "end": "2749820"
  },
  {
    "text": "that would be very bad so how do we prevent that well we have some operational processes that ensure that",
    "start": "2749820",
    "end": "2756300"
  },
  {
    "text": "the person who writes the code has to get two independent reviewers and after",
    "start": "2756300",
    "end": "2761820"
  },
  {
    "text": "those reviewers have approved the code you need to approved operators not the person who wrote the code to be able to",
    "start": "2761820",
    "end": "2769050"
  },
  {
    "text": "cause that code to be uploaded to a device so we're using quorum based",
    "start": "2769050",
    "end": "2774090"
  },
  {
    "text": "controls to ensure that we are compliant with our saw control 4.5 which says no",
    "start": "2774090",
    "end": "2781710"
  },
  {
    "text": "single AWS employee can do things that",
    "start": "2781710",
    "end": "2786750"
  },
  {
    "text": "would allow them to gain access to key material so one of the problems that we",
    "start": "2786750",
    "end": "2793470"
  },
  {
    "text": "have here with the stock control is that people read that last sentence and say well if no single employee can gain access to the key material then clearly",
    "start": "2793470",
    "end": "2800310"
  },
  {
    "text": "two or more can write for this advancing",
    "start": "2800310",
    "end": "2805950"
  },
  {
    "text": "the answer here is no the problem is is if we introduced code that changed the",
    "start": "2805950",
    "end": "2813750"
  },
  {
    "text": "security properties of the service then that would take two people to introduce that code which then could potentially",
    "start": "2813750",
    "end": "2820560"
  },
  {
    "text": "allow one user but the way the service is built today and the way we make sure",
    "start": "2820560",
    "end": "2827070"
  },
  {
    "text": "that the sock auditors validate every six months is that the security",
    "start": "2827070",
    "end": "2832200"
  },
  {
    "text": "properties of servers have not changed in fact there is no way for anyone to access rocky material so we are working",
    "start": "2832200",
    "end": "2840300"
  },
  {
    "text": "to see that some ways to change that sock control and I would invite all of you who rely on the sock for evidence of",
    "start": "2840300",
    "end": "2847890"
  },
  {
    "text": "security controls to provide feedback to your account reps or contact us directly through the forums and say I'd like to",
    "start": "2847890",
    "end": "2854730"
  },
  {
    "text": "saw control to be changed or I'd like it in more detail on the sock control we",
    "start": "2854730",
    "end": "2859770"
  },
  {
    "text": "believe that since you're never going to get access to our data centers and we're never going to show you source code the",
    "start": "2859770",
    "end": "2865740"
  },
  {
    "text": "sock controls are probably the best way for us to get third-party validation that we're doing the right thing with",
    "start": "2865740",
    "end": "2873060"
  },
  {
    "text": "our services okay all right let's talk a little bit about",
    "start": "2873060",
    "end": "2878380"
  },
  {
    "start": "2877000",
    "end": "2877000"
  },
  {
    "text": "how you control access to keys so the policies on the keys are critical here",
    "start": "2878380",
    "end": "2884910"
  },
  {
    "text": "so the kinds of permissions that you put on keys you could for example mimic the",
    "start": "2884910",
    "end": "2892330"
  },
  {
    "text": "value of asymmetric key pairs by controlling who can encrypt and who can decrypt you could do this based on a set",
    "start": "2892330",
    "end": "2903670"
  },
  {
    "text": "of users a set of roles you can do this across accounts you can delineate who",
    "start": "2903670",
    "end": "2909550"
  },
  {
    "text": "has the power to call certain very privileged administrator API is like disable or schedule key deletion when",
    "start": "2909550",
    "end": "2916840"
  },
  {
    "text": "you do cross account access you can enable other I M principles inside external accounts to use the key for",
    "start": "2916840",
    "end": "2924250"
  },
  {
    "text": "encrypt decrypt but they cannot do administrative actions right so the",
    "start": "2924250",
    "end": "2929560"
  },
  {
    "text": "account in which the key is created is the only account that can do very",
    "start": "2929560",
    "end": "2935770"
  },
  {
    "text": "significant administrative actions like disable schedule key deletion mapping",
    "start": "2935770",
    "end": "2941650"
  },
  {
    "text": "aliases okay and the policy language for kms keys is the same as the policy",
    "start": "2941650",
    "end": "2947920"
  },
  {
    "text": "language for all I own policies all right so we evaluate in the same way all",
    "start": "2947920",
    "end": "2954370"
  },
  {
    "text": "right the IT security administrator hopefully has a sense of how keys are secured and",
    "start": "2954370",
    "end": "2962230"
  },
  {
    "text": "how access control can be controlled the software developer can use the aw",
    "start": "2962230",
    "end": "2967840"
  },
  {
    "text": "subscription SDKs or use service api's directly and ensure the right keys are being used what about the compliance",
    "start": "2967840",
    "end": "2974530"
  },
  {
    "text": "team so cloud trail gives you evidence of",
    "start": "2974530",
    "end": "2980190"
  },
  {
    "text": "particular kms requests like decrypt which always seems to be the one of",
    "start": "2980190",
    "end": "2986710"
  },
  {
    "text": "interest when it happened which key was used so of course every kms key has a",
    "start": "2986710",
    "end": "2992800"
  },
  {
    "text": "unique 32 character good the encryption context this gives you a sense of why",
    "start": "2992800",
    "end": "2999700"
  },
  {
    "text": "this master key was used remember the crypto modules in kms they don't know anything about aw services",
    "start": "2999700",
    "end": "3006150"
  },
  {
    "text": "all they know is they get keys sent in to them from the front end of kms they encrypt and decrypt and either",
    "start": "3006150",
    "end": "3013860"
  },
  {
    "text": "encryption works or it doesn't work so we include metadata in request so that",
    "start": "3013860",
    "end": "3018900"
  },
  {
    "text": "you can see oh this master key was used as a part of decrypting this particular",
    "start": "3018900",
    "end": "3024030"
  },
  {
    "text": "volume or this s3 object or this redshift cluster okay where did the call",
    "start": "3024030",
    "end": "3030930"
  },
  {
    "text": "come from what was the AWS identity the I M principle that made the call is this",
    "start": "3030930",
    "end": "3039090"
  },
  {
    "text": "a call that surprises me or is this a call that I expect okay all right so let",
    "start": "3039090",
    "end": "3047070"
  },
  {
    "start": "3047000",
    "end": "3047000"
  },
  {
    "text": "me just touch briefly on some alternatives to kms because we recognize",
    "start": "3047070",
    "end": "3052530"
  },
  {
    "text": "that there are still industries geographies and IT security",
    "start": "3052530",
    "end": "3058950"
  },
  {
    "text": "administrators that aren't totally sold on how kms is architected maybe the",
    "start": "3058950",
    "end": "3065880"
  },
  {
    "text": "stock controls aren't doing exactly what you want you're missing a couple of features so we provide some options one",
    "start": "3065880",
    "end": "3072390"
  },
  {
    "text": "of which is cloudy HSM we also have partner solutions so you can run your own code or your partner's code inside",
    "start": "3072390",
    "end": "3079740"
  },
  {
    "text": "ec2 and let them handle key management the cloud HSM solution we've just",
    "start": "3079740",
    "end": "3086010"
  },
  {
    "text": "recently back in august introduced a new version of cloud HSM this new version",
    "start": "3086010",
    "end": "3091850"
  },
  {
    "text": "vastly simplifies the ability to provision and operate a dedicated HSM so",
    "start": "3091850",
    "end": "3098670"
  },
  {
    "text": "the model here is that you get your own slice of hardware that is in fact an HSM",
    "start": "3098670",
    "end": "3106320"
  },
  {
    "text": "manufactured by a third-party validated under FIPS 140-2 level 3 we ensure that",
    "start": "3106320",
    "end": "3113160"
  },
  {
    "text": "the power is on and there's network connectivity and we will do automatic backups for you and allow you to",
    "start": "3113160",
    "end": "3120210"
  },
  {
    "text": "reprovision these HSMs the same way you when you provision ec2 instances so you can use a lot of the",
    "start": "3120210",
    "end": "3126450"
  },
  {
    "text": "same tools to manage your HSM fleet this makes high availability much easier to",
    "start": "3126450",
    "end": "3132030"
  },
  {
    "text": "accomplish but the important security property here is that you still are the",
    "start": "3132030",
    "end": "3138510"
  },
  {
    "text": "only one who can access the device and cause keys to be created or cause to be used there is no AWS data plane",
    "start": "3138510",
    "end": "3145780"
  },
  {
    "text": "API into cloud HSM there's no encrypt or decrypt API you",
    "start": "3145780",
    "end": "3151720"
  },
  {
    "text": "have to use the API is supported by the third party and those are all standard",
    "start": "3151720",
    "end": "3158410"
  },
  {
    "text": "based API is for those of you who have done cryptographic development things like PPSS 11 jce capi or CNG so for",
    "start": "3158410",
    "end": "3167320"
  },
  {
    "text": "those of you who know what you're doing with HSMs this should look pretty familiar okay so this slide I know as a",
    "start": "3167320",
    "end": "3177250"
  },
  {
    "start": "3175000",
    "end": "3175000"
  },
  {
    "text": "wording slide but it valuates kind of options for doing key management and",
    "start": "3177250",
    "end": "3183250"
  },
  {
    "text": "encryption if you start with the kms service you are effectively offloading",
    "start": "3183250",
    "end": "3189310"
  },
  {
    "text": "what we consider to be the undifferentiated heavy lifting of secure generation storage and access control on",
    "start": "3189310",
    "end": "3196510"
  },
  {
    "text": "keys right fully integrated with other AWS services and you can use it directly within your own applications cloud HSM",
    "start": "3196510",
    "end": "3204730"
  },
  {
    "text": "gives you a slightly smaller security boundary around the keys themselves but",
    "start": "3204730",
    "end": "3211839"
  },
  {
    "text": "of course you don't get integration with other AWS services because there are no AWS managed api's the partner solutions",
    "start": "3211839",
    "end": "3222099"
  },
  {
    "text": "anything you can run an ec2 works if you want to roll it all your own in",
    "start": "3222099",
    "end": "3228400"
  },
  {
    "text": "open-source you're welcome to do that as well alright and you can mix and match some of these solutions in some cases",
    "start": "3228400",
    "end": "3235150"
  },
  {
    "text": "build your own applications and use kms public API so the model that we're",
    "start": "3235150",
    "end": "3240849"
  },
  {
    "start": "3240000",
    "end": "3240000"
  },
  {
    "text": "trying to get to is this concept of ubiquitous encryption we've talked about encryption and transit using TLS some of",
    "start": "3240849",
    "end": "3248530"
  },
  {
    "text": "the VPC or VPN services your connectivity to AWS services that are",
    "start": "3248530",
    "end": "3254560"
  },
  {
    "text": "doing working on your behalf can be encrypted you can manage data at",
    "start": "3254560",
    "end": "3259810"
  },
  {
    "text": "rest encryption using fully managed keys inside kms you can import those keys",
    "start": "3259810",
    "end": "3266560"
  },
  {
    "text": "from your own on-premise key management infrastructure or use Cloud HSM directly",
    "start": "3266560",
    "end": "3272710"
  },
  {
    "text": "from within your own applications if you're using kms you can restrict access to all of",
    "start": "3272710",
    "end": "3279320"
  },
  {
    "text": "the keys that are being used using policies built inside I am and you get a",
    "start": "3279320",
    "end": "3285590"
  },
  {
    "text": "record of every call to kms inside cloud trail and by the way it's important to",
    "start": "3285590",
    "end": "3291710"
  },
  {
    "text": "know that when I say every call I mean every call in fact calls that we might be making on your behalf if you file a",
    "start": "3291710",
    "end": "3298970"
  },
  {
    "text": "support ticket and you need to understand why is my key policy not working the way we want and we do a get",
    "start": "3298970",
    "end": "3305480"
  },
  {
    "text": "key policy call that shows up in cloud trail okay so we're being fully",
    "start": "3305480",
    "end": "3310580"
  },
  {
    "text": "transparent about any and all access to resources inside kms okay I don't know",
    "start": "3310580",
    "end": "3318800"
  },
  {
    "text": "if this is going to be useful for folks this might be useful once you get a copy of the slides on slide where but I",
    "start": "3318800",
    "end": "3325250"
  },
  {
    "start": "3320000",
    "end": "3320000"
  },
  {
    "text": "thought I would at least talk about some resources the kms cryptographic details",
    "start": "3325250",
    "end": "3331100"
  },
  {
    "text": "white paper is pushing about 40 pages it's something that I see security teams",
    "start": "3331100",
    "end": "3337510"
  },
  {
    "text": "tend to like especially if they have somebody in there who understands crypto because it goes pretty deep the best",
    "start": "3337510",
    "end": "3344930"
  },
  {
    "start": "3344000",
    "end": "3344000"
  },
  {
    "text": "practices white paper is perhaps more interesting to your ops team just trying",
    "start": "3344930",
    "end": "3349970"
  },
  {
    "text": "to figure out how do I think about blast radius how many cm KS should I be using how should I be doing cross account",
    "start": "3349970",
    "end": "3355580"
  },
  {
    "text": "access what should I be thinking about in terms of numbers of resources to use",
    "start": "3355580",
    "end": "3361910"
  },
  {
    "text": "and how I want to delegate control of policies these are all sometimes tough",
    "start": "3361910",
    "end": "3367310"
  },
  {
    "text": "questions if you haven't thought much about key management in the past Oh in fact the best practices white paper",
    "start": "3367310",
    "end": "3374060"
  },
  {
    "text": "there's a dedicated session on that coming up later this week and then of course compliance reports so whether",
    "start": "3374060",
    "end": "3380060"
  },
  {
    "text": "it's a stock report pci-dss kms is now HIPAA DAA eligible and as I talked about",
    "start": "3380060",
    "end": "3387560"
  },
  {
    "text": "the FIPS 140 - to report it's",
    "start": "3387560",
    "end": "3393980"
  },
  {
    "text": "interesting here that information is public because nist has publicized it on",
    "start": "3393980",
    "end": "3399230"
  },
  {
    "text": "their website but we are in the process of migrating all of the kms infrastructure to that approved",
    "start": "3399230",
    "end": "3405890"
  },
  {
    "text": "cryptographic module because we have to do that across 15:16 plus regions it just takes time",
    "start": "3405890",
    "end": "3413470"
  },
  {
    "text": "so you'll see a formal announcement from us probably right after the new year okay other sessions that you might want",
    "start": "3413470",
    "end": "3420490"
  },
  {
    "text": "to look at I talked about the best practices a deeper dive on the new AWS cloud hsm offering and then we have a",
    "start": "3420490",
    "end": "3427900"
  },
  {
    "text": "workshop about using the aw subscription SDK so developers in the crowd I highly",
    "start": "3427900",
    "end": "3433720"
  },
  {
    "text": "recommend you attending that one to learn more about how we're trying to simplify client-side encryption okay we",
    "start": "3433720",
    "end": "3440200"
  },
  {
    "text": "have a couple of minutes left I understand that people can come up and ask questions if you want you can do it",
    "start": "3440200",
    "end": "3446800"
  },
  {
    "text": "publicly in the microphone or I will be here for 10 minutes or so after the presentation ends and you could always",
    "start": "3446800",
    "end": "3453280"
  },
  {
    "text": "grab me out in the hall until the next session start at 12:15 okay thanks a lot",
    "start": "3453280",
    "end": "3458590"
  },
  {
    "text": "[Applause]",
    "start": "3458590",
    "end": "3463389"
  }
]