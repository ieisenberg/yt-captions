[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "hello everyone welcome back to a diverse well expected on twitch we're going to",
    "start": "30",
    "end": "6810"
  },
  {
    "text": "share a lot of best practices and tools and a lot of code of course on how to",
    "start": "6810",
    "end": "13049"
  },
  {
    "text": "build on architected applications and if you are new to the series we are",
    "start": "13049",
    "end": "19710"
  },
  {
    "text": "covering every pillar and every best practice today we are going to talk",
    "start": "19710",
    "end": "25740"
  },
  {
    "text": "about reliability and if you are new to the framework I highly recommend you",
    "start": "25740",
    "end": "31830"
  },
  {
    "text": "take a look at the videos tab and check out the previous episodes here what we",
    "start": "31830",
    "end": "37890"
  },
  {
    "text": "are doing basically is going through the best practices in the attaboy SQL",
    "start": "37890",
    "end": "43530"
  },
  {
    "text": "architect and white paper and here is the white paper linkit on website and as",
    "start": "43530",
    "end": "49920"
  },
  {
    "text": "you can see it is divided we mostly in this questions such as how are you",
    "start": "49920",
    "end": "58050"
  },
  {
    "start": "50000",
    "end": "145000"
  },
  {
    "text": "managing service limits or how are you planning your network topology and those",
    "start": "58050",
    "end": "64680"
  },
  {
    "text": "are the questions we've been through in the previous episodes today we're talking about how does our system adapt",
    "start": "64680",
    "end": "72290"
  },
  {
    "text": "changes in demand and this is a very important part of the table",
    "start": "72290",
    "end": "79400"
  },
  {
    "text": "architectures and a huge motivation for a lot of people to go into the cloud and",
    "start": "79400",
    "end": "85530"
  },
  {
    "text": "there are many answers for this your system will adapt to changes in demands",
    "start": "85530",
    "end": "91170"
  },
  {
    "text": "differently if it is based on ec2 instances or late limited functions or",
    "start": "91170",
    "end": "97790"
  },
  {
    "text": "SES containers so in the next episodes we're starting to dive deeper into this",
    "start": "97790",
    "end": "105930"
  },
  {
    "text": "and actually building a sample app and starting doing some initial load testing",
    "start": "105930",
    "end": "112409"
  },
  {
    "text": "and today it's going to be with ec2 instances and the next one we are going",
    "start": "112409",
    "end": "119340"
  },
  {
    "text": "to be doing other other types of infrastructure events so let's jump",
    "start": "119340",
    "end": "127049"
  },
  {
    "text": "right into the into the the implementation and see what kind of",
    "start": "127049",
    "end": "134680"
  },
  {
    "text": "app what kind of infrastructure we're testing today so I'll go to my code",
    "start": "134680",
    "end": "142690"
  },
  {
    "text": "editor and as we've been talking a very important part of well architected",
    "start": "142690",
    "end": "149440"
  },
  {
    "start": "145000",
    "end": "260000"
  },
  {
    "text": "applications is being able to do stuff",
    "start": "149440",
    "end": "154870"
  },
  {
    "text": "with code instead of just doing manual operations so all that we're doing the",
    "start": "154870",
    "end": "162849"
  },
  {
    "text": "series is based on code that you can edit you can change you can adapt use as",
    "start": "162849",
    "end": "171400"
  },
  {
    "text": "you wish so here in the in this link",
    "start": "171400",
    "end": "179319"
  },
  {
    "text": "that I just shared with you guys here on this gist you will find this app called",
    "start": "179319",
    "end": "187950"
  },
  {
    "text": "oh it's not it's sitting ducks it's here sample code okay so on this sitting",
    "start": "187950",
    "end": "196840"
  },
  {
    "text": "ducks app you will find everything that we need for today so as we are just",
    "start": "196840",
    "end": "204910"
  },
  {
    "text": "starting out and start or instead of picking a full-blown app I started to",
    "start": "204910",
    "end": "210639"
  },
  {
    "text": "create some examples and put in a them into this ripple so all the code again",
    "start": "210639",
    "end": "217030"
  },
  {
    "text": "that we're going to work today and in this upcoming episodes in these questions or in this ripple I call them",
    "start": "217030",
    "end": "224739"
  },
  {
    "text": "sitting ducks because there will be our target practice for shooting some",
    "start": "224739",
    "end": "230019"
  },
  {
    "text": "requests so let's start by creating our",
    "start": "230019",
    "end": "236019"
  },
  {
    "text": "infrastructure and I believe I have it already here in the confirmation in the",
    "start": "236019",
    "end": "243880"
  },
  {
    "text": "confirmation management console and just to prove that we are not doing it",
    "start": "243880",
    "end": "250630"
  },
  {
    "text": "pre-built I will just delete everything and let's start everything from zero so the first",
    "start": "250630",
    "end": "261310"
  },
  {
    "start": "260000",
    "end": "430000"
  },
  {
    "text": "thing I'm going to create is an Astrid just to store my application files my",
    "start": "261310",
    "end": "268669"
  },
  {
    "text": "deployment packages my confirmation templates everything that we need to store",
    "start": "268669",
    "end": "274310"
  },
  {
    "text": "somewhere if we don't have a specific reason not to we should probably take a",
    "start": "274310",
    "end": "281180"
  },
  {
    "text": "look at a stray and store it in a stray so here in this first confirmation template we built this a very similar",
    "start": "281180",
    "end": "290050"
  },
  {
    "text": "template a little while ago in the previous episode but now it's got a few",
    "start": "290050",
    "end": "297199"
  },
  {
    "text": "extra improvements let's go through it in a bit",
    "start": "297199",
    "end": "302479"
  },
  {
    "text": "so in the parameters I have a very interesting parameter called gallery ID",
    "start": "302479",
    "end": "310370"
  },
  {
    "text": "and this is something that I invented it's the name of my environment",
    "start": "310370",
    "end": "317320"
  },
  {
    "text": "everybody in the world calls this environment so why did I call it a",
    "start": "317320",
    "end": "322400"
  },
  {
    "text": "gallery because elastic Beanstalk has this concept of environments and I don't",
    "start": "322400",
    "end": "327590"
  },
  {
    "text": "want to mix Beanstalk environments to other words and saying disambiguating",
    "start": "327590",
    "end": "334310"
  },
  {
    "text": "this of the time so by a gallery I mean an environment a collection of resources",
    "start": "334310",
    "end": "340520"
  },
  {
    "text": "grouping together for a specific purpose such as production Devon test or OMA LOD",
    "start": "340520",
    "end": "347539"
  },
  {
    "text": "or whatever you guys are building so you",
    "start": "347539",
    "end": "353060"
  },
  {
    "text": "know to create self to separate the stacks we're going to use the gallery ID",
    "start": "353060",
    "end": "360139"
  },
  {
    "text": "so this could be literally anything by default it's Devon test we're going to",
    "start": "360139",
    "end": "365750"
  },
  {
    "text": "call this something else then we have resources and here it's just a very",
    "start": "365750",
    "end": "371389"
  },
  {
    "text": "simple AWS s3 bucket name and an",
    "start": "371389",
    "end": "377110"
  },
  {
    "text": "artifact bucket logically in my confirmation template we have something",
    "start": "377110",
    "end": "383570"
  },
  {
    "text": "special here called an export and this is going to be used for something called",
    "start": "383570",
    "end": "390139"
  },
  {
    "text": "cross stack references meaning that this name the name of my gallery ID reference",
    "start": "390139",
    "end": "398240"
  },
  {
    "text": "by the parameters so in this example it will be Devin test will be exported so",
    "start": "398240",
    "end": "404870"
  },
  {
    "text": "that other confirmation templates can import this by name so this is just like",
    "start": "404870",
    "end": "412910"
  },
  {
    "text": "environment variable for confirmation if you think so just a value that you can",
    "start": "412910",
    "end": "418669"
  },
  {
    "text": "set and share in your confirmation environment so that other specs can can",
    "start": "418669",
    "end": "425780"
  },
  {
    "text": "use this value so let's create those terms from scratch and to make it easy",
    "start": "425780",
    "end": "433699"
  },
  {
    "start": "430000",
    "end": "620000"
  },
  {
    "text": "for you guys to create this - I have some shell scripts here so let's see",
    "start": "433699",
    "end": "441349"
  },
  {
    "text": "what the scripts do and they are all in a very similar format so I'm going to",
    "start": "441349",
    "end": "448940"
  },
  {
    "text": "add set - easy so that any failed command here doesn't stop the script so",
    "start": "448940",
    "end": "457460"
  },
  {
    "text": "don't go ahead with anything wrong and component idea is artifacts is the name",
    "start": "457460",
    "end": "464240"
  },
  {
    "text": "of my component within my environment let's say so this is my the bucket part",
    "start": "464240",
    "end": "471349"
  },
  {
    "text": "so the very fun the first piece of my architecture and I'm generating a unique",
    "start": "471349",
    "end": "478340"
  },
  {
    "text": "name by getting the today's hour minute and second and I'm composing my gallery",
    "start": "478340",
    "end": "485300"
  },
  {
    "text": "ID that first parameter by being dev m and unique just so we can generate",
    "start": "485300",
    "end": "493430"
  },
  {
    "text": "unique name for environments if we need to create several and several environments and this is something we",
    "start": "493430",
    "end": "500719"
  },
  {
    "text": "are going to experiment a lot in this series so it's better get used to it from the start and then they spec name",
    "start": "500719",
    "end": "507710"
  },
  {
    "text": "my confirmation stack name will be my gallery ID followed by my companion",
    "start": "507710",
    "end": "514360"
  },
  {
    "text": "component ID we're going to see how it looks like I'm a bit in this case it's",
    "start": "514360",
    "end": "519649"
  },
  {
    "text": "going to be artifacts they have M artifacts or something like this and",
    "start": "519649",
    "end": "525820"
  },
  {
    "text": "here is how I pass the stack name here's how",
    "start": "525820",
    "end": "531360"
  },
  {
    "text": "very simple way to best parameters I'm saying that this parameter gallery ID",
    "start": "531360",
    "end": "537149"
  },
  {
    "text": "that's bound here is going to be set to the value of this variable and this is",
    "start": "537149",
    "end": "544980"
  },
  {
    "text": "my template party so that's just a way",
    "start": "544980",
    "end": "550170"
  },
  {
    "text": "to tell just telling confirmation how to create the stack and take a look this is",
    "start": "550170",
    "end": "555750"
  },
  {
    "text": "an important part this is the create stack command of the enterprise cloud",
    "start": "555750",
    "end": "561149"
  },
  {
    "text": "formations y li and then we are going to wait until this tag create is complete",
    "start": "561149",
    "end": "567779"
  },
  {
    "text": "and after this tag create is complete we are going to describe the stack and",
    "start": "567779",
    "end": "575310"
  },
  {
    "text": "fetch from this type from this tag tag was created the bucket name out put it",
    "start": "575310",
    "end": "583649"
  },
  {
    "text": "as a variable and this may seem a little overly complex form a code for a simple",
    "start": "583649",
    "end": "592709"
  },
  {
    "text": "history bucket but I wanted to show you guys how to pass parameters to",
    "start": "592709",
    "end": "599540"
  },
  {
    "text": "Confirmation and how to get output results from confirmation so again here",
    "start": "599540",
    "end": "608880"
  },
  {
    "text": "is what what I mean so I will just execute CSN artifacts and it will return",
    "start": "608880",
    "end": "619649"
  },
  {
    "text": "the stack that was just created and let's go to the confirmation management",
    "start": "619649",
    "end": "625350"
  },
  {
    "text": "console and see what's going on there so we can see that that m1911 one seven",
    "start": "625350",
    "end": "634800"
  },
  {
    "text": "artifacts stack is being created and very soon will have its outputs declared",
    "start": "634800",
    "end": "643800"
  },
  {
    "text": "here so we can see what the export frames looks like and of course the s3",
    "start": "643800",
    "end": "650459"
  },
  {
    "text": "bucket should be created as well so we have create complete our stack was",
    "start": "650459",
    "end": "657180"
  },
  {
    "text": "created successfully our artifacts name is here and let me give you",
    "start": "657180",
    "end": "665360"
  },
  {
    "text": "more visibility into this so in horseback mehmed beth have won",
    "start": "665360",
    "end": "673260"
  },
  {
    "text": "nine funding in seven artifacts i have this bucket name the actual name of the",
    "start": "673260",
    "end": "679829"
  },
  {
    "text": "bucket is this and here's a important thing about called computing creature",
    "start": "679829",
    "end": "685740"
  },
  {
    "text": "resources like cattle not pets so i don't really care what named this",
    "start": "685740",
    "end": "691320"
  },
  {
    "text": "bucket have i don't need to call it my artifacts or anything special i just",
    "start": "691320",
    "end": "697380"
  },
  {
    "text": "give it a name and goal and in the artifacts bucket name this is just a",
    "start": "697380",
    "end": "703440"
  },
  {
    "text": "description but this is the important part export name is this so that every other",
    "start": "703440",
    "end": "710310"
  },
  {
    "text": "stack that would like to use or import this value can reference this name and",
    "start": "710310",
    "end": "719240"
  },
  {
    "text": "you can see that I have naming standard here I have the name of the environment",
    "start": "719240",
    "end": "726089"
  },
  {
    "text": "and the resource ID so I can if I have a",
    "start": "726089",
    "end": "731370"
  },
  {
    "text": "different environment it will have a different export name so this way I can generate as many environments as I want",
    "start": "731370",
    "end": "739199"
  },
  {
    "text": "and make sure that the the environment won't conflict right the IDS won't clash",
    "start": "739199",
    "end": "746819"
  },
  {
    "text": "so I can create any amount of them as I want because if you try to create an",
    "start": "746819",
    "end": "751920"
  },
  {
    "text": "export with a name that already exists your spec creation will fail so make",
    "start": "751920",
    "end": "757800"
  },
  {
    "text": "sure you take an order of that alright so the next step is to do our VPC so to",
    "start": "757800",
    "end": "766860"
  },
  {
    "start": "760000",
    "end": "1080000"
  },
  {
    "text": "create our VDC we are going to follow the same approach and in the last",
    "start": "766860",
    "end": "772350"
  },
  {
    "text": "episode we discussed Network topologies and things that you can do and here is",
    "start": "772350",
    "end": "779300"
  },
  {
    "text": "the template that we built for that so here on CFM base hav PC this is the",
    "start": "779300",
    "end": "789240"
  },
  {
    "text": "dno file that we have so the first thing you'll notice is that I have that",
    "start": "789240",
    "end": "795779"
  },
  {
    "text": "gallery ID parameter so when some thing is created I can fetch the same",
    "start": "795779",
    "end": "804080"
  },
  {
    "text": "parameters that and outputs that I had on this on the previous stack and this",
    "start": "804080",
    "end": "810900"
  },
  {
    "text": "is a very very important part of conformational development don't create these huge stacks create separate stacks",
    "start": "810900",
    "end": "818850"
  },
  {
    "text": "with just what you need and this makes it much easier to test and deploy and",
    "start": "818850",
    "end": "825810"
  },
  {
    "text": "manage your confirmation templates in general so here you can see that I have",
    "start": "825810",
    "end": "832230"
  },
  {
    "text": "the cyber blog for my V PC and I have",
    "start": "832230",
    "end": "837680"
  },
  {
    "text": "four networks for subnets why is that because two of them are private and they",
    "start": "837680",
    "end": "844500"
  },
  {
    "text": "are two so we have redundancy one in each AC so we have a public and a",
    "start": "844500",
    "end": "851279"
  },
  {
    "text": "private subnet / AZ thus for subnets okay and then the declaration of our",
    "start": "851279",
    "end": "861540"
  },
  {
    "text": "resources the V PC the subnet and again here you can see the that trick that we",
    "start": "861540",
    "end": "869670"
  },
  {
    "text": "mentioned in the past episode I am calling the get a ZZZ function on the",
    "start": "869670",
    "end": "876210"
  },
  {
    "text": "region so I know all the a C's from region and selecting the first and then",
    "start": "876210",
    "end": "881940"
  },
  {
    "text": "for the other subnet I'm selecting the second so we don't end up with subnets",
    "start": "881940",
    "end": "887670"
  },
  {
    "text": "in the same AZ because after all the goal of this is to have high",
    "start": "887670",
    "end": "892800"
  },
  {
    "text": "availability regardless of AZ so the same thing for the private subnets and",
    "start": "892800",
    "end": "899339"
  },
  {
    "text": "the resources of passion to your V PC your gateway your internet gateway or",
    "start": "899339",
    "end": "905280"
  },
  {
    "text": "public route and things like this the routing table all the resources from for",
    "start": "905280",
    "end": "910980"
  },
  {
    "text": "your for your network and again the same",
    "start": "910980",
    "end": "917310"
  },
  {
    "text": "the same export trick that we did later to make this resources available to",
    "start": "917310",
    "end": "925080"
  },
  {
    "text": "other stacks so you confirmation is going creates these resources using the export",
    "start": "925080",
    "end": "934350"
  },
  {
    "text": "I am making this VIP and the subnet the",
    "start": "934350",
    "end": "940249"
  },
  {
    "text": "idea of the sub map and everything available to other stacks so again I",
    "start": "940249",
    "end": "946739"
  },
  {
    "text": "have a very convenient shell script to execute this and it's the very same idea",
    "start": "946739",
    "end": "953329"
  },
  {
    "text": "except that I'm passing parameters in a different way so you see the different",
    "start": "953329",
    "end": "958529"
  },
  {
    "text": "ways the confirmation CLI can receive parameters and here you have it here is",
    "start": "958529",
    "end": "967160"
  },
  {
    "text": "I'm just generating a file called CFM base a JDBC jason with my json parameter",
    "start": "967160",
    "end": "975480"
  },
  {
    "text": "is the gallery ID that was generated automatically or fetched from from the",
    "start": "975480",
    "end": "981989"
  },
  {
    "text": "environment and the the VPC block",
    "start": "981989",
    "end": "987209"
  },
  {
    "text": "parameters so instead of using the the DES for 192 addresses space I'm using",
    "start": "987209",
    "end": "998579"
  },
  {
    "text": "the pan address space that I'm passing as parameters just showing you guys how",
    "start": "998579",
    "end": "1004789"
  },
  {
    "text": "to do this and then I'm going to create a stack just like the the way we did for",
    "start": "1004789",
    "end": "1011149"
  },
  {
    "text": "the for the bucket but passing the parameters here as as a file instead of",
    "start": "1011149",
    "end": "1018079"
  },
  {
    "text": "directly passing them into the spirit and I will need those variables",
    "start": "1018079",
    "end": "1024069"
  },
  {
    "text": "subsequent scripts so just create variable to remember the gallery ID and",
    "start": "1024069",
    "end": "1031970"
  },
  {
    "text": "remember the bucket name but that's just it now we can fire the CFM base a JDBC",
    "start": "1031970",
    "end": "1042308"
  },
  {
    "text": "and if we take a look at the",
    "start": "1042309",
    "end": "1047659"
  },
  {
    "text": "confirmation console we can see that already being created and if we take a",
    "start": "1047659",
    "end": "1054529"
  },
  {
    "text": "look at the resources oh here is too big for the for",
    "start": "1054529",
    "end": "1060290"
  },
  {
    "text": "screen but we can't we will soon be able to see the outputs everything that this",
    "start": "1060290",
    "end": "1066140"
  },
  {
    "text": "template has created so actually we",
    "start": "1066140",
    "end": "1071150"
  },
  {
    "text": "don't need to build to wait for this to happen for the next step because the",
    "start": "1071150",
    "end": "1077390"
  },
  {
    "text": "next thing is our beanstalk app so if we",
    "start": "1077390",
    "end": "1083210"
  },
  {
    "start": "1080000",
    "end": "1565000"
  },
  {
    "text": "didn't talk about Beanstalk yet but let me it's all referenced here",
    "start": "1083210",
    "end": "1089750"
  },
  {
    "text": "in our in our guest so here's a the home",
    "start": "1089750",
    "end": "1095150"
  },
  {
    "text": "page for elastic Beanstalk and Beanstalk is an application platform for scaling",
    "start": "1095150",
    "end": "1101690"
  },
  {
    "text": "and the point web apps so it already knows Java PHP Python dotnet and I mean",
    "start": "1101690",
    "end": "1109850"
  },
  {
    "text": "it knows how to do deployments on this platform however the package is structured and even darker if you want",
    "start": "1109850",
    "end": "1117260"
  },
  {
    "text": "to build your own container images and things like that with single images or",
    "start": "1117260",
    "end": "1123080"
  },
  {
    "text": "multi containing multiple containers per instance and things like this so a very",
    "start": "1123080",
    "end": "1128960"
  },
  {
    "text": "powerful application platform for us to start with I know that you have several",
    "start": "1128960",
    "end": "1135770"
  },
  {
    "text": "architectural options at AWS we have instances functions containers and we're",
    "start": "1135770",
    "end": "1141770"
  },
  {
    "text": "going to cover all that but for today as this is the first episode in all testing",
    "start": "1141770",
    "end": "1147410"
  },
  {
    "text": "let's start with regular is it your instances in elastic Beanstalk because I think that's very familiar to a lot of",
    "start": "1147410",
    "end": "1155390"
  },
  {
    "text": "you guys and very simple to get started so the first thing to create a beanstalk",
    "start": "1155390",
    "end": "1162980"
  },
  {
    "text": "app is define an application and this would be again the same of going through",
    "start": "1162980",
    "end": "1168950"
  },
  {
    "text": "the console and taking stuff but here we're defining it as called involve",
    "start": "1168950",
    "end": "1175610"
  },
  {
    "text": "formation so this is the yellow file that we're looking for so here the same",
    "start": "1175610",
    "end": "1183670"
  },
  {
    "text": "gallery ID that you are using to separate our environment and flame and",
    "start": "1183670",
    "end": "1190550"
  },
  {
    "text": "here is the proper bespoke environment the name that it's going to have on the",
    "start": "1190550",
    "end": "1196190"
  },
  {
    "text": "on the service and an instance typed that by the for is e 2 micro here that's",
    "start": "1196190",
    "end": "1204620"
  },
  {
    "text": "we can change it to whatever one I just added T to micro so that it's available",
    "start": "1204620",
    "end": "1210530"
  },
  {
    "text": "in the free tier and you can replicate this without spending too much then oh",
    "start": "1210530",
    "end": "1218870"
  },
  {
    "text": "this is the environment before creating the environment we need to create the app and this is actually the CFM beings",
    "start": "1218870",
    "end": "1227030"
  },
  {
    "text": "called flask template so let's let's start with this one",
    "start": "1227030",
    "end": "1232130"
  },
  {
    "text": "so the we need the airplane first and the app name is sitting ducks the",
    "start": "1232130",
    "end": "1237560"
  },
  {
    "text": "minimal size of the re scaling group that's too tiny so I'm letting the user",
    "start": "1237560",
    "end": "1247010"
  },
  {
    "text": "tell me how many instances do you one does you want he's in this case from two",
    "start": "1247010",
    "end": "1253820"
  },
  {
    "text": "to tiny by the full but these are parameters you can set on our template",
    "start": "1253820",
    "end": "1259070"
  },
  {
    "text": "and then I have a roll instance profile roll there's what my instances are going",
    "start": "1259070",
    "end": "1266750"
  },
  {
    "text": "to be allowed to do so I'm binding the instance to this baby stock rolls so",
    "start": "1266750",
    "end": "1275000"
  },
  {
    "text": "they will have access to elastic Beanstalk api's to tell elastic a PR big",
    "start": "1275000",
    "end": "1281240"
  },
  {
    "text": "shock that the instances are alive and well when they come up and this instance",
    "start": "1281240",
    "end": "1288710"
  },
  {
    "text": "profiles are going to be referenced here the application name will be my gallery",
    "start": "1288710",
    "end": "1294860"
  },
  {
    "text": "ID underscore F knee just just as a combination the configuration templates",
    "start": "1294860",
    "end": "1302690"
  },
  {
    "text": "that I'm going to use and this is my beanstalks settings so every setting",
    "start": "1302690",
    "end": "1308840"
  },
  {
    "text": "that's going to be Defoe for all mine environments are here so let's take a",
    "start": "1308840",
    "end": "1317530"
  },
  {
    "text": "deeper look at this so my application is a reference to the",
    "start": "1317530",
    "end": "1323150"
  },
  {
    "text": "application that was just created the solution named Linux latest version",
    "start": "1323150",
    "end": "1332130"
  },
  {
    "text": "running item so this is what my infrastructure",
    "start": "1332130",
    "end": "1337590"
  },
  {
    "text": "will be and an interesting thing here is that Big Talk automatically figures out",
    "start": "1337590",
    "end": "1343320"
  },
  {
    "text": "what's the latest ami for this and so you don't have to map this to different regions and things that you usually see",
    "start": "1343320",
    "end": "1350550"
  },
  {
    "text": "on some conformational templates and then the the option settings",
    "start": "1350550",
    "end": "1355650"
  },
  {
    "text": "so there's option settings is how you tell being spoke every setting that you",
    "start": "1355650",
    "end": "1362970"
  },
  {
    "text": "need so let's take a look at the the the service documentation so that you'll",
    "start": "1362970",
    "end": "1369570"
  },
  {
    "text": "know what I'm talking here in general",
    "start": "1369570",
    "end": "1377460"
  },
  {
    "text": "options for general games folk if you go to the reference of this variable here's",
    "start": "1377460",
    "end": "1386460"
  },
  {
    "text": "here's how you tell means talk what he wanted to do so for example this",
    "start": "1386460",
    "end": "1393330"
  },
  {
    "text": "variable called environments type sets your environment to launch just one",
    "start": "1393330",
    "end": "1398940"
  },
  {
    "text": "single instance for dev and test for example or I mean full bone environment",
    "start": "1398940",
    "end": "1405450"
  },
  {
    "text": "with load balancer and auto scaling that react as we want to so we are going to",
    "start": "1405450",
    "end": "1411360"
  },
  {
    "text": "use load balance environments and this is why you see it here our environment",
    "start": "1411360",
    "end": "1420030"
  },
  {
    "text": "type is load balance our system health reporting's which use enhances health",
    "start": "1420030",
    "end": "1425910"
  },
  {
    "text": "monitoring the monitor interval is going to be one minute the launch configuration is going to be",
    "start": "1425910",
    "end": "1432360"
  },
  {
    "text": "bound to that instance profile that was created above and the minimum size and",
    "start": "1432360",
    "end": "1438510"
  },
  {
    "text": "the maximum size of the auto scaling group are going to be bound to the parameters I just created and on the",
    "start": "1438510",
    "end": "1447630"
  },
  {
    "text": "outputs again this is exporting the application name and template name so",
    "start": "1447630",
    "end": "1455480"
  },
  {
    "text": "let's take a look at the script to run this and this is very very very simple and",
    "start": "1455480",
    "end": "1465720"
  },
  {
    "text": "just the same as we did for all the others of just a small change is we are",
    "start": "1465780",
    "end": "1473800"
  },
  {
    "text": "using the confirmation deploy command here instead of the create stack what",
    "start": "1473800",
    "end": "1479830"
  },
  {
    "text": "the point does is a bit different from great stack the poi is going to create a",
    "start": "1479830",
    "end": "1486550"
  },
  {
    "text": "change set meaning the set of changes that Beanstalk is going to perform in",
    "start": "1486550",
    "end": "1491920"
  },
  {
    "text": "our behalf and you even can preview this before you apply and then it's going to",
    "start": "1491920",
    "end": "1498250"
  },
  {
    "text": "apply this change set and this supports a few different operations one that's",
    "start": "1498250",
    "end": "1503590"
  },
  {
    "text": "pretty important is the transforms so crate stack does not run supports transforms but deploy can actually",
    "start": "1503590",
    "end": "1510640"
  },
  {
    "text": "transform your original template and this is not something we're going to use",
    "start": "1510640",
    "end": "1516430"
  },
  {
    "text": "now but many other features we're going",
    "start": "1516430",
    "end": "1523180"
  },
  {
    "text": "to talk about this so you better start using using deploy and the parameter",
    "start": "1523180",
    "end": "1528400"
  },
  {
    "text": "passing changes a bit so here's how we can override parameters for the gallery",
    "start": "1528400",
    "end": "1535780"
  },
  {
    "text": "ID and app name if we even needed to but let's see for all practical purpose it",
    "start": "1535780",
    "end": "1545860"
  },
  {
    "text": "would be the same as we've been doing so far so let's just fire CFM Beanstalk",
    "start": "1545860",
    "end": "1555029"
  },
  {
    "text": "flask and this should start creating our",
    "start": "1555330",
    "end": "1561850"
  },
  {
    "text": "first environment so going back to the confirmation console here we have our",
    "start": "1561850",
    "end": "1569410"
  },
  {
    "start": "1565000",
    "end": "1595000"
  },
  {
    "text": "stack is already created and we can see how this is going the VPC IV was created it is V PC 0 970",
    "start": "1569410",
    "end": "1582190"
  },
  {
    "text": "and it was exported as Devon and the",
    "start": "1582190",
    "end": "1587530"
  },
  {
    "text": "name of my dev environment VDC ID and the same for the ID of each",
    "start": "1587530",
    "end": "1593310"
  },
  {
    "text": "so now it comes the fun part right the the interesting part where we",
    "start": "1593310",
    "end": "1599200"
  },
  {
    "text": "actually make a reference to those values as soon as our beam stop flash",
    "start": "1599200",
    "end": "1605710"
  },
  {
    "text": "app is created we can start actually creating environments and again here",
    "start": "1605710",
    "end": "1613180"
  },
  {
    "text": "let's just wait for a little bit while that goes on I will show you the the",
    "start": "1613180",
    "end": "1619990"
  },
  {
    "text": "template so this is where things actually start happening in terms of",
    "start": "1619990",
    "end": "1626620"
  },
  {
    "text": "compute this is where we are bringing up our first compute instance and just now",
    "start": "1626620",
    "end": "1633190"
  },
  {
    "text": "we're starting to actually compute before we did the preparation work so",
    "start": "1633190",
    "end": "1639400"
  },
  {
    "text": "let's just review what we are doing so far we are creating an application for",
    "start": "1639400",
    "end": "1644890"
  },
  {
    "text": "load testing and we are creating it using elastic Beanstalk and we created",
    "start": "1644890",
    "end": "1651100"
  },
  {
    "text": "the bucket to store the packages and configuration and anything else we need",
    "start": "1651100",
    "end": "1657400"
  },
  {
    "text": "we created the virtual private cloud the network infrastructure to host our app",
    "start": "1657400",
    "end": "1663880"
  },
  {
    "text": "and we created the Beanstalk application the logical configuration of our app",
    "start": "1663880",
    "end": "1670540"
  },
  {
    "text": "security settings and so and so forth so now let's bring up on environment and",
    "start": "1670540",
    "end": "1676710"
  },
  {
    "text": "the first thing that we need is an application version and the application",
    "start": "1676710",
    "end": "1682810"
  },
  {
    "text": "version is going to be just a bundle of this whole directory I'm not making I",
    "start": "1682810",
    "end": "1690850"
  },
  {
    "text": "could be fancier with this beauty and we are going to work a lot in our build",
    "start": "1690850",
    "end": "1696520"
  },
  {
    "text": "process in future videos but for now let's just take this whole directory zip",
    "start": "1696520",
    "end": "1703570"
  },
  {
    "text": "it up and submit to being stock and that's how we're gonna work the EB",
    "start": "1703570",
    "end": "1711190"
  },
  {
    "text": "environment is the actual compute environment that we want and",
    "start": "1711190",
    "end": "1717700"
  },
  {
    "text": "is a very very special import value function the import file function is the",
    "start": "1717700",
    "end": "1724360"
  },
  {
    "text": "one that will bring up a value from other stack and import into this one so",
    "start": "1724360",
    "end": "1730930"
  },
  {
    "text": "here you can see that my gallery ID if",
    "start": "1730930",
    "end": "1737020"
  },
  {
    "text": "it's the same it's going to match the application name that was exported by",
    "start": "1737020",
    "end": "1742210"
  },
  {
    "text": "this stack and this way I can have references between one stack and another",
    "start": "1742210",
    "end": "1749710"
  },
  {
    "text": "how cool is that and the environment name will be that environment name",
    "start": "1749710",
    "end": "1755530"
  },
  {
    "text": "variable the configuration template you can see that everything references the",
    "start": "1755530",
    "end": "1761200"
  },
  {
    "text": "stuff that was created on the others on the other templates by cross stack",
    "start": "1761200",
    "end": "1767560"
  },
  {
    "text": "references and the important thing to understand about cross stack references",
    "start": "1767560",
    "end": "1774100"
  },
  {
    "text": "is that it's just a name reference it's not binding the lifecycle of these",
    "start": "1774100",
    "end": "1779560"
  },
  {
    "text": "components if you delete the environment you don't delete the stack or the",
    "start": "1779560",
    "end": "1786210"
  },
  {
    "text": "artifacts bucket or anything that we created I can delete this new",
    "start": "1786210",
    "end": "1791350"
  },
  {
    "text": "environment and keep the rest of the infrastructure untouched or even delete",
    "start": "1791350",
    "end": "1799840"
  },
  {
    "text": "other apps and this won't be affected right and you can see that this can be",
    "start": "1799840",
    "end": "1809110"
  },
  {
    "text": "used with other Confirmation intrinsic functions for example here I take the",
    "start": "1809110",
    "end": "1816250"
  },
  {
    "text": "subnet a and the subnet B IDs and join",
    "start": "1816250",
    "end": "1821260"
  },
  {
    "text": "them with a comma and pass it to the subnets property of my binstock",
    "start": "1821260",
    "end": "1826540"
  },
  {
    "text": "environment so this environment is going to be brought up in distro subnets and",
    "start": "1826540",
    "end": "1832210"
  },
  {
    "text": "in the end it's going to have a mint point URL like work should i target my",
    "start": "1832210",
    "end": "1837970"
  },
  {
    "text": "requests and this is it so let's let's",
    "start": "1837970",
    "end": "1843520"
  },
  {
    "text": "bring this up and for that again we have a in script for you and this script is a",
    "start": "1843520",
    "end": "1851519"
  },
  {
    "text": "bit different than the other ones because it have three steps instead of just one right here I have a package",
    "start": "1851519",
    "end": "1860129"
  },
  {
    "text": "command CF and Link command and the deploy command so let's go through step",
    "start": "1860129",
    "end": "1866669"
  },
  {
    "text": "by step and understand what each one is doing the confirmation package template",
    "start": "1866669",
    "end": "1873480"
  },
  {
    "text": "is going to transform our template from one thing to another it's going to get a",
    "start": "1873480",
    "end": "1881850"
  },
  {
    "text": "very selected set of properties transform change their value upload it",
    "start": "1881850",
    "end": "1888779"
  },
  {
    "text": "to a mastery bucket and that's how our SV bucket comes into play and output the",
    "start": "1888779",
    "end": "1895830"
  },
  {
    "text": "template from you template with the variable reference changed and what is",
    "start": "1895830",
    "end": "1902820"
  },
  {
    "text": "the goal of this it should change this value here the source bundle property so",
    "start": "1902820",
    "end": "1913320"
  },
  {
    "text": "this first photo will be packaged by",
    "start": "1913320",
    "end": "1919139"
  },
  {
    "text": "CloudFormation template by this command and so this the packaging command is",
    "start": "1919139",
    "end": "1926059"
  },
  {
    "text": "actually zipping this first bundle applauding should have mentioned s3",
    "start": "1926059",
    "end": "1934350"
  },
  {
    "text": "bucket the free bucket right here and",
    "start": "1934350",
    "end": "1940278"
  },
  {
    "text": "outputs the template through in your files so if you see them the name of the",
    "start": "1940970",
    "end": "1946529"
  },
  {
    "text": "output file is just the same file but dot out dot e mo so if we take a look at",
    "start": "1946529",
    "end": "1952710"
  },
  {
    "text": "the last one that I created here take a look at this property the the source",
    "start": "1952710",
    "end": "1959399"
  },
  {
    "text": "bundle property instead of having just the dot that we had before so here it",
    "start": "1959399",
    "end": "1965519"
  },
  {
    "text": "was just a small dot and now it has been",
    "start": "1965519",
    "end": "1973440"
  },
  {
    "text": "replaced by this by the s3 bucket and",
    "start": "1973440",
    "end": "1979470"
  },
  {
    "text": "this s tricky so I know exactly where that is so let's this is for packaging",
    "start": "1979470",
    "end": "1991859"
  },
  {
    "text": "and after packaging our template I'm going to use the CFM delete - and this",
    "start": "1991859",
    "end": "2003350"
  },
  {
    "text": "is a liter it's a checker to see if my confirmation template has any errors so if I have any",
    "start": "2003350",
    "end": "2011690"
  },
  {
    "text": "error in my confirmation template it will tell me and this is very very useful to prevent errors to prevent",
    "start": "2011690",
    "end": "2019669"
  },
  {
    "text": "problems and then having to wait for the confirmation to create everything and then come back and one important part of",
    "start": "2019669",
    "end": "2028700"
  },
  {
    "text": "this is this linker is just for synthetic errors not for other kinds of",
    "start": "2028700",
    "end": "2036139"
  },
  {
    "text": "problems such as name conflicts and things that confirmation well or we learn in runtime but everything that can",
    "start": "2036139",
    "end": "2042919"
  },
  {
    "text": "be prevented from source analysis is going to be done here",
    "start": "2042919",
    "end": "2048049"
  },
  {
    "text": "and then it's going to be the boy with the same confirmation deployed comment",
    "start": "2048049",
    "end": "2053148"
  },
  {
    "text": "that we've been using so let's try that and create our first environment",
    "start": "2053149",
    "end": "2067299"
  },
  {
    "text": "this romantic this would take a bit longer than the other commands because",
    "start": "2070179",
    "end": "2075669"
  },
  {
    "start": "2075000",
    "end": "2165000"
  },
  {
    "text": "the other ones were creating more logical structures this one is the one that actually brings up an instance so",
    "start": "2075669",
    "end": "2084148"
  },
  {
    "text": "we're going to have to to wait for this a little bit and why do we wait if you",
    "start": "2084149",
    "end": "2092319"
  },
  {
    "text": "have any questions at all feel free to to to ask questions",
    "start": "2092319",
    "end": "2099910"
  },
  {
    "text": "hello the terminus I'm going to paste it again here the link that I pasted before",
    "start": "2099910",
    "end": "2106720"
  },
  {
    "text": "and so if you're just tuning in this is",
    "start": "2106720",
    "end": "2113099"
  },
  {
    "text": "software engineering session welcome this is a Tobias cup computing we were talking about scalability we are trying",
    "start": "2113099",
    "end": "2120550"
  },
  {
    "text": "to answer this question how our system adapt changes in demand so this is our",
    "start": "2120550",
    "end": "2127150"
  },
  {
    "text": "goal of today and the first thing is to have your system so to have something to",
    "start": "2127150",
    "end": "2134170"
  },
  {
    "text": "test we are building up a sample app fire-starting in it we've a very very",
    "start": "2134170",
    "end": "2141190"
  },
  {
    "text": "simple app on elastic beanstalk and Confirmation trying to define everything",
    "start": "2141190",
    "end": "2147190"
  },
  {
    "text": "as code and we're going to start firing requests at it just to see how if we",
    "start": "2147190",
    "end": "2154119"
  },
  {
    "text": "increase the load how does the system handles it and that's what we are",
    "start": "2154119",
    "end": "2160390"
  },
  {
    "text": "interested in learning about and everything that you see here all the",
    "start": "2160390",
    "end": "2166869"
  },
  {
    "start": "2165000",
    "end": "2315000"
  },
  {
    "text": "code is available on github it's just a sample code that I should I'm showing",
    "start": "2166869",
    "end": "2173349"
  },
  {
    "text": "directly with you guys and and that's pretty much it so let's take a look at",
    "start": "2173349",
    "end": "2185020"
  },
  {
    "text": "the Beanstalk console just to check if everything is going as expected and okay",
    "start": "2185020",
    "end": "2193630"
  },
  {
    "text": "our application is coming up on elastic base thought it's still raised to being",
    "start": "2193630",
    "end": "2199180"
  },
  {
    "text": "created we can click and see what it's doing like it's waiting for the i-16 loop instances",
    "start": "2199180",
    "end": "2205940"
  },
  {
    "text": "to launch screaming cult a lot alarms and things like this so if we go to ec2",
    "start": "2205940",
    "end": "2212540"
  },
  {
    "text": "we can now see our instances we have two",
    "start": "2212540",
    "end": "2217580"
  },
  {
    "text": "instances coming up right soon enough we're going to have the default",
    "start": "2217580",
    "end": "2225980"
  },
  {
    "text": "formation templates boot booted and this is a very it can be seen has a very",
    "start": "2225980",
    "end": "2234140"
  },
  {
    "text": "complicated way to create a simple confirmation template and I could have done this in many many different ways",
    "start": "2234140",
    "end": "2240860"
  },
  {
    "text": "and this is the way that I work personally and I've discovered that this",
    "start": "2240860",
    "end": "2247040"
  },
  {
    "text": "small tricks like keeping them templates small using cross tech references with a",
    "start": "2247040",
    "end": "2254510"
  },
  {
    "text": "single identifier generating unique IDs and creating new environments for",
    "start": "2254510",
    "end": "2260300"
  },
  {
    "text": "testing stuff this is all just little tricks that helps me and I hope and can",
    "start": "2260300",
    "end": "2265580"
  },
  {
    "text": "help you guys and but you can further the different stuff this is just one way",
    "start": "2265580",
    "end": "2272240"
  },
  {
    "text": "of using the the set of services but it's there are some really really",
    "start": "2272240",
    "end": "2278840"
  },
  {
    "text": "interesting things there and we're going to cover all of the small tips because",
    "start": "2278840",
    "end": "2285770"
  },
  {
    "text": "the Sam of this is more tips mix can add up and really help your architecture one",
    "start": "2285770",
    "end": "2292700"
  },
  {
    "text": "thing end up reversing another and that's our goal so our environment was",
    "start": "2292700",
    "end": "2299810"
  },
  {
    "text": "created and let's see if it's green not",
    "start": "2299810",
    "end": "2305780"
  },
  {
    "text": "yet but now it is all green I'm ready to go",
    "start": "2305780",
    "end": "2311930"
  },
  {
    "text": "so here we have a beanstalk app and it says hello so hello world is our",
    "start": "2311930",
    "end": "2321560"
  },
  {
    "text": "inevitable example so let's take a look at the code of the app right now so",
    "start": "2321560",
    "end": "2328010"
  },
  {
    "text": "we're done with the infrastructure code so we saw this yeah no files those are",
    "start": "2328010",
    "end": "2335360"
  },
  {
    "text": "the cult templates that we are using today and that we can that we can move right that",
    "start": "2335360",
    "end": "2345019"
  },
  {
    "text": "we can declare our infrastructure as code so you can see that everything we built the instances the network the",
    "start": "2345019",
    "end": "2353539"
  },
  {
    "text": "bucket everything at all I never even had to get into the confirmation console",
    "start": "2353539",
    "end": "2360349"
  },
  {
    "text": "and create anything everything is created and managed exclusively by code",
    "start": "2360349",
    "end": "2366349"
  },
  {
    "text": "and with this you can automate things very easily and quickly again a few",
    "start": "2366349",
    "end": "2374390"
  },
  {
    "text": "important parts here modular eyes you can see there I separated my stacks into a small stacks",
    "start": "2374390",
    "end": "2383479"
  },
  {
    "text": "that are easy to work that I there are easier to test right you can also do",
    "start": "2383479",
    "end": "2390079"
  },
  {
    "text": "this in bundles but after you're done and let's take a look at it so we if",
    "start": "2390079",
    "end": "2398420"
  },
  {
    "text": "let's suppose that you want to create everything at once I don't I don't want",
    "start": "2398420",
    "end": "2405650"
  },
  {
    "text": "to go for the stab of create one create the other create the other create the",
    "start": "2405650",
    "end": "2412429"
  },
  {
    "text": "other and keep referencing things like this there is actually a way you can",
    "start": "2412429",
    "end": "2417469"
  },
  {
    "text": "build everything at once so take a look at this temple load testing 101 it's the",
    "start": "2417469",
    "end": "2425569"
  },
  {
    "text": "same set of resources but here we have this a blast confirmation stack resource",
    "start": "2425569",
    "end": "2433279"
  },
  {
    "text": "and this is very very very important because this allows you for one",
    "start": "2433279",
    "end": "2439849"
  },
  {
    "text": "confirmation stack to create another confirmation stack so here you can see",
    "start": "2439849",
    "end": "2445969"
  },
  {
    "text": "that I can create the VPC the flask app",
    "start": "2445969",
    "end": "2451869"
  },
  {
    "text": "the environment and I can say that the environment depends on the app the app",
    "start": "2451869",
    "end": "2458749"
  },
  {
    "text": "depends on the VTC the VPC depends on parameters and whatnot so the idea here",
    "start": "2458749",
    "end": "2466960"
  },
  {
    "text": "is a bit different because if I delete this stack if I create this and then I",
    "start": "2466960",
    "end": "2473050"
  },
  {
    "text": "delete it will delete all the child stacks and this is the most important",
    "start": "2473050",
    "end": "2478630"
  },
  {
    "text": "difference between nested stacks and cross stack references so this is a very",
    "start": "2478630",
    "end": "2485020"
  },
  {
    "text": "important piece of confirmation so let me repeat this to you guys when you use",
    "start": "2485020",
    "end": "2490150"
  },
  {
    "text": "AWS confirmation stack you're using nested stacks and their lifecycle is",
    "start": "2490150",
    "end": "2496690"
  },
  {
    "text": "bound so when you delete the parent stack all the stacks that are defining here will be gone when you use import",
    "start": "2496690",
    "end": "2505180"
  },
  {
    "text": "value you're using cross stack references and in this way the stacks",
    "start": "2505180",
    "end": "2511359"
  },
  {
    "text": "are not bound they just share names with one another and depending on the",
    "start": "2511359",
    "end": "2517349"
  },
  {
    "text": "behavior you want one is more appropriate than another if you just",
    "start": "2517349",
    "end": "2522580"
  },
  {
    "text": "want to manage individual components you can use nested stacks cross deck",
    "start": "2522580",
    "end": "2528580"
  },
  {
    "text": "references if you want to delete the app and delete all the components you can",
    "start": "2528580",
    "end": "2534520"
  },
  {
    "text": "use nested stacks and you can even use them together so as you can see here",
    "start": "2534520",
    "end": "2541530"
  },
  {
    "text": "those nested stacks those are nested stacks but they do have crossed",
    "start": "2541530",
    "end": "2547720"
  },
  {
    "text": "occurrences no problem it's just a matter of how you group them together and that's okay as well so make sure you",
    "start": "2547720",
    "end": "2555790"
  },
  {
    "text": "take a look at conformation mastered stacks and cross deck references oh okay the the code mink is is here on",
    "start": "2555790",
    "end": "2565300"
  },
  {
    "text": "the on the document I just sure sr1",
    "start": "2565300",
    "end": "2574470"
  },
  {
    "text": "eight nine zero thanks for this but here is the here is the direct link to the",
    "start": "2574470",
    "end": "2581950"
  },
  {
    "text": "code okay so let's take a look at the",
    "start": "2581950",
    "end": "2587080"
  },
  {
    "start": "2585000",
    "end": "2885000"
  },
  {
    "text": "actual code of our application so the app is here on as looks that's our",
    "start": "2587080",
    "end": "2594130"
  },
  {
    "text": "packaged application dot p wine and you can see that the",
    "start": "2594130",
    "end": "2599980"
  },
  {
    "text": "slash root this is a flask app Python flask app so a very popular web",
    "start": "2599980",
    "end": "2608680"
  },
  {
    "text": "framework for restful services hope you heard of it but it could be any app any",
    "start": "2608680",
    "end": "2615640"
  },
  {
    "text": "language would work the same here it's not something specific for Python now",
    "start": "2615640",
    "end": "2621430"
  },
  {
    "text": "I'm just taking this application as an example we could do literally anything",
    "start": "2621430",
    "end": "2627340"
  },
  {
    "text": "here I'm just claiming initial example again so we have something to shoot",
    "start": "2627340",
    "end": "2633580"
  },
  {
    "text": "against and the shooting is the important part what you're shooting against in this case at least for today",
    "start": "2633580",
    "end": "2640660"
  },
  {
    "text": "it doesn't matter very much so let's this is the resource have a",
    "start": "2640660",
    "end": "2646030"
  },
  {
    "text": "world that we just saw and I have very",
    "start": "2646030",
    "end": "2652690"
  },
  {
    "text": "peculiar have hobby of perform profiling",
    "start": "2652690",
    "end": "2659350"
  },
  {
    "text": "Fibonacci generators for fun so I got a few of them implemented here and we are",
    "start": "2659350",
    "end": "2665710"
  },
  {
    "text": "going to see which one is faster so what do you think this is the recursive the",
    "start": "2665710",
    "end": "2672700"
  },
  {
    "text": "iterative implementation of Fibonacci so if you don't know people machi sequences",
    "start": "2672700",
    "end": "2678790"
  },
  {
    "text": "he doesn't do let's take a look to the to define them it's just a sequence",
    "start": "2678790",
    "end": "2685210"
  },
  {
    "text": "where the next element is the sum of the previews so so it would be 0 1 1 2 3 5 8",
    "start": "2685210",
    "end": "2701340"
  },
  {
    "text": "and things like this I think you've got the you think you've got to add the idea",
    "start": "2701340",
    "end": "2707850"
  },
  {
    "text": "everybody knows upon H buy these days I hope and here's the iterative definition",
    "start": "2707850",
    "end": "2716890"
  },
  {
    "text": "we are going to go from 1 to N and for each one some some the next and return",
    "start": "2716890",
    "end": "2724660"
  },
  {
    "text": "and recursive implementation is a bit more straightforward if the",
    "start": "2724660",
    "end": "2731109"
  },
  {
    "text": "value is greater than one we return n minus 1 plus n minus 2 or else returned",
    "start": "2731109",
    "end": "2737369"
  },
  {
    "text": "the current value and this recursive",
    "start": "2737369",
    "end": "2743130"
  },
  {
    "text": "very a bit shorter and some say more elegant and this one is using a Python",
    "start": "2743130",
    "end": "2751119"
  },
  {
    "text": "generator it's lazily computing this as in each",
    "start": "2751119",
    "end": "2758289"
  },
  {
    "text": "call to next it's going to run one evaluation of this function and yield a",
    "start": "2758289",
    "end": "2766119"
  },
  {
    "text": "new Fibonacci element here is a memorized version that will keep values",
    "start": "2766119",
    "end": "2774069"
  },
  {
    "text": "in memory I have this memorizes any function and I have a memorizing",
    "start": "2774069",
    "end": "2781660"
  },
  {
    "text": "definition of Fibonacci just a bit below so here's the memo eyes of the iterative",
    "start": "2781660",
    "end": "2791140"
  },
  {
    "text": "fibonacci passing the same X so I have different paths to each of those",
    "start": "2791140",
    "end": "2799720"
  },
  {
    "text": "[Music] yeah we're getting children to the load part to the load testing part this is",
    "start": "2799720",
    "end": "2806319"
  },
  {
    "text": "the the load the load paths that I'm going to test and we need a load",
    "start": "2806319",
    "end": "2812739"
  },
  {
    "text": "generator to generate the to this load and we're going to start using jmeter",
    "start": "2812739",
    "end": "2818589"
  },
  {
    "text": "I'm a dumb as mapo and jmeter came up as a frequent favorite we're going to talk",
    "start": "2818589",
    "end": "2824709"
  },
  {
    "text": "about this other other performance",
    "start": "2824709",
    "end": "2831569"
  },
  {
    "text": "generator load test generators such as Vegeta or Reiner and others but for now",
    "start": "2831569",
    "end": "2839949"
  },
  {
    "text": "let's doom Demeter so I have Demeter",
    "start": "2839949",
    "end": "2845709"
  },
  {
    "text": "installed here at my system that sees",
    "start": "2845709",
    "end": "2852130"
  },
  {
    "text": "two meter",
    "start": "2852130",
    "end": "2854758"
  },
  {
    "text": "let's do it from the on the proper folder alright so I got you meet her up",
    "start": "2857529",
    "end": "2883119"
  },
  {
    "text": "let's start a new test plan and I'm adding let's add treads as a tread group",
    "start": "2883119",
    "end": "2891709"
  },
  {
    "start": "2885000",
    "end": "2930000"
  },
  {
    "text": "and this telling I'm sorry for the small",
    "start": "2891709",
    "end": "2896989"
  },
  {
    "text": "interface in jmeter I'm going to keep zooming this in if if",
    "start": "2896989",
    "end": "2902509"
  },
  {
    "text": "needed and here the it's just to say how many",
    "start": "2902509",
    "end": "2908479"
  },
  {
    "text": "threads I want to create I don't like too much we call it users but what's it",
    "start": "2908479",
    "end": "2914119"
  },
  {
    "text": "doing and how many how long it's going to take to ramp up to this user number",
    "start": "2914119",
    "end": "2919849"
  },
  {
    "text": "and how many times it's going to do this so let's keep one user forever in one",
    "start": "2919849",
    "end": "2926329"
  },
  {
    "text": "second just restart then add a simple HTTP request sampler so we can make an",
    "start": "2926329",
    "end": "2934789"
  },
  {
    "start": "2930000",
    "end": "2995000"
  },
  {
    "text": "HTTP request and we're going to make this edge if you request to our",
    "start": "2934789",
    "end": "2940910"
  },
  {
    "text": "Beanstalk infrastructures so here it is let's take the endpoint of our being",
    "start": "2940910",
    "end": "2948559"
  },
  {
    "text": "Spock stack here it is",
    "start": "2948559",
    "end": "2952809"
  },
  {
    "text": "and this is a server that we are healing your healing on HTTP on for aiding and I",
    "start": "2958619",
    "end": "2973559"
  },
  {
    "text": "want the let's start with fibonacci iterative and that's it",
    "start": "2973559",
    "end": "2984900"
  },
  {
    "text": "and to see the to see the results I can add a listener and the listeners are",
    "start": "2984900",
    "end": "2990809"
  },
  {
    "text": "listening for the requests results and I will view the results in three and this",
    "start": "2990809",
    "end": "2996569"
  },
  {
    "start": "2995000",
    "end": "3085000"
  },
  {
    "text": "is possibly the simplest Jaime term test case we can create and again we are just",
    "start": "2996569",
    "end": "3005779"
  },
  {
    "text": "starting with this in this series and we are going to get every every episode adding complexity and other requirements",
    "start": "3005779",
    "end": "3015619"
  },
  {
    "text": "to this if you will so here in our case which we have our requests coming along",
    "start": "3015619",
    "end": "3021410"
  },
  {
    "text": "fine and the request is coming on we can add the Fibonacci number in the",
    "start": "3021410",
    "end": "3029569"
  },
  {
    "text": "parameters to request so if I add a parameter named X with the value of 10",
    "start": "3029569",
    "end": "3036650"
  },
  {
    "text": "just to force this CPUs a little bit we can reload the test and see if you want",
    "start": "3036650",
    "end": "3045319"
  },
  {
    "text": "actual 10 that it's 55 and how its hotter coming along and so everything",
    "start": "3045319",
    "end": "3053839"
  },
  {
    "text": "works fine let's do something more more interesting so I will name this field",
    "start": "3053839",
    "end": "3061039"
  },
  {
    "text": "eater and you can see the suggest we can organise things here and I will also add",
    "start": "3061039",
    "end": "3070900"
  },
  {
    "text": "the timer right the listener to see the",
    "start": "3073029",
    "end": "3081380"
  },
  {
    "text": "results so I will add the summary report so which we can see there the summarized",
    "start": "3081380",
    "end": "3088069"
  },
  {
    "start": "3085000",
    "end": "3105000"
  },
  {
    "text": "results of what's going on here",
    "start": "3088069",
    "end": "3092200"
  },
  {
    "text": "and let's see let's start again test and",
    "start": "3093100",
    "end": "3102430"
  },
  {
    "text": "this is what we are wanting to see so in",
    "start": "3102430",
    "end": "3107570"
  },
  {
    "start": "3105000",
    "end": "3155000"
  },
  {
    "text": "this case we are not varying the user but we can start taking some notion of",
    "start": "3107570",
    "end": "3115160"
  },
  {
    "text": "performance we have like 100 samples under requests fired at our destination",
    "start": "3115160",
    "end": "3120620"
  },
  {
    "text": "on average they're taking like 180 185",
    "start": "3120620",
    "end": "3125890"
  },
  {
    "text": "milliseconds to complete the mini moon was 126 the maximum for 110 this is the",
    "start": "3125890",
    "end": "3134120"
  },
  {
    "text": "standard deviation nor ever serve so far 5 of those per second we can reach and",
    "start": "3134120",
    "end": "3141440"
  },
  {
    "text": "so on and so forth so the idea here now is let's see if we increase the user",
    "start": "3141440",
    "end": "3147260"
  },
  {
    "text": "load how this changes right but before that let's make some configuration",
    "start": "3147260",
    "end": "3155470"
  },
  {
    "start": "3155000",
    "end": "3285000"
  },
  {
    "text": "changes here so we will duplicate this and test the other fibonacci paths that",
    "start": "3155470",
    "end": "3163340"
  },
  {
    "text": "we have but on jmeter we have this very useful concept called HTTP defaults we",
    "start": "3163340",
    "end": "3174950"
  },
  {
    "text": "can set the config element HTTP confab conflicted the false let's see where is",
    "start": "3174950",
    "end": "3184690"
  },
  {
    "text": "HP requested force here it is and I will",
    "start": "3184690",
    "end": "3189800"
  },
  {
    "text": "set this as the fall for this thread group so we don't need to repeat this",
    "start": "3189800",
    "end": "3195080"
  },
  {
    "text": "every time so instead of adding this to each and every one of the paths that I",
    "start": "3195080",
    "end": "3200990"
  },
  {
    "text": "have I will have everybody shooting at the same port number the same hosts the",
    "start": "3200990",
    "end": "3208130"
  },
  {
    "text": "same protocol and even I want them with the same X so",
    "start": "3208130",
    "end": "3215750"
  },
  {
    "text": "I'll add the same X but let's try more interesting value and first the CPU is a",
    "start": "3215750",
    "end": "3222590"
  },
  {
    "text": "little bit more so I can remove this and shoot and we",
    "start": "3222590",
    "end": "3234800"
  },
  {
    "text": "can see in the results came everything safe coming along fine so we have the",
    "start": "3234800",
    "end": "3240830"
  },
  {
    "text": "fibonacci of plenty coming out and the",
    "start": "3240830",
    "end": "3245900"
  },
  {
    "text": "reports right everything still works so let's add the deep other guys so I will",
    "start": "3245900",
    "end": "3254810"
  },
  {
    "text": "duplicate this to the people matching set of the iterative version we have",
    "start": "3254810",
    "end": "3261430"
  },
  {
    "text": "recursive one so this is a rack and",
    "start": "3261430",
    "end": "3270460"
  },
  {
    "text": "duplicate again we have a memo acid version a generate of a generator",
    "start": "3270460",
    "end": "3278150"
  },
  {
    "text": "version first this is very simple",
    "start": "3278150",
    "end": "3283700"
  },
  {
    "text": "Fibonacci generators but you can see this could be any path on your app web",
    "start": "3283700",
    "end": "3289430"
  },
  {
    "text": "app we could have one for logging one for buy purchase add user register pass",
    "start": "3289430",
    "end": "3296840"
  },
  {
    "text": "different parameters anything you guys would like and there is many approach",
    "start": "3296840",
    "end": "3302210"
  },
  {
    "text": "many different approaches to load testing I don't like recording users so much I'm",
    "start": "3302210",
    "end": "3309280"
  },
  {
    "text": "because this is create it's harder to interpret the results",
    "start": "3309280",
    "end": "3315380"
  },
  {
    "text": "I think the creating request by request by hand needed leads to better results",
    "start": "3315380",
    "end": "3320859"
  },
  {
    "text": "but again this is something that everybody does it differently and the in",
    "start": "3320859",
    "end": "3327170"
  },
  {
    "text": "the end the memoirs version of the of the algorithm yeah yeah just a bit I",
    "start": "3327170",
    "end": "3337400"
  },
  {
    "text": "will review the server side just get let's just get this working and we'll go",
    "start": "3337400",
    "end": "3344150"
  },
  {
    "text": "through review",
    "start": "3344150",
    "end": "3347650"
  },
  {
    "text": "so here's our our load generator let's start firing requests and we can see the",
    "start": "3351350",
    "end": "3361750"
  },
  {
    "text": "the requests coming along and here's just one guy remember that our tread",
    "start": "3361750",
    "end": "3368630"
  },
  {
    "text": "group is set to one so we're not imposing a lot of load here we're just",
    "start": "3368630",
    "end": "3373930"
  },
  {
    "text": "playing it nice for for a warm-up we have very similar numbers here for the",
    "start": "3373930",
    "end": "3384430"
  },
  {
    "text": "average for the minimum for the maximum except for the memoirs version that took",
    "start": "3384430",
    "end": "3390320"
  },
  {
    "text": "awhile here but not a lot of differences so let's stop this and try to impose a",
    "start": "3390320",
    "end": "3398600"
  },
  {
    "text": "bit more on this so let's start by doing a bit more intensive calculations on the",
    "start": "3398600",
    "end": "3406070"
  },
  {
    "text": "CPU trying to get the Fibonacci of 30 or something like this and instead of just",
    "start": "3406070",
    "end": "3412490"
  },
  {
    "text": "keeping with one user we're going to run start let's say ten ten users and ramp",
    "start": "3412490",
    "end": "3424790"
  },
  {
    "text": "up in 60 seconds you can see that this",
    "start": "3424790",
    "end": "3429800"
  },
  {
    "text": "will change things a bit so on the summary report here you can see here on",
    "start": "3429800",
    "end": "3440840"
  },
  {
    "text": "the on the top right side of the screen the amount of threads the amount of users that were created n and yes it",
    "start": "3440840",
    "end": "3449750"
  },
  {
    "text": "does this this network delay thing is",
    "start": "3449750",
    "end": "3454790"
  },
  {
    "text": "important if you'd like to reduce the network delays here and that's a very",
    "start": "3454790",
    "end": "3460100"
  },
  {
    "text": "important part of it you can't run jmeter from AWS here I'm",
    "start": "3460100",
    "end": "3466130"
  },
  {
    "text": "running it from desktop you could run it on your own ec2 instance or on",
    "start": "3466130",
    "end": "3471170"
  },
  {
    "text": "workspaces and I'm I have right just that running here and thanks to terminus",
    "start": "3471170",
    "end": "3477740"
  },
  {
    "text": "this is a great tip if you check out Amazon workspaces that's a virtual",
    "start": "3477740",
    "end": "3483590"
  },
  {
    "text": "desktop I one of those here and it's just a separate desktop on the cloud where I",
    "start": "3483590",
    "end": "3491869"
  },
  {
    "text": "have the same thing running for my tests so I have another jmeter running",
    "start": "3491869",
    "end": "3497060"
  },
  {
    "text": "instance running here with a lot of requests coming along and this is",
    "start": "3497060",
    "end": "3503690"
  },
  {
    "text": "running form for a long time now it's generating some errors and things like",
    "start": "3503690",
    "end": "3509000"
  },
  {
    "text": "this so in but as this one is on AWS",
    "start": "3509000",
    "end": "3514580"
  },
  {
    "text": "it's got short term network times so if your network here I'm at an AWS office",
    "start": "3514580",
    "end": "3522080"
  },
  {
    "text": "so the network latency to AWS is probably not going to be a problem but",
    "start": "3522080",
    "end": "3527599"
  },
  {
    "text": "if you need to make sure that network latency is not impacting your tasks I",
    "start": "3527599",
    "end": "3533300"
  },
  {
    "text": "highly recommend running the test from our workspaces are on ec2 instance so",
    "start": "3533300",
    "end": "3541400"
  },
  {
    "text": "taking a look at at our tests we can see some interesting things now we can see",
    "start": "3541400",
    "end": "3548390"
  },
  {
    "text": "that here the that mean enable the this",
    "start": "3548390",
    "end": "3554869"
  },
  {
    "text": "zone here just real quick I believe it's in Mouse I need to accessibility right I",
    "start": "3554869",
    "end": "3567020"
  },
  {
    "text": "wanna show you guys some important parts",
    "start": "3567020",
    "end": "3573619"
  },
  {
    "text": "of this so this should work so here we",
    "start": "3573619",
    "end": "3579650"
  },
  {
    "text": "can see that as expected the recursive implementation of Fibonacci in average",
    "start": "3579650",
    "end": "3587420"
  },
  {
    "text": "takes three seconds and even if we have no errors now you can see that the",
    "start": "3587420",
    "end": "3594020"
  },
  {
    "text": "minimum and the max and the average for the recursive implementation is very",
    "start": "3594020",
    "end": "3599780"
  },
  {
    "text": "very different than the other implementations so here is again in",
    "start": "3599780",
    "end": "3606050"
  },
  {
    "text": "regular app this would probably be the different transactions and services that",
    "start": "3606050",
    "end": "3611270"
  },
  {
    "text": "you offer and here's one thing that we take a look at and we can see that as we",
    "start": "3611270",
    "end": "3618239"
  },
  {
    "text": "change parameters and change load these values will impact and there are two",
    "start": "3618239",
    "end": "3625739"
  },
  {
    "text": "things here that we are wanting to see when when it's the wellick that question",
    "start": "3625739",
    "end": "3635399"
  },
  {
    "text": "is how do your application behave when your system has received load when it",
    "start": "3635399",
    "end": "3641729"
  },
  {
    "text": "changes but what do you want to know well you want to know the numbers the",
    "start": "3641729",
    "end": "3647609"
  },
  {
    "text": "the latency and the errors mostly and we're going to talk about percentiles",
    "start": "3647609",
    "end": "3652890"
  },
  {
    "text": "and things like this and in other",
    "start": "3652890",
    "end": "3658099"
  },
  {
    "text": "reports and there is a lot we can do here but for today we're going to be",
    "start": "3658099",
    "end": "3664709"
  },
  {
    "text": "looking at this averages and this errors and make sure that they stay around this",
    "start": "3664709",
    "end": "3671279"
  },
  {
    "text": "so we don't want many errors and we don't want to see the change a lot as",
    "start": "3671279",
    "end": "3679380"
  },
  {
    "text": "the application scales up right and let's let's take a look at how we can",
    "start": "3679380",
    "end": "3688139"
  },
  {
    "text": "make it more interesting so in our red group instead of just 10",
    "start": "3688139",
    "end": "3694199"
  },
  {
    "text": "users let's go and do 20 users or better yet 30 users and instead of ranking in",
    "start": "3694199",
    "end": "3702599"
  },
  {
    "text": "one minute let's go a bit more and gradually and take it in two minutes so",
    "start": "3702599",
    "end": "3710269"
  },
  {
    "text": "when I play this you should see users ramp up to 30 and you know hi oh it's",
    "start": "3710269",
    "end": "3719339"
  },
  {
    "text": "starting as we expect with very little",
    "start": "3719339",
    "end": "3724499"
  },
  {
    "text": "problems but soon as things scale we are going to see something's change and why",
    "start": "3724499",
    "end": "3731849"
  },
  {
    "text": "and how we define what changes what how do my application react to this how can",
    "start": "3731849",
    "end": "3740369"
  },
  {
    "text": "we monitor and what goes on here and as you know this",
    "start": "3740369",
    "end": "3745950"
  },
  {
    "text": "is by cloud watch as you probably know this is yeah-yeah-yeah jmeter totally",
    "start": "3745950",
    "end": "3752340"
  },
  {
    "text": "can can be used for testing anything it's just a matter of setting pointing",
    "start": "3752340",
    "end": "3758430"
  },
  {
    "text": "it to to localhost if you put it local host instead of AWS it will shoot",
    "start": "3758430",
    "end": "3764310"
  },
  {
    "text": "local host so let's take a look at these scaling pyro things how does beanstalk",
    "start": "3764310",
    "end": "3772290"
  },
  {
    "text": "add or remove instances and this is all done by cloud watch so we have a service",
    "start": "3772290",
    "end": "3780330"
  },
  {
    "text": "called called watch and cola watch is going to trigger alarms and let's take a",
    "start": "3780330",
    "end": "3787860"
  },
  {
    "text": "look at called watch monitoring here and metrics and see what's going on so here",
    "start": "3787860",
    "end": "3795720"
  },
  {
    "text": "is one example alarm so this alarm is",
    "start": "3795720",
    "end": "3802020"
  },
  {
    "text": "based on network throughput but there are many different alarms we're going to",
    "start": "3802020",
    "end": "3808230"
  },
  {
    "text": "talk about him a lot and the idea is when a given metric here is that work",
    "start": "3808230",
    "end": "3814800"
  },
  {
    "text": "out when the average over a period of time it could be other statistics some",
    "start": "3814800",
    "end": "3821960"
  },
  {
    "text": "minimum and things like this but when a given statistic over a period of l value",
    "start": "3821960",
    "end": "3828440"
  },
  {
    "text": "passes a given threshold in this case 2002 million bytes and it will breach",
    "start": "3828440",
    "end": "3836430"
  },
  {
    "text": "the alarm and the interesting thing for today is how we define these alarms as",
    "start": "3836430",
    "end": "3843060"
  },
  {
    "text": "code and this is what I'd like to show you next because I have here this EB",
    "start": "3843060",
    "end": "3849390"
  },
  {
    "text": "extensions directory and this EB extensions is where you tell elastic",
    "start": "3849390",
    "end": "3856440"
  },
  {
    "text": "Beanstalk further properties further missions further templates",
    "start": "3856440",
    "end": "3863580"
  },
  {
    "text": "anything you would like to customize and make your application install packages",
    "start": "3863580",
    "end": "3869310"
  },
  {
    "text": "run commands everything you claim declaring this dot config files under dot EB extensions and this includes",
    "start": "3869310",
    "end": "3878250"
  },
  {
    "text": "CloudFormation resources so I'm adding more more confirmation resources from",
    "start": "3878250",
    "end": "3886110"
  },
  {
    "text": "within my Beanstalk app and a good thing",
    "start": "3886110",
    "end": "3891180"
  },
  {
    "text": "is that this Beanstalk app it can this",
    "start": "3891180",
    "end": "3896880"
  },
  {
    "text": "Beanstalk confirmation this confirmation from within Beanstalk can make these references so this is a hard-coded name",
    "start": "3896880",
    "end": "3906420"
  },
  {
    "text": "let's say that Beanstalk uses if you want to reference its auto scaling group",
    "start": "3906420",
    "end": "3911550"
  },
  {
    "text": "so it's always scaling in capacity so I created an already scaling policy here",
    "start": "3911550",
    "end": "3920000"
  },
  {
    "text": "bound to the elastic Beanstalk our scaling group saying that this will add",
    "start": "3920000",
    "end": "3928260"
  },
  {
    "text": "one instance when the alarm fibers but the alarm is that actually references",
    "start": "3928260",
    "end": "3936390"
  },
  {
    "text": "the the property so the the metric and",
    "start": "3936390",
    "end": "3942510"
  },
  {
    "text": "the policy right so here is what my",
    "start": "3942510",
    "end": "3947910"
  },
  {
    "text": "alarm mutant I call it high CPU learn and if I have an alarm with four ec2 CPU",
    "start": "3947910",
    "end": "3956610"
  },
  {
    "text": "utilization on this particular auto scaling group by Beanstalk when the",
    "start": "3956610",
    "end": "3962820"
  },
  {
    "text": "average for two periods of 60 minutes",
    "start": "3962820",
    "end": "3968150"
  },
  {
    "text": "reaches the threshold of 80% I will fire the alarm action scale up so this is",
    "start": "3968150",
    "end": "3976470"
  },
  {
    "text": "telling being stalked telling air blasts to create an alarm on cloud watch when",
    "start": "3976470",
    "end": "3982710"
  },
  {
    "text": "the CPU utilization goes over 80% for two minutes on average I will fire does",
    "start": "3982710",
    "end": "3990780"
  },
  {
    "text": "that the scaling policy and this will add one we make the adjustment of",
    "start": "3990780",
    "end": "3997740"
  },
  {
    "text": "putting one more instance to our or scaling group and with this the law will",
    "start": "3997740",
    "end": "4003800"
  },
  {
    "text": "be towards this will have a better",
    "start": "4003800",
    "end": "4009590"
  },
  {
    "text": "however infrastructures might marry",
    "start": "4009590",
    "end": "4021450"
  },
  {
    "text": "callings so then the DNS didn't ask",
    "start": "4021450",
    "end": "4029040"
  },
  {
    "text": "issues or depends on the what DNS issues you're talking about my recordings and",
    "start": "4029040",
    "end": "4035300"
  },
  {
    "text": "the the one thing the that lb does is",
    "start": "4035300",
    "end": "4040380"
  },
  {
    "text": "health check so the instances will be only put into service once they are",
    "start": "4040380",
    "end": "4046910"
  },
  {
    "text": "health checked but there's not much you can do about the DNS caches and things",
    "start": "4046910",
    "end": "4055320"
  },
  {
    "text": "that are outside the enterprise environment so the it depends on what",
    "start": "4055320",
    "end": "4062880"
  },
  {
    "text": "you do what issues you mean like if you give us a clear definition of you the",
    "start": "4062880",
    "end": "4070260"
  },
  {
    "text": "the issues that you mean I can give a further description but you definitely",
    "start": "4070260",
    "end": "4077880"
  },
  {
    "text": "can use this with a lb Beanstalk and Confirmation do support the application",
    "start": "4077880",
    "end": "4084930"
  },
  {
    "text": "load balancer entirely so let's take a look at the environment that we just",
    "start": "4084930",
    "end": "4090810"
  },
  {
    "text": "created and see how's it's how it's doing it's on 71% latency you can see",
    "start": "4090810",
    "end": "4100588"
  },
  {
    "text": "that we reached 50% of CPU utilization and things like this let's go a bit more",
    "start": "4100589",
    "end": "4108390"
  },
  {
    "text": "aggressive and and do like similar",
    "start": "4108390",
    "end": "4116040"
  },
  {
    "text": "reports let's say requests harder",
    "start": "4116040",
    "end": "4121109"
  },
  {
    "text": "Fibonacci's to calculate let's say to the tree for example perhaps add a few",
    "start": "4121109",
    "end": "4129508"
  },
  {
    "text": "users like 35 or so so this",
    "start": "4129509",
    "end": "4135088"
  },
  {
    "text": "I mean five let's do let's do 50 just to",
    "start": "4135089",
    "end": "4141480"
  },
  {
    "text": "sit crack and here on the on the results",
    "start": "4141480",
    "end": "4149810"
  },
  {
    "text": "with few users three users for users we see that the the metrics are still fine",
    "start": "4149810",
    "end": "4158338"
  },
  {
    "text": "but we're going to see that as this progresses and our applications goes on",
    "start": "4158339",
    "end": "4164068"
  },
  {
    "text": "we need to think a bit more of the of what to do because this is clearly not",
    "start": "4164069",
    "end": "4172740"
  },
  {
    "text": "it's not going it's going I'm going to have to either change my instance type",
    "start": "4172740",
    "end": "4179370"
  },
  {
    "text": "or think better about my fleet and change my architecture to accommodate",
    "start": "4179370",
    "end": "4185190"
  },
  {
    "text": "the the load that you plan to use so",
    "start": "4185190",
    "end": "4194910"
  },
  {
    "text": "were quick if it's possible to use this time of testing against machine learning for those deployed on Sage maker yeah",
    "start": "4194910",
    "end": "4203240"
  },
  {
    "text": "totally especially if you put them behind an HTTP endpoint it makes it very",
    "start": "4203240",
    "end": "4209790"
  },
  {
    "text": "much easy and it's the same same idea just fire HTTP requests and what's",
    "start": "4209790",
    "end": "4217110"
  },
  {
    "text": "behind if it's sage maker evaluation or whatever that Modi beat a pose we're",
    "start": "4217110",
    "end": "4225090"
  },
  {
    "text": "going to see this with machine learning databases serverless all sorts of resources thanks for asking",
    "start": "4225090",
    "end": "4232260"
  },
  {
    "text": "about machine learning that's something we definitely should include in this",
    "start": "4232260",
    "end": "4237780"
  },
  {
    "text": "series and as you can see here our average times our like the people not",
    "start": "4237780",
    "end": "4247380"
  },
  {
    "text": "cheap recursive is taking like 22 seconds already huh on average and five",
    "start": "4247380",
    "end": "4255120"
  },
  {
    "text": "seconds four seconds all those averages are increasing a lot and this is clearly",
    "start": "4255120",
    "end": "4261450"
  },
  {
    "text": "because mine as requests hey Eric are taking",
    "start": "4261450",
    "end": "4266680"
  },
  {
    "text": "longer to process because we increase it the Fibonacci number we requested and we",
    "start": "4266680",
    "end": "4271780"
  },
  {
    "text": "have more people asking things are starting to queue up so requests are",
    "start": "4271780",
    "end": "4277450"
  },
  {
    "text": "having to wait before they're calculated in the queue and if they take long",
    "start": "4277450",
    "end": "4284410"
  },
  {
    "text": "enough as we will see it may even because some errors but this is",
    "start": "4284410",
    "end": "4290320"
  },
  {
    "text": "certainly causing our CPU to zation to go higher so if we open the the CPU here",
    "start": "4290320",
    "end": "4298540"
  },
  {
    "text": "the monitoring periods takes a minute so it will take a while before we see the",
    "start": "4298540",
    "end": "4305860"
  },
  {
    "text": "the actual results but soon enough we will see the our metric being breached",
    "start": "4305860",
    "end": "4314020"
  },
  {
    "text": "and our alarm getting caught so here we have the alarm that we define the high",
    "start": "4314020",
    "end": "4320140"
  },
  {
    "text": "CPU alarm that we define on on the environment and it's just waiting for",
    "start": "4320140",
    "end": "4325740"
  },
  {
    "text": "the for that 80% threshold should be to",
    "start": "4325740",
    "end": "4331120"
  },
  {
    "text": "be hit before it fires so that's that's how that's how Beanstalk scales and I",
    "start": "4331120",
    "end": "4342390"
  },
  {
    "text": "mean I hope we will reach a hundred percent is it shooting I don't know",
    "start": "4342390",
    "end": "4347920"
  },
  {
    "text": "white it's down it's still shooting it's 15 users which we will see the CPU",
    "start": "4347920",
    "end": "4357460"
  },
  {
    "text": "getting high soon enough ok and when it",
    "start": "4357460",
    "end": "4364030"
  },
  {
    "text": "when it breaches the the alarm will see",
    "start": "4364030",
    "end": "4369850"
  },
  {
    "text": "the the dashboard the basic - dashboard here we have two instances right one",
    "start": "4369850",
    "end": "4377350"
  },
  {
    "text": "running we can see that they are in different AZ's and this is because the minimum of instances that we have is",
    "start": "4377350",
    "end": "4384970"
  },
  {
    "text": "true and you if you'd like to see details for individual instances here we",
    "start": "4384970",
    "end": "4390700"
  },
  {
    "text": "have instance monitoring for each one and I stopped and starts the test so",
    "start": "4390700",
    "end": "4397990"
  },
  {
    "text": "that's why we are seeing the violence I'm having to wait a",
    "start": "4397990",
    "end": "4403440"
  },
  {
    "text": "little bit for the new ones to come up but very soon we should have this",
    "start": "4403440",
    "end": "4409350"
  },
  {
    "text": "environment totally swamped by Rick by",
    "start": "4409350",
    "end": "4414480"
  },
  {
    "text": "our Dream Eater requests right at least that's what I'm hoping to see here and",
    "start": "4414480",
    "end": "4424700"
  },
  {
    "text": "when that happens we are going to see perhaps some errors when we reach a",
    "start": "4424700",
    "end": "4431130"
  },
  {
    "text": "hundred percent or or even more so let's just wait for this monitoring be updated",
    "start": "4431130",
    "end": "4440040"
  },
  {
    "text": "so the Beanstalk is if I'm warning here",
    "start": "4440040",
    "end": "4445080"
  },
  {
    "text": "that our environment is with 100 CPOE",
    "start": "4445080",
    "end": "4450630"
  },
  {
    "text": "news so we are effectively we still have",
    "start": "4450630",
    "end": "4456530"
  },
  {
    "text": "100 percent of to hundreds not errors but if we keep pushing this we will",
    "start": "4456530",
    "end": "4463080"
  },
  {
    "text": "certainly start getting errors here and we can see the latency percentiles the",
    "start": "4463080",
    "end": "4471440"
  },
  {
    "text": "99% of our requests are under 30 90 seconds 90 percent are under bismuth and",
    "start": "4471440",
    "end": "4478560"
  },
  {
    "text": "so and so forth so we can see that our environment is totally overloaded let's",
    "start": "4478560",
    "end": "4486390"
  },
  {
    "text": "say and soon enough we should have the",
    "start": "4486390",
    "end": "4492650"
  },
  {
    "text": "target and you can see that those things are not like instant when they take it",
    "start": "4492650",
    "end": "4499350"
  },
  {
    "text": "takes a while for the for the monitor you to pick and react and fire up a new",
    "start": "4499350",
    "end": "4506940"
  },
  {
    "text": "instance so that's what we are doing here so let's just I will leave this",
    "start": "4506940",
    "end": "4512340"
  },
  {
    "text": "running and soon enough we should we should see it catching up another thing",
    "start": "4512340",
    "end": "4518730"
  },
  {
    "text": "I'd like to show you guys is different approaches to load generation right now",
    "start": "4518730",
    "end": "4524850"
  },
  {
    "text": "we are using jmeter and this is something I'd like to know from you what you guys prefer that we do",
    "start": "4524850",
    "end": "4530829"
  },
  {
    "text": "the series so here's jmeter you can see how we we start requests how we define",
    "start": "4530829",
    "end": "4544119"
  },
  {
    "text": "everything in a G in a graphical manner so here's a meter it's a visual so very",
    "start": "4544119",
    "end": "4553269"
  },
  {
    "text": "fearful to in the sense that if you want to know what it's doing you have to click and click and click and see the",
    "start": "4553269",
    "end": "4561579"
  },
  {
    "text": "settings and see the the tree and see the report and everything is very",
    "start": "4561579",
    "end": "4568530"
  },
  {
    "text": "graphical in a sense right of course that you can do the meter without this",
    "start": "4568530",
    "end": "4575079"
  },
  {
    "text": "you can run j meter from the shell and have a report but it's not the way it's",
    "start": "4575079",
    "end": "4580629"
  },
  {
    "text": "usually use it or the the features that",
    "start": "4580629",
    "end": "4588010"
  },
  {
    "text": "it has for reporting in this way Arabic limited but the emitter is a very powerful tool and very complete in a lot",
    "start": "4588010",
    "end": "4595869"
  },
  {
    "text": "of ways and one thing that I like that I'd like to show that very unique to the",
    "start": "4595869",
    "end": "4601659"
  },
  {
    "text": "meter as the to set that you have as it's a very popular and well traditional",
    "start": "4601659",
    "end": "4608979"
  },
  {
    "text": "java tool you have all sorts of plugins and here in G meter plugins it's a very",
    "start": "4608979",
    "end": "4616839"
  },
  {
    "text": "cool website with everything related to other types of tests so if you want to",
    "start": "4616839",
    "end": "4623499"
  },
  {
    "text": "test heads up as a sage or other types of reports there's all sorts of plugins",
    "start": "4623499",
    "end": "4629829"
  },
  {
    "text": "that you can install and check one that I'm that's really popular is the G",
    "start": "4629829",
    "end": "4640239"
  },
  {
    "text": "meters schedule Bookman I don't remember the exact name so this",
    "start": "4640239",
    "end": "4649749"
  },
  {
    "text": "is the exact name concurrency fred grew up blood pudding here you can instead of",
    "start": "4649749",
    "end": "4656619"
  },
  {
    "text": "defining just a thread group and a ramp-up period you can add more steps",
    "start": "4656619",
    "end": "4663609"
  },
  {
    "text": "you can start with a given load and maintain that for a while and then ramp up to the",
    "start": "4663609",
    "end": "4670970"
  },
  {
    "text": "next level and maintain that for a while and depending on the type of death",
    "start": "4670970",
    "end": "4676060"
  },
  {
    "text": "you're trying to build this is very very useful so take this jmeter plugins may",
    "start": "4676060",
    "end": "4682250"
  },
  {
    "text": "may really really help but still we were talking about taking this graphical",
    "start": "4682250",
    "end": "4688300"
  },
  {
    "text": "orientation and doing things graphically I'd like to to show things yeah",
    "start": "4688300",
    "end": "4700449"
  },
  {
    "text": "let me let me take a look at this question so Myrick Collins says by the",
    "start": "4700750",
    "end": "4707900"
  },
  {
    "text": "for Lasky being soft we were trying at the addresses when thanks for from DNS resolution if the records minimum your",
    "start": "4707900",
    "end": "4715220"
  },
  {
    "text": "order yeah the thing is always used the DNS name you never used the IP but there",
    "start": "4715220",
    "end": "4727070"
  },
  {
    "text": "is no additional delay from using the alb or you have to understand is that one when an instance comes up it will be",
    "start": "4727070",
    "end": "4734300"
  },
  {
    "text": "added to a load balancer and health tracker and one only once it's up and running it will be serving under the",
    "start": "4734300",
    "end": "4742760"
  },
  {
    "text": "load balancer so it's perfectly safe and works with both load balancers but back",
    "start": "4742760",
    "end": "4750860"
  },
  {
    "text": "to the load generators I'd like to show another load generator besides jmeter",
    "start": "4750860",
    "end": "4756230"
  },
  {
    "text": "that takes a different approach so we can see how this thing's can be a bit",
    "start": "4756230",
    "end": "4763760"
  },
  {
    "text": "different and I'd like to show Gatling yakking is a very very popular tool but",
    "start": "4763760",
    "end": "4771770"
  },
  {
    "text": "instead of defining the tests as an",
    "start": "4771770",
    "end": "4778070"
  },
  {
    "text": "interface and saving them as XML it's code so when you save this this jmeter",
    "start": "4778070",
    "end": "4787580"
  },
  {
    "text": "file here is the junior max here's the XML that jmeter generates you can't understand like",
    "start": "4787580",
    "end": "4795680"
  },
  {
    "text": "you're not going to go this and understand what it's doing but it's all define it here in contrast when",
    "start": "4795680",
    "end": "4803530"
  },
  {
    "text": "you get a gatling definition it's it's cold so here's the skala cold it's a",
    "start": "4803530",
    "end": "4812920"
  },
  {
    "text": "scowl but it's a very simplified or a very adapted version of scala the main",
    "start": "4812920",
    "end": "4820449"
  },
  {
    "text": "specific language let's say for HTTP load generation so here I'm doing the",
    "start": "4820449",
    "end": "4828369"
  },
  {
    "text": "same thing that I did for my jmeter test and how we even get the the same",
    "start": "4828369",
    "end": "4835860"
  },
  {
    "text": "binstock environment that we are using so let's fire against it from two tools",
    "start": "4835860",
    "end": "4842440"
  },
  {
    "text": "at the same time and see what happens and I'm going to use this and of course",
    "start": "4842440",
    "end": "4852789"
  },
  {
    "text": "I could be passing this as a parameter or doing this in many different ways I",
    "start": "4852789",
    "end": "4858460"
  },
  {
    "text": "just wanted to show you that I am defined defining a value X of 33 or for",
    "start": "4858460",
    "end": "4868090"
  },
  {
    "text": "HTTP sent test scenarios the same ones that we have and I'm ramping up to 100",
    "start": "4868090",
    "end": "4877329"
  },
  {
    "text": "finally users let's just do 12 over 30 seconds and just not fire so badly",
    "start": "4877329",
    "end": "4884920"
  },
  {
    "text": "against our environment and see what it what it does so how do we called Gatling",
    "start": "4884920",
    "end": "4893289"
  },
  {
    "text": "this is the script to call it here is where it's installed in my machine I",
    "start": "4893289",
    "end": "4899550"
  },
  {
    "text": "just Gatling dot SF with the at the current",
    "start": "4899550",
    "end": "4907719"
  },
  {
    "text": "directory and the name of the the testing class and that's it so oops here",
    "start": "4907719",
    "end": "4918280"
  },
  {
    "text": "it's better oh I have I don't have gasoline",
    "start": "4918280",
    "end": "4928300"
  },
  {
    "text": "installed on this machine so let's do this now I was testing this on a separate one so",
    "start": "4928300",
    "end": "4937020"
  },
  {
    "text": "this is Gatling",
    "start": "4937020",
    "end": "4940710"
  },
  {
    "text": "and",
    "start": "4953000",
    "end": "4956000"
  },
  {
    "text": "I just copied to my home directory and now it should work cannot be found the",
    "start": "4958869",
    "end": "4972579"
  },
  {
    "text": "classpath you should have worked",
    "start": "4972579",
    "end": "4981539"
  },
  {
    "text": "so on the currently that in the current directory the test is testing 101 on",
    "start": "4981539",
    "end": "4991050"
  },
  {
    "text": "that single point of scala on the",
    "start": "4991469",
    "end": "4998770"
  },
  {
    "text": "package as ducks on user files simulations everything looks good",
    "start": "4998770",
    "end": "5005880"
  },
  {
    "text": "I sincerely don't know what's going on here oh yeah I'm perhaps wrong do on",
    "start": "5005880",
    "end": "5014460"
  },
  {
    "text": "directory",
    "start": "5014460",
    "end": "5017059"
  },
  {
    "text": "you",
    "start": "5030929",
    "end": "5032989"
  },
  {
    "text": "let me try calling gasoline but Sh directly here it usually asks for the",
    "start": "5041610",
    "end": "5052610"
  },
  {
    "text": "user file simulations",
    "start": "5052610",
    "end": "5056840"
  },
  {
    "text": "yep sorry about this guys I don't know what why it's not finding my my",
    "start": "5066240",
    "end": "5072900"
  },
  {
    "text": "simulation does use it to work",
    "start": "5072900",
    "end": "5078110"
  },
  {
    "text": "well I'm not debugging this now I will take a look at why this is isn't work",
    "start": "5089760",
    "end": "5096360"
  },
  {
    "text": "and we take a look at Gatling in the next episode but again the more important thing the",
    "start": "5096360",
    "end": "5103890"
  },
  {
    "text": "information that we would get out of a gettin report is the exact same the",
    "start": "5103890",
    "end": "5109500"
  },
  {
    "text": "important part is how you define things instead of defining things visually it's",
    "start": "5109500",
    "end": "5117560"
  },
  {
    "text": "defining encode now it's not about the",
    "start": "5117560",
    "end": "5123470"
  },
  {
    "text": "extension because it's the gasoline horn",
    "start": "5123470",
    "end": "5129450"
  },
  {
    "text": "is working and Gatling is being cold",
    "start": "5129450",
    "end": "5135590"
  },
  {
    "text": "let's see on the simulation folder is",
    "start": "5138230",
    "end": "5146520"
  },
  {
    "text": "here minus SF start so this is the yeah",
    "start": "5146520",
    "end": "5160760"
  },
  {
    "text": "it's probably searching for the directory for the filing in a separate",
    "start": "5171300",
    "end": "5177630"
  },
  {
    "text": "folder so I will give just one attempt",
    "start": "5177630",
    "end": "5183620"
  },
  {
    "text": "it may be the case that instead of looking on user file simulations as",
    "start": "5183620",
    "end": "5190110"
  },
  {
    "text": "ducks where it's my project it may be looking at its own folder user file",
    "start": "5190110",
    "end": "5197360"
  },
  {
    "text": "simulations here so I don't know let's see yeah",
    "start": "5197360",
    "end": "5207650"
  },
  {
    "text": "I'm not guessing we will take a look at this offline and tell you guys in the",
    "start": "5207650",
    "end": "5215430"
  },
  {
    "text": "next episode what it was and we can take a better look at Gatling but the the",
    "start": "5215430",
    "end": "5221760"
  },
  {
    "text": "idea is the same right yet run the run",
    "start": "5221760",
    "end": "5227070"
  },
  {
    "text": "this HTTP tests over this period of time with this ramping up such as many users",
    "start": "5227070",
    "end": "5233340"
  },
  {
    "text": "but the thing is when you take a look at the Gatling past or if you take a look",
    "start": "5233340",
    "end": "5239190"
  },
  {
    "text": "at VG at Locust it's the same idea so what goes to old testing will be the",
    "start": "5239190",
    "end": "5246780"
  },
  {
    "text": "same thing yeah I didn't even use the C",
    "start": "5246780",
    "end": "5255450"
  },
  {
    "text": "I just called getting even without parameters it doesn't find the you",
    "start": "5255450",
    "end": "5260580"
  },
  {
    "text": "should have asked it for the further files but Gatling has this this some of",
    "start": "5260580",
    "end": "5268800"
  },
  {
    "text": "these issues and this file only mechanism is a bit weird I will have I",
    "start": "5268800",
    "end": "5275610"
  },
  {
    "text": "will definitely check have to check it out so sorry about that but the",
    "start": "5275610",
    "end": "5281790"
  },
  {
    "text": "important thing is the the difference and you can see the same thing for other languages such as Python has its own",
    "start": "5281790",
    "end": "5290210"
  },
  {
    "text": "version and there are many many other tools that the similar things and in",
    "start": "5290210",
    "end": "5298500"
  },
  {
    "text": "this series we're going to take a look at many of them were just talking today with jmeter",
    "start": "5298500",
    "end": "5304160"
  },
  {
    "text": "and should be doing a bit of Kathleen but that would be on the next one and on",
    "start": "5304160",
    "end": "5312489"
  },
  {
    "text": "and on the gist that's what I was",
    "start": "5313120",
    "end": "5321470"
  },
  {
    "text": "looking for on the guests here you have all the load generators that I'm",
    "start": "5321470",
    "end": "5329750"
  },
  {
    "text": "considering here so just as a quick round we took a look at jmeter gatling",
    "start": "5329750",
    "end": "5336200"
  },
  {
    "text": "locust it's another code basil but for python based on python vegeta will take a file",
    "start": "5336200",
    "end": "5344660"
  },
  {
    "text": "of HTTP request definitions and iterate through them very simple tool but very",
    "start": "5344660",
    "end": "5352160"
  },
  {
    "text": "very useful bees with machine guns have a property that they do distributed load",
    "start": "5352160",
    "end": "5358190"
  },
  {
    "text": "testing very well with spin up a cluster of ec2 instances and fire against you",
    "start": "5358190",
    "end": "5363950"
  },
  {
    "text": "several as artillery is this similar idea but without using servers or",
    "start": "5363950",
    "end": "5369800"
  },
  {
    "text": "machines running on a de brest lambda and Dryden grinders are old to form for",
    "start": "5369800",
    "end": "5376700"
  },
  {
    "text": "Java based load testing as well that also does distributive testing but a bit",
    "start": "5376700",
    "end": "5382840"
  },
  {
    "text": "deprecated not so much actively built anymore so let's take a look at the most",
    "start": "5382840",
    "end": "5391730"
  },
  {
    "text": "important parts for for today so and I",
    "start": "5391730",
    "end": "5398480"
  },
  {
    "text": "let's see if they if we have more instances here by and by any chance",
    "start": "5398480",
    "end": "5405580"
  },
  {
    "text": "so still the the same - I guess we're not putting enough load on this let's go",
    "start": "5407860",
    "end": "5415100"
  },
  {
    "text": "and stop this and in line 35 or even 40",
    "start": "5415100",
    "end": "5424390"
  },
  {
    "text": "just to completely overload this",
    "start": "5424390",
    "end": "5429650"
  },
  {
    "text": "instances now it's certainly going to",
    "start": "5429650",
    "end": "5435429"
  },
  {
    "text": "fire that alarm and I have a few of",
    "start": "5435429",
    "end": "5441469"
  },
  {
    "text": "those running here in a separate environment and we can also add the the",
    "start": "5441469",
    "end": "5451010"
  },
  {
    "text": "other thing I'd like to show you guys is how to create everything at once so",
    "start": "5451010",
    "end": "5457250"
  },
  {
    "text": "again the mo that we built generated everything is running at the same time",
    "start": "5457250",
    "end": "5466850"
  },
  {
    "text": "here in confirmation so let me run it",
    "start": "5466850",
    "end": "5476020"
  },
  {
    "text": "with so it's going to do exactly the",
    "start": "5476530",
    "end": "5486050"
  },
  {
    "text": "same thing create the same resources based on the same templates but it's going to do all in one step and run on",
    "start": "5486050",
    "end": "5493820"
  },
  {
    "text": "them on the same and bind them on the",
    "start": "5493820",
    "end": "5501590"
  },
  {
    "text": "same stack so here you see that when you use nested stacks the stacks that are",
    "start": "5501590",
    "end": "5507080"
  },
  {
    "text": "nested so here as nested so you can know that they're child of this one and if I",
    "start": "5507080",
    "end": "5514520"
  },
  {
    "text": "delete this one it will delete all the child ones if I update it it will update",
    "start": "5514520",
    "end": "5520699"
  },
  {
    "text": "all the child one so this is a difference between an assets axe and",
    "start": "5520699",
    "end": "5525739"
  },
  {
    "text": "cross tech references so this is pretty",
    "start": "5525739",
    "end": "5531770"
  },
  {
    "text": "much what I have to share with you guys today and the important things here is",
    "start": "5531770",
    "end": "5539630"
  },
  {
    "text": "how you define your infrastructure as code and this is the app that I built",
    "start": "5539630",
    "end": "5546050"
  },
  {
    "text": "for us to start testing the simple dogs here and we are going to add more",
    "start": "5546050",
    "end": "5552290"
  },
  {
    "text": "resources to this app the server less resources databases containers just like",
    "start": "5552290",
    "end": "5558770"
  },
  {
    "text": "we did for our servers in Beanstalk we're going to do for all sorts of other wise things",
    "start": "5558770",
    "end": "5565120"
  },
  {
    "text": "and the way we make the templates is by",
    "start": "5565120",
    "end": "5571450"
  },
  {
    "text": "using the scroll stack references so make sure you understand this import",
    "start": "5571450",
    "end": "5576760"
  },
  {
    "text": "value and this export value here so this is the these are the statements that",
    "start": "5576760",
    "end": "5586270"
  },
  {
    "text": "allows you to share values between stacks and with a very simple naming",
    "start": "5586270",
    "end": "5592590"
  },
  {
    "text": "standard you can find things and modularize or development with",
    "start": "5592590",
    "end": "5597910"
  },
  {
    "text": "confirmation and any other it supported AWS services and here's the important",
    "start": "5597910",
    "end": "5605260"
  },
  {
    "text": "idea of building your architecture in layers so we have the s3 bucket for the",
    "start": "5605260",
    "end": "5611620"
  },
  {
    "text": "files the hav PC with the networking infrastructure on top of it environments",
    "start": "5611620",
    "end": "5619060"
  },
  {
    "text": "that we want and the flask and this helps a lot because when you're testing",
    "start": "5619060",
    "end": "5625260"
  },
  {
    "text": "your app you can go to your load to your",
    "start": "5625260",
    "end": "5633630"
  },
  {
    "text": "properties file to your templates and make several tests at once for example",
    "start": "5633630",
    "end": "5639220"
  },
  {
    "text": "say that I want this environment but I",
    "start": "5639220",
    "end": "5644320"
  },
  {
    "text": "want to one with small instances one with instance type I don't know the true",
    "start": "5644320",
    "end": "5653140"
  },
  {
    "text": "large for example so you can so you can",
    "start": "5653140",
    "end": "5661300"
  },
  {
    "text": "see how does impact on on your application performance and the whole",
    "start": "5661300",
    "end": "5669820"
  },
  {
    "text": "idea here is and setting this numbers and passing it on on your favorite load",
    "start": "5669820",
    "end": "5676660"
  },
  {
    "text": "generator here we are talking jmeter you could be using Gatling locos and",
    "start": "5676660",
    "end": "5683080"
  },
  {
    "text": "others we certainly are industries checking how things work so we can see",
    "start": "5683080",
    "end": "5689110"
  },
  {
    "text": "that things are queuing up a lot we have errors already and let's see how the Beanstalk",
    "start": "5689110",
    "end": "5697720"
  },
  {
    "text": "environment is managing so CP you got up",
    "start": "5697720",
    "end": "5707830"
  },
  {
    "text": "to 100% but got down suddenly after I'm",
    "start": "5707830",
    "end": "5713190"
  },
  {
    "text": "apparently not hitting this hard enough or perhaps too hard",
    "start": "5713190",
    "end": "5721530"
  },
  {
    "text": "no not yeah certainly not enough because",
    "start": "5722190",
    "end": "5732730"
  },
  {
    "text": "I have as I have two instances this is per instance but we're we started a task",
    "start": "5732730",
    "end": "5738640"
  },
  {
    "text": "but we are back to 100% very soon we should have our instance",
    "start": "5738640",
    "end": "5746080"
  },
  {
    "text": "coming up in its just wait a bit for me",
    "start": "5746080",
    "end": "5754930"
  },
  {
    "text": "for that and this is all for today folks if you have any question or comment at",
    "start": "5754930",
    "end": "5761020"
  },
  {
    "text": "all our next episode is this Friday and we are going to do a very similar tests",
    "start": "5761020",
    "end": "5767710"
  },
  {
    "text": "but with without servers we're going to use server less functions on AWS lambda",
    "start": "5767710",
    "end": "5774670"
  },
  {
    "text": "and see how much more or less performant",
    "start": "5774670",
    "end": "5780070"
  },
  {
    "text": "that is compared to a situation stances so we are going to fire at the same code",
    "start": "5780070",
    "end": "5787690"
  },
  {
    "text": "at the same time at instances containers and functions big instances big",
    "start": "5787690",
    "end": "5794200"
  },
  {
    "text": "functions small instances small functions and containers and let's see",
    "start": "5794200",
    "end": "5799860"
  },
  {
    "text": "starts taking some performance understanding and trying to understand",
    "start": "5799860",
    "end": "5805810"
  },
  {
    "text": "the perfect urdu first the performance characteristics but most importantly the",
    "start": "5805810",
    "end": "5811090"
  },
  {
    "text": "scaling characteristics you can see that here scaling is totally on me and I'm",
    "start": "5811090",
    "end": "5818830"
  },
  {
    "text": "responsible for setting the alarms and saying that when this criteria has",
    "start": "5818830",
    "end": "5825579"
  },
  {
    "text": "pants fire up more instances or less instances and I did it here so this is",
    "start": "5825579",
    "end": "5833139"
  },
  {
    "text": "the scale up and I'd like to leave you guys the exercise of doing the scale",
    "start": "5833139",
    "end": "5840730"
  },
  {
    "text": "down so if you send me the skill down poor request I would be very happy to",
    "start": "5840730",
    "end": "5847590"
  },
  {
    "text": "add it to our app and even other scale up criterias that you may have so scale",
    "start": "5847590",
    "end": "5855040"
  },
  {
    "text": "up by memory or by network or by any",
    "start": "5855040",
    "end": "5861880"
  },
  {
    "text": "other criteria any metric that you see on cloud watch can be used for for",
    "start": "5861880",
    "end": "5868030"
  },
  {
    "text": "scaling and this is how you define it I'm very less detail that I'd like to",
    "start": "5868030",
    "end": "5874329"
  },
  {
    "text": "highlight is this policy type on our scaling and I added it to our gift and",
    "start": "5874329",
    "end": "5882730"
  },
  {
    "text": "hearing the gifts you can see the",
    "start": "5882730",
    "end": "5888300"
  },
  {
    "text": "dynamics gain for Amazon ec2 also scaling link and this will show you that",
    "start": "5890219",
    "end": "5898420"
  },
  {
    "text": "we have this three different scaling policy types you can either track a",
    "start": "5898420",
    "end": "5904329"
  },
  {
    "text": "scale for example say that you want to keep at maximum 50% CPU and it will",
    "start": "5904329",
    "end": "5911199"
  },
  {
    "text": "scale up and down to this target or step scaling where you increment or decrease",
    "start": "5911199",
    "end": "5917139"
  },
  {
    "text": "the capacity of your resources to scale up and down or a simple scaling where",
    "start": "5917139",
    "end": "5922329"
  },
  {
    "text": "you have this step scaling actually can be smart about how much resources to",
    "start": "5922329",
    "end": "5929770"
  },
  {
    "text": "ever move so if you if you if you say 80% CPU at one instance but 90% CPU adds",
    "start": "5929770",
    "end": "5937960"
  },
  {
    "text": "two instances and 100% CPU at three instances and simple scaling it's always",
    "start": "5937960",
    "end": "5944260"
  },
  {
    "text": "the same scaling adjustment and this is what this scaling type property is and",
    "start": "5944260",
    "end": "5951369"
  },
  {
    "text": "this is why this is what it's doing here right",
    "start": "5951369",
    "end": "5957360"
  },
  {
    "text": "so let's take one final look and things",
    "start": "5957360",
    "end": "5963330"
  },
  {
    "text": "see how we are doing in our beanstalk environment still not a lot of load let",
    "start": "5963330",
    "end": "5970920"
  },
  {
    "text": "me I will leave it up to you guys",
    "start": "5970920",
    "end": "5978200"
  },
  {
    "text": "I'm let's just wait for just one more",
    "start": "5978200",
    "end": "5983310"
  },
  {
    "text": "bit and if not we're going to end up here but I would really like to see this",
    "start": "5983310",
    "end": "5989000"
  },
  {
    "text": "coming up it's hard perhaps sometimes it's hard for Network latencies and",
    "start": "5989000",
    "end": "5995490"
  },
  {
    "text": "things like this to push enough load to see the the results going on if this is",
    "start": "5995490",
    "end": "6003470"
  },
  {
    "text": "the case here I can always use my ec2 instance and provide a little push to",
    "start": "6003470",
    "end": "6010970"
  },
  {
    "text": "this so let's do just that how we would get the the Beanstalk then I have here",
    "start": "6010970",
    "end": "6019100"
  },
  {
    "text": "and use my workspaces instance to fire more load and make sure that we're going",
    "start": "6019100",
    "end": "6025850"
  },
  {
    "text": "to see in this instance is coming off",
    "start": "6025850",
    "end": "6030160"
  },
  {
    "text": "and I will stop this clean it set the",
    "start": "6031480",
    "end": "6040120"
  },
  {
    "text": "target",
    "start": "6040120",
    "end": "6043120"
  },
  {
    "text": "copy this link yeah I think it's not even responding anymore right that's the",
    "start": "6057909",
    "end": "6064870"
  },
  {
    "text": "that's the problem when it respond that's one hard thing about load testing",
    "start": "6064870",
    "end": "6070179"
  },
  {
    "text": "when when you start getting errors and we can probably we're probably going to",
    "start": "6070179",
    "end": "6077170"
  },
  {
    "text": "see some errors coming up here say it's already airing and when it starts to to",
    "start": "6077170",
    "end": "6086500"
  },
  {
    "text": "error out the errors points comes very quickly so your load average come down",
    "start": "6086500",
    "end": "6092830"
  },
  {
    "text": "so that's why you see the peaks that late the average load comes up but then",
    "start": "6092830",
    "end": "6098949"
  },
  {
    "text": "it starts airing and it comes down and it comes up again so it's maybe a bit",
    "start": "6098949",
    "end": "6104889"
  },
  {
    "text": "hard to sustain enough load to to actually show it running and scaling",
    "start": "6104889",
    "end": "6112870"
  },
  {
    "text": "another thing we could do is reduce the the scaling criterion or something like",
    "start": "6112870",
    "end": "6118270"
  },
  {
    "text": "this but definitely we need to align our",
    "start": "6118270",
    "end": "6123510"
  },
  {
    "text": "scaling so that this doesn't happen this doesn't happen so in the next episode of",
    "start": "6123510",
    "end": "6129820"
  },
  {
    "text": "the series what we are going to do is how we create the scaling rules so that",
    "start": "6129820",
    "end": "6138400"
  },
  {
    "text": "this doesn't happen so you don't see this so you can scale before you see",
    "start": "6138400",
    "end": "6145060"
  },
  {
    "text": "errors and you see the average going up and your application goes down you can",
    "start": "6145060",
    "end": "6150909"
  },
  {
    "text": "see that I have totally killed my app my app is now iris totally responsive it's",
    "start": "6150909",
    "end": "6159760"
  },
  {
    "text": "not even responding the the health checks and a lot of requests are feeling",
    "start": "6159760",
    "end": "6165850"
  },
  {
    "text": "with the request code 500 so to finally answer the how how does our system that",
    "start": "6165850",
    "end": "6174460"
  },
  {
    "text": "chain is in the math we can see that this system in specific is not taking",
    "start": "6174460",
    "end": "6180429"
  },
  {
    "text": "this changes very well because when we load it up it doesn't scale fast enough",
    "start": "6180429",
    "end": "6186190"
  },
  {
    "text": "it has controls a bit on error so the next episodes of this we are trying",
    "start": "6186190",
    "end": "6193070"
  },
  {
    "text": "to fix this I was just trying to show you the most important resources here so that's how",
    "start": "6193070",
    "end": "6200719"
  },
  {
    "text": "you create elastic Beanstalk environments in CloudFormation this is",
    "start": "6200719",
    "end": "6207949"
  },
  {
    "text": "how you use nested stacks and cross tech references to build your confirmation",
    "start": "6207949",
    "end": "6214969"
  },
  {
    "text": "environment so you're doing a lot of infrastructure as code and this is how I",
    "start": "6214969",
    "end": "6221719"
  },
  {
    "text": "like to build my confirmation templates and shell scripts to trigger them and",
    "start": "6221719",
    "end": "6227630"
  },
  {
    "text": "pass parameters from one to another and",
    "start": "6227630",
    "end": "6232869"
  },
  {
    "text": "we saw two meter and the most important emitter configuration components the",
    "start": "6232869",
    "end": "6239630"
  },
  {
    "text": "thread group the for generating users and ramping things up the requests the",
    "start": "6239630",
    "end": "6245690"
  },
  {
    "text": "Falls if the configuration for each request the definition for a request and we wanna shoot and the results three and",
    "start": "6245690",
    "end": "6253789"
  },
  {
    "text": "summary reports if you don't like the UI again we can use I have a script here to",
    "start": "6253789",
    "end": "6262429"
  },
  {
    "text": "launch a meter from the from the shell and this would run the same the same",
    "start": "6262429",
    "end": "6269179"
  },
  {
    "text": "test case but I don't have the G meter",
    "start": "6269179",
    "end": "6277039"
  },
  {
    "text": "shell installed here on this machine sorry about that but it's the the same",
    "start": "6277039",
    "end": "6282440"
  },
  {
    "text": "idea the same commands but generating the output in in an HTML form I'm not",
    "start": "6282440",
    "end": "6289429"
  },
  {
    "text": "going to do this now because the the report is not so useful especially as we",
    "start": "6289429",
    "end": "6294889"
  },
  {
    "text": "don't have the gap in one to two compare but I can say we'll take a look at that",
    "start": "6294889",
    "end": "6300650"
  },
  {
    "text": "in the next sessions so that's it for today I hope you've enjoyed our overview",
    "start": "6300650",
    "end": "6307070"
  },
  {
    "text": "of load testing and infrastructure as code with called formation and Beanstalk",
    "start": "6307070",
    "end": "6315520"
  },
  {
    "text": "[Music] yeah and when it's failing just as when the terminals",
    "start": "6315520",
    "end": "6321550"
  },
  {
    "text": "does respond 500 if we take a look at the Beanstalk environment monitoring we",
    "start": "6321550",
    "end": "6329320"
  },
  {
    "text": "can we can see the on health actually",
    "start": "6329320",
    "end": "6339369"
  },
  {
    "text": "you can see the that seven percent of our requests are five hundred requests",
    "start": "6339369",
    "end": "6347110"
  },
  {
    "text": "or five hundred requests now it's degraded let's hope we can see some",
    "start": "6347110",
    "end": "6355860"
  },
  {
    "text": "because I couldn't see though those are",
    "start": "6355860",
    "end": "6361329"
  },
  {
    "text": "further for the new environment but that's the that's the idea one thing we",
    "start": "6361329",
    "end": "6369670"
  },
  {
    "text": "could do to to make make it work a bit",
    "start": "6369670",
    "end": "6374699"
  },
  {
    "text": "forcibly is run less users with higher",
    "start": "6374699",
    "end": "6379900"
  },
  {
    "text": "mode so the each Fibonacci would occupy one CPU for a long period of time but",
    "start": "6379900",
    "end": "6387610"
  },
  {
    "text": "then this would be retrofitting the test to the app and that's not really what we want to do so we're going to leave the",
    "start": "6387610",
    "end": "6394840"
  },
  {
    "text": "app as this and start working on the infrastructure to make it work and keep",
    "start": "6394840",
    "end": "6401409"
  },
  {
    "text": "healthy regardless of how bad my python code may be all right and that's it for",
    "start": "6401409",
    "end": "6409239"
  },
  {
    "text": "today we will be the build upon this adding server less resources and more",
    "start": "6409239",
    "end": "6414250"
  },
  {
    "text": "tests and keeping up on Friday this is an ongoing series I'm here for about two",
    "start": "6414250",
    "end": "6421750"
  },
  {
    "text": "hours every episode and in each episode we're going to dive deeper and deeper",
    "start": "6421750",
    "end": "6428559"
  },
  {
    "text": "you can see that this was a bit deeper than we went on the last session and certain in the certainly in the next one",
    "start": "6428559",
    "end": "6435460"
  },
  {
    "text": "we're going to see to have a bit more fun with serverless functions and load",
    "start": "6435460",
    "end": "6441400"
  },
  {
    "text": "generators I hope you like that and see you next time thank you so much",
    "start": "6441400",
    "end": "6447960"
  }
]