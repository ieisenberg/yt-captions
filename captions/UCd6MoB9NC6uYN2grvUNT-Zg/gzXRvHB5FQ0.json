[
  {
    "text": "Hello everyone",
    "start": "5478",
    "end": "7276"
  },
  {
    "text": "My name is Park. Amazon Web Service Japan Solution Architect",
    "start": "7276",
    "end": "10668"
  },
  {
    "text": "We provide technical support ",
    "start": "11347",
    "end": "14621"
  },
  {
    "text": "for customers who use AWS",
    "start": "14621",
    "end": "19251"
  },
  {
    "text": "Today I'm going to talk about data modeling in NoSQL Workbench. \nDevelopers and engineers in charge of data modeling often think about ",
    "start": "19573",
    "end": "27257"
  },
  {
    "text": "“how to do data modeling” and “what shape the data model will eventually take” ",
    "start": "27291",
    "end": "31362"
  },
  {
    "text": "as issues. NoSQL workbench is a useful tool for solving these problems.",
    "start": "31599",
    "end": "43000"
  },
  {
    "text": "NoSQL workbench is a free, ",
    "start": "43500",
    "end": "45099"
  },
  {
    "text": "downloadable tool that also allows ",
    "start": "45100",
    "end": "47198"
  },
  {
    "text": "you to run DynamoDB locally for testing",
    "start": "47199",
    "end": "49375"
  },
  {
    "text": "One advantage of NoSQL workbench is that you can build tables",
    "start": "49375",
    "end": "52242"
  },
  {
    "text": "while experimenting with data modeling without complicated settings",
    "start": "53599",
    "end": "57432"
  },
  {
    "text": "It is possible to visualize data using tables and GSIs",
    "start": "57432",
    "end": "61757"
  },
  {
    "text": "enter actual data, use GSI etc.",
    "start": "62894",
    "end": "65896"
  },
  {
    "text": "to grasp what 1:n, n:n modeling looks like.",
    "start": "66049",
    "end": "71510"
  },
  {
    "text": "This allows table designs to be quickly changed, deleted,",
    "start": "71510",
    "end": "74513"
  },
  {
    "text": "and created according to access patterns.",
    "start": "74920",
    "end": "80263"
  },
  {
    "text": "For details, please check the detailed documentation",
    "start": "80331",
    "end": "87200"
  },
  {
    "text": "with the QR code and link displayed on the screen now.",
    "start": "87200",
    "end": "90338"
  },
  {
    "text": "This is a demo If you download NoSQL workbench, ",
    "start": "96224",
    "end": "101770"
  },
  {
    "text": "you can see a preset model that has been set in advance",
    "start": "101804",
    "end": "104925"
  },
  {
    "text": "Each model also includes model explanations and concepts",
    "start": "104925",
    "end": "107927"
  },
  {
    "text": "Let's look at the Bookmarks ",
    "start": "108402",
    "end": "111218"
  },
  {
    "text": "data model as an example",
    "start": "113236",
    "end": "114848"
  },
  {
    "text": "This model assumes the many-to-many access pattern common when using NoSQL.",
    "start": "114848",
    "end": "118155"
  },
  {
    "text": "End users can have many bookmarks, and bookmarks are likely to be provided ",
    "start": "118155",
    "end": "124957"
  },
  {
    "text": "for multiple end users",
    "start": "125381",
    "end": "128841"
  },
  {
    "text": "Now let's actually import this Bookmarks data model and",
    "start": "130063",
    "end": "133302"
  },
  {
    "text": "check what kind of data model we can see",
    "start": "133302",
    "end": "136305"
  },
  {
    "text": "Also, the data model",
    "start": "136729",
    "end": "140087"
  },
  {
    "text": "can search for the best table design while changing attributes at any time",
    "start": "140087",
    "end": "143089"
  },
  {
    "text": "First, click the “Import” button.",
    "start": "144768",
    "end": "147771"
  },
  {
    "text": "You can then check the table",
    "start": "150637",
    "end": "151401"
  },
  {
    "text": "by going to the data modeler A table called",
    "start": "151401",
    "end": "157880"
  },
  {
    "text": "“Customer Bookmarks” is provided with this data model",
    "start": "157880",
    "end": "162256"
  },
  {
    "text": "If you click “Customer Bookmarks”",
    "start": "163477",
    "end": "167599"
  },
  {
    "text": "there are 3 pre-built GSIs",
    "start": "167599",
    "end": "171772"
  },
  {
    "text": "Each GSI corresponds to a specific access pattern",
    "start": "172162",
    "end": "176063"
  },
  {
    "text": "You can check these instructions on the Amazon UserGuide",
    "start": "176063",
    "end": "179167"
  },
  {
    "text": " There are PK “customerID” and SK that have already been set in the",
    "start": "181338",
    "end": "184510"
  },
  {
    "text": "“Customer Bookmarks” table",
    "start": "185290",
    "end": "188292"
  },
  {
    "text": "Also, you can change and add each attribute by clicking the",
    "start": "188513",
    "end": "192211"
  },
  {
    "text": "“Edit” button on the upper right",
    "start": "192346",
    "end": "196297"
  },
  {
    "text": "However, that if you deploy the DynamoDB data model",
    "start": "197571",
    "end": "202031"
  },
  {
    "text": "from Nosql Workbench to your AWS account, you will not be able to change the type",
    "start": "202218",
    "end": "207052"
  },
  {
    "text": "In that case, a new deployment destination table will be created",
    "start": "207951",
    "end": "212327"
  },
  {
    "text": "It is also possible to check GSI settings",
    "start": "214244",
    "end": "217246"
  },
  {
    "text": "Here, there are 3 types of GSI byEmail where the PK is specified as “email”",
    "start": "218841",
    "end": "223777"
  },
  {
    "text": "byURL where the PK is specified as “url”",
    "start": "224828",
    "end": "227593"
  },
  {
    "text": "and ByCustomerFolder where the PK is a “customerID”",
    "start": "227593",
    "end": "231511"
  },
  {
    "text": "similar to a table but SK is set to “folder”",
    "start": "231579",
    "end": "235004"
  },
  {
    "text": "DynamoDB searches for items by specifying pk and sk",
    "start": "235311",
    "end": "238754"
  },
  {
    "text": "so if you want to efficiently perform searches ",
    "start": "238754",
    "end": "242349"
  },
  {
    "text": "based on attributes other than these",
    "start": "242808",
    "end": "245471"
  },
  {
    "text": "you can do it by creating a GSI. ",
    "start": "245471",
    "end": "249948"
  },
  {
    "text": "After creating a data model",
    "start": "253629",
    "end": "255733"
  },
  {
    "text": "you can also visualize the data ",
    "start": "255733",
    "end": "258769"
  },
  {
    "text": "by clicking “Visualizer”",
    "start": "258769",
    "end": "262092"
  },
  {
    "text": "If you look at the visualized data, you can see that sample data is already included. ",
    "start": "262093",
    "end": "265994"
  },
  {
    "text": "There are multiple items",
    "start": "267233",
    "end": "268929"
  },
  {
    "text": "in the sample data",
    "start": "268929",
    "end": "271931"
  },
  {
    "text": "but they are 1: many, ",
    "start": "271999",
    "end": "275238"
  },
  {
    "text": "and are composed of multiple SKs in one PK",
    "start": "275476",
    "end": "278478"
  },
  {
    "text": "GSI also has a 1:many structure",
    "start": "279038",
    "end": "280666"
  },
  {
    "text": "and you can check items composed of multiple SKs in one PK",
    "start": "280666",
    "end": "286603"
  },
  {
    "text": "If you look at byemail, email is specified as PK,",
    "start": "286603",
    "end": "292692"
  },
  {
    "text": "so you can query all relevant data by specifying email",
    "start": "293167",
    "end": "297645"
  },
  {
    "text": "Once you've reached this point,",
    "start": "297645",
    "end": "300647"
  },
  {
    "text": " you can commit the data model to your AWS account,",
    "start": "302988",
    "end": "307296"
  },
  {
    "text": "deploy it, or commit it to your local DynamoDB",
    "start": "307822",
    "end": "313656"
  },
  {
    "text": "In this video we will commit and",
    "start": "313691",
    "end": "317592"
  },
  {
    "text": "deploy the current data model to the US-East1 region",
    "start": "317592",
    "end": "319933"
  },
  {
    "text": "You must set the region to be deployed in advance",
    "start": "319933",
    "end": "322935"
  },
  {
    "text": "Let deploy this table",
    "start": "324224",
    "end": "327227"
  },
  {
    "text": "After deploy table, ",
    "start": "336369",
    "end": "339371"
  },
  {
    "text": "You can see tables in your AWS account",
    "start": "339948",
    "end": "342950"
  },
  {
    "text": "Click this \"open\" button",
    "start": "343357",
    "end": "346359"
  },
  {
    "text": "then you can see",
    "start": "349480",
    "end": "352364"
  },
  {
    "text": "all table",
    "start": "352364",
    "end": "355688"
  },
  {
    "text": "in your AWS account",
    "start": "355688",
    "end": "358690"
  },
  {
    "text": "Also, it is possible to",
    "start": "358928",
    "end": "362829"
  },
  {
    "text": "generate the code required for operation",
    "start": "363338",
    "end": "367273"
  },
  {
    "text": "Let's see how can generate the code",
    "start": "368986",
    "end": "371599"
  },
  {
    "text": "required for operation. For example,",
    "start": "371599",
    "end": "376857"
  },
  {
    "text": "I will show you how to generate an operation ",
    "start": "376959",
    "end": "380673"
  },
  {
    "text": "in Python that performs a full table scan and extracts the",
    "start": "380690",
    "end": "384557"
  },
  {
    "text": "Customer bookmarks item.",
    "start": "385965",
    "end": "387830"
  },
  {
    "text": "Click the Operation button and select Scan.",
    "start": "387830",
    "end": "391749"
  },
  {
    "text": "Specify “customerBookmark” as the table name",
    "start": "391749",
    "end": "398889"
  },
  {
    "text": "and proceed ",
    "start": "399382",
    "end": "405047"
  },
  {
    "text": "without specifying Index",
    "start": "405047",
    "end": "408050"
  },
  {
    "text": "Then click the Generated Code button to",
    "start": "408609",
    "end": "412612"
  },
  {
    "text": "create the code required for the operation",
    "start": "412612",
    "end": "420499"
  },
  {
    "text": "You can use the entire code you've written or modify some variables",
    "start": "420499",
    "end": "425232"
  },
  {
    "text": "and introduce them into your application",
    "start": "425232",
    "end": "432067"
  },
  {
    "text": "NoSQL Workbench suppoty with Python, Java Script, Node.js, and Java",
    "start": "432135",
    "end": "435138"
  },
  {
    "text": "NoSQL workbench makes it easy and fast to create,",
    "start": "436240",
    "end": "442345"
  },
  {
    "text": "visualize, and deploy data modeling.",
    "start": "442363",
    "end": "446332"
  },
  {
    "text": "It is also possible to generate the code required for DynamoDB operations",
    "start": "447197",
    "end": "452150"
  },
  {
    "text": "The data can import and export in the AWS Cloud formation",
    "start": "453609",
    "end": "457476"
  },
  {
    "text": "You can create, export, and import, etc",
    "start": "457663",
    "end": "461988"
  },
  {
    "text": "If you are interested in these features,",
    "start": "461988",
    "end": "466568"
  },
  {
    "text": "please download NoSQL workbench and try it out",
    "start": "468111",
    "end": "471945"
  },
  {
    "text": "Also, if you are interested in other data modeling, there are materials that introduce the",
    "start": "471979",
    "end": "475422"
  },
  {
    "text": "Sample model according to several use cases. Check out the documentation here.",
    "start": "476355",
    "end": "479323"
  },
  {
    "text": "Thank you for watching",
    "start": "479323",
    "end": "480731"
  }
]