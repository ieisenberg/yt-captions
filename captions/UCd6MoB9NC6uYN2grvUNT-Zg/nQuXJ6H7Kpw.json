[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hello and welcome everyone how we doing pretty good thanks for your patience I",
    "start": "620",
    "end": "6660"
  },
  {
    "text": "know a lot of the folks here came in early I'm doing some emails and whatnot got quite a wide room so I'll try and",
    "start": "6660",
    "end": "14219"
  },
  {
    "text": "talk to both both directions so we're here to talk about creating your virtual",
    "start": "14219",
    "end": "19320"
  },
  {
    "text": "data center or VPC fundamentals connectivity options and partners I'm Matt Lewis I'm a principal solution",
    "start": "19320",
    "end": "26580"
  },
  {
    "text": "architect here at Amazon Web Services and I deal with partners a lot who's an",
    "start": "26580",
    "end": "31619"
  },
  {
    "text": "AWS partner here in the room this is the partner summit so a couple floating around before ok awesome cool and non",
    "start": "31619",
    "end": "37649"
  },
  {
    "text": "partners obviously you're you're welcome as well customers alrighty",
    "start": "37649",
    "end": "42750"
  },
  {
    "start": "42000",
    "end": "176000"
  },
  {
    "text": "let's get in there so you've got AWS and you want to use Amazon ec2 and you'd",
    "start": "42750",
    "end": "50789"
  },
  {
    "text": "like to use VPC perhaps we've got a couple of instances that we're spinning up here instance a B C and D we",
    "start": "50789",
    "end": "59550"
  },
  {
    "text": "basically give each instance an IP address ok that's how you're connecting instances pretty straightforward it's how you've connected to servers in data",
    "start": "59550",
    "end": "66210"
  },
  {
    "text": "centers for a long time before AWS was invented so we give each one of these instances an IP address now what we've",
    "start": "66210",
    "end": "73409"
  },
  {
    "text": "built here in AWS is our availability zones which I'm sure most of you are probably familiar with some of you might",
    "start": "73409",
    "end": "78540"
  },
  {
    "text": "not be their fault domains where we have data centers that share fault domains",
    "start": "78540",
    "end": "83549"
  },
  {
    "text": "and we group them into availability zones so here we've spun up some instances in two separate availability",
    "start": "83549",
    "end": "88590"
  },
  {
    "text": "zones now you want to connect to the internet what do you need you'll notice here we've had private IPS on these",
    "start": "88590",
    "end": "95220"
  },
  {
    "text": "instances so far you probably want to have some public IPS there so we're using a 54 range which you'd probably",
    "start": "95220",
    "end": "101310"
  },
  {
    "text": "see as familiar as as Amazon's and then we have Amazon VP C which is your",
    "start": "101310",
    "end": "107729"
  },
  {
    "text": "virtual private data center which is going to sit around these instances okay so it's giving you the ability to",
    "start": "107729",
    "end": "113509"
  },
  {
    "text": "configure attributes for your instances within your own virtual data center like",
    "start": "113509",
    "end": "119189"
  },
  {
    "text": "your private IP address like associating public IP addresses etc so then within the VP C what do we need we need subnets",
    "start": "119189",
    "end": "125850"
  },
  {
    "text": "so we've got public subnets which we want to be accessible to the public",
    "start": "125850",
    "end": "131009"
  },
  {
    "text": "Internet and we've got private subnets and we probably don't want I pee Zoar public IPS on the private subnet so we",
    "start": "131009",
    "end": "137550"
  },
  {
    "text": "get rid of those now we have what's called an IG W or an Internet gateway and we attach that to the V PC and we",
    "start": "137550",
    "end": "145709"
  },
  {
    "text": "can now talk from or communicate from public subnet out over the IG W to the public Internet",
    "start": "145709",
    "end": "150870"
  },
  {
    "text": "okay pretty straightforward this is this is what a foundational AWS application would look like outside of say",
    "start": "150870",
    "end": "157950"
  },
  {
    "text": "serverless and lambda and and other services when you're building things with Amazon ec2 today you'll use V PC",
    "start": "157950",
    "end": "164280"
  },
  {
    "text": "and um and who spins up ec2 inside their account today users V PC whether they",
    "start": "164280",
    "end": "170790"
  },
  {
    "text": "know it or not we actually have this thing called V PC by default which I'll talk through a little bit as well what",
    "start": "170790",
    "end": "177690"
  },
  {
    "text": "do we do if we want a V PC that's connected to the Internet so we've stepped through some of the steps but",
    "start": "177690",
    "end": "182940"
  },
  {
    "text": "there's some things that we need to do to get that working so there's four things we want to choose an address",
    "start": "182940",
    "end": "189120"
  },
  {
    "text": "range for our virtual private data center or our V PC then we're going to",
    "start": "189120",
    "end": "194250"
  },
  {
    "text": "create some subnets within that V PC then we'll create a rap for the for the",
    "start": "194250",
    "end": "200250"
  },
  {
    "text": "subnets so rap to the Internet in this case and we'll talk about route tables and what they look like and this is how",
    "start": "200250",
    "end": "205319"
  },
  {
    "text": "you can control where your traffic is going to go inside your virtual private data center in the on-premise world you",
    "start": "205319",
    "end": "211769"
  },
  {
    "text": "configure a router and say ok I'm gonna have an internet connection I'm gonna have a default route that sends everything to the Internet",
    "start": "211769",
    "end": "217109"
  },
  {
    "text": "I'm gonna have a local land route to my local in virtual machines perhaps or physical machines in Amazon V PC it's",
    "start": "217109",
    "end": "223829"
  },
  {
    "text": "the same deal and I'll talk about route tables and how they work security is very important here at AWS so you want",
    "start": "223829",
    "end": "231030"
  },
  {
    "text": "to authorize traffic to and from your instances in this case and we have security groups and knackles and we'll talk to those a little bit as well so",
    "start": "231030",
    "end": "238889"
  },
  {
    "start": "237000",
    "end": "331000"
  },
  {
    "text": "this is foundations so building an Amazon V PC so what do we want to do when we create a V PC a V PC is a",
    "start": "238889",
    "end": "245609"
  },
  {
    "text": "logical construct what does it really mean what is it what does it constitute or made up of it's made up of a cedar",
    "start": "245609",
    "end": "251340"
  },
  {
    "text": "address range a class's inter domain routing address range so in this case we choose a 172 31 0.0 / 16 what does that",
    "start": "251340",
    "end": "260010"
  },
  {
    "text": "even mean well if we convert it to binary and I'm sure some of you are familiar with the binary notation of a",
    "start": "260010",
    "end": "267130"
  },
  {
    "text": "of an IP address but basically what it means is we've got this slash 16 or the first 16 bits of a cedar address range",
    "start": "267130",
    "end": "274570"
  },
  {
    "text": "or the address range we chose for our V PC that's going to be the the network range for that V PC now what that leaves",
    "start": "274570",
    "end": "281920"
  },
  {
    "text": "us is everything that you see on the right-hand side of the the blue portion here other 16 bits we can configure",
    "start": "281920",
    "end": "289660"
  },
  {
    "text": "subnets and instances inside those ranges inside that cedar address range so well is it simple spinning up V pcs",
    "start": "289660",
    "end": "296620"
  },
  {
    "text": "or when we created v pc why was it important that you could choose your own cedar address range well our customers have on-premise deployments they have IP",
    "start": "296620",
    "end": "303250"
  },
  {
    "text": "addressing schemas they have a 10.1 a 10.2 or 10.3 in their on-premise they",
    "start": "303250",
    "end": "308260"
  },
  {
    "text": "want to connect their on-premise to AWS if we said everyone must use a 10.1 then",
    "start": "308260",
    "end": "313720"
  },
  {
    "text": "there's gonna be a lot of address clashing you need matting and I mean I know as a former network engineer I worked as a network engineer for about",
    "start": "313720",
    "end": "319150"
  },
  {
    "text": "10 years building large-scale networks whenever I heard and that I ran in the opposite direction double net even worse",
    "start": "319150",
    "end": "325690"
  },
  {
    "text": "so we want to try and avoid those things so you can choose your address range when you're spending up a V PC so in",
    "start": "325690",
    "end": "331720"
  },
  {
    "start": "331000",
    "end": "403000"
  },
  {
    "text": "this case we've got a 1:7 230 1/16 what are some recommendations well we do",
    "start": "331720",
    "end": "336790"
  },
  {
    "text": "recommend that you use RFC 1918 what does that mean well RFC 1918 is basically a set of special addresses",
    "start": "336790",
    "end": "343330"
  },
  {
    "text": "that have been set aside for private addressing so 170 231 as you can see",
    "start": "343330",
    "end": "348910"
  },
  {
    "text": "here or it's actually I think 1 7 to 12 but I won 9 to 1 6 8 a 10 / 8 actually",
    "start": "348910",
    "end": "355900"
  },
  {
    "text": "so these are private addresses that aren't routed out onto the public internet so you can choose them and use them within your V PC without worrying",
    "start": "355900",
    "end": "363430"
  },
  {
    "text": "about conflicting addresses in the public realm because they're completely separate from that also we've got a",
    "start": "363430",
    "end": "368830"
  },
  {
    "text": "slash 16 when you create a V PC the largest address range today you can choose is a slash 16 so that's going to",
    "start": "368830",
    "end": "374440"
  },
  {
    "text": "give you about 65,000 addresses to use from or to use and you're gonna create",
    "start": "374440",
    "end": "380080"
  },
  {
    "text": "subnets from those obviously we also have V PC resize now which is pretty awesome so you can add V PC cedars to",
    "start": "380080",
    "end": "386320"
  },
  {
    "text": "your V PC as well and actually talk about that in a session on Thursday net 305 ok so we want to avoid ranges that",
    "start": "386320",
    "end": "394630"
  },
  {
    "text": "overlap with what you want to connect to so in this case we've chosen a 1 7 to 31 out of our IP addressing scheme",
    "start": "394630",
    "end": "400990"
  },
  {
    "text": "use that address range so what about subnets well within the subnet we're deploying in EU West one for example and",
    "start": "400990",
    "end": "409420"
  },
  {
    "text": "we've got three availability zones there are specific constructs to think about when you're deploying subnets and a V PC",
    "start": "409420",
    "end": "416320"
  },
  {
    "text": "is a region level construct so it's tied to the region you can't have a V PC that spans multiple regions it's a region",
    "start": "416320",
    "end": "421810"
  },
  {
    "text": "level domain subnets are an availability zone domain so when you create a subnet",
    "start": "421810",
    "end": "428230"
  },
  {
    "text": "it exists within an availability zone so here we've got a 172 3100 / 24 we've got",
    "start": "428230",
    "end": "435310"
  },
  {
    "text": "a 1 / 24 and a 2/24 each of these subnets are tied to an availability zone and when you spin up ec2 instances",
    "start": "435310",
    "end": "441820"
  },
  {
    "text": "they're going to exist inside that availability zone so that's how you select I'd like to have an instance in one availability zone and an instance in",
    "start": "441820",
    "end": "448450"
  },
  {
    "text": "another availability zone you're going to choose to separate subnets there that are in separate availability zones so",
    "start": "448450",
    "end": "454840"
  },
  {
    "text": "now you've got this redundancy and you can control that within your V PC so",
    "start": "454840",
    "end": "461170"
  },
  {
    "start": "460000",
    "end": "530000"
  },
  {
    "text": "some subnetting tips so what do we want to do when we're creating subnets well a V PC is about 65,000 addresses it's",
    "start": "461170",
    "end": "467620"
  },
  {
    "text": "quite a lot generally choose at least / 24 subnets now the reason why I say that",
    "start": "467620",
    "end": "473290"
  },
  {
    "text": "is you get about two hundred and fifty one useable addresses in a subnet we take a couple of addresses the dot one",
    "start": "473290",
    "end": "479470"
  },
  {
    "text": "for example is a default router or a logical router within that subnet create and there's a few other things so when",
    "start": "479470",
    "end": "485290"
  },
  {
    "text": "you do spin up say a lambda inside a V PC or RDS for example in our relational",
    "start": "485290",
    "end": "490300"
  },
  {
    "text": "database service they will take addresses from your subnet so if you say I've got 251 hosts I'm gonna create a /",
    "start": "490300",
    "end": "496930"
  },
  {
    "text": "24 you're probably going to run out of addresses when you start doing other things not to mention auto-scaling when you have multiple instances that are",
    "start": "496930",
    "end": "503350"
  },
  {
    "text": "scaling horizontally you want to have a lot of addresses available there so generally start with at least a / 24",
    "start": "503350",
    "end": "510040"
  },
  {
    "text": "sometimes bigger so using multiple availability zones through multiple",
    "start": "510040",
    "end": "515169"
  },
  {
    "text": "subnets is again very important and and just one point here on the ec2 SLA we do",
    "start": "515170",
    "end": "521620"
  },
  {
    "text": "say that you must have multiple instances in multiple availability zones so it's how we control the fault domains",
    "start": "521620",
    "end": "527050"
  },
  {
    "text": "again within the VP city so we want to route to the internet what does that look like",
    "start": "527050",
    "end": "533550"
  },
  {
    "start": "530000",
    "end": "617000"
  },
  {
    "text": "okay so the route table is going going to define where packets go you've got a VP C where do you want to send packets",
    "start": "533550",
    "end": "539709"
  },
  {
    "text": "you want to send packets to the Internet do you want to send packets over a peer in connection to another V PC do you",
    "start": "539709",
    "end": "545050"
  },
  {
    "text": "want to send packets over a vgw to an on-premise via a direct connector or VPN the routing tables really where that",
    "start": "545050",
    "end": "551350"
  },
  {
    "text": "happens your V PC has a default route table to start with now who sort of a",
    "start": "551350",
    "end": "556510"
  },
  {
    "text": "default route yeah a lot of people okay so a default route is a zero zero zero",
    "start": "556510",
    "end": "561880"
  },
  {
    "text": "slash zero and it's basically a catch-all for where you want to route traffic if you don't have a more specific route now a default route table",
    "start": "561880",
    "end": "569649"
  },
  {
    "text": "within a V PC something different I don't get confused with the word default it is a bit confusing but the default in",
    "start": "569649",
    "end": "576100"
  },
  {
    "text": "this case is you've got a route table that will be used by default okay so when you spin up a V PC we will give you",
    "start": "576100",
    "end": "582279"
  },
  {
    "text": "a wrap table that there V PC is going to use when you spin up a subnet that sudden that's going to inherit that",
    "start": "582279",
    "end": "587560"
  },
  {
    "text": "route table by default now that can be something to consider because what you",
    "start": "587560",
    "end": "593740"
  },
  {
    "text": "want to do is have your subnets as separate fault domains again they're in separate availability zones if you if",
    "start": "593740",
    "end": "599110"
  },
  {
    "text": "you've configured them that way and then you want to have a separate route table per subnet to separate the fault domain",
    "start": "599110",
    "end": "604779"
  },
  {
    "text": "even further so you've got a default route table you create a subnet create another route table for that subnet as",
    "start": "604779",
    "end": "610329"
  },
  {
    "text": "well so you can assign different route tables to your subnet it's very important and something that you should",
    "start": "610329",
    "end": "616990"
  },
  {
    "text": "always consider alrighty so we've got a route table here and I generally refer three digits here so e 61 is this this",
    "start": "616990",
    "end": "624760"
  },
  {
    "start": "617000",
    "end": "674000"
  },
  {
    "text": "route table just makes it easy and you'll notice that we've got a route there that if this is a brand new route",
    "start": "624760",
    "end": "630730"
  },
  {
    "text": "table we didn't actually configure that route so this is a 1:7 to 3100 slash 16 it's what we call the local route so the",
    "start": "630730",
    "end": "636910"
  },
  {
    "text": "local route says anything inside this V PC and you'll notice a correlation between 172 3116 and the V PCC the range",
    "start": "636910",
    "end": "645190"
  },
  {
    "text": "we chose before this is how your instances are going to talk to each other so when you spin up an instance in",
    "start": "645190",
    "end": "650860"
  },
  {
    "text": "one availability zone in once I met with one route table and again in another availability zone with another route",
    "start": "650860",
    "end": "656110"
  },
  {
    "text": "table you'll have this default our local route there to allow these instances to",
    "start": "656110",
    "end": "662050"
  },
  {
    "text": "communicate to each other you can't configure a more specific route than the local route this is really a catch-all inside the V",
    "start": "662050",
    "end": "669010"
  },
  {
    "text": "PC so that V PC to V PC a V PC instance the instance communication can happen",
    "start": "669010",
    "end": "674850"
  },
  {
    "start": "674000",
    "end": "713000"
  },
  {
    "text": "okay so what if we want to send traffic to an we want to send Internet traffic",
    "start": "674850",
    "end": "680740"
  },
  {
    "text": "via an internet gateway what do we do here well we want to add a route a default route again so zero zero zero",
    "start": "680740",
    "end": "687460"
  },
  {
    "text": "slash zero via and igw what that's going to do inside this route table is say anything local I'll send it to the local",
    "start": "687460",
    "end": "694930"
  },
  {
    "text": "router so the 172 31 / 16 anything that isn't a part of that I'm going to send",
    "start": "694930",
    "end": "700270"
  },
  {
    "text": "to the igw or the Internet gateway which is think of it like a logical router that's attached to the V PC giving you",
    "start": "700270",
    "end": "706480"
  },
  {
    "text": "internet access so anything that isn't defined for the V PC let's send it to",
    "start": "706480",
    "end": "711820"
  },
  {
    "text": "the Internet alright so network security inside your V PC so we do have shared security",
    "start": "711820",
    "end": "718390"
  },
  {
    "start": "713000",
    "end": "770000"
  },
  {
    "text": "responsibility model AWS takes care of the physical security of your hosts that the instances are sitting on by shared",
    "start": "718390",
    "end": "725920"
  },
  {
    "text": "it means that you can configure security as well so security groups and knackles are one way of doing that and network",
    "start": "725920",
    "end": "732370"
  },
  {
    "text": "ACL or a Knakal is like a stateless firewall so we can basically configure a rule here that we can apply it on a",
    "start": "732370",
    "end": "738670"
  },
  {
    "text": "subnet basis to say what traffic do I want to allow in inside and outside of this subnet so the error of security",
    "start": "738670",
    "end": "745870"
  },
  {
    "text": "that we can configure there so in this case we're allowing all traffic and by default knackles or network access",
    "start": "745870",
    "end": "751780"
  },
  {
    "text": "control lists will allow all traffic and we've got an explicit deny there so you can change that and you could have",
    "start": "751780",
    "end": "758200"
  },
  {
    "text": "someone come in from your IT operations folks who could configure a block on a",
    "start": "758200",
    "end": "764020"
  },
  {
    "text": "particular port that they don't want these instances to access etc at a subnet level okay",
    "start": "764020",
    "end": "771460"
  },
  {
    "start": "770000",
    "end": "900000"
  },
  {
    "text": "so security groups a little bit different and a security groups actually follow the application level construct",
    "start": "771460",
    "end": "777460"
  },
  {
    "text": "so they're based at an instance basis so when we configure a security group we",
    "start": "777460",
    "end": "782980"
  },
  {
    "text": "spin up an instance we assign a security group to that instance so in this case we've got a certain type of application",
    "start": "782980",
    "end": "787990"
  },
  {
    "text": "in yellow it could be a web application and we're assigning a security group to that to those instances blue here could",
    "start": "787990",
    "end": "794980"
  },
  {
    "text": "be our database or application to you so in this case we've got two separate security groups",
    "start": "794980",
    "end": "800330"
  },
  {
    "text": "now what's the purpose of having two different layers here well security is always a layered approach so we want to",
    "start": "800330",
    "end": "805520"
  },
  {
    "text": "have basically an open layer or a web in this case this is a two-tiered web architecture we have our web instances",
    "start": "805520",
    "end": "812180"
  },
  {
    "text": "which are open to the the outside world so anyone can come in and you've got a default route there you've got an IG W",
    "start": "812180",
    "end": "818450"
  },
  {
    "text": "and you've opened up your security groups so anyone can come in and access your website or your application or",
    "start": "818450",
    "end": "823820"
  },
  {
    "text": "whatever you may be running there then we've got a more constricted security",
    "start": "823820",
    "end": "829010"
  },
  {
    "text": "group for our application or database team so we're only allowing web servers to talk to the applicational database",
    "start": "829010",
    "end": "836450"
  },
  {
    "text": "tier so the outside world can't come in and do a remote let's say database call to your database or anything like that",
    "start": "836450",
    "end": "842900"
  },
  {
    "text": "only the web servers can talk to the application and database to you so in this case we've got a we've got our two",
    "start": "842900",
    "end": "850640"
  },
  {
    "text": "tiers so hosting this tier so we can see here and I think I can oh yeah that",
    "start": "850640",
    "end": "855860"
  },
  {
    "text": "works pretty well we've got our our web security group here on on top and we're",
    "start": "855860",
    "end": "861770"
  },
  {
    "text": "allowing anything so that's what it looks like we've basically got a port 80 let's allow anything from source 0 0 0",
    "start": "861770",
    "end": "867710"
  },
  {
    "text": "great then if we have a look at the backend so we've got whoops we've got",
    "start": "867710",
    "end": "875630"
  },
  {
    "text": "our back-end security group here this security group is allowing port 2 3 4 5 and referencing the web security groups",
    "start": "875630",
    "end": "882590"
  },
  {
    "text": "are saying anything in that web security group we're going to allow to access our database and application - ok so now",
    "start": "882590",
    "end": "888830"
  },
  {
    "text": "we've got this these tiered out security groups so only instances in your my web",
    "start": "888830",
    "end": "894140"
  },
  {
    "text": "servers security group can access the instances that have this security group associated alrighty some additional",
    "start": "894140",
    "end": "902990"
  },
  {
    "start": "900000",
    "end": "966000"
  },
  {
    "text": "notes here on security groups so you always want the principle of least privilege so security groups you don't",
    "start": "902990",
    "end": "909440"
  },
  {
    "text": "want to open them up to the world and block specific things you probably want to block everything and open up specific",
    "start": "909440",
    "end": "914630"
  },
  {
    "text": "things so for example put HTTP port 80 it's a web server the outside world",
    "start": "914630",
    "end": "920120"
  },
  {
    "text": "should probably be able to access that web server on port 80 if you're not using let's say it's not a mail server",
    "start": "920120",
    "end": "925910"
  },
  {
    "text": "or something else you probably don't want to have that port open to those web servers so always follow a principle of least privilege privilege with security",
    "start": "925910",
    "end": "933020"
  },
  {
    "text": "groups you can also create egress and in group ingress security group rules so if you've got an instance that you don't",
    "start": "933020",
    "end": "939140"
  },
  {
    "text": "think should be accessing the outside world or initiating traffic you can block that as well and you'll always see",
    "start": "939140",
    "end": "945290"
  },
  {
    "text": "a one-to-one relationship between security groups and applications so web",
    "start": "945290",
    "end": "950420"
  },
  {
    "text": "instances web security groups application or database application or database security groups etc so there's",
    "start": "950420",
    "end": "956300"
  },
  {
    "text": "a correlation there between applications security groups and generally I am role so our rules that say what these",
    "start": "956300",
    "end": "963380"
  },
  {
    "text": "instances can do within your AWS account all right so let's let's tie it all back",
    "start": "963380",
    "end": "969560"
  },
  {
    "text": "together and see what this looks like the BBC that we've created we've got a V PCC derange where I've chosen a 10100",
    "start": "969560",
    "end": "974899"
  },
  {
    "text": "slash 16 just because I can you can choose any range you want actually even public ranges but we do recommend",
    "start": "974899",
    "end": "980660"
  },
  {
    "text": "private we've got our multiple availability zones with multiple subnets so you've got to public subnets here",
    "start": "980660",
    "end": "986649"
  },
  {
    "text": "we've got two private subnets we've got a couple of instances inside those",
    "start": "986649",
    "end": "992270"
  },
  {
    "text": "subnets we attached an IG W to the V PC and when you create a V PC it doesn't",
    "start": "992270",
    "end": "998029"
  },
  {
    "text": "come with a 9gw actually created W and then attach it to the V PC and then as",
    "start": "998029",
    "end": "1003880"
  },
  {
    "text": "you can see here we can create a V G W and attach that to the V PC as well if we wanted to have something like",
    "start": "1003880",
    "end": "1009640"
  },
  {
    "text": "on-premise or VPN through Direct Connect or VPN and we'll talk about that as well",
    "start": "1009640",
    "end": "1016680"
  },
  {
    "text": "now the route table again is going to dictate if where you would like to send traffic to so you're basically going to",
    "start": "1016680",
    "end": "1023140"
  },
  {
    "text": "define I'd like to send traffic for a certain destination to either an IG w a VG w or appear in connection or a",
    "start": "1023140",
    "end": "1029260"
  },
  {
    "text": "virtual private endpoint etc so how two partners feed into this we have some partners in the room and I want to talk",
    "start": "1029260",
    "end": "1035709"
  },
  {
    "start": "1031000",
    "end": "1190000"
  },
  {
    "text": "about partners so we've got this architecture where we've got a couple of instances and we wanted to place some",
    "start": "1035709",
    "end": "1041170"
  },
  {
    "text": "firewalls what does that look like in this case we've got a set of marketplace",
    "start": "1041170",
    "end": "1046600"
  },
  {
    "text": "a.m. eyes in a public subnet they could be a set of firewalls or something similar and now we've got a route here",
    "start": "1046600",
    "end": "1051640"
  },
  {
    "text": "and i think i zoom in on this guy we've got a default route of irony and I okay",
    "start": "1051640",
    "end": "1059230"
  },
  {
    "text": "so we're basically sending all Internet traffic for this is safe for the wrap tables for these instances we're sending",
    "start": "1059230",
    "end": "1065320"
  },
  {
    "text": "that to this Ani which could be this in that's here so then we're basically determining okay we'd like to send",
    "start": "1065320",
    "end": "1071150"
  },
  {
    "text": "traffic from these instances or send that up to the marketplace AM is so the",
    "start": "1071150",
    "end": "1076490"
  },
  {
    "text": "AWS marketplace has a bunch of different firewalls things like the Cisco CSI if you want routers so so force Palo Alto",
    "start": "1076490",
    "end": "1083150"
  },
  {
    "text": "Barracuda and a bunch of others like Fortinet checkpoint etc so partners and",
    "start": "1083150",
    "end": "1088460"
  },
  {
    "text": "firewalls that you use on-premise you can actually deploy these inside your V PC as well using route tables etc now",
    "start": "1088460",
    "end": "1095330"
  },
  {
    "text": "one thing about route tables is there think about route tables as a static routing mechanism so you can configure a",
    "start": "1095330",
    "end": "1101060"
  },
  {
    "text": "static route to a specific destination what about if we want to have a little bit more of a dynamic architecture so",
    "start": "1101060",
    "end": "1106820"
  },
  {
    "text": "what we've got here is an auto scaling tier or firewalls so we're actually using this is for outbound to inbound so",
    "start": "1106820",
    "end": "1114080"
  },
  {
    "text": "in this case we've probably got something out here talking to maybe some web servers and we'd like some sort of",
    "start": "1114080",
    "end": "1119210"
  },
  {
    "text": "firewalls or something that's doing some kind of our visibility or it could be doing some form of firewall ruling etc",
    "start": "1119210",
    "end": "1126590"
  },
  {
    "text": "and we'd like to auto scale these so in that case we can basically have a set of",
    "start": "1126590",
    "end": "1132290"
  },
  {
    "text": "firewalls in an auto scaling group and we've got what we call an EOB sandwich configuration where we've got multiple Ile B's we've got a front-facing tick",
    "start": "1132290",
    "end": "1139460"
  },
  {
    "text": "load bouncer up here which is going to load balanced across the multiple firewalls and then the firewalls are",
    "start": "1139460",
    "end": "1144950"
  },
  {
    "text": "then sending to a lower tier ELB which is then load balancing across the multiple web service so what's going to",
    "start": "1144950",
    "end": "1151280"
  },
  {
    "text": "happen is if your web instances get overrun by requests you've been tech",
    "start": "1151280",
    "end": "1156290"
  },
  {
    "text": "crunched which is you know could be a good thing your web layer is going to scale the firewall a layer then should",
    "start": "1156290",
    "end": "1162380"
  },
  {
    "text": "scale as well with this too because you're going to be looking at okay how many sessions are the firewall sending what kind of metrics do I need to send a",
    "start": "1162380",
    "end": "1168500"
  },
  {
    "text": "cloud watch cloud which is going to trigger an alert trigger an auto scaling event and scale out by order of",
    "start": "1168500",
    "end": "1174590"
  },
  {
    "text": "magnitude or an order of number of firewalls that you want to deploy so now we're moving away from the tightly",
    "start": "1174590",
    "end": "1180800"
  },
  {
    "text": "coupled scenario we had earlier now we've got a little bit more of a horizontal scaling architecture with",
    "start": "1180800",
    "end": "1186290"
  },
  {
    "text": "marketplace am eyes in this instance all",
    "start": "1186290",
    "end": "1191870"
  },
  {
    "text": "righty we've talked about the VP seed self what it looks like foundationally think of it like the",
    "start": "1191870",
    "end": "1197720"
  },
  {
    "text": "foundation to your skyscraper you're building a huge building it starts with EPC if you're using ec2 and that sort of thing there's a lot of constructs that",
    "start": "1197720",
    "end": "1204169"
  },
  {
    "text": "you can build around that but what about connecting to the VP see we originally talked about choosing your cedar address",
    "start": "1204169",
    "end": "1209330"
  },
  {
    "text": "range being able to select that being able to use your IP addressing scheme or that you use on-premise so we can do",
    "start": "1209330",
    "end": "1215720"
  },
  {
    "text": "things like connecting to a V PC so Eid",
    "start": "1215720",
    "end": "1220850"
  },
  {
    "start": "1218000",
    "end": "1294000"
  },
  {
    "text": "when we're connecting to a V PC well we need we need to restrict internet access so we can talk about that now we want to",
    "start": "1220850",
    "end": "1227450"
  },
  {
    "text": "connect to other V pcs using things like the PC peering and then connecting to your on-premise corporate network so",
    "start": "1227450",
    "end": "1235700"
  },
  {
    "text": "restricting internet access well we can basically wrap by subnet here so we we",
    "start": "1235700",
    "end": "1241879"
  },
  {
    "text": "have discussed this we've got a public instance here we've got an IG W we've got a route here as 0 0 0 by the IG W",
    "start": "1241879",
    "end": "1247999"
  },
  {
    "text": "and the lower inside to you the private subnet now has a route via an instance",
    "start": "1247999",
    "end": "1254809"
  },
  {
    "text": "for example it could be an ad instances it could be a firewall etc so now it's going to be used as a proxy to talk",
    "start": "1254809",
    "end": "1260330"
  },
  {
    "text": "through to the public Internet we do also have NAT gateway so we do listen to our customers quite a lot actually and a",
    "start": "1260330",
    "end": "1266720"
  },
  {
    "text": "lot of the services you'll see out there come from customer requirements so we saw a lot of customers deploying NAT",
    "start": "1266720",
    "end": "1271789"
  },
  {
    "text": "instances and it's something that's manual you need to do a lot of configuration on the NAT instance and if",
    "start": "1271789",
    "end": "1278119"
  },
  {
    "text": "you want to do things like auto scaling that instances or high availability in our instances it can get a little",
    "start": "1278119",
    "end": "1283970"
  },
  {
    "text": "unworldly so we released NAT gateway so you can basically deploy in that gateway in your public subnet and use that as an",
    "start": "1283970",
    "end": "1289220"
  },
  {
    "text": "endpoint to talk out to the public Internet or communicate out to the public Internet alrighty into V PC",
    "start": "1289220",
    "end": "1297139"
  },
  {
    "start": "1294000",
    "end": "1358000"
  },
  {
    "text": "connectivity so we have V PC peering and in this case we've got a shared services V PC in the middle here so what might be",
    "start": "1297139",
    "end": "1303980"
  },
  {
    "text": "in the shared services V PC well maybe Active Directory or some kind of log server or a visualization server or or",
    "start": "1303980",
    "end": "1309649"
  },
  {
    "text": "something that multiple applications in multiple V pcs might want to talk back to a common service so in this case",
    "start": "1309649",
    "end": "1316490"
  },
  {
    "text": "we've got a 1 7 2 16 which is our central services V PC appearing using V",
    "start": "1316490",
    "end": "1323360"
  },
  {
    "text": "PC peering out to these other V pcs that can now talk to this central services of a PC so you're gonna deploy common core",
    "start": "1323360",
    "end": "1330649"
  },
  {
    "text": "services inside this V PC and we've started calling these types of akut vans or VPC area networks if you will so",
    "start": "1330649",
    "end": "1337970"
  },
  {
    "text": "we might deploy some authentication some monitoring some logging and some other services inside that shared services PPC",
    "start": "1337970",
    "end": "1344360"
  },
  {
    "text": "as opposed to deploying in every V PC let's say you have V pcs or 10 V pcs or even 100 V pcs you don't want to have to",
    "start": "1344360",
    "end": "1351620"
  },
  {
    "text": "deploy in Active Directory in each one of these V PC so that's when something like a services V PC really comes into",
    "start": "1351620",
    "end": "1356929"
  },
  {
    "text": "play so how do we configure between V",
    "start": "1356929",
    "end": "1361970"
  },
  {
    "text": "pcs well we can do security groups for security across V PC so that's great so",
    "start": "1361970",
    "end": "1367309"
  },
  {
    "text": "if we've got an orange security group and a green security group that works across peering but how do we configure the actual peering connection well you",
    "start": "1367309",
    "end": "1374750"
  },
  {
    "text": "initiate a peering connection request so you've got a V PC it's in an account you'll create a peering connection",
    "start": "1374750",
    "end": "1380660"
  },
  {
    "text": "request and send it to another account or it could be the same account and connected say I want to connect to this",
    "start": "1380660",
    "end": "1386000"
  },
  {
    "text": "V PC if you send it to another account that person then goes into that account and says I would like to connect to this",
    "start": "1386000",
    "end": "1391460"
  },
  {
    "text": "V PC and accepts the pairing connection so we initiate appearing connection requests will then accept the peering",
    "start": "1391460",
    "end": "1398540"
  },
  {
    "text": "connection request and then you'll create the routes for the peering",
    "start": "1398540",
    "end": "1403549"
  },
  {
    "text": "connection so creating the rats in this case we basically go into the route table of the V PC that we want to",
    "start": "1403549",
    "end": "1411470"
  },
  {
    "start": "1409000",
    "end": "1447000"
  },
  {
    "text": "connect to and you'll notice here we've got an additional route here the PC X I",
    "start": "1411470",
    "end": "1416660"
  },
  {
    "text": "guess I'll use the last three digits is 70 a we've got a 10-5 5/16 via this PC X",
    "start": "1416660",
    "end": "1422780"
  },
  {
    "text": "so that's the peering connection itself alrighty so that's going to give you the connectivity that you've just configured",
    "start": "1422780",
    "end": "1428690"
  },
  {
    "text": "from the 1055 to the 172 31 so this is actually in the 1 7 to 31 we're saying",
    "start": "1428690",
    "end": "1434929"
  },
  {
    "text": "I'd like to connect to 1055 via this peering connection that has been accepted and created you'll notice there",
    "start": "1434929",
    "end": "1441140"
  },
  {
    "text": "as well we've got something via v GW I'll talk about that one in just a second ok so connecting back to your",
    "start": "1441140",
    "end": "1449660"
  },
  {
    "start": "1447000",
    "end": "1561000"
  },
  {
    "text": "premise how do we do that well we've got two options VPN and Direct Connect how does what does that look like so you've",
    "start": "1449660",
    "end": "1456230"
  },
  {
    "text": "basically got oops sorry about that you've got your on-premise and you'd like to connect your V PC so services within your V PC",
    "start": "1456230",
    "end": "1462980"
  },
  {
    "text": "remember their address out of an address range you chose so we're 10100 slash 16 4 in",
    "start": "1462980",
    "end": "1468690"
  },
  {
    "text": "you need to connect that back to your on premise that might be a 172 or something similar a VPN via vgw is one option or",
    "start": "1468690",
    "end": "1474779"
  },
  {
    "text": "Direct Connect is what we basically have as the ability to have a physical fiber that comes into what we call a Direct",
    "start": "1474779",
    "end": "1480179"
  },
  {
    "text": "Connect pop or a point of presence and then you can connect what we call a private virtual interface from there into a V PC and we'll talk about that",
    "start": "1480179",
    "end": "1488179"
  },
  {
    "text": "some considerations between the two well both allow secure connections but in a",
    "start": "1488179",
    "end": "1493200"
  },
  {
    "text": "different way so Direct Connect is not encrypted but it's a secure connection in the terms that it's a private",
    "start": "1493200",
    "end": "1500970"
  },
  {
    "text": "connection so you're not going over the public internet it's a connection between your 172 and your 10 your V PC",
    "start": "1500970",
    "end": "1506580"
  },
  {
    "text": "and your on-premise and you're communicating privately over that physical file it's not encrypted you can",
    "start": "1506580",
    "end": "1512789"
  },
  {
    "text": "have application encryption obviously a VPN however goes over the public Internet so we've got a V G W which does",
    "start": "1512789",
    "end": "1518519"
  },
  {
    "text": "VPN termination and that's going to go over the public internet via an IPSec tunnel that is encrypted but it is over",
    "start": "1518519",
    "end": "1524820"
  },
  {
    "text": "the public Internet so two different methods of connecting to a V PC so think of Direct Connect as your dedicated line",
    "start": "1524820",
    "end": "1531239"
  },
  {
    "text": "and VPN as your encrypted tunnel to our V PC Direct Connect one of the benefits",
    "start": "1531239",
    "end": "1536279"
  },
  {
    "text": "as well it gives you lower gigabyte or per gigabyte data transfer so whereas if",
    "start": "1536279",
    "end": "1541289"
  },
  {
    "text": "you look at say US East one it's a nine or eight cents per gig or tiered so as you send more data per month the price",
    "start": "1541289",
    "end": "1548159"
  },
  {
    "text": "goes down with Direct Connect it's a flat two cents per gig give or take depending upon the region for highest",
    "start": "1548159",
    "end": "1555809"
  },
  {
    "text": "availability you can use both you can use a VPN and a Direct Connect or multiple direct connects and a VPN so",
    "start": "1555809",
    "end": "1563129"
  },
  {
    "start": "1561000",
    "end": "1717000"
  },
  {
    "text": "what does it look like when we want a provision direct connect to our on-premise well the first thing we want",
    "start": "1563129",
    "end": "1568139"
  },
  {
    "text": "to do is build our AWS infrastructure with better on-premise so we've got an AW SV PC we might have some services",
    "start": "1568139",
    "end": "1575039"
  },
  {
    "text": "that sit outside to you like s3 DynamoDB etc then we create a virtual gateway so",
    "start": "1575039",
    "end": "1581480"
  },
  {
    "text": "we create a V GW or a virtual private gateway and then attach it to the V PC",
    "start": "1581480",
    "end": "1586799"
  },
  {
    "text": "we want to connect to via a private virtual interface we then go and order the direct connect through either the",
    "start": "1586799",
    "end": "1592139"
  },
  {
    "text": "console or through a partner we have a lot of partners that we work with like an echo through Verizon etc and that you",
    "start": "1592139",
    "end": "1598559"
  },
  {
    "text": "can go through and many others and then you'll choose a Direct Connect",
    "start": "1598559",
    "end": "1604200"
  },
  {
    "text": "pop that you'd like to connect to so we've deployed in many pops over even the last 12 months the list is growing",
    "start": "1604200",
    "end": "1610860"
  },
  {
    "text": "so the regions and areas that we're in for Direct Connect is is growing",
    "start": "1610860",
    "end": "1615929"
  },
  {
    "text": "phenomenally is it's amazing but you basically will then have a customer device or or partner device in a cage at",
    "start": "1615929",
    "end": "1622380"
  },
  {
    "text": "their colocation facility so in this case we're in a Equinix facility in Silicon Valley and then your provision",
    "start": "1622380",
    "end": "1628620"
  },
  {
    "text": "or ask the Equinix or data center provider to provision a",
    "start": "1628620",
    "end": "1635280"
  },
  {
    "text": "cross connect and you need what's called an Loa CFA or a letter of authorization customer facilities agreement which",
    "start": "1635280",
    "end": "1640860"
  },
  {
    "text": "you'll give to the provider they'll provision a physical fiber between the Direct Connect pop which is in an Amazon cage and the device that",
    "start": "1640860",
    "end": "1647669"
  },
  {
    "text": "you've got at that facility or a partner's device and you probably want to build connectivity back to your",
    "start": "1647669",
    "end": "1653370"
  },
  {
    "text": "on-premise if it isn't in the colocation facility you'll use a wine like an MPLS IP VPN or maybe an Ethernet LAN or",
    "start": "1653370",
    "end": "1661320"
  },
  {
    "text": "something similar once you've done that you'll provision your virtual interfaces so once the physical connectivity is up",
    "start": "1661320",
    "end": "1667350"
  },
  {
    "text": "and running you can then go in and create what we call a private virtual interface or a public virtual interface",
    "start": "1667350",
    "end": "1673320"
  },
  {
    "text": "so the private virtual interface gives you connectivity to the VPC we're going to communicate with BGP and advertise",
    "start": "1673320",
    "end": "1679440"
  },
  {
    "text": "the private routes of that VPC over into your on-premise with a public via you've",
    "start": "1679440",
    "end": "1684780"
  },
  {
    "text": "got access to s3 dynamodb sqs s and as all the public services that sit outside of the VPC so that's you're going to use",
    "start": "1684780",
    "end": "1691530"
  },
  {
    "text": "that to communicate with those and not just in that local region with the public of if you can talk to read",
    "start": "1691530",
    "end": "1697190"
  },
  {
    "text": "services in all AWS region so you could talk from or communicate from Equinix",
    "start": "1697190",
    "end": "1702450"
  },
  {
    "text": "for sp1 you've got a direct connect you could then communicate all the way through to s3 and Dublin if you wanted to and we also have what's called direct",
    "start": "1702450",
    "end": "1709169"
  },
  {
    "text": "connect gateway now which gives you the ability to connect but virtual interface to a V PC in another region as well so",
    "start": "1709169",
    "end": "1716100"
  },
  {
    "text": "pretty cool all right what does VPN connectivity look like well there's a",
    "start": "1716100",
    "end": "1721799"
  },
  {
    "start": "1717000",
    "end": "1791000"
  },
  {
    "text": "few less components but again we build our AWS infrastructure we might have",
    "start": "1721799",
    "end": "1727350"
  },
  {
    "text": "some internet access here to the V PC bar and igw for example we've got out on",
    "start": "1727350",
    "end": "1732750"
  },
  {
    "text": "premises in this case again we creative actual private gateway vgw so the vgw is used for Direct Connect and it's used",
    "start": "1732750",
    "end": "1739529"
  },
  {
    "text": "for IPSec terminations so you can build instances inside of EPC and I think I've",
    "start": "1739529",
    "end": "1745080"
  },
  {
    "text": "got a slide on that in just a second but if you build a vgw attach it to a V PC you've got your",
    "start": "1745080",
    "end": "1750960"
  },
  {
    "text": "on-premise device that you define so we call that a CG W or a customary gateway then you create the VPN connection",
    "start": "1750960",
    "end": "1757649"
  },
  {
    "text": "between the two so there's really only three components to this there's the v GW the c GW on the",
    "start": "1757649",
    "end": "1764429"
  },
  {
    "text": "customer side and the VPN connection between the two then you configure the CGW from sample configuration we send",
    "start": "1764429",
    "end": "1771029"
  },
  {
    "text": "you hi P SEC comes up and note it is like is over the public Internet as well but now you've got an encrypted tunnel",
    "start": "1771029",
    "end": "1777090"
  },
  {
    "text": "where the AWS side is managed by AWS in the form of the v GW that you manage as",
    "start": "1777090",
    "end": "1782549"
  },
  {
    "text": "a customer but you don't have to actually go in and physically configure a device you don't need to run an IPSec command it's just the v GW and you can",
    "start": "1782549",
    "end": "1789359"
  },
  {
    "text": "figure it through the console which is quite simple now what if you wanted to use some marketplace for our walls or",
    "start": "1789359",
    "end": "1795629"
  },
  {
    "start": "1791000",
    "end": "1855000"
  },
  {
    "text": "something similar now we are putting a bit of a partner spin on this so you could use devices that support IPSec for",
    "start": "1795629",
    "end": "1802649"
  },
  {
    "text": "IPSec termination inside your V PC so we've got a VP see we've got our application instances we've got our own",
    "start": "1802649",
    "end": "1809789"
  },
  {
    "text": "premises again we've got a c GW our on-premise router or what we all know as a CPE we've got another subnet here and",
    "start": "1809789",
    "end": "1817950"
  },
  {
    "text": "we're deploying some VPN instances so now via the igw so before we're going",
    "start": "1817950",
    "end": "1823559"
  },
  {
    "text": "via a v GW in this case we have a public subnet with a set of instances which are accessible via the public internet and",
    "start": "1823559",
    "end": "1830159"
  },
  {
    "text": "we can build an IPSec tunnel to those instances so if you did manage a certain vendors equipment and you wanted to use",
    "start": "1830159",
    "end": "1837119"
  },
  {
    "text": "those for IPSec termination inside the Amazon V PC you can absolutely do that",
    "start": "1837119",
    "end": "1842129"
  },
  {
    "text": "and we have a whole bunch of partners that support this type of configuration as well so definitely worth while",
    "start": "1842129",
    "end": "1849330"
  },
  {
    "text": "checking out and these are deployed again through the AWS marketplace and there's a bunch of others that I didn't list on here okay so what about V PC in",
    "start": "1849330",
    "end": "1858029"
  },
  {
    "start": "1855000",
    "end": "2008000"
  },
  {
    "text": "the rest of AWS so there's AWS services inside your V PC so when we build",
    "start": "1858029",
    "end": "1864509"
  },
  {
    "text": "services if you think about the first service we launched was SQL simple cue service and that was before VPC so it",
    "start": "1864509",
    "end": "1871680"
  },
  {
    "text": "was a public service that we deployed in the public AWS realm s3 followed then we deployed ec2 in its original form so ec2",
    "start": "1871680",
    "end": "1878640"
  },
  {
    "text": "classic and after we deployed VPC we started building services inside of EPC",
    "start": "1878640",
    "end": "1884250"
  },
  {
    "text": "so things like EMR are elastic MapReduce RDS are relational database service lambda now supports in in V PC",
    "start": "1884250",
    "end": "1892430"
  },
  {
    "text": "connectivity we've got Virtual Private endpoints or V PC endpoints for things",
    "start": "1892430",
    "end": "1897900"
  },
  {
    "text": "like s3 and DynamoDB as well dns inside of e PC and then also logging with V PC",
    "start": "1897900",
    "end": "1904320"
  },
  {
    "text": "flow logs let's jump in and dive in on a couple of these see what they look like so in this case we've got an Amazon RDS",
    "start": "1904320",
    "end": "1911550"
  },
  {
    "text": "database inside your V PC so when you deploy the RDS instance you choose a V",
    "start": "1911550",
    "end": "1917940"
  },
  {
    "text": "PC and it's going to take an address like I mentioned earlier from your V PC address range so you can now secure this",
    "start": "1917940",
    "end": "1924120"
  },
  {
    "text": "with security groups you can specify that my web instances again up here and now going to talk to an RDS database and",
    "start": "1924120",
    "end": "1931230"
  },
  {
    "text": "we're going to have a certain security group around those as well so it gives you a security and construct to build",
    "start": "1931230",
    "end": "1937440"
  },
  {
    "text": "services within your V PC that aren't publicly assess accessible given that if you wanted to deploy a sequel database",
    "start": "1937440",
    "end": "1945330"
  },
  {
    "text": "using IDs you may or may not want that connected to the public internet in this case you can have a security group",
    "start": "1945330",
    "end": "1950760"
  },
  {
    "text": "saying only my web instances will talk to my database service again multiple",
    "start": "1950760",
    "end": "1956940"
  },
  {
    "text": "subnets multiple availability zones and we've got multiple IDs deployments here so we've got a standby or secondary RDS",
    "start": "1956940",
    "end": "1963840"
  },
  {
    "text": "here as well we also have things like AWS lambda that run inside of a PC so",
    "start": "1963840",
    "end": "1972090"
  },
  {
    "text": "lambda is code as a service and it runs in a V PC that we manage for you and",
    "start": "1972090",
    "end": "1977160"
  },
  {
    "text": "traditionally when lambda was first launched it was public you would have to access lambda through public elastic IP",
    "start": "1977160",
    "end": "1982650"
  },
  {
    "text": "addresses now we have lambda that we've take a elastic network interface and place it inside your V PC and that's",
    "start": "1982650",
    "end": "1989490"
  },
  {
    "text": "then addressed with the addresses within your V PC and it's addressable to your instances inside your V PC so now if you",
    "start": "1989490",
    "end": "1996600"
  },
  {
    "text": "want to do an outbound call from lambda to something inside your V PC you don't have to open it up to the rest of the world you",
    "start": "1996600",
    "end": "2002040"
  },
  {
    "text": "then have that internally inside you of EPC so pretty cool stuff all righty so",
    "start": "2002040",
    "end": "2010770"
  },
  {
    "start": "2008000",
    "end": "2040000"
  },
  {
    "text": "some best practices so many many services support running inside of EPC and the list is growing as well but some",
    "start": "2010770",
    "end": "2016470"
  },
  {
    "text": "stuff here on Virtual Private endpoints security groups release privilege and",
    "start": "2016470",
    "end": "2021810"
  },
  {
    "text": "network access always a good idea multiple availability zones again remember availability zones are what",
    "start": "2021810",
    "end": "2027570"
  },
  {
    "text": "constitute is fault domains so they have fiber feeds redundant fiber feeds power feeds etc but you want to span your",
    "start": "2027570",
    "end": "2033810"
  },
  {
    "text": "applications across multiple availability zones so like a multi zone RDS deployment etc V PC endpoints for",
    "start": "2033810",
    "end": "2042480"
  },
  {
    "start": "2040000",
    "end": "2342000"
  },
  {
    "text": "Amazon s3 so one question you might be thinking and we've got this question quite a lot from customers how could I",
    "start": "2042480",
    "end": "2047880"
  },
  {
    "text": "privately access Amazon s3 it's it's in the public realm I've got a V PC I don't want to open up the rest of the world to",
    "start": "2047880",
    "end": "2054300"
  },
  {
    "text": "access my V PC just to access s3 it's all a ws why can't I just access it privately well that's when we came up",
    "start": "2054300",
    "end": "2061139"
  },
  {
    "text": "with a concept of a virtual private endpoint so an endpoint before endpoints we've got these services sqs SNS the ec2",
    "start": "2061140",
    "end": "2068909"
  },
  {
    "text": "API endpoints lambda etc these were all existing out of the V PC so if we take",
    "start": "2068910",
    "end": "2075179"
  },
  {
    "text": "s3 and use this example to connect to s3 before endpoints we've got a route here",
    "start": "2075179",
    "end": "2080250"
  },
  {
    "text": "we've got our local route then we've got a default route via the igw again we've got an elastic IP on an instance it's",
    "start": "2080250",
    "end": "2087120"
  },
  {
    "text": "medicating out to Amazon s3 and we've got communications now we did have to",
    "start": "2087120",
    "end": "2092280"
  },
  {
    "text": "open up that instance to have a public IP we need a security group there etc",
    "start": "2092280",
    "end": "2098660"
  },
  {
    "text": "for the private subnet we could go via an out instance so we've got another",
    "start": "2098660",
    "end": "2104280"
  },
  {
    "text": "elastic IP on the node instance were now transiting through and out instance to get the s3 because we've got an instance",
    "start": "2104280",
    "end": "2109380"
  },
  {
    "text": "that we don't want publicly accessible but we want it to access s3 so instances",
    "start": "2109380",
    "end": "2115410"
  },
  {
    "text": "needed public connectivity security groups and the mindset that s3 is in the public Internet it's in the Amazon",
    "start": "2115410",
    "end": "2121560"
  },
  {
    "text": "public internet but it's public nonetheless so then we created virtual",
    "start": "2121560",
    "end": "2126990"
  },
  {
    "text": "private endpoints so what they are is they basically give you the ability to access services like s3 privately within",
    "start": "2126990",
    "end": "2133740"
  },
  {
    "text": "your V PC so now we can get rid of of our elastic IPS on instances if we need if we want to we don't need default",
    "start": "2133740",
    "end": "2141310"
  },
  {
    "text": "router pointing to an IG W so we get rid of those we don't need NAT instances all we basically have is the virtual private",
    "start": "2141310",
    "end": "2148270"
  },
  {
    "text": "endpoint we don't even really an IG W we could remove the ID W if we wanted to and have a V PC with no internet access",
    "start": "2148270",
    "end": "2154060"
  },
  {
    "text": "but we would have every access so now we use prefix lists which denote s3 this",
    "start": "2154060",
    "end": "2161680"
  },
  {
    "text": "prefix list via a virtual private endpoint so within the the local routing",
    "start": "2161680",
    "end": "2167020"
  },
  {
    "text": "table we're going to configure this route and send traffic via the Virtual Private endpoint up into s3 now everyone",
    "start": "2167020",
    "end": "2173730"
  },
  {
    "text": "generally chooses a 10100 slash 16 or a 10000 slash 16 how does this 3 figure",
    "start": "2173730",
    "end": "2180850"
  },
  {
    "text": "out that's customer a customer being customers C well we've got a specific tag that we attached to packets",
    "start": "2180850",
    "end": "2186910"
  },
  {
    "text": "transiting a Virtual Private endpoint that identifies the VP C so we know it's a 10 1 0 15 in this case but also it's",
    "start": "2186910",
    "end": "2194950"
  },
  {
    "text": "got a V PC ABCDE as well so we know where to send that traffic back to so think about it this way in the fact that",
    "start": "2194950",
    "end": "2202120"
  },
  {
    "text": "s3 is still a public service it's still going over the public aid of us backbone but now your privately talking to it via",
    "start": "2202120",
    "end": "2209290"
  },
  {
    "text": "a private IP address so you're not opening up that instance to the rest of the world alrighty",
    "start": "2209290",
    "end": "2216540"
  },
  {
    "text": "so even private subnets can talk about a virtual private endpoint this also gives",
    "start": "2216540",
    "end": "2221620"
  },
  {
    "text": "us the ability to have an ion policy so we can restrict with an iron policy on a bucket we can say I only want this V PC",
    "start": "2221620",
    "end": "2228100"
  },
  {
    "text": "to access this s3 bucket so we can have an additional layer of security there",
    "start": "2228100",
    "end": "2233620"
  },
  {
    "text": "for that public s3 bucket if it were public you can make it private and and configure an s3 ion policy there we also",
    "start": "2233620",
    "end": "2241120"
  },
  {
    "text": "have DynamoDB via a virtual private endpoint so that's pretty cool so we basically have an additional prefixes",
    "start": "2241120",
    "end": "2247360"
  },
  {
    "text": "for DynamoDB via the virtual private endpoint so recently",
    "start": "2247360",
    "end": "2254820"
  },
  {
    "text": "I know that was something else yeah we",
    "start": "2254820",
    "end": "2260160"
  },
  {
    "text": "can talk about that after come come see me yeah so Virtual Private endpoints allows access to dynamodb and s3 but",
    "start": "2260160",
    "end": "2267180"
  },
  {
    "text": "then we recently deployed this thing called AWS private link so again if we think about when we deployed lamdaur and",
    "start": "2267180",
    "end": "2274110"
  },
  {
    "text": "said ok well let's make that available inside of EPC what did we do we took an elastic network interface and we brought",
    "start": "2274110",
    "end": "2280230"
  },
  {
    "text": "it into your V PC and now you could access lambda we're basically doing a very similar thing here with things like",
    "start": "2280230",
    "end": "2286080"
  },
  {
    "text": "the AWS ec2 API so previously if you wanted to do an API call you'd have to have an instance with public internet",
    "start": "2286080",
    "end": "2291930"
  },
  {
    "text": "accessibility and you talk to the API endpoint the same thing with the elastic load balancing Kinesis streams as well",
    "start": "2291930",
    "end": "2297870"
  },
  {
    "text": "so now all of these services come in via an interface so it's not a virtual private endpoint but they're using the",
    "start": "2297870",
    "end": "2304020"
  },
  {
    "text": "interface method to be accessible within your V PC and this launched I think it",
    "start": "2304020",
    "end": "2309240"
  },
  {
    "text": "was early November so now we have additional services that reside within your V PC and can be talked to or",
    "start": "2309240",
    "end": "2315660"
  },
  {
    "text": "communicated with privately so pretty awesome stuff all right",
    "start": "2315660",
    "end": "2321150"
  },
  {
    "text": "so private link is basically you know give you the ability to reach these other services and the beauty of private",
    "start": "2321150",
    "end": "2327420"
  },
  {
    "text": "link is because we're using an ni and we're using an address within your V PC we don't actually have to do the route",
    "start": "2327420",
    "end": "2333210"
  },
  {
    "text": "table update because it's basically now within your V PC and remember we had",
    "start": "2333210",
    "end": "2338280"
  },
  {
    "text": "that local route for the V PC you'd be using that to communicate with these so",
    "start": "2338280",
    "end": "2344370"
  },
  {
    "text": "it's a little bit small here but if we did go to create an endpoint you'll notice that there are the original",
    "start": "2344370",
    "end": "2350220"
  },
  {
    "text": "gateway for dynamodb and s3 I think I'm I'm not wearing my glasses so time to",
    "start": "2350220",
    "end": "2356670"
  },
  {
    "text": "say over there as well but that now we have these additional interface private",
    "start": "2356670",
    "end": "2362010"
  },
  {
    "text": "link abilities for these other services pretty cool stuff ok and we're obviously going to be",
    "start": "2362010",
    "end": "2368940"
  },
  {
    "text": "expanding this list as we go along as well so dienes inside of e PC well it's quite",
    "start": "2368940",
    "end": "2376320"
  },
  {
    "start": "2370000",
    "end": "2419000"
  },
  {
    "text": "easy to have an Amazon managed DNS inside of e PC pretty straightforward dns resolution - yes DNS host names -",
    "start": "2376320",
    "end": "2383850"
  },
  {
    "text": "yes now when you spin ec2 instance if you enable these two attributes each ec2 instance is going to get a",
    "start": "2383850",
    "end": "2390180"
  },
  {
    "text": "private DNS name so you can reference each of these instances that you spin up",
    "start": "2390180",
    "end": "2395400"
  },
  {
    "text": "via the DNS name so pretty handy and you can do a whole bunch of stuff with route",
    "start": "2395400",
    "end": "2400710"
  },
  {
    "text": "53 in private hosted zones and probably a whole topic for another session there",
    "start": "2400710",
    "end": "2408290"
  },
  {
    "text": "okay so private hosted zones with route 3 gives you the ability to basically",
    "start": "2409160",
    "end": "2414540"
  },
  {
    "text": "configure your private hosted zone for your V PC ok so V PC flow logs",
    "start": "2414540",
    "end": "2423680"
  },
  {
    "start": "2419000",
    "end": "2488000"
  },
  {
    "text": "visibility is one of the things that that we heard from our customers that customers want so in the traditional",
    "start": "2423680",
    "end": "2430230"
  },
  {
    "text": "days you'd use mrtg you'd use net flow you'd use routers that send a sample packet rates to some visibility service",
    "start": "2430230",
    "end": "2437130"
  },
  {
    "text": "and you'd basically get some form of you know generally looks like a sine wave and your peaks and troughs etc some form",
    "start": "2437130",
    "end": "2442770"
  },
  {
    "text": "of traffic visibility inside the V PC before V PC flow logs we didn't have that there are partners out there that",
    "start": "2442770",
    "end": "2449250"
  },
  {
    "text": "do this sort of thing so there was I think BMC clear-site was one of the products that used to do this where you",
    "start": "2449250",
    "end": "2455940"
  },
  {
    "text": "could have a net flow agent on an instant sending to a net flow collector and you'd get visibility of the traffic",
    "start": "2455940",
    "end": "2461070"
  },
  {
    "text": "on your instances so we saw that there was a lack of visibility on instances and we developed this thing called VPC",
    "start": "2461070",
    "end": "2467010"
  },
  {
    "text": "flow logs and what flow logs basically is is metadata for the traffic that's going in and out of your instances so",
    "start": "2467010",
    "end": "2473640"
  },
  {
    "text": "now if you've got an instance in a couple of AZ's you can figure flow logs and that's going to send traffic to",
    "start": "2473640",
    "end": "2479550"
  },
  {
    "text": "cloud watch so cloud watch is basically going to collect these pieces of metadata and give you some visibility",
    "start": "2479550",
    "end": "2485820"
  },
  {
    "text": "and I've got a slide here where I can I can show you what it looks like but basically enabling cloud watch is pretty",
    "start": "2485820",
    "end": "2491550"
  },
  {
    "start": "2488000",
    "end": "2504000"
  },
  {
    "text": "straightforward we just click on the create flow log here for the the V PC as well and then the traffic is going to be",
    "start": "2491550",
    "end": "2501030"
  },
  {
    "text": "captured in cloud watch logs so pretty straightforward now what does that look well we've got a cloud watch log here so",
    "start": "2501030",
    "end": "2509160"
  },
  {
    "start": "2504000",
    "end": "2595000"
  },
  {
    "text": "you'll notice that there's a bunch of accepts so accept ok so this is basically source and destination port",
    "start": "2509160",
    "end": "2515490"
  },
  {
    "text": "and a bit of information about the actual flow itself you'll notice there's also a reject there",
    "start": "2515490",
    "end": "2521650"
  },
  {
    "text": "let's have a look at that one so basically UDP port 53 we've had a reject",
    "start": "2521650",
    "end": "2527619"
  },
  {
    "text": "who is this we do a dig on the IP address whoops it could be you know",
    "start": "2527619",
    "end": "2533259"
  },
  {
    "text": "internet police co or something like that but it gives you a bit of visibility into if traffic is passing through your instances or if it's being",
    "start": "2533259",
    "end": "2539740"
  },
  {
    "text": "rejected as well so flow logs is giving you the metadata on visibility for your",
    "start": "2539740",
    "end": "2544839"
  },
  {
    "text": "traffic so pretty cool stuff now we do have partners as well again to reference",
    "start": "2544839",
    "end": "2550029"
  },
  {
    "text": "our partners like data dog and spoink that are doing visualizations for VPC flow logs there's others out there as",
    "start": "2550029",
    "end": "2555609"
  },
  {
    "text": "well but we're basically allowing them to all you're sending them the cloud",
    "start": "2555609",
    "end": "2561970"
  },
  {
    "text": "watch log and there then visualizing that and you can get a bit of a visualization almost like MIT G and what",
    "start": "2561970",
    "end": "2569019"
  },
  {
    "text": "I'd like to see with flow logs in the future is net flow s like behavior I mean right now it's metadata and it's",
    "start": "2569019",
    "end": "2574779"
  },
  {
    "text": "actually quite useful but I'd love to see that expanded to include more attributes and and like what we used to",
    "start": "2574779",
    "end": "2580299"
  },
  {
    "text": "get from routers and that sort of thing but data dogging Splunk and others basically give you a bit of",
    "start": "2580299",
    "end": "2585430"
  },
  {
    "text": "visualization there and there is a white paper out there around how to build your own visualization from cloud watch as",
    "start": "2585430",
    "end": "2591430"
  },
  {
    "text": "well which is probably worth checking out okay so VPC your private network in AWS",
    "start": "2591430",
    "end": "2600900"
  },
  {
    "text": "so we've got our V PC that we built earlier we've got our public subnets we've got a private subnets we're using",
    "start": "2600900",
    "end": "2606670"
  },
  {
    "text": "V PC we're using ec2 we've got some elastic IPS associated with our two",
    "start": "2606670",
    "end": "2612430"
  },
  {
    "text": "instances in the public subnet a private sudden it doesn't have public IP addresses we now know that we can use",
    "start": "2612430",
    "end": "2618549"
  },
  {
    "text": "virtual private endpoints so if you want to talk to things like s3 if we'd like to talk to things like dynamodb",
    "start": "2618549",
    "end": "2624160"
  },
  {
    "text": "privately over virtual private endpoint we can do that pretty cool also we've",
    "start": "2624160",
    "end": "2631299"
  },
  {
    "text": "got peering so V PC peering within a region right now so we've got a V PC inside the same region we can set up a",
    "start": "2631299",
    "end": "2638440"
  },
  {
    "text": "peering connection and then communicate with that V PC so we've got private connectivity between let's say a ten in",
    "start": "2638440",
    "end": "2643839"
  },
  {
    "text": "this case you've got a ten a one actually there's a typo here on the IP address awesome we've got a 10/16 and we",
    "start": "2643839",
    "end": "2651190"
  },
  {
    "text": "can communicate with maybe a 172 or something like that you do need to have unique addresses with peering again - we've got a vgw a virtual",
    "start": "2651190",
    "end": "2659170"
  },
  {
    "text": "private gateway VPN connectivity Direct Connect connectivity so the physical",
    "start": "2659170",
    "end": "2664300"
  },
  {
    "text": "fiber that you can bring into a Direct Connect pop a VPN which you can configure over a public internet connection and we've also got cloud",
    "start": "2664300",
    "end": "2671680"
  },
  {
    "text": "watch with logs as well giving you some visibility there so you can see as we've",
    "start": "2671680",
    "end": "2677830"
  },
  {
    "text": "gone from a foundational virtual private data center we're now adding these additional services and features where",
    "start": "2677830",
    "end": "2683860"
  },
  {
    "text": "you can get things like visibility get things like connectivity get things ivett connectivity to other services",
    "start": "2683860",
    "end": "2689290"
  },
  {
    "text": "like s3 and DynamoDB etc so there's these add-ons that you can build depending upon how you want to build",
    "start": "2689290",
    "end": "2694690"
  },
  {
    "text": "your architecture so some pretty awesome things there nat gateway as well how",
    "start": "2694690",
    "end": "2704230"
  },
  {
    "text": "could I forget an out gateway that was a net gateways great actually and other",
    "start": "2704230",
    "end": "2709540"
  },
  {
    "text": "services like Amazon IDs and lambda etc existing inside you VPC wrap 53 for",
    "start": "2709540",
    "end": "2716500"
  },
  {
    "text": "private hosted zones as well alrighty so that's what a V PC really looks like",
    "start": "2716500",
    "end": "2722410"
  },
  {
    "text": "today there's a bunch of other services too now some related sessions worth checking",
    "start": "2722410",
    "end": "2727840"
  },
  {
    "text": "out for the network savvy there's a whole bunch of stuff here for the basics as well this was a foundational service",
    "start": "2727840",
    "end": "2734230"
  },
  {
    "text": "I keep building upon this scenario in net 305 have a looking the agenda check",
    "start": "2734230",
    "end": "2741490"
  },
  {
    "text": "it out it's on Thursday I think one or 145 and I'll basically take the architecture that we built here and add",
    "start": "2741490",
    "end": "2747940"
  },
  {
    "text": "services that we've deployed in the last 12 months and and see what that architecture really morphs into so feel",
    "start": "2747940",
    "end": "2754120"
  },
  {
    "text": "free to come along and check it out shameless plug we did release the aw",
    "start": "2754120",
    "end": "2759190"
  },
  {
    "text": "certified network exam certification guide recently as well check it out I'm one of the author I get any royalties so",
    "start": "2759190",
    "end": "2766620"
  },
  {
    "text": "feel free to check it out as well and that's all I've got for you guys thanks",
    "start": "2766620",
    "end": "2772540"
  },
  {
    "text": "very much we've got about 15 minutes left thank you I'll be down the front for",
    "start": "2772540",
    "end": "2777760"
  },
  {
    "text": "questions as well I've got about 15 minutes and then about another ten minutes before my next session so happy to answer any questions at all just",
    "start": "2777760",
    "end": "2783460"
  },
  {
    "text": "coming down and have a chat thank you",
    "start": "2783460",
    "end": "2787290"
  }
]