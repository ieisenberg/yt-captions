[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "- Welcome back to this",
    "start": "1170",
    "end": "2037"
  },
  {
    "text": "\"AWS TechShift: Migrate &\nModernise\" video miniseries.",
    "start": "2037",
    "end": "6670"
  },
  {
    "text": "These videos are aimed at\nindependent software vendors",
    "start": "6670",
    "end": "9480"
  },
  {
    "text": "who are currently running on premise",
    "start": "9480",
    "end": "11089"
  },
  {
    "text": "and looking to migrate to the cloud.",
    "start": "11090",
    "end": "13260"
  },
  {
    "text": "It's also aimed at those that\nhave existing architectures",
    "start": "13260",
    "end": "16360"
  },
  {
    "text": "and looking to re-architect\nto become more cloud native.",
    "start": "16360",
    "end": "20040"
  },
  {
    "text": "In the last video, we\nreplatformed the database layer",
    "start": "20040",
    "end": "23210"
  },
  {
    "text": "from the EC2 instance\nto Amazon Aurora MySQL.",
    "start": "23210",
    "end": "27369"
  },
  {
    "text": "We also introduced Amazon S3",
    "start": "27370",
    "end": "30000"
  },
  {
    "text": "as a way to store our\nstatic image content.",
    "start": "30000",
    "end": "33260"
  },
  {
    "text": "We then added Amazon CloudFront\nto cache this static content",
    "start": "33260",
    "end": "37089"
  },
  {
    "text": "closer to the end users\nusing the AWS edge locations.",
    "start": "37090",
    "end": "41730"
  },
  {
    "text": "In this video, we are going to focus",
    "start": "41730",
    "end": "43590"
  },
  {
    "text": "on automatically scaling the EC2 instances",
    "start": "43590",
    "end": "46800"
  },
  {
    "text": "that are serving the dynamic web content.",
    "start": "46800",
    "end": "49579"
  },
  {
    "text": "We'll also explore the benefits\nof infrastructure as code.",
    "start": "49580",
    "end": "52583"
  },
  {
    "text": "(upbeat music)",
    "start": "53547",
    "end": "56130"
  },
  {
    "start": "55000",
    "end": "140000"
  },
  {
    "text": "Up until now, the dynamic\ncontent has been served",
    "start": "57080",
    "end": "59950"
  },
  {
    "text": "by a single EC2 instance\nconnected to the database.",
    "start": "59950",
    "end": "63393"
  },
  {
    "text": "To scale the web server\nand increase resilience,",
    "start": "64500",
    "end": "67710"
  },
  {
    "text": "we need to add more instances.",
    "start": "67710",
    "end": "69613"
  },
  {
    "text": "To do this, we will first introduce",
    "start": "72010",
    "end": "74570"
  },
  {
    "text": "an application load balancer",
    "start": "74570",
    "end": "76600"
  },
  {
    "text": "between the CloudFront\ndistribution and the EC2 instance.",
    "start": "76600",
    "end": "80653"
  },
  {
    "text": "Application load balances are part",
    "start": "81490",
    "end": "83610"
  },
  {
    "text": "of the Elastic Load Balancing family",
    "start": "83610",
    "end": "85880"
  },
  {
    "text": "and operate at layer seven to balance HTTP",
    "start": "85880",
    "end": "88990"
  },
  {
    "text": "and HTTPS traffic.",
    "start": "88990",
    "end": "91250"
  },
  {
    "text": "They can support HTTPS termination",
    "start": "91250",
    "end": "94540"
  },
  {
    "text": "to help manage SSL certificates.",
    "start": "94540",
    "end": "97063"
  },
  {
    "text": "The ELB will balance traffic\nbetween the web server nodes",
    "start": "98400",
    "end": "101860"
  },
  {
    "text": "as well as being\nresponsible for determining",
    "start": "101860",
    "end": "104390"
  },
  {
    "text": "the health of instances.",
    "start": "104390",
    "end": "105823"
  },
  {
    "text": "If an instance becomes unhealthy,",
    "start": "106960",
    "end": "109020"
  },
  {
    "text": "it will be taken out of service",
    "start": "109020",
    "end": "110700"
  },
  {
    "text": "and the load balancer\nwon't route traffic to it.",
    "start": "110700",
    "end": "113302"
  },
  {
    "text": "Now that we have the\nload balancer in place,",
    "start": "116210",
    "end": "118520"
  },
  {
    "text": "we can create more instances",
    "start": "118520",
    "end": "120399"
  },
  {
    "text": "running the same application\nsoftware behind it.",
    "start": "120400",
    "end": "122893"
  },
  {
    "text": "Note how the new instance",
    "start": "124010",
    "end": "125540"
  },
  {
    "text": "is in a different availability zone",
    "start": "125540",
    "end": "127560"
  },
  {
    "text": "for increased resilience.",
    "start": "127560",
    "end": "129022"
  },
  {
    "text": "To avoid having to install and configure",
    "start": "129920",
    "end": "131750"
  },
  {
    "text": "the application software\nevery time a new instance",
    "start": "131750",
    "end": "134530"
  },
  {
    "text": "is added to the load balancer,",
    "start": "134530",
    "end": "136270"
  },
  {
    "text": "a template of the image\ninstance should be created.",
    "start": "136270",
    "end": "139773"
  },
  {
    "text": "In AWS, this template is called",
    "start": "142240",
    "end": "144810"
  },
  {
    "text": "an Amazon Machine Image, or an AMI.",
    "start": "144810",
    "end": "147193"
  },
  {
    "text": "An AMI contains the operating system,",
    "start": "148290",
    "end": "150890"
  },
  {
    "text": "all its configuration, software packages",
    "start": "150890",
    "end": "153790"
  },
  {
    "text": "and the data ready to\ncreate multiple copies",
    "start": "153790",
    "end": "156560"
  },
  {
    "text": "of the same instance.",
    "start": "156560",
    "end": "158083"
  },
  {
    "text": "In this simplified view\nof the architecture,",
    "start": "160830",
    "end": "163210"
  },
  {
    "text": "we can now use the AMI to create\nan EC2 auto scaling group.",
    "start": "163210",
    "end": "168203"
  },
  {
    "text": "The auto scaling group, or ASG,",
    "start": "170910",
    "end": "173920"
  },
  {
    "text": "will add and remove instances\nusing the configured AMI",
    "start": "173920",
    "end": "177700"
  },
  {
    "text": "as a template.",
    "start": "177700",
    "end": "178663"
  },
  {
    "text": "The ASG can be configured\nwith a scaling policy",
    "start": "181090",
    "end": "184459"
  },
  {
    "text": "to automatically add or remove instances",
    "start": "184460",
    "end": "186980"
  },
  {
    "text": "based on the specific metric.",
    "start": "186980",
    "end": "189260"
  },
  {
    "text": "It could be the number\nof requests per second",
    "start": "189260",
    "end": "191530"
  },
  {
    "text": "on the load balancer or the CPU usage",
    "start": "191530",
    "end": "194440"
  },
  {
    "text": "of the instance, for example.",
    "start": "194440",
    "end": "196473"
  },
  {
    "text": "Another benefit to using an ASG\nis that it can be configured",
    "start": "198980",
    "end": "202900"
  },
  {
    "text": "with a minimum number of\nhealthy instances to maintain.",
    "start": "202900",
    "end": "207000"
  },
  {
    "text": "In this case, we have\nlost an availability zone",
    "start": "207000",
    "end": "209840"
  },
  {
    "text": "so the ASG has recreated\nthe lost instances",
    "start": "209840",
    "end": "213470"
  },
  {
    "text": "in the other remaining AZ.",
    "start": "213470",
    "end": "215143"
  },
  {
    "text": "This ensures there is no impact",
    "start": "216180",
    "end": "217879"
  },
  {
    "text": "to the performance for end users.",
    "start": "217880",
    "end": "219963"
  },
  {
    "text": "The photo gallery application architecture",
    "start": "223240",
    "end": "225680"
  },
  {
    "text": "now offers scalability",
    "start": "225680",
    "end": "227579"
  },
  {
    "text": "and provides increased\nresilience and performance.",
    "start": "227580",
    "end": "231350"
  },
  {
    "text": "However, there are more components",
    "start": "231350",
    "end": "233460"
  },
  {
    "text": "than the original single EC2 instance.",
    "start": "233460",
    "end": "236790"
  },
  {
    "text": "Setting up this architecture\nfrom scratch manually,",
    "start": "236790",
    "end": "239459"
  },
  {
    "text": "either through the console or via the CLI,",
    "start": "239460",
    "end": "241950"
  },
  {
    "text": "can be time consuming",
    "start": "241950",
    "end": "243709"
  },
  {
    "text": "and creating multiple\nidentical deployments",
    "start": "243710",
    "end": "246380"
  },
  {
    "text": "of the same environment\ncould be challenging.",
    "start": "246380",
    "end": "248863"
  },
  {
    "text": "To address this challenge,",
    "start": "250060",
    "end": "251530"
  },
  {
    "text": "we should define the\ninfrastructure as code.",
    "start": "251530",
    "end": "254163"
  },
  {
    "start": "255000",
    "end": "337000"
  },
  {
    "text": "AWS CloudFormation lets\nyou model, revision",
    "start": "256990",
    "end": "260729"
  },
  {
    "text": "and manage AWS resources by\ntreating infrastructure as code.",
    "start": "260730",
    "end": "264793"
  },
  {
    "text": "Using CloudFormation, you\ncan define your resources",
    "start": "266890",
    "end": "269890"
  },
  {
    "text": "in files using either JSON or YAML syntax.",
    "start": "269890",
    "end": "273653"
  },
  {
    "text": "These files can then be\nused to deploy copies",
    "start": "276570",
    "end": "278860"
  },
  {
    "text": "of the entire application infrastructure",
    "start": "278860",
    "end": "281560"
  },
  {
    "text": "to facilitate multiple test environments",
    "start": "281560",
    "end": "284430"
  },
  {
    "text": "or individual environments per tenant.",
    "start": "284430",
    "end": "286563"
  },
  {
    "text": "It also serves as a form of documentation,",
    "start": "287780",
    "end": "290610"
  },
  {
    "text": "meaning that the environment\ncan quickly be reprovisioned",
    "start": "290610",
    "end": "293719"
  },
  {
    "text": "in the event of a disaster\nrecovery situation.",
    "start": "293720",
    "end": "297133"
  },
  {
    "text": "It's best to version control\nyour CloudFormation template",
    "start": "299470",
    "end": "302470"
  },
  {
    "text": "in a Git repository.",
    "start": "302470",
    "end": "303713"
  },
  {
    "text": "AWS CodeCommit is a managed\nsource control service",
    "start": "305819",
    "end": "309450"
  },
  {
    "text": "where you can host\nprivate Git repositories.",
    "start": "309450",
    "end": "311683"
  },
  {
    "text": "This will ensure your template changes",
    "start": "312590",
    "end": "314720"
  },
  {
    "text": "are version controlled\nand changes are trapped",
    "start": "314720",
    "end": "317390"
  },
  {
    "text": "with appropriate approvals.",
    "start": "317390",
    "end": "319173"
  },
  {
    "text": "Join us in the next video\nwhere we'll summarize",
    "start": "321320",
    "end": "323670"
  },
  {
    "text": "everything we have done so far\nand look at where to go next.",
    "start": "323670",
    "end": "327223"
  },
  {
    "text": "(upbeat music)",
    "start": "328074",
    "end": "330741"
  }
]