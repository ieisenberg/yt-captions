[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "okay we're gonna make a start those of you sitting on this side of the room that should boot in a minute hopefully",
    "start": "260",
    "end": "6799"
  },
  {
    "text": "so my name is byron cook i am talking to you today about higher standards of",
    "start": "6799",
    "end": "13110"
  },
  {
    "text": "assurance with provable security remember to look this way i'm going to",
    "start": "13110",
    "end": "18600"
  },
  {
    "text": "tell you what is provable security and I'm also going to connect that to how provable security makes the cloud more",
    "start": "18600",
    "end": "25320"
  },
  {
    "text": "secure all of the information I'm discussing more details can be found on",
    "start": "25320",
    "end": "31619"
  },
  {
    "text": "the provable security website so the provable security website has things like blog posts it has things like talks",
    "start": "31619",
    "end": "38940"
  },
  {
    "text": "by different customers describing how they're using tools from the team and there's research papers and there's even",
    "start": "38940",
    "end": "47610"
  },
  {
    "text": "a podcast with with folks involved in this space so so there's two parts to",
    "start": "47610",
    "end": "55559"
  },
  {
    "text": "the talk first I'm going to introduce provable security and we're going to go into some detail about what that means and then I'm going to connect it up to a",
    "start": "55559",
    "end": "62370"
  },
  {
    "text": "WSM inclined cloud security so provable security is the use of mathematics to",
    "start": "62370",
    "end": "69950"
  },
  {
    "start": "65000",
    "end": "113000"
  },
  {
    "text": "prove properties that we would like to hold of systems computer systems so this",
    "start": "69950",
    "end": "75930"
  },
  {
    "text": "is it comes from the foundation of it's like 2,500 years of work folks like",
    "start": "75930",
    "end": "82740"
  },
  {
    "text": "Euclid Aristotle boule Plato etc this is how we know what we know that's the",
    "start": "82740",
    "end": "89060"
  },
  {
    "text": "logic etc so there are two concepts that will be important during this talk so",
    "start": "89060",
    "end": "95820"
  },
  {
    "text": "one is the concept of a proof so a proof is a finite argument establishing",
    "start": "95820",
    "end": "103189"
  },
  {
    "text": "something in logic typically about the infinite or intractably large and the",
    "start": "103189",
    "end": "108390"
  },
  {
    "text": "theorem is a statement that has been proved so if you did if you're if you",
    "start": "108390",
    "end": "117630"
  },
  {
    "start": "113000",
    "end": "254000"
  },
  {
    "text": "did American high school for sure you'll know the Pythagorean theorem this is a problem perhaps one of the the first",
    "start": "117630",
    "end": "125390"
  },
  {
    "text": "theorems you encountered in your life this is a theorem that says if you have",
    "start": "125390",
    "end": "130800"
  },
  {
    "text": "a right-angled triangle that the hypotenuse C squared is equal",
    "start": "130800",
    "end": "137780"
  },
  {
    "text": "to a squared plus B squared this is proved I think the first known written proof",
    "start": "137780",
    "end": "144709"
  },
  {
    "text": "comes from Euclid's book of elements which is available in Amazon written in",
    "start": "144709",
    "end": "151599"
  },
  {
    "text": "approximately 300 BC a couple of interesting things to think about with",
    "start": "151599",
    "end": "158810"
  },
  {
    "text": "regards to the Pythagorean theorem so first of all the Pythagorean theorem we",
    "start": "158810",
    "end": "163940"
  },
  {
    "text": "don't know the values of the blind the lengths of the lines right so it could",
    "start": "163940",
    "end": "169069"
  },
  {
    "text": "be the length when the lines could be the B could be the length from my armpit",
    "start": "169069",
    "end": "174860"
  },
  {
    "text": "to my shoe and the other and an a could be the length from my hand to my armpit",
    "start": "174860",
    "end": "180709"
  },
  {
    "text": "right or it could be the length from here to the moon and the lengths to the Sun so we don't know the values of a B",
    "start": "180709",
    "end": "186410"
  },
  {
    "text": "and C and so for this reason the Pythagorean theorem is actually holding over an infinite number of triangles all",
    "start": "186410",
    "end": "194269"
  },
  {
    "text": "possible triangles all possible right angle triangles secondly when we're",
    "start": "194269",
    "end": "200569"
  },
  {
    "text": "applying that theorem right when you're you know doing your exams in high school",
    "start": "200569",
    "end": "205850"
  },
  {
    "text": "and you applied the Pythagorean theorem you saw you use use you saw applications",
    "start": "205850",
    "end": "213200"
  },
  {
    "text": "of it and you applied it without knowing the values again as you were doing symbolic reasoning right so you didn't",
    "start": "213200",
    "end": "218569"
  },
  {
    "text": "know the concrete values but you use the Pythagorean theorem while while keeping",
    "start": "218569",
    "end": "224030"
  },
  {
    "text": "a B and C as as pointers to values that that you may or may not may not know so",
    "start": "224030",
    "end": "232730"
  },
  {
    "text": "what I thought I'd do in this lecture is to show you what a proof looks like so we're gonna we're going to build a",
    "start": "232730",
    "end": "238209"
  },
  {
    "text": "finite logical argument that C squared equals a squared plus B squared this",
    "start": "238209",
    "end": "244130"
  },
  {
    "text": "needs to be finite so it needs to be in the time of this lecture and it needs to fit on the we got the projector back so",
    "start": "244130",
    "end": "250160"
  },
  {
    "text": "we basically fit in made the size of the the projectors and each step should be",
    "start": "250160",
    "end": "256010"
  },
  {
    "start": "254000",
    "end": "420000"
  },
  {
    "text": "easy to understand so I'm going to make a series of steps and each step you",
    "start": "256010",
    "end": "261709"
  },
  {
    "text": "should you should it should be that you're like oh I get that step and then we're gonna the end of the argument is gonna result",
    "start": "261709",
    "end": "267400"
  },
  {
    "text": "with the Pythagorean theorem holding it's not very long it just takes a couple minutes so just hang it there so",
    "start": "267400",
    "end": "273100"
  },
  {
    "text": "the first step is so I have I have a we we start with a right-angled triangle so",
    "start": "273100",
    "end": "278440"
  },
  {
    "text": "we have a B and C and the first step is to build a rectangle so imagine we have",
    "start": "278440",
    "end": "284110"
  },
  {
    "text": "a house right and the the the the house is built out of two triangles laid out",
    "start": "284110",
    "end": "290890"
  },
  {
    "text": "on the ground so what's the square footage of this house it's a times B right so this is what we would report on",
    "start": "290890",
    "end": "296590"
  },
  {
    "text": "a on a real estate website for example then imagine I took I built two more",
    "start": "296590",
    "end": "302650"
  },
  {
    "text": "extensions to the house so one of with a room of size a by a and another room B",
    "start": "302650",
    "end": "308500"
  },
  {
    "text": "by B so the square footage of this house is going to be a B plus B squared plus a",
    "start": "308500",
    "end": "317740"
  },
  {
    "text": "squared that's the sum of the three rooms and then adding another room we",
    "start": "317740",
    "end": "324430"
  },
  {
    "text": "just add another a B so now we have a a house that's actually a square and the",
    "start": "324430",
    "end": "330760"
  },
  {
    "text": "square footage is a the a squared that's the green room biess B squared that's",
    "start": "330760",
    "end": "336610"
  },
  {
    "text": "the red room plus two rectangular rooms of size a B and so it's a squared plus B",
    "start": "336610",
    "end": "343240"
  },
  {
    "text": "squared plus a B plus a B so now I'm just shifting the rooms back and forth",
    "start": "343240",
    "end": "348970"
  },
  {
    "text": "right so I'm this doesn't this doesn't affect the square footage doesn't matter",
    "start": "348970",
    "end": "354220"
  },
  {
    "text": "where the rooms are oriented in the in the house it's still B squared plus a",
    "start": "354220",
    "end": "360880"
  },
  {
    "text": "squared plus a B plus a B and then if I I just move this far triangles around",
    "start": "360880",
    "end": "366250"
  },
  {
    "text": "right so the you'll note that there were four triangles before I'm shifting their their location in the in the house and",
    "start": "366250",
    "end": "372070"
  },
  {
    "text": "so now I I have a new square that's formed from the hypothesis of each of",
    "start": "372070",
    "end": "377830"
  },
  {
    "text": "the four rectangles so I have sorry from each of the four triangles so now I have its it should be clear now that the",
    "start": "377830",
    "end": "384880"
  },
  {
    "text": "square footage of the house is also C squared plus a B plus a B so that's",
    "start": "384880",
    "end": "390040"
  },
  {
    "text": "another way of viewing it and so now if we eliminate and perhaps you know from",
    "start": "390040",
    "end": "395490"
  },
  {
    "text": "pretty early on in mathematics you can just eliminate the you eliminate the same thing from both",
    "start": "395490",
    "end": "400889"
  },
  {
    "text": "sides of the equation then the equation still holds and so now we can see that a squared plus B squared equals C squared",
    "start": "400889",
    "end": "406620"
  },
  {
    "text": "and so we've proved the theorem and I've built a finite argument which hopefully",
    "start": "406620",
    "end": "411960"
  },
  {
    "text": "each step along the way you understood that the step held and I worked my way from a triangle to the Pythagorean",
    "start": "411960",
    "end": "418710"
  },
  {
    "text": "theorem holding and so that's what mathematical proof looks like and we're",
    "start": "418710",
    "end": "424620"
  },
  {
    "start": "420000",
    "end": "535000"
  },
  {
    "text": "you know we're you know that the proof was written down for the first proof that I know of his 300 BC and then we we",
    "start": "424620",
    "end": "432479"
  },
  {
    "text": "went through the proof again and so this highlights by the way a something that",
    "start": "432479",
    "end": "438779"
  },
  {
    "text": "that's going to be very interesting from a from a cloud security perspective the difference between finding a proof and",
    "start": "438779",
    "end": "445800"
  },
  {
    "text": "auditing a proof so the finding a proof is a creative effort it's",
    "start": "445800",
    "end": "450870"
  },
  {
    "text": "computationally undecidable or intractable typically and it's involves",
    "start": "450870",
    "end": "458039"
  },
  {
    "text": "heuristics and it involves seeing patterns when looking at mathematical structures but it only needs to be done",
    "start": "458039",
    "end": "464879"
  },
  {
    "text": "once if you as you've safely stored it and there's a case there are some tragic",
    "start": "464879",
    "end": "470370"
  },
  {
    "text": "cases where proofs are found and then lost so for example for Ma's last theorem was supposedly proved in 1637",
    "start": "470370",
    "end": "477509"
  },
  {
    "text": "but the next time we saw a proof written down was 357 years later but if we store",
    "start": "477509",
    "end": "484349"
  },
  {
    "text": "the proofs then auditing them it's actually extremely easy so we can I mean",
    "start": "484349",
    "end": "489689"
  },
  {
    "text": "it's boring but it's easy right so we can take a proof that someone has written down check through each of the",
    "start": "489689",
    "end": "496020"
  },
  {
    "text": "steps and they each of the steps have been intentionally designed such that no creativity is required so if you think",
    "start": "496020",
    "end": "502199"
  },
  {
    "text": "about it conceptually computationally it's very easy to do and so it's a great task for computers to check to check",
    "start": "502199",
    "end": "508919"
  },
  {
    "text": "proofs and then these proofs are provided frequently so usually the",
    "start": "508919",
    "end": "515750"
  },
  {
    "text": "student you know every high school student in the US learns the Pythagorean theorem so repeat it often and it's easy",
    "start": "515750",
    "end": "523018"
  },
  {
    "text": "to do and then there are a number of proofs that for which we there are no we I'm sorry there are a number of",
    "start": "523019",
    "end": "528449"
  },
  {
    "text": "conjectures for which we have no proof currently so there there are there are unsolved problems as",
    "start": "528449",
    "end": "534760"
  },
  {
    "text": "a couple and then that connection that that's connects to this the next step",
    "start": "534760",
    "end": "540000"
  },
  {
    "start": "535000",
    "end": "726000"
  },
  {
    "text": "which is automated reasoning so automated reasoning is the use of algorithms to find proofs so now we",
    "start": "540000",
    "end": "547029"
  },
  {
    "text": "write code to either find proofs or audit proofs right so and and the",
    "start": "547029",
    "end": "552070"
  },
  {
    "text": "underlying the algorithms are using mathematical logic as the underlying data structure so we're trying to",
    "start": "552070",
    "end": "558040"
  },
  {
    "text": "construct things that make sense in mathematical logic and that's automated reasoning so like there was the creative",
    "start": "558040",
    "end": "564850"
  },
  {
    "text": "search by humans for proofs and the auditing of proofs we can do both with",
    "start": "564850",
    "end": "571420"
  },
  {
    "text": "software so algorithmic search is uses sophisticated heuristics it's typically",
    "start": "571420",
    "end": "577480"
  },
  {
    "text": "undecidable incomplete pspace and due to",
    "start": "577480",
    "end": "582640"
  },
  {
    "text": "the intractability or undecidability of the problem the tools will sometimes come back and say I don't know the",
    "start": "582640",
    "end": "588640"
  },
  {
    "text": "answer so it's it's you can apply a tool to a problem it may come back and say I don't know or it may say there is no",
    "start": "588640",
    "end": "595300"
  },
  {
    "text": "proof here's a counter example or it may say I have found a proof and then the algorithmic auditing of proofs is",
    "start": "595300",
    "end": "600970"
  },
  {
    "text": "actually relatively easy and there's a lot of tools for doing this so the idea is you have a simple small easy to",
    "start": "600970",
    "end": "607329"
  },
  {
    "text": "understand many eyes have looked at the algorithm that checks the proof and then you can apply that code to the the proof",
    "start": "607329",
    "end": "614980"
  },
  {
    "text": "that's been found so let's look at an example so is error reachable gonna give you a",
    "start": "614980",
    "end": "627910"
  },
  {
    "text": "moment to think about it what values of",
    "start": "627910",
    "end": "633160"
  },
  {
    "text": "the variables would lead to error to a call to error this a valuation the",
    "start": "633160",
    "end": "639670"
  },
  {
    "text": "variables no because W is greater than X",
    "start": "639670",
    "end": "646870"
  },
  {
    "text": "not less than X what if I try and fix it by making X bigger No",
    "start": "646870",
    "end": "655730"
  },
  {
    "text": "now X is greater than Y so we only have a few more cases to go if we are looking",
    "start": "655730",
    "end": "662480"
  },
  {
    "text": "at 32-bit integers so this is the we have five variables there",
    "start": "662480",
    "end": "668269"
  },
  {
    "text": "each 32-bit integers so that's 2 to the 5 times 32 possible cases we've looked",
    "start": "668269",
    "end": "673819"
  },
  {
    "text": "at 2 so if we wanted to enumerate using this method to try and show the errors unreachable or to find a case where is",
    "start": "673819",
    "end": "681199"
  },
  {
    "text": "reachable we have a long way to go and keep in mind if we're considering unbounded integers for example in the",
    "start": "681199",
    "end": "687769"
  },
  {
    "text": "case of cryptography we use big numbers then the this X this this method of",
    "start": "687769",
    "end": "694189"
  },
  {
    "text": "exploring of enumerated all the possible cases won't end in we won't know that",
    "start": "694189",
    "end": "699709"
  },
  {
    "text": "error is unreachable we might be able to find a case where error is reachable but we cannot show via an enumerative search",
    "start": "699709",
    "end": "706009"
  },
  {
    "text": "that error is unreachable in the case where the values range over arbitrary length integers so what we can do is we",
    "start": "706009",
    "end": "713689"
  },
  {
    "text": "can use proof instead and so we're gonna allude to the existence of some very",
    "start": "713689",
    "end": "721220"
  },
  {
    "text": "high-performance solvers which take problems of this form and solve them solving quickly I'm going to show you",
    "start": "721220",
    "end": "727879"
  },
  {
    "text": "kind of how they work so what we're going to do is we're going to we're going to assume that the formula from",
    "start": "727879",
    "end": "734209"
  },
  {
    "text": "the conditional expression is true and we're going to try and derive false and a derivation has a particular structure",
    "start": "734209",
    "end": "740239"
  },
  {
    "text": "so that the stress a tree structure in this case where we case split so we case",
    "start": "740239",
    "end": "745759"
  },
  {
    "text": "spit on five-week a split on Sigma etc and I'm going to show you an example in a moment where the the formula is false",
    "start": "745759",
    "end": "754730"
  },
  {
    "text": "if the all of the leaves on the tree are are false and each each piece of this",
    "start": "754730",
    "end": "762049"
  },
  {
    "text": "tree has a very regular structure and there are rules about how the tree should be constructed and if we fail to",
    "start": "762049",
    "end": "769699"
  },
  {
    "text": "derive false then often that leads to an assignment and this is a very high-performance way of finding a set of",
    "start": "769699",
    "end": "775279"
  },
  {
    "text": "values that we can use so we case split and the magic isn't the choice of the",
    "start": "775279",
    "end": "780649"
  },
  {
    "text": "case lid so the problem is you know intractable and in np-complete",
    "start": "780649",
    "end": "788650"
  },
  {
    "text": "in the case of propositional logic but there are there are heuristics for the selection of what we case split on that",
    "start": "788650",
    "end": "796090"
  },
  {
    "start": "796000",
    "end": "913000"
  },
  {
    "text": "that makes things go fast so let's let's build a treat so I'm going to K split on",
    "start": "796090",
    "end": "801730"
  },
  {
    "text": "X greater than or equal to Z and I know why that's a good choice so that's where the magic said so we're",
    "start": "801730",
    "end": "808540"
  },
  {
    "text": "case flowing on so we're going to build on the left hand side we're gonna assume X is greater than equal to Z and on the",
    "start": "808540",
    "end": "813970"
  },
  {
    "text": "right hand side we're gonna assume X is less than Z and I know why that was a",
    "start": "813970",
    "end": "820450"
  },
  {
    "text": "good choice there are other there other choices we could make we could choose I less than K but but the choice I've made",
    "start": "820450",
    "end": "826570"
  },
  {
    "text": "is gonna is going to result in enjoy so what we're doing now is we're taking the formula the original formula and we're",
    "start": "826570",
    "end": "832660"
  },
  {
    "text": "adding on the thing that we're assuming so we're adding on X greater than or equal to Z on the on the left side and",
    "start": "832660",
    "end": "839320"
  },
  {
    "text": "we're adding X less than Z on the right hand side and then note that by",
    "start": "839320",
    "end": "846070"
  },
  {
    "text": "transitivity actually the the formula on the left-hand side can't be true by transit but transitivity of less than",
    "start": "846070",
    "end": "852640"
  },
  {
    "text": "right it's not possible for X to be less than Y for lie to be for Y to be less than Z but then for X to be greater than",
    "start": "852640",
    "end": "858790"
  },
  {
    "text": "or equal to see X has to be less than Z because we know that but the X was less than Y and Y is less than Z and so",
    "start": "858790",
    "end": "865030"
  },
  {
    "text": "actually that gives us false and now about a piece of the tree as we've finished with so ok split on you you you",
    "start": "865030",
    "end": "871720"
  },
  {
    "text": "less than three and again there's some magic here and so now we've added the",
    "start": "871720",
    "end": "877450"
  },
  {
    "text": "case where u is less than three to the to the formula on the left and again",
    "start": "877450",
    "end": "883240"
  },
  {
    "text": "it's not possible for you to be less than three but also greater than ten at the same time so that results in false",
    "start": "883240",
    "end": "889240"
  },
  {
    "text": "and then this one is just from propositional logic so it's not possible for for P or Q to be true but then for",
    "start": "889240",
    "end": "896020"
  },
  {
    "text": "not P and not Q to be true at the same time so that that results in false and thus we've now proved that formula",
    "start": "896020",
    "end": "901720"
  },
  {
    "text": "unsatisfiable and only a couple of steps so rather than enumerate in all of those possible cases we used some proof",
    "start": "901720",
    "end": "908740"
  },
  {
    "text": "automation and showed that it was unreachable if it would that the the formula is unsatisfiable so therefore error is unreachable and we",
    "start": "908740",
    "end": "916030"
  },
  {
    "text": "don't need search so this is the magic is in the collection of the case splits and also the data structures in the in the",
    "start": "916030",
    "end": "923620"
  },
  {
    "text": "solvers are aware of microprocessor caches so they so the the the the",
    "start": "923620",
    "end": "930520"
  },
  {
    "text": "algorithms for querying the set of known facts while you're building that tree don't don't cause many cache misses and",
    "start": "930520",
    "end": "939160"
  },
  {
    "text": "for that reason the performance is pretty amazing for these tools so this is a graph of also there's a there's an",
    "start": "939160",
    "end": "946810"
  },
  {
    "text": "international competition of tools that that solve the problem I just showed you and this is a graph showing the winners",
    "start": "946810",
    "end": "954060"
  },
  {
    "text": "2002 to 2011 all compared on the same hardware and benchmarks and if you spend",
    "start": "954060",
    "end": "960970"
  },
  {
    "text": "a bit of time with this graph what you'd realize is that this solver the winning solver in 2002 solved only a quarter of",
    "start": "960970",
    "end": "967540"
  },
  {
    "text": "the benchmarks whereas the 2011 solver solved practically all of them and then",
    "start": "967540",
    "end": "973390"
  },
  {
    "text": "2019 solver performs better and in these",
    "start": "973390",
    "end": "978460"
  },
  {
    "text": "days the solvers handle tens of millions of variables so you can throw absolutely",
    "start": "978460",
    "end": "984490"
  },
  {
    "text": "garden gargantuan questions of the forum I showed you before to the solvers and",
    "start": "984490",
    "end": "989950"
  },
  {
    "text": "very quickly they come up with answers so P is not equal to NP but we're getting closer and closer that's that's",
    "start": "989950",
    "end": "996220"
  },
  {
    "text": "the takeaway here so so now let's talk",
    "start": "996220",
    "end": "1005310"
  },
  {
    "text": "about auditing so that proof search that we that we performed creates a a tree",
    "start": "1005310",
    "end": "1014610"
  },
  {
    "text": "that then we can audit right and so that the tools for auditing proofs that have been found undergo intense scrutiny by",
    "start": "1014610",
    "end": "1022800"
  },
  {
    "text": "the logic community whereas the tools that find the proofs are done by the",
    "start": "1022800",
    "end": "1027900"
  },
  {
    "text": "super hackers right so they produce proofs and then the proofs were audited by independent tools and that's kind of",
    "start": "1027900",
    "end": "1033240"
  },
  {
    "text": "how things go so the tools that are checking the proofs are things like caulk Isabel Hall light etc so to to",
    "start": "1033240",
    "end": "1041550"
  },
  {
    "start": "1039000",
    "end": "1190000"
  },
  {
    "text": "check a proof all we needed we're given a proof and all we need to do is check",
    "start": "1041550",
    "end": "1047579"
  },
  {
    "text": "the five cases and so that turns out to be pretty easy so we look at this case we make sure that",
    "start": "1047580",
    "end": "1054340"
  },
  {
    "text": "false is derived by that case we look at this case we look at this case etc right",
    "start": "1054340",
    "end": "1059440"
  },
  {
    "text": "and each and if a particularly for these case lists it's extremely easy because all you have to look is to make sure that the to derive formulas left and",
    "start": "1059440",
    "end": "1067000"
  },
  {
    "text": "right are the same as the formula before but with the the right key split so it's really just bookkeeping and then M in",
    "start": "1067000",
    "end": "1074230"
  },
  {
    "text": "word and then murder done so how do we handle loops so this is really the for",
    "start": "1074230",
    "end": "1081460"
  },
  {
    "text": "proving programs correct this is really the crux of the situation proof I'll basically all problems of that that most",
    "start": "1081460",
    "end": "1089980"
  },
  {
    "text": "people are interested in that can be boiled down to the question of could Adam assert fail in the program so can",
    "start": "1089980",
    "end": "1097030"
  },
  {
    "text": "this assert fail that's a question and also give you a just a second to think about it so we're assuming that the",
    "start": "1097030",
    "end": "1109559"
  },
  {
    "text": "variables range over the mathematical integers so when we have proofs of",
    "start": "1109559",
    "end": "1120940"
  },
  {
    "text": "programs with loops the proofs actually have loops in them so we have we we no",
    "start": "1120940",
    "end": "1126640"
  },
  {
    "text": "longer have trees we have graphs and so this is a to look at the proof it's we",
    "start": "1126640",
    "end": "1134500"
  },
  {
    "text": "we build a control flow graph representation of the program this is essentially how compilers see programs",
    "start": "1134500",
    "end": "1140230"
  },
  {
    "text": "and the structure of the of the graph represents the structure of the text so",
    "start": "1140230",
    "end": "1146500"
  },
  {
    "text": "we see fill the loop from node G back to G has pretty much the same structure as",
    "start": "1146500",
    "end": "1152650"
  },
  {
    "text": "the as the text we the assertion check",
    "start": "1152650",
    "end": "1158620"
  },
  {
    "text": "should go to false the and then the point of the proof search is to find",
    "start": "1158620",
    "end": "1166050"
  },
  {
    "text": "formulae to put into these boxes such that again we can apply the technique we use before to make sure that that the",
    "start": "1166050",
    "end": "1172870"
  },
  {
    "text": "proof holds and so here again I've I've pulled magic right so there are tools to",
    "start": "1172870",
    "end": "1178000"
  },
  {
    "text": "find these but these these formulae that are in the boxes now can be audited",
    "start": "1178000",
    "end": "1183280"
  },
  {
    "text": "so we we now have we have a proof and then we can audit the proof using the same mechanisms we used to check before",
    "start": "1183280",
    "end": "1188830"
  },
  {
    "text": "and so that's how we that's how we check program so we look at each of these transitions in the in the graph and then",
    "start": "1188830",
    "end": "1195400"
  },
  {
    "start": "1190000",
    "end": "1291000"
  },
  {
    "text": "we check as we validate that they that they're well-formed etc right so we look",
    "start": "1195400",
    "end": "1204220"
  },
  {
    "text": "at each one of them independently and and and and using simple tools to make sure that that proof succeeds and they",
    "start": "1204220",
    "end": "1211960"
  },
  {
    "text": "are therefore we know that the the theother can't fail so some some fun",
    "start": "1211960",
    "end": "1217120"
  },
  {
    "text": "cases so there was a proof I think it",
    "start": "1217120",
    "end": "1222910"
  },
  {
    "text": "was in 2008 of the something called the Kepler conjecture this is a theorem",
    "start": "1222910",
    "end": "1229930"
  },
  {
    "text": "about the most efficient way of stacking spheres or fruits or cannonballs and",
    "start": "1229930",
    "end": "1235810"
  },
  {
    "text": "this proof was found by humans and expressed in the whole life theorem",
    "start": "1235810",
    "end": "1241660"
  },
  {
    "text": "prover which is a tool that we use at Amazon to prove things for example about crypto another one is so there's a proof",
    "start": "1241660",
    "end": "1248860"
  },
  {
    "text": "that any map any 2d map you you only need four colors and map of the US map",
    "start": "1248860",
    "end": "1257170"
  },
  {
    "text": "of Europe so for example Germany and England you can use the same color you never need more than four colors and so",
    "start": "1257170",
    "end": "1262510"
  },
  {
    "text": "there's a proof that was mechanized was put into a into a theorem prover that",
    "start": "1262510",
    "end": "1269380"
  },
  {
    "text": "that checks all of the details in 2015 by George Gontier and then the these",
    "start": "1269380",
    "end": "1275320"
  },
  {
    "text": "this solvers I was alluding to before where there was a competition there was a parallel Sat solver that found a proof",
    "start": "1275320",
    "end": "1282700"
  },
  {
    "text": "of the Pythagorean triples problem in 2016 and that the proof had found actually was 200 terabytes in size so",
    "start": "1282700",
    "end": "1292150"
  },
  {
    "start": "1291000",
    "end": "1356000"
  },
  {
    "text": "that's that's provable security so now let's connect that up to the cloud since we're here for cloud security and this",
    "start": "1292150",
    "end": "1298600"
  },
  {
    "text": "is not a mathematics conference so in AWS we're using these techniques to",
    "start": "1298600",
    "end": "1305700"
  },
  {
    "text": "prove properties that we would like to hold of networks and policies and programs and protocols and we consider",
    "start": "1305700",
    "end": "1312250"
  },
  {
    "text": "all possible executions all possible contexts all possible configurations and we're",
    "start": "1312250",
    "end": "1319650"
  },
  {
    "text": "using similarly to how Euclid reasoned about all possible triangles we're using",
    "start": "1319650",
    "end": "1324779"
  },
  {
    "text": "essentially the same techniques and we're we're operating both above the",
    "start": "1324779",
    "end": "1331110"
  },
  {
    "text": "shared security model line and and then and then and then below the shared security line so we have tools that",
    "start": "1331110",
    "end": "1339529"
  },
  {
    "text": "enable features in AWS services and then we have tools that were applying",
    "start": "1339529",
    "end": "1345840"
  },
  {
    "text": "internally within AWS to prove the correctness of the foundations of AWS so",
    "start": "1345840",
    "end": "1351630"
  },
  {
    "text": "for example proofs about virtualization crypto networking etc so let's take a",
    "start": "1351630",
    "end": "1357929"
  },
  {
    "start": "1356000",
    "end": "1659000"
  },
  {
    "text": "look at an example so there's a blog post that you can find on the provable security website that's about reasoning",
    "start": "1357929",
    "end": "1366840"
  },
  {
    "text": "about networks I have a couple of demos so I'm going to show you one demo of its",
    "start": "1366840",
    "end": "1372419"
  },
  {
    "text": "use in in Amazon inspector where there's a feature that's using this this this",
    "start": "1372419",
    "end": "1380210"
  },
  {
    "text": "form of verification tool and then I'm also going to show you an example of how we were how we're using it internally I",
    "start": "1380210",
    "end": "1387110"
  },
  {
    "text": "want to give a demonstration on how to use the number of reach ability rules package with an Amazon inspector now we",
    "start": "1387169",
    "end": "1393029"
  },
  {
    "text": "reach ability rules package is powered by Toros the service that was developed as part of the AWS provable security",
    "start": "1393029",
    "end": "1398460"
  },
  {
    "text": "initiative to run this assessment open the inspector console and click on help me create an assessment choose network",
    "start": "1398460",
    "end": "1403919"
  },
  {
    "text": "assessments and we recommend that you run these weekly but for the purposes of this demonstration I'm only going to run this once",
    "start": "1403919",
    "end": "1409140"
  },
  {
    "text": "click run once click OK and the assessment starts running in the background for this demonstration I've",
    "start": "1409140",
    "end": "1416190"
  },
  {
    "text": "deployed a confirmation template as part of the AWS QuickStart reference deployment for the standard architecture",
    "start": "1416190",
    "end": "1422520"
  },
  {
    "text": "recorder the payment card industry data security standard this means that this account has a management VPC and a",
    "start": "1422520",
    "end": "1428460"
  },
  {
    "text": "production V PC and within the production V PC our application servers that can process cardholder data and are",
    "start": "1428460",
    "end": "1434159"
  },
  {
    "text": "not meant to be reachable from the internet here's what the ec2 console looks like there's application servers",
    "start": "1434159",
    "end": "1439289"
  },
  {
    "text": "proxy servers bash and server and approachment and post processing server I'm gonna go back to the Amazon inspector console I'm going to look at a",
    "start": "1439289",
    "end": "1445710"
  },
  {
    "text": "previous version of this assessment that's already been pleated there are 16 findings many of",
    "start": "1445710",
    "end": "1450940"
  },
  {
    "text": "them are low severity and informational severity but there's one medium severity finding that says that one of the",
    "start": "1450940",
    "end": "1457299"
  },
  {
    "text": "application servers is reachable from the internet being poor 22 and 422 is",
    "start": "1457299",
    "end": "1462850"
  },
  {
    "text": "commonly associated with SSH I'm going to click it's recommending that I click on the go into the security group and",
    "start": "1462850",
    "end": "1469359"
  },
  {
    "text": "remove access to the Internet on port 22 I'm gonna click on the security group I'm gonna look up the inbound rules and",
    "start": "1469359",
    "end": "1476289"
  },
  {
    "text": "there's one rule that allows traffic from everywhere on the internet to ssh to this instance if I remove this rule",
    "start": "1476289",
    "end": "1482919"
  },
  {
    "text": "and run the assessment again then I'll no longer have this medium severity finding so that's based on tool called",
    "start": "1482919",
    "end": "1492099"
  },
  {
    "text": "heroes on the provable security website you'll find a pointer to a scientific paper that that outlines how this how",
    "start": "1492099",
    "end": "1498519"
  },
  {
    "text": "this work essentially it takes the the semantics of ec2 networking expresses",
    "start": "1498519",
    "end": "1504429"
  },
  {
    "text": "them in logic and then we use one of three different theorem provers to to",
    "start": "1504429",
    "end": "1509919"
  },
  {
    "text": "answer questions and then and then and then return the answer and it's based",
    "start": "1509919",
    "end": "1516399"
  },
  {
    "text": "it's bit that the underlying solver is as as I described with with the graphs about proofs so now I want to show you",
    "start": "1516399",
    "end": "1523710"
  },
  {
    "text": "give you a hint about how we use it internally so there's a lot of usage for",
    "start": "1523710",
    "end": "1529179"
  },
  {
    "text": "different possible purposes but this demo gives some idea of what that looks like alright this is going to be a demo",
    "start": "1529179",
    "end": "1537549"
  },
  {
    "text": "of how you can write TIROS queries to determine if you have any paths of for data exfiltration what I have in this",
    "start": "1537549",
    "end": "1545139"
  },
  {
    "text": "account is to route tables one with a route it actually doesn't have a right to the IDW let me just add in they route",
    "start": "1545139",
    "end": "1552580"
  },
  {
    "text": "to the igw",
    "start": "1552580",
    "end": "1555479"
  },
  {
    "text": "and then another route table with a route to an AK gateway and to a B PCM",
    "start": "1561200",
    "end": "1567260"
  },
  {
    "text": "points this account also has two ec2 instances one there sorry two United's",
    "start": "1567260",
    "end": "1575000"
  },
  {
    "text": "one associated with an ec2 instance and the other associated with that in that gateway and we're gonna ask which of",
    "start": "1575000",
    "end": "1581750"
  },
  {
    "text": "these Ian's eyes and connect to the internet using two euros tourists is",
    "start": "1581750",
    "end": "1587330"
  },
  {
    "text": "gonna come back and say just this II and I the one that starts with 0 a1 which is",
    "start": "1587330",
    "end": "1593870"
  },
  {
    "text": "the one that's associated with the ec2 instance it does not report back the e",
    "start": "1593870",
    "end": "1600260"
  },
  {
    "text": "and I associated with Mackay ways we don't care about those for this query and then I'm gonna go ahead and I'm",
    "start": "1600260",
    "end": "1605929"
  },
  {
    "text": "gonna remove that that igw routes that I just added and I'm gonna asked Hirose",
    "start": "1605929",
    "end": "1615289"
  },
  {
    "text": "the same question again which of these ZN eyes can connect to the internet and it's gonna come back and say none there",
    "start": "1615289",
    "end": "1622490"
  },
  {
    "text": "are no II and eyes I can connect to the internet but what if we want to know which of these en eyes and connect to a",
    "start": "1622490",
    "end": "1631370"
  },
  {
    "text": "B PC endpoints via this IP address so this is a I P address associated with s3",
    "start": "1631370",
    "end": "1639110"
  },
  {
    "text": "which is routed to that V PC endpoint and this can I come back and say it's you know the C and I can route traffic",
    "start": "1639110",
    "end": "1646519"
  },
  {
    "text": "to that be PC endpoint and you can then take this V PC endpoint ID and check its",
    "start": "1646519",
    "end": "1651799"
  },
  {
    "text": "policy using zelkova to determine if it meets your governance requirements so he",
    "start": "1651799",
    "end": "1661970"
  },
  {
    "start": "1659000",
    "end": "1814000"
  },
  {
    "text": "alluded to something called zelkova which is another tool we have so it's it's this sister tool to terrace in a",
    "start": "1661970",
    "end": "1667399"
  },
  {
    "text": "sense it's as ec2 as terraces reasoning about ec2 networks zelkova is reasoning",
    "start": "1667399",
    "end": "1673010"
  },
  {
    "text": "about resource policies and then this tool also facilitates features in in",
    "start": "1673010",
    "end": "1682279"
  },
  {
    "text": "services AWS services so for example iot inspector so IOT device defender s3 config rules",
    "start": "1682279",
    "end": "1690740"
  },
  {
    "text": "etc so i thought i'd show you a couple of of the demos also and then I'll show you a demo",
    "start": "1690740",
    "end": "1697890"
  },
  {
    "text": "of how we're using it internally so the first is AWS configure rules if you go to AWS configure rules there are various",
    "start": "1697890",
    "end": "1705780"
  },
  {
    "text": "rules that are powered by zelkova and the demonstration that this is an",
    "start": "1705780",
    "end": "1712740"
  },
  {
    "text": "example of using silk over to evaluate whether the history pockets in my account comply with AWS configure rules",
    "start": "1712740",
    "end": "1718620"
  },
  {
    "text": "that have enabled in this example I have enabled two rules this rule checks that",
    "start": "1718620",
    "end": "1725070"
  },
  {
    "text": "all my pockets do not allow public read access and as you can see this rule is compliant meaning that serkova",
    "start": "1725070",
    "end": "1730710"
  },
  {
    "text": "guarantees that the public policies do not allow public read access this rule",
    "start": "1730710",
    "end": "1736470"
  },
  {
    "text": "allows me to specify a comma-separated list of s3 actions that i don't want any of my pocket policies to allow and here",
    "start": "1736470",
    "end": "1744600"
  },
  {
    "text": "I've configured it with s3 didn't start after enabling the rule cell Kobo",
    "start": "1744600",
    "end": "1751020"
  },
  {
    "text": "checked my history party policies and found that one of my pockets is non-compliant as you can see here if I",
    "start": "1751020",
    "end": "1756540"
  },
  {
    "text": "click on it show the pocket policy deep you can see that it allows s3 delete bucket for this",
    "start": "1756540",
    "end": "1763290"
  },
  {
    "text": "principle on my pocket now I can go to the s3 console and fix my pocket",
    "start": "1763290",
    "end": "1768420"
  },
  {
    "text": "policies by removing this permission after I do that the EWS config rule will",
    "start": "1768420",
    "end": "1774300"
  },
  {
    "text": "automatically be re-evaluated after which this rule will become combined so",
    "start": "1774300",
    "end": "1780720"
  },
  {
    "text": "that's the paper on Zhukova also appears on the AWS approval security website",
    "start": "1780720",
    "end": "1787350"
  },
  {
    "text": "it's describing again again a reduction of the semantics of resource policies to",
    "start": "1787350",
    "end": "1794790"
  },
  {
    "text": "logic and then we call a couple of logic solvers this actually turns out to be a peace based problem because of the",
    "start": "1794790",
    "end": "1800670"
  },
  {
    "text": "combination of strings disjunction conjunction negation and and",
    "start": "1800670",
    "end": "1807690"
  },
  {
    "text": "quantification and then actually with policy variables it's actually next time",
    "start": "1807690",
    "end": "1813370"
  },
  {
    "text": "problem so and then again we're using the solvers that I described in that in",
    "start": "1813370",
    "end": "1820300"
  },
  {
    "start": "1814000",
    "end": "1932000"
  },
  {
    "text": "a previous part of the talk so zelkova is also the basis of the open bucket",
    "start": "1820300",
    "end": "1827260"
  },
  {
    "text": "warning the UK and the s3 console and the new feature called block public access which I'm going to show you to",
    "start": "1827260",
    "end": "1832840"
  },
  {
    "text": "move now this is a demo of the s3 block public access it in history you can",
    "start": "1832840",
    "end": "1840220"
  },
  {
    "text": "grant access to the data store in your pocket by writing bucket policies for example this policy allows access to",
    "start": "1840220",
    "end": "1847960"
  },
  {
    "text": "this specific account so if I try to access the data from a different account",
    "start": "1847960",
    "end": "1854370"
  },
  {
    "text": "my request will be denied what happens though if I make a mistake and instead",
    "start": "1854370",
    "end": "1860440"
  },
  {
    "text": "write this policy now the policy allows access to everyone except miss account",
    "start": "1860440",
    "end": "1866940"
  },
  {
    "text": "so if I try to make the same request as before access will be granted the",
    "start": "1866940",
    "end": "1874630"
  },
  {
    "text": "history console notifies me that the bucket allows public access so you can just go in and fix it but what if I",
    "start": "1874630",
    "end": "1881500"
  },
  {
    "text": "never wanted to end up in this bad state to begin with this is what a block public access committee enabling LOC",
    "start": "1881500",
    "end": "1889030"
  },
  {
    "text": "public access ensures that you can never attach a policy that allows public",
    "start": "1889030",
    "end": "1895150"
  },
  {
    "text": "access so with block public access",
    "start": "1895150",
    "end": "1900490"
  },
  {
    "text": "enabled let's try attaching the same policy as before again we can't access",
    "start": "1900490",
    "end": "1907600"
  },
  {
    "text": "is denied so this pocket is secured now but what about other buckets well it turns out",
    "start": "1907600",
    "end": "1914980"
  },
  {
    "text": "you can enable the public access on your entire account and that's get this extra",
    "start": "1914980",
    "end": "1922720"
  },
  {
    "text": "level of security for all of your buckets enable block public access today and you can get better security",
    "start": "1922720",
    "end": "1928980"
  },
  {
    "text": "instantly have no extra cost great and then I mean as I we did for tariffs we",
    "start": "1928980",
    "end": "1936430"
  },
  {
    "start": "1932000",
    "end": "1994000"
  },
  {
    "text": "use Zhukova internally to reason about services that are for AWS but also on top of AWS so this",
    "start": "1936430",
    "end": "1943710"
  },
  {
    "text": "is a an example of some code written using zelkova that we're using internally here's the utility that",
    "start": "1943710",
    "end": "1951090"
  },
  {
    "text": "checks at any of my KMS keys are accessible from outside of my account it's powered by zelkova which checked",
    "start": "1951090",
    "end": "1957240"
  },
  {
    "text": "that each key policy is less permissive or equivalent to a policy that limits access to only my account when I run it",
    "start": "1957240",
    "end": "1970230"
  },
  {
    "text": "I see that two keys are accessible from outside looking at this second key in",
    "start": "1970230",
    "end": "1975750"
  },
  {
    "text": "the console I can see that zelkova has correctly identified it as being accessible from an account other than",
    "start": "1975750",
    "end": "1982350"
  },
  {
    "text": "mine by using zelkova I can scale this up to automatically scan hundreds of keys",
    "start": "1982350",
    "end": "1987630"
  },
  {
    "text": "across thousands of accounts and have confidence in the accuracy of the results so another activity we're",
    "start": "1987630",
    "end": "1998880"
  },
  {
    "text": "involved in is using tools to reason about the correctness of crypto virtualization and networking that go",
    "start": "1998880",
    "end": "2006830"
  },
  {
    "text": "beyond the use of of tourists and zelkova there are quite a few papers on",
    "start": "2006830",
    "end": "2012500"
  },
  {
    "text": "the provable security website that explain what we're doing so some highlights include s2 in which is the",
    "start": "2012500",
    "end": "2020030"
  },
  {
    "text": "TLS implementation we use in in AWS we've proved the correctness of the H",
    "start": "2020030",
    "end": "2027470"
  },
  {
    "text": "Mac implementation the TLS handshake implementation the drbg we've also",
    "start": "2027470",
    "end": "2032780"
  },
  {
    "text": "there's a mitigation for timing based side-channel attacks and we've proved the correctness of that mitigation again",
    "start": "2032780",
    "end": "2040460"
  },
  {
    "text": "using the techniques that I described before we've proved memory safety so that lack of memory corruption in the C",
    "start": "2040460",
    "end": "2048350"
  },
  {
    "text": "code that that boots up the first code that's that's that's executed when the when the machines boot up in the data",
    "start": "2048350",
    "end": "2054169"
  },
  {
    "text": "center we do a lot of proof on Java eight codes so there's some discussion in a paper about how we reason about",
    "start": "2054169",
    "end": "2060860"
  },
  {
    "text": "Java code for example KMS s3 and then we we end up proving a lot of properties",
    "start": "2060860",
    "end": "2068690"
  },
  {
    "text": "about the designs of system especially security protocols that are used so for example kms and so we've",
    "start": "2068690",
    "end": "2076490"
  },
  {
    "text": "there's a paper about the methodology we're using open there so I've picked a",
    "start": "2076490",
    "end": "2083358"
  },
  {
    "text": "random demo of this kind of work this kind of work is is but we use many tools",
    "start": "2083359",
    "end": "2089240"
  },
  {
    "text": "and we're proving many things this is representative of what that work looks like so we're doing some work on post",
    "start": "2089240",
    "end": "2095658"
  },
  {
    "text": "post quantum or developer bill helping libraries for for quantum for crypto in",
    "start": "2095659",
    "end": "2101299"
  },
  {
    "text": "a world in which quantum computers exist and this is some proofs this is an example of proofs of of some of that",
    "start": "2101299",
    "end": "2109010"
  },
  {
    "text": "code being developed in this demo I will use a soft proof to verify that I've",
    "start": "2109010",
    "end": "2114140"
  },
  {
    "text": "successfully fixed a bug in a field addition operation used by the site key encapsulation algorithm on the Left we",
    "start": "2114140",
    "end": "2120200"
  },
  {
    "text": "can see the implementation of FP at 5:03 this function performs modular addition over 503 bit numbers a and B storing the",
    "start": "2120200",
    "end": "2127069"
  },
  {
    "text": "result into C on the right we see a mathematical specification of the same operation in our crypto specification",
    "start": "2127069",
    "end": "2132980"
  },
  {
    "text": "language the specification is concise because it shares much of its work with other binary field operations",
    "start": "2132980",
    "end": "2138579"
  },
  {
    "text": "I've already pushed a bad change to get lab when I switch to my browser we can see that my proofs were automatically",
    "start": "2138579",
    "end": "2144380"
  },
  {
    "text": "run and that they returned a counter example the counter example is a collection of input values for which the",
    "start": "2144380",
    "end": "2149779"
  },
  {
    "text": "C program does not match the specification we can actually run the C program and the crypto specification on",
    "start": "2149779",
    "end": "2155960"
  },
  {
    "text": "the counter examples to see exactly how the to differ this will allow us to track down what's going wrong with our",
    "start": "2155960",
    "end": "2161450"
  },
  {
    "text": "function if we ran the counter example we discover that we're missing some carries we accidentally stopped the",
    "start": "2161450",
    "end": "2167779"
  },
  {
    "text": "second loop one step too soon missing the carry computation for the final word now we can fix the bug and push the fix",
    "start": "2167779",
    "end": "2175309"
  },
  {
    "text": "to the repository to see if the proofs succeed the bug we found in this case was a correctness bug once the proof is",
    "start": "2175309",
    "end": "2182480"
  },
  {
    "text": "complete we'll have not only shown that our program is correct we'll have also shown that it is free of undefined behavior such as dereferencing a null",
    "start": "2182480",
    "end": "2189440"
  },
  {
    "text": "pointers or reading from uninitialized memory we're proving correctness not simply checking it this means that a",
    "start": "2189440",
    "end": "2196130"
  },
  {
    "text": "successful proof guarantees both the safety and the correctness for all possible inputs to the function",
    "start": "2196130",
    "end": "2202200"
  },
  {
    "text": "once our proof succeeds on CI both we and other developers will greatly increase our confidence that the",
    "start": "2202200",
    "end": "2208410"
  },
  {
    "text": "function is implemented safely and correctly we have fully verified 1,000",
    "start": "2208410",
    "end": "2213420"
  },
  {
    "text": "lines of C that make up the psyche implementation this code performs field operations such as the one we just",
    "start": "2213420",
    "end": "2219270"
  },
  {
    "text": "showed elliptic curve operations the shake hash function as well as the key",
    "start": "2219270",
    "end": "2224849"
  },
  {
    "text": "encapsulation operations themselves great so I hope I've now conveyed what",
    "start": "2224849",
    "end": "2234390"
  },
  {
    "text": "provable security is and I hope I've connected it in your mind to Alec makes",
    "start": "2234390",
    "end": "2239640"
  },
  {
    "text": "the cloud more secure so provable security is the use of mathematical",
    "start": "2239640",
    "end": "2244829"
  },
  {
    "text": "logic and automated reasoning which is algorithms to find proofs and mathematical logic to prove desired",
    "start": "2244829",
    "end": "2250740"
  },
  {
    "text": "properties of our systems and this provides additional levels of security",
    "start": "2250740",
    "end": "2255990"
  },
  {
    "text": "that we couldn't that we couldn't achieve otherwise the AWS provable",
    "start": "2255990",
    "end": "2261690"
  },
  {
    "text": "security website has pointers to more information blog posts talks by",
    "start": "2261690",
    "end": "2267960"
  },
  {
    "text": "customers so for example Bridgewater associates locked me in Goldman Sachs",
    "start": "2267960",
    "end": "2274290"
  },
  {
    "text": "all three giving talks about how they're using tools from our group and then",
    "start": "2274290",
    "end": "2281550"
  },
  {
    "text": "there's scientific papers if you want to delve into the into the details and and there's podcast there are some breakout",
    "start": "2281550",
    "end": "2289440"
  },
  {
    "text": "sessions that you might find interesting so at about an hour from now a little",
    "start": "2289440",
    "end": "2297569"
  },
  {
    "text": "bit about an hour from now I'm gonna give a talk with the AWS compliance team",
    "start": "2297569",
    "end": "2304560"
  },
  {
    "text": "and coalfire which is one of our third-party compliance auditors about the use of this work to automate",
    "start": "2304560",
    "end": "2312240"
  },
  {
    "text": "compliance checking so the thing I eluded to an earlier part of the talk",
    "start": "2312240",
    "end": "2318839"
  },
  {
    "text": "about how there's a difference between finding a proof and checking the proof so that that turns into a way of",
    "start": "2318839",
    "end": "2324660"
  },
  {
    "text": "automating compliance where we can find proofs of controls and then hand the",
    "start": "2324660",
    "end": "2330619"
  },
  {
    "text": "proofs as audit evidence to the auditor and the audit can use the simple checking tools to",
    "start": "2330619",
    "end": "2335880"
  },
  {
    "text": "make sure that those proofs hold and so that's something that we're doing both with zelkova teres and also tools that",
    "start": "2335880",
    "end": "2343470"
  },
  {
    "text": "that prove correctness of programs and so I'm going to talk about that soon there's a talk that should be quite",
    "start": "2343470",
    "end": "2351840"
  },
  {
    "text": "pleasurable at 4:45 so that's in a how wrong to an dark brown wine are going to speak about the evolution of automated",
    "start": "2351840",
    "end": "2358470"
  },
  {
    "text": "reasoning technology AWS I think that's more about how all of this work came about and and how we invested in that",
    "start": "2358470",
    "end": "2365040"
  },
  {
    "text": "work and and and and so on and then there's a talk about so we're using this",
    "start": "2365040",
    "end": "2370680"
  },
  {
    "text": "kind of work to reason about crypto and so that connects to Phipps certification and so there's a talk on that so thank",
    "start": "2370680",
    "end": "2377700"
  },
  {
    "text": "you very much for your time and attention I'm gonna take questions here",
    "start": "2377700",
    "end": "2383040"
  },
  {
    "text": "for probably a few moments and then once we get kicked out I'll go about it to the to the hallway and I'll take more",
    "start": "2383040",
    "end": "2389400"
  },
  {
    "text": "questions if you have them please complete the survey in your app and and",
    "start": "2389400",
    "end": "2395780"
  },
  {
    "text": "so we can get feedback about what kinds of talks you would like to hear and what kinds of talks you don't want to hear",
    "start": "2395780",
    "end": "2401790"
  },
  {
    "text": "thank you [Applause]",
    "start": "2401790",
    "end": "2408989"
  }
]